dec cs or aam stos inc pop mov mov jo addr16 movsb cmp pusha mov fwait addr16 (bad) in xchg dec in icebp adcl jecxz cld xchg leave jl in stc fnsave (bad) and mov sbb adc adc rclb ljmp movsl outsl mov add dec lods mov sub cld mov rcll imul cmc bound cmp mov nop dec scas xchg loop addl push sbb inc sbb mov push lods cmp lahf sub cwtl sbb xor xlat clc adcb xchg popf lock mov fcomi xchg add pop fxch les fcoms pop jg mov xchg test pusha test out inc movb pop cld lret aad pop test mov test add add inc addr16 pushl popl pushl mov pushl ret rep push push mov pushf lea jmp mov push inc ror cmp xlat inc mov enter add js outsl pop mov xchg jne loope xlat sbb nop daa lret dec add ret clc cmp jb mov mov or mov xchg pop mov jp pop mov insb movsl mov inc mov loope movsb shlb jns inc add mov fildll outsl lea setge push fldl or (bad) fistl pop (bad) jns mov dec push mov xchg lea pop in sub icebp out shl pop scas dec pop fisttpl dec or jmp mov pusha mov mov lea call jmp shl pushl lods jmp mov push inc (bad) cmp lcall ret (bad) fwait mov sbb mov sub fwait in les inc (bad) dec aad cld xor xor dec sub inc add out jl xchg or lock or xchg call xor mov js mov cmpsl adc adc fstpt pause mov repz test fcoms not and sbb fisttpl cmpl fucomip daa pop lods or sub adcl pop mov sbb mov fistl add inc cmp es inc popf imul adc adc les in and lret dec popa loop dec outsb (bad) ja mov sub imul xchg aad lea bound add push sub xor xor cmp lret cmpsb fs sahf stos stos xchg mov adc pop out cmp cmp outsb jmp mov lock push andb popa mov movsb jb add lock jecxz lock mov lea jle inc call in fisubl jmp push inc lds (bad) out lret lods enter mov jns sub popf ret push mov push pop mov fistpll hlt sti fdivs sti shr push lret jne cmp mov daa cwtl maskmovq negl sbb outsb test jmp in dec mov mov stos jl add outsb (bad) cld push dec jb hlt jl pushf push push pop inc arpl test ja inc cmp push js push inc sbb iret movb call sti and and sub daa xchg aaa arpl jmp jbe lods mov les lret int3 clc pop lea aaa mov icebp rorb cmp or ss pushf push mov pushl lea call pushf adc pusha pushf lea jae pushf pushf pusha lea jne pusha jmp call or fiadd and inc (bad) iret sub pop jle xor cmp xchg xchg repnz mov insl xor pushf int mov in ds add adc lods imul imul pusha ja add fisubrl push push inc pop fs pop sub and loopne rclb adc mov push clc (bad) outsb lret mov fdivrl sbb push test mov out insb add bound inc xchg jge sub out sti and sub gs mov test (bad) imul ss mov insb sahf popa fs jo int aaa xor scas cltd les sub das mov popa iret icebp mov dec repnz add andl pop push sub cwtl lea jbe bts sub pushf btr mov sub rol mov bsr mov add cmc add and rcl rcl shr shr data16 (bad) bswap cmp sub mov bts sar not cmp add pushf mov lea push pushf pushf mov pusha push lods pushf cmp xor clc neg test cmc pushf xor jmp jp jl and inc test mov lock and ret (bad) lcall jecxz xorb mov in or or insl insb imul imul push add mov addr16 jo push jmp jo or decl jg xor insb cltd mov jmp push (bad) pop stos add or pop imul lds jle and push and jmp xor pop jno hlt dec cmpsb lcall call in jno mov xchg push sbb fldenv mov je mov adc cmp fldenv faddp add or mov in jmp and jl pusha lea jmp sub neg add neg mov neg inc rcl mov pusha repnz mov push lea jne pushf pushl seto pusha movb movsbw movsbl pushf mov movb mov lea lea pushf push movl push mov call adc push lea jmp lea jne push push call lea jae push movb lea jne pushf stos pusha pushf pushf pushf lea jmp sbb push and inc cmp (bad) cmp mov adc mov imul or sub mov xchg dec xchg push insl or ss adc and xor xchg int3 cmp (bad) stos lret rclb ret sub int3 push jmp cld dec xchg movsl cmp xchg adc mov jecxz sub subb sub cwtl daa adc sub lahf aam pop xchg rorb jno xchg ret push dec add lahf pop in (bad) adc stos movsb pusha repnz (bad) repz adc cmp adc dec pop and mov (bad) in popa movsl (bad) repnz or dec rcrb enter loopne and mov or inc in pop mov subb inc arpl jl cmp jb cmpsl aad xchg shr mov and das inc rcrb or jp in pop jmp and pop in push pop rcrl (bad) lods les mov ja iret rcrb add cmc pop xchg sub inc push add sub xor inc cmp pop jo (bad) ss dec add cmpsb dec pop jmp push jns mov js sub mov popa inc xor stos enter push push xorl push test or push xchg mov pop (bad) pop adc or arpl and or fcoml mov mov sbb fnstsw inc in fnop icebp cmc mov int3 jno loopne mov inc inc out in inc hlt lods dec mov test je jmp cmp fdiv rcl call cmpsl jmp inc sbb mov arpl mov shll out pop notl cmc mull divl lds iret mov mov and repnz jecxz sub sub adc jnp out inc push xchg pop in xor and xchg xor cmpsl lock inc jae cld dec mov iret xchg cmp pop pusha pop pop out div xor sub mov fdivrl repz jecxz js jne test data16 lret ljmp and fnstsw lds mov ljmp jmp cmp xor sub out repz mov div jmp cmpsl mov inc loop pusha (bad) mov sub pushl or nop popf push call mov cmpsl icebp jno sbb dec push mov test aas test jb in ret or dec push mov ds pusha popf mov pop test out mov push push mov cmc (bad) jbe cmp into sti add mov lret cmpsl push ror push lcall test inc jmp jge scas adc popa jge call (bad) mov mov push jl cmpsb xchg lahf bound jns lock push and ret std in cmpsl xchg lods fcomi rcr and cli mov or test push push test dec push loope imul sub ja and sub sar rorl cmp fidivl xor (bad) or mov xor int3 loopne xchg xor mov test es and nop mov and popf cld out sahf xor jae xor mov xor pop test cmpsl adc jmp pusha movl push lea jmp or call mov call cmc jmp pusha call pusha call mov not call call pusha lea je bswap push call sub pushl lea jl call push movw lea je jae mov inc mov call lods mov cmp push inc sbb out mov pop js push and cld push imul pop mov (bad) xor cmpsb xchg aaa mov push xor inc mov jge std lret insb fwait lods popa sbb jne xor popa xchg xchg ficoml add js sbb in mov (bad) jns or jle lea pop fsubs or pop je lea jmp daa scas cmp repz mov mov lea mov leave or imul fnstcw or adc jecxz pop rorb sbb push mov subb inc add push repz enter sub test adc sbb add mov fimull lea jle dec pushf call push test call jmp add inc gs outsl fs gs popa outsb fs gs add stc inc daa pusha lea jae push lea jne call lea ja inc not inc call not push jmp pushf lea jb stc pusha cmp call push push enter inc xor xlat cmpsb mov push addr16 and rorb mov xchg arpl inc rcl loop add push sub lcall sub add sar out sbb insb arpl mov sarl loop rorl movsb cwtl sbbl lret and repnz insb cmpsl ds ret fist into pop jle ja and cmp sub loopne cmp xor mov testb cld dec mov xchg sub pusha repz je int mov jmp push mov pushf pushf pushl lea jmp movsbw lea push jmp lea jne push ror call mov mov call sub test mov in sbb test scas mov push lea cmc in in pop in pop in mov sbbl or aad cltd sbb jp mov push mov outsl mov or sbb popa jge dec outsl outsb sbb pop out jl cmp in pushf cmp xor sub sti and adc and mov mov adcl int or pop mov and enter cltd fnstenv push cmp adc and mov jnp mov sub repz push inc popf out (bad) mov adc test inc pushf push or into aad stos cs pop or mov sar das push cmp and inc xlat pop out cwtl fistp sahf dec call sahf iret jne pop imul push leave sub xor sahf jnp pusha ds xor xchg aad stos jbe add jb xchg ret sbb xchg dec ret adc pop ljmp mul nop std push shlb nop jb or sub inc insl cltd xchg lods push adc push jb outsb in adc lods xor lcall stos and loope jns mov cmp dec mov adcb jae aas cmp int3 repz enter pushf or jp out scas or leave push dec cwtl cmp mov mov test std loop xor dec outsl mov dec inc ja add ja lods xlat (bad) cmpsl in add js push pushf pusha mov call push xchg lea setnp movsbw pusha movl movzbl cwtl jmp adc lds xor inc ds call jp sbb or push mov xor std (bad) mov fisubr mov jle lahf mov xchg cmp call cwtl mov fwait popf fadd inc bound push repnz mov mov decb subl or adc aad cld aas or shl fdiv jle hlt xchg push les (bad) adc pop daa incl lock stos mov test scas mov mov sub (bad) xor jle loope dec add test sbb jmp setl not dec inc pusha call inc rcl xor xchg call stc cmp pusha pushf lea ja setns dec seta jmp bt cmp cmp xchg bswap mov pusha pushf pushf sub movb lea jo push rep call pop jb inc xor cmp jb pop stc repnz mov dec dec push (bad) mov mov call pop inc mov pop jae inc mov scas sbbl stos mov sbb push in fldl mov push fisubrl sub jo sub test push leave mov mov push mov push inc jl es scas in inc test sbb inc nop mull jmp sub mov adc repnz push jnp and jg (bad) or mov lock mov or dec mov jae pop xchg gs cmp in outsl dec js pop jbe pop jb aaa mov popa push xchg (bad) mov mov pusha dec pop ror mov mov sbb iret lahf pop imul and push mov jp (bad) std push dec (bad) xor int push dec xchg push inc scas fistpl mov out into (bad) adc or add fs lds jle imul pop fist wrmsr xchg js or je pop inc xchg pop xchg xor jae mov pop xor flds sub jo mov lret out push mov icebp adc push mov call and movsl lcall dec (bad) icebp fidivrl jg push bound (bad) adc cmpsl adc in and sub pop fadd pop into lds not pushf jmp push mov movb mov push pusha lea jmp mov pushf mov push pusha pushl ret stos not pushf mov jmp aaa adc aaa push inc mov dec pop pop fwait mov inc arpl rorl adc sub cltd push ja xchg icebp jo aaa dec push adc push dec cmp adc xlat enter xchg push loop and mov xchg sbb sbb xchg sub mov mov pusha sub dec movsbw inc daa push neg push movsbl push aad bts sub not lea pusha mov pusha call pushl popl stc stc cmp call mov movsbl mov mov push lea jmp pushf dec pushf not pushf movl pusha dec bt rol call jmp push lea jae call pusha jmp cmp sbb xor inc xor int3 (bad) lret stos addr16 mov mov fwait mov mov test call adc subl mov js and jmp inc or cmp fbld add sub xor sbb leave push pop sub dec xor adc jns or mov mov xchg push xacquire dec dec test jp jns and dec iret sbb lock dec mov push jae xor dec xchg xor inc mov jp bound pop jge pop imul js and xchg push insl enter call push jge xchg jge int3 loope cmp sub mov mov faddl jo mov and pop and cltd xchg and mov sub xchg scas nop jns insl in dec jno inc fimull stos fcomps test mov insb xchg mov xor outsl push mov xchg pop mov adc inc inc cmc mov mov out mov jbe sub pop (bad) iret add mov xorl inc inc in xchg andl mov int mov mov (bad) fsubl sarl xor adc jae je (bad) adc push ficoml jns pop (bad) fwait sub ret or inc push lcall in and adc lret out je (bad) iret repnz outsl (bad) loopne scas aam aam insl lods out popf imul mov dec (bad) xchg jno loop aaa push add push (bad) sub js les sub sbb pusha pop hlt dec pop repnz aas stc adc mov xor xorl mov xor jle mov adc xchg or fadds call pop mov or ret sub and stos mov adc iret jns inc mov (bad) (bad) (bad) sbb dec test orl ret (bad) sbb jp cld mov add push cmp mov ljmp mov xlat pop roll lcall adc cwtl jle imul mov push imul shrl cmp cltd sbb inc cltd mov mov adc movsl fsubr xor mov xor cmp adc push push inc fcmovnb push or xchg rolb ffreep push movsl out pop sti push lods xchg cmp xchg out sbb scas fnop cmp sub jbe cmp repz movsb cmp scas sbb pop movsl scas xchg (bad) imul add push xchg (bad) xchg and stc fild test and fildll adc lea js pusha lea jb pushf mov stc cmp cmp pushf push lea jae add mov bsf movsbl mov sar pusha not shld mov lea pushf pusha call pop lea add add add add popa pop adc add add pop pop sldt add add sub ltr mov add inc verr cmp add add add sbb pushf out lcall mov imul adc pop push ret xor ds sbb pop fildl adc cmp xchg loope cmc clc inc jle leave or outsb ja jecxz inc (bad) insb stc sbb cwtl iret mov int sub or sbb int cmp adc and add xor jb mov pusha popf in adc dec imull rclb add call (bad) aas (bad) out sub rolb and sub mov dec (bad) les in in or xchg dec neg and (bad) adc cmp xchg lcall pop dec pushf sub push dec sarl or cltd imul js mov xchg incb dec leave (bad) int mov dec out fadds sub icebp ss inc sbb jb mov cld test cmp sbbl arpl sbb cmp inc scas loopne pop jbe test mov ret cmp (bad) mov arpl or clc sbb fs (bad) xchg ja pop pushf les sarb sarb cmp dec in mov jmp inc sbb push nop aam ds lcall lock jnp test in push xchg dec sbb cli out and and mov gs cs cmp dec mov dec or jne lods sbb stos sbb xchg cmp hlt imul mov and adc xor mov out mov or xor cli daa push int3 pushf cmp dec cmpsb stos xchg push pop xlat ss (bad) out daa mov cmp push out imul das addl clc fisubr int3 lea mov push cltd add or pop je and js add mov ss inc pop xchg pop rcr xor (bad) jb jle lods sub add push or les lods sbb cld add jnp ret pop sbb out imul int sbb lds xchg test test add pop pop test xlat mov addr16 imul xchg test mov and mov (bad) xchg negl xchg mov mov sbb or mov mov add add mov loop loopne add xor pop gs sub (bad) push (bad) adc hlt shll or push leave mov ds jb shrb ret xchg dec out (bad) mov jle dec pop sbb in pop repnz aad jo inc xor push std cmp je xchg cmp out add adc out pop xchg mov pop aad clc ja push repz mov xchg mov push dec faddp (bad) pop cs lret dec rorl inc loopne pop xchg data16 or mov loopne (bad) repz insb clc and add adc jmp sahf loopne inc cmp cmp mov push out mov or ss (bad) mov ja lret repz xchg sbb dec in lret aam push sbb add sbb add daa es into fimull scas pop popa icebp or imul cmpsl sub mov xor dec sbb sub jno mov cmp cmp pushf mov mov in mov loopne dec cmp iret pop pusha push ljmp adc push insb stos push jne lds xor iret xchg inc jb mov dec sub insl call inc (bad) js into pop into (bad) and mov popf sub xchg adc out pusha jl push push fist idivb jo in xor ret daa pushf arpl jo fbstp push insb jne pushf mov cmpsl mov mov lcall xor roll pushf stc sbb inc out scas inc les and out jle scas push test jmp xchg jg sti loopne iret out das sbb sub inc clc fldl scas jl pop mov fsubrs mov and xor ret sub jmp (bad) scas cmpsl pop xor ret das out jecxz jbe mov xor or popf stos fs push mov shr xor js subl int int3 test push pushf loope xchg add faddl fwait xchg fbstp nop inc aas lods xor cwtl inc je sub cmpsb test aam cmc add ljmp sub lods push in sbb addr16 jge add inc mov ret adc add stc mov sbb cmp add imulb imul xor (bad) pop and push test cmp pop mov and rorl push insl pop sub inc jg das jne mov xlat clc dec dec inc jns divb push cmc sbb out mov clc cmpsl sub movsl cld dec jecxz mov popw sahf mov imul (bad) mov pushl lret inc sub enter lret xor cmp lcall enter out mov fs sub in inc rcrb fcmovnu js xor xchg xchg imull inc (bad) data16 enter cld hlt pushf xor sub cmp inc mov aad movsl cmpb mov xor subl cmp or mov jnp sub inc push adcl jb mov stos ss dec arpl dec jl,pt ret xor add into jae cmp test add or jnp std sub sbb insl push jb mov xlat out popf mov jge or or mov orl pop rolb iret pop out mov sbb cli mov lods mov lock mov loop inc add add test pop push push push xor (bad) out push das aas push ljmp xor add (bad) nop and or sub fcom std push adc xor inc loopne call cmp sarb cli jne shlb in cmp adc mov icebp (bad) icebp icebp int test (bad) iret mov push pop std or in pop (bad) xor out mov inc int jo mov lods aaa fcomp sub sar or fcompl cmp (bad) jle fwait adc call inc cltd and imulb sbb out fdiv mov sahf xchg dec fs scas pop aad aas dec mov mov sti push or xor fwait or mov mov jbe (bad) rcrl test cmp mov repz lcall cmp push inc stos sahf stc push push adc rolb inc or adc lods push pusha dec pop push mov add fbld rorb hlt js dec pop pop (bad) in mov fldenv jnp xchg outsl js stos imul xchg test rorb enter (bad) lret out mov xor xchg test repnz xchg push cs leave inc pop int3 lret pop push mov xchg mov jg sahf sub das mov (bad) push lret aas adc jl sbb mov out mov adc daa (bad) js and xchg adc and mov lret jo xchg inc jg cwtl inc imul test jp iret push imul xchg pop inc es dec xchg sbb jp cs das adc movsl ret add or les outsb mov movsl outsl push leave xchg lret adc movsb ja jmp adc mov movsb dec iret mov sbb sbb mov or and loop pop icebp daa mov enter fnstenv sti mov mov add hlt fnstcw inc mov push jecxz mov jnp mov fstps fsubrs push cmp std mov js inc xlat aad arpl xchg loopne inc add add inc hlt dec or push lods ljmp pop push lret and popf dec dec inc mov or jno inc loopne cli push jns sahf lea scas clc lds push out xchg lods test cmp mov pop and add pop jecxz mov inc jbe xlat in lret sbb sub xchg inc aad punpckldq test xchg inc lock push pop adc inc mov iret (bad) cmp (bad) and mov push stos inc sub aaa jp insb push ds fcoms sahf jl cmp mov push or jno add wbinvd jnp data16 cwtl das rep lret push into cld add or outsb shr jg inc push adc cmp add pop push or lods cmp add mov and sbb lds xchg dec mov pop pusha lea add sub xor je xor rorb call popf add stos pop dec stos add sbb call sahf movsl push jp ljmp cmpsl enter out rcrl movsl lods mov je pop test or cmp (bad) imul test shr jae pop mov push rorb (bad) mov in xor stos dec mov fs adc (bad) sarl in imul fdivs mov mov pusha cmp dec leave (bad) ljmp in lock icebp pop jge cld adc xor pop jg mov ret cmpl sub and icebp insl pop jae inc dec mov jns out js dec cmp or out or xlat and pop clc imul add mov add push or add adc xchg or xor mov jmp test push loopne jbe xchg mov stos push cmpsl stc shlb jbe shll out push scas insb pusha jmp xor xor add mov push imul mov jge inc jle rcrl inc push adc lods pop or imul push xchg int3 cmpsl mov mov loope rcrl (bad) pushf js out push inc cmp and les fildll insb mov jo xor push mov scas std mov aaa push inc jae fldenv mov outsb or jg and add hlt popa insl xor sbb xchg adc lods mov aad (bad) shr inc and subl sbb pop cltd inc pop lahf inc mov push cmp mov xor stos lods (bad) xchg dec inc adc (bad) ds cmpsb mov dec xchg pop pushf xor aas lcall bound mov in dec sub hlt imul push mov add xchg gs sbb cmp pop sbb insl push or mov and mov jne xchg push scas aad stos fsubrs or addr16 out clc mov dec cwtl pusha sub imul pop ss add std sbb mov pop push push shll jb in pop arpl and div dec add push lea lds or repnz adc arpl sbb pop push lcall push out incl inc aam mov cmp jg fidivr inc mov mov loop pusha aas push cwtl pop cli or lock add push sahf mov loop push or jg ss fildl lret xchg fisubl mov jp fs jecxz inc ret adc mov mov and xchg mov mov into jge pop ds mov dec cltd pop jp cmp decb or pop jbe cwtl mov sub jp jne js jae mov fldt dec mov pop dec mov xchg add (bad) insl push jmp pop xchg jl pop jmp push jp sub inc rolb xchg xchg hlt lds xor adc nop outsb out iret int popf (bad) dec lahf cmp xchg pop cmp fcomps mov push pop cmpsl icebp popa xor jmp inc in add aas lods addr16 inc add push xchg push mov sahf jo xchg cmpsb mov mov out pop dec ret cmp jmp je push sub adc inc je outsl mov and sti xor cli in mov pop (bad) iret in sbb push (bad) rorb fwait std fwait imul sbb nopl out mov sbb add mov jne ja (bad) jp push pop stos push or sbb dec lock lret mov dec push xchg jg (bad) les jnp (bad) lock inc mov jmp push int fcomip (bad) add inc push (bad) int3 bound mov clc test imul and sti mov or inc adc (bad) aad fimul in cmpsb jnp gs popa mov (bad) dec stc xchg and add lea jne bsf mov test cmp cmp call mov pushf movw call (bad) xor pop push inc jo push nop mov (bad) xchg into or mov inc test adc or in daa sub out call inc add fdivl in scas fdiv out pushf lods aam pop mov repnz or fwait lds aaa and mov ffree fiadd pop mov addr16 adc dec int3 mov (bad) cld ret repnz cwtl testl cmpsb jns xchg inc pushf cmp mov sub and ljmp sub push mov push in pusha xlat mov cmpsl sbb xor sub pop enter mov mov insl stos xchg inc roll test (bad) or roll cmp ss push inc adc shr mov mov leave mov cmp leave rcll xchg sti clc gs mov insb repz dec fcoms inc add xlat idiv adc scas fimull jp ds or leave add xchg shlb in lods jmp (bad) into lcall clc (bad) jg jl out (bad) add cmp gs test leave arpl dec cmp xor outsl push dec int clc and cmpsl mov jbe push push rolb (bad) lret mov nop mov mov add mov inc fmull xchg xchg and xchg pop xlat jbe fisubl pop push rorb sbb pop push inc cld mov or xchg ret rolb xchg lret loop mov lods jmp rclb fwait les inc sub jecxz add repz mov ja and scas insb test dec test xor push aaa mov call sbb shrl shr std jb popf push stos movsb jns rcr movsl push sub js dec test add cmp mov cmpsb add push cld lods push ljmp sbb and adc nop xchg mov cs cltd or adc xchg cmp bound pusha lea je call push cmp jmp jmp add add insb xchg jo or addb in pop mov sbbl into or add cmp cmp cmp add cmp or daa repnz rorb jle adc cmc out push add bound (bad) sarl inc cmp addl inc loop fimull lods fbstp cs xor out mov js nop cwtl add adcl add sbb enter and fsub mov call xor inc cmp mov xchg add sbb sbb and test sub sub xor mov cmp cmp inc ret inc les dec leave dec lret dec int3 add rcll push rcll push pop fstps pop fildl pop fcompl loope loop add fs imul jmp in insl lock add jae je jne add jp jnp jl sub mov (bad) insl xchg insb jb cs inc (bad) subl inc nop mov inc jmp or mov or push insl add test mov call lock clc in and xor scas mov frstor in push push inc imul push jo jo adcb clc mov outsb popa xchg loopne or add sahf std mov jecxz pop add popa sbb jmp (bad) add cmp fadd lahf lret or js mov and pop sub in cmp fsts ljmp in lock out jbe add or xchg mov jno cmp add or movsb shrb add inc mov mov (bad) rolb lods pop arpl lds stc adc push pop pusha jmp or lea mov add fucomp lods test in xchg inc cli and add push test xchg adc and ja cld xchg xchg add mov add push imulb xchg pushf movsb fdivs addr16 sub mov (bad) xor adc scas mov lods insb xor cmp mov lahf or cld xchg (bad) fstl insb sub repz sbb push std or pop cmp adc pop add in data16 in ret sbb ds lahf mov (bad) inc ret in jmp mov inc jbe sub mov repz call shll dec dec add test adc addb shlb xchg xchg cld mov add pusha cs add repz icebp in add bound add mov out cltd popf add nop mov lahf jno add fnop or or lods cmp sbb jecxz loopne mov mov xlat roll inc aaa out sti push inc out push jb push inc jmp dec or sub insb fildl pushf xor not sbb lret push jg push cmp (bad) dec mov fldenv (bad) mov inc add mov cmp out loope mov dec pop mov adc fs popf push mov inc mov cmpsb mov sbb jecxz js jnp add jmp cmp or hlt das stc and push mov jbe (bad) loopne stos mov das adc test xor jp xor mov add push push cld dec add fnstenv stos sbb aas ljmp fadds notb addr16 rolb in pop mov nop push je stos out inc iret mov or add xlat fbstp pop jge or mov insb cli sbb jb adc jno inc sub jmp or pop sub and jmp js insb add sub cmpsb xlat sahf (bad) push add mov xchg into cmp icebp push cmp xorb andl ja jo les (bad) movsl cmc xchg inc sar popf pop xor jecxz dec (bad) mov pop or sbb push lahf sub pop insl pop push enter and inc (bad) int3 dec add ffree cmp mov inc xor push aam or popa dec add leave and incb addr16 xor pop arpl movsl imul lds xor mov (bad) adc jb sti addl pusha xlat mov jae fidivrl add repz lldt add scas dec sub add fadds inc mov lea push aaa xchg add (bad) in sub ds push add in stos mov sbb daa in adc movsl (bad) jnp lcall xor repz cltd imul insb inc mov pop mov mov inc mov xchg xor int3 adc adc mov repnz cwtl and mov mov in add sarb ljmp and js jbe pushf mov jmp inc ficoml add (bad) rorb mov pop push fmull xor cwtl add loop popf (bad) cmp lds (bad) into cmpsb push mov in dec fldcw xor lea push push xor movsb stos popf dec or sub inc push jnp in js adc mov pop (bad) push enter aas (bad) xor sub mov in (bad) gs jge sub insl sbbb in push bsf add fisubr push imul pop stc add xor ja push dec mov divl aam or push lods sbb and pop bound fadd sub shrb push add or hlt push xchg dec fildl jmp andb adc aas xor or sbb popa push mov repnz jmp or mov out ret add xor mov push mov jbe subb dec adc popf sub xor jne mov pop mov or shrl scas and xchg fcmovb ret nop cmp add shlb lret cmp sbb mov mov and add xor jg add into push lcall add notl add or daa out jg xchg jo pop (bad) and ja xchg inc pusha lcall leave das std and sub sub mov add add xchg jb or out add push js fdivr xchg (bad) aaa jo add lods jge add jae xor das and mov or and xchg data16 sub js imul (bad) mov dec lcall pusha movsb popa add xchg pop mov pop xor mov add call out and add fisubr add pop fadds imul fldt sbb fstl out mov popf cmp inc cmp imul add xlat pop dec in add fs out pop or jb xchg leave (bad) mov inc mov and nop and sbb mov adc lods mov mov add inc jp stc xorl xor insb push dec add scas dec sub inc pop cltd push mov add and adc in mov jno arpl leave inc orl pop mov cmp and mov stc add dec xor ret and sub cli add das (bad) jle lods push sbb jge ror pop fucom jns movsb add loopne pop sarl mov lret lock scas sti gs ficoml jmp out add or leave (bad) in sub inc stos std add sbb jae (bad) dec fild cmp scas xor rcrl andb xchg test sub fadds loope lds aas xor push or insl sbb xchg fidiv or xchg push dec mov add aad rclb push enter pcmpgtb (bad) into movsl es sub and inc mov sub add inc test je mov mov test xor inc daa sbb mov aas push out jecxz mov xchg out rorl ror test inc dec sub xor cmc insb shrb and push roll mov mov call aad sbb adc xor movsb iret push add pop mov and ss inc xor jbe lret mov aad pusha or cld test lods mov mov mov add add sbb add inc dec mov cmp add jge xor adc aas and adc cli mov jmp sbb pop lock std push cmp fistpll dec cmp ret cmc repz imull lret add sbb addr16 xchg or int3 mov adc add pop fxch orl and inc shrb xchg sarl xor leave jmp push arpl scas out aas clc stos or sbb jmp add mov ret adc cmp ljmp (bad) pop push jnp add call and mov sbb mov add insb lods andb sbb jge sub adc mov add fcoml add pop mov push xor push pop test out cld lods add lret pop rcrb sub lods loop jmp cmc (bad) out (bad) mov and jge dec dec in lret inc add pop dec sbb nop and xor jne xorb pop or sbb mov out sar lods pop (bad) add lods xchg popf jnp jmp sub stos or and mov add cmp or popf add lret xchg xchg inc hlt (bad) mov mov mov push inc add mov lret xchg sub mov add mov mov lds adc out nop add mov fldcw push std cmpsl fadds outsb inc in imul dec xor dec xchg xchg and cmp cltd xor (bad) in sub pop cwtl loop leave cmpsb add push mov cmp sub mov ret call (bad) ficomp rorb xchg into mov jle aaa and roll sbb jbe add cmpb xchg in pusha imul je ficoml movsb adc call adc in xchg pop fsubs jnp fiaddl mov cs pop aaa add stos in rolb pop and pop add sub (bad) insb xorb add sbb add in fimul popf or jge out (bad) pusha add xchg push sbb outsb or add sub sub mov js stos cmc subb inc dec clc je fs (bad) sarl sub push outsb adcl sub es inc lret pop in aas adc adc dec js jl sub or fldcw sbb add jle mov and jns testb xchg lret add sbb xchg lods jo push or add std jge into pop call xor rcll jo (bad) mov out xchg lods fldl xchg jl mov or mov inc xor jmp xchg outsl (bad) mov ret push out dec out andb hlt jbe inc add ja pop pop jecxz add lea dec cs mov pop (bad) decb ja leave es push adc popa inc fdivrl jae push pop mov and mov loope add popa push sbb xor or pop jg mov cmpb pop andb mov cmp sub out add mov adc loope jb sbb push icebp pop cmc aad jnp add mov or mov mov jp mov mov and jae jo mov mov push fwait add add in faddp xor movsl je (bad) fisttpll clc add iret mov fs test scas stos in jne out mov dec mov mov xchg punpckldq jae push je rolb and fdivrs inc add add xor je add loop cmp add add subl mov aad add sbb into fsubrl and das test adc adc aas (bad) fsubl cmp scas add stos and jnp add jl pop popf (bad) in inc push int scas daa gs (bad) bound mov jecxz add jne add mov pop int3 mov mov or add lahf int cmp in jbe or lods jge mov pop push shrb add repnz sahf adc add xchg std add xor icebp jno xchg mov xor mull add mov cmp inc into mov les setge xor stos call arpl cmpxchg (bad) push ljmp outsb int3 fldenv jg add sbb ja push pop push ljmp cmc jne add dec mov jmp icebp sbb pop add cmp je jns inc add xchg pop sahf inc jno testb sarb pop mov add lods or add mov dec mov cli or in sub insl mov push stos ds add aad inc lret xchg add cmp push add and enter or mov push popf xchg add sbb fdivs lahf shrb shll xchg repnz fildl cmpsb push rolb pop mov sahf enter fistp add cwtl push aas fstl hlt sub and clc fcoml data16 roll je icebp test inc or repz cvtdq2ps add out adc mov mov int3 and mov xor add mov lret inc xchg dec std cltd sbb push push mov movsw mov fs rcll sub dec dec pop fdivl add mov fnstenv dec mov cmpsl xchg mov and js push lahf add (bad) stos loop adc inc ffree inc int3 aad lcall (bad) add sahf subl xor lea and sub je pop dec jnp push mov xor stos sbb or xor fildl fdivp test lahf mov add int rcll cmp fld and in test outsb fildl mov xchg in ja inc add pop mov and inc movsl test cltd push mov dec add jbe add sub push sbb mov cmp pop call dec inc outsl mov rolb and and pop cld cmc xchg js mov cmp hlt negb sbb arpl shll pusha sbb pop xor rcl jbe jl add dec xor mov mov arpl xor fwait xor inc idiv dec xorb call add sub loop test inc jge xchg sahf pushl pop add sbb fadds movsl pop (bad) mov xchg ret dec subb dec clc imul sarl (bad) or test add ret pop dec push add pop mov sbb jl enter shlb insb push add ss orl adc dec inc pusha and inc jecxz call jns add pop push jnp push into sbb stc push mov fwait lahf lds mov das (bad) jno xchg xor repnz and inc ds jge lods stc lock pop daa push push cmp add jne nop or fild inc or add out inc add xor adc jg jbe outsl stc sarb xchg scas or and and addr16 add lods dec mov cltd mov cmp cmc fwait js das insb icebp push mov lcall adc mov cmp add push mov (bad) stc fistp jp or cltd mov sub add cmp enter dec add push cmpsb mov add movsb js inc and mov das jge mov pop push dec (bad) or sub loope sbb adc xchg adc adc add pop cmp out mov sbb fild stc sbbb and js je sub ret xor sub lret outsl add movsb adc jbe fimull and pop ja subl stc andnps mov dec add dec test push mov movb js jge adc outsl push je mov and xchg mov in pop adc aam add mov mov andl lds mov les into cmc xor dec popf jb inc or popl pop ds xor push add sub xchg dec repnz and xchg mov jbe daa inc pop jbe clc roll lods jp popf xchg fildl pop dec push sub or fs cmp adc js pusha adc or imul int3 subl cmp xchg dec push mov xchg inc cltd rcrl mov adc fisttpl dec adcb out push add cmpsb outsl add sbb add sub or popf aas or mov or add (bad) fsts cmpsl jg add stos or ret xchg pop or out std sub test adc push (bad) in lret xchg test xchg fnop nop dec scas out pop pop xchg scas sbb push mov mov mov pop scas dec pop xchg sbb jl xor into mov add xor xlat add sbb mov rorl xor mov push add sub dec in fdivr out jp add cmp xchg lds cmp lods ss add inc icebp sbb popl and add vpunpcklbw int add xchg mov push adc pop popa add xor pushf inc lods inc fcoml mov test sub push xlat add xor fiadd and lret push imul or lods dec cli xchg std sarb ljmp add dec add jne xchg je cmp push ret sbb movsb rol lret add lds insb sbb cmp imul in mov inc ljmp mov das call push movsb imul xchg divl and mov fldcw add aad jae jb or outsl arpl inc pusha sbb add testb pop aas loope mov pushf dec add mov add push pusha mov and test add sbb add loopne outsb add cmp cmpl add push out mov add adc stos sub testb jp or inc mov ljmp out pop sub fcoms (bad) sti cmpsb pop loop mov aas jp (bad) push cmp icebp (bad) pusha setne aad inc pusha (bad) repz cmpl ret add push (bad) pop in add mov cld xor mov push sbb lods inc mov enter imul notl xlat add mov xchg cmp cwtl cmp mov aad iret cmpl pusha out jo add add imul add jg mov (bad) pop nop add notl mov es lret addb movsl and cmp rcrl sbb push out ss mov and mov xor adc addb mov scas int cmp xchg outsl add inc enter lret adcl add jmp fistp mov and leave sti repnz add int3 es and jo sbb xchg cmp ficomp add dec inc insb fistpl dec add int3 or push jl add js sbb test jl shl adc mov mov movsl sub sahf gs in pop add imul int nop repnz das fisubl sbb xor sub divl push push aas outsb mov ret inc dec pop sub mov stos (bad) push adc repnz fisttpl add xchg jl jg movsb mov insb mov cmpsl pop mov negb testl js cmp fidivl and mov dec inc into in popf ret mov xor test and xchg rorb jl cltd pop add and in xorl cmpsl scas sbb mov pop adc je add stos mov pusha andl ds test ficomp icebp fcompl adc aam into mov test sub inc add stc cli mov add adc sahf or add cmp rcrl or testl psadbw into xor sahf add repz inc in mov bound in xor or cmp jl cmp movl sbb (bad) pop popf mov mov xor clc js add mov jecxz xchg inc in pop push subl imul cmp sti lcall shll push mov add loope sbb je movsl test push jno test jmp cmp add addr16 sub les cmp or (bad) aad push pop add test or mov cmp add lret ret (bad) in add sub add rcrb jnp rolb jbe bound xchg pop add data16 into decb add dec dec test inc cli adc jmp imul jge lret out lea inc lock (bad) pop add clc outsl lods adc adcb mov pop (bad) add sub mov jne dec mov xchg cmpsl cwtl js push or iret add pop arpl fdivl xchg add or and push rorl add loope pushf adc aaa stos (bad) adc add jae push arpl mov fildl cmp into sub pop inc sbb push xor jbe sub add xor pop repnz cmp xchg mov xor push xor enter int3 jns adc jbe popf inc jl into jo cmpsb leave decb add xchg outsb test mov std or fmull aaa add mov rclb jae andl xchg xchg adc push push xor test xchg leave or addr16 clc pop cmpsl ljmp dec fist pop clc pop mov lods cmp nop jb fldcw jbe fiaddl insl sub pop push scas push jle test jnp xchg cmpsl pusha inc cmpl cmp sbb push xchg jnp sub xchg aam int sub and sti push out inc enter cmpsb push dec add xor inc add sub (bad) dec jns,pt xor cmp bound xchg mov pop add dec aam clc out adc insb sub popa pop addl nop ret test xchg mov mov push mov pusha push dec add ficom loopne jmp (bad) push cmpsb pusha pop loop sub jns (bad) cmc sub aas mov dec add inc sbb add xor test mov pop lea pop xchg mov sti lahf mov jmp xor scas bswap xor jbe pop add cmp push sahf dec xchg inc pop mov test mov cli fsubs mov inc insl push jae pusha pop add call gs sub xor inc push push cmp test xchg jecxz mov add test lock xchg mov clc insl add push xor and (bad) inc lcall sbb (bad) jo cmp push das stos pop jge and cmpsl xor insb fwait psubw jbe mov divb add pop push popf mov or add in dec mov xor sub xor or push jg add xor popa fbstp or mov inc int3 xchg ret add mov in add dec in sbb lds ret fiaddl rorb popf inc cmpb cmp mov imul ret or lret push out jmp sub dec mov pushf add xchg or jno lret rclb sub add xchg imul and mov pop mov pusha add cmp jno mov in pop add movsl pop popf das mov (bad) xchg mov fwait movsb adcb inc inc repnz stos nop add shlb loope pop cli (bad) cmc push adc (bad) iret pop inc int3 movq pop xchg xchg add ja xlat add sbb mov fidiv outsb xchg cmpsb push mov pop insb mov add je dec push add addr16 and pusha xor fwait jo testb loop shr cmpsb add pop sub add fincstp out sub lods jg jnp cltd jb cs aas add lcall test ds sahf ret pop sbb insl push and enter lock stos js add inc or mov movsl cwtl mov rclb xchg add push (bad) (bad) sarb inc mov stos jecxz pop fwait test js fildll or hlt int3 adc lcall repnz and imul in mov push scas mov sub and push bound or sub mov mov cmp ja js inc or test shrb inc std jge ja clc fnstsw int add mov in cmp cs js rorl out mov rcll je std rolb scas loope addr16 idivb mov test in icebp ljmp mov sbb push aam cld jp cmpsb and test push fs add inc repnz jae add in fild fsubrs mov inc dec mov jle out add or add add push paddq out ja popf inc in add mov sti aaa gs das sbb stos dec sub dec xor sbb xchg push pop cmp addb setg adc sub mov (bad) mov ljmp mov jno sbb fstpt sub add jne dec jge scas js dec sbb sub lea repnz jno sub mov add stos (bad) fcoml mov or sbb push dec pop jmp hlt enter xor add mov add dec jo psubsw add jmp movsb cwtl sahf out mov iret jg mov cltd les mov cmp and sub xchg dec cmc loop addb ljmp add pop sbbl xchg xchg add adc insl sub outsb or int aam (bad) lret xlat loope pop add cmpsl (bad) icebp sbbl and sub add (bad) add pusha sbb sbb dec (bad) sbb (bad) (bad) jae pop lods xor pusha xor (bad) arpl insb ret sahf js jecxz inc addl mov pusha inc sub add dec mov popl xor add mov (bad) xor sbb mov adc cmp insl and cwtl add push sbb push pop pop cmpsb ds mov sub inc es xor daa push lret jecxz fstpt test pop decb xchg pop push out add loopne add ljmp mov sti mov sbb mov rsqrtps xchg dec cmp adc pop negl std mov cmpl lods add test jge cmp bound xor ret add gs cmp or mov (bad) shrb and jmp (bad) cli and outsb push pushf rcll out inc into add xor int push lahf inc pop lods aam add jnp stos popf (bad) out add out and outsb (bad) mov pop lahf les ja and add push jnp add adc lret lds mov mov and jge mov mov jne add add adc mov lods imulb sbb cmpsl push pusha add push mov mov mov jns sbbl into push jmp inc pop push mov sbb mov add test sub push idivl xlat shlb push add or add sub dec add push daa leave xchg jl ja popf push subb xchg sbb add cli (bad) hlt dec jl add inc cwtl xchg rcll imul idivb loopne push test add out cwtl sub xchg test fsubr test dec mov subb inc add (bad) in jl sub out mov sar xchg stos add cmp jns test daa insb movsb xor iret mov and push fldl add dec scas xor add pusha push repnz jg dec add stos mov add int3 adc add data16 mov add daa stc cmp xchg sbb add jmp pop fildll push add mov push cld dec fnstenv xor outsb xorb cmp cmp popf cs add adcl mov mov fbld pop (bad) loope inc into or call pop add insb mov sbb xor jns inc jecxz scas mov fldcw xor inc add inc jns push pop add push cmp dec leave sahf decl jbe int3 inc imul inc mov add pop lret add mov mov add repnz or jmp ss mov scas lea cmp ljmp sarb sbb in adc mov fwait sub inc push and repz inc pop lret mov and das jmp sub les sbb dec mov pop sbb xchg dec lcall test lahf rcr jmp mov jne call int3 subb jle in sbbb and xor clc popa xchg add xchg out pop cmp sub jl pop ds sbb or and (bad) fiaddl (bad) repnz aad icebp or nop popf les adc outsb test js pop and pop cld into xor inc scas sahf nop fiaddl test lods js aas rolb fcmovnu inc sbb sbb sub inc pop xchg inc pop jo pop ds add cmp pusha pop and ret adc inc ficom push add bound add roll cli mov add mov sbb mov add test cmpsl pop push lea ds adc out xor add push jb jne sbb adcb mov test fs add pop mov data16 and add adcl fs jae add inc cmp fistpll or stos roll cmp dec jno add jmp movsl dec jp push les rolb pop mov pusha cwtl stc cli add sbb jbe data16 rcrl cmp add or inc add test scas cmpl fs jno pusha inc cmp mov sahf dec mov dec sub aas add mov inc xchg xor imulb xchg cltd inc mov mov adcl je (bad) jae jbe jge jo rcll xor stos push repnz fstpl rolb sbb ret jae sbb int3 mov jecxz push add lods jno add jnp jmp pop adc dec inc fs push cmp inc inc xchg mov fsubrl movsb (bad) fnstcw adc pop mov add call add dec or inc dec clc add aad test les lods or mov insl cmpl dec push int3 cltd lret pop aam test push scas add xor xor adc in ss dec pop pop inc add mov jns push mov add ds mov xlat inc and add and mov push and jecxz xor and ret mov call jbe stos push add hlt (bad) pop sarl imul inc add enter div jbe or sub or pop dec pop out sahf push scas or xlat gs in add sub repz add push push jp pop sbb add mov cltd add jbe mov mov ret fiadd push stos repnz loopne ds sub push mov xorl xchg in sahf lods jl js test jns (bad) pop (bad) hlt inc (bad) mov sbb add rorb sub lret add xchg adcl adc add mov in add aad (bad) jne fld andl inc add adc mov je adc jbe (bad) inc push (bad) decl stc orl cmpsl jg inc out repnz xor sbbb loopne xlat ret int3 flds jbe dec lret add push call jno add test add xor lea (bad) cli hlt push int add ljmp test imul scas jmp outsl mov ja add std pushf push test cmp cmp or clc mov aam add aas add mov (bad) fucompp mov mov pusha sbbl pop subl mov addr16 mov mov std popf xor sub jle arpl push mov pop xchg dec xchg jg xchg iret sbb sti cs or pop pop jge push and ss movsl add or jle jle sahf sbb inc out add cwtl xchg (bad) shll push iret inc int popl lahf popf lret js subl icebp cli arpl xchg jb inc jg add addr16 dec sbbb push and pop insb aaa sbbb aad mov push js out sub shlb xchg lods add push sbb mov lds fildl add fs add sbbl add sub std outsb jge add cli mov cmp cld or xor iret fadd xchg in pop add mov mov aaa mov push xchg outsl xor cltd mov mov addr16 add jmp mov clc pop sbb dec pushf or inc notb cld dec and arpl subl js js jne add dec dec add jnp daa hlt mov (bad) mov jmp or fnstcw or cli add std add aaa cmp add mov xchg daa xor mov inc mov mov push pop push aaa aas scas pop pop loopne pushf push adc dec push sbb inc cmp xchg aam (bad) jnp enter add sub icebp call and mov and jb and xchg lds adc popf repz cmp xchg pop dec and or fucomip add add pop scas int lods sbb jne test add flds adcl int3 jl je cmpsb add sub add sub xlat icebp and jo sub jg cmp mov stos adcl add and sarl dec repnz loope push mov inc add jge andb mov mov sbb rcll adc dec inc xorb (bad) jb pushaw add add fdivrl sub push loopne loope sahf test mov pop jb imul out jbe add adc arpl outsl push jg pop (bad) out test sbb test imul leave add jb fsubrs pop test push mov aam inc enter cmp sub aad leave jge repnz add xchg ds lods iret xor andb adc (bad) lcall icebp (bad) cmp mov lret sub adc cmp cmp subl fisttp xchg xchg popf adc mov jbe aas call jl inc cmp sar xchg addr16 leave xorb xchg xorb ret push dec add jecxz repz pop repnz cmp imul sbb push inc mov push andl cwtl shrl add push in and cli push aam add dec addr16 int3 test std nop out (bad) movsb inc mov rorb mov add lods les scas cmp (bad) adc push or xor add enter movsl add inc mov adc add mov sahf cmp (bad) mov ss push mov inc xchg ficomp cmp sub cld gs xchg add adc mov loopne inc in bound push aad sub (bad) push xchg es roll inc (bad) loope mov stos mov cmc cmp imul cmp sti pop push std loopne jo add fldenv add push cmp popf push dec (bad) pop mov lods (bad) pop cmp jmp inc or aam xchg cwtl das add mov xchg add adc add (bad) mulb add mov pop sbb inc xor pop add xor nop add xchg insl mov or dec test inc out inc rolb mov sub inc push adc movl loop testl cwtl cmc and mov sahf stos and mov mov push stos cmpl lcall cmp fsubrs das mov dec dec movsb inc cmpsb lock lods (bad) fidiv mov push cmp andb mov dec pop aam adc (bad) addl and leave cmp xor call subl add mov add and or inc sbb ja mov pop xchg loopne sub xlat mov jbe or dec loop adc push mov lock inc mov inc stc outsl xchg xor add ficomp mov xchg push lahf fadds add pop ret jnp and aaa add dec fild enter mov cmpsb cmpsl xor adc js cld add push or pop cmp leave dec hlt xchg jbe out inc mov mov xchg enter fwait push cld cs pop xorl dec cltd dec adc das cs data16 outsl adcl dec add daa fwait mov aaa popf sarb add pushf cmpl xchg rorl mov fdivrp (bad) loope lock lret data16 test (bad) decb mov push sti jo cmp inc stc imul xor add outsl adc pop arpl adc in pop add stc lcall jecxz push jnp movsb ret add inc xlat or mov add into inc stos and xor testb movsl xor push mov or sahf jno inc inc jp cmc (bad) in jno cmp mull mov ret addl int3 pop dec test or fild jmp mov repnz (bad) fimul int3 jnp add dec es mov pop je out shlb lock jmp mov (bad) inc adc dec mov cltd xor or stos mov inc jae push xchg or or adc lret rolb and ffree mov inc jecxz lahf std adc xor mov push aad fildl adc fadds (bad) mov daa push push mov add adc mov dec popf mov scas cmp out pop jge add pusha xchg ja mov stc push cwtl adc push add hlt in adc cmp fildl jge out (bad) or pop or cmpl add mov into adc clc add inc shr sar mov dec push add or lock pop and sbb jns,pn xlat in xor inc jge ljmp scas mov jb mov ret jae or add insb dec mov add xlat out pop mov test jecxz pop adc sarl or pop push add or in add push xchg sbbl pop add call jnp add cmp xchg and pushl add dec cli xchg sub sub mov xlat mov arpl (bad) cmc add and sbb fwait hlt inc inc pop (bad) cmp pop lahf divb pavgb pop out cwtl xor dec sbb pop pop loopne adc xor fcoms frstor int3 and cltd insb ss add idiv or push mov mov clc pop loop sub add out add mov jge mov cmp mov test inc out xchg pop pushf add movsl and inc pop add push push or jmp push mov sub movl dec aaa pop pop add and iret cmp dec (bad) (bad) jp inc mov out int add gs pop add fdivr inc fstpt mov scas xor arpl and jnp jo shlb pop stos xchg (bad) mov jae jge push add mov add sbb xchg mov pop jb cmpsl orl nop in je xlat push add sbb fmulp inc add out inc out xchg loopne sub mov add jns sbb and movsl lock outsl add or sahf icebp js,pn adc cwtl pop mov dec push pop and push andl pushf or mov jmp and add cmp adc fwait lcallw sbb leave hlt mov in (bad) je and inc adc insb cmp lods mov or xchg inc lea fmulp and (bad) sarb (bad) mov xor jne dec cmc test adc shlb dec jle push mov xchg xor jae push fsubrl add adc add fisubr or jo cmp adc adc sub add ds aas add pusha mov add test mov add popa dec mov movsb lods and mov repz xchg mov mov fnstcw jbe xchg pop mov int3 inc jecxz push add jp xchg adc inc ja mov imul ds inc push mov xchg mov mov sbb sub add xchg mov or cmpsb cmc mov jne es and (bad) cmp orl jnp lret adcb add in mov add lret or xor add inc cmp loop mov add xchg inc adc push pop repz jg add minps add pop pop int inc add fstpt xchg popa mov adc pushf add or dec jge add xchg jne lods in mov mov xchg push xor xchg add stos push aam test adc mov add jmp pop mov sub pop add mov rorl roll test sbb push add cmpsl cmp or jmp or std outsb pop cmp add xor es mov cltd add das scas outsl sbbl rcrl leave (bad) xchg movsl and inc or cli push dec loope incl jnp sub orl call xchg sbb mov add xor mov adc imulb pusha add scas mov test ja lods add incb xadd mov (bad) leave pop cmp inc mov loop imul add jns fisubrl and add pushf int mov sbb push xchg xchg add sbbb cli lahf push fiadd or xor cmp mov out add mov subl pop add (bad) addr16 addl mov test jnp sbb sub sub je add pusha adc or into mov cs mov jo in and lret dec or mov insb mov les out pop xchg xchg rcrl xor sti push adcl insb ficom data16 mov stos jecxz fsubs mov add mov push pop icebp pop and addl xor or xor es add push mov (bad) cmpl mov dec jecxz inc loop pop dec or jg pop cltd add adc add inc fwait push enter jae inc pop pop (bad) roll js lahf xor (bad) jge inc add cwtl mov mov stos add pop and pop jle add xor nop mov cwtl add ss rolb mov fs mov and add cwtl cmpsb rcrl xor or rclb loop cmp (bad) iret sbb push add je cmp popf or in jbe jp orl es lock add xorl adc leave add or mov xor sub int lods xorb jbe std pop xchg out cs jmp push in dec jnp test xor (bad) cld mov push mov lock cmp adc add mov std in pop jecxz adc pop js xchg cmp stos outsl add call stc int3 pop adc movsb dec inc mov pop fsubs mov push xor xchg pop (bad) fscale add sarl sub jo notl pop pushf cmp xchg add ret or add cmp sbb fs adc sbb aad sbb lret pop xor arpl add push adc int3 fild das cmp loop sbb enter dec dec mov sbb rcll jp mov jns stc fnstsw xor jmp sub cmc gs jecxz (bad) pop mov popa outsb add inc add mov bound in mov cmp adc jecxz jecxz pop pop and pop add jl jae jge rorb mov cwtl jmp or jle add mov mov andb jecxz ds add das gs xorl mov js jge xchg mov jo mov sbbl sbb bound mov mov xor aad adc sbb jne mov pop xchg adc jl mov popf orl adc fadds (bad) push rcrb add adc arpl add inc pop cmp cmp icebp das pusha sub jl rolb fidivrl mov push jb pushf js iret movsl mov pop outsb dec jae add or (bad) arpl pop xchg mov add and xchg clc dec aas cmpb mov add xor (bad) das pop xchg out repnz and push add jmp or sar paddsb popa test nop jl es mov jl pop mov add shlb xor mov mov or sbb add sbb daa int mov cmp mov push or mov fstl push jge adc hlt and cltd jo and lret ds xor lods rclb mov inc jns mov or scas or addl outsl ja (bad) jmp sbbl dec add dec inc inc scas xchg cwtl sarb call sub repz push fidiv sub cmp pop lock shr lret dec (bad) add add sti and add ja jnp lds popa test lock push push push add mov inc dec stos add repz mov mov into mulb in mov sbb mov test mov and mov jle lcall jge out enter dec dec ret sbb adc sub hlt adc mov sahf push fiadd xor cmp xchg add daa cmp es xor adc push fld1 jns mov pop fsubrl pop mov add push lods int3 rcrl mov dec jo dec and mov add mov mov gs cmp stos add iret aaa push lods jnp add add adc incl add inc inc repz fiaddl mov cmp test inc add int3 (bad) fwait mov sbb lcall xchg ds push cmp pop and int3 add iret cmpsb sahf (bad) lds or or pop xchg stos insl add add daa and fs bound sarb pop cli cmp push loop mov or mov sbbl mov mov sbb lahf xchg fsubrl xor add pop jae mov ret add (bad) sbb stc and out jno movsl inc addr16 push add sbb nop jp add jl push fbstp jp cmp sti cmpl dec cs or (bad) cmp push cli xor lea add add cwtl fistpll cli repz loopne sbb add imul cmp jp dec mov aam into xchg ljmp xchg mov add inc (bad) lock and fdivrs in cs jmp outsb xchg lcall mov push (bad) push add aad xor sbb dec dec das jle lods add loope (bad) push mov jno push dec pop push addr16 add mov (bad) adc cli jb pop add and sbb cmp mov cs inc (bad) loope cli push xorl add jae sub les add in jne,pt and push cmpsl shll cmp xor adc ret add sbb add stos and adc test add xchg cmp add icebp adc sahf fisttpll fwait les pop dec cltd add lds out cmp scas dec leave push add xchg js mov fcmovne inc outsl xor test sub push movsl lret movb int add xchg sti or aaa aad popa and pop scas add cmp sbb cmp jo push insl inc out sub das adc jo add dec add imul in movq mov or (bad) sub inc in pop incl xchg addl push hlt outsl inc sub add jb dec repnz sti adc cs dec (bad) (bad) add (bad) pop xchg popa cmp dec and jnp push mov cmp les xchg sahf and push bnd inc add popf orl fs cwtl dec jns sbb jo fadds add mov imul xchg mov mov xlat loop sti test lods cmp xor dec xchg sbb (bad) push add and adc dec (bad) ja jp andl (bad) aaa mov cmpb inc add inc call mov push sbb cmc outsl jae xchg enter ret cmp mov adc xchg add aad std jns sbb orl je in mov lods insb insb pop in es xor push arpl and int cwtl fcmove jnp add jne sub sbb subb jp in jecxz xor inc fiadd mov mov mov cmp pushf adcb adc xchg push adc sub loop mov lock xor jae or sbbl pusha fs push ja insb pop fimull sbbb jle dec add xchg and mov mov jp add mull pusha add les fistp jmp adcl inc fldt xor sbb inc inc sub lea push inc mov bound test cs sbb pop xchg movq add loopne adc xlat ds cmpsb sar aaa xor orl add (bad) jno sub pop add cltd add xor loope in data16 mov mov mov in fadds ret pop xor js sub mov (bad) out dec pusha or pop cmp sbb sub test pop icebp xchg jle sahf add jno (bad) fistl or cmp repnz sub mov movsb jb inc add dec cmp push popa add (bad) ljmp dec pop xchg test jnp test add xor or xchg mov shl mov add pop cmp fiadd int (bad) sbb mov scas mov lds dec rcrb negl jle xlat inc jnp or add cmp pop sti xor je ja into imul dec add add pop cmpl out sarb (bad) js test ret xor xchg loop jp xor mov cmp sbb xor ljmp and cmp mov pop add mov xor popl sub pop pop dec nop push add push add pop test xor jno push clc stos inc inc mov xchg scas loopne dec mov aas mov cli fnsave sub mov fadds mov sbb and xor loope add call fldl jecxz push cmp or sbb aas add and xchg fcoml ret std xchg pusha jp fisub pop lea rorl jno subl jl mov push rcrb add add mov sbb scas lods into mov test inc and in pushf mov dec roll inc dec jb les lods sbb cs and (bad) jae xchg xchg ljmp inc sbb cmp icebp daa inc (bad) in clc int3 das mov (bad) std push jecxz inc negl dec hlt shr push and add cltd stos and adc dec push sbb pop inc push out sub mov in add outsl cmp fwait std jno (bad) mov push inc mov sub jge mov pop dec pop sub push cmp scas dec fisubl popa inc add sahf pavgw add nop sbb inc sbb add xor (bad) mov movsl inc sbb sbb out sbb pop jns (bad) cwtl mov inc pusha sub ret mov sbb push pop stos jns jo test add or movsb inc dec popl or mov dec iret ret mov or push add xor sbb sahf int3 add js sarb jg call (bad) (bad) adc sbb push movsl cmp fisubr rcll inc repnz push and push add arpl mov addl mov pusha movb icebp aam cs add iret out test pavgb xor add mov add lods loopne imul mov (bad) xchg jmp pusha xchg pop push mov pop jo mov mov pop test add les repnz pop sbb iret add lcall dec pop into inc lcall inc pusha jno flds push outsl fdiv addl adc add insb fcomi inc pop add inc les xchg bound jno mov repnz out mov into add and mov adc aad movsl das ljmp (bad) mov cmpsl mov (bad) rol cmp jno xor inc cmp or mov or int3 pop jo loop test add pop mov sti sub inc mov aas scas add xor enter pop add xor pop add ss push cmp mov add jge fmuls add loopne mov sbbl pop inc pop jbe mov cmpsb (bad) jb in mov les fcomps jecxz ret jb cmp pop inc stc add pop iret push or inc imul fistpll movsb adc in xchg cmp sbb cli add ror das out and xchg pop clc add pop fidivr add or add adc in jbe sbb jnp popa jo jle pop add xchg out lods pop lahf clc mov fadds add dec mov add and sbb call cmpl jb fwait mov or mov add lret ljmp and and pushw insl add jne,pn inc test jle out add imul outsl add inc int cmpsl push cltd inc add mov xchg or or pop pop jne adc cmp lcall adc jg orl adc push add sbb clc test sti ficoml movl add adc dec or push jns mov cwtl mov xchg (bad) sub roll push rcrb xor mov sbb fistpl stc andl insb xchg jns cmpb push stc int jo mov es aad jecxz enter mov imul pop push push adc xor aas sarb adc out add (bad) add pop imul stos lcall sub icebp in pop add out rcrl push repz aad add mov cmp add fiadd pushf push mov nop shrl jo xchg adc push mov lods add xor and loop xchg outsb orl bound aaa (bad) pusha imulb or pop add out push cmp xchg aas add xchg (bad) mov movsb inc add jns fsubrl xchg fldl lahf cli push add (bad) out add and push cs cmp enter adc das pop xor or loopne std xchg push nop xchg add mov sub add inc cs xchg mov sub push test mov in jb jns add pop popf cld add and movsl jb add es movl mov xor xlat add pop ljmp adc push mov mov add loope cmp inc aaa add sub je adc call (bad) testb jo dec nop movb sbb add add mov xchg inc pop dec fstpt jnp mov cmpsl mov (bad) and jge sub add jle mov call in sub or int out enter lods inc mov adc iret sbb mov add sahf push jbe xchg push add ja pop add ret mov sbb notb push sbb add insb mov int iret mov stos stc dec out inc es xchg repz ja push mov pop inc mov or jmp push mov (bad) and mov cmp nop test cmp add adc add jo mov sub (bad) xor negb push sub adc enter imul sub adc push or dec mov fmul insb lcall push mov sub pusha cli add es fdivl mov in test or in in adc mov mov dec push lods lret call xchg sbb pop push cld lcall jecxz orb dec jl xor jge inc inc jae rcl add pop or (bad) je pusha imul jp add xchg in mov inc jnp mov cwtl push fisubrl add adc nop pop out lds jmp pop inc xor roll xchg aas ror stos leave pop mov and inc adc xchg lahf add pusha popf popa xchg xorl xor sub pop inc pop mov dec cmpsl add mov adc inc cmp fnop cltd or cmpb arpl icebp es movl sub pusha sbb test (bad) adc mov mov cltd add ret push jo scas in (bad) ficomp mov xchg data16 inc ret aaa add xchg cltd fwait decl sbb xor mov std add push daa mov push out inc push adc xchg (bad) std push hlt dec push inc mov lock ret add ret adc (bad) mov fmull mov cmp in pop dec or mov jb xchg (bad) sbb orl and test mov fiadd cmpsb xor adc mov and jecxz mov repz rorw dec loope (bad) inc sbb push add inc into add in mov fimul dec out bound xlat (bad) and add aad jl and stos add jb mov fs and lret sbb push inc mov lock test dec mov mov ret mov and out andb pop xchg dec push jae xchg (bad) mov and adc pusha andb imul xor sbb sbb outsb je inc xchg push mov jl sahf (bad) adc mov mov add push hlt add cmp add add ret addl push dec add or iret sbb lds xchg test jo push xchg les sbb test pop mov (bad) xor cmp test add divl add popf mov or faddp outsb add stos insb pop jp adc or orb add js xor push (bad) arpl push xor in jae cmp jbe jg xorb (bad) adc sbb mov out ss adc aam dec enter jp or inc xlat add rcr sti fnsave xor icebp sbb fnstcw mov ret sub push out push jo lds xchg add push dec adc lds jge in pop lret mov call test outsb xor lahf mov cmpsl push add enter push mov rolb pusha in mov mov subl je push add cmp add pop iret sub inc add xor cli mov loope call sub pop push inc mov aam aad bound iret movsb sub cmp mov loopne pop xchg leave push imul xchg jecxz cmp lret insl add jo addr16 test pop imul movsl jo (bad) lahf mov jp jge mov xlat add cwtl adc arpl pop adc (bad) dec inc add fs dec add add add pusha sub inc adc (bad) iret dec push cs add push stc insl in add rcll ja popa js int3 xacquire fild xchg push sub (bad) pmulhuw bound pop sbbb cmp mov and push imul add sbb jnp add jns lret hlt mov outsl in pop add cltd add and je icebp hlt mov sbb adc inc add pop loopne mov scas and cmpsl add loop mov mov cmp mov add mov or push cmp pop pop jns inc add pop addr16 push add lret add jb in xchg repnz movsl mov lcall mov fucomip cltd add rcrb push jbe mov call and jae arpl inc mov add test adc js (bad) lods jae inc pop cs (bad) in cmp cmpb mov lea das fs sbb sub ljmp pop js sbb shr jae jge repnz adc adc add in aam fist or sub orl bound lea pop and mov xchg add mov or mov push jge xchg mov adc pop imul xlat adcb mov repnz sbb dec push sbb add push add iret cmpsl ljmp xor xchg inc out add inc scas cmp mov jo dec sahf dec push inc mov enter dec jno in sti call push pop mov cmp cmpsl mov ret or xor inc jle (bad) test jne jge inc cmp xor adcl fidiv push jno push in or mov lahf cmp cli mov xchg call xor xchg lock lret add lret scas push cmp test add mov xchg out test cmpsb adc push sbb test jne mov inc add loopne fnstcw xor jl xchg jecxz jno pop xchg and inc sub add mov or popf js pop (bad) aaa test or sbb loopne fs add xchg aaa mov add test xchg lods pop mov (bad) (bad) (bad) push int movsl add mov push add mov pop mov ds and sbb rolb daa mov out add push xchg add add push mov add sbb js add scas insl jns in push mov lea lret loop cmp or sbb addb cmp int3 ljmp rol xchg int push (bad) push cld mov mov stc jbe sub cmp repz pusha mov xor test fldenv fsubrs dec mov inc mov jns add ja or inc xchg pop dec inc sbbl xor pop pop test enter jbe or mov scas mov das pushl add cmpsl fdiv out lret add add xchg nop insl mov mov (bad) cmc notb fs xor pop pusha push xchg push leave stos adc movsb cmpsb jmp pop pop out add cmp jo rcr and add test sub mov lods adc mov dec xchg jb mov enter mov xor push fsts orl stos mov xchg xchg outsb scas add insl mov inc pop sbb and js adc arpl jne dec jle mov add rolb inc push je mov sub clc imul pop fcoms add and icebp ja lcall imul and (bad) jmp (bad) leave (bad) push add repnz mov push lods mov stos and mov daa lds popf xchg insb ja add dec dec or sahf rcr add xor push mov fs (bad) adc das and dec mov mov add mov jmp jne add ds dec std or lahf (bad) lahf inc inc je fadds cmp push jae aam (bad) fbstp mov je and sahf or and mov fstpt and add jo ret push pop xlat lock dec test pop popa add gs stc add add nop xor or iret cmp xor push aaa inc fwait xchg repnz xor out and add mov add mov subb call or cmp ret fadd testb movb add add in add sbb aad mov daa and addl xchg dec ja sarl out pusha leave (bad) in add lock movsl dec popf mov loop adc ss xchg cld xor mov adc mov call cmp (bad) pop push std push mov sub pusha pushf xorl (bad) push xchg pop mov pusha xor cmovno subb (bad) outsl or fs xchg xor jno ret xchg ret aam jo jecxz xor in add xchg dec clc loope add pop pop mov push jo or add outsl (bad) inc aaa gs stos cli shl adcb lea bound jb negl push jl adcl pop repnz inc xor ficompl mov jo scas push pop lock cltd rorb add imull test lea lock xor popl dec mov subl loopne into sbb pop pop enter jle sahf mov repz inc shlb clc out imul cltd add sahf adc xchg sub jge js add adc inc mov gs cmp xlat pop bound mov pop test insb jl jle fcmovnbe adc loop jp jbe push dec and cmpsl in add shrb aam add out add xchg rcll movsb shrb add pushf jne lods sub cli sbb pop call pusha and adc aad subl data16 in sub cmp nop dec out jle cmpl xchg jo std out add daa imul lods mov xor pushf jb inc data16 insb cld fdivr add aaa icebp ret lcall movl add cmpsb scas and pop std xchg xor imul cld arpl add mov leave sahf and add sub cmp and cmpsb lds adc sti add rcr fmuls mov push mov fiaddl pop inc add xor dec add lret pop and lds jmp pop gs loopne lahf jg js and jne sub adc cltd add jnp add stos or add cmp cli addb jb pop cmp add push fsubr lods push testl push hlt add test popa add das xor push add adc test pop xchg fcoml je or mov lods push shr stos fstpl xchg add jns outsl adc pop addl insb mov ljmp or add loope ret xchg fcompl pop or mov fisub test incl shr pusha popa ljmp sbb pusha xor pop mov ficomp cmp orl insl fs stc outsl jp add sbb (bad) call ret sbb sbb mov out push mov (bad) jo cmpb cltd stc pop pop hlt xor arpl jae add dec mov ficompl or mov stc (bad) xor inc push adcb or jmp aaa pop aas adc not jp roll (bad) sub push cmp les enter xchg pop inc div sbb cwtl add das sub push outsb add add sahf add adc push dec aam fisubrl xchg aaa cmp add pop popf pop jle adc js inc leave in bound jl aad addb pop push int gs sbb (bad) or adc add cmp mov add insl ror lock xor (bad) mov or mov pop sub xchg andb mul in sbb adc mov push dec lret push or xor rcrl rorb inc jl push (bad) cmc in mov loopne lahf or popf lods notl andb sbb xor pop call fsubrs push adc (bad) mov dec sbb xchg in int3 ja fcmovne sub adc stos stc test popa (bad) mov and add call adc stos stc sub push leave iret and xchg dec rol jne imull nop repnz jp xorb inc cli cmpl sub movsl jl jg jne xchg stc sti loop bound rcll js jmp add cmp arpl mov pop sti push test mov adcb mov sbb insb test hlt add fadds add and scas add loop imul aaa insb add outsl dec mov xchg fs xchg mov mov xchg bound or pop adc lods push jnp jns pop add cmp inc cwtl pop dec xor inc fiaddl jmp cmp xchg add pusha rcll add jg out into fistl add fnstsw (bad) std ds mov add xchg (bad) loop pushf (bad) aad jns adc aas and or out add xchg icebp jbe test ja cld mov push lock (bad) add mov stos pusha jg jae pop not push lret pop dec mov dec xor mov mov add js jne (bad) jl stc add or add in sbbw cli repz push mov hlt loop insl lods inc add inc jae add sub pop cld jmp cli add fistl inc add xchg adc rorl xor cmp jmp mov sbb in add in mov push fwait sbbb idiv cmc imul movsb cmpsb rcrb inc jo,pt add xchg inc fimull and lock mov inc mov rcrl jno adc aaa cmpsb (bad) sbb inc add lods pop add mov movsl insb and enter push push out xchg add mov mov push lcall stc adcb and xchg insb mov test cmp mov mov outsl push pop clc addr16 pop imul fiadd push dec and mov pop add jo xchg add or mov cmpl push adc aam xor clc inc mov dec add xor cltd pop mov lcall and cwtl std cli or lock or pop push mov pusha jmp pop arpl mov out add iret lods fcomps scas mov cwtl das (bad) jb fldl xor ret add mov jns xchg mov (bad) mov and shlb xor int into add repz data16 andl jbe ror cmpl pusha mov add inc xchg aas push mov xchg xorb jl mov aaa sbb xchg aad pop (bad) push cmp mov pop xchg dec (bad) mov ja adc adc hlt jg push stos out mov adcl fs or jnp nop sbb scas mov mov pop jo mov pusha insl pusha or mov mov xchg add popl mov and cmp and jae mov sbb adc or or mov sub add aaa xchg mov pop jl cmp fcoms mov add fildl inc or fmull pop ret xchg jg fisttpl out cltd push add jge sub (bad) jo jb add lahf fstps mov adc fwait jecxz sub add adc lcall loopne add insl inc add cs xor dec cwtl pop loope into mov js test add inc jl clc mov imul arpl aas das sbb add dec add mov shrd adc push cli cs adc cmp in jo leave sub data16 inc or push or mov xorl imul daa mov push std cs add push mov punpckldq rclb sbb test mov push pusha cmp xor jecxz addr16 sahf sbb push sbb cmp ljmp pop jp sub push add notb and push jecxz aam test add sub scas push adc inc ja cli jno pop xchg jecxz inc mov aaa jns and and jl pop orl adc mov push fistpl push sbbl jb repz mov xchg mov mov int3 pop (bad) mov inc add in mov ds data16 in xchg js mov add scas (bad) out rcl add push push ds adc scas fdivrs dec push add mov mov xorb inc les loop mov pushf jl mov jmp jne sub add pop negb pop in ja in (bad) (bad) rorl inc cwtl iret shrl jns lds xor push xorl cs jge ret jg insb mov add xor sub mov sub and inc add lcall rcrl (bad) mov add dec (bad) or cltd pop adc add push mul lret sub fbld in ds or aas push iret inc xor dec sbb ljmp fisttpl inc es outsb add xchg pop xchg cld pop dec inc push je mov add test inc lcall jnp pop xor (bad) insl repnz mov adc in pop call add mov xchg sub das mov sub xlat shrb xchg inc hlt daa std insb add add mov xchg loopne inc mov in lret cmp inc pop jbe js frstor mov add in fcmovnbe aas testb xchg (bad) push or dec enter inc out repnz out add cmp add loopne jle sbb shlb sbb lcall cmp sahf sub (bad) and (bad) repnz in add adc fwait add (bad) bound jo add jne push sarl lea cs dec cwtl fwait add out pop addl and outsl cltd stos lods sbb andl rorl inc jle jge cmp mov mulb mov (bad) pavgb aas dec icebp add inc push dec call rorl (bad) jp addl je aaa and loop subl gs adc inc xchg adcl cmp inc adc xchg movsl cmc insb and sbb repnz leave icebp jle dec add mov and stc test pop aas cltd outsb pop fsubrl add sbb mov (bad) and test or add leave push fdivrs es (bad) (bad) (bad) dec add repnz adc or fidivrl insb push jnp sub jle iret pop adc inc adc add push pop mov test add cmp out dec je add xor popl nop mov sbb pop pop and mov (bad) gs add mov in outsb lret jbe pop incl into repz inc add imul sub hlt cmpb pop mov gs orb mov pusha dec mov or lret add dec xchg add cmp movsl or fisttpl jmp jo xchg inc mov pusha scas mov add gs or je sbb into jo mov out aaa repz popf jb add sbb mov (bad) add pop roll xor cmp xor leave add or pop mov sbb arpl push xchg outsl lods sub or hlt inc add mov cmp mov imul pop add mov mov mov cmpsb add sti and add ret xchg dec inc xor push xchg lret loop jne push std lods lret jl sub xor add mov cmp data16 cwtl das xor incb or sbb rolb in sub sub push pop icebp or into adc inc xlat push sbb adc fs cmp into add popf (bad) xchg sahf aaa fildl sbb pop loopne cltd ds popf push xor add loop ljmp negl into outsl push xchg gs rcrb push dec adc pop (bad) jp lahf cmp jnp out cmp jb adc popa mov mov and je (bad) sbb cltd xchg popa add cmp cld mov jecxz push ds add inc pop xchg pusha repz jge add cmp jbe mov jg add add loop decl jo jbe je or jl fwait es mov add sbbl data16 std rcl enter pop xor orl int pop xor add (bad) in or in iret je repz int sbb add scas push sub call in jno ret lret test nop (bad) mov loope in les outsl add xchg and fsubl sti cmp add gs jmp mov or add cmpsl inc pop imul js fisttp outsb sub jno insb xchg add nop push dec cltd rclb dec aad iret lds fst das data16 loopne jo add sbb dec add fisubrl fstl cmp cltd ljmp xlat orl push push outsb inc mov lea jg dec jbe xchg mov in or xor clc stos sahf jno js push lahf mov lret jge test jle inc add cs jg add mov add rcrb dec xor xchg (bad) pusha dec or or jne dec lcall cmp xchg add mov ja xchg call sarl jl (bad) popl scas hlt shr mov aaa cmc int3 xchg (bad) ja jne push (bad) mov and imul pop aam fcmovne cmp test push pop movsb mov es mov mov lods lret dec push add xchg cld out insb aad es mov mov (bad) repnz shll lds inc add in je jbe add ja mov add std cmp lea sbb sub push sahf sbb imul mov and and call lods bound stos add pop (bad) pushl jb mov popl inc push pop lods subl adc or pusha inc mov (bad) sub bound mov subb jl mov and cmp mov out mov popl scas aam fadd adc add mov call orl adc add xor add ret ljmp jl (bad) push push cmc cmp hlt pop mov lods push rolb mov add popa gs lsl jl or add add push lods cld add mov dec add jno faddl ret mov pop imul into xor push jnp sbbl lds mov add xchg (bad) (bad) mov sbbl loope xor ja,pn in adcl sbb sti mov jl push (bad) inc fildl mov pop mov cmp mov jae out xor add xchg subl pop pop clc add ret add (bad) orb cwtl fildl loope scas aas add rcll add test sbb xchg addl jp sub add lahf jmp mov mov sub incb xor clc cmp hlt add push cwtl add ret imul imul adc xor sbb mov iret sub cmc (bad) add push xchg test divl push insl add xchg or pop push and inc push out ret repz loopne dec push and jmp ficompl add mov daa outsl sub jg fldl xorl sbb imul cld add fisubrl roll sub or push and sbb add inc adc int3 divb push icebp dec sbb jmp leave and ss inc out and xchg xlat popa add push cmc inc lock loop hlt das (bad) push push inc call push cmpsl add push inc mov add or inc call lock mov (bad) into out xchg in mov sbb and jl jbe jne test add sbbl subl stos in mov and popf push or sti str xor enter jne test xor sbb in push int3 mov into in add imul into inc lcall add push in or clc adc out std loope icebp add cs pop scas (bad) je stos sbb adc ret icebp fdivrs add push mov pushf ljmp pop mov dec jns stc roll sbb hlt xchg add imulb movsb push aad (bad) mov add xchg push sbb xor xor negl sbbb test aam or std cvtdq2ps loopne sbb daa pop xlat dec popa pop and jnp loope add mov aad jmp adc test repnz outsl dec inc pop add cmpb and fldt and mov inc ss xor fldl xor push sub rorb (bad) jne add outsl jns frstor jle pop mov push (bad) sub xor (bad) jo mov pop dec mov (bad) or add sub mov pop movb sbb and or mov icebp (bad) sahf cmc xor sbb mov or lcall pop add sub add mov lret pop in ret push jne xor inc jp add jo roll pop or pop sub stos pusha push mov add out (bad) sub rorl sldt push in outsb fsubl pop insb fstps add sbbl add mov out add or adc xlat push and push add (bad) loope rclb test add outsl push and jmp icebp insl mov cmp jns mov out sub sub vlddqu ret lret dec lods pop pop mov aam loopne cmp sbb jno mov pop or subl jnp or cmpsl mov imul sbb aam daa mov mov jle mov call sbbl dec or jo xchg pop je xor xchg stos out or jmp cmpsl ret pop int inc xor sub add and sub pop pop loop stos or in xor aam dec test sbb mov adc data16 nop loop,pn faddl dec jno xchg fadd (bad) sub push mov xacquire fwait add mov and inc push add fistl and loope xlat ss jnp and xchg dec sub add mov insb enter adc mov mov aaa add es scas scas jge jnp add popa fs add add inc bound push test adc roll add test adc adc add rorl sbb push out mov or jecxz aaa add andb shlb sub jo pop movsl xlat cwtl mov add cld repz add adc sbbb mov std movsl jo (bad) jl add sbb jae arpl imul add cmp insb test sub mov subb xchg outsl (bad) mov fldenv xor jp mov test pop pop add add pop inc (bad) mov pusha jne loop sbb ja add vmread jo das push ficomp loop pusha xchg add pop (bad) cmpsb jno mov add inc pushf push mov mov dec hlt sbbl pop dec adc add jo jne inc add insb or vaddsubpd fstl xchg add dec (bad) add inc xchg sbb xor inc push out sar nop jns sarl das cwtl in add inc jno daa or (bad) mov cmpsb fyl2xp1 pop mov cli and int3 push into lret cs ss add rcll xlat sbb pop or xor das and add add mov subl les fmuls je inc and pushf add jno mov lock push fdivrp out mov test or dec and and stos pop lds sub loopne mov cmp cmc sub and pop jae mov jne push add adc add and add rcrl sbb cwtl push inc lea loope clc add int3 (bad) fiadd jle or jge add add aaa out pop sbbl ret inc outsl std push cs add les jg icebp fldcw subl sahf push pop bound add xchg and cmpl sahf loop insl cmpsb inc cld add lods mov lret inc call movsb fs dec mov cmpsb lods iret loope test xchg mov test jno jp xchg cmp add sarl popa add jbe add into and pushf fcoms xorl mov pop loopne push cmp int push out pusha xorl scas fisttpll adc mov or add gs aas imul sub sub xchg test add or jnp sbb mov pop xchg sahf pop mov pusha pcmpgtd adc inc pop adcl aad xlat bound dec mov clc in and inc push ret pop mov xor (bad) sbb push movl das xorl xor addb flds cwtl pusha fs push adc add xchg test add jmp fcmovu pop jp jb add adcl pop rorb jl sub xor sbb ja push add add inc aaa xor bound leave loop cmp lods cltd mov add stc add ja adc xor test leave and xor cmpl int ljmp enter lods mov sbbb mov repnz outsb gs add aad cld mov sbb xchg add xchg lahf add in mov inc add ja push adc in stos fsubrs scas daa add rcrb cmp test add push jae pusha out add jge nop je popf add mov shrl sub fs mov repnz and add mov popa lock cmpsl incl cld pop enter outsb aaa xor or dec subb sbb loope popa (bad) fsts jl (bad) pop add into lahf cmp cmp ds fs push xchg push inc xor aam (bad) pop push mov call lods in sbb mov enter lea pusha mov jnp ds orb mulb jg add cmp xor arpl add xor mov test in cltd roll jnp faddl cmp or add jo pop mov cwtl adcl and mov adc test xor xchg call pop jmp inc arpl and push cli xchg push jae add mov and mov xchg pusha cs mov jge pop xlat push jae inc subl insb dec imul lret cmpsb fs mov xchg push test arpl mov and mov xor push fisttpl cmpsb cmp lret in jp insb jge roll push mov xchg (bad) add xor cmc jae imul mov add adc and out repnz test mov sbb orb cmp adc lds loop and repnz dec sbb (bad) sub pop scas add test cmpsb and roll ficompl shrl enter push fldl and pop mov inc mov push xchg add inc adc add aad add movsl or in sbb add dec insb loopne add jmp lods mov adc insl add or lretw xchg add fdiv jg outsl sbb inc and jo push andl fiaddl les jl xchg mov cs xlat jo add add pop jecxz add (bad) lea cmp js adc mov jmp in push gs adc adc ss add inc cmpsb faddl pop cmpl leave int3 xchg xor mov pop (bad) and loopne movsl pop jb cmp pop pop gs out pop push cld addb out add jge enter jbe out rcrl sbb jg xor repnz add loope hlt inc std dec scas add jnp arpl pop cli pop adc sub scas push popf repz add leave dec push jb lret mov lea cwtl (bad) repnz inc jl lret data16 mov xchg push das xor dec sbb jbe add stos jge pop sbb add and push xor add lahf icebp add jg push cmp pushf arpl push add and add jbe stos test dec add cli jb jmp xchg mov sbb test sahf and fnstsw daa orb mov cld fdivs mov cmpsb adc rcll mov mov jo adc pop push je,pt insb addl andl xchg es add mov add cld je jmp stc sarl dec clc mov cmp inc xchg (bad) movb fimull adcw mov mov and pop sbb ret out push cmp es add movb xor (bad) jmp roll add xlat mov pop fistl bound cmp aas xor jnp leave (bad) jg dec and imul mov pop inc ret test cmpsl in orb inc sub or in lds mov adc cmp add add (bad) stc and fcom inc jno lret (bad) les mov push out mov movb pop cld jnp dec jg add mov add fdivrs das fldl out loopne ja sahf push and outsb add (bad) add jl xor pop mov and cs jne mov mov lds arpl inc push mov sub scas pop orl adc sbb cltd data16 (bad) insb lock in mov pop popa cmp arpl mov add xchg movsl out dec bound mov imulb dec adcl xchg sbb lods pop jns movsb jo inc add push stos dec push jge xchg sbb aas ds scas pop adc xchg inc jne das sbb sbb je mov ljmp iret cwtl addl mov fildl imul dec mov mov sbb mov jmp jnp sbb sbb mov stos js mov pusha adc pusha add int dec lods je js ds mov add dec bound mov stos (bad) push cmp (bad) xlat fadds mov mov mov inc xor mov dec and inc insb push movsl jmp pop xchg addr16 repz jg les adc (bad) sbb pop cld cwtl rolb jmp inc in in jp add add into ja ret add pop mov dec (bad) ret sub push mov jp,pt pop xor ds push mov pushf inc jmp pusha lcall stos aam (bad) loopne cltd xlat (bad) lds mov inc and pop add xchg jp xorl test add mov cmp or outsb and test leave xchg pop fistpll outsl mov cmp add xchg loope push adc in lock xor add xchg mov mov pop cmp rolb cmpsl xchg jno xor psubq inc ss sub pop test (bad) inc adc dec imul fcmovnu sub and xor push cltd push and xlat sbb add movsb fwait jns fxch mov stos int3 fiaddl cmpsb pusha enter out shrl add lods pop dec jno scas fwait add dec inc insb push pusha push dec adc xchg rolb pop insl sti lret aaa add call adc dec pusha or cwtl into or daa mov or sbb mov push (bad) mov out ljmp loop aad mov mov in or nop add orl int (bad) (bad) jb pop and cmc cmpsb clc outsl sbb cmp jae mov cmp ret imul jo insb sbb xor sub out cmc xchg add inc jp sbb fwait daa and xchg or mov es pop adc add mov mov clc adc jecxz or add adc cmpsl je cmpl iret sub and inc mov cmp cmc fs insl out (bad) scas cmp (bad) lea mov enter cmpl mov jae adcb std je movsl mov cmp mov cmp xor inc int3 jns sub add in sbbl mov fidiv jmp or dec aas jle xorb idiv sbb adc icebp pop xchg enter (bad) test std mov or jb orl dec aad jo into dec add jecxz imulb lods push js jb push ljmp dec mov test ret push sub ja mov neg dec aas loope adc cmp test ja aaa mov mov and mov cmp adcl sbb je cs add in insb adc iret sub mov add imul cmc sub aad mov mov (bad) fs loop inc call pop jle imul add daa lods clc xor cmp js inc pop push and out ja cmp inc and loopne pop inc jmp adc dec cmp dec mov add push jne add pop and mov mov xchg pop inc shrb test inc adc push in add out xchg inc mov aas xor mov and inc add pop sbb mov (bad) addb gs stos lahf sbb add insl inc inc pop mov in shr mov sub pop or cmp xchg hlt adcl push test clc add fild sub push jo dec aaa xor sub cmp stos out mov dec add rorb aam icebp cwtl lcall lods sar stos xor xchg stos adc (bad) std cmp out cmpsl pop add mov jp add mov jnp fild and test mov jae cmpsl cltd out (bad) lock daa repnz pusha mov jp fwait add xchg inc pusha fidiv mov cmp lret adc (bad) out leave xor add cmp sahf add loop mov lcall xchg pusha loopne pop dec jp out mov div dec mov add xchg adc pop lods inc lock lret jle add nop xchg adc mov push jecxz mov xor testb add ret int3 outsl repz or stos add out sub test popf dec cmp test lret aas mov cmp pop xor fwait mov jne sbb or sbb lock sub inc push data16 outsl lret stos je xchg sbb jno mulb in hlt aas inc jo add or fdivs add inc test inc dec jno shrl sub or inc add int and add neg cmpsl xorl ja stos add mov and or sub add leave (bad) pop lret mov test dec xchg dec xor mov ja add mov adc (bad) pop out cmp sub inc inc pushf fidivrl pop cmpsw call cs or add shrb daa shlb std cmp and les dec add (bad) xchg pop xchg xchg push cmp jge mov mov sbb iret pop ja add mov (bad) pop or je sub add int fwait dec or loopne sbb cmp fsubp incb addr16 out cmp add repz pop pop aaa cmc in mov icebp xchg (bad) (bad) pop pop xchg out or fs mov (bad) rcll dec imul sub iret mov shrb xor jp lcall fstps fwait mov aas fisub dec adc jbe add inc shrb mov jl andl xchg push mov popa das push add loop push insl sbb call jge stos popf into add xchg lcall dec (bad) out push test loopne out pop mov mov les xchg nop fwait jnp inc add ljmp (bad) shlb adc ss loop adc mov testb push scas xchg mov icebp jle adc in adcb jo stc add sbb xor or add mov outsl les sti sbb data16 fstpl orb outsb jl and je adc jnp,pn ds push or test aam das nop shlb mov sub clc jecxz mov sbb xchg inc jge push add xor dec add pop cmc loopne jne add (bad) je inc mov adc out outsb cmpsl or inc pusha sub xchg popl cld jg xchg cmpsl or dec andl std dec gs push fstps loopne dec jl pop jle aad dec push sbb mov mov adc add les lods push rcrb dec xchg jge add (bad) sub add mov (bad) loop add imul xchg out xor (bad) incb mov mov in push add mov aas cld add clc movsl add dec popl imul sub cs popf push sbb dec fistpl dec loopne jne and cmpsb cmc out and mov popf push xchg inc xchg sbbl add or add fsts popa add mov mov sbbb sbb addl add sti add dec jb push mov cmp push jo pop arpl cwtl add lds lods pushf adc add int3 dec inc test xchg movd lock mov mov xor pop mov (bad) dec loop dec add aam xchg mov xor inc add fdivrs aas adc mov cmp mov or mov mov cmp push xor xlat sub xchg xchg or add push repz and (bad) cmpsb aam inc std ret sub repnz mov andb add xchg or hlt xchg jo add (bad) and add insl out rolb (bad) mov (bad) dec negl adc add into xor pushf pop insl push add in cltd sbb pop inc push inc (bad) enter inc dec repnz add mov xchg imul (bad) cmpsb add push cmp add mov xor data16 bound pusha fs out add and ret jle add and ja add daa jne add loopne sub push rolb add inc jbe lods out imul xchg jl cmp cmpsl push mov adcl std outsb inc push or es (bad) cmp sbb mov add in hlt adc mov sbb andl test add out push mov fwait jecxz (bad) roll pop or das loopne (bad) push adcl imul std mov mov inc push or mov movsl jb push test data16 lods and cmp xchg push addb fidiv pop pop mov orl loope ret jmp mov lods pusha (bad) adc inc or pop pop push mov pusha popf lds in or xchg sub dec add jl lea pop adc (bad) cmc nop pushf push xlat inc sbb add add mov sbb jns xor (bad) jb mov mov pusha sbbb cld gs push movsb call pmuludq add dec add inc jno mov test lods and (bad) mov jbe fldl or sbb js int3 pop lods rolb and cmpsb jns push add push mov (bad) cmp (bad) rcll repnz push je ja or inc sti mov negb add xor (bad) jo inc shrl add ds sbb test test leave outsb stos cli movsl and cmpsb cmp sbbl inc inc cmp push add sub loope imul mov add int3 rol add xor add mov enter cmpsb sbb aad insl test push pushf psrad lds inc add rcl out mov aas pop dec repnz mov sarb jns add cltd aas jp xchg outsl xorl fsubrs dec push icebp pop fld imul jg mov (bad) ss mov js cmp add inc push dec dec mull sbb inc lea sub imul (bad) sbb inc jo gs andl (bad) js sti xchg out mov lock jge sbb arpl movb addb lds incl jbe stc sbb in inc mov adc inc js mov or inc sub sub sub push sub aas add cwtl jo andl sub mov lods xor mov sub (bad) repnz scas push roll int fild js mov in xor dec movsl add jp pop inc aam adc fwait mov sbb and jge stos cmp jnp addb or add push test xchg cmp jge andl test add inc loop add insl dec stos and scas (bad) sahf arpl xchg push test int jno push add mov xlat add data16 sbb dec out dec gs jle pop aam addl stos jo adc arpl jg sub jle inc scas cmp aam ret sub dec pop mov test test (bad) jae add movb xchg sub add push sbb ds sub xchg sbb mov cmp sub inc add (bad) fistpl call xchg inc push cmpl dec out (bad) inc mov xchg pop sahf mov or test das into add cwtl lea lds out (bad) scas add dec sub rolb jnp out fidiv pop xor or adc ret rcr mov add rcrb xchg xchg add into adcl pusha nop push add scas xchg js pusha je (bad) mov push xchg les faddp pusha outsl xor xchg dec xchg jbe pop xor cmpb aaa je pop subb lods repz rcrl mov pushf or xchg loop push ds out ret sub xor das or cmp add xor (bad) mov dec mov out popa insb or mov sbb adc mov dec inc pop lods mov push nop daa add out inc mov add pop cmp lds inc call and cmpsb std xchg xor rorl aad push jp pop mov inc inc pusha das lods in add push addl cmp repnz mov (bad) add popl or inc mov dec add push mov (bad) ds in les (bad) mov add and sub cmpl jge push xchg ljmp repz xlat ds sbb add incb (bad) xchg jl testl lret push fs xor shlb jbe pusha fstpt clc or jecxz xchg in and loope ret rorl fwait es adc add mov sbb xor inc insb enter test dec sbb sub jns dec test mov jbe aad pusha mov outsb adc enter neg sarl sbb push add arpl sub pop fwait push xchg push repz popf push mov mov push pop cli and dec lock fidiv add scas enter pop adc out or xor mull pop add push orb test mov stos sahf jl adcb xlat sbb cmp jg xor sbb out stos add adc aaa xlat jmp pop mov mov sub pop popf or dec mov mov jp cmp adc pop (bad) mov adc std mov pop xor mov push cmp movsl gs add sahf dec mov aaa (bad) mov add fimull aam mov dec add mov push sbbl inc jo lret popf push push inc popa (bad) fs (bad) pop sbb ret and cmp ljmp or add (bad) dec jae fsts sub and gs mov add pop enter js inc add mov mov inc loope cld imul add (bad) sub mov es pushf add out push pop push mov and lahf (bad) xchg mov xchg repz repnz mov mov stos xchg push jbe pop mov cmp movsb mov aam inc mov pop mov add (bad) ss cmp add mov inc jle stos stc or mov hlt push ljmp adc add mov xchg cmp pushf jecxz inc cmpsb adc and out jg dec mov outsb gs (bad) jge inc sub bound push rcl popa jbe or lods jns cmp cmp inc fild or dec les pop add adc ds ret lods pop add jns xchg mov hlt jno pusha adc fsubrs add scas mov jnp mov or dec add mov fdivr repz or lcall (bad) in sbb mov adc mov (bad) ffree add (bad) jno cmp cmpsl mov mov add lock scas jns dec into mov push pusha jp movsl andb lock pop mov lea aam fadds xlat xchg pop add lcall mov or cmp add vhaddps cltd xchg shrb test (bad) mov and mov mov inc dec sub mov shrb aas cmpsl mov add inc mov dec orps negl mov enter jae ds add push jp cmp (bad) insl mov rolb pop loop sbb mov add loopne jno mov pop sub repnz dec mov ja mov pop push lods aaa cmp add imul mov into jbe add arpl sbb xor add cmp jbe insb fiadd push int3 sub test pusha je lock dec add and jbe iret mov (bad) sub add mov dec mov call cld add sbb je imul add or lcall jl,pn cwtl cmp outsl add addl sarb mov aad adc out (bad) pushf mov in mov and mov add enter xchg inc cmp mov pop ljmp sahf orl loope incl cmpsl pop dec cmp and out (bad) ss lret push je insl pusha xor dec pop aad add cmp into pop add out enter mov pusha add and dec ds or sub ret push xor dec faddl jo (bad) add cli xchg adc add fmull aas icebp iret sahf pop jg popa and fildl mov int jne add in adc xor jbe xchg dec and pop add xchg cmp punpckhbw les scas (bad) and fcompl pop loop jns add iret ficomp cli in xchg clc add lcall push dec and cmp cmpb jecxz jne cmp incl clc test fwait test aaa push cltd add inc mov jbe xchg inc clc mov or lret push dec xchg je add (bad) mov mov in add fstpt sbb aas mov out pusha (bad) iret nop inc add mov icebp mov rcll sbb aad pop mov or icebp leave roll dec fcomp pop inc mov lret pusha loopne inc mov add lahf hlt insl push and or std mov push jmp mov fcmovb mov push add dec inc xchg mov cltd or push adc pop inc insb in nop adcl or sub xchg mov pop pushf add inc (bad) cmp mov push inc jge psubusb roll popf ds rorb repnz or cmp sub inc mov lret cmp or pop fwait xor pop mov xorl push pop mov inc sbb test inc push (bad) lahf pusha pop in push cwtl aas orl push test gs (bad) cmc addl inc cltd dec add adc and cmpsl xor mov ret ds call sarb movsl pop push pop out add test add ss popf inc cmp je xorl dec add cld mov iret sbb out es cmp ficom daa mov fs jmp fdivl shl js insl les ja or (bad) mov xorb sahf add mov inc dec in push xor outsl add jp push sbb ja mov in ret pop mov inc (bad) xchg iret pop orb and cmpsb push jne add inc fimul and xchg scas stos add push gs mov xchg sub mov add pusha mov jns and loopne sbb sahf pop cmp ret scas mov jbe mov add (bad) xor adc icebp dec dec jne or adcl out imul inc pop (bad) mov sub xchg sub pushf add pop mov adc icebp lcall pop sbb sub adc xchg fildl push xlat movsb ja sti add jno stos fsubrs add sub adc (bad) add adc aaa loop add lahf (bad) mov stos jae popa iret xchg mov pop mov hlt pop scas push jl movl mov loop (bad) xor out sbb test add push int3 mov push add ljmp mov pop popf ds nop fild xchg jns add lock (bad) pop xchg add je idiv dec push lret sub xchg add mov jge xor pop (bad) adc add xchg lds add aam dec add xor jb xchg push arpl add pushf xchg repz adcb fidiv insb inc scas add add inc jg (bad) and jg insl (bad) leave iret push dec push ss cltd hlt ja xor je rcll push stos mov and dec andl aad mov pusha jecxz jno add pop xlat addr16 jae fisubr in leave or imul out test test outsb fcoms aaa push xor mov test lea gs add in xlat jb scas clc pop es and adc les lcall add lea inc mov mov cmp hlt cmp insl push xchg inc add xchg iret adc sbbl das xor or add push out daa mov lret dec jb adc test roll shl lods add fsubrl push jno add mov xor add or jl add ror cs lret jbe dec out leave out sbb imul inc (bad) sbbb and mov add pop push xor js add rcll mov shrb add aaa cmc (bad) jbe xorl xor ja pusha jo sub and daa push shr pop ss jnp popf dec sbb pop jno ret cs pop addl cmp add aaa mov (bad) sbb es mov mov cmp add mov aam cmpl or mov cmpl push adc inc add ds cmp in addb shlb add push sbb mov mov xor int inc and lret fisubr stc dec add rolb push xchg imul cs repnz xchg mov (bad) mov adc jo jg sahf xchg icebp inc ja imul mov pop sub mov sarb xchg xor js lret iret adc roll xchg sbb mov add mov std add ret arpl jo mov pop mov nop inc add cmp xchg inc out cmp add movsl sub mov adc xor jbe jecxz dec add dec pop sahf lods or pusha push cli push inc add out arpl add push nop pushf xor lods add push mov orl dec pop rorb orl test fstps movb lret js pushf sub out icebp loope push (bad) or ret cmp popf inc cmp clc inc mov cmp adc shrl xchg mov cmpsb in outsb sbb pusha movsb (bad) ljmp pop xor push loopne loope add and cmpsl addl bsr stc xor push xchg clc push cld add inc fwait inc out jns in push rcll mov add jge add jmp cltd loop lods lret mov or pop push sub cmp sub outsb sbb rol (bad) fsubl das add sbb mov jle jb mov pop in das sti pop jge lahf sbb sub xor inc js addb addr16 insl and aam jmp dec or xchg cmpl push bound mov loop sbb inc dec pusha sub mov iret fisttp add lret mov ja mov es mov jno test aaa adc xor add pop pop (bad) addr16 jo pushf and add hlt dec (bad) xor push ror loope add sbb insb sbb fstp xor or add nopl xlat enter cmp jne pop ds xor pop jno mov adc jmp rclb pop movb add ss xor or and in pushf cld add ret (bad) sbb xor add aam jne std sub stos inc push (bad) jl lret add into dec mov mov movb mov xchg cmp lock leave shll movb dec pop dec pop xchg bound sbb lods into push lds cmp dec sahf daa inc in add inc int lea mov mov and xchg pop sub incl jo mov out pop movl sbb clc jns jo push loopne fbld sub popa das movsb xor aam lcall xor lods xor mov enter push lret pop aas ss push inc jnp cltd repz add movsb pop xor add jnp add sub cmp fnop add in or pop fwait pusha add jo cmp add mov cmpsb inc mov mov iret or jb test sbb adc add push add xorl mov cmp mov sbb leave jg addl and and std inc dec jle add popf sbb test inc push mov xchg int3 jno mov out fs mov dec add dec lock cmp add sbb (bad) dec pop add or cs (bad) adc jbe mov mov inc cmp (bad) dec inc mov mov icebp mov push lret xchg push adc xorl ret xchg xor and push xor mov push mov pop adcl sub add ds push push adc popf andl sub js mov inc in repnz add loopne dec lret orb add cmp rolb out arpl aas mov ja pop pop fsubl xor addr16 add test sti jl sbbl hlt (bad) ret ret mov jmp add pop stc das adc test push xchg sub aas xor pop lods fistl adc add cmp cmpsb pop pop add addr16 pop orl pop xchg (bad) sub mov inc mov test push xor dec add mov xor sti clc imul xor fs xor out sbb repz add lods adc sti lret out test ja inc sub mov daa jp xchg add and cmpsb test dec lock sti cld jg sub test inc js push stos (bad) jns xlat inc jno ror push decb push flds xor lret add adc divl repnz or push add jle out push mov push mov out add cwtl and jo and xor mov leave mov mov push inc pop ret insb or sti out mov push pop (bad) jb add popf mov push ljmp fbld sub jnp cs inc popa loopne inc lret mov xor sbb pop sbb push das push push mov popa adc add pop loopne and movsl add pop rcrl adc cltd mov jns (bad) out movsl or les jae inc add adc lock xchg fisttp sarb add sub mov adc and add ret add xor xchg (bad) sbb fucomi fwait add or add sbb jecxz push lahf mov adc mov sub rorb movsl cltd mov sub dec jecxz jg fwait ja std cltd iret or and into jo in mov test inc lea cmp pop add ret xor iret pusha add outsb add (bad) inc add sub sub lahf xchg pop orl or pop pop loop arpl mov push lea adc ficompl aas xlat add int cmp xchg addr16 movsb mov lock add icebp fistpll (bad) add fstps fs enter insb sub add sub mov inc add bound lds fdivs rorb cwtl fisubl mov cmp fild aam mov jo loopne stos insb clc jle jbe lcall sti push bound cs and call fidivr in fwait or repz and mov std or cmpb imul and lea bound cmp test and mov cmpsl pop dec ret push xchg or movsl sub pop jno aad js push xchg repz mov jg add xor es inc jns adcb js les mov pushf aad frstor addb or bound mov mov add aas test sub inc lahf outsb arpl push jb add nop gs call jle xchg mov lods std fisubrl cmp xor mov pop das xor orl repnz and les pop fcom mov addl mov jne lahf aaa nop add enter lcall inc add mov std ljmp aas stos add fstpt (bad) aad iret in (bad) sahf jmp gs inc add dec push aaa mov mov mov rolb jmp lret add jae adc dec scas (bad) cmpxchg8b mov xor lock dec sub aam aad jnp or aaa push mov jle add mov pop jb mov mov daa lret cmp ja mov mov mov add fs sbb mov (bad) cmc mov leave adc add push dec cmp insb test and sbb fisttpl lds nop pushl xchg jb pusha (bad) mov inc cmp aaa sysenter scas dec add jo (bad) push inc into push xor clc mov push (bad) mov fstps dec je cmp in dec xor std inc sti push inc jge pop add imul (bad) adc xlat push cmp je into mov dec sbb and out daa sarl out and fmul dec pushf jb aaa (bad) pop pusha add out add add jmp andl mov movsl or or icebp test scas int3 iret roll xchg imul cmpsb mov (bad) aad cld jno add push dec add mov movsl dec pop pusha adc fidivrl cmp bound add add movsb lock outsl add sbb in jno add pop loopne movsb sbb fwait insb hlt cmpl dec jbe in mov push jg test mov cmp mov adc outsb xchg mov push ficom into push mov sbb jecxz std pop jbe rclb cmp jp rolb outsb ret jnp sub add stos rorl stos imul add (bad) push in daa mov or je push adc pop jb (bad) add pop loopne mov and pop pusha mov sub cld sub addr16 inc push movsl imul (bad) loopne je add data16 movsl lods and or lods les jns test pop add ds jecxz scas andl incl sahf in nop (bad) cld imul xchg movsl sbb fisttpll dec scas add aam popa fiadd mov push aas and pusha dec push add test flds add xchg out notb sbb popf inc cmp or adcb mov ljmp jnp and fdiv sub test inc jae add cmp add xchg out fldl leave cmp push jge add roll fwait js shrd adc inc rorl lods aaa aad push inc lods jg sbb pop lea movsb pusha jl icebp cmc sbb and out ja xlat dec pop es (bad) pusha bound cmpsl add cmp push dec mov pop cli adc iret dec fsts add rcll and mov aad xchg add dec push stos add aam mov orl pop mov inc mov cmp cmp fimul xlat pop or push bound cld testl xchg test jg mov adc popf jle add lock xchg inc and mov add gs daa add das movsb pop lret addb and std andb test jb fsubrp test and jg les mov adc cmc pop pop add out jb xchg add or lods push xchg dec xchg push add mov add scas add sub inc out addb cwtl out stos arpl leave add mov add add loope dec arpl aam mov jne in jecxz cmp sub andl cmp sub sub jl sahf jne out outsl xor add cmpsl inc inc dec sbb arpl movsb xor scas xchg sbb das popf in xchg jnp inc lret pop sub pop notb inc add clc aas aas in add (bad) ds add decl ljmp or mov push xor lret cmp cwtl mov ret jns js add (bad) and sbb orl add cwtl add outsl push pop mov push cmp dec pop and adc pusha jmp push ss rorb in add por jo imul or mov test repnz inc and pusha int3 test add mov movsb push pop outsb les xor cmp jo dec push sbbl sahf std imul (bad) mov push fidivrl int3 adc mov js mov pop (bad) aad jbe mov fldl or mov fidivr sbb cmpsb jne and inc jle add js adc repnz aad adc add add inc push sbb int sbbl jns add mov add push test add mov arpl (bad) mov jo pop and pop add push push lock imul jne lds or mov ret enter xor adc add loopne pop (bad) sub pusha push push mov and imul lret in dec nop push cs and add (bad) in xor adc xchg pop add out and testl mov fwait mov pop add sbb mov push add icebp mov std mov jb fiaddl xlat test jp int3 add push or mov sbb add mov in xchg mov add push popf mov out ja (bad) fisubr hlt add xor sbb fisttpll mov pusha insl inc mov cmpsb add inc (bad) ret adc andl and mov in daa fmuls add jnp push and mov add gs aad sbb xchg mov ljmp movsl mov fbld (bad) fistl cltd push push pop popf push sbb sbbb mov sub jo repnz push and mov add sbb push jb xchg inc add mov cmc fmull add xor repz nop inc lea jecxz push das pop popa insb pop les add pop gs (bad) pop jl repnz xchg push fcompl dec add (bad) cmp or inc push sub push pusha dec mov jge adc rclb lcall jne test ror push popa xor and dec xor add push popa rclb mov xchg frstor out pop add sub fistpll loopne jbe or mov add jo cmpsl stos add outsb cmpb aas push pop arpl sub roll xchg lds mov (bad) std bound mov loopne insb pop and cmpsl pop stos addr16 jae cmp or or scas add mov cmp add dec or mov jp add cmp and xchg sub sbbl loopne xchg push mov lods out mov xor (bad) xor mov pop add test adc sbbl mov nop jl jns push pop idiv enter cld daa movsb mov mov xor es lea mov inc add fadds push inc scas sarb add or jb mov addr16 fisttp push adcb sbb mov cmp mov pop jecxz xchg aad and sub add inc pushf fiadd aam in mov test popa jne inc in gs out add test sub add addl test add cli inc sub dec mov gs subb or incb mov adc pop add out lret fisttpll test movsl fcom mov sarb xor xor or inc mov cld mov movsl bswap dec or mov mov cs pushf fldl lods in pop adc mov adc lea or inc aas movb pop dec dec aad arpl adc cmp or lods add mov loope inc adc jnp cwtl aad add fidiv push sub test and jnp push pop call inc mov add push mov add lods inc je stc (bad) add inc dec add cltd mov cmp inc lock fiaddl dec sbb sbb jne add ss fisubl push sbb jmp das pop or out push daa icebp ds jo test mov sub add jl arpl sub xchg loopne (bad) lock jbe cmp sub arpl (bad) push cmp add enter inc in add cmp sbbl jns inc xchg loopne mov ret sub pusha add add mov add inc push unpcklps mov and jno add sbb cwtl push cmpl dec dec test call cmpl scas dec jl mov add mov mov push cmp push ss xor stc cmpsb push and testl ret inc inc mov push cs xchg sbb sbb out (bad) xchg fcoml movsb js adc adc (bad) push inc adc inc in ljmp sbb std repnz push movsb inc pop jbe (bad) pop push pop xchg xor dec jne sbb add ss push (bad) gs je pushf inc add xor pop divl push dec mov in add xchg ljmp idivb inc lock cmp sub jecxz roll iret incl xlat incb xor lods mov cs icebp sbbb pusha sbbb xchg mov (bad) popa jbe insl repz mov add or inc push fldpi ds fs push add mov js fisttp pop aaa out arpl movsl jmp xchg add xchg arpl and sbb cwtl rorl inc pop ficomp in (bad) xchg leave and (bad) sub gs mov jnp ss cmpsl andl enter jnp mov sbb test fidivr loopne mov xchg xchg loope sub xchg add aam jae inc mov pushf inc sub xchg loopne fdivs ljmp mov add mov cmpsb out and mov push pop sbb scas data16 push add push out push push adc loope ror in insb cwtl add sub pop in aaa push (bad) cmp fsubs out lea mov scas jbe inc pop jl repz cmp stos cli push dec xchg add xor lahf add xchg add imul add push ss cmp jmp rcr into add insl lahf loope dec and mov add insb jle (bad) leave add pop fnop adc imul pop mov mov fldl es hlt lahf or enter roll mov fiaddl imul push mov cmp arpl xor add sahf jmp cmp pop sbb jmp cmpsb mov lods adc jl add mov pushf add je fwait ret cmc push add xor arpl push jecxz mov (bad) or jl ja add mov mov xchg leave push sub mov andl jbe jp dec add mov xchg dec fnstsw stos out test hlt adcb movhps je mov into pop jae leave push cmpsb pop int add imul add adc je (bad) test mov pop sbb add insb ljmp xchg or mov (bad) jo and sbb jl mov fcompl pop ret jge add in inc jne jp add sub dec loopne dec add daa imul cwtl (bad) addb ljmp xor jnp cmp mov divl add mov addr16 jo xlat sbb xchg imul inc jp lahf mov pusha inc sub cmpsb out push add push pop add xchg cmc sbb and stos jbe xchg out add imul and pop xor jmp xlat add jbe cld cmp and jo mov add pusha out pop mov mov mov test das subl pop in out sahf out mov push fcomps stos daa aam cmp pop adc outsb jl repnz jbe cs adcb push aas pop xchg mov inc lds mov aam add mov movsl fs ds aas leave or ret mov nop add movsb jge sbb push mov pop or decl ret in jp pushf mov xchg lahf mov inc cmp sub sarl cmovge sub inc roll add clc jecxz cmp mov xlat jae add daa lret (bad) mov xchg add mov cmp adc add mov packssdw or add mov test mov enter shll mov into jo add lods jmp mov fiaddl adc or inc jbe (bad) xor inc scas ret push add aas iret into xor es sub pop add mov loopne iret test daa or inc and fnstcw jge xchg rep pop fsubl sbb test bound mov pop jne sbb add dec sub js xorl (bad) ret loope sar pop imul pop lods inc mov jbe dec jne lahf mov jnp fwait xchg pop cmpsl or (bad) cmp loop out std xor jmp je leave push fild or test add push mov add inc inc push adc lods add iret and push int imul inc aas mov push ljmp ds (bad) test call mov lods mov shr clc adc adc sbb cmp and add je push and shll ss cwtl fs xlat push jle lea add and fist jbe dec ret pop in gs imul rcl pop scas mov movsl (bad) push outsb pushl (bad) icebp outsl test test add push push add add jns stos (bad) into jmp xor test mov push push outsb out imul sbb cmpsb scas (bad) dec out ds sbb pop mov (bad) sub aas add pop (bad) sahf inc pop cs jbe add shl or cmp aas ljmp or addr16 cltd add mov in dec mov and pop in outsl (bad) xor push out add push pop mov add les push xchg cmp insb shlb push (bad) faddl adc (bad) mov out stos jmp (bad) dec sub (bad) bound add out stos jl ljmp jmp xchg into in cmp push sbbl pop repnz rorl aas test fistpl rcrl and ss std jp xchg enter ds das pop push inc pop iret lret add and jge jo scas sbb loope cmp or add push aas push andl xor pop dec adcl inc (bad) cmp fdivrs sub push int movl int3 xor mov sub addr16 (bad) ret push div jo enter iretw inc dec push or add gs add int test xchg repnz inc adc push js sbb (bad) lock add bound mov jle inc lods sub add add adc mov mov push inc push mov loop bound sarb dec push int mov add pop sub mov add pop notl xorb stos call mov add clc hlt aam adc cltd (bad) leave jbe add adc fwait mov mov mov xor insb add into pop add adc push dec pop cmp add test add pop test imul sub out pop jbe sub jle cmp xor out pop or push fistpll add jle lods add xchg mov add jne jp inc add scas sub imull arpl pop sarl adc je subl popl pop push cmp pusha xchg fwait data16 (bad) cmp dec dec push mov mov mov fwait and add mov pop data16 add fs jle add cmp out movsl dec addr16 inc pushf lods mov jbe or cmpsb mov mov jle pop es (bad) fidivrl (bad) addb jbe stos jmp repz add inc jp and xchg fbld stos jo jne or mov sbb adc stos dec loop push add pop les lahf mov fxsave mov insl add loopne push dec jns or push sub and clc push jae loope mov inc pushf addr16 pop push loopne push sarb and add sub lahf faddl xor inc cld nop mov pusha jns adc repnz out enter (bad) cmp or jae jns add subl pop imul sbb push andb outsl adc add and pop add sbb mov (bad) cltd std call aaa add jmp or add fadds add pop clc pushf dec inc cmp outsl add push loop and pusha aam jae add pop imul faddl mov mov xchg push add jb sub call test dec mov insb and fnstsw (bad) sub sti add jnp push jge out mov xchg (bad) push add dec pushf fsqrt clc insl repnz inc outsl (bad) out and add pop mov jle popf push test ljmp mov jl inc mov out add fcmovu xchg stos add xor mov xorl sub movsl dec popl or mov mov sbb add push aas and lret mov jne pop jns jno loopne call sub mov push dec add mov out popa fbstp cmp lahf repnz add aam fs sbb mov or inc lock stos jge dec add idivb aad rolb sarb or mov and sarl pop sahf ljmp pop inc add and fildl inc (bad) repnz pop mov loopne xchg inc ljmp (bad) test std lret sbbb addl add dec cmpsl in loopne call or mov inc pop push bound lahf sub adc or pop dec mov add lock xchg adcl dec hlt add jge xor (bad) int xchg popa test add xchg cmp xor adc add test mov ja mov int mov enter lcall mov push mov loop dec jne add or out mov leave add pop aam xor xor cmpl mov jp (bad) stc push add fcmovb fwait cltd xchg inc mov loope sbb aam int3 dec dec xor lock adc push stos jno cli or int movsl lock out add and test add xchg cltd sbb jns in sbb cmc into punpcklbw rorb add repnz push adc imul out add lret jecxz inc or pop (bad) je cli sbb cmp pop std xor js mov add aas orl inc ds hlt fcoms inc lds cmp lods and jecxz sub les inc inc mov popf and pop push pop mov pop jnp mov sub outsb fldl fistpll sbb inc cs add sarb (bad) js addl jg loope cmp inc popa pusha addr16 out imul and jl fxch sub adc mov cs aaa add iret inc fwait push mov daa mov jno push inc mov arpl cmp or inc cmp test add cmp add cmp add es cmp outsb jbe mov add inc call and addl mov sub movsl cltd es arpl in inc aad addl cmovbe pop jg daa mov test sbb push add jmp cmp mov dec xor jge add inc inc add (bad) loop inc pop add shll imul je es add aas jle pusha mov cmpsb (bad) iret enter mul adc pop cmp xchg pop fwait and in xchg das dec add mov incl nop mov xor dec hlt daa add xor es add push xor add je xchg add (bad) cs add xor cmp jmp pop test mov ds inc mov xchg jl aas jo scas pushf clc sbb outsb cmp sub cli sub jl fist sbb xorl lret (bad) pushf sti nop add sarb add in sahf jbe sub add inc insb sahf sub push mov ret enter stos out add leave int push or adc xchg xchg rorb push out sbbb inc add je push lock xchg add sbb fnstsw out cmp bound icebp xor mov das sbbl fildl (bad) subl pop pop and xor mov xchg push sbb xchg mov (bad) mov pop out arpl inc jl shll clc adc mov dec add outsl mov das add imul cmp add mov pop xor jge add dec adc mov mov cltd jnp fwait aam jb jno and dec add push jae and loopne aaa (bad) incb out mov xchg xor ss add cltd popa and inc add ret cld outsb (bad) or jnp pushf std add icebp push pop hlt scas add mov cs push add sub xor add sub cmp mov sbb (bad) mov scas subb clc je (bad) jp jbe sub mov test mov mov mov adc pop push jns ret pop mov sbb ror or bnd add ja outsb and cmpsb add cmp mov js pop and ds pop aaa adc pop addr16 xlat mov adc addl shrb sahf int orl pop push add push push cmpsb pop inc ja adc test and xchg insb faddl jno pusha test cmp add call add int3 mov cmp add call pop xchg add mov and outsl dec inc add jne je pop inc fiadd cmp orl jbe cmp sub lds inc cmp pop add push int test aas xchg pop rorl xchg dec cmp (bad) add add mov loope xchg mov jl pushf add into pop jecxz jnp dec les popf xchg cvtps2pi mov aam out sub mov lcall add es call jbe sbb and js (bad) test inc mov andl add pop and pop push add and pop rolb add pop cmpsl ss mov mov roll fisttpl push aas push push sbb movsl shl dec jmp jo add jo adc scas out add negb jns mov dec add mov pop pop sbb hlt cmp add inc addb cmpsb sbb dec lahf imul push lret es xlat call cld (bad) cltd outsb push add out arpl pop add pop add add inc and xor mov xchg cmp cmpsl jae cmp pusha push xchg sbb push pushf test pop (bad) repnz mov mov mov add sub in subb xor sahf mov pop add fwait or add (bad) fstpt lods cli pop push or pop mov enter test jge lret inc mov das and adcb pop jb adc jecxz xchg movsl ret inc xchg pop mov xor jns sbb xchg jne stos inc js sbb xlat outsl or jge or jl push xchg bound sbb movb loope xchg mov jo jge sbb add sub pop lea outsl fisttp inc stos adc xchg jmp cmpsb push das lea stos je add aas (bad) adc fwait out pop jl jno int jo add mov push dec mov loope sbb jle add or cmp cmc dec ss sti (bad) aaa shl fdivs add in lods inc push adc mov insl or ret add jl inc pusha outsl mov popa xor push sbbb (bad) data16 sti xchg inc sahf rcll xor xchg push jne or mov sub je jns lock and mov orb pop add test and xor pushf adc out push sbb rclb dec lret (bad) mov add subl subb dec sbb pop rcrl sbb jbe iret testb addl pop sahf incl movsl je mov jp (bad) pusha pop icebp sbb jae dec sbb adc or out in out aad xor fs ret dec dec enter cld xchg lods xchg ret jp add ja mov scas pushf das pop loope,pt out rclb addr16 sbb push insb adc add and pushf mov or fnstcw inc mov (bad) fisub add pop push mov cmp test mov test shlb jb icebp je jbe std xor add (bad) add mov mov or push (bad) es loope adc inc push repz mov fmull adcl mov jno pop jl int3 mov lahf pop (bad) repz add xchg fnop pop jo sahf add (bad) sbb xorb fpatan pusha mov rolb nop sbb sahf push jbe (bad) xchg mov push int cmp add (bad) mov dec lods pusha dec push push jne xor into xchg mov add jae push add and cmpsl lcall xchg rorl adc mov push or inc lock cwtl (bad) and ja (bad) scas xor add or nop cmpsl lods pusha add shl push add xor or push lock insl add adcb or and jo cli jl add adc rol pop inc dec inc nop js sbbl xor (bad) icebp cli in test (bad) je (bad) fadds loopne fisttpl js call add leave cmpsl int push add jnp mov adc inc mov dec into add les pop adc rol add push mov cli mov add and mov std insl test and add push pop addl push incb xchg and mov or xchg test mov gs data16 (bad) fdivs or (bad) fwait or int (bad) jno xchg repnz mov xor add je pop sbb dec lock mov sbb (bad) in sbb movsl push add pop bnd mov hlt and inc pop rcrb test clc add sbb add pop orl add adc mov mov jg jbe jne cmp jp jnp fdivs addb mov repz je xchg pop enter mov mov inc into pop pop enter inc push dec cmpl (bad) cmc sarl xchg add test sti pop add cltd shrl lret adc mov movsb jb ret hlt cmp add rcrl fs jnp lds in or ds adc lea push push popa or imul ss pusha int and jp add pop das pop fisub cmp imul mov enter mov ret add and mov inc add ljmp xor mov cmp in test pop add mov fild shrb jle pop add imul dec cmp lahf push xchg iret and call push ret jno clc xchg ss add xchg dec in test roll mov (bad) or mov imul xchg push add jmp out lock add jne push icebp xor addr16 jb sub sarl sub dec rcrl insl jb pop cs mov out cmpl bound std mov pop cmp xchg pop xchg addl insb cmpsl adc sub and ret mov sub pusha loop adc cmp stos js cmp ret and loope mov orb divb inc (bad) movsb mov pop mov enter jle xor and jmp inc mov inc add loop dec inc and push push sub sbb popl iret jae adc aas sub (bad) sbb shll add or push out cmp jbe aad test sbb push mov or pop idivb sub mov leave rcrl push bound cmpsl xor or mov call cmc out pop daa add je orb jo (bad) out jnp fmull jmp negl lret cmp mov sub jle and (bad) sbbb and imul cmp lret pop add inc hlt cmp out add pop jae popf test repnz jo jne sbb pop (bad) sbb fwait loop pavgw xor je test mov cmpl dec rorb orl adc faddl scas mov push inc xchg popf push jo add pop cli add xchg or inc mov mov pusha add xor add cmp jne lret in jnp add inc mov imull (bad) or add out jecxz repnz mov adc shrb mov fs push add or stos sbb sbb and add add scas movl fnstenv push mov push xchg lds out xchg add cmp test arpl jb,pn decb je out rolb jecxz int add and stos call mov lods cmc pop pop fiadd stc dec mov xchg dec ljmp push je xlat add cmpsl pop adc jbe dec into ja or cmp cld insl inc lcall fistp sbb mov sub outsb popa ret add and movsb clc fstpl sub bound sbb inc mov daa sub cmp pop pop fwait pusha mov add test jl mov fucom pusha xchg sbb je addr16 int add popf (bad) xor (bad) jno jb ja pushf fcoml scas mov sub es addl dec add jno mov insb xor push lret lods mov test cld ss cmp xor ds les in or test cwtl mov lods dec jle flds add add mul pop xorb shlb dec pop je add jo pusha enter dec das fwait sahf fisttpl hlt jmp mov sub mov stos test add lock fwait cmp cmc cmp and aaa push (bad) popa xorb add test push add jb jmp icebp xchg inc (bad) mov ja add dec inc incb pusha (bad) and out push mov cmc push mov push inc ds pushf inc leave arpl in fimul jmp lahf pop inc push out (bad) and push push mov xchg xorl fs lcall mov imul pusha sbb mov cli ss mov adc inc sub sbb js addl inc (bad) push je jp jle xchg add push das out mov pushf (bad) mov pusha imul dec add clc inc mov pop bnd mov daa jne mov fbld (bad) mov lcall or test add (bad) push or rdpmc loopne cltd lea les (bad) add imul jp js jb xor xor push add leave push push pusha pop xchg inc fiadd xchg sbbl les call add add push test cmp add jg push cmpsl add js orl in dec lds add rorb pop mov or xlat movsb sti sbb mov scas (bad) (bad) cltd cmp add push cmp pop subb popa prefetch sahf sbb mov (bad) pusha sbb jecxz xchg insb dec (bad) cmp pop add jle lock xchg adc push mov subl mov xchg xchg scas popf clc cmp sarl jg (bad) das or pop std sbb icebp mov add nop sbb div es repnz add decb std add xchg out arpl cs mov jge sbb push roll jnp pop xchg rclb lock pop stos fidiv dec fmull ret ud2 jns dec xchg cmp shrb outsb inc sub jp js popa dec adc cmp lock sub dec add mov sbb mov jnp divb dec dec mov cwtl xor mov xlat and push or popa add (bad) mov mov xchg push and jge jecxz add (bad) out inc scas jo sbb fist sub fs cli cwtl add jns push add fimull aaa sbbb xor repnz mov js daa test or int mov (bad) ret add out fwait push pop stos jo (bad) jecxz pop idivb ror inc mov lds mov jo jae sti and jmp sub aad adc add xlat incl int pop mov push repz xchg or add or mov loop sub pop sbb jae pop add mov push xchg mov mov pusha imul fs lock (bad) push mov push lahf hlt fild pop or xorl mov sbb jne add lock push pop test jo mov into jmp pop in es xor inc xchg jp cmp movsl pop add sub add or and icebp cmp add in pop jno push dec dec add mov je ret out fdivrl scas push add movsl add push add dec dec rolb insl or mov sub test add test out add pop in pop sub call loope adc add es inc add add icebp add negb (bad) out inc xchg and add shl lret mov stos aad cmpsb dec pushf mov iret or cmp lea pusha jmp cmp neg sub xchg loope in pushf in das mov jb sahf (bad) lret push stos les xchg cmc mov sub je faddl sub inc sub mov enter daa andl aam faddl cmpsl jb mov loopne dec add or lcall cmp xchg push fdivrs cmp (bad) out lret lret fistp test lcall add loope lret add and adcl mov jo adcb test rorl and xchg lcall pushl fstp mov lods lret add cmpsl mov aad mov fsub in add aam outsl dec cmp flds loop lods adc stos mov enter mov mov and and push sub movsl jo lds jp xlat sub add cmp sbb jmp push push push add imul and stos pushl add inc pop icebp je nop bound insl movhps clc outsl add lock add bound sbbb and adc dec imul adc mov dec (bad) fidiv add gs das ret push std je pusha test pop mov cwtl stc adc add cmpsb add pop data16 mov and cmpsl pusha aas fistp mov and lods push pop push call out mov push add lret add push ja cmpsl or add mov sbb mov outsb lcall lahf push ret mov and ds flds (bad) and jl scas pusha add lret in dec sub mov push mov add push rcrl scas xorl js std jo dec jmp in jl jns add mov adc sbb loop push add mov pop pop les and pop xchg mov mov aam push xor fdivrp jno mov push cmpsl cmp jno add cmp cwtl lea lods xchg pop and pop and sbb imul andl jbe xchg add xchg rcrb add outsb mov orl inc addb jne mov sub add inc fdivr jae addl mov xor scas sub and popf mov mov add sar and xor jle push push inc push imul mov mov or imul subl loope xor mov pop xor mov cmp sub add fs mov xchg fadds cwtl mov mov pslld clc push xor sbb (bad) (bad) xor push and inc test popa jbe arpl mov inc imull out in dec (bad) imul add jl push test dec fstpt xor add add mov jmp and push and mov (bad) (bad) outsb scas mov pop add sub shll mov cwtl sahf xor dec cmpl push sub jo sbb and movsb (bad) lods rcl mov xor jb add inc loopne (bad) stos sub push stc divb pop xorb rcrl pop inc jne insb cmp roll add std fistp (bad) outsb add sbb cmp sbb sub add lahf inc sub xor pop les sarl mov or sbb je mov xlat cmp pop add cltd jg cs jle (bad) adc add jns ss pushf add push cli mov fimul sbb stos pop xlat lret cmpsb sub xchg loope mov jl cmp jbe subl rclb xor xor hlt bound xchg xorb mov dec imul xlat mov lods add (bad) and pop outsb add rcrl cmc mov cmp jl sbb sbb in push addb divl call cwtl lods scas scas jbe sub pop xchg sti mov push push pop shl mov dec push lret cmpsl add popf mov (bad) add subl test movsl sar sub aad sbb mov fistp add cli aas fwait jg imul sbb add mov mov lcall xor ja mov paddusb pusha out cmp mov add outsl dec popa nop mov into xchg loopne addl fcompl cmp mov jp add push pop ja adc test pushf cmp mov scas aad cmpsb pusha pop ret flds popa lods push insb cmp pushf mov lret inc add daa adc movsl sub popa add pop loope (bad) jmp jle add dec add sub fsubl inc push sbb mov insl ja je add lock movsb cmc jp pop fsubl cmp notb ret fidivr jl and fcmovb pushf jbe mov jno mov js cwtl add and push testl jne cmp mov fisttpll cmpl fdivl rcrb mov mov sbb mov imul xchg jno inc inc jp cmpsl out imul inc xchg (bad) xor and jmp enter mov sub xchg sbbb int bnd outsb mov adc push jns add pop aas sti add int or jno cld add push cmpsb repnz test roll aam fcmovnb dec mov fldl fisubl test xchg sarl and jle je rolb xchg fmulp mov jmp add mov sahf je add or add js mov addl popf jl cwtl fldl call and sub push jle add mov xor je sub or add rorl add insl or add fidivr cmpsl int3 outsl ss out mov xchg test mov push insl xchg add cmp sarb cmp add xor push out push shld cmp ja lds movsb fsubp shll sub add call sbb aad or repz xchg jns mov inc mov adc and js (bad) jecxz cmp push dec (bad) ret inc push dec dec lahf add and fs jnp mov sbb dec das gs cmpb pop push insb add incl add popf and push add popa lds ds add mov inc test imul out insl lcall stc inc jge mov cmp outsl mov jnp pop popa or ret (bad) sbbb dec fidivr fwait xor out xchg add mov subl sbb imul xchg jae add hlt mulb fistl lods add fnstsw jge lcall pop mov mov lds push add xchg pop popf add cmpl sbb in gs or sub add mov in mov adc push (bad) repz push jne mov add and add push movsb js pop rolb push xor mov and loop cmp push fadds in or addl leave add sbb cli inc fild pop gs repz movsl jbe mov dec push push fisubr add adc enter cmpsl into or test orb (bad) fadds pop pop popf hlt (bad) mov stos cmp mov adc jnp rorb mov push add or sarb loope ds and inc popf ljmp inc or adc jmp push mov sbb add aaa movhps sub sahf or push int add andl movsl ret pop in clc psrlq mov pop je xchg add push push cmp scas add mov pushl dec inc mov push push jno sub (bad) add and or xchg jge add adc sub sub xchg shrl and push nop imul js divb xorb dec pop cmpsb lret and adc addl imul scas dec inc sub xor inc in insb lods mov pop aas lahf add ret mov add dec add add jns cmp inc mov xchg inc leave sub xchg sub add add xchg stos sarl lods or les inc pop aam xor mov or jle jo cmpsl push jge and mov (bad) std inc mov jo mov jg es xlat dec cmp fs ds mov mov std flds leave enter mov push add cmp sbb inc add xchg pushf cmpl pop popa and (bad) loopne mov jo jne push (bad) mov scas add in pop push xchg inc cmp adc pop jl add arpl leave pushf xor xchg (bad) adc dec pop orl mov mov imul sbb jno cmp or xor xorl mov push xchg addr16 sub mov roll fistpl jp xor push inc sub adc inc inc xchg mov xchg (bad) ss js add add xchg xor aam add fldcw cmp sarl stos push add dec cmp insb push (bad) daa hlt pop stc jb add enter add and and add adc lcall mov add ljmp add lods fiaddl mov add ror nop pop mov test jae pop mov insl add rclb mov sub les push ja notb (bad) mov roll cmovg jne sbb jnp add aam cmc mov dec popa in sub xchg add cmpsl mov push fdivr cmp ret mov mov (bad) xor fcoms cmp cmpsb daa (bad) jp pop adc dec inc sbb mov clc push loop out lcall fwait jp iret sbb jle (bad) jbe add out inc mov sub jecxz lods icebp xchg sbb mov jo hlt sbb pop fidivr push out pop pop popa jo mov and inc les add xchg dec add in mov xor test imul add into and xor mov or lsl xchg pop dec in mov pop add addb add ret lds add jb mov jmp (bad) (bad) cs inc add mov dec pop gs test test in jnp xchg out out sbb pop add and add sbb (bad) lahf lret inc (bad) add mov rolb pop mov iret mov loop mov nop cmp push in lahf ret cmp std fadds out aas add xor pop inc sub pop out aaa and or nop xor sahf lahf loop add add add adcl pop mov pop add push outsl cmpsb xor pop sti loopne add jg out add lods cmp fisubr jne jbe xchg repnz add enter xor adc jae pop jo or and mov fst push sbb pusha scas aaa jbe roll test push mov jae jle outsb add jecxz dec add mov adcb inc lret seto or testl mov add popf or std inc in adc push cwtl cmpb sub outsl leave mov aaa mov aam add sub lret mov popf cmpsb xchg push in ds loope and add adc ret inc or icebp lcall add adc xchg push push ss add lock add xchg loopne repz cmc add lret scas les sti xor pop lahf cmp add pusha mov add pop or add lock jg test fmul jmp pusha add (bad) and mov sub jne stos cmp cmp pop and (bad) loope,pn pop arpl jbe dec dec je mov sbb inc sbb pop xor pop sbb subl add imul add jg pop xchg ret xchg orb add inc cltd in mov fild pop (bad) leave repnz test push jno cmp mov sbb fwait sbb xchg (bad) loope cmp inc in or popf mov or jp (bad) jno push pop imul call or es sub xchg cmpl push and jl xorl jo and add inc jno jnp xchg add in xlat out bswap lods add int3 fisubr dec push repnz push mov cmp in ljmp xlat pusha mov push rolb or (bad) pop adc imul es xchg xchg add cmp shlb sti jb notl pushf add (bad) jmp add outsl or clc addl pop inc xor adcl pop cwtl adc out fisttpll xchg xor (bad) pop sti cld gs ret into pop cld adc adc cmp testb inc test sbb mov add loopne scas sbb iret js pcmpgtw or add enter jg pop add rorl pop push rclb add cltd (bad) push mov int add push sub loope sub negb shl adc je add in xor sar add jnp mov add cltd cmp add inc xor in fdiv pop test sub into ss dec push add jmp lea cli js mov mov mov add (bad) hlt insb rcl xor jl,pt and push daa mov dec cltd pushf mov inc fwait pop xorl pop add jmp xchg pusha jb fldenv push fwait mov inc mov mov imul sti popf jle insl cmpsb mov dec outsl lds add mov and sbb fs leave or test cmp jns iret orb adc js add pushf in add sub aas add in sbb insb and inc mov stc add mov je es add sbb orps lods imul repnz pop sbb popa adc sbb mov fldt pop jno pusha jecxz inc cmp and aam xchg scas sti add test aas inc add mov dec es add mov mov sub jbe jns inc mov sub sarl xchg repz mov sbb mov xchg gs incl iret adc sbb push std test cwtl sub cmp scas fsubs lahf push js add lea ret and jo lock add inc movsl add adc sbb movl mov add lock push or enter and push shlb push push jbe dec add jge fld mov lock enter mov ja in sbb ficom or push int ljmp loop adc jae movsl mov jle add cmp add aaa mov push mov add and fcomip adc test push add dec xchg (bad) pop fldenv sbb in ds ret or sbb cli test movsl int call xlat dec push mov pop add inc fidivl testl hlt and fs and inc gs repnz outsl ds scas adc push or dec ljmp out mov dec enter nop mov mov add (bad) call lock add dec add outsb mov sub xor fwait cmpb insl repz push rcrl or jbe add xchg push fdivrs add push dec (bad) mov jmp cmc add xchg test push repz xorb or mov cmpsb dec inc xor sbb xchg jo xchg insb xor roll cs stos cmp and into add dec dec (bad) add pusha icebp es xor inc test dec dec mov xchg pop xor or daa add mov cmpb fdivs mov sbb sti mov fcompl adcl jae xor xchg or and adc dec sbb jb push add and insl xorb (bad) xor sar (bad) add push and orl in dec cwtl xchg scas pusha and pop add or das mov (bad) jo fiadd mov jno fwait jae push out in inc lret ljmp dec sub mov (bad) add push dec mov (bad) int3 add insb sahf push mov xchg icebp jbe stos dec js iret add aas xor sub mov addr16 out and add (bad) rcrb adc arpl orl lret inc cmp jo xchg pusha call movsb cmp push add inc xor sarl popf (bad) sbb jno dec push mov arpl out cmc ret fldenv hlt mov lahf jp cwtl dec add mov loop shrd inc lds push push mov mov cmp cld pop arpl xor loop lock mov cvtps2pi loope add cmp pop add mov inc sub roll imul push sti push pop xor popf loop push je and xor enter fsub icebp test add js call cld xchg jns inc xchg lcall iret repz scas cltd outsl jb add dec inc xchg push pusha cmpsb ficom xchg jb pxor daa add push ret cld (bad) xchg add push loope sub mov insl xchg or popf (bad) call lret add out rolb pusha js jp add lcall aad gs push inc repz push mov insl stos sti mov adc dec pop adc add inc imull js orl jle faddl jno mov xchg cmp mov and xchg outsb (bad) push popf stos push jb or sbb sub adcb cmp xor adc shrl mov add sub rcr ss or inc or add ror sti xchg sub and rcrb sbb add sub push dec pop mov in xchg fistp cmpsl add movl enter lods and out jne addb jb movsb dec jp or jl jbe inc js mov sub push mov sbb les icebp sbb push insl lahf inc ss mov pop fldl cmpsb jle add insl test imul cli and std (bad) jno movb xchg dec or add in xor test jmp aad mov dec je dec (bad) popf sbb mov fidivl xchg pop or and dec xchg cmc das je loopne iret dec push mov sub lret pop add sub inc jecxz imul leave xchg xlat mov cmp mov popf mov ja add cmp add iret pop xor sub jp shl test add (bad) in ljmp ret pop adc add sbb repnz cmp stc add xor jecxz (bad) and or pop sub pop sarl add mov bnd lea xlat out (bad) sahf xor icebp jnp ds aad add sub cwtl cli call add push cs push out sub mov js sti adcl stos in jno add (bad) xor call loop in add push and xor mov push add aas mov add dec push fnsave or or jmp aad movsl add xchg mov fist stos pusha xchg xor xchg cmc sub cmp lcall fldl (bad) int3 jl push movl (bad) bound shrb cltd inc fisttpll aad mov and add jbe inc out or addl mov bound es xchg push and in xchg js pusha add push loope add insl mov lock jle jge pop or add adc ljmp mov push int xchg rorb jns or xchg sub or enter mov sbb xor aad movl mov movsl (bad) cld pushf or push ds mov add add insb add inc mov pop add jl,pn cmp push mov inc (bad) jne das int into insb aam xor push push add std pop adc or idivl test sub aaa pusha sbb dec test add ret addl or inc inc cltd push insl adc movsl jo stos stos jbe xlat add sbb fs lods adc mov adc mov nop xlat adc inc push in mov mov (bad) out and mov loopne add xchg je inc adc add js dec mov cmpsb mov roll sbb pop mov and add imull sahf jmp popf push inc inc mov adc cmp jo sti aaa add jg movsb cmc mov stos xchg inc jnp ja add (bad) cmp sahf push push inc inc jno (bad) clc jle jmp lods je mov add sarb inc cli adc sub sbbb ficoml or mov fwait (bad) cmp out cltd mov jmp cmp subl jo xchg mov cmp jbe push les pop frstor mov jecxz arpl adc cmpsb adc push subl std nop pusha aad dec int3 add pushf xor mov and iret mov jle sbb mov ds pop xor les jo adc into (bad) jno cmp (bad) adc rolb add mov and stos jmp and add dec xlat daa dec movsl xchg andl adc xor imul inc sub (bad) ljmp mov xchg and xchg arpl addl in dec jae icebp mov pop pop mov shrl add sbb mov add xor jns xor cmp cmp add out and adc idivb xor outsl (bad) rol xchg inc xchg and mov rolb loopne push fwait loope mov mov xor stos xchg sbb adc iret and dec imul mov lods sti (bad) mov or pusha dec ja xchg cwtl lcall xor fild shlb lret (bad) xor es xchg inc out xchg jmp add cli push sub sbbl sub adc inc add cmp push pop roll test dec mov mov mov out nop inc lea mov ss pusha mov xor mov and outsb and pop push sbb pop add adc dec jmp fdivrs pop fistpll add fnstcw popf sahf pusha stos cwtl in inc aas mov imull arpl add pushf mov xchg movl cld push push push fistp loope out mul das and sub jl xor mov sub xchg in icebp dec mov jne xor test add js pushf andl xor js pop mov nop (bad) mov add je mov push loopne add outsl mov jno leave mov dec rolb les mov aad jbe lods call dec movsl (bad) lea cs add lock inc notl test add nop pop loope pop push sub jge hlt cmp loopne adc js jl add enter adc into inc sarl xchg xor jne add mov orl jo test sbbl shl and add test fnstcw mov add jg aas jmp insl inc test cmc pop add add outsb mov (bad) xchg rorl movsb pusha inc pop shlb js add (bad) repnz out xchg lahf inc jnp cli inc dec mov faddl jmp mov push pop mov inc dec ja add sbb sub cwtl add add out fwait add mov pop ljmp xchg stos mov xchg add add jne ss pop imul out in test imul jns adc scas cmc add adc imul dec mov sub or out jae and add scas inc into add push (bad) pop jl mov inc sub pop sbb mov jne jnp arpl je jg xchg xor mov mov sub arpl lea mov sbb or mov test out cwtl sarb out sub (bad) sbb xchg adc add add jle add xchg fld sbbl adc push mov pushf pop jle lds aas add cmp mov xor add nop mov add popf mov mov js fisubl (bad) mov in sub daa add sbb xchg out sub lret and cmp pop mov sbb fstpl add stos fs (bad) out roll (bad) jo xchg js sbb jle adc pop push add xor xor das dec pushf test addl pop push int lahf jno sbbl jne repnz addr16 ds add pop dec (bad) pop aam add pop sub addr16 insl push adc cmpl ss je in xchg cmp sub adc push cmp xor les pop imul push in sar (bad) cmc andb sub xchg ja pop adc jae mov lret lods test pop sub dec jl xor cmp add rorl add iret inc (bad) aaa fistl outsb out add test add and xchg xchg pop add scas pop pop add jb mov xchg push or cld mov lret add add cmpsb mov mov jne mov xchg add xchg sub sbb add ds fnsave out pop push cmp push pop shl inc ds add fistl fs cmpsl jg inc push pop cld lods int mov mov mov pop add jp cs jl das cmp iret add jo dec pop cmp ja enter push nop (bad) aas movaps shll sbb (bad) jae add repz fcmovnu cmp add mov xchg cld jbe jne shrb lahf mov daa out jp adc mov lea and push xchg dec add and jae jbe popf pop jns add cli sarl (bad) mov outsl js cld inc adc std push dec xchg sbb aam add aaa repnz jo dec pop stc sarb and cmpl rclb fldl dec dec push cli add fadds add dec push xchg sbb pop mov add aas int lcall sbb imul rcr test daa sti jo sarb sub popa xchg pop add (bad) repz ret xor cmp add stos fbstp pop fisttpl sub jb (bad) mov add das push je xchg fildl fisub decb sbb mov imul push lret and stos cmp imul add repz rcrb sahf mov cs and movsl lds stos pop mov mov (bad) jb push rol sbb test scas or add lcall lods adc sub or clc int pusha stc cwtl sub mov or jecxz,pn adc add add and not test std push dec fistpll add push add test dec cmp add cmp adc loop (bad) add (bad) fbstp incl push sti mov sbbb and pushf pusha gs add jno inc xorl lock mov xchg pop (bad) push scas movsl daa test cmp nop scas xchg xor cltd or orl jo sub mov mov pop std mov daa loop in scas jb add mov push lea pop xchg in or les call addr16 push cmp (bad) mov jbe test cmp jg subl out sub add add push and adc mov dec cmp lret subl and push cltd add xchg dec mov (bad) jno add xchg pop jbe sbb pop or outsl push inc scas pop mov sub sbb xchg cmp xchg jle mov add xor gs leave jae in push push sbb mov add sbb inc nop sbb movsl mov add fsubrp push and testl stos (bad) dec rorl jns pop leave add loop inc gs mov mov mov add test aas loope jp mov mov ret pop sbb xor (bad) jno sub addl adc daa fs outsb jo std push movsb out add in fwait addr16 xor cmp push dec jae push out jge (bad) arpl inc or adc movsl cmp aad pop orl sub imul pop je sbb test sub push or add sbb leave mov push pusha pop cmpsb inc xchg popf sahf orb sarb mov fsubp inc pop push mov ja (bad) add mov add add mov or add sti inc mov popf (bad) out les sbb xor dec fldcw daa add loope pop pop out orl icebp nop js outsb pop popf cmp and xchg cmpsl jge cltd sub adc popa out mov cwtl push cmp mov jbe xchg mov inc add mov lcall inc ret imul daa leave sub or pusha stos inc mov sbb sarl and push add fldt sub jb jmp inc push sbbb loope clc sbb ret xchg dec pop jmp scas pop and cli shrb in sahf dec pusha mov add cld fildl pusha pop ljmp mov ds das add adc lret int mov jae into fsubrs sbb or test in jne pop push pop cltd pop inc dec adc es dec add pop mov pop cmp pop or clc rolb mov fist ret pop mov cwtl pop cmc in jl mov push std push enter jl and lods mov add ja,pn gs push outsb fs pop pop test clc push push add fldenv sub or xchg and inc mov add lods orl cmp js sbb and mov jmp stos sbbl fwait sbb and mov out fnop neg incl iret test jmp sbb pop andl cmc inc pusha icebp mov pop lea mov subb sbb mov dec xor flds jb xchg hlt das xor pop xchg out push fistpl ficom sub add lea push add cmp mov (bad) cmc add pusha jb add imul sub pop add pop loopne add inc mov adc xorb jp adc outsb jne jno pop mov push xor add adc and push iret dec popa push lea jnp aas (bad) cmpsl sti pusha jns andb add fidiv cmp pop sub dec notb add push xlat sbb mov dec and jle add and or pusha js nop pop in lahf paddb (bad) pusha hlt or popf jecxz jnp add xchg test movq movsl pusha xor inc mov icebp add mov bound dec in testl fisubl cmp sti inc xchg fsts sbb inc sahf imul inc jbe pop cli repz sub push push stos cmpsl cwtl add cmp mov icebp add jae repz push lea mov in add dec pop and add pusha jmp dec (bad) movsb add add dec and jg shll cmp xchg iret xor cltd ret (bad) scas inc dec xlat push adcb xor js nop dec in js add ret inc daa mov test loopne mov mov xor pop ljmp loop js repz jl incl sub ja push (bad) and push push cmp and lock (bad) push mov inc sub xchg jae adc add mov push add aad in jae pop movsl andl dec xchg xchg xor inc dec mov pop pop mov lea rolb lret push popf adc jecxz add add sbb sbb push fs outsl jge add dec mov movsb add add cmpsb neg rcrb loopne cmp movsl mov mov pop jbe arpl adc pushf sbb cmpsl xor lret test pop pop jge mov jb pop add jp add nop imul lock jmp adc sbb cmp cmp xchg test daa adc aaa negb add fistl xor or cmp scas lcall out xor scas or fidiv jae add mov lret pop cmpsb add pop sub and sbbb adc outsb jecxz aas or add inc inc xor pop jne mov xchg add and inc mov popl gs sbb jne orb sub lea sbb mov out add lcall lret out sti int inc lret add (bad) fucom xchg add lret in test dec push add xchg popf in pop xchg xor pusha inc sub ja orps pusha add test adc pand fcmove in sub pushf cmp mov ret add (bad) insb push sbb sbbb iret push jg push push (bad) add ret lret sti fnstcw mov outsb (bad) fildl jg pusha (bad) iret jp xor jbe orl rclb mov jg out push xor add mul add movsb jns cmp ds aas dec add pop imul loope ljmp insl pop into stos add cmp je mov ret xchg lock mov fwait gs mov mov je add cmpsb mov and xor adc popa lahf in sbb int3 je push (bad) leave jmp (bad) pusha mov xchg sub sub jp add into mov call in adc mov hlt outsl verr es sbb add adc fisubr jbe xor inc das and jle xor (bad) je lock add test xchg push inc sbb call mov add and movsb shl add cwtl jmp mov js hlt adc sbb inc das ret pop add pshufw mov data16 ljmp mov roll inc cmp xor cmp add or int pushf rolb ret jno adc jnp pop aam addr16 cmp test add sbb fwait lock (bad) inc in or xchg (bad) mov stos roll and in cmp adc mov adc add orb add xor push jle and mov (bad) out add ljmp add xchg cmp mov push and repz stos cmc lahf cmpsb jo add mov pop xor lods movswl (bad) std add nop mov inc add int xchg (bad) (bad) mov add xor mov adc call and sub xor cmp das add or inc sbb jae rol xor xchg cwtl ret scas xor mov mov xor dec cmp mov pop jl pop jnp lret stos mov into add sub lods push mov out push das mov imul jl add xchg add or popa add int3 in xchg std mov pusha sub mov enter or mov mov repz pop (bad) sbb dec jbe add and add cmp fstpt (bad) adc xchg addr16 ds sub mov push jb cmpsb das lahf mov lret leave int and sub jnp add lret dec js cmp jmp les in add sbb xchg jp add xchg addl insb lock inc jle push and movsl mov mov add push scas popa js or addl dec clc fwait dec and add lcall fidivr sar outsb in adc mov cmp lea xchg xchg xchg pop sarb outsl add sub test es (bad) clc mov out dec outsb cltd aas pusha sub add jp frstor inc jl out jne adc jnp mov and push and in test add cmpsb stos inc sbb pusha and leave mov ljmp (bad) lcall (bad) jno add imul dec cmpsb (bad) lea mov xchg inc lahf add xchg dec dec dec pop sahf add jl push fldl test mov pusha add cli add add stc pop icebp aad ret sldt leave repnz jmp cli arpl add roll sbb dec or mov sar cmp jns dec push add inc jmp add mov jo add (bad) (bad) adcl out adc cmp add mov int (bad) mov sbb xchg add fsubl pop mov (bad) je mov cmp popa test imul pusha jl in fcoms movsb add jecxz fmull jg add out jb aas adcb fistl pop mov mov cwtl and (bad) sti in add addr16 mov test dec cld pusha and jle adcl and xchg pushf mov mov sbb inc and jno mov fild cld es test insb in stos mov add push (bad) addl fiaddl into dec or std cmpsb cmp or mov xchg jle ja iret pop (bad) add push jp stos lret mov adc mov icebp cmp testb inc loope inc sti stos adcb lahf movb dec adc pop fwait shrb mov aaa and pop add loopne (bad) insb pop frstor mov dec cmp dec inc (bad) ja jo in nop add mov add push mov xchg lcall add and pop xor pop push (bad) out push jne stos test xchg add shlb add lds shlb iret imul lods cmp xor (bad) mov out add xchg xchg mov cmc xlat movsb fnsave decb lret add xorl jb xor add pop pop out je mov bound mov (bad) adc mov jbe ds out (bad) into dec xor add cmp (bad) nop jp jne add lods insl dec (bad) mov add dec jg out add jae pop sbb push push and mov jle subb (bad) stos push cmp pop add int out ss adc add gs aad icebp hlt cmp scas xor decb add push lea sub aaa pop or dec xchg pop jo mov add xorw mov add cs mov or (bad) cmpsb incw inc movsl (bad) jmp mov mov pop push adc imul jl and addl (bad) jl das clc add inc jge in push out popa les xchg (bad) cmp or pop test push adc popa sahf jns jp add sbb mov sbb je nop sub jns dec mov cmc add push lds (bad) dec add jl icebp xor jae push push scas rcr dec test jecxz mov and add fidivrl bswap loope and out idiv adc lods mov andnps mov inc sahf pop sbb in outsl mov pop xor jo insb or mov lahf fmuls pop sub jbe xchg lock xor dec jmp add jae sbb push sbb stos mov inc inc int add dec inc sbb add popf mov mov (bad) rolb mov std pop in or popa inc pop iret or fwait lret push daa pop nop and jb xor js,pt fildl outsl or test in hlt lahf xor aas repz xchg ljmp in sub add add inc push jne mov pop pop or mov or add cmp pop add fidivrl stos jmp popf repz out loop jae push adc enter dec push imul and movsb rcrb xchg aas add or adc leave add popf dec xchg cmp add sub mov mov pop sarb shll sub push xorl stc lods lods pop pop sahf jbe test cmp out mov (bad) sub inc popf sahf inc fmuls sbb add test xorl push xor icebp in jp or inc mov sbb scas fsubs xchg in sub inc xor push pushf (bad) mov mov mov xchg cltd test test int3 movsb out aaa mov pop ja js and lods cli and stc adc xlat pusha push (bad) leave sbb ret xchg adc add pusha in xor cmpl or adc out and adc adc adcl (bad) pop cmp nop add adc mov add cwtl inc lods rorl cmpsl add ds out pop xchg jo xchg xchg or pop sub adc rcl jl movb cmp jno push pop sbb add out add xor and pop lret divb outsl or push mov aad pop push les add pushf mov sbb mov rorl mov or js pusha repnz jnp sti rolb (bad) mov ds imul psubsw xor xor pop fwait mov aas jo test sub mov xchg jl mov movsb fistl sbb outsl or pop fs pop addl fisttpll inc sub pop add jl pushf call mov popa iret sub xchg sti adc cmp adc xchg xchg inc cltd push jns out fsubl lret cmp ss pop xchg pushf add dec or in jge mov add dec jmp mov cmp xchg push mov mov sbb inc xchg cmp inc xor in add adc mov ror subl test sbb insb jb mov mov ret add cmp cmpsb xor out mov push pusha adc arpl inc mov add aaa (bad) imul fs push test mov orl pop scas add pop idivb xchg cmpsl add (bad) cli aam or sti sub and rcr (bad) mov and ja mov rorl insl in jg frstor add stc xor add std mov xor pushf add jo mov in loopne leave repnz sub push das popa or cld push je pop sub ss movsl outsl insb (bad) pop lea mov leave js test scas xchg loope push inc fucomip add outsl test incl icebp into push lds jp xor add loop ljmp scas mov mov sbb adc cmp insb sbb out aas cmp test mov sbb jecxz adc cmp push cs repnz mov and jp mov (bad) mov int push push jns add addr16 add dec jecxz lods sbb jb sarb push xchg push scas fnsave scas inc mov inc or inc (bad) out test and rcrb mov leave sbb icebp in aas jl sub lret dec cmp push inc loope ja add mov aas cmpsb pusha movl mov dec mov adc or lds push adcl push ret jnp cmp ljmp dec add sbb lds divl jge cmp in adcl js or jg xor movsl or xchg mov mov mov sub das cmpb ja mov mov cmp push and outsl mov dec or (bad) sub adc mov pop jmp in loope shrl adc jl pop and inc aas add pushf lods leave push jge pop pop inc push mov pop add (bad) sbb int3 cmp and add clc ds (bad) lahf mov xor cli mov sahf bound dec add mov xor jge jg add jo in cmc sbb or cmp lcall addl sahf dec inc xchg and clc sub inc int sbb add sti mov dec push push adc jnp add testl adc fmul aas aam add orl add mov add push lock add std jp jle outsl and jne pop pushf in pop movsl or add mov jmp xor (bad) adc xchg incl add dec fs lods add (bad) aaa insl cmp lcall sub sar add ficomp ret or inc add hlt out add ja sahf add mov or orl test mov dec add jb into mov outsl pop and cmp pop mov jmp lret aam or mov cmp pop mov sub sbb popa add cmpsb mov xor mov cmovne lock cmpsl mov inc pop adcb popl add sbb (bad) mov shlb dec stos andl push add scas std cmp mov fdivrl stos mov pop popf sti jae xchg mov (bad) jno imul stc pusha imul pop push jmp dec sub xor inc adc push pop inc or push fisttpll sbb mov cmp add das movsl cltd xchg popf add sbb into cmpsl xchg jg rol mov xchg inc push outsl mov out fs cltd nop mov add and inc cs rorb cltd push jo inc add jne mov wbinvd loopne cltd mov jle or add fcomi sti je ja pop fidivl sar and xor pop mov add add fsubp or mov inc add pusha mov sbb dec (bad) stos xor inc xor test mov mov popl incl jno mov sbb lea je test jo inc jo outsb xchg add nop push sub and shrl lods pop add sahf push outsl sub adc mov inc negl imulb cmp movsb cld dec pop ret adc inc and (bad) hlt (bad) jae test inc scas or mov and test (bad) je (bad) mov fisubrl aas test cmp (bad) cmc mov (bad) repnz sub push rolb xchg push repz add mov test add popa cli rcrb push cmp (bad) pop aas (bad) imulb sub pop add stos test mov cmovo adc aas sub mov fstpl movsl pop subb sbb cmpsl mov ret arpl std add add mov or or and pop inc push cmc shr add pusha out pop lret jmp add addr16 sbb (bad) and xchg add xor in or sub inc loop std add in imul mov xor in out jns lahf jg inc dec or cmp jge mov push sub or enter hlt lds jb add ljmp inc push loope push mov jp jbe add push and lods (bad) adc inc mov jb rcrb jl fistp lods add cmp and add push addl adc xor inc cmp cwtl bound inc lods dec sbb jl out sub bnd xor cmp pop xchg lds in in xor sub add mov inc aad xchg fwait or jecxz jnp cmpsb mov cltd pusha mov xor bound jb imull inc dec add fsubs cltd jno mov mov add xor mov stos jns out add add pop add add and xchg loop cld popa pop pop (bad) cmp fdivp inc insb inc jo sbb aad xchg jae adc lret add inc add (bad) rolb lcall (bad) adc out push adcl dec jbe or sub xchg ret icebp inc ja mov xchg sti xlat push lret mov adc pop lret cmp jns add mov je notl pop mov sub sbb shll add xchg fcmovnb xchg cmp ficompl xor stos dec or sbb dec arpl xlat cwtl shll mov add ss push leave cwtl insb add sub int3 fldl sbb dec or mov xchg lcall and and das ljmp push fidivl add push adc sbb stos mov push push add push push cmp outsl pusha (bad) mov pop add cmpb pop pushf ficoml cmpsl (bad) or pusha xor inc ret andb push in fldt jle stos jle add dec jmp add jmp sbb cmp xchg pop push stos jae cmc mov test pushf out inc in push aam mov xor sbb add mov push es push sbb andl jnp loope (bad) jne mov clc mov fnsetpm(287 pop pop popl cmovo xchg (bad) inc int cli fwait inc fdivrl test lds add decb mov inc xor jecxz das mov fdivr pop addl in mov adcl jo movsb enter (bad) loopne sub (bad) mov inc add mov movl xchg add jnp pusha cs out add mov dec jo adc sub add out insl rcl mov popf daa js mov cmpb sbb add (bad) repnz push add sbb jl and jns jecxz cmp add push jge push shlb call fdivp mov push fistpll add xchg mov add out mov mov mov rcr mov mov dec andl je lahf add movaps adc in ret loop,pn mov cwtl xor rclb dec pusha xchg mov add inc mov jl shll add dec stc push jle add mov sbb test pop fisttpl mov outsl enter fs (bad) jns cmp cs movsl add dec xchg mov mov mov out popa in fadds xor arpl mov rolb jo push jge mov rorl add push mov stc add fwait call rorl mov lahf icebp std rolb minps mov add add inc adc mov adc sub stos push and mov xchg mov aad mov cmp out dec add cwtl push and faddl fildl mov pop sub jns push in andl mov dec sbb cmp (bad) jb ret mov out ja mov pop imul adcb mov add dec test cmpl stos jo push pushf add rorb mov mov mov add mov push ds dec movsl cmp rcrl mov push repnz loop lret adc pop in fcoms sbb push sub sub add rcll lret push add mov jbe add add add sbb cli in or gs xchg (bad) mov xadd push push add jle pop gs pop inc adc push fldl roll cmp xchg and and aas pop and test test sbb or adc cld add adc add pop push mov add pusha out cld adc xchg pushf sub inc inc int imul pop mov test or jl jmp and dec fsubrp sbbl aad inc mov mov cmpsl fwait add pop mov push xor cmp dec mov fisub scas lret add jmp jns andps pop pusha sub out mov jb add mov mov inc ss repz jl aaa fstl or xor dec test add icebp mov jecxz jo out mov jp dec dec jl xor jecxz sbb push mov jmp sahf sahf mov in lds jmp jle mov fdivl out (bad) mov dec push add shrb jne or les dec jmp mov (bad) mov mov inc ds cltd add mov jg les mov pop sar add sub fisttpl fimull inc dec pop cmp rolb call loop mov jnp popf pop jle and sub jo xor add inc enter lods cmp cld add mov jns andb icebp jle test dec push jae fadd (bad) add int xchg lock xchg popf pop cmp stos push push ret and cmp test pop sub cmp add and cmp mov inc inc jmp sub xchg fdiv in fs push outsl scas inc nop repnz in inc (bad) mov pusha mov testl insb mov stos lcall push adc lret add jns stos (bad) nop inc outsb (bad) lret pop sbb popa add cli into sbbl pushw das pop test cmp sub pop mov push jecxz lahf xchg mov push pop sbb insl iret in pop add ficomp xchg add jl pop jecxz mov mov pop js cli jl mov xor in push lds imul mov cli js xor and push cmp adc or add fcomps add push out aad and and sbbl mov enter lea xor stos test add xchg andb and mov jl insl bound add mov fild pusha repz or mov inc mov pop xchg xchg push and mov cmpsb sbbl xor neg push sub inc pop ret jo fs mov clc adc mov jae rcll cmp pushf add jo (bad) sti xor add je push dec cmp xchg adc arpl and ljmp rolb je cmp push mov xor dec mov es nopl sbb inc ds mov jp mov sub mov jle adc ret fimul inc dec mov cmp jo,pt std adc in mov adc sub jp add pop xor das add mov jge cmp jp adc aas jecxz and orl mov mov push jb add je dec imull jae jo add xchg aas add fistl adc add sbb sub pusha je add push xchg add cmp mov inc mov das dec sarl imul (bad) adc (bad) fwait lock scas sahf ret add insb daa push add lock mov mov mov sti cmp pop add xchg in imul ljmp xor mov int in loope (bad) jb add outsl imul lods push add jns sahf cs pusha popa or xlat shrl scas mov fdivp sbb stos xchg mov lock dec dec pop jge cmp jle insl sub mov nop pop push push jmp into pmaxub cltd and cmp lret into aas mov add nop and or loop vpaddw mov into lahf push push out ret add enter sbb pop inc loopne cmp dec sub in lock insl roll inc jb das (bad) js xchg add hlt mov add inc xor lea pop add pop outsl es adc ss fwait inc sbb push add or pop pop dec pop cmp inc add int adc insb enter nop xchg test add (bad) ljmp mov cltd push push ret subb add lods sbb (bad) stos add add push (bad) xchg ljmp xchg repz dec add in addr16 jne add jns lods sub movsb add jle xchg add jbe ret (bad) lea aam add pop xchg or add sbb subl sub mov pop inc add lret pop jmp mov in cmc xchg sub lods mov mov pusha je push add dec outsb sbb inc add adc xor inc jl or add inc int sbb xlat dec fwait pop in jmp jbe (bad) dec and add jl out fadds add dec lds inc je add pop sub subl insb movsl or call jecxz popl sub jp push cmp sahf cmp data16 std cli or sti test sub mov js mov adc push or mov fincstp ret repnz sbb push add lcall add fst inc leave add mov arpl je pop dec mov xchg frndint rcr add lods cwtl cmpsl notb js aam or add dec adc idivl xor insl add clc shr mov sub xchg jp mov jg rcll fwait aas shll jl jno pop sti or (bad) mov es mov mov aad jns in cwtl sbb xchg daa stos pushf add push inc jno call out rorb inc aaa int3 xorl sbb orl rol push cmp or out js xor xchg outsb jo mov sub mov pop fsubs add dec add pop add jns mov add push jl sbbb ss in int3 imul insl jnp sub (bad) sub xor dec push sbb inc add mov adc (bad) and es or sbb loope aad mov mov add mov xchg or sub cs adc push add and lods cmp orb pop test subb inc (bad) jb (bad) cli mov mov stos and dec lcall inc cltd mov lods cmp stos or gs and jne xor or pop cmp rolb pushf mov add in mov xchg inc insb enter jb outsb sub and push cs test pop mov add addb lods sub and jo lret add jno es rclb insb scas stos add or push cmp cmpb insb jo and jno sbb jge push cmp pop ret or pop mov rolb ss repnz stos mov adc or into popa add jbe cmp movsl popf pop shr dec cmc mov out pusha and inc inc sub fldl mov (bad) fxch xchg mov fiadd add (bad) dec leave fs ss data16 add and mov sbb cld roll and je out jl cmpb jnp cld or jg mov xor push cmp add insb pop inc pop xor sarl bound dec sub adcb pop pushf jp pushaw negl (bad) cs jbe adc push pop fcoml aas push add mov add loopne cmp mov sti test add sub sbb jp sbb push mov scas mov adc scas sub pop out jmp xchg loopne mov add loop push xchg mov (bad) mov adc fs sub cwtl push add sbb add repnz jmp (bad) int3 xchg mov jl jle imul ffreep mov add xor xchg adc jo sbb bound mov push add push add or pop inc sahf pop add test lea push xchg pop mov cmpb pop pop out mov mov add ja or nop and addb ficoml scas setle pop add ret test mov mov push xor add and js dec jb jno xor jmp in mov insb das (bad) cmp cmp sub cmpsb ds mov mov mov sbb pop mov stos inc jnp adc imul cli adc adc mov insl mov (bad) movsb cmp lret add movsb xorl rolb add push push adc add xchg jl ds (bad) mov mov xchg add or scas call insb jno imul cmpxchg das lret add cmp roll push mov inc fdivs xchg call shl adc stos jecxz pusha or imul iret and add sahf push leave pop (bad) jg (bad) cmc add mov and in mov scas cwtl add popf (bad) mov add mov (bad) cmp dec out in dec sub fcompl sbb pop push dec xor add sbb or lods aaa mov call (bad) ds jo xchg movb dec cmp jo xor add jecxz,pt fisttp jp xchg sub xlat and (bad) (bad) idivl inc cld fnstsw or arpl dec aad jns je (bad) bound and add adc imul push xlat repnz sbb fisub std add add push ret loop fmul inc and ret pop dec xorl cmp (bad) mov repz nop pop dec aam arpl imul movsl out jg add or xchg xchg sarb in jmp test dec push xchg jb movsb push cmp add xor add std gs add mov out mov jge jae jno adc adc push cmpsl call and outsb add ret inc xor jg lock mov xchg add pop cmp test push inc cmc (bad) jne icebp sub push sbbb push add insl rcll pop (bad) std pushf in or and pop (bad) mov cmp fistp fst inc mov cwtl ficomp add jns sbb xchg fimull add arpl rolb hlt out add inc cmp xchg outsb add or orb mov test fs jge int3 lret xor leave or gs mov orl lahf call repnz test inc andb call pusha pushf pop add jo dec mov gs out incl mov push jb sti and lret inc add inc out pop jns add xchg push mov mov aas xchg adc fs add and jnp (bad) sbb (bad) cltd in add mov adcl mov sbb enter aad jp jl push adc mov imul adc hlt addl lea lock nop pop popf pop sub add clc lcall xchg das in int3 mov mov or mov add rcrb pop mov stos imul cmpsb cmp popa add andb pop jbe sub and pop push and inc add (bad) je jmp push pop (bad) loope sbb xchg pop push cld into and test xchg push movsl dec gs jo add pop std jp addr16 dec jns dec xor repz xor cli mov add mov mov cli add cwtl leave popf mov mov jae lea sub dec xchg add pop add cmp sbb xor sbb sbb lea pop (bad) jb inc mov xchg push mov mov mov mov test adc test test and lods push dec jno mov mov push sbb leave add mov sub jge popf ljmp (bad) lock add aas add mov sahf or adc in pop cmpl jg (bad) pop add xchg dec fdivs loop ds aas cltd pop out cmp add push ss lcall pop adc push and fidivrl shrb in enter pusha test add xrelease inc sbbl inc adcl lea out pop and pop js,pn cwtl add hlt mov popa test push ja push pushf inc inc imul add xor dec mov outsl pusha add sti xor add in aas imul inc xchg add ja sbb jge cmpl sbb inc data16 xchg fstpt cli incl out cltd sub push push pop mov inc dec sbb repz or mov mov mov inc fucomi jmp add and mov mov and (bad) mov xor (bad) add push fildl fdivl addl or jnp add dec jmp pop mov ds push sti mov mov xor je rcll adc out add mov add add or jle sub lahf je add (bad) call fstl jo pop push push mov mov pop add stc idivb fistpl mov add ficoml pop ret and sbbl ja arpl or dec xchg insb adc push mov popl xorl sub pop lahf jnp dec cli lods xor and add pushf fs (bad) dec add pusha out add push jns pop mov adc xchg imul xor pop pop in and inc imul into fucomi mov mov sahf push mov les or adcl cmp in mov out sbb mov lahf add add jnp xchg stos (bad) pop xchg fwait (bad) cmovo cmpb lcall stos add enter add pop popf (bad) cmpl xchg or les sar sbb jecxz (bad) pop mov cmp add mov add xor push add jbe (bad) (bad) lcall imul or inc add adcb or dec cs sbb mov sahf fadds inc push (bad) je xor and loopne jge xor xor mov ffree sarb sub aas addl movsl scas pop jle arpl inc cmp leave add xor xchg inc ficompl cmp add adc out adc mov insb js inc fwait pop pusha insl scas sub inc mov rolb into inc push push push mov insl outsl fmuls xor cmpb fs mov (bad) jmp xchg lds mov ss add adc out adc inc (bad) mov lret jb add or cmp dec clc sbb cmp inc fadds adc push cmpl mov jp sahf xchg fs sbb mov push jno lds test push imul mov popa inc add test or fwait iret mov mov ret imul shl push mov dec js add inc inc jne gs pusha pop mov mov test add (bad) mov pop mov add add icebp xor sub movsl inc push cmpsl mov jp add jmp jle mov jecxz mov loopne addb call and (bad) mov and and lods imul rcrl inc pop cmpsb push jbe mov xor bound and xor mov sbbl push std xor ficompl push mov mov cmpsl mov stos andl shrl mov add sub cmp mov cmp loope push repnz mov fdivrl pop iret add xchg jne sbb call adc add out int3 pushf jg fmull pop pop inc repz mov (bad) push loopne (bad) daa in add iret xor nop imul out frstor sti test mov out stos popa mov ret inc add fldz mov mov lock pop add sbb bound and dec pop ss mov add les jnp pop and inc sub or insb loop icebp push stc cmp lret inc adc jb pop and add mov jecxz out lock (bad) in xchg aaa in xlat xor cmp jo and mov jmp add jne outsl push in add popa mov xchg jno xor int fwait test mov add mov push (bad) and test sub add xor cmpsl dec roll pand xchg inc test adc (bad) dec inc lds ret dec lods dec push mov lea inc fs bound adc mov notb pop call stos lods (bad) inc add movsb pop rolb jae scas mov cmp add add mov add jecxz andl int mov sahf xlat add gs mov jne div jno sub dec mov or jmp mov dec dec xor sub mov xchg insb push sbb mov movsl (bad) rcll fild aas push mov add sub xchg fadds mov push xchg pop dec add into inc mov nop adc test popa movsb roll and lock ljmp jnp mov repnz adc sbb call imul cmp dec dec mov shlb shrl xchg in xchg fcomps add das cmp push mov mov test outsb dec ss mov push xchg pop stos (bad) jo push sahf pop push add icebp rcrl xor mov add mov jle out sahf jp and lret jbe jmp and out call fs push xor bound lcall push cwtl mov mov loope fs add mov inc inc add lret sub cmp push fldl or fwait mov enter and fildll add test jp pop aaa xor inc (bad) (bad) push fcmovnu aad pop es enter in add out xchg jmp dec cmp add enter dec aas add cwtl dec mov iret lds inc pop xlat cmc hlt repnz das add adc dec dec xchg mov movb inc jnp pop xchg stc repnz or add mov mov lods mov es pop test dec mov push jge xchg andl add aaa mov and and xchg test dec rolb daa mov cmpsl bound pusha cmpsl jmp dec xchg ret or sub (bad) fnstcw jecxz scas cmp mov sbb sbb mov dec shll add mov add mov push sbb popa jp mov add (bad) jae cmp enter sahf add and arpl cltd std jbe orl rcrb inc dec arpl test xchg out mov cld ja cmc jle mov loopne pop mov shr ret pavgb sbb add dec push xchg jg aas lods negl add lds leave iret addr16 cmp into jle pusha imull and cmpb lods push adc fwait mov nop (bad) dec add daa dec ljmp sub dec (bad) jge adc push in mov push pop xchg inc mov add dec in mov adc add mov lcall and sti int pop cwtl es repz xor mov scas or jecxz add movsb fidivrl arpl push into sub insb mov in add xor jge mov xchg pop bound aam loope mov jmp outsb in add add (bad) fldenv (bad) sbb jp push stos js and add call jno add pop imul jae dec pop into add jo aad sub test xchg or add add rorl int3 inc jecxz mov adc stos pop outsb jne add imul jno adc sub sti shll xor xor push in cmp mov pop adc mov and push mov mov add cs pop pusha pusha iret adc jo int adc fadd dec and adc push mov add inc stos sbbl pop add in mov mov cmpsl add out sbb xchg cmp (bad) xor aas jo adc inc mov push test adc int3 add test popf fsubs add adc xor stos and pusha jmp call mov sbb push lahf dec or aas add enter lock ljmp mov movsb sti xchg push jp clc push jne add or stc jo mov pop sti and mov fdivs cs inc or xchg insb lock outsb in mov and or sti in mov add imul addl xor loope push fwait or lcall (bad) sbb push pop arpl push jo mov and inc xchg lcall pop call sub pop arpl cmp add jnp add xchg sub loopne fildll (bad) push sub je (bad) jbe add adc iret xchg mov add xchg dec dec mov clc lea fsubrs inc data16 test mov jnp sub add rcrl sub loop add je xor lahf cmp (bad) ss pusha jl xchg test lock add call jle mov sbb mov sub sub scas mov sbb cmp test shrl sahf mov in fidiv jp fcmovnb xchg pop mov cmp mov cwtl test fcmovne inc dec inc fwait adc push jne sahf enter lods xlat loopne sub pop inc jmp push lahf add xchg aas ss stos (bad) jae lahf data16 push and mov add clc pusha movsl jb inc cmpsb add mov add mov xchg test push and and test cs xchg add or mov inc cmp pop add cmp (bad) mov test adc adc leave pop test mov ss and repnz out addr16 lret mov pop es addl pusha popf sbb jp add pusha xchg push test inc mov arpl cmpsl stos pop js cmpb in pusha mov jns cmp dec cmpsb sbb adc or in jge (bad) sub mov pop gs test test add fsubrs std push xor fild adc lret lods aad ret les or je add xor sbb mov movl in ficoml cs push adcl pop popf bound sub xchg pop dec push or xor push outsb inc rcr sub sbb dec dec lret or cld fs dec inc hlt outsl push mov jmp adc jmp popl (bad) jb inc add mov xor cs orl sub test push or aas shlb add cmp mov inc (bad) xor dec push sbb mov and add aad fist jp add lds je mov mov push pop sub add inc sbbl out ja jbe test mov inc ja jge daa mov mov inc dec inc pop xchg mov sti ss jl jnp cli movsb xor shl pop bound sbb sub test add lock push adcb cmp stos aam jg push stos adc push les sti lods andl mov rorb jns rep add push cmp add inc loopne or push add xchg out jb jp add pop mov and mov pop add xchg jae test add dec clc cmpsb pushf (bad) and xchg loopne cmp push push or add sub push xor add fidivrl mov movsl mov das movsb inc incb and mov sbb or inc sbb stc stos add rol inc push sub add sbb ds xchg andl adc jl cmpsb stos into jo pop cs jecxz repz pop xchg (bad) (bad) push lahf jb add rolb pop int int3 sbb (bad) pop jbe lret or insb imull rorb add adc adc inc pusha punpckhbw repz mov xor std incb add lahf loopne cmp repz add dec cmp mov rorb jle clc xchg mov out push fs jns mov ret sbbl or pop repz pop fs pusha push aam adc dec add push cmp pusha lods inc sub add jecxz xor repz mov push gs mov movsb inc fldcw sbb inc popf std aas popl xor hlt pusha xchg and add out cmpsb aam adc fcoml jl inc xor out into mov lock mov inc add sbb subl int fs pushf insl add cmpsb js xor dec add adc test or xor mov cmp mov push or (bad) or pop jl popf mov jnp jbe sbbb rorb add inc xor xor outsl mov cmc pop sbbl inc add popf es adc add lret fistpll test dec push pop adc jne addr16 jle or aaa inc ja xlat add xchg jmp mov pop mov add stos jmp sub mov dec or movsb sbb add sbb scas inc into add test mov fldt (bad) jl,pn add xchg loop in sbb or xchg add and ficompl (bad) add enter aad add push mov aaa or mov loope add popf test dec pop mov lahf ds das xchg mov jle dec jo fldl mov jp mov pop rcll add xor or jmp xlat (bad) dec add xchg push mov jp inc mov xor or sbb mov loope inc fidivr mov xor scas add push adc cs add jns test pusha add push add xor cmp fistpl fist jg lret aam pop icebp and push sbb adc aas add popa add pop clc stc lahf daa xor pushf adc mov out aaa es fild and popf test or dec mov mov stc dec jle jp and sbb roll addl cmpsb roll mov adc push add dec je dec cmp (bad) xor mov sub xchg insl subb (bad) sahf push and jne adcl cmpsb adc rcrb dec xchg test cwtl mov jns es fiadd ret inc (bad) jbe outsl lret xchg push (bad) adc mov mov adc popl (bad) cmpsl push xor insb mov inc loopne ja (bad) loop gs sub fdivrl adc dec dec sbb sub cmp fwait dec adc imul add xor and mov iret ljmp or or adc dec fildl nop adc jne addl ds or dec add ss push (bad) repz inc imul clc add xor xchg add das (bad) mov mov (bad) insb sbb test cli jl sbb or ret loop (bad) in scas add orb imul push add test jp mov orl js jge lds call inc adc arpl lret out add add or and repnz fsubl jae push add mov xchg dec mov test insb sbbl push dec call subl or add ss add sti dec and in mov pop ljmp push outsb add test sbb push out std cli add mov mov mov loopne add inc jbe dec sar add mov xor adc add pop (bad) js in daa sbb mov icebp xchg gs mov inc ljmp dec sbb and mov in xor add xor push mov mov outsl push or cmp inc mov jmp add outsl repz idivl adc aas add movsl dec pop sub lea lods loope cmpsl or scas clc movb xor leave dec jns,pt addl jmp repz sbb into xchg (bad) sbb dec pop mov fsubs divl dec cli and xor cltd rorl ljmp test out insb das xor popa dec xchg add jg aas add pushf xchg xchg jb enter mov pop and stos xchg cltd inc sbb inc mov sbb push pop cmc cmp loop loopne clc aaa mov test lret sbb ja int in jge pusha and or cli rorl (bad) jle mov enter cmpl lea pop aas ljmp lret add imul mov icebp dec cmp jmp add pop fsub dec ds addb mov lods fiadd cmp xchg add sub add or mov add xor imul stc xchg xchg mov cmovo (bad) and add cmpsb add call jl shrb dec push enter or movsb aas mov in and ja imul cmp adc adc incl (bad) mov ja add sbb clc mov mov sbb out out addr16 jmp rolb loopne xchg or in xor jbe fisttp xor cli push dec jmp mov jbe inc lret sar adc mov xor jp add dec mov jne adc jmp mov or iret rcl es lret pop outsl add aaa divl jne mov cmpl mov int3 pop andb adc out outsb inc pop addb rcll bound divl sahf add es loop imul and scas mov repz dec ja mov add sti lahf sub add xor add fnstenv pop cld add fsubrp fwait xor jae addb mov (bad) xchg push dec adcl sub fdivrs cltd fstp add adc push fwait mov add scas pop push test mov dec sbb fsubl and lods fs test add rorb cmp xchg add lahf dec pop ds pop cmp addl cltd jno sub sti out push cmpsb (bad) adc fmuls faddl out add js cmp adc rolb je test dec ds xchg add mov xor es dec cs lods add or and ja add mov mov add sub sbbl lahf cmp pop push fild push mov add mov fistpl and jns sbb jmp fsub pusha sub add negb in jnp push sbb ror repz (bad) std inc push add outsl notl and sarl stc pop cli sub sbb test fsub ja push lods (bad) pop push jp cmp cmpsb jg jp add add lods pop pop movsb add mov add (bad) test jns cmp lret cmpsb jb (bad) add dec popf idivb cmp dec pusha adc push cmpsb mov lret adc and add bound jnp add add test xchg xchg fwait add test push flds pop jo inc xor lods mov out jge mov arpl add cpuid out push and mov mov imul mov insb add pop xlat jg add cltd jp lcall pop add push jns cli xor imul in orb mov lods jo and cmc cmp add ja call mov xor ret aad pop daa push scas add rcrw cs int sbb cmp movsb fdivrs dec ret imulb xorl and lahf adc js and pop or and fcomp dec mov or dec movsb sahf aas ret xchg dec insl inc mov mov aam fsubl lods ret jo xchg (bad) add in add pop fildl jecxz mov or sbb sbb int3 xor ret (bad) scas andl test jo repz test or ret (bad) hlt add pop das push add pusha iret fisubrl add popa enter xor jmp cltd inc daa xchg dec push mov arpl adc mov cmp push xchg lcall dec es insb in push aas sbb jge jnp sbb lock push add loopne,pn pop fnop int add (bad) popf inc lods add mov outsl mov jb sbb push fnstcw push dec int3 mov mov fidivrl cwtl inc add (bad) movsl fistl jno ljmp dec dec (bad) adc repnz out mov imull and outsl add rorb mov out add cmp mulb sub push imul outsb cltd adc gs loop xchg or mov andl cmp pop data16 mov pop imul hlt add int3 and or mov add xchg cld inc outsl jp rcrl dec mov fcoms cld add mov xchg jle cmp in fwait push int3 jne js add loope mov fistl je xchg sahf dec xchg add insb push cmp inc add dec cltd jne (bad) incl aad (bad) insb in add adc push add clc jns cmp es imul inc inc and mov pop call pop pop les sbb outsl mov add sub sar add push sub inc xchg out jo add dec adc lock ret add jp pop mov hlt xchg add or push add data16 inc sub add jae mov bound lret stos dec sub mov gs mov loop add pop xchg sub xor addl cld inc (bad) in js cmp xchg xchg xor stos mov sbb cmp and dec jle pop add je mov sub fnstenv add lock cmp daa mov cmp xor add fldenv (bad) add add pop sahf push add andl add add xchg pusha jle push push sub stos xorl scas cmp adc sub (bad) mov inc or and (bad) add jp int out and dec inc add mov roll inc inc add lock or or and sub pusha test or test adc or insl repz outsb add mov lret pushf mov xchg pusha add xor pop add loope orl add rcrl int pop sti push or rcrl cli add pop dec cmpb jg add shl insb enter dec dec push add push push xchg add inc arpl imul (bad) adc (bad) in mov icebp mov (bad) imul out je out subb icebp jb add and rolb or nop xchg pop fldcw add sub xchg fnsave jle mov push mov inc pop js arpl dec pusha movsl xchg add imul xor xor out mov and leave je mov inc adc jl jp inc neg out aad mov xchg adc ret xchg pop jnp mov pop mov mov inc inc leave xor bswap (bad) add and and add xchg std mov popl jle,pt scas dec fild add mov cmp add in xchg stc outsl jp test or add jecxz nop (bad) ljmp loopne xor pop sub add sub lds jle mov fist mov or dec sbb lcall push sbb cld cmpsl mov rcr inc push cmp cs cmp (bad) mull rcll sahf mov ret pushf pop and jbe adc xchg adcb sarb cld mov inc push cwtl dec cmp gs cs add push jmp adc or les adc fs or icebp or mov aad aam outsb div addb loope lock sbb jg add mov dec insb fldenv aam outsl in jecxz mov lret daa add scas stos jg out add add pushf cltd mov mov jbe inc and mov cmpsl mov pushf mov cmp add inc movsl (bad) jl sbb dec inc jno xchg xlat add or roll cld mov pop cs and pop stos mov sarb jb mov xchg inc daa add subb jno dec mov out mov push in add scas dec fildl aam aas pop das and inc jg test rcl lret pop dec pop subl daa sub mov cltd pusha test jl sbb adc (bad) (bad) aad sbb dec xorb aam leave jp cmpl xchg enter sub pop lret in add and cmpl movzbl (bad) jg jno sub pop pop fldl scas aad inc fidivrl jno mov int3 mull mov add pop (bad) sub sbb roll inc cmpb pop jmp adc popf fld jo jle cmp jp bound in pusha add adc insl aas repz stos xor push inc sub jl push sub xchg inc sub xor ja pop gs dec pop fistp add in lods jbe mov mov mov ja inc xor notl add add popa lods lahf add pop dec dec jp add in push fs add xchg xchg clc adc ljmp sbb mov cmp in in inc add jno iret xor stos addl or mov dec dec xchg int cmp imul sarb inc mov addr16 add sbb popf sub jbe add aaa jo out lcall imul test lea sub pop sahf jns mov adc mov xchg pop dec mov scas repz jle add xchg testl shl sahf lds pop sub int3 sbb pop push lock adcl push xor add aad les adc mov cmp push loope add cld jp mov int add lds gs lret dec ja xor or add stc mov add inc cwtl mov inc adc push sarl xchg ret lods jb jnp pop imul xchg ret dec add xchg cmpsb inc push cmp jmp scas sbb mov ja (bad) pop sub (bad) jnp data16 and adc test dec sub fisttp add fsubrl mov test ret mov xchg pop enter (bad) or and call ss add int xchg add fwait jecxz gs clc adc cmp popf and add cli fild push out pop mov data16 push mov add inc icebp cmp add mov xchg cwtl dec pushl andl (bad) stc xor push xor js jne lods or mov insl jnp je popf test jecxz fsub inc cld and push nop add xlat pusha sbb and add jmp popf lds push mov inc fwait sbb mov push mov cmp (bad) testb fcomp lods sahf push xor xor cmp iret ds push dec lea movsl call fs add dec in out inc std bound ljmp mov pop add push or in add mov je test lods nop add out and inc add xor xchg add aaa pushf adc out push mov xchg add dec push and aam push (bad) xchg fisubl inc (bad) mov je (bad) imul adc adc jmp ret jnp add pop popa add mov fistp ret sbbl jle out js and (bad) das mov hlt inc cmp add sub int cmp clc ret lahf int3 movsl mov jge mov and hlt jl in icebp lret xor test dec add rcrl dec fistl xor jmp sub xchg gs loopne fistp mov lock add ficoml rcrl add int push mov xchg jg and jmp or inc add (bad) lret aad fdivrl add cmpsb iret int js daa adc fxch pop out pop scas jp mov jecxz je cltd sbb pop push in pop push insl mov mov jmp and aaa push je int3 lret gs cmp push in or inc repnz xchg adc cmp sbb sbb add aaa es pop pop sbb jae add mov pop pop orl pop jo push dec loop add repz pop adc fnstsw push pop jo das popw add cmpsl inc inc mov cmp loopne icebp adcl sub pusha adc xor xchg add insl leave lds in cmp ret cwtl in sub movl mov int3 adc push addr16 shr pop cwtl popf popf pop push jg jle ja sbb push leave push and mov fiaddl jbe aas xchg mov test aaa xchg push aad and pusha or push mov mov cmp inc or cltd xchg mov cmpsl pop mov cmpsl add dec jbe shlb inc incb jle adc push mov clc jns arpl jecxz insb adc popf push add lcall pop aad inc fwait insb rorb jb outsb mov cld test push mov and xor add pusha pop mov add pop ljmp cld (bad) mov fstps (bad) lcall sahf add sbb addr16 sub xchg push dec sub cld int sub add jb adc mov or movsb xchg add cli aam xor inc mov les xor lods push jb nop or add or inc daa aad sahf imul xor add das divb pusha call out popf iret pause pop daa orb imul xor popf test inc adc mov (bad) dec add sbb add add sti cmp (bad) je arpl leave add mov mov aaa jge push loope and push sbb add flds fwait adcb jb imul inc pop xor xchg add lods lea lds and popf pop inc js mov add mov cs cmp pop xor adc inc pop lods sbb xchg imul jo cmp mov push add cmpsb call cltd pop in lea xor test inc push scas cmp jnp xor jno add cs or adc dec (bad) lock mov xchg sbbb or incl or xor add insb lods xlat cmp jno sbb sub pop cmpsb cld fdivl in mov addl mov pop sahf shrl (bad) jns jo adc shlb pop lods jmp or fldcw movsb lahf add add mov cld sbb mov sbb mov xor add inc or outsb add sarl xorl in inc cmp sub pop push mov push jg dec cmp rcll add out in mov add std add dec jmp dec fldt into pop (bad) jmp out adc daa rolb adc mov or (bad) pusha or pop cmp add xchg mov jo insb sahf dec daa adcl dec repz leave sub test jmp idivl sbb jp push push xor push fisub adc scas mov mov adc cmpsb jl loop push les icebp push into addr16 aas mov and jge mov push test data16 mov sub fwait jge add sbbb enter and and inc xchg inc lods mov and jo jg imulb insl imul mov add aas and add mov movsl aam mov flds push test add jnp stos adc add shrl pop jg xor inc aad add inc jno sub into imul and sbb push push xchg clc call mov push add sub je and xor xchg add jp std aad ret jns push inc insb xchg (bad) int movb cmp mov sub push idivl push pop addb xor imul scas mov iret or punpcklbw std mov js mov orl mov dec repnz pop aad mov jle pop scas sarb js mov adcb frstor loopne test int jg jae addl pop je add out push testb add mov (bad) adc sub lea jo xor and or adc notb mov push mov xor inc out add sti lahf in mov sbb aam jne cmp ret pop gs jns jnp andb mov ret pop lods loope (bad) xor and cmp sti mov add outsl mov and lock add jno imul jae add int or stos ret pusha test cmp xor xchg sahf cs sub add adc xchg xchg out xor add pop mov jb cltd mov aas inc xor stc add sbb lods test test add std inc mov lods adc dec lea sub jo add or int lds dec into int3 fidiv test add test cmp scas pop (bad) mov cld fnsetpm(287 add testb push rcrl add scas mov jo add test xor bnd les enter or push inc out push add pop popa (bad) jno jo jne sbb add inc int add ret pop xchg leave jle add adc iret cld mov add push cmc xor movsl sti cmp sbb jnp aas jae mov add arpl add jno cmpsl pop (bad) sbb add sbb sub add mov push fild jno (bad) aaa adc jnp add push pop mov cld insl add mov jns cmp jecxz xor fstps xor add ficoml inc dec inc aad out mov loopne insl dec iret sbb fwait shl push int3 test test adc xlat sub add clc and js jmp xor addl add popa mov add jg add pop or bound jge call cmpsl inc add cmc iret push adc imul adc or lds hlt add add mov fadds mov cs xchg dec sbb daa out rcll inc jge lea add call inc add lods sbb pop push test sub js movl mov xchg sub jb std hlt lock inc inc jge adcl dec push dec xor in add outsl std mov in inc orl mov icebp js fisubrl bound dec das inc xchg push ljmp sti cltd ja aas dec lret and jb dec pop push lcall jge rcr xor xchg xchg and or popf repz cmpsb pop arpl test mov das jb jae fdivl scas insb add push loop push pop lds (bad) sub (bad) mov push mov ss adc cmp movl push cmp js xchg mov cmc add push in lret ss sbb scas out (bad) pusha xchg fwait and cltd imul add in orl in (bad) ss xchg (bad) std xchg pop add in adcl out mov lcall arpl fbld mov cli add mov inc gs and xchg push into jp xchg push add loop movsb (bad) pop test mov and mov fcmovbe ljmp pop add mov jo inc sbb addl jge push cmpsb mov push xorl inc jnp adc or rolb jmp pop push xor add cmc decl mov push push out add xor add cmpsl inc cmp pop fidivl mov push ds sbbb sbb cmp js sti mov and fistpll test or rorl add cmp ret mov mov jbe mov mov and das cmp pop xchg cmpsl add (bad) cmp fwait in mov mov in rolb (bad) pop clc xor flds or cmp cmp jmp fsubrs fimull dec pop add mov notl xchg add dec test fwait xor push cmp inc add push (bad) repnz dec jo (bad) adc or jp test push jnp add ss sbb jl lcall push test add cmpsl push jns mov sahf mov adc lret add and sub xchg dec add je imul push out xor inc xor add mov shrb mov and into push add jmp sub xchg and sarb add mov mov adc call cmpb push pop arpl cmp or push xchg (bad) (bad) pop sbb add std pusha cmp add rep pop mov pusha fisubr into clc lret lods add mov int3 fstp inc fcom jbe cmp test jle cmpsl mov mov add adc xchg inc lods (bad) repz sbb inc sbb ljmp pop and int jmp dec inc hlt gs iret cli add mov incb adcl pop add cwtl je sub (bad) mov test cld stos ret mov repnz les xchg add push cmpsl add cs jno stc mov adc add xor setle cmpl nop call sub and push cmp lahf add out and (bad) xor sub mov pop add inc sbbl fistl fsubr add int mov add stos insb inc add and pop add cmp push daa dec sbb add imul loop cli add (bad) push inc addl push cmp and add out dec add push push adc or sbb add ljmp dec jne mov notl xor pop sbb mov add lods or sahf adc mov sbb sub add dec cs and jg pop jp fwait mov add push ret cmp mov std sbb clc lcall fcmovne aad push jmp push xor andl js popa hlt fnsave push add pop pop mov test imul sbb fs in ficom add push sarb or sbb push or xchg scas lcall jp pop daa jno bswap jmp dec sar or push mov adc lds inc or and mov pop push add test mov lods nop inc mov push pop aad leave jo imul mov add jge cmpl pop adc je mov bound mov xor sub scas mov es rcrl cmp xor rcrb clc gs adc lock fild mov stc leave testb in or xor xlat shl js add mov outsb divw push add out jg faddl enter loopne push add popa mov xor adc jl lods xchg dec push jo inc and or pop push mov mov data16 addl xchg xor ja roll cmp xchg push cmp roll loopne cltd cli test out adc push pop loop mov push inc pop fcomp jno insb sbb jno add cwtl sti pop add mov insl mov arpl mov mov push add wrmsr (bad) sbb add fidivl out mov xorl test or add outsl xor loopne rcrb or add jo int les add pop pusha lock pop movl add jno repnz mov or pop fistp (bad) xchg sbb cmp xchg push stos cmp sbb xor andl mov aas push add mov add mov sbb outsl cmp mov or xchg xor push or rorl pop in mov lahf adc jb add call std add pop mov xchg dec sti add mov jge test test push stos inc xor dec shrl cmc lcall lods in pop dec or xchg roll movsb fsubl out (bad) and pop mov iret xchg jle add add fdivp mov dec sbb je push mov imul cli js (bad) sub pusha cld pushf jbe daa sahf imul ljmp int3 inc xchg arpl jbe fidivr xchg lcall add cmpsl sub mov mov out sub sub pop bound in xchg xchg xchg mov xchg jle mov js sbb pusha inc adc test jl and rorb mov jmp stos sbb leave xorl xchg and mov inc push push add data16 int3 xor dec mov jnp add mov mov jo add mov fadds mov jle jo dec sbb aaa push and sbb xchg add mov (bad) mov cs adc xchg aam adc mov xchg sub xor insb mov cmp mov test repz push mov call xor add xchg jne push cmc imul push out cld (bad) pop sub xor dec cmp insb push scas and loope daa pop adc andb pop jle and jle test fiadd mov add dec pushf and lahf in fldl ret pop lcall daa cld rorb dec fidivr scas iret and dec inc lods rorb or push xor push inc cs (bad) push cmp inc xor sub add or into mov test inc add add xor insl mov outsl cld insb add adc and mov jl (bad) xor mov pop (bad) les inc xor add insb sbbl add sbb sbb add cmpsb mov pushf add aam xchg adc sub out cmp push and xchg aas jg jle pushf inc add aam testb adc std les xor ret pop mov inc adc add xchg push inc mulb and mov add sbbl or jp inc lcall pop cmpsb shl mov shr push (bad) das aaa sahf and cmp dec add lret loope ret pushf (bad) sbb data16 pop add jl movsl imul xor sbb jg dec loopne mov add sbb push jge add stos (bad) jbe (bad) add imul mov rcrl dec add ficomp xchg ss push add lcall mov mov iret xchg and or jae sub lods inc das incl mulb sub sub push adc mov add cmp into add xchg pop dec leave pop fsubrl add lods or inc add dec jl (bad) jo nop add xchg and adc jmp mull mov lds push jb pusha dec fwait push add pusha js popf add lret add int cmc subl sub std add negb out jp sub lahf bound jge iret or jle out pop add shll jo mov add or or jge jbe add cmpsb lret repz (bad) fdivs es pop in xor mov fs pop dec cmpl inc add cmpsl icebp xchg cmp and sar xchg mov fs inc mov int fistpl add les inc add cmp dec int jnp xchg lret ljmp mov lcall jne clc popf ret push dec add xor aaa inc sub dec js call les and movsb or xchg inc add push jmp mov rolb push push jbe sbb mov and jns jmp (bad) or jmp xor jo shr add dec mov inc or out mov les pop push fisubl xchg mov add pop jae out adc add inc int3 stos mulw addl mov add test mov out rorl cmp add loop testl insl mov pop roll loop lock cmpsb in ja adc mov jle jp das push pushf in push adc jo mov das test (bad) push and popa sub icebp in sahf mov mov adc repnz add clc (bad) into sbb add mov (bad) dec fsub adc mov mov add pusha add cmc mov jno je cmp jg out mov lock adcl test and les pop mov in pop (bad) xor push mov dec inc adc (bad) mov add mov sub fistp jno aas (bad) jle arpl cmp mov outsl shr and arpl xor add jb fsubrl add sub sbb cmp je cmp movsl xchg xor push andl dec lock add (bad) aaa add sub add mov xchg jb loop andb stc je test push int mov pop fcmovu (bad) fistl bound add repz outsl dec cmp add aad mov xlat pop (bad) mov shr clc (bad) jl daa pop jbe add cli mov mov test (bad) mov pop loop sqrtps xlat cmpsl ss jle xchg movsb jge sub inc setg lea test jp sbb mov mov adc add jmp lret out add stos sbb mov mov ret mov das scas push cmp in xorl pop bound add andb xlat cmp adc (bad) ja stc jp cmp (bad) frstor pop mov inc adc adc pop add jno add mov inc test sbb inc fdivr std gs xchg icebp ds hlt mov inc pop mov add and sahf sub jae loopnew mov pop adc sbb cmp push imul cwtl loopne in push or out or insl int3 jmp sub push mov loopne pusha decl je add (bad) lea insl pop inc mov aam rcr rorb add testl leave dec subl mov lods mov jae adcb fdivrl lret add inc es lock sbb inc fldl ds rorl pop add sub in cmp (bad) sub add insl repnz popf rcrb mov lahf add popf pop sahf jae push xchg pop pusha xor or into add or or add (bad) je xchg jns add jne add repnz test push std push push xchg pop outsb jp jae addr16 adc cltd enter xchg and inc out pop mov push and clc testl adcl cmp gs mov lea imull fs add movsb sarb xchg add mov mov add inc push ds mov out out push aad pop jbe jnp lods pusha push sub clc movsb das or add pusha jae add js int3 add jecxz sub add cmpl add jmp mov xchg insl popf mov ljmp aam (bad) scas add and mov adc mov ss and pushf xchg gs push push mov push repnz push add out in xor cmpsb pop andb out jmp add ljmp add lock xor and inc and and cwtl gs jg inc (bad) add fldcw aas or in pop inc lods test stc sbb xchg pop push imul inc ja pop sbbl jg leave add sub adc call imul or mov fs cld lret hlt mov mov jne pop cs sub (bad) enter cmp scas packsswb mov fisubl pop shlb int fldcw add frstor inc imul out and mov aaa add mov test scas sbb cmp jb push add lret cmpsb xor inc cwtl out xchg mov pop xchg jbe pushf pusha (bad) push cmp xchg pop cmp xor inc repz (bad) aaa ja ds mov xchg (bad) into out sbbb pusha jo idivl scas sub andb aaa shll xor pop sbb add push repnz insl cmc clc cmp cmp inc mov add loopne add rcr mov out rorl and inc fdivrl int add adcl xor mov sbb (bad) add adc and sbb xor xchg add pop jnp lret (bad) popf inc adc lods push and add sub add cmp jl mov cmpsl out mov int3 mov daa jbe mov xor aam inc dec add lods jno std in popa lcall pop shrb jle jae dec push and add pop sub or mov addr16 dec add fnstsw imul xchg rolb xchg push test jge xchg sbb es fwait and xchg push dec push cmp add and lods ljmp jne or add outsb fsubs outsb add or in add mov dec pop and jl xorb xchg lock push les adc je add (bad) mov cmp lock xchg adcl pop (bad) adc dec cmpsb pop scas mov mov adc pop inc add iret cli cmp pop pop leave stc loopne int3 shll ret out bound add xchg cwtl mov data16 push inc movsb add mov mov int lds mov sbb sarl add scas int into mov out pop inc pusha sub out ds (bad) orl pop jge subl dec pop les jle andl insl xor dec popf pop xlat pop test mov cmp pop insb stos cmp push mov gs stc add imul out pop bound mov (bad) repnz cmp idivb xorl scas fs jecxz repnz jns inc inc lret dec (bad) (bad) xchg shlb cmp fistpl loop mov pusha mov imul sub cld jb mov pusha jbe iret push outsb mov icebp popa mov push cli jne add jmp pusha add push data16 pop push add mov xor (bad) cmp sub add sbb out lcall mov inc std ret mov mov inc hlt clc jo add mov adc andb test add pop icebp push ja push cmp mov data16 in mov or cmp movsb imul js int3 xchg into stos enter test sub cwtl mov scas sbb push test cmpsb jno add dec in adc mov jecxz add (bad) mov pop and inc repnz out out push pop lret imul roll aam inc sbb add imul movsl movb jp mov popf jo ljmp add mov or je add add xor scas les pushf aas and pusha dec (bad) test into (bad) loope push push push fs out xchg (bad) stc dec adc add repnz hlt je mov jbe push add push popf add mov sub (bad) bound fwait sbb xchg rolb add jmp pop jl daa inc and js pop mov add idivl jo xchg sbb int3 add cmp cld mov add ja xor movsl imul cmpsl push mov fnstcw add jnp repz shr adc xorl into loop pop pusha fsubrp scas cmpsb shrd and out dec add jl inc nop subb es add xchg lcall (bad) jae icebp add cmp (bad) std jge ljmp add fidivr or lret dec pop loopne cmp and xchg add or xchg test jge js add add or add xchg inc popa lods mov scas pop xor (bad) dec cmp cmp push cmpsb or sbb paddd sbb mov (bad) (bad) pop stos lock and add gs dec cmpl aas dec clc insb pop add mov inc divl (bad) in hlt ret fdivs pushf push mov inc dec jns (bad) mov cmp mov js inc sub lock lret add int mov xchg mov shrl popf push cmp dec push xorl inc push mov dec pusha out xchg hlt add push mov push pop sahf push push fstps pusha ljmp fimul push xor pusha adc test add mov stc adc cmp sub into mov push sbb xor inc (bad) adc and sub jno jnp or aam cmp add xor and ja add cmpsb and imul push cmp and sbb jns outsb leave mov cwtl jl push and scas push scas mov add shlb xchg fadds out jle and push mov (bad) lock out inc add repnz pop pop fwait nop sub jecxz lock jle sbb repz popf (bad) into jl das fs aas cwtl mov daa add pop ret xor add or add int3 pop loop daa push cmpl lods or xor dec xor ja lock lret cmp jl je add outsb add lret out pusha mov adc cmp jae or xor xor jle mov movsb popa gs xor jle add test mov xor sahf (bad) (bad) dec aaa into add mov repnz jmp fs inc sbb inc xor cwtl cmpsb outsl jle add imul (bad) cmpsl xchg ficoml dec dec sbb bnd adcl stos pop cltd sti jge and or clc dec sbbl fistpl mov repnz ret pusha xchg or mov ret mov iret xor out (bad) add cmp add dec lret lahf out pop xor adc push mulb sarb lret aad mov add push movb pop sbb mov add adc clc in mov pushf pop call fcomip pusha incl in dec pop push cmpsl incb fwait aas in jo inc popf add outsb mov add xchg in fidiv mov jne add cmp insl add mov and inc pop cmpl aas cmpsl or jmp lods mov loopne add leave adc popf jns aad push jb dec pusha js in pushf push add data16 sbb popa add xor pop add pop das cmpsb nop inc sbb add rclb dec push add dec adc add adc in add outsb mov pminub and add cmp pop add adc sub lret jp imul mov loope add (bad) mov jae mov or mov cltd add xchg std add mov (bad) sbb dec sub add arpl sbb ss add lea dec xor repz xchg arpl js dec cmp or and add out dec adc outsl push leave push in xlat cmp (bad) inc add into inc pusha pusha ss sub mov xchg cmp sbb sahf inc lahf in inc add (bad) out lock add out xchg std (bad) fimull mov mov sti out (bad) (bad) mov mov add mov add xchg pushf add pop daa nop pop jg in pcmpeqw (bad) pop inc imul inc das adc sub inc add cli jmp jne inc ss jg (bad) jno and addr16 jo,pn or (bad) pusha cmpb add dec in std pop mov cmpsl inc and xor xorb lds cmpsb push cmp push loop or inc adc in adcb std orb ret push loopne,pn and shrb lret subb xchg mov ds (bad) icebp pop dec popf add push mov in outsb pop add jbe jne hlt ss imul imulb shlb add dec pop ret insl jl xchg jp aas ja add in push test fimull shr mov push inc ljmp ss in sub daa out xchg fstps adc roll mov adc add add cmpsb push fadds dec jae popf nop sahf movsl mov mov stc push outsl xchg lret sbb (bad) cmc aas cmp add xor jo jne xor mov or add aam lock adc sbb frstor or test add pop xchg popf push push (bad) mov pop or jb push test or test std dec fildl rorb cs es (bad) mov cmp add imul arpl sarb dec mov sbb das pushl jge sbb cmp out pusha pushf mov jl ja xchg jo add aad idivl add mov add (bad) jae mov inc xor push push in jo call cld pop xchg adc add stos cmp xor and shrb cmc add int3 fcomps push (bad) cli sbbl dec data16 mov std inc sub cmpsl mov push add je ljmp xor push xchg push cmp xchg pusha int3 out xorl dec orl insl ret shl adc popa jmp add cmp xor sbbb js insb mov ficom or sub nop cmp lea (bad) mov ljmp daa bound xor mov lahf jl inc adc popf lea add fisttpl test movsb xor outsl mov add aam test push test andb push pop je loop inc sbbb add add mov repnz and fbstp addl repz push jo loopne stos (bad) ficom cmp pop add push into xor and sub rorb mov xchg sbb add je push inc xchg lds jmp cmp inc mov mov mov xchg out lock add orl add or jb call iret bound dec jo in cltd push popf inc push adc ds add jnp sbb push push add inc std xchg insb loop add je mov out loopne and push pushf inc add adc dec xchg dec and mov test cli clc add jl and and dec inc fisttpl movb inc clc into mov notb dec stos mov cld jae xlat xchg sbb inc mov mov in push ror jbe cmpl inc and sbb xor jbe pop das jg lods sub cmp clc cmp getsec jge inc xchg jmp or xchg insl add xor ret shll mov mov inc inc sub add pop fimul into lcall xchg pop loope inc jns jo sub lret adc ja insb mov andb mov adc add aam mov or lret xlat mov mov bound jg mov (bad) xchg pushf mov stos add stos std ficom mull les and sbb push pop jge pop cwtl push mov pop or test inc mov sti add pop sbb pop roll or push and ja inc sub in subl fs xchg add loopne (bad) mov int3 jo (bad) push inc pushf (bad) jle sub shll adc imul daa xor mov cmp clc inc mov sbb mov sti enter pop or sbb add cmp adc lahf add sub in cmp sbbl and inc push add or int3 xor cltd add mov mov (bad) andl out add xor inc movsl les loopne dec cmp mov jmp pop pusha xor mov (bad) stos inc popa push test dec xor cmp fiaddl jl cmp (bad) adc xor stc imul inc push out add icebp inc sub add orb fidivl lcall push sbb xchg mov jl fisub adc andl dec inc ret out xchg add nop jl bound and pop sub mov repnz mov xchg dec and mov int imull mov sub je mov sbb andl lret mov sub cmpsl add dec inc cmpb jbe jne insl shr fcmovnbe imulb add imul (bad) add sub push xchg cwtl jbe push push mov mov jge or jmp add xor add stc and push fisttpll jecxz fidivrl incb test leave (bad) pop (bad) jb (bad) insb xor adc fdivl jbe add data16 jae ss adc push fidiv inc cmp pop pop pusha imul fisttpl gs outsb fnop add push in pop or cmc mov test jns dec fs add cli xchg imul jb lods sbb scas xor cmp add adc mov add xorb out bnd js stc cmp sbb cmp cmp dec aas add pop sub mov ficoml and sbb dec fsubr aas pop inc xchg or mov fildll or add mov xorl dec int3 mov push aas inc outsb inc cmc aam push pop add out dec addr16 inc xchg iret and outsb add in xchg mov add xor push pop push jl and inc (bad) loopne add add lods jno stos std sbb adc daa push cmpb jg cmp mov jo outsb insb cmp add dec mov js lds data16 inc mov loope dec btr or dec insb sbb jge mov inc hlt dec jae out test shll pusha adc xlat add and lock shrl jp mov sbb scas and stos icebp add ljmp push cmpsb jo sub cli in je mov pop test fsubl adc js push jbe pop repnz adc pop iret aam andl dec cmp popa sbb xor mov ds cmp dec fistpll jnp inc xchg pop cmp add jl xchg adc xor sub (bad) cmp xchg sarl mov lds popa fadd mov sbb test xchg les out cmp movsb jb add jg pop sub add pop gs add add insb ja and fs fisubl in pop (bad) jg and xor push adc out loopne sbb or adc adc jb dec hlt add mov pop mov xorl dec push (bad) sbb mov mov pusha lcall add enter dec lods cld jo mov xor out sbb daa inc lret imul sti sub dec or xor push pusha jl fsubrl (bad) icebp loopne mov push mov ja data16 mov xor sbb pop sbb sbb (bad) cli xlat shlb outsb mov mov lcall xor adc or dec andl outsl lock jl test (bad) xchg add dec into add rcrb cltd add jo jae jp mov and lods xchg fisub xchg stos lahf call pop adc inc dec ret addl inc inc out add add push xor add in pop (bad) mov push lea dec loopne add xlat add (bad) (bad) lods inc cmp (bad) lock mov mov outsb sub mov fildl jmp aad jecxz cmp add sbb jle mov xorb or mov push hlt lcall mov add xchg mov add and push add jmp add cmpsl fs js jmp pop mov mov lret cmp in add cmc adc inc push cmp mov dec push out pusha scas addb int mov popf xor sahf fwait pop arpl add jo pop sbb movb jno bound mov add jmp aaa add cld bound inc in sbb daa xchg xchg push xchg cmc pop add dec loop mov jbe dec or (bad) mov (bad) xlat add adc sbb fmulp lds arpl repz into stos push lods cmp mov push jl push cmp push add mov jg adc xchg dec and (bad) scas lods out je jmp lock xor andl jne cmpsb and inc cmp pushl out addr16 clc pop mov cwtl sbb inc mov push sbb mov ss sti mov popl clc or stc cmp cmp icebp in addl xchg sbb jae outsl test and movl push int3 mov insb (bad) mov adc mov xor xchg gs imulb pop push sbb push inc add lock xchg nop mov mov mov jnp incb loope adc add xchg cmp stos sbb int mov rolb mov pop pop and add push (bad) lahf lds out out inc mov loopne insl push lods push mov mov out inc ret repnz sbb xchg xchg dec (bad) cpuid (bad) movsb add sub addl fs mov jo push jl add cmp repz rcl and fadds stc jnp jo xchg subl out dec pop add pop insl insb into push and or out pusha (bad) push frstor mov sahf push xchg push inc add mov push stos dec jmp out xlat sbb add dec shl orl ss lcall lahf in add mov inc and mov rcr mov movsl mov xchg and adc add mov or (bad) cmp sti (bad) fcoms (bad) add cmpsb and xorl (bad) scas xchg sbb add in jno (bad) sbb add mov bound cmpsl pop pop sbb jae lods roll faddl xchg pop mov dec add (bad) push add sub movsl xor iret or add add cmp sarl cmp dec add add sbb push cmpb movsb cmc fs push mov push rol add pusha sbb xchg or xor out pusha das cmc add fptan test push jecxz test ja jnp jbe mov dec xor out in ret adc ja mov add add jb outsl sbb xlat sahf xor decl sub jp sbb and sbbl je push and xchg mov outsb xchg push (bad) or popa and push imul add scas stos xlat pop int3 outsb add loopne cli mov push xor out pop lcall lods clc jp data16 outsl cmp cmp mov and fbstp sub add ljmp (bad) ffree jbe sub mov dec movsl fstps pop (bad) cmp xlat dec sbb pop cmp gs pushf and add (bad) add mov inc jnp add and jnp add push xchg xchg jmp js xchg aam aad or loop andb mov dec xchg push adcb mov je test pop fs ja rcrb daa add mov xchg cs and mov dec aad outsb push add add les pop stc sub add pop int3 (bad) add dec fnstsw or pop inc loopne mov dec testl es push mov je mov lea nop cld movsb xchg fs add js and adc add sahf xchg sub not scas mov rcll mov inc add adc adc orl test aaa xchg icebp bound adc sub mov xor pop sub cltd mov pop les jbe and in mov rcrl shrb mov and pusha aaa and add sub cmp adc xor ret pop sbb lret call xchg pop xchg dec js add (bad) aad pop into push pop (bad) and adc mov mov push stos jnp (bad) cwtl and pop add ds out sub stos push jns inc lds add faddl neg xor bound dec adc sbb wbinvd mov add lods mov data16 (bad) mov shll add pusha mov (bad) lock imul add push std les pushl (bad) fwait mov mov push int3 sbb out mov shrl xchg mov wrmsr orl cmp in sub aaa push jg add mov jnp dec fsubl fidivr mov pusha mov fs mov adc fsubrp in xchg call add mull dec jge push xor bound push add jle push les mov jns stos pop jnp outsb inc jno sarl insb andl add je sbb outsb pop mov fcmovne cmp cmp out mov rolb (bad) fistpll push cs int mov loope imul lds hlt jae add aam repz cmc ljmp xor pop add test pop jg dec roll dec iret imul leave inc xchg jecxz cmp add add lock mov sbb leave sub std add sub push test cmp and call rolb xchg repz (bad) js lret lcall subl dec movsb adc add fldcw cs dec stos in jle cmc mov subl push mov jns mov insb popl adc pop sbb stos cs fildll jg adc xchg or adc mov les add idiv inc je roll add jl lret int3 sbb negl or ds or sti cmp push sbb aas pop loop out outsl addl pusha mov sub int3 cmp jmp sti (bad) lods or fistl and repnz movsl and jne fbstp roll lock mov adc xlat jle outsb adc add jl mov jns aad dec mov lcall jne lods loope lahf pusha rcrl cmp inc dec cmp adc jo ds js fdivp fmuls fs push mov js aad add lret repz cmp fwait add inc xlat bound add mov into add mov stc pop cmc loop movsl jnp cmpsb lds push mov mov and (bad) andl and mov in mov dec dec mov dec dec ret jae mov out hlt ret xor sti ss fisubrl dec sbb mov fwait mov mov movsl ljmp adc into dec inc fild adc add inc jg and push ss push in aaa testl gs pop cli lret inc jp xor jmp mov or je stc xchg add js bound mov and add stos std out sbb jo add je stos add or cwtl leave add or push bound or dec xor push add mov vpcmpgtd xchg xlat cmp jle pop lea add dec (bad) xchg jmp xor (bad) lea ja dec add add mov jl mov adc (bad) notl and mov dec jbe xlat push cs mov lds sub (bad) pop (bad) mov (bad) loop or addb cltd sbb (bad) xor jo lock loope jg and mov cwtl push push stos cmpps xorl dec shrl add jp ljmp imul addl push jmp and mov test mov push imul mov cmp fisub or add (bad) or lret insb push add stc mov inc sub lods rolb ss jbe outsb icebp push movsl add pop mov (bad) or je jnp sub nop pop test int3 jno cmp aad lret push rclb insb xchg es dec add cmp lea push movsb jge andb (bad) scas xor add pop addl push xchg stc clc imul dec mov mov (bad) xor dec popa in sbb insl push andb sbb and insb add add lods sub clc or cmp popa push fimull add lret pop sub mov push cmp insb jnp mov add cmp cmp add jne nop add lea sbbb pusha ljmp add addr16 add dec stc push add nop mov pop mov add jecxz cli jge scas (bad) aas or mov mov sub jno xor mov add mov incl mov xchg push jp,pt imul (bad) add ja fldl xchg sbb sub out add and testb adc sub outsl popf rolb jbe movsb fidivr test sahf iret frstor push rolb adc adc add lea xchg add or insb (bad) xchg and jg push lcall repz out ds add lahf mov sub rcl sbb sbb mov movsl adc outsb insb xor nop or add jmp cmp orl rolb fstpt movb test shrl cmpsb adcl sbb ret cli add xor add pop cmp insb je in xchg fldenv mov or jnp jne jecxz jl jno xor pushf push movsb sarl mov and pusha and adc cmp pop into lret popa in sbb rolb mov or pop add (bad) pop xor fwait int insb sub xorb adc add (bad) inc push in addl int fdivrs scas xchg jecxz dec (bad) dec push pop xchg add inc cli xchg outsb stos pop or and dec mov cmp movnti and sbb stos lahf add fsubl cwtl push jmp add and or mov dec push and add mov gs ss add loop mov cld mov mov cmp test int3 add mov icebp jecxz mov call int out cmp inc ret inc movsl test cmp add and jl mov bswap pop or out add pop pop xor sub fnstsw add incl jae xor jae mov dec fsubrs mov divb lock sbb ss push jno push add lock daa xor loop jle mov mov mov orb sbb cmpsl rcrl mov repnz das xor xor xchg jno sub push pusha mov jecxz inc cli pop aas cmc inc jnp pop ret mov lods rolb sbbl mov outsb stos cltd lahf adc push ret add cmp and mov test pop or xchg inc adc mov shl nop andb and test int3 jne orl dec sbb lret add pop push pop out dec add notb lods add repnz (bad) int mov mov inc dec arpl lods and cmp xor dec into test out fiadd or mov (bad) popf cltd pusha cs jp pop dec add xor dec in pop push test xlat arpl sti dec cmpb lock je mov xor js jmp adc jp and movsb add and std pop cmp insb in testb fs movsl shll pcmpeqw sub daa in jl push popf xorl sbb xor shll js aas ja movsl fldl lret add adc mov add fdivr das mov jae test movb push (bad) and sbb test test pop mov ret xchg mov mov lods outsb js xorl nop pusha pushf insb scas add jl cmp loop or and adc add or xor jns xchg xor and aam fdivs cmp fild sub xor add ret cmpsb cmp jnp ja jo push xchg sub xor sahf insl mov sub leave cmp and mov inc inc adc or mulw mov test dec jmp xchg cwtl pop (bad) add cmp (bad) gs push aas stos mov in cmp inc lds push sbb mov test aad repz jae xor cmpsl add xchg inc push inc mov das out test pop pop repnz and xorl add leave cmp and jecxz fsubrs xchg rcrb add sarb and fsub jl mov cmpsb pop push lods dec xor (bad) mov out mov xchg adc mov mov add xor add or outsl cltd imul sub dec rcr pop fs dec stc iret in cld pop out cltd or punpckhwd xorb inc in jge jo push add aad aaa pusha mov clc rcl jnp cmp sarb dec jae repnz js pop sub mov mov add arpl sub out out nop pop jmp add imul orb std push mov das add adc (bad) jae jno add sub cmp push adc shll xor in jecxz sub cmp mov push inc (bad) mov std sbb (bad) cmc iret or shll jae pushf sbb ret sti fimull push cmc cmp adc bound fwait (bad) pusha xor pusha add xchg mov add pop push dec stc push mov adc mov iret xor cmp sti cmc pop add mov or xchg push lea setg (bad) inc jp mov imul add push loopne mov jp int3 cltd daa sarb add push ljmp add pop mov add xor ss xchg or js sahf mov frstor fiadd les mov add arpl imull dec jmp xchg mov jmp mov inc dec jle add xchg in ss add insl fdivs xor fcompl xchg ficoml and xor cs into fwait decl insl or loopne push scas int push add jo sahf fwait aas add subb jbe push add push mov mov adc and sti (bad) push mov inc mov xor mov pop add jmp mov test cmp mov push inc xorb sarb jo add (bad) in inc stos insb addl dec fisttpl cmp jl jno sub sbbb inc jbe roll in inc sub add pop or dec fiaddl adc sub lret (bad) outsb aaa pop xor repnz xor mov test ret in ds (bad) je and mov jb shll sub dec loop (bad) ss or add xor hlt and push andl shrb jmp gs sbb sub jle pop add hlt xor or mul or clc mov pop movsb inc add rorl mov cld add adc pop add aam cmpsb add sub inc jb push jp xchg cmp pop xor xchg cmp dec pusha sti xchg into jbe mov add mov std or pop cld out mov inc out add daa sarb add xor mov cmpsl (bad) cmp add and lahf jmp popf add sub ficom jge cmpb push jae fstl jbe and push in dec shrl insb mov inc add sub es scas push test xchg xor scas testb fs in push push mov sahf jmp mov push add ret incl jae sub push mov jbe mov movb repz lcall (bad) popf movsl push or fild insb inc cmp push add arpl orl (bad) xor cli popf sti add (bad) xchg xor mov imul jg add pop xlat jl push pop add (bad) orb nop jp cmpsb loop jl cld pop rclb jae push inc add jb jo mov push pop std test pop test pushf mov sbb mov ret cli cmp sub push aaa scas test jno or inc mov js xor pop xor int adc js xchg data16 mov addl mov inc enter and pop subl sarl mov mov sbb sahf sbb add cmp sbb mov mov pop jp push xor dec lcall in std nop lea aad sub popf add jecxz call mov (bad) fsubrs lods (bad) icebp add lock sbb imulb jno add lds call js (bad) mov inc and xchg sti loopne mov aam xchg daa aad adc pop sbb idivl in aaa adc pop mov add out ds mov fisubl sub push sbb inc mov pop jne sub mov test daa and shrl sarb inc cmp idivb fidivl or sbb mov outsl mov repnz fs pop sub mov push rorl pusha movsb (bad) ljmp lea or lcall cltd es add and jbe in or fcom out cmc sub sub sbb or popa mov xchg xchg jl xor fwait aam or push shl xchg dec dec cmp dec mov cmp sti je sbb push add adc add push xchg test packuswb sbbl inc jae mov fucomi and pusha jae dec sbbl lock push xor (bad) in xor inc movsl aas jp jle mov xor mov clc jne push mov adc inc add xchg or std fildl and inc pop movsl pop add cmp jo out pushf xchg add lcall sub pusha rep fdivs out add pand inc test jp (bad) sti and add sarb mov lds or cmp cmp and cmp and hlt pop xchg add push dec sahf mov inc jno divl pop xchg and fiadd sub mov add cmpsw loop jo jle mov mov sarl sub testb jl das jnp and add lock pop xor icebp add sti orl sbb cld (bad) in clc ss lret lahf sahf or lods (bad) fisttpll sbb jl stc add push jp inc rcll pop mov in jb add sahf fs cmp out mov cmp adc add cmp mov push mov cmp addl push out ljmp into insb xor movsl adc pop and lock test pop or popl push add je and cmpsb in jo popf adc sub dec jno scas add or and adc add push ret sbb aas adcl lods lods add jmp xor pushf fwait cmpsl add mov cmpsb arpl or mov lcall (bad) fistpl test dec adc mov add int xchg dec scas add fldl cld and mov jnp idivb cmp adc sbb adc mov rcrl jns mov mov add cmpsb inc fcomp lahf lods and push je xor out dec dec scas add repnz mov sub outsb xorl jo mov mov movsb adc add into xchg add addr16 nop popa (bad) cmp adc shrb mov push roll add and sbb lock push pusha pushf mov xchg movsb inc push cs (bad) pop add xchg dec into call adc add cltd jp add addl cli jb adc push rol jo xchg fadd jns pop subb sub jno outsb push fs add adc (bad) push scas xchg and fdivs das xorl jo data16 ret inc sbb fsubrl ret cld inc js add sub mov add dec dec les add sti jnp dec rorb arpl jo cmc lret testb je outsl mov xchg add enter aad add fstl xchg stc cmpsl enter push adc add dec les pusha test lret stos sbb sahf cmp xor bound add sub loop add das xchg mov push icebp jno addb jne lock mov andb aas cli xchg sbb lahf add rorl add cmp subl aaa push pop pop xchg aad loop mov (bad) pop cmp push xchg ret stos xlat aas inc add rclb sbb sub jle dec repnz mov bound popf scas push adc mov add lret adc add inc mov pusha rdtsc lahf and nop and add jnp mov adc sbb aas out inc pop les xlat add mov inc sbb call pop mov add in (bad) mov and cmp jle cmpl lds mov incb add nop ss mov insb (bad) adcl cmp (bad) xor xor jo jmp add dec aas lcall pop pop rol loop mov cs pop sub (bad) mov mov inc push and sbbb test (bad) hlt and roll dec mov xchg add add sub xchg test aad inc pushf dec inc xchg jae inc or dec cmp add ret das xchg push adc addr16 fiaddl pusha sbbl insl rorl push (bad) leave dec add pop mov pop sbb adcl mov add cmpsl fs loope aaa sbb rep mov sbb mov xorl cmp pop xchg out add xlat mov xchg fs lea inc add adc std push sub and lock xchg inc add je xor in sbb cli and and xorb cs into leave lock mov sti fisttp mov pusha cltd outsb dec mov out imul adc push mov xchg test jp inc add pusha cmp mov push rolb dec pop xor sti addl lock pushf and (bad) jne jge add pop rcll mov lahf mov mov mov jmp testl scas adcb icebp cmc pop and mov aaa in push inc add mulb adc fildl mov (bad) lods cmpsl pop leave cmp pop jae mov stos xchg repz (bad) and mov lock rorb push cmpsb int3 pop call dec in or adc outsb lods ljmp js lock add icebp fidiv adc cwtl lcall add push fiaddl cmp jp int cmpl mov ret dec push cmp add aam pop inc je lret lock mov inc inc fiadd cmpsl pop add rclb dec les dec adc popa jo sbb rcrb prefetcht0 loopne jle adc sbb or notl in inc test cmp mov sbb sub fs stc add inc dec int or push out rorb cmpsb adc push outsb (bad) jno or and hlt imul cmpsl in addr16 push inc mov outsl ret xor add push and add mov ds add jae lahf pop dec mov (bad) mov (bad) adc popa enter dec je popf jmp repz dec adc sub mov and or pop out mov cmp mov fsubrp std add push sbb sub lss jb pop fiaddl jp lcall fsts jno add bound dec out and pop in cmp mov mov push sbb lea xchg dec je inc add imul push pop fwait push adc xor notl sbbl inc jnp add stos mov movsl add fwait jbe add ficom scas clc cmp or cmp inc jle stos orl (bad) out xchg rcl mov inc push rolb add add xor fbld ror sub mov dec (bad) push add or xchg and and shl inc ja fmulp or stos jnp roll pop push in addl mov push in scas out (bad) adc out xchg fmuls cwtl and or pop add jns flds dec mov movsb push aam test mov (bad) test jecxz add xlat rcrb xchg push decl lds mov fistp dec out xchg das (bad) cmp daa xchg (bad) or sub pop faddl data16 push cmpl xchg add nop lcall inc rorb add jbe push jecxz or add and xchg mov cmpsl sub push fnsave gs and aam push ss jno orl (bad) mov push inc clc sti sub add repz jb nop outsb xor mov (bad) or out sub ror mov push adc push push pop mov stos jmp test jg subl outsb sar test jl jg add inc sbb sti cmpsb flds popf mov dec outsb leave sti jae out xor pop mov sar dec repz add jbe dec add xor sub out adc loopne mov add sti xchg cs xchg adcl fs and adc pop je xor cmp fnstenv jb jno stc mov cmpsb movhps pusha dec adc xchg sbb jo mov add pushf (bad) fsubl (bad) add lods jp add pop les or inc out ret das push add mov or fcomp loope push cmp jmp je cmp mov leave push xor add jb mov sbb mov and push push or pop add add lods add cmp mov add lock rol mov add mov cs int3 outsb push jae mov add je cmpsb or aaa push inc sahf scas out xorl inc adcl and bound mov add push (bad) xor mov pop shll jg mov mov test in inc sub jg mov fnstsw and psubsw add jne xchg xchg push ficom add int3 lahf sub xor ds fs repz frstor mov adcl pop adc xchg popa and jp push sub add mov test mov xor add idivl (bad) lret and inc bound movsb stc es loop inc int3 neg cmp push cmp out push or clc add xor xchg aad push add dec cmp test das sub cmp jmp incl cmpsl dec sbb xor or add rol add lahf clc pop jb adc and mov add outsb addr16 cld arpl scas add mov sub mov sarb adc stos not in push mov pop ljmp xchg lcall push test xor ja add (bad) scas add or cmp sti push inc cltd lahf adc and out push push pop inc data16 mov popw sbb or xor sbb adc xchg jo int3 xchg andl cmp jle in inc push stos sub std mov inc jge orl imull xor sahf and in push inc add add packsswb aas xor push inc sub inc int3 jl xor call daa pop js cmp mov lods fmull push add dec and leave pshufw mov mull mov stc dec add (bad) sub test pusha (bad) bound mov outsb pop fidiv add sbb mov subb pusha push lock jbe xor jnp jl (bad) cmp jo test nop inc add ret jecxz cmc sub outsb fwait movsb xor test mov aad cli js xor sbb pop cltd loopne pop xor mov je sbb test mov push jbe cmp mov cmpsb in xor mov xchg add pop dec push xchg fsubr nop add inc jnp or es mov imul inc add dec sub pop testb xchg cmc dec ret lods mov add mov push popl inc xor in sti je icebp sbb add and shrb dec or stos popf mov and sub (bad) xor loop incl add mov pop jbe sahf aam inc xchg dec push lock aaa jo fidivl sub mov cltd clc push jmp mov inc jne psubd add popf orb mov add jne xlat shlb or cmp sub xor into jne pop ljmp and cld add sub mov jecxz dec das push addb add mov jg sub scas ljmp add fsts test fs add popa inc dec add or (bad) dec add mov dec test popf arpl add and mov add xor xor pusha push sub andl loopne mulb add dec jle aas pop out mov mov ds mov add loope int3 fld jecxz pusha pop cmpb cmpsl pop add clc add call mov fsubl scas and daa fs pop push lahf inc lea mov lock add loope xchg repz add cmp sti mov inc cmp push flds roll repnz or scas cs test arpl xchg popf mov adc out mov lods mov inc push jbe adcl adc add fcoms ret negb js xchg int xor test movsl lret inc lods addr16 jge lock add mov push jae add lea pop test jl inc dec cwtl and andb inc xchg jns add (bad) je or sbbl and jl mov rol mov mov int3 add mov mov sub sub in pmaxsw test adc and push in sarl ret test add leave adc cmc insl add pop add or movl cmpsb pusha push dec mov and in xor pop insl adc mov sub ss arpl xor lahf ja movl mov dec in out cmc jb in nop popf xchg sahf xor test aas dec pop (bad) push arpl mov cmp add jl inc pushf mov lea mov or imul test movsl cltd lods push lret in rorb xchg stos pop and cmp outsb inc ljmp push dec or loope rcrl add addr16 lcall stos subl nop and rorl cltd adc xchg test mov add jge (bad) ljmp in add push add jnp dec int push push sti mov lods cmp push dec mov add adcl ljmp add adc fistl in fimull mov test add rolb dec add gs jp push add imul lock sbb pop cmpsb mov xor xor outsl xor add in or mov fiadd push mov sub insb mov dec add mov leave add (bad) mov add (bad) xchg push fsubrs pop mov jnp lds insl add cmp out mov adc dec aas mov pop shrl out lahf lods add bnd xchg in xchg xchg inc mov mov pop push add int cmp jo add cmpsl inc push mov (bad) jle jl xchg add movl (bad) adc dec push cmc faddl jnp pop adc (bad) mov add aam xor jnp add xor data16 jge push add push (bad) jae add pop fmuls enter inc iret dec fildl mov int3 aas scas push push mov xchg dec xor rorb lods add imul jo add sub icebp shrb add loop movb sbb lods outsb mov inc cmp push sahf je push (bad) pop pop popf mov or movsb (bad) rcll (bad) lret in sbb and out imul sbb mov mov in inc adc jp das fild add inc repnz jno add cmp decl insl fiadd mov and push scas sbb ds movsb mov push out loop inc cmp popl push add mov push sbb add inc and dec and xchg add xchg ret push imul mov add lahf pop push mov mov mov cmpl sub xor ljmp push mov add mov testw sub xor sahf hlt adc dec sbb lcall cmp fldl inc gs shl mov out pop ss mov les sbb lock add pop mov dec xor test xorl or int3 xchg jae mov ret mov mov add stos data16 xchg add push and mov hlt js leave clc jno pusha xchg mov popl fstps dec or test fidiv jge mov mov lcall mov out xchg sub lret xchg mov ret into jmp or in fdivrl or pshufb scas add sbb adc and mov pop aaa pop inc js or mov and mov arpl daa sub xlat cmp in cltd and push ds daa xor sbb leave bound rdpmc out in xchg inc lret xchg cmp add add (bad) sub push push dec out jle outsl cld mov push sbb and std xor push (bad) mov xchg pop and add outsl push and adc flds cmc lds in in aad mov hlt std jp jg daa or adc push (bad) inc sub sti or xor add (bad) lea jns aas sub add loope cmp test and lock jmp jbe fidivr add leave scas nop sub sahf enter js je dec pop lahf add adcb sbb js movsb push cmp add negb mov pop add xchg pop push (bad) pop mov jecxz loope int and fisubrl fidiv std ja mov pop imul lods xchg add xor pusha addr16 dec mov xlat or and pop mov arpl cmp icebp ss test xchg jbe add and and cmp jl mov sar loope stos fs sahf xor mov ficompl call xchg andb imulb add rorl cmpsb pop or jne addb popf mov inc leave xor adc add pop dec aad rorw cmp xchg inc inc xorl out or add icebp dec cli and fiaddl xchg lods or xchg inc lods xor sarb into xor stc add xor test incl repz cmp (bad) push movsl cltd loopne pop add push push adcl inc xchg inc add rorb mov sbb push ja pop loop cs (bad) lock mov (bad) mov loope std push push add pop shlb in sti jg sarl or push lret pop inc mov movsb mov mov in jge int push mov jmp cmpsb sahf les adc add xchg sbb cmpsl pushf mov sub sbb into lods movsl sbb and fwait inc sti in subb jo add ret dec clc adc jb mov jnp sbb pop lods push mov add push mov add sub adc (bad) add ret enter push idivb mov xchg sbb sbb add adc inc sub cltd pop daa jmp divl fldl call (bad) xor test in les cltd (bad) pop ja sahf add jno and mov cmp mov pop jl add inc int add adc out cmp and inc dec and call lods and (bad) cmp enter test add ffreep out ljmp ds add inc shrb mov xor cltd divb test das pop sub mov test movsb and push add push adc test fadds xlat mov push je lcall and mov fdivrs mov cmp jecxz sbb mov mov cmpsb movsb sbb jmp movsl mov dec xchg mov sub fidivl imul fnstsw and cld or push ja add stos xchg dec roll add mov xchg or enter jns add jge popw dec mov sbb push out notl sub inc clc push out dec push add call shrl scas or add or (bad) icebp dec add push (bad) push push out mov or aam scas dec rolb jb aas add mov xor mov decb into inc pusha je dec or clc shrb loope call sbb (bad) pop add push push add inc sub pop xchg hlt push loop push or sbb and imul add sbb pop ja add (bad) neg sbb pop rorb or sbb scas xor adcl rolb int3 movsl sub jo xor jl icebp cs mov hlt addr16 jbe inc add and les add xlat or cs xchg aaa lds cmc or sbb out pop mov cltd mov rol or cmp jecxz popf and inc xlat test sbb sbbl cmp add jecxz xchg sahf jle xchg ret mov add xchg pop add js add dec and add xchg sub sub repnz rcll inc cmp mov or xor out subb aaa mov adc scas emms and pusha mov iret rclb or fcomps sbb sbb jmp popf push and shrb testb loopne subb ja adc gs sbb in stos testb mov (bad) add mov push inc add sahf xchg mov imul adc xchg mov fnstenv pop lret addl jmp sbb add lea std lahf xchg or cltd add faddl add pop les lods xlat jno or clc add sub xor pop pop add mov cltd add mov push cmp adc mov add inc ss loopne add xchg xor mov pop gs adc push xchg lock add xor into pop mov idivb int popa jo xor xlat clc pusha jns mov pop or sbb pop clc jle or jb add adc mov mov pusha inc mov je dec cmp pusha cltd or xor daa mov pushf mov or mov add push dec flds sub lcall call loopne xchg mov fs (bad) into xchg and add inc xorb add or popf inc jb or push jecxz jne jp pop addl jge rolb (bad) xlat int xor enter je inc cmp pop sbb (bad) push pusha mov mov pop and pusha xor fiadd test pushf mov mov test add xchg fwait mov andb fsubrs dec jno adc jno cmp mov add pop scas mov add mov rolb imulb in movsl andl and push (bad) xor cmp andl dec ljmp stc insl pop aas pop imul mov and movsb add push sbb gs call push add pop dec pop movsbl sahf cmpsb mov fucomp (bad) int add inc outsb in popf hlt lods mov cmp jecxz loope mov xchg inc (bad) xchg out and shrl fildl fbstp xchg sub lahf add dec inc ja dec add xor scas sbb sbb pop jbe sahf xor cmpsl iret xor les add mov les inc addr16 add clc xchg xchg nop adc add sub push add sub mov push popl mov outsb leave sbb js add pop pop orl inc imul mov mov pop add or adc and inc loope dec add stos daa lret test add iret pop jnp vpsubusw sbb inc cltd xor ret add sub cs outsb popf push mov inc negl lahf xlat call mov scas cmpsl push cmp sub add mov xor add jmp data16 lea inc outsl cmc into pusha sub jo push insb sub add les and push add sar aad ficomp mov jae nop add push leave xlat int3 movsb in or inc sub push mov push cmc cmp push jg out mov add dec pop popf or pusha xchg mov pop adc hlt push add add mov sub push cwtl cmp inc sub enter add push mov cli mov mov sbb js shll push add and sub xlat xor mov inc add push jne xchg pop add push dec mov insl xorb lds nop pop data16 mov lods (bad) les or and jbe sarb add mov ret add mov dec push pop or add sbb sub (bad) xchg and ljmp adc js addr16 es loope and cmp lea andl push test movsb add call add mov sbb ds or scas lcall inc pop fdivrs xchg loop iret pusha movsb ja mov imul ss inc je sbb add jno loopne mov jb pop pcmpgtw cmp jb pushf sub pop fisttpl lods add es cld adcl dec jl insb test loopne rolb cmp enter in imul mov push push and cmp add push push add push stc test add mov insb inc or icebp and inc jle incb aaa jnp aad mov cmp rcrb std arpl and mov cs repz (bad) mov aaa lock inc add gs xchg jb cmp add jl dec adc scas repnz fiaddl (bad) (bad) sbb mov cltd add or dec fimull imul jb xchg jle add mov sbb call data16 jbe mov jg imul fwait sti push (bad) or pusha subl add ss mov popf or scas mov sub inc pop jle or je dec repz add xlat mov push cli jnp add jge mov xchg cmpsb jmp cmp xchg or mov add push xchg push pop xor mov xchg and or mov add mov adc add xor inc js addb (bad) leave jge add lcall jge mov adcl out jne lock cmpsl mov imul in jae sbb add sar sub add sbb ret test push mov mov lock pop cmc orb imul add xrelease lds arpl pushl push in ja loop or push add jle sub mov jo pop stos adc ja mov ficompl iret mov add fistpll out fiaddl pushf std lea add (bad) loope add sub xchg movsb mov sub xor mov (bad) out roll xchg and into push add xor cltd popf jns and in push adc push ret adc pop and add lods sbb mov sbb pop out je fmuls out and mov sub aad movsl test lock add xlat loop insl pop shll sbb jbe xor pusha and add xchg and dec pusha or lcall and add xor push mov add pusha sarl mov xchg call sbb inc (bad) loop cmp cmp cmp out mov clc lods aas xor rorb add pop jmp cwtl inc add vhsubps add sti jnp push mov sahf add and lret (bad) xor lods icebp out add test enter mov cwtl add cmp push lahf xor add int3 jno or mov push lret scas jns xor jbe add (bad) in lea xlat mov cmp mov cwtl scas imul (bad) test dec xor inc jp movb (bad) mov neg cli jnp add or sbb jb and out mov pusha xchg (bad) dec cmpsl lea test movsl pop pop add test dec fcmovnu dec loope movsb outsl (bad) mov nop adc insl test mov sub dec inc add mov data16 sub xchg jp and adc or add jb push add jnp sub leave ficomp add in cmpsl inc sbb aam and (bad) lods sarb (bad) mov and and int mov mov jg aaa pop cltd pop jg (bad) lret push mov inc cmp call jg add addr16 sub aaa adc decb push insl stos pop adc out out push xchg lahf out or push push aam cmp movb test dec sbb rcrl mov xchg hlt outsb sbb jnp add mov aaa js sete in mov test arpl jbe es pushf or pop nop add sub pop add sub mov jno lods mov xchg mov cmp pop pop ficoml and add mul xchg add or insb dec jb add pop lods cmp dec lock sub (bad) push add imul xor add xor sbb shlb mov arpl fdivrp pop push cs jp add scas fidivrl sub into mov cmp mov mov (bad) call pop or jle mov js jnp jne sub les cs jns mov sub repz outsl push cmp rolb shrb add lds es add sbb adc leave adcl adc and mov add (bad) (bad) iret in fnsave test incl or add subb fs sub stos subl rcr in repz mov add out loop mov or adc fwait rcl addl (bad) dec jbe add mov rcll add and movsl cli add sbb push pop bound inc xchg pusha stos pop pusha rolb fs mov aaa inc js inc push push add push cmp popa daa std push test add sahf pop mov addw jne sbb repnz lods daa out movsb subl aad sbb mov xchg jb jecxz inc out pop add ljmp scas dec int3 pop sbb fs pusha mov ja imul mov mov fiadd shr (bad) cltd add popa and (bad) (bad) rolb in lock popa sahf sbb scas stos push lcall les sbb sub lea cltd cmp aad pop sti cmp or jo push inc lds sub rol ret add lods sbb push (bad) dec in or add add pop sbb xchg test mov jp out xchg verw inc fsubrs xchg mov mov adc jo movsl sub test jne lcall nop lahf sbb push scas popa cmc dec jecxz hlt add sub mov jb pandn mov enter aam pop outsl pop stos jbe cmp add xchg out insb (bad) popa mov pop incb mov inc (bad) lret jbe and sbb push repz dec cmp mov pop lret push outsl and cs leave cmpsl icebp add adc mov shll sbb push pop pop xor cmc repz add shr cmpsb add mov xchg outsl inc sub cmpl negl mov push pop inc add sub inc or mov add in iret fist test pop xor out das add xor insb jle bound mov cmp sbb test cli add sub fnsave ret add in and cmp push inc mov adc push dec add out into rclb out sub lea iret add inc mov iret lcall add mov cli add adc inc add push adc and pop push add ss add icebp dec xchg arpl add add mov imull push jo mov ret loope dec jne iret cmp shlb xchg rolb scas stc sub lds lea aas xor xchg add into mov jbe gs xchg jo out fwait jo add add push lds add cmp push cli jmp in xchg sbb add mov in outsb xchg scas test adc jno cmp mov mov add aam aaa and mov mov insl pusha dec addl mov jmp add adc mov pop dec mov aam cli pop adc aad cmp popf push push mov pusha push stos cltd inc xor pop lds add and cltd sub clc add (bad) ret cmpsb pusha add mov jecxz icebp jle pop sub ds add in sahf add stc mov out push aaa add insl lea cwtl mov add mov fstpl fs in addr16 insw dec jg add xchg movb mov lret nop jne lret cmp cmpsb xchg lods push inc inc stc sbbb leave inc ja cmp ret pop sti (bad) lds dec sbb mov xorl (bad) push mov mov inc push inc scas pop jo mov outsb mov add imul add push xchg ljmp add lea jbe dec xlat jge cmp popaw adc jae add mov mov stc add mov ret into xchg jg xlat in jno add cmc out outsb jae push cmp fsubs cmp insl addl mov ljmp inc push ljmp int push add pushf ds add adc cltd dec cmp add mov xor add add pusha add (bad) leave imul mov vmovntpd push pushw add inc jp jg inc jno pop insl in sub add jle cmp hlt out jge xchg xor inc adc xlat jns push ds pop add sahf jno mov inc add ja in add adc int or dec js mov add inc ltr loop or je jae mov popl ds sub les adc pop mov sub push ret jle test add lods sbb clc dec xor lock add insb in add aas push (bad) inc es inc orl stc add sub add add stc mov repz fsubs fcmove pop roll lods push pushf cmc add push or adc daa add out rolb jo push inc (bad) out xor es inc add xor fldl mov mov (bad) dec lds and cmp add mov push int3 mov fs sub xor push shrb xchg add insb ljmp jcxz add js add xchg fdiv nop cmpl mov mov dec inc outsl fcompl (bad) ljmp outsl popa mov or aaa in int3 add sub rolb in std push stos xchg mov popf rol adc pop (bad) xor or add in mov pop fxch jne sti movsl xchg (bad) dec es or pop loopne out or add or icebp xchg in add (bad) stos xor adc test sbb and lret ret push adc and test lods je xor jle inc or adc add das imul jns add push add fisttpl and icebp add pop rcl andb jl mov fs sub xchg adc push adc movsb (bad) sub push cmc pop les sub cmpsl add outsl lcall shl push int out mov pusha add dec sub push push adc divb hlt add jl add jb fxtract mov ja ret andb stc sbb (bad) sbb jo cld insb push xor movsb add mov and adc adc push add lods jg mov xor or cmp fisttpl popf (bad) jb pop pushl jne outsb ds and hlt push cmp sbb fsubrl jnp cmpsb jnp add mov jg cmp add push (bad) xor or pop fidivrl lahf cwtl and jns xor mov pusha imul cld addb rcrb js dec add mov and aas push addb mov or aas jnp inc fs dec xchg out sbb xor lods jl insb mov inc addr16 mov pop xchg cltd jge mov and movb daa add inc test lahf sub lds and sub sti add (bad) inc popa leave xchg add lahf mov add icebp mov mov cmc fildl push (bad) mov mov push loop in jle outsb add or arpl out mov sbb xor mov mov add (bad) cmp std add pop add mov adc mov inc add pop lret adc add mov mov andl xor push adc imul mov int3 in jnp mov mov dec rcrl aas jno xor mov popa push cmp pop pop insb pop push aad add adc pop cmp (bad) xor lock or aaa cmpsb and inc add mov sub pop out jp add lods call cli popl jbe or cmp mov add popa push mulb ffree add mov scas jmp rolb add mov pusha cmp fwait or jge add and push push daa imul jg lret (bad) pop add sbb or int3 cmp xchg es nop xor push adc popa sahf test mov pusha test cwtl pusha outsb cmp add cmc (bad) and iret pop add (bad) int mov pop arpl addl pop add add in std stos or fcoms aaa sub add or cmp adc add lcall xor xor icebp aaa add std mov cmp (bad) (bad) mov jae add cs mov (bad) (bad) hlt fcmove fsubrl jmp xchg sub mov in aas sub push xchg add jne or push lock ret xchg idivb push xlat or xor push imul fs pop add xorl cmp test mov cmp mov add int3 xchg push (bad) out jmp cltd mov popl sbb jg mov xor loopne or loope add sbb mov pop cmpsb call and mov sarb pop sub lea mov jmp add int fdivrs mov pop ljmp lcall or divb xchg push xchg fnstsw and mov int3 outsl scas mov or add push add or mov xchg cld int3 int lock push addr16 (bad) jnp sub movsb cmpl push jp cmpl ds scas add dec push sbb pusha sub push scas or cwtl cmp inc push jmp add mov sub jns push mov xorl pop add fadds mov call add mov fsts add or inc mov jg arpl lods sbb dec jo (bad) inc jle fisttpll (bad) jno jl cmp and xor cmp add (bad) fnstenv push lret lods enter add (bad) xchg sarl lods (bad) gs arpl (bad) mov cld mov dec adc imul lcall inc lret jge or and cld (bad) bound pop test enter push cld sub xchg add insl push push ss aad mov mov adc jno xlat imul jo es scas mov mov cld pop fistl cwtl mov inc stc or mov jnp xor icebp dec mov adc push out das pop movsl pusha out in arpl aas xchg inc hlt add repz popf pmaddwd inc inc sub mov imul imul push out inc jnp,pn pop ljmp popa icebp fnstcw add sbb aad fidiv inc push jp jo mov jnp dec add les add enter xchg mov jo dec out add mov lahf out popa xor call adc xchg orb push jo bound inc adcb adc insl adcl pop jb call sbb ret cmp mov xor fnsave inc clc push cmp lret dec or add (bad) inc dec loop out xchg add cmp add pop sbb jl add movl test inc addl inc sub les cmc cmpsl xchg jbe (bad) add mov xor sub inc js xchg sub mov data16 add cmp out fiadd aad push mov (bad) out pop xor clc push out and and insb mov daa xor mov xor aaa add aad neg rclb popa addl je out dec imul pop outsl push frstor add cmp lds mov mov push xor cmpsl add adc pop add cmp cmpsb lret sub mov fadd and mull pop mov sbb mov sub mov out adc add fdivrs dec add xor aad push push and pop addr16 or push pop add movsb fnstsw add movb insl hlt inc adc fnstenv and add out sbb fstps xchg divl stc mov mov popl dec rcrb lret cmp std mov dec xor sub ljmp bound push movsb loopne cmc mov inc inc cwtl jle mov jae repz in sbb ljmp mov (bad) stc xor loope adc lds stos leave je jbe inc enter inc popf and ret pusha xchg sbb jo adc stos and orl inc push sub sti insb out cmp and movb cmc hlt imul (bad) cmp andb enter iret adc inc jle add adc shrl rclb (bad) cmp mov lcallw push in push mov jmp push pop (bad) xchg in bound add dec rcrl push mov adc mov inc pusha xchg in and add lock jle aas add mov dec add inc lret or add mov xchg cld xchg mov or jge loopne sarl adc sbb add dec add shrb mov movsb pop and inc jo pop fstpl add cmpsl push fsubl add scas sub fadds inc xor add and aas or divb std add cmpsl and add inc loop add and into (bad) insb add pop pop dec inc mov out bnd add int3 clc and xor jbe adc add scas jae aam sbb jne stos dec shl icebp repnz push and outsb lea adc jo jecxz mov jno add ss (bad) jge (bad) mov xor and sti add daa sub lahf aam stc add inc fidivr repnz push add ljmp add jo mov push icebp pop push pop in imul add adc add xorb or push add clc mov xorl pop daa ja mov pushf jbe cmp xorl call xorl add pop pop (bad) lahf dec addb mov jecxz push cmp or pop ficomp xchg jae mov and rcrb rol jg test outsb andl xor rcrl push add mov mov subl xorb xchg jbe fidivrl lahf ret loopne mov stc mov call jb or xor pop imul add popf jmp dec sub fild add das mov dec add arpl and divb jp pop sbb ja xchg xor mov adc push push popf inc xor andl inc pop or push mov push cmp aas jge xor sub sub and sbb inc mov xchg push and pop mov outsl add lods and jo add clc pusha je rorb mov inc push (bad) fs mov pusha out add adc lea cmp sub mov mov sub or test xchg jae pusha jns fdivs dec mov outsb mov subl out stos push push popf xchg rolb mov add adc pop push jle fild jo aas sbb or and (bad) stc ja mov (bad) pop add pop scas stos xchg lcall mov add push call (bad) icebp cmpsl and mov (bad) inc inc aad lret loop pusha dec test mov xor mov push add inc and loop or add sbb add cmp in pop and push jecxz popa add dec icebp xorb cmp or push adc inc jle cmp cld das add aam mov sub stos (bad) addps xchg out jecxz push std cmpl pop jmp fstpt push add aad jbe mov jle xor or xor or (bad) cmpsb fstl loope andb and cltd data16 adc pop inc and xor jnp jecxz xchg pop sub xchg addl (bad) and inc insb pop mov add lds xor jp add pusha dec jge xchg lret sbb insl hlt clc mov pop dec add jns and pop roll lock add fsubrl mov loope test mov jns inc repz inc lahf scas test test pop sbb dec es test mov aad mov cmpsl jae dec fdivrl divb push fcoms addr16 data16 pushf sbb in mov ds cmpl add mov in inc fdivp cmp adc les and stos add loope add stos in sbb mov pop push inc jl add push ret push in aas lds fucomp adc sbb aas mov int xlat sbb fisubl jo add loop inc ret into jecxz lods subb scas xchg or jne out jp pop adc xchg and test (bad) aas dec mov adc inc jp orl cltd pop (bad) jb mov mov test jbe aas cmp add scas jnp rcrl jge xchg push arpl sub xor xchg (bad) xchg xor pusha lock jae pushf jg pushf pop into add adc add fnstenv pop ds adc xchg cmp (bad) and fildl cmc inc mov dec jb sub mov xor roll rclb xor aam sub jne orl test jo push clc push (bad) ret mov sarl inc decb nop adc xchg call and scas jmp sub cmp adc in lds movsl repz mulb (bad) lahf sahf mov pop cltd dec xchg fstpt nop push cld jno inc mov in xor mov fldt aas pop fldenv inc test into inc adc cs in add int3 dec push add inc jg add out les loop add fnop rep stc std add xor cmp cmp push movsl pop in std add pop sub popf sbb imul push sub das mov enter sarl js add push decl movb jl nop xchg (bad) and xor outsl pop adc pop add or gs inc loop add jmp movsl incl sbb hlt dec cmp sbbb push aam jo xor popf mov push mov jbe add bswap sbb lds add movsb mov or int3 (bad) lcall mov mov jmp push test ret shll push es add fistl outsb add repnz dec add mov in or out dec rcll stc mov cmp xor adc aam and aas or add mov mov sbb outsl out mov leave add cmp sbb inc push pop xchg incl aaa insl cwtl imul push mov je iret out sbb pop add jo add test jbe mov leave iret subl sti orl xor push lock pop outsl loopne idivl xchg gs out push push push mov xor (bad) cld je adc leave lods or mov imul add cmp cld sbb pushf lods add daa jmp sarl sbb pop xchg add pop jle add sub inc mov cs rcrb dec sbb in in stos iret jg and ficompl jo xor push adc xchg jecxz jno movsb sbb and lahf and add push add out cmp aaa pop sete sbb cltd cmp mov fiaddl mov repnz jl mov lcall jo movsl jmp push lods pop sub add fildll cwtl scas mov lock lahf mov mov or pop dec pusha sti jno cmp and test dec mov adc push pushf fucomip inc repz (bad) jo dec add inc add sub mov ja inc xchg aad pop (bad) loope mov push inc lahf mov scas cmpl lods mov sub popa push add (bad) jb add inc inc negl cmp add pop mov add fsubrs (bad) loope lds ds test fldenv hlt cmpsb add inc xor lcall push sahf xchg fbstp inc nop cmp int and sbb or or sub mov sbb aaa mov aas push or push pop rcrb adc fsubs in fs test sahf out push subl push loopne pop mov cld dec call mov incb lds rolb xchg inc aaa adc ljmp add test push pop ja or inc add pushf ret mov leave subb (bad) jae inc mov add sbb shrb pop cld fmul sbb adc sub int3 add rcrb cs push xchg stc mov repz (bad) idiv push pop lds xor loopne ja jns lret push mov dec add test sbb int jae and jp loopne pop jbe add mov fild aaa jbe jge into dec and fcomps loop mov mov ljmp mov adc and movsb lds inc mov add mov jbe add mov cmp rclb cmp and jmp call pop add xlat pop cmovs imul movsb cmp scas mov mov aaa idivb dec inc add outsb andl add (bad) xchg lret jge dec jmp inc inc add int mov adc (bad) shr push and addr16 add jmp lea mov sldt xchg xchg sahf loop mov sbb (bad) mov add ds lds and add or js lahf cmp ret hlt xchg add sub div outsb ss mov add rcr mov mov or fiaddl mov pop cmp add xchg scas (bad) mulb mov mov fildl and pushf mov addl mov in add lds lret scas jmp push xchg jg addl or das (bad) inc adc jbe add outsl cmc in push subb pushf pop mov add dec pop ret mov sbb jne add das lock lahf push movsb inc mov jbe shrd pushaw jmp out gs add arpl pop pop inc pop add fnstsw lea sti jge lahf test jl add or mov sub cli addr16 mov jp je sbb (bad) xor aad fwait cmp fcoms test add push sahf or push sarb cmp xchg xor add cmp sbb add das push xchg add outsb sbb cs (bad) mov add and les mov add test pop jbe mov cmp push mov xchg roll mov xlat cmp cmpsl scas pusha lods je imul push mov adc movsl pop push stos add sti ret xchg pushf jbe inc jns pop lods pop jae adc clc dec push or pop pop xchg cmpl js pop mov pop das pop or inc xchg pop or cmp add loop mov add xorb cmpsb jbe rolb enter adc cmc mov cs repnz iret and nop adc lock out stos rclb scas or or call sahf enter xchg adc orl mov sbb and faddl arpl sub jbe push xor add mov imul pop sub leave inc repz xchg add roll (bad) stos pop orl (bad) pushf adc loop adc xchg add sub lods pushf cmc mov adc jb or pop push xor sbbl cmpsb xor push inc pop mov cmc cmpsl pop pop sahf sbb sti lock and jne andl hlt jge call pop xchg cmpsl dec jmp xchg jg orl shr inc push add cld mov add int add mov sub add lock pop test jbe idivb jns add dec aaa out cmpsl add mov enter mov aad dec subl in cmp pop add inc cmp ret pusha cli add sbbb xchg test outsl push je insl cmc lahf ret add sub mov in push (bad) and mov add je das mov inc movsb stc je les ds push add bound mov mov mov add outsb push adc push dec adcl add enter and add push dec dec popl test clc icebp jo in lret fisub jne fldl je cmp icebp xor sbb mov jecxz rcll in je fimull scas xor push aas pop dec jo rcrb add push inc jecxz fwait add fcomip stc rcrl mov add push adc scas xor (bad) mov shr dec into js sub popw add bound and lods ret add or test insl in js loopne dec adcl inc sbb add xchg fcoms add jo xchg ljmp fs jo sbb add cmpsl inc sbb lock lret clc push add push (bad) (bad) dec cld cltd mov (bad) ficompl mov add push call ficompl xor pop jo push and icebp add pop xchg or roll cs ret mov movsb aaa or imul out jbe inc ret add bound mov lea or add popa add push out call les xor insl ss jae test scas inc add dec pop popf orl ds jo mov xchg shrl cmp mov and mov push inc and flds ds ret xor adc mov dec add (bad) movsl leave js push (bad) loope in mov gs cmp mov das jno aas xor hlt stos cmpl add imull in jo test add shlb adc sub xor jg add xchg sti push rclb add ja jle enter lcall xchg es std jmp rorl in xchg add sbb ret add xor mov out ja mov adc lods imul sub inc xchg roll jle add jae lea sbb sbb add (bad) xor sub add int cmp lea (bad) pop add mov jnp adc out sub mov pusha (bad) sub out mov lret mov and sbb popa (bad) cmp mov imul mov movsl (bad) mov sub adc cwtl sub dec jmp ret mov andl movsl xor push clc roll and xchg cmp jle cmpsb cmp xor add sub dec add lods cwtl in cmp dec sbb stos fildl aas dec and xchg add jp insb (bad) pop cmp or sbb xor adcb (bad) cmp pop jo orl mov mov call negl dec mov or ja pop push stc add cwtl stos in push insl daa mov ret cmpsl mov mov xor cli jge add addr16 addl inc outsl loop push jno orl insb mov loopne jae cld xchg sbb gs das imul xchg popf cmp dec cltd add sub je inc add pmullw insl int3 enter mov xor ljmpw repz jae mov scas push movsl ud2 xchg jb mov jne pop pop adc cwtl (bad) cmp xchg aam jge sbb mov fbstp mov ror adc ljmp test in push test add xchg mov xor (bad) test add int3 jge mov in add mov scas scas and mov js add pop inc mov aad dec dec mov sbbl js dec pop xor lcall lret shr mov lods add pop add push push lahf loope setle fadds mov push cld dec cmpsl jb add imul popa jle pop sbb insl jno inc jbe fwait inc pop sub stos push or mov add pop jmp push sbb scas inc xorl repnz loopne data16 ja shr in je cmpb adc fstpl jae pop icebp pushf notl mov push xchg pusha mov mov or sbb (bad) int3 mov sub add xchg jno cmp xchg scas pop inc sbb add (bad) add add fisubrl jle ret imul js dec (bad) pusha pop push or pop jae xorl loope sbbl popf jmp lds lock add ret stc xor mov movsl or add xlat orl or inc pop xchg push add cmp jns fcompl loop mov adc sbb add movsl ja add stos call mov push inc das addr16 and add xor and jg xchg in sbbl punpckldq adc xchg inc jge ja add add add dec leave adc sbb add sub and push xor enter mov lret loope cmp mov or stos sbb adc jmp push xor les out jg in pop mov int3 sbb flds xor sub add xchg (bad) adc dec jmp (bad) sti in orb and jne js test xor sub fildl jg xchg cmp add or int mov add sbb lds (bad) add mov cwtl sbb push sub data16 cmp inc mov add adcl jmp dec mov lahf xor cltd inc test ret loope insb cld mov pop xchg cmp add jnp sub scas jmp sar or cmp add mov adc into mov nop adc pop test and testl dec add pushf int3 add xlat push jge or stc jb roll sti and sbb mov popf mov mov push test push inc add push ffreep fcompl add or hlt sbb sub xchg aas inc aam call daa lret jp fsqrt cwtl add xchg insl inc push add popa movsl rclb inc add (bad) ret add mov or lret je lock out sub lods in add cmp xor pop xor add (bad) push inc ljmp (bad) jae scas xchg xchg shlb push movsb out add loope sbb cmc pusha shr xchg arpl inc xor aaa iret jne mov add sub addb loop popa mov push inc add repz loope notl dec push add out iret sub insb pushf popl xchg sub (bad) lret or icebp inc cmp sbbl and mov leave movl ret fdivl mov das into out lods add outsl jo pop dec nop lcall fs cmp add add cmc sub dec push test shrb mov movsb push adc loope add outsb lods sti adc insl les (bad) mov arpl cltd iret add xlat add testb subl movq in cli add cmpl adc (bad) jo lahf sarl push arpl lahf jbe ret lret imul add call and inc andw xchg cmp jnp int3 imul and cmp dec movsb das pop iret adc pop orl cmp rcll fs push pop xor jb getsec push push sbb xor add and add xchg lock fdivs sub add test nop inc cs add jp mov mov addr16 repz (bad) stos adc rclb mov push or (bad) push test das add add lahf pop mov xchg add (bad) data16 mov dec add lods adc pop (bad) mov (bad) push add fs in push jg rcrl add dec cltd jecxz rorb push imul and mulb je mov pop jle hlt add decb jp popf pop nop aam fild iret repz enter loop (bad) out imul movsl dec add pop sub lea test cmp cwtl inc pop sbb dec push add (bad) xor andb fwait xchg adc std pop mov xor js loopne (bad) aas or ljmp sbbl cmp pop daa ss mov xchg (bad) jle aam sbb and add repz fcmovb cs inc inc nop dec pop or mov cld inc sub test enter andl inc sub nop add ret xchg push cld insb js add jle rol (bad) mov mov and add lret out pop hlt mov sub add (bad) xchg div insb xor sub insb ja xchg add stos and icebp sbb jl add test cmp add incl test mov add sub or frstor mov (bad) notb lahf pop test mov insb mov cmp aas xor int3 add scas fcompl test jo sub add jmp add fnsave lods adc pop inc add rolb fistpl scas jl into xchg enter mov sbb lret test fldl cltd and js add sub negl add out (bad) push je sti in add lods or and adc jge mov bound jb roll lods js pop repz out add outsb adc fnstcw notb push arpl push jo or add loope cltd sbbl xor cmp push mov int add lahf xlat or das std mov nop (bad) and outsl leave adc jb movl mov dec adc popf push adc add (bad) (bad) (bad) xor or inc decl mov repz mov jecxz pop ret movsb fsub push push cwtl or adc out mov push fcmovbe add in pop (bad) inc xchg cld sti add jbe and into aam mov (bad) jo or push mov or rcrl or (bad) ret xchg aad test std jl cli add inc lods shll and das mov mov add sub inc xor add jno sbb mov xchg mov out js cmp add std cwtl das imul aad jne xchg mov in xor cs pop mov lahf inc pushf adc add out or push pop xchg inc xchg pop iret jg or and add xchg jl movsl nop jle mov into stc jmp mov push in adcb cmp push mov add cmp fbld aam jo push jge mov ss add jg and in in or stos int lret jge (bad) jno jge xchg outsb dec cmp sbb int sbb fistpl (bad) movl outsb adc push xor je and and clc (bad) out and mov pop hlt push inc sbb jno faddl idivb add or cmp (bad) outsl mov jns push sbb add ret xor std test outsb pusha lock nop bswap xchg xor es dec pop fsubs pop lock into repnz add stc xor pop xchg add aam icebp mov verr orb xchg clc dec mov or sbb mov and pop sub jle cmc add cmp lret cmp jmp out jne inc ss scas mov xor add add add mov lahf dec mov (bad) js sbb popa inc stc insl das pop dec roll movsb outsb and pop pop rcrb and sti pop add fcoms dec xchg aaa inc lds xchg xchg imul or add loopne test xor mov xor cmpsb xchg mov sbb sti cmpsl add add cltd pop or add cmp pusha add push into ds jecxz test sbb (bad) inc adcb and push in push mov fsubs fcmovnbe push fstp sbb rorl pop inc rol sahf iret cli cmpl test dec loope mov push cmp mov ret pushf inc xchg sahf and mov mov xchg pop repz jo fisttpl imul sub sbb js in fwait dec addr16 clc pop fiadd arpl pushf cmp mov outsl in jge inc mov mov mov dec cmp add in jp clc xor add mov add out pushf and add mov adc sub push ret xor inc test ljmp inc repz (bad) add loopne push inc and lods jae loope fwait mov pop push xchg iret inc xor arpl mov push dec add leave cmpb and sbb inc pop jp js call xor pop mov inc in mov sub (bad) lods mulb or bound add in mov sbb pop cmpsb add mulb xor popl sub daa aaa adc pop fwait nop jp or call mov jae pop jl mov push aaa cmp incl loop ja andl sub roll hlt inc inc in outsb imul push dec xor push add pusha add inc mov sub lea dec jbe jo push xor jns add jae mov cmp inc popf icebp fimul out pop xchg dec xchg (bad) je push orl inc pop js movsb sbb mov ja xchg cmpsl sti fsubs rorb add add loop fdivs aam daa and mov add sub aad popf sarl out inc es test js push sub incb scas add sbb and pop stc mov data16 and mov add mov leave addb outsl ljmp xor inc aad mov loop dec mov jns call mov jmp daa or inc add das sti cltd sahf jle add mov mov (bad) enter sbb dec push dec shll (bad) loop mov pop xor daa mov subb xchg push lds add mov dec pushf dec pop popa popl lock stos out mov stos cmp push pushf push pop test jmp sti enter mov stc test js mov jb mov fwait or lret jge mov jnp pusha or add mov dec nop add sbb pop add mov jne mov call lods and inc jp cltd lret (bad) mov xlat sbb pop andb mov xchg clc mov cmp cmp int (bad) jle mov fs add lcall mov mov rorl iret inc dec push push push sub imul pop push inc xchg add dec jmp add cli test shlb fwait sahf add sub psrlw xor sub mov mov mov jno fbstp or shl lret push loopne add dec pop js aas cmpsb adc sbb xor pop push and mov out add outsb mov xlat jge add mov ret dec je or push por mov xorl dec addr16 incl inc lret xchg jle repz fisttpl inc fsub nop mov sub lea pop test add fcom aas jp add mov pop fiaddl sti out inc mov insl addb mov stos (bad) inc add andl leave cmp xchg add mov mov xlat sbb push icebp insb xor mov lahf dec cld imul mov mov incl out lea sbb es jnp jns add lcall sub mov aas rclb push (bad) insb lahf hlt (bad) mov mov or jmp aad xor das xchg (bad) addr16 inc cmovns inc pusha jecxz sub pop idivb (bad) mov enter xchg test mov ja push push xor nop gs mov imul xchg and out pusha mov add (bad) sbb mov mov rcrb test add faddl mov and pushf pusha nop add into ljmp rorb fnsave add and push add push xchg lds jno add fsubrl dec adc and pusha aas in add pop inc xchg mov mov jb cmp lods mov push dec mov mov sub es inc mov loope jge test mov adc imul pusha jne push ds push xorl lahf jb push cmp dec add int xor inc and add mov (bad) aaa add xor (bad) mov jge cmpsb out and add movsb fidivrl and bound mov dec push add or add jg cvttps2pi mov lea (bad) jns and xchg adc repz in dec (bad) fs add cmp push dec sbb push adcl imul xor add stc mov sub outsb in movsl add and fsubr add adc mov xor push sarb sahf sbbb je andl and out add lea sti mov jmp add aad cmp or add or add mov dec add push nop popa outsb data16 sbbl sub pop add fdivr xchg loope in js and or inc mov adc and mov cwtl add jae out pop rcr mov push fisub leave test jg xlat test pop cmc add and in add inc es cmp repnz stc test add aaa sar adc xchg adc mov push daa movsl push decl mov jmp add xchg jnp lretw in add rcrl push add jo xor add sub lret xchg je add imul sub xor (bad) push ficomp fldenv mov cli rorb outsl sbb bnd or fs sub inc sub xor cmpsl orl pop rcll xchg add xorb mov sub xlat pop lea inc sahf mov test add inc clc sarl dec (bad) or inc cs jmp or xor add inc imul xor aad (bad) xchg je test jne mov and mov popl pop aaa mov sahf scas icebp inc jb add sub cwtl fbld add leave push pop add stos xor (bad) or lahf negb flds lds add add ret xchg loop fild cmp cmp data16 xchg das outsl test sub add je add mov jne add xor and jae daa insl nop add cmp sub bound mov mov jo or jns insb pop aaa jb call test popa sub addl jle pop mov out imul xchg add add cmc adc repnz clc push add (bad) jb cmp fiaddl sub mov mov ss adc inc pusha addr16 push les sahf js or rcll xorl call adcb cmpw std div stos pusha pop dec cmp cld mov jno mov cmp sub add movsl (bad) movsb mov (bad) test xchg and or inc add dec or ret outsb cltd add add adc jnp cmpsl mov add lcall jp leave jle xor out pop mov ffreep pop cmp add jne push add je inc lods insl push push jg dec push inc icebp or add mov int3 add scas aas scas add xor popl and rorl fsubrp (bad) mov inc pop dec lret add sti aas cs rcrb or xchg testl mov mov pop jbe push lea lods jle inc sbb icebp jnp sysret into aaa add sub int popa push testb fsubs xchg sbbl subl dec mov mov out inc in jp test mov inc push xor subl sub and jb mov mov xor xchg cli xor adc daa push fdivrs or pop add or add lret xchg insl add jl cmp jns push jle sub add mov rolb (bad) push pushf les clc out pop icebp aam mov out subb inc xor mov cwtl insb add cmp inc out mov sub inc xchg pop das arpl push pop dec cli (bad) mov cmp cmpsb adc (bad) add sub (bad) dec hlt push add and arpl sar loopne pusha addl xor pop add outsl stos dec add mov loope xchg hlt int3 cmp imul cltd add push movsl loopne (bad) sub les lret jl mov repnz dec in add fwait (bad) xchg pop test repz pop cmp repnz dec test pop or adc add mov ljmp adc aaa addr16 test xchg sub add movsl push xor out jge adc aad add push cmp push cmp ret pop faddl in call inc fwait bound lds mov lret inc cmpsl add dec mov add cmp xorl xchg cmp add pop xor add imul pop test adc mov sbb hlt nop pop movb sbb or add xlat pusha pop pushl cmpsb jecxz add push add xor mov (bad) aaa dec dec add and xchg inc iret jmp test add outsl call or cmpsl leave xchg lahf int3 das sbb out cltd or cs adcl in sti xor (bad) or in inc fimull add or icebp xor dec out pop sahf add add pop popf int3 cmpsl incl inc xchg jl std mov push xor rorl loope mov cmp xor cmp add in xor mov pop add icebp xor add pop xchg xchg ret and and in add xchg movsl xor inc add gs mov jne xchg inc fsts add cwtl cmp arpl cmp push int3 add mov inc test jl std iret enter js xchg (bad) ja fs outsb mov insb test xor nop add mov (bad) std add inc add add inc push adc repnz push dec mov ret dec cmp xchg mov aad mov jae pop aas jmp sbb test call push das sub jae add popa dec ja bound dec out repnz jnp push or call rolb pop popa sub ljmp inc lret cmp inc add in pusha sub xchg pop xor push sub jmp or add adc lods jle mov add es add mov jo add leave les add cmpsl fs psrad and cmp and sbb iret sub sbb mov pop add sub push add fs notl popf dec dec stos mov (bad) xor rcrb test bound insl add push gs push push ror push inc sbb mov lock insl or (bad) jne imul pop xlat mov loop inc aas cmpl push or outsb movl and xor (bad) hlt idivb sbb sub pop xchg or push scas or sbb inc or insl std enter popa sbb nop dec add adc mov pop or out loop pop jo movd sar cltd sbb mov jo cwtl inc pop jae pop test nop mov add ja xor movaps xlat mov and aad cmp lret inc movl jge (bad) bnd add test mov add pushf scas jns pusha fstps addb and dec add data16 add jecxz stos ljmp pop xchg daa jo and mov pop loop lods push pusha repz sub dec stos and dec cld ffree mov loop out out fadds cld bound imul add push jns pop stos loopne push insb daa inc add out cmpsb cmp mov add fdivs data16 dec pop fnstcw xchg dec xchg arpl bound and out jb add add cli xchg (bad) cmpsb push push lea dec sbb and insb pop stos rcr pop cmp out inc scas aad clc in rsm loopne rclb add pop push stos jae pop fmuls in sub push lret xor push js mov add clc mov fbstp add data16 (bad) push fdivl push dec pop ror or xchg or jo jmp dec sbb lock xchg pop in arpl and adc or adc jo fadds and jle imul add jns cmp and add xchg fcmovb adc inc movsl pop pop pushf cmc mov mov pusha jnp add adc leave pop and push or jp add (bad) out jmp sti mov lock hlt pushf mov xorl pop mov mov fcoml mov add arpl aaa add iret xor (bad) push jge mov add sub movb mov add inc sbb mov mov xchg sbb add sbb out test sub xor add (bad) je aam daa loope ljmp xchg fldenv or rcll push add fisubr dec fidivrl push int incb or (bad) sahf ja jmp add mov jge das call cmp sub xor sub adc jnp fmul addl mov pop (bad) jl add ret ljmp add fsubr push dec loop xor testl add mov (bad) sbb fs (bad) mov fnsave faddl pop aam shll inc mov cmpsl sbb out xor imul jbe pusha and adc stos test add sarb sub dec mov push call in mov adc jns cmc mov add out jl or in add stos pop shr cmp inc add sub lds jne adc daa add xchg in loop push add add in mov and insl add dec dec pop add cmp dec inc cmp sbb jp int3 xchg and pop xor sub xor fwait imul add cmp ret sub mov add cli std into add mov movsl mov ljmp aas in jb fcmovbe mov xorb testl jp lock (bad) faddl xor js push jle add gs lock adc mov cmc repnz mov movsl sbb mov xor push in fiaddl insl xor (bad) mov aad lahf ret shlb pop mov xchg mov insb cwtl mov xor (bad) rolb xchg jbe xchg add add aad in mov sbb mov mov cmp test or loop fxch iret stos mov inc int3 mov jge jns add push ret dec enter add inc (bad) fidivr pop cmp mov sarb mov pop scas add lods sti cmp mov add xchg sarb add out rorl dec sub (bad) mov pop movsb add sub loop loope add ss into adc mov add dec cs jmp cmp jae adc cmp add xchg push push cmc jl sbb jbe xorb jmp add das mov mov cmp xor xchg js dec jo cwtl mov or mov nop leave xchg mov add pop mov push lahf shl add arpl or or int fstp add cs (bad) add movlps add and test add inc js fcompp inc pop cmp sub mov (bad) dec divb push clc add cmp addr16 mov insl add or add push test add iret lret outsb jbe (bad) or sbb mov mov int3 (bad) add js fsts repz sub inc add bound fs scas sbb fiadd dec js xchg data16 aam imul outsl cmp mov pop push ja je push cld adc in add xor scas loop add lcall clc add in xor dec xor add aad imul jp cmp add pop cmp push mov or cmp add xchg pop push rclb fisub add (bad) ljmp repnz pusha pusha jge jns popf xchg add dec pop sub call mov inc test pusha lods stc mov cmp xor lcall and sub jl jne imul int3 add xchg cmpsb mov out add mov inc dec sub add push in jmp xchg es rolb push pop je sub or sbb pop push mov xchg sub dec push pop adc xor add pop inc add inc shrb xchg flds cwtl push push mov add mov jmp push jle cmp add push jl pop mov imul mov jecxz cltd jle and mov or mov mov nop in outsl jbe add sbb cmp jae add dec stos add push sub in push add pop aas and scas inc jns and xorb sub je enter push cmpl adc jo adc cmp cmp or (bad) sub add mov mov xchg test xor ret jno cmp outsb jns add fist jae pop int test push std add rorb sbb inc ds add pusha cmpl stc ret imul pop (bad) xor cli xor add inc stos jmp add std test sub and pop lods mov pop inc sti aas jae addl ja jbe dec cwtl mov sbb (bad) sub add dec add (bad) repz push in pop xorl add adc sarb rolb (bad) sub xor js adc and push jecxz cmpsb std dec jns int xor hlt (bad) xchg mov sub lds aaa sbb rorl push in test cmp add xchg or jp inc push adc jg jo or andb cmpb pop adc pop push jb leave (bad) out rorl pop adc loop and mov lods sub shlb jb adc mov hlt cmp mov lock repnz ret pop xor in int3 ret fs lock push jae xchg mov ds push or mov and xor inc mov add in movsl add jo cmp add insb mov cmp add mov pop stos add adc xchg push add outsl std lock test mov inc stos cmp in mov enter mov and and push fcmovne pop addl insl das inc (bad) mov push xorb add cmpsl push scas xchg mov xchg lahf adc or sbb xor inc sub sub adcb mov jbe add int3 jmp in sub add xchg inc add and dec or sahf mov enter add arpl xchg sub lcall cmc add jo imul inc jmp jge push push and dec test and repz nop das lods add and insl add ret pop mov add test xchg repnz stos (bad) cmpsb jne dec ja mov sub and in push pop andl hlt (bad) mov (bad) leave loopne (bad) mov cmp add mov add stos ja das cmpb mov js movsl mov mov pop xor fisubrl in js movl xchg cmpsb mov arpl aad jg stc inc add dec inc (bad) mov jno lret insb enter jge add sarl xchg add and pop repz sub xchg ljmp mov adc test push dec faddl rorb push mov mulb xor add inc div pop mov (bad) dec inc jle mov push add sub mul sarl sub test jne js or adc adc mov or mov cmp negl fcomps loopne aaa add and push (bad) jp and out pop add mov rorb dec imull add nop cmp mov xor aam push test jno or outsl pop sub popa aam jge rdtsc mulb lds pop or add sbb mov and sub sub aad (bad) sbb notb sbb fdivs mov push (bad) outsl subb push (bad) cmpsb add push mov adc sbb inc pop dec pop orb aam lret data16 out add inc and (bad) jg add sub (bad) sbb mov push ret jle inc jns mov stc loop mov inc jo add xor push rclb or adc sbb dec push adc add je xor cs and add movsl loopne add arpl dec add jae add push jg inc outsb add aas jnp out inc xor lods xchg add push mov gs add cs jno add add add rolb jo mov movb mov es test daa mov in div ja inc rcr mov add push xor mov mov jl inc aas pop xchg dec incl push and mov mov add mov mov sbb xor push fildll arpl scas incb mov test mov pop cmpsb sti cmp xor xchg mov in shlb stos mov fisttpll inc mov jne pop inc inc add sbb xor rcrl sbb rolb imul movsb outsl jmp inc test jne sub adc add cmp movsb xchg aad adc xchg loopne or adc stos in xor rcrl inc push jnp add fimull hlt add add cld and pop add scas (bad) and cmpsl sbb ss xlat ds out push jl loope rorl pop jnp add (bad) jo add sub daa and popa cmp xor adc sub pop lock daa cmpsl fwait arpl jg add rol ret lea stc jp lds and addr16 inc pop add ret pop or out add adc sub scas fildl cmp or cmp jl movsb (bad) adc dec mov mov movsl push adc or std sbb add mov fisttpll sub jl mov xchg cli adc imul nop outsl pop insl hlt mov add sbb xchg and inc lock leave cmp and adc subl (bad) add jle xor ret (bad) dec fimull sbb xor stos int3 cwtl sahf xchg add pushf js,pt sahf outsl add (bad) hlt push push test mov loop jno dec add adc (bad) ds and xor je xor aam mov xor test add pop inc fist rclb clc ficom (bad) xor sbb dec insl roll jge ja mov icebp mov iret xlat cmpsb adc (bad) jo add jne imul inc sbb or pop das mov xchg lods jo xlat cmp les lods sbb xor ja add pushf flds movsl xchg test xchg jno outsl int3 add inc jns pusha sbb sbb jl ds lea cwtl fild xchg push xchg inc pop inc inc pop add xor jl data16 sbb mov and dec pop outsb mov pushf jmp pop dec push push jno add loope inc or (bad) push jbe add pop in je cmp or jecxz out (bad) clc push and push dec xor pop cmpsb sti pop loop into add inc in dec mov mov int3 jne inc or pop cmp add jnp or or mov fistpll out mov add push shrl inc jg dec mov push mov loope mov ljmp push fildl jmp sub push test std push les sbb or mov decb aas (bad) push jg or lcall add dec ret mov cmp movsb mov incb mov pop les pop lret add andl mov leave cmpl cmpsb jo mov fs mov push inc subl xchg xlat (bad) rcrl loope lahf (bad) jno popf push inc adc push in add roll add mov ja inc cs adc xorb adc push test (bad) clc or sbb cmp in adc fstps add lods push add (bad) lds cmc (bad) fiadd jmp add mov xor add push (bad) pop sub mov in dec jb or fwait add sti lea test and jecxz faddl jmp push mov bound iret gs mov mov adc out xor (bad) (bad) sahf (bad) pusha arpl daa ja sub push les inc mov pop outsb orl ret cltd xchg mov bound or shrb cs roll lock adc xor add repz xchg lods aas ret jbe add push mov mov int fcompl dec movsd jbe xchg int mov pop leavew cmpsb push mov std call cmp push dec add jmp aam and out sahf push add scas ja call mov add mov and add dec jne add icebp scas inc add and pop cwtl out cmp mov push lahf add in loope or jbe bound subb popa sarl jb repnz in nop xor lods out mov add arpl mov cltd scas fnstsw mov mov xchg sbb (bad) ja fsubrl pop mov in mov loopne and pop (bad) movsl bswap add test rolb cmpsb es jnp pop and jne add leave pop in shl bound xchg (bad) shrl stc push push iret pushf and (bad) mov jl cmp cli mov or add add cmp or lret jbe add pop lods and pop pop sub push xorb sbb or fs jne add mov xor dec push or lahf imul add add add cli and test cmp add sub mov inc sbb mull cmpb out cmpsl sbb stos add jecxz hlt aaa movsl xor pushf pop lea jb lods add sub add outsb rolb mov push adc (bad) enter inc lahf inc ds fadds mov adc push add cmpb subl repz out pop or mov mov daa push pop mov xor add call pop push stos cmpb jbe insb mov mov jmp (bad) mov xchg test jg add cld test and cli or jo fwait dec add push mov jmp xor cmc test mov dec ror add cli (bad) in add fwait shrb repz inc add mov loop addl add or mov mov jbe cltd insb inc pop cmp xchg mov mov sub push testl frstpm(287 cmp scas mov ds (bad) fdivl punpckhwd pushl xor or loop arpl popa (bad) jbe add repnz push jle ja mov inc add pop sbb lock fbstp jb add roll (bad) add fs and enter (bad) aas inc fidivl dec or fsub adc jbe xor lahf xchg popl rcrb dec jo pusha sub jb mov mov jo dec sar xor adc les out jns loop and call push xchg ret push mov repz dec movsb pop jns aas dec sbb push push sub sbb test or outsl mov add jno jmp xor pop cmp pop cli add or and cld int fwait mov ja mov dec movl (bad) shlb lds scas int imul push jmp add hlt mov or jb add mov sub add dec push in mov decb add sub mov mov add jo clc inc dec fmull pop dec int3 inc add test xchg pop add push sbb out orb cmp and or sub add gs inc call ret shrl cld in mov repnz stos imul sub mov enter lods xor cmp mov push pop add pop push sarl or sbbl pop add inc add sar push or jl adc push sub notb sarb xchg stos jne add fs xchg dec in sbb rolb jo fsub push add dec stos jo mov push cwtl ret cmc ret loopne inc ss lcall inc notl push add add add fnstcw push aam insb ficomp pop clc add xor test js add leave insl cltd mov xchg idivl inc or jns pop sub jecxz mov push xchg sbb jl jmp push (bad) xchg sub cmpsb rorb inc push xchg xor jge jnp dec jo pop add pop mov mov ret add pusha push dec outsl ja in cmp cs mov mov outsl rclb jecxz dec lret add inc data16 add mov test xor pusha mov add mov hlt (bad) mov mov mov stos in xor push add add das jmp mov mov add ja hlt clc cmp mov sbb cld sub add (bad) icebp sbb xor rcl dec cli add add mov test call sub xor testl and push (bad) or push inc arpl subb dec jo flds xchg subl movsl addr16 rcll out icebp es popa jge int3 (bad) (bad) sti je dec add add pop add xchg bound aam sbb cli lcall mov cwtl push mov push add xchg jle addl mov dec loopne add mov clc or scas fwait insl mov pop add test punpckhdq add add in pusha sahf icebp outsl pop aaa inc dec nop (bad) mov out mov (bad) rcrb mov mov fwait inc addb js out pusha in pop push add jns popa xchg insb outsl push add fisttpll lds mov addr16 mov jbe mov jae (bad) ja adc xor xchg and adc mov cmp unpcklps push pop and scas jecxz adcl dec iret lea sbb gs sub (bad) xchg das pop adc test push dec sbb mov push mov and shlb mov sub push sbb xchg out adc lahf addb lret add fcmovne xchg or jno or xchg add dec inc jnp hlt cmpsb adc (bad) add jg add aad cmp push loope lods pop sub fcom (bad) bound dec mov xchg mov js pusha xchg sbb mov dec lahf pusha arpl lea aas add in cmp push rcrl jg dec add je fs pop in xchg cmp cmpsl xlat mov imul loop or fldt hlt inc sar call (bad) ljmp jg inc (bad) add or leave add inc ljmp xor (bad) aam or subb add jno or int3 cmp insl outsb sbb repz mov adc ljmp push add dec push push xor mov (bad) icebp int3 aaa cmpb mov pop dec pushf int add out add ljmp sub pusha inc int les jnp inc inc sub xchg aad xchg fwait loope stos mov jge mov add adc roll add pop or lock add les cmp xor xchg add push add add into or jo je jle add sbbb xor fnstenv inc jae clc add pop mov cmpsb mov les push jge lods loop lret add xchg rorb movntq xchg pop and pusha fwait ret inc jg cmp add andb jg and add cltd imul test cmpsb pop mov aas adc mov or fcomps mov push js add jmp fnstcw mov pop adcb cli mov mov cs and mov add out mov ja xor cs jbe cmovs sbbl push or roll mov ss aam std stos mov pop test add add iret out jge and cmp add sbb push add xor test pop cmpl imul mov adc pop fbld and jae and fldl cmp cli rcrb push add mov sub ret lods mov xor jb fdivrs adc jmp inc jl xor lods es add xor dec jno add loopne (bad) add push stos mov or test adc add mov in add pop std data16 ljmp addr16 shrl sub and repnz fdivrs hlt sbb add jno xchg rcrb shrl sub add je (bad) loop out jge sub insb or add fst stos cmpsb push jno,pt xchg jnp cmp leave and mov adc aas xchg sub loope scas inc sub lods lods cmp xchg push xorl xchg fwait inc jnp jl fdivl arpl incl es jb cld push lea call jnp sub inc xchg mov or test icebp popf and fdivrl ret in subl arpl ljmp js add stos imul pop mov sub cmp lahf pop popf cli add lds pop mov cs js add fisubrl lret add lret adc jl sbbl (bad) scas mov add fsubp das dec cmpsl mov outsb add dec xchg call add (bad) or pop pop add lret cmp stos push inc (bad) push or jns xorl xchg sub sbb add cmpsb dec pop or sbb cld cwtl lcall adc lds push sub ds jecxz sahf mov popf data16 pop pop cmpsl mov fldl out adc (bad) fwait pusha ljmp sahf sbb mov cmp and inc mov mov out xor icebp lcall fstpt xchg negl push (bad) (bad) sbb jbe pusha mov push add bound (bad) mov sbb mov adc outsb stos jne inc inc sbb sti movsl cmp addr16 pop push xor (bad) mov dec mov jno inc lcall add rcll adc lds xchg loope sarb jle sbb mov fsubr aas jne push int3 loop ret shrb xchg xor (bad) jge aad loope lods mov in arpl inc cmp (bad) loop mov xorl iret mov add test add jb mov add aas add or push or or stos add repz int3 faddl sahf jmp shrl add push mov xor jmp inc push (bad) fwait (bad) push push xor push ret testb sbb cmpsb in sbb add int3 xchg cmpsl sbbb stc xchg repz popa in loop push fisttpl cmpsl add lds adc push mov (bad) add jp in fnop (bad) loopne (bad) push or (bad) mov push cmp inc aam fadd insb sub add movsb fxch pop dec ja jle add inc addl push mov add and lock and scas or add iret mov sahf mov cmp xlat adc xor mov jl jb ja (bad) dec ds mov push sub sti mov add cmp jnp (bad) add jo out add ljmp jae rclb inc pushf leave mov jmp cmp pop add xchg mul (bad) je (bad) and test xchg lds inc nop insl mov sahf add je xchg aaa icebp andb add fwait dec bound xchg jg add arpl mov adc xchg jo add inc ds cmp jb add imul sub bound daa fisubl ja xchg xchg lds lret dec xor fmuls adc inc xchg pop roll mov mov arpl jg addb inc add stos sub jl lsl xchg adc mov push cmc or in add xor xor ss add lret add and push aaa aad inc mov add mov mov mov mov lahf add add xor shlb insb seta and xlat add pop sub cli out pusha (bad) cmp pusha and lahf push insb sbb pop enter bound cli loopne cs or pop xchg push cmp add cltd fcoml add mov mov inc cmpsl outsb stc rol add das or cmpl movsl cmp mov int3 mov add dec lea push fidivr xor and sbb enter jmp ret push decl in xor add mov pop subl add ret je add repnz out idivb mov lahf sbb mov andl loopne add mull cltd js das sub and loopne jecxz lcall lea aad cmpsb add or sbb pusha imul leave rol add add jne add std hlt data16 fadd mov mov inc xor xchg shll cltd cmp add mov sbb cwtl push xor sbb sub pusha repz jae mov and sbb xor dec cmpb sahf cmp inc dec add xchg sub or ss or push mov push sub sub push out or xor sbb addr16 inc push data16 mov dec iret ret sbb dec lret in dec sbbl lahf cmp (bad) test inc in and mov jb sti adc arpl sbb out sbb add ljmp add add pushf pop stc and aaa fwait aas mov inc incb xor dec out xchg jl repnz es cmp dec mov adc les dec add pop push cmp scas (bad) and push test push ret pop andl add push gs mov mov push outsl xor aad jnp loop adcl ret xlat pusha and cmpsb or jecxz and add orb mov fs pop sbb in dec rcrb add std xchg sbb pop jb pop test lock or sbb and outsl data16 dec dec ss push sbb add push and movsb (bad) push dec cli orl and pop cmp movl and dec out sbb les roll mov popa cmp decb xchg (bad) xchg out or outsl mov mov inc ret and jmp mov (bad) mov test mov fs and cmp pop (bad) popf in gs cs test dec jle xchg inc test add jnp pop mov int3 (bad) vdivps add lcall inc mov lahf push dec fdivr jb pop cld pusha mov jno mov lret adc and xchg cmp dec sbb add add push mov cmp add mov ret and ja cli int mov sahf or cmp cmp add pop aam add and repz add add je ds adc movsb fisttpll cmpl pop cmc ret test rcr sbb jl mov inc addb pop ljmp add lcall subl or repnz xchg out fdivl pop xchg pop cmpl sldt xchg test mull pop adc inc mov clc xrelease add test pop pop inc mov add inc sub subl lcall lock stc adc adc stos dec push aam jno inc test aaa shr lods xchg add xor mov or pop mov push (bad) (bad) cmp aam iret add push xor andb loop add lea call pop inc inc dec (bad) xchg rorl jnp push jmp mov movb sbb cmp movsb or ret and loopne das dec jb (bad) ss cmp hlt mov jle je fwait add pop ja sbb xchg push icebp data16 add sub xor lods stc and movsl js mov add jnp sub mov dec int3 imul inc cmp in das lahf xchg fs leave (bad) push lock repnz add das mov pop lea xchg fwait adc fstpl addl sbb (bad) addr16 jmp popf add mov daa add or inc inc push push sub push lods jno pop cli jae dec add out nop fistpll pop add mov sbb cmp je add xlat test jecxz test pushf sub add js sti movsb mov dec repz hlt push jnp jno add in repnz inc and jae adc jo xor mov adc pusha stos pop mov jmp dec xchg push insl mov add std pop aas add ret push imul and cmp inc or add dec loopne popa bnd add jecxz xchg outsb leave cltd test cmp or and push out (bad) mov sarb imul dec push inc add add add clc fdivl cmp cmp add andl add and and jmp and rep lahf xor xchg aam insb ds insb stc es negl rcr fsubl dec add repz sub arpl out pushf out lea xor stos add cld push loopne lret xchg aas je nop mov jecxz add cmpsl cs cmp mov or and (bad) loopne ret outsl mov and sysexit arpl inc out mov sbb ja add adc jmp or push mov cwtl add sbb cld or jl (bad) jl mov (bad) imul add dec push push test icebp cmpsb fild add test pusha mov sahf cltd shll popf or jbe xchg sbb jp push insb stc add mov mov rorl and and cltd add and add mov pusha cmp xchg in dec and aam mov xchg mov test imul sub int3 cli (bad) mov pop enter add fildll add pushf push outsb cmp aas add data16 dec iret cmp add (bad) jnp inc test pop insb roll jno mov popa addl xlat fsubl out ja mov jp punpcklwd lea inc daa or mulb bound gs inc push cmpsb dec outsl call rcrl out or or popl test push sbb inc inc out js leave inc ljmp mov dec add and and and fwait xchg adc mov add loopne xor or repz fild push scas jmp in jecxz pushf popl push sub xor scas adc sub (bad) lods push add gs mov movsb ja ret mov test repnz sub sbb inc movsl mov push gs jp add add and pusha fisubl mov jbe jge jo in rcrl and inc inc jg dec outsb sbbl mov sbb xor add jge dec cmpsl pop xor push or inc fistp fildl js out push decl (bad) mov add (bad) call dec add jns icebp fsubl add pop loopne xor fmul sar lds add pop inc test cmp pop addr16 mov fstp dec add fld push ja ror add mov and pop lcall es pushf or push add push sbb jp faddl lret pop ret jo push add pcmpgtb xchg push sub and (bad) mov sub mov push cmpsb pop push cmp inc daa test test inc mov sahf add andl inc fnop push cld mov out int mov add add das jg pop pusha jno divl cmp add and push andl or test cwtl fbstp daa outsl add jg clc pop addl cmp add push outsl add add lret push add lds daa in push sti jae or cmpl cltd dec add in mov sahf xorl pusha ficomp pop fs push add inc bndstx js add jle pop sub popa xchg and sbb mov inc fucomip sbb rcl ret sti jb jno fisub mov xorb xchg nop out sbb out push adc mov mov cltd sub mov jmp call mov leave fcmovnb data16 ja aam push push cmp (bad) pusha lcall js (bad) jl (bad) mov stc gs push and add stos jecxz addb xor sbb sti outsl repz jo incb adc sbb push pop repnz adcl test in mov cmp push addb pop push adc inc adc aaa inc xchg xor cmp mov add fimull sub out scas sub adc add or ss mov bound add loope mov (bad) add inc lds movsb outsl fidivl pop dec xchg jbe mov int sbb jecxz data16 int3 push ja das pop inc outsb punpckhbw adc inc add (bad) push xchg rol sub movsl xchg ret test ljmp jns pop icebp sub push in xorl rcr jg and sti aas ret add loope xchg test leave add hlt mov sub lds push sti stos test adc push inc imul in xlat sub push add adc jb cld add pop (bad) stc jo ret add addl addb cli in and push add imul push nop mov pop movsl sahf mov push sbbl dec fstps setg add xchg cmp sahf xor lds arpl inc dec dec inc sbb call dec inc dec mov jb add ss adc cmp jge add mov out add data16 mov loopne,pt movsb movsl sbb add xor outsl inc add add outsb out sub dec xor mov jp inc push setle cld imulb lahf faddl les sbb inc outsb (bad) (bad) mov test test adc out jle int rolb arpl add sub movsl adc cmpsl push scas cltd inc (bad) loope mov psubusw pop ret pusha cmpsl and out subb mov outsb adc and jne xor mulb in unpcklps les lods mov jno subl push push jo sub cwtl gs dec ret pop jl mov mov (bad) add dec push add mov mov out in (bad) out repz fwait or les scas dec jge pop push js pop aam inc rcr ret test lcall sbb xchg mov inc xchg lods je scas add and leave add jno int3 sub inc pop or std add testl add cmp out cli clc add mov fstpl cmpsb sbb movsb icebp sub add mov xor or outsl jbe decb add mov xchg push iret cwtl add cld mov rolb add in cmp cmpsb lods inc jo scas add sub ret add loope mov inc mov jae add cmpsb mov add insb sti jecxz sub push mov xorl inc adc dec add mov xor call sahf mov mov cli adcl nop mov ss fwait repnz push mov fisttpll fs xor mov cltd push int add lahf enter cld cmpsl or and divb add fldenv xor xor pusha xchg adc sar dec (bad) cmp mov dec add xchg inc add test pushf cmp add js in xchg pop push and dec adcb cltd cmp pop inc pusha (bad) inc mov sbb add xlat (bad) mov sub cmpsb iret addb mov or jg aam pusha jl add notb add jmp fsts (bad) add aam loop push sub jnp lahf inc and sahf (bad) aad psraw std jne xor clc movsb mov xor adc sub pop sbb (bad) in fisttpl loopne test fs subl pushf add or jmp inc mov add push test jbe push dec mov jb inc mov xchg push cwtl rcrl push lea jo cmp cs jl jb pop fnsave add add testb fdivrp push mov es (bad) jmp mov lods lret jns mov push roll iret pop test add mov (bad) shr push or idivb adc pop jae (bad) (bad) je add push orb sub loope inc (bad) int3 sarb add add js icebp out or outsb add out aaa rolb dec jp js mov aas jae jl mov jp sahf rolb mov les inc jmp pop xchg add mov addr16 add sbb inc mov cmp jo lods cmp call fisttp pop aas mov pusha hlt pop gs or shrl and mov movsb mov rclb mov mov adc int out adc pop fiaddl sub icebp sub dec repz push add jne loop xchg add popl pop mov inc sub das decb faddl leave jbe jnp (bad) mov mov sbb cmp mov jge addr16 fmuls or sbb inc fwait sub cwtl int add imul jge add xorl jl aaa inc and outsl push sub lods or dec jmp ret cmp js shr add incl add xchg or xchg push jne push outsb add or xchg rolb xor adc inc lret enter dec repnz adc inc fsubp mov push lock repz push xor jns insb scas add aad stos loopne sahf jbe mulb or aas xchg sub mov sbb push fwait sbb mov aam jecxz (bad) mov imul sbb and aas aaa add jmp jns or add imul inc adc sub push adc nop outsl jg inc dec mov (bad) fadd dec sbb sbb incl addr16 sbb lds imul lret pop insl add (bad) cmp bound jnp xor mov insl add out jge and out in push aaa dec jmp adc movsb or dec add push push scas xchg add cmp pushf int inc dec jnp repnz inc sar sbb and mov add lea mov addr16 (bad) rorb (bad) xor (bad) jno and sahf add pop push neg mov outsl mov cmp ret mov mov inc mov lret ret add insb fidivrl orb std dec rcr sbb cmpl fist cmp or sbb cmp jmp cltd pop add xchg inc icebp jecxz sub orb pop pop add jge sbb and inc (bad) jo int3 not fdivr jmp dec sub cmp mov add and lret ror push sbb pandn rolb cmp ljmp data16 adc xchg decl (bad) arpl xchg dec (bad) push add outsb (bad) in add adc fxch sahf popa cltd add dec add mov cmc scas add push dec jbe std cli or repz jno ljmp cmp (bad) push dec add mov or fsubrp clc inc jle aas inc jg sahf cmp add add adc lds mov outsb lret sbb ss cld push cltd addl fistpll fxam jl stos inc adc loopne mov mov add imul pop incl add ds out inc sbb push fcoms push sbb cmp xchg jmp or sub popl push cmp test cmp cmpsb add ficoml add ret repz hlt lock imul add faddl call inc xlat cmpsl dec mov mov insb jp and jbe,pn push jno std push mov dec mov mov xor out xchg or pop fmul rcr sbb sub fs xchg and cmp cmc jb decb adcb xchg xchg and test inc lret aam subl out jno es and xlat pushf sbb popfw mov jmp add cmpsb dec je push xor add shlb mov sar adc movsb cli sub add adc dec mov cmpb adc add call out pop dec aam mov fsts mov push test adc sbbl dec add mov clc sub (bad) pop push test pop adc pop popa aam mov inc lods mov fist push inc stos (bad) sbb xor inc cmp jno aam ret add xor push jl out mov test sbb mov fidiv iret xor and cmp mov mov ret xchg imul jo sahf xlat in popf or sbb sub cmp movsb adc (bad) add imul pop pop ljmp and movsb lods cld mov push in or lret je addb andb cmpl rclb pushf jnp jge lea cmp testl xor push stc arpl movsl xchg ret or jmp mov adc hlt ret imul fs and int cmp push push xor out incb inc add push mov dec sub xor inc inc xor add js sbb add into loop (bad) ljmp decl mov xchg rcl jle xchg inc paddsb add xor repnz inc in lock xchg jns dec sbb sbb xchg or pop scas rolb jb xchg push xchg mov push aam roll jne loope sbb xor subl pusha lods sub pop pop fcoms and add cmp sbb xchg sub nop adc arpl adc or mov cmp dec add push dec loope mov or dec cwtl add testl xchg jecxz out roll repnz movsl pop cli int xor (bad) xor pop or xchg mov bswap add imul ljmp xor stos push mov rolb pop cmc jp cli push cltd sldt mov inc adcl jl xchg insl add or mov inc inc imul xlat inc mov push sbb add adc jl dec adc sub fldenv or cmp out int3 add adc sar outsb jmp lret dec xor add bound fnstsw and dec dec push xchg xor add cli dec xchg adc add stos jno cmc xchg faddl sahf mov push and cmp sub cmp cmc mov repz iret jg lock movsb add dec loopne mov mov xchg lret pop add insb sbb xorl xchg sub xor push pop or add push ja test or aad (bad) push add outsl add adc xchg inc pushf inc fsts cmp repnz xchg imul dec jo movsl add shll insb rcll mov lret sub add mov cli mov (bad) mov xorb lds mov outsl add lahf mov xchg loopne imul (bad) mov repnz and mov in (bad) cmp stos sub mov js adc fcmovne mov xor or (bad) xchg negl mulb mov adcl repz pushf xchg xorb fisubrl ja test icebp sbb adc add or gs add inc addr16 sbb mulb xchg (bad) fmul xchg add aad jg add incb add shrb pop sahf and pop or or movsb mov mov add sbb movsl mov add pop cmp add cmp mov dec mov jge push and add xchg fcmovnb fild repnz sbb popa pop dec jo out es pop add or int sarb mov into pop inc lock mov scas insl push pop leave add insb inc push sub pop sub std mov xchg cltd pop fdivs mov les mov push mov add movsl ds mov or add subl adc push mov inc dec and out mov push xlat mov xchg sub pop es cmpsl adc repz repnz into jno push ret mov mov xchg out add movsl roll fisttp xor cmpsl divl not dec mov mov sub mov adc push ret add pop inc (bad) jb enter add jae in inc call and jo or xorl dec push dec loop pop dec out or and fldenv sbb shrb add fcmovnu or flds dec xor sub or xlat (bad) scas mov sti div js add push bound fwait icebp (bad) hlt push dec mov in iret add push mov add gs jmp mov jb xchg and add add xor cmp jne cmp ds xor adc add xor fdivrl inc mov stos lahf (bad) push or jb lock mov repz pop neg popa dec cmp sbb nop jmp mov fbstp pop mov loopne repz test out jns mov and dec lea xchg ds rcrb inc popa cmp lret into jb add xchg (bad) and add inc jnp mov out push nop es mov cltd jl push inc mov xchg push inc test jg (bad) fild ja jo or and push pushf loop xor nop cs xchg in adc neg add adc (bad) ret fistpl add pushf add bound (bad) xor xor mov lcall push mov add mov nop clc pop icebp btc cmp movb ljmp pop (bad) ja add js adc inc push jno xchg test inc jl xor scas pop push shlb sti or add loopne sbb lock mov rcrb add mov jno test push push mov sub or push leave add cwtl and cli addb or out call mov mov stos fiadd cltd ljmp add in popf xor test fidiv inc xchg test aad pop adc rcll aaa add mov mov push in cltd notb cmp add leave in sbb jo cwtl mov es mov mov testb clc lcall jns dec roll xchg in test add int popf jmp inc (bad) shll rcrl add cwtl inc jl fldcw add jnp mov fdivs movsl lret jne rolb xor subl dec mov sbb add cmp add sbb adc imul es leave pop adc sbb adc lock mov (bad) jo jmp add inc mov push mov xchg pushf cmp adc xchg inc jne add pop sbb stos dec dec icebp mov test pop push or add pop pop ret cli (bad) std xchg stc inc cltd rorl jns add or xchg cmpb cmpsl call fiadd fnsave jb add push (bad) jo mov add out cmpsb push lock add push fldl addl (bad) lahf adc add dec fs cltd jo dec add push jmp ret xor mov bnd stos outsl callw lea mov push xchg sarl pop add stos out sbb dec sub cmpsb cmp rol je add jp faddl sbb das mov mov cli fnsave movsl dec jg popl jo imul inc cmpsb add jp and adc xlat stos push push add inc add sahf call sbb std sub inc rcrl xchg mov out cmpsb dec and jl mov int3 xchg pusha (bad) loopne xchg movnti icebp dec dec mov or lcall mov or jo in mov lahf add pusha jbe pop add push or push xchg add or cmpl imull add es and mov sub loop lea add mov inc mov scas sub mov add jno push and ret cmp add in jns xchg xchg loop shl add popa incb mov adc xorl jno mov daa mov jg das inc xchg sbb inc add imul (bad) ret push sbb xchg pushf xor mov cltd addr16 sbb rcrl aad add add add invd (bad) lahf lahf rcrl div jb add fidiv sub clc add add pop and pop outsb adc add hlt push jne sbb add pop and subl aaa std gs or inc add outsb in add push repnz cmc lea shll add xor jmp add cmc xlat lds sahf mov push lods aaa xor jp (bad) lds stos add add pop lock iret popl cmc rcrb add mov sbb lds sahf dec ret add repz add pop loope addl xorb cmpsb pop dec insb push outsb je add ljmp jmp cmp ds lock add adc add lock or out add sbbb adc xor mov add pop stos inc xor cmp imul loopne jecxz jb addl sti push add inc pop or cmpsb add scas xor or xlat popf adc dec xor jno fldenv or and add xor cmpsb xchg scas pop sub dec xor mov in cmp add adc call jecxz add daa xchg arpl adc mov mov data16 mov mov in fiaddl in jl mov mov jb mov sbb and push arpl cmp push push jecxz cmp dec mov push shll orl js gs add and add int3 adc stc push cmp add js fstpl or mov aad add xchg cwtl mov mov ss or add std push or adc lahf cmp sbb xchg xchg cmp jl lods (bad) jg test mov mov push mov xor or call sub aam jns fldcw pop inc cmp lret mov jle add mov insl pusha add int3 loopne fs push add daa mov sub call jg or das movsb aad add cmpsb jno scas jge push xor bound push pushf jl add (bad) std je mov pop mov divl dec stc add adc sub pop push or rolb int xchg mov sub push dec add pop test inc in imul and push imul and in enter jae mov popa or in add xchg das cltd mov sbb pop call gs dec dec enter icebp add add mov inc (bad) std fildll jl jmp in inc and jmp jbe aam enter pop popl in add adc scas add scas push iret jle mov push repz or lret fisubrl xchg and push add jae sbb jno pop imul std pushf xor add (bad) lret mov cltd or add stos jg or or test sub inc icebp pop int and add pop xchg jne add jo jnp cmp push cmpsb stos pop mov inc mov (bad) cmp (bad) add repnz sar add xor xchg (bad) dec add adc pop push rol xor mov add cmp xchg sub (bad) add mov adc mov adc addr16 pop jg mov jb imul test int3 sbb out add jnp push daa mov imul mov add add jb pop das push mov add dec xchg test inc mov add decl mov push dec orb add outsl adc test add mov mov adc xchg mov mov cld mov mov fdivrs hlt pop add dec push lret pop add add pop gs sbbb inc sbb adc push int3 jl std push mov xchg int aad sub subb push push or out adc ds push pusha inc mov add xchg dec add movsl xchg ss adc push mov mov push pop test mov addr16 push push jno add fdivrl inc add pushf movsl add cmpl and sub roll add ss out pop cmp cltd cmp repz pop (bad) icebp push cmp sbb xlat jl mov and mov rclb and out xor (bad) add sub adc add stos negb lret add iret xor pop mov out xchg sub add and cmpb call inc jle les shrl and (bad) push ljmp sub daa jge push jp push inc add out nop scas (bad) xor mov inc loope sbb daa add lea icebp (bad) or in (bad) inc bnd add xchg aam add lods xchg add test flds pop out popa dec cmc out loop add xchg mov push pusha cmp push in ret inc add sbb lock xchg mov add mov and or push gs scas pusha pop int3 aas jnp in push cmpsl cmp xorb fnop repz xor mov cmpsb add and and add fsts test mov xor mov mov (bad) mov loope jmp sub out xor or add rcl add mov adc cmc dec sbbb in fiadd test add adc lea (bad) mov push push or test xor test sub jo cld mov dec cmpsb add xor in sbb fst outsb scas add jecxz push dec sub push data16 je jl add pop mov and inc mov jl jo add test mov mov or lcall out out pushf add and addl lds mov mov arpl mov outsl jo jl scas mov (bad) repnz jp mov sbb pop inc jo out and xchg ljmp pop adcb sbb std adc cs fdivrs insb or inc andb mul push push pop pop xchg cli fcoml and inc clc mov xchg or push push add dec adc scas cltd push push icebp cwtl inc in xor sahf movsb add mov and push pop loop mov ret mov mov js jbe xchg out movb inc mov cwtl sarl pop call mov bound mov loopne jge pusha pushf out inc scas add push add and mov or inc in shrl sbb rclb pop mov mov cmc out mov inc rolb sarl mov (bad) pop sbb fbld mov divb add sbb roll mov and subl out jnp sub mov aaa pushf mov inc mov stos xchg sbb xchg and pop mov movsb sub add stos xor adc rorl fimul lds cld imul jnp xlat push pop inc inc std (bad) xor test jno add mov (bad) fisttpll push xor inc sbb add jp push into std adcb pop jp sbb das xor sbbb lods lret pop cltd cs add mov cmp add (bad) icebp insb cmp jecxz pop inc neg xor in sbb sbb or dec loop sbbl sahf adc cmpsl cli repz pop popa add fldenv add adc xor jp sti or sahf (bad) leave xchg push pop adcl or orl cli imull pop mov data16 pop lock or push inc push nop add mov cmc mov jnp add lods mov mov or add outsb or add fwait lcall jbe jp dec add insl push test mov std xor cltd ss mov fsubrs ficom push add jp mov xchg or mov add jecxz mov bnd add cld jge aas sbbl inc jno out ljmp cmp jnp pop sub sub lds add or xchg push add (bad) scas fmulp or fildl adc dec in test mov lcall movsl mov cmp lahf mov (bad) fs fldl and in cld cmpsl push mov ret daa andl test js add sbb int rcll pop add test xor xchg invd hlt js or notl dec and add mov jnp add cmpsl mov mov pop sti les xchg ret inc push popa cld adc jne loope sbb mov cmp mov orl cld or adc and dec fs arpl pop sbb jns add sti out out mov and gs aas faddl xchg cwtl pop insl loopne sbb shrl pop sti data16 push shr mov pop ds fldt add in rcl add inc lods outsl jmp popf es ret adc dec add lahf in push loope enter push mov addl pushf add in sub out test (bad) adc add dec loope (bad) jo jns ds test js popa rcrb mov add mov (bad) jb xchg gs adc into jns loop pushf enter add insl jmp push add incl mov xchg adcl std mov fnstcw (bad) or jle mov ss adc or jo pop add aad mov add outsl or dec sub add int3 pop and or mov out movsb lahf cli mov or lret push test jo xchg push enter pop in adc pop push xor mov xor data16 push xor cmp outsb hlt imul sub mov inc in fist fbld jb out jge xchg or and arpl add dec (bad) mov mov jge ja sub inc mov into cmp in dec mov (bad) xor loopne test mov pop daa sahf jecxz ficoml cmp add and fstp add dec (bad) add xorb cmpsl (bad) lahf lds push mov sbb out mov loopne add fstpt incb mov push mov mov test in nop incl repz ljmp insl adc jmp or cmc push mov inc jle lret es daa je add int3 jb jae add adc pop xchg pushf jo mov sbb sti inc pop (bad) sub mov ljmp inc push jo shrb dec sbb shrb lret inc mov adc mov inc lods pushf adc je mov sar sti jno inc fs add xchg adc jne cmp push dec js lahf scas add dec out add adcl dec stc and mov sbb sub jb or mov push (bad) add xor mov xorl sub sub dec mov and mov pop jecxz pop inc cwtl loopne lret aad xor xor add xchg lods sub jmp nop rorl fnstsw mov jge mov mov mov stos sub xchg inc sub stos inc pop pop mov xchg sbb add mov and or add add inc cmpsb pusha push add xchg ficompl sbb add (bad) mov adcl dec loope push add fdivs add out out pushf add mov mov jg cmpl ds dec and scas sub add sbb push addb gs add add mov test push add pop xchg ja rclb mov mov stos push in add fwait cmpsb dec subl pushf aam adc add (bad) add arpl addr16 and sbb dec jb gs add push mov add fs (bad) xchg xor mov push sarb cmc ja (bad) pop mov insl (bad) testl sarb push imul inc inc cmp jp dec adc hlt dec cmpsb add not jno mov ret lret dec lock scas add rclb ljmp or enter dec mov lret add outsb mov add aaa mov sub (bad) and into cli mov addr16 mov js mov je not cs jbe fldl adc call sub sahf jns xchg out enter adc cwtl repz jp dec add cmp rcrb mov notl inc aam enter mov ja mov add rolb fistpl dec lcall incl (bad) and mov shll push pop cmp add and adc sahf fs cmp jmp pusha xlat inc jb cpuid cmc fild gs sub xor loop add test inc add std nop dec adc inc test rcrb inc bound adc xchg in add jecxz popf add ficom add or inc or gs add lods jno xadd stc sub dec addb sbb aad add out clc sbb insb mov add repnz push icebp push or jp add jle pop fsub jmp (bad) xor in dec add es adcb pop adc lret addl (bad) or addl adc add push repz jl adcl inc or add aad aas xchg ror push add mov iret pop add dec inc mov mov (bad) and aas lcall push add xor in dec add xchg xchg cmp les pop inc sbb lea xor xchg and out or subb adc out xor orb dec xor add mov and test movsl add addr16 mov sub stos xor movb fucomip adc mov hlt mov xchg mov ljmp sti int3 in loopne inc mov push pushf fldl jge shr ret rolb ficomp mov add adc dec (bad) pop add test aad das sahf add lahf mov rorb adc repz repnz aas lret ds inc jl aaa mov or and mov xor xor aas add pop pop adc test push in pushf xlat dec add inc xor or adc cs imul push push scas andl insb insl aas and mov push jp jbe das nop and clc out mov jmp pop cmp cmp jle jecxz lods add ds push outsl jne push dec jo pop sbbb movsl push add mov lea or lret mov cmp and in mov push aas in cmp test sbb sbb cmp lahf dec maskmovq divl add loopne aas popf int3 nop inc outsl les pop push inc test das xor test sub mov jo flds sti pusha and sbb adc movb cmc jno xchg and jmp jge stc jo dec mov ds xor and push add daa dec flds xor mov out push (bad) jbe add icebp inc cmp jno roll js aad pop push sar xchg aam add mov hlt sbb inc jnp and cmpsl aaa sbb inc mov les dec inc and test push popa imul sub xchg std cmpl popf jne and push mov cmpsb jmp cld inc pop test add lods les add pushf out xchg push adc cmp dec sti add sbb cli adc jae test add into (bad) sbb xorl fs cmp nop push fsts add jae fs sbb stc add out xchg (bad) pop add (bad) int3 fcos and mov xchg cmp mov jp mov mov pop push dec (bad) pop lea scas cmp ja repnz mov mov enter mov mov mov adc movsb add fs fldl shrb mov rclb push jge jle (bad) fistp add jmp add inc cli add iret cmp xor or dec push loope add pop or lahf push cmp add cmp pop xchg mov inc cwtl mov cwtd pushf pop mov cmpsb adc ret jmp pop add mov pop add push cmp shr fadds push mov roll fnstcw pushf adc add jl xlat add fnstenv popl cmp leave sahf inc out je or mov sbb stos addr16 mov xchg inc inc popa das aad sbb cmp pop sub xor add push test inc dec add and push ja jge cmp in mov xorb mov xchg inc xor daa sub (bad) out or jb add movsl jl sub push push dec add iret cli orb lret sbb xor loope jbe add ss out test mov inc xorl inc cmp insb push in out inc movsl addr16 xor int sahf sahf addb dec pop push mov jns lods inc std xor ss (bad) mov push pushf outsb addl inc aas into add inc xlat ficoml jo and add xchg test xchg xchg int3 mov lret ret add les xchg xchg das add loopne roll scas outsb cmp pushf add es movb (bad) jl mov sbb sti sbb jb (bad) in pop add or cs jno add sbb insl pusha lods xor cmc cmp rolb nop mov xchg add mov fiaddl cwtl out push add loope xlat sub jns jle xchg test sub pusha scas mov push inc jg pop xchg add out sbb jo (bad) cld mov push test lret cmp cmc shrl mov add testb ja push push pop jge add (bad) mov and push into jns mov and (bad) or mov dec and xchg dec ljmp addl insl add fidiv ret or mov add popf ret int3 xchg inc jnp and push nop insb lds xchg jmp mov and mov cs je mov sub pop jbe jp pop pop rcrb popa push imul ljmp push or add pushl pop add arpl xchg mov add and and loope and (bad) pop bound add sbb outsb add dec (bad) jmp fs mov (bad) xchg pop cmc pushf and mov ja push inc jecxz pop lea shl add and inc add aas dec adc jo (bad) cmpsb test es lahf cmp push insb jnp leave lea jb add stos adc add or adc inc pop add add cwtl xchg outsb loop cmp repz popa outsl mov or scas addl mov pushf pop fpatan pop add pop insb fcompl dec push sbbl or push inc inc hlt clc xchg comiss mov mov xor xchg rolb add sub or sbb xorl add stos les mov add movsl (bad) xchg das in cmpb lahf or xor mov clc inc jnp jno mov mov add in add cwtl ror ja add push movsl dec (bad) aaa xchg add push repnz ss add inc cmp and addb ret in testl or frstor fildl pop or cmp sbbb (bad) jp xchg add dec lods jmp test lret faddl subl jnp inc test in push cmp pop call loop add dec int3 cwtl (bad) ljmp pusha sahf mov lock in cmp cmc lea ljmp fwait add arpl mov (bad) dec and mov jge addb and mov add cmc and dec gs sbb xor lock std jo add xor and jl add cmp jp add mov add jecxz or push (bad) mov and dec cmp push cmc int fsubl add (bad) jno adc push add jg mov add cltd inc xor dec inc push test mov (bad) icebp test mov sbb adc adc pusha add xchg xor push aas xchg (bad) mov mov out and (bad) insl imul es push daa sbb push add cmp shr cs test fildl cmpsl test and loop jl add push imul add pop pop lds aad jne stos rorb (bad) push sbb pop (bad) test and dec jp add shrl scas bound or pop add or jne and ja insb pop adc add or push mov mov test push int3 call or add fs inc outsb das jno int pop aam lea fistpl add jmp mov popa testb push xchg aaa push inc rcll sbb sbb jns adc add arpl pop xchg nop or pop ss jno add push js (bad) rol cmp (bad) mov movsl mov xlat (bad) jne mov into lods adc add jg mull adc loope (bad) mov mov or (bad) popf mov cmp and scas pop and xchg xchg stos in out enter add mov cmp xorl out js mull jp cmp xorl jnp (bad) repnz jecxz (bad) add insb jp adc outsl stos add mov lock std loop jmp mov fsubs and add fldl add xchg mov adcb push add and adc lea add xor sbbb jbe mov xorb mov mov and negb pop adc or je test ss pop repnz lahf add jnp ret int inc stos sub pop inc dec (bad) jecxz and xchg push test lock fstl jbe aaa shrb add (bad) mov les jno xchg push cs outsl cmpb pop je popl jno xchg fdivl dec (bad) arpl mov jg adc jne add ret xchg mov adcl adc xchg js adc or mov jo adc fisub cltd jno push inc dec cmp in inc adc pop sub fadd std clc in push xor pop add add push jmp xchg dec test std jmp adcl mov sub mov and pop into call (bad) adc xor dec jp add mov imul sbb add add xor jecxz dec dec orb mov jne jo xor jl mull mov sbb xchg xchg stos addl cmpsb jg lods ds adc and or jmp lods mov arpl loop adc gs (bad) mov mov lret add add mov sahf jl popf aam xchg daa or repnz loop xor xor and out and movl leave (bad) dec test add into xchg lds dec add pop ja sbb ficom dec jns (bad) mov xchg mov test sbbl jecxz,pn jg add xchg js sub call sub mov pop lcall mov pusha or ss subb xchg (bad) iret gs or adc dec xor aaa test fwait cli add inc or mov pop push xor fmuls insb add lcall add std xor fs add and xchg dec push pop add cmp xor mov and cmp sub add push mov std ret add ss ds aam add out cmp sti pop add jo adc pop xor or aam add xchg cmp mov mov (bad) xchg dec lods orb pop sbb add ret push sbb cmpsl pusha cmp jb movsl rcl jno inc pop jo adc push jns inc ficompl or jne clc xchg inc imul mov (bad) fldenv cmp mov mov pusha and inc fwait add add push add (bad) jmp sbb incl add scas in loopne add jbe pop dec pop push cmpsb xchg orl stos ss sub mov adc jge mov in fldl lods aam and sub or mov stos ss loope test cmp repnz fildl cmp mov dec mov and adc out ss js pop adcl dec insb jo xchg add dec xchg sti imull ret adc in movsl jp cmp bound cmpsb mov mov dec inc add push dec and jp push mov into jle xchg roll pusha push fbstp call pop das or add add cwtl mov inc add cltd idiv fsubr in aad mov lret popf xchg in dec or ds jecxz enter pop sbb fldl insb sbb inc add inc add pop mov subl mov and imul jecxz ret imul inc ss testl jo mov ret inc or cmp shrb mov xchg xorl nop imul mov ja jnp outsl fwait add std (bad) loope jl add test test push xlat lds mov inc lock cmp ja mov pop add xchg sbb movsl shlb test sbb push (bad) mov (bad) fstpt jg dec dec add push (bad) stos loope sbb sbb sub add (bad) add sub out sbb sub flds in mov nop lods lods pop sbb ljmp ss mov pop movsb push mov test int3 sub sbb lret test cmp xchg and add mov pop mov xchg adc jns push cmovo bound fild popf sub pop mov add imul xor adc add movsb sti stos popf adc hlt push sbb scas jl out cli add dec mov sahf cs add cli pop mov pusha sti call xor push rorb xchg in test sub mov mov test add mov scas jmp iret pop addb adc mov xchg xor push in cmp push cmp std aaa lods outsl sbb imul out clc fnsave int dec pop (bad) idivl ficompl inc aad push icebp cs xchg add in push test (bad) cwtl and adc add jecxz mov add imull mov xchg loope pop adc add lahf les pusha mov mov adc jge aad leave inc add jnp adc ds push jae add mov out sub adc add cs or test inc xor mov ret dec mov mov sub cwtl movsl jns icebp jnp (bad) jl add adc sbb cmp push mov mov and inc mov sti popf dec dec leave cmp test and cmpsl loopne imul cld jno mov add adc jo add (bad) lods cmc inc (bad) xor add dec pop add add mov insl push add jae sub (bad) ss xor xor add pop and lcall sbb popf inc push neg (bad) sub xor adcl gs cmp (bad) scas pop std mov push push and add rclb call sti xorb fs mov add and arpl inc dec pop mov leave adcb jno jle jb ja jecxz push cmc add add lods fwait push cmp cli cmp push xchg mov (bad) rcr and cmc or add jle sub loop add popf dec pop xchg subl or jmp push scas mov xchg (bad) xchg adcb pusha adc idiv orb mov cmp push out pusha cmpsl test dec pusha mov mov in add movsl adc pop dec pop sub add mov sahf cs test and test mov popa pop sub imul sub lret xchg cld sbb or and jl add xor mov aam jno xchg popf push (bad) inc insl push in sub fcomps arpl xor lret inc sub push push sbb (bad) cmp dec mov in lcall add loop add popf je jmp sub jle repnz mov and or cmpsb frstor les push loopne sbb mov adc stc cwtl test sbb pop jno jp jbe cld push and in xchg add push mov jmp je leave add push lret push cld add fdivrs and jecxz fidivr cmp add or pop lods xor xchg (bad) sub xor outsb push add sbb cmp add lret add add inc push mov dec popf add mov dec fstpt sbb pop lods idivb and add or in cwtl xor pop push or pop xor add rorl adc xlat stos inc es movsb add xor add mov push add xchg sub test sub mov lea nop add movsb test pop xor into and jle (bad) or lds adcl adcl fs mov shll ja cmpb mov and call sub movsb stos je es jae jb lcall xchg push loope dec inc test mov cltd pop js out ja jge xorl dec jle lahf pop sbb sbb js add xchg out add lret cmpsl sub and dec and push add rcrl cld and int3 add mov inc dec orl mov arpl sbb xchg js add imul jmp add ds adc cli inc nop xor pop les sub and jno pop mov dec sbb mov test fcomip add push add pop (bad) inc inc add mov movsb add xor fmuls mov fimul push jmp leave add inc add (bad) divb sahf push icebp pop mov in imul add jecxz mov fsubs iret inc fldcw add inc dec mov arpl pushf cmpsb enter daa add rolb gs in cmp push jle divb push xlat add cmp fisubr ret push add cli stc mov add jnp xchg jo insl sahf xor add lods mov pop andb std jb xor xchg test cmp cwtl stc jp xor cmpsl sbb inc movsl lret push adc push lahf fwait std xchg fcoms cs add ror pusha ss dec idivl adc inc rolb das and cmp push daa aam pop cs add adc fldcw sub sti hlt jo insl jmp xchg add lcall sbbl jg pop clc add das in pop sbb arpl pop aas repnz test adc jnp int3 addr16 dec repnz sub cs fildll add (bad) repnz ss cmp iret stos add add pusha lret stc sbb adc pop pusha sti inc xchg lret dec (bad) sub inc int (bad) imul xchg dec scas fs mov push mov pusha dec test dec int jo mov xchg sub mov pop (bad) data16 inc push imul enter add adcl or lea out dec (bad) loopne incl pusha mov pop loop mov push adc lcall mov sahf mov leave mov into and in mov hlt add sti or xor lret lret add popf data16 cmpsb sbb mov pusha jnp incb push and repnz xor xchg popa out dec push add call aad mov mov imul inc push loope pop aas inc push or pop pushl adc stc dec add add sbb add jl je lret pop xchg inc mov jnp add addr16 push mov add and lahf jnp (bad) leave add clc cmc and daa add xchg sar inc jno add repz cltd cmp add and mov call lahf fs cmpsl stos cmpb jecxz mov cli add push push cmp add pop repnz add (bad) mov test add push mov adc pop aas addl jne jg adc add aam xor jle cmp add push add jnp add mov xor imul inc dec add pop mov add ja dec aad mov add (bad) jg (bad) xchg cwtl stos mov push mov hlt mov sbb je ljmp xor jg sbb int3 mov (bad) push out pop add mov mov data16 stos jmp pusha inc mov outsb mov dec jl mov jne lods or xchg sbb out js jmp adcl jp pop push sarb cmp xor push lcall mov inc addl mov fstps into loopne scas or insb xchg ret xor fldenv add test sbb inc jl jmp lret jo push daa dec inc andb inc jl dec cmp lods loopne jns jecxz pusha ljmp setae rcll jb pop xchg clc pop insb in das or pushf push sbb test movsb inc out mov xchg sbb pop outsl mov mov pop (bad) xor pop mov lods xor cmpl or aam lock push lahf sti loop sbb cmp dec fldt (bad) jg,pt pop xchg pop pushf jb inc test inc jl inc nop mov loopne jns jl jo dec in mov xorb out test mov cmc dec add jns outsb add push jnp add imul mov jecxz out and pop (bad) (bad) xor sbb pop imul in sub out cmovo jge (bad) inc xchg int3 into add fimull add mov sbb add add cs stos xor dec div inc adc enter test jmp xchg xorb mov xchg leave mov js add mov add cs aaa xchg sbb sub pop pusha es gs add push mov inc add stos (bad) aas cmp jb pcmpeqb add dec popl mov xchg movsl out insb fsubrl add dec fildll sbb add test xor fdivrl xchg mov dec xor cmp lcall les mov or scas push sbb add es sbb jecxz dec xorl inc xchg outsb (bad) dec inc daa pop add rcll andb mov jb cmp jo test push add mov sub adc sub inc popa ja add int3 mov in sahf test push cmc and xor cmp mov and push jno subl add push inc nop adcl jl push jno das cld call mov cli divb add jmp fbld int add cmpsb cmp xorb data16 outsb test add mov push mov cs sahf hlt jp pmaxub inc push jns ja adc test je push add pop dec dec mov add mov insb jns add les popa test add cmp sahf dec jo add or pop add sub fistp lock test inc pop add jne (bad) jmp out add jns jp cmpsl scas ljmp (bad) mov shl mov test mov xlat lcall test sub push pop aaa dec rolb shrl decl cmpsb fnsave movsl ja inc jmp fxch push xchg out push cltd mov and ret push cmc push push mov subl fwait add cwtl loopne add sbb jbe pop sub jecxz mov outsb fadds dec (bad) mov lods inc add (bad) imul add outsl (bad) aam (bad) pop adc adcl outsb jmp pusha jbe and dec fwait icebp add mov leave sbb add or xor sbb jg add xor das je in (bad) mov lods xchg mov ljmp subb push adc faddl add mov xchg sbb or mov cwtl jns icebp fs out paddb lahf pusha ficom add sub rolb add or pop add mov in addb test jmp push aaa sbb in jecxz (bad) icebp add loop (bad) inc jne ja mov mov and sti fstpl aad inc jns add sbb icebp push pop dec push add hlt test xchg je push add cmpsb test in mov add add pop mov add xor fildl orl rclb jnp repz js add scas fidivr jecxz cmp lea inc bound and fnop pushf lret sahf addr16 or or jl jge imul mov cwtl pushf and add fldt xchg dec insl cmpsl in mov inc cli adc jno test cld aas add movsl jae cmp icebp inc inc sahf xchg arpl mov dec andl dec pop fiaddl pop (bad) loope sub (bad) add enter daa lock add das xorb adc xchg popf xor mov lahf xchg xchg add add sub jmp fcom pop sub add in pushf add sahf or incl rolb out sub inc cmc xchg into add add add inc dec jg fwait jg or jge mov outsl faddl shll pop fwait add adc mov test sbbl pop jecxz mov cmp adc (bad) mov add inc (bad) daa add cmp std clc push mov adcl in pop lea shll sbb mov outsl enter adc sti dec shrb xchg imul add mov mov cmc mov scas add mov fcomps test push jp push fldl2t jo je sbbl dec popf into add xchg mov pop jmp inc cmpb inc mov sar inc jo bound shr in xor vsubss add inc aas insl lret inc arpl lock add xchg dec pop add push ret push add cmp mov and add mov or inc call pop ljmp sbb mov gs jnp out add lahf ja inc daa mov mov outsl jl shl lahf add adc gs subl add or dec add sub mov sbb test outsl push enter imul movsb add daa push (bad) (bad) test adc push pop sub insl leave jmp and addl lods add fs (bad) or mov hlt push and add imul add (bad) mov shl rcrb cmp xlat pop lcall aam adc xor out lahf loopne inc and (bad) cld mov mov adc rorb (bad) dec mov (bad) aas clc dec sbb stc mov roll or js orl mov dec xchg add stos mov loopne jae inc lods rorb or dec lea cmpsb add sti push mov repnz lret cmpsl dec pop cmp add push mov mov inc add sub cmp add inc pop push lret adc (bad) push je (bad) addr16 add xchg lea addl mov js,pn lods ds add mov fnstsw push pop xor outsb mov mov add inc shr pop int push mov daa (bad) adc cmc mov cs mov int3 mov rcrl mov mov add push jne dec mov lock push mov add jp mov stos dec sbb cmc ret mov and rclb add mov xor mov sar bound sub enter insl sbb lret loopne jae movsl add insb test inc mov jl jo jns into insb addl jmp or add mov fildll pop addr16 (bad) sbb add ja icebp pop rolb mov sbb or loop push je imul fistpll es ret xorl push orb out xor fwait mov incl (bad) cwtl ret cmp test add pop dec lahf xchg inc pop add bound mov add xchg test fadds data16 jb add push clc jbe js pop and mov sbb inc jno add pushf pusha pop xor (bad) imul inc jecxz xlat add xchg cltd cmp arpl cmpsl test subl sub in dec mov push je mov jns cmp fbstp xchg test or sbb (bad) adc pusha dec jecxz sarb scas int3 mov in pop mov sahf add into push rorb es aas add jl lds pop andb inc gs leave sub mov add mov push insl add lds andb sbb outsb sbb fisubrl inc into mov movsl pop xchg add push leave or sub jmp xchg int3 (bad) arpl mov out mov int3 sbb imul cs ljmp adc rol xchg repz sbb mov or pushf adc (bad) xor aad call lods xlat sarl adc sahf add sahf ret fild adc dec ljmp sbb aam inc add outsb hlt xchg subb add mov cltd cwtl add mov shlb push pop pusha lret mov je inc push add lahf jg fbstp mov clc (bad) leave and movsb push mov and or jae mov loope jnp add mov cmpsl xchg add xchg sub add mov add (bad) push nop push push xor add (bad) ret adc and add or xor inc jl mov dec mov sub inc mov les fld adc add pop push mov sub dec (bad) mov stc jl or sub xchg cmp push imul xor in and push xor and inc les daa shll mov insl cli jno jp lcall sbb (bad) dec add (bad) sub push data16 xchg es dec lahf xor (bad) cmpsb movsb pusha mov push add mov add cltd xchg mov popl (bad) adc orps mov shrb jl xchg pop xchg std repnz xchg xchg push fstl pushf add mov lods push loope mov push rcrl dec jb push arpl add xchg pop es cmc and cmpl inc insb add inc add inc mov dec out mov inc cltd adc inc int mov add ror (bad) aaa mov pop jne bound cli cmp (bad) fadds into aam add aas xchg add movsl daa or xor jae add push cmp inc mov push pop roll lods (bad) mov jp mov push add sbbb or data16 je xchg lock add mov sahf xor sub cld dec aaa (bad) fisubrl (bad) pop in imul dec jl dec js add subl pop push cltd lock push sub imul sahf sti pop dec add mov mov ljmp nop negb movsb adc ror pop addr16 adc nop js add add (bad) add daa sbb cs inc in add xchg xor jmp mov push cld test jl cmpsl jg aas mov add cmp adc adc xchg adc dec xchg fs int pop add mov add pop addr16 xchg add add daa inc jle jae xchg inc enter mov iret out pop (bad) mov add into cmc fsts mov xchg pop (bad) mov add stos ret xor cltd xor lcall out aas ds jge xchg and xor sbb ret fs ror jo cmp pusha fidivr imull dec mov cmc mov es and sarl sbb add xor leave sbb and das sbb gs add xchg dec adc fiadd pop mov push jmp push fldcw rolb cmp mov sub nop sbb (bad) mov mov dec test jmp inc mov sbbl add jb negb mov xchg jl cmp add or jge add pop lcall lock mov adc repz mov dec xchg add cli cmpsb add hlt sub inc rolb add jne add push mov cwtl stos repz push jnp add pop fs divb mov push ja scas xor jnp lds mov xor cmc and pusha jae int jle imul push (bad) push out pop fimull sub repz push cmp jnp push cmc mov xor mov popf mov data16 shrb jl aas icebp cmpb aam adc fild cmpsl lods test jb lcall xchg mov mov inc mov lds dec std shll and inc pop enter push cmp adc cltd fs sbb mov mov stos int3 test add shld jle cmpsl test gs mov xor fwait or cmp or dec in push pop push add mov call imul inc inc roll into dec sub mov dec std hlt xchg jl pop push es adc mov mov push insl (bad) icebp test outsl add scas cmp orl push aaa arpl not push push push add (bad) inc mov cmp adc out loopne jo inc cwtl jg insl dec add incb stc xor add adc pop jmp and cmp enter popa jge subl addl hlt mov cmpl adc or roll adc add fisub pop lods xchg test cmp stos mov sbb pop aad movsl cld push in sarl inc gs push add inc shll lahf incl push enter insb add mov test hlt dec mov popa incl mov adc add insb testl jae push push fcoms mov add jb add faddl movb xchg push inc push add lds xchg fcmovb add jo or lock mov cmp (bad) mov pusha mov outsl out or gs adc mov orb mov jle les pop add das adc mov mov push xlat loope push sbb pop pusha mov cmpsl scas roll mov enter or add frstor pop mov adc mov fsubl mov call and add enter sub add add sahf add jne sbb js les and cmpsb andb popf adc int3 add cmp and jb (bad) jg adc (bad) push sbb mov (bad) cmp in add in sbb push pop sti add mov and adc add (bad) pop xor lcall andps mov rol push pushf ja add imul and pusha push xor lea outsb in inc test aas push xchg int outsl jbe lcall xchg sti jecxz das and add movsl movsb cmp push je pop clc lret inc adc mov xchg add jecxz pop out or stc int xlat test fiadd ret icebp arpl repz not int3 psubw cltd ds fsubrp out cmc add mov hlt lds addr16 xor add add das cld adc add xchg mov iret cmp add push out outsb and sub push pop scas (bad) jnp adc add ret inc test cmp mov out test jne xorb mov outsb lea test or lahf inc inc pop lods inc adc mov mov popf cmp std xchg rcrb mov andl mov push mov sbbl movsb fwait inc jg (bad) outsb repnz or call pop mov adc jno adc shlb and cmp xchg jns lock inc mov jecxz cmp mov aas pop addb cmc jle xchg fiadd out bound andb jo cltd add je and fldl pop imul orl sbb aad scas inc fstpl xchg dec push out cmp and cs jle mov flds push xor lret ret faddl add sub mov aad pop lret nop push scas lahf sub mov jmp aas dec mov sub dec stos (bad) pusha mov jle and or stos aad sbb add adcb iret int les neg pop fs add fisubrl cmp movsb adc fmull add xchg sbb lds cmp int3 push cmp outsl or cmp add popa cld jno add xor xchg sbb out (bad) jb cmp data16 cmp inc cmp rcrb stc inc bound adcl mov js add ret sub loope add inc push xchg mov bound cmp pop nop out ficomp in test inc sub pop adc jae ret xor push xorl inc ss mov mov pushf dec int3 sbb sbb jmp sub mov fnop sub push roll ficom test pop or push jg cld pop jae (bad) mov push or ljmp out rorl adc adc test mov adc sbb add test js add adcl daa jp lret inc jb inc xchg mov testb xor fucompp xor mov jo push jle add cmp jmp aam mov mov (bad) mov sub int pop cmc into bound out leave jle and pusha xor icebp or popf xchg (bad) mov cmc cld mov mov rcr xchg fwait add jns popf mov cmp and push pop push stos subb xor ret mov jp das add cmc test push pusha inc or sbb test sbb sti jb or sbb add and add inc mov mov or xor mov mov jns iret arpl inc pop mov fildll js mov xor or ss cmp pop shrl push and pop sbb add test in dec xchg add adc mov adc sti orl sbb xchg popf aas pop fisttpl imul xor pop cmpl js push xor popf (bad) sub mov cli mov and add int repz pop xorl inc and add test jge adc ror or inc pusha (bad) mov sahf jne pushf cmp call dec jo nop add or jbe lods or xor inc aam cmp fiadd ss sbb push jecxz mov sbb movsl jne repz mov lret cmc popl jmp insl xlat inc jns repnz jae test jg add add or scas mov adc add ljmp pop loopne jp in cmp outsb mov add xchg cld ljmp mov (bad) dec add add ss inc insb (bad) sahf inc dec cmp xchg add rcl push jo lcall jecxz dec inc (bad) sbb rcrb pusha fmuls stc addl adc fmull cmp std repz sbb jp pop imul rclb and pop sub add cmp les push ret fidivr add sbb outsb andl adc and cmpb repnz add sub and fiaddl and jmp lods add dec fidivrl cmpsl nop dec pop idivb add add sub lods add xchg dec jo hlt (bad) xor push sbb add xchg loop xor xlat push ss or inc jp in sbb push ret rcl (bad) mov push cmp inc aas movsl das add push add inc (bad) or jno add sbb adc cli add addr16 jo jb add adc stc pop jo adc hlt dec das and add jp and enter push sub add xorl add add imul mov lods sub inc inc mov pop add mov jle add repz stos ljmp sbb xorl loopne cwtl stos push inc mov imul jne aaa jb add cmp stos add pop pusha in mov xor (bad) outsl xor cwtl out adc arpl inc fdiv popa xchg mov adcl je add aaa roll or add mov in add pusha mov add mov call daa imul mov dec fimul jp stos (bad) xor (bad) pushf add xchg sbb lds add lcall fidiv add (bad) and leave sub mov xchg (bad) bound cli faddl mov fildll in ret and mov sub xchg adc inc pushf idivl add xor pop xchg pop jb cmp (bad) imul mov stos mov xlat jp add lret cld lea stc rolb pusha test mov xchg xchg adc push or add insb mov sbb mov cmp cs cld je stc add les daa testl sbb fnsave out add sbb cmc outsl sub mov stc pusha dec sbb cli adc jmp mov rep adc jns dec jp fcomi mov std aaa adc jle cmp pop jg dec push inc sarl adc lahf or pop add sub pop pop std pop jae pop push pusha jne inc stos rorl inc and jae fbld in push rorl xor enter call stc cmpsb push inc add jle sbb out (bad) out jp inc fldl sbb fildll scas add (bad) jmp fstps xchg add mov andl xlat mov popf add stc (bad) cmpsb roll push fldcw iret dec test out shlb ret xor icebp jge pop add add or xchg jne movl ja inc add dec adc ja add pop mov pop add cltd loop or enter es jne mov into mov cmp mov hlt jge push or add add dec jo push insl add jle push mov push mov add (bad) mov xlat mov shll xchg es push clc and subl leave inc add inc pusha add sahf daa cmc cmp add push xor jmp jle ljmp mov jb lahf and pop pop es add inc mov xor sbb call mov jnp add dec inc test mov add cmp xchg or cmp sbb jmp sub push add ljmp cmpl and add push pop xchg pop add in pop inc fs jno call dec lods int3 push lods ds push sbb add nop or pusha cmpsl cwtl ss andb lret fistpl rcl jl in and jmp stc ja mov repz xor add push les add and mov shrl enter lcall and imulb add adc and mov add adc out add mov stos (bad) fstpl (bad) fcom fs fistp scas jne hlt lods cmp sbb int sbb and (bad) push jbe dec imul mov inc adc test test nop pop jnp lds leave ficomp push dec fs push daa cld das gs (bad) pusha inc sub stc xor call xchg jae out call and (bad) mov and rep jno cmpsb fistp push pushf pusha data16 mov sbb ret stc lods test inc xchg outsb pop pusha (bad) mov jge ds and push add (bad) cmpsb xchg mov mov enter ss out mov pop (bad) or inc out xor mov mov into jae leave inc insb xchg jns inc jne aaa test int cwtl xchg cmp bound mov and or (bad) loopne,pn popf push popf add fcompl adc inc out orl pop call add into test sbb cmc add push jmp add jp pop bsf add aad jns or and dec iret pushf add nop pop in mov xchg fstpl or loope add sbb dec push xchg cmpl fs mov inc inc fwait mov xchg fnstcw add mov ds adc add popa pop and ficoml out add sbb cmp jae pop or push add (bad) mov sub sbb mov jnp cmp inc cmp mov das lds inc pop mov adc icebp mov add (bad) (bad) (bad) adc mov test pop push sub dec xor xlat fwait cmp adc mov cmpsl ss add pop jmp cmpsb xchg xor inc pop jae sbbl dec test add cmp sbbl sbbl fwait pop inc and aas arpl out jl mov fdivl (bad) pop pop add push pop mov aam and sbb pop scas pop sbb test mov mov inc fcoms test cmpl repz mov insb lahf adc inc add ds push add push jnp call clc rorl inc lea add mov (bad) cs cmp or addb inc mov jne jnp mov ret sub add jle (bad) mov fidivrl adc sub pop cmpl repnz (bad) mov push test out (bad) mov adc lds insb bound sbb jl pop aam add leave push mov sub lock sub mov push lods inc test inc push aaa push aad xlat call cmp ds push addl js mov mov sub pop negb add mov add adc test mov cmpsb add lret ret xchg insl hlt adc and fnsave add add mov or (bad) fidivrl xchg or push push arpl cmp push adc sbb jmp addb adc inc inc xor and xor mov cmp mov inc out pop push jo pop add jg xchg and ss mov nop cmp pop jo push mov push mov inc jbe add cmp or mov shrb pop insb mov mov xchg lock push std cmpsb and pcmpeqd add jo jp lret add lods jmp add ret add js cmp daa repz int xchg dec imul add cmc out add fistl add repz xor jo add mov mov add jecxz add sbb or sbb pop sbb adc jb add inc sbb jbe loope push and cwtl (bad) mov js and hlt jle add push mov sbb xor add loopne pop mov mov ljmp shr nop add andb dec pushf ss stos pop xor push mov pusha loopne fs mov mov pusha dec jnp jge or fucomip inc pop (bad) adc pop xorl cmpsl jbe iret add lods mov and pop out cmp adc dec sbb add mov xchg adcb in pop inc inc inc mov cli add jbe leave adc into lret loop inc or test lret add aaa add pop push adc xor add gs jecxz icebp ds and adc enter dec sbb ja add movsl sub addl xchg mov push jbe push insb push ret cmp repnz cmp popf sub mov ficompl and mov jmp rorl outsb cld test pusha (bad) adc pop xor cmc pop push xor add xchg (bad) nop sub add inc es fdivp stos rcrb dec hlt add repz mov jnp (bad) lcall (bad) lea push inc push jbe sbb pop pop xchg and les inc fistp adc hlt insb pop (bad) imul cld outsl mov daa sahf inc or sbb in orb insl stos adc dec out int3 add ss (bad) sub icebp push cmc mov mov inc mov fldenv repz (bad) xor pushf fcom inc in pop xchg or mov into dec inc add pop push inc (bad) popf rcrb lcall xchg jl xor sub cmp ja lock cmpsb (bad) pop dec jle das in dec hlt mov jno push xchg lret pop orb jb pusha and (bad) mov mov jbe (bad) test push sub cmpsb rcl xchg repz jmp jo inc sbb inc inc add das sub aaa xchg push add in jns ret add pop jbe add push xor ffreep push lahf insl mov ret push inc popf nop add or sbb mov call add push push mov xchg xor outsb addb xor add stos xchg in adc cwtl notb or pusha xchg (bad) and inc pop xchg cmp iret roll xor push xor push into out jb,pn sbb shrb jne cmp mov and loope loopne jp cmp pop out mov inc xchg pop add rcrb mov cmpsl dec pop or or clc pop add repnz add aas lds jg test xchg mov dec lret mov lods adcl shrb lock mov fs add xor xchg leave aaa pop adc sub dec in jo add outsb out push mov fsub mov adc inc add pop mov add jb fnstcw jns (bad) hlt adcl add outsb push cld mov adc fldl inc in test mov out addr16 notb in mov aaa add inc or xchg sti sub sbb push xor pop nop mov or mov addb insb jae (bad) sahf outsb lret jno je adc push cld mov sarb mov imul push ret pop popf fdivs add repnz sub and lahf bound inc lret inc cli inc aas popf sbb adc cmpsl inc js xchg (bad) push or adc and xor sti test inc xlat ss add push mov xchg stos or js add sbbl ss movsb mov add pop stos mov or adc cmc dec sbb enter dec lret mov inc (bad) lods jmp out or push jnp popf ss iret mov lods ja (bad) rolb sbb jmp arpl addr16 add xlat imul je test cmp add pop loopne add pop ds mov add adc ljmp fild mov imul push or xor mov popa faddl sub and test enter jne sbb add lea test sti pop xorl sbb cmpl in out sbb mov pusha mov stc in jo pop mov (bad) (bad) or push push sub jae (bad) mov pop cmp inc mov pushf stos jle adc icebp sub mov or stos and add dec push (bad) add xor hlt inc xlat lret faddl mov add jle and xchg inc sbb ja bound cmp mov fnsave mov fnop xchg orb leave in mov pusha pop stos add sbb lahf add fcoml cs add jle rcl ret aas xor add hlt imul and jbe fildl subl pop dec xor add xchg es inc and (bad) lods pop sbb out mov negb cwtl sarb or inc mov mov popl lret push dec or or inc aam xchg pop clc btr add add lock mov add xor push mov repnz adc push mov jbe cmp and xchg fs mov xchg and dec add sub dec aas mov call das shl ja add xchg repnz ja mov push daa xor add fbld les adc jg mov mov inc adc add and es jl gs push fmuls dec mov jne cwtl xor dec icebp push lods pop add ja xchg fildll add mov add pop add xor mov mov push adc imul fidivrl push add (bad) jmp leave sub add shl inc xchg dec rorl xchg pusha mov loope dec add mov scas mov leave inc xchg mov jle inc out inc (bad) adc pop jae push adc ficomp dec aad in mov imul jae sub and push xchg add add add jno mov mov xchg js adc addr16 add or les mov add in int3 jg add xchg sahf mov mov stc aad mov int3 xor push xchg mov pop incb xor loop push sbb push (bad) or cmp add testb add repz add push cmp rolb fwait pop ficompl imul in jnp sbb add inc add insb scas jnp add or xchg cmpsb cmp add dec aam xchg and ret (bad) mov add xchg pop test outsb sti jbe cmp je (bad) and cld sbb insl mov clc scas add jmp lea roll in adc sbb add jecxz sbb cltd test clc pop sub out xor cmp xor add and xchg movl jo mov jl add push xchg inc xor bound call or ret and repz inc fwait sahf push adc add jmp inc repz jmp out xchg test add das (bad) dec add dec push push clc in dec xchg mov popf mov les mov inc add add aam cmp sbb orl fisttp sti push mov jno jo sbb scas mov les sbbb cmp xchg cmp xor push jns fs sbb sbb sbb pop add jg das ljmp stc sbb test dec add xchg ds es add or loope add fldenv add mov xlat sub xchg (bad) xchg dec insl and add cli inc add jo (bad) adc and and jl rolb pop xchg cmp xor sahf mov je adc das in jge dec sub mov repz and sbb sub dec pop add dec and in (bad) addl in lds sbb xor sarl ficompl ljmp (bad) sub (bad) std push pop mov inc loopne xlat pop pushf out sarl xor and and mov add dec or lods jg and jp and fldl pop inc in xchg data16 aaa dec mov add jecxz push jmp xchg daa or cmpsb test fstpt dec cwtl pushf pop testb and push sbb bound scas pop sbb cli pushf pop mov aaa cmp xor sahf andl repnz and push sbbl je inc add ljmp or cli and xchg outsb (bad) icebp pushf in jne xchg dec pop cmp subb fdivrs cmp stos jne in mov and inc (bad) add sti pop jae add add sub pop cmp inc xchg addr16 add or test pop add and xchg ja xchg loop jle cmpsb jno add int3 fstps xchg lea add ds pop sub jl jg add cmp (bad) mov ds mov add sbb les int3 pushf lcall stc and add push and xchg sbb jp xchg mov sub aad (bad) mov imul add mov cs inc fwait pop scas jne int mov adc xor push adc (bad) mov dec xor test add mov inc leave inc mov add pop inc pop addr16 out into call fdivl pop xor push cmp idiv js fstpl add stos adc adc popa cltd in sbb arpl jne (bad) shll fwait add add pop lahf push mov popf fiaddl mulb ror pop mov xor sub mov sbb pop sti (bad) mov bound movsb add in xor cmp sbb (bad) (bad) mov mov shl js lcall or mov gs (bad) jb add inc cwtl aas popf jl jo jae out adc out fmul sbb push sub out stos aad cmp jno sbb xor sub fs add sahf aas jecxz xorl push incl pop cli push adc std sbb add (bad) cmp pop popf sub ret ss mov cld lods mov rorl add add lcall dec jns es mov cmpsb int sub hlt add push jg add lods adc add add add popa sub (bad) pop and add jge xchg mov subb repnz add xchg (bad) sbbl push mov mov xchg leave clc sub addb add das dec ret add mov adcl dec xchg cwtl cmp ret cli mov pop sub gs add cmc ljmp jmp add lock xchg add in mov orb nop inc sbb push push outsl das mov clc repnz add pop jp add jecxz cmp mov xchg ficompl lock insb pop test inc jnp add movsb iret mov add xchg out loope in add test sub mov mov fdivrp or mov push inc inc gs add xor mov outsb adc add pop test leave add cmpsl nop mov cmp and inc jl adc pushl xor mov insl add movsl xchg fldl xor and pop and or cmpl orb clc ljmp stos add mov sbb dec hlt mov cs mov mov fwait inc add aad dec in cli cmp add inc and pop jb jle jl imul shrl std pusha inc push mov ja js cwtl add pop stos insb (bad) push pop add scas push std cmpsb je pop test or dec fwait jo add lcall mov xorl (bad) leave xchg mov clc (bad) and imul lea add aaa je add dec xor and jbe sbbb test pop xchg cmp test fistpll ja add sbb inc movsl sub out xor pusha jb adc adc inc dec pop mov mov dec mov inc stos popf xchg sbb jle sbb dec jb jns pop fdivs xor mov mov mov and cld mov push add negb xchg fcomip inc dec lret add cmc mov cmp inc cmp into lahf aaa lret cmp and pop hlt cmp mov les adc add add mov mov push add inc scas pop xchg xchg or das in inc in jo sub add ja jmp rorl (bad) in pop push sub mov aam push jns imul jno cmp jbe std lcall subb fdivs push add pop sar arpl jo xchg cmp fisttpl sarb (bad) mov sub inc or hlt jb jg mov or mov lea pop xchg pop int3 mov icebp sub in jge xchg leave push mov add fsubrs jg ja sbb rolb cltd dec push hlt pop dec cmp cli ja outsb xchg pop add shrl subl adc jp cmc popf subl std sub outsb inc (bad) push fldenv and movsl jae mov jl mov imull mov sbb xchg cmpsl mov roll mov (bad) (bad) push imul and fadds fcmovnbe jnp clc pop xchg adc pop insl or int xchg sti inc ret aaa sbb lods mov jnp sbb aam pop sub and inc pop js add xlat stos mov mov cmp or cmc xchg or test insl ret add sti dec push cltd add cmpsl xchg mov aam lahf addl rcl test outsb test sahf adcl or inc mov add scas into mov out mov cli add lea pusha outsl loopne (bad) cmc pop jecxz lods push and fwait cmp shrl xor loop xor dec mov std mov shrb jbe sub and outsl jnp stc dec jg jecxz adc add (bad) cmp es xor xchg cmp fdivs xor cmpsb inc nop jb mov js add sahf sub (bad) cwtl fistl das or add enter jae in push subb int3 scas dec push adc jno jo dec sbb mov dec sub xor sbb gs in fidivl pop adc dec jle outsb std aaa in push adc lcall pusha cmp push mov pop ret add (bad) sbb jne stc cmp pushf iret push out dec add cmp xor and mov imul (bad) lods or aad gs cld lret (bad) js jp and test daa jb pusha or rorb sbb bound inc gs into sbb pop push fidiv pop sbb int push cmp mov pop inc loope dec xor add mov lea and lods daa js outsl out adc mov std add adc xlat inc add test push cmp mov ret ljmp jno push sbb mov fmul sbbl and jbe ds jnp pop ss add lock pusha mov pop bound add push pop push xor add inc dec imul je adc sbb jae ret fstp aam jo sub cltd or cmp addr16 add pop add dec mov pop adc es ret movsl iret xor inc (bad) cmp dec lods jo inc push fistpl nop add xor es add mov jbe cltd scas pusha mov out stos push sub sbb xchg lahf inc sub gs mov inc dec daa dec outsb mov std inc push xchg push rorl xchg push aad sub xchg ret rorl and imul mov xchg test xchg test out xor clc imul cmp jno sbbl jnp pop pop fstpt jl cmp mov and cmp inc dec and add pop sub (bad) (bad) hlt add test jnp nop subl inc std js xchg imul or rolb (bad) cmp sti cmpsl add adc lcall (bad) pop mov inc sub mov inc pop daa or mov add int imul (bad) xlat movsb mov jns mov adc inc cmc adc add mov insl xchg mov test mov je add mov sbb dec adc xor sbb in lcall out test in sahf pop sbb inc aad and add lret imul add sbb pop sub cmp leave mov cmp mov pop in jg add cmp sahf mov xchg jge jp add int3 das xor mov pop add inc sbb sbbl cwtl add (bad) out pusha test jmp lret add lods sti cli (bad) mov add inc lahf push je addb clc bound inc and dec push inc lea cmpsb add cwtl cmp cmp jno rorl (bad) imull sub dec out pop mov inc mov push mov add xor mov repz sub lret inc mov add (bad) iret sarl jb sahf int3 inc inc rcrb inc mov xchg add push int out int3 pop mov out lods movsb outsl imul loopne adc inc ljmp fs jl jl imul adc jg sbb pushl scas das rorb fadds insb lock addr16 push sbb je cld incl pop ja xor mov dec arpl jmp xchg xlat popa xchg jg pusha cmp mov inc push sbbl enter jae (bad) jbe loop mov scas stos inc insb jmp into jnp,pn mov lock jb add mov cmp test mov adc add pushf enter sbb adc mov and adc or cmp popa data16 jo je shr add dec test movsb (bad) (bad) mov test cmp test and cmpsl mov test inc adc loop adc jmp sahf popf outsl cli pop mov das inc lock cmp add jns xchg jle orl out cmpsl pop xchg notb dec xchg outsb mov movsl ss cmp add xchg jle ds sbb shrl cmp xor inc mov xchg add push adc sub sbb add popa adc push mov ret xor or js add mov int3 movsl mov add sub pop fldt nop movsb ljmp mov rclb mov mov rolb mov push lahf pop fwait inc lods cltd hlt lods or in loope inc cmp mov add mov jne add sub cmpl pop adc mov push les orb mov mov jno jp insl inc je sahf jnp inc sub xlat cmp add cld mov popf push pop or cmp pop sti pop ja imul mov push push inc jle xchg add (bad) (bad) leave jae or inc stc lods std scas mov cmp sub out iret cmp repz mov dec pusha in movsb test insb sub pusha and mov push add xchg (bad) pop negl mov scas mov rclb lret cmpb xchg iret push mov mov je call sti dec or jle sbb data16 loopne aad inc jo fidiv add mov bound sub sub sub add (bad) jb jmp addr16 cmp sbbl dec test dec mov mov sbb test js pop sbb and sahf xchg sbb jge dec pusha (bad) daa mov adc inc sub xor add cs sbb jnp adc adc ja sub orb add cmc lahf cwtl lret daa popaw add popf pop clc sbb (bad) add mov ja test and lods push into cmpsl add and out fdivs xor (bad) pushf xor cmp ja and sbb xchg add adc mov dec (bad) mov inc hlt adc sahf cmp outsl incl sbb sub aam std lock repnz adc test inc orl push mov aaa sti lret add adc stc fildl enter scas clc sti xlat add push add out test jg paddq pusha in or sub jecxz mov cmp jo lret xrelease dec shll push mov hlt das fcmovnu push xor sahf and inc icebp sbb loop hlt and imul sub test insb js je enter xchg sbb mov ja cmp orl sub xor add jg (bad) jns js pop push pop imul sub add lods lret ficom xchg movsl ror sub dec and or pop mov icebp mov mov pusha mov sbb pop andb subl mov add rclb mov in mov sub push add push test lcall pop orb pop std mov leave out mov cli mov sub dec mov or (bad) lret dec dec ja add dec in out fild or sbb nop adc mov fmuls mov lods dec test and jp add or subl pop es clc adc add xor (bad) add pop cs fidivrl add push adc add xchg jecxz push pusha jp aam std mov jae lret dec add xor fiaddl int3 and pop fstpt sub dec inc mov mov mov jp outsb int3 rol add add cmp pop adc std outsl (bad) in jmp and pop (bad) cmc fcmovu (bad) and pop dec (bad) fistpl mov cltd inc insb loope or cmp out cmp add ret sub (bad) mov sbb cmpsb in insl add cmpl jecxz addr16 hlt lea push add add nop and sbb add setge mov jp mov and mov imul cmp add mov sldt add into enter orl pop adc mov adc add cld test or test xorl mov sub fimull add sub (bad) jbe mov xchg mov imul inc adc add outsb pushf leave adc bnd pop lahf cmp inc sub (bad) add dec and sbb mov xchg lahf xchg jno jg jne xchg pop aad dec mov cld jmp add and mov and inc or les xchg push mov mov dec add mov jecxz fnsave test mov test add out jns xor pop add dec js inc xchg sbb lahf mov add lret mov jno add mov mov fadds cmp pop ret add mov cmpsb mov mov cmpsl faddl sbb les daa mov pop aaa pusha insl mov sbb hlt in dec jp add ja ficom scas push xorb scas or pop mov add clc ret aad jo add call out add scas cmpsb or outsb pop sub mov in bnd or pusha jno pushl nop lret lcall ds jl add das int3 inc add nop and add xchg in scas mov push and cwtl push push mov push mov data16 add cld push xchg mov gs jg add and sbb fs jle inc mov jbe add jmp adc aaa xchg add cmovg push mov add or adc jle mov ficom cmp mov sub add outsb subl mov inc fsubrs andl adc xchg cmp adc inc and pop jb dec sbb mov mov sbb (bad) div (bad) jne or push cmc xor add lcall dec cmp push dec jbe add xchg jns cltd jo popa aas dec and jg push cmc arpl scas and (bad) (bad) pop insb hlt mov add jo ljmp push movsl addl clc test dec inc inc xchg cmpsl cld add jno xorb xchg inc js xchg or dec add cwtl pop xchg add mov inc mov xor (bad) in xor jmp mov (bad) add pop adc sub add jge mov cmp mov add ret aad mov mov insl adc mov dec add xor stos add mov jb ds andb sti fadds mov sub cmp mov enter or loope jb push and cmpsl and jmp mov (bad) cmp push push xorl cli mov add xchg into cld and lret pop aas inc add addr16 jns mov pusha mov ss bswap lea sahf xchg mov fild scas subl add mov dec xchg push mov cmpsl sub popa jae adc sub inc and jno xchg mov xchg pop lock mov cld mov aam push push mov or xchg add add add push stos add pushf jg jbe lret jo xchg addr16 xchg pop or lods subb scas pop outsl fistpl add pop sub sbb adcb int mov mov in stos pop sub cmp imul cli test add roll xchg pusha lret add mov (bad) jg es and adcb cmp cltd xchg and iret mov mov fldz add mov sahf movsl jo,pn cmpsl adc insb add or clc int sbb fisub dec rorb add inc pop sub add cld loope sbbl fwait xchg jg jne stos and call xchg (bad) daa js rcrb mov out mov mov pop cmp mov daa add pusha imul adc pop pop mov lretw mov in jne xlat dec mov fucomp popa pop ret mov mov mov je push adc jmp data16 cli pop imul js arpl fsubp inc jne add sub out and js lcall cwtl push pop cmp xor or fidivrl data16 jnp cmpsl testl jl mov outsb or (bad) or push jle sbb cmc adc movsl sbb jg sub dec out push popa orl in stc test xchg test push mov inc jo add add loopne push add int aad push enter or push pop in je loope add push mov mov icebp xor xor dec sbbl add in mov iret mov rorb sbb push js faddl stc cmp inc pop test add cmp xchg orl je test pop cwtl pop jae loope into ftst movb pop out (bad) xchg mov sub add int and xor adc fiaddl mov push xchg test in dec push sbb xchg sub (bad) mov sub inc aam data16 sbb dec (bad) in inc mov add xor rolb xor inc push nop cs mov xor and sti sub scas inc dec mov les push mov pop or sbb jb xchg lea jecxz,pt mov stos mov orl and jmp mov pushf push mov pop jnp or pop add cld bound jno dec pop aas add add mov movsb sbb jg ret movsl jnp fisubrl cmp sub out cltd jb xabort pop lea popf push in jp jns or push lahf add call inc daa lock negl repz stos (bad) aam insb mov loope jno inc ret jae int3 subb xor push or mov adc inc (bad) cmpsl and in je loop add xchg mov mov jle add and xchg leave sbb imul inc cmpsb push jle pop mov popa add or pop fistpll orl jnp in sub (bad) testb sub lahf cmp (bad) mov push (bad) lods and sub mov movb jecxz pop xor and dec movsb jb mov mov mov outsb (bad) and add cmp mov inc dec pushf movnti ret mov lahf sbb hlt add inc jb movsl mov in sbb test mov sub add movsb adc jb add mov push sahf inc jmp push fild dec xorl mov insb add jne pop fbld ss cmpsl (bad) mov add or out dec testl ficom roll sbb jo jae add mov test loopne cmp lods (bad) mov fwait cmp add sbb test or mov pop xchg pusha dec mov add std xor adc mov stos cmpsl push pusha rcll jne (bad) aas and add mov mov rclb mov cs mov int xorl add dec push es lcall sbbl scas add add ret jae add mov dec (bad) lret sbb mov das sbb arpl fnstsw xor dec cmp addl fldenv push push js mov test jo xchg fldt mov jge in pop dec push dec (bad) or sub rclb lcall aad mov pop adc mov stos jb into mov jle lock jle mov test les cmp imul pusha cli add (bad) stos fwait loop add mov dec push push sbbl add adc test add pop lds rolb lods and mov jno inc scas fnstenv add sbb inc inc addl inc cld pusha cltd jb pushf add inc pop cld movsb movsl mov push lea fcoms cmp mov mov in add ja inc mov daa and rolb out xor mov mov andb testl movsl xor iret push adc push aaa insb cmp add fwait mov aas pop xchg push aad (bad) idivb dec pop cwtl rcl add dec in lea out and xchg push cmp out mov and pop mov mov sbb inc and pusha sbb sub and push icebp pop fidivr add cmpsl dec mov cmp mull jo and cmp in sbb pop dec loop stos test mov pop jg cmp fimull push push mov xchg mov (bad) bnd mov xchg jl push jne inc sar pop cmpsb mov add mov push mov out pusha inc xor or (bad) mov arpl mov dec inc add jnp mov add jle js dec stos or mov and add xor popf out dec (bad) jge fwait fwait lret cmp fistl cwtl lods lahf pop testb jmp cs imul outsl leave dec ljmp sbb (bad) cld add ja insl add push sub add mov sbb add stos btc push or add fs mov pop add jb lods sbb shrb and dec xor xor fwait mov aaa or mov test loopne iret cmp mov bound data16 or subl mov push sbb add jo js cmp cmpl je enter addb fdivs (bad) into inc or (bad) ljmp mov fwait adc pop (bad) add pop mov out jne test insl lcall pusha aam inc and mov popf xchg cmp lods dec xor daa add sub add pop ja inc nop fnstsw fimul add xchg and mull insl stos xchg adc ret mov int inc push and jle insl mov enter pop add push sub add sbb sbb dec in cmp mov roll outsb add pop xchg or insl adc decl call repnz jl add out sti mov fwait pop pop aam mov push mov loope push dec xchg xchg (bad) mov dec xor inc or (bad) xchg fnop inc add into dec sbb xlat fildl jb or stc mov add jo int3 es aaa pop repz shrb (bad) cmp push dec hlt push mov sbb jg imul addr16 or sub push outsl dec sbb arpl pop mov sub push xlat aaa flds dec pop repz andb cs roll adc lods mov add rol (bad) in add sub popa (bad) test add movsb enter sti add (bad) daa test (bad) dec push pop and notl mov cmc add add rorb add adc add jp and xor cmp (bad) negl imul andb dec out jns xchg and push inc addb sbb out les dec pop xchg pop sub push clc adc cmp std jg pop dec out inc ret (bad) pop outsl adc dec adc jecxz out xor arpl lock or dec adc imulb (bad) push pop ret lret js add xor add pusha aas mov fisub mov mov mov or push mov adc add adc cmp aas xor mov dec sbb adc cltd (bad) call sub jo sub lret mov fistpll add shl jne ja add popa lock add mov lcall inc ret jno stos cmp adc push sbb pop add scas shll sahf add subl nop add lahf iret jecxz sub popa fdivrl mov sub jmp add sarb call xchg or lahf fcomps loop xor roll pusha cmp nop sub pop subl dec jo scas pop add shll (bad) lock rcll mov add lods imul add (bad) lock mov adcb xchg icebp pop aam mov lret ja cli xor push inc jno jnp push pop push pop ret or pop adc mov test test add ss mov lock mov out xor (bad) cld sarl fisubl and cltd cmp cmpsb jne jmp jmp xchg or test mov sbb add xor and test sbbl mov mov lahf sub cmp loop inc int3 pmuludq xor inc movsl shll cmpsb outsl push int jnp and xor inc xchg (bad) outsb add aas push gs push adc test push sbbb mov xor inc test ficomp popf in sahf add aad ret dec jb or mov pop sub jg,pt ret cmc jle or cs mov cmp add inc and mov sbb jne xor add mov jmp add mov xlat ja orl ret xor cmpl and inc (bad) int3 jo add sub (bad) ljmp cmp outsb xor pop pop data16 xchg mov lahf inc fwait dec stos add or dec mov repz add pop inc incl out mov xchg outsl sti push loopne cli xchg andl popa (bad) jb inc fdivrl aas (bad) gs sub lret mov and mov add bnd pop fisttpl add or or pop add cmpsb inc imul insl sti (bad) or bound aad dec test jg loope ljmp pusha int and mov or cmp outsb or jb subb jl insb lods stos add push xchg and cmp sub dec in outsb aad sub (bad) ds (bad) adc and jecxz add mov xor cmp aaa mov fsubr push mov jecxz pop js push repnz sbb mov sub movsl add (bad) mov cli mov add dec loope push js aas je add xor (bad) out and test dec fsubs sub add fnstcw popa out inc sub in icebp mov sub cmp movl mov out ja and in xor xchg rolb and movsl insb add or (bad) push add or inc mov add mov out fldl push mov inc stos jbe pop jnp mov xchg mov add (bad) int (bad) nop movaps ret out inc inc pop dec push (bad) dec insb xorl pop sub push add inc stos dec push fwait add aaa jl mov jge push add dec mov add pop lret push outsb mov cmp xchg lcall add ljmp xor fcomi rolb les inc cld jo mov pop ds mov sbbb (bad) scas test xor lock adc cmp add dec imul fs add mov pop ds mov imul daa insb ja pop fwait jo xchg and push mov pop jno clc sbb fstpl mov and fwait fs andb ret dec fstpt jnp add insb mov cmp add cmp adc add lcall movsb das jb add ljmp sbb jae subb push dec pop lret jb movb inc test stos sbb add repz cwtl inc dec mov push sbb imul ja push leave jo pusha mov bound sarb (bad) jmp das cs add scas sub add int3 es imul (bad) aam mov paddusb or or movsb (bad) mov xor pop cld in and mov ljmp jne test das rorl push push xchg add mov fsubrl fnop add lods lods push andl iret xor roll hlt or orl cwtl ss jmp jl jl insb xor subl and xor mov subl cli lods jo and cmpb (bad) mov jle jne adc test clc loope insb js cmp cmpsl mov les test add cmp add mov pusha push add rorb popf add mov lahf add mov pop add push inc loop jg add cwtl (bad) mov or cmp xor imul lret lcall ja adc or fidiv mov xchg lcall xchg std clc ret add mov lcall add inc cmp rclb cmpsb inc in cmpb leave push popaw repz imul dec outsl lea in fwait push (bad) mov jp leave (bad) jo mov (bad) add mov push add mov icebp pop pop cmp fisubl (bad) mov xchg call cmc xchg enter add cmp xor lock repz pop lds mov add cmp pop add inc inc or jns adc or xor repz inc jmp mov xchg loop sub repz je adc jle pop pushf cmp add mov and add jno (bad) pop rcrb add mov mov pop aas cmc jmp int mov pop and aam in xchg and xchg inc add pop push or cwtl and (bad) add xchg dec jb loopne insl or stos adc mov mov add test and ret cmp rorl out and repnz loopne or test rorl add and shrl loop (bad) xor subb je add cmc dec lods int3 (bad) add ja aas sbb dec sti lcall popf mov mov (bad) pop cmpsw leave popf fucomip ds push int fwait adc mov or sahf dec sub orl mov add sbb pop fidivl mov mov push mov inc add push (bad) or dec movb add (bad) cltd sub pusha in hlt add jo push add cli mov (bad) fnsave adc dec add xor ss inc mov add pop jb and and lea out pop ret jmp pop push jbe add fwait add sub xor and cmp mov aas mov loopne test repz sub pop (bad) mov lods cld xchg fsubl sbb call in jle sbbl cmp lea subl fwait movsl push icebp push or cmp pushl outsb adc add sahf (bad) ja fadd add subl subl dec inc fwait sub push bound in popa (bad) sub lea (bad) fdivrs sub and push sarb in mov (bad) xchg inc into icebp data16 pop cmp cmp nop add inc lea mov add pusha in loopne subl icebp xchg add rolb dec add pop cs (bad) repz add roll and addb stos popf fisub jle sub sahf adc push aaa in in add leave mov sub das add xchg (bad) dec push or les pop jmp fild sbb sub dec stc or ret add dec xor in cmp jns in pop mov insb test xchg sbb stc cmp test dec add inc (bad) push iret lods pop andl cltd ror sbb dec cmp lcall addb xor dec mov leave mov inc and lock dec insb adc dec sti mov xchg lods cltd orl stc xor pusha add xchg rorl cmc iret cmp xchg fwait jmp adc (bad) call popf arpl mov fwait sbb cmp aas ret inc insb sbb sbb push sbb movsb or (bad) jno push push add pushf (bad) outsl cmpsl jecxz mov scas cmp xchg sti dec mov hlt aaa loope lcall lock les cmp pop adc jmp pop push andl cmp test mov mov leave pop nop negl jecxz (bad) lcall insl add out xor fildl cmp cmpl addb jle pop mov lcall fs in sbb adc orps sbb lock cmp and nop add test rolb popf sbb cmp jge inc js das out push pop xrelease stos inc lea aad add cmp add aam arpl int jne (bad) dec loope add cli or inc sub xor fildl scas sbb sub push mov adc pusha xchg fild mov stos and add push repz xchg dec nop (bad) add or xor out dec add enter jecxz andl imul mov jp les add enter inc movb int sub push outsl lock es xchg pusha data16 jno jle (bad) mov cmp sub and test push sub cltd rolb test addl std cmp fwait xchg daa enter sbb int3 push push add lods pop and push fcom mov add xlat (bad) ljmp test test mov popa mov add pushf ja add push mov bound add (bad) lret jno and and sbb cmp loop pop (bad) sub loope jg pop jae dec arpl dec adc cmpsb cmpsl add inc xchg hlt jo pop cmp add loope lods cmp and sarb push jp subl push xor subl and mov in jp or pop xchg (bad) jo pop inc cs orl ficomp sahf adc mov sbb jo in rolb jg adc xchg mov stos inc jle scas sub inc xchg je loop mov add sub lcall sub cmp xor (bad) imul icebp pusha sub in xor push xor addr16 cmp iret pop pop dec inc xchg push daa sbb imul xor dec scas add mov mov push add or sarl fistl add lret or add jmp stc scas add mov push inc cmpsb lods das dec and fs mov arpl pop enter mov fldl jecxz add jne add out popa mov mov lret inc add call mov enter pop add test jge add es popa add rcr inc inc pushf or pushf mov jnp xchg push sub inc mov aas and inc ret ljmp enter pusha cmp dec xchg mov xchg inc jbe mov push dec movsl je ds xchg rorb jg mov xor cmp cmc fisub fwait add nop imul test pop dec int add cmp pop (bad) dec mov and movsl pusha inc mov jne jb cmp inc xor ret ss xchg hlt (bad) pop sbbb call cmp subl rclb add je (bad) mov (bad) or push dec popa add lock movsb cmp add je sbb or pop xor add or or shrl js cwtl dec cltd push and jnp daa repnz jmp lds leave add incb adc inc mov dec jg sub mov sbb xchg out dec xchg add lds dec add push cmp nop es add ret in out cltd stos mov sub add arpl mov or sub dec mov pop les pop or pop jge jae add push xor and pop pop incl out loope push loopne (bad) pop add (bad) int addl inc or ret push mov imul sbb jbe cmp add aas push fistp sub ss mov iret imul into int3 dec dec mov test cmpsb sub scas pop cli mov hlt push je stc (bad) call push jno push mull mov clc xor add xchg pusha les jne cli divl sub mov ss sub xor stc mov add xchg popf in dec into mov popw push fldt sbb imul clc add (bad) fiadd add lret cmp arpl mov (bad) stc scas add xchg lahf cmc pop push imul push sbb pop stos add (bad) xchg sbb cmp cmp mov or inc mov stc push or jne cmp mov lods add jnp cmpsb jo and add mov sbb jg maskmovq negl dec cld insb call jb sbb push mov jge mov xor imul add and lds pop jcxz push push outsb aas dec lret xor or mov adc adc pop mov inc or push add in add aaa inc pop int sbb das iret dec lret xchg shll in sub mov jbe cmpsl fisubl fldcw or sub aas stos (bad) mov dec mov xor pop jbe add call and adc cs ret (bad) mov dec jo fs daa add xor dec fwait inc out jl add mov jns add fisub add (bad) subb sysexit push and (bad) fiaddl mov cmp add xor pop test and movsl imul xchg lods mov mov pop js cmpsb sub mov dec pop mov adc inc dec xor xlat jg int3 add ljmp and xor jecxz xchg mov and movsl add pop pop (bad) mov jge je inc sbb sbb mov adc into xchg add xchg rol adcb flds outsb adc in adc push cmpsb jg and mov or test xor mov das or pop mov or cmp pop jg hlt dec adc jae add sti mov cmp sahf inc adcl mov jp xchg dec jo loop add mov add push ror cmp js add subl cmpb in mov mov call sub inc dec fs or mov popa add push pop cmp into add add or adc xchg lahf and into cmpsl lods (bad) hlt lahf inc cli (bad) mov push xchg and adc mov pushf cltd addr16 (bad) icebp xlat mov sub cmp ss mov sbb add mov fidivr data16 ficoml dec adc add scas fdivrs mov mov sarl jae das adc adc addr16 mov inc pop pop adc mov sbb enter jg outsl popa pusha cmp pop add nop lods add push adc jns add lahf jp sub loope jne mov inc insl movsl sub test notb add dec int3 imul mov xchg cmp mov out jo add stc (bad) xor icebp jns jnp dec sub ja setl rcll daa add mov inc add gs mov icebp and or sub xchg inc sbbb repnz movsl or (bad) cli jecxz mov loop dec mov inc add add int3 roll into (bad) mov add shrb jne mov add int hlt fildl (bad) fwait jl dec push (bad) data16 testb popf pop cmp dec adc pop cltd flds add outsl loope dec iret hlt adcb lds add or add shrb pop dec jne popf data16 add sbb add sbb xlat in mov add push es add lods int add sbb add (bad) jg sub mov dec xor dec ja aam jge inc add mov pop (bad) (bad) movsl ja sbb add cmp push push ret add jne dec and mov or push pusha mov lods cmp sbb out fwait pop into pop add xor xor fildl adc inc adc je mov roll sub fnstsw mov inc fsts pavgb add sub cld cmc repz xchg cwtl fstps xchg fwait xchg arpl jecxz xchg das test cmp negb add or in and add pop xchg sahf mov test fs ja add neg fldl lea push add xor pop xor int xchg icebp popa inc (bad) (bad) jo daa jle mov adc pusha enter mov add lea decl xor xchg insb pop xor mov xor data16 out add (bad) mov mov stos (bad) shld int3 inc inc aas add sbb jl stc xchg lahf mov mov jns jg add fs jno cltd add es andl or cmpsl int xchg lret mov dec sahf inc repz sub mov push cmp ja fisubrl jno xchg call out push xchg rolb jbe lea pop imul and xor add icebp xor xchg cltd add sbb inc test sbb push rcrb flds xlat (bad) push adc addl mov pushl add lahf xchg add jo cs or clc (bad) addl aad (bad) mov mov inc xor pop inc nop stc or clc mov mov or roll call hlt dec add repz icebp pusha xor pop pop rorl inc sti or scas sbb mov test lods je sub or (bad) add arpl lahf mov ret inc into inc jnp pop (bad) cli adc dec xchg xchg sub sbb repnz mov adc data16 dec gs add (bad) pop inc and xchg cli jecxz sbb mov es xor orl loopne inc cmpsb push xchg hlt add push push (bad) jge (bad) je jg mov push scas test out mov dec stos sbb jp fidivrl sbb insb pusha add iret fwait jp dec xor add add dec insb ja rolb lds fild rcrb dec add subl push insb mov lcall cs hlt add add inc xchg cltd iret pushf popf sbb xlat sbb jns dec inc inc add dec stos mov adc mov lahf (bad) out cmp add sub mov pusha jb and jle sbb fimull pop dec notb add mov add sbb add pop mov xchg push iret inc cmp fadds pop xchg js mov or add adc inc data16 mov (bad) xor push mov mov dec sbb ret sbb xlat adc or xor sbb push pop mov popf pushf (bad) in add ror push or inc xchg loop mov insb and mov mov mov jp incl fstps add outsb xorl inc arpl push xorb aas mov push xchg cmp sbb inc mov std test jo pop dec bound cmc inc repz mov add add ja aam ret rcr push arpl rolb jo incl add push (bad) test mov xchg insb (bad) adc pop xor adc mov xchg fcos jo dec test mov xorl notl (bad) in fs sbb xlat pop add jb imul (bad) out pop movd add jae sub insl mov push lcall adc cmp sbb outsb add mov push jnp les inc mov je jb insl inc push rorl and int3 add mov add lahf pop cmc icebp js fadds jnp aam shrl dec data16 pop repz cmp notb add inc pop lret insb push inc dec jbe add add mov mov jp repz test and int pop andl cmp cwtl sub adc adcl in leave or movsl add rdtsc aaa add fwait and mov ss add mov pop es shlb (bad) flds (bad) mov mov sahf sar add inc or and add rcll andb lret lock pusha mov dec pop dec setnp shrb pop fldt push add clc adc int3 in add cld imul dec add mov pop bound or int imul icebp add ret ret or mov jbe mov sti push push jg cmp jns mov mov outsl mov dec sub inc pusha add push movsl jno pop in mov mov (bad) fildl pop mov adc (bad) lahf std out subb mov aas outsb jmp add mov xchg jmp sub fs add pop fidiv add add mov notl add push fisub adcl cmp aas fwait jb mov xor daa mov iret push inc (bad) mov lret add cmp push adc incl mov clc push in lock out jo push cmp gs inc jne pop mov cmp lahf popf cmp imul add xor cmp push add xlat lret pop stos add lcall push add and sbb add cmpsl jle das inc xor ror push jge iret lds sahf mov pusha rorb loop sub loopne cmc pusha mov add jge jg push jle add jae test outsl out cmpsb cmp mov nop data16 push push mov xor dec sbb pusha pop call aad push cld leave int3 cmpsb cmpl inc mov arpl sbb cmp pusha ds scas adc cmp cld dec andb and aam jb stos add insl in icebp cli sbb ja and add movsb xor push fcmovb rcll cmp pop inc push inc xchg cmp mov xor pop icebp je sub iret rorb gs xlat and lock cmp jmp dec push push push add xor fmull sub call add adc dec andb push jo cmpsb subl fs (bad) int jmp popl daa addl sub fs (bad) jecxz ja sahf adc test jmp out popf stos call add xchg clc mov data16 ret (bad) js pushf mulb jle insb sbb add jno inc cmp stos cltd iret jo push testb scas (bad) jne or add lcall add cmpsl push std cmpsb sub mov les add push cwtl or adc pop mov lea fstpl subb test sub dec fwait roll push addl inc fcmovnb mov addb hlt cs ret jp sahf mov adc and fs jbe pop mov dec popa mov jb test and inc add jge fadd add xchg inc jmp lods add adc inc xor mov cmpsb (bad) cmp insw das sub jns orb dec outsl jecxz mulb (bad) lock mov (bad) xchg inc lahf pusha xchg mov mov icebp pop push (bad) call pop movsb inc pop lds testb je pop in push xchg add arpl cmc mov mov xor pop cli pop jo inc fisub mov js add aas xlat int3 imul xor hlt movsb add (bad) aad in (bad) dec str push out pushf test pushf dec test cmp mov push pop sbb cmp outsb fisttpl ja mov dec pushf mov adcb sub fs ljmp inc mov test pop lret pop sub push inc sbb cltd test add pop adc pop jge jbe (bad) mov sahf push sub add pushf aam data16 and add sbb (bad) mov roll fimull addr16 lret popa sub sbb sub bound jle incl mov adc sub cmc (bad) pop rclb xor pusha mov push push pop iret push lret inc (bad) and add out pop das cmp add mov xchg xchg inc jbe pop movsl add stos jnp loopne dec or aaa cmp fidivl repnz cmpl enter mov aaa xchg out test dec pop push jno cmpl add pop xchg and add aas push sbb adc add in jb cld cmpsl and add or aam cmp flds mov (bad) cmp fwait xchg mul pop (bad) rcrb cmp (bad) cmpsb cmp pushf scas lahf testl inc jo ss ja add xchg jnp pop int3 xchg mov idivl cmpl sub iret xor or cmp inc lret jne addl outsb insb and add in push out movsb mov add popf loope cld mov ficomp adc mov pop add cmpsb aaa add (bad) push xchg loopne push loop push std sbb pusha xchg dec add rolb lret js add push add fistpll add fimul stos jno les sub inc inc push pop sbb ret bound xor adc fistpll add or mov outsb mov dec movsb loop cmc dec jmp push mov dec addr16 cmpsb add jle adc cld jge adc xchg push popf sbb xor jge push jecxz push (bad) fs andl outsb add shr lds (bad) jns cli test add loop lcall lds and movsb addb inc add sbb cmp add stc mov insb je jne add xchg test std sbbl lret xchg lods mov adc cmp xor dec in hlt (bad) lock add jne add mov addr16 xor mov aas ja push push sbb cmc and push and mov sub imul (bad) or pop aaa sbb inc pop pop mov pop jae sbb add lahf and add cmp add fmull xor inc sahf sti and repz enter (bad) lret xchg adc adc in add and add std jno and xchg cmpl sbb fistp push aam into jle inc push (bad) cwtl mov inc mov lahf cmp jmp mov lods mov in pop mov jnp or add aam daa ljmp aad add (bad) int add cwtl repnz dec inc xchg lahf mov jb jmp call dec insl add sbb jne add int fisubr add push (bad) jmp lods dec clc sbb add cmp jl add rclb add cmpb add adc movl xor jg stos out mov int3 mov pusha xor test sbb loop xchg loopne or dec lds mov cli push gs cmc pop stc dec pop or or test or xchg outsb sub cmpsb mov and jo popa fwait mov or fsubrl fldcw clc pop and and adc iret sbb jg mov sub mov add cmpl mov mov push (bad) je dec sbb mov and jbe pop add popf adcl sub mov push flds mov push inc sbb inc mov (bad) imul pop xchg jge test pop push out add sbb bound pop pop (bad) imul insb gs mov cmp cmpl inc roll pusha adc fbld adc jecxz test add inc lcall cmpsb jle mov add cld enter int push (bad) or jle ljmp pop push xor iret push mov loope cmc lret pop cmpl movsl in or sbb call movsb or mov adc rorb jp test popf jno leave movb outsb xor fiadd xor icebp jmp xchg addr16 push xchg jecxz popf or ds or jmp add test adc js add push ret mull pop fist jp sub aad rolb add adc and je add push rclb adc add cmpsb das adc add pop mov sub dec pop leave movsl cltd sti in and add data16 mov push xor jnp sahf add adc aam sbb lock jns jmp pusha scas pop or loopne in sbb jo mov mov add cs nop ljmp add push lahf lods jns aaa orl cs bound bsf cmp add sbb xor sbb mov xorl insb fs add jae xchg jmp outsb cmp add fs insl push jnp addl (bad) dec sbb pop cltd add cmpsb pop enter clc fcoml imull jno andb push (bad) push push cmpsl loope pusha in push mov into or jg icebp clc or mov pop and std shll cwtl push and cmp push push in add jle xlat sub imul pop jl and and add data16 daa xchg mov pop cmp jbe push inc popa sbb lret pop jae inc add pusha sub and inc cltd pop jl sub popa xor xor or push xlat jns out pop push outsb popf add inc jnp add inc mov bound jg cmpl add adc cmp out mov fiadd iret cmp rcr loop das scas clc sbb loope cwtl add inc icebp call andl fild push mov fnstcw popf xor (bad) inc push mov inc mov mov xchg add sarl add out add enter leave imul lahf adc add dec fistp add lods lret rolb icebp mov add cmc and lds cmp into aaa push mov rorb dec xchg and sbb push jns sub subl jb jl scas xor popf mov sti cmpsl cmp adc lcall mov test mov gs sbbb mov jmp out andl jb repz ja int3 jbe jb pop pop pop fs adc add test add (bad) loop pop fisubl cld add jmp testb outsl sbb sub or inc mov pop (bad) cmp add lret add gs push sbb push push rcll add sarb add dec lahf mov insb outsl loop push sub (bad) (bad) push add push or add aam std gs sub inc cs loop xorb (bad) dec outsb notb mov inc dec lcall push sbbb mov ffreep pusha add add ljmp add mov mov incb push pop mov sub inc (bad) sar lods bound hlt xchg add xor add into mov xor comiss jecxz pushl xor pop mov cmp mov sub cld sti jo das stos xchg add pop cli mov imul lock push pusha ss jle push das sub jp add movsl into int xchg push pop adc fcmovu sbbb out cmp push aaa andl push jae xchg addl roll xorl cwtl hlt mov sbb je test add adc jns inc or (bad) insl pop push inc jno add cld cmp cmp add aaa out jmp repnz sbb lcall cmp mov add dec jb xchg inc pop xor add push inc mov dec inc xchg or pop jne test into xchg out pop lock cmp mov jo add lcall adc subb pop jne jnp pop xchg dec dec or add cmc adc insl mov xlat add jae andb out add cwtl pushf mov scas cltd (bad) add jne lods aad dec out insb push cmpsb fs adc or repnz or cmp mov fs inc cmpsb pop xorl test mov adc (bad) cmp xchg mov adc mov pop ret jle lahf push (bad) xlat push inc insl popl imul xchg dec popf roll sub cmpsb cltd pop repnz inc jecxz,pn das and jns lahf mov inc xlat mov or (bad) xchg mov jl dec add and pop push les cmpl and xchg add fwait mov xchg jge xchg stos arpl xor leave add and lcall lahf nop sub or pusha push daa sti jbe xor fs test pop cmp jmp sahf push xchg and pushf or sub pop ss cmp pop push loop test cltd dec xchg icebp add addr16 and add or xchg add add mov inc das xlat loopne imull inc add loop add xchg mov pusha lret shrb adc stc lods add jmp (bad) pop add insb hlt pop out out roll add loope frstor add outsb pusha add (bad) lock fnstsw add pop shrl ret lret lcall es addl cmc jle cmp push lods (bad) sub repz dec fbld add bound pushf jae add repz ds nop add call jo cmp (bad) bound test in jl cltd add (bad) mov xor xor add xchg call mov in out je sub add (bad) push push add push arpl ljmp push inc outsb cmp sahf popf xchg mov add add sbb outsb add pop pop xchg outsl inc add imul mov (bad) xor adc adc adc data16 dec rcll add jl in (bad) movb or cmp jge popa or rcll stc jbe sub andb and add and mov add out sbb outsb cld enter push sbb push and sbbl popa movsb pop lea mov add push stc dec lcall aas adc pop ror jle xchg (bad) push mov inc pusha int insl (bad) (bad) mov mov adc imul inc mov and stos into sbb add scas lcall mov sub insb mov ret add roll mov mov jp repz loop push mov and pop add cli loop add cmpl cld popf or mov outsl popa push and enter gs xlat adc or mov jb pusha pusha cli repnz sbb mov dec mov push mov cmp push sbb dec ret pop test adc pop stos mov mov cmpsb pusha data16 mov jo les mov ljmp call xchg push xchg pusha lahf enter (bad) test inc xchg mull add mov sub (bad) int3 outsb add sarb out (bad) enter fwait push xchg jle pop mov idivl add dec cltd mov sar and add or pop in jbe mov xchg push fcmovnbe push add mov cmpsb jb xor scas movsb scas pop test xchg test imul outsb adc push xchg mov xor out jge bound add dec jb iret mov ret adc jo xchg sbb fldl out pop jle fwait add int3 in pusha and add jno jmp cmpsl sub xor jmp add cmpsb push and mov xchg inc and mov mov lret cwtl jl push pop out jp add xchg ljmp xchg push cltd jo shrb or out incb cwtl sti leave jmp cmc cmpsl into push test or jl dec sahf es adc add fcmovu fstps jbe add adc pusha pop pushf adc dec xacquire or sub gs adc stos loop fwait (bad) aam int inc fisubrl or mulb pop fdivrl add out insb mov sub mov sbb sbb jecxz outsl xor cmp sbbl lods stc out movsb ret mov jne mov cld jns cmp leave xchg setle inc or lock out jmp mov (bad) sar fisubrl mov hlt addr16 and adc (bad) je xor mov add lds imul (bad) mov dec insb out cmpsl popa jg es add adc and mov addb and incb add ss ret mov cld inc adc int aas add mov addl adc jne jle imul test rolb push (bad) or xor pop scas cs add inc cmp ss (bad) lret add out fs xchg sarb add out enter push nop pop icebp fs xor sbb pop (bad) cmpsl sub testb inc jnp sti mov jne shl add add push add jo mov stc inc int3 or jbe sub dec mov xchg mov push nop and xor add jp aas sbbl xor xchg sahf push incb pop push jmp subl or icebp mov mov add les add push (bad) push clc add and adc add in lea aam xchg mov adc imul pusha inc ficom push add icebp xchg sbb add rorb inc jns mov jge add lds addl push or jge add ss cmc and add shlb scas pop sbb int3 sbb fidiv data16 sub aas frstor sub push pop add or (bad) add sbbl inc jp cmp add jl dec iret fild xor sub xor es add cld dec ljmp mov cmp or add adc aaa push push dec mov inc lods or out sbb aad lret jne jo jo add mov or xor fldt mov gs xchg daa stos (bad) mov test ret test pop mov sub push lods xchg dec add insb imull and (bad) lea punpckhdq ds sbb inc cwtl mov jecxz mov popf sbbl fs jmp inc addr16 or cltd pop pop pop add mov loopne mov rorb xorl shll mov cmp mov gs sub scas aam je pop adcl mov cmpsl add pop xchg ja mov pop sti lcall jnp mov scas add (bad) stos adc add fistpll loop jae or dec xchg hlt js sub push xchg notl adc add mov fcmovnu mov insb xchg add data16 jge push js clc adc popf dec adc rolb lahf jno xchg push call and or push mov fcmovne and push popf clc data16 add cmp pop add fnop sub jp push mov mov out add mov jnp push push lea add ret ds jle add jmp and and clc repnz cmp xchg ret lret inc jmp fsts pop ret insl rolb popf dec cmp jmp xor aaa adc add pop dec mov jae fs pop add cmp mov xor or les push dec (bad) mov jae mov mov rorl inc int dec add leave dec pop fdivl sub insl in std subl inc or jno jge out mov cmp sub sahf int sub ds ret sub xor xchg je,pn and xlat push iret repz mov cmp xor pop outsl mov sahf out jmp pop xchg adc lock cmp jp and cmove add cwtl adc (bad) flds push inc mov pop add mov insb in movsb or mov loop js loope adc pop jge lahf add (bad) (bad) cli cmpsl xchg add test xor sti (bad) stos pop lahf mov add call pop andl pushf pop xor outsb and pusha ss add cmp xor jns add dec cs fcomps push mov mov popf ljmp xchg mov leave sbb fs add jmp sbb mov and add or mov dec repz jno,pn add out ljmp in loope fstpl add lret shlb sub add push fsubl (bad) cmc out sbb insb and dec adc add jmp addr16 lods loop pushf mov inc adc or add gs outsl add or jae adcb xor sbb add imul jl sub repz add mov xchg inc jmp ss dec lahf mov add push cmpsb ja jo (bad) call xor repz aas loopne add cmp pop push dec xor mov stos lods out int movsb fadds popf out cmpl fcmovnb inc fnstenv testb mov repnz lea lods emms jbe sub mov mov rcrb mov mov xchg scas adc ficom fldenv adc add aaa cmpsb addl (bad) movsl cltd (bad) test fidivr addl dec jo pop lahf or inc xchg lods sar sub add push iret frstor insl push es mov pop inc pusha test fdivrp dec mov sub stc jl add cmpsb scas jae pop divb fistpll add cli xor (bad) pushf in xchg cmp inc imul popf mov or or lret cmp out fs ljmp ss lcall outsb cli xchg data16 into jbe imul (bad) popa and hlt sti pop (bad) pop add xor les enter or jp add ljmp inc lods sub xchg add imul andl push add cld (bad) (bad) fist (bad) (bad) rcll xlat in mov and add aaa add cmp out add jnp cltd scas idivl in das cmp cmp xor lcall xchg add add pop sarb add inc pop mov bound push mov adc xor mov sbb nop fnstsw aad call and jg cld cmp xchg xlat push je sbb add in inc lods add mov cmp pop push xchg fstl push sub fnstcw mov gs gs add push push sub mov push pop jecxz outsl ljmp into loop aaa fdivrl jmp mov xor jl pop pop xor push and xchg bound cwtl inc in test je inc push mov orb jbe outsl add das mov pop and inc inc mov mov mov and add lret add mov sbbl loopne mov mov add mov rcl fbld rolb insb pop movsl incl pusha cmc and call pusha dec stc lret (bad) je hlt (bad) ljmp dec jbe add mov sub dec add aas mov mov jno add inc in test push add pushf in pop repz push add in push xchg jbe test sbb add xor out fwait add aad icebp ja repnz cmp enter out (bad) insb jge mov in push mov (bad) jnp pop add lahf ret shll cmp mov mov subps add lret bswap pusha hlt mov xor rcr bound dec add xchg inc adc cmp add or mov es rorb and rolb in mov push dec mov bound jmp ss add fs jbe sti jle movb (bad) cmp add mov xlat popf cmc push jo cmp aas icebp in inc jae testl sbbl jmp aam aad add daa bound lret mov insl mov icebp pop loop mov sub jge cld je pusha cmp add js (bad) adcl cld ljmp pop mov xchg in mov add jne cwtl mov mov rorb pusha add lock or enter jno jnp fwait add mov mov imul xchg ret cmpsl pop je and pusha imul adc or jno xchg mov xor adc add inc adc insb in adc lahf arpl insl add shlb mov fsubp pop add fwait cli mov (bad) mov jnp xchg mov xor rol fnstcw pop jp pusha lods pusha cmp pushf dec mov jnp cmp imul adc mov (bad) push fistpl in out inc mov or cmp add mov xchg xchg xchg xor mov pop add or sbb (bad) push lods out stos add or xor mov jl fistpl rcrl inc cmp cmpsl add jae fiaddl out or mov aam lods mov mov mov in add fmul in cs les sahf cwtl enter add test into out pop jo jg push int and jb pop add mov ret mov lcall lret sub ret cmp addb rcrb loop xchg jns mov cld sub add xchg in dec xor hlt rolb out inc pop test (bad) cmp stos ss sub push fsubrl add and cmp mov cli stc dec xor push xchg adcl pop outsb testb je cmpsb mov mov push (bad) jmp jo out mov xchg sub xor sub adc lods lret push xchg pop mov fsubs ss xlat aas and or repz cmp rolb add adc test test lods js popa pop jg je pusha sbbb imul incl les or jne dec dec fs xchg aam fiaddl or scas xor arpl add out sub andl push cwtl sbb adc je dec lahf stc jmp inc push mov outsl roll mov out jl sub pop xor lock in push test mov jp fstps or notl sbb xchg add inc push popa call add add adc es xor imul jb or inc lods mov aas add inc jle int3 test loop repnz mov xchg jne js inc mov adc lret mov add sub xor sbb add (bad) cs jecxz lds lret and push sahf cs pop push ret roll mov add mov flds enter sbb jp inc orl adc xor out jbe add rclb add sub mov fnop add (bad) imul in inc mov add sarl mov add pop (bad) mov add rcrl xor test (bad) loopne xchg push (bad) inc loop xor xchg rclb jo pop add mov add inc push test jae inc sub xchg out add mov inc pop rclb movsl sldt pushf mov bound adc xor dec arpl adc xor fistp lea xchg fwait pushf sbb pop dec or popf add aad sub js flds push imul jo les movsl or and sub cli sbb pop test mov jns sub xchg pop std popf xchg data16 inc fsts cld insl add out (bad) imulb dec call jne jo mov repnz outsl imul leave inc mov enter xchg add pop pusha and ds fidivr push pop loop or enter shlb mov subl lock mov add xchg (bad) movsl fistp mov mov cmp add (bad) xchg pop xchg outsl or sub test jo dec inc js jo add xor in mov dec mov pop and nop mov cmpl imul jge pop shll mov mov psrad push stc daa fisubrl mov rcll out leave add mov in mov pop add lcall add jmp hlt mov ljmp mov dec mov adc dec fcomps mov mov sbb scas cmp (bad) jae incl cs push shll sub les cmp add or hlt adc lret lret (bad) and cmp xor aam lret add hlt loop mov xchg cmp adc add jns jo xchg mov popf add sub adc add jns popa (bad) jg inc adc leave es add ja sub adc mov add ss adc cmp pop push inc pop fisubl sahf je sub out jo loopne push xor (bad) xor inc add ds pop data16 add and jg xor rcrb pusha mov das mov dec sahf enter cmpl sbb pop in lcall push clc sub arpl test aad aam in xchg add sub lods decb movsl pop mov in and in add dec ret push mov into and xor xor adc push sub adcl (bad) sub xchg (bad) adc cmp cld stos pusha (bad) clc and (bad) fstpl (bad) add push xchg dec push jge js test add mov jp mov mov mov inc pop je fildl fsubs (bad) in add add mov lods call adc cmp out xor push xor mov mov pop xchg lretw addl imul ljmp cltd xchg (bad) mov jge aad push decl push roll mov imul lahf (bad) adc mov adc popl pop in popf push jae and jnp push adc mov xchg mov add dec sub add cmp xchg mov sub mov mov shrb pop xchg aam dec jb push add jle add jge add xchg pop aam stos and pop loopne xorl out and adc xchg ljmp add push jb stos push push arpl xor jo repnz pop fildll cmc add push add test cmp adc and js cmpl jne lahf mov test push in cmp mov and rcrb int andl iret pusha ljmp mov sbb inc ret mov lret rep mov lahf add lcall repnz shll cmp mov lock or les ss cmp gs (bad) jns inc or push call fidivrl add stc add add sarl out sbb add or push js xchg cmpl jo mov lds pusha outsb sub adc lock adc inc lahf imul add pop insb pop cwtl pop cmp push loope in push adc inc cs ljmp pop sbb jbe dec cmpsb mov loopne cld shr pop lfs hlt pusha and negb out pop inc pop inc add jo data16 mov mov add loop mov add or lcall jae outsb pop lods mov pop cwtl and testb push dec test xchg (bad) insb xchg jecxz test adc out aas mov pop mov mov dec addr16 or add xor sahf movsl (bad) xor push pushf add (bad) jmp cmpsl xor adc (bad) shrl out lcall (bad) pop and arpl and icebp sub xorl adc xchg dec jnp push (bad) mov sbb clc cld mov dec add xchg cmp xchg fdivrs sarb sub dec add xchg xchg faddl push rorb and test mov jle stos add xor xchg xchg pop cli movsl test jo rcll daa pop int hlt add test mov add xchg push sbb fisttpll (bad) je jp push push add js inc xchg test pusha and push xor les ror lcall add adc (bad) lahf dec cmp ret loop mov pushf add (bad) push out inc add nop cmpsl xchg and repnz add cmp call loope repz les clc fiaddl xchg lods lods in pop xchg jp xor roll mov test add outsl clc add popf sahf adc add inc xor sbb leave lahf sti or mov int3 lcall pop and andb push out adc fisub fs adc pop pusha lock add dec adc mov int cmp mov cmc adcl inc push in hlt add pop stos cmp (bad) in ret stos shrb push dec les jno leave and sbb loop xchg add adc mov fs xor push cmpb mov fwait cs cmp sti add pminsw loopne ret cmc or add cmp lods ss and inc aad jae jge outsb ficomp movsb sbb or aad fnstenv xchg mov add adc inc sbb mov dec jno ret sti cwtl sbb aas dec add test mov xor ljmp addr16 das add and (bad) (bad) call xchg lahf popl xor cmp je mov add pop iret jo aas cmp shrb mov mov inc add int3 xchg icebp mov adc and inc repz lahf adcl and movsl jo add and iret and add rolb lret nop out sbb add add xor gs adc add repz les movsb mov jo vmovapd pop push scas inc aad mov push lret xor xchg test lods pop or inc lock push fcmovne add mov mov xor mov mov or and sbb (bad) inc jne jge lahf mov ja or sahf xchg cltd mov cwtl push xor add lea dec add hlt or fildl sbb add aaa dec sub sub add dec orl ret (bad) sbb pop and inc adc hlt (bad) sub xor add pop push jl sbb sub cs xorb pop into push test add leave push xchg add mov adc push jecxz jmp pop mov imul pusha add imul mov shrb stos pop sbb mov mov mov sbb testl jns pop aaa xchg test inc jge subl xchg out add jp sbb out orl add sahf xor xchg jbe mov xor add int3 xchg mov popa mov pop cld test push cs inc push in test rorl mov fild ja js push dec in (bad) mov and call movsb lds adc lock fsubl xor idivl fidivl pop push jo cmp bound cmpsb adc cmc cwtl out gs sub addl mov ja add adcl add cli (bad) add push and int3 adcb (bad) push je leave call cmpsl imul mov xor popa sti ljmp stc push out dec aaa sbb pop and mov sbb push xor xor es jge and jo jns cmp pop mov lds mov xor sbb xor xchg mov xor add loop jb call lock inc pusha into fild sbb orl jb lock lret mov lods adc push sub pop pop andl xor iret mov je enter movsb add dec dec pop mov int jnp xchg and xchg lock push xor xorl sbb add mov mov adc xchg insb in subl (bad) pop fwait cmpsb inc js push add jg mov mov xor cmp bound jecxz out mov xor lea adc mov add or mov pop mov loopne data16 imul fcomps add cli (bad) push cltd add cmc cld (bad) pop push shlb add lahf dec lock imul add test mov ljmp jmp das lds jl subl mov rol pop jb add inc mov mov pop push decb jg mov pushf jl inc push rcll lcall xor add inc out jl adc adc js lods inc push mov pop pusha ja push out mov jmp outsl test add cs sub and int3 add lds pop jle es push ret jb pop lods lret icebp out inc dec out add or pop addr16 (bad) jae lods push popf pusha adc dec movsb or icebp sub add mov sbb xor pop or add and pop inc lods orl adc bound mov dec xlat add (bad) cmp movsb scas mov mov roll mov dec loopne loop outsb sbb xchg add cmp pushf fdivl (bad) mov loopne out pop xlat mov (bad) repnz rolb dec fcmovnb (bad) mov mov orl mov pop pushf jb dec je pop push add lcall js pop aad (bad) add sbb hlt mov xchg add leave sbb fs roll cwtl jo pop dec fildl add push pop jnp insb dec mov xorl into dec add sub pop mov xor sbb jge xor jb cmp xchg push lock imul (bad) mov add imul (bad) jg cmpb andl jecxz fistpl push popf lds dec sti popa mov push add jp sbb (bad) xchg sarl push mov lods dec inc ret and mov push xchg or jo pop sub mov mov mov push out jle adc cmp cwtl fnstcw jno adc sbb insl mov stc pushf int3 or mov add cmp cld rcrb decb xchg fiadd sbb or push dec xor inc add mov fst test clc lods mov rcl movsb addl jo and adc paddsb in pop xchg andb data16 les push mov repz stos mov mov sahf movsb add out mov add sub xchg xchg mov add pop inc and popf add adc ds hlt pop aaa pop into mov (bad) jg or add dec (bad) mov pushf mov loop outsb cmp mov pop imul jl cmp push add jp jl sub or xor rcr (bad) outsb mov push mov sub mov add and xor (bad) repnz mov (bad) xor dec sbb call pop rclb imul mov dec shlb sahf xor cmp add pop add (bad) dec sub in or add jmp fldl add mov fs xor arpl add mov pusha sarl push in jo insb das popf ja int3 fwait sbb stos in push add stc (bad) sub movsb xchg cmp ret pusha mov movl aas arpl or pop jo pop orl pusha sub jle and popa cmp mov add lods insb jnp ss inc and lret aas mov js dec pop jne inc adc int3 sbb out (bad) mov jbe fldl and mov sti adc orb insb jl or mov test inc adc add outsb es xor sub or mov push and nop int mov xor push xchg dec pusha fwait mov leave mov je andb xchg mov push dec xchg imul mov pop xchg xor and cwtl mulb mov push and cld jmp daa add xchg das or cmp inc movsl jle xor adc add xchg mov imul jns cmp add in fs icebp xor xchg xor jp cmp add dec test cmpb sarl xchg add xor push aaa dec stos add imul add aad xorl hlt pop orb inc psubsw mov lods push mov add dec jmp push add ret (bad) cmpsb lcall pop pop mov dec jo enter mov mov push push add (bad) aad mov pusha jno js add dec push jae jbe cmp jp adc add xor subl dec dec inc pop add jp ljmp inc and sub mov in add pushf aad mov dec push outsb sub add cmpb pusha cmpsb dec sbb xchg xor jp and cmpsl xchg es sbb add pop mov mov add cmp lret dec jae add (bad) adc lahf or mov xchg jg adc add xchg add ror mov add fcmovbe je add mov test (bad) inc or repnz inc ja es dec adc and xor addr16 cltd push add pusha mov xlat add adc icebp out inc add dec cmp add pop xor push shll xor out adcb or push pusha lahf dec in add test jae jp add movlps (bad) fsubrp add ss sahf add pop je (bad) and daa and or pop add pop push add in int3 ja jnp push jbe add dec mov hlt cmpsl (bad) bound movsl push add les add punpcklwd in adc bnd stos mov or sahf popf add gs sub pop sub iret pushf divb aad add mov and push out adcl pop push in jo popf das faddl xorl sub imul add hlt inc xor mov call add jnp jb aas lahf lds push nop inc addl push jmp pushf sub repnz jnp adc jp scas add cmc test cmp add ret sbb xor push (bad) inc test movsl dec dec (bad) sahf jns rclb xchg add adc call mov fs xchg add loope mov call pushf sbb test stc sbb push inc rolb adc adc sub (bad) es sub imul mov dec add dec fistpll xchg es mov lret add mov (bad) iret pop mov mov popa mov mov jo lcall outsb aaa adc xchg add jnp mul jns mov sahf sub loop icebp std int inc xor fcoms or pop mov les mov xor fs xlat add and adc add push int pop ja insb add lods sbb mov scas jno orl sub push jo xorl lds jne add lods fistl pop inc (bad) mov mov ret and jmp jp movsb cmp pusha xchg adc mov aad call jl and pop push jb mov jns (bad) outsb and ja xorl into dec sub adc fnsave xor inc aam ds adc xchg mov lock js inc loope add jecxz sub add orl icebp mov ror arpl jne add pop xor incl mov cmpsl mov cmp loopne dec jne out and addl add ret in out cmpsb xorl sbb ret pusha in dec inc mov test rcrl push aad lret xchg test mov and sahf sbb inc push xor add pop mov xchg add (bad) dec add mov sbb dec push cld lods add mov cmp pop les scas rolb push mov insb add jmp rorb add pusha sbb cmp inc sub jp cmpsl cmp fidivl mov sbb testl movsl dec rorl inc adc (bad) or int3 les ret lock xchg loopne,pt lea aaa nop ja in mov mov pusha loope sub ljmp sbb popf insb xchg pushf pop add mov addr16 cld pxor fwait je cmp sbb push sti cmp inc aaa gs mov nop xchg std add inc imul pop xorl rcr pop lret mov dec and js jle add push insb add mov in pop and sub shrl push adc idivb mov inc and add mov mov clc sbb daa xchg dec xorl or ficoml mov repnz jnp pop nop dec add or add mov push add dec adc movsl stos push aad and dec add je xor inc insl mov inc ja das push jg incl sub js cltd xchg ds fcmovnb (bad) add push (bad) in pop dec scas pusha repnz (bad) inc xorb in mov pop stos lods jb cltd cmpl dec mov mov pop dec xchg add outsl jo cmp das push dec (bad) jecxz mov dec mov mov add out addr16 addb shrl (bad) jae lock push popa sbb subb sub bound adc adc leave xchg inc popa ret enter cmc pop adc fdivr jb ret inc out pushf ljmp leave or add xorb xchg movl cmpb or std pop call hlt pusha dec scas movsl add jns cmp fwait sti fs sbb push adc pop scas jle lock add fnstenv cmp test pushaw mov push mov jl out test mov xor cs mov repz inc mov pop or loopne les sub ja mov test cmp add ret add add rolb int3 cltd ret pusha and add ss in cld push add lods scas es (bad) fstpt and or andl fildll xor call aam scas lcall (bad) lahf dec subl pop or outsb xchg mov xor (bad) cmp pop add cmpsb inc sub xor repnz xchg iret sbb scas loopne add mov xchg sbbb pop fcoml js push add aaa pusha fprem fldl mov lahf push add inc jb push sub setl imul outsb aam in imul push jne add cmpl xchg mov push test xlat mov cwtl adc add xchg and and inc fldt or add sub jmp xchg mov xor push push inc test out (bad) add cmp lods xchg loop mov pop inc push push mul cmp ja mov sub jns add mov incb mov popf bound sarl pop shll add push dec movsl jmp data16 add xor test imul push into and mov jo add jp scas pop iret fist aaa imul cmp ficom xor mov xchg into sbb in add fsub sti mov xor fiadd push popl shlb scas push mov pop lsl shr sbb cmpsl dec add idivl ret dec cwtl mov fwait outsb adcb ljmp mulb or adc inc cmp mov sti cs jge sbb cmpsl jb out add mov jg jbe (bad) in mov sbb out add push je and xlat stos xchg mov xchg dec leave int3 mov mov sbb insb andb xor roll add test cli pop (bad) add fild mov jne add jb mov aam and pop adc ja jp push xor das adc jo push lds ljmp leave cmpl lcall imul shrl movsl push cltd sbb jae vmread jle push xor xor xchg vcvtsd2ss imul mov and push pop mov js pop dec inc aam clc push mov cmp sahf mov roll adc xchg mov icebp cmc in xor jns and sbb (bad) jae dec sub add int aam mov pop xchg jmp lods fisttpl adc insl and je lods out add push mov hlt pop js adc cltd inc int3 loop mov xchg mov (bad) mov fwait pop add scas int3 push mov pusha test or sti fistpll inc pushf push icebp movsb std cmp add pop inc popa dec mov out mov ret subb clc sti (bad) (bad) dec sbb pop push mov jb xor repz add jle sbb mov pop dec inc nop and or push aaa cmp lret (bad) sti inc xchg jp add pop jb add (bad) je pop pop scas test dec jb sub out push aad mov lds sub xor pop cmp ficompl inc add dec sbb jne clc test movl cmp jo outsb loope cmp aad xchg fcmovb inc das add dec jnp push pop xlat add cmp cmpl sbb fs (bad) adc jne cmp sbb dec lret lahf push sub jb scas xchg out add xchg push cmp add or in push sbb in xor ss rorb je sahf add fdivs or ret push push cwtl mov popa xor sub and add int push xchg (bad) in jmp (bad) fstpt and outsb or les out (bad) xor add jl dec bound sarb andl stc ja hlt movsb xor loop jecxz mov adc ljmp jne cmpsl rcr stos out jmp scas jge add (bad) jg iret or add sbb sbb sub xchg sti or adc add fistl mov pusha in (bad) out daa xchg mov mov mov inc mov mov nop push shrb mov push rcll loop sbbb inc std ja shr cmp je add mov xchg test sub fldl mov add xchg call inc push loop dec ret add lds push add sarl add add mov outsw sbb cltd test sub xchg cmp test or push dec fs mov mov pop mov insl mov fnstsw cwtl xchg add jno xchg outsb inc (bad) in add mov add push mov fldl imul jb xchg mov movl pop loop lahf lods adcl int3 xor or icebp xor xchg movsl inc js mov mov orl pop (bad) push push jne mov dec mov inc gs cmc push add mov scas popf pop notl push pop pusha add xchg add cmc mulb imul movsb add rclb repz xor mov add dec cmp stos outsl and pop (bad) fcmovnbe cmp out add fnsave iret js je add in or and addl arpl add mov sbbb ljmp movb mov hlt cld mov ja fnsave pop daa iret insb (bad) jo aas and sbb sub push test pop stc push jno,pn mov outsl add andl push es lahf mov repz mov pop cmp jo add inc jo fs or mov ljmp push fimul jnp or pop popf cmp jp (bad) xorl imul adc mov xchg mov add das clc cmpsl lcall push (bad) xor pop (bad) ja add push xchg out fiaddl mov add and iret int sbb sub mov scas add lcall rol cmp mov roll test rcrb adc popa arpl fisubl mov sub scas enter out mov ja mov mov add mov or pop and int3 lcall movsb jle rcrl lods cli lea push add enter nop jnp xchg inc shll outsb xchg mov pop sub push adc mov addr16 xlat cmp roll fnstcw popa mov notl jns dec sbb add pop shrb (bad) pop roll or pop mov cmp dec mov mov lock jp xlat add sahf and stos add lahf pushf add sarl ds enter lret inc pop jmp in testl add scas pop aad cwtl rcr jb or push adc add aad jg xor scas stos sahf (bad) pop inc leave sbb nop mov add push insb pusha add xchg xchg inc jns push add mov gs insl adc jp nop jl push push sbbb push subl or pop stos add inc xchg fnstsw add mov dec xchg test popf mov mov mov aad inc rclb mov add gs nop xor add jecxz pop push inc lahf sbb xor mov xor sub add scas lcall mov jb dec pusha mov stc xchg or pop pop mov sahf xchg xorl int3 sub dec fnstcw sub mov jae sbb or in test rclb inc jno adc (bad) mov add clc scas outsb mov add sbb pop dec les pop outsl paddd dec mov push test psadbw and movl enter add push aad stos sub pop adc mov xchg sti bound cmpsl or roll in leave jge xorl mov pop add dec push repnz or jb add lods jnp stos xchg test jge pop shll push add mov cmc xchg mov add sahf mov pop add add cmp fwait (bad) add lahf or ljmp adcl sbb xor add test mov scas mov mov sub cmpsb pop shlb sbb cs pop clc push add push adc das or add sahf cld mov add jne fcoms jo orl loop jns xchg add mov imul xor stos push or js add adcb add mov cmp lahf xor mov sbb xchg inc incl mov lret add jg fistpll aad adc lret mov push mov mov cmpb xchg outsb pop xor adc fs inc ficomp mov push add mov dec jmp push insb add and into jbe add xor adc aas inc nop scas jae,pn xor dec adc mov in xchg inc bound fildl aad dec fnstsw mov stc add mov fsubl adc jbe in (bad) xor out jg add aad cli add push mov lods cmp xor sbb pop or mov push test add sub mov xor jg sahf popf lock repz inc pop bound das adc cmpsl mov jl,pn pop daa add incb ret jg dec mov shlb cld adc and add mov int pop inc sbb cmp add cmpl rcrl cmp js fildll aas adcl je test fucomi sub sbb addl inc mov nop insb and shlb cmp sbb xor push fstpl leave fadds add mov dec add inc jl adcb int3 jno adc das and fwait sbb pop inc lock pop push fdivs mov pop jno ret add sub es cmp (bad) aaa and xlat test adc add popa mov sub loopne scas rorb in (bad) jg fbstp mov jp sub sbb inc lock faddl leave add jl clc xor rcrb insb in icebp xor stc movsl pop aaa mov xor mov sub or fsub mov jne xorb dec pusha push cmp push in cmp sbb fwait insl dec inc (bad) daa push fldenv rcll add or movsb sub mov cli mov and jmp test push inc ret add sbb add or shl jne orl push xchg rolb mov xchg inc jmp sub pushf popf mov pop dec aaa pop push andl jg inc inc or sub es lret add lds (bad) push in pop (bad) fcoml sbb lahf add rcrl mov adc iret subl push subl push mov cmc add or in add addr16 xor mov jno int mov sbb (bad) rolb adc jb ret xchg pop movsb (bad) data16 xor cmp aaa imul inc or scas sbb (bad) ds add push cmc icebp test jns (bad) out fild fmuls repnz mov flds repz popf stos add mov pop adc xlat fild loopne in fwait add fnstsw addl hlt stos mov cmpsl mov cmp loope repz jns add jbe add push dec ret adc push sbb mov das and and pop loopne mov iret push or cmp mov xor aad cmp mov xor xchg and adc push add into (bad) xchg ret add sbb xor mul pop or out rolb inc add pop add xor lahf add xor add cmp fs andl sub adcl (bad) jo mov sahf and popf nop (bad) data16 xchg test das fcmove pop push jno jno (bad) mov lahf add sbb pop lret push or jns cs mov xor add jecxz (bad) (bad) loope,pt ret cmp jp ljmp inc addr16 cwtl movsb int3 lret cmp mov je fstps add rolb push ja mov in xlat and add jle mov cmp sbb mov sub (bad) mov lret push test rcll out pop jno outsb stos or push add repz jbe addr16 mov movb stos adc mov pop das mov pop dec ljmp int rcrb pop adc add mov cld incl out inc in dec dec lcall fstl add (bad) xchg jbe inc in je dec ret sbbl sbb mov xchg pop int3 push loope addl cmpsl add xchg mov dec add mov xor pop aad mov pop pusha xor inc out push roll xchg (bad) dec add cmp iret sub jae add in rorb push sti add xchg xchg xor loopne add cmp push or and das pop fcmove adc and cmp stos push rolb cwtl push repnz and add xchg (bad) and pop add fsubl push fbld mov and xchg aad lods in sbb aam adc in fisttpl mov scas adc xchg mov shll sbb mov js push xor stos cmp mov add lcall (bad) xor pop add push xchg push loope mov mov jae add pop cli cmp pop add lea loope pop es dec roll outsb (bad) mov test jle xor (bad) das xchg pop icebp int3 or fdivl call xorb mov int popf sbb ret add es pop jle push adc sbb test (bad) xchg sbb out loope adc cmpsl pop (bad) pop test cwtl add cmp loopne fs add gs sub cs mov iret sub or cs stos (bad) mov pop loopne pop repz add mov push pusha addl inc jg (bad) sahf bound icebp adc mov clc jb (bad) push (bad) pop add mov adc frstor fldt orb ret sub sub adc test testb (bad) je pushf jg or cmp lods jl ret (bad) jp cmp aas pusha jns xchg add push (bad) cmp (bad) jb add int ret pusha bound xchg pop sahf dec js pusha push mov mov out pushf inc xchg iret pop aad sbb xor mov mov adc cmp add repnz pop cmc sbb push pshufw jle jmp sub icebp mov aam loope scas xchg jo dec and stos inc lea add jmp mov cmpsl adc inc outsb subl (bad) hlt dec xor fwait xchg hlt jp mov inc nop repnz or dec mov add jne adc or adc addb mov lahf and pop (bad) mov xchg pushf js lret add in xchg or pop lahf add int3 push fwait and mov sub xchg ds lods add (bad) movsl out mov xor ljmp bound mov insb xchg cltd movntq xchg xor xorb push adc shlb xchg outsb xor push subl mov popa popf add and imul pop add adc cmpl mov aas sbb or inc push stc mov (bad) dec inc rcrb add adc inc test sub xor pop cmc add dec dec lds pop lahf push fdivs adc adc in push lcall repnz mov mov add subb leave lods inc out fisttp in and inc xor add sbb sbb aaa les and and lds add repz popf push dec inc (bad) (bad) popf aaa sarb fisttp xchg jne andb mov pusha setno or je xor pusha dec aaa pop fcompl or mov cmp (bad) fsubrp jmp add daa pop (bad) adcb lahf pop fs mov pop cmp or and xlat add inc ret scas and sahf fldenv push jo iret or inc adc jns ds mov cmc adc rcrl adc mov xchg push push or sbb test xchg lds cmp (bad) cwtl add (bad) into add xor sub add push adc scas shrb adc push dec add xor in and xchg out cmp in cmp dec and and mov pop pop xchg cli pop and imul js pmulhuw xchg out lret sub lcall ret aaa jbe andb roll int je roll pop add stos push leave rorb shrb jne mov xchg dec loop stos or mov fisubr jo xor cltd adc mov dec lea test pop cs dec popf repnz int3 sbb dec sti sbb testl popf mov cmc add repz push mov add xchg push int3 mov jnp xchg pop sub add daa xchg push xchg inc add mov xlat (bad) xchg aad add add xchg ficom xchg jg jle add adc add mov jp add mov in add sahf add fldcw cmpsb insb push data16 loop sahf iret xor dec roll sub movzwl pusha pop or inc in sub clc sbb push mov add mov sbb pop frndint xor cltd jno pop fcomps inc scas xchg xor inc or outsl jne mov movsb js sti push ret sbbb shrb xchg test stos add or mov movlps xchg xchg repz scas mov ja jmp cmp stos or addb es dec pop push jg iret inc xchg adc xor dec pop pop mov jmp xchg (bad) mov mov mov push and add aaa outsb xlat jo mov adc jo or sub or pop repz mov cmpsb add hlt outsl clc lock and cmp xorl sub fxch pop ljmp xchg dec fild aas hlt int3 mov mov loope xchg fwait add in dec add sub jmp int add or lea scas aam xchg push or jns orl and and ss cmc jmp add push lcall bound and jne fdivr fiaddl cli xor pmaxub jne add jecxz jbe and add xchg dec jl fldenv mov (bad) lock jl stc orl leave dec pop xor outsb outsl repz xchg jb (bad) loope mov bound sub js enter pop cmp loopne xor fsubrl jno shlb movsl add adc lds inc pop into sbb push xchg mov in incl test dec test jb jl push aaa sbb and cltd add loop mov xlat and xor adc mov cli xchg xchg add dec sbb add xchg cld xchg cli pusha sbb jne dec ret repz sub jge jno lahf lahf mov iret lods testb xor mov inc sahf (bad) orb mov scas adc mov jp subl imul (bad) int adc sub mov repz cmc orl gs adc ljmp inc add fnstenv andb faddl aam insb fwait outsb add jns pop or jle mov daa push outsl ljmp popf test inc push ljmp inc lret and in add mov mov jg popa ret push cmp add fwait pop and pop pop loope insb mov in inc push aaa lea into pusha sub or push jno outsb insl test jp decb inc xlat add xorl outsb fnstenv add sbb add sub loop pop or sbbb jl dec or mov cmp and test pushf ret sbbb aad xor push push imul insl add aaa mov out push mov out add mov mov orl add adc scas pop add pushf or add jns add fildll mov or dec xor mov pop in lret addl pusha (bad) jo or fidiv aad decl scas jb xchg add pop in sbb add repz call rol xor imul add and jns test add mov xlat bnd add and or pushl jb mov dec lahf aad fwait sub add xchg daa cltd jecxz xchg dec adc push unpcklps sar xchg dec xlat inc fs mov int3 dec adc or jne sahf ds inc sub push xor test add cmc mov shrb jbe mov lds add jecxz ja in cmp or scas dec mov lret insl jno pop push mov mov jae xchg sbb clc xchg stos mov add loop dec test pushf dec and add subl adc movsl mov js lahf lods xor add push push cli scas jl mov in mov jecxz add jnp pop pop mov test xor mov movsb lcall adc pop and and aaa cld lods xor js dec loopne (bad) mov cwtl add lahf pop jecxz repz (bad) js pop inc cwtl gs int3 idiv stc mov call or sub xorl (bad) push ret call inc cltd xor inc out push out (bad) jnp sahf rcr add sbb scas and dec add push add loope sub pop add adc (bad) int jp add movsl xor add out jle sahf xchg jmp xor (bad) fcmove xchg jge jbe cs pop jl mov mov orl ss pop pop popa sub (bad) dec das sbb cmp dec add push daa (bad) imul lods sbb and push call repz xchg outsb and dec xchg cwtl lods and subl dec sbb jl xor mov add sahf and add fldcw push inc push xchg xor fidivr jo cmp je push (bad) adc adc mov icebp add shr stos push push sub call push test or in jecxz fisubr inc mov pop dec cmpsl add push jge jg inc (bad) lock sub jae (bad) inc cmc insb je inc scas loop and sbb adc cmp dec sahf mov add lods std (bad) mov sbb incl clc xor add addr16 popa add stc aad insb shrl fwait xchg scas lea je sbb add cmp xchg jo xchg jl mov popf dec adc or icebp or xorl fcoml orl in jne aad add idivb test sub xorl add cmpsb mov dec cmp sub call ja xchg ret pop mov out pusha pop xchg or fldt push cwtl inc in sub decl and ffree int3 outsb aaa mov fistpll dec movsb jmp mov stc xchg mov mov sbb add and je or add push lahf push leave jo int3 pop sub sahf ret adc dec cmpl je scas rcrb (bad) pop add mov xchg enter icebp ja sub push fldl add scas mov jmp xchg mov outsb pop sbbb cmp inc rcrb adc mov scas lea xchg fsubp addl and inc cmp jo jl cs out push pop add sbb add (bad) push int3 jp sbb repz xor shlb test mov mov js fs pop jb es sub pop push mov and inc mov push xor xor pop cltd mov push (bad) push subl push mov mov aam inc xor in (bad) xchg decl push test push add jmp (bad) imulb lock mov scas sub lods sarb push mov shrb xor jae leave rcrl mov popl push pop add adc xchg andl lahf dec in add adc inc xchg xor pop sti dec and mov loope fs add push fwait adc mov fstl lretw push add fidivrl mov mov mov cltd stc add arpl xor sti add cli xor sahf adc fxch dec mov adc movsl pop add add dec sub daa add mov test popf cmp inc sti inc jmp ja mov inc add repz cmpsb cmp ret inc es dec (bad) mov aas mov pop scas add cli add sbb xchg inc (bad) add enter adc lret adc roll push pop lds or stc or mov aas and jne mov inc adc or into aaa imul insb loope inc xor ret nop xor (bad) hlt sbb aaa inc or test push sub pushf stos cli shrb push pop je push (bad) add dec cmp mov push (bad) cmpsl push aad nop sub jle mov mov mov add and mov sbb jne add icebp jnp arpl ds push dec lea fsubl lods cwtl add mov mov fldenv sub mov mov incl rclb (bad) dec jb xor test ja mov daa add lds into add xchg bound sub mov cs lahf xchg lea and and jge push subl pop jl dec sbb neg les das add pop ret jae mov add jle xor xor cwtl mov (bad) aaa int and jl lods mov ret add push fiadd add cwtl popf out mov pop int pop std mov adc insb dec add xor leave mov bound testb shl ret adc pop add mov sahf sub add xor lock int3 push add lods stos jb and push js call mov push and std jae movb dec xchg pop test add pop enter aad gs sub in cmp (bad) andl pop fmull jnp ds popa inc int3 mov jg (bad) mov sbb mov call add movsl scas and into fwait push gs hlt xor add jg sbb mov cmp xor mov enter jl in inc cs loope add sub jns dec xchg lret aaa test fwait add (bad) sbb xchg cmpb (bad) int pop fs cld push aad xchg add or das dec fildl push cli fldcw xchg add test sti add xchg or mov dec test pop add lods enter dec popf add das lock dec mov icebp insl jo orl test pop xor xchg add sbb add sti lods push add imul bound in (bad) jbe adcl mov push pop test mov add jmp mov orl lods push dec adc popf jae jmp push or stos sub aam push mov xor add dec adc add lods test dec pop push icebp add dec popf add (bad) cmc fadds and jp cmpsb add add addr16 cltd sbb push loop int push jle (bad) enter inc pop loopne dec mov jb aad int3 inc inc xor lea adc or add pcmpgtw outsb mov cmpsb add rclb xor inc sub insb in stos adc jns cwtl push movsb shrb (bad) inc je sub lret or adc or fwait lock jge mov and test dec xchg and mov adc test arpl cmp fidivrl cli push lds mov out sub xor iret jl ror jle (bad) cmp mov fcompl pushf ja pop pop jp add sub add xchg adc fildl inc cmp dec inc xchg ljmp jmp xor (bad) or out xchg cld sbb inc cmp jmp mov cs fistpl rorb cmp or cmp xor inc add mov (bad) pop add pop jge loopne,pt test fsubl repnz sbb mov mov mov and aad js stos mov add push mov and or out gs sbbl cmp push out add insb icebp add bound aam addr16 jbe lds mov pop addl ds push inc jne cmp aas cmp add mov ret push insb roll xor jmp push dec xchg cmp xor add daa lahf incl adc cwtl (bad) mov jle in jns fldenv add ljmp add jnp daa add pop pop push xchg add push outsb adcl pop cmpsl xchg pop lds mov rcr loop add movsl imul rol data16 pop sub add in mov add enter xchg mov jo lea (bad) repz sti sbb dec jne int3 mov xchg mov aam jnp jno pop adc aad mov pusha mov add (bad) sbb or mov out sbb inc cmp mov add jb pop imul aad add lahf (bad) sub add je out mov cmp mov rcrb or xchg push call inc popf rolb xorl dec int rorl mov icebp stos mov dec popf or mov fcmovb cmp pop and mov cmpsl adc icebp mov jle pop mov add mov add xchg add lcall fild xchg or pop or adc push imul ret shr pusha mov imul push jp push mov pop inc push (bad) lret test aas or jae mov jecxz dec addr16 xchg call and dec inc mov loop inc add ror out sbb adc addl pop ja or cltd mov mov aad sub mov int push jbe inc add jne mov jae or xor fisttpll enter int3 push add mov add add cmp push xchg fisub mov or mov xor push scas dec dec or arpl push incb fsubs fisttpl add mov outsl loope push cmp repnz fistp mov add mov add xchg cmovb fmuls fld pop xchg adc mov in jecxz (bad) add test add ds inc lret sbb andl cwtl cmp adc mov js std jne lds repz jp test test ret popf sbb into dec inc jae aas fistl inc and jae add loope add cmpsl add mov call add inc lret clc pop and mov and or xchg xor popf (bad) aam dec icebp xchg mov add push ds mov enter push insb imul xchg mov aaa add or lods cmp xchg (bad) jo pop adc cmp cmpsl xchg gs nop iret mov and sub rolb mov jae int3 xchg push ltr or test pushl pusha or cmp xchg les pop sbb je mov xor inc lcall pop insb add stos add sub xchg push insb jno jns push ret add stos and mov push (bad) mov mov movsl in add add testl into adc loop out imul rolb add sbb cmc pmulhuw inc pop add sti ret xchg bound hlt arpl add cmpb rolb fwait pop dec sub cmp leave push imul lock adc fcomps inc xlat stos or addr16 cmp lahf sub inc add fisub popa cmp mov sbb push xchg push adc mov cmpsb cli movsb mov push add orb fnop js mov aaa bound call pop inc jo pop cmp mov sbb add lds inc fdivrl daa insl mov jle xchg lahf mov add and jns into lahf mov cltd lcall (bad) and incl jge push xor jle (bad) mov mov adc mov lret aas sbb ret (bad) jle (bad) xchg xor and xor mulb out je dec jno int3 and add popa mov cld add dec data16 add and int3 cmp std in ljmp stos xchg mov pop add in dec push fs xor jp fwait add jl or inc es call daa push setp add in roll jo sbb pop imul mov mov inc pop adc or stos dec mov les xchg rolb and sub jecxz push test add jg faddl dec push insb jo pushf in add inc xor sub dec mov cmpl cli pusha pop notb loopne cld out insb stos adc shr or jb fisttpll sbbl cltd fldl (bad) jno and dec mov inc dec and arpl jns xchg jae mov pusha jb add jecxz push mov (bad) cmc and mov in lods xor dec js cmp mov and enter push or or repz aad xchg inc pusha stos inc add xorb fldt sbb adcl enter push xor les push or (bad) std aas ss xor add popf push arpl push jo adc fdivrs mov pop mov mov jne cmp lahf adc dec add jl add mov push xor push jg (bad) jge add pushf jle xchg or jbe and add sbb add mov add ret (bad) scas add sub test into dec push mov sub adc jecxz adc pop or div pop pop dec insb stos add adc dec addb sub dec push xchg add sub inc cmp and insb jl pop pop inc dec out in sbb ljmp dec (bad) mov add inc xchg push add aam jl pop loope add mov add dec mov clc jo in push hlt jp cmpl inc inc fidiv dec inc add aas leave imul push xchg out and mov fstpt mov pop xlat inc mov sbb add iret ljmp inc mov subb insb pop xchg add fstpt push cld pop lcall jmp shrb int mov mov xor inc mov daa cmp pop lret sub add jle mov push lds add cld jno jne stos mov add jmp es mov fldl in cmpsb pop scas add into repz sbb jl incb push sub sub xchg xchg (bad) jle push sbb xchg push fstps insl push out sub leave loop mov push ss adc hlt aaa add inc lret (bad) jp sub int sbb inc push sub jg inc insb jmp add add out xchg mov aas int3 mov adc fsub lahf dec sahf ret add adc sahf roll push mov fnstsw adcl in or adc mov ljmp pop scas or inc fsubl adcl lea in mov adc out cmp xor incl pop fisubrl in je outsb rolb icebp and loop cmc cli pop xor add lds add sbb add inc lea xchg imull sbb mov push mov add xor fsubl dec add out cmp adcl pop les test lcall and sbb adc hlt xor inc jp add jmp xchg push add inc inc add jle movl add sub pop pop jns aas rclb or add dec xchg dec test pop push add js add ljmp mov aam mov jg movsb int and mov les testb inc adc popa push push xchg fbstp inc mov lcall pop sti std add mov insb mov jo js test add lret add popa xchg enter test test pop pop hlt cmp sbbb rolb in jl (bad) xchg call cmpl inc mov addl dec aas inc and add hlt cwtl add mov push add xlat sbb add xchg sarl fist dec xor lds add es mov loope push add decb int3 mov inc jge sarb ja addps addl or fiadd add ret sub dec xorl pusha mov pop fidivl add add pop xor (bad) add daa add or add cmp jl pop imul ds sub dec js mov sbb scas mov push cmpsl adc sub (bad) jb lods lret outsl jg add insl in es push add loopne lahf inc pop iret inc xchg xlat push or xchg stos stos insl into push popf fidiv mov jo andl jmp sbb ss inc iret jg pop fs and adc pop cmc cltd inc (bad) add sbb pop das mov xchg sub stos jp push lods ret or loopne cmp repnz add and test imul popa decl test (bad) jbe or mov adc push fcompl bound pop dec and into inc sbb push les cmp scas push xorb cltd dec and dec add ljmp rcl cmpsl adc insb or js repz nop add outsl push add cmp rcrb cltd dec cmp add bound xorb mov dec cmp cmpl dec insb test pop jne pushf cltd lea add push cmpb mov lock (bad) or test (bad) mov punpckhwd rolb test leave cmp cmpl add fisub popl xchg gs (bad) aas push add sbb dec add shrb or add cmp add jle repz add mov out inc mov sbb cmp cwtl pushl sub insl and cmp into or add fcmovnu cld outsb add add push jae (bad) divb add pop out cmc pusha dec icebp mov cmp fisubr xorl dec inc (bad) out fnsave add xlat mov in cmp inc inc and lret add inc jne jmp push add sbb add xor or nop sbb icebp daa pop movl imul mov rclb iret insb mov add ljmp pushf dec dec add into cmp push sub cmp add movsl adc mov add (bad) cli jle out or add sub test and add sbb shlb js mov imul ja add in repnz xchg das push pusha add roll add popf inc in mov xchg pop dec dec lahf mov lret aaa mov int insb (bad) and push xor into mov sub dec mov sbb adc push int3 add test rolb cmp into andl clc pop lds add out or push sub jl sbb rclb movsb mov (bad) in mov gs es xor sahf adc inc loope mov cmpl ficom mov andl iret pop cld or cli mov icebp pop fsubrl mov test lcall dec daa add jge xor mov adc sub sub (bad) mov fs repnz addl cld cmp cltd or dec lea pop dec movsl cs add sbb add das outsb std inc (bad) sti inc xchg sub cmc adc add arpl add mov in sub loopne jl dec add jl fs push inc dec mov mov cmpsl ja dec mov pop ret jae mov bound mov jle les pop pop dec fmuls add je dec jecxz xchg pushf jle popf (bad) push mov and xchg aas xor cltd jge jne dec pop pop lods jae jns pusha popa jp cmp ret add fiadd aad in fistp inc push nop (bad) jp jne (bad) jns xchg and fsubl call scas cmp xchg loopne xor repz dec xchg pop gs push rcrb jne sbbb dec in ljmp in push mov jne popa cmp loop dec je adc mov add stc out (bad) or aaa flds jae (bad) xchg icebp dec jmp out add aaa push jecxz add cld fs add out push outsl fcoml sbb gs and push sti ficoml fisttp sbb and pop or dec pop cltd sub repnz xchg inc out pop test jmp dec pop push pop pop push mov mov cmpsb daa sub fisttp add mov in loope xor test adc inc pop test aam testl enter sbb mov xorl fs mov std gs (bad) adc imul jo dec ja push daa pop cmpsl mov call xor adc gs rcrl iret (bad) ss inc pop and xlat jbe pop mov les ret dec (bad) dec (bad) mov or out inc lcall in fsubrp push add sbb adc loope add sbb stos es je pop mov fcomip inc add mov test fisubrl test (bad) mov add add jecxz mov popf test xor push clc cs lds mov cli mov add or dec add lods andl dec lret mov jo lods and out fldl js jp add mov mov dec subb push jmp cmp ja rcll add sbb fistpll or movsl int in lahf ficoml nop add inc or add test shlb sub mov je dec bound cmc or mov jle sub movsb mov lea xor cmp sub (bad) fs push (bad) add xor mov out aad addb push push push dec das adcb (bad) repz je div mov jbe scas pop incl (bad) insb cltd pop aaa mov jb xchg sahf bound jae pusha ud2 sbbl fwait add ficomp add clc call add hlt gs aas iret mov inc mov popl cs and adc jne jge out lret pusha inc out push sub add push leave into fisubrl cmp adc xchg sbb add testl subl dec cmp enter or imul or ja sbb add lods in pop add notl add scas fnsave es loopne pop jae xchg pop jb orb iret lods pushf inc adc leave xorl mov mov lea xor hlt enter add into cld or add scas inc inc dec adc hlt pop xchg gs mov jge xchg xor ljmp adc mov fdiv jmp pop sti and outsl ret jg adc xlat imul in cmp int3 popa cld add cwtl cmpsl lds push adc stos inc fdivs dec arpl xchg insl test cmp and pop mov jp fbld rcll xchg inc push inc or (bad) cmpsl mov jb add pop fwait adc in imulb mov (bad) sbbb mov add into xchg cwtl out jo,pn xor fcoml in sub push sub fstps add mov add sub push mov inc subl (bad) jmp add jmp add mov js add insb mov addl out sahf mov push out adc (bad) je addb and mov ja add js lods push lret pop mov sub xor pop jmp call xchg or cli xrelease js cmp mov jnp (bad) xchg sub aas arpl add adc adc jl mov sub cmp push push je add bound fidivrl rolb es push lods xor push mov xlat mov mov xor sub out jg sbb loopne je (bad) add ss cmpsl cmp sbbl inc das pop mov inc jl dec test insl xor mov bound push jl (bad) stos xor fadd add push sub iret je sub inc mov pop out or and jg push mov push js daa pop jecxz cmpsl add gs jmp mov in cmpsb add imul mov sbb xchg mov sahf cmp imul sbb xor call mov test sbb insl loop mov xchg lea movsb push mov adc cmp hlt sbb cmp add jb icebp les cmp push or add push jl add pop sub test and lar pusha cmp call sbb mov iret fcomps sub clc dec xlat mov xchg cli pop add aad outsb push cmp add mov and add or add stos out sahf fistpll jg arpl js inc rcrl jp aad out loop pop mov jl adc (bad) fild testl xchg repz sub dec mov aad mov add testb fcmovnu xor call mov out and cs mov push stc jno add fcmovb jo dec nop mov jne pand mov push cmc inc dec data16 pop adc xchg xchg fnstcw xchg mov mov loopne pop mov xchg and inc mov rcrl cmpsb outsb cmp mov sahf and std jg mov insb push unpcklps and lods xor adc in andb or push jo,pn xor hlt popf mov rolb push fmull cmpsl jne add sbb dec enter add nop mov cltd mov mov pop mov addr16 sbb cmpsl in addb sbb popa jge push (bad) mov sbbb pop adc pop sub mov add sub pusha mov fldl or sahf xchg jo sar add mov lahf lods (bad) dec sldt adc popf andl mov inc sub fiadd daa hlt sub es aad jp pop (bad) xchg inc lret bnd (bad) cld cmp out insb dec loop mov mov imul pop or cmp mov call jg add mov test fsts inc test fdivl out stc cwtl add insl dec sbb inc roll nop clc mov and xor add mov loop pop or mov nop push sbb sub adc mov xchg xchg sbbl jo sub cltd dec mov add and fistpl mov sub push adc mov bound mov pop cltd or out push cmp sub (bad) jo inc add pop popf (bad) cmp xor add and mov add ljmp cmp mov sbb mov add lea lods jbe inc cmpsl mov push fadds cmpsb into stc fs inc jecxz fwait aaa mov jg lcall clc push dec cli rolb pop fisubrl cmp ljmp or shl add dec sbb ss add jnp or andl pop and xchg insb or daa loope inc or addl out aam gs (bad) xor pushf iret (bad) fbld cmpl (bad) mov add (bad) lret test std xchg inc mov mov fistpl sbb les andl or dec mov lret xchg ret popl add loopne mov mov stc sbb add aaa adc je add or mov cmp and stos mov (bad) int jge faddl (bad) push fbld fstps faddl mov fiaddl (bad) adc xor lcall ret scas mov rorl (bad) xchg cmpsl mov int3 xchg aam outsl xor pop sahf xadd (bad) leave ss jg pop test stos push dec repnz clc cmp pushaw sub pop pop orb or dec (bad) push push mov mov and xchg inc xor (bad) mov inc std cmpl je aam add pop inc pop add mov add js stc add cmpl jnp add jmp jg pop xchg stos ja add imull and ffreep jecxz xchg fs sub dec and push adc mov sahf add lds movsl lret add inc addl xchg bound mov push fs incl jb sbb mov adc mov inc mov rcrl mov add add pop add xchg push movb movl add jno push mov out mov mov pop fcomps test lods sub add pusha xchg test pushf sbb jp scas sbb sbb push cmp add sub (bad) outsb jbe cs pop jae add lea jg push sub movsb data16 mov sub into mov sub pusha adc int popl test inc andb jl outsb add cs enter sbb push mov add push stos test dec testl add xor mov add fwait pop fstl jne xchg xchg and daa xor add lock mov mov scas inc lods mov jbe add add xor pusha cwtl repnz sub pop xchg sbb xor adc outsl lret test stc lock rorl nop xor or mov sub ss and and dec sbb sbb (bad) mov jmp inc fwait insl pop popf cvtdq2ps and fildl enter xor add pop jge inc into mov insl and xchg lods adc aam add mov add pushl add rclb repz je arpl mov dec jnp sbb lea movsb mov ret push pop or sahf add or dec aad add js loop subb and not sbb and mov (bad) push js mov pusha add fs xchg (bad) xor mov add jg mov cmp lock cmp mov leave test hlt lret sbb or nop test (bad) imul in cwtl sbb push fwait lods stos rorl lahf in cmp add pop ret test loope out adc add stc adc inc (bad) inc sbb enter (bad) add rorb idivb pop lods push gs add stos ja pop push xchg out cmp add popf inc dec jno add sbb inc sbb movsb (bad) icebp and aas ja xchg (bad) notb ljmp mov pusha aas dec popa or negb orb sbb lock xor lods andl mov adc inc sbb daa adc mov inc lock addb mov jae fidiv test cmp aas xchg cs or xchg (bad) roll mov or pop sbbl (bad) mov inc push adc mov ljmp push and incl loop out stos push mov inc dec xchg or out and xlat fwait test enter jecxz inc xor mov inc in negb jle push pop clc add mov fs lahf pop add je pushf test icebp mov pop jp daa jno aaa push jne jb (bad) movsl cmp and add mov mov andl stos dec mov inc add jo out add sub scas clc inc mov loope fsubrp jle stos popf jl add in adcl jo (bad) cmp daa fdiv int (bad) xor jecxz insb sti push add jle scas adc add addr16 mov dec inc repz push aas and xlat inc or repnz jne insb dec test inc push roll mov add sbb add int3 ss das add icebp xchg adc add fwait or stc test jge iret loope push add inc xchg jp js adc call cmp jnp mov (bad) xor jmp dec aaa orl aas test mov push mov dec shll add adc jns add bound push (bad) sbb push push cmp mov pop mov testl sar scas cltd inc adc add sbb orl pop add xor inc jno add cmc and inc cmp add in shrl sbb mov loop add push xchg scas ljmp out inc loopne andl lret outsl pop xor jbe pop loopne add loop push pop imul in (bad) sub jno cmp mov hlt test push stc rcrb lret push push mov mov ds bound xor xchg mov mov (bad) fbstp jne push cmp dec dec shrb mov cld pop imulb jge jbe mov pop sbb add mov addr16 (bad) mov add push mov insl pop and lahf mov jge sahf dec pop sbb pop push sbb test xchg hlt cwtl jp add ficomp inc iret shrl push sti (bad) jae add cmc es jmp out adc add xlat lods call mov orb push cmp mov scas flds fldt inc movsl cltd (bad) add cmp ja and mov loop loope fcompl add sbbl add (bad) xor fs (bad) fwait mov pop or ret mov add out pushf fist f2xm1 paddusw popa xor in add mov js out cmp cmp add xor inc in mull into idivb leave mov out pop ficompl cs jl std jno inc lods mov insb lods jo cwtl pop sbb dec add sub add jmp mov mov sbb push dec inc jne faddp cmp sub jge sbb in add cmp mov add push std int3 cli pusha movsb sub add not mov cmp loopne cmpsb in mov mov rolb ljmp sti add pop out push add jae mov shl orl outsl jl outsb test cmp stos cmp xchg jo insl mov or repnz xor sbb sbb xchg cwtl stos or cs mov jg xor jbe sub out add ss dec mov adc add (bad) cli movb mov jge add push cmp xor ja jp mov mov mov ljmp lahf loope cmc push (bad) and mov aad add or add and scas add sbb mov int3 dec add test adc add (bad) repz clc inc pop fsubs lods xor pop dec mov lret mov lods ljmp sub aam sahf sub roll xor pop adc mov inc test add xchg xlat pop insb mov jp (bad) icebp adc fstl aas pop push add push push lcall int3 jo or sarl mov cmpsl in mov andl (bad) test adc xchg mov mov xor or jg sub add jmp mov add daa sub cmp jo lds cld jp add (bad) shl iret push mov loop sbb push add shrl insb repnz sbb in and arpl imul out push add inc insl int movsl mov (bad) into add test ftst cmp add loope repz push rorl jbe rcrb cmp push cmpsl inc mov jmp mov push mov call push pop cmpb je sbb mov jecxz fisttpll js add icebp fsubr push fnstenv enter add sahf pushf sti inc mov das add mov call ret and push and std jb jne arpl lods xchg data16 cmc pop sahf jbe out mov sub xor xchg mov cmc xchg gs inc test cmp mov xchg and out loopne cmpsb scas push jnp test fadds add adc mov mov xchg push rdpmc and jnp cmp repnz dec ljmp (bad) imul (bad) add sbb cltd movsl insb add pop xor (bad) pop sub stos ja adc sbb out pop sub push fs or push xchg push scas add sbb std pushf insl repnz mov cmp roll jne cltd arpl out add and (bad) int3 fildl pop push push jns pop mov jae sbb cmp lahf in popl psrlq and add push movl pushf test push pop sbb xchg dec pusha dec add sub pusha xor mov (bad) xchg movsb cltd pusha xchg scas fisubl add jbe (bad) dec lret cmpsb out inc mov test xchg mov add add aas lret js dec mov fstpt pop imul xor rorl mov sbb mov js add cli arpl test les add cmp (bad) add adc pop inc shlb cmp pop cmp out and aam jbe push mov pop pusha fsubs (bad) mov inc (bad) xlat data16 add (bad) imul push neg xor stc xlat adc mov add jl add in push lahf push mov outsb pop push sbb dec mov mov outsl add pop enter push jns fwait or add inc insb jb inc cmp cmp cltd sub imul mov cmc add and arpl jne std sub popf mov push push cmp sbb mov add jae dec add xchg fisub lret or mov add repnz add xor or dec outsl mov push std (bad) and jae add not ret rorb add cwtl push dec in lea jg add xor xchg aad jge pop in sbb out negb sbb mov push and nop test fisubl cmc int movsl mov cli xor addr16 addb (bad) xor add jbe xchg sub (bad) mov rcrb sub adc inc les push addr16 and sub ficompl mov push add or cmc inc gs repnz orl mov push xchg add jae and (bad) dec data16 push lods add jmp aam cltd mov movsb jg call xchg mov jno xchg jb cmc jo es jl sub pop fdivl inc sub add push mov dec mov pop push adc jl scas add js push add and cmpl hlt add add or add push adc add push call pop les sbbb pop mov loopne lds add ret repz hlt xchg push mov inc sbb jmp jno add sti push stos inc pop add sub rorl xchg iret xchg and add out cmp mov cmp mov aas lock mov mov (bad) aad dec pop mov mov lret add aam movsb mov push test sbb rcll xor inc xor roll sahf in jnp pop mov mov stc jl and pushf add movsl xchg sub pop push (bad) pop test jno xchg or inc push xor pop add jmp mov neg add pop cmpsb push scas xchg inc and xor nop (bad) flds scas sub lods pusha fistp or inc inc jno mov call pop mov jbe mov js add mov cmp pop mov sldt xchg dec js aaa add or (bad) iret or fadds movsb inc shl jl adc ja call scas (bad) aam jl cs subps add mull leave mov sbb repnz xor jno std add loopne xor fistl mov adc add jns mov (bad) xor int3 insb adc arpl mov aam xchg sahf dec clc inc fs jecxz,pn insb mov adc shlb test clc fmuls ltr insb fnstsw lods sbb cmpsb mov jnp cmpb xlat les addr16 mov call sar imul mov ret test in stc mov pushf psrad hlt or add push scas out add mov add inc cmp pushf test lds and mov subl push sbb jb add xlat in lods push jle add fldcw notb push clc xchg xchg repz cltd aad add rorl ret inc inc inc inc in fcmovnu cmpsl cli xor decl enter movsb add jnp pavgb xchg add in xor push jle cld mov int jl add push cmp je sbbl jp lea aas push sub push lret popl mov pop or fisubr rclb jnp loope aam push lahf or add fsubr rcrb push fild mov adc add pushf cli inc jno rclb loope adc add mov jae jle cli push inc es pop inc cmpsl push inc dec xchg mov das xor insl xchg outsb js add fistl adc in lds incl out ja push inc and jmp add mov or call push js decb jge xlat or add jb cmp sub arpl ret fiadd lret lcall (bad) inc cld cmpsb es cli sub jge mov mov or insb add jp dec into std jecxz xchg pusha test lods pop or aam in jbe add movsl int3 nop pop mov pushf mov add psrld arpl jb lret adc jl mov lods hlt add es arpl mov push add cltd adc push movsb pop lcall lds add aad mov cmp fistl inc or jb imul cltd icebp dec sbb enter (bad) out scas sbb mov popf movb sub movsl pop add mov jecxz (bad) faddl mov sub inc add lds test mov jl or punpcklwd xlat pusha pusha cmpsl fsubrl xor adc daa loopne insb rcl xor in data16 hlt imull cmpsl push xchg mov push sub xchg and dec mov sbb rol add jg cmp mov lcall xchg mov iret pushf mov inc xchg mov aas inc insb add ds repz adc jns dec cltd pusha enter or pushf dec cmp cmpsl fistp add or leave jge movsb mov or pop add insb xorl pop mov (bad) xor ret sti xchg data16 scas pop inc mov xchg push add mov sub (bad) lds add xchg pop add adc xchg cmp mov fsub mov ret popf mov and xchg data16 jecxz outsb testl mov aam das test and test add idivl add mov shrl add in add cli (bad) add fsubp add adc cltd xchg mov add int3 notb add outsb nop sub push jl mov push add idivl sbb add adc mov (bad) mov (bad) pop aad jbe test dec mov aas pop loopne cwtd add movsl fildl cs push xchg das (bad) and into xchg ja out cmp add (bad) repnz hlt jecxz add js (bad) xor scas add lods (bad) xchg jle add movsl push cltd dec or jle adc lahf inc into mov js lea push sbb call cmpsb cmp inc push mov insl int add jo adc or aad fnstcw (bad) jb jle daa out mov iret pop scas push jg (bad) lret push inc xor hlt subl enter aas add je mov outsb jns sbb cmc add push push add adc xchg mov aad adc pop mov cmp je int3 je ret adc sub push xchg in dec add inc adc bnd mov insb mov popf inc add insl add stc cltd stc push jb aam pushf fsubr ja (bad) add mov loopne push jg mov xor and add (bad) out xor xor ret add inc sub and xor sbb roll and icebp pop fwait push add cmp jecxz mov mov lods loopne mov (bad) jne adc loop fmull mov mov into out add lcall ja jbe cli jo or (bad) int3 or mov pop adc cld pusha sub add add sbb imul nop push mov adcl jo dec inc sbbl pusha int3 add push add out sub cld divl ficoml dec cltd outsb jecxz and mov sbb cmp and add fwait nop and mov pop cwtl (bad) ficomp push pop cs popl cmovp or jo xor sub add ret mov outsl push lret test orl shlb mov cmpsl mov add (bad) cltd push mov jle add xchg adc add mov add xor and xchg arpl or add jle loopne xor add sub and push inc pop fisttpll adc scas (bad) dec fptan add and movl mov loope insb mov add sub lret data16 add adc lcall dec in jbe jge and cmpb out sti xor loope cltd das mov add fsubr mov xchg bound fidiv xchg loope push pop mov add mov add daa pop je xor mov mov pop add push call add xchg sub inc jle add sti cmp nop fiadd pop fildll or sub adc mov punpcklbw loop jp add inc das clc roll andl add (bad) sbb mov jl loope push push test cmpsb inc add addl in loop sbb js mov jns movsl inc xchg fisttp aam cwtl adc add fwait hlt roll mov push mulb jne mov shl jns add insb fadds sbb incl pop lods push shrl lcall cmpsb (bad) (bad) aam lahf add pop dec mov xchg test movb scas mov insl add mov jae add sbb add inc fcmovb daa mov std xchg in jno outsl sub adc push into push add mov xor jmp je add xchg xor (bad) pop or imul mov adcb mov or dec inc add mov adc mov adcl (bad) ret lcall lds or adc xor cmpl enter add in add fnstsw push mov adc inc add jns (bad) subb mov ja enter pop xchg push pop dec jmp out add xlat ret icebp and arpl add add sub xor mov cmpl hlt cmp movsl js inc sub cli in add adc adc lret cmp or adc adc sub (bad) dec or inc mov cld je sub mov jg add cmp movsb add imull adcl jp or lds and adc push cmp and dec jmp cmp or jne push add mov add out (bad) pushf shll xchg mov lds dec lock fdivl cmp add fs add dec loopne fisttp add pop inc dec stc xlat arpl xchg jno data16 aas adc scas or sub addr16 movsl daa sbb pop mov and adc add mov and imul popf sub pop out outsb lea arpl mov add add dec mov test push testb ja out std jo call xor inc mov xlat in add popf inc pop push stos pop add fidiv dec adc add sub out add loopne add jmp sti add (bad) jno test mov sbb lds in test loop fiaddl jno insl shlb aaa mov jp mov cmp repz in mov test dec jle inc xchg inc dec sbb ja add push icebp xcrypt-cbc cmpsl push es cwtl pusha repz arpl cmp popa (bad) mov rorl mov mov xor jne adc mov sarb push lods pop add xchg jle mull dec roll aaa inc mov loope add mov sbb dec add stc pop pop xchg pop sub pop mov dec cmc sub imul dec and fwait je xchg test iret imul push add mov push dec jecxz shrb inc jg in jo mov stc or fs jge mov add jae xchg add push and mov lods adc addr16 outsl add xchg mov pusha xchg mov cli or mov add inc cli mov mov adc jns cmp and ja xlat xchg dec dec jo mov add fsubl es call xchg cmpsb fild mov cmp add (bad) dec push xor popa cmc push inc cld icebp jno xchg or cmp fwait ret sbb movsl outsb test xor or sbb add daa into or ja push xor daa mov xchg add std jmp or mov jae mov stos enter add pop pop or add ljmp rolb xor dec mov (bad) loopne push fstps jbe mov test mov stos loopne xchg push fnop xchg jge xor sub rcr pushf mov add mov stos cwtl add movsl mov xchg jg pop sub lock sbb adc je (bad) jae mov pop ljmp add fmuls ss add lret push hlt jno vmwrite lock (bad) je push inc orl movsb outsl loopne and cmp clc js mov push push dec dec sbb pop and add pop pop add fisttp repnz add sbb je dec fldlg2 add mov add and dec mov loop mov mov clc jl pop bound inc mov xor out add lock pop pusha lret std stc nop add dec es les dec inc add and imul fistl loope (bad) fs add daa jle imul xchg loopne dec dec adc cmp sub add adc sbbl in dec sbb lret xchg mov mov adc xchg movsb mov jle dec subl xchg pusha xor daa dec add sub ss jae add pop in add out lods jmp sarb gs dec mov cmpb or pusha inc mov jge adc data16 out push mov mov call incb cmp mov gs mov jns add jl loope xor push shlb int3 cli sub lods pop jmp xchg and add jge mov mov jmp pop fiaddl movsb js in sbb les lcall test mov mov add lcall cmove pop pushf xlat mov stc out ret sub push cmc or sbb stc push dec in fnsave rorb jge stos add dec int3 lock add mov out sahf add movsl push adc inc mov enter movsl inc lahf dec jae push xchg mov add insl pop ds and inc push mov add or add sub lea push mov and adc ja gs push aaa jb add rcrl xchg dec insb add sub ret dec aam cmp orl sub (bad) push iret cmp stos ja loopne insb rolb pop pop sbbb add leave push adc test mov push sbb addr16 repz lods sbb xchg cmpsb pusha xchg ret insb adcl push adc clc dec arpl (bad) mov mov ja je test pop jp sub push and stc aam dec movsb mov data16 das icebp in cmpl jne es movsl fbstp or cmpsb xchg popa sbb repz cmp push inc mov fs mov std sbb mov cmp jnp xor add fistl mov lahf lods dec sub push sbb sub ja jl popf add sub in ror add (bad) in and faddl into push hlt int push orl in mov sbb jge test add clc lcall cmp arpl mov add mov push add rcrb addl push movsb hlt push or subl shlb adc jg fnstcw push adc push stc lahf test xchg inc dec sar ljmp scas or ljmp dec mov pop cmp in pop add pop push aad sbb cmc lret js add (bad) xchg addb adc pop push mov xchg dec xchg push mov fsubp jecxz mov sub push ficomp js dec xorl jl lods add cmp test mov mov insl adc out test (bad) xor lcall fs mov jns add hlt loopne leave cmpsl pop add (bad) cli clc push jo add repz ss adcl add cmp pop pop cmp pop mov loop cs adc push push pop lcall sbb popl inc dec cmpsl sub icebp add ja cmc in nop repnz mov fisttp add jno,pt inc inc inc mov lock imul add outsl xor xor outsl repnz enter mov jno add mov cmc mov add (bad) push xchg inc aad add sub loopne shrl inc pop dec repnz mov jg out xor mov aaa pop test jns fldcw dec add add mov (bad) sbb pop sub clc in aas inc jle add pop dec (bad) add mov fbld sub in add mov add jl fstpt outsl jge addl shlb daa add pop dec cmp movsl (bad) xor mov jb push lods add lds sub sbb cld fwait add mov rolb bound inc mov dec xchg jmp int push into pushf ljmp orb es or mov xor xor jle shll vmovd loope test lahf call popf ret imul gs nop cmp add in pop mov enter push mov cmpsb push add out ja jae sub add outsb push rcr jecxz mov xchg mov jl xchg imul jns cwtl sarb pop jge pop (bad) in popf out push push xor push add sarb or pusha fimull mov cmc mov jns add (bad) mov pop enter add loop in es push add mov pop shrd jmp (bad) add outsl pop int jb add rorb add cmpsb (bad) rolb aad inc iret es pop push push sti and pop jne test xchg insl sbb xor jb pop pop mov dec stos add cmp lds mov mov sbb lods or in das jle pop add ds repnz add mov pop jno pop sub stos rorb and jle aas inc add inc mov push (bad) (bad) cmp and add fnsave cwtl cli xchg jmp fwait add dec cmp sub js add (bad) push enter fwait add mov push sbb and lret sbb arpl mov pop add mov rol cltd repz sub imul cmp sub xor jns add (bad) jno pop dec ret xor mov add adcb or inc call lcall add addr16 fldl lds and inc fcomps jmp dec push rolb aas loopne sbbl and add pop lret mov loop jecxz sbb daa dec scas inc add xchg pop bound jp and sbb movsl cmpsl nop jb jle fild and sub fs and inc mov rcll rorb out or pop add iret (bad) push jae add outsl out jae das sub mov (bad) xchg pop sarl add cli std (bad) mov mov cltd leave rclb outsb test sub jle sub add imul mov add fstpl scas xchg cltd out pop xor inc ret nop cmp scas mov jecxz js mov jge xchg fldl dec jle repz push xchg mov dec pop jbe add cmp or aas stc add lcall jno add mov inc push into inc leave sbbb mov add sbb and cs xor adc lock and xor iret sub pop jl cmp xchg add mov dec push xchg roll mov insb adc add mov cltd jmp cwtl xor orb jb add inc push jp (bad) ds loope push adc mov loop inc call add xor ds leave fldl xchg in iret outsb mov stos mov rol add pop and orb mov add pop cltd insl push sahf test ficompl xchg cmp adc clc dec push and fldl xchg cmc cmp (bad) (bad) test negb insb int cmp lahf pop outsl or add mov js add push sbb sbb popf xchg lock adc inc adc in dec mov pop divl ja add ds stc add aam iret cmp dec andb (bad) xor cmp add imul xchg ds xor incb int3 ja out sbb in lds jg cltd xor mov cmp lock mov sub out or adc lahf push divb arpl out sub and mov es insb jo out or movsl cmp in outsl mov xlat sub inc fstpt addr16 push hlt pop and xchg daa (bad) sti cwtl fimul mov push add lods xchg sub es push aaa xor pop sub mov aas scas dec add or xor shll pushf cs inc push lock outsb jo (bad) idivl adcb roll call dec add sub mov jnp mov roll jae fs repnz insb mov (bad) pusha fcoml popf mov add test stc adc add mov fimull (bad) out add in and dec mov add mov push jecxz stos sub sar mov add mov jo (bad) out imul add or add xchg mov or das (bad) ljmp pusha xchg inc fs push jo xor adc movsl sahf push cmp xchg add inc lods or mov jb adc sbb jge dec nop pextrw mov xchg stos sbb mov cmp lcall mov xor (bad) xor into add ficompl stc cmc xchg outsl pop cmpsl daa testl push cmp fisttpl inc roll cmpsl cmp in movsl into add push add clc cmpsl out xchg jae add (bad) fldcw inc loope shll jne vmptrld mov push clc push jle je fxch insb out add pop or andb lds fildl adc mov test lea ja subb add xchg sti cmp jae es rolb daa data16 xchg jnp xchg pop in pusha bound pop add (bad) lahf sbb outsl add imul and clc fmul (bad) mov add data16 jl daa sahf dec cmpl xchg std lahf add sbb enter roll sbb xor pop cmp ljmp roll test clc (bad) pushf mov mov adc push (bad) jbe xchg (bad) in xor hlt je sub fsubrp inc (bad) int3 inc lret repz mov xchg sub xor dec in test loopne mov or sbb sbbb lds int add lret or in sub imul mov fcmovbe (bad) (bad) cmpsl call shll mov movsb out incb pop je mov adcb std add lcall and sub stos xchg iret test inc adc add or sqrtps imul idiv in loope mov and inc dec adc push pusha pop icebp adc add dec mov add fistl sbb lcall imul icebp ljmp push popl cmpsb mov inc orb fst xor js inc add outsl xor outsb or aam push ds fninit (bad) popa push adc push add xchg pop mov pop ret aas int dec fildl inc in adc jg mov push aaa and cmp scas (bad) call es add adc fbstp add jle hlt xchg push outsl pop pop test mov ja jae popa xchg mov mov popf imul inc cmp pop movlhps xor and pop adc push or scas cmp jg mov adc add (bad) add mov aaa cmp jbe add xor dec enter sbb test mov loope bound dec pop leave add inc jne sbb jnp fldcw fadds (bad) dec and or jl js or das adc fldl stos mov inc cmc mov div setl loop in inc sbb movl xchg add xor into in (bad) std xchg lret in sbbl loope add sub pop test jbe xor mov mov xor outsb pop jp cli adc inc jno adcb push outsb cld add mov mull jbe xor cs sahf dec std (bad) mov dec and pop dec add push out and andb cwtl pop and test xchg lods and out ret inc jo or xor xor rol pop and cs push aad (bad) or dec pushf xchg mov sbb and push fxtract add pop adc cwtl adc pusha add pop jl add gs add jbe mov (bad) pop popa jne add pop mov pushf xchg mov in add aas popf sub adcl pop cmp add pop into xchg ja sub cltd subl pop xchg push adc lods aaa jae xchg add and ficom aaa js add stos call dec add into out inc xchg sub mov mov sti loop mov pop in jmp add cmpsl icebp lock stc cmp mov add sub leave out test imulb bound sub outsb sarb stos jl mov leave push ds rolb mov cmp xchg add lods push adc add pop lcall out sub ljmp mov cld addr16 lea roll fs ss out cli mov inc out mov jne and mov scas add (bad) (bad) fsqrt or js lods inc and xchg lahf mov sub sbb pop mov add jo sti xchg std bswap data16 pusha ret movsl in rolb sub fldenv jge incb lret inc nop out xchg movb mov mov and insb inc or pop cmp xchg sub enter mov pusha xchg jge aaa push rclb jns or mov aad fnstsw mov push fmuls add pop (bad) push pop les cli xchg imul stos ret cmpsb addr16 out add mov das sbb push inc and int3 adcb jb fildl push add lea mov jp cmc pop ffreep into or xlat lock lcall jl movsb inc inc (bad) jb cmpl aaa jp xor sub push mov push jmp push rcll pop dec xor mov pushf adc xchg cmp popa mov mov pushf test fwait movsb push leave and data16 add cmp inc cmp jae inc mov repnz mov mov jmp xor leave add sub or cmp test dec cmpsl out pop add test add push mov jg test lret les cmp clc dec dec ret add fcmovnb and test xchg inc xor (bad) add push stc sbb jg sahf mov dec (bad) out clc add sub mov mov cli pushf xchg cmp inc fs pop add pop inc les sub adc outsb push push inc adcl add aaa fmuls add push cmpsb icebp add cmc inc sbb fwait push and adc pusha inc into mov inc movsl mov ljmp mov mov loope cmpb pusha fsubr incl out aad pop push (bad) mov cmp pop inc jmp adc pop mov aaa sarl mov push sbb dec out loope popa std insl inc add fs int jo xlat jo addb jo std lods test int3 jb inc jge pop dec test jg sbb sbb add inc mov loope inc mov cmp jno addl add lret int3 loopne sbb xchg testb sahf xchg mov aad pop jmp stos push add pop jbe popf mov nop outsb jp je orl andl mov add cmp es test dec mov or mov (bad) push int add leave int3 push sbb add inc (bad) fbld inc jge jmp andb out xor xchg stc imul add and scas push adc xchg lcall add fmul jp pop sbb mov insl xlat sub pop add push imul repz add or adc outsl stos nop sub lods sub lcall pop dec rorl jp subb pop add popa inc and mov push and aaa add out aas lds int orl push xchg add sbb push add push fistpl cmp movb dec dec push fmul js jl add cwtl daa test add popf mov add (bad) imul dec bound decl jge cmp add sub and inc ljmp pop inc jne arpl mov (bad) fistpl push cltd xor in mov inc fdivl popa add xchg sub enter mov imulb mov decb add fstpl push aas fbstp dec cld ret lret lcall adc xor add cs sahf cmp mov adc fst jo and ret sub fsubs mov data16 dec mov test mov add lods int3 loop mov add shrl jae add inc push sbb test add jge add inc mov pushf add cmp push mov in (bad) mov add daa into mov sahf stc out add push xchg lahf (bad) push rcr dec pop or push xlat mov mov cltd mov lods (bad) pushf pop (bad) adc add dec adc add or mov sub enter dec mov test adc mov cmp mov sub xchg mov or xchg pop lret jno incl dec data16 enter add sbb ror mov call das fwait push add cld clc sahf jmp xchg add cli push mov add inc iret xor jecxz fldl2t push inc imul sub jle and pushl mov jp adc lret aad cmp aam out or dec pop ds rolb daa leave aaa cwtl jns lea repz mov test lahf movb cmc loopne aam cmp add lret jle cwtl and xchg stos jb mov add repnz sub add int3 fs mov mov jno add js cmc push sahf add mov add inc add mov mov add pop das mov inc cmp add in xchg sub stos jecxz add cmp js popf xor sub out sbb push push sahf int3 cli pop leave and inc push sbb inc add fwait dec aam and or mov or popf dec mov aas add int3 or std cltd bound out ror jb mov loope mov add push push inc (bad) mov in or pop xorb in in je push orb in pop dec bound cmpsb out repnz xchg jecxz and mov loope add pop cmp outsb addb das lretw cmc add daa sub jle mov and inc ljmp and cmp lods fistp add imul and loop add pusha xchg sub mov pop xchg xor mov mov sti push push dec add addr16 sub cmp mov test pop pop sbb pop mov inc sub xor add xchg xchg inc add negb and scas sbbl addl and or xlat (bad) pop add (bad) jge dec into add pop push add mov jg add dec insl scas xor popf roll jb adc out pop roll jae add fistpll orb rol jle pop add (bad) (bad) repnz sbb sub sub pop stc fnsave sub movsl daa ret fisubrl add mov push jns movsl jne xor loopne mov pop leave cmp inc push popa xchg xchg les dec je inc fstpt mov (bad) jbe daa ljmp loopne jp stc add and pop xor xchg dec (bad) js jecxz movsb xchg push xchg popa adc repz xor xor mov dec stc sbb sub inc xlat lods loope in mov add sbb cld dec out ja mov or rclb mov faddl xor into inc mov add pop mov inc fs jns xlat mov cwtl or xchg pop ss aad and repz cld push mov mov adc xor dec inc sbb stc mov add push sbb lret daa pop bound add mov addl cmp mov add rol cmp dec cmpsb and call inc jbe pusha pop sahf in add mov xchg add push mov add xchg jno aam js push loop faddp inc xchg jmp adc lret jp add ret arpl cltd mov inc int3 cwtl xchg fwait xchg jle add sub ja push xor pusha pop add stc push add inc cs aad pushf inc add in das add push inc dec outsl faddl xorl inc dec stos mov in popf lahf and fisubrl jmp jecxz cltd rcr inc addl fs mov cwtl lea iret pop add mov nop fildl shrl pop outsb xor daa add fs (bad) test add add cld fcom add dec popf scas and pusha xchg add sbb mov add insb adc and shlb int js pusha jb push add movsb or fcmovnb aam in ds add dec xchg push test mov inc add test jl,pt jnp out pop sub add pop mov sbb xorl push xor ret popa jno sub (bad) daa adc mov popl add and sti dec popf xor jae or pop scas ret adc lea decb sbbl sub movsb mov outsl out push loopne push mov gs lock mov jmp push out push add mull sbb xor test outsl lods pop lock fwait cltd add sbb dec and xchg mov adc push push add jl jo scas pop outsb add mov jmp xor btr cmp mov jge inc (bad) pop xor sbb stos add sbb pop xlat add xchg jae mov stc push mov popf push cmp xor pushf or imul fs rcrb jge add or jae jo (bad) int cmp (bad) push hlt inc add dec imul xor (bad) sbb sbb sub out mov iret cmp pop mov insb inc xchg mov inc mov add mov add xor or dec inc fninit dec leave mov push int push and jno add inc enter mov push sbb pop std add jno mov aaa lret xchg sarb insl shrl mov addl add hlt repz test cmp (bad) adc and (bad) sbb cmp mov ret inc mov fistp add jp xchg push mov test and cmp mov and (bad) fcomps rcll cmp stos jg add outsl fwait lret and (bad) out lret (bad) jo cmp and cmp fwait jns es repz xchg xchg sbb out add inc lods popf and test test cmp daa or int xor (bad) jbe sub cmp add shr jns inc les add fcomp jecxz xchg add push push in sahf sbb add jb xlat dec mov xchg and adc jle test ffreep mov add pop ss and imul and pop add dec bound ljmp fcompl jmp leave ret mov arpl cli jecxz add dec mov jae add dec in outsl mov dec pop int pushf cmp jo (bad) sahf imul jnp lret (bad) or mov mov sub or sti gs dec mov out popf mov fildll adc pop mov mov outsl jg mov out mov push ds sysenter add mov cmpl adc cmpsl lods jae out test dec scas orl lock shl cmc pop dec mov dec in sbb xlat loop or pop roll mov lahf mov dec fst or popf dec sbb inc lods adc movsl addr16 out sub push pop loopne movsb divb test rclb jo mov mov (bad) pushf sub jns pop stos lret xchg aam sahf jge addb push jmp jp pop addl aam mov and enter fwait scas js jno cmp add (bad) ljmp shr aad mov stos add gs movsl xor iret inc xor fimul xchg flds xor push add imul stos jns add outsb ret sbb dec push push jae lods leave pop (bad) in loop das es jp sub inc sahf pop in scas mov jo pop roll jp push outsl add sub mov cmp add scas sti cmp xchg sti add jb (bad) adc inc sbb sub mov verr or pop push leave ljmp rolb add aaa loop add mov add mov call push decl add jle mov sub sbb loop mov mov add push pop dec add stc loop outsb push pop testb inc inc pop rolb sub or stc lea sbb lds sti push jg mov (bad) xchg mov pop push cmp adc add dec outsb push pop adc cld in mov pop addl dec mov test xchg sbb (bad) loop aas add xor je loope add xor add add jnp xor jbe dec pop add or nop add adc pop test aam mov xor add enter xor pop add and inc xor outsl inc test les jo sub insb addb mov sti bound add mov (bad) loopne ficoml jle cli imul add sub in popf add cmp dec sbb xor insl cmp add subb and testb mov xchg push (bad) int3 je pusha dec insb cmp ja outsb enter sub and in (bad) jmp mov cmp cmpsb test icebp stos (bad) xor sti jno aas cltd or inc loopne xor add scas cmp mov mov ja insb fadds jnp add sub add nop adcl cmpsb js xor mov gs push dec pop cmp sub mov sbb add idivl daa andl adc rolb cld sbb sti push lods and std or pop into (bad) cmp es sub mov mov ja cmp aaa dec pusha clc enter pmulhuw inc xchg je add mov adc dec add jl pop fisttpll push push ret aam mov push xchg pop gs stos rdmsr pop into inc jmp jge popa mov imul dec test data16 movsl xorb sbb js loop addr16 fs add loope pop xrelease lds inc fimull ret adc roll stos clc je push push add mov lea mov mov mov fcmovne pop mov pusha js add adc test sbb xor inc cmp pop repnz inc cmpsb out push jno add add popa push dec dec cwtl (bad) dec push testb test xlat adc inc push sbbl xchg dec outsb sahf mov roll inc stos mov pushf pop (bad) cmp rolb aaa xor loopne adcl stc inc lock add mov jge mov xor xchg cmp stos movsb or mov jl sysret test dec loopne pusha sbb jno xchg push fdivr ret jb or push insl jae jb jmp (bad) into (bad) cltd je add lea dec lahf jmp inc data16 inc xchg (bad) ljmp icebp xadd es jbe xor popf lock sbb add fmulp and mov cmpsl jne jp add cwtl loopne out fldl shrd cmp cli mov incb nop nop xchg icebp out pop inc xor jg dec add popf cmp push cmp f2xm1 je push ljmp pusha pop sbb pop (bad) fild push mov mov xchg and clc adc in add mov mov sbb aas add cmp sub pop mov lret add push sti and add push fmull sub popf pusha adc pop xor in add pop sub sti bswap and punpcklbw adc sbb dec pop xorl mov pop (bad) push cmp inc (bad) lds push dec ja movsb cmp sbb jp and shrb test rcll adc fsubrp (bad) (bad) xchg pop fildl cld xchg sbb mov pop push mov out jmp xor outsb fistl fisttp xor push aaa aam and movsb dec adc dec jns add inc sbb jb jg aad repnz adc (bad) data16 lcall mov dec lahf pop jo add in inc push leave mov inc repnz hlt loopne mov adc push dec mov and add xbegin add into mov push mov leave mov (bad) sbb loopne jno mov test imul sub out add ret pushf or mov dec (bad) test xchg mov and loopne sarb add push xor sub xor or jg push inc inc lahf add fistp inc in add daa fisubl cmpsl sbb cmpl cli mov je pmulhw add cwtl add into xor sub sub outsb xchg pushf add jmp jb xchg orl jb inc add mov testl aas push clc mov (bad) into push orb insb js in add enter sub sbb icebp add push inc and or jl mov add pop mov add or cs subl rolb cmp sbb pushf inc in (bad) lock sbb (bad) test sub data16 add lods pop sbbl testl out sub mov pop popa ja in add fiaddl mov dec add movsl sbb add cmpl aaa cmp (bad) jp xchg fcomp push push xchg fbld cmpb pop cli insb mov and mov jl ss daa gs jno add dec and pop ljmp push add imull iret inc into push add mov jo add add cmpsb inc imul mov add mov jb fs test out jo jnp cmpsb push add ss sahf aaa adc outsb sub fs js bound lods xchg mov jecxz pop add or mov jns mov add into fimul pop inc (bad) popf scas add in (bad) popa add lods lahf ror int cmpsl orl xchg cmp inc add xchg das xor mov xlat and cltd fwait lcall jp stos out xor frstor mov clc inc ret test and insl and mov push push add popa mov inc xchg in push or (bad) pop xor pop out orb sub sbb pusha nop inc leave mov inc movsb (bad) stc lds sub and test cmp nopl lahf or pop sbb sub roll gs xor bound ret (bad) and or in cli sbbl jae mov add pop out jno rolb lret out mov test movsb push inc sbb or or cmp xchg test add repz jp sahf mov adc xchg loopne pop sbb addb icebp testb add mov add pop insl add fisttpl mov inc adc and push mov shll cld mov outsb cs js add imul push inc add sahf faddl imul icebp cmc mov scas pop pushf (bad) test push xor popf clc add scas and outsb jb faddl sub (bad) mov mov adc nop pusha xchg das pop hlt xchg and inc imul shrl adc setbe sbbl jle lock les add inc push push lea sub call add enter jle insb sbbl sub rclb pop mov add stos mov js add mov pop out add repnz sub pop cmp pop xor xchg adc fucomp daa loope addb sbb adc js mov cwtl dec add mov gs out push push je and aad jg imulb bound dec test or xchg clc mov mov test pop xchg add xor iret std test or sti add dec (bad) adc cld mov xor xor cmp xchg add fsubrs sbbb push adc inc and pop or lods add fwait dec mov push (bad) mov je add add lods sub pop mov jecxz cmp push js repnz std rcr lahf dec mov add (bad) push clc sbb jbe enter (bad) js cmpb dec test dec inc data16 popa shlb mov mov push popf cli nop xchg (bad) push roll aaa mov and add repz adc mov popa push and xchg (bad) xor xchg (bad) sbb jle cmpb int3 call or xchg rol lret dec xchg lods xor imul jbe add dec mov add insl pop data16 jmp jns pop sub (bad) aad cmp popf inc clc ret and rcl out jg xor xchg sbb inc ret add or insl push cmp xorb lds add je sub lret ljmp inc or aaa lods subb mov fdivr out cmpsb in or push shr rol mov (bad) in adc add into cmp and dec imul adc js xlat sub add xchg inc das cmpl add inc and cmp inc mov in add (bad) arpl aaa add adc les in orl inc loopne lret add mov xchg pop and jle aaa les xchg add xchg mov xchg push popa xorl or adc cld adcb xlat cltd mov push jge add pusha push cmp add sub add jne stos and push add jmp add cmpsl cmp add rorb or rorl push xor insb ds std insl out gs jne rcl add mov es add movl addb stc mov sbb xor adc lock mov les xchg cmp cmpsb dec pop iret inc add dec mov add adc jb sub enter push dec push test roll cli xchg and add aaa mov incl inc out jp pop add repz fbld test pushf sbbl adc lret jmp add in xchg pop test add xchg add adc and cmpsl jns add (bad) fnstenv enter je xor orb jge or dec hlt push adc outsb aas sbb adc ljmp add pop arpl push mov sbb adc sarl sub add sbb sbb lcall add stos push jnp mov (bad) loope js add flds movsl pushf mov cmpsb addb sub jo enter or ret jg into pushf gs js cmpl add in add add cmp jge xchg sbb add fwait cmp ret aaa pop sub xor leave inc xchg stc add mov add mov ss dec out push sbb cmp scas je pop movl lahf hlt or adc inc xchg (bad) je push add in faddl cwtl sub pusha and add notb aaa xchg add xor in jns add fistl scas or in notb push inc add xor pop movsl add (bad) push test xor jne jo adcl test loope repnz inc dec je add (bad) jecxz add push rorl ficompl pop xor cmpsb notb das out nop jp shlb ds lret gs xchg outsl int3 xor sti or sub cmc leave cwtl aad ljmp inc enter call add adc jle jbe mov pop cmp sbb mov push ja scas dec mov (bad) ljmp in test push andb cwtl add out add daa mov sbb les xchg test or add in mov shll and push mov mov orl test arpl pop (bad) sbb pop ja xchg lods pusha sub push pop pop add dec pop xchg sbbl pusha les push sbb xchg lods add (bad) sbb in cmp and mov or xlat sub sub mov sub out pop cmp jo xorl int movsl push mov or inc xchg adc mov (bad) dec fdivrs add add cmp enter jno jecxz cmp add sub ret add cmpsl push leave pushf dec sti incb and lea add int fildl and dec ror ljmp movsb out add add in adc vmwrite inc pusha daa shrb mov cmp mov add sub push mov lcall ds dec sub movsl add push jnp push pop mov outsl out into sub cs data16 std fiaddl jno jp out enter pusha aaa adcb arpl inc sti mov pop inc je add mov xor mov and (bad) jae add icebp pusha fldt xchg push cmp sub loopne add xor in xor dec cli add mov pop mov out push jnp sub divl lds fistpll sub mov (bad) jne lock add mov add jmp sti aas call push xchg jns lahf imul add add xor add lret adc jns add les mov cli mov or repz (bad) pop xor add push adc xor dec add fucomi fsub dec jle mov jno (bad) fldl pusha add adc cmpsl mov xchg (bad) into push out test add mov inc pop pop fsubrl lods xor add loop adc inc mov inc sbb xchg push stc fmuls movsl mov mov aad outsl add sub addb pop data16 add mov pop add adcl test in jge loope (bad) leave and test add mov inc pop and fdivrs add add adc stos pusha icebp rolb aaa ss movsl cld nop int3 add sub orl inc add xor mov in lcall sbb cmp adc bound xchg jmp stos cmp cltd loope fldcw dec pushf jle and and insl cmp add add xchg lock mov into sub push test in xchg imul or aas push and mov rclb push and rcl pop dec cmp dec movsl mov xchg xor js jmp iret adcb add and add push jo mov roll stos jge imul push mov and bound fistp add les push adc mov add inc loope insb out (bad) call add imul pop (bad) push jnp or pusha test lods sbb outsb out inc jp aad add inc mov or loope mov mov jns lcall test inc and cltd xor mov mov faddl fisttpl pop xorl add add push sub mov push xchg mov (bad) in ja cmp and bound pop fstl jne sub popa mov jle add addr16 push shr aam add pop scas cmp pop js lock lods ret pop mov jne cmp add mov cmp push jle add (bad) pop sbb mov mov subb mov pusha sbb clc pop sbbl stos mov mov pop sbb adc push dec outsb inc sub sti out pop in sub cltd lcall leave add in sbb add lret pxor movsl xchg iret int3 out call fsts andb fwait bnd push sub in xlat xor sub inc call add xor inc hlt inc aaa dec pusha add popa fstps lods ret mov mov lret sbb in xor adc push arpl iret test outsl inc add sbb pop jb popa adcl cld cmp stc out (bad) xor mov cli adc mov push test add stos imul sub mov push stos loope and jb bound subl push push add inc out cwtl out push je (bad) arpl les in sti pop shrb fs outsl inc mov xchg add lret subb cmc and lahf lock sub js ret sub push sahf test sbb add loopne cmp xchg adc addl int3 mov add jo xchg or outsb subl ds add pop add jne mov stos mov xlat lock bound leave dec jo xchg pop mov mov cli xchg sahf pop push (bad) js and cmp xchg cmpsl push sbb mov int sub rcll mov cmp test jns add or or sub sbb push shr incl push mov xchg test test rclb addl or cmpl cmp add jo jp outsl add lret or rol repz jle fcoms repnz test cwtl movsl adc cmp inc inc mov je sbb fmull jle fs xchg (bad) mov (bad) cmp add aaa jae push loopne pop aas inc adc sbb cmp add (bad) lock dec fstp add cmovge xor sub pop add sub sub mov lds dec insb ret incb xchg xchg andl dec add mov xlat or or scas lret xchg jns pop and sbb add dec mov pop fldt aas jle xchg mov pop or outsb mov xlat and cltd jbe or inc dec add cmpsb ss mov xlat mov stos xor adc push rcrl les das pop push out mov sbb jmp lret push daa ret call repz hlt add jecxz popf jbe and jae jns add xchg add cmp pop test jbe push add (bad) or shll pushf jns add test rsqrtps push outsb add jb add xchg insl fwait push mov mov js push jecxz and paddb clc add arpl pop add sbb ds adc mov stc aas subl xchg jle add pop leave dec out les add jae xor sbb lcall sub mov pusha ljmp dec fstpt pushf sbb fstl add daa sbb mov lods popf dec outsb jge iret test fild inc cmp loope popf out xchg fidiv inc (bad) fbstp add add jae test or cmp aas mov pop jb cmp cmc mov add pop xchg adc shrl add incb jmp inc jge in add or pop cmp add mov scas add mov loop ljmp inc mov out test call or nop test (bad) (bad) loope push lea pop add clc push fsts xor add roll sbbb cmp xchg push cli ja mov pop and orb push pop (bad) xchg lret xor and add push mov pushf and fwait jo push push and (bad) inc andl push pusha arpl cmpsb add pop imul test xor or stos add enter sub fadds xor stc aad inc inc insb je xorl or sbb fisubl lahf sub cmp push push sahf or subl add pop fs fistp movsl add lahf aad inc mov jne or in jno fs and jae int3 pop hlt movsl mov add pop add or add xchg into aaa lea or mov icebp out gs sbb cmpsl xor orb sub pop repz in aad jmp jl mov and enter roll add jae and cmp jo,pt nop push mov add jmp scas aas xchg add mov fadds jns inc cmpb and int3 dec inc mov std idivb inc adc adc jl xchg popa pop mov pop sub pcmpeqb jae add mov xor orl jl push pushf insl xor add inc imul rorb pop jecxz sti add rorl push out mov push dec fucomi or sbb out popa add adc (bad) (bad) xor ljmp sub xchg divb stc and dec subl arpl and mov out and add mov test mov sarb hlt aas movsl (bad) pop int3 in add loopne out inc xchg test add xor in lahf xor push aad inc test cvtdq2ps out pop add std movsb and imul stos add and (bad) aaa or icebp rolb rcrb xchg and adc jg,pn xchg xchg or mov xor fwait sbbl or sub or add mov xor add cmpsb aaa test pop sbb push ret jns add cmc sbbb jp dec add and cmpsb mov add pop sub loope (bad) outsl cwtl adc dec subb inc and or lret mov push jbe mov fwait cs mov subb xchg out pusha xchg shrb mov pusha xchg xbegin adc (bad) jle cmp xchg xchg mov ficompl adc add es cwtl xorl push dec add mull mov pop mov cmp jae pop imulb push inc repnz in pushf mov icebp mov jae pop add or fstpl lock mov xchg js mov jnp adc mov test ss arpl ja cmpb test insb xor outsb and add jecxz decl add add mov fadds je lret push push incb jo iret dec pop mov lcall push mov add or lods sahf xor iret (bad) mov roll movsl jbe jle or pop repz test das ja add aad imul insl mov or imul pusha lret add fidivr ret jbe lock sub adc insb (bad) and leave push push dec mov mov mov cltd adcl sbb inc pop pop rcll mov inc sbbl insl loop ljmp popa aam xor add xchg movsb js insl adc xor lods mov subb adc cmp pop out add fwait inc scas insl cli inc add loope fdivrs add pop test pushf and sbbl jne ja push movb sub test inc mov pushf ret fildl add cs xchg test sbb (bad) das adc scas into push imul push add cwtl xchg mov inc inc adc pop call jae mov ja lahf dec mov sbb fildll rsm mov inc jo in popf dec jnp xchg inc lret lahf inc pop add cmp or scas add andb pop adc dec outsb dec bound int adc push push jecxz addr16 sbbl push (bad) movsb scas add pushf jle aaa push lret jns push pop add in in push cmp sti push sub jp push mov dec add jbe rorb jbe int and imul fldl insb test xchg (bad) std cmp mov add xor and add pop loopne add or mov inc ficom ret int adc add pushf pop and mov xlat add lret (bad) sub cmp pop push aas lock and add pop xorb ret jg test stos add push popa lock cmpb sbb popf mov out in inc jb jo sbb push add sub add aam push movsl add dec jge mov or fistpl mov lods incl sbb xor cmp add pop ljmp imul imulb push mov push (bad) in fildl lock movsl movsb inc add aaa sub add cs mov jnp sbb fiadd test lret mov pop or data16 mov jg movsb xchg add aam add es lods and inc cmc imul mov add mov add imul or add mov sahf aam inc roll fisttpl mov dec add daa pop lea add mov push rcll es sub out popa add sbb mov and dec movsl aas lea into fucomi push pop mov outsb (bad) repnz cmp add mov xchg jg cmp decl xorl fmuls mov fwait jae jmp out mov addr16 cmpsb cmp push add dec pop inc xor in mov and inc cmp pushf stc jmp std add pop lock stos push mov sbb jno lahf xchg adc add outsb repnz adc sbb cmpsb aad insb cs add mov mov sti inc add lock pop add insb in (bad) out xchg pusha outsl add jae pop sbb jnp ja add (bad) mov lds jne roll jns xchg adc sub add out pop lahf mov mov and cs add mov int3 dec jno test popf inc cwtl shrb cmovno inc inc push dec aad jne rcll pop add jbe or or jns ficoml daa loopne out xlat push jo lods dec lahf xchg add inc rcr add arpl push adc int add cmc sti shrl xor xchg aaa clc mov add (bad) push push popa loop pusha mov lods mov dec xor leave xorb mov and xor add (bad) adc add aam add inc jg fidivrl ljmp jne dec add cs add xor xorl icebp inc js adc add sub faddl push xlat in pusha jge ds pop hlt add dec je add rcrl loope aad andb sahf data16 adcb call or add sbb scas ja add rol (bad) fld adc rsm (bad) pusha mov and and xchg cmpsl mov add jne je lods mov and addl shlb push imul lock fcoml add lods sub stos dec call xor add mov add jecxz arpl ss fs into or add out pop xchg test pop cmp enter sarb push xlat repnz mov aam mov jns mov mov lret adc scas mov jae xor mov lds cmpsb cmp sub and ret std in xor cmp jnp adc cld sahf or add cmp pop test add and xor xlat roll mov sub cmp sahf popf inc rcrl in jecxz pop sbb add out mov add jne add idiv lds add sub push jnp mov mov mov in mov sub xchg add enter nop push add cltd test xor add lahf xchg into add pop fdivr es add and aas into mov xchg inc fdivrp test xor adcb cmp (bad) (bad) cwtl adcb icebp dec jp pop js xchg add fcomps (bad) jecxz stos inc (bad) pop popf dec adc add test push push push jne add xchg add or lods imul push or repz xor jns jo (bad) xchg pop fldcw jo jnp mov pop add push gs add push jl add push mov int3 add or jne repnz jp inc or out jb shrb inc cmp rolb adc jecxz sub and movsb push push call aam insb roll inc je cmp adc dec jae sbb add lods mov mov ror dec add adc int leave cmp push pop add mov pushl xor rcrb ds mov loope add xchg daa fdivr (bad) mov sahf dec ret fildl mov inc mov add fdivs adc push fucom jp jnp add add loop lsl test lods mov push in ljmp jg sub hlt stc cmc (bad) ss add dec jo sbb pop rep mov push cmp add and add mov sti cmp sbbl jo fdivl and imull or aad add icebp in add and lds mov and roll add pop aaa (bad) ja add cmpsb inc int3 add jge pop addb dec push outsl cmp test add fimul add xchg insb add xor add dec incb in mov rorl pop push repnz pop imul jp sub and leave add lods mov cmp ja outsl lea lahf add lcall pusha xor incb jns xchg adcl jecxz pop into repnz fldcw cmp add sub pop add test add fsubs testl test sarl popa mov dec add sub cmp mov out jne out rcl mov dec iret adc xchg mov inc repnz lret fidivrl ss sub and (bad) hlt dec push mov jbe add stos mov iret aas jo xor fs push add xchg cli sub ds xor xor add jo cli mov mov mov dec pushf xchg cmp rolb (bad) sbb (bad) das mov add jl add dec mov out jo add sbbl jne or add jge sbb mov mov add aas push cmp add sbb (bad) bound std fistpl mov cmp inc test sub sbb ret int dec pavgb lods add fmuls mov add es add cmpsl arpl pusha xor addl mov jns pop lods test add sub es or jecxz mov xor add pop dec mulb fsub jne enter mov shrb mov addl dec js jecxz hlt cmc add decb fiadd add sub jge add das mov ja mov gs mov test or push dec add and and daa push lahf ficoml jne jns (bad) jno pop adc fdivl lods mov int adc sbb dec into inc setnp or or and ret add shlb je mov int add lock adc cli fnstsw push sbb push movsb mov xchg push icebp out add mov scas mov pop jae xor and test test xor pop xchg mov or stos dec sbb dec bound outsb push sti mov addr16 cmp outsl xlat mov sti xor scas add sub arpl xorl mov (bad) insl (bad) xor test mov inc push fdivrs cltd icebp cld pusha mov mov (bad) int3 aaa ss stos iret xor pushf inc lret jp add pop sub mov clc mov jo mov pop dec add aad push cmp add jns mov into jg or add xor mov addr16 cwtl stc addl mov sti dec add jmp adc loope add out push cli rsqrtps add pop mov add mov sahf mov je push push fidiv mov jns jl sbb sarb xchg daa add mov jb fldl adc xchg lock xchg stos adc dec push repz repnz das or scas push negb jns (bad) fsubs daa add in jg inc (bad) hlt or xor mov adc mov (bad) cwtl push adcb and jmp adc pop xor daa jmp add insb out dec aad iret add xor fadds and pop sbbl or mov fnsave ja add jnp push orb mov in add out jb and jo ljmp (bad) bound clc mov push jnp add cmpsb cld push fstl xor call sar xchg mov or ja sub loopne (bad) jecxz sbb pop stos rol cmp cmc out push jmp and adc and dec stos out in add (bad) in (bad) leave fucomip or into inc nop data16 add pop clc push stos jno pop add daa aam sbb add adc inc jl cmc sahf (bad) arpl mov pushf pushf sbb jo int3 xor pop scas add (bad) clc cmp stc mov jo cmp subl (bad) inc (bad) addl test dec aas inc cmp add iret test shlb xchg mov or inc jae add cmp jmp or subl push sbbl mov test loop hlt pusha mov mov jne or les pop aaa sub pop push add dec cmp pop add cmp dec cmp je fisttpl hlt rclb gs sbb xor push xchg fild jmp or enter pop add ja pop push adc jmp addl sub cmp jno or push testb cmp mov add daa push push add cld dec sub repnz flds adc push adc add and mov lds scas add push (bad) pop test (bad) mov push jmp into xchg pusha sahf test xchg push mov cld divl dec mov andl mov pop cmp cmpsb mov mov mov or es jg add jb adc add rcl and ret ljmp aas test jo push ss mov or andl lea sub mov sub movsl xchg cmp popf sub and test inc pop shll lea imull xchg adc add sub gs add dec ss sub push in push cmp cmp mov xchg pusha pop int inc jno jge add mov int3 and fistpl xlat (bad) mul dec mov jle inc mov mov (bad) stos adc mov out std daa pusha lahf xchg jbe push xorl inc pop cmpsl scas mov and adc inc mov in js add add jecxz adc ss sahf mov lods push sbb loopne dec sub fistpl orb push or adc sbb mov sbbb sbb cmp lods pop lret xor add and or jbe push xchg xchg xchg jg add js push cmp hlt jge cmpl (bad) pusha add push jo sub repnz jecxz xchg hlt mov int3 sar fnsave xchg push andb push test push dec add mov sub add lahf lcall test push stc add leave cld mov test mov mov or mov aam add sub jne loope fcompl add inc sahf and adc push orl lret add inc stc out (bad) test sbb enter dec divl xchg jbe and pop (bad) (bad) loope std lahf dec dec xchg xchg mov sub adc mov add into pop push inc dec mov add push sub jne arpl jl xchg dec jo jns xor test jmp inc scas pop jo verr mov adcl roll push mov ljmp repz adc loop pusha scas sub xor pop inc lahf sub roll mov inc and addr16 or stc push pop (bad) pop inc add aas mov sub fadd (bad) sbb clc ja popa je pushf int jmp add mov inc add in cmp pop pop les cs sub cmp xchg scas imul sbb (bad) call mov sbb sub insb pop xor mov hlt mov jnp je jns mov scas lret push add (bad) sub xchg mov xor mov add out mov add push pop xchg xchg xchg lahf outsl inc cmp insl hlt arpl das iret sarb shl je lcall adc cmpsl jbe and std xchg and sub or xchg addl pop add mov lock mov arpl and add cs dec xor dec cmpsb sub mov rclb mov sbb cmp adc ret mov add nop xchg mov and test pop (bad) push inc cmp xor fisub add arpl lea in aam dec imul repnz mov cmp add add add mov hlt inc into add out roll daa rclb jnp fiaddl adc push nopl add lock aad fdivrs iret mov pop outsl jl mov fbstp cli xchg sbb jb pushf mov mov or add adc fs loop shrb inc mov repnz mov jle inc fbstp (bad) push outsb fsubl add popa push les inc jbe or cmp add addb cli scas xchg or add mov or pushf out (bad) push (bad) add fs mov addr16 or add jno out int3 add (bad) xor enter or scas jo adc add or add enter and sahf push int sbb outsl lods cmpl roll std lods sarb xorl push push xchg fwait shr pusha popf or ja ret sbb adc dec pop push mov pushf and cmp sti test sub and sbb add xor add aaa (bad) cwtl fwait sub cli add mov add scas cmp fisubl add xlat pop loop aas shll xchg mov lods add sub or clc inc adc cmp sbb add dec rol or add xchg add jo xor sbb inc mov movsb stos call cmpsl push leave add sub dec aaa popl xor inc arpl inc xor add in lock sbb and add stos in dec add mov sub icebp add jmp loop loopne notl adc call cmp inc add nop inc xor mov sub bound pop call jge add dec (bad) jbe mov out ljmp imulb adc hlt mov mov ds jae add lret (bad) test flds jne adc add nop jl pop dec push add inc sbb xor int3 pusha add push cmp aad loope ja pop push fiaddl enter mov xchg push pop push push dec sahf out xor or je sahf lahf push fcmovnbe jo xor ja (bad) push mov pushf clc sbb mov iret fbld pop sahf ja stos test stc and mov push mov adc (bad) dec add mov aas (bad) scas mov fs ss pop jo and int xchg cld mov pop fnstenv xchg push dec mov insb cmpl cmpb jnp mov (bad) jp push jge add mov xchg or add in incb aas push mov add fstps ja ficomp xchg jno ja repz pop shrl fwait mov xchg sub add cmp rolb jle adc push mov je mov (bad) repz mov pop sub lahf mov imul orb imul enter movsb out stos jbe sahf cmc aas mov and dec xor pusha sbb in (bad) mov enter fs add decl stos (bad) ss mov testl sub fisubr xorl into bound add inc mov add mov add push and pop cmp mov mov pop ljmp cld ret sbb jb insl xlat out (bad) jae fbld movsl dec (bad) sub imul cmpsb insl cmp or xor into add sbb icebp aad (bad) lret cmpl mov outsb cmc add push inc fstpl repz (bad) stc (bad) out aad add jbe mov xorb mov pop sub mov popa pop pop and popf xchg popf in xchg add incl ja enter pusha jecxz lods mov aam sbbl mov mov decl cwtl xchg mov pop jo and inc sbb stos cmp inc pop dec dec mov cwtl stc push jae jmp jl (bad) fistp dec cmp cmp test test sahf insl add adc rcl in popa das xchg testb inc test xor mov decl add aas jns pop jo mov and (bad) inc lcall imul aam orl ja adc jbe testb pop lret repnz (bad) fildl inc insb (bad) fcomps mov or add inc push pop das aaa adc add cs xor jno xor out dec and rolb ficomp or ds je sbb mov add jne mov (bad) mov adcl pop add mov or aas roll lods inc jo inc lret cmp jecxz mov jae add lock mov add lods xchg roll jl jns and dec lcall dec inc jmp cmp rorl sbb imul pusha xchg rclb xchg mov sub test into pop (bad) call testl add rcl ljmp push rol dec inc xor sbb int3 stc stos add std push mov pop push sbb push hlt subl ja push rcr jle pop mov inc pop adc cmp or or (bad) in test inc mov mov and mull inc mov jno xchg push inc sbb daa cmc push mov cmpsl in outsl jb or aaa shlb inc out sbb or adc inc mov ret scas (bad) mov sub add jb adc jo xchg mov arpl mov lcall aad cwtl mov add mov fadds pusha xor insb inc mov or add fildl andb ficompl lret and leave pop dec add testb movsb xchg (bad) push addl adc jecxz sub dec add mov mov push jmp and mov dec dec fidivrl into jae cmp popa ret sbbl add leave repnz (bad) imul (bad) (bad) jmp add xchg push stc inc insb pop lods add bound adc pop in and xlat das or popw pop add xchg ss and mov icebp push sub fwait mov xchg fsubs jnp and imul (bad) popf out addl or mov dec dec add cmpsl (bad) cmp ljmp mov adc adc mov (bad) xchg jb lret lods aam and jp add dec dec and add jnp sbb jbe stc add scas sbb test icebp pusha test fs add push sbb aam inc add insl jnp adc dec push movsb fwait sub add dec lret mov xchg stos cld mov pop jb add (bad) adc hlt repnz scas mov idivb xchg inc mov pop arpl nop cmpsb mov mov sub ljmp rolb add loope enter stos push (bad) jo mov add xchg sub adc cmp imul fisub fcomps aas xchg add dec cmc stc xchg mov pop mov clc adc xor rclb adc add and fbld inc sub or pusha std and cmp push lods xor orl inc hlt dec lahf pushf (bad) call aad mov dec test xor xchg incl mov test insl bound sbb cltd outsb aam pop mov jnp xor cli enter cmp nop add inc out and arpl je aaa mov or and loop cmp pop enter xor push cmpsb fidivrl add pusha dec pop adc jne orl stc cltd jns add xor push jb mov roll dec xchg (bad) cmpsb and mov scas mov scas mov std fmull add dec je mov jns test and sub jbe cmp pop adc dec test or std in add jbe mov iret (bad) or repnz imul stc ror sub dec and dec lods insb cmp sbb add mov pop hlt outsb jo sbbb sbb sub shl push and mov sahf adc lret adc or loopne jle stos inc jl sub test add iret sub pusha inc add ja mov push mov add add jo enter ljmp mov jle add jnp loopne cmp mov (bad) fmuls scas and repz (bad) xchg and sub sbb jno ss int pop cmp add fsubr inc js mov mov sbb fldl fcomip iret divb repnz sbb mov add cmp mov les gs js mov add pusha sub pop jne inc mov loope aad or jbe mov sub jg inc push inc or dec add mov out inc inc cmp add inc xorl xchg add dec aas cmpsb add in stos popa add rcr pusha xor dec test jle push in test or orb addr16 add ja add xor or mov lock out inc mov push loope mov add mov imul pop xlat adcl pop inc repz sub jno add int dec push xor push jmp shll test popa add pop or sub xor sub pop inc aam lea (bad) arpl push call jne pop hlt mov cmc cmp pop sti into ljmp or dec (bad) push mov sub push adc mov push clc add mov inc xchg popa inc jle jo mov push pusha adc int3 mulb ds or hlt das add lret insb aaa adc sub imul fisttpl jae lea sti cmp pop jg aas (bad) mov or inc mov push mov inc sbb adc mov sbb add test adc rcrb inc jecxz js add lcall mov outsb mov sbb push leave cmpb mov data16 or add rcrb mov xorb sahf xchg dec loopne jbe mov mov xor add inc pop add mov sub das nop jle cmpl jne lcall pop or pop aad flds js adc dec xchg repz adc jp push cwtl cld jo add nop and (bad) add shrb mov (bad) lret jg push mov and xor ljmp out fdivrs sbb xor add ljmp add mov lods xor sti add pop cmpsl cmp cli lcall jnp add orb mov mov loope mov or test mov mov test cs icebp inc jo orl inc xchg adc xchg outsb imul inc cmpsl jmp bound movsb stos dec (bad) rcrb sub cmp xor inc push cmc add cmp sbb outsl mov xor pop inc pop cmp ret jae lret and dec xchg popf mov orb mov add mov enter shl ljmp xchg cmpsb repnz add push cwtl pop and mov cmp add (bad) mov cwtl jecxz jl add push outsl (bad) ja test (bad) xor cmp cmpsl sbb add fnop addb mov push pop mov cmpsb and arpl mov sbb inc and ljmp (bad) and jno cmpl data16 negb and jo pop cmp cld pushf fnstcw out add jp stos jnp inc ret test jge inc xor and inc add movsl and sub pushf gs and push pop incb data16 xor jecxz xchg mov inc push pop add dec das pop xchg xor lcall ret sbb inc subl xor and into test outsb sarb jge mov ss (bad) fadd add aaa mov int3 jge je add (bad) or in addr16 arpl mov rol dec test or in pop (bad) adc std mov roll sub andl add dec rcr in cwtl vmread daa xor inc dec ret cmpsb add cmp outsl xor push cmp sub xchg into and pop lahf sahf cmp push jnp (bad) and sbb js add leave ja jo movsl cmpsb jle pop hlt in inc jbe or mov xchg jo mov push xor pop out pop out loope daa add and les jo jb std outsl cwtl add add (bad) (bad) fimull insb repz adc sub and in xchg pushf cmp fnstsw pop mov adc xorb mov out (bad) int3 data16 add aas in pop das xor and add cmp (bad) adcl int3 jp psrlw adc fidivrl rclb xor popa scas cmp neg dec popf cmp sub lea jo add mov mov hlt cmp mov out jns xorb cmp popf ja push mov jg pop enter dec add xor pushf push and sub dec movsb sahf xchg push inc (bad) xor cmc adc inc pop popa jp pop jnp mov sbb jns mov outsb cli cmpl sub test xchg add cs add sub sarl adc sbb mov adc lock inc (bad) ja inc mov jb outsb ret loope cmp sbb add int3 sbb stc aad cmpsl add ss loopne jno orl mov fidivl scas pop add bound add dec and push psraw add push add cwtl push (bad) lock pop sbb mov push daa inc mov lret mov jno je jns add dec ror iret ljmp outsb sti lcall test dec subl ret jle data16 xchg jmp fdivrs add pop scas movb add or add imul jge add and sub mov mov add out sub jne mov pop jle inc fldt cli add test and insb gs jge imulb mov or ljmp or adc clc js (bad) mov leave (bad) pusha jmp sbb xor sub bound inc out dec or int3 jb ljmp inc sbbb adc stc ja nop add push call adc and inc aaa add dec loope out pop int3 jg mov pop or jno ja xchg xorl sbb lea xchg lcall add movsb lock push adc sbb jp (bad) jnp jbe pop cmp xor dec mov sbb xor test les popf test sub inc shll repz loope mov shr inc push xorl mov or or adc imulb add stos adcb repz subl bound or repz dec pushf dec mov loopne xor xor flds xchg (bad) cmp push cli cmp movsl lds and add adc out add pushf jbe lds (bad) sub jnp repnz arpl jno push add or mov mov fdivl push inc add pop ret aad sbb mov and xor call jecxz popf icebp or cld xchg mov aam jle jle inc mov xlat push add (bad) jge push scas cmp es cmpsl (bad) out and push test fiadd lods rorl (bad) sub add push mov or pop mov cmpsl sub mov inc mov and or and gs mov push (bad) jnp mov lret mov and add or dec push jno inc xorl aad sub mov push push push loop mov mov insb push sub pop loop xchg lahf mov add orl sbb sub mov add lods jns xchg push lea addr16 fsubrl orl inc je icebp cltd cmpsb add pop inc mov add pop or dec js push or popf cltd fnstcw lahf push pop cmc or movsl xor aas mov inc sbb aaa (bad) lods sbbl outsl jge add inc dec arpl mov out dec push sbb mov aaa (bad) jno jnp add stos or push push outsl push and (bad) add fild sbb ret dec add test pop mov cmp jnp jb cmpsl inc mov xlat sbb pop add jecxz pop scas bound push push pop cmp test sub sahf xor fmull in add jbe push mov lcall lea jne mov and flds pop adc addr16 adcl add imul jno test lods sub adc jle imulb push iret add outsl add fdivs jns pop aad xor cmp xchg (bad) movsb push jo xchg enter xchg adc mov pop sbb lds sbb lock push pop sub xor lods sub pop test mov rolb jle (bad) out jae push cmpl roll dec push icebp mov mov repnz mov xor jno jae leave mov (bad) aad imul push mov inc sbb daa cmp or jo xchg clc jae add push (bad) sti out add push cmp int3 mov cmp add in cmpsb cmp push loop inc dec sti mov fcoml xchg mov sub daa push andl loop pushl mov add imulb sbb inc pop cmp (bad) add push xchg pop lret in sbb fstl push sbb jmp xchg mov fisubl sbb lret xchg repnz add xchg (bad) jae inc mov add test fldl add enter sub jecxz cmp sbb (bad) xor insl add xchg add add mov je orl stos lods enter iret subl pushf inc rolb dec je (bad) mov sbb lods test xchg insb pop add add jg clc sbb sub js dec pop test sub scas xchg leave enter (bad) xorl inc lret add lock pop (bad) dec (bad) jmp add lahf and jb xor xchg mov pop and jbe or add popa or in mov fisttpl mov add push aam add fild cmc lcall xor lock push jl in arpl out add dec outsl sbb add and insb push addb test mov icebp mov ud1 jbe add repz xorl (bad) add insb ds add xor adc inc movsb rcrl test lock jmp jne jnp jb das pop push cmp pop enter testb loope cmpl jo adc ljmp inc xor xchg xor nop test cmp fistpl push enter add shlb in xchg std and pop test gs lcall or cmp ljmp adc pop mov sbb aam imul jecxz dec leave mov and jae gs add push (bad) push lods inc test jge xor loopne xchg add icebp hlt ja push cmp xor mov rcrl add bound (bad) adc mov out test data16 out inc ret push in pop call (bad) ja out mov (bad) pusha stos inc xlat jecxz add or sbbl fwait cmp jns mov push addl js aaa xlat (bad) mov cwtl imul add xchg icebp add push inc fdivl scas sarl inc add (bad) dec test add (bad) jmp inc dec in mov add inc or test sub mov imul mov repnz (bad) roll lret cmp adc or sbbl pop inc icebp scas roll fistpll neg bswap addl std paddusw dec jae mov and fwait stos mov rolb int3 xor xor mov rcll sub dec hlt jns jl imul adc jno andl (bad) scas sahf xchg subl cmp xlat xchg leave nop and mov sbb shlb jge push les loopne lods ja xor loopne mov pop gs xor mov pusha ret inc fisttpll mov add insl rol cmp cmp stos dec pop jae icebp add cs adc xorl mov repnz lret sbb pop lds repz jle scas add fimul sbb push out add test sbb (bad) mov mov roll pop fdivrs test (bad) xor add push or add idivb jl add cmovae cs or aad jmp fistpl repnz pop dec and dec push xchg into xor out jae inc add movsl (bad) aad xor xchg rorl pop xchg xor push int3 out lcall jne imul sbb inc mov pop aaa sbbl cwtl mov movsl orb inc cld pushf (bad) clc mov into fwait xchg inc popa mov mov (bad) loop add inc add outsl mov mov and pop adc loopne loope aam scas dec mov inc jecxz rolb mov dec add mov add jp out pop arpl stc xchg xlat mov mov inc xchg lahf rorb push es into addb dec shll inc cmp jbe jae push add popa adc mov sbb or ficoml js ja xor outsl cmc es lcall push andl xchg mov mov xchg imul or add mov adcl add addr16 mov jnp mov (bad) push add imul push ljmp add test mulb mov add push push mov jle mov or xchg in jo je push push xadd cmpsl pusha dec fistpl pop mov mov in and divl pop xor cld xlat in mov leave push push pop jo test mov pusha ror into cmpsb add repnz add xor mov add dec lods lods pop sbb dec add adc xchg imul std lret sbb call into (bad) div outsl inc decb cmp add adc ss movsl stos inc mov dec jmp jp cmp adc popa xchg push hlt mov sbb mov (bad) pop nop xchg inc inc push jle ret sbbl sub fs sbb or fcomp dec xchg add rcl mov cmp imul mov pop incb aaa dec cmc pop and push roll mov sarb adc loopne dec add and sti inc mov add repz mov pop dec std popf pushf cmpl inc es jne cmp mov cmpsb add out lods and inc movsb cwtl cmp je jae imul rorl inc add cltd xlat mov add aam scas add ret cmp mov je adc dec lds lret push rolb ror push inc or mov and inc xchg pop add cltd fcomi mov movsl sbb inc rcl add fs adc add pop das jle mov cld xor lods add frstor loop or es int3 or (bad) mov add inc data16 icebp cld mov addl cmp jns add repz push add int lahf sbb dec push call add iret int (bad) xchg dec add cmp imul mov out fsubl sahf insb mov addl lcall mov inc loope mov dec lods cmpsl add gs add lock mov inc in ds ljmp or insl out leave ret or add push push cmp mov mov jg repz call lock in int3 mov xchg dec imul iret pop cmp loop xor (bad) das fcmovnu add dec lods jle lock icebp sbb enter dec stc dec and pusha subl js cmp into (bad) or xor xor dec nop push sbb cmp js add jg add mov pop lahf adc lret add push cmpsl mov add mov xchg fiaddl adc add scas inc es cmp test jb fisttpll in dec xchg pop add ficom mov adc faddl jg andl int3 js fstpt repz pusha clc cmp int cmp cs fisttpll loope (bad) adc jno mov push dec mov add jns fldenv call (bad) ja push fwait pop mulb js jns inc add cmp sarl mov push lahf inc lcall lahf mov add dec subl sahf add push loop ljmp test dec push stos mov adc call sub sbb mov or push push push cmp jp pop pop das ds mov sub adc popf add cmp je or daa jmp movsl jge std sbb pop mov cwtl pusha dec mov lods pop jge add sbb add lds mov mov cwtl les data16 add lods inc fimul pop dec pop mov inc cmpsb push scas jl mov (bad) pop add pusha mov add mov icebp arpl add mov push lcall mov lds pop inc or xchg jmp push add int3 cld jle fstpl imul jecxz in add fstpt push mov adc adc mov and adc add int3 std mov lahf roll test cwtl mov xchg xor xchg std inc push (bad) cmp adc pop test sbb inc ret iret and pop fdivr cmp scas enter repz and sbb add add aad js mov xorl cli jge in adc push push (bad) xor mov imul xor loope scas sub xor dec popa and sbb cmp lcall adc sub repnz fxch pop and fs lock insl push dec (bad) push and add inc add cmp fsubs jo pop test push inc mov pop mov jl inc les xorl sbb jbe xor out lods jae and pushf push add mov pop rol jns mov inc xor adc shrl (bad) insl xor pop xor movsl addb lods pop je mov or inc add test fs cmp mov jmp fyl2xp1 xorl adcl outsl popa mov cmp xor insl jg enter cmc add (bad) imul inc mov jmp sbb sub mov add stc sub fs js mov adc add adc mov mov mov pop movb mov mov add push scas pop inc loop aaa (bad) pop repz dec add inc mov inc (bad) (bad) in or xchg lcall push fcoms add mov lds mov mov loop add sahf dec push fisubl dec aam push add nop sahf lods add loope sbbb sbb inc mov out dec add pusha nop sbb loope hlt orl jmp cmp pop jo mov pushf xchg loope dec js test adc mov and mov xor inc push fild movsb mov add cmpsb push movsl pop jo mov rcl cmp push add and and cmovl pop adc xor adc cmp mov inc out add icebp fimul loop jo push xchg add sub incl fisttp jo cmpl test xor jno je add add mov sbb inc int mov adc pop ljmp (bad) movsb sahf insl faddl pop pusha scas jno int3 je add inc sti add sub lcall pop roll and fidivr or in ljmp sbb mov mov push xchg mov pop sbb jp fistpl fild ror inc mov in fsubrl call inc add add push cwtl push (bad) repnz add adc mov pop add mov jae imul mov cmpsl lret sahf flds add mov pop add add sti testb ret or stos sbb insb add mov int adc fisub lret pop (bad) sbb cmp loop,pt xchg (bad) rol jno iret sub daa rorb push mov icebp sti mov aad add cmpl aaa inc pop push and or pop and mov pop sub incl xchg sbb mov push or xchg inc setp (bad) and or sub scas fiadd dec add cli and jle add fs mov cmp dec or jnp cwtl push add jae jle xadd mov mov movsl (bad) je mov dec and adc add pop cs jo sarb inc or add adc outsl add push lods dec push mulb xchg pop inc imul std aas xor (bad) repz test into mov or (bad) dec mov pop inc mov ds les andl mov add pusha pop stc jnp out mov (bad) sbb jbe (bad) pusha fstpt mov adc cmp pusha add test dec popa xor xchg adc and and lret scas cli add sbb dec fwait aas push arpl sub orl push sbb or imul shll test test mov ja push cld add lahf jo pop xor add mov aam add push mov mov cld pop xchg or test pop rolb xlat sbb ret mov jnp mov mov sub gs ljmp mov jno movsl add pushf and out mov add sbb cld popa mov dec sahf jl in rcr add dec addl cmp rclb fimull insb rsqrtps scas cltd cmpsl in jno add jae js dec in xchg mov add rep fnstcw mov sbbl jge push stos add jb sub mov sub mov aam add and in pusha inc sbb (bad) lret mov inc mov cmp xchg add fldl add dec cmp inc ds out (bad) cmp adc sbb es in addr16 add mov lahf add dec arpl inc dec sbb ror dec xor das add pop xor push aas incb push stc jb popa dec push jnp roll mov js cmc jns xor movsl add and jne pop xchg scas sahf leave bound sbb inc adc fcmovu add mov fistpll mov add jae outsb xor movsl insb dec push add mov repz in loop fmul subb cmp add sbbb ja rorb pop jnp sti or mov fdiv xor mov scas xorb xor dec notb and pushf lds fsubrs stc sbb cld aam andl and xchg js setle or test xchg adc or pusha pop dec and dec outsl xor ja out pop in add adc sbb inc xchg and push std adc jbe in mov or inc sub push sbbb cli jle add xchg fisubr addb jge ja xchg cltd mov xchg and int3 add jle mov adc mov mov or xorl jmp adc movsb sti ss inc push and adc inc in and pop add fwait negl lods test sub rclb pusha or jmp rcrb pop mov (bad) pop into and mov out xchg lea jle mov popa pop bound arpl ret dec hlt inc mov xchg iret rolb adc mov sub add repnz outsb leave inc cmp add or adc fwait xchg addl pop incb fdivr cmp std add in push cmp jnp add xchg xchg and outsb repnz jb (bad) pusha mov xorb sahf xchg push ja jo addb cli sbb mov mov loope (bad) addr16 add jbe mov adc les jno dec add mov pushf pusha add ret xlat sti jl lods sbbb fistpl leave aam shr push add jo or xor cli imul xchg (bad) jb add push adc xlat or add mov outsl push xchg push add nop gs cs adcl aam and pop mov (bad) xor add jno or add call add adc add adc ds xchg in add dec cli rcrl add pusha dec jne push test add fnop dec je add out in fs (bad) std mul mov sbbl je lods loop xchg jg lahf dec adc xor rdmsr jl add imul aam adc inc xor stc push ss cmpl add fnstenv popf arpl add jno movsb cmp sub ljmp jne pop outsl ret jns pop iret xchg add mov dec mov je pop jae push sub addr16 test ret lods hlt das add insb add jmp add addr16 xchg mov adc in popf inc sbb clc add in mov mov or test out das popf sub sbb imul pop out imul mov hlt add fwait mov xor dec sbb daa jae sub xchg lods loopne pusha mov xchg in scas and pop push adc mov test aas frstor add mov mov cmp in push jnp mov repnz iret pop xchg add pop (bad) lods repnz or add add lahf cmp xchg adc cmp jbe out xor into push or push add and sub mov push mov jno xchg pop dec xchg inc adc pop push add std popa out xlat sub cmpsl jl cmpsb add data16 push icebp daa test push test add sbb push add xlat int popf test inc test dec lret sarb ret add cmp ljmp jmp sbb dec add jg clc inc inc dec mov dec (bad) (bad) addr16 fmuls add cmp es dec and push das pop gs inc inc outsb add adc jge loope mov inc xlat aas or cmc xchg push adcl jb clc xchg fs push aas cmpsb sub aaa notl mov lods add mov pushf adc add jl add xor adc iret stos dec enter mov push test data16 mov sbbl (bad) outsl inc mov mull sbb pop pop arpl rclb adc cli rorb fldl mov add cmp out pop add push push les cwtl mov xchg lcall add pop xchg pmulhuw aam push mov pop clc mov leave cmp sub add lods out add lcall jmp imul push out sbb pop add push xor and out push in push faddl lds xchg popa jmp in xor lock imul sbb push sbb sti add pop arpl sub lret mov fisub std add mov dec pop pop add nop aas popa push and loopne in inc add pop pop dec or testl test add das adc add sbb xor and (bad) repnz sbb mov push in (bad) mov xchg repnz pop pop cltd jnp xor and call fistp int3 pop lret inc roll push dec insl sub js mov fimull imul mov add shlb cmc mov (bad) sbb or mov add (bad) cwtl inc cmp cmova sti add pop dec jecxz sbb cmp stos movsb mov addr16 jl pop sahf cmp add jge int or cli add dec jecxz shr dec test lock subl cltd jg inc test mov cli jno mov lea or fcomps call xor mov push cltd push dec inc sub push mov inc out into add pop sarl or addb push push sub push clc add div fisubr ret push adc sbb mov je add pop cmp cs shll aas push add out addl rcr push dec ficom cltd sbb (bad) xchg xor inc xchg inc jl and loope xchg repnz jne mov cwtl faddl xchg notb xor inc xchg fisttpll cmp add cmp sarb cmpsb pusha ret add loop popa mov mov ret xor push or dec push test out xchg je inc mov loope lods movsb (bad) mov ja xchg in je jae add pop mov add leave pushf inc jg,pn pop pop movl push stc lea mov sbb push add scas xchg fildl inc aaa dec add push lahf jno je iret mov js scas sub hlt dec cs adc lcall pop adcb inc and hlt sahf sub in jno stc xchg stos sbb mov inc sub xchg test push adc lahf pop mov pop movsl addr16 add rcl in push mov in mov mov jns test scas xchg pop stc lret rcrb mov or ret push popf sarl and frstor gs icebp add rcrl push jne lock ds loope mov push cmpsl or jo cmc jp (bad) mov lods pusha in ret out cmp call add clc std push cmp scas loope scas or in add and ficompl mov in movsb xchg adcl cltd aam test sub inc add nop jecxz mov (bad) jne inc add stos add outsl cmp mov cmc jo scas addl pop test in dec rcl sbb or fiaddl xchg lcall sub mov cmp xchg dec push add xchg pop mov cmp push add pop adc mov mov cli sbb push rclb jne cmp add fsubl add adc jl or fwait cmp xchg push and adc mov aaa cmp inc pop xchg rcr or xchg inc mov out add arpl pusha dec dec add add mov jb or xchg add icebp cmp fisub jl test xor pusha and movsl add daa mov popf add and add mov add les outsl data16 gs dec cmp pushf pop js push dec sbb add jge and pop sub test insb hlt pusha pop gs das ss call jb cs adc jg sahf (bad) mov cwtl push in and aad cmp (bad) je add insb insl cmp ds xor fs add pusha cmp xor nop pop movsb aaa lds (bad) xor jno sbbl outsb dec mov subl ljmp and adc pushf call inc ss mov mov mov mov and push movsl adc incb sub test add sub pop jg add add cmpsb data16 mov sbb icebp stc (bad) or jno pop mov ja int3 movsb roll mov or out test inc sbb mov add movsb and sbb xchg stos imul iret sbb jne popa clc jns cmpsb xor hlt popf inc scas leave fcomps mov pop jmp pop and jo cmpsl cli push subl and orb imul pop das pop push jmp sub mov xchg sbb xchg enter mov add mul lahf or sbb or enter mov mov sub cltd pusha gs and push add lret (bad) jl pop movsb xchg add cmp ret add hlt jne mov add dec icebp and xor cli add mov adc push push lds inc in ror test sbb push daa inc mov or add aam mov add lods leave iret cmp inc add mov fadds xchg jle add dec mov add or pop ss push and not repnz mov push inc (bad) pop rorl in pusha pop sbb lret aas addl sar mov mov mov out or xchg mov ds add inc push jne inc ret out lods cmp lret mov cmc mov xchg imull mov lcall popl pusha int or data16 mov and xor add scas push adc mov leave fadds popa cmp add xor jge xchg and jb mov loop fcomp fiaddl orl ljmp flds dec movb and mov (bad) pop inc and ljmp insl add sbb push lds stc pusha mov icebp jno sub xor and lret add xor fidiv pop fcoml mov add rol mov jle xchg inc leave or xor stos aaa add mov xor dec mov testl pop add jno gs sbb cmp add (bad) scas push inc jge cmpb mov mov gs push xchg push add test adc stos scas pusha xor mov pusha mov jle cmpl pop out add lcall mov cmp mov dec mov cmp mov or add xor icebp lds pop push loope pop cmp push dec or xor inc lods push scas sub loope push in mov add mov adc adcl es pop stos (bad) into aam push cmp addb mov jo lret test daa sub and sbb add cmp xor pop scas jo add pop mov xchg push loopne sbb add jg inc in (bad) es stos xchg lods sbb xlat dec scas ficompl rol jae xchg jbe add or orl sub inc les std jns jl add or push insb pop mov xchg test in inc pop mov orl (bad) pop test ja daa lds add scas (bad) sbb add loope push push adcl pusha (bad) repnz movsb add xor loope shl es mov mov sub lahf subl xor pop or stc add push pop add pop lahf repz mov in push jge jno rolb cmc and fidivr inc xchg sbb and push idiv cmp bound (bad) jno pop sahf dec mov jo cmp in mov out decb cmp scas xchg or add or inc add popa inc or scas mov in pushf mov andb adc jno push push inc aad jno adc andl dec or sbb sbb xchg inc xor and add dec pop pop lock int in dec aaa sbb mov mov jns mov sbb add jmp mov xchg xchg and push and sbb stos add (bad) cltd inc rclb loop add jo push mov (bad) or out orl bound test repz sbb xchg (bad) xchg adcb test loope cmpsb jecxz scas sbb xchg adc add fstps (bad) inc xor cmc push push mov sahf lods or and or cwtl mov adc outsb mov add test or scas jmp xlat stos add sub mov adc push add mov adcl xlat add pusha mov pop movd xor cmp leave inc xor lahf movaps cmp popf pop add pusha mov iret xchg addb popf data16 or shlb jo and sub addb lcall xchg aam sub inc sahf push rolb add dec faddl dec cli sub xor push test adc pop mov in das pop jns add sbb pop mov (bad) insb adc jno add mov roll push sbbl in fistpl adc adcb mov jns add lods sbb mov hlt in mov pop sarl inc cmp add js jne sub shrb je ja scas stc mov mov mov mov nop mov lcall add dec (bad) adc cwtl popa add lret add sub inc (bad) push fistpll and mov pop push sub lret add je notl pop xchg pop adc les adc sbb mov lret mov add out xor cltd sbb loop mov repz pusha cmpsb lea push mov xor mov inc lret sub inc loope (bad) pop xlat add inc adc or sti cmc aad jo mov mov push inc scas mov add add mov sbbb (bad) outsb fdivr add push rcll ja mov into ret lock iret mov dec orl dec in pop or mov push and daa mov into sub outsb jae loope imul add sub lods test je outsl inc push sbb cmpsb dec jmp xchg in jp sbb pusha or outsb movsb adc cwtl xchg jns add insb inc jp aam sbb add mov fs nop test add leave mov inc xchg lret clc lwpins push mov xlat add cs mov popa jnp pop add add add and pop pop lret add scas insb jae mov ja enter loope sub sub inc add call hlt sbb mov int add add dec mov pop sub lods jge dec xchg out mov adc int3 and rolb xor mov inc int3 pop (bad) popf inc out sbb add insl (bad) loopne jns or pop cmp bound xor stos adc js (bad) test add (bad) out fmuls mov jo inc cmp push iret int lea xchg loope pop and js and dec stos mov arpl je sbb pop sub and call insl pusha mov xor push xchg mov (bad) sbb add cs stc jmp mov (bad) in sbb jns cmpl pop nop dec sti add stc lds loope jo iret (bad) or add (bad) notb ja mov mov cmp ljmp insl add ss add popa mov add mov enter push push movsb push in jae sbb popf orl jge mov sub roll mov enter fdivrs sbb mov or scas inc xor jge add inc pop repz dec int3 lods jo add and add lea add ror (bad) jl adc pop test add pop movsl sub xchg adc xor dec cld push mov loop adc xchg stc scas sbb sbb inc fistp add mov sarb popa and mov sbbl add stos mov add sub adcl and les pop aas add xchg enter dec jnp xchg mov add jp int ret jb dec and mov adc movb clc ds adc inc inc push cmp mov jg push mov int3 stos aaa les jle jbe loope jno iret test or movsb pop add inc in sub test insb and cmp test pop mov (bad) mov mov call sub mov and (bad) div add popf insb mov mov xchg lret sbb push mov push in add mov roll dec mov outsb and in add mov addr16 aad sbbl ja xor xchg repz push xor add aam cli mov xchg fistl dec pop repz divb test out mov std roll pop loopne add adc cld mov push pop cmc (bad) scas inc cli push dec lahf mov dec cmp out inc popa jbe out dec sub inc cmpsb sbbb leave out jb push shrb add fnop cld (bad) xor (bad) push jbe cmp push in add jge repz inc lock xchg jmp pushf xorl add pop dec xchg mov pop mov pop ret stos pop mov push leave add sub sub addl cmp lahf add cmp pop orb imul dec pop mov pushaw sarl nop push add sbb divb adc pop or fldl inc pop insb mov mov jg inc call inc mov xchg add adc dec add mov push pop es (bad) mov add mov daa repnz subl xor pop mov (bad) jno das cltd loopne add jae push dec mov gs sbb mov call outsb or or push cmpsb data16 mov bound pop mov mov adc pop mov cmp shll jae repz mov add fisubl mov xchg sbb sbb cltd out xor fistp fidivl and jno dec sub popf loopne pop inc fldt adc inc leave test repz inc mov (bad) cltd mov cmpsl data16 pop xchg lods aad add inc add mov ret insl cmp pusha popf jns addl clc shrb cmp push imul sbb jns or sub push fldl bound pop test add and popf lods sbb cmp enter push (bad) xchg mov fldenv icebp add inc repz mov xchg fildl pop add (bad) movb aad imulb xchg fiaddl popf and or fs pushf jo je pop icebp cmpsl add pop cmp jns ret mov inc jmp xchg dec cmp jbe (bad) jne add push xchg mov jg add fs jle repz rclb add pop cltd lret inc inc ja xlat dec add nop mulb addl pop loope cmp sub mov out outsl rcr inc xchg sbb mov int3 jae mov jnp cmp jecxz scas enter mov pop or add imul sahf mov add mov ss adcl je call mov imul push movsl out and jmp icebp inc pop add lret xchg in popa fildll push jae add outsl out cmp sti mov jb or add sub add mov ds jb pop xchg cs add and movsl add cmp sbbl push or xchg test mov jbe pop add sub out fildl xorl mov sub sbb lcall sbb dec pop in add and bswap sbb jb aas arpl jle mov xor or add push cld sub cmp leave enter xchg mov jno addb (bad) out aas add jnp mov repz mov mov add aaa cmp jb rorb mov movsb in xchg jle mov add cld adc add sbb mov test stos addr16 jmp popl outsl push xorl mov cmp pop push fild insl jno mov or in add xchg sub or or and inc mov add xor (bad) std (bad) int and inc add les fcmovnb out jns add push enter daa test clc lods push jb add mov addr16 stos js xor call fsubrs pushw mov lods sub inc cmp mov addl shrl cmp sahf sbb add sub fimul lods das mov add cs cmpsb push push fldl cmp jns (bad) or das push and movl jg jo lret sti int ss pop cmp jmp dec das lods jb adcb pop pushf pop inc inc xor sahf pop push movsb cwtl dec and push fistp jge jae and push mov or lock sahf mov inc dec inc nop xor cmp loope xor or call pop adc and add xor cmp mov les and pop lret cmp mov jge out shrb fstpt xchg add mov pop lds mov ds andl cmp xchg test sub data16 cmpl sbb xchg sub or jne add xchg jle push add ret addr16 push inc fwait push negb add sub inc xchg idivb push clc negl sahf add push gs add fs sbb push andl mov add iret add scas pusha shrb adc pushf push adc pusha sbb popa (bad) in mov and shll or push fstpt jle data16 in int3 add movl sbb add add lds jno mov sti cmpsb cmp (bad) out push dec daa repz insl es fstl ficompl xorl in inc push push mov call js xor jmp ffreep pushf aas xor push pop cmp jle lods or leave and and mov dec jb mov inc in or dec cmp pop shlb adc orb cmp push xchg scas out imul lahf stos or (bad) pop gs push mov mov pop xchg xor jno add cmp (bad) pop (bad) inc fild pop outsb dec jmp add (bad) or cmc add cmp lods cmpl dec sti cltd add xor push mov loope push add fiadd xor mov sub (bad) into inc (bad) pop cmp inc adc pop pop xchg add fidiv add in jae in dec scas add xchg scas inc add xlat push xchg mov lret pop nop aaa fisubl pushf push aad inc rcrb add and xchg jp sbb (bad) sub popa add and mov push test call pop sbb rolb lret loop (bad) jecxz inc inc test mov aad sub add addps mov inc insb and add or add push pop fisubrl push movsb aaa loope mov xor mov add sub lret jb mov test punpcklbw into rorl cmpsb add cmp dec subl sub xchg pop jb mov iret lea (bad) jmp mov or mov lcall imul mov outsl add fsubs mov add dec (bad) inc (bad) or add xchg int3 mov mov (bad) out push pusha pop dec add sbb mov pop add mov sti and sbb mov scas mov clc mov xchg mov xor add push ss out das add stos mov add xor das jno add cmpsb ss dec dec in adc sbb xor roll dec push pusha arpl add jge pop sbb shlb jae push cmp sbb lret orb push push mov roll mov xchg inc add js sti dec adc xchg pusha movsl mov push push mov out repnz xor jl add lock cmp pop aaa mov mov add imul mov dec loop add inc das incl outsb jge int3 jns cwtl sub push adc jp pop add test sub lret jb dec stos push add cmpsb rcr inc cmp adc pop jae stos jl mov mov arpl stc ljmp jae sub sub add imul andl xorb int3 into push pop out cmc add inc mov mov mov add xchg mov xorl jl push add jbe mov mov add xor and or sub pop sbb inc xor lret cmp call loopne push xor jno xchg lcall or and sbb fsts insb jne pop data16 cli cmpsl mov fdivs add sbb add and inc addl jecxz adc dec pop mov or out add cmp add dec leave add add inc mov push or cmpsl lahf out ret dec data16 int3 mov dec jns loope mov adc sti lods adc testl mov xor mov out (bad) jae or push int pop jge jb jae (bad) fnstcw nop cwtl add jge pop add xchg sbb cmp movb jecxz push stos lds add mov sbb repz add jge jg xor icebp jmp add jbe sub add ds push inc cld jo jl stos push test fist fidivl xchg nop mov xor sbb test jae loop jl fistpl cs push xchg cs or cmp in sbb mov aad shlb pusha mov add clc jl shr mov out gs jle add sti pop outsl repz lahf add les fbstp jg movsb inc ja pop aas lods xrelease test add inc mov mov cwtl inc mov sub push iret jg inc mov in sbb fsts adc jge stos adc push add mov xor and and jbe and inc push ss push push ret xchg push orl cmpsl aam sub cmp mov xchg ljmp lret dec add push gs pop faddl test insl inc ret xor dec (bad) add int3 inc cmc aam pop jo ja add mov xor into cmpsl (bad) (bad) ljmp push lods xchg scas pop pusha and stos add shrb add cs push sub adc adc and add pop (bad) push out scas sub lods sbb xor pop fisub mov cmc add mov rorl sub inc ret push icebp testl fwait insl add add xlat push andb popf lods popf push mov cmpsb sti negl das out xor lahf xchg test sub lcall icebp je sbb xlat add and add je iret and sbb push add sbb jp movsb pop popf jle add push cmp test sbb dec jl add or add cltd cmp sahf mov (bad) mov fwait (bad) (bad) add jmp lret inc testl inc inc lahf out pop data16 push mov xchg push orl mov xchg sbb xchg loopne and jnp xor repnz roll or aaa cwtl add dec clc jnp xor add sbb stos lock xchg inc pop hlt xor int stc shlb test pop lahf insb ret fsts mov xchg psllw sub mov loopne (bad) jl in add mov pop add jae pushl adc and push outsl inc sbb shrl pusha add popl mov sbb mov vpsubw cmp add outsl pop sub add push jo out or dec add mov sbb add ret sbb (bad) test leave and mov jbe mov int mov icebp add dec lcall or xor rclb call add rcr loop (bad) aam push out sub inc jge (bad) mull xor and addr16 dec jmp push insb je cmp orl xchg imul cmp pop js xor (bad) es scas pop push inc add out leave sbb xchg stos jge fs or cmc scas cmp imul add scas inc jo ret sub xchg add aad sahf and nop lds mov cld orb (bad) in sub jge push (bad) ljmp add xchg and add gs int3 ja adc mov (bad) ljmp xor pusha add gs jecxz push fwait cmp add jge (bad) stos lcall push jns or sbb out es xchg cmc testl mov mov add cmp push inc dec stc pop dec xor adc dec lret add rcl jbe xchg or add repz aam add clc movsb inc xor jecxz shl pop mov (bad) mov mulb inc pushf (bad) push pop xchg dec jp fcoms cmp add cwtl (bad) push aad fcmovnbe add imul push sub add mov fiadd xor sbb mov les xor daa jp xchg (bad) adc push test lret dec mov add movsl subb (bad) and add roll push lods (bad) jb or jmp cmpl lahf lea jp mov fadds aad cmp lods cmp sbb pop adc cvtpd2dq jp xchg pushf loope xor push (bad) enter jo dec in add mov sub mov mov mov test sub call jmp pop push xor cltd mov notl iret outsb dec test push fstp adc sahf dec xlat inc lret scas and shrl inc imul xchg adc sbb (bad) jp inc add xor xchg add and push das push stc sbb sub mov outsl popf inc and outsb prefetch repz sub pop in adc iret pop adc fwait sbb cld imul sti iret or xchg inc inc div pop enter add mov add inc xor in mov in adc nop xchg push std add pop (bad) pop add aas insb xor sti fidivr ds mov orb test cld sbb mov int aas lock and data16 jp lods jecxz lret and mov cmpb pop rorl xor test std mov ret or push xchg push xor dec adc pop cs stos cwtl mov add mov (bad) cltd cmp xchg inc mov les mov arpl ds sub (bad) fimull and cli add je pop js (bad) scas add sub std ss outsb cs add xor sub xchg or add push in bound xor into loop jl pop sarl adc jg daa cmp insl iret notl add dec clc inc sarb pop jg aam pop nop aad jo mov mov inc cwtl mov (bad) popf (bad) mov js in cmpsb les mov imul test aam and add push adc out roll pop loopne,pt pop sahf rolb subl mov add lods sbb cmc mov xchg in add jbe test push mov xor adc stos les andl mov dec jmp adc jb or imul test (bad) mov sbb rorl xor and xor ucomiss add outsb inc xor xor sbb cmpl sbb mov sub mov movsb jno inc dec xor jno imul inc add into cmp add xor aas dec not add loop jnp pop test pop or add insb xor aad jbe in roll (bad) into ret or (bad) mov ss pop add divb lcall sahf pop sub or or sbb inc lret mov data16 jp scas add mov js pop add inc lcall sarb adc mov rolb fstl scas cmp or aaa outsb into out (bad) in (bad) dec push adc add call and pop lods pop cmp xchg add pop adc add mulb cwtl jmp popf aam bound je cs imul jl cmp fisubrl push adc mov add mov pop xor jo xchg push outsl cmp xor pusha inc adc pop add sub mov mov jno (bad) xor stos xor and cmp dec cmp arpl popa cmpsl cmp roll and mov jo pop fistpll pop xchg xor pushf xorb pop setae data16 iret add fnsave addr16 repz (bad) add inc jmp aaa jno jge cmpl iret mov xchg xchg xchg xorb ljmp jle fwait dec ja daa and mov adc mov push sbb cltd add xchg push mov add dec push inc nop xor xor pop cmpsl add push cmp and mov stc sbb push movsl sub test lock add jg add sbb sub leave aas add sarl add into sbb fdivp mov pop lcall test sub mov insb lock sub cwtl jbe stc add leave repnz gs pop imul xor push push jbe stc xchg xchg hlt jo dec xor dec je cmp dec dec push rcrb add pop sub loop adcl push cmc cmpsb cmpsl add dec movsl pushf mov jns add call sub (bad) adc jnp jb lock sbb jecxz ljmp lcall sbb daa cmpsl mov sub (bad) lock jae mov rclb fnstcw sbbl notl mov dec mov jmp lock roll fwait in add (bad) in add js adc mov push aam sahf add jp mov (bad) cwtl cmp mov pop hlt add sarb enter cs mov jne ljmp add fs push iret pop mov subb js push add and in cmp cmpsb add pop push ret cli xchg add inc inc inc mov pop adc rcrl rclb loope adc aam test sub subb add pushf jp out pop add aam add pop xchg lds ljmp stos xor outsl add push mov xorl add scas inc add and sub dec pop push les xchg add sbb sti xchg insl push ret mov push mov or dec js fldz insb add ret lods add or sub pop jg add jbe rorl icebp nop xlat inc int repz dec mov loop sbbl push pop fild fisttpll idiv xchg xor test mov mov push add mov fnstsw jno xlat cmp repz jmp sbb sub mov mov out hlt je mov daa cmpsb xchg mov and mov scas iret add cld popf addb dec fwait mov enter das mov out xchg add insl mov add sarl xchg sahf add in mov (bad) lret ret mov inc dec mov aaa sub adc pop add fs add pop dec add fcoml cmpsl test pop dec js fldl cmp dec or sbb push push (bad) push and xchg sub jbe or or add and lret cmp sbb outsb call leave dec add je adcb ljmp inc push mov sub add addr16 scas xor xchg inc and jns pop je mov add hlt addl push fldl mov inc inc and mov cmp and (bad) rolb mov repnz dec fcomps cmp lods rorl jae xchg xor dec mov push and ret in stc movsl and inc pop andb (bad) arpl pusha xchg repnz add xchg xchg pusha xor sti js inc cld add push pop jmp cmp xor out adc add cwtl hlt cmpsb ss inc push inc push pop add mov scas notb in cmc fadd mov pop lods add and (bad) push or pusha ja stc outsb xchg inc lods aas in repnz call add ffreep add inc (bad) popa add lock jp xchg test add mulb cs std xchg lret cmp adc (bad) and and lahf ret xchg bound sahf mov jns inc shr add add pop mov or lods inc out imul cmc pusha sub loop sub insl mov fcmovnbe pop xor mov pop and jge adc jno addr16 add stos mov or add int sub adc pop xchg inc mov mov in mov icebp outsb dec and test xchg pushf addr16 aaa cmp pop or jbe push ficompl inc fisttpl xor and je aas idivb inc inc cmp add push mov add sahf mov sbb dec mov test xchg lea sub or inc sbb ja or sbb incb mov and jb insl xchg sub sub inc jo mov lods jg loop pop add imul xorl pop add push xchg stos ret add mov mov repnz fistl pusha imul sbb mov call inc (bad) cld push nop stos fdivp js add mov (bad) xor mov lods rorl xchg call cli add xchg lea push mov add jl or push (bad) xor popf loopne inc jbe pop jge or add aaa lcall out mov movsl xor mov sub faddl stos out cmp aas mov sbb add sbb mov cmp pop iret mov and add insb mov pusha add lods mov mov (bad) sub inc out add iret add add lret adc or fsts pop loop push cmp sbb push jnp and cmp push pusha xor or jno add push xor mov sbb setle xchg mov add cli xor bound je adc stc push test repz add pop insb testl add pushf mov cmpsb inc out adc test push adc mov pop mov pusha cmp push cltd cmp add xchg jno inc sub (bad) add sbb jl les cmc call lods push mov pusha andl nopl (bad) scas lcall xor xchg add add and repz jl adc (bad) mov dec loopne popa inc cli push jge add in sbb repz push push loope sub pop add adc or push das insl xor clc adc loope test lock mov das add hlt call jno les xchg sbb or sub push roll lds pusha lahf push movl (bad) adc mov mov cmp (bad) adc adc and out testl movsb cs decb ret jo arpl addr16 sahf fs add ds xor add in test (bad) and lahf and fisubl mov push adc sti or enter (bad) xor add fmulp push cmp in fmuls jae jge jo std xor rcrb stc out add push xor jne add jnp mov ficomp inc lock sub iret pop pop jle add ret sbb (bad) mov add stos sahf test pushf dec mov dec mov addb popa xchg bound fldcw dec movsl cmp cld ja and pop roll pop mov cmc pop sub add movsl (bad) idivb insl je add insb xor pushf subl push pshufw jno sbbl jle cmp (bad) push inc lds pusha shll sub add push mov jns sub cld push mov pushf out dec cmpsl lods sarl add fwait cmp and leave adc rep add sbb add add jb jns inc out and cmpl test mov sub iret or sahf incl inc adc nop xor mov je dec pop iret mov push cmpl ss add cmp push push movsl sahf les cli mov in mov stos fimull aas inc inc mov jg mov movl jae add push push mov fimull stc adc add (bad) adc sahf orb iret xor add pusha and out mov jo roll sub sti xchg shrb fstpt mov rclb xchg fwait adc jo cmp jns mov push lds pop add or (bad) mov aad scas lret mov cmp mov push imul scas push sbb xchg adc push add cltd jb ret lahf movsb mov jge xchg sub or imul ret or popf mov adc mov add in dec adc fnstenv push sarb pusha call int sbb pop jo jns add pop scas inc add out dec sub lds test aad mov cmp jg sti jbe aaa js cmp add aam sub xchg push add addr16 fmull test sub aam pminub pusha ss into pop push add push or adc dec or add mov test shll out dec mov inc nop sbb test (bad) lahf sbb aad xor fist xchg push cmp add xchg and popf or mov orl (bad) getsec scas test mov mov stos int3 insl jp jecxz jbe add cmp xor add xor aaa add mov cwtl orl arpl jg dec jns push mov subb mull nop add push dec stos add inc cli and pop mov ror pop dec add fimull pop pop mov hlt add ds lea push mov es add sub lahf js xor into (bad) and pop sarb mov push jg addr16 add shlb add pop sbb add icebp nop idivb ss sub imul (bad) sub jnp call push dec add test add xchg cmp pushf sbb daa stos mov inc test xchg add clc hlt xchg insb jmp mov fiaddl push stos sub mov cli call dec add mov push mov int3 add mov ds orl shlb add cmc and add in cmpsb movsl rcll push cmpsl pop jle add jne ja sub in mov cmp in imulb test mov inc jbe stc jge xor mov add mov mov pop lahf fadds (bad) xlat sub add movsb add mov lahf or pusha cmp shrb add pop pop push dec add test jl add xchg lcall and add jmp movsl and add (bad) pop dec stc push add cmp scas outsb mov mov adc dec int3 or sub jae (bad) xlat (bad) add push mov add xchg out cmp int out loopne or loop ljmp push loope add pusha cmp scas dec push add inc outsb mov ja bound inc inc or scas call (bad) jb stc pop enter aaa fwait inc test push push mov std ds lds outsl xorb fcmovbe add fs out sbb jo adc dec and jp add imul mov repz or push adc hlt xor mov mov sahf sub pop xor add pop mov push and rorl pop add add in ret mov add (bad) fsubr cld mov pop loop rcrl cmpl ljmp out mov add cmpsb xchg and add and pop add jbe inc dec push mov insl je sbb lea (bad) sbb ss push scas add ja adc aam bound loop cmp add pop aaa dec jo or popf add push lods add and movsl mov push and inc jl fcoml int push xor and lahf mov dec cwtl add jl pop fcomps dec call push in jbe leave add push lods mov js pop stos fcomps stos jnp cmp push (bad) xor pop mov jo add mov jge bound popa sub pop xor (bad) push test int add adc (bad) push jp add jnp gs add cli pop insb add sbb dec shrb repz sub loopne out mov mov and call out push std pop inc inc add dec mov mov adc inc stos push mov (bad) mov std xchg mov out lret call sarl faddp jmp popa mov roll pop push mov cmp call jecxz jo sbb js xor pop daa xlat cmpsb add or sbb mov in add mov out mov jecxz int3 pusha into xor mov je (bad) repnz jns add pop sub mov sbb mov imul pop std inc and push xchg and push out adc add sti xchg add mov cwtl (bad) sbb lcall pusha enter add mov sbb incb push push pop outsb adc dec cltd push lret mov and mov sub popf out push add jno add inc jp stos shll push daa je movl jle in add movsl negl add data16 icebp clc (bad) psrlq cmc and sub mov decl pusha mov scas cli fs adc clc push and sbb dec mov shr imul cwtl fs cld into daa add jle cmc addr16 add push mov hlt push insb cmp add cld jns mov push mov inc outsb in pusha xchg push push rol add adc add add adc aad add add cli ds and xchg stc jmp xchg jb insb pusha fsubrs or add and (bad) mov add xchg pop push lock and sub xchg scas int add inc aam push dec sub jb add pusha sbb cmp fisttpll add fildl stc and ret add push in xchg pusha std push and jl,pn mov sti inc jo xor adc add std mov xchg ja adc jnp daa incl push sbb aam add pop decb sbb add fldenv mov and pop add repz sbb aad add push lcall push mov mov and jne push lds push xor pop sbbl inc add dec xlat pop add jno je aaa xchg xchg jg cli and cld pop les scas mov mov sar add bound add mov jl aaa adc les (bad) andl adc ljmp jecxz xchg mov sbb cwtl cltd outsl ret mov shll mov add cmp cmp xchg mov nop sub incb adc pushl int xchg jo mov add mov mov loopne xchg sub sbb fwait lahf data16 cld lock dec inc push push in (bad) and dec sub insb or add popf xchg pop add adc cmp adcb mov out lret jns dec jp cmp pop andl pop movsl add adc decb push insb inc mov sti adc push pusha inc int add rorb xor mov imul pop adc push test test mov cmpsb add xchg movaps xor adc (bad) and cwtl cmpsl adc test fistpl idivb cmp mov cmp lcall lods push cmpsl xor xor inc pushl cltd insl lahf sbb std add in jne adc fldcw dec inc insb sahf das adc jp pusha movsl adc add add cwtl dec lahf flds sub pop pop stos out ret pushw lods xchg jle mov cs inc nop (bad) xchg inc add enter xchg cmp cmc push into xchg dec sbb jb cmp adcl sbb adc add movsl imul xorl inc sub aaa pop mov pop push or jl add add repnz mov andb popa adc (bad) xor lods inc push mov inc lahf add lea orb das js fs xchg xor add rolb or add or scas aad cwtl mov inc xchg pop rolb call nop outsl jae add bound sti add aad push sub xor inc sbb cmp adc cmp add xchg sub lahf (bad) jne lods adc hlt lea popf pop xchg add scas (bad) cmc add add aam js mov es stos sub add mov pop test pop cmp mov (bad) xlat sahf add add push pop adc (bad) sub add and cmpl lret loop xchg jo cltd add lods icebp das outsl imul sbb xor push adc ja or mov flds sahf pushf in je ret cmpsl jo call jg test inc sti fisubrl js or fcoml outsb movsl jns jo jge mov pop mov subl insb jmp mov sbb pop jae ret popf add or insl test aas out rcl (bad) cmc adc xor add xchg or jne add in mov push lahf leave mov or and xlat jo cli cmp add ds inc xor daa add stc inc adc into andl or loopne movsb pop add icebp xor jmp int3 mov or popa and mov pop add imul jns xchg (bad) addr16 int3 sbb ljmp xchg or add jl add stc and lahf push bound add jae ror mov adc add jle dec push cmp lock push sti pusha xchg mov add lcall add fstpl jno lret add out loop insb xor and leave movsl in test bswap aaa hlt (bad) xchg xor sub test ret add (bad) in repz mov test mov and imul sbbl pop repz or (bad) adc pusha jge mov (bad) outsl add lea je add fmuls mov inc popa sbb mov sbb stos loop pop cmpl jge (bad) ja push pop pushf cmp adc test shlb or push cmp mov mov adc mov shrb jnp lcall cmpsb sub and mov and jmp mov in out push inc cmp pop mov dec repnz lods out flds push outsl iret mov and js mov cs fs pop pusha xor aas inc fsts cmp add fcoml add add cmp lea cmp inc dec pop test dec jle fcompl push adcl jg add sub or and pop es repz push fld shrb add and lods or movsb daa loop fcmovnbe mov jp pusha clc push test or data16 pop push js add mov fild in add jle adc dec pop push add push in add fsubr stos aad cmp lcall add pop jno and ret push mov jp add cltd cmpsl dec add imul and test inc fstps insb call mov xchg sbb imul outsl xchg adc les jp mov adc pop or mov (bad) dec add outsl (bad) lods scas out je cmp jae lcall inc xchg push sbb (bad) jo push flds out xchg add push add xor lahf sbbl scas xchg push xchg add in mov cmp mov leave call jnp rclb mov negb xchg aaa mov mov das pushf fldenv pop dec adc lock mov add loopne cmp or scas fisttp cmp pop add pop cs jmp add inc inc in cmpl ja mov out sbb mov aam sub loopne mov and (bad) sti lock fs or xchg icebp mov (bad) cltd andl aam aaa clc scas add insl loopne mov lods mov pop mov cmp out movsl into pop mov mov inc inc pusha arpl sbb mov loope sub test xchg and add loopne seto ljmp mov mov add daa test jns add fimull (bad) and jno jmp and fs add add enter adc add pop out add dec lcall adc jmp arpl and addb in jecxz (bad) mov push roll pop out ret pop or push dec fistl mov pop push push aam add iret dec pusha mov pop add test jge push fsubrp sub xchg daa outsb jno or mov test ljmp fwait ret pop dec lds or sbb data16 mov add fstpl xchg int cmp addl into jl ret and pop xor pcmpgtb lods imul or je adc push call (bad) add das adc xorb test mov sub addr16 aad fstpt repz les lods pop movsb sbb lahf pop imul sahf pushf push cwtl (bad) or cmp sbb icebp jno cwtl or scas repnz aam loop,pn inc cmp js into mov adc je mov test add cltd dec add dec adcl add subl imull and push pop add adc inc inc enter add pop dec ss dec movsl adc sub mov movsb jmp fndisi(8087 clc add popf ret repz mov andl aaa add popa (bad) mov add movzbl outsb shlb cli jo cld add rol inc mov jb add inc cmp add mov mov orl dec inc mov add jnp test sahf cmp dec rorl xchg nop lret add ss push adc fs mov enter movsb call and out mov xor add and scas add pop mov xchg xchg mov (bad) mov add push mov int3 addb test out lret cmpsb or sbb pusha fs mov lahf dec lret mov add mov call int3 inc daa js lock ds add inc add add sub mov pop inc mov mov mov lcall mov push popa inc add adc cmp push data16 hlt stos dec jo into leave lods mulb push cltd add cmp add cmp inc add dec psraw (bad) aaa push fbld ret (bad) mov cmp movsl push sbb int3 out in sbb cmp ss imul add mov mov mov dec leave and add lret aas test add add mov cmp mov inc stos insb icebp jnp add inc add jno ds imul sahf push inc sub repz sarb adc orl rcl sub scas and mov adcl cmpsb adc push add addr16 and and add imul repz xor out lds mov xchg sbb cli adc add pop xor mov inc xchg adc in and enter add data16 jl test jb add jle jbe icebp sbb stos or (bad) in sahf popa cmc inc add (bad) loope data16 nop or fisub pushf dec pop test clc dec add (bad) outsb adc mov (bad) mov cmp jg int mov inc jnp dec aad push pop test xor test subl mov mov add pop cs repz add push fcoms idivl xchg mov pop mov xchg addl cmp sbb mov cmpb lahf cmp nop add mov xor mov sysret sub add jo mov mov out or push sub push mov mov inc jg sti cli outsb xchg add inc stc (bad) cmp pop dec add jo push push push mov ret scas and andl int3 mov cltd in add push add sbb mov fidivr pop popf xor outsb mov iret add lcall into faddl scas xor lahf or add push paddsw inc dec mov jo je jno adc pop cld mov push arpl sbb xchg add fidiv add aas add xor cmp lea psubusw daa add sbbb xor pop add jmp jle add mov dec xchg addl pusha or jmp add emms jne add dec pop jmp lret mov add punpcklwd or add cwtl aas pop add insb xor xchg xor test add (bad) jns add xorl fwait add adc push xchg clc cltd andl add sbb inc sti dec adc (bad) jp add mov rolb loopne ljmp add xchg adc add (bad) call add xchg jge xchg xor inc leave mov cmp notb imul adc xchg cmp push add push pusha das outsb sub (bad) rclb or mov lock and xor and aam jns and xchg lret push mov add loopne jp xor and jnp,pn dec cli cmp fimul adc sub rsm pop jl dec fcoml jb orl aas or mov daa cmp jge jae,pt xchg es js stc xor add fwait cmc jo xchg into or je out sarb sti sbb xchg sub pop jp dec pop add dec cmpsl in fwait mov cmp inc outsl leave mov inc fisttp insl mov loop sbb into pushf jae add not jg sbb mov xchg lods popl mov inc (bad) push jge dec jns add mov cli xor xor adc dec pushf popf xorl je xchg adc sub sub adcb mov icebp xlat mov addl inc mov add sbb outsb mov and mov sarb sbb cltd pop add fs and cmpsb add fcmovb jo mov mov mov outsb mov and repz loope mov or insb mov repz rcr push js in clc inc es sub sbb sar jno lods sub dec add int out (bad) repz ret rcrb sub aaa (bad) adc xchg add test stos popa push incb xchg mov mov ja mov jle ds (bad) pop inc push adc mov std push lds push (bad) mov xchg inc and lret fcmovnb je (bad) pop add mov and adc mov int3 mov addb add pop sbb insb lds xor lret jl xchg sub push add (bad) xor dec sub inc pop dec mov es int3 add or ja inc out mov add fiaddl and or sub movsl iret dec roll inc in xchg ret cli fiadd add adc add xorb (bad) mov cs dec ljmp insl push sub test sub jp push pop jmp add sbb lods rorb addb add xor sub sarl jg insl out bound add jns pusha sbb and xor add add ds push mov pop jae outsl push lods sbb lods popf (bad) jp push iret sbb ret hlt mov rclb in cmp cld adc dec addl fnstsw jns subb fdivrs outsl xor mov pop les adc add jge (bad) aaa add or pusha (bad) add imul dec aaa (bad) add or mov clc add push cmp insl sbb sbb loop add (bad) repnz in add jmp jle fildl and punpcklbw inc mov pop add and scas mov sub dec add add imul stos lcall addl hlt mov js cld arpl inc mov outsb fnstsw das imul sbb std aas pop icebp add cmp adc add fcoml pop add push es pop xor pop mov dec mov mov aam jbe or mov ja leave sti sbb incl stos add and js adc mov add adcl dec or and jge stc adc in notl (bad) in leave mov cmp rcrl jno push test and cmp cmp es mov popf sub js test add ljmp loop insl push add rclb inc jnp add imul jae scas outsb cmc adc fs std ret push jle stos add push test mov adc movsl jbe push addl pop dec push xor sub out cmp jb in jo add dec loopne xor repz push outsb je pusha jmp lahf cmpsl movsb add fldt mov mov xchg dec adc inc adc add in bound add clc sub jbe fsub xorb outsb push inc add sbb in inc sub (bad) add mov incb hlt insl xchg mov cmp dec xchg pop mov xchg add pop jecxz fnstcw xor xchg dec adc pop jge add jp and push popa add icebp cmpsb repnz rolb mov mov sub sbbl out arpl jl lcall push cmpsb jns inc dec into inc cmp add jno int3 dec pusha jne jg cmpb mov lcall addr16 xor sahf inc imul mov jb push test add xor mov sbbl jge test pop mov mov sbb lds int3 jge add mov add cmp mov or add (bad) movsl adc mov sarl push mov std sub mov add xchg jmp xchg fs (bad) ja bound or sbbb cmp mov mov or sbb insb push mov inc test pop xor jne jbe push add add repz aas cltd je insb jnp dec adcl movsl jle sbb outsl pushf add cli mov add push xchg and xor push add cmp mov std and sub and sub sbb dec xchg dec pushf pop nop inc cmp lahf jp ret in in xorb or scas andb dec insb mov mov add sub add xchg add push sbb rorl sub inc cmp std lret lcall or mov aaa mov daa adc movsl divl mov jg pop repz pop or (bad) add inc xchg inc add dec stos adc iret (bad) lods lret pop mov in add push xor fldt add out enter xlat add fwait push (bad) cltd xor cmp repz int lcall test lret jo add and mov dec sub sbb add push jns xor cmp pushf adc inc outsb dec ss stc std jmp jno mov in and add lods push jbe pop add insb stos mov mov jmp js xchg cmc adcl mov xchg lahf add jno xor sub and subl stos test jle dec jae ret insb mov sub jp sub jbe repnz dec cli insb arpl or in add mov mov sbbl mov aas fmull rol cmpsl movb jmp add (bad) add jne xchg add xor mov dec out outsl cmp scas (bad) push shr inc add fadds mov cld and add subl and add sbb scas mov dec jno sarl and xchg ret xchg (bad) imul cld in or xlat scas decb pop cmp add pusha sub mov ret pusha mov movlps pop push add lock lahf add add dec dec outsl in pusha cltd xor push clc or dec enter pusha pop dec mov mov mov pop dec ret ja add pop adc js pushf je aas mov cmpsl add lea dec pop jnp test pop lcall mov je mov push add adc leave and or add enter fcoml scas jns lahf sub push fiadd push outsb lcall lret rorl inc xchg inc adc xchg push das sbb jle out cmp add outsb insb ja mov mov pop repz lcall jns out test and stos and mov cld pop orl sbb jo add jnp and testb inc ss in andl ret mov mov cltd mov push and add push push xlat out incl int3 and inc test inc les cwtl js add mov cltd fsubs int add fs icebp or adc fisttp pop cmp xor jl xor add pmaxsw dec popf or cmp xchg gs xlat outsb push imul and xor insl (bad) adc in pop jbe icebp (bad) push sbbb clc (bad) jl dec add test add das movsl pop pop out mov sahf dec dec cmp mov pusha aam arpl cwtl add sub xor add mov roll add fisubrl dec or mov mov mov (bad) dec push lods inc nop lcall pop das mov sbb xor pusha lret sbb xchg or cld daa jl jecxz push sbb mov enter or scas push fstl (bad) (bad) jle mov aam rclb (bad) xchg add push jmp dec mov add jl or sbbb jb decl mov inc insl data16 aam and fildl push mov gs jb mov mov jp addr16 and je sub sub add mov test data16 js sti jle jg inc shr xchg xor cli test (bad) mov in xchg aas add push jne push test out jecxz lods jmp or gs scas lds inc scas add iret sub inc enter cwtl adc push add sbb or scas arpl mov test xchg rcll (bad) add mov pop imul cmpb cld jmp insb inc xor sbb mov stc mov movhps xchg jae aaa and xchg pop add test imul out jne andl jmp lahf loop mov movsl aad fcomps sub sbb les out aam sbb (bad) mov mov xchg popa adc push add push inc (bad) loop dec outsl or vmread andl xor pop and sar aam xor sbb push popf pusha subl push jnp push lret add testb or xchg ficom iret fiaddl add jno (bad) or add push cmpb dec mov test sub outsl lret inc enter bound jb push addr16 adc orl push jns sbb dec xor xor jl adc imul imul or cmp dec sbb add loope cvtpi2ps hlt in mull push hlt (bad) std add adc add insb pop and pusha mov xor mov add sub test out subl cli inc stos fstpt lcall nop add cmp push (bad) or mov enter addr16 cmp lds icebp test test mov xchg add xchg push stos cltd pop add push sbb add cmp xchg lods leave (bad) in lret lds (bad) xor aas mov clc pusha cmp push incl sub mov aas and or out push enter hlt or popa sbb jb add push jl cmpl and push aaa inc into push cmpl test and add fimull mov lds fidivr add ret pusha stc pop ja add bound push in testb dec add flds sahf aam cs push mov add clc ret adc add mov pop xchg sub out gs sahf bound sbbl (bad) lcall dec mov int3 inc mov dec add (bad) push lock inc iret mov add pop or dec arpl imul xchg inc std notl jne movsb add pop fldenv or sub push testb and fwait int3 add and in pop push dec sub or frstor xor add test into pop adc pushf test adc pop outsl stos adc loopne mov out inc movb xchg pop push add fs mov fidiv sti sbb xchg sub scas mov out push scas outsb popa dec lock jecxz jl pop pop mov rclb jo add fstpt mov pusha movlps jns add testl sub fdiv lea or fcoml add fistpl and push lahf xchg or inc js add mov add mov scas inc push je lods add and cmp mov andb cmpsl (bad) fs push (bad) aaa push daa mov incl (bad) xchg or xor sbbb sub or gs push (bad) pop push add in mov nop outsl icebp (bad) cmp mov sub xor inc add jb add add mov jle add aaa jbe lods cmpsl (bad) mov mov jmp cmp add lcall add add test lods and add dec (bad) scas pop mov test push mov rorb mov mov test push add and jle add sub imul adc cmpsb les sti call clc mov push gs mov sbb add pop mov add mov add orl dec push lret (bad) add mov adc add or mov inc ds (bad) lods sub xchg add jl pop adc ret sub mov clc (bad) int add js jmp arpl xor cmp sbb jmp add mov (bad) cmp fdivp inc cld jno sbb popf push mov pop cmp and mov dec aad add rcrb add mov add out cli loopne mov push cwtl lods and in xchg out lret add mov xchg cmp jl bnd dec jne add xor stc push add pop rol enter or in je inc icebp inc push (bad) or lods mov cmp out push fwait out sbb sub inc stos jmp sbb dec (bad) fidivr (bad) jbe jl pop mov mov add leave test fcmovbe dec add mov icebp jno (bad) lock push or ret es pop sbb aas xor add lods or jecxz (bad) adc cmp loop add dec int jo cli xchg cmp add jb ret inc xchg cmp and and add jne push out test test xchg test cmpsl add das xlat mulb jge fsubl (bad) lret scas es std jnp fst jl add or inc addps mov mov pop add mov dec ja iret sbb lret leave clc pop lods (bad) nop adc sub inc bound mov (bad) std add cli jbe por push cmp stos inc ror imul daa lret mov in mov cmp das add shrb inc add loopne fsub (bad) in adcb mov jae cmp add mov xchg daa lahf mov adc mov pop xchg cmp jl jno add test ljmp das sub aad mov cmp add jno sub pusha xchg ss push aam xchg jbe and imul xchg inc add and out mov xor and (bad) ja movsl (bad) push xor (bad) ret jbe dec dec inc cmpsb adc mov mov stos and add loope in pmuludq (bad) xor adc add jns lods add idivl addr16 sub pop iret xlat out push add test push add out add xorb xchg and mov ljmp lds push dec add in lret jg or mov push lods add lret lcall adc mov aas dec jg cmovs adc lods adc dec add repnz jecxz and push add rolb add or adc add bound add mov jb push adc mov mov xchg or add outsb push add jae pop call pusha (bad) leave sbb loopne pop xchg add pop push test mov inc mov push xchg mov or aam sub jle aaa add adc add stc pop dec mov lds push add add xor push cmpsl shlb add lock out ret and fstpl lock pop pop inc popa add mov stos and lahf inc sbb sbb and mov fs add (bad) push shll pop mov orl pusha inc sub add imul add jg push mov aam data16 inc push loope (bad) ja mov aaa jne mov sub orl jbe dec jae push or pop mov (bad) jmp add sahf xchg xchg imul andps jp repnz and mov jge add imul cmp push xor sub pop inc jle popf inc mov stos sub add fldcw and fs mov das mov stos add sbb loopne in pop add dec push out mov (bad) ljmp xor and cmp lahf (bad) cmp lcall xchg (bad) fnstsw add ss mov cmpl int je mov dec lea push cmp jmp lock mov icebp and repnz out mov cltd push lret outsb push daa mov cli (bad) xor in adc push mov in scas mov inc add jns sub fwait aam pop and xor out clc ror test lods jp out add lods fwait mov xor fsubrl jg jecxz jge int icebp test add add xor addr16 adc lret xchg fwait insl jp sbbl js cmp push popaw push cmpsb or mov pop cmp andl mov mov cld add dec (bad) push mov jmp outsl pop add xor mov pushf js xlat mov add ja cmp adcl push mov lret jno sti jmp mov stos outsb xchg and jo add notb push inc pushf pop add lcall imul add stos out pop add push or dec sti out aaa xor jno push sbbl push fisubrl push sub outsb cmp xor cmp jmp sub jno push aas and dec cmp jnp aas cmc add cwtl popf rorb int in dec lock cmp inc lcall mov push daa sub fsubs arpl inc mov mov in xorb fsubp mov ds daa cli (bad) mov cwtl and insl cld sub or pop cmp cmp clc add into adc sbb mov mov add sbb fstpt ret cmp or add in add out inc test inc xor inc (bad) mov cmpsb mov pop fmull mov cmp dec mov arpl popf xchg sbbb fwait adc mov xchg cmpl pop mov mov loope mov push sbbb stos repnz add icebp cmpsb mov in sub fwait sub mov cld add shlb xor movsl mov shlb push mov cld add clc push cltd ja fild add jns add inc push test jmp jle add cmp add lret sbb xchg jl data16 lahf test fimull lret ret (bad) mov jns icebp (bad) and pop loop enter mov negb pop add lahf or cmc push pushf pop cld std add xor lods jns xorl inc lea jecxz and add add mov adc fstp add jmp scas mov add jg lcall jne test push mov xlat dec dec roll sarl frstor dec daa inc adc aam inc pushf push inc sbb add mov add pushf sub inc out add insb dec or sub dec test mov xchg pop inc cltd pusha loopnew lods add sub add out sbb xor pushf stc rorb (bad) jno inc push sbb stc jbe fadds movsb mov push push int dec leave xor ret cmp push pop add dec adc stos loopne (bad) pop add or jle leave and pop (bad) push adc test inc add das orl push insb push mov or add push inc lahf add mov outsl add clc mov das add mov adcl fcoml add pop cmp add inc xchg add inc insl inc movsb dec in sub lcall jnp test lods and add (bad) adc cmp cld leave mov pusha out shrb push add ss cld push dec inc dec inc insb add cmpsl lods mov cwtl int3 push and cld dec push lods inc inc jo mov inc sub cwtl xchg xchg imul pop add bnd mov ret scas adc popa int jbe addl ds ficomp jae mov lahf adc inc test push push dec popa jmp inc xchg pop lods insl jp arpl add enter icebp popf stos jecxz rorl pushf (bad) lods mov push fxch inc in shll push fs adc add or push push clc dec (bad) sub imul in mov adc add mov adc inc aam add sbb mulb jbe or add and jns xchg daa cmp sar (bad) mov ds test mov adc enter popf rcll mov add std aam insl cmp cmp jae cmp sub rcrb test lcall or cmpsl push in inc pusha (bad) scas mov sub data16 adc sbb dec out add stos inc (bad) cmc (bad) or ficompl sub push std inc cmpsl sub ja mov cwtl in dec popa xchg sbb push add cmp push sub ss cmp repnz mov jns pop mov shl jp sbb outsb (bad) (bad) movsb movsl dec mov out xchg stos out mov lcall inc leave mov adc cli push and orl stc mov mov add inc mov add test pop sti mov mov loop push orl mov mov mov fistpl aas test and mov inc add scas in rcll (bad) aad push add jmp test xor and cmpsb aaa adc test mov test ret out test (bad) in add mov cmpsb jp inc cmp scas mov cs out test insb add xchg stos push arpl fstpl adc bound mov loop add sar stos add int push addr16 rclb xchg adc and pop in adc pop lahf cmp mov mov adcl fs cmpsb sbb jg jns mov or mov (bad) pushf fs jne,pn xchg xchg ja jo push xchg and sub rcll add mov xor add inc scas mov pop addr16 loop xchg push jecxz or jno and pushf dec xchg adc test daa add js fsubr loope pop jae mov ds jnp (bad) dec push xor add std out add inc cmp push mov and add pop mov or inc in add mov incl mov leave xchg dec add xor sbb repnz or test adc lcall jecxz lods add inc test inc sbbb mov or sahf jp or cmp hlt into add sub fiadd cmpsb lods lret mov and std pusha cmp outsl adc jmp aam test (bad) pop sbb xor add icebp in lock in and test or pusha jb push mov stos push add and out add lahf or sub adc sbb mov ret jne emms lret push stos mov pop rcll aas iret stc inc push push popl pusha lcall cmc rorb and mov test mov xchg adc icebp ja adc pusha jge xor dec sbb imul std push out or push add aaa adc jnp enter inc fcompl movsl jb cmp mov add cmpsl ljmp orb test jmp cmpsb cltd lock inc xchg and xor or push repz mov adc rolb lds and jb jg cmc and sub xchg jmp mov inc sub add xor pop xchg test ret adc add and mov outsl sbbl dec dec test fldl cld cmp std lock ret lret xor add or inc add mov inc fstpl mov sbb test inc add sub add mov stos shrl lret add das add adc add cmp fsubl jo mov add lcall add pop adc push iret inc in add push out ljmp mov xor add and loopne test incl push daa or add out repnz cmp add inc enter cwtl jmp es add or test ljmp jo (bad) xchg pop insl add xor leave inc add aas dec push add or popa add jb mov ret daa mov int (bad) fnstsw sub add leave aad popl pop add mov mov jb pop xorl test mov pushl pop pop add inc stos call gs or add in push sbb cmp inc fmuls add (bad) push popf adc insb outsl add rorl add jp inc movsl arpl add cmp add dec lods fwait dec fs (bad) xor mov adc jb mov gs adc mov pop xchg push int3 (bad) cmp inc aam ret out push add pop and xor adc (bad) imul inc addr16 daa or push daa bound addb mov popf cmp movb or adc hlt mov add xorb cmpsl and add xchg cwtl movsl mov jnp pop xlat insl sbb add cmp inc stc add shlb daa in rolb in mov add aaa and cmp das mov rcrl pop shll dec and add jae sbb xchg out push add xor mov testl mov cli mov adc xchg add push add outsl dec sbb sub imul js in mov add inc jno test mov shlb add adc add dec data16 sbb add imul jb mov test jo cmp jmp hlt movsl ret ss add mov xor (bad) in out and add cmp popl jmp mov jo dec lcall mov ss jo inc and cmp xchg dec fwait sar fnstcw loop mov out push loopne mov pop and je mov cltd add jmp cmc inc inc xchg mov je mov pop inc ret stos push jne cmp (bad) out pop add imul sahf and inc mov adc cmp pop add icebp push lds mov xchg dec pop les hlt in jbe and push adc dec add push sub lods inc incl cmp das jbe add pop or test sbb xchg flds mov push sub outsb xor das mov adc pop mov sub mov int sbb (bad) jg push pop enter pushf in pop std sbb je add sahf xor and int3 push rcll dec icebp mov add cmpsl mov jmp add xchg jnp fstp pop (bad) iret cld add sub xchg push or jbe sti mov push in push cmpsb jmp mov mov mov cwtl lret jmp subb add jno daa add rol or insl push adcl stos out lock lret dec test mov movsl sbbb cwtl sbb push cmp add jp orl push lds pop dec push xchg inc div pop cwtl imul cmpsb adc xchg sahf repnz push add cmp enter push fsub out adc xor inc cmp pop add pop sub lea add aad pop push psubsb dec pusha mov pop aam sub adc insl repnz xchg mov int add imul movswl sbb call ja stc dec add fs pushf idivb js das pusha xchg out ds stos add push xchg lds (bad) xchg sub push push or or add inc pop ret xor insb and lret add cmp sahf inc in test add (bad) in imul and add leave insb inc push fidiv cmp add pop out pop or or cmpb loop push sbb add icebp mov add movsb clc imul sbb pop xor push stos popa push add je call shrl mov (bad) sub add xchg leave aas mov jmp roll sub divps cmp dec add xchg (bad) mov test loop (bad) fiaddl push dec mov es add jno cli adc mov lahf sub sub test dec mov adc xchg push test jle jae add jmp (bad) pop or mov add push sbb int cvtdq2ps ret test pop lret lock mov cli mov push out in arpl leave xchg add stos xor and lcall lret dec mov subl stos dec sbb ja sub mov and outsb inc into pusha sbb std add lds jae push fdivl cmp pop lds add jb cmp repnz (bad) mov and sarb cmc outsb stc gs add pop cld inc out inc sti add push pop xor movsl xchg dec (bad) dec push xor add outsb in frstpm(287 jo mov outsl xchg mov out cmpsl lock shrb sub pop je cltd add test add leave pop inc add in and mov xchg jnp loope stc mov les add fucom add test jne dec push and hlt addb pusha xor out jo pop mov or addb fs pop bound and adc adc adc decb pusha lods add mov shlb subb or sahf adc adc and add jp xchg ja add es orl pop je lret sbb sbb (bad) pop cmpsl ret add jmp ret add adc popa pushf pop dec add jns fwait lods push add mov jbe sub into inc cs cmp sbb add sub cmp lcall add pop cli mov cmpsb movsl jo test flds ljmp stc add in aas mov add arpl and divb sahf cli mov pop add xchg insl gs xor xchg cmpsl xchg xchg xor dec icebp andl adc stos xor in push orb pop xor out repz ds fstpt xchg mov sbb in das dec outsb sbb jge add add jae test idivb xor dec inc xor sub mov xchg cs xorb dec cmp xor xor cmp iret scas xchg add mov xor pop (bad) mov pop cli test ss lcall add lret leave xchg cli pushf or sarb dec xor jle movsl add les pop icebp add enter sbb in rcll add sub pop inc add lahf out test add hlt mov pop add mov xchg cmpsb cmc pop insb add cmp in add jae idivl mov insl sub xor test add stos mov scas orl stc xchg sbb shrb push sub in jg inc lods ror cmp out fcmovbe stos mov and fcmovne adc xchg xchg mov dec push pop pusha enter or lea dec sbb add dec sbb cmp es mov xor mov adc scas add mov xchg xchg mov or add sub mov arpl lret add ds or cld mov sub nop add (bad) (bad) cmp jo les int3 lds pop mov inc add fdivrs outsl xchg test cmpb jns cld jle cmp sub add pop insb push (bad) (bad) jbe mov (bad) sbb cld (bad) paddd xor fs rclb loop adc cmp (bad) je pop xor sbb addr16 add loopne (bad) pop lods stos insl adc push cmpsb add jae outsl jl iret loopne xchg scas xor stos jg lods mov pop ret or lea jae pop (bad) xchg scas fbstp push and leave and mov sbb es and mov in cld pop scas gs push insl cwtl addb mov push sub xchg inc mov aaa les nop addr16 jle mov out outsl mov dec cmp and pop inc jb cs ds clc push rorl fiaddl repz imul test pop sbb aaa inc lcall es add xchg xor inc scas xchg bswap cli xor dec sub add and or shll jns adc mov bound (bad) or pop xor add and jne in xchg adc cli add xchg cld jmp add std dec mov incl into mov imul jecxz push (bad) pop or add sub or mov xchg xorb xor and sahf cs inc mov jl cmp mov mov or aad (bad) insl loopne add xor paddsw jns js mov add popf inc sahf mov add mov add push decl (bad) xchg sub lcall rorb fisubl adcl adc addl lcall mov imul add (bad) xchg jne out movsb add jb add add (bad) jno daa or adc add shrl ja xor add mov orl pop cli lods or arpl mov jb mov cmp call frstor jmp test and std mov add xor cmpsl add movsl pop cmp jmp scas add add pop jbe call (bad) divb cmp fiadd inc dec cmpsb inc and jb mov ds lret jle std aad add mov fbstp sbb pop push jno movsb or push sahf std or inc lret xor cmp add lea addr16 dec sbbl mov mov mov and mov inc inc hlt mov inc mov push xchg mov dec popf dec into orl movl lret loopne xchg add sbb add (bad) cmp std sbb mov inc mov mov push fs pop jo cmc loopne ret add pushf insl test outsl cli add das cmpsl mov fidiv dec cmpsb lock lds sub pusha dec mov roll addr16 inc xor jns add scas sahf out xchg and fild arpl stos mov lods popa loopne mov aas mov out mov pop dec int3 pop xchg loope lahf (bad) mov int sub or lock imul jne fimull mov cld sahf sbb int xchg pop add sub dec add jecxz stc and add sbbl negb push sbb mov (bad) push orb add push mov jle aaa imul insl xlat popa fcmovnb add pop sub xchg jno int xchg sub inc fadds cmp fidivrl add sub add ja push insl sbb ds es js or shrl mov jmp mov adc xchg mov cmp leave repz or pop jle add sbb ret add movsb push jl insl mov jno add std sub sbb add stc or stos jo push ret push mov insb jl aad jmp lods or add fstps sbb or in dec adc ja pusha outsl js add fucomip fs aas outsb inc add mov (bad) add jno cs and mov add mov add pop add mov pop push aam sti faddl test sbb mov js sub insb jg subl icebp xchg sbb pop stos mov pushl hlt mov popa pop pusha repz sahf test add and xor addl xor xor sbb jb mov add or dec je add shlb mov xchg push movsl xor (bad) fnsave mov inc mov sbb dec into iret test mov xchg orl dec sub sti jecxz mov adc paddsw test cmp int3 in lret sbb (bad) lea inc inc inc inc push push (bad) pop dec (bad) mov je push xchg sbb jne pop imul xor mov push pop out enter jp es loop lcall jne (bad) test pop xor sarb adc sub dec xor and add mov and gs xchg and andl and in subl inc loope sub mov mov mov pusha jo mov fbstp cmp add xor inc hlt add sti popf or pop or repz jg pop or cltd jnp ret mov dec test orl cld cltd stos lret pop (bad) add jb sbb cmp jg adc lods mov add cmp cmp add xor subb adc jno add pop sarb pop stos push and leave sub jnp add jae add sub notb pop sbb jge out push je rcll jnp adc (bad) iret jl push add pusha sti add lods js fwait sub cmp inc loop fcompl cmp adc out xor ja aad loop adc orl xchg ret xchg aad inc scas pop pusha (bad) lahf add dec adc xor xor stos mov pop cmp pusha adc sbb or sbb cmpsl in fnstcw fs call xlat cmc lock mov dec imul lds mov fidivl add pop in add mov push jno cmp out std pusha nop dec adc adc inc ss bound sbb xor popf jge xchg stc mov popa and push hlt xor fnclex outsb pop add or jb stos fwait je stos mov xchg mov scas add mov addl cmp test sub movsb mov add mov push std daa add lahf ret cs iret mov sahf gs (bad) sbb or add dec popf rcrl dec adc imul jle inc das mov imul loope inc leave inc push and fiadd push outsl pop movsl sub mov lret nop idivl pushf mov xchg sarb dec mov cmp into add cli dec sub dec adc fcom pop roll sti in mov pop mov les push clc pop daa sbbl xchg jnp aam ret jb insl fs push test adc mov je xchg test aaa push sbb add mov mov dec xor cmpsb (bad) out add cmp xor stos sbb jo movsb sub adc pop inc and cmp mov mov add movsb lock testl dec pushf add rolb outsb (bad) mov fisubr repnz mov out mov lea into pop xor sub pop sub inc jp shlb xchg clc mov loopne cli inc in adc jg xor out xor push mov adc pop iret shll jmp fdivr loopne mov add in clc adc lret addr16 push adc pop sub add pop mov mov jno add xchg movsl addr16 adcb adc xor roll sbb adc ret add les (bad) in outsl jo stos cmp ret push adc sub inc xlat add in testb js cli aad test add fnstsw adcb dec push dec cmp inc movl cli mov subb ja mov je sbb repnz (bad) pop add mov lret and jbe add and add std test push ja pop iret push inc cmp xor mov jb jae adcw mov hlt inc mov mov (bad) je cli nop fildl into repz sysexit add (bad) adc add lea popa pop clc add stos xlat push arpl push int add cmpsl xchg ja cli decl inc add pop js jle add popf stos addl sbb adc out jb daa js pop rorb fs push dec add sarl sbbb (bad) jmp loopne xor cltd fs cmpsl push add inc cmc in jge add mov repz je cltd sahf xchg lret mov mov (bad) (bad) and leave jbe mov mov cmp dec sahf mov sbb les xchg insb clc pop add mov iret pop mov movsb xlat imul add outsb imull nop pop xor or stos add cmp bound add sub add fistp push add mov push cmp push add add xchg mov pop mov out and insl dec mov or in mov pusha mov int subl bound cwtl cmp orl in into adc cmp xchg inc xor out mov xchg les out stos mov jne add and dec adc in hlt ds jnp add sbb add xlat xchg lret pop pop lea mov es jae out xchg sbb mov xor adc adc jbe pop out test xchg jmp pop push in std add and imul ljmp loopne mov add inc push jp insl cmp add mov in push mov cltd mov and sub fidivr push pop insl mov jb and xchg aad mov mov push inc in nopl fs cli mov fcomps and mov sbbl add xchg xor sub sbb sbb dec jne add inc leave and xor add xor in repz jl and xor mov pop dec pushf sub stc out loopne movsb (bad) scas int add or fild loop stc ret mov or rorb jmp push add cmp repnz xchg jecxz pop sub jb add and mov repz jecxz xor xchg es ret out add test mov repnz out divl cmp rolb push cld or hlt jno insb xchg mov sti cmp add xchg (bad) repnz add inc dec ror mov fsubp add jo dec pop in xchg aad inc roll jmp clc sbb popf (bad) dec add adc js or add push dec mov cmpsb int3 jne add movsb xlat push loopne add stos lahf or mov imul lods jo js int3 add jbe and popf add arpl mov aaa pop sbbl xor mov test es dec ja jge mov add add mov mov mov aas dec lahf add lret jp add jmp stc add fsubs jl mov (bad) pusha add mov jmp shrl lods jl sub mov xor std add jge add xchg mov jle dec xor fdivrp inc cltd or xchg out call add sahf inc ja pop jecxz lret jmp or push sbb enter cmp mov leave lret xor xchg arpl add sub add int3 sbb jae adcl movsl lea push imul mov mov pause fs pusha (bad) jns or das test or sbb add mov jb mov or jecxz outsl sub (bad) sahf mov repz adc bound xor shll jae mov outsl fadd ret add mov mov movl inc aam stc (bad) repz clc add dec hlt jnp lret push cmpb push push int3 jl icebp subl xchg add arpl dec add les sbbb (bad) cltd push jp jp sahf add pushf and jg cmp sub adc cltd fnstsw push pusha (bad) cld pop adc insb cli add jne pop cmpsl aaa fisubl push jnp inc sub cmpsb adc add pop lahf inc inc fiadd mov rorl push mov shrb add sahf sar shrl imul push repz add test xchg loope jae xchg lods xor faddl jae adc daa inc push xchg add jb loope repnz dec subps xchg aas add aaa jnp iret push out (bad) or in stos cmp test mov push push (bad) mov mov cmc movsl sahf mov adc add out push out cwtl jp popf jle add rcrb xchg loopne cwtl jb push dec lahf testb fist push mov jo (bad) rcl xchg rolb jg sbb (bad) pusha xor xchg xorl rorb sbb fcmovnu add (bad) incb add mov int3 jbe cmp add std mov mov add data16 sbb jg pop addr16 add cwtl xchg mov inc push call push or (bad) add andb mov (bad) je addw test enter inc in add pop and sbb inc stos loope out pop add xchg sub xchg cltd sahf pop adc aas das int andb out imul adc fldcw pop orl xor inc ljmp fiaddl jo push add and imul ja mov cwtl dec lea and cld ljmp in inc jae sbb cmp (bad) and adc dec lds pop ds jecxz jl push lcall cli dec stos mov test dec rorl enter mov test add dec shll fldcw icebp push add test jno cmp (bad) adc (bad) push aam adc jp jnp pusha pushf add fnsave ljmp cmpsb stos sti push and add (bad) jl adc shl cmp test mov stc xchg adc sahf sbbl mov lods out add cmpsl fisubr xchg push shrb nop dec push xchg cmp adc xor out xchg add mov jg mov dec inc mov mov mov cmp push add inc jmp fadds ds adc out mov sub mov mov lods (bad) (bad) mov push mov cmp and movl and inc add fisub orl pop loope and sbb jno push ds stos (bad) daa cli jg lcall lret mov and mov bound add decl loopne mov dec lock xchg pushf rorl fidiv inc mov aam adc jg add jns andb sub cmp aam leave add add jg xor mov xchg xchg mov add pop sbb add lods ljmp xchg mov mov popf mov push inc xor pop sbb ss mov add xchg inc rcr xchg add fild loope (bad) hlt sbb pop mov xlat cmp cwtl and outsl add std jecxz (bad) mov idivb sti ds push sbb mov xchg ja push dec aad fcompl jge xor mov out push inc cmc mov sahf loopne mov mov sahf sbb sub cli bound jno mov fidivl mov clc push in ret into call cld push pusha gs pop push sbb test ret adc cld mov mov add lret sti es inc adc (bad) sti sahf add or push cld shrl cmp aas add fwait sti popf jo push mov (bad) icebp xchg cmp outsb je mov cmpsb mov cmp inc rolb fisttp jge mov add or ja add sub sub pop adc push icebp cmpl jl xchg and jns dec repnz ja lods jb push dec inc sub add jne jg cmp pop xor aad jecxz aas add push arpl fidivrl jo push repnz and or push outsb push dec stos inc addr16 push lcall mov bound and jg lahf sbb add pop popf jnp sti or adc stos pop icebp bnd sub out mov xchg adc dec mov repz test pop cmp xorb ret scas jmp add jle nop cmp clc jl cmp mov sahf aaa fld jg sub xchg jo shrl and and xor sub inc add xchg loop inc out mov jns inc cltd sub lods clc and fs push pushf dec (bad) in xchg stos push xchg add adc ja sahf fcomi xchg add loop or mov sub jmp xchg mov mov adc in in (bad) cmp cli push sbb repz sti bound mov daa popa mov movsb jg add mov push add adc sub sarl push sub sbb das adc fnstenv and mov fidivrl jmp add sub popa and pusha push xor push mov add and and sbbl scas dec pusha and add std notl bound add mov xchg add push sub lret pusha loope add (bad) pop mov add pop xchg push adc add sub out orl test push cs (bad) dec and push inc xchg push adc adc mov sahf pop cli pop lcall std sub add test adc les sbb inc mov repz mov (bad) xor mov in and push enter notb sbb push inc roll jno adc add push sti mov rorl scas adc mov sub popf push add sbb pop push add insb scas xchg sub add cmp addr16 sbb adc sahf inc push add ret mov and test xor mov xchg cli inc cmp dec add push ret pusha jns sub cmp lds cmovb out sub pusha mov sub lea gs push aaa add inc push xor push cmp jmp lcall incb pushf es mov flds inc adc daa mov jae dec pushf and adc and inc inc sbbl mov xchg inc cmp hlt mov das into adc test loopne xorl sbb dec push nop mov xchg jo adc add xor rep pop (bad) and jbe xor mov and push add push mov mov cltd dec add push (bad) mov jmp repnz adc sub dec (bad) dec push or mov icebp or cmp or xchg std sub pop stos rclb sbb or add pop rcrb pop add std jmp cmpl aad add ret jge sub and adc in clc and mov dec fistpll dec arpl dec sub fstl cmpsl pop jl dec add inc in xor add and repz mov pop dec jl cmp pop std mov inc add mov sub mov aaa xor sbb adc add sbb adc jae mov data16 cmp sbb test rolb clc stos xchg cltd mov sub xlat cmpsb xchg fiaddl repnz sti inc rcrb lods adc rcrl adc xchg lock jl inc jecxz adc mov ret lds sbbb inc mov jecxz adc dec testl es (bad) sahf xor and ja (bad) loope adc cmp addb jg cmp aad fbstp add jl clc int popa add or and outsl mulb mov mov leave pop scas cs add outsb mov aas push rclb movsb sahf ret inc xchg sbb xchg (bad) jo and add inc repnz mov mov mov lret sti jno movsb out movl gs mov incl and and and cs out pop sub add jmp data16 adc dec test adc addb xor sbbb sub mov xor add push test (bad) lret daa inc push add loope jecxz jl mov pop mov popa (bad) add add mov leave sbb lret mul sub xor mov mov cmp cmp mov or jns repnz cmc lds mov jo in pop pop jmp ljmp sahf (bad) movl inc movsl pop cld jo add pop and sarl sub std or mov cmpsl out pop add lea sub lcall repz and test xchg adc out outsb (bad) push add xor test out push inc mov out std pop xchg jl daa inc jne movsb and sub cld pop ja add mov inc add cmpsb clc push stos mov mov hlt dec neg jns je out inc std push push or jo sbb rolb cmovne add push movsl mov mov mov add cmp sahf pop hlt and je lcall fsts inc daa mov add hlt shrb jp add lcall aam js out dec xchg rcrl mov arpl in ret dec jbe mov cmc daa push and add xor add lds xor fwait pop mov mov imul adc mov mov mov (bad) jmp fistl or roll sbb scas mov sbb jl inc add movsb xchg insb mov mov es int3 cmp scas pop inc ja dec in xchg pop mov rolb fsubr mov add pop push cli add add andl std mov enter jb pushf pusha sub pop and push fs push enter pcmpeqb dec int3 (bad) push add push sub add test dec ja rorb out pop fdivs sbb xchg pop js xor mov xor lahf xchg add jmp mov jg inc mov adc add jmp call lds (bad) ss mov lock das add cmp mov mov sbb (bad) pusha pop into scas add jmp mov (bad) lret out out movl mov dec mov in add mov in test adc pop call pop incl cmp imul das mov je mov les sarl hlt sbbb call push jecxz dec sbb pushf clc fistl add daa repnz mov cmp sub in fsubrl pusha in inc xor cld add outsb lahf add sbb cmp lods das loopne cwtl fidivr add adc les xchg xor push inc adc cmpsb test push adc sti add sub sbb dec fisubrl (bad) lcall icebp jno add bound inc (bad) ret js xor rcrb push (bad) pop sbb push call and adcl push lret mov je adc (bad) cmp int3 xchg dec and imul push lret mov repz pop push push dec es add jecxz adc lcall cmp icebp ret adcl mov stos pusha sahf sbb lea adc (bad) or test inc in repnz fistpll add mov add fistpl push mov and inc (bad) js push out fstl mov enter sahf and add shrl in pop je jge add adc cli push dec aas mov jg dec inc out fiadd jp clc push add jne adc lods inc inc jo or ret sbb movsb (bad) push stc cmp jae push and adc stos sbb fistp lock out or xchg and or inc cmp negb xchg pushf (bad) sbb pop add sub jmp ljmp add dec jns loop loope nop jl xlat xchg xchg mov xor fsubs (bad) pop cs and mov add xchg lcall add dec sbb add je push iret stos and add in in push jg addb and int3 cli enter add stos data16 cmp (bad) pop icebp or add inc fwait scas mov add inc xor subb clc out add jg xlat cmp (bad) negl movsl rol into pusha inc sub xchg int xchg sbb mov mov push pop xchg add fwait arpl repz repnz and add pop cltd pop or stc lahf or (bad) icebp adc cmpl mov push inc sub push dec jne lahf roll scas iret ljmp push add pusha in jmp nop xchg dec int3 mov dec pop (bad) pop outsl mov cli sub jecxz icebp movsl xchg mov sub mov and loop test pop nop pop xchg mov jmp arpl adc cmpsb bound add in sub movsl add mov shl imul movl data16 stos sbb subb fwait inc jg call loopne dec imul dec xchg add push les or (bad) push sub clc fcoms cld mov (bad) and aas fdivl mov push cmp insb pusha adc pushf mov sti pop orb or jmp orl add jnp loope adc jne cli pop adc add stos bound js sbb add hlt pushf mov push sub and mov aad pop test fsts pop mov add inc or adc es fsubrl mov bnd xchg cmp insl pop xchg push and xchg xchg sub dec mov push std leave loope sbbl dec adc add jns sbb in add imul movsl mov movl mov ja repz (bad) pop cmp sbb (bad) xchg mov idivl or push and in sub les add sbb test adc xor dec add cmp loopne ds push push fcoms adc inc mov je hlt sbb (bad) push je sahf (bad) fcompl mov add ja push mov add xchg mov fisubrl mov sub cmp pushaw fnclex dec roll fnstenv les add in add lret icebp fdivrp inc lds mov les into push fidivrl jp xor pop add cmp arpl loopne mov popa (bad) xchg and nop inc jo fild cwtl lods (bad) push js add repnz pop add sub push mov mov lods jno jo aam jge lds jmp repnz cmpsb xchg dec in incl mov adc lods aaa ret ja bound sbb fild mov xchg add jl mov add (bad) stc inc sahf in add jns insb jmp outsb inc mov (bad) push or fldl out dec and dec add jmp movl lret jo mov lcall add daa pop and push fidivl push xor add aaa hlt xchg or aam xor cwtl cmp and push inc lret add pop adc fwait jge bound push lods xorl insb mov and push dec mov xor insl icebp add ret nop stc xchg fsubrs mov and (bad) xor inc (bad) imull mov sbb xor jnp rolb add dec test add sub sbb lds and jmp in add ds lods fisubl jge xor pop das pop subl xchg jbe or out inc orl xchg mov mov xorl sbb xor add push cmp mov (bad) test cltd pop popf fiadd inc adc das sub mov mov add jmp jae std fistpl xor add add mov daa (bad) dec xchg xor jmp ja add cli dec cmp mov sub imul pop pop jl lcall cmp std push (bad) pusha test mov popa sbb hlt lods lcall loop sub stos add lahf pusha mov loop ds int aas jg mov int3 pop add or mov fidiv test daa jle and test or test jp jmp inc jle inc cld sbb or cmp mov iret xor or call pop cmpb fldcw cmp xor dec jge pop push mov ret ljmp ret jb push popw push js sub testb insl mov fldl (bad) inc movsl sub jle jns jne pop or add cld je mov aas sub lret dec add fnop cmp (bad) xchg xor pop pop (bad) push lcall les cmp js icebp cmp nopl mov shl cmp bound sub pop jae cmp incl arpl and adc bound lock sbbl in mov gs jns add add icebp pop push aas outsl xorl cwtl (bad) sub fcoml cmpsb sbb insb mov push fdivrs pop aad loopne mov and pop gs sbb mov add loopne cli add fildl add popf scas repz addr16 add movsb pop outsb dec dec cli js nop or xchg dec (bad) jmp cmpl les push loop jne (bad) jl mov clc mov stc sbb sar ljmp inc out inc (bad) mov ja jne sub sarb push addr16 mull add sahf jbe js fmull sub scas movaps inc pop mov stos cmp ret push adc lcall sbb daa or add adc dec (bad) push add loop leave mov xchg add sub aam xchg repz and insl add fs add and in movsb add xor mov add sbb pusha jmp (bad) outsl jne add test sub pop mov sub jmp pop add mov (bad) hlt fldenv push add jb (bad) fcomps cltd pop mov sub dec gs ret adc pop sub xor orb clc sbb cmpsl daa je cmp add sbb mov lcall push push fcompl addl mov fsubs pop pop dec cwtl (bad) lods push mov cmp jae mov push pusha adc test iret pop andl lds subl dec ficompl loope xchg add xchg xchg incb out and and add sub pop hlt fidivl push dec addr16 add gs push push cmpsb orl repnz nop rolb pop mov scas int3 push and add push ret in (bad) jmp xor sub jo add (bad) lea add cmpsb decb cmp je cwtl mov add popa xor inc fisttpll sarb dec int sub mov cmp test cs outsb add pop jns mov fistpll lea mov xor test lods mov add das outsb (bad) cs mov fwait pop jg mov pusha mov cmp jge icebp les lret add mov mov adc dec js inc icebp add xor sbb xchg insb mov icebp mov pop call andb mov mov jl cli test rcll imul add fnop jecxz dec jb insb js into mov cwtl cmp outsl adc xchg sub call inc js adc (bad) cltd or add lret sub popf repz into aas jno pop fnop (bad) add (bad) (bad) jmp cld aam sub adc pop nop ret enter pushf repz pop adc popa and add pusha inc std insb addb stos icebp pop xchg cmp add fild xor fs das add (bad) fisubrl xchg outsl lods add jae nop add jne cs push jge add adc or jle (bad) imull push arpl jecxz mov inc aad cmp rcl inc xorl add stos call adc repz into pusha xchg xor mov pop fadds out push cwtl and (bad) popl enter lret mov sbb in adc lods mov dec in loopne adc pop mov cld cmp push data16 pop mov add stc sbb js mov pushf push xor dec add daa pop pop insl inc lea sbb cmp dec mov fiadd sbb xchg sbb add out (bad) lods add inc xchg mov jnp dec jb add call addr16 js mov mov lds sbb add mov gs push flds inc xor js pop mov repnz testl xchg test cli mov and jbe add lea imul or (bad) mov popf cli aad sub dec jb xor pushf push add jmp dec adc pop ret mov bnd leave out xchg mov inc adc testl mov add pop in pop movsb jbe lret add aas ljmp stos add jp or jno nop add mov pop jmp out loopne push mov (bad) jbe jns add xlat add lahf add pusha clc fwait xor lret xor sub (bad) add jmp xchg or fcomps iret test xor and and add add push clc aam adc (bad) mov jnp push mov xchg movsl pop cld sub std mov ret aad fisub aam push add xchg sub call xor lret cltd xchg imul fwait dec jle xchg scas push dec and gs xchg movsl sbb mov cmp and pusha lods push lret in ss dec inc xor mov adc xor repnz cwtl jmp add fnsave pop sbb xlat cmp mov add mov int test mov addb in and add and mov add call cmp aas mov push inc push fiadd ss mov aaa pop das add lods pop int test mov mov ret lods add addr16 mov jno push pop jecxz pop sub neg jo adc loop pop ja adc lret out pop popf shl pop or jp jecxz jo add fcomp call or push out movsl test mov loope testl mov xchg add adc mov cmp add in psllq sahf add add dec cmp and in add fs mov idivb adcb mov ret test mov cmp mov or enter ja cmc testb fwait test pop iret movsbl mov hlt inc roll xchg sub dec add and js jno push adc add aad add jno sbb add dec div pop into add data16 iret stc push mov or add bound add jle mov lds dec aas out cltd data16 (bad) int adc js outsl das inc pop push ds subl dec mov xchg int3 add out mov roll test pusha mov in cld add jnp nop les lea add add xchg out mov push dec mov xor xor jg mov in sub incb cmp mov divb mov outsb pusha out shr es add (bad) cs in (bad) scas std inc jle cmc rcrl fidivr test shr add sub sahf push mov push sarb jp add adc insl pop cmp pop sub lock add dec test loopne jae mov push mov dec addr16 pop xchg js jbe mov or test or loopne fcmovnbe inc mov lcall mov push sbb pushf mov add jne outsb pop push or xchg decl (bad) in add pop test mov fwait and mov test sub or cmp cmpsb cmp xchg repz sub push xor pusha cmp aas jmp jnp xlat dec xchg ja xor mov call lea xchg and nop popf ret push mov int3 mov pop in js in int (bad) or mov les sbb jp xchg xor push in add xchg pop movsb jns and xor push adc and add les cmpsb into test dec outsl inc xor mov xor fwait push pusha add (bad) or jbe add pop fucom mov cmpsl dec add leave dec aad or mov pop push mov fiaddl jae add lahf fidiv test xchg ljmp xchg inc or and mov push xchg mov loop jg mov pusha mov insl and xchg adc jle adc movsb scas push popf lret test cs incb (bad) (bad) push push cmp xor repnz jns pop cmpsw fucomp or popa sbb daa jne push adc (bad) push and jl hlt movsb push adc inc jmp insl xchg mov sub fs cmp xor in xor pop (bad) leave inc inc test push cltd xor and je add jno,pt out aad inc lahf daa test push jbe sub sbb fs lods mov inc push jge sbb jmp jno mov and xlat xor mov pop sbb rolb cwtl dec je fsubrl movl jg je xor inc add pushf in push jne mov jae mov sbb mov fldl add nop cmp std subl dec js int3 dec add cmpsl shll imul pop mov sub adcl out push add xchg scas cmp (bad) sti enter cmp addl jo popa inc xchg ret fidivr mov mov pop data16 out mov inc test pop insl mov out fimul add sbb and rclb imul lods pushf pusha push addl ja or mov mov or xchg cmpsb jecxz test mov xor ret inc xorb jge cmp cmp or push adc pushf cli or dec inc sbb mov push add cmp add push push jae fistp ret mov pop pushf cmp push in fiadd or cli or mov es cltd inc adc je test (bad) iret push add sti loop add sahf sub adc pop pop pop jmp out xor add das push loope addr16 jne add aas jae roll ret xchg mov cmpsl add int3 loope cmp test xchg mov add dec shrb addl cmp sub mov popa mov xchg scas jns pop jae xchg popl jg inc jecxz adc xchg movb lcall mov repz add into cmp mov push imul jno arpl add push cmpsb pop jp hlt inc add pushf loope das push and mov je cmp stos add stos jo and testl mov sahf adc sub lds inc cmp cli fs (bad) pop add add addr16 push add pusha hlt jnp xchg xchg int xor add bound stc adc add and sub sub (bad) xor sub lcall sub test jp inc sbb push and pop push add sbb movsb mov sbb or enter push xchg xor out data16 add outsl sub add scas (bad) adc xchg add lods xor jg js rcl punpckldq stc or fistpl mov int insb data16 add leave daa xor test jns jnp ss xchg xchg frstor xor add dec inc xchg sahf dec pop pusha sub jp ja mov sbb adc add inc xchg push add pop cli xor lods or xrelease cmpb in test mov outsb outsl xor fwait dec dec loopne and (bad) nop mov cmp cs cmp in sbb pop ficompl ss sbb inc or xchg int3 mov push add jne jl flds sub aam or mov pop xlat cltd jb inc and add xchg xor jo sahf imull add imul sbb pop add (bad) stos int jae std mov inc rclb rcll outsl lea and loop mov fisubrl and sub repnz aad lcall and jg mov mov or insb sahf mov movsl scas add cmc int3 add pusha clc ja ljmp movsl add adcl jge rorb fdivs ja mov xchg sbb aam rolb jnp jae add (bad) fmuls push inc into xor sbb lahf add xor in mov adcb pop jecxz mov jecxz shld lahf add add xchg cmc sbb addr16 jno in inc add jne jp push xchg add adc mov and fdivs add jecxz ret scas mov push jnp sbbb mov push std jl adcl dec les cmpsb (bad) or out test add cmp jo xchg push cmpsb dec cmp cld xor lds in in add ds ja mov sbb sub loopne lret mov add pop pop jnp sub mov in xchg sub cwtl ficompl or xor incb inc xchg push cmc fwait inc movsl add insl inc imulb mov in mov es fs lcall and or mov or mov inc xor mov dec inc cmp lahf lds xchg jl rol inc pop out lock mov movsb xchg mov dec dec xchg sbb sbb (bad) in hlt (bad) inc and cltd lahf inc fcmovnu bnd pop xchg adc mov or push imul clc adc sub insl or xchg pop sub pop iret (bad) mov mov jnp mov roll cmpb call aaa pop dec sbb test shlb or mov int3 add cmc ficompl rcrb arpl push addr16 add lcall push pusha loop add jge pop sub (bad) add cld fwait (bad) rclb cmpsl jmp xlat aam add dec addb inc addl jno fdivl pop dec sarl outsb lds mov jne lcall jmp sbb cmpb dec adc arpl cmpsl insb lods pop add mov decb ja insl push mov add int3 mov fadds cmp movsl xchg stos sbb mov dec cmp hlt xchg mov pusha nop repz add push daa sub cwtl pop jno xor in xor ljmp mov xchg add and scas popf add dec test mov add das mov cmpl cld xor jno pop addl lret sub cmp aad test frstor and jo pusha inc andl cmp adc push pop add sbb mov inc xlat mov dec mov fnstcw fildl and (bad) add cmp add mov fnstcw sub adc lock xchg in jl sahf mov dec push dec cs (bad) (bad) repnz add les or push hlt lcall fstpl mov mov lock xor lret cltd lcall or or mov sbb jne subb cmp fisttp fwait outsb add ds pop ljmp push cmp sub shl lret pop inc mov orl xchg xlat and sbbl adc add (bad) int add mov cli and xchg or sti loop cmp add inc dec inc es adcb int3 cli outsb jb add inc jno clc dec jecxz adc add sbb loop mov pop ljmp pop mov aaa lahf and cmc leave add jg cmp pop gs outsl mov insl dec xlat rorb sub imul je orl pop pcmpgtd sub shrb sub push sub adc push loop mov mov notb or (bad) pop movsl test sub insb lret test xor push pop dec jbe push pop adc and lahf es push pop sbb sarb outsb jne add push push push das xchg movsb mov (bad) lea xchg cmp jl add scas outsl stos mov xchg jbe add adc ret mov jecxz repz cmpsl cli pop pop outsb subl imul rolb stc (bad) mov mov xlat outsl out xorb pop mov mulb jle inc adc roll clc push push test mov cmp xchg stos dec cmc in push pop cmp wrmsr push int add js add push dec xchg scas or leave shlb mov push bound andl pop notb aad adc shll gs mov mov ret sub xor popf cmp sbb ret mov shrb enter aam or lcall (bad) dec rolb and mov sarb add mov inc adc or int cld inc (bad) mov add ss cmpsl in xor adc cs (bad) mov mov mov push mov mov cmp adc clc lcall dec sub add pop stc inc add xchg push scas ljmp dec xchg mov xchg movaps scas add nop xor cmp add cmp push mov or dec inc mov push cmp sbb inc sbb ds mov mov inc das jbe mov jae inc movsl push pop ret nop sbbl sbb push mov mov xor test sbbl pop jecxz out sub dec adc add mov (bad) lcall outsb push stos idivb jnp jno lahf test aam in loop,pt add mov inc mov cwtl xor imul jle xorl js and cmp in jl add mov push mov enter mov mov out test (bad) jb insl push fldenv push cmc xor sub pushf dec and sarb cmp (bad) adc or lods mov cld mov xchg sbb sub push sbb pusha lret mov ja (bad) jmp pusha test rclb je repz adc add or jne jbe mov cmc inc lods (bad) arpl imul scas add in xchg adc cmpsb adc test jbe pop mov inc add lds push add pop or mov sbbl imul cmp es ds add lds (bad) adc add adc jnp mov (bad) xor adc mov jp (bad) aas jno xor mov sbb xchg dec cli dec add inc pop stos mov add jl lcall jg mov xchg or testb cmc stos leave test sub lcall adc roll add add in (bad) push xor je ret mov into push or and out pop cmc sub or scas mov pusha xchg je add into sbb fmuls add stc pop fbld fwait cmpl test inc (bad) arpl pop or add cltd test dec add inc bound jle ret cmp cmc push ja or cwtl leave (bad) lock js je cmpl lds aas inc loope add xchg fstpl andb or pop cli push and loope xor inc xor popl cmp mov add xor add insb notl in mov sbb mov push sbb fiadd lcall xchg cmpsb fnstsw les adc addr16 xor pop or pop dec clc fdivrs das cli test adc and rolb push data16 movsl sub test add mov lods pop fisttpl jp addl cmpsl push cs dec cmpsl add mov adc (bad) fdivr das sbb ss pusha push push int3 or loope lods add sbb addr16 je (bad) sub shlb jbe dec add inc inc add jmp cmp xchg pusha lret xchg lods mov sub (bad) jne jg flds push jl jo add in (bad) mov por xor xor sbb repz aad xchg dec ja sbbl xor add lock subb cmp jle push and jecxz sbb xor push push popf dec add test and call fisubr lcall pop data16 shrl mov test pop push repz mov cltd mov (bad) xchg fnsave and inc mov out pop pushf (bad) jbe in sub movsb lods push pop xchg pop and push test mov xor sti add lret sub mov xorb jle sbb jl sbb out fdivr dec insl jecxz push xchg in push pusha (bad) xor dec (bad) mov mov sahf fistl dec or push xor lock gs jo aaa test out sub jno loop inc cld popf push adc push sbb xchg arpl bound movsl cmp stc enter sub idivl mov dec mov mov push enter add loopne stos add and lds testl out xchg xchg adc mov sti and adc imul pop mov inc dec cmp xor popa add js les or mov incl rep cmpsl push mov scas add mov outsb mov mov popf push and ret sub xchg xor outsb lahf add mov cld push push or dec pop inc xchg jo sbb lcall sub sub push ret std push push add add hlt je shrl add lock add inc sti add insb mov pop push add add scas mov rorl popf and jae or cmpsl or fwait adc (bad) add aas stos pop add loopne or sub lret mov pop push addl jg rcrl dec add lahf insb mov in add pop std sbb cmpsb or repnz (bad) pop jg pop rcrb test pop nop aam cmp aam jecxz clc or lods lahf int les (bad) jbe jo stc add fidivl jecxz add sbb mov (bad) pop jbe xchg and imul dec mov lods lahf js add (bad) mov fsubp data16 add inc aaa add ret insl rorl cmp repnz imul stc inc dec mov xchg loopne add repnz and xor (bad) outsb jg pop dec cmp xor test sbb add push call mov iret sub (bad) push mov sbb adc xlat push add push sbbl shrl sbb jbe add pop mov add adc xor aad sub sbbb fcomp data16 push fiadd fild sub xchg enter push fwait xchg aaa divb loopne pusha sbbb sbb add inc mov add aas lods sti lret roll add jae out add sbb sub and int3 pusha adc fiaddl aaa test mov cmpl jl xor xchg mov xorl xchg mov or stos adc push imul je push mov sbb inc add dec cltd into bound aas adc repz jecxz and sub lock cmp add xchg inc add test arpl add add cld push jge xlat iret out in movsb pop mov dec push inc popa cmpsb sbb mov cmp sbb jae and subl and add sarb lret sub push lock xchg jno mov cmp lea push test imul in aaa pop sub cmp push xchg incl mov add iret dec xchg jno add lock mull in mov adc or mov in popa pusha or cld pop inc jge ror addr16 add into add pop push mov bound jl fildl pop push repnz ret (bad) cmpsb repz pop mov (bad) (bad) jp pop inc push mov xor add arpl sahf sbb xlat add inc mov repz mov movsl jp or dec inc xor imul sbbb jnp rorl pop imul lock loop test mov sbb cmp test xor jno inc add pop xchg push or add push popa (bad) inc dec push stos pusha bound pop or push stos jno or les insl and sbb cmp jbe mov les jo ja and mull mov push loopne fs mov cmp shrl test mov add xchg add out mov add and nop jae orb iret outsl xor cmp sbbb rorb movsb jle out add pop lds jb push pop stc sub add cmc jae xor loope rcrl jp xchg mov push inc hlt lds add cmp jo mov dec lock leave iret mov mov add cmp shr mov add pop cmp pop mov add jmp clc mov sub repnz mov add cwtl iret mov rolb ret push dec pop dec lods mov pop add jnp push mov dec jle push mov sub mov pop aam lea shll mov add into icebp xor or mov add mov (bad) jle lcall out ja fimull iret popf pop sbb repz xor ds jge and jns addl inc leave adc mov add in es cmpsl jbe,pt add repz inc outsb add add add pop (bad) lret aas movsb xchg and in adc add mov jb pushf cli adc pop test stc or pop inc ret or adc add push bound sbb lds add pusha and cld andb and cmp lock insl jmp jne out or ljmp shl sahf stc mov (bad) jae add jnp pop push addr16 subl (bad) pop rcll insl mov add decb jo mov inc daa dec xor and mov add mov (bad) pop paddb jp out sbb add bound inc add addb inc xor loopne xchg sbb loop lock push add ret arpl and adcb clc fldcw mov jbe scas adc sbb lods cmp cmpsl jmp mov xor lcall stos faddl add test (bad) add mov mov imul sub cmpl and out add pop dec push or popf add xor xchg pushf jb jl clc mov dec data16 aas jnp enter nop mov and mov popa (bad) sbb (bad) lea add scas mov push inc out add iret fnsave sbb jl add rcl lahf pop mov mov (bad) dec jno mov fwait and es ffreep scas add mov add loop dec add cmp (bad) jle xchg sbb sbb and in movsb add mov gs out jecxz add lea add (bad) std insb test push lcall into fiaddl test jnp dec popf hlt dec add (bad) rolb je (bad) mov pop out add test (bad) adc xor in xchg sub add pop sbb or lcall and xchg les daa sub fdivrp pop pop not inc insl ror lds mov loopne pop orb pop sahf xor jp mov sahf inc fucompp jo pop jo mov out add cmpsb push push and fnstcw pop aaa lods add clc arpl sbb (bad) jbe sbb add fldcw int3 xchg mov pop add add pop in mov jg adc enter repz push test ss hlt add jb ljmp mov cmc mov icebp dec test in scas loopne inc fnstcw mov fbstp jecxz imul test push push push sub sub pop test pusha or push inc add inc insl (bad) scas and and cwtl add jae jmp xchg inc dec insb shrb mov pop aad push or sbb adc adc sbb mov push in aaa fidivrl test add xchg add mov jmp add loope sbb dec xor cmp add shr movsb mov cs lret xlat add cmpsl imul movsl nop push lret add sahf icebp dec fiaddl mov ret mov subl repnz sbb ljmp clc and mov mov dec ljmp push pop or add jo jp inc adc fbstp pop pop popf in aas add ret inc adc lods add dec stos dec xor add xchg pop bound pop or pusha test test inc ja mov add sbb ror mov lea xchg or ds cmp xlat xchg test xchg andb cmp ret jecxz fsubs js cs insb scas stc pop jmp inc add outsb stos (bad) fistpl mov dec js sub xchg je add mov cltd push or hlt fstl ret adc sbb sahf mov inc sarl out pop repz loope mov mov fisttpl add or cmpsb mov xchg (bad) push sbb fmuls popf add mov movb mov mov in iret test pop mov push int3 jo push jnp add adc add sub andl sbb cs xor lret scas addb stc test fnstcw outsl mov add jl repnz enter lcall incb push sbb leave pop xorl mov cmp ljmp xchg mov pop mov call outsl sbb or xchg mulb (bad) out aas add stos mov xor stos add outsl xchg repz jge bound lahf mov daa addl lods insb xchg jbe ljmp pop (bad) ja adc pusha in inc inc hlt pop adc repnz sbb and popa lret push xorl mov inc add push xchg jmp push mov add out dec xchg scas fs pop mov arpl in cmpsb mov mov and mov mov jne xor cmp cmpsb pop lret mov add push add fdivrl (bad) lahf (bad) add cmpsb xor enter adc data16 push inc js mov push lret sub mov roll and js add pop enter push orl inc sbb adc andl imul mov or shrb mov inc mov sub pop pop fiadd dec ucomiss xor and cli cmp notl outsb cld or and add jb pusha add or test mov cmpb cld scas sqrtps inc mov nop add adc movsb xchg add sbb gs daa and sbb dec push xchg aaa or mov out mov jmp mov and incb test outsl es and cmp add mov add sbb or bound adc sub xchg adc add fstpl aas (bad) pop hlt add addr16 pop xchg mov insl sub arpl mov test shrb in xor jbe andb xor push add dec or add bound sbb out lret jl sub inc pop sub out push jle mov push dec sbbl jg cs and sub adc enter add and pop das add imul pusha dec fistl xchg add sbb or add mov push aaa js subb loopne into stc jbe or arpl aad cwtl add adcb xchg jbe inc add jbe inc (bad) add mov in adc ljmp add aam sti mov or fisttp push les stos pusha imulb add mov push xor xor jbe ret jb or adc addl sbb jle aad out pop mov popa loope mov verw sub pop pop add decl add pusha mov cmp (bad) add loope pushf add pop inc push mov out fiaddl cmp add icebp adc xor add inc xlat push movsb ja add adc aaa cmp roll (bad) jne add xchg add inc mov pop les in fildl push addr16 cmp add imul mov adc lock in add and jb fwait add inc xchg test in mov shl add dec mov and mov dec ret cwtl mov xchg inc jae xor add sbb cs add jne (bad) stc popf adc test pop pop sbb jmp sub js inc fucomip sbb sub cltd sahf jns test in mov or mov out jnp je add dec mov push adc dec test fildl jge mulb add jle lods add icebp in xchg pop subb addr16 inc cmp inc pushf jp add jmp push cld inc mov sbb inc mov jl mov adc lea cmpl lock shll pop pushf popf add or add int3 (bad) inc out jno fadds popa jp lods ror add subl and jnp xchg inc jb (bad) pop mov xchg adc push pushf jae and xchg jo jecxz or (bad) roll push fprem1 xor push add pop cmp gs jge add lret inc jle test pop pop in jnp mov scas or (bad) int faddl fisub xor inc jbe add lods cs add adc les bts fcompl in add sub push or imul daa setl add add sbb push add movsb test in bnd add mov cwtl sbb or loopne pop je add mov xchg fwait add mov sbb inc add das pop fistpl popa ret jmp adc mov data16 loopne jo dec push add test sub aam mov movd pop mov daa in jg add popf popa jmp sahf or pop call ja add jns adc imul and dec inc rcr test ss mov add cmp test push mov test lea add xchg call movsb cltd test add inc push xchg add fsubrl sub xor imul insl mov in dec xor inc and xchg add lahf int3 bound movsl in inc mov sbb pop test add and adc mov clc je in repnz jo call add outsl jnp insl add clc (bad) data16 adc adc ret xchg repnz movb mov out jp cmp mov fiadd rorb movsb jl jno sbb test data16 ss add cmp inc add xor mov addl lcall stos cli mov aaa add xor push add out pushf sub aas jbe add cld cmpsb push leave cmp adcb bound dec sbb jb add mov lahf rcll outsl sbbb daa fwait sbb lods add ror xchg pop mov add xor div leave sub sahf mov and adc rcl dec mov jg lock jne fwait push cmc js mov adcb in ja xchg push add ss sahf mov add fcomps sub xchg xor dec fadd insl add dec pop add mov ja add inc xorb sti jns push dec pop and push fstpl push cmp imul icebp xchg add (bad) decl add sbb inc lcall xor xlat xchg push pusha mov scas add stc jp loop sbb cmp fcoms push lsl ss fs dec xor jg enter xor jb lock into adc xlat add lcall add mov jl add ja (bad) nop cmp (bad) popf mov inc mov popl insl cmpsb push test popa clc adc outsb mov fcmovnb jns frstor js lds jb lcall std sbbl add cltd cmpb dec jp push subb (bad) cmp add jl or or xor orl in sub mov add pusha cmp xlat adc cmp repz jp add ljmp add repz mov and jnp sub jb sub divl mov jo cmpl ljmp add pop mov mov int3 add pop inc add add iret add sub add in loope xor mov mov les xchg mov incb jne hlt in mull fidivrl pop and push lea dec mov push lcall jecxz lods hlt add and aad add fcoml lret das mov ret xchg xor test in mov cli dec add outsb dec roll pop dec (bad) cmp mov jbe cmp ss and sarl add pop movsb popa pusha fs mov and pop lock xchg rclb inc mov (bad) jo aam mov jge dec outsl je roll lds add test xchg add outsb (bad) js inc push fwait add pop adcb mov jle es cmp movsl add divl xor cwtl das (bad) sub mov push scas sahf sbb add mov shlb cld (bad) ds lods pusha into (bad) pop shll cmpsb or repz aad jl add bound xchg test xor popa add lds add gs js lock addl fldt or test add das test addr16 cmc fdivl pop or ret bound sub add loope pop xchg mov push mov cwtl jno or xor and lods cmp xchg sbb fidivrl or add test out cld or icebp cmpsb add inc xchg orl mov pusha bound add mov dec xchg test jne ds pop fild arpl mov add mov iret pusha (bad) imul and mov leave xor jns add or add popa movsl xor mov jecxz insb dec lahf fdiv add loop sub pop jo test push dec ficoml mov inc fsubrp fstl pop xor add rclb je in stc adc sbb mov popa (bad) and fidivrl jns sub ja sbb out and cmp testb pop pop jae (bad) mov xchg cmp mov push mov add (bad) mov jno jns add outsl fbstp pop jbe rorb (bad) xor mov popa adc mov adc bnd jbe icebp je dec pop add push iret dec add sbb add inc das xchg adcb inc (bad) xor cwtl push dec push add adc inc and lahf add roll or add cmp or xchg subl shlb into rcrb mov xor dec aas mov add push jb rclb add dec jecxz dec mov mov mov subl fcmovnu add xor push add icebp (bad) add and add add mov xchg sub ss jnp ja popa imul xchg mov xchg das add jge or in jns test hlt ret sbb jle sbb scas dec pop add out push jecxz das sub icebp lea xlat in sbb inc xor xchg add push pushf add sbb fisubl mov jo jo push movsl fwait test mov popl test pushf movsl out jne in add int3 fwait clc ficoml or mov add cmp xor faddl pop test in mov mov imul sarl sbb inc lds (bad) push add jle movsb add mov add mov mov push jecxz les mov popa arpl inc or add lds fnop add inc cmp mov scas movsl sbbl pop add aam aaa jge xchg sti sbbl faddp es add fs mov orl xchg dec pop adc stc add inc jo out jns,pt add dec (bad) cmp mov out inc icebp aam cmp or add inc data16 in add or out test push sub pop push andl adc adc mov sbb mov lds mov add dec aam add xor push pop pop push out ss push shl or mov outsb push sti sbb xorl das lret xor push mov (bad) fldl in pop test (bad) adc mov les ds push in add lods jbe pop mov loopne imul pusha xor sub js pusha xchg xor clc inc fwait cmp addl pushf ds lods inc dec outsl icebp cwtl add es (bad) push dec add push test adc sbb (bad) mov dec add adc or fisttpl jns lret push addr16 out test mov negb cltd mov adc ret repz xlat outsl das jp pop or dec (bad) pop rolb roll je xor aaa push or lldt sub add mov lds mov sti (bad) in stos pop add movsb or pop cmp push adc add data16 jg imul jns add push out add fdivrp data16 adc sub test int3 (bad) add out sbb sahf add mov ret add jbe pop mov mov inc cmp add mov mov mov movsl insl xchg xchg xor mov jnp jne gs push push pop loop pop ljmp mov add inc and lret and outsl rcll push and fwait sub add xchg xchg in mov add mov (bad) out pop xchg push std (bad) cmp add mov or ds xchg cmpsl add sub repnz push mov or add add cltd or lgs pop sbb popl adc rclb add lock in sbb loopne subl xchg add xchg in push add bound sahf xchg cwtl inc xor xchg push lds (bad) mov sub je mov js in mov fsubrp add jbe insb stc test pusha add mov xchg add and shrl add jb cmp add daa push add mov sub cmp subl pop push push clc rcr mov dec nop push cmp fisubl les pop call jp mov in loope jp push int3 mov push add mov adc cltd jo push add test pop pop pavgb sti add jmp ljmp outsl or cmp add iret mov jnp lods jle imul repz stos push sbb js mov add push sarl sub fcomip insl movl in sbb fadds fcmovnbe sub fnstenv js subl in jl mov pop (bad) fisttp sub xchg inc xor leave jnp pop add dec pop aas sahf popf hlt ret fnstenv aam lret mov push xor xchg add add jge jecxz xchg sbb add sbb fldl cli dec cmp pushf pop cmp std push (bad) or es add loop cmp int3 inc add add inc push and mov inc sbb mov std (bad) sbb add cmc cmpsl jnp int3 cmp jbe sbb lret inc out rcrb adcl dec pop lcall lea add shrb (bad) int3 outsl add pop dec insl sbb lret inc jo mov xor mov jle pop add dec inc jge arpl add sti adc loop mov fucomp fwait lods ljmp popa popf inc fcmovb ret pop imul cmp outsl add pop pusha in add pushf sbb out add inc mov pop daa jmp jmp cmp mov cmpsl popa jb and (bad) push loop jbe add sbb cmp jmp lock insb jno add mov enter in add sub sub sbb inc cltd add add in test or push sub cli lcall out pushf int3 pop mov stc xor add add jae lahf cmp sub mov mov xor sahf popa cmp cmp rol testl ja adcl jo (bad) (bad) je add sbb adc out add pop and add lea lcall inc out push add sub sti cmp adc cmpb or inc cmc add mov jno add lods dec ljmp xor daa xchg cli mov push rorb mov pushf and xchg add enter add shll add (bad) cli or push dec xchg sbb lret sbb rolb xor push sbb mov mov push mov addl mov mov out sbb pop xchg aam sub (bad) jo movntq cmp (bad) in cmp xchg push push mov jae sub test test jmp aam pop or in bound in jle movl ret sti incl and dec add cmp cmp xchg pop adc xchg pop repz repnz adcl inc xor push inc and shlb push (bad) cmp test lea cmpsl adc add mov mov mov push adc (bad) stc inc jge add add or add ja mov jp (bad) cwtl sbb lret out aaa mov cmp jne push test push add aaa mov mov in aam mov fdivp dec fildl push das add xchg bound jb mov or scas dec fadds sti in add adc xchg roll iret lods add mov lret and adc gs cli mov mov sub int3 add call lea daa addr16 jl inc push inc jo xchg mov cwtl add (bad) pop add push xor fstl sub enter out repz dec pop sub dec loope cmpsl fs add mov cwtl icebp xchg int ljmp and cmc mov shrb popf nop sbb fild xchg mov mov lods loope dec push or xor push push mov jbe sub mov sbb mov outsb decb mov or cmp dec and adc sti adc add sub add nop mov and add call add fdivrl jg pop nop sti dec xchg fwait aaa dec fsubr add inc cmp imul ds push cmpsb into xor cmp (bad) fwait inc (bad) pop inc scas lret adc cwtl add sbb pop add and xorl in in mov stos push hlt push jl lahf (bad) out inc (bad) pop mov fisttpll jb add ss ljmp movsb into mov xchg jbe inc or mov and add mov sbb gs fstps jg les or mov arpl mov sub inc adc aad stos add xchg push add mov jne add test lcall inc push push add lea add lret pop mov and push or add pop cmp add scas xchg inc add xchg in add movl push adc aaa pusha pop decb scas pop mov jnp sbb add jb jno daa pusha roll push mov cltd add movsb out and test sub pushf cmp jo popf mov cmp add inc cmp leave jno icebp shrl adc or xchg daa dec lcall lret mov ds add push jb xchg in scas adc clc inc iret fild xor add and xchg sub test sti lret mov pop jns aam addr16 xchg and and iret sarl inc xlat subb sub dec addb cmp and sub sbb lds add out adc dec inc or loope and xlat mov js xor ljmp push fs dec pop sbb stos jo adcl popa rolb movsl mov jge add sarl pop jne outsb add gs cmc fnsave mov (bad) jp sub and rol sbb jl out rolb and inc xor add lret pop sub mov mov cmp mov test ja (bad) mov inc fdiv sbb mov mov push sbb stc inc xchg out cmp and mov jmp add test sbb sti xchg push jbe add push and out sbbb sub es cltd lds scas in fild aaa fdiv push mov add stc or add mov adc sub add push or add idivl test dec dec lea loopne aam sub lock inc mov ret mov push jne andl xchg xor in xchg add leave dec test add xchg movsl jg pop push mov mov fistpll add xor mov push add lods dec loop pop pop or cmp fstps push popa xchg jno sarb daa pop or add iret cmpl aam in cmpl ds or lahf out fadds pop add scas frstor jmp dec mov jns cmp mov les add test add pop sub inc mov add cmp adc lret ret push push add sahf pop jb cmp nop mov jp aas testb (bad) cli out js ret cmovs enter fs jmp inc into cli add (bad) in add sbb sbb push add adc inc jno movsl adc adc aas rorl pop dec xchg rol popa sub inc cs data16 pop xor sbb ja push popf arpl faddl jae push xlat inc std add stos xor xchg sub popf in push mov pop inc jg movsb mov mov mov adc jnp movb xchg and or push movsb add xchg pop mov adc test xor movd fidiv cli stc push cmpsl and nop xor cmp in mov xor xor sub into (bad) fcom pusha enter test pop pusha push aas es add push xchg mov stc jmp fs mov sbb dec das lock stc daa in push pusha add call or add adc xor add pop push lods jo in xor pop or add lahf pusha xor das mov pop icebp outsb hlt sub xchg scas pop push mov lret mov pop out lods mov andb xor add or ret mov or fstps stos mov js aaa push add xor mov addr16 fidivl add in jp cltd mov add sbb or add inc xchg or jle (bad) jmp and adc loop cmp and cmp push lods je shll (bad) hlt xor jle inc mov push call icebp push lahf cs test outsb adc add sti dec mov mov sbb and push mulps mov mov sbb ja jno mov push or div (bad) pop fildll mov es cmp or pop test fmuls int xchg shll daa pop imul mov (bad) or idivb lret adc cmpl leave stos pop pusha mov and dec popf push adc cmpsl in sarl mov or jbe xor in add inc inc (bad) mov aad add roll mov subl add cmp jle add pop aas jmp add xchg sarl stc add jbe (bad) outsl test mov push sub dec add push pop mov pop test je jbe imul imul push out les or cmpl out cmpsl and (bad) mov iret (bad) dec out movsb and mov (bad) dec adc jo add out inc mov fs pushf push mov mov imul inc shr sbb jbe pop mov subl out lahf adc jmp inc and push add jno fs icebp addb dec fldl jbe jbe pop inc sub dec rolb es push jb jle push push andb lods daa push push mov out push ret cmp xchg imul pop scas cs xor bound inc cmp inc ja inc push or mov in cmp mov (bad) and cmp push jg hlt add dec test add jne ret outsl inc mov add sub cmp arpl push mov ss xchg mov push hlt sysenter mov mov and shrb mov adc fcompl add es add jl pop sbbl push pop mov imul stos and mov (bad) in adc pop push xor ret out shl jae in add loope call mov in xchg sti call add pop pop pusha aas (bad) add (bad) pop roll loopne lods add mov and and js mull cmpb sbb insl adc loope pusha call sub je lock es mov cltd sbb or xchg aas jecxz outsb int3 shrl mov adc inc mov (bad) jns add enter add add int3 fucomip lods jg (bad) sub mov adc sar add bound movsb cli das cmc pop andl je jno add ret dec faddl mov xchg shrb add jbe dec icebp add cmp add lds add add mov (bad) jb and xchg sub cwtl daa sub add std inc pop inc push (bad) mov xor test mov in (bad) imul mov push in sub scas (bad) adc mov pusha mov xchg (bad) stc add nop adc iret (bad) lcall jp out xchg cmpsb xchg push popa js enter loop push xorb out dec in or es jmp fcomps push sbb xlat add scas popf rolb jmp sub add inc loopne lock shrl xchg mov pop xor add int add popf movsl mov jns push xor cmc and jne jae add dec push push mov testl rcl sbbb mov inc add cmp add mov mov add xchg movsl ret xor xchg push mov ja,pn add aaa test or jmp add out add aaa movsb mov add int3 popf xchg jl cmp mov scas add jecxz adc aad xchg add mov jl push cmc or scas mov sbb or cwtl jno cmpsb lods push pop fidiv mov orb js je inc add mov test mov xchg add arpl (bad) out cltd out xchg xorb bound fdivrl (bad) and orl jge and pushf shl push jnp fidivr mov test add inc jl mov cmc mov and xchg pop mov sbb cmp insb add xchg xchg andl repnz push jno into push and jmp pop cmp inc pushf je pop sbb pop mov mov xadd cld or add test inc mov push jns cli sahf mov sub xchg adc aad sub insb jle bts inc outsb push add aad gs mov sub fadds data16 mov add pusha sahf jmp test sub and std fisttp jl add and sbb rolb in shll cmp add lods xchg mov loop pop inc cwtl clc rolb inc inc inc mov add lret loop lds push push pop addb jns or dec dec pop fistl sahf add ret mov cmp sbb or cmpl sub addl mov mov cmpsb push push and lret xor pop sbb mov fstps jg fiaddl sbb daa mov adcb out data16 add call mov movsb add (bad) ffreep icebp mov dec add add lret aas jecxz test push out fwait test pop iret movsl lods jbe or adc cmpsb js jo xchg cmp mov xchg jmp pop loop inc dec ljmp mov (bad) dec ja fild xor jnp out jl andl pushf ss add enter mov xorb scas sub pop sarl in add cmp mov and mov sub lds scas mov mov inc jg xlat inc and add stos xchg pop and mov add movsb jg into cmp add scas dec sub add fisub fwait ret jp inc xchg pop add push sbb bound out cmp mov ret add stc shlb sbbl popf cmp adc in inc jl cmp push js push inc lods pop lcall jnp and xchg repz data16 out or or sbb popa cmp xor test cwtl fnstenv aas daa sahf rcrb or pop (bad) mov dec xor jle stc in movsl sbb sbb mov push fld cltd arpl out sti sbbb in fldl push adc sbb rorb imul inc (bad) xor pop (bad) mov (bad) jne stos jge repz mov mov iret and ja or (bad) mov push lea fiadd mov int outsl push jmp add cmpl popf insb sub aad pop into add pop xor and xchg insb fsubs mov cs push daa inc subl divb mov incb add add pop xor mov mov pop mov sub addl pop push cmp test xor xchg cs and mov xor mov xchg (bad) in mov add push and pushw cltd or add inc outsl and in sub lds test xchg inc dec mov pop insl popa jle (bad) aaa cmp xchg fwait lea cwtl push orb fsub (bad) outsb xor popf (bad) repz push ja sub mov and lods dec add in std mov aad cltd push mov jo cmc je jo pop push add dec add iret xchg popf insl aad sahf addl add and add jo (bad) cmp jge cwtl out and xorb das dec (bad) add push and pop inc imul xor sbb ficomp sarb sbb cld outsl mov loopne xlat adc mov add in call mov jae add push add in mov add mov daa sar leave enter add cmp jae add bound aam fsubl xlat or pop inc add mov add in xchg jp xor inc pusha shl add pop inc add scas mov push aaa mov xchg and jnp icebp xchg mov lahf roll pop dec imul das insl adc fwait mov jl mov sub sbb add jbe stos cs (bad) and dec aas inc int aaa mov jae push mov inc bound mov push jno add jecxz xchg scas jl sbb sbb jbe mov cmp popa das outsb ljmp push dec call add ja and and push mov xchg outsb push sahf addb imul cmovl xlat je xchg cld (bad) shll jb lcall jnp xorb jl das pop repnz icebp mov lods xor or fcompp mul add jbe jl rorl bswap in add xor adc xchg fstp add xor popf cmp cmp cmp ss pop jo add call push stos sti fildll add pop lods mov cli int3 popl xor (bad) (bad) jb lahf andl sub add in pop inc (bad) enter sbb cmp aas scas ds (bad) pop push pxor mov mov push or pop jmp stos mov jbe push push iret xchg call pop (bad) pusha subl movsl dec outsl scas fildl adc sbb cltd test ja iret add daa loopne lahf ficom test push add jno aam lock imul xchg pop cs push push shll dec in bound inc imul fs xor jo xchg ud2 jecxz pusha mov mov dec push out roll jg xor pop dec jne add ficompl mov jo jno add push xchg pop sbbl ljmp dec jecxz push sub jo das push adc pop xor cld test int3 ret mov and bound sub mov jle aam sbb xor lods jns push lea ljmp fldl push xor pop divb add mov aaa (bad) (bad) addl inc pusha push repz fimul dec dec popl mov lea stos dec pop cmpl jg mov pusha pop push pop nop dec cmp shlb ja (bad) sub add or call add mov sbb and bound and dec iret adcl (bad) ja add shll pop stc adc jge xchg adc stos outsl push (bad) lods cmp mov lret fsubs mov or fldl adc push test sub jb repnz stc xchg nop aaa (bad) jp add adc repz orl gs roll and imul cld fcomps mov jb (bad) fistp mov add cs xlat lcall mov add loope ds loopne adc cltd and out xchg stos nop inc fadds or cmpsl andl jnp xchg or xchg adc and outsb cmp pop ret mov les add pusha insl rcr (bad) aaa orb mov popl or lock cmpsb mov roll ds stc xchg cmp out mov hlt or mov push fsubl cmpsb jle add inc cmp adc add and xchg imul adc adc mov pop in test es dec pusha les das push pop ss jmp add fiaddl adcl and cmc and bound mov mov cmpsl jg inc aam dec dec es jb mov pusha in sub loopne push mov mov inc (bad) jge add xchg repnz mov aad inc loope movsb gs unpcklps into cld add and pushw rorl sbb xor dec test in popa jge (bad) add sub jp icebp int3 dec push ret xor pop add sbbl add imul mov pusha movsb cmp test addr16 insb mov int3 shrb cmpsl and test mov mov push dec pop out adc inc outsb inc hlt cs push sahf jl add testl stos add (bad) xchg pop sbb push push addl add push jp pushf sbb jle jno icebp add repnz sub cli jo in (bad) jns mov mov xlat dec or mov dec out lods dec add jbe adc fs ret rorb call cmpsb movl add or lea sbb out and mov sbb push inc inc mov aas push push pop xor fs lret xorl add jle add cmp add and inc mov jecxz add out xchg jl mov ret xchg popa loop out mov jp add pop es xor or cwtl inc clc or stos mov sbb mov pop xor invd and std sbbl xchg lods add pushf push addl lods or cmp add scas cmp xchg popa or sub mov divl mov add pop inc ficomp inc cmp lock add adc mov fucomp inc hlt mov (bad) (bad) (bad) cmp lock xchg fdivp scas mov loopne pusha push add sub add and insb dec test jb mov popl test pop pusha int3 xchg pop fs inc ss cmp xlat mov jp dec add jmp fiadd in jae jge add add test mov sbb cmc mov faddl pusha inc pusha mov test and cld xchg push cs adc jae add pop xor aam out inc mov out shl sti int adc movsl or sbb sub outsl push loop iret out push adc add sti add pop mov push or pusha insb push xor jecxz outsl js imul pmulhw mov dec or jno cmp bound and dec scas add pop pop inc ja les add aas arpl icebp jae xchg add dec mov sbbb push or pusha sbb pop adc push or push pop pop jg lods add add lock xor push jne fisttp inc repz cld cmpsl es push cmp xchg pop jle ja scas sbb mov push and add jne outsl notb mov add pusha loop pop cmp je adc stos and jnp addr16 xchg xor jp adcb push icebp push sub cmp out mov fstl das xchg gs jno mov jmp cld mov arpl dec dec fdivl insl mov lret cmpsb es dec rcrl push add movsb test jp cltd add mov xchg aas (bad) notl or scas or test adc add out sahf in das cmpsb insl cmpl inc add mov or and outsl subb aad cwtl jmp add sbb (bad) aas push bound add mov cmpsl stc add inc or add imul add cmp cmc inc fildll pop add add jne stos adc das dec pusha aaa int (bad) pusha or add std rcrl add (bad) xchg sbb test sub ljmp cli js lods xor pop xchg sbb out add sbb mov mov movl daa into mov xor mov add sbb fnstcw insl add and fs inc add cmp loopne in push popl ds repnz insl add neg icebp call mov xor push sarb or jmp daa mov pop dec xor inc xchg inc add es sub inc xchg add pop int and pop sub add or mov push xchg add daa xchg notb aaa xor add fisttpl lods adc mov arpl pop lock cmp aam dec addr16 push mov add mov ljmp sub adc sbb add xor xor in lea xchg mov add (bad) sarb scas jl orb rorl xor mov push xor stc pop mov mov push mov pop inc pop inc (bad) xor pop sbb nop arpl add outsb mov lcall add scas hlt and cmp sarl sub adc cmpsb inc jp sub and lods mov fnstsw das lods adc dec fistpll add mov jne pop push cmp xor add (bad) mov in xor dec add mov (bad) add repz add xor add or or xlat cmp mov lcall cmp daa jo ja into loope bound mov pop les out icebp or movsl mov cli sahf add jecxz xchg mov pusha add mov add sbb mov mov ds add mov movsl popf jle pop aad xchg xlat xor popa inc dec decb repnz andl mov dec sub sbb xchg fwait push add testb popa addl add (bad) jno scas push mov pushf (bad) xor es add repnz iret data16 cmpsb adcl ljmp icebp adc xor or and and lahf jb mov fistp inc loop fldenv add xchg cld push add loopne call (bad) and jae fldt jo mov cmpsl je testl push hlt sbb mov dec fsubr adc mov sahf or lock shl ficomp xchg xchg mulb inc jge push leave out add or pusha inc rcrl std add adc aam movsb or (bad) sbb sti xor lahf enter lcall add and lock lahf mov add add imul out jecxz cmpsl push test movsl das inc fnop daa sbb cmp int3 cli jo pop or mov adcb mov sahf and xor add (bad) ja add xchg mov or mov mov sub mov clc aam lock sub lds xchg jae aaa shlb andb popa out iret or xchg insl insb add pcmpeqb (bad) add sahf sub add call sbb xor mov pop xorl mov cmpl inc xor inc dec cmpsl add jl pop pop lock mov pop mov inc sbb into mov lahf roll addr16 adc add mov pop jnp add jmp aad enter and xchg add adc mov subl je jp dec mov arpl or in mov jae pop jo movsb pop add adc pop xchg leave test inc mov (bad) dec sbb push add addr16 leave sbb or daa dec mov rorl inc pop std lret fldt stos adc mov xchg jns (bad) dec cld dec mov push cmovo inc cmp cmpsb fs add pushf sbb lea xchg mov mov cmp adc out mov es call fadds adc sub add js sbb add push mov in cmp and rcll sahf push add adc je,pn add pop jae lret push mov inc (bad) out sbb icebp hlt xchg scas ja inc add pop sub or arpl jle adc and int3 aaa jg xchg jge xor jo pushf pop dec nop mov scas popf (bad) lret add bound icebp test imulb sub lahf pop out cmp orb sti cwtl inc roll sahf in rol stos mov pop add lret pop orb dec adc mov sub mov jb out inc xlat cmpsb xchg xchg in add or mov cs add int3 stos popf lods incl xor clc jmp add xor push call lods adcl jmp sahf inc out test pushf into add mov sub dec jmp add imul push xchg lds test (bad) and mov addps cmp pop mov xchg xor aam repz lahf add in push sbb mul mov add cmpsl sbb stos (bad) movsb push test sub (bad) pop inc sub xchg cmp add loop mov test adc push add popa test test mov cmp pop push insl mov sbb or jo jmp lds jb loope sahf mov lods inc dec mov fiaddl pop inc imul orb cmp adc loopne jecxz dec lret test add jo (bad) mov aam dec (bad) divb ds or xchg jle add (bad) (bad) cmp adc mov bound xchg lds sbb mov jle xor lahf mov dec mov dec add out mov add sarb lcall pop inc outsl sahf out jecxz xor flds inc fsub lds add aad add mov repz or push lea dec sub loope and add fisttpl push jge ljmp es test adc push cwtd add out gs pop dec in add shl inc add pop push jle les lds mov pop xor aaa andb cwtl adc add jle inc stos mov jnp sbb add mov or push jle inc lods and (bad) decl jno scas sub pop add gs xor push push adc pusha pop add mov lods sub nop jae fcoms cmpsb pop ljmp pop loope jle cmp js xchg push push (bad) out cli xchg jle loope sbbl push mov adc sub xor or push inc pop add addr16 insl dec insl add mov fisubl fwait aaa pavgb mov pusha cmpl adc arpl jg push stos sub jae add pop push (bad) adc sahf shll ljmp add cmp bound and or and add push cld dec inc popa movsb add pushf and add ja inc (bad) addr16 add shr pop mov stc add test fiadd sub jecxz push jno xchg movsb xchg add sbb xor (bad) fcompl add xor mov popf popa add je aam test push add xchg aas cs (bad) call sub mov push xchg add ss aad and (bad) xor ffreep dec mov test cmpsl aad aaa adc jg mov dec add jnp cmpsb ret xor jmp cltd fildl xchg mov pop xchg int js call push inc ds popf mov cmp and (bad) pop std add pop cmp sbb clc xor cltd mov xchg jmp pop repz cs xlat pop jns (bad) cli iret fsubrl jne pop push loop add cld jb adcl orb test xor add sbb add dec pusha pop add adc arpl push add lcall mov pusha fsubr adc inc (bad) jmp adc or add repz cwtl xchg into sahf lcall mov add mov jmp andl xchg mov js es popf xor xchg mov js insb sbb add repz jnp sbbl jp pop repnz dec pop mov or jo or xchg jns add stc out mov add pop push and cmpsl sahf add fisttpll add or pop dec mov push add pusha cmp xchg mov aam stos fwait jl fs ljmp fldenv sbb lods inc pop or xor mov jge and jp add sub (bad) and cmpsl sbb inc xchg and ret das andl into pusha mov jns add dec inc roll dec aas fldcw jnp jecxz sbb mov and sarb xor aaa cmpsl sub lcall cmp lods add inc mov push jo loope xor addl push in cltd sbb sbb mov mov dec pop mov xor sub lret mov iret fimull test stos stos es insb jnp jge (bad) rcrl cmpsb jl pop orb jp out pop ret add ljmp mov xlat movsb dec repz or mov or mov and xchg xor adc das xlat add out shlb push dec pop mov mov inc aad popa mov in mov add cmc add daa mov xor mov add xor cs mov in xor imul add add xchg pop pop fidivr inc lahf mov add xor pusha jno inc mov fwait xor push pusha stos dec js xchg loope sbb sub nop movl out sbb je (bad) xor adc orl push in rolb repz adc std add testb loopne jmp (bad) insb in cld ret stos or (bad) add pop into sub (bad) cmp fdiv jb push push xchg into pop push dec insb xchg dec gs das cmp int3 aaa ljmp mov verr jb inc xorb cmp and push (bad) inc hlt mov jno inc in pusha jo add jo mov mov push mov and add jb inc clc pop fisttpll add fwait add xor and andb dec leave mov testl shll pop jns fisubr add lds push and maxps and pop adc mov sbb js xchg sub mov add xor fmulp dec cmp xchg inc into or mov pop insb cmc add xchg sbb scas dec stos outsl add mov icebp mov xchg js xor push into cmp pusha out jnp fisubrl jae in push pushl sahf add (bad) xor add js cmp pop pop sub loopne das fcmovnb pop pushf add add fsubrl in push enter inc jo cmp and xchg push add pop outsl mov out std pop xchg jle add sub js scas inc xor test push shrb loope in mov outsl push and cmpl daa add push ret xor notl ror popfw das add pop add es push popa test inc mov sbb pop mov pop add ficompl test add inc inc add ja (bad) mov jge (bad) pop shrb push xor jg jno mov inc xor push aam addl adc dec pushf test jmp fadds mov add and testl adc jne (bad) jo mov add cmp sub lods mov xchg add xor pop add pop scas daa repnz movsb add mov mov cmp pop xchg sbb repz lock cli std xor and jl dec add adc mov add (bad) call outsb sbbl mov xchg add inc xor pop add notl out add test (bad) lret push outsb daa add imul mov movsl scas pop js orl lock pusha hlt fbstp test fnstsw mov mov clc jae std sbb fwait mov pop movsb push mov fs adc xchg dec adc add cmp mov mov pop ret push mov jbe xchg fldt iret jbe add sbb lock sbb out outsl mov dec jns enter into xchg loop mov add insb jb pop stc daa fadds js mov push add (bad) hlt xlat add xor sbb pop (bad) out aam insb push or pop mov mov inc lock mov repnz add mov mov adc xor jbe xor pop ret lahf or add mov (bad) int3 xor sbb mov popa hlt js stos incl xchg call or push xchg dec arpl jo add pushf (bad) stos std idivl and fnop add jb inc jnp sub adc test xchg fs int3 add push fiadd sub lods add sbb lahf mov add pop or fiaddl mov adc clc in outsb repz add loop add mov xor (bad) fwait or cmp push sub xor jge pop sbb popa mov sub jae cmc test and and cld (bad) dec push pop cwtl pop inc jno jnp into lea pop inc iret mov adc push out loopne sbb jns pop test add cmc aaa out adc add aam in test xchg in add xchg mov add test lret mov lcall repz add lods xchg sub iret loopne sub popa cmp fldcw and jae (bad) mov gs inc scas mov insl sbb lcall or movsl xchg in addl cli fcomps adcb cmc xor add mov popf stos pop xor adc add loope (bad) push pop out dec xchg add adc cltd xchg add mov sub push mov repnz enter sbb js xchg jo adc jg add in push jmp pop push xor cwtl loopne add aad dec call pop inc dec jmp sbb dec (bad) sti lret and push push adc aas jecxz in or cwtl outsb arpl and mov and mov sahf lret es add scas inc aaa mov lods sub pusha lds mov add (bad) icebp push pop ja popl nop pop xor jge cmpsb lock and add repz outsl push repz vmwrite les mov inc testl out jne iret jecxz push aam add inc fsts and mov (bad) or adc subb xor fiadd mov sti add add iret cld data16 inc xor inc push mov cmp test aas push js sbb sti pop test pop mov push add subl dec aam ds mov push or es repnz inc (bad) cld adc sbbl jp out add jl pop add test dec push dec add sub cmp add or das push iret (bad) aaa add clc add scas xchg aam jns test (bad) dec sub push pop outsb add arpl mov pop in inc (bad) add flds xchg push out add nop stos test stos aad and push jno and cmp xor add fdiv int3 jg add mov les mov xor mov jae add sahf and inc std fucomi mov loopne and test (bad) jno inc adc dec pusha test imul sbbl push aam adcb jg call add nop and into sbb movups fildl jo outsl and add lods aad add pop cmp out pop addl cwtl insb pop test add pusha divl push stc add aam test cmp loop adc lret add ja dec mov mov dec cmpsl arpl add push jge (bad) adc test cmp xorl pop add push cmpsl data16 mov lods scas sbbb push clc add add inc adc popa mov xchg test add jo (bad) shlb (bad) cmc add inc lahf js (bad) add and and add sub jne stc adc jl cmpsb mov push xor mov cs pop insb arpl pop push roll and cmp jae add xchg sbb sub ret lock aaa sbb jp loop dec pop fst jecxz pop outsb mov les popl inc cmpb cli ret js cs inc or pusha pushf inc (bad) daa mov pusha sahf cld push scas in add f2xm1 pop out test cmc test lret loop in loope je pop icebp and jnp cmpsl jg mov lods sub xor cmp sub outsb add jbe jo xorl fistp mov add loopne imul out push aas movb and in mov test pop xchg pop mov mov adc xchg jl mov loopne push and imul pop lahf pushf add push xchg roll pusha inc add add scas jecxz aam push add ret sub mov enter movsl cs mov lock imul or mov mov into das pop in add cld addr16 push pop and mov inc jmp mov dec add xchg cli push pop jb inc pushf push adc push mov xor sub push pop sbb mov sub std in shl lods jmp or insb jne jl inc mov sub mov (bad) cmpsl incb mov push pop fs jle pop mov test test fidivrl mov add bnd push fwait pop mov cld xchg xchg cmc aam mov xor insb adc inc pop (bad) hlt jbe mov dec inc add mov imul mov add jne stc fild pushf jmp adc add idivl or inc jnp andl (bad) xchg outsl mov add js sub stos movsb add mov cmp add mov adc fsubr iret cmp nop sbb cmpsb fwait ret js jp mov jb je push mov push nop fs dec push cmpsl std outsb pop add ljmp mov scas push add add mov mov pop or pop pop pop (bad) mov addr16 lret dec pushf push mov mov out ret adc gs cmpsl mov xor sahf addr16 pop pushf mov or or mov xlat pop xchg cs data16 dec movb (bad) mov enter push jmp outsb add cmp addl mov cmp andb clc je imul adc movsl sarl add xor push (bad) addl sub xlat pop out addl push mov sbb dec or je xchg add pop adcl add jle or mov in jp pushf push cmp xchg sub add lea add inc setp cltd push add jnp add adc add call mov xor (bad) aaa sar add push addl sub daa roll fldt sbb in fdivrl add les xchg xorl pushf push add test or mov mov sahf cmp cmc flds inc mov insb push lret add sub lock iret add cltd ret scas or add nop mov jg xor mov shrb ss pmuludq sbb andl xor repz xchg push loop adc add mov inc and data16 push push push xor fisubl push cwtl loop pxor and add aam mov lds xor xlat pop xchg pop outsb aam adcb shrl push cmp pusha sub push or jge mov add fisttp pop dec and mov xchg add mov push mov test sub add sarb je sub inc in cmp subl pusha icebp dec jp jbe add cwtl sub cltd movsl mov mov insb cmp mov push push cmp sbb mov inc (bad) jbe add dec mov outsb aaa call dec pusha imul mov mov pushf cwtl je lods hlt xorl fs lret xor clc cmp add mov loope pushf xor subb pop loop lret push cmpsb test lock push adc sub sbb lds jb faddl jbe jmp xor movb add mov lret jb loope push push sub pusha jecxz mov (bad) dec push pusha push popf call cmp or lods (bad) jbe sub mov xor cwtl std (bad) xor sahf daa jg push mov add mov xchg lock faddl jmp ret pop mov jnp adc cwtl psubusb movsb fucomi sbbl add sti test pop add mov inc mov fsubl xchg pop and xor pop dec push push lret lock aaa scas add jg push jmp add pop jecxz sub xor sbb pop popf jne or pushf arpl adc hlt ret ret pop lods lahf mov jmp inc jle cmpl adc pop push xchg cmc push add call sbbl xor sub rorb add loope inc pusha dec cmp add adc jb orl stos pop int pop add loop aaa inc lea jno cmp add xchg aam inc out pop mov xor in jne sbb sub (bad) jno sbbl jmp testb push dec imul cli out into xchg pop shlb jle loope (bad) icebp mov pop (bad) cmpsl mull (bad) cmp ss js and jbe add cmp dec add jl fwait push imul jo scas pop jnp faddl adc (bad) pop sbb jmp pop jns movsb pop xorl jmp cmp incb mov jne (bad) jg jne mov push xor add mov and push cmpb cmpsl repz jo sti inc je loopne inc mov int3 (bad) shll cmpb inc adc or and ja cmc add xchg cli jb jns subb loopne (bad) hlt sbb imul add les cmc mov add xchg daa call out lods adc and add inc push ror cmpsl add pop lds aam cmp add fist add stos test insb cmp pop jp sbb lods gs xchg or jecxz inc fs (bad) cld add in sub test or cmp std js les (bad) dec mov mov (bad) sti loope out cli push mov psadbw dec add mov lahf xchg mov mov cmp adc lret rolb loope sub (bad) xor mov pop aaa and jo push fiadd dec sbb repz adc dec jo mov mov mov arpl dec ret (bad) mov add jns push sbb (bad) arpl jg js lods pop or sahf sbbb adc jp aas xchg scas mov inc cmp inc add adc jl adc add inc sub jmp cmc mov nop ficompl adc or mov dec inc dec add lods sbb mov scas cltd sub pusha mov xchg testl rorb les hlt inc pop xchg adc ret or and (bad) push cs add dec push in add test mov scas inc jmp jbe cwtl cmc pop or mov add pop ret push dec call add pop mov add xchg jmp adc pop dec div flds dec add jo add push test (bad) xlat out and xor add sub incb xor push mov andl push (bad) jbe int ret push loope fwait adc or jns mov movsl inc inc mov loope icebp loopne jo cs pop std sahf mov imull and dec scas lea pop add loopne rcrb pop pop add loope mov or test dec push xchg fdivrs push std adc es js aad add mov mov or adc aas and addr16 inc jp or or add push stos hlt add add addr16 fadds mov push pop sarb aam in shrl inc push mov lret push pop out jo sahf xchg adc sbb jl fsubs and jnp or add inc jle imul add dec cwtl lock andl (bad) cmp mov aam lcall test sub inc xchg push push fwait mov push testb mov jns daa lock notl aad push in push add stos std loope pop add icebp jmp pop rolb frstor mov cs add sub push (bad) cmp and pop bound add add add pop dec jne and inc roll jbe call xchg push popa pushf adcb rorl lahf in addl push sub xor lock xor xorl cli fisttpll add sahf call add ss add arpl ds es sub add in sbb ret hlt (bad) cli ds pop cmp arpl add decl cmp insl je or pop push scas push push sub add rorl push sbb (bad) popf (bad) (bad) jo push xchg jae add loope cmc popf outsb add cld jp ja mov xor xchg xchg inc sbb pop jge mov cmpsl jne inc inc inc adc (bad) dec out (bad) movl scas add mov cmp jg lods adc (bad) cmp gs push orl lcall mov sbb aad add xchg mov inc dec sub jbe add push sub in addl mov cmp add pusha cltd out xorl fs mov add push les test jns call js dec inc ss inc inc xor and xor add add add out cs push orl xchg js outsl xchg add sub cmp pop ret and ss add sbb dec add jns jo (bad) and and or push add xchg sahf ficoml lcall (bad) (bad) (bad) pop inc adc add pushf push int3 jp xchg add push pop cltd repz xor xchg movsb mov mov mov mov pop mov ret stc faddl xor roll aaa (bad) add lock into popa scas das in ja add push aaa ret dec push and add dec test (bad) mov jns jo sub mov xchg mov addb sbb in jne das adc bnd xchg bound in push imul test int3 loopne dec repz mov addb xor xor js dec add leave add mov pushf add mov cltd pop jle add mov jbe cmpsb fdiv push push and gs mov aaa jno lods aas test inc mov pop inc lcall and add push dec lret mov popf sti aad xchg add and insb popa add mov insl mov cs lret lods push mov pusha ljmp pop addl in out jo insl testl stc pop push cmp xchg outsl in cmpsl add rol mov addb mov mov xchg cmp add mov sbb unpcklps lahf sub fcmovnu fs lret fdivl add xor pop mov jl or cmp inc inc push lea xchg mov inc cld mov or add jg sbb add cmp add jp add arpl ret mov pop loopne jle scas hlt pop test add jg mov sub pop popl (bad) xchg repnz xor sbb inc imul sub add or pop (bad) inc xchg pusha mov sbb adc lods clc (bad) (bad) aad in pop les jbe push sub sub daa xchg orl mov push sub lds inc clc xlat xchg std add sub adc mov inc (bad) push pop fucomp lods bound sub jo aas aaa jbe das xchg add push jp push fwait movsb xchg mov xor pop (bad) fadds jne mov jb out imul push std mov fcmovne and add rorl sub insb add pop pop mov jb add enter leave imul xchg mov cld add pop scas pop sub jp pop mov hlt inc lcall fwait popf or pop flds xchg divb fidivr inc jns mov or fisubrl loopne jg rorl js xchg hlt (bad) adc inc fadd add repnz sub jecxz (bad) and mov inc add ds repnz mov imul pop add in push xor mov mov add dec lret ret cmp xor fistpll scas cmc pop mov xlat mov out imul dec cs fsubr stc into add (bad) mov push xchg sbbl mov adc add xchg mov (bad) rorb inc test add lods iret and push add nop imul (bad) add cmp cmp addb popf stos or and negb mov inc imul insl xor aas sub fnstsw dec pop xor xchg mov mov mov add (bad) add addb int test jne add lret (bad) ss mov ret or or addr16 cmpsl das jo add dec into push (bad) jecxz imul push pop jae cmp pushf rclb jl dec dec adc pop inc add adc xchg rcll push add fsubl cmp lds jmp (bad) testl addr16 add or ret mov adc jecxz add pushf mov xor movsl add add loope insb (bad) pop and jo mov fs rcrb add push add lea loop xor fimul fwait stos xor pop and enter and push adc test add xchg mov das jl lds arpl push pusha lret adc scas inc testb push jmp jns orl push std jbe cmp adc outsl movsl sahf loope pop xlat mov xchg stos cmp adcl or cmp sbbl sub jno sbb sahf xorb pop add inc pusha push jns jg inc mov pop leave and add out pop mov mov or loopne ret jecxz adc stc push in mov orb sti je mov mov add adc ret dec lret add aad sbb mov adc adc ret add cmpsb and inc cmp xchg push sbb xchg mov add sbb mov cmp or mov pusha (bad) insb adc aam shll test jge add jmp test add nop mov lds (bad) xor andps sar or lret push imul notb sti out mov pushf mov jnp andb test les arpl int dec cmpsb leave xchg push adc jl fisttpll sub push outsl scas sbbb out inc add inc mov add adc stos pop out add jp insb dec in or fldl mov add int3 sbb push push insb fiadd dec push cmp and scas mov mov cltd fisttpl pextrw cmp pusha nop pop add jp jb xorb daa add xor add sub psrlq hlt inc inc out testl add je push push shll xchg adc inc int3 movsb add and sub adc mov sbb test and lahf sbb inc bound cli adcl (bad) jp jp add fisubl cmp xlat pop cmpsl fisttpl test mov jo jmp icebp lods inc mov mov adc add cmp xor fiaddl loopne push lret jl (bad) dec aaa inc inc sbb daa mov lods subl push pusha mov jns or sub inc mov loope add (bad) (bad) faddl ret xorb dec outsb cmp lahf inc adc mov sbb je pop add cltd repnz jno inc xchg add lock dec xchg mov fndisi(8087 std xchg push fimul adc mov mov aaa pop pop pusha pop adc sbb loope insl roll or lret inc mov aad push or scas subl imull shll xchg xor mov and ds sbb push push add xchg in pop into jns push add rcrl fistpll add lahf loop sbb add (bad) (bad) fcomps push loopne xchg and adc pop in insb jne or cltd pushf orl sbb pop add push (bad) cmp into mov add repz mov cld repnz add cmpsl or jnp (bad) (bad) or fsubr push pop dec xor ret mov mov add sub and subl lods ret add push test sub inc sbb add test add adc iret sbb inc adc lock dec pop popf mov outsb adc loop rcrb or jns mov scas int inc inc jp jae xchg ja mov clc fsincos data16 sub adc movsb ja push mov sbb in inc inc pop stc jl and dec pop push add cmp mov aas mov add jl (bad) adc and push add jno bound mov repz nop (bad) xchg iret pushl add jne mov roll cwtl mov jmp add or mov add and sbb cmp sub push push data16 xchg sub pop in popf imul int3 notl adc inc add xchg insb inc xor jns orl add out push push stos inc pop mov sub outsb add (bad) add add cmpl sub sub cmp mov test or sahf add out lds pop js jae popa andb iret nop push test rolb xchg pop (bad) in mov pop aad sbb add and add ljmp add int3 add movsl xchg sbb add pop (bad) addl mov loopne mov cmp cmp and add add pop xchg jmp pop dec loope cmc stos psubusb xor pop int pop pop inc jno (bad) xor add or sbb sub mov bound insl movsl imul adc add mov mov push (bad) ljmp add and insb add pusha add sub push inc jnp ds daa jp push loop repnz call pusha push mov and sbb daa cltd mov nop or dec and xchg cmp addl or dec inc ja sbb adc dec mov xchg sub mov fadds ret test in add dec cmp inc xor xchg cld add xor jp jnp add inc sub mov (bad) cmp jo adc mov sub or ror dec push inc push shl inc add push scas out daa mov lods pop fildl push mov push pop mov mov mov pop push lods mov or (bad) ss pop scas popf lcall movsb insl add sub (bad) std dec cmpl dec xchg imul andl pop push icebp inc jno add mov cmp add xor cmp xrelease test jle lods add inc jnp outsl xchg jns lahf pop sub ljmp add mov sub sub and imul inc mov push add xchg jp in stos xor add sub shrd int3 sub add imul xorl out add sub xchg push test sahf pop sub ret add std add mov lret movsb sbb test add xlat stc outsb push addl rcrb push add insb cli lahf test cmp test add stos fdivl insl and daa stc fidivr or xchg add test jno add mov pusha inc add popf fcompl push add adc sahf lods add sbb cmpsl pop adc mov out into add push gs add add mov xlat mov add aam rolb adc mov hlt pusha and jae cmp add mov fimull insl adc stos cmc add dec mov test pop call pushl subl push jno test inc push popa fisubrl and sub jbe xchg jle mov mov jbe rolb xchg ljmp add popa adc push mov sub cwtl repz xchg loope js mov mov push xchg add mov loope xchg xor and mov addb sbb add in sub dec add stos gs subl sbb mov jle mov add int push pop xchg sbb push add push add sbb cmp das (bad) pop mov bound xchg fs pop add cmp add popa pop lret loope sti add push das xchg test add xlat imul mov ret push stc sbb jl add addr16 pop dec mov or outsl mov or cmp int3 add scas lods nop dec cs jmp and int3 dec add xor pop sbb notl rorl jg cmpb fwait sti popf or mov mov adc sbb add inc int mov mov sub sub stos cwtl pop popa js cmp add mov cli leave xor push ljmp inc addr16 insb jp add imul add lcall repz xchg clc add dec mov fdivrl (bad) inc xchg jns sbb ljmp jnp pop add out jp mov xor daa xchg mov jbe pusha and jb jle lcall and add or xor mov pop sbb jge cwtl test scas mov cmp in subl lret push push add adc jmp jno cltd subl aas sbb add sbb scas xchg push lret dec and mov das not jg adc or pop sbb into jno xorl fnsave jle insb out addr16 movsb and xor mov (bad) out add xchg leave insb repnz std pop push (bad) dec push orb es xor lahf cmpsb mov loope or sub stc push iret push mov andb jl inc add scas jp add mov add insb pop and dec rolb fisub push sbb stos xor cmpsb sub xor mov fstl cmp sbbl inc (bad) or add jb and sahf das jle pop cmp fmulp out mov inc push jbe add and scas out adc add andl sbbb dec jb pop xchg (bad) pusha add jnp push add ja pop je jl dec push sub orl (bad) cwtl into outsl push jbe xchg add inc mov lcall adc add rolb test sbb mov jle insb or loop add pop xor into andl int3 out out fdivrp xchg mov cmp dec pop frstor out xor inc es pop int xchg (bad) and fadds daa adc pop jle inc dec pushf sbb push out (bad) mov jg jl nop adc add in add pop and and xor xchg ret or xor push addl pop mov imul iret xchg dec rorl in outsl jbe mov je mov mov lahf inc dec jnp ret inc add mov or pop jecxz,pt les inc xchg test cltd mov cli jg xchg add or fsubrp xlat test mov cmpsb je pop pop popl (bad) mov push fwait jae lahf add jne ret sub jo xchg cmp nop psraw int jp jmp lea aad and rorb cmp adc bound sub addr16 adc xchg pop lds sbb jge xor out adc add ljmp sahf ret lods sbb jg add cwtl jmp mov xor in popa in add das test add aam pop data16 xor stos push mov add insl outsl adc ljmp or test xor scas testb push jnp add jae pop add adc add insl call bound mov add xchg cmp dec and lods xchg adc jmp sub add cmc std push pop push rcl pop stos jl movsl out sbb adc cmp popa stos inc and mov in int divl shrb add dec adcl mov adc adcb add pop sbb andb js push add (bad) arpl js add andl xor add iret enter jbe push sbb push cld mov loope dec push fstpt test cltd repnz add jae sub outsl mov clc in lock daa and jl pop xchg push repz add in (bad) push add add jnp dec xchg lret pusha stos pop xchg icebp ret leave add sub pop sbb push out cmp add icebp push mov ljmp test inc add bsr or add push sarl mov test jbe sbb or inc repnz jne ljmp mov int inc scas sbb in adc (bad) sbb adc out pop (bad) jge mov cmp xor into pop fild daa in fidiv iret sbb and sbbl ret ficomp ss pop add cwtl dec repz out add cld and pushf adcl adc add jae push cs fistl in es mov scas aas loopne mov cmpl pop mov pusha stos xchg fdivl test add jle add mov xchg add add cmpb mov js je add nop cmpsl loopne or push push loope lcall leave insl stos arpl pop push lret and lahf sub dec push xorb imul (bad) movsb sbb jns cmp jnp mov jl sub shlb dec (bad) cmp or pop cltd mov xor add jecxz xchg mov test add stos add add mov dec (bad) jg arpl cwtl add lock insl mov aaa loop or pop add adc xchg ja ljmp test push add test adc lods insl inc orl pop mov or inc sbb or push int3 fildl test movsb fnop movsl mov (bad) dec stc cmp dec pusha add fstpt sarb add hlt iret or shrl jle sub pop cmc push fldcw add inc inc sahf (bad) and out arpl push inc sbb jns cs pop daa enter add xchg push (bad) push xor jmp add inc push hlt pop fdivrl and sub in std (bad) fisubl aas add insb aaa xchg fistpl subl and push add ja nop push and mov js data16 or add sub movb lds mov pop jnp push int3 xchg xor cmp mov cmp add test lods push nop lret into dec cmpb mov negb test pushw xor andl iret xlat inc or dec sbb xor insb push stc push push loopne outsb sub dec mov into add or inc dec call add add in sbb fimull scas addl in int3 into dec cmc and xchg pop mov xchg jne (bad) sub je adc sbb lcall popf sbb dec and and xchg pop xchg add dec je push (bad) insb add adc (bad) jo pop add inc int3 adc nop test sbb add jle sub xchg test push push nop jmp fdivl out jne push (bad) mov add cmp inc xor xor leave add les call stos cmpsb popf cmpl fwait push pop push sbb bound push jp xchg addl adc xor xchg mov inc or imul out je js out in movsl add fmull cmp add mov js call sub mov pop inc test dec (bad) mov xchg pushf xor pop sti enter add add out cs add push aaa jmp push xlat push add inc js out arpl sbb daa fisttp in xchg cmpsl addl jp cmp movsb loope or lret (bad) iret andb and sub or fsubrp xorl nop inc jecxz (bad) jp add sti out out ljmp cmp jnp add ds adc add xchg arpl push sbb xchg stc outsl ret pop sub data16 (bad) pop stos add ja out pop cwtl sbb mov clc js ret mov pop jmp cmp inc mov jle jo add push mov add mov (bad) lods js pop cld lods out ljmp sub mov xchg imul (bad) adc jmp sbb repnz iret out lock and add pushf enter cld add dec mov sbb insb insl jnp add in jbe and lods add push lods cmp aas dec loop dec sti add pop xchg sub (bad) addr16 add jnp pop test adc add cs add stos in jmp dec add loop inc add adc repz enter int das inc mov or daa add and test cmp into mov mov add sbb push and or test add add fs xchg out add mov mov xchg (bad) jb adc icebp (bad) dec push subl ficompl pushf and or push add fmul pop jae xor mov add fisttpll add stos loopne adc add sub add sbb iret dec stc and pop and loopne pusha pop test pop sub lods add push dec xchg flds push pop and inc jb icebp add mov cmpsl out test lock adc dec inc dec popf test icebp cmp test shrb add out mov sahf jge inc sarb sbb outsl ret test push aas mov mov add dec es cld imul jae lret fsubrl andl sar iret add (bad) add stc pop cmc lret sbb aam dec jbe xchg flds xor xlat movsl xor push dec mov xor adc outsl add iret pop aas add aaa pextrw sub clc add push dec inc adc nop jb int3 add outsb mov inc dec mov mov jg jo and daa xchg mov (bad) scas pop or push inc xor lret sbb xchg dec and push jo xor sbb add push repnz inc jns pop dec pop (bad) das adc or cltd and cmpb add sub adc imul cltd (bad) repnz push mov aaa add push mov sti in dec add rorb mov add pop imul call sahf popa int3 fisttpll sbb outsl jb ds sbbb mov mov add popf xlat iret inc cmp push add xchg pop xchg add mov mov add icebp (bad) jecxz cmpsl daa jmp or bound fiadd mov ja subl mov lahf cmpsl jns sub ret sbb clc ret dec add ljmp cmp js jmp in mov outsb test sbb adc cltd pop mov dec inc inc cmp es (bad) jmp iret js dec mov movl stos addl or pop sbb add mov add roll xchg das fldl xchg jecxz cmp dec add xor andb call sbb add dec fnstsw cli jno sti add xchg jecxz and jg nop test daa lahf push pop and dec jmp sbb cmpb push in cmp or jno pop movl mov push jno ss jno add sub xor mov les ret popf add fbstp (bad) dec imul addl cmpsl (bad) xor mov add cbtw jmp dec jnp sub push jg loopne jge leave add nop xchg add xorb insl stos sbb je rolb scas in fs inc ret add notb mov nop add xor xchg add xchg xchg inc or in add lods scas int3 repz add mov (bad) push mov (bad) shlb cli out ret mov add call xor or pop push mov es mov in repnz sbb mov sub je or add add xorb cmp add mov into test xor cmp add adc push or ds push fstpl and and in loop add push (bad) or add sbb adc pop orl scas sbb sti jmp pop mov jno mov aas bound es xor or and inc mov sbbl cli call jne lds test jg jb aam movsb fimul add pop nop scas stos fs add add or in sub adc xchg out mov xor add call jl mov or repz mov add sbb lret mov out pop pop pop rol pop sbb pusha jg mov (bad) add shll sbb fucomi dec popa push aaa add pop sub or xorl jne sbb nop cld out je (bad) push cmp add jo jne add adc sbb jp xchg aaa leave add xchg mov outsb add mov jmp lds push incb jecxz xor cmp cmovp stc (bad) sub mov std movsb add push int3 aaa jmp jns add sbb adc sti lock push loopne iret stc jp add sub or (bad) cmpb js insb adc dec push subl pop add jg lret mov das add fsts cwtl popf and push es add aaa push call add aam and (bad) pusha jb inc adc movsl add push lcall jne gs das fwait inc aas add loopne data16 int add and mov mov sbb inc fsubrs push xchg insb (bad) xor stos jae add pop xchg mov adc push add xor add loopne lcall dec push xchg add ljmp inc jne addl (bad) sti jo mov jp in cmp adc add int3 xor add pusha aad rol nop mov orl fucomip add stc insl clc dec scas xchg add enter xor lock jno sbb and push inc out mov fs lret mov mov enter roll or adc add in jb xlat fiaddl add add enter xor add pop mov jnp jge add xlat les add repz sub loop stos jecxz test dec xor in je add fucom sbb std ss mov test add mov andb inc in (bad) mov (bad) test scas movsb mov add mov add lds cwtl pop (bad) out jo rorl lcall pop xor js lods mov cmp (bad) cmp jne ds or rclb mov inc lds out jnp subb test addr16 pusha mov cld je into add syscall cmpsl pop cmp dec pop add repnz jle dec leave jecxz push sub movsb lea faddl or mov outsb sbb inc mov daa jnp (bad) fs push mov and cwtl mov int add and cs imul (bad) (bad) xchg adc (bad) icebp add pop pushf enter fnstsw xor insb sbb addl cmp mov neg (bad) in addb scas out dec mov jnp adc stc push add xlat add out push js int3 (bad) sbb cmp mov sbb inc mov add lret jle arpl fdivrl jnp imulb je stos lahf movb add cld mov pop add scas sbb dec sahf in add and test and pop mov add pop scas cmpsl js insl testb jno pop enter icebp jle inc es out inc or add sub out push push push xor inc lcall xchg xchg das adc mov enter sahf add popa repnz sbb cmpsl cmp cld adc add call xor movsl xor sbb notl aam out xchg leave jb cmp dec mov jmp mov jb and adc inc cli mov add mov daa shrl outsl insb jbe addl addb push lods push add shl leave outsl xchg inc cltd add imul cld popf lods fadds adc mov or imul sar or cld test adcb mov cmpsb add ret pop inc loopne out cmc outsb mov mov mull fdivr imul push sahf add cmp inc xor mov mov sub lods xor push jo testl in je sbbl sub pushw add pop (bad) pusha cli xor and je cmp mov and push test rcll add inc sti (bad) out mov adc cli loopne mov fildl adc pusha inc xorl jecxz mov (bad) repz (bad) xlat out rolb jg jbe out rorl pusha adc pop data16 fcoms push cmp fsubrl ret les or adc push dec xchg mov add inc stc fsts shrl add jns repnz or mov and lcall jecxz pop adc stc pusha stos sub pop std add scas cmp insl mov popf xchg push cwtl cltd les push inc xor xchg and add jge ljmp testl mov lret xchg xchg std popf loopne inc aas adc inc lret push mov cmp popf mov dec dec (bad) lock sti arpl push int push and push inc cmp pusha add nop xor sbbb int3 frstor fiaddl pop or jle jmp rolb mov pop pushf fldt pusha mov mov rol mov mov jo icebp sub bound adc xchg incl fs sub dec jp stos pop mov stc cmp pop add imul sub js fiadd (bad) clc xchg aaa lret push (bad) or add mov pop shld addr16 push push sahf jle xor lahf add xchg scas add push adc pop fldl xorl psrlw add xchg cwtl (bad) or adc dec sbb fidivrl inc mov test aas xor sub cmp inc fwait push addl dec xchg mov movsl jg je insb add pop daa test fistl cmp push dec add add movsb fstl jb inc inc das jne addr16 out add fst lret or sub pop or pushf test dec or inc adcl (bad) js xor dec gs mov cmpsl sbb pop subb out xchg imul stc cmp hlt and add scas push xchg sbb xchg leavew insb jb add cmp pop dec add and pop add mov rcrb jo ret mov es popa (bad) push inc jb mov pop (bad) das dec dec add cmpsb jmp cmpsl outsl lea xor out aas sahf test mov add jne add xchg xor sahf pop aas add fwait insl icebp gs mov mov mov add hlt pop mov andb inc aam test orb rcrb lods and or test js (bad) cmpsl inc sarb add jl jns and mov mov xchg nop fistpl add loope add dec push (bad) lock adcb jecxz or inc cmpsb sbbl daa ds inc add lds or and adc cmp xor push popf aad das loopne je roll pop mov fldt jmp and ffreep jle mov pop push mov sbb cmpb lea sub popa add and mov pop xchg popa jmp xor lret pop push inc (bad) add mov (bad) les stos adc mov push adc jmp ret xorl test add mov add cmpsl mov add jns inc add das ret jg loope test pop popa mov mov dec cmpsb mov sti jg add test je add mov in sahf or cmp stc pop add push outsb jb ret jbe adc lret dec fsubrs aas add push xchg push in into stos and sub push xchg nop add pop (bad) xor pop addr16 out mov ficompl add jne fistl dec mov loop pusha outsb xlat add out fisub sbb mov div es cld add ljmp mov mov push fnstenv roll pop xchg ljmp xlat add imul addb push dec dec mov enter divl pop inc mov sbb xor dec push out mov add call jl add addl jnp addr16 jb inc cmp andl cmp push cltd push add jle out pop mov shll lods in shll ret xchg and add add mov gs rcll in incb dec mov fnstcw add cs and add inc jno add and add and je jge add aad sub sahf mov movsl lret jle hlt aas mov inc add mov add lea pop add ljmp adc push movsb adcl or (bad) pop loop or xchg and mov push loopne lret inc or scas xor adcl push xlat adc cmp int dec mov enter cmp sahf pop add xchg sarb add mov add xchg xchg dec lds in adc dec scas aas xor roll (bad) testb and js jg add insb test jae mov sub enter cld adc push fist cmp sub cmpsb dec sub lret jl movsb add and add push cmp add push add inc jb add test push je daa popf adc sahf push in bound popa ret in rep xchg mov sub add idivl sahf cmp pop inc sub add out pusha into push xor jae add and insb lock jae popf pusha mov in or adc rorl daa jecxz pop inc push add fldcw or lds ret call ss dec and or repz (bad) cmp icebp mov mov test xchg (bad) out pop lods movsl add mov add lds xor xor mov fcmovbe pop sbbl inc imul push or int add lahf icebp insb dec ljmp fcmovu int pop in pop cmp (bad) cli subb inc addl add insl bound add (bad) lods lods cmp add mov cmpl out adc xchg and ljmp daa xlat jne inc subl gs enter cmp lret pop dec ret mov dec add mov pop nop cwtl clc aam sti add inc lds add test xchg enter cmp in out lahf test sub xor dec add fcomps bound xchg pop xor movsb add out xor ret js (bad) mov xchg inc je insb push int push sbb xchg sbb mov pusha xchg adc xor int xchg cmp mov jo mov inc mov add (bad) lock fisttpll jbe sarb add fisubrl jecxz cmp andb mov je fistpll add xor and insl add imul mov int3 ja add loope mov (bad) pop jno out add dec push mov jnp mov aad push mov addr16 add loop jbe xor arpl sub imul bound adc xchg pushl out stc add daa push push dec adc cld pop (bad) adc fstl jne and aam lock xor add lret mov pop mov daa incl mov or push and jmp xor dec jae sbb jae sbb adc cs pop fistpl bound sahf add mov jns cmp push popl sub test iret mov adc int3 inc pop clc test or scas iret xchg js pop xchg call cmp sbb fldt cmpsl and test test pop lahf jo dec cs lret sub das push push lods add sbb cwtl cmpl pop dec int sbb iret shr pop lock loopne mov dec dec rorb jns roll dec jae push div fisubr cld jo pop mov jbe sarl sub ljmp add dec mov add outsl cmc test (bad) insb inc sbb call test in and jle push mov clc cs subl adc outsb rclb out test jecxz fbld mov add jmp addl push popf out push cmpsb test mov ret add dec arpl inc int nop cmc loop xchg add out mulb popa lcall xchg xor loop adc aad mov add add rolb sti jbe popa sub jne outsb inc std cmpsl ror xchg add jl fild jmp pushl mov sti add cmpsl xor lahf loop push push and sarl dec push js out xor iret (bad) mov sbb inc mov jne (bad) call xorl test sub js sub rolb add popa jne into testb and mov push add scas fistpl lahf das add mov pusha push out xchg and cmp xor roll gs mov sbb cltd push cmp imul xchg add idiv mov sbb dec jb sbb mov aad lods mov pop sahf add loopne rcl mov mov cmovge pop bound mov add div arpl into add fwait and mov (bad) mov (bad) mov not xchg mov mov dec test jbe (bad) addr16 or flds push fwait (bad) icebp or sbb leave cs fldl lds jg sti lock aam sbb dec xchg rcl sub pop xorl andl pushf sub idivb pop imul push jb addl cmp push scas jecxz hlt insl push stos add icebp xchg ret aam jne adc test cs repnz and cmp mov add fsubl cld into xor push sarl rsm mov add ret adc cmp mov cmpsl mov adc and test push add cwtl mov outsb lods mov add cld icebp sbb sti add sub mov roll jmp mov (bad) cmc push add sub and add sbb add dec loopne pushf jp call dec cmp jo enter mov cmp lret push jbe add pusha mov or loopne in xor add mov add repz int3 sbb sbb mov xchg jb popa cmp loope cld pop lret push mov in xor adcl inc inc aad push inc and push stc mov fildl add push loopne lock lahf fmull scas test xorl out faddl jnp mov jb jae mov inc stos pop add pop aaa inc adc (bad) dec push add ds cmpsb enter fs sub push cmp sub adc arpl repz pop orl insl clc xor pop sub push bound fdivrl add xor pop mov lods lahf xchg inc pusha enter dec add sbb adc adc inc dec push dec cmp idivb aaa jge cmp mov js nop sbb iret adc cltd lcall cmp je mov xor decl sub add imul mov add push add std xchg fsubrp pop outsb add inc or add push inc cmpsl (bad) inc xchg add mov test push pusha out mov gs add jnp sub jp mov fcmovu shll test add out arpl sti mov popf cmpsb push iret add jl xlat cmp sbb das jbe call adc les sub sti mov and pop or add scas mov jbe add ljmp dec mov push and add js mov movsb inc inc (bad) icebp lahf in jp je test sahf dec xchg mov sarb les xor out scas push add push push lret jle pop xchg or int3 add pushf incl push insl repz (bad) outsl dec roll xchg fiadd outsb xor test mov dec cmp (bad) pop cs push add push jp xchg popf sbb incb mov jnp add sub adc sub fdiv int lds cmc pusha sarb jo jo cmp jl add rclb divb xchg add in cli lock dec popa cmp andl repnz sbbb loope stos imul add lahf sbb das outsl jb xor inc lock sub sub inc push sub push mov cli mov inc add popf imul subl xchg int3 pop orl push add insl xchg in je and fsubrs mov inc add in ficoml add mov jmp sub test lahf les movsl div xor scas jl fwait add push fimull jb fidivr aas xor pop enter sbb pop add pop cmp stc mov (bad) lock inc iret lods mov (bad) push cmp adcb sarl pusha dec push or out cwtl cli sbb rclb inc ret mov add cli lahf aad icebp shl xor mov sub sbbl bound fs movsb fcmovnb dec or add jne pop add inc mov outsb jae cmp subb sbb inc jle incl push pop add xor add in fsubr adc (bad) pop aam mov or pop loop div sbb (bad) repz shr outsb inc outsb popa scas and and gs lea dec push push fsubrs jbe pop xchg xchg out gs in inc push cmpsl pop and test mov inc lods lcall stos mov push ret sbb shrl xor enter xchg mov and pop add ret arpl fcmovnbe pusha popf in sbb cmp or mov lods mov xchg in es mov push adc lea aaa mov jnp int fildl test push lods mov jge (bad) jb adc sahf mov xchg insl pop lcall arpl adc stos jmp data16 iret jge nop ss test add xchg xchg ja sub mov aad jo xchg adc stos add cmp pop mov insl outsl inc mov lret ja std inc jno push cmp out negl adc fcoml sbb pop adc mov add jl lods xchg rclb dec add cmp test (bad) add test sbb or cltd jle lods stc mov mov push pop push aas test pushf int3 add jne cs add sub popa add inc sbb add add imul aaa fdivrl add dec popa rclb les add insb add hlt mov cmc sub lods jno add cmp pop aas pushf popf pop lahf dec sub test mov add pop test jo sbb adc xchg int cmp scas stos add mov jno (bad) decb in jo pop sub idivl add mov mov dec push adc repnz aas (bad) mov add mov (bad) fnstenv inc pop outsb hlt jl idivb adc jo pop sub cmpsl (bad) push dec inc jecxz (bad) jle lods add dec sub add jg sahf inc roll push add mov mov mov mov fldl xchg lods jge pop call and popf add add out lcall or jle (bad) rcrl inc mov mov repnz xor dec jmp jle andb hlt jp mov out add dec pop int3 mov ret (bad) test inc mov addb les mov mov dec fimull inc push add jo add insb xchg ret add pop add fstl push push inc add test add loop in jp sbbl negl adcl mov mov add mov fucom pop mov adc xchg test adc daa xchg das out push jg inc push sub lock aaa dec call in add push add adc xchg and mov imull js cmp inc popf sub imul orb cltd cmc dec or sti jb add cmpsl inc cmp pop xor rcr sbb lretw pop inc pop popf lods push sbb xchg ret pushf cld in dec addl xor mov pusha add pop mov pop addb and jnp int3 jne roll cwtl negl jle mov add je lcall xchg icebp mov stc dec add out and leave lret stos add call div add jo in (bad) inc sub jmp pusha add (bad) xchg sub and (bad) push fisub add in jmp adc jb cmpb outsb jg add cbtw inc test cmp js les incb mov cmp daa jmp in add fsubrs icebp shrb (bad) mov dec sub lock insb scas (bad) push add data16 inc lahf inc enter mov mov loope push in sub mov or jge cmpsb push aad xor cmp inc in xchg cmp shrb mov cmp aas imul xor cwtl fnstcw stos add daa mov add roll fsubl addl xchg cmp and aad paddd add dec push mov push ds inc scas insb add jbe test cmp and in stos js ljmp xchg xlat dec (bad) and mov mov mov inc fsts xchg mov sub add mov add xor inc add jnp es mov and aam dec pushf mov inc xchg (bad) jg imul jl xchg push aas sbb inc (bad) pushf test add iret adc add cmpsl nop push and sub xor rclb push insb dec xchg fiadd addr16 or add pop sub das sbb push add jg jmp jle lds int3 adcl (bad) pop ficom popf or test cmp je jne lcall lahf in subl mov push mov mov cmp jle xchg add xchg xor add jo mov sbb cmp push sti adc push jge add fimull (bad) test jns xlat ret imul test std lds cmp lahf and fbstp adc pop jae add shld push pop inc cmpl fs jns sub jg aam cmp pop xchg test push pop movsb and jne mov pop jo pushl mov lret js add push or icebp mov pop orl popa inc into add pop lret mov pop and mov addr16 push push cmc aad add or test mov adc lods arpl out sbbb pop je rorb cmp pusha jmp xchg mov mov mov jbe lret xorl daa pop fadds sahf enter jp inc fbld and jns or adc mov lahf andl js ljmp pop daa jnp push sub add and mov pop add sbb bound add mov fsubrs subl data16 dec mov cli add fisub adc movb enter mov push out sahf add test inc nop sub mov lcall stc add leave xchg adcb pop lcall adc push pop subb std or lahf jbe cmp dec (bad) jle pop cld add sbb and add adc jg sbb mov xor push lods xor pop inc out stos rorb or pop mov cwtl push add sub or orl sarl pop pop adc add xor frstor shrb mov jbe dec add mov sahf push jbe add adc add add jp inc aas mov and lcall idivb fistp cmc jp rolb sbb dec jecxz lods xlat mov das cmp test or add jae stc insb xchg adcl ret xchg push lea pop add lret pushf stos pop xchg aam adc push jge inc sti pop das sbb push aad lods jp xorb fdivrp or ds xchg adc cld test push push or std inc stos (bad) mov add sbb pop or aaa idivl and mov orb std inc cmp dec pusha out add int push or push enter sub inc or mov arpl mov rolb popf push push xchg sbb xorl (bad) int inc enter js jo mov push mov pop popa pop and xor dec mov shr xchg push jecxz mov loope int3 mov xor mov jl push mov in shrl cmp lds cmp add les fcmove inc xlat inc add subl and mov xor add mov sarb mov loop pop js cmp in cltd (bad) mov add (bad) scas daa (bad) mov sub andb fsubr dec add or or testl pop rolb cmp add inc add push dec dec mov (bad) repz add cmp int3 data16 xor xchg adc pop mov mov mov jno and add inc add movsb test es add orl lock or adcl sahf in jecxz inc cmpsl out or hlt scas add xor inc mov jp pushf jo inc mov rcrb sbbl out jo mov movsb test daa rclb jnp add xchg push lcall and popa fwait movsl mov add xor mov sub push sbb sbb idivb lret mov imul cmp inc cmpsb (bad) jbe cmp add mov je cld mov popa xor mov xchg or dec sub insl xrelease mov sbb rcrl xchg sub imul xor push sub dec clc jb das xor adc test sub jg imul shll cmp subb mov insl sti xor cwtl mov inc fiadd push insb mov iret ljmp add icebp xchg test dec cmp add jmp (bad) dec pushl clc push sub push fnsetpm(287 inc negb orb arpl stc add leave aad cmpsb cwtl pop and add cmc cmp inc dec adc hlt adc add add adc push sub push pop sub test and jmp and push les popa rcrb and push add mov dec xlat cs mov jno inc push rcll cmp pop movsl adcl xchg pop out cmp pusha inc add cmp pop adc cmpsb call ds add push mov sarb in addl push sub orl dec sbb push cmp lods outsl add cmp add dec push (bad) dec cmp add aas add add fisubrl mov pop add xchg pop and jl add sub ret pop push cmpsb dec movsb xchg push mov (bad) and sub mov xor leave imul adc fwait insl cmpl pusha gs add add (bad) test mov test cmp add pusha stos mov data16 test push mov dec fwait push or jp add xor ret mov mov jnp in adcl adcb addl sub daa cli dec out dec add adc pop rcrb xor (bad) rorb enter movsl pop jae (bad) push add outsb jmp xchg std ret add push mov add and mov pop outsl adc adc shlb sbbl sbb adc add addl add sbb sti imul pop inc mov add xlat add dec in adc call cmp dec mov push jmp mov jecxz mov jle pushf or in test push loop adc pop in mov mov jge xchg add xchg push into and pop or and imul dec (bad) test lds ljmp push or add pusha std rcr xchg sbbl popa pop (bad) push dec cs clc je adc enter add dec bswap adc fild sub inc repnz sbb pop ljmp push nop sbb and jnp mov imul push (bad) pop mov pop or jge jmp leave mov cmp out int xor loopne xor xchg pop fimull sarb pop add fs pushf or pop js out push add cli adc xchg cltd push pop sar pusha je sbb rol (bad) jne or data16 or push add stos sub cmc push push xchg pop and mov mov imul mov add cld shlb sbb inc jns aad cmp push inc add aaa dec adc ret or lahf in sahf jge sarb mov out push fstps jo int add or std adcl cmpb jp add out mov (bad) test or push mov dec pop push inc add inc outsl pop xchg ud2 mov inc inc call adcl jo xor mov jg cmc xchg cmp arpl lea mov and (bad) xchg xchg cmp mov fstpl add push adc cmp add cld sub punpcklbw pop xchg push adc aad mov cld mov sub add (bad) push inc rorl mov fdivl nop and push cmpl dec or push add mov xchg jp fisubr and jnp nop dec test test add jb add add cli sub add cmc cmp mov dec ljmp arpl mov add int3 imul fistpll pop add div add mov arpl add adc test and mov ljmp inc ret clc sub pop add adc shrl mov lahf insb ds add pop fbstp leave arpl jb push adcl rolb adc mov cltd leave and imul sub mov add loopne flds dec or xchg sbb mov pop mov add scas subl pusha popf js (bad) cmp mov adc push jns mov in (bad) dec jg int mov xchg outsl inc movsl lret mov les lods sub dec adc xor shlb mov push shlb mov mov movsl das fildl fidivl dec hlt (bad) jnp add xchg sbb push push gs mov xchg add sub and push or aam and in xor inc add or sarb jo add dec pusha adc add cs jb mov mov mov push add sbb sbb push jne sbb add cli jg add mov cs jl add repnz es movl imul add dec iret mov pusha sub add arpl mov add or dec movsl (bad) iret push add testl dec sub loopne xor clc mov sbb add das xchg lret pop push and jo mov std dec xchg mov (bad) fiadd fs in add rcr loop inc push add mov and push cli cmp jp in inc mov mov enter sarl aam aas dec lods sbb addb push out jl push add push mov add sahf mov add cmp movsl mov xchg inc sub push push push lret cmp mov adc or inc xchg ret add sti lret lahf sbb (bad) (bad) test insb and lahf jne (bad) out push mov leave daa jg (bad) test push mov addl or cli std cmp add lds xor cmp cmp jns mov cli addl xor jl cwtl sbb push add push dec stos mov sbb cmp sub add xchg inc push sub lea ret pop push xor adc adc movsb jnp add xor mov add gs icebp mov pop sbb (bad) pop adc ret mov xchg mov pushf push test rolb dec add ljmp imul aas inc repnz fcomps pop ret sbb push add dec stos push push sbb cli test (bad) (bad) cltd add sub sti jbe (bad) cmp inc mov arpl rcrb xchg or jecxz mov leave rcll into sub push jnp cmc int3 subl fstpl add (bad) outsl int dec inc scas add inc fistpll cmc xor and hlt add sti sbb xchg xlat arpl or icebp xchg add movsl push test sub mov inc mov outsl or enter test test add (bad) icebp js add bound push cmp xchg call jp out (bad) cli xlat add (bad) cmp popa xchg push sbb mov pop inc addl cld jo ss insl js mov and jl inc push (bad) and add outsl adc or sub inc jne imul xor dec int das adc iret sbb movsl xchg ljmp and fwait pop pop mov nop pusha fimull ffreep xlat pop add mov xchg push outsb add push neg add lea cmpsb sahf pusha mov (bad) add mov rcl add xchg lret ret aas xchg add push dec hlt add mull jge lret push inc int (bad) sub add xchg jbe int adc cmpsl add or fcmovu test sub lcall (bad) jno xor sti dec daa js sub sub lock cli push sub jbe add int add rorb mov xchg call test ret jne add xchg pop sub enter (bad) daa push xor mov mov add int3 or pop inc pop jb sub aad adc add mov in leave push arpl sbb jb add pusha or test hlt into mov loope push lods sub sub dec aad jno dec stc adc cmpsb push daa inc mov ficom sbb inc mov dec xchg (bad) mov or xor and pusha fildl jg cmp lret test jmp mov fcompp int sbb or push stos pop (bad) jbe sub call (bad) icebp jecxz dec sbb sub add add sti push pop jne outsl mov xchg shr xor icebp add sbb repz add add xor push sbb push add jmp and sub sbb mov sub ja test scas pop xor cmpsl add pop sbb lea mov jae (bad) cld jns add inc mov (bad) inc mov (bad) (bad) add mov dec add push dec adc xchg push mov inc jg pop sbb pop inc pop testb mov in in xchg rclb sbb test add pop popa pop pushw imul ror xor mov jae (bad) or mov orb mov imull mov mov rclb clc adc or in dec add mov jle out js subb and fisttpl add xchg std int3 popf jae lret add fwait ja out mov or mov (bad) fistl adc inc stos sub jo pop mov pusha xor shl repz int insl mov jbe outsl sahf push fisttp mov add add mov mov fwait in gs adcb add (bad) cmp int3 jno pop xchg mov loope push adcb inc loopne out mov scas aaa enter pop fidivl cmp mov and (bad) hlt mov insl add mov scas xor js add sbb ljmp mov dec cwtl les data16 in movl pop icebp fidivl jbe lret dec or xlat cmp xchg jle add movmskps ret adcb jbe out mov add and insb mov mov inc js lret add mov adc sbb dec mov inc arpl test pop jecxz add push repz xchg xchg pop jg push hlt or inc jecxz movsb xchg pop add adc add push adc movsb add sub dec arpl add in repnz mov mov clc (bad) jg dec lret nop fnsave loopne outsl jle and lods scas lds cmp dec sub (bad) mov loopne inc push fs lcall popl je cmp push fsubrs add add ss daa lds mov imul adc ret mov daa dec sbb mov push stos pop inc jne mov pusha xor test enter jp jp sub out jecxz mov and and rolb push insl test in cmc mov add mov int3 test insb xchg dec fistp push push inc cmp popf mov xchg inc pusha mov xlat pop sbbl das push mov test repnz std in jbe and sbb mov in sarl fwait add push int3 inc in icebp or sub cli or and fisubrl repnz gs fldl xor add sub popl in movsb sub mov jnp imul push mov pop jae movsl xlat inc (bad) popf mov (bad) add inc lock test add inc inc popa rcrl clc add fdivl add fstpt sub mov inc and test jns dec adcl adc call pop add mov xor stos out inc mov cmp add mov xchg popa stos add add add fsubl roll push fnstenv dec adc mov inc adc ucomiss adc inc xor xchg xor fisubr add in sub incb pmaxsw fnop ljmp xchg ja xlat jmp add xchg outsl cmpsb lods test mov lds lret in adc jne pop add (bad) push inc add sbb cmpsl rorl cmpsb stc stos sub mov or add aaa inc add pop jne ds push in iret cmp mov (bad) add rcll pop and cmpl pop sti push cmpsl xchg sarl ds cmp fist add inc movsb data16 push sarb jle push add xchg (bad) inc lock sub mov aam sha1msg2 cmp add push mov inc mov outsl fdivrl add add jmp cmpl in xchg loope add imul jo nop adc ds (bad) in fcoms enter jno xchg (bad) pop sbb push inc xchg pop jge jns push cmp and scas sub nop lock fsubr jo popa add push and shr push ret and or pop add push (bad) popf add enter push inc pushf shrb cmp sub sub mov mov add jbe nop aam shl incl cmp jbe (bad) add jp data16 sub pushf sbb add movsb push add stos mov jg test push push xchg loop shrl push mov cld in or dec lods jns xor add (bad) imul xor pop incl push lret cmp (bad) loope stos push fnop cmp push icebp pusha cmp pop add push mov adcl aam push xrelease push subl addl subb add push lods push (bad) cmpsb (bad) clc add aas fbstp xchg mov lea pop jb ja push add aam shrl adc imul test xacquire inc adc fs insb addb mov and xchg icebp jo push jl rolb in and out (bad) xchg stc lods lret add andl push xchg xor add cmp add cli sub je jne add add stos mov cld push mov (bad) outsb mov scas xor xchg icebp ret push jecxz jle in pushf mov lods add xor add pop sbb add popf cmp inc inc cmpl js in add pushf pop lds scas fcomps test flds push scas sub (bad) mov sti add jno (bad) mov loope sub fildl loopne xor bound mov mov sbb dec inc dec sbb add add sub dec movb push inc mov lds mov xor pop jbe rcl notb push mov mov out dec push add push (bad) add scas movsl adc xchg jecxz sti dec icebp jne repnz ficompl adcl adc movsl sbb jge or jbe pop pop je xlat xchg mov sub add int3 cmp (bad) mov mov add in sbb je addb (bad) sbb xor xor testl dec inc jne addl sub dec add add inc js and inc pushf popl jbe aas xor mov outsb jp fs xchg les sbb inc add mov imul xor enter in mov mov mov mov jge push push push (bad) or mov jae pop cli dec mov ret lea add xchg scas int call adc mov push rcrl add fwait lahf movsl add sbb xchg cwtl int clc mov lods cltd add cmp add scas stc add testl daa jmp mov icebp inc jbe rorl loop shl rolb or push mov push add pop inc (bad) hlt add gs enter fisubrl xchg movsb sub sti mov mov fildll ret cmpl mov cmp jb add imul inc xor xchg inc mov lods (bad) sub xor cltd sbb mov jmp enter rclb inc mov jnp mov movsl pop pop sti je cmpsb add xchg aaa xor adc cmp (bad) je sub dec jbe arpl sti inc add mov hlt insl jge add es or into ja add cs daa sbb shlb stc pop sar cld testb in and roll loopne xorl jmp mov mov jl add and jl pop lea iret aaa dec std push xchg inc or push sbb mov stos add outsb and mov or fcmovbe mov test hlt subb sbb fdivrl dec xlat fiaddl or or out add adc stos (bad) bound dec icebp add sub into daa xchg (bad) cmp mov loope add cmp add arpl jmp iret fiadd ret (bad) into and push add (bad) enter xlat mov cld xchg or jge (bad) imul shlb int3 dec andb adc xor pop sbb xchg xlat sbb in dec cmpl push mov push dec inc jns cmc lds inc loope jle fnstcw in lret stos out andl or pop jecxz jne add push pop sbb enter add mov jnp mov aaa push xchg add mov push (bad) and add cmp les scas fadd mov scas adc data16 jae aad add or movsl dec mov cmpsl or pop jnp into and mov xor jo flds jne incl out inc fs pop pmullw xor pop cs xor pop mov adc xchg addb aas add div xlat mov dec cs jl add es out loope icebp lds pop add sub add push imul cmp movl dec jp fisttpl xchg xor andl fldl in cmp add andb adc dec stos es rorb jnp mov cmpb aad pop popa jge xor cmp mov (bad) roll jl add dec push mov mov add jno clc icebp (bad) cwtl cltd add in cmp jecxz std imul pop mov lods in roll and adc (bad) cmp cld add or es cli pop mov rcll div add mov int add test push sbbl add loop je repnz cld add int3 mov adc in jge rolb dec pop pop or add push sbb lret add jmp sbb push xor pop leave sub add xchg jo add bound lret loopne xor cs inc pop or mov andb jb movsl xor mov loop out pop mov or sub inc dec adc add add cld lret sub xchg add mov daa test in push or shrl sub sahf add js ss lods (bad) repnz fwait sbb les pop not sub dec pop dec xchg push pop mov jle add lret sbb mov das mov dec jecxz add push or pop jg add imul push cmp rorl cmp jecxz sub pusha dec ret add das push mov or adc jmp stc push (bad) xchg pop lea xorl cltd mov adc loopne andb sub mov stc outsb ljmp sbb sub cmp fmull mov and add rolb add push and mov pop add pop (bad) push vdivss mov clc jo push sbb sti add incb cmpsl inc dec js sub mov add and movb mov add jecxz out adc dec loopne sub (bad) je lahf pop pop jle mov inc jo add xor xchg subb fldl js xor cmpb mov rorl popa sub stc add mov mov (bad) lods add push push pop mov cmpl (bad) das pop (bad) mov xchg nop mov (bad) lods sbb test ja orb jl lret adc adc lock gs shrb and lahf push inc loop das jg xchg add out push xor in scas popa sbb xchg mov mov ljmp and int cmpl cmp add adc add leave inc (bad) mov int3 pushf fs xor mov mov add ljmp loopne mov xchg and jno inc js xchg popf add add icebp cmp pushf pop adc dec add and aaa add pop add jbe hlt addl jae aas cmp outsb mov repz xchg aas rcr test adc pop shll lcall cmp sbb aaa in or out js xchg adc mov (bad) int cltd xor add pop mov into push jnp add repz adc mov dec jl push mov hlt inc mov push mov movsb mul or add jno scas imul aas mov dec add in mov sbb pop lcall xor push jne inc push orl loop data16 add mov ljmp popa add lss (bad) int sbb sysret cli push xchg xchg sbb sahf cmp (bad) fistpl pusha adc dec inc repz data16 pop jg pop add jae lods mov sarb rcl in jp int or add add jp xchg lahf or imul (bad) rcl push loop add daa stos data16 insl jo je jno out mov aas pop sbb jns divb add lds mov sbb mov lret jo push popa faddp mov rcl stos dec mov sub fwait jb outsb in imul fcomi cmp add xlat dec bt inc stos jne and pushf test inc repnz icebp add pop cld sbb pop pop imull jg inc out orl mov sub push xor out dec or lods outsb dec aaa add jl nop adc add mov mov pop adcb hlt lahf mov inc not dec inc xorl lock mov push cli push fcoms pop mov test add lret addl sbb add pop or mov data16 in adc das loopne cltd lock sbb push shrl ljmp add fsubs mov lret cli push aad mov es push inc add jmp lea repz jo cmp mov leave int mov add mov dec and fiadd call loopne inc mov inc les add sti and pop leave ret lahf mov sbb inc nop mov scas lret pop xorb fidivr xlat adc add iret xchg cld add test push fwait adc (bad) sbb aam xchg pop and xchg (bad) aaa mov lds lock (bad) dec ror jo sbb stc inc int3 aaa jp js jbe pop dec add add cmp scas add ret in mov pop and aas push sbb pop dec lods add pop hlt (bad) xor cmp pop fucomp cmp lods arpl jb add es inc fldcw add and push mov mov test pop jecxz jbe lds fs and test fdivl cmc aaa (bad) sub xchg add lret sbb sub sbbl add or imul repz mov aaa adc mov icebp popf jbe fisttp sub rclb pusha cvtdq2ps mov daa loopne aaa inc dec adc packuswb shll or sti cmp ja mov test fwait and ret jecxz inc add dec sub add mov mov pushf add push mov data16 mov lea aad dec sbb xchg push lds mov xchg mov add movsb inc or fidivr and mov mov pop add pusha inc clc in insb cmp add or cli jp add xor or or lods movsl cmp dec cmp ret pop int push int pushf aaa mov push dec sub xchg add add sbb xchg push inc mov jmp inc xor xchg testl test jne roll sti adc xchg inc adc add call ja mov xchg mov add inc sbb adc push add and popf pop xlat arpl jo int mov add mov push add inc jge repnz jecxz stos cli inc cmp add imul js add ja mov jg xchg push enter ljmp dec or dec std gs xor rcrl cmp add sub jl cli add xchg ljmp add xchg sahf outsl popf shl loope push cmp or rclb mov scas dec pop xchg add lret mov push pop test loopne mov mov je,pt lret lcall add iret push popf jae syscall adc ret movsb xchg rolb fwait mov push sahf sub push je pop lods (bad) and mov cmpsb pop sbb jmp adc fsubl adc jo stos xchg pop sub adc hlt addr16 fiadd and adc push setle pusha mov lret add fiadd mov jg push cltd add add ret mov inc rcl scas outsb cmp mov shl dec or jle cli fsub ja nop mov push and xchg in push lcall add int3 sbb mov lods mov testb popa push andl pop add and fimul mov jmp mov push popf fwait loopne push push add xchg or adc iret test jb sarl pop lcall jno inc inc movb mov adc mov cmp jo jge outsl xor incl jo pop lock add cld mov lods jmp add push xor add dec icebp addb sbb add xchg fs sbb add cmp add mov inc mov or xlat (bad) and scas push lahf mov or movsl sti adc outsl mov inc inc ret jo jb stc push test inc inc mov mov lods andb pusha fiaddl mov icebp fs lds sbb clc pop js adc push hlt pushf dec add popf mov sub mov mov lcall loopne fmuls xor (bad) sub cmp subl add add push cmc mov push test inc ftst inc or mov mov popa add push icebp sahf cmpsb mov pop mov sarb jo lcall cmp scas push cmp add xor fisttp jns aad pusha sbb (bad) push xlat pop pop xorb js outsl pop xchg jo gs test and pop mov sahf mov add dec mov js xchg lcall or mov pusha fisttpll mov and dec icebp test repnz aad hlt jg scas push push lock jmp pop mov test inc orl adc mov fcompl cmp xchg add (bad) lock cmpsb mov jecxz pop stos add pop into js mov mov cmp std sub stos add daa dec movsb lock imul mov pop xchg js dec sub push add mov test adc imul jnp (bad) int cmc pop cmpb repnz xorl sub adc test (bad) testb and xchg push (bad) dec xchg push xor jbe out xchg dec movsb add cmp roll mov push loop lcall cmpsb xor test cmc mov inc add push mov icebp xchg cli mov ficompl jno pop xchg mov xlat inc mov sbbl loope movsl dec and mov andl pop add jb out call cmp or add mov stos stos sub and push pop fwait ljmp or imul lea add lods sub xchg add xchg push inc test movsl jns pop insl addb xor incb stos js inc or pop mov mov jle adc add pop test push inc xchg add arpl cmpl add or mov add testb jmp adc and or xabort or test add stc inc (bad) arpl mov enter icebp in sbb pusha scas pop jp xchg orl dec fwait and mov decb xor sbb add push test jb in add pop sbb add ss fist xlat sub testl movsl add cpuid sub pop jg jp jmp cmp or jmp out xchg into (bad) ret pop cmpsb and rolb jbe adc inc mov inc push nop ljmp ret lahf xchg cmp jmp lods add jecxz sub adc cmp dec inc xorb (bad) mov repz mov and sbb loop add sahf pop jge jne push xchg shl sbb cmp je ds sbb movsb add outsb fdivp dec (bad) dec add jne aas add pop aaa add in leave mov add or mov pop mov frstor dec cmp add ljmp fmulp test sbb pop push cmpsl movl push adc pop add (bad) into xchg push jle fiadd divl add dec gs lods mov lret dec add xchg nop mov mov lcall sti (bad) subb subl xchg cmp add fisubrl movb xchg add mov mov add data16 fistpll outsb add inc pop xchg stc popa add cmpsb popf cmp repz cmp add stos xor inc loopne add mov push push pop or rol cmp out sbb xor push inc pop jmp mov insb push inc call pop test xor mov jo cltd shlb push jns or add stos movlps add mull retw dec push iret adc fsts or int3 jbe out add (bad) in jbe fidivrl (bad) or out mov cld jo adc pop jg add iret lahf mov and adc or pop cmpl cmc je fdivs and aam inc lret jp leave mov jne inc test push mov xchg shrl and sub jl notl pop (bad) ja add dec adc pusha mov jg add mov mov fidiv and dec cltd jecxz dec push scas xor pop ds pop loope push ret dec mov jnp add or mov pop add mov dec pop mov sub gs add sbb addb sbb mov add sub hlt (bad) out fdivrs insb cmp pop or or mov pop repz mov notl sbb mov ss jmp sti xor sbb xchg sbb mov mov cmpsb sbb fs xchg pop rolb inc repz or (bad) inc cs or fbld xchg xchg icebp das cld adc inc add and jg xchg dec fdivr cmpsb pop xor imul (bad) cmp add adc lods mov and imul mov add dec sub sub adc pusha aad ret fistp popl inc and jnp pop dec inc pop jbe push in or add lds call fdivr inc loope repz mov cmp pop jno mov sub imul dec insb sub add xchg sbb aas mov mov xor jne dec int lcall les add int and fmuls jnp ja dec push stos repnz add and pop xor mov aam pop aad add push test sbb push add aas inc (bad) mov and xchg add jge add out stos inc gs adcb cmp dec (bad) imul insl sub mov sarl push pusha sbb scas inc jo jmp add ljmp add jbe sldt cmp add jno xchg in xchg (bad) xor dec add push sbb ljmp (bad) mov cmc outsb addb sbbb push (bad) pusha adc add lret push out mov dec or mov push cmp mov leave xor push mov adc mov xchg add push cwtl outsl pop fmull in insb cmp aam and mov mov (bad) adc pusha pop (bad) jbe add cs jo sbb add mov sarb xchg mov dec pop xchg lahf mov in xchg push clc and add xor xchg ret gs lret stos xorb pusha adcl xor loope flds jo xchg pop jbe adcl adc movsb mov gs in inc cmp add xor mov and sbb adc pop mov fcoms jmp dec ficomp add out fwait sub mov xchg adc (bad) mov test xor add sti jbe add cmp out out fucomip cmc mov int3 jne nopl cmpb test fimul adc xorb jbe stos push dec sbb es push scas push and (bad) or shrb fwait xor leave nop mov test fs sub cmp xor mov ret sbb jl pusha ret inc into pop add push dec add or jl sti das xorl psllw adc pop (bad) adc cmp (bad) mov ljmp movsb add in into or das leave test cmc sbb lret inc xchg sbb add mov daa mov jl cmp dec int3 scas movsb mov ror jb dec shl add es dec inc out mov (bad) add xor andl dec movsb dec inc loop cmp sbb test in or fwait imul push add nop jnp add test cltd add (bad) sbb add jg shlb inc lods insl scas add cmp popa ret enter and movsl lret jge ja mov sbb add add sub test popf or nop stos mov mov cwtl mov add pop out sbb js rcrl lock ret dec pop stc mov jbe add repnz sub jmp shrl in inc adc and adc clc jmp or push add sub aas pop jmp add jmp es adc add pop addb shlb aas jmp inc test mov xchg fistl dec pop js sbb dec pusha mov inc outsl push int3 lret je add push loop loopne push sub adc mov pop pop (bad) xor jmp push hlt and jle js mov loope cli push push fiaddl pop push xchg int3 jmp jbe fwait add mov out mov inc pop jmp (bad) rcll popf lcall mov fucomi push cs movb les pop xchg outsb and ret mov cmpsb incb adc push jge sbb add mov sbb sar mov clc fdivl xor lea xlat mov (bad) add add and mov adc sub push push xor xor jecxz jbe sub jge add add push insl ja add jle add sbb (bad) aam iret jae jecxz roll push pusha cmp mov and insl adc jnp jb inc add arpl iret xor xor adc jno testl dec shll xchg ljmp and sahf out popf loope lahf xchg leave rcr mov ja outsb mov and add inc and lcall ficompl repz add cmc lock inc pusha es dec lret or pop add scas loopne push or lahf add or fstps add stos test mov pop push add lcall add xor push add jecxz loopne call jnp sbb cmp push mov add pop icebp jo fnsave add jge pop test and cmpsl add scas ret sbb push js inc fisub into inc dec hlt bound mov inc mov add popf (bad) loope and add add in outsb inc sub xor xorl mov xor in testl adc dec add lods mov fimull cmp sub and aam insb int andl (bad) fsubrs xchg es fiaddl (bad) insl imul pop sub add mov sbb add and enter xchg xchg aas ret stc and stos das sbbb test jecxz (bad) loopne lods or dec test lahf xchg inc movsb xor js ret dec mov jbe stos add xchg movsl or inc mov add and adc popf enter pop jne pop adc mov and pusha add xchg xor pusha cmp int fidivr adc mov xor lds adcl pop mov cs mov add pop mov lcall jl jno mov mov sbb or add call aaa loope jg push mov pushf (bad) adc mov (bad) ljmp inc and js loopne jl repnz std pop (bad) mov jle ret lea stos add addb jge ficomp stos add loope rcr gs sbb adc and cmp mov into add pop add iret add mov popa adc jno jae xor out je mov sbb popa inc xorb add imul cwtl mov jbe add je ret cs pop or dec xchg add mov dec sbb sub imul jecxz xor mov mov add lret inc adc push add adc cmpsb sbb das push mov push pop dec adc fwait iret jle xchg orb mov mov mov leave mov or jl dec xor bound push pop jbe jg add adc inc inc dec cmp add lahf mov pop inc enter subl or jbe mov mov jge,pt mov shrl mov sub add cmp (bad) lret mov stos jnp add push sbb add (bad) pop push jnp mov popa add jg jo mov aad sti lret mov push rcll xchg orl mov fcmove jle pop insb pop mov jp push dec xor xchg sahf inc (bad) inc (bad) add lret pop leave sub (bad) dec cwtl aaa pop jg mov pop and std jmp dec out sub dec cmc loop push cltd mov fwait push xor int3 stos into xchg add int push mov jge mov pusha jl enter pop or add mov pusha inc repz jecxz out sub pop add je or stos adc inc test out int imul xchg xor lret pushf cmpsb sub pop pop stos lahf scas testl dec xor jae jnp sbb pop mov lcall and mov test loope sub sti pushf add cltd dec inc pop cmp dec mov sbb mov stos jo jecxz fcompl add cs (bad) xlat sahf mov pop adc gs aam outsl xchg clc fcom add stos mov cmpb sti dec jecxz (bad) ljmp push xor js loopne cmpb mov jb jne xor add pop outsl add add test ja add rorl cs mov add cs je inc pop add fildl adc imul aaa rorb sbb popl and push lret add jmp add xchg xchg xor imul es fdivrs and lds push fwait movsl and stos jge aaa adc add arpl lcall sub mov cmp rol mov push add imul lds repnz dec fs fimull jmp bound xchg popa jl jno scas orl add mov sbbb and sub aaa inc mov inc popa mov pop push test xchg clc lods dec outsl loop inc jg sbb ror mov add nop xor push imul add inc (bad) (bad) in test addr16 lods and sbb movsl sub int3 insl lcall daa cmc and sub lods pop jl push fiadd add test mov xchg test mov jb push pop jnp sub pusha add add mov inc outsb add jb imul mov dec dec nopl cmpsb imul test jle push and cmc add sbb add cmp shll push pop out cmp jb dec fcomip (bad) lret cmpsb add loop add popa add das js sub jmp rolb subl loopne mov push or push bswap cld cmpsb pop das jg xor bound add mov cltd add or add out jecxz or cmpl xor or leave jnp sarb jne cmp xchg xchg gs push je and pavgw pusha xorl inc push jb mov rolb ret popf pop add loope mov mov add push mov xorb xchg std sub or pop add xchg insb cmp xchg (bad) push addb ficoml rcl adc sub inc repnz jbe test jl loop inc call mov dec pop (bad) add cmp mov xchg cmpl jle adc test mov (bad) divb add addl shrl (bad) in xchg js add xchg add rcll flds enter rolb cwtl outsb pop cmc icebp lret addb pop jle mov popa cld sbb fsubs add out dec test sub sub in divl pop loop xor aam clc mov xlat add dec rcrb dec nop cmpl adc add mov fs jge andb pmaxsw ljmp mov nop inc add pop sbb popf pop xchg lret aam fild fucomp xchg mov xorl pushf mov add mov mov aas dec inc pop or dec push in and aam add jge sub test xorb out arpl dec push add cltd pop ret mov fldl lods inc leave jmp inc xlat ljmp xchg and add pop sbb inc jno pop and sub xor out dec mov mov or and sbb sysexit pop mov fdivrs add arpl enter jle jo add pop iret xor fmull (bad) xor mov fldz add sar test (bad) and pop lea gs lods out push mov out adc push inc jb lods xchg jo test and lcall mov mov test add adc or add sub add pushf sub pop push dec pop jns xchg je mov fs rolb jecxz test fstl dec bound pop push decl xchg rclb sbb pusha icebp (bad) icebp in (bad) outsb pop clc test fldt push icebp fldl jno (bad) jmp aaa xor or mov add lcall iret push gs sbb bnd jb inc xor jle enter lcall dec add stos fsts scas xor (bad) add push js add call ja dec sahf inc addb lahf scas sub jo lds inc push mov dec cmp add lea ljmp mov dec mov in mov repz adc bnd sbb mov push ja (bad) add sbb mov xor pusha lret fisubl dec out pop sub inc jmp pusha fcomi sbb adc daa mov sbb xor pop add ss dec xor fldl inc mov cld leave sbb jge cmp mov and pop jg cmpsb mov add imul sar lret sub mov add je (bad) push add sahf cmp ja push in jns popa xchg inc fwait jb,pn jno pop xor fs int dec repz adc push insb and out adcb add jae hlt loop xor add inc xor add js out adc ret pop dec sbb iret leave sbb and sti clc pop xchg adc bound or mov sbb lret test adc mov inc inc ret fistpll test xchg pop jge and adcb pop push (bad) add mov xchg es pop add int3 xchg call push cmp (bad) sbb add push or subb sub jecxz xor scas fsubl pop mov enter in and loop pushf push cmp or dec inc pop push out (bad) xchg cmc pusha jp sarl inc pop sbb pop xor xor in jnp push sub add pop fistp dec xchg fs rolb out es jg ret mov fdivrl jns and data16 roll add sbb das add mov sbb hlt arpl adc mov inc xchg testl ret in add jno mov dec xchg and inc or push mov es mov popa mov leave jmp subl or lcall jl and test ret fucom add cmp add cld push aaa sbb mov add pop loop sbb lret cmp jb xor add dec lea inc mov into popf pop xor xchg jo rolb movsb jno insb pop ret sbb xchg dec ja cmp fisubr push pop psubq push fcoml add mov cmp (bad) fwait mov incb cwtl xchg mov jnp lahf adc ret mov mov sbb test mov andl sti and sub out add aaa and xchg cmc subl dec clc push push sub push inc stc xor popl lock xor mov aaa shr lahf push xchg inc mov mov inc jae sbb rorl push bound adc xchg int pop (bad) mov test cli pop inc arpl cmp xchg add ret pop jmp mov mov fisubr stos add mov das mov inc push (bad) inc xchg mov dec ljmp push imul dec in push stos je sub mov ljmp add push nop fiadd pop xor jl arpl movsb pop sub cmp pop push in jl xor push add imul jle pop cmpl js fwait movl sbb sub pop aad pusha or add xchg inc loop outsl dec mov push add pushf out popf inc mov aad inc sbb test sbb inc add sahf test shll mov lds test inc mov xchg ret pop shlb xorb add iret dec scas jno add ret push inc sbb enter int3 dec faddl lret pop lcall sbb add sub add jns cli cmpsl std lds test cs adc jg push int3 bound inc add add pop add push and stos jle add gs (bad) repnz ja pushf iret aad imul cmpsb jbe rep sub cwtd sahf scas adc dec or mov pusha inc push scas stc (bad) enter loop pushf xor push cmp orl add into mov sbb inc add pop mov add mov jb add in stos imul loopne out and mov adc sbb loop jo inc in icebp inc and cmp cmp or imul arpl testb inc jb std lea es lods add int pop sbb stos incb fld outsb pop push add add or cmp add sbb (bad) pop push cmp pop add adc out mov cmp (bad) push mov int3 mov aas lods add mov and add add inc or xchg (bad) flds int jp pop fidivl adc mov pop sbb cli mov inc add mov je add into inc bound pop push fldcw mov mov sbb clc dec xchg lock loope cmp (bad) jnp mov dec push add int3 insb aad popl fs mov pshufw div xchg popf ljmp xor inc cmp jmp (bad) mov cmp shll movsb or jo ljmp push push call imul push add repnz pop jo clc leave add js rolb mov lds inc and jb fdivl mov adc add adc jp cmp movhps stc jnp (bad) (bad) scas fwait pop mov sbb jne addl scas xor add mov in orl push fisubrl cs sbb xchg cmc leave mov ret aad sub ss jle add (bad) mov adcl dec add sub (bad) outsl push jge mov cmpl mov divb std ja addr16 les lret (bad) jg cmp sahf into inc sub xchg scas (bad) int test mov pop adc push adc imul aad jecxz pop repnz mov mov push push lds mov push sub out test ret std fadds push out jle (bad) dec fwait test sti sbb cmp or popa mov and cmpsl add pop in cmp mov js add ds fcoml xor popa (bad) mov mov in pop jg pop cmpsl mov inc mov call push mov sub xchg cmp (bad) enter mov mov scas ljmp adc (bad) sar test push pushf ss lock cmp aad test push mov sbb js jnp (bad) mov add out push add jno lods dec sti and cmpsl cltd dec add (bad) fwait (bad) int hlt arpl js add aam cwtl lds dec incb test popl dec popf out cmp stos mov lret pop testb add mov xchg xlat stos dec icebp jno add das mov adc adc and outsb sbb sbb cmp mov out das jno test xchg xchg inc mov dec nop insb adc leave push les insb ja add push cs pop or insl sub ficoml adc cmp vmovlpd sbb jg cmc fs verr mov and add add call dec push lods out aaa das xchg pusha add mov int fstps faddl inc fbstp out pop repnz and xor add cwtl push pop test pop inc dec inc push sbb stos add sub sub popa push and jecxz mov adc and inc out rcrb add lock sbb cmpb xchg jo fbstp (bad) dec add iret pushf or adc inc es sub sbb lods inc setge insb aas xchg jne repz jecxz setle xchg sbb pop cmc add mov (bad) insb mov cmp cltd adcb sub mov scas mov insl sbb cmp jl andb add lock jae js (bad) in mov addl loopne or push test xor sbb scas sbb mov adc add xor lret adcl push xchg inc pushl lcall dec nop fwait add sbb lcall pop push add pushf jae sarl and addb dec pop push jo add insl and andb pop (bad) cld dec jg add push pop scas cmc adc addl add xchg cmpsl mov xchg andl cmc sbb mov mov push out jl cmp ljmp push (bad) xchg mov or mov inc andl ret add addr16 imulb je xchg stc push ret pop lcall xor gs lret sub out bound adc out mov add jns inc int adc ljmp int3 add gs xor popa jle leave inc mov or inc adc add ret in mov sub incb mov push mull repnz scas aam jae add mov jge push mov add nop and mov or pop adc aas or stos jmp pop lods ud2 inc mov mov sti int3 add das dec inc jp,pt xor dec inc add andl les cld aam jnp sbb je fwait sahf mov add sbb xor outsl (bad) pop adc shl mov je das add sbb and (bad) mov adc push ja lds imul cmpsb mov lods out roll cli inc add test scas add sahf cltd push subb add xor fistpl fimul xlat or loope iret popf ss inc add jne xchg jecxz inc xchg push fdivrs roll cwtl hlt mov mov ret lret jp pop push ficompl xchg mov or add inc outsb out incb adc inc dec xchg cld bound add mov (bad) pushf enter fildll push jle aaa jl xchg lret out xchg daa scas setae xor cwtl aaa add ja repz lods (bad) mov dec dec cmp sbb inc dec ficompl scas pop add jmp pop add popa jp xchg (bad) testl js jmp jge add mov ficompl leave add out xorl leave add adc mov scas movb in mov jge mov mov lock loopne add les add hlt gs subb sub in ljmp mov mov mov sbb pushf jp iret out sub (bad) push xchg ljmp andb inc add pusha dec pop add jnp jmp cld icebp cmp imul xorl fcomps sub inc xchg jmp sub addr16 (bad) mov es add pusha lcall xor daa pop lock cmp popa inc in add mov stos aaa mov adc iret add insl fistpl xchg in testl cmpsl mov adcl mov aas leave psrad jmp add aad xchg mov add popa adc or add or cmp lock test inc lahf shlb fisttp jbe mov iret add test mov cmovno stos cmp sub add sbb add sbb fwait mov push rsqrtps pop shl repnz sub cwtl and dec insb int push jno xor push xchg pop in adc add sub scas push mov add neg dec add inc pop fmuls cmp sbb fcoml fldt out sub jmp add inc xchg jb aaa daa inc add xchg mov test outsl lcall xchg andb addr16 dec fs and jne xor dec test dec loopne pop repnz mov mov (bad) aam add cltd movsb jbe roll adc and add jle inc popf add or cmp add rolb push dec test xchg testl add lods push mov pop loopne add xchg mov jp push xor lods cli jge cmpsb sub jmp mov add pop nop lds aam mov jmp add adc and push push call (bad) (bad) sbbl loopne cmpsb jno,pn add je or sarb cli mov out sbb ljmp cmp jbe jne and std stos cmpsb push popf sub fisttpl test orb jle sbb dec rcll adc loopne je jnp mov sub push sub (bad) jge cmp sbb outsb push pop sahf mov lds in test push jle fildll repnz bound pusha aas and test mov aaa cmp push lret cmp pop adc mov mov mov outsb aas add arpl sub repz test enter sub jmp add mov icebp fsubrl mov jbe sub xlat lds mov adc stos mov in clc push add push sahf pop jecxz xchg dec (bad) sub ret stos fisubrl pusha (bad) lock pop popf or jl arpl je cmp inc pusha push into js add mov jno fsubrl pop outsb cmp mov das paddb add and es mov sbbb int3 jp mov stos mov add loop,pt and (bad) jmp and dec pop mov test mov add and add mov (bad) testb jnp out xchg je pop in mov icebp insl jge dec stos push dec add mov les jb loope (bad) mov pusha dec mov stos (bad) int3 mov test out mov jp mul inc aam push mov add sub cmpsl xor xchg push fbld jl xor js (bad) cmpsb mov lcall lret (bad) cmc mov fdivp in fistpll cltd jno add cltd add int or adc pop jge jl xchg mov cmpsl and add add pop push test xor fwait add out inc fildll add mov aad jg (bad) or xor ljmp or push add lret decb cmp pop imull cmp jae sti rorb aam fidivr sbb movsl push xor mov lods out jo cwtl test add arpl add xor cmpsb movntq out repz inc nop inc dec testl mov lcall sbb xor xchg ffree int daa jae add jl (bad) jns add dec adc leave jae sti push jecxz cmc pop jl out xor push stc xchg (bad) mov lret int3 jmp cli jo push and and adc add mov scas mov add push cs je mov or xor sbb dec push fwait pop sti (bad) pop out out and xchg cli cmp dec roll dec xchg adc hlt scas add scas subb aaa adcb cmp repz mov push cmp add push (bad) sarb xchg add jns xchg rclb mov jb movsb hlt enter adc pop bnd int inc cmpsl out add xorl mov insl mov outsl jge push lahf add stos adc mov xchg adc jo mov lds js popf jmp add inc push xchg aaa cmpsb pop add xchg dec cltd add out ljmp lods orl clc bound add xchg push movb push lods sbb les add xor fcompl dec add dec mov jne pop add dec jge add cli push push test push mov or mov jp jo test jnp pop inc in cmpsl ljmp add mov ret adc sub (bad) arpl lret adc fdivrl add mov dec leave push mov jae mov ret arpl lods insb add push mov mov sub cwtl into push aaa daa pop pop repz pop inc cld adc xchg mov jne (bad) sub and test pop test mov or mov mov in popa outsl test int3 add test negl movsl or (bad) cld fldl and movb pop lock call mov cs je push mov jbe dec mov xchg dec push pusha jmp push jbe jb enter adc or and add dec enter add sbb call mov jo adc cli (bad) rclb add adc int3 cmp stos lcall incl adc (bad) sub arpl jno push or or and mov xchg jbe movsb clc sub mull fistpll push add mov (bad) test fidivrl add fs test repnz jmp mov inc scas movb add out xchg dec pop add gs sub add pop (bad) xchg test dec add xor xor push cwtl sub add aas fisttp xor cmp mov test push or in jno pop js insl jp add and std sbb fldt cs lret cmp cwtl push inc (bad) xor js mov cld icebp mov and mov cmpl (bad) mov xchg push sub mov and les mov add (bad) xor add movsl (bad) push dec pushf mov daa jge xchg aam xor add cmpsl adc cmp add pushf out cwtl shll push or pop adc shlb nop cmpb cmp arpl cli jnp jnp jbe add jg movsl in adc add cmpsb in pop ljmp and mov lea or ret pop mov push pop fsub aas inc jno repz jg mov inc inc (bad) mov push roll or add cmp scas xchg daa call lret mov and (bad) (bad) fcomi add add outsl inc cwtl ja mov add aas or adc or add cmpsl stc mov mov xor (bad) sub add or or inc add mov insb push xorl lock and lahf adc jmp out add mov dec add cmp adc jb mov add (bad) xchg add pop xor mov gs jne add repnz das inc rclb in adc cmc movsb inc dec shl cmp loop scas add adc fld sbb dec cmp subl stos (bad) mov adc add (bad) xor add loope loop in jbe sbbb sahf aas xchg mov adc sbbl js add xchg xchg add mov cltd icebp pusha (bad) add inc outsb fisubrl xor out imul inc jle mov arpl mov divl cli add into xor add arpl add cmp and jecxz lds mov das test int3 inc (bad) pop pushf push and pusha xchg mov add sbb lock add cmpsb mov pop push scas or shlb adc add jbe sub fdiv add divb (bad) iret clc adc add cwtl add cmp mov cmp dec xchg pop mov dec int3 scas stc sarb add leave or aad aam pusha mov xor sbb (bad) mov or mov pop shrl add xchg mov test stc add cmp add xchg pop aam cwtl sbb or sbb adc xchg pop lcall adc data16 ds add loope imul stos push dec cmp mov sub pop cmp adc and shlb inc sbb add mov xchg sbbb mov pop jl add add int insl loope jne in loop mov stos or xor ljmp cmpsb push jno jle nop mov inc and mov test sub jno ljmp jg adc sarb fnstenv jns add cmpsl adc mov xchg pop dec mov cmp daa mov add pushl mov jl xor add pop out cwtl and ret enter jae xor sbb sbb dec add inc xlat subb add push mov xor add in sbb in inc mov ss imul xor pop inc inc es jmp add cmp add cli lods mov dec adc loopne lret sbbb rcll mov hlt jb add es clc pop inc cltd mov dec nop inc xchg pop mov lret add or cmp and iret mov in pop addl std in aad sbb mov out mov add adc jmp sti and add mov add fs add inc popa and jbe xorb adc or fiaddl fucomi cld inc lods pop cmpsb or imul into insb outsb xor xor (bad) outsl pop pop pop and adcl int call push and and fs add stc lods or mov pop add fbld or jns add in jae jle fildl popf loop xchg test sbb shrb (bad) or test (bad) sbbl push in inc xor pop cmp dec inc jl add out xor mov icebp js pop add add push in pop sbb or nop add jmp and aaa aam and cmp sub ficoml sbb or push sub bound add arpl outsl push lahf lods add ret jne and cmp (bad) fmul add pop imul scas add jmp sub cwtl xchg je dec add dec leave push add pop lret fstps xchg push fs xor or add (bad) adc mov sub mov fdivl mov in pusha xchg clc push mov pop fidivr add dec cmp icebp jo (bad) pop xchg insb push bound mov fmull xor clc sbb push mov rol test mov add add stos xchg insb dec nop pop xor add mov rorb clc add mov sub adc inc add mov xor ja or les add insl inc sbb aam add int and or mov inc push pusha sub aad call mov les icebp cwtl add pop jo add loope testl xchg cmpsl dec repnz push push sbb scas jnp add mov inc sub mov add nop roll negl cmpl mov cwtl das data16 jnp xor shrl daa add mov mov ss cmp pop dec mov sub fisubr addr16 cmp daa xchg xchg cmpsl ja mov (bad) fwait popl jno adc add adc add jbe add inc jmp lret add and push xchg (bad) jnp pop inc xabort push cmp into loopne xchg dec push leave hlt xor dec mov sbb push mov scas or (bad) pusha push movsb xchg dec pop mov sbb jmp mov pop clc sbb les pop mov pop mov mov pop add insb mov (bad) xlat roll fidivrl ljmp cmp mov out adc out sbb and push push push imul data16 into add insl jbe pushf add mov jns adc enter mov insl push mov push (bad) add addr16 lea repnz sbb clc insb push or test add pop inc jp rdseed dec add mov and and dec gs repnz (bad) or sub cmpsl xchg sbb lock add or enter cmp and popf cmp in ljmp dec add mov xchg sbb push push add out mov ret leave (bad) dec xchg dec pop pop add in outsl in nopl mov int3 das popa xchg mov mov add inc aas lods mov jl push mov pop add ret add scas jecxz jl dec mov (bad) roll stos sbb sarb push add jno dec (bad) xchg clc add hlt jg loop push push mov test lock mov inc add push iret in clc jle movsl add or sbbl test jnp dec mov or es add pop stos cmp clc adc inc push push imul sbbl lods pop inc adc das iret sahf xrelease inc movsl jns xor or sub add push jmp add test (bad) gs add dec out test outsl mov add gs sbb sub ret mov add loope rorl sub aas jbe sub mov ret xchg adc in repz mov push gs inc in pop cltd out mov adc test ret andl add add lods cmp lahf push stos inc cmp and jne stos xorl lret adc pop bound movsl pop sub cmc in ret cmp das lods repnz dec daa or popf mov arpl pop shll into stc inc push scas sahf jmp ja imul jge pop fistpl shrl add dec test cmpl inc xchg (bad) adc popa pusha loop mov les xor jl popl outsb inc cmpsb addr16 cmp lods lods push imul mov stos push jle push out outsl jnp lret ror inc add push jge dec add jg sub mov mov iret cs mov jb sub xchg dec sub hlt (bad) bound add inc lcall idiv inc movl cmp xor rclb cli fidiv sbb or or jns mov sub add mov clc lods sbb repz add jge adc dec sub cmpl xor and ljmp repnz shl add aas and cmpb movl pop add jbe ja adc cs (bad) aam xchg sbb call lods cmp ret out pop adc inc add jle add (bad) mov shr push add notl ret in add negb test mov into adc xor jae icebp (bad) mov lahf adc xchg dec add inc test jnp add fistl mov push repz pop je add (bad) out pop pusha mov pusha (bad) incl out add test ja rolb and rcrl and pop mov ds add clc jne add cmp aas mov jo add sbb adc inc sbb inc sub xchg aad pushf add daa cmp pop imul ja cs and sbb ja inc and adc fs in adc test and imul or jle jb add mov jp pop stos add mov mov and fild mov mov ja or subb cltd ljmp stos xor xorb outsl es cli pop inc jne mov repnz loope xor stos cli sub sub sbb cmp add cs cmp xchg mov enter test adc (bad) icebp les mov lcall outsb add icebp mov stos pop mov fisttpll fsts pop push add test cwtl xchg rcrb incl sub mov sbb cli pop orl mov cmp add mov jne pop fbstp sbbl dec out adc add mov ret roll (bad) sahf pop std into xchg sub add and movb mov jmp push and pusha lcall dec pop dec add outsb sub clc cmp xor inc push add and mov ljmp cld push mov xor movsb add inc shl and xchg dec nop cs push mov xchg ljmp pop and leave lock (bad) hlt pop add dec pusha pushf fimull fucomp in push mov out cmpsl add fildl dec iret mov sub push mov loope mov scas cmc mov js repnz add inc and test adc xor (bad) (bad) lcall aam adc fist cs sbb jmp or jns adc loop ds sub loopne cmp imulb pop fisubl push addr16 inc movsb adcb jno sub sbb es xor insb add xlat pop jge bnd add aaa nop mov scas jo repz orb movd xchg push insl sbb lret out xor push jecxz jne add and bsf or add addr16 push (bad) stos inc je roll add popa icebp xchg cmc jp inc pushf in inc jl dec or or cmpsl popf add pop das mov inc cltd pop mov pop push adc shl testb clc adc or sti (bad) push mov mov adc mov sbb aaa lock lret mov in shlb aas fiadd jle or nop add adc (bad) imul sbb dec add int loop (bad) cmc fdivrs xlat jnp add sub xor int3 jno dec fs inc (bad) in cs popa fisub in fisttpl lret xchg iret add ret arpl cli add out dec sbb pop mov cmpl lock idivl mov xchg mov mov sti lret in adc pop add es aas test aad xchg loope xlat mov inc push adc aam mov imul push inc bound daa jle in and cmp lock sbbb jae lret in or test and popf sbb dec xorb jecxz (bad) inc sarl adc xchg mov cmp add xchg movsb xor add aam (bad) and dec jns add fstpt jbe add (bad) cmp add movl mov test (bad) xor push sbb insb aas cmp mov adc mov sbb sti push push stc lret cltd jo add out xchg adc pop (bad) sti subl or cli adc inc loopne jae pop cs inc cmp push inc pop je jno add add mov (bad) aas push cmpsb int3 jp mov test out repnz add cli call fist lods add xchg and sar push add mov andb test add lret popa incb jg and add aaa mov cmp add push mov or cmpb (bad) mov push lods and inc add dec popf jo (bad) or cmpl mov inc and add fisubr out add sbb loopne sti stos daa add dec rolb cwtl arpl jg cmpl mov pusha decb cmp push test inc sub jno push jmp and pop icebp mov in jecxz or add sti jp or jb xor imul mov pop aas out add lods or lods popa add mov (bad) in mov add jmp lods ljmp cmp mov loope xchg and pop sub and jae jge xchg movl lea inc push mov (bad) xlat mov cmp dec incb xchg or or mov jne adc mov imul mov pop xchg dec mov rorb sbb xchg jbe or fisubr inc push or pusha (bad) shll popf jb pop loop xor add and add and cli aam add xchg popf int3 jb dec add cmp sub out lock fstps fucomi in es add mov testl sbb adc add cmp xor mov mov push mov mov cmc add jmp scas add push cld sub inc iret ret push cltd jno arpl je xor adc int3 add pushf mov add rcrl and repnz xor add sub add lea add cmp jp push sub add pop and sahf add xor fild or pusha std int3 cmpsl imul mov sbb pop inc xor dec adc mov lods sbb add mov dec ret jge movsl (bad) jecxz cwtl inc pop jecxz inc movsb (bad) int add dec pop pusha (bad) jbe mov push xchg movl bound sub les (bad) add inc sub cld mov aas sbb out test stc cmp add add aas cmpsb add adc ds mov xchg jo fs and xor adc test lahf std pop xchg or test pop inc mov jge (bad) xor add (bad) xchg sbb loope dec stos cmovnp daa push insl add xchg sub je,pt cltd adc or add pusha or sbb push cs and inc popa roll addr16 repz out adc push icebp cmpsl addl and ret xchg push add mov jg add movb sbb dec nop adc add and or lods xchg add inc sub add push mov lahf add cmp add jg xlat dec jno sahf sub push pop and jo rcll enter adc int fadds dec dec addr16 and jbe dec imul movsb mov add dec sub dec push push ljmp add inc es jmp jns cmp sbb ljmp gs jge daa mov lahf pop dec js xor xlat pop mov add test xchg pop mov xor xor js jl push (bad) aad popa fdivs mov mov push or cltd push sbb add cs lahf sub leave (bad) icebp jbe add cwtl jb lret add cmp add in pusha cmc sbb mov ret inc int3 shrb pushf xlat test cltd popf in cmp mov mov xchg cmpsl pop xor dec or in cmc pusha add xlat pop xchg inc fdivl pusha stos add sub mov dec mov flds xchg push inc add lea add ja enter push add sbb add iret pop push cmp out test daa mov inc mov sarl adc xchg add jbe push in mov imul iret idivl jne mov mov sbb arpl sar push dec cmp add stc fisttpl mov adc cmp mov jle rolb outsb fisubl imul mov mov push dec out sarb mov ss dec sbbb shrl orl aaa xchg xchg xchg xchg es clc sub roll jge mov add mov pop (bad) mov fcoml xor cmc mov arpl out pop flds jae ret push test jecxz inc mov or cmp inc and arpl into xchg mov ljmp push mov int3 (bad) incb test xchg add ret add rcl hlt loopne sub or shrb out xor dec jns dec subb add push xchg bound js add sbbb jmp adc movsl andb inc xchg dec mov mov add xchg (bad) fbld jo pop mov popf push dec inc (bad) clc push cmc dec inc inc add mov int3 or cmp dec xchg mov jge fiaddl cmp push out lds sub jg jo jle daa lock cltd mov push inc sbb sti adcl je icebp mov ret cmp or lcall pshufw in sahf dec fs or mov inc dec (bad) dec add imul add out add pop out ror adc nop fsubl add mov mov (bad) adc xchg mov loope pop xorb fwait push dec jb imul jnp cs pop pushf add adc stc subl imul sbb jae lahf inc xchg in mov test fbstp cmp dec jle loope icebp jo (bad) mov (bad) xchg icebp testb (bad) stc test ficom outsb inc jo sahf lcall mov jg cmp sub lock inc out add sub aas fiadd fwait pop xchg sbb add lahf lods pop adc mov adc jbe cmp fiaddl dec sub cwtl pop add inc xor orl fdiv les int3 mov jo and je outsb inc xchg mov and xor hlt call out add sahf mov add ret ficomp addb sbb jnp call ret add ja daa pop shrl add movsl (bad) cmpl inc stos into inc push sti jnp andl mov inc loope movsl aas or (bad) xchg mov add inc aam xlat mov xchg lods subb pop add push inc pop mov add mov rorl push sbb push andl mov sbb test xor add loopne pop push dec lods xor xor rorl add sbb sti pop lock lods pop xchg scas push rcl je fs xor out dec add xchg imul cwtl sbb leave mov data16 add insb pop mov jo xchg fwait xor pusha repz push (bad) movsl aaa or stos sbb add gs call loopne (bad) and pusha sub inc dec dec cltd cmp stc or shrb lds jl jle mov jge add arpl mov adcl test sub add xchg mov and xlat push lahf orl inc pop xchg add mov (bad) mov nop or pop cmc fsubrs test jbe add mov les aam push (bad) ret xchg mov xor push pop adc mov lcall sub inc cmp mov scas lea sub das clc out or xor xchg jp mov sub in addl rcrl ficomp or ljmp xorl mov and (bad) test xchg jecxz add insb lret cmp dec add xchg xchg cmpsl add adc cmp jp jb lea jae xorl (bad) fs jp xchg inc push dec mov movsl add add jno fdivrp in sbb dec shl js xor mov cmp daa fist stc jbe mov pop aad push xorb add push call jmp cmpsl dec out mov add movsb cmp outsl dec mov add dec push scas sarb adc enter cld imul andl cltd cmc mov jecxz aas repnz push xor and or outsb pusha inc addr16 sbb and daa (bad) add (bad) fmulp mov mov pop cmp push push add pusha mov xchg sbb inc xchg in lahf fs imulb add mov fbld insl pop add mov sti mov stos jle dec sub insl jo outsb sbb lret add ss pop sbb aam jns out sub cmp xor jle push aam iret mov push and ja ret push push sub test xor pop adc add (bad) inc sbb bound loope inc or inc arpl cmpsl xchg add or xchg sub push idivb mov bound lret sub adcl pop and and lds shr js cli (bad) (bad) push push mov adc leave xchg jnp stos cmpsl adcl or icebp mov lcall xchg in xor inc pusha and test lcall add jb,pn add js add mov sarl test sub pop mov dec mov xor jnp sets or test orb sbbb dec repz andl mov cmp add xchg xor stos add je jecxz sub or push adc sbbb fldl insl rolb js add jge jmp xor dec mov adc movsb jl sbb das notl jae and bound std cmp jns notb in add xchg xchg fild push push jne push test mov (bad) loop dec test mov in (bad) in (bad) add sti or push mov mov adc add aam xchg pop sbb adc hlt and fisttpll jnp lods xlat in add or push cmp jl xchg test inc lcall fcomps add cli hlt add stc ret in and scas out test push xchg lahf xor pop daa jne add xchg dec das adc xchg mov cli scas adc jns add shll xchg mov adc adc mov mov pop pop and xchg rorl add sti xchg (bad) pusha xchg xchg push jl lcall jmp icebp add fcmovnbe pop jbe xorb clc mov add repnz add lret fdivl pop sbb mov into and out inc lds jno push xor add hlt ljmp add out lret (bad) daa test into std push add push add and xlat xchg cmp pushf xchg mov orb push (bad) and in jmp jbe dec xchg mov push inc gs icebp sbb mov add mov test aam mov xorb (bad) movl lods cmp dec add add jp add adc xor jbe or jg out pop mov cmpsb xor rcrl lock fimull jno addl dec cmp xchg jne xor mov pop xchg add mov adc cmp dec xchg xor cmpb jns psllq sbbl ret (bad) ror bound mov add pop jmp mov lret push pop add pop ficoml jg daa add out and push xor adc dec stos or fstl pop or jb add ds cmpsb imul or cmp iret jo add stos inc and (bad) loop push cmp push fldenv mov cmp add mov out pushf cmpsl add (bad) mov loopne mov pop add adc addl mov push add dec loop and imul jae mov inc xchg negb ret gs hlt in fild pushf push and add xor fcomps pop repnz inc sbb sub jl bswap jns outsl hlt cmp add and add inc lea pop iret push lret push pusha mov pop sbb add xchg bnd fst mov rorl (bad) imul call jne sahf loopne add (bad) or (bad) scas cmp inc (bad) xor nop dec mov pop add mov xchg mov xorl ja (bad) mov push add jbe sbb sbbb sub mov xchg dec jge add dec mov cmp pop int push cmp lods xchg je jp add roll into ljmp sbb jge add sub adc push inc xchg push nop in ret js jo insb or add cmc jle xor mov cmp adcl insl add mov sbb das dec sub dec and or mov push outsl pusha loop push mov les adc test push dec add loope daa add and insl fs sub cltd test popa mov cmpsb repz mov daa enter sahf in xor sti nop or addl push push negb dec test repnz push int ds clc movsl adc dec jle outsl test call bnd mov xor and mov sbb test stc (bad) adc push testl dec or add std mov insl sbb sub je push mov push add dec daa adc mov roll fistpll mov inc bound push push mov mov sbb (bad) push pop scas xchg je in mov inc add mov subl add mov sbb lods stc push test inc dec sbb cmp dec arpl mov sub in add insl mov pop (bad) inc out mov and cmpl stos stos fwait loop and int3 call bound cld xchg xchg adc add ret add lods xor dec iret je add inc mov xchg sbb sahf std mov dec enter xchg jo push jne rcll mov xorb sbb jl adc inc pusha adc xor pop or cmc add push xor jg sbb dec shll mov int inc sub inc (bad) enter insb mov cmc xlat ds addl out add xchg cmpsb jo dec call icebp sub add aam inc add ljmp stos pop dec pusha add push mov push imul lock xchg ret adc das pushf xchg cs rolb mov mov and pop jne fidivrl stc add aas mov push mov sahf jns add dec fidivr mov int3 add mov pop fcmovnbe add add sub (bad) xor je adc xor test add add out outsb out or jns (bad) push fisubl dec jno cmp rcrb xor add fs leave bound icebp push (bad) cmp mov xorl das and xchg sub xchg in js add pop xor cmpsl mov mov (bad) mov cmp mov lret stc into cmp pop inc push sub lcall xchg bound adc jl push add xchg cltd hlt dec jb (bad) test pop jp pusha adc add push sub enter pusha jge stos jo jb add sbb adc mov pop bound fisubrl out xlat and add mov jbe and rcll inc add lahf mov test jmp leave sar popf out rorb xchg movq mov fldcw (bad) xor sahf test (bad) xor fsubr scas jle adc addr16 ret jne jp and iret push xor pop cmpsl add icebp jl push add pop stos sbb push mov add orb sub iret xor int mov add add jb mov jle cmpsb sub fidivrl add and cmp cld cwtl mov push ss out mov and incl lds stos aas test outsb femms ss or aad dec pop inc xlat inc sub xor cmc lcall add in add mov ss mov lock imul add and outsl xchg outsb mov out mov jmp loop xor and jne jle add dec jecxz cmpsb ret cmc add int and inc mov xor (bad) bound add incb into sub cmc add rorb xchg (bad) and add fdivl lds mov mov add mov or dec cwtl pusha add cmp xlat sub nop lret cli stc fisubr mov test and pop mov add outsb cmc mov movsl insb push or mov xchg cmp lret push pop add test sahf in pop add icebp xor cmp pop test dec add int3 or inc jp rolb and nop aaa inc mov add inc mov push lods adc into mov sub add fbld pop (bad) add jl in and cmp add xor (bad) lcall inc sbbl xor sbb push test into xchg xlat movb test pop cmp loop sub sbb std push add test inc stos and add (bad) ljmp sti mov adc loopne xchg orb dec inc jns sbb jle test pop inc push jge mov or pop push push xchg out (bad) jnp je ret shlb sbb bound push jmp add add stos sbb int3 dec mov imul lods add repz pop cmpsb or inc mov scas mov nop xor jne or xchg xor push addb push lock and rolb addr16 inc mov addb sbb inc cmp add pop iret jbe cmp cli add or addl insl fdivr movl imul add add loope mov shl (bad) dec fs push add nop sub pop mov jmp inc sub (bad) int3 cmpb int xor adc jle jl xchg push add enter add push pop adc dec repnz add push call pop addl pop aad flds in xor fs (bad) sti add fisttpll jecxz lea pushf adc xchg add inc adc sahf les dec fsubp aam (bad) (bad) pop test leave mov test in outsl mov loope push add pop sbb into mov or jb imul data16 pop jno (bad) cmp repnz mov mov cmp xchg add sub add xchg mov adcb push push mov jl adc ss inc out fisttpll add push ljmp mov cmp test into jbe rcrb add imul mov jg add pusha xchg imul mov lret push push inc cmc es into mov popf inc scas jecxz out jmp setle pop ret jbe fnsave mov enter add jae cmp adc js fs (bad) shlb les adc cwtl out (bad) cmp arpl dec int pusha add je mov and mov addl aaa orl lds sub add or xchg add mov sbb stc imul (bad) scas cmp push jb jge out add or cmpsl xchg xchg mov jns pop outsb cmp inc add mov sti mov and sub sub add push test test lahf fs cltd add mov ja jl js add out pop and in or ret arpl jo fmuls add jnp test int xchg js pop jb loope cld leave test sub mov pop xor das mov and (bad) stos int3 out mov mov pop add push pop call jne cmpb out jle mov jo mov mov ficom add add or adcl xchg jge repz lret (bad) hlt mov jp cwtl sbb and sahf xchg roll jmp scas inc neg add xor add stc jle add fsubl inc xor imul add mov mov ds cmp add std dec (bad) push push xchg pop (bad) pushf add and stc xchg leave rorb mov int arpl fiadd jo mov imul aam loop icebp or pusha testl mov std (bad) adc fcmovu mov push rolb out mov insb jg adc js jb loope stc sbb mov and scas add add sbb mov inc ret push lahf dec testb push loope mov popa add mov xchg imul rorl mov dec add (bad) jmp pop lods mov cmpsl into mov dec pop add push or test es mov cmp aas jnp test push in xor push icebp pop repz pop cmc and lcall test inc and and mov ljmp sbb pop add out lret mov adc inc add mov add (bad) daa jl mov jp add xorl cmpsl sbb add mov adcb call loopne ja add pop add adc fscale int3 test jle popf jno xchg xchg and xorl xor popf bts add sbb xchg pop sub add cwtl add fwait sbb add jo popf mov push les lea and add dec mov or xchg push sbb jl shll lea dec jbe jno add lds mov mov stc mov pusha gs add cmpl jbe add mov sub aam pop (bad) jg inc add mov inc cmpsl push push test add mov mov sub or add adc dec mov jecxz lret repnz call (bad) pop out adc jg jmp pusha imul pop mov sub pop (bad) arpl xchg fidivr pop stos out add fs mov enter add lret add int je imul hlt push cs pop add and out push jae inc add mov hlt test add dec ret mov mov or scas add pop mov adc push cmp and mov (bad) mov cmp cmp add dec xor lock mov inc pop (bad) in rolb adc mov faddl sub dec and cmp jmp push (bad) jb add test add push jg add das mov pop lds rcr inc insb push iret mov add pusha test push pop push mov xchg leave popa cmpl lock loope out pop (bad) dec lods add xchg cmpsl repnz add dec enter add addr16 mov sub mov pop jle add add sub mov sbb lcall and add or or popa mov nopl push mov push shrb xchg pusha inc pop add call cmp pop mov or lcall or (bad) xchg cmc faddl add adc mov mov test and or fistpll inc inc dec pop sbb adc mov inc push xchg lahf jecxz js,pn add xchg fsubp jo add cmp mov lret cli test xchg inc test jne dec pop ret mov inc mov add stos push jmp ret and popa or xchg enter pop loope insl mov clc movsb aaa inc es add jnp add stos lods cmpsl jne add in andl cli sbb out cmp imul adc test addb out mov sti inc mov faddl dec (bad) mov jns mov test and inc and jecxz pop jge add add mov pop jmp testl mov call or mov add mov andl sub lds pop cmp inc xchg sbb mov jnp sub push push push lahf (bad) mov jp pmulhuw mov pop xor dec daa add (bad) fnsave cmc rcrb and dec mov aaa add adc or stos or test inc xchg cs add not mov and test xor xor bound mov sbb (bad) jb or or jno sub xchg aad stc pop movsl mov sub mov inc arpl fwait std add jle int pushf fldl jg add fistpl add mov pop add bound push add xor and add sbb xchg adc pop inc or out push fildl inc add pop in mov pop mov jmp adc hlt and shlb repz jge scas dec add ret sbb add pop or adc xchg push imul addr16 loopne add (bad) out mov xchg dec push xor add cmp dec lea fnstcw mov jno sbb xor ficompl jbe push cmpsl xchg outsb inc out push ljmp add and sbb jne push aas sbb add pop mov (bad) xor add ja leave cli cmpsl lods add imul cmpsb jo cmp imulb mov jns jae cmp and xchg or movsb pop in xlat add cltd jp (bad) iret cwtl inc adc ja dec imul xor jecxz sti and mov add add mov mov (bad) addl mov test jbe and jns add and clc add pop ds add or out aad or jmp jo xchg sub (bad) test add mov inc mov cs adc sahf aam add stos sub fistpl repz mov std icebp mov outsb repnz add popf xchg mov imul test xor pop rcrl mov imul sub test add loope jb in jnp sbb hlt add jo add dec notb mov xor shrb mov xchg sub add add and jnp mov je add adc jl scas adcb cmp adc call add fsubrl out add mov xchg add outsl testb jne fmulp mov jb add mov in lret repz add add (bad) jl daa mov inc or pop mov cmp dec mov mov nop int adc adc mov in pusha push jge mov fimul inc sarb push mov aam pusha pop sti dec add in cmp mov or add out add arpl lret pop cmpl stos pop out push aas add push xorl sbb mov imul frstor add dec dec popa mov imul sahf cmp xchg data16 mov (bad) xor fildl testl (bad) cmc add pop pop push adcl movsb in (bad) mov bound mov clc into add mov test dec and mov in add stos (bad) mov popf imul hlt (bad) fidivl add cld enter fsubr mov cmp add loope jg adc fnstenv fstpl xchg pusha push cmp xor xchg out loope std xchg cwtl loopne,pt push sahf pop out (bad) stos icebp sbb and and xchg lock int adc xlat jbe cmp dec inc add nop add adc sub mov mov xor xor add fcoms daa add xchg cmp sub iret xchg pop inc repz jo jmp leave fwait add xchg arpl and ffree out into cmp push xor jo push fstps loop sbbl pop mov pop test inc (bad) xor mov dec out xchg imul loop adc mov mov mov add insb mov roll incl insl jl inc push xchg push or fcomps rcl mov add ljmp (bad) into or lea pop test jle and mov ret jo popa pushf adcb jo,pt push stos out add das mov or inc jge lods add scas xor add push cmp (bad) (bad) jp adcl cmp cltd dec das or mov cs mov mov clc add stos mov roll loope sahf or outsb lods verr ret and arpl add test or jbe orl jg icebp int faddl xchg lea push mov fcom add fwait shl scas pop pop test cwtl mov xor or jecxz addl push dec andw cwtl addb std pop jl adc movsl add lds jne jnp xor cmpl dec jl push stc and pop xchg add sub push jnp add pushf mov dec jo cmpsb add mov adc sub cltd clc popf repz dec lret inc xor pushf insl out stos imull addr16 notl add sbb rolb jmp pop (bad) addb pusha xor repnz add shrl leave loopne lea jge (bad) pop push sbbl jl cmpsl std push xchg dec add in pop hlt lods cmp jle add mov movsb aas ja hlt int3 roll pop pop and pop and mov push loop mov addl pop inc scas out insb dec mov lret cmp xchg mov inc xchg movsl test (bad) add push xchg in dec cs cmp into std sub sbb add repz xchg pop xor and sar movsb inc dec push test add jmp mov mov enter push stos popf pop (bad) aas dec outsb or out bound jl (bad) lcall cli push mov or and shlb out push (bad) loopne xor cmc loope add xrelease sub bound add mov das rdmsr xchg jnp adc push sub clc ret add movsb push (bad) jmp enter pop pushf add cs push mov adc push pop jmp xchg shrb inc add in cmp add lock pop add (bad) repz add aaa sbb sub ret lods xor pop xor add mov in or xchg add inc test cmp add push cwtl lret fstpl fdivrs add loope loopne stos jb xchg xor addb nop jbe mov adc mov xorb push jbe std mov cmpsb mov pushf xchg lret aas mov xchg maskmovq testl adc mov inc push jae je call popa add xchg push add push sarb mov jmp mov int3 fdivr xorl mov pop jo dec add mov or jb enter psrad pop add lods iret cltd push adc mov and (bad) mov xchg mov sbb push jo lret shrb jnp add sti sbb add gs pop fadds popa mov loope call pop out pop inc repnz jo adcb setbe ljmp mov inc mov fcomps (bad) xchg cmp mov pop scas and jl (bad) inc (bad) mov sbb ss xor fadds lds (bad) jle pushf movsl push dec (bad) icebp push cmpsb outsb in sub and repnz imul mov sbb jno add inc cmp jo fisubrl adc inc mov add or xor add enter lock hlt popa xor xchg in scas in jge xorl push insl push add mov in or out es add iret xchg add addb add out test lods lret xchg lock sbb idivb sub mov add inc adc in fidivrl daa les inc lahf jecxz out outsb add sbb in mov inc movsl daa sub lcall jle lea rcrb push aas int incb pusha lret dec rcll add sar inc add sbbb mov cwtl les or cli mov test incb inc int js or xor and cmp xorb fbstp pop pop xchg add out inc shrb movsl cmc add sar or mov imull add (bad) xchg loopne xor into out neg push push xchg stos icebp sbb jl outsb mov cli or push mov int xor sbb add loope in bound out add xor cmpsb sbbl inc add jge mov rcll add test inc scas jle and fldt xor push mov test roll cmp mov leave push fimull add sub pushf add stos adc add insl shlb xchg mov icebp sub mulb in sbb xor mov neg add mov lret jmp dec push mov cmp in mov out add repnz in pop cmp add mov dec call mov add cld shl xor mov xor inc in and cmpb sahf jp and das repz pop rcll loop add jnp jp add sbb aad test cmpsl and push ret jl mov pop add mov enter add repnz push stos (bad) outsb lods sbb cli add push jno mov incl out mov xor in mov jo dec stos add mov inc jl xchg mov push sub push sbb xlat xchg mov test pop enter cmp int3 and les add lret push push mov subl sbb add xchg cmp cmpl cmpl dec lret fldl jl pusha into push movsb dec rcrl in in add cmpl xchg xor in sbb insl (bad) int3 and fadds aam fisttp lock sbb add sub push add inc add test jne inc outsl and sub sbb inc sbb add imul in (bad) or add jp adc pusha push xchg push jne mov bound cmpsb xorl jmp imul lods inc or sub mov add (bad) mov add ljmp ret sbb orl sbb add jp rcll sahf mov fild push cmpsb clc add cmp (bad) pop add dec test pusha inc xchg adc shll add das inc xchg ss fs pusha popa (bad) jbe jne push jb cmp loop adc mov add ja mov push jbe xchg jb push dec js ret inc add stc inc cmp xchg lret add roll pop testl leave cmpl fadd stos and movsb in int jp push out pop lret cs xchg dec sub push sbb xchg or outsb out inc in addb xor idivl in iret jp fadds int3 jge push movsl imul shl add pop sti dec jmp sbb pop add push push add je add rclb add sub mov sti add insl inc int3 xor jne pop cmp jno lret dec ret fimull mov cmp inc cmpsb in xor adc sbb sub sbbb cs xor and scas dec (bad) sbb and and pop inc xchg pusha adc pusha xor xor ds and mov push or push das popl jb cs lds and (bad) push daa xchg or adc sub xchg into dec jp (bad) sbb int mov xchg insl xchg xor add sysexit out ficoml add and add push movsb inc notb inc or iret daa inc push (bad) add add pop inc sbbl mov pop jnp add sbb inc test imul mov xor jl aas cmpsl add lock test xchg fimul mov pop pusha pop mov push and movsl inc aam hlt fild inc mov loopne es pop jns jl dec add ret lcall mov repz lahf add lods jmp test mov mov test loop add and sub push icebp cmp int3 push jle sbbl test add mov fs mov in xor ret add pop mov add dec jo dec add mov sbb mov arpl sbb cmp add xchg xchg cmpsb cmp leave into jl add enter push add movsl xor je jo (bad) mov mov mov int3 clc jp popf pop popa jecxz pop xor inc dec push add xor sbbb rorb inc jle push xchg pop lds add xor xchg shlb pop pop scas int3 add ja jmp dec dec data16 and movsb mov icebp jo (bad) insl sbb enter fcompl mov sub or push popa inc jnp (bad) xlat mov jae outsb add mov mov add stc pop aam daa lea sbb fwait cmpl mov test out add popa jle dec sbb ds push inc out andl testb and mov movl movsb add int3 push mov mov (bad) adc lods daa push or jmp add fdivs xchg pop (bad) push gs add push lahf cmc sbbl fbstp mov sbb movl (bad) push (bad) mov imul sbb sbb pushf and sub leave aaa mov flds dec jl pop ja mov mov into inc mov xchg sbb or js add xor sub orb push mov sub lods lldt sahf jo fistpll cld or jmp fwait add lock int3 insb push add pushf or add loope push mov test dec gs xorl dec add dec shrl dec je xchg or add mov out addl dec mov xor and push add lea lods mov add add cs mov cld add addl pop pop mov outsb or inc dec in repz repnz mov dec sbb stos out lcall mov dec xchg push dec add inc sub mov int3 cmp or inc fwait (bad) xchg outsb xor in rol xchg lods subb sbb xlat pop add inc test cmp addl jo shll test sti pop faddl jecxz jne clc sbb aad pop pop dec call fs pop pop mov repz add adc push add cmpsl outsl movsb ret test push cmp cmpsb push or xchg adc push add ss pop test adc cli dec inc daa rolb or jo cmpsb ljmp jno dec jge popl xchg lds mov frstor jp sbbl pop jl dec jns movsb adc xchg sbb (bad) adc lret add xchg jmp inc pop cmp xor test xor inc jl lods in mov mov jp pop repnz xchg in fldl aam scas aad and inc test int or add jmp push add xbegin cmp ret std push into jmp repz or iret cs dec xor jae jnp add mov loope ds mov orl mov sub stos and fdiv (bad) aaa rcrb orb jle xor sub cmp fisttpll mov movsb and scas lock cmp add add mov loop sahf movb cwtl inc sbb add lods jl cmc sbb jo jb in sbb cli xor lret mov xor add mov mov je or mov sub xchg mov cli repz addr16 xorl insb test push pop add dec mov flds rcrl inc jns mov inc aas outsb push cmp addl test dec inc pusha pop sub adc or mov ja jle sti adc cmpsl inc stos jo mov mov mov popl dec mov je (bad) or fcoms push jae lock test mov and mov mov popf insb xchg (bad) in sar jne sub jl push data16 xchg das xchg gs sti pusha add fwait jecxz in cmp add lds ljmp imul popa inc aam add dec inc (bad) scas mov push ss (bad) or xor adc lahf pop add lret and inc test roll xchg jnp outsb aam adc cmpsl add inc mov daa pop add shl add cwtl push insl jbe dec movsb mov imul push push add add fs push stc or cmpb cmpsb push xlat add insl js call mov inc int3 pusha add movsl add clc jb cmp aas repnz fwait mov (bad) std aad mov sub fiaddl adc cwtl (bad) sti jns aad int jbe sub pop movsb push mov inc mov sbb add aad sub add (bad) mov sbb jae mov mov mov inc push jo pushf add lock (bad) cmp arpl mov or cwtl sahf lahf add add dec (bad) mov loop xchg cmp mov add out inc js push add arpl add cmp add jns dec or add sub sub jae add (bad) dec add jno or and mov pop fimull in stc sbb add jns push mov sarl jle xchg cld bound add ret lahf inc je pop add pop (bad) ficompl jo xchg mov ja add shl or outsl add (bad) fnstcw loop imul add sbb add arpl mov and jg test add das jae and pop pop adc ret adc popa add inc jae xor dec insb je add sbb (bad) popf mov into inc mov test adc mov stos dec cmpsl stos nop cmc sbb add sbb pushf mov dec lea testl insb insl sub xchg fildll hlt xchg frstor or push mov dec out into jle xchg lds xchg (bad) mov add cmp or jl movsl add and enter xlat (bad) lods pop ret scas fadds ss cmp mov movsb into pop add fcoms stc dec stc dec push lods loop add xchg sahf push add mov add lahf enter mov jnp push (bad) xchg push cmpsl add add lahf test mov ja sbb push xor add xlat cmp dec or mov popf daa mov mov and add subb pusha shrl (bad) popf mov inc cli cmp repnz lret fwait (bad) in testb push mov scas dec scas subl mov adc call pusha dec xchg out xor mov sub xchg addl inc mov insb sub add pop xor fldl sbb aam xchg stos ljmp es icebp cmp fstps loope xor inc cltd add adc fisubl jno push xor shl stos fldl jo flds mov dec push roll inc (bad) rol or test jecxz mov xor inc add inc inc mov inc jae or cmc lods inc js add es jge or push cli cmp add cmpsb push popf repnz jo mov jl popa sub add sahf (bad) sub pop mov adc fisubl adc pop (bad) mov mov stos mov ret fwait stc add test nop scas push add outsl cmp outsb pop mov popa (bad) and rcl into and jge xchg jbe pusha loopne mov and in cmpsl outsb cld subb xchg push inc sub lds mov push add dec jno outsb xchg jnp cmp add (bad) and aam pusha xorb test push ret pop inc xchg pop nop mov push add jle add mov mov fs sub shr repnz cli loop repz and scas stos sahf sysret popf xor mov cwtl mov (bad) jb fistpl pushf (bad) icebp rorl daa aam add (bad) icebp jmp adc xor and cmp jmp mov push ret movb arpl sbb inc popa pop dec adc push pusha test imul test subb lds push mov cmp xchg pusha aas xchg rcr xor mov rcrl xlat push push sbb dec sbb incb xchg arpl add out jnp aaa sub adc xor sbb mov xchg adc add mov enter mov adc inc pop leave or (bad) inc jmp daa lret inc clc std pushl xor add shrb add push sbb add adc add pop and add add dec lds loope cmp xchg cmp inc inc in mov scas dec add ljmp cmp ret cmp je (bad) testb adc (bad) daa (bad) pusha cmp pop (bad) mov loopne adc rcrl cmp or sub pop adc sahf dec lret jo cmp cmp cld insl scas cltd xor inc (bad) fstp subl js,pn out jb push insb pop add pushfw stc jne scas push jo sbb add sti push fs add sahf fcoms sbbl fimull add xor jmp sbb add push sub mov add aaa popf mov rolb sahf inc add push enter mov (bad) ds inc jecxz ror push pusha add mov pop lods test (bad) mov outsb or adc pushf les inc add and inc cmp inc movsl and stos inc inc sub cmpl cmp or (bad) add stos pop xchg pop rolb ret leave pop xlat add daa in orl sahf jle,pt pop pop push mov inc mov add mov int3 add cs push adc shll repz xchg aam lret outsb or add adc jae add add xor (bad) gs push jg or xchg sub test ds sbb out cld adc dec add xor sub das pusha adc push inc add push (bad) loopne icebp nop push mov rclb (bad) xor pop roll pop jl lahf nop (bad) add mov jg sub fs jo imul add add or pop clc sub sbb jae xlat in js fnsave cli adc fwait add out cmp (bad) dec add ror stos push sub sub cmp add inc xchg out arpl out lods hlt lods movsl dec sbbl mov clc or icebp inc out xor (bad) pop adc (bad) push rolw push ja icebp add into xor clc cmp sti movsl dec outsl repz xchg xchg xchg add fcmovnbe mov sbb or xchg cli add mov ja icebp jp xlat daa les dec inc or xor cmp or imull xchg (bad) fistpll and inc xchg xchg mov jae sub jecxz aas imul out add jmp inc jg sbb or or jo adc or in add daa jp cwtl ret add aaa xor xorps pushf dec jbe daa lcall scas push push sbb pusha mov fs xchg pop adc push push mov (bad) xchg incl dec xchg lock mov lahf jbe inc push bound xorl repz insb mov push les cltd lock adc inc je jp mov mov repz in adc jns insl mov ss daa cld jg scas add fbld addb push cli (bad) in adc xchg xor test decl in add mov adcl enter add mov add adc sbb inc pop add add pop add push cwtl adc mov pop mov test sbb rcl mov mov into push in pop push jecxz js orl pusha xor loopne aad (bad) (bad) mov inc mov lds stc test adc fs push jbe mov daa push aaa out and lret fistl inc add adc xchg (bad) mov fs test push or and push add push ret cmp stos cmpsb cs add out mov stc xor insl jnp adc arpl inc push movsb scas pop test add xchg cmp pop mov pop jle fiadd cwtl sub das inc movsl add xor sarb (bad) stc icebp popa fisttpl mov jecxz mov mov mov insb add mov fs push and loope out adc or jb sub add sub add push movsb jb sarb and rorl push in jae loop rcr popa imul sbb addl int3 fldl push pop sub pusha scas push arpl add leave (bad) vmread pusha xchg ja mov jno es pop xor iret das cli jp add pop ja add dec add cmp cmc sbb loop ret fbld clc push dec dec cmp ljmp out (bad) dec mov jecxz sysenter jbe xchg movsl or add ret xchg sahf popf int3 and dec pop sti and mov pushf push push pop inc loopne or mov mov aam dec push add mov scas xor sahf push mov outsl les loope xor ljmp pop pusha stos and out adc int add add loope push inc dec add inc (bad) sbb add pop cmp cmp mov or pusha sbb addl jle arpl cmp pop push add mov pusha imul dec push mov test xor jmp nop je or push jp popf cmp loope mov sbb add mov inc add (bad) cmc ja dec ret inc add mov (bad) pop add std imul sub imul inc and daa in jbe notl pop inc mov inc out dec add repnz sbb cs mov sti pop out inc adc fbstp add bound std add mov lods cmp (bad) repnz shrb add pop xchg lahf fadds pop push sahf rorb add mov sbb sbb faddl fistl pushf mov lcall mov flds lret xchg mov jmp mov jnp mov pop adc mov stos inc add inc andl jmp cltd adc gs xchg roll add bound sub (bad) mov pop (bad) mov mov add pop jnp sbb movsl cmp and and jns or jae push cmp call movsl add pop cmp insl add inc push mov ss fisub sti bound push dec cmpsb add (bad) in adc cmpb int3 imul add pop hlt add mov js iret movsb add xor xchg add in cmp cmpsb (bad) mov inc enter lods cmp out inc lahf dec adc in mov add outsb test gs jmp and scas int popa repnz adc adc mov iret sbb xor cld inc fsubr (bad) dec add popa cmp add xor adcb push clc mov add push inc pushf imul mov lock fiadd mov cmp pop adc and ljmp mov cmc or pop mov add out mov xchg lds imul decl jns jb inc or aam mov stos repnz movsl mov loopne mov enter fwait aaa icebp push imul add xchg jge subb addr16 mov push addb das or add bound fwait popf cmc popl and scas (bad) je sbbb cmp int3 (bad) sbb sub add add test fistl out icebp and cmpl jo (bad) jns mov ret cli popl push out xchg sub aam xchg and (bad) sti jnp add repz xor ret cmc xchg lock cwtl ret stos lar loopne iret pop lahf mov test test daa lods add push mov pop mov xchg mov (bad) and push daa add jo ljmp loop add sbb cmp int sahf fs imul movsb xlat outsl bound sysexit xor cs lahf add add roll inc sub sbb add (bad) pop out leave cmp add or xor loope jg cmc pusha push ljmp ja or add inc push lods jbe flds ds jmp or push mov jge jb add xchg lahf pushf nop adc out pop loopne mov pop sbb lock sub add add mov add (bad) call or lret jo push xchg icebp inc inc movsl popa bound outsl pop push je add enter nop jmp mov movsl cmp decl loopne adc add dec faddl pop cmp sbbl inc lds icebp lret pop les add cmp stos aad add sub int3 scas sahf push add cmp int jp subb movsl in adc pop sbbl xchg sbb lods jae,pt sahf mov mov pusha into dec (bad) mov in cwtl xor pop xchg jp rcrl add sub pop sub lahf add jmp xor dec push or mov add jle jmp add jnp push cmp or imul adc jecxz cmp push mov pushf or xor (bad) hlt sbb (bad) add lods es test pop xchg pop incl ficomp pushf mov addl jne jnp mov stos or shrb pop xchg inc fsts mov in mov pop int3 or rcl es insl inc cmp pop adc aad (bad) in xchg pop push sahf add in aaa bound xorl sidtl and jge xchg jp push xchg xchg call das jne mov push iret xchg xor mov rcl ljmp sub hlt jmp add movsb cmp mov ss add insl iret inc into scas insb cmpl mov cmp xchg inc movsb andl and das add loopne and cmp cld inc imul mov fiaddl outsl pop push (bad) add nop icebp popf mov fdivs movb rcrl inc out out pushf cmc (bad) jo xlat sbb gs or or push jo push xchg lock cwtl sub subl fistpl scas lea lret dec outsb pop test xchg xchg mov je inc jb lret cld je call lea nop (bad) jp (bad) mov hlt pushf setb sbb mov sbb mov sahf (bad) adc inc inc (bad) les push mov (bad) stc shrl sbb pop and insl outsl mov mov (bad) push fldcw pop add lds cmp ljmp ret insb test jb sbb jl fs adc flds mov mov sbbl dec mov lret and shrb mov jbe jp daa packsswb jmp pop mov std sbb jl pop jo (bad) xorl mov and mov sbb movsb aad inc or in (bad) stc outsl roll push push push cmp and add jecxz inc add push inc pop add enter cwtl cmp add shll lods dec and jbe test outsb inc push inc ret push sbb push stos xor mov out add xchg cs mov push (bad) add ret xor imul jl pusha and mov jge xor out stc repz pop mov ret push pop sahf add frstor mov pop aad cmp dec jp dec (bad) mov stos add aam xchg push movsb add or or mov (bad) mov add sbb jns aas pop call cmp push xchg sbb add sti aaa pop leave adc (bad) dec fld aad xchg in outsl mov ds jl fadds cmpsb lcall mov sub jle ret add rcrl mov popf stos sahf test xchg out insl arpl roll add jbe lea scas dec mov sti cmp inc mov xchg testl add cmp out jle aad mov dec pop (bad) jo pop adc and lock mov out push add push shl scas ja sub (bad) lahf mov test sbb icebp sbb or or repz pop subb add in mov bound repz sti jne add sbb add inc dec bswap loope jo mov (bad) cmp mov adc add ds add cltd adc xlat dec mov shll add test out or fildl add or mov aad push adc xor rolb subl mov cli sub add push jmp psraw adc add add stos add cmp add mov jmp sub andl jbe jo jmp jo mov lock cld jno pop adc sub add sub pop cltd outsl int add popf mov add mov mov les pop jnp pop add sub das sbb xchg or lahf add and sbb pop cmpsl cs lret push sahf add dec loopne add inc jo add fldcw data16 fsubs call xchg out (bad) mov in jle pop lods cmp cwtl push and adc es mov pop ja dec lods outsb mov mov add sbb adcl lret call les in data16 flds daa sahf add inc lods faddl arpl jo rclb sbb andnps mov sti mov (bad) lds jl add mov mov (bad) ljmp aam minps sub sub imul fistp dec pop lods lods sbb xor cltd sub xchg test sub mov dec out and cmpl test das inc pop test add inc sub jne add mov cwtl cmpsb cvtdq2ps popf pusha fisttpl mov sti jne inc nop mov xchg inc pusha (bad) fwait mov mov arpl add jecxz mov mov xchg push jge lcall sti jo lods mov sub mov loop add add and stos add push jnp lahf pushf xor mov cltd push and andb cmp in sub jg mov movsl add dec mov sahf aad add in add mov mov mov loopne repz rol pusha sbb add stc xchg jmp pop fsubrp push pop jns add mov fldcw push cmp adc push lcall pop fsubl movsl push xor cwtl and sarl add pusha lret mov nop inc in xchg jl mov cmp jb cmpsl add pusha je enter orb mov inc fbld sti push xchg outsb push pop (bad) test pop push mov xchg jge push in scas aad cmpl push fbstp mov add mov jne fwait out cmpsl dec xchg cli cmp lret test jns ds push xchg pop add cmc cmp sbb (bad) xor push inc xor pop add xchg js push repnz push mov in inc pusha sbb insb mov ret lret pop add adc loopne push nop shrb mov xchg dec add sbb adc sub mov jo out add (bad) inc test cli xor jle and and stc jmp push (bad) loope xlat push push pop outsb add pop dec or lret jne xorl sub push orl mov add std lods stos mov popl xor push iret flds jnp stos dec std fmuls inc mov nop popl arpl inc mov mov popf xor out lods sub mov nop cltd mov mov subl mov inc (bad) fldenv aam xchg sub stc bound add xor repz fadds pop jp in aas add jns dec jmp xor xchg xchg lahf out inc add mov test hlt (bad) jae mov jmp das mov add inc lret out imul pop dec pop sahf adc inc add lds in dec push daa repnz push mov jmp popf adc std push dec pop add sbb lds inc pop mov push add mov je ret mov sarb es or (bad) leave jno,pn popf cltd pop inc inc sbb mov aam cli addr16 pop add sub sbb outsb mov test aaa sub or ret push add inc out sbb lods add adcl in add and lret inc in mov ds xor and push hlt push mov loopne out nop cmp xchg lea jge pop addr16 inc mov add add stos xor and rcll add cmp int3 mov xchg fnstsw outsl mov lcall mov int3 cltd in jo loop ja add cmp fcoms aaa push add add sbb (bad) mov cmp jg int3 cmp dec fisubrl mov lret (bad) scas mov mov iret pusha je imul push inc mov addl pop outsb leave lret (bad) mov pop mov and lods mov mov lea cld mov adc iret push ss xor mov es mov cmp testl insl icebp push pop aas cmp jno adc push jg add xchg lods loop ror fiaddl and es dec sub add cmc cs imull dec cmp adc add xor out cmp mov push and cmp add xor aas inc jg,pn pushf sub lock dec enter or inc jmp xor xor and sbb adc xor rolb pop push (bad) pushf lea stos add lret cmp ss add call enter aaa ret adc dec in (bad) movq sbb mov sbbb mov shrb call sub inc sarb sub xchg movsl add fldl inc add (bad) add push jnp or add sbb pop pop jne xchg pop and or push sub push aad jns icebp sub sbb out or incb fistp cmp dec loope sbb xchg out jne add mov (bad) out fcoml add mov mov test jle daa xchg ja inc in xchg cltd cli mov mov mov rcrl rolb push mov xchg add and push (bad) nop fidiv add and aas add movsl cmp es leave push push roll sbb icebp aas mov or popa aad add bound mov sbb pusha dec lea enter into add mov pop scas in sub add cmc test add or push pushf mov inc ljmp (bad) push imul dec sahf lods inc lea (bad) jnp psubusw and push mov subl sub cltd or push xor clc cmp adcb xchg rorl pusha (bad) in lret icebp mov add ret fucomi add outsl sbb add aaa or jae add ds mov das pusha pop push ja push mov pushf jb (bad) (bad) sbb mov std into stos xchg les pmulhw cltd and loopne sbb aaa lods lea inc push fistp ret add sub add out or push add or out je lcall add jg cltd int call add imul and dec xor mov pop adc and sub rcrl jnp jmp and cmc adc sbb jg inc imul inc les adc fnop push testl int3 insb cmp dec paddsw add xchg lahf mov gs jne cwtl lret paddusw or out addl cwtl shr mov add subb pop and and in cmp mov test push test sbb subl add negb or andb ljmp pop add lea xor mov loope mov fwait inc push inc jle insb repnz fild ret lret xlat mov cli add and leave fldcw pop fdivp jle xchg xchg adc jmp std test mov xor mov dec dec es lcall mov clc jl inc add jne or dec push shl sti xlat inc je add add std jmp adc mov add cmp cmc ds and xor sbb mov (bad) lcall (bad) rol sub popf cmp xchg and lret adc les adc mov test mov repz add cs testb adc xor jle or ss inc sbb add imul aas fistp je fs jns cmpsb pop sbb repnz jl push adcl ret cmp or std add fcoms sbb lods in jno add out orb xor mov push lock in popl xchg cmp dec xor iret test push mov add outsb jae sti push nopl sbb and mov outsl (bad) xor lea andl je negl repz repnz nop sbb dec call imul sub inc mov pusha and subw mov and arpl pop add loope pop lret dec ljmp mov subl inc xor subl xchg fwait add mov xchg jp fcmovnbe gs pop xor sahf movsb add (bad) ret loope dec mov pop jle inc add aam out cmp add xor push jecxz pusha push mov xchg (bad) ja add cmp mov add inc cmp sbb addr16 inc add mov push xor arpl out mov xor mov sub cmp sarl and push pop add mov cmp mov mov fdiv movl test (bad) (bad) addr16 jo in xchg pop negb out fcoms cld push add add iret mov push adc mov sbb test inc ljmp and call in inc loop movl inc mov out add pop push mov aad push adc mov cmp inc xchg mov xchg fistpll sbb (bad) dec lcall xchg add xchg test daa sub mov andl pop push leave out dec inc jecxz and pop addr16 jns sbb mov in sbb fdivs add out ret test add or pop push sbb fild lret rcrl push add insl movsl pop add rorl scas cmpsb xor andb pop outsb shrb add push mov daa push dec imul das and xchg or mov (bad) lods add sbb cmp pop insb imul insl cwtl adc imul gs sbb data16 jne push cmpsl ficoml sbbl orb pop xchg add add pushf cmp push jge fistpll daa or cmp mov ficomp push inc dec orl add xchg push std or int push jl add jmp cltd and cmp ja pop xchg xor inc push imul (bad) fdiv roll test loopne js (bad) fistpl add addr16 imul adc pop add cmp pop xchg inc rcl push shlb imul int push push ficomp call cltd add inc mov imul movzbl sahf mov sbb xlat add cmp mov movb test cmp das cmpsl sahf cltd mov adc add pop stos roll fwait jg clc add cmp pop dec out in lcall gs cmpl lods pusha int3 in insl jne dec cmp bnd xchg mov sti loop xor pop pop xor xor xchg dec and out add (bad) call mov subl hlt (bad) movsl test mov mov and cmp cmp in roll jnp jl imul jmp in hlt (bad) cld mov bound jecxz mov ja,pn mov add test jno mov add push pop push push stos mov add rcrb push xchg dec aaa mulb jmp js mov sub cmpsb in or cmp movsl add andb pusha leave test pop cmpsl aaa or (bad) push mov add xchg lcall pop cmp stos dec add ss sbb inc int add and xor push test (bad) loope std inc adc push insb cmc jge add nop push adc std add xlat sub fwait out add (bad) jb pop daa addl xor add out mov add adcl add mov into lret (bad) lea pusha cld mov add cmp outsl or sahf cmp xor popf sub jne add xor cmc inc push pop inc add lahf ljmp and repnz in call lds add scas dec rcll sub stos jecxz adc inc popf js les jnp loopne flds sub xchg xchg xchg aaa mov add loope sub into es mov push es mov shlb cld aaa jnp incb jns xchg popf xlat ficompl push enter test add sbb leavew imul (bad) cmpsl xor rcrb (bad) mov fimul insl faddl scas loopne mov add mov mov (bad) faddl add or addb sarb sbb ds or push sti jnp add mov scas dec in xorb mov add or and xor in mov inc test pushf sbb and adc out add xchg shrl hlt cld add aam xchg mov imul sbb sbb or sub jns jne cmc add and sbb jecxz push js push or dec popa adc ja add rcr adc push test fnstcw icebp aaa and popa in mov imul cmpl test inc lahf jg mov xor add or push cmp add idivl jp cmpsl pop ja cld roll adc add in inc sbb lds fsub pop dec jnp insb pop xor inc xor xor jp push out stos xorl insb cmpsb add sub movsb add (bad) fstpt adc inc sub lahf js add imul je add fs (bad) and inc cmpb mov dec adc scas add (bad) icebp insb sub pop outsb inc popa divb fildll scas (bad) lock dec (bad) mov mov jle imul and mov leave fldt (bad) clc mov (bad) add jb jle mov add adc jnp mov jns cltd test (bad) mov addr16 push nop push push or xor inc add aas cmp mov mov adc das dec out cmp and (bad) les push xchg fs add jge mov mov sub dec mov cld pop fisubrl xchg inc xchg sub add or aas add inc insb sbb mov xor xchg mov sbb push sub rorb mov sbb ret xchg pusha fidivrl push jb inc addr16 jae in jno sbb jne jbe add mov in adc daa and xchg dec mov insb and pop loope fldl int push inc insb lahf sbbl movsb daa cmp jmp adc push pop push sub decb lods stos sbb mov out jecxz (bad) repz sbb cmp call adc scas pop dec jp shl mov cwtl dec inc pop push jae pop mov inc cmp arpl lds test in bound shlb mov outsl pusha (bad) pusha stos push xchg jmp je rol cmp add xchg aam sbb testl add add pop mov inc call shld push sarb adc dec std add jne pop frstor movb pop dec cmc out insb inc add xchg rcrb jb add icebp jo add stos out mov ret cs add inc push icebp faddl or iret xorl cmp sbb out dec mov lods flds test push jo lcall in gs add mov and jno rorb cli inc add mov (bad) xlat scas aad add das enter outsl sbb sbb (bad) jb pop clc popf (bad) mov add or add insb inc fxch into mov pop xorl add dec mov ja test stos out sahf add (bad) pop pop and mov adc mov out add sbb push aad testl outsl movb mov addr16 arpl scas jo jae or add insl mov clc test mov lods orl mov adc cmp xchg mov adc popf add fs mov cs and inc shll push add jns imul add inc mov pusha sarb repnz xchg add add out add data16 fldl orl inc cmp pop push mov fldcw add inc repz sbb les xor xchg pop mov adc repz adc xchg add fs mov xor mov or shl adc movl add loopne rcll sbb ja cmp mov out sbb adc mov outsb iret or aad add fildll mov (bad) xlat sbb out imull mov je lret push mov pushf pop mov xor pop xchg sub push jle mov xor mov add lret and push push insb push pop sub setp mov into cmp sub sub push pushf xchg inc add loop push add dec jne add push or mov hlt ret cmp pusha inc loope add xchg (bad) jp add pop insl xor add pop arpl xchg cli mov mov add sbb add pop xlat mov imul rcr push xor add cwtl jb add fiaddl pop popf movsb dec jns pop add iret push loop sysret ss xor rcrb add rclb cmc or and or inc add lcall xor (bad) repnz call arpl (bad) xor test ss mov fisubl out adc jl and es or push lds dec add jmp xchg add xchg sbb adc stos inc rolb and inc pop add (bad) decl add dec inc sarl ds push clc idiv inc into sahf lods add xor and sub stos xchg test enter inc pop cli sbb push fisubl mov test popf into incb pop sahf jge enter lahf inc movsb xor xchg loop dec inc and add cmp sbb les cmp outsb sbb mov pop inc adc lds cmc add stc test add xor ljmp call lea add outsb sbbl into add xchg pop popf xor add xor push orl js test fidivrl cltd orl ret or (bad) jle xchg dec lcall adc sbb in add in or and jp push inc cmpsl lods sub cmp out xor dec fcomp jae cld lahf add sti adc comiss jg int3 cmp push test mov jae gs mov clc jecxz iret add movsb push sar pop int lock sub push mov adc xchg mov inc call add out push fisubrl mov jnp lret add xor movb icebp out or add or jb lret sub fsts or mov add out (bad) orl sbb add or cmc adcl lret fucom int3 push xchg pusha add cmp mov bound push loopne mov push stc add sub push xchg mov lea push adc mov or negl add (bad) xlat jp mov lea aas jbe mov push orl xor push int call cmpb sti or clc xchg imul (bad) repz cld add call nop add rcll out and xchg push or ret fistl fs aas pop add push cmp cmpsl fstpl fiadd mov pop cld aas or mov mov xchg fcomps (bad) push add fwait rorl test adc icebp add pop push movb fwait (bad) or clc or shrl jae cmp mov inc xchg dec add mov lret loop mov cmp cmp in or addl lods pusha add or mov or jnp add xchg jmp movsl stos (bad) int sub and sub cmp stc cmc leave xchg aad mov fxch das lahf pop mov ret int jecxz insb inc mov seto xlat insl arpl test fnsave adc add scas sub lahf out add pop and adc (bad) sub push xor adc (bad) xor mov loope std outsb mov test stos add pop jbe push cltd or mov cld xchg adc sub (bad) outsb js inc add push fildll add idivb and cmpsb adc sbb add (bad) aas arpl jo mov repz adc in out mov add cmp xor addb push push jmp and into add scas test jo add (bad) sbb inc sbb push mov je pusha pop push int3 (bad) in jbe add pushf nop jmp sub add mov add shr mov jge adc loope jo fadds inc addl clc push add insl add bnd sub (bad) dec je add push mov enter mov ficom jns xor push js lahf ret imul mov add nop inc inc add jne mov push dec mov fwait jno jae inc sub es push sbbl notb std add xor push bound lods lea subl hlt in or fwait (bad) xchg mov or jg jp pop test mov mov mov dec mov add jp (bad) jo inc pop sahf les xchg aad sbb mov xchg out imul cld mov cwtl (bad) push fld1 add cmp adc int3 mov mov sub inc sub push mov add aad sbb arpl add push ds xchg es aam (bad) pop xor add imul pop xchg pusha outsl or faddl icebp sub sbb movsl mov sbb orl dec cmp add pop aaa (bad) ja cmp jge mov (bad) iret adc pop lret imul leave push pusha sub js dec das add push pop xchg pushf push fwait add inc aad hlt pop pop add pushl jmp loopne daa mov xcrypt-cfb cmpsl pusha ljmp cmc sub sub loopne cmpsb push outsl add (bad) dec insb or sub push sub jae add jnp sbb push adc aam fs add ret orl inc aaa mov jle int3 inc or add ja push loope adc inc aaa xor jbe add push cli dec jp pusha stc xor lods loope call cmpb mov je add pop fisub mov int (bad) xchg adc pop popa movsb out inc add out pop sbb mov daa xchg jb pop xchg (bad) fiaddl stos pop (bad) mov inc add add movsl in in inc imul add inc adc dec or fimull out add xchg movsl or mov sub orb push daa lret out cmp sahf mov xor push sbbl clc add adc rorl adc inc add in out addl mov or jmp mov movl pop ret add fwait daa jb or loopne movsb sbb dec add mov insl add dec sbb outsl iret xor pusha inc cwtl cmp (bad) mov pusha in mov sbb jecxz (bad) repz and pop cmp fldt jg out mov push dec fwait and (bad) inc dec add jge rclb adc mov add imul popf rcrb aad inc mov sbb add push nop add xchg sub mov xor add cmpb mov (bad) xor push je push mov pop sub cmp ss cli xchg into movl orl and mov add fs in add (bad) pusha pop dec xchg ret movsb or inc add test pop adcb test out mov inc out xlat movsb push add insb cltd clc lret cmp cmpb cmp sbb sbb add dec test jmp int xchg imul add or mov mov pop inc cmp fdivrp pop std pop sbb add jae cmpsl out add mov cmp xchg mov jge add (bad) jb add add arpl push movsl dec data16 xchg fiadd roll (bad) pushf dec add enter sbb add push inc push sbb cmp mov inc sub fdivs mov ds mov jo testb (bad) xchg xor dec inc inc iret hlt fnstcw jae test ss data16 mov das cld sahf nop addl pop daa adc jl repz xchg mov add adc in or mov mov rolb xchg popa sar and in stc ljmp adcl push fistpl (bad) rolb (bad) xchg add bound dec add mov fs add imul add clc rcl popa (bad) leave addb inc push cltd aad add xor movsb insl stos xor scas xchg sahf mov inc mov ret flds and mov sub mov cmpsb notb add fsts sub push nop add repz sarl loope imul jg pushf ret ret lea data16 jnp add xchg push orl inc jne pushl cmc pusha loopne and sbb movsb loop add add pop (bad) dec out push testl stos lahf in inc add out fildl cli pop push sub or bound cmc push int3 loopne mov dec jns xchg js cmp dec jno bswap xor outsb incb dec xor sahf pop and stos and ds inc inc outsl nop xor mov sub jle outsb pop add xor int3 push in jp add arpl loopne leave or clc add adc dec sub mov xchg sbb repz (bad) ret addl inc xor fldcw add lock roll (bad) in add jo outsb (bad) mov or ret inc sub add lds in fldl add pop (bad) cmp sbb div shrb dec pusha sbb xchg in int adc (bad) popf push pop cmp lret outsl mov mov lods add cmp jge scas rolb hlt or out insb add pop pop dec dec roll jae roll aaa pop fnsave or push adc inc or test pop cltd stos and dec dec dec clc xor add add pop dec fidivl jge add dec mov negl add mov and jle (bad) enter inc pop mov push cmp fdivs dec jo into mov xor cmp test sbb incl iret mov pop popf push mov pop out xchg outsl pop pop pushf sub icebp lea inc (bad) inc ud2 add sub aas cs push ds add (bad) mov (bad) repz xor stc xor add sti insb fcomip pusha add push pop inc out mov outsb rolb std mov mov lds les (bad) add inc stos js inc mov add lret bound mov xor cmpsb pusha cmp retw sbb loope and add xor add push xor aas dec add inc xorb leave mov jo xor dec fsubrl mov xor mov fst test and popf push mov in cmp ljmp push xor (bad) out xchg mov sbb stos fsubp popl inc jae pusha push test sbbl pushf in push xchg ret faddl push jg int3 add cmpsl inc movsl bound mov shr scas adc cmp cmp add xchg jnp xor ds popf rcll pop add adc loope sbb test icebp push jno push xlat mov push adc xor add das or add mov jnp xlat ja movsl mov sarb mov push mov call push inc mov mov jo adc add popf cmp xchg sbbb pop js xchg xorb jp push mov cmp xor in je mov add fs sbb sub dec xchg aaa push add test add push out add adc mov add lods sbb (bad) add bound add lods pop add imul nop bound into popf dec xchg testl push adc das loop inc mov and pop pop sti mov (bad) sbb jbe jge mov sub in (bad) je inc stos sub arpl (bad) repz addl fcompl jp mov test or aas add ds gs sbb mov pusha stos xor test bound xor rorl aas cmp stc into dec add xchg mov fiadd or jle push mov xor lea sub leave adc push cmp mov movl aam jg push sub inc or cltd add daa mov jmp adc mov add xchg fistpl shlb (bad) insb ss push and sbb pop in aaa mov sub cmp xchg mov xor fsts jae mov mov andb mov outsb lahf and iret push push stc push xlat scas test mov cmp sti mov mov lahf pop pop fwait mov inc ja dec cmc pop sbb pop das cmpl xor xor add mov arpl add orl add jl jnp inc add sbb add orl add lret test test mov adc mov add mov clc fstl add inc out add pop mov out jp fsts sub mov push add je xor mov mov mov lods jmp inc jae loope inc or incl (bad) mov mov outsl add add fild cmpsb mov popf lret sarb mov adc jbe je mov push in dec push fwait mov mov push repnz je sbb cmc imul and dec (bad) pop jge add sub gs mov in lcall fadd mov add inc push jo addl xchg test jmp adcl sub sti add cli push mov add lcall cmp fsubs adcb mov cmp mov iret and and or outsl xchg mov lods mov add mov pop push and iret addl mov (bad) and into imul sbb out add add add arpl lahf xor mov inc bound mov cmp (bad) rorl xchg aad mov mov add movsl sub sub sarb in imul fs push push add add lds sbb sahf push imul hlt int3 clc test dec dec (bad) pop dec sbb movsl popa lea inc xchg and mov xor or inc mov mov lret fcmovne add shrb add dec rolb enter add mov and or dec or sbbl add fidivrl or andb test or inc add add cld jnp scas pusha dec jne xor flds adc in out mov inc push or add shr cli ss pop bound add andb out pop pusha adc (bad) xor clc jae add xchg lea js popf add jnp pushf add xor add sub push es test inc popa lods cltd repz sarl jecxz xlat (bad) ja sahf aad inc (bad) int rcrl jg pop (bad) mov leave add mov in cs xor lods nop push xor or (bad) iret and outsl pop roll ja leave sbb jp,pn add test bound add fwait stc mov jno int roll out movsl mov loopne mov ret xchg call into add ds sbb xchg inc or xchg xor out push cmpsb stos je mov cmpsl pop or sarb jae add movsl jmp dec (bad) pusha sar inc or adc hlt add add jp mov jnp stos add adc cmp fcoms add repz imul jae mov int3 subl push jo aam add subl xchg loop mov mov addb add cmp sbbl add popa add test pop add or nop inc es mov aad xchg xchg enter jbe stc add and lcall movsb xchg inc cmp pop andb (bad) jbe pop mov dec jns ret mov call loopne (bad) mov pop (bad) add adc mov pop sbb push jbe jl fsubrl lret pop sbb add ret into xor pop addr16 add and and sub repnz insl int (bad) sub notl test (bad) lahf sbb add subl cmp and inc mov push loope xchg pop jmp add into cmpsb negl push aad imul xchg (bad) jp jb add cmpsb lret popf mov sarl cmp jo jge adc add push (bad) mov add xor add xorl xchg or cmp repz sbb jp andb xchg push jg push fcomip pop dec dec scas sarb add adc cmp or add xchg cwtl mov xorl sub loopne add xchg jb add imul mov inc loop addr16 add inc fstpl mov lahf lea inc mov pop push pop mov adc mov jno inc jae add or add push out nop dec (bad) mov add adc or inc jo xlat mov bound mov cli xchg stos sub fdivs adc (bad) fnstenv sbb pop pop pop push dec addr16 cmpsl stos pusha (bad) in pop lods mov call mov (bad) mov mov andw ja push addr16 push adc xor xchg (bad) mov insb sbb lret adc push cli xchg add popa sahf inc add bound mov ds in pop scas dec lods push incb xchg rcrb fistpl sbb lret xor movsb js dec jne dec xchg pop inc mov test push mov xor outsb lea push jge cmp add js jp dec fwait (bad) cmpb xor stc pop mov in pusha arpl call inc cmpsl addr16 xchg cmp jecxz sub dec ds add jo adc dec lds (bad) xor test mov dec mov (bad) and orb sti inc outsb jbe mov mov add clc jl lahf jo js pop pop xchg add adc (bad) in hlt pop pop mov nop (bad) or inc cmp add jmp test dec rolb mov imul and push sub cmpsb xchg test push sub or dec repz jae mov cmpl lret jb jbe jne pusha mov cmp imull ljmp xchg mov adc cmpsb push (bad) xchg and jb cmpl mov pop (bad) sahf xchg rorl jg jl pop and jae pop inc push loopne pop sub sub pop push lcall test jl ficomp mov add flds movsl jno add push ljmp xor fmul mov ret inc movsb cmpsl in jns cmp aam dec fdivl mov cld jbe add cmpsb fwait inc xchg jns mov add push ja inc sbb adc jo repz xor lret repnz cmp or push jnp (bad) push sbb lods pop cmp lcall cmp loopne xor xchg (bad) mov xor xchg push inc jno fs xlat adc lds pop je fild xchg lods mov jmp test cmpsb xorl in rolb loop das scas sbb out jge int3 pushf mov xlat les movsb mov cltd pop add xchg dec push adc add or sti add lock push push rcll (bad) pop ret ja test adc mov sub fldenv adc fs xchg sbb pusha rorb sub mov xchg push add push mov cmp xchg pop outsb add lods aas scas pop and lahf aaa leave lds addl fiadd popa mov pop aam (bad) cmc and ret ret mov pusha cwtl lcall sub mov arpl loopne mov dec dec addb decl mov (bad) add or xchg ss xchg xchg add in jle jb sti icebp jg and (bad) fcom and cmc add outsl ficom fwait pavgb in add nop sbb cli mov (bad) loop aad jl pusha ds add pop jmp adc and cld add jl dec add cmc jb add and psubw imul pushf rorl dec inc fwait and std clc cmpl jae scas loopne cltd daa js addl fild into xchg decl movl jns add je jg (bad) jo es leave popf lock and dec push add movl add imul dec xorb fwait lds es negl adc mov scas (bad) jb mov adc (bad) out rcrl or cld pusha icebp push add jb add fs push mov add xchg ds sbb call bound xchg rcll or dec js sbb std mov outsl cmpsl add scas inc and and pop dec add pop mov ja mov sbb sub lret mov inc hlt or pop adc sbb inc js adc pop fidivrl jo mov mov jecxz std mov add clts out jge push jae inc icebp inc xor add repz or xor mov nop (bad) xchg mov (bad) xor loope aad pop sub or mov cmc imul in add xor subl stos aam add adc add rclb pop xchg rorl (bad) fisttpll addr16 (bad) jmp outsl add mov mov (bad) xor outsl add sub insb adc jl add mov or jg pop jbe loopne cmp sbb mov in (bad) aam roll daa sub sub mov pop lock adc mov hlt mov add adc aam inc jl sbb es data16 push pop push dec dec add icebp mov cmpb sub cwtl add cld call xchg sbbl out add cli jbe out xor cmpsl icebp add fsubrs mov sbb pop addb pop xor leave int pop push mov or orl sub pop cmc mov dec jbe (bad) jne pop shufps and imul iret cmp (bad) inc mov add into or inc and cmc mov xor mov (bad) add sub or jne rcl out add push add pop mov je add add add adc sahf add and adc fisubl mov jl add sahf push jl lods mov and add sbb lods and add pop daa sub add movb adcl adcl out pushf pop fcompl xchg icebp aam add fnstenv mov mov cmpsb jno in in sbb inc testb add pushf add adc mov outsl iret mov inc or insb pop xchg lret add jecxz mov daa jge add xchg imul inc (bad) add mov outsl xorb seto mov and fmull dec scas xor cltd stc add outsb icebp jg cwtl mov add cmp popa inc test jl mov dec mov out addl pushf cmpb mov dec mov inc xchg lret inc add xchg cmp (bad) sub fist nop out bound (bad) pop fadds push adc sbb repnz pop add outsb pop mov (bad) fbstp shrb dec dec leave cmp mov rclb push add test or xchg aas mov add mov fidivl add (bad) sub rcrl xor pop test adc rcrb stc pushf add (bad) jmp inc test pusha jecxz aaa and add jno push divl jns fstl rol cmp je test mov dec add xchg daa ss mov dec pushw adc cmp (bad) push and fcomi loope and push mov pop dec mov scas pop iret pop cmc scas test psubw fstpt repz and fistp xchg mov inc sub insl (bad) add push popf sbb shr add cmp outsb clc (bad) push add lods mov add push and dec jb cmp dec insb xchg sbb add icebp push pop mov sar dec inc inc imul sbb fincstp roll inc loopne dec xor adc pop adc inc pusha sub jle push sahf add add xlat addl sub dec pusha sbb out jnp insl fs stos xchg int jno add stc push adc fwait jge add insl pop cli jno incl test inc dec xchg cmp add push jo mov jg dec jle (bad) das cmpsb roll inc jmp cmp fsubs add js hlt cwtl xchg xchg jecxz mov cmp add clc inc mov mov push add sbb daa leave adc je jo add ret lret add enter stos mov in iret (bad) loop (bad) clc add es (bad) jecxz mov (bad) popa pushf or mov cmpsb xlat mov add dec sub ficom mov add mov and and vaddpd xlat sub xrelease jns (bad) call shrb int dec pop bound add add aad ljmp push addl rcr ja add icebp gs push jb add sahf ret jge add mov (bad) mov pop cld mov (bad) dec jnp dec pop lret (bad) jle sbb adc repz jnp xchg mov loopne mov rolb aaa jo jo push and (bad) sbb push adc popa data16 sbb cs loopne inc add dec xchg movsb jge (bad) xor xchg xchg pop clc xchg inc loopne aam aad inc add mov jmp xchg aaa std (bad) je pop sub add adc jg add fnstcw pop and inc or and cmpb scas push dec mov test push imull out arpl iret add enter and push add jae mov pop mov cmc lret inc dec sbb popa dec lret pop cmp xchg add cmp fdivl fwait hlt sti (bad) jae add out movsb jne add xchg leave in and jb sbb repnz and (bad) inc mul inc pusha dec rorl cmp and ss pop rcr mov pop cs lret sub inc jb ja adcl inc std movsb cmp insl push pop sbb aam push jae sbb and cltd aas imul push data16 popa ljmp dec daa addb jo jle mov cli add clc lahf inc adc lret pop sub dec push aas jge add call mov shlb imul cmc outsb jbe adc add in mov mov sbb xor in loop icebp mov lret sbb lods and ss adc cmc mov or push arpl xchg aas jmp push adc sbb adc sahf mov xor pushf bound sub push jg xor sbb dec pusha dec add sub adc fadd lea (bad) nop jns jo add (bad) mov add std out mov jbe or rcl jno ret xor cmpsl add push lea mov addl test imul jecxz jbe loopne jns (bad) fcompl jnp mov rorb inc jp mov (bad) cmc pop cld jp add test pusha movntps psubsb daa mov (bad) lock (bad) rolb js dec aam xor in xchg (bad) into jnp pusha out or add repz out je rolb adc fsubrs ficompl incl and dec clc std pop scas jb inc add scas loopne addb mov or call aam and imul fsubs (bad) aas mov lret (bad) xlat (bad) aad orl or out push inc add push jns pushf push sarl aad push into fstpl out dec sub iret jo add sahf fdivl dec push (bad) and inc mov or (bad) add xchg pop cmp iret xchg cmpl dec in sub cmp xor pusha mov push add sti sbb sahf pop mov cwtl addr16 jmp sbb add cmpl pop test lret bound add xor insl xor jns pop inc aad fistl loope push in into and cmc ret add dec inc sbb neg in ret lods sub add das inc xchg add cmpsb add in add jo jecxz inc xor sbb and or mov ret jb xor jmp mov mov xchg sbb pcmpgtw jnp sub xchg addl push rol mov add imul sbb adc xor bound ret stos (bad) inc or rolb fist jge jle jg add mov popa arpl out xchg icebp movsb add int into jo mov sbb call cmp jle pop add ffree pop adc out ja jecxz or lock inc add mov sbb xor adc cmp add andl xchg lret add pop loope sbb add dec dec push push lret out pushf jmp add mov ret pop cmp push les fisubrl ds pusha jmp rcrb cs cli sbb add test (bad) xor mov ret and sbb sub sub lods xchg mov dec out adc movsb and inc mov int push addl (bad) xor cmp pop mov fild cmpsl imul in roll and daa push cs add test pushf imul adc xchg (bad) add xlat and scas jmp popa sbb or mov lret and es xchg add push (bad) mov enter cmc pop push dec xor add fmull add out sahf mov xchg mov add js subl loop dec cmpsl jg sub dec pusha jno add jno (bad) mov int test sub add fidiv stos xor sub xor sbb cltd push fwait into pop movb adc mov push add add add addl xor pop lret lahf stos leave inc inc pop cwtl rorl add xor adc cli and popa mov adc and add lea cli jge push push pop leave or lods cld mov inc stc mov in cwtl add xor and cmp inc mov lds mov (bad) add jbe sbb in or cmc cli jne push adc sub in fidivr mov mov dec in pop xchg mov test dec cld insb inc push jnp cmpsb add fcomps mov es xlat jg movsl ljmp xchg mov into mov sub movzwl pop push cmp jg jo test sub mov push push popf in stos fs add sar sub xchg and jmp add xchg jo push mov int3 pusha icebp daa or push mov sbb cli xchg outsl (bad) (bad) aam sarl cmp inc add scas jno xchg xchg or sbb push out mov das mov add xor pop lock cmpb loop popf mov pusha insb jle std push repz mov jnp jge rcrl aas test add mov add insl stc fsubr jge add in (bad) sub imul idivl outsl insb ss pusha pusha mov mov lds call lcall jo jmp or adc hlt dec enter cmpsb add jbe mov out and je add cmpsl cmp enter add jg dec adc mov ret cltd sub rcrl rcrl add xor imul xchg xchg cli aam sti pop inc mov adc pop out stos adc nop or inc jo fiadd mov add mov leave and inc mov or test arpl add std (bad) adc inc dec adc test sbbl and cwtl inc in xchg cmc fisubl add jne in mov jg push cmp lret inc pop scas fadd inc subb pop add aad push xchg add (bad) mov inc iret insl popa mov sahf and scas test push cmp push lea mov in add push loopne (bad) xchg cmpsb xchg push mov sbb inc mov or jl add ficomp push je sbb sub mov push push or pop mov call gs lods sub and dec push (bad) jbe test rol add leave dec stos cmp mov xchg pusha or jl mov adc add mov and ffreep mov leave pop jge add jle (bad) incb sub sbb add sahf add cmp mov fmull movsb sub pop xor sub js xchg subl pusha cld and xchg pop and inc gs cmp rorl lea sub divl add in dec add xchg addl dec mov jmp cmp sub adc icebp repnz mov mov sub cmp inc orl sub lahf dec add mov pop or cltd push jl dec addb cwtl adc rcll imul lods nopl (bad) flds cmp add bound or fs mov mov push out out outsl and add mov pushf add adc fisttpl rcl cld ds sub (bad) sbb rorl or cmp popa dec inc hlt fbld daa push loop les mov xchg inc cld sbbl add pcmpgtb add ljmp jmp pop and pop jbe push add movsb (bad) lea shl push lods dec sbb add push sbb jae jl add (bad) mov xchg inc arpl add hlt inc sbb cmpl pop mov les jo cmpsb cmp pop popa clc (bad) pop insl or add sub outsb cmp add sbb add outsb out cs cmp movsl (bad) push xchg loope add sahf iret adc mov jbe add cmp cli push add (bad) adc dec add fmull inc add cmc mov add subl call mov add dec dec nop add loop push lcall sub iret daa adcb xchg clc cmp push mov js lahf cmp dec dec inc je pop add adcl adc arpl jecxz push and add inc mov push (bad) inc out pop xchg lock mov or add cld add add cli sbb push cmp sbbl jg add fimul sbb iret add jl mov and dec js orl xchg inc sbb pop orl addb xchg cmp push je adcl dec or dec lods sub and pop dec xlat add cmp add sub stos testb mov jno repnz fidivrl movsl jle add dec pop enter mov dec jns mov fsubrs or inc orl mov data16 or xchg xchg pop and (bad) (bad) jmp ja push add xchg cmp stos daa lods (bad) pusha aas outsb pop sbb mov jge add mov sbb pushf sar mov sub sub pop jbe js jnp insl ja std in (bad) fwait mov pushf dec ret add jg sbb mov imul lods mov or mov pop test inc rcll and sub std cmp (bad) je leave out test ret mov mov push lret into inc add rorl les andb push sbb push shr mov lea jbe ja (bad) div dec add inc pop repz jge lods mov stc add pop jecxz pusha push ret popa jo loopne jb cmp sbb add (bad) push test icebp incb xchg stos dec jg mov adc hlt jg add push jl jno add mov add sbb mov sub roll sarb xchg xor push push inc add add pop mov add cmp ja lret xorb stos loop sti loopne fs ret add dec jo mov dec loop xchg test push iret xchg xor jle pop or sub loopne sbb rorb inc xchg jb insb sub cmp dec mov cld loope iret lods cmp cs mov push ja pop lret jo cmp jne incl xchg dec add inc scas ljmp jbe mov cltd mov sbb out cmpl (bad) loop stos inc push lods jg je mov fistp movsl xor add ret test ja mov or nop mov mov xchg cmpb enter pop push push int3 add mov xchg ret scas rol orl es ds push mov jge add push jl sbbl js cmpsb sti add std dec insl es lds push pop xchg lret call push ficomp popf inc add xor arpl add sbb add mov test sahf dec add mov push dec push xor mov mov dec and or push sbb int3 incb mov repz or shr xor insb and xor cmp (bad) pusha fnstcw and add adc inc add xchg push ret icebp test das inc scas mov mov xor cmp mov int3 loope jg insb jns mov orb popf ss ret jp inc add xchg lahf (bad) int3 mov das xor push push aad add movsb lock jg xchg lahf or (bad) test mov ret add out cmpsl out stos add (bad) inc int3 sbb lahf arpl std imul scas pop jp sti pop (bad) add xchg imul (bad) rolb jno push (bad) xor mov dec test stc xor or cs sbb adc xchg aaa xchg add cli jg add xchg loop add mov inc fildl jno mov loope ljmp shrl add fisttpll mov nop xchg jo push sbb inc das (bad) jns pop int3 xor sti es fwait sub add movsb add mov fidivl dec repz loope cmp add fisub push add bswap loope aas mov mov jle inc (bad) lahf sbb pop xor adc jp aad rcrl jp fcoml loop pop xchg add mov shr jg arpl inc add mov xchg push sbb pop fildl ret les pushf cmpsl xchg add dec stos aaa mov (bad) or (bad) cmp push pushf loope add pop push stos es jbe cmp sbb fcoms mov (bad) frstor gs adcl xor or add fst or inc add flds xorb je inc hlt ljmp dec push lahf add pop scas jo xor lcall mov cmp pop imul fwait jnp mov lods jl inc loop out inc inc add ss andb mov push int3 add sbb in shr stos out inc add pop jp orb dec mov jmp faddl mov mov ss int popa cwtl std imul push pushf fwait cmp mov and ret xor adc push movsl (bad) lods inc jmp jo mov aam push xchg rcrl mov add add in jbe cs add and pop adcl insb sbb push sub xor scas push mov (bad) out mov add mov or jmp xor incb (bad) hlt mov lcall fild or std rclb mov adc jns sarl enter jge add sbb test pop or xor lcall push fildll cltd and sub ds idivl fstpl addr16 jne fs cmpsl lods cmp ja into cmp pop xchg das in jle sub push xchg xorl cmp add fwait jae add in and dec movsl add stos nop dec pop cmp mov xor add pop mov push andl xlat enter aad jb jle add mov add into lahf outsb ljmp push push iret and subl add dec sub sbbl (bad) push mov xchg cwtl mov pop inc je cmp mull fadd mov jge cmp andb jne mov inc push push jbe ret (bad) lcall imul add ss adc sbb jge mov xchg (bad) xor (bad) jbe mov andl dec jp testb push pop push mov xor xchg dec sar push dec push and aad push or hlt push mov dec in pop aas push adc roll test cmpsb lret pop sub mov or testb in xor and in jb or push xor mov add addr16 add sub mov xor push adc add (bad) or jp or mov inc add sbb add inc or add sahf cmp add push mov clc mov outsl (bad) in lock push xchg add or inc pop add lret mov ret movl mov mov or or sahf (bad) cmp and adc (bad) fidivr jle repz adc cmpsb jns jo ljmp enter xor sahf add jbe xchg add and sbb xlat jmp pop xor jp jle addl pusha mov xor pop sbb inc pop cwtl lods xchg mov add xchg (bad) jo (bad) pop sub pop cmpsl jmp arpl cli add ret mov ja mov add cmp add xchg jno and movsb add in mov adc mov inc subl dec lods in lea add arpl lock es add inc lea push lods repnz sbbl popa push dec inc dec call push test mov push mov inc dec cltd jp dec pop jb add push test add pushf push add jp inc pop (bad) jmp xchg push adc int or (bad) or nop (bad) jb push add xchg aam jns (bad) test incb cmpsb inc in nop fdivs mov add jne inc subl ja loopne addl mov jle jnp add xchg iret ja mov xlat inc inc push mov cmp xor mov sub rclb mov mov inc pushf movsl aam add pop jb add insb fldcw std jo xor ret mov and popf jge bnd mov sbb sub imul mov pop and xchg push lret add divb mov add (bad) lods mov out loop and jmp cmp je jo addb (bad) out pop inc xchg aam xor mov (bad) push movsb and add mov mov loope mov cld (bad) pop nop fdivrl or xchg popf mov sub xor adc dec and sub mov mov mov cmp pop xor mov or pop mov add mov jns lret sub cld dec fs add decb mov jne mov add je outsl inc xlat sub out cmp jge in dec mov or mov sarl and add lods test add mov sbb xchg add adcl sub subl je xchg inc xchg pop add dec imul orl pop mov cmpsl jae mov pop mov lcall jae add adcl rcrb in popf repz jg sahf insb mov jle aad add lods add inc lock mov jne add popa lret lods dec push add clc adc push xchg int3 scas into jbe and pop roll js lea test ss or test cvtps2pd xchg xor (bad) inc pop add bound xor insl dec xchg jp leave sbb sbb adc (bad) rolb push popa cmpl ds add push xor push xchg lock pop rcr and xor fs lret rcrl fildll bound xor lahf adc sbb xchg xor jl lods add (bad) dec cmp xchg push add jge add jg adc adc mov setl dec jbe,pn sbb je test out loop inc out add sub xor cmovbe insb pop push jp push dec push push add fldcw add mov shll adc inc inc lret ljmp add lods jecxz xorl daa jg das add push mov stc (bad) adc adc pop aaa and dec sbb lock nop pop gs out dec in mov push inc add adc out cwtl ljmp xchg aas rcrb xor sbb ret mov (bad) mov jge nop push shl pop (bad) mov das xorl adc ljmp xor icebp orb out sub jno add xchg enter inc add (bad) (bad) pop push sub jmp ss enter xor lea fisttpll jo scas mov out push pop cmpl sub mov cmp jnp add mov loope mov stos sub dec cwtl mov add push or push in pop mov icebp push (bad) sub mov les (bad) loopne mov pop call mov jl loop jb cltd jmp inc pop add mov mov add jb and pop sbb lcall xlat add adc mov mov repnz lea roll adc sahf aaa ds or push rcrb movsl jbe jno les movsb pop add jnp adc test daa push dec dec inc pop shl add or (bad) add xor sbb sub out pop stc pop add jmp mov xchg out push cli add mov lret outsb dec sahf ret sub stc inc inc push xchg xor mov sti fidivrl mov sbb sbb pop (bad) (bad) mov cmp popw add ljmp aam pop jg mov add iret or nop mov cmp aas dec (bad) lret jnp jge xchg call js add xchg mov (bad) xchg pop scas fbld xchg ljmpw pusha cmp mov popa incl fidivr lret mov enter add mov jle sub dec js sub jnp add out push add fcmovb pop addr16 cmpsl sbbl inc xor inc cld or mov adc jnp xor loopne gs insl enter nop add test push xor (bad) jge fisttpl dec mov lcall jb stc add daa fcmove mov sub sbb xorl sbb xchg test rorb jmp inc jecxz adc test loope ret js stos add adc add xor fucompp xor mov pop jns add push lea mov sbb int outsb out sbbb sub dec imulb add scas xor enter icebp pop mov jp pushf (bad) addb movsl testl out vpunpckhbw arpl dec cltd dec jb and xchg push out lcall in push stc add add jbe add sub jp jecxz jle push mov in push incl jo pop mov sahf shrl inc in and fs daa dec mov lds fwait dec jb jno add inc pop mov jmp aam imul lds fdivl nop shr push inc stos loopne xor add pusha outsb jns std ret mov pop push rorb add push jle (bad) fistl sbb fbstp mov fild imul mov jg sti or mov add pop (bad) stos incb pop pop (bad) int in test dec inc xchg movsl lds lock pop adc pop aas jp in jae cmpl std cs addr16 subl js add add movq add sbb shrb and sub cmp mov add daa rclb jbe andl cmp jo loopne add std fs pop xchg cltd add les add add pusha (bad) add in adcb xor and cltd inc cmpsl inc imul testb jmp push test cs addb dec add sbb jns sub push jbe cmpl in nop cmp jbe push dec push push mov movsb inc out xchg ljmp add sbb std xlat add rcll jmp mov jmp and add and lds sahf in test leave xchg imul cwtl xchg into cmp fstpl sbb sbbb lods aad bsr jge movsl jno into (bad) int aam jle movsb add (bad) lret bound mov cmp add lock cmpsl lret mov clc dec scas add xchg leavew es add repnz hlt incb add outsl push cmp popl in test lret xchg std mul and je iret out add rcr sub mov jne arpl push cld xlat add dec lahf add stos or aaa cvtps2pi cmp inc xor aas sbb cld pop add cmp dec pop jae es add inc fidiv aam xchg int3 and add or stc pop fdivrl lds mov jnp push sub cmp sbb (bad) aad adc mov in std pop mov call lret icebp cwtl cmp inc mov subl push imul cmc adc add cmp jne mov sub xorl and jo jg cmp (bad) lds pop aam push jg icebp mov mov pusha cmpsb fistpll add push mov insb add ret outsl push add idivb jge jae push xchg inc xor pop dec add aaa mov mov inc mov push pop add stos jne add mov jg jnp ljmp mov pop pop add cmp nop das ja sahf (bad) popl xchg add and insl mov sbb add cmp sub jle jo jmp fwait daa add push jg ds mov jns mov hlt sub mov aas xor das lcall xorl (bad) out push xor xchg mov pop cmp push xchg jmp imul mov cmp add gs jle leave ja popa sub xor push add roll push lods sbb mov dec cwtl sbb pop xchg pop pop inc add cmpsl int3 jl cmp sub dec test pop cld pop add test cmp or pop loop loopne cld add cmp loope,pt jns xchg outsb push (bad) jecxz dec mov dec in add hlt imul scas and outsb mov (bad) mov (bad) popa cmp daa popf aad add xor mov pop and adcl jle jge mov mov andl sub pushf or add mov (bad) or insb rclb lahf pop jae push adc popf dec xchg add xor push pop loopne test adc je push cmpl icebp cmc pusha leave and add inc sbb test addl inc stc inc jl pop rolb bound cs out mov adc xchg imul cs add sub arpl xchg dec int3 xchg test cwtl add in pop pop lods les push ret xor mov mov nop leave loopne jo stos mov jb add jmp add cltd (bad) fnstcw cmp fistpl mov push adc clc and sbb mov push or pop popa xchg sarb mov cmp (bad) jae fs dec je mov sbbl push or loop push popf sub xlat ret and mov dec mov push in mov cmp rcrl cmp inc xchg iret add (bad) fisubrl pop roll cmp repz repz or push mov adc stos or push addr16 push gs and lret push lahf test add xchg adc mov inc sub pop jnp (bad) ja pushf pop lock es add sbb adcb push xorl xchg jno or (bad) mov fs inc out cmp or add stos mov add add popf sbbb dec pop mov cmp xor in int3 fisubrl mov sbb fwait (bad) pop loopnew push lret jns add mov ja mov sti cwtl fnsave lods inc mov jo je lret or mov ljmp ds add (bad) adc inc inc add fildll dec loop lret mov (bad) icebp das hlt or arpl negb push pusha pop insb andl sbb add hlt pop ja dec in out add xchg inc inc es test add loop mov sbb notl or fbld jno add adc or fmuls mov xchg sbb outsl stos dec dec test mov mov mov in push add add pop icebp insb lahf inc jl xchg mov mov cmp jns mov roll xchg pop xor addl sarl ja add sub xor leave jmp add out dec pop fwait sub push and and lds outsl jns icebp mov add stos fadd ret add or loopne pop std pop add cmp sahf (bad) shll sub add icebp js mov pop jge mov jbe inc add or sub sub or test (bad) (bad) insl mov jb add xor and adc pop inc or add cmc call pop and cmc add push jge mov xchg test pop sbb daa cmp fcmovbe je jbe add mov push add pop (bad) add mov inc add out cmpsb data16 incl or das aad pushf jns add dec cwtl fidivl inc add lahf hlt pop popf insb nop loopne xchg roll add adc mov add xor sub xor push shlb jne fmull mov mov add cmpsb or push lahf std and fmuls lods pop add cli push hlt pop add sub (bad) jnp cmpsb je mov (bad) xorb cmp jl imul or xchg test mov andb adc in add sarb ss pop add test add adc cmp iret fxtract popa add add int xchg lcall test mov jae xorb shlb les pop cmp rcrl and mov fdivl sbbl jne pushf sub xchg and add out aaa push dec fsts jl push or outsl cmp sbb enter mov add sbb es xorb in call pop shll xchg jo jmp add sub enter mov mov mov pushf dec mov push inc jb pusha or add popl push sbb mov sbbl sahf add sar call ja inc sub int ret add xchg mov (bad) push fisubr in dec and xorl adc xlat aas nop sub popl sub in orl (bad) push clc (bad) repz aaa xchg inc pusha jmp stos outsb add add pop and mov nop push lahf cmpsl aas jbe mov pop add std in gs movb sbb cmpsl xchg ljmp jae ds inc add xchg popa adc jmp mov jno fnstcw pop sub cmp cmp das jne jmp out inc movb xor jnp add ds push push lock pop aam add imul cld fidiv je orl lret cwtl mov dec dec mov repz in ss pop xchg loopne inc mov insb icebp xor stos or add bound adc or jae call add mov jp cmp cmp sub aam addr16 shrl lahf push mov insl cmpl lods int3 xchg xor jl mov add stos xor lret pop push add push pushl hlt int3 add dec adc inc iret mov mov js loope xor add repnz add cli dec jmp push push sbb sar pop dec sbb cwtl je into ret add and mov cli add push xchg add (bad) jne xor sub inc mov lcall and sub adc add test jne adcl aad push adc ljmp add movsb pushf ljmp add in ds add add addl mov add push loopne adc jo jno inc xchg popf rorl cmp sub dec mov cmpsb test shll xchg inc mov mov inc inc das lods add xchg mov inc enter and in add sbb btr sti lock popf sbb inc pop repz and (bad) data16 nop cmp jmp divb jnp test push push inc jmp lret jle aaa mov ja scas push jl cmc push loope jb jbe add fsubl dec sbbl mov out xor das lea mov or adc pusha mov imul dec inc xor (bad) pop (bad) in xor mov lds inc ds sbb pop xchg mov lcall fistpll addr16 bound xchg sub mov adc inc add jl icebp cltd les andl addr16 stc xor in add xchg inc inc push cmpsl sbb andl sti inc dec aad in mov lret inc cs lods xchg adc repnz and loope or sbb js or and push dec js lret cmp and sub add insb hlt pusha mov dec mov xor sti or xor cli fnsave notb xchg pop push add push pop sbb add lcall subl xchg mov fbstp add lods xchg add add dec jp add jmp xor je cmp fdivs ljmp dec aas les push orl jnp call lods pop mov sbb xorb add pop push dec jmp adc add and sbb js add sbb xor cld and fwait dec mov cmp pusha rorb or adc addr16 fistpl stc ret xchg out add lods (bad) rcrl push cmp add aad mov sub add (bad) fstpt dec push mov cmpsb add std mov (bad) jnp aas ljmp pop pop int3 pop or and jne push (bad) jno test int and adc sub cli les push mov lcall outsl add jg addb imul aaa and inc push js add pop jo xor (bad) icebp dec pop sbb imul lcall add mov test jl or mov mov pop add rorl mov mov mov and hlt xor enter xor xchg xchg adc aaa cmp add cltd ljmp gs int lods add imul pop xchg scas ja fs nop add pop add and or jbe fwait add (bad) add cli xchg pop lea movb dec dec repnz pop fidivrl icebp std xor movsl cmp sub mov push add or xlat jmp in cmpsl inc fs enter inc jg add adcl jae repnz add lods lret push push sub int3 (bad) xlat pop pop jmp cs mov sub dec and imul pand jge (bad) cmpsb int pop add xor mov dec inc push clc add out aam popf ret icebp mov dec jno cmp and pop jge sub fldt add icebp rorl (bad) outsb popa mov cmpsl sbb and outsl (bad) push stc push fistp cmp pop cltd fcoms les pop and bound inc inc test push pop imul das mov (bad) in pop add adc insl inc repz pop roll fistpl dec aaa orl mov lods sbbb data16 push pop mov cmpl repnz (bad) jo cmpsb sub int3 and pop cmpsl sti push sbbl adc and push push aad test (bad) int3 add loope sahf test scas mov outsl lea lods ds jg dec push jne xor rcl popl add pop sahf mov xchg pop out (bad) int ret jbe into or test mov xor mov std sahf add add sub clc mov push sbb jo sub and sbb incl sub cmpsl mov cmp iret adc mov mov jae cmpsb sub dec mov adc add jne and fidivr adc (bad) imul lock jmp out mov (bad) sti xor mov push mov jae cmpsb mull rorl mov ret push (bad) xchg cmp or aas sub fdiv jne jae lahf sbb inc insl lahf in jle test add int3 repnz add in sahf aas jae adc cli ret cwtl cmpsl mov out add or inc pushf in adc jmp movsl sti sub lods cmp cmp fwait inc fisubl mov jb xchg popf roll push pop push cmp and add sbbl add mov add call in dec sbb mov and andl add aaa sbb xor mov pop mov pop aaa add mov add clc mov add (bad) cmp add dec mov lea sbb cmpsl jo fs cmpl dec add pop out std (bad) mov add lds xor pop movsb cmp jo jg (bad) adc cmp jne add push push add (bad) out lock rorb add and out inc mov pop add cmc in jb add sbb insl add (bad) rcrl scas shrb out push pop xor inc in popa pop mov add jecxz jb mov add jno and xchg xlat add (bad) or xchg adc fsts dec add int mov mov js ficoml inc dec cmp (bad) add in shrl call leave mov ror cmp jo ds pushf add cld iret sbb xchg xor sbb push call add and inc add stos lcall cmpb adcb or mov cmp sub mov std in push and loopne xchg xor and lock xchg (bad) xlat inc dec and mov pop xor cmp and in loop sub popl in mov jl pop cld pusha sub mov jo testb push jnp gs lahf mov xor sbb imul xor repnz mov push add jmp shrl xchg sbb jnp mov inc jle or push xchg mov mov cmpb lcall mov jmp enter js test or add (bad) fmul mov cli mov mov lret test xor xchg push inc add jmp daa sub cmpsb loope mov inc add xor cvttps2pi cmpsl popl adc out add (bad) cmpw (bad) mov ret push sbb movsb jle add (bad) repnz and lods mov call mov data16 pop add popa dec mov xorl movsb out sbb hlt sub add scas aam add mov sbb ret mull add inc fildl adc (bad) push jno out and and pusha inc mov das add xor push pushf daa (bad) incl sub fldt add movsb ljmp enter jmp (bad) jbe cwtl push push mov test pop inc pusha push xor xchg dec arpl pop adc imul insl inc jo sahf jae xchg pop mov dec add mov add fs adc fnsave and xlat stos xchg hlt pop shlb jl pusha ljmp (bad) int3 and pop push shrl jg daa adc adc adc (bad) mov adc sahf cmp andl xchg rolb mov out sub inc addr16 xchg shrb clc (bad) jge mov mov sbb add nop insb add add aas push cmp lahf cmp or and jp dec dec xor sbb sbbb bound test in or aaa push je jne xor ss ds mov sti sbb sbb jnp jne xchg int mov imul and xor add inc adc adc sbbl cmp jge aas sti add shrl stc iret bound add and push cmc add dec push cli (bad) inc dec mov lods std inc pop mov (bad) xchg inc or add xor jnp add popa xchg orl mov add fidivr aaa lea scas pop jmp sbb movsl pop (bad) mov lods jo or add and outsl aaa pusha adc add jle inc push out cs push push les pop jb and stos add xchg add jne mov add (bad) xor add sub addl pop fimul adc scas (bad) mov xlat in into add push inc fimul push pop mov xchg outsl or popa lret push jo subl dec pushf mov rcrl and xor shrl (bad) call mov or cwtl insb cmpsl adc pop mov gs dec jp cmpl ret pxor rolb pop daa jno loop ja add jae out sbb add (bad) xchg or repz mov fmull xor sub call movhps arpl mov pop add out sbb cwtl adc jb dec rolb leave xor xchg paddusw fild stos test cmpsl es aam shr add aas xor mov mov cmp test add pop xchg sbb insl stos and mov add gs add test pop sar ret (bad) add cmp cmc add push sbb dec or inc subl cwtl roll add iret xchg and sbb stos and push mov add fiadd push flds jecxz adc xor mov das mov push rcrl xchg xor mov test inc mov xor push inc inc cmpl test (bad) mov push jecxz inc cmp fsubr mov das outsl inc push insb ljmp imul mov in icebp inc pop or jae lret inc xchg jno mov aam and cmpl movsl push or push jo in xor shr or mov movsb outsb arpl int3 dec inc cwtl push ror test test fdivrl add shl aad lods psubsb xchg inc leave push inc add adc lock insb in pop add movsl (bad) mov (bad) insl jbe add outsb xor iret push xchg (bad) sub push xchg sbb idivb add loopne std (bad) mov adc xchg cmp das lock iret rclb aam addl xchg inc cmp adc or mov mov mov push add mov call cltd jg sbb adc jmp mov test or add add cmpl out outsl loop sbb mov or jecxz in dec jno shll jge xchg movsl jmp adc dec mov fiaddl popf mov mov daa inc and mov and mov xchg xor jg les int sbb push imul xchg and das push mov pop and enter popf and xlat ljmp scas push mov ret add mov add add and icebp jne push test (bad) inc imull shrl mov mov imull mov pop sbb xlat pop add pop (bad) mov adc sti icebp js lcall mov inc mov (bad) popf je push jne mov orl sbb dec or ljmp add and dec inc std and lods (bad) out popf aaa xchg fs add inc cvtps2pi mov push mov (bad) jp cmp dec sbb (bad) add movsl lock ret dec jle add popa xchg push push imul enter scas xor in mov push mov xchg (bad) inc dec imul cmpsb test test mov rcll sub dec dec out push push push sub (bad) out lds xchg mov xor pusha bound out test (bad) sar add sbb or mov inc xchg mov dec cltd adc cli sbb je xlat jl dec cmp mov sub or dec nop sahf sub mov sub pop pop adc out add lcall stc dec inc cmp jecxz xchg add mov jns add add cmp sbb loop mov (bad) dec mov aaa movsl add pop ljmp pop pusha mov mov imul das int scas add mov sbb add jmp dec jo push inc mov arpl or dec popf xchg das movsb add loopne bound adc dec (bad) ss sbb jg out adc and sbb daa stos (bad) out fild sbb faddl pop test les lds jne scas push popf loop popf loopne inc outsb mov and test call push mov mov push inc adc ja mov lret jnp xor mov fwait add add sub pop mov lea xorb adc sbb xchg popa add (bad) sbb add jp nop repz jl ss cmp int stos rolb add mov push pop jle mov mov sbb testl lea jp mov adc pop pushf sbb add and add (bad) out stos add ds mov jecxz divl jo inc push cli cmp and mov sbb stc lcall rcll sbb subb ficomp (bad) xor inc sub out les add stos pop jl (bad) loopne add inc cmp imul mov mov das sti lods jbe,pn arpl adc out shrb pop dec xor jl aaa pop push cli ja cmp cmpsb es enter pop mov jg popf jne jb mov push fbld mov inc mov sbb sub push pushf (bad) dec mov scas jbe dec add lcall xor loopne daa add xchg xchg push inc or lahf add xlat es sbb adcl (bad) aam xchg jecxz or shrb ss pop sahf cmpsb decb add mov popa leave dec inc add popf mov pop nop lods mov sub int outsl jp lds inc xor test repz shll push add fsubp pushf imul aaa fidivl pop js verr push pop dec into sub add imul add or xorb xor sub out ja pop jbe jno mov jae and verr (bad) xchg pushf cmp mov add inc pop jno sub mov nop (bad) loope push cs add cli test repz pop cmp inc sbb dec and es std mov sub add sub aaa dec (bad) mov lret lds xor inc mov in mov mov cli aas mov inc mov mov xchg and adc add mov es (bad) fsubs adc into iret das add clc inc lcall xor repnz out in lret xchg outsl pop inc int3 inc mov iret mov pop adc test and dec sub cld add in mov leave ja int3 push mov mov jecxz dec jo,pt adc pop pusha xchg hlt popa shlb bound xchg xchg and sub insl or mov pop (bad) cmc xor jne pop sub jecxz lret xchg mov cltd scas lds cli xor mov xor xor mov loopne (bad) mov lods add xchg pop add and cmp jb lcall nop js add cld push icebp ss lret jbe add jo sub xor jle push jmp shll mov dec dec push mov xor add into pusha js xchg add dec pushf pop cmp sub inc adc fstl lock inc mov psubb push outsb stos cltd mov pop and mov mov dec mov cwtl dec adcl inc repz lcall ss rolb xor nop add int3 or add dec mov dec push xchg jne int push add push ret add pusha mov (bad) popf add inc sbb bound sbb add (bad) icebp inc cmp add inc sbb adc pop cmp inc popa mov sbb divl dec (bad) pop out push add jle pop add icebp push mov inc sti sbb mov stc cli inc sbb xchg add push cmpsb xchg rolb add shrl push das cmc mov ss add ffreep add les lock dec add lods push add ljmp xchg add add sbb leave mov in fdivs faddl aam inc idivl enter loope repnz pushf mov test sbb mov outsb jnp xchg (bad) push jns inc push pusha in cmp roll jbe mov add js sbb loope testl adcb ret or jne cmp xchg sub sub xor add sub inc popa lret pop dec add xor pop jp fwait fs clc sub imul add dec stos mov dec (bad) mov inc leave jns sub jo or pusha sub and test sub scas xchg (bad) mov sbb lret xchg test pop fldl mov cld rcrl mov int3 mov jecxz in decl cli je test and xchg xchg dec inc xchg call lock sub mov dec adc add leave mov pop xor sub inc ss stos add xchg pop jb fwait insl and ss (bad) nop sub xor test fisubrl aam das sbb pop test dec andl and arpl ss je out add mov adc aam sbb insl xor sbb imul out testl mov and jne add js iret mov dec add push sbb add mov in test js mov add jae jno mov xchg add or int aaa add loopne and xor push (bad) sub clc mov ds test outsl std cmovo adc movsb mov dec sbb stos add jmp sub push add out ljmp js in lods int sbb mov pop add add jno mov jns mov add xchg dec je int3 mov rorl or (bad) mov mov test xchg mov push mov xor mov jge xor add cmp lret add jbe rorl outsb sarb add fiadd out popa into das add orb add js push popf fistpl outsb popa cmp mov add out sub mov pop pushf add ljmp mov pop aaa popa dec test mov gs (bad) and lea cmpsl je scas sub push add push cmpl pop xor or pusha addb dec bound dec jg subl push add fdivrs mov out je xchg pop push in sahf jb xchg cmc js or mov cmp stc (bad) scas fdiv xchg ret lds in or aas add xchg mov out movsb add jo rclb add iret cmp sbb and dec aad xor add cmp cmpb into sbb or cld dec cmpsl int3 pop xlat adc xor nop adc xchg mov fwait add scas add outsb push lock dec pop inc add fxch jbe bound fldl xchg jp mov popa or stos mov xchg adc pop adcl aad jmp xor cmp mov mov xchg shll lds add hlt dec mov cmc xorl out push add sub jns add popf lds inc sub sbb adc pop pop push addr16 aas loopne jns add xchg and adc cmp xlat fmulp sbb cwtl mov mov sbbb pop insl out es sbb dec aaa pusha mov push cmp pusha ss sbb pusha dec and int repz push cmp mov add fwait push cmc add fucomip fdiv data16 jmp stos mov jecxz mov push xorl xor add dec dec inc out pushl sub pop sbb mov adc rolb (bad) mov jo out mov stos inc lea push in loope jns push int3 and xorl cld pop lret outsl push stc (bad) push push add out cmp sub jns add dec mov add in add push pop push aad xor mov xor pop pushf int3 lahf or xchg xchg enter imul sbb lahf cwtl test pop push sub mov dec sbb jbe add shll (bad) insb ja add pop lods aaa fnsave pushf aad adc test and jg ja cli sub dec in xor testb push add jl jbe ror sbb lea dec nop adc push in aad and (bad) testl imul inc dec mov or push inc in fcompl mov adcl mov add pop dec or js sub repz jo push cmp xor sbbl fidivl dec mov jl add xchg jp lods inc gs mov push jnp clc or add mov repz gs subb arpl adc andb sub dec mov sbb loop cli idivb cmpsl lcall pop and lret adc add sbb add mov mov and sbb dec xchg (bad) js mov stos sub xlat cld add (bad) lods jne subl scas dec mov pop add rcll add xchg out and cmp dec pop in xor add add incl adc cs mov pop pop dec jae mov mov pusha cmp sub push xor add cs (bad) jne cmp jno inc fisubl add pop ja loopne fwait lods sbb mov mov add xor xchg sub fwait js lea or ror aad and and (bad) jl pop in jae mov jmp lcall dec ss test scas andb pop js stos sahf sbb inc mov fwait es cmp mov xchg movl mov add mov lods xlat mov push inc mov insb push xchg jnp add les push push add xchg mov add jno inc jp add rclb cmpsb je imul mov scas add insb sub add jns mov fistpl push or inc mov sbb mov push pop add out add and movl data16 jb jae rcl iret mov insb test jmp add lea add imul test pusha pop lret mov xchg cmpl cs sti mov and mov sub and leave add mov test bound leave xor mov jno sbb mov insl push add pusha cmp xor fadds adc sub jp add jno enter add (bad) ja cmp test cltd push and adc inc aam add idiv jmp cmp ja mov repz mov inc cmp out (bad) (bad) out mov test cmp push pop and outsl jo in ret (bad) sbb mov aaa cwtl addr16 insb jbe pop arpl loopne add inc sub leave dec dec adc pop shlb test loope ss pusha roll mov int3 ljmp mov sub movsl jl push and add cwtl xchg xor scas mov sub lret pushf dec cmpl add sub mov fdiv stos add jbe pop pop popf xchg popf in fwait xchg cmp psrlw dec and pop sahf add add cmp add leave in push push lcall movsl pop mov pop and in arpl ds or imul and add js jnp stos popf ljmp mov pop add cmpsl fdivrl mov push stos aam cmp test cltd jle add xchg std xchg xor (bad) scas add shrb pushw testb (bad) stc aaa shlb mov xchg add jnp xchg (bad) (bad) lods jae push or dec add mov jns,pt sbb sub mov push dec dec add int3 imul lds xchg (bad) jmp mov and and mov push sub daa test xor mov inc test negb fimull add add jecxz mov sub stos add cmpl sarb leave push xchg inc (bad) pop add pop shll ret add das mov add imul test xor mov sbb aam nop mov add lret pop shrb repz and (bad) xor fist shrb mov test aas addr16 pop push add push sbb outsb cld xor lea jnp pop add int add dec sahf les lds idivl jns sub jo adc loopne jno and add or fs jo ret sahf add sbb out mov test jae iret outsl pusha cwtl lcall cmp push dec shr add out xchg jae sub adc inc pop mov add lahf pop xor and add enter popa nop push add push fwait sbb mov dec mov jb inc insb mov push lcall movsb mov inc sahf xor shrl inc add fwait das ficomp incl js xor lods jecxz add in pop cli jno mov stos repnz mov add (bad) or jae and adc movsl mov add jle icebp addl jo mov mov addr16 add cwtl pusha imul imul nop jmp sbb add in jl repnz sbb pop xchg fidivrl orl xchg cli mov add call shrl nop fistp add inc gs jl pop das dec inc (bad) cltd mov addb arpl add pop lcall scas push test xchg sbb cmp xor adc push or pop pusha addb xor add loop in in pop cmp js clc popa jecxz jae add or (bad) int3 je orl xchg sbb in add rolb xchg or jbe xor pop push aam add mov mov adc rcrb sbb je inc add push fld adc add addr16 pop sub cmp fldl gs pop mov cltd mov or test les adc (bad) lea mov inc push push add xor cmp xchg cmp imul push rolb insb subl add jmp dec jbe fistp push xchg mov jne add push inc cmp inc xchg push and pop pushf pop push mov pop stc sahf jp add arpl push movsb popa lret sub pop fldcw mov adc imull xor mov add out dec add add insl sbb push (bad) cltd mov gs inc fstpl test mov out fwait sarb lea out and and jns jne or jo cli in repnz push cmpsb lea test idivb or aam in out out cmc (bad) icebp dec je ja add and cmovle arpl outsb popf pop add pop sbb test push (bad) insb jns jg pop les pop cmp enter add out aad mov pusha movl out mov cli add (bad) lock adc subl push daa cmc mov enter int3 lods (bad) in lahf (bad) repz adc xorl cs bound and xchg cld jno add fdivp and push hlt mov inc add and mov add jecxz fs dec aad mov jbe (bad) btl add inc (bad) imul inc add out xor bound pop xlat cmp cmpsb movsl jmp cmp imul pop pop (bad) mov xlat and movsb add fidiv subl add (bad) jns das pop ret dec aas add mov and mov imul repnz jo sbb add xor loopne push pop and mov adc mov ljmp jge ja,pt pop ljmp push sbb psubusw outsb add fcmove xchg sub add sub push test inc mov adc in or popf cli add test add add (bad) add je add xorb jo pushf in test or aas pusha xchg add push pop pop adc cmp xor in push dec add pusha imul dec addb (bad) cmc iret rorl pop inc add outsb mov mov xchg push rcrl repz jp add fidivl add dec sbb pop pop mov subl mov loopne mov loop test jge cmp pop pusha out lahf xchg inc ffree push xchg push push mov clc andl fadds rol fidivl push add and mov fwait aas je rcr adcb insb mov fs add mov daa add (bad) and popf in loope pushf xchg xor add pop dec jecxz jo sbb adc sbb mov (bad) addr16 sub (bad) jg aas (bad) dec stc sbb cmp movsl mov lahf pop popa add fwait jnp jg in add mov jecxz lock pop ret add fwait adc nop fldcw push adc (bad) fldl xor sbb pop repz in pushf jnp fwait mov sbb mov add xor add je cld sar add rolb mov inc mov pop mov add daa sbb mov mov mov out bound jle lret aad sarb mov jnp neg jp cltd cmpsl add and push push loope cmp xor mov push imul sbb or les push in test xchg mov xchg jle ja cmp imul cbtw add xor sarl movsl leave mov pop mov lret add push pop incb bound mov adc add test scas mov or or in pop inc xor add es add test xchg scas testl add out mov add xor out xchg inc mov (bad) xor or mov insb loope add dec dec loopne lds add in xor push aaa mov add sti push mov sbbb int add icebp stos mov sub test pusha loopne xchg sub jb jne add or daa push das xchg inc add (bad) bnd cli je lret xchg leave jmp mov sub stos adcl pop imul shld int3 xor ljmp clc es jns jle push add fadds dec add jb leave adc test add imul push stos xchg mov and lcall adc push xor pop ss ja add xlat lcall hlt into sub dec add shl xor push sbb and mov inc cltd add add leave imul xchg dec or push add mov scas in mov ja pop dec sub mov xchg push pop jg clc mov or in mov fist loopne pushf data16 sbb inc (bad) test xchg test xor out pop fsubs add cmp sbb je (bad) jmp adc xchg rorb (bad) es add pop aad add sbb or jl std das mov imul push xchg mov add jne pop sub add out fistpll (bad) fs cmpsb insb shr push mov xchg lea pop add (bad) cmp jge dec add in sti int3 push add cmp inc leave or push das mov outsl fstps dec add mov jl dec dec popf add popl lea popf inc aam test jge and xchg cmp mov scas push test nop fiaddl or fs adc pop and adc mov int3 or in sub push movsl bound xchg or xor in in dec mov loope andl test and insb push xor mov xor or lds ret and icebp jae add in add in (bad) mov add in mov dec jb jecxz pop adc and inc mov sub sbbl push movsb lcall arpl (bad) flds movsl push mov inc mov test push stos aas dec xchg inc mov jbe or or inc jae add adc push out loopne push mov ljmp movl xorl inc ret stos push push pushf lods popf add mov pop add dec cmp cltd jmp pop popf dec rclb pop mov popa add jnp leave mov loop mov fcomps add xorl sahf pop dec inc cltd mov mov xlat xor outsl jb add jbe (bad) je in jbe add (bad) xor xor add (bad) jae xlat gs pop test dec nop add jl or jmp pop add (bad) add aam xor imul fist iret push add lret iret add add add cmp (bad) pop movsb mov test into clc ret sub adc incb mov and cltd add xor adc mov mov lahf (bad) repz push std bound ljmp dec add aad fs aas add sub arpl loopne (bad) loop jg add add fisubl sub ficomp cs push add clc lock ffree bound ret cmpsb dec shrl mov int3 stc adc add sarb lock outsb ja xor fstps sub xor cmpl test push sbb inc mov js lret cmp add inc cmp jno push jns sub dec jmp pop (bad) repz xor and data16 pop add and jge in fdivrl jne mov movsb pop add jmp sub mov lods in xor jo cwtl ljmp js add lock popa into jo add stos pop sub or (bad) add or xchg (bad) sahf call mov add sbb inc pushf stos and (bad) cmp cwtl call xchg and mov fsubl sub xor (bad) sbb dec mov imul or inc insl scas mov pop mov xchg loope ret pop add ret bound or push inc sub sub adc rolb cli mov cmpsl add jecxz sbb fnstenv rolb shrl dec test daa add sbb inc push jmp loope in int mov test jne add bound add mov (bad) rolb add push stos sub add jno inc (bad) testl dec sub xchg insb repnz in inc movsl pop push lret dec mov sbb stos add mov and insl pop add adc in dec xchg in add dec or (bad) mov jmp pop lds mov add or mov mov dec daa xchg inc cli dec push (bad) int3 push xchg add insl icebp xor sbb sbb xchg int3 ret lds jp add push jns out mov or jl hlt das jecxz shlb mov mov push incl add mov fldt sub subl pop aaa jne out cmpb add cmp jmp sub sbb xlat mov jl aaa ljmp pop add xchg (bad) add adc add push sahf pop inc sbb sbb xchg and popf movsb call sbb (bad) imul adc jge jae jbe and add bound and xor cmp mov mov (bad) aas jg ret and movsl ja scas fiaddl push jne aad and xchg jle arpl xor xchg js sbb into insb ret das int ja jno inc sub mov lds sti mov cmp mov pop rcll lods add xor push sub insl push sbb jg add pop imul stos mov push xchg pop add push xor and sbb cmpsl movsl add sarb dec jns outsb nop xchg add add fs sub xchg push and pushf adc add nop addl xchg lock (bad) sub sub testb push icebp add xor push pop repnz fsts ds xorl roll test add loope out push adc mov xor ret adc (bad) fidivrl push add sub jecxz sub mov jbe fildl inc loope push add jmp dec xchg add (bad) fisttpl adc sahf in adc stc scas mov outsb or js add popa fsts je dec aas add xlat fisubl (bad) cmp adc pop pop xor push es popf sbb push push ljmp mov cmpsl out insl mov sahf test (bad) fadd jb add jecxz and jo test fcmovnbe lea ss mov add xchg mov js xor sub jmp xchg and pop xchg lds mov mov or inc or es add lahf dec xor dec cmpsl imulb and fmull sbb xor mov mov mov sbbl mov inc mov ljmp xchg in xchg fisubr and test stos mov mov in icebp sbb lahf sbb cmp (bad) fistpll add loope cmpsb enter sub out push and jge fidiv ftst add sub aaa add aad daa jo ficomp mov mov add fsts roll (bad) stos fcoml mov dec push add cmpsl fstps adc pop icebp mov pop pop pusha inc add in fildl sbb ja adc fdivr jo sbb push pop lret (bad) cmp sub push (bad) cmp add mov cmpsb sub pop out lods add add out imul xchg and fdivrs adc repnz push jb mov cmp outsl pop rolb (bad) pop and jns fildl cmp mov pop add adc or ljmp pop xchg daa mov add mov fldl lds fwait cs pop lock icebp iret push jne sbb add mov lock and and sbb roll xchg repz popa test insl add add inc mov jae sub sbb fiaddl and or add mov sbb cmp sti arpl cmpb jo sbbl sbb addl sbb dec jb int icebp rclb pop cld lcall inc ficoml and leave sahf inc pop cmovg popf movl mov add cmp arpl add fcoml push add gs cmpsl mov outsl dec cwtl jne dec add aam test jo sbb fsubs cmp or add jp mov lret subb ds dec ret popa push sbbb es add cmpsb stos dec ss add call fwait adc xchg stc sbb adc jge mov mov pop push cltd lds and pop iret mov and mov xchg inc fsubrl loop cmp mov adc int3 cmp mov mov mov ret in es or add ja or out aam imul scas pusha pusha stos addr16 add push arpl add cld push cmpb cwtl jo fiadd (bad) fmuls fistp stc aad in fwait shlb in jns adc mov dec add push subl aaa mov bound push dec fcomps mov cmp push into push push add inc popf nop mov add scas inc push dec pop mov pushl jg add jg sub sahf inc and fwait mov push mov jbe addl fdivl mov lods rorl pop cltd (bad) je add or lock add mov insb and cs (bad) or dec in (bad) mov es test sbb notb dec enter loop push sarl ficomp add or loopne mov jmp adc add adc mov mov xlat sbb adcl xor sbb rolb ja cmpsl cmp add push xor cltd cwtl mov add out inc inc cmp sbb mov pop (bad) aam xor add insb lods mov mov pusha jmp xchg and jp (bad) push pop and add aas aaa xchg mov loopne sub cmpsl add xchg xchg imul dec mov das jmp mov popf adc insb or jge dec xchg movsl add dec loop cmpb push repnz sbb and (bad) int mov add cmp test ficompl xor test add jl and mov je adc sbbb sbb jae call xchg aad add (bad) je dec jg sbb popa cmp cmp lret mov test (bad) sub xchg ret out aam subl test in in jnp push fsubrp cmp jo jb adc xchg loop add lcall xchg jne cmpsl out push scas add out and test mov ljmp add stos fs rcll dec jne or jbe,pn fsubrl mov out orl sbbb xorb pop aam leave xor pop add enter lods sbb push add xchg and mov add jb arpl jl inc into clc mov add std sub cmp push cmc rorl jo aad andb inc (bad) mov adc hlt jmp mov adc and jge jmp movl rcl push das orb pop mov mov pop les adc add fist push std nop add shrb add pop jns ja inc in add jb sub push and add icebp push js mov mov xchg movsl xor push loope fiaddl mov add mov and fisub fbstp pop cmc and jo or sahf pop add loopne jno popl jg xchg and jmp push (bad) les std idivb sahf adc push cmp push cmp cmp stos inc inc jb fs mov ljmp or inc cmpl popa lea xchg push cmp loop dec sub test idivl inc jns gs mov push pop daa sub int andb adc mov jo jg add jle ficoml pop xor push sahf cmpsl (bad) sahf pop (bad) inc daa add lahf (bad) xlat (bad) movl (bad) xchg cltd fwait cmp and fcmovnb cmp adc scas or xor or cmp orl push pop imul cs mov fnstenv add sbb stos add push sbb dec out pusha mov mov cmovno popl mov orb jbe inc fildll pop mov jne (bad) mov xor icebp push mov push loope add push test add cmp add addr16 mov inc and inc push xchg pop (bad) lock pop mov popf cli pushf pop add lock sbb add shrb pop lea adc push lock addr16 adc inc adc push (bad) pop fcoms and or leave dec je fwait bound xor mov sbb daa andb mov sarb dec jecxz fsubr xor adc jns jnp add push loope push pop dec xchg incl lcall jecxz loope pusha sbb rep (bad) mov (bad) dec (bad) adc lret cmc out xor shr aaa fs icebp iret subl out imul stos orl cli je pusha and fucomi add insb idiv cmpsb inc js fnsave fdivl pop fs mov movsl insl jns inc adc daa xchg mov adc jnp add fdivrs cwtl push and (bad) (bad) inc shrb loop pop adc pusha test dec loopne and fwait inc aas mov cmpsl dec mov orl stos cmpsb lret xchg add hlt ret xorl cmc jb push cmp sbb jg pop (bad) out lea in fs pop sbb mov pop mov mov jmp inc daa sbbb push (bad) adc push aas sahf add pop loope lahf pop dec andl push scas jle add repz lcall movsl sub and cmp push or adc add mov or rcrl add pop xchg lds ret push push add in inc mov dec aad lds jecxz sahf push cmp (bad) mov incl sbb test js inc adc pop movsb jo pop es jo enter setno sbb add dec lods in cs mov sbb aaa fild dec adc lods adc xor add sbb add xchg dec test enter xor cmp dec xchg scas loope cmp xchg je bound sbb adc or mov leave test and aaa (bad) jl pop inc sbb cmp or imul cmpsl xchg or mov out mov std sbb adc sbb add inc mov loopne mov add negb (bad) js adc xor jg dec add sbb fs add lahf inc dec xchg mov push test (bad) add lds daa and add dec or add loopne fnsave dec pop xchg mov nop cmpsl ljmp xor add pop addr16 add cmpb add lea pop sarb stc pop push dec xchg mov jo or xchg adc ja xor xchg mov push push mov sbb inc lods cmp cmpsl in scas incl push pop popa popf inc adc seta sub push sbb adc sti jecxz rorl add push ss or add (bad) xor add jno dec into addr16 xchg and jns das notb pop xor sbb push (bad) sahf push and imul sbb dec xchg shrb adc (bad) gs inc lock stos jae pop iret xorl add cmp inc pop mov into decl cmp sbb (bad) cmp inc mov push nop addl daa mov in xchg sbb mov popf xchg sbb lock pusha arpl inc loop add adc dec add xchg roll orl insb mov test mov inc repnz mov adc cmpb add jnp aam psrlq dec movsb mov int add add xor cmp imul adcl lock cmp mov pop add jl jp sbb sbb mov cltd jno xchg push add fsubs iret js inc (bad) add imul add fdivrl arpl fs add jp sti xor lods add or push sub push sbb cwtl mov popf add pop or add rcll das add mulb add int rolb fidiv and imul sub ljmp jle les lret sbb repz xchg pop adcl pop push push mov pop and add cmpsl cmp arpl fs mov mov in push and or mov push pop and dec loope push pop jno add mov push add xlat jne add fisttpl sbb aas pop pop push inc add add mov jmp or test xchg push dec (bad) lret orl inc or add sub loop and dec lcall sub mov sbbl add iret jo dec (bad) sbb add mov enter (bad) cld dec add adc pushf ja pop cli lea jne mov sub xor mov lea lds ret and dec (bad) test add and gs xorb sbb push push mov insl fs mov pop ror addl aam test mov mov roll fnop adc mov adc (bad) mov push scas inc and pop addl lea das adc cli roll and cwtl sbb imul inc test xchg sub adc fidivl mov paddsb cmp mov jmp cmpsb lcall add mov adc xchg fimull sahf or add add repz inc push es add pop rcll add xorl add lock clc jge pop xor aad jl fisub push (bad) dec ret inc cwtl fisttpl adc aaa lcall test push add cmp aad cmp ds mov in adc add sub sarl add mov int3 add pop cmpsl add movsb (bad) push dec pop jb das xchg mov loope int3 mov test addl pusha jle (bad) pminub push cmp int3 inc pop push xchg and jmp dec mov mov insl add mov or mov stc xchg mov in movsl pop add (bad) mov notl shll push mov pop pop push cmp cmp mov in push xlat roll cli mov mov popa lods sbb fcmovnbe add cmc dec push fdivl add dec cltd imul add daa fnstenv inc repnz aad mov pop cmpl xchg (bad) sahf and add dec mov fidivr sub inc add jns push adc inc xor test and jle add lods dec inc mov fildl jbe outsb lret sbb pop cmpb test das xchg fcoml jmp cmp add ljmp pop cld ret mov pusha add mov pop insb add xchg adc out jno movsl roll cmpsl call jg add popa rol xchg lea daa or jp add sub add push push outsb cwtl pop rolb loopne mov add cmp fldl sbb nop in pop mov movups popl push int aam mov fcomps xchg fs test dec js gs and mov cs add and jl repz or lahf push mov ljmp ret mov push add insb pop pop fbstp add aad sti or sbb in cld lods sbb mov add mov mov ss add sbb pop lahf xor cmc aad in andl mov wbinvd lods mov adc sub outsb add andl add imul add inc mov push inc cmp add lret mov (bad) flds sub sbb subl push cmovo repnz test xor movsl mov sbbl insb in adc or push add inc xchg scas add not in lret add movsl fstpt into pusha aam (bad) mov mov add push xchg lock add aas mov and sbb jae cltd dec fs hlt cs jnp je clc push jne insl and pop test roll out ret jmp leave add sub lods pop xchg idivl pop fsubs add mov jp repz jmp push es mull sbb arpl add and sbb and cmp stos jns out xchg pop push inc xchg ret push add push daa pop outsb addr16 dec add cmp pop push adcl repz xchg std add mov mov (bad) push loope or xchg dec inc sub add adc mov adc dec pop fadd mov add dec inc pop sahf (bad) jbe insb movsl and cmp lret int3 ficompl jg cmp rclb ret sti pop jnp cmp outsb and sbb repz sub fisub push mov int lds ja (bad) flds xor or mov call add lahf popa cs sub out add xchg sbb inc aaa idivl or cmp add iret das pop mov cmp dec nop aam jb (bad) negb test lds add scas mov sbb xchg cltd or add mov sbbl bound fnop cli js mov cmpsb xor xchg les imul xchg xchg add pusha xchg lea and imul sub pop pushf and sub (bad) popf (bad) addl inc pusha imul test lahf xor shl push or gs mov jo (bad) imul imul add push fistpl popa fbld negl cli (bad) addr16 aam sbb mov add aaa ja loop fistpl add (bad) enter and das cmpsl sbb pusha loop (bad) dec add mov mov fild cli imul addr16 push mov add inc push pop add insb cld xchg das push icebp rolb push jp sub add stos jge xacquire orl jecxz decb inc roll and call inc dec inc flds adc push mov addl push lcall adc xor jecxz pop add insb iret loopne inc sbb mov mov imul popw xchg stos call imul dec mov sub adc cli adc jmp dec mov inc sysret sub xchg push dec aam lcall jecxz jne cmp jle push fld mov jb addl fstpl ljmp add fs and mov cmp mov js add test mov out mov mov ret (bad) (bad) pop fnstsw inc dec jg lcall call jno inc adc pushf add xchg mov sub mov cmp jl pop pop popl int lret hlt xor cmc jle mov cmp jge pop jnp jge add jmp enter add rcr push jo out (bad) mov daa add in mov jg nop add sbb add pop pusha gs cmc pushf mov pop push add jecxz das and int sbb imul push and outsl sti insl jo xor pusha pop pop jle jg (bad) jns orb sti in jbe dec push dec and xchg mov loope sbb pop mov lret ljmp xchg pop popf mov cmp add fwait push or add std sarb js add faddl mov ja add into mov or pop stos xor fisub bnd lahf jle scas cmp sbb jecxz cmpsb addb lds insb dec out add sahf fwait pop orb inc and mov mov std insb xor rcll jmp and push jo fldl mov pop mov repz clc xor sbb (bad) adc mov push cmc pop push int adc sahf xor xchg jb push mov mov arpl mov in sub aaa pop cld roll mov pusha jb mov inc push sbb sbb and or cld push data16 xor jo addr16 fistpl repnz mov lods je test mov and or (bad) cltd cli adc pop add pop leave insl daa mov push cmp and cmp add std mov mov mov idiv in lds mov sub icebp test inc push pop push push add sbb out das fild jns mov inc xor icebp mov adc stos lahf inc mov push lds shrb sub outsb dec add test or mov fcomps out imul (bad) lret mov inc test mov pusha add add pop cmpsb xchg xchg push imul cli sbb mov pop xor jns jo add sbb and dec ftst addr16 push repz sbb into dec int push pop loop mov fdivrs movl test in lods inc sbb xlat loope in mov jns outsb xchg cmpsl mov rcll int3 aas ljmp push call push outsl addr16 xchg add cmpsl push push add dec dec ds dec jb pop (bad) cmp fwait andl mulb test jo loop icebp popf add daa sbb add iret xor ss rorb or inc cli insl jp add or adc lds pop add mov mov xchg (bad) xchg sub and mov stc sub test jecxz pushf pusha mov (bad) addb or roll xchg mov xchg ret sbb sbb cmpsl rcll mov add inc push add xor lret loopne lds loope lcall push push dec xor lods jg sub add xchg add mov movb movsl repz adc dec xor into sbb push or xor pop shrb sbb aam push lea add inc push inc stos ljmp mov adc addb jne or repnz jg jo add int3 incb inc push mov sbb rcrb inc stos js fsub add sbb cmp add shr repnz or pop cld dec mov mov ja cmp loop arpl dec jns xchg adc sbb add fisubr cltd cmp add fldz repz or pop rcrb imul outsb sub cmc jo movsl fildl cmp popf xchg insl scas and call aas inc out fs je inc add outsl js push cmpsb mov shrl sbb add pushf inc scas adc jg add or and (bad) mov pusha jle call ss ret bound adc mov ja pop sti and gs xchg scas lea mov popf (bad) sahf rcrb mov daa stos add or xchg push adc xchg das fwait es add lea popf sbb test jle cmp sub (bad) out push add ljmp fldl add dec push add enter adc jle ret fwait bound xor shlb iret inc xchg enter pop clc mov loopne (bad) addr16 iret ljmp mov mov cmpsl sti ja inc enter sahf dec jb jl push push lret addr16 subl xchg mov xor jmp push add out roll out dec fcompl jbe mov xchg add cmp in ret pusha pop out lds aaa sbb sub out and sysret fadds dec pop fs loope push (bad) dec test xchg pop jle add iret aaa loope lods cmpl test lock cmpl call add xchg dec adcb cltd sbb js and sbb fwait add aas mov rcl cmp (bad) dec jne sahf xchg cwtl push orb add aaa mov push mov mov mov xchg dec in sbb add cmp push jle decl ret ja mov xchg fdivrp outsl out mov xor (bad) jle and add xlat mov sbb xchg jo cltd add ret dec or cmp sub add add jne adc lea jmp adc dec (bad) or cmp add (bad) fstpl xchg ficoml xchg jg xchg add mov cmp (bad) sahf and (bad) lea iret cld pop cmpl dec pop pop adc dec in aaa mov sahf fistp or sbbl jl sub jmp (bad) mov push sbb icebp call mov jbe sbbl xchg in adcl inc xchg pop xor aaa fidivrl lretw jo add adc iret movsl add push jle add or add xchg push push je sbbl repnz enter push mov add push mov pop insb add pop imul aas push adc mov in or cmp lret push mov dec call pop in inc mov pavgw inc jne clc bound frndint pusha sbb mov mov adc jnp sub adc aaa out pop dec add mov cmp cld mov jno pop pusha dec test sbb ret mov sbb xorb out dec imul sub icebp es dec mov cmp add popf mov mov dec mov add and bound in add lods fcmovbe pop inc push daa add jecxz mov in clc or dec fwait sbb add push cmc add add (bad) shl int add mov aam js aaa imul or test sub add push mov pop xlat in call add cltd cmp jbe inc push pop inc jmp sub xor lods push cmpsb scas in push call test mov add cli movswl xchg adcl mov pop pop dec cmc pop insb add or xor jbe stos out in add inc lcall enter js inc inc or repz aaa cmp mov je add dec aas sti push dec add jbe loopne imul iret test in lock sar and adc push xor pop mov (bad) pusha push sub cld lea adc dec enter mov popl mov scas aas or jge mov rclb les or add pusha inc lods pop push cltd outsb add dec sub and mov ljmp jle imul push fsubr jae rol movsl popf aad xor fdivrp jl fdivrl push dec aam adc daa aaa (bad) arpl mov inc xchg mov push pop in cmp sub add std dec dec add outsb fdiv mov test add xchg in mov ret sbbl sbb push jno sahf adc add cmp push add clc ja add pusha lahf testb nop add hlt sub mov (bad) sub test popf loop movsb clc cmpl lret dec adc adc adc cli and push fnstcw mov (bad) mov dec inc (bad) ja int3 and add aaa scas cmp dec in pop stos pop leave lock add cmp fistl add insb or xor cmp push xorb idiv push pushf jno lahf lcall push push add nop repnz ljmp cmpl xor mov lret orl jecxz arpl scas mov xchg fistpl xchg push and sbb mov add movsb xor inc push sbb ret idivb sub cmp jo lcall in (bad) pop mov bswap adc out jbe or jle xchg sarb ret sbb push (bad) testb mov cmp sub mov jg lods ficom clc mov iret and shl add addr16 popf sbb cwtl xchg movsb push cmp in lcall (bad) push or mov mov pop inc popa (bad) bound test pusha outsb test iret imul mov popf ss or cmp add pop lahf lods add pop push repnz lods add xlat into push cs mov cli das repnz xchg aas jmp inc add cmp cmpl mov xor shll nop call loop and inc inc cli dec cs sub lock or lcall add push jmp cmp iret cmp and mov mulb mov cs sbb fistpl stos add mov movsl mov inc (bad) cmp add xchg movsb jg push divb imul (bad) mov faddl lds popa xchg mov xchg sbb mov rolb dec jg mov fsubrs lret pop add sub lds jecxz cmc pop das adc add stc into sbb stos add (bad) mov jle leave pop faddp add dec jae add arpl fdivrl jne inc pop jmp adc incl jbe andb mov add in push aaa inc ljmp inc rorb daa jnp in jmp stos loop pop inc sahf jle mov int test lea movsb sbb aaa inc orl loope lods pop adc cmp call add xchg in lods jo cmp fwait test or push mov das mov cmp (bad) sub repz inc rorl sahf inc mov mov mov jbe cmp inc cmpsl rclb fild cs ljmp inc add ss sahf inc adc (bad) ja mov scas ficomp repnz in sbb jp jns add adc or not sbb or pushf popl arpl popf sub add nop mov lret push sbb ret mov scas add pop pop popf pop mov popl cwtl pusha jle nop inc rclb mov cltd add add movsl in jecxz cmpsb add xchg mov add mov cmp jns cmp loop daa cld mov int3 add into inc mov add jl mov stc inc dec add cld das aaa and loopne mov push outsb testl enter mov je push ret divl mov sbb mov adc outsl jecxz fidiv add jae adc popf mov rorb addr16 lret cmpb insl jbe addl push outsb cmpsb sbb jae push ljmp pop (bad) adc shrb add int xor inc push pusha adc pusha clc (bad) jg neg mov mov inc not mov in pop inc and jns ljmp pop loopne arpl add fsubrs sbb adc mov add or in xor sub jns aad mov into movsb and xchg lock add outsb push insl and add cmp negl pop xchg imul clc add and pop sbb cmp inc loop xor add push das jmp cs cmc (bad) idivb add push push push fistp les lds and movsl jb inc cmp mov xor sbb cmp pop (bad) xchg and loope xor outsb mov add pop mov mov push ds scas xor xor and inc call sbb mov pushf fndisi(8087 inc adc xchg sub xchg and add sbb addb ret shrl test stc add mov loop fisttp mov hlt jo jo (bad) jmp xchg cmpsl in shr mov xchg test das cmp mov ret mov sbbb std push or lods and push xchg push loopne push jbe lods adc push cmc add cmpl add add adc add jae jnp stos insb popf lods or pop pop xchg adc repz inc adc mov add push mov mov push jbe add sub xor popa cmc xchg fisttpl sbb sahf push add sub sti add scas sub out (bad) gs xchg add dec push stos test int3 imul sub add and cmp add lods aad and or fs mov and push xor pop push popa ss outsb pushf (bad) imulb mov test lds packuswb repz imul pop push nop out xchg jmp loope xlat mov add jl out pop dec cmp xor lock and aas jo adc mov jbe lock mov cmp jl xchg cld sub mov add push jmp and out cltd xor push daa add and pop es add or mov fildl add push jge cmp aaa inc dec dec sbb mov popf aad stc inc jns inc mov and or add inc neg and testb lods xchg out add repnz adc sbb cmp cmpsb out in ret jmp inc pop (bad) (bad) mov lock pushf bswap add push (bad) pop jns imul inc mov inc xchg xor mov mov repz or hlt add cmpsl repnz push repz pop push arpl add gs pop out mov add lret cmp pop jae in aaa hlt xchg or mov inc insl xor pop ljmp lock (bad) mov call mov addb cmp and flds pop lods add push movsb mov repnz mov add scas mov xlat (bad) out and sbbb jno sbb mov je jbe cmpl mov popf test or or enter push movsb or scas outsl push add dec push cmpsb decb sbbl (bad) cltd add fistpll push cmp dec and mov loope cwtl (bad) inc xchg push (bad) lret push aaa fstps cld cmp adc fs add xchg push sbb aam add jmp xchg pop dec bound cmp push rcrl or es fwait clc push outsb push incl sbbb xchg sbb mov xlat std popa mov arpl cld imul dec add mov (bad) inc add das xor sub sub mov sti mov xchg (bad) cld and pop sbb adc cmp mov inc (bad) icebp lock add (bad) dec pop movl add in ror mov add movsb (bad) pop (bad) push lea push femms or add mov shr dec mov xchg inc test sbb cmpb inc jg int cmpsb sbb xlat hlt fs and pop ret jbe or jne add dec insl add xlat test orl loopne add push ljmp adc add popf mov add jecxz in add repz and mov lods push or pop cmpsb inc loopne and jbe add pop dec (bad) out mov add jmp cmp jecxz sbb inc icebp in push adc inc int sub cmp sbb (bad) not xchg mov mov push mov fucomp add mov jmp inc pop scas add xor popf and out (bad) das sub cld add jnp aaa pop call jbe bnd addl loopne cli inc aad and jnp add jg push ret mov ret xlat out sub push xor xchg mov fdivs dec pop (bad) stc sti xchg rorb aad leave add mov cmp insb push dec or xor inc and push dec inc test add or enter fstpl add addr16 mov js jge push add cmp add mov jne,pt add dec pop (bad) mov cltd std sub fwait and lahf and or sahf fildl sbb cmp mov fist push or sbb sub js je jb add jo cmp mov insl or imul cmp das lret lods dec mov sahf and jg in add cld xchg popf ja cmp das ret cmp xchg lds add cld out out jno fildl xchg bound sub imul dec test adc shrl cmp cmp sbb pop in add inc dec sub pop jns pop mov (bad) and out aam add mov mov pop lret jnp add outsb pop fadds jbe pop hlt inc add jge cwtl fild loopne bound xor or add mov sub add sbb sub or outsl add sub mov inc inc cmp cwtl mov dec stos pop dec jmp loop mov jge mov mov add mov data16 stos sbb push outsb mov inc sbb aam pop push dec and sahf add mov adc cmp adc inc bound xchg stc pop loop repz or add sub cmp in add jns or push fwait add fnop add pop lock sbb or repz loop out imul add and inc in mov or sbb shrb sub xchg pusha adc adc jl pusha mov add mov (bad) or add (bad) imul sbb add addr16 jl (bad) arpl inc cmp add add je adc into jmp mov and into jns pusha inc pop adc test mov dec mov mov in dec sbb repnz mov jb add mov add arpl jnp mov xor aam mov ret push mov push pop sbb (bad) add shrl in data16 call mov into add xor sbb outsb lcall add aam fisttpll or jmp pop mov jge inc pop sub (bad) (bad) nop iret aaa inc sbb lock pop push cmpsl imul mov lcall pusha xor add push dec cmpl sahf add std insb and sbb xor out or xor push test dec lea pop sub inc loope test mov add and sub imul add sub inc (bad) mov pop (bad) adc cmc push dec add mov add xchg es add out sub adc std outsb fwait push imul div mov mov add ss test pop leave cmp rorb bound sbb enter cmp add imul pop or push adc repz mov lcall orb xor or push jle inc add push lahf add rol mov lods pusha xor push cmp xchg roll jb dec int adc add push in add sbb lret movsw pop push std in or int3 sub jo lods lods dec fisubl dec push add jbe pop mov (bad) jg push mov push jle add out movsb fucom mov (bad) fldenv fdivrs jmp add xchg add or pop sub pop movsl jmp mov add lea push and inc arpl jne das dec pusha mov ret fs scas and pop sbb xchg roll inc jecxz xchg inc mov sub mov add adcl xorl movsb or rcll jle push add add adc add enter adc xchg daa fldenv cmpb movsl jb dec add mov xor add lods cmp and xchg pop mov dec loopne popa add fstl sbb test sarb jae xchg mov aad or test mov inc cmpsb fwait rol push (bad) adc xor inc insl mov sub movsl pushf cmp iret add stos mov orl fcmove cmp push out add js cmc mov jmp push sbb push add mov out scas mov outsb (bad) jb orl incb jno sbb inc lock xor mov jp lods add push mov xor daa push pop dec and sbb es sbb jae pop repnz mov inc adc add aaa test fcom add xor (bad) adc sbbl bound ret out cmp add mov in loopne xlat jle int fild jo test in (bad) in sbb mov lahf mov push int3 (bad) xlat or mov (bad) pop push add xorl jbe loope fwait xor into imul or test sub add cs pop sbb lock fldcw ljmp scas imul and inc pusha xor pop aad xor insl sarl jge mov jae and lods push out pop sub pop dec mov sub call andb in dec (bad) push add clc bswap test add lret mov into jge mov pop adc loopne pop mov mov xchg mov add pop or add js and push xor sub lcall popf in add bound out or inc cld mov mov or add shrl into hlt mov sbbl mov popa (bad) mov icebp push mulb loopne xor inc gs mov fdivp mov sarb add aad or pop xor dec jle roll mov add hlt jl push out dec xorl mov into test or js add es (bad) je,pn or movsl cld addl fsts jle mov add lods inc test inc pushf add in pusha (bad) (bad) subps dec popf fs inc incb xchg inc sbb gs add adc pop je jge add cmpsl mov cli icebp xor fiadd (bad) dec movl dec pop mov add insb sbb inc cmp mov outsl mov add jo xor orl jmp and sbb out aam test mov sbb (bad) mov call sub inc jp les out int3 mov jg mov dec (bad) pop cs lcall cmp adc cli mov int push pop inc into inc (bad) xor cwtl mov jp mov aas jne ret notb xorl push cmp (bad) int3 je cwtl cmpsl addl lods (bad) xor aas addl mov ss dec fwait add insb in js pop aad std stos mov mov sbb outsb cmp push (bad) jo (bad) or or xlat rcr inc mov add mov dec push sbb (bad) ljmp dec adcl inc stos bound add dec pop push jns (bad) mov test cmp mov pop pop sbb mov bound inc in addr16 in (bad) mov insl sbb xchg (bad) cmp (bad) dec add pavgw xchg hlt bswap out popa or fimul jne mov ret push fwait add or inc shll add jo rcrl ljmp mov pop sub test rolb push cmp sub sub xchg movsb je add add test fcom adcl inc imul add and fwait or and xor sbb push cs mov out movsb mov cmp adc xchg out add jns xchg ljmp popf mov aaa jbe test gs out andl xor push push sbb add adc mov sub cmpb ja sub push mov mov pop add jg jo test mov dec add and lahf mov inc test add ret movl sub and cld add jnp cmp jbe cli mov sub not jle mov popf rolb sbb push in add addl ss (bad) dec jg and mov or or xchg push mov adc ja adc mov (bad) pop js dec insl add daa add xchg pop notl (bad) push dec or pop rolb add jmp xor movq xchg fistpll inc cwtl pop add sub pushf in xor dec dec dec cmpsl jbe faddl sarl stc loopne sbb add jae push mov xlat mov xor add dec xor mov je popa in imul loop rcll popf add out int3 (bad) mov xchg jne jb pop cmpsl add lcall stos add sub leave into daa mov add in (bad) dec add xchg imul mov sub add pop iret jb je fiadd popf mov cmpsl (bad) add or sbb cwtl push xor pushf xchg mov cli ret jge testb rolb dec and or inc add xchg arpl add data16 in repnz jmp sbb xor arpl sub mov test xchg in or adc cltd xchg add ja loope inc add adc fdivs dec das add add push test mov orb fist jl add insb add pop mul xor mov inc pop add xchg ret mov mov push cld pusha je dec dec cmpsb imul pushf es roll push int3 jb outsb push push add adc fwait add jo in dec cmp add sti cli dec cmpb xor jecxz outsb xor add lds out mov insl lret adc roll adc jge pop incl and jg add cld in gs mov (bad) in sbb andl negb xor inc inc push and mov cmpb push add dec or sti sbb nop dec ljmp jmp mov loope cmc in push adc pop dec fistl add push pop call cmp subl inc andl sub (bad) cmp cmp add in push add stc jl add inc and fsubp fldl repnz pop jge test movsb and hlt cmp andl cmp icebp stos (bad) mov shrl ret sub loop pusha mov test test pop ss add sbb push jo push in ret jmp out jle rclb and mov push xor mov or mov cmp add ja dec mov jbe jno adc add mov (bad) xor jp push add and neg shrl jb add mov cs jo (bad) lahf pop dec cmovno xor sub scas add and (bad) testl (bad) xor jns add pop push leave daa in in xchg xlat sahf push mov pusha lds mov dec jle mov pop push push xchg xchg ja andl rolb pop dec xchg loop xchg mov pop rolb leave add or xor mov aas repz js inc cmp popl test add cmpsl cmp jle lcall subl mov in cmpsb lock lock cwtl add xor push popf xor inc sub iret push dec ret add bound or pop or mov add add cs push enter sub js lcall or dec rep ja add inc out fbld push adc pop rorl jp ss js mov adc lock mov arpl push jmp xor pop push or push pop jp mov (bad) popf stc stos dec sub repnz in mov int and aad int3 aas stc cmpsl outsl add addl fisubrl adc pop and in push addr16 xor cmp or dec xchg insl jne lret add jns mov cld xchg or add (bad) call mov mov jno or add and cmp jecxz add insl (bad) mov xchg mov in add pusha cwtl cmp pushf shrl cmpsl jmp sub jl xchg xor loop mov xor add lds jbe cmp je inc push dec dec pop cmp add test jne outsb sbb xchg bound and es dec aad jg xorb mov insl mov push shll in enter mov xchg shll dec test sbb fiadd mov iret adc cmpsb call arpl (bad) cli mov add mov cmp pop scas mov add bound aaa add clc imul jl xchg adcl and cmp or divl out push loopne xor mov or in iret xchg add pop adc sub sti nop rcl xor and mov inc mov loop jle (bad) pop sbb or and mov xlat add hlt add inc cmpsl out call ret mov mov sar je inc mov enter xchg pop jg inc add js cli add mov push add idivl pop add data16 mov xchg xchg adc sarb inc jne jno lock add ja insb (bad) shrb jnp jae test imul adc xchg add pushf mov and inc outsb loopne sahf das dec add push rorb mov cmpsb (bad) or addl jmp popa dec jae sbb add cs ja adc add (bad) sarl icebp add and mov (bad) mov jl or dec jb mov and cld xchg jp inc sub test push fs arpl add inc pop jecxz in data16 add and jmp and rcll fcomp lret ljmp cmp sub sbb aam inc xchg jno lds test xchg and out fisubl mov lret (bad) mov add mov movsb stc add xchg adc mov (bad) out (bad) int jb add pop out fst push cmp xor test add lret adc and mov and dec fldt adc pop jno pop xor not (bad) sti cmp movsb nop jecxz loope insb and roll in out out xor daa xchg add mov ret lods cmp push jg xchg pusha adc outsl fild inc mov and mov jl inc push add mov add mov adc add sbb mov js jnp push or in inc ret inc mov pop add or pop inc js test add jnp in add (bad) inc in sahf sub jno mov outsl test data16 mov aad add cmpsl jp add adc add jb or jns mov jbe icebp out pop lods jmp sbb es mov or movq cmp int3 sbb pop ret xchg cmp jmp pop clc test add xchg out repz (bad) lahf movsb mov xchg mov pop ljmp ret dec arpl (bad) lret jae mov xor add cmpsb inc add (bad) pop lock nop adc or xor push xchg add and push je stc outsb mov sbb lret pusha push pop adc push pop testl fnstsw jne mov add dec mov add inc and push pop and iret sbb lcall loope mov movb mov jne mov sbb popl (bad) mov add lea call (bad) jmp sub orb xchg jp roll mov pop jge test fidiv jp push sbbl push push pusha push test scas xchg int xchg inc and add stc cmp jmp inc add adc sub jae lock dec mov cmc jmp (bad) in movsb xchg pushf insb nop mov pop fbld cmc mov pop cmpsl test je xchg out mov inc clc jo jno mov push and mov subl jo or add push xlat or stos insl gs add sub pop (bad) sbb inc pop movsb cmp dec mov pop rorl push jne cmp push sub stos xchg in dec add in sub mov cmpsb sub ss mov xchg je sub jnp adc pop shrb cmpl (bad) js dec xor pop jmp incb jb pop scas fildl adc stos call adc sbbl rolb xor jae mov add lea out pusha stos jmp call or cmpsl xchg mov repnz ljmp xor rorb sbb jp add cwtl clc gs pop mov mov imul pop cltd or xchg (bad) mov add in std cmp sub xchg jno add push fistl add or std mov dec or out add xchg stos rorl test mov mov call lret add scas mov jg ret rcll stos rorb jo enter add xor and xor add aas ret cld scas cmpsb movsb mov jbe or sub xor mov and jmp int std lods cmp repz (bad) testl cmpsb jp add lea jle jb add repnz adc or add pop lret dec push repz xchg jo lods in fiadd cmp orl add sub mov add add jmp inc mov mov outsb inc ja pop fidivl mov inc shll add out xchg clc rclb sbb jae add cmp (bad) sti cmp add xlat pop pop (bad) outsl add add incb movsl jnp fbstp adc ds outsb fs add stos cmp adc sbb push lods cmpsl add jmp jge lds jb add sub add aas jnp lcall dec arpl jmp cmpsb mov ljmp sahf mov add cmp cmp inc pop mov cltd xchg jae jg add inc aaa adc pop mov sub adc cmp adc nop or xchg pop mov xor fsts addb mov daa jl ja add fnstcw add mov hlt add or dec lods inc push fwait jbe add ljmp sahf imul mov outsl dec add push (bad) jecxz push or mov popf (bad) imulb cmpl xor ljmp aam add pushf out jge adc add sbb mov dec cmc xor daa mov test js outsl pop xor test sub xchg ja add int mov mov add mov push push mov pop test jne jb lret js pop out paddusb dec fisubl lret lahf jo push and orl mov js and cmpl lret add jo mov pop jo int3 push pop stos es icebp mov jle enter pop sbb add xchg je jne subl fcmovne shrb test scas (bad) sarb add cld adc jmp or movsl (bad) insb (bad) jns les andl into push xchg adc testl dec push enter xchg aam mov (bad) je test push mov ret add xchg add push adc call dec incl pop stos (bad) ss popf push dec or xor inc jne int3 mov scas fwait sbb lds popf fisttp and scas add or add add imul inc outsb rorl pushf xchg mov pop lahf mov nop je cmpsb inc sbbb inc add add bnd cltd and push add ss mov add pop inc out sar int sub or mov dec sbb push add insl xchg add push (bad) inc js mov rolb lcall int3 xchg mov je enter xor mov shl arpl xor xor xchg add pop in mov fiaddl xchg mov sbb scas xchg jae push mov and pop (bad) sbb cmp dec adc dec fsubs add push jb pop nop or mov pop movb push scas subb (bad) push push insb or sub jns outsl cmp mov loop push adc add sub pop push pop mov lret adc add ret fidivrl xlat repnz inc stos rcrl idivb cmp add adc push mov push arpl les test roll add cmp jno add jno xabort (bad) cmc pop mov retw out add jno or icebp mov test mov pop adc stc xlat cli xchg fcoml out add or jno in movsb ljmp pusha cmp jo cmp push jne xlat xor (bad) lcall mov cmp loopne rcrb mov pop stos (bad) mov inc push cmp xor jmp add cmc std lret xchg add mov loop xchg and xor pop mov push jl cmp add mov inc mov (bad) push aam sbb push inc inc in lret pushf test cmpb jg inc les aam loop in add or fnsave add mov enter pop std cmpl sbb xor cmp (bad) lds movsb gs inc mov add mov xor std mov add adc sub pop add cmc mov pop lea mov pop mov push jle or imul (bad) fdivs xlat adc inc mov popa in xchg and flds orl jne fiaddl outsb mov out add insb add inc sub or outsb es movsl add das ja mov fs and mov or jbe test add cmp test pop mov inc add jb rorl int3 sbb xchg cmp and mov js mov js call imul push mov fdiv mov add xchg (bad) outsl (bad) and fcmovnbe jb pop xlat and add push or out lea mov fsin jo jnp add sbbb jg rcll pop int3 add add or xchg add clc jecxz es fldl jae jmp jb sbb shll push stos dec lods dec lahf lds sub xchg cwtl add lock xchg sub adc add inc std add mov jecxz sbb mov push xchg pop gs pop addl pop pop sbb fs test add stc imul out push inc xchg sti pop inc xor add lret dec sbb imul lahf mov dec xor mov push lahf (bad) adcb mov jle sbb add (bad) test jmp stos add push cld inc add sbb xchg mov adc mov aaa daa std sub ret in xchg jne movsl dec fidivrl pop pop dec mov jbe aam (bad) ss test ret inc adc pop add testb cmpsl pop lods das dec (bad) cmpsb addb mov push mov or popf add mov movsb rolb icebp dec in (bad) fild add ljmp dec pushf or sub add jmp sysret xor cmpsl sahf xor rcrb add aas add push clc xor push je jmp les jp xchg fsubrp jo xchg xor pop cmp aam movsl add in inc fstp xchg add lret or add pushf jmp push add iret call icebp pop nop mov clc imul fdecstp out lds das mov cmpsl cmpsb and pop stc jb or pop add add ja push xchg icebp and int3 add cli notl daa mov testb std mov popa movsl mov jbe je repz sti ret call fldenv lahf sbb test push fucom hlt (bad) sar pop add cmpsl adc add in mov sbb rcrb dec and inc push mov dec inc sub xor mov outsb pop sbb mov test neg fadds jae jne fisubrl add push cltd xor mov cmpsb popa out pop pusha (bad) mov add xchg jns dec loop mov scas inc cs outsb daa add mov fmull jnp add jmp jl cld stc lcall cmp jge sbb je add dec fwait or test add add loop (bad) pusha out add mov les rcll pop scas jns cmc mov mov adc mov addb insb pop jb xchg jns mov mov add lods std jo lahf cmp sbb push push xchg add cmc or pop xchg nop mov imul push mov popf popa push lahf stos sbb xor icebp mov push lretw iret pop jo add add inc inc inc mov outsl and sbb add popf insl lret and jp sbb jl (bad) adc fxch pusha aad mov out inc xor jo jp add adc out mov push pop lds inc arpl (bad) outsl mov jp imul sbb popl and out cmp adc ss or gs add add nop pop or aad add mov push pop ret nop cmovbe rolb mov xchg mov jge jmp push (bad) movsb mov xor add cmpsl push iret cmc out mov inc mov mul add mov out cli add jle mov cmpps mov imul mov dec push dec and pop (bad) pusha mov stos add push push and mov push js sahf repz add loopne cli jp pushf xchg les (bad) adc stos xor mov xor mov int dec add shrl in fistpll add xlat pop sti syscall mov push sub sbbl mov sub lods arpl dec orl cmpl enter pop fisttp nop ret sbb sarb cmpsl sub adc repnz ja add das sbb add fldcw bound jb add sbb lods push mov insb add add push movsb and xchg xor jecxz insl add sbb lods stc adc stos pop or imul std add out inc jg iret icebp jl in insl add adc pushf subl hlt shlb lock mov mov xchg add push hlt mov fild cs outsb inc mov adc cmp imull add inc lods push mov add lahf fwait mov sub push rorl add add push pop aas in add cmp jbe jg shrl arpl xorl fucomip add push enter sub arpl out push add out xor xchg mov sbb outsl add mov ja lock scas mov (bad) sbb sub call call and out add cmp les add lds (bad) mov add xor js mov push xchg mov add mov fwait push adc sahf nop push rcrl add ror fisttpl in andl jle push sbb fstps rorb adc adc gs mov (bad) rorb mov jmp popa sub cs add jae mov data16 in push or subb mov jp scas jns mov add fnstenv add les and out hlt stos cmp jno test add into cmc pop test (bad) lock stos mov mov (bad) lret arpl imul inc rclb adcl sub add mov inc sbb push xchg stc test pop jo and and scas inc mov inc push subl inc jnp cmp add addr16 movb fistpl mov adc adc add pop pandn mov add in jb sub lock inc subb in pop data16 in movsl or fs xor cwtl jmp sbb dec pop and push add sub cmp lahf or gs and mov pushf fistpl mov and mov gs xchg out xor xlat cmp push add mov jne ret mov add pop sbb and mov decb ja jo jmp inc loopne clc add lods and cmpsl jg movsb mov or add mov daa addl adc adc faddl or adc add or arpl je pop add mov addb cmpsl fistpll jle push orb in fidivr test add cmp jp (bad) dec insb dec sub sub mov popl scas pop inc cwtl (bad) imulb or jle jecxz xchg pusha clc xchg ds mov add pop xor and mov fistp out cmpsb mov jecxz push add (bad) pop stos int3 inc negb scas pop adc xchg mov and or aad inc add adc addl data16 pushf dec arpl loop xor or sbbl insb lea cmp orb add push mov mov (bad) enter mov jnp bswap fstps add mov (bad) mov xor xchg cmpsb add fildll stos fdivl add imul dec loope mov aaa or (bad) adc jo add and jg add mov (bad) js push mov push daa xor lret cmp mov jecxz in out inc inc lds dec pop sub (bad) push ret int3 jl jne mov lret cld rcrb lock sbb inc add sbb pop mov pop adc notl out add andl scas pop int3 add cmp mov (bad) cld (bad) aam add xchg lret sub sbb add cmc adc add or loop je add push xor jno add pop (bad) and orb in mov pushf dec cld add je lret inc pop js popf xor inc jge lcall jne push cwtl mov add pop pop push mov inc add mov pop (bad) or pusha jp scas (bad) xchg push xadd mov xchg adc or or or das add into add stos dec (bad) sti movsl out in les inc js cwtl mov mov push loope or push sar xchg mov fistl pop add mov ret or outsl test mov adc movl cmp inc aad pop cmc jmp js add lret xchg push insl mov (bad) xor divl cmp xor les das aam mov xor add ret mov add (bad) repz add daa mov inc and lock cmpl pop push jecxz mov inc xchg adc dec lock pop mov fdivs inc mov xchg incb lods mov jl inc xor mov outsl rorb jb add jns push popa mov cli and mov xchg sub dec leave xchg dec popf sbb push add mov inc add rcr sub xchg add fwait loopne inc add xor inc fildl clc test add adc add (bad) std ret xor or add jnp mov jbe loope sahf (bad) mov add jg pop add popf fcom xchg push (bad) and and icebp mov js je mov adc add push jle stc xchg sub dec or dec ja pop jno add xchg jo sbb in ljmp cmp and jae mov dec sbb add pop lods mov add aaa push adc imul cmc inc pushf shll add cmp xor je hlt je xchg push mov xchg movsw jbe xor add fbstp push js or ret xor pushf out (bad) mov (bad) and add dec in lcall fnstenv xchg add mov adc cmp jb cwtl into jae add (bad) mov addl ret add inc pusha mov add or xchg mov jno add sbbl or aas add pop mov push ljmp add pop (bad) cmpsb push outsb mov mov (bad) push xchg into jns lret fwait add xor (bad) jp xor pop jg jae lret xchg pop add je std stos or add inc popf mov fucomip das jns popf (bad) movsb add lret daa sbb and ret cmp and sti add test rcr inc dec or add pop mov ret push cmp mov arpl test xor popa cld leave xor push or push add inc and pop or fwait iret push sbb test push jbe pop add sarl or movsb iret push jne fisub mov push das cld pushf xchg add daa xor bound dec jbe add int3 fnsave arpl add sub out pop sti push mov or imul jb fs dec jns push mov xchg mov mov lods add clc imul xor adc push adc lcall mov lahf scas add mov jge mov adc loope sub subl pushf dec inc xor pop mov lds sbb pop cltd mov aaa jbe out push arpl sub add ja push and cmpsl adc sub sbb dec mov jp inc pop jbe aad fimull je dec pushf mov decb add testl lret add bound test scas xchg add (bad) mov cmp push hlt dec addl add add mov pop out and push add js aaa push jp pop sub xchg and inc jo (bad) fwait cmc add (bad) mov adcb stos add jb repnz cmp push aaa mov and add fidivrl add mov (bad) pop jns add ret add sar add add add ficoml jle push add fild (bad) sahf sbb push mov add sbb mov out lds sahf fwait leave push repz add ja xor mov lods dec scas loop daa pop sti inc xor imul repnz fld add xchg adc xchg cmp outsb sbb xlat lcall test push jl sbb add (bad) mov add add push xchg daa mov sub (bad) aaa adc in jb push and xchg dec mov imul cld sahf add icebp aad mov dec add ret int mov lea repz das popa js mov popl mov push jns add xor add inc dec in push sub mov cs insb ds (bad) es adc rep sbb lret icebp add (bad) arpl jbe dec add jmp lock out test dec hlt add mov jg ficoml fistpl add push pop xchg sub jecxz shrl push int xor mov fisttpll jb jecxz add mov cmp negl adc add mov push add ret xorl js mov push add std inc mov cli cmpsb addl imul sub inc inc pop scas popf cmp lret cmp ret sahf int3 pop pop xchg dec rolb mov mov test mov inc jle outsb adc lds pop insb xor fcompl cmp (bad) xor leave out xchg push dec push daa pop add mov add dec inc push add aam addr16 loope lret jge outsb mov cwtl aaa push xor lcall es testl (bad) adc mov mov ss testb lcall xchg (bad) and adc lret stos push inc sahf pushf mov xlat pusha sbb lahf flds loope mov out jbe daa xlat add inc xchg fstpl pop xchg mov sbb pop repz imul stos jge es stos andl cld dec sub stos outsb insb addl rclb test push cmpsb pop xorl mov add iret clc fild and mov add and insb insl or les jae jl out (bad) cmpsl xchg inc and add xlat pusha ds push test add out lcall out xor divb sub jl add inc cli imul pop xchg data16 pusha sahf push mov pop out dec lcall cltd xchg add jbe es test sbb mov cs push cld xchg xor add add out and add inc sbb pop and xorb jo jmp sbb mov cmp mov add hlt adc xor mull fs fwait inc jb push add adc push imul push out arpl rcr add sbb enter add scas jb sbb in add cmp das push sbb fldl xchg or aaa inc mov (bad) mov add dec add call jp add sbb sbb cmp jmp js in int inc push add iret adc repz sub stos cs lret mov into in loopne scas mov mov lods add and into ja add mov inc dec imul (bad) aad popa add adc mov and xchg and mov stos jecxz pmaxsw sti gs ret sahf ja xor add xchg pushf js or sub inc (bad) repz add sbb mov or fidivrl inc stos add adcl sbb jp dec pushf mov jae rcl pop dec push add jmp adc sbbl mov fldcw test pop incl rcll cwtl mov and push jg mov push lahf inc arpl addr16 mov cmp cmp xchg fs aas xchg fwait div sti sbb mov out push stos lcall dec mov ljmp sbb push mov push je xor cmp or add mov lods lahf adc ss sbb or adc mov or das in imul add sbb add into jns shr sub xorb jg aaa push xor pop mov pop fldl jle jmp jo andl je enter sbb dec or hlt inc and dec add mov sbb lods xchg xor aad pusha loop scas les xchg (bad) stos push xor push dec roll std add fwait push movsl adcl int3 stc cmpsl aaa pop popf hlt jne pusha mov add cmp xchg add imul out inc mov xchg pop sbb mov mov pop leave jmp mov jl jo mov les add fbld jge subl jbe mov or dec gs adc mov cmp add mov add (bad) pop xor ret (bad) add sti lds in rcl add inc inc fwait add xchg mov loope scas pop nop movsl pop sub xor sub push pop mov push jb insb add call pop xlat sub repz add push cmc jns movsb sbb sub mov ret mov push jl add cltd adc mov addr16 call data16 add fisttpll out cmc add out lods sti xor mov (bad) mov cld cltd pusha mov mov mov inc jns movsb or fisubr movl daa xchg add mull je dec std add and repz incl jecxz mov shl rorl subb sbb ljmp inc push add movsl lock (bad) dec mov jge,pt add out dec sbbb add in cs cmp dec mov fnstenv add push imul out or sahf jecxz insl into aaa push inc cmp jp push xorb mov pop push ficomp cmp dec in (bad) push jecxz add stos jmp lods add mov dec push rolb xor mov jb testb lret in mov insl fbstp aas or dec jmp dec popa jge mov ljmp ja jmp pop scas scas cmpsl add xchg dec jo adc and aam incb mov jns stos xor pop add push stc inc add (bad) mov push out repnz push lods inc and jne data16 mov loop dec adc fiadd outsb add mov sti repz in inc out loope fimull test mov sub pop js push mov xchg arpl and test lret add dec std mov loope add mov push mov mov es insb (bad) jb and test jo xor add mov inc orl scas pop je jbe scas mov dec or and adc iret xchg inc mov mov or hlt pop push add jl stos out mov (bad) mov ss out insb (bad) int subl out enter pusha arpl sub (bad) xor jle add orb pushf (bad) fmulp add push push dec mov sbb popf (bad) and add cmc jno mov dec xchg out mov or or and rcll dec sub or fiaddl xchg inc daa or xchg lock adc andb test in in jmp xchg mov lea call cwtl jns or icebp inc es ljmp cmp mov jecxz aad test pop das call leave inc sbb mov jp add in push or sbb dec js (bad) mov sub leave add (bad) or aaa in insb lea or cmp xor pop in inc pushf addr16 mov shrb lret movsb mov sbb bound jecxz inc imul xlat into mov add push add scas pop clc push imul repnz mov sub sbb adc jmp (bad) das ret fs leave jnp jl adc add out fimull rcrb cs lahf jecxz,pt cmp (bad) mov jb mov and jns movsl xchg cs sarl xchg ret push jbe pop jae out xchg mov imul stos dec sbbl add sub fcomps dec out add add lcall mov cmpsb or sbb xlat andl fwait stos js cmp add pushf dec cld fsub mov mov jge mov nop or add lods leave inc shl jge mov imul push jmp mov inc xorl add rol jns sub fisttpl adc and stc mov add pushf inc mov dec mov xor inc add push aad outsb jae mov pop bound nop jg add aam jmp add xor add cli pop cmp dec (bad) ficom sbb call dec test jns xchg sub shrb outsb ss xchg xor mov jmp fwait iret dec test jp push stos movsl (bad) xor jmp enter (bad) pop xlat and jecxz sbb dec jo out (bad) jnp (bad) sti in (bad) xor add fisubrl pop fnstenv mov test not cmpsl cmp xchg (bad) inc ret mov ja cmpsl mov hlt dec push xchg inc lock (bad) lcall enter into scas (bad) mov cwtl adc clc cli in adc inc add jge movb flds mov mov add lods inc out inc dec pop and mov aam hlt stc scas add xchg movsb js sub stos pop stos arpl jecxz mov hlt imul loop subl pop jl out add frstor add sbb dec jbe pop sbb cli inc jl aad outsb push mov inc add sub pop adc mov cmpsl lcall dec add inc fcmovnbe out inc add jge cmp test repnz pusha pop or lahf mov sahf aam je aas sub mov (bad) mov cmpl arpl add das repz pop sahf adc add insb add mov dec sbb (bad) fstl xor add jecxz rcrl adc xor and inc int3 sbb js (bad) cmp jae repnz clc push outsb mov push ficomp mov out mov jle add push mov mov adc daa sbb xor jecxz sbb aad aam sahf jne ret repz adc adc sub inc leave jno add xor pop add repnz jb xchg dec add aaa mov add sbb cmp popa lods subb (bad) lds jle sti add and shlb mov dec add dec push cmp call loopne cltd add outsb cmp xor mov cld jno sbb orl push push aas and in out sub fiaddl movsl rdtsc xor add inc neg sarb ljmpw int sbb (bad) xor lock mov (bad) mov stc bound das je (bad) xchg fmuls hlt push inc dec lret pop rolb jns push push mov out int3 sahf xchg xor pushf lret jg push testb data16 push jae repz xchg sarb or xor sti scas imul add inc or add mov or fisub orl add das mov and mov inc in sbb mov push pusha outsb or imul pop (bad) pop popf and add lods das xchg cltd sbb out jmp push lea add push inc xchg in sti jp cmc push out sbb ret pop add inc mov bound sbb lds push dec mov inc inc int inc sub or cmc test add add dec inc push mov xor shrl cltd cli rcr add mov orb xchg aaa dec popa sarl add sbb and arpl test or cmp lret inc insl dec fmull mov xchg ror xor push (bad) rcl aaa pop mov sbb add adc jo add jg stos mov mov push dec mov xchg push (bad) pop dec add xlat dec inc push (bad) add repnz xorl bound scas (bad) xchg sub and mov jmp in ret ljmp xor adc je xor xchg in sub pop pop lahf mov lcall fwait jbe incb fadds rcrb aas roll cmpsb add xchg push inc cmp mov outsl push xchg fnstcw or int3 mov test cmp jle js mov add add out mov jge or inc sbb gs xor outsb adc movb lods cmp add push or int mov in or cmp rcr adc test mov movsl fisubl rolb adc add jnp lret push data16 jno sub sbb mov sbb push push lcall jge or mov sub xchg call inc fnstenv (bad) pusha sbb mov or jmp (bad) in pop movsl (bad) cltd inc jecxz shll call jecxz dec jne add aam fcoms xchg out add push pop hlt add in scas jge cmp cmp imul dec add push add fldt push pusha or pop mov insl pop or sbb aad adc xor dec cmpsd js inc xor mov inc pushf jecxz fidivl mov mov add lock pop add movsl xor and dec mov fwait rorb jo xchg or stos int3 sub add push xchg (bad) scas xchg jno inc jns ret shld pop adc mov jb repz lock push cld sub sbb aas add or add icebp in xchg xor mov cmpl je sbb add jb,pn sub add mov arpl roll imul add xlat aas mov xor test and mov stc add and xlat jp and je mov push add out xchg out mov add mov dec lea test mov test push pop jp mov cmc cmp sbb mov xchg cmp jl inc cltd lahf or (bad) jne test leave mov pusha xlat mov add icebp and rclb fs fdivrl add stos inc sub xor packsswb leave rcrl cltd gs ret lock mov cmp (bad) adc pop add std stos in pop add fidivr mov rcl pop imul mov jo mov enter xchg out add xor add test add idiv in (bad) aaa adc dec arpl jae dec pop bndstx xor sub stos add push or xchg cltd add mov testb sub test arpl adc xor ljmp rcl mov cmp add mov pushf mov loope push repz (bad) rolb test mov pop cmpl mov lds enter std pop (bad) xor push mov outsb mov mov mov pop les mov add popf (bad) xchg adc add mov movl (bad) pop push mov push xor mov adc jb xchg daa testb mov inc jo ret pushf lock addr16 stos mov sbb mov bound (bad) and pop add mov js dec add int3 in inc jle xchg add lock sub pop pop dec jnp sub add dec pop add jne cwtl cmp sub andl sub cmp into pop xlat mov and cmp jmp mov test add pop int3 mull mov add enter xor addr16 test rolb mov pusha mov mov jecxz aad dec push or (bad) lock out jle inc sahf cmp outsw std cltd aas cld cmp xor xor xchg iret push mov push xor (bad) (bad) dec jbe lret ss mov mov mov mov enter repnz std add push out pop insb cmp jnp add and mov into test add (bad) stos scas sub adc lea nop sbb (bad) aam and add icebp lcall fwait add (bad) mov add pop nop fldt adc jb in sbb and lea aas nop add push mov stos cli aaa add daa cmp (bad) xchg out hlt dec andl loopne xor (bad) daa js add (bad) mov add imul adc pop or mov inc pusha push in scas (bad) mov inc lods (bad) mov add arpl sbb aad iret fdivrs orb push (bad) cwtl popa jo add xor shlb test aaa into adc mov rorb cli (bad) mov pusha pop adc xchg push insb xor adc adc sbb push popa push and inc pop dec cmp add loop add fldenv ret ss jb dec cmp repz pusha mov add or (bad) (bad) mov pop add hlt mov inc add jl adc in cmp cmp pop mov mov add xchg jne pop and das jle push mov ret clc adc cmp add imul scas int3 adc mov xchg jno push rcr and ret add outsb push fild (bad) lods jle add mov adc add add jne lock loopne sbb leave push test call bound cmp and xchg add push inc push orl jmp popa inc mov add hlt ljmp add test adc or pop cli sbb or movb push add ljmp and pop out aas shrl add (bad) mov add pop sahf adc repnz test jg add mov push mov add in cmp xchg xor andl adc adc shl cmpsl repnz mov fxch sbb (bad) sarl cs add repz sbb or andb fwait leave pushf xchg adc cmp sti ficoml push cmpsb sub dec jle aas push cmpsl push push clc jno sub addr16 inc pusha xchg xchg cmpl xor pop leave cs lods pushf xor sti jae push arpl sbb (bad) adc add xchg mov out clc sbbl and loop sbb fisub add aas cmpsb imul sbb or pop loop mov shlb (bad) fisubr mov and mov or sahf mov pop lcall std pop xchg or add jne scas hlt mov sbb jmp test cmp xor sub and pop addl push pop daa repnz xor (bad) int3 sub jns adc mov adc adc inc lret or add inc outsl fldt xchg cmpsb mov add dec adc add dec ret push jl adc add cmpsb jp add xchg fadds mov mov movups outsl out fdivl iret pop fcmovnb mov pop pop sub call stos add xchg add cmp mov mov das pop pop cmp inc cs imul mov jmp inc dec rol add jnp dec lret xchg sub loope pop push jp fild sub jle xchg aam insl add ss jecxz and jae pop xchg aas daa fistl pusha push and xor (bad) mov fistl xor cmp jnp jo andl lods das orl pop or cs xchg xchg sbb and cmpb sub xor dec repnz clc ret dec imul jge sti fstpt cmp lea jb es pusha add sahf add ds jmp dec rorb dec sbb inc sbb adc add scas js into loopne add mov sbb std dec jmp cmc addl imul dec cltd push xchg cmp xorb out sub movsl xor add adc xor inc fcomps add push inc jns shrb xchg (bad) pop jo jo add inc dec jge mov (bad) cmp sbb jecxz add movsb dec sub jle inc sti xchg jae addl cs nop push push sbb cmpl adc (bad) sub add xchg jns jge add ds sub cmpsl mov add (bad) sub test (bad) jle mov pop sub addr16 push dec aas cmp or dec out andl (bad) jl fldt pop in mov mov inc cmc dec fnstenv sbb lods cltd aas add add push fisttpl pop lods add scas dec lea les test adc xchg xor push test xor push out icebp subl jns xor push and push push decl xchg andb leave pop mov push sbb xchg lds scas add cmpl lret fcomps testb ds (bad) mov in add psubw and jge mov cmp add mov sbb dec dec sbb icebp repz mov mov sub stc add cmp aad mov jns test inc dec adc cltd mov xchg fldenv dec (bad) std sarl pusha jge dec nop mov cmp add xchg and flds int3 xchg push and and jmp jle pop (bad) or stc rolb inc mov test cli adcl in xor outsl mov xchg cmp inc add fs xchg inc inc test add lea aaa cmp insl cli jge sub and pop sbb fwait pop mov imul hlt jle add into mov xchg sbb sbb cmpsb cmpsl sahf leave cltd das add scas pop mov add cmp test jge lret cmpsb (bad) pop jne add movsl and mov xchg pop inc and fisubl cli test out xor jecxz movb test loope push adc push cmp and add test adc mov pop jb add pop pushf or xlat jnp mov sbb cmp movsl add cmp fadds (bad) jbe or ja mov lahf out and pop mov mov insb mov or pop out xchg je push test push sti sub sbb mov xchg jmp add add mov xchg mov jbe xchg sub sub popa flds jecxz movsl adc out lods cmp sbbl lds faddl aas cli inc outsb out xor stos xor mov lahf shll push scas add int3 sbb cmc mov jge mov stos adcb push je jge cmp push ss int3 insl add xchg xor xchg jae dec (bad) repz add test jno rcrb pop fstl gs jg sahf jge pop pop inc addr16 sti arpl dec jo cmpsb insl lret data16 pop imul movsb push ret ficomp lock cltd pop roll cwtl ret xchg out pop shrb sub ljmp lea jmp ljmp xchg add pushf ja add imul (bad) stos lock jo add aad and push loope add int mov add outsb test in add popa iret mov addr16 (bad) xor cltd out mov daa inc mov mov cmp hlt and lods (bad) mov nop sub loope shrl outsb or cmp sub int3 leave adc frstor dec cmp test addl jge (bad) jo stos cmp inc stos ljmp xor add or aaa cli sbb dec rsqrtps sbb mov mov mov outsb push push xor or or into pusha fdivl mulb inc int lahf jle inc sbb movsb pop movsbl sbb mov shrl sbb stos push ss adc xorb scas xchg inc es push in pop lds push pushl xlat push loope and or inc cld inc mov add xchg mov lcall sbb inc scas mov mov scas xor and test adc jge rolb loop dec clc ret lret mov jle andb mov iret mov xor and fs add jbe sarb or stos mov in (bad) jae jno scas add adc jnp adc mov push test inc add mov add mov lods add dec cmp loop out mov push mov or enter fldcw mov xlat das mov jle mov popa (bad) jg shlb (bad) in (bad) jecxz pusha xor pusha test in or int outsl into test imul lret das add jmp idivb subl cli mov add fldpi cmpsb loope les inc inc aas push jle pop add (bad) ljmp or (bad) push cmp push add sbbl into dec sub pop sbb mov clc sub fstpl dec subl aaa in loopne add push hlt test jl dec adc pop in pop add sub jne les popf in andl pushf sub (bad) mov out pop (bad) lods push push and xchg nop xchg add cmpsl popa inc test push (bad) sahf fucomp lret add add pop testb icebp cmp add pop push mov rep push add fstpt out movsl cwtl das sub add jae lods add ja into movsb or jb icebp dec mov and sub add fist imul xor cmp sub clc in call fbld leave jp data16 cmc cmpsl push dec in sbb adc shl sbb xchg lret (bad) jmp test add int xchg movsl pop jne add push pop pop adcl mov adc jns bound adc sbb mov mov add test mov cwtl jns cmp imul xor (bad) or imul cld testb andl out and addl sub cmp push cmpl dec add cmpl test addl mov dec call mov or lods cli movsl add push and add adc repnz sub push adc (bad) in pop pop add (bad) call mov cwtl inc xchg jle mov mov loope mov add pop push push mov add jno push pushf repnz xor cld cmp add pop and add xor add add das cli add repnz outsb popf sub add ja (bad) dec dec lods add icebp jb jg jmp xchg adc lea popa add movl into daa xchg imul test jno xor dec xchg subl inc push mov aaa insb movsb icebp xor add and adc aas mov inc pop inc mov add call add rcll dec mov mov lock rcl add inc int xor loop fsubr jnp rcl insb sbb add push enter test adc mov add popa psadbw repz ds pop mov jne gs test push add sahf mov cmp cmpl arpl or add (bad) enter sub mov mov call add clc push add push ficompl pop mov mov scas (bad) in mov jns jb inc cltd in sbb pop add in jo xchg sub pop mov (bad) in (bad) cmp push nop and icebp and jnp push add ret add inc ss add imul jno bsf in sub xchg lea lcall push (bad) test mov clc sub repz addr16 loop es adc mov and cmp fcoms and xchg lret mov in xchg ret inc sbb cs out cmp add fnop (bad) (bad) cwtl dec sbb mov jmp imull leave add ret mov mov lret pusha adc dec pop pop sbb inc push pushf push or sahf jg add lock push popf jnp inc mov rorl ret sbb mov push push leave add mull mov mov jo clc int3 or stos mov adc psrad push pop andl or roll jecxz into mov pop insb mov jae add (bad) fwait and lcall sub faddl xchg and push (bad) push aad add fisub int3 xchg leave jae lahf pusha test xor sti fwait xchg nop mov fst mov add add xor mov adc xchg out or loope fnstenv sub xor pop fisttp ja out sbb ds ret repnz pop push stos hlt pushf xlat xchg push mov cmp mov popa stos inc jb andb add scas jne aaa ds gs in jno pusha sbb mov ret (bad) mov and rolb mov push pushf (bad) mov hlt fldenv test add push (bad) fisttp pop jp pop pop inc or jecxz inc sahf mov add mov dec ljmp pop stos dec (bad) mov xchg aas mov sbb inc in bound add pushf pop test leave inc mov mov flds xchg add mov fs cmp xchg add cmpb fwait xchg aas test add push lock cmp (bad) (bad) dec mov mov rcrl ret add ficoml xorb dec jmp cmpsb pushf jae sub clc aam mov dec add sub test cmp loopne push xor je sbb cmp or xor sbb ljmp aam add add add xchg pop ljmp mov dec jge (bad) mov adc dec out icebp adc push leave in sub add cmp cli fild sbb jmp scas popl aam add mov testl push inc (bad) sbb jl js add mov mov lods adc stos outsl adc movl into dec push mov add lret psubsb cmp cmp sub lds (bad) adc and popa pop adc mov mov dec inc iret cwtl sbb add sub test fsts je jp mov mov push xor int (bad) pop stc js pop xor cld pop and loop ljmp cmp imul idivl add inc (bad) and pop mov negl js mov loop ret mov push jl xchg add dec (bad) add push pop (bad) and or push dec outsl xor rclb lret into js es mov push sub data16 jp sub rorb (bad) pushf xor jbe jge sbb cmp into fisubl add aaa adc add imul sub test call inc inc sbb push adc out mov xor pop jne xchg mov das mov fistl push (bad) nop (bad) jle in (bad) push mov push loop jne add sub mov sub scas push pop roll outsb mov stc cmpsb addl test sub sbb push jg arpl adc mov fisttp leave hlt jmp add add mov outsl adc into jo xor fldcw test mov insb push in xchg outsb rcrb inc (bad) xor pop (bad) aad lds jl inc xrelease push jle add inc cmp or in loopne pop inc incl dec ret mov add mov cltd dec inc add jae mov pop fisubr mov popa pop arpl push cmp pop inc out push cli movsb sbb cmp dec es sub xchg ror out jo roll dec (bad) xor test and sub pop in or push aam add rolb xor cmp mov leave jnp sbb cmpsb fidivrl xchg add in pusha or sub out mov mov repz pusha cs mov pop pop lods pop xchg sbb das sub rep mov mov xlat cwtl sbb bsr sbb push adc xor sub add sub and dec add dec out cli lcall shlb or xor xor cmp add cltd dec inc les and cmpsl into or dec out sub popf subl insb and inc add dec (bad) fbld xchg call adc lret add or adc or xchg dec (bad) sahf and subb cmp enter clc cmp add and dec adc (bad) add fs test add or push das cmp add idivl pop inc test add or (bad) les add pop arpl pop subl or dec jne mov enter mov and inc jns pop das xchg add add xor pusha pop int sbb lcall gs sub insl lock roll lret loope bound rorl mov into push lcall insl ret bound cmp cmp subl dec xchg hlt add orl add frstor fimull mov xchg je add movsl into inc inc mov or cmpl add cmp adc inc and rcr add unpckhps or imul mov (bad) fstps (bad) xor dec aas dec rol mov add cmp xchg lret test jle jnp gs mov mov (bad) and add adcl pop pop add dec cmp mov mov and cmpsb mov cli dec inc pop movsl mov dec jnp pusha xor jbe pop cmp test inc dec add xlat lret pushf mov pop int3 outsl and paddd sbb lea ljmp or popl mov jbe xor maskmovq divl mov addb jnp or jno jle inc mov mov and pusha jg shl push adc (bad) mov int3 sub add cld mov int movsb (bad) pushf cmp add jo mov adc adc add sub jno xlat mov lods mov jg adc jnp cmpsb inc adc pop lock test sub (bad) flds stos and sbb lods into mov into or and pop xchg add jns lods jp sbb inc insb lock lds test lret xor pop outsb push loop add dec inc jo jp popa sub jmp pushf mov push adc add mov (bad) or push faddl sbb cmpb push adc jecxz nop lds out pusha dec pop arpl call sahf xchg test incb push pop mov add lods add inc popa push add mov lret rcrb mov scas cs (bad) lahf push fild xor mov mov xchg mov jae cmc adcl cmp outsb pushfw xchg or aam sti add loopne adc mov adc or cmpsb xor cmp aaa cs dec mov gs or sub test shll add sbb sbb sub mov pop bound (bad) decl stos add mov in or aaa mov xorl push enter pop lahf ds add pop pop pop push add inc mov out push data16 add out bound ja std pusha in shll mov xchg xchg add repz dec xchg iret movsl xchg mov cmc pusha pop cmp and jno add and scas aaa leave sbb dec add dec sbb inc shrb cmpl cmpsl (bad) aas pushf mov pusha fisttp orl xchg and inc add sub popf js pop pop add jge mov fdivrs mov xchg or int3 add jecxz cli pop shr js adc add xor adc xchg fistpl jae lcall xchg inc adc xor scas enter orl and and jns out ret pusha scas mov cmp mov (bad) lods mov add cmp sub sbb (bad) mov push lcall mov inc or jge add cwtl mov adc popf mov in scas xor inc rol dec xchg pop jo or add dec push xchg jae addb daa imul and push sub inc fwait sub push shl dec icebp pop add lsl sub insl add (bad) inc xlat js,pt add aas jbe mov cltd enter push add mov in test add dec mov add sub mull jo jo add ret xchg add decl imul addl sub cwtl and (bad) mov ficoml adc mov ret dec aaa mov subb inc adc xorl add (bad) push cld mov adc and fcmovb orl rolb pop cmpl jbe mov int pop add repnz popf xorb xor test andb popf jbe push add stc xor cwtl push sbbl enter mov (bad) lock andb add nopl pop rclb adc cwtl inc orb nop or cmp and in inc jmp xor add aam pop lds add push jg (bad) (bad) mov femms jae mov outsb lahf xchg jmp mov mov pop dec add bound inc add cmc das aaa (bad) mov stc add xchg sub and insb lret mov cmpl cmp or xchg xor les jns icebp add fnop cltd add repz push ret cmc pop cmpsb (bad) leave aad dec (bad) jns mov push mov loopne adc enter add loope inc push jne std add outsl cmp popl pop scas cmc imull mov mov jle and cld hlt lds xor adc js xlat add hlt and pop or imul test into inc adc xchg (bad) out dec push cmc add rcr imul clc cs rolb nop xchg ret mov add push xor sbb cmpsl dec pop (bad) into sahf icebp sarb mov xor inc inc jl cwtl mov add pop add mov lea add and or pmulhw mov jg jns clc sbb out and lods push fs pop repnz cmpsl cmc pop xor pushf sti push dec shrl mov dec pop cmc sti xor arpl inc das sub test sbb dec fwait jmp add jno jmp mov xchg pop and xchg fcompl incb cli mov add mov pusha push cmpsb inc dec sbb or add add pop mov add fstp sub dec pop loop mov sti and mov adc repnz js,pn insl clc jl sahf add pop sbb jb add jge push shl xchg push (bad) jno add mov push or inc xchg int3 sub ja add loopne iret cmp mov test loope jno adc sbb pop or fs inc mov add popf cmp popl and idivl mov pop push inc push push repz jmp add push inc add ds aas adc mov mov dec pop mov xor hlt pushf mov les xor mov lret mov sub mov add loop dec adc pop push adcl mov jle cld bound (bad) mov leave add das push xchg hlt add cwtl repz pop sub mov rcrb mov adc scas push xor lock faddp popa inc (bad) out jbe lods xor roll insl inc xor mov rcrb push or fcomip (bad) xor xor add xor add imul cltd and sbb jle jle lds mov fiaddl push orl stc andl imul xchg add mov dec mov int3 jnp inc or or lock add rorl or jae cs xorl addr16 inc or xchg dec loop test xchg jae xor pushf adc fwait sub cmpsl andb loop movsl jl mov and mov push daa add sbb (bad) test into and and mov jg push mov mov aam add or sbbl outsb add cmpsl cwtl (bad) jb mov pop movsb push cld cmpl jo jno shll xchg mov add mov add sbb mov shlb cmp std inc dec xor xor pushf add cmp inc add imul aas lods pop cmp add jle xor push adc (bad) mov mov lahf push lret jg mov fldenv in aas pop sub add fwait lock push mov push aaa dec outsl add adc add popa pusha adc mov imul dec test roll mov mov pop sbb mov fldlg2 roll and pushf xchg mov pusha jno jbe data16 cmp lds inc mov sahf add add pop enter pushf cwtl pop test les inc jae inc jl pop push popf insb nop inc xor imul add push roll xchg loope in gs jne cmp and sbb mov mov nop outsl insl xchg out cmp into std cld adc mov outsl dec fs or mov mov ljmp popa fidivr negb xchg enter add loope ja fucomi mov loopne adc (bad) push add clc cmc fadds push add leave cmp inc cltd cmp add icebp imul adc mov fiadd xor aas or (bad) repz mov or pop push roll into dec scas and int3 lcall test loope dec jae test rorb cld in cmp mov push xchg sub cmp cmpsb lret addl (bad) mov sub (bad) mov jno or pushf subl add in xor sub adc mov in mov jecxz add mov xor jo jb jo (bad) sub inc (bad) xor adc pop shrb add push outsb add jne shll mov iret jge lret add and sub xchg add xor ss mov adc pop add imul xchg add dec in fdivrl test adc add insb scas movzwl (bad) movsb push fdivrl sahf jg xchg jo push jle jae int and dec add jl cmpsb jge cli push add pop lahf push push sbb pop cli mov jns xchg push fmull mov jecxz xor (bad) aaa xchg in jle addl sbb xchg xchg add mov call bound jne cmp ret pusha pop mov dec clc in ret or mov jo shrb or leave sbb push insl bound nop jmp mov outsb xchg push jae cmp sbb call (bad) dec jecxz pop mov cmpsb add mov lods xor (bad) addr16 fnsave mov fldenv inc or push push add fcomps andl enter mov jb repnz xchg jl jg add in mov fwait or xchg push lret punpcklwd dec sbb add aad add adc outsb lahf (bad) pop cwtl out lods flds adc xor add push mov outsb xchg lea xchg js fbld add push xor das pop add insl hlt jns pop fxch pop mov mov push adc fdivrs cmp add icebp les and inc pop test sti and pop dec inc lock loop les push or inc fsubs clc (bad) cmpsb test jno ds fild nop sbb rol popf dec add add fcmovnbe scas cmpsb lods adc ror add ds sub fsub inc jmp xor ja xchg orl nop in pop mov es and icebp push arpl jg repnz sub (bad) xchg cmp inc push fwait mov dec xor mov xchg sub in mov xchg and add shrb add loopne mov mov subl cld sbb push loopne das or (bad) orl xchg jecxz popf pop pushf cmp leave ret inc xor pushf pop mov mov aam add xchg xlat dec add pop pop jle addl popf mov lea adc je push pop cmpsl das cmpl dec sbbb pop mov xor dec jnp (bad) fdivrp mov add scas push mov add xor rcrb xorl fucomip xor insl add ret mov js in dec cmpsl sub pop sbb (bad) mov lret add ja sub mov push imul test sub sarb jae mov cmpsl or test movsl into scas pop xor (bad) in and add jo fstpt push jle inc pusha adc pop lods add dec loopne add das push mov push sbb mov and fadds loop test xorb adc call pop out popa lods insb add jp lea xor add adc aas and lock cmc mov js pop sbb cmpsl arpl push or fwait dec add lods test xchg jge (bad) xor add xchg push movl mov cmp push cltd mov nop xchg dec lods pop je add xchg sub sbbl inc ret loope inc insb cltd sub add mov je push sbb add and scas mov jl add je and ret add cld shrb cmp fsubl lcall mov ret (bad) negb aad pop jne push pavgw movsl pusha inc aas add inc cmp inc inc push stos add (bad) aad sub add inc fwait rorl dec ja or cmp add fistl fiaddl popf dec iret pop dec sahf or test add and push sbb mov add gs cmc mov pop sub fiaddl and or mov push pop push and aaa mov sbb or push cs lahf sbb loopne cmpb (bad) inc sti xchg add inc add leave jo pop aad mov mov sbb jg shrl and insl inc arpl xchg sub lahf inc mov and mov push jnp add psubusw adc ret inc fdivrl bound jmp orl out mov dec push mov bound and jge mov pop cmp rcll loop mov xchg inc add pop mov cmpsb xchg add je inc cmp test sub sbb cmpsb cmpsl jae in int adc in jmp sbb ficomp push jge mov aad shll add call xchg orb xchg enter sbb push wrmsr cmp outsl adcb xor adc dec outsb xchg dec add jecxz xor sub dec push add int test or sbb xchg xor and int hlt dec into jp les add sti inc lds mov push xchg lea and pop fdivl lret fisub jp add popa jne dec test pop nopl sbbl repz (bad) sub (bad) andb js pop pop cld jl out lret ret enter dec jle push push and xorb bound add sahf mov pop xchg dec fmul add sub scas std mov outsl add inc cmpsb mov aas inc jp insl or mov dec stos (bad) enter xor addr16 in lea ret sub xor xor loopne lods and mov popf mov add push mov inc jp mov or jle fcoml fwait inc pop das cld ljmp mov push lcall sarl outsb cltd adcb cld sbb mov dec and repz int sti notb mov fisubl inc mov inc adc xor jl dec repnz mov cmp pop xchg mov test cmp add sub mov dec mov add and add adc pop (bad) pop add add loope scas mov test repnz out addb mov pop lods daa ficompl cld xor mov jo test cwtl test loope and push nop mov fnstenv sub pop outsl pop aam mov cmp xchg adc add rolb add mov nop cs lods add push stos idivb add idivl addl imul pop xor jge scas add lret push in xchg adc idivl add add outsb push sbb pop xorl add clc mov test jno pop je popf adcb xchg (bad) or dec loope vpunpcklqdq cmpsb ja mov lock dec std stos xchg (bad) divb or or lret dec mov nop or cmc pushf add dec jge sbb imul push (bad) loope std hlt js sbb nop shrb xchg bound inc fadds and in add dec dec sub add lds cmc mov pushf add repz cmp inc in popl ljmp roll sbbl cmpb aam cld adc imul sub adc inc ja int3 leave loop movsb jl test xchg dec or add ret cld push cli inc add insb mov pop int3 rorb rcl mov mov addl addr16 in stos aaa js,pn and mov out movsl add stc aad mov cmpl xchg rcrl lsl mov ds repnz jmp arpl xchg pushf add push and imul ret mull lods mov movb mov or cmp inc sbb lcall mov in add lods sub mov faddl imul outsl out jnp addl pusha jne dec mov add mov (bad) in fild jbe (bad) rorb test add fmuls lea pop lods inc add es jg pop add sub add arpl stos push mov and fcoml mov cmc jnp xor subl dec sub insl jp int3 jnp jno add movsl dec cmpsb dec popw pop or mov cmp sahf add and xor imul mov outsl xor lahf adc add dec gs mov inc pop xchg ret dec imul fstpt loopne push sub jbe outsb cmp jg aad es add imul outsb fisubrl mov adc and jle xor cmp mov adc push lea sub stos loopne or xor das test sub mov popf in jne xlat por push jno xor in xchg mov js add mov int3 adc movsb sbb jp sub add lret (bad) and inc add addb pop jle leave add orb sbb out (bad) loop jb fisttpll mov addr16 adc mov mov neg loopne pop in and mov add insb ljmp in ja or mov sub outsb jl push outsl aaa pushf jno enter jbe inc inc movsb lods xchg dec scas add push fstpt add cmpsl jecxz inc leave hlt add (bad) ja and mov movsl in cmp pop popf push je imul (bad) xor scas pop sbb adc xor int3 dec ja arpl inc inc lahf int dec xor add pusha fimul test inc add xor pusha lock sbb out xchg mov push call sub daa cmp lods adc mov pop push clc cmpl sbb lock (bad) xacquire aaa add mov cwtl cmc movzwl add sar dec add pop fs add adc xchg mov add sbb add test inc fmul fildl mov rolb sbb cmp fucomip in lods mov push lret jecxz or mov jne inc fstl pop add out xchg cmp add repnz fsubl pop cwtl mov daa add xchg inc aad insb int mov fcmovu mov add jmp push pop aas add pop jbe push adc clc fstpl add call call stos in lcall jg and xchg inc pminsw mov leave je jo fwait add cmp testl push mov cltd stos mov add (bad) fistl add leave jne dec lea ja dec cwtl js push je inc push negl dec cli repnz dec inc insb iret or mov xor aas fstps adc add adc push repz push add inc jmp xor jbe and xchg mov std popf add popa pushf push xor fiadd das repnz vmovlps (bad) adc lahf jns gs push or add add push or mov mov add in clc dec loopne add repnz add jg mov lods mov add xchg add ffree movsl cltd daa sub dec pop or push xchg jecxz sub jb cmpsl adcl cmc jbe pushf out aad icebp cld cmp nop js leave lret in insl inc repnz mov fild adc (bad) adc add push mov test jne pusha add shl add sbb add adc repnz fnsave mov popf add mov repnz lds dec out push dec sbb (bad) mov mov sub fistp sahf add (bad) in mov arpl mov (bad) sbb jnp mov add shrl stos cmp lcall sbb xchg push add test xchg fwait jbe cmp add push rcr aam sbb add sub insl inc push repz pop fwait add pop push add or mov mov dec cmpb mov and bound (bad) cmp popfw push mov add stos sti fcoms push cmp (bad) cld jnp xchg sub dec clc jae add es adc (bad) lret insb or push adc adc xchg sbb aad out mov mov sbb jns cmp xchg das pop jno mov sti mov and jbe add xor nop push push add dec lds add mov jae push add (bad) adc dec sbb fmuls in pop xchg inc bound add mov (bad) lret add mov js sti add pushf popa inc ret ds add or push add lret xor dec lahf add xchg mov orb xchg or sub push or stos push sbb jns shll stos push in jno push lods cmp push cmpsb rorl cmp pusha xchg cmp add push sub in jge sbb movb jne inc test movsb add lds xchg (bad) pusha sbb pop xor test outsb pop mov mov dec dec cltd or lahf adc push (bad) lcall sbb push mov sbb mov jb add jnp adc movsb ficompl cld jge fwait mov add out fldcw pop (bad) mov mov dec adc imul mov pop daa pusha mov enter or mov mov mov fstpl mov fmul inc sub bound sahf std add jae fldl cwtl das pmuludq int add dec cs add or mov xor imul add adc sub xchg fldz mov jnp pop sbb jb dec inc xchg ror out add cwtl dec cmp loop stc jnp andb push ret jle dec cmp xlat dec mov es pop popa cltd push jmp cli adc add mov leave popf add sub lret mov xchg mov pop ljmpw dec mov fcomps jbe loopne add ret add fwait mov sub roll fldl sub cli add dec test enter add and cmc add into in pop xor push scas mov pop (bad) xchg imul stos hlt dec add xor xchg into mov push pop add sbb jmp add mov cmp dec (bad) ficom cmp add aam sub pushf leave push add dec jmp xchg (bad) out inc in push add pop std aad add push lcall xchg psubb cmp fiadd (bad) xor mov daa xchg add and iret cmpb scas dec mov int3 push sbb cmp mov js adc add cmp add mov jbe ret mov pop or popa and insl xchg mov fild mov add (bad) add repnz adc test add mull (bad) lock and xchg add popf push jae jo jecxz fdivl cmp cmpsb iret mov mov push push stc add (bad) (bad) fistl lcall mov out cmp stos pusha cltd jp pop sub pop inc mov andnps ret fwait sahf hlt push add sub sbb pop test inc push rol dec out dec aam cmc movsl mov outsb add mov or pop and cmpsb mov aas mov sub mov in add xlat mov push add push mov insb pop add add imul mov vsubss mov add push icebp sub add (bad) jb (bad) lahf ss aad (bad) je sti rolb or add mov or add in test pop mov add adc test jmp adc add xorl add and mov rorb test andl cmpsl mov mov js pop out je (bad) insl or push pop aas incb push jne popf in dec jbe xorl faddl jl add js aas adc pop es fwait xor fdivrs push cmc aam outsl pop inc popa sub lahf popf lcall shr je jo xchg dec mov add out mov mov addr16 sub andb data16 xchg jne add mov cmp add ss negl repz cmc and popf add dec movsl xchg jno or push add dec fisubrl jp popf testb xchg inc fwait ss add pop xchg or dec pop addl pop inc rorb test in out pop add hlt mov add insl mov nop (bad) mov sbb mov xchg dec inc or adc cmp mov test sub fisubrl (bad) xchg mov mov jmp in fs add (bad) lret jbe jns push mov push mov cmp cmp sbb and jae add test pop mov xor dec dec xor (bad) (bad) xchg jp xor out xor push xor jae lea leave add inc mov mov fisttp movl fwait popf das pusha mov mov idivl mov pop mov inc xchg js aaa mov adc sbb mov stc dec imul pusha inc push dec and sti add mov lret je or pop movsb jge add mov push ds mov ss sbb enter fstcw sub ret jne adc addr16 test push inc add in cmp cmp add dec dec xor mov leave sbb fs inc add mov jbe add jns xchg inc jge cmova sub dec mov stos jne fild cli cmp pusha and test mov pop fidivl hlt ds cmp into xor in add cmp push add shrb dec or add int pop jg cmp add mov mov sub aam pop stos sbb jne jno push sbb and sahf and push jmp fwait pop cmp test es xchg mov popl dec inc cmp and xor push in push fdivrs imul in sub sti pop lret adc gs ret cli cmp pop mov mov xor jno bound dec ds add iret cmp (bad) lcall cs data16 stc mov ss cmp pusha out repnz xchg jo inc xchg fsts loopne (bad) out adc add xchg pop pushf pop dec lret add push pusha cmp or mulb inc jge xor lcall in mov inc add rol dec xchg mov clc cltd and (bad) pop jae pushaw ret lcall shrl cmpb pop ffree aad sti and mov sbb adc cmc pop jl scas (bad) xchg pop add jb jo xchg add mov hlt adcl out adc loope mov push jmp (bad) in pusha bound push fiadd add mov repnz push adc dec mov dec adc sub adc cmp mov sbb fildl inc dec rcll sbb adc jp orb xchg pop movl add mov sbb mov test les fwait lcall jecxz xor sub push dec and dec ret das cmp dec jnp add (bad) lret imul adc nop pop mov jg mov dec fsubl xor sub ret and add (bad) xchg dec cld sub je inc repz push jnp (bad) or lahf stc rcrl call dec in add inc test add fisub add push lods mov mov js or fdivs add adc xor das movsl push add jbe lds xchg rcrb pop add ficom xor fs js add or push leave addl mov add scas push and in incb test insl xchg inc lea add insb mov cmpsl mov out sub xor add or mov mov adc lahf stc xchg ret stos sti pop push jbe dec rolb cmpsb jmp lds dec inc pusha sahf test add sbb mov fdivl pop stos or adc test popa adc mov mov add out aas outsl add cmp popa sub (bad) ss add cwtl add push pop jl data16 and jp bound jecxz inc rorb add fdivrl (bad) shll xchg pop mov cltd (bad) rorb dec add sub (bad) add sbb ret sub mov cli jl pop add cmpsl cs bound cmpl dec enter xchg sub add sbb imul in test xchg cmpl jmp fmul pop push sbb or out ja mov add jnp into add inc mov add shll inc and mov or inc stc addl xchg or cmpsb or pop jno add jle in xor ret lods cmpsw scas xor int cmp dec inc pop mov xchg imul fcompl cltd test mov and jnp sub sub sbb fsts add sbb mov push xor loop dec test andl cmp mov dec pusha enter jp das test jne loope pop (bad) cmp sahf test jne pusha jns test dec sbb aam dec enter js out inc addb mov mov fwait pop data16 ja add xchg roll add mov hlt pushf (bad) lds outsb push das aas gs imul outsl push xchg shll mov ss in mov pop addl int aaa xchg clc outsb mov ftst push pop cmp cmpsl push repnz in pop ret push xor shrb jo mov mov add call mov mov in (bad) ret pop add push xor lcall int add push mov pusha subl inc dec cmp ljmp cmp addr16 imul mov jp outsl lea sbb mov pop mov fistpl push push aam scas pop arpl popl mov mov repnz mov aad testb imul pop pop pushf sub (bad) insl repz jns mov xchg mov jl stos sahf pop addb test imul push sub jmp fstpt add mov mov (bad) aad add out sbb sbb inc popa jecxz or iret mov cli pop test (bad) push lcall dec mov xchg mov xchg into lods xor js fcomp inc (bad) jp out push inc xor bound inc pop enter mov arpl (bad) xchg add call or test pop add jge inc or adc leave mov (bad) jmp or inc cmp inc inc adc js pop mov fucomp jmp sub rcll rol push add xor sub cmp lods adc mov cmpsl xor std pop mov add sbb cmpl add add loop xchg and clc jge push mov or or adc add scas xlat mov xor add sbb repnz sub xchg add add xor mov daa xchg inc jmp add jae xor sub inc pop add (bad) sub mov popf jo add cmp add push sub push dec push lret aaa xchg stos jle data16 or add add or sbb sti mov cmp add mov movsl shr insb xchg add mov outsb fidivl add sbb add dec mov scas pop inc sbb decl repz push inc iret lds (bad) jmp ret loope fdiv adc fwait loopne jno je push xchg test jle fcompl pushf jb sub ret add or inc push jbe pop pop into xchg in push mov fiadd dec out das cwtl fdivrl in clc xchg in jmp mov insb pop pop incl bound push or or ret pop push outsl jle cmp jp popl lcall xchg push jle mov inc xchg repz mov cmp jge adc je sub scas add or mov data16 pop or add imul add xchg add mov (bad) adc add test jle mov sub pop dec dec add jmp aaa inc js lahf xchg ljmp mov or orl push mov movsl pop arpl adc fmuls mov and jb lds xlat pushf aas and fld aaa sbb xchg js cmpsl add hlt mov and xchg mov lea cmp jne or out inc aaa or push xor (bad) int3 leave and dec ja add xchg xor outsl sbb std push ljmp sti test dec inc in jb pop jbe add lahf pop jg mov subl add cmc lea push mov and cmp icebp mov jno ss sbb lock inc jp adc xor pop cmpsb pop cmp andl add inc sub pop mov inc fiaddl push cwtl je movsl les dec incb in mov sub mov (bad) or rolb sbb jbe int3 frstor lods xor int xchg ljmp clc add adc mov xchg jae pop and cmc lret pslld int3 jp pushf jo (bad) cs add xchg mov mov add lock or dec xor nop cli add hlt scas cmp test repz (bad) in dec cmp mov jne add sbb xor cmp add inc dec ljmp jns movsb or test popf cmp and sbb stos inc inc xorb negb loop outsb or sbb mov lea icebp cmpsb rol adc mov outsb movsb add pop jg add xchg pop into sbb fistl add sbb ljmp in or xor out fmuls mov dec adc mov lret repnz addr16 icebp push jecxz adc mov xchg (bad) jp (bad) (bad) xor adc ficom es data16 sbb les pop subl aaa test lret add mov add add xlat sub dec jecxz cmpsl aad add imull mov in push inc fidiv repnz orb (bad) cmp outsb add cltd jo inc sbb imul jg mov hlt cmp scas aas (bad) xor inc push test sub (bad) jmp add and cmp fisub inc clc add xchg out repz adc insb gs insl lret pop out jecxz inc push pusha in scas add mov mov xor hlt pop adc enter sbb int xchg push popf mov add xchg adc mov sti jg pop js xor mov mov add xor mov push loopne dec fiaddl push add mov push insb sbb movsb cmp outsb insl jg cmp sbb xor jo add xchg sbb dec xchg orl mov jns pop mov fisttp add js push pop sbb repnz call test lahf push fwait mov dec fiaddl sbbl popf mov aad push lds dec scas mov (bad) xor dec xlat out lcall inc adcl pop (bad) fist sbb add scas cmpsl bound xchg scas jl xchg add movsl mov lea es pusha dec inc add dec jecxz ret add push leave test sbb jo sahf lea mov mov mov push inc xor and faddl jb rcl dec sbb pop mov scas mov pop jo repz or mov and mov add or lcall or xor fstpt xchg les inc cwtl add mov aas push xchg into ret jo xchg test lock mov xchg loope add sbb xor jg sub mov ror in mov jae sbb mov loopne (bad) cmp sti inc mov add in aas roll jno mov testl add daa add add in xchg ret std ja fsubrl leave cmp push add push add or or jo mov imulb nop push pusha cmc mov in xor push test jns aas or bound inc leave cmp and test outsb call sbb add lods and add les sbb cmp mov or repnz mov xchg pop cmp dec or xor and mov dec or mov cmp mov les mov stos (bad) repnz xor push ljmp ficom std xchg add xor jo ljmp push cmp outsb cmpsl lods mov mov add mov repz add and xor mov jge jae cmpsl outsl push scas sub js and in cld pop inc (bad) cmpsl mov mov add into adc or xchg rolb xor mov jg jne insl mov pop hlt dec inc xor repnz mov add dec or xchg add sarl add xchg hlt popl jo cmp enter jnp add and (bad) pop lea int rcrb and lock xchg and lcall das imul cs push mov inc cmpsl or add xchg data16 (bad) mov and push lea jo std sbb (bad) hlt popf mov repnz leave push add (bad) or call xlat cmp or xchg or je mov inc sti jns add push ja inc adc mov push mov add jb (bad) subl dec mov adc xor and roll jbe addl les add cmp pushf add shrl dec mov jo push add push rorl fimull sbb popf pushf movsl adcl mov arpl sub (bad) sti dec lahf dec xchg rcrb jge pop imulb jg dec js add dec add orl nop cs mov stos inc cmpsb mov (bad) es mov adc and xchg hlt subb sti add aas sbb mov testb dec mov xchg mov or mov ror xchg adc aaa add jo int (bad) popa add shr lods into roll icebp mov mov or les dec pop js sub xlat (bad) fdivrp mov mov and dec imul in jp idivl sbb jns mov out sbb lret lcall jne cli lds pop add xchg jnp or jp sub je lods out daa xor jecxz ljmp pop sbb lret jo add push verw mov and outsb xor jge jl (bad) imul add in xor loopne loope add lret sub test jmp imul ret push mov stos and push add nop xor inc adc xor inc adc jo add mov add mov xorb in jp scas add push and dec mov add cpuid je das fidiv push sar dec pop dec cmp xor mov mov lods mov insb and cmp lcall ss inc add sbb aas add dec jg subl popf lock pusha scas loope inc aaa orb xchg push fwait jge sub sbb daa sub add insb roll cwtl mov pop test fucomi sub stos mov pop mov test repz out xor mov iret sbb cs jo xchg push nop rolb imul insb add add jo add sub push mov xchg insl adc and shl lahf sbb xor ss cmpl and es push scas shll adc adc mull clc push mov idivb inc aam mov scas add enter outsb sbb icebp in repnz insb mov add push sbb sbb mov add test ljmp sbb and add jne mov aas ljmp mov jge mov inc add lret cmc das pop add push mov in jbe fdivr clc (bad) jp int3 add jns adc loopne add or lcall faddl cld push popf cmpb mov pop sahf and test xchg (bad) pop and jp jge arpl pushf inc and test push iret add adc imul jb lock xlat xor pusha fstpt adc jb daa mov add movsl outsl mov arpl je (bad) or push loop and dec (bad) in pop jge adc add (bad) es xchg in add or movsb push js mov stos and jae leave add in adc xchg sbb xchg pop lods add mov ret pop add or add dec or push popf lea pop fwait cmpl jle cmp mov cmpl inc cmp hlt add loop or fucomip dec add sbb xchg add ljmp add in lods cmp in les jmp lret pop xor mov (bad) ss push add jno ljmp lcall cli or jp jo xor ss into mov sahf lahf xor pop and pop sbb cmpsb (bad) xchg loop jno jbe nop roll xchg outsl das aad out pop pop mov sbb fild sbb pop rorl inc xor lcall daa xchg in (bad) mov mov fwait sbb mov rclb jno and jmp ror into sub cmp iret (bad) cs adcb stos (bad) aad stc aam outsb add scas sbb xor repz into xchg addl mov aam xor lret or jmp mov cmp fmuls cmc fs mov inc push sarl add add sub testb (bad) cmpsl push outsl dec lea mov push jae pop jle add mov xchg cltd add push xor sbb and xor std sub repz or rclb test sub popa aad and or ljmp stc adc adcb sbbb (bad) cmpsb jne popf add xchg popa xor push adc xor inc dec dec out test cmc js jmp (bad) mov jge add in xor jb popa cmp flds inc sub fdivrl jge cmp roll test dec repnz add sub test movl pop or mov inc icebp (bad) in inc xchg pushf or pop fmulp mov dec sub mov lahf xlat push shrl cmp mov sub insb mov sti dec add adc add mov pop add daa mov xchg dec in dec fnstsw inc jno pushl push cli fmull (bad) loop add imul out or inc popa shr insb andl or push and fs add rolb and fwait and add arpl clc cmp add mov leave pushf add cmp jg xor pushw (bad) mov popf mov rclb pusha shl je mov subb cltd inc inc ljmp sub jns add jl stos leave push jnp sub inc subl xchg lret mov test cmc stos sbb rcrl mov push add aam ss cmp loopne addb out rorl int jnp out xlat stos (bad) or xchg sahf adc test sub mov int3 pop call or xor jne add pop xchg jno jmp push mov xor gs add pop (bad) xlat inc outsl xor add adc or mov mov dec mov xchg push xor add pop lret loope loop test push cmp and inc or daa aas les xor xor sbb inc call pushf adc jg imul fcoms outsl pop add testl push je and cwtl cli xor push fwait add (bad) mov xchg enter (bad) sub add cld aas cmpsb mov cli dec jp mov mov cmp mov aad movsb orl lahf es add das mull stc data16 (bad) dec and add dec cmp mov ret lret mov inc js cmc out xor les clc data16 xchg aaa push dec mov jae aam and fisubl xchg lcall aad cmp loope push stc aas add bound lods pop (bad) js adc lahf test push pushf addb test clc je push (bad) sti pop ficomp dec in in ja jle loop xor mov scas cmp pop cli pop stos stc jge loopne mov je movsb roll aaa mov leave mov mov out and mov or cmp mov mov in xchg jb cs imul iret loope add lea cwtl or aam push bound add hlt inc add fcoml add lret push cltd pusha decb dec pop add mov js mov or jg push pop xor sarl orl dec push or mov repz add xor mul sub mov aas xlat inc jne add loope rolb mov (bad) iret pop (bad) pushf cmp fst inc cmp rcrl mov mov add cmp adc ffreep and fs adc add lds arpl fisttpll dec jmp jl inc pop mov mov pop sbb jb mov cmpsb rclb jnp test (bad) dec dec sbb inc mov and and outsb inc dec aad dec adc ss aam add or sarb sub push mov cmc add clc pop outsb xor cmp mov inc mov add add mov and (bad) mov adc jno push sbb push pop sbbl or mov jnp inc dec ja cmp in test push add or int imul out mov popf xchg dec add or mov std shll fisubrl js mov and adc mov add add add (bad) pop popl clc push in in add fldl fsts add sub (bad) pop ja mov pop loopne cmpb fiadd int3 pop lret or add dec mov lcall xchg pop pusha add gs jmpw mov add or std add leave rorl pop into stos adc jo enter add adc sub fldl mov cmp fwait jo add ss and cmc (bad) fist addr16 sarb into popa sbb cmp cmpsl jno adc inc adc add das test loopne sbb jl mov pusha popa or jae xor nop pop cmp ret mov jno lods cld jo mov push jo push orb int3 pusha jge add test jnp push push push popf and mov sub cmc pop or xor pop mov sbb and gs push jl adcl xchg je or mov mov add les sbb mov mov adc je cmc fnstenv addl and mov mov mov push out add nop dec mov push stos adc jb push xchg add adc xorl sub mov les xchg add or andb add stc bnd add ja fmuls loop sub mov cmp inc add mov bound add or mov int mov fmuls add in lods mov pop pusha or jge add mov and add or add (bad) jno std cltd test dec popf mov cmp mov xchg jecxz data16 stos pushf add sbb fadds cmp inc and push sahf add popf int mov cmp dec bound scas push push jl stos add inc clc js and fstpt cmpb hlt xor inc add pop imul or lret push mov into out in and sub sarb push sbb (bad) mov (bad) cmp imul push fcomp adcl inc xorb xchg jl xchg das pop test iret imul add jmp call cld imul mov add mov xor xchg jbe add (bad) adc gs sbb repz fcomps adc jae add and insb lock cmpl inc dec nop mov cmp data16 add fdivl (bad) mov add icebp test add inc adc jg add xor jns je push sub ret pop fnstcw les (bad) cld mov mov pop jmp add and push clc mov push (bad) jo xor dec pushf mov (bad) jne push mov add stc cmp in or decl aaa adc add jp add push clc jne inc mov adc sub outsb add push push cmp cltd lods fiadd inc into (bad) das ret adc add test roll cltd fcmovu sub adc push into nopl xchg sub add imul ret jnp mov (bad) mov mov add aas cmp aas xor adc lcall mov push call aas fisttpl dec psraw inc lea bound es adcl add jnp scas xchg lods fiaddl pusha xchg cli adc cmpb cmpl fdivr roll jne je or add mov repz mov sbb dec jns adc pusha data16 cmp mov int jmp push icebp push cld add out sbb xor mov dec add add inc lods sub sti add or mov lods sbb push dec pop cli bound push icebp push mov pop inc (bad) scas jo out dec test (bad) dec enter sbb sahf cmp and add cs mov sbb ljmp push std js or or mov mov lcall inc or call test cmp movsb sbb sub jno xchg lock cmp (bad) in adc test cld jo adc jb test std jne push insb fsubs int pop jp adc aam mov or sub testb jp xor jl fwait insl inc push sub pop loopne jo inc mov or sbb adc push add dec pop mov div jge sub and loope add stos nop jae jmp jno rclb adcl (bad) jmp lods xchg sbb and xchg add jge adc pop mov mov pop mov xor mov lret mov xorl xor addr16 jno arpl stos repz cld add lds mov jl test pop faddl lcall inc mov jo pop inc cmp pop dec (bad) ja sub insl mov clc mov mov and jmp fistpl pusha movsb cs sbbb mov jmp xchg sub outsb insl loopne xor add cmp mov notl mov pop add push test xor (bad) lods js hlt nop lret bound faddp stc stos and push in stos in jecxz fwait test adc jge pop pop fcomps xor sub pop inc out (bad) cli (bad) lret sub pop jge mov mov add fcomps add shll orl add push adc (bad) int test dec jmp movl fistpl and sbbb test jo sbb addr16 inc mov xor xchg outsl subl ret add mov jb in arpl daa or outsb mov add call xchg decb and sub push enter mov mov movb pop add pop leave (bad) jl mov scas mov adc inc movsl das inc popa addb stc pusha and gs inc cmp ss shr inc add in xor lcall pushf sub add mov aam orb js xlat add mov imul lret (bad) add mov mov add cmp fcomps subl arpl es lret pop sub js clc test add add mov cmpl (bad) pusha adc jo icebp addr16 clc xchg rcr mov dec movsl aam jmp cmp push mov add cmp lods or insl add in dec cmc add stc dec xor (bad) aam sbbl push xor xor add add test out inc loop add orl lock in (bad) push inc jg enter mov stos (bad) into xchg or or (bad) dec push inc sub pop cmp mov mov xchg (bad) xchg insl add fwait push outsb daa inc cwtl mov inc sub repz hlt cmp and fs or inc ret enter test (bad) pop leave js xchg lret push xor dec jle add mov mov and dec bound cwtl test jmp lret add pusha rorb es add sbb sub es lods xchg add cmc jb xor sub xor sbb les mov aad mov push stc or push lods sub arpl add adc in push bound js pop xor add xlat jb pop in add hlt add add mov sub (bad) lock cmp mov inc loop aam push sti dec test jb ret adc popf mov das xlat andl add jp lret add pushf cmp out pop js les jmp (bad) and imul xchg dec inc lock test loope (bad) jb dec sub out xchg mov les loope push cltd in (bad) sbb repnz jmp and addl orl sub int adc mov in dec add inc push imul jo cmpsb push (bad) adc mov add push inc cmp sti pusha ret or outsl inc and (bad) push dec push pusha sahf ficomp xorl xchg adc push dec das inc jnp movl add in pop or lahf xlat add mov aam and add and fildll stos add sub out add aaa ss js and sub pop inc pop cmp add loope add test inc mov push mov out inc and sbb (bad) repnz inc add and mov inc adc push in jb inc sbb inc add rol popl rcll bound mov cmp add push push adc push aaa mov jle push mov add fcoml test jecxz jle scas and xchg str jg sbb sub adc scas jmp faddl cmc cmpsb mov cmp andl adcb lods pusha add loop mov cmp mov ret into sub scas insl pop movb dec (bad) divl fsubr js and adc add and add adc pushf incb loop roll add mov inc push add jno dec dec iret add sbb and add and (bad) xor push fild (bad) mov sub inc xchg movsl nop ds scas add mov adc leave aaa push fstpt inc (bad) repnz add mov inc repz add xor push pop sbb adc dec sub fwait or aas stc sbb into andb xor mov jle add int (bad) cmp (bad) jl sti adc movsl jns aaa mov faddl jbe pop mov pop sub inc into cld pop push add and mov orl pop fndisi(8087 stos add adc mov or jb popa movsb xor scas fldl jo cmpsb lock push mov xchg (bad) loope aad ja xor cld iret xchg push addl xchg sti loopne sub and mov add out sbb ja mov loop inc movsl xchg mov mov xchg das mov call pop imul adcl add std add adc lods enter cmp push dec int3 push pop in jg push (bad) mov jge xchg negb mov in add and jne lods mov mov xchg sbb pop and mov push insb adcl pusha push in (bad) iret pop daa and mov mov stc dec mov pop add jmp (bad) xchg clc scas xlat addr16 cmp gs jno popf xor out addr16 stos popf mov add or jecxz lahf sub lret jne mov push cmpl sbb cmp xchg loop push or mov loopne mov add inc sub jp xorl adc mov jmp push dec in and call inc mov andb jo cltd cwtl and pusha mov xor and into popa dec add dec push (bad) repz or (bad) jmp inc or dec jnp mov xor cwtl sahf mov add xchg and jp inc xchg (bad) cmp push push test add loop mov xchg mov daa mov xchg dec add jl scas add data16 dec mov fwait add inc mov xchg inc xor xor push lahf add push cli add loope and movsb in add fisubr inc (bad) xchg daa es std shlb add (bad) ja sub mov push sbb xor mov (bad) repz add dec stc addl mov adc mov fldt xor shlb dec push aam or out jmp pop adc pop fdivrs mov cmp add gs add dec push or rorl jno (bad) cwtl xchg add add jae or (bad) jmp pop idivl sbb nop xchg add pop out jo sub cmc jne pop xchg add into mov (bad) jp mov mov mov add (bad) dec stc andl fisttpl or mov cltd aad pop sub les negb pop jle (bad) mov jo add pushf je add xchg cmp jecxz rolb arpl popa mov out aam (bad) stc sbb cmp loope jl jg add pop scas xchg jmp inc inc loop sbb add cmp and mov repz push sub push insb sub ja out sbb or and mov (bad) rcr shlb pusha mov stos pushf pusha cmc jg inc xchg adc push fs pop jle and test movsl pop (bad) xor mov and or int pop jno sahf inc push dec mov xor mov adc fwait sbb add mov xchg pop andl clc cmp pop pop enter lcall inc add mov jge aas sbb jbe xor and push pop adc insl jns ljmp js nop push dec dec adc ja or add xchg xchg call cmc lcall imul sub cmp sbb (bad) lds imul push push out sar dec pop add fdiv sub scas sbb icebp sbb pop add mov cwtl add (bad) mov clc dec rorl fadds and xor lret dec mov mov in lock decb cmp and xchg lret add inc push sub int3 push setns mov and movsl lea add lahf push out inc (bad) jle je jecxz incb rolb (bad) pusha or adcb test fwait aad cmp sub cmp hlt xchg subl data16 imul imul add sbb (bad) mov shll cmpsl fistl xorl fadds lea jle jge cmpl insb dec inc mov jne orb subb push pop and pop outsb ret test add stos test aam mov xor aas in in pop inc and orl sbb addl shrb sub incl cwtl mov add out in push arpl dec xchg xchg jae sahf lods adc sub arpl mov fs subl sub jp orl rorb test add roll dec popf push add inc cmp cmpl pop jb insl add mov aaa xchg add dec jne pop dec mov lahf lcall xor es popf jne inc pop repnz sbb sub add mov not mov push sti in xchg push cs add lret mov mov jp dec add inc jnp cmpsb mov ret sub pusha push xor gs in popf pop pop insl dec or shrb xchg adc inc push popa fsubrp je add mov sbbl jl pop inc test add sbbl xchg push add adc in lock (bad) mov cmp mov les in dec inc xchg popf and cli mov cltd add jmp add mov adc and push bound leave movsl push xchg popa sub xor add test mov sub dec push add mov mov shrl jo add lret data16 lea sbb fwait sub lret lods adc and pop xchg andb pop jp pop mov mov pop sub sub pop sahf mov cmpsl pop add mov mov fwait sbb leave icebp test pusha push pop mov in xor (bad) add ret sub mov jl sahf push test mov std push adc cwtl pop add xchg or movsb mov imul imul mov and cmp jbe add adc sbb addl test pop add hlt (bad) lock cwtl pusha jbe movsb cmpsb sub pop minps adc push arpl sbb stos inc add mov xor mulb ds inc dec sub or fwait and addl ljmp add mov or xor sub and aaa adc cmp fadd pop xor push test ficomp sub icebp aas sarl and sub jns subb push inc xor xor add add fildll loopne add (bad) ss fiadd movsl imul sub stc jl mov sbb mov mov adcl or outsb fcoms xor incb add mov (bad) pop (bad) or frstor gs mov push in test incl xor adc add lret dec loopne jbe mov stos inc stc sub inc icebp and fucomip adc add fistpl loopne enter xor mov (bad) push test daa fildl pop subl cmp cmp mov lock add sahf jmp sbb (bad) push mov or dec mov mov pusha aaa std sub push add (bad) fidiv mov and xor add or mov (bad) arpl inc roll (bad) xor mov push les leave push jno xchg add push dec andl jbe popf pop sbbl mov ret add xor lds or pop sarb jg,pt scas add push bound mov sbb roll jb or mov mov jecxz aam xchg inc mov add xchg jns mov xchg mov mov xchg jmp lods dec rcll lds dec jb push movzwl jo mov pop insb fdivrl push js fildll cmp sbb fiaddl add in xchg jecxz jae sbbl mov add and pusha movsl enter imul fiaddl (bad) mov insb stos mov sbb orl ret (bad) std das popa fnstcw iret stos cmp scas pop test add (bad) push mov mov xchg mov je sbb pop add fwait and nop cmp out sub sbb pop or sbb lret add aas scas jg out sarl dec cwtl subl and inc and sahf orl movl call pop lahf roll add jecxz cmp pop cli cmpsl xor pop add xor out adc arpl mov add fwait popa mov or cs mov push dec int pusha das add out cwtl negl mov pop fmuls mov or les add mov pop (bad) xor adc add dec sbb pop mov pusha stos push jg mov loope adc arpl iret sub stos fwait add jae xor push push mov and lds inc mov add out int scas loop stos fadds add mov pop dec (bad) scas dec cmpsb test add adc jle or out xchg repnz jb pop add pop mov jo adc int pop add and rolb imul lret xorl in andb je dec jl mov dec lods les loop add xor xor push dec js cmp int (bad) call loope inc fstl inc add rorb jmp loopne and jno sub sub mov add mov (bad) pop mov mov mov xchg imul stos inc xlat (bad) addl add push adc dec add mov sub dec add cmp fsub add cli xchg and mov push add xor push fstpl and sbb adc sbb jb (bad) push mov into xchg jo js lcall (bad) repnz xor push lret outsb push adc add lds jne pop int3 cltd adc imul in sub lea popf jns xor dec mov push mov pop and mov out mov jne orb je in add out inc pop sub and fsubrs mov cwtl clc mov sub add mov xchg cmp add and sbb mov in adc push adc and sub add pushf mov push inc mov inc pop lods adc adc out mov stc adc loopne add mov inc aad pop scas cmpb xor je andb mov sbb mov leave jb jle or xor xlat fcompl (bad) mov aaa jl ret mov push pushf dec cmc jo aam add adc dec bound outsl outsb pusha je inc add cltd daa dec (bad) movsb cmp pop andb and orb fdivl leave adcl sarl sub add pop jae pop fistpll add mov dec repnz mov in dec test inc jmp js cmovae mov add aaa add loope sub mov les push test rolb aad xchg ret add inc test add sbb (bad) xor jb fsubs idivb cmc push push mov push sbb add leave outsb push (bad) out and and jecxz push cltd jo mov mov dec fnstcw adc push mov jno or (bad) in ljmp pop push mov mov (bad) in xchg cmp hlt jne outsb loopne add repnz mov push lahf add out inc js xor pusha mov add ja repnz (bad) leave mov ret loope xchg daa inc fistpl add lahf fs add hlt push movsl cmp roll int stos push mov push add push add pusha mov test jnp and add lcall js aam movsb adc and add ljmp andl andb xor in insb in outsb push mov loopne mov xchg adc fsubr pop imul jns pop sbb mov mov xor pop fldl nop into test aaa loope adc mov sbb mov push pop hlt and cmp adc sub jecxz fsubrs add cmp or leave incl sbb stos add (bad) hlt (bad) jl add repnz adc push (bad) sahf cmc mov into ret insl hlt xor or out gs mov or and rolb xchg add mov (bad) dec out lock fcomps xchg jne mov mov out jo cmpb and add (bad) std scas sub or adc in xchg cmp nop add das pop cmpsl and push mov mov xchg fsubs jl add aad icebp mov out fs sti sbb les not cmp add cli arpl pop popa lods add dec daa dec adc add call (bad) (bad) cmpsb push xchg out popf push sahf pop scas (bad) scas ds movsb jnp xchg add and fldl adc pusha stos or js pop (bad) call pusha test insb sub xchg ljmp add jp push adc push jns out cmp add lret add out jnp fcmovne scas stos subb popf pop ss mov adc gs (bad) cmp hlt add faddl inc mov int3 xorl and sub push stos inc adc popf add xchg paddusw aam cli stos js divl or cld fidivl lea mov fs mov lahf push iret cmp add sbb nop pop xchg mov pushl dec add (bad) mov aaa adc add sbb push cmp dec mov fisubrl add es scas add call fstps add or data16 out add inc jp in mov icebp sub jle rolb add mov ffree lret mov test rcrb cmp rcll pop lock (bad) mov outsb xchg and imulb lahf mov jp inc pop repnz jl add adcb cmp and jg dec mov inc fwait jae mov sub sti les pushf mov inc push fadds fstps adc sub test rorl call add mulb (bad) cmp cmpsb dec je add lock pop lods fiadd std and test pop mov rolb arpl pop ss dec pop jp ja xchg jmp imul lods cmpsl (bad) mov popa mov push add sub push cmpl das mov push pop sub pop push jb xchg adcb jno dec mov jo clc add cmp testl sbb sub add pop push dec mov jae or inc loope cs cmp dec add pop mov fstp add and shr dec dec pop cmp push dec jmp push faddl xchg jae adc xchg push jg add adcl add mov xchg (bad) aaa inc inc adc jmp xor or cmp inc cmpsb pop xlat test pop add dec neg call imul adc sbb add cmp out ss sti ds pop ret lods mov call add mov movsb mov xor fwait xor sbb pop dec fnstenv pop push push dec mov mov hlt popf aas pusha pop (bad) repnz cld mov bound movsb push sub cltd add mov mov dec inc add arpl gs pusha jno in push hlt test inc pushf outsl mov call mov jp loop in and ds sbb sub or nop add or loope leave dec aaa addl fadd push mov out (bad) aad in add lods imul daa sbb cld xchg xor mov mov cmp loopne and icebp add push aas test ds sub out xchg cltd add lret jbe repnz inc adc lds sbb sar cmpl nop or jp fildl (bad) or pop ficoml mov push inc orl scas xor pop pop lahf add test jno pop je add sbb and sub out call dec adc pop es dec mov sti stos cmp gs add xchg push and rcl test xor mov pop addr16 mulb (bad) insb mov stos and mov (bad) jns insl arpl add and mov push add mov rolb cmp data16 dec leave xchg rorb push lods fdivrs outsb push add shll frstor cmp popf xor (bad) roll stos stc mov add mov les inc jl push add inc mov add fistp lods dec mov xchg js mov jg cmp clc jecxz lea jbe pop add cltd sbb dec jmp jg (bad) jnp ret and sub jl testl je sub in sbbb mov iret push andl add and jnp mov notl imul daa mov mov xor mov cli jbe out add add jno and or xchg jecxz xor js add pop mov lea test popw or mov push scas add fwait int jo dec add out inc cs add add mov fs xchg add cmpsl pop in xor call mov xor leave push and xchg loopne mov movups pop push dec addl jb push daa jno push push cmp add ret add mov or xorl add outsb jo imull cmp and call or out sahf (bad) dec add loop mov stc aas arpl jae (bad) in iret dec scas je add inc jg mov (bad) addl fimul fwait cmp jo xchg aad add cmc dec lock pop mov loope divl add add sbb lods loop jg add adc sub inc fisttpll cmp lret lods jnp pop jmp xor movb shlb add add xchg push cmpsl cld jle add movsl xchg int3 insl jmp mov pop lret fnstenv sti stos mov incl ss lcall movsb lods xchg xor sbb xchg daa outsl mov adc insb mov rorb adc and pop push mov jmp shlb or movb mov pop fisubr subl mov fdivrl add enter push dec addl mov sbbb push ja adc imul push add xor insb ret lcall std pusha faddp dec lret mov lret jge ds cmp cltd add sbb pop add mov add ret mov mov push lods mov pop sbb adc pop inc and dec add adc jbe or testb lcall lods arpl rcrl dec or xor fiaddl add sub jb bound dec mov in cmp (bad) lea (bad) pusha pop test pop mov int3 jo test push add and push push xlat mov sub or testl pushf leave sbbl jo xor xchg jbe rorl mov mov aas in inc add cmp hlt xchg pop ficompl (bad) in pop out sub xor jno dec loope test add dec lcall ljmp xlat cmp push bound and mov pavgb inc xor pop icebp cmc in mov jge outsl adc sbb xchg add roll sbb imul mov or jle cmc add mov push mov add cltd and jl push add push jg pusha faddl stos add dec repz xchg add (bad) xor popa add das imull add shrb cli adc jg jl cmp in outsb push sti inc add jae push add jmp or enter ret lods add popa add pop inc inc cmp sub adc adc in std (bad) jno mov cmp lods add aam lcall es jl pushf iret push andl xor sbb sbb popf push outsl cmp dec add enter test mov dec ja jp xor jg cmp sbb pusha push add mov jg add aam data16 mov div pop sahf hlt inc inc xor sarl push repz es sarb ds sub jecxz (bad) hlt pop je arpl and add mov out push stos mov cmp pusha cmp pusha cwtl push cltd inc add add add aad xchg mov mov or pop xchg lods inc inc pusha and mov inc sub popf into movsl adc add push push mov inc adc jns lret sub pop jmp mov jb fist pop xchg xchg xor xor cmp inc add pop testl lods pop push push add add test nop pop pushf xor mov mov xorl xchg fnsave or loopne or xor adcl sbb cmpl data16 ljmp add stc xchg mov add stos pop insb push (bad) sti add cltd repz dec dec add test jae mov pop mov add lods gs mov mov add xor repnz jp aam test pop jmp or pop xchg pop push mov je icebp stc arpl xchg xchg pop and mov js and jo jnp mov es xor sub lcall or push pop movsb add jl jns cltd shl scas mov add cmpsl cmpl mov sbb pop mov dec (bad) orl hlt fisttpll pusha popa mov add and mov lock js sahf (bad) cmpl lods andl cli nop push jecxz mov or add inc std mov mov dec and das jo cmp repz pop (bad) imul loopne pop ljmp pop add add lret and inc cld jl ds cmpsb loopne cmp jle xor push rolb cmc into xchg lods mov out aad sub ds lret bound mov and or mov loope sbb daa (bad) pop add inc mov out mov inc add push xchg add sub push test adc jno mov mov test push and inc xchg pop inc jmp or dec push push and push es sbb add add jae mov nop adc daa aad xchg fwait test push add xchg xchg stos jecxz add jmp fs cmp sub pop pop jo push loope movsl jns aad push in adc das in aas sbb call push add inc movsb in ja mov push inc jecxz ficompl mov cmp or cs mov rcrl data16 mov movl negl in add stos insl fadds movsb outsb adc and push adc int3 xor sbb xchg in and pop (bad) or call mov popa into popl idivl stc mov xchg inc pop push push pop js test fwait jle add jns pop test xchg add rcrb add lcall push push sbb pop fwait call mov mov andb sahf (bad) movsb add adc jo add pop mov sub push out jg scas mov ss cld push aas add neg add mov push mov pusha dec test push xor insl repz push cmpsb xlat pop add push mov shrb cmp int in hlt push addl mov imul inc pop adc ljmp fs cld rcrl divl push popa xor (bad) cmc adcl xchg mov add push xor lahf clc pop stc add icebp addb push es popa bound pusha or mov fmulp add lcall popl imul notl xchg sub mov sub gs mov or add mov addl add sub jo mov es scas cmp add mov or inc es sbb push lds jnp daa imul les testb insl cmc aaa std jg mov adc pop cmp add dec jmp jae push (bad) mov mov dec fld or xor dec pop movsl add imul add push lahf xchg mov ja or lret ss and mov inc push add adc andl pushf lds xchg add jae inc inc out and add inc and push pushf jecxz add cld and (bad) sub jae add fistl aas mov into mov mov out jp (bad) (bad) jge (bad) xchg rolb cmp outsl jb sbb fcomi mov cmp pop xlat cltd hlt sbb cli fs cmpsl push shrb pushf add mov cmp mov je mov xchg xchg out push notb call mov jne add or ret scas (bad) jmp loop sbb pusha xchg aaa mov pop sbb push sub push add imul ja test fild add mov sub adc imul inc int3 nop and incl inc popa jbe mov adc imul ds add and or add daa scas xchg add into and aas add xchg add and pop insb and xor push addb pop stc orb xchg (bad) xor in stos rorb mov jno bswap mov adc sub ljmp scas sbb xchg dec mov es add push adc pop push je dec xchg ret js sub jns add add or pop mov add xor sub push jbe clc sti cmpsb push lahf lahf fcoml sub cmp sbb cmpl push and test lret xchg gs sub add pop test sbb push pop rolb mov fsub bnd stos cmp fmulp test orb mov add adc sbb pop add hlt outsb daa push push inc int3 (bad) mov and dec lds test adc adcl dec and leave add push repz roll pop (bad) pop mov mov push cmp add mov mov adc mov out in insl add insb xchg rorb dec jo push mov add ds xor sub ficompl push xchg out add iret mov add out dec or mov push rorl push add add aam shrl push jns add jecxz jle mov lret jo loop push roll fdivrp pusha (bad) test xor add (bad) int3 stos hlt pop xchg adcb test popa pop add sti das xchg and push jns add pop fcmovnbe test mov ljmp cmpsb mov pop jp inc cmp mov jae inc adcl push leave nop movsl dec add sbb dec pop push push push adc dec mov (bad) pop mov inc add scas jns cmp andb sbb insb inc jmp or pop shrb add addl sbb cmpsl mov xchg mov into xor add sub (bad) (bad) repnz sbb bound (bad) ss xor and and inc push jb call dec in fiadd inc push and daa cs jnp mov loopne jmp xor loopne test ds add shr pop mov int xor (bad) adc cmpb jb jbe add and sub enter sbb mov lea fbld jns divl jo add inc xor adc pop mov ljmp scas repz jb inc sub rolb dec test and pop into mov dec jle pop pop mov xchg in mov mov fsub es add stc (bad) sahf insb std jns gs xor (bad) cmpsl add jecxz les lahf data16 dec cmp mov inc int3 xor in leave jnp add repnz ja lret imul ss add or pushf (bad) faddl mov dec mov cli xchg sbb (bad) in sbb xchg loopne pop and xchg mov or (bad) jle pop add add mov cmp aaa repz call inc mov aam xchg rcrb mov push outsl cmc xchg rcll mov out cld add push mov int add lods push call jp pop push or pusha dec iret sahf scas enter insb and pop jle mov ret and add jecxz push sbb mov fstpt in subl push popf push add jmp cmp dec inc and add mov lods (bad) dec jns add rol pop xchg lahf fwait mov insl mov sub (bad) jns clc pusha xor jne jo mov push mov repnz (bad) dec cmp addr16 das push (bad) xchg cmc mov jb xchg (bad) fbstp mov add cmp pop and (bad) mov stos push lea jno mov nop stos mov aaa add sbb addr16 inc lds jmp push popa xchg outsb test or adc repnz mov xchg fstps push in icebp jae arpl push pop lods adc jmp ss add lock test sahf add popf inc lea pop or xchg roll jnp loop and add sbb sub xlat push xchg bound xchg jmp std jg mov inc lahf sbb cmc mov test jge add lret js add sbb inc cmpb adc daa xchg std pop jo lret dec es jbe cltd add pushf icebp or (bad) xchg push mov add (bad) movsb enter adc in icebp push or daa add jnp or jne add or and (bad) jb mov lret mov pop mov cmp add gs fild movsl pop xchg into ss imul inc sub lea add xchg or mov xlat ss lds imul daa jne les add andl loopne mov mov sarb push into fs inc jbe inc out andb mov (bad) add idivb lods inc jae sbb push cmp ret roll (bad) mov add mov push adcb mov cli add scas cmp push pusha mov cmpl iret mov xchg sbb cmp jle and dec call lcall add movsl inc push pop ja add push pop add dec mov add stos cli lods mov imul jp mov lcall clc in dec ret incb out ret in push daa aad mov pop xchg xchg in pusha cltd mov xor setle fistl test or rcrl push mov pop jb push push inc pop sti (bad) jns sbb xor pusha and inc and (bad) fisub add xchg fwait ljmp sub (bad) jle or inc mov inc mov lea inc rclb aas add stos adc ror outsb add mov xchg (bad) push outsl add push idivl mov dec cmpsb imul add mov imul cmp xchg hlt inc lods xor mov sbb ljmp (bad) fs mov je subl data16 pop and pop inc movsb add xchg adc mov divl in cmp cmp push icebp jne sub repz ds pop fild jo mov add loope xchg divb adc jae add in pop shll jne xchg addr16 and sbb dec xorb repz sub out mov adcl xlat rol cmpsb mov mov stos daa xchg ret insb sbb push push leave mov xchg repnz add test push or out mov xchg ljmp rolb push and idivl rorl out mov push mov mov mov icebp cmp mov pop add pop jecxz xchg inc adc sbb xor rcr pop or pop jbe add or cmp and mov (bad) xchg pusha jae xchg xor mov cmp ljmp cltd mov fnstcw mov adc xor xchg jmp insl push das insb ljmp inc xor dec add add add popa jecxz stos cmp jmp sbb xchg sub jmp lods pop jb cli popl or sub mov mov cmp orb scas aas js xchg add mov fs mov sub fisubrl jmp dec mov add inc decl pushf add mov in (bad) outsl cmovno ret push (bad) xlat xchg cli leave jg inc ficompl andl call pop pop fnstcw cmp test adc mov out ret and jmp cmp jle sbbb aas push mov and add fmull ja and mov scas ret cwtl add jb in faddl cmp sbb int3 push and sahf cmp add mov and int inc xor aad add (bad) pushf xchg repnz inc or ss lret lret loope xor test inc jb lcall cmpsl fld repnz adc and dec lahf sbb and (bad) mov imul mov cld add lret sahf xor jecxz xor inc push sub and insb xorb movb jecxz xor jb sahf or inc push mov enter push cmpsb out pop or and das bound outsl add repz jp pop rol or and out not stc or xchg pop test shr mov add pushf sub mov lds ret stos (bad) add sbb cmp addl adc (bad) clc stos add and add mov in pusha (bad) psrlw jl lods inc rol cs mov push jae mov pop xchg hlt dec cmp popa pop andl cmp mov xchg jle mov or imul rolb cld mov push in add lahf rolb add mov ljmp ficom bound js sahf rolb push (bad) push stos movsb scas sub cltd addr16 das and and jno jb mov sub movl andl push iret pop movsb add sbb out mov xchg mov inc push push imul sbb or subb (bad) inc jl adc push sbbl fstl int3 fsubs adcl mov (bad) and add cmpsl dec ret inc fsubrl lea cld add mov lods fiaddl dec fs adc or outsl add pop std icebp aad pop jnp xor fiadd fiaddl xchg xchg test add pop mov jge sub mov mov add fisub lret addb cli int3 xchg xor es add adc jge mov sub mov loope dec add scas je scas and mov mov leave and cmp mov popa add imul jo,pt xchg add cld pop jg dec mov push pop push jmp je jp rcrb jne in dec (bad) out sub loope or addb cmp cmp adc mov mov mov aas sub enter lahf out add (bad) fstps xchg orl xor int3 leave pop or add mov mov add aam dec (bad) repz sbb cld outsb in sti push lea mov sub add pop mov lods in inc adc mov cmp shrl jb add loopne (bad) push mov add divb pop add aaa adc fadds adc inc mov (bad) mov ljmp mov xchg lcall inc scas push mov add jno,pn and pusha xchg outsb cmp xchg and add js bound negl pop mov xor jnp fist inc xorl add and jns or and pop adc mov pop les aaa mov ret inc mov cmpl inc pop sub fwait jecxz (bad) daa pop mov inc cmp jg add and jge int3 mov lahf jle add inc shll ja and icebp add mov lods xchg jp pop lds inc and add test adc out enter sahf pusha das addl mov loop sub dec cmp add hlt stos ret mov movsl js mov cmc xchg mov adc inc lret add and adcl jl cli jo mov mov (bad) in dec add insl mov add mov or add lret add add xor das add mov int add pop je data16 mov aad dec daa repnz or add cmp scas mov lods lea js add cld lcall and dec in xor into sti add push push call xor mov insb cmp fidivr pop jne dec add loop cli mov out addl mov xorb cli pop or bound or and lock repz mov adc xchg es cmp addl js std and popf and and mov adc popl (bad) cmc inc pop dec push inc add sub mov add test inc push mov xorl xlat mov adc jg inc out jl int add xor pop cmp lcall inc in mov ret lahf mov sub addl pop gs pop and push inc jns sbb sub xchg ret fadds mov pop sahf add (bad) push add out pop inc imul fildll std mov pop inc jmp sbbb ret sbb les movsb add pop imul add call test jge fiaddl daa push adc mov rolb fildl fnstcw xor adc arpl cmpsb aam pop adc jmp loop pop add int3 (bad) mov fsubrs sbbl dec adc add (bad) in adc add jl test jno sar adc popl notl mov sbb ds and mov mov pop ja inc mov mov lods sbb mov add add aam xchg popf jns (bad) jnp cmpsb and xchg push sbb mull rolb mov lds jmp mov add xorl inc test add loop jl mov pop push cmp aad out aaa lcall add ljmp test dec jne fcomip mov call and insb pop shrb les add in clc das mov into or sub add xor add scas sahf pop je pop rcr pop and test hlt mov das insl sub push ret adc xlat das pusha pop test jge pop add cmpsl pop jno dec (bad) aam insl jne push icebp push or loopne loop imul sti push out cli add (bad) pop stos sub lea sbb adc xchg push pop jge insb mov popf (bad) mov addb sub bound loope inc inc into mov movsl daa arpl clc xchg inc icebp mov pop adc fcompl (bad) mov loop mov rolb ja pop and sub call repnz je sti and jbe fs add mov (bad) xchg inc mov scas sbb xchg dec jns pop test add (bad) jecxz sub in add or lahf inc pop cld es out ja jno sbb jl shll aaa lods out mov popf outsb add insl add xchg repz dec push and sbb dec lcall add jmp jne lods (bad) in pusha cmc inc or stc xchg int3 add mov test (bad) cld push in lahf mov sbb in orl orb mov add pop add (bad) jge pop and mov pop ljmp sbb and imul add push movsl mov testl cmp add icebp or or jo cmp cld in clc sahf pop pop xchg cmpsl fdivp and add xchg adc mov mov enter cwtl xchg push add sbb jno ljmp cmp adc mov mov mov (bad) sti jne cs jg imul mov push add std cmp cmp inc roll lret pop cmpsb push (bad) jne xchg mov xor daa stos pop jecxz add pop sti mov (bad) scas and inc adc ss clc stos daa jecxz ljmp cld inc jmp mov push mov xor subl je sub push test cmpb loopne xor ja inc fistpl push (bad) test test (bad) xor sub mov add mov rcr add and jnp add add mov mov or add pop mov xor sahf xor ds add or repz jb add jmp sbb mov insl add fs mov jne pop jae subb jg es add (bad) (bad) xchg sbb (bad) cltd mov sti dec xlat repz insl aad scas adc add lret sbb mov mov xchg xchg scas sub adc sbb mov xor jns lret add es in add mov xchg (bad) hlt (bad) cmp jle push add std or pop mov add test aad js sub popfw rcll add jmp mov (bad) mov js fsts dec cmpsb movsb or inc mov mov mov ret enter add add testl leave clc push add inc add mov add mov adc jne add adc xor dec lods movsl fnop add mov jb pop jl jae add cmc lahf ds int mov roll and and outsl adc cwtl jnp into aad inc cvtdq2ps push jo jbe fadds mov push mov jge subb sbb jbe pop pmaxsw pushf pusha cmp lahf test add mov fs sub loop insb pop pop adc out xchg stc xlat and clc je test sub push (bad) or inc sbb popa movsb and mov add jle ret sbb fiadd (bad) or (bad) mov icebp shlb push sub std push pop dec jmp and cmc jb add fidivl inc dec pop add icebp lods xchg add jbe je aas sbb xor int pusha add push loop inc or das cmp and and mov fldcw rorb loopne lock adc add roll mov xor (bad) pop inc inc leave mov sbb mov stos and add sbb xchg add jp outsb mov sbb jl cmp inc stos adc xor add es daa add xchg ret (bad) xchg mov xlat (bad) xor add cld or aaa mov loopne add dec (bad) lahf add cmp test call pop repnz add das out push push adc xchg add adcl adc adc cmp orb hlt add bound (bad) cmp jmp pop popf incl xchg inc aad repnz jne sbb mov cwtl mov dec cmpsb orb test dec mov fldln2 js pop and sbb xchg loopne out inc cmp mov and rorb enter sub xlat push insb leave add add xchg sub shrl cli mov pop cmp scas repz or push arpl push jg or jge dec jle add push and inc movsb out adc ds inc xorb push int3 jb jb sub adc mov scas add dec aaa bnd adc push pop jmp adc or popl add push or mov xor add fisttp loope (bad) mov sti (bad) pop cmc mov xor xor es dec pop icebp sti pop xchg mov out std int3 add ss add or push and sub bound xchg test or lods stos lahf std add xchg out negb pop xchg or mov sti outsb jl mov dec sbb xchg (bad) jg or add iret imull rcl inc add mov sahf sbb stc (bad) jecxz push mov negl nop and ja fs dec dec add dec mov add movsb or mov push add lds das fild cmp in lods (bad) shl lds mov lea jle add rcr add bound ret push les dec test add xchg mov add jo mov xchg (bad) pop (bad) call add pop push mov cmpb add jae aas mov and or xor pop jl inc dec dec cmp jne xor inc sub lret add pop sbbb cmp (bad) jmp jp add (bad) in ds add cmpsl enter fadds in pop lret add js add out xchg xor rclb push dec insl xlat inc add mov push testb push je lods xchg jae addb or es mov jge cmc mov adc or push cmp lret cmpl imul mov outsb or int3 insb sbb adc imul inc jg push xchg (bad) push clc push out sbb jp mov xlat inc shll pop loop pushf aaa or add popf (bad) sti insb mov inc xchg aaa movsb or aad add mov (bad) push xor inc xchg jne les mov sbb mov cmp fidivrl inc jecxz sbbb cmpsb sub fucomp adc add shrl add jmp addl loopne mov inc add mov pushf add addl and out add or scas add jp push stos mov push mov add std cmovge push lret inc out into mov ljmp enter add cli fwait xorb add push and or jl cmpsl nop jb test lds inc jge subb push push shrl and stos mov cmp sub xchg cld push test sbb pop add into loop jno stc add mov add mov xchg outsl push push add jmp xor rolb add in push mov rolb push adc inc shr movl add pop push add jl jnp in sbb ljmp and jle add ficompl jbe mov adcb mov sbb add pop data16 add icebp mov loope xchg jg je testl lea push nop cmpl adc pushf js push rcr ljmp mov sub mov cltd jmp add stos lret pop inc cld dec add xchg les pop jmp mov mov mov add pop icebp add nop mov insl test test push cmpsl add aas push sub and fmuls add jnp xchg add test push pop add mov mov sahf pop movb into mov out dec mov ret or push insb scas mov fxch ror (bad) data16 movsl andb ficompl in and andb cmp xchg scas jo aad mov xchg sub cmp push push jo xchg fiaddl pop out pop add add sbb pushf or xor lea fiaddl and or andb add xor daa dec cmp add jo out sahf ss bswap aas fadds push mov and ds sbbb nop outsb mov add sub jmp stc adc add cmp add mov enter pop and cmp fstpt in adc shrl lcall test cmp jmp (bad) pop adc add fsubrs xor sub imul cld mov jmp lcall int int3 movsb (bad) rcr xchg (bad) je add xor push push jmp add gs pushf or cmp or (bad) jns and mov out mov std inc (bad) sub sub or inc pushf xor jecxz arpl dec (bad) outsl je daa add and ja,pt dec push cmp ss out or add inc jae pop lret adc aad push fs scas or mov sbb add lock mov out insl jb insb pop (bad) imul jmp jne gs and add in pop and lcall lock inc jl adc adc xchg add mov rolb xchg lahf dec xlat add jbe adc orl mov addl (bad) dec push lcall mov push mov pop cmc mov (bad) pusha out mov cmpsl pop (bad) ret add inc add xchg aas dec movsb leave mov and add cli pop jns leave clc jbe xor add out outsb push js mov rcrl jbe jmp pop pop and push xor lcall jns pop mov scas cmp push sbbb out aaa out jl insb add in adc add iret ja pop frstor sahf imul stos gs lcall daa xorl icebp mov or mov sub or sbb pusha add dec xchg inc enter subl test dec ds mov mov mov je loop lret mov add lock subl and or sarb pusha add (bad) mov and push mov movsl (bad) (bad) jmp jmp or scas (bad) mov js mov cmp add push movsb inc mov loope sub add add or fistl pop loop mov ret lahf mov dec or int3 imul mov mov add cmp aaa test iret add int roll adc dec test nop cmp pop sub lods jbe gs pusha xchg fnstcw mov hlt sbb inc mov lock sbb gs ljmp mov icebp orb (bad) jg cltd jb out add std xchg adc loope insl add orl push push add lahf bound add js test dec adc lcall pop jp and std cmp push and outsl add xchg push test or incl pop mov lret ret mov push arpl jb push cmp mov aad dec dec mov xor (bad) fincstp mov jb addr16 (bad) push sarb test clc int into pop add daa imul adc in es add pop lock inc lret inc add mov cmp push add mov jl mov jg sbb pop add stos or ljmp int out sub jbe xor stos mov shll enter pop inc (bad) mov add xor test xchg pop data16 xor test mov add dec sbbl mov inc jle cmp pop add dec (bad) xchg lret popf lock mov sbb add push repnz (bad) pop jecxz add cmp push out xor push push (bad) pop mov add mov lret sahf add lds adc mov cmp ljmp sub clc lds sarb mov jp jg pop (bad) js add inc loope je,pt mov ja mov inc dec xlat jp mov iret push adc cli imul cmp mov out ret jns sub std inc add sub aas lahf pushf pop rolb lock icebp inc push add data16 int3 adcl dec movsl add inc cwtl pusha lret push in add das gs shr mov shll inc cmp add into and mov (bad) int popf rcrb into pop lret jg scas sbbb js jle xorb in push lcall pusha ret xor shl lret sub iret add xor sbb dec inc shlb and jb addb xchg insb mov es xchg push ja in mov jo js lret mov add and rsqrtps mov push mov add mov or outsl adc sti stos add out dec add add fmull lods fisttpll mov cld cmp (bad) aad push adc add mov mov sbb dec enter cmp xchg pop jnp sub jae mov dec aaa cli test mov in add inc pop test add int3 daa xor and loop add add mov mov popf push ss pop mov dec outsl sbb ljmp inc idiv inc lea sbb hlt adc mov (bad) (bad) out mov stc mov xchg jmp cmp xchg add outsl mov jnp push xchg ret xor jae andl xchg cmp aad dec xor adcb imul adc int dec mov push adc mov mov push ljmp idivb xor push sahf inc add dec sub or mov push inc mov pop inc mov jno xchg push jp (bad) mov popf out push add push pop cwtl mov dec mov cmpsb cmp push (bad) icebp mov cmp (bad) and jg xchg push lods add cmp add loopne mov addr16 (bad) repz sub lods out movsl test cmp mov shr jp and add cmp stos or sub les pop divb add and scas js push add ficompl add (bad) adc add lea push add add cs jle sarb add sbb push sub push mov sbb inc jns icebp (bad) or xor cltd aaa pop jb add inc in sub lock sbb push popa mov cld andb movsb sbb push xor jb add jne out add outsl xchg leave lods stos in add add xchg sub inc add mov mov add jns xchg mov ret inc fstpl aam aas test add mov loop shrl scas cmpl cmp aam nop cmp xchg pop test and (bad) fdivs sub shrb mov ror jle aas int sub and jo or add cmp out rorl cmp ds popf sub inc (bad) mov pop ss cmp add nop cmpsl jne cmp xchg and popf loope jge cltd pop xchg add mov adc lods (bad) add popa mov call rcrb add push psubq mov add pop das popf insb lret push cmp xchg mov inc pop xchg popa dec idivb js adc push jns test mov ljmp mov cmp ror cmpb (bad) fwait mov pushf sub fdivp xchg ja int mov in cmp fsts mov jb popl enter popf xlat inc mov adc push stos sbb xorb xor add aaa repnz pop and add sar add in add arpl add xchg pop add stc daa sarb and out pop push xlat (bad) es add jmp pop aad dec mov xchg and jbe add jecxz mov test notb mov mov pushf dec pop xchg stos xlat cwtl xor cmp dec mov add mov and fs add adc orl bnd pop inc cmp mov sti sub movsl iret sbbl lds icebp gs rcl adc cmpsb xchg sub scas xlat pushf mov mov (bad) test addl lock push dec roll or gs pop add and inc sbb push add stos mov loopne test movsb les add dec jl movsl sub loope fldl cs and cltd push xchg arpl push mov mov dec mov fst add push mov out add xchg inc ror xor mov cs sub pcmpeqb aad fmull (bad) add jnp pop xchg test sub mov sahf add test dec in add dec test add fnstcw fmul fmul mov fimul addr16 add jle or leave outsb add pop shlb out js imul fimull (bad) lret repnz cwtl add sub pop imul adcb sbb push adc out and jge (bad) stc int3 sbb in out push dec pop xchg icebp cmp fild (bad) mov mov add insl mov imull pop mov pcmpgtb cmp icebp incl in pop daa push add and add jge pop div adc sbb jae mov pop int3 inc and sbbb mov xchg or adc add add pushf lcall out clc jge adc sbb movsl in or add inc lea xchg or inc ret xchg mov inc adc out push add aaa outsl ja dec inc push add ret add inc add decl add jae loope inc dec pop movsb jbe sub testb test sbb xor inc lcall add xchg dec bound mov test lds lods add pusha clc dec pop lret add imul ss inc xor pop sub int3 pushf sti jb and dec lahf js out fild add test scas std add int aas adc bnd xor xchg jle add push inc jo xor cli iret loope jne add loopne cmp xchg sbb pop pop adc je cs nop inc dec fstpl fs mov push test jecxz stos mov aas dec (bad) ljmp add fcmovne int3 add cmp pop add sbb sahf cmpsb add push lar cltd aad (bad) ja mov push add or sbb add fs sbb adc adc (bad) lret je mov lds scas mov push cmp sbb and out push je mov add mov jl mov test jg adc repz insl shr dec es inc jmp xchg pusha data16 add dec int add cmp add add aam inc adc cmp push pop push cmp push or idivl pop roll pop xlat push cmp addl push cs push dec test gs cmpl jb push ret push js cwtl pop sub mov mov fdivrl pop jle add fisttp pop imul fnstcw pushf mov popa add pop jns rep add jo push pop data16 sub jns fldenv xor ds sbb mov pop add sub adc ret add dec cmp icebp add and mov ss ja inc rcr mov bound int3 shrb pop lret mov ljmp lea cld jl int dec push das out bound scas data16 stos in xchg mov loope mov mov in adc add push add sbb mov add adc cmp and xor sarl push or or mov add push adcl cmpsb out sub and add xor daa subl leave pop les (bad) push push aaa dec nop mov lods xchg loop inc in jns ret inc push ret add dec ja jecxz test in mov pop pop add cmp push loop and dec cld push sub add dec aas xchg add jmp xlat cmpb dec pusha (bad) out stos push add in mov mov aad cmp push xor and movb cmp pop mov inc addl les mov decl dec add jle jl pop push xchg pushf mov (bad) jae out or push incb mov adc add inc xchg aaa dec mov aas mov mov repnz xchg inc (bad) imul xor js xor xorl pop sbb sbb push addr16 add shrb add sub icebp mov flds rorl push in adc jo in loopne (bad) (bad) adc int mov mov xchg pop in xor aas mov (bad) jo adc mov jecxz cli stc inc test xor rcl xchg pusha dec add mov push dec lock sbb data16 fs stc mov mov rolb add (bad) xchg mov push jbe lcall aaa enter idivl add hlt xchg jge fsubrs mov add adc push inc sub mov push xor dec inc inc mov je arpl xorl jp add cwtl nop (bad) dec cmc pusha mov jno repnz lahf jbe int push enter sub lret leave or mov clc push mov and pop stc add dec jnp cmp fsincos aaa pop add movsl or xor add fcompl je xchg jl popf cmpsl pop mov add (bad) out add fwait adc mov mov cmpb xor in leave mov xor fstps cmp pop test icebp push jecxz pop mov xchg cmp imul add push test je (bad) add sub outsb mov imul push xor and aas push cmp and cmpsl inc mov lret push xor lock (bad) lret jo movsb stos add mov fild popf movsl call rolb repz pusha adc inc js bound std add or jb sub out flds and dec or pusha popf mov xor adc mov (bad) pop stos bound lret gs out pushf xchg mov xor adc loopne sub dec rcll dec xchg inc mov and into and mov jge or stos roll jl jo mov or cmc roll xchg out inc bound add and mov sahf jg add pop pop or add ja daa pop cmp or mov or inc rcr cmc pop jno add in and dec imul add fnop sbb push add mov hlt dec js add xchg aam pop (bad) into add repnz and icebp jl imul sahf mov daa inc add or repz cmp dec in add inc iret out mov roll xchg clc cmpsb subl or xlat dec mov call in fbstp popf xchg out dec div es lret and xlat mov push out mov or ret std mov cmpl pop add nop jp xor stos or outsb nop cltd sbb dec mov decl jne idiv cli pop add sub sub mov cmp add aas push pusha call fcoms xor push jg inc sbb push jno inc jnp xchg adc sbb and aad mov mov dec pop mov mov adc push sbbl push sbb popf iret dec ret fstpl pop lock (bad) adc and (bad) int mov xor cmp adc adcw cmp xchg add pop sti jp xchg sbb jo scas add push ds ja and adc lret aaa push cmpl js bound add sbb and and jbe push add clc insb (bad) jmp push flds rcl mov and call sbb jle (bad) shlb jl add mov mov jg sti mov pop and ljmp enter mov lock lods inc jle loopne sub inc fmuls inc inc xor inc push mov add dec sbb lods inc pop pusha mov (bad) repnz and and cwtl and mov mov or test rcl pop fnstenv out jne mov pop jb jp xchg and push loopne pop add jae stc orl pop test and in inc add sub leave sub jge (bad) into rolb jecxz sbb ja mov pop out cli in add fsubl xchg jge add and pop ret and (bad) loope mov mov (bad) xor gs orl jo insb mov pusha bound cmp arpl mov sbb lret add push call jb movl add add push xchg sub std (bad) popf ss and cmp mov add cmp ds adc add (bad) jno jmp movsb mov inc je xchg les in mov int out rcll insb mov push ret popa movsb pop jle pop add xchg pop scas add in and fldl lret xchg push mov add (bad) pop enter fstps js out push and sbb pop fwait lods mov sahf (bad) loop cmp sbb inc cmpsl daa add test add (bad) js add sbb mov push mov in jp sub lret les (bad) divb fidivr jg adc sub mov mov add sub cli cmp jnp mov sub add cmc pop jge in cmp jmp fisubl or sbb push push sbb add cmp imull lods sub or setl cli scas add jae dec mov push lcall mov dec mov cmpsb out inc xor andb xorb push andl fist xchg push out add mov sbbl add aam fild mov sub mull add push cli adc cmp ret or inc (bad) (bad) aam dec or orl je mov mov cld sbb call sbb mov inc jp mov ret add leave or jne call mov jae addb bound add jmp inc adc or sahf sub mov inc les mov sbb jb lock dec push clc andl (bad) (bad) out pcmpgtb lea aad mov dec sub add ljmp push or test push jne inc popf cmp xor sub sbb jp push cmc lea in mov lods add sub mov pop inc adc pop js cltd hlt mov sub and sbb add cmp mov cmp pop data16 jb in bound add js hlt xchg outsb mov popa pop data16 add stos mov xor sahf add popa mov mov xchg lds fisubrl fsubrs add or jno rolb loopne pusha dec stc mov mov lods push nop push ret divl ficoml inc loopne popl loope int mov mov mov jg mov lret mov or loope sub enter cmp pusha ljmp add xorl jbe dec movsl test mov rclb or dec xor jne sbbb push out subl push imul fiadd add fidivl inc orb cmp loope push add push fsubrl and icebp push pmuludq mov push (bad) movsl add push cmp (bad) sub and stos add mov test pop and and and imul pop cmp leave push pop cmp or or push pop dec add xor (bad) sub dec mov (bad) fistl movsl xorl jl lods ret jnp andb xlat clc out cmp and out or in mov mov jecxz sub lods push test mov dec imul mov jg jne ror lods (bad) mov sub loopne in add pop mov mov mov cs in sarl bound rcl add sahf pop mov cmp cmpsb cmp fnstenv mov test or mov cmp rcl inc data16 sbb adc mov mov sub push sub add inc hlt cmp inc sub (bad) ja xor lock es pushf loop adcl dec or test cmpsb imul xorl jl jno orb xchg mov fisttpl add mov mov add cmpb and aam call cmp cmp in pmulhuw pusha popf sbb cmp or roll mulb pop ja pop mov repnz fs ds lahf inc jg pop and mov xor and mov dec out scas or sub test xor jl lahf and stos adc scas (bad) sbb in add cmp jge in mov add lea mov je cmpsl add movsb adc leave rcrl mov outsl xchg inc js push inc mov insb outsb faddl out (bad) in add push and push push lahf test sbb dec xor mov add mov es mov fdivrp add (bad) sbb jmp mov add cltd lcall push push pop cmp inc xchg add imull dec push pop pop fsubs mov dec inc jge xchg xchg insb sahf inc xchg and into push sub add jg sub add out cli add push (bad) push add movsl jne add mov lret stos push add std call sub push pusha insl shrl stc mov je mov sahf add add pop mov dec bound hlt in xor pop test arpl sub fldcw xlat pop out psrld pusha gs fcoms orl push js push cmp lods fucomp je je cmpsl lahf push inc xchg das push jmp cmp pushf ja psrlq add push (bad) push in add (bad) jecxz cwtl aaa inc aad add push pop cmpb or ljmp jae sub in xchg data16 sbb xor mov roll mov sub loop fistl xchg fdivs or jmp add dec and nop int3 lods add mov push loopne fwait cld add cmp xchg popa int3 lahf add or mov push push xor repz jbe flds inc int3 lcall pop push xor lds lahf dec lcall xchg xor (bad) cmc xor mov mov mov xlat fidivl sub fsubs ficom add xchg mov bound xchg test mov inc lret cld fisttpl mov mov frstor sub inc pop and jmp push sbb push leave or mov rcll clc or or add adc test outsb jns xchg jp data16 lods out add rolb ljmp push (bad) sahf sbb add popf lods outsl mov add add test sub cmp add insb add scas subl xlat dec cmpsl add rsqrtps orb mov insl jge addr16 iret or sbbb je add lret mov xchg loope cwtl (bad) jecxz bound adc or loop mov movsb jmp imul shrb sbb js lret push in push add jno fidivr movsb sbb jb and jae xor stc add jb out test repz inc dec (bad) loope lea pushf fcoml cli inc addl or (bad) mov pop add inc cmovge cmp inc adc test add dec mov add movsb xchg ficoml popa adc pop or lret add lods loopne in add xchg inc out add xchg rcrb sub in call mov add jl sbb cld jp cmp subl (bad) and add inc adc (bad) sarl adc mov inc stc lret popl js push gs pusha sbb add xor push mov in jl lock push mov jbe (bad) xor ja xor pop call jno fisubr sbb fdivrl fnsave adcb sbb add loopne test and (bad) pushf ret imul int or pop fsubr cmp leave notl add pop jmp add jle mov sub cmp or xor pop fnsave add pop (bad) movb mov push (bad) sahf cld pop orl sbb mov mov jmp cmp add sbb jne add xchg pop loop std stos cmp (bad) jbe add js jnp (bad) xchg gs ja inc popf aad aam push out mov jne sahf add and xchg loopne ljmp pop push dec insb mov ret incl sbb xor icebp (bad) hlt xor out add dec je pop xchg sub and das push les addl repz lahf and adc aaa inc add jae sub into mov cwtl mov xor out add pop sub test add add inc mov push call push jne push jae jmp pusha leave push sub les in sti add pop test xchg loope xchg pop pushf jge adc cmp add (bad) cmp xchg pusha in push arpl rolb xchg jns incl mov xchg into ds pushf push sbb mov dec ds mov (bad) pushf out add mov mov mov cli nop xchg icebp sub (bad) pop sti adcl pushf jo pop lret inc push fldenv push mov inc add mov mov jno cmp sub or fs stos xchg mov jl mov rorl dec xor add cmp stc (bad) jge add push test rorb dec iret adc mov mov add mov mov leave fnstsw scas mov lahf jg jle or rolb jae push fnstcw pop add add roll adc mov lea sbb cmp add xchg add lcall cli jbe push addb aaa aam or pop add dec je movsb enter dec and sub mov xor xchg lahf inc mov pop lods (bad) fildl sbb add int3 loope movsb faddl cmpsl mov jg push add jmp mov cmp ret mov out and test ljmp add push pop jle scas add popf gs cmpxchg das xor push sbb repnz addr16 test add fsubrl pop aam in addr16 add stc mov orl cld push repnz add cmpsl les rolb cmp inc (bad) cmp mov mov add and mov add add sbb add js ret in xchg loopne,pt jns iret pushf (bad) xor and cs leave loop xor add push lods cmp mov add jle aam je inc add sti pop cs sbb test mov sub add sbb pop icebp pop sbb cmp pop jb (bad) jb add aam sub mov or call jl data16 stc dec add lcall adc clc movsb dec fs popa add mov das jg adc sti cmpsl mov (bad) push ret arpl cmp test push ror inc bound sahf rclb stos je sbb inc bound imul cmp mov mov out mov in stos push cld test pop add pop mov mov mov in push dec pop sub and cltd or sbb push push pop xchg ja imul loop push inc test sub lock imul mov aam loope mov popf scas add mov mov subl ja scas jp pop fwait cmp movsb add or loopne in lret dec ja or pop rorl lods int out jp repz mov test cmp inc cmp jae add (bad) std jp jno adc dec mov ljmp add int3 clc push (bad) std xchg ljmp pop push push mov push add jno sbb or sub add cmp dec out nop mov push cltd jne xor mov add cmp ja mov outsb xor pusha add add adc movsb lock dec sbb mov add cmp sbb sbb in sbb daa inc push add dec (bad) and dec dec lret addr16 adc cmp jo ret add aam out (bad) jg jae add cmc test cmpl or mov push push add sbb push inc mov testl jb loopne dec lock pusha xor gs mov adcl pop jle into mov addb or in add pop sbb mov pop out add daa movsb cwtl test inc mov sbb cs pop and push and lods sub adc and or ljmp dec test addr16 test test popw stos xchg daa insb add jnp mov cmc add cmpsb cmp pushf jecxz add pop subps add jno enter add lds pushf push in pop pop inc inc lods dec mov mov push push mov insb jle mov es out ret xorl jg inc aas xlat pop add jge push mov ret aam bound cmp les into imul dec test mov push jns std adc inc xchg popa push mov cmp lret fnsave dec xor xchg rcll pop adc pop push call out inc xor stos stc mov aas ficomp jecxz and push add gs and add jle pop ljmp mov gs inc insl xchg stos adc xlat vmread inc dec push add xchg fmuls out shl add lock push rolb loop movsb inc push sti inc mov xchg rcll push cmpl adc xchg mov cmp mov out das lret adc inc inc ljmp cmp out pushf or imul dec fnstcw add fdivs bound fisubrl test lods mov add aad mov sub in test in jg inc jne jp mov mov int3 add pop mov sub jp push test addb fcoml pcmpeqb sahf push xor xchg push incb pushf pop pop inc rorb and inc adc outsb xchg push sub in jb imull inc ja fdivl sahf pop sbb inc add add push cmp xchg test pop sahf push dec add push sbb rol add popf adc mov jmp add (bad) pop pop imul rcl inc add fldenv roll (bad) leave mov out mov push sbb arpl sub add xchg mov sub pusha jle jne add xor mov jne or push push (bad) inc pop or ljmp popf pop repnz nop cmp mov add and pushf in orl jo les stc (bad) add sbb lods dec dec mov mov sarl andb mov xchg mov outsl ljmp insl mov and enter sub sbb repz jbe add xlat adc add mov add gs lea push xor adcl outsl test fdivr inc mov sbb rcr mov (bad) fbld and lods add add adc stos pusha inc xor jg mov lea xchg cmp imul push add sub ljmp jecxz cltd nop out add pop stc scas add jmp pop lahf push dec add xchg loop test jno in icebp loope pop jo mov push push leave inc adc sub add testb jo pop adc xor popa jne nop mov mov and cmp add lahf (bad) out xchg mov add jecxz and inc dec int3 push and xor cltd iret add add jb add xchg mov inc gs dec cmp ljmp push lock test cwtl add mov scas and daa lods sti int3 dec add ds xlat into fxch imul push cld jg (bad) imul jge lret sbb mov je out xor mov imul push inc jo cmp add sub fst mov outsl sbb int pushf add sahf add add jge dec pop pop mov jns inc jle xor loope add jecxz mov jae add push out andb pop cmp in pop je mov insb xor dec stos sbb add addr16 jns push nop add ss (bad) add mov xchg mov mov out dec sbb (bad) xor test pop arpl dec popf add enter add jp outsl divb mov cmp mov xchg ret rcrb outsl add xchg jae jb (bad) sub jl add xlat and cltd mov scas loope pop add push jp add jae data16 add cmp add sahf (bad) mov sub shrl mov push daa pushf adc add cmp jmp fimull inc push and das sub mov shlb repz sub cmp (bad) mov nop movsl out cmp jne rol and inc aam xor cmpsb jmp add pop inc mov cltd mov pusha nop (bad) cmp cli jo in push cmp add aam into xchg mov and aad fsin add sub orb push push push mov and sahf mov lahf jbe sub loopne mov sub sbb jno aaa lock lahf and adc jmp pop mov (bad) in xor loopne aad add inc dec mov add push daa ret cmp pop jnp add (bad) lock mov (bad) imul jae (bad) pop sbb add push mov push addb int3 in sahf inc movsl xor add dec jecxz or cmp and jmp iret jae adc bound push fcmovne and adc add and fcomps rcll xchg mov cmp mov (bad) cmp dec pop and insb push nop and je (bad) pop jns dec ljmp scas jb cwtl jge testl jmp movsl (bad) (bad) xor add mov xor repz xchg cmpsl ret test pusha mov roll or loopne sti scas es data16 out jb stc adcb hlt fsubs into fs jns sub fldenv (bad) shrb lahf loop add pop mov cmp pop insb test jecxz mov fwait cmp push out pop int3 xchg add sub aas jge mov pop add enter (bad) jno xorl in pop cld or hlt add mov add imul cmpsb sub jo jo jge add mov rolb jns push push lret (bad) aaa cmc add dec and bts inc repz jp add push cmpsb fild cmp add lods mov sbb mov jb pop mov std notb mov add stos push mov icebp add add push xchg stc pop cmp xor push inc les cmp or clc (bad) sub and cwtl push out jo or sbb cmpsl mul mov xorb and fnstsw clc popf ss jle add cmp mov cwtl inc movb sbb out stos xor add cwtl aaa cmp cli inc fcoml cs xchg aad dec push jge inc roll (bad) out repz adcb or xor add jae push cmp test mov inc fcomp mov add mov out push xor leave aad mov faddl cmp push jl ret test mov sahf pop and xchg out pop push mov ret cmp add icebp enter jle daa jae adc cwtl inc and xor (bad) cltd mov xchg add jmp imul cs lock jp jg scas in mov aaa add mov sbb lret (bad) or popf test add scas out pop inc subps arpl xchg jp jmp cmp jecxz or or pop mov sti sbb fdivrs (bad) jno add cld ficompl nop push mov (bad) fdivl fistl xor jle cmp ret leave mov loopne std add fsub les dec jb rcl sub sbb add cmpsl lea mov (bad) lds mov (bad) (bad) dec add hlt jecxz lock add scas push push (bad) dec ret add idivl jnp pop ret jbe sahf pop pusha insl pop inc sbb pop orb mov dec mov pop add sub repz mov add adc pop xchg xchg arpl inc roll pop push or mov jg sub pop pop xor xchg xchg lahf aaa add adc pop xor into pop cmc test inc (bad) mov mov bound (bad) (bad) pusha imul aaa sbb out addb scas xchg stos push sub test psubusb fs add les ja hlt sub adc add or data16 and insl or dec inc pop inc in or jnp test pop outsb int3 add daa mov add lods jae into loopne ja dec adcb nop sbbb daa sub jb inc add out fildl (bad) (bad) xchg andb iret mov rolb les jp scas mov add leave std test lods in and jbe outsl retw cld add sbb lret xchg add loope add pop pop jmp mov xchg (bad) and sbb mov (bad) push mov and adc inc dec wbinvd test fsubr sbb add push test stos xlat mov add mov in andb cmp outsb mov add mov aad shlb das xor sbb out inc popa or add stc rcr clc sub dec mov dec aaa add sub lret and jnp inc pop fidivr sub sbbl gs pop add movsb xchg imul mov push nop xchg adc push cli inc dec repnz into push add test and lods les lret xchg movsb popa (bad) add (bad) cmp inc daa xor rorb push jne (bad) pop adcb outsb (bad) popa add pushf out (bad) mov add cs jo push xchg add mov (bad) mov jmp jnp sti pusha pop and shrl fstpl add push jnp lock xor mov lea push add xchg inc jbe pop in insb mov loop add cltd test aam pop mov (bad) sub jle push sti add paddsb cmp add mov and int (bad) (bad) or jne add add test dec mov dec stos mov out jae xchg xorl fsubs test inc (bad) fldl fsts add mov test and mov dec cmc mov adc add insb outsl pop cmp push pop outsb cmpb push push loope and adc inc push mov imul add inc ds inc sbb cmp xor dec mov sbb mov sub adc xchg inc add bnd out mov jne stos push xchg shlb sbb test mov jbe xor mov jp stos add push (bad) call xchg push nop inc popa ljmp mov in add ds mov add pop mov mov inc dec sbb addb mov adc popa mov addr16 aam dec sbb hlt addb xlat or stos out xor fbld push sbb lea pop xor push faddl je lahf add leave or nop and aas fimul lret cltd js shl ja xor mov jnp in cmp addr16 or sbb xor dec or mov push leave jl add fsubs mov xchg adc xchg test jo mov movsb aad test sahf into out push dec jge xchg sbb leave jg cli lahf inc xchg cmp or cltd cmp mov bnd xlat mov push fs and xchg and mov insb xlat or push je inc cmp ja add mulb or movsl stc nop imul lret inc shrb out xor push add xchg cmp ds or xor pop add cs gs xchg dec cmp dec jns adc mov test push fimull mov sub sub mov dec adcl pop cmp pop adc inc add dec sbb movsl jo (bad) and int3 test mov dec test out stos push roll int3 (bad) add lcall movsl sub add fsubp add pop (bad) jo xchg cmpl mov nop fmull out pop (bad) adcl lock add das in ds dec jo sbbb aam mov add pop add adc cmp jno sahf or xor pop popa add xlat push pop or sahf inc insb adc push mov push sub inc dec aad xor add loope je mov add or ja leave sub je pushf adc les xchg pop xor (bad) mov fdivl out out aad inc fs add in (bad) aad cwtl inc push jb andb mov xchg out jns ficompl jae add xlat es add nop mov ret outsl xor leave cmpsl pop fnstenv loop add into mov pop jne arpl add es add sub add adc xor or aam cmp jo mov test sbb adc mov cmp cwtl bnd add dec jmp add jecxz add scas xlat jo inc mov push in ret cwtl mov add pop movsb lea nop rclb pop cwtl cmpb aam insl dec dec and dec add sbbl xlat add mov out mov sbb jecxz adc dec push add mov jbe add and or mov add mov lahf add sbb pop or cmpsl fs add lods (bad) jno mov negl gs and lret sbb (bad) jecxz lock mov or jo push add out fcmovnb and push mov xchg mov scas pusha sbb cli xchg mov ds jae or or inc cmp lea add insb xor pop xor scas adc sub dec rcr frstor mov inc or sahf aam mov xorl sub testb xchg scas xchg lods int3 pop repnz cmc lret dec push out push pop gs add mov (bad) call sahf (bad) mov pop mov inc or add fldcw (bad) sbb adc mov cmp out jle (bad) insb adc data16 inc push xor mov add (bad) into dec rcl inc sahf lahf push mov pop xlat add dec mov jbe rolb jo stos jnp aaa xchg in sbb sbb lods std push dec adc daa ds ljmp lcall ja mov lahf add call pop fstpl add push mov shrl add test mov daa addl pop push add xchg enter nop pop add aas dec xor push xor jecxz (bad) scas add lret insb shl ja push (bad) sbb sbb add dec aaa adc jo add fcoml int cmpl aas fistp add xor je test bound add mov jmp fcoms jl (bad) aas addl cltd je mov and data16 fild cmp pop fnsave in push dec dec andl insb lahf shrb stos insl inc xchg add adcl jg and pop mulb lds cwtl pop test push add rorb pop add (bad) xor push xchg pusha mov (bad) nop dec sub dec mov mov je pop nop pop sahf add push and cmp pop add in test add mull inc sbb mov push add sub add sbb lret add jne add cli inc scas push ljmp adc aam adc lret test aaa pop add jb add mov add push or inc in sub push add add fdivs fidivl xor aaa sahf fldt mov push add popf dec enter sbb ds in mov divl mov sahf and fnsave dec xchg cmp lods dec in jb je cmp push dec out dec dec add and add cmp test mov add movsb adc dec xchg push or fnop sub add adcb push cmp push fucomp cmp sbb sbb mov inc sbb or (bad) pop fnsave test loope out out jge add popf cmpsl xor jmp fidivr pop cmp add adc sahf mov insb add jl cmp lods fs sbb adc addb loopne push push add dec imul clc pop jo adc mull or into nop add cli loope add mov pusha dec add jb sub aaa fmuls mov xchg pop out subl (bad) jg push icebp jmp lds sub mov add sbb or add jecxz arpl inc mov cwtl stc mov add fs sbb sub inc or (bad) mov out lods je sbb jns pop inc cmp (bad) popf iret jl sbb cmp mov fldl adc pop fdivs inc add subl add adc lods out pop pop and and sub jge fild fidivrl les add das xor mov add clc mov jo add cmp into sub rolb call jl incl fisubrl repz scas mov sub inc loope sbb cmpb ficompl xor subl lcall add xchg subl test ret lods sub loope ret jecxz jl mov push pop sub add adc and into mov or out mov outsb lret and add xchg pop mov popf sbbl stos dec stos add inc scas push pop sbb imul xor (bad) movsl inc dec cmpl data16 or aas jo push or cmp test roll mov sub ret mov pop sub stc pushf add lds cmp add cmpsb mov faddl jbe mulb vunpcklps add aas pusha shlb test add jle bound push addl inc mov cltd outsl mov mov push bound aas jle ja add xor outsb pop push into push pop jbe cmpb jg mov xorl insb mov incb push xor js ja mov das add xor sbb pop test cltd mov hlt sub mov mov stos lret mov xchg inc add pop xchg std lret push je xor add mov ss add and ret xchg add or mov subl xchg adc xchg jg nop jne add add push xor mov jnp pop inc mov pop inc xor push mov ret subps and ja je mov sub and ret add push mov sbb enter jbe add xchg push lcall ss xor in push and nop adcl add mov mov xor cli icebp push or sub (bad) and scas call jl xor or xor add mov shlb loopne rcrl mov insb cmp aas mov dec lods cmp inc push xor add fimul js dec lret cmpsl mov xadd inc aam pop (bad) and movb pop stc cmpsl push in addb or cmc inc out jl add lahf in push aaa jg,pn (bad) scas (bad) std and lods (bad) movsl add pop or addr16 pop push add push nop sub add scas (bad) call mov dec fldcw jle mov mov and sbb add and jne mov fwait inc push sub and inc call das jmp or daa pop xchg pop xchg cmp mov inc adc jmp sbb std enter popf cmp scas push test cli add imul adc pop xchg mov andl mov mov jg add lea add imul xor pusha test test scas inc adc xor and ss jle dec push lock and push add aas (bad) cmp xchg dec or ljmp cmp frstor add lods dec mov add mov push fistl xchg cmp dec cmp popa jl jp fistpl mov fdivs nop mov int3 lds xchg stc outsl insb sub mov dec mov sbb lods push aas xchg add and and fisttpll lea outsl inc or fnstcw sbbl xor inc or push insb mov cli add push fnsave jg sbb fcoms xchg test shrl inc jnp add push fnstenv bound mov mov add xlat push and mov or add lods sbb or cli sub sub jl sub loopne jne xchg pop lret pop sbb hlt mov cmp fstpt test xchg add jae mov cmp push loop lcall mov add data16 cmpsb add sub mov add or pop add push push add add sbb fldl2e push cmp cmpsb insb cmp xchg in arpl xor imul inc push add adc or xchg mov and add adc andb sahf js popf fcomps clc add pop pop repnz push or add lcall ret and (bad) lret mov add das xlat icebp sti add stos inc cli mov jno xor in das push fbstp dec add xchg jo lcall xchg ss xchg insb iret outsl stos adcw (bad) lock js sub mov fs dec arpl movsb cwtl aas sub aaa inc add (bad) or std inc insl jmp push (bad) scas loopne add popf negb mov pop js clc andl jnp pusha loop test call fldcw andl adc out lock cmc aas ret bndldx inc out les xor in lret cmp add test jp orl xchg add sub dec in cmp xorl xchg mov mov xchg xchg inc insb addr16 xchg inc fs jge and add lods lcall or sbb (bad) mov dec shrl xchg inc cmp pusha es rolb jg cld shll or sahf addb das je dec js mov xor xchg pmaxub andb ds pop xchg pop (bad) dec imul iret add rorb mov xchg fldl pusha fcompl cmovl mov lea rolb int cmp pop or adc sbb dec sbb idiv sub sub imul mov adcl lds test add dec shrb pop dec roll dec mov xchg (bad) and jmp jo add jo in mov std xlat rolb jp jb ltr ret leave push dec dec pop pop add jle xchg add pop sub adc cmc fwait xlat movb daa inc lahf aas loop push xor pop adc add cmp stc int3 flds push pusha or das mov add (bad) addr16 es add int3 loope xlat iret mov (bad) cmc mov scas ret std dec loope pusha repz mov (bad) fsubrl sbb mov dec mov repnz mov mov inc mov icebp pusha inc push test push mov mov xchg xlat add jns sbbb mov leave lret mov ds out jne dec or test lret push sahf cmp jg xlat gs shr mov inc jp jnp cld push cmpsb imul jl or push push roll xchg loope popf inc sbb add (bad) (bad) mov or add push pushw inc adc outsl mov sbb in push xchg jmp xchg nop inc add mulb in inc cmp int add stos fadds fdivrl pop sbb imul mov add aad xchg or push add cmp cmp or sub add xlat inc (bad) and push lods push add push add (bad) dec mov fnstcw clc ja ret mov push outsl pop addb out stos xchg adc es (bad) xor pusha add sbb pop mov scas push add repnz aad out dec add jb sub jnp add sub ret lret push xchg (bad) call sub (bad) sub pusha dec mov push inc sbbl je popf and (bad) or stc jno jg or insl inc push add add jns or scas addl insb incb sub xchg sbb xor add data16 and dec pop (bad) int3 cltd sub pop jae imul push aas (bad) push add rolb mov and sub (bad) add cmp xchg mov pop mov push movsl cmp cli loop repz aad insl mov jns and ljmp xchg sub enter insb ret add imull imul fs and shr cmpsl scas in or scas inc pop jo xchg jbe inc andl rcrl mov add push mov mov pop pop test les lahf cmp mov xchg xor fwait push pop add mov add dec fiadd mov xor mov dec jl xorl orl (bad) js pop ret (bad) dec std fiaddl jl inc les push aaa cmp mov addr16 mov xchg sarl add test repz out into roll mov add pushf sub leave out test sbb adc les nop cmp negb (bad) pop test psubsb pop mov dec xchg mov out cmpsb shl cmpl sarb loopne add ret xor aam jg orl xchg push fildll into dec mov mov stc pop (bad) leave pop add cmp adc mov cmp cmpsb (bad) cmp inc in aaa sub mov xor (bad) nop pop push jb and pop pop loope addr16 leave dec add adc or in pop test add hlt (bad) add mov test mov or adc imul inc leave jb cmp inc movsl stos jbe xchg add aad insl ljmp pop loop add cmc sahf js xchg add xchg out add xor (bad) repz pusha jge inc inc insl in clc cmp lock loop or fs sbb sbb fcmovb out sete (bad) incl mov cmp imul mov lods xor sub aam mov insb movb and rcl cs add and pushw fs sub outsb daa (bad) add lahf inc (bad) cmp lock frstor pop and dec ljmp cld divl pop add bound popf jl add mov jp add jae psubq dec jo pop sbb pop cmp mov (bad) aam push cld jo xchg and push add jge lret add nop push push rcll dec add outsl (bad) xor xlat xchg outsl sti push bound fwait ret sbb xor movsl cmp incb loopne cmpsb rorl jl gs dec (bad) movsb es xor pop add push xorl xchg insb cmp jge add mov or rcrb aas andl inc mov add cmp gs loop or addr16 pop (bad) arpl popa cmp fwait and add daa loop mov cwtl push outsb insb mov cli sbb sahf jns sbb xor sbb push dec or add xchg xor dec add push test add push sbb push ficompl push fcom repz mov sti loopne test inc mov xor mov or add jns test popa jno repnz push dec clc cld cmpsl fs (bad) inc out mov inc mov mov add sbb cwtl lret lods dec sbb mov mov in xchg lret fild dec add sbbl mov lods jns out add cmpsl sub add xor shll cmp push push aaa (bad) inc adc add adc add enter sbb lahf sti bound pop xchg test cld imul adc test rcrl xorl mov and iret mov inc popf jmp add test mov xorb (bad) add das or (bad) add (bad) dec dec mov sarb in js push stc fcomi jmp and inc push jae test lock and pop das adc jnp cmp pop cmp shr cmpsl (bad) and sbb add pusha and test jg dec mov stos add jno jle mov daa sbbl sub je jmp sbb or jbe scas add mov enter lret xorb cmp loope das lret mov cmp add push ss arpl add inc mov sahf lds adc dec push xlat add push mov add mov js jge subl (bad) mov mov inc cmp out jle inc (bad) mov mov add ret js add outsb xchg (bad) jno and add bound jecxz jle xor lods je adc mov pop inc ljmp add adc aam push jns repz cwtl add and pop sbb leave rorl in pusha jge add cmpsb sub rclb stos pop lock popf pop push or movsl incb pop sub and lea sbb add push inc les sahf inc js add xchg adc add in int sub mov xchg pop add push jle mov popa dec jg or add lods lahf sub xor loopne rcrl add les imul mov loope add sarb mov fcmovne aas mov mov mov jns popa xlat sbb mov popf out lods movsl xchg pop xor mov add addr16 inc push jb add sti leave aas popf mov das cmp add fwait xchg adc testb test push mov sub imul loopne in adc test scas fisttpl and jo xchg add jp iret sbbb adc sub sbb push test and inc mov movsb addl scas call scas sbb (bad) out outsl add incb xchg loop movsl pop pop add lahf in xchg cmpl out cmp stos mov push fstp js movsbl inc mov mov adc movsl orl popa add fistpl das mov jg ja add fcmovu mov add jo jae jp das leave lea inc addl dec fs add xor inc enter mov icebp add movl pusha jne roll jo data16 cmp add sub xor testb repz xchg add dec outsb lock mov mov mov in gs jmp jb adc add sub cmpsb adc pusha bound call scas add jge pop add mov mov mov xchg or les and jns xchg adc or dec fnop jo cs daa add sub addr16 addb fs adc sbb cmpsb mov sub ret xor sbbl push add sub cmpsl or fsts add faddl test mov push orl icebp jo daa sbb rolb adc push push mov mov push jg jb pop dec adc push sub sub or add cwtl out cmpsl ja fcmovne add jb mov decb mov ret cmp xchg xor les bswap dec loopne add ja imul bound sub inc fstps xor mov lods adc sbb les jle,pt sub shl xorl pop inc rclb insl xchg inc add out daa dec jns add test mov repnz xor add pop mov or popa adc aad xlat out jo mov (bad) mov lds or jp jb cmp ja je test mov cmp jne add lea jne sarl orl mov les and ret cmp push aam mov xor push cmp add inc rcl fnstcw andl xor xchg sbb fbld out lds pushf jl orl xor add (bad) mov js or add pop mov and dec pop call mov sbb insl inc mov xchg in insb inc pushf imull xlat imul rcrl ret push cmp jno fiadd cwtl pusha aam mov lcall push in inc inc add adc aas sbbl dec inc subl add xor ret fsubrs rolb test sub js sub fidivr jne (bad) insb insl je push add ss jp lret add je xchg inc fistpll jno add jl test xor or cmp (bad) jnp les sub lods fsubrl nop xchg jo cmp cmp pop push ljmp out out lock outsl jg mov (bad) mov cmp xchg inc xor jge add test jno ja fildll mov fidivl mov js add insb movsl lds xchg adc mov xchg pushl iret jo,pn add mov add cmpsl mov xchg add mov cltd xor cmpsl stos cmc add out scas imul add out push mov add dec enter fwait add sub mov (bad) das inc mov lods mov mov push and pusha push cwtl add or dec sahf std (bad) add and xchg push repz sbb sbb cmpsl adc adcl jbe adcl push lea add iret jno stos pop pop push xor inc lea stc rol leave jns cmp (bad) (bad) cmpsl and xchg rolb push xchg ss xor sub push in mov mov test sbb pop loopne mov out push inc int3 push sti es jno movsl jge add out lods jns je add fisubl jo fild (bad) aas dec jl add dec notb movsb test cmp dec sub pop (bad) mov dec cmp test mull xor loop mov lret add rcrb aad mov cmp mov int outsl mov jns jle (bad) xlat inc loop add cmpsl cmp xchg insl (bad) je les push stc push mov pusha out add outsb in or and xchg jp xorb lods sbb daa push ret in ficompl or fcoms xchg jge lea popa ret xor mov fdivrs movsb cwtl hlt mov or cmp cmpsb cwtl jle xor mov in adc ss test xchg cmp rcll pmaddwd outsl xlat popf pop cltd xchg sub xor add das add push cmp loop fiaddl cmpsl fiadd mov bound pop sbb pop inc dec movntps pop jno sarb cmc or add fs add mov dec ss subb and pop (bad) cmp sahf dec aad jl imul insb add push mov orl in add xor sbb je add jns and push stos ljmp repnz pop mov mov pop add pushl gs jp add addr16 mov add daa push (bad) xor xorl jmp hlt sbb loop inc out repnz lahf js cwtl add pop fnop add es cmp test stos mov lahf insl lret pop fiadd cli rclb repnz jecxz xor nop mov popa pop call (bad) mov es add xchg arpl test push addl outsl sub fcmovnb aas cmp dec cmc loopne jle gs add mov testl pop xchg push pop inc mov mov inc jge cmp lods sbb jl popl test popf inc outsb lcall stos xchg mov stc mov mov xlat sbb jg cmp gs or lock xchg pop and add adc add in mov in add jle or dec addl andb int (bad) add lock ja jge jbe fs xor cltd adc add cli popf inc jl mov sbb shr xor or jne add jmp mov enter out fiadd xchg aad jg (bad) hlt testl dec in incl rcrb inc rolb ljmp add out faddl int3 lret test mov sbb add jmp sub add in add jbe call add xor and insb sbb dec insb add fadds es jg dec or adc or push add and mov int into sub out add lds pop mov in mov adc sbb mov xchg clc out cld icebp int3 mov stc inc inc dec mov rcr aam dec mov push lock add lds mov adc xlat gs push sbb jae loop xchg push (bad) and enter add dec mov cmp mov jp cmpl dec inc scas jnp das xchg xchg cs in cmp add push scas mov or popf jo movsl xchg cmpb aas mov pop js mov loopne lds or jns dec or cmpsl rolb arpl fidivl add sti lcall cmp mov int3 mov add mov dec xchg arpl xor mov or out mov add mov pop ds data16 sub loope pop test push mov add aam xchg sub mov xlat jnp inc add jo fisubr mov add rcrb repz mul xlat repz dec push mov imul andl (bad) sub mov sub fs add imul adc mov pop cmpl and popa adc pop add pop cli pop mov repz sub dec adcb inc lret xor sub xlat add mov es (bad) mov xor and jmp add and and ja sbbl icebp jb push gs leave lods add js pushf add loop add push in add mov aam lahf sti jne xchg push loope add ds out cmc stc ret cmpb popfw cwtl lcall jne and (bad) push sbb enter andl add arpl dec mov mov add inc pop imul test (bad) test inc or pusha cltd cmp jae xor fisubrl jo sub movsl pop (bad) dec pop test es incb add jmp sub popl loop push fildl add xor orl mov clc lea push lahf pop loop mov pop or dec adc add pop xchg cmp sbb js pop js add xchg movsb pop inc or subl inc add push mov aaa or imul mov jo dec add dec jb outsl stc jp,pt into mov out jle sbb cld dec xlat and (bad) je lods addl push lret add lock add mov int outsl (bad) js jbe sti jae pop xor test adc mov add add push (bad) hlt dec add fcomp sbb fcomi in sti stc pushf push add or vsubss and jae and sub jno jno add hlt xor push and mov pop fnsave xchg xchg addr16 int3 add adc or lds mov insb ds sbb xlat push outsb add mov in lahf sub lcall adc ret sbb add inc sbb mov push adc push adc icebp (bad) mov xchg sbb loop sub inc pop jae add pop ficoml dec dec mov cmp les cmp add (bad) or movl jg add sbb add adc lods fimull cmc out dec xchg add lret push add std sbb cmp pop lea xor rol and divb dec mov pusha add sti sbb stc movsl jecxz sub add test cmp add xchg pop rcll xor (bad) lods lret xor movsb pop outsb pop push add sub mov loope push inc test adc jns add mov mov cmc sti inc cmp sbb ss mov test jne icebp or xorb (bad) outsl js xchg add movsb fsubs (bad) jno out bound pushf push xchg inc xchg xor imul (bad) push faddl dec in mov ljmp cmp mov bound testl pusha cmp outsl icebp lods loop (bad) jne add cmp add iret add xorl pop loop or (bad) enter cld leave inc jmp push push mov pop aaa lcall outsb xlat loope jne imul cwtl jecxz mov sub lahf jl sahf flds inc je jae sub out push dec push pop add dec cmp mov pop pop loopne add adc add repz scas add cltd mov cld cld jl push add dec mov dec pop add pop sbbb xchg cmp inc lods sbb mov add test cltd iret sahf pusha rolb jns mov pushf push rolb repnz out sbb leave and stos xor popa lock (bad) xor test pop xchg cmp jns add jns sbb inc lods js dec (bad) pop in push inc add cmp mov movsl jmp enter imul scas pop ret (bad) sti pop add test sub mov pop aam pop push in (bad) or xchg iret inc adc add mov sbb mov mov mov cmp inc sarl imul xor stos xchg add mulb cmp jo cmpl jo movsl mov std or push (bad) xor add notl add fcoml add adc out or mov inc push push mov orl clc imull fiaddl sbb xorb (bad) jmp imul out jo add cltd pop (bad) stos lcall mov fwait dec xorl jmp sbb or jne mov cmp cmp add inc dec add (bad) push mov aad testl in das pusha or ja dec pushf dec test lods push gs push inc arpl xor leavew imul xor subl sbb pop ss mov pop adc adc cmpsb inc movsb sbb das popa testb loopne add jp stc aad lret add jecxz cwtl add sub sbb test aam adc lods cld add fild push inc adc and dec fs lret xchg lahf sub test mov add repnz dec xor mov dec xlat push fildl add cli icebp jno adc js hlt push stos mov jne xchg sbb sub repz push push sub outsb test mov cmpsb adc sbb add mov rolb inc jne sub aad jge add dec mov call cmp sub add sub rol push mov or xor xor add loop push cwtl add xchg sbb lods cmp sub or pop aam cvtps2pi xchg (bad) adc insl jle pop orb push xor push cmp lldt xchg insl adc push or data16 lahf loopne faddl mov jmp jecxz mov mov xor cmp aad pusha add out sub cs add gs cmp xchg add jg sub add nop movsl pop mov lods push add xchg adc jb (bad) add aaa rolb pop add mov (bad) sbbl cld test fisubl inc push lods mov mov mov push pop xchg push sbb inc pop int add lret enter fadds push ss xchg dec cld addl aas fs pop andb jl call inc pop lods adc add jne mov add xchg lods imul out push lock cmp add imul js add movsb or cmp pop stos gs leave (bad) jnp in aas dec loopne push pusha movsl push add enter aam xchg inc jae into mov data16 sbb adc cmpsl xor pusha push scas add mov cmp cmp add call or jle inc push ficompl adc mov and loopne mov sbb push xchg add jl pop or jns fadds inc scas fwait lahf out subl je mov pop xor ret mov sub push cmpl loop orl in jge inc cmpsb mov popa and sti add les adc aam cltd jg mov push jae or and sbb fisubl sbb cwtl inc lock sub push das out pop cld or dec jle mov test enter imul add les rorl das push add add mov xor jae xchg enter add xor cmp popf xchg sub add fcompl add or mov imul jne adc xchg cmp add sub stos clc subb add jl int popa push (bad) imull in and dec xor cwtl pushf into adc adc jl push (bad) sahf bound add push (bad) xor push pop dec sbb loopne fmull add adc loop leave add mov dec mov jo add incl pop push mov jmp push ljmpw mov and adc movb fcoml aad cltd ret les test test mov jmp cwtl dec add sti cmpb jmp mov addr16 mov jnp add push loop (bad) pop mov popa push xor stc mov movsl cmp xor dec aaa add add cmp cmc sub inc imul xor sub cmp add gs add push in xor sub sbb sbb fcmovnu cmp sbb inc sub and jo add out les push aad add jg or mov xor add jo and mov xchg xchg dec dec mov adcl mov add dec fcmovne decb sbb xor cmp mov jbe enter lods push push mov jo andl xchg (bad) cltd pop rcrb mov mov repnz sbb jle scas push add lret add cs sti rcrb add sarl xor lock sub mov xchg (bad) jae cmp and dec leave dec js scas popa icebp inc sub adc adc mov mov jbe push (bad) xchg not pop (bad) mov into pop add pushf stc add pop jno xorb ja jnp sbb loope fisttp lret into pop fs xor cmp xchg fmull add xor and in cmpsb push aad push outsb sub test lcall and cltd movsb mov sti lock lahf xchg push ret sbb loopne inc adc pop dec mov outsl pusha insb add jbe xor repz pusha movsb xchg push (bad) mov xchg pusha push in ljmp pop xor sbbb lds movsl pop int loop add das fcmovb adcb mov mov mov sbb sbb add lock dec jb xchg imul test test lods inc cli or movsl add and adc xor mov and popa aad push inc or roll cmp int nop imull add xor push mov add or or ret xchg mov add dec shrl sbb add (bad) xor incb and ja andl movl xchg loope and int3 repnz imul loop inc push incb (bad) imul add mov xchg cmp mov fidivrl add mov out jbe cmp adc dec dec clc xchg imul push mov iret xorb imul jne fucom out sub subl test (bad) in add pusha cltd jbe or add mov mov int3 sbb xor add pop mov (bad) lret test mov aam sub das or inc dec dec or add (bad) fisubr out cmpsb or add divl (bad) outsb pusha stos cli cmp mov iret sub pop insl icebp (bad) xor pcmpgtd sub add out push adc scas iret add cli test cwtl dec xchg cmova shrl sahf icebp pop inc add and and rorl aad jbe add hlt stos js inc dec orl pusha movsl imul push jns bound addl sbb add jp push aas outsl or add stos dec out sub add mov notl andb scas sbb lahf pop push hlt mov mov je aas iret add add or pusha add aam cmp mov (bad) stos inc mov add hlt inc xchg clc mov add insl sbb rclb imul mov push fisttp bound cmp aas push lcall hlt (bad) jbe ss fsubp inc xor jno lds arpl sub inc sti pop jmp xchg popf cmpsl push push rclb pop pusha add or and loopne jl (bad) jb push push push ljmp pop adc xor or mul stc cmp xchg test das psllq add and mov pop (bad) add out sbb mov cmpsl or add loope ljmp add lret call mov movsl inc subl les stc test fadds push orl mov call push or adc xchg outsl xchg xchg xchg pop mov sub jmp fisttp push cmp xchg pop pop scas ds jo outsb popf stos dec adcl inc pop jno jl pop pop fs mov (bad) inc sub (bad) cmp and add xor sub (bad) jb movsl lds mov or sub ret aad mov nop add push in and cs jnp fldt js test mov cmp out jecxz add nop insb pop add iret jbe jne add pop mov ljmp dec sbb into cmpb icebp test push add les inc add pop out imul mov nop mov push fs mov mov pop lds lock je sub jns add add sbb push cwtl repz pushf dec ret sbb (bad) jp (bad) lock inc mov pop and cmp pop mov xchg pop in mov stos ds incl or scas (bad) cmp mov xor mov jbe xor mov subb mov repnz add lcall inc xchg mov cmp xor sbb loopne mov mov in mov arpl add xlat jnp add mov or mov and sbbb lea add mov cmp push xor dec call add push stos jbe add xlat xor in add outsl and or roll and and cli or mov (bad) lahf add jo or and inc movsl pop mov sub addr16 add pop movsb fmuls xchg jne dec (bad) push add jl imulb scas mov int3 arpl insb add mov pop pop add mov (bad) in push int3 cmp mov pusha popf out add inc sti dec gs pop xor lea and out popa and cmp les add xchg jecxz jl jne icebp addr16 or sbb dec or sbb pop test xchg pop cmpsb repz rolb (bad) insl aas stc sahf pop cli add cmp jp sub (bad) sti repnz clc or sarb jne mov push std and out xchg cltd add jle adcl jmp sbb add jmp push and stos jae jmp test sti add stos in sbbl jo xchg std ret outsb (bad) lea cmpsl ds cmp fs and inc add imul xor call add cmc xchg test add add into inc jne mov (bad) lahf xchg inc add push sub mov mov add sub scas inc or push aam addl push int add pusha mov pop add xor repnz sub popf push movsb (bad) imul inc xlat xor sbb lfs add aam lods enter fiadd pop jp adc dec addl out add stc adc add incb (bad) mov mov imul hlt inc add xor ss inc cwtl pop jae mov pusha or mov ljmp jg inc pushl jle jb subl push bnd add addb lds push les dec ret add sbb push fwait push jge loop inc jecxz (bad) xor data16 mov mov add sbb xlat mov dec fmull xchg cmpsl inc (bad) enter in xchg out cmp in jle imul divl inc mov cltd xchg call jmp cmp push sbb xchg add xchg push popf push popf in inc fdivrp int dec jae lea mov in ds daa push stos aaa push popf mov add inc mov xchg in push adc xor mov test ret insb cwtl sub lock add test xor inc add inc jg (bad) ss imul out cmp int popf dec incl jl roll fs sarl js xchg add jle push push jo jnp lret pop inc addb outsl xor cmc aas push lds cmpsb push dec jo xchg mov adc adc add leave fimul pop mov mov mov dec loopne pop add or add xor and in addr16 shl xlat rdmsr lods push test and inc setbe xor add fst icebp je jo add jne mov mov sub or mov (bad) mov mov or xlat add (bad) jae scas fsub bound cmp add add dec and pop daa loop xor pop push jecxz adc dec mov or cmp add jo xchg xor mov ja std xor sub in leave add xlat pop mov sub js jns inc add or cmp adc ja mov imul aam orb jno jecxz push add movsl fs ljmp mov pop es in sbb addb jp cmc add sbb or add andb outsb push aam bound cmp adc inc out lahf arpl and shr cltd popf andb jns add aad add (bad) add lret pop repz outsl dec jmp cmp add jg cltd in xchg lret outsl add pop jne mov adc add sbb sbb (bad) cmp adc daa js out inc movsb mov mov pop mov add aaa or add sub xchg jp pusha inc xchg out sub jb les add push roll dec popf jns inc xor aaa fnstsw jae or pushf clc mov sbb jl jb ja jno inc mov mov sbb jmp lock mov add scas outsb xor in sbb (bad) jmp and add xlat pusha or loopne test ja adc pop pop dec outsl into mov test pop jle inc dec test fdivrp dec mov add xchg mov add mov jmp cli sub cmp mov int sub adc jnp fldt add int3 mov dec push xor (bad) inc mov push inc fistl add outsl icebp push insl pop (bad) dec test pop fstps push test add lret mov lret fidivr mov xor cmpsl lods popf mov xor add (bad) push inc adc add ja dec mov lock pop ss movsl mov fisubl cli iret xor ret adc orb cmp es xchg cmp movsb je add jp dec out push lods (bad) jo pushf sbb cmpsl lcall (bad) xor add mov pop imul jno mov jo sbb iret pop inc mov dec cli scas add leave (bad) loop fwait roll test xor mov testb sbb scas mov clc mov mov pop cvttps2pi xchg add imul cmp addr16 xor add push push push bound loope mov cmpsb inc mov imul add push adcb mov js mov sbb pslld iret add jecxz std jle add jnp call add popa pop xchg sbb data16 push pop jne arpl jo add cld lods or add inc mov xor add jnp cmc mov add push pop mov iret mov sbb pop lcall dec sbb popl out test push push mov jmp nop add xchg add rep rolb push cmc (bad) jo popf movsb (bad) cmp ret fadds mov add je sbb ficomp mov ja pop mov (bad) xor icebp sub mov jp loope add cmc sbb sbb popa add mov jno dec int dec xor (bad) mov data16 repz movl sbb mov mov push cmp xchg arpl jbe or push out mov inc inc inc test jno jno add js fs fucom repz xchg daa (bad) dec jbe mov sbb cmp and xlat movsb sbb pop lods adc ror add inc pop pop in add sbb sar mov and mov adc adc dec test std test push xchg add repz mov cmp push sete les loop insb push xor jg push pusha ljmp xorl dec test icebp inc cmp add or lods in outsb aad fldl clc cmc arpl and fsubrp sbbl mov xchg fsubl fcmovnu pusha cs shrl mov dec jp int3 sti sahf gs xor jo push leave push or (bad) sarb pop pusha bound cwtl iret int scas jmp and (bad) rdmsr add adc inc pop lahf popa ljmp ret mov lock das ror add add (bad) mov jecxz cmp jg add dec mov adc xor push xor sbb jmp cmp jg add mov mov iret out xchg adc dec push sbb movsl jno mov cmpsb fnstenv out and adc xchg mov repnz pop add rorl int nop fsubp pop or test cmp cmp andl mov mov push inc outsb sbb mov and sub cld adc jbe cmp add lds in add gs in sbb add inc lods mov jb jno sbb jecxz loope or cmp mov cs xchg cmp fwait adc mov notl mov roll aad mov (bad) and leave xchg dec subl and xchg fcmovbe sub sbb xchg js mov pmaxub into and push add fdivl pop fs loop dec movsb mov adc mov push add bound hlt test popa add lods sbbl fs lret push jg negl fcmovne mov enter dec xchg ret or sbb sub mov lret add scas xchg out add stc outsl movsb push cmc xchg mov adc sbb add inc leave add out xchg (bad) jae or jle mov inc orb jb cmp call and pop mov push data16 and orl in pop and je faddl add push sbb jae,pn add test sub (bad) gs out xor and add jb and add les adc push push loop aaa (bad) and pushf clc sub std jg (bad) jmp add jbe lahf mov popf add sahf bound sbb add dec (bad) in sarb sub inc pushf movsb and pop jb enter mov pusha fwait test cli adc shr sub imul lock sarb testb aas cmp in fs jns aaa push sub push mov imul lcall setns pop mov cmc iret mov xor loop jno inc bound stc add mov cwtl xor sub dec int3 jne int jl add test cs lods lea push xchg add pop insl mov aad and cmp nop out add hlt div sbb int3 cmp popf add movsb bound add sahf adc add mov pop xlat rorb add aas push and push cmp jp sbb lods adcl dec jnp add arpl mov pop in or (bad) outsb pop sbb lcall mov push lods rolb test cli scas mov adc jbe xor push xchg add push ss add push lock cmp add or pop (bad) jbe push pop bound mov xchg (bad) fcomip mov test lods fadds mov add int icebp out dec dec add mov outsl jae sub cmc add xchg stc push adc push add cmp in add mov add mov out out inc mov xchg sbb cwtl xchg loope xchg mov sub mov and loop xchg pop test mov add inc add pop fidivr add arpl add push xchg repz jl mov mov and jecxz insl or sbb inc dec hlt add popf mov out fild pushf ret dec xorb clc xchg (bad) lahf jo push sahf push stos data16 loope mov jne sbb or xor cmp dec sub mov std add inc xor inc inc je pushw subl aas (bad) sub push or int inc insl enter pop imul out je sbb mov push add jg hlt mov mov sub data16 xlat insb add out dec fiadd xor pop (bad) lock push add add add add outsb movsl int sub ljmp data16 pop jmp in add adc rolb jp lret push dec addl adcb xchg mov cmp inc insb ds std out add or lds (bad) movsl sbb jne jge add add (bad) mov jmp (bad) jno mov and int inc sbb jns enter hlt add adc mov jle mov es xor stc shl jb lcall mov insl pusha clc xchg adc add add push stc pusha leave pop mov in mov outsl imul mov jb pop add jo out or xchg push mov jecxz jnp dec xchg add aad dec gs outsb add jg xchg in or mov cmp outsb bound jae fwait inc pop push scas aaa add out or mov add cmc jne xchg sahf mov push cmp push nop add int3 ret dec in bnd jle add mov mov hlt adc push cmp add fmulp or push inc in add fnstenv scas into mov add adc pushf lret jne pusha dec jge mov cmpl add fadds xchg lea or test adc lcall sahf mov push pushf repnz xor scas add or push (bad) rorb test sahf inc int stc js popa cmp (bad) xchg fnstsw movntq dec dec mov clc pushf pusha push push cmpsl cmp jmp jle popf xchg incl std xorb mov cld jge lret jg add clc add push es mov addr16 cmpl and add xchg arpl (bad) shlb jo add push adcl cmp scas in or jno add inc mov jo out cmp (bad) insb mov xchg jp (bad) push aad jecxz out add (bad) call dec into ficomp sbb jle sub dec add enter and stos sbb adc mov xchg in adc jecxz stc jb sbb (bad) adc ss dec pcmpgtw out ret mov sbb xorb call in mov and add xchg push ss dec add sub pop cs lock and mov jns lret mov xchg add sub outsl add scas sub push jno mov ds and mov add popa into inc xor and add cmpsl sarb insb push mov inc inc sbb call stos and add or into test add jo adc jge mov addl sbb roll std or xchg add scas bound add inc push sub dec out mov andl insb jg fadds popf test inc rolb mov push (bad) fisub jmp or xor dec push ss add icebp rcrl cmc imul (bad) sahf inc lock or cmc movsl push fcomip xchg jbe sbb into out ss sti push popa add xchg sub insb mov daa lret xchg pop xlat add xchg jp xchg adc in lret or push sbb imul push cmp jle (bad) mov mov lds xor pop roll cmp fsts push cmpsb (bad) pop insb sti add movsb dec jle mov (bad) repz add sub test mov mov cwtl sbb pop inc xchg in pop push jo fdiv mov clc cmp add arpl dec xor push or mov push stos jle divb and jl add arpl andl inc sub and jecxz sbb je sub adc add jno sbb lods mov add jbe add push movsb aaa jno stos add sti lcall fsubrs pusha add ss fs subl cld add jmp fisub add repz push xchg popl xchg lods jno loop inc into js add push jmp add stos hlt popl add mov jns loope es cmp js and mov adc bound shlb test mov leave ljmp fisubl dec xchg sub mov fcomi add mov inc cmc sbb or rcl push add adc mov xchg and test dec pusha lea add sbbl mov sarb and push sub add mov jno sub and cmp addb add std in ja loopne add cmp add push xor test add ljmp enter ret pushf jge insb and in jns dec add push lret insl imul sub inc mov into sbb add add cmp mov sahf push icebp sub mov jmp pop pop add sub jbe (bad) in pop xor movsb cmpsl mov pop sbb cmp pop fcmove xor pop adcl cmp add fistpll pop pop jge and ret add imul bound xchg xor adc sahf in jp jo mov add sub lds jp (bad) sub sub and loop pop hlt (bad) jle xor mov pop pushf unpcklps lret pop ret mov mov or or sub inc fdivp pop mov je push push xchg add inc scas adc mov loopne jp lds (bad) sbb lret xchg jno dec ss fsubr sbb adc neg inc xchg rcl xor add ret popa add stos lods mov dec add jl inc and mov sarb dec movsb idivl repz add data16 mov sti push lock push push pop add add (bad) mov push (bad) (bad) xor repnz add es cmp sbb lret mov add jne sbb int rolb leave jle mov add mov out repnz sub push je pusha outsb inc xchg test (bad) xor cmp add clc ja mov dec or and cmpl ret add out dec scas sbb inc in inc (bad) divb (bad) inc fidivl test jne mov add inc mov test mov test out add out and pop dec imul cmp mov add sahf push jne das std inc (bad) xchg rcll jmp dec fdivl and aad sbb (bad) arpl cmpl jle movsl sti xchg sbb fldenv mov cltd dec in add mov mov in lahf cmp add and aaa mov cmp sub subl mov leave mov insl stos inc add aad scas jno inc addr16 mov pop adc fs cmp add cli in mov jae add scas fstpt add test lods incb ret sti inc add int3 xor add (bad) mov xor xor arpl jo or xor jle sub pop jbe mov lret add add movsb sti jp fimul imul sbb dec add fcomi test scas andl stc mov sub mov dec cmpl jo dec sbb adc jns data16 out gs nop pop and ret mov lods or add sub movsl add cmp das sbb xor add je xchg popf mov jbe les out xlat xor jnp jge dec push (bad) mov lahf (bad) into cmp sbb mulb add sbb ret cli in inc and pop mov add xchg pushf add jp out fidivr pop orl clc (bad) pop add outsb dec adc xchg sub adcl scas sbb bound push pop or push stos fwait clc icebp xlat fiadd xor add push fisttpll xchg leave xlat cmp add jnp out jno jge fsts movlps fisubrl lds aas sub cmp jo je push and outsl add xchg es sub add push sub xchg outsl or inc jle add cmp in mov repz pop jg mov (bad) mull mov xor cmp ljmp jae cmp imul pop add test inc les lret pop push ret js jo push inc stos sbb mov add sbb je or xchg jecxz cwtl jl call imul or es push mov jmp in push sub and in mov lcall daa jo pop push bound enter xchg mov les insl xor unpckhps mov outsb dec pop or fbstp fldt pusha mov cld pop pop scas mov adc add rclb popf ljmp xchg mov inc mov or add add movsb add aam leave xchg ja xchg add inc cmpsb std adc out jno inc dec sub pop fimul andb rolb push in fs pop add xchg xor sahf adc xchg aad jp fisttpl outsb loope stos test jle lods jno ficoml or cmp movsl lea add inc outsb int3 add sub inc add adc test mov cmp test mov and pop jg sub xchg ret jne cs and popf lret xchg stc push mov sbb leave cmc (bad) xor jo aad add pushf mov add xchg rolb pop scas add jno loop jae verr repz stos adc orb sub jbe adc inc jb hlt inc or xor (bad) lret jecxz js jp es add jge aad mov fs mov das add out mov clc xchg xadd cmp and negl (bad) mov (bad) xor lcall sbb jl stos mov lods mov inc insb or cmpsl add sbb sub sbbl add test std dec pop pop enter jg lods sub push or add adc add (bad) fisubrl loop add xchg imul addl cmpsb fimull test insl scas xor aas je pop out mov notb pusha mov dec ljmp pop xchg dec dec cmp mov or pop outsl je sub pop incl xchg sbb mov dec xor push mov outsl xchg pop and iret xchg lds out ljmp xor adc ja and aaa dec jmp loopne adc nop add push xchg movsl mov jge and (bad) negb push loopne adc repz cli xchg mov stos push insl decl (bad) fs aad popa inc outsl dec mov f2xm1 repz std call sub das adc outsb mov add push dec fistp (bad) movsb mov jae int3 loopne add lock jns aam pop (bad) add jecxz add cmpsl rorl push sub iret cmp dec cmp push fild into pop outsl push popf cltd andl (bad) jae sbb loope jo lahf add mov sbb test rol repz dec out add push lret adc insl sbb imul lcall and or dec sub lods add into xchg add lahf movsb push add push jmp jp xchg cmp add dec add add arpl push inc orb push xor repnz or ss lcall push xadd subl inc loope push add xor sub mov loopne sahf repz nop (bad) pop mov xchg mov out and cmpsb repnz addl lock pop imulb outsl xor add fldenv adc iret cmpsb ss mov pop dec sub add pop mov subl cwtl mov out testb sub das imul inc mov testb (bad) jl call add xor mov add scas out add xchg lahf lods sti add and mov test idivb outsl add inc and cmp pop stos fcom and aad nop add scas clc movsl dec mull mov (bad) sahf adcl push (bad) dec mov loope fisubl jo das lahf pop inc or pop aam inc sub imul cmpsb rcrl inc push jno add mov xchg (bad) outsl dec rolb adc and mulb inc add (bad) int test ljmp add decb add std xchg stos add lahf mov ja mov xchg ljmp xor lock jo mov ret les aad inc pop imul call adc xchg fimull loope rolb xor ja jp pusha orl sub xchg arpl mov lcall mov dec lcall js,pn scas and (bad) push add push lcall add rcl dec mov in lahf stos lock adc mov sbb pop into push add xchg pop jge push inc add adc lods add cltd pop mov cmp or adc jo icebp je test ror mov pushf xchg mov jp and mov sbb in cli add fcomi push pop lds dec push or pushaw sbb add add push mov mov sti cmp and mov andl mov cmp sub and sub mov jecxz rclb stos or movsl jae mov xchg (bad) mov and mov cmp and ret movsl xchg pop xchg add dec cmpsl (bad) je (bad) in sub adc xchg and add and pop mov xor in xchg add ds xchg hlt adc popl and inc jbe lds push es xorb pop jbe lds das or add cmp loop jge repz (bad) js stos sbb pop int rcll aaa outsb ja adcl mov in leave stos icebp cvtps2pd add (bad) lock aas push add enter cwtl xchg cmp mov push lods scas push fildl (bad) mov and mov jb and push add shlb pushf les pop rolb (bad) jl dec repnz add xlat mov orb stos xor adc jle and cltd cmp (bad) dec pop mov int3 lods mov pop ret gs sbb and mov jmp aaa jl stc ret and inc cs lcallw mov mov xchg and sahf test in loop mov mov out cmp add inc xor test pushf sbb adc sub and sbb nop lods ds sahf stos mov lea (bad) xchg adc inc lret dec dec add subb add in cmpb cli sbb scas add sbb popa pop push adc push sub add add mov cmpl push pusha cmpsl cmp aaa icebp loop xor and test mov dec rorb (bad) mov add sbb dec imul addr16 add push inc sub add lahf adc outsb movsb andb xor in push add jle test fisttpl add lret loopne add xchg es pop in mov mov ds sbb outsb loop add insl xchg sahf and insb lock add push push or cmp (bad) jb out fs inc mov lret push cmp imul mov in pop cs scas out dec faddl clc ret xor xor outsb ss lcall aaa (bad) iret xchg fucomi sahf (bad) loopne out imul jecxz cli sub stc cmp sbb and bound mov jmp xchg gs xor inc jle add shll imul fimull mov orb and stc mov aas dec shll push mov pop mov pop fldenv adc inc dec or mov add stos pushf insb mov in test cwtl fldt lcall std imul cmp push and mov inc add mov dec adc xchg mov add add xchg or in add loope int3 push mov push add or nop add sbb movsb sbb sub pop adcl sti pop sub cmc popf inc cltd subb in mov cmp outsl (bad) stos add je xchg xchg xchg andl es aaa imul mov add jp fadds in xchg dec adc movsb add lcall add hlt fistl push xor dec cmp xor or sub and lret cmp arpl icebp fdivs outsb outsl push jne mov aas lock mov xlat pop scas push push add mov js sbb lret jg outsb subl add cmp (bad) cmpb out aaa lret addl xlat mov adc adc jo jne andl sub lea es jbe cmpsb leave lods lahf ret xchg add add jno dec loopne sbb add jge jg xchg incl js cld or jl (bad) pop and dec xchg add adc mov mov sbb jbe dec add jbe test fdivs es cwtl add pop fisubrl (bad) aas sbbl and lahf mov fs es sbb call cmpsb cmp add pop add pop lods les push sub loope fidivl jno pop imul dec inc cmp cmpsb adc adc pushl dec cmc outsb jo xchg movsl arpl pop xor jb push dec sahf call les xchg dec xchg add rcrb hlt fild mov cmp mov jb add mov xor mov add mov jmp popf and add mov cltd dec xchg cmp ret xor lcall loope dec jns mov cmp push (bad) xor addr16 mov fmuls scas mov mov push fldl fidiv mov jb push (bad) and inc or fcompl jl test add jno jge dec jo add inc fcoml sub sbb dec mov je add mov outsl add pop push cmc pushf dec adc pop xor mov push enter gs mull inc sbb fiadd mov jecxz jl cli add xchg icebp int3 push jle lds jae (bad) and movb pop jmp sbb aam repz lock add insb pop inc pusha and adc adc js aaa mov jp add push mov (bad) xor and hlt add push cmc inc add push rclb mov icebp adc jge (bad) mov addb push roll push mov adc add rcr or mov aam push and dec push add fildl clc xchg call xor jae add mov add sbbb pop add sbb or leave and inc out stos push mov scas das (bad) out mov stos aam jmp pusha test (bad) push push adc inc pop jnp add gs andb mov insb jb add or sbb and mov lret and add into fwait push push fs mov or mov stc or int3 cmp int adc clc xlat cmp in loop add dec inc mov xorb and add inc jb int3 out bswap ds loopne pop repz add xchg jecxz push pop hlt adc aaa sub cmpsb out es sbb movsl mov cmpsl mov and add push jmp mov push push lods push mov xor add xchg aam ss add or cmp adcb add (bad) lret adc sbb dec mov das inc sbb pop daa jp fiadd es add sbb mov loop add lret cmp add out addl add and mov or dec sti xchg cltd and push lret fnstenv sub add xor aas add or mov fadds pop cmp pop mov xchg lcall les jns js (bad) arpl loope in lea and push insb lret xchg pop cmp add iret inc pop cmp pushf xlat add dec add mov or in fdivs jle mov and rcrl cmp add xchg ret test aaa pusha pop mov add push sbb out sub iret mov inc int xor mov xor icebp cwtl xchg push sub addr16 add mov sub adc push add cs ja subl push imul popf xor in jno in jge cmpb in (bad) out jbe int insb cltd mov int3 (bad) icebp ljmp rclb negl xor shrl add outsb mov shrl dec mov pop cmp dec jo mov adc add or add repz mov push mov jne addl sub loopne movsl fstpl add monitorx pop pusha rol xchg xor pop dec pop xor mov sti imul and or add cs cmp add ds (bad) pushf mov and icebp jecxz std adc in incl rcl pop pop sti pop sub cmp mov push add cmp and loope cwtd mov pop popa scas inc adc dec mov (bad) add cmpsb shrl and add lret pushf test clc and daa fcmovnb pusha outsb sbb shr sbb addl cmpsl and lock add sub (bad) xor lret add clc add aam fild cmp ja add fistl enter add push pop sbb in mov (bad) sbb scas stc add pop sub clc test add imulb not shlb andl push add push rolb insb and lcall shrb cltd push shrd mov add add sbbl js xchg mov fmull aad cmc xor andl dec cmc subb add aam movsl mov scas push subl stos pop out add test inc pushf loope inc std mov js xchg andb les push xor notl inc jne sar leave pop enter add jo jp js add stos push xchg out inc cld lahf mov mov movsb cmp lods rcrl jge aas mov pop push inc cld test mov jmp add dec cmp add mov ss mov mov dec mov mov pusha add xchg adc add pop stos jae adc mov jb add stos jge mov jns cwtl or notl jo jmp add stos jbe inc gs inc sub sub mov add adc mov inc or xorb inc js scas add ja mov mov dec dec xchg push and inc aaa or cmp inc push cmp movsb xchg xchg fstpt jnp popa pop fmuls jns test mov or (bad) lods pop cmp cwtl cmp lock cmpsl movsl scas mov mov and mov ret sbb jp icebp or sbb nop mov jmp add (bad) mov jns or out fdivs sub jae test icebp out add repz xor cwtl je imul jo imul adcb fcomip add (bad) jp add lret add add mov dec pop mov sub shrb (bad) mov stos outsb pop mov xlat xor push cli fnstenv in add sub notb add mov adc cmpsl mov int pop in emms ss push shrl push dec aad ljmp sub pushf repz aas jecxz std pop xchg mov aas stos popa jbe push int rorl cmp push jmp lea inc aam js jle add adc insl popa (bad) add mov sti or xchg add js je or lods mov or ret addl add xchg and adc add add jb movzwl pusha pop das dec dec sub adc xor xchg nopl mov adc xchg add imulb mov aam repz ja lods add dec loope add mov xor aas pop fsubrl mov inc ljmp out add fistpl xorl sbbl nop fildll mov dec hlt sub fld and orl push xchg sub jnp stc sbb add xchg mov inc je ja in add mov addb insl cmp xchg jl (bad) or adc int jmp dec idivb xchg jbe add xchg dec mov aam fs jns ret mov lea push xchg popa dec add cmp rcr push pop loop insl sub mov cmp or dec add pop stos jge push mov add xchg lret clc push addb jecxz in adc cmp cmc xchg mov push lods mov jge pop add push mov mov fs ds xor mov stos adc add adc dec add jns repz xchg xor icebp mov push out mov sbb adc pushf adcl jle,pn sbb fs imul mov xchg test jg adc jb cwtl sti add or imul mov sbb and push sahf enter sbb stc jle imul mov pop incl cmp or jecxz int3 inc and dec mov test or aas jle lods mov jbe inc sahf orl movb push mov sbb (bad) jne ss inc cld xchg (bad) cmpsb andl roll add push push stc mov add cmp push fsubs roll repz in pop and fsubp bnd inc lock push imul test scas sub xor jne add loopne xchg mov andb (bad) push xor cmc sbb lods add jge xor test dec jae xlat mov punpcklwd decb sub inc out jg xchg lret stos repz mov pop das aaa inc movsb inc sarb lret or in add lods mov fiaddl aam scas xor add std pop jno adc fild nop ret jecxz dec xor add fistpl imul xchg sub add mov xchg sbb cs add jae push and add shrl cmp jo test pop inc add enter push and add pop lret mov mov add jmp dec add or add stc movsl push into ret lods adc cmc jl aas jno mov add fs jo mov ror orb mov add addb fldcw mov and push add vpmulhw fcomps adc ret je test int3 inc add push xorl sub cmp add push sbb push push les jle mov add lods das mov popa push rcll and inc mov jge bound sbb mov adc cmp (bad) (bad) sbb or push jle aas xlat xor aas orl test mov mov out pusha pop lds dec xor bound jnp adc push jbe je sti add mov inc jle sti and add inc pop add sbb popa add mov aam cmpsl test mov out test sub lods cmp pop lea std sub arpl leave insb jecxz enter and js inc addl adc popf sbb push fildll adc pop rcrl orb pop jbe mov add loop pop xchg fldt pusha dec out xor movl mov lock cli sbb data16 jno cld insl js mov aas add fidivrl aam movntq jno cmp pop or push add sub mov xor dec xchg mov mov add shll add pop pop lock sahf inc pop xchg das or ljmp nop add mov adc fwait subl add shrb push ja xor add lret in mov ss and add pop aas sub inc add cli jl cmpb inc call std and dec add pop cmpsl dec ffree cmpsb jbe or sbb fiaddl pop mov add add loopne cltd js fstpt cmpb pop xlat cmpl push and inc or add add rcr add sub xor cmp xchg aam aad sbb mov ss insb pop divl cmp (bad) push jmp in hlt clc add adcl fs addb in add cmp loopne sarl pop jp add inc mov and jle adc cmc shrl mov std rolb (bad) test push inc lret add add pop pop daa add sbb push call cmp push jp int mov enter xlat hlt pop inc jae push leave adc sbb cwtl add lahf fild mov sub xchg dec insb sbb imul mov (bad) and and xor mov mov xchg in fcoms push push push add mov popa adc add scas mov dec cmp add sub xchg sbbl mov rol in inc fidivl dec pop subl and iret test mov lret jb testb ret mov or fldl inc inc cld push ror add xchg mov and enter outsl (bad) mov out test jbe loop cmp rolb cmpsl jg nop hlt adc or (bad) repnz test and shlb xor das aam pop fsubrl jl xor jmp push movsl mov add sti push add aam jp push push push outsl ja cmc xlat add dec dec (bad) stc outsb cmp adc add add pop xchg test and cmp add idiv (bad) mov mov popa dec add cmpl mov ret addb mov stos add ficom fmuls push inc jle fildll jg loopne rorl cltd xor popa jns enter scas dec test cmp sbb add xor add xchg jle inc insb ret cli add cltd lcall in pop js cmp (bad) lret dec mov or inc jp lahf add push sbb xor push (bad) loop inc mov mov jg pusha xchg mov mov dec movsb fstp pop test xlat imul adcb stos push pusha pop jl pop cmp xchg push push inc idivl stos add push rolb pop cmp xchg mulb jg inc into addr16 (bad) dec jp push fcompl mov mov jmp inc and sbb sub lods push jl imul (bad) mov lods sarb popl xor daa lea das cmc out loopne (bad) gs test movsl inc lds lods jb add test shrl sbb ljmp mov in popf sub inc out sbb sub sub mov cmp inc mov idivb mov jp xor add add mov int3 mov add lret mov sahf sbb pop fdivrs add and fistp loope sahf or inc imul bound imul push or rolb icebp mov ljmp setbe cmp int3 enter (bad) (bad) sbb mov (bad) data16 (bad) (bad) mov jbe (bad) add jb fmuls aad cmp sbbl xchg cmp cmp nop outsl std sbb in add ds int push aas sahf stos dec fdivrl out jge cmpsl adc outsl sahf xchg enter pop repz popf cltd (bad) sub push mov data16 cld cmpsb jecxz inc push push mov cmp rolb outsl stc jne add xlat add sbb add insl push bound jecxz cmpsl (bad) mov in add mov dec test or add add outsb stos sti add arpl mov add enter push pop into pop lcall stos xor add mov pop call add add sub mov in and cmpsl add ss jle add popf inc lret jo adc in dec adc jmp push add loope mov loop add aam dec add iret jno out push adcl pop cmc jo aaa notb arpl incb ja jg lods jl dec push aam scas xchg je in or dec stos xchg les lds jp or push or add cmp jge call in sbb popl movb mov dec cwtl add stc add xor mov mov stc add mov jmp adc stos mov inc out mov add fisub mov enter dec test jb jmp mov cld imul mov cmpb subb sbb movsl or aad add rcl notb gs (bad) leave cli pop add inc jge insb pop pop add xchg xchg mov mov mov andl push sub scas xorb jo and push sub push adcb pop mov mov gs xchg into mov pusha addl mov xchg insl repnz ret pop xchg inc fimull orl jl push je push adc xchg pushf cmp cwtl xor loope aaa mov fadds push pop pop dec push cmp jnp mov sbb dec pop and fs sub das jge cltd scas add or imul je mov push pop test adc or inc mov stos sbb call mov fmuls ficomp inc dec sub sbb sbb adc or push sbb pop sbb subl mov jecxz aaa pop jmp push or cmp bound imull xchg pop push add push adc push mov pop repz sub add int repnz das jae add in int3 cs add sub scas cmp fs pusha mov add fild push cltd loope add cmc push add and jns insl adc mov mov mov xor add mov inc mov mov xchg test inc pop fs out andb adc mov in adc mov push add rorb and add dec push lock push add dec xchg ret and imul (bad) add cmp ret add inc ljmp inc and jnp lea or out loope inc xchg mov push sbb or pop cmpsl and mov rcll pop push test sbb fldl pop in sbb sti outsl out jo sbbl out (bad) roll or ret ja mov lods ds and jp add fimull stos pusha pop pop xor sbb mov mov jnp loope pop xchg adc cmpsl pusha mov aas add roll dec repnz jp test jo arpl inc inc xor loopne cmc or mov add xchg lahf jne das and add jcxz inc pop hlt add xchg mov cmpsb inc aaa mov sahf adc (bad) fdivl mov lea sub pusha les int3 add inc mov jae mov mov mov in cmpsl les xor imul fildll adc dec add inc mov (bad) pusha movsb dec add rorb add js inc aaa jne pop sub add aas orb loope push jns call inc test dec add cmpsb cmp add pop out int lods out mov dec cmp fiaddl xor sti sahf out add js jg shlb cmp addl cmp sub xlat out (bad) pop rcrl addr16 and mov inc push dec out jae xor ret in add jl xchg mov mov mov dec sub cs inc es xor imul sub loop sarl adc fcomps dec push addb push int3 dec int stos cmp sbb add in push push (bad) fdivrs cmp jne pop add add repz add stos popf and cs orl cmc dec ret adc and sub jno or lret into ret outsl call mov add pop cld jbe add cltd or add xor in jecxz pop add out mov push xchg mov repz add cltd in mov add adc (bad) mov bound inc mov push lods cmp and sub int loopne pushf stos add sub add or jae test imul push adc or ficom cmpsb or andl inc test xor pop add pop sbb add cmp out stc add sbb mov mov imul int scas pusha xor out negb add mov in sarl jb dec xchg xchg xchg movsl movsb pop outsb sbb ret iret lcall (bad) cli fdivrp testl or mov jmp sti cltd adc icebp out push mov sbb in mov adc daa (bad) and imul mov push shlb pop in jl push mov pushf mov inc xchg sarb pop mov xor xor adc fs cmp mov inc imul mov push movsb push add push and push xchg imul cmp cli dec mov mov sbb out shll fldl (bad) divb push aam out sbbb push add push mov icebp push mov add (bad) adc das mov pop mov out inc add sbb adc incb add jbe mov and pop js mov jecxz outsl inc sub fdivl inc add andb pop mov sets lcall call ds addb xchg nop fdivrs dec faddl rorl fstps xor cmc packuswb notl cmp adc and add jne fsubs xchg lret and ret add mov mov add addr16 scas mov jmp and or xor insb add jle daa xor mov cmp jl add scas cmc aas add das inc pop lock mov add adc xlat xor iret add movsl dec mov adc push je jo mov cmpsb xor pop or call insl pop add out jns or xlat add stos and add dec mov dec add cmp pop in inc or push add stos push call add loop aas adc add push cmp mov popa inc and push jecxz cmpsl int mov lods data16 adc pop jg jo adc add sahf pop insb or add pop pop jg leave in ljmpw adc sub rolb dec loope jae testl sbb push cmc add xchg jecxz (bad) mov popf adcl inc aam sbb add jmp gs pusha (bad) mov std sbb xchg cmpsb in scas cmp inc loop ljmp adc ret mov cmp in push (bad) xor popf cmp pop xchg dec jge inc stos push subl lret jmp pop repnz adc adcl add out imul add loope and cs es cmp (bad) and adc jo in lcall or add sbb add cmp push pop call xor cli movsb xchg xchg adc jmp ss sbb mov stc cmp xor leave mov xor xchg stc dec arpl add xchg lcall push push xor mov mov or inc (bad) jg pop fwait mov ljmp push xchg pusha out ds add add hlt lret dec daa (bad) out pusha jl rolb ret dec rolb adc pushf add sub push in pushf data16 das daa test mov pop and or out adc daa outsb scas outsb mov or lods sub aas cmp add in nop (bad) cs call roll into js add loop xchg dec das nop sahf adc les pop in ret sub adc aad xor sbb lret add mov push add pushf pop imul mov xchg add lret xor cmp jo push add movq clc xchg dec adc add js sbb inc loopne mov out daa add or cmp fsub sbb loope push dec adc and jecxz callw xchg outsb add sub arpl imul cmc cs mov add xor test add mov in jo,pn add les add imul jb cmp xor add mov push push cs jo cmp sbb jne jo adc and test out mov in outsb jb mov xor sub add push out pop outsb scas or imul sbb imul ds clc mov inc mov pop mov fimull xorl bound mov lahf lds sbb mov ret pop xor test mov aas xor add cmp cmp leave test and push pop xchg jo add adc cmp cwtl dec jge fist add mov test lahf fstl call js jb mov add xchg add pop pop add sbb mov add sub iret mov bound mov gs adcl inc lock pop xchg loope jno add sbb psllw lods inc subl inc push (bad) mov inc xor jl cmp aas fsub mov outsl stc cmc jo and xchg adc js loope or fmulp jo fstpl addl dec and add sub inc jbe adc and add stc test add test fwait movsl add ja mov add xchg pop fimul add push call loope push add pop fisubr xlat jns push sbb roll lea rcl je daa push add mov (bad) mov lods pop mov pop pusha sub sub jl dec lahf add mov pop push adc scas (bad) pusha xor jp push (bad) pop popf adcb inc (bad) test mov sbb dec mov and cld in pop push addr16 lock call add and jo loope (bad) in repnz xor jo cmc cs mov mov sub outsb adc jno xchg push and leave or cmpsb lret es add push mov push fwait or push repz enter lods and je mov mov pop shl push pop out pop mov scas les je out add mov mov insb sub in add xlat fnop add pop cmp and mov cmpsb movsl push test add mov inc lahf leave in mov addr16 cmp mov jno jno mov fldl xchg sub mov xor and adc cmc add (bad) arpl push aas add push mov pop mov sub je push jo jne xchg sub cltd mov fs xchg mov add negb je sub jnp xorl js leave push pop (bad) jb mov sub push stc loope pop jl mov aaa push in add adc or addb sbb jno add cmovp pop fnstenv (bad) out mov dec stos xchg add pusha xchg int3 hlt dec mov cltd cmpsb jg add mov (bad) dec mov xchg xor repnz dec adc jl add mov fs ret flds cmc js icebp push jmp int3 pop fiadd inc xlat sub stc out push orl call push xchg into xor inc je add out adc inc xchg in ljmp dec and rclb pop cltd repz sbb xlat add mov add push rol and (bad) and aam pop test cltd mov push mov add pop adc pusha outsb or add mov xchg sub repz cwtl or inc insl or decb imul sbb clc mov loope inc loopne punpckhbw jns xor inc lds sub call ret mov cmc push fmul push xor mov mov sub mov (bad) js out adc jg mov outsl stos mov pop mov add jo add push call stos pop adc ljmp pop int addb jno lahf add sub add sub push cld adc mov into cmp jecxz call cmpsl and and dec (bad) or mov in je movsb add xchg push es ss aad popa faddl into mov pop sti or (bad) js sahf inc cs mov push sub push aad adc jae adc sbb mov xor sub jbe add dec and jl add stc (bad) mov sbb fisub or pop insl xor inc mov cmp int rcrl xchg push or fsts cli repz xor add push ffree fcomip adc arpl jmp cmpsl push push hlt and mov cmp xor out push jecxz movnti add lahf add add mov jne fs pop es ficomp sbb test mov sbb add addb cli mov push cld pop addl or lret dec and out lcall aam nop aad add dec xlat ficompl and call sarb subb iret or movsl adc add add fildl movsb int ljmp incb fs sub adc add mov cltd lods push add cmc jno addl mov mov dec jnp xchg cld sbb js add inc imul push movsbl adc repz add push xchg popf inc insl icebp push jae,pt insb adc (bad) into sub popf cwtl or dec add xlat pop push cmp dec mov stos push lahf jmp shrl cld xchg add mov iret add lret xchg pop lds stos arpl in fstpt mov jo pop rclb push sbb push and sbb jb or push xchg sahf cmpsb sbb pop lret mov add enter xor ja ret xor hlt add das sub sub cwtl add push ret roll out andl leave add aad movsl pop enter pop push pop xchg push test jns jb sbb in jecxz jnp mov int3 mov pusha in xlat add scas lea add int add out push repz fmul pop cmpsb add jmp push xchg imul iret push xlat js cli add mov scas pop jne and mov sub cld jnp mov data16 in push nop scas repnz pusha popl outsl andl push xchg mov push stos mov (bad) int3 jge insl nop pop xchg imul dec fwait add adc cli mov mov into inc inc jmp dec cmp inc out loop xor adc xor mov sub out hlt add jbe popf repnz cli rorb stos sub in pop scas inc add scas lret adc repnz sbb and xchg mov and jo clc outsl loop les mov andb sub and mov ljmp sbb cwtl out xchg pop negl push cmp subl ficompl sbb (bad) mov add xor jno pop cltd out je adc das pop add sub movsb arpl pop cmpl mov cld sbb sub and cmpsb adcl pushf daa push inc cs add inc mov inc out add mov les dec cmp int3 insb shl xchg lods add jmp jb mov jl add js cmc add mov call sub jnp jne add jp (bad) out ret (bad) mov sub ret (bad) mov pusha sub mov test add aas push int xor jns xor repnz std fwait add movsb push and jp roll repz mov push mov jnp cmpb mov dec sbb sbb push dec mov push sub xchg ja mov mov sbb scas pop les add mov dec int or outsb jp into mov xchg stc jl pop fsubrl loope aas push sub jmp mov xchg cmp and add out aaa add bswap sbb outsl adcl mov fildl adc pop jns movsl add and int sbb pop subl add xor add sahf mov ljmp adc jl bound add pop ds inc adc cmpsb stc push paddd push mov fcmovnbe inc das push out push and sub in sti xchg (bad) lcall push push adc (bad) fidiv xchg cmp add jle cmpsl add les mov scas call movsl sbb or ljmp pop das jmp mov add or or sub fwait add cli dec jo jae pop lret add ds cmc mov jb cli cmp sub jo add add dec dec or lds sub mov add xor (bad) xchg sub push movsb add xchg mov out mov add and ds add sbb out cs cmp cmpsl sti add dec (bad) fcom adc jbe sahf incl push jl jg jo andl aam mov pop std push add and popa add stos cmp les sub push fisub inc jne (bad) movl lods add int sbb inc fildl sbb jge xchg (bad) in jp (bad) sbb mov sub or add jmp push mov (bad) mov scas sbb ja lret dec gs add outsl lcall into dec push call push je ja cli xchg repnz mov xor outsl push inc repz fidivr add loopne mov adc sub into jae fadds scas add scas mov es rcr mov add in jp frstor add push inc aam xchg repnz mov pop lret add popf pop loop and out add into cmp ret movb xchg fs or jbe pop icebp sbb rcll bound mov fdivs add arpl dec xor outsl popf insl and loop push dec add inc sbb lock leave andl jg jmp sti push scas out inc pop (bad) and icebp pushf and sub fadds out movb enter mov (bad) add stc inc sbb sub sbb movsb mov roll mov push aaa dec pop mov xor mov xor add dec idivl aas xchg pop lods test lea dec stos (bad) cltd cmpsb test mov movsb jg in test dec cmp mov cmp mov adc in xchg mov aas dec test adc add lret mov sub orl xor jecxz mov add into pop xchg dec pushf push add jne push call adc mov popf arpl inc dec add sub call dec pop adc bound xor in test cli int3 (bad) add or subl inc stos xchg fmuls sbb jo jmp out (bad) sub add out cwtl (bad) pop and adc loope popa lcall dec inc scas movsl or or add sahf pop mov or add (bad) (bad) jl add ficoml lock mov jecxz rolb xor mov mov xchg jno add arpl add repnz inc pop add jno lret sarb jbe add enter imul rcll lock add movsl xor sub scas fmull adc pop mov push push sbb cs scas cmp jne mov dec add enter int3 std sahf dec cwtl kxnorb add xchg outsb loope rorb adc (bad) pusha nop cmp mov call xchg jne add or add (bad) fbstp enter clc push jecxz mov xchg jle into add icebp sbb jns ss sahf jecxz push cmp inc pop clc xchg mov add (bad) imul ret (bad) loopne sub jo add mov faddl lret cmp sub add ret mov testl lahf fisubrl addb mov in mov push add out ds or push movsl add mov sahf add data16 push (bad) es mov cmp inc test push mov sub lds mov sub aad jecxz jns add xor mov xor push jo pop orb aad xor add sub mov jle ds pushf das repnz clc and stc mov cmc repnz daa mov out push add enter pop sbb pop add pop fwait sbb push mov jae sbb outsb out fcmovnbe or add (bad) fwait out fimul aam add repz mov sub add sub sbb addr16 stc mov out sub add mov cmpsl ds fisubr pop xchg out push subl (bad) bound push inc add mov jle mov int mov add or xchg add test lret lret or jbe and add out int3 imul xorl out sbbb add popf test sahf lods lds cmp out push ss icebp mov push stos cld sbb sahf push fist add imul sub rclb lret or movsb or sbb es stos jp das lods (bad) popf or sbb inc icebp inc repz cmp jmp (bad) push mov mov mov inc lahf jnp inc or les fcomps jne outsl (bad) sti or add dec pop subb pop iret push mov push addr16 stos test inc dec inc add inc pop loop mov xor pop mov mov sub int add adc mov add sahf sbb scas and clc pushf adc (bad) in into inc and stc flds pusha inc jns jge jnp jbe add aas outsb fildll jbe sahf or ret jg clc mov push xorb lea mov pop inc stos jbe xchg cld xchg inc inc push dec push sbb push sbb movl cld adc es jo ja (bad) inc add jb repz in adcl jbe popf push fcompl cmp xchg pusha dec sub or and mov adc cmp or add loope dec mov jle ffree and movsb gs iret inc mov mov lahf int3 shl stc add frndint jb mov jb sbb insb ja mov mov es push xor fisttp imul dec out pop rorb (bad) xchg orb xchg pop popf jbe scas add js dec xchg xor add lea add (bad) lds inc add pop inc js inc out repnz push das shr push mov lret xchg add std ret jmp mov dec xlat add adc and add mov mov push sub std ss bound mov (bad) fnstcw add scas dec fmulp repz add mov lahf subl add test pop dec movsl or or addl scas jnp add adc xchg subb add cmpsb sbb call add fadds jnp adc push sbb ja jmp mov das lahf inc lods jecxz arpl add ds aaa xor xor fmulp adcb das les push inc xchg insl clc loopne cli jbe imul mov dec and (bad) cld push push xchg add mov dec sahf dec dec xor enter outsl sbb push mov pminsw push call sbb adc loope std add push ror mov push dec orl lahf xchg add add pusha jno push add mov xchg aad mov sbbl mov push sti dec in testl and sub test enter pop arpl sub jl incb sbb (bad) jo mov pop jmp jno ffree push or je push inc les inc lahf insl sbbl and int3 pop mov ret lret and cmp and cmp mov xor cmp and cmpsl (bad) pop xor mov popf das rcrb mov xor mov add inc adc mov jl jp add sbb ss out and aaa cmp jle pop aas stos lcall call lock add push test add mov add and std loope inc stc adc cmp add shlb jl stos jb imul pop popf sub fiaddl imul jl (bad) fadds loop,pn mov push dec mov out out fs iret out mov add and lret mov push stc add mov out add mov clc pop mov lock fwait xor sub xchg loopne clc fs pushf imul insb and mov xchg int3 and sub add add dec jmp jns fnstsw xchg mov cmpsb and js mov fcomps add add mov into or outsl (bad) mov add leave das aaa jle ret or cs xchg es cmp outsl cmp push mov movl xchg stos (bad) add add call cmpl pusha pop int aaa push daa aas test fcmovne out add xchg fnstsw and add fs inc out or add test inc add lock xor pop inc xchg pop jecxz add mov addb sbb add ss push or popf jecxz inc in xor mov cmp mov mov pop cmp add cmc cmpsb mov insb or adc add in inc loop inc add mov (bad) pusha mov cmp jne vmovaps mov aaa test add (bad) lods jnp cs pop xlat xor nop add add mov push enter mov mov clc mov mov inc xchg mov inc adc cmp or fisubrl test rolb popw pusha pop and and fsts ja les (bad) adc cmp adc (bad) fiadd inc xchg inc ss out cltd add pop push push sbb loopne xor or jbe dec add inc add fcmovnb adc leave pop sbb jbe,pt std pop pop int addl repnz shlb subb add mov cmp add sbb sbb add loop push cmp jbe add sbb push insl sti push test out dec xor dec sbbb pushf xchg push add or inc add mov push xor cwtl fwait sub cmp out aam xor xor push test add mov add movsb xor nop sbb jp cmp pop xchg mov mov jnp sahf inc cmp pop std pop inc cmp jo xchg mov mov scas jae xor add leave fadd je mov jo (bad) movsl cs lret mov push sbb xchg pop xchg in mov (bad) cmp lahf inc inc add scas stos test fmuls sahf adc add inc mov push shrl add add mov rcrb sub andl inc lods scas pop mov or jo inc pop adc lahf add (bad) dec stos in mov sub add addr16 jbe sbb pop in add in rcrl xchg div out inc and mov mov mov dec into mov cmp test or in sub pushf out shrb jle adc sbb ret lds or stc add mov gs jle add ficompl mov push (bad) loopne mov ret jb movb sub loope aas pop test icebp inc mov stos add test out mov loopne add inc xchg jecxz arpl out add icebp repz cltd mov xor mov add int xor out bound add mov inc mov xor xor adc outsl sub jl mov xchg rcr mov lods adc push fldl jns or sub mov outsb add subl cmp jl pop in pop leavew sbbb out (bad) xor push add push xor cmc fscale inc push sbb jne aas movsl cmpsl push jnp dec (bad) in add jmp jne inc cmp jle,pt dec or popf rolb cmp ja lea pusha rcll jns pop xchg mov or pushf test sbb adc aam mov ds push jl mov add ret xchg push ret (bad) adc and sbbl cmp movl out imul mov push mov cmp add cmpl sub icebp cmpsb sbb sti add jmp xchg pop sub add in mov add jge jl sub pusha imul bound jmp cs das jl gs (bad) push jbe and push aam std push add pop cmp sub in inc aam and fsubrs pop add and cmp orl mov xor mov jbe fcompl jg outsb loope inc add dec jle add cmp iret add jg mov loopne fadd arpl aad push lahf dec adc xlat popa and daa xchg jo inc cmp jne cmpsl sahf aaa sbb add (bad) (bad) push sub dec cmp inc push add mov movsl imul into jp pop inc xor dec movsb add xchg push (bad) (bad) scas mov lret mov fnstcw sbb xor out mov aad sbb xchg sub push mov or in cltd leave fsubrs jnp pusha mov lods movsb xchg cmp lcall out xor cmp aas mov push gs loope (bad) je pop outsl push shll cmp cmp das or sub lcall stos insb mov aam mov (bad) jle add and shlb push dec or mov es jle hlt dec add test or sbb pop movsl scas and cmp popf push add jge xor adc mov imul loop jne cmpsb inc mov cld xor mov add inc pushf insb jne jne add ds andl imul cwtl push test out inc add jg scas mov int3 js mov mov loope fnstsw ja xchg data16 fs (bad) std inc aas inc enter jp iret add sbb add cmp push (bad) pusha addr16 sbbl test js enter xor inc inc jae mov repnz (bad) jg add mov outsb add int mov pusha pop inc xor mov out jg (bad) add add in in inc incb sahf lret add fadds fiadd outsb aas daa and cmp cmpsl test xor sub and ficom add mov (bad) in jbe add mov dec pushf lahf and sbb dec sbb pop loope xchg jl adcb jg sarb mov jnp xor fimul inc xchg pop pusha test adc inc inc sub punpckhdq mov test in mov das mov lcall sub loop jo cli add repnz hlt mov inc lea mov in test inc das popl jmp jl,pt add fcoml sti mov jo xchg ds add xor bound xor fxam arpl lret call popl sbb xor popf gs mov shrl call xchg lds sub (bad) inc pop lods sahf mov add sub sbb stc fistp sbb dec mov push mov sub sbbb sub cmp inc je lock iret inc mov push insl js es sahf sbb adc add pop push orl stos (bad) cmp xor popf sbb add inc or xor les decl xor add mov stos inc mov in cmp dec sub (bad) jbe xchg fiaddl ss or addb pop adc xorb fs mov mov push add rorb xor pushf mov jl flds call std dec sub xorl push or das leave and adc sbb cmp rcrl les stos mov ret cli push cmp sub fbld (bad) lock mov push pop test add outsb cmp fwait verw roll movsl out pop je repz lcall data16 mov xor test xor pop add sub sti ret repnz mov pop stos test mov cwtl mov xchg rorl or xchg pop add or xlat ficoml mov inc movsb ja mov and add cli mov sbb add push and lcall pop sbb add test xor ja pop cmp push out pop loop ljmp bound or dec (bad) sbb pop out orl add push pop inc and frstpm(287 shll push arpl clc (bad) jle mov lea mov rol sbb mov jge (bad) insb or adc cmp mov (bad) mov cmpb fdivp gs add mov fst inc out decl ja jns jmp and add js add jo (bad) xchg jecxz sbb xor rcll fidivrl in add xchg stc leave add mov cmp xorb sbbb lods push push jge xor out push into push xchg outsb repz add pop add jo add es add inc aad adc mov jmp add mov popa das es adc jne xor data16 out mov sub xchg and or scas xchg mov add mov (bad) addr16 add add test add pop sbb leave pop loope add in push rep mov jl (bad) ss pop push xchg cmp outsl xor lahf lds add faddl or inc (bad) jne scas inc mov jo jp js add fidiv push cmpsl or sbb pop pop inc push pop pop add ffreep dec add xor xlat cmp loope mov xchg xchg inc enter jno mov insb dec test pop inc push xchg sbb cmp jl mov mov in sahf mov fnsave imul push incl mov (bad) xchg (bad) mov popa add mov outsb add vmovsd adc or repz sub mov dec and mov mov push jmp pop movsl mov cmp in sbb lods outsl fimull pushf mov xorb ret cmp add push push pop cltd sbb adc sti imul add inc jg test dec pop sub aad adc mov iret pop add test lret insb mov sub adcb inc js add xchg (bad) xchg add dec movsl pop pushf lcall movl add lret push add jno and mov out mov addl aaa stc pop lcall cmp test add dec sub cmp jmp push add add mov sbb pop add aam and std out jg mov inc addr16 add bound rcrb push fiaddl sbb jle add nop mov xor pusha (bad) pop jno pusha push push add inc imul test subl dec push test inc mov cltd aas and outsb add cmp clc mov add outsb add or sub psraw and enter pop je pop and adcl outsl test sub add hlt jmp (bad) jae in stos mov inc xchg cmp je mov insb xor insl in jmp push addl pushf in mov movsl push scas xchg imul fwait in add push xor adc mov rclb add fwait insl imul roll and mov and and dec lea aam pushl call adc push hlt cmp rol test lods lret movsl add and rcrb push pop rcl sub mov add add jb adc add daa add movsl fwait or adc sbb or sub into jg ds popa dec es mov jl sbb push das cmp adc xor lea in xor imul add dec push add movntq jbe cmpsb daa in std popa xor (bad) insb jge bound pop pop movsb add lahf adc push out add sub daa mov roll (bad) pop fcomps sbb mov or sbb and sahf fwait idivb add (bad) std jno sti in pop iret or jp inc dec and in xchg push add shll fstpt dec push cli cmpsl addl ds iret das add rclb add pop popf pop (bad) fldenv inc fwait in inc adc sahf cmpsl jnp jne das mov xchg outsl subb xor xorb cmp mov mov sbb mov lods mov fist push cmp sub in je enter lar frstor fcoml mov bound outsb pop out adc stos (bad) add or gs pushw jmp fnstcw sbb push xchg adcl roll xor call add add rcrl mov or jo jmp add mov cwtl pop test add (bad) jo xchg add sbb and orl cmp lock mov repz add or jae mov data16 test dec sub and pop ret or mulb adc test dec movsb jbe sub mov mov pop mul mov jae aad mov nop push and dec hlt push rclb ret aas nop sub push add fsub rcll dec roll and mov out xorb pop or xchg add jo lods cmp jl aas mov add inc mov loope inc xor mov icebp lahf shll or mov xor or fs sub sarb sbb loope out xor sahf sub push add lret movsl in xchg mov shll xchg std dec xchg daa rclb jae lret sahf mov inc push sbbl stos pop in mov mov nop push pop sbb adc push sub pop pop push loope int jno ret push in sbb cmpsl or lea subl push jbe jne sbb cmp daa push cmp mov fs pop pusha ljmp inc jnp pusha aaa pop jl mov inc xor fstp jb adc push add and (bad) add mov addl mov sbbb jge mov push mov jp insb mov xchg add sti (bad) push addb lret inc add mov inc cmp xlat adcl inc push mov inc inc (bad) aas inc or stos pop inc jg daa adc ret cmc into pop sbb push jp cmp cmp out repz sub loopne cmp dec inc dec mov sub inc pusha jae outsb add add mov xchg adc and pusha push (bad) movsb jno icebp and sub adc loopne addl fidiv cmp add pop dec es faddl testb js push pop data16 push inc xchg xor loope nop sti cmp in test mov fstpt dec add mov adc add pop sub call xchg xchg iret js push hlt mov mov dec sbb andl push inc mov or cvtdq2ps cmp pop xchg roll push jg inc cmpsb sub pushf add (bad) pop subb mov movl or xlat cmp pop psraw insb add adc inc add inc outsl movsb and ret ja mov adc mov mov xchg mov add lock pop push add (bad) xor adc and std sub jns sub add fcmovb (bad) add push ja and adc mov inc std add rolb mov leave decb inc call (bad) jge rolb push hlt pop clc mov outsl jnp inc das mov mov xchg add mov xlat and ret insl inc leave cmp js lods or ljmp aaa divb lock call dec in pop stos (bad) jg stc loopne cmp jmpw lahf add inc push inc xchg jnp orl sarb push mov pop add dec (bad) cmp fs out lahf xchg add jge ret lds (bad) adc cmp (bad) addr16 dec into negl push daa popf jle cmp fcom ja jae lods pop inc mov test clc rcrl ss gs cmp test lret mull fdivrl pushf mov xchg leave into ds cmpl cmp call inc pop add xor dec inc in xchg and xchg inc fstpt inc movsl lret and mov xchg pop subl mov popf xor clc scas hlt fs test jl adc add loopne mov sub mov test add out das sbb add xor pop add es inc add hlt push fcoms pop xchg xor sub push repz add lea loope dec mov pop push push add lea add pop (bad) fistp push add sbbb cmp jmp pop mov jl mov dec cmpb sub pop out xchg pop loop enter test mov add daa or mov rolb push jne inc push push sbb (bad) adc xchg add movsb inc push jle push outsl loope call je mov push movsl sbb repnz test pop inc jns xchg add int3 loopne pop pop stc shr adc jge mov mov xor int add pop pusha dec addr16 mov std test add add (bad) xor push clc or out ja out lock sbb inc loope cmp push lds rcl idivb sub or loopne daa in aam inc add dec iret (bad) add xchg or or cmp sti pop xor add mov push xchg mov cltd mov bound inc inc popa paddq mov xorb mov ljmp inc loop popl mov hlt jno add das ret iret js pop add divb or lock pop imul imul dec add cmp sbb add std push movsb sub add das mov pop sub mov or lock push pop and jg or push icebp add jnp cwtl pop rclb cmp push roll pop mov mov shl mov das pop or jnp cmp pop cli add push hlt fimul mov jl push pop inc jecxz xchg jae test jns xchg mov jo inc add imul jg xor test jge jbe outsl xor dec mov xor add lds xlat imul add xor xchg outsl or test add pop in add rorb jnp mov xor stos mov inc les pop repz repz xchg out xor jle js add test xchg lods das pop add fsubs (bad) cmpsb in inc add imul ljmp sub jg inc dec sahf adc cmp pushf dec in (bad) repz sbb xchg cwtl add cmpsb pop aam test je push add outsb gs add pop aas movl push sbb jae push mov loope sbb add mov inc dec insb add sub pop adc inc sub je jbe push pop ja mov mov jns add mov insb jge sub pop (bad) fnsave add in dec int outsb movsb add adc push jp jo lea fistp add std rcr or andl inc dec cltd sub jo repz push cmpsb pusha mov and lcall jo or inc negl ret pop mov push mov push add jne jge pop xchg jle andl jae setno and pop cmp add adc pop inc cltd pop mov mov loopne mov shrb sti bound pop in mov and pop xor cmp dec add out mov xorb fstpt mov lahf mov jle (bad) xor pushf icebp pop add sub lahf pop add push lret mov or jno loopne add mov add mov or pushf push fwait int3 pop mov pop aas mov cmp ss adc mov dec cmp add (bad) mov (bad) sub add scas jmp xchg test xchg push arpl xchg (bad) or mov xor push popf test add pop aas sbb add enter sbb sub or out xchg jmp and dec leave add mov mov mov sbbb cmp enter mov sub ret mov sbb and xchg inc dec enter cmp add fidivl (bad) sub (bad) xor fwait sbb imulb mov test cli xlat mov test sub add or sbb popl sub popf add daa out je mov pop mov mov cmpsb lahf lcall jp xor pop mov or clc adc addl out mov jne add in arpl movsl mov add out mov jecxz mov loopne aad add fs xor cmp mov cmp adc xchg fcoms popa dec dec or shlb lds fucomi cli add (bad) cld cwtl fwait lahf adc jne mov arpl push mov inc cmp sbbb (bad) mov flds pop lods (bad) xor loopne xor icebp dec sub cld add xchg xchg xchg in ret (bad) mov or popa add mov in ds xorl xor dec cwtl add mov mov add mov add ret sbb add dec xor xor das dec orl pop cwtl push push testb adc test (bad) sub sub mov jle frstor sub enter and inc mov cmp cmp dec mov out loop test cmp fistp add aad js add ja sub add sub fldl xor sub stc cmp adc cmc jns mov inc jecxz pushf mov add push ljmp je pop adc bound sbb cwtl lcall jb inc sbb ret jecxz jne jle (bad) xor xor pop andb stos jg cmc fs jbe (bad) mov jno in out cmpl or outsl popl xchg popf mov mov add jnp test into sti add rcrl adc push test inc inc (bad) jl dec add push jae jge xchg js mov out push add and sub add mov add add adc dec xchg lods add pop push adc xchg mov add repnz pop mov add or add jns dec add pusha (bad) mov add int3 fisubl add pop (bad) mov shrb sub ret pop cmpsl cwtl pop cmp add es fnsave adc cs xor stos sbb sub xor sbb call add push jae xchg ljmp dec mov (bad) pop pop inc inc mov cmp loopne (bad) mov and xchg push cmp add ljmp add cs out in test jb pop fimul add ds push pusha ds add (bad) movsl fimull xor push mov sub jp jg push cmp and jo mov incl sub cmpsb fimull ror or add in icebp gs push cmp mov mov mov jl test pop cmp sbb nop popa push mov add pop ljmp adc dec popl pusha push repz sub sbb sub add gs mov push out xchg jb cmp or cltd das cmp es imull add mov bound push andl out and dec dec mov cmpsl add xor inc out xor mov mov sub add add and aad cmpsl jp in mov ss idivl clc and (bad) in pushf loop add mov mov or lret add mov inc cmpsl nop inc dec popf jno add ljmp insb shrb push aam dec arpl pop cmp mov xor mov push or adc out jb popa add jno pop add inc mov mov inc call gs popa add sub ljmp sbb dec add xchg daa jns fs orb lcall add sarb jg xchg dec cld mov fstpl insl sub scas rorb arpl hlt xor sub (bad) sub inc mov inc out stos xchg xchg mov mov addr16 xorb lock andl adc arpl aad push and subb sbb into mov add cmp data16 sbb add icebp cmp in xor jns sbb rcll aaa add dec lret mov jp (bad) int sub xchg jmp mov push xchg outsl js movsl pop test pusha xchg aam dec ljmp in and pop addl add mov cmp add mov in mov daa push lock std fisubrl pop xchg daa xor (bad) add subl jl repz add push cmpsb stc int mov call add add push push fstps std adc andl ret mov pop push in mov sbbl leave cmc mov pop inc jbe fs out and sbb ljmp push mov and popa bound aaa test popw xor es inc add jecxz cs pop sti sbb lods xchg inc jge dec and out pushf inc jmp bndldx sub icebp push add mov mov and mov xchg add jle popl shl std mov add pop pop mov pushf or mov mov add aam ret flds (bad) sbb test push popa stos add rol fsubs ja add mov sbb add lahf sbbl cmp add in jmp cmp add push jl pop clc add jno push mov xchg mov negb scas je into xchg mov clc (bad) mov mov arpl add xor add mov or mov and push inc ds add mov add movsb sbb mov lock test cmpsl jnp lret cmp add push sub std into add ret xor out pop xor lcall rcrl adcl insb sub jb add xchg rcll xchg ja add les xorb ret fs sbb (bad) cmp ss dec inc (bad) in jns sub les mov jecxz (bad) pop sub hlt pop test jo (bad) outsb add imul testb sbb jno in xor popf or iret cmp movsb add out mov je xor sub xchg sub adc xor adc icebp mov add mov push add cmpsl push dec subl test mov int3 sbb ret cmpsb jl mov incl xor mov dec pop pop pop pop daa push jo sub inc add (bad) jecxz fadd cmp fist lds lret push mov arpl xchg inc pop ss push adc xor (bad) sbb mov je push sub stc add or add in adc andb dec add pop pop adc dec xchg mov fcoms dec xor (bad) stos sbb int or inc mov cmp pop movsl mov jmp pusha mov inc add mov fsub test sub lock sub enter test mov or test leave add int3 stos mov aad imul (bad) or leave add insb adc add sbb add cltd int push stos dec sbb cmp lahf inc lret xor dec mov cmp xchg ret cmp subl add std andl adc push push cmpsb lds sahf or jb jg add dec xchg cmpsl jbe pop jmp sub mov and xchg add pop mov (bad) into jmp sbb push insb push (bad) ljmp pop inc test lods jg xor (bad) jecxz adc insl adc xor aas sbb lahf and sbb sarb pop int3 push xor xchg inc cmp add mov add lea add mov lds jmp hlt dec out out (bad) xlat in inc mov pop adc add sbb sarb mov sub ficom jmp ljmp dec add (bad) sbb and inc clc cmp pusha or or pop ja xorb push jb pop add inc (bad) jo xchg ret mov stc pop and aam loope ss popf hlt sub push dec push std inc xorl add aaa dec je iret add fwait (bad) rcrl hlt sbbl (bad) adc or mov sbb or (bad) xor popa ds adc (bad) xor or mov sbb jecxz aaa push inc fnstenv pop mov add js lods les push mov sarb jge add fdivrl sub popf fildl jo mov inc loopne cwtl mov das add xor sub xor cltd insl mov incb sti push mov mov push sub lea pop je jb int3 jnp add adc push es jmp add je add mov call stos outsb pushf xor inc push sbb sti lods repz fsubrl add ret cmp inc and vpxor mov mov pushf rcrb fidivr add adc lea dec add cmpsl jb add push add mov add sti push daa test lds mov out js popf add nop jnp jg jns lods jle pop xchg xchg jb lds fbstp sbb inc push into add dec xchg aad pop add xor sahf insb rol add jmp inc mov cmp frstor jbe rorb dec mov (bad) or mov add aam mov dec in arpl repz cmp jmp jnp stos dec pusha push movsb loope cltd test add hlt test rorl (bad) inc add cmp cmpsl (bad) xchg add mov out adc or push mov mov pusha iret push add or repz dec push jnp (bad) je add nop dec xor les add out scas ret push call jge fdivrl cmp insb add in test jl daa ret jo loopne imul mulb inc cmpb mov push fsubs xchg mov mov stos push and js add add add xor jl xchg in rorl sbb mov adc add (bad) rclb pop or testl repnz jp (bad) mov fldl cmpsl jecxz xchg outsb lods add mov mov loopne mov xchg subb jb incb test ret mov sar setbe sub and dec dec add inc inc daa jg push leave cwtl xor das int pop mov inc (bad) xor lahf (bad) bnd jl scas ljmp mov pusha sahf xor loope xor xchg cmp dec icebp adc or nop add mov add add push add add push stos repz xchg xor ljmp add pop pop cmp inc lret and add xchg inc and iret imul xchg add in push (bad) out stos adc jg aas add (bad) pop mov adc adc add pushf sub mov es andl xchg stc and xchg lods aam sub add mov xor pop pop ficompl dec inc jle mov push test ljmp lret push pop add cmpsl insb enter scas adc pop xchg fs lods inc mov cmp pop (bad) dec shll jbe add mov pusha ret add xor mov xor mov adcb sarl sub adc push mov mov dec mov cmp add sub or mov or gs cld jae push mov sub das xchg es add sysenter xchg sti sub faddl jge dec ljmp lods mov add dec ds (bad) jle sbbl aas add mov or pop lret dec lcall clc add push mov adc add adc insb add cmpl or adc push jns add xor hlt mov cmc je and stos repnz mov mov rcrb aaa add or and mov cmp rclb lret out shrb and (bad) mov clc jns js aam je jno sub dec dec cmovb and sub popa add test in mov leave dec cmp pusha or jns mov popl xchg dec add sub sbb cwtl mov sub fnstenv (bad) aad jne cmp dec notl sub popa add mov daa lcall jmp add push popf out xor dec push adc enter movsl addl pusha adcl fdivl (bad) xor fmuls repnz push lret add dec xchg loop insl mov add mov movsl xor push nop leave stos popf scas xor scas sbbl ret test testb adc jp jnp hlt movsb inc imul mov popf ljmp add loope cmpsl test aam subb shrl pop lock insb sbb mov or mov int add add dec ja add ljmp hlt imul adcl in ret xchg sbb sub cs xor mov push xchg in push je lahf cmp inc pop xchg add pop inc dec pop pop xor loopne aaa lahf adc jo push jns add mov cmp lods inc pop rorb js outsb add push out or fadd sbb scas inc sbb out cmp clc pusha mov sbb das ficomp scas dec push add sarl test and fisttpll bound (bad) repz cli or fnop (bad) inc cmp mov inc lcall add mov sub inc push hlt pop fdivr jno xorl mov dec int3 daa arpl insl xor add or cld mov dec gs in jae add mov push mov rolb enter out inc test in imul jo add dec dec adc aad jge cli ret arpl cmp in js (bad) dec xlat std jno cld jmp add aaa mov movsb cmp loope icebp mov or push push mov mov lret pop xchg pop sbb hlt add xchg ficoml addl jecxz lret pop and shl std incl sub inc xchg xchg rcll fdivrs add bound rolb cmpsl ljmp jecxz push jne cmp mov std js mov ljmp adc cmp push pop cmp lcall mov out movl jle rol inc je adc add pop mov nop jb fisttpll sub mulb (bad) and data16 repnz inc xor or negl popa addl movsb mov mov cmp (bad) and add cmp adc cmpsb nop add or add cmpb (bad) xor and outsl add xchg nop int3 add add cmpsb cld mov mov pop ret add pop inc aam pop mov add xor movsl add ret loope adc mov outsb subl divb adc in add movb mov pop or fs insb out aam andl sub (bad) jb mov enter or add or jge mov lahf movsb fiadd sub xor lods add out stos into loopne jns jo str sub rorl mov repz (bad) add clc decb jnp loope shlb sbb inc add jae leave inc pop sti push xor jmp add adc inc xlat adc jle add test jnp nop std test subb imul pusha or add out sub sbb cmpsb xor add cmp push lret sub incl loope loop loopne inc shlb jns add nop xor add je or inc xchg and out push std add negl cmp adc sub sub je outsl iret fs bound test add fsts push jae add dec int3 push add (bad) sub or stos add nop cld xor xchg mov inc pop pop cmp stos add lods repz cmp add ret sbb add jmp jle mov mov cmp les cmp inc mov sub sbb adc (bad) out mov fdivl test lret in jno add mov push add cmp out testb cmp faddl jo jae clc push xchg (bad) out jo scas push mov lea xchg mov rorb add sub pshufb jg add dec (bad) sbb xchg jmp add in bnd stos stos out and (bad) mov pop fsub loop and xchg jle inc xchg inc push jg or sbb or aad ret movsl cmp add addr16 mov sbb cmc dec rorb add pop test add je adc jae mov xchg sub pop popa or push mov push cmp aad sldt sub sub (bad) sub jnp mov push outsb sbb ror sbb jle bnd adcl jmp mov ljmp cmpsb add iret ret test mov pop jo,pt xor fdivl and push andb jnp das add jb jle cli daa aaa (bad) cmp cmp inc sbb add ret fwait add adc push dec adc test test add jge mov inc pop sbb adc mov cmpl add ficoml popa mov cmc outsl rolb stos ds xchg cld mov lods inc mov push les ljmp jl jno int ret push addl pop mov fs daa cmp adc jmp sarl stos cmp cmc in or mov mov and (bad) jb mov mov push or out bound aad andb enter inc jo mov xchg push mov add jo sub imul lds and leave dec (bad) ljmp jae hlt cmp xchg jg lock fstpt arpl outsb scas addr16 add mov mov sub pop daa sbbl xchg cmpsl mov mov ficom jge ret es stos out jmp (bad) jecxz (bad) jbe rcll (bad) test cmp lcall in xor mov test inc mov jmp and jp fsubl adcl push add aaa out cmp push cwtl or xor pusha adc cmp jmp test (bad) push add mov test cmpsl add push popa xor sbb adc jp mov sahf jne jg cmc (bad) sub mov add jge xorb lds mov notl or pop das inc sti pop cmp push add and and mov push out mov in imul inc inc pop xchg dec inc das stc mov sbb (bad) mov cli mov cmc or fsts adc add jg add out jae sub das repnz add je pop adc scas insb movb pop pushf call adc outsl les xchg xchg xchg jo pop jnp cmp add negb out stos dec xor andb and insb sbb add xor dec jge dec push fcompl std out add jbe fwait pusha inc imull add pop fistl fsubl mov inc add xor enter testb fsts xchg mov add sub sbb and push jnp mov popf adcl fistpll (bad) pushf pop jnp xlat pop jmp add data16 xor pop jnp push cmp or add out roll add sub mov xor push in add push mov sub and xor add sar inc loope stos adc scas fidiv sbb inc add push mov sub pop xorb jb dec pop das fcoml popa xchg jb push lahf lods mov ja cld cmp enter xchg xor mov loop (bad) xor pop clc enter rorb cmc jecxz cmp addl mov (bad) add cmp dec enter and data16 or aad sub add mov ljmp or pop jb add cmpl je add lea lret push add (bad) mov inc fcmovnu push add rcrl dec test lret arpl xor cmc mov sbb and inc mov sub in sbb bound je hlt (bad) and add pop jb imul ljmp mov pop mov push js gs xor ja add mov divb pusha loope (bad) push xchg fimul pop fildl test fcmovu ret mov jnp movsl add xor sub bnd add ret jbe nop cmpsb xchg add mov xor (bad) add add xor outsl xor dec jecxz push subl mull pushf mov fnsave add cmpsb cmp test add mov popa andb addr16 sbb dec push ret ret mov or mov mov xor push addl in addl (bad) xacquire add jl testb push imul cmp add mov xchg sarb mov mov fimul pusha mov into out cmc fcmovnbe dec add sbb or xchg add jp cltd mov push dec arpl in (bad) add cltd cmp stos push pop popf xor loop add mov test pushf jge mov mov fimul movsb xchg lods mov xchg test and maskmovq push jecxz push ret mov fnsave sub ss repz add xchg push lahf and icebp adc jl dec sbb pop movsb inc (bad) jne inc xor inc mov jp jo xorl push jnp mov cltd xchg (bad) inc add adc jae add dec add lahf orl fiadd mulb add add inc mov push sub add mov add mov xchg orb or lods andb sub add imul add imul xor dec mov (bad) mov repnz xchg adc add inc dec pop xlat popl and sub fadd dec (bad) push sbb das test fildl addb arpl jp pop jp cmp add aad popa scas fwait inc (bad) and jle dec cmp shlb inc add xchg and mov lahf add push je and test xchg xor mov add jl cmpsb xor ret sub push push xchg (bad) outsb dec mov add js fwait dec and aaa lret pop sahf mov inc push (bad) adc fsts repnz movsb imul pop ss add out mov fiaddl rol std ficom movsl add xor mov je inc adc jmp das cmpsl add push add je loopne test mov xor inc or push fisttpll pop push fnstsw mov sbb add pop mov add xchg add insl or into pop pop arpl cmc xchg jo pop pop push sbb jmp or push addl xor cmc adc (bad) mov addl push dec adc call xor or sub push add add mov bound jecxz pop push pop rclb (bad) or insb int loopne outsb cs lods add xcrypt-cbc cmpsl xchg rorl add xchg push mov cmp repz sub fildl (bad) push add icebp push pop jle and dec es cmp inc (bad) fwait mov or push mov xchg sbb mov hlt cmp rolb xor xchg outsb add cltd adc mov bound inc (bad) and (bad) sbbl add cmc sbb test add cmp in jmp jg stos inc (bad) jo (bad) call add mov sbb test cmp cwtl aad (bad) stc dec add lds lahf xor xor test push fwait bound aad scas add cld jae lcall add cmpsl sahf lahf imul outsb inc sub and jne add inc (bad) scas sub cmpl sub mov or add movsb fs add jp push pop adc sbbl je cli orl (bad) xor and push loopne stos jne dec aam cltd adc pop add dec mov cmp js enter pop ret pop repz in fistl ret xchg dec in mov xchg in and pop pusha leave pop in aas sbb flds sub mov addb lds mov jae xchg loop test jbe jle ja add fistpll cmp jge mov divl add data16 fnstenv aas hlt add mov mov subl push push adc sub scas out ds fmul das (bad) incl inc shrl pop out scas add stos cltd inc push dec pop push pop mov insl jb and int3 inc push sbbb enter into xchg jp sub test not jmp cltd add ret xchg in add loop je inc sub popf jge cmp add (bad) and cmpsl xor jl (bad) jp sbb imul icebp add xchg cmp mov and aaa fmul cmp add popa push or or add (bad) movsl pop add and sbb aad inc add insl xor fiadd inc and (bad) or fbld pop dec mov repnz and add jne (bad) out xor add cmp stc push sarl movsb je xchg aas adc add inc push ffreep test dec xchg sti std icebp mov add cmpl mov cmp call push xchg mov sahf enter pop movsb ret or rol cmpxchg js fstps hlt pop pop xlat fdivrl aad push xchg mov lret sub je add pop sbb ss dec xchg push gs jle jmp movsl ret xor (bad) int mov ret sbb js fwait aaa add gs sbbl enter add push mov add loop add cmc push add sbb mov lock lods lods mov jbe sbb adc xor mov rolb jmp xchg jbe mov add out sahf lret (bad) sbb loopne ret test push popa sub leave jmp add aad sub ss pop clc lahf repz (bad) in sbb jge test jg shlb mov inc movsl stos fild test aas jecxz cmp pop inc cmpsl lret adcb insb (bad) sbb sbb cltd aas pop adc push addr16 lods xor push clc cmc xchg icebp mov sub push sbb out orb sti inc mov add (bad) (bad) jp (bad) and ret pop xchg cs sbb or push inc inc push pusha stc repz jae pushf rclb dec dec in mov add test jl and outsb in cmp cmp fidivr jmp xor hlt add rclb pop add push dec mov andb scas lcall xor jnp,pn and xor add bound in xor daa mov jo insl xchg add inc sub pop out fidivl jb (bad) jbe xlat mov mov xchg mov add (bad) pop popa je jmp adc mov inc mov mov add pop (bad) jg adc add stc pop jle pop adc mov add sbb dec loop jo and (bad) lret in add (bad) inc adc (bad) and icebp insb inc add sbb xchg aas add loop xorl jecxz pop int3 movsl add scas jae pop in add mov ljmp push lcall aas jp in popf stc jle outsl sbb mov add dec insb xchg nop scas ljmp mov outsb call add pop pop iretw inc mov jns movsb stos jge cld jp inc add sub stc cwtl dec mov cmp repz sbbl jne and jecxz mov push add add mov cmp pusha sub dec and jmp inc mov push sbb mov lahf mov mov cmc add outsl js,pt adc pop in (bad) icebp add jne mov cmp scas divb pop add dec fcmovnu cmc xchg inc addl call enter add or add cmp or imul jl pushf pop mov (bad) push inc mov arpl jl cld and dec icebp out sbbl gs lods sbb push add pop test and inc add add daa std jns mov push fsubr adc arpl nop sub and shll mov inc in adc push test in push cmp push and push add mov jns lods add in inc pop (bad) repnz aam add stos mov test add sbb orl push push sbb jns add (bad) in repnz cmpsb add push imul inc arpl xor (bad) (bad) push int3 mov pushf imul movsl mov xchg cwtl dec test aaa pop stos add hlt loope or cli mov or movsl jp adc sub sbb rcl mov xchg inc std (bad) fild cwtl jns pusha sbb dec xchg imul add test add repnz push iret mov mov lahf adcb insl (bad) push outsb popf movsl js add jb clc aas repnz add inc sbb inc and add and adc cmc dec loop mov mov and cmp add int aad daa (bad) jbe add dec and sbb inc sbb xchg lcall xor es (bad) mov jo sahf aaa xchg repz movsb sbb cmp or cmp dec leave insb sub fildl add rcrb in add jnp jns or jmp push push push cwtl mov loope lret imul cmp ret movsl add cmp addl aaa pop in dec cli pop rcrl sub xor cmp (bad) out adc add and (bad) xor loope adc pop sahf aad add add mov lret add orl mov sub or icebp cmp mov cmp mov daa and jle and inc adc (bad) int3 push clc add mov fwait mov pop or adc mov fdivl insl push jle jo sub aad scas (bad) lock cmp pop sub inc lcall and sarb inc sti cld add shl xchg outsb pop mov push (bad) xor popf inc movsl out aam and add push adc jecxz xor adc cwtl rorb shr sbbb inc scas add inc xor (bad) int jl mov add jbe fiadd dec les mov add jg cwtl inc add jp ret lahf fmul incl mov call push inc cmp jbe jb push cmp pop out hlt inc stos pop add dec sub testb in push pop shrl icebp and cmp jp dec jle xchg add fsts add push test add movsb inc shrl in je in inc dec cmpsb test subl mov cmp test nop lock sbb add mov into add jnp push pop test getsec pop imul iret (bad) test inc or fisubr inc (bad) sbbb add push roll inc (bad) xor adc add outsl jp push imul in cltd cmpl pop xchg fild add sbb pop sbb (bad) dec (bad) jo add or cmp std mov (bad) and pop fimull popa add rorb xor push ljmp jne (bad) (bad) xor mov pop lea fisubrl test sahf add mov das xchg sub pusha loopne lahf mov dec and sahf jle add and outsl and sbb dec in jb int insb lahf aam (bad) add ffree jns clc adc popf cmp aas xchg dec dec xchg add out xchg xchg daa or add in mov test or stos ret ja xor push and sbb push dec pusha add pop scas cmpsl shrb xchg sub xor ja mov cmpsl and insl test add jl pop adc cmp jb (bad) dec imul arpl mov lods dec daa incl fisubr jp sbb mov hlt aam aad add enter outsb lea aam mulb xor xor lret and mov test (bad) loopne pop xchg push mov jns or call or mov add fs push add push movsb iret sub xor add pop mov adc xor add mov pusha push mov add sub aam cmp jp test inc add aam test push add push add xchg mov pop xchg andl inc cmpsl adc test mov push (bad) in mov adc lret push (bad) jbe cli adc mov add cmp fstpl inc sbb inc out str or xchg ljmp orb jecxz jge add xor testl scas sub add out pop pop jb rolb ljmp dec add xor subb cmc in adc adc push sbb sub lds adc inc popf mov pop mov xchg lea in mov loopne push dec cmp jl cmp aam adc or adc sub subb or xorl and orb ret pop addr16 adc add cmpsl fbstp xor pop add cli (bad) lock std fprem1 add fwait arpl cmpsb mov mov pop les pop mov bound cmp cmp or call push adc adc add lods pop sub frstor jno mov pusha sbb add popa and and mov push stos into bound test inc ds shlb test jmp loope jnp (bad) stc arpl pusha mov cmc int and xchg xchg aas add (bad) (bad) push popa sbb push push add sub repz call loopne add adc cmpsl sub cmc lret (bad) xor jne mov cmp punpcklbw insb push in fld mov xor data16 inc mov pop adc imul add scas sti or jo add xor test arpl jecxz cmp popf in sbb pushf in push lods bound xor mov or call loop lods push and arpl cmpl cld lock mov (bad) mov (bad) mov inc sub dec jle aam rcrl lds xchg push dec sub add movsb hlt xor scas iretw mov add xchg push xor mov mov sbbl add imul add push ds add ja or and add lcall jmp pusha mov cli jp pop out adc mov sub dec adc lods add cmpsl add dec cs in pop add in rcl stos mov aam jne mov dec dec data16 (bad) mov pop out xorl add sbb loope insl and pop stc pop mov clc pop pop movl lock ret in jge lods pop dec sahf xchg js push add inc xor sub xchg xor jbe push andl mov mov lods adc fidivr (bad) fistpl mov std mov or dec flds add jg cwtl pop adcl aad add lock mov and cwtl xchg stos add and loop popa (bad) aas or daa cmc cmp cltd sbb add aam (bad) insb cmc imul das inc xor ret add addr16 push jge add or ss ja test xchg push ret fistl fdivs fucomp sub cmc jnp add (bad) stc neg and add adc xor mov out add fadds push jl add xchg lock jmp icebp movsb dec aas jne add lret fidivrl jno mov aaa popa sbb xchg in fs cs or push mov in jmp outsl jne add pop mov xchg sub nop loop and push mov outsb xlat decb mov test adc insb (bad) jae jb,pn add xorb xorl (bad) push add push aaa imul push call jbe add inc adc push mov pop ja pop faddl or in add jno cld mov lret stc sbb icebp dec xchg xor jecxz in inc mov sub xchg loopne ficoml shrl popf add pmulhuw push fiaddl jb popf ficom lret jo jno push add dec mov pop (bad) sbb or loope (bad) pushf add cmpsl aam xchg lcall stc stos adc out sti add ror in add loope sbbl xchg pop inc mov sti js jp pusha mov cmpsb add cmpsl pop inc js out and sub icebp pop add jns xrelease mov fucomip cs xchg pop xor add adc andb notb es jnp add pop js mov add das add mov adc mov and cmpl es xchg mov cli xchg loop mov lods ret mul adc dec cmp cmp popa imul adc fldcw icebp jb inc push cmp std in add mov mov test add cwtl nop subb leave push ljmp ficoml or mov jo movsb or popa pop mov repz repnz fwait ljmp cmpsb dec cmc cwtl adc cli int3 aas call movsl sahf stc sarl xor pop cli add dec cmp mov ja fwait negb sub xlat push fsubr mov mov and lahf dec add out dec xchg cld repnz movsb add divb pusha and fildl push ret mov inc in adc or inc jns xor add test enter aas mov xor dec imul daa add addr16 add pop (bad) jne pop scas (bad) rcr adc push add rolb int3 inc push sub cmp jl dec mov add pushf cmp mov test lahf fsubrs push add lcall add pop dec jle mov add leave cld fisttpl or das add add cmp add sub jnp pop add dec std mov sti xor push pop inc xchg cmp adc cmpsb add pop aaa lahf or xor xor pusha add mov lea int3 or or scas inc and int or xor jne (bad) (bad) jp add sbb lret jno idivl sub add mov std outsl add cmp xchg push in leave int3 add sbb xchg cmp fbstp rdpmc repz movsb adc sbb xchg mov push xchg jo shlb shlb lahf lret rcrl mov add cs push rolb mov sub incl mov cwtl pop xchg adc add test jnp pop out rclb movsb jmp lcall rolb les xor adc mov xor addr16 push cmp repnz jmp jnp ret pushw sub sbb mov subb jno (bad) aaa dec dec les rclb push mov shll outsl (bad) aas dec pop in xchg xchg lahf add pop ljmp sbb mov jle adc mov add roll pop out frstor stos mov sbb add push movsb in rolb ja aad or orl jp ret and dec movswl jg xchg hlt mov push jmp push mov jb xchg xor repz add cmp (bad) and les in pop push mov movsb lods or mov stc add lret sub xor cmpsb sbb jae add push icebp fstpl (bad) dec roll xchg std inc mov sub sbb out insb (bad) cmp mov loop,pt orl in ljmp cltd in (bad) test xor and jge addl or jecxz cld and sub rolb inc and mov mov (bad) aaa inc inc lods lahf add xchg push or movsl movsb pop repz xor pop add ljmp cmp pop push jae hlt add (bad) xor sub cwtl add bnd xchg jmp icebp js mov scas add add pop add aas dec jecxz add out pop mov popf push orl in je and cmp sub aam test xchg jb pop rcrl sbb scas inc and mov orl mov cmc dec and subl in leave fdivs xchg call (bad) mov test mov sbb ja repz pop jo stos leave pop xor shrl pop pop xchg add mov stos enter sbb int3 add sti xchg scas ficoml mov fnstcw cmp add inc dec movsb std sti push adcb sub (bad) test jno addr16 mov mov push outsb inc pop in add and insl dec jmp xchg mov push sbb or and mov fdivs dec add dec sbb jle add and rolb or mov cmp aam lea rorb cs ss push fild jl xor jns popa (bad) add adc add and mov mul cmp jg mov (bad) ss mov es xor cmp xchg or mov push jb xor or mov (bad) aam inc sbb jbe jl int push imull pop loope sbb cmp pop je imul or xor inc sub lret add mov mov push pusha clc div add or fstpl in jae mov jge (bad) in or cli fldcw jmp mov cmp pusha fdivrs ficom sarl pop add mov daa aaa int sbb inc (bad) cmp stc aas cli add test or sub mov popa faddl int3 mov mov movsl add subl mov and pop add aad idivl xchg andl (bad) (bad) lret jmp mov xchg fiaddl in adc fsub inc fucom adc cmp (bad) shrb xchg shl aam inc (bad) outsl and and mov pop add loope adc pop pop jno cmp subb lods mov inc jb xor dec add test cmc jecxz movsl adc mov mov mov add push (bad) add rclb incb pop pop xor xor adc lds or xchg aad add mov push sub dec add ja mov pop js stc and das test and cmp (bad) xor pushf jmp add inc push mov adc pop (bad) ficom test aas in ss mov jnp hlt testl or jae ret inc jge int je icebp movl jnp dec ficoml js and jmp jmp pushf xchg adc mov aad mov or add daa dec loope mov xor push push and stos add push pop scas cmp out mov lcall pop or mov jae imul xchg mov in adcb pop or inc js cmp add mov mov adc lret and cmp add js test sub sbb adc aas mov jp bound (bad) ss add push jecxz sahf shrb cmp nop sub in or daa inc cld lock pop sbb iret jns insl mov jmp fs out je sub xchg clc dec mov adc stos std popf insb pop and shll les cmpsb lock lods int3 add mov cmc and andb sub add test xchg sbbl das pop add rcrb push pop mov xor fildl ljmp sub add shrl daa xchg push add jmp mov push pop push lea rclb adc sbbb enter cmp (bad) add das xchg fs sub inc fadds add (bad) mov andl cmp jmp push scas (bad) xlat mov incl inc mov sbb and mov into adc jae inc add adc das mov cmpsl iret lahf sti popf add scas mov push movl jmp sbb mov mov dec or add xchg jp xchg ret mov add daa push inc mov or pop or hlt fs add cmpsl ja add mov dec lock push add test jp inc sub add push ret adc sbb add notl mov sbb or fcoml lods cmp dec ds das imul jg cmpsb pop mov add movsl mov mov outsl mov andl pop cmp jg decl (bad) add lret cltd (bad) mulb lcall cmpsb fsubrl add (bad) cmc popa sub push jmp push es mov mov mov stc inc xor lea cli add fidivr es jns rol mov push dec jbe and (bad) jl or lods xchg add fistpl inc cmpb sbb bound stos je cmpsl mov push popl xor aad sbb jb cmp add dec ljmp mov insb shrl mov cmp xchg xchg es xor push jmp cmpsb xor out jne imul xchg mov jnp mov sbb xor xchg cmc adcb mov cwtl test pop sbb dec lods out pop adc or inc and fild sbbb pusha mov movsl jae loop stc js mov adc add push fsubs add push or loope mov adc xchg mov push jb lret mov fwait test sbb xchg inc mov add mov in xchg mov mov dec ret mov aad lds add adc lret std inc add add (bad) cmp pushf out add xchg xchg pop sbb jle and outsl ss push sbb mov repnz test jle stos inc lret incl inc jmp add sbb xor add loopne movsl fnstcw jmp cmpb (bad) jo rorl add xor jg ficomp sub push stos adc jne xlat mov xchg addl dec inc fldcw pop repnz inc mov aam rdtsc xor xor or adcl movsb push xchg (bad) sahf mov xor add cmp cs mov mov mov mov pushf lcall add or ja mov add add rcll jb or push adcb pop std out cmp mov jo into icebp dec inc add add xchg outsl ficompl jnp sbb mov inc sub and fadds mov add in or push mov mov js pop arpl sbb lea insb ljmp (bad) in jg lds int3 add jne add (bad) in dec (bad) sub dec xchg insl out jnp add push pop push add frstor das orl bound sub rcrl pop xchg data16 incb lret test mov fwait loopne mov orl mov fildl lret push loopne xor nop dec cmp dec add rclb add mov lcall push movsl inc jge push add aam adc pop addb mov data16 jno adc jo adc jb add cmp gs pop inc xor nop pop mov inc call int pop add mov jg or mov loopne and fwait stc add imul add mov daa stc push adcb aam mov xorb mov pop stos lea jg (bad) mov xor testl popf cs jae cmp decb jnp ret repz hlt xor loope test aaa lock xchg xchg movsb mov out and ret and sbb es inc aas jecxz xchg cmp pop and call push (bad) add stos cmp sbb orl pusha push push mov add stc out (bad) push out add jl and pop mov mov inc adc push add popf scas test into lods fiaddl cld mov scas (bad) jne add (bad) (bad) rcrb mulb xchg cmp add iret cmp stos add insl imul sbb mov ja (bad) ljmp add insl sbb stc inc push sbb enter xchg push cltd movsb cmc pop test aas sbb lea roll jl sbb mov daa icebp jmp in push add jnp fdivl cmp cmp sbb pop cmp cmpl aad lds add inc or insb mov or fbld push cmpsl jae mov add push push dec xchg xor insl ret adc inc mov orb clc in imul jo sahf in mov or flds xchg std cmp out and or and push scas mov lret cli loopne les pop pop or int3 in xchg out mov nop mov cmpb imul add outsl scas test in out dec sbb xor or add jmp aam es ss fcmove mov push fdivrp cmpsl pusha icebp hlt les mov addl mov rolb jb outsl add icebp push pop mov jns ror test add nop and lock fistp fs add mov mov (bad) adc js hlt lods inc out push dec add ds aaa testl add movsb mov jbe es lds sbb out aas cs xchg add call (bad) push pop fcoml pushf outsb dec cmpl pop add inc (bad) adc icebp xchg pop jecxz push mov in cmp sbb add add ljmp add mov inc cmpsb add mov jns call fwait inc push push fsincos ltr cld aas js or ljmp push loope (bad) cmp add (bad) ja out dec pop mov dec rcll js inc xor inc push rorb mov cmp pop jbe out pop cmp into push inc sub cmpsl inc or and xchg loop ds sbb jo cmp push sbb pusha push cwtl data16 out (bad) push popa jmp cmpl mov mov pusha sbb sub jns cmp add cmp scas add cs jne arpl shlb jge xorl xchg int3 lock jge xchg dec pop rclb mov cmc sbb mov roll (bad) cwtl push jno add mov outsl and add mov mov push lds mov sets mov ds (bad) repnz cld jp sub insb bound xchg mov dec icebp mov ficom and mov and adc int rolb sbb sub shl add cmc loopne cmp jecxz inc inc cmp xorl outsb add jne pop mov clc paddd fistpl xor stos and inc into xchg sub dec cmp popf incl imul add icebp test adcl dec mov inc popf add int add xchg add add add pop cs add ljmp in xchg push ret aam pop jp (bad) pushf iret jns cmp add mov out ficoml je sbb sbb repz mov jb mov aad cmp pop call cmpsb cwtl aas adc xlat jne mov add fisubr into leave adc mov or add or dec addl (bad) push jns add mov pop add sub pop and jle dec outsb push (bad) lds xor jle adcl xor cmp and les add and mov mov mov es sahf dec test add int sub jp ret add arpl add out (bad) loopne and (bad) and jmp lret jbe test outsb add sub rcl repz jle adc ret outsb leave add pop xchg jecxz jbe clc add lods xlat iret add lcall mov xchg (bad) mov das cmc lods cmp mov dec in test cwtl or (bad) rolb sbb dec xor pop xchg mov add xchg xchg bound cld push push ret xchg inc jae subb dec (bad) mov push loop lock xor xchg jne mov ja lea or push inc jnp andl data16 in and add sub mov enter nop jle add and xlat enter lea pop cmpl pop cli xor test in mov pusha jecxz add xchg xor out add cmp les add pop mov incb std add xor and add mov insb add pop jmp pop add xchg pop inc mov mov sbb mov jmp sbb (bad) xorl imul fidivr rolb sub icebp rolb add or add lret popf insl sbb nop jl xchg push fnstsw add or add push xchg pop idivl or and (bad) mov add aam je pop lea cld adcb stos push and (bad) add sahf or loop,pn add addr16 cmp cmp lods dec cmp dec js inc jbe pop pop subl jl inc adc std orl repnz stc mov cld es mov mov daa inc add adc cli pop roll aad sub jns dec lahf mov pop loopne inc xchg adc mov arpl lret xchg fxch and add movsl sahf mov add mov xorb xchg jle inc andl test and mov xchg inc push sub (bad) mov scas ja enter sub icebp (bad) int cmp adc mov aas add push lock icebp pop dec mov pusha inc out push orl push sbb add (bad) repnz iret add out stos ret pusha (bad) repz ss cs fildll repz imul loop outsb call outsb add (bad) or mov xor andl push iret lret nop or add cmpsl pushf sub arpl add lcall cmc (bad) into xor push push (bad) push lret mov pop stc add xchg inc add sub sub add (bad) in cmp arpl imul inc outsl xchg notb test pop add push xchg in sbb push mov add add xchg fidivr outsl loope mov loope push or pop pusha in ss (bad) stos add fstpl inc out mov shl jp jnp dec xor int push xlat sbb add stc pop fstps in xchg and test (bad) pop cmp mov mov mov out lret mov xchg inc push xor add jp scas or call mov inc xchg add rcrl repz inc fmuls mov aaa fstl shrb jmp add mov gs (bad) mov insb mov or jge js xor xor mov arpl outsb int3 aam and jl add daa repnz cmpsb clc dec jae cmp add test jb jmp mov dec sub or add loop add int3 jbe scas (bad) repnz mov add out adc jb xor mov out stos add pop cwtl add sbb xor inc outsb jo (bad) xchg xchg and xchg (bad) and jae outsb test iret mov mov ret sub mov push inc jmp xlat mov xchg xchg pop add and iret inc ret lock mov add push pop xchg mov (bad) mov scas loope sub rolb iret pushf je insl addr16 (bad) mov add subb ljmp pop jg (bad) in sub mov test int add lret in add out mov dec incl mov push icebp mov faddl xchg stc (bad) lods stos mov mov mov js aas add cmp daa add test push jg add jbe and in add add inc lods add loope push mov fdivrl aam ret mov cli jl add (bad) push push repz mov dec loope cli mov cmp xchg fistp mov mov test clc jb xchg pop cmp jno ljmp mov mov sbb sti dec fs add or mov mov jle insl pop xor aam mov stos push sbb fisttpl call xlat test les cmp pop add aam push push mov jmp roll cmpsw cmp sbb lods mov imul add out add xchg cltd add add mov stos insl shll xor ss rol popa aas data16 dec out add add into sbb ltr jne aaa sub mov inc mov lea sarl jle sub (bad) adc mov push mov mov jp add sbb sbb mov (bad) add incb add rcrb pop stos dec fcoml cmp push inc sub addl mov xchg test cwtl and xor inc test pop pop sahf mov movsb scas xchg jl jge es push add inc pusha sbb jne push int3 mov popa add lock aaa push jl add movsl fnstenv subl cmp int dec inc add xchg sub mov ljmp jge int add mov mov adc imul stos hlt addb dec adc push dec in lds stos imul jae mov push lds in add and sbb cmpsl fidivrl outsb out ss jb jl jne add jo scas paddb icebp add xlat test cmove mov cmc loope jo int (bad) in je inc adc xor fldl nop les outsl jl mov xchg out mov and mov repz or js cmpl in inc shll and mov adc xor aaa and sub bound dec loopne mov in call stos jmp mov scas dec adc mov ret mov and (bad) sbb loopne mov gs lcall lock int3 andb inc and in lods test in fwait mov pop aaa jmp test andl addl aam mov push pusha cmpsl inc push out nop insb mov dec xor cwtl add in bound inc mov aas push fcomp dec mov insb mov xor addb std xorl push outsl mov mov andb jo fistpll jns orl cmpsb addl dec icebp popa bound rolb mov cs add mov xchg adc sti mov inc add add out ret addb aad mov (bad) sbb inc add out xchg mov imul add lahf mov jb scas mov aas push sub (bad) sub shlb push add sub ja jns je push pop add mov scas push sub xor outsl cs cmp scas adc shll cltd idivl mov pusha cmpsb (bad) jbe sbb push dec ret mov lods sar mov rcrl cwtl inc cmc cs pop sbb subb jbe clc add jo (bad) push jmp std add fiadd cs mov push jnp jl ja add push test sbb adc and scas iret js mov orb rorb and popf movsl and jbe xchg dec dec aas (bad) test addb mov cmp mov dec xchg add in xchg test (bad) lret mov and cmp add repnz push (bad) add or addb xchg fsts or mov push add sti mov cmp cmp jno adcb cs (bad) out test xor mov mov dec push adc push adc jl stc and sub in inc adc and fdivrl and inc test add movsl dec (bad) icebp or add es in mov add and add in xchg push jle test in inc pop inc dec mov hlt es add sar mov inc and push lret add out aas outsb or lcall cli cli rol sti xor sarb add inc scas insb data16 push daa dec jnp or mov test inc les sbb mov mov rolb aas mov pop add and xchg cmpsb jl jnp add mov mov popf in cmp bound insb mov scas stos inc sbb and stc cld push xor add sub ret int lock lret popa push int3 aad jmp subl scas dec lcall int3 mov call adc adc dec mov int3 mov daa hlt inc sub and mov add imul fildl leave lret pop test mov inc push sbb insb sti jb xor add out pop jg fistp xor shlb xor mov negb mov add pop pop mov jnp leave cld dec sbb test jae xchg pop jo xchg push out outsb jl sub loopne add lret mov pop lcall fld1 add lds add inc mov jl pusha clc leave push add jns sbb sub das jle sbb stos add sbb add fld mov cwtl lahf cmp nop mov cltd add dec push sahf dec stos cmp push adc stos test add inc sbb mov jp add and mov add jmp loopne call pop ret mov xor adc push setbe jns push cs sbb in push and sbb mov fnstenv mov ja cmp (bad) aaa dec and roll lea popa jge xor pop or mov sub xor and nop int3 pushf insl xor dec pop ffreep je add inc arpl mov add or std mov mov test jb cld pusha mov insb mov adc in push xchg or sub add xchg lcall inc push icebp (bad) jp jle fs xchg lock sub jp addl or adc mov lcall mov (bad) jl lods and punpckldq shl lock and out sub push and xchg and mov out add add push (bad) das push (bad) add pop mov pop mov sbb arpl add adc sbb addb fwait mov lret mov out (bad) aam dec pusha nop or add cli in out xlat add arpl xchg sub mov out je mov inc jp adc add jo,pn add and add cmp in cmp je subb xchg sbb out pop cmc push pop mov add sbb pop and inc adcb sbb dec outsl jo out insl pusha pop pop push jnp adc and xorl xor inc ss lods mov push xchg push jle add mov and pop and sti aad mov pop jl into sub incb clc lods pop aaa jg icebp adc mov or add popa outsb mov icebp pop iret xor rclb cmp int ret sar mov callw inc lods add daa mov in in add dec add add adc hlt inc movhps cmp sub movsb dec sbb ret adc inc add mov or xchg iret sub mov movsb cmp cltd sbb rclb subl out jnp push dec cmp dec jno jne outsl mov mov cmp decl inc inc ret aad fiadd test xchg loop bound sbb adc arpl adc sub lcall pop fstps repz daa and sarl or inc jl mov outsb fildll addl fnsave add (bad) cwtl pop cmp xor add push enter mov add fmuls inc jne add jo roll inc pop jbe cld add jecxz dec out movsb je cmp lds sbb xchg lret jbe add xchg pop and into add mov cwtl sbb jae adc fildl xchg push repnz addb mov cmpl jle add negb js xor sahf lods jecxz aad jo sbb push add sbbb mov xchg sar pop mov jb mov add and add cmc mov nop add imull sub in xchg and pop je add cmpb out loopne nop push add mov int xorb stos inc rep xchg jle mov jecxz cwtl or fmuls insl dec xchg push and pop cmp sub (bad) ss inc push xor add cli or and add dec push mov pop add add inc sbb mov das add push pop outsl mov cmc add mov loop movsb in mov in outsl rolb jg mov repnz sbb das (bad) xchg adcb add clc loop jbe push add xchg ljmp subl fsubrs sbb add in out push negl aad jne stos xor scas jo xchg in es jl pop pop add jmp push outsb je add int pop jg add mov insl dec add xor sbb adc adc add add jb (bad) mov popl scas je adc mov add in stos add ret xchg inc rorl jp add std into add xchg sbb add dec in fcompl notl sbb std imul cmp lahf add fmull push aaa add cli jb cmp push dec fmul and dec clc jns add xor and and add lret push adc (bad) jbe lahf arpl jge popf pop loope icebp ss pop add nop in outsb popa iret add loope fildl movsl repnz add leave decl dec inc xchg clc xor gs xchg adcl ljmp negb mov bound add xchg add mov fwait add stos leave pop rclb add jno repz pop push fildll stos arpl pusha jb pusha jnp push xchg pop push imul cmp out (bad) out lcall push xor sbbb dec ljmp lret outsb sarb sub add push xchg add inc movsb pushf add and adcw insl xor add xchg loop push or jge jb add out aas and add or test subb dec ja iret into and int or jno insl ret (bad) aam mov lret pusha loop ds daa add jb or inc jb add test xchg add enter out push int3 push mov (bad) mov inc mov jne jge add out sub mov mov daa jb scas jae nop dec add pusha (bad) out (bad) or adc inc add dec jmp fs popa push jp ljmp adc jne (bad) add cmp cmpsb add jb adc popf fildl loope rorl bound add dec pop hlt jp add je push sub inc jb andl dec fcmovnu jo sbb sahf xchg nop jno pusha stos loopne add push dec jp inc xchg (bad) push lods add add cltd add xor jnp out add mov jg stos test pop mov mov and pop ret dec insl jl add add xor mov insb insl je das mov les rolb inc test add in pusha mov clc fwait jne popa mov bound sbb xor movsl adc (bad) je test inc subl add icebp (bad) jle add imul add mov addb jg insb push sbb mov lods and outsl mov incl leave js and popf fisubr ja inc and test xor lods fild add ja dec leave xchg add popa pusha inc loope ljmp add cmp lock jno pushf cmp popa sbb lret fsubl sbb loope add adc ljmp jbe xchg cmp jae add fmull leave orb sbb xchg popf xor jge xor into xchg add push orl enter or adc push add sti pop sub adc scas subb cmp add imul adc push mov mov gs mov lea (bad) fildl fdivrl out xchg cmc sub and mov nop daa mov sbb scas jo popa int3 cmpsl ljmp sub pavgw add sbb dec add (bad) or loope xor std sbb mov fstl iret add jp adc in adc aaa jle pop shll jge add jl mov fwait dec sbb subb sarb adc sub push mov int call (bad) loope cmp add popa cmp add cmc les push imul pop data16 add repnz jns push rolb int3 sbb mov pop mov sub lods scas add add pusha mov sub add jnp loop pop xchg jg add lahf mov sbb fsubrs sbbl shl cwtl je iret mov mov out add popf arpl bndldx aam sbb cmpsl sbbl sti inc (bad) ret add or push add mov xchg pop push in inc call sbbl xlat ror jae adc out add cltd xchg adc or and mov dec imul sbbb dec cld in lods add xchg lock inc fiadd nop pop inc retw lcall add mov xchg pop lods cmp les ret es add rolb push push ficomp test cli mov or mov (bad) je inc add xchg pusha pop out inc (bad) es lods xchg js sub mov frstor add or repz sahf add mov adc les xchg push push xor sub nop mov jmp add dec lret ja cmp xchg mov aam add insl rcr cmc fldt sbb mov or add add mov mov add mov push mov icebp jo stos sti jp and movl add cmc inc mov push fcomps adc add ja ltr xchg andb lcall mov jg push add jae sub and test pop out into jne fidiv mov xlat inc (bad) cmp cwtl sbb sbb mov popf or mov test test add in fdivl test add outsb loopne subb mov push cmc add add shrl dec add (bad) jbe inc mov cmpsl xor idivl mov fiaddl cs sahf fs xor sbbb mov jno inc push lret addr16 data16 cmpsl adc mov popf aas push jns inc and sbb mov cmp pop stos sarb sbbl dec and xchg rol test mov xchg sub jp add sti repnz mov leave (bad) xchg or (bad) or mov fdivrs inc lret lcall jbe fimull add cs jge add dec jnp add pop mov inc cmp rolb rcr cmp je add or iret loope in adc cwtl out add push add xor add ficoml out jnp inc or adc xor daa pop pop movsl or mov add and popf inc scas js loopne loop add cmpsb stos dec pop adc mov push and add es jle subb or ss add aaa ja vcomiss add faddl jle lock imul lds adc enter loop adc mov jo pop lea out sub jb cmpsb cld add lods shll push mov mov pop adc (bad) pusha pop xor add movsl lds sub mov mov cmp sarb dec add pop inc add ret mov pop push add jnp xchg fisttpl add bound jb dec lods sbb cmp or add mov movsb add mov push movl and inc or inc into xlat pop fist cmp cmpsb sbb cmc rclb add scas jg bound rcll add std lock dec and add popa fistl mov in in lds pop push lock insl xchg scas push cltd push lret inc inc xchg popf mov push test cmp cmpb bound iret es loopne (bad) push jne inc and pop stc enter jae cmp push lods or sahf fwait pushf scas into (bad) daa es xor push add arpl xorl xchg mov xchg add test dec rolb arpl add add lret je add enter add jl add xchg push pop dec inc in mov xchg and imul mov sub cmp mov jo or repz in inc mov test add outsl into test jns add push mov jle test clc inc mov inc and mov adc jbe push out fmuls scas mov mov xchg sbb enter mov inc cmpsl daa das and jmp cld dec mov or mov (bad) or jno sub in jo ljmp push push aad out cmc xlat adc repz lea lahf cs iret loop insb or loopew imul aam mov adc dec add or inc lods add std xor (bad) mov addr16 jecxz push orl repz mov jo add loopne sti das in jno pushf idivl test sbb (bad) int mov mov dec sbb add popf add xchg push icebp xor dec outsb jge add pop or add int in sub xchg mov bswap jns loopne push push cmpsb add add adc add dec bound add pop jle add (bad) xor repnz test jno sbb addb jo out add cmpsl (bad) rorb insl add xor add xchg ds mov jno leave add into js and cmp cmpsl jnp mov and inc dec mov sahf inc cmp pop jbe,pn iret orl inc dec fidiv jns xor mov test subb movsb jp movl mov xchg jo add popf lahf or cli stos pusha inc cmpsb jmp mov push jbe add push jns and test ljmp mov jge add rcr xor push repz icebp xchg sub add lock (bad) imul mov inc out sub lea mov aaa inc int ret xor (bad) jo andl inc (bad) sbb add (bad) lret roll push aaa pop mov pop fimul dec movsb and add test fsin push aad add out dec bound xchg adcl mov fdivp add cmpsb mov lds dec scas xchg stos test jbe add shll aad cli test dec mov (bad) stos out push sbb std dec sbbl scas mov lret add mov inc add jge cwtl mov add pop out mov aam mov add es bound mov lods (bad) jns inc add dec int jbe add adc je add push inc call xor add mov sahf xchg popa add int3 jmp jne and arpl adc mov iret or push fwait mov (bad) fcoml stos inc xchg pop jnp cld add andb scas popf sub add fcomps fbstp lahf cmpl jp mov add icebp sub mov add pop sub js sbb addl lcall add in xchg fbstp inc sub push loopne and jg add call add lret fistp sbb into add sbb mov fldl mov xchg daa cmp push xor andb mov jl addr16 mov lahf jns bnd sub stc (bad) mov add icebp xchg insb cld cmp sub out add add push mov pusha push sahf pop adc je add in xchg dec loope inc add sub sbb dec add sbb shl mov aam shll jbe add add sar xorl inc decb pop xchg add test outsb add xchg fsubs and shlw adc inc movsl mov inc xchg iret and mov or repnz dec jae out jl mov addb add and scas fldt aas push addr16 jb sub mov add pop out fisttpl jmp gs and xlat popa std call sti push pop test movsb add pop push fistp sahf mov add xor (bad) psadbw and fldl pushl cmp inc (bad) shrb mov jne aaa inc cld jle pushf xchg rcr inc lahf cmpsl inc xor in and sub pop sbb sar or mov clc cld push dec push fildl push sub lods dec pushf xlat testl push loop dec es xchg push fldl js cmp add push dec and ja add adc push fdiv je add dec inc push andl and push mov jno cmp mov mov ljmp iret jp add ret mov sub out inc pop push xlat fnstcw mov arpl push mov pop push pop and les movsb and loope push in orl je cmp xor add mov pop or ljmp es sbbl mov lods test pop cmp push (bad) (bad) dec adcb ljmp cmp add dec jno punpckldq out in mov and mov adc (bad) xchg push les subl jno loope add adc or cmp add xlat sbb add jne mov lea dec pop inc mov call (bad) repz xorl mov xchg xor jp or and mov xor (bad) aas jbe movsb jno dec mov adc rep jae lahf addl insl pushf scas add jecxz xor aas addl into mov mov out lahf cld add in inc hlt push inc jnp mov int mov sbb cmp pop and test adcb sbb and test push test loope push mov jno xor xor repnz add je sbb add pushf gs lret xlat add adc jp mov sahf scas add inc popa or add pop inc jecxz xor int3 (bad) arpl jae cmp out pop popf inc xor jg test imull out addb dec movsb mov add (bad) pop inc mov push cmp repz (bad) jle andl incl dec add addr16 sbbl xor mov inc ret out sahf test inc sub adc dec push adcb fidivrl add sub cmp mov add iret test imul ret jecxz add (bad) fdiv jmp add and add fistpl push jmp add ret add adc jmp (bad) cmp mov mov jnp out push jmp xor pop pop cmpsb (bad) push push jb into add out movsl push (bad) cmp mov fwait add cmp imul mov idiv push mov movb and fs leave insb cmpsb sbb xchg and add push lret pop jge sbb rorb repnz xor adc aas incb leave xchg sub jnp push xchg jns add int3 ficoml add stos mov add mov jg fsubrl fildll add sbb cwtl andl push sub sbb sahf ja xchg pusha cmpsb outsl add mov ret xchg add mov mov push cmp shl mov mov inc arpl cmp gs sub add ss push inc sahf push (bad) add add lock adc dec clc dec cld iret xchg (bad) mov test mov in add xchg pop cmp sbb aad or int3 add movsl loope jns sahf out add mov add push hlt idivb add add ret push cmp sub mov fwait pop add movsl xchg mov imul js add jge mov test dec inc dec dec adc cmp js mov cs daa dec aad mov dec lods inc add loopne cli pop mov mov xor lahf add push mov enter mov icebp add pop dec in add aam scas add rolb dec xor xchg aas pop fucomi inc sbb cmp mov mov inc xchg (bad) sti insl daa std add ds clc add xchg data16 sbb cmp and inc push add adc or outsb add sbb jne inc adc dec test jecxz icebp add sti popa sbb scas or movsb mov adc cs inc mov mov movsb and mov add add jns add (bad) shll dec mov icebp fcmove sbbl push jg insb leave xor lods repnz aas mov add dec scas or (bad) int dec jp cmp xchg fldenv adc ja add sbb add sbb sub into les shrd and roll push mov testl stos sbbl cmc ds sub out lea xorl insl pushf loopne mov sarl stos xor (bad) jl jg (bad) in mov mov (bad) mov xchg push fnstcw mov cltd or bound push xchg cmp jecxz sbb jb hlt movsb push adc (bad) sahf (bad) inc (bad) imul aad inc add cmp test mov xchg cs pop add loopne add in lret out out (bad) dec cmp mov adc jl inc loopne test out sub or or mov inc sbb push add xlat faddl push dec aad jg add jle add add imulb andb dec push cmp (bad) jb lock mov jne das xchg rolb hlt mov jg add inc lea add and inc inc pop add xchg notl or (bad) cmp ret dec je int3 in in and sbb mov outsl stc bound push aaa xchg int push sbb clc (bad) jle movsl and insb das add jg fiadd pop sbb push loopne push mov add fldln2 popa push cmp dec mov fisttpl mov outsb add cmp pop imul push mov mov xchg mov in cmp test fild adc lcall ds in mov imul jle lock popa mov lahf inc add sbb mov arpl add pop gs add inc pop cmpsb mov lret cmp jns push dec mov dec xchg add loop pop aam xchg add in jle mov aas pop outsb or mov sub mov push es pop aas jl add sub xor pop (bad) cmp lahf mov add xchg mov push dec jecxz divb inc jo fimul cmp orb mov jnp push cmp fisttpll or lods mov xchg negl add sarl leave add (bad) lock repz movsb xchg addr16 add in add divb in and (bad) add xchg fs xchg test fidivr call pop jno jp shlb push cwtl add and add test xchg add inc mov dec xchg pop test repz movsb jp sub je rcrl rolb fs and aad xchg fisttpl fdivr mov stos or add adc ljmp jo ds int arpl and cli or xchg push roll mov mov pop pusha push stos jo ss cmpsl scas or test push outsb sbb mov xchg stc (bad) (bad) out lahf mov add push or add pop jnp ror in add xchg pop push xchg fsubr ja fwait insl cs and sbb in jmp jp adc pushf sbb data16 push (bad) jecxz add cmc mov (bad) mov jbe incl fidivl mov es adc pusha in xchg xchg mov sbb negb or (bad) ss (bad) push or fnop cmp shrl test cwtl adc or add xchg test add loop cmp add repz jmp mull lea or and mov add int3 dec jl push jle mov add mov movsl jge pop (bad) add mov inc mov gs or jne pop ficomp cmp (bad) (bad) idiv insl xchg mov repz fimull lea push or cmpl sbb lods jge xor bound add cli icebp mov mov dec sub fs lods scas or addr16 adc xchg out add fidiv mov roll mov rcr push cmp test imul mov mov jge lods sub das andl mov adc add push mov mov xchg pop sahf mov and cmpsb pop (bad) jmp (bad) fstl adc sub mov nop scas aaa add sbb bound xor mov mov or sbb adc fild mov insb mov (bad) jbe sbbl jle push jl sahf (bad) mov out jno add xchg sub and stos aas sahf lcall loope lret scas adc pop pop dec (bad) xor adc test pushf jne mov lret mov mov stc inc cmp and or push adc imul jl push cld push add fstl add int add repnz (bad) ret inc add sub and add (bad) aas adc pop pusha jne mov repnz popf cmp cmc mov dec mov test int xlat jmp and inc pushf adc subl mov sti int3 inc xor add add xchg jp loopne dec add add push in or orb pop push loope js scas mov pusha mov add sbb loopne sub pop push and pop (bad) lcall dec sar in push ljmp cmp rcll mov imul popf js addl rclb push aas movsb sub add daa mov add pop mov sub sbb pop iret into push insb fbld scas cmpsb js jnp aam fcomps fiadd test ja mov push aas bound out push enter (bad) (bad) insb add inc push bound add fwait push imul xor sbb sahf add xchg int3 adcl testb jne sub add xor mov sub inc add (bad) aam dec out push add dec dec jle es jge (bad) addr16 mov cmp out fdivrs jbe jle add jno mov int inc add cmp sub push jo sbb cltd add and ret jbe dec fdivr add mov fwait pop push mov add cmp jle addr16 xchg adc add xchg imul les add inc mov sub add repz stos adc push dec cwtl ljmp movsb lret push add pop mov jmp pusha jne lds dec js,pt push xlat popf test add add mov mov sub add stos jbe lock jo cli mov sub add inc xcrypt-cbc cmpsl xlat aas xor cmpb (bad) stc pop adc sub andb sbb lods push pop push pop sub movsb inc push mov push aaa dec mov sti xchg mov cld addr16 and outsl lret imul lahf jne sahf scas aam fcmovnb fisttp add xor jmp pop sub jae cmp (bad) call xorl sub cwtl or pop mov fwait sub mov jmp inc sub std call xchg lods inc fwait xchg je (bad) xor push (bad) pop or add push and mov mov (bad) fldl jle nop stos ficoml jbe (bad) sbb add adc add cltd jl lea cmp mov adc mov mov add sti dec add dec add sbb xchg xchg das cmp ret add in sbbl data16 mov push xlat pop mov pop push and ret xchg cmp inc call jecxz add fdivrs add popf adcb and push jp stc fistpl dec outsb cmpl inc hlt (bad) and clc xlat out adc test cmpsl int repnz push sub jl psrlw push xor pop rcrl clc gs out and test bound cmpsb mov inc into cmp dec cs fidivl add pop jo std in fldl mov mov push add (bad) jns xor fistpl lods aad test add mov sub inc cli imulb test loope dec fnstsw cmpsb nop push lcall add mov pop arpl mov add lods mov lcall add pop and mov xchg sbb jo add adc pusha xchg sbb add or dec add rolb cmp pop push test js ret cli mov loop movsb out pop inc xchg dec aad xor fstpt scas fsubl dec jno lds and xlat std fsubrl jg push out enter xor test xchg in xchg hlt push adc push inc mov pusha (bad) (bad) cmc popa dec add push mov in out add pop jns xchg int add imul xor add enter loop add ljmp rcrl popf inc jb push cmp lods push add push mov xchg wbinvd add adc add or sbb leave jno (bad) jnp js outsl add clc mov int3 pop mov push lods jne inc mov jbe (bad) pop jnp mov jns mov stc add jbe sbb cli or popf inc adc xchg test cmp sahf ja add dec pop cmp or mov xchg movsb dec and out sbb jns (bad) (bad) sbb mov or jnp add nop add cmpsb loop mov mov stos xor cmpsl jge or cmp test sub roll pop sbb lods lcall add pop pop aad push ljmp in adc loopne imul add std loop insb cmp jge and and pop test jmp rcll sub sti out add jg mov xchg mov loopne daa and mulb add sahf sub mov inc outsb pop cmp mov (bad) call cmp add add jbe daa jns fcoms stc push xor faddl bound pop jae (bad) je mov mov dec jno test insb add es mov aas push dec rolb js insb dec dec add clc cmp adc (bad) pop sahf add (bad) pop rclb cmp add lcall push or data16 jne loopne mov xor (bad) or (bad) sti mov add fs add mov add sub das mov mov sub out cmp mov out dec je pop or repz mov cli bound (bad) cmc lods je in cmpl (bad) cltd sbb mov (bad) (bad) pop andl sub push sub xlat jge or inc rclb stos mov inc xor mov cmp jne or add movsb inc fcoml fimul (bad) daa or je test orl cmp push outsb out scas and push aad sahf adc add cmc out and fmull mov add add mov push adc inc test or mov js outsl add notl dec inc mov xchg or xor dec mov loope lods pop mov pusha push mov fs (bad) jns mov rcrl ret push inc insb xchg dec jbe pop add add imul pushl vmwrite push lret (bad) fs pop das cwtl pop cmpsb push pop mov xor inc mov sub xchg aaa stos mov lcall aam jb lea push add push xor xchg sub add jmp pop cmp ret pop jge mov fwait push mov adc ja lods xlat fbld add int inc mov dec ret inc adcl stos leave jmp sub mov xchg test lcall je and xor adc add dec aas int3 pushf addl addr16 mov push push pusha and insl xlat add cmp lods cmpb lds cmp insl xor inc mov inc jnp inc shrl fadds xor jne test imul cmp inc add inc cwtl loope jle mov daa fmulp lcall push inc pop or inc push mov xchg cwtl push icebp stos sub xchg call dec add sti jo push lahf out dec add lahf cmp mov sti rcrl icebp mov pop stos jle lock test fiadd orl dec ljmp xchg lcall push mov dec mov add or fldt xor popf add mov cwtl sahf lahf cmp xchg rol push (bad) and pop inc sbb or insl lea lock (bad) aas aaa add outsl les aad pop out pop add push xor add sub cld lret in mov inc xor adc out lahf dec clc mov (bad) pop mov dec incl xchg adc cmp adc push add outsb jo cmp fisttp idivl push scas add subl mov and xchg add mov sub cmp mov xchg inc pop scas add lods mov cmpsb add pop jge xorl sub test and jo in mov fnstcw jo testl int sub fst xchg out or jne pop stos (bad) mov cmpb popa insb popf add mov lock flds lods pop sub mov daa add fwait jmp orb pop loop je push jae mov mov sub scas in bound aaa adc aas test leave dec jg xor out lea cltd cli mov rcll cmp dec xchg xchg mov inc sbb cmp shrl sahf pop les (bad) mov xlat (bad) sbb and out add cs pop jp (bad) cmpsl scas mov les scas mov cmp jns xor jl out clc jp clc subl les aam cmpsb icebp mov dec add pop xor mov and cwtl mov mov and jp int add mov daa pop imul push push jo xchg add mov movsl adc flds and inc sbb mov xchg dec pop cmp add popa cmp dec add jmpw addr16 fild add (bad) jae cltd xchg add loope inc mov loopne mov ss mov sub fdivrs mov scas in daa xchg add cltd popa sbb pop add fild or adc mov xchg (bad) js mov sub lea testl jp add not sar push mov ja jae nop popf add push leave lret jnp add pop popa push fbstp add dec test add in fcoms mov repnz decl verr jmp ja xchg inc mov dec stc scas in push mov inc jne and mov add fidivrl add insl dec clc cmc idivb pop addl jl and addl ljmp sub xor jns jmp pop gs popf adc bound cmp out imul fidivl decb outsb das (bad) setb xor add adc add aam or pop add je push mov sbb arpl jg add dec lods pop and or dec in jmp andl bound jb cwtl push outsb push adc mov add sub xor es add in or lcall loope adc cmp push jnp dec enter xchg lock or aaa inc test gs mov fildl mov mov push add add jmp jbe js lods addb outsb jb mov cltd push xchg sub sbb fisttpl ds jne lea dec in mov mov jl and and dec in inc fwait mov or xor stos add and ja popf fucomip sbb fnstcw cmc add fmul pop cmp lds pop mov add xchg (bad) lock xchg adc add adc add inc dec add fucomip jl adc out inc mov push out movsb pop push outsb sub xchg sbb and xchg imul cmc and fnop push xchg add aad jne mov adc lret out orb lock or pop addb popf mov fwait add mov mov insl xor enter add jno lea add and bound mov inc cmpsl pop iret dec add xchg dec pop mov repz pop jle jbe pushf add mov mov arpl sub mov fdivp rol xchg cs cmpb ret jnp xchg xor sub in sbb mov rclb inc inc pop (bad) inc adcb xlat pop imul sub js mov jbe add lahf adc jns xchg sub sub dec cli add xor sti jecxz (bad) jae add lret scas imul and add fdivrl cmpl (bad) mov dec jo push xchg loop ljmp addr16 dec stos in cmp add mov add xorl (bad) sbb push jecxz cmp add sub jmp push repnz lahf mov xchg lods loop add je sub sub lret movsb cmp popf add (bad) mov sub fildll push xor imul (bad) jmp mov sbb cmpl call ret xor add lret out dec xchg (bad) aad call or jbe dec add cltd jo (bad) sbb jle xchg mov outsb and add enter push je insl cmpb push rorl add sbb push push jmp add and dec add out fcmove inc aad das test fcomip cmpsl add cmp lods adc mov inc adc sbb into mov and (bad) cltd mov cmp or inc dec arpl jne flds ret (bad) mov lret add es ljmp add (bad) lods add std jno adcl mov imul jecxz sub out sti xlat pusha mov push bound (bad) ja scas inc imul (bad) into lahf jp fcmovu dec and mov cmpsl es nop or add aad jge adc cmc loopne add push pop sbb sahf lds jge pop xchg add cmc aad das loope push add pushf push push hlt enter cwtl cltd add rep push andb push (bad) fistl bound add popf in int loopne sbbb fdiv cwtl pushf jbe lret and test pop dec xchg lahf lret inc push push add aaa lret push push popf scas xchg into lock xor jns mov jne,pt add lret sbb and std xor (bad) push std cmp hlt add sarl outsl pop mov lea inc mov into jae add mov inc add adc inc popf inc rol cmovg (bad) mov push div xor repnz inc mov je outsb push add inc mov mov sub mov sbb mov rcll dec xchg outsl mov adc adc sbb sbb sbb cmpsl add ljmp jmp scas jbe aaa pop repz jae dec icebp inc mov std mov pop sbb or mov push push cmp (bad) out xlat je push scas mov push aam (bad) jle notl in sub jo fcmovnbe add mov pop mov data16 jle roll cmp sbb add int movsl lret sti add idiv cwtl add std mov iret popa pop (bad) sub xchg jo mov pop sbb xor data16 and imul inc inc ljmp xor das dec push mov mov jg (bad) sub cmpl adcl add push scas arpl jnp add inc mov mov cmp sbb or rcrl or movb (bad) out lds addb push mov jo std jecxz sbb aaa dec jo iret xchg js add pop in sub push imul push fs xchg mov jbe xor aam add fistpl cli test cmp adc or pop ja push jl imul in add dec or jmp and inc sbb pop dec mov loope mov sti test imulb sub int3 les insl xor sbb add or cmp std orl or (bad) xlat sahf add les mov jb add jmp subl dec add jo xor addl cmpsb movsb fidivrl flds mov push lods add aaa xchg loopne out fild mov outsl das jp xchg out push (bad) vcvtsd2ss adc call jg jecxz jle xchg add and mov out rolb mov inc adc mov cmpsb push popf jbe inc out or inc mov push add xchg (bad) fsubrl lret inc icebp mov push xlat add jl pop sub imul (bad) sub add ljmp add lods push loopne jae dec mov inc inc roll xchg sbb pusha mov mov mov addr16 enter cmpsl dec push lahf adcl ret ja mov dec xchg movsl add push xchg stos push jmp add pop lds dec fadds dec push jecxz xor adc pop imul scas push cmpsl mov dec jnp adc mov add and aad jecxz outsb add sahf movsb addr16 xchg orl and aaa add mov inc adc into jns pop int3 jns stos push jge or ljmp mov cltd dec iret cmp add xchg add test je ret sub xchg push add push and rcrb fidivr pop push add sbb popl mov xchg sub scas add les add pusha das inc sub jge add fldcw add adc or inc jb mov (bad) insl add push fwait sub adc cmp rclb addb frndint data16 lods add dec xchg push pop aam sti lcall cmpsb xor jge add (bad) push push rcrl cmp fsts mov pop cmp in push outsb xor (bad) fidiv sub jg inc cmpsb and sub jo mov ja scas (bad) mov loopne gs mul int3 push (bad) sbb sub mov cmp imul xchg testb incb ret dec inc (bad) int3 out add mov roll ret lds push xchg and xor dec or cmp dec icebp int3 xchg cvtdq2ps subb dec in add test aam daa xchg xor in push adc jne add aas je aam sub mov addr16 jge cmp jbe pop add push movsb fwait add inc mov dec stos add fdivs and shll pusha mov or (bad) xor js sbb cmpsb into jle outsl mov test leave sbb int inc das les adc pop inc xor test scas leave lret lcall adc cwtl push add jo pushf out cmpl or in pop mov add rcrb enter mov jmp pop jne inc lock lods add (bad) pop xchg add insl pop hlt dec xor in lods repz add (bad) out (bad) xor insl ror lahf add repz add cmpsb and sbb xor into (bad) sahf loop jno jae jge add cmp jle add pop aam xchg loope add insl in ljmp cmp xchg test divb add pop cwtl xor nop mov sub mov leave arpl dec mov pop xor add dec cmpsb jle inc sub fstl or add test cmpsl pop sbb out nop inc jne (bad) negl mov and xchg shl cmp imul (bad) test sub dec xor je (bad) test mov inc mov addl mov ja aas into or test and in cmp enter (bad) mov push orl int add xor xchg adc push fnsetpm(287 mov add loopne dec sbb loope lahf loop xor ljmp add scas jmp cmp or sub stos fldcw pop int3 cltd mov pop mov add jmp adc xor outsl es dec (bad) add mov mov inc orb aad sbb mov push adc jecxz add xchg test insl xchg add xchg inc inc (bad) jns add cmp test sbb es add daa lret push mov pop cmp dec mov xchg dec add (bad) hlt pop jbe lea gs adc jnp sub and push negl add pusha push flds or std or movsb mov pop test mov add pop add hlt add (bad) or lahf (bad) int3 sub jo movnti (bad) push xchg pop mov (bad) aad test loopne cmp push lods mov stos pop add push add pop or pop jo (bad) push flds xchg cltd fs lea cmp adc add xlat add test repnz dec add pop sub pushl add imul cli mov xchg mov decb or in frstor fadds arpl cmp adc push jg xchg add fsubr gs sarl rcr and mov xor and push popa jecxz push add xor or lret add in stos inc push outsl cmp icebp fldt adc sub jle cmp pop lret (bad) push add xchg sub xor push fldcw add pop nop pop dec jmp jb mov bound sbb xor imul daa test fs add cli add lahf je inc psrlq sub call xor and adc add adc cmc test fs das adc lock pop inc inc loope (bad) das add es ficom mov xlat inc stos pop push (bad) stc xor add sub std xor js push add out mov lock push mov loopne lods add leave lea add fsubl jbe mov pop mov repnz adc jns fdivp hlt add dec aam xor add jl push pushf (bad) mov sub lret inc pop fimull mov pop sbbb mov add mov popl mov clc arpl mov sub loop iret mov ds add lret xor and jnp mov fiaddl ror in js add sbb jnp pop sub mov add (bad) and add call cmpsl bound ret fild pop push cmpsb pop mov or daa or adc lods cmpsl repnz in jae int3 pop mov (bad) insl popa cltd jns add mov ja aas nop (bad) es lahf cli out jo int3 mov sbb subl push shlb inc hlt mov cs movsb adc ja fldcw add push (bad) mov pop pop dec test jns add jbe inc ret add push cltd jg (bad) iret (bad) and push daa in scas push inc cld (bad) add fnsave cmp add mov jl add jne shll and jae pop insl icebp sbb push addb roll push cwtl fcoms fidiv pushf in jae int3 add sbb aam push pop popa pop xchg add stos fldl insb mov je mov jb adcl cmp lods jno lcall sbb sbb sbb and pop add add bound mov inc push and sbb add add jl push mov iret jmp jp bound inc add scas test add inc cwtl popa cld lods inc loopne add add sub pop xchg add or xchg xlat jae xchg andb es mov sbb add in xchg jb add mov cwtl nop add outsb push and pop pop xchg sbb add in lds xor and into xchg pop fisttp mov fsubrl or add enter addl in sbb loopne int3 push or icebp mov repz mov add sahf (bad) scas std fsubs leave inc jecxz lret xor lods (bad) fmuls add cmp push xorb hlt (bad) mov jp roll jg jp sahf iret push orl out sub add pusha cmp xchg (bad) add loop addb adc ficompl nop sbb sarl add test out mov in jmp sbb divl insl stc lcall ficoml pop xorl js xchg sub add lods mov roll add fdiv add psllw add ficomp iret sbb icebp cmp jp loopne loope popf addb xlat or dec andl mov je sub ds std leave cmpsl lods push clc sbb pop mov lea loopne xchg jae popf adc std mov dec or arpl and test and mov add mov jno into add cmpsl mov sub and xchg popf xchg push dec or faddp loop push cmp jo xchg mov mov pop sbb pushf stc out fs jo addl push jg jo mulb xlat js aam pushf insb inc or add adc or cmpsb xor cmp repz inc inc sahf add jmp ret adc mov xchg push in (bad) call push aaa das pop loopne test and push data16 inc dec ljmp xor pop mov mov pop leave or ret add add push test pop mov movd rcr aad lret lds jecxz cmp add mov cmp (bad) (bad) repnz das cld jo les aaa add lods (bad) and hlt rol js sub loope mov mov hlt sbb es mov cli insl or dec cmpsl mov mov adc mov mov addb loopne pushf xchg sti jno movsb add or xchg lods inc inc ds aad and sbb notl adc daa xor repz jae mov mov inc aam mov out (bad) mov cld mov adc pop js fwait xor lds mov in push cmp jb (bad) add out and pop sbb mov cwtl jno clc xor ret xlat in add xor add mov jmp inc push or cmp repz jns mov push call add repnz jnp cmp xchg xor in into adc int sub xchg xchg (bad) jl add inc pop int3 imul mov cwtl inc mov andl lret mov ficom jae test mov sub arpl aad std sub (bad) and add outsb xorl xchg sbb mov xchg outsl movsb xor inc sub and pusha mov add (bad) int push cld cs add or add pcmpeqw loopne mov shrb cmp adc push mov push xchg inc mov addb sub push add push jo lret scas pop or sub data16 cld popa test arpl out cli int ret pop test jmp mov mov out add ja dec xchg dec pushl lahf adc adc loop pop fldcw mov cmp lret fcomps sbb (bad) pop orb add add jnp iret or stos test sub orl imul or mov cmc ficomp or outsb xchg xchg pcmpeqw scas adc lcall inc dec pop aas ror pop jb xchg orl add jo nop mov add and jg cmp adc in adcb sub add mov cwtl add das loopne mov push repz lret adc andb test cmovge les insb out mov dec je or jl push lcall add inc and add add (bad) sti dec das inc or mov js adc (bad) cmp lret loope sbb jne cmp sbb mov xor cmp xor lahf popf jns inc add test daa (bad) mov add xchg pop adc add lds add imul add imul idiv mov mov jp add lret sub fs test add mov int3 add add add out sbb scas mov mov (bad) push mov dec icebp mov add rclb push add out lret sub cmp xchg add into jns xor mov cmp push leave daa cs mov jo or test hlt add push add xor push cmp (bad) add movsb pop cmpsl or rclb add hlt mov add cld mov add je add add and adc lret xlat (bad) fdivrs mov stos inc mov mov xchg jecxz popa mov adc add incb sbb inc popf pop pushf out mov (bad) stc xchg iret mov jl fidivrl mov jns pop and (bad) out mov jae push dec xor xor dec pop pop (bad) xlat jp xchg mov stos das add push divb imul hlt add and leave xor out lock mov jecxz scas je and add pop test lds dec mov es hlt icebp xor xor cs stc add fdivs push addl dec pop sub mov jns pop fs je imul pop cld ljmp push mov dec add jmp xor adc imul xlat add mov aam or add add or push sbb sbb repnz (bad) jp jnp lock scas in add mov cmc push test inc (bad) push mov in arpl mov jp jo (bad) xlat cmpb inc fsubrp test sub fisubl jl pushf popa pop fadds inc (bad) (bad) ja mov jae jmp add inc (bad) sub add add jge mov or mov or pop dec cmp add loopne jle pop rcll push mov les roll push shr cvtps2pi cmpsl dec add (bad) cli dec mov dec mov clc sub jecxz push lahf xchg out adc mov adc loopne cmp add jbe fnsetpm(287 push push xor iret dec arpl sbb mov add xchg cmp push fstps gs bound (bad) dec add adc sahf jb jbe xchg adc addl mov mov mov xor out mov push add jnp in outsb and add dec sbb test loopne jl js pop (bad) mov add mov push add mov imul insb or mov jbe ja loop sub adc mov pop test fsts mov xor mov enter inc cli shr leave add (bad) sub jp add mov mov sbb test dec ret xor aas and insb adc idivb add inc leave test aad mov xchg add aaa daa rclb xor mov jp outsl push xchg insl stos cld loop js add jecxz jge lds out cli addr16 hlt sub cwtl cmpsl jno adc sub loope add lock mov push push js add sbb mov add lock flds pop outsb enter add lahf mov mov iret loopne push add jo bound adc leave push xchg lcall inc sub push mov add mov jne add movsl test push imul and inc mov adc sbb lret stc cltd push std cs test adc sub xor sub (bad) or sbb add add inc out or outsl test jae repnz jge mov sarb fnclex insl mov xchg inc loope or call inc sbb pop mov add xchg lds mov add into jg mov dec (bad) or scas fs lret jle out inc sub es add push mov mov add sub cmp cmpl pop andb adc add add add xchg test add in mov xor sbb adc dec xchg jmp push repnz xorl mov mov push add xchg dec fidivrl add inc xor imul jmp xchg movb mov add dec int sbb fsubrs push adc jno and push mov pop sbb add mov push sbb daa add test pop es push or jp incb add and push inc cmpsb pop outsl aam add (bad) push push es daa xorb in test scas hlt push pop inc add rcl mov add int3 ficoml mov pop add add mov in sbb arpl jg jl mov rcll add xchg mov negl jp lcall (bad) pop mov pop int3 outsb je xchg push sub jge fmul test mov stc mov add add rorb xchg cmp pop cmp xchg and out jmp aaa mov push sbb push push hlt (bad) mov adcl jle mov loop out add jmp add and add outsb (bad) cwtl jl sub sbb jns pop adc add arpl inc add jbe mov mov addb addr16 sarl and add xchg out je pop xor pop add dec ds add or repnz in pop pop jb sbb imul addb xchg mov xor lds in jecxz pop jns lcall jns add outsb stc jle or mov rolb cltd add mov xchg jle leave fnstcw add lret xchg xor adc mov out cmp aad dec xchg repnz push fiadd dec push lret cmp ss fnstcw test gs sbb mov pusha sub add (bad) jle and in xchg addb insb stc js adc add fild mov test sbb xchg hlt push pop xor mov enter xchg cmpsb xchg or add add lret jo dec outsb mov repz cmp sub sub mov and mov cmc outsb call cmp push adc sbb push and fiadd and or das iret dec pop std jo subl fildl add (bad) jmp adc cltd add test fadds adc aaa jbe test inc add mov imul aam ret out pusha fisttp cltd pop fs xor xor push sub test int mov jo xchg jns sub lock andl mov pusha add sub lock outsb push cmpl mov adc js xor int cmp fisubr clc subl push xchg adc and cmp imul sub scas fbstp rolb ljmp inc mov ss insl cmpsl jg dec arpl outsb cmp lahf (bad) hlt push pop add or imul add add int3 out push scas or imul pusha mov pop jno cmpsl jns jle mov lahf lret mov data16 std push and mov add vpmovmskb mov subb adc loopne dec dec stc dec xchg mov mov outsb inc mov add loope fsubrl pushf mov fbld ja (bad) cltd nop loopne pop loopne,pt jl sbbl cmpsb lahf cmpl mov mov (bad) jnp outsl rcrl mov popa (bad) dec inc jb and and sbb xor test dec cli xchg mov sub push cmp outsl inc shll mov aaa sahf add ljmp jae out push sbb jbe sbb cltd out (bad) (bad) jecxz subb test push andb mov push mov or fistpl gs push jge pop xchg stc test roll pusha lret test adc cld jne add pop mov mov and es cmp push add lods pop jae add out adc add sub add lcall add mov imull sti imulb push fnstsw pop aaa xor lret in out mov inc pop addl sub rcrl ror pop aaa jnp cmpsb and cmovo inc (bad) add jo (bad) mov in pop or xchg (bad) adc xor mov imull cmp in fnstenv imul sub js adcl adc jle jbe add push fninit add ja jo jo sub daa add loop mov add ret andl aam and add dec dec cltd clc sub push fsubl push iret js add ss lcall add jp call inc dec and rcr and push dec pop jns jbe inc add add leave push jne push and sbb mov add je push fldcw and add hlt clc negl pop add test popl xor xor aas shlb pushf lock ja jbe add movsl ja out adc jbe aas add pop lds or insb dec cli jbe add repz loop inc add or outsl cmpsl add out (bad) fcomps push sbb push xor cwtl es shrl mov dec loopne arpl jecxz mov push push out sub fmull mov xor cmp sub cld cwtl addr16 pop adc inc ret or adc xlat push mov xor testl fucomp imul lods adc dec in pusha arpl xor sub (bad) scas pop movsl or sbb icebp jmp cmp (bad) sahf add xorb pushf adc xor add lahf cld xor or sub pop pop sub lods cmpl arpl jbe adc orl imul sti sbb pop imul add cmp or outsl and enter clc lods dec ret addl jno fwait (bad) sub sub subb and add popf sahf xchg lea cmpl lds movsl and push add inc fwait imul sbb sbb mov mov into push rcrl pop orb jge stc mov call push mov dec push adcb and add aaa inc add push fwait or xor bound test cmp push adc icebp push aam fildl pop out or pusha mov dec (bad) jne push out andl movsb pop jp add mov add ss jae inc jns add cmp mov mov xchg dec add ret scas inc add mov pop mov cmp add dec xchg add or sbb adc pop into sbbl cmpsl add fnstenv mov lret int insb pop sbb dec rclb cli jge out in or pushf xor jns scas pop inc les xchg push fisttp xlat add icebp cmp xor jo add js and and les push ss pop xor test cmp inc and or and pop inc cmp mov bnd sbb in (bad) aam dec arpl insb cmpsb ljmp stos xor sahf jle inc mov enter mov mov jb xchg (bad) mov pop adc xchg push int jle add movsl inc clc mov pop roll orb inc out ds mov dec inc push xchg sahf out dec insl mov adc push add lods jp cmp mov arpl add cmp lret pop inc sub std xor xchg out paddb and sti in jle mov stos push lock inc jo lret mov push mov (bad) cmp push sbb in add leave fimul xorl add lcall les dec sbb mov rol push imul cmp (bad) pop adc inc add push cs pop cwtl or cltd test sub test xor mov mov jle inc add mov mov stos stc jmp negl push xchg add call je movsl (bad) scas (bad) int3 add test add push lea inc lods cmp add (bad) gs and push (bad) xor test imull das xor outsb sub leave sub or ds fiaddl test out xchg int3 jmp jecxz add or inc mov bound push mov mov (bad) roll ficomp add add (bad) add lods in push mov mov repz mov movsl cli xchg rclb or adc jl jp adc or or scas popf jo sahf push and orl mov cmp jl addb or jno pop cs push push sbb fsubrs test mov xchg jns xchg cmc aam jnp xor sub jo xor in or int3 dec jnp add xchg inc or cwtl jg adc loop popf mov inc push cli lret into push add xor pop sbb add test lods dec in fwait add clc push sub movl dec ret add pop in call add dec cmp (bad) ljmp addr16 sub or pop lea lcall imul xor inc pop andb test inc lods mov jge shrb mov js add in loop mov add or mov add shr lret roll gs stos daa dec mov add mov nop popa push xor ss loopne jp scas push pop pusha inc mov aas movl pop inc (bad) pusha add repz inc mov cli sahf pop inc fs or aaa xor in jp loopne lahf add mov leave les adc xchg aad and mov push outsl ja add hlt lods inc cmp movsb or sbb cmp push pop lock and add loop ds push mov lods push jb (bad) in pop lret add data16 jbe inc arpl jnp mov cmc add push mov mov dec adc xchg sbb push xor sub add inc push popf fistpll loop loop aad dec scas fldenv xchg cmp cmp push je mov gs lret mov pop (bad) adc cmp cs sub addl out loop inc push aam fs jmp icebp add stos (bad) sbb dec ror test mov and ja and dec add adc xchg mov xchg or xchg orb xchg adc fnstenv mov mov sub rolb dec (bad) jp pop adc dec fs inc stos cmp or sbb sbb cmp mov fidivr dec jae dec lret jmp xchg pop aam jge add push and (bad) cs add mov xchg dec stc mov sbbb (bad) mov ja pop jmp aas sbb out xor adc outsl xchg stos lea jmp and mov mov mov xchg xchg into sbb xor add sarb push fldenv sahf lahf push ds mov testl aas lcall (bad) jbe fs fs adcb mov cmp push sahf fldl inc roll and lods and std clc push (bad) aad stos aam xor fisubr add push scas je ss add movsb rcr int3 clc push xchg incb popf fmuls dec mov lret add (bad) xor add jl add cltd push push imul push add repz inc (bad) or mov or fneni(8087 jns jne cmp cmp insb leave sub mov xor add aaa sarl and adcb aad mov push pop xor or jg in jmp mov icebp jle dec cltd adc (bad) mov mov or in gs add arpl push outsl and aas add bswap sub insb pop inc orl push iret xor adcl adc and cmp mov (bad) cmovne mov xor rolb adc mov in mov and ss jl enter or add out adc call push or les mov cmp out or jo cmp in jne (bad) cs add ffreep dec add mov xor cmp mov les scas pusha sub std js mov cltd fsubrs dec xchg repnz clc push or std ja cltd gs scas cmp xchg rclb icebp repz adc xchg movsl cmpsl in add ljmp mov jmp js cmp cmc dec push xchg and (bad) push ret outsl sahf jecxz dec push js or mov cmp (bad) jbe and bound mov add or mov sbb add outsb push movl test into jne pushf insb mov push fcmovne add addr16 (bad) out dec add jb jmp sub popa or add (bad) cwtl push jno add (bad) (bad) lret add sbb cmp push test push and nop add jnp sub pop bound sbb add loope jns addl lret inc add inc pop pusha mov cmp xchg fild pop decl or call mov ret pop cld ret rorl fnstcw fbld addb mov xchg call push dec (bad) cmp cs mov ret stos cmpsb andl jo mov into js add sub subl (bad) adc sub sbb pop xchg jae xchg pushf mov lds sbb test push inc xchg popa cltd xor fsubrs fildl in adc or push sti mov cwtl jl (bad) int cmpsb sub pusha (bad) jge movsl bound (bad) mov fnstsw jg add stos pushf jle sbb cmp repz (bad) dec pop add mov mov (bad) or sub push sbb aaa out jge mov add sub sub or out jae lahf mov inc sti cmpsl stos rorl mov sbbb sub or push movsb orl xchg add sbb mov push fmuls cmp inc push pop bound pop and add inc pop mov rorl ds js (bad) int3 out jb (bad) xor stc je pop add scas test test int3 loop mov pop aas pop jne (bad) and inc rorb xor push test leave pop maskmovq notl fstpt inc push mov pop sub and add dec xchg push dec lock (bad) rolb inc add arpl lock in add cmp lahf loope dec cmpb test inc add dec fwait adc add out lds in fadds mov out dec push add xor xor or andb xor xor inc dec mov testl cmpsl aas xor add leave pop or jge jle out and push cli pop imul inc mov fstpt out add jae or cmp js mov aaa sbb inc cmp xchg addr16 push mov xor movsl xchg flds fimul js xchg outsb inc push inc push jbe sub movb sbb mull sahf or add xchg mov xchg add lret xchg call in test addr16 xorb cld mov adc push add repnz dec xchg push add jbe add inc jnp cmc ret pushf pop in add icebp sub dec out (bad) jge add test add jb cmp fs add dec popf repz jp adc pop jnp mov lds cmp xchg lahf aaa push lret or das cld add pop repz xchg cltd int3 sbb loopne in (bad) stos cld data16 xlat add cmp sub jns add out dec xchg sub xor stos stos add adcl mov cwtl insb fs inc add xchg xchg loopne std or cmp pop insb xor add std lock insl stos (bad) dec dec insb clc xchg pop and fdivs push lds dec xchg and and mov or sbb ss add icebp cmp adc or add mov xor lcall movsl jbe mov addr16 mov xchg mov push fiadd pushf sbb push dec push inc or dec inc adc add dec bnd movsb xchg in inc add lahf push dec mov xchg pop push out mov push push scas scas pop cmp xchg rclb mov jp xor ret (bad) mov pop mov cmp ret sbb movaps incl shrl test jae add fdivs xchg xchg cmpsb orl testl lret jo jecxz mov pop cli cmp add xchg inc push xor and push ret clc add ss mov sub sbb dec add aaa rcr add dec in std sub or cmp jno sbbl out mov (bad) gs mov repz xor xor pushf push add jb int3 fwait cs pop push mov add sar cmp xchg ja sub jb and push dec add out push comiss loop js push xor add lcall jo add mov bound cmc les sbb fstpt add imul mov jns (bad) out fcoml imul mov add add pushf gs mov pop lock pusha les xor xorl fistp fwait adc out pop add stos (bad) std fidivr out push xchg loopne sbb sbb inc dec mov xchg cwtl add xchg jno push fnstsw jb in xlat js stos fcom sahf cltd adc (bad) jo add test rol pop sbb push mov add movsb xchg loope xchg add mov jbe add xor push adc sbbl or cmp fs inc test xchg sbb clc xor sub adc cmp cltd cwtl sub adc out mov cmp jnp movsl mov verw into sbb add or inc adc xorb repnz push test daa add sub inc clc push dec orps aam out jg mov add add cmpsb push mov nop xchg push lds xor sbb xchg sub push setno in cltd inc inc ret mov xchg add popa icebp sub (bad) clc repz inc mov leave mov push fiaddl pop cmpsb dec repnz in add rolb push pop mov jae fildll push into mov mov in lock pusha xor inc stos ds mov xor push pop pushf mov xchg push ljmp hlt insb add rcrl js sub int lahf mov andl fs test add scas mov add dec jecxz pop int3 inc hlt xorb in (bad) addr16 jo jns push inc xor fwait pop sub daa (bad) cs cmp mov dec inc lret push add repnz fmuls add xchg push inc sbb jg je dec add fs icebp push adcl shll mov mov test xchg imul pop fsubrl pop int3 dec push jge sbb xlat leave outsb (bad) push adc test mov repz dec sbbl pushf fildl int3 call mov inc add cmp add fcmovnbe push add daa inc rcl ret stc setge sahf ret cld jns lods nop out in jp (bad) jnp jp xchg sbb add mov xchg add pop jg xor out mov inc jno cli movsb cld in jnp mov (bad) sbb and out gs mov dec mov add insw xchg sub add pushf js push mov add add mov xchg add jge add adc in cmp mov idivl mov or add sub cmp andb cmp out inc and cmp aas add aaa add push mov jge outsb (bad) outsb add xchg xor dec add insl sub out ficoml test clc hlt rorl push pop add jbe lret cmp aam lea insb xchg add ret mov cwtl dec fcoml xchg pop sub inc cli data16 jnp adcb mov pop xchg adc popf in adc add mov int add jecxz ret add cmp jns jp sahf rclb fisttpll pusha lea add ds cmp jae cmpl xor movaps imul ret lock push mov add inc jnp mov leave jecxz addr16 mov dec fmuls out ficom in add pop pop push xor pop (bad) cli or mov add test sbb (bad) xor cltd jp xchg mov push sbb std or fistpll push ror lret inc gs add test add pop sbb test pop xor cltd fcompl sub addb stos js fldenv lods mov xchg add jp out xchg cmp add stos loope in icebp dec add cmp (bad) sbb fisubl xchg fsubrs or test add (bad) jp aad fadds nop jb repz jne add mov dec pop fldl cmp das enter mov data16 cmp pop jp ret sbb add inc lret jl cmovge mov stos enter jns add push pop mov ror sti xor add mov mov add or jne inc test add fwait jae push (bad) add mov add adc xorl jo imul dec xchg jne add or subl inc roll adc (bad) pop lds test dec jno sbb cld adc nop insb repnz adcl lds mov or sahf dec cwtl push into enter xchg jle sbb rclb and (bad) jns enter lods cmp mov test inc (bad) xchg add jo xor sbb lock rcl sbb mov (bad) mov jle iret sbbb idivl adc cmp jbe dec cmpl jp add lahf ds addr16 mov pusha or sub cltd mov xchg mov sti int3 sub lods stos xchg push sub incb jae aad das jne add movsl push cli pop imull lock add lea add test add int3 mov leave scas jge add or xor mov stc mov jno cltd sub jbe fs andl ljmp clc cmc imul scas std and sbb lret loop imul sarl push icebp cmp add mov adc add or int3 loop push testl subb imull xor dec sbb cmp (bad) mov fildl lods jb out dec xchg dec fadds push fwait pop daa leave jle jl (bad) pusha cmpsl (bad) jae xchg push adcb icebp add mov ret sub add xchg inc sub test xchg add pop jbe mov xchg inc mov jne outsl cmp dec (bad) lock jbe out add pop mov sahf aam bound gs jl loope dec xor fcoms (bad) pop mov xor aaa xchg push xchg (bad) fisubl ljmp js xchg test mov pop or lret and pop jnp in rorb and mov jecxz xchg mov sub add mov idivb lret int mov dec add xchg add or push negb adc in outsl fild add push add ret lcall jns sub add fsubs mov cmp jl cmp int3 add cmpsb mov xchg imul (bad) repz add sub jae add add aaa cmp mov mov and jns gs jg ret xchg popf imul scas cmp inc pushf outsb mov pop or adc push iret add mov add dec jae sbb outsb pop add sub add std adc stc xchg xor addb psubsb and inc pop lret dec inc push test scas mov jbe test dec add dec xchg repnz roll xchg xlat adc gs push add mov orb mov mov push loopne test sti loop fmull add pandn push inc movsl adc (bad) and addr16 movsb and inc push mov mov mov out mov orl popl in pop jl pop (bad) mov dec add jmp ret mov inc call mov pusha dec aad or pop pop push js loop sub out jnp dec xchg (bad) lods xor dec add pushf push int3 out mov or test ss ret inc cmp inc mov pop (bad) mov jo pushf add sbb dec sub add sarb add mov (bad) mov xchg sbb fldl xorl push add in out xor adc add add ret add in and movl mov add xlat pop push jb and xor jecxz in inc cltd inc adc dec ret sub push sbb test add adc in add repnz out ret jmp mov push pop int add or lods mov sbb (bad) xchg in lock jae imul mov popf sbb sub ud1 cmpsb or add mov mov mov add rolb fdivrl stos shr adc inc fwait xchg add mov cmp sti pop out jl add or mov add subl je mov mov sub jl add das xchg (bad) iret jg sub loop pop or test xor movsb dec xchg in aas int scas sbb sub jmp inc idivb hlt or mov popf dec and fiadd stc sbb das push cmp dec sbb imul mov add add jp repnz xchg rcrb std hlt cmpsl adc clc (bad) xor jae jne repz and dec cmp jno lahf sbbb addl adc mov or pop (bad) jg out add push addb add std (bad) mov pop (bad) mov adc add sbb enter cli push mov call out bound subps dec xchg cmp icebp sbb js dec jle or iret fsts aam test adc mov movsb mov stos fldl cmp jnp iret mov test adc dec adc (bad) push mov shrb movzbl add push js add or mov jge adc sbb shlb mov sahf pop je add adc insl adc scas or add movsb cli lahf aaa ret daa push pop lods cmp or fstpl jg fcompl pop and popl pop mov sbb int pop xorl xchg mov add lods push cmc int3 inc push inc sbb or xor add aam sub xor xor movsl sub cwtl data16 ja,pt (bad) mov add mov inc pop mov adc mov ja (bad) and enter ret add rolb cmp jne call add add xor xchg cmc adc add rorb ljmp js dec roll and add (bad) into pop add addr16 daa or sbb pop sahf test fcomi insb sbb mov inc in pop into pop cmp add aam jl xor add mov inc push jmp mov push inc inc jnp in lds lret ret fs mov push das cmp xorl popa jl adc loope adcl inc sarb dec roll mov push dec aaa mov dec repz sub jnp add test fwait rclb lods in pushf push inc pop jae out lret js jns push add mov data16 and jne lock verr aas and mov jnp add add dec mov ficom cmp sub arpl add inc xorl jmp or push add idivl loop roll mov js aaa add or xchg outsb push add lret xor faddl (bad) mov adc test add and sub mov inc data16 orl pop add add add push imul aam ss cmp sbb mov fs push cmpl daa in sub mov push sub cmp imul adc mov push xchg cmp hlt dec add ljmp add add in stos sbb adc sub push xchg push inc lock testb and xor fimull xor loop pop xchg out dec es mov mov xlat (bad) enter inc jo (bad) movsl cs hlt pop sti jnp jbe add pop fsubrl mov inc or rol dec call jle popf (bad) dec mov (bad) lret cmp hlt jns add (bad) cmp add enter mov lock imul xor xlat sub call sbb xor sub (bad) scas ja cltd cmp add outsb pop in xchg or mov mov out js mov popf sub test adc add pop xor mov popf not mov add push inc mov in or pop (bad) push xchg outsb cmpsb sub inc jns jo cld mov xchg (bad) dec lea lret pop sar jae inc sub mov orl out sub arpl mov sub pop cmc ljmp sbb data16 mov addl daa rorl rolb cs xlat in cmp ret daa repz add notl inc enter adc js sub pop (bad) mov inc add and nop mov arpl cmp add or pop adc add dec cltd push inc push stc out add aas sbb pop and pop out xchg xchg mov jne rcrl xorl sbb jae addr16 xlat add mov fidivrl pop add pop jmp add xchg dec flds mov loop outsl add popf cmc jno loopne lahf dec lahf inc repnz pop add add sbb rcll adc xor lds (bad) jg mov lret add inc inc loopne sbb clc mov push imul xchg add dec adc adc (bad) xor adc pop cmp xchg lds mov and pop xor mov fdivrs add push movsb sbb mov rdpmc add daa pop add push and xorl adc mov mov push enter add adc jno and mov xchg mov lea cmp jo add xchg (bad) pop add jns cmp jne outsb xchg (bad) or xor adc cmc xchg jno or add js call mov loop mov je and mov lea xchg pop inc xchg icebp mov std add movsb dec inc sbb andl sub leave in mov adc rclb adc outsl addr16 add or rcl xchg cltd fwait cmpsb add addb push and jbe push add test adc mov sub fdivs add push out cli insb inc push add mov inc in add dec daa adc lea (bad) mov sbb add dec ret ds fild add fwait test pop pop aam dec jp dec add add mov or push clc dec call add add xchg add mov or add jbe jmp sub push insb iret notl sbb xor mov cld and sub scas fisubrl (bad) push mov aaa ljmp pop (bad) sub cwtl test bound (bad) mov test mov add rolb pop lods inc mov lret sbb inc movhps fsubl add sbbb push add js jge add mov jl out cmpsb add stc std push (bad) data16 pop movsl jecxz cltd sub je inc add es push or jle xor dec sub pusha ss mov fwait dec sbb mov int in jecxz xor (bad) stos mov sti in pop add iret add push notb add fbstp jb lds jo incb push test popf dec cmp xchg test daa inc outsl add outsb mov sbb lods sub pusha negl addr16 cltd mov ja in add sub dec xorb pusha mov add pop das dec dec xor stos add sbb cmpb icebp js mov sbb or fbstp inc out push jg cmp (bad) lcall aas or push xchg insb cld add add repnz cmpsl pushf add mov add and mov add test add rolb call ss mov add cmp testb inc daa jl test xchg pop lret (bad) jb add pop cltd or (bad) cmp xorl arpl addl mov scas outsb movsl cmp in sbb jmp lahf and insl or andl xor pop or xchg push add push jnp mov xor mov mov xchg jno cmp sbb mov aaa outsb push addb mov mov add mov push imul insb xchg cmp push fwait pop or sub add add scas jne sbb mov mov mov bound cli fiadd push nop add pushf mov ljmp pop push jne cmp mov outsb setl add push iret aas and testl stos mov scas lcall xchg (bad) cli mov mov dec (bad) xor and mov shll mov in movsl andb mov ffree sbb push mov dec popf dec inc jg iret add sbbl sbb popl aas shrl cmp fwait add lods xchg cmp mov sub sahf dec cs inc popl mov fstpl je add cmc push push mov and dec lods fnop dec icebp add pop fwait dec and and js outsb es jle push test xor mov pop sahf pushf jp test repnz sti lds xor pop (bad) mov inc pop add in mov out rol cli push test mov lea add in adc enter stos sub adc mov (bad) jle add aaa repz iret mov stc rclb add das push xchg or push add mov mov leave bound push das inc loopne outsb sub add loope push sahf mov insl shll mov les cmp jle add push idivb lods and inc sti ljmp xorl pushf add stos pop cmpl cmc xchg jo,pn fsts rorb les inc out push sbb scas or cltd jbe sbb mov ja add lods hlt dec add (bad) jl add sbb jp stos insl push add sbb inc xor sub mov leave ds xchg int add dec push inc mov mov fild push adc xchg sbb in jg add popl orb mov sbb (bad) cmp in sub and mov mov or mov loope mov jne add mov adcl pop sahf subl mov movsl xorb fcomps or testb cli pop add dec inc ret sbb rep int3 push loop cmc pop je lahf push mov pop pop lcall mov and pop popa inc inc outsb jo cwtl xchg addr16 mov stc sbb je lea cld sub std add cmp xorb outsl xchg aas dec popa (bad) mov stos inc xchg push loope adc sldt pop adc add cmp (bad) mov mov outsb inc out add xlat test (bad) cltd clc fnstsw push adc jnp jns test mov add pop xor pop orl cmp mov xlat adc dec add insl lock test push xchg out (bad) out mov mov movsb repnz push lret clc in enter add cld adc pusha mov nop rcrb popa xchg jmp das lcall inc pop sbb add mov movb sbb and psllw addl ret pusha decl mov push push mov or add idivb add sbb lahf pop fmuls inc pop xchg ds add xchg cmp xlat repz inc imul mov push dec pusha ljmp repz fimul scas pop sub rclb frstor loopnew or or jne lods (bad) cmp mov (bad) and jbe in add ret outsl fisub popf sub xor mov xchg cltd cmpsl int mov es mov lcall insb jnp push push in add add fistpl add cmc sahf dec unpcklps loope (bad) add test jo xchg push xchg loope bound xchg add dec rolb rcrl insb jo int add and test cmp out dec pop das jge call jp ss out lds inc popf dec int into aas pop add inc jg out xor xchg mov add sub sub dec add loop mov add mov ds add ljmp mov add int3 adc gs sub push rcr rclb jle movl fiaddl adc dec sahf cmp mov push lock push jbe popl push inc jecxz add aaa push sub jbe cmp add mov lods cmpsl mov pop mov testb mov pop mov enter sub pusha test ljmp fisubrl dec add xchg add je and lret mov lds adc lcall in leave inc adc and add lea cmp push xchg stc push (bad) repz out mov add sub add popf cmp lret xor add mov add xchg sahf enter orb in sti pop mov inc add xchg add pop jbe sbb pop pusha push sbb sub divl int aam cwtl clc xor rcrl mov dec jae mov scas inc pop push les dec mov in and or imul nop add mov pop xchg add cwtl ds pusha cltd xor add je and insl mov cwtl and inc push cmpsl es cld cmc add adc pop mov or pushf and and mov jne and mov fnop loop in movsl sub ljmp xor sbb jge add push cmpl cmpsl jle lods add lock xchg cmp mov out out mov ja jne popa sub push add xchg adc add pop and (bad) mov jle push cmp fsts sbb (bad) push dec sbb inc ret sbb pop mov pop loopne xchg adc push adc repz pop pop add add sub scas add mov xorb and ljmp in mov adc pop inc lods mov jb add dec and cwtl mov cs add jne inc cmp add rcrl add push push adc sahf cmp fimul jg add cs add inc ret push push call ret cld cmp add scas loopne fistpll and decl mov cmp aas xchg lret adc and popf dec and jl inc add cmp cmpsl cmp add insb mov add movsb cli push pop jp dec adc in jae je sbb imulb mov das push dec dec cmp icebp add sub mov jns test mov mov (bad) mov add mov lds mov cmp notb sbb mov ror ja push add cmp jge dec xchg jl sbb sbb dec repz adc ljmp js nop cmc jbe mov inc clc pop add pop das xchg sbb aad inc and cmp popa cmp mov or flds xor les add loop stos add loope incb imul ss sub cmpsb add xor push dec sub sub inc add je test out cmp push sub data16 push jb mov addl inc mov aas mov (bad) repnz sub or xchg (bad) dec mov leave mov popf add add xchg (bad) sbb push mov js adcl jo out add lret xchg add sub push lods std inc mov add aam cld xrelease stos xor or or icebp or cli pop jg jo sbbb inc cli (bad) lcall push sub push add mov push add mov sub add fstpl push (bad) stc or ds inc mov add iret adc insl mov add arpl das jle stc inc add into (bad) lahf shlb scas orl cmp pop aaa add scas fcomp add jno divl or loope mov cld add int pop xchg or insb dec and inc in subb je out cmp adc faddl or add outsl ja int cmp add rcrb insb mov xchg xchg pop js (bad) stc pop loop ltr push scas mov inc shlb daa cmp adcl add push dec add cli xor xor inc mov mov cltd xchg mov aaa andl sub pop pop movsb push add cmp mov jo xchg test sbb or xchg or imul shrb sbb and add cli and add jle stos push dec jl add sarl sbb in jl add out sahf roll jbe fwait dec js add leave aam out popf (bad) icebp cmpsb in cld (bad) test add add (bad) add rcll xor xor lret jae add mov sbb ret imul jge add adc add push popf lea or mov jle data16 out ret push outsb or (bad) repnz addr16 mull add sub cmp jle punpcklbw push aas imul inc lea or and jns hlt lcall add in add xchg and mov mov jle sub movsl xchg add adc aas fimull push dec xchg jecxz xchg mov in add add int push jbe xor dec pop repz fild (bad) adc movsb cltd mov sbb dec (bad) repz add jge and jle and xchg add rcrb (bad) faddl inc and pusha adc and add nop xchg mov ja add pop fmull add ljmp jno sbb sbb and rdpmc mov adc repz mov xlat or pop gs add inc sbb jnp add pop jbe pushf jmp inc add push iret mov add mov (bad) and jns cmpb xor ljmp dec movsl push and add adc push add cmpsl jp gs loope jecxz and (bad) fimul cld pop push xchg movsl subw daa out jne mov ss inc dec dec fwait aad jo xchg movsb add inc jno imul (bad) jb dec mov add xchg data16 jne add sti dec lcall (bad) aad sarl add pop shr lods mov popa js shlb call cmp sti sbb test daa popa arpl inc lret lcall mov (bad) mov add das add pop jno inc test pop hlt push mov ret sarl roll pop mov int3 inc jns pusha pop lret or and or jge insb add sbb pop and cwtl add jg xchg add aam sub int3 inc and adc mulb lret fnstsw adc pop sahf daa adc ss pop or pop lea mov pop movsl imul cmp mov pop mov mov imul push adc (bad) fnclex push lahf in ja mov aam out or add and inc adc add icebp les and and sarb call push push (bad) mov push iret pop movsl add test lock adcb and ja xor adcl xor cmp out or add cmc clc leave and add mov aam push movsb pop dec xchg pop mov lods cli or flds std fwait mov add pop pop lret (bad) adcb and out imul pop dec hlt out mov movsl addr16 inc fisttp jb push or lret lock fadds (bad) and (bad) add inc push pop daa js cmp sub add add xor add xchg (bad) lret add in inc mov (bad) ds orb pop mov jbe and inc pop in add xchg inc insb lret jb mov pop inc xlat arpl pop add push dec push and test movsl mov testl jo cmpb test std clc xchg enter scas add pop push xchg movsb sbbl out rorl mov daa and loopne mov notb cmp into jnp mov inc in cmp add cmovae fcoms out add push frstor mov mov imull sub inc add lcall mov sub xchg mov dec mov dec mov push scas or dec add (bad) adc mov inc call ret jge,pn add dec mov iret sbbb add cmp mov cmpsb sarl in jl scas push out aas inc xor addl insb jb jmp fadd push xchg lds cwtl scas inc push aad and add stc loopne popa jge mov js (bad) lcall lods and ss jne push shr add dec mov push mov pop sbb lods sub xchg cmp scas sbb lock popf mov pop sub mov andl inc adc add add out mov dec add out cmp pop int3 (bad) dec push inc xor ret cmpsb jecxz sub mov out cs mov cmp add mov or insb inc add rcrl adc cs xor mov add jo and inc ja (bad) lcall add pop fs stc lock push scas mov loope xchg sbb xchg cmpsb or les jp add jbe push in das std jl add into add pushf add rcrb cmp xchg pop pop pop dec sti lods jmp cmp xchg into xor fnstsw xchg cmpsl add (bad) push pop mov xchg or rcr dec sbb mov imull in jo vmwrite int push jmp pop push or fisttpll insl icebp push dec push or xor mov add and psubw jne push mov jbe mov (bad) mov sarb jno or lods jae adc (bad) loop (bad) mov or sbb jmp outsl add fisttp fisttpll jne jns pop jbe push inc jg out push dec cmc lods (bad) add cmp cmpsl add mov orl es sub adcl cmc aaa test rolb pusha pop jne fs (bad) xor movsl stc lods dec pop mov xchg idivl hlt adc daa push add xchg jno sbb push pushf sbb adc cs add outsb les iret inc adc add aaa addr16 dec inc xchg orl mov mov push add hlt add js add les adc icebp outsl dec lea loope cmp mov and out cs push ret sub (bad) xor sub js push sbbb rcrl out xor inc jl mov cmp xchg mov dec jne mov test push mov push mov lret sub jecxz xor test in sub popf xchg aaa mov add iret in push add cld loopne stc cli mov (bad) add loope (bad) clc subl jg pop arpl mov test inc inc (bad) fistp or push add lret imul cmp add jnp dec add and add fisubr out pop xor negl (bad) insl lods pop in shr mov shlb xchg mov test inc jne push and sahf inc push add jg xchg sar mov inc add fs test lcall inc cmp fiaddl mov je jl (bad) jb cmp inc sub sbb incl or pop stos mov inc and testb mov test outsl and (bad) push xor sub cli add (bad) fidiv dec jno mov add shrb push psrlw fisubr push test xchg inc xor std add es adc and cwtl and ja add sahf jb dec dec inc add clc cmp add out pop xchg (bad) or mov sub lahf cltd lcall jns scas add mov sub cmc clc cmpsb sbb lret outsb test or mov cmp cmp loope inc adc and add icebp and dec push add and jle dec dec jb sub jle lea add push rcrl add arpl add lds push ret add and jle jae xor pop fwait lcall push add arpl rol out mov popa cmp sbb aad pop mov jbe mov (bad) push arpl adc aad nop (bad) pusha add repz sbb leave mov pop rolb xchg mov xchg test cmp add xchg add decb mov add xchg daa mov add bound pusha inc pushf cmpsb add imul add pop cmpsb (bad) testl adc in add addr16 (bad) and mov xor add or add enter mov dec inc mov scas test lock pop and stc andb aas ja in xchg jp nop jns mov jo roll pop movsbl jge aam es dec adc push imul divl mov push les das pop jmp incb add xchg jbe in cmpl and xor ret (bad) xor add sbb dec lea add std inc (bad) fisub outsl add ljmp movsl shrl loopne add cmpsl into iret or add mov push outsb repz dec or mov dec sahf mov (bad) push jne inc (bad) adc cmc inc lret sarl adc test mov mov repnz and add fiaddl pop (bad) (bad) cmp add fwait cltd loop xor inc cmpsl aad xor mov shr sbb jno iret and lds add fild mov xchg mov ja xchg add popf push jbe add enter add rolb loop and push push push outsb and jle inc inc push mov ja pushf jne pop or sub mov pop subb paddb and mov xchg pushf or inc sub and cmp bound test sub repz push test pusha pop add in dec mov subb sub and cmp or xchg add mov data16 out push add daa nop neg pop add dec out xor mov adc (bad) adc (bad) (bad) es or xor popa push loop out pop mov dec add movl pop aaa mov mov icebp (bad) movsl imul daa dec int3 xchg shr rorb (bad) ljmp fdivrs daa test sti jo fnstsw gs pop jne or add cltd movsb mov mov push pushf pusha ds add pop dec cmp xor xchg fdivrl imul mov add push repz mov lods and sbbl push int3 push out sub add popf dec or mov pop daa add add add dec into jecxz arpl adc pop out jae add pop mov jp sbbl jl int3 pop add aad lock inc xchg pop (bad) mov push loope pop je insb mov xchg lds into aam add arpl repnz fcmovnbe cmpb cli and jmp sbbl dec in jo cmpsl mov dec test cltd out lods cmp add push dec or jg ret push pop addl pop out jo jo cwtl aas dec add push jmp and pushf dec mov movsl inc pusha and mov push dec and pop add ja add popf fwait lcall add adc fmuls add loope mov das int3 xor (bad) xchg jmp add xchg arpl ficomp mov orb mov outsl add (bad) movsl sub xchg add mov jecxz add fidivr daa wrmsr nop mov cs lcall dec pushf push pop push loop push push add ficom leave push stos lahf add inc jmp nop scas aas flds fildll sbb xor stc js inc jb inc (bad) pop inc adc mov inc push cmp add fistl rolb loop (bad) loopne pop add (bad) xor dec or add sahf mov fistpll dec cmp sub les push add push sarb (bad) fmulp loopne mov xor nop int jecxz push sub ds lea push adcl dec jb lcall cmp mov cmpsb xchg idivl adc ja ret jecxz push cmpb jnp ficom (bad) mov pushf inc insb mov add pop inc or or sub mov ret or push xlat ja pop mov leave std push sub xchg cmpsl jle rclb pop add cltd adc add lahf jge hlt bound movb sbb lock jae int daa scas fwait push xor loopne mov je pop sahf jne add addr16 dec xchg jne add lods pop mov addl push imul lret sbb pop mov scas pushf outsl jbe add jb jmp imul sbb lahf xchg imul rolb aaa or testb pop jmp inc leave pop shll mov and mov icebp jnp arpl cmp add pop push fwait punpckhwd or stc mov cltd stos loopne iret jnp add sbb cmp lret jno rclb push pusha adc push fcomps pop test addl fwait hlt repz add inc test xor cs insl add pop clc adcb mov or addr16 dec push fildl inc add icebp test jnp leave pop (bad) in pop jno shl xor int3 enter and out das pop jle addl add lcall outsl repz inc and add in lahf add ja mov add (bad) mov add pop adc outsb cmp inc push cmp and movsb jmp ds pop mull pop mov add push sbb mov lahf (bad) js adc inc enter (bad) aad popa cmp pop add imul fwait xchg scas add enter pop push or cmp xor insl push xor js inc repnz mov dec cwtl add jg push add pushf ss xor js fsubr call jg pop enter sub push or imul mov test jnp mov lcall repz push aas ljmp outsb jb mov sub out sub add in outsb or pop (bad) push bnd adc (bad) leave xchg xchg add (bad) outsl and mov add dec or aas cli xchg push cmpsl inc adc push test les pusha test push addb xor pop aad call push dec mov nop clc adcl push jnp mov mov (bad) pop fwait mov andl cmp jmp scas dec sub mov arpl add notl pop mov sbb mov add add dec decb pop mov fiadd cwtl jl and mov xorl jmp mov imul jnp add ljmp xchg out add roll mov mov (bad) xor outsb leave lock loope test pcmpgtd xchg xor lahf movb inc stos jmp or push rorb add cli jb in rorl push imul gs xor lret lods xor sub dec pop imul aam int3 mov adc idivl fwait popf dec push sti pop add aas mov dec das xchg addr16 jecxz leave mov adc xor stos popl mov add add movsl and dec add xor and lahf pop pop les sub sbbb ret and js pop test cmp pushf int3 int dec and and sbb stc dec dec jl sbb mov inc jge (bad) fldl or xchg and push xchg add jns adc in cmp (bad) pop push ja add jo loop insl aaa add mov sbb std sbb sub add sahf in mov loopne hlt push push inc lahf rcr pop repz dec lret dec frstor cmc test push xchg (bad) inc sub jge jle xor sub add test pop pop fnstcw dec add jo mov mov pop xchg movsl add icebp es mov or ljmp xchg cmp sbb stos scas cmc add es sbbb test aas add dec ds jl sbb repz movb pop add jge fisubl gs cmp add ret (bad) insb add aas xor adc ja xchg out andb dec push str (bad) sub push sub out ds mov lds add xor add add (bad) inc shrb add das push push pop (bad) imul stos movsl cli jp cmp addr16 ds cmpsb sbb xor fbld cs mov sub add rcl adc push (bad) pop mov pop iret or jne imul xorb mov ss pusha sbb (bad) mov popa mov pushf inc dec rolb cmp aaa loop dec xlat push mov lcall mov lods add outsb mov hlt loope dec cltd addl inc popf ret mov xchg xchg jg cmp jl cmp mov test inc add mov es xchg sbb imul loopne subb lret push mov adc mov jp pop push rorb xor pop out (bad) sarl je mov or xor decb mov push insl pusha dec sahf inc leave addr16 (bad) push imul cmc mov loopne,pt rolb aas fs xor and call add cmp ret add add int3 test out test add lds jnp add mov cmp push add es xor cld ljmp out repz mov fwait mov sbb lods dec jle imul sub stos add sti cld shl clc inc push push scas roll stos or cmpsl sahf mov leave push inc add jecxz jno icebp add push mov das add sbb push rcl push mov jb lcall dec add jns xchg cmp add stos dec pop add jno pop mov jnp add or adc test inc fsub lods das add inc push clc outsl or and mov sarl pop ret (bad) sbb xor and inc add push mov sbbl sti pop aam (bad) outsb add fistpll outsl sub repz (bad) pusha cs loope mov add dec jo jbe loop,pn sbb jne test sti rcrl fnop movsl xchg add out repnz sbb cmp lret std mov ret cmp ljmp enter ja or add (bad) shll mov neg xor jbe notl cld pop jp and mov jno jns dec mov paddq fldl out mov hlt lcall (bad) lret sarl xchg and or data16 add sbb pusha (bad) pop dec or xlat std cmpsl out outsb imul mov jp pop roll scas lods jo sub add add add dec adc cltd dec add inc div adc and lret sub add cmp add ret (bad) jno inc int3 mov add roll push inc mov shll (bad) fs popf add inc jb and lret cmc js jnp jp sbb test lods push dec pop mov add (bad) jecxz (bad) (bad) xchg in aam dec jns pusha mov push inc or xor dec push add xchg orl mov sbb cli jp or scas cmp test inc add jo sbb imul ss mov jecxz mov insb mov add test mov and pushf push movsb jp dec sub mov test testl aaa xor ret sbb inc loopne add inc rcl call add not push push jns add mov lret lock cli jb lahf clts pop stc add push subb inc nop loop jmp pusha push sbbl rclb jl lds loopne mov insl cmp inc xchg repz mov xlat test ja jle or test lret push pusha xchg arpl jp pushf pop mov xchg lods fiaddl outsb pop and push aam pop add jns sbbl repz add cmpsb fwait mov call das pop hlt lea daa pop dec xchg dec ja mov xor (bad) cmc push push adc lahf lret andb mov mov ja add mov mov pop cmc xor arpl test lcall cwtl add (bad) pusha aaa xchg arpl cmp inc test and addl mov push daa mov ret jae cltd test and cld cwtl add mov mov xor cltd cld dec lods cmpsb pop faddl inc mov insb push dec int3 orl inc mov out add xchg fiadd xor cmp stos (bad) dec lret (bad) xchg inc popa dec xor add fdivrs pop push movb (bad) mov mov mov repz sbbl jle nop daa sarb mov jg xchg pusha pop icebp dec pop mov mov or es out or jbe imul mov xor scas lock enter dec add loopne repz xchg sbb add push adc outsl and push movsl or (bad) xor or add mov pop inc add push out aad add mov xchg add das loopne jae popf add xchg fsubrl xor dec cmpsl xor add js mov cmp push stos pop ljmp pop and xchg add scas repz add dec adc inc nop cmpsl orb (bad) sbb xchg sahf pop xor dec mov add cld or adc lock pop push and in push add add sbbb lea sti insb add jne orl jge xor push jb xorl psrlq mov (bad) adc data16 add and out popa (bad) mov push bound dec lcall stos sub gs inc push sub insl clc int jecxz cld cmc inc bnd add das or lods pushf je push fisub jge fisubl gs adc pop pusha (bad) xlat add cmp add iret mov addl mov test subl dec mov lcall inc push cmpsl add and add repnz add bsf add push push (bad) ljmp repnz jge inc jmp scas cmp dec popl movl in sbb jne add mov ljmp andb arpl cmp pop cli aas pop incb fadd (bad) add test imul pop ret mov out jnp iret mov jno out repnz call popf jecxz dec stos mov add cltd or sub jp push push adc jmp ljmp mov xchg jmp test add cld aam shlb add and sbb fisttp jo add mov icebp dec into sbb add outsb (bad) fs out dec out push andl add cli cltd cmp sbb and (bad) sub or lret add xchg or and jp in cmpsb add aas cld or add add dec mov add ficompl mov rolb sub lahf push mov mov sahf cmp add in (bad) hlt cld enter mov lods rolb sahf int test fbld adcl pop add pop movl pop add (bad) fild mov sub scas arpl (bad) repz pusha and je addr16 lahf add jns jl pop mov shlb sti mov cmp push stos or sti in xorl (bad) mov hlt mov add xchg lret dec shlb sub das fldl or push stc (bad) mov mov and movsb cld in insb jne mov add adc add pusha jp outsb cmpsl jno add fistpl lock sub loopne aas cmp jmp mov leave and cmp daa rcll cmp dec inc insb imul sbb mov fucomi jns add inc cmpsl enter sbb jp ss add mov sti xchg add pop or sub xor (bad) out jbe jb std adcb fbstp sbb add xor addr16 add xchg mov inc data16 cmp cmp dec adc outsl sub or inc and jge cld outsb add call adc test imul dec add jno (bad) jnp pop sarb imul dec xor pusha test aaa add fwait and mov inc add (bad) sti mov pop dec and (bad) pushf (bad) dec lret andl (bad) data16 and xorl scas xor les xchg fist add pop sbb (bad) negl sub fisubr mov (bad) fcoml (bad) pusha lock xchg aas adc scas fs cld pop pop xor sub lds mov cs mov jle js add in ret lods push push push and jbe or xor push insl push add lahf (bad) jb push sub repnz mov or mov pushf loopne xor push pop sub xchg jnp xchg ret sub into adc push outsl mov inc insl xchg outsb flds add push cli adc or jl dec jl jge lret push int3 out inc repz mov fldcw xchg sti add test or cmp aaa jo sub jns test loop pusha sub loopne pop movl add xor xor outsb aam dec sub fs popf xchg cmp imul test sub xor loopne or ret repz out pop mov mov xor mov bound add jne iret cmc cli insb lea sbb jp rcll jmp in sub mov cli sbb pop mov add aas fldt call cmp jmp add js sbb jmpw and add jle add xchg call cwtl or and rclb jno inc add addb adc inc je mov add and mov (bad) sti loopne and pop add repz add cmpsl lret into jg add rcr loop xor subl push pop daa jl std sarl add fimul sub daa jg xchg scas pop mull add sub dec cli adc mov cmp and aam push jg mov cmc pushf mov (bad) or clc add inc add and pop mov pop adc cmpsb adc imul and fadd lahf xlat or add loope js in out pusha adc int xchg scas xor jo push cmp pop fistpl pop mov add (bad) add repnz dec (bad) stc push mov pusha adc xchg (bad) and test icebp pop out sbb jb pop addb pop jb das pop lahf jbe xor push mov cmpl popl loop pop lret imul sbb inc mov (bad) mov out add insb or or fldl in inc pop and sbb sub pop push test jae out sbb lcall xlat add movsl add sbb jl push cmpsl sbbl add jb sets jp xchg lods pop sub inc loope add outsb fist mov movsb jl add incb add (bad) lock mov cmp xchg add mov icebp fcomps mov (bad) test pop dec sbb or rcrl jb pusha xor test and cvttps2pi dec add push xchg cs lods cwtl js sbbl push insb or add jno mov mov add cmp jp (bad) push dec cli cs add adc scas ljmp mov rolb ja popf inc dec fs or testl lret loop pop aas enter inc sbb popa cmp in test es jle sbb icebp jae test je sahf add sub data16 inc movsl jg and insb pusha inc ret xor inc add cltd ss pop popf xorl nop xor mov js mov aas jge add or add push push lcall aaa xor gs xor mov jo lret sbb insb dec push sub adc jg mov fs (bad) je sahf aad (bad) xor fisttpll xchg adc loopne dec movsl inc sbb xor or daa sub sbb push xor sub mov cmpsl andl dec sub add xchg jno pop sub add cmp adc push bound sahf jno inc jle xchg test in test cmp pop insb jl jecxz or sub add pushf pop adc inc leave bnd add sub adc add xchg add mov or jnp adc add mov adcl add cmpsl cmp movsb add sbb es add (bad) xor add mov das imul lret popf xchg sti pushf lods nop pop cmp add into negb push xchg xor add inc pop sbb mov adc out and and pusha sub je daa shl cli mov jle outsb imul scas xchg push mov cwtl lock cli es add jmp jmp scas das icebp arpl push and insl lods ds add sahf repz or dec dec add mov paddq ret shll cmp pop (bad) (bad) and jbe mov sub add fidiv cld jo std push (bad) and xor jne add iret cmp mov add loopne out adc adcb scas shld fldcw fs incl xor mov mov pop add ljmp or inc xchg dec add pop ss test mov aas pop mov jns jno or out jb and and push inc clc add stos dec test stos cli cmp fisubr dec icebp outsb pop stc add call xchg or push dec imul shrb xchg add cmp dec lahf and add pop lret or push cwtl jge or and dec xor add cld lcall jne sub insl js lret xchg sbb jp arpl adc out into xchg lock dec and jle xor int mov pusha cmpsb std inc out fmuls or sbb xor xor xchg mov mov xchg sbb cltd jg xor into add (bad) test hlt xor xor push dec clc add cmp daa cmp mov out cs pop mov xchg xchg jb mov add xor xchg sti sbb loop clc ss lea test cld inc sbb icebp scas add stc push mov inc aaa push adcb cmp jp cmpsb add xor lahf test ja (bad) stc pop fbld out mov pop adc xchg lds into add push xchg sub mov (bad) and add sbb fsubrl push sbb hlt xor mov add test sahf add add adc or test add ret leave mov andb sub pop cmp inc add popa mov add jle into (bad) loope add fldl aas int pop adc loop (bad) rcll add sub iret in je add sbb push add js or sub jge add sbb pop (bad) mov ljmp clc decl iret add mov mov xor aad pop mov dec pusha or mov xor inc int add mov adc (bad) mov js lods outsb mov in daa dec xor rcrb adc mov or cmp cmp inc and add lea dec stos test scas mov rclb arpl lret addl test and cmpsl cmp pop pushf mov in pop add scas mov push fisubl cwtl jle lret jo cmpl sbbb lret inc fs ret mov (bad) mov cmp imul arpl sbb (bad) sub mov add addl xchg stc xor or cmpsb mov loop xchg mov jae pop lods inc lds jns cmp push hlt or inc bound loopne mov push iret or sbb out xor xchg test mov xor std cmp dec movsl or (bad) fmull add sub push cmp add xor loopne push sti xor sub (bad) stos int add adc mov lret add pop pop icebp xchg rolb (bad) iret test pop movsb xor xlat dec mov inc sbb mov sbb add mov cmp mov push in adc xchg xchg sti lock or ljmp imul mov fwait mov xchg mov adc (bad) stos jp xor mov or and aaa in nop xchg mulps add adc push jo int add ja pop aam pop cmp call idivl pop adc xchg add adcb fs bound cmc add imul add into adc add cli pop lds loop push fimull ret push add movsb adc divb jmp out pop (bad) pushf lds xchg roll mov fdivl add inc leave pop call out mov mov repnz ja xchg jg movsl jo sbb mov leave (bad) fldl (bad) into in (bad) repnz idivb ljmp ret add cmc ja adc mov inc add into outsl lcall xchg add pop xchg insb mov mov mov cmp xor in adc jbe pop mov add or xchg inc mov mov mov adc stos sub push mov mov mov call clc add cmp jae hlt add mov inc add xchg mov incb mov jnp and cmpsl mov add rorl js add mov fild cmpl push test stos andl pop adcl pop jp das repz out pop pop imul roll jg mov xchg mov and cs leave andl movsb mov jb ret pusha dec cmpsl iret push mov add fisubl jne add push out ret (bad) (bad) sarb in (bad) inc fisubr mov ret push mov inc je lret inc add (bad) repz mov jle push lds (bad) jno imul (bad) mov std cmp call mov scas cmp jo dec movsl sub push mov add sar stos int jl (bad) scas cmp push pop test adc stos inc mov mov add ss and push xchg adc sbb js xchg xchg xchg aad fwait jbe jge mov sub xor push fcomps cmpsl sub or mulb mov mov pusha add xor loopne jmp sub xchg movsb adc addr16 jg stc jp cmpl fcomp test add mov gs fildll das mov lock stos cmp add mov repnz addl cld mov stos mov cs add mov nop andb sub pusha sahf lea sub inc or daa add inc loope sub int xchg add leave lds or dec add insl js (bad) dec outsb pop cmp movsl inc add bound or cmp addb pop push jle sbb ret mov dec loopne cmp (bad) dec mov psubd mov mov pop incb in ffreep scas and mov dec subb jecxz rolb pushf jb push add inc jmp or pop mov push xchg mov (bad) rolb add leave add or xor inc mov sbbb push push cmp addr16 nop dec jb pop add pop ja fwait repz xchg icebp inc lods jo sahf sbbl pop pop add in inc mov ljmp sbb or inc xchg nop mov add xchg icebp mov mov popf ds jae add clc add jbe push xorl push sbb pusha pop cltd gs in sbb fwait outsb mov and xchg out lds fs fistpl (bad) mov xchg decl push lods dec xlat add jge cld ljmp add leave dec fiaddl add mov (bad) adc xchg inc andl sbb mov pop mov loopne add jne adc (bad) pop es subl popf sub jno xchg addb xchg cmp mov dec jnp pop mov pop aad ljmp add jecxz and mov mov cmpsb dec dec loope add jmp in push subl mov cmp add (bad) and mov xchg or shrl orb fildll (bad) rcrb loopne roll add jnp cs pop mov lcall add pop movsl sbbl and pop fbstp jnp jg push scas mov push add xor (bad) fsubs fwait mov and mov mov sbbb ja sbb in into and pop lds mov outsb xchg out mov add dec jg fstps dec movl xor add loopne cmp lds jp,pn dec imul jg mov (bad) xor sbb pop faddl ss call fimul or cmp add (bad) add fadd fs inc xchg add cmp imul pop lret xchg (bad) in outsb out inc cmp add js fsts add mov cmp xchg jne lock icebp jle roll cmp cmp mov and in inc jmp lock test and pop push cmp addr16 mov cmp scas jle aad loope into orl mov or aam dec add push inc mov cmp mov xor add sub and dec push sarl jmp mov mov outsb add loopne cmp add sti add lahf movsl push cmp rcr push xlat jnp andb addr16 or add xchg xor leave push sarl push jmp ja pop add enter imul mov hlt mov mov bound add or iret call test loope imull add cmc mov jg dec dec pop xchg out incl test pop pop jp nop add leave mov addl fsubr add sbb pop sub dec push xor je fisubr test add test dec ss jg,pn and xlat add lcall daa cmpsl inc jp jecxz add adc add rclb (bad) pop cli add lret adcl ljmp sbb add ret in outsl or jmp loop push jno xchg mov lret aam lahf sub pop mov mov ret jns add push ja,pt xchg or cmc xlat mov jecxz popl sbb push in jbe push dec add inc lahf subl mov mov or pop test sbb dec clc lret rcrl pushf pop test or adc sahf add sbb mov xorb or pop jno pop movsb notl ljmp mov add addb xor push add mov and gs dec push add push ss add jp dec pusha push mov jbe or mov add sbb dec add dec stc pusha mov outsl loope mov dec mov pushf test adc lret or adc sub mov push lret push or add cmp or xchg jb add out sbb mov call mov mov xchg stc inc sbb add adc mov leave pop sbb (bad) mov jae xchg cmp scas add jg lret call inc mov iret pop xchg ds cli (bad) push cmp loopne mov rep pusha and add or fsts xchg rcll jo rorl mov mov mov or pop add push or andl dec js movsb add (bad) gs inc sbb push xchg pushl cmpsl outsb add cli data16 cwtl stos inc add cmp add add jnp inc repnz lods ret lahf add addb push xchg or dec scas jecxz jle test fmul pusha inc push insb add pushf daa push add sbb sub adc stc sbb add fstp and xchg xlat push lahf add mov inc and ret cli fistp loope xchg ret dec lahf dec fnstsw sub sbb lock jbe (bad) je test pop add aad cmp jb add nop sti jmp and ror push mov sbb jmp add stos int ficomp add jge aaa cmp add mov and adc xchg pop into jge add adc repz mov and add aam cmp add test jecxz lret add sbb int3 hlt add jl ja sbb fwait lock loope aaa add fsubr clc pop test xchg mov sbb inc add rsm xor (bad) push push lock inc (bad) jno (bad) add inc in inc int3 xor test pusha and stos outsb push insl add in sbb xadd decb scas pop popa cltd jb push add clc push xlat iret fidivr add pop jnp inc adc mov fwait sub test enter push ja cld add les ret das jnp incb lods cmp or pusha adc add cmpsb (bad) (bad) gs lahf rcl adc cmp frstor mov idivb js push sbb test pop xlat cld orl jl mov jecxz push dec xor insb clc mov lldt out and or mov dec in push add jne or mov fcmovne mov add push ss cwtl out add int sub ja dec repnz icebp fdivl mov sbb xor outsl push addb pop sbb es cmp sahf push mov lret (bad) enter in add es jb jno xchg repnz lret mov push ja add jl setge add rcll addl pop cmp mov add inc dec inc movsb (bad) mov mov in clc cmc popa jo xchg aaa mov push imul mov push xor xlat scas data16 clc jge push sbb lret inc adc xchg push lcall (bad) loope in bswap add pop push push mov lcall pop cli jbe xor andl fs daa add pop lret call add jo sbb out jnp pop and mov lcall mov add and andl inc js xor subb mov sub nop and fimull shrb es adc adc xor sahf lahf icebp mov or (bad) xor test pop fcomps push cmpb dec inc bound pop dec add rcrl dec xchg push les pop adc popl or (bad) mov xor adc adc inc mov cmp std pusha pop push mov add call addl push mov jge loopne jae adc lcall push jns and add fmull and and clc das std mov sbb xchg mov add cli adc shrl sbb push orl cmpsw dec leave lods mov or stc test es loopne mov xchg aas mov add jg xlat push fs sahf xchg (bad) xor xchg lcall push aaa cmp fistl add mov jne sub push add lahf mov xor cmp adc and in lods pop notl imul pop sub rorb stos int3 mov xor dec movsl inc and cmpsb std (bad) bnd lock lea ja cmp add mov fdivrp int add add sbb or xor push shll andb jg test add and mov push popf rcrl add leave lret repz add lock sub (bad) hlt mov cmpl pop xorl mov pop inc xor sbb sbb mov fisttpll and cmp out adc mov jns rorb adc incl xor leave in xchg and data16 and mov addr16 shrl xor lock add pusha in lret fwait push cmp or push fs test mulb jmp and pusha mov xchg add scas xor mov add push dec add cmp mov sbb cmp inc cmpsb jne push sbb mov popf adcl xchg add mov iret lret add das icebp add cmp add cmp sahf xchg mov aas inc cld mov fiaddl nop mov xchg cmpsb add mulb inc jae add sbb inc sbb dec add dec test sbbl push adcl imul dec inc rorb add lahf ja add jbe xor add ss pop lret inc push add in jl scas push jg push adc mov leave out mov adc and lods add jae and mov scas nop inc push push and add lahf add pop lea add imul add movsl mov sbbb call and add scas dec imul inc jle xor fs arpl mov inc push fsubs das cmp mov jne and jmp lock mov cmp and mov sbb dec mov lock add fisub dec add pop jae dec outsb mov mov jbe add xchg dec es popa inc pushf dec insl jg mov add in pop or pop js add add out add add add out dec push sub pusha sub inc pushf (bad) aad cmc jbe lret add adcb jl push add popa mov adc inc pusha adc or jle xchg addb add mov inc pop sbb mov jns sbb mov push add mov rolb dec jmp push and scas iret dec mov dec sbb and outsl cmc imul enter or add stos add idiv jno ret jge addl ret adc call pop sub scas out (bad) sbb add add mov cld call loope (bad) pop jl testb jp out push xor fstl pop pop out jbe cmc add jecxz lret inc lds add jg xchg add sarl addb sarb cmpl or sbb push aad mov sbb cmp sub cmpl or add cmp scas sbbb push mov mov cmp bound ffree and xlat cmpsl push sbb lret mov gs mov ss jae fcomp add sbb jbe jecxz (bad) or pop popf xor std dec and cld rol stos insb add add sahf pop (bad) imul add lea or push gs xchg add int mov or lods fstp inc punpckhbw lahf and test mov mov pop push add int xchg xor add ret add adc fnstenv add daa mov sbb xor push pusha sbb xchg push aam rolb and push mov pop xor cmp mov cmc add rcll (bad) bnd add jnp inc in clc add (bad) arpl xchg xchg or pop ficompl orl pop leave add insb mov add xchg cltd mov add ds pop nop jge sbb mov dec or aad xor mov push or add test and js aaa int pusha rorb es add push in (bad) cmpsl xchg sbb push popf inc bound pop shlb popf in inc cltd or add gs test cmp cmp add sub mov pop imul lcall rorl mov adc fs lret cmp mov mov jnp and jo call shrb dec add or mov je sbb pop mov sub call jo pop add popa scas mov xchg jne cmpb (bad) xorb jp and and ja mov xlat (bad) sbb sbb cmp fadds mov insb nop arpl add fnstenv pusha fscale rcl cmp add dec leave incl call movb arpl sub jb (bad) fs and add rcll xchg dec mov (bad) or mov push xorl add ss adc xorl out mov cld or mov or sbb lea popa mov inc add dec rclb jno push scas xor xchg fstpl dec inc push jbe xchg cs orl pushf ret adc add xchg lret dec rolb push adc (bad) xchg popl pop (bad) or sahf xchg ret push dec fs adc push das (bad) mov dec add mov repnz out jne add pop sub cmp fildll ja mov add xor andl inc xchg add enter cmp std sub add ljmp mov and mov xorb jle cmpsl add xor inc inc or arpl pop (bad) adcb leave cmpsl mov (bad) call mulb push add bound add (bad) xchg add or mov jmp mov out (bad) add in cmpsl jbe lret out jnp mov jnp dec jp das sub pushf mov fisubl xchg cld out xchg sbb jl add int3 mov mov pop std add out imul add int3 xor dec fimul jecxz or scas (bad) lds push pushf dec stos sbb cmp push jne add lods cld or add adc jne inc (bad) sbbl in dec push rcll mov push pusha in jb push and mov test inc fildl loopne nop js aaa flds test jo jno add inc mov pop add jnp mov mov add scas movsl repz sbb cmp in cmp cmp popa push icebp outsl mov jle xchg data16 cmp and xchg mov push test dec xor (bad) fdivs xor push xchg pop fwait das ret dec jbe arpl rol jecxz mov add cmp add lea jmp pusha addr16 jmp add xchg inc js cmp mov (bad) cmpsl fisubl add xlat push pop ds add insb mov add push enter fimul mov mov push push cmpl fwait stos and mov push cld (bad) xor stc cmpsb roll sub pushf add test sbbb sub or jge scas stc mov mov dec gs cld push mov rorb idivb mov roll push call gs cld arpl push mov xchg add xchg mov mov sbb adc dec scas mov fwait ds mov std add cmp (bad) in sbbl cltd into in mov sbb cmp jmp add dec add mov loopne sbbb mov rolb and clc negb inc lret inc jns jp test stc shrb aas xor in (bad) (bad) popa cmp inc sub sbb test dec add add cmp add pop xchg add mov inc mov pop mov add loop fs xor adcb sbbl jnp pop sbb mov (bad) sti sbb or pop fscale xchg add xchg cmpsl cmp mov incb jne push xchg xchg leave dec pop pop jg lahf xchg and push and jo xor lds push idivl xchg or lea clc aam (bad) jb mov add inc loop sub lock lods int add enter sbb mov test add popl xchg rcrb fidivl movsl or andl stos out mov inc xchg jnp dec dec sub movsl xchg sub cmp cmc sub and inc jnp scas dec add sbb movsb lcall push shrb pop lahf mov inc inc mov ficomp jge sahf inc fs jecxz test or lods lret adc clc outsb cltd mov add push (bad) push adc inc das iret mov add pop cmp and xchg mov inc push mov vpandn sbb jbe and or cli xchg add in addl mov push xchg gs xor push cltd or loopne mov add add idivl je add pop test xchg sub and rol mov roll inc mov sbb in mov data16 pop add ljmp mov mov and push stc call cmp out insb pusha jno lcall pop xor push add out out (bad) xchg jno (bad) adc ss xor addb xlat jmp add ds je cmp mov lcall pop adc fwait push into sbb orb cltd outsb mov negl push inc push add or mov cmpb jne push int3 adc mov cmc out ret mov cmp fidivrl jp and pop adc cmp inc xor jp add pop add dec das dec add out adc lds or push add insl loop in mov cmp neg jo inc adc sbb mov cli mov sbb mov loop inc aas daa sbb xchg in andl jne pop ret sbb cmp add xchg (bad) mov add or add add inc or iret pop dec jecxz mov mov popf cmp pop imul mov sbb dec lcall sbb (bad) jb in or xor mov sbb jg out push mov mov (bad) fnstcw add test cltd outsl cld test jbe (bad) sti lahf stos jge jno add pop sbb mov add add jae jl or add pusha sub in arpl xlat pop mov cmpsl cld inc inc xor adc outsb movsl ljmp fwait cwtl int3 cltd fnstcw divps pop mov repnz stos add ljmp lret andl push push movsb adc push jl pop pusha mov jae push add and xor add cmp sbb add jmp ja pop pop fdivrs cli mov xchg add push cwtl add into movsb incl push add adc add xchg (bad) int3 adc jno mov dec mov xchg sub stos enter hlt in shl mov call cmc ret div cmp ljmp and add lock iret movsb mov dec lods xor inc cli clc add push stc outsb push and xchg out jb sub add add or mov fistl (bad) fmulp mov cmp add push ja add popaw fildl sarb mov mov mov add (bad) xlat scas sub negb pushf mov pop jmp mov cmp or cld xcrypt-cfb cmpsl and iret dec add call mov in aad rorb test and xchg and pop mov xchg movsb cmp mov js icebp jae verr dec push gs inc inc pop or shll adc int3 in (bad) in rcrl xor (bad) push or roll inc jbe jb imul js sbb cmp xor add jo inc imul pop xchg adc push adc adc ret add xor in push push mov fidivl fwait cmpsl aas push add nop mov add sub inc add jae stos es add sub mov add mov dec inc add push mov mov add adc leave aaa adc add push addr16 in add pop mov xchg (bad) dec cltd addr16 sahf (bad) sbb push cmc xchg inc ret js fwait dec add mov mov and imul jne add lahf push mov jbe sbb dec push add cmp add xchg push add ja ficom and (bad) in je mov add ljmp lcall push sahf mov andps inc in test push mov les inc adc fwait cltd sbb and aad sarl mov add xor xor ljmp cmp and fldenv enter push add pop movsl cmp test jle (bad) mov cmp dec lea adc jnp (bad) std cld add ret scas adc decl (bad) jbe dec loope cltd xchg add aaa jo rcr pusha imul fcmovb add push sub add or add dec out add jle sub add scas pusha xor xor mov sbb sbb shl pop dec out xor add enter stos jb or in and mov add mov push jne sub add sbb iret inc jg lods mov xchg mov psubw test mov pushf and push pop aas xor pop mov mov jne pop push insb push enter (bad) push addl push add dec cld out add jo mov push xor insl loope sbb sub jp test jecxz cmp sbb jnp jg and add push lock fiadd les or fisubrl enter push fsts xchg ss mov fcomps (bad) mov fs daa sub add pop scas add call and test sahf loopne cmc or and (bad) bound inc lea pop or cwtl js sbb mov mov cmp mov mov cs add jl jo xchg incb xor cmp pop add rcr add das xor lods rol aam dec push and clc pop xchg add addr16 enter or mov outsb cmc pop pop push mov mov popa xchg adc add imul sub and vandnpd jae add sti dec imul fs adc cmp (bad) xchg ljmp addr16 push add adc jl loop fldl movsl sbb jbe add subl cmc and sbb xchg add jne loop jl add fcmovne arpl fldcw xor and add adc inc mov and push cmp sub or push dec lahf adc inc xchg call and outsl fcomps jecxz push adc add mov add sbb mov fcoms mov xchg xorb mov mov pop movsb sbb sbbl or add dec sbb xchg ficompl (bad) mov add mov xor sahf adc scas xchg xorb mov fcmovb mov add inc push lret pop arpl mov mov in cld pop data16 jp jae add insl push lahf mov adc andb jmp gs jle or xorl in pop int3 aas in xlat (bad) cmpsb arpl inc cmp ret adc andb xchg loop mov jo add xchg je les xor out lock xor clc test jno xchg push sbb inc call mov xchg adc pop rcl mov adc jmp js mov ret add in cmpsl add xchg movhps mov pop popf add cmpl push fadds outsl push mov bound lcall mov mov pop push lret sub repnz jns cmp stc es xchg dec decb sti aam sub testb outsb xor jo sbb jne fistpll inc xor sbb ret mov mov ss ret lods add rcl mov dec xchg jp add pusha inc enter cmpb rcll push xchg test stc pop rclb outsb pop add inc mov test nop lcall lahf add adc push (bad) repz add push push jecxz push jae mov pop pop add lahf push xor jg cli int3 sahf fisttp lds hlt daa adc cmpl lret dec inc mov jns add sbb popf push in rolb dec fstl xor sbb pushf fdivs cmp mov cltd xchg push ret fsts jo pop stc xor push jae mov out dec jecxz les mov add in test cmc int3 mov popf xorl or out adc xor cltd cmp add mov and add (bad) sub stos out and cmpsl push xchg stc cwtl add shll add pop sbb shrb xor mov clc out and aad cmp lods (bad) pop out inc test dec lock enter pusha in and sbb sbb lds push cmp je add stos xchg jp int3 call orl in sbb lock inc xor cmp jo dec xlat mov addl inc call push add lods inc cmp in lea sbb (bad) push pop sahf pop push inc xor inc sbbl inc dec bnd adc ds dec and add or jl gs stc arpl pop cmp stos outsb (bad) push xchg add sti mov movsl add sub imul add mov jb jge subb jo aaa rcrl sbb add fimul mov or cmpl xor sub imul (bad) mov icebp fucom sub jae jo movsl movsb nop test push cmp je sbb flds out inc das (bad) bound mov pop xchg ss add (bad) (bad) ffree jle adc addl dec scas dec push add inc or add cmp loop into sub mov jns mov sub sbbl hlt lea jge mov xchg daa mov push mov fdivrs xor xchg pop xor add arpl cli xchg pop add add int add (bad) cmc stos mov popf push sahf ds cmpsb sbbl inc ljmp fwait mov orb cld push push stc mov ss inc jmp add inc outsb lods out in mov xchg jnp mov aam add enter dec lret rorl scas add lods adc pop jge and add cmp inc push mov push int3 inc das pusha insb hlt sbb popa lods cmpb fcmovu adc fs add sar sbb xlat shr or int3 addl gs add adc dec pop in push adc imul fiadd sbbb out jno add dec cmpsl out push push das jle pop mov lret xor jecxz add popf lods push pop mov or das jo test xor push push fldcw push dec xor cmpb sub pop mov jp rcrb ret pop cmpxchg lret mov fcmovu push fwait add mov push inc inc lcall add lods inc ds push mov ret pop mov in inc jo sub sbb add adc incl lahf pop add dec mov sbbl stos mov and mov mov add daa or inc xor in cmpsb push jg bound sarb mov flds repz repnz sar add es movsb das push andb cs xchg or jne xorl inc pop out jae pop clc mov inc lock je data16 fiadd aad or inc cmp cs (bad) cmp aaa add fmull sahf gs inc dec mov or scas nop mov xchg stc in push push (bad) scas lcall clc jge sar in inc pop stos mov (bad) stc adc into mov cltd in je aam add xchg xchg sub or scas cmp sub sbb add pop xchg iret out negb add cmc int pusha adc add shr lods sub add adc lods add test jae xor dec aaa add ds push add dec or adc out mov cmc push shll into sub push lret xchg hlt cltd sbb fidivrl add (bad) clc (bad) adc jb (bad) add fwait adc sub push popa xor cmc sbb sbb pand push push repz and push loope ja xchg (bad) cmp dec subl mov (bad) and pop dec cmpsb or lea pushf lock jmp xchg mov sbb pop lods cwtl addr16 xchg aam xchg sub mov std jmp cmp push add mov inc test xorl negb dec in test movsb (bad) (bad) hlt mov and mov faddp add in movsl shrl insl add or mov lcall (bad) mov cmp adc in pop cmp pop mov jl fs mov lds arpl jmp (bad) and push in jo or and (bad) xor in mov (bad) inc sbb mov xchg push sub inc inc jp ja mov inc fild and push cmp cltd mov jo push add pop arpl add jmp cltd leave push lds pusha cmp sbb add stos xor jg xchg xlat jge jo repnz imul add lds mov push pop cmc fbstp mov stos adc xor ret jno push pusha lcall arpl pop stos add fwait mov in test adc inc mov xchg enter push xchg push xor mov inc repz jecxz mov add cmp jp jno cmpl adc pop stc add push push outsl lret push add shl aam push loop pusha (bad) daa dec (bad) cli repnz dec jle mov add lock fisttp mov rclb (bad) mov fiaddl pop push adc (bad) rolb loope psubsb rcrb add nop pop lds loopne inc sub adc push (bad) cmpsl sahf subl sbb movb rol sbb cmp adcl dec pop jle test in add fbstp xchg (bad) or add sbb pop repnz xchg scas jo mov add adcb mov lds aam cmp lahf pushf ret adc sbb mov cmp jo add pop mov std inc cmp or mov into add inc push sub gs mov (bad) rcll mov and sbb bnd add jo into cmp dec xchg or (bad) mov adc xchg hlt mov popa sub mov add jb adc rorb pop scas add cld mov pushf subb cli mov movl mov sbb or lahf outsb jb (bad) daa sbb popa lcall std adc jne or lods add push mov xchg insl inc xchg inc add stos xor movsb xor sbb jl aam rep cmp lods pop jne mov jecxz and push add xorb and add pusha popa int3 pop call xor js jbe sbb inc dec lahf lret in or jno xchg mov mov cmp out in aam add xchg jno sbb fs pusha xor push cmc repnz adc jnp add pop popa mov insl pop insb ds and mov insl fild pushf mov mov repnz inc cld or (bad) jns add pop mov (bad) xor xadd add push movsb jl lcall pop jecxz inc aad cmp dec testl mov scas rorl xor aad sarb add xchg mov add mov mov fildl lahf push icebp insb popf push add pop mov sbb push dec sbbl lret (bad) add inc flds rcll cpuid push cld sbb pop or (bad) out add adc sub in push push cs pusha xchg add movsb cmpsb mov (bad) sub add cltd or add inc lret shrb lods jmp add xor orl sahf add jmp add pop gs jne out mov jge adc (bad) sti sbbl sbb fwait pop cld add add out inc ret (bad) std add cli or mull cs xchg sub test dec xchg mov je sbbl aaa pop enter data16 add out sbb jae sahf loopne fidivrl ljmp aas add jne popa stc pop out outsb cmp adc popl roll fwait int sti push mov mov inc adc aas add push xchg inc out pushf ret cmpsl sti mov lea cmpsb (bad) pop std jp je cmpsl cs push mulb dec jge or hlt add mov add jbe pop cwtl (bad) out xor add inc (bad) mov orl pop out mov mov add push sbbl mov inc xor inc mov sub popf in add mov (bad) mov add and lcall sarw lret inc or scas mov mov (bad) mov mov sub sub add (bad) sbb dec or test mov bound and ja jo sbb imul loope sbb sub xchg stc fldl cmp add cwtl aas sbb jno add rcr (bad) add push lret fcomi (bad) xchg out (bad) jmp or and daa imul jo aas incb jmp and out les insb jmp sub jl adc add xchg mov xchg mov inc (bad) pop push cltd rcrb push rclb sbb in imul int sbbb adc loop scas adc in xchg je aad sbb in push shll push mov imul xor bound adc inc lock add stos xchg add or push sbb dec add fdivs data16 or sub aam add ds nop data16 mov xchg mov repz addl out inc outsb ss std call jl lea daa mov cmp adc push ret mov push ds pop flds push jo dec lcall popa icebp and fidivl jecxz xorl sub push mov push push xlat inc test subb push push pop xchg shrl push popa xchg cs mov cmpsl or pop sbb notb daa dec aad sbb arpl adc cli sti rclb cmp in inc fiadd adc (bad) pop sbb jecxz add je test mov (bad) cwtl or es pop xor imul jb addl jno add mov (bad) adc cmp inc enter pop push fbstp adcb pop pop mov push (bad) (bad) dec or aad add (bad) jmp mov icebp mov lcall hlt add dec scas lods xor jg inc or push outsl jge add fcmovb push mov jle add jb mov jl add notb xchg cmp iret mov xchg loop jge repz out mov adc sbb add mov stos in add fwait add add stos arpl xor jecxz push push jo jns (bad) cmp sbb popf dec dec sub xchg push mov add cmp gs in or cmp (bad) xor ret pop ds (bad) addl cmp add add xchg inc aam into (bad) add pop cld out mov mov add fldt add inc in add fisub add mov lock aas leave pusha add push push test scas mov enter pop inc imul add clc nop and adc daa lods cmp sbb or movsl cmp xorl (bad) jno jo cltd hlt jle (bad) xor and xchg sub sbb ljmp sbb cmpsl or out repz ret xchg add or outsb repz in mov lret jl dec psraw movl dec add or mov in and loopne add mov mov inc ss test data16 loopne,pt jmp inc xchg pushf pop pop dec jecxz jae cmp mov xor jno (bad) inc cmp mov gs insl add adc pop add adc inc mov popf fidivr orb outsl dec pusha out out aad outsb popa add jmp out movsb jp sbbb jbe pusha push test gs xchg jo (bad) sub pusha adc mov fldenv lahf add sbb cmc mov lea pop xlat lods pop clc push in lcall sahf ja (bad) add add mov add dec sub fs or js aaa test jnp hlt jg add add aaa iret int inc jno inc add out fidivrl inc xor cli (bad) mov inc lea outsb sar jo sbb orl push jnp fistpll cmpsl inc aam xor aad mov ja cmp add dec ret incl rclb xorl daa mov (bad) jg dec test and popw jae roll add icebp and out dec test ret dec jo jmp add daa lret clc push nop test hlt pop xchg add bnd inc inc pop mov movl int test pop mov gs xorb fldenv adc add mov mov test sub cmp das pop repz pushf aam add sarl mov cmp jb outsb push mov mov push icebp jmp jns call jns pop outsb int push scas dec add inc push dec and inc xchg les pop fildl cli cltd jp orb fnstsw push das popa sahf sarl enter mov test pop sahf daa jb dec add adc out cmp mov cmpsl mov xchg add xor (bad) xor jmp xchg mov andb scas cmpsl push adc cli add xchg pusha and loope add in or pop mov lock mov add jbe dec icebp add push push gs pusha or push (bad) mov cmc sub xchg loopne sub jo leave addb icebp scas adc cmpl incb loop lea cmpsl jge mov pop push push jg test mov inc rorl xor fcoml in lret cld add stc gs jecxz stos xor les inc mov dec xchg xor mov cmp cltd lock jnp rolb mov (bad) int3 add sti mov cld xchg loop adc jl pop add xchg adc clc sub test xor pop out adc out add push pop add jns mov sub out mov gs or divl sbb xor imul or cmp test outsb add aaa lea xor mov jnp push xchg mov aam lcall hlt pop sub inc or mov stos inc dec les clc outsl dec add aaa xor das cwtl add jl push lret pusha jle iret es sbb add or lock jp sbb imul aas fwait nop push pushf mov add dec sub add add movsl cmp loop sub add imul add out inc lahf and data16 push mov mov add xor pop ret push cltd xor add and rep imul out jg mov scas add pop jecxz inc sbb xlat cs movsl imul pop mov (bad) xlat in inc or roll fadds add inc roll jae cmp or stc dec cwtl add inc sbb mov rclb and xchg inc (bad) dec lahf cmp stc (bad) push cmp sbb mov mov add out cld lea into add jmp aas mov jns inc lcall adc mov xor imul sub incl (bad) lock pop insw in notb mov mov add dec push cmpsb sbb nop pop push add scas mov add scas mov cmp mov out (bad) inc xlat add test cltd pop add test cmp outsl das add movsb pop push test push cmp push jle pop push je add add add out and add sbb inc and aam add (bad) jnp add pop adc mov sbbl pop add push mov popf or call push sub pusha repz sbb leave aas xor dec pop xorl lds mov popf push sbb push add cmp jge mov roll adc add inc cmp out cmpsb mov pop dec pop out push add in fsts fild add adc inc sub push add pushf or scas testb xor ret mov (bad) sbb adc pop icebp or mov (bad) imul in add cmp mov ss pop xchg xor or js inc popa subb (bad) test (bad) fstl xor roll aaa push sbb xor movsl fsubrl and cmp hlt jae fnstcw mov shrl out fwait imull pusha sbbl add fcoml call or and dec pop sarb push repnz xchg addr16 pop pop push add clc xchg xchg adc add in dec mov cmp movsl test mov sbb in aas and xor das inc mov fiaddl pop jnp test ds add mov xchg xorb fucomip loopne insb div add iret xor (bad) push test and in fbstp add jmp inc outsl (bad) mov loope pop ret add push out sbbl pop shrb jno push add rol scas jle xor sub leave xor push pop add mov jg push or popf mov add sbb add dec cmp sub imul jnp lret mov add iret sahf es out insl push or and push xchg cltd jg pop lea add int mov add mov loopne inc mov mov cmp stos fistpl in lds movsl repz popf inc (bad) pop sbb mov scas fstl adc inc xchg js add fwait int3 fnstenv and mov das loop inc and sub in xchg xchg (bad) dec (bad) sub add shrl in jns cmp lahf cmc mov mov push pop pusha jle pop inc add ret fildll clc fwait adc adc or aaa outsl nop cltd sbb (bad) jbe out insl sub aad cs cwtl xchg mov pop cmp xor xchg aam jl shrb or push jecxz subl inc sbb (bad) mov rcrl push (bad) jbe cmp fidivr add dec sub add dec cmp mov ja daa and test lret xchg jp (bad) jo push mov aas add addr16 faddl pop sbb xchg sub sbb and sbb mov jno or add fwait and jne add dec cmp mov (bad) mov jb pop cmp popf and mov call lea inc cmp inc inc fisubrl sbb int3 addb or js xor pop mov fstps mov jle (bad) or sbb (bad) lea inc dec test rol push dec and scas sbb nop mov xchg addb mov jnp xor outsb or (bad) outsb mov mov add or mov push loope insl imul jbe iret in and sti fabs push and lods pop test or popa jbe mov cmpsb xor outsb mov pop push iret xchg inc xor dec add scas loop fucomi pusha xchg add gs bswap negl pop mov add pop xor push add add sbb xchg ficompl aaa leave pop sub push pop enter cltd imul pop pop mov add xor lds aas pop add jns,pn lret sbb push sub xchg les or je dec adc lahf cmp xor inc fldl pop add cmp cmpsb stc pop sub gs adcb rorl xor fisubrl lods add mov call mov jae jbe fisubr inc inc push ficoml (bad) or add adc add test mov add int shrl adc lods pop arpl add dec adc inc adc daa cmp push sti mov lcall adc into dec jl in inc lods cmp imul movl mov add adc jecxz push (bad) sbbl cltd and cmp add pusha or add mov push insb clc jl test je dec hlt pop mov pop mov sub insl cli add dec cmp push add xchg cld dec cmp addb mov outsb mov add les rcll iret mov or add mov push cmp fs and sbb daa repnz dec add gs shr fwait insl pop add (bad) mov add pop fadds add push scas out cmp cmp cmp cmp xor adc hlt add divb cmc std mov cwtl push xchg cmpl add cmp jno xlat jge clc imul fistp adc pushf stc xchg test mov mov push pop push das sub cld imul mov mov insb dec mov add arpl lock mov int3 mulb xor cmp inc fstl ds cltd xor out add jb adc lcall fwait xchg sub xor adc jns loope out add movsl cmp lahf add sti cmp stos roll shll and or pop das loopne std jne (bad) movsl cltd (bad) cmpsb mov lods in xorb inc push xchg cwtl scas fild xorl dec pand mov or scas nop push aaa (bad) cwtl (bad) or (bad) sbb adc jbe inc add mov movsb stos and dec movsl add addl jp (bad) xor sahf xchg movb pop inc add inc cmp fs pop sbb add push dec inc les lret add ds or add inc jmp sbb scas add test mov dec movsl bound clc je lahf int3 cmpsl sbb push lea clc cmp push push jg fistl scas add dec decb pop (bad) xor daa shlb dec outsl add cli sbb aam jb jbe in ljmp loope loopne mov xlat add inc push dec cmpl movsb (bad) pusha xor mov mov es pop add test pop ret negl into cld sub subl jo pop out add sub jle dec mov popf cmp (bad) mov add iret movsl cld cmp push in push inc and lock jg out add and cmp ss pop in je daa sbb cmp sbbl jb mov cld mov popf adcl inc out leave add push mov fucomi movsl or mov add mov int3 xorl mov lods mov vmread push int3 and ret repnz fwait std gs roll add (bad) stos dec add ljmp jle add (bad) popf cmpsb mov fidivr add movsb lds lret (bad) cmc sbb mov adc xchg (bad) aaa pop sbbb lods sub dec jl sbb rcr add xchg jns add xor (bad) mov sub mov je add cmpl iret dec mov inc (bad) xchg int subl dec fdivl andl inc call xchg (bad) fmuls rcrl add cmp in push pop jnp cmp or sub mov fcos mov xchg and rcll add out adc xor cwtl arpl loope pop mov sub sarl hlt jb out xchg mov mov sub mov test push jl adc roll roll (bad) add xor insb or xor push fsubrs sbb push testl sbb lea imul je enter mull stc nop lret jae aas add iret repz pop sub mov cmp ret or mov and cmpsb subl sub adc aaa cli cmp mov cmpsl pop jg xor jbe scas or ds add xchg xchg xchg mov cmp mov mov jno lcall dec and loope andb movsl fild xor into out mov (bad) imul (bad) scas cmpsl fldenv in popf add test out add fsts pusha sub jp mov shrb loope pusha add ficom mov sahf add nop mov pop add fisttpl xchg arpl rolb ret mov xor push add pop jns cli xor add fsubrl test sub xor dec pop lcall in movsb int aaa inc add fs aam or add leave dec imul push jp je pop cwtl sti cmp stos andb inc push out add sub dec fwait nop mov in fsubp mov fldenv (bad) mov pop aaa sub (bad) fcmovbe add xchg idivb push dec or sbb add gs or xchg sub pop xor lret add (bad) cmc push add xor jno subb je push add or and arpl dec jo mov aaa xchg fst test ljmp jmp mov mov iret mov cmp test jne push xor movsb dec add jecxz aas add dec xchg jl mov and mov mov add enter nop jg jbe push es int push sub das jge ss (bad) dec sub push fmull add fcmovnb lcall pop loop loopne push or add cmp push adc pop inc add jge dec xchg sub add cmp repnz push dec push pop std insb test add and iret (bad) add add add rclb hlt bound xor pushf shll cmpsl callw ret pop pusha jno xor adc mov jl sbb pop inc inc mov std add and inc cmpl lods cwtl add adc add ss rcrl jae insl mov stc add stos cs jno add and sarl jecxz ljmp movsl mov add lcall stos (bad) sti add mov dec push in add ss cmp lea mov push enter mov or adc ret movl xchg ss insb (bad) cmp mov jb push add lds xorb out mov mov sbb cmp mov shlb jnp insl jne pop cmp mov call rorb dec mov lahf hlt (bad) pop addb (bad) jo and and aas add (bad) mov lock je inc add or arpl pop lcall cmp jo fcoml testl mov jg add mov clc adc roll int xchg pop lahf orb ret mov cmp mov xchg mov jl repz test mov push add pop out cmpsb popa aad dec popf push mov add outsb pop sub mov (bad) inc pop sub cmp int pusha inc adc mov and push iret sbb scas jge add test pop inc dec in ja mov pop xorl lahf pushf movb ljmp add push or cmpl fs push orl dec pushf imul mov sbb add dec ret mov pop (bad) sbb push push xchg or lcallw add daa int3 movsl pop push push imul stos push xchg mov subl fildl imul mov into jae movsl jno aas add add sbb jne cltd xchg rolb outsb stos and inc mov pop push mov jns pusha outsb jecxz sbb lea adc repz cs je xor cmp sbb fwait adc pop add cmc cwtl int sti xchg mov sahf cmpb mov mov and xlat test test pop fldt xchg pusha jnp pusha int test inc bound pushf jb xorb stc aad in pop mov test pop inc pop les push push mov rorb sbb jle clc popf aaa mov cmp call faddl in into add jb xlat test insl push add ret scas js sbbl cmp sahf lea or xchg stc and sub test outsb pop fwait add orl pop clc or sub je addl cmp (bad) xlat bnd cmc sti mov sbb cld ret aam pop movsl inc stos add aad les sub add test lret into insb mov add std bound push inc (bad) jnp lahf popa cmc inc pop cmp add aas mov lret roll fisub imul mov int3 inc mov xorl leave bound pop dec (bad) sbb add shrb dec int pop pop ret out mull add cltd jo inc jne sti add mov add adcl mov loope add cmp or stc jmp stc mov ret pusha inc (bad) jo ficomp or adc cs jmp pop add loope adc xchg jge add test mov cmp movsl int3 jbe add mov mov add xor lahf test xchg xchg leave adc dec mov inc das mov into add jge sub int fadds sbb mov pop scas xchg les add push xchg adc xor jp mov in xchg aam jbe add mov xor scas insl pop mov fidivrl sub (bad) in in lock jno (bad) cltd mov aaa sub cmp jle sti sbb add cmp aam xor xchg nop mov add and xchg test dec (bad) lcall call out test xchg inc add pop out ljmp inc scas roll icebp bswap (bad) mov test add (bad) loop jecxz mov hlt les gs pop or cmpsl pop adc mov (bad) xor arpl cmp fistpl or dec or ljmp xor cmpb inc jns pop push insl je stc js aam add mov sarb jge add pop mov mov or test mov in and xchg or out sti popa daa cmpb sub add int3 mov jnp addr16 imul addb (bad) jl mov pop pushl push add fisubl andl inc ljmp fldpi js mov jl out je lds mov add push aad test xchg and cltd iret and adc sub (bad) lds outsl cs sub roll pop inc leave cwtl push fs add sub dec jnp jns adc (bad) jbe or inc add es out iret addl stc in xchg and xorb clc cld mov or cmp subl (bad) add mov mov test pop add mov jns add insb push shlb daa add push xlat pop jno add push pusha mov call loope sub sbb sbb jecxz sbb stos xchg (bad) fcoml in sti lret lds jae imul cltd lods add in hlt inc and movl fnop std sub cwtl mov pusha ret add xor pop pop repnz lahf inc or inc adc inc inc fldcw jl mov test je add inc fs rdtsc lret jbe xchg ret stc movsb xchg push adc pusha repz add add pop lea sbb push movl ljmp lods add pop and imul adc loope jae outsl pusha and stos hlt add dec nop mov arpl je adc popf cmp add xor push mov cmpsb es add pop cmp inc lods sub and or jmp xchg orb leave std push shr stos jle fnstsw adc test push and sbb andl pop popf enter inc jg or lea add test dec cmp mov inc enter cltd mov out (bad) or inc imul adc adc add add xchg iret lret xchg xchg and js lods lock add jnp inc in pop xchg cmpsl jmp (bad) mov mov push into pushf call dec sbb scas pop int test stos adc mov arpl dec popa sti add mov repz sbb and fsubrl ljmp push add cmp add dec sub adc pop mov xchg inc ja cmp cli mov imul xchg add cltd pop xor mov push rorl dec mov mov fstpt jae idivl cmp mov jne pusha jno cwtl sbb pop push adc inc jb idivb mov and (bad) in sub lret int ja or mov (bad) mov sub xchg mov mov ret fnsave aam iret mov push and sbb adcb (bad) insb (bad) cmc add add jne imul add popf out test cmp cld (bad) pusha nop stos mov mov jecxz jmp add sahf ret push aad mov xchg xor pop push loopne jnp (bad) ss ljmp sarl or push sbbl bound (bad) xor setae cmc hlt mov cmp sbb les add push mov shlb mov add repz add pusha adc xor andl stc es addb jnp pop cmp add insl mov mov shl jnp and cwtl icebp dec adc and add test jo add ret fsubl cmp stc add adc mov cmp mov lret mov sarl ret push pop xor or out add lret les jne add in or jecxz sub pop ds daa and cmp push (bad) pop fist ljmp or aam add push lcall sbb mov jecxz jo popa lret pop push jns add adc jmp daa mov pop or cmp sti mov mov imul lock push dec cmpsl xlat dec add outsb (bad) mov test or add test das aas sahf pop add (bad) insb jge jp pop andl push stos test ret ja and push out and jg xchg fmuls add jbe (bad) cld aaa inc xor cmp xchg xchg push dec xor add faddl and mov lahf (bad) repnz sti mov pushf ret cmp adc inc mov outsb div in pop pop xor push insb jne and add lret add out push enter add cmp mov or push cmc pop sti sub xchg push add add fdivrs sbb add cmpsl cmp pop and mov aad mov mov int3 sbb inc add gs scas jno sub dec jae int inc das push add and enter fdivl sbb (bad) cli or jb les ss xchg xchg xor movsb add pop lcall outsl mov subl mov xor ljmp out sbb fs scas xchg mov ret pop adc pop jmp mov add jns nop adcl xchg cmovl cmp mov pusha dec dec xorl scas (bad) lret pop or subl and not push adc fwait lds lret enter movsl or aaa pop or add sbb jg repz or dec mov add add or pop add mov popa lret pop in repnz ja jnp add and mov add insl jo jo (bad) mov xor pusha pop inc add push lret loopne repz cmp lock (bad) in aas pusha add lods adc xchg jne jmp rclb jns ja hlt xchg mov add aad bound mov in xlat cmp add data16 jae add andb cmpsl loopne pop lret repz mov mov xchg jb sub jecxz rorb scas in pusha mov jb jle popf int inc ss (bad) mov insl fsts mov jg pusha dec sti cmp in test mov xorl out aad cmpsl jno add repnz dec insl fildl add cs js mov xchg and jmp arpl push sbb add (bad) jle outsb adc inc adc mov or add mov pop repz push dec and xchg popa add add jne push or mov test leave inc out xor cmp lret xor dec inc add test aas cli cwtl cmp sbb push mov popa inc cmpsl pop shll inc imul add push sbb adcb add mov inc notl add cwtl aas fist pop pushf push sbb mov idiv je sbb or cmp scas mov inc stos dec mov push movsb negb xchg adcl jae push add and pop fstl outsb sbb xor mov mov je jo leave add mov add data16 shrb ret add dec sbb mov sbb imul mov add cmpsb ja add dec mov sar dec mov mov ret add push cmpsb and in fstpt fbstp jo mov popa (bad) jbe pop sbb imul scas repz pop pop iret loopne cmp mov xchg jb jmp push cltd mov xadd jnp dec inc xchg lea pop cmp xchg mov enter and ficoml inc les mov mov mov add dec hlt fwait add push cmp pop in clc sbb test inc jb mov jbe add dec cmp add mov fnstcw ds pusha jg fdivr cli cmp in inc imul gs jbe xor imul inc and js scas add lcall jbe test jge add pop push leave xlat add div jne add sbb push add lds cmpsl add test test inc sub fnsave leave pusha (bad) pop inc mov add movsb mov (bad) fnstcw add push out nop call push sar ret subl add shlb sub jge rcll dec out lgs imul or xor pushf xchg addl test jb mov inc pop rcrl popl out push cmpsl outsl rcrb sahf ret cs mov mov test cmp movsl sbb test pop jns sar jmp add imul loope gs ss and adc mov or cmp push dec (bad) adc lahf scas pop add enter or push icebp cs mov push jbe lahf mov inc pusha call add lret add or inc pop divl bswap add pushf cltd add sub pop rcrb cmp mov fs pop fidivr add test adc loop jp push mov adcl cltd cmp sbbb clc jbe inc add xchg pop jge push mov movl fwait sub add cmp sahf paddsb mov add lret cmp add xchg jmp xorb mov pop mov dec jp,pn mov add popf mov add in mov sbb add pusha xchg fimull inc sbb xlat jge shrb int jnp sbb ds add aad call pop (bad) push mov insb leave jno mov inc ret add cmp mov and pop jae (bad) mov sahf sub sar add out ja je mov lock dec lds int inc popf shrl add popa cli sub mov jecxz mov sbb and addl das fdivrs add pop pop jg jns lods add dec jl jns add mov push push add adc adc stos into lret cmpsb sub add loope cmp inc test ljmp imul cmc arpl mov js dec push add add ret jle rcrl xchg js or adc or fldlg2 push add or addr16 cmp orb (bad) cmc add inc insb scas out and push jmp mov bnd scas and add aaa jo clc ret gs add call and xchg adc rol jno add cmp pusha arpl (bad) mov push int3 cmp popf outsb in test pop xchg and push dec adc add mov popa add pop xor add loope leave aad pop mov addr16 xchg and push ret add les ds jl add rorl add mov pop sub adc and or xor cmp pop xchg mov cmc sbb mov cmp push jmp push fstpt lods imul add int mov jb (bad) mov push test add xor pop add jns pop push inc mov test jg rolb scas es add inc (bad) fs jge sub popa lods es xlat in subb fs mov xor add lds jbe idivl sbb xchg popf add pop add sahf push arpl lret sbb inc imulb cmpsl add iret dec dec out pop int adc test push sbb add push xor hlt lods fadds mov fwait and dec cmp sbb xor mov mov ficomp gs add fsts cli mov das jmp xchg mov movsb out sbb aam jb inc xchg out adc (bad) mov je xor leave (bad) js ret and fldpi cmc test pop dec insb lock mov jne xchg fcomps jmp out test pop ss (bad) sub (bad) orl movsb (bad) jecxz out cwtl ret xlat (bad) nop roll das ficom aad add repnz xchg lret cmpb add lods adc jle stc lret cld jle jl (bad) int3 ja push or insl lahf mov dec mov or push jmp mov dec faddl jl and sbb lods in arpl into mov rorb (bad) int out and pushl ss push cmc mov push push insl test nop add gs mov stc lea adc test leave mov xor ret jo addl dec pushf hlt jnp add int3 arpl mov sbb xchg mov stos add xchg les push out mov add punpcklbw adc push cmp inc add rcll inc xchg jecxz les movsl js adc add jmp jb dec addr16 add cmpsb fidivrl enter sub scas ja roll xor aam bound push mov add push dec fisttpl fcompl in (bad) mov scas mov add mov mov pop cmp inc add imul rorb pusha mov test shll pop hlt xor outsb xor mov pop mov stos pop les jo pop call push stos dec enter cmpl mov fs sub mov stos lret inc ja outsl adc sbbl fistpl imul mov add jl mov stos adc dec jp xorb out mov inc mov sub push test pusha paddsw fldt les push xchg push aas push jno add cwtl pop lret mov stos in pop roll cmpsb add push mov sub and sub and js lahf mov push inc jbe jo add int3 in inc jp les cmpsl add stc mov mov fnsave adcl loop imul pop cmpsl mov test int3 insb insl inc jmp aas cltd mov mov mov or popf fdivs enter mov pop leave arpl sbb cmpsl push jle (bad) jmp (bad) ja pop out add xchg movsl sub add sub out add loope fsubrl mov bound cmpb xchg in outsl push pusha push jge inc adc sbb or or mov call push inc mov stc pop jbe xorb or push inc dec in (bad) jl xor mov xor add out shll in fsubp pop hlt fcoml nop nop outsb (bad) int mov pop mov stos pop and mov adc cmpsb mov or adc lock sbb inc mov push push pop inc repnz pusha dec mov das inc stc or xchg dec sbb test (bad) jnp hlt push inc xchg ljmp call and repz sbb clc add inc iret xor dec add pop inc mov adc jne add add cmpsb popf mov and mov das roll mov lods or sub aas add pop nop imul lcall xchg xchg xor pop mov adc adc lea test and std (bad) mov xchg test fldt out add jnp mov mov cmpsl adc mov dec vphadddq in push cmp dec movsb sub add lahf pop cmpsb dec dec inc ucomiss add mov arpl inc xchg or into adc movsl xor sub xor and cmpb bound push outsl add fucomi xor xchg test cwtl stos mov xor add incb dec nop cs add and loop imul xchg inc inc push inc mov push shrb jl mov add inc xchg sahf lods push add pop and add movsl dec subl add cld outsb pushf jl jo mov sti jns add js add add and pop lret cmpl ss jge sbb jp stos std add mov cmp rcrb adc sub xchg das mov push inc leave add add scas ss dec inc xchg add pushf or add xchg xchg (bad) fsubrp jp add loope popa cmp xchg add rep imul fsubrl mov dec push call add dec xchg add cs cmp repnz bound outsb push add (bad) daa adc imul dec loopne,pt xchg mov fdivrs xorl cwtl and mov sti add and (bad) mov loopne fcomi jbe xchg add sub iret cli pop jae fidivrl add sahf lock mov xchg mov add lods add add loop das (bad) cmp xchg add inc jne adc bound and ret xor add cmpsl jmp jno inc add ds int xchg cld in add cmc aad mov test xchg sbb cmpsl pusha inc cmpsb push mov dec clc shl jo cmp jl dec add cmp and add push mov sub les rcrb xchg pop or movlps mov nop int3 inc mov sbb dec jb enter cmp xor (bad) mov add mov xchg sbb xor and jg andl mov mov test je xchg add testb pop popf xorl shlb sar js cmp dec mov sti add xchg or loop lret mov add aam mov or mov addl add cmpsb lds add js pusha cmpl cmp dec jge add repnz mov ds add mov loopne mov xor mov aad and cmp inc or fs add pop add xchg movsb sbb xor pause leave inc enter mov cmp cli xchg in inc xchg adc je add xor mov inc mov pop (bad) push scas add ds out xchg dec xchg aad dec push call xchg fsubrl mov (bad) sarl jne mov test push inc mov add pusha movsb xchg xor dec sbb lahf inc xchg or pop outsb outsl lock icebp push xchg les pop add fs pop hlt add pcmpgtd sub pop jle addr16 jmp pop push and add mov push mov fadds add mov or xor xor pop fldl jo mov mov mov sub add aam adc add pop sbb add push sbb jle mov pop push adc add sbb cmp add lahf fsubl jmp das pushf jae xorl enter add rcr addr16 push xorb xchg (bad) dec jns lfs mov mov mov ja popa dec aas inc psubq and mov jb cmp (bad) cmp inc fildll nop roll jl in movsb sbb adc mov add mov pop xor push hlt insb mov bound fidivr add dec sbb xor addb in (bad) into xchg sbb subl jecxz adc lds cmc push cmpsl mov pop mov pop inc sub rclb adc or push enter fs orb mov jecxz pop add pusha dec lock jg lret lods fisubrl (bad) mov xlat decb fldcw pusha hlt adc add push pop pop push loope add mov pop cmp or mov pop add out test loop mov sbb cmp or pusha imul dec adc sbb les adc sub push push imul out pusha addl and add shll push lock cmc pop cmp mov test adc and aad push gs add mov sbb out cmp mov in push or lock mov repnz adc testl hlt xor dec add push add pusha cwtl mov gs jbe add roll or shrl pop inc push cmp mov (bad) popf xchg inc mov add mov bound cmp ds push inc lahf mov shrb mov dec inc push data16 bound add xchg out lock add fildl popf out inc (bad) insl es xor mov push outsl fidivr and popf add (bad) jns xor mov add and lock cmp inc mov dec jle add fcompl mov push jnp mov or add (bad) sbb repnz push (bad) cmp pusha add xor aad dec andb in sbb xor rcll add lds rcll add jg xchg dec pop jb scas sti pop dec add mov add or add push add push movb je and lahf jl inc outsl mov imul or incb lahf add mov fnstenv rcll push loopne add hlt and jne add dec or scas sbb adc pop jnp cmp inc or aam mov fadds out int3 leave add fisubl xchg add xchg pop add enter fadds fisttpl imul mov add mov adc ret mov add cmc push jns adc mov inc cmp push lea xchg loopne add inc lods fildl mov mov test and das mov mov push mov jg mov movsl repz jle lock fs adc ficomp pusha ret std push jecxz mov (bad) jae popf (bad) jns js lret fisubl inc stc dec pop add jg mov add out ret and sbb add popa dec into jo add lods imul scas xchg bound stos jae (bad) mov cmc push add jns lock mov scas pop mov sub sbb jge add add add test imul or sub enter push add std mov cs fldl in jecxz fs push sub rcrl incb jle insl xchg test pop test sbb sub inc mov test lock aam cmp and mov jb fldl inc lret clc mov fwait add push jb movsl popf das subb sub ret (bad) xor rolb xor insb pop push jne testb out aaa cmp sub or clc or faddl inc adc test aaa pop add or mov push add mov mov push sub nop xchg and ret pushf mov xor (bad) inc mov mov sbb test dec inc cwtl ja (bad) lea xchg adc and aas leave test mov xor add mull daa adc jbe cs add sbb (bad) push adc mov ss xorl (bad) fild push xchg cmp and mov decb dec lods rorb mov pushf (bad) mov add and (bad) aam inc inc fstpt jge add ds pushf sub push cmp add mov push lea xchg xor adc mov jecxz or rolb mov pop inc insb push push add (bad) pusha mov stos push or insl xor add xor and dec (bad) cs gs jb mov and ret pusha mov mov nop pop mov add sbb push mov add adc das add hlt sub and cmp mul cli cltd out shll std mov xor cli clc stos pop in lods les ror roll jl paddsb cmp mov les mov call stos push pop push es shrb push adc and jp add ret inc jecxz add cmp xchg xchg (bad) xchg scas mov insb (bad) cli mov fsubrl jne lahf ja jbe add rcrb xchg idiv lret in cmp addl cmpb jmp mov fcomip je dec cmp imul jg pop push xchg lret js push xchg jne jge imull push adc add xchg fidivl xchg jge pop divl pop addl inc mov lret addb xor mov add push lds sub adc sbb dec jo sbbb jns pop insl in out cmp adc arpl adc cs dec pop jae add mov cmp popa inc xchg testb lea test or ret call sarb xor cld pop inc xor mov push and cmc ret cli mov test cmp cwtl pop jo sbb mov pop clc daa pushf dec (bad) les or xchg inc lret faddp dec mov iret mulb push xchg add xchg add xchg aas xor stc xlat roll or ret xor adcb or pop add cmpsl jae daa inc sbb in lods sbb pop jo out inc add insl or ja subb jbe in xchg popa ficom jo scas dec cmp add adc loope test (bad) pop mov int add enter imul (bad) (bad) (bad) shrb mov xlat add outsl and mov cmp add dec mov popa xorl shll fsubrl fimul test inc popf inc cmpsb jge push dec mov add sbb mov push push incb mov pushf mov mov add outsl rcll aas xchg add jg (bad) repnz dec aam jl or mov scas jb fwait lea add sub adc add popf cwtl mov subb mov fs aas jl add xor pop std adc add xchg shlb or mov jmp addr16 aas jl pop add ja fiaddl pop dec pop mov push lea pop ret push pop mov lcall jp xor inc int3 jae add sbb inc scas dec push add popf jmp xchg cmp or mov aas mov add imul fild jge sbb dec push add popa jle ret adc or pop add and adc int3 movb jge cmp add scas pop ds lret add lods cli int3 cwtl mov xchg mov and mov ffreep add xlat mov pop sub sbb and add call inc iret mov mov stos jle lea pop jns add popf add mov add fldenv add adc push pop lret add push inc add hlt cmp push icebp rcr add add pop sbb lcall inc mov scas pusha das xor popf xlat dec sub or (bad) addr16 pop ss std add out pop add xlat and cmp mov add inc scas dec jne push push add xchg mov aad dec addb sarl add add ljmp add push and icebp add xchg mov stos mov lock jo push mov sub or test pushf cwtl in inc dec aam cmp xchg or loop add enter in (bad) mov add jb dec push notb adc inc push push icebp out mov cmp mov pop pop jp xchg cmc adc pusha xrelease push mov aaa mov repnz or or out jo add and loopne jle cwtl or rcrb fwait lock ficompl insb test (bad) hlt in push push les out xchg fbstp add push (bad) scas add pushl add outsl adc sbb jg fistpl or xor mov pop enter add mov movsb das fmull push shl aam add repz add cmp (bad) in jle mov orb pop xor inc jl push add add inc push add pop or das pop fiadd push cmpsl sub shlb cmc repz jmp ficompl add clc pop mov add imul (bad) in jb pop loopne add add test add sahf es repz (bad) push jno sbb fs adc cmp add pop push inc pop adc add ljmp add loopne mov notl pop call jmp (bad) push stos mov inc cmp cmp cmp mov (bad) xor xchg dec ljmp stos (bad) movsl movsb cmp pop or lock add mov stos xor adc jo dec sbb pop fwait sahf (bad) sbb in sahf outsb and adc sub xchg jbe xor fcomps jge fiaddl mov repz jnp pop jecxz (bad) mov lea out cs scas adc sbb aas outsl popa les sbb cmp jb mov popa je cmpsb adc andb test jmp stos mov arpl loop sbb xor sub pop das jne cwtl data16 stos xchg fmull xor jae and decb adc cmc lock adc fs xchg (bad) jb jp pop adcb pushf cmpsl pop mov add outsl sbb inc js adc xchg addb (bad) ds stos xchg mov xor push jae js mov cmc xchg clc adc sub cmp push fs iret stos fsubs sbbb pop mov mov mov jns pushf (bad) mov out insl mov test loope mov xor call add iret add sti add add sbbb and je xchg add push movsb add sub add fnstsw cmpl into fs dec aad sub cltd inc xor push pop test add insl pop lods xchg push rcll adcl sbb add inc mov add push sbb pop and into sbb jge or addl clc sbbl cltd add push jo jl add shrl aam add sbb cld test cmp pop mov (bad) lahf push pop pop les jecxz lea inc sti jle in mov (bad) or in ds xchg rol pushw punpckhbw add jmp or mov int cmovns mov lret or dec pop cmp addl into cwtl xlat push add push loopne addl inc ret inc xor add (bad) cmc leave add jl mov and scas xchg xchg out add jge jmp cli add rorl sub js aas cmp jbe loop mov jnp and push inc xor cmc push fsubrl cli loopne mov add mov movsl jbe add addr16 (bad) fidivl enter aas lcall or xchg icebp mov adcl mov adc insl push sahf mov clc adc (bad) and push outsl pop and aaa xchg add jno and fistpll in jmp add das pop test (bad) adc fiadd pop xor xchg pop add mov add outsb cmp mov lcall add push pusha sti aas dec push or add mov pop inc int3 mov mov xor repz add mov push dec outsb out add stos lock mov and mov jge add out fiaddl insb dec lea add ljmp push or pop dec push mov adc inc lds out fs (bad) and test sarb cld andl add ret in sbb xchg mov jg ss and dec xchg jns sub mov imul push cltd add pop int3 sub pop (bad) out adc fsub add mov jmp add add in or clc add daa (bad) pop cmc sub lds adc lods push nop pop cmp push add pop dec add cmc fstpt add lds add (bad) test xorb setg adc add cmp adc dec jb mov ret ja fmul or xor mov push mov add popa ret cmp jecxz outsb sbb mov imulb insb add cmp mov push stos outsb shlb adc mov or orl rcrb push test sar cli jo popa add push pop and ja cmp add or xor pop push pop add sti mov movb std add test daa mov sub cli adc push popf mov inc xchg addr16 cmpsl hlt xchg jmp cmp lcall sahf lods cmp sub lea ja ss push add sbb in ror push add mov imul mov mov mov push push add jle cmpsb sub decl or adc inc dec adc sbb mov ja pusha je cmp mov lods fisub outsl add enter cmpsl call je out imul add nop (bad) lret add cltd hlt mov js adcl sbb int fstpl cmp lret cmovnp push dec out mov jne cmp lret cmp fidivrl shrl pop sub lcall jg add dec sub ret push push and pop jne aas adc sbb add pushf and inc (bad) cmpsl jle loopne add xchg mov add test jo push repnz shlb negl sti sbb inc ja sub adc sub and mov add add cmp jl loopne pop subl imul add test push out cmp outsb adc xchg xchg or mov sbb cmp pop inc xchg push and jo push and sbb xlat gs mov pusha fidivr mov mov aas jg push shrb cmpsb pop in leave add js mov adc or cmc dec mov jnp iret in das cmp subl es jp add pop imul push and je inc jmp iret stos scas mov jbe xor dec pop mov cmp mov adc jmp sbbl inc add fmulp push sbb jg xchg dec stos push add stos lods push jo mov mov sub aad add inc mov (bad) xor js jp sub add dec jnp mov out xlat xor das push inc andb push out je mov add or add jecxz cmp and push add mov pop xor add jns fisttp xchg mov add std xor and xor mov verw out cli dec mov mov xor addb dec repnz add mov sbb pop data16 cwtl add push mov insb add sbb jge dec test enter xchg or imul bound dec adcl adc inc ret cld push jmp enter ret mov addb or pop or stos add add cmpl es jo out inc je push imul (bad) dec jge xlat inc xchg mov add (bad) in cli xor mov add fistpll stc inc out addb sub addl hlt and add xchg mov lret pushf addr16 repz nop add sub (bad) pop add push dec push movsl data16 mov xchg rolb scas sbb test xor xchg leave out xor jg add dec adc push mov scas fwait sbb mov in loope jo or orl insb sbb pop fiadd jo push dec dec add push aaa mov cmpb std adc loop sbb jl mov inc imul mov or pop sahf add adc aam pop push add jp inc jl add call rcll pop adc enter pushf lret add outsl push or lods inc adcb mov or lahf lock jge outsb lret (bad) lods (bad) add xor and std mov test das into jb sub push mov movsl add rcll mov lcall add jge stc xor add lcall addl adc pop mov sub inc jp into add shl in das jns cmp out int sub add cli xor inc pop ret add call add nop dec xor insb and dec and push add cmp int data16 adcl in cmp inc mov mov jmp jge and lods inc xor sub pusha pop cmp cs sahf push mov divl cmp mov push mov sahf xor cs popf jp xor mov push decl add push jo or dec or add xchg in lret mov add fs inc fdivp icebp std add sub push mov add repz les sbbl scas push shrl fmul pop mulb fiaddl push push js add jle and lret (bad) jnp add in mov mov shrb or fcoml xor mov scas add imul sar out mov lahf iret rolb adc movsb fcomp jo daa jne js mov pop jae jne add pop sub push leave add mov std insl decl add or movsb lea adc daa test adc sbbl xchg sub pop mov and (bad) leave movsb add push cmp mull mov mov push xor dec push pop pop fimul pop mov pop outsb dec pusha push xchg (bad) pusha sbb push sahf pop add lahf sbb loope xchg int mov pop mov subb loop lcall inc jp test popf roll sbb mov add add sub sub cmc je inc jb jge (bad) dec cltd cmp push mov movsb testl push stc cmp xchg (bad) cwtl je insb gs pop and cmp xor pminsw dec add jecxz dec sahf mov inc cmp xlat incl pop dec push ret (bad) jns ja or and movsl jp cmp sahf xchg (bad) repz xlat dec add pop cltd mov stos xchg sub cli pop sbb push cwtl outsb insb lds mov lods push mov jae (bad) xchg mov fiadd mov pop fidiv jbe mov xor jno (bad) fiadd pop fldl mov test adc inc imul mov mov add or add jecxz push jge bound jp fisubl test jmp dec jnp mov add inc enter adcl call insl js ja add adc mov xchg popf movsb inc pop jl hlt shrl add push fwait lahf jp (bad) cmp xor pusha inc scas mov lea testl sub mov add loopne fisttpl repnz xor jbe mov inc dec aaa in add popf pop mov adc add jl int3 add jne cli xor test stc fnstenv notl cs mov xor xor add ret pop fnop (bad) loopne (bad) aas daa addr16 add shll lahf and fcomi and or sbb add and lret adc orb add sub add pushf add (bad) fldl add jg jbe arpl adc leave sub iret add lods fsts cltd add test jge xchg movsl push aam mov sarb into jecxz data16 arpl je outsb inc jo jb test pop add out add dec scas add add pop cmp jae gs sahf push jbe push xchg and aas sbb (bad) js lods dec pop std out inc jge fisttpl imul (bad) cmp add pop pop bound adc jae dec mov jl mov (bad) sub (bad) (bad) pusha movsb cmp (bad) jb cld sub and adc inc add aas test and hlt add scas push out add arpl cld add int3 rolb loop fwait sahf inc dec adc add jecxz pop js add ret mov and inc sbb pop aas inc jecxz jbe jge sbb loop push push pusha xchg mov adc pop rcrb or or adc pusha mov ja xchg adc cmp mov or ljmp aaa testl jnp lahf cmp stos pop mov movaps pop mov jbe mov push bound (bad) decb icebp add fdivr sub cmp jo loope inc js loop stos lahf jecxz sbb jno pushf aam (bad) inc jb ret add iret imul outsl lcall add icebp xchg mov jo out inc sbb add adc xacquire fidivr ljmp popa adc sub jmp sbb xchg cltd pop icebp and dec pop add gs dec iret inc leave sbbl or xor and mov adc add lods pushf (bad) cmp sbb xchg mov outsl nop loope add dec cmp pushf int add xchg adc pusha aaa mov add inc pop mov add stc out subl cmp lcall mov xlat lret cmp movb scas dec dec addr16 aas aaa mov and inc lds inc push add push xchg or mov xchg ret rcll out adc pusha xor or aad dec sti jmp lods and add inc inc mov rolb sbb jmp sub mov add ja mov xchg sbb xor jl in add add jmp mov sbb ja lds add or jbe fs out push pop xchg pop add fldlg2 jbe inc ja cmpsb (bad) (bad) jmp add divb sbb into cmp add sbb cmp sub sub hlt jp dec sbb adcl mov push cmpsb pusha inc js fmull add test mov sti cmc data16 add push mov fmuls into add push mov xorb data16 mov add test cmp sahf jbe adc jne popa and mov andl mov mov mov (bad) ret popa cmp or add fildl loopne loope subl sub and mov mov inc pusha jp lret repz sahf sbb xchg add (bad) or add and pop xchg add nop ret mov mov xchg fwait in push pop testl lret lds cmp mov jg aam outsl mov adc clc xchg daa orb pop or outsb mov mov in push subl push (bad) in mov insl add cmp arpl cmp add fnsave lcall jne out roll dec jo fcmovnb mov add addb adc xchg add mov pop adcl das inc lock dec cld stos mov jl add mov mov call addb insl out sub imul xor fstps add int3 adc out daa cltd or inc mov lcall add inc push test (bad) dec jnp insl loop fisttpll fs in popf ss and inc fbstp outsl add adc loop push and in sbb mov arpl daa jle mov add dec aaa mov sbb (bad) mov in pop mov hlt sub and in stos loop push xchg out in pushaw add sbb pop xorl mov enter loopne and add xor pop or hlt mov xchg push jne xchg jmp xor sbb pop xchg in add aaa fildl jle dec and (bad) cmc sbb sbbb retw nop lahf js mov dec mov negl push inc add mov test xor (bad) (bad) hlt fwait xor adc dec xchg adcl dec ljmp rcl test stc cld mov sub (bad) movsl (bad) loop shrl cli push adc and mov popf push cmp mov jmp mov add adc mov add pop loopne mov clc test or dec mov test pop mov add lahf add stos (bad) fs out jbe movsb mov sub repz lock xchg pop xchg add outsl push pushf sbb cmp stc pop xor cmp mov inc mov in jmp pop mov pusha lock pop fwait mov mov cltd dec add in insw je sbb clc orl push or dec jmp xchg xchg pop inc mov pop add jp xorb dec and add cmp adc jno pop pop add and lods jnp add pusha fadd pop mov in mov pop mov sti add xor jns xchg orl inc out lea fmull loope and cmp daa pop mov add or aam xchg (bad) jl add scas fneni(8087 jne jb dec or enter jge fwait jno loope add mov inc and mov sbb es push loop sub or cmp and in sahf mov mov or frstor sahf loope jbe mov pop add xor jne and out int3 push add xchg test repnz int xchg cmp cli cmc add aam dec xor outsl data16 inc icebp fildl cld and push sbb sub insl test arpl mov popf pop add add ficompl mov imul add fstps xor mov imul mov add sbb add dec mov add std push dec (bad) mul add js jnp add jb fsubrs sub adc jl and add std icebp clc out stos mov push loope das or pop ja mov push adc sbb lcall dec pop mov stc mov data16 sbb mov stc pop scas int sti js dec sub mov fcomps leave mov shll push or mov pushf mov scas jecxz xor push fbld sbb (bad) sbb pop mov js sub add in ja sub jne orl jae xorl sbb rcr je sahf lret popf fistl inc (bad) cs push add mov sub add test jae add xchg aas and es and cmpsb push mov pop lahf jns ret cld imul mov adc outsl js add es lahf xchg sbb andl cld and xorb push bound dec pop push lock repnz dec aam pop pusha pop push pop pusha adc xor das add mov add rcl ficompl and xcrypt-cbc cmpsl nop xchg js (bad) add mov (bad) int3 add cmpsl adc mov mov push mov add stos rep sarl add inc dec mov pop sub or sub imul mov sbb fstpt add clc and pop jmp add dec or jbe jnp add cld cmpsl or std lcall ret in cmc add sbb jnp imul add sub ss dec fildl push call or xchg add cltd imul jne mov jle je push mov cmp add sbb test jbe add ljmp xor mov cmp insl dec push add sub out sahf pushw fsubl add or add movsl popf add adc pop inc and insl loope pusha add test scas add out subb cs dec clc pop incb sub popa leave push add mov add add push add ja dec add inc mov or mov dec mov jns test cmpsl test mov mov mov ret and and add sbb test add xchg jmp rolb mov dec outsl add ret cmp mov pop lods inc iret aad push inc in add cmc leave dec inc test cmp add popa mov sbb inc mov add ja in repz inc test stos imul or gs insb dec paddq add (bad) mov mov test jae test outsb cmp dec push sbb movsb aas push mov pop test js mov shrb cli push repnz and xor or dec fdivrl pop fwait sub arpl lret scas jb add lahf push push jae cmpl ret jl pop mov push out jl add jecxz in lea add cs mov push sti add mov cmpsl js mov mov enter mov jmp hlt and lock xchg jo mov dec cwtl sub adc dec push inc add (bad) dec cmc add gs (bad) and jp test cmp out fs mov fiadd sub xchg pushf fadds pop test sbb nop adc xor test scas xchg in aas add pop adc cmp fwait rcll cmp push or dec mov or dec pop test bswap outsb fsubl mov push xor xor in fisubrl mov adc and ret lea dec aas mov mov pusha ret add pop mov push cmp jo add stos jmp ffreep push sahf (bad) lock mov test movsb mov sub add push add sub jecxz adc sub add mov cwtl add xchg push dec adc inc add dec mov or bound cs pop sub aas mov add push push mov push subb loope leave test xchg mov inc mov rorl jne dec add or adc aas int3 add or sub add sti cmpl mov jmp mov mov cmpb fnop add sbb mov pop dec in push xchg jecxz dec ja arpl mov add cmpsw or or mov sbb inc add sub sbb cli jl adc sub sarl lahf inc add sub mov ljmp mulb stc enter (bad) lds sub pop push dec xor outsb pop lcallw test fdivs add pop xchg ret sbb add and add mov mov xchg in jo int dec popf pushl lock cltd jnp adc xchg (bad) adc inc jo insl jp outsl jecxz jge stc cld rorb add push mov mov outsb jne aam mov adc lret sbb xor lds xorl xorb cmp pop jbe into jnp add lds setns add inc sahf mov sub pushf loop repz push daa outsb cs in pop jnp mov xor (bad) arpl mov adc xlat movsb mov sbbl push xchg sbb pop addr16 decb add jmp arpl test rcl mov cmpsb xor add (bad) adc jae push jae or jbe lcall jns (bad) mov mov outsl cmp add fild push rcrl and stos mov push sarl ja or (bad) add call push and mov test insl cmc dec rorb lahf inc mov data16 xchg leave (bad) lock cmp jae hlt loopne sti add adc jmp out add mov lds in fidivr xchg lods aaa mov rcrb mov add addr16 adc (bad) fnsave (bad) jmp hlt loop stos mov jg dec bound sub fistl (bad) pop cld and xchg mov or cmpsl (bad) inc pop xchg mov ja push xlat mov mov pop push mov jmp movsb add adc sbbl xchg stc movsl lods addl mov ljmp arpl sbb cs adc das mov xor xchg mov add sbb and inc inc push fs pop jl mov (bad) insb ds adc iret ret inc out fdivs add insb mov ja xor sbb add push dec add jno add in or pop sub iret add adc int3 sarb add cmp add push sub add add add les add rcrl add and pusha xchg repnz sub pop add and xor rcrl push mov cmp jp jnp push dec mov pop in int3 add add xchg lds scas mov and push lahf (bad) jle shll or xchg fdivrl out das pop cmp inc mov pop xor jae pop mov cmp stc add mov add push add xor (bad) cmp rcrb inc pop data16 addb inc xchg je xor adc outsl and scas push js or popf mov shl add fldl ljmp mov jecxz fistl in (bad) mov cmp and ss js das imul inc daa idivb sar add mov mov xor fdivrl pop or mov sbb lods adc jmp add mov cmp into pop popf cmp jg ljmp lods xor add jg add addr16 sahf xlat and xchg cmpl and add ret pusha out addl fadds (bad) (bad) repnz xchg cwtl add adc add sub dec add push jp jle add mov inc test mov fldenv sbb add adc andb js arpl inc add test inc add add lahf adc xchg dec xlat pusha push ja dec jmp mov into push add or leave and push ljmp ret js add add jmp adc xchg test adc mov pop dec mov sbb mov add cwtl testb pop adc mov js dec jle (bad) dec pop and add push pop movsl or add mov jnp pop and ficompl push dec cmp (bad) mov ret cmpb daa call movsl out add or mov (bad) ficompl or jecxz dec adc and mov push add fwait xchg daa adc adc xchg cmp add fsts sbb sbb subl dec loop ret add push aad add data16 in outsb outsl add fisttpll (bad) lret pop cmp shrb dec arpl data16 dec pop xchg stos xor jbe sbb xor mov test mov add jecxz add cmp jbe testl arpl add cmp jb sbb xchg push mov test jmp pop dec push in add inc sbb popf push push outsl mov nop (bad) loop cmp lods add aaa sub sbb loope jo mov into (bad) lods jbe add mov sbb cmp add xchg cmpsb or jb insb jmp add sbb jge push fsubrl (bad) adc mov jno cmpsl dec ds fs add and std mov pop mov inc cli (bad) pop (bad) push cmp jg xor add dec sub test sar xor mov push jg and cmpl pop adc add les scas test push push inc mov jecxz ds test mov pop loop aas jae push push pop outsl icebp cmp ja or mov jp add and divb sub adc lret add push in add clc cs test pop push int int3 pop insl pop jmp outsl jb inc mov cmpsb jno lea mov push mov mov mov fnsave pop out push aas lds fwait push adc fimul icebp ss test jl rolb daa je pop jns mov and xor iret xchg je out pop pop fnstenv or jne xorl pop lds add (bad) sub mov jno pop sub add jo cli sbb movsb lds aaa outsb pop jae or and mov mov mov popa outsl pop js mov add and add pop fisttp dec roll (bad) aad or inc fisttpll cs dec loop,pt adc dec rcl adc cmp cli add xor cs cmp and dec add pusha mov movsl add cmp jg add dec ljmp mov inc mov jle mov outsb cmp inc and je repnz pop adc xlat insl xor add (bad) fsts ss dec lea std imul xchg andb xchg in lock pop iret add out andl push adc jmp mov xlat bound dec pusha and jns mov (bad) add push popa stos add xor pop test lock sub pusha shlb cmpsl psubw sub adc andl dec pushf outsb add xor (bad) rolb adc xor xorl cmc in (bad) std or ljmp cmp mov pop xchg cli dec test arpl outsl (bad) mov xchg mov loope adcl xchg sbb mov xor add adc arpl aam pop pop insb and outsl rcrl fs mov loop inc add into jge mov jl add outsl dec mov add in inc add aam ret out xchg idivb mov jb jge or bound cmp cmp mov xchg test fs sbb pop mov outsb jbe adc stos cmpsl pop testb dec or adc dec gs or fdivs pop dec cmp xor lcall adc test in imul std movsl popa dec add and sbb mov dec xchg add inc adc and add sbb xchg jb jge lahf repz inc jno push mov andl dec inc out cmpb sbb push sub or xchg mov lret es inc xchg mov dec fstp xchg jmp sub pop jg mov ds es das in add popa dec xlat cmpl (bad) lods add cmp mov lcall sahf sarb in cmp jmp inc aad sbb lds pusha xor pop cmp sub add add gs add or jb inc push or js push jl,pt add xor add in jnp out mov mov jge inc shll dec xchg mov in pop popa or dec or out inc push inc outsb repz add aad inc mov cld add cwtl cmpsl pusha xchg add (bad) mov cmp xlat cmc sar push adc mov xchg xor loop add andl (bad) mov jns in xchg test enter pop sbbb stc mov insl je add dec stos cmp movsl push sahf ret jmp lahf inc movsb inc cmp sti js rclb pusha lahf out popa sub mov jne daa mov add and inc add fs into and addl js sbb add (bad) mov dec add add fisttpll add xchg and adc push sahf inc shl cltd data16 stos xchg mov flds pop sarb adc cs js in jmp inc daa mov subl out mov xor push push push inc push add rcll fisttp insb testb addr16 aas sbbl sub lcall dec mov inc pop inc div push icebp add jl sahf jecxz add call outsl add push sub mov js rorl lahf adc imul push and cmp add mov and inc loopne popf or jl sbb dec (bad) mov or sbb sbb sub test clc mov add mov (bad) cmp add arpl xchg add and sbb testb add add lret scas movl sbbb roll loopne das (bad) out adc add ds xchg cmp loope add nop xor test cmp sbb mov popf out inc es fcoms test xchg sub and add testl mov les add adc test mov add andl js scas out jo cmovo lret add in add (bad) ljmp inc js leave imul testl ss (bad) lock mov mov mov pop dec pop test (bad) add add nop std and dec pusha pop jg idivl imul add add mov dec xor mov pop pop js add and clc jnp add in repnz jmp das cmp mov jne pusha icebp inc jae xchg fdivrs jecxz fs lods pop dec (bad) pop fistp mov push push negl jmp lock pusha mov mov fcomp add roll push rorl and rolb sub jmp sbb push add mov adc sub dec test movsb ja add add (bad) stos mov xchg mov mov (bad) testb shl adc scas arpl pop jg mov or sahf inc sub and test mov push cld xchg fcmove inc mov outsl adc sbb jl daa adcl add testl xchg aam push cmp jb fnop add inc rcrb jmp pop add jmp jne add fwait push les jnp xorb out adc mov xchg loopne pusha mov fisttpll xchg sbbb pop and cmpl add addr16 outsl mov mov and cmp imul add cmp cmpb mov pushf xor dec es sub outsl ret add ret fimul add inc imul fwait add aad ja dec jge notl fistpl out mov push popa cmp stc xchg dec add mov pusha out push int3 addl pop push cmc jbe lods sub fxtract jp and add rorb add mov add pushf loopne or xchg add xlat test push int3 adc add push ss pop pop cmc pop pusha dec xor shlb mov push jb sub mov call addr16 add adc repz pop mov jns jb dec loop call pusha sub negb push lods add sub cmpsl push aas mov add fadds xor mov add jl lea and (bad) in jb adc sbb xchg and pop xchg insb dec out mov pushf add pop sub mov (bad) fildl xlat add add add movsb push add fcomi in pop pop lret add sbb insb add iret cmpsb cmp call test add repz add cli (bad) and add rcll add je arpl test out inc cmpl pop mov outsb add popa imul stc push gs sub mov adc int3 test outsb lsl mov mov xor lret push dec pop ss lds mov cltd add pushf stc daa clc dec les ret sbb push sbb dec mov (bad) clc andl sub mov mov cld and mov imul dec repnz adc mov faddl xchg pusha decl add mov cmpl insb repz fild sbb sarb ljmp pop jns clc push (bad) scas shlb std mov or jecxz dec cmp mov popa xor cli movsb cmp xchg add or add cmp jbe loopne add sahf and cmp add cwtl xchg mov hlt (bad) (bad) pop fldl lahf fdivl mov cmp cmpsb mov jp test ja addr16 inc adc sbb aaa out add lods lds add fldpi xor rorb leave out rcr es (bad) push pop aam xchg cld add ret pop push sbb inc mov xor insb cltd ret lea or or nop bound add pop enter or fidivrl icebp inc mov jecxz shrb sti loopne cmp js or adc int les mov addl aad push (bad) jno jbe test outsb add cmp mov sti pop push xchg or adc aaa cmc mov enter push fs out jb into orl jp nop xlat mov (bad) pop lods jne sbb rorb mov mov push pushw add movsl scas pop xor fwait out clc sbb dec add into xor and mov add xor cltd mov sahf add sbb add std lock jecxz int cwtl cltd cmp push js cmp jl adc add xlat and cmp add into ficoml popf xchg nop icebp jge dec jbe lock sarb lds inc rolb adc cmp fdivrs fimull add jne addl cmpsb jl push sbb (bad) mov adcb jl pop add cmp ret push xchg stc mov nop fcomip cwtl fwait mov out (bad) cmp xor jo dec ret push subl ret cmp mov jbe popf popf fild repnz dec mov faddl mov dec stc scas add js cwtl and in push add (bad) movsl pop mov push add pop cltd sbb add in mull mov sbb movsb jbe out pop xor xor in add xchg mov or jl pop and subb int roll mov sbb mov jbe add pop mov and xchg or and cmpb cmp loope cltd inc xor lahf pop int3 xor add inc pop int cwtl gs mov and cmc fidiv push xchg add add mov inc jbe mov sub push sbb (bad) ret es scas cli mov lahf fwait iret add pop in mov clc add add in xlat roll cwtl sbb pop mov cli add into dec fild rclb mov xor movswl jo ret pop incl stos cs mov sub fistpl dec nop mov mov add add and fsubs jge jno js pusha cmp sbb pop (bad) cmp adc je add xchg std inc test addr16 push repz xlat incl jo rorl mov insl adc fisub pop test add loopne and lcall clc push test add push adc push cmpsb jno in add mov pusha sbb stos adc jecxz cmp lret xchg add cs add cmpsl cwtl mov subl lock mov pop nop cmp mov outsb out cld sbb fbld jno jo adc push call mov mov adc orl dec test xorl jecxz std cmp lds movsl mov sti jmp pushf jl lock je sbb push fdivs mov xchg test xchg aad sbb sbb mov xchg pop add ret mov cmp pop es add adc push jp add dec jmp enter insl lret jb mulb push (bad) mull mov adc mov cmp add aas push or add push xchg inc add lret add dec and ss mov neg movb daa sbb cwtl (bad) jne mov imul mov std test and into cmpsl or mov mov out test scas xchg nop sub popa (bad) lock mov adc mov add stc popa cmp call xchg push mov add or adc sbb cmc mov je subb push adc pop xchg push xor ljmp add dec cmp jge sub jl sub add aad xchg inc mov aam add adc js or sarl and gs pop pop stos jae scas xchg push add xchg push ficom mov add ljmp dec cmc or or jb push fst inc scas push add (bad) cmp sbb fwait cwtl cmp push mov jg aad or add fs mulb push mov and call add inc pop add adc sbb jb cmp adc jno in sbbl mov add mov add sbb fwait pop in add aam stc or dec push ss (bad) mov popa lods xchg pop inc ret mov push pop jmp xor imul lds mov icebp mov sti xchg add cmc pop pop cmp imul test incl adc mov add fadds hlt xchg inc fs stos sbb scas les or jns and adc add inc testb pop push adc dec add jge lahf xor add test add sub xchg lods add jns push insl repz lods push add xchg pop stc dec stos int test ja daa sbb add sbb cld xor sti jg adc jne add (bad) lret pusha add lock pop xor stos ja call jecxz cwtl add add out enter push lret scas fwait lds push add add add dec mov pop int3 mul dec push add addr16 pop loop data16 jmp dec push and test mov jbe rorb mov (bad) add mulb call pop andb fwait pop add xor jo in aas mov jns ret (bad) xchg add repnz cmp or stos test mov sbb aad inc (bad) fldcw jnp mov jp pop add mov movsb push add inc pop mov dec fdivr adc loope lahf add inc sub scas xchg cmpsl sbb pop jnp pop cmp xorl jb mov pusha lods pop (bad) inc repz add mov mov nop inc sbb loop (bad) out push orl xchg lods sbb cmpsl jg add push out pop (bad) and lea (bad) mov pop fmuls leave dec sbb cs enter push add inc push and pusha mov mov jle add mov add push dec xchg subl popf mov clc adc arpl dec add mov fldcw sbb imul test sbb inc and add mov add dec insl fiaddl adc xor ljmp bound das add xor popf enter (bad) mov imul (bad) es jnp in xchg add dec push and pop scas mov adc dec (bad) lock xchg xor mov sub mov xchg sbb add ljmp fwait gs das xchg stc fildl int3 test fstps outsb inc lea and leave xchg add pusha pop add jbe dec jne daa popf mov fistpl xor jnp movsb add jo xor push add push xor xlat ret cmp rcll dec dec addr16 add xchg das enter cmpsl test js cli std rolb pop int3 pop push lods (bad) cmp insb lahf bound aad pop and (bad) mov cmpsl add call xchg add sti hlt repz pop testl sbb repz aam test (bad) jne bnd lods add shlb xor dec mov sbb or pop xor add add arpl pop addl sub aaa push pop jle adc pusha inc movb jns add insb iret jle fist sub add push adcl add pusha dec out cmp mov shrb add inc mov loope mov mov cmp push adc int3 es push repz mov xchg dec add inc getsec cmp push repnz pushf jbe rorb add sar pop out cmp inc add (bad) dec and push (bad) (bad) popf add jle add sub mov sbb mov outsb mov dec jo fbld mov push (bad) push test and cltd ljmp push sub push test dec rorl lock mov outsb xchg and pop add (bad) mov or (bad) add repz in es add popa incl sub in adc popf and xchg ljmp or jmp loop adc pop cmp mov add lds jne (bad) ret mov aaa stc inc jb jae add movsl push push hlt icebp popa test push adc mov movsb add arpl popf inc xchg dec or pop mov add jnp cmp bound das mov push pop jnp xchg fstps add pop adc add cltd insb movsl add enter adc dec inc scas dec movsb add xor mov add lahf fisubl pop mov push aaa les pop andl inc fsts add adc gs add daa push cltd addb xchg jmp mov insb cmp fadds je cwtl sbb lock mov pusha repz jmp roll cmp xchg andb pushf loop cmp imul fisttpll pop push mov add in adc out push scas les and stos lds stc jae jle sbb add ds fcmovnbe fldl add mov idivl mov pusha sub loop mov lods add push add iret jae and add xor nop adc sbb adc leave cmp push (bad) in add xchg lret popa sub fbld xor push imul imul (bad) je push cmp or jl mov dec cs adc pop add add test push jae or pop jb push jne (bad) ds pop sub lahf cmpb sahf aad mov clc das add jo xor lahf dec add mov roll int3 lret pushf xchg add pop lret insl aaa jno addl pop jns cmp xor pop out (bad) not inc data16 inc sbb push cmp insb push ficom scas test cmp add mov rolb xor bound adc add jmp or push scas ss sbb lock add adc push or mov push aas inc xor jge xchg fsubrl ficompl xchg clc scas jle popf jne and aaa scas sub xor mov test add test jo cmp dec lock mov (bad) pusha data16 mov sbbl push sub test jno dec and mov jbe lods adc nop jp inc outsb sbb ret inc rcl mov pusha arpl cmp popf add test xor and lods sti jl add sub cmp insl jne mov xor push inc xchg fwait test xchg inc fidiv orl pop cmp add outsl mov mov out in and mov add adc inc or out adc add sbb jmp xchg sub mov push pop repz sub decb cmc testb lods push dec mov test add xor mov pop and inc cmc cli and scas js (bad) iret mov cmp test xchg and jecxz aad inc test lock dec dec pop sbbl push jl jge test in add mov out add sub and dec rcrb test dec (bad) loopne mov jg cltd es xchg lock fist mov test jae add jns (bad) add dec dec sbb jge loope pop mov out mov push pushf ret ss sub cmp stc (bad) mov fsts lock pusha jnp and aam test xchg add mov bound cmp dec int mov shrb (bad) xor inc pushf (bad) fimul es xchg insl ja lret mov loopne xor rclb pop dec loope in sub add dec pusha inc (bad) (bad) out (bad) jae ret add rep outsl int3 (bad) lcall push push inc mov add movsl inc ficomp movsb andl cmpl ret adc pop xor sub int repz js fiadd pop insb outsb adc mov xchg add mov cltd icebp pop fcoms fisubl xor mov pop in lahf mov push adc pop repz scas xor xor add pusha xchg lods ljmp xchg inc mov xchg rolb xor insb add mov mov lret cmp dec fdivrp push stos sti movsl enter jb shrb jmp repz push mov pop add inc outsb addl pop cwtl ficompl mov jl and xor push xchg ret mov push iret lds call add xchg bound inc add mov (bad) imul xlat test fidiv jg xchg and adc jns add cmp xchg mov sbb adc hlt xlat outsb push jns lods shr lret mov add sbb popa mov sbb mov (bad) mov lret and fnstsw mov jl (bad) jbe push xor fs out js add xor scas or inc jbe add lret outsb add (bad) popf mov (bad) dec jle movb jnp pop in ret rclb push lods push xor xchg mov out mov loop dec cltd jl add jb push adc icebp mov ret int3 inc loope jae in lret dec fs sbb cs mov mov out lods cltd mov fldt mov jbe ret add leave cmp lea mov xchg push and out js pop jno xchg pop xchg xchg ret and xor mov imul fcmovbe fwait dec mov mov pop rolb mov es and je push fistl imul mov sbbl stc loop push xchg mov sub sahf cmp push and push call dec add gs add xchg sub xchg fwait data16 jo add rol mov add inc (bad) mov xchg add xchg rcrl jo std cmc adc js adc cmp (bad) sahf fdivrs add lock push add mov rcrb push das or add push fld out or xor add int jno add (bad) imul nop in sti add sub add jnp les xor xchg or add in lret adc (bad) jmp cmp xchg xor mov (bad) mov aad les sahf sbb sub xchg leave popa (bad) roll fisubr push add sub add loope test jge mov mov sub sub lods cmp add push xchg or cmp inc xchg inc inc addb fisubrl sbb cmp out lods cmp (bad) jne mov add aam js xor andb repz shll mov test (bad) shr orb out aam jo mov lea sbbl adc jnp ret insl jmp mov push inc and pop xchg add add cmp jns or add lret aam mov mov add sbb sbb add xchg lods add or shlb popa push add adc es enter jecxz mov fidivrl fiadd psubq push add mov add cli cmp inc in aad out in add sbb stos mov loopne add pop xor add push in repz add push cmp jle jb adcw jno add and adc sahf lret in je jl xchg xchg or fmuls pop repz mov push bnd jo scas and xchg mov dec inc es pushf cmpsb inc inc (bad) ja mov call jo cmp dec jnp dec and out popa push push dec (bad) cld add mov add xor lahf jno mov mov push xchg and rcrl clc fcompl arpl rorl bound add xchg test sbb sub getsec les (bad) out sahf jno dec push push add xor ret or addl jmp jb mov push cwtl stos fdivrl adcl jecxz inc sub (bad) cmc mov mov mov call xchg jnp xchg xchg ret adc insl mov hlt add or mov (bad) inc mov fwait add dec xchg insb xor add xor rolb pop cmp loope dec add adc add aam sahf daa test sbb dec stos enter mov sbb flds jg sbb mov out pop inc ret ljmp imul jmp sbb mov repz mov and inc ja xchg movsl aad in dec (bad) add push xchg add jp mov add test gs add popf pop inc jge mov inc inc hlt adc enter jg lret pusha rcr add repz jae xchg in add pushf mov mov addr16 mov inc addl cmpsl call adc scas mov btc popf bnd add sbb pusha mov imul and inc js jbe mov push sub ficom (bad) push stos sbb es jmp test xchg adc fistl call jbe das xor cmpl pop fs fucomip arpl sub mov (bad) fisub (bad) push sbb pop in sbb ljmp ret sarl aam pop pop adc (bad) xor xlat clc jl add and stos inc sub push add pusha sbb ljmp jge and fiaddl xchg dec jg sub add adc jbe add mov mov jns add add jb imul sbb xor add jno das or xchg mov sbbb aam pop mov jno add pop repz sbb popf cmp mov dec xor xchg add cmp pop (bad) icebp mov imul pop js and and and test andb jbe push xchg scas roll iret mov jecxz push inc lea add inc cltd adc xorl mov movsb push sbb sub inc scas pop sbb movsb std es jnp sub pushw ds sub push jmp out push xchg mov and and stos int sbb (bad) xchg xchg inc and in dec test andb js jmp adc inc xchg xchg pop aas leave add out test dec loop mov popf aas add aad dec (bad) mov add adc enter popa shrl sub lock and add adc pop and test mov push sbb adc add add jle,pn jmp pop mov out out mov addl frstor mov enter mov out pusha jmp push adc pop cwtl add stc sbbl scas push aas xor test sti add jae ds mov rolb lock add pop jecxz add hlt repnz xchg cli lahf xorl popf pusha aas push sbb mov push lret mov and and (bad) jno add andl (bad) or (bad) imull std add jecxz nop xor mov movzbl test lea pop dec orl xchg inc cmp loopne fimull mov orb sbb pop push or add sub or popf ja (bad) cmp in add mov cmp and jecxz jb xor cmc loope xor inc sub push mov icebp lret leave add shl ss mov xor cmp data16 dec jae pop push push mov xor out pop mov or (bad) sub add xchg and cmpsb inc add mov and jp aas daa aad sbb inc and xchg jl subb inc sbb dec xchg stos (bad) or sahf push xor add or loop pop cs sbb cmp aas dec lahf outsl loopne test mov add rcl xchg jecxz xchg cltd pop pop add fucomp pop mov pop movsb test mov add fldcw es mov mov or lea cmp pusha fsubrl imul xorb inc jns ficom insb fnstenv add repz sub lret pushl loop jns (bad) mov call mov fiaddl (bad) int mov fs adcl mov mov js mov jmp mov cmp stc iret and arpl mov dec or sbb xchg xchg iret (bad) pop jns inc and cmpsl push sub mov mov and pop lods pop cltd inc add pop stc add imul mov es ficompl loop push jnp jge pusha bndldx fstps outsl ss adc add xor loop push test rol mov out cli xchg dec and js cmpsl add inc roll mov cmp or push add jae dec push cmc push icebp pop lds addr16 in fdivp xchg comiss sub pusha movsb pop inc inc lahf cmp loop xchg cld test mov incl inc xchg sub aas xor xor icebp inc dec imul dec into mov lret add push sub addr16 jno mov (bad) lcall sbb xlat out pusha sbb sbb xchg push movb xor iret mov rcrb or add psubw sbb add popa mov nop and adc mov jg mov lahf int3 popf inc insl aad loope leave sub jl add mov test jmp pop cmp sarl inc adc imull adc test ret pop iret int xor shrl mov mov mov mov push add and mov cmp leave xchg push sub adc add mov sub mov dec add aad mov jb or cmpl mov add pusha sti mov add enter and and pop andb pushf xchg gs mov add in add hlt xor cli in xchg jno,pt inc cmp jp pushf popf scas add xchg int3 jnp adc aas lret inc lds mov insl out (bad) jecxz popa jp lahf or adc mov mov xchg dec shrl cli inc mov test jns or dec mov stos lahf jnp jle add pop sbb mov inc test insl adc push mov dec andb push pop push in aaa jecxz add (bad) out ret mov (bad) imul add and in push jo mov add cmp scas jl jnp insl fimul outsb imul iret xor jmp add xchg lods sbb jno test dec aad mov push sarb jo aas pop jge (bad) sahf sarb jg scas incl arpl jo movsb popa cmp cmc pop mov pop mov jne dec aas mov mov pop pushl add push dec fiaddl test pusha out jne add xchg adc add xchg adc add or add stos in xchg push fisubrl pop pop std sub popf adcl push lods push sbb jecxz mov mov sub stos mov add adc mov add stos scas inc add cmp push pop xchg lret add cwtl stc out aas cmpsl add inc (bad) scas add outsl loopne outsb stos sub adc mull cmp inc push cld mov jp mov xorl push inc dec and fsubrl xor dec sbb sub mov or stc sub jbe push or pusha add mov xchg (bad) in add out cmpsl fs xchg jmp lods iret and xor outsb or adcl inc scas and cld (bad) (bad) xchg inc ret ds add mulb subl add dec pop repnz mov pop push cmp mov and add das sti pop mov insb or sub push cmp xchg xor jne add (bad) mov add inc test sbb addb inc (bad) push add jnp into in mov xorb lods je ret add xlat and inc in mov cltd adc fisttp roll jae daa pop fxch popf lret add popa mov out mov adcl and daa add xchg movl (bad) ljmp test mov testl push mov xchg sbbl stos pop icebp iret orl scas addl sbb add xor mov ja dec add cli mov cmp jge adc mov fs sbb les pop testb xchg in push add xor movsb shll cli test mov add stos add mov and lret push add packssdw iret sbb repnz xor pop push add mov test or lahf sub fs sub and adc push xor (bad) in dec iret jge add push sbb (bad) loop movsb lahf sub jbe sahf xor (bad) mov mov cmp (bad) lret dec add jb xor sti adcl fbstp (bad) mull dec add in pop inc pminub add mov pusha cmp mov push in add in mov loop addr16 ljmp inc jl je or insb sahf pop or add push ficom add imul add out lds (bad) mov push pop lcall xor aad pushf dec add jmp mov cmpsb cs or sub jle xchg mov jae jl pushf jg addb insb stos imul (bad) lods lcall loope loopne adcl lret rorb xchg xor test pop test mov movsl add test xorl dec daa mov mov (bad) add roll test aad xchg jno xchg cltd insb es cmp sbb mov mov jne add lds add ret clc ljmp fldenv add repz lcall pop add scas xchg pop sarb imul sti mov dec xchg lock sbb mov cs push push das jo ret mov mov xchg fwait dec adcl dec mov ljmp inc fs add rcl inc xor fldt pop cmc and in fsubr sub stos jne dec out sahf test mov rcr jno push loop pop jbe je addr16 add (bad) mov and pop lret add iret and xchg insb xchg sti add mov cmp jmp inc and sbbl adc jle popa insl mov cmpsl push pop std add pop call mov or into in sti repz outsl lock sub cmp xchg push pop adc sbbl sti inc push (bad) xchg sbbb int sbbl cwtl push icebp jge bswap inc stc loope xchg inc stos popf mov add int inc push nop out add add outsb aam add add jmp sub les push int lods in jnp,pt addb popa arpl fwait xor lods mov mov repz add push rclb verr lret dec insl enter andl and jmp and sbb lcall lods pusha inc aad addr16 push imul dec popf int fldl and ror movsl add (bad) push xorps cmp adc add xchg lcall jecxz (bad) push or jae add dec mov sub incb scas pushf movsl daa mov outsl jbe rclb cmp cmp outsb pop scas mov addb or into xchg sbb sbb je cmp push mov xor lret cmp push add adc (bad) pop add push pop sbb popf add lds add cmpsb minps je mov push idivl out fwait mov outsb sub push jge cmp and push (bad) sbb pusha push test add jns stos adc xchg inc mov add mov pushf cwtl (bad) or inc add mov sbb add or adc mov sahf pop (bad) mov and xchg xor rolb int fdivrl add mov xchg js test add sbb cmc xchg or pop bound sub mov cs mov xor xor cld xor xor add sahf sbb mov std dec test ja sub insl mov jbe pop and imul testl add add push clc lea leave push in or jae,pt add (bad) ljmp shrb cmpsb adc inc mov pusha or push xchg subl dec add or sub out add mov inc fstpt fmuls aad add xchg jmp shrb and lahf push (bad) add in mov pop add jge int3 mov jecxz icebp aam push mov mov sahf inc lods add xor add sbb push sbb es cli add push je scas into pop gs fs vmovntps out cmp in pop mov jp jg mov aaa inc push ljmp push jg insb pop cmp sub aam (bad) adc add rcr inc mov add xchg loope arpl adc in add out cld xorl push enter mov add sbb push adc orb lock das pop add cmp or sbb jno add outsl aas dec xchg add jecxz test lcall xchg and add pop jge xor inc mov loop (bad) pop xor clc add jge (bad) mov push mov ja stos pop mov aam out push add out (bad) insb mov in int add inc push add imul (bad) add sub push fmull inc jl jb aas push sub push xor mov add jae push jge xor inc lahf rcll aad fs add adc ret fistpll out (bad) cmc les or mov mov xchg jo rol mov mov mov pushf lahf insl pusha int3 mov sbb imul into leave dec les hlt loopne or or sub test icebp sarl arpl mov add mov xchg das add adc xchg pusha push cmpl fldl movsb adc stos push fiadd mov jo test lods int3 add jb xor add add cmp aad pop add add add add ficomp add push fucompp mov int3 add and or lahf (bad) add jns ds xor clc push call cmp jno out hlt imul xor jge cmp sbb in sub mov clc out pop lret mov or push dec mov mov pop in add cmpsl popf fdivrl ss sub inc pop into std xchg push jnp add decb jae sub mov jne (bad) out cmpsb or pop xor and add xchg repz add jle lods adc jmp add out aaa mov add mov mov or pusha mov lcall lods jne add outsl pop xchg imul and ljmp js mov inc add sbb pusha rcrb push cmp imul xchg xor mov mov movsb add loopne,pt push xchg aam and push cmp fwait cmp aas jp jo imul outsb add jl mov jle fs insl jb (bad) add not ja xlat cwtl lds xchg lret leave pop les pop push mov stc mov test es sbb xchg es dec les leave add mov test xorb test insb mov out pop add and push ljmp daa jge mov (bad) dec adcb cmp in or lret out (bad) insl xlat add add dec and pop (bad) mov rol cmp add daa mov lcall insb inc scas test push and inc add inc popa push mov jl rcl add mov inc dec loop bound adc pop sbb xchg sarl imul jg xor popf sub inc fs orb jno js lock pusha add out add add and xchg inc dec hlt add mov sbb sbb mov pop in (bad) push popf jne add adc sahf mov xchg xor stos lea add adc daa imul push clc add xor jg add push mov sbb sar xchg test (bad) dec sbbl push repnz inc mov sbb push sbbb sub imul ja aam in sbb cli jecxz sti sbb add imul test sub lcall or sub sbb pop add test pusha stos or sahf loop inc or mov inc rol sbb mov daa nop pop repnz scas add cli xor (bad) rolb mov jno ljmp js,pn sahf push loop dec rcll add push add pop jl shr add jo cmp and jno mov push push idivl jb aam push addl pop push std rcll sub out repz ret adc aad inc sbb mov or popf (bad) push les std xor xchg sahf scas push push jg add and cmp mov adc insl data16 sbb add popa mov xchg mov mov and add ret outsb fisttp xchg frstor jl loopne add mov mov test sbb push roll or jb (bad) std push xor int3 add orb mov cmp jecxz add scas push testb leave mov mov jo and add jl jle pop add jo inc xchg pop fildll mov adc jo insl cmp dec dec and mov mov push pop sub pop cltd test mov (bad) adc xor mov add adc sub subb xor add sbb sbb inc push mov test and adc push out sti jo add dec in sub and rcrl mov adc shrl out cltd out loopne xchg movsb jg pop addl adc das sbb stos sub shlb lea shll add mov (bad) icebp jo cmp (bad) les arpl dec fistl testb mov int3 hlt les int and loopnew imul xchg xchg ljmp movsb std mov mov ss xchg add fwait xor pusha rcl mov fildll adc fiadd mov and pop lea sbb pop test cltd push cmpsl cmp add jmp jle sub cmpsb cmp call sbb out add push out xor adc inc (bad) clc mov or add in cmp push inc jbe pop add xor dec test aad loope lret push adc add scas std les xchg test aam sbb and fstpl add pop lcall addl inc mov add lcall and or add div (bad) mov xor xchg sbb jo inc loop lea popa xchg sti cltd es jmp mov lods xchg pop sbb fwait add or add add mov add (bad) pop movaps add and fcmovbe (bad) roll hlt and adc loopne mov pushl jecxz cmovp mov (bad) dec ja clc mov push int ds in cmpsb pop mov or push subl fmul loopne ljmp add hlt mov jo sub ret stos mov or lea jmp hlt cmp pop cld pop xor das mov cmpb mov lcall mov add in jo pop jge and incl xchg inc jle cli je add dec mov add imul rcll add out aas cmp mov push dec fbstp add add rol lcall inc adc push out add mov call cmpsl pop or test test imul xor or add or js lods add rcll out cltd add xchg test push repnz in add lea pop mov add inc movsb jb xchg mov data16 add adc pushf push roll (bad) xor mov jne mov mov (bad) stos ret cld (bad) gs xchg mov int fld scas imul xchg outsb or in dec (bad) (bad) inc sbb adc mov fmull pop sub and add inc pop and dec add and hlt popf cli add loop cmp xlat add popa or lods and push sbb cli sbb dec pop add xchg nop cwtl adc pop jmp jae mov aas stos out cmpsl sbb xor je add (bad) mov xor and jecxz,pn psraw mov jecxz repz subl mov pop or scas mov lahf mov dec sub repz lcall or fs lret shll push loope lea popa sbb ffreep add std out add xor add insb xor xchg leave add cmpsb sbb out add add mov pop mov shl mov mov repnz inc push jns fisubrl mov ljmp xchg in mov ljmp add in hlt or loop ucomiss lock pop or leave int3 xor add cmc sarl inc jl (bad) pop xchg xor movsl or (bad) jmp repnz cmp cmp sti xchg (bad) and enter movsb xor ljmp sbb mov adc in stos idivb or jns pushf mov inc and rol jg js sbb pop add inc sub or sbb sub ljmp mov sbb xchg shll loopne aam add push xchg aaa jg jns add daa pop bound add add cli mov lret xchg out cmpsl xor adc and add xchg insl movsl add ss xor int3 repnz (bad) jg mov mov sahf xor mov imul pop subl push push cmp and rclb push sub inc shld inc es (bad) xor outsl in pusha cmpsl cmp pop sbb fstpt add (bad) xor (bad) xchg andl dec mov mov push arpl jns jmp insl or mov lods loopne add mov and lahf out hlt jle mov pop scas outsl mov inc fwait add or pusha adc out add je mov add ljmp add jle xlat add int3 ret cmpsl das add or lret imul push in test popf mov add xor aam pop inc mov mov mov add xchg push push ss add xorl jo repnz les loope frstor dec push out sbb (bad) pop cli cmp add test loope inc repz fwait xor subl sub mov stos subl xor fcmovb jle insb adc dec cmp lods add punpcklbw xchg xlat subl (bad) dec push or cmpsb lock jb pusha (bad) mov in pop sarl cmc add testb and sub andl jno (bad) xor mov prefetchnta pusha dec std push inc pop adc cmp add sbb subl imul (bad) loope (bad) subl adc popa icebp addl pop gs add pop pop flds jle push lret movsl jae aad mov imul loope pop outsl jns sbb and nop (bad) leave push dec xchg into fiaddl shrb sbb inc lods outsb add (bad) xor (bad) mov mov sub imul inc inc sbbb xor sahf xchg cltd cli add push inc mov xchg add nop cmpl and add in inc in cmp jne addl fs (bad) mov lods cmp data16 dec lcall pusha mov insl pop out (bad) rolb pusha push in fadds add subl sbb and add jns xchg cli punpckldq jl sti mov add mov ficom cmc dec sub mov movsb add mov mov pop mov mov cmp das fxch xchg xchg push add ret lret pop mov xor orl jae,pt add mov pop add fnstsw sar repnz jo mov les mov add outsl sub mov pop push imul add inc mov xchg loope jge roll insl mov jbe lea cs pop (bad) push pusha mov ja cmp cmp ficom (bad) xor xor mov and test pusha adc xchg sub jmp clc pop lock pop mov sbb xor imul in push xlat cwtl add cmp leave adc add jne and std mov js push dec test pop cmp push mov mov test sahf out cwtl xchg packsswb testl pop add nop mov jl mov ss add incl addl (bad) js loope pop push cmp icebp xchg jae outsl cmp jne jo je push dec or xor add lea dec mov xor jne jmp add (bad) sbb imul sub push aaa dec inc pusha pusha or xlat or es dec nop pusha sbb lahf xor adcb pushf rolb add sahf add add sub xchg rcr jle cld pop es mov push push jo add mov out push (bad) pusha test sbbb jp mov popa stos mov insb das add test ret scas add and mov imul cltd addl lret lods subl (bad) dec xor cltd xlat jns (bad) fstpt add or sub int3 pop and mov push movl in pop testb jge inc adcl push push lret cltd sub pushf sub inc or push bound aaa push fsubrl sub pushf and adc fdivrs jno test into mov or fwait scas mov movsb pushl mov inc movsl add mov lret add dec cmp shr cwtl jg sbb add mull mov inc mov xchg popa int push adc jg fbstp test clc pop outsb loopne jnp testl popf cmp push cmp sbb test and (bad) jne mov xor push add mov nop (bad) xor cmpl (bad) pop adc int3 add push outsb inc das and (bad) mov dec sbb mov es leave clc pop jo cmp ret insb sarl inc add dec sub call push jg and add or (bad) aam inc add (bad) mov (bad) pop lds sbb add stos iret pop popa scas mov sbb lcall mov inc outsb popf inc adc adc jns clc mov in xchg pop dec cs cmc sub add enter sub dec add pop pop hlt add repz cmpl rcl xor lret pop ljmp clc mov and pop xchg icebp xchg out cmp or lret add pop jge xor dec addb scas out cmpsb in je and fisubl mov cmc arpl fmul adc inc add sbb adc xor xchg mov (bad) and rclb movsb xor int3 mov add jmp mov push stc or dec add adc mov pop or test daa inc loopne fs cld add test cmp sub inc out fcoms push or add (bad) aad sub int3 push pop dec dec inc enter sub inc add mov outsl jmp fucom dec fs xchg testb xor scas add xchg add mov xchg sbb jg mov fstpt mov (bad) mov push xor mov and pusha bound jb movl test jnp push loope inc mov add and sbb js orl fiadd js jle addl add test subb dec inc lahf sub add loop (bad) add or mov xchg sbb (bad) dec and dec inc punpcklbw mov test mov add xchg or or lock enter push mov mov mov jecxz dec es pop pop push shll add aam inc call or add hlt jle fs dec mov push push pusha nop mov aas pop add aas loop mov cmp sbb aam or (bad) cld adc repz push push dec adc popa jle sub add fstpl enter sti cmpsl shl mov inc dec dec or add push scas push addr16 inc and pop push mov pop movsb fldl adc and add mov xor int pop cmp add mov cmp cmp mov outsb imul sbb jg mov push lock movsl in mov pop mov inc lcall cmp or leave dec pop add shl sbb jmp xchg push push adc xor das and (bad) out cmpsb iret xchg es lret add add cmpsl add mov pop add xor pop pop test in arpl sub add cmp mov mov fwait add jmp roll pushl push das or data16 icebp call dec inc add adcb fimul mov add push xchg enter in cli add adcl scas cld xchg xor ljmp popf and imul (bad) xor pop add mov aaa out into and jae or popf cld sub jge add xlat stos mov push add push in add xor add fnstcw mov or lcall cmovge sbb mov pop mov push jo add push outsl dec fs add int jp popa mov lods addr16 mov jle adcb outsl and pop xchg mov ljmp jo add sbb pop add jbe sub in push add test hlt and pop cld xor xor cmp xchg xlat je add mov mov and rorb (bad) pop fsubrl xchg test ja add push or add imul inc or icebp rolb (bad) lock pusha mov in add xchg mov sub inc add mov or arpl test jmp xchg mov xchg stos pushf (bad) loope mov add loopne lds push inc add fisubrl xor sbb (bad) cmc pop loopne out jecxz inc xor lods pop jle and add insb or addl cmp rorl inc mov fiadd (bad) js fisttpl add mov adc pop (bad) enter andl in loopne into sbb jne jne,pt inc insl adc gs xorb cmp xor bound and mov sbb fild and or fdiv pop add sub sbb lret or je jo fcomps or mov dec add and (bad) cld pop mov test mov add sub push xchg addl mov jl lret sbb push andl rcrb mov fcmovne js jg push and inc xchg xchg mov loop sbb subb jg outsb ficompl aas xchg dec (bad) shrb bound ftst push sub jo jecxz loopne xchg jmp xlat add jne push lahf daa inc inc cmp stos xchg xchg outsl popl sahf mov or add mov mov sub test sbb xor ret lods xor inc add mov addb (bad) pop xor inc add ror add push xchg jnp add add and and (bad) xlat (bad) xchg add xchg cld inc (bad) ret sarl sub sbb cmc outsb xor je push add mov cmp add sub imul outsl mov sbb inc orb jp leave cmp aaa (bad) pushl subb jg clc cwtl bound and sahf jo pushf mov mov add or movsl mov inc movsb push fldcw fistp (bad) cmpsb rcrb xorl les dec add lret mov push mov adc jle les pushf pop add cwtl rclb icebp inc (bad) sbb in imul lret mov jns pop mov jb jmp sahf daa hlt outsb movsl add les out fcompl or mov or add jle inc bound out cmp cmp lahf imul and (bad) mov mov sbb mov add sub lret negb in push in mov test test arpl fisubr push repnz rolb popa sub inc rolb xor xchg or jo xlat data16 subl add adc loope and add mov lahf add (bad) inc push imul lods cs or clc xchg inc ret or cmp and mov sti add sbb fimull sbb add stos cmp sbbl push and xchg add inc dec pop out sub xor scas sub lock push inc or in add test jno push adcl xchg pop sbb sub orb mov sbb divl insb add add test daa hlt jl and pusha jecxz add cmpsb bound add push out das sahf add xchg mov dec jecxz pusha jmp cmp arpl mov (bad) fsubs pop xor pop adc (bad) in xchg mov add mov andl (bad) mov sub sub and and addl dec (bad) mov cmp mov pop and icebp sti movsb mov jo xchg mov fnstcw or or test sub (bad) pop in (bad) cmpsb xor cmc or add inc cli pop jne and jmp (bad) mov (bad) xor pop jle add popa loopne pop xchg insb push add ljmp in push or jnp adc jge sub push or add and loopne add and inc aam ss rcll push mov inc fistpl xlat pusha stos add lret popa into pop flds cmp or sti inc sahf adc push or cmp mov es unpcklps add out jne add mov xor push in sub push dec sub and scas add (bad) mov test popa add lret cli push add xor inc add xchg ljmp and sub int mov clc add shrb pop insb mov add mov int3 add xchg fiaddl inc (bad) or mov stos dec sbb mov les add mov pop cmpsb xchg push icebp or add add sub sti lahf pop dec add push mov xor and lea idivb jg sbbl (bad) jae mov ja dec add adc mov lds pop adc lods pop jp and and inc cmc popa jno les pop cs adc hlt neg bound add cmp fnstcw jb push xor mov sbb jne sbb rcll push sub mov loopne insb pop sub sub popf dec or pop test sbb je cli and push js lods out jb cmp add jl dec mov cmp push clc lods xchg popf (bad) outsb out add sbb add xchg mov push dec mov lret sub js scas add data16 movsl mov fidivl jge xchg (bad) sub repnz fimul (bad) jp subb xchg pop mov cmp jge dec xor add sub mov add jge inc cmp cmp ljmp sub jno idivb incb push adc dec sub push add jnp xor xchg icebp xchg mov add xchg pop mov jbe sbb pop jne cmpsl icebp pop rorb cmpsb imul push fsubl out iret mov cmp lock dec cltd xlat xor add push test popa jae pop out insb dec xchg ds inc push fnstcw and sbb jp lods push add sub cmp sub xchg and jge add rcrl aam mov push push scas cmp sub loopne xchg add mov mov test pop adc jmp flds incl lret cld movsb jl push (bad) dec pusha movntq out sbb mov fistl addr16 les add xchg push sbb pusha jae mov push add pop roll mov mov dec add jne dec jb jns enter dec arpl fmull mov adc adcl dec xchg mov pop add lea cmp (bad) cmp push mov test repnz popf add add jnp adc add loop out dec push lock jb add cmp mov mov mov daa bound cmpsl cmpb leave adc hlt or lds mov adc jecxz and xchg xor add fildll jb and inc xchg test sbb outsl add sub adc sbb jbe push pop inc add cwtl dec flds sub aad add mov pop add push inc mov insl in popa mov add xchg inc adc adc jmp push add popl fmull inc popa or enter out xchg inc add push bnd mov cli jp bound lcall mov cmp icebp mov inc add add pop cwtl int add push in dec add sbb sbb (bad) sti ljmp pusha sbbl ss mov mov mov add jae pop lods mov enter sbb add mov stos push pop loopne lahf push push (bad) testl xor inc mov fadds dec pop idiv mov test sti fwait test das jo xor or hlt inc mov add inc ret and cmp add xor add add and je mov push inc scas add out and xor mov in cmp mov jno adc inc fiadd mov in mov and xorl push push add repnz add adc add xor jecxz xchg jle addl sti in push xor cli stc call pop xchg xor jbe (bad) in or jo inc out sub dec xchg daa insb sbb adc in cmpsb or ret inc lahf mov jo or js sti add movsb or add jl dec stos xor sbb push add fs inc roll jb decl lcall push lods xor mov fadds push mov les lock cmp lahf into and mov ds add shll mov xor and xchg (bad) push mov bound in push sbb addr16 repz lret ret pusha je sub or popa cmp je imul icebp mov mov add popl roll push sub das add insb or mov push add and xor scas cmpsb test dec or mov add push subl add mov in ficomp sbb mov and xor test inc mov popf aad jbe add push mov loope add lock cmp jo push mov xchg nop mov dec xchg (bad) pop add mov add pop fwait testb lret (bad) jo sub aam mov repz notl push add fisub add in sti sahf orl jecxz mov dec xor pop add fidivl (bad) push sub add push sbb add shr add cmpsl sbb out add jg pop adc jne in mov jl je cmp mov add lahf sarb cld icebp sub (bad) lea repz addl lea sbb sarl mov sub adc add hlt and add repz xor jo push mov fist enter popf add xchg ljmp inc jb scas pop dec jp pop adc cmp lret and outsb and mov (bad) push adcl lahf or xchg lock add sar call add and outsb popa incb inc lods push cli mov jne enter iret je dec (bad) pop add sbb dec leave (bad) cmpl pusha int mov sub loope inc dec push mov into jmp pusha sti jg inc out test (bad) dec pop jns push fisubr add (bad) fistpl xchg jno (bad) mov adc loop dec leave fsubrs xor (bad) mov cwtl mov (bad) in or pusha add stos cmp xchg xchg sub and hlt add push jnp pop dec sbb stc jno aad lahf gs add pop dec add in pop or xlat dec lods test je fs xchg xchg loopne mov fld and insl nop stc gs ret or (bad) add ss xchg add mov mov cmp xchg cmc fsubrp ret dec mov push add les incl add scas (bad) xlat xor iret ds mov insb out xor add cli inc fiadd mov or sub cwtl add fidivl cmpsb loope add notb add bound ss jp add fcmovnb push adc or add sbb int3 jl andl outsb add adc movsl pop pop cmp adc stc mov inc mov lcall test add xchg enter add fisub push stos jle,pn inc mov in imul push add daa jbe fs sti xor cmp (bad) pop shrl daa aam popf add leave xor pusha inc test (bad) cmc es out inc imul jae push ja add sub sbb add mov stc lcall mov add test sbb add jecxz mov push loope or les ljmp add test cmp mov test sub cmc icebp mov (bad) inc push add adcb mov cli mov lods je add out mov jg push (bad) sub mov ss inc stos scas call out cmp sbb adcb mov insl xchg adc or inc sahf in in loopne pslld enter adc test lds mov mov cltd or cmp push or nop and jbe movsb xor arpl xchg mov xchg pop (bad) scas xor js add sub or sub jne (bad) push mov js out pop jno (bad) imulb ss add mov sbb jo xchg add jns test mov mov push push popl push add (bad) mov add sub in repz cltd pop cmp outsb ret icebp and aam push int3 enter inc cmp add dec pop fwait sub inc sbb add (bad) or adc (bad) xor push dec add mov cmp adc pusha jg out inc sub popf aam pop in mov pop pop sub clc (bad) cmp push in add insb fisttpl add or dec add out fsubrs add jbe add xor cmpsl mov xchg adc rclb add (bad) decb out lcall inc test test mov test push inc jo add mov subb pop adc jl push add hlt mov mov xchg or out into xchg insb loop add push orl movb bound mov jnp mov rcll out adc (bad) aam push ret add in das jno mov sub test xor jo rorl loopne rcll push cmc subl mov test fildl into mov add or add xchg outsl sbb mov mov dec add sub ja mov sbb scas shr cmp pop xor or mov jne add pop aad mov lahf mov add shlb out rolb mov xchg jo hlt add jmp add inc mov out (bad) cmp inc aad xor addr16 pop add and (bad) push mov fucomi dec imul add mov jge jbe jmp addb push fstps add addr16 cmpsl aad aaa add sar cmp addl (bad) mov stc mov or cmp lea mov pop dec js,pt pop sti roll int push dec loopne inc or popl pushf xchg pop icebp lahf cmp add and ja mov pushf dec push xchg pop cmp push cmp add adc mov mov out ffreep loope loopne pop pop (bad) mov add pop and fisubl push std outsl push dec add pop lea (bad) int3 xchg dec xchg getsec xor ret fsub test rclb cli lcall in dec lret and pop rclb dec bound jl int3 sub xchg test cltd pusha jb inc add cmp (bad) push in popf adc inc out fs lea ja mov mov push imul pop sub adc out fist add enter mov push add adc xchg fnstcw adc es add xor mov add lahf cli inc mov arpl mov jp imul cld or loopne aam into jo push inc add jp mov jb dec add incl and mov mov sub sub das jb lods in or adc cmp cmpsb xchg push xchg (bad) outsl pop xor or or sub int3 sbb add std inc ljmp xor xor jo test loopne jecxz adc jl adc ljmp xchg fisubrl push stos mov imul adc jo add and mov sti es mov test mov cmp or je fiaddl mov (bad) xor pop test and pop push xor nop mov lret pop inc adc add mov cwtl dec xchg rorb cmp cmp add movsl imull test jb inc repnz popf xor mov push mov mov popf adc add and sti cld adc push and test mov pop inc stc (bad) adc les out cmpsl add rorl add sub in add xchg dec add leave xlat xchg jecxz sbb add jmp mov call aas and mov (bad) lock xchg (bad) push jmp pop sbb cltd inc push mov mov loope lahf add test ds jmp sbb inc int loop xchg lret dec jne dec cwtl cmpl dec mov cmp dec xor xchg pop es xor push call pop add in push icebp mov cmp or xchg loope ss cmp negl cltd adc jmp daa and pop lds xchg dec adcl mov mov jbe and push or lcall add (bad) xlat and xor inc sahf jecxz add or sbb icebp lret pusha mov pop pop pop arpl cli adc fsubrl or adc jns add jbe jb outsb cmp or inc arpl sub add popa (bad) and (bad) rolb add movsl mov or pushf sbb pusha jecxz pop push cmp js imul sbb dec pop mov mov add js or sub add fldl lcall or xchg pop or push xor sti push pop sbb dec add mov dec sbb cmp mov mov sub push push jns adc loopne mov jbe inc or outsb call arpl inc fs pop and mov mov mov repnz js jp imulb adc cltd pop pop jge jo sbb aam divl into push dec jo mov in jl cmpsb and mov cs mov lahf fadds adc out inc xchg jmp rcr adc push push or dec pusha subb jnp (bad) pushf aaa insl jns subb mov sub mov out orl std js data16 jle hlt sarl ljmp jbe ja cmc gs test imul ds sub pop jno xor add (bad) mov repnz cmc or adc add mov (bad) add lret sbb je ja sarb add popa add jle add sbb cmp add push int jle mov orb inc xchg sbbl jbe dec fistpll inc mov jnp mov ljmp add dec mov mov dec adc xchg cmpsb cmc xchg add mov fldenv (bad) mov imul xchg mov inc and inc lahf inc pop inc test cwtl les push test mov sbb jbe mov cmp lahf inc (bad) outsl mov sti out es mov jg test or mov add insb es pop fdecstp xchg mov mov or add mov adc push in mov insb lods test in and jmp push sub sub pushl cmp ds dec js popf add lods jg sub in addb negb dec mov add sub mov lcall pop add dec paddb flds repnz push push xchg ret out xchg int clc dec mov bound incb movsl dec nop rclb cmpsb mov sahf fucomp ret lock inc xor sbb add outsl mov imul push out lret je call add or es mov add cld fcoml push shll push inc dec sbb fisttpl in xor or add pushf pusha adc push fiadd inc shll dec xor mov jo roll add pop jnp cmc add pop scas xchg add (bad) in xchg shlb jle xorl out jmp jo test jne mov faddl sbb or jp jg add in xchg fwait pop test out dec inc add pop ja or add (bad) cmc das mov add push pusha arpl jnp lock enter push lods lcall adc je testb stos movsb fbstp sbb outsl (bad) sub xchg jecxz orb popf lcall arpl ds add pop stos jns mov adcl pusha into and cmovno mov jl sub pop jle sbb add scas adc push mov cmc aas pusha jl or jne test sbb fistpll cs jo jg add pop mov add cmp jecxz js loop push (bad) clc mov jle xchg xchg jne lds adcb imul push xchg into arpl pop pop mov sub inc xor push sbb and icebp (bad) mov pusha xor add mov dec nop imul mov mov mov std pushf add lahf (bad) and dec sbb daa flds pop push mov out pop inc or push mov lods gs ds add outsl ljmp pop add aad arpl push add and sti mov add iret and sbb add adc add in pop arpl insb loope enter adc xchg out add add int3 mov sub loopne mov sbb and pushl in out add jbe js add jg je,pt add pushf cmp outsl insb jo clc addl (bad) add cmp mov mov cmpl sub stc aaa push add jle xchg fiadd cmpsb pop out insb sbb push gs dec mov jg add scas dec cmp cwtl aad pop stc loop fnsave movsb mov xor push sbb andb fdivrl pop add cwtl enter sbb jns add aam test mov jl or dec xor bound dec add loop push add leave ja loope cmpsb sub test push fs jo gs (bad) pushl int3 xchg pop cmp and js icebp xor popl rcll pop aad mov add insl cmp add inc sbb adc jns fadds cmpsb (bad) icebp test sbb imul adc repnz inc loopne sbb xor sbb xor jp and adc sub popf sti lret adcl jb jae add clc into popa sbb add stc ja add test adc setb xlat mov add jge pusha adc mov add mov mov add stos aam add mov inc sbb pop data16 add negl movsb add stos mov xor add sbb mov add outsb sub addb test jecxz loop fyl2x inc jl aam cmp add sahf pop fildl cmp cli pusha lock lea inc push dec imul enter jl jp cmp xchg and aad add mov dec push xchg idivl lods sub clc pop add lods xchg pop pushf mov xor add add adc add cwtl xchg pand and jno jbe mov add in lea dec test cmp push xor sbb push xchg adc sbb fiaddl sub cmc loopne dec or inc out (bad) mov xchg in mov ret jmp cmp or pop sti aas jns add sbb stos add imul cmp xchg sub rcll pop mov jno mov inc xor test adc inc jo jle add call or adc mov repnz add sub js out dec hlt add loope lret sbb cmp (bad) jae add js incb lock cmp mov mov pop (bad) mov test push int3 test dec bound pop outsl lea pop jg stos inc or mov inc adc cmp lods lea adc cmp xchg and std imull pinsrw fild or push roll popa cwtl rolb jo cmp dec arpl cmp sbb or add enter les popf movsb mov lock je push sbb add bound rcr xor jmp js push jmp add cltd mov add in movsl roll adc pop xlat ffreep jle push fsts je dec pusha add or jp adc rolb sub or loopew int add into inc fcompl je,pt xchg mov sub add push clc in sub iret adcl lcall sbb lret fwait inc or jecxz outsl outsb ljmp adc aam dec and std add iret call sub adc movsb in add mov adc dec jne test adcl xor add inc data16 add add enter lods movsb mov test jmp mov ja xchg lds imul sub lods or cmp jns jno sub andl fsubrl pop xchg and mov adc add push std inc dec and mov stc push add (bad) cmp ljmp bound jne mov mov mov ffreep aas jmp jle mov xchg (bad) fisubl adc sbb jecxz das fidiv lods sahf push mov cltd repnz mov push popa std pusha mov mov xchg jne insb scas mov std mov xorl sub cmp lahf add rcrl and jns add lahf test add push pop inc mov loopne cmp cmp push push int push pop xor lods int3 mov add movsb ret daa jecxz rolb (bad) outsl fistpl add (bad) xor movsb jge mov aam add loope das and outsl push call (bad) out std mov mov repz iret sbb mov push dec jge xor loopne mov and mov mov out test insb jae xor sar add mov aas push int3 or add (bad) (bad) std push mov cmp pop icebp xchg out out inc dec push adc and sub (bad) mov push popf (bad) mov lock lea inc dec pop into lahf fildl out out inc push jl das bound push jmp jo add pop hlt mov jne xor addb clc inc push repz sbb bound sbb outsl pusha jbe mov es repnz fsubs mov ds or js push or lods add repz cmc insb cmp addl and sub push xor (bad) mov (bad) stos mov outsb (bad) mov dec push jbe sbbl sbb push add adc xchg sbb jns,pt add jp mov aaa jle push mov add dec mov sbb scas xor push fstpl jne cmp iret jp jge add test xchg mov inc pop add fchs rcrl scas jae pop pusha mov jne xor dec xor push nop pop sbb xchg dec rorb aam out or (bad) negl sbbb inc arpl repz dec mov jo and xor aaa inc aaa mov ljmp call out adc mov xorl jae add fimul in jno xorl lret xor sti sbb cs adc in sbbl daa jge and stc cmpsl fildll popa pusha shrl aaa add mov xchg pushf int3 cli lahf pop mov push jno sbb aam ja add add loopne jmp add mov jo and or xchg jo fild sbb pop insb jne cmpl mov push add sti out std aam popa add xor mov push imul mov mov add inc fdivrl loope inc out add fidivl sbbl jecxz test ss add sarb add rolb cld notl scas push pusha xchg aaa fldl push movsb inc mov imul lods mov adc pop std cmp inc nop xor pop xor fdivr sbb int3 inc mov rcrb loopne mov xor and es add inc sub mov xchg lds or int scas repz fwait and push andl xchg sti mov std inc inc push js cmp or dec (bad) (bad) lcall cwtl adc nop inc xor or stc xchg leave push and aam and mov out xchg jle sub popf aad add (bad) repz push add push cmc or cmpsl add add cmp sub imul adc push adc lret sahf scas pop ds insl push add adc sub (bad) push mov cwtl inc xchg call out push insl outsl movsl mov lret or rclb xchg jp and sub jp les add pop mov and scas out xchg (bad) (bad) pop in (bad) out jae je andb add add mov cmc mov push jae push lret jo mov xchg cli and push jnp add or cli lods or sub sub mov cmpsb leave loopne add and enter inc pop mov cmp ds jbe sub pop sub roll icebp inc and out xlat and add sub cwtl pusha sbb mov cltd mov xchg lock (bad) mov and mov loop hlt add xchg jmp xor nop fadds std push and lss sub aas xchg lods (bad) out jecxz (bad) pusha and ja ret add dec add and jmp xlat sarl aas sbb shr xor repz xor (bad) in sub add cmpsb mov add mov hlt (bad) pop shr fsubs test jne xorb das add divb (bad) fnsave out cld bnd stc aaa sarb add test add inc fcmovnb pusha das (bad) sti mov sub cld or xchg xor leave repnz jnp leave sub add xor ret sbbl jbe adc cwtl sbb xor enter adc call sbb sub push push mov and dec pusha adc ds and inc orl jge jmp pusha xorl sbb mov pop mov sub and sbb test out inc jbe movsl lahf dec (bad) (bad) repnz pusha inc push add xchg jns or add push adc add aad ljmp jne lret cmp dec test iret jp jg add es in adc push xchg lret xor add fisubr (bad) sbb out xchg out push (bad) jne leave mov lahf or mov add js mov leave (bad) xor xor sbb jbe inc cli icebp adc mov mov test jecxz loope or sti sub lods pop pop in and int3 and mov scas lock xor js ficoml pop mov add push inc xchg xlat or mov fimul inc pushf sub dec sub push inc rclb mov scas shr in in inc and cwtl add iret sbb jl imul pusha je jne xchg jecxz jnp jl sub adc lea inc dec (bad) (bad) pop cli stc add sub call ljmp popa sbb xchg fstpl jg sahf jno sbb sub incb mov arpl push imul test or (bad) in push subb inc sub xchg xchg jle test mov add idiv xchg (bad) pop rcrl mov pop addr16 xlat pop lret xchg imul xchg faddl add push or lods add call mov imull inc pop leave add xchg xchg icebp push jno add lahf ffreep mov lret sbb xor rolb lock xchg ficom inc or cwtl mov xor cmpsl ljmp (bad) cmp jnp test sbb shll mov add jo aaa push test into pop js xor int3 inc pop push cs jg cmpsb pop sbb or call add fadds fs ljmp cmpsl stc in jnp sbb add push mov add scas jp mov and dec dec fstps je (bad) xchg orb add jae add push rolb cmp inc inc xor add and add xchg mov pop je add icebp out mov jbe mov arpl adc and inc jns mov jl pop repz or jbe add in mov or cmp sbb jl dec rorl dec out les jl add push push subl (bad) xor or add or sub sbb mov push pop sub inc jp inc pop pushf iret xchg in add cwtl and xlat mov into push js sahf and das mov and dec sub addr16 out loopne outsl mov jp add addl push add std or or ja (bad) pop pop scas sti sbb insl mov imul leave sub or mov ds push push cmp pop in mov scas (bad) lods aam pop nop movsb xorl adc ret and adcb out fisub mov cmp pop repz cmp cmp mov (bad) hlt jecxz sub (bad) xor add or add add add push xchg cmp push add je addb decb out stos push cmp xchg inc test lds sbb add icebp (bad) mov fisubr dec inc pop sub in pushf mov imulb add lahf and hlt add sbb adc jae push subl push and add mov loop xor cmp mov aam repnz mov or iret int3 sbb adc stos cmp pop and dec add xor ret sbb loop pop out jp aaa add mov add out or inc add push addl rcll out inc in sahf data16 int test sub push cmp add int or push add test out cwtl rorl rcr incb ret pop inc add dec punpcklwd jl dec jecxz xor cmpsb push cli sahf add add lahf decb out (bad) out outsl fwait add push aam jmp inc xchg add sbbb sub add mov out sbbl fidiv popa pop xlat jo add push out add push xchg stc bound sbb dec push jecxz mov shll adc xor dec and mov mov cmp jno ja add mov rolb add adc lahf sub pop xchg pop cltd testb (bad) mov je jmp adc add sub add in and inc (bad) jnp push arpl jbe add push pop add aam (bad) out insl push add (bad) mov push cmp sbb cwtl cmp fs outsl insl adc mov jl add inc movsb leave loopne testl data16 roll push roll xchg addl lods inc shr add and std leave insb lahf lret add or out mov jnp ds (bad) fcomi test cwtl xor pop cmpsb xor (bad) js inc js ret ret jmp cmp add test push push cld or lahf scas push out add add cmpsl enter xchg jno je mov clc in mulb mov (bad) cltd add bound add pop jo mov add lahf jmp add add adcl sub sahf arpl add jbe mov neg or add inc movsl add das inc cwtl mov and cmp jp sbb mov icebp (bad) in lahf int3 mov or js fstpt movsb sbb push xor inc dec dec (bad) arpl es add or push and test add data16 gs mov repz push cmp sub add dec sbb mov add jmp pop jae pop inc mov imul ds daa xchg insl cmpsl mov lea repnz test loope pop inc cmpsb pop sbb cltd adc pusha dec arpl leave sbb cmp add notl dec insb adc cmpsl roll lock mov add add ljmp fwait pop jp addb sbb int mov hlt push push add (bad) pusha fwait and cld add lret lock add dec pushf sub stc lcall add (bad) repnz push in xchg add clc dec fbstp mov inc fimul or push inc sub aas sbb add imul add aas sbb push add dec lea sub xchg jmp sbb mov sub and insb xchg pop in cld jbe add fldcw add pop (bad) xor add sub and lock rcl xlat sub nop cwtl into (bad) and int3 add jp int and bound outsl adc dec add lds add arpl lea add outsb xor andl mov mov adc decb mov push inc addl sbb scas add add enter add add push sbb dec xchg cmp sbb pop pop add cwtl xor add mov cmp (bad) push les or sbb rclb cmc mov mov push jnp add leave rcl pop pop decb mov in and pop cmpsb add gs pushf adc push jae or add loopne cmp in addr16 sbb xchg push push push sub inc add add je pop add adc es mov sti pop fiaddl or arpl lea test in ret rcrb and push repz pushf inc jmp lods jle add xchg mov adc or fisubr imul adc dec out sbb add dec call (bad) test ja test aaa sub es sub xchg fistpll inc sbb testl (bad) cs add or push mov push xlat inc int3 pop and jno dec sub inc push addl jo jne sbb sahf sub shr cmp nop cmp repz loope add pop add push dec mov mov (bad) sub mov or fcomps mov (bad) cmp add mov xor ficom mov setne mov push adc inc sbb xor scas lahf mov roll push out sbb out movsl mov fwait clc add cld jmp add adc add out fdivrs (bad) mov pmaxsw adc ret mov add jmp mov fwait jae xchg add lcall add dec push mov call mov outsl ret ds popl add xlat lds cmp (bad) xchg jecxz leave inc lds ds dec add out cmpsb cmovbe cmpsl pusha in jnp insb jo add adc cmp xchg xchg lds mov test push jbe lahf add mov mov or fsub add ror fisubrl bound cltd push js pop inc xor sti push jne test and add scas rclb cmp add bswap stos mov out orl pop xor sbb add dec into (bad) in insl add ja xor mov xor ds mov js cmpb push data16 cmpsb lods cmp lret and pusha add in sbb push fs ja les popf lds repnz xor in fstp ljmp test push add xor pop add inc dec icebp add xor lock fcmovu pop movsl push les inc or mov push leave push dec test outsb orl in sti mov popa pop add orl mov leave mov xchg adc mov jmp xchg repnz sbb addl rol je jae xchg add les xchg mov push cltd icebp popf xor cmp adcb push pop stos xchg arpl test dec int mov add xchg stos xchg clc sbb pop mov dec ljmp lods in mov sbbl sub stos jle mov and (bad) shlb xchg lea xchg xor mov xchg add (bad) mov mov add iret lret mov pop pop test lods (bad) push xor sti mov sub pop dec push pusha jne inc aad sbb adc mov fimul adc push add xor add lahf (bad) mov pushf mov iret sbb sub mov jmp test cwtl pop je stos add mov push imul lret ret and sub mov outsb push leave sub jmp (bad) push xor pop sub fucom add jne and mov pop orl dec push xchg into add pop mov add xor xchg mov cmpsb push out in xchg sarl (bad) cs jle sub fmulp pop and lret xlat movsl mov add fadd xor icebp add test inc add sti stos iret add in mov add and dec push xlat aad push ret or xchg add mov and push pop add push gs popf push cwtl mov jle or add arpl fdivrl cmp out add sbb orl pop int je sbbb jmp xor lods pusha push mov addr16 adc xor mov xchg pop xor sbb dec add (bad) pop lock mov stos xor inc cmc das std cld dec rorl loopne xchg add xor cmpsl lahf mov divl jae ficompl adc fs into hlt test dec out add call vorps lret imul or pop add xor ljmp or mov jo add inc lods push mov sub jne xchg mov icebp mul gs cli add mov pop cmc pop dec testl negb jg jae inc adc (bad) push sbb xchg idiv add divb pop dec out cltd test imul sbb push cmpl cmpb pop adc or xor (bad) sub cmpsb push out lahf ret add mov add fadds ret mov imul orl stc imul lods push int3 fildll repz jns cmp outsl pop cmpl or aas roll xchg mov add mov movsl clc mov cmp sub jo inc dec cmp jle add gs jae inc mov fnstcw (bad) mov cmp (bad) int3 and xor push add fiaddl in js lret add cmp in negl scas cmp xorl pop adc push add lahf loope lahf rolb inc das push subl mov jne add popf jae popl (bad) (bad) jl stc adc ljmp addb push sbb adc sub ja xchg add xor add faddl lret xor xchg scas add pop mov jp test push (bad) push inc add dec xlat add addr16 psllw sub cmp loopne xchg push mov mov jp mov cmp add mov push push (bad) repnz cmpb push sbb rcl adc incb rep add ljmp add (bad) lea push sti mov popf (bad) add inc sub cmc and enter fidivr add bound add rol mov dec inc fild mov cmova cmp add addb xchg or js les mov in in mov dec xlat cmpsb inc fldenv inc add or add xor daa fwait cmc mov call add sub into add fildll cld inc or lods xchg cli and or loope xor int add adc call orl mov inc icebp push lret jne insl xor add mov bound leave xor icebp and mov insb stos mov in xchg verw mov add pop jle sub lods out adc mov rorb or add sbb inc xchg mov add cmc mov inc popf add xor lahf add int adc sbbl cmp mov pop cmc mov inc push cmp jge aaa xchg add int inc push xor scas mov fsubr aas and (bad) and addl and and add (bad) mov jo sub in ljmp incl inc cmp add pop pusha in xchg or call mov sahf mov adc mov ficomp push jo mov inc out jmp fwait dec je add movsb cmp jo add pop pop jecxz sbb add jle aam xchg mov add lahf in add (bad) outsb aas push repnz push cltd inc lret and push sub fs aam inc adc pop test int3 call add mov fimull outsb mov jno les bound and add mov push mov dec jb test mov rolb mov pop sahf cltd and pop push (bad) cld jae add loop imul cmp and mov and (bad) lret pop sahf pusha mov mov fstl jg and test and out pop pop ja leave jo cmp sahf sub sub jmp adc push dec aad cmp add or mov jge inc sahf ljmp int3 jp call ds cmp aam (bad) push jl xchg sbb xchg push test jne push mov stos fisttp cltd xor rcr lret mov dec add pop xchg aaa mov das mov (bad) push outsb xor add push add mov pop jecxz and nop mov xchg jp push inc in xchg dec adc cmpsb mov push inc out or out inc test pop hlt and push add xchg imul addb loop cmpsl push hlt jg add dec jle bound icebp adcl add movsb ret lret enter out pop sub push add push gs mov push ret lock xlat push into xchg pop (bad) pop aas add mov in push push xchg enter negl push movsb ret and jecxz or adc push and les insb outsb inc push cmpsb lret add or popf aaa or cmp inc (bad) add (bad) mov add mov addr16 lahf sub add ficom push in xchg xor iret adc shll je imul adc cli fwait (bad) out cld sbbl xchg cmp push mov xchg and outsl inc int3 and je insb (bad) push iret sub add imul add jg je add scas adc xor std add sbb ds mov arpl or out mov dec mov daa and cs jae sahf addl (bad) adc and add gs stos orl outsb jg mov sbb lea mov xchg or pushf cmp pop icebp add ja sbb in outsb xor xchg pop roll or cmpsl out mov stos aam or les in add inc dec xor popl (bad) shrl popf cmp mov lret xchg pop cmc and xor aaa fiaddl shlb call add mov nop fwait xor dec icebp mov or or xor inc je push mov xchg or push jo divb subb and ret ljmp out andl clc push sub add cmpsb mov (bad) push add jo dec add mov fnstcw adc fistp cmp insl add mov add sbb mov pop popa and xor adc pop xor enter jns loop and add pop dec rol xchg sbb add popf or in cmp (bad) jg push adc cs cli pusha fxch push mov je cmp jle andb nop jp decb scas jne int3 cmc jmp ficom pop lret push dec xchg sub out verr mov scas (bad) in add or sub dec jp fisub or cltd or insl (bad) jb add jo xchg mov nop jmp jbe (bad) ret jp orl push push adc add xor inc cltd sub es mov leave mov ljmp jae arpl sbb rclb sbb je add adc dec dec xchg mov push cltd xor (bad) (bad) imul mov push push jnp mov mov es xchg roll xor pusha add imul jmp mov mov mov jno jo rcl jge push lret (bad) pop add fnstenv jbe,pt pop add add sub roll pop scas out xchg in jae loope cltd adc je mov imul pop or stos sbb xchg jno add sbb sub jle sub dec (bad) addr16 sbbb (bad) sub int3 mov pushfw inc in mov lods add imul add add dec sub call (bad) xor ss fmuls add lahf dec jg jns cmp pop adc in xchg lea add sbb repnz sbb cld add inc jp push stos insl out outsb jmp xchg or mov or add lock out clc inc jl xchg jp mov hlt push cmp sbb mov or loopne not cmovne inc adc mov gs mov adc pop add sub adc fdivrs xlat test mov (bad) fcoml add sub stc add xor scas repnz add pop push adc xchg pushf fnstsw fldenv jg cmp iret (bad) xor jle daa sub mov adc add lock movl push pop inc add mov mov push xor test in jl sbb (bad) mov in lea fwait inc out out add aas mov insb clc stos lds xchg incl icebp movl int and add sbb inc adc out xor push pop cmc (bad) mov leave pop sbb add push pop xchg and lahf mov fxch dec xor ja add sub dec inc andl fiaddl in sbb (bad) (bad) push add sbb mov movsl mov pop mov fisubl fiadd notl nop and scas pop hlt mov cmp push fidivr sub pop ret mov lea in mov xchg cltd add orb pop data16 mov fdivrl aam inc scas add (bad) mov rolb or pop cltd adcl and fsubrs faddl cmpsl sbb add neg lcall xchg mov push js (bad) mov mov add popa and (bad) mov hlt cmp and jnp push cmp andb mov outsb or jns sbb enter xchg out lret subb in push mov mov sbb insl jecxz pop add push popf cmpsb test mov pusha fdivrs orl jmp cwtl and pmuludq or xchg aas add mov add sbb jge push jle xchg mov jb (bad) mov inc loopne dec mov and mov push into (bad) push xchg loope mov inc aam pop data16 inc out sbb inc jne mov outsb test daa pop xchg push or mov xchg sbb data16 movsb jns add mov incb mov mov cmp inc subl jns push add ja mov addr16 lds xor cmpl jne push out leave in ljmp jns xchg pop call adc push shlb cmp add mov jnp aam jae fsts hlt es inc shrb in js arpl out adc cmc jb sbb pop and mov push scas cld dec add ja push mov loop mov je ljmp mov sub scas push dec les push fs popa add or xchg fmul dec adc test sub cmpsl add into mov enter xchg ret ss mull mov lahf cmp dec mov push adc mov inc pop xor stos lcall pushf add or adc push pushf clc xchg jnp in cmpsl in adc inc xlat rcll mov imul and mov repnz pushl jp out stos push inc sbb test in xor inc popf xchg roll sbb sub test add push mov pop cmpsl mov cwtl rcr loop test and fsts mov add or int3 and cwtl into add jnp and sbb cmp inc sti cmpsb pop add in add test daa push js add repz or and cli mov inc xor inc sub mov call int push push add push sbb add (bad) jbe fcoms adc cwtl pop sbb mov jl add imul sub (bad) fistpl insl or ret hlt movsl mov shrl push or xchg jbe lds add jno roll (bad) and pop cltd cmp inc push jo fisttpll sub test (bad) scas adc jno push mov push inc jns imul cwtl mov dec mov adc and lods (bad) or pop loope (bad) mov push hlt fildl and sbb pusha add pop outsl lea add xchg push mov xlat and cs xor (bad) ja mov push push mov add and js (bad) mov das addr16 jecxz sbbl mov mov add push insl stos add xchg inc imul add and lock lret push shrd add add or imulb add push pop out out add xor cli xchg cmpsb xor add inc sbb add mov xor pop pop add dec icebp imul add lods outsb inc aas hlt in and leave sbb jno,pn mov pushf inc stc inc jne addl popf cmp pop jae jns hlt pop push mov xchg mov lahf mov xor ja insb lods sti add inc pop lds not mov call aam fdivr push pop or repz adc adc sti movd adc add out stos aas mov shlb inc dec mov mov add or push cmpb and mov cmpsb cli test xchg icebp mov cmp jle add inc mov push ret push leave xor add mov add lea (bad) cltd das mov lret daa int3 les xchg xchg cmp pop arpl add pop test jns js push push std add sbb outsl inc int3 push sub test push out add push aaa or add push and add sbb (bad) mov jl jp rol loop fs aas add mov call and les test xchg add mov rclb jmp or int addb mov and xor dec sbbb cwtl dec cld or push mov (bad) cmpsl js shr pusha or push out jle add cmp jecxz jg lods jnp out sub xchg cmp pop lea cmp add push sub mov fwait xchg push test test mov xchg jns enter cmpsl xchg popf pusha loopne mov add jo add outsb xchg adc mov sbb outsb jl add data16 pop add lock sub dec dec and add and bound mov jp push imul ss flds mov xchg and sbbb mov loope adc sbbl loop pop fdivr and jge jne pushf push (bad) scas mov test jecxz test je sbbl dec aad dec iret sub in fs or (bad) jbe push mov mov addl loop add rcl pushf pop push cli push insb sub push dec jp pop sbb jge jl xor xchg add pop sub mov jmp and add lret js mov dec pushf sub add inc jbe jnp addb xor sbb push xor fidivrl stos inc clc out inc popf icebp into bound xor jg sub repz sahf mov testb lret mov lods cltd jb add imul add pop test in ljmp fs stos cmp add push add push sbb add (bad) jle add add jle jge mov jp pusha lret sub outsl push cmp cmpl add es jle add shr jl pop aaa (bad) push and add stos adc mov xchg lea cmpsl fcmovnb bound fcmove add pop or (bad) idivb dec adc or stos (bad) idivb inc leave fcoms loopne add mov decb inc push cmpsl push dec mov out add mov adc add add xor xorl in adc inc test or sub add (bad) or (bad) inc (bad) mov adcl adc popf mov cmpsb lods push add mov adc add sti mov and xor cld cltd jae (bad) arpl add inc jae mov add xor and lcall pushf sti movsl mov mov cmpl add jbe out add inc and sub pop mov add or xchg add push and jle cld add loop xchg jl (bad) mov int pop pop sarb andb add mov add pop mov mov add add cld mov ss aad (bad) cli sbb jp or add std rcll sub xor xor jl mov orl fdivl add or jge imul subb add int3 cld push pop xor add stos out pop dec adc add push add mov add inc push mov add cmc mov scas pop out out jbe xor cmp xchg cmp int3 into inc pusha das and add mov jecxz incb int lds out (bad) hlt arpl je dec call (bad) mov mov pop xor and aaa cmpl add add cmpsl mov stos inc loope pop int repz pop ds mov fdivrp sbb rolb mov mov cli subb pop ret nop jge lcall inc xchg dec add les jae add xchg sbb jmp out add fstps xchg add loope push add movsl sbb cmp xchg je enter lods adc pushl add pop push sub addr16 bnd mov pop in cld inc add mov mov push pushf daa push inc or int3 dec pop ja stos leave test jo jl pop cmp js cmp jne add mov sbb ja xorb call push imulb rcl xchg push icebp mov push (bad) loop insb sub add stc mov pop add (bad) xchg push inc in push pop xor repz add out mov pop push jge xor mov roll mov mov dec hlt push sbbl in jecxz add psadbw test push loopne lea mov cmp lret xchg add jb xchg xchg pushf mov loop fistl movsb sbb rcrb pop negl rcrl paddq xor enter xchg pop push scas add xchg inc call sbb or cmp and mov cmp inc add mov add jae jnp add and add dec adc (bad) mov jns xchg jmp sbb ret or incl in popa xor testl push mov jg sub (bad) push pop add scas lds pop jnp add in lret mov movsb add mov lds xchg jno add scas push inc fsqrt add jp sub mov nop ds fwait test lret add xlat lret pop xchg lock or add test je cwtl nop pop call xor push stc xorb jo mov mov sti sarl add cmp inc int mov jne xchg into mov or pop add add jnp pop add ss and aam push or sbb addr16 or or jb mov cmpsl pusha stos push pusha rolb mov loopne loope jb or inc movsb sub add rcll sbb jp aam adc xorl fs dec add mov xlat jo dec jge lods add add push cmp add dec test add insl and add sbb push push add lods nop popa mov sti and inc adc xchg test jno sti out enter push hlt add and (bad) jge xchg pusha mov bound stc addr16 or add mov xor dec das and stos or add pop out jne in add inc imul arpl inc sbb inc jge mov fisub push xlat stos adc add adc clc das fs and (bad) out loopne xor add pop fs cmc leave add (bad) mov inc push dec pusha fildl sahf add inc leave aam in mov sub pop pop jo pop jge fldl sti mov in and icebp std xchg mov int3 pop fisub cmp out arpl add add rcll add fldt mov or jp xor sbb inc add xchg in jge fcmovnu cmp out cmpsb (bad) stos add or xchg push mov push lcall push sub mov add js xchg pop je test adc mov push and inc cmp jb pop dec cs fnstenv push inc xor cmc pop push out cmpl insb mov ljmp and addr16 pusha jl (bad) call push loopne (bad) idiv mov or cmp fcoms mov add add xor add ret jnp roll outsb pusha das mov repz add dec add pop cmp jno (bad) mov lock mov sbb adc das subl sahf cmp inc fidivrl adc xchg insl nop aad fldenv ret add jecxz inc sub (bad) decl jmp in add xor str mov jnp mov xchg in int3 add xorb and jmp in les test mov rclb sbb gs outsl stos add mov fxam add sahf mov xchg jle sub int cmp out adc add aad and ds dec lret cmpl cwtl add test jbe add push das loopne stc mov int pop cmpsl incl pop jbe dec mov fadds pop call push hlt pop xchg push aaa pop mov and roll stos jae (bad) mov sahf add loop sub mov sbb xchg sbb jns rcrl add or rcl pushf jp out add (bad) inc das push aaa cmp cmp add xor (bad) mov inc scas or (bad) add ja,pn (bad) pop add stos scas leave gs fs xchg push and rorb data16 xchg xchg or insb sub xorb pusha jo (bad) ret add (bad) sub int in aam cmp or aad adc xadd (bad) lret push leave addb fnstenv icebp add adc or jmp and or clc jbe fs mov ret imul cli add dec push inc test jne xchg dec sbb sub sub sbb push int inc pushf sbb lahf std test add cmp fnop cli cwtl push add aas mov sahf (bad) hlt add sub and orl or nop xchg sbb and push add pop mov add imul add xchg ss bound movl cli insb jnp cmp jae cmp xor cmp pop add in (bad) or ja jl add lea (bad) sbb shl in add add xchg cltd sub add cmpsb cmp xchg push inc adc loopne pop (bad) flds push mov jnp rcrb sub jl xor add pop movsb sub data16 orb inc jecxz mov ficompl add insl jecxz jge movsl std inc jle in int3 add jbe jl incl (bad) in stos mov in mov xor rolb xchg jb ja pop arpl inc mov dec fwait add jmp lcall add inc inc xchg (bad) jns jl xor pushf stos add mov popf orl mov sub sti lods and xor test cmpsb push add scas mov dec je jbe push xor cltd or les mov mov and add mov push iret jno les add lahf clc push push inc mov add rcll add mov mov jge or and mov and test call mov dec xchg js mov xchg subb cmp mov bound adc add bnd cmp sbb dec pusha inc push mov add add ret add mov sbb out adc jl jb js xor cmp jne add jae aad pop (bad) dec add imul aas (bad) mov in xor mov pop bswap mov jl add popf jg add mov mov cs cs cld pop inc stos loope cltd fs rol mov jo fwait xchg dec pop addr16 pop divl pop (bad) mov add cli dec sti cmc daa adc pop dec clc mov mov bound loop out lds sub and mov mov call sbb push into add push loopne,pt inc sub (bad) dec jmp add or je dec or ja and mov incb push fcmovnbe push cmp es push add pop jl mov mov push xor push push push sbb inc pop add sbb add enter mov mov xchg std xchg jo lret int3 addb decl push mov (bad) outsl ret mov sarl sub cmpsb rclb aas cmp dec cmc cwtl inc jmp ss es mov xchg jae xchg jge subl ja mov or nop addb sahf jl or adc movsb fadds movb cld dec in arpl sub outsb je pop push or cli jns rcll mov rclb loop jl testb jo and (bad) add ja notl add cmc or fidivl mov add inc and mov or or insb lahf repnz aam mov xchg stos loop fldl add ljmp in js xor cld sbb sub orl cltd in decb fistp aad inc sbb xor mov or sbb fdivp add mov add fsubl iret xor sahf push mov pop lods cmc popl arpl clc addr16 lret jg add je add adc test add jge rcl int3 int stos orl into inc add push add add adcl les add or test dec jecxz xchg sub aam (bad) test aad and cmc sbb xchg jbe pop sub xlat out out jle mov in adc push or inc xor (bad) mov pushf inc add nop or inc (bad) outsb dec pop add lock xchg call or incb cmp push adc loope or xor xchg inc aaa (bad) add (bad) push orl rolb (bad) inc pusha dec or (bad) pop pop sbb ja,pn mulb inc mov cmpsl jecxz sldt dec fs mov aas test sub cmp movsl or jno mov imul or sub outsb add pusha inc dec ds add and test push pop data16 add dec jns ja dec cmpsl add data16 lret pop pop sahf xchg pop jo call inc add ret sbb jmp mov test aas subl push add pop test lods into inc add jle lea push test push or add iret adc stc adc lock sub jle in pop add orl test mov add lods push scas cld push cmc test nop ja add or sahf icebp popa out orl jo fadds cmp je stc (bad) add mov es (bad) (bad) xchg xchg scas or mov imul jae notl gs adc insb cld cmovo jge cmpsl (bad) push notb add pop cmpsl add push dec push push push mov lret dec lock ficom lret adc cmp cmp and add sub mov out adcl imul or pop mov shlb xchg dec jbe push inc mov dec int jns sbb repz sub mov add (bad) mov out loopne add xor (bad) cmp mov xchg add iret xchg jae out add push shll and or and test add jne call int3 add and js pop add jno imull ljmp and inc add mov out cld testb bound mov dec push jnp add push add or inc test lds lods adc aaa out scas xor insb cmc das lcall mov sti addl cmp or xchg add popa mov xor xor cmp jno mov adc out rclb movsb xchg js flds jae ss fsubrl lret inc add daa cwtl cmpsl mov sarl xor dec push add fnsave subl inc pop mov mov mov inc fistl xchg leave fiaddl subb sbb out pop or sub xchg repnz push add adc imul add daa jp add cltd imul push mov add jno xchg out and aaa nop cmp pop add ljmp dec sahf jp mov fild je sub addr16 lea inc rolb lahf sub jl pushf js add jo jns ja xchg add repnz add mov dec into pop std cwtl push scas popf lods add int dec xor add cli jb mov sub je jnp aas sbb data16 adc add xchg inc or and cmp add das inc add dec arpl add subl xchg or cmc fadds adc je add divb inc mull mov dec aam sbb adc mov jnp push lock dec xchg xchg add lock inc mov cld repz jo jge mov ljmp pop push sub jmp mov out arpl inc jnp loopne fsubrs lret clc hlt mov orl mov pop inc dec sbb xchg sahf test scas fnsave add mov inc into add pop dec and sbb bound add rclb mov pop bnd out inc mov into add int mov push or add popa addb and (bad) negb loopne aaa mov inc in test sbb xor mov in adc adc jbe add xchg or push mov add test sarl out cmp sbb pusha xchg loopne adc or mov pop sub rorl xchg push cwtl inc fs add dec jns pop mov mov push (bad) addr16 (bad) or push rolb pop adc sub xchg (bad) fistpl pushf jbe inc rorb gs scas mov movsl mov sarl pop mov jge aad dec loopne cmpsl sub out imul sub mov mov (bad) cmp and add push stos stc add xor mov aad sti mov or pop mov test cmpsl sbb xchg incl gs push pop popa xchg xor (bad) std pusha fwait add jae sub jmp pop sbb pop push inc sbb and sub xchg subl lret inc inc jo iret subb stos pusha (bad) cld (bad) add lock jae mov xchg mov mov add fadds sti add mov es add mov sub jle or add ret xor jl push mov notl mov and add add insb flds sub dec fcmovbe pusha adcl inc add cmp add adc sti (bad) push ror xchg out mov orl adc call pop add call aaa add ret add jnp adc adc fsts add dec mov pop add adc or and cwtl pushf push sub pusha add rol pop je insb xchg dec cmpsb dec fsubrs inc add push add sub cmc movsb dec pusha adc xchg cs sub ret dec hlt mov push add jg mov mov lret test inc fnop xchg pop add add mov add cli in loop and add lret xchg sbb scas jae out jge lahf (bad) add pop cmc dec repnz movsl leave adc mov bound dec add mov cmpsb add shlb cmp (bad) mov movsb sub or xchg out cmpsl mov addl or fcomps fwait mov ljmp dec movlps mov lods add mov xor insl add lcall xchg add (bad) inc aam jle sbb js and ja xchg call sbb std inc pop decb push jae cmp je aas adc jnp push jmp loopne dec and add cmp aaa ljmp cwtl mov test jmp add lods xchg movb cmp jl sub in ds lock and xchg enter mov in push pop pushf ljmp adc or add mov or xchg call jb popf imul lahf pop mov jmp ja jnp add add inc mov dec add inc mov jbe aam and fcomi mov add mov push pop das mov js bound out xchg xor sarl mov and xchg jo leave sbb xchg loop lock push push mov icebp (bad) sbb add imul hlt scas add cmp iret mov stos stos xchg enter pusha out test imulb adc xor imul pop pushf ds push add pop jne pusha adc subb adc xchg jae mov mov and adc hlt push pop andb push sbb test mov xor dec loop (bad) lock pop imulb cli cld and mov xorl fstpl push and inc sub or push shll or std sub xor pusha cmp rcrb frstor mov addl push cwtl add fdivrs add pop cmpl xchg pop fs addl push in dec cmp adc test add inc stos pop xor or sbb outsl pop sbb pop fldl adc cmp adc stos add (bad) iret add jne (bad) insl add test fiadd call adc ss add (bad) into popa (bad) rcrb jns rcrb pop int sbb jp add addr16 pop idivl jmp hlt jbe les mov cmp dec add add jb lahf fidivr add test dec (bad) or pop sub (bad) add jp mov cmp push and or or mov loope or lods mov stos sbb ss imul popf mov jne inc or xor push mov sub or sub add dec inc mov jle cltd out leave ret aad jo fcomps jle subl push add adc fsubl jbe lods lods (bad) jp sub sbbl sbb fdivrs fs xchg imul cmp dec adc data16 add pop cld dec sbb add push fisttpll (bad) int3 adc jle mov sbbl pcmpgtb in iret icebp push lret inc in or add loopne lds test add jnp fnstcw pop xchg pushf xor mov mov dec out sbb add fs notb aas int3 add sub loope sbb (bad) movaps aas pop inc adc es fmuls insb inc rolb jl daa scas cmp loopne push cli inc inc aas clc les test pop add sbb mov in ljmp pop jl add shl stos sub sbb xor push sub xchg int3 mov repz mov shrl xor add or adc ret dec imul lock xchg mov mov cmp (bad) fdivrl or jmp mov loop subb gs fisubl repnz add jle xor cmp (bad) sahf cld pop xorb xchg aam lahf and adc cmp inc jge jns push add sti (bad) lods xorl xor inc lret js stc add jne sbb mov movsb lods les adc mov lahf inc fstps pop iret pusha add (bad) (bad) xor andl jbe mov (bad) cmp add sub (bad) repnz push push mov loopne cltd lea je das add lods mov ljmp les test js imulb or loopne add mov in add mov jg andl sti jl adc (bad) jmp mov jbe jle (bad) mov js inc sub push cmp test adc add mov in les pop flds int mov add cmpsb enter cmp ja repz mov jno pushf xor bound cs repz add dec lret pop xchg loope repz pop fdivrl push das pop pop adc xchg dec mov adc lahf imul lds xor sub mov xchg or lret jmp cltd test sub push add inc mov add out add test pop cltd mov in sbbl pusha mov in add mov ljmp mov mov dec mov add and data16 dec or popa xchg leave ds xchg not les fiaddl sub mov add mov cmpl mov push xor push add jp jg call push stc push pop lock test cmp js out loope mov adc je jae mov mov and orl leave sbb xlat dec (bad) sub inc jmp or xchg stos lods adc sbb sahf jae add stos mov in (bad) mov inc hlt pop inc push and jl add outsb sbb stc inc cmp push cmp dec rolb imul push pushf and std add inc add (bad) shrl repnz inc mov ret pusha mov and xchg sahf nop and add rcrb or aam add push sbb and add pop pushf inc add push xlat xor pop ja add out les aaa loop cmpsl add mov pop ljmp hlt imul daa fdivrs xor je push or cmp cmc sarl and add pop adcl inc push movl nop mov test mov daa mov xlat sarl inc mov add and inc adc pop or inc ror pop adc imul add add mov stos add sub aam out mov add pop or dec cmpsl stos (bad) in sahf stc jae cmp rcll dec mov xchg mov mov lcall sbb inc nop mov mov push mov call add aad jb push lods dec add rcrb mov or ret sub xchg sub pop cmpl xor mov and add xchg add dec lret gs add call add cli aas pop sbb inc imul push jnp or sti or pusha ret repnz push add sub pop pop xor mov (bad) movsb mov mov jp or mov test add insl jge xchg push add fsts jp add push loop xchg iret mov pop stc dec add adc sbb add aam mov repz dec pushf add jne dec add mov pop in les add xor stos push xor (bad) cmp lock adc or jl,pn sub cld add loop stos sub outsb add sti aad xchg cmp (bad) ss cmpsb jle jp adc loop xor push push mov into jo in aad pop js jge and cmp or call subl xor mov jae sti sbb mov cs mov adc lret cld aas rolb mov jae call dec push mov insb arpl xchg xor jns and pop add adcl push test leave movb sti cld mov int3 push imul mov insl add inc xor jno js hlt add or leave mov cmp dec xchg in mov out lret std mov add sbb popa leave shrl and jae out and test popa dec mov dec sahf je inc sbb cmp mov add mov out cmp and add add dec mov jne add cwtl pop outsb xchg (bad) adc mov cmp nop add popf push and sti cmp adc pusha insb cmp jmp jge (bad) hlt ret loope add mov fsubrs cmp sbb xor xor cmp add ja jne push leave loope test out mov nopl push mov pop mov lret add mov push add pusha dec lahf shrb arpl dec jno jecxz ja inc sub jp adc pop sbb repnz outsl popl and and pop (bad) in insb bound (bad) mov pop add mov ds add add out xlat pusha out shlb loope inc fwait add pop mov mull repz fcoms xor xorl push lds scas jns pop sub daa xor dec insb out addr16 pop repz sub pop and out mov add sbb push ret cmp pusha jnp dec jmp jne inc rolb mov repnz (bad) pushf add int dec addr16 mov add xchg movb jne lcall (bad) lock andb rcr push sbb js in cld or mov mov inc jne test aad jmp add push into add pop pop mov xlat sub xchg stos mov add insb pop xor outsl ja rcll mov ljmp fisubl mov jl add push mov xchg (bad) (bad) inc mov rcrb pushf add xchg cld sti add test sbbl and add mov lea lret iret in jnp jbe sbb int retw out or lods test adc repz push cmpb rcr and push loopne sub mov cmp test mov jbe xchg fwait gs das mov mov push inc dec popf or or daa mov into xor xchg or sub js inc ja inc pop rcrb sub movsl cmp add or call add cmp int pushf subl mov fnop mov push add stc jnp pop xor mov pushf or inc mov lahf adc dec mov fisttp add js cmp jmp out aaa shrl or shrl mov and arpl add adc add push adc (bad) lret dec push sbb lock xor insb fldl push add jo inc pop movsl jle cwtl add iret pushf mov jp add mov push ljmp in out (bad) adc mov add xor xchg in jl jmp je and test out pop jmp cmp (bad) and mov mov sub cmp jl lahf jle cmp test test xchg inc jl dec add bound negl or ret cmp aas xchg in fistpl add xor lret in sbb outsb dec (bad) jge call scas sub pop jno inc movb add ret jecxz mov cmp add cmp sahf lret scas adc andl fcompl (bad) inc cmp nop sub cmp int3 into leave push xchg sti xchg inc (bad) xchg mov sub jg mov (bad) mov int3 sbb icebp mov mov lret cmp rcrb xor iret push mov and mov out fstpt and leave or add fsubs add and push and mov sbb xchg fiaddl sub adcl push add test sub (bad) or and enter xchg sbb add cmpsb std in sbb lds inc sti jg imul bound int3 aas add popf sub pushf mov orb in pop jmp incl (bad) out ja cli arpl jb mov xor sbb push sti call add dec xor lahf das roll push jae inc faddl xor imul mov stos inc inc add fdiv loope cld lahf pop aas add enter pusha shrl in (bad) sub mov pop out xchg call jo pop (bad) jp sub fs or xlat fistl loopne pop pop dec jl mov sbb out (bad) push subl mulb js int3 scas add pop inc pop add jl push (bad) adc mov dec sub inc ret loope jl add ljmp movb clc scas out mov vmwrite cmpsb rcrl add or icebp or add pop xchg add push mov js dec dec jne mov cmp push adc jbe pop orb out mov xchg test ss push mov jbe imul out fisub sub mov lcall les sub xor and xchg add lar mov and push mov add jae mov jge (bad) sti sbb pop xor sbb fs leave sub and sub mov sub (bad) dec sub adc hlt and iret adc push inc lock or add mov mov or mov aam add or cmp push and sub pop lods xchg xor push add in xchg (bad) (bad) lock add xor and mov lret fstpt mov jl add jecxz xor add js add aaa jmp mov mov or mov and lahf (bad) aad mov cmp fimull jne push xor sbb and add int3 cltd mov mov inc push cli jecxz jbe jbe push and cmpsl cmpb bound cmp and call imull push cmpl add bnd imulb add data16 int3 sbb and and xor add cmp idivl push inc dec dec lret sbb adc pusha fstpt add push jge,pn sbb inc dec cmpsb push out or add sbb sbbb cmpl and test lock xchg fadds inc xchg sub pop sbb or pop adc sbb sbbl scas sbb ljmp xchg popa ss push push xchg (bad) mov ljmp test xor pop sbb into jbe loope cmp add cmp scas jecxz sub jg (bad) in mov push add or scas add (bad) jl and sub pop sbb test scas mov pop dec sbb cmp add lret nop mov or or lret push fistl loop inc leave push inc vmovapd mov xor (bad) lods mov dec loope loop popf fsub dec ret leave in mov cmp push or add lea sub je inc cmc sub adc add cs (bad) lret pop cmp std push dec inc inc inc popa popa pop loope cmp sbb push ss daa push sbb xchg pusha aaa outsl add (bad) lock xchg jo jo add jg mov mov iret add sub add push mov fwait add mov mov fimull icebp ds pop dec add lock xchg (bad) imul mov ds cmp sti and jo inc clc dec enter sbb cs jae cltd and les enter add stc xchg inc addl fstps lret and inc sub js loop mov js cmp mov clflush movsb fstl (bad) mul add push mov ret adc test jbe in ret sbbl mov xor pop xor add cmp mov or xchg or out (bad) aas push imul (bad) mov push or movsb pop scas xchg lcall out adc dec jecxz cmp icebp jno pop inc sub xorl cmp xchg mov add add data16 mov or (bad) mull sahf dec mov jo fs popf add xchg xchg pop xor test and (bad) pop push je push add aad mov add repnz or bound out pop pushf jp xchg mov add iret inc inc xchg es notl mov pusha jno push dec or jb cmc (bad) dec jns or mov pusha fsubrl mov add ret ret mov fs fidiv or add inc loop lahf sti or add dec pop xchg jp add js sbb jge inc add notb add jne je and mov mov dec cmp clc add pop pop cld mov iret and add push out jge lret cmovl pushf pop mov pop add cmp mov dec je cmp repz arpl std idiv mov int adc pusha je sbb sbb adc in add push add in inc (bad) adc (bad) (bad) or mov mov out sbb loope cmpb int3 ljmp dec xor insl mov lcall sbb cmpb testb xor loopne sub add pop jecxz or lcall fdivrp pop outsl add jg movsl inc xchg in add outsl and dec jae loopne ds ja cmp insl dec (bad) pop add pusha lea cmp dec mov dec jecxz lea dec jg,pn lret or jmp or fcmovnb and lahf push movb xchg ds add ret js mov cmpsb adc fwait adc andl into add mov push jl adc add mov add (bad) pop out and sbbb push lock adc sbb and ja add jge mov or pop push std and mov cwtl add adc cmc and mov jle sbb andl xchg add popa cs sub add outsl jns xchg push cmp xchg push or ja push into stos push xchg fistl js and testl js repnz xchg mov jo jb add push mov xchg scas ja mov push and sbb nop jle scas sbb adc add sbb sub cmp and inc fadds push out int3 add fidivl inc add lea subb ret call add mov cmp dec rcr hlt cmpb adc add add ret into in ss add inc cld roll and dec lds subb lret loope ja lock xlat aam nop cltd add dec ds mov xchg rcrb adc add add dec mov (bad) inc sub js add repnz or daa push add hlt pushf cmp xchg andb repz fcoms and xchg lock sbb fistp gs add mov add inc xchg fsubr stos mov orb xchg sbb add and cmpsl call xchg mov dec mov ret fisttp or js data16 rcll add inc inc push mov add adc dec add and mov enter cltd into sahf and adc pop push cli jo jge int3 cmpb inc je fildl and push mov lock pop xor mov adc jle and add arpl clc xchg mov repz inc mov stos imul into inc push rcll mov mov dec xchg sbb adc sbb das inc je dec dec test aas fiadd adc cmp mov jne mov cmpsb mov add jne jns fmull add pop (bad) icebp add xchg xlat sub fs mov sti xchg ds adc cmp cmp outsb inc add adc int bound adc sbb add fcompl test pusha or shrb adc insb add pop cmp cltd ficompl pop xor xor sti sti and lds mov sbb mov (bad) (bad) and sub jecxz sbb adcb push repnz inc imul add cltd sbb lods or imul sub adcl loopne nop sbb ss jmp mov jp xor add cmp popa cwtl add sub stc xorb lret adc cmp rclb adc aad jne lea scas cmp pop and call inc jnp xorl jnp jo add jecxz mov lret mov insb repnz or inc add push dec jl lock mov pop push inc insb (bad) jge add and adc add lret adc icebp jp aad insb push lret sbb sti and adc popf shll adc sbb fmuls subl mov mov test or int3 insl add xor pusha imul js jbe (bad) mov fiaddl movsb stos and test pop lret addr16 nop adc add sub dec ds (bad) xlat cmp enter in push jle lock mov fwait or add out aad orl test fsubrl add (bad) push inc add jo gs rolb cmpsb cltd pop dec js xor add jg cmc subb mov mov add ljmp mov bound andb adc mov ljmp sbb add in xor mov lahf mov add cmp add data16 popf and or test xchg cmpb mov jnp mov adc sub mov call loope add iret aad jne mov jecxz xchg or mov cld add push (bad) rcrl stc pusha adc and add add xor jle sub out int aam or xorl subl sub lret mov push adc stos mov cmc aas call addl imul xchg mov mov jns sbb test add inc lcall lahf clc cli pushf fnsave pop cmpb or fistp push push cmp sub es sbb mov in add cmp push insl or jne add mov test add movsl pop xor outsl pop adcl add (bad) or into daa fisubr jne movsb (bad) int3 add andl lea inc push shrl inc rsm enter je icebp push pop xorl aas inc aad xor roll ret mov jb inc out jo mov add xor pop and jno test push cwtl sbb orl pop adc arpl mov jmp xchg std and jbe lahf add add push add sbb ljmp in popa mov insb stos xchg test in xor pop inc addl lea ja and fnsetpm(287 sbb test push pop sar andb inc movsl test jl xor loopne pop or daa and mov sbb sbb inc xor and xchg add cwtl ds xor sbb cmp mov in add rorl mov push aas iret jle push (bad) cltd sbb push xchg xorb bound cmp push push movsl (bad) fild push sbb jle (bad) out xchg imul jns pop inc addr16 loop in mov xchg add inc je pushf fdivs mov push adcb sti dec movsl cmp lcall jne test push roll add cmpsl xchg push test jp int in stos cs daa add arpl pop add push mov (bad) pop lods jge nop fistl js mov std dec xchg nop mov pop loopne int jle add mov scas mov incb jno outsb hlt icebp and mov xor outsb push push add push fstpt das xlat pop addl dec adc inc add imul aas inc add js movsl add xor add fwait das mov fs mov add mov push adc xchg call mov negb mov dec cmp and jbe imul loope push inc scas xchg and je int or xchg dec sbb mov xor add movsl push sub mov cwtl shll mov sub sbbl inc cmpl (bad) add inc add push sbb jmp mov cwtl push fistl pusha add clc xchg aad in dec dec xlat inc sahf xor sub add adc outsb lret repnz js add dec mov out popa dec mov add jno lock nop fs cmpsb repnz xor mov add adc add or push add test add xor dec pop ds pusha add jo push add scas scas arpl or and test fbstp in cmc add repnz nop inc inc rorb or test or add xor aas pop add xchg mov jl add cmp push mov inc add out inc jge fwait stos add mov mov push lock mov add inc mov inc mov loope sbb ja and inc rclb xchg add out (bad) mov sti imul sub mov lds pop (bad) xor rcrb leave repnz push jg xchg data16 ret push in pop mov roll fiadd dec ss push cmpsl test inc jge push jae pushf (bad) adc xchg lock cwtl jmp inc add lret mov pop xor loope in xor cmp cmpsl dec aas lods and outsb push addr16 insl jae out (bad) es out cmpl xor insb mov decl mov (bad) add loopne out add call and into (bad) std push jbe add call mov mov ret loope cmp sahf xchg or mov xor jmp stos jo aas inc faddl sub and lret (bad) jo dec test cmp jo imul inc pop mov sti push jo xchg adc jns bnd test out test nop data16 xor add pop int3 push cmp lock add mov adc subb xchg sarb sub jbe inc push jo and and inc fisubrl mov add inc movsl lret mov push ljmp stos cli jl mov xorl push and jecxz aaa cltd in adc add out bound mov add aad ljmp or jae push addr16 pop scas ret out jbe jg sub or enter cmp cmp and adc push jl shrb and cmp stos rcl push mov nopl mov fiadd push mov negl or outsb pusha pop pusha pop pop sahf mov push pusha in pop in and cmpl js push lds cmp scas int3 dec jge adc jmp jae dec stc aad xor loope test testl je mov add jae xchg mov dec cltd add mov cmpl pusha fsubrl popa pop pop in repz add aaa push int add lahf scas xor pop mov and pop int mov pop mov stc add dec popf leave (bad) repz jns stc jnp jo cmpsl cmp add xlat pop fnstcw xor jne jns sbb adcb addl jp loop inc out xor xchg loopne add mov cmpsl pop inc adc mov fidivrl mov adc jo xor add push insb iret popa lods cmp aad ljmp (bad) pushf cmpsl jg sbb sbb (bad) push ljmp inc add popa sbb add lods fwait (bad) out insl add nop adc ret inc lods push dec mov imul cmp add notl into lahf sbb xor iret cmc xor sbb out movsb push mov icebp jbe lds in aaa loop popf push xchg xor nop cli add fwait aas int divl jle lds out adc addr16 mov repz fcmovnu das and mov lret stos add push imul jno jno add hlt xchg push dec and das lea xor mov adc lret add (bad) mov lock add push aas out push adc push mov pusha repz pop movsl jl iret and int3 sbb mov add loopne mov mov sub and mov pop adc mov add xchg push pop dec cmp loop or (bad) push test mov pusha add pop sub ss iret loopne loop jb add test imul repz push sbb loopne,pn pushl add sbb sub sbb xor add pop nop push (bad) sbb scas je push fs add cmpsb cmp add inc push (bad) sub insl adc (bad) jns das imul js mov add sbb in inc int3 add xchg add in loopne xor add loop test dec and jle fs mov pop sub aam pop test and fwait mov mov hlt jg adc std int3 xor mov add inc add sbb inc push hlt xor stc inc add mov jmp test sbb sub mov mov aad mov mov addb fsts xor stos inc (bad) inc cld xchg add jge xchg imul cmp add stos sub add int3 pop pop insb es sbb add mov (bad) in outsb pop andb adc add (bad) repz push xor add sbb adc faddl in add mov jb xor inc jne or gs pop pusha sbb lret inc add icebp push adc stos or mov daa lds mov ljmp xor and add out sbb je add test fsubrs jmp and xor pop add je add sbb loop xchg aaa cmp add pop and testl sub cmp mov push pushf (bad) pop push test inc lret add sub push mov push andl add and cwtl test push jmp xor pop rcrl and cmp test add cmpsb adc insl pop js cmpsl aad sbb push ljmp adc sub cmp fistpll pop add out sahf fwait add sub push or ja movsb pushf and into mov xchg jbe xor mov aad testb jo cli jae add data16 add test (bad) (bad) fadds loopne lock leave jno push sub and push and mov mov pop push push sahf enter clc cmp (bad) add xlat xchg mov jmp and add mov test adc out mov mov adc add mov jecxz imul adc jae dec mov roll xor outsb sub fmuls add cwtl cmc adc scas pop fiadd push clc jg add jns cmp test pop jo call add (bad) mov bound sbb jo hlt or push dec aad scas sti xchg pop mov ja fdivp enter cli mov aad std push adc xchg jae andl pop sti sub call sub jnp add push jo out rolb (bad) loope add adcb fildl mov push js js test add pop or pop movsl insl testb push jle les lret ja cmp cmpsb pop add xlat in jg ja add loopne pushf movzwl movsl xchg pop test dec (bad) sbb in cmp orb pop push jmp pusha jg mov es imul sub pop mov jae ds inc lea js ret add and mov mov pop addr16 dec xor cmp xchg pusha int sbb mov add jbe es movsb outsb or xor cmp push gs test add cmp sbb jno mov (bad) not push add mov add cwtl sbb test sbb cmpsl sub mov ljmp test jecxz cmp xor mov sahf add or push inc xor jno inc cltd scas in push stos xor inc xor add ja mov push or daa jg out mov in sub ja xchg push add imul stos mov pop cmp mov pop cltd xor movsl add xchg inc insb push jbe (bad) movsb mov (bad) fildll or or dec (bad) cmpsb and lahf jb xchg add add mov (bad) fisttpll (bad) sub rcrl cmpsl pop push pop jp inc ja popa add jecxz jno nop adc ds lret cmp cmp push lea fs jae fistpl aas jle push xorl xor lea adc fsubs aaa xchg fcmovne add lea cmp adc mov add sbb add cmp lahf push clc xchg cltd dec ja mov loope ds sbb add xchg sbb lahf mov xchg in push add cmp (bad) pop (bad) add roll jnp js inc push add pop aam aam jo mov or mov js push or fdivl or aad jo add lcall cs in out ljmp add outsb jle and add stos add bound mov lea mov pushf cmp mov stos shr push or push mov addr16 jns icebp and xchg add stos mov mov ds outsl (bad) aam xor (bad) push (bad) sti xchg test push add lods mov pop dec or cmpsb mov push mov inc pop loope sbb inc jg (bad) iret xor sbb mov jne mov add pop jge xchg iret dec sub addr16 xchg push jo sbb (bad) fild ja sub imul nop scas jno pop push adc and lahf and xchg add xchg adc dec cld mov ljmp and insb mov add mov out scas lods push in add lahf mov clc xor (bad) jle add enterw add push repnz xchg push add into shrb cmp adc mov dec or ljmp pop mov mov jge or mov add mov push xchg in mov aas movsl or or cmp jne fildl pop jle (bad) mov sbb inc cmc dec sti mov psubw inc movsl add jno pop dec inc xor ja out xor aam mov adc movsl stos or sbb inc and leave ljmp (bad) pushf mov add dec mov hlt in insb sbbl mov xor sbb and add fs pop mov xor inc xchg sub or fnsetpm(287 fsubl jne adc push pop mov dec mov fs mov jl add leave sub add xchg mov push hlt and dec data16 ljmp nop out pop lcall pop jbe jb add out sub enter stc ja mov mov cmp pushf pusha call orl das leave stos inc mov aam inc pop addb fistp add mov mov dec push out aad stc push add flds mov push mov push sbb add jle mov xor mov pop pusha mov mov subb xchg daa or out out nop or int3 out cmpl push pop iret sub loopne jns or or jmp cld incb or scas or sbb fiadd ljmp xchg xchg sub cmc jecxz adc push cmp lock fdivrs add pop lcall cmp ss mov jns aas mov push mov pushf pop or pushf xor inc je aam adc fstpl jg sub jo mov mov jp pushf jae add neg adc outsl ror roll mov fabs pop repnz adc xchg loop inc mov mov xchg and add mov lea inc pop push enter push add xor sahf or mov cld mov xchg add mov mov (bad) rolb ds jbe insb add adc push xchg xor in jmp icebp lock sarb push sbb dec insb dec out pop adc divl sub loopne inc popa mov movsl add dec insb sbb in mov iret mov rorl lcall std in incb push sarl mov mov sub add or jg js enter push or and in loop add push in sbb iret sti jmp or sbb jp andl pushf jmp push into (bad) mov push cmpb testb and ss cmp roll test pop hlt (bad) or adc mov xchg div cmp mov jo mov add jne outsl xchg lods mov inc repz jne inc pop es adc mov outsb rclb pusha add ja mov cmp inc in push (bad) cmp loop ret cwtl (bad) call mov add (bad) or adc xor add jle xchg pop dec and int3 lret stos add sub test aas adc testl sbb scas add aaa or add cld mov and pusha iret loopne lahf daa xor nop shrb pop cmp xor popf fisttpl loop adc add pop insl js into out add push mov or rcll cmpsl add into cmp lret test push jmp call (bad) mov adc in adc loope pop jnp lds add push adc inc setl testl xor (bad) or pushf add cmpsb mov lret (bad) cli adc ss in out test dec mov push or mov (bad) xchg jo fadd das inc add int sbb push mov ja add sub sarl xor insl push cmp push outsb xchg add or js adc push sub add or xorl icebp cmpsb adcb sbb adc (bad) pop adc push std add aad pop movsb das add xor jae add pop iret ss xchg jns les jl sub sbb cmp cmp out dec fistp cli adc mov pop jb push jl test stc dec outsl add and sbb out mov mov pop roll cs inc jbe in fnstcw xchg jle or stc pop daa and jg js je sbb add sbb add shrl or in mov hlt das inc or xor sti outsb fmulp sahf sbb fdivr xor mov pop inc out fwait jl push mov rcrb aas add and repnz inc add inc ret sbb pop fwait (bad) mov add push xor (bad) out pop sarl or push cmc dec mov mov push mov inc ret aad pop inc dec js lods sbb lret notl mov mov and or jo fisttpl jae push mov add and daa pop iret sbb int icebp dec pop cmp cs cmp ss sti ret sahf scas (bad) mov ja and or jnp cld sub testl add or push in add leave mov add or das pop repz sti adc inc pop add jmp bound or ljmp lret push or cmp xor pop jno mov jne pop or push lea sahf mov out push mov sub int repz daa push pop fidivr aas add in mov push fidivl jg (bad) jmp dec add jecxz ds das cs xchg jns jae in add mov sbb dec rcrb sub jle add icebp xchg test inc xor cmp add inc jb mov popa add divb inc sti jb stos or mov cmp pop pop cmpsl xchg pop and fsubr cmpsb je shll add xchg cmc xor xchg mov repnz test add out fs pop push push icebp pusha cld adc aad push adc add pop pop jl ret add mov jbe mov mov mov cmp add pushf lret fadds add jns cmpsl adc sbb push xor cmc pusha iret inc mov bnd inc mov jae inc add fldenv test jp inc in add add rcll inc cmp mov fs (bad) sti pusha jo xchg push pop xchg jae cmp sub add dec inc jl sub add orb push mov adc aad dec test lahf icebp cmpl cmp pop xlat clc sub xchg addl jb ret lret js add pop push cmp lea out mov loopne xor xchg cmp mov pop dec loop push lret push imul xchg add stos enter pop in mov or or xchg mov add mov les int3 add fnstsw push jle fwait sar lock imul sbbl mov pusha mov push pusha sbb pop std push mov pusha mov pop pop (bad) add scas jbe dec xor inc orl in mov cmp push sti mov or rolb or test mov js and fwait and xchg pop fsts movl pop in xor jo add xor loop pop fistl inc sbbb pop inc xor jae or add jge cmp cli inc bound push int3 fldl sbb inc jne iret sub mov pushf (bad) repnz rcll push adc mov or js sub or test ret cli ret mov aas and imul push dec adc cmpsb loopne les xchg das icebp add clc dec inc push xor out (bad) divl add pop fisubr or in ljmp lret fidivrl or add or cmc mov add insl stos xor ss add inc add xchg sbb int jl les ss adc push sub mov fbstp mov ja mov cmp scas sahf mov xchg data16 movsb mov cltd inc (bad) dec pusha andb sbb inc or js xchg rolb push pop fadds add repnz jae punpckhdq jge mov lods adc add int aas xor cmp xchg in add push add (bad) sarb mov aas mov and pushf xchg arpl lret data16 dec pop jnp outsb add lods xchg popf stos mov movsb mov frstor add test cmc enter test mov add fwait lret stc out push add jno addr16 mov gs cmp add mov push cmpb xor or sub repz push sbb add ja cmpsb xlat cmp sbb sub lods fldcw in xchg cmp inc sahf ljmp mov stos and test inc adc xchg pusha jns add in aas xlat stos sahf push mov jno jp test pop insb and sarb pop out add popa mov data16 std scas mov sbb cmp or push adc xor into pop push cmp fcoms nop add ret adc sub cmpsl int scas insb add fist je inc add cmp addr16 dec test clc jp cmpsl (bad) and xor xor mov dec add adc cmpsb add sub scas jns mov jl popf sub and push inc adc mov jp pop fild pop dec incb sbb test add adc add mov jbe cmp icebp add mov pop add xor or and out imul repnz add mov add test xchg fisttpl push (bad) and mov cmc pop iret daa jo sub xor repnz mov push mov inc cmc ds ret mov out mov add push xchg pop lahf mov add adc icebp mov repz rorl or loopne and inc add loopne mov ljmp imul dec lea sarl sbb adc push inc das add scas (bad) mov xchg std jp fadds pop or jmp xlat add popa cltd pop cmpl jp pushf imul mov jg add imul sarb xor das add sub sbb in mov andl cwtl mov sti push mov into push mov mov xor sub pop inc and jle subl rcrl inc iret dec cld mov xchg stos rcrb fadds insb sbb je xchg nop (bad) lcall add mov mov xor lods dec sahf addl (bad) jmp xor push movsl arpl je or xor out or aam outsl add mov jns and and cli jge popf sub xchg jecxz cmpsl rcll cmpsl jo adc xchg loopne dec pop push add add out mov add rcll les inc add into add cmc mov add mov shrl je adc fcompl daa sub dec scas xchg mov jmp and sub sti dec push mov loop mov mov popa sbb fldl out and cmp add ss rorl mov dec test enter fsincos je aas jge xlat add cmp push rclb push add mov mov dec test icebp add das fisubl (bad) out in dec pusha rcll add jo lret stc xor jae sbb fist jns aad xchg add imul cs xchg lcall add fcmovnbe push cmp scas dec dec push jl push mov push cwtl out add jb gs cmp push leave (bad) jle (bad) or inc iret (bad) icebp add adc loope (bad) cld pop push sbb xchg shlb stc jge (bad) lret mov out pusha out scas mov (bad) xor adc add sahf popa pushf nop mov enter aaa daa outsl add add adc fnstcw mov test (bad) cld ret inc popf loop rorl inc dec ljmp push psrld bound add adc adc insl fcoms xchg pusha add lods js (bad) mov add jbe mov push clc add add out popf lret jne aas xchg inc shlb std add out aaa (bad) mov pop and add outsb mov mov add and add testb fcoml nop add xchg mov push daa mov pusha dec jecxz mov int negl adc lods sbb xor inc xor adc jnp or addl in fistpl inc popf loop je mov js clc test pop lahf push add cmc jae ljmp xor ret add (bad) outsb pop cli xorb jp insl or mov mov aas sub xor mov (bad) pop adc sahf cld mov (bad) iret push icebp adc aad lcall xor xor dec jge orl cmp aam and mov fsubr inc stos in inc xchg test cli int3 or int outsl clc stos stos xchg aaa add sub mov pop movsl inc or int es ss sbb out imul dec in aam xorl pusha mov sti or out test ftst dec pop add movsb xchg dec rsqrtps cltd pusha push mov jae add hlt sub xchg inc (bad) fldl les popa loopne lea add repnz fadds or outsb push add aas clc xor add gs das adcl sub rorl xchg in adcl jp and mov add cmpsb and shrl inc xor lds aam loop add mov mov lret into add out add repz and add and cmp imul mov xor (bad) lds cmp add mov (bad) std ljmp loope mov cmpsb push add jno andps pusha push test xchg inc mov xchg mov or inc sub jg sub mov mov mov xor push xchg loopne xchg sbb xlat jge and jb ret pop dec add cmc pop and loopne jns pop pop stos popa add inc dec mov fcomp stc int3 xchg clc in (bad) bound sbb inc add (bad) add pop inc jp cld and sbb lahf data16 sahf fadd (bad) jo sbb popf fidivr int3 or sub testb dec stos cmovo aas and and jb pop in mov add lret mov and imul adc repnz adc in mov (bad) fiadd mov mov adc jg xchg int3 (bad) dec xlat add in add inc inc dec imul push mov addb clc out sub clc mov lock adc xor out xchg adc push jno inc cli jae cmpb scas push inc push insl push xchg push cmp inc mov in jbe,pt (bad) mov mov mov add stos movsl add lods or sbb popf cmpsb movb cwtl xor int3 inc movsb add stc jp inc push faddl cmpsb push sarl sub cmpsl adc adc fistp push fwait in xor adc cmp imul sahf pop ss cwtl addl sti xor repnz movsb scas inc add inc mull push push addb rorb loop jmp push xchg gs and pop je xchg scas (bad) add mov cmp add jns adc and add out stos mov xor push jae and jl in xchg out add js scas nop aas lret and std add (bad) sub cmpl dec jmp in jnp add dec sar add xor movsl aaa sbb testl cmp imul loop jg add sbbl mov enter sub push fnstsw sub jno add jnp add lret add push arpl in (bad) repnz fstps decl add pop dec pop xchg dec push push mov cmp aaa outsl pop nop mov inc (bad) mov fdivs stos mov in pop popf cmp loope cld push fiaddl pop cmpb insb movsb pop sub incb lahf push mov add inc outsb cs sbb in add jae lcall movsl je add js adc add pusha outsb sahf mov fist add sub sub pushf cmc xor ret add push add stc lcall add mov add cmp inc xchg sub fsubrs out sub cmp cmp daa add pop insb loopne pop dec scas add sahf test adc or loope fdivp (bad) lret scas and add (bad) in je sahf jb add ds jg xor mov jae mov popf xchg inc jo addr16 stos mov (bad) mov sbb into add mov (bad) xor movsl out pshufw pop push mov xor fstp outsl lods mov or adc insb sub sahf insl fistp jle out push test or inc pushf add fdivs repz jg dec dec push iret repnz cmp mov test push loopne push ret lods push popf sub jbe sti mov scas or sub fwait mov js pop aad and ret sub inc dec sbb xchg push je and cmp sbb mov add movsl data16 shld sarl jg in lret ror add jp jecxz lcall add in test pop add (bad) hlt adcl scas imul ljmp fidivrl js fiadd mov jp mov jae or dec push sub ljmp adc add out adc fsubl addl nop insl hlt lret add loopne mov in push mov xchg push out pop add push insl out mov add mov mov add or mov adcl pop repz jne add fadd jae xchg mov xorl pop loopne mov inc sub dec or adc sub ja pop lret dec arpl dec mov add dec (bad) cmp aam xchg ret mov daa mov push movsl add xchg test notb inc add pushl pop roll add xchg test mov faddl sub add jg les or push sub push add ss les add inc loope add dec push andl (bad) icebp pop add mov ja xchg jne cmp add scas and pop mov xchg add push cmpsb in stc add adc pop mov (bad) dec or aam dec jbe push adc out inc xor jae test mov rorb lahf add nop jbe cld xchg mov mov test lret inc add push fsubrs daa push out inc pop fs mov stos jbe (bad) xchg xchg andl adc xchg rolb or adc pop sahf jg jecxz std pop (bad) je add xchg pop mov addb rcrl push push push jge in xorl fs xchg pop add scas sub std stos adc lds ljmp adc push dec cmc cmp nop scas add jne test mov (bad) mov mov adc arpl aas lea inc aam out pop and popf ss dec add sbb es andl push scas aas dec jb add scas xor jg mov (bad) lock or (bad) sti out sbb aad cmp fnop push andl dec mov adc rcrl mov out add je les lcall cwtl pop call add pop test inc or pop (bad) fcomip outsl add inc jnp add sub xchg pop mov out scas dec jne sub fisttpl add mov in push add dec push lcall inc pop shrl pop fisub and pop pop nop push and fldl ss pop pop aam add xchg (bad) rcrb rcpps aad sbbl loope lahf add das mov stc sub mov gs es xchg push and jae add sub add mov inc leave cmp cltd orb outsb sbb fadds sub mov and fwait or cmp inc jne roll lds ja js add pop add jnp addl dec push push ja mov add mov stc add cmpl jbe sub imull leave add add add js pop xchg gs mov pusha inc add xchg jle add (bad) mov xchg push call sub arpl or sbb sbb add jle mov (bad) dec inc pop and jns push psrld outsl jp shl (bad) jb addl nop lret add dec mov mov mov push stos addr16 es cmp movsb push (bad) xchg (bad) inc dec jp add mov jge xchg (bad) add mov xor mov hlt dec fldcw bound packssdw push mov incb mov lds jecxz add mov xor sbb movsl outsb pop add imulb xor cmpsb add or fidivrl es push cli sub add (bad) shlb jle xor and adc add test inc add cmp mov pop sahf out inc lret jl mov inc ret add (bad) cmpsb or sbb mov push mov popa adc add inc repnz mov jo jb push add mov out imul mov fwait lods idivb cmpb pushf fcomi nopl xor mov jne lock cmovnp add ficomp pop inc mov add sbb add jecxz cmc std aas fimull mov scas and into (bad) incb cltd (bad) jmp jle pop jp arpl fwait cld cmp imul fdivrl lcall cmp adc push xchg (bad) push xor and and pop inc xor sub lcall mov inc dec mov hlt stos cmp inc adcl sbb out push jle ljmp add add pop jo xchg ljmp roll stos mov adc add jecxz negb in enter mov mov ret bound ljmp push or add inc and xorl shlb push pop lea in fsubrl jnp imul push popa scas orb repz or ds jg sbb lock cmp dec mov inc aad or cli add out jp push int3 dec popa add pop mov mov xlat mov pop fld jno leave sahf jp inc add jl and xchg dec cmp and decl push or and je and pop inc sahf out popf movsl andb or add insb scas fucomp clc dec fisttp stos mov pusha add add jge dec orl and mov cld sahf sti in add movsb fildll sub sub push cmp lock add lahf jecxz sahf fxtract pop cmpsl xor imul imul mov (bad) (bad) mov inc xchg cmp (bad) dec push add outsb lock add js xchg inc sub xor jo inc cmp clc (bad) lock cmpsl lcall push cmpsb jnp cmc pop jo stc xlat and cld add lret jecxz enter pop test insl jbe adc add jno cmpsl add andb adc stos push cltd pusha and inc sbb mov pop repz stos inc pop push add jbe cmp add mov adc mov test or push dec into test cmp add adc push data16 sub sbb out xor and adc mov inc or jae dec ljmp mov sbb add mov jg add dec gs aaa fiadd add jb icebp insb test mov add lods inc add dec sbb xchg jns sbb call add into (bad) pop orl cmpsb les mov orb jecxz push add loope push jns xchg mov sbb mov (bad) sub and jbe sbb aas movsb xchg add shl call pusha fbstp movsb out xor add fs negb add jle dec cmp andl outsb add testl lret insb and sub nop mov sbbb mov mov popf popa xchg add dec mov mov adc loop stos int3 insl xor cltd jae test pop ljmp xor gs jno or add iret ljmp in pusha mov lret outsb xchg push popa xor fnstcw inc inc mov xchg aas ljmp nop enter add sti push add loopne pop test inc ja sahf mov jecxz add pop add xlat pop popa lret push pop (bad) sub add push or jns pop push (bad) hlt pop and add xchg shr mov lea xor mov lods add adc ret pop adc or mov pop test popf push sbb xor icebp push jp cmp xchg add mov add stc lret and into add pop mov dec add repnz add push sub or movsl divps pop addl test mov inc cmpsb into push (bad) divb subb mov push jbe imul add test movsl sub stos add xchg xor and push and mov mov std mov add pop clc adc lea add outsl fsubrp add mov mov in arpl mov (bad) mov loope ss aad call sub adc lods xor xchg (bad) insb push int add jb mov outsb into add cmp and or inc icebp pop cmp repnz xchg sub inc cwtl int xor mov add pop adc jle push addl mov stc aas xor mov xor xchg push andl cmp je pop dec sbb in pop dec dec push pushf xor jnp sbb (bad) xchg mov cmpl aad dec out dec stos das pop jnp and cmpsl cmp mov mov xchg jo and add out mov into pop call outsl jl aaa jp adc sub (bad) jae inc imul das js aam jg pop xor dec push gs data16 dec inc adc adc mov pop aaa in subl cmp xor psrld adc push add add andb pop jb adc mov cs sbb cmp add push jl pop sbb sarb fnsave add les in push adc xor and sbb idivb lret sbb js or data16 lret sub jo (bad) ffree add outsb and pop add add sub je add (bad) push lret aas dec ret cmpl jg mov xor fidiv into pop dec inc lret fsubs pop add mov mov dec or adc loop add mov sbb xchg jecxz leave inc mov popf lds or sbb adc xor or pcmpeqb dec add sti push stc sbb test lds jp and daa xchg xchg paddq add in xchg push fnsave cld (bad) js and (bad) sbb sbb insb mov js xor dec test insb outsb cmpsb aam push lahf fs andl dec push leave insl add daa imul bound jnp add rolb dec pop leave push add pslld xchg sbb clc adc add stos sarl lret aad movsb mov ds je pushf in andb insb add fsubrl dec and add add aam and outsb adc into jb dec or cmp mov lahf add inc (bad) hlt loopne das jae (bad) xchg (bad) mov pop stos add xchg sub test mov pop cmpsb nop ret mov jg ljmp ret (bad) jp fsubs lcall fcmovbe jl add xor into inc jo,pn repz sbb mov add (bad) ffreep cmp add jno lcall ret and push mov xlat daa add push imul adc in adc scas icebp out jge sbbb mov mov nop rolb addl pop loopne sarl xchg and ret inc ja xchg jno js std lcall jmp jg repz jo add shrl sarb enter rorl imul sahf xchg ljmp push scas ds out pop lahf and add jp,pn dec cmp (bad) shll or fsubrs sub pushf fsts cmovp pop out cmpsl add adcb and mov hlt sub inc loop add dec inc add das dec repz xchg arpl in mov cmp add push sub add cs push cmp xor mov mov into jg pop dec out pop cwtl shr es push repnz push rolb push push in leave inc push mov cmp imul lock roll push or loope dec in push and lret mov cmp xchg cmp mov leave iret adc pop test cmp jp add pop mov xchg add mov mov cmp add notb add push xor cmp rol and fadds add in xchg or and pop sub and out test fildll movsl mov daa mov push mov dec mov aaa lds add fnop mov add add xchg jnp dec sahf cmp mov mov je sbb push inc mov sub and ret mov cld decl repnz inc add lret or imul jmp add ds add dec (bad) loope fcomip sub repz push or mov shll add jcxz cmp (bad) jne repz dec and xchg cmp js pop ds push add (bad) mov mov idivl or mov or sub les lcall push dec adc std (bad) rolb mov cmp or jl in or add push bound enter push xor es in mov fldt stos mov mov shr mov and jp push (bad) jecxz sti sbb add inc repz pop inc xchg (bad) push hlt jb add sbb push call loop shrb mov fucomp (bad) aad xchg mov push sub aas in inc cli jp pop sbbl js push pop add dec cli mov jmp ficom out push add inc lcall mov add push push inc jae sbb pop pushw in xor sbb scas cwtl add in enter aaa mov push lcall mov and jl sbb lcall mov inc fsub vpmuludq dec push and add add jne in cmp inc addl negl push aad (bad) gs push jbe lds jbe or adc sub fidivr mov sahf in data16 push jp cmp fildll push (bad) dec (bad) negl (bad) out jp jle (bad) push xchg movb outsb add mov bound sub addr16 or test xchg stos inc jns jg les orb lock sub jp testl and (bad) adc out xchg sbb mov cmp sub and or xchg jno xor lahf pop mov inc pop mov xor lahf cli addl mov or lret aam xchg nop inc jg add mov out and sub or adc cmpsl mov hlt xchg jle pop cmp out insb adc rorb out and popf xchg jo mov je push mov cmp add cwtl call fstpl cmpsl dec pop faddl jno add out adc sbb xor add out pop jle mov (bad) mov test push insb lret mov cmp inc rclw subb inc pop orl mov push push and loope cmpsl fcoms inc cld adc push push daa rorb adc fnstcw sarl stc xchg pop push mov in xor sbb xchg xchg add (bad) outsb add cmp add pop loope test adc jmp mov nop mov xchg pusha into add in xor dec movsl aam call js lock pop (bad) fstl ret sbb sbbl rolb mov inc push add mov fdivl push xor sahf inc imul xorps ret and add rolb and push add mov inc subl push movsb les jnp pop push popf stc add sub mov and iret adc repnz outsl mov add andl mov int3 pushf addr16 test add jecxz or push cwtl cli add imull xor mov andl pushf mov inc sbb and push add fwait bound arpl push loop add rorl sbb inc push in inc leave pusha clc sbb mov pop sub or push cmp mov xlat loop add push mov mov ret in jb icebp sahf outsl cltd push aas aam add xchg cwtl (bad) lahf cltd clc jmp subw add fist adc sbb pop cmp sbb xchg sahf out les mov add pop mov xchg push add jne push sbb pop out aad jle add fmuls mov sub mov stc mov cmp add cmpsb andb pop push add xchg jne add mov or addb lea mov sbb mov test loopne and and push jbe mov pushf int add dec push test xor xchg rolb add and inc pop or sbb mov in add add cltd test out pop mov jge fildl (bad) mov push add fldcw iret push popa lds pushf incl inc nop divl xchg leave jo adc (bad) and or jno add jle ret inc jnp enter in lret js nop xchg cmp dec bound mov pop icebp dec mov xchg daa pop loop sbb aas sbbb cmpsl (bad) cld and pusha or xchg ret dec (bad) fbld pop cmp loopne add cwtl cmpsb ret mov es jbe add mov ljmp inc cmp add xchg pop jmp aam cmp jmp in ja xchg leave or adc scas loope iret mov and jb cli dec add pop pusha add out inc and dec (bad) cld jbe push mov iret adc sub (bad) test dec out movsb add push add (bad) cmpsl les out iret imul fmull add shrb stos insl add data16 push andb pop or adc sbb add inc jns add add testb out (bad) je add cmpsb mov add sbb rorb imul add rolb lds xor ja add jnp adc scas mov jno pusha xchg mov push iret adc lret xchg add jle xchg sub add loop je jmp lock aaa flds pop (bad) cld cmp sti and and add dec inc pushf jl mov shrl pusha cmp pusha fnsave in inc sbb nop xchg dec jno dec adc mov inc sub add jge push add or adc xor fnstcw add adc sbb push xlat mov fiaddl xchg (bad) insl add fildl rorl xchg in pop mov cmp and add adc addl lahf add add sub adc sbb or mov lods hlt add cmp push push and push (bad) (bad) fsubrs sti rorb rcrb jbe pop lds andl xchg jge movsb neg pop cmpsb cmpl pusha lds inc ja das xchg sbb push xchg xor scas add outsl sbb pop mov sbb ds orl imul je push out inc into jae jle or inc mov push and sahf test lea push add add loopne sub add cmp pop insb cltd cmpl xor shll bound sub jnp jmp push or add mov jnp (bad) cwtl push push addr16 cmp (bad) rep int3 in test add lea loope test adc fidivr ret les cmp mov sub cmc cmp cmpsl orl inc insb lahf pusha popf (bad) cmp pop test xchg mov push inc add mov pop jo mov mov mov sub divps cmp jo add testl cmp imul (bad) cmp add mov in mov hlt sub push adc rolb cmpb and adc mov xor imul add push mov push mov sahf jle mov fisubrl sarb add js push dec adcl sub or fwait push sub nop outsl (bad) into pop rorl xchg imul mov adc bound leave and push movsl add jmp jecxz fldl cmp push addr16 mov add xlat pop leave and inc pop daa repnz xchg insl roll mov cmp pop insb pop aad sub add arpl lods jge xor sti in mov ret push push cmpsb pop xchg pusha xchg jmp cs add int cmp in and nop in test add inc mov in or pusha out insl push xor add add shrl lds add add mov mov into (bad) and nop xor jge adc ret outsl stc dec mov or lock nop push je hlt push sbb add add cli add inc sbb pop pop mov test pop push adc lods add adcl sub addr16 dec aam cli xor xor pusha cltd outsl cmp cmc pop or jno push ds lds cmpsb daa or int addl adc dec nop out jg push fdiv xchg add push xchg movsl in mov sti jmp loop add cmpsl cmpb pusha pop cmp test pop cli jl or and jle push xchg stc jae xor and incl jl xor add cmp push (bad) lods mov xchg cmp add cmp mov pop pop adc in sbbl add pop fildll or mov add (bad) mov cwtl xchg cmp cmc repz roll or stc fistp and and sbbb inc andb loopne sub cwtl xor add sahf mov mov daa xchg pop mov mov sub jbe sbb add fcoml (bad) jmp (bad) popf xor jge push cltd mov inc sub test inc pop jp aas arpl dec add int3 xor add inc and addb (bad) adc push out imul xchg or lahf pop ja mov push mov pusha dec or pop mov aam pusha leave (bad) pop scas incl daa dec fsubrs add cs sub into pushf adc (bad) mov add fidivr js cmp or jge inc push jg (bad) xchg test cmp std xor adc sbbl dec and dec lcall inc (bad) mov (bad) push sbb push dec cmc int3 cmp push adcl repz sbb add xor into test add stos sbb iret add pop mov jl sbb clc into call insb loope and xchg dec cmp add aam and inc (bad) aaa xchg dec jle lods push fildll jnp add mov mov add pop push mov imul test add js cld rol ret das cmp jl insl xor push and or add mov xchg lcall pop xchg add push xor ss leave sbb push push add push or pop scas pop lods mov imul or (bad) sarb stos mov nop int3 call inc jo xchg insl ss mov and repz into test add dec outsb sbb inc add arpl add scas ficompl xchg nop loopne fs out inc and scas data16 icebp mov cli jbe add adc push cmp jno add pop fistpl fsubs pushl es jno arpl addb idivl push divb addb sub fcmove lods jo jo imul mov mov sbb xor ficoml dec mov jns stc fs lcall jb push add std jo add add jecxz pop add push test je pop add movsl fmulp aaa pop rclb das test pop repnz (bad) xbegin and lcall pusha ljmp xchg out clc mov popa add incb test jno sub scas rol add adc je add push js mov (bad) or jmp mov testl lea sbb pusha inc sbb lods add sub fs and fiaddl push test (bad) dec mov dec popl add mov mov inc mov pusha mov imul mov sahf js jle (bad) bnd add mov dec popl mov inc bnd lret cld add nop pop dec xor xchg push sub pusha push cmc add (bad) (bad) jge push dec loop sub xchg add cltd cmc dec xor cs int sahf psubsb or pop push mov fiadd out jo add aam sub xor movntq out pusha cmp das scas mov jb lret int test es arpl cmp cmp inc jg pop (bad) sbb pusha and jno aam (bad) add rorb inc aaa push lock add or loopne loop sbb mov xchg pop push iret sbb repnz mov add lret pop push mov jge ja xchg mov ficom hlt cmp add test into test xchg mov rclb leave push ljmp push mov and add nop fs jbe inc add xchg imul popa and arpl xor cmp pop lea cmp int3 icebp pop jno push add xor adc fwait add js push movsb cmpsb cmpsl pop jne aas sbb sub xor or xor testb mov cmc add mov push jg jp pusha sub add and lods testl je add jmp notl dec add lcall xorl dec in js cmp push inc in shlb jnp movsl orl sub cmpsb add and add inc aad mov icebp roll push mov (bad) fsubr xor out movsl xchg enter cld jne lds (bad) adc cltd fs mov cmp imul push js and cmc add out sbb pop xchg fbld sbb ss add dec add or xor out test bnd mov ret das movsl aas adc loop gs xchg sbb xor adc fs or addb dec pusha xchg xor notb nop add push mov and jp cmp gs mov stc sub or lds jb incb add mov mov fisub js fwait clc add repnz outsb je lods pop (bad) in mov xor insl sbbl enter jg andb pushf inc fldcw out dec sbb aam cmp and push ds aaa push jg orl pop xchg ret adc add sbb rolb std push cmpsl pop int3 sub cmp and jne mov or lret dec adc ss fs xchg add (bad) out xchg out add std es add cmp leave mov mov test clc je mov push scas add jp popl or rclb jb clc add (bad) mov ljmp or and fcmovne mov loop adc push std sbb ret inc int mov mov push xchg or xchg cmp pop lret cmp in pusha (bad) dec (bad) jnp and or sub add mov insb push push add jmp lds cmp insb jmp add xor mov add pusha sub hlt push in imul lock xchg daa bound cmp pop xchg cmc mov jmp mov mov pusha andl movhps jmp push jnp mov mov xchg mov add mov shrb aaa add jl xchg test scas mov and or pop mov xchg jg movsb add out out pop cli fwait jge xor dec sbb cmp xor pusha cmp add mov hlt mov push jns sub inc cmp das (bad) cli data16 aam je jae xchg orb in and aad scas xchg loopne repz sub push mov lret or xlat add jl add stc loop repnz sub ss adcb ljmp add and cmp pop mov pop cltd and xor dec pop fwait jg js add pop je mov movsl nop pop mov fidiv dec add xchg jns add sbb call imul loopne (bad) rolb leave cli lahf (bad) iret sub cmovnp add push xor add xchg pop cmpsb nop jg add nop insb rclb pop mov jg scas cmpsb and lods es movsb adc mov icebp (bad) lret lea push add mov pop call insb fst or xor out jnp add test mov xchg sbb adc mov js daa mov lret adc push loop mov jle push call test into (bad) push and ret cmp jbe cmp aad test (bad) (bad) popf dec adc or ds xor testb mov insl imul repnz cs rolb adc add mov jnp jl jbe add pusha sub das pop ret xchg add jl add dec cld andl data16 mov lahf jge adc (bad) pop shr and lea movsb cwtl jno,pt orl pop add jg cltd mov sub pop pusha clc push pop dec pop cmp pop cmc mov jle rclb mov flds repz adc add mov fdivrs lret cmp pusha stc pop mov cmp add pop fmuls icebp inc mov add lea add sbb cmc push scas movsb add fadds arpl pusha mov add loope mov outsl mov (bad) xchg add mov inc jb in mov (bad) pushf xor inc add fscale dec add inc mov andl dec leave push mov mov ljmp push pop pop add or (bad) rcr repz insl xor add pop mov out lds mov ljmp (bad) scas jno pop xor sub out leave (bad) les lods jne,pn mov jle shlb pop cli push xor add scas inc xchg dec cmp add jbe loop mov mov idivl add adc out leave add incl push xstore-rng cmpsl les add jmp add (bad) adc (bad) lret lret out mov bound adc xchg mov pop jp cs loopne popf psubsw fdivrl cmp jle add cmp sub jno subl enter xchg inc add cmp sbb popf ja add mov ss testl lret mov mov test mov sbb inc pop adc sub pop jne add or dec add push jne adc mov popa enter pop stos fwait pop xorl add (bad) inc out add pop inc mov jbe cmp (bad) aas mov fwait add into imul (bad) jne xchg scas cmc pusha sub and sti repnz mov xor popl pop push push add inc add imul mov cmp mov mov mov mov mov gs add push push add ljmp inc adc pop jg scas adc lahf cmp adc cld pop call inc ret in out std stos or fdiv sbb je inc jno addb cmp inc jl addl pop adc in cmpsl icebp jl addr16 pop les add pop mov mov pusha sub les jecxz in pop pop fldt pop push mov pop or xchg xor rolb pop dec add add int3 lret adc add and inc or mov cmp test mov push fdivrp jecxz dec scas add dec or mov call and cmp adc into mov scas cmc loope and pushf sbb cmpsl xor cmpxchg mov out pop or aad pop and js or push pushf jb aam pusha sub or xchg out ljmp xor xor and int3 xor dec pop mov imul jo lahf push pop pop xchg mov xor movsb loope sub mov call mov xchg and sti enter pop xor mov out push mov aas sbb or add cmp out push std cmpb mov das jp,pn leave add cli inc lret out push cmp add adc pop testl add (bad) dec pop pusha and sub add and popf ret xchg test cmp add xor ds sub out cmovo cmp add out sbb jns mov mov ja mov aad int3 mov pop sub push pusha add stos sub add cmp add jle push jl sub test scas push pusha ret push and (bad) pop cmp and xchg xchg je addr16 lahf jae add adc push lahf sahf dec xchg shrl leave in lcall pop add or hlt dec les xchg imul sub fs xor dec jns cmp lret and add and test add push adc clc jo jl or pushf xchg push jae mov negb dec mov sbb mov and subl jl dec icebp addb xchg pop push popf addr16 add mov mov aam fisub ds insl add lcall add aas jb (bad) jns mov std add push sbb mov xor xchg subl mov test mov call pusha sub pop (bad) int pop dec fwait pusha add dec jecxz or roll adc jb int (bad) call insb das xorb xor jo jle add les jae mov sbb add push mov add ret cmp fcoms push add les mov add icebp (bad) xchg mulb inc xlat in cltd test lods outsb xchg cmpb dec pusha mov push cmpsl jle es fcmovnb loope jo pop xchg xor add movsl shlb adcl (bad) (bad) xor dec cld lret cmp dec add mov add pop cli mov jge jmp cmp jl icebp and adc adc ja or cld es xchg addl inc shrb scas fdivs hlt push jbe sub ficom add shr or add push repnz and mov mov insl rcrl pop jl popa sub or pop cmp pusha mov adc pop jmp popl stos sub inc sti adc (bad) mov and pop test jmp sbb add inc iret adc sbbl std sub xor cmpsl add sbb (bad) push sbb sahf lcall xor hlt xorl orb js and add out popa mov xchg repnz fldl push test (bad) int js bswap xchg pusha add jae and out xor out pushf nop cli inc rcll in hlt pop mov dec add sub jb xchg add loope movl mov pusha shll ja imul add add sbb or test jl inc je sti pop sub push add loop lret mov fdivs push sti cltd loopne lcall mov int3 setg iret and hlt adc jp dec mov add xor rolb addr16 ret cmp pop and sbb push sbb push mov xchg add sbb add xorb (bad) xor add cmpsl lcall pop adc loopne outsb movsb pop add rcll out or mov sbb daa ret js addr16 sbb lcall imul cmpl dec dec pop out sub les xor add daa add (bad) jbe xchg mov sbb in and mov mov sbb add mov mov in sbb out (bad) (bad) stc xchg adc mov and out mov jecxz pop and fs (bad) jl mov pusha xchg mov add lea iret stc fild push movsl test repz adc add fimul sbb out cmc add mov cwtl mov rclb loope adc xor das inc mov leave add aas aam test lock inc or (bad) mov test jge mov (bad) xor bound sahf sub mov add mov rolb jmp (bad) repz sub jo or or cmp loope pusha sub outsl ss adc inc add shlb aad add jmp add or loopne nop pop loopne push cli repnz pusha aas mov xchg xor sbbb loopne inc and adc js loope inc mov cmp sbb mov add adc mov fcompl jae hlt adc dec add fistpl js decl add imul fs pop add dec test xchg xchg pusha cmp addb xor ret dec testb inc daa lods int jo fiaddl pusha inc jecxz mov sub jno add pop push jge std add shrb cmpsb outsl (bad) test inc push lds aam (bad) push add push icebp les sbb jmp adc xchg cmp fucomp and add cmpsl bound pusha add nop or mov inc out xor cmp jae les inc or mov pop sbb icebp xor mov jmp pop cmp push mov or adc fcoms inc div xchg (bad) cmp cmp xchg sarl ret mov mov and push imul adc dec addl xor je push cmp leave add test (bad) xchg mov pop jo orl mov and ret imul sub push mov sbbl adc xchg (bad) jbe frstor adc sbbb jmp xchg push jae sub adc movsb (bad) (bad) outsl xchg add les cltd (bad) movsl lock xor mov ss popa mov test mov je movsl sub pusha push pusha add inc in data16 add sahf fcompl mov push cmpsl mov sub inc pusha mov (bad) je popf ljmp or int add out adc daa add mov adc cmp cmp pop pop mov jbe into pop add push dec sub xor inc add hlt leave xchg adc repnz sub sbb push mov lds push mov out shlb inc add lds cmp cltd ret (bad) jp jge lods add sub fidivl cmp mov lds mov imul pop mov cmp into push notb add cmc jnp ret add jns xchg int3 xor add clc and jne push mov (bad) fadds sub insl mov xor leave or aaa inc add outsb xchg mov rolb push and je mov xor stos fbstp loopne fwait mov add inc scas adc outsb lea push out fdivrs shll xor dec test ret xchg das daa loopne or mov add mov inc jmp cmp add push mov pop adc sbb mov dec cmpsb jo lret cltd add aad movl mov xor hlt adc add loopne add pslld adc inc lahf lret push adc inc mov jbe sbb pop dec add in jo xchg pusha jo popf in inc sbb xor add loopne rorb push hlt clc cmpsb push add xor add adc xchg (bad) sbb push mov mov or or arpl inc stc in adc sti xchg scas pop jo cmp add test iret jns push xor ret pop sbb add loopne cmpl adc xchg add jne push inc (bad) xchg adc outsb rorl push jne add adc push das lods lea xchg cmp iret and and mov out sbb add nop adc cmpsl jecxz add sub lods and mov add mov mov add fidiv jecxz in add movsb lret outsl push ret imul xchg sbb cltd push insb orb xlat mov jle jmp rcrb push hlt adc sbb add dec ja dec popa out rolb jle and (bad) cmp sub gs shll imul add fisubl subl dec pop lea aas add mov pop sub mov in scas and mov aad iret add call nop jecxz or cmp cmpl dec adc cwtl add cltd lret or add fs and jle and arpl outsb test aaa (bad) sbb jmp jae jge push xor (bad) jo sbb stos cli icebp jl add cmp cmp dec lret jmp cmp cmp roll cmp sub in rclb xchg xor mov orl in (bad) dec incl jb call mov xor xchg xchg sti out or jnp fiadd es (bad) repnz imul cmpsb sub lods cmp call jae pop pop xchg cwtl or fldl fistl pop or lcall lods fwait add daa fcmovnu shrl repnz adc inc cmpsl xor cmp sti jo lret sub nop add sub jo insl pop stos add fs stos inc adc push andb jmp es aaa or add push or push add cmp or pmuludq fiadd jl popa and pusha sub fnstsw mov and bound or cmp dec add sub mov popa push push add jecxz outsb pop mov andl outsl andl xor and (bad) loopne lahf icebp add rclb add insl jmp push js out mov imull jb lods jmp cmp add add stc sbb je ret or mov push add dec imul je dec outsl add cli in push push orl inc clc sub ror and jae faddp aam xorb leave xor mov jb nop add push (bad) mov int add push fcmovb xchg outsl adc mov test dec ja push cmpl pop xor add xchg sbb add mov jo hlt stc add mov jp add inc loop xor xchg or jp or xor mov sbbl sub lds ds sub fisubl repz (bad) call fild pushf aam add jmp sub inc pusha add lods stos add imul fisttpl loope mov pop mov repz add inc xor push out jge pushf les sahf push inc and (bad) push shlb sahf stc mov ficompl js orb jl pusha push mov xor into fildl fisubl sub or xor lcall std push into je push add bound push loopne pushf imul dec adc scas push test add lret mov xchg push (bad) cld inc and rorl add fsubl push sbb orl pusha mov (bad) or addb mov xor pop sti pop inc and pop out cs sub stos jno movsb sbb pop (bad) iret test out sbb outsl adc lret push mov sub lahf jle mov mov pusha add pop mov xchg push adc (bad) (bad) push xor sub pop push mov jo pop push or cmp das push add cmp pop ret or inc and cmpsl mov testb arpl pusha mov cmc or test mov imul rcll (bad) pop and mov pop lods push aad (bad) sub and jg iret and div hlt push outsb fbstp mov fsubr imul sahf nop stc adc add int3 scas mov test push jmp add push je cwtl mov addb lds test in push mov xchg add push or sbb xchg push stc das scas xchg out adc repz or ret xchg pop incl add sahf push icebp (bad) sbb add xchg pop popl lods nop fcoms pusha push in add xchg jle ret push jmp pop push stos out mov sub xor roll mov insb setg xchg pop dec rolb jle add sahf pop mov xor and xchg push jb lahf xorl add and add mov imul (bad) iret jmp xor popf fsubl inc std lea add add adcl sub add addr16 mov cmp std int xor dec jge add fldenv in dec add or iret pop push incl mov int stos adcl inc rorb add bound or ficoml sub ret cli add jns jo out pop add stc and test adc adc push stos add fwait push add mov push (bad) imul jne mov xchg (bad) jno es jl xchg add add xchg push adc aas cli mov sti aad jo das adc pop and popa jmp mov cmp pop push xchg in adc js dec sarl icebp add test add mov dec pusha push inc add sbb and add fadds js dec mov pop aaa in (bad) jo mov enter mov bound add push addl into mov cmp popa ljmp push outsb or mov dec jmp dec inc icebp add push pusha mov lcall mov xchg adc imul sahf add lahf fmuls cmp aas (bad) pushf jg ja stos and ret mov xorb jge scas add sarb push add lcall clc mov repnz lahf (bad) inc enter (bad) pushf das xor push xor icebp les mov sbb xchg mov adc adc popf add or dec in gs out pop xor popf cmpsb add ret mov out addl in subl cmp mov mov adc push inc xor inc pop cmp xchg adc jecxz stc xchg cmp test aaa mov pop sbb xor adc jmp mov (bad) sbb and ja fild jg testb mov aam in rolb js lds pop xlat (bad) mov cmpb push add (bad) jg sahf stc (bad) mov inc push mov popa cmp add push and add jmp fiaddl push push dec pop xchg dec adc add and dec stos cmp mov (bad) cmp xchg sahf aaa add push jns scas ja jp mov jmp add sahf add ss dec je popa xchg je add mov add add and mov lock fsubp add jmp lods mov lahf jno jp fucomip repz add mov push jb ljmp sub or mov (bad) (bad) pushf movb add into mov add imul and clc mov sub add (bad) repnz jle fs push sti jb in xchg dec inc pop jg mov test cmp inc and outsl mov jno lahf repnz xor jp in data16 fcomps ret add push mov stos fildl div lahf stc jge inc add xor ljmp pusha jmp xor sbb add rcrl popf and xchg mov xor syscall sbb mov sbb orl dec cmc lods add cmp xorl xor xor popf add movsl les adc lock xchg ret pop jl or xor push xchg add pop mov or adc movsl jl test fist add jg in mov repz daa dec lret stc jb fadds xchg sbb xlat mov add in xor bound out push lret xor push arpl push cltd and sbb jle cs cmpl mov aas int arpl add pop pop stos or xor sti repz xchg fiaddl sub leave add scas fsubs push lret cwtl push js cmp sub sub add iret fmuls data16 dec pop add imull add dec jge cmp add cmpsb cmp inc lret add pop xchg loopne cmp (bad) mov dec fnsave out test cmp inc mov mov xor pop push inc push rolb lds xor pop lahf bound add pop jle ds xor add sub adc shlb (bad) sbb mov int mov popf inc cmp ret arpl add dec test add mov add mov xchg jbe xchg mov cltd mov add rorl in or xorb je icebp cmp stc rolb xchg xchg xchg pushf cwtl mov mov fild xor andl cmc xchg xchg pop out dec (bad) sub sti inc cmp incb test dec ror aas arpl ss gs addl js rolb cmp adc test mov xorb mov lea xchg sub cmovbe (bad) mov adc gs adc push lods adc aam fiaddl and std xor pop dec mov fadd add push mov pop or cmpsb in fidivl add cmp add mov sbbl clc subl cmp adc mov dec loope fiadd or sbb push ret dec mov repz je adc stos int mov (bad) xor dec jb add push mov lods cmp xlat inc test adc push sahf in popa inc aad cli inc pop rol pushf xchg xorb lahf and sub faddl mov rcrb cmp mov jo or adc jmp push mov fsubrl inc push cld add rcrl cmp sti jo std incb test and xor mov dec add push xor pusha in mov test insl lods xchg xchg (bad) nop cmp xchg add ljmp add movsb insb push xchg or add divb jl loopne jmp add cmp cld cmp decl xchg mov rcll sbb add data16 jbe nop out popf xchg insb scas outsb jae add imul in cmp test lret xorl subl test popf add inc scas mov (bad) jne add leave icebp or sub and inc add lods jb jae jp scas int (bad) shlb adc stos adc jmp jae (bad) and adc incl push add mov cmpsb insb adc (bad) cwtl push xchg mov (bad) hlt mov outsl pop xorl out mov cmpsl push into dec inc mov mov clc push repnz push fidivl pop cmp add xchg in adc add loope test jmp push push negb dec pop popa adc mov sub cmp add xor push mov inc sbb push mov mov fs pop xor mov xchg lds adc adc and out add (bad) in or mov iret inc inc bound test ret sbb and or pop mov int3 dec mov daa cwtl cld mov (bad) push mov sbb aad sub inc push sahf ljmp adc (bad) ds arpl movb hlt std jmp jbe push in push lods xor dec add mov mov in jge xor add mov daa and frstor add xchg repnz dec inc pushf add cmp cmp mov push pusha daa dec movsb inc add (bad) xor pop cmp (bad) (bad) xchg cli lods adc insb (bad) or add iret jbe add int xchg lods pusha cs jae or or faddl ret pusha movsl push add jnp mov xor sub pusha xor or mov rorl cmpsb push das sub inc roll pop mov pop add or sub dec push cwtl jl and push push mul mov inc (bad) movl (bad) xlat pop xchg jmp mov jl roll je roll pusha add (bad) popf cvttps2pi push push faddl jge outsb xor add push lods sbb (bad) lret and push mov mov cmp fiadd add cmp adc aam sub and mov inc test jge mov (bad) ja xor jmp add or xlat push out int3 pop mov sti (bad) fadds fisubr popa shll lds sub push rolb mov scas imul push add mov sub add and enter cwtl jg and divl hlt add sub inc popf dec inc push add imul inc and jae int3 jecxz daa lods jle les jge inc mov sub xor adc add ficompl mov add (bad) outsl insb sbb pop mov add imul sbb pop jl sahf cmc test loopne push jbe adcl xchg mov pusha mov das mov (bad) fsubl loopne das aam add ret sub mov push mov pop ljmp imul add jno repnz loope aas mov add (bad) dec loop pop (bad) inc outsb cmp push idivb ja add xchg add inc mov hlt add jge dec dec mov push or frstor sbb in add pop xchg sub lret sbb scas repz sahf and add xchg add or pop aaa lods add dec xlat shlb push nop xchg fdivrl dec xor ja push arpl jo addr16 mov xchg sub xor mov popa add icebp jbe pop pop daa xor data16 push xchg cmpsl pop testb or std aad repnz faddl es mov arpl fidiv data16 mov rcll xor (bad) lcall inc inc roll sbb je incl mov cmpl aas iret inc das sti cmp add mov stc add add (bad) popa adc ror pop (bad) jp pop sub mov out test adc mov jae xchg add sub add xchg movsb add inc jl push incl or mov ret loopne cmp cltd xor and ret or (bad) int3 pop inc mov mov in or pop mov lock sub jnp sbb mov addl mov add jbe ljmp into mov mov xchg xchg cmp cmp mov push add cwtl rcr jg mov nop xchg les jl mov push cltd jno pop mov aas (bad) inc inc or in andb jl sub add adc clc cmp jecxz arpl push dec cmpsb or mov xchg ljmp jp push mov (bad) add mov jns xchg rolb mov pop add or or mov lret out scas mov pop push dec ljmp add or cmp fstl loope pop sub push push pusha (bad) mov pop out je add push jle into out or loope mov or jl jmp jno lea ret (bad) push pop ret jp add es dec pop out rcrb addl js mov adc in add scas cmc xlat add int push icebp xor push popf out adcl dec orl push add addr16 scas pop add mov xor das add les lahf adc jmp loope jp push repnz mov mov push pushf dec addb repz and addb ljmp mov push sbb mov sbb test sbb lret fimul mov cwtl out pop popf adc dec cmc (bad) xor or data16 mov push xor fistl jl nop jbe cmp adc push (bad) aaa push test stc cmp in flds stos dec xchg dec cltd dec testb add in pushf sub or add mov (bad) nop arpl add je fldcw mov orb pop (bad) sub orl push xor add icebp sub add rorl into push adc jo mov jg dec pop push jge dec add xchg int3 jbe mov add cmp push xchg rcrb sbb xchg loop fxtract inc cmpb or cmp and adc loop imul cmpsb fcompl daa and jnp jmp (bad) mov fs add adc enter aaa xchg outsl std or add pop and test lret add loopne jno push repnz push cmp pop mov jmp add inc mov or leave jle push cmp sahf mov call subl xlat mov inc push aas (bad) lea pusha movq loopne testl push jae adc inc fnstenv adc nop inc mov das pop arpl add mov push mov inc ja xchg or es inc out sbb icebp fs daa add dec sbb add mov enter jae ds xchg test repnz push xchg adc xchg sbb cmp lahf add add test test insb (bad) jbe jle repz jo mov mov add ljmp jno or pop xor push adc pop rcrb inc or popf lods mov or lahf add (bad) jae in jns aam jecxz dec loop test pop xchg mov punpckhdq (bad) pop out aam pop mov ja add scas (bad) sub add pop or push mov jns add inc xchg rorb jb popf jnp xorl std xchg and jbe call xor iret mov lahf js movsl jl clc pop xor add ja xor jb loop cwtl mov add mov (bad) jns push dec sub in add sub dec jae add cmp cld (bad) decl xor dec popf pop push mov mov icebp in je iret leave mov sub mov add add stos add mov mov divl and inc cmpsb mov mov dec (bad) cmpsl sbb push outsb xchg loopne mov and inc lret cmpsb cs rcl jo sbb test insb jne xchg cli les movb lock adc popa add or loopne shrl add rolb or mov int3 lods pop std in inc xorl insb int imul loopne bt cmp sbb jl adc cmp pusha mov pop push sub jecxz jb lahf fwait add out lret adc scas jnp add sbb notb je push adc div in xor cmp mov push aas call mov ret mov jmp sbb xchg daa pop dec fisttp gs jbe in add addr16 call push push mov sbb cmc cltd in aaa add xlat pop dec add int3 or sbb cld sub and adc sti es jae into (bad) jno add xor das dec cltd in dec shrl xor mov jge add mov sbb sub fs pop sbb mov dec mov add mov loope jp add dec xchg push (bad) adc cmpl ficoml dec insb sub repnz (bad) adc and or jl (bad) mov sub pop push test pop mov ret pop push mov add add pop sbbl jae or push push jno pushf dec mov adc mov pop mov add pop mov add sti setp nop jg sbb pop imul in jb inc ret enter cmc push ds add cli inc inc pop xor mov movl ljmp out aam cmpl sbb arpl inc jnp add gs scas sub cltd inc test mov es aam (bad) inc adc imul movl das ss and fild insb pusha cmc jnp xlat add adc sub loope add cmp xor sti dec push fwait jl jp into ficomp cld nop jge pop cmp sub push sub sbb sub fisub popl stos or cmp add insb cmp addl sub add mov and lcall add mov sahf jno test adc incl add iret add es sbb dec jae push mov jecxz fidivrl sbb add push fs or dec push ljmp mov mov out leave es mov add test subb je iret orl push cmp sub xor add xchg push lcall sbb mov mov sub push sti push repnz sbb ret inc jl mov and (bad) je insw aaa add test mov in in add dec loope stos sbb xor aas mov push andl sarb jl cld add dec push dec mov mov fcomps fs jp pop fbld xchg adc aaa lret pop sbb in repz inc fsubl pop xchg outsl add inc dec add mov fnsave and inc and pop mov insl inc inc jnp pop add cs xor mov pop mov aas lods mov xchg sbb sti and into xor cmp pop fist fidivrl jbe roll inc fistl clc aad lock jne push dec sar cmp add sub outsl sbb sub mov adcb loopne xor xor js movsb pop add leave cmp add test jno clc out or mov and cwtl movsl pop inc add scas add adc xchg aam pusha insb popf dec lahf cli adc xorb mov hlt stos outsl push add clc movsb xchg mov xor and add cld dec mov mov (bad) jne push mov cs sbb cmp loope add add outsl sub push add xlat mov push add sbb mov movsb inc dec pop leave gs add lahf add xor ret and ss mov cli add push mov add push dec inc cmp in adc add xor dec sbbb jno je cmp int cs xor stc jo jp and into in pushf pusha aam sarb pop (bad) add ror pusha xor lahf outsb push cmp mov mov sbb cmp adc or dec insb sbbl dec dec sbb sub stos cli xor or or das icebp inc int cmpsb jo addl dec add das adc jo icebp mov jno push mov jmp repz enter fisub and add sub mov sbb jle sti (bad) mov (bad) dec mov cmpsb inc mov ss jg add mov push fadds stc std insb js add sub mov mov mov jbe in and je rcrb sti loopne fbstp jbe and fistpl lcall sbb jle scas jp out rorl cmp or gs mov clc add call push and lods push dec push push orb mov add sbb mov dec add jnp (bad) mov add sub push add ljmp pop inc popf aaa fadd jge xorl inc sub sub cld sbb adc fistpll dec movb into (bad) mov jmp mov add mov jo pop mov (bad) sub push cmp cmpsb mov inc push adc mov dec (bad) aad std repz loopne outsl jbe adc jo popa push roll pop test inc negb mov mov ss inc adc add push stc sub aam hlt sahf add push or add shr jns push sub insl repnz dec mov repz inc inc sub push add in repnz cltd (bad) cwtl ljmp ds jo fiadd jb es and lret and loop push add push inc push ret jns xorl pop mov daa je add xlat inc hlt add fiaddl jle mov movl add add adc add mov xchg xchg inc in mov adc in add pop jo pop mov inc sbb andl aam jg (bad) jb fcompl add xchg and sahf dec loopne orl jo fld1 add test loopne lret mov je das pop pop jo add adc mov jge push push (bad) shlb stos push enter (bad) into add (bad) icebp adc stos and pop mov hlt lcall mov and mov xchg mov loop scas dec cmp push add or iret xor mov jae add push jg add or mulb inc fdivrl out mov mov adc push xchg mov pop or add sbb or mov add xor push pop adc jge imul adc repnz jg cmp xor stos jno push add push push adc test dec cmp add xchg mov fstpt adc lea iret cmpsb int pop pop (bad) js ret addr16 rorb out mov mov mov inc xchg push mov pop mov cmp add fidivrl stos jno cmp add int3 mov rolb jbe int adc lods fildl fs mov adc add pop lahf js xor add aad (bad) call add add adc shlb mov rolb inc loopne xorl fs lahf add pushf test fimull (bad) pusha sbb adc or sahf sti ja or mov test add mov fnop mov pushf fs (bad) xor and dec in sbb add xchg mov add inc (bad) lock xchg out pop lahf sub test stos mov add sbb popf iret fiadd idivb add loope or dec inc jo add leave and sub xchg pop mov mov mov inc sub getsec cltd mov int3 and and add sub addl andl pop sub pusha stc sbb push mov notl cmpsb add stos sbb pushf jo clc dec movsb push sbb adc lds je pushf pop add ret fdiv mov push dec and inc pusha xlat movsb dec adc out add sti in mov dec sahf stc xor loopne lret les add inc andb and add jl mov inc out cmp movsl inc or xchg jno inc adc sub sbb mov add adc pushf (bad) repnz jo sub es jnp testl pop pop or pop jbe (bad) iret testl mov jmp inc hlt pop adc mov aas mov sti scas loopne mov and cmp xchg (bad) fidivrl loopne add scas jo imul out xchg add mov dec push xor test in cltd add add enter add jns inc jg arpl data16 sti je das fs lock out pop xchg pop insl add clc and cs enter mov jb pop inc fstpt add cmp xor mov mov fcom dec jne adc cmp add push shrl cld cmp inc mov stc mov xchg add cmp jnp xchg stos clc add and test adc les xchg clc std xor orb inc jl cmp std mov sub ljmp cmp (bad) rorl pop sbb lcall (bad) adc push xor (bad) push ljmp sub or insb inc mov add movb out (bad) into add jnp jecxz push lock in fcompl dec ljmp data16 sbbl (bad) adc aas les jge sub jle sbb inc fstpl in mov call cld add xor sub xchg dec or push sub shrl jnp add or xchg fbld int3 cli sub dec add fstps cmp sbb add orl cmp cld add xor inc inc in mov lahf outsb aad mov push call test or inc je add bound sub (bad) xlat adc lds pop inc xor push pop test jno jecxz frndint daa mov loope adc dec jge cmp pop add cmp iret add jp xchg icebp sahf cmp es or fwait loop sbb pop mov xchg or pop jmp aaa cld iret inc jb ss aas scas jecxz ljmp leave fs mov test adc sub jns daa sbb (bad) out das adc outsl add mov lds add mov hlt push (bad) add or cmp xor hlt roll mov bound loope jecxz xchg pop popf mov push inc xor fadds icebp xchg sti test jo pop and pop xlat fiaddl cmc xor bound pop cld cmp mov (bad) insl enter (bad) sti call insb jne add inc mov adc and xchg add xchg add xor movl jecxz lahf mov shll rcll pop pop aaa sub xchg loope cmp xor cwtl fistpl or ss lahf add mov or dec pop jnp (bad) xchg jbe add jl adc add add jo enter lds xor inc add movsl dec aad or lea push inc sbb xorl rorb xlat add mov aad dec outsl pcmpeqw outsb inc pop cli int push pop sbb addl popf jbe jmp mov les add or pop inc xchg inc adc ret sbb lret add mov inc push popf repnz xchg add ja rolb jmp popa je imul xorb or jo pusha dec sub mov cli jge add mov rcrl pop addr16 add loope roll hlt loop aas test pusha fwait gs mov cmp add ret arpl rclb inc and add repz add pop xor loope jnp fstp xorb sbb push lea sub pop push adc adc fsubs cmpsb out aad mov cmp mov and jecxz xchg setl mov bound adc or jb rolb dec sbb out xorl cwtl mov jl test jo insl pop loopne push pop loope or aad mov scas ss inc and pop push sti inc mov lahf xchg inc cmp mov roll lock jmp push (bad) js add cmp or nop dec inc lock data16 and cmp lods inc xor mov or inc ficompl pop cmp scas mov ffree lcall xchg ja lea loope add bound jle sahf sub dec or dec icebp add inc out fildll push andl ja in cmp add xchg int3 inc jge or movsl lret pusha cmp (bad) hlt xchg (bad) scas cmp inc jmp mov inc or dec ltr jbe ret dec sub shrl call and daa cmp jge dec imul xchg cli sbb add cld pop rolb (bad) outsb and out aas sbb adc aam movsl (bad) jb (bad) add add fisubrl out js jb pop add imull add sub repnz bound mov mov or lods or xor xchg push jno ja add push dec out sti (bad) icebp in add rolb fidivl daa mov inc add adc mov add cmpb cmp add inc pushf insb (bad) icebp jo push mov cmc shll xchg add sti test es scas shll mov jmp add fsubrl xchg pop inc and mov xchg sub add xor inc cld enter insb je sbb sarb out or jns mov outsb movd divl cmp mov pop cmp mov inc adc add (bad) pop bound jmp dec jae das inc lods rol add adc pop movsb add push xchg pop shrl cmp jge insl repz (bad) dec add jne stos fisub lods test enter inc out test xchg in mov add mov mov jg xchg inc cltd ljmp inc fsubs jp testl vmovd mov add cmp jl sbbl arpl xchg add inc stos (bad) enter push ret inc dec orl push add add mov imul ss stc cli cmp lea inc inc int cs inc add (bad) pop push pop jle aas xchg lea fstl sub push adc test jmp push fistpl rcrl test push and hlt jns mov rol cmc cltd mov insb mov add (bad) adc jmp shrb mov jbe sub jo pusha mov add dec stos mov xor movsb push es or add add enter lods jb roll pop insb pop stc sub jmp xor add adc scas mov test xchg aaa pop pop xor loopne aam test jecxz into add push add (bad) pushf adc xchg test mov loop push lods (bad) pop cltd pop sub rorl fidivrl cmpsl mov into push outsl jb cmpxchg orb aaa mov shrl push pop add sbb test repz xchg scas sub daa pop xor mov test into cmp (bad) pop out inc add fstp ja xchg xor fsubl xor xor mov mov adc testb fisubrl xor clc daa dec inc lahf sbbl jns dec js scas imul pop mov xchg add jo mov mov cmp (bad) xor push mov cmc (bad) mov pushl cmp sub adc jo stos add mov pop and pop push loope inc mov rol push inc (bad) mov rol andb mov fs inc out jnp incb test inc push pop xchg cmp es aam cltd lods xor lods xchg add mov jp xchg das iret movl xlat fbstp jbe add stos inc test out (bad) mov out push pop adc popf (bad) call xchg ss inc lahf xchg addl je scas add push xor mov mov lret in adc idivb ds add mov aad mov aas cmpsb and stc add xor pop nop xchg xor ret pop (bad) mov aad inc sbb scas pop pop inc xor add push popw add test add cmp ficoml aaa jle jb mov repz inc mov pop loope ficomp mov push cmpsb add in pop sbbl xchg test mov inc (bad) into jns iret test lcall xchg mov call ja xor sbb mov mov sub jns pop subl fldcw movsl push fs pop cltd call jb mov xor sbb sub mov add (bad) in add jo punpckhbw test dec add mov sub in lret sbb or jle (bad) sub jae inc (bad) lcall adc xor ja add mov daa xchg int scas mov add test push sub rcll cmp jo std lahf leave add inc push cli dec call scas jbe rcr das mov pop push (bad) adc dec pop xor in or in or idiv pop lcall enter add and sahf out push add bound push jo push add sarl lret (bad) stos push or push iret pop add (bad) mov add mov add lret rolb mov jg mov outsl loopne out in mov add ret mov clc and stos push jecxz ficom aaa mov sbb movsl jle insb aam add in test push dec pop iret dec mov pop push adc xorl xchg and (bad) xchg add jp std adc cmpl sti mov shlb adc add push ret mov or xor cmpsb imul xor add call inc lods pop add or jnp dec out add mov mov js incl pusha sub aaa cmp daa addr16 iret (bad) adc out aas (bad) cmc fs jb mov gs (bad) out push mov insl xchg cmp add lods mov adc push add mov add jns in add push gs mov push popa bswap mov stc (bad) cmc dec dec push mov (bad) mov (bad) cmc (bad) push dec and mov and add popa add add sbb adc jge add jns int3 inc (bad) mull adcb cs mov jle stos inc loop add push pop mov cs clc shlb add lret lret sarl mov pushf fisttp push xchg mov pop movsl add movsb stos jne popl mov les mov cmc jae jnp inc pop (bad) mov add movl cmp scas add mov push jge and add bnd subl lret push cmc cmpl shrb sub add (bad) push dec pusha push cmp mov sbb mov out outsb add push lret sbb add sbb xorb repz or cmp pop mov (bad) (bad) jecxz jg sbb lods sbb shrl add sbb push mov ret adc push pop punpcklbw scas test mov xor pop hlt add (bad) mov lcall mov (bad) mov pusha sub ljmp pop inc push mov inc push push add xor sbb lods cmp incb push rcrb dec add push inc scas cmp push es pop ret or add xor call mov add fwait mov in sub dec rolb xor into add push mov (bad) cmc add xchg lock imul imul les loope jns stc add cmpsl and repnz sub mov sub push add decl add sbb icebp gs push add inc outsb out clc (bad) add mov pushf cmp mov adc mov pop dec jo jecxz mov or push or sub gs fdivs jne popa loope (bad) insl or mov imul jmp xchg dec xor (bad) gs call xchg sbb pop xor add data16 pop pop lods xor sbb pop jmp js int cmp into dec and scas add mulb sahf push add ljmp push xchg xchg jp cwtl xlat jno fistpll add add and dec xor (bad) mov dec mov into inc lret sbb movhps mov insb xor das stc add sbb cmp adc dec dec push jge call or pushl lret xor sbb mov mov mov clc and inc jmp icebp push add xchg (bad) leave mov testb lods jl int3 pop inc xchg popa lods cli out pop push push pop pop cmp shrl push test add mov int push and lods add push mov add lock pusha lahf daa test sti or inc and addl add aad aas mov xor aas add fsts es sbb pop (bad) adc cltd mov dec add jg pop inc out add add xor int hlt pop mov jge mov jmp es pushf in sub cmp add cld inc dec add sub and add daa dec ljmp call xchg rol fdivp fstpt xor scas mov jp fadds scas loop lret push addl add bound add test jmp addr16 cmp push js test iret add (bad) pop pop jle lea ret addl push cmpsb cmp mov clc lods xchg cmp (bad) cltd pusha pop js cli aam ds jne ss insb in fdivl imul (bad) fbld xchg int mov xor cmp cmpsl sub pop add cmp addr16 sar fwait loopne negl xchg rcll pushf fcompl jecxz xchg loopne xchg inc mov inc add ret stos call adc adc fcompl xchg loopne jae add jp jbe add jo outsl add fsubr jns xor popf iret or mov rcll mov clc or lods add insl outsb pusha not pop cwtl add addr16 inc pop jmp jb cmp add incb clc mov push xor pop push add sbb xor out seto xchg std not jb mov add push adc les push push add xchg bnd xor cli rcl mov nop jecxz out pusha int je add mov and xor or push inc ficompl into add jns sbb in fisttp lgs movl cmp push inc dec aam adc lock icebp add mov dec stos lods daa xlat xchg movsb mov dec je arpl rep adc mov pop add into addl pop ret pop gs add add stc les jne xor ds incb movsb push mov popa add pop bound test idivb pop pop mov xor mov dec in nop xor data16 add int3 xchg mov clc and mov dec pop inc repnz mov cmc cmpl push scas jecxz add mov iret lcall cmpsb ret inc mov jge mov lret lea jbe sub push icebp xchg add push sub (bad) pop xchg test add sub mov bswap aam inc sbb jbe jae dec jo pop xchg adc push cmp mov mov test daa mov sub insl movb cmp add cmc add dec adc outsl xor pop jp and xor sbb xchg add jecxz add and jno jbe clc add lods add mov movsl mov pop pop loop push lea add inc pop jo cmp iret aad arpl pop sub sub jo or mov shr fsubl rcrl xor dec in cmp mov jb jno push xor xchg test loope mov and (bad) jmp jne cwtl int3 movsb lret add std and dec xchg cmp dec cmpsl cli test movsl xor dec xor pop push incl inc push stc jecxz loopne pop cmc pusha and repnz jno push add mov aaa add xor add and loop movl imul negl sbb or outsb xchg test jne inc pop xor or mov lcall sarb add lods movb add mov stos (bad) mov cltd or or cwtl pusha mov sarb inc sub aam dec mov push inc sub in repz dec push aaa movsb hlt mov test xchg xchg out arpl dec dec sub push lcall mov stos cli hlt test std lahf add xorb add pop rolb aas repnz xchg loopne jl,pt mov adc add (bad) xor push push xor and aas push pop scas and lret mov movsb add sbb fldt push pop subb std insb xchg stos add pop dec cmp sbbl sahf mov adc mov pop sub fnsave xchg sbb in xor jns add std xchg and test repnz jo xchg mov je inc ljmp xchg dec push fistpll inc xchg adc sbb cmp sarb arpl add xor scas jle ljmp fidiv shrb sti sbb fs lds xlat jl test cmc dec and aam lret rcl jle xchg add cld je fbstp xor outsb push jge scas push and add and sub pushf out inc divl add daa cmp je mov sbb das add jne ret add in pushf imul data16 push (bad) into ss dec test (bad) mov and add ret sbb jns outsb mull mov add aas fisttp insl in sbb xor jge mov or rcll push push jp pop push out adc and (bad) std ror andl in pop or pop scas xchg jnp dec sub xor ljmp and add lcall xorl sarb push jo xchg xor push movsb add push nop xchg push roll inc pop fidiv test addr16 add ds into add pop xchg cmpl cld pusha add jno out cmpsb jns lret mov insb lock pop outsl mov mov jg add push les out add scas jmp mov ret pop inc cmp push pop push xlat (bad) ret cltd add dec pop add stc in mov out pop push cmpsl mov push pop and jbe pop fisttp je sahf pop push hlt pop inc inc pop aas lahf (bad) movsb dec mov loopne ljmp out cmpb lret xchg xchg mov sbb mov je add imul add and and ss cmp lahf stos dec inc loop adc ja adc or or add lret xchg aad insb add mov dec add rcrb (bad) pop cmp mov adc (bad) pop cmc jo cmpsl add fsqrt jb adc div xor jae addb lret jae xchg das cwtl add lods nop xor xlat insb add idivl shrl and mov rclb mov decb and mov jo mov cmp loope mov xchg or addl cs repz add lods in ret (bad) je les add cmpb popa test cmp sub adc movsb aaa push (bad) out jnp add movsl insb std mov rolb add xor sbb leave je add iret mov mov cli adc repz or cmp or (bad) fldcw mov dec call iret xor xchg insb (bad) sub in je mov cmp out push popf inc js cmp ja aas es push adc adc cli add pusha mov mov cmpl or lods sub ja and inc stc ds add pop (bad) mov outsb or fistpl ljmp test in movsl add add dec sbb int3 jbe jge and jge inc pop dec cmp (bad) jg stc int lods addb push or ja mov adc das push (bad) fs mov rcll (bad) jo mov inc outsw inc pop idivl cmp adc (bad) jl fstpt cld inc or push arpl (bad) adc add lock mov add fiaddl cmp popf dec sub jns add ret pop test jae add sbb dec add out add repz jo sub rcrl cmc popa add jnp lea scas lahf add lret or xchg fsubrs inc mov add cs sub jp sbb mov mov cld cmp sbb pop pop (bad) lret fsubrs or mov cmp clc js pop rolb andb leave cmp mov jne negl inc adc xor add jns outsb xor add in push cmpsl test movb jmp pushf dec ret inc stos pop cmp sti ja inc jl push in loop mov cmp gs dec add push add scas in and xchg aam movsb in lret push push adc lea push mov xor add xor bound (bad) aaa inc xor push xchg push jae aad cwtl adc xchg sub adc pop movb xchg mov mov aas mov add dec movsb sahf mov sub cwtl incb inc xor xchg add subb sti pushf mov subb cs mov pushw fadds icebp cmp lds mov add xchg add pop fdivs adc jb addr16 stos scas dec les loopne xchg xor adc pop nop gs inc fwait add pop sub mov jge jp popf (bad) std add inc lret push sbb addb xchg insl add sbb popl mov and dec je sub stos addb and nop dec add sub add ret xchg xchg outsb add inc or add rolb test fs inc push sbb jae add cwtl or ja imul pop cmp je push scas insl rcll repnz stos jo add lcall inc sbb or faddl xchg mov push pop xor pusha pusha mov sbb cmp fucomi ljmp cmp inc scas cmp push aaa add out test add cli push (bad) out cmpsl jns cwtl inc pop ret scas sub xor inc jle pop cmp imul je aas (bad) cmp (bad) in jmp sub pop jl aam fbld pop jmp inc add mov imul push sbb sub cmp add and adc adc jl and lahf out loop and push lret xchg push cwtl add orl test lahf pop repz sbb add adc jnp inc test stos inc and inc in test iret jnp pop fisttpl pop adc adc mov iret cmpb mov insl lock xchg jp and mov ja cld addb das adc lahf test paddusw insb inc shlb into mov enter jle jbe in outsl aaa int3 cmpsb notb add call add nop pop sbb hlt add inc ljmp jl inc stos sti jnp jmp dec and in dec test cmpsl stos fimull push into fadds pop cmp sbb ror cltd mov lret mov add (bad) cli or fldlg2 jb mov (bad) ficoml xchg ret movsb add push ror lods jo lcall sbb sub add inc pop ficom das jo push cld mov xchg sub inc mov push cmp clc add nop sub ljmp pop leave sbb add and push add inc cmp sub sbb stc fs test sbb add or adc adc movsb aas xchg jge lahf push and popf jnp outsb ljmp mov add cmp push sbb push (bad) in jmp pusha or mov dec int jp sbb insl add sub mov addr16 xor sti and adc movsl nop loope or mov mov xchg pop add or cwtl test xchg mov add in insl add jg decl loope fsubrl cmp pop sub mov mov icebp out les jbe es mov add jne push inc xor mov jmp into in rcll std aaa or pop pop inc xor mov subb pop add inc aaa push lods loopne sti jle xacquire dec sbb add and cltd add mov xchg sub add mov std lcall pusha loope add jp lods push pop mov popfw pop adc test icebp add lods add or (bad) mov inc cwtl pusha mov mov add and ja jmp lea aas xor jg cmpl clc scas dec jne stc jmp xchg out cli nop fist jbe mov xor addl inc es adc gs inc mov outsb leave add pop mov sbb pop dec add jbe movsb cmc and inc sarl aam dec pop add jge lea sbb sbb nop jo mov add jg add push int3 testl or test insl dec loope push add and push add cmc sbb jb int3 xchg call pusha gs sahf cmp repz or add mov inc xor sub out ret clc add test mov and enter xor fnstsw repnz pop push ds pop xchg pop sbb xchg add aaa in jecxz inc dec dec cmovp add movsl mov push sbb add adc cmp add ss mov cs sub mov or adc mov lahf add mov movsl lret test mov addb push sbb or push mov mov push (bad) xchg loope xchg sti fild sbbl adc cmp add or pushf sub mov or mov test push mov add dec jecxz cmc dec fbld adc (bad) jo add push pop cmp add insb mov pusha movsb pop and mov out sub add flds inc ja mov (bad) push add pop inc mov inc nop sub jg or add in bnd fmuls xchg xchg dec add shl stos (bad) mov add inc setnp nop js out push hlt (bad) rolb clc xchg mov jne int3 sahf dec popa add jae lahf mov cmpl jl jg jns scas xorb (bad) mov mov push cmp popf add fldl jbe xorl and jo in sbb clc jmp sub mov pushw pusha mov jo mov int int3 fs jle jl pop or sarb in cmp imul fs add xor bound sti add aam iret push repz lcall gs mov outsl pop mov adc mov frstor sbbl cmp ret pop test adc fsubr sub pop pusha scas (bad) icebp stc push fstpl es mov lods loope fidiv test mov pop test jp and push imull add pop call push push xchg pusha dec into repnz mov je xor mov mov pop mov ds mov push add and push fcmovnu jl cs sub jle adc aam mov test clc sbb add cmc std das push stos fiaddl push add adc mov lea xchg sbb cmc sti aad nop adc lahf das xor inc inc stc aas add pop jbe in cmp cld push cmp movl xchg jo roll outsb jmp mul repz xchg gs mov mov dec xor lds cltd aam pop ja lcall (bad) xor lret nop es add int3 xor cmp jl test aam in pop and sti jns mov xchg and xchg mov iret adc mov adc imulb xor mov imul mov add xchg inc mov movsb (bad) std imull fidivrl lret add and inc outsb fistpll call add add gs imul jno add outsl int3 into es dec sahf push sub jle sub sbb or fld xchg xchg cwtl pop and sub insb mov sub cmp add mov loope lock jl xchg dec pop add dec (bad) mov add pop and cmp adc mov lret add xlat mov dec sbb pop incl ljmp jge ficoml sbb add pop xorl pop cmp fbld add je (bad) jns add sub jle xorb xor and (bad) jo adc bound pop push rcrl fisttpll mov fs push mov inc stc adc jmp sub pop inc sbb pop (bad) mov movsb fiaddl bound sbb inc inc mov in or add das mov adcl icebp mov sarb test add adc bound test fsub cmp stc sub and (bad) clc pop jl dec add mov jmp sar sub (bad) aad cmp inc insl ss add mov inc jg sti repz mov inc mov fndisi(8087 mov lcall lods pop aam imul pop cmp repnz enter aam xchg rcrb jle inc xor jecxz insl fs flds pusha sub outsb imul pop rcrb xchg mov in adc sbb fildl cmp mov lahf mov dec jbe add mov pop addr16 (bad) jmp ss orl jmp lcall inc or in pop push fmull loop sub imul pop add adc mov imulb inc dec add jecxz inc mov push xor leave and cli sbb adc iret insb movb mov js jnp ja inc add mov sbb sub push jg test lahf lcall xlat mov dec cmp repz js add jle iret mov cltd lods add add out push mov sbb fadd add adc popf sbb andl pop xchg xchg dec in inc scas mov mov sbb ficomp push jge icebp sbb pushf cld pop add jno data16 fs sbb pop lahf sub (bad) or add (bad) into cmp imul test xor mov add out jge in add mov mov push int add mov sbb cwtl loop (bad) jbe lahf push gs je aad lods dec sti notb pop pop add lret and lret add out adc stos in outsb xor scas movsl orb ja sbb xor xchg test sub add inc call sbb idivb lock add fidivl call fwait imul insb fistpll xchg stc rolb and pushf mov cmp and in add aam jne jmp add imul push sbb test push dec call daa sub dec and xchg add mov lods movsl adcb inc bound mov push mov push je pop adc adc mov cmp jmp add out int3 cmp andl das pushf mov add rolb and push mov pop add aad push addl jno jmp xor loopne mov xchg jbe lret mov std sub dec mov jge mov pop mov sub iret adcl les cmp mov pop mov sahf add fs cmp sub js add mov pop out add sbb imul jmp jo fstl mov pop cmp not add out icebp pop pushf je add (bad) cld xchg jge add push lret jo stc lock and pusha mov adc call decl xor (bad) dec ja ljmp insl sti stos insb shll xchg push lods lcall (bad) int sbbb add je push cmp push jp mov sahf fsubl add enter xor adc lods xlat leave rol hlt (bad) xlat add push shrl rolb popa cmp xchg xchg lods mov add add adc and cmp (bad) sti add pop sbb ss pusha popf sbb test cmpsb (bad) call mov xchg repnz addl jle into sbb and xchg fldl xlat push mov aam mov sbb popa and je fwait lock pop cmp dec insl adc add (bad) fidiv push leave stos mov pop add sahf or sbb into fbld stos add push addl dec push mov xchg jo (bad) dec push out lea push cmp mov jne bts test xchg fisttpll pushf rcll fisttpl int3 dec cmp mov push loope jp add jo sub pop lahf scas pop inc into cmpsb cli push sti cmp imul and or data16 loopne push add jo dec ds fcmovu add mov popf jnp dec repz movsl loop add dec inc icebp mov push pop ds adc out xchg push das mov inc or pusha ret dec mov jno adc cli addl xchg pusha (bad) jo and add sahf icebp in ds adc dec add cmp jp psubw pop and dec sar or icebp add out mov das jae flds mov pop outsl orb jo idivb mov add insb dec imul scas call rolb mov jno in pop data16 sti jne orl fnstsw mov xor add clc outsl pop (bad) lcall or (bad) (bad) xor pop into andb push imul mov push pop in or lea pushl scas pop rcrb adc mov dec scas or mov insl lods xchg add mov xor and adc push push lods pop jo add imul mov mov loope cmpsl test aam xor (bad) add into pop adc inc or fsubs (bad) pusha and cmp (bad) jae (bad) or jl xchg xchg iret cmp sahf test (bad) aad icebp mov mov in push stos data16 ret xor addl mov add push inc or jmp push imul mov cmpsl xchg (bad) cmp mov and push adcl push add daa xor add xor pop mov mov cltd repz incl (bad) push sbb aad sbb cmp out sbb mov adc fdivrl xchg push les and mov pusha cli fimull hlt icebp pushf xchg (bad) dec dec in add iret inc jge add jecxz movb loopne incl sbb mov xchg push ret pop xchg loope push cmpsl mov sbb add test pop cmpl ja add xor jge and mov inc push inc dec ja pop mov jbe sub cli cmp clc iret jo cmp rcl in es adc add arpl cmp out push aad lods sarl add or cmp (bad) or xchg fcoml add add wrmsr fisttpll pop roll in inc ss push movsl cmp sbb jbe (bad) add ja (bad) das pop incl movsl aad pavgw stos add sbb fwait pushf jle hlt mov rcrl pop shr clc xor mov lahf mov popf jmp (bad) roll fdivrp cmc fs in adcl movsb jnp mov imulb into add xchg adc inc xchg sub in mov popf sbb inc addl inc fimul or xchg jne hlt add aad sti sub xchg out mov incl or xchg and lahf iret loope lret add stc (bad) lods add jg jnp imul push in inc inc stc subl xchg nop push in sbb xchg cmc popf call addr16 push inc inc sbb xchg orl (bad) push inc stc add xor inc nop jecxz lret or repnz aam addr16 add int3 push lea loopne ret aas pop nop or cmp xchg test adc fsubr sub ret jle xchg add push flds add addb in insb mov add mov xchg aad jge add call push mov hlt fwait xor clc aas leave add jb sahf cwtl cltd xchg add mov xchg stc fistl (bad) lods clc adc sub or test push fs test cmp mov aaa and xor jl movsl loopne add sbb ss mull jnp pop cli pop js imul les pusha and roll mov movsl or sub into sub add cmp addb sbb ret push add pop jns add push and xchg mov or add loopne (bad) add mov and aas pop imul add inc cmp add lods mov je dec fwait mov push and cmp enter fldl mov pop xchg cmp incl clc mov xchg mov jecxz loopne test sub xchg sub jne ss (bad) mov mov in aad faddl inc ffree pop push lret ja fsts or inc push mov lock pop adc jge mov addr16 clc mov xor scas mov orb repz pusha mov add jbe cmp xor add xchg inc pop shl fwait add jnp in pop add jl add cs cmpsl ljmp cmc sub adc add rolb sbb mov aam mov popf dec or or int3 (bad) pop adc aad fiadd sbb fistp jge in mov mov (bad) jb cmp cmpsl dec sub push add add icebp add cld mov adc mov add xchg sahf mov pop cwtl cs push es xor test jb lcall add fsubrp add mov or dec pop sub inc test add push js add rolb daa or addr16 insb and cmpsb add sub xor adc iret lods xor scas add cmpsb dec adcb sbb mov je xchg jecxz mov fsubrp sub out and out leave lock pop int ljmp stos into adc push mov pop subl adc enter or xchg fdivs add mov mov lahf xor jle prefetcht2 rolb mov in jp cmpsb cmp dec or test xor adc lds dec pop mov pop xchg cmpsb jno inc shrl xor mov mov negb fiaddl fsub ret sbb pushf pop mov sahf add mov xor mov push add ret std pop clc cltd add push test fwait cmp leave add lods fisttp and imul cmp dec jb ljmp and aaa add xor mov add lea add dec add pop and dec or jns,pn fiadd jo pop add fiaddl push adc leave push xor mov js xorb pusha or sbb test jge lds sub (bad) xchg push pop add and sub jecxz xor sahf rol pop jne cmp add xor mov out xchg loop sub andb dec jl ret outsl pop pop lock sub jl dec ja cwtl (bad) pop into adc ss and (bad) negl pop push clc sbb adc add push cmp fisttpl ret dec xchg pop mov add pusha (bad) cli mov (bad) es pop outsb insb add cmp addl fnstenv or push jle lock cmp xchg and mov gs pop jae mov add mov mov push movsb rcll cmpsl aad mov jmp cwtl and jns shr int dec mov cmp push mov mov cli dec mov shl cmp (bad) dec je add push adc pushf mov fcmovnb mov adc aaa xor jo add dec inc adc rcll or cmp sub or int pop mov or inc insb push cli add (bad) ficom jge push in aas add ret sub bound and rorb sbb mov mov (bad) pop push into das mov add test dec sahf scas inc arpl data16 pop add adc cpuid and cwtl leave rclb adc jns add push rcrl ja test push out in bound push mov movsb mov lods les add adc in pop mov (bad) rorb cli adc aas es in loopne test cs loope push stos test mov cmp sbb xchg in cmpsb xor xchg fstpl fisub add lret push rdpmc pop imul or out add fmuls pop rorl mov ret add xchg push outsl sti pop jnp add (bad) mov mov push fnstsw (bad) xchg or rol js adc add add add loope,pn sbb out in enter mov inc cmp cmp dec mov sbb in sbb test or lcall daa inc adc sub xchg lea xchg hlt cli insl mov jae push mov xchg add andl inc dec adc andb out insb xor cltd and test jmp jne insb and pop mov outsl (bad) sbb in xchg getsec movsl (bad) stos (bad) (bad) mov xor ds ss mov lods jmp popa pusha add insb or jbe std jecxz inc push add ret inc mov (bad) mov add ficomp ret xchg inc xchg stc (bad) gs push sbb xchg push js scas jge,pt add jl insb xchg jle mov addr16 adc lds sub mov dec push pusha fbld jl cs add mov xor pushf add mov lods dec cli add adc sbb push dec nop adc aas xchg mov (bad) adc xchg jo or das jnp subl inc xchg push data16 add dec ret sbb pusha jb add cwtl mov sbb lret pop dec sub xchg je mov sub js js mov pop cmpsb adc clc inc in jb push leave mov sbb das movsl mov mov iret inc in add mov (bad) xchg lret jnp add das push clc subl les daa push push ds (bad) inc adc popa mov add pop push jns in jg jge (bad) mov and xor ficom repnz xlat xchg stc int pop mov loop xor and sbb add push add out inc iret movsb ficoml sbb or mov cmp and imul test pop jo sbb add int3 out sub mov mov mov fwait (bad) dec dec sub cmp sbb int3 and cmp (bad) shll jno andl pop clc sbb push lret roll add add sub clc add movaps in dec into dec bound stos sbb pop ljmp das add lahf pop or mov mov fwait add and cmp jbe pop add lock into jg sbb cmpl test stos add mov or loop icebp insl loopne adc dec and cmpsb adc cmp bswap xor loopne push call xlat data16 cmp cmp sub xor popa outsl mov add int3 call adcl imul sub push add scas pushfw add mov enter shrl xor add push aam jb dec push jmp inc mov mov add imul out addl jb or cmovnp adc (bad) and fimull push xchg or daa sbb fmuls orb dec adcl dec add pushw sbb insb jno push movsl xor cmp icebp or push jg loope add faddp inc setl lret lock stc mov rcrl hlt dec pop fstps and add popa gs mov push outsb pop xchg pop mov xchg and and add aad ds xchg mov loope pop enter pop test popa mov cmp push pop mov add mov inc jae jo addr16 addl xor inc pusha cltd stc adc test mov movsl repz out lods adc dec js add or iret push dec fadds inc aam mov xchg scas fdivl jnp cmc push add or inc outsl push add (bad) and adc add jne (bad) cwtl dec lock ret add dec icebp (bad) sub or sbb pushf xor (bad) and add sbb out imul inc out lahf cmp lret adc sahf add mov add inc stos (bad) mov add lcall test and add mov addr16 dec movb and lds repz sub xor mov jge inc ret loop stos adcl stos enter cwtl fldt sbb daa jge and cmpl mov movsl movsb add repz inc mov stc mov mov and push pop mov inc xchg sahf sub in loopne addr16 mov sahf jo mov or inc cmp mov dec add jecxz inc fwait cmpb mov add pushf fsub sbb mov pusha xchg jl fldl mov out cltd addb (bad) js rolb mov jg dec mov pop push test fild fwait imul or add adc push push add dec mov pop add pcmpeqd fsubl test and sahf inc pushf inc dec xchg fs pop imul mov sub cmp pop ja jl aam add and outsb xchg add ret shlb adc and mov sti push inc (bad) (bad) mov adc xlat fs jnp jns add aaa mov in insl xchg mov sub bsr fisubl (bad) rolb pop cmpsl sub adc xchg sub subl adc cmp add test xchg aas add lods and es xor add aam jbe gs out (bad) iret hlt lods push sbb js adc sub in aas cli sub inc cmp pusha add je jno cmp ret sub pop mov rcr cmp jle xchg hlt cmp add jg lods or jle orl sub pusha jne sbb jns add mov call scas jo enter das popf xchg sarb mov cltd loop jg rol cmp pop add mov testb mov adc jg cmp ja xorb sub mov enter lods iret js (bad) repz push pusha push fmull orb jb imul mov add sti dec mov add out mov fsubrs dec inc xchg lods xchg fbld out rorl (bad) hlt pop mov mov push add rcll in add adc push inc add mov xorl jl xchg dec cmp std add inc mov sti push xor xchg add repz fs xor push inc (bad) shlb testb je andb jge or add fbld push cmpsl test sub add cmpsb push and or movsl ret cld fnstcw ljmp push pusha in lcall mov jno addr16 push inc outsb jae fmuls out sub or loop sbb call popf in sti and (bad) mov inc lret movsb xor call and add js and xor add les jmp ret add aad pop cli mov fs add xchg nop cmp sbb aas (bad) fmull add aas fldl dec mov sub (bad) sub xor imul aas outsl notb sbb lahf cmp rclb cltd or push sahf jae sub scas cmc mov mov roll outsb add and jl jo inc cmpsb test cmpb cmp pop ljmp lahf (bad) aas ljmp incl push andl test xor push mov pop in pushf add xchg shrl loopne aam adc sahf lret mov ljmp (bad) fisubr pop add int3 das push decl pusha jnp xchg insl leave mov aas imul cmp mov inc add insb cmp sub push sbb roll fwait insl jp cmp add stos sub out jl sbb test mov pop clc test adc mov or popa btr es mov inc ja sbb lods mov inc add push xchg push insb out push in add and add sub daa dec xchg dec js orb jg ret mov movsl adc into or pop fdivrs imul mov ss and mov push cmp call ficomp pusha add cli mov sub lcall clc add sub movsl dec in mov or mov sbb aam into das inc mov pop pop dec cmp xor adc js fidiv sti sbb dec pop insl cmp inc push sub fwait insb or fimull push rorl dec gs push addr16 lods in add xor and push inc jbe push imul mov add cltd pop push add stc mov mov push ss push jg call jge mov call iret push pusha push and mov (bad) jl js cmp sub or insl (bad) jns add jns incl ja adc and cmpb repz in mov outsl inc aam mov imul jmp rcr (bad) jle sub jo xor dec notl clc or pop rorb (bad) out add out xchg push add jge (bad) cmp cmpl jmp call cwtl shrb lcall push mov mov gs or pop and push add mov dec add imul mov or inc pop aad and repz xchg fmull jmp dec pop jle,pt push adc stos icebp js add (bad) daa das dec add xchg mov les mov js mov add scas sahf addr16 out fcomi loop dec incl push mov cmpsl or mov call mov js xchg jle jb repz xchg jno js cmp dec js cltd and dec mov jae push mov add adc (bad) into xor cmpb test jmp les xchg mov pop adc or in mov movsl gs or pop sub push hlt sub leave add push push jno mov add scas stos hlt add out sar jns incl adcb inc dec mov jl insb sub push push and jmp daa call add jle or sbb adc jg mov movsb out (bad) pop or add je out addb jecxz mov test (bad) movsl push add daa fidivr and sub push adcl jl or sbb add xchg xor lods sub sbbl mov xor das dec mov out xor sbb js or out mov leave fcomps std icebp add sahf mov test jge xlat dec movsl adc cmp add mov mov in jle jae add cmp add loope fnsave (bad) in adcb dec or std in outsb (bad) imul adc fisubl xor and push and inc adc int jmp and xlat inc fnsave jmp testb cli (bad) push out sbbb (bad) lahf (bad) and test pop sbb fcomps mulb pusha jg jo jmp insb cmp popa adc faddl jle aad popf sti sub out push inc subl clc dec xor jle mov push int hlt xchg cmp divl xlat push dec outsl imul mov pusha stc fadd mov push cmp adc aas out add adc loop pusha decb push push aas movl rcrb add cmp add xchg cmp insb and sti mov add (bad) lock addr16 jp into inc sti push les xor in add push adc add fisttpl ljmp daa adc or mov or pusha cmp add out mov push or andl lret stc dec add call cli and je add sub mov mov ljmp js fadds addr16 stc jns sub mov in inc aaa mov add and cmp imul aas std xchg (bad) mov rcr push adc and inc incl push loope pop inc xor add lret addr16 test jo sahf sub roll mov in fisttpll jecxz int3 mov insl lahf in js or test div aaa leave sahf ss add adc pop jle mov xchg ds loope add rorl add dec js mov sub add adc mov add pushf jbe in gs pop ds out mov add jo add pop xchg and mov xor out jle add mov aad in mov ja xchg pop mov jbe jne and adc inc xor push add or shll ret pop pusha jmp inc (bad) hlt push imul lods in cmp and jle jp out inc mov add dec or repz pushf pop imul push or add inc xchg dec sbbb ljmp in add add push test mov sub sub inc dec jecxz xor addr16 sub inc push cmc cmp add enter xchg repnz xchg add orb add sar sub popf jp add mov add aam sarl inc ret pop fisttpll and mov test mov test sbbl inc pop inc lret add mov ret or stos or pop loope (bad) ja jle (bad) add (bad) movb inc stc aas xchg pop mov sbb popa add imul (bad) sbb in out push fcos mov xor sbb sub popa push lea push dec adcb pop jmp nop js add pop jb stc push mov pop sub sub adc dec cmp fist sub push test pop add xor cmp sti sub dec jo mov nop aam (bad) nop and sbb xchg cmp ja adc lds jnp add pop adc jno rolb and and mov mov repz lcall fbld in lahf fiaddl lods fldt call in pusha jle xchg rcrb (bad) sti xchg jo rorl add sub inc add lea adc mov cmp jge jp xchg mov out mov jg inc push fsubrl add ss mov add (bad) mov adc push push jno add pop xchg xchg or js add pop push cli aaa in add pop das clc add rcll out or push inc fistp lcall jecxz dec sbb sbb pop fnstcw add xor sbb out inc enter ficompl (bad) js jg mov xor in fwait xchg add (bad) in ljmp jp pop mov jb add push leave sarl faddl jo scas or rcrb pop jmp xor ror test mov ret sbb add xchg xor xchg pop lods push stos pop cmc mov cwtl adc push addb jbe or mov daa or add outsl xlat jecxz or shll jo lahf inc jo add (bad) idiv aad shrd (bad) jge popl pop loope test and pusha jle add mov push sahf push xchg iret fildll jmp pop dec jmp rorl xchg sti cmc loop data16 movsb aam and jge inc test imul add (bad) mov mov xchg mov sbb push (bad) ficoml shlb fild out clc inc mov jge add dec ljmp stos add mov ficoml cmp int or inc jae call fildll sahf dec les cmp push or sub scas aad sbb and mov mov imul (bad) jp mov dec add in je or sub add outsl mov add xor fwait xchg sti mov gs sti mov or or add mov jg mov (bad) mov xor lahf xor cmp mov (bad) push pop ret addw pop mov sbb js and outsl pop pop out sub mov (bad) idiv pop dec incl insl push out jo mov (bad) sbb add roll add cld mov les xor in or add push or hlt (bad) jecxz,pt lcall xchg cmp xlat xchg movsl jbe add sub rcll fcom call xor xchg in mov ret fisub inc add or push mov add adc add adc mov pop (bad) jecxz and ret sub insb cli mov add data16 xor sub xchg push cmp lret add stos mov jno js add sbb or add adc mov mov add mov out or xchg xchg inc das cmp (bad) sub mov ljmp dec add push mov mov adc jp add repnz in pop and (bad) xor or mov aaa push rcrl (bad) add pop mov daa dec add cmpsl out in inc or or push ljmp arpl sub dec inc and insl jae (bad) in dec jle cmpl hlt cmpsb js pop xor imul incl sub mov add sbb cmpsl std jae ljmp fldt push jl loopw add pop call scas icebp daa mov xorb mov jle pop dec incl mov cmp add into lret aad inc mov pop jns xchg fistpl mov xchg ds fwait dec mov loopne std (bad) jo not mov sbb popa imul aam push xor pop ret pop and xchg nop mov movsl out jle add cltd xchg mov bound fild dec mov repnz pusha pushf int3 jge orl xor mov repnz iret add mov xor fdivl test incb or add adc xor mov cmp lahf sub push jno ss mov xchg jge jae ret sub ds aas xchg out adc sahf mov jne inc mov add and arpl inc pushf cmpsb add or into or mov es add jae pop and sub cmp pop pushf mov iret mov in dec call in sub fiaddl sub add lods test ds add (bad) jae cli and nop stos lods (bad) sub mov xor jp dec in subl fs and ljmp xchg lret mov or inc push pop sub mov pop push aas je test test xchg pushf jmp xchg mov jo mov add bound in mov mov dec pushl outsl out add mov pop je test mov sub dec fistpll mov jmp lahf scas rcl or add mov pop adc sbb fdivrs push adc dec int3 add mov es inc data16 lahf popf pop add pop jge xor sub sub push push fistl js shl outsb fidivl ja dec jp std or popf in sub pop sbb push ss ljmp xor adc or add and add mov in jbe pop incl cmp ja mov cmpl in sub hlt loop insb xchg mov pop xlat jg leave add ret repz (bad) jo or dec int3 sbb mov xchg xchg push pop frndint sub pusha dec leave pop out add (bad) pop stos sbb mov pusha loopne cmp adc cwtl cwtl loopne xor pop xchg sbb push add jmp push pushf pop xchg push dec sub mov pushf jle jg inc iret jno xor stos pop inc xchg xor dec jle add adc push mov fadd shll add dec lcall js aam dec movsb fcomp jecxz adc add jmp lret hlt add pop or adc ret sub pushf and add mov pop add sbb and add cmp add sub jl jle or xor das or les xchg arpl mov add aad lock add imul lds pop aaa test sbb push dec jmp cli push mov rclb cwtl pop and cmp push inc hlt and jge das daa in dec jle or outsb (bad) aaa inc mov ds flds stos add cs fbld loop int3 loopne imul (bad) es sbb pop mov push adc mov inc dec int3 push je cmp mov fbstp aad loopne push in int3 xor and imul stc nop test sbbb cmp and mov jge test mov xchg repnz add out and mov xor mov dec jl xor in sbb xor xor mov push add (bad) mov addb xor int jle add inc sbb cmc sbb pop add xchg xor andb xchg ja push sbb sbb xchg in mov lahf xchg pusha cmp iret jno mov adc hlt fyl2xp1 insb aad movsb mov push lret repz jmp iret sub ds add inc leave jne xor outsl mov in pop pop adc jmp jo pop loopne jle xlat sub pop and popa sahf pop cmpsb ja int jle add push imul fiaddl jg mov sbb sub daa (bad) or int dec jl and or repnz jg cmc and shl mov xchg test aas or icebp ss inc mov dec add push push add shrl loope cmp mov popl cmp (bad) mov add int jmp out dec pop jo jno stos inc repnz xchg ljmp lds or stos dec pop add test sbb or rorb gs or mov fs add add andb pop xor xor push and add aas (bad) fcmove xor or bound ja jbe mov adc std or jle sbbl das dec les push jecxz or jne fistpll push fwait pop push sti addl fs fsubl ret aad mov and dec or and jnp dec subb inc jp scas andps add ret push cltd bound icebp pop (bad) push pop or roll sahf jmp (bad) mov std pusha push test andb ret mov push add mov sub loopne stc lock cltd insl rorb insb push stc jge sbb mov jp xchg sub je jo add sbb jecxz mov mov movl jle add rorb jb fwait jae xlat sahf push add test jecxz jmp add aas cmp bnd fsubrs mov mov js mov add sbb sub fcoml call add mov pusha dec mov icebp mov pop mov add mulb sbb js cmp add and push ret data16 mov sub jne dec scas ret jl lods sti inc xor movsl jle mov lea in pop inc pop lds sub daa sbb add aam fdivr dec pop add popf in sub shll mov push ret rcrb adc inc xor or jne xlat add cmpsl dec in stos sti inc je add es add xchg dec out lret jge push add sahf push add pop paddq je pop jbe add inc sub mov fimul inc add insb mov iret add dec lds lock mov add jno rcr pushf and hlt or popf inc cmpsl push jo (bad) push xchg aad sbb add mov or inc fwait dec cld push add popf out insb add addr16 pop push mov xchg or inc xor jb int jno orb jae sbb add inc out dec clc imul into sar test mov add push and or mov jnp and pop sbbl jne xor mov xchg fldcw ss adc insb and mov mov popa into jecxz test add and jo add adc cmp cmpsl scas ds cmp loope ret int3 dec fstl cmp fisub lcall (bad) int3 xchg int pop mov ret mov out add lret (bad) cmc out js pop dec sub clc mov in or lea inc inc aas lcall add sub xchg popf xchg cmp add inc xor nop pop mov push mov aas sub jae xorl fcomip pop jo xchg lret test clc stos sbb mov pusha push into (bad) test push mov inc loope enter dec mov mov sub (bad) in mov out fiadd sub out jl ja or movsl enter orl push test add orb (bad) mov mov mov add jg sbbl or imul sbb push xchg jns pop pop inc (bad) pusha pop mov cmp movsb jae mov shll cmp sbb adc into lret jge add rcll add cwtl mov pop lods mov mov cmovns add push fwait sbb add icebp xchg inc mov push ja mov cmp add int3 add mov enter (bad) adc inc mov add shlb xchg sbb bound das inc faddl add cmp je rorl mov lods cltd lret aas cmp std movsb add popf add adc add adc ljmp in add in mov cmpsb jge add push sub push (bad) and and add addr16 jmp add mov mov cmp daa dec add xchg das cmp lret push mov cli or or sbb fdiv add icebp out test inc lret outsb dec outsb mov iret adc add push jno add cmp addl adc add dec add jno push jmp dec scas add cmc xor scas add cmp cmpsb ret aaa inc inc dec adc mov or adc sub cmp fwait mov or arpl xchg out add xchg fsubrl add sub cwtl pop cmp outsl dec add addr16 movsb cmp add push inc loopne mov daa jle dec in add pop lds std add push (bad) out or fs stos std cmc jo ss push or mov mov jae mov jge ds push js inc add call add subb dec aas jge pop or mov cmp add es mov or adc jbe sub mov movsb sub jae std addl push lock fnop loopne jne add xchg lret xor xchg jecxz int3 test jmp outsb pop rol add rcr adc enter xlat mov inc inc fisttp jp adc pusha movsl sub xor pusha pop repz jno add sub pop add pop outsb cs xor add (bad) mov fildl outsl inc lcall inc mov pop fnstenv xchg in xchg outsb mov ja adc add pop sbb pop xor test or lea into subl jge add lds subb dec ds jp dec mov inc jge push inc jae lds ljmp and pop pop or add sbb pop jae push mov movsb xor xchg or sbb lret cmp inc mov cmp pop cmc mov and cltd or pop test (bad) in jmp mov data16 js add jecxz mov or fwait add inc popa ss lds ret or dec lods cs sbb out fisubr ret add add or mov push mov sub add ja jnp or rolb in mov xchg aad mov sub mov or jge outsb sbb add pusha (bad) in sbb mov jle pop jmp inc xchg mov or adc adc mov fidivr pop xchg (bad) jle mov sbb add mov xor pop repnz add fs add xchg fucom mov imul out xchg int3 (bad) rcll data16 push pop push pop sti test mov xchg mov lret inc add lods nop xor sbb ljmp je inc dec ja and (bad) insb dec fwait mull xchg in pop stos imul cmpsl pop add adc add fwait xchg push push sub out add ja sbb addl jl xchg jp cmc dec push data16 aam xor inc or out ret es sub clc xor les cmp adc push insb cmp add cli jp addb ja pop insl add out call dec jmp stos roll inc jae inc je push add insl xor fnsave cmp mov inc pusha test daa xchg sub jb movb jae inc call mov pushf jo stos cmpsb add push and in add jge int je jle mov add popa lea ja (bad) pop mov pop out xor and jmp mov ret jg add mov mov lods movsb (bad) xchg pop rolb adc out xor hlt inc cmp xor or push loop push sbb fs jo nop sbb fwait jle add sbb inc ja (bad) cmpsb fidivr (bad) adc sub xchg pop in dec insl andl cmp in mov mov cs mov in mov sbbl aam and add imul push push movsl mov (bad) (bad) mov pop cmpsb and fistp loop mov ret adc and add fisubl aaa popa ds lret mov ror xchg movsl jmp insb jge fistpl add dec add js adc in pusha sbb add adc adc scas sbb call push loopne push add cs orl push ds cmp (bad) adc dec pop out pop lret push add push lret je mov ja pop jae sub push stos jle lods jmp xor lods fildl cmp inc dec jno pop adc cmpsb add ja jle xchg hlt push add xchg das test stos insb idivl add (bad) sub add push sub stos push stos add and inc xor or in jp inc add xchg iret xchg cmp loopne fildl test fsubs dec xlat andb or mov mov iret fcomps dec pop xor jge movsb xor push dec packssdw inc xor jmp test sub sub scas sarb push inc mov cli xor sbb sahf add mov mov push sub xchg aas fidiv add mov mov inc fisttp jae call cmp pop add cmp add xorl add dec pop lcall mov lret or in pop sbb mov call add xor loope push sbb ljmp or icebp cmp xchg push pop jnp sbb (bad) (bad) add stc jae inc lret mov pushf (bad) mov jmp jo stos fldl mov xchg add stc mov pushf add or mov or and mov shl cltd pushf pop pop bound call add sub cmp mov repz jl add jecxz into push jo and dec stc pop ljmp xor inc jge add loopne mov inc push mov scas cli (bad) cmp mov push in ret push jl bound add rcll xorb add in cmp rolb hlt cmp adc out (bad) add rcll push add iret xchg loop daa rorl lcall int3 (bad) push mov (bad) enter mov repz cmpsl xchg js cmpl ljmp push jne rorb sub mov mov and les mov sbbl jp cmp (bad) xor mov cmc add jns imul stos jp mov gs jnp mov pop movsb add (bad) xor or in aas and adc addl js ljmp mov testl js out orl pop xchg roll cmp mov je cmpb (bad) and add stc jp pop fimull std es out add (bad) lret push repz push inc and mov repz in dec mov add scas or push mov lock pop add cmp lock or add jmp xor inc sahf cmp lods dec sub aam dec adc sbb and inc outsl ret lods xchg adc sub inc rolb int mov sarb jle imulb xchg push addr16 fs jae add jl add mov jge xchg xorl repnz dec test xchg out es (bad) or jl gs inc xchg push sbb pusha add jp fnstenv pop faddl gs data16 aam mov adc add ja cltd add ss ds or dec andb xchg mov je mov into popf sub pop test mov aas daa cmpl lods jo adc ljmp push mov sbb shr rcrb cmpsb imul add stos out shrb imul (bad) mov pusha pusha lret movsb mov and mov add add mov inc pop inc stos fsubl ret add daa adc lcall ljmp sub jo loopne or pusha insl into in js mov and jns mov jno orl and call dec jae jl mov add xlat jl cmpsl lahf cmp mov push std lret pushw orl stos xchg or push dec mov sarl jl in lods nop cltd or adc or shll add test xor pop push lods imul icebp dec jb xor mov mov push pusha pop mov mov cmp inc call mov cltd (bad) cmc xor jg jns pushf push sti adcl jmp cmp and add cmp aas add (bad) adc cs mov xchg std add push lahf sbb adc bt and pop xchg enter push add cmpb cwtl fs push divl inc or mov adc and dec lahf idivl lahf lahf fwait add das dec jo mov mov or int3 dec jb pusha xchg jne in sbb or xor sbb jo jp sub cmp fildl rorl add push cmp cmp test add orl roll lcall daa push iret push loope push xor test push in or sbb xor stos dec vandnps dec cltd dec cld push push enter aaa add sub mov sub fcmovnu jns lods sub lret xor dec dec add (bad) scas cmp xchg addl inc mov mov popa adc or sub addr16 data16 pop (bad) cmpsb mov mov push sbb xchg loopne movsl sarb dec add push les add sbb repnz and push ja (bad) ljmp add (bad) xor or add call ret pop popf add out mov test xchg insb dec cwtl add push xchg pop (bad) jg mov popl arpl lods push mov fdivl sub push cmp incb (bad) sbb std fisttp nop pop and call pop inc jno cmp dec push mov repnz mov push pop inc (bad) xchg addl jg inc xor dec or add and hlt cwtl sub inc cmpb adc icebp enter call subl add roll dec dec jnp pop sub jns add lcall andb sbb xchg call add mov mov push or aas jb scas mov xchg dec notl dec arpl aas adc xor int3 add cmp mov add push xor fwait pop adc inc lahf xchg fistp push movsl add adc and sbb leave cld mov lods add pop sub sub add stos lea mov sbb and insb outsb cmpsl mov cmp icebp xchg add push popa das add jno add push inc mov xchg cmpsl mov mov pop mov add aad and outsl and xchg jp mov cmpsb movsl movsb jnp add lcall js add add mov mov cmp inc pop mov fs les mov push add add popf push out (bad) hlt ret ds push jecxz mov jp scas adc shll test mov add jbe and cmpsl ss xchg adc xchg sub add int3 das sbb pop xor xchg and imul popf push aas scas mov cwtl pushf add into push fsubrs movsb out aad data16 pop lock push nop pop ret cltd add dec dec xchg popf push sbb int jae add push fstpt (bad) decl iret inc jg jecxz scas in jl (bad) hlt cmp sub repz add outsl xlat jmp inc std jo and lret mov test lea inc lock push loopne pusha popf addl adc lock jnp sub insl aas ret cmp and mov push jne int insb pusha fs mov (bad) cmp lcall pop mov mov cld and mov and add jge test cmp inc fdivs ljmp sub dec dec jl popf xorl mov push rcll outsb jge jp pop into je lods sub scas mov push shrb add lret add xor push push cmp add mov les pop sbbl (bad) imul cmp push enter add and (bad) xchg aaa adc pop addr16 cmc insl sub xor rorb addb out outsb dec fs jp sbb daa clc jne fistl mov push imul mov mov cmpsb mov jo stc das add daa sbb add pop jl pop loopne lods add jno pop push (bad) ljmp pop wrmsr jg addl jl add mov stos lods movsb xorl or add dec pop ds out stos testl adc mov cld daa in pop xchg (bad) out outsl stos add outsb stc sub repz pop xor je jns stos dec loopne test add and push mov add lret add js fldl xor mov sti cmp push in xchg xchg cmpl insb add fwait nop cmpsl add xchg popf roll xchg out and dec imul pop jb sub mov pop xchg inc sub scas movsb jle add adc add inc subl out mov stos add adc sahf insl or sub js stos ret push pushf cmp aam add push mov sbb add pop inc int3 decl push mov push pusha sub and jnp add loop xchg daa lret adc (bad) dec loopne fisttpl fist pop add (bad) add fs adcb sbb xor cmp js test aad add les popa add sub bound jecxz add cmc sbb test adc faddl add adc cmpsl es inc add lock and repnz xor xor sub sub add pop rolb cltd clc ret add xchg mov jle mov outsl cmpsl inc aam adc add dec sbb sub bound sbb sahf cmp in add lods inc sub sub adc jle mov int3 rcrb enter and add dec gs pop add and out lahf cli cwtl out and jnp stos movsb icebp add les add cmp jo out push inc icebp lcall sbb nop mov add jno cmp orl and lods test jmp add fdivrs imul mov mov fs lods inc mov xor dec xchg add sub lea ja add jns sub int add sbb jo push add fldz xlat mov inc dec jle cli repz push cmc and clc jnp add lahf xchg mov push jg or cmp add lods sbb mov mov lret dec pusha pushf les cmpsl repnz pop adc sub fs mov cltd aaa add enter pop ret call test rcrl popa in sbb mov int3 in add out lds pop lret cltd insl mov cmp (bad) mov jo aam xchg sub fistl mov pop add imul dec or movsb jmp inc divl cltd frstor add int iret fcmovnbe jno add lods (bad) repnz inc pop fisttpl test xor push mov shrl jge xor pop pop push or add pop in jbe je add in xor sti pop test push push fs (bad) clc add add negl mov inc aam dec icebp in daa xor (bad) mov (bad) cmc mov jmp stos push arpl (bad) dec push call divb sub adc fistpl mov stos aad ljmp mov cmpsb inc mov xor mov (bad) add xchg jmp adcl imul sub neg xchg xor popf add call outsb sub push and push jl jb pop das inc movsb fcoml into xchg push add int3 xchg inc hlt test pop aas or loop es dec adc adc and mov add jle outsb mov movsl cld mov mov cmp jle fs lret xchg cli scas sbb mov cmp sub jno add dec adc stos xor push xchg stc cld inc mov push movsb mov adc loop xor mov test pop lds jo addb add fisubr lds push mov add cmp out addl inc and and add adc pop lahf rcrl out push xlat andl add xlat sbb add xor add das push inc add (bad) xchg sbb incb dec adc add push loope jl test add xchg movsl xor add ljmp add in test fs inc test xchg es in lret xorl rclb (bad) push cs ret xor sub xchg pop ja fild mov mov cmp sysexit or std addb push ss (bad) hlt or test jl out leave pop outsb loope push inc cmc xor (bad) andl and cmp and mov popf inc stos inc or or jmp fsubp add add lea rcl sbb mov mov xchg cwtl dec mov test loop xchg mov pop rclb inc popa push push cld cwtl cmp push xchg pushf cmp aaa xchg les cmp (bad) test cmpl jae sbb sbb test mov xchg add arpl add cmpsb add outsb jno psllq ds shl inc (bad) xchg imul dec out pop jge push sub jno add push jnp stc fnstenv mulb hlt addl xchg faddp sub pop push imul lock push jne add jge cmp cs add cmp (bad) mov jnp (bad) lahf mov jb nop add jmp and gs jmp cltd popf movsb cmp jp or imul mov cmp mov imul je in jo adc out jb and adc add cmp add jp xlat sub inc add sub movb sbb xchg loopne cmpb je cmp out pusha xor add ss sub pop fcomps inc push jmp mov lock xchg pusha push pop push push clc mov adc inc mov mov inc ljmp rorl adc dec test divb pusha outsb lds dec inc jl sbbl sbb mov lcall add fist add adc add inc (bad) aaa sub jl add roll test add das xchg xchg xor sbb mov mov shr imul push js jno lret adc jl cltd pop aaa xor add in subb bnd push add pop imul notl cli cmp xor cwtl add and dec sbb mov mov add shlb and insl push jno fnstcw xor push mov aaa arpl pop sub cmc sbb dec pop xchg sbbb jl iret jmp and stos adc jae inc pop lds insl pusha jb lea mov xor add in sbb ss jae pop mov inc es loope stc jno push fs or jg or push dec jmp iret push and or inc cmp hlt cmpsl test jp sub cmc xchg shrb xchg xor mov sbb sub clc imul pop sti add incl bnd add lods adc aam jo inc into pop push xlat pop xorl cmp jbe mov add jg cs lahf add adc push pop test xor dec je mov pop test mov and adc dec jge push jl sub pushf mov inc xchg add xor hlt je sub inc dec test dec es in (bad) mov add mov popa insl sti loopne inc mov ret add aam mov icebp push je push xchg jns dec inc fmuls push add mov pop xchg pop mov mov clc lods dec stos or add push and lret (bad) enter push arpl xchg add xchg mov iret pop push pop mov outsb pop shrl xchg jg cmp sbb (bad) repz into sti aas or and jmp lods or add les rcrb push cwtl mov in add out mov (bad) add mov and popa add and or mov dec pusha pop xchg bound mov pop and je cmp add sbb jo out add cli rclb je pop mov mov or je int add loopne xor mov dec aas mov push and int js mov adc mov add gs pop call ret repz aaa pusha cs test mov dec push pop insl das add add jo adc inc psadbw jo inc dec inc ljmp loop es clc pop push xchg loopne inc add mov scas ds leave jg sbb push idiv pop add push xor imul pop leave cmpsl inc popa push jns add mov pop mov pop mov lret mov xchg arpl add xor dec push test fwait call add js or xor pop aaa jmp fdivrl lock cmpsl js fadds cwtl movsb stc dec lahf jnp orb cli sarl push pop cmp add lret inc push pop insl xor push or movsl cmp pusha outsl dec xchg sahf adc or mov and cli rolb aad xchg jp ret in call lret (bad) in mov loope (bad) test pop sahf push (bad) mov fmul dec mov add add (bad) insl push jge mov push mov cs add rorb cmp sub jecxz in add and or mov out aam sbb push in xlat lret fnstcw mov mov add movsl (bad) imul xlat mov mov jle and inc add loope add insb cmc dec xor scas sbbl idivb push es int3 add pop xchg mov fwait add xor add int3 mov and inc adc and add sbb cmp pop bound or jns add mov xorb fdivs add int3 popl lcall (bad) cmp jbe insb inc jmp outsb pop sub lahf adc push mov mov push sub inc or mov or xchg xchg sub xor sbbl stos push loopne pop add push sub add aaa inc fiaddl movsl scas outsb lds imul adc push mov mov repnz mov sub add cmp pop sub sbb add xor add (bad) lret cmpl call add sub xor add pushf inc jp cmp aad mov or adc mov sbb out mov fwait mov fimul sub aad xor cmp sbb dec int sub hlt xor (bad) sbb pop push or loop popf sub sbb add rcrl cmp add sub in sbb push pop outsl xchg leave push pop sbb dec sarb xor cmpl cmp fdivrs imul pop sub jge inc jl pop (bad) pop inc pop and in nop (bad) (bad) mov inc pusha cs shrl or in or sahf lret mov faddl roll push cmova ja add inc mov outsb mov ret adc xchg es push add adc cmp roll or xchg mov out jno add xlat inc sbb add xchg into fbstp lods xor jo xor inc add imul add in ficoml cwtl jbe andb lods (bad) in ja adc xchg out icebp adc push (bad) inc add ret fnstcw add mov (bad) dec pop xor or aam mov shlb cmp (bad) idivb dec sub (bad) (bad) pop aas sbb xor dec cmp cmp jg js mov xchg fwait pusha xor or int sbb leave out lock inc jle adc rcrb push popf insb add jmp insl js add lods clc leave push cmp lahf decb inc aaa mov enter mov andb sbbb cs push in mov loop adc mov dec outsb sbbb push mov add sub fldenv (bad) arpl popa add (bad) mov setge lods movsb ljmp jmp stos subb fiaddl push cwtl add sub mov mov fstpl adc and add test subl mov add inc aam pop adc add dec insb lret xor int pop and adc xchg jo push enter movsb cmpsb sbb sarb (bad) jae popf mov gs adc shrb jb adc push add pop sub xchg movsl mov and fs sti test std popf mov pop rclb aam push jmp lock lahf outsl push inc jae add push inc xlat add sbb das jae (bad) mulb shlb movsb pusha xor add faddl inc notb add ret push dec add xchg mov cmpsl je jnp add add adc (bad) add jp cmp add and add movsl popf mov arpl xlat inc ret outsl inc dec mov xchg dec inc cltd es cmp cmpl mov sub insb push pop fsubrl aad push pop mov and add fwait xor sbb rclb push mov cwtl std add cmp addl cmp ja repnz adcl dec add push ljmp mov cli jae xchg fwait push pop hlt orl jbe pop add call cmc add fs es add jbe or sti mov xorb jl adcb test adc jae es inc imul push mov rorl addb pusha add inc test push rorb dec add inc cmp add mov sub pop xor add sbb adc xor cmp add in pop std addl add (bad) dec sub or push aad lods jecxz xchg ds inc add or aam push xor dec out imul and add rorb and mov mov fwait add pop push xor movsl mov pop dec cmpsb xchg mov orl les fwait movsb cwtl add out int3 (bad) mov add jmp add cli enter stos jle mov pop push sub or mov subb sub pop adc mov dec mov arpl imulb lahf popa test jae push out jg add fnsave add enter pushf pop adc jle mov (bad) aaa pop xorb mov (bad) stc ret imul mull daa add out divb pop push add loopne adc pop lret orl pop xchg jl jae add movsl ficompl sarl or cmp xor push adc int3 cwtl adcb not xchg js jo test push call xchg roll addb add mov out mov cmp ja jnp popf jo jns cltd jbe cmovae push inc dec xchg add add negb pop or lea and mov inc std cmp loop mov pop push add psubb sbb ja add repz add sbb loopew jbe (bad) mov (bad) sti xor lock xor push add scas pop cltd push inc push cmp add jmp paddsw adc sbb push lock (bad) add out jo fistpl pusha push cmp lret addb mov jl lods mov or lods enter mov add pop xchg movsl xchg xchg js faddl dec jno jge adc cmp loopne hlt or cmp stos jo ljmp inc imul add sbb (bad) ss add mov cmp inc movsb stc and xor mov and push aad jmp idivb pop xchg xor push mov fisubl xchg mov pop mov and xor push jp es xchg pop and sti lret sbb lahf sbb push and mov stos scas adc sbb sahf dec cld (bad) jmp push mov daa aas pop add mov aam jg add dec int jbe adc add in sti repnz sub add mov idivl add xor vmovntps ja inc xchg mov mov iret add cmp mov mov push loope scas pop add imul add movsl mov cld jmp add les cmp lahf inc push gs jno xchg sub adc jg sub imul aam int3 popf sub test mov dec scas push pop fsubr add add rorl pop or jl xchg mov test popl add fldenv jle or leave push xchg cli or loope mov pop stos add inc icebp adc ud1 add mull mov mov leave dec in add mov jbe and rclb mov jo (bad) and repz testb cld push mov jo or pop dec adc sbb xchg (bad) and cmpsl xorl (bad) aam add push push lea stos jg add sbb add movsb push movb add and push and or jl or cs add pop pop enter push jns orl pop fwait sub lock xor mov or xorb imul xor adc jecxz fstp mov icebp pushf aas or repnz adc mov ret sub adc ljmp mov les dec jmp add xor data16 inc jne je cmpb pop (bad) cmc lock dec add xor andb scas nop addr16 jp fadds lret data16 xchg push mov xchg pop and test fnstenv mov insl fwait stc vmovsd inc push jl xchg dec jae aad es out lock cs push jl dec out (bad) mov push pop and lods dec add mov adc push dec xor mov jg add push outsb inc xchg jno add int cltd stos (bad) stos sahf mov movsl fistl nop add xchg inc fidivl insl jl xor add lret mov inc sbb add mov std cli push lahf add movhps add data16 outsl out sub mov lahf (bad) push jo add ret or pop fnsave xchg jae sbbl lods mov pop add imulb insl (bad) mov in mov aam clc repz insb adc or lds out mov cs cmp cmp or sub cmpsl clc mov leave mov fistp pusha aam mov outsb adc cmp notb hlt lock dec push addl je xchg out and inc cmp dec add out ljmp push je mov cmp and adc stos and aaa mov clc add gs mov xchg or fldl push imul lds adc sahf and add bound test ss bound mov xchg rorl adc sub inc jge iret sub cld xor or add adc ljmp mov lds pop add cmp mov mov sbb or push dec mov (bad) in pop mov out pop insb mov je xor prefetchnta jae pop sbb inc push lods pop adc mov jbe (bad) inc inc cltd cmpsl mov jae cmpsb cmp add es fcompl imul push (bad) into push xchg and add std push fiadd ret dec or subl add ret and icebp jno jle outsb cs jg adc jns inc fsubl xchg or mov xlat repnz xchg orl push add loopne mov scas push pop cs enter ss sti and add xchg mov jle add add push ret enter add test mov add inc shrb or mov adc add out inc push mov xor negl loop cwtl insb sub xor pop lock orl or xor mov fs fwait xor arpl hlt sub mov push push popf mov es stc mov jne add scas bound clc cld add inc fbld add test movsb sarl jp fcompl pop xor rolb enter jp cmpsb add push aam dec pop and push (bad) sub jmp test jo and daa xchg roll xor inc inc popa push sub rorb ror inc pop out push test nop scas mov jb into add popf mov popa add jecxz nop jge dec or ret ja or sti aaa sar outsb mov or nop mov and pop fucom push movsl imul adc clc daa popa jae jns cmp pop cmpsb dec jb jg shll jge jp cmp dec popa std xchg xor xchg subl add pushf mov mov and shr push adc mov into inc mov enter jmp add add mov (bad) cmp adc xor fidivrl mov inc fdiv xor mov les popf sub sub andl mov int3 sub loopne sub andl test xchg jle scas adc add ret icebp mov in push xor add inc push arpl (bad) ret lcall push add xor stos clc mov popf jge and push loope insl jo test aad shlb jns sub nop movsb mov movsl push dec fs add imul sahf inc or xor (bad) cmp imul fwait ljmp icebp (bad) mov xchg leave iret das fs movl lds jo addr16 or incl pop leave or cmp pop mov orl fisubl js and inc movsl jae mov and add fnop mov fsubrs push cmp adc fist pop push add in mov add and dec insb dec or add xchg es (bad) loop sub xchg add lea push nop (bad) pop mov and bound add inc popf cwtl shl add bound add ds lret pushf jne cmc je push add dec imul mov mov scas and (bad) mov inc inc test jp add xor adc iret add add rorb testb jbe ljmp dec imul fs dec add dec sub inc pop fmuls add pop dec lret pusha pop xor xor sub (bad) jae add fidivr inc mov pop ret adc lock add ret mov mov sbb ja cld pop mov add jbe xorl push inc pop loopne test data16 push repz mov jmp lea fwait inc les fildl adc cmp mov subb push sbb mov loop mov les pusha loope mov pop (bad) out insl data16 jp add lods inc add dec fisub test adc jg (bad) (bad) (bad) xchg inc xchg inc stc addl mov xlat fwait (bad) pusha je mov movsl mov dec shlb add in lcall ljmp inc js sbb fstl and inc pop push pop js das add sbb add test push faddl pop out push add (bad) ficom dec add push cmp jge push cs jle cmp jno add repz andl add push lea ret test (bad) das inc dec in inc scas pop mull addl in and and add fdivs clc fwait jne add iret dec and push push add or add mov push push (bad) scas movsl cmp dec or mov adc inc or inc pop bound push adc (bad) fbld inc jb add fs test fistpl mov add jp fimull sbb lods jae add sub xchg out rol add adc push arpl into xchg ja ret imul into xorl mov test add sbb jae add push xor xchg lcall fistp and out add and sub sub aam xchg call add push mov add add sbb lahf jo jge scas inc cs sbb cmp xchg in cmp stc push lcall (bad) add mov jb cmpsb sub xchg pop jnp pop ss loope push jbe int es sub rcrl lret lock add addr16 outsb lea push add jp gs mov and add aam (bad) ja mov push inc push js inc push inc orl mov cld cs test aam jle adc imul insb mov dec add loopne xor pop divb fisttpll add mov jb adc inc sub jmp movsl jmp cmpl adc dec cmpsb stos mov icebp dec cmc xchg jnp out add arpl pushf sub movsl dec lea sub outsb inc mov mov inc push popf push xchg dec add dec subl aaa push jne adc aam mov pop inc add xchg imul xor xchg incl adc and mov inc addr16 and data16 add xor add xor imul add fs imul add mov mov jmp es lahf push xchg enter test in dec mov add out ljmp inc push inc fildl cmp xor sti adc fstl js std mov ljmp mov lahf imul fwait push mov rclb pusha aam into or mov in or pop inc jl divb add add js loope push leave inc jns dec iret add popf addr16 (bad) (bad) jne jge and rorl iret repz add mov xor lds sub mov ja add int dec or (bad) adcl or add test testl adc mov cmpsb test pop out daa inc add fistpl sub pop lret pop adc (bad) cmp add je xor (bad) mov lods ljmp daa sbb push and in cli std pop pop sub add stos int3 test add add sar sbb jb add sbb pop movsl mov aad dec test enter xchg rcr mov adc add aad cmpsl xor and and ja imul fnstcw cmpsb mov sbb adc push arpl dec add int mov lods rolb xchg jo jge ret arpl ds mov lea loopne adc and movsl std add loop or outsb cmp in fdivl add jno dec cld aas (bad) add and stc mov push lods pop dec add arpl pop sub jb cmpl jmp add add out test clc movswl (bad) jne mov add fiadd nop roll add int push mov inc jge or mov stos mov or add out pop cltd add iret lret mov inc addl mov rcll cmpb fcompl mov insb test xor pop jo mov rclb cmp (bad) mov pop loope fnstsw dec stos xlat adc mov inc jp xchg push js fs jmp or and push push (bad) into test jo inc das ret adc add mov push jne or inc and lock add push pop int jbe loop,pt iret stc je sarl in dec mov add in loopne jb add xchg cmp addr16 lret mov xchg push dec adc inc xchg cmpsl jmp sub push movsl pop add daa cmc sub test push mov or mov sub push pop into sahf pop std inc pop (bad) mov mov and add sub mov sbb push mov add test dec xchg test pop dec xchg sbb mov (bad) aad xchg pop or out aam xor adc add ret dec sbb ljmp adc mov xchg add mov aaa int3 push push lods inc fwait ja jge lds mov repz pop sahf inc pop lret push push iret test mov inc adc cmp stc pop mov imul add jb aaa pushf fwait loope push pop bnd insl dec add mov or or fmul sub cmpsl mov es insl adc and test stos (bad) jg jle aas repz dec mov fdivrl xor into aaa inc xchg add lds jmp xchg ja add mov mov jl iret inc (bad) and push lahf or or add sbb lods xor jl push add push and mov fcoms mov adc in call add hlt mov out cmp mov mov xchg jge push jb add dec test cmp mov pop xchg cmc out fstl push xorb push inc movsl mov in xchg and pusha mov out movl mov inc jnp repz mov pop xchg jo divb out pop push (bad) scas inc fldt pusha les bound fnstsw lcall and imul inc (bad) adc pop lahf lret xchg popf fldt pop jmp js sub sub xor stos test mov outsl jne and xor js bound add sub add lea divl popf mov jmp insb sbbb hlt outsb mov pop add push pop xchg lcall repz adc add add loop iret jg,pn movsl xchg js sti jl jnp adc movsb fwait icebp shrl jo xor fdivl dec add das inc push movb scas (bad) jecxz ja mov cmc inc push mov add addl jl incl mov or lock roll add mov cmc add test mov push mov add push jecxz cmp add inc jo xchg sbb enter mov and cwtl movsb pop mov outsl inc xchg jae mov cld sbb outsb add jae cmp xchg sub jb push dec push mov js pop cmp jnp (bad) inc adc out xchg aad fsubs psubsb stos and ficom dec repnz popa cmp dec enter stc adc stos jo lret fcomps arpl cmp sub dec xor xor insb stos sbb pusha incl pop dec cmp pop or sub push jne add loope pop mov sbb js mov add add pop pop add scas cli fisttp (bad) xchg add mov pop jg test xchg jecxz jl and xor xchg jge aas sbb jg mov outsl jns test dec add and repnz fldenv fwait pop dec les mov xchg add scas push aaa notb xchg fstpt push cmp pusha jg sbb add sbb sti lahf in dec add imul mov add mov pop bound scas sbb xchg mov sub add push fisub clc arpl dec sbb mov fidiv add mov push jno add pop push jg mov inc frstor je pop cli std inc inc nop jbe pop sarb orl push std and xchg xlat inc cmp (bad) add mov imul pop mov loope addb jne mov add fwait leave jp xchg lods fiaddl into test lea mov pop jbe rcr cmp xchg fistl sub mov dec xor and cmpsb mov hlt jmp (bad) jecxz lcall daa add xor add jl pop stc add lods xchg call (bad) add sbb lock sub clc test nop pop xchg shr add aam or push mov jns or lcall cmp add pop mov out inc les mov xchg pop xor pushf scas fwait pusha push push pushf inc push add out or je mov or fidivl add cmp jmp repnz push mov mov sti mov shlb add ljmp cmpsl iret adcl scas pop sbb sti jmp add sbbl push sbb jo std jbe inc call cmp xchg add xchg cmp xlat add push cmc sbb pop fdiv stc add mov (bad) lret push dec push repnz dec mov jecxz or sub lret stos cltd xor add inc scas sub adcb les add ljmp add loope popf add inc mov xor cmpl push adc out jns mov pop movsl add fsubrl lcall mov out cltd in add outsb ret add cmpsb mov mov sbb fwait and insl xor push icebp jbe or or pop lods sbb fs rcrb or popa sbb add or into add add mov jae add xchg cmpl adc and imul adc dec fisubrl mov jno pop call jecxz outsl mov mov and pop ss call xor add push push dec aas xor std adcl sub dec jecxz scas outsb add (bad) popf xchg adc nop fs jo in add fisubr push inc ss pop push lods or ds dec popa jne bound call or add and jmp stc ficoml add (bad) leave scas arpl and outsb sahf stos add cmp test add iret jae (bad) call sub mov and xchg (bad) out or add loopne inc test dec loope inc aas jns je cs push push adc add popa nop adc frstor sbb add lea sbb shll jp out mov pusha jno pushf jo out lds shlb cmp xor (bad) xchg arpl test and xchg xchg or jmp add std cmp popf jg and in dec lods cmp add aas (bad) dec and lcall jle push add in icebp dec mov dec sbb push add cmp in add or cltd jmp scas inc (bad) out sbbb jo sbb orl into mov push adc add pop cmp add pop adc or aad jnp mov lret outsl mov pop inc jae jmp xchg lcall sbb push dec add sub add jp arpl pop mov pop mov (bad) sub icebp out (bad) jbe rclb out push mov insl jg add popa dec lock inc adc js arpl cmp gs fidivrl sbb push jle add and xor mov testl adc or repnz cli jae dec dec or (bad) mov jnp add push inc cmpsb ja das pop lret in mov data16 mov out add loope cmpsl aaa jno add flds mov mov rcrb (bad) mov bound jg mov adc dec mov in stc fadds popf mov jp (bad) stos outsl inc in cwtl lret jbe lods mov sbb lret movsb bound mov inc push xchg mov and stos xor or cmp and clc xchg (bad) mov loop cld xchg stos and test outsb and lea push jmp jb adc rcl xchg int cmp sub push imul add cmp jle xor push out stc xor and xchg divl sti fs xchg rcrl sub iret andl or pop cmp fwait jl add jge jbe mov xor xor adc sbb adc cld addb and push push inc (bad) mov add stc mov cli jle mov and aaa in sbb dec int3 add cmpsl nop inc das add jge push xor clc mov out adc sbb cmp sti xchg outsl loop fiaddl push mov jo bound mov pop xor mov out add pop dec adc inc cwtl push cmp jge xchg mov xor mov cmp cmp stos je data16 sbb xchg addr16 mov ss xlat push xchg add gs add add push iret cltd mov movsb pop repz test dec sub xchg arpl or cmp jg add cli loop push or xchg dec rorb push xlat popf pop xchg pusha add adc mov addl dec rolb int3 or scas sub xchg fxtract popf insb lods mov add mov out push out lds sbb je jne aad add push inc iret add data16 add sub and add loopne mov nop lahf add cmp add mov push dec or loope lret out jno add adc mov jo repz jmp add cld add push imull cmp push fmuls movsl bound cmpsl dec push arpl jecxz jbe cld and pop or push lahf mov int jmp or icebp pusha sahf test or mov stos pop add inc or cli jg add xchg inc add mov (bad) jle add push sub jb (bad) je mov aas scas rorl pusha xchg out js jb add cmp pop (bad) imul fbstp inc add lods jle and jle cmp mov add or fiadd mov idivb out pop (bad) and data16 mov push mov add add (bad) stos pop xchg subl add or sub aas jg add adc repz cmp add jns sbb cmpsb add pop lret xor jne add out fdivr cmp stc add imul (bad) (bad) mov pop test push mov mov cs cmpl clc addb sbb dec iret fcmovnu jae aam add pop add loopne add inc lret clc xor add out add ljmp jne add inc jb mov popf cmc pop pushf js jnp add push cmp jle jae dec xchg push adc add add lods repnz ja inc out fs shlb mov data16 mov add loopne sub fisub stos icebp divl mov rcrl sub xor cmp cmc fistpl jo fild lea mov inc fadd rcll mov pop lods adc jp mov fstpt stc add cli mov pusha outsl adc push jo jae add ds (bad) ljmp sub (bad) add cltd and push ja add loope sbb cmc int or into daa (bad) lret jecxz movsl sbb imul mov adc sub in mov inc adc inc inc in mov inc add nop repnz (bad) ljmp mov xchg leave sub ljmp jbe and stc jmp and inc (bad) xchg sub xchg add pushf sub pop pop add lods cmpsl sub or dec cmp mov in iret sbb sub out cmp int mov popl pusha jg stc addr16 movsb jnp roll inc jno add xlat scas or xor add (bad) lret and pushf sbb pop mov or mov push mov arpl pop psubq adc stos std push jecxz xor jle jno add nop jg je mov (bad) lock cmp pop pusha push mov sub ss arpl push inc sahf adc add sub push push or sub stos (bad) cmc ljmp jae mov movsb adc sbb add or add inc sbb jle std mov jp add cs orb bound pop (bad) (bad) jge jg sbb sub js pop lods test out les mov outsb dec push fldl cmp jg mov add int3 cmp lahf add aam add ss dec (bad) add js test jg iret xor pop mov cmp aaa (bad) jae mov shrb rorl cld lds aam fwait loop lret stc push hlt mov arpl xchg pushf dec add push (bad) adc or rorl adcl sub and push or mov xchg loope cwtl adc dec idivl jnp jge add and rol ret cmp into stos mov mov sub test mov cmp lahf xor inc int3 jl mov imul add adc and jne add xchg lods jle (bad) scas or ja in into fldenv add push fisub insb and xchg sub js or mov clc ret mov sub push (bad) out ss paddd inc cmp mulb mov add cmc lret and jne (bad) gs add adc rolb push add and inc add fadds add and out adcb add ret mov push and popf add test roll sbb fcom mov cmp add test cwtl mov xchg xchg sbb mov roll inc int3 adc mov and push scas icebp xor sbb or les ja ss stos pop bound (bad) cmc fiaddl gs rcl (bad) out fwait mov sub fs add pop fcmovu push xlat out dec add fdivs mov push push push ret adcl daa adc and or mov inc in out dec nop cld shl pop std sbb incb cmp cmc add adc xchg inc arpl pop mov jbe incl lock add add dec dec jge inc pop test rclb outsb xchg push xor lahf and andl aam inc inc loop je add sbb add jg fwait add push js loope add add cmp jl js mov cmpsb pushf ret push (bad) push add in jge lret and add cmp test (bad) mov add sub sub adc add pop int ret inc mov xor or xor inc test jo rolb mov stos gs pop jge sahf pop (bad) ljmp add or and mov adc cli inc fnop ret push js adcl xlat inc cwtl into mov rorb out (bad) xor add stos pop xor sub xor jge add pop lcall cmp shrl cmp pop imul pop add out push popa and dec test bound js arpl sahf lods out mov (bad) cmpsb shlb cs xchg push cltd add insb cmp mov js cmp inc daa bound mov cltd mov jne sub ds or fwait xlat adc or push or sbb roll sub jl cmp xlat dec pop mov mov test cmpl (bad) in test cmp inc (bad) je add and mov repz pop jg pusha sub popa pop mov movsl cmpsb xchg shlb les out xchg cmpsl ficom loopne pop jl dec add bound sahf je mov add enter imul cmp fdivs test out mov mov pop addb xchg and sub sub lds popf call sarl shl sbb add outsb xchg arpl mulb addl ds add xchg imul pop xor dec inc pusha flds adc xor add stc inc mov pop out xchg xlat out jg push fs mov rolb loop sub push loopne aam and pusha jae leave inc mov cmp cmp dec pusha sbbb pop out jl sarl jge add or std jns xlat sub shrl xor dec (bad) or aad fisubr dec add sub pop cmpl cli lcall push int3 aas xor sbb nop sbb dec andl add and test xor lret daa mov mov xor mov scas imul test add ss (bad) fs add mov inc add xchg icebp mov jl jae mov pushf pop arpl inc dec xchg jecxz in sbb rolb xor cmpsl mov cmp mov jb sti adc orl mov add add xor popf pusha out adc and jne add cmpb sbb aam and loope add in js inc call sbb jg mov or test nop add cmp inc mov jnp add aas enter popa dec jl add xor and orl scas jb pop add in and mov sahf dec push push lcall scas mov add cmp jle loop inc xor test add into add push sbb subl test push ja mov add mov cmp rcrb jnp pop (bad) xor cwtl and fs lret pushf (bad) push leave cmpsl xchg xor cwtl add pop fsubr xorl dec add fidivr add pop jmp or mov fadds repnz adc sub push enter pusha jmp test pop int3 pop jo sahf adc xor fldenv push pop sarb insl adc jo data16 mov push add add repnz cli inc fmull jle ja dec test push jnp mov jnp add inc mov subb mov xor iret pop or push mov inc icebp movsb std mov lahf add cwtl dec mov xchg hlt dec cmpsl jge add dec cld mov mov clc fnstcw sub (bad) (bad) jb lods add repz add in aaa add aad pusha jns lret arpl test js addl repz js xchg adcb cmpsl and mov bt sbb push cld scas cmp inc dec pop sbbl or push mov nop lock dec adc out dec inc lds sub jl sbbb int imull sbb add or xlat push inc adc cli mov push popa (bad) sub lahf or ljmp inc js jns mov add adc inc add dec int xchg cltd fisttpll mov jge fwait pushf xchg add mov ja add cmp roll xor add cmc hlt int3 leave test lret jo pop lds jecxz ljmp (bad) stc push aas sub shll pop jecxz cmpsb add sub je dec imul mov cli pop cwtl add xchg aam ds adcb les andl inc pushf fwait incl in push sub and mov cmpsl jo je inc and loop enter bound ds push jbe lock scas stos scas xor out dec nop (bad) (bad) push fbld enter stos push add int3 mov scas sbb fs mov adc xor out (bad) cmp push icebp (bad) mov xchg add sbb mov or jne fsubs xchg mov subb rol sbb out outsb pop cwtl pop mov data16 ds icebp insb inc repz ret bound jo dec jp mov mov (bad) cmc sbb inc stos dec insl sbb mov xlat mov icebp (bad) arpl add or or pop add cwtl stc push sahf mov movsl adc addl adc (bad) xchg adc add ret mov jg outsb jle add sub iret add ds loop mov xor sub addb clc test mov mov js dec mov es sbb inc mov sbb ss cmp rolb jl popf mov mov cmp lret stc sub adc xchg fildll popf jmp ret sti (bad) fwait dec inc jl jle or pop aaa jb sub adc test mov xchg inc dec cmpsb outsb mov cld mov ja fildll add enter mov push test add std and jae cld inc das loop jb iret add inc clc arpl pushf cmp stc js jns lods int3 add mov repz sarb or xchg add in stos and jg or push sbb add out xchg (bad) mov aam mov loopne inc lcall cmp call popf fucom add inc jb dec adc inc or pusha pop insb fisubl jecxz pop xchg mov leave test popf sub or cmpb imul sub ja aad pop ljmp xchg push iret jg xchg pop xchg xchg add pop ret dec popf icebp js scas gs add lahf sub lods add xor add adc lds fimull jb add sub lods into mov pusha jl aas add popl outsl mov mov popa test or jb je lds lahf aad xorl (bad) outsb pushf out cmpsl jo jno inc pop addl xor in add lods fistl movsl leave dec in xor mov (bad) adc push or je or insl aas stos and les out adc mov or mov add scas idivl add xchg lret fwait sbb lea dec jle clc xchg aad sbb cmp or orb mov inc pop push and sbb inc das shl add int (bad) pop inc (bad) cmp arpl shll cmpsl xor shrl into enter pop cmpsl mov repnz jae add and je mov mov inc enter mov inc cwtl icebp aaa jl xchg data16 push add pusha inc rclb dec lea iret sbb psubsb mov out push add jp xchg ja mov jbe push mov pop push dec jbe mov mov (bad) jo addl ja mov loop sti stc pop movsb cmp xchg xchg xchg out (bad) das pop jl incb fs push inc fxrstor jl pusha cmp sub loop daa or outsb mov lret and jge sub addl cmp fmull xchg jg push jle fs add mov push mov lcall lahf pop and cmp adc addl mov jo in lea xchg cwtl lret xor inc xchg dec mov jge pop jl adc stos lret in lcall gs ror stc adc pop nop test fnstsw add (bad) mov iret dec in pop fistp jo inc mov (bad) test xor mov jl sub repz fild sub pushf adc add or aad je fstl and in and push cmp or rclb daa xchg and mov jl dec add negl (bad) bound pop inc add sub add out shrl call push jmp pusha icebp dec mov (bad) insb jno add jnp jno iret cmpsl pop sarb lods mov dec add in nop xchg sub pop imul sarb js (bad) sub and inc lds sarl xchg inc pop pop stos pop outsl addb jb push sbb add insb fldl add pop scas and sub mov daa nop lds pop gs js pop pusha repnz xchg fucomip xor mov jae or jns lcall iret dec jae dec insl test push jp out hlt mov xor inc jp stc mov sub mov push mov and movsl dec add jo adc repz jg cmpsl pusha jl jno aad ljmp mov fwait push pop test inc sbb cmpsl adc xchg in xchg in pusha push mov add fwait rolb xor xchg mul call add xchg push inc jno add popf (bad) hlt (bad) xchg adc mov inc aad ss paddw ljmp or les out sbb and int lret xor into add cmp push mov repnz and std mov ljmp in lods imul outsl add jno ja scas ret mov inc iret inc aad out jae or jns add ds dec sahf xchg lret sbb add adcb inc pusha dec ret call (bad) std xor push imul unpcklps add fdivs pop sbb mov jmp and add outsb icebp sub mov cmpl sub stc stos cltd aas imul enter inc cmpsb outsl dec jne add bound mov rcrb push xorb mov sbb push (bad) dec incl jns pop jbe imul sub fldcw (bad) xor dec jle subl push adc lret (bad) pop jmp in jl (bad) adc cwtl ret adc cmp (bad) mov aam jle add aam jmp sub ret outsl aaa jbe jo xlat sbb cmp pop (bad) insl jnp,pn and pusha push dec mov mov sbb cmp inc xor incl (bad) mov arpl roll jae jl lock lock mov jo xlat mov cltd add daa push push pop inc sub popf xchg stc fwait sbb sbb add dec in jb lods xor inc jge repz rorl mov push subb push scas (bad) scas add pushf and bound (bad) into test or inc cmp unpckhps sub out jp and fisubr and ljmp cwtl inc push mov jae lahf fcoms push lcall fistpll push jge pop pop add loopne (bad) mov and cmpsb and movsb ficompl test inc pop bound js xor add sbb cwtl cmp add (bad) jmp xchg xchg fisttp mov mov subl and inc adc lahf jp adcl iret cmp scas push fbstp and std repz push add push clc adc sti les mov add outsb sbb mov inc lods fcmovb jo mov in call and add jecxz leave sbb add bound cmpb cli rcrb in pop pushf icebp add popa xchg pop movsb add roll push cmp loop push xchg gs jo inc movsl add (bad) loopne das or fwait add pusha pop push pop (bad) bound xlat mov outsl decl movsb cli fild push dec stos xchg clc sub xor sub jle mov dec add lret repnz pop add inc popa dec subb ret bound clc sub out cmpsl add add dec (bad) pop sub lret pop and inc (bad) push sbb push dec mov dec and or fildll mov sbb movsb add pushf fcomp push mov sub jno adc adc ret pop inc mov sub xchg mov popf stos iret pusha jo int out jle call pushf inc dec popf push int3 mov pushf lds stos das jecxz sbb mov bound add mov outsb test cmc sti sub mov jmp lea data16 xor loop dec jo daa mov je popf outsl push add lea test aaa push pop dec hlt add into xchg lret jo repz pusha inc pusha lret xlat sbb adc xchg and inc faddl xchg in test frstor outsl test jg cmp jge lahf and outsb mov adc incb adc xor add dec add xchg pusha lods fstpt add and pop push lock cmovo xchg loope gs in mov add push pop add sub pop gs dec (bad) adc mov jp jo xchg mov (bad) lahf lahf jo aas xchg xchg mov pop cmp sbb inc xor popf in jle (bad) or add adc std dec aaa jge ret rcll add ret ja movsl test cmp adc inc mov cmpsl add mov push dec fistpll aas shll pusha dec jns mov cmpb pop push repz jmp lret imul insb mov ret inc xchg cmp sbb mov and sti push ds lret roll mov mov out and sub xor (bad) clc mov leave and and (bad) out mov pop in add or jge inc int popf pushf mov dec add or mov outsb aad fistp and xchg dec int3 jle add inc test scas test js push mov leave dec dec jb or jp (bad) jo dec pop jmp out mov cld hlt add cmp mov lahf mov xchg adc jbe stos jle incl push adc xor cvtps2pd mov xor mov es pop fnstenv pop out sub (bad) xor push cs add (bad) fcompl cmc and inc push add add xchg add dec incl jle add iret mov jp dec pop add or lcall xor lret xchg out insb add das or mov push lds mov adc inc sbb xor push (bad) ss dec bound xor sub add pop fdivrs (bad) enter rcrb fs xchg pusha mov movsl pop imul sahf or or jmp and jae movsl ss xor jne cltd add out scas sub mov decl and jmp js in movsl jns fidivr cmp or popf fiaddl daa mov lahf sbb mov dec push dec pop adcl or xor pop mov dec jle movsl push push pop mov inc ficom mov out cmpl xchg pop orb cmpsb xchg sbb fs (bad) jo outsl leave not inc clc rcr inc add pop and or push add cmp shr daa add jecxz or leave add jns xchg push sarb add ss fisubr sbb dec cmpsl icebp dec (bad) lahf repz pusha lods push mov inc jge push or push test inc dec xor addr16 xorl test mov inc mov push nop cli add lods push in and subb mov push test cwtl ret jnp out rol fbstp mov clc fnstsw repnz jp,pt cli add adc dec or add add add push imul or (bad) fildl lea fisub add (bad) mov cs fcomi pop (bad) mov jo push addr16 stc pop lds arpl mov lret pop (bad) mov inc fwait shrb lea ljmp inc add jl (bad) push xchg mov lock jno cmp rolw or adc ret pop mov sti adc or sbb xchg insl inc std add jb test addl pop ficoml popf inc pop fnsetpm(287 fimul jmp dec gs jne cmpl out js mov add cmpsb and cmp call mov lret jg lret pop jge out scas jo cld sbb test orl jnp mov sarb std and hlt fldl adc sub add (bad) pusha repnz jne test (bad) ljmp inc add sbb push std mov orb ja pop popf add imul std inc lahf pop cmp cmp jg icebp mov cmp add xlat in mov lods or out jns mov sti pop xchg add add scas xor (bad) ja aas xor int3 inc daa fst aaa leave imul sbb dec jecxz add and pusha add fisubl inc pop dec adc incb icebp cmp jp test xor fild jo out push testl rcll mov popl jo clc sub sub xchg sti iret lods inc jg inc roll xor and ja mov js,pn call fisttp jnp rclb add xor or xlat ss popf mov mov outsl lods test stos iret sbb add or test bound pop pushf push pusha add arpl and pop fisubrl jbe andb pusha jne loopne outsb ret repz icebp (bad) lret add pop mov or and mov outsb sahf scas and lahf push daa test enter mov fldcw sub (bad) notl mov dec and mov sbb jg pushf std mov and cmp mov insb lds mov insb xor sbb stc mov xchg mov mov cmp inc js test jnp cltd repnz mov pop sbb and jne add inc clc push addr16 mov add das cmp cltd pop mov dec ds je in ljmp js push add stos (bad) ret dec mov pxor inc dec sub gs add cmp pusha es movsb mov std dec iret mov mov mul popf push js add mov ja jb cltd mov aaa pusha push data16 mov add mov xchg fwait add lahf (bad) movsb fld arpl add jae movsl andl or pop insb enter gs pop mov ljmp (bad) adc add inc aam adc lret cmp clc adcb and push inc andl mov aaa loope xchg stc sbb xchg popf test inc cmp shl jecxz add scas ja cmp xchg sub stos add cwtl mov push rep mov inc sbb push pusha sub add push adc or xchg push and jmp pop sub iret sbb (bad) rolb movsb pop (bad) adc sbb mov cmp inc mov xchg mov out (bad) dec js add push mov pushf icebp xor test sbb subl out add popf jne repnz orb and test xchg jo insl add cmp add adc jnp xchg scas or mov loopne rorb xchg cmp xchg mov stos push mov xchg pop imul bnd dec stos aam popl in mov ss test jno pop mov imul jb add jg repnz xor sbb test sub subl inc sbb xorl addr16 sub mov jmp push ss stos mov imul xchg xchg and and xchg frstor push mov xchg (bad) xor cli clc push jl and cwtl push xor inc push sub dec out push in pop dec dec add lahf iret adc xor pop push out adc jno or adc outsl inc jae mov or xchg xlat mov add xorl mov jecxz cwtl adcl in pop (bad) cld movsb adc sbb add xor dec mov pop mov xorb jmp add ret dec cmc (bad) add mov jg push sub xor cmp cmpl inc ja test pop add adc mov jne and push or jne (bad) xor roll loop or pop mov adc jle add es xchg xchg ljmp add xlat and mov shlb mov xor add dec push lds stos movsl jg out mov mov (bad) cltd add or leave jg ds mov (bad) addr16 stos repz jg cmp int3 ljmp aam faddl mov add add jno mov add leave icebp jbe lods push inc mov fucomi gs lcall cmp mov add popf sarl pop pop mov adc dec aas pop adc in sbb iret sbb mov loop andl (bad) jl dec jp mov rcrl add (bad) out je push lahf add test mov pop mov mov imul sahf pop mov xchg pop add mov jmp loope push add fdivrl adc xor repnz xchg leave jmp sub xchg adc shufps lret cmp add sub dec or cs test dec mov pop dec inc inc (bad) ja daa mov mov inc adc sbb sub (bad) jl add insl imul dec xchg pop add adc or cmc mov pop ds xchg scas cltd sub out xchg sbb adc mov lcall scas fprem xorb sahf loopne aas je fiaddl add mov sbb pop mov sub mull cvtpi2ps jle rcrl inc add mov sbb fcomip dec jl incl das inc add lock (bad) (bad) add ret jg and fsubrl jnp dec stc test mov fbld jo pop inc dec add jnp nop cli cs add pushf out mov mov cmp xor adc jmp in or adc add pop outsl andb pop insb lock cmp dec rcll adc sub cmp lods lret sar pusha jl repz and push rolb pushf xchg xchg adc insb add push out out lret stc dec jge sbb mov sub std js ljmp mov shl js jmp dec stos inc pop xor add cld and fs add imul xor jge cmp pop out xchg fildll lods adc js scas mov jg lods pusha hlt mov (bad) adc lret loop add or orl test mov xchg xor aad inc aas repz mov iret inc clc out pop ss ds jbe sbb mov aas in into repz pop inc jg add push xchg adc rorb or out inc lret jge popl jo out sub pushf dec sarb sbb lea rol push roll jo loopne sbb dec cmp cs jg fildll lods and add mov popa add popl sbb stos jge dec jg imul (bad) push imul xchg xchg mov (bad) cmpsb jmp cmp add rcrl inc cmp inc xchg lea mov fwait repnz xchg add imul dec push mov into pop jo pusha sti stos enter sub sub out movl pop xor xchg add xchg ja xchg data16 jg dec in repz add mov jg xor arpl pushf outsl loop sub inc add stos jb lcall cmp jg (bad) or add jp roll mov popf popa cli test cwtl sub and (bad) mov or mov and inc andl arpl sar and push lods add (bad) into aas daa in pop subb sbb ss mov push icebp mov (bad) jns movsl (bad) jae lret test iret pop push orl mov ficomp add inc test lahf add sub into jge rolb sbb xchg fadds inc inc pusha sbb ja minps les jg lea push gs imull add out clc xchg push xchg mov popa les cmp (bad) inc hlt imul xlat adc repz jecxz into outsl jo xchg fistp mov sub (bad) mov sarl pusha mov cmp inc lret popa adc imul call mov sarb jl movsl add repnz subps xchg mov cmpsl xor cmc sub pop das jae cmp jg xchg pop rcl jmp fchs mov shlb xor in xor rcrb cld mov jo je jae fistp inc xchg sbb (bad) pop nop dec push insl xchg cli add jl push jge inc mov pop or adc adc daa push sbb movsl fildl fistpll fucomip out js cmp pop push (bad) enter jno scas fdivl (bad) adc icebp sbb jbe sahf test dec sbb or adc add sbb insl add subb add jmp and jle (bad) lcall aam out (bad) adc lahf (bad) sahf mov xchg push lcall jle decl out sub push pextrw sbb ret cmp jmp js notb cmp (bad) xor mov xchg jecxz jge lret fidivr jo cmp jo mov inc lock push cld jge add ds (bad) cmpb or jmp inc or hlt add xor cmp pop mov mov jmp ljmp jp push push orl rol fcomip mov pop lea adc jbe jns and loopne pop pop mov jne cmp pushf ss sub mov xorb leave dec pop mov push aad bound sbbl sub (bad) jecxz sub incl jne mov ret mov lods pusha retw mov push pop jg sub cmpb push pop add mov movsb repnz (bad) insb mov dec scas cmp jle bound xchg xchg neg test fiaddl cwtl mov add fsts xlat add mov or pop (bad) ds mov test fstp mov push or cmpl insl sbbl and fcmovne xor or cmp or jo add stc jmp (bad) (bad) (bad) fwait arpl and push adc pop push inc cmp decb mov inc add cs test jle mov and ljmp sbb mov and sbb out or sub gs jecxz sahf push jmp mov mov jbe mov jb push (bad) add xchg popf pop nop cmp push or xchg mov inc enter pop movsb add pop lea pop aam push loope (bad) in inc scas je push add push jle xor add or xor shlb sbb repz or add xchg imul pop add pop or xchg les mov cld add fisubrl jle add dec cmp mov jns stos inc int3 mov das fldln2 pop sub lods mov mov mov add mov add and sub pop sub mov pusha jno add popa pop stos xchg loop int rcrb push sbb cmp js out mov sbb out jo fldcw (bad) mov lret adc mov repz mov pusha add jo mov sub cmp stc jo mov cmp add das add push je xorl push pop cmp add sti arpl pusha hlt add or mov ret pusha xor clc sub (bad) cld test je xorl or fsub test push fcmovbe mov mov out mov push daa cmp iret sub push dec in pop and std sub adc mov subl push sarb lret jns popl jp aaa inc push (bad) mov fsubrs add ljmp sbb rcrl jae scas (bad) jo,pt add (bad) xchg add orl insl add popf outsl jo jns add and add xchg inc imul movb jb fsub cld sub pusha cld stc popl mov jbe icebp orl loopne jge and push js pop inc push and (bad) pop fwait xor inc (bad) lods insl add pusha push (bad) mov xchg add icebp mov mov loop mov lods inc (bad) jo pop add repz add rcrb lahf pop out pusha popa pop or add sub ret cld pop jp out jp dec js sub jle cmpb pop ror jmp ret (bad) jo imul jge add ret loop xor or and daa incb mov inc jo adc ret xchg xchg icebp push jle add nop mov fiaddl in and sub jge (bad) sub lret addl sti mov outsb cmp jnp int3 mov push jle sbbb call loope add mov dec js popf pop add xchg sarl lds xchg icebp adc insb in add xor cmpsb add pop loopne add cs mov rorb insl lret dec add aad jae pop sbbl mov js lds mov popa cmp add fwait or jl lahf or xor in lret rolb dec outsb jecxz loopne lods mov fbld mov in imul jp xchg jle mov mov je fcomip jns jle sahf cwtl sbb dec sbb ret mov fxch pop lea jae mov mov mov and adc mov in mov add pop iret mov and arpl movsl fildl sti push (bad) mov iret (bad) mov mov sbb enter (bad) divb test jg arpl mov push sub push push push xchg (bad) cmp mov lock cmpl jg xor in add add hlt mov pop repnz pop decl cmpsb cmp das ret je add fdivrl and lds aam shl adc push fwait vcmpss lahf and mov cli jne xor lahf aam adc cmp lds xlat imul push out adc xlat lret push adc pop sbb repnz adc pop lock push pop inc iret jp icebp js aas in jle add jno pop mov cmc mov popf jno jmp or icebp aaa addl push inc cmp iret and add mov fstps mov push iret sbbb pusha and mov sub adc add stos inc ljmp fstpt and add cmp inc pop adc fs push sbb mov inc pop movb adcb pop xchg mulb (bad) and ds add dec pop xchg sbb and imull out pop (bad) push outsb daa mov test adc xor or imul jbe scas out sarb xor pop lds incl adc cwtl lods xchg fnsave xor sub das and push incl jo dec leave mov or js mov xchg cmp inc mov cmp (bad) cmp add (bad) outsb fsubrl int sbb jbe mov rcl repz adc add add std push mov jp movsl negl or add xchg imul sbb lret cmp mov js cwtl insl add dec in jb or xchg jno mov mov pop add adc jne iret mov scas add lcall dec push repz lret mov and mov daa pusha rolb flds shll dec lret cmp add xchg scas mov or mov out dec fcompl inc (bad) jecxz xor inc adc sub pop sbb or sub or or ret andb movsl fs jne xor out jo and insb into sti sti xor mov mov push jle incl pop pop in fnclex xchg add push and jecxz xchg mov decl adc and ret (bad) mov push js add jmp dec jb or scas jg xchg push jp iret pop jle add push leave xor and xor pop fsubl repz out and add mov in repz mov aas pop cld push jg (bad) cmp or das add add mov mov or xor push cld inc add aaa push popf or add in add adc sub or iret cltd and sarb sub outsb mov pop and insl push int3 add rorb add pop and sub out xchg push pushf sti add cmp add mov add imul lods std imul xor jg push push xchg mov jne loop sbb and stc or add cld (bad) lods xchg aas xchg pop lret out cmc out (bad) jecxz jge out sarb (bad) idivl rolb xchg test test pop (bad) arpl jns pop push sub add testl add mov xor push pop outsb adc sub (bad) mov out dec sbbl loop pusha jbe hlt fwait pop xchg add (bad) xchg (bad) jmp testl adc lret cmp das pop daa pusha sbb add xor cli rolb xchg adc aaa mov add add or fmull addl aad dec cs loop pop stos (bad) loop mov add repnz mov repz push out pop sbb add pop push stc ja add mov xchg add push ljmp pop addl test xor add inc mov cmpsb inc sub push rorb jne jb das add jl mov fsubl ljmp dec aas mov cwtl in or dec pop mov push lea cmpsb inc dec aas mov loopne loop aaa pop ljmp rclb jl xchg outsl scas (bad) xchg lods adc lahf and aad repnz or test xchg enter xor dec push mov inc and nop xchg inc icebp sbb sbb nop leave pop inc fdivs add test test push fldcw cs ss add sti fdivrl ja ds movsb xchg ret add add add mov hlt lea push (bad) loopne jno cmp jle mov lods and stos (bad) jo pop xchg enter dec xchg sub pop push in dec in and mov (bad) (bad) cmc out (bad) repnz inc add bsf pusha and add mov xchg popf xchg popf lods pop add arpl daa mov fistpl int3 das jge (bad) add sbb and inc lods inc data16 sbb dec push jle cmp adc lahf sbb iret lea notb add and int pop addr16 xchg lea xor adcl xor add orps add ja adc fcoml orb cmp sbbl fsubrl and or divb jne pop js sub sbb and or sbb or add inc andb dec add jmp ja add clc cli ds loope xchg popf dec retw sahf mov repz cmpb (bad) jo jo mov sbbl das add xorb (bad) inc push xchg loop fucomip add repz cld aas ds cmp sarb imul addl adc pop jg cld sub mov and fistpll pop jl xorb jo out sbbl xlat (bad) mov mov jno arpl adc and or add cmpsl movsl lods pop dec fwait add lds xor xor mov loopne adc jo imul loop (bad) cmp pusha inc loop punpckhwd das inc dec xor stos xor scas arpl or jmp add mov add (bad) mov mov cmp pusha jno xchg push sahf add hlt add (bad) xchg pop pusha aam pop pop jne add jle and and mov mov jmp iret adc cld pop xlat stc fstp and arpl pop jnp add push movsb sbb dec fistpll subl rolb add lds push test jmp cli enter dec outsb pop iret dec movsl iret and iret or add adc fwait dec add adc pushf in xlat mov mov push and adc inc int or xor or sbbb icebp js mov xchg repz fs push roll push mov sub pop push std adcl in pop test test lock (bad) je add mov fildll (bad) push jo jmp (bad) inc popf pop add pusha and pop push add jmp adcb jmp fistp or add lahf xor cmp gs xchg or imul imul js sbb add add inc mov mov dec mov addr16 (bad) aas add out pop ja jno cmp sbb movsb in pop sub add cmp ljmp add xchg dec bound lcall mov sub jle mov inc sbbl pop jge mov shl sub (bad) or std inc pop adc jle add out cmpsl lea add cmpsb or fisttpll jecxz subl add jmp mov into xor xor sbb stc pusha (bad) adc stos es add (bad) push in mov fld mov push inc loope mov xchg sbb inc sbb mov in mov data16 fsts jle xchg jns lahf cmpl incl sub lods ljmp sub mov cld inc (bad) jp pop cmp shll cli push iret jo push out cld pop jle jg fistpll adc cmc popa pop push jo adc pop scas fistp pop jae jo mov leave ds pop mov fistp jg add xor pop loopne push imul lds (bad) xchg or cmp jno fucomip std (bad) adc or xorl inc movsl in orl push icebp mov scas add inc fucomip or mov jmp sbb je jmp xchg jo and and add loope mov cmc outsl js (bad) pop inc mov lahf lods (bad) nop in sti sub cltd add int3 stos jne pop leave pusha add add scas pop push push (bad) or mov cmp mov (bad) sti jg sub mov adc mov call mov push and subl mov rclb subb dec jno mov pusha mov (bad) jp jg jecxz jl roll jne imul imul push orb inc add push lods js push rorb arpl pop sub jl cmp xchg add daa xor mov or ds adc add es adc jg cmp pusha jmp call inc out sbb gs add enter je (bad) lock ss add orl iret mov mov aaa mov fdivrs push nop xchg mov jge in jo jp loopne add (bad) hlt in pop cmp test sbbl in or lods sbb mov xchg ret fsubrp cld imul fildll mov dec repz in insl (bad) or push inc add xchg push pop pushf jae mov leave inc mov add repz imul ret dec push mov test jp addl cld push test out add mov add sub mov mov (bad) insl adc push leave push mov jle jne cmp xchg cmp jle add gs insb add mov adc sbb push imul mov into fwait and or cli cmpsb push push aam sbb add xchg mov (bad) lods xchg mov shlb xchg sub (bad) pusha and push inc incb cmovo outsl test jecxz mov aaa lahf jge adc ret xlat sub or and lcall add adc mov mov jo mov out push movsl xchg pop js add mov dec or mov scas mov addb jo mov add sbb mov lds jne orl add popf pop outsb pop adc xor mov mov ret stos loop bound lahf fdivrl mov pop push jge pusha mov sub cld add add mov insb lcall add (bad) xor pop ret dec jge push js je add cli jo xor and (bad) stc xchg jg pushl inc dec rorl jne cmp sarb out pop push repnz loopne jecxz cwtl movsb cmp sub fmull fnstsw add scas inc lea pop jns and addl lds push pop cmp jmp scas sbb mov mov push and jmp xor mov (bad) mov out je pushl ret pop push add mov imul scas mov lods push inc cmpl jns adc push ret push xor mov (bad) pop pop adc dec mov andl add pop mov test or xor testl je add jmp cmp push pop xchg xor adc std iret mov negl stos lahf add faddp addr16 (bad) bound jp pop add jp push and imul sub dec jecxz mov lahf push inc out xchg jp or xor xor dec (bad) cmp add pop mov dec pusha xchg std mov jo gs ret loopne daa out jl jmp mov js sbb aas les add pop je ret adc jecxz pop pusha pusha pop pushf (bad) (bad) lods and pusha add stc pcmpgtb mov inc aam xchg popa pop pop stos fistp xlat mov or add add imul cltd lret test or sbb out push add aad cltd ljmp and xchg cs xchg (bad) cmpsl inc inc adc jo add mov adc (bad) sbb jg loopne ret add mov jno ficom stos imul or mov sub add mov pop add xor jecxz test cmpsb pop add (bad) cmpsl jo ja fwait mov jo cld mov xor jo jmp scas push shrl mov pop dec add sbb push (bad) out push dec jns adc xor lods add loopne push insb sub add sbb pop int3 xchg popa jae xchg (bad) pop mov add mov jns data16 nop (bad) or roll xchg jns loope popf jmp jae add inc mov sbb xor stos adc xor dec jb mov sbb mov lock hlt leave and in aaa jmp cmp mov je push movsl xor test push add adc sub sub jp add icebp pop jl dec scas je mov mov add push data16 test scas add sub jnp xor cmp sub leave cli add xchg add add inc jg mov and sbb pop jae add cmp and nop ljmp sbb dec add lret outsb ret mov repnz xchg mov stos (bad) push jbe inc add pop sti jge fmuls sbb pop xor out aas inc dec pop js add fldl mov sub sbb sbb inc mov add jge addr16 ret mov fldcw jle es out out add add jg outsb int3 test fcoml push fs iret ljmp jnp or mov or fldcw adc sub inc rolb aam jmp in jg and dec jle pop nop mov adc clc aad outsb mov enter data16 into cmp pop add sarl popa add or js mov push mov and lcall nop fpatan push lods push lea fcomps cltd mov mov cmp sti jl adc jne insb ljmp sbb (bad) push (bad) adc jg jo pop add js mov sbb dec inc jecxz push out jb add lds push push and push popf mov or push std int cld sbb push add adc xchg bound icebp mov scas movsl jge mov pop jg xchg pop mov imul lea mov in mov dec lret icebp stos mov lahf adc cs sub xchg outsl add pusha (bad) inc jo pop add clc mov add jl (bad) pop fcoml cld pop out push push (bad) idivl incl push dec call (bad) mov and mov push das mov pop addb mov pop and jo je add inc mov xor jae lret jb std mov xlat jg pop dec in pop sbb add xchg add stos out stos sbb mov adc inc (bad) out xor add imul cld jmp sbb in sub popa xchg mov inc ljmp push out inc dec lret mov lea lock mov shrl std iret cmp scas and xor es repz test sub jg fstl std jl arpl jle add jne,pn mov out add cmp jbe js mov fnstcw fdivl add mov in add les mov lcall inc out jmp pop sub push (bad) mov inc push inc pop add cmp adc addl jg push add mov pop xchg push inc stos mov sbb iret icebp add je adcl inc push pop xchg mov sarb pusha (bad) loopne xor faddl push sub loop push mov jns sub cli inc jo jne adc or mov cmc sub cmpsb pop jo adc jo inc cld js aad add mov bound jnp mov dec sub (bad) dec js fisttp sbb mov push mov std jle add idivl rol mov pusha or roll or data16 xor and xor ffree cmp inc (bad) xchg out push pusha mov cmpb jns test jle movsb daa dec jle incl outsl (bad) add mov test or aas xor push cmp add enter add mov mov mov divl jo xor in jns (bad) mov sub test push xchg fbld jg jnp mov mov mov add cmpb addps mov add idivb test xchg adc dec inc out out and jge and leave jg and fiaddl jo dec movsl cmp in cmp in aam xchg insl mov mov (bad) xor loop jg fstp (bad) scas inc or pop lods pop jnp imull pop cs jg rorl out stos mov add jmp xor cmp lcall adc add loope mov jo mov cltd push xchg pop jmp sub out add aaa mov and sub mov incl sarl daa xchg add or dec add int jmp es jp rorl inc rclb jle push or sbb movsl imul or fdivrs adc sbb jp sahf mov pcmpeqw das bnd sbb aam fwait push mov add (bad) movl dec xchg push push js or fnstcw jne jns jecxz or fisttp test pop lahf mov movsb lds popf pop pusha fistpll ret xor push xor or hlt ds js lods sbb or ret insb mov cmpsl es cmp jnp add std test add lcall mov pop movsl pusha cmp cltd lret mov xor lea inc cmp jge inc daa pop cmp lods push mov and roll mov enter jnp xor jmp pop repnz inc jle je add ds (bad) movsb (bad) fisubr cmc iret pop sub rcll jne xor pushf jno inc xchg rol add sti scas popf mov add jo xor adc xchg mov mov test xchg or (bad) sahf add shlb movsl and jne ja pop (bad) je mov or mov movsl sbb cmp test mov jl inc pop and push add popf jl sbb test sub jo cltd cmp out aas sub mov (bad) adc adcb sbb hlt ljmp (bad) add bound mov inc add inc roll ret cmpsb not out mov pop stc jnp,pt adc stos add add faddl push inc sbb nop xchg rorb jo pop push xlat test cmp pushf or test out data16 push test repnz dec sub or cltd test push add scas lahf ljmp push add jle icebp popa jb pop (bad) (bad) std adc jp mov push mov pusha lods outsl adc subl xor cs add shr cwtl add stos (bad) std daa mov pop jno ret dec jg scas or xchg lea pop pop xchg and add addl jg mov pop mov notl ds or jb xor mov inc mov in ret lods push push test ja hlt (bad) test push jp fimull jle adc icebp (bad) xor loopne inc push ds mov xchg mov daa testl push sbb jg mov mov or (bad) popf push dec orb or inc loope scas ljmp cmp jo ja (bad) jp push and jb and stos mov inc push (bad) xor add cmpsb xchg sbbb hlt push adc scas addr16 jne lods idivl add fucomp pop pusha scas or mov jmp pushf clc or jb mov lock (bad) xchg aam jb cld pop jl mov jno clc fldenv andb outsb mov cmp add add addl lcall mov movsl push mov fdivp pop adc or cmp pop jp mov gs mov jl cmp jge (bad) divl add repz test lret pop (bad) jp cmp fwait movsl adc push iret dec push mov push xor insl ja (bad) rcrl ljmp pop sbb loope xchg sub mov aad lds or in iret xchg shrd inc mov mov stc cmpsb xchg xchg mov mov push xor jle pop jg std pop fiadd insb insb imul lock data16 psllw jae and and movb (bad) nop mov cmp outsb lea xchg push out clc xchg or into jne or jl jnp mov dec add push lret xchg gs push inc pop push rclb test jo push out std add add addr16 cmc test orb das push mov lds sub int3 sub (bad) call (bad) ds add fistp push ja out pop add aas dec lock idivb xor cld xor and imul sbb fs jne add xchg add orl add rolb sub std push stos ret and mov popf jge sub xlat xchg hlt sbb cmc mov mov orb aam cmp xchg (bad) cmp push jno add add (bad) (bad) mov (bad) pop inc ror push inc cs mov (bad) or jbe xlat stos mov push inc add mov add out sbb pushf cmc cmp repz imul sbb stc or clc ret aam push lret sbb sbbb mov or jmp cmp out (bad) lock popf inc (bad) push add hlt roll push add (bad) dec nop lods scas not adc adc xchg push jmp inc dec dec loope jmp mov call stos cmpsl jbe pop sbb pop add pop add add jb or dec mov in sub js je fbld les jp mov sbb sub out cmpsl sti js mov (bad) aaa mov fbstp jmp add add sbb aas push js movsl negl pusha push pop loopne les ja mov rolb sti flds das add xor stc add jg xor fisubrl xchg add int3 push jbe stos sub mov outsb push ljmp push jo (bad) ljmp mov nop imul inc sub sti loop stos mov jae les nop imul idiv mov sbb dec into daa or sub fidivr jo shl jp mov dec mov fs in (bad) out inc imul fwait sub addr16 pop cli jne sub pop repz push pop decl and and inc sub push out add pop pop jmp push es sub das sub and jnp sbb sti and fwait add dec (bad) mov pop cmpl mov fst adc adc push leave add mov test cmpsl add inc jle add ljmp daa xlat roll or jl fsubrs xor push inc push shrb sbb add add loopne push andb (bad) cmc push mov scas int scas push cli pop subl jns mov dec push bound ljmp jle xor cmp mov or add out call inc push cmp pop mov insl iret lods add lret test or add or cmpsb daa mov test mov incl push sahf pop inc xchg sub aas (bad) lahf xor mov jge jnp add jbe roll xchg mov sbb add fisubr out cmp mov orl mov std push ret ret jmp (bad) pusha jbe xor add test add lret mov cmp in add lcall inc ret std call adc sub pop sub fadds test inc ja add and mov add mov shl scas mov mov fwait incb adc gs jae lods add movsb dec inc ljmp pop (bad) addr16 pop div sbb in outsl incl push addr16 sub and adc add leave jge (bad) fisub mov std or rorb outsb jo ds sub in push js pushf add mov add mov cmp jge jle xchg das div add loopne mov add outsb or adc add cmp dec mov add rcll psrld sbb je and imul es xchg xor (bad) (bad) mov push push fsubr sbb pop iret scas jmp pop popa and outsb push (bad) iret and jo or movsl mov jecxz movsb mov insb push lret mov cmp fs sub out push adc push xor pop mov add xor sbb fcoml hlt and jo adc (bad) sub fwait pusha inc loopne pop test adcl xchg sahf jecxz add pop mov js push mov inc add xchg or lahf push fcoms mov inc call hlt leave inc push cwtl pop xor mov dec (bad) sub cli and add mov addl and repnz add nop add mov and mov and sti add out add sbb inc push jo cmpl push aas js jns jnp xor dec and imul mov adc lahf add daa sub hlt mov mov dec popf out lret stos and mov lahf adc jp jmp add pop push mov mov jae and push fsubs (bad) or pusha mov jecxz mov mov cmp add lret lods sbb inc subl sti fsts dec fdivl iret insb cmp (bad) call test sarl pusha in and mov mov roll push mov sub jno pop inc addb (bad) mov adcb (bad) mov addl test out in pop pop mov (bad) dec add mov test mov inc (bad) dec xor psrlq xlat jge test add mov fstpl xchg (bad) imul aam test nop out pop or sbb inc or cmp jmp sbb pop icebp int arpl inc (bad) pop repz mov ret lea jg cmpsl cmp psubq xor jge lods xor test incl mov pop arpl inc movsl mov in lahf xchg mov push jns loope ja mov mov inc in fwait sbbl ror aas pop inc and js std push mov iret push inc out lahf add stos (bad) dec jle repz out cmc mov das pop out in mov fldcw inc into push mov (bad) js add add cmp add mov inc and cmp sbb daa inc outsl inc and movsl lods icebp lahf sbb insl push add xor andl push and dec inc add lcall sub scas mov jns xor nop jmp arpl lods pop add mov push dec stos push scas incl push push into out sub or aaa fldt adc add sub push ds ljmp mov mov movsl imull inc mov leave inc arpl push and mov hlt mov sub cmp add jmp sub out (bad) and jae push push pop repnz js hlt movb mov sahf adc inc mov pusha les fnstsw add je jg jne dec lret aad sbb cmp in adc jb push inc mov cmc jl pop jecxz test lds and or mov pop add jle lcall mov xchg xchg adc pusha or insb ds add or jno pop xor mov ja js lret fistl js mov cwtl push mov and hlt cli add lret pusha jle or mov mov sbb notb std push cmc iret push pop add sub xchg mov inc mov dec mov ficompl cld xchg sti sub gs dec jg pusha cld adc jns lahf mov push sbb add inc inc mov fiadd idivl dec (bad) and daa cld pop (bad) popf jg js addl push push push and aas scas inc jl add imul insl je push adcb mov aaa lds mov inc rorb cmp push sbb pop jmp jne pop pop ljmp fbstp pop js aam add xor out js mov xchg add popa js stc adc mov add pop popf push (bad) aas (bad) pop js mov add inc out mov jb push imul mov cmpsb pop lahf jo imul (bad) xchg pop pop lock outsb std out jo pop add xchg outsl jg and pop xorl js pop dec add push ljmp les div out (bad) adc repz iret inc js inc xchg add daa movsl push xchg mov lahf pusha jp out push lds add in push subb shll xor je xorl add or sub push in add mov mov pop adc leave (bad) or add cli cmp out jmp (bad) mov push or pop xor push inc mov xchg mov mov jle test sarl orl xlat cmp lods pop mov mov or pop test mov jg icebp sti decl les xchg inc movsb das push scas cmc stc xor add addb ds fisubl (bad) outsb mov and negl jae mov pop cmp mov pusha inc mov out add arpl mov into ljmp jmp adcb or mov stos lahf xor pop xchg dec mov test add jge inc dec cli add stc fsts add vmovhpd adc dec sbb daa add xor pop cltd cmpsl dec sti add jnp fdiv dec cli stos cmpl jmp fsubr add push sti jno (bad) dec imul push hlt mov out cld and inc push cli inc cmp push cmpb and ljmp jo jo push and mov dec or inc ljmp jo jnp add subl js jno out out lock outsb add xor mov and stc add xchg loope stos mov jg lods inc int jo push ja das mov ljmp add or mov (bad) or jg lods mov inc stos mov add adc and cli repnz jp xchg jno ljmp leave mov lahf aad jp popa ficomp pop mov inc (bad) cmp mov movb cmp pop add push pop xor push in pusha push xor shrl jnp add ds test dec repnz int or mov inc jmp mov clc insb mulb mov mov pmaddubsw dec aad jae aas les cwtl lcall inc sub push call clc cltd dec out adc lcall negl idivl mov lahf sub ficomp cld mov neg js das cmc mov jmp xor and (bad) xchg sub mov test adc into (bad) dec imul prefetcht0 add ds pop mov movsb add imul in ja push xchg ljmp sub ficom dec imul add jle fstpl add xor sub orl mov pop addb adc mov js adc pop aad iret push scas inc outsl pop lret sahf popa shl daa xor sbb adc xchg ljmp ja in push popa sahf add orl (bad) sbb imul sbbl aas pop repz ja sti sbb inc add xor sbb call dec or ja pusha sub add push les not aad movsb test js sbb pop mov dec jle jnp xchg maxps cmc pop inc fisttp fsts leave push sub pusha imull int add repnz jae (bad) xor mov mov pop clc andb sbb punpckhbw aad das inc inc lahf jp jb daa and sbb aas stc js movsl shrl add ss dec flds loop cmc mov (bad) cmp pop pop adc (bad) mov cmpsl pop aaa popl jae mov stos push jl add shll add xor jmp out jne out cmpsl mov jae fnsave jne add loop inc and stos outsb pop jle mov sub cmpsl jns (bad) ds pop mov not iret jo xchg sub in fbstp imull add int xchg (bad) xor adc jle add xchg dec mov jg add mov adcb dec add jno xchg xchg mov mov out or add mov xor jne mov add int dec dec mov push inc adc jne pop movsl jge jo aad sbb ret dec mov add sub repz and pop cmp pop mov pop mov scas mov add sbb pop lds jg jno addr16 mov dec and aad push (bad) mov inc lahf inc rclb out push cwtl lcall push jae aad mov sbb test shlb pop jo imul idivl sahf je and xchg mov inc or push aaa pop sbb inc les dec das (bad) (bad) imul add sbbb (bad) mov movsl stos inc lea sbbb add js lods roll xor xchg adc mov fimull xchg push daa fistpll jo and rep mov cmp mov push or jg pusha loopne cs xchg or movb mov stos in or js lds cmpsb arpl lret add (bad) movsl loope fidivrl js hlt mov mov test les das lock xchg xlat adc cli inc fnop ret push js adcl xlat inc cwtl into mov rorb out (bad) xor add out notl aas fisubrl xchg push jne movq inc xor out lcall and pop push sub jae xchg sbb jmp sub jo jl pop pop lock cmp fmull test loop mov jmp jo cmp inc daa mov push add lock ljmp inc pop mov cmpl imul mov dec jne sahf rdpmc pop iret mov popf sar movsl loop (bad) fisttp inc dec frstor fisttpl shrb jno fcoms sbb jno add (bad) clc adc xlat inc loop cmp jl fldl fwait mov (bad) je (bad) jp hlt mov cmp mov lret add cmpsb sbb lret push pusha arpl mov int lahf mov sbb jne cmp ret scas gs add xchg mov int3 add adc mov xchg jne mov xor (bad) pusha jle push es mov int3 les hlt (bad) out jo loopne cmc or outsb sub clc cmp lods push inc daa out or dec loope roll into jo pop push pop mov std mov inc fsub and lds jo mov test cwtl mov lods retw daa add mov fimull jl add cmpsb shrl sub add xor loope mov inc adcb adc mov sbb dec out add mov pop mov pop sub add sbb je int3 mov or js inc dec mov xor call push js push sbb add out mov jecxz jmp js lods pop add mov xor pop mov push in lcall dec aad push xchg add sarb sub xor lgs rolb insl jp mov xor sbb add push adc (bad) (bad) popa imul in jmp mov loopne sar lock pop out rorl es mov add push in pop testb push test jne inc je ss call adcl mov xchg icebp sti adc pop repz push sbbl insl dec cmp dec icebp dec pop jne cmp aaa (bad) jo negl cmc jl add xor push (bad) lret addb xchg icebp mov jne pusha aam jl call inc mov out loop mov cld add mov inc cwtl outsl mov inc mov lahf push mov mov or mov jne arpl pop roll sub lcall stos jmp mov add iret enter push xor add ret mov jns push imul call incl push xchg pop add in and sub daa out and jmp fisub (bad) js ss add adc or jle rcll xchg adc ret (bad) lea incl cld push int ss pop adc jo xor (bad) xor add fwait (bad) cld sbb xchg notl mov out js sbb fmull sbb mov test sub mov iret divl out jo icebp add add aad pop inc mov popf jg shlb ljmp or jg dec pop cmpsl add enter (bad) call adcl jl (bad) nop cmp sbb add loope cmp rclb (bad) push push mov das (bad) pusha mov push add sahf loop dec mov jecxz mov cmc adc mov nop or mov jo xchg add mov and push pop aad inc in int xchg imul dec xchg (bad) cmc idiv stos xchg sub mov inc or cmp les mov shll inc inc sahf mov xor test push loopne cmp or mov or jg je jmp ja add mov ltr into inc sti ret lods or rorl icebp and add xlat insb lret mov jp xorb insl adc (bad) popf pop aas or xlat in jg add cmc int das mov and lahf test push dec pop mov mov ds int fadds imul sbb jg dec xchg push mov dec arpl and movsb imul sub push adc sub pop xchg sub mov jl sbb lret sbb mov jg xchg xchg xchg add cmp adc lock sahf rorb int add cmp jge push add lods scas add (bad) lods scas jp add push fisttpl jle cmp incb aad and push dec add ret mov dec orb push stos mov and rclb cltd xor xor xchg inc mov roll adc add gs inc inc cmp pusha adc bound mov dec fstpt add dec inc push mov test sub shrl out ret jo xabort test or mov adc jge sbb cltd cmc xchg nop mov repz xchg inc dec add jne pop out imul mov mov mov cld xchg inc sahf mov push mov clc xor push leave dec pop or pop jbe sub sbb test mov jo stc pop dec cs add and inc push adc and pop pushf cmc lahf add andw add ss add (bad) sti fisttpl jl dec cmp add rcrl iret adc mov xchg mov lds lods pop daa aad dec inc mov add popa pop stos xchg loop int rcrb push sbb mov cmc adc push add xor mov add cs out adc jmp add sub push sub jl mov cmp lret xchg xlat inc cmp stos jge cld add xlat cmpsl pop hlt sti pop dec push mov or in pop test inc sbb lods adc out test jle les addl push cmpsl sub lods hlt je push pop dec and xchg cmpl mov (bad) shr jecxz pusha stos out dec inc xchg fist sub movsb jp test xor ja adc dec mov aas jno mov pusha and lret clc dec jg in push jg xor loope push mov scas (bad) mov push xchg loope outsl xorl cld xlat cmp push (bad) rcrl test mov push sahf mov dec inc lods lahf mov enter dec dec jne mov into out lahf jo inc aam xchg and (bad) or push int3 repz sub cmp sbb pop pop jne rcrl push shll enter xchg add lea mov aam icebp or sbb adc xchg add jle dec scas xor (bad) ja xor int3 addl aam xchg imul mov sub dec jecxz push orl xchg jo jg out push not (bad) mov aaa mov mov adc and sbb push pushf cmp fiadd jmp aad adc jne fisttp jnp rcrb xor pop mov js sti inc sbb test add arpl and pop fisubrl jbe andl roll ret repz add icebp (bad) lret sub inc pop mov and dec fcompl sbb test enter mov fsts sub (bad) notl mov dec and mov sbb adc std mov add insb lds mov fdivs loopne je int3 mov stc jl fldenv das mov mov cmc rolb clc out test aas ljmp sbb pop mov mov clc pop (bad) rcrb mov cmpsb jg flds stos xchg (bad) ljmp push dec (bad) jl push cmp test and pop xor add dec dec add mov or test nop sbb (bad) adc inc jnp test clc aas enter dec adc sub movsb insb test fwait sbb jne sbb ds addl dec dec cmpsb mov dec add push lcall scas mov mov cmpl loop pop xor adc ljmp into add push inc adc add scas sub imul mov adc js rcrb clc jnp (bad) sub mov cli add testl in std lds into cmpsl and lcall loope xchg jle jo push jno mov adc jnp movsb andl dec sarb fisubl or lea ret test dec lahf das inc pushf in add and jb pop xchg cwtl in inc dec inc and dec add test add dec and push push inc dec jae mov lds (bad) scas movsl jnp dec or outsb mov sbb inc inc xchg jns pop bound dec sbb xchg adc fisttp data16 inc push jge fs test (bad) and jmp psrlq xchg fistp and out sbb pop mov or xlat add add adc push cwtl adc js add push and add aam call add inc cli cmpsl and add (bad) scas les sub push add push das jp gs add and insb inc lock (bad) ja pop mov inc push js inc add or cmp mov add pop fbld adc ret dec add push cmp mov jo repnz pop mov dec jle movsl push push pop mov xchg ficom xlat pop scas inc mov ss (bad) arpl scas fist lds loope xor test pop int es ja lret bnd lods into inc xor in mov jns push mov out mov pusha sbb and cmpl popl sbb sub pusha clc mov jl hlt iret inc and dec js xlat pop jo int3 cmp add mov out pop sub xchg lret inc lea dec fwait add xchg sbb push mov jle fist jmp jo jmp and mov cmc add fbld pop addl dec xchg (bad) add loopne sbb xchg call rol cmp sbb ret div call add add adc push xchg rol fbld lea jo jo pusha sti stos sahf enter sub sub out lcall aas out inc and jg sub xor aam sti inc jp gs cmpsl cld sbb sbb pop pop jmp sbb jne js mov nop xchg add (bad) es fst cmp jl addr16 add push adc cld cmp push cmp mov mov push xorb jnp inc test mov icebp inc jge cltd or jb inc andl icebp push (bad) mov insb into scas mov add mov add push fstl (bad) jmp in jbe (bad) bound aaa repz cltd test jl pushf loope add cmp cli mov push rol (bad) sahf sbbl (bad) mov stos add push cli loop repz dec jg xlat mov sub hlt inc jo loopne add mov mov xchg xlat mov cwtl push int ds cmpsb pop es xchg fidivr jmp lahf pusha pusha (bad) lea in adc test leave fdivrl cli cld and out xchg and adc ret sub (bad) mov cmp add mov add pop mov aas push sti dec jg addb pop or shrb add ret mov in inc lods jo das mov xchg cld cmp jecxz sub dec or andl mov mov pop dec and ja daa mov push xor sub sbb add mov insl imul and aam mov int3 adc or add xchg add xchg sbb add mov lcall scas fprem xor push inc sahf loopne aas push jl into sub sub nop jg add xor lods aaa and ja cltd in clc add mov adc mov subl (bad) es faddl cmp insl push pop call jb inc jge movsl imul pusha inc ret loop (bad) add push adc mov incl (bad) out in xchg xchg add mov pop adc jp mov push cld popf icebp push (bad) mov jo ja js add ret mov push subl mov jo arpl xchg lret js ficomp scas pop shlb fwait jp fstpl pop inc fidivr xchg test and loopne aaa or jg js pop icebp dec (bad) jmp mov (bad) xchg hlt sub (bad) sub and add mov cmp fldt lds test push sub data16 push inc cmc xchg pop mov sbb jo push mov lret dec mov jle dec xchg mov mov jl sbb es cli inc mov fsubs xchg xchg scas lahf xor mov add enter daa (bad) ljmp cmp into in push mov ds xchg cmp xchg jmp cmpsl cltd inc sbb leave dec pop mov call cmc lret cmpsl inc inc or cmpb adc jnp cld ja aad mov cmpsl inc in adc dec xchg xchg loope cwtl adc dec idivl jnp iret das pop js dec add xchg pop add fcoms sti stc cmp ret xchg sub sbb sub xor push fdivl xchg pop jle mov or jns xor jl movb clc test add stc dec pop cli mov add jl js or jmp add inc mov ret ss cmc lds push add or sti push cmp mov scas mov and mov jl xchg push add insb lahf xor inc ficom ljmp cs mov add mov dec add sti mov push cli and pop mov add mov rclb mov (bad) stc sub mov push shll add mov cmp and mov xchg add ljmp or add ret and dec fistpll stos js fidivl mov lret ret jle into test jg pop pop in fnclex xchg fiadd push and jecxz xchg mov jl movsb add notl mov add ret (bad) cli fildll lods push push and sbb scas jg mov jg ds (bad) add js add daa cmpsb jg mov call cmpb mov es adc dec add mov jg pavgw mov ja jb rorl aaa pop push data16 add push pusha scas add (bad) movsb flds les xchg mov jae movsl and or sbb pusha dec daa rolb push ljmp sbb repnz jb xchg js or jg sarl fistpll or dec mov popf jecxz mov pop and xchg sub sub adcb xchg sbb sbbl add gs subl or pop xchg pop or (bad) call add add pop and pushf xchg popf sbb xchg add hlt in xchg jbe add dec shrb insl add add dec lock adc adc js add test gs jge mov stc pusha nop test add and jecxz pop fild mov (bad) aas movsb stos out test push popf mov or cmp push icebp (bad) mov xchg add sbb push adc xorl sti pop jae jg and dec rcrl add mov sub pusha mov sbb pop pop xchg add add pmullw int mov (bad) pusha and movsb mov adc cmp popl lods adc imul test inc (bad) mov in pusha dec jge dec test subb and mov (bad) jl aas inc je inc mov cld fildl mov jo inc sub jbe add jo xchg mov iret jl lahf cmp mov sbb mov and lods andb push test scas jp scas in mov out pusha mov cmp and pushf lahf pop xor add test vunpcklps pop mov insb mov jg push adc fdivr daa pop test nop movsl call in scas jns adc pop sti loop jecxz push bound or dec insb int3 cmp mov hlt dec fstpl push cmp js jbe add add add jmp dec add sbb xchg sbb and sahf aaa add mov and sbb xor cmp cs sbb or in add (bad) es cmc stc pushf add pushf pushl lea je push mov pusha add pushf mov movw lea jmp not push push pushl push dec jmp pusha lea mov call shld test pusha mov bts pop add mov bswap movzbl mov call repnz jl enter fwait xchg and fcompl xchg repz and ss jmp add cvttps2pi mov test rcrl push push out std in and adc ret and je xchg jge sub leave lods in xor bound rorl push pop cmp fistpl rcl or push lahf jno int3 push pop pushl test xchg fdiv cmp xor sub stos nop pop add xchg mov cmpsb sub mov pop mov adc sbb adc leave sti inc imul mov lock std std xchg popf ret js lock insb xor pop jo xor in out lods or mov dec inc and add loope daa adc test es xchg xor outsb pop add fs in in xchg push out adc sub xor mov (bad) or nop in mov or xchg and jbe cmp mov and jl aam xor loopne scas cwtl stc lods mov cmp cltd into sub notb ficom xlat mov or xchg sbb adc sbb popf adc jle bound xor cmpsb in testl mov aas jbe mov out jnp sub push cwtl ja jne inc cmp aaa lock sbb push and roll loopne das xchg movsl push pop cltd cwtl cmp nop icebp jae jne cmp push lds mov aam push test sbb push lods movsbl pushf jmp lea ja cmp jmp dec jno add adc sub cmp add call cmp sbb mov xor cwtl pushf jbe push jle xor push hlt adc sbb je add add test push orl push cld xor add and xorl ss shll fwait xchg add ds fstps int3 aaa xchg dec push aam push sbb xchg adcl or lds jecxz pusha stos add test mov mov inc sub push cltd icebp les or loope add inc jmp int sbb or dec mov inc jno mov inc adcl cmp dec pop or add hlt push mov gs or sub sbb gs inc flds add or mov jnp dec sbb mov sbb xchg add xor lods mov mov lahf xchg xor cmpb jge or mov adc inc sbb push sbb lea and xchg add ret loope sbb sbb lahf or lods push in push adc add and pusha sub cmp mov or or or sub (bad) push (bad) (bad) cs cli dec xor lds dec and jge and imul sub (bad) push (bad) or adc adc test lret (bad) out push mov push and test add lds hlt dec popf dec ds test fimul jle leave lret loopne je popl mov aad push enter and bound add add add movsb push inc addb inc out ja ficom push movsb adc mov mov out adc fucomp bound mov insl cmp push or aad cmpsl mov mov arpl dec jg arpl imul mov mov insl and push and mov mov push add cmp inc jbe pop (bad) mov adc hlt sub or and push leave mov xchg adc inc test fadd inc movl sub jnp inc adc dec push aam test rcrl xor addl adc jnp push xor sub xchg hlt fwait push fwait pushf push pop add adc adc les js int3 mov dec lea dec iret lds dec clc nop es jae xlat adcl lods cmc and cmpsl sub add ret arpl and jns adc inc jle cltd popa xor hlt mov lcall or mov (bad) or cwtl add jp dec test inc test (bad) push jecxz pop push imul dec movsb jl lock jmp add lods add (bad) lret jge inc subb pop jae jns insb loopne mov mov loop add push mov and je xor push mov jae addl imul lret (bad) push jmp into fadd nop push or pop xor orb and xchg fdiv push or mov xchg cmpl push lock jnp adc push std test cmc push cli cs dec push mov fnstenv into xor iret repz sub repnz (bad) dec insb adc sub mov movsl add popf and shl stos in out push ret lret bound (bad) xor loope xor mov sahf jle mov fs test mov daa aam dec sub je es and push jp jg fisub jmp imul arpl testl loopne test rcll add pop sahf xor inc lds sti outsb push test pusha imul pop sub add lcall xchg (bad) dec clc mov and pushf addb sub inc or inc push dec xchg mov fs mov test adc inc jae ret arpl sub jns gs ja mov xchg or sub push push lcall outsb jne stos fsub cmc fsubs jge inc lea xor push xorb add scas in dec sub leave addl xor cmc pop std dec and mov sarl dec xor inc mov jp push (bad) cld and or pop loopne sub test lret xchg or jmp cmp xor (bad) sar leave push je movsb xor and pop aam inc push popa or mov and adc dec fs and pop pop mov mov in push adc sbb mov dec lea insl imul insb push iret popa dec jnp inc push lock jnp ret or add inc or cli add fsubrs dec (bad) por cmpsl arpl dec leave cld or jmp xor shrb mov insb fildl inc sbb sub jnp dec adc xchg push add and std and lds aas ffree adc sbb cmp in insb stos cmp push (bad) mov call jl and pop jne mov xchg sub cli adc sbb clc sbb xchg dec ret movsb and js hlt cli movb push imul jle data16 mov push es je jge xor xor ret xor popa and data16 rorb sbb pop push and or cld rclb (bad) adc out add and hlt sti xchg leave pushf test out lret adc mov lret je inc sub test mov adc cmpsb sub add scas call test adc xor dec pushf jb mov fldcw or xchg stos inc fs xor fdivl clc pop dec add mov mov vpaddsb leave dec xor inc adc or popa std sub adc inc mov shrb sbb push (bad) sub fxch or inc mov (bad) sub insb sbbl sahf shll (bad) xor pop jb fs fsubrl cld imul jnp xor iret xor movsb add mov mov in mov xchg jmp lock ret push push dec or adc cmpsb mov sub sub push enter pop cmp (bad) sti and mov inc je movsl outsl push ja shrl cld pop sbb mov lahf test fild pop hlt movsl scas and adc jl push push inc test (bad) nop int (bad) mov jl dec shlb in mov mov pop repnz scas add sahf cmp jae mov mov scas xchg iret jns imul and push add arpl and adc adc push jae or out hlt adc popf cs bound and xor pop sbb (bad) mov leave sbbb xor jl bound bound inc hlt xor aam aaa dec stc dec fs movsb mull adc gs stos and (bad) xor pusha pop test inc jns ret and jl cld cmp (bad) lods gs xchg sti add dec test xor insl jo dec data16 cmc inc (bad) dec add pop xchg fadd dec dec gs pop mov test pop dec mov adc insb cs dec xor sti in lcall mov inc jg jecxz xchg cwtl decl cmovb outsb mov test or mov xchg sub jecxz sub icebp data16 pusha mov rorl cs clc hlt mov ret je push test sbb adc cli and shrl add (bad) push pop push mov jg adc dec inc loop jns movb sbb out mov inc movb (bad) repz jb out jle stc push pop scas gs push cmpl or pushf js out or jmp inc (bad) jo lahf enter cmpsb xchg add (bad) test imul jge in lock add in pushf imul inc push cmp add xorb clc sbb sti sub push ret mov mov adc hlt mov aam fs data16 xor lods pop movsl les pop add (bad) icebp js xchg psubd imul or fistpll dec popa xchg sbb insl stos pop xchg xchg hlt jb or clc or sub sbb (bad) nop and and dec rcrl (bad) lds out stos inc scas and inc add aad mov ret adc rorb leave add adc lcall jbe sub add push jl sbb inc inc insl or jp int3 fs (bad) add and std out and sub in push lods lds and lret add sbbl mov add adc jmp mov add inc add (bad) or mov inc dec inc inc push inc inc xchg cmp addr16 cwtl fwait dec cwtl imul lods sub jns add adc sub adc add cmp or scas mov orl push add adc pop dec add test dec cmp push inc sbb ss es dec xchg dec sub cmp ds inc adc pop xchg cmp pop jno ret pop push adc jl cmp dec or cmp ljmp mov shlb pop out add pop movsb les push dec xor dec or sub xor push sub mov dec pop or push add sbb movsb cmp push xor push push dec sub and jb and mov aaa xor bound pop cmp push sub or cmp sub inc mov int3 add jl adc inc pop call sub adc jp and inc xor add xor push and and push sub pop mov pop adc bound sbb xor jb pusha test and add data16 adc xchg dec adc sbb push jl dec inc pop xor push ljmp dec mov push dec sbb dec dec or dec ljmp push adc sbb pusha dec outsb xchg outsb adc push lcall clc fwait adc sub push mov sbb scas pop xor cmp push sbb adc ds es rorb test ja or push jg ret mov insb and add je pop decl pmuludq test cmp push push (bad) lock cmp outsl mov mov dec fild adc hlt pop cs leave rcl lds push mov push add fs mov mov sahf adc lds or sbb ret xchg int3 jmp add test repnz xlat xor pop jl (bad) and jns add inc (bad) xor (bad) in xor loop push xchg add or inc inc imul in jbe insl push imul cmp hlt xor adc adc dec jg and pcmpeqd popa addl jnp jns jne mov dec mov daa insb rolb sub push push adc jl xor push inc shl hlt lahf and xor pop test test sub push mov negb rorb fsubl and inc cld popf mov icebp mov xchg cwtl or inc mov sti jecxz repz sub stos sbb sbb xor icebp xchg stc xchg test andb xor dec (bad) hlt inc mov je rcrl pusha jb xchg sbb ds xchg xor and cmp je sub jbe xchg and sbb xor mov dec cmp jb and imul push adc sub aas ja ret call jecxz je cmpsb clc into ret cli sub movsb popa popf add mov dec jl ret mov add out lock cld and inc hlt mov push add loopne testb (bad) in jae leave xor pop add and mov jne push jmp sbb xor nop mov sbb cli rcll pusha je jl inc (bad) push test push cmc inc stc jg pusha sbb xchg je dec adc mov jge outsb xor nop aam (bad) mov and sbb cld (bad) int3 dec int hlt mov clc or xor xchg fs cld stos loope inc mov mov lods lahf das mov dec inc imul mov mov or sub icebp ret adc xor pop es int3 jle pop lahf add cwtl negb fdivr adc pusha ret rorl loopne xchg mov lock mov ffreep mov push inc mov sub xchg je,pn fwait mov es repnz adc xchg xchg pushl pusha mov sub ds sarl sbb or (bad) cmc cwtl adc jl pusha ds dec adc dec imul and or stos je scas pusha sub or (bad) push cmpsl and jmp add or xchg call iret or mov dec push fwait sti out pop mov into add xchg fs stos fiadd jnp or jmp mov jbe loope pushw adc xchg stos and xorb (bad) pop dec test pushf xchg idivl inc push inc stos sub ret mov imul jg xchg xor cmc cld test int pop je cmp cmp cli sub scas jp xor sarb pop sbb sti loopne cltd jmp loopne dec push dec jle cmp sub push sub push sub stos sbb inc mulb jp xchg xlat outsl movsb fstpl lahf scas data16 mov adc stc mov (bad) arpl dec add adc sub movsb lods and in dec int3 or ljmp or hlt call je iret push and lret (bad) jl mov xchg mov adc out dec inc loopne test mov jle aas (bad) je mov inc iret cwtl loopne out jl xor clc adc dec sbb mov cmp scas movsb cwtl inc cmp mov inc imul jl fs add test or stc and cmpsb sbb hlt (bad) std dec dec sbb add test (bad) jg xchg pop lcall movsb pop rcrl nop je divl lds mov sbb xor inc out mov mov es inc sbb jecxz jge loop push inc (bad) sub and popf mov and dec negb in lcall sbb lret je aad subb js jb inc clc je jnp pop jne or rcl sub stos or dec cmp add in xchg sbb js fisub add inc test sbb sub rcl (bad) dec stos outsb xchg rcl add mov cmp pop (bad) (bad) pop dec add test (bad) hlt add mov movsl aam or sbb inc cmc jne (bad) xor sbb in or jb adc xchg jle dec jle inc int3 cmp pop dec mov xor (bad) dec jecxz lds enter popa sub sbb mov (bad) int3 pop iret mov dec push scas (bad) dec push inc and xchg (bad) ds xchg lds aaa insl test inc sbb inc add xchg lods ret data16 or mov repz sub outsl imul cmp jno jne dec cli movsb xchg add fwait xchg jl add out jl add insl scas sbb lahf jne mov out notb test xlat sbb push rcr push add pop add ret ret (bad) mov jecxz mov xor pop stc stos adc aam xchg cmp and jnp jmp in imul jo dec in xor add cld xchg push (bad) (bad) jno mov pusha decl arpl lock jb jae or int3 test xor cli daa movsb mov jg (bad) insl sti jmp imul or cli xlat xor add inc mov sub pusha jbe dec out add imul ficoml jmp inc mov int mov or js fcomps test addr16 pop mov cltd cmpsb adc xchg sbb cld je xor xor jnp mov das add and mov test cmp inc mov ret jne shrl addr16 inc xor jecxz out movsb adc push bound pop imul (bad) jno dec (bad) mov imul scas or rorb inc or ljmp test inc dec ret repnz push gs mov cld lahf sub mov jp jnp loop xor sbb cmp aam outsb jns lock jle mov lea in aad jecxz bound hlt xchg dec cmpsl add cwtl cld inc xchg jnp adc or stos in add sarb add jae inc inc les push jbe pop jb rcrb in pushf mov sbb push (bad) dec fadds xor mov inc pop lret sbb loopne cmpl pushf mov adc je dec out jne test xor or hlt js je or imul (bad) int3 bnd xor xchg sub lidtl hlt (bad) bnd add into lods jns arpl mov rol inc ret test lods fwait pop in shrb sub insl add add stos and dec test sarl les jns dec push fmull cld jecxz jmp into imul adc imul jb out push lahf push icebp mov (bad) xor add cli inc adc dec xchg movsb or (bad) xorl mov jb jl jnp xor xor fwait cmp enter repz mov xchg insb sbb adc cmp mov mov xchg jno or mov enter jb sub je mov subl push fmuls pop xchg xchg addl (bad) sbb aam sar jae fisttpll and jl pusha je mov in pop xorb sti mov push outsb cld inc stc push dec cwtl xchg jg jo sbb add arpl (bad) push aas mov sbb xchg cmpsl hlt and mov nop sbb imul ljmp sbb enter adc je outsl in jmp jge mov cld sub enter jecxz xchg test push mov mov jbe add mov mov test dec dec mov movsb aam or push inc push icebp mov xchg xchg xor ret aad int pusha dec es js setl mov or bound adc jno or lret sbb rclb add jae mov xchg and jle icebp movsb and iret into leave dec nop xchg xor jg aaa test sub mov lret sub cs dec push push out fwait mov fbld test mov cltd jmp xor adc mov (bad) jp mov aaa sub pusha loopne mov cmp out xchg or mov jnp mov add pushf sub jmp sub stc adc nop fs jae ljmp inc dec cmp dec sub (bad) out or imul inc mov and orl (bad) pop pusha push mov pop sarb xor add fwait leave test jecxz push out mov les lds int jnp add aam and pop (bad) mov cmc (bad) jmp nop dec mov mov insb hlt repnz xor je jno (bad) movsb ds rorl mov fidiv and adc cmpb call dec subb jge inc or xchg imul imul js mov test xchg fwait lock xchg dec scas xchg arpl (bad) xor pop (bad) dec int into pop iretw sbb adc (bad) inc (bad) lock test sbb jae test push fdivrp je and sahf dec or cld mov cli jb cmp fdivl inc sub mov es ret nop test es cmpsl test lret mov xor fsubr (bad) sar fsubrs insl repz mov or test xor push xor push xchg and roll leave cmp mov bound sbb mov fisub rcrl sbb inc lods cli inc arpl push aad js rol outsb pop dec mov pop pop cltd bound cli add xor add bound inc add jb insb adc (bad) je fisubl adc dec fildl out icebp enter je and fucomp xor pusha pop repz and int and mov out jp inc and sub in popa mov dec test ss inc shl bnd iret and fadds int ret data16 int3 mov adc sub adc (bad) inc arpl nop add cmc jg gs cmp loopne and test out sub pop rolb adc dec adc inc xchg in fdiv (bad) mov enter arpl mov sbb fldenv outsl inc jne test push (bad) mov loope sub (bad) lods pop xchg dec mov adc mov push jo push dec and xchg lods xchg movsl xor fsts push stos movsb sbb popa sbb lds or stc xor inc mov and dec hlt dec pop je xor in push mov sub xchg data16 jbe pop fiadd and inc imul movb test ret mov lds daa jns cwtl push push test add xor sub push or mov push das mov mov cmpsb (bad) add mov jmp xor movsl cmp dec ficomp xchg ret push arpl (bad) dec mov je push push test subl adc ret ret std lods mov stos ss mov popa bound divb pop out push mov adc hlt in adc aam sbb mov fild and movsl jecxz pusha fs ret xchg loope je xor scas sbb into nop pop sbb adc xchg fcmovnb cltd and dec dec and dec dec movsl push sub dec and inc movsl mov or jmp je es inc ljmp jg xor retw and pushl jle mov popa scas add int stos xchg ret je je mov push dec popa sbb mov xchg or insl fwait rclb mov sbb loope dec dec and bound or and pop sub adc jg fwait xor push inc add test daa nop mov push jns sub je sub pop jg movsb test ja aas pop xchg rcrb call adc add addb adc cltd ljmp or dec jnp lock nop inc xchg fimull shrb adc test xchg xor shr leave in dec push pop mov adc sub jg les or cmp cwtl test dec call subb bound lds push adc inc push jns test decb jnp,pn shlb adc xor jnp push int3 xorl cmp xchg ljmp inc fldenv cmp cmp fild (bad) sbb mov dec fiadd jbe push repz sbb jmp subb inc daa add inc sbb dec leave jp rcrl mov adc mov fs dec pushf imul or adc add adc lea scas movsb lods or add sub and in adc mov lds and xor das and out mov cltd nop pusha ret push pop cwtl test cmp or mov mov pop sbb popf addb push mov push adc push cmp (bad) pushf push cmp mov dec int sub fnstsw (bad) push test and sar xchg adcl sbb shlb xor sub les inc lret mov test push cmp xor jns sbb stos and xchg and les jle dec in fimul aas push cmp (bad) movb lahf movsb lods das adc pop cmp adc sbb (bad) int dec ja push (bad) hlt mov push sub add sbb jp dec sub cwtl in xor or jns sbb sub push cmpsl add jp xchg stos into xor (bad) sub (bad) lret xchg scas fs jmp adc and pop inc inc push sbb dec insb pop cs jg mov push ret add aam jne (bad) iret add (bad) push add cld bound jg je (bad) fistp add push add xor pop je addr16 inc insb xor cmp push xor inc push sahf adc inc cmovo add and call and add xor loopne pop lods mov outsb cli push mov loopne and and jnp add jle imul sbb lods dec js mov movsb adc mov add and push mov add jns das jno imul sub orb jae adc sub fisub inc repz push popa sbb neg xor div pushf iret push pop inc sub (bad) pop pop out sahf adc push fstpl or mov pop xchg sub adc sub lods adc push adc es fwait mov adc sub rclb fbstp insb call add jl and mov sub adc xlat sub fxch mov add jne mov stos or dec nop cmc hlt gs test test dec inc fbld orb loop arpl jecxz lods lds push or inc xor addr16 loopne mov outsl mov insb sub loopne pusha sahf xchg ficom or add or outsb (bad) pop sub or lods rorl je xchg loop stos dec fwait insb popa popa and jl and insb sarl fstpt hlt (bad) jb dec and imul sub sub or mov xor das pop jae and and inc cmp lds pop sbbb xor mov adc mov in inc pop sbb and jae add mov jae ja leave xor sbb sti add inc pop ljmp add cmp jmp push je or adc out fstpt mov hlt xor test (bad) lds (bad) mov xor fmul add add and ss je xchg enter add ljmp xchg sar xchg push mov leave pop push and movsl leave jl push mov into inc fstpt pop test mov pop movsb mov push incb inc mov aad (bad) scas leave or clc xor inc adc shufps repnz inc cmp jl xor test popa or or jnp push inc cmp pop pop sbb scas inc pop sbb or pop je imul stc movsb test push cs iret or add sbb xor xor push sub jns xor add loopne inc jne or sub push je or fsts hlt add add xchg cmc mov pop hlt pop xor dec stos rorb inc stos sbb xlat push sbb int movd rcrb movsl dec jnp or mov lods mov xor mov movsl lcall and fldenv lock xchg loope int or dec mov mov jmp lahf xor cmp hlt sbb je xor sbb daa lds sbb repz adcl in mov inc cmp mov cmp xor xchg fdivp mov inc imul jns es (bad) mov cld popa (bad) add aad mov movq hlt rcr (bad) mov (bad) fcoms inc pop adc and test int3 mov test adc and xlat in dec stos scas mov js es movsl jne jge movsb mov cmc fxch push popa xchg scas adc adc sub sbb movsl call xchg xchg sub hlt std cli push pushf add sbb out std data16 setg adc adc inc pop fdivrs or mov and xor sbb mov cld hlt dec movsl or cmc lds lds inc test movsl push rorl sbb sbb js or out mov pop adc fidiv mov mov cltd or push adc or jp je sbb mov in push test adc sarb ret lcall add loop (bad) xor or dec ret add adc dec push in add xchg cltd mov fucomi xchg add nop ja xor xlat (bad) push das xor lret dec sar add in xor push jae ret fisubl pop mov sbb lret push test repz mov ret pusha push pop xchg lret sbb adc sub loopne push xorb cltd xor movsl movsl jno sub aam add jle adc or pop jg popa add dec ret pop mov mov sub fbld fsub sahf sub xchg dec xor daa ljmp sub lods je pop testb scas lret sub mov stc mov inc sub sbb movsb movsb or in xchg les and sbb adc daa fcmovb xor cmp fs js xor mov xchg add add stc jmp (bad) sbb and push mov mov push mov (bad) xchg popa push scas adc dec aaa out mov xchg test sub xor mov fwait mov sub adc xchg adc xor add bound hlt pop lcall sbb mov adc movsl iret sbb pop jbe push fistpll cmpsb inc cmpsl fwait xchg in push adc or aad mov movsb adc and push int3 jl int3 dec (bad) je and aam imul jb push pop adc push (bad) xor fimul mov add sub cmpsb sbb jecxz xorl addr16 mov sub and aam enter mov arpl cs loope or dec push pop ficompl shr (bad) ljmp loopne les mov sub dec int3 xchg cmc fwait push add pop (bad) int3 cmp xchg cmp pop roll bound or cmp mov push stos mov hlt sub pop xor sbb push dec icebp mov push test ss add (bad) rclb andl push jmp test push add mov lock mov fadd (bad) push mov jnp sub xchg aaa dec dec call pop imul invd fsubrl xchg pop jle xchg push fcoml enter jmp call hlt xor sub inc hlt les dec mov mov jg xor cmpsb movsb (bad) pusha xor sbb gs cmp loop xchg cltd insb repnz fisttpl lea cli xchg xchg sahf popf fucomp cmp cmc ret jl movsb xchg sahf les cmpl leave ret hlt (bad) mov push mov push add push daa das fs lods lds arpl jmp xor (bad) xchg repnz cmc cltd sti mov or mov (bad) stc mov jge and fs jb mov aaa out lret aas sbb add jno arpl push stos (bad) adc call dec push repnz push inc rclb add jno mov and adc or jg sbb or les movsb (bad) jbe add mov daa dec test xor movsb movsb fadd je frstor sbb sbb xchg movsl adc lret shll jns cwtl sub (bad) sbb icebp ljmp sbb dec popf test hlt ficom movsb (bad) cmovns test loope mov inc sbb cmpsl insl adc fsubrl out inc sub or fwait xchg (bad) popa jnp rol int dec shlb bound mov sti push addr16 mov mov inc jbe cmc cmp and test jnp jne negb arpl dec or or adc or psrlq les je aaa sub add mov adc lods addr16 push dec lods out or inc outsb testb mov hlt iret pop xchg ficoml push shrb bound es test dec loope or fidiv dec dec lret xor mov adc jno andl cmp xor push cmpsb dec mov fs fmul leave shlb ljmp add fstpl dec inc and movsw xor scas in mov repz lds add push addl add stos xor test loope dec data16 xchg je and inc test mov mov push sahf outsl test mov mov push push jg and dec pop inc iret xchg adc inc mov popa call push fs mov and inc push (bad) cmp add or (bad) rcrb and sub add dec dec push iret xorl sbb pusha repz (bad) push sar sti mov xor hlt imul xchg (bad) sub aam repz addr16 in mov insl pop movsb add std ja std fldt dec xor je xor lods fstl lea xchg in or je scas pop mov and fldcw sar shr adc repz inc add cmp add arpl xchg pop pop xchg inc pop scas (bad) retw adc mov sbb mov pop sub mov xchg mov mov nop (bad) adc hlt pop pop add and and pop into push mov pop (bad) js rcl mov popf insb dec mov cs pushf dec push push std icebp hlt inc fildl cmp xor ret push (bad) pop fs add and test push aas shr xchg clc mov adc jns pop data16 pop lods push pop xor int lret movsb cmp (bad) hlt (bad) (bad) lds adc aad inc mov sub leave pop (bad) rorb adc dec adc adc ficom sub inc mov pop nop outsb inc xor push inc push and sbb push ss fmull inc or movsb or adc clc inc sbb push cmp push stos sub mov fimul xor lahf sbb xor fiaddl (bad) and dec cmpsl inc pop les fwait (bad) dec add je dec jge fisttpll push popa in faddl aas lea mov ds xorl inc hlt (bad) and (bad) push jno fs cmpsl nop mov loopne clc dec xchg sbb adc xor cmp jmp in inc fidivr dec clc sub bound jp iret add rclb or loope inc lds fdivr aad clc push imul in push mov je cltd imul stc ljmp or add mov xchg data16 int or insl jae push je cwtl xchg adc sub fsubrl test test fs fisttpl sbb and cli inc cmp xchg or mov or xchg int3 pusha dec and fs push sub movsb push test dec mov cmp je sbb sub xor or clc mov and or cltd cmpsl mov sub pusha xor (bad) mov mov or push pop mov stos or add mul push push in cmp sub jns add add pop and stc sbbl xchg fs xor sti dec inc adc pop lods adcb push dec cltd xchg hlt mov leave push (bad) je inc outsl push arpl xchg add cmp dec xchg or and aam sub in lret push out mov sti aad mov ss lds jae mov sub push or xchg inc inc or cs rolb sbb adc or fdivrl divb pop pop lret add sub das (bad) fild hlt xchg push xchg inc out scas test or pop xor inc test inc or push adc int3 and xor push mov daa and mov ret sub in in fisttp aas or sub pop fildl sbb xlat shrb mov add xor jns dec inc xlat test stos xchg push cltd xchg sbb (bad) mov pop mov mov out xchg pop in sub dec sbb arpl sub or or sahf cli movsl andl dec cltd loopne lret int3 or loopne pop adc mov fnstcw add sbb je in pop sbb dec push ficoml xchg adc or dec nop movsl imul stc fdivrp xor mov mov or scas push test fnop add adcb hlt scas cltd mov jne push mov and fidivr dec jbe mov mov mov xlat cmp imul xchg push dec imul jnp into bound (bad) mov ret push inc jns jae cs xor (bad) sahf cmp popa xor sub or insl mov sti add sub (bad) je push or stos adc sub test xchg call test rol add imulb push push test xchg inc xor or inc push jns sub lret test ficom pop test adc es mov inc sar xchg add xchg lea and imul aad adc stos xchg popf adc xor dec jg pop push push pushf dec bound sub lret ss pop sbb jbe pop add subl lret xchg arpl add mov push cmc xchg inc ljmp out cmp push hlt jns jnp jo xchg stos push pop cmp ljmp jge sahf add in jnp lahf dec movb xchg push outsb ds xlat aad call sub mov fildll popa cld scas xor xchg and pop dec (bad) sub insl int loop mov mov jle inc inc push push add xor sbb scas xchg data16 je notl (bad) std lahf mov hlt (bad) pop add fist outsb dec dec movb push sahf jge dec mov fs jecxz popa inc add add push dec dec (bad) jl xchg push inc clc stos xchg clc sbb adc and xchg add roll int insl jge adc cmc lds decb loopne jecxz add lds movsl fsts add jns mov cwtl popa sub push sub add pop clc hlt xor xor mov or fidivr cwtl add push fistl xor das adc aas jg in and aad ret or fwait add loop movsb subl sti lods mov push and dec aam add pop (bad) stos movsb jo sbb fmul and jns cmpsl xor xchg scas lds mov cmpsb adc fs int3 add ljmp scas and aam into or add sub or cmc sbb inc inc test inc adc mov into dec mov push cli xchg dec pop or push pop mov dec sbb or mov or es and ja ficomp shll adc (bad) or inc call ret and xor and (bad) adc cmpsb pushf adc je mov pop pop and sbb push sbb dec jae arpl (bad) xor cmpb and push pop add xchg or (bad) jne mov push and sub inc enter test out xlat xchg insb push pop xchg je ret and pop cmpsl pusha loopne xor mov add enter (bad) fdivp aas test jmp add (bad) push ret add push into xor les out push xor setge mov jecxz and imul adc in bts ljmp lea inc and sbb ss dec xchg je test (bad) push inc mov das lock pop sbb lret push pusha mov icebp jae cltd out fimul lock add dec add xor jns or xlat (bad) (bad) push push loop jbe orb enter add pop mov test xchg and mov inc test dec and xchg and mov xor add fcoms add ljmp iret add (bad) push sub sub and divb mov fnstcw movsl cmc jns cmp cltd jb or inc fsub inc inc xchg push jno and (bad) scas jp ljmp cwtl adc sbb data16 xor outsl addr16 je pushf xor add das rcrl push cmpsb imul xchg cwtl out and sbb out mov movsl aas add ja daa pop hlt lcall fsts hlt dec sub sub outsb lock adc adc jmp push add je xchg dec sbb mov scas adc jb xor in xchg jge std inc out fstps fisubl fstps outsl pop or (bad) pop and cmp lcall into out adc clc jno dec xchg adc and outsl movsl cmp or or mov mov je jg mov into pop push leave lods xor mov adc pop in and or es push jg mov lds or jle push not and inc movb test add fimul shrl dec inc add rorl je add lcall fstl push cmpsl cli jle aaa aaa enter test shll jg dec and call push or xchg cld mov lock jno lret call jno xchg les sub stos pop dec adc ret mov add push or xor adc loop (bad) fsubs jno mov subl cltd dec outsb sub cmp sahf aam add aam in scas pop repz add ficomp mov fdivr and nop xlat ja cmpsl ds je popf leave movsl pop jl sub out dec push cmpsl scas add scas hlt sub or jecxz lret jns sbb out cmp lret and in xchg or cwtl xchg cmpsb jbe inc pop sbb dec popa pop push scas push dec xchg hlt lock xchg ret sbb xchg loope dec enter mov pop int mov mov dec pop movsl stos inc pop sub popa lods (bad) flds sub push mov cmc call scas dec ret adc test fnstsw enter mov push push inc aas loope sbb push lods cmpsl adc xchg and fsts cmp adc es leave push pop push stos imul cmp and mov cmp dec mov and jmp jnp adc scas push arpl mov jnp popf pop jecxz add inc je subl or lret leave loope daa in add mov cli xchg mov cmc adc (bad) jbe mov in mov xchg cmpsb jecxz jle jp test ds adc xchg mov jbe call leave enter xor sahf add aad hlt into sbb aam sub fcompl les scas int insb sub inc test ss into loopne dec lcall cwtl pop std jo cmp cmpl std js lahf fucomi mov inc iret sbb jecxz cmp test mov adc outsl inc pusha cmpsl jecxz inc dec lahf les push push adc lods mov and stos mov repnz sub pop stos adc xchg xor sbb cmp sub jmp cli fxch daa nop push mov test or int3 pop mov or xchg sbb and ljmp dec aad lret test cmp jecxz xor cld xchg adc test je cmpl sbb dec xchg xchg or rorl inc pop push sbb xchg push xchg push push es pop rcl push push add inc dec inc rorb mov or add es cmp pop roll hlt in cmp sbbb (bad) xor pop xchg fcomi xor xor imull mov or add aam jae ja and es je xchg ret cs sub sbb push ds (bad) mov in cmp xor sub enter inc pop xor (bad) hlt loop out add negl cmp and je lret nop mov adc mov sti xor inc xchg inc xor mov adc rclb out and mov pop xor dec hlt xchg xor aam xor pop and gs movsl xor inc int jne adc jb mov or xchg aaa (bad) sbb sub lods lcall inc xchg sub pop jmp sub add test xchg mov das gs xor cwtl pop xchg psubw and adc repz pop pop dec rcrb sub mov xor int3 inc jo in and xor xor hlt (bad) jb dec pop pushf mov or popl aad aam push (bad) fldenv fstps sub or xchg sbb mov adc ret pop dec fnstsw test dec mov cmovo call pusha scas jae testl xor push les xor scas adc fiaddl int3 and or les repnz std insl rolb mov jnp mov pop xchg sub ret lods dec jnp xchg mov lret fs or stos sbb mov fstl cwtl dec sub xor aaa pop lret ss or je movsl or subl xlat and mov (bad) xor or sub jecxz push push aas std dec fsubp or test and popf daa test mov int sti add repnz add dec jnp mov jns (bad) mov jg and or je aad imul imul inc (bad) fwait lds dec dec xor cmpsl lock ret enter add push ret (bad) push adc dec rorb inc xor loopne movsl dec add in repz dec push (bad) jmp pop xchg repnz fmull sbb push mov jp sahf mov dec or mov push push xchg push jg loop dec pop imull mov lods test dec add push inc ret insb clc push sahf addb or xor mov jle xchg ret (bad) test shr jle dec push pop (bad) mov or pushf xchg loope push jecxz popa ss mov fidivl xor leave rcll dec invlpg xchg movsl xor cltd sbb dec fwait adc mov out test mov mov mov sarb xor jns xchg stos inc pop jbe int3 mov sbb or xor and or pop xchg adc enter mov pop outsb enterw hlt xchg ja pushf mov int3 test or das push imul aaa sub xor mov je or loopne pop sarb mov fs inc cmpsb imul adc cmpl addb adc cmpsl pop aam shrb test hlt test push cmp addl xor inc movsb repnz pop sbb adc dec adc xchg loopne xchg lds mov or loop dec in dec cmp and sbb ja dec lock bound inc sub xor xor (bad) dec lods jmp (bad) jl xchg stos mov jge gs test dec stos je imul push pop cmp testb jp pop andl cld movsl inc out je adc loope cmp ficom adc xor ljmp add fs dec add sbb mov dec je jmp push dec lods add in mov jno aaa mov sub cmc hlt test mov aas ficom aam bound xor pop ret and imulb cmpsl sti and cmp je (bad) nop dec pop int adc inc pop lods ja mov es or loope xor mov icebp and jnp hlt or push inc push out pop ja xchg and xchg xlat ret jb into dec je,pn daa test loopne stos (bad) mov (bad) imul inc loopne sub movsl mov xchg ss cmp pop fs push cmp fsubr or frstor adc lahf hlt (bad) lods out sbb jne aad and ficom push or jno jb stos sub add add pop in mov stos es dec or add repnz ja cltd inc lret leave xchg subb sub dec ficom hlt dec mov jecxz les sub mov adc into ret mov pop push js mov pop out or push add fdivs dec push outsb ds stos xor jle je movsb adc roll and nop (bad) pop int3 jbe mov or and repnz fdivp test outsl (bad) ljmp outsl (bad) xor inc xlat pop bound pusha cld sbbl mov shlb and outsl pushf aam lea pop xchg xchg test adc (bad) (bad) xor push xor cltd in add aas xorb lret or insl rorl sbb fwait and aad incb mov xchg inc nop sub imul push pop lret add sub and outsl jo xchg pop add dec xchg je and sub xlat pop imul hlt cmp jle les and sti les jae je adc xor ret sbb arpl pop inc push lock not pop test dec push (bad) pop leave xor push rclb fisub cli pop jo lcall jge orb ret out xchg test sbb add mov or xorb (bad) push sbb dec mov push hlt out sti mov jg jae push cmp mov dec pop push mov xor (bad) test repz sbb hlt loope or add add adc push ret push jnp fs pop dec fisttpl je xor ljmp adc sbb xor (bad) (bad) je jmp or jg or movsl xchg je and xchg add rol pop repnz imul mov dec jnp imul xchg jge dec rcll cs lret bound xorb in hlt mov imul sub adc cwtl push lds mov pop bound lods push test je mov mov outsb mull and push fcmovnbe call movsb add inc adc xchg lods test jge enter jl js adc or add jb xor out scas cmpsb lret jmp mov lret in fiadd fadd mov dec je adc adc inc xor lcall dec outsb mov fcoml out mov fisubl xor push insl jae pop pushf in mov pushf dec add neg fwait or enter xor xchg das addr16 push sub shlb aad inc sbb leave add inc add fdivrs adc hlt movsb push stos xchg xor lret jl mov add jmp hlt sar les cli mov aad aas push imul mov iret mov mov hlt xor std mov pop lret or test xchg ja xlat fdivl call outsb aam les push adc enter inc lds xor inc jmp rolb xor pop lret mov fs sub dec mov add push add js and push mov xor je pop push stos push out cli inc pushf sbb test sti imul cwtl xor xlat nop ds outsb jp sbb in lods fsubrl shlb fwait add leave xchg into dec insl and les jge jg push cmc mov jns movsb fldl (bad) imull sub pop xchg test add lea jle and push adc push fmuls adc (bad) loopne pop fcomps fistpll sbb or push adc add pop xchg dec fildll lret and clc adc jmp xchg rcll lahf jp and jo push xor push das cli nop (bad) push dec sbb push and hlt mov inc xor aaa test test inc and adc hlt sub inc inc es iret sub push mov cmpsl mov and std scas xchg jmp stos inc mov popf test stc xor shll xor sbb cld add arpl into or test in dec icebp das push push pop popa hlt in or fcompl lds (bad) adc roll xchg mov push sub in mov mov jae enter xor mov hlt je sbb test dec mov adc sub cmpsl orl test mov mov dec cmpsl jo fsts mov nop sbb fs movb cmpsb mov hlt stos sahf jo cmp fisttp lods dec and flds icebp mov cli xor adc pushf repz movsl xchg adc xchg xor add add je xchg bound add mov mov hlt das push fsub sub mov add mov jl je imul mov lret jecxz es xchg cli jle cs (bad) or push mov dec clc and sbb pop sbb (bad) adc faddl adc into cmp xor jo in mov in repnz shrl js mov adc or pop fs adc pop and es fbld dec hlt dec lret cwtl popa or mov out pusha (bad) cmc sub iret and mov or xchg push out add in xor dec lret sub and dec push xor jmp jae test sbb out lahf (bad) xchg sbb aad inc iret stc ret dec dec jecxz xor sahf and jae jnp je fs fisub xchg add jne xchg sub (bad) dec fwait and (bad) and in xor pop xchg jg sub scas or iret es sbb inc pop or jae rcrb dec popa enter mov cmp dec stos jnp mov dec das fcomip xchg arpl pop inc dec jg or and fldl in nop mov adc dec fstl add test incl mov inc aas (bad) out es adc jnp jecxz int adc xchg mov jle xor int or hlt stos inc hlt cli jmp scas inc dec xchg in jbe push inc hlt inc out fwait icebp xor lcall add sbb outsb in pop mov xor movsl jae adc out or into sub cmpsl sub mov call std imul inc sub call pop xor decb pop pop and dec aad scas sahf jo xor imulb sub jecxz xor (bad) sbb notb sub rcr jmp add subl or dec push inc push sbb or fstpl loopne dec mov pop xchg ja icebp sub or stos bound xor pop or dec jle jne es or dec jp add fchs push jl push xchg loope mov ret lds push imul clc pop cmp sbb imul mov ds rcr sbb mov rcll (bad) xor icebp mov ljmp sbb sti push mov cmp or scas movsb mov cmpsl xchg and test push cld je cmp ja lock dec adc xor add ds (bad) ds pop mov inc xor cli inc js test call aas fstl std sbb repnz mov inc int3 stc stos movsl fs lock inc cmp out nop in sub mov (bad) mov sub sbbl dec (bad) or or mov je jnp pop add push lcall push xorb div mull test les loope lods xor ret cld daa mul jbe xchg or pop popf das jmp and cmp and in inc lret jnp test mov and lds sub stos lret xchg dec and sub movsl push cmp ret in push je sub fimul test mov xchg jge inc rorb cmp ret pop aad lock outsl imul mov xor lret or inc inc push dec dec jbe fdivp rorb dec add into je lea xor (bad) inc dec pop xchg bound ss adc or (bad) xlat adc pop xchg dec dec mov mov xchg sbb mov add xchg loop loope les xchg dec cltd cmp mov cld jae sbb xor or push enter mov xor xchg jg dec scas call in test xlat shll or push or cmp push jnp cli test (bad) decl xchg jecxz jge fwait and ficom lods gs das imull and inc es jl pop add mov psllw add js inc mov scas pop cld mov imul test mov jg add mov xor shll lds cli pop jl jno imul fs mov mov mulb popa mov arpl xchg push je in xchg adc int3 in jnp movsb loope fstps mov es ret ss mov cli sub jp fdivl ds push push dec dec bound xchg sbb xchg push pop mov mov and xor push shrb dec mov mov (bad) in dec cmpsb push enter test movsl shr and hlt xchg dec add and pop sub inc jl in imul out lds and aad sub ret jo add lret arpl pop shrb sarb das dec (bad) mov or je (bad) out inc xchg xor sub das pop data16 or inc cmc and hlt loopne das add mov out pop cld hlt mov dec push imul ljmp mov mov mov int3 pop mov lock pop xor pop sbb pand js dec mov mov (bad) mov add push add xor mov mov mov in xor sub insb in (bad) jecxz pop test xor jge sbb sbb outsl fucomip clc das mov popf pop nop xor mov xchg push sti and aad cmc mov (bad) mov (bad) and data16 mov cli mov mov mov movsb pop test lret cli inc pop std mov dec daa add negb inc pop or (bad) hlt and ja xor push jle dec fbld jecxz add rol ret jle jo jnp inc lret pop and xor je push or or popa mov inc les xchg bound xchg jg cld push cmp movsb push add xchg mov sarl add dec dec in je ja mov sbb (bad) iret in cld xor gs popa stos adc or fimul fistp xchg sbb and pop xlat data16 ds or lock xorb jp lds lods fidiv aad je js int jecxz sbb fisttp les jmp in sub aaa jbe xor sahf sbb pushf in push xchg jo subl xchg or inc sti mov decb in mov mov xchg in pop fucomp cmp xchg out icebp mov stos push jnp mov (bad) push push inc mov jle mov xchg hlt les or and imul add sbb into push sub xorl jp lock repnz xchg ljmp fldcw xchg lahf cld std aas jl push and in adc jno aam xor fidiv hlt daa leave ljmp adc je pop xchg inc or cld test adc add inc pop xlat dec jo ficom addr16 sub popa bnd and pop xor xor inc mov add (bad) xchg mov outsb int3 and xor scas and fstl jbe in pop mov shrl push imul mov dec push inc lret push test ret mov (bad) lock repnz hlt jmp stos pop repz lea popa iret in lods shrb hlt repz int add sbb sti or add int xorb pop fstpl mov fs xchg rorl aas daa jns add enter gs or xor mov insb or stos add in (bad) fisubr mulb push pop mov add jb (bad) into adc dec jg cmc adc hlt (bad) fstpl xor inc lea das out cmp cwtl dec jnp (bad) ret leave mov das (bad) hlt sub jmp stos push dec push jl adc jl push repz ret mov adc aad scas dec sbb xchg pop mov aad aas xor es fistpll sub lods into outsl xchg add insl lock or sub lret inc sahf enter adc dec dec jns test and xchg dec sub sbb xchg ljmp aad loop push je iret rclb js cltd and nop push dec test sub imul push sti add or xchg ljmp and sbb shll es aaa lods push movsl jecxz movsl lret inc insb inc xchg pop add dec int add daa mov xor ret mov xchg mov mov and call aam stos add pop pop jge rcrl stc jl shrl popf mov std jle imul xchg loope mov inc into cs ficom jae in cmp dec je popf cmpb (bad) push ljmp adc pop ja mov add pop scas fsubrp adc xchg jp inc mov (bad) and ficom stc cli xchg or ret sti adcb dec mov scas adc icebp xor insl lret (bad) sti adc andb (bad) hlt sbb scas mov pusha aaa adc or loopne les sub adc arpl xor sub arpl cmp faddp bound das stos sub push dec add sub stos fidiv and je in jo cmc lret in or repz adc es and adc mov lcall dec add hlt adc pop and imul xor sub fldcw xchg and inc mov dec sub cmpsl lret std lods dec and hlt call ds push call fisttp movb scas or fbld out jb or mov xchg inc inc push dec repz mov pop cmp outsb mov out test jg mov das jns inc bound pop xor (bad) leave mov xchg xor inc mov add movsb xor stc lods in lock push pop loop xchg leave stc fimull or test xchg sub arpl inc xchg add and adc pop xor fnop gs inc stos stos test pop dec ret or sub test cmpsl add cmc xor xchg adc cs push into mov xchg sbb xchg test rclb cmp frstor test mov sbb aaa adc cmpsl or out iret movups mov in test hlt or (bad) je enter int3 dec movsb negl sub in mov add cmp dec sub movsb test and aam cmpsl stc push mov and pushl mov int3 dec inc dec jge jno jg mov (bad) (bad) imull lds test mov imul xchg xor xor ret (bad) std cwtl in xchg adc (bad) or dec insb push push and les cmp je mov mov into xor lret mov jnp mov sub ret inc sub mov or cmp and subb fstpt add test jne sub aas jle aam mov cmp add ljmp notb nop addr16 add jp lret dec xchg pop sub nop push es leave stos cmpsl jl insb cltd xchg mov xor in push fistl mov jecxz push dec repz mov hlt je jge pop push not mov das mov sbb push mov dec xlat adc movsb ds push lds cmc aaa sbb xor pop (bad) xorl or sub fdivl stos sbb pop icebp xchg inc or jle dec jl iret adc arpl aad test mov adc movsb mov test jge call clc mov pop pop test pop das adc lods jne push and push ret scas adc movsb call adc cld inc pop mov nop repz or fidiv es mov pusha push and out mov mov mov fcoms iret sbb pop or je cs and cmp rcrb test in xorb mov (bad) out pop stos pop xor xor ds cmp aad push ja cmp pop pop xchg xorl out mov cvtss2sd lods pop or adc inc jg mov in cmc and add xchg inc pop xchg jne xchg pop mov mov pop inc ljmp mov lret sub inc lret sahf out adc daa jb cmp pop lret sub lret movsl ret cwtl xchg shlb add test mov loope dec xor outsl mov mov adc arpl sub mov testb inc mov cwtl out (bad) mov and enter hlt bound sub push fistpll insb iret xlat je aaa add addr16 (bad) xor icebp je pusha or aas repz notl (bad) pop lret sarb stos and test inc loope insl mov repz hlt xchg div pushl repz inc sbb jmp fadd aam jge xor lds mov ret sbb fsts xchg (bad) ljmp dec cmp mov jmp aam out aad hlt cmp loop xor add mov mov push mov lds push jmp call fisub or mov ja push enter in jecxz mov pop sti jg andl leave push js xchg ljmp hlt fbld pop jb jne out daa gs sub fucomp xchg xor jmp test sub in sub mov iret or sub cli sahf sbb inc mov cli test leave xor in in jae imul pop xor xor imul and sub inc jno scas lcall ret pop stos and aad pop mov jns sub xchg inc xchg xchg pop adc fisubrl xor add ret mov pop cmovae movsl daa hlt daa stos pop rorl je add loopne mov xor dec rolb aaa (bad) adc sbb movsl hlt (bad) dec adc and fstps test and flds sub pop test cmp xlat popf push add stc adc xchg mov insl push sub js lds ds or ja dec hlt cli push pop fnstenv pop add fwait adc in add dec lret xchg sub scas leave xor mov rcll ret movsb clc adc imul inc xchg or shrl movsb push (bad) popl loop or and adcl jbe jecxz fldl out loop dec dec mull scas xor fidivr movsb mov sub scas or rorl xchg stos jns and inc hlt pop out pop rcr jle ljmp lea test xchg dec or lea ret adc rcll or sbb push add fisttp inc and jmp repnz aam mov out jae add in imul add sbb into and push jmp sbb mov add sbb cmp push dec test and push mov or inc enter jns in insl xor inc shll and mov mov push adc mov jnp fcomps xor pop cs mov sbb cmp xor adc xchg enter fnsave jmp int3 xchg add xor test orl mov cmp xor hlt stc cmp insl mov (bad) sti ljmp (bad) inc sbb add fs shrl lods lods dec adc sub dec bound push and lods js pop xchg push subb pusha jge je clc pop cmp fildll lret das pop movsl jbe push or adc (bad) icebp mov sub pop notl push sbbl mov jge and hlt adc and add dec aas xchg test xchg imul (bad) dec enter icebp dec pop aad jnp imul je (bad) push inc loopne hlt cwtl xor test frstor aas mov (bad) cmpsl dec xchg sbb mov ret pusha xlat arpl push sbb xor mov inc (bad) jl add lds cli in pop into arpl inc and enter adc mov mov cld lods cmp cmp sbb inc test mov ret xchg jno,pn mov jmp cmpsl data16 sub cmp lods cltd (bad) xor mov sub pop mov cmc test ss jae mov sub inc out adc jnp lret push sbb jecxz xor jbe mov hlt xor sbb pop xchg pop sti push jmp jmp cmc xchg and into int sahf leave pop push out mov daa stos jns (bad) jp mov cmc push fisub sbb adc mov jbe fldenv adc subb or test cmpsl and sbb aad mov or dec arpl hlt movsb in into adc out add jl pop ret icebp and cld fcomps stc xor push xchg ds ds or hlt or shll and stos xor (bad) jb lcall push in sub das inc cmp mov sub xchg xorb xchg sub lods cs std scas sbb pop pop adc and push add (bad) xchg xchg cmp push or pop in mov icebp cltd das lcall sub test repz add js cmp into jmp sbb (bad) sub jl mov cltd cld out popa or cwtl pop inc and xchg xor xchg data16 (bad) stos mov or push add adc (bad) pop jg mov pop icebp and arpl je fs shlb or pop sub dec xchg jnp xchg fs loop vcvtss2si fidivr inc jmp mov repnz dec mov xor or mov mov xchg aad fs jge inc push and icebp mov aad mov insb sarl test push test (bad) es aam test dec pop sbb xchg sub andl jno xchg pop scas out mov add mov mov mov push mov and dec test call mov xchg dec dec scas jno in test xchg mov std hlt fldenv cmpsl mov mov stc test hlt stos sub loopne or sbb jne jb test repnz or mov test or xor push jl adc mov je into mulb add adc clc and mov fcmovb push dec pushf test jne in cmpsb ja loope sub outsb push push stos mov push in dec xor or hlt das jae,pn push inc pop sbb pop repz mov adc stc pusha ljmp mov hlt xchg pop pop fsubrp xchg add mov inc fistp adc xor or mov pop (bad) push out aaa (bad) cmp sbb mov ret es mov loop fistpll (bad) sub fimul jmp xchg sbb hlt or rcrl or movsb cmp rcrb call inc mov inc xchg movsb inc (bad) xchg in (bad) cwtl (bad) or xchg stos push int3 loop jne call inc pop add xor movsl scas hlt or imul xchg cld add pop les add gs xchg mov or hlt std mov fistp mov rep (bad) je dec push add xlat in xor push dec imul movsb sbb jb adc sub inc jle sub enter in pop push inc cmpsb mov mov fs (bad) and pop mov popa dec push sbb cmovae mov adc das jnp sbb and mov mov (bad) mov cmc mov jne fwait adc jl into pop ljmp aad xchg mov dec mov aas push push shlb out push sub push mov pop xchg mov shr stos jbe into xchg sub jmp lret fiadd or sub mov jno inc je sarl sub in daa sbb xor daa sub in jo (bad) push andb je cltd es shlb aad je jmp jae sbb add iret cmpsl pop push (bad) outsl inc cmp out ds ret aad dec xchg lods leave or out push inc jae add jecxz dec shl scas es outsl fs xchg xchg arpl lock into xor adc dec (bad) in push inc mov nop icebp sub inc lods adc mov jbe,pt xor or cmp outsb and iret add orl addr16 xor popa les push leave sbb push lret dec pop mov xor inc test test xor fadds push (bad) mov arpl rol sbb pop ja std (bad) push xor sub mov cmp sbb es pop jecxz loop pop sub sarb aaa in sahf cld xor aaa sub xchg or test add leave xchg popa int3 mov stos dec jno leave jg movl and lds cmp gs fildl sbb xorb lcall repz push pushf xchg dec test jmp test out xchg adc xor mov hlt and push dec imul test sbb (bad) xor push aam mov pop movsl xor xchg scas (bad) jns leave jne popf mov pop in sub push pusha scas xor push mov mov fmull xchg je imul lcall jle mov test hlt mov jne in sub dec push inc js sti imul outsb and sbb gs lods xchg insb xor xchg push out adc insl pop leave dec dec sbb lret dec icebp les je pop push hlt in mov cmpsl jb jmp sub cmpsl xor jnp call push dec push icebp xchg inc fucomip push clc push xor push xchg xor out idiv loopne fcompl popf dec inc pop pop cmpsl loope inc push and xchg int lods aam lea or xchg cmp lret test mov xchg add sbb push (bad) stc test pop xor xchg and mov ret fidivr (bad) out stc test cld mov dec mov iret imul sbb stos xchg mov inc or loopne jne xchg lds leave mov test (bad) ljmp cmpsl lds cmp das fsubrs in sbb sbb ds add rol push sub add stos lds mov bswap or pop mov xor dec mov neg scas std sub (bad) leave and xchg fcomi loop test fsubl repz adc repz adc inc hlt pop cltd je push pusha stos dec pop call jle mov xor outsb adc cld inc daa repnz xor dec inc cwtl mov (bad) mov hlt rcrb push cmpsb mov test push sub fsub pop stos gs adc push xor mov xchg push xchg hlt ja push je in inc cltd sub xchg pop nop and and cmpsb push arpl xor push shl jl ljmp fild test push adcb ffreep nop push adc (bad) cmp call hlt fbld sub lds je jbe push sub sub aam mov xor sub dec inc ret int or hlt movsl adc stos inc add xor jge jne jns sub add rcrl adc or jne ja (bad) sub test je gs or pop xchg aas les jb add or mov int3 aas adc fidivl test inc clc adc or pop or jmp int inc sub pop cmp xchg movsb insl inc xorl scas mov jno push (bad) or fistp mov daa ss sub push enter xchg push movb jl sbb push test add xchg insl pop adc and (bad) add sbb dec mov dec mov sub mov in pop movsl lds jle and js (bad) jno add dec mov pop rorl sbb loope cmpsl into xchg xor add or add lret or (bad) push into add and mov push lods loopne lock xchg mov imul add mov sbb add push insb icebp jbe add dec (bad) jp sub out cld jno sbb fs push or and aaa ret xor adc popa push pusha mov data16 ficom xor mov das add cmp or repnz xor inc or cs add jae xchg mov add inc mov sbb mov and ss xchg out pusha push jp dec fiadd (bad) popa insb mov push mov dec xor mov aas and add loopew xchg adc rorl jo negl mov outsb add adc in jb inc outsb insb int3 imul lret test aas sahf inc addl aam add call loop add push jg add outsb and aas pop add popa punpckhbw addr16 test outsb push add mov daa loopne es jle ds sbb outsb pop adc loopne jno adc inc add mov dec call adcl add repnz inc jmp and push js pop or inc adc rorl ja stc and out in loopne mov xchg mov je dec mov outsb xor scas pusha outsb jne sub outsb dec xor sub clc dec jnp test test jb (bad) out stos pusha fmuls mov aam outsb outsb jo and movb popa add mov adc adc or mov jmp push ss mov jl xchg sub jbe aam lret push dec mov pop mov add pop xchg add and sub pushf imul repz jo pop pushf cmp pusha mov inc scas mov inc jmp xrelease jne sbb imulb dec mov daa add fwait adc test loope ja sub addl pusha adc addl loope xor bound mov pop idivl gs add jno sub xor pop mov pop add popa push cmp (bad) xor daa lock fldl add repnz adc pop mov and and jg cmp aas ljmp and repnz sub and shrl and pop add push cwtl push cs call shr add adc cmp add bnd add jnp inc or (bad) cmpsb push inc mov imul lock dec dec pop jge add push adc js cmp ffree or push mov idiv imul and popa mov orl aaa movsb lahf add fmuls scas push xchg xchg sbb and daa add lahf aam pop xchg outsl pusha ret push and mov (bad) rcl sub pop addb daa je mov out jns repz xchg jle add pushf jbe and aad fistp adc lret add sbb cltd push pop jle jp cmovo inc jne xchg idiv roll sub xor loop xor mov ja add inc clc or nop pop xor out and std adc sbb ret inc mov and mov mov mov mov or adc cld mov fiadd xor stc insl lcall stos pop lock (bad) mov movsb and orl addl cmc loopne or push (bad) adc cmp jle and or out fisttpll inc jg (bad) adc jae pop loopne orb std add pushf fldcw adc mov stc pop adc ret adcb cmp int3 std dec repz ljmp dec hlt (bad) and mov fisubr pop loopne fsts pop sbb jmp loope add cmp cs pop lret add lcall and mov mov test (bad) pop (bad) jge lcall scas adc dec mov repz add and or ljmp push jl adc (bad) and cmpsl jo and cs push xchg adc and fisttp jl mov (bad) andb mov test call icebp in mov jle fistpl (bad) jp xor xor repz push fstps jo jno lcall repz pop ljmp dec lds fisubrl dec mov add loope nop insb repz stc adc cmp arpl inc cmp and cmp fs add std outsl es add cmp push test addr16 add pop aam pop pop or jmp fimull mov lock das movsb and add fmuls cmp test jo xchg add adc sbb (bad) hlt sar xlat sbb jge inc add add lret or pusha lock and addb add mov pop sbb or pusha sti pop and add fstps fidivl and lcall inc call andl subl inc fsts addr16 ljmp subl push repz adc add clc and add (bad) mov or mov dec int mov adc fimull or (bad) aad and mov xorl outsb andl mov add xchg and inc sub dec adc jns and cmp push lods test sti add addb lods mov jae add jle pop sbb pushf cld inc fistpl push add call inc std enter jmp repz (bad) mov (bad) int3 pusha in pop movsb cld add xchg mov mov test push mov adc add pusha loopne mov or xor sbb imul push std jmp dec xchg cld pop mov mov or lret mov pop jne mov repz out fidivr mov and roll shld or xor add push jo int3 sbb jl adc inc jp push andl insb dec arpl sbb repz addb clc add add enter add pop dec std mov pushf stos add push jecxz dec lcall adc pop add (bad) dec popa sbbb sti inc mov andl movsl push mov test dec fiaddl addr16 push and add fwait popa push and cmp push and sub int3 int add pop mov or enter cld fimull sbb add popa xchg sbb scas roll repz push or (bad) sbb and inc into pop pusha cs jmp test adc xor mov jbe dec add add ja (bad) and or jb adc mov pop push adc jg fild sbb xlat pushf dec cs (bad) repz out shr rorl decb jb sub add out jg mov loop mov mov repz dec pop repz mov add in dec popa pop jnp imul repz add es add dec or push add movsldup mov rcrl loopne int3 out ljmp inc repz mov cmpsl xor sbbl scas out (bad) push jno stc mov jl adc or dec jae and std (bad) lds jno pop add mov pusha inc addl hlt cmpsl push fiaddl mov mov push int3 std xchg xor pop cmc sbb (bad) repz xor hlt add inc sbb jbe jl mov shrb repz mov and jne jmp pushf pushf pusha stos push movb pushl pushf lea jmp push lea push cwtl movl not movsbw lahf not lea pusha movl jmp push adc and inc mov js (bad) ss inc pop xchg out popf (bad) xchg int3 inc pop adc jne lret test mov xor cmp test push lea fldt mov dec sti (bad) lock (bad) dec hlt xchg loopne iret (bad) pop xor movsl repnz and mov movsl (bad) jmp out pop out jle jecxz cltd cmp cmpb call int3 xchg enter pop mov cmp or mov arpl int3 mov push (bad) ja rorl fs cmpsb push and jmp xor adc mov jbe cmp sbb (bad) adc imul gs sar jecxz aas pop jbe test cmp (bad) sbb ret sahf iret xor mov and pop mov inc dec jecxz movsl mov gs or push aaa scas icebp pop mov ljmp ret cmpsl sbb in fidivr jl mov jl pop jg adc inc (bad) popf adc or sbb arpl inc data16 and sahf fstpl (bad) mulb sbb mov in fdivrl mov popa inc fcoms scas in adc and inc push std push test jecxz xchg pop push cmp cmp cld shrl xor sub es jae test test xor into jns cwtl lahf mov repnz cs inc push test sbb imul lock inc jo pop pusha ja push dec aad ljmp in or mov in mov pop mov aad mov add je ljmp pop lcall sub mov cld adc mov inc dec add not mov jmp lea call push pusha lea jmp mov or push pop cmp pop outsl dec push test cmp mov and movb cld lea push add cmp cli sbb cwtl movsl mov ret clc add mov push jb popa pop xchg imul pop ds (bad) pop adc pop sbb push xchg pushw sbb roll jle aam pop out jecxz pushf mov fisubr push xchg clc shlb cmc int3 sub popa mov jl (bad) push and repnz movsl (bad) fiadd dec shll push pop or std cmp cmp test movsl cmp fcmovnb stos sub mov je push aam add cmp (bad) mov shl scas xchg cpuid sub inc ja jmp movl movb pushl pushl popl movb pushl ret not push dec pusha rol cld pushw popfw call push mov xor stc movw pushl jmp xchg movzbl add cmp mov clc sub mov call mov or fdivr insl jp push mov jns js outsb xor pcmpeqd ja pop jb mov dec mov cmp xor mov jo jge add jmp jo adc hlt loope flds mov add negl and daa mov xor and ficomp ja dec cltd cmp fsts leave xor jmp fdiv repnz (bad) jg adc push js push inc pop rcrb idivl lock scas xchg movl outsl xchg out push in push lahf fldl jmp cwtl in inc int lea popf out or lea jbe shld xadd sub xadd shrd dec mov and mov mov or xchg clc stc add bts shr call mov push mov jl mov lret icebp shrb dec es pop pushf inc xor push dec int3 mov jne pop xor xchg inc xchg js jne mov out push pop xchg mov mov test mov cmp rcr sbb pop add cmpsl sub loope dec dec dec popa sahf cmpsb mov bound pop aad popa in xor or push push jno jp (bad) fcomps or xchg xor in scas or cmp pop movhps cmp out out int mov inc pop or sti mov shlb (bad) xor aad test cmp xor ljmp daa ljmp (bad) jge dec xchg nop imul enter cmp imul mov and mov (bad) jmp mov mov pop xchg jl mov data16 jecxz (bad) movsl cmp pushf shr and (bad) and cmp push pop or (bad) in js daa out out aad jnp int3 in cmp cmp mov loop popa sub (bad) mov sbbl in adc mov leave dec xchg movsb push cmc and sarb lret jp,pt (bad) push xor pop gs or fdivl jg xchg cmp add xchg (bad) pusha pushf aas pop add dec outsl popa fs imul add and lea jmp movl pushf push movw lea jmp movb pusha pushl lea je mov lea call push call movl movb pushl movl push lea jmp call add or std sub in loop ficom xchg sbb jmp xor js jl dec clc test xchg out mov fist lds sbb aaa mov cmpps jge mov adc js stos stc jecxz rcll adc aam cmc lret pusha insl sub in sti cli adc sub jle incb or adc loopne bound fwait pop stos stc pop fisttpll dec insb sahf or decb mov pop xlat movsb jmp sub pcmpgtd xor repnz outsb fimul xchg sahf leave clc lea outsl bt cmc imul clc clc test cmp add pusha pushf pushl lea jmp xor jmp mov movw jmp dec pushf rol push push jmp call shl bswap mov stc test jmp cmp movb movw lea jbe rcl neg pusha mov rcr rcl inc sub add adc cmp btr mov test call pushf pushf movl jmp add jmp lea mov pushl jmp add dec outsl arpl inc jb add call call fwait les inc or push push inc jge xchg sub fcmovnu jl cli mov jl mov jle xchg cli sub xchg fdivr add add decl repnz mov add push pushf pop loop in push inc mov es sbb sbb mov or sbb rcl rcl mov inc lods inc fsubp sbb add pop stc fnop xchg cld js stos pop iret xchg scas xor nop in xor insl pop pop test mov aad out jns xchg sti js in adc mov sub rorb sarl xchg adc in icebp adc dec jg (bad) outsb sbb mov jno xchg push je xchg lcall jmp xchg mov xor sarb idivl shrl (bad) add sbb in jnp repz cltd xor xchg das mov (bad) push jge test push iret cld or aaa rolb xchg and add mov sub (bad) divl dec mov xchg xlat pusha mov test sbb mov jne push mov out dec mov mov mov fsubrl jge cmpsb add lahf xchg xor repz sbb jge rcrb add popf imull and sahf inc test xchg cltd xor mov inc fucom sbb mov in jge jmp adc mov inc je xlat lock mov out andl add (bad) in cmp and psllw cld or addb lret std mov fstpt dec mov mov or pop pop push adc add addb ljmp mov cmpsl xorb jmp ret mov cmp cli lahf iret sub imul das lea aas adc dec (bad) mov adc in and imul aaa sbb pop or jne sahf ss jp adc xor mov minps and add rolb add and mov ljmp xor xor xor xor xor xor xor xor xor test mov xor xor xor xor xor xor xor lea loop jmp ss xchg ss ss mov ss ss ss xlat adc push aaa pop aaa addr16 (bad) aaa xchg aaa les into aaa fidivl in icebp aaa std aaa add or cmp cmp jnp mov inc cmp push cmp jb cmpl int3 cmp cmp cmp cmp cmp push cmp cmp cmp cmp dec cmp xchg ds aas lods aas add add lock add inc xor xor xor xor xor xor xor inc xor xor xor xor mov fbstp or xor xor dec xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor cmp imul mov ss ss ss ss jmp hlt add or adc aaa cmp cmp cmp cmp cmp gs cmp cmp cmp cmp cmp push cmp jge (bad) cmp cmp cmp cmp cmp cmp mov leave cmp cmp ds ds sarb aas sbb nop aas add add add enter xor xchg xor xor xor cmp inc xor xor xor fnstenv pusha ss pushf ss ss int3 fbstp repz cmp bound push xchg aaa mov or adc adc cmp mov xchg cmp cmp cmp cmp cmp cmp push cmp test mov (bad) cmp cmp cmp cmp (bad) cmp cmp pop cmp cmp cmp cmp pop cmp cmp cmp cmp cmp add pop aas xor arpl jb mov sahf aas mov mov aas loopne in aas icebp aas add add add add add xor xor xor xor inc xor xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) xor mov aaa cwtl aaa stos aaa loopne in repnz (bad) aaa pop cmp cmp insb cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp cmp cmp cmp push cmp cmp cmp cmp cmp mov ret cmp fidivr ja cmpb ds mov aas mov push add lock add fwait xor inc xor xchg mov xor jge nop xor dec xor xor xor fnsave in sbb dec aaa pop aaa lahf aaa aam in adc cmp pop cmp movsl cmp cmp cmp cmp cmp cmp mov cmp cmp cmp cmp jle cmpl cmp cmp cmp cmp cmp cmp cmp cmp jae jle cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov test xchg ds ds ds add sbb dec aas push aas pop aas pusha aas jp mov mov add pusha add mov add adc dec xor movsb xor xor xor xor xor xor xor xor pop xor pushf xor xor xor pop aaa data16 mov in aaa imul cmp cmp cmp pop cmp cmp cmp cmp cmp mov cmp push cmp pop cmp idivl add sbb cmp cmp xchg cmp sbb add add add add xor xor dec xor popf xor adc arpl ja loope repz aaa cmp dec aaa pop aaa jno xorl aaa cmpsl aaa mov aaa (bad) aaa adc and mov cmp test cmp mov fdivrs add add jne int3 xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop ss add cmp cmp xchg cmp cmp cmp fnstsw icebp add add and xor xor out stc xor xor lahf xor xor xor xor stos xor insl xor xor xor or and dec ss aaa pop cmp cmp cmp xchg test cmp jmp xor cmp cmp cmp cmp arpl lret cmp test mov or scas aas add add cwtl xor xor xor xor dec xor outsl xor xor xor xor xor xor xor lcall xor xor xor xor xor xor xor xor xor xor xor lds cmp push aaa data16 mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp insl cmp cmp cmp cmp sarb aaa cmp cmp cmp fidivrl push mov aas int in aas add add sbb xor xor xor xor xor push cmp mov lahf cmp cmp cmp pop aas xor add rolb sub add icebp xor xor xor cmp cmp inc xor xor xor xor xor xchg add push add add xor xor cmp cmp inc xor xor xor xor xor xor xor xor and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp push cmp cmp cmp cmp cmp jl cmpb cmp cmp lods cmp cmp sub xor cmp inc cmp dec cmp pop cmp fs add add add insb add add xor inc xor xor in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb ss ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub xor xor cmp dec cmp fs jl test pushf cmp mov mov cmp in in cmp add or adc sbb and sub xor cmp inc ds ds ds ds je,pt jl test mov xchg ds movsb lods ds mov ds fdivrl in in ds ds ds or adc sbb and sub xor cmp inc aas dec aas push aas pop aas fs insb aas je jl test mov xchg aas pushf aas movsb aas lods aas mov mov aas aam fdivrl in in aas hlt aas cld aas add add mov add add or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor jo,pt js cmpb ds ds mov ds sarb fdivrs loopne call add or adc sbb and sub xor cmp inc aas dec aas push aas pop aas pusha aas push aas cmpb aas nop aas cwtl aas mov aas mov aas sarb fdivrs loopne call aas add add je add add or adc sbb and sub xor cmp inc xor push xor pusha xor jo js xorb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor js xorb aas xchg add add add inc add add and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp or and add add add cmp enter sarb movsb aas test les enter call xor add add or adc adc xor push xor mov nop xor xor xor xor jo nop xor xor xor xor push xor js cwtl xor xor sbb add add add add push xor xor sbb sub inc ss ss ss ss je mov mov nop ss ss ss mov lods ss les enter (bad) ss add add add add add xor cmp addb or add fdivl add xor add sbb jle call ss bound repz adc fdivrl push cmp cmp cmp cmp out inc aas add add mov xor mov xor (bad) xor xor xor inc aaa or cmpsl cmp cmp cmp cmp cmp cmp cmp ja mov aas add add add pusha xor xor xor xor xor xor into xor xor inc ss ss out aaa pop cmp cmp cmp arpl pop cmp cmp cmp (bad) sbb add add add push add add xor jne mov cmpsl xor xor xor ss (bad) fnstenv ss out mov cmp cmp ja aaa cmp cmp ret cmp cmp lods aas leave aas sti aas add add add inc add add xor mov xor xor sbb int fidiv push aaa jns divb and call cmp insl cmp push aas data16 nop aas mov add add dec add add xor cltd xor xor xor xor xor adc icebp xor xorl add xor cmp cmp lock mov fwait cmp cmp cmp fnstcw cmc aas add add and add inc xor ljmp xor xor xor pop cmp add xchg rclb inc push cmc pushf dec mov inc dec push bsr btr jmp int enter inc test xor fucomp lds and mov loope mov or mov or jno daa iret int adc and mov push std inc sbb xor aam sub lahf mov mov int stos mov mov push enter mov (bad) divl pop imul sahf mov test lret mov roll mov xlat xchg stos and xor ja fcoms ja addr16 push (bad) enter mov arpl addr16 mov mov push pop xchg dec push cmp bswap movsbw movsbw setne lea not not pop call jmp cmp pushf pusha lea jae cmp cmp push push lea jae jmp dec inc pushf mov setnp mov inc pusha pushl jmp movsb (bad) (bad) and inc sbb insb push jo sbb push ss outsl stos or outsl jl sbb pop pushf mov in mov xor repnz stos dec je popf jae mov decb out mov call fs rcrl push (bad) dec (bad) ja xlat andb xchg dec js test xor or add sub add mov aam in addr16 push mov stc pop in xchg stc es and xor sbb pop hlt pop pop xor and fstps xchg sbb cvttps2pi pop pop push jns bound pop std std mov xchg push shl jo mov sub pushf mov pop xor pop rcl in sbb icebp fmuls addr16 aam pop lret ljmp mov insb nop mov and inc push inc inc in xchg push (bad) stos movsb in mov pop or lcall dec adc ret or sahf lret repnz jmp jp sub mov mov (bad) out push lds daa push push mov add in jl xor in mov xor and fldcw dec cmpsl fist ror jl idiv ffreep ror not cmp (bad) ret push sbb lods jmp outsb movsl jns aam mov xchg out (bad) in idivb mov add dec and mov movl push rolb mov movl xchg jne jae fnstsw jg inc orb jg xchg fdivl sbb shlb daa push mov or addr16 cmp (bad) idiv cmp and out iret pop pop or out out call stos xchg clc in loop mov jno movsb and cmp or xchg and test cmpsb sub jmp sbb mov fimul sub sub dec xor mov and add dec test fcmovnb or or cltd xchg test loop pop adc flds cmp lock fsubrl mov fcomip jge mov popf sahf and rcr cmp adc pop dec fldl into sar (bad) jbe fimul test mov jp ret inc mov rcll (bad) fwait in js es adc inc test add std push sub test bt bt shr movb jmp pushf call add inc gs outsl fs gs imul add add cwtl add pop push pushl pushl ret mov movb pushf pushf mov pushl ret bswap mov mov pusha movzbw lea pushf movl pusha call add inc sti out lahf test and insb mov push mov loope mov (bad) fcmovnb xor pusha call fsubl dec fstl mov dec orl in fchs sarl push mov mov add fwait mov mov jo jne mov rcrb ja js sub in shr xchg enter pop ljmp mov dec arpl ret popf push jp lret mov int mov in addr16 stos jo mov js pop mov lret shll sbb bound push (bad) sbb xor and push pop push mov add xor or rcrb cmp iret add aaa cmp add inc es fidivr dec cmpsl into add ljmp lahf dec pop outsl test enter aas sub add mov cli push cmc cmp out jb adc leave testb hlt mov ja fs popa xor sub enter adc or std adc mov in jl (bad) popa testb push nop lds daa pop cmc repz (bad) mov daa jl cmpsb pop cmp aaa mov inc sub push and (bad) pop and leave mov loope cli sub das (bad) sub daa mov dec and cmpsl int pop dec lahf and fsubl mov (bad) jmp mov sbb add xor movw push pushl ret neg or sub xchg push mov lods pusha push setg pushl not mov dec dec mov mov jmp inc jnp lock or dec insb or mov cmp mov aas add pop arpl mov adc and adc pop pop sub sti mov add pop test push ja mov add das add out sti sub pop xlat cbtw imul push fsts push mov xor addr16 mov lock xchg lea mov fs jmp stos pushf lds cmpsb push sub in mov js or mov xchg jg or stos xor mov and test insb xchg push add js bound ret cmp outsb shlb addl lds cmpsl add subb add adc inc movsb scas lds scas loope (bad) mov push or add or push (bad) or out add add aaa sub jae out cmp addr16 xchg xor jmp lods arpl and imul mov cli push addb and mov arpl inc (bad) mov xor cwtl jb stos add and cltd add arpl sbb xor shlw popf jecxz cli pop aas push jge mov stos add les and adc xor or sbb sbb hlt or adc adc imul mov mov mov or push and sub rcll xchg xor sbb and adc and add addb mov ds imul lods scas popa adc sub test sbb xchg jbe mov add jno cmpsb push adc pop adc popf inc or (bad) pop push cmp adc pusha pop xchg pop sbbb rorb mov sub gs hlt dec xchg cmp sub jno push std les popf sbb and inc dec push movswl and test and (bad) ficomp orb stos stos dec adc mov out xchg pop inc rorl js mov subb bound (bad) (bad) dec lea ds lods and orb jb rcl push gs dec fsts mov faddp sahf push adc xchg mov jnp pop je sbbb bound sbbb sbb pop adc jbe or inc add push arpl loopne adc jne pop icebp or and pushf rcrb mov add gs jns test ret mov adc ret sub jnp (bad) cmp lea orl xchg sti push subb sbb mov jns fsubl pusha fwait subb sbb sbb sbb xor popl subl and xor (bad) mov add test sar or mov aaa hlt ret lahf lret dec sub mov test mov test popl mov or jnp xchg add mov inc or push lds mov adc out sub movsl imul sahf jmp ret sub ds and dec sub inc les dec add mov int jle das cltd out je cmpsb add and hlt test out xchg push pop mov xor push fldl stos (bad) jno adc xchg (bad) push sti loopne aas shlb or lock popa sbb je cmc pop lahf or or (bad) or sub mov or jae xlat fs cltd push add or les add xchg sbb or jo (bad) lock jne jo add jge mov adc fpatan mov ficompl and lock in jmp jl sbb pop push aad jae mov repz sahf or cltd or in mov xor clc insb xchg (bad) lock cltd pop add pop add sbb jae dec xchg arpl pop scas sbb adc nop shlb mov mov data16 mov (bad) (bad) call jno mov sbb pop jnp push mov and jg repz xchg pop and lret adc mov or sub dec cmpsb ret inc cmp popf loope mov ja dec pop inc pop movsl inc inc pop mov jp int3 fiadd and loopne andl jb jge jne sub mov rorl pop in jno cmc add aaa rol xchg xor fs or inc mov pop imul jp pop push jo mov mov mov and cmc lods or pop or mov pop addr16 lods mov mov test loopne inc fistpll jl lds orb cmp hlt pop adc sub sub push xchg mov dec cmc pop lea adc bound mov fs or arpl mov add xchg add mov jo test cmp ret cmc dec sub pop mov adc lcall ds loopne in jmp add gs (bad) ret sarb push ret push fildl add inc mov cmp dec xchg add popf addr16 pushf or daa cld and daa mov adc movsb add sub call mov adc inc adc mul adc add adc shrl (bad) cltd mov popa cmp adc push adc inc xchg loopne inc or inc dec (bad) cmpsl sahf je lahf sbb push andl cmp repz xchg adc lret or add sbbl cltd pop jecxz les insb call push popa sahf leave xchg xchg ljmp sub pop and addl inc je (bad) rep cmp or repz call dec xchg jmp gs (bad) or popf lahf push les push cltd out repz mov les dec (bad) mov pop ja je adc xor xchg xchg or adc test xchg adc loope adc mov cmpsl lds and addb ss (bad) cltd arpl mov cmpsb fs addr16 lret aaa or mov mov popa and arpl push fwait xor dec loopne stos push dec pusha mov orl inc insb mov shrb insb lret dec dec pop outsw push out mov sbb mov adc fstpt lods lds xchg xchg mov les push bound fidivrl inc in push jnp rorl lds pop popa addr16 jae sub mov push dec lret xchg fs mov jl cmp adc push mov out jmp jg adc mov mov mov sbb lds pop push sub or jb int3 adc or dec aas fs add insb add or xchg loope add jecxz mov jb rcrl xor mov sub dec leave out pmaxub xchg call scas push or movsb (bad) leave xchg arpl jmp or xor test rcl mov into xchg jb jmp or sarb js pop gs shl es cmpsb out cmp cmp les mov xchg dec ljmp (bad) (bad) pop sbb jge sarl inc xor rcl je mov loope addl xchg stos xor xchg inc xor loopne lds inc in movb inc in jnp rorb mov out add subl fistpl ret add repnz out jb lcall psubw inc andl push and mov clc xor (bad) mov int3 insb xor js sub pop push adc data16 xchg cltd imul dec popa sti subb sub adc cltd js sub cmpsb mov mov mov mov arpl xor jp stos movb ficoml or sub jle ret loopne mov mov mov arpl push mov in ret pop addb cltd in sub aas mov ret mov call sti in test and or fisubl mov push les jl dec jecxz (bad) in inc mov push xor mov enter cmpb dec pop stos adc xchg xor or sbb dec fstl ljmp dec sub cmp push add sub mov nop fs xor lret or outsl dec popa mov mov pusha je ds push sbb stos pop pop or pusha push insl and inc ret sbb mov jecxz xchg and push pop push dec sbb xchg xor xor mov pop mov push pop popa jno fiadd xor mov jecxz xchg sub sbb add sub sarl int push hlt fs xchg cwtl nop add insb and mov mov repnz js fs imul and pop jb mov shll sbb in inc js cld je xor dec js mov xor or in sub sub stos sub cmp sub xchg fadds movsb outsl add push das cmp mov push xor sbbb lcall aam test pop lret xchg add or or fcmovb xchg xchg (bad) cmp sub je,pt add sar mov pop iret je clc pop mov lret mov bound insb lods or mov add mov (bad) xor fs lret incl push arpl and rolb fild mov xchg push inc xchg scas lret xor (bad) pushaw add dec xor (bad) mov pusha pop cmpsb xor ljmp or sub faddl or mov push xchg loopne loopne mov fisubr and dec sbb xchg in ja (bad) sub fcom mov pusha mov inc or cmp adc (bad) enter inc mov test rcr leave or mov inc sahf adc cmp cmp sbb fwait mov xchg xor scas mov adc xor (bad) adc cwtl xchg xorl cmc movsb test lods lea in (bad) adc mov imul movsl inc aam xorl or xchg mov jno and xor (bad) fstps cmp inc stos xor adc lret cli xor adc mov es aas cmp cmp loop arpl mov push xchg push push pushf mov nop enter mov mov popf pushw test pop cwtl push push pop and mov or adc sbb push jmp movsb inc lods push dec cmpl inc scas repz jns cmc gs outsb shlb popf loopne cmp les xchg inc sub test cmp out pop hlt jmp xor inc adc nop lds xchg cmpsl xchg cmc and ljmp mov test add pop (bad) cmp dec notb sbb adc ljmp adc sub inc bound adc and stc adc adc inc push push adc cld mov add lds inc popa outsl mov lea mov outsl mov inc icebp cs mov sahf or and jo push xchg mov in shll jg jo pop push mov dec test pop mov jne (bad) push inc mov xchg inc movsb xchg and mov (bad) fidiv xor test pusha sub lds mov cmp xor cltd mov (bad) push add cs push or or nop sahf bound xor sub xchg bound push xchg and test pop push xchg sub add (bad) (bad) cwtl jp jbe or outsb lcall addb sub cmpsb aas insb xchg data16 je add mov adc leave ja or lds or (bad) jl loopne lds xor sbb xchg lock repnz pop push cltd in mov test cmpsl dec test in mov jno xchg sub (bad) mov sahf (bad) cmp cmpsl add stos push jmp push bound js clc mov cwtl mov movd test mov sti in cmpb in rolb lods scas mov xchg js lahf incl jl xchg mov push jns ret orl pop xor adcl jl mov test add mov (bad) xor xchg ret dec enter sbb cmp adcl test enter les mov dec fadds das sbb in mov addb ds (bad) xor cwtl jo adc stos cmpl subb mov dec rolb xor (bad) jo add jns mov test sahf jl add lahf and roll or or cli mov or xchg lds xor xchg stc cltd push inc test dec mov imul xor adc sub push pop xor je sub or inc scas xor movb inc and inc or ds adc cmp rclb (bad) dec inc into cmp ret (bad) ss adc xor fs pusha pop dec or inc test jecxz mov pop lds jns roll dec rorb push (bad) (bad) je in push sub jecxz mov pop and pop stos or aam or movb sub mov or dec addr16 arpl mov sbb dec dec or inc or sub cmp lea (bad) enter mov pushf push and stc xchg cmp cld fisttpl clc jns mov pop jo fisttpl adc sub sbb sub (bad) mov test rcrb mov mov or or mov lea xorl adc int3 rcl inc adc sub and jle loope aad test loop add xchg or pop push andl adc xchg xchg jo jecxz xchg daa cwtl inc gs pop popa repnz jl or mov mov jns pop psraw adc xchg lods scas jae xchg test jp or jl adc jo pop lret popf jecxz rol arpl fs push cmc xor jp adc imul cmp or cli ret jne lds push lret je scas int jbe add fs out sbb loopne cmc or addr16 xchg loopne lcall push pop les mov call insl push mov sbb cmp addr16 or xor lret jl and call dec xchg lea add adc or xchg je adc popa lcall repz adc int3 mov dec dec add or sub mov stc mov pop ret add mov sub adc jne push xchg and ret adc daa dec cltd and fwait xchg cmp std pop or adc or adc push sub mov lock xchg pushf notl popa lods pop and pop ret addr16 push dec jno cmc or mov test or add mov (bad) add rorb pop int3 ja xchg sub ret add or test je inc sbb mov cmc imul mov push outsb sbb fstpt cmpsb sub rol dec (bad) inc sub (bad) jno ret popa data16 sub add sbb jbe dec pop and dec daa or scas hlt in xchg pop and sub (bad) pop arpl add mov or mov dec enter or mov xor (bad) movsl and push ret xchg lea add je cs sar xchg lock dec rorl mov fwait push rolb push xchg sub sbb mov add addb add fildl pop rolb cmp mov fs add or push mov sbbb xchg jle cmp jne cmp out add push into js mov cmc movsl inc pop jge cmp push mov data16 inc js adc mov roll add vpackssdw fmull lret lret push xlat mov sub adc jmp fs adc add sub and push pop (bad) inc movsb xchg lahf cs or imul inc xor jecxz insl outsb dec test les sub push mov and insb mov in push (bad) or cs lock ja cmpsb adc mov mov insl adc adc fisttp or jo (bad) sub ret sbb xchg sbb divb adc jb je and pop and rclb adc xchg cmpsl ss iret clc jns dec dec aad add and pop nop scas lods out push sahf (bad) enter shrl add mov mov sub pop adc fistp sub mov sub fs imul cld adc inc out popa add cmp lds pop cmpsl xchg and cmpb mov push jge xchg push mov jmp jl cmp lock xor or xchg sti and aas test (bad) push adc sub or adc sbb and or (bad) fistp or hlt add sti loopne fs loop sub cmp flds imul jbe popl cmp (bad) ds jo adc fs mov hlt addb mov cmp pop sbb loop cmp adc int add repz mov sub stos ret jp (bad) push scas sub jle addl inc daa dec ljmp test movsl push push inc mov cmp push push or scas loope sub sub and fstl or rcl sti jecxz in jbe into push arpl push sub or mov imul pushf js cmp popa xchg cmpl adc pop inc ljmp pop sbb push pop and lea (bad) mov or sbb and test call add (bad) in push adc mov jo popa xchg je push out and mov arpl mov hlt xlat lods fs add mov repz hlt cmc sub lods jle cmp xchg add ja xchg ds sbb sbb mov je push lock pop inc lds dec sub jbe pushl aam mov add movsb shll jecxz mov push and loopne hlt lahf stc rolb jno call lret stc mov xchg (bad) push adc adc cmpsb ret push sbb mov ret push add mov cwtl int3 push pushf sub test mov adc jmp les pushf iret daa cmpsl and mov sub aad mov imull ficoml cltd cltd dec sub mov and or mov pushw xchg push xchg mov xor ja sahf and sub add daa or das sbb xor adc sub cmp pop aas cmp jae cmpsl jns lds xchg je push add (bad) push cmp test ds stc imul dec inc sub jo out or cmp test mov push mov mov sbb pop xchg clc push jae cmc adcl xchg inc je icebp stc adc jne cmp ja enter push mov inc fnsave and mov lods stc cltd mov xchg std lds adc inc (bad) pop movsl dec mov dec scas dec in xchg jne inc lea jb outsl jmp push cs add cmp jno and or mov and mov adc mov mov ret pop or pop test popa sbb mov loopne je xchg push imul hlt icebp sbb test sahf push loope pop subl daa dec lret jle xchg push lcall xor inc inc xor adc dec cmp cmc repnz ret xchg ss and mov lods fwait mov ret orl ret pusha pushf arpl stos push cs ficomp mov je shr sbb xchg push xor add mov or je mov in jecxz inc sub and les xchg mov adcl pushf and and add cmp push adc push mov lds adc mov stos (bad) pop push insb mov aas popa insl out xchg (bad) or sub iret or fiaddl fcmovnu sbb outsb pop mov push ret lds push test mov imul addr16 mov cmp mov out lcall mov and jge outsl adc jbe dec dec adc xchg jne pop movsl sahf outsb sub sbb js jbe mov cmc fcoml add jp mov out or popf jb lods push push pop push adc mov adc push into xor push mov mov sbb push xchg loopne daa push xchg into push andl je dec push xchg sub dec or jmp jbe sub push movl sahf test mov rorb dec rorl comiss imul add xor mov fs or dec pop out xchg sub and into rcrb ret add or inc add inc cli add dec in ret mov ret adc push xorl stos push ret or push pop inc and inc add je (bad) mov je sub test enter fs pusha cmpsl sub (bad) xchg mov mov scas inc adc add sub jb and inc dec add movsl sbb adc scas and mov add mov cmp jno out xchg xchg das inc jns xor stos int3 in or and sahf xchg scas les sub dec shrl inc sbb add mov rcll cmp sbb and inc rorl lret lret sub pop fmull pusha stos or sub test xor xchg repnz xchg or (bad) les scas xor sbb cltd mov cmp sarl cmp jge dec dec xchg pop (bad) mov push test xor mov xor pushf loop mov daa rclb add or or movl add mov pop adc cmp jl fs jb inc xor mov orb pop adc adc inc les pop cli daa mov je sub add sbb add adc test les cld insb (bad) lret imul adc je pop and in mov pop pusha int xor dec xchg add je aas push and sbb test add aam mov add scas popf and cs jl and jge mov dec js sbb lds jle ficom sub add cmp or adc add (bad) fnclex xchg js sub push pop push sub rcll pop adc sbb pop add dec pop lds fldenv fstpt push pop mov movsb add cmc fistl (bad) test xor or movsb xchg jl loope sub pushf flds (bad) xor cmp test test ss mov dec stos test sub lods mov dec or push lock mov fcomip addr16 inc xor ret lret xchg lahf scas cmpsb adc add and xor dec cmp cld push inc scas sbb mov cli mov xchg jge mov mov cmpsl (bad) adc adc pop je sahf add cmc loopne (bad) mov jg mov mov out add or inc adc out into or ret push add mov xchg loopne inc outsb imul mov div xchg or mov push hlt inc push or and add and cltd add ret push (bad) and in outsb xor dec incl popf popa mov pop mov sbb cmpb pop (bad) mov or inc adc and adc mov and (bad) cmc xor and and and xor leave inc pop add fiaddl nop (bad) mov ret adc (bad) cmp mov mov imul test (bad) push and rcrl (bad) xchg repnz scas lods xchg adc jo sub pop sti sbb sub xchg and adc call mov xor and inc cs fcompl aaa inc sahf outsb and int3 sub or fsubrl ret or ds mov push cmpsl mov psubsw jno inc and lcall mov pop jle decl insb mov cmc add mov mov cmpsb mov xor je push mov mov xchg or (bad) sub adc iret pop test dec xchg xchg push in adc mov sub add std push repnz mov pop mov pop ret test pop test xor scas or or jge sarb mov loop ret cmpsl mov and data16 lock add loope (bad) inc dec ds lds mov sbb mov jae and or in sarl cmp mov je lret sbb dec fidiv in dec jmp cmp xor push xchg jle pop mov push mov les scas imul ljmp xchg and mov xchg rcll shll fildll pop or xchg (bad) out or xchg pop mov mov pushf insl les lcall dec mov ss xchg ss sbb add addl adc sbb or adc loopne or sub mov test call int3 mov pop andl movsl and pusha pop inc push orl xor loope andb or mov repz push popf es call rcrl lods mov (bad) xor fdivrp jl js mov les jmp arpl add pop push jne test sbb sbb js add sbb or pop jle sbb push jnp das sub stos mov inc (bad) push mov dec clc sub xchg lock in scas dec jle jg or jle push dec iret bound xchg cli iret out (bad) add or jge enter inc or mov xchg aas add outsb test jp pop push inc sti mov nop inc xchg outsb xchg and (bad) ja popf (bad) les or pushf das or cwtl inc mov xchg clc out xchg push xchg test and cmp xchg sub loope call or adc push xchg jmp loop repz les mov cmc addb mov xchg mov icebp outsl imul xor and lds sbb cmp movsl inc inc cld lret loope (bad) xchg lods lahf or in pop mov movl sub loopne jecxz ss adc in jne adcl or cmp popf jns,pt lods add jae cltd jge pop pop shll jmp adc jno xor lds pusha addr16 popa daa rcll cmpb pushf cmpl fwait sbb ds (bad) cmp pop xor (bad) test add stos xchg jmp (bad) popf icebp jp test fldt push js push nop vpaddb inc stos rolb jmp test popa cltd imul je adc add add pusha das mov shr iret and push lds push dec out add idivl pop in cmp push and insb jle pop or push js mov pop in jg dec xchg xchg stc and ljmp js mov push inc pop dec and loop cmp je mov xchg sbb mov mov in adc cwtl cltd adcb popl xor jecxz movb (bad) pop xor fmull mov out gs xor testl jns xchg push mov jbe (bad) and aam inc jno in (bad) fcoml idiv mov loopne notl mov test (bad) mov or nop aas mov adc xchg or lds dec loop push gs xchg test xor in sub fwait adc xor cs (bad) popf and (bad) iret mov add or push aad xchg hlt data16 sbb fmull enter dec rcrl movsl sahf dec jecxz adc and cmpl into mov out movsb mov cltd jnp daa mov je add nop and mov popa or dec inc leave or lds inc std paddw in sub loopne push mov mov sub les dec mov bound xchg or jbe and fadds cmp aam je push mov sbb mov or dec or inc mov repz test jecxz daa or scas push loop push pop jmp sbb push js cmp insl inc faddl scas and adc cltd lahf outsb dec imul mov xchg lods fadds jne lret cli pushf jb push scas pop push testl inc or std mov xchg dec ds pop or sbb pop mov xchg xchg adc outsl add (bad) xor adc movsl test fcomi stos xchg aaa fadds xchg insl add mov xor repnz sbb cwtl mov xor mov cmp mov xchg and ss jmp jnp jns push test cmc cmpsb and sub xlat insb lods sbb leave mov inc scas test inc xlat pushf sbb cmp mov xchg pushf mov out push mov dec xchg nop flds sbb add mov dec out jle lock add lret stos cmp lea or (bad) daa jecxz int3 movsl mov mov loope push sbb jecxz adc and add loope mov subl test shr (bad) or sbb cwtl (bad) and push push jp mov sub and add scas or inc mov inc insl pop fistpll inc jmp xchg add (bad) clc incl das push dec js inc subl sub das mov popf mov push call mov add arpl cld shr cmc xchg into js les loop push mov fs lret popl push pop inc add (bad) hlt daa mov jmp push (bad) or mov rcr lds sbb shlb lahf cmp sub incl push lahf xchg and add test or (bad) je shlb add dec mov movsl mov leave rclb pop push scas (bad) mov imul pusha addr16 mov sar and add or sbb mov or add xchg arpl sub pushf and in sti or xchg insb or jge leave mov mov jb not mov mov inc push stos cmc mov adc sub xchg bound inc cltd cld mov loop imul push ljmp arpl test pop pop or mov ljmp or push mov and dec xchg pop aam adc adc inc test rcrb or jo pop sub xor xchg sbb mov xor fs lock pop insl jp sub inc movsb sub adc xchg xor and sub cltd dec adc iret popl ret sbb dec ljmp leave in push sahf mov insb and lahf and adc add test jnp and xchg movsb mov mov and rorb pop aaa movsl dec aaa gs cltd push xchg cld xor (bad) das mov test xchg loopne fldl enter movb adc jg in cs mov mov jle and test je movsb and cmc (bad) push popa xchg dec dec sub xchg cmp out dec loop xor loopne pop fs test dec jge mov sahf aad out push test mov cmc mov je jl data16 stos sub mov xor sbb in loope in pop sub fwait push inc or je cmp or xchg push test mov pusha add mov xor xor mov mov cmc adc inc push mov mov jbe test adc sti stc mov pop imul rclb sbb fisttpl je dec or stos xchg cld andl lods or inc aad dec cmc or dec insb int3 jg or and add cmc and push stos push inc popf sub repz pop rcr sbb sub fwait js movsb cltd mov xchg push shlb push add inc pop pop in subb xchg dec cmp sub ljmp jmp jo and and out iret es adc (bad) xor es mov mov push jo xchg (bad) fs insb or push nop fisubrl fisub pushl jl jbe fs inc and pop or je mov in adc xchg push out dec or data16 je (bad) cmp jecxz xchg mov loope dec xchg or fistl sbb cmp add andl xchg (bad) fdivrl scas cmp movl hlt cwtl iret mov in test pop xorl ret repnz cmc xchg or stos dec stos jbe cltd sti (bad) push in or addr16 (bad) out or lret mov loope icebp test dec sbbb ret movsl in mov aas mov pop dec dec xchg in (bad) dec popf xchg push loop sbb xchg jo jl add clc (bad) mov mov jge mov jecxz pop lods popf fs sub jle and loop xor or jnp out lods inc js push mov add mov insl call push xchg je mov addr16 popf ljmp add aam insl dec dec pop bound jo add sub ljmp jle shrb cmc push dec xchg jg or inc or lods test add cld jns (bad) cmp or jns or jl inc xor gs cmpsb push cs test add ret adcl ljmp add pop mov in pop cmp adc cld xchg out sbb test cmpsl (bad) cmp or jecxz cmp cmp out mov inc sub test (bad) ja lds and push rcll movsl and je fist je (bad) jle in mov enter pop xchg jae adc cld icebp adc push xchg int3 dec test cmp inc (bad) lods jbe ds sub inc test sbb jl out xor test divb sahf and jmp and mov jae mov push cmp mov mov push sarl rcl adc cmp lods adc outsl cmc add (bad) jns or sahf lret push mov inc xchg jbe xchg lods mov jl das mov xchg push movsl pop sahf add lret add inc pop xor push add lds inc or lret repz pop hlt lahf and test mov mov cmc sbb jne (bad) lcall stos cmc repnz ss mov jb ja cs mov and mov dec ja cltd or fldenv test or mov or test xor add xchg test add daa xor fbld inc mov cmc mov stos adcb out mov xor movsl stos rclb inc mov in test mov aaa insb sbb adc adc mov and or sbb sub (bad) xor cmp sarb ljmp mov and jl or and rorb lret ss aas cmp pop lods dec pop xchg xchg dec lea and sub daa inc in mov pusha mov or and and dec dec push add ret xchg in add fsts out pop test in lret xor or testb mov xor xchg jp mov xor lock scas insb mov or je jg xchg dec aaa xor dec push sahf jp jecxz pop and movntps push es push pushf sub sub bound or lods pop je or imul (bad) jno sub fs insb adc xchg cmp push sub lods adc mov add add add xchg je call mov jnp or or loope push cmp jno adc add push xor rclb inc psubsb call jmp cmp cmp inc enter das and nop push sahf and or or jno scas sbb mov xchg cwtl pop jmp and xlat clc pusha xor or jmp mov sar xchg (bad) fcomip sub lret je sub push jae xchg (bad) jmp pop lods or jb stos cmp in daa cmp ret add add xchg jl fistpl sub popa pushf jno outsb sbb sub xor or insl push mov sbb cs jae hlt adc or iretw les mov mov jns xchg add and (bad) (bad) je and scas ds fwait and adc cmc jecxz lock in xor gs inc scas (bad) push mov scas or gs aam sti jp (bad) int3 sbb jbe sbb cwtl add shrl pop pushf xchg xchg inc push loopne shll and sub xor xchg je cmp in fdivrl or mov or (bad) xor mov nop mov mov mov sub dec or fmul xor sahf test test sbb lea xchg push dec sub cmp je xor stos push in ds nop inc shlb jno cmpb mov or sar imul mov xchg or push mov inc cmc xor pop (bad) xor or clc sbb cmc mov pop jle or nop or or rorb shrl cmp stos scas or cltd ljmp (bad) (bad) xor js add sub (bad) cmp lahf (bad) mov and add xor mov mov pushf inc jl adc jne push lods shlb stc adc je dec stos roll add mov cltd in ffreep and leave js jbe inc adc jecxz push jp ret (bad) icebp mov mov cmc popl add roll arpl or das popa cmp cmpb fildll xchg sub xchg add pop push lcall jmp pop adc adc xchg sar pop xchg loopne adc shll adc in lods inc cmpsb (bad) mov adc pop pushf inc es mov inc inc xchg cs dec push jbe and adc into jmp enter adcl out loopne lods xor xchg pop or int3 sub and sub mov sub lahf mov out pop data16 insb pop adc cmc cmp dec lods les dec and fdivrp mov ja and add mov push mov fs test push ja inc mov sarl and bound inc enter and rcrb pop stos inc jp xchg bound inc popf stc mov in push lds pop lds fcom sbb sub dec adc aad sbb movsl mov cmp out sub push gs popf adcl mov inc in add xchg push cmp mov jge adc inc mov inc cmp arpl cmp loope hlt cmp or bound xlat addb idivb loopne arpl (bad) je or (bad) icebp push dec das (bad) xor push jl xchg ret cmp mov pushf mov and xor ficoml repz push xor xchg mov mov shlb aaa cltd and jg dec mov cld jl push int3 adc mov mov xchg add vunpcklps sub gs push lret adc sub sub jmp movsb adc arpl (bad) and pop and dec inc mov mov jne push pusha mov xchg sahf inc mov std je push lcall pop and xchg loope push lods sbb into fs push xor and call dec xor and (bad) and and gs les ljmp pop adc cmp push and mov imul adc add add push cmp ror jne mov or add icebp bound dec jp xor inc les aas in sub cmc cmp hlt pop scas pushf sahf fdivrl cmp add fcoms das iret mov fs mov or inc push push push iret cmp lds lcall int3 mov lods (bad) mov jge lret mov dec cmpsl add and mov sbb popf push inc pushf push (bad) addr16 mov sar cmp std jne aas add repz push fld loopne daa push xor in scas out (bad) das je xchg sub mov jb mov fsubrs shrb pop or or loop pop test popa mov mov adc mov or add fst lods and in sbb dec aam fs test (bad) jb dec ret add pop sbb sahf xchg or dec and rolb mov jecxz addr16 xchg or pop lock push and scas cbtw adc cmp (bad) cmc fwait jl cmpsb push out adcb adc mov mov sub jmp cmp jns in cmp mov sub or (bad) mov stos mov push faddl jl repz xchg scas adc add xchg sti push movb sub and or adc mov (bad) xor test add inc adc or andl lods jne xchg lret push (bad) and inc jp (bad) sub add dec xlat pop (bad) adc dec mov mov or (bad) xor shrb push sub adc and add mov cmpb add test fisttpl sbb add loopne add orl and xchg or push inc (bad) adc adc add divb mov mov add popf inc sarl je push xchg int3 daa mov arpl jo sarl dec data16 xor popf push cli and jnp lods mov mov xchg pop xor inc rcrb and push setb push xlat and dec out sub cmc xchg sahf or test mov pop or jns rcrb addr16 add jecxz test mov ret mov rolb sub mov push mull lret mov popl cmp mov flds test mov roll xor mov cltd jnp inc jle mov test push (bad) or mov out xchg sub mov cmp adc out sti mov mov movsb xlat ret inc popf mov inc stc sbb fbld mov in add pop out les add and test sbb sbb mov test add cwtl dec mov aaa add xor sbb xchg rclb popf xlat int mov test inc je (bad) fistpl fstl inc mov cs popa mov lret xlat xchg lods insb sub add sub and cwtl les imul std sub ss lock outsb lock leave pop adc fs pop inc sbb arpl xchg lock xchg test sbbl push movsl sub pextrw xchg in mov test mov ss sub xchg dec or xchg (bad) pusha pop push popa adc popf movsb mov (bad) and xchg jnp repnz (bad) mov add sub arpl pushf sub ljmp xchg clc cs jnp je push lret imulb xchg outsl or cwtl add dec inc mov stos aaa cmp sti jne movl dec inc cmpsw std push loopne push out aad in js cmp mov mov and xchg add hlt jg cli or jne hlt aas popf add mov (bad) and cmc mov insb daa rcr cmp and in stos lret pop (bad) or (bad) cmc call push inc push push enter mov test imul adc arpl data16 sahf or cwtl mov sbb movsl ret fcomi push int3 popa inc outsb popf inc xchg jl add or aas inc pop inc pop gs mov xlat loope mov out in adc lds mov loope sbb cmpsl arpl jo data16 push loopne adc sbb fs or in bound xchg (bad) xor adc js je ret adc push cwtl nop inc mov out sbb hlt xchg mov add and xchg out (bad) jae jl lret dec inc sub sbbb cwtl loop jne loope cmpsl pop and imul out push sbb mov and mov pushf jmp in aad cmpsb das mov (bad) pushf lret push imul or adc ljmp xor repnz adc xchg clc dec add cld shll inc xchg or fiaddl (bad) cmc scas mov xlat shlb inc idivl das subl cmp shll xor sbb mov lret push jb adc cmp adc test (bad) mov pop pop test pop insl xchg xor push adc test jb inc kmovb mov test cld cmc in loope gs or pop cmp xor xchg jnp xchg jne popa scas push test test arpl adc add aas cmc xchg insb test mov push fistl lea outsl xchg rol gs imul push adc sbb js jge add and hlt jns cwtl insb insb lea sti imul jbe jne pop inc mov jg push push push jb cmp popa push js dec add xchg sub add insl mov mov xlat mov lods sub mov add add loopne popf std cmp pop dec ss adc iret jnp pop sub inc mov push int jbe stc loopne pop sub andl adc sbb sub and or mov cmp outsl out push repnz mov out xchg jg jmp data16 pop dec sub sub xchg lds mov jge mov xor jo (bad) adc cs xchg mov or in (bad) rcl or adc and add aas or outsl push mov outsl xor sub subb jl xor dec push xor cmp cld xchg jae arpl (bad) pop xchg jecxz sbb (bad) mov xchg cmp lods mov mov aad sahf add sub sbb shlb mov mov cltd dec popa jae pop pusha or xor ret inc dec push sub or arpl call jecxz cmc addl unpcklps sub or dec cmp sarl sub dec pop clc and or lea insb jg inc enter cmp (bad) pop cltd xchg orb sub jno inc adc cmp inc cltd xor xchg and movsl add jmp insb mov sub fisub insl cmp test ret lea mov pop les sub mov stos movsb xor data16 push jge push or jae inc rcrb inc sub or iret pop pop sub loop mov pushf in cmp fwait cmc test sbb mov mov js xchg popf gs test js fimul out mov mov daa jno add xchg and jnp cmp pushf decb (bad) sub adc xchg ret je fnstcw add mov enter (bad) in ds push add xchg pop loopne incl rorb mov (bad) push lahf insl rcll jns adc or cmc sub (bad) jge shr dec jno ret mov int3 arpl and mov xor in mov mov std cmc and mov inc popf jl cmp pushf push mov mov and sbb jl les xchg fmul push push xchg jecxz insb sbb outsb jne add out jl das outsl insb ja test xor mov xchg jg js xchg or js popf aas stc cmpsb pop mov pop adc insb or sbb ss mov inc add imul pop scas stos inc mov dec cmp xor imul cmp (bad) cmp mov icebp push in xchg jg aam jo pushf dec dec sbb fisubr mov rorl mov adc push push sbb add mov sub loope lret pusha add or add fistl mov jbe add xor add add incl inc jnp adcl ds negb les sub ss add sub sub jp add movsb and rorl je out and test fsubs stos cmp rol cmpsb sub (bad) jg mov mov cwtl cmp cmc mov xchg popf xchg push (bad) pusha mov lock add adc xor add or dec je outsb enter fdivrl adc je je sti adc sub movb (bad) or clc jae in push cli adc jge pushl (bad) dec cmc aaa sbb (bad) les dec sub add jb xor push cmp cwtl push add adc cwtl adc push sbb jmp and inc and push mov and and and push add dec mov mov int3 and enter mov and add repnz adc add dec cmp pushf pushf or rcrb (bad) mov in and popa xor add pop adcl mov arpl cmp cmp cli imul (bad) jle lods dec aam xor push aad test push aam sbb mov or fs inc nop inc dec mov jg,pt mov rolb and gs pop das pop das cmpsb rcrb nop shll adc fcoml push push sub lds aas sbb or test mov add lds pop adc cmp pushf or push jo xchg and mov xchg je jmp cltd or mov lods movsb insl das cmpb inc and je adc jmp xchg push jge fdivp iret and cmp push fildl adc bound or cmpsl loop push cmc sarb mov jmp cmp test adc in add and sbb sahf cwtl add mov popf and cmpsb jp xorl add adc mov and fs mov dec add lods cwtl sti xchg sbb pop pop mov (bad) fwait xchg jp push adc aas hlt pop mov or and mov sbb es xchg (bad) lods inc mov mov jecxz mov nop mov repnz je push cs in test or je inc sub movsb cmp lds outsb cltd call pop sbb or xchg xor ret or push popa and fs mov test and shlb mov xchg sarl loopne sub in je sub (bad) pop test mov inc lods adc sahf mov push mov or mov rcr (bad) lods sbb xchg dec daa sub movsl std inc inc sub inc push cmp cmp movl mov dec lods xchg dec cmp xor adc fild xchg jecxz cmpsl push dec push pop sub sbb xor jo lret add push or dec adc adc mov lds xchg imul movsb mov mov addl mov imul xchg mov xchg mov push int3 or cld insb sbb and insb dec fcmovnb xor jae pop jmp adc jg adc lret or adc gs xor mov sbb lods inc and es mov mov pop arpl mov add sub jg jl sbb mov sub jnp sub addl lods mov cld mov idivb es lea xor push lds mov int call insb xchg hlt inc or aad pop in sub push cmpb fbld and int3 inc push push dec and mov mov insl dec adc call push sub cmp (bad) pop inc jno or adc jae jecxz mov sbb popa nop add addb push push sti jmp xor fnop test xchg jmp imul jmp test mov dec sub mov push pop and mov ljmp and mov or int3 add and iret les es sbb in mov push in xorl push xchg cmp aas add mov mov cmpb add sub imul push lds jo rclb sarb outsl cld xchg jmp (bad) adc xor mov (bad) cmc add push jo cmp orl daa mov pop adc xor popa push xor dec pop movsb xchg xchg lret sub cmp pop jecxz js popa xchg sti mov lahf (bad) xor scas loope jnp and das enter lahf and inc incb lahf xchg in adc push push mov inc xor mov add inc mov push or add pop enter jb nop rcrl xchg popf xor addl mov pusha mov cmp add add cmp mov sbb fstl xor xor or leave aaa enter mov xor lods xchg loope cmp xchg or pusha push xchg dec pop push ret (bad) mov loopne (bad) popf sarb std sub mov pop pop sti mov and fsubp jge jbe or in fistp jmp enter in fs loopne out add push (bad) sbb pop pop arpl jns (bad) push andb and test push mov add mov add addr16 in add call jge int adc nop imul or mov fsubrs mov (bad) and sub es test repz in and cmp daa jle enter cmpsl sub lret sub lods pop lods (bad) sub adc jmp push pop js sbbb insw lret jmp xor and mov xor add jbe mov push sub dec sub cmpl adc fldcw mov pop inc aas inc adc adc cmp arpl stos sbb sub add sahf xchg out jns sub push jecxz scas hlt cwtl sti (bad) sbb movsl jbe pop clc das jo mov iret imulw mov dec (bad) and adc loopne (bad) inc sub pop mov or mov pop inc ror addr16 inc rcrb hlt ljmp ss mov or pop in fnstsw jg mov gs xor add add fimul cmpsl call jb jo push mov adc pop aad std stos xchg jnp cmpb sbb xchg add nop lret or hlt dec test add test and mov mov or mov jb je xor push mov sbb idivb xchg je mov inc xor add fdivs xor je and jnp,pn xor push and outsb (bad) (bad) stos fsubl pop push stos bound adc push mov sbb cmp (bad) xor aaa mov pop hlt jecxz cmp sub lods push add pop sub fidivr mov sub (bad) sbb push in shrb lea adc (bad) lods ljmp push addb std xchg jmp mull pushl nop mov shlb jb fstpt and test bound mov fs dec jp push aas or loope sub (bad) xchg cmp adc scas jmp cmp lret incb fsubp push sub cmc jmp je add (bad) cli or add lcall popf mov xchg outsb cmp jecxz pop jbe popf cmp bound pop xor adc adc sub adc lret fisttpll sahf push pop and notb cmp loop mov stos test push (bad) notl sti mov sbb adc lcall popa push lcall fcompl lea xor test or repz mov xchg jle fnstenv jecxz adc ret jecxz jl addr16 sbb aaa js clc xchg sbb popa and inc ret ja ja dec insb sub xchg push cs mov xlat xor pop and pusha out inc cwtl cmpsb lds adc lret cmpsl icebp cmp cmc pusha cs repnz add pop or dec iret jecxz and or jno xchg adc subb rcrl nop dec gs in sti dec dec xchg je sub das lea dec xor cmp xchg mov dec or out call rorb cmp dec lds das scas hlt les loop or sub mov in ljmp outsl xchg insb push repz in or and lock or push icebp and in lcall push pop sub adc mov jbe aaa or jl mov jno mov mov das dec popf lret xchg xchg cmpsl pusha test test mov xlat cmp movsb push (bad) adc push inc aaa scas cmp fstl aas (bad) stc inc (bad) popf mov lock or fdivr add sub cwtl imul aas les adc or xor sbb (bad) scas dec lcall jg out icebp inc pop mov les push popf or pop lret pop lock push aaa add mov cld xchg sbb std push mov decl dec nop and inc cmp movsb cltd call push xchg sarb cmp xchg or jae cmc lret or insb je sbb loope pushf mov daa jb addl into aam xor fstp popa daa fdivl fisubr cli hlt (bad) xor cmp ss fcompl inc cld popf stc mov (bad) sbb sbb nop leave push inc movsl jo jg lods cmpl popa or jle or aam mov add mov inc and jl scas test push xchg dec scas push jno leave sbb dec movmskps das fist sub fcompp cld pop icebp or inc inc or pop sub sub and repnz test repnz cmp les ficoml cltd (bad) or fiadd rorl lds push dec sahf mov or rol insb jecxz jl aaa jno jge xchg leave icebp and js or scas and xchg loopne sti adc sub add add or xlat fisubl or out mov add out sub (bad) into js cltd push jmp sub je lcall pop xchg std cmpsb xor sbb mov test nop (bad) jl pop jle enter insl xor outsl cmp sub mov sbb push inc cwtl inc cs xor and mov add xchg dec xchg inc aas in sub mov jb into cmc movsb add xchg inc xchg jge mov mov gs mov pushf les scas mov das je je or sti into js cmp jbe or mov or sbb out cmp mov push hlt testb cmpsl sbb and push push stos popl in xor sub les movntq hlt cwtl movsl jecxz dec jle gs cmp loope loopne pushf std pop pop enter dec testb out jl,pt and sub lds out popf jns es test xor mov sub popf out mov jmp movsl hlt adc mov mov add lds daa clc mov lods lret (bad) sbb push dec shl lcall pusha cmp add xchg add cmc movsl clc pop fwait lcall inc add rcll test das in lds inc pop dec xchg fdivl imul and xchg push stos add cmc pop das sbb test mov scas sbb rcll fisttp cmp add les je dec cmp jo out mov xchg and lret sub cs call repz rcrb addr16 push dec scas pop rolb xor add xchg scas jle lret or out jo or scas jp,pt (bad) (bad) je adc or hlt ret test ja je clc (bad) insb iret mov iret add mov ret mov mov push add and aaa pop jg xchg add and cmp xor lods xchg lods lret mov test pop cli jl dec jb dec push cmp jb add rcl movsb cmp pop out xchg or rcrb jb test out mov xor xor ficom pop lahf rcll or cmc into outsb data16 in mov xlat jns gs lods hlt mov add cmp test pop sub lds scas test adc add sbb ret inc push push inc jp leave jmp sbb scas dec jmp inc mov lret fbstp and imul stos je icebp dec pop cmpsl adc loope mov push (bad) repnz adc ret push insl cmp mov jno,pt call ds mov loopne pusha ret push dec xchg fwait enter or popa in jg sub lods (bad) cmc mov fistp test rorb dec sbb dec push push cmp inc xchg test ror xor xchg xchg and sub xorl cli mov cmpsb stc daa (bad) mov rep test cmp dec xchg jle inc je push inc mov dec or or or in fs inc lock std inc call and sti rcrb xchg sbb cmc in sbb xor or adc loopne sub lahf imull xor sbb cwtl mov adc xchg cltd in pop jb xor mov popf fs (bad) sub sub lretw enter mov push (bad) iret stos rclb push mov pop std dec or xchg mov and mov jo xor push xchg rcrb xor mov xor sub xchg xchg cmpsl test sbbl sbb add inc cmpsb ja add xchg lds push enter and es lods stos cmc mov inc sub arpl les add lret dec push xchg mov jle popf jl lahf ret aad fildl adc and push std inc pop mov lods sbb push or in dec add jecxz add in adc mov xchg (bad) dec add push stc test push sub jg (bad) jae lea jnp push adc cmp aam and repz sbb dec or or test int3 xchg cmp addr16 mov add jae cmpsb jg into mov loop lock jbe fmulp or call sarb ljmp xchg outsb sub cmc and mov fidivr mov adcl cmpl movl adc outsl cmp pop aam lcall or rcl rclb in (bad) jnp adc cmp mov cmp dec movsl bound or inc xchg out mov aad outsb or cltd sub aas cmp cltd sub add xchg incl jl xchg jnp xor mov mulw jnp jge ret call jg xchg push bound sbb ja ret mov cmp ja push ret and inc adc cltd in int3 mulb or popa and insb fiadd xchg jl fimull pop mov inc xor inc adc fimull pop sbb nop jle sbb lock jle push jl or pusha add xchg outsb jl loopne in mov xchg hlt loop test sbbb xlat pop sbb lods incb push out ret insl jne add sub push lcall dec adc ja subl lcall sbb in jno dec sarl daa dec adc imul sbb pop pop inc xor dec adc add and pop jle mov mov mov lds std pop arpl mov adc sub cmpb add in xchg sub les adc inc jo lahf movsb cmp fmull mov sbb mov ds jl add lods add ds mov out cmp pop and xor shr xchg cli daa dec popa bound in jb mov sub sbb xchg outsl sub test and hlt mov mov call (bad) push pop pop push stos subb xchg inc std mov repnz cmc sti push (bad) mov ljmp test adc sub or decl xchg gs and or mov mov in aam ret ja into test sahf sub nop sub lds dec dec mov mov pop push nop push ret je addb and xchg pop add popa test adc std xchg cmc loopne and jle fcomps and xor dec or out cmpsl fcomps add jp popf fsubl adc rclb pop ss mov mov loope fwait cltd mov insb add adc arpl cwtl (bad) adc rorb push data16 lods sub and add cmp xor sahf push inc mov cmc sub mov inc (bad) test inc js inc inc and add mov cmp sahf pop popl push adc jno add mov (bad) xor mov dec xchg dec and sbb mov sub push out aas or aam pop icebp loope mov ds incb pop add into push xor xchg or cltd insb xchg lahf sbb mov mov in clc add pop mov pop sbb int3 movb lea adc jae in ror xor or xchg mov cmp out insb in xchg dec imul adc cmc adc cld mov inc pop adc sbb inc pop add sub ja (bad) ss fisub cmc xchg push aas lods xor sbb test push pusha add (bad) adc pop mov jge xchg jmp es (bad) std ds pop sbb cmpl dec out int3 mov or (bad) mov or sbb or dec inc mov xchg xchg inc pop dec cli insb andb enter xchg pop add ror jns sub mov and out jg dec mov mov dec sbb aas adc mov pop mov xchg xor cmc scas cmpsb inc cmc jl test or mov sbb nop pop mov out xor cmp push stos jle popa inc cmp and imul movb cwtl adc dec lock cmpsb xchg (bad) xlat out xchg je mov pop lret sub (bad) mov stos (bad) xlat int3 lcall xor mov jb or das xchg (bad) scas stos js aas pop inc iret loopne cmp xor (bad) xor xor ror mov les cmp nop es pop xor (bad) or clc pop push cmc sub sub roll shr mov xor sub lds js lds (bad) negb mov call (bad) pop test cmp and fldcw sub add cmp fwait jecxz sbb icebp sbb add jae fs dec arpl jo test cli call (bad) repz cmp sti in (bad) lods das scas in ret jno mov add xchg sti int3 mov test data16 iret xor adc xchg jno mull add push aaa adc dec lock mov xor out push adc dec stos lret sbb cmp and repnz mov pusha and loop out xchg and add mov xchg sub lcall arpl sub mov js sub inc pop xor sbb arpl jns int3 jg (bad) (bad) loop (bad) inc test jb (bad) out mov dec xchg jg ror or jnp lock inc fstpl and push push and insb push sbb push lods test or lret ds cli inc push inc push pusha ds inc je rcrl adc inc push in jnp in (bad) (bad) loopne ret scas in test jecxz push mov arpl adc and and loop loop nop fstpt das rolb jbe ss enter mov pop cmp pop hlt pop cmpsb mov stos das push clc xchg adc xchg jne lea loopne data16 mov rorl lods mull jge mov in mov jbe push loop push cmp dec mov xchg (bad) cli add and or push inc sub loop mov lcall loopne pop push fcom push lahf mov jne add ret add idivb test mulb outsl in sub loopne ret xchg outsb ss (bad) clc je and xor push jo mov and aaa cwtl imul int cmc xlat hlt ficompl fsubs dec adc inc mov add in mulb xor mov push adc jo add das jbe add cltd lea push movsb hlt lods ret mov xchg pop xchg in ja xor add and mov hlt xor (bad) dec xchg fwait mov test and cmp hlt xchg jmp jecxz andl shlb jnp and outsl sti and jle aaa add lret add cmp js mov out jo mov xchg int or cmp push loopne jl jno adc sub add lds scas add and mov cmp je test adc and repnz call rorl cmp mov into xlat rcl add repz lahf es and (bad) into das dec mov pop adc lret rcrl sbbl push loopne push adc les adc (bad) shl call xchg xor push dec xchg gs mov (bad) loop mov mov (bad) lret inc mov xor xor cmc jnp ljmp leave cli adc fidiv loop (bad) inc add mov hlt popf mov (bad) push enter xchg pop test cmc addl movsl lahf push adcb sbb inc (bad) mov mov push pop lods mov pop out outsl sbb data16 outsb lods lock adc adc movsb ret jmp imul dec sub gs mov in ss loope test pop es xor mov or add jbe sub inc add mov (bad) jg xchg pop inc lock and push xor add sahf xor sub orb in iret sub sahf dec (bad) psraw adc or test fstl je in test or push ret sub cmp lods nop adc or je mov adc scas (bad) mov sub sbb jl outsb mov mov cmpsb mov and cmc xor sub jb mov inc cmpsl dec mov clc pushf icebp dec or enter push jp test jo jb and xor pcmpeqb jbe xor jo lret and out mov mov in and pop jp sub cmpsl outsb adcl adc fiadd (bad) fistp xchg inc or pop or pop sbb shll sbb and loopne cmp rcr (bad) jp lret int test out add out in movd dec or push outsb or jbe sbb push jp repnz xchg aas inc pop lock cmp mov adc add jne and and push cwtl inc push test pop orl sub inc orb test add outsb icebp mov jno mov popa dec xor fstl or aam inc lea lods out add pushf mov mov push addr16 or cli data16 mov lds (bad) lock sbb sbb loopne adc inc sbb add (bad) adc or jmp movsb pop and cmp sbb test mov lahf lea inc mov repnz imul (bad) arpl test jb je in and sbb stos jo bnd sbb mov test loopne cs les lahf je jb movsb jmp lret cli mov sub je sub loope (bad) hlt push mov int xchg mov cmp add or ret fistpll arpl popa jge vmread pop (bad) shll out (bad) push leave jmp push aad sub je push into int3 movsb inc jno mov fsubs mov gs int3 sub test fcoml je fs fdivs add shrb jge ss mov test push add push arpl sub sub out lea (bad) insb call loope cmp and outsl add jmp xchg aam xor out jecxz add (bad) repz jmp arpl test sub inc mov scas rcrb fbstp (bad) hlt pop xchg and add (bad) xor add push sub fld mov addl sar stc add sub dec loope (bad) mov jno cli mov cld leave sbb notl je cli lock mov jmp in int and int roll outsb xchg insl dec mov sub add cmc test jge add pop mov shrb xchg pushf cmpsb or or insb call xchg fs (bad) or push or mov sbb cmp hlt call and mov dec shrb ficomp fs inc pop aaa add mov mov sarb jne,pn xor adc leave or or lds mov sar adc push push cmpsl inc repnz or add adc adc pop dec or rcrl pop push or outsl adc sbb adc ds mov push fisubr decb push (bad) ds and push cmp inc and adc mov syscall js or add test inc iret jge mov fiaddl pop or lods add add pusha jg cmc or out xor push jo mov xorl mov cmp test je add xor mov out movsb mov pop lock dec lds pusha enter jle mov xchg xlat adc ljmp mov cmp jle jbe adc das xchg addb (bad) cmc mov push in pop sbb bound test roll rcr jne stos cmp adc mov dec add lret or adc test pushf xor pop adc add mov das cmp and lret int3 jne sbb xlat cmp inc dec inc pop or adc bound sub test mov mov pop aaa mov push or mov and stc jle or pop (bad) or or das pop jmp xor mov hlt dec jb loope xchg sbb cmp std hlt mov jae imul pop mov test fcompl dec and pop fnstcw rorl fiadd test adc and mov or sub lea cmc sbb lock lods add inc cmc add in push sub and add in shl decl (bad) mov inc insl hlt nop and subb lock call js sahf addr16 xchg in cmc lods aad imul inc faddl xor fwait or xor mov mov inc dec ljmp je or cmp mov inc mov mov iret xchg mov ret sub or cmc andl pop pop jge outsb ds pop mov pop push (bad) mov idivl fwait leave das ja add xor les insl jmp dec xchg stos (bad) (bad) pusha push cwtl in push push lahf or mulb mov frstor leave fwait (bad) xor mov xor data16 xchg mov fsubl icebp fmuls push loopne cwtl pop push xchg adc or add add mov or mov add xchg loope xchg adc outsb mov mov pushf shll mov jns push xor add test add mov test or inc and xchg rcll push inc sub inc clc decb es pop test adc xchg adc jle mov es adc adc cmc or push test dec mov lock dec push rcl scas cmpl lret mov nop mov mov pop or movsl push aam or wrmsr rcrl sbb sbbl or rorb fs daa pop pop cmpsb mov out andl xor jge pop sub dec scas jns scas aam lea jg jbe std adc adc adc adc adc pop (bad) stc xor and loopne mov in add add bound or sti inc mov sahf ja or inc js fs andl adc cmc sbb xchg popa lods xchg xchg test xchg adc jmp in mov (bad) out outsb pop std dec scas lods je jno sub mov dec popf push lret cltd xchg push push mov je pushf or pop or and mov lods clc push push push sbb push xchg push pushf lods lock sub xchg in xor xchg xchg xor adc in mov adc test nop cmpsb je insb adc mov enter stos inc sbb aam cmc sub stos xor ss xchg adc lods out sub cmpsl movsl scas stos movsb pushf test (bad) call xor xchg mov ja,pt jae xchg sti loopne push add pop xor push int3 pop xchg sti std sub popl or imul mov mov shlb push test (bad) lret js clc (bad) stc scas cvtps2pd pop lret jb adc js (bad) (bad) xor cwtl data16 cmc xor mov sub jg loopne add stc aaa movsb add or sbb fnop pop mov cmp xchg icebp movsl fldl adc mov outsl mov sarb and inc mov cltd test nop xchg cmpsb adc pop cmpsb pop pop xchg jl fmull add xor js mov push inc push lea dec out sub adc (bad) sbb pop mov cltd pop out lds jb enter inc xchg daa sbb add out leave mov pop out jae ror sub xchg mov stc xchg in lock mov int3 mov ret xchg mov (bad) mov inc add cmp addb je sahf or test jnp push popa rcr das sub data16 in imul insl pop pusha or loopne das scas lea cmp jg test loopne addr16 jb and sbb je pop push scas test (bad) cltd cwtl ja pop cmp sub (bad) scas mov cmc outsb cs fnop dec adc test dec xchg rorb sub push aad push adc sti push xchg pop pop (bad) jb xor or aam pusha mov fdivrl mov push mov or pushf jg rolb pop mov jg add adc test adc enter jbe mov mov lret xor cwtl fs call cs sub sub call cmp insb test mov xor jle loope cmp popf push mov lods cmp adc or add insb shrl clc leave jmp das cmc jno movsl fstpl or push xchg movsl fnstsw out je mov sbb hlt outsb ss in cmp loop std cwtl mov stos nop add sub inc test jmp lock in test inc aaa add fs loop xor lods hlt movsb jge mov jb sbb arpl adc and sbbl iret jb xor popf jl fs or push mov popf aad and lods or adc add adc enter nop clc dec push fs or or or inc and or cmpsb mov cmpsl mov scas and mov addb (bad) push jmp std out inc je,pn inc mov jp jo popa jmp sbb xchg jno cld pop (bad) lds add xchg add lea call pop xor jmp adc sbb rcrl xor mov nop inc push outsl hlt push add in push lds jae mov mov mov push dec mov cmpsl or add or insb xor pop test sti popa or mov inc add popf pop push sub bound popf loop cmp jmp (bad) lds dec repz sub stos add loopne iret sbb (bad) es ss sub insb jo les test popa rorb pop push push ja push pusha cli pop mov cmp push pop outsb pop aaa insl jns cmp xchg or jp fdivr xor gs out mov imull cmp in cmc mov mov notl icebp outsb jl loopne clc les lahf (bad) mov inc loopne lds sti popa fcoms xor sbbb bound test add loope icebp or outsl or inc aas sub cmp in js cld sar (bad) stc jl jle in add mov nop xchg push cmpl inc (bad) cld add jae movb xchg lcall mov cmp jl push jne icebp push xchg pop jb jno mov xchg mov jmp add xor add jmp sbb in inc mov rcrb movsb jno cli cwtl sbb out mov sbb cltd imul sbb in aam add jecxz mov out ret and cltd (bad) in xchg insb call loopne mov xchg test popa push adc pop fdivl pop adc mov repnz cmpsb leave popa rolb sbb (bad) mov loopne mov dec shrb sub pop mov pop xchg sbbl jge or mov push push jp or add jbe jo add jl loopne jns xchg rorb xor mov jl sbb out into jnp cmpsl scas sbb sub sub xchg jo pop iret ds popf xchg jmp dec add lret sbb push lea je pusha call and inc sbb divl pop sarl xchg push cld scas adc pop lea xchg xor dec scas sub jp addr16 sub mov and fs xchg xchg push daa jmp lods imul loop dec decl or dec int das fwait mov lret sub jbe shr pop rcl cmp jb cmp pop (bad) neg fwait mov fdivrl push and jle mov sbb lods test inc ret test xor sub xor adc popa cmp lahf xor loopw fsubs cs dec cmp cs dec fldcw lods mov add cmp cmovp loopne push (bad) cmp mov mov call xor jmp xchg pushl lahf movl not movsbw cwtl not lea jmp lea jae jmp jmp movl call lock jg into or rcr lods popf fucomp rcll rol mov mov lock test dec cmp add mov mov pusha popf push inc xor push cmp pusha in xor sbb out add arpl sbb and mov mov mov fiaddl jmp push sbb aad (bad) rcl pushf push sbb leave (bad) lock adcb cmp call sub cmp mov stc adc lret testl fnsave push bound xchg into insl notl mov fwait mov mov inc std dec add add shld call lea jne pushf mov jmp jne gs xor fs insb add test (bad) (bad) (bad) jmp fmuls and orb lock pop or mov dec jbe adc and xchg (bad) mov add sbb popa sbb push or (bad) leave mov add test xchg add ret addb pop and xorb mov sub add rcl rol jo add nop aas inc dec push mov sarl insl test jg add inc sub sbb inc and pushf push jb or xchg lods sub add insl das mov scas mov inc sbb add insb outsl jo sbbl pop cmp pop inc mov mov mov xor ss aaa mov mov add mov call mov and daa cmpsl sub stos sub lods cmpb push aam mov inc dec mov repnz shl pop rcrl cmp mov addb pusha jne pushf cwtl jbe insb bnd pusha inc pop mov pop push add cmpb enter stos or push inc popl or cmp ds aas xor mov jg xor sub sub out out je outsl adc jo loope pushf xor inc (bad) xchg shlb xorl lahf aas popf add mov or xorb xorb sbb jbe mov cli mov add inc mov in rolb adc imul stc pop pop xchg addl in inc add cld cmp adc sarl (bad) lods add push adc mov outsb in add inc lahf sti add push push add jne xor sub mov push imul roll add dec push or dec (bad) lahf into jo cltd test xchg pop popf adc fildl fnsave mov in mov sub adc xchg add xchg mov lret sahf mov sbb es add inc sub or std push ret cmc inc mov cmpsl xchg xor mov (bad) mov testl mov jl jp,pn push in dec jmp or dec inc add mov orl inc add aam xor movb add dec cmc sub sbb mov xchg push jns mov xorl daa push fdiv imul neg cmp add incl xchg (bad) movsl sti lcall mov push adc push xchg mov add (bad) roll scas lahf stos add fdivrs pop stos add in sbb cmc adc jno call mov insl bound movsl adc push jmp push add fimull add mov bound (bad) ja push inc addb adc xor jbe add push subb adc cmp and sub inc mov inc add mov int icebp jno call adcl add enter dec fwait mov loopne and or not cmp ljmp sub jg mov mov inc cmpsl and fdivs test sub inc add out fucom insl cmp add jle (bad) aam jecxz mov popf and mov sbb jo in inc jmp inc cli (bad) jl ss mov cmp loope scas push aam add icebp je xor pop ret mov fs pushf stc cmp lock push inc add pop dec jp push (bad) (bad) inc testb movsb add xlat outsl mov call mov cmp leave or dec add jns push add out adc js mov rcl mov jge add push fdivp jnp sbb pop add dec xchg or testl test and fistpll xchg mov mov adc dec push lods jbe (bad) test push movsb in jnp add insl push stos dec jno popl jp dec les lret sbb push xchg lea inc popf loopne sbb cwtl push out js fstl mov mov inc sarb pop lods outsl jecxz test pop imul pop paddw and fwait xor mov jns inc popa clc add push adc or out add jg lret dec into mov and (bad) mov add movsb sbb test xchg xchg js inc jno mov dec mov mov xchg les or fwait cmp mov stos cmp imul icebp mov jbe divl jg add cmp movups (bad) std test xor jl xor notl jne jb pop add pop xlat movsl js add push sub mov sbb int3 mov cmc add pushf rorb xor inc add pop mov imul adcl push (bad) jnp popf call mov clc add sub jno arpl jg sbb add (bad) imul pop push repz xchg jo push pop sub aad int3 (bad) enter fisttpll lock add mov fdivp fdiv outsl or les js pop lds lods cmp into xlat jecxz (bad) sub mov push es add mulb cli or add mov fistpll push cmp cmc jbe pusha push (bad) dec add int js roll cs outsl repz imul push push ljmp dec pop or das xchg jecxz vorps jge jmp sti lret subb ret add add sbb frstor jge decb pop stos lahf and fs out jle orb dec daa lods xor jle xor lahf sbb adc dec int fidivl add rcl hlt jle dec test sbb (bad) testb or add jae test mov sub cmpsl lea jmp sbb push inc xchg add mov cmpsl dec fistl add xchg xor inc mov aaa add rorb popa xchg daa xchg add jb das jecxz jmp add mov imul mov sbb cmpsb sbb mov push shrb xchg ja rcl loopne add enter ds lret sbbl pop sbb sub lods fstps stc push cltd icebp jmp into mov lea ljmp pop push frstor jae loope adc lods mov add cmc mov add pop (bad) mull or lock mov push (bad) mov fild xor mov int3 mov faddl mov xor mov pop xchg mov andl pop lods push jb add pop sarl mov (bad) adc xchg (bad) and inc lret hlt aaa cmpsb imull iret sbb incb add add faddl xor cmpsl jecxz popf (bad) lock int cmpsb jge inc jo lcall stc add pop daa subl adc (bad) add popf xchg sub or sbb shrb xor sub or push popf test rcrl sub mov enter pop cmp orl lcall inc insl jbe xchg pop jmp inc mov in mov pusha vaddsd cmpl pop bnd aam leave xor xor mov aaa mov mov xchg dec pusha pushl or mov (bad) notb clc add jg dec ljmp insl imul or add xchg out test imul pop cmp adc repz cld add cmpsb fidiv out jns aad addr16 in mov pop ret add fwait out add adc adc (bad) push sub and and or push mov cmp out add adc ja jp in xor cmp inc cwtl iret aaa add cmp in sbbl popa dec imul lods xor push pusha cmp leave mov add out dec mov sbb in jmp jl jnp add mov mov inc lret ja add out ret mov pop add mov fnop mov ds push or cmp push and pop mov insb insl add leave imul adcl inc mov add fldl mov ret cwtl rorl pop fdivrl mov inc lock mov xor mov add mov scas in in cmp add inc (bad) inc addr16 cld sub loopne push add rcrl mov or push movsb mov xor push jl enter addr16 in add repnz jle adc pop mov (bad) je cmp out test add nop jle cmc sbb jp into divb pop pop jmp popa mov inc jne in add scas sbb add xchg add bound ret je imulb mov xor fpatan add (bad) or dec flds sbb movsl lret movsb sub jecxz or mov pop mov enter dec cld (bad) pusha add es insb sbb andl (bad) push loop ret cmpsl xchg add test pushf popf add cmc mov xchg adc xchg sub or stos mov mov icebp push (bad) cli push std push mov jmp cs cmp dec jb test js xor pop sub adc sbb icebp cmpl and mov xchg jo scas add daa imul sbb jl ja mov add and add lods dec adc inc pusha push insb mov hlt pop push fs pop xlat add mov movsb push (bad) ss shll nop aas jo subl jl mov xorl push push in xchg repnz push jb,pn add sub lds add mov outsl sti sbb cmp pop jg add cmp adc shl andb not fistl mov pusha add fild movsl xchg sti mov insb lods mov imul jno pop std vmread mov pop inc pop adc sbb shlb sbb add push add out sbb adc sbb add fistp cmp push xchg mov ja push xor lea pop dec nop and cmp push cli int inc imul ret iret push xchg ljmp xor jl (bad) cmp sub pusha pop jae sbb cmp mov cli in aad int3 aam xchg push xrelease push rcrb mov aam jns add mov xchg out pop jge js pop inc dec add ret into ja data16 imul sarl push clc dec add inc lea jnp jne pop out fild stc mov lcall mov pop pop pop jge lret aam andb add test jnp repnz or dec notl jp dec in mov inc imul add fidivrl add rcll cmpsb fwait sub or pop mov add lock adc sahf push push ret mov std lock or jle pop cmpl enter lret adc add decb fs cmpl pop xor sbb subb aad mov jne roll ss xchg ret (bad) sbb repz aas and (bad) cmpb jo inc xor sahf mov dec loop pop aas add mov mov sub mov in jg add (bad) jmp sarl ja sbb vmovq lret sbb in pushf dec mov sub push lods sbbb push (bad) cmpsl loopne test inc adc add lock jno cld or jge lds cmpl lods aad adc inc jge add das mov andl add dec and out dec je xor loope fs jp add pop or pusha jb xchg add dec push lods leave ja loopne sub pop push jp pop add imul push adc loope sahf sbb mov jae dec cmp cmp or out faddl not adc dec jecxz in xchg sub or (bad) rolb popa mov mov lods mov sbb fs or xor inc xor add imul stc or fwait push pop insl data16 mov gs sub sub cwtl icebp add or mov int3 pusha mov testb dec push out test sbb sahf incb clc dec mov xor je mov imul ljmp and shll add add adc out sub (bad) data16 in sarl push add or into push jbe ds hlt divl xor ljmp repnz cmp cmpl test aas mov add lods movsb lret mov lahf xchg add adcb jle popa add mov pop fwait (bad) (bad) or adc xor push in (bad) sti sahf lcall gs outsl mov xor rolb dec sub lea js push pop pop lods (bad) subl fs adc dec jno mov std pop mov dec movsl dec mov mov xor std dec add test hlt adc int3 addl pop jno je dec and test scas push jae add sub out jb jge subb out lret test mov mov movd rorb add arpl or sub popf mov or sub add mov bound add push xlat rcr ret adc jo jg add push mull call add cmp push test aaa inc mov lea cmp or cli mov mov pop pusha mov mov push pop jmp xlat sub push nopl push mov scas adc lods movsb add jle es hlt enter xchg or rcrl jg add mov stc and xor push jbe pusha jns push jecxz jge xchg icebp push pop xorl aad jno test sub sbb in jo add or dec into and cmp popf outsb fildl ljmp add mov out ret sbb mov add dec ret ret xchg jbe out sub xchg sar adc cmpsb inc fdiv pop mov add pop stos add rolb xor adc and or (bad) mov and icebp xor add iret mov fdivrl fcmovnb add (bad) adc adc or sub (bad) rcl (bad) rolb sbb or rcl cmp jg (bad) aad lds jne adc cmp stos stos fldt sub ljmp cld test orl pop cmp adc jecxz out sbb imul add dec rcll ret mov lcall mov daa insl push or into mov cltd and and ds call (bad) enter and (bad) outsl add xchg sbb data16 xchg js add sub aas aam out push dec xchg or add jecxz inc pop stos push dec lahf mov add mov stos nop xchg sub pop xchg jg push lahf push xchg mov fsubrl clc test jp add inc inc movb insl mov js mov or inc or cmpb sub xchg push add stc test mov insb jb jmp pop sbbl (bad) icebp insl (bad) add or add mov out cmpsl and mov xor or push xor in add push hlt in add cmp and sahf adc mov scas mov jne add mov clc imul and xchg mov fimul mov loop out out (bad) aas mov stc cmp adc jp (bad) xchg sbb inc mov cmp sub pop scas cmpsl aad loope sbb ds xor rcrl out mov or push (bad) lock ss (bad) hlt call roll mov mov (bad) (bad) lock fdivs sbb lahf cwtl std push test inc (bad) loop mov adc test jne add adc lock add aaa mov pop sbb xor jmp call mov push in inc sub cmc movsl test pop xchg sar not and jecxz fildll pop add inc ja dec int ja outsl aam notb sbb jecxz notl cmp (bad) xchg push imul in jp fnsave fldenv mov lock lret and mov (bad) mov or je sub xor inc mov into lock lahf sbb dec rcr cwtl jmp mov pop fisttp or test xchg dec push adc and ds loopne sar mov pushf mov push aam or push mov push or addr16 daa cld cwtl aas adc or not xchg movl pop mov bswap movsbw mov mov movb mov movzbl pop push pushf pushl ret mov lea call clc test pusha push cmp pushl call pusha mov call pushf inc jmp test push pushf pusha lea je bt bt clc sub test push clc bt cmp pusha lea ja clc pusha pushl imul call call arpl aaa in inc ret mov add cmpsl push adc pop arpl xor (bad) cld add scas ret dec je rcrl mov mov (bad) daa xchg sbbb mov mov jg sub pop out nop ficompl pop mov fdiv rclb jle xor fnstenv ljmp jmp daa push icebp lods xor lret cmc mov cli neg orps repnz pop loope sbb and mov jne clc sub mov mov xlat cmp jl lahf repnz sub mov cmp hlt test mov sub dec pop and cltd xor mov push jbe jmp popa in or push call adc pusha lea jae push lea jne pusha pushf push stos pushl lea jmp push jb ja or movsb lods hlt cmc fdivr movsb lea cld imul shrb test sarb cli imul or mov mov dec enter dec jbe rorb mov sbb ret psrad ljmp mov jne stos add xchg sub jp xor icebp (bad) push and loopne ret or cmpsl out aaa dec out ja ljmp repz jnp mov cmc sbb xchg jmp not mov out inc jp mov fcomp sbb or addr16 mov mov out jecxz or xor (bad) xchg mov mov and lea add ljmp in or in jecxz rcrb fiaddl cld jl fwait in out ljmp sbb sub adc fidiv roll and add dec (bad) stc and jno pop mov sub outsl xchg mov popf adc pop pop sbb jmp push movsb sub jp or mov mov add stc insb in cmp sarl bound jbe scas cmp add seto call jmp xor inc xchg sub fstp out mulb les icebp pop jne inc mov dec jmp repnz fidivl cmp bnd (bad) sbb adc pusha out jae js sbb lcall js xor rorb add int3 lret jl mov out lods rolb lods movsb loope icebp cmpsl pusha lock sbb (bad) (bad) and lahf mov enter cmc sbb jns lock jecxz hlt pop mov arpl icebp je jle xchg (bad) pop movsl jp mov adc pushf lea jae push pushf pushf lea jne jmp not dec rcr rol setbe push stos mov not mov lea jmp inc shr mov adc xchg sub jmp sub pushf lea call pushf lea jae cmp call icebp (bad) outsl mov or sub cmpsb jnp jmp xchg add stos scas ds addr16 ljmp add xlat pop mov repnz mov imul add add adc push sahf pop repnz mov cs fidivr adcb sti pop or outsb int pusha test jle sarb or lahf cltd outsb cli or jl stos push js cmp dec push insl movsb xlat lcall scas sub pop test outsl jae in cwtl (bad) fsubr jmp in xchg sbb imul xchg cs mov pushl push jno ja into dec cwtl pop clc mov or cltd pop (bad) ljmp sub and pushf lea call pushf pusha lea jmp clc or pushf lea je daa bsf xor lahf sub push inc inc mov btr not lea bsr mov sar push shr lea test bts dec lea mov stc bt pushf or push lea je xadd add movsbw cmp (bad) testl fisttp movsb movl xor jmp jge seta add mov rcr jmp pusha jmp inc call mov lea jbe pushf mov pop lea mov movzbw movb mov jmp pushf mov lea jbe xadd mov rcl shrd sbb add call or sbb mov stos pop adc es outsl mov (bad) dec jae inc dec mov jle ljmp mov xchg ret jnp idivb out ret push aad orb shr xchg bound sbb and push jne addb push es cld (bad) aad repnz idiv popa adc ret insb jp xchg xchg cmp (bad) stc cwtl in mov out int3 xchg divb inc and push ss xor in pop lret adc push pop xor icebp out jbe js divb es xor sbb daa lcall pop dec es pop movsl push sbb sub jmp mov dec pushf jmp pusha movw call loopne or in or push fwait rcll (bad) outsl push cmp xor add fnstenv inc loope sub sbb insb out mov lock xchg inc addr16 (bad) mov push pop movsb aad enter xchg inc test sbb fs or aas lahf sbb scas jno rol or xor xor push lock ret pop xor add test mov jne and mov and xchg mov push cmp mov jnp push lds adc xchg inc scas jne dec pop cs mov adc jge gs or pop lods or mov sbb cmpsl xchg adc (bad) lods and xchg mov hlt xor out (bad) fcomi pop mov in mov xor cmp xor cmp pop mov outsl fwait enter (bad) mov xor imul data16 sbb pop hlt lods jae std into pop icebp add cmp imul cmpsb out jns push out je fwait push cwtl fiaddl stc data16 popf ret dec xchg loopne imul pop stos and out hlt es addl cltd jle scas push add arpl cmp jmp cmc jmp pusha call shld mov das and push bt xor push push mov aaa movsbw shr mov stc push test pushf push lea je dec mov rcl or add and add mov clc push movw test push push call shll test push stc (bad) movsl jp fisub dec xor popa jbe push push popa inc jno stc cltd jns data16 lahf ret test adc sub dec sti mov fstps jno idivb jg mov cs inc jo ja xchg push push xchg (bad) sarb aam jbe adc addr16 cmpsb pop add jmp mov fnstcw sarb aam push mov les pop pop jecxz mov fadds fcmovnu jns lea xchg arpl sbb repnz mov pop aam inc clc insb lret push add cmpsl in mov add jno cmp mov movsl lret out or movsl xchg cld cli jo and nop mov mov stc add push into push or lahf arpl mov mov js push mov add (bad) push sub aam iret add (bad) mov stc fs pop xor imul mov adc and andl adc push mov mov xchg and dec in sbb aad inc rcl aas iret push jle mov jle xchg out inc test lds sahf fucom push popf aas jp push push jnp cmp jge adc and mov sub test mov mov pop in pop ja shl (bad) push stc push loop in ss and out add sbb mov xchg loope mov xor or pop insl and or (bad) ljmp sbb sub (bad) mov or nop mov xchg ffree and sahf int3 add mov les ret adc stos jmp je daa arpl xchg mov mov adc and jae dec dec jp inc mov pushf inc mov jmp pushf lea je push pusha lea jmp call and sub call dec es mov mov daa cmpsl jae fdivrs addl nop or out rorl ret cmpsb cwtl dec xor pop mov dec jno and shlb push sahf (bad) test xor repnz rorb sub test andl mov out ret data16 lods cmp mov test call pushf cmp pushf call pop lahf roll or aaa push mov lds dec inc imul sbb mov int data16 mov ficoml xchg iret inc (bad) mov xchg xchg cmp or mov pop push insl and xchg imul lahf imull mov and xchg enter mov or push (bad) out outsb mov nop fwait or out gs in dec pop dec jl addr16 sti (bad) push popa inc lds dec insl pop stos cltd rcr call (bad) les das hlt (bad) (bad) out adc mov and out imulb icebp in adc pop push dec pop pop cltd adc sub into inc movsl adc out dec int3 call not push call mov jmp xchg mov mov or aad cltd pop dec gs enter xor mov add jne sti pop inc cwtl add insb dec pop pop jae xor mov lock mov push (bad) or pcmpgtb rolb (bad) push bound fsubrs in jb sub jmp mov mov mov (bad) push inc xchg and cs lock das cli jne sti mov movsl push lock xchg sbb pop and xchg js or mov inc mov mov fnop xchg test ret out cs mov push iret sub sti jns push sub lock sbb dec push adc stos adc push sbbb sub pop jb push cli add sbb loop xor (bad) call pusha mov xchg int fisub cli push lods int jb fwait arpl fstpt hlt fcmovnb lret sbb rcr and push sahf xchg pop and (bad) loop or in (bad) mov push ret loope adc sbb iret jp ja dec popa test popa rorb lock add fwait sbb push adc lock sub sub lea jne not not pushfw jmp jmp into fs or push nop das clc pop cli and (bad) lret ljmp mov xor mov inc repnz aam orl jns int (bad) hlt call std xor cmp sub sahf xchg imul cmp cs jle add sbb mov les push outsb mov mov (bad) leave or cs fs push xchg inc lds test jg lods jno outsb mull jnp sbb xchg xchg add idiv pushf das xchg cmp jle hlt inc sbb sub les rcrl sub cmc inc andl pop sarl push cmp call shr ss mov ror dec mov sbb shl cmp sub mov call push push sub hlt or iret inc push imul push cltd add sbb cmp popa sahf and cmc gs xchg rolb incb adc call popf hlt std cltd push test xor sbb cltd mov push test jo add mov jbe push mov xchg push call mov aad mov dec gs xor lret adc je popf xor loopne mov pusha into cmp sarb (bad) inc mov dec sti xor fildl add out test inc mov lods call and or xchg push adc mov (bad) int jo jge aas sub sti clc cmp push cli cltd hlt cli cmp in push mov push sub lcall in test in (bad) int3 xlat pop or and fucomi fdivr ljmp sbb (bad) mov std sbb push fsts xor cltd cmp xor lea jae jmp call pop jle dec cmc or lret aam je sbb xchg cmp jg daa xor cwtl testl mov add mov push xor adc js ja dec out int3 jp es lahf sbb jnp push add mov cmpsb cmpsl mov imul sub (bad) into pusha cmp and lds jb xlat xchg adc orl xchg repnz insl xor cld mov pop ja inc and jo jae iret ljmp cmc push inc repnz cltd mov sti mov mov loopne lahf sbb mov mov test or xchg push jne,pt push mov ljmp not cmp movb mov xor jmp cmc clc cmp pushl jmp dec xchg (bad) or inc dec mov and sbb push test popf sbb arpl ret lret lahf pop fstpt push inc mov sub push push jp inc addr16 hlt sbb mov movsb push mov int and pop fistl fcmovnu fnstenv daa xor add sbb iret lahf mov addr16 sub lods mov cwtl jmp (bad) mov in xchg mov aaa hlt push mov mov lods sbb push sbb (bad) es lretw push sub xchg les jmp call jne popl sbb cli sub cmpsl jns in add or lcall or sbb adc mov push sbb mov pusha mov test aaa jno fcmovu xchg outsl imul ficomp sub pop ljmp lock imul in cwtl xchg (bad) push jae stos jl add (bad) addr16 xor mov pop push adcb mov pusha push idivl add in mov fdivs cmpb pop insb dec aad cmp cmpsl loop and xchg call push imul add sbb stos inc scas mov sub stc sub mov test jp xchg push xorl mov inc xor test jno adc cmpsl push lahf sbb ffree inc clc imul repnz loop adc testl stos pop (bad) adc jno jne add inc sbb or rcll nop sbb test gs or or adcb and and sub inc in add adc addb lods mov adc sbb adc xor push or sub mov or loopne loopne dec xchg push mov cltd mov and pop sbb sbb cltd mov aaa mov (bad) mov mov xchg xor mov adc loopne rolb add push sub push mov sbb cmp mov in push push movsl inc and aaa cmp mov mov mov cmc xor mov jg or stos test pop stos cltd mov sub mov mov dec addl enter outsb sti inc or sub push xchg test inc aaa pop lods adc mov or mov push xor test pop lds jo jbe jle add and or adc sbb push or mov test or adc and enter and xor cmp cmp ds enter and les dec adc push enter and les pop adc pusha enter and les insb adc jo jb je jbe les add add adc and fbld sub cmp dec adc push jp or movsb adc pop or push push push pusha or adc sbb es enter and and push les or adc enterw cwtl jl push insl enter push and scas jno push mov pop or sbb mov out dec mov adc pop or xchg mov movsb xchg or and xor cmp xchg xchg mov dec mov xor sbb or cmp push aaa movsl xchg mov inc mov dec les adc inc ss xor sahf mov jecxz add pusha nop out sahf xchg icebp or or jns add xchg movsb mov mov test lret push xor xchg mov xchg test adc test sub mov or adc xor test cmpsb adc mov and mov rcll mov test or cmp test hlt adc mov test push push mov rorl adc aad iret mov add andl cmp dec test and mov xor mov mov test adc mov mov xchg mov or cld cmc repnz dec fsubrl and xor cmpsb nop pop inc and fstpl jg mov adc (bad) mov cmp cli xor ffreep rclb fs cmp adc ret jmp mov mov dec adc (bad) xor sub mov or test push sti ja xor mov inc cmp dec (bad) push lcall dec and mov sub dec xor sub ss aas dec dec xor mov cltd pop xor sbb test push sbb push xor push sbb imul aaa in xchg fadds adc (bad) popf int3 pop sub popa mov in fwait mov and push imul cmp mov mov fisttpl pop mov adc fstl ret (bad) add dec or mov (bad) and jb push mov pop dec fs cmp add or jns mov cmp dec jg xchg add add ss push mov jecxz hlt arpl out mov and add cs scas scas bound add add sbb or xor lock lods xor sbb es pop test mov cmp add add xor push test push cmpl add add push add or xor or xor add sbb mov push sbb add stos xor ds sbb adc and enter push dec add gs pop repnz inc int3 adc push inc push and enter es push dec test lret adc jmp or adc or out ret xor arpl jl sbb cmp and out cltd dec xor mov outsb adc add pusha pop sbb pushf test pop (bad) or adc repnz xchg mov xor aam mov xchg push mov pop xchg lret xor jge sbb test outsl mov mov cmpsb bound lret adc insl sbb push xor lds adc push mov outsb mov or sub pop in inc ljmp test mov add push and mov cmp cmp pop and pop out test and inc mov adc xor push sbb and in mov in xor mov arpl dec jne and mov pop adc adc sub mov mov push push mov xchg and sbb sbb sub sbb ss add inc ret orb mov dec sub sub add mov pop outsb and stos inc mov inc mov sub movsb and and lret test les or and enter daa xchg adc inc imul sub outsl cmpsb das add sub adc insl and mov cmp xor lock inc test and cmp add add or and xor mov and pop adc mov mov or mov shll dec sbb sbb lret dec inc cmp or push mov sbb adc adc andl xor aam and xor mov fnstsw xor stos mov push adc push xor dec xor mov xor pop nop mov stos xchg mov xor adc rcrl xchg add or and mov aaa or cmp inc xor or or dec sub ds data16 mov add push adc mov sub int adc cmp xor xor dec or into add cmp and cmp divb xor inc sub push or mov and dec push push mov lret add sub and xchg push inc add or (bad) sbb pop lods xor adc stos les jp xor test inc adc dec les dec adc push enter and les jo jb je jbe js jp les add add enter and adc sbb mov sbb adc xor les or inc and lret push mov test pop adc pushw outsb or jle push jb adc sbb and sub les cmp cmp inc enter and push or pop and enter sbb jp repnz enter and cmp inc or sub add (bad) and or ret call cmpb and inc add mov adc push pusha inc rolb add inc ret inc les inc add inc (bad) dec enter add dec lret dec int3 dec int add dec iret push rclb push add push rcll aad add push xlat pop fcomps pop add pop fistpl fstpl ficomp pusha loopne loope add arpl fs in add addr16 call ljmp outsb add outsl out jo jno jb bnd je jne jbe divb js jns jp cli jnp jl jge jle (bad) jg add add addl test xchg add or mov add adc xchg adc add sbb pushf sbb test cmpsb add mov mov mov mov aaa mov mov add mov cs mov scas xor push mov mov inc stos inc mov and mov cmpsb daa add sub lods sub inc scas dec mov popa xor and cmp cmp add enter and dec les and enter and pusha adc and enter and insb les and enter and jl mov enter and or or and adc mov adc les or fbld mov and movlps and enter and nop les adc sbb nop adc cmp and inc adc adc push les and enter and adc adc jo pop or and fisub jl mov mov and and or mov enter and movsl les daa xchg call sub push and enter and sub adc and inc inc call cmp add mov andl dec nop add and les test xchg push mov xchg jb les xchg jle or mov push nop int3 mov adc enter and les or adc cmp mov inc and enter and push or enter and push xchg adc adc jbe xchg and out dec mov push les or xchg scas push and sub sbb enter and les and enter and pop adc and enter cli or mov adc and and mov adc and enter and and adc and enter and cmpsl les sub inc and enter and les adc enter and je rclb and mov orl or add enter and mov and or sub enter and mov inc or adc popf enter and les mov insb and add jp and add or adc and enter and or xor add enter and adc and enter and shlb push or adc or xchg add rorb or test les and enter and rorb adc add and les adcb outsb adc jp popf loopne dec mov enter add sbb enter and (bad) xor test cmp sbb inc and adc test pop adc sbb les push add add pusha add jg mov inc and push inc and inc and sbb sub add add and enter data16 xor test push inc test xchg xor pop movsl int3 push popf or je add adc rclb add xor sbb loopne push mov adc pop xor int3 sub loopne push aaa inc clc or inc clc sbb push or sub xor push mov xor loopne mov mov sbb repnz sbb and sbb xor push cmp jo lret fsts xchg push cmp mov in sbb scas insb jne and adc mov stos mov lret outsb push add mov xor int loop pusha inc test inc mov mov sbb mov mov nop jne mov jge test or jo int (bad) movsb sbb imul addr16 test mov mov and int push push cmpsb sub out sbb or test test sub or daa add xor sbb sub sub cmpsl int push push cmpsb stos push push sarb movsl cmp or jge fwait sbb or int (bad) hlt adc and push sub and cmpsb movsl and push inc and sub lods out add movsb aaa xor repnz xor in sub add sub add sub cmp leave mov in pop adc push stos sub push inc mov sbb int3 push cmp dec cmp dec push pop inc mov pushf push mov inc mov aam mov daa push xor sbb int3 jb adc xor lods out jo movsb cmp mov mov mov jle pop mov (bad) aaa cmp push cmp push cmp push push push mov dec mov pop add cmp mov sbb test sbb and sbb sub dec jae jnp sub and sub mov cmpsl jo mov sub pop push test sub inc xchg loop xchg inc pop movsb xor sub sub push mov xchg sbb sbb pop pop cltd pop jp cmp add pop pop dec xor mov js test insb daa mov add insb jge je push mov out mov sub jp sub jp dec stos mov or ds and ds add inc mov stos ds mov dec and ds and sub and test cmp and mov mov lret xor fdivrl xor inc inc cmp mov push sub jge scas sub and xchg sbb sub aam sub sub mov cmpsl es xor cld test xchg mov pop mov lods inc mov push sbb pop push cmp and adc stos cmpsl adc add out xchg and stos out xchg mov stos pop pusha test adc (bad) dec sbb xchg lods or and pop sub and xor dec sbb push add cmp push push or push sub dec cmpsl cmp adc popa push and bound and daa mov dec adc insl and enter and (bad) (bad) or out outsb enter and (bad) aam add add enter and les or enter and lret fdivrs xchg mov adc mov inc nop int3 inc nop mov xor adc and dec mov es add nop mov sbb mov ret insb add and push mov push sbb enter add adc adc nop daa (bad) ja push nop daa and and nop rcrl sub push enter and les pop adc loop dec adc push imul and enter mov movsb jmp sbb call out jle jmp add add enter and loopne push or sbb push enter and out les or adc jo cmp frstor inc les lock enter and les arpl inc bound into fsubrs adc ss and jo nop xor mov cmp bound es mov mov test adc or push enter and pop les or sbb es inc into fdivrs fwait mov nop mov xor nop daa in outsb mov ds bound ds xlat les sub xor cmpsl cld es adc push nop xor adc cmpsl mov push pop les sub adc es sub mov cmp push nop cmp ss cwtl int3 jp cmp xor sbb inc aas inc bound int3 push cwtl les push and adc nop mov sbb nop mov sbb scas pop nop xor mov les nop mov xor sahf cmp popf mov xchg nop inc jbe and inc fs into int3 dec mov and dec stos push push adc xor cmpsl bound mov test outsb nop (bad) aas bound es aas ficompl xchg nop sub cmp dec pop and mov dec or inc or iret and dec push push dec adc mov nop sub push inc mov sub push adc nop and ss enter and ficompl xchg nop lods es and dec fs xor push mov pop adc and enter and in jl jecxz or add adc inc sub icebp mov enter push mov adc and enter and lea fs dec int3 inc mov adc sub adc inc dec dec sbb push dec nop inc push dec adc dec inc push int3 pusha nop das mov mov ss and test jb imul es xor fsubs mov nop fcmovu push sbb dec adc mov sbb mov and orl cmp dec adc and inc les dec adc push enter and (bad) jne dec push push stos mov and push push cmp and push add faddl xor mov mov push mov pop cmp cs mov push jp push push mov jno dec add mov push nop or flds dec rcrl push mov pop inc sub sbb mov push lret mov mov mov push and fisttp dec jno int3 push mov or inc push cmp pushf push ss xchg mov daa gs and cmp test pop jp pop push adc push lods xor jno push xor shlb cmp xor cmp adc mov cmp pop push sub repz mov add dec push ret or sbb xor push insl or data16 pop push (bad) gs push push stos mov sbb nop mov or mov out sbb cmp push push test dec dec imul rolb jno dec test push ljmp mov mov lret or clc jno dec test jl movsl inc push push push out sbb repnz sbb mov jle daa xchg ds or popf push cmpsl xchg jbe es cmp lret dec adc add mov jecxz sbb adc call into dec push jmp xchg sub and movsl xchg mov mov cmp sbb mov xchg cmpsl bound cmp test push insl xchg sub imul aam push xchg push pop xchg jb adc jg or jge pop in add cmp lock inc insl mov push inc push jmp xchg sub out adc mov sbb xchg aaa aas shlb mov or dec dec frstor cwtl mov or cmp (bad) cwtl sbb movl cld pop leave push jo mov sub into inc ss lods xor xchg or push js and stos dec lahf xchg sbb push test in and imul bound lahf xchg jo clc mov adc push dec or pop add faddl mov mov xor xchg dec cmp push push dec call or daa repz pop in (bad) ss cwtl mov lahf xor out cltd scas and popa mov xchg xchg orb or (bad) and add push mov iret sub flds or sub or ds sbb sbb add cld addr16 arpl les lcall leave xchg stos inc (bad) xor imul jle sti int3 or iret aad or rcr outsb jns dec fild cmp cmp stos sub mov shr fadd xor push or sti sbb lret sbb mov cmp enter push fs (bad) loopne lret pusha add xor push insl xchg adc jl and hlt imul jl inc add sbb add popa pop and sub adc pusha add and and movsb and pop xchg ficoml mov mov cltd in mov mov popf mov mov addb add add (bad) (bad) push imul stos sahf lds test dec outsl push cmp lahf mov enter pushf pusha mov dec add call lods (bad) sti insb (bad) push lahf jo test adc pop sti jge lahf adc sar sbb add xchg sub or fimul mov pop push add push nop and loope cltd sbb lahf (bad) and in jl cmp cmp sub xlat sbb stc nop xor jbe (bad) dec fcomps jne push push pusha mov decb mov add jno mov pop add push bound mov iret mov loope shlb fistpl je push pusha (bad) jb test mov repnz and adc pop adc add rolb sub fstpl adc pop xchg add add jne pop lahf in pop inc loope cmc push add loopne and hlt add xchg add xor add rolb inc adc add int pusha lahf mov mov or push pop add shl adc (bad) cmp incl leave clc mov jg popa sbbb push cmc andl adcb mov xchg cli cmc test sub xor mov push push pop test add movsl pop loop and push jg adc test xor and test mov xchg mov jbe out rolb orl or arpl or jle dec negb add sub adc lahf out and push js loopne push dec pop inc adc cltd enter push jo addr16 xor sub xchg ret inc loopne adc sub pop data16 push add rcrb sbb lods in xor (bad) cmp pusha pop mov or adc cltd adc add add cmc cltd pop shrb fildl in mov mov lock or jae adc push add xchg lcall mov pop pop icebp add fiadd nop adc sbb enter jae dec and or add mov lahf test push enter adc add aad iret add mov mov lahf jb pop jns adc cwtl add outsb push dec adc cli cmc cmp popl or addl sbb adc jns sti mov test pop xchg test inc je or inc and arpl mov lea push nop sub fistpll add mov add js push imul inc into clc jnp decb add pop add pop adc dec lea mov mov cmp xchg nop mov push sbb aas inc pushl pop out rcl mov js adc pop push xchg pop sub inc and mov lahf cld (bad) push adc sbb mov mov icebp inc adc mov pop or mov cmpb add cmp loopne sbb xchg jne add fst or push jmp mov dec popa push sbb add test js insl sbb (bad) push mov in fadds js aam movb adc and bound xlat cmp mov cmp xchg loope xor xchg push ljmp mov mov xchg jo jb movb xor movl and bound mov jl lock (bad) cmp imul js daa movl and bound cmp cmp decb mov repz push popa sbb push xchg or xchg pusha adc dec add jo and bound cmp mov sbb addr16 js (bad) movl pusha mov cmp mov sbb mov jo movl sarl mov jo mov aaa xor xor mov sbb rcll mov pop mov xchg lret mov cmp mov mov xor mov (bad) or scas mov mov mov test les adc aaa cwtl dec mov mov mov imul aas pop inc adc mov adc and enter outsl adc add nop and pop int3 adc xchg mov cwtl mov adc and push les or adc push mov les test pop and enter and les mov push jno outsb or jb mov jbe adc jp xchg and jle xchg xchg inc jno jbe add push xor xlat xor inc push rcr movsl nop mov adc cltd sbb sbb cmpsl xlat gs mov mov rolb mov movsb cmpsb or daa push inc push mov pop sub sub popa aaa adc test push mov dec fwait add and mov lds test pushf sbb xchg mov mov mov jns enter sbb mov jae mov outsb lock mov jl loop xchg test lock test push das adc pop mov lds jno test jmp sub pop nop loop or test mov or fwait inc and ds mov xchg enter scas adc and adc jg add test outsl pop cmpsl (bad) cld jnp clc (bad) nop insb (bad) int xorb enter adc pop mov lds adc mov es add out pop add and sbb (bad) xchg fstl cltd sysexit adc (bad) (bad) jb adc mov jns dec sbb cld mov jns dec xchg nop cld int lock xchg dec fwait scas fisub lds jno or mov lds adc mov jns enter scas adc mov test mov cld add in jne adc mov inc ljmp sarb xchg andl test (bad) int3 daa mov mov or mov and leave mov test out mov cld pop mov push scas fwait clc and aaa mov ds clc adc pop mov jae hlt mov clc imul aaa mov sub pop (bad) gs add jbe sub icebp cld mov out mov imul pop cmpsb test pushf mov enter fwait mov mov mov mov (bad) out pop cmp jns mov xchg lods mov test inc jp adc mov cmpl enter scas adc mov jns call adc or jle aaa inc inc (bad) clc sbb aaa or mov fwait orb (bad) mov cltd test lahf pop mov test pop mov pop mov lds adc test test mov (bad) pop lods inc enter jb xor mov jnp fdivrs cld mov jns enter scas xor mov aad add push addr16 lcall outsl mov test mov pop mov ror imul mov scas cmp (bad) cmp test cmp test clc imul mov adc lods test rol scas adc mov jns enter out jno lods mov (bad) xchg leave scas fidivrl decl add mov push or (bad) or mov lds fucomip fisttpl jno enter xchg (bad) push nop clc mov push lahf in lret adc enter test and mov enter and mov lcall and out nop adc mov inc ja mov jb pushl (bad) dec or mov rorb (bad) sub daa mov xchg push xchg popa cltd inc sub xor insb or and add mov call outsl jg push cmpsl pop in mov clc add cmpsl xor je dec mov or sub leave js sbb or (bad) into adc test movsb sbb ja or mov sub call lods pop cwtl cmp test or call pop adc push xor xchg pop xchg pusha mov fisttpl mov (bad) or sub dec cmp fs mov pop lahf shlb push adc fldenv and sbb test dec xor sbb lea ret xor inc inc mov clc cmpsl push xor dec idivl xor or mov and pop dec xchg cmp or leave (bad) pop mov xchg cld stos or dec jge add or mov scas stos aad lds cld sbb cmp xchg push sbb inc push inc and out call dec cld lods pop test rorl nop push sbb push jmp or es mov gs xor movsl xor mov lods inc into jno add dec and sbb nop sub and push push xor cmp cmp mov and push push ja sub mov and and pop pop out cmpsb adc clc jp or cmp in add adc bound cmpsb adc movsl arpl stos out push (bad) jae and mov cmp mov dec test nop mov dec mov pop std cmpsb push xor int jbe addr16 pop pop rorb xor cs aas push mov add sbb fcmovbe or push dec xchg fs pop sub outsl adc inc push cld or cs cmpsb sub fnstenv ret adc ds dec pop sbb jno int ret cmp fs addr16 push push mov xchg imul call fnstcw test ficoml push or mov mov jge inc inc sbb test or and or dec push add push dec add call adc mov and sub cs enter mov mov (bad) hlt dec push imul or cmpsl push xchg pop sbb lods movsb xor add cltd jmp sbb out jb xor add inc in sbb (bad) out pop stos xor fiadd jnp test xor jno lock and outsb les mov imul (bad) sub push (bad) int sbb xor jno push xor idiv (bad) cwtl in cmp (bad) cmp dec sub addb inc xchg (bad) inc fucom (bad) mov and xchg xchg jp mov xchg adc pop shll mov adc outsb or fcompl sbb xchg cmpsb pop mov mov mov lods sub cmp sbb or les fnstenv outsb je add pop xorb bound add into insb (bad) repz repnz test push or adc mov jmp nop fwait pop and rclb cmp push jb adcl es call sbb mov adc lods mov adc or stos and (bad) or sub sbb or or pop (bad) or adc pushf in inc and xor mov lea add sub or mov in or pop or sub lea enter sahf and enter sbb subb mov sbb inc dec and push cwtl mov mov mov mov and and sbbl or cmp adc data16 xchg sub inc push sub xor fwait xor cld popa mov rclb xchg or aas inc mov sbb (bad) fmull sbb insb adc or pop push pop sub sbb les popf jnp sbb adc or cltd sbb pushf xchg inc popa push jg fdivrs rorl mov mov cmp adc xchg imul xchg mov xchg mov push (bad) add pop xor test insb sbb adc ds movl jno jae and call test and mov das das and ljmp cmp pop (bad) adc mov jp cmc and hlt xchg jp mov (bad) mov daa lds in lcall dec sbb push inc cmp dec fs das xor push aas or push aaa fs pop sbb inc test pop add rclb cs mov sub data16 dec pop test and hlt mov add ljmp add roll aad fcompl int3 xchg in adc xor push sub and les dec cwtl das test lcall and enter and jae jle or add and enter and les push adc outsl movb mov test adc and adc dec enter and les adc add test enter and cmp inc or and enter and les test adc sbb popa imul test xor lea pop xchg adc mov (bad) sub xor pop dec stc cwtl pop dec cmp add cs jne pushf pusha mov mov ret pop inc sub xchg notb cltd add mov rorl (bad) pop pusha and stos mov popf or mov jo pop stos jmp cmp pop xor pop add jle add dec adc dec and jle mov imul out fiadd mov push fstps mov jmp cmp inc out sahf inc push dec aas add loop xchg orl push mov pop push inc jae iret or jg in add inc xchg hlt xchg jmp add dec jge xchg aam add adc (bad) loop jge sbb pop adc add pusha loop sbbl sub bound sahf xchg pop out (bad) lret dec out pushf sbb scas dec dec mov add sbb mov (bad) xor ss std inc add dec xchg push or or (bad) test jnp or add out fiaddl dec mov add movsb cmc mov dec outsb add jl cs lods sub mov and (bad) and add push adc nop inc fdivrs add das js (bad) push add sti repnz lods aas flds enter jge pop jecxz push test rolb test sub add outsl cmp in movups popa add je cmpsl inc and cmp adc xor lods lods mov add push insl push mov and andl jl inc and xor rolb jo rcrb add jae mov and mov push aad mov out adc loopne cmp add nop fdivs test movl mov add sbb roll inc mov push add xchg ss add clc (bad) out les xchg and pusha push (bad) add and add lock cmpsb icebp or add mov scas add xchg inc cmp mov out jbe lock pop push roll out sbb add jae and push jle data16 pop mov push fildl dec test mov inc or add xor jmp in push add aad jge les bound mov test aaa rcll ljmp insl icebp mov out test push or xchg test add mov lods add cmc or sti stos and test mov lods dec jo (bad) jo cmpl push add sub cltd jecxz pop and dec push mov and pop adc int3 cmp pop mov mov rcl adc cmpsl cmp add stc jb and mov mov jl popa inc ljmp jo push jbe je fdivrs jo xchg sbb call sbbl xchg rcll mov adc inc movsl in add xchg inc imul and ficompl sahf ja insb imul insl pop xchg push jecxz pop ret stos adcl sarb and add add xor sbb andl gs push mov (bad) pop mov pusha jb push pop ja xlat inc in adc out fild dec xor cmpl add cli mov mov sub dec dec insb out repz dec cmp pusha and popf in inc pushf add sahf mov add jb (bad) jl enter shrb das mov mov pop test enter mov pop xor mov ja in add cmc dec dec mov pop mov (bad) jo mov dec imul push repnz pop mov jb add (bad) mov xor sbb jae std js rorb arpl jmp dec fcomps loope xchg movsl jo add jnp lea loop xchg int and xchg jns add push cmp test add movsb inc sbb mov fsts jnp mov and pop cld add jle xor xor inc and leave add lahf movsl push cltd jb xchg decb pop pop out js popf test ret or imul es mov andl ret inc jo xchg loope outsl add mov pop iret fidiv insl add adc lcall addr16 xchg cmp push push sub out inc aaa add stc gs jno pop ljmp dec add mov dec adc call xchg inc cmpsl push mov fcomps imul dec cmp lcall pop loopne adc fisttp sbb leave mov pop lds out lods mov mov xchg es and push lock repz mov push mov pop cmpsl nop in push (bad) mov icebp (bad) clc sub mov bts add xor or pushf movl rol pusha mov add clc push clc mov cmp jmp pinsrw adc or jge fnsave fsub jns adc je dec jno orl cmp mov bound xchg pop std cmp rdpmc jne ficom fbld ficom int3 cmp lret push and xchg mov add mov pop inc (bad) cmp push movsb xor or dec loope (bad) jo jp aam adc inc pushf call stc pushf cmc sub push cmc cmp pushf pushf lea ja call sub test call xor lret daa and add lret enter loope leave loop leave or sar mov (bad) arpl (bad) push or cmpsb (bad) (bad) push xor pushf and test adc cmovp mov rol (bad) pop mov lods xchg (bad) dec incb or fldl push xchg mov (bad) out insl les (bad) fs ret cmp std mov xchg in out cli mov imul add pop jae call mov push sbb testl cmp das js out or movsl jbe and pop sub cmpsl movsb sti cld jmp fild test xchg mov or mov inc cmp test call mov test or cmp movsl repnz sbb push xchg cmp hlt or pop neg push (bad) mov outsl xchg fistpll jp outsl xor cmp fdivr insb sahf dec jge das jb sahf clc mov fidivl adc xchg mov mov sub pop daa mov insl or jne mov and (bad) ljmp daa movl cmp fisub and clc adcl and movl pushf pusha lea jmp mov jmp mov rep bswap mov movb push lea jmp mov inc test popf test or inc nop push enter xor mov cmp punpckldq sbb xchg fmuls pop popa pusha xor mov sti daa jne out hlt add xor push lods sub and aas scas cmc sub aad lahf ds ljmp mov sahf cmpsl out aas xchg mov inc mov dec pop sbb scas jg xchg stc stc (bad) jg adc nop iret fwait mov inc leave (bad) jne jne and popf gs sub xor mov outsl out mov mov jb pop or mov sbb mov dec pop or push iret pop test jb enter lcall fwait adc xchg (bad) subl call stc scas gs loop inc insl std daa sbb aam jle xchg vmovdqu mov fsubp jno push sbb push stos add dec sbb hlt outsl (bad) in popa mov push fist mov orl push lock adc lret lcall xor pop xor xor cwtl add jns test shl jmp mov pushl mov setge pop lahf mov cwtl lea mov pushf movw jmp sub and sub inc fbld or mov stos jmp lcall sub mov pop js sti int push adc je lret bound cmpl jno mov push (bad) in lret movsl mov jb je cmp pusha addr16 jl fsubl sbb cmpsl loopne push fwait das xchg loopne fwait rcr stos mov xor pusha jmp mov divl (bad) sbb data16 je mov rcrl test cmc sub mov in push and and pop gs or cld test mov xor xchg dec adc test (bad) repz aas jecxz adc les sub sub lods stos or mov jecxz out xchg scas daa sti ljmp inc pop (bad) mov aad in add and dec mov mov mov pop cmp push (bad) aaa mov ss sbb (bad) rorb fs int es mov sbb sub frstor mov mov pop jl cld mov xor mov add add out aad mov cmp aad jp movsl xor sub popf aam dec mov movsl inc xchg ret je push je mov cmp bt cmc test pushl lea je bt cmp test pushf add pusha cmp mov lea jb pushf pusha cmp pushf movb pushl pushl lea jae movsbw xchg mov push setb pop mov push mov pushf lea jmp dec mov xchg xor mov test mov cmp je pop xchg mov mov dec aaa push ja xchg xchg rcll adc loop neg jmp pusha add push (bad) daa sub xor pop and and mov dec sarb mov (bad) lods mov ss mov mov in or fistpll ja repz sub mov jae fadds add cmp rcrb add les movsl dec sbb xor ds bswap movzwl movzbw mov pushl lea lea bswap pusha pushl movzbw mov jmp lods jmp lea je btc add setns mov cmp call pusha lea call call inc inc push inc push dec xor cs insb add add icebp jmp lea ret sub js cmc add bt stc mov sbb and mov call add or adc add adc add add adc add add inc add sbb adc scas sub add inc add and adc add adc sbb add adc add adc and add clc cmc stc cmc or pusha jmp lea call pusha pushf pushl call push pop adc sub out adc pop arpl inc sub mov mov seta sbb pop sub icebp jl sub xchg pop pop jne cwtl push hlt stos scas out mov add repz shll test mov xor mov pop cli xchg loope test imul iret fcoml imul adc cld mov incl mov inc xchg stos mov xchg out push pop (bad) outsl xchg mov aas sub adc fildll inc add mov push cltd or xchg mov jnp in ret movsb xor repz jecxz push mov fwait shr jmp sti lock sub xchg leave and scas adc rcll sub outsb sti popa shl scas mov cmp or fs (bad) call aas adc mov lods adc jge lret mov setbe repnz mov ds dec mov fst nop inc and pop fwait int3 jmp andl scas pusha (bad) or in xchg in and add jnp cwtl and ljmp lea sub call fdivl popaw cmpsl stos ljmp pop or insb mov int fidivr inc and mov lret sub lea call pusha movb pusha lea jb push mov push pushl ret pushl movl push mov pushf pushf mov mov pushl ret mov not jmp call adc mov dec outsl outsl mov and inc (bad) outsl mov push cmp dec (bad) sti push push repz sub repz pop dec dec push or push xor dec arpl aas sub mov das sbb or xchg in in cmp popa pop daa xchg pushf inc and or dec std dec mov sbb jns jae,pt sar xchg push push leave pop (bad) icebp push mov popa fcoms or cwtl in lock mov mov jp adc pop inc roll es cmpsb and mov aam ret mov cmp dec push iret inc ss test in xchg adc (bad) jne mov inc gs int mov aaa add mov arpl adc incl or lret (bad) rolb adcl inc das test clc stc add push mov push pushf movb lea jmp lea ja call xor stc not stc test cmp jmp call jmp cmp inc out lahf es mov rclb sbb xchg mov (bad) xor pop popa and test adc out push fadd lods mov sbb jo (bad) xor popf cmpsb fldl or (bad) cmc adc adc aad mov loope pop jns mov (bad) jo and sbb lret xor adc popa cli ds inc cwtl std cmp sbbl add cld popa mov (bad) mov cmp jge jg lcall loope,pn pop dec mov add sub xor xlat pop mov clc xchg aas xchg xor fwait mov aaa inc rorb dec outsl jns test fistp mov dec fist iret adc inc out enter adc call lret add fsubrs cld cmpsb jnp aas cltd lods xor cmp and ficoml sub ljmp test adc fwait call xor mov scas sbb ja in adc imul mov and shrl jp cs sub push and mov sub push dec push scas push mov xor jns mov or faddl movsb mov mov push xchg std adc and bound inc inc lods add clc mov fisubr (bad) je insl cmc aam pop bound aam cld mov ret roll push addr16 pop ja xchg pop mov mov or aaa mov adc dec xchg jecxz repz insl stc adc push testl inc cmp mov jne rclb sub xchg jbe push push mov jg sarl dec mov scas in pusha dec pop mov fbld and fdivrl int3 je sub fild clc and sub mov mov (bad) clc add ljmp push sub out mov jns xlat xchg mov out pop loope mov and jl lods jle pushl adc fsubs (bad) add lods sbb inc jmp lcall adc jl (bad) (bad) movsl mov sub or jno and add fiaddl movsl xchg mov xor sub push imul push jnp sub cmp test les or mov cmp jle mov dec xor cmp jae lock push jecxz pusha adc ss or sahf push sbb cmp adc ds pop cmpsb sub scas and dec xlat ss mov rolb pusha mov aad or dec inc imul icebp pop test fidivrl jmp mov xor mov cmp pushf pushl neg call test mov pop lahf (bad) add adc aad dec cwtl mov loope mov jle inc cmp test sub dec push dec mov lret daa jnp or stc add mov int3 das es jmp mov repnz dec mov sub or pop loope ds hlt dec adc and cmp push cmc sub pushf movb rep pushf mov push pushf pushf pushf lea jmp lea jne jmp mov cmc jmp movsb pop lcall and ficoml mov ds inc dec inc inc push loopne lods cltd xchg push ljmp sbb (bad) repz lahf mov add jno and test icebp add xor inc jmp test jns outsb les mov or (bad) mov pop pop pushf ret (bad) stc push xchg fbstp sar bound jae sarb mov pop mov or add hlt pop sbb mov push gs push mov inc es dec jg mov loopne fild into xlat sub mov add dec mov xor or push adc jge das gs inc adc inc mov cmp cmp int into add mov cmp out mov mov data16 dec inc clc and adc add xlat into sti ret mov mov lds fimull mov sub fnsave (bad) mov xor movups fcmovnb adc ljmp mov (bad) push or sub or addr16 mov push dec pause or add in pop sbb and mov out outsb insl xchg sub popa test and inc xorb dec aam cmp imul in out push ret ds pop pushf add mov or leave test mov (bad) push xchg push mov xchg outsb insl xchg lcall lea aam jl ret lock int3 or xchg shr mov jecxz and les and ret (bad) lcall sub fwait les push popa ret dec ss (bad) icebp fadds stos cmp out fnstsw out les inc ss xor shll dec lcall std and push movb mov fisttp into dec (bad) push int notb cld test sub xchg xchg xlat popa pop mov inc push mov mov pop mov sub sub fiaddl adc fdivrp xor or fldenv sub pop inc pavgw clc repz add mov (bad) mov aaa cmp sbb lret loop call pop lods push jmp in aaa xchg add int3 ret das inc mov sub adc lock mov ljmp and jns and push mov xchg xor mov sbb mov push fsubl ss lods sti fidivr lods jge sahf xor imul bound push jle cs cwtl pop adc push cmp mov adc mov es out fmul jmp cs es gs sti sar add jmp and inc (bad) fiadd fs adc jb push shr push popl mov pop hlt into cli fdivs icebp (bad) iret and sub clc aad (bad) ljmp (bad) mov std add sarb cmpl nop xor fs loop shl (bad) jge mov xor cmpsl std dec xchg arpl inc fs inc test add or ret add loop cmp pushf call pusha jmp movb lea jne lea lahf movb bswap lea call jmp lea call push lea jae dec setno mov not mov dec inc pusha mov movl call jnp pushf pushf movb mov pushf pusha pushf lea jmp add inc gs outsl fs gs imul add adc ljmp sbb inc ss pop cmpsl lea subl and clc out stos test and daa (bad) jl icebp cwtl fldl or mov test test dec push insl imul aaa pop mulb inc pop (bad) enter xor xchg push jae jg push (bad) int3 inc xchg popf aaa xchg ljmp pshufw jo inc mov cwtl pop leave lea ret inc pop or cmp inc ret ds jle inc mov xlat adc ret daa pop imul cs inc pop (bad) fdivrs xchg push cmp aaa push xor (bad) (bad) ss roll gs (bad) cmpsb sahf mov popa jns or negl adc add int mov jbe inc shrb stos mov cmpb pusha lea fs outsl push mov mov mov int3 in xchg inc sbb rclb jnp cwtl jb popa mov popl fwait inc jbe aas lcall cmp iret loop push add xor push mov lea jae pusha cmp pusha jmp not mov inc inc jmp jmp call xchg bswap push movl push lea mov movl call movl call mov cmp cmc stc cmc shr stc push cmp pusha lea je clc stc cmp call pusha sub push repnz pushf jmp movsb lds out adc adc push jo test sbb pop push add mov jnp push in xchg call dec int3 dec or int xchg loope (bad) jnp or jb mov in mov xor xchg xlat mov loope or mov sub sub mov mov mov xchg and (bad) xor ret or scas lea or mov push lea jge mov push mov movb not pushf jmp pushl push lea jae shr mov not mov xor mov clc call xchg pusha xchg dec ds mov sub sub and test push iret mov iret (bad) aam imul sbb (bad) out jg aas and test dec fwait test xor jns mov add mov or or or sti jne push sbb bt mov call add add lods popa xchg dec aas adc imul sub shl loope cmp dec fidiv bound cli pop sub jno in cmpl adc xor dec xchg mov dec rcll sub pop stos pop ret push daa out dec (bad) push fcomps cld xor or cmc imulb adc aas jl sub nop ljmp sbb push jae push lcall mov mov and loop sti and mov fcomi mov xlat or or pop ds sbb test int3 jecxz popa movsl adc mov mov lea aam pop mov cmpsb jnp fs call cld outsb mov or mov mov daa xchg fs push das or jno xchg insb clc arpl test push mov in jo adc sti nop sbb add add hlt cmp add adc movsb orl ljmp rcrl cmpsb cmp cmp js adc ficompl sbb lea movsl jle daa mov enter sub jno scas outsl lods dec es xchg mov sub hlt fbstp dec imul (bad) ficomp inc int sub mov int loope or jns xor push mov pushf pushl mov pushl ret call call mov adc subl ljmp stc ret sub test sbb push pop aas adc inc rclb xchg push scas xor mov add imul mov inc and ljmp repnz mov je sub gs sub mov daa (bad) sbb scas clc pop popf xchg mov mov xchg adc lahf aad enter mov jno push jecxz in cmp xor pop jp inc sbb mov jmp andl xor pop pusha lea je stc cmp pusha pushl jmp pusha mov call xchg outsb (bad) push cmp cmpsb xor es ss movl sbb jb (bad) (bad) mov (bad) das adc stc lock clc push add jl mov (bad) xor fs stos fsts divb (bad) rolb aas cmp sbb and sub jnp rclb xor push or lds out cmp inc mov mov loope sub movsb push jl mov push pop loop and scas xor aas add call lret mov add loopne loopne notl mov mov (bad) jbe xchg and cli sbb mov sub loope add lcall (bad) call xchg dec cmp outsb xchg enter mov fsubs xchg addr16 mov stos mov fdivl inc jl mov jge,pt imul stos lock ret mov xchg mov lock daa push or dec mov fmulp cld mov fnstenv das jge lock (bad) push mov sub fsubr cwtl int popf shr xor out rcrb test cmp mov jbe dec jo dec dec push mov add pop pop stc stc mov movsb insl decl pop stos or adc mov push dec fbld mov out and inc xor popf shufps inc sbb inc test xchg pop shrl sbb push xchg cmp mov subl scas aam push popa jb,pt xor xchg imul in sub testl out sbb subb sbb in cli dec imul add xchg scas mov xchg add stos jno sbb in jmp xor pop fidiv xchg push outsb mov les incb mov pop in cmp sbb push push ljmp jae lock insl mov dec mov mov jecxz rol pop xchg pop les push pop stos jno test add ret push rcr jecxz daa mov xor lret insb iret xchg outsb das jno adc loope xchg jae pop clc jno aam ja leave xor fdivs pop pop xlat or pop into xor push cltd sub popf sbb or jnp fdivs sbb stos adc sbb xor or pop mov inc jno outsb pop xchg jge or jmp xchg push insb dec cmp xchg cld add xor sbb test cbtw lds jne add mov int push pop push stos mov fs xchg mov push push add rorb xchg pop push nop js test fwait sub push stos sub (bad) jge dec adc jne jbe or pop ficom icebp insl mov xor sti pusha cwtl sbb jl mov or (bad) cs ljmp test mov push jg add sbb ja inc ljmp adc lahf shll or mov jmp and and mov pusha enter sti lock outsl pop and mov rclb pop lods fs sbb xor pop fs sbb or mov adc ss mov pop test push imul or jbe lcall std pop xchg insl push cld bound test out push xor popf testb jmp bswap xor nop insl pop add loop lea lock fistl insb sub and sub adc sub divl in and sub out (bad) xchg mov addr16 popa loopne lcall lahf sbb clc or xor jbe mov jae js add push pusha mov lea jmp cmc or inc adc jge test push lahf mov lock xchg add push cld rcrl int3 inc mov aam dec cmp xchg sbb lock mov adc jg imul jle jb aad ucomiss push jecxz dec add pop pop (bad) call push jnp cmp sbb cli dec ds movsb adc ss jp ficom sub leave (bad) std ret dec test cmc (bad) int das fildl xor pop push jmp fptan pop mov dec and fs pop mov pop xor jno push in loop mov sarb in jecxz hlt xchg push jne xchg xor adc stc sub sub stos inc mov aam shrl and pop mov rcr scas in fadds clc xlat push (bad) pop mov int dec insb mov jo daa xor jnp cltd cltd jle mov out ret hlt hlt jae sbb bound and fisubrl mov pop add xchg pop sbb dec out dec inc fs bound pop aam call clc or add daa xlat and pushf cmp sbb mov ss xchg in or loop ud1 test cmp push hlt out int mov cld mov fistpll jb loopne mov xor mov sub popf aad dec push fidiv ljmp or pop fcmovb dec cmpsb inc mov ja or lea jne push call add lahf jae adc xchg add or mov aam sub and js xchg mov cli rcrl mov icebp xor xchg nop sbb sbbl aas pop ja pushf fiaddl rolb ja push push jle rclb mov jge aas scas mov daa adc mov scas sarl ss xchg (bad) mov jbe xchg insb movsl aaa out xchg repnz sbb fisttp scas (bad) aas test sbb (bad) sbb ds pop arpl push cltd and std mov pop (bad) lea loope out add std cmp sub popf leave fiadd cmc ss and and daa cmpsb cmp movsl xor or push mov imul arpl pop jecxz push (bad) cwtl or adc stc mov push add fadds out mov (bad) cmp fwait lret mov mov cmpsl mov movsl mov scas mov push pop and imul gs sbb xchg sbb test enter inc push jb aaa stos mov fcomps fisttpl js cli sbb or lea call pushf push mov call repnz jmp lea call jmp outsl pusha add inc adc lret stos nop push aaa scas fwait sub outsl push aas push jae dec jp xlat inc lret jmp pop xchg or mov adc dec pop or inc jl cs stos ja push jo mov js mov xchg imul andb jae movsb in sub fwait add inc mov cmp fnstsw int3 jne mov adc enter xchg (bad) adc dec loop je lods push lock lock xor fnsetpm(287 xlat add adc pop into jne adc dec je sub inc mov cwtl fldl loope sbb loopne lret xor aad ljmp cmpsb das sbb cltd xchg inc inc in dec jge sbb mov pusha sahf scas mov sbb inc mov adc shrb add shll mov adc pop or adc bound push add add sbb or mov fiadd jp or and arpl js jae jne inc mov adc in add push xchg jmp test jae push add std jne jnp (bad) int lods add sub mov push out and push fadd je adc in rcll or out repnz js ds xor xchg mov lea jb in ret or nop cmp push stos imul inc push xchg xchg fmull ret inc add add sub adc fstpl dec push mov and test cltd insl xchg xor fwait inc cltd mov loope push mov std cmp mov pusha adc daa imul xchg in insl stos (bad) sti loop and and push lock negl js jl push lcall out lock add and fdivp (bad) jmp fs jae jmp call jmp call pop pushf call dec les dec adc lcall dec loopne int3 push movsb sbb push les push mov mov pop push inc fdivs mov or push cmp (bad) aam xchg mov push (bad) repnz in cltd scas lcall mov mov xchg dec mov and notl int xchg xchg and call or fisttpl push mov sub or pop mov ret lret pop dec jne pop or pop or lcall in push sahf adc or inc repz sbb pushl popfw push inc pushf jmp xchg inc data16 les adcl inc pop (bad) xor (bad) in lods test push sub jnp jae shrb shl inc mov (bad) out dec add cmp sbb xor pop mov ds fs adc shlb adc and ret ja cmpsl andl fldt mov mov jo (bad) ljmp mov cmp scas iret lods jnp inc mov outsb jo jmp xor icebp adc sub inc (bad) mov cmp sub inc pop shl and pop add pop in adc inc in fnop loope popf add test add xchg fisttpll xchg sbb dec in sahf pop adc lcall ret mov sub (bad) hlt jns sub cmp mov jns dec push iret xchg cmc and adc jae fstpl sar popf (bad) fstpt add lds or add (bad) mov adc je jg mov xor lods or test dec clc (bad) arpl gs fwait xchg sub jo xchg xor sbb ficoml cmp pop or or push je xor daa or pusha adc mov addr16 or inc dec adc jl adc pop pop mov or fisub shl sahf mov pop mov pop in notl fsubp loope mov dec lods xchg jae and fildl and repnz fcompl imul and or sti aad mov pop bound insl mov mov hlt repnz sub jns pop (bad) fbld xchg cmp lret sub scas outsb icebp bound gs js lahf or daa sub push sbb lret mov add out mov sub out aaa rcr sarl pop iret xchg fimul fs jb cmp call jmp adc inc or mov jle adc outsl cmpsb in call mov loop push xchg (bad) aam cs hlt xchg jecxz jno sti in in lods lret or add loopne mov cmpsb pop mov adc push push cmc inc pop rolb sbb xchg mov pop shrb fildll stos je out sub fisttpl mov repnz mov lcall sti cmp push fsubs xor lea or mov stc (bad) dec mov push mov or in ja or sub adc push or xchg mov inc or (bad) mov aad or cmp xchg movsl int (bad) pop call scas xchg mov test xchg fldcw rcrb mov stos lret rclb (bad) data16 dec cmp sti mov ljmp xchg cs or mov aad les out push call clc or fwait mov (bad) mov sbb push or ficoml push mov or pop aam mov xlat sub hlt in rclb xchg xor pushl push inc cmc mov pushf xor movb call pop xchg inc aam adc shrb adc fistl scas push pushf out in test rcrl mov in dec out inc dec mov adc inc push fist mov mov dec push stc std je xlat ljmp icebp push pop mov adc xor sub in fidivl jo fidivl adc mov adc or test iret (bad) jbe cld sti mov and pop mov pop jmp inc pushf xchg cmp xchg mov sbb jmp (bad) negl pop jb dec ss mov (bad) je out cmp mov inc scas pop mov jbe push bound fidivr jmp xchg pushf push pusha movw movl pusha movb movl pushf lea jmp stos pushf push pusha pushf lea jmp call mov stc push mov (bad) mulb out mov pusha bt pusha cmc sub jmp not test test cmc call repnz call stos pusha mov pushl lea jmp movsl mov inc hlt inc jns mov xchg fildl mov push mov in jecxz mov pop (bad) enter and and jmp inc (bad) or push xchg imul cltd xchg pushf push xchg mov jmp sub jb fistp cld cli js dec xor mov and push mov mov fucomp jnp mov pusha pop adc in or cli add add loope inc xchg mov in jb push insb loopne in pop incb lea cs sbb adc fldt test addr16 or lea jne movsbl movzbl pushf pusha mov movw pusha movl lea jmp dec fimul dec adc mov jp push es mov sub iret cmp addr16 adc and pushf flds inc xchg andl cltd dec mov ss insl fisub sbb lods mov add mov lds ret dec fcoml jo paddb out cli mov lret jns fadds xor mov push stc in mov sbb xchg nop ja sub clc jo cmp and add pushf or inc dec sti dec adc ja dec fcom inc insl mov hlt adc cwtl repz cmpsb dec adcl mov cmc push jae fcomps stc dec out nop mov push mov sbb fiaddl rcll sarb call int3 jnp sub mov fs call cmc sub ja pushf pushf mov lea jne push jmp shr ret push adc ss iret xlat in shll cwtl push or cwtl divb pop pushf fistpl mov sbb mov xor mov out nop out cmp stos (bad) aas outsb xor pop fsts or and xor pusha inc xchg mov lods xchg adc jmp shll test ss push pop je mov aam (bad) addr16 ret dec xchg subl jae sbb inc arpl push clc push ret pop insb jecxz push jns add xor add test test movzwl jmp pushf pushl popl pusha mov movb pushl ret pusha lea jne pushf jmp test cmp push lea ja pusha pushf dec add add seto setno mov bt push pusha cmp push movb lea jb cmp cmp push lea ja push add sub jmp pusha pushf pusha lea call bt test clc jmp dec lea jle rol call pushf cmc clc add clc test pushf call jmp aas sub and inc sbb fstps cwtl fldl2t adc inc xchg movsl jno jge or mov push add mov add into xor ljmp in xlat clc test testb and cld aaa xchg fucomp lods (bad) push call dec mov movsb pop (bad) xchg add add push adc mov (bad) lock ret clc adc int3 mov in roll pop jle jbe pushf jmp int push fild sahf or faddl (bad) dec in ja jge,pt out mov cmp and mov mov xchg add pushf call push setg pusha lods pusha pushf jmp lea jae cmp sub jmp ret push cwtl je adc push scas xchg dec xchg (bad) pop jae idivb insb lds rorl popa (bad) mov aam add iret rcrb sbb mov adc lods out dec das xlat mov add and cmp add lcall imul jne lahf ja inc mov lods stos or mov sub iret (bad) xor and pusha lcall push orl inc jnp xchg fsub cmpsl ljmpw gs xchg dec jb sub mov outsl in pop (bad) lods gs outsb in sbb mov popa dec xor xchg dec push sbb shr pop add pushf jmp cmc cli arpl xor mov adc jg pop cmpsb popl sub aaa sub adc mov sbb in es aad stos xchg out das (bad) mov dec fnstcw enter cmc xchg add les fwait push add push mov fcoms popa jmp stos adc push fld bound test cli xchg ret fldz xor shrl lahf mov popa pop sti aad je pop mov inc cmp jno arpl movsl xor cvttps2pi adc mov jae xor mov adc test fdivs mov (bad) hlt dec stos dec sbb pop insl scas xchg ljmp rcll (bad) nop aam out (bad) cmc jns test inc push adc outsl (bad) mov adc mov adc dec mov sub enter popa mov cmpsl mov adc inc xlat loopne,pn xor mov push gs and xchg add inc daa cmp fcomi fcoml inc cld fsubrs fwait cmp (bad) pop lds lock xstore-rng cmpsl (bad) fcomp xchg (bad) sbb (bad) inc faddl push xorl call xchg rcrb push data16 mov add pop xor mull push sub (bad) xchg lods (bad) stos movsl jne push test das decl test in aam cmpsb lods adc ss cmp stc dec sbb xor xor xchg aad mov xor out int hlt arpl mov or test cmc dec mov add add das in xlat cmp inc sbb insl xor inc push jecxz cmp jo hlt fwait cmp pusha inc movsb les add loope leave cli leave push fucom cltd sarb leave repnz ret scas push loopne xchg push lock lds mov xor and mov out dec fcompp xor pop je and stos mov int pusha xchg jp sbb mov and (bad) mov imull das int3 or cmp sbb pop cwtl decl jge sbb and jecxz icebp sbb push cmp repz pop adc mov lds inc add push mov adcb in xchg sub push push int (bad) test sbb into mov jae mov je push stos (bad) pop sbb jne inc daa mov daa movsb inc inc test les jmp insb scas cwtl push insb mov adc icebp ja pushf dec cmp mov (bad) adc mov sub sbb sbb inc xor and decb or xchg loop imul mov aam adc add je cmpsl push adc scas in js das push or stos jmp jo aas int cltd mov dec lds inc mov mov cs inc in adc test xchg cmpsb sbb cmp or cwtl (bad) cltd out add (bad) sub mov mov rorl sbb fs push push and mov add fdivrs aad repnz mov jo andl fldl in mov (bad) fistpll mov ds lret sbb sbb cmpsb pop cli repz hlt mov adc cmp add cmp mov in mov scas jmp sarb push lahf fadds adc mov mov adc xor sbb lret aaa mov inc push inc leave mov gs aad inc test pop pop xchg push outsb fist push xchg mov pop sub out inc jo mov aas (bad) mov xor mov sub repnz out sub push adcb (bad) jb mov mov test add push cwtl imull pop mov lock enter adc incl cmp push jo jp mov mov and fiadd xchg pusha pop xchg out lods les jg fisttp ja leave mov mov loop repnz push dec push dec adc stos mov cmc inc (bad) adc adc mov scas sahf cltd xchg cmpsb xor in sub je scas aam lahf int shll lcall (bad) cmc mov or shrl lahf in lea pushf xchg mov movsbl pop pushl popl cwtl mov push mov movl lahf lea pusha movb jmp not mov jmp cmp sub pop adc add mov les das jle pop ja inc xchg push xchg stos fs js ret mov lods lahf mov adcl (bad) pop mov xor dec mov mov lock ds testl adc outsl mov out fdivrs roll in push arpl pop fs lock jg jmp mov pop mov xchg mov ficompl fsubrl (bad) nop cmp in pusha xchg sbb (bad) imul xchg test mov (bad) out jb pushf cmc cmpb call push inc setbe pushf mov jmp sub clc call push ja xchg inc mov mov test fldt rcrl ds xchg clc or aam xchg xor mov or pop sbb mov ds add es cmpsb xchg test or dec mov clc dec mov sbb pop (bad) lret daa jmp fldt mov xor push cmc mov sbb int or xchg out jnp sahf mov jmp push and mov jp mov roll cmpsb mov jmp ret sub and ficoml subb xor mov mov mov sub addr16 addr16 inc loope,pn mov or sub and icebp (bad) lock or imul xor xchg stos and or test roll mov jl add xchg outsl cmpsl jg dec mov outsl mov push cmp shr leave fadds mov loopne outsl (bad) xor (bad) movsb popf (bad) (bad) aas fs xor mov idivb lea cmp negb pop push inc mov or inc mov repnz scas and ss std or mov dec dec cmpsl lret mov push js addl or test mov mov popf xor ds mov pop stos jno mov (bad) mov add std pop adc fisubl or test hlt mov xchg sbb xchg jge dec cmc stc imul dec pop fnstenv cmp sti icebp dec cmpsl xor hlt push cmpsl xchg out adc das add jns fcomi inc push (bad) insb movb and jl ret adc (bad) std pop out mov add int leave push rcrl clc mov dec repz imul mov inc das cmpl outsl mov aam mov push out push cmp dec dec inc pusha ror xor mov call inc mov inc lods push pop pop xchg cwtl fisttpll cwtl mov mov or jecxz bound es dec pop cld aaa (bad) adc dec xchg clc lods mov and adc push dec loop and push out out scas sbb ljmp mov add sbb push add fldcw cltd jmp (bad) pushf test stos cmp add jl ret push cmp and adc mov and dec cs push cli mov xchg cmp fmull cmp (bad) mov sub cltd cmp and aas add xchg pusha movl movb push lea jmp push lea call jmp lea jae test cmc cmp jmp lea call call call movl jbe push pusha lea jmp call fsubr jb pop adc mov imul adc xor pop xchg and jecxz push sbb std cmp xchg loope lock aam enter cmc pop pushf bound or test mov frstor mov into popf cmpsl adc mov rolb scas jg xor inc and lds imul jg cmp mov add lods incb pop nop jecxz into js xchg pop call ljmp (bad) cmp arpl inc addl sahf insb sub leave cmp loop sahf lret repnz jl or fcmovnu pop mov cmp daa cmp and adc jno sub repz in addr16 inc (bad) sub and pop or xor fimull test pop adc mov in js xor out push popa arpl dec sbb cmpsb add mov sub cmp cmp shlb pop and pushf dec lea ja pushf rol pushl lea jl pushf lea call pushf clc bt cmp pusha lea jae pusha cmp pushf pusha mov lea jae jmp subl scas push cwtl movb insb sub jae test jne cmp adc pop rcl fidivl and popf (bad) cmova call (bad) in mov pop addr16 lcall xlat jle mov daa pop insb aam push lods sub cmp popf mov loope push mov pusha mov enter fs ja jmp add push jns je insl inc jne arpl outsb xor add fldt hlt pop adc shrl pop jg iret or jmp sahf mov lea inc xor nop lret pop add inc dec lcall mov dec arpl pop mov dec mov xchg xchg mov mov fcompl ja push jne addr16 test push xor cwtl mov mov mov sbb jmp dec mov addl sub add cmp cli dec mov sub push stos andl xor dec xchg movsl adc mov aad xor xchg fidivr fsubrl fisubr cmc leave mov adc inc mov mov cmp lret fbld xchg aaa jecxz mov fldcw lcall sbbb jne roll stos cwtl pop dec cltd fs das femms or mov xor aas sub pop les cmp aam scas mov ret pop addr16 repz cmpsl inc loop xchg test mov lcall leave xor mov pushf inc aad and xchg movsl cmpsb push mov data16 xchg outsl pop sub out or dec xchg jl das push push rclb roll pop and mov push icebp dec adc dec inc push dec inc dec xor cs insb add adc pop lods mov js fdiv test adc stc fcmove or repnz cltd outsb sub shlb push cli jns test pop cmc loop (bad) sub mov mov lret in xor data16 sbb outsl mov xchg mov incb leave pop gs jle lahf or cmp push icebp push adc popf sti fiadd mov notl int3 clc adc test dec lret inc cmpsb lret clc lds int in inc ret rcrl idivl (bad) cmpsb test (bad) mov push mov xchg push add add inc add inc add adc aam push add add add lea jne bsf movzbl shr inc mov sar sub shl pushf lea movb cmp sub stc cmp pushf jmp jmp jno scas jb adc xchg out scas push inc mov das cmp fwait cmp stos jae fistpll aad mov cli cmp jle lods mov repnz jge sub adc pop std in or aam jnp je stc mov mov push jb cmpsl mov cmpb add fld orb enter mov (bad) pop mov and pop xlat add xchg test and add jno sti push mov mov mov ror pop loop or inc xchg push mov arpl and xchg or insl xchg std xor in (bad) jnp ret les jecxz xor pushf mov fcoml mov push jo nop jp daa testl dec cmp inc dec push jns test andl (bad) lods lds daa mov pop fcomp je sub xchg and mov pop xor sbb icebp cmp jp in rol lds (bad) sub xor (bad) adc mov cmp sahf mov aaa call or push and mov adc inc enter arpl adc or mov xchg divb dec pop and lds inc loop and stos jecxz data16 sbb sub pop sbb xchg jmp dec jl out mov add xorl js fwait push jle cmp (bad) daa pop and cwtl push int dec enter in push mov xchg lahf ret mov frstor dec xor call adcl dec in ds xchg std or dec sbb jmp in lret ljmp stos rclb repz dec andl fbstp les nop cmc ja push int jmp or je aas dec enter adc pusha adc out adc jae arpl js iret (bad) out mov lret cmpsl mov in flds dec cmp or fcoms push inc cs das push stc arpl imul sub mov outsl pop jne cmpsb sub repz inc sbb lcall daa push jno dec ljmp jmp rolb and outsb cmpsb mov (bad) mov stos lahf icebp imul mov out aad push mov jb sti sub pop cmc jnp int xchg popa pop xor inc mov jl mov cmpsl xor add (bad) loop adc jge mov mov jle cmpsb inc push je inc push sub out rcll sub adc add fsubrl fnstsw lock fldl ret inc aaa inc arpl das add (bad) mov adc ja stc icebp fwait push mov or or dec fsub or pop push dec out inc bound pop idiv fldenv lods (bad) fist inc pop cmc or mov insl dec mov sub std movsb and cs icebp sbb push cmp lahf hlt cmc mov test bound insl shrb aas dec fbld inc sub movsb (bad) pop and push fisttp pop dec popa cmc (bad) mov lds dec in js std nop cmp xor test shrl in cmc (bad) stc push movsl sbb cmp out mov mov clc push inc inc sahf push pop adcl cmp outsb jne rcrl xor movsl popf out mov clc lea push xchg lea inc rolb imul dec inc cli cwtl push mov mov test (bad) mov xchg test mov lods jb xchg sarb lret das dec mov js mov xchg out and cs and test add fstpt jns mov popa lock pop into pop mov jle int3 adc and sbb xchg addr16 pushf rep pushf mov mov pushf pusha lea jmp mov jg bound mov dec rclb cmp ret sub xchg mov xchg test rcrl xchg stos mov dec mov stos movb inc rorb iret fsubl test das xchg ret or inc cld shr sbb rcl sti xchg insl jecxz adc arpl lcall pop repz jne cmp xchg ja bound (bad) fldenv sbb push das adc xchg mov sub popf js fwait (bad) cmpsl cwtl lahf sub jge ja push sbb insb mov pop decb pop cmpsl ja jl (bad) xor jge mov cltd mov and fimull lock xor mov fdivrl icebp inc faddl dec push test aam in fs ljmp and jb pusha pushf cmpb pusha lea jne rcl lea jmp lea jge push call pop test xor test add push push jno test data16 inc pop gs mov and aam vmovsldup aad push lods mov cmp sub lret movsb enter (bad) sbb (bad) fwait lods imul mov cmp xchg shrl (bad) push (bad) cmpsl aaa fninit aam mov pop jmp sbb push xor cmc inc cmpsb jg ror xchg lock loopne dec push mov aas xchg push icebp sahf cmp push mov in stos cmp inc int push sub sub mov sbb xor pusha inc aad push popf fstl aad push test adc xchg rcr fisubrl (bad) pop (bad) xchg (bad) push push and cmpsb lahf mov cli ds jo lods lret dec mov mov and int3 ret loop je fwait inc fisubrl xchg cwtl aas mov sar clc cmpsb into pop sub adc lods sbb cmp fnstenv (bad) and stos or fdivl ret scas ja jg mov sarl das inc es lds popa push clc fsubrs sub stc add das cmp lahf push mov das (bad) and and mov test xchg int3 in dec add in add mov clc insb xchg sub push dec xor insl adc iret jg sti hlt xor adc les mov and push popf push jge addl fs jnp xchg cmc xchg xor (bad) mov mov dec test cmp xchg insb add jns inc mov adc push scas fwait gs enter popf lods push jo mov xchg add mov fldl2e fisubr push lods mov pop aad mov lea sti hlt arpl mov xor xchg (bad) repnz cmpsl push mov mov mov imul sbb jmp jo daa xchg not call (bad) sti outsb adc push jnp ficom test loopne mov fdivrl hlt sti lock outsl jg cmp jno sub ss (bad) (bad) dec les mov insb test xchg pop arpl and rolb addr16 stos xchg pop dec jmp pop stos les mov sbb lea loopne mov inc mov jns sbbl insb gs insb lret in insb fwait popf inc push adc sti sub loope arpl repnz sahf arpl xchg test lret sbb xor pop (bad) imul sub jb adc stos push mov pushf push dec inc dec dec xor cs insb add adc mov (bad) or clc (bad) loopne or dec ja push addr16 inc insb adc mov inc push call dec les fdivrl es jno mov scas mov stc add pop sti cmp jne fisttp jp add addl xlat or cmp xchg in xorl imul mov sub mov dec stc mov adc xchg aam js je mov gs loopne xchg imul das rcr (bad) xor inc (bad) xor add (bad) sub mov ja cmp aad popf inc pop movsb js adc pop mov push mov xor in dec jbe lock aad push cli push aam add push cmp (bad) adc pushf repnz adc scas mov push scas push mov clc pop int3 xor dec cmp ret jne cmpsl mov add inc mov push enter int jge lds dec dec push lahf bound sbb inc int mov scas mov in into enter pop into push outsl push imul fs test roll (bad) push jecxz and mov and loopne icebp popf adc pop lods mov cwtl inc fldcw sub and ret adc sub sub and mov roll dec ds imul lret mov clc movb push and cmc call cli ss stc fcoms arpl adc ja scas and pop bnd and (bad) pop jbe xchg mov daa cmp lods or or adc fs xor cmp mov ljmp jecxz pop aad mov add pusha call popf mov inc jae call ja inc pop sbb lods pop addr16 push es mov pop ljmp out pop pop insb cmp xor les jo pop insl adc mov adc mov xor js ja push popf popa jge sub imul xor lcall mov in je xchg (bad) jo inc leave sub xchg dec dec iret adc call imul cmp cmc push in add pushf lea jmp lea call push mov mov push pusha movb mov lea jmp int3 popf pushf call dec bt cmc not clc rol call pusha pop mov movsbw xchg xchg mov mov call nop leave pop xchg inc xchg (bad) aaa cld xchg mov aas pop dec and test xor shl aad adc fyl2x push es mov fwait test inc iret cld sub push jae mov dec mov inc push mov mov push imul or jbe jbe mov jns and or in movsl lret stc neg xor pushf mov not call bt add jmp fadds adc inc aaa lret mov or cmpsb xor push sub shr mov pop dec cmp jle mov add jb jmp jmp aaa xchg imul inc push dec or lret jp jge pushf cs rorb push push notb sbb stos lret test mov fs mull (bad) jg,pt jp mov pop adc sub mov mov mov dec inc cmp fwait call pop mov jnp js mov pop rorb stc adc pop xchg aas xchg (bad) cmpsb push loope stos sbb sbb iret and bt cmp xor lea jmp push dec dec jmp mov or add pushf mov call not mov pushl lea call pusha pushl pusha lea jno adc push pushl pushf lea jae call arpl imul idiv ds out jecxz xor adc scas push or sub push mov inc dec and mov hlt in popf xchg test xchg mov adc add sbb cmc ret in in rcr jne xor pop dec mov dec dec call jb les insb jo mov dec es (bad) cs xchg inc mov fdivrp pop xor pop in addl mov std or cltd mov stos rorb inc sub out push mov lret cld adc sbb or xchg sbb inc insl imul push lds xchg clc xchg mov jbe js mov lods jno bound pop test test add (bad) lahf aad mov fcomps jecxz (bad) iret jp shll push aad clc lcall fcoml out mov in sbb xchg arpl insl in imul jl push addr16 dec pop lea add sub push cwtl insb jno adc dec dec mov lods mov (bad) addr16 jmp jge xchg push repz arpl jnp mov mov fadds mov xchg stc xchg loopne in leave sbb and and and cmp in mov test addr16 or mov movb jmp push lea jne pusha ror mov cmc push bt cmc or jmp and mov insb das sbb scas out mov lret iret daa (bad) scas mov into sub js jnp das jb fwait jmp stos rolb jns push rcrb mov mov xorb rclb adc dec pop jecxz mov fimull pop xchg loope push add pop cmc rclb push inc pushf xchg arpl stc idiv pop sbb cmp and and cmpsb scas jae pop xchg xor test cmp and data16 push cli hlt in lret xchg adc mov add push xchg leave nop call js push not inc add inc xor inc xchg test mov adc and jmp lea jae push call add push push js arpl gs js add and call call lea call pushf push pushf lea jae pusha bt pusha call push test mov inc mov add lock adc dec data16 sbb (bad) popf insb xchg cmpsl xor mov clc repnz popa mov cltd sub and out mov cld xorl mov imull pop xchg cmp loope or sbb and push ret push xchg push mov test scas cmp sbb out push sub shrb in ss into cmp xor jo fisubr es mov push lcall cli hlt lcall outsl adc mov pop mov out fistpl cmp or in sbb dec jecxz ljmp sbb (bad) adc cmpsl test xor inc push or cmp push lds ds es mov call fcomip inc push out lahf in add mov sub dec jg mov jge cwtl cld push mov lds jge jle,pn fimul pop xchg mov not adc add jge dec (bad) xor outsl jbe push (bad) icebp arpl test cmc jle pop xchg das repz adc mov cmc sub (bad) jl repz jns rcrl dec ficoml mov adc jmp repnz addr16 ja adc mov pop aaa and nop fimul inc shrb dec cmpl adc stos shr pop lea cmpsl lret aad jecxz adc sub inc rcr push and jge scas adc int inc lods stos pusha xlat push in call mov stc (bad) mov loop dec dec lea cmp clc sub dec loope (bad) fisttp ds popa rorl jns imul pushf lock mov push mov shrl outsl in mov push test sbb rcl mov clc cmc and clc call scas mov dec or mov sbb xchg cmp xchg jne fwait cmp dec ds andl into in insl cltd icebp divb cli mov sub mov imul jle add fisubr sbb or push popf pop mov adc inc insl jnp js xchg xchg ljmp (bad) sub (bad) or in xor xor rorl scas outsl test adc lods ret push sub add dec fwait subl imul mov orl sahf out push pushf stc or pushf pushl lea je setb bswap not pushf mov cwtl movzbw cwtl lea movb mov bswap lea movzbw pushl jmp test pushf pusha call pushf lea jae pushf mov pushf movb call push jmp pushl mov stos pushf mov pushl lea jmp add adc call test sub (bad) xor and sbb (bad) mov add pop push sahf clc repnz mov jo mov push xchg in jmp enter sub test in je cmp mov cmp fdivrl rorb (bad) int mov or dec call in jbe ror mov lock loop push dec in shlb fs jp je push push adc pusha lea jmp pushf lea call pusha mov movb jmp cmp or pusha lea jne bts and adc test mov test or pushf mov push pushf lea je xchg push jmp std out ret das jae inc fisubrl cwtl daa adc push outsb shrb mov leave rcrl test fsubrs rcrb outsl mov cmp subb scas mov pop cmpsl dec sub pop cmpsb into test jle imull jo cmc cld aam mov imul mov into aad mov mov dec jo sub test lods jle (bad) pop (bad) lock mov lret and pop rolb jg notl (bad) sarl cmp mov xchg fwait push pop or and mov bt cmpb pusha movb call mov not cmp cmp setns pop movsbw push lea push mov movb movb pusha lea ja jmp cld cmc cmp jl inc cmp mov es xchg mov push and dec jae arpl pushf icebp sub out call mov or repnz add shll repnz fs and call jle (bad) ret rol xchg xchg cmpsb sub loopew inc out aam lret jmp sbb adc sbb inc jl fisttpl aaa fwait or gs push or mov sbb jbe lock push push fdivr dec ficom ljmp inc cmpl test or sbb push and mov and cmpsb and dec jge inc outsb xchg loopne in xor (bad) std movsl xchg push sub (bad) inc jnp inc (bad) push dec enter sbb mov jo push push insl jl,pn xchg pop popa add pop mov fsts push ret aas repz push sub sbb cmc push test push xchg out mov pop (bad) lock push push dec enter gs jge fidiv mov jb xor push pop (bad) movswl das pop js xor inc or shll xor loope out scas cmp jg push dec enter push or jo mov push adc int add loope call int mov cmp mov aaa push fldl jns sub add (bad) aam xor stos icebp push lods cmp sub addr16 adc push jne in test daa pushf xor popf nop sbb call bound inc jp mov hlt inc (bad) push bound test dec mov (bad) cld fsts stos fimul or jle fbstp xor adc jl inc mov test sub sbb add cmpsl fnstenv js test mov lds dec inc dec (bad) xor mov pushf lea jae push pushf movw lea jmp pushf pusha xchg jmp pushf rcr mov cmc cmp pusha and bt pushf clc stc add push movb mov push lea jmp add jmp pusha lea lea pushf movzwl lea push movsbw lea jb lea push bswap mov push lea call jmp jne pusha pushf pusha inc push call lea je cmc cmc call call pushf jmp adc repz inc aam das jg and cld mov xorb cmp ds rorl inc insl sbb push xchg mov dec je dec lcall iret xorb mov repz or inc sub (bad) (bad) imul (bad) fisttpl inc mov pop cltd dec sub lods rcll insb push fucom (bad) aaa sub jecxz ret and in mov mov popf mov cli inc mov xor inc es pop fs xlat aas xor cmp sub pop (bad) push pop fldt call ljmp scas push xor inc nop add push and enter xchg jno imul jg jecxz xchg jae sub jecxz cmpsl mov (bad) xor add aas out cmp sbb test inc inc inc pop pop add shll pop push mov jno (bad) in mov es jnp jmp fldenv pop aaa jmp adc insb movsb scas into jnp xchg inc mov bound pop xor add test push (bad) mov mov jge lea out repnz (bad) and (bad) cmc pop ficom dec push push dec loope jle mov sub (bad) icebp push cli out (bad) sub xor and fs ret push xchg data16 jbe jne clc out mov mov xchg xor cmp jns jb shr mov popl sbb inc mov nop daa mov int3 lahf shlb fnsave lods mov fisubr add adc and mov in sub lock jl (bad) mov repnz add push mov stos (bad) adc mov orl pusha call stos pushf pushf pusha lea jmp imul pushf popa outsb insl bound sbb push xchg jae push add repz lods push cli add inc xchg lds xor nop outsb js shr mov adc and idiv popf xchg test in loop xor push fucom into xchg add ficomp cmp cmp sub mov (bad) sub fnstenv mov mov sbb mov fldl outsb int dec sbb xor or shr lea aas lret les add loopne jp inc leave mov lods ret pop push repnz dec and adcl outsb int xchg inc stos test cmp jo sbb pusha popa push test fsub out repz jbe inc call or and pusha lahf sub sbbl mov adc fadd dec cmp inc add inc mov (bad) aaa and xor push sub push push push cmpsb or testl adc adc div mov push ficomp fwait ret push je sub inc cbtw fmulp addr16 mov jno mov popl push test inc pop pop adc mov in sbb into push js sbb xchg fadd loopne push mov outsb mov dec gs sbbl jo dec lds cld shll mov cmpsl fs mov dec scas (bad) adc or inc mov jbe,pt (bad) xchg xchg adc dec mov add adc push lea pushf xchg mov bswap pusha movzbw push mov mov movzbw bswap mov push jmp sahf scas mov test popf call pop cwtl jbe dec data16 aaa scas outsb sbb rcrl jmp repnz inc aam aaa inc push lret jmp and sub sub jmp int int mov jno mov jp data16 imul fwait ss xchg cmp (bad) dec fucom jb scas fsts inc adc imul push push mov mov and xchg mov pusha mov bswap lea jmp setg mov call dec push mov mov in loope mov sarl fdivs nop pop inc mov test fucom enter scas in std xor lahf pxor (bad) fstl xchg pop mov ss lods cmp mov or dec mov test (bad) mov and sbb xor mov cld pop fs dec jmp dec inc cmp lahf or out out or repnz fild outsl out std dec sbb popf cmp mov dec or push (bad) xchg mov and mov xor jb cmp sub push push test jnp mov xchg push xchg mov mov xchg or aam jnp jo inc leave mov xchg mov movsbl pop pushf pushl pushl ret flds loop adc lds cmp aam test add test dec inc xorl inc nop mov (bad) dec xchg jp pop imul xchg test ret scas das pop pop (bad) fwait lods xor or je pusha sbb (bad) loopne (bad) (bad) sbb inc scas xchg sbb aas push xchg ss jo push insb adc lods std mov fcom das arpl movsl jnp add mov dec pop popf xchg (bad) pop or sub loope adc dec jecxz xor jne pop imul xor add push insl clc cmp idiv jmp iret je leave (bad) shll adc mov push pushf pushf pushl ret jmp inc jp or les sbb mov adc jno push mov cmp loope daa (bad) sbb or adc cmpsb sahf xor xor aam test hlt lret aam xchg cmpsb lods cmp stos pop ss (bad) (bad) stc adcl and rorb (bad) mov bnd das mov mov sub aam pop push cmp lret sbb popf out sbb call insl cltd push mov (bad) and dec testl and sub and or gs insb jmp out adc adc aad xlat aaa push movb mov lea je jmp ljmp push rcrl fdivr inc mov cmp lock fsubp sahf mov adc fiadd push add int3 (bad) jle pusha ret stos rcrl scas xchg sub xor mov mov popa and dec cli cmpsb mov mov popf hlt popa push fmuls mov fidivr mov inc mov xor push mov outsb xchg xchg lock inc test pop hlt inc sbb test inc jecxz pop pusha stos adc popa stos xor sbb jae in xchg in in xor inc int cmp mov push (bad) sahf adc dec decb sti ljmp out ficom test into mov pop mulb stc push rol pusha push jmp iret in fs adc test repnz repnz ret inc jp lods fsub xchg stos sub jle pop fwait inc pop sbb mov xchg xchg add (bad) imul pop movsl adc mov jae out pop stos loope sub ss lock out sub jno sbb fucomp fs repnz and rcr outsb mov arpl in fmull pop push fwait aam lret stc pusha icebp mov insl (bad) push mov rorl push ljmp jle cmpsl stc pop pop add add sbb out cltd fdivrl mov mov mov addr16 jge mov stos xchg cmp fistpll cmpsb in fisubl jae or lea push sub push lea add stc btc mov shr btr sub pusha xchg not mov sar mov xadd mov rol xor mov pusha inc mov sbb pop mov cmp test test test or mov jmp int3 or xor or mov or xor lcall xchg mov (bad) mov (bad) cmp cmp add inc mov (bad) jb aas sub add out mov scas inc mov and push lock adc lods fptan (bad) aaa sbb sbb xchg xorb cmpsl outsl test sbb lcall dec dec enter (bad) adc gs adc push insl push sub outsb addr16 sub pop mov fcoms es outsl sbb loopne gs and sub inc or test push (bad) repz mov les cmp daa (bad) (bad) xchg js cs pushl and pop insb cld push loop dec add jmp out lds (bad) adc push repz lret or fwait subl ret mov pop adc out out pusha aas test stc (bad) dec shl f2xm1 aad mov adc gs mov jecxz cmpsb mov inc test pop mov cmp push mov (bad) adc mov popa mov sbb imul mov aas mov xor lret fcoms stos mov push push mov jmp nop xchg and jp leave pusha scas call or jns xor stos xor cmpsl int3 pop xchg dec iret mov and cmp jle pop daa xor out push jle xchg fild xlat call loop ret or adc xor out movsl loopne scas lcall imull aad fidivl push xor hlt js das and mov sbb pop std xchg hlt ds fs inc xlat cmp cmp rcr sbb and enter adc loop cltd popa arpl add shl mov arpl or in inc mov jns hlt cs test sbb movsl out jbe dec setge inc pushf shl xchg pusha mov (bad) repz setne mov test bt call jmp shl call bt neg clc xor bt pushl stc call pushl lea jne aaa lea sub rcr mov rcl (bad) lock and clc xor add dec rcr pushf mov bt push cmc test jmp mov add bound js cmp fs dec mov outsb add mov loop orl jl repz cmp xchg out or insb enter push adc add je sub test rorl adc ret mov dec pop or add cmpsb fiadd jl push push push sub jge push adc popa icebp push jne lods rcll test out mov mov or out frstor fwait enter hlt dec pop push cld js push clc ja les inc sarl in xor shll inc xor movl pusha mov pushf lea jmp cwtl lahf push neg mov ror sub call call dec jmp movl pushf call stc bt sub bt cmc cmp pusha or call pop repz lea jmp pop jb outsl dec enter jae cmpsb aad (bad) cmc repz push ljmp and cltd sub in mov mov jnp xor pop test inc ja push inc ds addr16 pop (bad) mov imull xor inc xchg lds in xchg lods sbb mov scas add (bad) in push insl bound cmpl xlat dec mov aad jmp sbb and xchg outsl mov mov mov push lcall xor lahf mov stos js lahf sahf sbb out inc dec sub push fnstenv out xchg jge sub pop bnd cmp and leave cmp test rclb les call pusha call bt xchg stc mov call mov clc test add push sub jne pusha cmc test jmp jmp cmp cmpb push lea jne movzbw sub inc dec aaa shrd mov shl test add (bad) lock test call lea jne btr mov test sub not ror bsr sub mov jmp adc jmp jmp jb nop dec mov jbe dec rcrb xchg jge mov repnz cld inc sub mov das nop out arpl and bnd rcrl dec jg dec push scas mov int lds (bad) push nop test popa rolb sahf lret cmp add movsl (bad) out hlt push push push call sub fwait in add out pushf push outsb mov (bad) mov insb dec call pop cmp stos mov jne or mov test rcrl or pop bound sahf test sti inc dec pop xor addr16 push ret pushf not setnp jmp shld and data16 lock stc push pushl jmp clc call pushf movw lea je bt stc test cmp jmp jbe sbbb jnp mov iret push mov in divb shl mov push pop push cli es leave insb mov mov dec push es jb scas jg lods cmp sub popf dec shl loopne jb mov (bad) mov ffreep xchg mov clc dec mov fdivs adc lock sbb leave dec or sbb and pusha lea jne bswap mov push pushf movb lea jmp movb pushf lea call jmp bt cmp mov jmp ror mov setge shl mov adc mov bt js add xor pushf setge lods dec call movl pushf pusha movl mov mov pusha movb lea jmp pusha mov push mov pushf pushl lea jmp mov pushf clc bsr pop mov bt jmp call adc movb pushl ret pushf jmp add inc gs inc push add sti mov cmp call std lret mov xchg loopne test js jge lcall ljmp jge cld popa and adc insb mov push test or jns and cwtl mov pop into add jmp rcrb aas pop xorb and add sbb fistpl lods mov jo test bound stos jno pop (bad) sysenter cld inc mov daa cmp cli xchg mov pop jecxz inc (bad) pop and scas je in dec xchg jp lods push test lock out and scas mov (bad) rclb xlat dec cltd xor mov outsl pop cli xor cmp or mov mov test mov js das fisubl inc pop lret jnp test (bad) icebp or (bad) dec jp dec sbbl sbb into ja inc lret mov out test adc or xchg test fwait lcall fisttpl mov cld dec popa loope mov pop dec in jl ja cltd jmp sub mov std jge outsl mov xor or (bad) jg dec mov lcall dec jl lds ja and inc mov das lcall sbb inc mov scas mov inc xorl lret sti push int3 cmp ror sti sub dec push sahf mov cmp imul mov ficomp xor pop divl stos insl and jne lock xchg insl xchg stc jbe adc js mov jg mov jge cmc sub movsb arpl mov jmp cmpxchg8b jge xor mov sarb jp mov pop (bad) jbe ret xchg lds dec ja jle push inc stos push mov shlb sbb sbb lret cmp cmp enter lods lods jnp lret cld dec movsl xchg lds lret mov or jge inc nop mov pop into popf in lcall sbb or clc cmp test mov mov and inc sbb xor mov push cmp call clc test or call pusha jmp push add sub cmc pusha clc mov add pushl dec pusha push jmp call lods mov inc mov adc pop das sub push xlat inc mov sbb pop sub fs jmp lahf ljmp inc test and sub mov insb loope cmp fs mov add in adc mov jne aaa cmpsb ljmp xor jnp sbb mov icebp mov cmp mov std pop lret (bad) lea dec dec mov push mov stos scas aad lret add iret xor sbb or xchg adc mov lock xchg add std push jne je std or and sbb push cli andl xchg pop nop inc lret insl jle and xchg inc data16 cmp incl loope or xchg fdivr sub cwtl jb loopne xchg lret pop mov ss sbb adc push popf cld or mov add loopne push mov inc lock outsb adc shl es and fwait push and addl cmc lcall fisubrl cmp aas add push adc xchg movsb shlb push fcmove shrb (bad) popa lcall stos adc and movsl scas and cmp and mov push fistpll call push aam pop xchg mov cmpsb xchg decl andl addr16 andl (bad) jo std dec andl out add int (bad) jecxz rolb jmp xor add cmc xchg fnstcw out stc fnstsw and scas mov ja std jb outsl rol std jle enter adc jg or mov call movsl pop lret inc popl xor int3 icebp and mov push shr inc and imul ficoml shll repnz mov sub add mov scas and pmulhw adc and xlat push shrb inc add pusha pusha call sbb jmp adc rcll xchg sti pop mov repnz stos jnp cmp rol test cwtl (bad) xchg lea xorb scas pop sahf in mov push add xchg xchg fsubrl push ret xchg dec dec loop dec jae arpl mov dec xor inc mov push push mov rol xorl ss in xor add scas xchg mov mov push (bad) push es pop xchg push sahf fsubrs mov add push inc outsl pop cs (bad) mov enter sub mov sub adc xchg xor mov mov xchg fsubs pusha pushf movl pushf push pushf pushf movl pushl movb pushf lea jmp call mov movsbw mov pushl call add inc js je jb arpl jae movb dec mov call jl jbe xchg adc lea repnz (bad) nop xlat adc sbb push and mov aas cmp and cs ret addr16 xorl data16 mov das fnstsw cmc mov addb mov sbb int3 addl jmp cmpb dec sbb push sbb gs hlt hlt lret inc sub pop mov inc or xchg popa daa cmp insl mov mov mov mov fimul or out (bad) add mov loopne (bad) stc mov push mov xorl pop out add mov nop adc lcall sub xchg push and xchg jne sbb pop bound jl or loop adc pop int in add mov adcl stc stos push lcall flds add jo in xor xchg mov sbb pop pop push and lret loopne jnp divl enter adc cs lods sub jecxz cld dec sbb test jb fsubrp jae insl cmp les jae lea jae movsbw rcr mov or mov shld test mov jmp ret movsb xchg adc sahf fisttpll mov in or sar mov pop ret xor mov pop inc push add push gs mov jp daa cmpsb xor (bad) xlat ret inc les jge sbb ljmp mov pop stc into das mov pop adc out inc out int loop and sub and sbb (bad) (bad) in out dec aaa xor mov scas daa stos mov (bad) mov mov fcmovu push mov jnp inc rol cltd pop in inc pop cltd lahf fidivl push cltd (bad) sbb sub in mov fdivs or xchg ret daa jbe hlt pop mov jo and arpl lock cmpsl sbbb inc cmc movl pushf push mov lea jmp movl pusha movb pusha mov lea jmp pusha stos mov pusha mov pushf lea jmp inc push mov lea jmp repz pushf pushl push movl mov movb movl pushf pusha mov lea jmp add mov add add add add add fcoms adc fcoml add add loop adc xor xchg addl sub hlt clc lock sti cmp sbb movsl in jmp ja mov (bad) addr16 lahf cmpsl int3 add negl es mov imul dec ret out shr jb inc pushf jecxz mov add ljmp jb dec mov aad and mov mov sub mov sbb mov mov xor mov (bad) push into in subb mov add fistpl pop sahf dec call lahf xchg movsl aas clc inc mov sbb fwait push mov inc jae incb push gs fcomps out aad jae adc sub xor pusha jmp jecxz out dec mov cltd sub add movsl xchg (bad) mov out in frstor push sub popf lock por or not push jns mov (bad) xor or cmovg pop testl loopne or push sub pop mov fs jecxz inc dec cs fmull jp or popa daa les xor rorb adc add mov push mov mov scas rol andl or dec out (bad) iret outsb pop nop xorb or add in cs clc lea (bad) jle adc xor lea cmc adc inc lret jo ret lds fpatan add dec fwait xor mov dec sub shrb aad fstpl (bad) xchg inc lret or aad xchg sbb repnz jmp adc mov loope pop cltd push sub lret data16 dec mov pop jo dec mov sbb inc f2xm1 xchg adc lcall inc jg aam rorb bnd sbb (bad) icebp data16 (bad) inc mov xchg fstpt dec fxch adc out sub out jp pop and imul hlt push jl cld pushf cltd mov jle mov leave bound outsl (bad) sti mov les aas inc std stos push lret mov mov test imul in ret rorl jb lea and negl arpl xchg push push xchg add jp scas and adc dec in and xchg xlat sti sub loope and test cmc test jl mov fcoml push leave dec mov repz test or pop test adc jle jg int3 ret adc jno lahf sub je cwtl jo popf adc es cwtl das mul out sbb notl and dec aaa sub and add and out cwtl int pop in ds in repnz adc sub inc add jo mov xlat push loope cmp fimul orl add in iret dec loope inc sbb clc pop in xchg inc fucomi pop movsb sub push sub loop decl and ficomp cmc rcr sub inc xor (bad) mov sarb imul pop add lds leave push in fs xchg repz iret push out push mov jno pop call je mov push out jp fldt loop dec (bad) insb js shr adc (bad) cmp aam aaa hlt sub and bound jb cs stos inc push jle cld mov loop pop insb push mov inc test repz jmp mov inc cmc hlt mov mov lods lahf push pop (bad) fisttp cmp mov xor outsb fstl nop or xchg add hlt jl test xchg add lock adc fisttpl into imul cmpsl cmpsb sub or fs inc loopne fs cmp jecxz sti adcb cmovge in btl mov fstpl insb inc ljmp inc cli arpl mov and scas arpl (bad) pop les mov xor cltd aaa xchg push gs lahf int mov add movb stos pop movsb or mov ds push mov pop inc ret les mov push push js dec pop call sbb imul mov adc adc outsb nop jae sarb fcmove mov icebp fstpt in loope jae and sti cmp push cld mov adcl pop xchg inc movsl roll jle (bad) and out (bad) mov add jp mov fnsave (bad) xor sub dec and mov mov pop loopne fldcw (bad) pop push js aam (bad) xor cli cltd mov outsb add call cmp and inc enter aad out pop xor push or jp xchg inc xor xor xor imul ss arpl or adc inc and and decl ficoml xchg lahf or gs mov jmp add pop into jle and in or mov pop mov or shl pop jl daa inc addl mov stos pop sar mov cmp jbe and sbb inc dec or out cmp xchg xchg aam mov adc jae out jne push nop repz push lea aam push jb aad jae sbb adc xor rorl addr16 xchg add push fsubr and push adc imull sbb insl leave js notl sarl (bad) mov mov xchg push bound jmp jecxz mov loop hlt icebp ss aad aad cmp les sbb js jae lret adcl add add ljmp rcrl out dec gs push out inc pop lcall in mov out test pop mov sub pop cld movsb test stos repz fildl sub sub push into jg js scas mov and in test bound push adc push mov pop into mov sub ja scas (bad) mov pop sub mov inc add or imul inc not mov (bad) pusha lds enter test sub lret dec popa mov test lahf add and or icebp cmp mov outsb mov ret mov enter and mov mov mov and scas sub fsubrl outsb popf nop adc and or jg push mov fcoml add sbb cmp lret pop mov sbb (bad) adc cli jmp xor imul out xor push int3 jnp or mov mov popf sbb outsb cltd test jp mov jmp xchg push sbb (bad) scas xchg out mov jg lahf push xor adc jnp arpl int3 int cmp enter lea inc fimul fidivl es test push repz arpl mov mov mov or push fild cmp arpl xchg in jo cwtl pop scas lret sbb mov cmp inc push hlt sub push push xchg test cs sbb push jg fisubl test mov nop repnz or pop lret inc xor (bad) push shl sbb xor inc pop fistpll loopne mov mov dec mov enter pop popa aaa cmp inc in cmpsb or jg sbb mov hlt pop daa xor sub mov adc jp stc mov mov pusha es mov cli stos out into scas lcall cs jmp into jns mov jne cmp inc ret or int mov (bad) push add adc fbld pop rclb in mov dec xchg les lahf sbb addb xor push inc mov xchg jle lock fimull ds es aad mov cmp pop outsb mov cltd xlat push pop mov pop push imul inc sarb cs jle jmp (bad) std les fnstenv lods and xchg mov mov hlt mov fwait jle lahf xchg sbb dec aaa push ficompl mov ljmp sub jo xchg cmp inc repnz mov into lahf inc repz cwtl jge shrb popa mov mov jns incl adc movsl xchg push movsb xor fucomi pusha jb xlat out fsub or outsb jne repnz (bad) mov sub xor ret sbb mov or test inc shrl sub lods dec xlat cwtl sbb push add loope mov sub or nop adc cmpsb cmp stos and (bad) sbb leave fmuls jbe mov (bad) push ret sub mov (bad) sub inc aaa cmp std in stos mov and add clc or es jmp aas mov or pushf pop sbb cmp hlt mov data16 mov adc pushf dec push xor jns out xor add pop test jle enter insl lods int3 cmpsl mov push sti dec mov movb aad icebp add cmpsl imul jg scas push (bad) paddb ja xchg xchg jp mov lcall pop xchg mov dec xchg push stos fisttp mov or xor push adc pop mov adc dec push jp cltd mov fld jo push xchg push test push cmp xchg mov pop rcl push mov mov aad mov jb push mov cmpsl jl fiaddl cmc adc pop dec aaa aaa rclb jle lea xchg mov xchg lret adc or pop gs and lahf add add jmp mov inc sub add sub (bad) hlt sub xor pushf jno adcl mov and lock in adc cs sar sbb cwtl std push fiadd pop adc mov repz shlb lea xlat add xchg stc mov inc sub int3 jnp or mov dec leave (bad) push mov int into loope icebp xchg sub jne mov or add and inc dec adc call pop xchg and (bad) pop add ljmp lret mov mov (bad) pushf cwtl not mov setno push lea pusha jmp movb jmp push lea je pusha mov adc pushf movw lea jmp call pushf pushl popl pushf pushf pushf pushl ret pushf pushf movl inc pusha jmp cmp repnz jmp mov adc lea in movsb lea mov xorb pushf das adc mov lret jae and inc mov cmpsl shlb mov xor or push cmpsl pop xchg das das adc shrb push pusha pop ja add sub cltd mov iret sbb or and leave and repz gs sahf dec jb cwtl lcall out movsl dec clc xchg test lahf test mov xor dec mov jo mov (bad) sbb daa push and dec in cmp xchg fnstsw add sub sub fwait inc jbe sub jbe sbb jns out cmp mov test into xor test adc je cmpsl adc jae inc mov lock sbb jle movsb pop inc xor lahf and inc pop mov xor js sbb mov pcmpeqd setbe xor loopne data16 repnz je push pop cmpsb sbb pop jmp add jb (bad) mov mov lods (bad) cmp mov inc mov stos mov mov add and popf jb insl rorl loope mov in jp push std out xchg cmp push jl inc lret xor cltd xor aad cmp movsl pop ret loopne (bad) xorl daa jle push fwait imul or (bad) or xchg dec jne lock lods push mov fnstsw dec fstpl (bad) out imul jl insl and dec (bad) xor aad xchg test adc jns add int cs lcall pusha mov lea push mov jmp in ret mov lret std repnz (bad) into pop fimul mov mov inc mov cmpsl push add mov push pop sub dec jmp les jl mov cmp cmpsl in adc pushl sub pop adc scas mov mov dec loope mov push mov (bad) xlat jnp pop fsubr stos xor movb lea sarl clc lea mov lcall and xchg mov test or movsl jecxz fdivrl mov mov pushf (bad) (bad) call dec fimull mov (bad) mov sub inc jns mov fcomp add andl (bad) icebp mov xchg pop jno push jb inc ret pop dec inc xchg mov and lret js sahf sbb inc pop jnp fwait mov add (bad) daa lret push mov cmp mov (bad) xchg jg jno cmp jne mov sub jnp inc inc hlt mov push (bad) dec stc inc notb cmovb fstl lcall inc adc out cmp pop mov inc xor xchg xlat pop outsb push arpl clc sahf xchg mov inc jbe ljmp mov push dec jbe fdivrs mov push mov cmc das mov test jg xchg int jbe lds in mov sbb mov outsb inc jl and iret mov adc mov mov push lods pop stos sbb and push fwait in push jle sub (bad) jle jo add enter cmp les pop test js mov and cmpsl push jae addr16 cmp aaa mov fnsave mov or and mov movl pushl lea jmp adc lea jbe pusha movw pushf lea jae call bsr shr bt cmc mov pushf cmpb push lea jne clc bt or sub lea mov pushf push movb movb lea jmp pop lea pushl movl pusha call jmp pushl popl bt call cmc push cmp pushf lea ja inc pushf inc call out in repz dec stc out rcll adc xchg push daa lock xchg lret pop dec addb xchg test jno sbb ss and imul or into add xor pushf push xor sbb pushf sbb movsb adc movsb inc les fstpt out les ds out out cmp dec inc xor clc loope sahf dec je inc (bad) ror scas mov stos stos mov xchg repnz adc and mov rcrb clc insb out sarb push test sub mov dec call mov adc dec push mov cmp ja sub (bad) pop or adc push or inc ja,pt and adc push lea lea popa jbe bound lock lahf xor jo sub iret pop lret push (bad) dec popf data16 adc gs mov out jae adc mov xchg fnsave pop inc test push xor popa dec cmp ja cmp or push mov loop fisttpll dec xlat dec or add xchg loope,pn outsb arpl sub int3 mov cmpsl dec (bad) jo sub inc and jecxz xchg mov mov xchg and xchg xchg adc mov add pushf jmp lcall dec push cmpsl (bad) fisttp add loop mov push and jmp jo and arpl addb inc push mov sbbl ret insb rcl (bad) pop mov jb out push loop pop mov mov hlt insb addr16 int3 addr16 inc nop inc gs add jmp ret xorb enter adcl adc (bad) int3 cmp scas adc test xor imul mov and mov push and cmp push jnp dec inc xchg or outsb cmp pop push cs jne inc jne or xchg push fdivrl mov mov (bad) add (bad) out pop pop sbb pop ljmp and subb leave js adcl pop mov sti and sub loop insl call ja cmp sbb in in xor lods cmp adc push xchg jge mov fnsetpm(287 (bad) mov adc xchg scas push inc jle or push lret inc js sbb mov cmpsl push dec mov sub repnz mov popf jmp sub ja cmp sti (bad) addr16 aaa xchg push mov mov sbb inc test inc data16 ljmp out xchg (bad) adc adc push fwait ljmp jnp (bad) daa sbb push add idivl aaa testl adc int3 pop pop xor adc pop or shl popa mov xchg fistl or add incb xlat popf int3 push and test pop xor sub xor sub sbb push jle fxch or (bad) cmp (bad) adc in pop pop int xor or call jae add sbb into pop xor (bad) pop push pop push jbe mov out xor cmc mov cmp shr pushf lea je pushf movb push call mov pushf lea jmp adc sbb mov pop inc pop push pop xchg addl and je (bad) sarl and xchg dec add mov scas dec jb inc and fmuls mov cltd mov subl inc pop adc mov xchg daa lods fcomip sbb arpl pop or rcl pop icebp pop (bad) cmp sbbl in jnp sub dec clc cmp inc divb aas mov push pushf movl lea jne pushf lea jbe push push lea call pusha push lea jmp fcomip lret adc jns pushf cli or sbb dec outsb and mov push lea in ss and aad popf sbb fs dec jge out xchg pop cltd dec pop sub and ljmp mov sbb cld cmc and or cmpsl xor jg fucom (bad) out adc lahf ds jecxz push repz jae mov outsl sbb pop outsl dec inc test jae pop xchg dec jl pop sub cmpsl push push ja push sbb (bad) outsb in add (bad) mov fwait or and test jg (bad) jnp pop cltd int test mov cmp mov push mov jno test insl lods mov das or jl add mov mov in je arpl pushf sbb xchg mov push jae aam mov adc stos adc jmp xor xchg rcll inc mov and cmpsb cmp out icebp jl loopne push in xchg pop xor sbb aaa adc push jo sub and (bad) dec loopne out push add dec fldt pop sbb roll xchg pusha (bad) push jns inc jp push pop jne push push lds mov pop mov push int test ds data16 pusha push push cmp scas mov mov nop mov in sbb jae les lea xor cmovno leave jg lods mov out cli mov mov push test sub popf push into sub arpl lret je loopne movsb stos lahf insl push push mov in js sahf ds loopne (bad) xor mov push and fidivl out adc push mov and inc and push mov add sbb decl test aas (bad) (bad) call jae push pusha pushf lea call call mov pushf push lods call lea jne shld mov bswap sub shl sub cmc pusha bt lea lea pusha sub bt pushl popl jmp lea jae pushf bt push cmc cmp mov jmp add dec outsl arpl inc insb insb outsl arpl cmpsl addb adc mov test cmp (bad) jmp mov sbb mov bound test in jns imul dec cmp inc rorl and pop xchg xor pop xchg (bad) in pop mov xorb mov sbb mov cmp cltd mov fdiv and lcall cli das sahf insb fadds stos dec rclb orl mov pop stc pop cltd test jb int shl or add pusha movl clc shld shrd bts mov cmc cmp push call dec mov data16 lods cmp mov mov inc dec insb push dec outsl ds sahf lahf daa jmp cld sub movsl fstp pop scas fisubr out push cmp mov xchg pop pop xchg jp pushf test mov jnp sbb mov in add (bad) (bad) imul mov inc and mov and in inc xor pop lret pop shlb stos push aam fmul sbb xor arpl cs dec pop lahf mov pop inc test add push mov movl pushf movl pusha pushf lea jmp lea jb jmp push lea jne pusha mov pushl mov jmp lea call jmp jmp push mov jmp stc cmp pusha movb call jmp jmp pop movsb out mov inc push dec (bad) icebp ljmp imul outsb movsb outsb insl sub imul jne repz mov xchg ss loop adc es jp push pushf push xor adc sbb fnstenv ds and jge insb jns imul sbb lcall jnp fstps fisubrl mov cli test push xor adc fisttpl inc mov mov mov add sbb sub xchg cmpsb sub cmp test lea xlat mov jne ror mov cmp stc cmp cmc add clc pushf jmp pop lea add add add add popa pop adc add add pop pop sldt add add sub ltr mov add inc verr cmp add add add iret mov lea ja lea call call lea ja mov setns (bad) lock sub shld bt rcr dec add movsbl mov rol xor mov pushf pushf clc movb repnz pushf lea jne lahf bswap lahf movb call pushf pushf lea jae push xor movb jmp adc lea pushf call pusha lea jb push cmc cmpb pusha jmp movl push call cmp pushf movb pushf lea ja xor sub lea lea push sbb sub add pushf sbb dec ror mov add stc ror sub mov cmp jmp sahf jae nop mov inc gs cmc mov hlt push popf stos xor (bad) cmc xor mov dec cld dec (bad) imulb femms sbb scas addb xchg cmp leave clc mov leave inc lret gs aaa sbb mov inc scas and mov xchg and sbb pushf int3 es push sbb stos jl jnp in or call call push xchg xor sbb fimul pop je pop imul dec outsl adc cld cmpsl fst push pop push hlt mov adc pop daa pop xor addr16 das mov pushf push push iret add jle arpl sbb jmp and or push inc push in pop pop ljmp jns ret add jl sub outsb mov mov shl mov lods jmp sub or push cmp lret arpl (bad) sbb pop lret mov inc ds js fildl aas jle xlat cmp iret pop sbb pushf lock pop movsb clc loope dec inc (bad) or int pop jl out bound shlb push movsb sub jl inc xchg mov or insl imul outsb mov and xor jno ret mov std lods bound cmp and lret mov test mov mov call incb movsb pop jg cmp shrl inc pop push daa sbb dec rcr inc fmul or add mov mov stos add stos jmp inc js testl in add adc loope jnp int daa lret add int3 mov popf (bad) sbb js xchg add daa mov push push adc lea xor ret sub push push ss adcl jg jae and outsl xchg pop add or jbe sbb fildl push xor movsbl incl push aam aas call or pop popa mov adc loopne inc cli add lea call call dec stc jmp movzwl and btc bswap shr mov pusha pushl add cmp mov push clc test pushf lea je pusha add cmp cmc pusha cmp pushf pushf pushf call jmp mov adc es arpl and add xlat (bad) out lahf (bad) cmp sbb cmp insb mov push cmpsb pop jns sbb rolb rclb pop sub inc je jns insl mov adc rorl adc in jae dec jae icebp inc scas nop jns (bad) add pop cltd add ljmp sub and ss cmp inc dec imul pop movsl cmp push sub test (bad) jg in dec repz mov int3 jne int3 (bad) xchg rcrl mov mov imul ds lret lods pushf (bad) out add add fs mov pop movsb roll dec mov shl (bad) xor push jmp add push outsb out mov (bad) mov mov mov push sub pop and movsl dec out outsl jae sub leave mov outsl iret lds mov xlat popa add jns,pn (bad) mov xor (bad) cmpsb or jae push xor mov mov (bad) clc icebp add leave sti mov imul push insb mov ds add ficompl test jle and icebp pusha mov pop out in decb cli lcall arpl (bad) lea mov (bad) decl (bad) cmc cmc pushf movzwl add adc add btr btr mov pusha add clc pusha pushl mov pushf test pushf push lea je push pushf add bt push jmp pushl popl pushf mov pushl ret mov adc inc in xorl mov fwait nop add push mov sbb outsb jne aam push push sub vpshufhw mov fsts loop mov (bad) cmp out int jb push fistp jne aad mov push jle and mov sti imul lods sbb push lcall xchg mov mov pop aaa fucomip jmp fildll pop pusha inc fistp mov insl loop loope outsb aaa cld cmp xchg decl or mov pop mov jp jl loop cmpsl inc jp outsb adc psubq xor add enter int3 pop bt call lea ja pushf lea call push pusha pushl call call cmp btr stc rcl mov clc pushf pusha pusha and pushf add push lea jmp pushf dec pushl xor clc test stc cmc neg stc cmp movw test xor cmp stc mov jmp movl pushf call push pushf pusha mov push mov mov movb lea call pusha pusha call jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp call call lea jge push mov mov jmp lea jbe mov call call mov push mov pushf jmp mov pushl push movl lea jmp shld mov jmp cmc (bad) hlt cmp bsr mov movsbw xor adc mov jmp push push push pusha mov movb pusha lea jmp pushf pushf add bt call pushf popl call mov push pushf lea jmp mov pushf movw push pushf lea jmp setp jl not pusha mov lahf mov mov pusha pushf mov divl call mov push movw pusha lea jmp push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp pushl lea jne xor mov cmc test call pushf popl pushf pushl popl pushl push movb movl lea jmp dec mov stc pushf sub stc pushf clc bt add push lea jp pushf pushf popl push movb pusha pushl popl movl push lea jmp mov mov movb mov mov mov lea jmp lea jne bsr adc rcl rcr xorb not pushf lea lea mov mov lea jmp jmp add btc sbb not sub neg call jmp call jmp pushl popl movb mov mov lea jmp jmp not mov pop movzbw mov mov movsbw mov pusha jmp mov push mov jmp shrd aaa mov bswap not bt mov jmp lahf shr mov lea not ror mov stc add pushf mov movw lea jmp sbb shl clc mov jmp mov movb push lea jmp movw jmp pusha movb pushf mov jmp movw pusha pushl popl push movw lea jmp mov mov lea jmp jmp mov push push mov movb lea jmp push pusha movb mov pusha pushl mov movw jmp push lea je push sub cmp cmp xchg stc mov cmp clc jmp pushl popl push pushf pushl lea jmp xor movzbl bt call mov mov mov movb pushl ret sub xadd clc mov pushf and not shl mov bsf bts mov shr pushl popf pusha mov bswap lahf mov pop push mov pop lea mov lahf pushl lahf mov lea mov seta xchg movzbw mov jmp xor pusha mov pusha push neg pushl dec cmp cmc cmp cmp bswap cmp stc pushf stc xor cmp clc sub clc call stc stc stc shl movl mov pusha mov mov jmp pushf mov jmp pushf pushf popl push movb push pushf pushl popl pushl push mov lea jmp aad shl daa stc mov sub stc cmp rcr mov cmc cmp sub jnp shr pushf pusha pushf movb mov jmp call push mov pushf pusha mov push push pushf lea jb push jmp test movb stc add jmp call pushf movb mov movb pushl lea jmp addr16 scas ljmp cmp pushl and scas (bad) clc ds call scas lcall scas call cs pushl scas jmp scas (bad) fsubs scas (bad) (bad) and incl scas pushl and scas decl lcall sub ljmp scas dec sub scas decl and (bad) clc ds dec sub scas (bad) in aas scas (bad) clc ds call scas ljmp cs (bad) (bad) aaa scas (bad) clc ds call and (bad) jle scas call cs decl xor jmp scas call and pushl inc scas jmp scas call cs (bad) cmp scas ljmp scas call cs pushl scas decl xor ljmp ds decl scas inc daa scas call sub (bad) fsubs scas (bad) clc ds call inc scas ljmp das scas decl lcall and call inc scas dec sub scas call scas decl scas call cs ljmp cmp (bad) jle scas jmp scas pushl inc scas call inc scas decl scas decl scas pushl sub ljmp cmp (bad) in aas scas (bad) fdivs scas (bad) fnsave scas lcall scas (bad) mov inc scas (bad) fsubs scas lcall scas ljmp sub (bad) cmp scas (bad) fnsave scas pushl inc scas (bad) clc ds pushl and scas (bad) (bad) and (bad) mov xor call scas (bad) cmp scas call scas (bad) fldt decl call scas (bad) mov cmp ljmp daa scas (bad) mov xor call scas (bad) cmp scas (bad) (bad) and lcall aaa scas (bad) fldt call scas pushl inc scas decl incl decl scas ljmp xor pushl scas call inc scas (bad) jle scas pushl sub (bad) fnsave scas pushl scas ljmp sub (bad) clc ds incl scas (bad) (bad) aaa scas decl sub (bad) mov aaa scas call cs incl scas pushl inc scas lcall scas decl decl call daa scas call scas ljmp sub lcall and (bad) mov and call and decl inc scas ljmp cmp ljmp sub (bad) (bad) and pushl scas decl xor (bad) jle scas lcall aaa scas (bad) cmp scas pushl inc scas call cs ljmp scas lcall sub (bad) fdivs scas jmp scas (bad) fsubs scas (bad) fnsave scas (bad) (bad) aaa scas (bad) fdivs scas pushl and scas (bad) fildll scas call inc scas pushl inc scas decl scas decl scas call and ljmp inc scas ljmp cmp call cs ljmp cmp lcall and ljmp sub jmp scas pushl inc scas incl pushl sub pushl sub call cs decl (bad) fildll scas (bad) fsubs scas lcall aaa scas inc cmp (bad) mov ds (bad) (bad) and ljmp cmp incl scas pushl and scas (bad) clc ds lcall and call cs (bad) call push pushl movb mov jmp mov pushf pushf lea jb push jmp sub push mov mov mov push movb movb lea jmp ror add pusha mov mov call cmp add push mov lea jmp pushl ror clc clc cmc bt sub call pusha pusha mov jmp test btr sub mov add btc bts jmp push mov call sar xor mov clc jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp pushl popl movb push lea jmp mov movb cmp pusha jmp call pushf pusha mov pusha pushf mov movb push movl lea jmp push mov pushf pushl mov mov push pushl mov pushf call lea pushf pushf movl jmp pushl mov pushf mov jmp push push inc jmp pusha mov jmp call notl or shl mov jmp clc add push push mov pushl lea jmp call push call movb jmp call mov mov movb pushf jmp movb jmp jmp add jmp pushf pushl pusha mov jmp rol movzbl push add pusha pushl inc call mov pushf pushf mov pushf pushf mov lea jmp bts ror cmp and mov call mov push mov push mov pushf call mov pusha pushl push pushf lea jmp add jmp sub call aad push ror mov stc clc add cmp sub pusha test movl add cmp neg stc clc pushf call pusha mov jmp mov movb push push pushf lea jmp and pushf cmc test cmp jmp mov call jmp pushf call jmp mov jmp cld call xor bsr aaa shrd mov stc cmp sub call pushf neg ror add add call call mov call pushl lea cpuid stc pushf test sub stc stc mov stc cmpl pushf push mov mov jmp push pusha pushf mov movb mov call jmp dec mov jmp cmc pushf add call mov push mov pusha lea jmp inc push push mov pushf lea jmp pushl popl push push lea jmp mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp bswap pusha jmp jmp pushf mov mov mov pusha mov call mov pusha pushf movl lea jmp movw push mov push pushf push pushf popl pushf jmp pushf pushf pushf popl jmp jmp mov movw pushf lea jmp inc push test cmp pushf neg pushf clc ror cmp mov clc sub push pushl clc clc mov push sub jmp pushf mov jmp pusha mov movb sub mov cmc shr jmp pushf pusha mov xor rcl stc mov jmp pushf mov push call mov push mov lea jmp lea cld push pusha not mov pushf cld jmp clc pushf and pusha movw mov mov lea je pushf pushf jmp mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp pushf pushf mov call clc pushl popl pusha jmp pushf pushf popl pushf jmp push mov pushf mov call pushf mov movb pushl pushf lea jmp mov mov lea jmp pushf push call call jmp xor mov neg add mov cmp test add call mov mov movb pushf jmp or mov dec pusha mov pushf cmp add pushf pushf pushl mov pushl push lea jmp pushf mov call data16 repnz mov pusha call jmp pusha push sub jmp jmp mov pushl pushl jmp call call xchg cld pusha mov mov call pushf mov mov movb pushl push mov lea jmp jmp xadd aaa bswap mov mov shl call bt cmp mov bt add cmc bt shld pushf jmp daa aaa add mov sub sets call movb push pushf divl pushf mov mov mov call movl pushf popl push call push mov jmp push pushf mov call bt clc sub pusha mov push call push push movb pushf mov lea ja pushf mov pushf push jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp test add push mov push mov pushl push pushf lea jmp std call rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp pushf popl lea jo pusha pushl popl pushf push pushf lea jmp pushl popl mov pushl lea jmp sub pushf mov mov pushf pushf pusha push lea jmp bt add pushf jmp movb call xchg mov cmc shld adc mov cmc clc pusha add pushf call bt add mov mov mov lea jmp mov movb lea jmp movb mov pusha pushl mov pushf call mov movb push pushl pusha lea jmp jmp mov xchg push bswap mov pusha not pusha mov jmp mov pusha push push pushf lea jmp bt sub mov mov mov mov mov push pushf lea jmp call pusha pushf mov push pushf call not push pusha pushf mov pusha mov jmp mov pushl pushf pushf lea jmp or call movzbw sbb lea rcl shl sub bt lahf lea cmc sbb and neg data16 (bad) jno or enter add push pushl mov movb push jmp mov mov push pusha pushf lea jmp shrd not mov stc bt stc add pushf mov jmp call cmp test not pushf not stc clc sub bt clc bt push and push mov mov push pushf popl push pushl popl push lea jmp call push push movb movb mov pushl mov push jmp push mov pushf pushl jmp call shr mov movsbw dec bt mov rcr bt mov cmc test pusha stc add pushf shrd call call pushf call ror cmc pushf cmp sub cmc call rol mov call stc call mov movb call push jmp lea movw xchg not pusha mov pushf jmp call sub pusha lea jne clc xor call mov pushf pushf push lea jmp pusha pushl popl pushl movb pushf lea jmp ror xor rcl mov shrd pusha pushf xor push bswap inc not rcr clc ror movsbw dec movsbw bt sub data16 icebp xor movsbl pushf not inc rol add cmc lea movzbl push cmp mov jmp lea jo push pushf mov jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call jmp mov pushf popl call pushf pushl xchg pusha pushf jmp pushl popl pushf lea jmp mov push pop mov mov pushf mov call setno mov jmp call inc pushf clc bt add jmp movw pushl popl movw push lea jmp jno and clc mov mov setbe dec mov test push pushf sub pushl test cmc shr pusha call mov pusha jmp mov pushl popl mov mov mov movb lea jmp call mov mov jmp test cmp call stc shr pushf jmp bswap movsbw xchg lea xchg lea push pop pusha xchg mov repz popl setnp bswap pushl popl not push movl push mov lea dec mov movsbw pushf inc ror call shr aam mov xor stc rcr rcr mov jmp lea cmc bt sub pushf stc clc mov add lea jns pushf clc neg stc ror call jmp add add push mov mov lea jmp call pushf popl jmp push pushf lea jmp stc bsr mov mov pushf pushl call call pushf popl pushf mov pushl popl pusha pushf pushf lea jmp call mov jmp call lea jnp xchg pusha pushf movl movl pusha mov push push mov pushf pushl ret pusha pushf pushl mov pushf pushf pushl lea jmp add pusha pushf mov movl call mov pushf push movb pushl ret pushf lea jmp xor neg movzbl cmc call jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call cwtl cmp clc clc cmp sub pushf mov pushf pushf pushl lea jmp call jmp pushf lea pusha mov pushl pushf pushf lea jmp call pushl popl pushf pushf pushf movb lea jmp pushl popl mov lea jmp jmp lea mov and test mov call jmp mov pusha movb mov pushf pushf mov call btc add adc and add push mov jmp rcl pushf pusha mov btc adc not data16 repnz cmp add jmp call mov push pushl mov pusha mov push jmp stc sub pushf movb mov pushf lea jmp movb pushf jmp pushf mov pushf mov push pushf pushl ret push mov pushf jmp stc clc add pushf mov mov push movw movb lea jmp mov jmp pusha mov call pusha mov call pushf push mov mov lea jmp mov call pushf pushl popl mov lea jmp jmp bts mov sub test sar mov pushf call pushf movb mov pushl mov pusha pushf lea jmp pusha mov pushl jmp popl push pushf push push lea jmp jmp rcr bt lea call mov pushl mov mov pushf mov pushf lea jmp pusha mov call pusha call push pusha jmp pusha jmp call jmp mov push call mov pushf pushf popl movb pushf pushf call cld pushf rep shl neg pop mov clc rol mov std pushl popf mov movb mov mov lea jmp (bad) testb aad push pushf sub dec neg sub adc add jmp call pushf popl lea jno push movb pushf pushl popl pushf push push lea jmp inc setb sub call not clc not cmp jmp not aam mov bt jmp pushf mov mov mov pusha pushl lea jmp call mov call cmc cmc pushl popf pushf mov pushf lea jmp shrd mov push add pusha push lea jmp call inc clc shr mov sbb call mov call sub push call pushl movb mov movl pusha mov pushf mov push mov push pushl ret adc mov pushf stc mov call pusha movl mov movb pushf mov lea jmp bt rol lea dec cmp add pusha lea shrd bt sub rcl mov shl bt mov bsf bswap add movzbl mov sub shrd cmp rcr xor rcl pusha rol lea bswap sar not movzbl xor shrd setb (bad) cmc shl xor btr rcr shr rcr movzbl mov pushf lea adc cmp neg mov test pushf bt stc neg jmp movw jmp mov mov pushf movb lea jmp cmc sub test cmc add call movsbw movsbw mov pusha pusha jmp cmp mov cmp add stc clc stc movl mov movb sub call cmc movb rol push call pop movsbw mov jmp mov mov movw pushf popl jmp push push mov pushf mov jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov xchg movsbw movzbw call stc movzbl bswap rcr shl bsf sub setg movsbw mov inc neg shld sete clc neg mov cmc push ror bsr sub rol rcl mov stc pushf pusha cmc add pushf call pusha pusha add call pushl pushf pushl popl movl mov mov lea jmp mov call pushf test pusha movw neg call rep btc mov cmc add mov movb pushl popf pushf mov pushf pushf lea jmp test sub jnp add push jmp call bsf bswap lea movzbl dec clc add shl bts sar add lea test not mov or neg ror and add pushf push add dec mov call shr mov sar dec adc rcl mov push cmp mov pushf sub pushf bt shl call jle cmc rol mov stc dec bsf bswap mov jmp bt xor movl jmp call xadd sar shld mov pushf (bad) icebp mov clc sub cmp test pusha shl pusha mov call stc movb add jmp mov push call pusha call jmp mov mov pushf mov pusha mov pushf pushf jmp mov push mov push movb lea jmp pushf mov jmp pushf call pushf mov pushl mov jmp mov mov lea jmp stc pushf shr call pushf jmp cmc stc sub stc stc xor call jmp pusha pushf pushf mov push mov movl lea jmp mov jmp mov call call pushf call bt pusha sub cmp cmp pushf cmc and jmp mov mov pusha mov push mov mov pushf mov call movl jmp mov pushf jmp mov call jmp pushf mov jmp movsbw xor mov jmp pushf jmp pusha movzbl mov movsbl movsbw pushf pushf xchg lea call not inc bt stc rol not not mov pusha inc and ror add call jmp shr add btc mov cmc push sub movb call pushl pushf mov push pushf push movb lea jmp btc lahf jp xor mov shr shld dec clc mov pusha add jmp jmp inc rdtsc stc test test sub pusha mov pusha mov mov mov lea jmp mov mov call mov mov push mov jmp mov call add call mov pushl mov jmp mov jmp mov pushf movw mov push mov jmp pushf mov mov call mov jmp jmp pushl mov pushf lea jmp mov movzbw mov jmp movb mov call mov pushf push movw lea jmp push mov call mov push pushf mov pushf mov movl lea jmp mov pushf popl jmp mov pushf pushl pushf pushf popl jmp add pop add add inc inc add push add roll add add loopne add adc add add add mov 