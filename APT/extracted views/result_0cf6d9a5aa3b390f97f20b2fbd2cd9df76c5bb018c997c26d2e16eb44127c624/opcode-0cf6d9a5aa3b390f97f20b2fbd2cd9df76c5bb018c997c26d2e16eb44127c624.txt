pop mov lea jns add push xchg jno push dec rolb inc mov or sti xchg pop add and test les jnp mov (bad) popf outsb add cmp and lods xchg add jno cmp and jne xor pop sub dec dec ja push jne cmpsb mov aad or loop es mov or xchg and sbb leave test push jbe mov fisubrl stc lret cmpsl iret jb mov int mov test mov imul pop sbb pop xor imul adc repnz sub loopne mov into push out (bad) xor or push addr16 pop test cld fld jbe cmp lds mov mov xor inc bsf bt mov cmp and bt call lea movsbl lea pushf call pushf pusha pushf lea jb push shld rol mov add btc mov test clc shl push movb pushf pusha lea call adc mov stc bt bt cmpb call mov pushf ror bt mov clc test bt repnz push jmp bsr pushf bsf mov call jmp add add add add push or add add lods (bad) or cltd fwait or or add mov or mov add loopne add add add add mov or sbb add les add add add push mov add loopne add (bad) or push or add loopne add (bad) or sbb add faddl add add add push or cmp add in or push or inc loopne add add xchg fadds add push lea jb jmp mov pushl popl pushf push pusha push pushl ret lea jae mov lea call adc call stc add call not pushl call add pushf pushf call add inc ds movsl movsl popa xor inc dec inc fdivs mov mov icebp mov cmp (bad) fnstenv imul loop out and adc movsb pop cmp mov mov rcr jmp sbb je loope sbb add inc lods mov pop hlt jae xor rol push cmpsb ljmp mov add cmp (bad) repnz mov lock popa std shlb movsb jge jne dec repz lock gs prefetch mov fidiv dec dec lcall lret lret aad ficompl mov mov sar fimull (bad) cmc and loop (bad) gs cs (bad) call push lea call pusha pushf movb lea jb (bad) hlt shl movzbl lea shr mov movsbw btr call lea jb adc push movzbw shl mov shld shl bts setle mov cmc shr lea jae push adc pushf test cmc sub pushf bt jmp not pusha mov lahf push pushf bswap lea pusha lea call pusha pop movzbw mov mov push movl push xchg pusha lea jae not push movb call adc pushf movb jmp add or bt stc mov rol call clc stc cmp call pushf jmp lea xchg rolb inc add jle dec je outsl adc xchg ret push and ret scas insb mov push mov jns lods jle data16 push repz clc xchg shl mov in mov mov pusha imul fwait sarb in test pop rcrl jnp je cmp ja xor pop push lcall or adc mov imul jnp pop fidivl roll mov popa cmp ret mov aam mov sub ret daa pop sahf adc (bad) xor rcrb popf xor mov rclb fcmovu pop cmpsl mov pop aaa in in loop xchg fsub in and sbb enter and mov or cld push sahf add xor mov jl sbb testl sub loopne mov inc xchg into std push int3 jns mov stc pusha xor add or js lods push xchg inc xchg jno fs mov push push adc jnp mov xor xor mov jmp (bad) je loopne fwait mov sbb mov push cmc xchg movsl push lods cmpsb push mov sbb stc pop cmp clc mov mov cmp clc nop (bad) out aas adc mov lea mov or xor dec pusha hlt pop cmpsb jge pop jp or jne adc dec cs mov stos fimul mov test lahf cmp cmp sarl xchg add add or jge ljmp movsb les dec ret pusha lds inc (bad) insl pop jmp push scas jne xchg push fnsave out and dec ret add imul cwtl jno mov add out out scas xor rcrb sahf sub aad cmp sub push or mov insl stos fnstenv flds xor mov pop mov push mov scas pop mov cmc sbb pop std adc std inc xchg lret add mov push mov cmp add bt mov clc call push pushf lea jbe btr sub pusha mov lea mov sub jmp cs adc roll inc aad mov pusha insb mov inc inc push mov adcb mov scas jno (bad) dec fwait andl xor cmpl dec fldenv iret mov dec push dec mov sub mov push andb (bad) fcoml xor js bound xchg push sbb jge les js pop xchg aam subl and push lods fsubrs sti pop imul add cmc cli test pushf pushf test jmp dec mov call fsubl rolb faddl inc adc in adc dec (bad) pxor xor sbb les loopne push rcr int add inc or push jp arpl sub loopne aaa add stc mov or fnstcw mov sub inc mov stos jae jne sbb push adc nopl lahf sbb aas (bad) aaa sbb push mov and out cmp int in lea lahf mov sbb imul ja xor xchg gs and aad pop sbb mov sub xchg scas mull sti fcomi daa mov cmp sub inc js and (bad) daa lcall push dec pop inc fnstsw loop mov mov jbe push add test les jbe xor mov insb xchg jg test mov lock imul lock enter mov xor cmpsl sbb lock xchg cmp movsb sub (bad) jmp js xchg jae or ret xor xchg outsw popf dec mov sbb push sbb or scas dec mov fnstcw insb mov push mov pop add stc jnp adc cld imul std xchg clc aaa movsl xor jo in int into sbb aas add inc and jg rep jmp push mov call sub push cmp jmp pusha shl pushl pushf pushf stc add call lea jb shl mov clc movsbw shld bswap mov bt cmc shl pusha mov movb jmp clc cmp pushf call push pusha call lea pushf movb mov call int add rcl (bad) into sub mov cs mov and in hlt xor into decb out pop push jecxz mov sbb ja adc inc cmc inc popa shl arpl ljmp add push pusha hlt scas pop cmpsl pushl fadds add dec arpl and inc stos test lret fcomi lds inc and adc inc ja,pt stc mov sahf cmp jnp ret sbb daa adc xor outsl cmpsl jl mov fbstp (bad) jecxz js inc sub repz lds (bad) pop cmp loop dec pop jns and movsb mov add loopne neg push xor cmc jmp adc ficompl push inc add xchg test pusha mov cwtl bound sbb mov sahf mov movl cld lock adc je dec mov pushf push pop xlat sahf adc inc int3 dec adc rcrb in sub xlat add xor add cmpsl in and jp outsl (bad) incl lcall xchg xchg mov addr16 mov dec jp sub aas and in ret xchg xchg push xor cwtl mov icebp lcall mov or sar (bad) push sub lds arpl jecxz cmc adc add dec decb add add add sbb add add add add add add stos or add add cmpsb jg add add add or add add adc add pop sbb add xchg or std push add call mov add pop add mov add fdivl and rcl repnz or (bad) push lds add add mov or test std add inc add movsb sub mov (bad) out adc loop push mov mov push xchg fisttpll xor loopne shll scas mov mov xchg (bad) sub push stos push mov das clc bound adc push outsb pop rcl inc aaa and push in pop inc jmp pop dec lahf nop (bad) mov or cli stc js adc out mov je inc ljmp mov mov movsb sbb and aam iret mov xchg iret aad sub add and test stos inc out mov das inc subl fdivl inc push rclb pop aaa (bad) inc nop adcl roll js mov mov push pushf je imul mov rol xchg outsb xor leave sub test cmpsb test shl pop mov xor mov outsb mov imul mov pop in jp ror aas adc push jp pusha cli ffree cmp sub jp sarb pop push sub mov call xlat test mov jns pop dec lret or jae fcompl enter dec and (bad) iret sub loope out leave push mov sbb inc gs (bad) adc fwait hlt push ljmp lcall or dec sub fisubr mov dec (bad) or mov lret jno xor xor jle icebp and xorl adc rorb mov js pushf or sbb dec psrad xchg mov mov jmp out insl ret jecxz gs out je ret cmp mov int3 dec jne dec lods and (bad) iret push int orb mov and out cmp or pop add mov jae pop (bad) jg and mov test jnp inc cli leave clc push insl mov stos and cli cmp and idiv inc jg and scas add aas adc bound sbb stc dec orl xor add cmpsl cmc cmc jge jns xlat cmp add scas and push jecxz in add dec aad cltd in mov jae pop jmp les leave in cmp pusha loop fmul addr16 std mov fdivrl icebp and push stc inc and sbb push scas insl ds jge in jns jmp lcall cli int mov inc clc pop pop pop aam cmp add or into xlat shll xor inc mov lret xchg shll inc sub das test mov rcr push mov or mov scas pop ljmp sub cmpsl ficompl int3 fwait in leave clc shrb call mov loope jge xor add push xchg dec mov add mov add in sbb mov cmc mov mov add sub xor stc pop push mov jo insb pop popa sub fisubr pop sbb inc addb inc sbb lret or test add je sbb fwait sbb in cmp mov ljmp push ss sbb fs lahf mov mov clc mov adc fwait stos popf fidivl divl mov cwtl scas sub mov inc inc xlat test or mov aam sub repz push mov xchg movsl fist (bad) pop daa jns jp inc or pop in cmpl in (bad) gs mov jle mov push xor leave jns lcall mov adc dec in inc push inc push hlt jmp fs mov inc mov sub lret loop mov pushf repz pop es mov popf lock mov mov add out adc jnp ret push stc enter cmp cmp es jg mov mov mov mov add sahf push into outsl lret mov push dec insb jb call sub xor js out sub or push xor push gs push lea test cld cmpsl adc add mov push rcrl les mov cmp or mov cmp mov nop popl inc dec cwtl inc or jp (bad) xor jmp mov jp shr xchg js xchg neg xchg sbb fs es mov and jp rcll (bad) (bad) xchg or bound jb into divl insl dec sub cli arpl pop adc or jnp push ds cmpsl lret shrl fimull hlt out (bad) lock and cmp jmp mov cmpsb mov lret inc cs sbb sbb mov pop ljmp sub rcrb fwait pop pop mov or lds clc and ret push xchg daa popf data16 lods pop daa fwait (bad) es outsl mov adc pop mov xchg movsb (bad) or sbb dec inc in add lahf adc pop xor jb rorl fldt subl sub fsub pop hlt inc jae mov xchg jecxz or sarb int fwait ret or ret (bad) aaa stos sub aas or adc inc push (bad) jo shl aad popa inc mov mov push sbb pusha aas test inc out nop fisubr push sbb jbe bound and lret push xchg cmp out jle outsl mov sbb pop sbb sbb mov arpl into sub mov ds mov adc fs iret sbb out cmp outsb call dec fwait add flds hlt (bad) lods nop scas cmp icebp das into pop xor push pop loop sub fadds test and xlat das ja xchg fcompl and subl jle and fwait dec ja adc fstps mov mov cli cwtl mov push xchg adcl flds data16 push ja arpl fldenv mov mov adc xchg adcl hlt dec mov test add scas (bad) cmc int mov lods sbb (bad) adc (bad) jnp fnsave mov xchg mov aaa mov test xor mov push sbb xchg into adc stc jle (bad) movsb mov aam stc adc mov sti cmpsb mov cmc (bad) shrb jnp jmp lret mov aad das push push jno cltd aas je (bad) sbb inc mov into and divb xchg and mov popfw (bad) push movsl gs stos das in xor enter pushf inc test repz sbb push jle add imul mov add and sbb adc or mov jb or xor cli xor nop add inc (bad) mov test call dec mov or sbb and or sbbb sbb aas and fistl sbb push movsl fisubr add jae adc ss rcll rcll push jns ljmp jbe mov xor mov push pop jge call shll sub push mov sbb aad lret or repnz (bad) xchg mov xchg add setle jmp sahf idivb ret cwtl pop pop pop pop out sbb or xchg pop mov mov xchg repnz xchg pop pop push arpl loopne xor (bad) incl imull das rcll ja adc mov pop sub addl test loopne add dec mov ss or imul out adc out mov inc xor jge xchg nop aas push sub sub jge pop rcrb push dec lea outsl xchg mov jne iret pop (bad) cmpsl xor test cmpsb xor dec icebp and jb daa in cwtl std lods dec jg (bad) jecxz bound sub xor aaa imul mov hlt inc jmp dec inc add lds (bad) push dec icebp cwtl mov mov movsl push sbbl xchg pop inc mov sub add jl enter in sub in cmp xchg xchg cmpb add inc mov cltd (bad) push inc jecxz ljmp pop int pop jg sbbl mov imul lock mov repnz into in push sub mov and int3 mov and outsb sbbl and add popf js or push hlt insb incl dec cmpsb lea scas fistp or sbbb fisubrl jge lds dec dec mov mov inc ds jo xor scas nop out pop (bad) xchg inc out mov mov dec sbb xchg inc jo cmp lock repnz (bad) jle add ret cld jle push cwtl repnz or ror sar mov mov push push add and bound push inc js leave rolb lods in lods jo mov mov (bad) mull bound cli out jo mov es and out jb stos mov insb scas cmp dec sub mov push (bad) inc daa repnz inc (bad) test adc lods std sub jmp in in pop cwtl cmp into pop cli out xor sbb xchg xor sub adc jns mov inc mov jbe dec bound scas push mov fstl jl js cmc sbb cmpsb push mov adc loop adc pop clc add pop dec or in xchg leave es mov lea cmp sbb and pop jo dec add repz out mov rorl imul ficom aad cld push jne mov push adc jecxz mov dec pop xor add push add clc ror inc cmpsl leave aad aas jb xor fadds std dec inc mov cmp jmp test add add mov (bad) bts mov (bad) cs adc stos pop loopne xchg adc inc jae repz sbb mov fsub int3 ds push push shll push loop cmpsl rorb pop shlb mov daa pop fidivr push scas mov in cmc sbb mov mov test loopne mov jp cmpsl lea fsubrl cmc les sbb pop push in daa xchg rclb aas lods push mov lahf or mov and and fadd fsub fisttpll fisubr ret dec adc pop into sbb or mov xor stc or js clc xchg jle ss sbb roll pop push out jecxz (bad) or cmpsl insb movsb inc sbb cmpsb push sub leave xor pusha int3 cmp imul xchg test push sub popa lods dec dec call dec ja jb iret fsin fimull sub daa test push test lahf push pop mov (bad) bound nop lods cmpsb sbb out (bad) adc adc lds pop hlt jg loope adc lea pop xor xchg or aaa add int and cmc dec xor scas ds mov out repz pop push xor mov cwtl (bad) jne scas cmc lea (bad) out mov pop or es test jne testb inc add mov fdiv pop sub lcall insb lock push mov inc test inc ret mov inc jnp xchg cmc clc scas dec or dec (bad) cld outsl and and loope fwait out inc pop mov in test inc or mov sub enter xor test nop popf or xor cmp xchg sub (bad) fisub popf mov jmp adc xchg imul sub imul xchg add pop mov cmp xchg sbb sub add mov lea movb movw jmp mov push inc movsb cmp cmpsl dec inc gs push inc mov push adc bound fs mov lods mov mov push nop (bad) xor mov jl rclb inc push jmp loope sbb dec insb add xor push lret (bad) mov mov xor jg sub fildll neg add push popa and jno cmc std sbb in rcrb rcl sar iret add jle sub enter mov cltd dec xor mov push test imul shld xor bsr lea cmc cmc adc btc push add push bt bswap shr clc mov pushf mov pusha stc clc jmp stos add jo push inc out movsl add insl or cmp adc mov or int3 xor rclb icebp adc push pop lock fsubrl loopne mov sbb mov jg and (bad) push ja shll push add cmp stos pusha ss in ss fs fs cmp or cmp scas mov cmp and adc (bad) mov sub xchg scas xor loopne mov bound xchg aad pop fnsave xchg dec xchg fiaddl and mov insb in into negl cmp jecxz in jno xor dec jns lcall push pop mov pop mov pop and ror int jns negb sbb nop (bad) pop inc xor inc mov cwtl in movsl xor cmpsb cs out lret sbb lcall sti aad add dec and pop or xchg enter sub push inc je repz fninit pop outsl lahf jnp mov dec lcall test jns fstl sahf pop push out cmpsb out pop adc fistl ss pop fwait arpl imul aam data16 das scas shr xchg jmp mov xchg clc cli jl jb loopne pop test fsubrs add mov mov fadd fwait bound (bad) cld xlat aad (bad) jbe bound fldl mov mov add outsb lcall rcll sbb mov scas jbe cmp xchg test xor stc cmp lea pusha pushf push pushf lea ja clc pusha call les inc negl test rcl cmp pop mov inc sbbl mov or fstps dec mov dec and mov sbb pop shrb out adc rclb nop sub jge add dec orl adc (bad) jno pop in mov insl jp mov ret jecxz repz in sbb jbe add (bad) or xor insb inc clc mov lock loope cmp push push fs pop mov xor xor mov or test fsubl int mov test mov pusha pushl pushf stos call cbtw addl in dec mov mov and xchg lret nop shrl pushf jl pop mov loop into adc dec loop cmp pusha stos lock je hlt add js dec bound rclb sbb movsb test repz call cli xchg jnp fsubrl push sub cmp mov pop jle xchg (bad) fidivrl mov ret sub push sti pop aam push test repz push add fs jne push pusha xchg mov pop mov cwtl movzbw movzbw mov lahf setae movb setne lea jmp lea je pusha pushf pusha lea jmp sub not lea pushf lea call pusha add add sub dec and daa pop movsbw pusha mov pushl test clc cmp mov call pusha stos pushf movb pushf lea jmp mov call add clc cmc cmp jmp aaa shll sub xor cwtl cmpsb insb arpl and (bad) dec in sbb imul cli xor mov inc dec lds ja stc sub pop pusha leave or lret dec xchg test loopne into jb push imul sbb or and mov lret out in xor xchg adc add adc inc out push and or mov (bad) loop mov lods and mov arpl dec imul mov mov out pop lods movsbl mov arpl cmp mov (bad) ss mov xlat aad adcl cmp nop inc push jbe and xchg rcll pushf outsb int3 dec pop pusha les (bad) xchg outsb push lods pop lret pop (bad) (bad) lahf mov faddl or aam cmp lds pop push sbb int cld mov fstpl sub test lcall jnp mov mov mov imul and scas pushf and insb lahf sbb lods scas or add in into xchg xchg and fidivr fnstenv (bad) adc imul sbb nop cmp xchg add push push test xchg pop inc imul jle xor test sahf mov sbb aam cmp (bad) xlat and test push in loop jo inc test (bad) movsb aam sarb xchg jl data16 or adc lock inc ljmp jns repnz inc dec mov into addr16 imul lcall adc mov mov cmp es adc enter cli dec cmp sub xlat (bad) in jmp dec gs jmp mov jb cltd sub sub stc xlat cmp movsl mov icebp test jno pop jp jno int3 mov lahf push jbe pop imul (bad) inc lret add adc xor out dec fistpll sbb mov jnp mov xchg test jl pop in ret stc lock cwtl jg cli into out cmp das pop xor xlat xchg icebp pusha mov mov push dec cmc jne std imul fnsave jne xchg adc add pop push into adc jle lret sub pop test dec rcll (bad) jnp insl xchg add jns leave cmp xor pop lcall jo dec ja dec jge (bad) lock test xor leave fldenv in mov xorb push ficom ss (bad) xor mov (bad) mov cmp clc into xchg cmp daa pop (bad) data16 cltd dec sbb cmp in jmp sbb mov xchg push fxch pop mov movsb push xchg push push fninit push jle aam push mov hlt push jecxz hlt fimull in lcall rcl insl aam xchg jmp ret xor jno (bad) scas dec and enter lret mov les (bad) add mov ror mov pop cmp mov push stos sbb iret cmp adc inc add jmp scas loop int3 xor xchg je dec xchg data16 mov dec (bad) and insb xchg addr16 xchg inc add inc push in out pop lahf xchg cmpsl pop cmp in test xchg popf mov mov loop arpl lahf arpl cmp jle push in jmp jg or js enter sub mov jmp sahf push mov dec jmp or fisubl not dec mov push (bad) sub push aad or (bad) add adcb xor cwtl sbb sbb xor aaa pop movsb add xor pushf loopne orl push add out push add mov std (bad) cld xor add jp ljmp adc inc mov xor xchg xor sbb es sbb sbb rcrb sbb (bad) shr xchg flds add pop inc pop push push mov xor xchg dec bound add push pop insl xor pop cltd out push cmp add call out nop mov cs stos test int3 inc jbe nop orl push cmp xchg iret into insl rclb or (bad) jne lahf sbb dec fdivs xchg cmp hlt add ficoml int ret or dec mov mov faddp dec mov js xchg mov pop inc out (bad) pusha and push lock lods or add mov and jmp push in addb jg push and xor mov ljmp lods jne jne adc jb lret or sbb sarl pop jp stc fs jge add cs pop push lcall mov cmp mov cmp stc lock aad ss out sarl cltd adc ja std pop lods fsubs xor pop mov cmp aaa mov insl int3 push adc stc mov push and es setb mov push pop cwtl lea movb jmp pusha pushf pushf mov jmp mov pop inc scas ljmp ja add (bad) fnsave movsl fwait mov dec dec pop and shrb setp jb fisub sbb xor cmp mov stos roll es insb imul xchg repz daa cwtl dec sub sub repz mov ficomp jl pusha and loope sub adc repz pushf fdivrs test xor int mov mov lahf in sbb lock jp xor out pop sub leave scas rol mov dec mov xlat call pushf call call lea jne lea movzbw pusha movb cwtl lea mov not mov setle call jmp lea jb shl lahf bsf cwtl cmp movsbw sbb setle movzbw movzbw lea lea lahf lea mov call movl pushf pusha jmp push xchg mov push xchg call lea call jmp cld mov inc push jne push and xor dec fidiv mov cmp pusha scas scas inc popa inc jge (bad) mov dec into femms lods (bad) mov jno cmp xor dec inc out cwtl out popf pop adc test movsl xor arpl (bad) decl fdivrs popa (bad) ror sub je movsb mov or xchg rol call insl pusha mov imul iret jecxz push push repnz aam test ss imul pop leave mov lods (bad) or inc mov push cld adc mov jge or sub mov push xchg ficom pop (bad) (bad) decl and bt pusha pushf test pushl jmp jmp shld bt mov pushf pusha cmpb movb jmp call xor pop mov pop inc (bad) mov and nop push xor sti jnp cmp aam (bad) clc aaa cmp sysret ja pushf jmp sarl dec push pop or cmp jno loope lods sbb inc sti or rcpps push enter pop or mov lods (bad) xor push (bad) lret scas das scas inc test push mov jmp dec rcl test cmp aaa jle xchg ret jns xchg pop adc jge and pop lods cld jae das (bad) xor sub or or icebp fisttp push mov rorl (bad) popa mov mov fisubr jne clc pushf xchg flds jp pushf movl pusha call mov shl lea call pop ret add push push lea jmp dec mov sar rcl add push mov stc xor cmc cmp pushf repnz mov lea jne bt bsf mov call push push push call pushf pusha mov mov push push stos pushf pushf mov pushf lea jmp call push bt test movb pushf lea je clc add pushf cmp clc pushf cmp pusha movb lea jb jmp xchg pop xor sysret inc mov cmp aad gs pop ja cmpsb lcall ret jecxz out ficompl test xchg jne aaa inc mov dec jnp lret cmp xor popf fldt xchg mov inc inc xchg lods sti std pop rolb ror pop push cmc push cli push fldenv jae call movb cwtl movsbl push jmp mov movl pusha mov push pushl pushl ret icebp cmc cli jp pop inc in ja pop xlat out in xor cmp pop iret ja jns in sub and les nop jno aam jb xor mov adc jmp das pop cmp movsb adc int3 (bad) sbb mov les pop and in loop pop jae jnp loop cld cmp mov out arpl adc lret xchg dec lea (bad) rcll fcmovne (bad) je leave mov xchg into icebp and pop cmp fldcw pushf cmc pop (bad) out or mov rcll inc repz rcrl repnz fcmovb mov test ret dec cmpsb xor cmc or pushl jmp mov lea jae stc pushf call movb lea ja ja setne rcr sub and add inc rcl rol jmp (bad) inc pop aaa fisttpl repz pop adc repz arpl jbe cmpsb pop cmp pop jmp add ss mov mov rolb leave jns rclb (bad) subl lea mov fisub cmp and cmpl dec ds mov sahf xchg mov xchg std mov xorl add mov xor mov push std scas movsb mov lods add adc call repz lock push sbb dec add mov pop or inc dec nop hlt sub cld add scas (bad) dec fwait xchg cmp popa mov pop shr xchg dec add pop push mov decb sub pop test icebp mov out (bad) lret jecxz shrl mov nop sub pusha mov outsl xor cmp aad (bad) das (bad) int3 adc movsl pop idiv mov in pop jo mov into into idivb sahf sbb (bad) mov or sub or lahf push mov push dec hlt rolb push sbb call push nop sti sub jg xchg call shl cmp push clc add push sub pushf push push lea jne (bad) repnz sub inc mov lea mov rcr cmc sub movsbl mov shrd (bad) icebp clc mov stc mov sbb test mov cmc push clc call push movb lea jb btc movzbl rol clc shr rol not jmp mov pushl push pushf stos pusha movb lea jmp bt sub bswap cmc test neg lea cmc sub cmc pushl popl jmp pushf jp push or inc mov push and scas sub fadd ljmp daa outsl pop lods popa rorl push icebp cmp scas jmp bound sbb adcl loopne,pt fwait push pop xor pop sahf sbb loopne dec jg add inc adc out jne int je push dec stos jl inc add jo,pn notb mov mov jecxz mov push popf (bad) cmc dec jl adc test dec push fcoml fwait jae js cli lcall pop mov (bad) leave dec pushf sbb stos mov add push inc and adc inc sbb push iret addr16 jg cmp xor lret nop adc ja push fidiv cwtl out (bad) nop (bad) xor shrb test out sbb jb sub ja mov icebp push xor cmc mov daa in icebp inc mov icebp scas test jno and pusha mov out fsts out and mov stos dec enter inc scas cs stos scas notb sbb inc cli pop bound lret mov (bad) and aaa sub dec dec (bad) push adc sbbl (bad) aad cmc push mov (bad) (bad) pcmpeqw dec (bad) gs hlt adc jno dec inc add jecxz ljmp add lock xchg adc je into pop cwtl and cmpsl (bad) in leave ljmp jno cld or ljmp sub xchg jge dec sbb xchg fdivrs es in mov push mov inc ficom nop push and push icebp mov jbe mov cmc mov ljmp and pushf mov adc push jle jne (bad) cmc ja or out or add lret sbb add (bad) test in jg cmpsl sub out sbb test fdivrl out sahf inc push stos cmp add xor dec hlt (bad) in fdivrl fidivrl test cmp clc shr pusha call push lea movl jmp lea je clc jmp (bad) fidivr ljmp jg sbb xor mov mov into pop mov ds pop (bad) pop jecxz xor add out sbb xchg lret jae fldenv sub pop pop fdivrs or inc mov cmp cmp xor mov lds stos push adc gs jmp pop lret adc pop xchg fadds cmp xor arpl jo inc xchg mov inc jnp out mov imull outsb lods sbb inc dec dec rorb jae cltd std jg jl push dec push pop push cmp cmp dec jmp lods pop out mov mov sub test test and xor pop inc out mov dec out int3 cld dec aam cli jo test cmc std xchg ja jno sbb xchg cmpsb (bad) jmp add or ja push in or and push add stos push jo lret pop shll or (bad) mov out pop and inc jmp jle cmp fs leave out mov adc lock push mov data16 loop cmc pop scas sbb push int3 mov in sbb aaa jbe enter cld and lcall and jae bsf rol pop not pop btc or shr mov sub cmp mov pusha call mov mov adc inc aas les movb vmovups fist push outsb cmpsl jmp insl push mov cs lahf mov and stos stc xor test sub cmc push inc cmp pushf ret and pop jns and addr16 (bad) cmc mov push inc inc and dec imul mov lahf stos cld push test clc add into sbb pop inc lea lock imull movsl and dec sbb xor mov out mov inc inc mov call pop push jbe sub xchg test shl stos clc push dec inc std or je adc push inc fcoml add jge sub (bad) xor ret cmp jge loopne xchg xor jnp xor clc mov rcl lock loop lods rolb jmp pop stos cld push mov xlat push or repnz adc inc js fild or fstpt dec imul sarb push sbb imul daa clc jp ds or repz add mov movsl jge cmp lcall leave sbb jo and adcl xor aas sub les dec adc popl das sub clc dec (bad) jge mov cmpb mov imul arpl cld repz pop xor jmp or xchg add cmc pop pop and mov hlt push mov pop (bad) addr16 xchg xchg mov xchg fwait jg (bad) sbb push addl pushf icebp stc cmp pushf push (bad) int and mov inc push xor xchg js inc ficomp push jns mov stos sub movsb cmp aaa cmpsb scas test test or xchg (bad) mov cmpsb adc inc xor lret jns or stos or cs mov (bad) xchg pop (bad) push clc divb mov incl popf add push in mov sbb scas daa sub jne fsubr arpl xor (bad) xchg cmpsb rcrl xchg xor push ss push sbb out aam (bad) ret data16 test pop xchg xor jbe rcll pop inc mov xor mov jmp pop stos daa mov cmp mov pop mov cmp sbb or lahf dec xor mov add cmovge xor fcoml jle pusha addr16 jnp negl and fidivl cltd add and add ret add ja or repnz xchg jae xlat incb jmp push inc add rcr sbb inc (bad) (bad) xor loope shll lret int or lock or xor ds mov mov cmp push stc js in cwtl imulb gs aam dec sub pop dec (bad) or loopne daa fidiv or mov inc in and jecxz and test jge loope es and lret adc inc pop (bad) sub cld push je outsb push sbb fcompl mov mov nop jp pop ljmp sarb das inc lret pop stc jb xchg les jno loop imul pop mov xor ret or in in pop cmc add es scas dec lcall subl mov rclb je inc lret add xor cmp sbb add jmp add add cmp imul lods xor sbb push sti movsb xor mov fiaddl (bad) shld (bad) imul cwtl jg add cs loop pop inc mov rcll cmp and cmpsl subl mov jno mov mov dec xchg loop jns jbe movl pop mov rcr dec ret xchg test and fild daa sti lods lahf pop pusha sub push jp and outsb bound add rclb insb into clc (bad) rolb js and inc movsl enter stc cmp outsl cmp pop stos sub sbb mov es in sub loope sbb mov xchg jo sub add ss cmp jmp js sti mov push idiv push dec inc mov inc inc sarl loop sarb jno add dec mov bound push or add jnp mov xor mov into int3 outsb add xorl inc inc add imul rolb daa inc xchg popf bound stos arpl imul sbb addr16 adc xlat xor repz sti adc sbb pusha movb pushl call push jmp lea jb push cmc cmp call lea lea and clc sar mov rol ror mov adc not sar jmp jno xchg xchg mov mull pusha lea jb ror pushf sbb btc mov bt cmp pusha pushf sub call not mov not pushf pushf lods data16 testl add lea jp push bt jmp lea je not lahf cwtl lea call pusha call pusha or push jmp mov movb lea pushf jmp mov pusha lea jb shrd jmp xchg push lds pop inc lcall jge xor jge jne outsl mov mov adc (bad) pop (bad) cmpsb push imul icebp or fwait sarb push mov ret adc mov lcall and sbb jl lods xor push jnp jmp push add int jg das mov jns hlt xchg xchg pop lcall jl lods adc pop lret shlb ss inc xchg sahf stos stc inc inc scas sub sbb push mov push mov lds pushf mov mov ror movb test not call push pusha movl movw lea jmp movsbw ror sar setns mov bt cmpb call add inc gs gs popa addr16 add test push add xor aaa mov jmp inc rcl or test sbb ror adc loope add add aad xchg mov xor sbb cld jecxz fcompl sub jecxz jg jmp out popf jge pop int3 inc (bad) jg mov sub and mov or add test mov insb mov into dec gs lock xor aaa mov xchg xchg mov add mov xchg scas push data16 nop fwait mov (bad) fwait pop out movsl dec call lea jne pusha neg rol mov cmp cmp movb cmc add call add (bad) tzcnt rcl add sub sub shr bts rol mov pusha jmp movb pushf movb lea je stc sub call not call jmp mov not bswap lea mov call add inc gs outsl fs gs imul add mov imul dec fcompl in inc enter mov push pusha mulb sahf mov sub cmp aad xchg pop into out jns adc incb mov push xor xor pop or adc mov mov push jae fimull pop adc inc xchg fwait add xor push shr mov xor icebp stc add adc lcall cs sbb dec mov pop les pop push mov ja lock ret js imul xchg outsl cmp or dec add out decb or xchg ss (bad) (bad) push xchg or cmpsl jno,pn adc xchg pop xor cmp push lea jb cmp daa stc mov mov stc clc xor stc not xadd mov btr adc add bswap xchg setno setb not pusha pop lea mov lea call pushf pushf adc push movb pushl lea jb pusha clc call call call adc pusha lea jb pushf stc xor pushl test test setns lea jae mov call movb mov pushf mov movb lea jmp add inc gs outsl fs gs imul add push sbb inc pcmpgtb add mov lret sub push mov cmp mov jbe xchg outsb scas sub repz int3 clc jg out mov ret mov xor js sub dec add insl mov push xor pop popf out push jmp and fstl sbb cwtl jmp add or mov dec lret (bad) or jne sbb mov cmc mov (bad) pop lret jnp push push movsl (bad) add pop icebp pop out fnsave imul push popf in clc xchg push pop xchg dec dec (bad) and and je cmp stc test bt sub jmp lea call jmp jmp jl push xlat and inc ret mov call mov dec sub mov add sbb addr16 std cmp call fs adc mov add push insb lock jnp leave sbb and cmpsb xchg outsb cmp or sbb xchg xchg inc mov notl add xchg aam pop push pop lahf fmul insb jbe pop popf dec cmp mov or imul (bad) popa pop shrb inc lock jmp fildll jns pop lret fisubr aad push mov inc sbb sti mov mov in adc or jl inc and push fs call pushf stc add pusha jmp lea call pusha jmp lea ja jmp cmp movw push lea jmp call lahf mov inc ljmp shrb add dec rol das mov xlat daa pop gs or fcomps push push push mov sub insb mov shrl and (bad) jmp push movsl dec test mov push cmovg sub mov add adc jmp cwtl arpl add sub fist test jmp jmp (bad) lock fs sub sbb push sbb mov mov iret leave in push inc arpl add pop into int mov lods or inc repnz fdiv mov shrb adc push arpl sbb add test pushf call movb push jmp rcl not test pop not pop pusha (bad) idivl int out mov setg rcl movzbw not mov shld bsf not mov cmc bsr bsr add movzbl call cmc bt sub pusha cmp lea jae pusha pushf lea jae pushf pushf pushf lea jmp jb lret dec es inc fldl cmpsb repnz xor mov cmp adc mov out inc enter cld mov push in push adc xchg cld es jg test (bad) xor jae sbb or mov out lret add inc icebp mov mov dec leave jl lock mov clc in sbb loopne out sbb mov dec and xchg adc imul mov push mov fmull daa pop inc ret cmp and (bad) lcall and sub into mov fcompl adc (bad) iret fstps flds mov adc inc mov aaa lahf shr jmp lcall mov mov mov lock lods adcl sbb idivl fadd clc mov cmp mov jl lods sbb popw mov pop xor dec and push inc test movsb sub add test lods lahf (bad) or lea cmpl jmp lea mov pushf pushl lea call jmp test neg test cmp pushl lahf call sbb (bad) jg pop inc and dec vmwrite pushl (bad) cmc lods ljmp popa xchg popa dec inc rcrb mov pop and jl lock add xor push rcrb movb sbb jno lcall lods fsubl push hlt fnsave jge pop dec push add adc add das mov jne sbb xchg sbb cmp (bad) lret pop xlat jle out out fnstenv popa push in mov cwtl cs pop mov and cld clc xlat sbb enter fiaddl gs sbb sti das sub sbb adc mov lcall lahf pop cwtl lea pusha push lea jl push jmp not or sub xchg jmp je dec lcall movsb jle sahf fsubrl call adc ret and or push pop aas dec movl outsb in inc xchg push xchg and cltd fldl in int3 xchg enter mov imul cwtl test repnz notb xor cmpsb jns inc lock push test adc insb test aam or fisubr ds jp sahf dec lods imul lcall (bad) in lcall shl pop stos push cmc popa or movsb add out sub je loop,pn mov add xchg jns out mov les in out inc sahf sub cmp fldenv cmpsl pop jae xchg add add popf xor aas call sub mov dec or push jmp test or out mov cmpsb pop mov enter jnp mov stos push movb mov movw pushf pushf push lea jmp lea lea jne pusha not mov call call jle test pop inc btl mov mov sbbl scas mov lret in add pushf mov push mov sti push xlat push clc out mov or mov jb decl lcall inc xchg leave jno sti or ficompl lods sbb sbb lds xor scas pusha mov or fcomps push je in lret mov and adc (bad) loopne pushf popa xor xchg aaa mov jno in mov hlt and repz aad frndint negl lret jle lcall cmp sub shrd xor setl pusha lea add btr shr mov shl mov bt cmp repnz jmp cmp pushf call jmp pushf stos call test stc call clc mov btr add test call xor sbb and inc ficoml jg movsl inc lds cmpl sub cmp flds xor test push xor mov and mov xchg fwait paddusb and loope mov les xchg jns xchg sub call cwtl stc push daa jno ljmp jns cmp sbb (bad) xor lahf push push loopne or rorb std cli test pop mov or ss stos ljmp popf lahf cmc sbbl jbe xor add and push loopne mov cmp pushf lea jae clc sub movsbw sets lahf lea lea call pushf test bt mov test pushl clc test pushf pushf jmp std sbb inc je fnstcw fnsave cmpsl scas in scas fbstp mov cmp push out push jl rcrl xchg aad cmp lock sbb les xchg out pop std daa cmpsb hlt push out aas fisttpl cmc dec incb jle mov xchg enter out out rcrl ljmp (bad) lcall popa and sarl jo (bad) sti push xor push iret inc test loopne in in fsubs into gs popa aam (bad) ja andl jo sbb mov fwait adc int3 sarb lret out cwtl push or aam or pop sarl sti push pushf scas idivb test lea dec bound inc fmul xor add mov xchg lea push xchg push xor shrl imul bound push add jle pop loop sarl mov inc imul imul and xchg mov xor and cltd call andl xchg ds in lret out or mov clc cli ficom imul fcmovb repnz arpl push xchg jg push movsl pop inc (bad) xchg lret pushf xchg loope push aas psrlq out shrl int xor push iret sbb adc cmp mov sub jmp shrb adc loop xchg popa adc std pop out loop pusha mov mov aam andb dec das movsl adc test jg mov fwait data16 ja (bad) sub cwtl mov fldcw in jno sub in jo jle repnz jb dec add ret ret push inc bnd pop inc sub push pusha insb jb movsb jp jb and push adc scas mov and pop bound (bad) mov lea mov jbe mov cld mov (bad) das (bad) rorb mov jmp repz dec bound xor les lret sarl js stos cmpsb sbb mov mov popa mov xchg std lahf jp imul adc and por movsl punpckldq sub mov push mov bound das dec mov subl fs pop push pop test popa sbbl addl push adc mulb enter into cld fsubs jle sub mov mov ja cmp xchg dec stos sub xor mov scas lods inc stc mov dec or jg jns mov cmp push data16 sbb xchg lcall jbe fisub aad cld pop ret jle cmp mov xchg insb pop mov mov bound inc sbb in insl sub mov nop add mov cmp jne mov mov mov nop test or stos jb cmp mov jo aaa lea movsl shrl lods in loopne mov inc mov out sbb lods in dec aad repz std js dec aad aam inc mov and jo fbstp icebp dec cmp iret loope mov (bad) divl cli cmp add divb (bad) sbb mov das pop pop jp jns sahf decb sbb (bad) (bad) nop sbb mov sbb loope sub mov clc and and xor inc outsb xor lods push aad sub ss loope mov push (bad) lea clc xchg dec (bad) sbb jge sub pop inc je icebp popa test aas aaa dec fxch xor aaa addr16 (bad) std mov jb scas imul mov rorb fs xchg aam add jbe pop and xchg mov xor cmpsb out jge pop fbstp dec arpl push pmuludq pop push xor cmpsl xlat xorl loopne nop xor push inc les mov mov icebp sbb enter inc fisttp xchg sarl jno push ret push cli inc fisubrl sub lds pop test pop imul movb mov dec pushf jmp ss xlat add pop inc pop cmpsb cli or or or lret cmp cs bound add mov and (bad) js add ss mov pop mov cmp push cld xor dec xor cmp je mov cs fstps test adc jg xchg sbb in add fist xchg test (bad) adc test loope scas pop and add sbb sub sub cltd out sti mov andl xchg sub cmp sti dec loop xchg adcb sbb sbb insl out fidivl fldpi ds or jbe mov repz push sbb sbb pop inc inc dec inc fldl sbb sbb in xchg pop leave inc sbb dec sbb in loope xchg insb dec jbe lock into cmp mov adc scas jl shr pop pop mov les lods xor stos cmpl sbb mov andb dec ds cmp xor movsl (bad) imul pop out pop aas (bad) stos nop cmp pop mov and jne in sbb push dec cmpl or push push push xchg lock mov pop mov and (bad) lea je pushf clc call pushf lea jne rcl sar bt and sub btc sbb lahf mov test (bad) lock rcr add (bad) lock mov cmp test call call lea jb xor aas lahf mov cmc bt call cmp sub mov pushf seto mov pushf pushf stos pusha pushf movb pushf lea jmp push (bad) mov pushl daa pop cmp lahf lret fbstp ja ljmp ljmp rcrb ret fisubl cs push test mov in xchg prefetch jl pushl jge in jp fwait sub sub icebp inc ret loop jmp pop jecxz and leave add jge out jne (bad) xor aam inc dec and jmp push pop sbb in enter leave rorb int3 clc inc mov push pusha mov push (bad) mov lods xor cs scas sbb add and xor inc test xor movl cmpsl leave leave (bad) in sub mov push adc imul daa clc pop aaa iret aaa pop mov push pop mov fs lock add sbb je mov sti pop rcll (bad) mov out or ret adc scas fcoms lods cmc or inc popa mov xor xlat inc inc imul xor mov mov push call test lcall sbb divb mov jb mov fiaddl stos sti push lcall cld cli setae inc sub sub lods xchg pop add jecxz xorb stos pop or leave push jo ljmp jbe adcl sbb popf iret bound movsl cmp sub int sbb or mov shrl fxch outsl adc ret scas test sub sbb test cmp cs scas out pushf mov bound ror ret xchg jge int3 push mov int ljmp add aas sarl cmp outsl mull fstpt lcall jae les shrl and sub enter cmp jnp test dec popa jmp lea ss inc aas push xchg xor test lcall subl pop sbb sbb cmp mov xorb ja and or test xor stc jnp std xchg test push xchg sub dec cmpsl je push pop mov js popa pop dec push pop xlat aas addr16 test jp (bad) (bad) cmp or mov add inc test xlat pop lock aad push xlat add pop inc pop fmull adc rolb popa mov in xor test fdivs int3 cmp sub mov (bad) out adc cmp xchg insl das push repnz or loop xor fstl sub and adc xchg cmpsl je pusha xchg xchg pop int loop mulb scas mov or push pop xor adc dec lods mov sarb mov and (bad) or sub popf iret outsb negb imulb cld cmp aas xor jns es call or and mov push mov pushf pushl ret cmp pushf mov clc bt cmp pusha call cmpb pusha push lea jne mov shl mov cmp add cmc stc movzwl neg mov clc add jns cmp mov cmc stc test push push push lea je test call movsbw not ror bswap not not bsr xor bswap mov xchg mov lea not push pushf lods clc cmp pusha not call xchg jmp ds xchg xor inc enter jnp sub or sub and shr push sbb xor jp ficomp ja,pn nop rcrl pop stc cmp lods xchg cmpsl data16 into sbb jle push and pushw sahf rolb es mov ja gs int3 pop into outsl xchg or sahf (bad) int3 xchg mov jge andl fsub fistp daa (bad) in xchg xor push adc xchg sub pop jmp lods pop in pop fadds rorl mov ret sbb cmc push mov lret jnp mov mov push int sbb das mov and mov sbb (bad) call pop inc lahf hlt and xchg hlt push jl jl xchg test bound mov scas inc imul pop out xor sbb inc cwtl add push xchg sub pop mov jl push push out mov or negl addr16 jmp mov mov rcrb xor sbb cmp call push dec jbe not mov loopne sbb inc sahf inc ss je sub push out add and lret lods sti inc jle dec inc mov mov push xor mov sbb sub or fsubs scas les movsb push pop mov js and adcb test push lret mov cmp dec fistpl add adcl test adc cld lods pop sub shl and mov (bad) clc cmpsl push adc push pop in shlb insl scas jmp xchg outsl inc and repnz or lods inc adc aad data16 cmp lods enter imul lea cltd cmp test addr16 pop jp imul jnp push lods hlt imul add arpl adc leave pushf stc bt lea sub push cmc stc test xchg test push cmc rol ror push lea adc mov add not shr mov stc add push jmp pushl popl mov cmp movb call aam adc inc lds push pop jmp mov add leave (bad) psubq mov adc pop mov pop repnz je xchg call arpl pop arpl jbe aam rcrb fimull mov addb in lcall aaa xlat dec add sbb test (bad) sub notb cmpsl mov scas imul into adc adc push rorl pop scas outsl sub mov adc outsb jge cwtl push in pop xorps mov subl jp lret sahf adc rcr cmp movsb xor cld pop pop inc push int3 cmpsl and bt cmp cmp pusha pusha movb pushl lea jae bswap bts rol jmp pushf pusha stc cmp or movw jmp push mov push lea push movl call cmp dec mov shl shr mov and sub mov pusha jmp repz outsl cmp inc stc repnz clc push in into sub bound lret lds iret ud2 dec scas mov arpl inc aas cmp mov in and (bad) repnz xor mov dec jl and popa mov jns mov fwait loope fisttpll out cmp lahf sbb adc mov mov pop pop dec xchg inc (bad) aam mov cld lcall sbb push pop cld mov sti (bad) leave mov xor add jb adc fadd arpl push data16 das xchg adc in cwtl mov push rorb and jecxz rolb movsbl bswap setae mov (bad) lock mov bt repnz pushf pusha lea jne pushf pushf lahf movzbw movb setp bswap mov setl pusha pop movzbl lea call pushf lea jne add bts movsbw xor cmc mov stc seto rol add and sar neg mov pusha test pusha push pushl lea je pushf call pushf add pusha pushf push movb lea jmp (bad) out xor cmp fs mov les mov clc sahf jl inc push lret in add mov adc mov fdiv (bad) sbb dec mov js (bad) sbb xor in and xchg jno push repz mov pop and sbb fimul xchg mov sarb icebp push adc pushl in dec pusha lea jne cmc bsf jmp outsb test cwtl ds inc (bad) lods outsb cmp mov mov call loop xchg push out bound push cmp int3 sub push lods sbb icebp mov loopne xlat sub sbb dec int add add inc shrb inc leave popa test sbb rol lret in (bad) fnsave popa mov pop into out fidivr in les xchg cmp add sbb lahf das dec mov loope lret sbb mov ss cmp hlt lahf imul dec mov xchg pop sub jl lds ds inc add leave cltd pop pushl xor sarb push orl push jnp js loopne movsl pushf mov test ss testl insl movb stos repz sbb pop loopne mov arpl adc lods arpl adc mov mov sbb pop test fwait loope scas into dec inc mov (bad) xor and daa cltd xchg mov inc fxch lea jge and sub push popf mov cmc sbb js xchg cmp mov mov lret adc jge lock sub or or or mov cmp push les stc cmp clc and ss clc push mov aad or sub into lea jmp push mov shr imul cmp jae mov mov sub shr add call clc pop ret push mov pushf pusha mov lea jmp movw pushl lea jae aas movzbw pop dec lea lahf ror pop movsbl aad pushf stc mov stc bts neg shld cmp pop bswap mov pushf lea jb and dec bt cmp lea lahf push jmp mov movb mov pushf lea call pusha lea jg pushf mov pushf pusha lea jmp lea call test add rcr cmp pop movzbw stc cmp sar pop cmc cmp pushf push sbb mov jmp mov popa mov icebp mov ficoml in fadds clc sbb pop mov xor hlt inc pop mov jae ja inc pop test sbb xlat adc sarl out jo inc mov mov in and cltd mov test ret sbb stos mov push mov bound pop (bad) xchg in leave sub add push inc daa dec orb std decl sbb xchg cmp dec fnstsw movsb cmp (bad) psraw js dec cmp cmpsl mov pop int aam loope insl cld mov sahf sti lea test fldl and cmpsb mov jnp lcall mov ror cmp or xchg add aam call add sbb cmp and mov sub pop push sbb jmp mov out test or pop shrb ret rol jne adc or mov xor push int3 adc mov popa and cmp dec xor dec or pushf add cmp gs mov push mov test or xacquire hlt pop mov imul fisubl dec test cmpsb xor fidivl movsl cmp mov jecxz pop mov xchg rcr sete jns push das cli cmp inc out cmpsl addr16 jmp and out xchg jae pop pop into cmp jle and push rorb rorl dec rolb inc in or inc and push mov add adc mov out repnz std mov mov scas or mov stc lcall div fnstenv inc jo rcll mov or (bad) cltd stos iret (bad) in mov cmp (bad) mov (bad) cs adc inc mov cwtl cmp in inc sarl mov imul add add xchg pop pop add pushf lea ja bt sub rol movsbw add sete sub sub btr mov jmp dec call pusha push push lea jae push mov mov lea jmp mov pushl btc mov shl rcl btc sub pusha mov lea shrd shl ror push mov bt test inc sub adc cmc shr and lea mov mov shl mov cmp call pushf push pushl mov pushl stos movl pushf mov movl pusha pushf lea jmp dec shl inc pop inc gs add cwtl scas je insb mov cs mov push test jp dec push xchg pop sbb bound mov jae pop push jns xor or and movsl add or mov int mov pop sub sti outsl pushf lea pushl jmp mov lea jne pushf pushf pushf lea jb adc jmp mov not cmc shr jmp clc shl clc mov cmp cmc cmp mov call pusha movb lea jg jae xchg bsf inc or mov or push mov adc mov call lea jb cmc aaa cmp setge mov jmp pusha push movl jmp pusha movl pushf jmp sub lea jl repnz pusha pusha lea jne sar cmp mov shrd shr add sub stc inc bts test mov bt sub stc cmp cmc pushl test cmp push call not jmp inc push cld jl pop inc xchg push adc loopne lock push mov cmp push lret fs add sbb pop push add jne sahf xchg add test lahf push push enter aaa out out repnz sub (bad) adc inc lcall sub (bad) fxch dec lock and aad in mov fwait std mov sub push sbb ret adc adc adc mov mov mov rcrl cmc mov adc sbb lods inc pop inc repz mov rcrb (bad) test cmp add cmp cmpsb je push outsb mov mov inc dec inc mov in cmpsl jo push sbb fildl sbb cltd roll test outsl rorb sub imull ret fmuls cli sub and fstl mov (bad) fldl lret sub xchg sbb inc scas ds les mov dec jle sbb xchg push imul jge xchg add sbb push insb insb notl popa inc pop push pusha inc xchg std jmp xchg into mov push fcmovnu lds adc into inc mov pusha xchg incb (bad) aad neg mov bt bt sub jmp test es add (bad) out adc pop pop cs (bad) dec divl sub add call rolb sub add enter push nop xor inc add add cs fist stos xor add jecxz out js xor inc add add inc add inc add add add sub add call out add inc add out cmpsl int3 push rclb add rcr jo aaa sub add subl cld add repz or inc add (bad) mov ja pusha das es add add mov sub add (bad) aam jo jae xor add push cmp lahf scas mov add xchg add xchg xchg imull inc add lcall add inc add add cs mov cmp sub add jg repz mov add lret les bound mov xor add xor or xor sub add call mov add mov fildll push cmp xor add insl xchg sbb add sti cmpsb dec ret or sub add clc in movb sub add imul inc add mulb pop outsb mov jecxz inc add call push mov add call inc jp inc add add push xor push push scas xor add icebp sbb lock inc add hlt pop mov in inc add cld adc clc xor inc add (bad) pop sbb push sbb sub add sub jbe sub add dec adc add in out inc add idiv je pop out mov rorb inc arpl add pop addb inc add add ss sub add out mov xor add push int3 loop push add jnp dec pop popa das pusha ljmp inc add (bad) lods lahf xor inc add add push popf dec xchg lea sub add aam (bad) repz adc inc pop inc lret xor scas push ret mov pop push movsl jbe jp adc jle xor xchg mov arpl mov imul test es mov cmp outsl cltd shlw arpl mov fnstcw dec jno (bad) mov or pop jmp jge popf mov push sub ret loopne sti xchg xor push jl outsl pop cmp xor setge mov inc (bad) outsb out scas sub pop add jge fs mov fldt mov call pushf jmp cmc sub clc pushl popl bt cmc pushf cmp movb call pusha xchg pushl call mov jmp int out inc pop inc ficom or or div repz inc lret lret jmp fstpt dec ret fsts dec dec sbb xchg add rol push sahf mov leave or repz push mov into rorl lods ss xor ss sti sbb les lahf and jl icebp mov mov cmp paddd daa mov (bad) push push inc cmp inc mov shl nop fdivrl xor pop lret jle stos mov push push mov push fucomi and pop inc pop mov dec sub je (bad) (bad) popa push popf movsl enter repz fnstenv inc cltd dec in ss jb and dec inc popl mov cltd (bad) out pushf fistp aam push (bad) cmc je inc test and jbe cmpl int3 pop mov mov push xchg xchg mov xchg out sub jg and xchg in cmp nop ret xor pop mov fwait cmpsb jnp jp enter xchg mov add in js sarb xor pop jle and fildl adc cmpsb jne cs stos xlat lds std push jb stc sub (bad) xor or sbb or pop adc fldt jl cltd pop rolb jg les shrl insl (bad) ss popa loopne int3 mov pop sbb inc ficomp mov adc mov fldl2t xchg xchg repz lock stos ficomp xchg sahf bound lods inc mov out jg sbb dec add jle test xor loop inc jmp dec pop inc aaa pop mov ljmp dec xor adc xchg xchg das pop cltd and fs mov mul ds lret loope add jg and nop lea xchg repnz cs and pop jo jo adc movsl pop mov rclb cmpl subl mov (bad) sarl push loopne mov cld or movsl int lods lock (bad) push xchg mov push dec inc sub lods or dec (bad) stc test push xor pusha jmp push or les inc rcrb popf add ja push daa jno int push stos mov leave sub shrl xchg jns addr16 fs into dec cmpsl mov or adc jno lahf pop in adc mov data16 cmp (bad) xor and out xchg mov xor loop lret or out cmpsl mov mov push mov add (bad) xor fnop add roll (bad) repnz test out fnstcw sahf mov xor push cltd rcll cld xchg cld es mov ret push mov jmp xadd lea bsr aam ror rcl sub lahf bswap push bswap setl push lahf push movzbw movzbw pushf pushf mov cwtl pop lahf push bswap movzbw mov call call add mov call add pop ret jmp jmp mov pushf push pusha movb pushl ret xchg push movl jmp pushl pushf lea ja adc cmp or sub rcr sete add cmc sub mov jmp push movw pushf movl pushf jmp mov not bt shrd call bsf data16 repz jmp call push movb movl pusha pushf push mov lea jmp pusha call movzwl add pushf bts mov pusha call cmc cmp pusha add pushf lea jmp movl jmp cmp shl cmc add pushf jmp call je mov dec pop inc mov sbb xchg xor cmc icebp add inc ja addr16 shlb sub icebp sbb jmp arpl fsubl xor fcomps mov mov cs scas cld rorb xorl pop xor ret into std rorb jb xchg in dec arpl mov pop push lahf pop outsl int3 (bad) cmpsb lds mov mov push fnsave sti mov (bad) test push dec fisubrl jl out pop repnz ss xor pop dec xor mov iret sub cmpsl stc sahf (bad) dec data16 sbb outsb int3 jg data16 sahf xchg test xchg sub xor es outsl ljmp dec pushf aad cmpsl mov and push movw lea jb bt cmp cmc stc cmp jmp pushf jmp pushl call negb sub in movsl popa mov stc cltd out movsl aad jmp mov mov test nop or loopne out dec ret mov ja xor inc mov jg movl sti fdivrs fnstsw mov add jg les jmp dec (bad) shrb dec je pop out ret loope mov sahf jnp add and dec jno jae sub test cmp mov loop mull pop sub xor out sbb dec mov jp mov mov mov dec (bad) fsubs xchg test add ficomp pop inc dec (bad) icebp pop mov test es push dec fs dec push cmpsb pop int3 aas xchg ds dec mov in or aad ret adc dec jns enter fsubl repz add enter inc movsl fisttp cmp xchg les or and inc jnp mov jmp jae sub sbb fldt add loop stc popf push hlt sbb lods clts pusha ljmp jecxz imul push pushf xchg and jecxz mov pushf dec dec int push js outsl cmc push cmc (bad) jg test data16 fistl dec or pusha jmp lea call cmp stc mov cmc clc cmp clc cmp push movw pushf lea jb xadd bsr stc mov sar data16 repnz ret add add jmp add jg add je or test addr16 add shrd bsf mov test bt clc add call bswap lea pushf lea call cmc cmp pusha push call add dec outsl arpl inc insb insb outsl arpl lahf pop mov jecxz cwtl rcrb xchg mov shll sub push mov cli test push ficom sbb testb addl sti shlb push sub imul inc out repz aas stc pop mov (bad) aas xlat jl or rcrl push in jae (bad) push insb cltd loopne lods pop sub (bad) int3 movsb mov arpl rcrb mov pop stc and lock push test stos loop adc sbb inc inc sub and and mov mov sbb mov int3 movsb mov std rcrb hlt xchg inc enter push bound and mov inc insl fisttpll cmp dec or lahf in jno mov mov xor cmc or cwtl fistpll test sub mov adc aaa int3 ja mov cmp push push das xor jae scas cmp movsl loop adc add push ss int3 aas mov push (bad) adc mov push nop xchg frstor jge push add sbb pusha lea jb mov shld mov bt jmp jae lea sub mov lea call test fildl js mov into in es out hlt repnz test and lea pushf sarl pusha loopne nop fwait mov push pop out push inc dec xor push jae lock scas pusha test adc popf mov leave out xor gs and or jl dec cmpsb aad push jae and mov arpl sub mov pop (bad) xor iret stos (bad) xor mov xor pop cmp push add mov imul ds sub out repz and loope jmp mov scas (bad) jge xchg xchg fidivr and push mov mov repnz inc (bad) push and sbb clc push add int3 inc lea mov add fsubs add push jo cmp in mov (bad) inc cli dec fmul mov sahf out sarb ret outsl jns ljmp movsb dec mov mov cltd push popf push mov dec dec mov xchg jns sti xchg dec mov adc cld pop fcmovnb xlat repnz call pop mov stc xor add repz cmp rcrb lods pop lret fistpl loop mov cli push in pop test fs je test bt push jmp rol sub pushf lea mov movw pushf movsbl mov movw movzbw mov not pushf call lea jb jmp call add dec jo outsb push inc dec popa outsb popa addr16 add xor pusha call test cmp push pop inc jnp adc jo inc mov cmp fs push in bound add or push jno fcoms push shrl cmp in fchs and and push sub lods aad pop out (bad) adc cmp xchg imul repnz adc xchg dec push add push push outsl fisub cltd mov mov xchg mov test jbe dec int in fildl cmp ret add pop inc jmp sub cmpsb and mov scas fimull test es std test xor inc jbe push pop mov jns roll das adc dec mov mov pop inc aaa cmpsl push mov pop (bad) xor mov lods push add mov xor jnp fsubl in subb mov fiaddl or lods ds in cld push ret aas lcall inc pop loopne xchg mov (bad) aam cli scas push push cmp ljmp std hlt fimull pop and sub jno data16 dec push or insl mov push sub jae adc ljmp hlt sti push dec xor cmp mov out cltd testl jne hlt loopne and data16 mov lcall iret xchg mov xchg rol mov lret aas movsl add adc mov lods sbb data16 insl fwait out dec (bad) xchg mov push cmpsl lret out das jmp push movsl das mov xor pop cmpsl fidivrl inc scas xor sbb test aas jmp pop lret stos push push dec lea jne sbb dec shrd xor mov mov add rol and add neg mov push clc test jmp fldt adc movsb inc les test push pop push pusha add outsb hlt sbb adc fsubrl and dec adc mov movb mov jne lods repnz iret inc (bad) in jbe push mov movsl push jp insl or jns and cli mov notb inc loop push dec or es fwait inc and aaa jae bound shll sti sub mov push popf pop add sub sub jne cld cld sbb jns sbb fdivrp daa jge or xor xchg (bad) jge push (bad) mov aas (bad) pop cmp cld imul sub lcall push pop inc pop sbb cmpl ss pop pop push bound scas ja inc (bad) aas sbb ja popf inc or scas add cmp (bad) and mov pop dec xchg ficom adc popa cmc or sub jl adc push sub test fsubs and pop enter mov (bad) dec icebp jnp add adcl and mov jmp sbb cli cmp (bad) jne jecxz xchg xchg xor push test scas cmp cs jg (bad) push mov iret push xchg mov or inc push scas rcrl xor jle xchg sbb inc ret mov cmc stos fldt subl pop xor mov jae sub cmp and xchg mov in xor (bad) sarb je hlt dec dec mov int push (bad) add jnp scas sub cmp push inc js inc sub xlat and pop movsl xchg and or inc es in dec jg push jp or sub js dec clc test (bad) aas in jne sub mov test mov imul push cmp mov stos xor (bad) xor out mov xor lea jmp not pushf mov push movb mov push pushl call in pop fcoml inc sub fadd push fdivs dec dec push stos sbb dec mov xor stc int rclb jl push sub pop add insb pop mov lret push xchg pushf in xchg lds aad jbe roll sub sahf sbb mov movsb adc inc test adc lret aas pop inc and fs lret mov roll add out xchg xchg or adcl cmc add or sahf les push (bad) mov xchg adc dec cmpsb adc inc mov adcb mov out lahf out push pusha lea je cmp sub pusha clc call push call add dec outsl popa fs imul add pushf lea jb shrd pusha add dec mov neg sar not not pusha adc (bad) icebp add (bad) adc pushf add jmp das iret mov push outsl jnp das aaa pop mov (bad) cmpsl xlat aaa xchg jg jno mov cmpsb pop jmp jp push inc ja aas test xchg sbb sbb adc (bad) gs in aas push inc jp outsl scas push push leave xor sar in arpl lock call mov cmpsl repnz jns jbe in cmp stc stc lret add sub (bad) popa mov in scas cwtl xlat inc or or sahf jns adc add lret xlat adc test pop inc lfs lret int pop xchg xor mov and lahf pop lret repz mov inc adc fistl fdivs mov cmp push stc icebp test sub sub ds adc mov cmp adc ja fwait lcall push movsl pusha mov mov imulb cmp inc aaa sub aad dec cmc cwtl mull inc loopne xchg sbb sub daa mov pop out (bad) mov in js dec mov jbe mov inc adc in jnp push dec es pop inc lods (bad) aaa mov das subl negl mov shl sbb jo fwait addr16 xlat and mov mov or jns cmc cmc add lea cmpsl pop wbinvd or xor popf divb pop pop adc stos jl bound cmp aad add lds jns pusha jbe outsb std and fsubrs dec aam or and mov xchg pop repz mov ret test sbb jp negb scas xor (bad) xchg cwtl fwait ss jecxz pop les mov dec push fsubp mov push pop rcll pop repz xchg pop mov enter mov inc test je shrb xchg push inc outsl mov dec pushf rcrl leave call mov test (bad) call daa or xchg jae sub jl adc js testb and and lea inc inc dec test cli jno dec loop add loope (bad) stc sarl push dec mov xchg mov xchg mov dec push pop out xor repnz pop push inc dec orb cmp out pusha sub dec fsubs int sar inc inc jg fnstenv sbb inc lret pop int3 cmp sbb out movsl jb push push cs cmpsb mov cld jl ja mov cwtl fisttp push or or in ss dec das cmp (bad) clc movsb fiadd (bad) jae or inc arpl bound imul or call (bad) or push inc xchg lahf (bad) popa sti or jnp push (bad) lret insb cli cmpsb mov push push mov mov aas lret and sbb in adc pop pushf and or lret cmc loopne pop pop mov jmp subl dec inc js in mov dec xchg in jae outsl ficoml stos out xchg out jecxz es adc jle and hlt scas jnp std xor cli or inc pop sub mov xchg adc mov sub jg inc test add aad loopne xchg jbe lods inc xor jle outsl or (bad) fsubl shl sub sub mov aam mov loop sbb or push sbb cmpsl fnop pop push mov fcom pop mov mov push aas sbb (bad) pop mov jns (bad) cmp fstpl fiadd (bad) pop out xor cmpsl mov push call sbbl std daa in sub pop movsl jge sbb lahf adc lahf outsl mov in dec mov cmpsb ja xlat sub mov xor xchg outsl sbb pop (bad) jnp loope add and les outsl mov dec rol cwtl inc out mov sti mov ret mov loope mov or fadds mov sub mov in add xor pop pushf ljmp inc adc cmp sub ljmp test and and push test sbb sahf pop dec lret xchg stos and sbb (bad) or int fimull sub adc mov out outsb mov mov cmp xchg (bad) mov pushf into mov lahf icebp scas stos or cmp popa lahf loopne sbb ljmpw mov dec cli popa test jo bnd aaa mov aam popf pop pop and or add icebp push inc jecxz cmc mov pop xor sar popa xchg (bad) and xchg jl or imul or cmpsb aaa std aaa loope mov out mov add push add dec push mov pop jne add mov mov dec (bad) rcrl movsb sbb mov mov pop lea pop daa or lahf (bad) push jl jge add jge xor lock les pop shlb aad adc add mov push pop adc push cmp jecxz and jecxz into mov add jo and mov dec push stos arpl popa xchg movsb and inc testb jle (bad) push xchg lock mov int mov rclb inc xlat scas inc add out sub mov daa mov pop pop pop add jo pusha inc inc jmp inc mov pop negl cmpb jle dec jae aad sahf pop cmp inc rcrl sub ret or adc (bad) loope and fcoms mov mov leave adc lods pop cmc ljmp pop jbe and xor ret jecxz outsl xor push mov fstl mov fxch aad lahf pop (bad) and shlb cmpb or jge int mov push inc aam rorl aad add loopne (bad) dec dec jnp mov cmc xchg imul subl pop loop jge cmp dec mov subl nop int (bad) std das mov hlt sarb movsl push xchg dec sarl int3 flds roll daa clc or fisubl adc mov push jo fadds aad je lods mov adc xchg pop xor push pop push dec popf out dec inc push add inc mov cld lock and sbb (bad) or test adc in mov popf jge mov (bad) sbb xlat adc dec pop jns enter sbb ljmp add cmp sbb or loopne jge xlat pop ja jge mov dec lret out nop in xlat ret negb push int3 adc fld1 in cmp jmp push or or (bad) jle mov sub xchg mov addr16 mov sub xchg mov and mov fs aad and xor xchg cmp sbb mov xchg (bad) shll call cmp in fiaddl add mov fdivrs out xlat dec int3 loop cmpsb je cmp int3 stos pop mov pop rorl sbbl adc aaa push (bad) push mov popf jb in sub jg sti jmp (bad) xor jl loop test repnz hlt add inc aam lock adc addr16 dec or scas aaa jmp pop dec push stos clc jnp sbbb ds mov sub imul sbb xor bound cld or lea fadd out clc in jg in repz arpl dec push scas lods mov sbb sub and in push daa dec mov jp inc sub mov mov xchg movsb stos testl or xchg int3 mov mov fs mov jp add lods mov sbb mov pushf cmp fyl2x jmp mov ficompl imul sti xor arpl dec leave sub xchg add lahf outsl aaa sti rcr je push mov push xor pop add cmpsl mov mov jo subl fsubl ja cmp dec aam dec jmp or movsl aad push or lods cmp mov in or push scas outsl add icebp aam mov repnz rcrb fstl mov mov xor pop sub rorb mov pop iret repnz pop add into pop das xlat dec cli xor (bad) cmpsb and fldt stos imul cld test cwtl mov sub fistpll dec dec pop mov dec (bad) (bad) mov scas lock mov or out movsl sub clc and loope lcall popf dec (bad) fcmovb cmpsl imul push rorl pop inc shrb xor push mov push cmp dec add add jg ja je add xor stos cld aas mov pop pop sbb dec jo cmp sub clc out add divl pmulhw xor pop add sbb (bad) lods add movsl test or pop scas mov dec popf sbb cmp sub mov add mov iret mov out pop jl push pop or arpl fwait push add pop dec das push dec js or xor xor pop out inc xchg ljmp jae inc data16 mov xorb fistl pusha mov inc outsl push fdivl jmp mov mov pop stc inc clc insb mov roll div es mov mov mov bnd shrb loop sarl cmpsl leave out jecxz sbb xchg dec insl mov (bad) fs notl inc mov push in cmpsl or je and stos nop fcoml cs inc cmp stc (bad) or lret cmpsb adc popf or mov mov lcall mov loope pop popf xchg mov mov pop fistl xchg jl inc mov inc sbb inc xchg (bad) cld xchg push sbb adc fadd sbb sbb cmp mov (bad) mov (bad) movsb (bad) pop pop dec jp mov lahf lods ds mov imul pop std aaa pusha push add stos (bad) outsl ret cltd adc iret (bad) dec lods scas jmp push fsubs add test sub in ss hlt or cwtl inc cmp sbb out test mov (bad) push dec jno (bad) outsl out int push and popw push out sti mov or jns dec fsubs sti scas mov jl bound fisubrl fldt in sbb aas lods xor (bad) into push dec mull cld clc or adc mov fs je jb,pt mov xor test notb jp cld test cmp mov popf dec sub std adc jecxz xchg sub push mov ret and push pop mov insb sti lcall das xor roll sbb or imul js fimull jmp dec pop fcomp test or ds test push adc add dec mulps adc inc mov push inc pop add and jge inc cld clc outsl icebp movsb pop mov mov jb popa int3 adc dec xor (bad) push je icebp aad jne mov fidivr shr frstor fbstp dec push sub pop (bad) popa insl dec push ja lret xchg jg sub and in lea add mov test mov loopne dec inc pop das call lahf lret sbb xchg pop jge mov mov insb ret mov test sti adc imul repz xor ror dec push rolb push or pop xchg xor sub scas add cld out push xorl es ret and fs ljmp mov cli ds jbe cs scas pop xchg outsb mov (bad) xor or iret pop scas jge sbb lcall push gs sbb out dec shrb jnp mov shr (bad) cmp xlat sbb lahf jle fs out mov popa mov int cmp mov or icebp mov aam pop into dec xchg adc aaa pop ret test fldcw cmc insl push mov ljmp pop and mov xchg or sti adc test in imul push xchg sbb addr16 (bad) je jecxz xchg sub movsb mov mov rcrb inc loope xchg inc sub xor jmp lahf mov push mov push insb lods dec mov pop mov pushf inc mov inc cmp lcall add adc inc dec in dec add dec es jbe mov inc test ljmp shrl (bad) lret int fmull mov jle ret xor mov test (bad) mov mov shrl mov jns xchg push mov cmp or sarb outsl cmp push insb add push imul data16 stc and pop push xchg popf mov (bad) or aam js,pt leave and ss mov xchg mov and jns rcrl push rol sbb fisub ret pop lods cmp sti mov lcall je rcll js xchg add adc push test mov out dec or sbb test xchg cmpsb adc int push mov ss jp sub lds loop pop inc jne test mov pop daa (bad) sub loopnew mov ljmp jp (bad) in test fcoms stos dec inc fisttp rol pop inc test adc fidivrl ret pop push inc xor xlat in in push dec subl cs xchg cmp stos mov or dec push fdivs adcl mov sbb lret mov mov loopne sub push std daa cmp or fucomp or sub stc inc jb add and cwtl push sub ljmp mov cvtps2pi dec mov daa xchg xchg pop pop subb xchg sbb inc jae loope loope jmp mov push jbe int jae (bad) repz sbb hlt jg push jmp mov lock push fwait inc aad or jo,pt and fcmovnb jnp inc test pop loope mov fisubr (bad) ljmp icebp rcll mov iret stos xchg and bound or lret popa xor idivl mov push mov cmc das inc sub inc xor xchg mov int3 fdivr push call jge cs xor mov das xor adc dec pop sbb inc adc clc jb sbb call mov adc iret and mov scas in dec mov adc xchg dec inc stos lods rorb lock mov enter jbe,pn jge pop push cmp jp inc mov and shr push test push xchg or inc adc mov mov and mov adc or add sub jne repnz lret inc mov add mov addr16 or arpl insl ja mov mov pop lods andb ret dec inc sbb push mov push sahf jle xchg popf jecxz outsb fimull sti fwait pusha mov sbb xchg lahf xor cli repnz iretw xor inc jbe,pn inc sub int3 out out or inc mov push subl mov mov mov cmp in int3 and pop cmpsl stc add and push shl out shrl xor shr mov pop mov jle (bad) cmpsb sub mov adc xor lea mov test in arpl sub mov pushf sub pop inc cmp bound cmp jo push add (bad) cmc cmp mov adc cmpsl mov xchg jg or rcrb enter inc or out mov js imul test ja cmp mov xchg stos add repz lret rorl pop loope jnp sub jae adc (bad) ljmp sub xchg sub cltd psrld push (bad) imull rorl (bad) xchg divb lods mov aas daa lahf sahf je mov mov test popf jb test sub (bad) xor xchg rolb push adc hlt lret inc mov push sbb xchg pop dec call sti rol imul sti dec push push mov mov fdivrl pushf xchg push cmovl fldt ja lods repz (bad) dec fs scas ss aaa je cmpsb pusha and fnstsw adc xor pop cwtl push cmpsb dec ss ret and icebp mov adc aas jae insl mov dec fsubrp mov xchg mul add mov dec jnp test cmc imul push rcl sahf (bad) (bad) in ret jbe mov dec lock and push push es pop outsb out sbb inc ss aas imul mov xchg or or mov pop icebp movsl and imul xor sti cmc add add movsl push mov into push (bad) xor rorb imul pop test inc aam (bad) jnp (bad) lret xchg mov sub in sub ret xchg jecxz mov ret push inc xor push fs lret sub push inc rclb aaa js inc add dec enter cmp cmpsb push sahf cmp adc lahf js fldenv lock mov mov add lahf (bad) call push jl repnz enter rcll inc add mov mov popf decb (bad) or xchg test sub mov cli fs pop sub daa arpl pop rcrl psubd and mov jg pop (bad) xor and (bad) lahf lcall lods in out lods lcall enter jecxz xchg or jo pop out dec inc fwait (bad) not mov std mov test fdivrs xchg fmull gs dec push lods xor incb jne test aas out int push es mov stos mov das movsl idiv mov enter (bad) sti dec fcmovu sbb fsts or test enter leave dec fcom sbb cmp out pop sub xor jb sbb cmp mov (bad) out adc ljmp sti push sub sbb sub not jge inc inc ret xchg xchg add aaa jmp test repnz aaa (bad) mov aad lods inc mov xchg sti add idiv mov cmp daa inc sbb pop dec jnp or fnstenv mov push fldt lret cltd mov mov add lock vsqrtpd cvtdq2ps adc sub xchg xor mov fwait pop xchg mov or (bad) mov cmp dec mov dec fmuls mov jp repz rcrb lcall dec jmp xchg repz jl movsl or cmp lock in stos pop outsb inc jle adc lds repnz xlat lret cmc into jge std pop dec imul dec jb fsubrs sbb lcall scas cmpsl aas ja test adc or add sbb mov in push ret inc imul movsl outsb or lds or nop (bad) dec mov rclb scas repz dec add rorl in mov cmp sub (bad) sbb add pop addl lods ret cmpsb test inc dec (bad) push std in cmpsb and jp adc mov jl adc (bad) lock inc jae pop cli imul cltd sbb negl add cmp mov jno ss pop adc inc cmp mov cwtl push and xchg or jg data16 outsb leave push jne pop mov inc aaa iret jae sarl push mov mov dec orl push jge cmp jecxz,pn sbb daa inc cmp inc jl pop pop push adc mov shrb fsubp dec pop mov lret sub lret clc repz sbb dec aam mov push add or xchg enter rclb mov lods jg lret ret int3 ret pop dec sbb inc les (bad) rorl pop adc cs xor sbb rcrb ja push push arpl dec jmp sahf fistpl adc pop inc in sub cmpsb mov lods inc std mulb add nop and cmp adc mov mov shlb adc dec nop popa mov pop gs cmpsl jecxz iret inc add ficomp loope adc jnp mov fnsave jp adc and (bad) (bad) and out add das push jp dec inc xor push adc cmp mov popf adc dec jb es xor ljmp jg push adc or test sub adc and fnstenv dec aaa sub aas dec pop or inc int3 or lods xchg notl aas repz fildl mov jo popf sub jne (bad) mov cmpsl test xor repnz leave stos add test pop pop mov or pop mov add rcrl adc jnp loop mov fs das sub dec insb int3 sub rcr pusha and xchg arpl andl ja dec lods and test add into cli inc scas add call lock mov sbb and mov aaa inc test sub xchg test or mov das gs or sbb mov (bad) sbb ljmp es sub sub pop xchg repnz mov arpl repz jns xchg pop call xor dec dec pop mov lock jmp lret mov add sub xchg adc lret dec or jle pop inc movsb stos dec je fsubrp xchg cmp orb lret fidivrl movsb adc pop xchg mov insl (bad) mov pusha (bad) mov imull in inc sub hlt stos mov cmp inc cmpsb push sbb xor push and mov mov mov ss jp fdivr push pop ds pop sbb mov enter sub movsb rcrl out into les adc decl jmp fcmovnbe pusha arpl (bad) xchg in push sbb add aam adc out enter (bad) ljmp push pop cltd cmpb int loopne or xchg std popf in push gs sub xchg sub andl push mov (bad) dec loop outsb inc mov sarb adc sbb mov cld jg shl rcl inc jmp insb add shr dec xchg nop out xchg arpl loop jno mov test imul mov or hlt daa xchg sub dec push inc in enter add (bad) data16 bound jne rol shr (bad) push aas xor ss (bad) gs jle rorb inc cmpl rcr (bad) ss out xchg (bad) movsl push xor sbb push (bad) stos shll dec dec cmp sub jmp (bad) inc out cltd cli push aam mov aad (bad) lods pop sbb iret pop adc hlt sub mov cmp xchg imul adc adc movsb ret inc inc pop enter test dec out sbbl imul clc dec pop push cwtl clc mov jge mov (bad) (bad) fisttp std mov sarl pop inc leave iret fsubrs adc sub or xor lahf (bad) sbb inc add and das neg push mov inc pop out sbb pushf sahf addr16 sbb test lret jae xchg mov fs mov rcr jle pop ret push xorl out push int faddl daa inc clc push movsl popa add dec ficomp jle mov scas bound repz or xor gs arpl and or in inc sti leave addr16 mov imul push sbb cmpl lahf push inc hlt mov sbb inc stos test push fsubrs jecxz (bad) xchg in loop shrb push iret inc aas cmp mov imul repz or mov push xlat out ficoml and mov or icebp insl ds mov inc and aam sub jbe mov dec inc scas xorl mov icebp dec jmp pop adc mov mov sbb mov jmp push js sub xor arpl mov in test push enter ret xor nop xchg sbb test rcrl inc icebp fisttpll cmpps adc pop imul sti xchg adc rorl jecxz push scas xchg in add jb test aaa lret shl insl pop pusha xchg sbb iret jno add repnz daa daa mov leave sbb fildll jmp stos (bad) xor inc iret lcall movsb add out adcb fimull es xlat xor (bad) int3 xor cwtl jb adc push xchg dec lret lret enter mov cs shr mov fmulp or jl jbe mov loope faddl xchg fnsetpm(287 xchg mov lcall imul xchg mov scas rcrb push (bad) pop test and dec pop lcall pop jae ljmp repnz imul lahf cltd out cld pop hlt dec sbb loope jp test mov (bad) jbe test stc and mov and inc aad mov or mov jbe xchg aas outsb sub and lods xchg sub xor lds fbld xchg sub loope outsb rolb ss fsubrl cmp pop cmc movsb loope jg pop sbb mov adc mov jbe mov jns xor mov int3 pop cmpb (bad) dec cld roll test jecxz xor out jae (bad) repz push jl ds adc add cs outsl sbb cmp fs sub pushf mov or rcpps out int jne inc scas pop fsts jge mov jb dec adc mov mov or jp dec loop cwtl or mov outsl nop cmp sti stc jno add test call sbb xchg lods rclb and sbb xor dec gs fldcw fdivl stos xchg je or loopne loopne ss les mov sub dec lods jo leave (bad) decl dec adc test and or pusha xor shrd sub jl cmpsl xchg push shrb insb mov out push int mov push mov jmp inc cmp dec shr mov sahf cmp jge jmp lods sub push pop mov (bad) mov pause sbb lds cmp data16 jbe (bad) xor cwtl mov jl (bad) xchg jecxz adc loope sbbl adcl in pop cwtl mov xor icebp cltd pushf imul mov call pop sahf adc pop mov hlt dec cltd fisubrl add mov arpl js and mov icebp push add shll (bad) fbld lds mov adc mov mov push xor add ret jecxz adc add adc lods adc enter mov add jbe lcall ja outsb sub imul sbb add sbb lds repz movsb das dec inc in cltd mov mov outsb fnop test xchg mov test lea fist jbe out mov test fwait addr16 sar xor loop xor push test sbb cwtl daa sub es inc sbb sub aad adc mov cmp mov adc js sub xlat push orl mov mov mov jnp mov push pop cs ss xchg (bad) testl bound cli movsb iret adc cwtl mov lds lret pop (bad) jo outsl and pushf push pop jo add push mov lret jle pop inc fdivrl adc lret dec pop jp adc test jmp lcall (bad) enter and test push xor adc jecxz adc pusha sbb es jo sahf out fucom in (bad) xchg xor mov lds mov cmp jmp and mov push mov cmp popa mov (bad) and inc mov nop pop and lods xor (bad) jae and in inc xchg icebp das mov xchg inc cs fisttp push cmp lock shufps and or movsl xchg int3 nop dec (bad) lock fisttpll adc cmp test test mov nop inc dec xchg stos pop fistl jbe sub pop xchg in sub and or cli pop sarb lret adc cmp and adc out data16 sbb xchg mov dec xchg push jb movsb es and imul fiaddl pop sub fbstp lret mov mov cli mov or lcall (bad) stos ss cwtl sub je in fbstp xchg cmp out and mov popa or je cmp mov adc sbb xlat mov push adcb hlt (bad) stc fucomi pop push jno stos mov cmp loope stos shlb pop push inc lods sub sbb inc pop mov mov into xor sbb mov popf mov mov lods pushf cli push inc cld sbb imul shl dec jne mov pop pushf xlat mov test (bad) mov jbe rcrb and sbb mov data16 in jns insb in pop das cmp adc (bad) push cltd andl pop andb pop loope enter shrl and loopne push icebp movsb out inc or mov loop lahf push jmp cltd fcompl mov loop xor icebp and faddl push inc push sub sub pop pop sub xchg dec inc loopne push add cmc decl pop mulb jb fisubr (bad) sub jae cmp inc repnz push sub in xchg sbb cmp mov (bad) jae mov insb test dec gs cmpsl sub sbbl xor lret dec out aam inc fstp dec setbe out xchg mov (bad) cmp out ret mov xor mov jge in adc insl sub xchg jg lret adc test insl repz xchg and enter jl in sub cs dec call adc mov out xor mov (bad) (bad) mov fcmovb into aaa ja sbb inc inc cmp xchg cmp fs or sub mov call lods mov stos subl add push mov (bad) fsubr pushf das mov iret fidivl movsl cmp xor xlat mov loopne dec push loope test dec incl fist or push cmp lods cli mov imul cmp xchg repnz hlt daa lahf stos es test sub in add mov mov xorl lods cs sub cli stc icebp or or add (bad) xchg rcr xchg iret cmp loopne or push gs mov cmp out lock adc faddl out push pop rcrb dec hlt cli xor push (bad) xchg cmpsb or ret clc dec shlb cmc and (bad) or sti ljmp push ret lds (bad) lock inc addr16 std and fmuls lcall jle jmp mov add xchg shlb mov sub add xchg inc aaa jge sub scas mov push mov adc iret xor stc push ret and (bad) cmp insl xchg cli imul test mov (bad) ja ficom xchg mov (bad) cmp mov adc imul xchg ljmp adc add ds call enter push dec (bad) push pop hlt shll pusha jle sbb sbb hlt cltd pop mov lret loopne rolb mov adc jb add add int3 fmull shrb mov fsubrl xor dec push enter out stc sahf cmp sub mov push push inc sub fldcw mov mov and lea xor aad and add aam push jnp scas ljmp pop arpl dec int3 rcrb mov xchg jecxz or mov arpl xchg dec jle arpl in mov sarl jns cmp ds sar dec cmp repnz cltd lcall (bad) icebp push sub popa add jo xor xchg inc cli and sti das jge clc xor inc pop out fmuls mov sti lea dec xor add in cltd push jno call outsl or dec sti cmp clc mov xchg (bad) ljmp jae push mov dec lahf xchg das sahf lds lret push xchg fdiv jb jnp xchg inc sbb mov mov or (bad) lret inc sub dec test sbb bound call inc xchg inc in dec and adc dec pushf outsb lret in mov add fimul in insl aam cwtl insb push cwtl inc popf int pop xor inc iret aam nop cmpsb int mov fisubl pushf pusha jl sub or fisubrl icebp out rcrb scas fldz ret xor or and loopne dec add mov (bad) mov xchg lock dec mov pop inc pusha cmp aam jmp loopne (bad) nop inc daa fimull and and sbb and jae iret mov (bad) mov jns mov stos outsl mov xchg cmp or mov scas popf sar mov or in jle cmpsl out mov int movsl stc dec cmpsl pop test cmp cltd push cmp nop or pushf adc pop call lods cmp pop aad mov in sub in mov pop sarb test cmp jl xchg push jnp into xchg push dec repz or subl cld cmp xchg decb insl sbb data16 fcmovb and out push stc adc sbb mov add push xor fchs push add and data16 insb push pop fdivp pop test (bad) rclb sub test repz bnd sbb loope inc cmp movsl mov arpl cmpl ss insl mov jne aam and sbb mov mov mov dec in fnstsw enter fstpl fwait (bad) shrl xchg mull mov or orl notb xchg ret adc cmpsl int3 push orl ret out inc mov lahf scas jle mov push lea loop addl lea xchg hlt sbb mov inc sbb fwait mov pop stos push dec dec (bad) rclb xchg clc mov imulb push xor mov jp test and pusha nop cwtl insb ljmp in mov jecxz sahf fstps push and xorb mov movsl mov imul inc mov mov or arpl loop imul jbe mov ret mov mov call push sbb repz add xor dec sbb jae dec mov and cmp jne xor adc (bad) cmp dec or ror mov lcall mov stc mov mov jecxz cmp adc cmpsl imul sub push push jmp pop mov jae jp enter ljmp in insl int3 fist push mov test mov adc dec or ds cmc xchg push sub getsec in push cmp ljmp mov lret test mov data16 jb rcll sub cmp mov adc adc mov ficom cmc sahf pop (bad) fldenv push imul xchg pop dec ret jp add iret gs int3 (bad) mov stc int mov sub jnp sub sbb pushw lock add lds movsb js (bad) imul sbb sub stos inc and ficom mov inc inc xor in fwait icebp add sbb pop mov cmp push xchg jno sbb mov jmp call or mov iret dec xor fild sub in sbb les jnp es nop je lods pop adc icebp repz xchg mov cmovp mov cmpsb xchg sarb aam out aas dec lds into lock jo repnz sti xor fucomi pminsw repnz pop xchg les mov jl add stc sbb sbb cwtl xchg mov dec pop mov cmpsb cs jle sbb xchg inc xor xchg xchg cs enter jae jle pop daa aad or jbe fbstp sub sar and lods (bad) fmuls xchg push fsubrl aas mov hlt fidivrl xchg lock jmp push push push cmc ja ret ljmp xor xchg pusha add cmp fsubs or (bad) jae push push mov mov and mov mov jg call jns mov mov or push push add and adc xchg (bad) (bad) sti movsl addb fist inc jo jbe or push sbb shrl push push add decb or movsl mov add jl fiadd adc push pop repz js cmpsl jb adc mov subl cmp xor xor mov movsb mov pusha fstl mov dec orl pop xchg stos das or cld cmp ret mov and (bad) (bad) sti and or dec repz and mov xchg add aaa or rcll mov sti negb pop xor imul scas (bad) lahf jp mov aaa adc xchg jle int3 fs jge cmc fnsave mov scas add ror pusha jg shlb loop jecxz xchg jmp mov push (bad) imul test sub pop ja (bad) fwait push int3 popf xchg sub ss pop ja pop aaa icebp mov cmp mov mov pusha sub into loopne out xchg out stc into xchg sub mov dec cmp push data16 and ds mov lea fcomip xchg (bad) clc lods (bad) fstps fdivrs into bound xchg popa lods pop dec dec pop loope xchg mov cltd popf ss inc adc add out fistpll add rolb push leave out int inc fisttpll sbb jmp cmpl jne and leave das pop dec out (bad) cwtl repnz fildll add or jge xchg or (bad) pop jne mov call mov cmpsb lds mov out mov (bad) mov adc xor out jge jecxz push xlat ljmp inc and lds scas xchg loope loope popf jae adcb and pop cmp sbb lods fistp dec dec test mov push loope mov xor sub sub push jecxz js sbb test inc imul adc loop mov cltd pop mov and xchg sub dec cmp (bad) scas stc das and cmc (bad) jne mov invd ret sbb add mov and jg inc pop flds add movsb jmp das les lods aam and push push pushl jae in xchg lret ficompl mov push icebp inc sub in iret adc jbe sbb xor adc xchg mov jb iret cs add dec rolb int in das xorl xchg ds xor (bad) idiv and xor dec or sbb cmp mov pop mov movsb mov jns fcmovu sub mov cmc aaa jne pop lea dec test enter bound add jmp cli push clc add inc xchg push mov xor and outsb jecxz fs jmp inc sub push xchg mov out cltd and rcl push xchg mov add out iret pop pop mov sub push and mov shrb loop cltd clc lods lcall das lods inc add out push fsubrl int fs lret cmp (bad) sub sub in cmc adc outsl add push jns rcll insb popf lahf das sub imul movsl das je subl add push mov inc (bad) repnz cmp fbstp (bad) je lock clc mov aam xchg cmpsl sub and jae xor dec nop or insb push jecxz mov push fmuls addr16 push pop out push jg xchg mov aaa in add movsb mov lret cwtl push icebp dec divb outsl popf xor mov inc dec xor xchg cld stc inc sub std push pop sbb cmp cmpsl and dec scas in lods jae stos imul fdecstp fcoml stc jge cmp push lret sbb gs cltd iret je fucomp in xor sbb ss fwait cmpb jmp or mov jecxz mov imul xchg mov and lods or (bad) jge pop mov int3 fs mov fcomps cmp and div fs xlat xchg add sub mov cmp add adcb mov pop pop mov ja int mov lock or pop lock xchg mov mov jo mov das sub enter adc in jno int3 push sub or mov push mov stc jl cmp dec inc xchg push bound fcomps inc nop es out adc jp pop scas mov nop push xchg add xchg js hlt push mov mov shll dec daa sub aaa fnsave nop and push cmp test cwtl enter jl pop inc ret push test fwait lret mov inc (bad) jp iret jp lret or xor cwtl js or loop or xor sbb push or push mov aaa sbb (bad) dec lahf xchg inc rcrl fimull es cs sub cmp push fdivl imulb fldenv (bad) mov mov push in je scas cmp cs (bad) mov out hlt (bad) cmp add sbb xor (bad) mov xchg jo jns (bad) mov xor push mov inc lods fisttp test lahf sbb cld ret add int3 sti xchg fs pop mov push mov out add cmc push dec pop push bound sbb sbb stc mov inc aaa aad cmp cmp push xchg fwait mov sub jmp clc call cld sbb xchg ret xchg repz lahf cwtl push mov inc aaa es dec repnz lock pop test icebp mov enter jno inc lods pop outsb lahf mov sbbl mov pop into sub inc jle mov (bad) lahf jb or mov jmp xchg aad jo sub adcl mov xchg sub inc mov xchg aaa movsb shrl lods push inc inc scas cld jnp sub mov das jg push nop and and (bad) mov repz xor dec fistpll or mov mov out fbstp popa jmp shrl xor pop jecxz push int3 arpl or jno daa pop pop xchg add fldl rcrb (bad) mov (bad) mov stos cwtl jmp xor inc xchg add mov das xlat mov mov out outsl (bad) sahf leave or (bad) aam xor xor movsb in int push mov mov stos imul sbb cmp out lods sahf inc out inc push mov out inc cwtl add xor adc sahf rcl ret jmp mov lahf loop mov sbb pusha pop jp pushf (bad) adc inc jle xchg xor lret xor push out cmpsb pop movsb and (bad) out call xor test aaa mov imul dec add fs hlt sbb iret push in fs mov or xor icebp jle outsl out js adc jbe dec imul sbb mov data16 jo enter inc pop dec pop jle pop es inc int3 ja cwtl xchg cmp call or repnz jae cltd cmpl icebp pop ret push addr16 test rolb out mov push pop adc dec out xchg xorl dec je mov loop imul dec lret cmp add add push (bad) mull jnp mov mov sbb into push rorb mov insl pop push jb or or lods sahf mov xchg bound xor xchg cwtl jbe mov outsb (bad) mov mov cli in mov lret mov jle or dec push std std and clc jb dec pop jne mov push cmpl adc add scas dec sahf mov jns mov sbb jge fs mull jo ficompl jl jge and js sub arpl mov jbe push pop xor fcomi repnz fiadd xchg mov aas mov (bad) out rorb aad stos cmc cmp subb cmp mov lahf jnp imulb mov testl in aam test add push push lahf out and or (bad) sbb leave mov cmp mov or ljmp subb mov popf push mov adc rcl lea or arpl cmp test pusha repnz cmp mov (bad) sbb imul jp js inc pop dec in pop inc mov out jmp mov push xchg xor sbb out cltd pop or in insl xchg rclb mov inc lcall push popa xchg roll in and adc loope int3 ljmp loopne scas mov imul enter fwait clc xor jae leave adc sbb test inc xchg int3 mov mov inc cmpsb jne imul rcrb add and pop addb lods in inc push mov js iret inc pop (bad) push int3 insb mov pop mov jg dec lods sbb fistpll cmpl sahf mov ret aad and dec (bad) cli (bad) pop rolb push push or in cltd addl fsubs jecxz dec fcmove pusha mov push mov mov (bad) dec push (bad) xor (bad) incb sub aaa mov movsb mov mov scas mov test add mov je pop sub pushf jge shl sbb dec push (bad) les imull stos cs xchg sub rolb xchg addl scas imulb cmpsb pop (bad) icebp or xchg fcoml mov push sahf movsb dec in inc xchg xorl mov and mov sub (bad) nop and push cmp jmp (bad) ficomp shlb and jae cs sbb ja repz xchg inc stos sub xchg stos jg cli popa xor int3 lods inc in and sti popf stos mov jbe shl cmp mov sarb movsl icebp into push xor sub fiadd out sbb lds mov sub mov rcll das sbb jno call push jge fcompl xchg test sub xchg xchg ja xor mov addl mov mov icebp leave cli adc data16 mov sarb or ja inc sub mov adc xor scas add dec or jl xor mov fadds bound stc pusha ror test icebp pop sbb xor rorl dec scas clc jnp jae (bad) jne mov inc mov cmp pop addl sub stos pop insl insb test mov lcall test icebp inc (bad) lahf clc ret push std adc sbb add mov (bad) pusha rcll sub jbe dec inc fcmove clc scas inc cmp or dec es imul add push sbb aas bound sbbl xchg cmpsb or push jmp xchg cld inc sub sbb dec shr outsb xor inc sub mov popf and imul ljmp or aam ss movsb pushf adc lock into scas sub enter pop add and xchg pop std xchg push dec outsl sti and (bad) call cmp inc xor mov xor pop ss dec mov hlt faddl rcrb enter pop lock jb mov mov jns jne cmp cmc loopne pop orl xor push daa in scas and rcrb xchg sub push pop mov xor mov (bad) inc mov mov and xor mov fstl je xchg ja addr16 mov pop push or dec xchg repz inc inc lea mov pop aas test jecxz sbb push movsl xchg out es or jmp add fcmove es aad jg stc pop inc fadds mov hlt or daa xchg aad pop cmpsb iret cltd and add daa aaa mov cmpsb jns fisttp fdivl cwtl sub mov movb lea data16 inc outsb jbe inc jecxz sub rclb cwtl cwtl jmp shr fldl mov pushf ret lock js sub shrl inc push fdivs add std push mov cmp inc out in mov shr mov stos loop leave inc add in aam (bad) cltd and leave repz xor cltd xor arpl out popa push sti (bad) mov sub mov test (bad) ljmp dec outsb icebp mov jle xor call cmpsb pop xlat and push cmpsb xor adc jno imul jnp mov pop clc sbb sarl jb cltd sub add mov es (bad) call push lret cmpsb les jno jle int3 lret mov imul imul loopne lahf jnp push jge mov pushf sarb adc leave fcmovnb jecxz or shll fwait xlat pop pop repz add in mov (bad) jno call jno adc std cwtl (bad) push xchg pop cmc mov fadds mov insb pop icebp fs (bad) or lret insb lds sbb outsb enter mov ret stos lods or add dec es ret push les mov adc xchg mov sub jae add inc movsb mov mov fistpl sbb xchg pop mov add addr16 sub insl mov mov adc inc (bad) sbb and add or jo xor xchg mov or push aam lock jg dec push pop add jg xadd cmpsl mov sbb sbb clc scas dec andl mov lea fisubr or pop imul outsb sub jae bound loopne inc cmc and jb cmp lcall pop in (bad) xchg roll ds mulb es push xor fiadd lods push lret jns jmp inc push lods sub inc sbb mov lds xlat or cmp jg aaa sub fistpll xlat pop lcall cmpsl fild add outsl sub ja rorb jae mov pop stc lcall lods stc ja std lcall into imul (bad) fbld pop adcl das jp dec cmp or dec int std pop cmp das rcl hlt jg iret lahf daa mov cwtl or dec ret mov imul sbb sbb lret outsl stos sbb stos jb shr lock lret sub add incb cld aaa sub inc mov inc dec in pop jle mov ret push mov mov neg les dec jno jno test pop or punpckhbw pusha sbbb cltd sbb icebp xor add cmp cmpsb mov (bad) aaa dec pop outsb mov fiadd mov leave inc sbb ficompl lods mov cmc or jle jb push and jns loope dec rcll pop sbb dec sub xor fwait adc aam pop clc xchg sbb cmp adc xchg aaa std adc mov scas aad sahf mov sbb shlb rcrb cltd or andl into mov inc je lods inc rolb inc shlb aaa mov push cmpsl mov lods sub subl repnz sarb js aad and es (bad) xor fmuls pop adc jb push int pop xchg adc sarl jae bound or mov cmp out movsb xchg call mov rcr and push loop test xor cmp push jecxz jmp pop sbb rcrl lock enter xor imul sti andl and out inc sbb and push jle jle jbe jne in jl lret sti lcall call (bad) xchg pop into out fs shlb pop push dec lock cmp xchg gs push (bad) stos cmpsl adc in popa mov push in adc or outsb jno (bad) cmp adc les mov stc dec loop push mov outsl inc ljmp xor icebp insb addr16 cmpsl notl scas loopne outsb das sahf pusha inc sub or pop dec and jecxz hlt adc fistp or call add mov fs cs cmpsl push dec inc fwait push or movsb jp mov inc dec or push xor push insb mov shlb jmp fisttp sub inc sahf inc push xchg mov mov enter test and es add push sub ds sub je mov and imul and das cmp mov in imul dec mov xor aaa inc jp sbb jecxz lahf xchg roll lret shrl aad lahf sbb andl lcall cmp adc sbb jae imul scas ljmp ljmp test into mov mov lcall mov inc adc xor lods pop or inc insb pshufw and sbb adc mov xchg push jp add and pmaddwd pop add add cmp mov nop ret out lret scas mov push push pop out ret push sub scas pop outsb mov jl stos sub xor push jmp jnp xchg int3 dec and ss mov cltd rorl mov not cmp iret xor lcall cmp imul mov ret pop (bad) push inc (bad) mov cwtl fist cltd jne pop and adc sub scas sbb ljmp sbb insl ja mov xor mov (bad) hlt mov jg clc subb in bound pop dec dec sub adc sub inc sbbb pop dec imul xchg jecxz xchg and pop pop push mov pop jns int and js lea rclb nop inc outsb pop stos daa (bad) sahf pusha inc shrb lock (bad) jecxz adc or (bad) push mov cmp pop and and xchg add jnp scas jp frstor lods dec push repz cmpsl in lock shll das push push dec push cmpsb je pop call out push cli adc mov mov repz pop jl aaa bound jo loope mov push and sbb sar stos xchg data16 sub mov dec add aam and neg mov sub ficompl add out cld and pop xchg ret pop arpl jns xorl sub sub mov push pop inc sbb jno scas cmp push dec mov test jo lret test push push test adc enter in das ja push or addr16 push inc adc xorl and lods xorb int3 cmpsb mov add imul inc jbe mov (bad) mov xor and mov out movsb cmp jo jns adc adc push fsubr or sti cld lods add mov xlat orl into cwtl adc push dec xlat push jecxz lret rol stos push cmc (bad) mov (bad) repz in adc mov sub mov es nop mov movsl jno add sub or loop or rolb xor xor inc fidivr cmp mov test lahf sbb call cltd dec mov outsl jp jecxz sahf in rcll xor arpl push stos mov shlb mov fs cs adc movsl xor push mov arpl mov iret and sar je mov xor mov dec clc addr16 js jnp call cli jg in movsl push push sub and xor dec xor inc fwait lret clc imul pop aaa insl inc aas ficom test mov push div push lods dec sti (bad) insb fildll gs jmp xor (bad) mov in popa dec stc mov aaa mov push iret ret aam mov cmpsb lret xchg cmpsl mov inc iret mov xor inc repz (bad) aam pop mov pop xchg push lock xchg rorl sarl pusha mov (bad) lret push pushf adcl call or pop out cwtl mov inc fcomps in rcl mov scas pop popf rcrl (bad) dec add sub mov cld jb jmp sti jbe (bad) cmpsb cld push inc mov push cmp hlt int fwait cmp ds dec enter ljmp mov xor jne pop dec push mov pop test mov outsl jne pop paddq dec in popa xchg cmp jo add xor (bad) popa xchg adc jo adc or test cmpsl mov addl pop xchg leave jmp subl dec (bad) push jnp stc adc add fucom add aad sti sub cwtl mov inc (bad) mov dec and ds sti or fstps rcll scas pop sub scas mov sahf pop mov mov xor ret cmp pop imul out add scas loopne test xchg insb popl inc cli mov fisttpl cwtl mov jmp and stos mov cmpsb mov cli push stos std fs or pop iret (bad) stc jl (bad) outsb nop aas sub sub inc inc push cli or sub inc sub sub cmpsl xchg les jmp adc mov leave aas push lahf imul lock jbe dec add sub arpl insb pushf sub stos dec popf popf notl xlat sbbl push jns les push (bad) or je xor sbb push add add jo and stos cmpsb push cmp pop rorb sbbl lahf sbb das push jp ja fcoms push out es (bad) mov aam out aas in mov daa stos das in lds in fmulp sub fmul fldenv lret mov mov outsl cmp js aas popa rorl cmpsb fmull (bad) push inc mov push push push ret sbb lods and in aam aad mov cmp ror or mov out pop dec and cmc pop xchg sub sbb movsb stc stc cmp iret jb lock xchg mov jmp xor movsb fwait subl xor dec rorb nop cs inc stc mov fistp in fcomip hlt dec mov jb mov mov mov and lock clc mov fmulp mov or xor fdivrl loope mov mov pop outsl (bad) imul or aas mov xor movsl popa add mov data16 jo orl jle lret lea jnp xchg lahf pop icebp shlb cmp icebp out mov inc adc pop xor jns mov cmp shll mov push sub inc sub xchg or add add adc ss and or ja fisubrl leave mov fisubl cs rorb push mov call ret or insl int rcrl xor fstl sub arpl mov sbb insl push lea out bound inc into xor test ds lods and jb add mov dec pop xlat jo rcll scas test out push idivl xchg mov mov ljmp cltd cmc pop mov fwait cmp sar hlt sub out mov inc xchg aam pop loope xchg xchg xchg cld andl xor popa bound dec jno ja or adc out pop lcall das jp gs lahf push les push and jo shrd mull jmp mov mov std into add ja test pop pop addl ret cli push (bad) cmp paddq pop push cmpsb mov or fistpl fmull adc ljmp pop push xchg jo mov (bad) (bad) scas xor in sub push push sub sbb sub ds outsl fcmovnb push xor sub jo rcrb leave push or push rcrb or add push inc test jp scas jl out pusha call inc stc pop (bad) arpl das mov add push push jp sub add mov inc pushf pop mov xor stos cmp js jb aaa pusha jb scas or out arpl hlt dec (bad) cli sbb cltd lahf in inc mov pusha dec and or push mulb ret lcall mov lret inc lcall cmp sti inc jb out fwait movmskps jbe aas bound xchg push daa jo inc xlat mov ret lock push hlt and cmp or pop clc sbb mov ss push ror (bad) out sub add xor sub xchg push mov sbb cmp xor scas and cmp addr16 popl xchg cmp mov test adc fs sbb iret cmp mov frstor pop mov sub add push hlt test xor push ja mov sbb cmp mov nop mov daa bound push mov movsb or adc sti popa nop push mov xchg and or test cmp mov sahf clc in dec gs mov cltd nop test sbbl dec dec (bad) loopne pop xchg aad pop int dec dec cmp jae inc adc dec jae adc ds aad push popf mov push inc cmc pop push jmp repz inc jmp sbb lock std int3 call mov cmp pop or fiaddl lret cmp push pop test sub push (bad) sub lds (bad) jmp ficoml cmp cmp dec in push clc mov dec jl inc pop lea fcoms movsl int3 stos mov scas dec cmp in mov dec jmp xchg scas decl xor mov test adc push std pop dec popf xchg insl pusha call adc pop les push push and cltd ss imul clc ret sbb pop xor (bad) mov dec ficoml ret sub mov jns roll inc bound out jns sub mov xor inc mov mov ja and sbb mov fist lods fdivrs call int3 inc scas int3 xchg xchg cmp out aad lret push insb add push (bad) sbb xor jbe pop sti loopne stos das das out push push add xor loope push sbb sub xchg inc stc icebp and test pop sbb dec out cmp sti in movsl lock lret outsl jg mov push daa ret xchg add (bad) repz jnp mov lods lods fadds dec add add add jp (bad) jmp jp cwtl cmp jbe and or imul jae add pop ds lcall ljmp dec mov cmpsl loop and dec sahf out push jae push popf stos out loop andl cltd insl push lahf push (bad) into mov repz test push sbb cld pop xchg inc mov imul call adc xor cmp flds (bad) aaa repnz mov and push stos mov in nop jae or pop aam in dec or mov jle out nop pop cmp cmp or and push loope fdivp mov bound xor mov andl out ljmp jl push dec cmp dec cs cmp shrl sahf jnp pop pusha cli out (bad) leave xchg movsb aam (bad) dec outsl (bad) fldenv sub ret ret stc (bad) loopne jae sbb push (bad) jno sarb add or pushf inc je (bad) int3 jle pop loopne fstps dec jno dec mov mov orl sub fstpl das mov sarl xor fsubs aam call jle (bad) xor inc ljmp dec xor mov mov mov into sti xor mov imul js fadd imulb loopne jbe add movsb in icebp jb mov fadds pop mov sarl inc push cmp rorl lods ficom add sarl out lret dec sbb loopne mov aas cmpsb hlt sub cmp or mov pop dec insb add xor scas dec enter or int pop repz and xchg (bad) repnz mov jp rclb adc jbe inc in out or pop sti jmp push aad add stos or inc lods or xor movsb jmp fistl out pop sbb xor stos jno mov sbb cmpsb xchg repz or adc test loopne inc xor fidiv leave aam jp jmp and loope add pop lock mov mov test jnp push movsb addr16 mov pop pop or arpl adc mov test push (bad) lret cmpb hlt out jmp repnz ds push (bad) xor pop nop out jl sbb gs dec cmp jg inc inc (bad) push pop (bad) iret push data16 divl stc lods pop aam and mov sbb data16 mov orb dec sub jo repz outsl pop scas icebp adc fwait dec out (bad) fmull and jb (bad) jne in test inc scas lock faddl cmp ret jnp xchg in xchg in sbb lea xor lds dec mov mov xchg in jo inc mov mov out jb push or aad mov sbb loopne cmp pop sub aad adc int3 mov es inc lcall fcomi push jecxz fcoms fbstp push push jge push lcall into notl jle mov push (bad) in dec out lds push cld mov mov stc mov fwait pop pop mov ret xchg outsl leave mov repnz lcall loopw,pt subl cli sti clc add inc ret dec and sub pop mov (bad) lods test cli outsl xchg inc imul adc inc cmc fisttp add ss mov jbe cld jge push push roll mov data16 ss iret call jge pop sub mov in sbb jae test mov jnp mov in mov pop (bad) es lods outsl adc cld popa lret inc push add mov out sbb dec mov popf sbb call notl dec pop mov mov jp flds cmp and mov lret shrl cs add mov testb loope inc inc les xor or jbe and outsb out es movsb imul in push fsubs sub inc int ds lret in (bad) (bad) test sub inc cmc pop pusha notl xchg or jmp mov and repz mov gs dec les popf and cmp and mov lods das aaa subb nop add adc push fdiv pop stos imul jl jp mov sar sub dec test push pop sub fwait mov adcl mov les adc cmp mov sub (bad) or cmpsl popa in pop fwait sbb dec mov and inc cld inc pushf mov mov mov ss pop inc inc lret cvtdq2ps mov xor xchg cld add push jne,pt lret out adc add pushl stc cmc push jnp jne adc (bad) in add in sbb or stc or sahf movsl aas jae jge jle mov sbb loope cmp mov fldt pop je push adc cli (bad) mov lds adc dec mov int3 jbe xchg in mov outsb pushf push popl pushf xor push inc pusha movsb ret pop xorb stos cmp sub adc push mov ficompl idiv sub pushf xor ss adc pop mov fbstp mov xor cmp jle or mov mov lret push sub xchg ja pop mov push push inc adc lock test loope popf (bad) ss sub pop mov lret in push mov (bad) add sub popf pop ljmp jno cmpsl ret cbtw movsl mov cwtl xor mov cmp adcl sbb imul dec xchg sub stos or mov ret xchg jmp aaa xchg popf cmpsb cli adc or xor jno pop pop fmul jnp incb adc mov out xlat xor lods pop fldl xchg je outsl sub xchg (bad) sub popa jl outsl hlt mov push xor sti fs mov movsl jp mov sbb fcomps xor in xlat inc sbb (bad) dec scas dec pop push pop mov push in xchg add call inc mov jmp stos adc pop data16 loope push adc movb xor (bad) out adc add (bad) mov lret test out call imul inc (bad) and fadds mov push outsl dec pop sub add sbb push insl mov inc cmc fnstsw (bad) je xchg push test out lock test stos xchg scas pop lods mov sbb adc push mov jecxz dec decl xor movsb (bad) clc xchg mov mov mov mov popl cmp iret xchg es (bad) cmc push sub repz imul dec mov add xchg scas mov mov popf fwait xchg pusha pushf (bad) fistpl insb int3 popa leave fisttp cmc incb (bad) mov xor js cmp sarl or imul lods xchg push sahf dec stos insb mov push pop negl add xchg cs adc icebp mov jno mov push and mov (bad) xchg into loope pop lret packsswb inc adc pop sub fstpl ret add std mov sbb lds cmp les into and adc or cmp adc loope stos jmp fsubr dec mov adc jne push sbb mov fildl shll pushf lahf mov sahf dec out aad push movsb cmp test dec push mov mov fisub push xchg pop sti cmpsb sub and sub dec addr16 adc sub fildll stos push std mov retw inc adc mov sub mov dec push int (bad) xor mov aam jns (bad) lcall imul cmp loopne fnsave xor mov xchg cmpsl sbb pop out or dec or or scas mov add dec add jmp add push addr16 ret leave sub js nopl jge (bad) jnp mov xchg xchg jmp icebp sub xabort cmpl pop imul inc xchg dec les ljmp lods cmp sarl add dec dec pop aas jo lods arpl cwtl push enter cmp movsb loope ljmp out sub in mov mov lods jg scas add xor iret mov fdivrs mov (bad) pop xchg es popf lods cmpsb out cltd jbe pushf jmp sub adcl xor (bad) jbe add adc xor and fcoml jl rorl imull ja mov push popa (bad) mov sub fisubrl fwait in mov loope lods out lds inc pop xchg into pusha add push fmuls jle jnp aad shrl sub sub ja ret inc outsl mov negl xchg cmpsl addr16 in mov fsubrp push repnz add xchg sbb (bad) ror fidiv cwtl xchg push jle cmp adc aam adc dec or or loop or ds push lods mov xchg mov cmp mov bound imulb outsl xchg jo ja inc addl inc cmc outsb cmp insb dec mov pop mov mov sbb loop mov dec add sub scas push ds push xchg dec xlat jbe repz movsb jo fnstsw jp push or pushf popa rcrl add leave loop jg test dec clc sbb ret xchg mov dec cmpsb mov xchg sbb in repnz cmp sub push xchg shlb mov ds inc fisubr ret cltd push mov add lea in mov (bad) fisubl sub xor push imul fneni(8087 cmp xchg push sub loope sub pop push mov decl dec push not inc inc jno dec xor in cmp hlt sub pop mov pop xchg jno dec icebp cmpsb adc push mov insb icebp fs leave lds imul pop out adc in add mov xor lods sbb push bound int sbb push pop (bad) mov cmp stos pusha out fsubs mov mov divb adc and hlt hlt and adc (bad) pop es fisubl mov sbb mov (bad) es jae test sbb ret sti mov aas int3 pushl push fs (bad) fistl jns jae or clc loop mov lods push aaa mov xchg lods push xchg add sub jmp test ret sahf lock loope pop ret jl imul fistpl outsl mov push test lods and leave sti test rclb dec int3 add push inc or pop jmp divb adcb xor pop test out mov jle inc pop xchg adc mov mov mov lods lret push pusha mov jno add aam inc add jae inc sub sbb fmul imul xor adc adc lea test sahf fucomp xchg pop (bad) cmp lds sub sub popa adc ja popf push fwait cltd dec data16 mov adc sbb out outsl jg gs inc and mov xchg or rcrb scas push loop arpl cmc xchg inc mov mov and mov and and shr lods arpl cwtl jl imul xchg cmp jge in cmpsb jp lock sbb clc and pop pop or stc jo rorb cmc mov wrmsr xor and mov into outsl and ror dec jmp sbb pop mov lods mov out test movsb and xchg inc mov sub sbb pop adc jecxz gs popf mov cmpsl cmpsl aam sub pop cs imul loope mov jae cmp js mov push dec add xor bound xchg inc adc and scas in clc adc mov dec xor lret push mov sub in aas cmpsl sub adc test into sub sarl sti xor test sbb mov xchg jl enter test and mov cwtl in add pop xor mov inc pop xchg mov xchg movsl cmp sub shll pusha fidivl movsl stc push xchg sbb push push jecxz mov xchg pop xor leave cmpsb xchg jae lret xchg mov add or (bad) les fucom mov pop mov fcomp repz std sub lret push icebp lret lods repz inc sbb cmpsb int3 repnz cmc inc imul jbe iret and inc jo sub push push je sbb int3 mov lea mov jge add push cwtl mov mov cmp shrl push and pop pop cmc push sbb notl ficomp mov push insl in adc dec arpl shlb lock shll lret roll popf aaa sub mov mov out pop adc test dec in outsl fs cmp decb sahf adc loop (bad) icebp cmpsl movsl and and fnstsw out icebp add (bad) movsl lods lret sbb push push sarb scas sbb pop je repnz daa rcr adc push shll add icebp test aam ds call jo xor xchg hlt xchg cli stos and hlt or adc dec sub rorl (bad) cmp sub and dec (bad) lret in fsubrs rcl (bad) xchg in pop pop stc (bad) mov cld int3 xor xor test add test add into mov add lds hlt mov out cmpsl cmp out mov mov cltd jns (bad) lods inc lock sysenter or mov imul cs fldt rcll negl data16 mov in out add and leave fstpt lds pop fcmovb inc imul push inc add bound cltd sbbb (bad) and icebp data16 xchg dec or addr16 arpl (bad) jno mov test int cmp mov mov ljmp sti std add lea jae fs sarb inc jl repz aad mov mov sub push call clc jnp daa stos dec mov sub das sbb adc mov push xchg fildl xor arpl mov dec outsb sub stos xchg push dec je mov (bad) pop repnz inc and outsl dec fsub dec (bad) sarl xchg xor sub roll out insb mov sub loop frstor js cmp jo sub mov sbb lds jp lock push pandn in fildl mov mov sbb and sub xor orl idivl xchg mov leave test jecxz jmp pusha pop (bad) fistp insb pop xor (bad) loopne leave pop mov cmp cltd lahf repz (bad) jle (bad) mov or test pop les pusha pusha pushf pop stos imul rcrl add sbb adc psubb stos cmp enter jae sub cld xchg js pop mov popa push leave mov mov dec xchg int3 push adc ret mov popf sub insl dec aam sti xor inc sub (bad) pop in xchg testb fcompl jbe je mov stos test (bad) data16 mov popa pop dec dec or mov imul andl ficompl int imul rcrl push pushf dec rol je mov sbb and loope push addl push dec mov lods inc push inc xchg das dec push jl sti cmp sub lahf pop xorl arpl mov mov fildl push dec enter insb (bad) pop cmp stc jl jl decb pop outsl adc in add orl push (bad) out aaa test pop add and loopne xchg out inc push pop dec arpl push je inc inc inc xchg or rcrl xor daa loop mov dec cmpsl and fcmovb push cmc pop sbb repnz movsb xlat mov fs ja xchg pop add inc sub push (bad) adc sbb repz loop rcl pop rcr inc pop stc arpl adc sub xorl in sbb test cmp adc xor bound frstor bound add rorl xor pusha mov daa dec cli daa ds mov daa dec shl cld sbb pop pop or cmp xchg loopne je in and mov pop call cmpsl rcrl pop fistpll out jge ret mov out or (bad) push dec shrl fs aaa fucomp dec and xchg lods sahf stos (bad) lods and or mov adc mov cs bnd dec test add repz rorb je jmp (bad) decl pop out push pop in in sub sub adc f2xm1 inc mov cmp inc sbb (bad) mov (bad) aas jl inc into fs mov sbb shl test ljmp sti imul sub mov push sahf mov pushf and cltd mov popf push les sbb push leave pop mov xchg lea mov pop movsb cmp dec cmp arpl imul es mov (bad) in orl pop scas mov xor or iret xchg inc icebp push cmp and lock inc lods loop faddl cmp leave jae cmp arpl sub dec pop push shrb push jecxz sti (bad) mov mov rclb popf jb fisttpll std or or pop push test push test call enter jno xchg xchg push dec (bad) (bad) roll push pushf dec inc adc or stos push add and pop inc mov es sub test inc lea int3 xor cltd adcb push or gs or fwait cmp fmuls and (bad) out push xor adc das cmpsl lods jmp jle out xor dec mov push enter popf pop xchg jb fwait icebp inc push sbb push dec pop lock daa inc inc mov cmp jmp sbb push adc sub cld adc bound addr16 fisubr adcl loopne stc pop (bad) cmpsl fiadd fwait xchg clc pop add xchg pop loope adc out lahf gs fildll shrb cltd xchg push pop xlat xchg loope xchg outsl mov inc bound and lahf sbbb ficomp pushw sub inc lock ds cmp mov push fwait stos push jne stc ss xor xchg call adc movsl jl or decl rep mov push in jno xor sub mov adc test and xchg sti jmp ret lret rorb std and (bad) loop jl fsub test (bad) dec aaa cmp inc dec jge stos push (bad) cmc inc cs das dec cmpsl cmpsb aam jno (bad) in out and icebp add repz lret mov mov mov xor push cmp insb fucomip cld insb and in cmpsl aam or mov negb cmc inc add je hlt mov repz nop jae rcrl sub dec mov into faddp lahf mov add sub out jbe mov lods nop jae vpslld enter addb inc (bad) mov les mov popl mov mov (bad) or or aas xchg ljmp icebp pop in jnp push xchg pop inc sbb xlat mov jno add ss (bad) fnstenv pusha sbb xchg popa popf pop jge pushf cs (bad) cmp cmpsb push out sti ss mov jmp pop push insl mov hlt and test inc fisttpll subb push push jg sbb aad aas mov aaa xchg push arpl add in pop pop jp outsb push sub xlat add pop push enter insb push (bad) test es ret jmp jmp repnz sub jp pop subl pop and jne cmpsb addr16 rcll jle outsl lret scas push lret lds (bad) imul push stos adcb xor (bad) mov outsl push addr16 adc mov mov xchg ja mov xor pop mov movsl stos jle sahf sarl jg jae push pop add jg (bad) xchg inc scas addr16 inc pop mov icebp jae xchg cmp test xchg add pop scas lcall mov push push lock jl scas fidivrl lahf jne inc sbb fs jo or lcall xor in cmp es or bound inc fild dec dec pushf arpl bound lea inc mov jl sub xchg neg mov lea or push outsl sbb movsb fucom dec lcall inc push add xor loop pop insl push shlb clc jb jb jle insl scas insb stos mov mov outsl xchg and mov ret cwtl jl pushf cmp jae lret cmp rolb push pushf dec push mov mov inc jbe (bad) maskmovq mull cmc js mov test ret repnz loopne cwtl push fs xor add je popa jne pop xchg lds push xlat aad popf xchg mov mov (bad) (bad) pop shl (bad) (bad) ljmp jns (bad) mov gs std fdivs mov push pusha push and andb je ret sahf push out add xchg andl lods hlt adc ffreep mov lds pop fbld push mov nop xor jge mov mov push push push push scas or xchg jp pop cmpsb add es xchg cmpsl inc add movsb add cmp fsubrs dec jns or in out js jge scas mov pop push cmp jb jno orl dec push xchg leave or flds pop pop dec lahf pop push mov aaa ret push jecxz cmp adc sbb push mov es fsubrp push inc or lahf test ljmp jl jg arpl adc std or mov out fiaddl addr16 scas and ljmp stos xor pop subl movb mov test rorl popa xchg and mov outsl ret or add das adc mov clc add cmp mov inc inc mov fidivl xor xor mov (bad) rorb or lcall pushf iret fldcw mov repnz sbb arpl and (bad) in mov mov pop jns (bad) jne jg and (bad) push inc pop jecxz cmc movsl imul lock xorl adc mov fcompl mov pop push xor dec sub xchg pop imul sub aam (bad) lret push rcrl aas dec inc push cmpl stc (bad) jmp cmp mov mov sub xchg aad jg cli addr16 faddp jne or hlt les jg mov xchg leave into pop int dec adc (bad) mov nop fwait adc mov icebp xchg mov fldenv (bad) mov stos xchg jbe mov faddl mov dec dec pop or dec gs callw jmp jmp cli aaa std mov loope sbb movsb jmp clc popf jmp lods push add lcall js or dec inc ret and mov push pop mov je push cs out cmp mov fwait (bad) shlb (bad) out stc clc scas xchg adc fistpl iret cmp push ret dec or push sti mov push iret jg and lcall pop inc add cmp adc aad fwait lods sub jmp nop jl subl sbb jne in movsb sbb scas lret rorb subl push pop jp je mov adc xor and daa movsb aam pop xchg dec lock fstpl adc fisttpll or push (bad) into xchg inc adc (bad) sub pop pop jp xchg cli repnz xor jle add jecxz push rolb sbb lret outsl aaa xor dec leave (bad) lods xchg movsb xor hlt out int (bad) mov sbb sbb rcrl cli pop mov and sub jae outsl mov pop dec cs add es pop outsb mov pop int3 cs dec and xchg lret sbb in jmp mov (bad) movsl jg pop es jmp sub hlt or dec sub mov sub sbb insb sbbb push imul xchg lret adc xchg and mov cmc les fisubr mov es xor inc in cmpsl pop ror xor push push cmp sub push jbe xchg dec jg adc movsb pop lods aad (bad) jo rcr dec jp outsb nop xchg (bad) ljmp or les in popf in icebp mov mov and jb cs lahf xchg js mov gs mov out lea cmp and (bad) jbe sbb (bad) insl cmc dec out pextrw popf fdiv aas sahf cmp in jge adc scas outsl inc pop idiv inc outsl cmp loop xor xor mov fcoms jl shl ret stc mov jecxz in repz xchg fildl mov pop jae insl shrl nop popa mov arpl cltd negb lock adc adc cli orl mov adc dec inc fsubl sbb push ljmp add add incb push mov xchg pop or je fwait mov inc lahf outsb rclb lds negl rcrl loop cmc outsb and sbb mov xlat push lret inc out mov push cmp pop sarl adc xor subl aam fbld rorl xchg or and and adc (bad) test jmp pop inc mov (bad) ja jmp add mov xor push and test adc loope push xor cld xor dec rorl sub cmc mov jmp cwtl div or pop addl aas ja lret in jecxz aas push jne push lahf mov cmpsl fnsave pushf or std (bad) lret (bad) shr int cmpsb dec cmpxchg mov cmp or jmp andl jbe pushf ds out pop out ret pop sti fisttp repz std lock call cltd jecxz mov jno (bad) es adc inc inc enter fldl push xchg adc add and insb sub mov or mov or aad test push cmp inc dec inc add addb movsl lock and pop push mov xor pop jbe aas and sti pop pop sti test inc cmpl sub mov mov or mov rorl mov mov xor and decl lods xchg pop rorb imul sbb dec ss shrl xchg mov loope add xchg mov dec xchg mov sub add and popa fisttpll fdivr fstps dec repz cmp mov lea xchg out jl es pop mov ret pop fcoms xor cmp add lods pop sbb push stc mov cmp in das test ss rolb push or inc stos push jno sahf push sub mov xchg inc cmp add movsl dec lea int3 jmp lcall mov test pop loopne repnz adc ret cmp scas mov jg mov sbb out mov shll repnz scas rorb loopew adc cmpsl pop ret xchg push mov stc and fwait inc js or arpl movsl and xor jno mov cmp add and mov push int3 mov cmp mov aaa icebp dec outsl push fistl adc sbb and adc mov xor sbb pop adc loop aas and xchg jnp lret mov inc xor sub pop cmp push xlat push cltd clc scas std sbb lea mov popa or xchg mov pop adc xchg sub jg mov test cmpsl dec mov pop mov (bad) cs xchg xor ficoml xchg or leave clc jg movsl js jg loopne jge bound mov fsts add xchg inc nop mov (bad) mov sbb sbb sahf mov clc pop or push push popa in mov jne push xor stc cmp and jle loopne or inc adc test pop dec add fwait repnz in andl daa loopne aad movsb cmp push stc shr fdivs adc pop inc shl xor adc push jne out and enter adc pusha mov rclb (bad) (bad) push inc cmp push jns push hlt jp or mov push insl cmpl insb (bad) (bad) and pop mov das xchg outsb pop push inc data16 mov repz mov cmp mov push mov repz aaa jae cltd push out gs lea in es ret sub (bad) sub ja xor mov jno add push xchg movsb mov xor xor sbb imul push or mov dec imul sarl (bad) jmp shrb jmp push inc lret and mov push pop cmpsb sbb adc adc cs xor inc pop jne add fcomp pushf xchg and jge aam loopne (bad) ficomp jbe dec and inc jl test les call or jne test mov fwait mov sub mov mov add rolb mov pusha lahf jecxz movsb divb or xchg js push mov or test mov mov fdivrs (bad) cld mov mov adc dec cwtl (bad) jns cmc sbb dec inc lock sub inc (bad) cmp rclb repz pop dec xchg pop jmp loop sahf mov pushf leave jge jb mov mov jno fild cmp sti xor or arpl hlt xor scas pop out rcrb sub and xor sbb push or cmpsl mov jp and movsb outsl js and pop mov mov pop cmp push xchg pop (bad) mov inc mov and cwtl (bad) in cs ret shll sub mov sbb adc (bad) (bad) sub mov scas lcall outsb sbb std gs sti (bad) cmp lds or push outsb imul mov cmp mov jecxz xchg les fimul imul mov into xor mov jo popf xchg (bad) xchg repnz mov pop movsb mul adc (bad) decb mov push jb stos and push icebp je mov lods in insl cmp daa xchg jmp or sub in mov insb mov push jle jecxz in arpl (bad) fcoml icebp stos scas nop popa add jno das enter int inc push sub xor (bad) test fdivrl mov push test mov inc xor xor push inc pop mov xchg repnz cmp cmp mov sti and push les ficom mov mov test mov test adc add pop subb inc cmp insl int3 mov stos mov scas mov mov ss lea data16 push sar cmpb or inc sbb mov inc test push cmpsb inc clc or outsb ud1 push pmullw into sbb ret std lret movsb imul mov sub or add and jne aaa hlt sarb inc mov pusha cmp stos iret dec add jne rcll arpl (bad) push sarl add cmp or dec imul mov add push push pop pushf sbbl sub aaa jbe push inc (bad) sbb inc js popf repnz and arpl adcb and xor jae pop mov rcr adc mov fcoml es sub hlt cld fsts push sti pop push and scas movq cmp jge popa in cmpsb mov enter inc bound push dec xor mov aad or fcompl sbb iret dec call jno sbb cld adc in sub mov stos scas scas and mov inc inc sub pop push jg dec pop mov fist loop and hlt pop pop in mov daa leave pop lock inc and outsl in push test loop or sarl pusha jns push popf mov add jp push testl and inc mov pop loope add shll mov mov dec clc cmp dec adc bound outsb pushf out divl scas ljmp pusha inc insb mov push inc sub cltd jb cld xlat (bad) pop cmp mov pop pop aaa por jne sbb pop push jecxz mov push mov inc (bad) mov mov cmpsb or cli outsl std fnstsw jge push xor mov clc ljmp adc inc cmpsb cmp outsb out mov fldl incb in push add enter (bad) cli mov dec call push sti (bad) into lock daa ret jne cmp insb push enter fcmovb jo mov cmpsl jo fmull movsl sbb adcl fimul sub mov iret loope loopne jno fs stc sarl or inc aam mov add pop sarb (bad) jle jno mov (bad) mulb je inc cltd dec fbstp dec (bad) lret in aam dec or idivl jno jae and cmp pop aam and shlb mov je xor in pop les (bad) adc decl js leave pop cmp cmpsb xor mov cwtl sbb int3 jns add and jno (bad) insb jge fcmovnbe (bad) jl sbb jae dec pop push jle pop je cmc (bad) lds test xchg dec inc (bad) cli repnz out sbb adc pop mov push fisubrl fdivrl inc out inc jb dec pop call and mov mov (bad) hlt pop sbb push andb fistp aam in xchg ljmp jnp push mov (bad) xchg (bad) and out js rcrl mov pop call jbe adc push add aam (bad) xor xor leave mov jecxz pop mov js in sbb jecxz bound data16 lods jb sub loopne js les or xchg es insl js sarb arpl popf jns orb lods pop jns push sahf rcr movsl mov ljmp insb jge aam jmp mov (bad) hlt (bad) jae sbb push adc addr16 xor xchg iret (bad) ja xchg clc xchg jnp adc lcall popa scas loopne rolb pop lods xor mov xchg imul jle cmc xor xor jmp pop mov loope jecxz sub test pop jo fimul enter fs in out fdivl adc adc lret inc mov test push sub mov or xchg pop js push fimul lret pop imul sbb ja loopne push daa movsl xchg push cwtl ss mov and inc sarb in xor andb lret pusha mov into push cmp mov (bad) je mov dec mov stos mov mov xchg sbb mov (bad) adc xor xor int neg push aad push imul std loope mov idivb iret in (bad) or adc add movsl cmpsl dec pop fdivrs pop test and jno adc jp xlat mov jnp sub (bad) pop cmp pop fistp xor leave sub lods fidivrl mov jnp pushf adc inc imul mov jg push add data16 fs jbe mov sub jecxz popf test lret xorb sbb xor fstpl out test ss leave int3 push enter fistpll push sub xchg lret pop pop lahf mov das rcr or pusha fldcw dec push leave sub loop insl jno dec roll mov aas xchg dec aam cmp scas mov fstp nop mov test dec insb dec mov (bad) data16 jmp push test cmc sbb movsb push jmp dec imul insl test in mov add fstpl and xor jmp fldt daa (bad) push push and shrl test mov test insb imul jno mov sub jns ret or cli push xchg mov or adc push inc (bad) into fnstenv test add jecxz lcall mov jle out dec xchg lods orl loopne jne popf add pop xchg lcall dec mov (bad) push adc int3 mov push mov pop xor lods xor jecxz mov push and (bad) insb xlat ljmp std push popa (bad) hlt cmp sub inc fcomps inc jecxz and in scas nop mov pop dec shl push aaa ret adc push into jl pop nop orl and push dec mov mov (bad) mov lahf mov cmp outsb jo dec ds cmp mov mov (bad) aaa sbb pop xchg scas pop out scas cwtl inc enter lret arpl dec xor push pop xchg call adc push loope mov adc mov sbb mov jecxz shrl loopne sbb inc cmp pop jns adc loope xchg iret retw scas jne pop mov add fsincos fmull dec inc (bad) lret je and inc jle add inc or enter mov jne or insb aam mov push add inc mov jb jp mov in pop outsb into and insl ljmp outsb ret stos sbb push stc jbe aam int pop lcall add push lret shr pop sbb sub ja mov pop sbb xchg lds lret jnp add out cmp xchg xchg test cmp xchg inc jge add jno cwtl jno and push sub jecxz or sub cmp test js jl jg cmpsb mov xor test call jmp lea pop iret jbe mov cli cltd jecxz stc int in pop pusha push aas mov push xchg jge loop mov sbb pop sub and inc loopne shrl test xchg bswap ljmp pop lds jmp das shll sbb stos sub mov scas mov pop and xchg sbb jmp ficom xchg xchg sub call inc xor cmp cwtl and lods hlt negl in lcall cmp cltd cmp fild push cmc int3 pop push es ss test pop pop lcall inc test or xchg jno jnp and xchg sub jne gs sbb call arpl sbb add fsubs mov in call mov mov cltd arpl push pusha cmpsb ret or test cmpsb das (bad) addr16 sahf push jo jp sub insb addl aad hlt dec dec sahf dec addl cwtl or xor rorb (bad) (bad) pop cld loop push int3 xchg add dec cmp insl aas push dec mov push mov aaa aad mov xchg adc xchg mov cmp mov dec (bad) rcrl and or push imul push push stc dec loop sbb lods stos in mov jp adc push mov andl pop decl inc push xchg das nop testl popf imul jne sbb cmp bound ja sbb nop jbe adc hlt mov sbb cmp inc ljmp aam shrb lret xchg inc pushf sub jge sbbl jp inc add mov notl into ljmp sub mov ss mov jp dec add sbb sbb repnz insl cld (bad) or sbb bound clc inc popl imul pop loope xor fneni(8087 and das shr icebp push ret and cmp or test adc lods je shrl jno fisubl (bad) mov leave add and fsubp push (bad) mov sub fimul fcmove enter int aam push jmp es jae (bad) (bad) notl in jno aaa lea gs movsl outsb cld je jno mov push mov or xor cmp fnsave mov or lret push popa sbb mov add adc dec push jmp es jecxz and aaa mov and mov dec nop clc icebp jne push in stos cwtl jp loope adc xchg das or xchg pop xchg xchg sbb add hlt sbb cmp loopne lahf mov enter idivl cmpsb test cli bound insb lock ja imul sbb jns cmp loopne cmpl sub mov repnz jmp inc push sbb js cltd mov adc mov loop (bad) out inc jb sub xlat add test mov xchg stos fcomp std cmpsb xchg cmpsl lret dec adc sub adc scas js add dec jl scas sub jno xlat cmp dec sbb xchg mov fldenv push xor loopne cltd pusha or adc inc jmp pushf jl push aam repz mov test fs (bad) int bound add mov js push (bad) out popf xor mov push adc out dec sarb add leave repz lea inc jae test (bad) adc sbb sbb movsb mov cmpsl dec mov js adc aam sbb jp add dec scas leave add inc jp mov xor mov sti out repz int3 cmp adc inc mov cwtl and cmpxchg jbe fsubl int3 shll sbb push mov loope inc sub xchg daa xor fcomps mov data16 ret adcb xor dec movsb inc mov inc add xor cmc pop dec mov mov xchg repnz arpl aam cmpsl jae mov jge roll fwait push enter test and sbbl sub xor adcb test jmp add in xor push pop sub jno lock pop push das (bad) cmc mov js inc cli pop jmp repz outsb mov inc xor pop push push push insb add jmp jmp mov (bad) dec jmp mov test imul or popf inc sbb iret xchg mov xorb inc ljmp sbb xor int jp or mov push inc adc shl mov mov sbb rolb scas xchg adc out add icebp aas xlat (bad) push lcall adc cmp lds push loope mov sub jne sbb sbb add and (bad) sar test test lcall pop idiv push pop arpl (bad) pop sti shrb test sub sbb mov mov mov xor push (bad) frstor sahf or push pushf lret arpl sarb mov inc fldcw repnz arpl mov test or mov daa addl stc call jecxz cltd and mov cld popf mov call pop addl cmp hlt fdivrl pop mov hlt pusha adc and test into leave adc dec adc adc xchg mov repnz add xchg (bad) lock les les (bad) xor je std add test dec inc dec and hlt ja in mov popf sbb pusha out dec nop and fildll cmp add xchg pop push stc and rclb into xchg cld xchg sahf (bad) call sbb nop pop lcall and mov jle aas dec mov popl or lods into outsb push hlt (bad) cmc mov mov mov fsubrs adc or pop inc (bad) enter sbb jbe jb les sub pop test xchg sub lahf and iret sti jnp xchg aaa popa dec pop je or (bad) mov jno mov cmp push xchg lcall je xlat lcall jne (bad) and mov mov les call dec test neg mov call xorl hlt into and inc loopne scas xor pop ljmp pop push sbb push inc cld lock lods aaa divb dec rcl or push xchg mov iret insl sbb jae pusha and add mov test push jg es jnp stos jae mov ja mov add rclb icebp bswap cmp pop (bad) jg xchg popf lahf dec mov xchg mov xor fdiv xchg lock xchg scas out lea fldt jb jo mov jae xchg vorps dec dec cmp in rcrl and sub push lds mov or nop pushf outsb daa ljmp jb fistpll pop mov xchg push sbb pop fdivs ficompl mov sub shrl or sahf jg xchg rcl (bad) xchg aaa push cltd jecxz movsl push xchg inc inc nop cmp and cmc inc data16 sub imulb outsl mov pop jno addr16 (bad) inc (bad) arpl sub add lds pop pop mov add es pusha mov sub ret imul psubd push je sbb adc cmpsb push je cmp nop pop adc mov stos inc pop pop push pop mov sub mov adc shlb fistpl fcomip add adc xchg dec (bad) push push pop xorb cmc bound addr16 subl inc dec sbb scas out cwtl loopne popa and movsb dec movsb cmp or cmp pop push or fldenv jne hlt sarl push xor xlat xchg sahf jle inc inc cmp int aas (bad) mov pushf mov daa fwait cmp adc call dec jg fnstenv ds rcll sbb call fwait cmp adc stos push xorb sbb ficoml xchg mov setl rorl rcrb shr (bad) lds or out dec push or cmpsl lds (bad) or cmp or mov adc adc idiv into nop outsl or jecxz fistpll xchg pop je sub mov aas pop push andl scas mov repnz dec in sub inc dec lret xor cmpsb js jno daa mov daa mov fprem1 or mov (bad) insl paddd pop lods xor lds adc push mov (bad) movsl push mov cmp (bad) pop arpl (bad) xor push lds push pop pushf js pop jns fxch xchg (bad) clc inc (bad) and call add push daa adc push pop xor nop out ret inc push addr16 scas push jg dec cmpsb (bad) out push and pop pmuludq insl pop fiaddl sbb repz lret sub mov push mov mov pusha leave sub mov out dec cmpsl cltd test jmp xchg mov dec sbb sub sahf imul sbbl xor movsb aas xchg and addb (bad) fnstcw fs sbb sti pop mov jl mov xor inc ljmp jge iret ret into sar push std add pop add mov dec add popa out adcb in push mov jecxz scas hlt push cmpsb mov jne cmpsb aas mov cltd lcall dec jp xchg mov movsl inc jnp movsb test jle or xor lods shld test (bad) fbld mov stc jb jecxz rorb das or cmp rorl xchg add (bad) in std in rorb fwait div mov notl cwtl cwtl mov lcall sbb pop cmpsl and jno out and xor push xchg mov push jp pop add imul int in jbe dec cs inc jecxz mov push stos dec pusha scas jbe sahf cltd xchg jbe rorb inc daa cmp icebp aam inc dec lods andb testl cs movsb cld jo and xchg pop cwtl adc (bad) scas mov ficompl mov adc out sbb scas repz fldt (bad) rcrb jb xor outsl mov and lds add out push aam add pop cmpb or aam mov jg scas pop test pop adc shr sbb stos dec mov add push out push mov mov scas in ja mov outsb sti lods out hlt cmc cmc lahf or in inc and in pusha lea test pop and in clc add xchg sub insl nop arpl sub jb xor mov adc cmp cmp pushf scas or std push dec pop inc xor mov push push (bad) lods jg sub push add mov push aaa movsl add cmpsb sub push mov pusha insl popa cmp lock leave dec lods (bad) mov xchg or jmp rcrb jae outsb int3 pop inc mov mov (bad) jge mov cmp jae jnp push mov pop ss pop cli scas lahf std mov xchg sti dec xchg in aas sahf mov ljmp jg stos and dec xor pop jbe add or inc add cmp mov or fwait enter xchg pop popf sub mov mov and nop test fiadd push xchg (bad) ljmp negb ljmp pop imul cmp fcoml dec adc fstpl or incb dec pop lcall enter dec adc mov je mov inc (bad) je in rcl out stos (bad) loope stos push sahf lock (bad) sti sarb punpckhwd mov cmpsl nop xchg sarl xlat popf mov xchg ljmp imul popf mov mov insl mov sub push jns incl sbb lds mov aad mov add fs xchg outsb out inc repz lea rcr int3 das jns test es test cmp mov imul jb pushf mov inc fwait push aad dec mov leave sub sub add aad dec lods out sub aam cli lret movsl jno loope popf mov fbld sub inc jb pop scas push rorb cli mov loopne cwtl jl (bad) mov lea stc leave mov decb int3 mov fisub add mov and or stc or pop push sbb lret jo cmp xor das jle loope sbb mov shrl mov mov jno adc rcll cmp push inc mov movsl jmp mov pusha adc incb dec adc and xor cmc mov gs xor lcall and cmc mov or sbb subb jb pushf gs fcoms ret sbb enter mov dec xlat in rcrl inc data16 dec adc mov jbe push mov push sbb cmp (bad) xchg fcoms or mov shll imull idivb das iret (bad) loopne adc loopne (bad) jne pop js pusha aam xchg repz fcompl cmp sbb fldenv das fstps popa push leave rcrb and adc and (bad) iret (bad) mov loope xor push into insl and movsl jns sahf dec outsl arpl sbb jle adc xor cwtl and (bad) sub mov lods fdiv pushf je push mov cmp cld dec outsb shrl pop xor bound outsb (bad) mov test inc mov insb popa popf clc cmpsl and pop inc mov mov outsb xchg test (bad) aaa add outsl jnp lods shl lcall leave sub inc imul loop xchg mov test push mov and pop sahf adc test mov mov jb movb push lret mov adc sub stc mov es fidivr test or mov push pop daa pop jle xor out leave push ret push andl sbb sub movsl je fbstp push out in xchg push or xchg dec jp inc push jne mov lret jg cmpsl (bad) iret mov or add ficomp ss pop or ss mov enter pop sbb pop dec cs std fcmovnb jmp popf aas dec call jns mov push push enter sar pop lods jl inc inc call addr16 out pop sbb xchg ss repnz jecxz xchg std push in sahf or push dec addr16 xor inc cs in adc adc push add outsb cmpsb mov out stos bound push push mov mov addb jae jnp inc inc dec jecxz dec (bad) out lods xlat out in or cld dec insb ljmp mov in add jp sbb aas or rolb xorb loopne negl repz fist popa sub xchg pop pusha inc adc int mov icebp sbb or mov xor jns pop inc jbe or arpl jmp fildl roll jne xor aaa mov or arpl scas or inc jge pop sbb inc mov mov mov mov insl pop out fisubrl pop pop fs mov aaa dec shlb inc fsubl mov adc rclb mov mov add xchg cmp mov xchg xchg call sub negl or sbbb icebp adc daa aaa push ror adc (bad) stc push hlt dec cli add pop add inc inc pop fstpt fimull push clc mov xor out mov adc lods scas mov shl arpl cmp mov inc xor gs (bad) mov cld add leave push int3 test dec pop cli popa pop lret nop icebp jno popa and leave imul jnp mov (bad) int inc fnstsw or pop adc pusha pop fchs inc cmp daa dec inc addl push xchg fsts push pushf xor mov cmp push in xor jb cs jp pusha enter data16 dec fisubr adc dec adc jno ds cmc sbb mov mov jb xor xor lock xchg mov (bad) jle inc cmp pop out jmp or sub jo outsl jns cmc xchg cmc loope xor push jb inc push jecxz movsb out (bad) sub inc outsb aam repnz (bad) mov popf ja pop mov jmp maxps jae cmp ss cmp neg ja,pt or lods lods add out add mov (bad) subb dec dec (bad) not jae inc test push stos inc (bad) (bad) out cmpsb movsl mov jmp push and cltd cmp add mov shr sub push push clc in inc pop shrb cmp lock in jne jecxz push mov jmp clc das jbe mov inc je pusha jmp ss fiaddl popa lods push push in and jo jnp insb scas xchg daa dec out pop shr xchg leave fsubrp sahf push loop andl jp cmc dec mov cmp sbbb adcb imul (bad) mov mov insb popf shrb scas mov in imul and xor hlt jno mov push pop mov push sbb mov xor sbb fimull cmp lret divb aaa es xchg fsubp hlt aaa test je repnz pop pop shrb mov add push data16 outsl decb pop loope int loope jnp pop cltd ds adc jb iret sbb cmc out (bad) dec pop or addr16 or sar call mov cmpl scas xchg idivb lret test add push loope movsb stos pop mov pushf and mov rcrl cmpsb pop in pusha mov adc sbb dec mov lret xchg pop popa inc adc movsb cmp lret es test mov mov cmp mov cmp push adc (bad) aas mov out jae jns lds jo mov push lock mov mov jge mov pop outsb scas call cmp adc xor push fidivl insb dec adcl pop stos pop cmp adc push sub push mov adc lahf cmc dec push (bad) inc cmpsl in jo loopne lea dec mov insl mov cmp sbb cmp push fcoms (bad) in cmpsl (bad) leave lock xchg sbb adc cmp outsl mov or (bad) pop aad mov or lea adc je sub popf xchg sbb enter mov pop mov adcb shrb push fcomps enter jp push insb mov jl loopne sbb pop insl or ja cmp push in aam out inc ret mov jl nop decl divb jae enter int jp sbb pop mov cwtl test jmp mov imul inc or ret jg adc aaa inc popf lret aam das fcmove fisttp enter adc jmp mov into das pushf push mov fildl cltd or mov push xor lret mov jle imul add inc or mov sbb xchg int inc sbb arpl xor mov sbb test bound dec movsl sub out mov push mov and cs lahf jae in divb jmp push push cmp cmp scas mov ljmp xor test mov ret push flds cmp daa mov add call je mov xor repz mov loope ds push into add ss out mov (bad) cwtl int push cwtl lahf sbb mov test imul out enter jmp cltd imul adc stos add fisttpll push mov popa imul jo xchg mov test test mov fwait cmc repnz (bad) (bad) lret adc (bad) ret test xor jg mov jne push mov xchg sbb push cmp and mov loopne and and icebp add aam sar jmp imul mov (bad) (bad) cmp scas mov ss out movl sbb add (bad) cmpsl data16 rorl lds mov int ds cmp mov inc call jb mov xchg inc push inc (bad) (bad) cwtl xchg push and call jae sub push outsb push mov ret inc lcall and (bad) cmp sti cmp ja sbb pusha cwtl or inc jbe or cmp inc mov fs push loope stos dec sarl dec cmc (bad) mov data16 sub xchg mov outsl stos cmpsb rcr mov (bad) pop push aam aad pop sbb and mov nop hlt adc mov (bad) jle pmulhw aaa mov mov xlat add jmp lcall mov jge xchg jle movsb push ja movsl adc xchg sahf jg frstor lods push dec inc jbe (bad) dec lods cmp stc nop jb inc pusha pop mov fcmovb sti enter inc fstpl jo adc dec jnp cs (bad) jp push jb bound dec lods xchg add pop mov mov lock push cld repnz xchg xor dec inc pop xor fs add sbb ret dec dec stos aaa add mov mov test adc pop sub pop aam cs lcall mov push pop cld cmp sahf mov movaps out mov out sub stos mov cwtl loope lahf and adc sub dec scas in mov jle ds loopne mov shll mov push or push dec inc mov cltd cmpsb jle push jle mov push out push fdivrs mov adc fcmovne mov xlat dec push mov lods inc popa (bad) inc popa shr in fucomip imul in lds out sub and jb cmc and xchg fwait imull jmp xlat and mov mov mov xchg ficomp shrb mov out fmuls push dec jo test popa int3 fisub std jnp push jno jbe adc xor mov jns pop xchg sbb lods jle cli dec inc mov bsr sub dec sbb mov outsb cmc lea insb orl adc inc mov aas clc fnsave mov data16 add je das jecxz in add int3 cmp pop dec aaa sbb push add test push popf jns int3 dec int js (bad) (bad) dec inc lods xor flds nop jae xor out cwtl dec dec ficomp inc sahf arpl outsb rcrb cs add sub sbb inc stos dec adc sub mov push adc cmp inc and movsb das mul nop dec outsb adc inc mov mov sbb add inc jle ljmp pop test dec fldl mov add dec addr16 xor xchg sti push cmp loopne sbb dec lock pop sub pop xchg (bad) mov sahf mov and fs ret push loope lea cmp or jo lahf xor xchg idiv jb or cmc nop jmp movl xchg fistpll xchg jle sti sbb push sub and cmp cmpsl ret ret (bad) push push cmc fisubr call xchg sbb and sbb jns jne pop mov ljmp jl adc dec mov out pop mov cs out push iret popa insl out inc sbb mov mov std xor jo (bad) jno push stc in dec push jmp and adc jmp push dec fistl pop inc sub jns lret mov repz mov and loopne (bad) sbb mov mov xchg scas lret and xor pushf scas cmp hlt push negb pop lret cmp imulb jno test sarb ds add jmp frstor or lea xchg cmp jno ret cmpsb aaa iret shrb loopne jo mov rcr (bad) (bad) (bad) fidiv and or insl xor cli push gs jmp pop xchg xchg xor sub mov xor mov dec add out ret cmp pop jecxz pop fsubrs mov fidivl bound jb mov shl aas mov add push sub xchg fnstenv int3 push pop xchg inc jb add xchg sbb pop lcall add int3 jae (bad) inc pop mov push shrb (bad) sub popf cld xchg mov mov and cltd popf push icebp ljmp add sbb pop mov ss push iret call call cmp enter in jbe test jmp mov add jo adc mov insb pushf aas dec inc push push sub or or iret adc imul mov pop cld add clc mov cmpsb hlt push xor out int3 fimull sbb in xchg out (bad) (bad) jns xchg cltd ret pop mov pop pop mov xchg inc jbe inc add push xchg pop xchg gs xchg loopw push imul and cmc testb (bad) xor lods xor push das mov lods cmpsl or and mov aas push add mov mov imul stc adc ret cmp addl pop rorl fsubrl jne imull int3 clc pop dec mov dec push gs push push repz xor inc dec inc push fstpl int push xor dec cmp and fldl out push xor out mov dec mov fdivrs pop dec pop fnstenv cmp jl faddl push push outsl das adcl aad idivb sahf test aas jae outsl les and cld push (bad) jb xchg jnp push sbb lahf push pop sbb jle clc aas inc xchg divl outsl rcrl mov push pop or imul dec add mov inc adc push in in mov gs cmp mov mov xor push jp aaa subb popa add enter mov mov sub sbb and xlat dec popf xor inc push das jmp shl xor pop sub popf pop fmull dec and sbb sbb lock mov push inc xchg or std pop fmuls les into rorl and pop les (bad) mov cmpsb test lds mov repnz inc clc cmp xor sub mov in add mov (bad) pop fisubrl pop sahf scas cli in js hlt loope xchg push (bad) imul sbb sub repz (bad) (bad) sti push mov jmp loope mov sub mov clc mov push decl insb xchg (bad) fist cli adc or pop aas sbb in push sbb xlat outsl aas (bad) cmp fidivr addr16 mov mov cmpsl sahf in add stos (bad) mov stos stos mov clc jns jo push mov sbb daa clc js push into arpl mov mov xor iret add cmp add pop inc xor stc je xor xchg mov add jo dec enter add fistpll lock xchg dec add push fnstsw shrl negl inc (bad) lret emms das or icebp add ror cltd lret mov jg les xchg and (bad) mov xchg pop or jmp addr16 pop rcrl lcall frstor xchg or in mov rcrl dec jne arpl pop imul aaa insl (bad) incl mov enter ja xor pop bswap xchg loop mov sub test dec sbb push bound pop mov (bad) mov cwtl mov cmp stc jno inc jmp es xor mov mov test fiaddl into jo fnsave scas out adc lods push into add aam jmp xor insb out inc icebp add push in and pop or cmp push xor mov sub xlat xchg jecxz out mov xchg mov inc iret (bad) sbb cmpsl fisttpl or cld push dec inc stos push mov xchg dec out mov dec sub lret xchg lahf sahf subb addr16 xchg xchg mov lods out in rclb sub or inc ljmp fsts mov lret pusha adc repz int out inc cltd pop mov orb inc iret ret sbb push mov scas outsl dec dec aas mov in outsb cmp mov rcll bound adc aas pop mov cmpl je sarb int inc xor cmp sbb xchg test in ss repnz insb mov fstps (bad) pop jmp and das fiaddl cmp xor inc arpl add test and (bad) pop pop jae mov mov push fisubrl inc mov data16 push and xlat push repz outsl push out xor icebp sub lea mov cwtl cwtl add mov or lods cmpsl sbb jo dec ja mov shr scas (bad) mov jl test dec loopne pop test and lret inc mov jmp ljmp pop mov outsl mov loop lret scas push (bad) (bad) imul mov jnp (bad) hlt clc xor pop dec sarb add lahf sarl lods dec cs ja mov sub jecxz sub sahf andl inc add mov xchg or sub gs movq jns mov lret ret sarb fldcw imul or inc rol ds cmc jecxz pop insb xor movsl push jns fst adc cmp ficoml cmpsl aaa outsb or or adc rolb xchg xchg dec repz icebp mov test out arpl stos sahf cli pop inc xor loop push jb xchg call mov push (bad) cmc xchg hlt loop push xchg mov xor or rclb add out movb stos mov insl aad jb dec or xchg ret inc in push stos pop mov mov jns cltd push ss cmpsb dec xorl (bad) aas in inc xor test rclb pushf je jmp das mov imul add les xor fwait call push inc cmp mov sti es or enter and leave test mov movsl sub inc dec mov movsl fcoms movsb mov or mov and add mov cmpsb pop and xor mov mov iret or adc mov push cmp mov cwtl loope mov das ret imul push mov dec out or aas pushf (bad) fdivs loop test xchg sahf sbb adc stos (bad) jecxz xor sbb test adc and gs je jno nop sbb insl xor cld int3 fwait aas inc mov in ffreep aam mov inc push arpl lret add mov add xchg aas pop push in inc sbb jae ja repnz mov xchg sbb loopne add vpaddsb ss and pop in sahf or cmp lcall mov orb mov pop jl scas das (bad) cli popf mov xchg in int3 lcall xor mov das mov pushf dec mov mov sbb movsl mov (bad) cmp pop sub mov loope test notb cmp dec mov cmp loope rol pop clc into inc fs scas jl mov add aam adc dec jnp (bad) (bad) jbe push sub (bad) clc les xchg out in loop adc xchg sub frstor in xor sub sub xor cli mov test mov mov adc out in mov mov adc xchg lahf xor je pop pushf aad or and fnop inc (bad) xchg aas pop icebp lcallw faddl test test pop aaa gs js mov sub xchg cltd (bad) imull xchg add xchg ljmp cmp sahf pop test cmp jno stos sbb sub cli loopne loope jne xor andl and (bad) in outsl je sub jnp negb ljmp push adc mov mov mov into cld sbb pop out xchg out stos sbb inc jle or adcl xchg jp push mov rcrl cmpps pusha jbe dec xor mov arpl mov cmp cmpsl ret adc add inc notb mov adc in xchg xchg (bad) test lret lret xor out mov inc xor jne mov cmp and std xor sub xchg push ror pop mov dec add push hlt pop bound movsb jns and rcrb mov lret imul push mov sbb mov jmp insl mov (bad) fnop jecxz mov push jae xor (bad) push incl (bad) out popf enter add lods mov out ret and inc inc dec sub test xchg and ljmp ja jns cmc fildl outsl pop inc sbb push daa aad in xor push push dec insb adc mov popf lds scas mov icebp jno lret lcall dec mov or (bad) push mov shll std xor insl cmp jo sbb xor sbb inc das or fsubrl and inc incb loop,pn add out or cmp jmp push std cli push push or xchg push cmp push rcrl inc mov mov fisubrl or aad xchg pop in mov or fldcw xchg dec adc dec sbb lret xchg hlt dec cmp lcall jle mov push loop push mov adc pop sti xor xchg xchg sub add stc mov mov pop push jge mov mov fild addr16 mov mov mov adc add and mov adc divb add enter adc fisubr push dec lcall ret cwtl ret adc test xor lock mov cmc js xor or pop jnp cwtl dec xor in (bad) xchg pop js mov mov lods pop cmpsl test pop push jb mov loope sub mov mov popf mov dec xor inc (bad) mov push mov dec cwtl or cmpl out adc jns mov mov aas cltd add pushf add xchg mov xchg push jne (bad) push clc mov lahf sbb sub inc add xchg dec jp xchg mov jg mov ljmp mov adc popf mov and lock loop sbb popf fs xlat out xchg jmp jmp in add rclb push sbb mov popa or daa xor mov scas or test sbb fmull adc push pusha xor add jge bound adc pop out xchg jne (bad) jecxz fmulp scas xchg vcvttps2dq imul jmp rorl repz aaa inc pop sub scas pop or or inc cltd aas cltd push insl movsl inc add mov push sub pop xchg jbe mov inc mov adc or adcl ret add lret repz jae mov sbb sbb dec add (bad) mov cltd aad pop cmc adcl ret daa test icebp cs stc xchg xchg sti ljmp pop aam rol movsb mov mov fcoms jne mov jae cmp outsl mov arpl icebp pop jo jmp xchg jbe and cld xchg mov in lods imul mov jnp xor sub stc add inc or repz scas jne (bad) mov sub outsl ret inc mov (bad) sbb adc pop (bad) cwtl in insb daa nop xchg push and arpl stos mov in cwtl cmp and add adc bnd loopne pop jnp push add push aaa repz cmpsl and lahf jle out jl ss xchg fs fsubrl jb pop mov and inc not (bad) fmuls xor sbb push mov xchg stos bound push xchg adc aaa sub (bad) xor out push mov mov mov xor jns fs fwait (bad) ret loop sub das sbb addl mov stos inc cwtl and cmp pop push inc out leave into mov gs clc out add inc adc scas jp pusha cltd ret scas lods lret lret dec adc push in loope test pusha mov pop cmp mov mov ss xchg fucomi (bad) xor cmp cmp mul cs or inc (bad) out addr16 jmp dec pop mov xlat fisttpl out push sarl fsubrs pop and leave mov or (bad) jbe mov mov int arpl rolb jecxz in or hlt xchg sbb add cmp sbb jnp lret jp jg pop push mov pop (bad) xor lds out jge push lds sub dec jp (bad) fsubrs mov and sbb dec stos shrb xorl insb in jle mov mov xchg fnsave ds and lret push into fildl cmc addl dec jecxz xchg or sysexit ds xlat pop fdivl call pop cs idivl out out jle inc add sbb pop cs pop inc add xor int and mov jb sub ss sbb andl adc lcall sub or in lock sbb ljmp (bad) negl sbb imul test cltd (bad) movsb push pop jns inc pop test jns dec mov xchg shlb (bad) fnop push into sbb fisubl ficompl in popa out aam lahf dec cs xchg movsl ds aad (bad) stos add out shr xchg dec es int3 lahf push shl out addl ret inc sub (bad) jmp inc adc mov sub inc mov adc xlat lret dec icebp jns aaa lahf sub push shrl sahf popf or jo lret idivb cmp ljmp decl and xor enter xchg xor leave adc adc gs xchg push (bad) xor sub add pop inc jne mov (bad) jb mov (bad) leave mov pop cmp jle mov addl mov sub ret and stos popa inc pop fxch pop xchg lahf ljmp stc push test xchg jmp sub and inc ljmp ja fisub mov sarb shl pop cmp fdivrl addb lret jb aas cmp push enter rorl aas (bad) mov cmp out sub xchg xchg inc lods mov test fnsave int outsl jbe add push xchg xchg lahf mov lret iret and xchg inc std push jg fiaddl xchg es push xchg (bad) mov rcll in xor lcall sbb addb mov push (bad) mov gs dec mov pop jns mov add mov iret mov ffree (bad) fdivl sub and out cwtl add dec jbe dec jecxz imul outsb sti jge add jns jae or lret xor push cli rorb mov cmp push jp jno aas and movsb pop xor out es xor roll inc and pop push jae mov pop hlt les xor ds shll ret add test inc loopne xchg xchg inc inc negb lss and mov xor push (bad) lock daa pop (bad) out out (bad) lea call call lahf sar adc xchg mov add sbb imul fisttpl imul pushf xchg incb mov aad push cmp aas (bad) testb lods jmp imul xchg xor jnp xchg push cmp xor pop mov push sbb stc mov xchg sbbl inc sarb cmc sub in stos popa cli incl jo xchg les ss into js pop inc testl mov jecxz (bad) mov push mov mov orb rcl xor xchg push or ja mov in jno pop and test xlat int mov or xor shrb jo (bad) cmp xlat or push mov xchg mov pop shlb adc lock bound fstp jle mov aas mov jmp pop push pop rorl out out add cli xor jmp imul mov pop xlat daa inc stos pop repnz scas dec push (bad) xlat cwtl inc sbb lea adc cmp mov in dec inc mov jp lahf rcll dec int dec (bad) mov mov cltd sub jmp int3 mov and in sub daa ror fisub add push xor jns adc call mov add cmpsl rclb and jae cmp and enter xchg sbb (bad) daa add je pop fistp in nop mov imul cmp jg pop dec lods fs xchg or pop push fsubs cmpl push mov sbb aam mov or frstor xor dec (bad) adc lret push js loop mov mov lods push stos test clc hlt xchg leave leave sub pop xchg jle push cltd data16 or ret mov sub pusha fsubs xchg push jo in stos jb pop orl lret fbld out and lods aaa jle nop and cmp mov inc add (bad) push push and insb (bad) ljmp jo popa push adc cld mov pop outsb andl fist and cmc movsl jle popa or mov xchg push cmp fisttpl imul or sbb cmpsb hlt cld mov data16 imul popa rolb cld sub inc pusha jle jns pop pop cmpsb mov pop jecxz scas push lcall dec pop pop xor and (bad) dec push mov loopne pusha push decb (bad) in cmpsb mov mov mov add movsb ss mov aam insl add rorb mov enter std icebp xor (bad) (bad) movsl addr16 xchg sbb add pop push dec pushf inc out inc pop pushf andl in sub scas mov cmp xlat or sti adc dec pop insb arpl mov xchg push arpl xor mov mov xchg push and in js mov sub mov (bad) jbe (bad) popf jbe and pop fstps lea jne aas sti sub stc jo pop cs icebp fistl fsubr sbb fimull (bad) mov (bad) dec xchg in add push mov xor mov ret inc xchg negl sub cld setnp pop xor add es in pop cmp push xorb leave dec rcll jnp add rcll mov push push stc leave lock in dec xchg js adc jge adc cld clc or movsb xchg shr jnp aam push iret sub cmp data16 hlt shld cmpsb add cmpsl xchg add sub in cmp ds daa mov repnz sub xchg gs roll or dec call mov cwtl outsl mov decb jbe jae cli sub mov in jl pop sbb sub dec iret sti ret push jo flds enter and adc test insl pop fmull lock sbb leave out or jcxz inc dec (bad) lock (bad) xor scas call int xor js repz mov (bad) lret and loop loop jne and pusha inc loop jmp outsb scas lods mov (bad) xor dec lea out cltd inc cmpsb add outsb sahf in and stos testl sbb dec inc jecxz jae icebp sub jl int mov pushf dec pop or jecxz mov cmp cmpsb out inc popf adc mov xchg lock (bad) cmp sbb mov mov sub bound jnp adc mov jbe xchg out pop jbe imul xchg mov pop in mov xchg outsb in push xchg pop mull mov stc (bad) mov pusha mov add cmpb mov dec int add in lods notb adc sub lret jmp push pop leave loope and or les sbb and mov lods sarb data16 and popa cmc stc lods popa test test ja or jno stos fucomip jno ret dec push ljmp dec pop ds hlt in cltd or push icebp (bad) int mov mov (bad) scas (bad) ss jno cltd sub imul xor sub sub test mov add sub pop mov mov xchg imull and cmp test std push test outsb add jns xchg push test scas sub scas out test adc adc xchg fisubr mov sub aas and xor in stos les jecxz aaa jle pop stc xlat mov jl out loop loope js das (bad) add loope dec (bad) insl xor push push push add pop add mov mov repnz inc outsl mov addr16 sarl (bad) stc cmp (bad) fildl cmp test sub stos (bad) lret cmc cmp dec cmp int add lods aam loopne loope fiaddl xchg mov insb loop aas out pop fadds cmp jecxz pop add cltd jne cmp aas jmp cmp inc js lods sbb push ja push cmp les (bad) mov dec push insb pushf jle ljmp (bad) je jl mov add push add enter scas movsb bound mov push mull std std sahf jae inc popf jg push ficoml xchg daa popa mov cltd imul loopne sbb push mov mov je mov es sbb in push cmp outsl jno (bad) jo hlt cmp mov pop ret mov sbb xchg xchg sub ljmp pop fidivl imul inc pop in (bad) aas je addr16 test add lret jp adc (bad) adc xchg loop out jb js cmp cmpsb push sbb xchg mov or std (bad) fcoml sbb vmaxps call and jmp loope bound fisubl ss (bad) jae enter fdivrs xchg sbb fwait cltd mov sarl (bad) lret or fmul bnd adc xor orl nop arpl mov jp pushf inc dec std mov mov mov jge addr16 mov mov hlt out aam imul xchg in xchg push loope mov mov sub popl sti adc mulb loope addr16 add jp iret xchg sahf lahf pop xchg sub cmpsb sbb pop jge add pusha or inc jg sbb pop pop sub cmp jl adc lods inc leave cwtl add cs and fimul xor push dec iret jbe loop ds (bad) std sarl mov xchg ret dec xchg mov in add out and rcrb out cmpb jl mov cld mov xchg ss dec cmp lods (bad) testb and fcmovnu dec sbb add scas add push pop dec jae jbe js push outsb sbb push cmp xchg cmpsl ret push jg clc adc xor ret hlt mov daa jecxz fstpt mov leave cmpsb cli pushf mov push test cs sbb and lret mov mov sbb sub adc push stc (bad) push pop or fdiv jmp sub (bad) in enter push ret enter pop call pop je (bad) clc outsl in xorb push cs cmp jbe mov lods pop jmp mov inc insl test movsl test in scas pusha cli lret dec jge test clc int3 mov mov pop push insb pushf cmpsl and imul mov rcrl popf jge test cmp jno lods push push dec jecxz iret mov sbbb add fcompl data16 lahf mov jb fs pop sbb mov dec mov btr cmpb xchg mov ficoml inc xchg dec sbb xchg jbe xchg (bad) and add ficoml stos add addb mov sub mov js jo xor (bad) jl sbb and imul outsb dec loop jl (bad) mov lods ja mov inc cmp pop daa aas jp pop jle movups xchg test fsubrs pop out lcall fnstcw push loope (bad) int3 mov cmp (bad) out jno aas jnp and mov adc xor gs mov daa cmp gs xchg pop pusha sub aaa or mov inc sbb adc popf mov lods and xor pusha test add adc and mov repnz lea cmc test insl ret out sub or (bad) pop push pop cmp sub pop aaa sar aam cwtl sub add in push out dec je cmovno mov cmpsl mov or sub inc movsl cld test lahf pop push fcoms cli (bad) mov inc pusha fnop xchg add lret (bad) pop cmp arpl mov insl sarb add cmp lods test leave pop add imul jb xor (bad) (bad) mov ss aad loop test out idiv popa adc cmp test fdivl stos into fstpt les push mov xor lahf fcomp call js cld insb shrl movsb insb orb roll push mov in (bad) or add adc sub mov ret xlat sbb leave mov cli pusha push mov push imul fmul das xchg sub mov push sub adc pop and jp xor lret or in mov in add xlat out inc add stos insb shll mov dec inc frstor lea (bad) ljmp sub in das hlt jp jmp call xchg das ljmp subb lret mov xchg je xchg jbe jmp (bad) imul (bad) out or jl fwait mov stos cmc das jp sub aas push jle cmp shrb shrl ljmp jle das movsb mov pop inc imul ljmp jbe cmp (bad) aas mov dec jo pop hlt lret and out sub outsl mov repnz add mov fistp sbb mov push mov rcl scas adc ss mov mov ss xchg lret scas or out rclb movsl cwtl or sub rcrb dec mov cmp adc pushf repnz dec mov xchg je mov jle cmp pop xchg into cmpsb lods pop dec pusha inc push arpl mov sbb test (bad) cmpsl jl push sub pop and dec inc mov pop mov addl mov js fisttpl jge pop roll pop push ret cmp mov or or lods mov mov aad sub shrl scas cwtl add sbb data16 xchg ret rclb ret shll jno cli cmpsb aas pop sub ljmp rcrl sbb dec fdiv (bad) out imul inc push lcall mov les pop jo add negl stos jmp jl xor (bad) leave add cmp mov lods lea mov jmp cmc sbb daa push jp movsb (bad) fmuls cs mov (bad) xor addl sub pusha xchg sbb jecxz imul jae mov btr daa add xchg sub dec mov int iret sub jmp inc pushf lods test (bad) lret leave add jecxz rolb xchg pop jbe add mov outsb inc dec mov add jb sti cmpsl fisubl arpl or jmp (bad) xchg sbb xchg lret in in cmp dec je adc cmpsl mov daa mov cld and xchg pop cmp mov shll or lea aam adc sub xchg push cmp and mov sbb in mov into fsubrs ror mov xchg or popa das xchg push aad (bad) and adcl sahf hlt sahf nop sub adc cmpsb mov in mov insb and xchg mov ljmp test clc in xor jmp cwtl or ret mov mov into push ja popa dec pop cltd and pop inc add or pop js add xchg ljmp enter je imul add jg or (bad) mov sbb push sbb packuswb cmp or xchg lds jae ss xchg push push inc xchg push (bad) stc adc loop push inc orl loop pop xor jg inc mov hlt xor push js xchg cwtl shlb adc aaa scas repz dec mov dec clc scas or xor out (bad) hlt mov ret and test stos call out push adc or cmovp mov push sub mov out leave clc push in push fldenv inc clc xchg mov ljmp stc fldl inc enter inc xchg iret or ret loop xchg dec and lds xchg adc xchg dec mov rcl sbb pop and ja imul fwait push or hlt int add sub int pop ror stc mov notl jno ljmp cmp ret es xor cmp jecxz ss mov dec push mov movsb fstps fild sbb or dec push pop or rorl sub out sub mov negb rcr (bad) test sar cmp push push or lea cltd lahf ljmp cmc imul jb push xlat cmp ret inc cmp lret cmp je push sbb mov lcall xchg mov hlt sbb cmp rol sub popf inc nopl bound mov and in xchg lods fs add pusha xchg xchg std (bad) hlt mov in sti sub lds in gs push cmp sub fs push adc add cmp jmp adc xchg fcmovb mov jl test dec pop (bad) pop and outsl add push lods jmp es mov dec xor ret iret arpl aas cmp inc inc push dec add cmp fstps jb and cmp add jle or jecxz addr16 cmp pop out and pop sub and inc inc sbb test jno mov fldcw xor jno add out mov rcrb aas adc insl lock pushf xorl pop mov mov pushf add mov and add jno dec inc mov divl jecxz in leave push (bad) mov jmp loop and aad inc aaa iret inc pop inc subb out test test push mov ja repnz or sahf cli decl loope int movsl ss dec sbb fldl inc cwtl mov xchg mov aam or push mov test sahf jno mov mov jns push push es jbe (bad) std inc mov sbb in mov shrl pop mov (bad) fisubl fs cmp lahf outsl cmp sub add movsb sub mov xor in fidivrl cmpsl mov lcall adc push pop mov xor cld shll (bad) repz ficoml (bad) lods lea out and adc ja movsl iret sub je jb xchg test mov dec sub mov sbb clc (bad) mov push (bad) in push inc xor inc out mov clc imul test add cmp dec cmp lret lahf push outsb and dec dec jne (bad) pop cmc or popa jecxz jg xorl xlat pop push xchg andb pop push jle loope into fsubr inc div std lods cltd bound xchg xchg xlat mov lcall push sbb cmp (bad) dec hlt jle pop jp sbb xor test xor mov jns mov jl mov ret repz sti idivl std jp push hlt in mov imul lock lcall cmp jl cwtl xor xchg mov in test enter cld xchg jmp bound inc inc mov sub pop pop xchg daa fwait cwtl and push ds cmp xchg (bad) test imul and lahf orb mov ss (bad) mov pop testl pop inc mov push or jge lahf mov cwtl xor mov test cmpsl jp (bad) adc cmpsb inc mov sbb dec lahf pop pop or mov idivl imul js cmpsl xor mov jae adc out jl push scas jp add sub sbb and int3 jge das mov popf fbld mov arpl popl fs pop aaa movsl sub paddusw and push adc xchg xchg fdivp push out addr16 (bad) cli adc or insb mov mov jl xchg lahf fs fistpll hlt add lret cmp adc adc xchg cli inc das ljmp popa stc gs lcall ffreep iret xchg pop mov dec or push xor dec sub (bad) and mov jge aad rclb xchg xchg das test xchg stos add jnp sbb dec addr16 cmpsb push sbb fistp loop jb inc roll (bad) test push jbe lods leave pop sbb inc (bad) cmpsb leave pop pop popa cmp addr16 xor rclb andl jae or xchg (bad) dec cmpl fstpl jl divb faddp test pop jle push pop mov xor pop enter jle mov add ds push cmp ljmp dec xchg daa cmpsl in mov fild int3 lea pop jbe push or pop test stos cmp or hlt xchg lods xchg xor and sbb inc mov aas adc aam pop pop movsl sub mov fild mov mov stos mov pop ret xchg sub mov aas test (bad) mov scas mov bound cmp int jmp mov mov stc adc jnp or jnp push test xor test fdivl arpl dec push out dec dec add adc fdivr aaa xchg outsl sbb adc int mov scas fistpl xchg inc add or pop repnz pop jae sbb cs mov jge in jle lds pop loope add mov or test sbb push adc loopne jne pop sbb imul scas aam pop jno and pop rorl xchg mov pop mov adc test (bad) (bad) jno add clc outsl xor stos imul or pop jne nop mov mov jle and sti cmp inc repz clc mul iret int3 out lods push (bad) pop int3 mov lock lock sbb loopne add push movsl add jb push sub hlt xor dec stos or xor inc push jle adc push out or call pop mov testl push lret inc ficoml xchg lock mov pop or adc shll into popf sbb mov dec andb xchg nop push cmp lret mov fstpt xor aaa dec scas out dec inc test mov loop in stos pop aas mov dec inc push and xchg out imul sti pusha or cmc jae sbb sbb and xchg dec inc dec sbb test mov cmp and inc out adc add pop mov roll mov mov xchg out add inc hlt dec inc push ss sub aad call test pusha rcrb mov cmpsb lods in adc sbb pop leave or lds mov sub jmp jp jmp aas (bad) aaa (bad) xchg pop mov dec jmp xchg pop es inc fstpl stos lret loopne into fs jg (bad) mov push loop jg xchg fimul sbb mov mov xchg lock mov imul mov sbb mov mov xor xlat push mov pop idivb cmp (bad) jmp in adc mov hlt sbb mull popf xor nop mov inc inc push cmpsl aad inc das lret mov jmp inc cwtl and xor clc and add addr16 aaa out pop mov push (bad) notb into sbbl lds test fistpl test inc push es dec lods push inc inc in mov push insl ljmp nop inc cmp jg jnp imul push xlat imul mov and push dec xchg mov imull icebp push sub je pushf dec sbb lret icebp iret sbb aas add jp (bad) pop dec (bad) push fwait ljmp leave inc arpl pop loopne cmp out lcall pop jbe call dec pushf andb sub in cmpsb sbb mov das cmc ss cmp fstl bsf pop mov jno and dec mov mov lret jbe outsb jge in fstpl xchg push mov sub xchg fistp lret mov cmpsb rcll xor shl or sahf (bad) and push and mov push inc sub jecxz or out adc xchg in ljmp test in sub hlt in in xor lods jns cli loopne xrelease mov adc sbb sti xlat push ret pop popf pop scas sub push ss adc addr16 cmpb sbb movsb or lret sti adc and mov pop lahf shlb fild add adc adc dec popa loopne mov mov adc jle jg mov (bad) dec imul mov scas and or sbb jmp lret dec xchg jns mov pop leave in cli iret mov sbb sub add enter inc sub clc xchg xchg out push clc fimull int3 loope jnp (bad) cmp cmp sub test sti jge scas sub sbb int mov sti lret jae aam js inc pushf sbb nop and xchg sbb int3 rorl lcall adc cmpsb add int3 lods pop xchg hlt pushf inc inc test inc mov pop repz xchg into sub inc mov xchg mov and in mov sbb pushf mov repz je xor xor or inc lods dec push xchg xchg push mov xor mov inc jnp dec adc or pop add xlat movsl scas and test sub add (bad) mov shl add adc rorb pushf shll xchg gs arpl pop or add mov sahf xchg (bad) arpl xor popa (bad) mov pusha push sub inc dec dec xor (bad) or pop jo xchg jb push sub sbb out push sbb xchg (bad) xor pop sub adc and fnstsw jp rorb mov fmuls or add mov dec (bad) xor jle aad stc push xchg mov repz out sub inc xor mov imul mov enter arpl mov scas add xchg fcomps jb dec push cmp in lods das adc mov lcall cmp inc cmpsl les fwait rcrl xchg inc sub xchg pop js (bad) jg jbe stos jne outsl mov push scas (bad) push push mov dec sub lret mov inc loopne xor cmp jl mov popa shl mov ss and push out mov (bad) fmulp inc pop jle sub fs sub sbb jg orl aad jnp pop mov out movsb lret mov (bad) and dec bound cmp inc out ds (bad) popa and mov mov bound bound jl mov mov (bad) xor mov cli sbb inc sbb jge xchg sub mov inc jo sub outsl sti das mov and ljmp pop dec adc sub mov dec dec test nop mov data16 mulb xchg in mov xchg cwtl sub pop push rolb pop push pusha iret cltd roll xchg ja fs (bad) mull int3 pop push add imul push sbb jo into cld outsl mov imul add stos out ffreep xchg push or push mov lret mov arpl dec aam mov cmpsl sbb gs jno fprem daa or jbe,pt stc inc cmpsb adc inc dec lock (bad) and mov out fildl sub pop cltd push movsb pop daa jno mov dec das xchg pop dec push es ret sbb popf mov sbbl stos dec in in mov add sbb shrb or fsubrs sub hlt xchg xchg neg repz push xchg push mov xchg cmp xchg loop add push lret icebp or cmp cmpsl aas shll lcall sub lea fwait ss add inc add insl sbb mov push push jno iret mov std (bad) fstpl int push (bad) mov pushf mulb jae aad and lahf adc stos mov fsubrl sbb aaa cmp (bad) outsb push rorl and cmp scas push repnz sub out loop shr fwait es movsb lret test in aas add scas das lea sub fs inc mov adc jbe ficomp pop adc adc out popf inc and sbb pushf scas imul jle inc jbe aaa ljmp clc push jmp (bad) insb jge pop stc into pop jge pop xor pop xor dec clc imul mov xor xchg jle,pn xchg pop mov sub mov push cmpsb fsubr and jge hlt sarb lea xor xor push (bad) fistpll pushf push jmp cmc and cmpsl hlt pop stc mov es inc lret imul pop (bad) jl push adc jl out rcrb into push leave outsb dec jecxz sarl or int3 jle fdivrs sub scas lret call sbb dec push sub pop loopne in xor inc std and mov pop leave push mov mov std (bad) int fsubrl and in dec mov mov scas in adc inc imul rorl stos in mov mov adc sub push mov ret movsl lods out into aaa cwtl cmp push out xlat das ret daa (bad) cmp dec jbe cmpsl mov scas jge jno into pop insb push pop and stc dec mov mov jmp pop imul ret repz dec push add xchg bound sbb fadds ret (bad) push and xlat xchg or lret fcompl in add mov mov jmp sbb adc test (bad) aaa addl add or pop sarb (bad) cmp xchg lret cmpl aaa int3 inc imul mov cmpsl js aam stos inc leave push xor fldl shrl movsb roll gs test dec push mov scas jp xlat jnp push mov add mov sbb jl,pn pop outsb push cwtl jecxz pop movsb jbe sbb (bad) or xchg adc and int3 pause repz cld dec mov out and fcmovnb outsl inc lahf repnz js lcall jae fwait pop (bad) mov insl shrl fstpl xor es mov or test push sahf out jl mov adc pop jle jecxz sbb sti dec pop xchg repnz mov pop lret xlat dec adc mov add cmp xchg mov loopne lret mov push sub sub repz push adc cmp mull sub lret cltd pop xchg loop push and sub imul jl xor mov dec dec lcall adc jg or xor test inc mov mov scas and ja and imul adc jl xor mov xchg fwait inc push les neg movsl (bad) (bad) and (bad) out sub mov mov or mov outsl mov pop stos push mov or or in lods movsb inc movsl pop add mov jecxz in aas mov xor imul adc jbe dec adc dec inc push ror inc push test jle pop out adc rol dec sbb mov daa add ljmp ret into imul cs bound push jns pop bound xor adc and xchg scas sarl cmp pop lahf sbb repz (bad) out call rcl (bad) sysret mov (bad) cmp es sbb xor int3 loope jmp les cmc dec push lods fadds jge lret test pop sub test mov jns pop add (bad) orl mov je xchg ljmp dec in mov xchg lods (bad) lret push dec rcrb and mov cmc pop push pop mov jle in shrl dec jle fdiv flds jmp pushf jo add mov and or add mov xor fsubr push adc std xlat jb movsl out mov (bad) hlt arpl sub aam sbb sbb test xchg mov addr16 es xchg xchg pusha mov inc ret shlb inc xor push insb or adcl xchg xor adc outsb xor add adc (bad) mov add lods enter or shll push les fiadd notl cmp or int3 or stos test pop (bad) or xor xchg fldlg2 into and add dec pop test ss sbb loopne scas adcl pusha xchg dec add cmp mov mov inc inc add push sub and dec add fsts dec mov xchg jp mov sbb mov fcmovnb add adc shrb fcoml mov xor push lea jns jecxz pop orb ret jbe pushl popa sar add loopne mov aas lss ret (bad) loop loopne movsb loopne jns,pt sub lods xor mov daa adc outsl jae add and adc gs aaa outsb hlt (bad) or insl mov loopne xor fsubrs xchg xchg add adc add push xlat cmc mov xorl les rep xchg jle stos fisttpll jbe sub pop pusha inc add sub jp jbe out or jbe xchg push cmp (bad) or (bad) mov mov movsl mov add das cmovns inc (bad) call jge popa outsb dec jb mov ror fidivl lcall mov mov popa icebp icebp mulb pop mov imulb arpl jno push cmp or mov or in adc push push sarl pop mov sbb fwait mov xor push pop mov add xchg ja imul fwait aad pop mov (bad) aad int3 cmpl and mull loope sub fiadd and call (bad) repz cmp clc js inc js hlt mov inc fnop push fadds repnz outsl test lea mov sub mov notb xchg aad aad adc lret fsts pushf out mov scas fcompl lret imul xchg mov je out mov into lock pop mov jl jns aaa sbb sub sbb jg into test cmc xchg lsl cmc stc mov and inc cmp mov (bad) dec pop mov dec outsb (bad) out addl ds mov push xchg sub ds test jp faddl fwait shl sbb add push mov test jbe pusha mov loope aas jp fisubr daa dec inc jl adc insl mov loope push pusha popa push or std scas das test (bad) jnp jno mov scas or or mov mov adc sahf imul sub adc add mov and cmc dec sub xchg in jmp call out push dec mov sbbl enter out push fstl or add js movsl sub jnp nop (bad) lock sbbb js xor aaa push jno xchg loope adc cmp and repnz fsts scas (bad) repnz jno movsl pop ja iret jmp aam (bad) or adc adc pop sub clc and rcrb bnd lods sub pop inc pop cmp push popf lods lret mov or mov mov and lret ss das loop pop jmp out movsb mov inc add fcmovnb inc les jnp push xor daa test ret outsl pop ss push pop jle mov cmp lea xor pop fsubs add (bad) hlt cltd and cmp dec inc xor jnp push adc rcrb nop sub xor or or jmp subl cmp xor (bad) in lret mov adc lds es jno sarb arpl mov mov dec mov (bad) (bad) repz jo mov (bad) mov add insl int (bad) repnz enter dec (bad) outsb outsl cmp mov lret xor or or cmp ja test fwait je enter mov push add jnp jb (bad) and lret xor mov decl test push inc mov dec lcall mov pop mov inc xor dec push sub xor sub imul dec push lret cmovge in aad pusha int3 sti out es scas daa mov mov mov leave std pop in divb icebp push xchg mov stc jge aaa rclb lcall stos (bad) or int3 xchg xchg mov ficomp inc lret dec cmp jecxz add test fmul and inc inc int3 shl mov push repnz fldt divl jle jns outsl scas pop sub push out lret call push es enter lcall sbb frstor rcl xlat and mov pop imul fnstenv stos inc inc jmp xor mov xchg sar loopne pop lret sub mov or dec mov xor sub mov pop cmp dec mov scas or push idivb int3 insb or mov (bad) push scas (bad) fisubr push iret adc cmc aaa cld rcr hlt fld dec pop loop scas roll inc fistpl out stc imul aad lcall dec jne js jmp fsubrp mov mov add mov (bad) pop or xchg mov cmp nopl mov jg pop outsl lea sub aaa push push insb std pusha out mov or lock jbe xchg outsb dec fcompl rcr imul inc pop mov mov cmpl add jl test pop sarb jne imull enter cmp ljmp jl pop mov xor enter xor sahf imul imul cmpsb push ss cmp ret xchg mov ljmp sub pop or jo mov push popa push jl fwait es lret lea add pop fldt test scas cld pop push popa push adc cmp fimull dec or scas or aaa in mov js cmp movsl sbb jle (bad) sahf sub jns fsubrp in repnz addr16 insl pop cmpsl or cmpsl call fcompp xchg pushl xor out fistpll pop stc mov jnp (bad) sbb push dec shlb add subb flds stos dec push jg je ss ljmp mov iret cltd insb push inc shl and loop lock sub jg xor dec fwait xchg push jno fptan insb aad lock sbb pop imul leave sbb sbb sub sub adc sbb nop imul jnp xor mov mov stc ja sub mov and or xchg inc or fdivrs in in or sub dec push cwtl cwtl adc sbb cs inc pop fisttpl cltd not lret hlt lods les pop aam js sbb and mov lcall fdivrl sub pushf imul adc ret sub mov rcrl lds xor xchg adc sbb ret mov jecxz mov push lret movsb sub xchg add (bad) mov jg std or dec aas cli sub push dec sub push into repz dec arpl (bad) xor roll insb pop jp loopne xorl outsl js sahf loope add rcl call xchg sub and add adc mov (bad) pop and ret xchg pop mov or jl out lea scas fcmovnb and popf xor ret adc jecxz (bad) xor shlb push xor test or inc xchg jb (bad) out mov xor gs lret dec add in adc test cmp into loop sub jne sahf data16 js push lret flds repz mov sbb out jne sub xchg in fdivl add and lea arpl js sbb xchg inc xor or aam and cli clc and popf sub mov adc pop lcall or daa mov test stos nop push dec pusha push add sbb xchg cwtl jg mov mov and (bad) scas push clc adc scas push adc add xchg xor mov push nop cmp pop incb hlt notb inc mov je leave popf nop push sbb adc inc aad xor dec sub aas call (bad) neg inc fnstcw jne cmc stos arpl popf cs jnp repnz add add mov cmp repz adc imul xchg test pop fcomp lcall push jns outsl in inc test inc test pop adc es inc cmp and out or push stos inc (bad) repnz lock pop lcall mov jg add scas cli test jns push shrb or cmp shlb stos lods cmpb sbb mov inc push std ss add cmp sbb push pop cmpsb fsubrs xlat aas lahf inc cs sahf rcl popf mov mov inc (bad) (bad) sarb sbb mov fist negl push (bad) call cmp jecxz int xchg out push pop jae data16 dec ljmp out jle (bad) jb or cltd xchg mov (bad) cld inc loope and in add std jmp sbb push sbb pop push inc pop adc nop mov xchg jns xchg (bad) sbb inc mov test mov push andl sub aad mov xchg pop (bad) mov enter fcom arpl cwtl inc pop (bad) mov es mov pushl dec adcb mov push test inc or xor sbbb out call jmp fcompl out push push and inc dec imul lcall xchg lea ret aaa sti fisttpl push cli (bad) repz int3 jecxz adc xor bound rorb sub mov xchg scas int3 pop imul pop xor sahf pusha mov mov outsb (bad) (bad) or pop mov and dec and out dec jp sbb (bad) outsb icebp and sbb add mov or ss xchg mov and orb daa mov test fisubl test and (bad) pop js mov jne data16 mov fnstenv scas sti loope mov inc fdivrs ds ficoml insl mov cmpsl fild cmpsb orl fwait hlt push mov inc mov mov ss aaa jl scas mov lret mov loop add insl stos rolb dec iret (bad) out dec adc ret xor fiaddl scas mov push xor ss clc xchg add ror xchg inc arpl or nop fmul or and lea xchg loopne ds sub adc sub fldt pusha pop lret leave rep mov inc xchg push xlat pop jg xlat ja push lahf in mov dec pop in lret adc xchg out dec mov je (bad) sbb xchg into push cli fwait push std lds jns in sbb packuswb jo ffreep and or test or xlat cmp aad mov sbb sti notb sub mov enter test push push nop es push jae push or stos pushf jp sub pop and (bad) std inc repnz pop mov mov fidiv or lods mov inc dec xchg (bad) mov loop fldt jle xor mov iret inc inc cmp movsb ljmp out sub mov popf rcrb add xchg imull mov mov mov sbb push movsl pop gs mov mov test fmul into es iret outsb ror push hlt lret or pop hlt push (bad) dec rclb dec jle dec sbb imul xor xorl mov cmc dec jecxz add scas out loope lods inc (bad) lret mov xor ret ret xchg repz pop data16 loope popf out lahf dec lds adc jl (bad) xor sbb xor in or mov or es pop or push mov push fsubrl in push push cmp je cmpsb push inc jb jb int jp mov shll scas insw push jno xchg test xor push dec xor lea into inc mov out inc lds jl fistp fwait sbb loopne xor mov leave arpl inc inc shr in push or sbb cmp or call (bad) aam sub in mov pop not add fcomps sbb xor mov cmc sbb repnz or lods inc dec xor movsb push fbld mov loopne and leave icebp xchg call push repnz leave sbb mov pop sub pusha or adc cmp pop es int clc push sbb xor stos or ret pop lret jno cmp lcall out mov (bad) push dec mov stc cwtl push lea test adc jns jle sub cs or dec in dec push mov xor repz pop jnp es popa push xor dec test aam cli xchg adc xchg pop xchg mov fildll sub add inc (bad) shrl outsl sub fild and cmp fs lds daa adc or pusha xchg mov or mov or pop inc pusha jp pop (bad) adc mov dec sti inc push pop add mov cmpsl sub sahf aaa mov pop inc dec pop cwtl mov pop sub ss xchg test push pop (bad) or jle adc cmc inc push out popf push addr16 and and or cltd add pop movsb in pop cmp add mov das nop stos leave pop mov xor stc mov sub daa cmpsl mov cmpsl out mov mov stos pop mov out inc cmp (bad) leave push or lret mov add sbb (bad) mov pop addr16 sbb addr16 loopne dec pop add out mov fsubs mov and fchs add test push dec aam cmp pop (bad) push add rcrl and push (bad) pushf repz stc push pop jo mov adc movsb (bad) aad cltd cs (bad) mov in jb xor sub jne push xchg fsubrl cld and lds lock lods imul sti int call sbb imul push cld les hlt pop push or mov xchg mov icebp pop and aad add inc or popa in lcall push dec mov dec add (bad) add mov and xor xchg inc xchg xchg rcrb mov mov mov inc mov xchg and cmp aad xchg test dec daa mov lret dec mov xchg fiadd mov stos sub stc add mov ficomp lds or dec (bad) adc fsts mov stc lds inc jnp imul sbb fcoms inc ss aaa mov outsb cmp dec arpl je xchg ficompl cmp push push or (bad) mov mov inc push mov sub mov (bad) in mov pop mov mov push ss push sti nopl lds jno sarl scas pop cs es inc dec fisubrl call inc and jne aad xor cmp scas loope lods aad mov ficomp imul push repz in inc mov inc stc jne push pop cld mov ficomp adc stos lock in mov xor cwtl (bad) out aaa dec imul push mov cmp fbstp test aad push rep idivb loop cltd sbb jb test roll xor (bad) cmp and xchg cmp sbb cmpl xchg (bad) into jbe sbb xchg xor push jl sti xlat movl and cmpsb dec fimull aad add icebp test stc push iret jno aam jle pop mov cmp dec pusha xor dec leave jb adc cmp fstpl jmp insl jmp adc loope sbb sbb add jecxz cmp push icebp loope (bad) retw cmpsl mov and leave movsl pop ss mov inc repnz (bad) dec push incb cmp mov (bad) xchg add fadd das sub leave fstl mov inc stos repz and (bad) sbb and into int3 ljmp je (bad) sti test xor push daa lods adc insl cmp sahf push inc and sahf and arpl dec mov test and add or adc dec popf dec inc adc fidivr je jmp xchg pop push sbb adc (bad) mov mov loop mov xor loopne hlt je sbb shl jns mov lahf insb (bad) ret (bad) insb sti jo test xor repz (bad) mov cmpsb fwait xchg loop rcrl ficom dec stc ret xor popf loopne jg cmp inc adc xchg jbe aam dec jo test mov mov push or je dec repnz and fs fistl inc nop lods mov and xor out and ljmp and test out and rorl xor jl jnp and push repnz cmp out cmp push mov jle xchg movntps pop jo adc pop rorl test add dec inc (bad) mov push or in cltd adc shrb jns dec add in js xor dec mov mov clc push arpl stos sbb inc ljmp sbb outsb or dec mov mov dec dec scas cmpsl nop sub gs hlt jmp (bad) cwtl mov into and mov xor cli movsb xchg lds pop push ljmp pop fcmove inc cltd dec adc sbb jle sub scas inc popf sbb sbb out icebp or incb in fdiv insl les bound adc orl out xchg and sbb sbb cmp dec (bad) sbb mov subb insb xchg test mov psllq mov ret loope aam mov dec rorb ja mov dec and mov or (bad) or mov sub mov leave cmp inc mov andl dec xchg std sub jmp jbe in adc cli shrb xlat sub int3 cli daa (bad) in (bad) dec cmp outsb stc es lea or and xchg mov xchg xor imul xchg imul test ljmp cld rol mov icebp fisubl movsl sub cmp test out push iret push int3 push mov or aad cli sub mov in sbbl addr16 mov std jno xchg dec push or in cld lea mov (bad) loopne xchg mov pusha add add fisubrl or inc fs ljmp repz shlb cmp inc and cmp xchg jl aad out (bad) cmp adc jbe inc aad testb scas pop xchg rcrl pushf (bad) scas sti sti (bad) movsl xchg jnp sbb rorl mov sbb fwait jne mov mov sbb jne push insl add and (bad) push in pop sbb adc and mov repnz pop mov (bad) mov je add inc jb sub in fistpll test pop lock jo sbb adc fsubrl cmp mov inc or dec lods xchg or push xchg ss jg div pop lcall jmp out imul xor mov lds xor add in add cmpsb movsb lret add mov clc stc mov lods (bad) xlat (bad) mov rcrb ds in clc mov cmp cmpsb xor lds aaa lret cmp dec cmpsb sete sbb and pop add daa xchg inc mov fmul cltd mov pusha in pop inc out pop bound test xor (bad) sbb or lcall inc jb (bad) jp insb aas scas ljmp (bad) loope incb sbb push jle pop mov push pop das icebp dec cmpsl jo adc test shrl push movsl into sbb test stos lods adc push fistp pop push (bad) pop faddp sub test addb jno es jmp addr16 dec xor fmulp push out rorl popf fucomp enter and pop jle test stos int3 cmp (bad) fmuls sbb or push loopne int repnz or pop mov mov adc or mov xchg pop ret icebp pop hlt or faddl jnp movsl lods ds jmp cli mov xchg xchg fucomi (bad) fadds or loopne (bad) xor mov imul movsl sub or in xchg cmp sub pop in sbb push hlt loopne dec inc jmp mov pop sbb lahf movsb sbb mov lods notb mov mov cmp or ja dec sub pop sbb cmp ss sub dec loop jp shlb xchg icebp jmp push out jmp cltd adc mov add pop mov sub loopne push lret pop js xor in shrl dec popf add clc mov (bad) xor addr16 lods pop and js,pn xor rolb dec inc cld sbbl loopne push inc mov sbb sti (bad) jbe xchg add loopne push repnz push outsb bound sub jmp imul or adc inc cmp gs loopne or or jns js push shl dec sub cmp sbb mov or lds mov jo pop arpl mov inc cld sbb and inc sbb xor nop xchg and or (bad) mov push add in stc jle and data16 sahf int jge cmpsb call sbb subl jbe sub hlt pop xchg lods (bad) fcmove adc insl pushf cs cli dec (bad) divl push and mov mov cmp mov vmovdqu push xor sub popa (bad) stc int icebp pop jb insb add (bad) add mov cmp mov push lock xchg js sub inc aad test mov mov sub or movaps dec inc mov jle mov dec dec das cmp push jbe jo cld out sbb and dec sub cltd test xchg mov inc aam push adc cmp fmuls fisttp sarl mov (bad) or lea outsb dec mov xchg setp js and pop imul or pop pop jb arpl mov mov loop cltd jno mov sarl repnz cs out out inc cmp aad rcrl loopne leave (bad) gs pop (bad) adc dec popa dec push popf stc mov mov out aam cltd mov dec sbb (bad) call dec push mov (bad) dec stos in adc aas pop mov cltd scas pop orl pop inc les cwtl (bad) out stc sbb mov mov lods xchg cmp icebp mov in fucomi sub test (bad) dec lahf faddl call xlat mov push sub xchg sub cmp lret mov and add ja outsb mov repnz xchg or adc das pop or xchg push push fsubs jbe cmp je std out dec data16 xchg push mov rolb ja cmp push loopne test and lock adc or jns cmp jmp pop xor add pop jns xlat mov dec gs push (bad) xchg imul xchg mov push insb (bad) scas test jns in mov rol icebp insl jmp pop mov push stc inc mov or sbb mov test inc shr js insl push movsl push xor sti cmp jno xor in mov (bad) out jno adc add fimull fldcw xchg add mov addr16 imul xor lret sbb lods lock ret and rorl sti add leave add mov lret xchg stos ljmp push sub in divl lods dec or inc jmp data16 push cmpsb or adc test movsb stos inc lea xor push xchg push cmp in popa aam mov and add adc std push orb or mov repz cmp lods and sti loop sub mov mov mov scas mov sub jle lret lahf add mov jp jmp pop sarb xchg inc decl push and sar mov cmp sbb test loope wbinvd out mov inc cltd popa xchg inc and lods aas outsl sbb mov out sahf or sbb rol sbb add insl xchg rcrb dec sbb or pop push lods add test push xchg xor mov mov into mov leave iret dec push and popf dec leave in jae dec std fimul lock popa fimul pop fsts idivb out and cwtl pop adc das inc xchg fisttpl ss (bad) mov gs push ret or fwait xchg stos clc xchg xor loopne push xor mov jo adc or mov mov call or fdivrs cmp scas xchg sbb push sub add inc pop (bad) (bad) lret out mov adc addl divl pop pop and jo jns push nop ja sbbl sbb dec jno mov cmp repnz push fs jl aas repz decl addr16 adc icebp dec push scas stc pop sbb cmp push push inc inc lods dec je mov jmp int cmp cmp or xor xchg into push sbbb ret pusha pop lret jge cld jae out cmp jo imul ds test cmc jae xchg jae sti mov lahf sbb sub xchg sub or movsl and fisttpl sub iret imul and test mov scas in pop fnstsw les and mov inc sbb jbe xor jecxz ds cmp frstor jae cmpsl addr16 shr int dec inc mov sbbl fwait sbb sub (bad) negl pop mov add (bad) xchg push cmc outsl inc imul out mov sbb lcall in adcl pop jmp fld les into outsb icebp push sbb cwtl call test (bad) dec pop imul mov inc les or icebp jb in inc fstpl push pop aas inc dec pop jl mov aas fidivrl outsl pushf push (bad) int pop aam movsb int3 sub mov cmpsb cmpsl or or pop addr16 insb cmc adc cs add mov xlat cmc outsl lcall frstor inc shlb inc xor leave pop sub fiaddl lcall gs dec je test notl loopne,pt xchg fdivs mov add fmuls or pop stc mov repz jnp iret push repz (bad) (bad) (bad) fldcw test xor lock push (bad) popf adc pop mov mov inc mov lcall nop xlat mov and jo nop or mov fisubl sub ss adc and sahf roll outsl adc pop inc lea lods aam (bad) mov cmpsb cmp dec sti in mov cmp sub or push outsl shrl movsl mov mov fdivr test mov jns lea sub and xchg shr push mov (bad) int3 mov xor pop (bad) inc fcomp mov stos mov mov loopne test xchg push ret (bad) jo cs pop inc popf cmp add xor mov cwtl and outsb lcall lret mov (bad) cli das ja xlat test cmp leave test fist test lock in insb test and in mov sub incl arpl test mov inc pop adc (bad) xor mov in jecxz mov pop push bnd addr16 add popa mov repnz imul hlt mov inc inc daa es decl cmp out (bad) dec xchg inc add iret cld aaa sbb mov xor es addr16 pop push repnz out jge xlat jno jmp jp out int push or fdivr pop sub jnp pop into int lcall jecxz or pop mov mov call jo movsl mov out dec repnz mov das out loop fnsave jns js movsl iret push ss dec pop jbe adc jmp or mov loope and jmp push adc jecxz test loopne ficoml loope out ja xor push mov xor push stos fs es lock and arpl sub out adc repz sti push push test push sbb pop (bad) cmp fldenv jno mov cli ret lea fs aam push sub mov pop mov fmull xchg jecxz xchg jnp mov das inc inc into jb jnp pop sahf jecxz xchg adc clc daa jno notb enter stc dec and scas (bad) cmpsl ret sub mov mov shlb cmp xor dec lahf ljmp insl pop jno xchg lretw mov xchg leave pop xchg ljmp stos mov jle xor xor inc add inc cmc aas rol in fcomip lea repz jns pop out mov inc xor xchg sub pop repz mov xor (bad) jae sahf repz lods aam out adc sahf scas inc aad cmp adc mov sub cwtl icebp mov aas mov dec test pop jmp in mov cli pop jnp jbe out aam leave xchg and loopne (bad) jl test jl cmp jl (bad) jl fistp mov sub movsl lahf mov sub mov mov mov arpl cli cmp jp fiaddl lahf or push lret push nop test in sahf inc cmp pop fstpl sbb mov out lcall rorb inc bound adc je scas ja sub push add push lds rolb dec test in dec mov inc pop lds pop or mov jo test inc lcall lret bound aam push adc subl cmp mov ds in cmc sbb lea inc sbb adc (bad) mov stc pop pushf cmp sbbl loopne jns pop sbb or jns and insl bound sbb mov fwait iret outsl or inc clc stos mov mov jbe fs and std loope xchg jp,pt or xchg sbb xlat repnz push and adc xchg push mov popa mov xchg inc stos arpl repz gs jns adc sub out lret pop int cmpsl dec jl jl inc sub call shlb xor lahf into std das dec add adc sub sbb imul pusha je cs loop add pushf sti and jno lds jg sub and pop ficoml mov pop jecxz inc or popl (bad) dec inc std cmp imul or mov std sub aam push dec addr16 call jb sahf stc inc push adc aaa int jmp inc test mov mov fs mov mov imul sbb xchg inc add fldt sarb outsl dec (bad) jae les lahf or push aam or mov lahf rclb enter test and xchg insl imul insb and pop add data16 inc or dec imul ret and out adc cli xor or sub push fmulp fnstcw outsb fiaddl push adcl dec enter hlt mov cmc orl ja negl xchg cmp pop jmp clc fcompl inc sbbb mov jo jbe (bad) xor sub cltd fdivrl cmpsl xchg out out mov out in adc mov and out pop (bad) push or pop and ss add roll popf jbe out cmp mov xchg xor pop (bad) test int add adc (bad) ficomp or xlat bndstx imull arpl (bad) pop std imul or push icebp pop cs cmc gs sub jle stos loopne inc ret inc jae jno dec push roll add adc in aad outsb test sub pop mov pop pop ds sbb int push rorl fwait jne dec inc (bad) cmovnp outsl mov lret cmp mov mov inc inc movsb xchg sbb (bad) dec in push jle and mov xchg xlat in arpl push lret rorl int pshufw mov sub andl enter lods sub and icebp inc xor pop jl dec mov mov jg xchg popf xor xlat daa mov dec orb mov movsb in ss call pop mov or cmpsb pop (bad) mov or mov sbb xor cmp push push and outsb inc addr16 pop cmpsl cmpsl sbb stos repz xor adc pop out std push sbb mov pop in imul gs sbb push mov mov stos xor jge in je xchg dec cs jle xor inc jb jnp add lahf and mov dec cmp jb (bad) and cmpsb cld arpl in mov pop pushf mov and lods sbb subl rorl jb test aas cwtl push ds test daa sub int3 sbb js dec xchg push push jae adc mov xor jp cmp outsl div ljmp lcall pop in jecxz arpl pop aaa (bad) jne cmp loopne jne imul loopne sbb out pop out push rorb pop dec adc xchg and inc xchg dec inc fs inc fstps adc inc jmp inc shll into lret ljmp dec xchg movsl fsubl jbe mov addr16 shll test lds (bad) cli and push mov loop inc outsb repnz cmp jge dec or push fadds stos lods (bad) out stos xchg mov scas pop add add cmc xchg cmpsb movl int3 sub std sbb jnp sub adc dec jno push or sub xor daa xchg fstpl mov xchg int xchg dec (bad) xor xor or cmp mov mov add pop xlat pushf lea hlt mov dec push xchg ret into cmp cmpsl push (bad) (bad) jge lock cltd inc mov fsubr cwtl adc (bad) out cmp les or callw loop aad hlt add push mov insb inc cmp mov push inc jb fs test aas lea int mov adc jns pushf fsubrl loop stos pop les dec cmovbe in cmc sbb sbb push gs mov addl mov test test cli lea aam mov data16 add repz mov mov sub inc int3 repz lcall inc add jmp test dec dec das mov push lret dec and lret ret jnp xor jnp out mov (bad) ja sub imul inc sub out repnz inc push pop lds addr16 or (bad) mov inc cld xchg int3 lods cmpsl xchg xchg push ret imul cld dec pop sbb out pop faddl movsb sti mov xor fstps jecxz push clc mov pop leave orl push cld scas scas and jb push dec dec dec fisub cmp xor stc cwtl dec aam dec test or or sbb adc lret mov inc push pushl flds pop inc sahf inc mov (bad) and not (bad) mov test or frstor cli fistpll loopne loop inc jg xchg or adc addl jo and adc fldt aam jmp jmp lcall sbb call in mov jg mov imull lcall jno add mov cmp fucomip mov cs xor (bad) repnz es cmc adc mov fs fnstcw xor dec (bad) mov in push lods cmp lods mov rcr xchg adc popa mov xor iret mov pop cmpsl push fst push inc test add mov xor leave mov mov jecxz fild or rcll outsl pop out lret xchg imul test push popf and les add push mov adc into mov mov sarb push hlt aad in jbe lret (bad) mov rolb pop icebp mov loop inc movsb faddl fdivl fdivrs ljmp mov lods scas cli flds mov pop call lds pop pop xchg (bad) push bound sub lea xchg stos adcb (bad) lock test out js sti xchg data16 fistp movsb pop (bad) ds lods pop imul mov cwtl nop add dec andl in dec jns jle fs outsl or loope cmc dec sub neg movsb imul push push mov pop and jns dec lret or jo sbb pop xchg (bad) notl push stos push daa in fbld pop jbe lret aaa jne mov dec scas xor and xchg sub push scas sbbl pop stos dec pushf enter sbb sbb test idivl push push fist repz push iret stos mov inc xchg in aas in pop psrlq pop mov in push cmpl div fnsave sub (bad) fsubrl or jp mov cmpsl gs loop lahf jo dec mov sbb rol clc stos and jp fstps jge mov push pop inc fnsave mov jmp mov insb imul add sbb add cltd xchg (bad) xor or cmpsl inc adc mov (bad) mov scas cmp xor cmpsl jnp cmp (bad) popa jns cltd sbb push mov pop push adc dec ss int shufps mov gs aad adc inc (bad) mov push pop cwtl repz aad sub shr mov mov std or xchg lea cmpsb (bad) push std out mov pop in xchg lea add int3 push jmp mov or add push mov (bad) push inc jno lcall xlat jno js adc ret xchg ljmp vminsd sub push dec fdiv inc ret call stc mov inc fbld ss cld pop dec stos pop ss (bad) test fidivl cmp jg repz dec orl or popf jg dec push pop inc nop int3 ja outsl xchg pop bound push mov subl cld lret mov xchg cmp dec and sbb mov (bad) pusha in clc or dec cmp fistl in mov loope sub xor and ret adc jg sbb (bad) shrb aaa adc fbld cltd or fistpl lea iret repnz or inc (bad) jno xor test adc jmp and ret lods cmp idiv add cmp push ret jae iret call insb into sbb (bad) decl (bad) adc add mov or pop mov sub enter (bad) das ljmp push ja push (bad) jae lahf add jl mov mov insb div (bad) push push fildl jo cmp or shr dec int js icebp aas sbb inc jp push xchg xchg mov inc iret adc mov push scas sub int (bad) ljmp mov std jmp je dec cs sub repz jne push sbb loopne ret mov mov push cmp je mov shll and push fidivr inc push lcall dec std sbb inc inc jl pushf mov movsl lods mov cwtl lods pop jo and cld sub imul inc aad fcompl cld inc cli scas sub call or lds mov cmp inc fwait (bad) int3 jle pop clc push mov or pop mov ffree out mov jle out jl scas sarl imul cs xchg (bad) pop pop imul sub jne dec int3 cmp insl jb (bad) aas sub cmp xor outsb cld pop les sbb mov mov cli cmpsb loopne push fcoml push mov inc mov mov outsl cmc insl lds inc fnstcw xor loop or enter in pusha fimull je lods pop and fcoms mov push or push fwait mov jge jl fs aad push gs push movsb mov or cwtl cmpsl (bad) lock lret aad jle jmp frstor shlb das cwtl lods pop dec dec in data16 popf sti ss aaa arpl mov xor fwait loop inc out xchg push enter fwait push adc fmull lret loopne daa imul test xor jnp ds push cmp add in cltd jge adc loope jecxz push xor mov cmp in sbb aam mov and outsl ret and or in mov fnop push mov out arpl ficoml out imul push jns stos xchg dec aas xor fbstp call xor (bad) mov ja cmpsb lcall lret pushf sub cli loop mov lret shrb fldt adc sbb adc sub scas in mov in push dec pop dec jns (bad) cmp pop mov inc rclb shll and and pop cmp pop pop mov inc cs sahf xchg lock jecxz or xor mov mov adc mov loopne aaa cs outsl imul lods idivb adc aaa xor lds imul sub iret dec mov add adcl int dec in jne xchg push push lods adc inc and jg pslld and fwait xor test dec sbb iret shl out mov ljmp mov mov test add push das data16 inc cltd (bad) je cmc or out mov jae addr16 jnp in cmpsb scas ss xchg lods (bad) dec fs call aad cmp pop jno addb xchg or jne sahf xchg jle leave arpl adc add gs (bad) insl add and hlt mov pop nop cmpsl mov jo mov mov cmc push and sub sub jge pop arpl testl xor sbb fcmovnu addr16 inc mov push or lret cmpl pusha aas and inc mov jmp lcall pop fs xor imul adc loope mov js testl popa pop sub js mov push mov xlat push ja or gs jo jge leave jne add hlt adcb xchg lret adc mov lds sub (bad) jo shr sub std jae orb inc into adc arpl jecxz (bad) inc mov pop ror jl dec xchg cmpsl (bad) mov fstl inc movsl mov inc push push stos cmc push arpl xchg sbb (bad) (bad) jge add outsl or iret lock push fucom sub mov popl inc jle jne ret mov sub cli inc xchg adc pop dec push fnsave xchg jge mulb out movlhps mov mov pop adc std lret push mov clc mov je fwait cmp cltd mov enter lcall xchg jns adc fidivl inc leave cld out addr16 xchg hlt and loop cmc bnd icebp push sub mov pushf pop out insl push es jg loop xlat fstl xchg or lahf cmp xlat out pop jl pushf pop and adc fstl or gs stos scas nop xor in dec in xchg cmp xchg popf jo addr16 add mov add cmc (bad) push jp loope add lds in jb adc add std adc pop cmp lahf mov fstp imul jl mov adc push ja or add mov pop mov add adc fs in sbb lea in out popf ds ret out ss gs fstpl pop pop clc ja,pn add lods aam (bad) in (bad) mov ss push inc mov (bad) pop stos xchg fld lds and jp jmp xor xchg push pusha push jl lret dec inc jne push mov mov add (bad) push push js xor fisttp sahf ret sti cli mov ss mov xchg test jp sbb adc icebp movb out lods imul mov mov inc jns inc adc inc mov dec out aam jbe mov cli pop mov or mov adc jl xchg das sarl push jne sub movsl cltd lcall lds xor mov mov add mov clc sahf inc dec fild lea push in cwtl mov ret stos icebp cmpsl jns insb mov adc subl mov call pop mov push popf pop fisttpll lds ret enter sub popf or addr16 stos pop sbb dec ss cmpsb xor scas xor mov cwtl cmp pop add lods pop xor (bad) (bad) and std xchg mov xchg (bad) dec mull (bad) or std xchg cli clc cmc jo rolb dec mov jae cmp dec hlt cmp sub test push adc scas mov pop and sub fidivr sub es cmp stos outsl sub fcomi xlat (bad) push jle mov cld out push mov je aas push sbb xor mov push lret dec xchg xor cmc stc clc fstl inc xor jns ficomp scas int ret mov lods jp out mov cmpsb call out sbb jns mov xchg sbb sbb add dec addr16 and fs cmp cltd mov add fimul xchg fmull repz aam dec mov das fs movsb push movsl adc mov adcb lods lea (bad) out enter sahf clc xlat fimull icebp (bad) cmp ljmp pop lds fcoml iret xor add adc fdivr push fimul jns cmp mov popl aaa ret leave (bad) dec test adc lea faddl stos mov shlb lock mov insb popa (bad) and lret hlt sbb rorb fsubr adc fdivrs clc shlb xchg jo inc test ret inc lahf sub in adcl inc adc push dec mov sub in lcall dec (bad) cs fwait or (bad) lret push dec imul mov adc mov xor adc mov sbb push clc mov dec ffree outsb ss mov inc add in jmp sti xor loope or jne sub popa int test ret add ja ficompl jl xor adc mov scas mov push (bad) cmc xor clc pop mov jno cmp jl ffreep mov sub inc add mov adc mov es loop lods push arpl iret and mov icebp imul ret jmp stos jns cltd lcall inc test jge loop movsl mov arpl hlt lock sub mov xchg stos inc lods jo mov xchg fmul rclb adc gs loopne mov loopne cmpsl jge les pop dec push imul dec ss lock jnp addb test movsl sbb subb pop sti ds out and or and add push enter aas jno movsl cmp loopne imul fldl xor gs push faddl sar andl and and out cmp xchg stos or int ficoml mov icebp leave sbb pop movsl inc add mov jae push mov or pop sbb int3 jbe,pn mov (bad) mov sarb jno into mov scas jmp jecxz dec in sub add aas pop mov and inc (bad) jecxz (bad) mov xchg jo imul push or mov push lret xlat mov outsl pop cmp out loopne fsubrs jg mov cmpb pop inc in pop dec das mov mov jnp lods test insb dec out fs cmc jp mov add mov lahf std (bad) movsb inc lret repz call and icebp ljmp mov push xchg imul call insb pop mov mov fdiv enter pop adc mov sahf push lahf adc repnz mov pop lea imul mov dec sbb dec mov bound and inc pushf test or push adc data16 add adc xor inc test mov ss (bad) pop pop jb iret jecxz fstpt jmp scas sbb rorl pop loop or cmovs aam add ljmp test outsb xor push ds and push pop es rcr loope icebp xchg inc bound xor sbb mov pusha int imul jl shr mov es mov xchg cltd nopl cs lret ja push jbe data16 push insl xchg cs or rcll pop jbe inc clc daa (bad) jp sub xchg jnp in bound imul mov mov pop dec mov test js mov or mov inc sub mov rorl push cld lea mov jge mov ja dec cmp xchg insl int call imul daa insb ds mov les dec xor pop sub pushl sub js jge add and insl imulb les dec mov pop data16 jbe pushf inc outsb adc xchg loopw and loope cmpsb push and jne mov ds pop jmp cmp mov and in clc mov call push outsl int3 imul ss add sbb jnp test rorl xchg mov enter aam jnp mov cmp out out lahf or adc mov cwtl inc in fidiv int jge push inc jno push adc (bad) or mov imul fldenv into (bad) inc shrl dec xchg fwait inc loopne enter popa adc jo,pn into adc into (bad) cmp adc pop ljmp aad outsb dec fmuls lods into mov shrl movsl dec mov lods icebp push sub and xor adc and xchg addr16 adc sub mov out mov cs xchg (bad) in cli mov jle test loope sub data16 pop scas dec adc shr jp cli cmpsb mov jnp cmp test daa dec xor insl iret push dec mov adc sbb jmp (bad) and sub out mov (bad) mov call (bad) mov push (bad) mov mov jle ret jo out popa inc loope push (bad) cli cmp pop xchg outsb arpl xchg gs movsl js jge xor popf dec add push jmp fldenv pop mov loop xor mov and jge sbb adc mov cmp sub add repz fdiv (bad) bound les pop fs cmp or aam lods rcll fnstcw push cwtl mov and (bad) jge push gs xchg icebp push ror jns jnp push mov xchg mov scas or clc gs movsl mov dec out sub int enter lret mov (bad) cmc les mov cmp loop hlt inc test xchg mov pop imul cli add mov pop fstl bound js jbe incl test adc in in into ljmp pop clc mov pop dec jno push stos mov inc pop mov sahf push loope out mov es in lcall mov (bad) push dec sub xor xor dec scas inc dec mov pop xor jns mov xor js lods mov add stos xchg out mov arpl cmp addr16 dec movsl pop cmp mov stos shrb pop lcall popa leave or es inc push xor ljmp popf xlat addr16 lock jo out jle jae mov or ret sti pop pop push lret cs fsubrl mov push pop mov mov pop push xor ror testl inc loop sbb push daa aaa sbb popf or xor mov cmp push mov je dec cmpb sub out lds test cmp xor jno mov jmp shrb push inc sbb pop cltd xor bnd jbe fisubl inc out jg inc cmc outsl mov add aam stos xchg dec jae imul jl insl jg and xor enter xor inc imul push mov andb ret out cmpw adc jp lret sbb cmp add cmp jns rcr push jl xchg cltd pop hlt icebp xor mov lds inc mov or or or pop adc mov xchg cmp lds mov cwtl pop xorl subl push push xchg es pop shl popf xor sbb clc adc add sbb xchg (bad) out adc sbb jcxz in cwtl aam rcl mov or ds mov xchg xlat cmp xor in xchg mov adc mov test dec daa rorl pop dec lcall test xor fstps insb xchg add fcompl movsb les andl push jo push mov inc adc and sbb or push cmp out lds pop ss ja nop out cmpsb fimull outsb mov push clc jl cwtl inc leave xchg cs and sbb or or (bad) jecxz cs ja negb or sti mov cmp (bad) mov pop (bad) pop dec dec adc add and out jno push inc fwait or xchg shlb cmp call and sbb sbb loopne sub insl cmp das push rol mov mov add popf pop sbb xchg pop adc (bad) or call mov push outsb icebp je cmp lret mov mov insl rol cmpsl pop adc es inc nop xchg mov mov and gs repz sub ja cmp add inc cmpsb arpl dec js int3 (bad) int sub dec loopne xor pop gs add jge shrl sub inc pop push inc xor stos out mov sub and and ja out pop and sub in movsl je sahf jns cmc mov test dec push or rsm cmpsb fidivl stc dec xor mov das or in das or bound int loop jg cmp dec (bad) xchg add dec imul jne mov stos les xor lcall mov sbb mov ja leave adc ljmp mov adc sub (bad) or sbb sarb xchg ficomp movsl in or xchg mov std jl pop jl lahf aam dec mov pop mov lods ds push push xor pop shlb js push out mov mov ljmp inc mov std ret idivb cld icebp xchg add roll or and mov mov imul inc dec or jp cmp roll arpl pushl and xchg jns add icebp aas xchg sbb jne sub push fisubrl jp loope shll mov sub cmp es sbb es aas sub jne push mov push addr16 cmc xor ljmp adc test fwait push sti ss cmpsl push jp jbe pusha lret push test xlat pop nop mov or ret jae,pt push test xorb cltd inc fdivl loop xchg int3 jmp mov cmc int (bad) push adc and mov xor mov xchg xchg loopne cwtl xchg lret decl (bad) xor push leave xor test adc dec pop sahf and jl adcb and (bad) ffreep mov popa dec pop (bad) sbbb lret push (bad) scas cs lret sbb pop and dec mov cmp daa cmpsb enter inc mov pop das pop subl je in (bad) cmp lock sbb ret mov jle cltd (bad) mulb pop jge jnp sub cmp xacquire push push lcall xchg mov dec add add jnp mov pop dec xor fadds stos mov pop jnp pop dec inc pop push push jns xchg mov loope jnp mov jne cltd xor in jno cwtl sarl call cli scas addr16 inc fstpl (bad) or sbb jnp ret (bad) in push push outsb (bad) push cmp sbb dec mov scas sub outsb sub js lcall jo xchg cltd mov adc imul shrl cmp xorl sbb (bad) ret cmc xor cltd jno jmp fldenv or dec pop insb push in jmp in lcall push lods iret daa xor jb push mov jecxz in xchg or cmp jnp mov adc pop arpl pop nop test into ret cmp jno pop cmc nop push xchg lods fwait mov mov xchg fwait push sbb mov mov mov rcrb into mov mov scas std dec jge notb loopne (bad) or popf xchg outsl inc inc push mov add mov pop int (bad) xlat push imul stos cmc pop inc inc mov sub pushaw mov push add mov mov pusha cmp add xor orb lcall cmpb adc sbb mov mov leave sub dec fidivl test dec adc xor jno xchg mov push cld inc xchg arpl loope je add xchg cmp std adc cmp hlt sub push outsl xorl orl xor outsb xchg lods rcll fcoms lret xchg test rcrl lds push fstps mov or xor dec or popa mov mov (bad) lcall fnstsw imul xor push loopne push dec jo inc mov jmp cmovs aad or fxch movsl inc pop dec cmp xchg daa arpl sbb xor mov inc xor inc inc imul mov mov jg js push pop and fidivrl cmp mov lock test out xchg xchg loope xchg scas push pop aam jae sub iret lret mov mov xchg lds pop adc stos lahf stc (bad) fisubrl dec fucomi adc fs dec or xchg dec mov mov xorl fxch cmp cltd int push dec popa rorl pop or repnz fistl sub sbb out cli jae (bad) pop sub sbb add outsb adc inc mov movsl or aaa jb push rcll dec pop mov lods pop jp mov xchg dec imul mov insb mov xchg mov cmp stc fcmovnu mov fisttp jp dec mov xor adc cwtl (bad) or das jl add xchg jmp stos sub icebp test clc in cmp mov sub sub xor or out icebp cmpsb pop jg push popa lds clc pop sub fisubr mov pop les lods dec cmpsb mov adc shrl xchg into push (bad) mov mov inc (bad) jg cmp xor nop daa lahf jns or dec movsl cs dec subl insb cmp add aas fs (bad) mov or pop pop cltd pop repz stos push or pop mov add call push jbe pop add fs pop jg sbb sbb sbb out cmp bound add and push inc scas jge jl mov (bad) jle dec scas and fnstenv jb jmp popf mov stos mov push jo loop cmp and (bad) add mov mov inc std ds xchg mov clc adc lret jmp aad jecxz ds dec add cmp inc dec and push mulb leave (bad) lods xor movsb cmp mov mov and inc scas lret push jnp imul add add notb dec in ja sub add in dec lret push outsb pusha imul popa jp mov cmpsl scas push std push orl push pop pop and out pop loopne in mov in mov das in ret test mov lea cmp push push mov (bad) cmp cltd popa jnp loopne shrb lret jno inc mov movsb xor stc and loopne daa jecxz xchg mov add lods pop loope xor xchg push clc pusha pop jne mov test jecxz movsb fcoms mov lret lock daa imul push imul js data16 jbe jno cmpsl mov in pop add test mov sbb cmp pop sbb pusha mov sbb test add repnz inc pop sub cltd or sub in add jb in cmp xchg mov nop jne push data16 ljmp xor pop sub mov cmp mov mov jmp aaa dec je push pop flds mov push jae ret and mov mov aad rolb js test sub (bad) push fisubr push mov push rcrb lods jl mov lock orb loope push int into outsl pop loope cltd loope outsb push dec (bad) mov xor pushf out add movsl mov test xor (bad) mul popa jb add int pusha (bad) inc adc jo xchg imulb inc dec mov nop adc jbe (bad) jne adc pusha push cmp sti inc in push adc loop sbb jmp loop sub and mov mov inc mov cwtl mov notb icebp test mov test add popa rclb or jmp xchg adc xor add pop pop xor (bad) call mov mov ss lock pop and lods inc lods dec insb xor into and add shrb les rep pop testb xchg xor pop in js mov jae sbb out cmp mov mov sbb or lret test add stos stos ja (bad) repz movsb xchg inc xchg sbb mov (bad) das pop cmp adc pop cli sahf xlat pop mov cs (bad) rcll xor cmp inc inc xchg cltd cli cmpsb ret cmp lods call and aam mov push and (bad) icebp pop xor iret orb call je jg sub in scas inc mov or sub or sub (bad) and jae push mov jge fs pop and pop jb pop mov mov or icebp fmul mov xchg rcrl inc and dec or dec aam dec popf and dec repz and test push test repz push sbb rorl aas cmp test int3 cmp or (bad) mov imul jo (bad) je negb movsb jnp test hlt or mov jnp ds fcompl fisttp in mov daa nop in popf out ja test (bad) scas popf (bad) lret add int3 cmpsl (bad) cmc dec loopne ljmp popl add call in rolb xor lods loope shll pop mov aaa test je xchg or or test outsl and imul (bad) and fmulp sbb out mov and scas ret xor dec xor cmp push subl imul mov test sbb jg sahf jae sbb xor lock testl mov jbe pop adc loopne (bad) sti ljmp mov repnz cmp jno insb mov mov movsb push mov icebp arpl scas aam xor adc (bad) adc and jbe push xchg sahf cmp jl xchg pop notb loopne outsl cld jecxz sub rorb cmp lods (bad) stos jmp cwtl jne mov or xlat loopne mov lcall dec lods outsb mov (bad) adc stos mov and push jns dec fild push negl aaa lret mov add (bad) aad mov and adc cltd cmpsl cmp inc in (bad) jle xor outsl stos fsubrs mov hlt out pop mov sbb cmc fst add rol stos stos fnstsw loop mul mov pop out cmpsl movsl add sub daa (bad) fnstenv or push mov xor lret insb inc xor lods dec xor dec cmp mov and adc jl enter mov push (bad) dec xor mov sti stos aas std pushf out xchg jle sahf add jb imul mov cmpsl pop sub js pop pusha fmuls xchg sub adc insb mov leave xchg pop xor shlb out push mov mov cmp jno fdivrs mov (bad) into imul mov stc lret adc pop jle (bad) xor mov ret pop shl cmpsb sub loope stos push cmp cltd (bad) hlt xor mov and push and inc out es jl stos (bad) push das imul repnz xchg sub popf mov popf es lret sarb cmc leave cmc imull mov sarl lock out mov cltd loopne (bad) adc cmp pop outsl xor or jmp gs sub pop pushf imul mov inc into call outsb mov rclb mov call outsl pop pop sub inc iret push xchg jmp cmp mov sbb add loope das addr16 cmp adc out cli popf mov arpl roll sub sbb fdiv fmul push js push (bad) push pop stc or test jnp icebp popf pushf or inc (bad) mov mov insl jb inc cmc inc mov jo notb popa nop inc in sub ljmp scas ja jg fsubs push push jne (bad) sub jmp aas out pop pop (bad) pop sbb xor sbb jmp inc fcoms mov mov stos pusha mov repnz lret daa loope mov (bad) jnp jg loopne leave sub jnp mov jp or das imul and repz aas pusha or xchg push ja cmp or lcall lahf mov mov arpl (bad) aam push lcall lock sub xor int rcll cld push jp mov sbb sub out cli popf add push sbb aaa es andl inc (bad) and push (bad) int xchg mov imul xchg dec mov scas sbb inc push cli gs loope pop outsl lahf ss mov cmpsl push inc movsb inc out adc mov or or jle mov rorb xchg mov push daa xchg das pop xor in imul add data16 mov pop jecxz repz (bad) dec pop xchg notl lcall outsl xor lret leave (bad) in (bad) (bad) cli std je mov cmp mov jecxz fbstp xor xchg mov xor shlb (bad) lcall cmpsb xchg enter iret dec add push daa push int xchg icebp repz (bad) arpl jp data16 dec and pusha aad xor leave sbb xchg cmc test clc xor jle cs push mov xchg push mov fs repz fcomps stos pop fisubl sub mov std mov push xchg fwait popa push aad cmp nop pop inc jecxz ret jae xor mov or ficompl aas jle insl test out jo rcr mov (bad) jge int jecxz mov iret std rolb dec lock in stc pop jnp mov mov aam inc dec sub inc in push test (bad) (bad) dec stos repnz in mov xchg (bad) hlt outsb sti sub ljmp push xor mov mov or and movsl xor xlat cmpb cmp and lea lea pop mov pusha xchg pshufw inc dec and fdivrl dec and fld xchg in push jmp push cmp or aaa je bts jns push sahf sub rol outsl cmpsb movsl aaa xchg je jae je (bad) xchg loop sub jmp mov jl pop push call fs test dec lret adc and add sub and es push aaa xchg inc mov rorl loopne movsl xchg insl add movsl fs inc or xchg pop ja add fmull mov adc or and stos mov pop push push xor (bad) xchg mov ficoml loopne imulb daa add jmp clc push je or xchg xlat xchg frstor push clc out lock mov mov push popa ss inc shl inc cmp cmp pop pop push lahf dec lods jl mov sub mov inc cmp (bad) mov cwtl fwait imul lret icebp outsb icebp out inc lods push or jnp xor mov cwtl mov mov xor adc xlat cmp lahf adc (bad) test mov pop mov or inc lock sub cwtl dec cmp (bad) aad (bad) mov pop xchg test jne push lahf mov rcl mov xor mov ja push adc rcll and jmp cmp lcall das test push jae mov xchg sbb fisubr (bad) pop icebp fsubs jnp in push pop sub add add aad enter scas xor ds sub (bad) cmp mov std mov dec add test dec mov cmc rcll jge movl scas jnp loopne pop pop mov lock movsb mov sbb rcrb icebp je pop cmc cmp jbe test setnp fldt add jle rclb xor inc jns leave icebp in call sbb sbb push scas popa mov mov jmp cli data16 jno ds or add (bad) sbb and cmp test pop xchg insb cli xchg push (bad) inc add jbe cmpsb xor mov add data16 rclb hlt es test cmp (bad) mov dec xor add in sbb fs (bad) jo add inc adc cmp (bad) pop cli pop dec out leave xchg iret mov ret (bad) test inc enter ret scas pushf adc scas rolb gs data16 cmp das loop int3 xor sbb bound cld mov (bad) insb gs sarl sbb mov mov inc int les inc or pmullw clc scas jp inc (bad) imul mov lods jg cmpb adc popa (bad) lods stos sub push pop cmp (bad) out push sub testl ficompl (bad) gs xor inc mov outsb and jae enter jb aas dec addr16 dec jl mov mov add scas ret mov lcall enter xchg rcll or in cmp mov mov cmp call push add xchg aam and jl mov xor aam es mov scas repz scas dec mov xchg xor rorb pushf hlt xchg xor fistpll dec mov and mov push mov pop push xchg lahf lahf sarl jo dec xorl lcall sbb push and aaa mov call or cmp aas mov in lret imul int3 sarb (bad) popa mov push int3 test push cmp xor in pop or push aaa daa cs lds popa (bad) hlt and fldl into out adc clc in mov xor (bad) dec test jl mov notb jb mov dec cmp insl fstl ds cli fsubl (bad) (bad) mov movsl sbb xor addr16 add push rolb or jnp leave pop xor dec inc inc pop outsb imul add popa icebp (bad) out mov pusha movsb bound fidivr mov sub add and lods sbb (bad) push jmp dec in ja repz sub adc outsl repz (bad) movsb das loop arpl loop je xchg out cmp dec add popf dec jo (bad) inc and (bad) fidivrl lods call or inc xor cmpsb ljmp mov mov clc lahf mov dec or scas mov repz in pop jne andl dec pop add jmp cmp push add adc cmpsl dec cmp pop cmpl xchg lods inc ds inc and dec jge imul outsb mov xchg lods ds shrl (bad) xor dec add push ret and dec movsl iret add out cmpsl outsl (bad) mov jae repnz repnz pop add jae jecxz mov pop cmp pop enter mov leave dec out xor rclb negb dec loopne sub jecxz inc dec jnp push icebp xchg push mov hlt add test and je pop aaa cmp cltd mov jno xchg push pop fs mov lods into aam pop dec call fidiv cltd xchg xor lods jbe mov pop test aas addr16 or cmp out push xchg stc jo mov inc xor push sbb in xchg push jl imul push push fstl adcl mov out test leave sbb add dec movsb xor loopne int pushf or dec inc jge fldcw jo mov cltd jbe sub inc mov add and add scas inc out mov js test jg mov or inc dec mov aas mov popf sub lret dec push stos inc ljmp orb or lret mov inc xor xor jb adc mov or mov fistp clc xchg es js dec xchg in popf repz jne int lcall xchg es dec sbb nop clc fistl inc aaa sbbl jecxz adc pop push hlt ret movsl nop ret (bad) or pop mov add ficoml out test and mov in bound mov jae push jbe push loopne inc enter mov inc shrl repnz daa push das xor adc fild lret ret mov call inc mov dec sub hlt pop clc ss inc xchg adc push dec stos out daa cmc into add mov push sbb call jnp sti adcb or xor shrl jmp and add movsb dec mov in mov mov or cmc out ficoml pop cltd inc cmp inc shll nop clc jo (bad) xchg (bad) adc mov out jp and pop repz mov jo popf fildl jge dec sbb jb pop adc addr16 ret loopne cmp gs lcall xchg and stos test loop adc dec pop inc test iret fsubs xchg inc pop pop shrb push out fwait popf call sbb add mov (bad) xor and movsl out xor rcr jle fs data16 out pop inc mov movsb mov pusha rorl pop inc mov dec (bad) xchg cmp cmp push pop pop enter addr16 add cmpsb cmpsb mov cwtl mov leave mov inc or jmp and stos movsb ficom sbb mov call iret fcomi cs lock mov jne xchg or ljmp test xlat xchg sarl (bad) sahf loopne cmpsb test jecxz inc adc leave adc (bad) sbb imul lods dec xor mov mov dec cltd enter lock ret sub mov adc frstor aas add mov push out inc pop popa or push std hlt sub add and xor xor (bad) mov (bad) mov xor std jmp pop out enter lods mov (bad) (bad) repnz xchg xchg jbe add outsb push xlat aam jle dec mov lahf out sbb mov (bad) adc jb in pop inc add das fiadd jecxz aas lock call mov hlt arpl sub push out sbb xor jecxz lret cld pop nop mov movsl and lds icebp jl mov mov mov (bad) mov inc (bad) mov ffree push ret push pop ret leave pop std dec call outsl imul pusha add jmp bound sub and mov mov in lret push sbb push aas or cs push cmp xchg out mov sub (bad) lods xor push jge icebp mov fsub add pusha push inc pop in shrl jbe mov cmp fimull push gs jnp lret sub cmpsl rcr mov mov popa iret mov mov testb test hlt jp loope stos xchg push adc daa imul notl pusha xor fwait cmp pop or xchg imul xchg inc or sbb fistp fistp into out push sub push pop scas movsl push jecxz or cli scas xlat test xlat mov test scas jge mov ds loope stc xor ret sbb (bad) adc popf xchg (bad) scas ljmp jmp add inc push js pop std es adc pop dec int3 iret jmp xor pop jecxz pop inc out pop mov sub rcll dec loope es adc push jne idivb dec push je jecxz fdivl in cld cltd imul psubw cmp lcall xor or inc jl ja vsubss mov fcmovnbe push mov xchg sub mov pop imul and xchg jge add xorb ret rcr fwait ret xlat xor cwtl mov lcall xchg gs mov je jae popf in aaa xor fstl add addl push inc or lea mov in mov jae inc hlt pop pop fiaddl mov sarl add out mov mov jne jp mov mov mov add (bad) jae mov or sti inc mov lcall cmpsl xchg iret js xor icebp xchg lcall out mov sahf sbbl repz jge test repz inc loope imull orb push dec adc pop bound cwtl jp jae (bad) pop adc scas cwtl aaa add xchg xor jecxz push scas in clc sub (bad) lods test outsl mov insb (bad) push push in mov aaa dec mov sub lret mov jp pop pop xchg mov and cmpl shlb jg in hlt fistpll lock or sub ja out roll fwait rorb mov es (bad) mov or cmp jns insl xlat xchg popf xchg into and dec dec pop jg aad and xor adc (bad) aam rclb jbe push fcoml in fcmovu clc mov mov mov (bad) test leave movsb lods add jmp mov or fcomip test push je int insb sbb in int xor jge push mov inc lret sbb arpl sub rclb lods or jbe inc lock (bad) gs ret xchg pop pop mov dec mov jmp push aam nop cli insb in dec sub cld das js sbb mov xor and mov jge mov out cmp sub jle sub pop inc inc cmp rcrl repz cltd lods cmp (bad) popa jae rcrb sbb neg (bad) mov jb out fsubr mov out xchg shrl (bad) mov (bad) shl xchg mov or and and dec scas hlt cmp ja add ret mov inc or mov and clc aam jg call outsl roll adc test or pop jecxz mov sub pop pusha pop je jl test shrb sub test repz adc rorl daa cmp stc sbb lock ljmp aam and mov dec and stos (bad) cmp mov xor in mov sub or icebp test lds inc nop cmp imul mov ljmp adc mov xor or jmp dec lahf mov aad iret movsl loop push mov or fnsave fwait pop jb sub in jmp mov fsubs push jp sub dec fs inc mov outsb mov dec push movsb mov (bad) orl in pusha mov lock dec aam dec dec repnz sbb add (bad) push sbb int3 adc or mov in rol mov sahf xlat adc xchg xchg lock dec enter loop call mov aas fisttpl aam ja movl xchg outsb mov dec push and add fstpl idivl cmpsb mov std (bad) fisubr (bad) sahf aad mov sbb xchg xor cmc (bad) mov lea adc and jbe call in dec std mov sahf adc (bad) adc scas cli mov cs outsl jl in mov xchg push outsb addr16 addr16 popf xchg jb pop ljmp jns mov aad in rol jmp lcall adc daa pop jp mov loopne (bad) loop addr16 sub pop data16 push inc sbb popf cmpsl (bad) xchg mov pop mov jo stc push sub push push pop repnz lcall or ss cmp mulb sub jns push or dec xchg mov and xor adc push rcr and ds mov jg jg or cmc int3 repz ret push mov or xor sub mov mov xchg jmp mov mov sbb inc pop lret loope arpl jo mov jge movsb xor aad push movsb xchg pop insb mov (bad) mov sbb ljmp stc (bad) leave aam (bad) xchg bound adc rcr and sub mov adc aam fiadd sbb sbb int sub push push fs andb push push push cmp inc mov pop sbb sarl rcr sbb fldt push in lods xchg jmp mov cmp mov pop test fistpll mov push (bad) sbb fistpll xlat (bad) fisubr push pusha shl scas mov add clc jp sbb mov fmuls xchg adc mov test jo pop xchg iret stc pushf fldt or outsl cmpsl mov out lret pop push jno dec add pop dec lahf cmp mov test sbb jne jl mov out pop lahf sbb cmpsl push push out pop cld add js jae (bad) mov pop decb add sbb fldt (bad) mov xchg scas (bad) je fisttp xchg scas push iret xor insb xlat loop mov mov int3 push jle rcrl loop ror ja mov cs loope and ret or in cwtl dec std mov pop ds sahf jnp out adc and enter nop test cmp jl adc hlt mov xchg mov dec nop and mov xchg call push mov jge mov sbb sbb (bad) ss in sbb sbb or into ljmp aas addr16 sti inc stos pop inc lret test imul cltd (bad) aas test push fbld cmp shrb sub sbb push shrl dec js and ds mov (bad) popl jg cli inc dec mov dec insl xchg mov outsb out lahf lods mov fs or sbb mov daa push adc mov jp dec lock add dec pusha xchg repz cltd loope imul push gs xor cmp imul xorb ljmp fstpt cwtl loop mov jns jns pop cmp xchg fwait test cld add and inc dec fistpll mov and insb stos cmpsb add ret pop rorb dec lea mov mov test ljmp jnp sbb jne es aad std xchg sbb dec fsubl mov pop mov dec cmpsb lods adc adc lcall pusha (bad) push aaa fstpl jno jnp mov fbstp sub sti ror add xor mov cmp mov jnp stos outsl and mov scas orb xor fdivrs bound es aad jg pop pop mov adc and xchg div cmp mov jcxz add mov or pop push pop sub cmpsb aaa or mov jle mov lret adc pop cltd push scas xor (bad) push jb js sti adc gs inc (bad) shlb mov mov xchg mov lock insl scas jb outsb mov sbb ret sub (bad) push sub push ret xor xchg cmpsb cmpl pushf mov in lret and sub fiaddl iret (bad) movsl imul loop jae fildl outsl int3 cmp push jmp frstor outsl popf ja and mov pmovmskb xchg jmp idiv lods outsb xchg (bad) outsl pop icebp in xchg popa aam imulb jmp cli mov js in mov mov push test mov fbld shrl in cltd cmp dec ja ss inc xchg add test popa lock sbb (bad) repz jns lods sub or popf jmp addr16 or js repz jns jbe push xchg subb es pushf push sahf pop (bad) test ret imul mov fs add adc jecxz pusha inc mov repnz mov mov xor fcomps xorl and (bad) and sbb sub cmpsl cmp jge in test cmp inc and pop mov dec xor pop (bad) mov add insl mov in cmp mov sbb sbb (bad) icebp movsl out dec lcall repz jo mov scas dec mov xor (bad) sbb xchg xchg add sbb movsb mov dec mov xchg hlt icebp ret xlat scas (bad) jp hlt xor fsubrs pop ljmp enter dec mov loopne hlt lea inc mov test loopne aaa xchg inc rcl scas mov adc sbb sub adc outsl adc (bad) data16 dec xchg inc jg subl mov or sbb dec jge push sbb mov mov outsb push mov cltd rorl mov pop gs ja add inc xor gs movsb (bad) xchg mov or loopne popa dec insb push cmpsl fwait and cmpsb mov sbb ja stc js push xchg sbb or mov pusha ss push xor ret jne ds dec sbb aas scas pminsw (bad) std mov mov xor sub and ss sub dec xchg icebp in or xchg adc out les mov mov inc mov sti neg mov push leave into and pushf imul into mov adc (bad) lock mov inc add sub ret or int (bad) (bad) lock push out adc jbe aaa jne imul fstpt movsl and adc mov sub imul and scas cmp mov sub scas mov xchg out mov cmp (bad) call js pushf into popf jp sbb inc js ret aam dec or lock das iret mov mov jb xor (bad) jno into lret push (bad) xor pop cwtl cwtl jns push cmpsl push jb cmp pop sbb xchg rcr popf mov popa sbb push pop lock cmpsl stc sbb pop inc fnstcw xchg (bad) call pop jns bndldx bound pop movsl fs nop iret cmp aad rorl mov sbb sub aas jmp mov pop push movsl dec xchg fdivrl lea or xlat jecxz (bad) and push hlt sub add add clc decb (bad) xor in popa add scas das dec popf xlat add add mov cs outsb int3 cmp inc add mov xlat test outsl inc mov test pop js lea fcoml jae sbb imul daa xchg adc (bad) pop fwait sti imul fs push adc push sub call push out fsub jne ror and mov or ret xchg (bad) outsl fild cmpb mov sarl sbb xor xchg sarb mov notl fldcw xchg push adc sbb and push push push cmp push mov mov stc popf mov lock outsl dec mov mov std mov inc dec cld pusha adc mov lock inc lret lods jecxz pop sub leave dec (bad) iret or cli mov lret lret jne,pn fdivl jg jmp mov loopne xchg cmp sbbb insl sub or lea mov in add (bad) lret add pop add xor mov jle gs mov popa in jo imul cmp out push mov lret pop lret scas mov or ljmp inc addl js ret sub lods mov je jge in ss gs outsl lcall fisubrl das xchg push or adc mov jg xchg rcrl sar xchg enter push pushf push xchg aas mov scas sub test lret adc fistpll push pop cmp repz dec xchg and inc insl inc and push xchg push pop fdivrp ror addr16 mov stc and push cld adc mov jb or rorb fisubl jno sar cwtl or insb int mov xchg sahf or mov xchg cmc jbe jp fidivl push push or jb popf mov sbb fbld icebp stc ds dec clc push push shlb sahf js stos lret movsb mov add pop (bad) jns sbb mov mov xor inc fdivr mov xor pop mov push testb sbb fcmovbe in dec mov lock or loopne lret mov popa sbb sbb or cltd push jno adc push push or nop jmp scas mov mov fcoms in (bad) inc add mov hlt or mov jp test dec inc mov (bad) jno pop loop push mov inc sahf sub aad out pushf push xchg xor (bad) add cmp in inc pusha sub push (bad) movsb pop push pop mov mov cld incb mov or call add das dec sub push aam dec pop fldpi lret push pop out subb fist aad or test inc pop sub shlb add loope gs fldl and outsl out adc stc aad sbb mov push (bad) mov cmp ds inc dec movsl outsb pop (bad) shrb data16 or mov fs sti (bad) lret xlat test test shl mov xchg mov push pop mov insb or xchg (bad) jecxz jmp push inc and arpl mov push shrl int3 lahf xchg loopne or popf (bad) jb dec mov sub jmp pop and xor ss cmovne sbb stos sbb pushf mov pushf mov sub test pushl testb xchg cltd and in testl iret stc jno in icebp add cmp and loop in lahf xor clc pop nop push pop mov insl lds and jns fwait cwtl xor push mov mov fdivl push adc ja pop dec push ja pop jae or add adc jnp sbb inc lods imul jg dec xchg lods in fwait ja pop xor xchg xchg cld cli xchg or cli les push adc inc mov dec lret cld push test fnstcw or testl inc mov fnstcw movl out cmp xor inc cs xchg push mov and mov add cmp mov (bad) dec inc fdivs in scas and popf movsl jg in jne or push pop ss xchg xor (bad) sti stos (bad) mov ja mov mov mov je das mov mov pushf das mov shll mov ja add int xchg enter pushf imull adc loope sbb rcrb jecxz sub jns or xchg rcr fcoml ds in cmp cld inc jo (bad) pop dec dec out pop (bad) mov test addb adc lock add outsl mov sbb fdivp clc jl test sbb or add sbb xor in mov test (bad) add inc insb inc push add cwtl jns out fucomp lods add push adc jl insb pop mov std xchg movsb xor mov pusha lods imul rorb sub hlt mov scas lods pop adc rorb push inc (bad) icebp gs push xor jl dec sarb add mov out mov dec add das int jg into cmpsb push sbbl cmpsl pop lods adc jae adc jge in outsb add mov push mov cmp in add mov push das cmp stos push xor push pusha mov (bad) jae div mov stos mov or cmpsl pop inc mov mov (bad) aam dec adc adc adcl mov inc mov (bad) std lods lahf push mov fidiv inc les cmc mov int or mov jae sbbb lcall shlb imul hlt incb mov cmpsb push scas adc mov es mov movsb or repnz and popa and sbb insb mov pop aaa inc mov or pop ffreep in pop sub xchg xchg int3 and cmp dec clc pop inc outsl dec stos mov divps push push jno test lcall dec std ja push shrl and lret mov jl fs mov inc inc xlat hlt jmp add lret negl xor mov push jb or push ljmp cld or movsl pushf out cmp inc cmp out jnp nop scas cmp mov and and inc mov imul cwtl aam rcrl ljmp sub mov mov push lods mov add xor lods adc mov cmp insb mov lock call ja jmp ret or jge mov lods shlb mov pop ret xor push inc push shrb mov sbb adc jecxz pop mov push push xor bound mov rcll jge rolb push jge fildl (bad) mov adc xorl ljmp es xchg aas jae lods in popf les fbld inc (bad) sbb aad mov xchg mov imul lods add stos xchg pop jae mov mov and mov cmc jno inc and mov add and sbb or jge daa fiaddl mov pop pop out xor into cmp jmp add push sub scas adc jge imul sub mov mov stos mov shlb popf and incb push sbb pop (bad) js lcall or push fucom fs movsb out mov and xchg cmp xchg and mov call jb insl sub in in xchg (bad) xor inc int3 xlat insb fiaddl inc nop cli cmp adc daa (bad) mov (bad) xchg mov fsubrs sub xchg (bad) inc outsb fistpl inc stc xchg nopl add hlt push adc sbb std mov jg fsubl lcall cmp pop jecxz cli mov imul insb push xor frndint sub mov sub rcl out out jl iret mov cmpsb or repz daa and mov sub add (bad) cmpsl xchg stos xor fidivl out outsl cltd mov test add in push fsubs add inc push pop dec fnstcw dec push out dec outsl sbb inc imul mov shl mov scas mov and push pop (bad) leave out call push in loop orb push lret cmp enter and lods jnp (bad) aam sbb mov xor dec mov xor adcb mov mov dec mov test jl push test fidivrl cmp dec shr addr16 jae sub pop fs jl mov push leave das xor aad xchg pop push imul out and lods stos lcall jge adc out mov arpl test mov xlat in mov call cmpl out cmp jecxz cs sub mov add dec push add xchg sub cmpsl jecxz out insb dec push aaa test xorl aam inc lret loopne test push lcall ret inc ja fwait xchg sub test hlt and mov sbb cmp add loopne lcall mov lahf cwtl es (bad) push es mov scas dec dec pop out xchg mov inc inc lods push insl sbb xchg xchg fcomip sbb imul enter test mov sub sar outsb and mov data16 inc sbb xchg (bad) jmp pop or sbbl outsl mov test push inc inc fwait xchg and sbb aad lds pushf gs fdiv mov int3 lahf xchg cmpsl add ljmp xchg fs push dec pop imul pop fwait mov dec lcall mov cmp add adc cmp mov mov dec mov sbbl in rcr add xor psllw daa and xor jp cmc add movsl cmp mov inc push add jl inc mov cmp jne lea sti lods pop push sbb sarb ret xor sbbl pop xor pushf jp sub mov (bad) (bad) push pop sbb xor add loopne test ds das out pop in pusha test aaa daa cmpl jae sahf hlt stc dec xchg das cmp (bad) pop mov jb or addr16 xchg ljmp mov jbe divl (bad) repz fwait adc sbb in scas mov notb push out out mov loope mov adc lds jmp imul jnp add sbb popf bound sub mov repnz loopne andb aas in jl and push test adc flds cld in mov push pop jmp cwtl inc jmp and jo fwait dec fnstcw (bad) arpl push pop push into sbb mov (bad) fsubrs ja stos pushf add (bad) insl dec push jg (bad) (bad) jno mov lcall mov jge push or fiadd mov adcb cltd sub push jns cli (bad) cli fildll push jl push mov xor and imul sbbl movsb fwait icebp rcrb push jnp inc inc xchg shrb lahf xchg xor sbb rorl sub imul inc mov mov movsl push jg inc jbe ds add adc aam dec test stos xchg pop sbb xchg dec ds mov xchg in js and out outsb dec inc pop aad xchg mov fsts and movsl xchg xchg int and stos dec mov repz je loope stos inc call flds push pop outsb mov daa aas and pmaddwd mov lret in ss gs pop sbb xor mov std fmuls adc pop je pop jp pop xchg pop lds aad xchg pop stos add in scas jp mov aad mov les xchg std push xor (bad) aas mov lahf lret jge (bad) ljmp addr16 xchg mov jmp mov and ljmp mov int3 or fildl adc cmp cli dec mov ss aad std and (bad) test sbb nop pop ja xchg jb mov xor xor cmp hlt push fimul fdivs movsb mov mov or inc mov ret mov push sbb inc dec call not mov mov negl inc cmp (bad) push adc test inc mov andl jecxz int xor pop cmp add addr16 xlat push mov stc repz lahf fwait xchg inc pop add push jmp xchg adc sub test in inc test sahf (bad) loopne inc lahf and push push dec jle add (bad) push (bad) gs aad jbe out push cmp xchg xor xor sarb ret cmpsb mov pop add mov xor bound jle int3 push mov sbbl sub adc shlb addr16 (bad) add jno leave mov iret dec fdivs movsl mov jl,pn test jns lods int3 push push popa lret push sti or mov jne or data16 jl rcrb dec sbb pop ja cmpsb push push xor repnz mov pushf outsb or popf in pop (bad) subb insl loopne sub cmp fstl sub xor cmp cli adc test cmpsb adc fnstsw adc push fmull cmc aam jl call cmpsl loope int3 inc mov mov std and addb sbb xor cmpsb aad imul xor add jg jo and push int imul push pushf aaa fs fnop es sbb sarb cmpsl dec dec jge stc mov xor fidivr jle sti jmp dec cmp sub pop mov lahf mov xor cmc push ljmp fcmovbe es jle sub adc out pop add and xchg push jno es dec lods xchg dec sbb pop ret cmp push push add mov shll add fnstsw sub lods dec call xlat and jle movsb mov add pop xchg pop fcomip mov push cmpsl insb push lods inc cmp add enter jl cmp fs aam push test imul mov (bad) lods fs mov ret jns and pop push rclb jp pushf mov test pop ja adc inc sbb mov es sarb mov fwait mov add shlb pop ljmp sub push push pop cmpsl xchg cmp xchg push mov repz (bad) iret addl sub pop outsb pop rorb popa pop rclb adc rcrl inc test mov and test test mulb and jg and inc repnz pop out mov pop jns out push outsl sub jns fistp mov add cli dec xor jno test imul inc (bad) stc mov jmp lods sub (bad) repnz adc mov sub xchg xchg add fsts repnz cmp mov dec pop add pushf add push pushl (bad) push push setne (bad) xchg mov iret jmp ljmp jmp add jne add sub in lods and xor call mov cmp inc dec and out sbb adc sub pop ss adc mov mov cwtl js cmpsb sub gs fcmovnu push push mov pop mov mov ds pop sbbb inc jne aas and stc and pop cltd push xor std addr16 xchg les sbb xchg mov cmp xor adc cmp orb es inc inc push lods cmp push test xchg mov movsb mov xchg in or push pop lret pop add stc pop inc daa into jbe jae fiadd div xor call or out nop roll test push inc stc dec inc jle nop test sub je and cmp pusha push out inc in dec test mov jbe and xor or pop sub sbb jno mov mov sti cltd out scas int sarl outsb into xchg mov push or dec and push mov cmc hlt jb dec punpcklwd jb aas mov jo mov mov inc lods add mov pop adc leave mov add sub xchg fsubl out fimul jb out je je clc xchg and fwait das lea (bad) jmp pop cli hlt mov jbe adc loopne jecxz and ret jbe lret cs cmpsb mov or mov inc inc dec (bad) jle sbb and roll push fwait divb lock jmp push rolb mov pop insb push mov inc cmp popa cld popa test arpl pop fs push xchg mov out vmovntps mov pop and mov out enter jnp loopne xlat lahf int loop lcall popf clc (bad) mov adc popa lods cs add (bad) aas les mov push xchg pop pop add add add insl hlt imul add sbb lret hlt mov push scas inc lret mov sti mov cmp leave jns insb fs sbb inc sahf (bad) out xor sbb xchg insl loope jnp lock (bad) mov pushf mov sub mov sub jno sub mov adc push mov js adc inc sysret shrb mov sub adc and je add das negb mov ss add pop ror jle jp mov add scas mov sahf mov js fbstp inc jbe mov iret stos sub xor (bad) nop stos scas lret dec in (bad) aas mov dec loopne and dec mov mov jb sub cmpsl lret in repnz sarb mov fildl in stos mov and mov xchg hlt xor outsb es dec cmp xchg cli xor insl je lods roll add jne inc mov sbb call outsb xor mov jns mov out push rcrl (bad) (bad) or jbe adc mov and mov sbb jns and enter add or fisubrl test xorl jle inc adc sub insl mov pop out xchg mov mov neg testl pusha push out and or inc loope aaa lret cmc mov mov jne xor addl lods mov fisttp fidivr inc stc sbb mov and rcll movsb aad mov jl push mov aas (bad) inc call sbb fdivrs dec in xchg add fidivl and gs fldl push mov cwtl je daa lret mov pop jns and push sub mov mov movsb and je and adc fstl push fstpt call adc add enter pop pop scas push cmp lods and inc xchg test (bad) add cmp jo or pusha in mov mov mov arpl jle inc inc push mov dec incb jne jno add (bad) je push xor jb xlat adc es (bad) notl xor fsts ljmp mov cmovns imul adc aas outsl in lea cmc and mov mov inc dec notl inc outsb push inc or mov mov ficompl movsb repnz mov (bad) out dec insl sbb cmc aas call into pop fninit sub cmp es or std pushf les jg and pop or (bad) (bad) mov lahf xorl xor in jg cmp clc push ret repz xor pop push test data16 and sub push int3 add and mov mov xlat push adc je nop ja inc cmpsb and fsubs imulb push pop popa (bad) cmp in enter or mov and out daa sbb scas lock icebp and cmpsb loop push push mov sti stos imul lcall sbb cwtl in jnp jne jb (bad) clc sbb xchg mov test cmc lods les jmp mov outsb je mov pop mov pop cli xlat sar jle cmc sarb mov out rorl enter jmp scas cli mov dec mov repnz inc fsubp dec nop cmp es inc js inc scas enter scas adc add js mov stos testb aaa addr16 sarb aam cmpsl addl incl add pop push ret inc in insb aaa aam dec ficompl cli lahf ret jmp loopne jmp (bad) std jl (bad) int out call push in outsl mov sbb inc in loopw lret gs test inc push pop add adc xchg jno push mov fs call (bad) sub jg (bad) std jle outsl or mov (bad) mov pop aas inc gs and dec outsb jmp daa ja mov adc andb icebp orl xchg bound xchg ss mov testb lds adc cmpsb inc push sahf aas inc and jge pop inc jnp mov aas cmpsl cmp (bad) imul mov cmc lods pop or repnz cmp fcomp xor loop bound fwait push out mov cmpsl push sbb push inc xor je sbb lcall mov rcr lcall sarl mov loop aas fstps fsubl jbe xchg mov loope adc ja fsubl cmc pop (bad) and push adc cmp xlat push roll jne aad xor popa cmp inc in add jl add int mov clc (bad) sbb movsl pop scas push aam (bad) popf sub fsubrs sub or xor into sub lock xchg cwtl or sbb dec pop add (bad) cld xchg xchg and iret mov icebp fcoms ljmp gs mov pop adc lret mov jae lods or sub jbe nop mov in (bad) aad stos inc xchg insb aas test loop jae fsts pop inc inc or adc and por fild pavgb rcrb (bad) xor outsl leave push bound pusha rorb push nop je sub push out mov lret (bad) pop mov sbb stos xchg clc (bad) (bad) stos lret add mov jae outsl sub and cmp sbb and and outsb xchg jg fiaddl shrl jge mov adc dec dec add mov inc jnp push push cmp jl sti pop fisttp sbb push divl and out mov push mov jno aas xchg clc sbb xchg lods push insb lret sbb jno push out jp lret mov aas outsl mov das adc clc cmp jmp mov or sub add pop xor jns lcall rep xchg aaa xchg (bad) clc cltd cmpb fstps mov rol iret add jmp in ss stc xor out mov pusha fwait mov sbb ja ja mov sbb faddl stos xor stos mov sub lods add je dec and in scas outsl sbb imul mov (bad) and or addr16 push leave mov test pop outsb sub xchg fsubr test imul jmp pop fnstsw inc shll int3 push int mov pop mov mov dec ficomp daa xlat pop add xor ret lcall aad mov ljmp mov add scas mov or inc mov jnp pop cmpb incl lea jp cwtl gs push movsl (bad) xor jns pop sbb xlat push mov movb repz lcall rcrl imul ret or mov mov dec (bad) dec leave mov dec test xor sbb inc cmp rcrb imul lods cmp cli pop mov mov jnp (bad) sub lahf arpl xor enter repz pop cmp sub mov pop mov rorl inc rorb mov cmp push and jno jb add mov mov idivl xor push pop mov xchg mov adc test fsubrs addr16 sti push pop xchg bound xchg xchg add xchg addr16 sub dec or add std into push lahf mov (bad) push (bad) (bad) (bad) loopne mov repz mov sarb nop mulb daa js testb out dec sub shl sbb or fnop pop dec jg out pop pop sub imul rcl fs outsb mov rcrb cmc arpl ljmp add dec popf in add mov adc fistl imul out popa jge inc and mov push int3 gs jbe repnz xor daa jno mov cmp dec mov jno sbb and leave xor fild ss cmc and mov loopne int ds aaa and (bad) les add jne (bad) movsb mov rorb fldenv cmp add pop push pop ds mov lahf sub jl bound add cltd jne inc loop lahf mov and sbb (bad) int daa int sahf xchg and std dec dec fcmovb les mov xor ja (bad) sub sti or out sbb icebp mul mov enter (bad) in (bad) xchg mov insb stc pop test imul cli (bad) scas into push jae mov or test cmc int repz and mov insb lods data16 and es pusha mov mov cmp stos fistp and insb mov (bad) cmp jle incb loope jecxz ljmp cs das loopne lods outsb mov inc xchg ds mov nop in aam jbe and jb xchg mov mov shlb mov mov add lcall or xchg jne sahf out mov test cwtl push lods cmp pop mov pop and repnz stc cmc stos jl fadds sbb lret arpl sbb lds inc clc mov xor mov xchg xor xchg pop mov xchg mov cmpsb test push lds sub cld inc dec jl imul jb or sbb add fisubr pop push loopne sbb pop sarl movsb ljmp push mov cmp push (bad) rcrb adc jb inc test mov jg roll mov xchg dec jl inc adc pop xchg movsb (bad) mov imul arpl jp mov and test lcall xchg mov les lret cmpsl sbb out dec jge and mov mov push (bad) lods adc gs jecxz add lahf add dec (bad) mov pop mov shll cld jmp es xchg xchg fsubrp je out jmp xor sbb dec xlat fucomip repnz lock push push push repz mov (bad) pop and stos pop pop xchg std jge into gs dec mov es adc xchg ficomp loop pop adc xchg (bad) pop andb call hlt imul out flds and xchg xchg cmp mov scas add in mov js pop inc mov neg mov outsb stos sbb xchg je in mov les subl mov mov sub cmp popa lds xchg clc bound mov add imul ss lcall aam sti aas pop jmp (bad) (bad) jae cli int jecxz jo ret popf loop sbbl pop or into cmp inc mov (bad) (bad) pushf hlt insb addr16 mov out sub xor jge dec imul dec rclb mov jno jo dec mov push addr16 pop rcrb in lcall out fsubrs pop lahf xor adc fwait push ret addr16 xor or cs nop push ja in mov stc ljmp dec inc jno xchg mov in aas push or das mov fwait xchg pop imul ss movsl xlat (bad) dec jle stos enter dec sub das mov loopne adc insl shlb pop cwtl ljmp lahf push xor mov dec test mov aad sub cmp dec ss movsb push dec fisttpl xchg sbb mov mulb loopne outsl pop xchg inc jmp push sub fisubrl (bad) icebp jecxz stos movsb inc dec insb inc leave (bad) test rcll dec mov push xor and aad leave popa popf dec arpl lods lcall xchg nop divb decb jp mov js mov out test mov mov in rclb xchg add mov jl and adcl leave cmc jnp (bad) sub test sub adc aad aaa in icebp bound nop ja push mov mov push mov in je lock pop jl xor or imul jg (bad) loope iret aam mov xchg xchg arpl adc adc (bad) pop jnp negb mov jmp (bad) xor pop push hlt daa inc out push lods repnz jle jmp cld outsl mov loope mov dec sbb cmp sbb inc cli add clc jae sub neg pop cmp mov lcall pop rdpmc push (bad) inc outsl or (bad) cmc xor pop cmp adc jbe sbb mov mov sub ds test mov roll pop inc mov xchg jo push lret cmp movsb rorb sub jno test jns sahf sahf orl sbbl notb movsl xchg push aas push aas frstor mov imul jo fldz mov lods push scas dec pop outsl sbb in fcomps pop test cli insb ret mov push push or popa loope ss aaa xchg sub je rcrb loope sub inc fsub fisttpl dec hlt add outsb add icebp shll inc add mov mov pop test push loopne movsb sub rclb jle mov xor and jmp sbb in sub push cmp mov xchg movsl aas bound mov jmp push pusha add inc xchg mov insb ror push jb bound je aam fiadd popf movl stos cmc mov jg sahf inc test in pushf lods add cmpsb lret cld dec roll ds mov cmp mov fstl lea mov add and push negl pop cmpsl iret incb sub repz mov cmp inc and (bad) cld cmp jb (bad) fnop push mov es ss sarl pop mov rclb adc xor lret jns int3 jmp mov mov xor (bad) idivb mov jae and fs fcmovu fstp jae dec lds pop cmp clc jns push push sbbl mov lock mov push outsl das imul out add mov dec mov outsl outsl dec sbb hlt das pop mov rcll sahf sbb sbb (bad) mov mov idivl mov sub popf arpl or sub mov call ds xor add movsb jecxz imul pop jmp or push enter lret add into mov push out jno bound fcoms mov or loope (bad) push cmp adc les mov dec and mov push dec inc and push stos jp adc and lds dec dec add adc sub (bad) je xor add jp mov je xor jae adc xchg jp in fs and sub icebp mov addr16 adc mov (bad) sub ss sub stos sbb or imul pop cmpsl jbe xchg fs pusha adc cmp (bad) mov jae ss fldcw lcall popa aam pop pusha outsb test pop aad mov push cwtl mov jle icebp aad adc stc mov or faddl push sbb push dec inc lds jae bound hlt ljmp add scas test mov mov pop push in addr16 lret mov sarl mov xchg inc lea std iret std lret dec (bad) into lods push mov inc in ret imul pop imul mov test int mov lds fs cld xchg mov push data16 sub and xor add xchg fidivrl xchg sbb cs jmp mov and flds lcall or jbe fs insb jb call mov xchg pop daa mov dec jl mov xor sub out fbld int sub gs rorb fucomp pop aaa gs shll add xor push dec xorl scas cwtl stc cmp add jge push sub xor loopne jo std icebp mov sbb sub hlt scas rcll adc xchg loop jecxz mov jle (bad) insl fiaddl dec and fwait push ret and pop inc mov js dec xchg pop inc xor pushf loope cmovne test and int3 push sbb clc dec out and sbb mov insl aad push addr16 mov and in jmp adc (bad) int3 (bad) frndint pop cld sub sbb rorb and push push movsb xor jns fsubr adc enter pop cltd push sbb pop pop mov mulb pop add sbb push sahf ret cs mov cs sbb test cltd xchg cmp lock gs gs gs in jmp jae in fs jmp cmpsl push (bad) (bad) shr lcallw cmc push mov xchg adcl mov sbb sbb insl add gs in mov jge (bad) mov push inc outsl fnstcw push mov roll sbb mov cs imul jne xor jge lea fs adc push dec pushf inc js out push mov repnz out arpl push push out push xor dec xor inc push pop int3 jp or mov int push add lock out fcmovu lods call imul cli addr16 outsl ja cmpsb stos or mov or shrb xor push popa arpl das push addr16 cmp push adc sub and test rolb lahf sub xor xor and xchg fnsave andl xchg rol sbb (bad) in and popf mov (bad) jge pop outsl imul cmpsb inc jo jg loopne adc sub xchg ret jno inc add adc pop repnz xor mov (bad) rolb push in push push scas inc mov stos mov sbb outsb sbb and ret inc mov in dec xchg repz inc jg fisubl icebp mov fstl addr16 push loop jecxz subl test lods fstpt sub pop or ret sub mov mov outsb sbb out or inc mov mov enter xchg in pusha xor cmp movsl lcall add loope (bad) ds insb movsl pop jg adc adc cmp inc inc jne popa test je ret sbb nop in xchg dec lods jns int les cwtl cmpsl inc repz pop aam push mov sub arpl xchg pop mov push sahf inc mov (bad) ret cwtl popf sub adc imul or adc cmc leave loope jb push mov or iret sub jle sbb (bad) scas data16 xor cld and loopne mov push imul data16 cltd mov xor sub bound mov adc mov xchg lahf xchg sti cmpb or jl movsb (bad) mov or or mov fs dec xlat mov xchg or cmpsl or out or cmp (bad) (bad) sbb insl xor das cld push and fstpl xlat add pop hlt fidivr inc imul addr16 fwait testb jnp lods mov fs mov out pop pop dec jecxz ljmp (bad) hlt shlb lcall int cmp out jb mov (bad) loope push imul push mov daa leave clc jno daa repnz js mov inc (bad) xchg mov loopne aaa pop mov out push sub push push mov mov jb jnp xorl pop (bad) push mov pop bound roll out mov aaa dec rcll xorl sbb inc or xchg sbb xorl xchg jbe cld movsl adc add push test push jl cmp push data16 cmc adc pop push hlt into adc ret pop (bad) jp xchg outsl adc mov mov mov aas inc js cmpsb inc sbb in stos stos and stos sbb and sti dec mov shl leave cmp stos lcall (bad) fnstenv insl dec xchg ds fdiv aas mov xchg cmp adc dec sub shlb (bad) jp sbb push mov out dec jmp lret or push (bad) xchg in xchg add and cmp andl clc je cmp mov daa icebp jp gs pop push jg or ss fs push cmp sub cld fwait lret mov cmc lods mov xor subl xchg movsl inc std lret and mov mov cmp in outsl jo rcrl jg ja jno xchg lcall iret xor iret aam sub or jno fwait lret sub adc mov call and xchg pop sub or lea out lret scas je inc xor jg xchg dec sub cltd int3 outsl adc lahf hlt push decb (bad) xchg fcomps sahf and cmpsb jmp jecxz jp xlat leave dec test out push (bad) mov adc cltd aaa sub dec pop mov push out mov ficom ret es stos lret popa loopne mov sub xlat jmp (bad) ja (bad) xor dec (bad) in test rorl cmp bound jb popf mov sub ret jle incl mov cs and call in sahf add lds cmp fwait adc lcall addr16 sahf push sub xchg imul and sub (bad) fstpt data16 (bad) mov dec pop fiadd xor sbb sub mov xorb mov adc sbb gs cmp sti push sti xchg fdiv out jbe das cmpsl jle xchg icebp out push iret pop dec and cmp lods test movsl and jbe movsb or pop cmp mov mov pop pop sahf (bad) mov int jle jae pop (bad) sub pusha push push and adc clc lods scas jns leave sub add fwait cmp and mov sbb (bad) jae xor mov mov sub mov jle mov enter in xor out cmpsl inc out aaa pop testb inc ja gs inc subl mov cmp xchg and stc sarb xor imul gs cmp fs out or xchg pop lock arpl (bad) imul sbb pop dec inc fist xor gs lret adc es mov jg jae cwtl icebp adc pop mov jnp mov aam mov popf clc idiv pop cmpsb add push and adcb dec mov dec inc (bad) pop mov aam inc cmp xchg add int3 sbb enter mov jg xchg xchg push test inc jl jle (bad) loope fmull xchg (bad) or sub inc cwtl inc insl movsl push push push push test adcl xchg sbb adc adc add fcoms adc pop imul sbb push mov popf stos cli add inc ficompl mov sbb mov pop aas cmpsl push pop test sbb add mov add mov mov int3 aas push dec mov outsb push dec sti dec pop insb lret pop cwtl ret jmp fiadd andl mov mov sbb and xor popf push push sbb mov sbb test icebp insb cwtl mov js outsb je xchg xor xchg jmp pop pusha lods and stos imul sbb adc int xor fcomps xor push mov jnp fisttpl outsb jne inc pop xor inc mov fldcw push lea adc (bad) fucomp insb std loop sbb fldenv fimul pushf sbb mov xchg inc dec popa in data16 stos enter add xor push pop mov fiaddl repz dec and mov mov sbb (bad) xchg in pusha cld mov fwait leave mov clc sbb fidivl data16 fstpt mov sub cwtl and push and lods adcl mov push jb test aam fisubr push or mov dec pop call pop sbb xor xchg aaa fwait iret xchg push frstor mov insb test (bad) cmp punpcklbw sub loop cmp cmpsb repnz jl or movsl jne xchg push xchg stc jl pop cmp lcall lcall (bad) loope jne sbb movb lret dec loop imul scas dec or mov gs mov addr16 lds pop push in adc dec (bad) jo movsl adc adc xchg loope push ljmp mov bound mov push jb adc mov or and mov das es inc (bad) scas xchg sbb jns mov xchg ds mov push adc xchg testb les les dec sub inc add hlt inc jbe push mov and mov adc mov test and or iret pusha test into jp inc mov cld pushf sub aad inc mov lret xor mov in notl jg adc daa nop lcall test pop push (bad) in mov jge add aad adc out xlat movsl ljmp adc dec fadds inc ret and push rcl add xlat or inc call lcall inc imul sbb push push push inc add loop scas movsb insl push push and aad hlt inc xchg push leave xor inc or arpl lods fnstsw add adc (bad) cmpsl test fsub mov mov mov add cmp pushf (bad) mov add jge mov ljmp (bad) jmp mov (bad) stos mov pushf pop fsubs or jnp addr16 stos arpl popf lret popl adc mov jb mov or xor and fbld or ret vucomisd adc push adc xchg xor pop sub outsb pushf pop inc pushf aad popl mov lcall lods inc mov bound cmpsb or xchg fisubr mov jnp mov push pop aad aas dec cmc iret jecxz test popf add sbb xor xor iret hlt mov sub and mov pushf pusha xchg test dec jg xor test je scas fdivl rcr out aad ja sbb add pusha sbb or push sub sub or push cmp iret xchg lret std pusha cmp push fstpt or dec lods or test (bad) sahf add pop mov test push cmp dec rep dec pop out mov push cmpsl and inc fmul (bad) (bad) mov cmp rcrl pop outsl pop push lods gs or pop shrl and or fcmovne and fildl sbb (bad) mov mov mov push lods call (bad) dec sbb sbb push (bad) pop cld movsb and shrb (bad) lods xchg push pop jge out mov pop cmpsb jg rcrb lods scas xor push sbb mov cli mov in into ror xchg adc xchg dec test inc xchg mov mov xchg in icebp andl call adc es xchg out mov fadds fdivrl adc adc (bad) repz xlat xchg testl jae (bad) mov mov lahf sub push add mov adc shrl out cs pop test ljmp dec rcr xor jle inc imul adc fwait out add jns push repz flds inc outsl cmp movzwl pop pop add mov xor or leave rep mov mov ja repz xor and jnp sub test aam lock (bad) shll mov ds or leave push neg insb xchg mov mov test (bad) into fisub dec mov sub aad jecxz jp lea push int xor stc sti inc jecxz sub and test push ret add loop mov mov mov push das mov enter dec cwtl inc jnp push mov mov je push mov call int3 adc adc test int3 push adc jmp sbb es ret fstpt push dec jne rcll adc (bad) out call lock test mov sub or adc sub inc test dec add imul push pop push inc fwait js sbb lods pop push mov fsubl insb lods in push mov aaa push or fisttpl (bad) sub mov or dec jge or ror ficomp push jnp cmp (bad) adc pop mov xlat je add repz mov sub push ficom xchg and xor pop jns mov mov and dec mov loopne pop adc xor in sub cltd jp pop cmp mov cwtl inc push cli adc adc push pushf mov xor add xchg insl je pusha dec enter push mov sbb aaa cmp cmpsb pushf into push pusha fs rcrb mov adc and shl push cmp sar enter lods push es jl add inc xlat cwtl push scas loopne sub iret cmpsl mov lods lret cmp fistl cli sar inc mov arpl lcall inc int sbb rcrl inc adc dec ljmp gs outsl cli out cmpl mov std (bad) (bad) ficom push nop popa mov jo ficoml and cmp jo dec movsl jns xchg dec and sbb pop imul sbb rolb test inc fdivs dec dec add sbb and lods xchg and jb stc mov aaa jo fcomps add and fsubr clc sbb out rdpmc dec fcompl test das cmc inc stos stc leave jl fildl pop jmp push sbb xor jbe jo dec mov cmpsl jns pushf imull or add (bad) in iret dec nop mov dec insb rcrb out pop popf push jne ret fisub inc pop cmp cmp pushf sbb aad or lods inc or adc cli push xor cmpsl in jne,pt rorl repz xchg gs insl push xchg mov and pop mov sti repnz call sbbl push stos push pop xor sbb and (bad) mov jmp push and inc iret pop xchg pushf fist cltd jl xor jle add stos sbb sub fildl shrb enter sub (bad) outsb jge cmpsb xchg adc out dec jae xchg decl cmp subl mov push add (bad) imul and sub and dec rep mov push fsubrs adc (bad) or mov leave int xchg sbbb (bad) push cmc xchg popa popa (bad) test sub add xor imul jno repz jl dec in in jecxz popa sbb and outsl arpl or jl aam pop push imul fcmovnu out stos mull mov lcall jle mov addl jge jns aad pop xchg mov push (bad) mov and aaa enter add mov jae iret dec sti push sbb mov cwtl mov jl sbb in add or push mov fucom lret lods add sbb icebp mov or sub loope and jns pop xchg mov enter aas adcl nop pusha jle push mov xchg sub pop out adc cld mov (bad) sti test xchg sbb mov adc rcrb mov xchg add imul notl sarb mov mov add fnstsw shlb out dec adc mov pop dec aam push push push je int sub sub or leave sub lahf inc push cmp mov lock stos imul inc outsl jo pop int jns or out or insb int jbe,pn or pop and adc push xor test mov add fnstenv sbb bound out xlat jl loop popf push ss xchg cltd cmp out mov xchg lcall or pop sub addl cmp push test loopne out pop xor ja jne lcall (bad) ja mov outsl pop lret js iret shl xor or out jmp je mov jns mov pop lods push push add and xor test out mov adc and mov jecxz mov pop xchg inc mov or jae dec pop cmp scas (bad) push inc xchg fbld pusha mov pushf or fisttpll cmp lea jb std outsb dec mov cmp add mov std ds adc (bad) les and dec jp mov mov push push xor and (bad) dec adc xor rorb das jno addb loop bound push fwait sub fwait es jno pop imul inc data16 jnp mov pop sub stos push and cmc enter lret mov mov jle xchg or gs sbb xchg and imul les (bad) xor mov lods add push pop out jmp cs scas push and mov mov pop outsl (bad) mov cmc add sti aaa pushf dec outsb scas lods int3 xchg cmp and nop sbb adc nop aaa (bad) mov dec inc lcall mov mov movsl ljmp pushf or out ljmp in mov sub pop lret subl ret push (bad) (bad) insl (bad) in lcall test sbb call cmpsl and jmp aam aaa jnp and fcompl (bad) inc loope js mov adc cltd into mov stc add outsb pop outsl insl subb das mov xor fistpl pop mov cltd mov jo (bad) fcmovb (bad) sbb add xlat cmpsl dec cmp dec ret or out repz popa mov nop repz push cmp push cmpsl xor jge int3 inc lahf gs mov jns les mov test nop std sbb aam or lahf xchg and jg cltd (bad) xchg fildll jbe sbb fcomp mov ficom add dec into ret aaa cmp adcl dec jg sub arpl inc pop (bad) aad iret jl popa (bad) leave int xor out or cwtl mov addr16 (bad) mov and or or sarb push je lahf cmp inc inc shr xor sub cs sbb and mov (bad) hlt rcrl mov lods lret and xchg dec dec clc scas push iret mov inc fwait insl fmul (bad) mov inc mov sbb jnp fs cmpsb pop insl in mov ja or add loop inc jmp mov jno enter jmp pop rcrl inc mov jnp,pt cmc shrb xor add mov out mov and mov sbb and mov pop dec fcmove dec fbstp and add pusha das out sbb stc mov int3 mov ss adc pushf (bad) mov pop cmp or pop jmp out sbb pop int3 mov movsl push lea inc xor sarb (bad) cmc add gs mov and inc (bad) pop jb,pn jp and decl inc push mov call jne mov in (bad) xor lock mov int3 cmp inc lock not sti lods jmp das cmpb not mov call push int3 out loope es cmp jle adc sub push cmp fs mov or or sub int3 shl push popa into or jo (bad) push push cltd push pusha adc jl test fidivl jmp pop sub jp cmp mov std cmp hlt jns mov add or leave sahf or rorb and jp cmp popf repz mov xor test xchg jb xchg in iret insl (bad) and dec nop dec mov icebp sub arpl xchg or sarl mov lret loopne sub cmp dec or dec fdivrp lods stos test ret sub add outsb int adc mov xor into fwait xor sbb aaa dec cmp add cwtl sahf inc sub leave push fmuls gs mov aad hlt and cmpsl jns sbb jle int3 test sbb adcb stos xorb push por lret jae mov aad pop mov push sub mov aas out mov xchg daa movsb divl inc add loope (bad) mov xchg or gs aad ljmp or std shrb cmpsl jl jmp jl xor pop test ret sub pop lods bnd popa fldl das pop sbb add in movsl pop xchg adc jns stos (bad) xchg and push out outsb aas dec ret xchg push or aaa shl lcall es xor jb addr16 jb shlb inc mov repnz aam sbb add out push (bad) incl movsb insb mov inc ja test cmp enter push outsl ljmp add out mov stos test cmpsl adc fcmovnb popf orl cmpsb out arpl mov jmp push addr16 test mov movsl or ss stos lret rolb sbb sbb dec cltd inc lock movups sbb stc pusha push and push notb pop add test (bad) loopne or out jl negl xlat notb fdivp and xchg imul pop lahf shrb stos int inc loope notl adc mov pop lret add pop mov jns push scas sbb mov mov sbb xor scas xchg xchg mov test lea in ja mov movsb cwtl test xchg rorb cwtl fs and cmp iret rcll aad sahf cmpsb mov leave fsubs jle gs push cmpsl push mov inc cmp sbb stos mov test push pop sbb sub jb mov inc xchg gs cwtl pop in js xchg (bad) dec mov pop push (bad) gs addr16 adc mov repnz sbb pop xor or cmpsl stos int imul orb fwait pop daa out rol lods mov add data16 jp lcall je push and inc fsubl repz mov repnz repz ds lock ret inc add (bad) fnop mov dec jno loope data16 xorl pusha mov and idivl loop cmp ret and in je pop jmp movsb mov sbb shrb pop scas loop enter mov cmp sahf push mov mov cs pop dec inc cmp idivl pushf ret mov dec test xchg mov xchg pop or icebp cmp cli cmpsb out or scas cmp fs clc add (bad) mov push inc mov notb scas scas adc lods jno dec inc cmpsb mov mov (bad) pop popf addr16 jmpw pusha sub into push jne pop push cmp inc (bad) mulb mov or cmp push out sbb rol sbb insb imul roll mov lret xor fwait xorl adc jbe mov out int3 xor pop iret in fdivrl mov jl sbb jl popa push ret mov or cmp mov ds sbb dec (bad) mov ja (bad) jp,pt in mov imul push inc sub xor movsb jae lea cmpsb lahf push push mov test dec lock lret jmp mov dec jmp inc insl inc sub out hlt sbb pop ret imul mov loop mov jne in lea mull cmp xor push mov mov adc stos mov jns sub and pop xchg add loopne repz jne or pop je lahf xchg mov add loopne push cmpsb mov out sahf dec je fstl mov jbe cs push (bad) sbb in xchg dec mov rolb pop xor pop mov in jmp les mov mov dec stos in mov jl or and and jb loopne xchg dec or push mov ret push (bad) test xor enter adc jle movsb inc lock test movsb in pop push push sub xchg xchg and popa pop mov pop in or popa dec clc push dec shll outsb mov jmp inc sub cmp push fadd jb,pt es sbb jecxz popa sub dec out xchg decb or cmp sbb xchg ror sub xchg lods imulb insl dec dec mov cwtl (bad) sub jge sbb jo sub xor fs arpl test (bad) add mov repnz lea mov test pop aam ret push mov inc in sti cld movsl divb popf test jg jbe imul das movl pop mov pop je mov aas (bad) lret cmp in sbb lahf rorb in cld test cwtl and lret adc test ror jecxz inc or and pop mov jo sbb cli jmp and push repnz loop mov mov sbbl enter repz xchg in mov or popf sbb xlat pushf aas mov inc movsl out jmp xor pop push dec sub sub mov sub daa jno jb dec cwtl lahf enter inc inc cli enter sub into pop (bad) test mov sub int mov add mov (bad) xor cmp (bad) lahf ret jne pop arpl xor jnp dec mov mov incl repz jne out pop leave mov mov mov and lock sub rsqrtps pop (bad) enter mov fmull push pop jb hlt add push fmull test push les icebp aad push dec mov push cmp es in inc lods push mov loopne clc mov inc fild adc and mov movsl mov fimul decb inc sub xchg push dec add dec xchg fs daa xchg loop mov sbb push sub jo mov xchg sub ds mov pop repz xchg bound mov scas mov mov jne (bad) iret adc inc into fcomps clc pop daa fadd sbb icebp add ret mov lahf mov mov mov sahf insb aaa movsb fld insl jp and dec inc jle mov (bad) mov ret js jbe ret dec in mov movsl dec bound scas cmc fistpll movsl inc jo incb fsubr push inc cmp inc and xor pop mov xchg das jle ss mov push dec ret test (bad) sub les mov imul xor mov dec aaa mov inc (bad) in cmp (bad) mov jb pop adc cmp fwait stc mov jne scas ljmp xchg mov repz adc inc scas dec lret mov sarl xor or pop test andb lea mov adc jbe jno int (bad) xchg outsl int mov loope mov dec xchg xlat insb fidivrl je inc and out lahf fadd inc jae mov andl out and xlat mov in cmp insb inc icebp or mov ud1 sahf insl adc into (bad) xchg and or lock outsl lods xlat and mov push sub in shr fxch lcall movsl add imulb push xor mov lds jge mov fist push cmpl into add jne pop mov xor mov add dec pusha stos xchg loope xor stc sahf incb pushf cltd or inc shlb inc sub ljmp notb clc lcall mov lcall popf inc adc pop xor rol dec or test outsl ss push xlat mov mov cs (bad) or mov push insl mov loop (bad) xchg push sub out xchg jp xchg dec rcrb jbe mov out sub sbb cmpsb in push sub mov sub add adc test pop (bad) in fisubrl add gs incb cmp lods push cwtl dec push jmp xor ret call aad loope jl mov cs rcr sbb add mov pop ja sub mov and rcrl (bad) call dec cmp pop insl std cmp test fstpt cld mov ljmp (bad) test xor dec inc sub ret (bad) mov ret outsl setbe test andb ret insl (bad) cld or mov (bad) jmp fstps cli stos insl sbb jle rcrb adc cmc sub out aad jge dec cmp aam les lds sahf pushf (bad) adc roll pop xor mov adc pop test in std pop cli shr and xor lahf js in push cld xor pop std imul outsl inc mov xchg aad inc hlt and jle cmpsb out cmp adc call fyl2x push addr16 movsb adc adc pop repnz mov pop pop xchg shrb xchg paddb ja sbb (bad) fisubrl jbe inc xchg (bad) (bad) cmpsl daa in mov xchg mov das lods aad push addr16 mov test add pop jnp stc jns and push insl add insl imul push mov movsl adc in xor mov faddl mov adc sub outsl sbbl out xchg xor mov mov sub scas sbb jl es cli (bad) lock jnp inc add in outsl push xlat int cmp outsb lea jmp lock mov outsb or pop dec adc mov popf mov ficoml jne inc or or adc push mov push mov test test pop enter aas fsubl inc adc xor pop insl inc xchg ficomp jb or sarl decl jecxz rol xlat lds outsl fistp hlt cmp aam jo push dec fnstsw mov out ss lods outsb push inc movsl and popf mov clc sub mov or add lret (bad) dec stos sub push (bad) enter out subl bound aas nop lahf ds jle andb push test je dec cmp cmp sbb test nop add ljmp push fndisi(8087 cmp mov stos int3 arpl sub lods xor and paddsb pop rcl xor sub jo,pn in sarl mov adc test jp pop jmp call (bad) lret cmp pop adc out and jmp sub or mov dec movsb mov jge test pop in sbb les mov jle ja cmc pusha (bad) and push pop add add sbb mov lahf aam jmp mov push adc add rcl xor mov add int3 sbbl mov mov pop push or jmp aaa fcomps push js inc fwait inc mov movsb in les adc scas push and cmp mov mov dec pop enter jns lock cmp pop inc add add cmp nop lret addr16 aam xchg and aas andb push push jns inc push sbb pusha test mov mov imul arpl xor enter outsb cmpsl or sub jne int3 pop mov mov nop ja adc mov insb mov pop repz cltd adc xor dec push icebp popa mov jo cltd sub stc jno jg leave fdivl int test or sub xor insl mov xchg cmp imul mov mov push jle test outsl cmp ret push scas mov push mov pop outsb xor jns sbb bound es repz nop add test sti sub loopne jp mov jl dec adc dec lds push sahf xor or and bound nop lret mov loopne xor cld mov dec pop loop inc scas xchg andb rcll mov ljmp mov jmp fcomi jg xchg fstl daa and mov shl mov xlat sbb in mov adc xchg popa dec sub je sub movsb xor les into or dec or mov enter ja and dec rcll jae pop mul jno (bad) push pop mov fwait jno test add sub jns adc push mov dec adc clc stos clc hlt mov pop inc wbinvd addl ljmp in repz daa ss xor or and paddsb cmpsb (bad) inc jo es xchg (bad) push test dec dec adc faddl push sub cli sub jecxz out add pop in jo dec inc adc or jne and cltd sbb lods xorl mov rcrl shlb mov or fs jmp xchg sbb dec mov xchg or push and ss sbb add (bad) popf lret mov and jg xor test lcall jnp insl insl ss xor outsb and scas es mov repz mov dec fbld lret fstpt aam or pusha xor sub jb or arpl adc mov ljmp xchg popa inc fistpl xor inc pop jo into cltd mov xlat xchg rcrl scas aaa jmp xchg loopne cmp inc sub xchg xlat dec adc pop shr or jno aas aam (bad) in or push call pop adc out add fnop mov imul xchg fdivr push scas js lds xchg cmp mov addb push ret cs xchg cwtl mov ret lahf sub pop repnz cld mov andl stc jge lods mov lea push pop cmc or fsub (bad) movsl ret mov dec scas cli lahf mov lds xchg hlt cmpsb or mov int3 mov out rorl cs leave lea pusha adc outsb cmp fsubl (bad) loopne sub pop push sbbl out ret xchg xchg mov mov cmp and pop (bad) cmp aam mov dec lahf aas push inc call and sub out mov mov inc es jae jno aad pop push cmp add or faddl sbb out mov ds mov dec jne jbe inc lea sub lods icebp mov jecxz lock dec rol jp sub inc inc (bad) in insl hlt xor sub ret mov sub xchg fild or jge cmpsl cltd jecxz dec jecxz push movsl inc lods ds test lock into or or jecxz ret jg data16 pop popa or fucomp or pop gs or aam andl pop lahf or pushf sbb mov push mov mov jecxz int push (bad) in inc push in inc push test adc jmp (bad) jp jne lods lods sets adc sub sbb cmp lret cwtl mov add test jo dec daa hlt cmc mov scas push stos or fsubr sbb cmpsb iret inc sub sarb hlt lahf subl sti scas fs and mov mov xchg lsl subl dec fisubl subl jmp mov cmp (bad) addl in enter out adc cmc cmp jno rorb flds fstl jp sub dec (bad) loope sahf sbb pop lods inc jp jmp call and loop push sub pushf mov mov mov lods sbb gs outsb shrl sub movsb mov icebp lret lea loopne adcb rolb xchg lret mov inc inc (bad) sahf out getsec jne insb add sahf in mov cld xchg rorb in push dec iret gs mov push dec adc cmc mov add inc cmp jb out repnz inc or divb adc in inc cld xlat scas adc repz fsubrs in mov push aaa mov jae pushf jns aam dec call mov xor popa ljmp sbb adc enter cmpsb cs shrl das sbbb repz lcall dec xor aas dec xchg xorl gs adc pop pop jno cmpsl sub xchg jno cli mov xor insl xor leave jmp adc aam clc mov jmp xor rclb mov jnp enter xor cmovle inc sti jecxz movups fmul ss pop js int3 xchg out out inc dec jns fs mov icebp jecxz jno rcll cli pop popa or jns lcall mov into add sbb test (bad) outsl push mov movsl cmp xor xor pop mov xor pop push daa mov push jne mov jl push jno push xchg add cmp mov push push dec jnp cmpsl inc cmp jmp mov jle jbe push mov fbstp in int int3 pop cwtl mov or and sahf icebp sbb mov ss mov xor mov dec push out arpl pop test dec dec cmp and dec in inc and fnstcw loopne call push fisttpl std jo mov jmp or shl xor mov in loop stos cmpsl pop in jne sbb xor cmp push les lods xchg jne cmpsb or data16 jg out mov mov insl fs mov (bad) fldenv xlat adc std (bad) popf mov addr16 xchg je (bad) jg and leave aaa push and mov cmp jo lods adc fabs jecxz js jg lahf xorl sub das mov mov fwait sub add aas xor test loopne int cmpsl aam mov and and lds add xchg lods mov (bad) lods pop xorl repz out sbb and push push loopne in dec jb ficoml or add addr16 dec fs cmpsb add pop cmpsl push add js pop jbe push (bad) std push push or imul jmp hlt mov xchg inc ja cld jnp fldcw bound js xchg lcall arpl or mov (bad) imulb push jecxz nop lret xor mov and xchg mov aam add movsl int3 out std lret out iret pop mov leave mov cmp push cmp ss int sbb mov movl mov push mov and xchg jno decl push das add jmp sahf js movsb mov je push cmp cmpsl out int3 jle (bad) jmp mov dec inc jl jecxz cmp mov ror arpl mov sub adc sbb mov sbb sbb mov xchg cmp orl and inc shlb imul lock sti repnz aaa sbb xchg daa fild call (bad) sbb inc xchg call push movb mov aad stc fisubrl push xor dec ret push outsl mov xor adc in test and mov das icebp mov pop xor ror xor dec loopne rolb dec sub mov testl inc pop cmp push cltd mov ja push xlat pcmpgtw jne fcomp in rolb stos ret hlt jno adc pop fucomi pop dec repnz stc sbb sahf and xlat mov movsb pmulhw xor addr16 test sbb fistp dec movsl pop das mov sbb rcl add mov lahf lret lds xchg cld mov mov test and mov add pop (bad) mov push int3 mov (bad) jbe test sbb push dec jge sbb pushf test pop (bad) sub adc test add sbb xchg cmp pop testb insb das les imul mov and dec psraw dec push cli lret sarb stc lahf pop lret xor push dec sbb mov or movd sbb nop jne ss add movsl fdivrl sbb cmp sbb push jae sahf pop mov xchg cmp mov jp mov leave (bad) out jl cwtl dec sbb jmp xchg xchg popf and imul cltd arpl lods ficomp repz pop fcmovnu mov repnz or ret cmpsb pop pop scas outsb cmpb sub xchg inc xchg div imul sub ficomp mov xchg fnsave mov push rcl jp insl add nop out lret and sbb js pop jno incb and adc xchg outsb inc ret pop mov cmc or jmp sub addr16 or lahf or je sbb jmp (bad) push mov and xchg loopne push sbb xchg xor pushf out add fiaddl or stos aas cmp mov mov scas insb push outsb lods mov int3 jb fmull rcrl cmp bnd mov aam sub (bad) mov push lret xor idiv mov je call mov ljmp inc movsb idivb push xor xchg and add icebp ficoml movsl sub movsl and cmpsl mov and push test cld sbb xor into into lods call leave jge (bad) adc xlat das xchg or ja cs adc jge push mov pusha mov inc je adc mov (bad) sub inc repnz mov adc jbe inc sub or (bad) (bad) fcomps inc mov addr16 test and mov dec adc dec mov test in outsl lock add xchg push pop notl (bad) pmaxub clc imul xchg test inc (bad) repz push cltd xchg ja lret mov pop dec cmp jne push fwait out mov lret and popa xchg fdivrl or lahf fadds pop cmp sbb jb push rorb out jnp or pop mov xor ret repnz (bad) jno insb xchg push scas sbb jl scas sbb sbb adc mov fwait das adc push mov push add inc idiv cmpsl pop data16 xor sbb pop push loopne mov mov insb dec pop xchg jbe into outsb je roll popa mov loop push cmp fbstp adc cmp aaa fldenv out xor sub push xor or mov jno fidivl sub adc dec jb out sbb mov js gs (bad) jmp rolb pop mov pushf mov sub pop mov mov fildll mov sti jae sub dec jb aas mov sub mov sbb out xchg (bad) mov (bad) cmc pop or sar pop dec sahf sti add (bad) out inc jmp xor cmp adc (bad) popa insl in in and add test leave add imul push (bad) mov jo ja jmp push aaa js (bad) mov into add inc sub inc add jecxz xor loop push and idivl mov aam push adc dec jne outsb imull and cmp xchg out lahf incl imul xor jae cmpb fdivs movsb negb jecxz das dec seta (bad) in sahf xor and pop pop lcall pop test adc int add mov push dec push scas in lret cltd mov and and adc lahf mov loop lods and cmp mov jmp push xchg xor ja jno aas pop (bad) mov dec mov inc mov movsb sub xor jg jl jbe jge gs or jns add imul adc xchg cli clc addl in ret xlat cltd mov sub xor movsb pushf js data16 inc jo sub xchg push or repz shll jb test test mov sahf pop adc jno test push in inc push push data16 cwtl sub mov mov add gs sti scas or and aaa pop adc jae xor pop and lcall stos in repnz jb or or pop jae add test les push mov jb lret pop jp lds mov mov mov in gs add ja dec test cmc mov in cmp rcrb cmp stos pop andl shrl mov inc and jb and add adc sti jge add add je mov sbb mov ret mov xchg cs xor jnp adc orps jg jo adc outsl sahf lahf mov dec in add pop (bad) jns pop aad push int mov adc pop vunpcklps lcall jo inc xchg push pop bswap xor or and stos jno scas inc or xchg les mov cwtl jne jns shrl mov js mov stc lods pop maskmovq sbb lcall or addr16 dec add repz (bad) shlb mov outsb xchg and add dec xor add sub fistp mov out out push js mov xchg sbb outsb ret jle jno das xor js pop sub es and out adc cs xchg aaa inc ror sbb clc or add push dec jg adc icebp push stos (bad) ljmp mov int inc mov arpl pop mov mov add lods decl inc clc lahf sbb fcmovnu sub fsubrl dec mov xchg mov pop daa add mov gs into mov push mov mov jne adc in leave or test fisubl movsl add cmp fsin push (bad) xchg js fs es rorl fsubs cwtl or mov xlat addr16 mov cltd or leave push cmpl mov (bad) js out pop and jmp (bad) xchg imull sbb pop pusha and (bad) sahf jb in push push and mov lret sub cld jecxz cmp imul pop mov fild xlat (bad) xor fcmovnbe inc (bad) in inc ss mov aas xchg xchg fldl mov or stc jmp mov outsl rcl imul and lcall inc xor lret iret push jmp jp movb pop fstpt fisubl push lret enter dec mov pop inc push pushf xchg mov out mov aam cli push das outsb jg or mov adc inc inc icebp xor movsb push adc pop pop lods and sub jle adcl bound sbb sub mov jl loope fistl das dec in sbbl in xchg jns lea ja mov or gs and push sbb jmp in into mov lds jnp (bad) xor inc addr16 mov scas movsl mov mov xlat cwtl cmp or (bad) mov dec daa mov fimull es das adc jns int3 test repnz pusha (bad) (bad) ja and sti xor cld (bad) loopne cwtl int3 in fldcw movsl inc out in mov inc es mov stos enter int mov lahf push loope (bad) mov (bad) dec or xlat mov xchg jo mov xor fdivs ds imul jnp push mov xlat add imul imul push jge mov pushf daa push fadds xchg shlb mov dec lods dec out inc inc sarb iret repz jno out cmp (bad) hlt inc arpl and cmp fcomps jno mov mov xchg (bad) shlb out mov in scas movsb shrb repnz mov or insb xlat push sub mov pop cmp lock pop hlt xchg cli dec pop (bad) loopne fidiv mov sub inc ljmp mov inc mov push not ret sub dec mov dec dec enter xor aam inc outsb jbe jo adc push outsl push rclb sahf mov mov pop loope add cmp mov mov dec fnop cmpsl out sbb inc rcr movsl ret xlat mov cmc aaa (bad) add lods push sub les insb or add xchg xchg jmp ret mov out jo mov jl cmp cmp or cmc pushf je fs mov jne cwtl sub or nop test outsb sub xchg lret mov cwtl xchg adc jno or pop pusha mov cli xchg into sahf fcmovnbe add sbb sub inc idivl jo mov jo fs into xchg mov loope pop nop dec mov sbb xchg jge push push mov cmp test add sub inc add adc bound adc ljmp sbb or aas movsb adc cmp or addr16 dec fldt xchg lods lret js dec scas ss xor or mov out mov jmp xchg call fist dec jl mov jl dec jmp jae jb divl lahf add std push fistpll fwait movsb repz js adc xor leave sti out fidivrl test sbb aaa rcrl pop dec xor inc or inc jnp fisubrl xor mov add in fs popl mov jbe jns xchg push int sarl cmp cltd and mov addr16 xchg or inc (bad) mov into outsb mov and int3 sub rcl (bad) int lock (bad) fistp inc and cmpsl inc fwait push mov testl push cmp jp les nop xchg nop adc lcall mov aad je push insb push mov and or mov jecxz int3 ljmp jg loope xor mov push dec sbb cltd dec lock jb fstps xchg cmp subb iret scas cmp test jle pop sub mov sub and test imull aam mov mov xchg je mov insb push test test jae inc pop aas mov and xchg in push mov stos sub mov mov xchg iret scas adc dec xor in dec loope mov mov ficom add inc (bad) lret in bound sarb xchg out stos dec cld in pushf (bad) cmpsl (bad) jns jge leave (bad) pop ss hlt sub ret jnp sbb aas (bad) xor lahf enter mov jnp movsl lea rorb pop inc pop sbb sbb scas push dec bound repnz inc daa cmp in cmp sbb repz clc lods repnz xchg movsl or mov and pop stos stos and jmp and imul idivb cmpsl and pop sar add inc inc add mov insb out xchg xchg (bad) or je sahf mov pop imul jae push in pop in rorl xchg into mov outsl movsl imul out cmp xlat (bad) int3 lret outsb or negl lea jmp mov sbbl mov enter sbb xor mov sub xchg movsb mov cmp sub xor mov adc push cmpb xor frstor das ret lret inc xor call (bad) out mov addr16 cmp dec or mov repz mov (bad) xor xchg insb aad test or faddp fstpt insl add adc arpl mov sbb fnop push add mov lods adc loope int3 dec push push pusha pop (bad) fs mov cmp push cs and (bad) mov frstor push fdivrl adc and (bad) fwait daa addr16 scas adc loope push loop sbb xor pop cs popl sbb adc and jnp ss scas xor rcll sbb out fs mov lds in jecxz pop jmp xchg push flds mov (bad) fs dec arpl imul cmp lahf (bad) pop cmpsb cli and popf push sub add (bad) inc add int3 inc inc (bad) dec cwtl rcll ss scas ret adc fistpl dec add scas lcall cltd push mov push aas cltd inc mov aas mov cmc dec mov test mov das dec ret xchg out mov psllw cmp mov fwait cltd and (bad) inc (bad) in nop test inc jl sbb mov xchg test test lods andl out aaa add movsb in adc cmp cmpsb stos push push fldl add je jb sub pusha ss push push repnz jnp mov test mov int3 (bad) cmpsl and hlt cmpsl dec lahf sub mov lock (bad) inc mov ss push inc testl mov and push jnp jp dec shrl (bad) mov adc sbb es addr16 imul xlat fadds in lock mov loop pop mov push ja cld inc cld sbb xchg inc pop or imul cs dec aaa mov bswap inc dec xchg es push in fwait cld push insb jmp xor jnp dec shrb in push mov adc cld mov icebp scas inc pop xchg push ljmp pop int add test scas xchg aaa sbb mov stos cmpsb cmpsl inc inc push pop stc scas ret enter in xor test pushf lret push dec pop xor in (bad) das js mov imul sub jl mov das mov jmp in add jbe or cs inc repnz loop push in jg xor and adc sub fcmovnu std or inc inc (bad) xchg mov adc jo push enter fwait push mov es scas add jne (bad) or stos xor pusha aas in or in sub and mov loop mov leave mov fbld or std movsb dec add push and and cmpsb fsqrt leave fldl mov cmp js stos mov outsb lea push jb mulb inc dec and negb loope sbb sub mov fnsave setb adc scas sbb das negl xor mov lods cld jnp xchg dec shl ficom (bad) test fnstcw (bad) push inc mov sti rcrl js (bad) mov stc push mov push jo outsl mov mov hlt rcrl pop sub (bad) adc sub getsec aad sub (bad) cmc adc je (bad) lock pusha add sti lock pushf stos dec lock popa out cmc scas mov pushf lret into jmp xchg adc ret stc adc fdivl xchg push lret mov xor cld xchg xor test divl adc (bad) data16 dec cmpl add pushf mov fnop xor sub push push inc scas je (bad) (bad) mov imul mov add arpl lock cli repz ret (bad) icebp and pop arpl pusha push and push loopne jne jecxz (bad) inc addr16 mov mov imul jg sbb sbb jmp push jns push push push mov jnp sahf stc aaa inc insb cmp jmp scas stos arpl stc jl es ljmp (bad) ret orb aaa jno into xorl sub sbb add and mov dec (bad) adc das out dec xor mov cmpsl shrb cmp and mov adc imul sub sbb dec sbb mov outsl sbb cwtl dec inc movsb (bad) aaa add movsl sbb jae mov ret (bad) xor pop addr16 das (bad) mov enter test addr16 mov cmp lock mov fisttpl add mov loop pop mov mov mov mov popa lds mov and imul jno ret out lret pop pop add pop xor fs xchg xor sub cmc je fwait push jne test movl push fcompl sbb (bad) sub push mov sub sbb lcall dec imulb cmc pop or test insl push add mov inc dec test addr16 inc out push or cld xchg jne enter sub xchg imul adc popa add fsts mov or dec shl rol iret xor and xchg mov lods xchg ret mov shrl cs ret (bad) push dec fidivr pop sub popa icebp push pop (bad) jl fdivl mov pop scas test stc je jae insb cmove out cmp sbb lret push sub cmpsl xchg jno inc sbb fstps fistp push mov loope cmp mov mov movsb divb push add cmp in sub movsl mov and jmp jl sbb jo into outsb cmc in insb (bad) ds lret lahf repz adcl pop push es pop lods pop push pusha xor loopne cmpsb cmp leave sub inc inc inc xchg in test fwait lods shll lcall movsb jg and in imul in inc js es arpl push pop sub loop stos sub scas in imul daa mov setb scas insl mov js sub sti cmp dec (bad) repnz mov fnstcw daa mov add push jbe push or (bad) or pop push cmpsl les test mov sub lds test add add es out fucom pop insl scas mov fstl fsubs pop imul jno jns mov inc mov pop sub mov mov pavgb js scas pop into jl adc push test imul in (bad) rorl push hlt sti (bad) cli clc pop ljmp sub sbb adc mov cmpsl lret mov rorb icebp aam aas imul fmulp aas xchg inc popf shrd push cmpsb int nop adcl fwait cmp push jecxz mov push ficomp inc in setge push aaa out dec adc fiaddl push cwtl cmpsb repnz lock (bad) and lds fs flds jle cmc pusha ret adc daa in cmp loopne clc (bad) cli (bad) js loope (bad) mov std flds xlat add sar xchg sub es (bad) jmp insb cld sub xchg (bad) xchg dec out aad iret pop mov pop and jne test repz ljmp inc add xchg aam imul cmp int push pushf push popa mov jmp scas mov push (bad) push gs je lods imul fstl loop push cmc sub lcall adc jb dec call movsl jb cmc mov xor jne ds fstps test sahf andl movsl pop xchg jge out inc or xlat push les mov push add lods xor call add pop xchg adc sub or movd popf inc jno lcall ret outsl xchg mov sahf imul or and pop cli stos pop fidiv add push fisubl push ljmp or ja dec and loop cwtl movsb jg mov add mov dec pop loop adc (bad) mov cmc fsubp mov dec add pop pop and push pop int ja xchg add push cmc aas adc xchg push fcomip lcall into call outsl imul dec int jp ljmp enter or push daa cld xchg stos pushf pop nop insw vrcpss in out mov push cli and shrb cmp and imul push xchg mov shrl push lret loopne xor dec xchg cmc out push movl ds mov jmp scas jne adc mov setl hlt out xchg cs push xlat dec das xchg lcall xchg inc dec sub or incb stos cmp jge push and sub push sbb das ficom lods add add sbb lds inc xor fwait int3 xchg stos leave fildl js cmp cmp mov cmp mov mov inc fisttpll fstpt lods (bad) fldt aam add icebp adcl inc fisttpll jne xchg arpl xchg mov adc jmp dec (bad) inc or adc sbb sti int3 rcll inc add pop adc or mov sbb fcmovne test (bad) mov clc mov mov pop or add xor imul xor mov push repz adc dec fstp sbb add add ret pop mov cltd inc add in adc inc pop popa out or mov xchg popa dec (bad) roll dec cmp mov and ljmp addr16 shlb lahf leave ror leave cs dec decl cmp cmp clc pop into aas xchg xchg std loope jbe imul push loop dec and cli test adcb imul or dec mov inc movl push mov (bad) in cmp jb sti add push cmp xorb mov int in push xchg fstps clc and adc mov (bad) cmpsb jecxz xchg sub scas enter adc aaa daa inc or imul or repnz stos jne ds fldt dec cmp mov out and pop fistl mov inc jg in pop cli cs dec mov mov pop mov mov (bad) jne push add movsb (bad) pusha dec jnp inc jl add jne call rcrb leave dec jge scas mov push or jno pushf jg xor imul ljmp or xchg inc fldenv test dec cmp (bad) jne sti push rolb push std mov stc cli dec mov sub pop xor (bad) cmc fsubrl in jg cmpsb iret jmpw push ja sub or xchg mov (bad) cli repnz arpl cmc sar push add mov shrb int push sti inc pop flds lcall mov lds push ds pusha adc rcrl lret ds cmp xchg cld sbb faddl pop (bad) hlt enter int3 (bad) jno dec aaa mov and or mov stc loop mov lock mov adc mov sub das or (bad) adc xchg ja sbb pop es jb pushf jbe mov insb outsb or xor or ret in int3 jbe pop mov fild sbb jae sahf les lods mov jecxz packuswb aad push ja xchg inc divl xlat xchg iret daa je orl movsb test ret xchg fstp das jmp xchg insl fisttpll outsb setns mov aas mov dec enter or gs mov fadd fstpt out mov or insb jnp out (bad) repnz fimull ja inc inc mov fsubrl xor mov fwait sub cmp sbb out adc pop adc xor cmpsl ljmp addr16 punpcklwd jne aaa insb xlat clc jmp push mov xor fistp scas cmp xchg mov and out or (bad) arpl sub adc outsl loopne imulb je push mov dec outsb rclb insb loop sbbl test push aam out (bad) fnsave cmp adc add cltd aaa sbb scas adc ja xor cmp call enter inc jle mov mov out cmp (bad) cmp push dec add lahf inc ds xor inc adc pop dec sbb xlat xor cltd mov ret jns inc and fldenv mov mov imul (bad) int3 movsl sbb arpl sbb call mov popl cmpsb into xor push jp in fdivs pop mov cld jge sub movsb cmp iret and cmp fistp (bad) addr16 in and adc and jl xchg xor out sarb mov hlt das cmpsl mov shrl adc stos xchg sbb loopne sbb cmp or jmp pop divb cmp mov cmpsb hlt negl jecxz rcll and mov cmpl cmc inc dec cmp push (bad) testl mulb gs xchg out jmp inc fstpt jb loopne and sti fcompl dec lock das push dec push aas push das jle jg xchg out stc (bad) std insl ja lret call lretw pop pop into adc add mov hlt jle ja jmp mov and ret and std adc mov dec and rcr mov sbb stos pop adc xlat cli jno and sbb push nop pop jge test sub stc fmul mov push jb push pop movsb sbb pop ds cmpsl invd or add jp pop (bad) out mov (bad) (bad) cli fisubrl int3 repnz gs insb mov or in outsb movsl cmp pop mov mov pop cmp pop push pop push rcll lret inc pop dec addr16 dec fdivr mov inc bnd push (bad) cld scas in addb rorb mov mov push in leave dec sub lahf sbb pop fsubrp clc push dec xor dec rcrb jbe rolb ret adc push and pusha pop test mov das lcall sbb mov dec popf push fisub push jnp lock mov clc cmp jns iret xor sahf cmp (bad) xchg xchg push jne dec sbb sbb pusha aad push imul idiv rcrl loope inc test loop or mov aaa gs popf push shr mov icebp ret push (bad) aas adc or imul je shr add incb (bad) and cld insb mov fidivr jecxz or jg loope call rclb sub xchg push mov bound in fldl ljmp mulb xor out (bad) dec icebp cmp dec aas dec xlat adc mov popa or lea cwtl and mov xchg (bad) std loope dec mov stos repnz adc pop push icebp xlat fdivrs out pop mov ret mov rclb add (bad) dec mov aas jge or cli imul lds inc pusha push fisttpl mov pop inc jecxz push mov adc cs push sahf pslld inc in add movsl leave mov mov mov add pusha shrb icebp push movsb aas inc xor push movsl in data16 out mov fnstsw lds inc jnp add lcall roll nop lods mov rcl stc inc mov inc xchg pop push jp pop bound call xchg mov popf sbb or jecxz lock push push pusha imul dec lods stos xor call mov (bad) or push and insb insb fnstenv call push lods cld repz or add test fbld xchg gs inc push add or mov pop push mov arpl push lds inc jbe in mov dec jle adc std sub clc xchg les push and aaa mov test out leave jb (bad) sbb mov dec fsubr mov (bad) add lea fsubl mov test in pushf testb (bad) push ss lods mov or inc pop test call leave pop sti mov inc data16 or jbe add mov push (bad) fcmovnbe push inc adc push fiaddl mov add mov rcr sub pop jge out inc xchg lret popa call jge and fisubrl mov repz bound loopne ds mov mov sub dec xor rcl xchg mov lea and push ficompl mov in jg or xor popa mov out les icebp ss (bad) (bad) aam lea inc lahf or outsb mov (bad) push outsb sbb mov sarl in cli dec mov pop cmpsb inc adc repz lahf mov sub or adc data16 xchg lods dec in mov mov jbe xchg sbb jno scas xchg sub sbb mov imul mull in bound pushw xchg cmp iret adc add out jno stos fs mov sub icebp mov lret jb ds fwait movsl insl ret xorb jno inc idiv test pop loopne xor pusha movsl in pushf aam call jge inc icebp sar and adc xchg int3 xchg adc insb sbb test fwait pop shl imul xchg dec popf lds movsb icebp jb or jg mov and in and cmc mov outsb hlt mov lods addr16 out xor cs push sti cmc add jae jnp jmp ljmpw jb inc int3 out xor and cmp inc and push cwtl insb xchg mov loope out movsb sub lock movb fsubrl push pop jbe and xchg pop xor ljmp lea sbb pop (bad) pop mov cmpb mov jns xor inc jbe mov cmp xchg sub leave pushf or cs and cmp mov mov roll jnp mov jne and outsb sub mov hlt push mov jnp (bad) jnp inc dec js and mov popa push insb adc pusha adc mov test xor or enter pop or out scas fdivs add cli cld and mov cmp dec adc fs jae loope out fistl inc pop jne cli adc xor add (bad) movsb test cltd mov and xor adc ss ljmp hlt and iret in cmp jo push sub jno mov je movsb and push test sub jnp dec xor les dec fsubp out mov call imul and test dec lods pop stos f2xm1 repz cmc mov movsb stos mov inc repnz addb scas hlt mov (bad) stos jno (bad) sbb mov (bad) jle cltd and fidivl mov inc xor cmp xlat jne (bad) sbb enter cli les int3 pop into mov dec repz push dec dec jno xchg inc mov sti cmc mov test dec pop imull pushf or cmc nop fcomip adc scas idivb andb push dec mov dec outsb test gs jns icebp xchg jecxz mov inc push lea aad jmp (bad) test incl popa xchg in les outsb mov xor ret out fsubs mov mov mov aas jecxz stos inc or push in push xor xor lea push sahf rolb add (bad) adc hlt push out dec xor daa data16 cs fistpl stos shr (bad) adc mov clc ficoml sahf fnstcw and outsl aaa xor cmp ds inc rclb pushf inc xchg pop xor and cltd in pop mov inc cld rcr push out aam dec into lret insl aam (bad) pop pusha xchg fsubrs push dec sbb aad ss movsb pop getsec inc shrl movl je in jecxz imul push lret clc xchg sub js scas sbb in jmp les or loop mov movsb fisttp dec sbb jmp test dec aam insl mov scas pusha movsb push xor pop jo ds insb in push mov cmp leave push shlb pop aam sti repz (bad) and idiv mov push incl adc loopne std inc hlt in pop jmp push dec dec popf (bad) adc mov ljmp test xchg negb sbb clc cmpsl push or aad cmp lea pop cmp xchg push pop ds cmp mov leave mov mov int3 or daa dec push mov xchg fisubrl clc pop xchg pop mov xor mov lods into inc (bad) and cmc xor cld pop dec sbb pop out push pushf mov sbb cld xchg subl test daa loopne int3 jmp sub add (bad) adc std in dec or in pop pop xchg add jo inc dec dec int3 cmp out xchg stc dec mov (bad) pop inc in fwait notb sbb xor or fstl test cmp lea cmp cld push mov mov inc jae sub testb aas insb addb fiadd notb jge out dec repz icebp mov fnstenv aam je,pt cmp in lods add cmp aaa dec adcl adc (bad) imul push data16 (bad) adc inc xchg popa pop push rcl push in lock mov cltd cli pop out xchg dec mov nop test or rclb fwait dec pop sbb das xor jmp pop inc cmc jp or or xor rcrl test stos adc subl (bad) negl adc push xchg mov mov fadds hlt pop sbb mov pop push or mov dec jne inc xchg mov cld inc push pop je push icebp add pop pop lods les jno push mov mov stc out (bad) sub cli mov sahf rcr icebp rolb rclb inc hlt xlat or cwtl xor sarb or xchg les bnd xchg mov cmp inc mov mov pop push in mov xchg mov lahf xchg add xchg xchg mov stos or pushf push rcll adc xchg mov pop fdivr push test out inc test mov icebp cli addr16 jnp rclb pop negb jle mov je ljmp call mov push fcoml xchg mov rclb adc mov mov fildl mov clc subl fsubrs mov inc (bad) mov and push outsb imul or mov sbb push mov std sub adc fnstenv in test pushf clc xor ret and sub sahf xchg xchg ret mov mov xchg cmpsl cmp or stos xchg dec xchg out dec mov andl fildl fsubl add xchg in cmp (bad) test (bad) mov lret xor fstpt cltd aam fcmovnbe cmp jle pop popf xacquire mov cltd outsl sbb aam gs (bad) mov cmp adc mov cmp xchg mov xor stc jle cwtl jecxz inc inc sbb movsl data16 cmc clc push and or jne and adc pop dec xor and pop xchg push or ret imul stos sbb insb mov dec movsl jae pop xlat pop (bad) mov adc fstpl sub sbb and jne fcompl into jbe out adc fistp jecxz (bad) jae fwait popf mov push (bad) cmp movsl and sub cmp cltd mov cmp cmp (bad) (bad) cmp or mov andb pop cmp call cmpsb mov sub mov test push or push cmp es and inc push out fist lds movsb add and sbb daa enter push gs push (bad) aad je inc loope inc or je sub rcll xchg mov ljmp les sbb mov cltd adcl dec mov push jg push mov lods mov lahf jle mov test mov push insl inc mov aas mov adcl (bad) mov stos inc out movsb ficompl pop popf xchg jnp sub cmp (bad) cli pop test jo xchg xchg push push fdivrl les popf ljmp pop or cmp inc (bad) cmc fstpt lds cmc cmpsb in push test mov aaa mov pop stos mov out dec push sub dec cld and push mov jns mov mov xchg sub leave imul (bad) mov mov inc sub adc pop mov mull test das mov or inc outsl (bad) aam movsl add out mov subl add stos lea sbb cwtl jmp adc aam push test rcl adc clc add cmp pushf mov out mov insl int3 sbb fwait pop lahf aaa inc adc test inc mov jp fsub push adc outsl adc lret les lret lahf ja fs nop aad push add dec scas or sbb jg fisub lret push ljmp fdivrp sbb ss add mov imul add dec dec push pop sti cmp les sub stc add fwait pop mov rcrl or sti test pop or andl and xor out bound jl inc loope loope outsb and xchg dec push lea lret dec xchg mov lods leave addr16 jb cld sbb cs pop xor lock fucomp sub pop push pop js sti inc js adc mov jno jmp xor data16 add cmp or incb daa cmp shrl (bad) aad cmp out cmpsl btc imul jl cmp dec fidivrl inc test popf adc daa mov cmpsb imulb mov pop xchg ret arpl mov mov and xor in scas lret adc adc cmp dec mov fwait push push jle and jmp add pop std cmp add adc cmpsb leave mov jg push inc test fstps test sbb dec cwtl fwait and pop movsb jp int3 (bad) fs adc cmp lahf popa cwtl mov fwait sbb push mov and push out loope add repz ds cmpsb in (bad) popa aad addl subl or es mov cmp lods pop dec je lahf mov push jae add dec push xchg cmp popf les lds outsb cli pop (bad) mov scas pop jno mov ficompl clc mov sub push pop jp fwait or int lcall rol aaa icebp adc push xchg pop imul sub push inc and xchg in pop movsl jae cmp sbb insl mov mov add mov stc push mov and sarl pop cmpsb je lods (bad) xor xchg dec pop lock jnp inc mov pop adc sub addr16 imul notl xchg mov jb add cmp movmskps fiaddl push pushf push divl das ror sub mov loope or jge mov adc ficoml test cmc mov js pop mov iret mov jbe lret pop fcomp cwtl cmp push sbb push iret arpl pop mov pop sti xor clc stos inc inc push test ret test xlat mov loop sbb int3 fmull mov ja adc xchg fild mov loopne push movsl call fdivrl adc push jle lea sub add js jl push dec jne std pop aad jnp inc lds enter mov sbb cld imul xchg xchg mov inc call fisub je loope or xchg cmp sti cs jne jne lds inc mov add insl jne (bad) shrl jl cmpsl jecxz lret xchg xchg dec or pushf pop mov cmc out jae (bad) js jg adc or jecxz sbb mov dec and mov hlt aas mov test in mov mov (bad) cmp dec add and xchg in loope pop or or (bad) or sahf fstpl cmp and lcall cmp or pop adcb dec insl arpl pushf shl jmp push inc cwtl in mov std stc call les cmp inc xchg (bad) mov sbb push orl pop add and sub das sbb pusha es mov push decb and xchg jmp js and sbb xchg push inc push adc out xchg fisttp dec jmp into or push mov add xlat adc push push xchg jmp in (bad) call aaa loopne aaa xor jnp (bad) jecxz (bad) mov lret data16 jns gs mov sbb xchg mov (bad) cmp sbb cmc negb bound adc and cmc or push push xor in jg iret adc scas (bad) ljmp jle cli sub push dec mov pop test loop mov lea loop jecxz imul xor pop lcall pop notl mov bound mov inc call loop pop in adc add test xchg out fdivl movsb push sub ret out push push iret mov pop and and jnp (bad) cli xor popa lods arpl mov add faddl pop stos adc pop jecxz addr16 clc daa jns in in xor jl push ja push push jmp insl test mov scas mov xchg ds loopne pop inc outsb inc repnz and in or mov stc xchg inc addr16 inc aam jns repz scas into mov jl mov push mov sbb stc js enter pop andb pop movsb popf or xchg imul imul dec push cli lcall jne jo stos out (bad) ffreep out sub mov and inc (bad) call pop call sub (bad) jg mov cmp sub shrl push lea mov fiaddl add clc cld repnz rorl lcall (bad) cld lret les jae int3 leave and test dec dec and outsb adc mov dec inc pusha popa add loop jle cmpsl notb testl addr16 mov mov imul pop push std std sub jg out out mov mov jns sbb mov adc mov xchg leave lret xchg add aas scas or mul (bad) or pop pop dec pop and js sbb std mov add and cmp outsb ret lods (bad) fistp rcll std sbb negl xchg (bad) aas inc add jo in xor pop (bad) mov (bad) aam loop (bad) cmp (bad) insl movhps cmpb mov xor out push dec and sub bnd cmpsb xchg xchg into pop fsubp cmpsb lds fstl ficomp adc inc or popf or mov xor cltd mov jo xor cmp push and lock aad jbe sbb cld cmp jo mov xchg gs xchg sub pop fcoms jns ret cld mov inc cmp (bad) dec stc loop test in sbb (bad) in mov mov insl mov or cmp cmpsl jle test adc lock or mov inc stos pop cwtl lds inc dec icebp loopne push pop sub add mov or test and and scas scas jle rclb jbe lods xchg aam inc add or ljmp je dec adc xchg mov incb punpcklwd (bad) sub xor fild aam and xor push jns out xor mov sti mov outsb fisubr stc stos stos jb dec jmp xchg inc ja push xor pop ret cs test andl aad negl mov imul mov ja ds int pop sbb cmp dec inc pushf cmp jmp sub push outsb (bad) fsubs sti (bad) pop (bad) xchg sub sbb lcall adc jl pusha or or dec mov inc push add jle outsl cs (bad) xchg jne xchg dec sub int3 (bad) lret or mov lods ret jno,pn xor inc cmp insl cmpsb das mov in adcb repz mov outsb daa push lret mov mov cli pop ret ds add insb es mov and add rolb shrb nop and cmp xorb lahf jmp outsb arpl cmp mov mov mov shl test dec pusha fcompl ja (bad) jae sbb rolb movsl pop jmp adc sbb test sbb pop xor jns and sbb das inc lods lret sub mov cmp sbb xlat jns out inc incl xor pop add clc rcll mov gs cmpsb dec (bad) and test fwait dec out cs cltd jne xor subb test push sub insb popa neg movsl movsb jg jg xlat push call in and mov gs adc in sbb pop pop or pop out clc xchg adc test ja mov mov cmp inc mov jne xlat and xchg pop dec jae xchg imul or sub jo mov aaa push fimull or mov fadds cli movzbl (bad) fiaddl (bad) xor icebp imul fdiv sbb lea mov jge test push call repz mov insb dec rcrb xor daa pop cmpsl fsubs or sarl jecxz mov insb xor sub ja inc (bad) rolb out jae jbe sbb lahf aam adc and shll popa mov mov mov popf (bad) sbb std ror popf xchg mov xor fwait xor mov jns stos (bad) mov pop cmpsb fdivrs mov loop scas adc and mov ljmp cmpsl jl dec in push ja add (bad) mov movsb or xchg cmp test test adc xor add (bad) stos loopne lcall mov push cld movsl pop aas sbb cmp aad sarl adc pushf push xchg dec add cmpsb (bad) or sbb adc das loopne int3 inc mov inc push fs js xor jl popf mov insb xor je xchg ds dec xchg lock mov dec jg fldcw dec sub push mov and push or dec insb cs (bad) jge mov les jo movsb call inc subl pop mov icebp xchg leavew sti pop daa jmp repz mov dec mov aas and cmp push or daa dec push jmp int jge add sub mov sub push cmp push xchg add push lds jmp mov outsb dec push jmp jo or out cmpsb xor inc rol mov call sbb adc jge lcall jle jno sbb jnp (bad) cmp or cwtl pop sbb xor cli movsb mov daa jno mov insb cmc mov mov mov add inc sbb dec mov pop xchg push ja (bad) test add (bad) icebp leave cltd testl (bad) bound pop fimull mov push cmp cld (bad) push rorb dec jno dec arpl and incl mov dec sub and pop jno (bad) lahf cs inc lods and jnp outsl xchg pop (bad) mov xor fmuls int je in or jae adc xchg sub jmp xchg stos mov leave rcll mov rol stos mov adc stos dec fnstenv jb jmp aaa add popf in cltd loopne lcall hlt fcmovnb loope (bad) cmp push xchg add and adc out mov jecxz daa mov inc fcoms push fmull fsts or div jae icebp addr16 shlb ret sbb add add (bad) rcll (bad) dec addr16 push xchg cmp ljmp and pop mov sbb sub out inc jmp (bad) repz lock sbb xchg pop inc rcl daa mov leave lds mov or add inc mov clc sub or clc jp fcmove mov hlt push or movsb sub mov scas cmp cmp movsl mov aas pop or icebp fistl test sub sub gs outsl repnz xchg ucomiss pop mov gs inc out and push sub or push pop enter mov (bad) in mov sub dec mov inc (bad) cltd popa sub and cmp sbb fistpl mov cmpsb jle inc or fbstp fbld and scas inc mov add mov insb mov imulb in xchg and (bad) test test call lret (bad) scas cmpsb (bad) lret enter pop cmpsb pop mov adc mov icebp xlat (bad) hlt fidivl inc scas fwait aam push adc out in stc mov pop cli in sbb out je xor mov aaa xchg rorl gs fldl lea adc adc out nop (bad) xor (bad) hlt addr16 mov sbb push rolb sahf xor (bad) jb addr16 dec pop ret sti les (bad) add push movsb push stos leave and jle ret inc jo mov mov fdivl test inc xor loope or dec pop test aam push dec ret push sbb clc aad xor pop mov in loope xor testb fisttp xchg cmpsb pop cmpsb addl or xor test (bad) inc popa cmp adc out es inc bound out repz neg jns adc into roll sbb cmpsb jle fs push add mov push movsb shlb jp push inc aad fs xor fist xor and clc mov add into cwtl dec push ds fsts fcmovnbe sbb (bad) sub mov cmp mov addr16 in mov (bad) mov fwait arpl in fstpl test in push and jecxz sbb sbb (bad) pop out push cmp dec xchg add cmp mov xchg jp data16 int lods scas (bad) call shrl mov ds arpl lds xor pop mov rol int3 (bad) jp pop insb test xlat mov push mov adc lret or mov inc fcompl rorl xchg xchg (bad) cmp in in lcall pop cli repnz xchg scas sub iret (bad) cmpsb mov inc adc sarb mov inc or fstps sub into je push adc adcl mov or push jnp pop or insb daa mov add sbb sbb mov or pop xor fisubr ss sahf fs fwait xchg xor cmc test xchg xchg test mov out pusha gs into push mov jns das in jle iret inc sbb fcmovnb pop jne mov notb lahf ret shrl pop dec stos cmpl (bad) or decb iret pusha xlat stos add andl mov add cmc xchg mov inc jmp dec (bad) xchg push push inc sbb jg ja mov cli push movsl adc pop loop lret js sub mov lea mov sub aas data16 push mov scas rcrb mov or scas sbb cmp sub aam mov gs pop sub addr16 (bad) lcall inc mov loopne inc pop jne aam push add mov insb call fsubl xchg out mov push call addr16 lods aaa outsb xchg fucomp rorl mov xchg push pop and adc and stos gs adc jg int3 aas xor rcr jl jmp imul jb lret ficom cwtl mov enter out jecxz insl popf aas sbb xchg aam movsl jmp add jmp jnp sub sub xchg dec fidivr cmc jl lret xchg dec movsl xchg lahf sbb xorb out dec sahf shrl roll in lods es add dec sbb (bad) lret push xchg mov std fidivrl das fistl push push das fcompl add adc stc cltd mov aas out mov mov or enter inc xor lcall iret pop inc adc iret (bad) shlb push subl dec xchg fsts out and jmp add push mov xchg push inc add mov loopne neg scas (bad) in xor jge xchg adc in push xchg jo fldcw mov and adc leave cmp (bad) imul js iret dec sub xchg hlt ljmp mov ret pop in pop stos xor inc fimul popa sbb (bad) in cmp mov not or iret sub add mov sub and push or pushl scas sub sub inc mov lret mov inc or pop or lods dec inc lahf jb and js imul mov scas or jmp dec fistpll and pop ljmp dec insb dec cmpsb insb push ljmp enter jae adc jmp dec push pop or jge inc imul push gs push jge lock xchg and push pop loopne mov jo or ret dec test push mov mov test xor mov clc pop jns mov lcall mov cli repz sbb pop rcrb and sbb xchg mov xchg hlt xchg popf mov (bad) into mov enter lahf icebp outsl lret popa mov inc mov adc popf nop fsubrl in dec (bad) jae sbb rcll mov loop xbegin cli jno fisttpll decb jbe aaa dec aaa ljmp push mov and ds sti dec or lds scas aaa or scas pop or jnp jno and inc mov lcall lock mov ljmp mov or inc pop push lds cmp cmc and movsb xchg ljmp lahf (bad) in aam addr16 notl arpl mov repnz jmp scas xchg mov imul push sub aad xchg push mov xlat xchg je ja cmpsb outsb popa daa and outsb repnz (bad) lock pop push xchg and (bad) sub or cmp mov jge cmc sub out in dec jne mov outsb mov adc mov adc sub sub push imul pop pusha pop leave sbb int mov in in mov mov cltd fisubr cmp sub repz outsl outsb lods jge mov sbb loope imul testl jmp test xor xchg cmp mov sub lods dec pushf push test insb test xchg lret sbb xchg cmp dec xchg jl jl popaw pop in or or test int mov jecxz jmp dec add call (bad) imul pop xor loop xchg loop daa cmpl mov mov popa xor cmc or inc pop test jo popf mov adc setns in cmp or and add subl in xchg (bad) daa pop and mov add insb fs aas pushf loopne mov push pop mov mov mov or hlt iret push rolb into push inc pop mov mov cmpsl or (bad) adc in aad push or xchg lock into (bad) mov mov sbb push call pop sbb repz call (bad) mov sti shll inc adc mov call repz sbb lahf scas arpl imul sub mov jmp shld daa fstl sti mov cmpsb mov push push shl xchg cmpsb lods repz rcr sbb imul addr16 xchg (bad) mov sub push outsb push popa fdivs pop gs add and cmp xor jbe adc adc ljmp sahf mov mov cmp lcall (bad) pop pop push sbb xchg inc insl mov mov les inc lods arpl rclb adc cmpsl cmp sbb inc adc cmp lods inc cmp sub xchg xor je xchg adc loopne mov or dec movsl mov aam push stos sbb dec cmp inc sbb rcl xchg aad loopne mov shr dec adc mov outsb movsb push jecxz add xchg icebp lods ja les push pop insb ret adc inc fmull iret pop pop inc and sbb ds stos push lds mov data16 or (bad) neg fwait jmp mov cltd jo adc mov (bad) add pop and xor pop mov pop and mov (bad) mov xchg jnp sub pop cmpsb or adc scas pop out jg ds es ja (bad) sub out xorb sub clc in out scas mov rol imul sub push ja sub jmp out pushf pusha push test inc dec (bad) (bad) adc aas or xchg call jb dec dec add jmp leave cmp pop mov jae fsubr xchg jmp or add test mov inc outsb sti lret inc pop imul ret fs test ret cmc jle int3 or fnsave inc adcb bound jns inc and mov cli or bt jns neg pop add fwait adc mov int das xchg push mov les test shl gs stos in mov lret pop aad push outsl jge xor xor in inc (bad) leave imul (bad) xor push adc test jno movsb xlat std pop jnp outsl push pop das push repnz jne call mov js mov xlat (bad) scas out ja aas mov cmp inc adc shrb scas in jge push xor sbb adc arpl dec push les fidivr xchg orb mov bound mov fadd in std lea mov shll dec insb jo cld test jne (bad) pop scas and add mov loop int sti insl adc mov jp xchg and scas nop jp in cltd pushf sbb fimull pusha mov mov cli mov dec mov pop adc and adc rcll cmp std add dec or or xor movsb mov das xor mov fwait mov pop test push push mov jge in (bad) in adc lock pop cli js outsb insl xlat rolb jg inc mov test adc jle or jle push xchg and mov jle xlat pop loope outsl (bad) mov ret pop sub jmp xor xor sahf cli lret out mov scas jne mov (bad) int3 add mov dec in cmpsl lds xchg jne push inc sub cmp jg pop add jle loope cwtl (bad) ja insb sbb cmp pop mov push sahf (bad) (bad) xorl xchg dec ja clc cmp sbb xlat cmpsb or push add arpl pop mov mov sub push add pop ljmp jae cmp outsb jle jge pop (bad) int in xchg jno cli imul in pop ret and int3 movsb mov rclb jne mov jmp add es je xchg jb int3 sub push pusha and ffreep loop mov lcall xchg fsub sub cs into gs mov xor fistpll aas push lds inc roll cli cmp adc add sub push mov push sbb out data16 outsl hlt shll dec mov inc xchg nop adc xorl jno aas cmp call leave pop inc sub imul data16 dec push daa mov xchg add push test sbb sub pop xor xchg xchg xor stc out gs cmc jg xor (bad) cmp mov ss aas jbe stc les scas mov rcll sbb scas cwtl (bad) fcoms add enter das sbb aaa movq cmpsl mov xor dec mov pop fdivrs xor cmpsb (bad) or popf div cmpsl (bad) stc pop xor enter int push (bad) push in bound mov lock mov hlt movsb jmp xlat cmp icebp fmul cmp add jl add (bad) lock cmp stc jge js and in insb cmpsb cmp lea lret addr16 fcoml mov pop (bad) (bad) push scas jl push add (bad) push mov mov adc add loop notb mov mov jmp add gs pop push jmp mov jl aad ja mov jo cmpsb adc pop fnstenv fcmovb lcall loope pop pop ret (bad) out mov jbe push cmp mov cmc pop mov pop (bad) out clc clc out and cmpsl jge adc inc mov mov outsl pop ret enter cmp push cmp in mov insl ja insl mov fstpt cmpsl dec pop xor pop cs xor push test sbb int inc les pop fistp outsb lock xor pushf (bad) push inc (bad) icebp cmpsl add rdpmc lods xchg jno jno jmp xchg mov lahf mov adc xlat insl xor inc mov adc out inc mov aaa inc mov bnd or popa push ljmp cli sti pushf addps pop inc mov aas je popa lcall dec lcall xchg enter or or cmpsb mov xchg loop pop (bad) jnp movsl or test mov shll stos sub xchg mov xor adc stc mov cltd in pop mov jge hlt mov or fistp and incl mov sub add cmpsl pop aam lcall in jmp int3 and sub xchg push add mov mov negl lds jne dec (bad) sub sarb daa fadd cmp mov mov inc mov sub enter push and das push (bad) push or repz sbb roll fscale xchg test faddl cld mov test adc in adcb (bad) mov movl movsl daa in ljmp (bad) sbb mul pop addr16 and sbb inc stos ljmp data16 pop das les ds or imul int dec xchg repnz lods icebp push mov and test fs insb std dec lret dec xchg mov dec lock dec xchg mov and (bad) push es jmp mov adc pop xchg push js jbe lds xchg pop in push std int3 xlat popa mov sarl cmpsb sbb and push xlat mov adc out cmp sub inc or jmp dec out mov and xlat and rcll stos bswap cwtl out icebp sbb pop ret ds movl cmp jge and aas xchg push into (bad) aas ret pop add sarl inc out fsubl cmc subb bound and call push mov mov jge cs cmpsl cmpsb dec xchg add fldenv push lcall xchg pop xchg xchg jb cmp out fwait push or xchg arpl sarb push xchg adc push cmpsb fimull (bad) lods mov inc xchg push daa lret sbb mov aam cmp mov nop lds fistl add sub (bad) cs and mov in or outsb mov mov pop cmp and sbb lea and dec xorl xlat pushf cmp mov out es scas xchg jecxz mov pushf inc mov icebp (bad) pop imul shll jecxz mov aad jno sti movsb mov out jbe jmp jmp adc xchg fcoml pop lods mov insl cmpsb leave sub cmp lahf mov aad popa pop xchg test pop push (bad) in sahf lret push jbe pop xor xchg movb jecxz popa xor repnz pop sbb sbb dec or stos popa (bad) jne imul mov rolb rorl push pop xchg or lahf jle aam mov push cwtl add test adc jl xchg stc insl adc cs xor and sub pop pushf xchg adc jae cmp mov add sub inc push or cmp inc push (bad) sub fs nop ret aad or mov jp add add lea lcall inc mov or mov dec rcll adc xchg pop mov sbb xchg push pop jmp test xor fs icebp jg rcrl loopne sahf roll xchg stos add or cmpsb rcrb psrlw sub cmp sbb xor add loop adc popa cld das inc sub inc test mov mov sbb fadds sub dec divb lods repz int3 jg int xchg adc pop cmpsl (bad) test popf loopne sbb das sub idivl and mov add adc hlt mov cmp lds jle pop lret movsl inc adc mov cld movd std ret sbbb inc loopne packuswb leave mov stos mov sub int cmc mov (bad) inc mov cmp rorb push push insl stos push mov xlat cmc dec jns xor mov cmp add pop mov mov xchg and sub cmp std xchg cltd lock jb xchg sbb or movsb lock out sub out test cmp xor insl inc cmpsl rcl inc insl aaa or cmpsl lods push lods dec and (bad) mov pop (bad) xchg sub ficoml jecxz inc xchg lret (bad) mov rcrl xchg call xchg mov scas jmp jmp fcomps lods lret sub push sbb mov cmp nop cmp push pushf push sub and sbb pop pop jge aad mov add jnp cmc daa mov loope pop jno cmpsl or add outsl inc stos mov sbb std lea jmp and cmpsl xchg or fcoms xchg xchg vaddss mov and sbb js pusha mov inc hlt idiv test xchg ret insl (bad) cmp dec mov shrb or inc xlat shl notb xchg jle jbe inc scas xor call xchg cltd (bad) push jp out push inc imul dec lods sub les push leave in movsb mov mov lea in mov fs jle lock rolb js or cmpsl mov mov jle js notl dec in insl add push sbb push das push mov cmp cmc and cmove jo shr push out push ret test stos cmc imul inc rolb jne mov (bad) sbb pushf or fwait sub adc and fadds xchg inc hlt xchg pop fcmovnu mov and inc mov rol mov imul lret leave addl movsb and ret jb dec into mov or jns adc jnp mov push js aaa test push jmp mov test in ficoml sub test imul sub sbb rcrl rclb pop daa sbb insl cmp mov or outsl add push bound mov jns jne pusha cvtpi2ps xchg jo lods push xchg mov test push daa imul fsubrp stc mov cmp sbb aaa jmp mov dec jmp push cli rcl insl push test loopne rcll ja js je cmpsb sbb cmpsl cmp loope pop fsubrs mov cmp add mov adc stc aam inc imul ss insl jp pop sub addr16 xchg inc push (bad) dec dec mov pop cmp movsl les or dec cld pop cmp test sub mov popa das dec jno push test cmp gs xchg test rclb popf loop sbb xchg mov jnp insl adc movsl adc pop cmc jmp and mov loop not sbb xor (bad) ss icebp dec push sub test push push lret push and jo addl dec adc mov lcall inc jmp je outsl (bad) jne sub jb lret ror xor popa out out sub cwtl in xchg jne es pop cs adc dec nop movlps mov add xchg or je stos xor jg mov push cmp mov mov mov jmp test mov test iret xchg xor out cmp pop test in repnz sbb mov push or cmp jp adc push jge pusha loop shll xchg push aam xchg lods add push ret sbb in test cmp out pop mov idivb popa inc int3 loopne popl pop lret fimull push jno sbb in adc jmp or les divb mov or or (bad) addl push mov ljmp xchg cmpl (bad) call mov xchg (bad) mov imul sub push imul pop dec push xor or and and xchg fnstenv out inc xor sbb outsb aaa dec scas clc arpl inc sbb add pop mov clc ja and cmp popf inc adc jecxz dec inc xor xchg cmc (bad) (bad) lret fbstp dec jne or movsb imul insb js pop or stc insl das out daa ficoml xor push cmovp push test das dec mov or mov divb dec ud2 fs push arpl inc push insl jbe dec popf hlt push push les daa js and repz lods loope (bad) out inc (bad) adc fs xor inc cmpsb test mov jbe scas mov jns in imul lods into roll lea cmp xlat xchg out cmc cmp inc repz sbb push jbe gs add ficom push sbb pop clc pop ror jp cwtl mov add loop or lret incb inc jg mov add rolb (bad) fsubl (bad) mov mov aaa add and pop push fldt (bad) xor lock js call enter inc sub push repz mov test daa xchg fs popf (bad) lds sbb (bad) lea xchg push ja ret (bad) mull scas mov movsb xor arpl xchg clc push push sub xchg mov and les mov dec xor jmp clc add cmpsl xchg pop push mov mov loop cmp rcll pop sub mov xor movsl inc mov cmp les jle out outsb add xchg or pop in aaa jg mov inc fildl popa popf xlat das and adc cmp lahf ja lret out jno icebp lcall mov imul fiaddl pop sbb aas cmpsl sub push cmp sarb das adc inc push enter add in shrb push subb xor sub dec (bad) mov mov pop jne movsb pop out dec cmp jne les cmp js scas add inc xlat sbb inc and dec and cmp int3 outsb push imul pop cltd cmp lcall cs aaa sub add add clc loopne cmpl fwait (bad) and sbb cltd loop in std pop push jb cld cmp inc daa mov adc inc xor xor (bad) into xchg negb test or dec in cmpsb or insl mov xchg stos pushf dec dec mov sub push dec or je outsl push sti (bad) xchg sbb cmp enter pushl jecxz lea cs adc (bad) sahf ja sahf repz jle int out pop (bad) cwtl cmc xchg mov push fwait and (bad) lcall push rcrl cld dec dec adc sbb pop enter into cld pop mov sub pop clc push xlat mov ret insl sbb push and call pop rcr xor mov add ja xchg and dec jns (bad) ds xlat shll jo pop sbb inc pushf es inc xor sub js (bad) pop cmp add mov push inc pop insl cwtl add sub rcrb (bad) cmc daa push mov repz pop pusha les lcall sub cmp cs sub nop into jns xchg and xor cmp add xchg aaa and fucom lahf das sub iret mov sub pusha inc and mov push mov pop insb jg pop (bad) (bad) aam push mov test pushf adc negb shlb cmpl and aaa gs dec lahf fwait adcl push cs push and mov xor cs fxch mov mov and xchg mov xchg sub enter sub mov mov mov mov dec data16 cld fs dec negb mov repnz pop subps jb inc popf in popa jl stos lcall mov adc cmp add cmp (bad) fsubs cmp pop aaa xor xor jns lock mov (bad) cmpsb jp sbb xchg and fisttpll fistp inc in xor call ds push sbb dec clc andl mov (bad) sub mov (bad) jmp push loop and and cs sahf cwtl pop pop xchg dec xchg imul cltd dec mov cmc mov clc in pop (bad) ss lods lods out mov push fnsave jl cltd fistpl jmp mov xchg push pop xchg sbb test aad jno call addl movsb jae in (bad) mov dec in lock mov xor les xchg cmp lds fadds sbb pop data16 jmp lock in lock fsubs imul (bad) push ret arpl loope sbb push sbb in adc xchg cmp jmp mov leave rorb out (bad) mov push (bad) jbe jle fstp fnstenv sub lcall loope out fadd ss or lods pop push jnp push push outsl flds cmp icebp push mulb inc test je adc mov adc loope ja out loop int3 mov dec mov lea dec add ljmp pop mov mov mov xchg adc mov pop mov xchg (bad) push (bad) jg lcall lret pop or xchg push push sub adc xor cmp mov incb dec pop mov aam lds sbb push in insb rorb outsl jle xchg stc mov ficom pop sbb mov jle shll inc in cwtl sub xchg mov mov push outsb pop rclb jbe lock dec sbb mov xor xor sub lods add pop pop add dec push mov (bad) add sahf fiaddl fnsave sahf mov test mov pop push gs imul mov test fisubr mov scas aam ret test arpl rcl addl add cld rorl clc push cli repz or pop aam xor lock stos icebp out das inc pop add jp loopne lret mov fwait xor leave inc xor dec nop in jne cmc cmpsb outsl js pusha hlt test xchg scas rorb xchg xor mov scas lea shlb out (bad) jns cmp shrd sub int3 icebp movsb jo fisubrl sahf xlat inc aam movsb repz pop push cmp data16 dec pop dec and dec mov (bad) lods movsl nop dec (bad) inc inc sti fwait (bad) sub mov dec pop (bad) push add add and ja and cmpsb iret and mov cmp mov push jnp push mov rclb int3 (bad) xchg jl pop xchg mov push dec fldenv sahf in jle xchg dec aas es outsb or pop clc push mov aad mov jno jmp sbb orl dec mov jae mov int movsb in rorl addr16 (bad) mov and andb sub (bad) sbb mov mov mov jmp cmp xorb xchg and pop xchg loope lds dec or sahf push add stos xor sub seto into mov subl mov scas rcll jne shlb scas xchg push stos sbb xchg gs stc jmp lods add (bad) jmp outsb fadds ss xor sahf test or je arpl popf mov out cmp jecxz jmp in sub outsb out adc jnp mov in add dec iret insb lcall in outsb or iret insb out loope cli add fisub push (bad) xor add loop sub (bad) testb and jnp pop add or test mov rcl jae in dec jmp out call pop cmp jbe icebp in fisttp dec (bad) addr16 enter xlat push arpl aas xchg push inc and movsb nopl xor imul push jecxz and insl dec lea lods rcl mov pop dec cmp dec das jmp lods adc pop cmp movsl pushf xchg mov pop adc test cld out aad jne divb add cmp ds xor ret (bad) je cmp aam mov pusha jmp jge rol out cmc aas sbb or and (bad) xchg cmp mov inc jp sub test pop icebp data16 outsl call mov xchg mov and push mov mov js cmp xchg lret sar xchg xchg pop inc in hlt push stos es pushl mov rolb (bad) and xor adc lea cs jmp cmpsb xorl cmpl mov xchg fs jo fwait in scas in call ds mov sub cmp sti add loopne sbb jns sub mov addr16 mov (bad) push pop push mov sub push jb adc (bad) bswap push xor jmp (bad) mov push jmp push cwtl cli bound aam xchg bound fildl ret add xchg in jae call mov fbld push sub inc push imul xchg mov sbb or fdivrs jmp out or mov aad lods sbb test mov sbb nop mov mov xchg pop push jae sub scas add xor add push outsl mov mov lret pushf xor dec test lcall mov sub icebp cs pop aas xor dec fwait call push jle jmp dec fist cltd add scas je pop dec das inc sub dec xor push in pop pop icebp stos insl ljmp xchg decl loop pop adc jo scas insb jp fistpll fs stos pushf pop fdivrs loop out sbb popa iret sbbl out sti jne out mov int adc stc hlt jl icebp cmc and mov in push outsl and sbb lods cmp xor fldcw and xor xor daa rolb pop mov test pop xchg adc stos jo neg push mov and lret (bad) repz mov sub xlat mov jmp cwtl jae push into mov imulb les loopne outsb int and adc inc mov mov fld dec xor ret mov xlat ljmp ficompl push dec add sub push or or and test test stos and push xor test inc sub jge sbb mov jne mov sub sbb mov push inc ret ret ss arpl leave lcall xor scas fnstsw cmp cmc xchg pop movsl adc out sti dec je popa pop jne ret out fs jbe cmp xor push mov jp pop lock adc xchg das and out or jge or das leave mov ficomp mov and repz movsl mov mov lahf and jl pushf out nop push push cmp sarl dec stos test mov push xor out sbb push jl push popf and cli and xchg inc pop add mov in insb jae,pt fdiv rcrb arpl jge fbstp enter dec cmp push mov cltd mov xor into cmpsb dec push push xchg dec aas ja cmpsl dec dec xchg outsl lods imul adc negl pop cwtl rorl pop cmpsl aad test sbb stos lock cmp cmp add push push cmp push pop sub add test cmc outsb fcmove push mov jg movsl or mov mov cltd mov pop imul jl add mov outsl out sbbl (bad) pushf jb jno insl (bad) cmp mov jnp and mov cmpb scas push lock jno inc sti aam jns arpl nop sbb add push popa jb imul mov sub add push cmpsb cs fildl fs mov ret mov dec test push xchg and fdivrs mov cmc mov jns mov mov mov mov cli jl ficomp sub jnp enter movsl ret jg jns movsl mov cwtl and adc or cmpsl add dec inc cs lds push clc pop fs adc push cmp adc scas enter aas xlat dec bound lods push push pop cmp mov fdiv or inc mov fnsave or push ja jae,pt xor popf xlat or push xor mov sub push or in fwait out pop into cmpsb or arpl loope xchg push movsl sub pop fwait and pop cld mov adc int xchg inc jle mov ret jg sbb lret push test lds sub add flds hlt enter fcmove inc mov push cmpsb arpl mov jno out pop lea add adc and dec in lret imul push out push or cli inc push dec and or inc data16 add enter out sti sub mov push mov je ror mov pop js lahf jmp rorl outsl pop dec cmp pop jns pop mov xchg mov les dec dec jne fcomi add cmpl xor dec (bad) mulb iret jbe movsl insb (bad) or jg inc in mov xchg and notl (bad) fdivrl js and push popf xor xchg iret pop adc movsb push stc xor das xor pushl jns paddsw push mov xchg xor imul cmpsl inc out mov dec cbtw push mov (bad) and test les loope icebp (bad) cmp addr16 imul mov cmc cmpsl mov stos jno nop jg xchg mov adc iret add aam xor mov inc sahf inc popa fnstsw movsl movsb adc mov jae pop push mov inc mov mov jecxz (bad) lds loop dec xchg or push in rorl test add negb adcl pop cmp xor jmp rep inc (bad) sub push mov flds push fistpl mov cmp lcall insb (bad) mov sbb sub jge push pop mov test enter mov inc sub imul and popf popa setl shrb jno xchg or jge shrl movb mov lods xchg rcrb ret mov add out adc (bad) jg sub daa (bad) mull aad pop jmp cmp shr (bad) scas lds dec fistpll dec xor inc pop test ljmp cmp outsl std pop xchg sub dec je mov jg test and and je ja vmovups sbb fsubl pop pop leavew mov aad push insl push dec iret jne add push scas pop xchg je xchg mov jle into fsubr fimull sub adc adc sub enter inc xchg flds repnz out adc mov lret pop adc mov (bad) xlat mov push rclb or push sub mov mov rcr mov lret lods mov push lods mov (bad) in fnstenv add aad push (bad) lock mov mov push aad aaa dec test sti sub dec lcall adc jae jb das or xchg mov lahf sti loop sub lods xor jns jl ja aaa dec aas js push push mov iret lods in pusha (bad) lcall mov ss and out dec cmp jno push dec clc or xchg out dec mov adc addl rcll mov dec fdivs nop clc les push adc cmc and dec popf out movsb push addl out fldenv fnstcw sbb inc sbb adc xchg jo test jp cs shr xor in mov pusha dec dec add lret sub xchg fwait test cmp mov repz mov jge (bad) jecxz push mov cld add jmp daa andb inc ret sub fnstcw xchg pop mov add je stos mov push fmulp push inc mov sub or xchg iret jle (bad) (bad) pop cmc lret ljmp xor fmul pushf ficompl jmp in cmp pop mov mov sub out jl ss int mov dec cs aam pop int adcl xor repnz lods push cli nop (bad) leave push mov jns xchg fwait js and jecxz mov test mov sub frstor xchg out outsl and push lds and (bad) daa and dec adc pusha dec jae popa jp std adc lcall cwtl pop pop or aam push ret sbb or mov mov in push out xchg js fnstsw (bad) cmp nop mov pop pop jne and mov jecxz into mov push adc dec sub push mov push test (bad) dec cmp test pop adc adc cmp add subl add ja cmpsb lret mov jle pop scas adc ds push cmp lods sbb insb cmp inc xor sbb mov or xor bound jecxz dec jae push repz inc stc and mov lds add popf lcall add out sub shr into and mov mov cmp scas push and sub push cmp inc push mov cmp andl inc stos or jecxz shl aad pop or cwtl or ljmp push sbb adc dec (bad) cli fisubrl sbb sbb mov jge xchg lret push lret push jnp in (bad) mov test adc in frstor bndstx sarl add sbb lea mov movsl in push lock cmp mov (bad) cltd mov jb sub into stos and test lds cli lahf out dec popa dec push xchg adc leave decb cmp or aad stos inc and xor addr16 cmc mov xchg das xor jl and in add mov (bad) (bad) (bad) mov add cli fldt out push fisubl std repnz dec jae xor lods adc jb add fmull bound cwtl jo je and gs idiv mov fbstp out sahf int3 jns jne fwait sub je add popf clc insb pop push nop lods lret loop je aaa lock push lock add jo jb mov movsl sbb data16 push dec (bad) aaa sti add js or inc or lret xor fwait cmp xor xor jle shlb inc and fldcw jecxz cs push (bad) stc lods out jp mov loope jnp add (bad) pop mov fidivl repz cli and test lea lock mov sub push mov mov test dec stos neg sbb nop push mov scas (bad) jno arpl test (bad) ret sbb das mov movsb xchg sbb add (bad) adc into mov inc adc adc push push les jle int3 sbb test imul jg sub fcmove push push insb push mov imul and xor pop dec outsl out and mov je lock dec mov sbb arpl push sbb add jnp dec rorl clc out fsubp or push fbstp ret jno mov aad in inc into and jg cltd (bad) out mov cmp adc daa lret inc sbb sub mov fmul test mov fwait xchg xor popa pop xchg les sub push movsb xor inc (bad) jb lock mov icebp and pop xchg (bad) push mov jle shrl mov and (bad) leave mov push loop inc repnz or aaa mov fcoms jno xchg inc (bad) pop pushf or push cmpsb mov scas fsubrl out dec add cs call inc adc and (bad) and fsubr and dec test sti jl dec lock push bound stos ret or (bad) jmp or adc add cs mov mov mov rcrl les xchg (bad) pusha ja std and insb inc icebp (bad) fnsave mov jecxz adc or fwait dec call imul push mov push fldcw test (bad) fbld xchg das push push sbb pop push or mov fs mov pop scas add lods jne rolb xlat pop movsl stc test lea xor and rorl cmp cs jbe std je jg or push jp pop add loope pop jge jge dec add pop (bad) mov jg jb popf inc imul lea fmuls leave test ret cmpsl mov fdivrl mov (bad) fcoml (bad) fimul or repz aam lcall dec jno sbb aas inc pop imul push xchg cmp stos ret ja push nop adc xchg jmp pop pop mov ljmp xor mov xchg mov loope xchg (bad) out fcoml dec (bad) xchg idivb add inc sub mov push loope cmp fdivrl dec xchg out push dec sahf mov out aas lds xor and aas mov das out adcl cwtl pop jae sub inc sub das (bad) adc bound cmc movsb loope mov pop cltd lods test (bad) in push stc adc lret imulb inc sti leave sbbl and (bad) xchg jo push es push sub dec jge inc pop xchg call in push and (bad) lods dec mov frstor xor xchg (bad) jae sub int outsl fnstcw sti inc mov jno std arpl sarb push dec scas bound bound mov jns xchg push add or in mov lods mov jbe sahf lahf lds shrb int bound arpl (bad) mov jl aam repz pop add xor mov push jnp hlt lahf mov outsb add fucompp dec and sbb xacquire mov mov sbb lds adc pusha mov clc cli test enter pop and xor cmc mov xor int3 icebp lods xchg inc adc into adc cmp imul jp aas jo enter pop xor stos add pop stc mov inc mov stos (bad) push bound roll (bad) outsl xchg lret loope cmc mov mov incl xor dec push aad arpl and push ja clc repnz xor xchg mov pop rorl clts cmp icebp fmull movsl rolb sub xor lret cmp xchg inc aas out xchg mov fstps cs aad mov lea xchg test push push idivb std or push add add outsl inc loopne add xor mov stos xlat mov sbb dec or in enter das rolb jo push sub insl in leave ret ds jns popf in roll xchg jmp xchg dec jmp dec push push mov mulb arpl mov sub daa fildl arpl fistp push sbb and mov dec test inc iret ss inc xchg ficom cmp jmp cwtl (bad) push int and xchg dec adc mov sbb (bad) dec sti add pop mov jb enter jle pop dec icebp dec orl add add sbb movsb popa mov (bad) dec add pop or push cmp mov or push pop ljmp popf lods lcall pop pop imul lahf jle das add pop out loopne fisubr dec xchg xchg jmp and xor push dec mov xor ss push pusha notl dec mov fwait and xchg add pop loop add xchg cmp sbb mov add hlt scas pop test dec cli out les lret cmp fcomps rclb mov repz jecxz inc stos mov (bad) enter xchg push jae (bad) dec (bad) js cmp pop rcrb into mov psrlq enter dec cmp push je jb mov movsl cmp hlt or (bad) adc insb aas outsl insl inc rcr mov dec mov sub mov popf adc add mov dec out (bad) enter sbb ljmp jno cmp mov in inc or inc adc and xchg in ljmp jmp ljmp mov int3 std adc lds aaa mov addr16 and aas mov pop test movsl push sub rclb imul adc jle cs cmp push std xor lock xor push jno xchg and divl mov mov pop ljmp pop xchg icebp mov and ja fcmovnbe in mov ret jne sbb cs cltd call inc push push mov mov cmc xchg mov mov sahf jl mov push sub stos pop xlat loopne inc mov sub push test cmp test loopne fcoml pop pop jp movsb sbb (bad) fcomip or mov leave fnop in cmpsb js xlat mov xchg adc clc pop push pop sbb add mov lret outsl cmp scas xchg inc and lds pop adc in push out pop insb scas imul movsb xor or out lods ficomp push sub xchg dec and adc adc jae xchg sub repnz xchg (bad) leave mov pop test imul daa jb jmp aas cmp adc add adc dec sub fldt mov out pop jmp aas pop scas jnp dec (bad) fmuls (bad) incb inc cmp test cld stc mov jne adc stc add inc or cmpsl repz mov pop or ja cs jmp lods xlat xchg stc daa adc (bad) jbe mov fstl sub add xor dec aaa adc outsb dec mov lds jl adc fs xchg into mov repnz sbb and pop push cltd xor faddl sub or push ds xchg js pop xchg fisttp push sub pop push sub pop nop inc lods pusha sub and lods dec aaa mov loop into adc fbstp rorb xchg stc popa int cli loopne jp nop mov ret (bad) jne mov mov sbb (bad) xor pop fdivp adc iret aad lret adc lcall scas jge ds and dec fdivrl push daa enter test sti gs jecxz dec movsb jmp dec (bad) aam sub (bad) pop fisub pop in aaa ss adc jno jp jnp es mov dec enter push icebp push mov xchg push jg pop cmp cmp and cwtl mov or add shll cmp inc int3 cs sbb xchg in pop xor (bad) shlb pop inc mov add (bad) mov js into mov scas pop sub add imul mov das stos ds lret shl fldcw fstps repz add loop jecxz pop and test cli call mov pop mov das outsl xor xchg out lret roll mov cli addb in lcall sti leave sbb cmp xchg insl shll in cmp adc mov jecxz xchg lret xchg ds mov mov cli adcb xchg cmp out addr16 xor or push stos fildll lea mov sbb fdivrp push out mov or pusha nop (bad) mov inc push cmc aaa addr16 jnp jne pop test mov (bad) mov inc shrb hlt or add xchg push jle mov push mov pushf bound hlt inc cmp fdivrp sarb or jns add mov cmp dec jmp push xlat adc sub or es mov push data16 dec iret cmp ss dec jae (bad) cli pop call mov or inc adc push aaa inc jecxz andl mov fs sub lret bound sub sub push pop test mov xchg dec gs ljmp stos addl fwait test into clc clc jge stos or mov jo aam sbb or fcmove insl (bad) fcomps mov inc mov stos icebp mov sub push adc imul push sbb (bad) cld (bad) cmpb loope ret (bad) dec xchg flds xor jne xor leave test outsl leave sub pop hlt dec rcrl cmp (bad) sbb fist int3 shl bound pop adc xchg pop add xchg mul (bad) fmuls dec mov push call jne fadd xor mov jmp xchg hlt pop and push std movb adc adc lds xchg (bad) mov lret movl dec fs mov sub sub ja test shrl outsl and test mov sub fstl mov dec (bad) xor loop add lret push cmp ja mov aad stc cmpsb inc jle lods pushf sub dec (bad) jb sbb or push dec cld mov mov jbe popf jmp jecxz jecxz dec or pop jb rorl mov mov mov loopne movsb cmp xchg jo enter fisubrl aad js dec jae stc sti cltd add mov imul (bad) add pop cmp jo shlb dec int3 dec out inc sbb mov mov cmpsb (bad) bound or pop dec push mov loope test data16 cs jae and fstp mov jecxz int3 add xor adc sbb jp dec jbe inc jo push movsb (bad) jg push iret lcall cmp addl mov dec cmp iret ds or ret adc (bad) out (bad) pop test repnz scas push cs dec push mov xor sub mov sbb (bad) dec movb fs jb ss fidivrl fild repnz nop jo shrb js sub aam mov sti pop or mov dec in mov mov pushf xchg adcl les add sub sbb xchg outsl inc inc jnp jo movsb mov jle cmc cmpsl xorl aad xchg out mov sub insl lock push sub adc lea scas mov scas pop mov xchg sbb lahf sbb push xchg jl stos dec jecxz jnp dec inc mov or aas adc adc inc loope scas cmc jo sub leave ja inc mov (bad) adc (bad) cltd ds cmpsl xchg loop test xor mov lahf adc cltd cmp mov int sub sub xchg xchg jo xchg sbb popf (bad) (bad) into xchg adcb jo add push mov pop pop jo jp arpl adc xlat insl jnp xchg je sar or pusha push daa in and fmulp fwait ror jo sub lock gs imul adc aad fsubl pop ss into test rorl sahf ret mov push data16 loopne sub push test push adc stos out popa enter mov cmp (bad) hlt in xchg adc add sub pop xchg nop mov movsl subl add mov fldl mov jb je sub add shr dec fstl sub sahf clc jne insl (bad) pusha loopne cld fwait cwtl pop (bad) mov add sub cmp (bad) dec sarl sub movsl ja jmp shlb jge pop dec sbb aam movsb test dec sahf movsl add pop bound shll lock les sbb push notl sarb push inc inc sub cmp shr sub sbb add rorl jno sbb xchg rcrl idiv ja mov loopne and (bad) rcrb push lods xor sbb ret mov imul jb or jmp jp jb cmp pop sahf xchg jle lds (bad) lods int call sbb das sub sbb es lods sahf lahf mov jmp and or push adc cs adc push push lahf cmp xchg jns mov int add cmp imul (bad) in add push in dec push adc xor inc xor jo ds test out insb dec adc sub or push push sub push sbb bnd das loope sbb rorb hlt xor jnp jo sbb mov cmp dec bound pop lds push jg aaa outsl adc mov xor fsts sbb push loop cmp add jae sub imul fxam mov and sub fnstenv mov cmpsb stc adc adcl sub rcr in sub push jae insb jg dec mov cwtl (bad) jae cmp enter xchg es mov sub sahf in dec mov adc stos inc jae cmp jg pop test ret das jg cli lcall mov emms mov in jmp xor xchg lds ss sbb daa insl pop and mov mov push enter and nop jo sub jmp inc sete in sti movsl jnp fildl loope (bad) ret in inc or popf add ss cmpsb xlat or mov pusha call in adc xchg faddl das imulb out vcvttps2dq jg mov mov inc fnstsw mov and rcrb cmp pushf loope in pop and jmp dec xor ficompl push movb inc pop repz jge mov call and insl sub adcl or mov sub hlt sub (bad) fstl in std sub mov aaa jl push adc xor fnop int fsubl and (bad) addr16 loopne scas sub incb test pushl mov enter fcompl mov mov mov clc (bad) sub push mov mov ret int addr16 mov cltd outsl mov cmpsb movsb inc mov fist push pop negl insb std cmp pop cmp stos fstps shl das cmpsl dec (bad) mov in xor dec aad clc test repnz iret mov inc stos mov test ret in pushf pop mov mov cmc or popa ret and pop mov dec setnp xor cmpsl mov scas and dec push mov mov dec add or fs (bad) mov pop lahf jne fwait and cli mov cmp dec out sub int ljmp cmpsl jno push (bad) ds (bad) dec xchg movsb dec arpl xor cmp test jmp ror or push jo mov fsubrl jo mov xchg inc push pusha shl insb aad sbb das out roll subb mov sub pop xchg nop push mov mov sub mov mov add loope jne,pn inc stc adc mov sti xchg ret dec mov (bad) (bad) or fucompp popf lret and mov xchg mov (bad) push int3 int push jp add (bad) hlt mov movsl and bound jo cltd and nop out sub test adc and data16 xchg dec (bad) cltd mov cli ret fsubr icebp or add ja cmpsl mov mov add jmp das iret decl mov xchg popf adc jg in lcall mov cmp stc mov call or fbstp lret xchg js add bswap js push mov xor add xor inc mov test icebp jl ss mov sub in inc outsb mov cltd pop sbb imul lods adc lahf mov cmp rorl and jns mov push in cmp pop and or sahf ljmp data16 pop (bad) (bad) faddl jae add je jl movsl sbb cld jl nop call int3 (bad) cmp mov sbb adc or jae pop dec mov and mov xchg out pushf (bad) cli cmp pop cld lcall stc lods mov stos repz adc inc or jbe inc out std iret push cmp mov pop pop pop mov sub mov data16 clc jns xor pop sub imul mov jae cld das xor jl push divl out and popa pop daa inc mov gs cmp xor (bad) xor mov lock outsb test push cli push and repnz ror jge dec inc std jns into lret lds les dec les add imul jl cld xchg push sub outsb loop sub stos dec dec outsl adc stc int pop xchg rorb sub inc pushf push or xchg dec xor mull nop mov xchg adc inc movsb divb cmp push aam in shlb inc or insl sarb or add cmp pop inc inc xlat stos sbb lret cwtl push fbld pop mov lea mov pop iretw push das popa add fwait pushf lahf lret push pop xchg sysenter jbe lcall je ret lods mov jns mov dec je dec icebp add cmp lods mov cmpsb bnd repnz pusha xorb fiadd stc cmpsb adc ljmp add fstps (bad) int3 jge xor (bad) arpl lods cmp lret cli mov xchg xlat adc incb inc (bad) xor movsb push jnp ds into jnp loop jae push pop in loop iret icebp sbb out sti fbstp xor std imul in ds cmp dec inc stc jg mov jo into cmpsb test cld xchg cmp cmp fidivl fsubl mov into xchg out pop arpl (bad) (bad) cmp mov data16 movzwl pop es or adc mov xchg dec inc sti sub push movsb outsb cmc idivl je mov xchg mov sub jle add in jbe mov cmp daa pushf xor push cmp or and cmpsl push fnsave jbe add cli out push imul push pop pop pop add in mov add and fidivrl fdivp aas jle add gs mov or nop inc jmp pushf lods leave or cmp mov lods xorl sbb lahf (bad) adc popf cmp jmp push mov test (bad) rorb mov fwait lcall (bad) cmp outsl out orl mov iret xor xchg adc mov (bad) ss push lods inc push pop dec insl iret xchg cmpsb fcompl and push jno data16 pop jns lods add outsb shl fdivrp push cmc inc out rclb push movsb sbb mov add xor andl dec inc mov mov cmp outsb lret mov xor adc or sub adcb (bad) (bad) and sub ret into call loopne int3 (bad) cmp mov inc notb pop mov dec sbb nop stos das pop ret jmp mov shr pmaddwd xchg mov dec mov xor jge arpl pop int sbb scas sub add push outsl cmp or fidivrl int dec adc mov jecxz std ret fnop add xor mov cmp xor cmp sbb add (bad) sti jg jae out mov movsl mov jle (bad) mov pop sahf adc hlt push lcall (bad) roll xchg cwtl or or std imul or xor and jg add out test shrl lea xor mov sbb (bad) mov jnp clc xchg pop mov cmp sbb (bad) mov les add adc out loope sahf cltd inc push pop xchg or jbe inc cmp mov inc (bad) clc into mov adc aam xchg lea jle sbb jae cmp xchg inc and mov xlat lds mov loope (bad) inc ret lods push outsl mov jmp adc jns repz pop mov rcrb xchg lret lods adc movsb and jbe daa sub push pop mov aad fldl icebp add inc loope push pop push lcall sbbl iret mov and scas imul repnz stos pop xchg xor aas inc loopne sbb push (bad) inc push addr16 aam das push adc sub sar dec repnz mov pop pop xchg adc repz arpl int3 cld mov adc push or dec out subb call insb pop ret adc mov inc repnz sub xchg lea push cmp add clc testb out and fisubl lock sarb fisubr fstp and test and xor adc dec or subb push insb ss negl jecxz loop add add mov or mov mov mov lret mov jb sbb pand cltd cs leave xor (bad) das (bad) loope popa (bad) mov push adc mov jnp cmp enter push push loop add leave pushf dec pop orl movsl lret mov outsl mov pop je xor mov insb pop fist push lret (bad) scas fwait rolb lret xor inc cmp mov push adc push aaa cwtl inc inc jmp jg mov sbb add cltd sbb pop jo lods ljmp lahf lods pop decl adc push sbb or sbb sbb sub jmp cpuid (bad) jb rcll mov dec ljmp cmp jns inc xor cmc js loopne lods mov into add add int (bad) inc sbb fisttp (bad) mov int3 insl add neg ds aaa mov jg add and movsl call test dec bound push fsubs inc cs rclb push jmp ret sub pop mov es insb inc or cli or jg dec and push push dec mov mov call xor lods inc loopne push lret fistp xor pop inc clc xor sti xchg inc mov lahf jb or popa dec out bound adc inc adc jl xchg outsb sub xchg jg notl sbb xor mov xchg push push cmp pop in jmp js push nop mov das pop lds add and in adc bnd and test mov dec ja pop jl loopne (bad) jne inc xor xchg lret mov (bad) int jl cltd and sub das mov cld push sub and lds js test mov mov inc mov jmp std clc and imul add gs cmp arpl aam pop mov xchg cmp cmp out push ss and add push cwtl cs ficompl insb lret cli cmp mov mov test insl addr16 push and mov movsl loope into test adc rcrb sarb xchg or movsb (bad) js and xchg mov les fcmovne (bad) cli lods cmp push hlt pop outsl fcmovnbe movsb out sub scas jnp pushf repnz in adc add repnz jg fldt xor inc dec (bad) movsl push or lret push mov xor insl pop pop add arpl (bad) in test add out leave addr16 andl (bad) mov in xor das dec jno iret aaa pop cwtl pop mov jne jg rcl add movsb and ss popa add push in lock sub pop pushf xchg mov (bad) mov into xor or mov push movsl enter add outsl lret call (bad) mov add and loopne pop ss fdivrs cmp stc xchg and pop add mov rolb inc sbb add mov fxch dec jmp mov jge bound mov dec addr16 mov jp jb lock xor mov sahf in mov add sbb pop inc mov and mov cltd add inc jle pop popa mov leave push pop (bad) push fwait push xor stc test out jb push (bad) sbb sahf sub gs mov mov mov call js int mov aas sbb push aaa test dec mov cmpsb inc je imul mov loopne dec aad xchg and cwtl cmp pop je js adc psrlq xor or xchg frstor hlt adcb mov mov outsb or add pop ljmp test rcrb mov dec mov inc pushf mov push jmp mov fsubrs mov jne xchg xchg push sub or lret lods mov dec aas cwtl mov xchg in and arpl int fidivr repnz inc insl mov in daa lods and int mov outsb sbb (bad) sti pop scas fdivs ja dec mov in mov sbb cmc pusha push frstor pusha lret lret pop dec pop jg adcl jno mov mov and in and test or mov or ror mov out mov fbld jmp mov enter (bad) lret adc pop jmp and and add mov ficompl inc int3 ret sbb pop (bad) fnsave loope inc dec jae adc iret shrl jae daa out and fcmovnbe push pop push fnstcw dec xor mov lea or shll mov test adc adc sub mov mov flds ret adc jb in xor sub add jb mov and stc dec jp sahf lahf mov ja stos jl mov sbb or cmpsb inc pop mov jae test inc clc std popa lock ljmp leave scas sbb xor inc nop sbb dec ret jp fldln2 add shlb insb pop adc jae test push mov mov fsubl push movsb mov cmpsl cmpsb stc push fstpt ret das nop xchg das (bad) mov lea sbb (bad) aad movl xchg (bad) loopne loope mov push inc dec add jle or leave mov inc mov leave push cmpsl cmp nop mov add cwtl jns xor orl xchg inc xchg add inc mov (bad) insb rcll xchg shlb out xchg mov pop xor inc imul (bad) ljmp out (bad) aad hlt or icebp scas call add xchg and xchg insb pushf adc or xchg scas add rolb call adc aad leave (bad) movsl sub mov stos xor dec enter pushf arpl loop dec cmp mov mov mov push rcll xor sarb call popf test pop cmp jle fiaddl (bad) dec jns and mov adc sub fisubrl (bad) (bad) xchg sbb arpl sbb popf cmp cmpsl pop xlat loopne insb movl das out xor sub popa push push jb pop inc mov add rolb test aas punpcklwd ds jl inc dec dec jb sbb add out enter mov jne (bad) lcall or aam (bad) gs xorl hlt jnp rcrb adc mov push xchg add jmp or fdivrs jl sbb imul aas int3 mov adc cli xchg push xor (bad) pop inc mov push (bad) loopne imul xchg add add cmpsb shll mov pop jb push mov xor jle adc (bad) in cmpsl mov pop lea xor loop jl jns adc aas or xor mov and shl jp cmp stos cltd jnp cmpsl dec (bad) hlt push xor push lahf std imul rcr lea nop psadbw sbb push push adc loope insl je adc addr16 sbb je jne pop xor sbb push jge lods adc jns or int3 or mov daa std jmp adc sbb or cmpsb adc stc mov (bad) and hlt leave test out sahf std cmp jmp fwait xor pop jb icebp out addr16 jne idiv out mov (bad) mov add sahf mov ja xlat hlt (bad) sti push test xor mov pop gs add or fs inc repnz outsb out pop lcall jmp das arpl sub mov mov movsb popa int xchg pop or ficom mov mov pop sbb push stc cwtl pop rol test or bound sbb and insb shl popf dec dec push cld cli dec mov pop adc popf push or add subl aaa aas or xor (bad) cld (bad) test dec sbb push xor pop lods mov sbb fs dec cmpsb rcrb imul cmp (bad) aad test mov iret cwtl test cmp mov pop inc add imul dec sti lea mov scas stos in iret jns into push (bad) insl or lcall cmpsl pop addr16 scas loopne gs xlat pop les jmp cmp inc xchg movsb sub adc sbb popa push sub or jl orl leave insl jb mov pushf out push movsl std loope js fcmovnb mov xor xor aam (bad) les rcrl cmpsb (bad) xor sar jno stc repz pop push mov mov inc dec out aad jmp hlt std cmc ja movsl insw and inc es arpl push sbb xchg les test cmp (bad) iret pop jl jns arpl adc adc mov fnsave and xor inc out ret popa (bad) (bad) push data16 jp sbb roll sbb jo mov inc xor test xor dec mov mov imul cmpsb jno mov pop inc or leave mov movsb push xchg xchg bswap sbb addr16 xchg mov out xor dec (bad) ja movsb arpl jge fwait cwtl outsb push sbb loope push and add mov ljmp xchg mov popf mov bound dec mov jecxz jge addr16 ret xor xor pop xchg inc or insl ljmp xchg mov arpl lds cmc lcall test mov jl xchg xlat mov out add fdiv (bad) fcmovbe (bad) shl add lods jb and out sub xchg or stc jns imul insb pop out loopne inc jecxz shll fwait sub fs xchg push dec cmp add add leave xchg rorl call sub bound into cmp xchg outsb loope or fcoms add pop xor es popf jbe mov xor sub mov gs inc imul jb imul insb repz mov dec (bad) sbb pop in lret sbb add sub in (bad) dec repz gs jbe and dec adc rol arpl pop fstpt and cmp add fs jno adc das sbbl call jl and fs jecxz lret arpl xor lahf and icebp call mov rclb test aam pop fcomps pop in out sbb xchg jb jns cmc and stos aam push stos outsl mov mov sbb iret xor jg mov (bad) std cmp aad and or repnz test inc es jle test popa add clc mov inc outsb test in mov sub ficomp sub test pushf cmpl inc fs pop lcall clc sbb int mov add scas arpl pushf loop xlat fldl inc jne push cltd rcrb mov adc pop arpl mov add ret inc addr16 mov loop mov cmc push or daa cmpsl into outsb sub fildl adc adc fs in and pop (bad) xchg outsb stos push mov fnop and pop subl in sub je fs mov lret xor cmp loopne loope sbb add mov xor push dec lret fcompl pop sti xchg gs out add in test lods call leave push subps sti mov xchg aam cmp xchg xchg and mov push adc xchg repnz sarw mov imul sbb push jge adc mov lcall pop pop in enter imul std out mov or fidivr xor cli pop inc lret mov xlat lods adc xchg lahf xor rcl lea sbb push test cmp add mov pop ds xchg jb call hlt test cmp dec lock jge push or fimull inc cmc shl imul push and sub add leave out cmp xchg cmp pushf xchg jg inc mov ja movsb (bad) pcmpeqw inc cwtl fucom or int mov mov mov add adc popa pop aaa adc or in test insb sbb lock jne aas or test ret ss add jmp or push in mulb mov aam pop (bad) idivb aaa or mov xchg sub inc mov jnp xor mov ds xor adc sbb neg out jecxz add pop cs scas pop js fwait out xlat pop jb dec icebp push idivb mov dec sahf cltd les pop (bad) pusha cmp mov and jp enter mov pusha and push cmp push dec push lret iret aas inc push add loopne in movsl sbb sub cmc xchg sbb or cs or and mov mov mov popa mov int3 and notb jmp mov cmc rclb fcomp out cli call mov sbb popa xchg xchg jb gs (bad) stos mov in xor sbbl mov lock pmaddwd bound lahf or enter data16 dec xchg xchg add nop int3 push fmull leave sbb jns fwait std and fcom lret popf fidivr xchg adc dec jg mov push dec (bad) sub (bad) imul arpl hlt and adc and dec inc fsubr ljmp std shrb xchg fucomip dec nop lods jmp test gs sahf xor enter sti xchg mov dec jg xor jo lods loopne push adc xor mov cld popa sbb aad je clc inc int3 rcrl shld adc fwait test inc je add dec mov je and popa neg inc add fs pop lret cmpsb sti aas jle scas sbb push fldenv push sbb cmp arpl movsl inc jne in cmp push cmc in sub mov ret push aad cwtl add rcll loopne push ljmp cltd xchg test rclb popf (bad) push jge sbb sub jl cmp iret xchg jecxz rcr and scas or fldt fnstsw movsl or jns xor jae sti lret pop and scas pop int jbe scas lret subl sub sbb jns cmp std es or or sbb ror sub dec hlt xchg es add push push ja (bad) in cmp sub (bad) jo mov das scas and inc and push push dec loop (bad) sbb sub pop pusha scas xchg call jo add dec call sbb inc xlat xchg xchg insb mov sub les or or mov mov mov loop cli mov jno jne ds ds mov adc xchg fwait pusha cmpsw and mov or fisubl push dec mov xchg inc loopne mov dec in pop add mov test cld pop mov mov sub inc xchg pop lods cld cwtl sbb lods adc scas push pop outsb xor xchg iret hlt inc in stc loope les mov dec jb jecxz mov sbb ficomp mov jp cld sub rcrb mov sub jns loop dec jl push and dec in jbe in fcomi loope std jo imul sub mov pop (bad) movsb mov mov loop je mov cld sub add mov add lcall sti adc (bad) jbe fisttpl test js loopne pop insb pop dec push mov mov ret nop xorl notb and into and adc hlt popa adc leave sub push xor repz frstor and jl or arpl hlt mov sbb push jns cmp sti and xchg mov (bad) push bnd xor cmc mov popf jl dec add xchg cmp inc sahf pushf push loope jl fistl scas add je lods jno xor lea jnp stos loopne ja add pop jle loope xor jo fwait mov dec push jns dec xchg mov cli sbb (bad) mov pop and mov dec sub lahf mov pop enter mov push bnd jmp cmp scas pop sbb dec sti cli fnop xchg pop fidivrl dec fwait rcr imul jns test dec stc jae (bad) or mov lock rol pop jmp xchg mov mov cld mov adc mov loopne inc dec xlat in and movb pop jle push dec cs pop jno inc dec cwtl jns inc add lods push cmp mov lret cmp hlt mov pusha inc add mov sbb jmp jg roll mov inc or inc loop sbb jg add sahf hlt jg xchg mov imul mov jp loop pop push lds cld hlt cld imul sbb call mov pusha mov iret fcomps and jl mov mov push dec and mov les es and sti sbb icebp mov or loopne cmpb pop enter stos adc dec adc or test adc mov andl dec or sbb lret xchg sbb (bad) mov pop je ljmp imul nop sub (bad) push add lock testb je xchg loop dec jle cltd lock inc (bad) fs sti adc fs dec jl adc fcmovne enter inc outsl cmp les out inc and push out subb outsb lock pop push jno (bad) mov je inc mov mov clc outsb jne ret sbb sti sub mov mov jno xor test xor (bad) rclb dec fadds xchg lods xchg popa int3 sub jle shll adc xchg mov sub nop inc sbb sub imul arpl hlt ror aas jae push pop mov clc xchg adc ljmp inc fs or mov daa shlb loope,pt ret stc or inc (bad) cmp xor icebp stc xlat fldcw dec imull jb leave pop inc xchg not loop (bad) cmp imul xchg mov push mov scas mov ss jno push (bad) addps cmc out pop add stc aas arpl mov and std scas addr16 push loope add dec clc test lcall jge mov inc mov idivl out pop mov xchg sbb repz hlt arpl andb sbb inc cmp aas imul pushf outsb xchg test iret or xlat dec loope or data16 fsts or scas js ja or xor sbb test (bad) into nop push outsl fnsave enter pusha pop adc mov adc out scas fstl icebp repz call daa int3 or mov mov ror jb and xor rcrl mov adc mov mov out inc (bad) notb mov adc push lret xchg (bad) ds loopne cmp dec lret xchg pop loopne in dec adc lret mov cmpsl mov cmp mov pusha aas jge add sbb int3 (bad) pop inc hlt xchg repnz inc sbb mov test or xchg (bad) mov out adc aaa mov cmp pop pop cmpsl cmp sbb sub xchg dec ret jl mov (bad) sbb add imul push enter mov loope inc in mov popf lods jg rclb mov mov mov popf lcall xchg leave cwtl and ret xchg iret ja and cmp mov popa or in (bad) xor pop xchg push (bad) mov adc jge icebp cmc inc fadds push push inc add jae mov jg pop ljmp insb mov xlat rclb out (bad) fnop cmpsl scas sti jmp scas xor jns ja and and push sti loop addr16 mov stos pop shrb pop push push gs cs xor inc add push or mov xchg push fsts iret loop inc test stos (bad) push push xor fstpl loop in cltd sbb push clc add push sbb es add (bad) adc cbtw sti cmpsb lret (bad) repnz push xchg es jae enter mov je pusha sti pop iret std sub daa insl (bad) out lock out mov xor pop rolb pop jge xchg (bad) js test daa lds mov (bad) pop int mov rcrb mov in fs aam xlat push xorl pop imull push jmp cs jb decb dec mov dec dec pushf into std pushf imul xor repnz movsl pop outsb test clc sbb jg xchg shl or daa adc loop testl inc clc es sub xor push movsb mov mul mov stos xor stos test and cmpsl mov addl repz mov mov xor push sub sbb pop test push push push or xchg imul sbb cmp sub add sub lret xchg xchg add (bad) clc dec xchg in sti stc pop xchg or das addr16 cmc mov popf mov or inc scas out xchg in cld pop aas jl in (bad) jbe,pn push shl or sysexit or pop cmpsb jnp int3 sub push in lea orb test cmp loope (bad) xchg dec clc inc nop pop iret push add add mov inc cs nop fistl xor aad mov mov rcr push mov stos stc pop inc (bad) add pop inc and cmp jne movsb cmp adc data16 bound sbb shr push fdivrl fbstp mov outsb pop push and clc nop sub and xchg pop pop jne dec pushf sub mov mov inc push jle add xchg js bound je mov adc pop shr roll push xor pop pop or dec imul stos jmp imul sbbl ret xchg into movsl cwtl mov es push leave cltd shlb inc push and orl cmp mov xorb lret test ja ret sbb js mov cmc jge bound mov rcll mov je jae cmp stos inc les nop sbbl push les jb adc sub outsb out xorl pop leave and gs xchg outsb and push adc add ja lret lods js mov stos jbe pop inc xchg mov mov fisub cwtl inc sbb aam cli mov arpl xchg sar dec test jo (bad) arpl mov inc dec sti imulb mov bound add popa sbb in aaa repnz lds pushf andl lahf and and cmc rcr dec das in cmpsb daa jns pop mov sarb fdivrs pop push sbb fprem1 sub push in xor pushf lods movsb mov nop aas mov xchg pop sti jecxz add test xlat jl xor sti sahf mov mov pop (bad) icebp lahf sub mov stos mov arpl xor xchg push jmp and sub xorb out adc mov cs int3 cmpb jnp cmc in (bad) cmp or call scas (bad) movsb jo add sub lods adc dec bound mov inc mov sub cmp sahf sub test push cwtl jb idivb sub or cli inc xor bound cmc mov mov test loop xor inc in loope and mov cmp xor mov rorb adc (bad) cmpsb cmp and cwtl push test test out loopne int3 jg faddl stos insl lods pusha outsb (bad) ja nop repnz dec mov imul xchg sbb mov fadd lret rorb aas (bad) mov push pop sub or fistpll dec push xchg call mov daa clc out cwtl mov push cwtl mov pop cs xor push mov rclb fcomps mov add jnp add bound or adc pop fbld (bad) (bad) adc in inc mov mov arpl dec mov mov jp cs les stos mov sbb mov icebp mov repz cmc nop mov inc imulb movsb and dec add cmpsb or rcl popa xchg sub int xchg jbe inc js repnz ljmp stos loop test icebp mov iret push in loop inc or jecxz sbb xor cld inc imul inc xchg adc mov (bad) dec mov jmp mov int3 imul shl sbb mov out popa pop aam sti fbld lret jne pop in xor jo sahf inc incb outsl push mov mov imull cmpl mov and sahf es pop repnz insl fdivp inc rcrb in cmp sahf sbb mov or dec aaa aad pop sub dec add mov xor lret idivb adc lds repnz call mov or aas into and pop hlt lods mov insl pop add jo or sbb jae nop jbe or and adc adc adc inc cs adc adc jle mov xchg inc dec pop aad aam pop call mulb push mov fsub data16 es and cmc jne push mov mov sbb fidivl outsl lods cmp xchg mov pop and xchg jne stos add fwait or inc cwtl cltd aam sarb xlat adc bound into pop jb sub fnstcw push stos pushf jecxz sub cld cmp inc xor mov sub push clc sbbb (bad) adc mov push xchg sub adc fisubr mov (bad) cmp dec cmp cmp daa out jnp sahf pop imul push or fldenv stos shl push xor ret xor pop mov ds sub aam adc cmpsb adcl pop mul push aas pop outsl push clc insl jge or rcrl inc mov mov adc (bad) mov sub lret cltd mov mov push mov jg (bad) lea jl ss cld or xchg push stos mov inc sti lret and jp and subl cmp pop push aas aam inc cmp std push repz add mov imull out sti lock xchg pop mov inc dec lret xchg in (bad) (bad) adc cli movb jno movsb mov push and mov rolb dec mov hlt test ss xor cmpsl cs push (bad) ret les stos cmp sbb sbb adc xchg cmpsl sub mov mov in and inc mov in mov sbb rorb mov push lods cmpsl push cmp push stos (bad) addr16 xor mov mov rcl test pop shrb add testl push cmp outsb loope push divps scas lea test and dec int xchg pop add addb cmpsl mov xor inc xchg add jno or or lds movsl cmp xlat adc add pop xchg push icebp popa int jmp push (bad) add push xor mov pop mov xchg les push adc std cltd adcl mov cmpsl sbb xor fcmovu mov (bad) hlt aaa jle fimull push aas inc inc scas bound (bad) in fistpll mov rcrl adc pop pop inc pop push pop lods dec cltd into or lahf scas mov or xchg and adc ret cltd nop fistp enter mov fisub fstp push daa inc data16 pop dec push pop pushf sti push test fimull fstl movsl shrl lret subps les push loop adc clc mov jp push addr16 sub push push or and jmp dec jne cli out jle inc xor and add andl push push or mov outsb in mov mov inc int3 pop or aas sub mulb into bound jmp (bad) ss cmpsl jge jnp stos aaa inc inc jecxz ret sub fmull adc cmpsl push lret pop mov lds dec pushf hlt and jb insl or push pop add je push inc in gs bound cmp shrb bnd imul (bad) movsb cmpsb das ss ret jecxz sbb ss jo and cmp movl test sahf push jmp popa and cltd or imul jg jp aaa lds mov xchg and orl mov outsb hlt bswap push mov les sub sbb call fs ds mov jbe,pt cmp (bad) pop push int mov adc mov lcall pop movsl pushf push out sub jl jge shl cmpsb pop mov push fst mov lods mov sub imul xchg dec add mov or jg pop ja sbb jmp or jge sbb into add push jns ljmp jg jl repz sub lahf enter test jns or popf sub mov gs adc mulb xchg hlt mov repz cmp pop das mov pop pop rcrl movsl cmp cmpl lcall in pop sbb sbb mov aam dec xchg es adc push pop mov or adcl (bad) lret movsl or xchg pushf adc dec adc lret jmp dec je and pop jge pop and scas shlb mov sbb mov adc inc mov or addr16 pop add lods sub fadd rorb add cmp fdivs popf xchg mov xchg cmc loop jmp cmp push push mov aas mov ret pop mov mov stos shlb out clc adc aad jb,pn xor pusha xchg jecxz mov jge clc push pop dec mov pop sub mov ret or test gs imul pop cwtl jmp mov pop fdivl lock mov and sub xor je es (bad) sbb stos add xchg or addr16 into xorl aas cli push or pop adc push repz adc (bad) gs mov js lret faddl hlt xchg push fdivr inc ret scas and orl iret pop mov roll xor add repz xchg inc jg dec int3 mov paddusw aaa das ja ss sub lods and (bad) sti lods rcrl out inc mov jae xchg jbe (bad) scas cli pusha cmc inc and ss inc lahf repnz pop xlat jae jg fldl mov cltd jmp push xor stos fs insb sub in xor ret inc imul iret pop js push loop orl mov insl mov out inc xchg mov in cmp mov mov icebp push and roll out fs push cmpb inc lahf mov leave mov int3 cltd xchg stos inc sub push imul mov and ja std enter mov mov jp sbb mov call mov call (bad) push jne xor sub arpl adc mov (bad) and push loopne or out push (bad) (bad) aas jo ret jns dec repnz mov es scas cmp pushf leave sarb shrb das ljmp xor push pusha repz push mov mov stos pop ret in inc iret inc inc (bad) ja jg pop in mov push and or push cmp in (bad) popf (bad) (bad) fsubrl es ss push clc data16 (bad) notl and mov loopne popf in outsb and aad gs xor pop pop dec mov loope add fistl or push xor jge je mov int3 adc scas xadd rorb fsts inc in fistpl (bad) into les repz xchg pop leave pop hlt fldenv ljmp pop dec lds dec xchg lods sub mov test jl cmp jecxz popf outsl mov jl or mov out fcmovbe sahf clc add iret cmp jmp pop scas dec mov adc rorb lea imul fdivrs mov dec outsb lock mov and inc jns sub push push xchg sbb push push push rcrb shl lock mov out jge jmp mov pop test ret push (bad) pushf movsl cs dec aas pop popf lahf mov sarb adc das mov jno inc cmp clc sub les enter scas in sbb shr and jmp daa and or inc ds subl mov dec xor mov adc es jmp adc cmp das bound sahf pop (bad) out lret popf cmpsl rcrl psubsb imulb or cmp int adc scas (bad) sbb push dec ret ret cli or out jmp push jb mov or lods mov jl out jmp push clc dec xchg test movsb dec cmp push xor and and adc xchg out sub (bad) xlat jne jbe cld rorl sbb push and (bad) mulb stos mov inc test or arpl pushf decb push jbe inc std (bad) xchg (bad) call test sub xchg xchg fnsave insb or int3 sahf sahf mov outsb lahf ret dec xlat sub gs imul aaa dec add ja ss xor add sub push es mov (bad) fnsave hlt dec jno imul jb loopne xor pop je sub push pop inc pop push dec cli mov sub mov fsubrs je xchg scas xchg cmp and jo mov dec (bad) xor and cmpb nop push das pushf jp mov sbb mov and inc xchg cmp or and mov rcl test jno mov xchg popf cmp aad pop xor lret imull outsl cld adc cmp adc and xor jmp mov jl sbb in dec mov fdivs adcl ret xor push setno jbe (bad) repnz mov pop dec arpl add push (bad) leave push cmp push xchg ja lret add xchg stos sbb push out dec add jmp arpl cmc ret pop pop (bad) pop mov pop add pop pop rorb popa or adc pop xchg mov negl subl sub or jl pop mov sub jl lcall mov xor dec fnsave ja imul cmp bound pushf fisttp mov push cmpsb sahf lods pop enter ja mov int and incl test jmp inc jecxz rcrb sbb xchg dec jb sub sahf jmp pop sti pop mov sub sarb negl popl add sub xchg pop mov stos pop adc stc test push ja iret icebp adc movsb inc jg inc sub fisttpl mov (bad) mov jle les jb stc mov pop cwtl imul (bad) addr16 cmp mov jb jge mov xchg dec push push mov or (bad) and addr16 inc ljmp or add jg adcb addl jno (bad) faddl sub adc stos insb fmuls mov xchg stos enter sub xlat mov inc xchg sbb mov sub inc (bad) xor mov stos popf sub mov adc mov xor jnp lods xor out mov jne add fisttpl add xor xor or adc pushf or (bad) cmp rcll ret cmc subl pop pop adc cmp push and xor cld jo mov test aaa call insl jns (bad) in hlt mov lds cmp or mov xor cmpsl mov and in ret int cli dec stc scas sbb xchg xchg ret inc mov out mov xchg repz insl cltd sbb rcrl aaa lcall mov dec and movsl outsl adc std rol loope mov mov lahf and dec pusha add enter insl mov cmp mov fldl2t pop lret pop rcrb cmp mov (bad) cmp scas cmpsl rclb aaa add ds negl sub and cld inc pop out ss inc and bnd and repz mov ds push sbb fist push outsb jne stos mov push jecxz sahf pushf mov and scas cmpsl loope je nop lea fidivr pop xchg movsl pop or les and sub pop (bad) adc and out bnd clc mov jb pop repnz fwait xchg adc xchg sub imul mov test ss cmp mov mov dec add xor outsl lea mov sub adc xchg jnp fsin mov das xchg pop xchg mov mov sub enter int xchg rcll mov outsl jmp fcmovne ret cmp (bad) (bad) rclb push movsl adc dec mov xor xchg les adc sbb cld test mov fnstenv jl pmulhuw jbe fisubr and mov in dec ds fcomip jp mov xchg mov ja icebp jecxz mov ss or int inc stos xor arpl loop mov movsb rcll clc adc in dec jl push dec dec cld sub mov push jbe jns mov push das mov jae cmp sti sub or and movsb add lods es movsl cli or mov shlb jg sti movsl mov mov xchg dec xchg cmp clc mov mov cld jmp mov jecxz sub clc out lahf cli in inc negl xchg mov mov in ret inc add sub test xor aas pushf dec sbb mov repz mov sub push cmpsl push dec les outsb lds mov pop xor ror lods movsl call addl dec sub cmp outsb ljmp daa inc iret jmp stos xchg cmp cwtl cmp lret int3 inc cmp fcompl mov popf cli xor loop out mov sahf enter cmpsl sbb inc iret sbb in cmp dec (bad) mov inc mov mov xlat mov sub jno mov cmp lock xor sbb pusha lods or in mov dec and xchg testb mov mov fsubrs lds int enter sbb push outsb int3 jb icebp insl scas add jg iret mov call popa popa test les inc mov int3 jmp int3 js sub pop sbb test jle cmc cmp mov pop xor pop lods js push in gs pop mov cwtl add dec iret push xchg les rclb and mov dec shlb adc sbb pusha stc adc in rclb xchg push and push or xor daa lret xchg xor mov inc mov (bad) inc push in dec sbb add cmp loopne shlb pop pop sbbl fcoms xchg aas cltd pop xor cld in popf inc outsl cmp or test lahf or sbb pop imul push rcrb adc (bad) mov enter dec insl fnsave sub decb jp dec inc (bad) (bad) sub iret mull add inc jl icebp xchg iret jbe in aam lcall stc ss add mov ds push rolb pop push clc push dec push and cmp mov ret or mov jbe push rol out mov add (bad) enter xchg mov sbb sub sbb leave jl test or cltd cmp lahf push in aas sarl mov outsl (bad) out adc roll daa popf push pop or inc push ja (bad) mov je jmp das stos add xchg (bad) ret into adc mov pusha in cld mov decl sbb adc out sbb mov stc or jne or cmpsl cmp jmp or insb jmp sub (bad) cmp push push cld mov jae std insl scas popf and rolb jecxz mov arpl in jecxz pop xchg call test mov sub mov jecxz cmp in inc js pop sbb push xchg aaa push pop cmp xchg lea add or dec dec mov sub loop fsubrs fstpt xchg les xchg jne mov movsl mov and pop in jbe insb data16 call mov push stos notb imul lahf repnz mov sbb enter lods fcomi subl out mov (bad) pop xchg inc mov js mov out xor imul pop shlb push or mov jl notl ret sub cwtl sub inc nop fs cmp adc cmpsl xor inc xor mov (bad) divb (bad) adc pop sub (bad) js repz mov xchg jbe jmp pop push push outsl stc rcl dec mov in mov mov ret xchg pop les outsb dec jg fisub mov shrl push jns add dec std (bad) lret test dec xor sbb lret dec std dec insl icebp (bad) std add daa mov mov out sbb cmpsb lds pop sub aaa or pop pop mov xor jno inc push pop fs push std or sub loope lods mov loopne and outsb loope js sbb jecxz xor xchg sub cmp sbb pusha inc pop add loopne popf fimull in stc pop sub sbb loope dec clc out lods imul push out out stc test inc xchg push cld mov in cmc test mov ret imul scas xchg ficom int3 imul and movb sbb mov jae xchg sbb imul fisttpll idivb adc pop push mov dec ret adc mov xchg jg mov jno imul addr16 hlt (bad) xorps nop sti sbb loopne mov mov xchg xor dec jo inc mov mov in dec mov (bad) adc add and dec push push xchg push sub mov mov xchg cmp cmp or push lgs mov mov xor sub sbb xchg (bad) cld xlat (bad) xor mov ret call mov mov push std jns jb icebp or pop push movsl push jne int ljmp jecxz das or sbb mov cmp hlt jmp mov push xor and add cmp fmull je cmp out push lock iret stos adc add sti xchg or mov push adc pop sahf xor fisttpll pop mov push xor cli out daa out xor pop xor jae jo mov cmp pop rclb fistpl cmp aad stos inc cmc int3 lds lcall sahf sbb out xchg cmp outsl aam clc push imulb inc inc mov hlt inc mov rorl (bad) mov and push adcl mov and jnp push scas or and push push out add push arpl cmp and aaa cli nop sti pop shlb sbb push aad or jle and ret test push enter sbb icebp in (bad) lea mov mov dec jno or lret cmp jbe aam dec mov ret scas divl fwait cmpsl std add enter cmpsb sub adc jp ds sbb lret pop dec stos dec js in sbb (bad) orb or sbb ja mov inc mov in fisubr test xchg sub out sub and dec outsl mov add lret roll xchg push pushf xchg mov inc sbb mov push jmp movsb jecxz dec jecxz popa push and cwtl mov inc cli add scas mov and ljmp mov imul lret xchg fdiv outsb dec clc pop dec jg cmp sbb jbe ret into fnop pop fildll mov gs inc insl push sbb sub sbb fdivr mov les pop adc cld xor arpl ficoml std enter loop les xchg jns scas pop dec mov and aad aas mov jb test pop mov lahf (bad) movsb repnz mov les push add push call ffree xchg xchg mov outsb pushf lods pop jb gs xor push sbb aad out sub out push nop jo into xchg int3 jbe xchg cwtl aad mov mov push cmpsb ret xchg in xor xor sbb jb sbb stc or and jle les outsb mov adc icebp aas dec or iret int imul sub cli shll xor daa and (bad) out lcall cmpsl outsb stc inc push jecxz push shrl nop roll in stc in fnstcw frstor inc pop cmp jbe pop push loopne (bad) mov mov xchg or mov ret aas sbb loope jns jbe sbb loop jae sbbl and (bad) lock mov sub pop flds sub add mov dec pop jl xor loopne lahf out xor loope add mov sbb jae lea dec (bad) sarb scas mov push mov xor stos inc enter mov je push push sbb xor in sub pushf mov push lds pop xor mov test adc or adc iret mov xchg loope adc stos (bad) sub cmpsl ret add inc or (bad) jbe iret sub inc std xor pop dec push out (bad) ja aas cmp aam dec push mov test jns mov fnstcw mov ficoml rorb shrb jbe dec cs (bad) jmp jns add mov pushf or aaa cmp jne (bad) notb inc lods stc or in mov cmp loopne push add dec outsl push adc in call inc push jmp push in jmp hlt sub ds inc or xor cmp mov repz test jo push jle push mov imull push pop lods aaa mulb adc insl sbb pop fs stc push frstor test xor hlt mull mov decl push ror ret and mov mov mov inc inc and repz mov lea jo or xor add gs inc subl data16 stc pop push or movsl sub sahf dec cltd mov setae push mov and aaa add adc and xchg and sti sbbl gs cmp push xchg rcll (bad) scas inc pop dec cmp lahf je cmpsb clc movsl loop cmp into or mov int3 mov insl inc inc add pop insb xor fistpl pop adc and xchg sub adc jp xor ds lea ljmp aad insl cs pop lods sbb imul pop xchg das aas jecxz xchg inc jbe (bad) jo movups data16 sbb pop mov xchg and sbb lods sti mov dec mov imul mov mov ljmp and pushf ds jge mov iret sti mov leave adc mov ja adc loope push xor mov int push jns stos and aaa mov es mov xchg pop lods push jns repnz std mov js jecxz xchg clc into mov out pop xor xor cmp inc pusha adc jns mov mov push lea insl or mov addl xor and pop and lods shlb call lret shrb sbb mov xor mov fistpl xchg inc mov mov mov (bad) mov gs movsl ds and jg mov adcl cmpsb and dec sub xchg pop push sub cmp icebp hlt aaa std mov scas dec sub and fs movsb in xchg add and lret sbb sub imul aaa cmp dec data16 mov ror cmp or repz pushf (bad) int (bad) sti sub into cmp mov movsb cmp scas icebp insl js xchg jo loop int or pusha fnop mov insl ja adc pop jns inc inc add add test mov out mov mov mov fcmovbe xchg inc xchg jp imul cmc js or push das bound scas scas bound cltd jbe pop mov or (bad) iret daa mov mov test pushf orb xchg xlat mov sarb xchg adc jns lea and arpl (bad) pop fistpl and push rcrb push cmpb stos cwtl das cmpl sub xchg mov es sbb stos jae stos mov out fs mov in repnz cs lret push clc incl sbb in lods jp inc mov inc ss pop (bad) mov mov les push roll outsb pop mov pushf pop pop add shll push in test in fstps add mov pop jge cmc outsl fcomps rep sbb test daa or adc std lcall fnstcw enter pushf inc sub cmp mov cltd popf or push adc and sub dec cmp hlt jno add (bad) pushf insb mov sbb inc arpl mov out adc out je xchg aad (bad) ret jbe lret in jbe into jl adc out add xchg xchg mov sbb mov xor insl pushf and jp or sbb jge lds pop and or xor shl and ds mov ja incb pop (bad) data16 dec outsb push xchg daa push (bad) lock mov cmp fucomp ja loopne mov scas mov push push and icebp xor dec inc cld mov std iret dec repz into mov int3 mov addr16 test xchg out aam les call mov xor add xchg jne mov cwtl call xor sub mov dec mov adc push cmp mov jnp and xor test or repnz dec mov arpl push enter dec les sbb mov sahf addr16 js (bad) in sub sub sub ja inc dec add clc push imulb push dec test mov ret test (bad) (bad) outsb das lea sbb cli fwait xor push std pop fisubr add add fisubl mov (bad) out sarb dec lret pop or xor mov dec mov cmp outsl sub insb mov push fs xor nop das cld mov insl call cs aas shlb pop popa sub rcll daa lods mov xor jmp mov dec cmpsb fcmovbe aad in movsb sub add jo mov int repz mov aad lock sbbl int push clc daa psllw adc test loope leave fcoml sahf popa fwait add xlat cmp lret jb and push push les xor adc (bad) adc outsl iret sub aam nop adc sahf mov ljmp mov sub xchg lcall jecxz dec xor jo aaa cmp out cwtl lcall shlb xor adc mov imul xor hlt jns mov push jl xor aam inc mov pop clc push (bad) stos jge mov pusha out jns mov mov cltd stos out movsb (bad) fidiv pop push adc sbb lahf xchg cmc mov insl les jl jp pop sbb stos add movsb sbb leave notl jne pop sbb sahf dec lcall inc push daa push adcl lds xchg in arpl lret (bad) fcompl and ja es and jne out jge dec push xchg cmp push in test sti pop es pop or jb (bad) shr test push (bad) pop daa push mov ljmp inc cmp inc cld sbb jno call cltd sbb inc stos xchg scas mov xor mov int3 xor mov and icebp add cwtl sub inc mov fmul es sub push daa stos add pop cmc loop xchg int out rol push pand int push arpl mov test mov sub inc fstp ss data16 cmp popf push push sub mov enter adc cwtl cli mov xchg sahf movsl jecxz testl enter mov lea pop mov push scas push sub push insl (bad) dec xor insl inc imul push in test sbb pop and arpl dec das jg xchg clc rolb mov xchg jne jge arpl sub mov lcall bound rcrl xor sti fiaddl stc loopne sbb mov jb mov push xchg insb mov (bad) mov sbb out clc push stos jb xchg out fs test xor and into lods push jge xor ret out pop xlat adc out push (bad) cmp leave and (bad) adc pop aaa cmp and lods test xor or dec (bad) xchg das addr16 sbb sub jne push lcall push and mov or push fmull jne sub addl or arpl xchg adc (bad) int3 addr16 pop cld push fwait imul stc xchg flds pop or bound inc mov adc out call incl sbb inc mov inc mov iret push or add inc sbb bound jno add imul loop pop fdivp push jbe add and mov in scas jmp cmpsb int pop sarb mov inc scas (bad) stc mov xor (bad) sbb mov leave call sub out test les daa sbb gs xor mov movsl pop je inc mov dec jne or out inc pop es pop sbb aaa xchg orb (bad) int3 xorl negb mov into mov lods int jmp dec xor push dec (bad) xor lea jmp in mov lods push lahf add jmp lea jo push lods adc adc in gs dec fimul sbb push (bad) insb imulb or inc xchg in fstpl in bound or mov mov cltd and push mov push aad push add mov add (bad) in repnz mov (bad) fiadd sbb adc sub sub pop push and cmp test push push lret leave cmp cmp js mov cli fimull inc mov xchg xchg ret sti adc mov or dec pop sub sti fsubl xchg jmp loope sbb adc mov in push sbb mov ficomp xor (bad) out out mov fbstp test test cmpsb mull cltd cmp jae dec xchg out int3 cmp pop push loope sti cltd and rep leave mov (bad) add outsl mov stos std jae leave dec pop mov test add inc mov inc sub call sbb lcall das outsl testb sub jns push push pop adc std sarl stc shrb jne addl ret jl jb ss pop call cmpsb and lret int3 fldenv imul xchg lret sub gs and push xchg push inc stc mov lret lea fwait cmpsb push cld jno sar ja xlat push and push imul adc cld insb push push arpl daa rol fldl lea mov mov sti mov outsb call sbb adc aaa scas aaa cmp add push add mov es (bad) idivl xor stc cmpsb mov cmp cmp lcall cmp xorb insl xchg subl nop jge ljmp cmp (bad) and adc or sarb scas (bad) mov xor aaa mov xchg sub lock and push jge aaa aam add mov mov sbb jnp mov or sbb lods adc xor nop enter push movsl sbb hlt xchg cmp cmp jmp dec dec and decb pop sahf push jp leave repz sub stc loop lds (bad) push enter mov pop in aad pop (bad) sub xchg push adc mov les jge sbbb imul mov or push dec clc (bad) call sub rcrb inc pop mov fiaddl hlt add adc cltd faddl push lret aaa cs lahf cmp mul ljmp ret lret adc (bad) or lods inc ljmp int3 or arpl add xchg shufps sbb xchg popf sbb aas pop cmpsl ret jg lea mov popa pop rcr data16 dec jp insl mov loop jb mov ja inc lcall xchg sub and mov mov jg jl in pop add jge push loope push sub aas in out (bad) xor sub fs sti jno push les (bad) push lea xor pop mov stc jnp cmp xorl fcmovne lea fimul xchg jp pop or ds mov xchg rcr pop adc cmovb push inc jge or cmp scas (bad) cmp sub stc aaa insl jg xchg mov mov mov push sbb pusha out es sbb push add jecxz mov mov push pop mov inc pop mov push sbb push shrl inc sub (bad) sarb cld sbb xchg testl lret add inc (bad) aam ret lret movsl sub sbb mov mov repz jmp loop clc inc sti movsl les orl push lahf das or sti sub cmp mov pop push mov ja loopne,pt push sub fbstp mov adc test mov les in jo lret xlat xor jnp or jb sub jae test xor out sahf rep out insl pop pop adc inc jmp insl push movsb add sbb into imul mov or mov stos pop push pop aas inc pop stc or popf or leave int or pop test cmp inc shr add adc and (bad) shll aas mov xor not aam push jbe and in leave ljmp jns push fiaddl cltd ret sbb rcl and sbb sub add in repnz popa fidiv xchg or test jp mov push es pop adc sub mov dec xchg sub mov lods mov pop bound xchg jo mov xchg pop js sub dec sub inc shl mov pop and inc in adc sbb inc push outsb int cltd jne sbb dec push lret or ss cmc lods out lock xor gs stc repz movsb repz sbb xlat scas mov int xor clc push test jnp cmp xlat outsb std add out xorl jp mov fidivl js mov mov jns pushf mov cltd add xchg int movsb jns jmp popf stos pop fistpll xchg push mov loope add push mov pop cmpl ljmp fwait ss lods push andl mov sub xchg inc test inc push notl jae dec mov xorl pusha lahf xchg lods mov xor adc sarl mov xor push rol loopne out in sbb push test or xchg repz fldenv jmp dec mov xchg mov dec mov cmp push outsl jp pop cmp outsl add pop imul mov cli dec movl outsl dec cli pop xchg xchg js cwtl repz (bad) mov and loope lret sbb jno pop rcll or mov jbe dec xor push push dec call add iret push mov int or mov cli fcomi aas daa psubsw es orb stos add pushf sub xchg dec stc cmc shlb xor sub je cmpsl xchg daa mov inc clc jg pop aam ret lcall popf jle test (bad) adc imul jno (bad) aam jbe lods cmpsb xchg dec inc call jmp sarl scas xchg scas ret cmp das mov jle rcl ffreep xor in (bad) mov decb cltd push jno xchg js in pop enter je sub mov fs dec fldenv dec shl stc lret and jl add loopne xchg dec dec lods nop mov jp popf insb inc stos icebp cmp loopne cld ljmp sbb mov xor cs pushf cmpsl inc clc xor push and mov out sbb mov push xchg dec lods and lds inc (bad) push out bound and arpl test jmp sbb cmp xlat pop lods sarl push pushf and (bad) ret leave loope imul lock xchg pushf mov (bad) inc mov jne les jmp jno push sub out mov ret mov sub mov (bad) daa add iret movsb jge sub and das cmp movd xor pop lods pop fucomip test inc decl scas test or pop data16 fldt dec scas adc imul into leave xchg adc cltd or push movsb es or cmp xor add dec popa pusha fnstsw sbb add pop out inc and mov xor adc ljmp lret (bad) push outsl jb rorb sbb rcll outsb ret push fs and stos fs dec sub mov (bad) inc notb imul out sbb les push js mov lret fisubl in push sahf and insb jmp sub lret jns loop mov aad sub jmp aaa dec imulb loop sbb push cmp sti mov sahf jne cmp adc stos jb mov cmpsl push add adc fmul add sbb ret sbb sbb (bad) push or push xor lods in paddusw pop push mov mov insl aas xor in jle push or add xchg aaa into pop push nop mov outsb sbb and inc push pop cmp push ds (bad) mov add pop jl mov mull sub mov andl cltd loop pop in push push mov and add ret xor je ja cltd xchg jae dec push or fwait cmp pop jecxz dec test in sub icebp shr rorl sarb and lcall test loopne imul cmpsl jne dec cmp (bad) jge (bad) mov mov call inc shll mov adc scas fildl lods mov (bad) pop stos aas (bad) popf adc push pop in jl lods je out jg (bad) xchg jo hlt (bad) ret inc ljmp jne xchg lods jo jb out xchg dec adc adc pop xor out push add aaa out icebp pop imul add mov test mov and mov inc sub insb ss data16 pop fisubrl movsb fiaddl ret add leave sbb xchg mov and pusha (bad) (bad) in sub (bad) fs cmp xor or fiaddl loopne,pt and loope mov and insw jecxz js or test icebp jb push mull mov push and (bad) xchg mov sahf aaa test dec pop mov mov cmpl xlat mov add nopl aad std jecxz cmp mov push dec and xchg ret pop jnp mov mov arpl xchg jp pop out xchg mov and jns ret std jl int3 cmp enter lahf mov mov in sub dec pop int3 cmp and jne adc add jle je cltd (bad) imul xchg aas or fmulp outsb dec pop sahf aaa jle mov inc pop pop jecxz push adc addr16 stos lahf mov ljmp aam les xor std loopne roll int3 lret (bad) xor xor xor sub sub js pop lods or mov push rcrb fs imul into lret or pop stos adc aam arpl (bad) dec pop lahf xor call lret dec cmp rolb add inc sbb arpl insb addl fstl sbb mov sbb inc in les cs mov insb lret pop lret addr16 les addr16 insl push cmp jecxz popf cmp rcrb jmp test sub jo rorb cmp sbb mov dec mov iret loope out ja (bad) insb imull cs fwait mov push dec jp and mov (bad) out ljmp out mov fadds push test jg (bad) ja adc jge imul cltd out rorl jns sub jnp jae mov lcall cmc daa in mov les dec cmp jp aas inc cmp ret dec es push xlat cmp stos in or outsb ret sahf pop lahf notl mov mov dec jnp (bad) sbb stos out adc inc mov pushf stos clc fildl cli stos inc rcr xor pop call cld dec popf loope lret xchg xchg pop jecxz in mov fcomip pop std xlat adc sub cltd repnz push xor insl fwait scas mov dec inc (bad) hlt mov (bad) xor adc ss inc fs mov sahf mov mov addr16 fcoml fistl push fstps cmp pop inc cmp and (bad) je mov lock (bad) rcll clc scas sbbb jb loopne loop xchg fwait insb pushl dec cld jns pop sbb sbb mov outsl rol jecxz mov xchg mov lods sub jnp pop insb rol sbb arpl xchg sbb aaa push rolb add push xchg cld out add addl adc (bad) out pop scas push mov xchg inc cmp push roll sbb (bad) push add mov sarl nop jno jb cmpsb stos mov jp xchg mov add add inc pop ja fwait outsl aam jl mov js pop cli in (bad) push lock fs push push popa cmp gs in in pop or push popf mov movsb dec jge xchg sbb out mov push negb push loope push nop (bad) jae out ror inc xchg push jge or push cmp mov ds push sahf dec mov sbb (bad) imul sub cmpsl data16 mov pop pop insl pop mov repnz jno ss mov movsl mov xor cmpsb (bad) into nop ja daa test add rorb and jo xchg or mull fsubr mov rcrb icebp jge stos xchg vpor aas pop pop cwtl lds popl (bad) adc mov fs movsl addb clc sub sbb (bad) mov or cmpsl xchg cmp sub cmc sub fidivl shll pop hlt leave jae mov scas xchg and xchg stc adc icebp jle rcr jmp in mov inc jmp push fistp shlb fiaddl mov sub sahf outsl push notl pushf insb fisub dec iret xchg mov and push cli adc push loopne adc push push dec outsl dec mov fistpl stos sub adc xor add push push fs push aaa push hlt xchg jnp mov sub xchg lret scas pop sbbl jl and rolb xor aas pop mov shrl sarl xchg pushf cwtl rcr xor mov pop fbstp jae push push lahf enter inc cld ljmp lock xlat and mov loop imul xchg sub sbb (bad) (bad) leave js shlb adc roll sarl les dec (bad) cmp mov cmp insb xchg ret xchg fs or and nop adc mov sub sarl insl test push aad ret hlt mov sub xor sti mov rorb push and imul xlat into mov (bad) aam pop repz sbb xchg ret xchg fprem mov lock push xchg (bad) stos cwtl lock pushf inc cwtl mov std (bad) mov pop sbb xchg sti xchg aas jae imul popaw scas push fldt push sub out test inc mov loop jg shrl (bad) pushf adc scas bound rcll jne jmp ja xlat cmp push adc xchg dec sbb arpl lret out jnp ret xchg jmp adc and lock fwait or add or in rcrb mov repz mov daa (bad) fistl mov adc inc xchg arpl ret and lahf sbb push arpl bound add inc xor jmp xor xchg scas add in fs (bad) xor aad mov push and outsb mov aas sub nop call fadds cmp aam aad jecxz cli lods dec fidivrl jl sub sahf (bad) out mov lcall imul into fcompl mov loope,pn pavgb mov pop and adc outsl xlat jecxz mov mov xchg xor loopne scas icebp adc movsl inc xor mov roll int3 lcall int3 push push xor add daa lahf sti push sbb test (bad) and push dec dec xor test xchg test and add jl inc ljmp pop imul imul cmc mov mov scas push out cld jl icebp sub add and test (bad) clc aas and lret fdivrl pop in out arpl lret mov dec imul test cmp cld jbe loopne inc sbb psrlq lods sbb idivl mov pop (bad) ss shrb cli inc rolb dec mov es out stos mov push xor push jnp mov jo movsb xor (bad) icebp imul int3 into jecxz repnz mov fsubrs mov cltd jge pusha sub jne ljmp add jge dec out mov dec in hlt jecxz sbb adcb mov mov hlt jle lea adc sahf adc sub cmp jmp and and pop cld sub cmp cmpsl fisub cwtl sub push lret cltd out ret add pop ja loope lea xchg inc push pop stos xor sahf cmp jo rorl addr16 xchg or stos lahf lret repz (bad) iret cmp push and test add stc sub lods test lahf test int3 dec xlat push in ljmp mov inc fcmovnb sahf ss stos and push lods fs and leave std and clc or push cmp daa or jl rcrb fwait mov daa stc or inc lock lahf pushf pop mov sti xor jg mov (bad) sbb stc test mov addr16 and xchg out subl call stos jne xchg dec jmp outsb push pop cmp les in sub je dec cld and pop pushw jbe xor mov xchg into enter mov repz shrb or imul push pushf pop push incl mov fistl repz aaa popl repnz (bad) (bad) sub in pusha call ficoml out sti push ds arpl push xchg popa lock out sbb inc push ljmp inc dec movb add sbb jl fmull cli dec push out mov rolb daa mov (bad) mov scas jmp bound psubb sbb push sbb out adc cmp mov adcl mov ror xor aaa jl cli inc mov idiv push das dec cld dec mov lret jne pop in push (bad) loope call add (bad) fiadd hlt sbb and mov ror out adc pop dec mov xchg xor pop outsb or enter or pop adc push mov mov adc fnop shlb mov mov cmp int3 cmp xor pop mov ret xchg scas and mov push mov icebp adc sbbl pop jne mov (bad) (bad) sub pand (bad) repnz and cmp mov outsl push push outsl shll andl push cmp test jp cmc pop xor add cmpsl lret stos dec xchg xlat jecxz rorb into and out xor ret fisubl into (bad) out and lock bound pop fcoml fisttp les jns pusha dec or ret addr16 test lret fmulp sub insb jb div jb cmp jmp xchg mov decl mov mov add icebp das data16 xor sub sub jns or dec aaa jmp adc jle inc mov inc xor scas stos and cld fwait cmp out cmp out mov xor lock sub clc or push test js mov xchg enter rcrb icebp pop aad or and cmp add add fdiv sub lcall dec repz push mov push sbb imul push xor loop cmp popw adc jmp fsubs fcmovu mov xchg fdivrl or fs cli loop dec rclb jo mov jmp cmp inc orb mov (bad) dec outsb out sbb lahf inc out sbb cmpsl test movsl (bad) dec int3 out mov pop (bad) jbe or push add shll mov xor nop test fwait popa mov push push daa mov aaa fcmovne cmp enter lcall cs add push sub lods rorl inc movsl in pop xchg cli in xchg push mov or lar rorb (bad) sbb sbb ljmp inc xchg pop flds adc jge and mov cmc mov movsb in adc sarl and addl in arpl gs or leave scas jb ljmp mov in mov pop mov fisubrl inc int iret mov imul imul adc or inc mov push shl test test cmp (bad) arpl push jl movsl in out pop mov loopne mov push (bad) ror fsubl fcompl inc andb ret into xor out add repnz adc push xchg mov mov movsb xchg xor push push push and dec lods add test mov mov push into fiadd mov in and push fimul xor fyl2xp1 in sahf xchg xor jmp notb imul mov repnz add call pop pop imul ja cli mov repnz js adc sub add aaa lcall pop mov leave dec and movsb pusha mov lret push repz scas cmp jbe push fs leave or cmpsb lret outsb pop lods aad lret fs jae pop loopne pop inc jb and jb je mov test jge or cmp call pop jg cs (bad) jmp in fidivrl pop leave jno hlt mov std lret pop inc jle leave arpl xor insb (bad) cmpsb outsb sbb loopne scas pop push sbb mov mov jmp sub jae xchg lret pusha push sahf xor leave stos out adc rep xor iret inc and insb xor xchg outsb push mov loop daa enter and (bad) xchg cli mov pop adc jno cld loop jg sub pop cmp arpl mov add and mov mov pop lock ljmp xchg inc movsl mov or xor sub mov daa sub inc xor sub int mov sahf loop jns loopne pop ret (bad) lods add mov scas cli cmp movsb mov in cmp cltd out and testl cmovns mov and out inc repnz sbb mov outsb jmp cmp arpl xor fldcw in jl inc xchg shl xor push fisubrl iret incb sub sub test in rclb adc leave sub push lcall mov dec dec push pop ss add out inc hlt xor subl jnp lcall jecxz and loop and (bad) sbb cmp loop xor fbstp mov fsts adc pop (bad) mov outsb inc scas xlat pushf or cmp xchg icebp loope mov jno adcb ja cwtl adc or push add xor ss dec jnp (bad) mov jecxz iret or push lcall enter icebp insb and or lea xchg jmp nop sbb outsb xchg (bad) lcall les inc xor outsl arpl mov ret out into and icebp or pop nop loopne sub jns lret in test inc popa jmp scas lds into pop sub push add and pop lahf movsb sbb insl incl mov xchg add xor (bad) rol imul mov push int ljmp call mov cmp add ret test push or fldl2e push call mov mov cwtl les dec aas iret call push fs jnp or mov adc (bad) push cmp shl repz repnz cltd outsb jecxz orb cmp (bad) sti clc dec (bad) int movsl cltd jl push xlat gs neg neg nop loop fxch mov mov mov and fldenv rorl (bad) xchg lds mov jno daa jns inc mov repnz mov sub xor imul rcll add jb xor lods push jo cs xlat pushf sub mov imul rcr loop mov fmulp jge jb add mov adc mov sub jae lret adc inc repnz pop xor cmc stos push (bad) cmp or stos push cwtl pop or sbb inc and adc cmc enter dec ss mov out mov test out rcrl call push pop xchg mov mov mov cmpsl (bad) xlat je inc out dec push pop sbb in ret add dec pusha dec inc ret in call xchg stos xchg fsts xchg mov jle aad in (bad) ficoml cmc inc push cltd mov inc cmpsl jbe ss int sub adc cmp jmp mov sbb cmp adc and pop xchg into inc icebp xchg sub gs cmp or imul cmp mov gs ds mov cmp arpl xor das int3 aad sar jmp out mov negb xor aas aam jl jne sub xchg ja or lods mov hlt cli lods and clc xchg int adc dec enter or pop inc jecxz arpl add shlb or ficompl sahf mov bound pop cmpl xor mov dec mov stos push mov xchg add sub scas mov xchg push insb pop and sbb clc mov js or fwait sub push repnz push and jl mov sbb test fistpl dec add arpl call sub das movsb cmc xchg lock sub mov (bad) adc lcall jmp adc mov test int imul dec (bad) ljmp cmp sub cli ja mov (bad) pop and ljmp sbb call or push je inc out loope push xor mov mov (bad) (bad) pop sbbb mov inc pop or lock in xor mov xlat add sarb cld lock sbb ss je std mov push das push dec sbb adc addr16 sub push or inc data16 out lret cwtl adc enter stos and std mov imul inc or imul bound das in test idivl or dec mov and into (bad) xchg sub sub cmc ja and mov push clc inc jle jmp or pop and sub sub or mov clc cwtl xchg inc sub fdivl mov pop or jo pop fisttpll (bad) pop or push lahf std lock cmp test mov or sub dec pop pop pop ljmp ss test nop mov mov movsb (bad) negb pop (bad) loope adc icebp mov (bad) lods cmp mov aad out sbb add movb jl scas push and mov sbb imul (bad) jbe push movsb add and orb stc rolb arpl fsubl movsb sti dec stos mov adc jg pop inc xchg jb xor xor std jnp xchg mov into push dec sub adc les adc pop inc xchg pop movsb pop iret mov outsl or aaa add mov lahf sub sahf (bad) xor mov jo cmp push int inc jb mov cs inc stos jmp dec pop (bad) sub or rorb pushf or xchg push pop or lea jne mov push add scas iret jns lret mov add (bad) inc jg out cmp sbb add push (bad) sti xchg mov adc lods out insb jge push call sub or call xor sti and hlt mov aas sub cltd ja inc sbb or xor mov fild ret fdivl mov nop (bad) ja dec sub mov jge (bad) mov mov lret cmpsb das lods lret jo or (bad) pop add or and jo icebp je (bad) sti jns push push hlt adc or loopne or (bad) or push jmp orl ss sahf aas pop push inc cli int3 cmpsb out cmpsb cltd mov sub loop cmp lods icebp mov lret sub xor mov or mov faddp push gs in mov pusha (bad) cmc mov sahf or (bad) cmp dec push inc stos imul jne lcall in sti xor or mov mov mov cmp cmpsl out daa or mov push jbe push or mov jne lahf pop mulb and int3 lds fstl inc pop cld (bad) mov and fcmovu add in leave lahf dec (bad) mov adc push cmp lea scas fstl ja imul xchg sub lret push icebp (bad) sbb dec or mov dec fistl or lods mov pusha cld dec inc xor jns sbb cmp scas sub iret and adcl mov jo mov and movsb and in aaa out dec push xor icebp fist dec pushf (bad) rcr dec std daa std cmpsb sahf adc imul call (bad) in jae mov push and (bad) cli shl sbb mov mov and push inc jmp sub push mov push (bad) out rcll les sub fdiv lods pop pop aad mov lret loop and push js sub (bad) push inc adc mov add inc pop sub sti inc cli push cmp outsl jne mov xor jne jg scas fsubl sub jp sarl xor xchg sbb mov addr16 push data16 mov (bad) addr16 push jbe xchg and jg les nop sbb dec mov fwait mov (bad) mov push and dec loop dec inc hlt popa (bad) mov push (bad) aaa xor cld pop (bad) sbb cli xor jns push les jle push xor test les fstpl movsb mov mov add sbb andl in sub add dec xlat enter and gs pop daa adc jle loope mov push setp lods sbb ret hlt insb hlt cmp fld popa fistp mov fwait rorl add stc mov orl or mov and mov scas lret sar mov scas jo ljmp jno (bad) push sbb xor nop mov xlat adc into es mov into clc popf inc loopne addr16 mov iret loope pop jnp push imul (bad) repz lock nop iret jge mov mov mov aaa lock jmp out cs sti aaa pop jmp pushf mov mov lret sbb mov mov adc (bad) ss sbb into nop arpl jecxz add fwait jno,pt fs xchg movsl stos mov in iret sbb jns dec jb xor ljmp nop arpl xchg fistl outsl ljmp and dec imul and dec mov or pop xorl cli push (bad) pop into sub pusha loope mov out call mov push outsl push shlb lock jbe sbb cmp sbb mov inc sbb je inc into cmp les jle xlat push int3 jmp movsl push jle movsl mov jns cmp icebp dec enterw jmp pop loope in pop jp and popa push push (bad) dec and jg adc xchg jmp out mov sub push and add insb outsb pop out in add aad bound and imul pop icebp in mov sbb mov scas aas loop pop outsb test aam mov dec push xor es jge mov pop cmc mov enter and jl jae enter (bad) pushf sbb iret jbe jmp (bad) in sub sub mov ret fnstcw rorb das xchg push movsl (bad) (bad) mov push ret inc and fcomp jne sub adc movsb ret into dec mov sbb cmp mov jno addr16 fild cs cwtl jne adc cld fcompl out fidivrl mov (bad) sub push lret dec dec xor xchg jge sub (bad) insl lret aas (bad) cli repnz mov std cmp mov data16 xor clc and xchg push push scas and popf fwait test out int3 inc or fstpl dec xlat mov es ds pop dec ficom push xor test jns loop push or loopne enter jns cmp stos test out inc mov xor sub jl and lcall imull (bad) in lock and enter sub sarl inc adc scas out xor inc (bad) repz stos inc xchg loope popa jne daa roll mov clc popw add mov mov xor not push or sarl inc pop and push jbe inc ror jnp (bad) addr16 shll mov addr16 xchg loop hlt add mov add jo cwtl loop stos pop xor outsb pop mov and adc shlb cli xchg in lret sub (bad) jno loopne mov xor cld xchg and fisubrl dec test add gs push and add mov icebp mov sbbl loopne inc cmpl or in pop rcr je dec mov cwtl imul ficomp fstpl xor repnz repz or loopne bound sarl pop or mov vmread popf divb js add inc jl lods push pop mov xchg mov and stos jbe clc or insl in daa dec or jge mov jae out jo add outsl push jno fwait cmp loop sub adc mov inc and ja adc sti out jae cmp xor push fwait les nop ss or and pushf sub (bad) faddl pop xor test jl es ret and sbb je mov jns hlt in insb pop out daa adc adc xor or push or sub sub scas push mov loope test sbb mov (bad) ss pop and cmpsb jl or cmp ja xchg in mov pop sub jle (bad) mov adc inc mov and jae pop hlt mov outsb jmp fdivp mov jbe loope gs ret test xchg insb lcall pushf stos xor dec popa (bad) out sub lret stos loope iret les xor out pop push adc fs movsb jle and hlt mov cmp pop fwait jne pop pop dec and sbbl les xchg sbb pop aad ret jno or xor bound cmpsl std xchg xchg test out mov jns pop jbe push popaw aad mov add aaa sub xor into and inc popf scas sub cmp cmp test cltd lods push add push aaa fcomi std in push test cmp push pushf cltd adc sarb jle xchg nop xor sub (bad) xchg popf and lock sbb aas xchg pop ja test cmp dec and and dec inc xchg sar pop cmpsl add and push sub loopne jl jae sbb add es jno mov dec mov lods xor insl mov cmp jmp imul stos andl rorb pop sti loope xchg jno mov ret push stos leave pop mov ret add pushf (bad) pop icebp sub aam push sahf repz call test mov roll pop jae pushf gs dec outsl idivl adc jp (bad) iret or sub insb nop repz sbb icebp sub cmpsb cwtl xor fisubr fstpl mov dec icebp imul inc clc dec cs inc cltd in cmp mov loop adc mov and les cmp pop xor dec mov mov sub inc cmp out jp scas mov push (bad) ljmp fisttp sahf in arpl nop xchg loope test sub shrl adc push xor lods pushf imul dec (bad) pop sbb fnsave aad in mov jmp sbb popf lods repnz mov shrb mov xchg repnz mov mov sarb mov ret and jb mov (bad) mov push sbb inc repnz fcmovb push test sub iret cmpsl insl movsb repz out mov mov in mov push mov gs into sub into push cmp shrb clc pop arpl sub (bad) (bad) ret push adc mov sbb bound lock rorb fsubr mov inc ret pop mov std push sub xchg push dec mov scas push jae sub xor movsb stc mov cltd lahf adc into mov mov jge cwtl cmp pop out hlt mov sbb lcall add push rcll jne adc xchg mov mov mov push iret mov dec outsl iret and cwtl sbb xor jp decl dec in mov bound push sub ficompl jge sarb cmp bnd inc popf rcrb fcoms leave insb std je adc movsb sbb jb (bad) push mov jl dec out dec sub cmc insb iret jnp hlt jo pop cmpsb das movsl pusha push xchg pop adc xchg sahf push dec add mov mov incb dec es push dec xor lods mov icebp lock ret subl inc jmp mov jnp aaa mov inc mov cmp and pop xor repnz inc jne fadd popa or dec repnz add aaa popa cmpsb push mov sub ret (bad) aas mov aas add jle xchg mov cmp lods cmc lret xchg jmp out leave push sub mov cmc pushf adc out pop jmp cmp (bad) sbbl xchg and jbe loop lods aad cmp xchg xchg lcall cmpsl sub pop (bad) xchg ret cmp pop in movl std inc notl xor cmc fdiv inc (bad) scas insb inc sarl (bad) jb dec xchg push push idivb stos sbb stc out dec jle cmp push (bad) lret ja (bad) (bad) add mov cmp rcl mov fnsetpm(287 mov out ja xchg push cmp dec std popf hlt stos push xchg enter out loopne pop jns test mov add pop (bad) movsl cmp test pop fmul push cmp adc and mov (bad) nop adc pop int add ljmp or js cltd frstor lcall in push fnsave mov jnp jb arpl call mov inc je sub loopne movb xchg cs cld cs push sub popa jne ret (bad) cld push mov loop fsubrl pushf insl jmp gs mov mov cmp mov pushf mov push cmc pop iret dec mov loop js (bad) adc cwtl push data16 add cmp lds js call data16 mov bound sbb jg jg jge sahf loopne push inc mov lcall orl sbbb sub test jle stos xchg mov outsb jae outsb add inc mov stos xor push ss dec cltd aad arpl scas lahf sbb shrl movsl inc adc cmp int rcl data16 mov pop sub jp (bad) push and pop std mov add cmpsl mov jecxz push mov adc cmpsl adc sub mov in sbb lds pop ljmp and push mov mov dec cmpsb xchg inc incl xchg jae mov scas out dec or inc xchg cli cmpsb fwait xchg pusha and inc mov xor push idiv popa and outsl dec ja in or enter dec mov push mov dec cltd ret or mov dec pop cltd and xchg xchg rclb jp (bad) (bad) xor lea repnz cmpsb push mov subl scas sub rolb add pushf mov scas add std inc ficomp pop jmp push add adc aaa inc scas idivb bound dec push dec sahf pop cld xchg rcr mov fwait pop xchg push pop xor adc mov adc pushl adc jbe xchg nop movsl cltd jns out sahf cmp dec and sub fwait (bad) ds test lds mov enter out mov popa jae sub xchg ja (bad) test or pop mov sub int xlat stos subl jne xor ja sbb fsubp jge push insl or jl inc mov adc pop mov in int jmp xorps outsl add rclb xor jmp sub jno jp push adc adc lret inc mov mov add mov or fiaddl incl clc lock and popa inc roll push mov push repz push cmp mov dec mov mov incb lock sti jb repz enter or aas jmp jle int push xor lcall out daa cmp dec (bad) lods jno into daa mov mov clc inc dec mov push sub fcom lods pop mov imul or sub (bad) dec mov (bad) jp push (bad) rcr stos mov into and js shr inc dec adc push xchg cmp push aam clc insb imul xlat fs mov pop jo (bad) and mov pushl xor sti (bad) test push push test sub lret cmp in pop outsb add aam jns ljmp sti lcall popa or shrb mov addr16 aas and push sarb fisttpll mov aam mov jb push or pushf push fbld fs pop mov adc sbb cli lods in pop and (bad) xchg out sbb scas xor sub mov popa imul pop (bad) fucomi lret inc lcall add test inc sbb or jbe fcomps xlat shr dec sbb icebp pusha inc and adcl jecxz xor mov (bad) jae es xchg cmpsb in adc adc mov (bad) addl paddq out lea mov cmp in fnstcw divb and add popf sahf dec insl cmp xor add gs mov inc xchg inc push stos rorl shl inc push and call and mov jns dec dec sahf xor stos in outsb or daa mov cmpsl packssdw cmp jecxz add scas cltd pop mov jns xor fcmove pop sub lret add js mov hlt push xchg mov mov pusha jmp in jo mov dec jle mov pop arpl pop aas jbe push ret jno adc sbb js and jbe (bad) mov scas push xchg (bad) cmpsl xchg bound xor int cltd mov test xchg out popf mov cmp mov stc loop inc lds insl pop cmp adc rcrl xchg test push add icebp adc mov int3 daa arpl sub cmp lcall in mov dec cmp push jecxz xchg push das movsb ss pusha jb mov pop and xor add aaa je lret lcall sbb push or inc lret push hlt sbb loope mov xor or in add test fbstp pushf pushf xchg lods lods in push push sbb fisub cmp shr mov leave popa adc or stc add push sbb aaa jb sbb jmp test adc insb insl xchg xor fwait ret lcall sbb jmp jp aaa ret xchg enter jno jle dec jmp mov hlt push lcall ljmp fidivrl roll test push lret jne mov xchg fildll mov push and sbb dec jl (bad) std clc hlt lock xor push cmp dec pop clc rolb inc and xchg sar xchg mov popa cmp in sub outsl xorl pop mov fwait popa dec xchg fldenv mov fdivs das jnp cmp jns xor xor adc and xchg mov dec xchg repz int (bad) in push sar arpl cmpsl mov outsb arpl cli iret int3 adc push dec cmc arpl push out cs cld cmpsb outsb sti insb xlat sbb (bad) insl lods jbe mov cmc inc cmp sbb stos sar inc cmp mov xor arpl mov mov jne add adc push or cmpsb loopne fcomp sbb sarl and pop add das dec leave jl dec fldt add mov dec inc dec mov jnp imul pop test cmp sub cmp inc rorl sub ja movsb icebp sbb pop test pushf test mov cmp std dec and (bad) ja mov push outsb in (bad) xchg daa sbb mov push imull cmp xchg jmp jb testl sbb cmp mov jb or cmp sbbl xchg xor mov insb cli mov mov (bad) ljmp sub or scas jne ret mov rcr cmpsb (bad) std pop ror mov das xor repnz das xor mov pop (bad) inc xor scas xchg icebp push adc xor push sti mov idivl push adc adc push aad sbb adc adc (bad) popl (bad) ljmp mov fsubrp loope scas mov aad xor pop mov test and addr16 (bad) iret out lds add xchg and inc jae icebp pop cmp loop lock fs sub dec mov or insb fnstenv cmp cltd add xchg xchg push in js rcll push lret insb cli add jo pop xchg jo sub inc push mov inc imul test imul (bad) lahf push or jb adcl lret repz in cmp ljmp call mov imul mov dec imul in push test dec fdivrl sbb push xchg stos andl cmpsb inc sub insl lret xor jp loop push arpl (bad) mov loopne push icebp mov in push mov and jg push loopne (bad) or idivl and inc fldenv add sub scas jae scas mov sub xchg (bad) jns xor insl test mov ds push lahf fisubrl jl sub xchg mov out dec (bad) sahf pop mov ljmp sub out add and and dec jb sbbb loop dec lock xor lods or pop xchg inc cmc and enter jb cmp gs nop fs xchg xchg xchg popf jl out sbb sub sub add sbb jecxz sahf adc inc jmp into aas mov sbb movsb lock mov sbb ss vpmovsxdq dec dec jp ljmp jbe jp inc insb imul lock dec pop aad dec xor adc data16 xchg and pop add push jo pop cmpsb jp pop push inc (bad) repnz (bad) mov les cmp pop rcrl out pop inc push dec testl and xor sub insl call aaa xor fdivr movsb xlat les lods jb add shrb dec sbb lods gs pop mov mov into outsb jl fsubrl ljmp push sbb int3 mov mov cs dec ljmp pop push dec into adc mov lods mov xchg push in fcomp sbb (bad) adc imul sub fild ret mov mov dec or out lock add push imul xor pop aaa sbb popf and test add ds fadds jmp outsl sti xor or hlt loop adc hlt dec lcall add outsb pop clc shlb mov add xchg pop lods scas ljmp (bad) cmpsb (bad) cmpsb pop or push xchg xor loop in xchg test push pop xor dec and fisubr popl jne ror sbb dec add in mov call test xchg out push pop pop cmc (bad) aam test out out stc sbb cmpsl lret outsl xchg and stos xor in push fcomps pop (bad) pop mov cld sahf imul test nop lds mov std xor cmp mov dec jae adc push pop sub lods xchg and sbb daa int3 sbb sub hlt sbb mov add or nop cs in mov push loope gs jle movsl cltd leave fs push mov jb (bad) cli (bad) lods scas insl dec inc data16 fcomps pop cld cltd add pop leave push les adc and mov inc repnz aaa (bad) cmc (bad) pop add cmp dec xchg lds gs fstpl ret sbb cmc cld jmp cli mov subl push cmpsb xchg lcall or xchg cmp push mov jl lds movsl movsb and int xchg insb jl jp das mov gs lock loope sub dec xor lds icebp adc std xor test repz cs bswap fwait scas movsb (bad) mov out (bad) repnz ret sbb mov std mov aas dec jb pop mov pusha sub mov and inc or sbb mov and aad test test and mov lcall enter xor imulb and mov int3 sarl cli cmc fcmovbe mov or pop push xchg ret jb jae js mov das bound mov jno cmp mov jmp adc mov (bad) sbb sub es pop push inc lret aas out lret loopne,pn adc fdivrs das mov loopne scas pushf mov dec popf inc cmpsb and jne add jbe push push cltd sub (bad) loope push pop outsl btr xor push in ljmp inc lock mov cmp push fcmovne clc mov jnp ja js xor or mov int3 (bad) (bad) mov and mov lret subl mov lods cmp inc out bnd sbb roll mov sahf mov jp push cmp push shll (bad) xor arpl push mov call mov pop jbe pop pushf and fdiv and mov mov nop dec arpl ja push pusha push push out sub iret (bad) stc jnp test pusha sbb arpl cmc rcl xorl aas cmp sub and pop fwait int3 test jmp negb fbld js loop jns sub js push pop andl enter pop mov mov jle movsb jnp addps lods dec (bad) aam (bad) int3 mov (bad) push cmpsl adc adc mov stos sarl jbe xor jae cltd popf mov dec hlt stos mov mov jnp lret rcrl iret test pop scas mov mov enter add push ret test enter jmp std fbld cli lret adc xor pop inc jnp xchg insb xchg pop sbb cs inc jbe xchg fs jecxz out sbb mov mov lods xchg pop (bad) loope mov mov movsb mov insl test lcall xor jnp add les ret cmc (bad) or xor test fistp mov xor mov test loope add rorl shrl in leave pusha mov or cs (bad) (bad) stc mov loopne dec dec xchg mov test mov bound test inc inc rcll dec icebp lea sbb xor loopne cli fcmovb (bad) lock fsubrs cmpl jmp es lcall fdivrs xchg add mov sbb aaa loope dec loop inc sar pop jmp mov mov pop repnz adc arpl (bad) lcall push mov iret sub xor and push je xchg push fiaddl das in hlt push loope,pt lods push and dec xchg das lahf cmp dec hlt push test out and mov mov out in add pop test mov icebp gs xor cmp dec movsl imul mov xorl xor sti leave xor or push inc out inc mov fdiv test mov jae outsl lock or fnsave sbb xchg les xchg xor inc jae popa mov mov xchg xchg pusha and sub add jbe push adc adc mov mov rclb test (bad) lahf sbb inc jmp inc mov sbb mov inc insb mov fldenv mov jge mov flds push push daa ljmp pop gs popa xor adcl cmpsb stos inc jp xchg cmpsl mov push push and movsl xor nop pop jno aad inc or sbb out and pop vmaxsd jp jbe cmpsl dec inc aad in push or mov add je into cmp mov inc jb adc cmp jns or (bad) sbb aad lock icebp cltd orl dec clc or dec ss adc movaps mov movsl pop push mov int3 jl jns mov mov sub mov push mov sti mov add lahf les lahf (bad) aaa mov lret lock xchg shlb jge cmp xchg jmp mov mov cs ds inc cli pusha (bad) mov or mov fbld cltd fldl dec xchg stos fwait xchg icebp in cmp call loope subl sbb xor xlat je mov sbb push adc pusha (bad) je or scas cwtl lret jmp insb adc stos addr16 inc xchg fsubr scas inc in add out or cmpsb dec arpl cmp lock std adc jne xor shrb lods addr16 mov pop ljmp (bad) mov ret fdivrs test and out xor fnsave movsl add jae sahf mov fmulp inc xlat jmp in mul or iret pop dec jg push sub sbb ja (bad) mov test mov push (bad) pusha mov test pusha popf pop (bad) or cmp out mov lcall inc lock enter std jecxz lret movsb and pusha ret hlt jnp cvtps2pd sar loope in xor bound popa loop pop push int out sub shll add add loope cli push pop popf mov gs popa sub scas pushw inc dec and push xchg aam xchg or adc cmp (bad) lds inc mov adc or xor sub mov in pop lods push mov inc (bad) lcall lock sub (bad) sbb mov and clc (bad) (bad) (bad) or sub icebp pop xchg lea jmp and jnp mulb fstl leave loopne dec and dec adc jmp cs xchg xor xchg addr16 jp fstpl int or pop cwtl test jnp adc dec sub mov outsb ljmp mov mov sbb movsl sbb and add ss jecxz or ret cmpsl loopne (bad) cmp repz popa lods ret repz std (bad) cmp in mov sbb ds outsb xchg mov push movsb arpl mov add scas insb push fdivl push push mov int mov ljmp push xchg jg mov adc test aam fldt or cmp inc push sub addl add jo cwtl mov fsubrs or or push gs push add mov push add jecxz out out dec sub dec (bad) ss dec fsubs pop dec ret int dec fldenv test mov push ljmp inc mov push inc stc mov inc mov inc mov push aas out pusha cmp xchg lock imul push jmp mov xchg in sar daa out adc inc mov popa popa popa imul xlat clc push inc lret jnp lock cmp lahf roll mov lock sti mov pop xor pop or scas daa sbb or push sarl mov arpl mov not sub jbe in mov xor sbb mov mov pop xchg jne mov jo cmp cmc jmp mov mov scas dec imul pop loop je loopne and mov mov jne mov dec test cmp aam cmp push push xchg loope (bad) jbe push ljmp pop repz je mov cmc sub sysenter push lods ss clc fisub lret push cld imul (bad) cs call or jnp dec dec xor test int fbstp pusha (bad) mov ret daa inc arpl jl lods mov in scas push pop xor (bad) call es lcall movsb cmp ret (bad) adc pop jle inc add mov iret (bad) lock cmp pop out cltd cmpsb (bad) ficompl add push jle pop pop scas out mov inc mov mov mov mov or je test pop mov add (bad) out xor xor outsl insb scas inc je (bad) sbb and jb inc xchg dec pop das imul sub dec mov nop add dec mov aas out cmp sbb xchg pop and aas jg mov pop mov ret mov arpl cmp in enter mov xchg cmp add adc mov jecxz jle stc mov rclb mov xchg mov (bad) testb dec (bad) lcall iret xchg dec sub pop or jge mov (bad) and divb rclb cs repnz inc cltd addr16 jno jno jp scas jl mov dec roll (bad) lea out adc push imul fs int3 pop jno push cmp sbb lea test out rorl sbb push mov inc sub sbb push push std ret and test mov into fstpl push sbb bound sub and push sahf push mov scas xor push sahf lods decl (bad) stc adc (bad) loopne dec in mov mov call fidivl add lds int3 jmp out insb pushf xlat fwait outsl stc mov fistpl jae ss addr16 xchg or out push repz dec (bad) loopne loope xor xlat sarl test and sub jns insb mov sub cmp cwtl fwait push icebp adc mov mov sbb push dec pop pop mov xor nop lret loope adc stos or mov pop mov sub test pop and divl pop (bad) mov mov or (bad) jbe xchg je fsubs xchg mov add add cmp sub jbe mov cmp out ljmp mov pop cli pop scas fcmovne add or call and ds lret mov cltd mov and push lds repnz mov aas push es (bad) jle int dec and shrl add cmp push xor not add test jae xor rcr pop jne lods js dec sbb inc or int3 out sbb mov ret icebp push fsincos xchg sub dec nop icebp xor mov cld in adc lcall mov jmp inc jmp inc inc in push and pop ja mov inc mov test jp mov test les aam aaa inc jo addr16 pop pusha rcrl mov sti das addr16 dec xchg lcall xor xlat (bad) mov sbb and jmp adc lock cmp xchg lcall pop lea fsubrs cmpsl adc fucomi and xchg push test out push mov sar sub pop mov addr16 xor outsb xchg call movl (bad) mov imul ljmp or push push xlat xchg add test inc je sub sahf mov outsl adc gs adc and mov jp ss or jmp test (bad) jmp xchg cmpsl push add gs mov gs jecxz mov (bad) jo out int3 sbb and lock mov push dec enter inc sub mov inc or scas xor sahf sbb lcall mov mov mov or sbb mov mov push pusha xor pop fsubrp xor imull xor int dec mov jo sub pushf dec xor jmp pop adcl inc mov pop fwait xchg sub addr16 cltd sbb mov push loop sub add cmp pop repz jo pop sbb jecxz shr push and repnz divb xor mov mov dec aad popf popf sbb cltd cmp jl outsb loop ret into adc shlb inc in insl repz mov xchg ret iret sar and out mov sbbl and imul push jmp sarb add clc ret pop and jp sbb movsl cwtl xchg loopne leave sarl sub push pushf outsl inc out sarb dec ljmp (bad) cs mov or push adc push mov add xchg (bad) mov add push pop dec aad add ljmp (bad) push mov xchg xor jo in (bad) xor es das fcmovnb in into nop lds mov stos notl out pop movlps sbb fwait cmp cld call jl (bad) push lods fstpt es adc or add aam call jmp icebp mov add (bad) repnz xchg pop movsb pop sbb jg mov iret add adc adc in and jae pop mov cli xchg pop sub rcl add cld cmpsb mov mov pop jno pusha stos dec std lods push adc pusha imul int mov iret jecxz scas icebp repnz call fisttpll imul lods insl ljmp jp and cmc in push fwait or (bad) and push into outsl inc inc (bad) push push mov inc outsl inc jl inc xor pop adc xor jb outsl mov pop add and xor cmc xchg rol xor inc lcall imul xchg adc adc arpl xchg bound cmp imul pushf addr16 sub xor cmp cltd add push insb pop rcrb repnz lret sub jno and popf and sbb les push js lret imul clc lret jb mulb int mov push jae jmp mov dec lahf sarb cmp xchg lret xor or addr16 mov pop cmc loope mov mov jmp xchg out mov adc add jp gs cltd int3 leave shl or mov mov aas xor addr16 add mov pop lods in mov adc mov xchg xor sti pop jnp push (bad) jo push mov xchg cwtl out add (bad) ljmp lods enter pop or add cmpsb inc aad jmp (bad) enter xchg or push scas ss (bad) outsb mov pop xchg es push xor push jo dec in mov mov cwtl inc and (bad) fiaddl lcall jg movsl dec scas dec pop cmpsb jnp addr16 std xor xor loop test mov push scas out mov fisttp dec mov roll push lret call (bad) pop jae pop xchg lock arpl xchg and pop test popa inc cmp jnp xlat cld push jns loop mov adc js int3 mov dec mov ljmp push bound aam jno adc ret mov (bad) mov scas popa ss stc fwait and rol iret sub pop mov mov lock mov rolb mov cmpsb or sub lock pusha loop and adc test sub rolb icebp lret push pop pop lret sbb sbbl cmp out test dec ss (bad) jo dec mov push xor imul jmp dec push adc lods xor pop outsl addr16 mov lock sbb fcomps in jae xlat sbb pop or lock adc lea sub int3 sub (bad) cmc pop push xchg cwtl les inc gs xor sbb xor mov mov aaa cmp mov (bad) scas jl cmc mov dec mov jl and push js inc and jae rcll test sti in xor icebp movsl fwait mov xor push jno add push jne pushf xor and verr push lods (bad) mov mov test ret mov pusha fs sub dec movsl jmp rcll xor push push sub dec bound mov pushf aad leave inc jl nop test call pop mov sbb enter call or call sbb out insb out rol fwait popa (bad) repnz loop dec or jp mov lcall rcl test data16 incb and mov js xor aad and mov pusha es out sub dec jmp add cmp mov dec rclb xchg xchg daa ret xchg mov xchg addr16 xchg inc out pusha cmpsl xchg jmp mov dec sbb (bad) ss cmp sbb sub lret jmp mov push arpl pop pop mov into mov pop stc mov cwtl decb into fwait aad push jbe (bad) xor xchg pop add mov cmp mov shll xor jno and xor inc fs cwtl scas pop ret and sbb push push jno sti out fadd loopne jmp cmpsb fidivrl mov jae cmp insb (bad) add scas sbb and mov push aaa mov jp orl xchg pusha outsb dec stos lds leave inc (bad) jnp xlat push pusha cmp fs bound push mov and in add lea dec in push add cmc inc xor mov and adc pop push mov ret jnp pop mov add dec (bad) push adc jmp jb push daa mov jg lret out cltd lcall les dec mov fs jno js insl je xchg xlat ret mov imul and add js test pop sbb jl jge sbb push (bad) inc sub pop adc mov mov js mov dec in mov xor rol or mov or fucomp mov push and lock stos lods lahf shl icebp mov nop es pop add std and and mov sub jns stos mov std push dec pushf inc jge dec sub or shlb aaa sub ret add mul fildl push out roll fsubs das dec lods xchg cmp inc and addr16 test (bad) repz enter popf dec add mov enter andb pop adc sub int popa cwtl fisubrl or enter mov inc dec ds cli inc nop inc loope inc out sub jg jp das addr16 jae adc mov inc xchg out mov adc push sub movl push lcall daa xchg inc inc push icebp cmp pop int into add push (bad) sbb ficomp gs sub xor out out shr fisttpl dec inc mov cmpsl scas lcall addr16 jno adc mov les ds mov inc outsl enter mov (bad) mov inc add jg pop out xor push in mov (bad) push out push pop arpl dec lods lods pushf mov mov jecxz jge cmp fwait ds stc test mov fmulp fisttpll cmp jb cmp inc adc inc pop cwtl daa and int or sbb sti xor inc mov sub adc push push and scas adc sti (bad) icebp push xchg mov addr16 fstps xchg push dec jo out push inc ja mov (bad) or and sbb lods or xchg out push xor add rorl mov imul xchg ret dec fs push or pusha adc and adc data16 or xchg lea sub sbb mov ds and xchg outsb fwait mov add cmp repz jo jb mov ljmp sbb dec imul es inc lcall and add mov leave std dec ret mov or aaa dec dec loopne repz push sbb aaa sub cmpsb pop add sub vmovupd adc imul sbb xchg adc in cli jmp mov sub (bad) aam jns dec std xchg jl sub sub mov fcom je or roll pop cmp popf xchg adc pop pop add es adc (bad) test idivb xchg loop sbb loopne xor leave dec es ret (bad) push xchg movsb cmp xchg fdivp mov fld jge rcrl adc sbb jecxz imul cmp popf cwtl (bad) pop hlt (bad) hlt and add (bad) dec and pop dec mov scas (bad) xchg loop lret ljmp ljmp push addr16 fmuls add fisub roll das cmp cwtl repz push sbb mov xchg xchg jnp xor in mov mov clc outsl mov dec inc sbb jo fucomp mov and sbb pop xor xabort jae adc jmp addr16 jne and test fwait sub mov pop sub fistl add or adc sbb test es pop mov adc xor fcmovbe push cmpsl xchg lret xchg outsb mov repnz fstps dec xchg rcrl mov aad add int3 xchg push cld jmp test jae jge sbb pop sub icebp or xor add mov sub cmp push loop cli es test ss iret nop movsb lods je or jb loope add mov es and dec inc xchg xchg fiadd mov xchg outsb daa lea mov repnz cmp addr16 jle mov stc or xchg pushf dec or jmp mov insl mov xchg jg movsb and jmp mov lea icebp dec sbb dec inc je sbb cltd in xchg pop and or xchg xchg xchg or dec fwait inc pusha fisubrl xchg jns mov jge or and push imul dec aas mov dec mov jnp jg in adc push dec movsb sbb mov repz dec (bad) aam mov (bad) or mov int3 push jecxz cld (bad) fisttp mov in out sti cmp and std dec fwait insl out movb mov insl push out mov leave or iret cltd int3 out aas sub mov jb and adc pop cwtl lock arpl adc push add fstl sahf adc mov xchg mov fidiv jp mov inc push or out add ljmp pusha sbb push scas inc inc ret maxps push bswap out pop xor xchg cmp inc (bad) jnp fs push mov pop jne xchg movsl xor mov sbb ret adc fiadd xor and (bad) rorl add leave sub divl xchg testl sbb (bad) push outsl insl mov lret cmpb or popf std imul push xor mov jmp mov mov dec popf xor inc mov data16 mov adc add lods inc stc test fidivr aaa jg xor and sub mov pop stc fabs jge cmp or mov inc pop add addl or gs popf es clc test into in popa and pop call lahf xchg cmp cmp inc ud1 xor lds loop aam int3 mov and lahf cmp mov addr16 mov fcmovne negl adc jne,pt sub mov out cmpsb sbb mov sub pushfw push mov mov and jmp (bad) arpl or and push adc dec loopne xor mov stc mov rcrl or popf adc aas loop xor mov leave movl inc out stos and sbb movsb push push loopne xor outsb (bad) push dec jo mov add sub jne adcb inc movsb sub pop xchg and in mov repz (bad) mov and fstl sbb jae mov out and shrd xchg cmp stc and mov (bad) mov adc jmp loopne mov out and pop jns mov mov and clc outsl mov xor ljmp int fcoms cmp inc ljmp pushf into jg xlat xchg xorl push ret and mov fcmovb jmp fimull push pop xor insl sub stos test shll mov incl sbb fstpt or xchg or lds ja push call pop cwtl sub aam xlat mov push sbb je lds push jle xchg ret addr16 ja mov icebp xlat adc add stos fiaddl sbb sarb xor jo mov (bad) outsl loope addr16 stos insl adc adc fst pop dec mov repnz and jns mov inc pop pop push rcll jge xchg shrb ret aas enter outsl js or push pop mov or xchg mov pop loope push icebp and call fdivr out push jb pop inc pop mov inc repnz sarl scas outsl and jns sub cmp dec pop inc rcrb fwait or sub js xor sbb sbb pop adc lahf inc xchg mov cld dec inc mov stos nop and mov pop test je push dec shl jg repz aas cmp rcr and (bad) fistl nop inc adc dec cwtl xor lods mov add and jmp push (bad) mov mov mov xchg pop adc push jmp sub push mov popa mov push pop popa stos lret fs mov cmpl pop jp add scas aaa push mov xor ljmp pop test mov fmull inc pop nop mov mov inc xlat (bad) xchg icebp sbb repnz fisubl lods stos mov push stos sbb and outsl clc mov loop into push inc pushf mov loope,pn xchg aad cmpsb loope xor mov push xchg or jmp dec jmp sbb ret add aad or and xor js ficom pop pop cmpsl cmp mov add fimull (bad) fadds popf test clc mov scas ljmp je sub into cld inc fwait push iret mov call or dec movsl das sbb mov mov pop cmp pop jg (bad) into fwait pusha push arpl or mov inc xchg dec mov pop push dec pcmpeqd cs insb cmpsl sti add jl pop mov inc adc shr in ds push mov data16 pop int3 push imul mov jp hlt gs mov cmp jns addl inc push aaa xchg mov popa dec xchg js lock jno jns xor sahf push imul adc push or add or loope out sarb cmp mov into xchg xchg rol pushf (bad) popl addr16 mov into pop pushf shr jns mov mov loope sub (bad) mov mov inc pop pop jnp push test test lods xchg in fs scas sbb pop arpl xchg pop mov inc loop pop mov push cmp (bad) movsl (bad) xlat enter adc fmull rcl adc mov dec (bad) jo add jb mov and sub mov and sub cwtl dec daa sbb jp adc jo jne shlb lods repnz mov adc push mov es and out inc cmp mov inc sbb xchg ret xchg inc adc pop rcrl push out repz inc sub shlb push inc es cwtl aaa mov add jns and sahf popf cmp jbe adc lea sahf nop in (bad) aad movsl dec pop sbb rcll xchg lret fldenv (bad) pushf scas jp rclb mov inc mov imul test add scas fmuls jo cli push add dec sbb add cmp jge mov xchg cmp test sbb ja adc cmpsb adc dec ss fs add xor and loop jp repz cld mov int3 or sub xor fild mov (bad) push mov scas (bad) and or cmpps inc rclb cmc mov sarb bound add xor mov (bad) xor cmp shr fisubr dec int3 les rclb andb jnp and insb push xchg (bad) mov or dec inc sbb in in sbb unpckhps rol lds push cs cmp add push fstpl stc icebp sub ljmp dec sub fdivl and test aas das and (bad) scas inc mov negl outsl lretw gs add out xchg js test xchg adc mov xor cmp fsts cmpsl fildl (bad) aas lcall push mov mov je divl mov (bad) repz rcpps xchg ret push xor xchg ret mov xchg add mov inc or stos cmpsl mov dec into in or clc scas imul test fistl push lds inc xor js push test arpl fs dec out or xchg xlat or push decl fs mov std aam mov repnz and sahf xchg lahf dec xor mov shll inc or in shrb fidivl inc lods push add mov test xchg test ljmp lret adc xchg jns fnstsw mov push iret sub mov in iret xor push jge out jbe in and jg dec adc adc xchg scas fcomps xchg vmwrite enter andl jae mov int3 insl mov (bad) repz outsb (bad) lds clc loopne or pop ss sti or test ss je rolb cmp shll (bad) repnz out mov sub cli shrl dec call xor push mov ret mov inc mov mov xor pop cmp xchg or clc cmp xchg iret test inc mov mov push adc push mov data16 push jp mov repz data16 test add int (bad) ljmp dec es jl push jns mov je (bad) nop xchg push loopne mov xchg hlt rorl fistp es jg ret jae (bad) or cmp push cmp push xchg movsb inc add dec mov add dec lea jle push sbb xchg sti rcrl popa and outsl lods jb out xchg leave jl inc mov inc add (bad) pusha popa rorl xor aam gs xchg mov add lret push (bad) push sarl mov add xchg add iret mov sub xchg mov loopnew nop push mov and popa out out push adc test outsl xchg dec cmp push jecxz jne loop stos add mov or fistp loopne pop pop fdivrl fstpl mov xchg adc cmp dec xchg lock add gs jne fnsave cmp xchg inc inc push insl stos das mov or mov cld mov push mov push in inc fdivrs scas ljmp sbb push and cmc mov push (bad) jg mov (bad) enter in or or divl sbb or divps xor enter dec mov pushf fistp test lods sahf mov cld (bad) nop ret jle out jmp lcall sbb cmp xor movsl das les mov pop and dec xor push outsl std out repz xor daa or and movsl mul (bad) mov aaa lea jecxz cmp mov jo adc sbb hlt jmp movsl test mov popa lods mov dec insl movsl sub xor das loop or scas cli add sbbb inc aam test sbb jno or xchg push test push shrb push lea dec mov mov mov jne sub popa das rorl sub dec imul jge or push mov sub dec icebp push das fstl loope das lret enter lock cld (bad) fistl iret in pop jmp fnsave mov dec es pop mov cltd js mov sarb dec out xchg lea push cmp rolb lret push push outsl sarl test iret inc lock into cmp add jb mov jg rclb sbb dec (bad) into lret mov add shlb inc xor popf daa jmp daa sbb insb orl stos bound mov pop xor or mov sub aad add and push jae and outsb and add loope movsb sub stos js inc sbb fiadd lret lock rolb jb xor add or lods add cli imul ljmp (bad) and ds (bad) in jp inc sub jbe,pn jmp inc in xchg inc and ret rep dec pushf and js js cmp out dec dec push add jp cltd xchg xchg scas or and popf jge,pn dec cmpsb lods ds and out and repz imul outsl and push jmp shrl mov cs int3 stos test (bad) sub mov jmp mov inc cmpsb icebp outsl and out mov sub dec inc jl push cmpsb mov ret in mov xchg mov (bad) jbe sarl mov and dec je sbb fmull push mov mov enter sub pop gs clc call mov test or mov xor sbb test leave or ljmp push add push add sub ds sub lds mov cld cmc or sbb cmp or and lock dec adc dec fisubr cmp inc jp sbb sbb loopne es out xchg dec or jp lret pop dec push repnz dec dec stos mov lea mov outsb sti loope add cwtl or adc (bad) cmp idiv call adc push test addl and lods pop sub addr16 sahf mov push push add push fisubr or mov xchg dec sub push add out dec ds cmp sbb std popa jnp sbb mov or sub jge or movsl pop addl les fidiv cmp push push stc scas jl outsb mov in shrb fdivp mov or xchg loop fs fistp or cs cltd cli ror and lcall mov pusha xchg jb add sti iret lods add nopl movsl mov imul xchg sbb sahf cmp in add push sar je pushf dec imul push and inc mov das (bad) mov (bad) incl test sbb mov jo insb popa leave (bad) mov scas (bad) mov lcall repz (bad) (bad) bsf test addl sub or and mov add jg jae push dec push adc mov ss lret push inc and push adc inc or xchg xchg mov out std subb mov or stc xchg pop loope cmc lods fistpll mov dec lods jns pop add pop push mov repz sub mov loop mov (bad) jae xchg add cmp test call pop add sub dec in mov icebp jmp imull js fistl ds dec loop inc fcoms mov call inc jecxz rcrb lcall ficomp cmp icebp (bad) gs inc push dec xor mov dec dec pop inc scas ss adc and mov loop dec or (bad) enter mov cwtl cwtl sti hlt movsl jnp mov mov add test pop test push icebp pop pop push movl ret pop sub jno cmpsb jp jl mov fdivrs add mov repnz ficoml inc and scas lret in (bad) push pop inc mov or aam aad outsl jle fneni(8087 mov mov adc sbb mov add lds or cmp ss or scas mov cs movsl ftst enter jmp fs ljmp mov mov mov pop popa arpl ja pop int3 mov push (bad) aaa pop popf mov (bad) cmp pushf (bad) aam jle fwait or push mov test (bad) enter mov gs cmp rcrb into pop jns shrl mov in mov ror mov loop or add popf mov push adc pop add mov popa sarl mov inc inc inc ss mov mov and mov fldenv inc test mov push pop das lods add pop adc aaa js (bad) js push movsb mov call cmpxchg dec xor das sub nop sbb xchg cmpsb sbb cmp test inc mov dec fnsave xor into xchg loop add (bad) sbb (bad) out pop in sbb stc sub and jge dec into mov mov cli cmp mov sbbl jns dec push dec add inc or xor leave mov sub fildll push pop xor cwtl mov pop push test sbb or sbb jmp xor out stc push lahf cmp call popf pop andb inc and (bad) repnz mov inc jp cmp push mov dec icebp push pop mov pushf pop icebp pop in arpl ljmp or xor jno test cmp sub in cmp daa mov orl or dec sbb clc sti repnz mov xor mov int3 ret sbb push adc shl fdivrs jl xor mov mov xorl mov mov das (bad) mov mov outsl pop pop popf lock or push aad int pop mov mov add imul lock loope ror dec xchg (bad) jge outsb aaa cmp imul adc leave loop ret test insl cmpsb jg adc jno outsl ror xchg adc pop dec sbb inc aas pushf adc push or je mov adc imul gs in and ret pop push test mov and mov push test push int3 lds pushf imul sbb lahf lods xor and shll sti jmp (bad) mov sub jp insb push pop int pop jle pop xchg jb sub (bad) out nop sub pop lea in test pop push sbb mov dec out call or fsubl push stos sbb xchg or nop xchg test mov pushf lods out push popf mov add addr16 lret mov mov mov xor and cmpsb cmpsl mov and bound movsb sub in mov or xor sbb movsl cmp in test repnz out sbb mov or mov bound pop sub arpl stc sti push fisttpll stc xchg jbe punpcklwd int3 sti rol lret xchg ret (bad) stc pop cmp arpl mov dec mov xchg mov add mov lret adc cs mov iret pop ficoml cmpsl pop fs ret loope mov inc mov icebp or dec repz push sbb adc cltd mov (bad) pushl adc or cmp inc pop jl movsb jne lock inc mov jnp jge sahf inc dec or mov mov xor mov (bad) pop in cmp jb cmp xor in push leave sub insb xor lcall test pop jae cs xchg fcmovbe jne push divb cmc in test xor push sbb cwtl out scas xchg and out out jg xchg test cwtl mov sbb mov ss jge mov lock xchg pop test les mov lcall gs push popl pop loope mov add xor das mov dec in adc or push dec cmp (bad) or add mov mov loop fldl or addr16 mov fbstp shrl dec and cmp mov xlat stos push cli in imul mov mov out ljmp rorl stc mov push jl mov cmp or add mov sbb stos xor lods pop sarl shll pop xor push jl outsl and push je pop into inc int3 jp loopne,pt and fstp sub mov push inc mov xchg insb in sub repz jge push push pop lea jge ficoml fdivrs push push jns cmpl (bad) cmp movsl cld cli push xor mov push and xchg aad mov iret in mov out sub imul mov inc movsl or mov adc enter psrld shrb pushf repnz loope int sbb ficoml sbb aam in sti mov mov pop cmp dec xor xchg jbe sbb out mov in arpl xor iret mov cmp push adc xlat cltd dec lock dec ds lret mov leave inc mov mov fisttpl int xor or fimul ss adc scas aad or arpl lcall add and push ljmp and mov mov (bad) out and out jle mov mov cltd (bad) sahf cltd cmp cmc inc or and mov or cmpsb or lea jo lods mov xchg add stc or in cmp push or add add xchg (bad) mov sbb cmp clc pop mov cld rcrl (bad) and out push xchg inc cld pushf pop or pop std aad jb call or xor fnsetpm(287 in jae jno and cmp xor popf and pop cmpsl leave (bad) fstl jle (bad) icebp rorb and xchg dec mov jae ds mov addr16 cmp sub lock adc mov cmpsl push sti xlat jb movsl pop fs mov lea inc push adc mov lahf jo outsb rcl (bad) fmul inc ja aad or imul mov js (bad) sub sub xchg ret cmp imul (bad) sti adc pop dec xchg sbb ds pop mov adc imul ljmp in push repz imull and adc jmp gs dec and gs inc and xchg push inc iret outsb popf arpl ljmp pushl jne push nop mov int (bad) sub fldl pop outsb jb loope ret lcall fcmovnb xlat push mov (bad) xchg addr16 pop sbb inc mov test adc xor leave adc loop xchg mov and mov mov aam pushf repz adc roll lods push cmp push fcoms test inc cli (bad) aaa orl int3 cmp jae mov idivl lock add mov xchg lret test xchg into mov mov sbb xor add or out inc xchg inc xchg lcall lods jge sarb adc lods clc outsl sub jnp leave xchg rcll jb jge es fwait jmp xchg adc inc pop leave int3 jecxz cmp enter ljmp or cmp call sbb aaa cmp mov mov dec ja (bad) push push pop repz xchg in jns add lret movsb inc cli mov (bad) testb jmp lods cmpsl mov hlt (bad) or jno add mov push pop pop popf imul xor ljmp add stos fbstp lret mov femms cmpsb repz int aad lahf stos mov ljmp adc int3 daa loopne jg cltd lret mov jb add add mov push xor fistpl mov adc add push adc icebp mov xchg and xchg outsl mov add movsb out bound (bad) pusha mull inc mov cmc mov adc jae fist pop aas dec mov in push push iret add jge mov push jge daa divb int outsb xchg jecxz pusha jo pop inc push movsl push mov cmp ljmp sub in ss stos pop mov sub cmp mov in pop push inc cbtw mov icebp outsb cmp inc nop test mov sbb dec addr16 inc and call cmp xchg lahf lret cld sub adc js xchg inc inc cmp mov lds cmp mov inc aas add xchg ds not jge inc sbb out push mov jo mov lods bnd push fisttpll repnz in add test sub adc jp bound divl adc and addb pop dec test xchg add fnop ficomp imul inc lods aas test outsl add call xchg es sub loopne inc cmp hlt into sti bnd mov in gs je sbb xor jmp mov adc dec xchg clc mov xchg (bad) jno sti lods aas and sub cmpsl repnz mov adc add orl xorb mov outsl int xchg fstpl xchg cmp xchg iret int adc dec out xor aaa out add and pop inc jl push mov stos push sbb mov mov call xchg xor xlat cs insb fs or jle mov add jl jo jecxz sub loop push cmp test pop xchg rcrl mov inc sarb ljmp mov hlt lock mov push push inc movsl pop jnp jle cmp outsl jnp addr16 add push xor loop (bad) mov pop mov push or test out ret aas adc fadd jg push sub mov pop cltd sahf pop hlt aas cli push arpl jns scas mov outsl mov push mov fdiv rorl mov int3 arpl mov xor mov je dec jg psubusw enter (bad) pop adc xchg pop pusha mov ljmp mov push jmp cwtl add mov adc sbb pop fistpl lea jb push add vsubsd dec aas and (bad) fnstenv fnstcw mov flds addr16 aaa cmpsl int jae (bad) jne pop lcall test push inc (bad) jne sub cld xchg sub pop rclb fwait jg mov cmp out dec sahf lds test das (bad) xchg push add sub adc adc xchg dec inc pop xlat mov inc or dec adc decb adc mov cmpsb xchg dec xor dec mov clc loop add mov sbb cmp fisubr scas aaa insb mov dec imul addr16 push mov popa insb lods rcrb inc or icebp sti jp cmpsl fisub mov int orl popf mov mov jle pop mov mov jmp hlt fistp loop sarb pop repnz std adc xchg js sub (bad) lcall xchg jmp mov (bad) or push aas je mov add inc ficom scas divb mov sti cmpsl loop lods in cmpsl inc dec dec sub sub sbb pop add add jno notl lahf jnp in imul stos fimull mov outsb lahf repz xchg pop jo jmp (bad) aad aam push sti push pop pop push imul cmc call push addr16 cli mov cltd inc jno roll scas test and jo and xchg jae xor das dec (bad) std mov sahf push adc inc mov push loop cmp xchg mov cld jl inc add lds dec jl xor mov push add in xor cwtl stos mov add xor cmp leave dec roll lret xor mov popf (bad) leave sbbl fmull sub es cmp mov imul mov or sub (bad) out shll fistp cmc imull mov in fdivl and stos dec fist imul int mov xchg pop cmp sbb fwait int and test ja loop mov (bad) in xlat jo movsl loope push mov arpl push xchg fisttpll push stc (bad) xor mov pop mov in add sbb call pop dec arpl scas lret fwait sahf das insb xchg out xchg pop aas (bad) pop scas fprem imul mov jge xchg pop arpl rcrb pop pop push (bad) imul push sbb push (bad) rcll push push mov popa ljmp inc hlt pop int3 jmp dec sub aam sub sti and and movsl cmp popf add inc xor test inc cwtl out cli cmpsl fprem jb fcompl mov fiadd mov jns repnz inc bnd fwait sub xor (bad) mov add mov push repz mov jb add shr sub pop sub jecxz jmp sub rcrb stc (bad) mov inc mov jno dec loope popf fnstenv mov xchg sbb out push xchg or les jecxz testb push rorb je iret pop cltd lahf adc inc stc xchg mov test scas aad test (bad) imul dec test pop mov xchg mov mov mov mov inc arpl cs bswap xchg ds jae shlb cmp dec inc in cmp les adc loope movsl inc mov inc xchg es lcall mov jnp add sbb ss and and test sbb loope mov les lret or xchg aaa sbb (bad) rcrb divb dec xchg push cs cmp or inc push mov mov iret in jge and cltd insb mov mov push push or stc stos xor mov adc shlb push imul mov scas pop out pop stos and out pop mov stc mov sti push loop mov es insl mov dec testl daa adc out outsb fsubr xlat push notb sbb push xchg mov lahf mov hlt inc sbb fsub out ljmp andb pop pop jns jae fadds cltd jl out pop push lods stos fidivrl fwait xor mov adc dec cmp push adc sbb arpl add out rep and test and out push xor int3 imul and or daa popf out xchg jno cmp pop xchg dec mov sbb mov xor add sbb or mov xchg cltd push lods add dec dec in push adc jg ret mov inc add aas mov fcmovnu push bound idivl jns push popa add (bad) mov inc (bad) inc std adc aad sbb imul jbe sub es xchg jns or rolb fs lea add lods mov sahf inc jns gs int3 jnp xchg sub mov fildll inc out dec push dec xchg and sbb push fiadd mov adc imul repz ljmp loop scas fwait push sbb push scas enter dec lret adc ds scas movsl inc shrl movb (bad) xchg scas cld aas into xchg adc nop lods gs mov add lcall mov popf mov inc push (bad) lock push xor dec xor jb stos and push mov imul out and in movsl int3 cli scas fcmovb fcomps jecxz gs minps sbb pop pushf dec nop push inc pop in arpl and add mov pop add jmp pop mov es mov sub loop add adc jmp cmp call xlat in ret push mov cmpsl popf xchg jle cmp aaa out shrl push lret das inc mov xchg cmc nop test cs mov test outsl aam jmp inc mov sub jp xchg (bad) or pushf je int3 in int3 gs jle inc addr16 icebp sbb sbb push and mov lock sarb jns xor adc bound push lahf xor aas dec dec mov jne das inc mov jbe sub mov jne fdivp stos jbe xchg xor push insl xchg out inc jnp mov push and ret bound (bad) push movsb fsts cli int popa les call jnp sarb stos mov shl lods imul insb lahf or je insb test mov (bad) fmuls and repnz push ds lods loope int mov mov test and clc xchg dec adc push dec outsb pop int or mov test orl sub sub cmp rcl in pmaddwd ret sub fisttp inc adc jmp xor pop mov jo dec int dec push aam adc inc push imul pop lock adc fildll loope mov gs mov fdivrl hlt and jo std mov fwait loopne mov test push repnz lods lret pop rcr cmp cwtl adc lods sbb aaa je adc sti shr mov sbb js ja shr sbb shlb cli or and pusha pop cltd (bad) lahf bound lcall jge shrb adcl mov in mov insb add add sub or inc pop ljmp mov fdivl fistpl scas mov (bad) aas add lahf fimul dec add mov mov pop pop dec cmpsl sbb push bound or pop lahf sub mov clc push sub add leave out jl mov push imul mov loop mov movsb jno xchg popf in mov or mov les popa add mov push mov xor (bad) cltd les xchg lcall dec sti scas mov fwait jne dec int mov mov rcll sarl bound and inc jg sub add sahf dec jp jg push push (bad) xchg add dec fwait ret jnp sbb xor mov test dec fwait and cli xchg inc ss mov sbb popf jb mov inc mov jo push dec dec mov adc sbb out lahf sub mov push mov adc out mov fisttp and jp call (bad) aad cli pop loop mov pop data16 fwait test inc adc shl pusha push push repnz js xor or push or xchg jmp outsl adc lods pop fdivrl push or in popf push mov mov pop jne mov aaa adc hlt dec pop xchg push pusha and test or xchg cmpsb divl movb fistpl jg jg mov dec push mov inc inc and fwait mov scas xlat lock inc cs mov pop cs daa pop es hlt cmp cmc mov test fs outsl aaa insl xlat shll cmpsl add andl outsl dec out shlb repnz int mov push cmpsl lcall ja lods or pop ja stos mov test (bad) jp cmpsb dec pop push loope dec xor sbb roll pushf ljmp cli stos jnp addb psrld mov lods jle add sti or push jecxz xchg push jecxz insb push adc pop and inc pop mov add dec out pop mov std cli cs rclb test jge mov arpl insb mov inc nop cmc cmp adc gs cld icebp xchg outsl subl push push ljmp cmp js pop jb addr16 push sarb and cwtl notb ds in fistp (bad) jmp xor movsb push mov in lods and test or outsb jmp fcmovu adc mov pusha push int mov ja jae call jp mov lock ja mov sub (bad) or cmp pop mov insl lret or ss adc push add inc dec and cmpsb xor ss lods fcomip ficoml mov punpckhdq dec pop mov in gs xor mov jnp xchg xchg rcll dec jne xor pop mov and xchg or in mov dec jno push cmp dec dec pop jno addr16 pop xor dec test or shr sub adc hlt fdivr and gs xchg mov fstpl jl and cmpsb cmp sub popf xchg icebp or cmp mov push ror gs lods push xor or sbb lock repz arpl xchg ja (bad) lds dec inc cmp js mov mov dec mov dec and jb mov sahf adcl lahf call jns (bad) xor imul pop cmp add (bad) xor loopne shrb outsb jecxz push jae fiadd (bad) sahf rolb (bad) push idivl sahf out pusha lret mov dec lock inc lahf sbb aaa rcrl mov adc insl mov pop (bad) push xchg addr16 movsl jle ljmp outsl dec pop (bad) add pop xchg imul pop mov pop (bad) add pop pop ds sarl jb xchg outsl ss stc lahf ljmp lods mov ljmp and jne and lock sub xchg mov sub push push scas lea in adc aaa inc (bad) (bad) push or aaa cld or fsubr sub mov les and stc or aaa scas inc mov mov jge add lret cmpsb bound fdivl dec jmp adc ljmp cmp or cmp decl dec cmpsb sahf out dec les rclb sub inc cmp mov sbb mov mov jno jb sub aad add mov jbe test (bad) repnz cmc out orb (bad) loopne or add xchg adc cld pop sbb imul cmp mov jnp (bad) mov mov pop sti mov jb fisttpl outsl sti adc lret sub cmp hlt sbb or incl shll push mov mov mov ret and in or loope cltd (bad) rcr mov and mov decb sarb mov int3 xor in notb cli adc out adc xlat mov push ss mov aam adc pop mov dec movl jbe hlt dec inc ljmp or out xor xchg pop pop mov test xchg (bad) call mov cmc fldcw jno js pop mov in shll jge sub sahf cmc daa push (bad) push and inc pmaddwd mov lds scas sahf loop mov arpl add xchg cmp fs mov push add inc js xor xchg mov scas dec adc shlb push inc lret cmpsb dec cwtl iret jo dec into dec out lcall loope bound push fsubrs pop repnz arpl add mov push pop xchg and test inc xor cwtl jns cmp inc mov (bad) loopne pop out es nop addr16 jno cmpsl jnp dec pop pop add adc inc ss cli or inc stos mov ret inc lea int and jge rclb mov inc sbb (bad) cmp stos or outsl fldt mov ret jne out imul cli (bad) lret push loop gs add scas aam cltd in dec les fmuls test xor jno dec in fsubl jmp mov xchg jl cmp adc cmp mov inc fbld add test pop dec mov mov sub add pop in mov sarl xchg pop push mov xchg inc add movsb xchg icebp sarb cwtl test sub sub mov xor pop mov aam lds jnp imul aam push ja out sbb add inc subb in inc jp mov clc sub push cltd movsb ds pop jae push pop mov stos xchg dec lea xchg je mov out push cmp dec sbb in sahf push imul popa outsl push das fstl sbb repnz movsb fidivl jl repz mov dec fcompl stc mov push ret and int3 cmp add imul push mov (bad) decl sub cmp cmp mov int xchg sub adc scas pushf add xor aam sarb adc int3 dec cli and jge or ficoml iret jmp stos scas out lods data16 pop mov rcr cmc icebp scas data16 push ss pop movsb xchg sub mov mov iret and xchg imul fs ja sub jnp push push cwtl cmc arpl xchg or frstor pop rcll inc sbb inc mov imul pushf divl outsb sub inc inc add or jo iret clc mov aam lods push sub pop popw sti dec push lock xor shl mov mov frstor add mov cwtl (bad) ss pop (bad) xor insb xor aam sbb std ror gs push nop cmpl test jno cmp mov pop stos sbb inc fstpl push (bad) int out sub loopne (bad) (bad) jne,pn xchg call movsb mov test mov sbb or xchg clc pop lret cmp aaa daa mov fistl pop iret loopne cld mov xlat roll out gs jne icebp xor and mov or pop mov sbb leave ret cmp pop and cld sarb sahf sbb lret add sub mov leave mov cmp mov (bad) cmp mov or shr rolb mov sbbl fnstsw lret adc fnsave icebp sub mov add inc (bad) jo dec push add sub sti (bad) mull test cmp das lcall jp stc lcall mov mov (bad) leave push or in jns jl cmpsl adc push fcmovb repnz out mov mov dec push jl lds jnp jns or and fnsave jmp add sahf xchg xchg clc mov rcll jbe push daa cmp sub mov jl (bad) bound stc (bad) pop push cwtl stos adc lahf into mov add and paddq (bad) clc mov loopne mov js jne out push xchg (bad) adc cmp in lods mov lods mov cwtl jns adc cmp lods stos movsb outsl mov inc push imul out jge jbe jg sub sbb inc mov and xchg movsb inc jge jl add push jle dec push mov xor push sub pop imul xor js push cmp pop lret jge jns pusha out sti xor fcom leave rcrl sbb cmp dec aam in bound (bad) fmuls xor adc (bad) sbb fstps xchg loopne lret jecxz mov inc mov xchg out mov mov loopne sbbl dec mov lds xor (bad) bound (bad) mov mov leave andl push ss movsb daa (bad) je add jne int3 cmp loopne cmc stc mov sub ret loopne pop shr insb mov add loope in outsb sbb mov add lods call lods sbbb push ret ss lret lods mov xacquire xor or nop mov adc loopne jle mov mov (bad) push ret jbe scas (bad) aaa mov (bad) and (bad) dec nop jg pop ret jl dec rcrb mov lret gs push xor xchg pop push pop xor mov or add and cmp sti or mov inc inc fsts push aas adc mov into adc addr16 xchg in nop js inc out ss int jns lcall adc mov or fwait div xor pop adc es sti dec pop int3 test lea mov dec dec out xchg lds dec pop hlt push test lods scas int mov repnz push xchg scas lea jbe icebp fs cltd in xchg push push mov push jne addr16 sub mov pop sbb sbb aas jp fcom dec dec inc add rol loope cmc xor inc sbb (bad) ja daa icebp jg idivb dec int3 addr16 xchg mov cmp popa mov xchg inc nop (bad) mov in cmp xor in loopne jne ljmp xchg loope adc les xchg mov adc jno xchg push jae jbe popf nop jbe out push out mov push xor dec xlat outsl dec jne xchg hlt mov sbb cli or cli push roll mov in jo dec sub (bad) jmp inc mov mov xlat dec insb js mov fs mov jb dec in mov xor inc mull mov scas mov fldl inc mov out adc cmpsl mov je stc jl ljmp das repz xlat lret faddp and add mov hlt mov mov xor in or mov int3 adc push inc lahf and aam aam push push push cmp jne push adc xor push inc shr inc sub cmc inc mov push sub push inc insb fsubrl loop inc sbb jns clc xchg pop xor add mov clc subb dec inc add jnp push dec scas lods sub jbe push xlat imul addr16 fcoml mov das jo (bad) es outsl xchg (bad) loopne movsb cmp adc sar cmp mov sbb jb sti fs inc sub and push and sub scas in push inc pop dec adc out jb mov hlt cmp out sub mov inc push idiv mov (bad) (bad) sub ljmp mov lds test lods repz std les xor jne loopne adc fsubrs xchg xchg outsb insl cmc adc add aas sahf lret enter (bad) (bad) dec cmp in int3 test pop jne ja mov lods xor mov mov fcompl inc mov lahf dec push fsubs pop stc xchg pushf sub scas sub cmp mov (bad) lea sarl jge (bad) mov xchg dec mov mov fwait outsb push out cmp hlt sub jno sbb (bad) int out aam jmp test pop cmp sub push sub cli sub push not cmp add sub pop test sub sub fistl nop nop ja xor fnstenv and mov jae adc fcoml pusha xchg adc pop jg add addr16 in mov pop data16 daa sbb leave mov sub pop inc jo popf xor xorb dec aad jmp sbb scas jno sbb and jb in cwtl xchg rolb pushf sbb mov adc sbbb stos dec jl in daa popf or in cltd aas pop jb sub mov jno cld mov repz dec mov cmc shrb dec xchg les inc test (bad) lods xchg bound inc jae pop sub or aad inc fcmove mov xchg adc xchg test dec gs dec in jo (bad) js out clc push jne sub fs mov fsubrs mov (bad) aad and and aas mov inc cwtl mov push hlt push fimull sbb cltd pop stos dec stos out ljmp or pop nop push cwtl push mov jns xchg mov jmp (bad) pop or cltd pop int3 jge or mov mov mov sub inc fldt sub sarl and inc int3 mov outsl jmp in push push jnp (bad) and shlb sbb fadds loop add cmp loop roll jmp mov sbb rorb pop sbb mov sbb sbb add dec rorb jb push insb lods psubsw or clc repnz and push and mov fcompl pop out xor sbb and dec mov lods mov adc pop jo xchg call lock push popf pushf mov xchg adc lock gs add or pop add in dec adc mov adc aad dec or imul loop (bad) sti lahf mov pop inc jmp dec cs dec cmp dec cmp ss js push sbb mov fld1 add mov adc push push mov inc sbb hlt dec or imul cmp cmpl rcr in les push push pop xor mov clc sbb cltd lods jmp lods insb js nop mov and sub push cmp cmp adc add stos clc xor xchg lret js loop sbb test fcompl and in mov imul loop xchg mov enter (bad) shr mov pop dec mov jne xor int movsb stos xor add mov pop and test or add aaa js inc xchg pop mov (bad) mov in mov push inc scas js inc iret inc int enter daa in fcomp fwait (bad) jne (bad) mov jbe insl (bad) hlt repz and js das add data16 dec sub sti push add ds int3 sub pop cmc nop mov iret xor pop popa ret jmp mov mov scas outsb call pop xchg mov movsb int3 xor and xchg pushf push adc jle repz les dec adc xor jns pop push cmp add add sar sub in xor mov sbb nop mov cli pop mov xchg pop out sahf add dec and (bad) fisubrl cld inc lahf aas sub lret lock repnz sub adc test jnp cmp push aas mov jl mov subb nop mov icebp int out mov sbb or movsl dec cmpsb iret fiaddl add aaa leave lods xchg rol cmc call xor ds xchg sti sub or cmp arpl addb dec cmp std pushf dec ficoml dec lock pop sub adc jle add sbb cmpsb lock mov sbb mov movsl push jae dec xchg shr adc push lea dec fcoms insl je (bad) cmp cld cwtl cmp (bad) fisttpll popl jo test lahf out and roll jo into clc inc or xor fnstsw jnp xor stc mov and add mov popf jge dec js mov loope dec jg rcll sub dec xor or insb popf fnstsw lret (bad) xchg scas xchg sbb push or adc inc test clc clc xchg ret jle mov loop cmp jl mov psrad das lods and mov cwtl dec je in xchg jbe lods gs lret inc xchg lret jnp daa notb lods stos cmc and pop inc std pop repnz das es and das es clc lcall or cli add ds xchg dec lcall stos sysret pusha push sbb addr16 mov and xchg lods xchg imul push xchg hlt sub and pop dec out lock mov rclb dec pop fucom lret dec jno jl mov adc xchg jns cmp jge loope aas (bad) mov or xor mov clc dec xchg add cltd and je sub insb mov push cmp repnz inc roll dec out dec push jb hlt add jmp jl cmp inc sub mov int bound pop lds loop cmp nop sub mov jae dec roll scas lret popf cwtl push add stos mov or (bad) mov push in xchg pop dec mov pop inc or dec cmc mov xor jmp xor in loop fnstsw call adc or pop aas xchg inc sbb cmc lock mov mov fsubs xchg cmp loope mov sub cli dec ja pop in addr16 pusha sbb and jno jle in ss mov jge sub pop sub jbe mov sub mov stos dec (bad) lret push loope mov push dec jns add mov (bad) mov mov xor inc out cmp stc add fidivrl fmulp mov imul xchg push add rcrb test (bad) mov lods push out nop or popf push dec add jne mov mov stos daa sbb push inc out push mov loop arpl xchg mov out jmp add xchg bound shl cld pop fwait xchg dec push fimul mov es and dec repnz lahf int dec push cmpsl cwtl mov or mov aas aam call dec pop add add adc andl ja or cli outsl loope xchg sbb and addr16 sbb je push cmp setae pop lcall movsb mov rcrl mov fdivl insb add jmp mov imul mov lahf mov addr16 out and push xchg sub aaa add test aam imul (bad) (bad) pop add sub arpl mov insb mov and mov or adc cmp push (bad) aam and pop std mov dec fwait test fcoml and sub pop xchg repz mov pusha call int les xchg cs pop xor test pop cmp popa dec out add cmp push rorl in adc xor nop fcomi das jle test loope mov pop cmp jle mov jl mov outsl inc or (bad) push loope add fs dec fsubl fnstenv shll xacquire cmpsb or popa jb lods mov or movsl out test dec mov mov int sbb ljmp test fidivrl in push dec mov sub arpl cmc aad cmp jl jl push sbbl sub mov cmp adc push xchg loop xchg bound xor (bad) out add jb push std fiaddl lret ljmp sub (bad) inc (bad) loopne fidivr ficom cmpsb arpl out xchg xchg or push lcall js mov push out movb jae inc jo inc fimul mov or push lea dec imul xor adc popa mov lea (bad) sarb fiaddl leave push cli dec xchg sbb movsl test (bad) dec jb mov adc test pop inc hlt in xchg mov or (bad) stc subl sub enter insl jbe out notl sahf int3 jmp fstpl aas fs cmpsl xchg sbb pop in pop push push inc in xchg jns or jae imul fndisi(8087 fnstenv jmp cmp push mov sarl push out sub shlb std outsl xchg fisubl or movsl js or cmp dec iret mov sti mov outsb and cmpsb int3 out cli imul call hlt jno inc leave jle mov jne mov adc push pop repz test loopne cmp push mov or in fild mov push gs loop jb js xor mov call lret sbb push mov enter js adc subb mov inc cmpxchg clc ret push inc rcl ja dec (bad) imul or sbb push or jbe dec push popl stos aam imul inc fwait (bad) popf or stos rcll jbe cmp xchg dec dec in mov sub les cmp adc and lcall arpl push iret int xchg aam inc call adc adc hlt cmp insb xor nop mov es imull out push cmp stc mov rorl inc sub cmp icebp pop jne lods mov inc inc cmp test bswap dec scas nop sbb and ret jle leave ja in fsubl push cmp sbb enter ds mov cmpsl sub mov jle sbb lcall in adc adc and imul int3 jge push mov cwtl add jbe xchg or stos rorb jno add repnz adc in les ret fiaddl or mov jecxz movsb out mov xchg sub dec pop jno jp xor jb xchg fwait decl mov lods adc xchg adc mov jge imul repz test sub push or into movl aad cmp xchg arpl pusha loopne cwtl lds stc out cbtw inc push cld sub add fild fldcw rorl sub xchg into es mov lods adcl cmp test xchg lret icebp add inc xor arpl sbb call leave lods mov mov jge es mov loop add aaa lret or lret lcall adc loopne dec mov test rclb fimul lods mov or fwait pop and hlt daa sub dec (bad) loope gs outsb mov xchg or mov and popf and mov das out mov pop inc lds nop push and nop lret mov push and ret movsl push push repnz sub mov lock iret mov jo fisubr into add adc pushf test pop repnz mov mov xchg or (bad) jecxz enter mov jae or xchg scas enter jmp jnp add and fucom push rcll push mov mov mov push (bad) fucomi pusha or lds dec cmc mov inc repnz outsl das push loope push fcmovbe imul insl (bad) aaa ljmp cs push (bad) mov mov stc sbb jnp fidiv adc mov cmpsb sub (bad) mov mov jmp push or and or push cmpsb aaa adc (bad) xchg cmp ja je pop inc xlat or cmp push scas and mov inc fs xchg (bad) cmc bound cmp sahf in adc cltd push jns cmpl push xor ss iret sub jb and mov cmp cmpsb imul aad pop out out pop aad adc gs repz add pop xchg outsb xchg lods dec jnp dec inc or mov xor data16 mov repnz dec pop push jmp js imul lods enter lods aad push fisub scas test xchg (bad) fcomps mov jecxz jae aaa lret jnp mov js jne sub add cmpsl xlat dec cmpsl cld jge add lds sub iret decl mov jno sub js sbbb out or and int3 pop and aas push aam add pop pop adc enter xchg jnp mov mov adc int (bad) jge,pn fnop (bad) cmp xor addr16 pop sbb sbb mov add push fiadd loop imul fucomip jo and jg push pop mov cmp cmp cmp xchg sahf dec dec sub or fistpl pop inc add and mov mov add into sbb (bad) lcall add shrl inc sbbb pop je mov (bad) push mov jnp fimull enter mov fs imul lods test test jnp pop sti jnp and sub cmp push xchg ficom jo das (bad) lock lahf cmp mov insl fnstenv cwtl jo scas in mov lea add inc xchg push mov and stos xor sbb popa mov lods jp add push or test stos lods mov push vmwrite mov rcrl ljmp sbb mov fidivl pop and adc lods out mov push sub and loop adc jns into vmwrite adc and test loop adc add push or movsb movsb loopne push jg outsl push test mov aad es cli in stc loopne test imul je (bad) int xchg lcall lahf jmp sbb scas mov (bad) pushf and mov mov in xor idivb inc adc pushf xor pop dec mov mov mov sub mov jmp addl push fscale inc mov out aam popf std mov popa fbstp scas jg scas mov mov jp lea inc xlat cmp mov sbb pop fidivrl xchg int3 mov pop shll or pop and cld sub outsl imul or xchg push fidiv mov pop andb jmp pop (bad) xor add ds ja js in data16 inc add bound pop adc popf sbb xor add and mov loop xchg xor in fcom test mov mov movsb xchg dec and inc cmpsb insl imul popf dec mov outsb adc (bad) xor cmpsl fucomip jl leave push into hlt mov sahf inc pop dec mov insl dec les cmp push je and dec pop lcall xor inc cmc iret or data16 das jge stos mov test jmp sub sbb in xor mov lock jbe xlat inc das pop movsb mov jl mov (bad) sbb jp js jecxz test bound imul nop jmp xor jecxz pop pop mov mov addr16 popa movsb pop mov and and inc mov sbbl sarl das stos fstl les and rol mov int3 test inc nop pop repz mov mov pop loop fwait jge mov adc sbb es aas add insl pop sub or pop fstp xor xchg push cltd aaa xchg popf aam cmc jle xor lock outsb inc add hlt in int mov jbe test mov xor lahf or xchg (bad) push jp rolb sbb insl fwait adc das add push data16 pop xchg rcll repz or das mov adc inc ret mov data16 gs imulb hlt insl add fs fdivr mov clc sub push pop adc fsub cmpsb out or jmp stc (bad) les ret cltd cmp imul mov or adc ljmp jb addb dec popa mov aaa insb cmp xchg dec std pop mov jmp dec xchg push outsb ds aad cmc iret sbb sbb push flds add push (bad) mov mov cmp (bad) lock rorb lods push out dec xchg xor icebp or lods stos pop test sahf aad sbb sbb clc in mov inc push cmpsl pop sub push mov aas in insl je mov ss (bad) sbb jb and lret cli mov dec xor xchg push sbb cld das sbb adc inc out push jmp fstl add mov push sbb test inc xchg mov sbb aam push loop pop out ret insl gs lret add rol mov jne sub rcrb aas jns sub test ret xchg mov or add lock sbb stc pusha aad paddq push lock xchg push lds fsubl (bad) and add mov mov lahf (bad) mov repnz mov add hlt inc mov rcr xor outsb lret fildl test addr16 data16 dec push fisttpl fbld pop repz push loope mov (bad) divb (bad) mov xchg add push call and pop cwtl pop mov pop ret insl pop lods pop xchg aam jge,pt adc cmp xor les sarb jo movsb aaa jmp xchg and xchg lea mov pop mov jp sub iret cmp push sti cld (bad) and jno sahf adc inc xchg ja add (bad) imul xorl movsb xchg popa mov xlat mov jmp sub mov add in nop mov dec jo jne dec adc les push mov (bad) scas data16 mov or dec addr16 push insl add jo mov lds pop cltd es xchg bound adc out mov cmc in jl push aaa mov into mov pushf insb sbb sub xchg mov push dec out pop adc mov fldl stos mov sub insb popf mov bnd xchg in popf repnz shl or jb and mov iret jns popa outsl lods lret push mov sub or insl dec push add sti stos xor pop mov push jnp mov add mov and mov test cmp or call or sub jge js fildll sbb lods dec xor ret mov ja imul xchg fmull add sbb sub xor out enter xor dec jae aaa mov xchg adc cmp xchg mov les mov popf decb sub push sbb in xchg es (bad) movsl and push movsb data16 fs leave aas cmp xchg jae push loop adc inc jmp adc sbb sahf sbb or repnz inc or inc xor les test test lret lds sub iret fstl push mov int3 inc sub clc int jge or arpl int3 jge out rol gs hlt loop jmp das or jmp jae (bad) or or shrl call xlat aas adc jno add scas fiaddl lock push imul clc mov xchg and in inc fsubp lds cltd imul jp inc ds lds mov test push dec cmp js idivb inc mov je data16 dec xlat (bad) sbb fcomip inc xchg insl repz sbb jmp adc inc add xor lret cmpsl imul xchg and lods das clc mov jae lea jns fwait or test pop in lahf sbb dec cmp hlt adc push lcall jecxz in and enter inc cmp cmp out xchg xor push mov in daa ja push outsl lods repz in jp or lods xchg and xchg in ret adc int3 mov aad pop jl loop adc or iret mov jle or mov and add out add sub lahf jno stos or mov pop add aas leave pop xchg xchg test (bad) ss (bad) std repz imul outsb pop push xchg jge repz push xchg fist mov sbb pop sbb arpl mov jmp cmp (bad) loopne sub pusha jmp imul aas sbb mov or aam dec popa push in fimul fsts into mov lds in sbb enter (bad) and push pop jecxz or movsl popa add rcl xor adc adc enter xchg rcl push ret repz mov loopne or ja aaa scas pop xchg adc adc xor aam pop ds push xor loope sub jmp xchg (bad) in enter subb ss popa gs jno adc fisub adc pop pop xchg cmp lahf fisubrl mov xchg jmp idivb iret notl iret and xchg ret aas pop and sarb fnstcw std sub dec cli push aaa jl mov inc or outsl mov dec mov repz jo loop repz or into negl aad dec rorb out jg mov xchg mov add scas (bad) adc add pop jb cmpsb loopne outsl mov mov mov sub jmp sub inc outsl adc mov fldenv mov mov xchg cli outsb cmpsb loope cwtl ret sub adc fisubr jmp hlt shlb in stos js pop adc xchg push loopne mov xchg jl xchg dec out lea int scas cwtl sbb mov mov sahf mov call out xchg into cli outsl push mov data16 and fcmovnu jbe xchg leave arpl jno sub xchg inc jae,pn popa cmp movsl fcmove hlt sahf cmp jl fmul fmull or inc push inc dec jmp movsl or and cmpsb cmp cmp sub xchg test popl incl or jge daa bound mov ss or xchg outsl les cwtl xchg out cmp inc das lcall mov stos test jnp mov or rolb loopne cmc mov inc std in cmp xchg icebp (bad) dec ret scas das ds sub adc cmp icebp pop and sub adc out or lret (bad) lahf add push and fstps pop dec pop push out dec or addl cmp shl test mov out inc cwtl inc push rcrl mov data16 or mov xlat and sbb mov out adc jp leave push push push mov loope sbb push sahf sar fdivrl cmc xchg mov subps push aam sub and out enter adc cli sbb rolb cmp sub ret out push cmc out pop inc data16 jno ret pop adc aas scas push push fimul hlt or jne jb aaa ljmp sbb sti adc aas or and inc mov mov in or add out cld loope pop mov jle xchg je test into leave sub loope fisub fnsave xchg cmpsb cmp inc inc repnz int3 (bad) and sarb pop fwait xlat aas push jge rcrb (bad) and outsl addl sub mov out fwait insl movsl (bad) js orb pop push mov shlb jnp adc mov call test and sbb out inc jno maskmovq insb testb mov mov sub int3 leave lds icebp subl (bad) (bad) adc out dec xchg xor jne or xchg mulb cmp pop push cmpsb loop addr16 adc mov (bad) insb scas in unpcklps jle pop fild and push cmc fdivrs rcrb sbb mov mov xchg fstps out ja add leave pop aaa dec xor out addl sar xor cmp pop sbb adc rcll xchg enter es loop dec sub pop test add mov mov nop out sbb sahf inc xchg and adc push jge cmpsl mov lods dec cmp scas int mov pop mov push adc jmp mov outsb adc roll aaa and sub add rcll lret jl stc pop add or cmc pop out lds cmp mov int3 out out adc adc mov jbe add outsl or dec ret and in test sub add and push pop pop test xchg movsl testb cli std enter mov jno jne jb lahf dec add sub rcrb cmp jae mov cltd push jmp adc mov (bad) cmc outsl lds inc sarl clc jge jecxz dec mov popa cmc sbb cmp rep sbb movsl xchg iret inc lret imulb mov cld dec cld ds hlt dec xor ret lcall imul andl imul cld (bad) fcoml push outsl and xchg inc inc inc sub pop clc jno lahf test cmp cmp add sbb rclb ss xchg xor cmp cmc cli lret push (bad) push inc pop and fwait pop push add test jp rcll inc mov and movsb out aas (bad) push mov xor adc add adc popf fbld test lods pop cmp jle cli stos imulb jb dec or cmp movsb (bad) mov xchg out cmc sbb lods je fldl lahf jp jl aad mov enter xchg mov sbb repnz xor push dec adc lds cli mov add mov mov jne inc andb jno add push inc loopne push arpl jbe and push cmp int push ret popf lcall fmul aam callw sbb dec subl dec mov fwait lds in push scas out push (bad) loop (bad) xor cmc push mov rol pop mov cld sub (bad) sub mov mov lret jb call push lods fsubr sub mov mov ljmp cmc push jge sub adc je (bad) xor (bad) sub lahf xchg or imul pushf in adc dec lcall fwait lock ficompl sbb enter ljmp sahf inc aad hlt setnp mov xor data16 push aaa flds leave mov push push dec sub mov ja add push cltd mov repz cli xor loope sub mov gs add and in dec or pop cmp rclb jmp imul cmp push pop sbb loopne add pop fidivrl pop jmp pop std pop in dec mov mov fnstcw (bad) into sbb adc je xchg mov jg mov cwtl orl xchg loop inc push dec insl mov jne js nop cmp mov dec cmp outsl inc jae lret (bad) xchg fucom ljmp ret dec jne jecxz in xor cmc bound leave jbe loopne mov cli sub xchg int3 fldt cmp xchg test mov lahf pop jne mov (bad) cmpsb in sbb (bad) jne (bad) jno cmp addr16 jns lret dec dec push inc add sbbl lahf aaa pop (bad) (bad) adc jnp lret adc sbb or jnp sub dec add test das sbb xor adc clc addl push sub (bad) mov inc pop mov pop pop mov mov add sub daa loope push inc ret mov in lock pusha (bad) mov aad sub jne xor lcall lcall (bad) push jecxz add sub js jne or jae mov xchg pop insl add imull cmpsl add mov jne jns and test cmp loop xor pop enter in and lahf xchg mov sub cwtl cmp es adc cmp push inc pop je push shl movsb nop lods dec cmc or jmp jns out and inc cld movsl daa sub add push syscall imul or jno adc in iret mov push popf xchg jae movsl repz loopne dec pop mov mulb pop cli imul mov sub sbb dec xchg adc lret mov cmpsl sbb inc rclb scas or testl popf fldt mov hlt sbb mov cltd into jo dec mov xchg repz insb jns outsb jecxz scas rorl in fistpl enter push cmp cwtl xorb push xchg push mov shrb cltd (bad) mov lock lods push dec push sbb push add cmpsl ret imul cmp aam daa lods jnp outsb mov add outsb add rcrl fisubl popa and push jl test (bad) or xchg xor and and inc bound xor add xor shll scas mov sarl mov es sbb loopne adc cli jb sbb mov mov fs add dec test jle (bad) xor sbb sahf daa stos push dec lock sbb ret jne jg popf sub jge aam subl adc in out and mov add aad les cmp ljmp sub clc sub bound (bad) jl movsl push mov imul aad rclb mov test fsubr xor outsb insb lcall xor dec jmp imul movsb xchg (bad) adc rclb jae leave pop jno push (bad) fisubrl inc xor test sar sub cltd xor inc or movsl cmp sbb lock and mov pop test mov pop add ret frstor jbe rcl xchg mov adc stos aam arpl aad leave loope or repnz cmp imul cld adc jae cs lds outsl lcall pop inc dec cs add cmc lret (bad) lret (bad) adc and imul cmp outsb pusha cmp and pop sarl idivb sub imul lret leave push add into or inc inc or pop inc fidiv and cmovne sub arpl mov (bad) mov pop xchg mov push xor xor cmp (bad) lahf sbb jmp aam rcl lahf pop xor mov jns insb mov mov es sub int3 dec (bad) cld ret arpl fisttpll aas jg mov fidiv rcrl out repz sti daa or out and lret das pop pushf xor outsl adc hlt jge je loopne inc hlt pop mov aaa lods sahf inc (bad) mov adc or adc add mov aas adc push and repnz jne mov xor xor xor popf add in adc sub mov ds push mov push mov cmp jb inc (bad) scas data16 fsubl xchg jb push and add es nop mov xchg nop xor push test mov sub js dec in inc push add lock mov loope (bad) dec outsl vphadddq movsl xchg jne xor in enter cli das sbb mov pop xchg lea or add cmp push jge pop test (bad) xor ljmp xchg adc add aaa faddl jne enter or push aam stos insb mov lods (bad) lds idivb fdivrs xchg mov mov (bad) cmp xchg jne and fdivrp or jmp push sbb cld pop jp push lret out sub mov fnstenv jns popf xlat cmpsb aaa pop sub push xor mov xor xor mov mov jecxz repz inc dec adc dec ja mov dec cmpsb mov adc push aaa pop xor cli mov xchg lahf cltd (bad) cli jecxz jnp xchg add jg sbb jbe jecxz jmp (bad) in jmp stc test sub fs or stc pop jl addr16 jnp inc insb xchg xor (bad) fldt aad mov and lds nop push sahf xor push fidiv scas outsb daa ljmp repnz fsub mov xor push jle loop in lcall ret xchg lds push sbb pop das xchg jg mov push imul out pop mov mov xlat mov xor bound cmp out mov call cmp push adc cltd mov jno push pop jmp dec sbb aaa jne jae mov jne jno push mov pop int push or data16 cmp pop jge neg hlt test insb ficompl aad jbe cmc and pop or lahf dec jl outsb sub popf add insl adc mov popf mov (bad) fxch adc cmc add dec mov stc push xchg lcall cmc repz sbb (bad) test mull add pop out jg pop loope movsl add xchg call cmp and into push std ds loopne popf outsb dec test sub in pop or pushf data16 cld ret adc leave mov or loopne cli mov outsb (bad) xchg dec adc cmp popl sbb inc mov pushf mov int paddsw (bad) repz mov sbb ds add jnp mov pop dec lcall push repz and movsl xor inc xor ss xor pop cmp cmp jb push dec mov lea mov dec les sub mov ds ret jo imul mov xor mov lcall test outsb fcomps loop cmpsb ss dec cli pop sub jp jae das push pusha dec mov aam loope jmp addr16 inc sahf sub push or sbb cli and in inc push int3 add inc pop call (bad) int3 std (bad) clc out push push rorb push dec insb leave cmp iret xchg pop sbb or lret out stc addl popa pop xor into jbe xchg mov pop dec push mov sti dec insb xchg in or lahf xchg stc xchg mov js enter loop js pop adc dec push inc jg leave mov inc cs adc in adc push daa iret xchg push rorl push jp mov jnp scas mov (bad) cmp push lock lea flds jne test scas push aad pop mov add dec sahf add dec inc push mov push or das xchg jmp cmc inc cs fwait xchg adc idiv lods loop dec jmp xlat loop xor int insb sahf push mov sbb sbb mov sahf sbb inc sbb in incl push cwtl jecxz cmp inc std fisubr mov addr16 in inc mov add psubw loope rclb out fiadd or aam add lahf xchg cmp mov jge add jl dec sbb addr16 add or (bad) les push fsubs pop add push fs rorl and repnz cmpl cmpsb cld insb cwtl xor jb stos imul je mov xchg int mov mov mov mov flds and sbbb jnp stos sarb sbb shrb mov xchg sbb sub (bad) sahf into xchg dec popf fiadd jbe gs jp dec and mov adc mov insl dec mov push stos in sub add iret jbe sbbl mov icebp lods scas cs or popf sbb int3 jecxz ss mov jo xchg negl xchg jo or and or int3 out and dec inc pop xor add mov mov dec (bad) inc mov shll xchg cmp pop add mov fwait mov mov mov addr16 notb push gs out jp mov clc sarb sub pop add aaa clc lods sti push pop sbb mov jmp (bad) xor ljmp ss pusha inc bswap (bad) jl jle push test cwtl lahf test pop test mov outsl jae mov sub mov push jns rcrl insb sbb add icebp mov dec (bad) and movsb cld arpl push pop mov cmp (bad) rcrl mov pop out cmpsb in xchg jne ret int mov xchg (bad) insb jno jecxz mov sti jnp popf lea out lods fldt clc sub sub add push push jo xchg or movsb js repnz out cmp aad pop xlat test test mov cld lret ljmp mov pop popf loope in sub mov mov lds loop cmp fsts out cmp dec dec mov imul sbb pushf nop pusha outsb test mov lcall scas mov pusha mov add mov roll cli iret dec mov iret or je mov repz or inc addl jg,pn sub inc out arpl rclb (bad) pop ds add int loope push mov (bad) repnz add pop xlat push or push scas std and pop repz notb inc xlat jge cmp jl adc lods shlb mov dec stos sub mov out aaa arpl lods ret sub jg lock das sub pop movsb jnp adc inc nop inc sub fidivl int movsb sbb call or inc adc aad mov dec ja je idivl and sub fstl adc add test rdmsr ss dec push gs xor or cltd mov mov hlt mov xor mov mov mov lods jae gs mov mull mov stos lds cmpsl lds (bad) push mov jo jne and das enter (bad) sti adc fwait pop imulb in loop dec arpl call in xor cmp add fstpt adc xchg push hlt (bad) dec imul jae test (bad) add cmp and or xor test insl aas inc adc int3 pop xchg (bad) xor insl sbb sub adc cmp rorb add jo inc and push mov punpckldq (bad) push bound push (bad) mov inc xchg and int iret cmp or out lahf jmp adc fsubr addr16 and lods sub xchg mov nop adc inc pop cli test mov push popa mov call cmpsb dec in add (bad) ss sbb dec add push cmp mov enter jo div jb mov dec jg faddl repnz add mov push and pop nop loopne add into pop cmp inc adc and mov pop push or aaa mov icebp test rol push lahf jbe mov fbld fmul sub iret xor das dec sahf int3 icebp sti pop scas jmp fst mov (bad) jge mov push arpl lea cld xor xor adcl int xlat stos fnstcw jmp lret adc icebp xchg clc pop sbb cmpsb ret out fs mov mov cmp arpl test insb imul adc ucomiss push out loope sbb xlat incb cmp (bad) or mov stc (bad) dec cmp sub lea aad scas fild jle and and mov mov icebp push lcall jmp add lods sub mov xchg out stos mov mov sbb insb mov pop jle cli fbstp mov dec pop sub loop adc test (bad) hlt fmull dec ljmp sti rol mov mov sbb mov adc clc adc lods imul cmpxchg8b outsb push add mov cwtl test out xor faddl out push jnp mov lret js cld sahf sub xor pop inc test sub jmp and fnsave jg mov (bad) int3 test push in mov mov jge xor repz mov lcall push push insb rclb push insl stos rorb (bad) adc rcr add aam push xor jo and stos inc pop cmp aaa cltd jle inc or test mov sub sub mov mov jbe dec push pusha sbb scas dec orb push push adc sub xchg mov test jecxz push out sarl mov mov and push enter out leave lods and icebp loop cmc push rorl xchg inc push xchg data16 jae inc fs movsl stos addr16 cmp movl dec test enter cmpsl std imul lahf jecxz cld pop inc cmp and in jecxz les pop (bad) xor loopne (bad) ds add iret pop scas rcr sti xchg ds cmp mov sub sub adc in pop adc add aas daa test or test popf into out dec pop mov push scas xchg push aas cs popf pop jnp sahf arpl ret mov aas test loope push orl or ljmp add push in or jge push sub bnd or stc cmc add cmp mov cltd or loop xor mov pusha mov outsl mov inc divb cmp xchg mov stos mov push dec test cmpsb xor mov loop sti xlat icebp scas fistpl fbld xor mov xchg jno and pop pop xor sti cmc imul dec sub lock test insl es lea and add xchg xor sub jb movl out mov std sahf lea lock mov xchg (bad) mov es xor add adc decb stos pop pusha add adc cld cwtl sbb bound mov sub adc mov add (bad) mov xchg lods rcr jnp sub (bad) mov cmp jl cmp xor and imul fwait cmp js cli xchg mov ret xor movsb xor jo stos or lret dec cwtl mov fs in cmp mov data16 sub outsb fsubr insb stos lcall (bad) adc clc sub hlt nop jbe xor mov bound insb addl add nop aad xchg jnp dec add adc pop mov aam rorl ret xor mov mov repnz dec mov in js or jp jg cmpsb cmpl lcall ret sub jge inc dec and adc cs add ja xor addr16 in jp ss (bad) jae mov clc cmc js call fdivrs insb xor (bad) adc fucomi cmc or iret pop hlt and add sub test das lcall dec cmp fidivrl lods sub mov inc mov jg cmc loopne (bad) test cmp push mov shll icebp jp repz ljmp leave fs lret fistpll scas insl or jge jne repz adc xlat lock shlb push sub test (bad) arpl jecxz xchg or into ljmp jb rcrb out hlt js cmp mov push setae sub inc mov mov (bad) pop add inc mov jne or sub clc pop pop jmp pmulhuw (bad) in push fsubrp push jmp dec xchg gs jbe ds dec (bad) ss int3 cli stos test (bad) lods add cmp jmp add and jns sahf pop es popa cmpsl mov in push add mov lock mov mov imul mov fcoms jp cwtl call mov sbb (bad) mov xor or and sub mov fnstsw add imul fldl test sahf jmp xor cs idivl sbb js pop movsl jecxz jmp out cmpsl imul sub xchg dec xor push out in dec push je push cmp xor adc mov fcoml imul jbe loope jo out jbe xlat ret inc cmp lea add mov aad cli push or inc pop arpl mov dec mov mov aad pop test fistp repz packuswb cmpsl or stos ret and js,pt and lcall cmp scas test stos gs push gs cmc cs jle (bad) mov push mov int3 les stc loopne fisttpll mov sbb push mov mov dec aaa daa sbb pop (bad) sub in clc sub pop ss shrl lods sub mov mov cmp scas cli push mov popa sbb inc mov sbb (bad) iret inc mov ss mov sbb loopne std (bad) imul enter ss cmpsl fcompl test jo dec ljmp jns loop mov mov add iret ret test loopne out nop inc ret jnp sbb cmp xchg movl rcrl sub push sti inc sbb and mov jg,pn out pop addr16 out ror (bad) mov insb and cmp iret stos imul add mov outsl pop pusha imul lahf xor leave jbe (bad) cmc jl dec aad mov notb imul imul push adc xor repnz or mov popf pop pop rol mov xor or test gs mov pop mov jae mov push mov mov pop pop leave andb pop fidivr std sub xchg dec and jecxz inc out mov pop call jmp orl add dec jnp jmp cltd jp jo call or ret ret (bad) mov mov adc adc je imul movsl dec and cmp mov xor mov add and push sar call cwtl shl jne jbe sbb jle xchg cmp scas in or insb popa rcrb jmp jae repz adc or dec inc inc mov jp ja popf pushf cwtl lret or mov mov out dec adc jg test adc daa clc les andb lea dec xchg push cmp pop fstl hlt lods pusha imul sub aad xchg xor ljmp cmpsb mov pushl int3 int js fwait rcrb rol fild (bad) ficompl adc hlt adc es out cmpsl fistl movsb repnz shlb xor push push xchg fistp xchg mov dec (bad) sbb mov sub jns arpl jb fwait or stos pusha scas fdiv incb pop cmc daa out add adc mov jbe sbb pop dec mov xor push repz pushf test mov bound ds (bad) cli (bad) xchg hlt (bad) sub fs jp imul push pop mov cmp mov fadds jae out sub aaa imul popa fsubrs jge adc sub xor jne mulb mov movsb mov add push mov ja lods fsubrl insl mov movsl repz mov fucom je cmp mov jnp or pop insl push ss hlt mov (bad) std test jmp stos (bad) jb iret arpl fisubrl add jl mov dec leave or sub (bad) xor in out xor xchg int3 mov aas rorl inc ds jmp test mov nop push fs pop es fdivl iret nop mov lret outsl andl jns movsb jle int3 inc ljmp push push pop hlt cwtl jno vmovhlps inc and inc push inc pop daa jb sub sarb imulb popf js rcrb jecxz pop dec fmuls (bad) mov adc mulb loope in fbstp mov dec push cmpsb xchg je mov adc popf add out add xchg cli fs push call out sbb mov push js data16 push in (bad) ljmp aad mov adc sbb sbb cmp or mov mov in sub mov sub xchg lahf xor jbe xor mov xor in mov test pop js xchg dec dec movsb fisttpl out (bad) gs adc mov xchg lret push out jg jg add rorb test rolb cmovbe fimull sub (bad) testb or dec aam cmp push or repnz mov adc push sbb loopne jo cmp (bad) ljmp aam fs mov or inc lds out (bad) and roll xor sahf out push test pop jb iret inc iret xor lds das dec test xchg outsb sub push mov fistl add insl ja shr xor fnstsw jbe cmp jno or std push sub ds das push in cmp shr adc mov xor or movsl mov adc lods outsb push ret mov cli push (bad) inc jg push xchg cmp lods push add dec (bad) xchg dec xchg out mov (bad) movsb fmuls xchg rclb mov lret mov insl push movsb jmp inc sub mov ja lcall push mov iret in jo or insb movsl pop cmp cmp adc mov nop lds ljmp add ret xlat xor jo idivl test sbb mov shrb dec popf sarb out or push mov xchg jecxz sub jmp add jle inc or aad sub add (bad) cld repz ret jmp test lret or sbb push jl sti je sahf push push xchg fisubrl sbb (bad) aaa xchg cmpsb and loopne scas lret fcoml dec cmp sti mov cmp nop stos inc inc mov xorl pop mov mov mov jle mov aas dec (bad) dec mov lret fwait test shl int cmpsl cmpsl dec pop repnz mov (bad) mov pop jg out cld daa sub sub sub push jg and (bad) mov push js enter enter pop ficomp stos enter push (bad) int3 adc in cmp or out sub in cmp scas out ss (bad) xor das jmp rclb mov imul push out cwtl stos xor push mov pop sub mov test scas in incl mov mov adc loopne pop scas cld jg ret test mov leave fs mov fadds gs insb xchg sub sbb pop lcall push insb clc stc es pop dec imul add mov inc movsl popa dec xchg jnp daa mov test and xlat pop movsb mov sub jnp xchg jecxz jmp adc loope sarb jl das popf ds scas cmpb es inc nop xchg mov xlat lds cs jne or imul sub sbb fwait pop pop xchg ljmp mov and cmpsb lahf mov lods add repz xchg ljmp cmp imul cs or push add loopne or cmp data16 inc mulb jo lret xchg cmc inc xor adc in stos aam sbb roll aam adc xor sarb js mov inc lret xchg sub adc test divl mov pop dec aas mov cli sub (bad) mov adc mov cmp pop fisubrl sbb inc push ss and xor or mov aam fcoms loope shll in cmpsl and fimull mov in dec dec icebp mov imul jns sub push insl in cltd pushl in dec dec repnz ret xor sbb ljmp cmp jbe pop loop adc scas je cmp mov cmpsl mov cmpsb dec aas lret xor inc xchg data16 inc xor lahf lret mov inc nop shr pop mov xlat sub aad loope ret movsl xor cmp xchg loop jg sarb addr16 popf ljmp out push (bad) out aam cmp xor jae jmp mov mov data16 or lock xchg subb adc ret loope lahf pop jns jnp mov arpl adc and jp pop inc lret ljmp inc and push scas stos scas cmpsl (bad) ds sbbl mov repz jge add xlat stos outsl or es clc inc xor in jo mov mov dec jl call ljmp movsl test aam sub jg ljmp int insb and ret and pushf mov mov mov int adc sbb test pushf in ja xor dec cmpsb cmpsb es sbb jg enter xor dec mov sub pusha fstpl jb div or add mov adc jge cli (bad) cmp scas pop rcll je pop ja push xor xchg inc cli xchg test shr push repz sbb add push mov jg mov out xor jp aam inc xor mov cmp jle hlt push mov or xor rcr sub xor xchg inc adc cmpb lock add sbb xor dec lds cmp das pop cmpb or sub sarl push push and fistpl jg loope std xor jns js imul xchg fiaddl mov out insb imul inc push xor pop or pop sub outsb and xlat test mov in aaa lret pop stc int3 push fwait xor test mov ljmp (bad) (bad) or push or sbb and aaa jno mov and add push push fbstp mov sbb daa loope in sub push jp push js and arpl sub hlt ds xlat aaa xor repnz mov push cld or mov (bad) movsb dec fldcw sbb jle lock aam push insl mov mov push ss out imull andl jo enter test ss adc repnz popf jle push mov cmpsb es sti push jo aam jp pop (bad) push pop shlb mov xchg inc dec sub mov jle cld sbb add pop frstor (bad) sti add mov scas test repnz andl stos (bad) adc mov rcrl fwait jle es mov pmuludq out in sub outsl in ss repnz (bad) or xchg sub dec dec sbb fwait (bad) test jae inc scas fs dec pusha cld jp cmpsl or enter pop repz out inc adc (bad) int xchg inc cmp or adc dec jno mov call adc sarl jb lret adc aas ljmp push jle pop mov sub test or jmp mov inc cmpsl cmpl sub jle test fs xchg and push xor sub (bad) cmc fs rcll xchg out je xlat cmp xchg mov ds ss aad jl xchg push add cmpsl in stc pop imul nop (bad) or std push imulb cmpsl repz jb sbb or mov addr16 mov mov popf and int3 xchg mov fstpt insb lcall pop fistpl (bad) out mov adc insb data16 icebp mov mov pop pop pushf insb inc xchg push add lea icebp dec popf dec subb int3 sub repnz xor push ds rclb add jae push dec xor xchg ja outsb mov sti iret (bad) pop adcl cmpsl dec mov fnstsw mov add std add cmp push data16 fadds mov xor inc nop mov outsl sub fistp cwtl ds repnz adc jnp negb lahf dec xor repz stos bound push adc adc push mov push stos outsl cmp sub loop in push dec pop test insl out js cmc cmp out adc shrb or cmp push mov inc xor add or mov sub addr16 mov mov repnz inc dec xchg sub mov adc jmp aas stos js mov imul (bad) mov iret pop dec rclb addr16 sub and mov stc lret mov push xchg repnz addr16 xchg fwait adc stc dec sub ret pusha sbbl add xchg jp (bad) popf or sarb jle into add rclb fildll push subb in dec and rcrl jl inc or sti aas fistpl mov scas mov negl sbb inc or arpl leave loop xor or cmp inc dec mov pop and xchg add test icebp psubb iret and fild sbb int push or xor mov inc sub mov jl jge cmpsb sub pusha test or cwtl or mov cmp aam mov inc dec adc test push out mov lret gs cwtl pop and mov cvttps2pi mov (bad) mov xorl sbb repnz fld lret sbb add mov jge lret int3 jp clc or std in loope cmc scas dec push fincstp dec (bad) jle adc loope adc mov loop mov hlt addr16 adc repz mov ficompl adc or aaa nop fildll fsts outsl mov pop loope into xchg psubq dec jb jge adc mov pop xor cmc das xchg (bad) pop mov (bad) pop xlat push leave or jp test scas push int xchg or adc dec std xchg addl sti xor mov jb aaa push add rorl enter mov pop push aas inc hlt inc pop loop jmp mov push mov pop sub les mov add roll popa or and mov int3 adc mov or add jmp pop and out adc mov dec or sub push or adc lods mov mov pop rcrb in (bad) (bad) or mov push popf (bad) loope int3 ja cmp lea dec inc or loope mov es hlt and loopne aaa xchg pop (bad) xor add and aad pop popa push mov sub sbb or test mov xor mov mov add movsb inc in subl cmpl push fildll add jns,pn dec sti sbb jecxz imul jle cmp das sbb adc lret dec sub faddl les add cmp in cmp (bad) (bad) nop data16 xor dec (bad) clc cmp imul sub xlat xchg jno fs das adc arpl adc push rcll test jnp or pusha outsl xor shlb mov cmp inc cmp (bad) flds insl xor push adc sbb jo,pt sti sbb cwtl adc pop out out dec ficompl xor cmp xor out mov jmp cmp cmp cs pop sti dec dec call cmp rorl add fcmovu mov addb jp (bad) arpl stc adcl (bad) (bad) push push scas pop test or ficompl lret test arpl outsl inc mov xor les and (bad) sub sbb out rorb repnz mov test pop pop aam mov mov dec mov mov test ja jecxz jo stos pop addr16 add adc push decl dec (bad) or mov add cs push cmpsb test mov es in mov add pop out std iret cmp mov pop insl clc pushf mov cld insl cs insl add dec sub hlt and lret jl dec push jnp test out fmul push sbb push repnz fnop xchg mov fsubrl and mov (bad) call mov stos add stos inc mov das mov out scas mov adc jne pop idiv (bad) xchg mov loopne sahf je (bad) push hlt push movsl in lret adc fisubl daa add into lods fs popf sbb jnp mov mov mov enter and add inc xchg sub outsl sub aad lahf pushf xor fstpl call loope aad dec xor add push xchg or sbb out sbb ret cmpsb mov out jne fucomp mov cmp cmpsb xor dec leave andl jbe inc push jae xor repz iret mov add lods cmc and and xchg and ljmp out jg stos sub jle xchg int3 daa scas sbb cmp je sbb xchg mov lds int jns es mov ret daa pop add addr16 xor gs xchg xor insl ja test pop es insl xlat jecxz mov into out adc jmp xor pop clc outsb and push jne adc mov push xor fldt push mov cltd mulb mov jle add sbb imul sbb jp mov push into out sahf mov and adc repz jecxz and mov jne mov mov nop into and fdiv pop (bad) iret mov stos jge jmp sti dec shrb or pushf mul cmp inc sahf (bad) mov xor jae subl mov inc fs pop fistl adcl je and mov xchg mov jo mov test push mov dec ljmp mov add jmp enter mull mov and mov dec mov sbb push dec dec (bad) jno xchg fcompl jbe seta (bad) push (bad) cmp sarb into lret and xor mov adc xchg and inc xchg inc nop lods mov jecxz data16 mov jmp (bad) shrl mov sti cmp shr incb push push aad add push mov repz push int in pop fimull dec in aaa push mov lock call pop inc movb lret shll test adc incb insl inc push xor push xor adc fimul pop sbb aad xor out roll sbb lock mov call or xchg cwtl out cmc pop mov imul adc xor lea add ja movsl sbb pop popf sub loope sub out mov pop sub lods imul in cmp lds dec xor stos push xor xor leave hlt pop sub (bad) or push sbb out add push faddl lods sub sub mov jns (bad) xchg in xchg repnz add arpl cmp push pop or hlt cs test push (bad) cmp or sub mov out mov lods jo xor dec psubusb jnp popf jne das mov mov fistl inc mov jl xchg pop movsl lock sti fbstp and or in xor mov lods pop das adc loope xchg mov (bad) sarb sbb mov cld pop pop repz sbb mov popf clc dec rol cs sbb mov pop jmp mov fwait cmp cs outsl xor xor les rorl xchg inc int mov and mov loope test sub mov mov repz sbb or arpl mov sahf and setae or dec add mov xchg mov mov mov shl adc stc stc or aas add pop or pop aas xor cs in insb bound std xor popf scas push or push test mov cmc pop cli add dec sub adc fwait aas cmpsl xchg leave out (bad) jmp and in fidivl add rorl xchg lods loop mov jmp mov fldl popf mov and pop stos scas out clc movsl jmp jge jecxz cld pop popf add cmpsb push and fwait out in adc push hlt dec pushf push dec imul push fbstp (bad) std sub xor inc xchg int hlt pop into pop cli fs test or gs cld adc mov jl cwtl pop cmp sub pop (bad) cs add fiaddl cmovl or mov pop xchg and or push in inc jns push xor clc or fcomi aas xor adc pushf movsb pop adc rcrb mov add and lret (bad) in push orw or pop lea int3 gs gs cmp loop (bad) xlat push stos sbb ret out jp and jne sbb out (bad) mov jnp mov jecxz mov in xchg add icebp int dec add push xchg subb xchg lcall mov inc imul ficoml xchg popa stos and leave ret mov cmp rcrb fisubrl dec out xchg push ljmp or rorb sub jno xlat jp hlt push insb fsubl sub xor adc movsl push inc xchg inc jp je xchg jmp pop fisttpl push sti xor push aam push mov mov (bad) aaa outsb push rorl add cmp and sbb loop (bad) jge movsl ret push mov mov inc lods loope jmp push movsl add pop ds sub aas xchg test in lods pop out enter push test (bad) out les cld outsb sahf jbe pop lods push fwait pop mov rcrl scas in outsl scas test int pusha les xor fbstp push or mov fisubr add fcoms cmp into cli ja sub cmpl ret js xor pushf mov push int3 iret sbb sbb jle repz lock mov imul (bad) inc lods xchg lds daa push push xor icebp jae mov or ljmp int3 loop es push mov jae dec stc (bad) sub lcall outsb inc es push or add xlat sub or cmpsb lret and mov ret or cmp pop fist jnp clc add mov outsb jmp (bad) jge push pushf (bad) (bad) inc mov jns mov cwtl push xchg adc inc mov sub imul pop add cmp cmp jle test cld imul repz xchg push (bad) sub (bad) iret jmp insl fistl add mov inc fstpl adc adc in add sahf stos jns mov call push jecxz mov mov jo pop pop mov jo in sti dec lret (bad) out sub repnz ja mov fs mov iret xchg cli (bad) idiv scas stos out loop mov sbb inc out mov loopne lahf lock loop and fsubrs popa cmpsl int push xchg mov test mov fldt rcrl sub (bad) xchg pop dec ret mov push test js ja add loope jg add push pmulhw imul fisttpll sub ss ficomp sbb mov lea mov (bad) fwait mov int3 pop sbb (bad) cld push aaa in insb int3 pushf add popf xor xchg or pop sar sub pop mov adc xchg (bad) neg push test test cmpsb daa cmp inc pop outsb add dec pop mov and nop mov daa bswap aaa out call daa xor sub sti shlb stos stc imul (bad) mov loop push addr16 or cs call out jo cld ja jae iret adc stos push (bad) out pop mov jo inc jae iret lds mov xchg cmpsl mov jae mov aaa xchg rolb dec xchg cmp or adc mov push mov hlt data16 push in dec jg and out pusha das cmpb jae nop lods mov jg (bad) xor xor jecxz loop inc mov das fstl lcall pop fildl pop test pop lahf fisttpl (bad) cli lcall xchg jmp je jl dec sub aam movsb mov dec jl loope data16 iret ja ja and pop test movl pop cmpsl pushf mov push mov inc push xchg hlt add xor pop fsts push pop ss xchg jo repnz mov xchg loope jns xor scas into push xchg (bad) jbe dec out pop or cmpsb and test das jns jp cltd sbb ficom cs inc test xor pop aad cmp sarl pop rcll pop stos stos (bad) cmp add fsubs mov jge and imul push cmp vpsrlq (bad) xor or cmp sahf jge test std lds jp lock pop xor aam nop and int adc mov test jbe ds roll cld and insb fbld adcl push push adc push fmul sub xor xchg jle cmp fdecstp rclb (bad) (bad) mov mov dec aad mov sti dec and xor aas (bad) xor xchg icebp data16 fucomip stos add inc adc dec iret mov jge jnp xchg sbb and movsb testb into add daa push push daa in mov sbb jno and ja aam xor mov cmove mov xchg je jmp arpl pop ret data16 das cmpsl adc pop mov jnp popa dec das (bad) rorb mov sbb sbb sub arpl mov lahf and movsb sub sbb lcall mov and adcl stos test stc arpl xchg (bad) jo es ret adc out je lock (bad) in fwait cmp inc push (bad) xor cmp mov mov pop mov jae daa stc mov scas je push adc (bad) iret xchg shrb aam test divb mov push stos sbb xor sub int jns clts inc aaa cwtl and jbe push cli jnp cmpsb jg scas fs mov jo cmc cmc pop fistp je jbe mov out pop mov or stos cwtl push ret mov (bad) popa jmp or (bad) fcomps test in scas int3 callw andb dec imul or cmp and shlb adc stos imul leave jp pop lret loop jbe xchg mov jo and movsb and jns jo cwtl add cld add (bad) repz sbb (bad) jo int outsl cmpsl nop negl push adc and cmpsl lret sub mov or mov mov add xor lods or movsb fs add inc fsubs jns add test and pop pop (bad) sbb test sbb pop push jmp inc jl add jb popa (bad) xor cmp pop hlt dec push repz sbb out mov shll sahf add pushf xchg push pusha push mov pop jle inc hlt lods subl dec (bad) xlat arpl cmp (bad) clc push arpl inc mov movsl xchg adc add mov mov xchg out sub fucom addr16 mov inc je jns ret push push mov or fldl xor jne dec (bad) pop std push orl out push inc or out push pushf adc and js push outsb jl aas xlat mov (bad) lret rclb test or xor fstps and inc cmp xor add imul push inc mov mov cmp pop cmp mov lret dec mov lock dec dec or jno scas mov cmp es loope sub sub rcr out aad in clts mov and pop into xor sahf cmp cmpl fidivl fldenv popf sub mov incb push or cmp sub xor sbb loop rolb adc call push inc sahf cld push and and add je rclb loope hlt add popa adc bound push add nop sbb and inc lods cmp jne (bad) lock mov or call jns clc out enter arpl adc fldl aas mov sub ficompl out or and aam mov insb dec test xchg hlt lret mov sub inc cmp sub sbb push inc hlt (bad) adc fmuls (bad) jle or push subl cmp iret pop mov or push add mov mov jns inc dec and add xchg mov scas scas (bad) push les sub xor fcoms adc mov jecxz fnstenv jmp mov call dec (bad) fcmovnu push into test iret es xchg jecxz fs (bad) mov std add jmp adc sti mov (bad) jno xchg (bad) or xor dec lret jno mov fisubrl jl out iret fistl adc loop aam mov jnp xlat fstpl push add push pop int pop orl mov sub mov mov es cltd mov xchg fldl lret sub cs clc jge mov arpl pop push (bad) mov mov inc dec int3 popa pop cmp sub pop loop ret (bad) dec rcl add (bad) in xchg dec push movsb lret cmpsl fwait push int mov mov movsb inc (bad) mov mov ret or (bad) and repnz pop xor ljmp arpl in xor inc lahf lock dec adc loopne mov mov arpl lret rcrb cmc or (bad) lret pop cmp out sub add mov ljmp sub cs ret out sub leave mov xchg dec xchg sub daa push (bad) arpl int mov nop test sti add fdiv sbb or or sarb adc stos sbb mov in (bad) (bad) jmp lret mov dec ja xor cmp push jecxz (bad) repz fsubs (bad) aas mov mov aad fisubrl inc daa (bad) sbb push pop mov push hlt addr16 adc push lods pop push leave test dec data16 outsl jne sbb out mov mov pop fnstcw sub jp dec sbb (bad) sbb hlt mov push test push or mov fcoml cmp jbe and cli imul mov and pop xchg fnstenv aad aaa cmp pop mov (bad) xchg test rorl dec inc mov cs out fs inc les hlt push cltd mov pop inc adc adc add push or jmp cmpsb adc sub push pusha adc push inc jl push mov cmpsl jo arpl pusha nop sbb sub dec add add mov jns insb notb fs cld adc cmpb ficoml push hlt sub or out xchg xor add adc outsl ss pop (bad) lahf sbb je inc in sbb sbb add out mov jp push sub es test push in cmp aad sahf in out sbb cld mov test movsl mov pop jle add mov dec ljmp lea inc xlat pushl and movsl dec inc mov inc jno (bad) xor jmp cltd lods test xor mov imulb das jecxz add mov sbb into sub out (bad) imulb adc and jnp push negb add cmp mov sbb push dec cmp int3 pop mov and mov lds and inc pop sub popf dec (bad) out arpl jno insl push leave out and iret jne xor in mov popa sbb mov shl xchg rorl fbstp or sub inc rclb imul mov (bad) (bad) mov ljmp js xor pop pop stc dec cmc loop push int3 es xor xor cwtl neg ss cwtl push fstpl fldl (bad) mov add jns pop dec cmp pop inc xor jns lds add add outsb fnstsw lea aas pusha out sbb cli pop adc jae xchg imul mov test jae and stos (bad) sub sahf and outsl leave outsb in xlat lret xchg stos fldcw data16 ljmp repz outsb fiadd xchg pop sub mov dec cmp and in sti xchg inc push push push mov idivl dec gs test cmpsl jmp int cmpsb inc lea out out lea push rcr cltd lea (bad) add aad push lcall std dec stc sbb in dec or cmp movl push xchg push or stos sbb (bad) jmp jb pop cwtl pop (bad) and inc sbb scas mov push mov stos addr16 xlat in cmp adc dec xlat in add negl movsl lock aad pop out adc push addr16 xor dec mov push iret xchg (bad) xor mov inc aam push fwait pusha cltd fs cmpsl xor adc aad sub inc mov repnz or fmul mov dec push call pop cmc ret dec lds or jg sub (bad) aaa xchg sbb add lcall sbb icebp sti dec or mov adc xchg or mov add out arpl jge sub xorl xchg rcrb lods sbb jae pop (bad) cmp lcall cmp aaa cmpb dec stos add rorb (bad) pop inc mov nop lret lahf pop inc xor push xchg out add sahf push jnp push xchg int loop cmpsl out cmc fnsave leave pop mov sbb jecxz repnz add xchg mov push jo adc and and sti jno pop adc or adc adc add (bad) lods sub call (bad) jbe mov jmp mov mov lds call neg cmpsb imul test sbb jecxz inc call icebp xchg (bad) enter push dec mov fstl pop add add cltd inc pop shrb in and (bad) mov or (bad) gs jge push jge sbb cmc insl out jno loope (bad) scas cmc sub xor jmp push and inc dec inc xor adc push inc dec popa sub xchg sub sbb out ret mov insb bound xor push lods out jo fidivrl jae scas and mov inc mov xor das outsl xchg mov fildll rol mov test add xchg xchg repnz cltd cld and mov and push rcll lret out add insb fcompl jg fsubl std fstpl xchg dec sub and cmpl adc rcl jg add fdivs in ret add adc xor jp hlt cmc leave mov mov xor dec or push sub lahf fstpt ret insb mov cmp std mov movl jg loope addb fdivp icebp test jb mov mov rolb xor (bad) cmc mov dec adc loop ds mov inc daa pop (bad) xorb enter xor mov loopne (bad) in addr16 or mov pop and scas push or rcl int xchg das cwtl jmp test std out aas adc das pushf push jno lret daa xorl das xchg push mov and mov pusha (bad) std pop mov lock test fdivrl int3 repz test cmp ss push and xchg push loope cmp scas xchg push push jo inc andl call (bad) int3 pusha sub jmp cmp push jl shrl xchg pop push push aad ds or (bad) test mov inc je jo out dec push je lods icebp or loope popf cltd shll popf cmpsl adc cld sti imul lahf pop shr adc (bad) test push pop in iret in aaa fstps negb jmp insl inc jo (bad) ja cmp pop popf sub pop mov xor mov pop mulb shr scas pop (bad) je movsl push jp rolb leave pop xchg fwait daa int scas cs lock dec movsl leave xor inc pop pop xlat xor stc dec fnstcw in test xchg ja mov pop jmp xchg stc pop inc push sbb cmp pinsrw loop stc cmpsb sub loopne cmpsb sbb out jge daa sahf inc pop fs jmp ljmp (bad) ja or out into repz push in aad mov into dec pop and jg clc pop test insl enter out pushf cmp in rorl sbb ficoml sbb and mov jle mov std (bad) mov sahf and fildl and lret shll inc mov fs sbb mov push xor out aaa and out xor mov add pop out jnp jg inc push inc push cmpsl rorl inc mov hlt inc outsb push xchg fwait mov sub ja in inc idivl cld sbb scas incb sbb lret mov negb (bad) sbb mov push lret mov ja pushf add test cmpsl pop call mov (bad) mov pop sbb push push mov xor inc jecxz ret mov pop mov jge sub es loope ret add loope aad repz mov push sbb and push xchg ret movsl adc mov aam outsb dec dec faddl push (bad) outsl sbb mov mov stos gs sbb pop mov jne jge xlat mov lcall dec repnz xor jl fwait xchg xchg add mov imul (bad) xlat cltd arpl shll sub xchg sub push (bad) lea iret cwtl jp cmp mov mov cli and popa js mov out sbb int3 add and or mov mov movsb add jge,pt jmp cwtl sub mov mov out divl clc sbb dec and inc adc insl pop cmpl pop scas imul popf cli fiadd sbb xor mov sub or pop jl shll ljmp sbb dec mov lock test nop repnz mov push jp xlat cmp and dec cmp sbb cwtl xchg inc je ret adc push adc leave rcl mov push xor repz add cli jecxz clc dec push lock imull fwait std jp in std repnz push jb icebp or jno call jp in mov pop push popf out mov lsl xor test jmp fistp sbb aam aas inc pop fs roll sbb push jmp xor or or sub outsl jecxz test sub push jmp xor movsb and test imul fcmovnu dec leave push jne ret mov fcmovne adc adc (bad) aad mov fnstcw sbb add lds cld xor and insb mov sbb push jo xor xor jae dec adc jp cltd cmp in xor inc push in ss scas mov push ss sbb mov add push scas insl call nop sbb add xchg in fsubrs sbb dec mov xchg lods sti icebp mov mov (bad) mov add or shlb and nop popf movsb and stos and or jg dec sub inc and push (bad) neg mov mov mov inc mov mov jp (bad) gs or pop xchg cmp xchg pusha push xchg fmull mov dec loop cld cmpb push sbb sub (bad) out jg in dec jo or pop xor lods lea sbb xchg sahf mov mov std out pop or inc pop jns mov mov sub fs leave pop push movsl mov mov cmc dec pushf sbb pusha lods sub mov push fs jnp dec test std jmp ret imul jbe movsl jp test rcr xchg mov rorl sub push loopne,pn test dec cli mov mov mov and sbb nop add imul scas adcl popf jo and mov jb jge mov movsl ret fwait jmp inc in pop adc mov (bad) insb aas and out (bad) lcall xor scas scas mov adc push mov sbb mov cmp dec int jp mov or enter cmp sarb in ja sub popa and push pop scas shll mov mov lcall jg sub int cs jmp enter mov xor pop clc xorb out scas aam xchg mov dec and lods clc push sub arpl add and xchg mov cmp sti push xchg loopne jl or outsl pop adc jl mov inc addb dec imul cs fs outsl mov ss adc xor pop mov test jge aaa fsubrs add lea psubq cli mov pop outsb inc popa or cmp aaa je add scas sub arpl addl sbb jb adc cs pop xlat push loopne int movsl pusha lock inc mov ror scas fldl pop inc insb rorb xor stos or cmp movsl out mulb stos jns mov adc inc and push popa sbb popa mov sbb cmp jns test xor (bad) and mov (bad) incl ds jns pusha xor das movsb jg test lcall pop mov cmp jno negl iret xor add pop inc add cmpsl arpl xchg push aam mov lds or out xchg mov (bad) scas pop mov lahf nop cs jmp xorl and faddl sub les fist dec lock js mov or xchg ret or adc lock mov xchg int3 dec pushf loope xor mov mov test pop outsl ror lea popf rorl into out cmpsb push mov out leave xchg push push fsubl ss pop fwait mov or add stc ret pop aad mov dec push int (bad) out test jmp jl lea jmp insl push mov aam pop sub jne jb rolb imul test aas sbb cmpsl fsubl lahf xchg popf scas pop addr16 shr pop (bad) xor repnz jle cmp lock cli xor in or jno or sbb xchg inc jg xor cmp icebp add xchg mov jnp jmp push cmp xor in in jo ljmp fs std adc cli mov nop ret push bound inc in adc (bad) push stos push jnp pop jmp faddl fisubl insl fmull sub mov data16 sbb fsubrs es xchg sub xchg mov adc add loopne mov andl mov pop test inc push sti popa xor stc stos es in sbb mov add shrl (bad) push xor scas adc pushf fsin mov mov ret in mov mov cmpsb inc out stos or or sub add (bad) iret pop out xor insl pop mov pop outsb jp mov in inc sub xchg jbe cli faddp lods stos mov and xor jle cmp dec into subl fsincos lds bound jmp arpl ret jmp addr16 lea xchg adc ja aas cmc cmp and jge jle mov ja rorl das mov sbb lahf leave lock ffree push sub add (bad) sub inc sbb std enter shll xchg add lods push xor ret push dec dec jb mov jo pop out ret pushf pusha loopne xchg jle shlb dec insl aaa int3 and inc jno push sbb cmc icebp mov test mov push add xlat inc or movsl mov lea clc roll sbb and aam movsb fcomi movsl (bad) xor or jl andl inc sbb cmpsb mov popa test jmp pop inc and mov sbb popf jge movsb mul popa repnz iret inc add (bad) push fstl jb adc cmp cmp cmp fdivrl or cmpsl inc mov or repz pop outsl xchg jns adc fldcw icebp add sub xchg popa imul xchg int dec test rcrb insb xor idivl popa cmp pop clc cmp mov mov rcrl cmp (bad) and dec jno cmp aas mov outsb andb xchg cmpsl lret stc jg stc push jge leave outsb icebp cld out aaa aaa xchg mov mov mov jbe loop mov into adc mov mov movb int faddl add (bad) cmp and mov cli popf mov out xchg push fdivrs shll mov js sbb (bad) or mov jnp lret mov add xor lods in pusha (bad) jl out rorl pop push push (bad) cmpsb aaa idivb pop xchg mov add xlat jnp sub cmpl in mov sbb pop mov push mov add hlt out stos push lcall xlat shrb mov cli cmpsb and (bad) in mov xor push nop iret pop faddl mov jmp add push (bad) mov mov stos cmpxchg push sti pushf mov inc lea daa in push das push pop jae push sub pop cld push out mov loope push or out or das (bad) xchg decl (bad) mov pop cmp sarb gs (bad) loope insb xchg xchg push pop (bad) popf sbb push (bad) test add fstpt inc pusha inc ret nop dec into test shll (bad) cmp jge mov dec and insb mov adc and fwait push adcl and xor inc arpl lock pop insb (bad) sahf mov jae mov insl fs repz sub fcoml inc movsl add rcrb dec inc fsubs cmp pushw mov mov sub rcl pop xchg arpl cmp in mov fstpl mov fild dec sbb and push adc stc aas stc add pop in (bad) fwait pop je inc mov add jbe dec repz pop sub pop adc push and movsl (bad) and rorl imul std clc rorl jle add inc fidiv inc mov lret sbb arpl sbb xor int sub cmpsl jecxz mov aad dec in bound stc movsb push push in (bad) dec inc in sub ret (bad) call xchg lahf lret rcrb popf out lods fisttp push icebp and mov or sub and jle ss daa outsb ja xor push ret jle es mov ljmp (bad) mov and hlt xor push mov jecxz icebp cmp xor dec xchg cmp iret frstor rorl xor dec (bad) loop add je inc mov lcall lea mov loopne lds setae mov out lea (bad) loopne scas adc xchg outsl insl in jnp test add fidivr (bad) jp stc cmp addl in (bad) sbb pop push inc ffree repz stc int3 bound imul (bad) (bad) and in mov ss xor sbb jmp jmp outsl jp mov rcrl loopne daa lcall sub dec push pop xchg das xchg add lcall push daa in add out jbe xor mov inc in imul lcall pop jmp enter pop cld mov imul push loope xor es mov lret mov pop mov outsl imul idivl lods pop cmp lods sbb xchg (bad) mov outsb dec movsb inc fcoml mov out mov cmc jb and mov dec or mov jp stos jae pop fisubr jnp xor je adc movsb push movsl adc sahf or push das jo and xchg inc and push je ja add cmp fsts push out jns fldenv lahf sub in jmp lcall daa dec in sbb jle push mov jmp insb adc mov icebp cmp cmc lods adc xchg mov popa push add in cmp ja (bad) dec fdivrl scas leave sub push mov adc inc (bad) pop test mov jg pop cld dec xor daa mov sbb mov pop popf fadd insl inc mov pop fsubl sbb xor mov insb lods mov nop push cmp lock cltd mov in imul scas fs dec pushf (bad) or ds test pop les repz pushf pusha popf (bad) bound out pop imul addl inc xchg pusha mov xchg int xor mov and mov cmpsb hlt lahf adc cmp xorl sbb repnz xor mov jno fcomps leave daa inc cs xlat pusha gs shl pop rcrb decl insb cmp push mov cmp push inc rorb in xor mov or ljmp rcll jecxz hlt gs cwtl ljmp mov add insb xchg shl fisttp jecxz mov icebp cmp sti leave or xor xor push adc xchg (bad) dec sbb and sbb arpl xor dec push mov xor jae add jne mov pop ret pop adc cmpsb push sbb ret dec mov out lret dec xchg hlt push xchg (bad) into cmp sbb pop clc dec jp mov sbb mov lods int3 icebp mov mov pusha int mov push mov push mov hlt int or int3 movsl daa movsl popa loope cmp cmpsb sub gs aad out add xchg or das mov enter fs jmp sti insl lods enter mov xor cmp mov mov bnd dec rol test jbe,pn inc adc sub sub push mov xlat (bad) icebp orl xchg adc arpl lret inc jmp jns test xor jbe and test inc (bad) xchg sbb pushf xchg (bad) or test dec les or imul lcall inc push movsb das insb mov jns lret decb and cmp mov hlt popa lods or jbe sarl or call repz inc and pop (bad) movsbl stos xor or movsl fcompl push (bad) popf inc ret ljmp jns lods push stos jl test cmpsb sti in rorl aas push into scas and jmp lret lods enter out daa xor cmp dec ds in outsb fstpl mov cmp jp sub je out sub jp inc aas sub xor les jo lds outsb jg mov xor jl scas mov ret dec mov push insb cld and hlt and lods in sahf dec dec inc push lret lock xchg mov (bad) in imul cmp or jae push dec (bad) arpl mov add jns mov mov cmc jecxz lahf mov fmull insl adcl sbb dec paddusw imul in dec repnz imul mov mov fidiv inc cltd or inc das (bad) clc lcall sbb cmpsl cwtl push add shrl cmpsb xchg scas sub mov add jmp lret mov stos cmpsl inc popa ret shlb dec and mov lcall andl mov mov cli push daa loop and sub and mov pop jb ret mov xchg ds js insl mov in lcall inc pusha add scas push aad mov out inc jp scas int add xor xchg xor hlt andl sub xchg fsubp pop pop rcrb xchg movsb pusha xchg push jns adc dec xchg or (bad) jle,pn rcll (bad) stos ds push pop fwait das orl cmp iret xchg inc (bad) mov mov dec push es add mov push js outsb push mov xchg mov movsb cmp push ds pop imul test or insb pop insb sbb or push jp lea popf loop dec push out sbb jge push jle or pop push pop sub movq or stc jecxz inc mov out add mov leave es cmp mov je pop push sub xorb adc mov push mov out movsl pop sbb popf bound add sbb out or enter xchg cmc xor xor cmp (bad) sub imul fsubrl xchg xor cltd inc movsl pop je inc (bad) mov and inc jl inc mov push push push aaa (bad) js xor stos add xchg out ret sbb dec stc (bad) jae push pop pop pop bound xor or or fwait pushf ds and insb pop jg mov (bad) sub sbb xlat lock cld popa fnop lods dec pop cmpsl lods xchg rcrb sarb xchg mov imull mov adc es mov sub adc sub sbb frstor push (bad) lods dec lock and mov daa mov xor dec fiaddl outsb fsubs sbb push xchg loopne outsl push sti mull inc push sub loope (bad) out lahf cwtl stc and dec mov mov loopne scas (bad) outsb out movsl std outsl pop (bad) mov into fwait xchg pop xchg push or je sub dec inc fistl repz xchg mov cli jo push fcomps inc sbb mov add cmp cmpsb mov mov data16 add cmpsl and imul dec sbb add das xchg stos xchg jle and scas add xchg ror jno (bad) jp sbb movb mov jp and scas pop lea jle in mov arpl int je,pn (bad) cmc mov inc in sub cmp push mov jno jns pop inc jne ljmp lods sarb andl jo shlb push lret xlat cmp xchg xorl or movsl adc mov push sub push ss sbb lods xchg push or cmpsl sar push stc lock inc sahf cmp lea push js flds mov cmp lods stos leave imul add cmp iret dec nop xchg push lods and cmp sbb pop xor icebp stos fimull call iret fdivrs mov jae ja push push cwtl and gs mov mov iret dec jecxz cs dec stos sti or xchg imul pop adc jmp cld mov push popf gs cmp ss sub (bad) fnsave xor push sbb xchg (bad) icebp push pop ret pushf cmpl movsl ljmp jno (bad) mov in fldl pop lahf inc dec mov out cmp hlt clc xor xchg sahf das mov leave dec leave push pop lcall imul cmc sbb adc imul lret (bad) dec jns push std xchg sbb or xchg xlat ss inc je pop ss mov and jnp cs out jp cmp cmc inc or pop inc test std sbb add out mov out outsl test imul or aam rcl mov stc syscall (bad) sub mov sete mov nop/reserved cmpsb inc or add or xlat sbb cld pop and jb loope push out loope dec (bad) popa dec inc jns adc cmp or hlt scas add aaa js push daa adc sahf and mov pushl pop subb ds nop add adcl mov add mov adc jne inc cmp push mov xor rorl mov pop add cmpsl adc test (bad) lahf or ljmp pop xchg pop mov test ja scas (bad) repnz call mov int3 repz lret int3 xchg dec out xor pop (bad) dec aaa cs js inc imulb fwait push jle pop mov cld push dec add xchg push xor icebp or cmp sbb test mov addr16 ret inc or lcallw cmp push add xchg sub mov stos push sti lock ss or scas nop or orl jge hlt data16 hlt mov inc cmc repz sub mov outsl cmc mov or das add les sahf push sub push sub stos and jne dec enter pop xchg repz push pop push mov jmp pop or pop mov insb lds push pop adc rolb ret inc into xchg orb movsb sub lret mov sub leave (bad) and mulb repnz adc aaa lods push add ss push adc mov popa (bad) pop push jne ficoml or mov pop int3 ret leave push test cmpsb push je fild pop jg gs fcmovu xchg xchg add out push sarb push int3 gs xor in idivl or adc imul mov (bad) scas divl add (bad) push add daa and repnz imul push orb adc dec inc sbb call xchg cli jo mov imul subl in iret xor insb jnp fnstcw adc repnz pop (bad) fsubl fmuls nop cmpsb enter adc dec addl sbb inc decl xor (bad) sahf pop lahf fidivl daa (bad) xchg addr16 pusha sahf cmpsb mov lret mov mov popa (bad) loopne lret inc (bad) in loope inc enter aad dec outsb pop (bad) fisubrl mov mov cwtl repz decb xor add pop mov es cmp mov inc iret daa out aas or shrb or fistl jp add call jp sbb aas sub xchg out mov cmpsb mov fldcw leave xchg and movsl mov add cld aaa lcall cmp or lods outsl mov pushf icebp lahf inc jg mov sbb mov push cmp out sbb and rcrl xchg push fidivl outsb push test mov sub bound cmpsl aad and mov mov into lahf cltd or (bad) dec or call sbb adc imul notb pop inc or jo pop jns stos sub lds dec dec xor bswap shrl cwtl repz test mov or cli bound pop ds sbb jns mov insb int3 inc sahf push call aas xchg aad cmpsb es fild push mov inc (bad) xchg pop out lret leave test sbbl shlb xlat add mov bound mov clc fwait sbb mov insb fwait mov xor and cmp insl movsl adc aas lret repz sub (bad) jno pop cmp pop into jg hlt adc (bad) cs (bad) jge movsl push fnstsw add cmpsb mov mov pushf movsb arpl aam mov outsb cmp xchg mov fistpl js xchg repnz pushf outsb aam mov mov dec inc jno adc popa cld jno stc cmp mov aaa test (bad) ss sarl sbb les jo cmp enter xor mov imul inc xchg sbb cmp cltd les jle mov into sbb jp outsl sbb push mov mov lock push mov dec sahf xor in jae fisttpll cli pusha push pop lock mov shrb jae pop ja xchg cmp sub insb add stc mov ds ret mov mov (bad) popf pop scas and or adc sbb lcall leave dec sub pop shrl loope or daa daa fbstp xlat mov cmc xor sbb xchg rorl sahf or test ds jne xchg fxtract jle inc xor xchg rol in cmp sahf cmpsb imul mov lds clc sbb lahf jge mov and xor and mov or insb leave add fcoml and sbb pushf shll loope mov test pop test jecxz xchg cmpsl xchg pop clc push and adc xchg push ret into clc das xchg dec movsb push push mov pop sahf mov jb ret cli pusha into jl sbb (bad) icebp fmuls addl stos inc gs fild push out rclb les jae dec and push dec imul cmp ret or dec and inc lods pop lea sti xor sbb ja sub sbb pop mov (bad) and xchg cmpsb pop jo pop lock mov aaa jp mov dec addr16 push outsl sbb sbb stc jb jnp in pop pusha js lods push jo rcrl pop add push mov or testb negb lret dec cltd xor sub xchg ret sbb mov mov outsb cli add push (bad) cmc xor imul fdivs dec shlb dec lock pop loope fldcw je xchg lods push enter jg xor sub inc cmp cmp mov fstps roll mov pop adc lcall jl add xor mov pop negb mov push pusha sbb inc xlat out adc pop xor sarb fidiv movsl das dec sbb sbb pusha xchg imul or out lret jp in iret and and std and call ss pop leave clc inc gs mov leave mov test aad dec pop xor repz mov sbb adc (bad) loopne xchg test sbbl (bad) aaa shlb loop adc cmpsb push cmp fcmovne andl aaa push int3 jmp xchg dec fisttpl aaa call gs cmp inc icebp mov scas addr16 xor jne add movb lea movsb cmc sbb xor mov dec daa push cli xor mov sarb iret xchg push push fsts and xlat jp test push stos out (bad) adc xchg fcomps xor pop mov inc leave popa cmp cmpsl and test cmp movsl pop add adc xor (bad) inc cmp xorb icebp sti or pop push xor mov jecxz enter pop pushf stos cmp xchg daa xchg ljmp aaa jne adc into cmp fwait in lahf mov rol das pop jg mov mov inc lret mov push sub (bad) mov out inc fimul push jl jg je test add cmpsl mov fistpll adc mov pop (bad) cmc push mov (bad) icebp sub mov jecxz dec cmp xchg mov lahf mov inc sub mov dec enter fistpll inc xor xchg test push jno add inc (bad) lods popf int outsl pop fdivrs jmp aam ja and mov lods mov xchg popa mov (bad) add ror addr16 sub stc hlt jecxz ljmp and lods xor xchg or xlat add dec mov (bad) sbb dec and lahf cmp (bad) mov xor outsb clc push mov icebp ds (bad) insl cmp ficoml or out mov (bad) mov add push push mov mov sti cmpsb pop call outsb pushf in adc jmp push jnp xchg out mov test push dec mov sbb cmc aaa dec xchg mov (bad) push mov dec sbb lods mov mov loop or bound js cld insb xor inc ljmp sbb pop pop repz enter lea (bad) insb inc hlt test lock rcll xchg daa repz sbb sar cmp sti cmpsl aam movsb divl enter add (bad) iret lret scas inc or pop xchg pcmpgtd test cmc xor fsubrl (bad) icebp lds sahf in push cmp mov das sti cmp pop xchg jno pop (bad) hlt dec mov inc notb (bad) inc mov adc cld repnz cli ret out lods sub test sub xor and add fstps xchg sub or ret inc xor es idivl cmp cmpsb dec cmpsb test int scas xchg cli fs bswap dec pop dec test sub mov jns pop leave adc adc call scas or jg xor push cmp loope pop inc das dec in out lahf les repnz jae std fcmove loope loop flds xchg xchg sub jp hlt inc aas aam repz mov pop xlat cmc leave fstpt aas cli rcll loop out repnz mov in test lret and ffreep adc sub mov (bad) dec dec pop push mov inc and adc in mov mov jo sbb out mov mov and int3 int3 pop jle out xchg les mov pop sbb dec (bad) int movsb cmp mov (bad) xor iret or pop in mov (bad) mov movsb shrb and inc popa outsb sbb mov xchg (bad) pop sub ficompl jo pop movsb and mov jae pop sarl jg aad out clc xor pushf dec in sub (bad) and or xchg (bad) xor xchg fcmovnb jnp sub add sub ss sti jne cltd and int3 mov pop mov js retw inc push sahf cmp in in insl aas rorl jo int ret pop movsb add xchg lahf ja pop mov jp dec mov jge mov cmc test stc imulb pop adc lea dec pushf (bad) mov jl dec cmp aam fwait dec aas cmpsb neg pop daa (bad) addr16 stos dec mov mov xor cmpsb and cmp push fs xor xlat and push stos aas xchg rcrb pop addr16 jle adc push data16 scas jge cmp rclb push out je inc dec and sbb pop out sti ss arpl jmp mov jns inc test adc (bad) in ss insl cs adc adc pusha inc add mov dec inc or jno and xchg and lahf mov aam push mov add (bad) jmp inc add lock pop and lret cmp mov inc sub pop pop out imull insb aaa dec scas decl xchg int rcrl pushf pop (bad) xor enter dec mov cmp adc mov dec add and int3 sti push call push push and xor test out pop dec cs add mov mov scas cltd pop ds fisubrl stos cs cmp je,pn or cmp and dec insb xchg mov inc mov pop mov (bad) adc sbb add sub cmp mov inc pop data16 push jmp iret popa rcrb jl shrb stc mov add outsb leave std and dec mov and pop jmp xchg push mov sbb (bad) push xchg loop js out mov add cli push in inc sub lcall outsb xchg bswap ljmp cmp ja pop and repnz cwtl mov xor or loop,pn popa xor das adc iret jmp inc aad mov jb mov cmc out movsb ljmp daa ret xor adc outsl scas mov iret jb sti fistl xlat dec out xchg jp xchg punpckhbw ror (bad) in dec scas and adc int3 je fwait stc inc cltd sub shlb xchg mov jle push fstl jecxz (bad) lock aas fimull jge cltd movsb push mov outsb dec imulb sbb dec xchg outsb mov pop (bad) ss push jl cmp movsl mov test lcall scas loop xchg jl imul imul (bad) jne dec jb jo mov cmp adc out bound add dec fiadd adc push xor sbb jmp out or mov xchg mov xor dec and sbb out scas cmc outsl sbb fisttp test mov dec or inc cmpsl dec jl jb dec (bad) mov add jge imul insl push mov push mov in sub and add or mov rcll xchg ljmp push int cmp xor jns imul shll jae dec xor lea lods inc jno xor scas icebp add xor dec (bad) sti icebp pushf dec cmpsb sbb inc cs xchg sbb dec add or hlt lahf inc xor inc push inc dec les pop dec pop sub cwtl sbb out mov xchg out adc mov fmul or lock xor add or dec in scas adc cmpsb inc push out ficoml jmp cmpsl lea cltd dec ljmp push movsb xchg jmp les jno xor dec loopne sbb pop or jns xor cmp xchg fstpt ljmp les lret sub cmp xor mov dec xchg xchg adc mov lret lahf sbb mov pusha xor movsb outsl jb imul lahf mov push pop adc jecxz ss sbb add cld pop test dec mov inc pop rorl jge sar mov add cmp xchg cltd pusha repnz popa mov push xor popf inc mov insb (bad) repnz sub inc jecxz in cmp pop rorb test mov fincstp repz sub dec xchg ljmp testl shrb jne pusha jmp and add hlt cmpsb outsl cmp clc mov cmp (bad) in and and inc xlat and std hlt out mov data16 fldl sbb mov loopne lret sub push dec mov pusha fistl pop (bad) into pop mov cmpsb je fcomps in test mov ljmp mov adc jne subl ror and mov aad sarb dec fcoms or push cmp rorl xor sarl jbe mov stc call mov movsl scas pop push test flds pop lock xlat int3 add out xor cwtl stos sarl cmp mov lods ljmp loopne icebp icebp jle mov and (bad) and mov rol mov iret mov aam in jecxz jecxz push sbb cmp lds jns jne fldenv xchg xor mov mov imulb int in sahf stc mov out daa fcomp cmp mov imul push pop inc and push and mov adc sub scas pop pop sbb jbe push lret sub xchg jl xchg (bad) pop cmp mov addr16 jge add fsubrl outsb sub xor lods push jmp shlb aas sbb int3 pop pop xor fcmovu jae scas jecxz std js in scas cmp hlt inc out flds stos mov sbb jmp mov icebp enter lods xchg cmp xor jl xor jbe test jecxz xor cmp inc inc call (bad) mov cbtw lret out (bad) into fucomi in pop pop cmpsl pop push push mov outsb js sbb icebp xchg int3 out dec xor clc or and call movsb adc jno clc xor push fdivr jp xor dec in or cmpsb pusha mov js jnp sbb pop daa std fild pop pop rorl fnstsw sub adc xor or dec out pop ds iret push add dec test fwait das mov xchg popa cld lahf mov jno sub mov pop icebp jge pop mov jb dec (bad) frstor jge dec imul mov jbe xchg lock cwtl popf rorl int rolb lods fcoms and jo lret dec orl fisubl mov jp hlt pop ss adc cld jbe pop inc cmp js push mov sub and adc loopne pop arpl in test fisub inc mov or xchg enter ret and mov pop dec sti pop rcrl and jno rolb xchg ja jne mov or int inc dec out lahf and negb aas out les imul pop push pop int scas call mov xorb mov scas orb dec jns sbb (bad) lcall dec fstpl push iret jge mov push les inc dec mov push jg inc out adc inc sbb add push jne in fsub add cmp mov push psadbw jecxz divl int3 call pop test into int3 movsb xor ficoml cld mov inc fstpl cli lahf in add jnp cmp pop fistp pop out xchg lods xchg fdivs popa stc mov xchg clc data16 cmp cmp sbb pop mov mov or js outsl or mov pushf int3 js push lret int3 pop test (bad) cmp cmp (bad) push in testl cwtl cmp ja daa pop fistpll outsl call xor mov loop inc ss cmp sbb ret adc pop pop xorl mov into outsl push fidiv inc and push cmp pusha or dec test jmp mov test insl dec sbb lahf push inc push dec loopne mov leave lahf in pop ret fildl insb scas push ja cs cmp outsl dec jb push sub mov aaa lods aaa sbb (bad) mov repnz aas lcall ljmp inc fistpl (bad) adc pushw sub insl mov test or pusha adc ficomp jge pop mov jl incb dec mov mov cltd (bad) inc jb push inc arpl bound cli jecxz push inc adc popa or mov stos jb sarl mov sbb pop sub sarl sub lods aaa add jb scas cmp pop jle vmwrite loop mov fdivs xchg leave sbb pusha bound cmp cmpsl and fidivl mov clc inc jmp or xor jp cs jle push insl mov dec hlt (bad) lea push arpl push mov adc xchg mov das add cmp mov jge cmpsl add gs mov mov loop shlb test sub pop (bad) js sbb lea mov jecxz push loope jmp into lods dec cmpsl jbe inc add xchg mov fmuls cmpl loop add xchg mov mov out inc aam and xorb add push pop xor nop div jl mov outsl xchg push jns (bad) outsl pusha jge mov cmp icebp or inc or inc mov js sub int3 jmp adc aam sbb sub out mov pop push test je dec sahf (bad) lock mov sub mull sbb shlb mov mov dec mov mov push in nop jae dec xor and jno aam xchg cmp scas inc scas in nop clc inc xchg movsl dec and xchg dec and pop shrl (bad) push cltd xchg mov xor push dec add test ret ss push jb pusha rolb jge in xchg jo ret ret repz sti and mov arpl xor pop jae repnz ret pop xchg scas ja cs (bad) sub aam adc out in xchg sub and cli adc repnz push loopne mov mov loopne daa xchg mov jnp outsb clts pop (bad) cmpsb mov sbb or push out inc mov mov in iret ja in loopne jle je add into es (bad) push push push insb les adc dec inc sbb push xchg sub cwtl push loop clc out test or xlat fstl (bad) jne dec adc cmp dec ljmp push adcl jo fldl pop sbb gs ret dec (bad) aas and test or xchg inc pushf inc xchg inc (bad) adc int3 subl roll insl mov adc mov push lcall jae jnp jae insl xchg into enter (bad) icebp scas fistpll cmpsl add lret faddl bound fwait sub jg stos aaa bnd or in arpl cs lds push mov fimull mov inc push mov xor sti and test mov jp scas push repnz pop push cmp cs jne xchg pushf aaa dec insb mov and lods pop addl neg clc cmp sbb mov dec xor xchg fnstenv je mov add mov inc xchg push sub xor push nop inc divl aad andl lahf rorb (bad) jmp and repz adc test push mov mov cmp and btr test mov push sub mov jo dec sar es fisubr mov cmp mov adc add pop mov adc mov mov mov (bad) call inc xchg fdivrl dec pop das xor jecxz pop xchg in in (bad) fcmovnbe lcall hlt xor movsl cld in imul add jl andb (bad) loopne lret sti lret and jp insb pop xor or scas pop cmpsl dec push xchg lahf hlt scas popl icebp stos scas push rcrb movsl enter mov sbb jmp jbe iret sar adc sub push cld cmp repnz or xchg adc fsubl cmp fcomip adc data16 arpl out lret pop pop add mov xchg aam popf sbb jnp,pn lcall ljmp sub insl movsl xor sbb mov mov pop add mov js rcll je mov fisub out in (bad) mov jno daa inc and negb icebp leave pop fstl loopne iret in xchg cs pop (bad) rcrb imull (bad) sbb inc (bad) clc and mov sahf adc mov pop bound test dec fwait ret inc pop adc call in and rcll pusha add cmc movsl dec incl enter or (bad) les mov mul or mov jnp adcl outsl xor nop xchg sbb dec subl outsl loope rcrb stos inc and and sub push adc cmp lret enter cmp jmp fldcw inc dec inc dec cs xor inc sbb and pop das shrb imul scas lods sbbb cwtl popf xor iret xor loopne (bad) cmp (bad) stc clc mov inc (bad) aad sti xor decl fsubr (bad) fwait vcvttsd2si sar mov mov out mov int3 jp or into cmc inc roll cwtl outsl lods test into push jge add sbb mov sti dec out jge cs mov cltd or cld pop imul imul cmc push mov cli in jle fcomi cltd sub jl add dec sub test cmp jg test outsl mov mov scas sbb add movsb pshufw xor lahf inc rol jmp xchg aas stos sub popf inc inc mov out scas inc or mov movsl jl xchg xorb adc scas insl push es jbe mov dec out sbb jnp jae xlat out sbb xor in (bad) adc call fldt mov dec jmp movsl dec fstp pop or std xchg mov mov add (bad) jae icebp or adc imul ret enter fnsave cmpsl push pushf pushf insb mov pop push incl mov mov ljmp adc pop inc test ljmp dec insl add xchg jae jo aas sahf jae push mov jns jg ss out or gs sub mov jmp jno xor add mov dec jnp mov fwait js loop mov add xchg xor es or push and js push das push xchg or xor adc xchg jmp adc das mov loop xlat popf shl hlt push jb mov fcompl (bad) mov adc pop mov nop ljmp outsl daa dec adc daa cmp aam push sbb enter push cmp out xor test or (bad) fisttpl fimul mov adc dec out sti jge jbe int mov insl movsl hlt insb pop add int3 pop adc rcrl scas in (bad) jmp xchg sbb daa bound pop aam in fisttpl adc cmpsb js clc push dec xchg outsl inc mov jno std mov fldt add push cmp pop getsec mov pop scas test inc mov mov inc adc lea push pop test lcall repnz cs jl scas mov in (bad) mov jge scas adc mov mov adc stos jne ja sbb and jb stos scas (bad) xchg jo movsb or adcl shlb add dec iret neg push inc mov cli stos push mov jo loope aaa push (bad) mov xchg jo (bad) fs into push mov nop dec xor adc leave xlat ss fcmovbe fimul xchg inc shrl sbb jmp rclb sarb popa adc aas in mov and xlat pop cmp dec sub and add imulb add cltd pop jae fimul jmp mov mov iret lock jnp enter fstps sbb xchg jp push stos sub xor dec add sub jb addl pop loopne add xor mov jbe cmc push pop inc mov out sub pop pusha dec xor ss addr16 push or jne repnz sbb mov push fs out sub mov dec in pop cmp xchg xchg mov xchg or loop xchg scas ja (bad) in cmc mov sub test xchg nop pop cli jg xchg mov add movsl xor xor or outsb mov movsb shl jle sub adc xchg add ds lods jl add push (bad) mov jo pop mov cli fisttpl imul adc jmp dec cmp or inc sub ds and inc cmp sbb push test and addr16 cmp dec js xchg sbbb mov cmpsb xor outsb pop cmp scas xchg cmpsl popf sahf xor sub std inc pushf stos mov push in and adc mov pusha (bad) push inc pop ficompl leave fs jge enter je mov mov push aam add sbb adc dec inc add in cs ds out jb aad jb (bad) in lods push pop nop adc out add insl xor aam push leave rol jl stos cltd lret cmp nop mov ret jecxz in push (bad) pop mov sbb xor mov (bad) pop (bad) jl rcl test xchg xor jle fwait outsb sbb mov or and hlt lea aad outsl pop mov push pop xchg lret fiaddl xchg out mov addr16 pusha xor pop pop mov andl dec icebp push and jecxz inc mov sbbb push jne cmp iret jb xchg insb xor sbb out sahf sub mov mov (bad) bnd sub leave cmc insb loopne xchg call inc dec fwait jbe dec ljmp fs sub lea or push insl cs jp sub xor dec in jno movsb xchg and (bad) push sbb mov push daa cs stos or dec xchg test das pushf jecxz scas xchg xor push push mov inc and rcrl clc adc int call ret xchg shrl stos test (bad) (bad) aam mov rorb xchg jl push xor mov xchg out jnp int3 xchg arpl mov insb rcll jnp mov test pop adc ret add call inc hlt fs iret add imul out (bad) dec call jl lods cs xor (bad) pop cmp jge jl push inc pop ljmp mov mov nop rcrl mov or xchg xor outsl sbb mov jae scas and out fisubr mov je lcall mov jb (bad) cwtl lcall mov adc (bad) imul cmp inc dec lods stc push or xchg xchg cmp shl ds push xchg and add arpl xchg aad sarl lret fnop ds add das adc out mov xchg push jb jl pushw cs xor ror mov mov push adc negb inc or or fwait popf add movsb mov and adc das lea cmp hlt out dec loop pop (bad) in sti movsb jae (bad) add testl mov pop lcall out mov sub sub fisttpl pop jae jp cmc dec xchg xor inc or xchg dec icebp jbe mov ss xchg pop sub and mov pop dec stc andl fdivs insl test sbb test xor sbb dec imul adc mov popf das insb push je push (bad) pop icebp jae mov jno cmp adc jmp mov (bad) or jp imul cbtw pop int3 loop and or xchg mov inc inc inc mov into xlat jmp popf and xchg pop roll mov push adc in sub and push psrlq into add lods cmpsb not xchg lret push ljmp lea jb cs orl stos pop push add ficompl out dec scas xor cmp cwtl adc (bad) cmp (bad) xchg push pop cmpsb xchg cmp or add std push (bad) mov mov das ljmp out mov scas mov iret aaa in push fmull fwait pop ljmp (bad) push scas jmp sti add fidivr flds (bad) sbb lahf jecxz sbb rclb pop int3 aas pusha int3 jp cmc cli jb jmp mov in int out bound in jb insb mov iret arpl jg scas mov dec mov mov insl cwtl fs movsb mov adc shrl mov call jmp or into dec sub cli arpl lds inc xchg (bad) sub push dec divl or movsl rcrb fdivrs mov cwtl repz inc mov dec xchg sub iret lods and jb jp add call (bad) repnz mov rclb push ds sti pop daa xlat aaa fdivl adc test insl into insl pop sub mov sbb add jmp sub fcoms jbe je (bad) mov jmp mov imull jmp cld adc insl xchg repnz dec push sti in arpl pop dec cltd cmp jmp shr (bad) mov dec idivb test add nop test pusha mov popl dec adc imul das xchg cwtl out arpl cmp outsl cld and and out lret jo in cwtl pop mov mov jne xchg in pop xlat test adc xchg roll inc in inc fdivrs leave push mov js pushf xchg mov xchg aad ja mov fdivr sbb sub lea inc ja mov shlb push fs fcomps jl jg cmpsb pop sub pop insb insl mov mov sub mov cmpb (bad) cmpsb leave test in pop and dec movsb sub mov push stc sti or mov cwtl shlb (bad) int3 clc and adc hlt lret paddusw mov leave cmpsb je aaa cmp pusha pop lret dec mov jle mov mov adc loop and mov test pusha dec push loop push pop push mov sti insl clc test mov fdivs jmp jp xor cmpsb mov add sub xor test cmc pop sbb sbb mov xchg (bad) mov add fbld xlat xchg negb cld std add js jle mov dec aas ret jne cmp and mov into subb jl popa dec aad aaa cmpsb sbb sar dec lret add xchg in std add xchg (bad) mov xchg mov xchg bound cltd inc mov stos in xchg rcrb push xor neg xor jb in lahf scas xchg mov into out (bad) aam sti outsl and xor jl lock mov (bad) and add shr pop push push inc xchg arpl pop clc adc imul aam cli push cltd in in sub scas cmp jo lahf (bad) in push push mov (bad) gs mov cmp jl (bad) mov inc insb lret fist xlat xor stos clc push popa jmp push and lds fwait add cmpsb jmp lcall out mov mov das xor ror xor loope mov repz jg dec jno mov push jae loop scas pop clc rclb push lahf cmp push dec pop add ret mov and call inc scas dec gs mov dec nop inc jg popf mov inc test les movsl mov inc leave scas add or das pop inc orb xlat dec jmp lds xor xor dec or jns enter aad lcall clc out mov in insb xor rorl cmp lcall ficom mov loope nop sahf xchg test daa inc (bad) data16 add fistpl ret push cmp xchg rorl pop xor addr16 pop pop cmpb mov mov adc repnz inc js inc inc jbe notb mov sarl pop mov (bad) mov mov push sub aas mov stc pop insl xlat cmpsb mov in mov push out pop add sbb outsb lret (bad) in (bad) enter push lea (bad) dec mov enter ret xor jp and jp dec push (bad) mov xchg or push sbb jecxz enter push out xor aaa pushf pop push adc jle ss adc cmp hlt ljmp popf (bad) push jno pushl cs mov roll mov pop pusha fldt xchg inc push sbb jge xor adc test bswap mov mov push mov stos add loope push div daa xlat sub int out and push cmp and inc and mov sub jmp or cmp sbb sbb cli xchg cld aas (bad) out les outsb pop sub pop sbb call ja fcoms sbb cmc bound pop dec int3 fwait lcall fdivrs or shr divl pop push jmp mov enter jns loopne (bad) dec lock leave xchg in xchg jg mov rcl xchg pop adc (bad) and inc negl jo add imul aas test mull add jmp inc je sbb mov push in ljmp mov cmp inc sbb test dec inc jno test iret mov mov popa jp mov ret xchg and imul adc sbb daa push andl pop (bad) xor imul adc jp ja lds movsb repnz (bad) xor mov inc jmp fisubl test (bad) adc cmpsl nop scas jb sub jle mov xchg or nop xchg insb push popf fiadd and ja out (bad) sti shrb (bad) or cmpsl and pusha adc and add xchg push push hlt sub mov mov mov ret ljmp xchg leave mov popa sbbb lahf js or stos pop sub lret fldenv xchg das outsl jae pop daa popf mov gs addr16 jno outsl sbb mov dec pop or sub cltd (bad) das inc insb mov daa popa (bad) jl loope enter pop roll dec xchg push dec pusha std and rcll xchg xor nop repz xchg shrb (bad) les dec aas stos jbe out lods add out push aad dec and lds stos mov jbe fist sahf sub mov jl add sub push lods imul push (bad) das ljmp ret cmp xor adc shrb fbld jle pop in cs push mov ljmp stc test cmp (bad) loopne mov xchg cli and dec push loopne pop adc fdiv adc jne xchg xor movsl int3 sbb or hlt xchg cmp test adc jns nop push mov loop lcall es das pop icebp cmp insb gs xlat cmpsl sti pop jne mov mov insb fbld inc out mov pop adc cmp dec pop aam loope jne push clc pop sbb jp icebp cltd mov aaa in call pop push icebp mov pushf fwait add sbb fcompl lds cmp and sub mov aas dec push leave dec cwtl xorb xchg and out mov in push fdivrl jnp inc fbstp xor repz sbb mov mov push and cld sub andb lcall in and cmp xchg (bad) insl out fnstsw mov mov rol out fistl push scas or jne jge mov mov in and or mov mov lahf shrb jno sub jecxz xchg cmp mov jl out adc or cltd cmpsb addl lods mov inc roll xorl cmp or aad movb pop push xor stos outsl add push xchg leave xor call sti mov xor sbb inc or xor adc mov adc loopne cmpsl test imul push scas cmp push jmp fsubs call inc enter dec hlt jbe xor adc das xor mov jae call or push mov push or push cltd movsb cmp xchg jge into cmpsl push mov stc int lds mov or push mov xor icebp test fdivrl lock inc mov push pop and jbe jmp dec push repz push inc popf xchg es sub outsl xor sbb pop mov (bad) mov pushf push pop (bad) mov push loop adc sbb jp lcall imul cwtl or mov shll mov cmpsb lret inc out stos pushf (bad) push xor fcomp insl lret les int dec adc adc cmc adc add lods mov mov out push mov xor mov outsl push (bad) (bad) xchg pop push rcr fs jmp mov lds push fsubs callw jne mov xchg xchg std cmp xlat or repnz stc in add and add add test dec and es jmp aas aad fsts in push dec or pusha inc mov orl sbb jecxz add xchg mov mov stos push imul bound movsl ret aaa xchg fwait mull (bad) loop sarl stos loop sub shrb ljmp adc and push ljmp mov fisttp in sub or adc push movsb lcall in and sbb les insb sbb cltd out mov sahf inc incl divl xor mov add std sahf shll or out jle mov (bad) dec icebp cs pop xchg jge pop bound mov mov arpl imul mov lea iret xor xor add and or stos cmpsl aas xor ljmp stos movsl mov and loope adc addl sbb loop (bad) out mov cwtl and inc add dec lret loop sti sbb pop inc xchg nop inc pushf push sbb mov or pop outsb mov sbb inc sbb pop fcmove imul jo mov scas call pop or bound int lods mov ss pop jno mov movsb inc aad mov inc add icebp jb pop pop mov sar daa data16 cmp or (bad) or adc and mov mov cli add aaa push std and mov push ss push xchg cmpsb dec mov loope notb insl pop sbb mov rol inc lcall rcll out push adc fwait aas daa fmuls fstpl or stos insl push inc mov insb mov jecxz sbb ret pushf popf push in jge xchg outsl movsl push mov icebp ret insb mov loopne insl mov movsl dec cltd cmp ljmp cmp add cli pop push or cmp mov pop sarb loope rep dec cmpsb rcrb icebp loopne cmpsb out popl cmpsb xor pop pop sub test out lods imul inc jecxz mov pop pop mov cmpsb pushf lods dec pop and jecxz mov jmp pop scas push int3 movl lcall loope stc mov adc cmp sti fild sub (bad) sbb dec arpl in add cmpb cmp loope pop (bad) (bad) jge lock add jb push outsl mov push (bad) pop and daa and xor addr16 adc add add jl jno pop jno out mov jne mov mov addr16 in jp inc xchg imul ret das sub mov ja xor inc mov sbb sbb or fnop (bad) icebp mov in jle into pop xor pusha push add mov shrl pop mov push add xlat fsub mov dec push stos inc daa push jl (bad) mov (bad) pop xor hlt fadd test ficompl cmpsb xor aaa or dec enter (bad) test loop sbb sarb jle bound out dec insl ss arpl daa fistpl into push mov xchg mov push adc leave (bad) in xlat test bsf mov or ss test and xchg dec popa fiadd movsb in mov and xchg in sti mov ret test xchg shrb rorl jge jmp mov mov sbb xor pop xor fsubrs cmc aad pop dec aaa jo std dec fisubl in xchg sbb inc std xor and and xorl mov and mov sbb sarl stc sub shlb insl (bad) in les inc mov xchg push cwtl fmul xor (bad) push inc jle rolb repz mov mov ja sub jle fbstp (bad) cli xchg sub (bad) (bad) in stc pmaddwd mov pop inc mov aaa repnz shr sbb add test cmp data16 mov loopne xchg mov xlat fs xorb sub mov jbe jecxz cmp nop or jo (bad) pop fstl lods xchg dec repnz push mov xchg mov add inc out cmp out (bad) pop push pop pop subb movsb mov xchg inc pop or push addr16 push aaa mov ja les xchg fdivrs inc push adc lods lock lods lds stos xor mov mov push loop dec and sub stos test dec stc sbb js imul or aad inc lods push fcmovnb scas push int mov jbe cmpsl stos xor rolb jne imul sub daa ror xor push adc xor (bad) adc sub mov test shr xor sbb fdivrl lahf test cmp aad cmp push adc dec push mov push push push jo adc iret aaa add mov (bad) ja pfsub aaa inc gs cmp (bad) into jmp xlat mov test fidiv jne push dec pop or out mov test aad out add call xchg (bad) cmp push fdivrl jg dec pop push out (bad) xchg jbe inc nop mov les adc jecxz xchg or xor jae out xorl (bad) clc scas arpl pop cmpsl imul test pop pop xchg xor push popa or and push stos mov aaa dec sbb idivb sub xchg stc or pop dec sahf jmp xchg dec inc jnp enter scas shrb inc xor adc sub xchg sti (bad) outsb mov sbb or sarb inc mov shr fmull mov addr16 push mov or daa cli (bad) sub scas out inc movsl adc int loop stos mov add je ret imul fildl mov insl mov pop mov mov leave insb int xchg movsl das test adc scas mov pop push pushf stc sbb imul roll and jecxz push inc loope dec ja adc fs dec sub push inc cmpsl xor pop add mov mov loope (bad) sbb daa push lds int3 jne lret test (bad) lock in (bad) sub xor (bad) inc (bad) stos adc inc ja mov stos and pop jg (bad) test adc clc and hlt xor cmp xchg mov es and mov (bad) lcall xstore-rng cmpsl cmpl or sub enter xchg iret ss loop mov xor xchg cmp mov xchg cmc and push subl in rorb mov cmovg mov xchg fdivrl pop pop cmc roll mov lods mov test xchg pop xchg sub add mov lods push rolb sub and mov mov lea aad testb push ja add icebp adc insb push out ds incl ss loop mov enter cmp jae,pt (bad) je xor push inc fcmovnbe mov pushf push into push dec stos dec jge add les xor hlt aas js movsb rol jge loopne rcrb test push clc les ret adc pop aam out pop mov add subb test mov (bad) scas mov (bad) dec out hlt repnz (bad) in arpl stc insl push addr16 jmp pop adc mov adc loope pop out fsub in and out push inc aas aas fistpll push xor push loop outsb cld gs jbe into mov dec orl nop pop cmp ficompl movsb mov (bad) dec stos (bad) adc dec jo xchg in repz into dec jle mov mov mov pop jge push pop cmovo lea inc push test outsl dec movsl add pushf nop ret call in add pushf mov cmc stc xchg or or and or mov add (bad) (bad) xor sbb jo and (bad) dec scas lods (bad) mov fwait or ds je hlt dec fnsave ljmp mov cmp int lea xor sahf dec ror mov mov popf iret test fdivrl arpl dec jmp out mov lods jmp sbb into pop enter cmp inc xor mov scas imul cmpl push daa fldenv std ja loop jb popa out imul push inc pop out mov (bad) out (bad) and imul testl cmpb fnsave sub add outsb cmpsb inc inc dec decl aad and bound insb rep dec adc (bad) ljmp xchg aad jmp pop mov aad lods jp mov shrl test mov jge (bad) and cmp fdivrl movsl (bad) jo xor dec push std mov dec xchg mov xor mov mov fistpl or loopne mov inc jmp out cli dec into jno iret xor incb pop inc xorb mov jo jg sbb add jg mov or adc xchg sarl bound mov cmp (bad) jb push pop jmp mov push pop jecxz cmp jnp test push (bad) insl sub mov add mov xchg stc jp inc int3 ss xor xchg jne add out jl pop nop sub mov add xchg dec sbb in pop in jae sysenter mov push sti shll movsl jno dec cmpsl mov jp push cld movsl sub dec inc sahf mov cs cltd test imulb loope inc sub xor adc pushf cs dec dec jecxz rorb in jbe push repnz lcall cli pusha jae mov loope mov test (bad) mov push mov xor imul sub cmpsb jp stc scas cwtl shlb enter jne lea push test pop test cwtl push lds xchg data16 (bad) dec aam adc js sub and in mov xchg arpl push push cwtl xchg mov push cmp push inc dec jle fdivl leave fisub aam cwtl cwtl or push jle inc pop adc (bad) jp jge and (bad) xchg or cmp (bad) repnz cwtl jle mov inc insb xor xchg mov roll sbb ja inc xchg ds mov xchg jle mov addr16 fdivr insl jnp lods icebp cmpsl popf push push js movsb add mov jne or lahf rorb mov fnsave push push jmp jmp (bad) cmp pop sub cmc idivl mov lahf mov and hlt int xchg (bad) jb add lea sbb data16 std push test int pop clc mov scas cmp push and test into add jge and pop int xchg pop inc dec or std push sub lcall jo push out fldl or jns push cltd cltd mov gs pop add loop out faddl rcll or in and je repnz mov or mov inc dec lea lea stos cmp movsb rcl push adc cmpsb or mov fsts sub iret xchg add loopne mov imul inc mov xchg in popf stos cmp (bad) jne in loop loop outsb (bad) and jecxz pushf and cmc inc pop (bad) hlt mov jns in out leave iret mov movsb sub xor cs or dec repnz push jbe xchg cmp ret aaa daa ret cs outsl rsqrtps dec in icebp lret xor mov out cmc bound call mov popa loop icebp sbb jb es jae sub jl add lods adc (bad) dec mov cs call xchg outsb push mov in and fbstp xor lret fisubl in lcall inc or xchg mov jmp jl xchg push mov rolb add jo lods jb xor xchg or mov repz xor fidivl fisttpll pusha xor jno scas push pop (bad) mulb outsb push (bad) fwait lds xchg repnz out icebp xor jmp xchg dec test lcall aam xor das jl dec sub cmp push popf test inc fisubr out in xor cmc cmc cltd xchg add mul add pop adc add lock adc adc jns hlt jns popf cmpsl adc into fsubrp in mov adc pop dec nop mov xor (bad) pop mov xchg cmp or xchg hlt clc push popf mov out popa sahf cmp fcoms hlt (bad) scas lock outsl movsl nop (bad) mov or xchg jl cmp rorb xor sub sarb jnp lcall sti inc fwait test mov lret sti pop adc fs mov xchg sarb jg jbe add adc cmp add jp cmp mov repz fstpt testb int aam mov rorl in jle or repnz add jp add mov xchg jp (bad) in pop aad sbb jno push sahf push adcl cmp xchg (bad) in push sub outsb mov jmp andl subb data16 lret pop mov xor mov lds lods sub mov enter ffree in sbb (bad) jle jnp cwtl int3 jl jnp mov sub in movsl xchg mov cmpsl jp aaa loop lods mov sub push jno das sahf jg fcoms addr16 cmp daa mov inc mov out add cmp movsb hlt push jb stos push cmp fdivrl in cmp das scas sahf ret cmp add cld mov add jb icebp inc xchg mov push or pop and je and rolb ss lahf inc cwtl mov cmp push gs in sti push and je sub mov and subl sbb test mov fcmovne imul pop xchg pop cmc dec adc les pusha lret pop push test lods or out (bad) pop add mov adc mov lret xchg jo jmp dec out push xchg add lret in add pusha xchg ret push ss (bad) (bad) faddl mov mov xchg call fs pop popf xchg inc xchg std ds leave jp ss out push adc push jp lcall ret rclb sbb mov icebp out fisubrl in lret test cmc scas cmp or aam jbe shrb dec rcrb jae jns jno push adc ss mov add jb insl (bad) repnz jle in push adc loope lods in (bad) xchg das popa add (bad) push mov dec imul dec ror stos dec loope mov out in notb or movsl jns jmp cld jae sub jp lods and push add sbb outsl push cmp cmpsb mov mov xor xor adc push mov hlt mov icebp mov mov or or leave les sbb lock push sbb xlat mov cmp dec enter mov ljmp dec jecxz shll mov push popf cwtl jne stos test clc aas mov add pusha data16 cmp pop lock (bad) adc clc push adc and xchg leave fcoml test push xchg and loopne xchg (bad) xchg pop adc sti lahf lds dec push loopne push add inc ret push jae ret pop subl sub push dec push sub hlt dec jmp cmc (bad) and mov stc dec es or loopne and mov daa out dec inc imul insl jbe add mov lds mov loop cmp pop mov pop xchg cld add adc cmp dec gs (bad) int3 cmpsb mov fldz ja sub mov (bad) leave cwtl jae pop and popl in mov dec fistp adcl out loop out pop movsb push mov roll mov bound pusha push xchg jns test pusha clc outsb fnsave inc xchg stos mov sbb jo test shrl lods mov cmpsb je xor add (bad) lret fcmovne dec (bad) test fidivrl mov dec jnp xchg jecxz inc movb cmp jmp cmpl or push stc xchg daa pop rcll (bad) ficoml in shrb fwait jb adc xor or and cmp pop rolb sbb mov lret jne adc pop inc scas mov sub icebp pop pop lods xchg xor pop xor jmp addr16 std icebp test call xor gs add in call rcl iret jno jg sbb lret dec jmp jg bnd sbb push push push lods dec enter push (bad) jnp in or ss lcall mov mov dec fmuls mov cltd in orb ret ja out xlat (bad) push sbb push (bad) dec xchg hlt sub inc (bad) lcall and lahf and stc ret dec jmp dec mov enter cmp add dec fldl sbb inc sahf dec mov or leave inc inc test divl (bad) push fsubrl sub (bad) rol out adc mov sbb nop frstor mov fild (bad) or dec mov (bad) popf cmc pop lds in fstl fcoms mov xor pop popf in stos rcr xchg xchg loop add cbtw popa clc xor jmp inc rolb mov jge sbb loopne fldt (bad) push jo hlt mov (bad) mov mov daa addr16 int xor jge inc lods movsl test mul mov nop inc sbb push subl pusha aaa lret cmp dec pushl jno inc jb dec aam lahf addr16 push fisttpll add popf push cmp sahf push shrl mov aam in loope xchg (bad) lods lock add dec sub daa add lds imul xchg fnclex jno pop sti cmp jo pop sarb popa cwtl and shufps pop loope lods xchg add shll ficom push mov loop xchg inc sbb int push aam sub xchg inc mov arpl sarl movsl cli add push js fwait loop aaa clc mov inc std and inc xor aad xchg cltd adc (bad) aam sub xchg in lds lcall out lret push (bad) xor scas imul jne les or movsl aaa bound xchg test mov shl dec imul lcall adc jle enter testb imul mov and push lcall mov add loope fsubs inc sub adc sbb test sub sbb loopne cwtl pushf add popa mov movsl ret fbstp push sti dec stos int3 stos gs cmpb push shr arpl out or or push jnp jnp iret jae sti mov sbb mov mov dec fldenv mov ret scas dec out movsl xchg (bad) icebp stc jb mov mov aaa cmpsb sahf lock sbb inc jno fwait pop xor test jmp sbb and fxch xchg dec and or in jecxz add dec aam sub push add mov lahf jl add jmp inc fisubl jmp mov sbb pop cmc repz inc mov das mov test pop and xchg punpckhwd sarb mov ja in xchg add push pop xor aam mov inc sub adc jmp mov inc jp rcll push or sub push das mov ja fwait jae test movsb ret cmp je in xor jge fsin mov adc adc mov insl decl int mov mov lods (bad) sbb fwait push mov (bad) xchg inc (bad) loope pusha push inc std jbe (bad) (bad) mov scas cmovg (bad) cli ucomiss add push sti clc in cmp sub push pusha push dec leave pushf add dec les fistl aaa stos xchg test mov pop (bad) inc xchg out dec and stc jmp scas mov mov sub jo or neg lret fsubrl mov pop pushf cmp inc cmp cmp aas popf stc jge mov loope dec (bad) and pop sbb cmp orl hlt ds pop (bad) scas inc or les mov xor out push push addr16 pop data16 (bad) fcomps lods cmpsl pop sahf jne ficom xor popf cmp icebp ret jae rcr jb xor out mov out pop inc jecxz sub push pop das push cli mov out or sahf popf idivl ret jnp ss push mov pop jmp and jmp out sti sti sbb push rclb inc or and mov lret call mov jmp shrl dec mov add nop lcall es sbb mov iret adc sbb cmp adc cmp pop dec fwait mov andb jecxz scas addr16 xlat pusha dec add sub dec cmpsl (bad) loop xorl daa inc xchg rol dec in movsl lea aad mov fxtract mov cld cmpsl push les aas cwtl xor xchg stos mov cmpsl pop dec icebp cs dec pop pusha push mov mov lret (bad) sub and je add push add push mov adc shrb stos pop dec test pop (bad) (bad) jle and xchg mov (bad) sbb lods adc rcrb bound arpl fldl push sub push and fwait in push xor pop imul mov sbb (bad) lods ss pop and int lret lods xrelease clc xchg sbb aas in clc pop dec sub loop xchg rcr push sbb clc adc mov repz inc jg xor fiaddl ds jmp xor popf cmp adc cmp jo push sbb out mov mov push aad iret sub mov (bad) data16 xchg mov scas cli shl (bad) icebp cld out repnz push test mov daa jb popf rep push and (bad) mov xchg dec push ja pop pushf in aad imul or dec mov and mov and xlat imul sbb jbe int3 movsb pop ds in ss (bad) mov add sbb sub int3 jns jge xor mov call lods sahf int mov outsl (bad) jge xlat push popf cmc adc movsb mov inc ljmp xchg mov movsl mov sub push jo xorl outsl in adc lret dec mov dec mov sbb int jno cmpsl sbb xchg mov sbb jmp roll xchg xor int mov (bad) adc dec and xchg or pop pop and (bad) movsb mov movsb cmp (bad) call sub xor cmp pop add rolb push mov sbb jl sbb inc mov fistl dec xchg pushf or pusha pop divl sub call orb mov and out cmp dec enter jl jl pop ljmp popa inc cmp mov lods cmp cmp pop pop add pop jne cmp movb mov adc cmc (bad) repnz insb lahf call lods inc outsb adc inc scas leave adc pusha js hlt mov imul push mov (bad) idivl sbb leave js stos mov mov add call cmp movsb adc ljmp xchg nop dec repnz scas mov push leave xchg lds enter dec mov and xchg cmpsb push mov lods and andl push outsl pop inc mov mov int lret cmp xor call jb data16 popf mov xor dec stos lcall adc jae imul cmp or or jno lcall xlat cli cmp into nop sbb push stos mov mov jo (bad) ljmp mov xor xchg loop ret pop popf mov (bad) mov adc (bad) aam ljmp jns jecxz ficomp pushf and or or mov mov dec mov jmp xchg ss xchg mov ds mov jae test sub fsubl fist mov pop gs ret (bad) xchg push fnsave (bad) lock das mov push test mov sub mov dec sbb xchg loop cmpsl stos jmp fsts addb fdivrp xor jecxz,pn or mov pop inc dec jmp (bad) nop data16 rorl cwtl daa (bad) mov fs out pop pushf xor adc push movsb and (bad) inc mov add js xor jbe icebp (bad) jae repz mov sub fcomi push loop notl gs pop inc or inc push mov daa pop mov cmp fldl movb push pop pop fstpl mov xchg xchg and aaa ret pop divb add push push push cs or fstps dec jle mov push mov cmp arpl (bad) jle adc mov xlat add decl cmp cmp insl inc inc mov jnp xchg xor xchg push dec xchg mov fsubp fisub out sahf clc push push cmp pop rcll jne in lea push into xor jne mov fcomps ja adc out ficoml sti sbb mov xlat inc shrl faddp mov sbb aaa ljmp loope std jecxz xor (bad) in (bad) xchg (bad) jl enter inc ljmp addr16 push popf ds sbb sbb pop insl jbe inc add sub out (bad) jne xchg aad or dec jecxz stos repz outsb cmpsl cli push jecxz pusha xchg cltd shr sti rcr push fdivs loop popf out fldcw (bad) mov and call mov cltd scas outsl sti xlat push or clc sub icebp jmp adc fbstp fdivrs adc inc adc sbb (bad) push lret or dec inc sahf imul inc ret push lcall outsb out pop mov rcrb sub faddp das and xor adc scas sbb mov lock cmpsl sbb push jp jmp bound mov and cltd mov outsb (bad) sti mov xchg pop out mov xchg mov ljmp dec inc fwait repnz fisttp shr arpl clc mov jno ljmp (bad) shll data16 (bad) cmp lret xor int mov jge sub inc jnp insl mov into popf cmp cmp stos push cwtl fnsave xchg mov cmp inc stos jnp pop mov into das in jo cld js mov mov dec cmpsl adc call out mov sbb adc push out jae dec mov jg rcr repnz in dec push jl pushf std bound mov mov aam pop pop push push mov in sub push arpl movsb (bad) lods test add pop adc sbb mov mov pop pop rcll insb xor inc addr16 js outsl popa rorb sub jl (bad) aaa inc sub push imul jnp lret enter rolb xchg inc inc lcall adc xlat aas outsl stos fist dec jg and pop pop inc mov xor aam jo cmp mov or dec adc pushl push push call cltd or call adc int jecxz fisubrl out cmp stos cmp cmc inc enter (bad) lret adc cs sti (bad) ja dec mov lahf and mov jo test aad push cld jno mov arpl scas shrl adc sub jb pop or xor add mov movsl mov cmp cmp jne or (bad) (bad) or sbb jl jmp faddp lcall imull jns jmp insb xchg iret adc add mov (bad) cld mov neg mov insl dec inc das jb jns sti xchg mov (bad) jbe leave mov clc repz into sub fimull mov mov cmp pop call fwait cmp jg mov outsl in sub sbb mov xor dec cmc dec push adc insb fs adc cmp lods clc xorl inc cmp pushf or fldl int3 daa inc stc jae jb test dec cli and mov add rolb mov out scas in and push mov std cld fstl rcll jno (bad) negl xchg add int3 nop mov sbb int fnstcw xor cmp add adc enter push mov or ret pusha xor lods aas es fidiv inc cli sub pop or mov aaa inc mov push mov jo sub (bad) lock icebp leave push jno mov mov push inc xchg aas cmpsl (bad) movsb out cmp push in push clc cmp xor sahf dec dec arpl and insb mov (bad) inc insl aam push shlb test rolb js (bad) fadd dec es push push out pop inc fistl jae nop les xchg push cmpl jecxz xor jl jmp mov and inc pusha sbb adc jnp jns inc add (bad) sti roll and bound fmuls enter jg notb pop outsl int3 rorb sub and cwtl jo mov fiaddl add jge jecxz std inc arpl popa xchg out int sti dec inc dec push pop (bad) pop nop or xor loope pop lret sub and mov shlb jbe cs sub lds and mov mov and inc (bad) sub push insb scas and lea neg sbb (bad) jmp sar jmp inc dec pop test mov scas mov imull (bad) xchg ret mov dec data16 xchg pop or fnstsw mov movsb jp sub in test mov mov jne dec pop (bad) call adc sbb repnz jo sub add aaa or shr add shl mov (bad) xchg xchg xor adc mov xlat inc in cs sub xlat xor pop xor fwait test sbb ljmp addr16 dec ret sub pop and test adc movsb out add test lret push jmp xor out divl pusha mov test fstl sbb jno int jmp cmovp dec outsb jne gs pushf ds inc scas xor out mov fbld push je and xlat or sbb ret in lcall xorb jl fld xor lret dec mov push push movsl dec adc lcall cli loopne xchg xor xchg fisttp xchg cli sbb orl mov adc pop call sbb ds insb aaa xchg pop inc ret xchg cmp insl mov mov hlt in jecxz cltd scas lds out pop int data16 cmp imul insl subl imul shrb adc imul inc jmp jl dec sbb ljmp jge and (bad) add adc mov jb xor imul nop xchg xchg push mov xchg xchg cmp out jmp and fnstenvs je fbld fisubr popf mov sbb xor push in hlt adc kmovw dec movsb push inc sahf lock arpl dec (bad) xchg scas dec mov push popa xchg (bad) jge pop xor jmp daa data16 sbb fisttpl push sub and cmp (bad) loop fsubl sub xlat or push pop rol ljmp or mov js lret jecxz outsb mov lret or inc daa xor call cmp in inc nop mov pop and das je mov push not aad push sahf test mov add xchg mov cmpsb outsl xlat je aas push sbb aam ljmp mov lea jmp lret xchg mov aam mov mov lret mov in movsb pushf lods ds sbb mul rolb mov fwait sub sub in xlat outsl push and jno adc es out das aad mov xor inc mov sub jae icebp test out adc push in inc adc ret lock mov gs jge hlt ret mov pop ss sbb ret fstps iret shlb jmp adc jmp popf popa je xor outsb jbe add dec (bad) mov scas jecxz aas inc adc shrb sub aaa sub cs pop cmp mov push push xor push lcall inc jp aaa sub in js bound jg (bad) pop jne pop mov in sub mov lods test test mov cmp adc mov mov dec mov movsl int nop lcall movsl sti (bad) xchg jmp jl or mov add inc adc push popf js jb je lea add xchg adc cld and dec scas xor call jmp dec xlat xchg addr16 or mov dec jge mov add insl in mov mov sti pop pop and fsubrp ds adc sbb mov test sub push in sbb cmc je pusha sahf xor call test fcoml popf lods mov iret cli cld out push mov or pop xlat movsl cmp dec mov cmp out insb out cmc into sbb cmp mov lcall dec lds jne shrb iret jb or test pop movl jnp ljmp mov mov (bad) or xchg call aas xor xchg (bad) insl faddp pop idiv fsubrp enter push mov add mov pop cltd fcompl xor lret lea ss xchg adc mov push aaa lods sbb pop pop dec loope sub jge in sub push cmp pushf and fcom pop adc (bad) sbb (bad) mov dec lock dec inc lahf push addr16 xor cmpb sti sti mov pop cli cmpps out mov test sti jne data16 dec cmc pop mov mov std mov dec mov push xor add sbb outsb frstor xchg and bound or out and inc lahf hlt mov orl push popa push pushf mov inc (bad) rcll lock mov mov or cmp lock add movsb push sbb (bad) (bad) sti test fs push ret fnsave lcall push in push pushf (bad) mov inc int addb data16 fsubl inc jbe insl dec out jnp inc aad inc stos sbb or lret sbb cmp push fsubr outsb inc push movsb mov movsb xor and sbb push pushf dec leave enter mov push in cli je jbe and cltd nop inc fstl xchg test push push out rorl scas pusha jb iret insb int icebp xchg push adc (bad) (bad) mov int3 out pop jns push cmc inc call out dec std das movsb andl ljmp test int3 jmp sbbl push shrb add mov ja fidivrl in dec push sahf test popa xor call sub inc test mov mov mov idivl adc sub sub sarl sahf (bad) aas das test les sub inc mov aas sbb adc js (bad) mov and repz mov and fs mov sub test jae fucomip sti inc rorb add xchg push mov fwait pop mov adc adc dec dec pop xor je push fimul test mov jns pop imul mov mov cld imul cmpsl mov xor xchg int sbb sub cld sbb push arpl insl fcmovbe mov lret cld iret daa gs (bad) push inc xchg mov (bad) into dec into push int fsts add inc fwait jno clc jnp je test loop fwait (bad) lea pusha (bad) stos jmp lret js fsubp and in inc inc insb mov scas ja sub lds sbb mov icebp enter (bad) into lods bound push mov sub dec inc push or xchg aaa (bad) jns pop xchg jb adc movsl (bad) xor test cmpsl popa push in sub mov insl xchg (bad) sarb scas int3 dec and stos cli xchg pop mov popa xchg cmp movsl je inc mov push inc mov aaa add shl out sbb jecxz pusha jbe call mov xor cmp test into pop jg jb arpl push cwtl jmp mov mov lock loope lret scas push out fisubr rcrb jno jo mov sbb jl mov outsb pop mov sarl cmpb daa pop call mov push xchg loopne xchg pop adc jno repz imul push cmp xchg pop insl or xchg mov rclb lods xchg add or in xor es dec or mov push push sub aas sub sbb jmp xchg stos jno jl,pt push or push aad loopne cmc (bad) sbb cmpsl push dec repnz adc sbb test ss jne fldl and movb int3 sbb xchg mov xchg mov je rolb dec jmp out lahf std push in lds dec pop clc test lods push (bad) call sti adc cmpsb lret in and and add and mov push movsl fstpt clc inc in ss adc adc js cld clc xchg cli cli jns imul data16 jo add pop in imul jge xchg adc popf xchg ljmp out jnp imul pusha les push lahf subl mov sbb push sbb cmp (bad) sbb sarl adc cltd jmp jl mov lods jp cld pop mov stos jg cmp pop cmp rorb loope movsb je or sbb inc repz fcompl (bad) jmp cmpsb sti or mov xchg or cmp repz lcall repnz dec lahf (bad) lock sbb xchg mov (bad) shll (bad) xor xor xor dec adc pop jb loop pop xlat pop push xchg test mov jb popa xchg outsl xor test xchg pop mov das dec fdivs cmpsb fs clc iret bound loope xor push pop lcall lods mov mov xchg (bad) mov js (bad) outsl mov loop xchg xchg js sbb and sub sbb mov stos int3 push or and (bad) sbb cltd (bad) xchg outsl mov push push bound sub (bad) les rcrb rcr repz addr16 shr bound nop adc andl ret jbe dec test add and pop add push pop pop mov mov mov xchg inc push dec fsubl pop stos aam out push sti mov mov bound push int3 inc imul add mov pop sahf inc inc fcompl jmp ror dec in jbe dec mov stos pop add inc push or mov ffreep jb lods stc sbb aad mov lret sub mov push lret xor jge sti adc mov or mov and stc pop leave mov (bad) xchg fdivl loopne repz sbb fcmove xor jge fcoml inc sub in mov mov sbb scas push test leave inc or cmpsb inc sbb cmp movzbl fwait xor test adc scas (bad) aad sbb (bad) lock sub ds xchg mov sbb cmp cwtl icebp pushf in (bad) enter ss push int3 and inc inc and (bad) xor push popf std aas insb fs mov inc loopne jb aas iret sbb or movb repnz mov insl mov push lcall sbb or test xchg in adcl push ret adc loope push add xor lret repz xor jbe repz sbb popa cs aaa push sub lahf das add out adc (bad) out pop cld push enter daa inc inc arpl or and aad and inc and sbb mov and or (bad) stos jno punpckhdq test jns xchg cli jb xor iret into push cmp std xor fmull or pop sub pop xor mov icebp outsl leave mov mov jmp (bad) leave loopne test lss (bad) xor xor adc pop sti loopne push test mov dec xor sti (bad) int3 pop inc mov adc dec push pop cmp sub jae xor lea xor enter (bad) pop push cmp data16 or int sub (bad) pop mov scas jmp cmpsl and adc pop xor inc jae,pn mov popa mov idivb jg dec movb cltd mov imul lods push mov (bad) jno xor or add movsb scas mov fstp cmp pop push les sbb pop xor or aas mov push dec iret mov push jmp xchg xchg and inc add push or insb insb adc lods inc xchg jecxz mov outsl xchg pop push clc pop in (bad) mov (bad) sbb sarl cmp fnsave (bad) ficompl dec clc out pop sbb fistpl out js outsl daa js xchg adc out js jns stc loopne mov xchg out jb sub inc add cmp and test (bad) out inc inc cmp mov mov xchg iret cwtl stos dec and inc xchg push cs dec and jne (bad) bound ljmp pop in (bad) in pop das pop inc jmp fs jne or cmp pop or mov loope dec mov mov mov cmp mov pushf sahf mov push xor gs mov loop movsl loope cmc inc and sub hlt and add cs in cmp (bad) loopne movsl outsl icebp push cmpsl test test cmp rclb lea inc push push (bad) orb push repz add aam push sbb test (bad) mov sub jle pmulhuw mov xchg cltd and (bad) jno add shlb mov std test out andl cmp (bad) loop mov mov enter mov stc dec data16 (bad) loope loop jns mov dec nop (bad) fidivr fstl loop lret rolb lahf lods mov (bad) xor sbb lock fstpt adc inc fcomps dec daa xor mov mov sbb jns add cwtl fidivrl test insb popa in xchg mov inc mov dec pop jo sbb xchg stc or cli adc leave fs xor lcall shrl (bad) fnstenv mov sbb push pop xchg loop sarl shlb rcll scas cwtl lret dec sbb outsb out jbe sub daa and sbb in dec (bad) dec mov or in mov popf clc add mov dec and arpl adc lcall sbb push imul and sbb les test xor jl or testl js lock out mov or pop mov imul mov js (bad) outsb sbb mov gs cwtl or jae add cwtl jmp fistpl dec in std bound es fisttpll std or mov aam mov adc sti aam les jle repz ret test (bad) jecxz fdivrs pop push cmp ljmp mov and pop sbb mov pop loop and lods pop push imul xchg xchg lahf lcall push sbb mov add pop int lods sub xlat xor (bad) jno mov mov dec ss pop xchg mov das cwtl daa addr16 je jno sbb testl mov rol test roll popf jmp jns push (bad) fmul sub rorl cs mov sub inc rorl (bad) (bad) push (bad) jnp out aaa push stos mov jae cmp es mov and icebp adc pushl shll iret sub int3 sti jecxz lds push pop mov cld push sbb subl sbb in xor test sti nop dec or out xlat adc das es mov ret pop lahf add push negl lock dec ficoml xchg pop icebp mov mov cmp and ja icebp daa add add test adc fstps lcall data16 cwtl xor fistl pop mov fidivrl clc cmp fwait push push scas pop in xor andl dec movsl xor or test (bad) pop iret pushf ffree pop or enter and mov xchg out pop fs dec xor inc outsb outsb jecxz lahf push movsb mov ret mov std or stc push (bad) pop lret icebp mov fwait sahf test mov loopne test push xchg aad mov push jae scas fwait pop cwtl adc cmp cmpsl sarl cmpsl add push daa sbb xor std dec aas sbb ret cmp mov and jmp loop dec push hlt sub xor dec jno adc lret push adc add fstpl pop pop jo mov xchg std popa sbb adcl fdivl push mov xor mov or mov loop xchg mov lock (bad) fcoms xchg adc insl fsubr decl int3 push pusha inc (bad) ja inc sahf sub popa in roll pop pop pop ffreep mov inc sbb fs pop (bad) push jmp call imulb dec insb mov dec pop sub mov or jns jne push mov ja cmp push (bad) mov adc scas mov mov inc xor and pop mov (bad) xchg mov or mov gs popa add stc testl push fidiv jge aaa push (bad) ja loope xchg daa cmpsl dec aaa addr16 cli lret dec sbb jno jbe out loopne aas dec out lock jp iret adc xor in sbb or gs jnp push and xchg push sub ret adc repz mov mov cmpsb mov test or jle sub lods sub mov pop movsl (bad) mov out or cli outsb push imul jp xchg rol js hlt out into mov ds scas adc popa int3 mov sub or adc mov dec adc jmp adc rorl jle dec lods lods add fwait pop (bad) fstpt add fwait jb aam scas jnp out incl xchg loop cmc fwait add imul xor sbb pop and add stos cli cmp push loopne stos sub je in fistpl mov xchg and pop cmp push mov ret jp int3 (bad) jmp mov or test data16 add push jnp pop outsl lea nop xchg push inc inc into cwtd xchg cmp inc stc push stc add mov mov cltd mov daa sub movsl dec pop lods mov inc scas xor (bad) (bad) sbb rcl rorl mov jbe (bad) adc cltd rcll repnz cmp sti pop lcall sbb jle shll into xor or ljmp dec jl aad cmp (bad) xor mov in repz fmuls cwtl pop stc mov sub dec imul pop and lahf push dec cmp jle push jle repnz mov mov xchg push xor sub push lret lods imul gs test lods pop xchg xor stos xchg stos cld lret xor popa cmp pop or push pop cmpsl push ret mov (bad) xchg mov or xchg daa and repnz or popa push in and xor test or loopne push pop insb rcr sbb (bad) jp dec insl imul dec or ret lock daa nop stc int mov mov xor adc roll popf sti outsl sub out cmp push int popf iret call repnz mov lret mov aaa inc add jp lods lds test mov and jb int aad push fsubrl mov pop test xchg das fsin mov push sbb push add push mov outsb incb call shrb pop pop (bad) bound pop aad les ficoml adc cmp pop popa lcall inc add popa in mov cmp sahf insl jb fmuls mov mov test bound push jno jnp mov jge in xchg (bad) pop lods mov jbe push mov arpl rcll dec orb mov dec cmp in in pop mov push stos outsb and sbb test cmp xchg cmp out push or lea jns and les mov lea loop pushl loop fsub inc push ljmp into jp rep repnz xor add imul jmp mov addr16 lahf or xchg paddsw into mov (bad) mov and sbb or ja cltd call inc add adc movzwl fistpll jbe out jo jl and js out jbe test pop xor sub add scas adc (bad) mov inc (bad) mov dec push xor pop es push xchg push inc gs pusha cmc jo int aam jo ss pop ret test orl dec push aaa xor out cltd pop dec xor jbe jge scas xchg push mov leave dec sub jnp adcl rep push sbb movsl shrl in cmpsl sbb pop pop jne sub or xchg jae xchg inc out mov bound sbb (bad) lahf mov pop sbb aaa loop ficompl pop in jno mov negl adc int jg ss cltd cltd adc fbstp push adc cmp mov stc scas add scas cmc xor outsb sbb pusha mov repz icebp dec sub xor daa fisttpll enter out movsb inc jl (bad) ret and pusha loopne fstl mov push mov repz daa push push cwtl xor add add add inc mov arpl ds cmp cwtl outsb xchg mov (bad) jg pop sub jmp and cmc inc movsb vsqrtpd jo jnp ss push inc fcoms or lds or in loop pop fcomip jle mov push enter mov mov adc inc movsb xchg add pop insb call push repnz flds and in xor mov repnz loope inc clc sub (bad) (bad) jmp xchg push push mov jle cs sub cmp data16 jae inc enter cltd dec movl mov and inc in popa mov loop and mov mov xor push dec adc sti leave sbb mov pop bound hlt pop xorl mov or xlat adc inc jb fidiv rcr inc xchg mov pop push jno add imul insl sti dec pop sbb lahf mov mov dec mov pop stc mov sbb into cmp jmp and push popa scas xchg and mov and dec loop inc sub cltd pusha mov in sub arpl add dec js movl sti dec dec mov jmp pop cli call lret jo fist ja mov adc jbe inc gs leave and hlt lods dec jp into cmp cmp mov outsl mov push jl jg int3 jb sub movsl add (bad) mov addb or cld push xor xor push dec push mov pop icebp outsl aad scas call repnz ret mov jl pusha and inc fs shll mov inc pop xchg bound pop ljmp mov stc mov mov popl inc fsubp jg test aaa lods icebp dec xchg lock ret pushf xchg add or std dec mov push stos movsb sbbb lea setp (bad) and rclb imul sub dec and out cmpl nop mov sub push pop jp fs ret xchg jg pop or hlt enter fisub mov and popf mov (bad) into aam mov mov xchg sbb movsl and push gs (bad) mov loope adc aas mov (bad) mov and xor mov cmpsl mov push dec cmp adc adc dec ds xor or add push nop loope sbb pop int3 mov add and or das and mov xchg adc sub jb push lds or jg into xor jl xor das xor jbe sbb into inc out add xor mov ss jno pop pusha bound adc xchg icebp mov mov and stos (bad) jae jne push notb fcoms adc xchg iret sub cmp inc adc adc int3 push in cmp loop neg inc arpl mov xor test (bad) std push mov pop lea adc sbb out test sub dec int3 in mov lds pop cli lea cwtl leave (bad) js callw inc icebp xlat ffree and ss cltd push inc jb lea adcl sbb mov and mov xchg adc mov xchg pop jnp mov shrb clc test fidiv cmp adc mov cmp je sub jno mov add repnz xor (bad) xor cmpsl shll cmp pop pop push push fs and std xchg das push pop fimul jns iret (bad) xchg sbb cmp clc insb add inc repnz xchg xchg and cmpb push outsb xor lret out das dec jp inc xor push in pusha add inc (bad) xor rclb out push jl mov inc mov pop pop add addl sbb push (bad) outsb in jbe mov mov pop xchg aas ret lret (bad) fldl2t jmp arpl popl cmc inc rol fmull adc adc mov int3 aam dec pop mov aas cmp das in fmull dec jbe sbb xlat adc int xlat lods jae pusha stc xor leave stc shr aaa rcrl aad outsb icebp push call dec aam xor xchg mov pop fwait add xchg hlt cmp push adc inc fmull pop test fmull pushf sub (bad) imul leave cld add sti xor fldt stc cmpsl push sub pop cmpsb adc inc pushf iret sahf (bad) mov addl dec and jle jns dec xchg cmp sbb outsl mov lods js xor fstpl jb js lahf (bad) mov scas outsb out cltd stos imul xor cmp pop push or add js pop push dec adc imul ss push sbb ja jle dec inc cmp mov jb shrb in pusha lcall (bad) sub fmull push mov sbb mov dec adc or xchg xlat and dec test xchg gs mov std pop es and pop push bound dec shll movsl push dec lret and xchg arpl int3 mov push inc pop pop in loop arpl jb pop (bad) aam stos rclb insb xor pop and jle imul cmpl cmp push aaa jecxz fisttp shrb add xor push xchg pop sbb pop sti aad mov or inc loope mov aaa int3 mov loop (bad) mov iret xchg mov mov add fs xor rorl lods dec pop push popf lcall adc and adc cmpsb cmpsl push ret into inc mov stc stc pop jle fbld xor leave mov cli and add test jne and cmpsb movsb jb fisttpl jmp ds or dec adc sub cmp mov and mov mov sar adc mov push jecxz js addr16 add cwtl jl sub mov fwait lcall jmp mulb pop mov test lods loope dec insl sub cmpsl or lock jo xchg fs pop add sbb adc push scas sub cmc sub loop cld loope data16 inc (bad) (bad) (bad) das enter notb mov addl adc mov mov sbb in mov inc enter push mov adc fadd and push jg imul sbb leave std mov dec clc ja popl lods data16 or and pop out fisttp sbb push mov push cmp and es loop mov push jne out je in (bad) mov imul dec mov cmc repnz scas xor mov inc std in rorl push mov ret sub mov xchg jne stos and cltd clc jl dec cli sub rcl ds adc flds cmpsb mov pop into loop out sbb add dec dec int lahf lods and (bad) fisttpll adc adc nop sarb cltd mov loopne cmpl popa fyl2xp1 ljmp adc rcll or jne ljmp xor fnstsw mov push sbb jmp sbb sbb dec into fdivrl mov xchg xchg mov test cmp test (bad) jns dec mov and bound repnz inc pop std lock or push xchg das popf inc jecxz or aad inc mov arpl cmp outsl add push adc ds iret mov test dec mov in in gs cmp test lcall mov jmp loop mov pop es les inc push les add mov and jp in scas fldenv into sbb xchg xor (bad) lret jb (bad) fild push cmpsb xchg sub and lods lcall ljmp in lds ds and pop mov stos jnp jnp dec fcmovnbe push jne mov rcl sbb jmp out decl cmp add imul cmpsb xor aas jg jecxz aam adcb lock cmp in in inc clc jmp test andb mov in jmp inc rol (bad) xor push sub jp (bad) das sti insl sarl loope ljmp sbb stc decl add loope pusha imul sub stc rorb enter inc fcmovnu aaa push ss mov insl fwait lret dec pop mul jp xor dec xchg push test sarb addr16 popf call xor xor pop test mov pop jno cmp mov inc inc inc jnp push mov or out out or dec daa ds or imul in scas dec lcall insb mov add sbb push dec test data16 sub out inc jb xchg (bad) fs scas xchg jl ljmp fbstp jge jae stos stos mov movsl lods cmp and adc sub rcll xchg fimull fcom jnp cmp movsb adc shrl dec movsl (bad) (bad) mov decb faddp mov imul mov scas cwtl adc imul stc push sbb lret fidivr and mov pushf fidiv js sub lret iret cli mov lock xor lds arpl mov and add xor sahf imul sub out xchg mov (bad) testb out dec xor inc repnz les jl sub aad movlhps add imulb aam pop mov out push enter in (bad) in ja mov mov mov scas in jbe adc js,pt jno ret out ret ljmp xor push in mov adc or mov sub dec ss popf add out popa bound mov xchg or dec lods adc inc sbb out sarb ficoml fsts data16 mov (bad) fidivl dec xor xor and stc push ret pop push out ret mov fdivs sbb ds jno add outsb xor add mov int3 nop lock mov dec stos popf cmp add cmp cld xor scas or mov iret mov je jle cs mov push xchg out dec jo mov (bad) xor imul sub cmp or xor xlat or test mov xchg and data16 mov out enter lret jnp mov fiaddl pushf imul inc or stc or fwait cmpsl sub ja jno sub lret and mov and adc loop push mov dec lahf push mov fistl out mov clc cwtl xchg lock and fsts inc xchg jb ffreep (bad) mov stos dec (bad) loop cmp cs stos and pop and cmpsb fwait loop fisubrl sahf and adc cmpsl nop lret (bad) stos and and call or push xchg xchg or mov inc fs add inc aam xchg sub inc pop (bad) dec xchg outsl (bad) imul dec repnz mov push repz sarl (bad) pop pop dec int3 fs (bad) aaa out lods sbb (bad) pusha fisubr mov clc int js or push inc inc and cmp mov scas dec inc push sub rcll neg or data16 fiaddl or xor fdivl or outsb iret lock push jmp xor mov (bad) (bad) xchg fwait scas sub movl in mov popa outsb lds xor rcl adc sub rolb loopne int3 mov lret sbb sub loopne sub and enter mov add adc stc scas cmp imul push sub test cwtl xor mov mov mov and mov popa sbb leave sbb push jecxz xor pop (bad) lea jmp or and xchg imul and dec mov enter or lods push xor mov test fcmovb cmp jnp inc mov stos add add popf mov in mov bound mov das mov iret inc call and (bad) pop and lcall inc push and mov popa mov jae ss aas pop test aad dec pop pop les mov adc fisubl inc mov sbb inc xlat pop aad xchg cld jle mov and mov jns and inc jge jbe push dec adcl mov push inc (bad) add sbb mov push int3 dec nop into adc frstor mov sbb cs dec jg jns pop jno,pt and cmpsl jecxz daa stc imul sub dec push int mov addr16 repz mov inc inc inc dec repnz out xchg sub lock mov cmp xchg clc add daa int fdivl mov mov mov ds repnz sub pusha les fbld lahf daa lcall cmp in jo or xor jp push jbe jno cmp clc imul stc bound dec xchg (bad) cmc add sub xor mov xchg cmpsl mov mov inc pop orl ds icebp (bad) int enter sub mov data16 outsb dec mov insb sbb repz and jns cmp test das dec sarl push mov dec lods clc push jg out bound add jle pop sti jb int inc mov popf ret dec in sub push mov sbb into pop out int scas xchg adc pop ds dec jp insl or adc and sbb std gs mov add scas lret sahf mov fstps push cmp popa out test insl xor jnp mov mov xor sbb mov inc cmc and mov xor cmpsb sbb mov xor or inc addb in stos mov lret pop shrl lods jbe stos jo or loop inc out rcrl jbe jno cmpsl pop stos (bad) xor inc pop push cmp (bad) cmp add or xchg add push dec daa xchg call cld sti pop pushf ljmp repz pop push loop dec mov jecxz mov hlt imul rcrl dec dec out incl fadds pop or add in push stc cs data16 stos sbb mov jno sarb push lret or sahf out pop xor jg nop movsb insl fldt fstpl mulb cmpsl test sub lods mov lods cmp cmp add (bad) sbb mov inc fld cmpl cmp xchg mov rcl mov cmp sbb (bad) or sub inc ds sti imul push gs cmp sub mov ja jg pop cmp push cmpb adc fbld inc ja xchg xchg sub repnz jg jle imul aad cld and dec sbb xlat mov incb fldpi mov xor xor sub mov sub push (bad) sti test push loop jle out cmp icebp test push mov js xchg sti nop out pop cltd insl jb pop inc mov addr16 insb cmpsl aam push scas out adc sti xor js sbb ja cmp add outsl into aam aas inc rcrb in outsb lret (bad) loopne hlt jge aaa sbb push in mov out add cmpsb into sbb test test ss push ja sbb lods mov add pop xor mov lds insb (bad) mov (bad) (bad) fnstcw clc xchg xchg cmp div loopne mov sub cs xor and int3 fwait or fiaddl jo pop (bad) daa jns ljmp lock xor aaa in hlt push sahf pop xlat out ds subb xor mov shlb xchg jecxz xchg mov cmp or pop jo adc mov adc or pop sub stc cwtl mov mul dec pop loop jle cmp or mov pop pop sti jns jne pop mov popf out popf xor mov addr16 les mov xchg mov (bad) mov pop xchg pop mov daa ss mov fstpt xlat push mov ficoml inc sahf fidivrl cmp dec push jne and add insl and add mov dec xchg jg or dec or in or mov ja xor dec (bad) cmp fcomp jne bound or mov rorl or mov mov in cs and mov push jmp cli mov fisttpl mov push or and jg jne mov xor addb (bad) adc pop inc in push mov pushf fcmovb jo mov aad outsl shrb mov mov pop jp and mov icebp add sub jo pop inc cltd sub ja or lret hlt data16 mov mov sahf jns inc push insl loopne je mov jns out add xchg or push sbb lea enter mov leave adc mov ss cmc aas aam lret sbb mov pop clc adc dec sbb or sbb (bad) jno mov mov cmpsb sbb sbb mov dec mov ds mov jmp push mov mov dec repz cmp flds mov add pop jne mov out roll adc cmc mov imul mov imul mov adcl (bad) mov jo (bad) pop leave cmp push lret scas xchg xor push cmc mov fistpl jno sbb in sbb push lock loope xchg xchg loopne pop stos int mov pusha mov nop add jo pop sub mov mov xchg (bad) fcompp fucomip add xchg inc mov loop (bad) popf cmpsl sub mov repnz or mov xchg sub mov pop bound dec mov bound jne das je aas sysenter xor iret jl mov aam adc in dec and jb (bad) cmpsl dec jmp add movsb lret jne adc sarb jmp add xor or je,pn sub lods inc cmp xchg add pop cs insl cmpsl in fcoms xchg fs rcrl mov jl and sbb lret ljmp mov adc or outsb pop and dec int xor test inc rorb adc loop mov or and andl cmp cmp outsl into lock or inc dec ret cmp outsl pop pop jle loop and neg cld es mov mov roll inc das pop mov aas ret fistp xor adc shrb int3 sub mov inc and in bound pop sar xor ret fsubs xchg stos mov shrl test int sub dec repz inc jmp fdivrl cli xchg scas fnstcw cltd out iret lods mov add fadd pop mov sbb fnstcw and cmpsb inc sub and mov xor xor clc xlat sbb aad add insb xor stos push (bad) mov ds sti out pop xlat loope or in mov data16 ficompl test lods sub dec xchg inc or jmp loop aaa jne paddq aam xchg cmp pop add std and mov mov in aad out lahf mov dec mov adc je fildll rolb add dec pop stos in inc test imul inc mov adc mov aad sub jp mov sub notb push sub loope xchg jne xchg test cmp aaa inc mov pop lret (bad) sub jno inc fcoms jp push xchg jns pop inc out call (bad) dec cmc (bad) jp push in (bad) mov ja xor inc ja loopne sub inc aas (bad) leave (bad) xchg arpl or mov push mov dec inc js jbe inc inc mov jb or out bound in adc aad push fnstcw add inc stc loopne test jb or and sub pushf test push adc daa loope idiv sub pop inc rcl pop ret adc pop push (bad) cwtl aaa xor adc es stos repz jns xor lahf and insl inc (bad) int3 xchg bnd mov popf adc push mov cwtl out mov jecxz stc nop mov add pop scas ja and (bad) ja test sarl cmp mov jns cmc ficomp add jle xorl push xor pop dec in decl add adc mov inc fs cmpsl cmc dec idiv loopne sub inc xchg sbb ja aas dec add inc mov cmpb sbb pushf mov dec mov pop int movsb add sahf scas mov in std sbb add xorl std daa sub or bound adc cltd test scas inc ss ja,pn and inc das mov and in jb sarb ja fisttpl int jg mov push and imul lock pop (bad) jb or push jle mov xchg jg xchg pop scas push fisubr push sbb adc mov mov mov movb ja jb orb xor inc test pop pop mov xor (bad) mov mov outsl sbb in insb fiadd push or int fnstcw ja lods mov pushf hlt fcmovnb pop sub dec adc ret fmull ret ret inc out add push or lock test scas sub add lret dec pop arpl adc or into and adc cwtl mov stos or fwait cmc repnz (bad) cmp mov cmpsl and fstpl add outsb jecxz sbb mov add push add mov lret ja test dec adc cmp pop loope jmp fnstenv daa les stos mov mov xor add iret push mov lods jp into test test addr16 repz icebp popf ret sub mov cmp shl push lcall xchg mov in movsb outsl loop push cmc xchg enter mov cmp mov xchg jmp repz (bad) out push adc mov inc jle sar iret (bad) xor std je add pop bound push decb inc mov (bad) dec je inc push lret rorb fwait pop pop rclb ss (bad) repz xchg cmp loope fcom jns mov dec jl sbb les xchg inc lcall jae sbb inc call sub loopne jmp test pop push pop lahf fsubs mov xchg sub cli jb push shl xchg cwtl cmc mov cs (bad) imul andl in xor push gs jge into inc call pushf jne int3 cmc and fstpt loopne adc add fisttp dec lock xchg push cwtl push inc push adc jns test (bad) mov fcmovnu or add test jecxz mov push inc aam das and mov sbb xor out push icebp add sub lea stc lret xchg xchg mov or cmp add in cli inc data16 adc xchg push fchs push lret xor ja adc aas mov push push pop movsb faddl and push outsl aam jge sbb xor fucomi jns call adc sahf adc popa in pop stc sub mov bound xor rcll mov jg mov xor popf mov mov rorl xor cmp push dec inc pushf sbb or bound lahf inc negb hlt or or and aam mov add call arpl mov inc (bad) ror xchg dec lock dec shl movsb jge int (bad) push cmpsl mov jne or jno inc mov pusha in fs lret ds mov cmp mov push fiadd outsb jb dec fucomi das mov adc pusha stos jae and roll xchg inc add mov xor and test stc into jne rcrl ret out lods js lcall add inc jge cmp rcll add sahf jo insb scas pop sbb mov lret dec xor or ffree add sahf sti sti and in mov mov and mov sbb lds sarl sub pop xchg int3 adc daa mov rorl dec adcl ficoml adcl fnstsw pop jmp push mov test mov jb add scas dec cwtl addr16 inc insb adcl cwtl js sub pop xor add sbb jmp xchg mov xor jb fcmovbe and lds je setae cld xchg xchg mov test outsl jp adc loopne xchg mov arpl push and pop jo test in jp mov pop inc push push inc mov push dec adc jg mov dec mov mov push scas and xlat adc xchg lea leave sbb fwait int3 jmp push lea dec sbb pusha inc lea lcall aaa dec mov test je mov imul aad shl sbb pop cld mov es int pushf jmp repz fldcw or mov jge ror sub andb or mov or cltd jb imul and mov inc pushf std fldl mov iret sti int std jle pop mov push (bad) mov insb xchg adc pop iret jo popf inc movsl clc (bad) jb rcrb data16 lock mov push jecxz ja cmp xchg jmp jno in mov sbb and in adc cvtdq2ps test xlat cmp or push mov fisubl adc push mov push mov sti daa jb into fstpt or fbld clc cltd add push mov sbb cmp or (bad) mov (bad) mov fs dec mov or rclb roll xchg sti pop cli adc aad add mov movsl popf and xchg xchg xor push sub outsl fcom mov aas pop clc xlat mov insl addr16 dec sbb push add mov dec pop mov pusha push push push insb mov xchg push adc arpl sbb cmp sbb jecxz lock rorb push les clc push and and add xor and mov mov test leave xchg rcll sub pusha ljmp les fldl2e mov push ss stos add pop in pop jno pop leave mov sahf fwait mov adc cmc and mov ds (bad) xor loopne in jg inc pop (bad) ja (bad) mov (bad) push sub in pop cmpsb (bad) sarb jp and push push scas pop adc mov repz outsb mov jne (bad) jbe mov pushf mov (bad) dec aad and rolb or xchg inc sbb bound fidivrl xlat sarl std test repz inc and fsubrl cmp push jmp popf cmp div int test mov cmpsb in shl jnp hlt xchg and inc test dec mov mov mov cli mov pop xor cmpsl out loope in mov in mov inc inc (bad) pop jbe je popf fcompl inc cwtl in cli push xchg sbbb mov (bad) mov cmpsb xchg insl pop mov and aam addr16 cmp aam sbb jne jb sub into mov jae mov out popa mov push push push cmp and add xor push enter rclb dec out push cld mov cmpsl cwtl ljmp js mov pop subl lret and lret dec popf add cltd pop and add ljmp loope pop std push and ljmp fcoms into clc add adcb dec xchg pop mov sbb mov scas popa scas or xchg outsb lcall mov fnop out pusha divb leave pop mov adc sub push rorl jg sbbl or sub pop pop out xchg xor std add inc xor adc out pop pop enter or in rolb add (bad) fidivl test and stos dec or js pop xor and xchg lds jns outsl mov sbb insb jno inc mov mov xchg push arpl and into (bad) std cmpsb inc adc sarl xor test enter ds mov sub negb jnp (bad) and ret scas test inc in mov fsubs aam aam dec mov icebp pop ja lods lret adc mov sbbb mov fisubl or call sub into cmpsl mov mov and fimul (bad) neg sbb dec ret mov andb jl and sbb in and sub fisubrl ret stos and mov xor jmp cli mov std and das jo sahf aas jb popa add adc add cmp js pop mov adc and daa add push mov rcr inc mov imul outsb (bad) (bad) js lock arpl push lret (bad) notl add popl insb iret loopne icebp jno xor loop js (bad) mov out push mov mov cmp cld mov loope out push xchg addr16 dec cmp test jecxz push lea jp fadds push test or pop addr16 in cmp cmp nop scas mov inc cmpl fs mov ja push inc js xor cmp jge outsl fimull add xor and inc mov push popa outsb add scas repnz std or or cs incl dec jne sahf push (bad) rcrl cs (bad) cmc aam push pop into (bad) clc add mov push sarl xchg jns cltd imul divl xor lret or lock movsl in push xchg or fildl ret je hlt pop sbb je push sbb js jmp lahf shrb popa bnd dec stos cmp sahf in and mov lods jle imul std cwtl ret mov mov push or xchg xor push mov pushf out or push sub int in mov (bad) push insl repnz add popf xor mov pop sbb lea adc jecxz mov xchg mov movsl push mov int and sub loopew stos std and fcompl jo jge je nop pop shlb or js inc ficoml das and aad xor mov mov push lahf jne cmpsl addr16 jo pushf repnz jp mov inc add ljmp cld enter int3 fmull adc and jne pop lret movzwl outsb (bad) stc cmp call cli test sbb cmp inc mov (bad) rol adc mov push adc repnz imulb inc leave in pusha lods out push imul mov cmp push mov cmp into mov movsb daa imul cwtl sub lcall cmpsl icebp or imul lahf stos pop and (bad) cwtl mov xchg cmpsb mov mov cmpsl and sub cmp inc inc push mov test movsl pusha (bad) cmp int3 in adc mov sbb stos (bad) idivl cmp xchg and in cmp mov sub fdiv pop jnp in adc fnop aad inc rolb jecxz xor add adc dec and ss fisubl enter mov push cmp std mov mov mov mov mov fimul (bad) jle testl dec orb jle sbb loopne push or xchg in jnp cmp mov pop mov sbb repnz cmp out fcompl popa lods ja hlt (bad) leave hlt (bad) mov sbb push imul push xchg ljmp lret push pop out fistpll pop jmp push int3 imul outsb mov std test mov punpckhbw cmpsb lods sub mov jecxz outsl mov jb jmp inc call inc push jl mov mov mov sub fadds ds jns xchg rcrb dec out nop adc xor loopne cmp dec (bad) sub mov jbe sub imulb iret inc mov mov faddl mov and adc dec rcrl subl inc jb dec pop outsb push jno mov jecxz negb daa aas aad loopne jle xchg (bad) mov (bad) lods repz mov sbb les (bad) data16 inc and jno sub xchg daa es aam stos push cmp cmp and (bad) sub adc test mov imul sub lea dec scas push movsb mov fstps sarl negl lock jne mov cmp mov mov je pop jnp xlat outsl sarl add push pop ret pop test (bad) and push sub add enter sarl and push fnstcw (bad) xchg and test sbb mov inc aaa loop pop adc setns cs out test mull push lds mov gs adc mov outsl inc push sub mov mov jl fdivrs repnz inc sbb adc push xor dec push push data16 ja jbe and jp fbstp fistpl (bad) in leave inc push mov std pusha inc movb cmp add jl in or mov jecxz push daa aas out icebp xchg dec jne lcall add xchg fs or pop and xor fisttp mov jmp mov out inc dec jmp nop add (bad) mov hlt lds push outsb pushf comiss fcoms mov push dec cwtl or out aas mov hlt data16 pop add and aaa int pop xor inc xchg insl lahf jg sbb mov jge xchg bound or xchg xor fisubrl jl sahf mov movsb (bad) push mov sbb clc xchg in icebp cld or mov icebp push jno adc mov and ja popw repz add mov inc aad inc call mov xor sbb in ret (bad) fist je fsubs inc xchg mov int3 adc or mov fsubrs push xor pushf xchg adc lret pop dec inc out push orb movsb sub jbe pop (bad) stos hlt int inc dec mull pusha rcrb js ss xorl call sbb cmp jae iret test jecxz adc pusha aad or or add into push push (bad) or mov cmpsl pusha xchg rcl leave loopne loope mov outsl and cli push and jnp repz icebp jb mov and (bad) or lahf lret cli dec sbb cmp into out mov push lods inc (bad) fildll lods dec imul rol movsb dec into inc jno cmp jecxz lcall cmc cmp push lcall stos imul pop jg jge or adc insb (bad) fisubr sbb mov inc into mov repz push scas adc aad push inc (bad) into int sbb push sub xor stc mov xor xchg mov jg xchg (bad) stc mov ljmp pop leave dec mov sbb mov push push sub fnop or push cli push daa adc imul sub out or mov sub push jmp (bad) cmpsb pusha daa push out leave mov fstpt and and ds xor loope movsb movsb jl pop idivb rorl adc push stc push mov std test pusha sub aas mov dec imull dec fwait cmp fcomip sub int xor hlt adc lcall insb stos push mov in es imul mov lret add push push xor push add cmc loope rcll lock pop rorb lods aas and je dec xchg sbb aad call dec inc outsb push dec push shr xchg dec in imul mov addr16 int3 push mov aad aas mov push mov and ffree pop out mov ja clc adc imul fcom (bad) sti sbb shrb push or inc ret xor cli inc mov inc mov or jmp stos mov mov je test push mov cmpsl sub enter outsl fsubrs clc push loope jecxz jae cld cli clc jge icebp mov aad int movsb ret pop repnz mov (bad) jg or push inc cltd xor inc adc push xchg sahf test mov pop inc or adcl sbb je xchg aas test daa add xchg pushf and ret ret add push push dec push addr16 or aaa into paddusw pop mov jmp mov jns inc mov (bad) sub imul fwait (bad) mov and xor bnd mov push xchg push cmc jg (bad) mov pop xchg adc shll jp cwtl in sarl inc or loop xor fisttpll fldln2 data16 out jecxz push (bad) dec push push inc adc (bad) pop push out push xchg mov sarb cs pushf out rolb xchg test mov cmp out dec jnp adc mov cwtl mov dec adc mov jno jmp dec cmp loope mov pop rcl pop loop inc in adc repz jbe pop popa xlat aaa jge jb xchg lret int mov pushf ficom add sub cmp popa fisttp mov pop cmc (bad) mov (bad) sahf mov das push por mov repz cmp rclb in pop or stos aad push lret fmuls cmp sar xchg xor mov test xchg (bad) frstor adc xchg mov adc cld cli (bad) sbb sbb call add out lea aad test jle xchg daa pop iret xor mov sarl cmp in cmpl sbb xchg mov fstl fistpl mov fcompl mov idivl push stc das inc in adc aad (bad) in xor mull sarl push out es and shrb scas dec mov mov cmp loopne jae (bad) xor in mov or sub mov add (bad) xchg (bad) mov xchg fldenv sbb sbb sbb rcr jecxz mov gs and movsl std lahf out pusha out pop leave mov les cmc mov repz fistp iret pop sub imul in shl hlt dec and int add int3 jl mov adc inc jecxz movsb lods cmpsl inc stos outsb nop or cmc sub movsb mul outsl insl cmpsb inc dec jge,pt mov push mov es mov data16 fist nopl repz or add sub jl jl add cmpb mov pushf data16 iret cmp lods and aas xchg outsb cld push (bad) push lea scas inc sbb xchg (bad) mov (bad) (bad) fbstp (bad) jbe inc xor cltd nop lock scas (bad) ljmp and and scas add inc iret jecxz test loope stos inc test bound addl lock sbb cld ljmp jbe mov xor (bad) lds mov fimul jge push sub repz mov ss jae push inc sub outsb pop cmpb sub dec hlt int3 mov push mov push data16 add or xchg sub and inc aaa jp cmp gs fwait (bad) mov and mov inc or add pop inc sub popf pop jo outsl pop xchg sbb pop call (bad) (bad) jae sbb stos out cmp mov adc dec fcomps jne cmpsb in inc adc add jmp call (bad) outsb push int3 dec mov (bad) jo das xor pop rol clc aaa stos bswap out leave xor loope or in dec cltd and inc out pop jns or mov adc and stos push js xchg add mov mov mov push mov int inc dec push sub mov cmp inc push out push imul cli popa scas out inc icebp loope push repz inc fstl test push jno inc fnstenv loop sub lods push dec sbb (bad) push in addr16 jbe sub arpl jae leave pop (bad) or int movsb out das imul mov pop test push and push jle pop (bad) jno sbb dec scas pop adc ret sub and inc (bad) lods rorb mov jb scas bound cmp (bad) fistp and sahf mov notb adc adc mov lret or js mov insb jnp arpl mov sbb stos cmpsb (bad) cmp and (bad) es mov inc sahf and aad scas dec and sbbl mov aad push (bad) bound sub xchg addr16 push lcall insb jnp test cltd clc subl ds push loope fwait (bad) insb mov dec (bad) dec data16 in pop cmp jg lea insl jecxz fldt fldl cmpsl mov lds inc dec aaa inc push push jmp mov insb fcoms sub adc imulb in lods pop mov leave inc je mov shr lods stos push stc fdivrp dec xor mov xchg pop lcall rorb iret dec mov insl inc push mov aas jle xchg insl scas inc push cmp sahf aam popa inc inc push push fldenv sub add in stos xchg idiv jae sahf out rcr divb mulb call sti mov fdivp int3 lods add clc or adc (bad) or inc into mov hlt clc int3 data16 adc stos nop pop in dec sbb jno fsubrl mov dec mov fcomip sub adc push stos or ja cmc sbb add lret dec mov bound and mov fxch dec gs repnz adc int3 sub rol mov push add push mov (bad) rorb popa and and cmp mov (bad) push test or push repnz rcll mov pusha jp in mov (bad) bound (bad) (bad) dec rorl add lret outsb bound (bad) (bad) xchg push mov or and or incl fisttpl rcrb je js sub cmp pop rol addr16 adc fs cli mov sti add inc mov jns icebp pop mov add mov scas mov dec lods cmpsb and jecxz fwait lret int3 sahf and sbb outsb add lret ret in xor mov das lahf das cmpsl imul push rolb mov dec cmp jns stos jb pop pop pop adc pushf push aas xchg inc dec lahf stc push add in stos nop les push jnp int3 (bad) test mov out fcmovb loope call mov (bad) aaa xlat leave xchg in pop xor icebp xor adc mov scas and icebp dec mov out dec or inc mov or inc stos pop jno xor sti sti xchg jnp (bad) insb xchg fbld outsb mov bound xchg cmpsl add (bad) pop mov lock add mov sub insb je aad cmp jne cmpsb nop mov mov imull pop (bad) mov jmp stos pop mov daa call mov mov jg xor fcoml sbb fsubr or pop push test inc mov flds aad sbb inc mov je ss bound pushf lea leave sub push cmpsb aas dec cmp ret lahf ret pushf leave test mov sub cmp test pop mov xchg lds xchg mov mov add (bad) lret or adc imulb push (bad) sub mov and jb jae fistpll mov sbb xchg (bad) cli stc jae adc aas dec mov in jno push dec rcrl cltd xchg adc xchg mov loop cmp std mov das fstpt clc mov cs add adc lock xchg ret (bad) sbb xlat cmpsl int3 sub xchg mov cmpsb mov lds repnz add inc pop sbb or out jle xor neg xchg out pushl lret xchg ret fisubr push out sub xchg movsb or mov in pop push add and add dec (bad) cmc fiaddl scas in int movsb and sbb (bad) mov dec mov mov push cs setno enter in push daa (bad) out pop cmc shl mov paddw mov push mov repnz aas push in mov popa mov mov jb lds rcrb shll iret jbe push clc dec push daa push jae mov aad xor jmp aam enter out xchg mov adc (bad) enter pop lock mov pop jecxz pop lret in mov cmp in repnz mov loopne xchg int3 mov movsb push fistpl stos push imul jno jb add inc inc dec xchg xchg and cmp jbe mov cmc ljmp pop ljmp adc mov movl rcrb std mov inc push jle lea xchg xor aas in sbb lret fbld fsubr fwait mul lea push sahf repz lds xchg stos out lds fcoml imul icebp push push (bad) call pop jle arpl sub test xlat pop or push cmp push xchg jle or ljmp sbb rep mov out movsb out mov sbb add cs xchg sbb inc test pop jne xor aas cmp sbb sbb mov outsb jl in cmp and dec imul sbb adc stc dec std mov xchg les in sahf cmp add or dec das loopne mov popa jl decl fsts les aaa inc pop aad lcall lea xchg xor clc dec or ljmp aad jecxz inc jns push push sub fwait and fisttpl push in pop pop push adc es lock cmp push dec cmp ljmp pop add sub fnstsw test pop jle aaa ss in jns std test (bad) pop rcrb sub repz (bad) add addl add xor pusha push arpl enter xor inc or sub xchg xchg mov ljmp jge add ret leave adc (bad) pop inc pop pop xchg les test sub xchg outsl subb fwait repz xchg push or xor imul push pop jle pop inc dec push mov ja data16 stos das and cmc sub movsl cwtl xor icebp jno jnp test in shrl repz or lock inc outsb pop dec inc xor dec mov or fs sub (bad) ljmp push add je xor push mov bound scas test cmpsb into nop lods sbb pop inc mov jbe xor cmpsl mov mov mov or fidivr rorb fist lahf insl dec cwtl in xlat enter pop mov push adc cld inc push jae or and into gs enter push xor mov sub test lock push jmp notl int3 popa loope push sub pop sbb (bad) xchg movsb test pop cmc pop pop or cmp rcll xor and jnp aas popl dec scas mov (bad) pop adc rorb pop jle cmp push into in pop xor clc cmp push test xor addb (bad) fdivs in clc icebp dec addr16 xchg jle adc cwtl mov push pop xchg dec mov xlat cld out insb (bad) sbb add dec mov xor sbb outsl mov aas cmp xchg das stc jle stc fldenv shll pop stos jmp into jae cs in stos repnz lret or mov lock xor pop cmpsl cmp (bad) sbb je pop movzbl xlat inc les into sub mov aas cmp imul sbb push jle mov lods inc gs dec aaa fild xor movsb mov scas pop scas push (bad) xlat xchg into (bad) sbb sub les lret dec lods xor jl fmull xchg lods loopne in add push cmp cmpsl sbb sub ja fistpl push jns add jmp sub hlt or hlt push outsl add ret jg mov je xchg adc sarb mov sbb mov add push popa fiadd sti scas xchg jns cmpsb outsl mov mov pop add dec inc xchg mov popf ret pop test decb inc dec ss icebp cld dec sbb cli mov (bad) test pop xchg lahf clc xchg nop fiadd aas cld lea stc inc mov ficomp push pop mov aam pushf jns flds inc lret inc add (bad) je mov je mov nopl ja xchg dec xor je aam push jmp in jmp stos adc adc adc push pop pop lods fbstp push push add lret mov xchg hlt out arpl cmp lcall lds gs pop fimull mov adc xchg pop sahf daa insl pusha pop pop (bad) lea popf pop fnstcw pop mov mov sub xchg loopne jno jle xchg insb push bound adc sub jp sarb inc and clc sbb inc call movsl or adc xor fisttpl xchg xchg inc xchg das cmp insl roll sti xchg cmp pop add fdivl ja rcl cmp enter std and repz and mov push cwtl xchg lods and adc mov mov outsb icebp decb xlat ret (bad) hlt mov movsb test mov jbe sbb hlt push mov fsubrs cmp jp aad jecxz ficomp mov mov dec jle neg cmp je jnp mov xor movsb shrb dec inc sub lret mov daa imul (bad) dec (bad) in push lret adc imul cld push inc and sub add push or fmulp adc jno (bad) fnstsw ljmp mov ret idivb cmp dec loop inc jb cli push in sbb ds or repnz inc cmp mov test adc sbb push push pop dec repnz mov pop sbb mov imul mov fwait scas pop fs push mov (bad) (bad) nop fs pop addr16 mov cmpsl pushf mov sbb imul mov add sub jecxz sub stos lods pop or cld xor insl mov mov xchg sub ret clc mov call lcall add rcll xchg jl dec xor sub clc (bad) das gs out gs push xchg lea push movb mov add dec mov jmp cmpsl dec and dec and lods sbb inc push stos fiadd outsl sbb lret and movsb test scas inc jo dec pushf mov mov sub rorl cmp aas push add sub sti data16 mov xchg icebp fstpl and iret lcall fsubr ss insl jae cmc and fimull std jl rcrl xchg and jns mov mov (bad) negb ss daa jge out add into sti cmp lret mulb jp sbb cli jne or mov out cli (bad) lds jg enter cmp mov inc pop jl pusha inc mov pushw inc dec (bad) jmp xchg mov xor mov mov dec jg (bad) cmp push mov call push adc rclb insb mov xor (bad) (bad) testb out cmp xor lahf dec (bad) mov test mov movsb adc xchg ret mov jbe jb sar lods dec inc cmp das lock bnd mov inc jae sbb bound cmp ds inc movl ss out orb push stos add mov shll scas sbb adc mov arpl ds cmp bound std lea push enter xchg cmp (bad) int in pusha repz fidivrl dec dec jmp (bad) xor stos (bad) mov xchg pop cmp mov jbe mov stc daa and cld insb mov sub movsl inc push (bad) hlt xchg js mov push push addr16 sarb (bad) adc test mov in sub aaa ficomp mov arpl xor dec and push jle inc jb jno hlt test xchg lock jge iret std inc push lods dec add rolb mov stos scas movb dec jg sbb lds or (bad) xchg inc pushf lea (bad) int inc pop sub sbb mov pop and push push dec sbb pop jl add mov popf ja and insb stc mov dec nop xchg add ljmp fiaddl leave jb cmp lods xchg vxorps sbb add cmc orl test mov in pusha xchg cmc pop ja sbb daa fdivr (bad) jne inc mov (bad) mov (bad) push sub std fnstenv cmp cmpsl inc iret ret (bad) test sub daa jnp movsl rcrl scas icebp inc test sub cmp loope mov push fsubrs xchg dec out int sbb aas dec decb mov fildl daa gs out lea add std pop (bad) stos pop cmpsb sub sub push ret pop aas mov jae xor xor adc sub push lcall fnstcw pop xor xor icebp and add cwtl jno int sub mov outsb push imul (bad) daa cs mov test aas push sbb ja xchg ret cs jae and or leave mov mov push inc leave and and cmp mov push sub adc dec jne sahf imul jo fldcw add sbb push les xchg sub mov lcall xchg imul add stc push xchg inc enter lret lret imul fucom dec or jecxz push (bad) aad xchg mov imul sub sbb int or mov add test push fimull and jno test es sub inc (bad) data16 xor xchg xchg mov gs xchg mov lret push out loopne adc ja nop sub test push mov in xor inc ljmp ficompl lahf cmp cs int3 add (bad) movlps in sahf sbb pop mov mov je idiv sbb jge les lret mov sub mov xchg push sti lret roll lcall int sub stc (bad) in cmc outsb fiaddl cmp dec jns cmp adc jnp jp dec or dec stos stos je xor lret je hlt lret loopne out or outsl jne lret pop add ret adc lock push out dec jb pop mov pop xor (bad) out hlt insl pop lret lods lahf cmp jb add ffree (bad) cmc or fcomi es xlat cmp jmp lret (bad) adcl sti ja mov scas inc lcall mov vandnps mov mov sub pop pop xchg (bad) sbb xor popf push sbb push fwait push cmp sbb and mov jle and pop pop lods xor nop mov cmp jmp popl popf pusha pop cmp mov test call movsl clc xorl stos jnp gs sub aad mov mov cmp push push js idivl inc ret dec (bad) mov std sarl lahf sub sahf xchg inc lea pop mov fwait cmpsb mov bound icebp cli aas inc jp lods inc fdivrl mov addl imul mov mov inc (bad) cld aad pop clc test rcrb stc arpl out cmp pop push mov mov cltd inc adc sub in pop ret inc scas inc push icebp movsb mov (bad) ficompl imul pop es mov fldenv pop (bad) mov and pushf clc call mov jno aad out adc add sbb hlt pop push inc cltd (bad) xchg xlat (bad) clc incl cmp mov xchg xor flds dec dec inc mov mov leave xor pop outsl dec and mov mov inc push inc stos pushf cmp loopne and dec xor mov xor xchg jnp mov mov adc pop shrb cmpsb adc adc and out xor jge sub movsb pop add das jbe cmpsb sub aaa aam and and mov push sbb adc mov mov or fxch (bad) sbb jb xor pop imul in jno insl inc pop (bad) sti and aad and insb lahf movsl inc or aaa mov loop cmp jecxz add pop mov mov (bad) lcallw sub pusha jnp test enter jle push scas in xchg movsb imul inc mov lret ja dec out orb and push jnp stos fcmovnbe xor pop adcb fwait dec sbb out lea mov call jl adc mov arpl test cmpsl mov xor dec aad mov or fistpl (bad) shll lods sub cwtl and out ret fcoml mov popf mov xchg in add ds (bad) pop add rorl sub fild sbb pop xchg (bad) pop adc inc ret mov jnp xchg pushf xchg push pop cmp inc sub insb cld sarb imul pop xchg jle imul sbb sub sbb add outsb call xorb cs nopl lret xchg cld icebp test cmc das movsl mov cmpsl jno mov sub outsl lods or cmp lcall jecxz cmp rclb adc fwait orl sbb push jbe shrl sub int3 insb mov les fwait push insl cmp test hlt test push mull xchg repz or outsl mov xchg dec adcl sbb dec loopne fisub push mov ljmp ss outsb movsb xlat sbb push sub out daa cmpsl fidiv dec mov and mov add ret in movsl mov or push push dec push jae imul dec cmp inc mov shrl lcall in mov jbe push sub in mov loope es int3 push outsb dec pop add jge mov gs mov and out xor fiaddl insb ss rorb pop inc dec pop adc push icebp jmp mov aas inc aam fisubrl cmp and or adc jl adc nop mov out sbbl pop rorb inc cmp inc sub sti mov js call cmp lods inc and lret clc inc mov lods jns movsb or add xchg xor les pop test xchg dec lret push mov cmpsl mov aaa or imul jle enter (bad) sub mov mov cli lock mov scas mov int3 xor sbb xlat sbb ret scas mov jg push in in mov es jecxz dec dec (bad) mov cmp iret push lea js pusha pop sbbb fild jae jg movsl xchg xor push test and inc cmp aad mov inc mov enter xchg or cmp jnp jns std lea pop movsl hlt insb pop or dec fwait adc cmc iret in adc dec mov pop sub sbb sub leave jne mov insl int3 into xchg inc xchg cmp mov cmpl push loop movsb ds jnp jne (bad) int (bad) push jmp lcall jecxz rcll divl jmp (bad) in mov pop in (bad) ficomp test adc rcrl jle test icebp jl sub mov adc data16 sbb (bad) xchg mov scas sbb (bad) sarb cmp xchg sub mov xchg sub ret in pushf pop lods insb dec das je jge stos xor cwtl test imul lret and xchg (bad) repnz or dec push push mov outsl dec and jmp into dec (bad) ds cmc fild dec or shrl leave fmul sbbl (bad) lock or call sahf pop inc inc das cmovne mov adc in push aaa fisubl pop cwtl repz fisubl sub lret jg (bad) and sub call loop les pop dec fsts sbb out imul scas test loop popf xor clc xor mov jle sub pop dec ret jne (bad) out dec sbb decl je mov xor jns sbb pop sub (bad) jge mov setno (bad) out xchg stc mulb pop insb inc movsl mov jge cmp mov data16 insb lahf repz dec je adc pop or leave cwtl testb pushw mov mov jp sbb dec clc lds outsb mov jae or push cwtd sbb (bad) movsb sahf pusha adc and pushf das xchg fadd inc js scas mov fidivrl insl scas cltd push sbb jp,pt (bad) repz jp out mov sbb fadd mov int popl lods add and lret pop insb mov push xor cmpsb xchg jbe push mov push sahf clc push shr ljmp aaa xchg (bad) fistl mov mov sub cs or adc lods popf (bad) mov cmc inc cs or icebp sub push (bad) mov cmp and (bad) push test jl ret xchg jne and in mov jg lods mov out xor push bound xchg pushf mov imul push fldenv addr16 mov (bad) out fnop sbb jbe ficom mov data16 fsubr cli scas inc xor les adc dec add popf jno das sub or add movsl jne (bad) decl sub repz in push dec mov lock int fsubs mov sub cmpsl ljmp out pop mov scas aas inc stos in push rclb test xor hlt enter adc sub jg sub pop sahf (bad) iret push sbb scas or dec mov sbb lods fisttpl lret or inc xor imull out es adcl xchg out imul adc pop lods gs dec daa test (bad) cli rclb cld dec in je jo xor sub loope adc mov lret mov in (bad) bound dec pop fldcw cmpsb sub call scas in ja fcompl je stos cmpsl pop (bad) mov xor and jo aam in mov addl shlb aas out mov outsl cltd dec push (bad) js xchg into lds (bad) idivb es ss inc movsb mov jg inc mov jl out dec outsl pop cltd inc or mov icebp leave ja cmp cwtl ret test lods sub nop pop (bad) call jbe jg push pop gs cmp pop dec xor or subl mov (bad) mov movsb stos pop scas adc jbe adc (bad) aaa fdivrs mov sub dec adc add int3 cwtl popa mov jne jbe jp arpl mov pop clc fdivs cmp or adc xor (bad) std (bad) shr (bad) mov fstps dec ficompl xor sub popf mov inc iret xchg xchg jb mov call ljmp ret outsl repnz jmp test fnstenv mov enter mov aas jmp jp xor shl andl (bad) jb pop getsec dec push mov jbe (bad) shll sub js sbb inc (bad) and and sbb adcl and loopne rolb es (bad) jp mov out sbbl ljmp xor and pop icebp mov (bad) jle test shrl outsb add push lock jp loope adc mov mov and mov push mov and movsl cmp xor push jb ss jb xchg jg dec add scas xlat pop int inc push lods jp je adc jl dec mov xor push jg adc cmp mov sub jge cmpsb cwtl repz adc pop lds jne mov mov mov or dec dec pushf xchg adc push inc aad xor ljmp mov enter dec movsl in push (bad) icebp jge fisubr popa adc jg lods stc test mov (bad) fnsave shr sub adc das add jl adc inc das stos xchg mov fldenv xchg pushf and push xchg ss mov xchg (bad) (bad) negb pop sub xchg xchg sub mov rorl mov xor add fidiv push sahf pop sbb lahf gs lds mov sti jmp sbb mov jge nop pop sar sbb push mov shrl icebp gs stos inc (bad) sbb in mov pop lock mov push loope cmpsb out inc (bad) shrb pusha sub inc rorl dec dec and cmpsb and or dec sti or mov pushf repnz cltd or sti lret push cmp out lds fsts add xlat in mov mov pop stos xchg loopne stos in inc mov sub and mov incb mov aad jns fistl into cs lret cmp mov push mov (bad) sbb sbb xor fxch pop ljmp add xchg and or xor lock shrb fcomi cltd roll mov push xchg addb pop lds repz popa adc jbe pushf out cwtl in lret push mov sahf insl test add mov sbb mov push mov dec push icebp mov test lock jne movsb dec movsb mov fyl2xp1 lods addr16 call fadd push xor bound data16 push test or lret sub int inc jb imul mov clc les mov xchg loop push add mov sub aam pop loop sahf and popf lcall push insl xlat clc (bad) push (bad) in les mov and adc adc jl sahf mov jno mov sbb add dec xchg imul mov mov leave push lret jo fmulp int3 xchg mov fs ds lcall stos iret dec jnp mov stos and arpl jl add scas gs stos mov lcall mov imul add in pusha jae scas push mov fist (bad) mov add outsb dec pop xchg ja test data16 test cwtl xor mov leave push mov test mov and loope add pop add in push xorb notl cltd inc mov je sahf mov lea mov mov and jl aas inc push bound sub mov xchg xchg ljmp add mov push push add clc (bad) idivl mov xchg pop push xlat (bad) nop jo pusha loopne push sbb imul push sub mov push in cmp outsb cmp rolb and push mov (bad) push and push ja sub xorl aam cld xchg lea push sbb push dec in ja (bad) jae or in ret cli adc xchg cmc jmp andb xlat pop lcall cli mov pushf icebp sbb jp jg jl outsl inc cltd mov jmp sub xchg pop xchg (bad) sahf xor out mov in int3 sub scas push idivl in sub sbb mov mov movhps sub in enter inc adc fbstp xor push mov iret cmc dec xchg pop mov xor mov sahf mov xor stos jge pop add sbb test cmc adc dec adc and popf xor push lods cmpsb jno popa shrb movups pop test jb (bad) mov fist sub fld mov div xor add dec lods dec pop insl pop sahf jg jnp ja shrb fisub inc psllw or pop inc mov xchg mov vpsubsb repnz xchg std les dec aas divb loop popf gs lock imul add loopne testb pop lahf cmp push outsl sarl jnp sub inc fnstcw es stc rcrl ret pop sub (bad) jb add adc ja dec inc test mov or jle popf movsb push ja cwtl dec (bad) jb xchg jno dec xchg push popf pop cmpsl cmp lcall mov fisub push mov loopne mov cmc insl testl lcall mov fcomip pop xor jg shrd pop ljmp push cmp mov mov and shr push leave enter outsl push pop fs add leave sbb pop fisttpl sarb and jo pop fldenv push lods xor pop shl mov sub mov push in mov pop pop xor inc dec mov mov rcrb mov ror pushf or push bound sbb (bad) mov and cmp sbb cld daa cld ljmp mov jb cmc jae loope push pop fist push sub loope mov dec rcrl scas ret xorl aaa xor hlt repz jle movsl pushl mov jnp add mov mov (bad) jb adc sti imul xchg xor into jbe jecxz in inc adc fs sbb adc jno push mov aam pop js xor int xor jnp xchg jg lock lea mov or idivl es mov ficompl ret jp in jecxz pusha mov nop outsl dec jmp sahf lret jo dec sbb neg mov mov test push jmp dec in or scas push cmp ror addr16 mov pop push add gs sub das insl adc pop outsl xchg inc push xor imul pop pop xchg in sub arpl xor test adc cli push (bad) into mov jecxz xor dec pop sarl push rcll sarl mov mov jl test or mov ret insb sbb iret ret push in jge add in mov jge xchg pop mov out cmpsb pusha mov in add aad lahf nop imul and outsl xchg out pop push or or push daa or xor ljmp loop mov sbb imulb lods mov xorb test mov xlat lcall mov dec test mov push outsb sub sbb cld in add mov lcall ja pop popa pop pop push lret fdivl and sti jne adc mov out outsb movsl dec sbb mov or sub jns add adc jp mov push dec fnstcw jg sbb cmc mulw and imul lahf xchg imul inc js or fdivrp dec push fs scas sbb gs sbb mov mov icebp xchg xchg sbb cmc fisubr insl in outsl stc xchg (bad) pushf mov xor jmp inc adc test push mov xchg pushf push fdivr xchg (bad) xchg cmc push push inc das sub cmpb shrb dec movsb cmpsb jle sbb mov in xchg lcall insl cmc push dec xchg lret mov test jge cld mov imul int sbb repnz je pop stc imul mov loop sbb je je fmuls leave pop insb inc adc rcll shrl lods or push and in push int popa push or xchg pop ja sub scas push dec mov pop sub into sub xor outsb (bad) lret test stos imul and js pfrcpit2 jg mov cmp lahf mov push adc add mov mov inc (bad) adc sbb jne adc jmp js imul ret (bad) or or pop add fdivs cwtl dec (bad) (bad) dec add mov jecxz loopne inc push mov hlt loope repnz or lret jle lds jle jg jg,pn repnz arpl loopne fst loope inc leave (bad) es sahf and xchg inc push or jb xor push pop outsb pop scas mov mov mov push stos out out add sub lcall sub sahf fist (bad) pop sub lods repz and inc jl lods pusha sub sub scas sarl in je add push push or cld in loop sbb adc (bad) and mov insb or or fucomip stos ficom (bad) or repz sbb sahf push pop add mov cmp xlat lods cmp mov cmc sbb cmp pop and xchg insb (bad) pusha aam rcll and push out repnz add push hlt cmp dec stc cmp cmp push loope cld mov in fdiv je (bad) or ss repz mov lea mov add inc jmp inc or out dec daa ljmp das lods push or fucomi xor mov xor jb or push cmpsl mov jae mov sbb daa pop mov das and inc cltd shlb xor mov cmp aas (bad) jo or int inc adc push rorb jns gs cwtl cs (bad) imul fwait je fmull (bad) fdivl mov ret pop iret jbe xchg (bad) xchg bound ljmp pop xor push inc dec cmp mov cmc push cmpsb pop mov lret frstor push adc (bad) sahf fisubr (bad) fwait cwtl inc cs scas sahf aaa (bad) pop sbb sbb xor mov mov je in repz clc sub inc and popf hlt fnstsw dec adc cs inc test sbb mov push mov int scas and cmp and cli mov push hlt mov cmp xor mov xchg pop les dec jge mov movsl push or stos fwait or xchg push add aam mov xchg push pop pop xchg mov pop and pop leave dec daa jmp and jo inc add stos into shll outsl stc xlat inc sbb and or mov mov jo push sbb add in loop sbb cmp roll push iret add dec (bad) out cmp push loopne lds inc mov stos aad mov imul xchg xchg mov xor movsb pop in mov ret xchg les mov jmp mov mov xchg in call push add add inc push mov mov pop sub mov ror bswap aas imul and and add stos jp pop pop mulb jno out sub xchg fsubrl ljmp push push mov pop push xchg sub addr16 scas cmp sbb or fistpl or jge lret sub jo xchg loopne ljmp into cmp arpl imul inc sbbl popf into incl mov lods xor cmpsl lret mov pop push in (bad) mov jecxz xchg mov das cli out subb sahf mov daa sub adc push movsb adc jecxz out fsubrs enter addr16 mov es and xchg call sub jmp lods clc and pusha out add xchg mov mov sti jmp (bad) cmp push pusha and inc cmc rcrb or sbb incl repz test jnp xchg ficoml ret or sti rorl in mov push andnps les mov fcoml sbbb mov push psubw push cmpsl cli adc out test cmp dec cmp sub mov lcall pop cmc push sub dec dec cmp addl xchg nop cwtl call inc aad push pushf test repz jo imul imulb or outsl daa psubq adc pop rcll xchg mov popa push scas lods mov popa loope inc fwait insl cld jl sub ja hlt (bad) inc mov pop out lock out fs pushf pop jo mov xor mov xchg or sub inc sub (bad) mov fcmovu dec cs cmp lods xor or out pop repz pop xorl aas mov push jo je jb mov pop leave push (bad) dec pop test add sub jg adc jne jbe fs loope xor sti and xor mov scas push arpl mov cmpsb mov push cmp out mov or pop mov push jle in xchg add mov jno fldcw or mov sub addr16 pop je aas dec fnstsw xchg mov dec sbb mov add and fildl pusha xor xor popf std sbb std mov (bad) cmp sbb cmc xor jmp fldenv mov xor adc flds cmp lds clc (bad) xor mov pop lahf movsl cmp ret mov pushf add inc pop or pop jmp out jne scas (bad) add clc fsubrs push add or std xchg pop rcrb sub dec test xor movsb lret sbbl push (bad) fdivs add xor xchg xlat jo xlat pop add jp lea sbb aad ja das xor test pop xor jno pop adc scas and dec fild mov jb dec push stos stos push and popa push in add push pushf ficoml repnz adc inc in test pop mov mov test cmp xchg test and sub dec dec xchg pop push (bad) mov aad jae jb (bad) adc test mov jp mov xchg push pop dec add gs out mov fistp fidivr xor dec leave mov shrl pop (bad) mov mov mov or sahf aad dec fiaddl and or or jbe jmp sub lods leave aaa jb (bad) call ret int mov mov scas in fxch aad push (bad) xchg hlt leave xchg loopne shlb mov or push jo cld fs mov dec (bad) xor sbb mov mov fsqrt jne jecxz sub lcall cmc je std (bad) psubusw stos lahf out in mov pop iret adc in sub out dec popa dec mov dec pop mov sarl mov sbb xchg xchg jg push in inc pop adc add mov pushf movsl int hlt aam (bad) imul fbstp jle loope jne lcall int3 sbb jmp cld jecxz push (bad) int jno mov inc or xchg call push mov sub mov jno cltd mov mov test and cmp sahf cmovp in jnp mov dec jb lcall inc repz ja sub xor add pop (bad) ss jle aas mov aaa inc sub (bad) sub mov cmp (bad) rorl and addr16 xlat mov scas jle das or or push jmp mov mov inc in sbb test jne lods rcrl sub out call mov and sub lods fwait mov addr16 mov ljmp into imul stos popf pop xor jecxz scas clc inc mov js mov popf pushf jne adc loope ret movb in xchg fisttpl (bad) iret dec ss dec pop pop push in iret adc lea ja or pop pop inc mov aaa loop cmp mov data16 push adc or jbe fnstcw mov pop movsb rcl ds add inc push adc mov imul stc lods in dec pop mov sti and inc xlat jecxz scas push mov cmp adc add jle bound shll and xor jb cmp dec popf or orb frstor lea cld xorl mov addr16 pop or dec sub inc mov int jmp icebp push ds repnz xchg mov mov xchg add cmp adc and mov loope or add inc dec jo cmp pop pop mov sbb es fucom data16 or inc sbb sbb scas push add pop xchg add pop sbb pop or (bad) xchg push lds cmp out push sarb mov (bad) sbb xor shrl mov loopne pop sub in xor push cmp out pop mov rcrb (bad) ss fldcw loopne mov inc cmpsb jge in faddl lods cmp (bad) pop stc xor inc fcoml xchg mov pushf repz fbstp push test pop sbb popaw mov movsl call cmp inc movsb push push test pushl add hlt add pushf dec sahf (bad) jnp add pop or divb add cli or xor std pop pop jmp mov mov ret mov add dec inc fmull mov pop inc adc and cmc loop imull jp and jg or jmp lcall sbb aad mov cltd dec jmp dec (bad) ss cwtl cwtl insl je inc or hlt xchg pop les (bad) xchg out jle into stos nop orb xchg or xchg out lahf and xlat fs pop lea sub xchg insb push cmp push das (bad) adc in push gs xlat xchg ret mov cmp ret mov mov and sbbl add movsb push or (bad) pop loop negb scas addr16 or fldl fs mov jns test push mov movswl mov test sbb outsl (bad) push or push ljmp cmpsb cwtl push add jae nop cmp add mov cwtl mov or push imul scas inc xchg in and or (bad) push lods out pop and stos xor jl pop mov sub (bad) (bad) push adc add cmp jg lds add or jmp (bad) dec jbe (bad) mov fcmovb ret inc cld stc loopne xchg (bad) ficom cmpsb push scas add jge and jmp mov rcrb cs ljmp ja xchg or mov cmpsl add lds inc inc and ffreep mov ficoml cmp std std bound push inc (bad) loopne sarl fstl add sbb push out int pop fisubrl adc enter push cmpsl and pop int3 fidivl jbe idivl cwtl lods cmpsl mov in cltd dec mov add repnz cmp jnp pop arpl push sub data16 out sti lret add sub in xchg aam xchg fisub fildl stos sbb fwait xor das dec sbb (bad) imul inc fiadd fldenv adc pop mov cs pop mov xchg pop mov test adc leave and cmpsb loopne test jge mov pop push inc in into fs loop pop push mov inc js call and jmp repz es (bad) insb add scas push fistpl adc pop inc sub stos (bad) lahf add scas pop cmc test mov dec in sbb push dec lahf adc aaa cld leave cmp or sti std inc lret mov jle or jo or (bad) jge rcl out (bad) mov and int loope cmc and aam cmp xchg aam mov cltd cwtl mov pop adc bound dec sti pop mov lock outsl (bad) out jl dec lock adc sub fiaddl mov stos (bad) jne or fidiv push or (bad) lcall arpl loopne cwtl inc push add or popaw repz (bad) out and into dec repnz je dec sbb sub add ret cwtl xchg lea pop adc mov (bad) std mul gs ret test push and dec repz push in int jecxz arpl shr pop mov call dec test inc adc mov sbb adc fidivr sub inc dec pushl in xadd (bad) jo movb inc mov add clc fadd cmp scas mov lods mov iret (bad) push cmpsb xchg es sbb or xor cltd movb sbb cmp jne mov push add and fdivp out dec lea (bad) out das iret lods pop adc (bad) sub jl push adc insb loop xor dec inc or sbb (bad) dec aaa pop jo mov fwait xchg pop xchg xor loopne and insl inc push cld xor lock xor mov scas roll push sub xor pop xchg adc aaa adc adc lea cmp mov (bad) into movsl push and inc lahf lea push test sbb imul mov jno sbb into cmpsb mov inc popa rolb jb push xchg pushf xor mov fist and dec lahf push mov cmc ret fbld repnz (bad) repz out int3 inc cmc addr16 ret and lret jne pop aas xor and sub (bad) test call and popf dec add adc popa shrb dec jmp cmp pop ret add dec pushf das (bad) aaa cmpsl (bad) dec mov in sarl pop mov or loopne push adc mov je scas in sub pop pop xchg xchg add (bad) xchg sti gs cmp pusha dec push repnz mov pop sbb xchg int3 pop stos imulb test ss aaa jp xchg imul test mov inc xchg in push and sarl inc pop jbe imul jb mov pushf out int bound cmc sbb push aad mov cli push jmp sarl add hlt lods jle push or insl leave and into mov test adc cmpsl cld mov ja imul sbb and mov aaa nop in das enter call add mov push adc mov aas dec lods (bad) mov mov insb stc in jecxz lret xchg sbb pop adc orb cmp sbb push nop xchg cli and gs cmp mov int lahf aas inc (bad) fcomi xchg je ret xor aaa repz cmp jns test jecxz stos dec jnp in push xor shl imul (bad) in lods divb push cld lret or lods pop dec xchg rcll sahf aaa xor lods (bad) data16 cmp push sahf add and dec or aam addl pop int3 inc jl nop repz stos jge lcall xor mull xchg test insl jno,pt rorb ret popf push decb mov inc xor cmp movsb pop xchg movb dec jmp fnsave cli push out xor xchg dec inc mov pop (bad) inc int3 lcall add inc mov dec jecxz mov sbbl ficom pop subl testl lcall jmp sub push lcall and jmp or adc sub sarb adc out jge xchg cmp (bad) stos adc out roll (bad) jbe jmp (bad) cmpsl inc or bound pop les mov lret das mov int aam lret cmp mov popa and xchg jecxz cmpsb mov outsl inc ret (bad) fsts push xor mov scas xchg incb adc push lret dec dec jns inc pop es lods xor popf in jge adc jnp jne mov hlt xchg adc out cmpsb test and add gs es jne ds int3 and and loop int3 cmc xor scas pop repz jmp cmp and enter xchg loope add icebp add aam and imul adc fucomp ret jg scas or add mov inc pop xor test rcrl orps ficom dec scas xor in inc stos fwait (bad) fdivrs cmp mov repnz int push xchg adc mov jne jnp lods daa jns mov sbb popa andl fisttp popa push ret aad int3 pop dec pop adc or sbb ret pop xorb mov lahf jecxz (bad) jp stc popa movsb cwtl adc int3 sbb and test stc xlat fimull pop aam cmpsb xchg xlat dec push mov mov and iret cmp push imul fisttpll pop dec stos sub jns jno push xchg gs in popf imul xor in push in cmp aas notb ret (bad) xchg xor imul mov mov push mov cmp orb ss inc add xchg cmp xor subb mov or and scas test andb insl adc push lds push pop imul add aaa mov adc in push out pop loopne jns mov dec std in inc add icebp and stos (bad) cmpsb ljmp imul and mov call and arpl cmp movsb sahf mov daa aam or fcoml es push aam sbb mov mov in std popf sub sbb int repz shl (bad) repnz loopne cld xor leave call jbe fldl mov les int dec aas push popa mov cmp mov cmp daa adc in lods mov or (bad) mov dec popf mov push cs lds pop sbb push adc xor fwait rorl push cmp or mov sbb les fimul cmp mov push bound fdivr aam enter xchg and pushf stos (bad) xchg pop sahf jmp mov jge pop jnp fistpll push loopne (bad) jb adc mov fcompl xchg inc jno sbb xor addl lods in scas jg cmp fimull pop aaa scas mov xchg scas mov or cmp loope jp sub cmp xchg dec sarl xlat inc dec imul ret mov (bad) xchg xchg push jo push aas testb aad push lea dec xor pusha imul adc into mov cmp push fimul xlat adc or sbb cmp jb xor gs cld and shrl inc xchg ss cmp clc (bad) fistpl push push pop ds sbb xchg icebp and enter mov inc pushl test or or into call cmp std scas mov js cmp mov in mov jge sti mov mov push adc pop shrl xor pop popf push or insl lea stc mov push repz ljmp xchg out add pop xchg cwtl add push mov xor (bad) pusha movsl fs mov or and pop subb (bad) mov or pop adc mov aad mov xchg fimul leave out nop mov out ss push mov into sub pop xchg (bad) ljmp out lahf mov add push notl xchg push mov loopne enter pop and push aam dec movsl cli (bad) out mov cmp or inc dec in lahf lods mov jno jne pushf inc scas mov repnz dec inc sub cltd lods adc pusha scas inc mov imul fdivrl aad push xor rcll sbb decl (bad) icebp push mov lds rorb hlt jecxz xlat ss (bad) cmp fisub decb cwtl mov and pushf gs leave gs daa imul mov fsubl test mov test ja inc ja ja outsb adc inc nop xorl pop mov push test lret rep push dec lods jecxz in or stos pop mov xor push cli inc (bad) mov sbb and into mov jecxz jnp (bad) lods movsb mov and cwtl cltd fwait dec and pop inc sbb add lcall push jb push aad fwait mov inc scas xor push mov jge push insb mov push fs lea add or mov cltd sub xchg sti cmpl in fwait and add mov mull xchg xor (bad) adc mov sub test add xchg inc sbb cmpsl mov push loop jne imul xchg mov or mov data16 add sbb xchg testb push decb les cmp enter sbb insb test fcomps mov lock or cmp jae test xor add sti push sbb push xor jg dec mov sub js dec cwtl pop ret in sub icebp mov scas rep push mov mov push xlat dec pushf ss lds cmp and jns mov sub add lea xor je cmp sub mov leave roll int3 or sbb push and iret imul and mov cli daa xchg inc xor mov inc pop add xchg arpl cmc icebp push push pop movsb iret adc sub lods leave mov test mov or dec add ret mov pop jle sub out call shll or call mov fldcw into rcrb imul push xchg cli imul mov in cld and sub imul std out xchg inc in lods fmull pop push adc dec lretw or mov xor add cmp sub cmp imul out and clc add mov xchg aas cwtl scas lret sbb and popa mov pop adc ret stc imul in sub aas xor ret insb ljmp das (bad) psadbw pop push scas mov lret cltd push add test or mov inc mov std outsb sbbl scas test into shrb jnp dec or out jp push test test or adc mov fiaddl ja scas lahf sbb cmpb dec icebp std sub mov pop mov jnp or cli mov and (bad) in dec sub inc repnz adc mov add and jo mov pop subl dec nop faddl mov pop push xor sbb popa mov sbb or cltd sbb jne xor mov sti es hlt (bad) call xchg adc lods xor and (bad) bnd mov cmc aad xchg mov dec sbb jmp pop mov pop or lcall and mov adc insl movsl dec inc movsl pop cld dec sbb insb mov push sub scas jno inc xchg adc inc pop enter dec movsb xor pop shll pop fcmovbe adcb jg push or int (bad) xor sbb (bad) sub push xchg and dec imul decl sahf int pop and inc and imul jmp add scas repz insb push mov jmp repnz pop push jo mov jmp lods push addr16 mulb jp cmp (bad) out xchg lahf sbb xchg sbb xlat or ds mov sbb and mov lods adc mov adc mov or mul stc push popa dec push sbb xchg inc lds loopne stos rcrl sub sti xor mov rclb or inc pop lcall enter stc sti inc cld cwtl or push out mov js jp js mov xchg sbb cmp add add sub fucomip cmp xchg jb jp rcl mov jnp ret enter je (bad) xchg jne and das mov call cmc fcomi add mov sbbl inc es stos movsb stos push fildl mov add push mov mov inc inc mov das cwtl pop jge mov sub mov in pop neg test jne in add adcl push arpl cmp mov xlat push loopnew or fstpt cli jg pop jno sbb into loopne inc add push xchg sub jae inc scas (bad) dec cld push out mov fsts xor stos mov sub jge or clc push or xor adc ljmp in sub leave inc jae xchg mov fidiv adc cs out in mov shlb xor mov sub lret es push xchg ljmp and insb out dec lds xor lahf daa mov iret inc (bad) xchg xor and push jbe pop inc cltd icebp mov xchg adc push xchg or pop decl int push lret les add xchg pop sbbl movsl sub fmull (bad) (bad) loope and stc scas xchg je inc cmpsb sub dec hlt jnp xor (bad) adc icebp pop clc xlat mov push xchg mov les or xchg pusha mov sbb cmc jmp std inc jbe ljmp out idivl pop int3 das lods (bad) jne mov into push nop fcoml jmp xchg adc dec mov mov mov (bad) jg enter idiv xchg pop mov stc fistpll in pop leave adc repnz and sti push (bad) mov pop arpl mov ds inc inc test testb call repz in mov popf and das imul test pop clc and mov mov aaa push ficom (bad) out rcr push inc push rolb shll or lcall (bad) jecxz mov jns and inc jo cmpsl movsl aam adc adc enter ss (bad) xor shl jge mov leave jns cmp stc js adcl adc sbb std popa mov test pop outsl mov mov xlat lret ja dec nop lcall pop decl or dec (bad) push ja inc pop repnz or mov lret pusha fsubl cmp pop push lods test stc add mov shr lret scas leave dec loop mov les cmp push addl aaa jno loopw cmpsl xor xchg xchg jl mov data16 ja and leave lea cli sub lret cmp xchg js push cmpsl pop mov ret xchg (bad) and inc lods push icebp aam sbb jp lds hlt rorb incb sbb or enter stos add push lds mov jb imul icebp xor stc movsb mov rclb insl scas rcrl imul xlat ds arpl into or jne lods enter shrl decl arpl mov (bad) (bad) call leave insb cmp outsb jno and int3 clc xchg test enter dec cwtl pop mov testb imul lahf leave daa sarb fisubrl sbb into pop pop mov (bad) push shrb icebp ljmp (bad) loopne jb rol mov xchg popf xchg push aam daa ljmp push xchg cmp lods mov pop (bad) jae jmp sub add outsl add push sub jmp pop jnp adcb sarb add stos mov and jp mov scas (bad) or xor pop dec leave imul pop or bnd add arpl mov add jle cmp enter sahf pop xchg iret movsl out push mov test call stc pop xor lret mov popl mov (bad) ljmp xchg jb dec dec aad dec xchg pop xchg inc push jmp dec jp cmp in add mov fucomi add adc std lods pop aad push cli adc jb xchg shll pop adc inc loope aaa (bad) mov repnz vminps test sub inc pop ret sahf ljmp mov js mov mov dec inc pop js movsl in xchg pushf roll and sbb xchg mov out dec repz mov sub cs xor sbb pop repz pop xchg ds mov out fisttp fmuls pop cmpsb (bad) sub and sahf push lret mov jg push in or push dec (bad) iret xchg adc dec js and cmp fcmovnu test fbstp mull pop inc stos pop icebp int3 lods insl and mov lahf (bad) lcall push dec test out add sti int push jmp data16 push xlat pop xor aaa add or xor pop out andnps ds or in clc dec cmp adcb mov data16 aam xchg mov mov jge jg in insb push inc shrb (bad) sbb jl jb add stos xlat cmp mov jle or cmp sub add jl mov jge leave imul xor lods data16 cmp xchg jnp cmp inc sahf and dec ret inc ret fldenv mov pop pop inc pop int3 xchg out ret sahf jg mov push or mov push mov jne sub nop add push jnp (bad) lret int inc inc testl jg ret add adc pushf jmp dec insl mov and fstl push mov sub mov xchg scas loop or adc and adc out repz movsb mov fwait pop mov ljmp and mov notl call push cltd cmp data16 fcomip notb xor jbe sub inc push out jno lcall outsl (bad) mov push xchg inc add rorl out push push (bad) cld cli push xor js,pn cmp cmp cmp cmp xor mov dec dec sub stc mov mul sarl aad mov jl push scas daa out into push mov xor (bad) inc outsl push xchg fs cli xchg jae test ja and fnstsw loopne (bad) cs cmpl fcoms out xorl jne repnz cs scas add mov push xor jge subb mov mov aaa and test or (bad) mov scas or pop mov cmpsl dec icebp push xor mov cltd cmp rcr (bad) mov js loope mov outsb add jno hlt fs insb jae mov repnz stos push (bad) fdivr or mov inc clc test sti pop xchg loopew mov stc scas int jp cs sbb xchg daa pop cmpsl popa mov sbb fldenv andl (bad) mov mov clc int3 mov es dec cmp int3 jg dec mov mov in je jl in scas xor mov inc js imul loop lgs dec rorl sarl lret sub sahf js in pop (bad) adc fsubr out ss (bad) xlat sarb insb jb push dec push fwait (bad) sbb int jnp outsb sahf dec mov std call jl jl mov pushf push lahf mov cmp jl inc (bad) xchg mov inc test and jns cmp les push inc inc add cltd adc test sahf ret xchg mov adc jb xchg jge jae push mov lcall dec aam cmpsl mov add inc loop out int dec push jbe sub imul pop in jle aam xchg push outsl (bad) push outsl gs addr16 jg push mov sbb hlt push in je (bad) mov das je inc jb xor xor mov lods jge aaa sbb inc ret and sub push cmp mov popa je xchg push dec inc aad lods mov fs mulb inc inc sbb ret jns mov mov add adc mov je imul sub push or inc sbb clc or jo inc out test push cmp nop or (bad) pop xchg call aas jne jo insl test (bad) mov xor lock sti pop ss push loope xor iret lcall push out mov ficom push stc std adc dec adc imulb xchg push sub (bad) push jmp jnp push cld insb dec in es je (bad) mov divb add rclb int3 stc xchg xchg das pop stos push inc movups sbb scas mov (bad) xchg jbe lods int3 lahf sarl pop and sbbl sub dec or stos jb mov adc add les pop (bad) sets push shrb popfw jmp cmp int push cwtl ljmp pop stc push in cmovbe cmpsb insb jae lods mov pop sbb bound inc sti jg in push mov xor cwtl outsb sbb stos cmpsl outsb or pop cld add and fisubrl or gs (bad) sbb mov mov mov mov push pop rcll outsb mov cwtl (bad) sbb nop xor and and mov push mov std or (bad) iret movsl xchg sbb aam inc mov pop inc in into rcrl or push xor insl fimull adc jmp imul jp mov mov roll jo cwtl out out out sbb mov imul sub dec shlb dec mov (bad) mov or int xor mov xlat jmp ja add sub or or rcll xchg test idivb stos imul jae xor mov add pop sub inc adc (bad) dec fldt stc fildll cmc push es xchg fwait test ss dec push cmp pop (bad) fild cmpsl popa add xor stos nop jl jg pusha out bound daa imul iret pop xchg ljmp mov (bad) out inc cltd repz jnp (bad) (bad) lock adc sub je stos cmp sub (bad) push or lods xchg xchg leave pop xchg sbb fwait xor mov insl ret negl mov inc and (bad) xorb les repnz xor fidivrl mov call in cs dec sub xchg inc mov sub jmp mov xchg jmp sbb or cld lock leave (bad) sbb pcmpeqw call mov (bad) jo daa cmp mov inc daa pop push (bad) jbe push fisttp iret push mov inc adc push push mov push out or mov nop or (bad) (bad) cmpsb (bad) push sbb adc mov popa and dec push push and in fcmovb fildl mov mov in ja and mov mov stos pop ret mov jns cmp cld mov adc and or hlt cmp push xchg jg push nop mov sqrtps xor or jmp je add sti pop test xlat jne jl repz enter mov bound cmp push insl (bad) cld rcll pop xor dec xchg pop adc mov cmp cwtl push test int3 sub or mov ljmp or sub gs arpl repnz lret outsb into pop iret push adc bound cmp dec or jg mov sub aas push sub lods sub daa pop cmp push js mov cmp sbb sbb cmp mov pop out mov fnop rorb jp (bad) fwait sub mov stc ret jecxz xchg mov jns mov add pop sub cmc push fwait rcrb int xor dec (bad) int fistp push jge in jb cmp inc push cmpsb sbb orl lret mov pop sbb fisubl movntq push arpl xor mov ss inc mov mov js sbb push leave pop xor and cwtl mov push orl pop (bad) mov cltd repz lds scas inc push jg mov mov nop cmc clc out pop inc push cmp pop mul push mov push inc inc (bad) ja ljmp fwait jmp ficom inc pushf aad add mov loope and das mov inc jl daa and pushf (bad) xor sbb cmpsb xchg fild lcall add mov repnz test jge ficomp fucomp incb adc dec in out xchg pop nop int3 adc test test xlat xchg mov stos pushf dec dec (bad) in and sub test dec loop lock sub es push dec lret out scas dec lret imul mov neg xchg or pmaxub test dec pop (bad) jne js (bad) jns pop and rclb cwtl es fdiv gs mov xchg repnz sti mov mov push mov sub xchg das inc adc pop sub mov lcall push adc mov iret push leave insb out pushf sbb imul mov ret icebp inc inc and jnp mov sub imul pusha mov hlt sub ret add jl jne cmp cmp faddl pop add push out xchg mov push push movsb adc aaa mov fs or mov std or out push jp nop inc lods bound fistl mov int3 into sub shrl sub iret scas gs cmp cmc bswap mov bound pop dec sub ret pop push test and or mov mov (bad) and fs ret ret sbb (bad) and cmp jl jno push or mov sbb sbb xchg cwtl xchg fadds lea rorb cltd loope in into cwtl js cwtl mov dec push pop jmp mov sub adc (bad) bound push pop test iret jge insb loop push mov (bad) pop adc or inc sbb xchg lds jp shr lret add movsl clc mov mov xchg or scas fisubr inc mov or fcompl iret ja insb adc mov lock sar lcall inc jbe sahf test repz mov adc and push pusha inc jns js movsl mov inc cmp add insl leave lds inc push inc push or add dec test or or mov clc repnz rcr lea pop or push enter aad xor cmp (bad) sub fxch dec or cwtl les jns mov mov adc mov cs adc adc rcr lds test mov popa sbb mov ret add mov pcmpeqd adc jo push pop in add inc xor adc rcr stc inc loope mov int3 jg stos xlat jo xchg std pop mov sbb or lock cmpsl repz rorb cmp arpl push in cmp fstpl xchg lea (bad) test cmpsl add call rorl dec sub cmp sub mulb aad push cs (bad) cmp add test mov xor int3 lcall aad xor stos aad adc scas lock mov cmp mov mov xchg or hlt addr16 ret notl addr16 mov das sub inc (bad) movsb cmp call fisttpl out leave inc out lcall add lahf in loop fnstenv clc in addb stos and ret enter xchg dec and mov lea pop cli jmp cmp dec pop testl ret xorl cmpsl push aam in push dec fstl sub fimull pop insl jae adc cmp (bad) jno enter scas sbb fwait jmp pusha mov cmp sahf sbb cld push fcompl jl (bad) dec add add xor jmp cmp mov dec outsb loope or (bad) out adc pop sbb mov fimull push mov (bad) xor xor mov sarb test mov mov lahf loope int3 xor mov push imul mov and pop cwtl xchg add and in inc pop outsl or aam and aas dec sbb pop xor je,pt hlt imul out or sbb and jns (bad) mov adc adc inc ljmp repnz ret lds loop fadds sub xchg xchg push sub pop jae movsl movsl sub pop pusha hlt sahf ja out cwtl cmp mov dec mov mov push jg (bad) sbb addl cld jecxz push inc loop loope cmp mov outsl aaa xchg push push ds popa pusha imul fcomps ret push fisttpl cltd pop xchg ja mov stc int lea out lds xor lahf sti daa mov adc push test dec in fdivs sub sub adc pop nop pop cmc insl rorl psllq push icebp push push mov repz repnz les mov xchg cmpsl out dec mov loope cmp fnop inc sbb sub sub push arpl rclb fnstenv hlt xor (bad) mov mov pop xchg test rol and dec cmp xchg add inc cmp jne adc faddp sbb out hlt push mov es test les sub test movsb js cs addr16 stos pop push testl movsl pop mov xchg (bad) jb adc int mov mov sbb stc dec jne into push repnz inc or cmp inc pop pop pop fwait clc in insb (bad) repz jp insb lret bnd jb adc xor sbb clc or inc xor jbe pop pop shll adc lahf or mov xor cwtl nop jae bound push cmp out iret fmuls pop mov push pusha push inc xchg push scas or or or lea push sbb (bad) and xchg mov mov repz lret sub rcrb mov xor cmc dec mov shll mov and adc pushf mov popa sarb fisttpl mov es mov xchg nop repnz xor xchg ficomp add mov loop adc mov paddd mov and dec dec jp pop frstor outsb fcompl out adc into pop mov scas repz push sub call mov ret adc sub cmp push mov stos enter push mov push push int jae jns addr16 and and in mov adc std loope adc jbe and and pop test push dec pop flds inc bound cs mov jl hlt and lcall sti mov and lret jle pop fidiv in mov lock jbe loopne lock inc dec paddsb mov ficompl mov jnp fisttp sbb mov roll add icebp xlat cmpsl cmp sub les mov fcompl sti test imul aad jae mov xchg sub imul sahf push adc pop mov in int mov pop js or dec and pop and stos fistpl dec mov jae mov fist or and xor mov ss loope arpl push lds add dec sti push div into cmpsb mov and test ja jb sbb aas jmp sub (bad) std add fs and (bad) pop ds popa outsl popa mov popa or ret or mov inc repz mov push pop xchg ret loope std mov fidiv pushf cwtl repz inc inc (bad) lret xchg push lock mov mov mov fcmovu cmp lods cmpsl cmp ljmp pop dec dec jge out rorb lea sbb jnp frstor stc movl sahf mov (bad) mov outsl test jno (bad) cmp (bad) mov in es ret out insl in cmp xor jae jo (bad) out sub add jo int3 adc mov ficompl xor sub mov les lods mov ret or lods bound pop arpl ds mov cmc std push sbb dec (bad) jne (bad) xor dec sti (bad) xchg jne push imul cmpsb into mov aam mov fcompl cwtl push mov cmp or cmp pop incl imul fwait push into cmp lds lock sti sbb mov dec jnp or push mov jo stos out adc sbb xor movsl addr16 mov test scas sti mov add xchg lcall incb mov shlb mov sub adc sbb pushf mov xor xor addb jb mov adc sbb int3 mov gs sub push pop test les mov xchg jno or imul jae cld and mov cmp or sbb adc mov inc fwait dec add and daa fs std jmp xor jp ds test test mov hlt lret and dec pop cmp scas sbb cli ss sub out sarb add fs in xchg mov jns cmp mov jae ret sti sub xor out or mov in rorb in push (bad) jno inc int3 ljmp ja xor pop jns outsb test push out xor data16 cmpsb or mov add pop xor pop ret mov int3 rcrb push in dec add or mov div mov mov rcrl pop xchg add mov (bad) mov arpl pop aas inc jns cmpsb xchg fldcw jp sti scas cld stos (bad) sub jae mov add push cli inc push imul repnz leave xchg into lret add xchg pop movsl sbb test inc outsb test or push (bad) xor je int3 aaa int3 cwtl cli rolb (bad) (bad) mov gs xchg add inc in mov sub pop mov nop hlt les fild les xchg push js cld or mov cmp mov ds inc cmpl jecxz mov pop jnp lret xor cltd subl ljmp rclb out xor loopne cmpsb nop adc sahf imul mov dec lret xchg out fisttp (bad) lahf arpl sti das fidivr lds mov and push push imul lds ds mov fnsave jmp sub adcb jp mov daa stos mov mov cmpsb push js mov (bad) or sbb movsl aas imul cmp je lret (bad) ss ror out bound cmp mov adc scas and push and in insb rcrb inc mov mov lret inc push lcall or pop ficomp push lcall push ds fldt jb scas mov push pop repnz xor mov pop jno adc mov jo iret call sbb push mov nop lds es and addr16 test xchg (bad) cs stos xchg inc pop mov stc mov cmp frstor pop movnti rolb (bad) mov adc and int dec cmp int3 and cwtl ja stos dec divl popf xor mov push jbe repnz xor sub sbb repz loopne inc and push imul aaa in psraw pop mov sbb nop sub dec jl nop lods fidivr xor in inc sbb mov sbb adc or xchg jbe je or movsb cmp cmp icebp enter push cmp lods mov outsl fidiv pop cmpsl jnp imul adc push in jge,pt mov call inc and daa add repz jg mov or inc scas fldenv scas mov mov lahf jb,pn sti mov into (bad) mov add push jae cmp test repz shll push sbb rcl repz adc nop stc inc jmp ret xlat or add (bad) imul add negl pop ljmp decl mov and xor (bad) imull xor mov mov pusha int mov mov push adc dec and popf imul sub ja vmovsldup push push mov dec dec in dec outsl sbb shll ret test jmp mov sub out and adc loop push cli sub and popf adc pop fidivl (bad) cmp shlb test and xchg pop sbbb fld mov and or xchg aam fisub or shl pop cmc xlat mov push mov cwtl or mov mov jb in fcmovu sub push sbb xchg push imul rol pop loop movsl aad or cs inc push mov pop sbb outsb pop jne (bad) and pushf jecxz es sahf jge in pop xor pop test jno imul out testl mov movsl add movsb sbb dec lret lahf call movsl jge int xor pop iret es movsb addr16 or data16 mov inc addb push out js test push xchg fdivl iret cmp (bad) mov inc xor mov pop mov test icebp icebp push hlt out dec aam out jp adc in mov and (bad) insb and pop cwtl les sti jns das dec in pop dec or xor push xorl addr16 add sbb loopne rcr call (bad) jecxz andl lret (bad) mov mov testl lcall rcrl (bad) rolb int jnp fadd test push mov testl lods mov push mov int fwait aam mov orl push ljmp dec mov into push imul and rcl in xor push jbe pop mov adc ret mov cmp icebp mov mov push les add mov and push (bad) iret pop popf test je into jno xor mov icebp roll mov jl jnp outsl xor jo cmpsl push ljmp or mov lahf js fsubs iret fbld sbb decb mov loopne push mov mov mov bound pop mov lock sahf sbb cmp lds mov dec jno adc push in cmc repz dec mov jl xchg xchg fidivr or xor add imul cmc stc cmpsl sahf stc cmpsb pop mov inc test push add sub push sti imul pop cwtl push sub movsb xor add inc push imul mov mov dec arpl shrl aaa in in movsl xor pop pop mov bound and or push data16 je dec mov add fcomip or sub xor imul dec jle call shlb push jo jg pop pop loopw in popf (bad) mov decb enter mov gs es sti int3 dec add fsts pop lahf xorl xor shlb (bad) jnp sbb aas or pop (bad) call les sbb push jmp ds xchg lcall imul xchg sbb stc cmp inc aas push push (bad) movsb negl pusha idiv push (bad) cmp sahf xchg mov insl rclb sub mov or ret mov and ja divps mov nop sbb (bad) push fisubr mov adc or movsl jle int3 jmp xchg pop out test push loop and stos call and fstpt adc fimull mov mov and mov out popa jo outsl adc lds adc dec push inc sbb sbb (bad) mov insb in jle (bad) xor push ss stos rcr push and test fisttp ss insl jnp or mov sub xor sbb xchg fisttp sarb (bad) jge pop ficoml (bad) fistpll (bad) cmp inc mov pop cmpl sarl push das repz stos push fdivl arpl mul insb pusha ret sub rcll xor outsb inc stos inc frstor adcl mov lea aaa adc jb aam out cmpsb cmp in and in stos pop pop xchg xor jnp popa testb loop shll dec cltd inc insb and push in sub mov out insl pop mov jmp hlt jmp xchg mov out mov rcr mov mov push sbb fist sbb loop das loopne mov je icebp push pmullw push imull hlt jo fildll sbb inc subl scas mov or jmp mov jge rolb push mov inc jno inc mov mov rcr (bad) jge out mov inc test inc adc inc imul adc movsb stc or (bad) cmp pop mov add push lcall mov jp jo dec cli fnstcw sbb stc aaa divl xor jns and sub popa pop in pop mov cmp rolb and mov sbb stos lods or cmpsb popf inc shr inc and jb jb andb cmpl bound cmpsl sti dec pop xor jge into out cmp out push jnp mov and push or lods addl cmp jae out push fisttp aaa mov leave sbb cmpsb inc outsb dec mov cld adc rol cmp pop outsb ss dec sub and mov mov fldl jmp les mov mov jns idiv fadds jne inc ss xrelease test out jnp ss popf and sbb xor fistpll jnp in dec push stos push ret jnp push sbb mov pusha (bad) repz ja jge fnstenv cmp stos dec stc cwtl jbe test fisttpl addl sahf shrl cltd fadd loope jnp cmp addr16 gs add sahf jno aaa cs sbb (bad) xchg mov sbb mov jns (bad) or pop mov in orl lretw leave or and and push fldl fwait mov cmp jg sub mov xchg inc xor insl xor fsubrp xchg in (bad) cmp mov mov cmpsb push mov xlat jne jp xchg (bad) xor jmp xlat mov xchg (bad) push jns roll pop or inc sub dec jl adc xchg jae push mov int aas rcrl mov hlt fistl out cmp mov and cmp jns cld inc ret and or roll jbe inc scas sbb xchg popa test sub adc dec mov test movsb lock out sbb les adc cmp lods jns ja adc sub xor out and sbb fwait data16 stos xor test xor hlt fidivr js inc enter cli mov dec adc jns mov stc std dec stc test jp (bad) adc aaa addb push xlat jl xor sub icebp dec pop xchg roll inc mov cmc mov jbe aad out dec lahf std adc xor daa stc nop fucomp loop adc mov icebp mov outsb stos (bad) jno sub sub add adc push (bad) jl call int3 mov or cmc das push jmp or dec movsb mov and icebp jno mov lods push jmp stc ss pop repz shl es xor inc mov adc xchg mov repz repnz movsb inc ljmp inc jb dec jnp sub in cmpsb cmp test cmp arpl sarb pop xchg sbb xchg test jbe ja mov cmp cmp cmp shrd mull sub push adcl mov imul lods push add outsl add inc movsb test mov js cltd test sbbb mov (bad) (bad) lock pushf xchg push or shl adc stos adc adc das jae outsl enter dec dec xchg push fs out pop or inc fs aam cwtl arpl mov (bad) popa jge push dec adc lds fdiv subb aaa fcmovu ret or jmp les jnp xchg test (bad) mov sti push xchg test frstor out xchg addr16 gs test sbb dec mov inc ljmp std inc fldenv mov iret js sti addr16 jb in push mov scas cmpsb iret lods ret addr16 push add stos ficoml hlt mov push mov sub or cmp xchg jmp sbb add ja sbb jae imul xchg cld imul or or add aad ret mov adc jg sub sbb or stc adc std ja inc stos or sbb xor and mov cmc into into rcl adc push mov sti jmp out jl mov stos mov sub sahf push pushf pop fnstsw mov adc outsb cli cmp mov jae ret xchg mov dec jns xchg pop or fsubs lret in sti cmp dec mov xor mov lods xchg jg add push notb sbb int3 out pop jnp dec cmp insb loopne cmp (bad) mov loop sub movsl xchg sti mov mov sub cltd stos or xchg outsl and cmp dec (bad) xchg mov mov clc mov daa mov (bad) jecxz mov aas adc notb mov adc lods xchg pop shlb cld lods test (bad) pop sub mov fucomi test fs loope push fildll (bad) and xlat mov jo pcmpgtw (bad) aas or xor xor rol hlt sub icebp push xor push push xchg ret or clc xchg test pop jecxz push inc sbb mov jl cmp fldcw mov icebp mov xchg cld push mov inc dec ss fildl pushf cmp test sub in pop and sub or rol xchg cli inc add sub and addr16 jle xchg ljmp cwtl fdivrs inc ret sti push inc out jbe or stos lods jbe cmpl and jle push inc jg sbb mov int3 sbb adc daa xorl pop int xchg mov or dec imul shrb inc repnz cmpsl lods cmp mov jae enter dec stos mov cld repnz mov mov in mull cld nop bound xor inc insb inc lret mov sbb sarb xchg data16 mov sub xchg push push cmp mov test pop shlb into and pop out cmpsb int sbb mov mov mov dec pop push jb inc inc in sub push ljmp fsubrl cli add popf in imul mov in mov inc clc jns in sar pop pusha add mov cmp cmp mov fsubs cmp out pop (bad) dec loope dec mov and cmp test sbb sub pop scas inc ja sbb cmp (bad) inc sub imul fwait sub in inc adc scas hlt jno xor fisttpll mov xor orl roll add js xor les cmp lock mov int3 aad (bad) sti enter lret js xchg addr16 sbb (bad) int out sbb out add fdivs imul and pop out xchg test outsb les rolb push repz xorb jo inc repz jo test or lcall ds cmp jo pusha pop lcall (bad) and aad push sub idivl gs shrl inc sbb inc inc out jno xchg (bad) movsl lcall pusha repz pushf push xchg aam data16 mov sahf jb in sbb cmp push insl out pop icebp and pop jnp enter fsubs mov add or xchg push push xor mov jo shrb sahf sbb icebp or push leave jge sub adc inc xlat sbb jg repz mov dec outsl jae adc mov xchg pop bound fidiv mov dec out int adc add xchg das enter xor xor mov sub mov push leave stc icebp clc lcall mov cld sub and sahf xorb scas xor mov gs out loop mov and aas sub lret xlat repnz xor test fsubrs mov cmp aas aam iret test mov mov pop out xchg ds fnop xor jmp inc pop cmp ljmp and hlt inc shl dec mov mov xor loopne or sub arpl clc jmp push sbb and ds in ss je mov or outsl roll mov lea (bad) std orl out cwtl pop out xor mov sbb mov mov fbld jno pop lret push add jmp clc cmp scas popa (bad) ljmp sub scas xchg jae push clc cmp out inc lea sub push popf out adc adc sbb xchg jmp mov and popf in mov inc imul mov xrelease jmp rcr mov rcrb sarl (bad) popf sbb cmp pop mov mov xlat mov lret pop repz xchg movsb (bad) push sub lods mov jae xlat insl dec adc shr popa add mov decb shlb jg dec test mov shrb les or inc gs cmp ficom push mov hlt mov sub insl mov fild xor (bad) lahf jo adc bound fs mov (bad) cmp sbb inc iret push sub cwtl xor mov jnp dec jge test and imulb push fcoms jo (bad) push lfs out pop mov inc (bad) jae popa dec xlat outsl mov scas inc cmp js fistpll in lcall mov and adc fs jmp adc xchg pop mov cmp sub pop jne add xchg mov dec mov test insl jnp or ja pop pop clc incl mov or and mov scas pop cmc sahf cmc and push (bad) mov mov push mov aad in add rol xchg mov mov ret test mov sbb repz (bad) fidivl xchg dec jne aaa sbb pop push mov inc sub icebp push mov pop jnp xor sub dec push ret mov or shrl clc loope dec sahf or push idiv sbb mov pop add aad mov les or rolb ljmp pop or loop mov xor lahf in xorl scas lock gs push xor (bad) xchg in pop lock loop adc sbb pop ja aad lcall cs push das adc cmp fdivs jge out rorl fldt rorl xor rorw sbb mov popa aas popf movaps leave xchg mov cmp mov or mov mov sbb push cmp orl or push repz and dec cmp xlat and dec jo (bad) xlat or pop xchg adc stc sub repz mov (bad) cmp sti jb jno xor cmp jne mov sbb enter mov out sub sub sti sbb movsb xlat add adc rorl addr16 daa jmp push test lods (bad) aaa movsl or sub aad jmp cmp and pop les sbb inc jne int enter inc push jmp sbbb insb les stos (bad) in inc ret or inc mov jmp call outsb cmp mov and es pop aam pop jno mov repz mov jo test test xor in (bad) sub dec mov mov pop popf pop mov adc inc dec cmp jns sti cltd xchg xlat push cwtl shl xor pop aad push sbb add loop push nop dec dec xor movsl mov inc into das fdivl mov or sarl aam jmp into rcll outsb dec mov je lret fs nop ret inc fcomi push test (bad) sti dec ret jmp sub repnz xor pop in jmp or add mov mov addr16 xlat stos cmc sub leave dec jo out stos mov jnp jo sub addr16 jo sbb cld dec sub dec arpl (bad) pop imul ficompl and dec pop add hlt test xchg jno mov subl imul and pusha scas xor jne (bad) in ja inc outsl dec dec xor fnstsw mov pop cs cmp (bad) sahf mov lods cmpsb out iret movsb repnz push mov inc into inc mov int3 xchg xchg push mov xor scas mov xchg mov int3 std add add ljmp mov sub lea call push shr mov scas add getsec jmp mov (bad) fldl xor je adc stos bound sbb push stc jecxz fs pop stos push std (bad) (bad) out cmp test sub ljmp es out mov jo xchg xor xchg int pop sub (bad) in idiv (bad) dec daa arpl or sti mov cmpsl pop ljmp rorb hlt inc xor repz stos or (bad) sbb je icebp sbb int mov cli stos push mov inc ja ss lret push push cmpsl jno lret jmp pop ljmp jo negl cmp lock mov aam add pop jb or xor int3 repnz bound ljmp mov mov pop mov arpl cs enter jns sti (bad) cmp inc mov hlt lea add cmpsl lahf add and jecxz aas fdivr sbb in lahf adc cli popf scas xchg xchg adc jp mov cmp adcl xor pushf dec cmp add hlt xchg loope adc xchg pop xor or adc or pop mov add xchg repz pop imul daa inc pop mov leave outsl sub cmp sbb cmpsb ja aam add and push iret cmp pop stos sahf sahf push xor mov ret dec aam mov loop xor and aam out sub xchg test xor pusha js fdivrs orl fsubrs (bad) jae add aas add fidivr mov mov in cmp cmp lods sub push xor inc fs dec add daa xchg adc ret and gs inc mov mov (bad) (bad) sti je xchg jg xor mov xchg xchg jecxz mov push add jle sti lea dec ret or pusha imul sbb gs mov outsb insb nop (bad) aas adc sbb cwtl out cld inc pop xor scas xchg inc xchg leave pushf stos clc mov mov inc nop out inc js data16 sbb sbb xor jle xchg jmp pusha mov add repz lahf and loopne icebp sbb ja and xlat jle,pt lret mov dec dec pop xchg cmc mov mov or xor sbb enter mov mov fdivrl stc outsl mov push inc sbb daa pop push mov (bad) pop push pop add mov enter sub push mov stos push fcmovb pop out mov cmp mov inc xor inc loopne mov enter repnz sub lods mov inc ss addr16 orl xchg test mov int sti sbb imul adc mov mov bound add add xor insb popa jmp sub dec push subb cmp in mov aaa cmp ds mov mov xchg jbe loop sub mov dec dec sti jle int mov addr16 ret sti in fcoms hlt xor dec andl in xor loope pusha hlt cmp jecxz sbb sub in test pop cmp and or les outsl rcrb push mov lret cld sub cmp push sbb sarb xchg (bad) cmp je out push pusha stos sub mov test add adc xor push xchg adc sbb sub leave ss pop xchg jno jno in mov outsl outsl movsl adc jno cmpsb enter cmp xlat stc stos ja in rorb mov adc inc jb ret xor dec popf lret inc push in in add push addr16 test loop push xor or pop push fwait das mul fisubrl or xor jo adc inc sbb (bad) (bad) mov clc repz cmpl push xchg jecxz test push fstl xor scas xchg adc das xor dec les xor add test aam mov xchg loop faddp or int xor add fldt out mov bound or hlt xchg add aam jns int je cmp lods or inc mov add add mov ljmp das lret pop jbe push adc loope sbb xor aad mov sub in movsb lock mov cmp addr16 lret divb lcall cmp inc dec sub sub cmp pop out mov pop sub mov and in scas loope push pop adc ja out pop push add sbb sbb sbbb mov dec dec pop rcrl mov cmpb jbe pop jl ucomiss cltd shl sub mov push subb cs jmp jns and out mov mov out or addb repnz mov test fs or and fcmovnbe and (bad) or icebp pop xor fisttpl lret dec stc push jmp gs out shr stc lods xor xchg xorl xchg test pop cmpl push sub mov pop adc jge adc add mov or stos xchg in jne jmp test jne test and push mov inc cli mov add sbb push dec rcll jbe ret or in pop in jno xor xlat mov mov (bad) cli mov leave test aam mov mov or cmc pushf jae data16 inc sarl test les shrb mov mov sbb popf or sbb and int3 mulb push or jmp test lods lret cld dec mov mov lock pop ds sahf or hlt xchg push pop pop sub je push hlt cwtl in popa nop cmp cmp fist pop and inc jo pop push sub aas push fs in lds fs cmp cltd repz jecxz mov xor mov aam shrl dec dec fs aaa loope jno xor jge jp rorb std bound mov sbb jmp mov xchg stc xchg fsts lds xor and lods movsl dec jge (bad) out xchg inc jge idiv lds outsb les lods xchg cmpsb stc adc pop xor inc xchg clc pop adc call js cwtl je shrb mov push xchg gs xor sbb cmp sub or gs mov sbb jmp stos stos fdivr rcrb orl xlat inc cmp xchg gs into adc mov mov in mov sub shll add loop mov mov and and iret lea xchg pop add adcl test scas push in adc (bad) dec sub jp or inc sbb jecxz mov icebp inc test jo inc mov and (bad) sbb pop adc jae das mov add sub out cmp in lods push (bad) xor push loopne pushf fs lods je or out aad jg shll fldpi add andl xor pop cmp inc insb insb pop xor inc mov mov test fist adc cmp push dec mov mov stc fcoml lcall lock mov adc pop loop jns insb vfmadd231sd js xor mov ja jmp mov add mov inc mov adc jge xchg jecxz jp adc jae dec dec loopne mov push out xor mov out es sahf hlt jb lock mov jg mov lock cmp (bad) mov out inc mov les aad push pop (bad) dec and stc into inc add sub sub ret (bad) test mov push xor dec or mov scas pop lds std xor mov (bad) (bad) mov sbb dec adc xchg mov movsl jbe out outsb dec scas insb test xchg in mov les mov mov das ss shrb and jne mov addr16 xor pushf aaa fisub xlat jmp jno xor subb or sbb orl sbb lret xlat pop (bad) mov jmp test mov pop or cmpb xchg mov add cmc add stos and pop push jno push test loop jle jmp sub (bad) negb or jecxz xor testl ss dec ss iret insl adc and rolb je mov pop sbb gs sbb and subl push repnz aas push (bad) fistpl lea (bad) xor jge popf or cmp test (bad) lret scas dec das hlt push dec lcall jns inc cmc ja (bad) dec pop cld imul out push ja push sbb jmp ret xorb and lock mov inc out repnz (bad) cmpsl mov ds push icebp dec push lods jge int sahf subb outsb push jne je loopne push cmp xchg mov enter dec fcomps fnstenv sub test push test ja lret loopne fs xor sti (bad) mov in or adc flds pop mov fsub es int3 popf xchg scas sbb popa sahf and test (bad) sub pop pop leave sbb fstpt clc imul iret mov pop cltd pushf addr16 or sbb mov adc hlt imul fs dec add int lods inc pop dec jecxz stos jae jae or push mulb jo xchg add pop mov mov and in (bad) ja test adc xchg cmpsl xor push rorl jo sti (bad) mov dec lret mov call iret jnp inc ja inc sub mov adc mov sbb push jae test xor add outsl push (bad) push int sbb cld imul mov jnp jg sub (bad) sahf (bad) int3 cmp stc inc outsb dec ljmp push ret ret das in push xor xchg insl sarb xor test push imul je je lods out pop (bad) clc and sub (bad) clc adc xchg int3 mov ja xor loopne outsb adc stc adc in loop addl rcrb cmpsl xchg in cmp stc int sarl jmp mov sti sbb lea ret mov notl xchg imul mov popa mov xchg lcall repnz inc xchg movsb xor into mov adc pop mov xor mov subl jl cwtl popa xchg adc decl clc xchg sarl aad repnz pop xchg sbb or cmp xchg sbb mov adc lds (bad) xor (bad) js fwait fwait cmpsb cltd rcll rolb clc outsb outsl inc (bad) in adc add jne iret xor fild sbb aam fldenv pushf xlat ret cmp pop mov xchg cmp cmp cmc pop fsubrl les aad jge out les out icebp lret aaa sub nop mov xlat test call addr16 pop rcrb push or mov add fidivrl lcall jg add repz outsb push scas cli loopne sti fbstp jne aaa test mov cmp out mov xor ds cmp (bad) cmp das xchg cmp adc jno iret mov ret cmp adc pop repnz stc jno jl js mov scas inc lds inc jbe js fwait add fidivr popf push cltd ret flds rorb es lea gs adc mull xorb das and rorb not push mov out rcrl cmp jo mov (bad) mov mov (bad) jae xor fsubrl fcomp cld or rorl pop mov ret icebp fild sbb pusha add dec mov cmpl xchg gs jle,pt pop xorl inc xchg int3 sub xor sbb sbb pop out jecxz dec fimull in andb sub push (bad) sbb and pop addr16 pop jl fsubr xorl mov dec adc inc repnz inc fs sub add insl push push inc jne fbld loope sub add push or inc jno xchg jbe pop cmp cmp mov fidivl sbb pop scas daa sub stos cld sub xchg add sub pop mov setne je jp or sbb dec or adc and lret in inc jmp push adc mov ss adc pop mov xchg and div add bound in pop and (bad) cmp dec adc pop jge push and cli or bnd push shlb int notb aaa cmpl jle repnz in push stc arpl loope xchg mov fmuls pop ficoml (bad) ja and sub mov cmp bound daa movsl or cmpsb adc lods jp lods loopne jne inc or outsb or add cltd and xor xchg xchg cmp adc cmp jle xchg add inc hlt mov fndisi(8087 call push sbb movsl jb push jecxz fstpt cwtl push addb push push in pushf stos dec jb stc dec repnz and (bad) int fisubrl into and imul inc inc dec adc cld mov int (bad) fs out ret pop sub data16 sbb cs xchg jo dec lods (bad) iret jmp sub inc inc andb vpor nop lock cmp mov ja rcll jae lcall clc dec jno,pn or fstps dec dec js ljmp aam loope int3 push ss mov lret daa data16 hlt outsl adcl mov rclb mov xchg mov or sbb rcll imul mov outsb ljmp lahf jns int3 pusha dec ss or mov movsb pop jmp adc call add sub push cmpsl xor jb sub push (bad) mov gs out or sarl bound mov mov movsb cmc mov xchg add and pop stos xchg xorb xchg jmp push out push int push jl xor sbb sub cmp rolb stos pop out xor jl pop in in dec mov mov (bad) mov shld sbb or popf imul pusha iret insb sahf std jmp xor in cmp hlt jae mov mov pop dec xor cmpsb or (bad) xchg divl testl xchg push and inc or divb je icebp fdivs xchg sti mov xchg lods insb insb scas push mov in cmp decb push sub jmp pop clc (bad) leave dec cmp sub es xor sbb inc jle push mov sub bsr jne mov aad sub inc or testl jmp mov lock push add and xchg dec mov (bad) stc xchg cmp int3 dec imul push lret or cmp jmp std or scas movsl movsl push ljmp in mov xchg test inc pop pop push jno imul mov mov mov lahf ja sbbb (bad) mov inc xor imull push sub cmc adc jbe ss add pop jb sbbb inc push in sbb lock in test pop and stc inc dec bound cmpsl mov rorb scas (bad) mov pop cs mov dec aad enter xchg loop dec out jbe dec mov or sub repz push loope sti enter bound (bad) xchg loop pop dec sub test push cmp jp add jbe push jle mov xchg lds mov rcr divl add movsb mov scas popf popa jbe add mov pop cli xchg out imul aaa jbe cs cwtl mov xchg xor adc mov push inc out xor std add pop push or (bad) xchg fimul mov jo in or negl push xchg sbb add mov mov inc xadd mov cmp cltd add (bad) xchg out pop pop push into sti pop notl mov cwtl cmp imul in xor popf stos and mov movsb ljmp xchg fist leave or faddl dec setp jge (bad) jle mov xlat xchg fisubrl dec xor dec insl lds leave add push mov xor cmp pop and cld movsl push push cmpsl loope xor cmpb push call movsl add jb,pn dec (bad) scas xorl (bad) hlt cmpsl in lret outsl scas jg inc sbb sub dec (bad) cmpl enter aas cmp ljmp push loopne mov les mov adc xchg push in pop sub push sar mov pop (bad) imulb xchg jne repnz js iret xchg cmp jns fild jb mov sbb imul das int fs lahf mov out adc enter jmp rcrl adc imul or mov test push aaa inc mov sbb popa push pop js insl mov fnop les pop dec repnz sahf jecxz es dec rcrb hlt fs into dec sub push xor cwtl negb js dec loopne push mov shll ret xchg cltd hlt inc ret (bad) in ret mov popf sub xchg or loope push pop and add add pop ret mull jmp mov jle ss leave fimull push sub add or dec mov fs inc in hlt inc adcb mov cltd jae jmp lock cli fcoms outsl stos inc or or test mov outsb addr16 scas in inc jmp ret mov sbb cmp mov fimull add push pop sti jbe aas iret (bad) push and fcompl into in and test jg dec shl adc in lock pop arpl inc call cmp insl loop mov xchg mov sbb xchg inc rolb inc outsb add pop stos cmp js xchg xlat add mov fistp mov xchg or jns stos or sbb mov jmp xor xor aam push insl pusha push pop adc jbe xor jbe test and push (bad) push jae (bad) lock sub (bad) cld pop nop and cmc jb fisub jp rol inc popf (bad) out call loop sbb adc bound outsl sarb sub mov add jne fisubl pop lret shrb cwtl mov out add cmp xor mov mov pop inc add stos fwait and sub out inc pop in insb mov lock mov fcoms cmpsb es movsl jbe push mov or mov stc rcrl shll ret inc int std pop test xchg or stc fsts cltd cmp addr16 and loopne inc pusha gs js mov add jno popf cmpsb pop jae (bad) repnz fiadd jbe cmp xlat inc jge xchg das add adc push add cs ja lret cmp clc insb sub je (bad) jno cmp lods clc pop int3 aam outsl sub sub test and xorl loope add adc mov ret xchg mov imul or fldt ficoml sahf pop test je rol sbb idivb jle insl clc daa mov pushf popa enter data16 xchg xchg push dec lds xchg mov (bad) pop dec int3 mov push sbb adcl jecxz test inc ss and push dec gs loopne jecxz fidiv scas jbe push push syscall mov cs data16 dec sub js fsubrl jmp (bad) idivl xchg lock (bad) out push popa aaa inc push lock sub sahf imul (bad) aaa fnsave insb outsb cmp and addr16 stos iret testb mov stos pop aaa xchg sub pop dec add or incl xor fadd xor ficoml xchg subb ficompl cwtl sub pop movsl ret or ja mov subl xor stos in and aam popa les in sahf pop xor mov jle push aam pusha mov fsubl int fwait das jne pop jns pop int3 add out out cmp pop xchg push jg lret ljmp mov mov clc mov xor in aas mov sbb and inc loop dec mov push mov dec dec push mov js adc (bad) sti dec fsubrl mov in lret add rcrl jo out inc arpl push xlat add jne dec xchg mov fisub sbb and inc cwtl lds mov imul xlat mov es cli jp,pt jns cmpsl push pop xor push and int jmp push xor int pushf add iret repnz frstor cmp adc xor cs jge cmp pcmpgtb push jnp (bad) lret rcl fcoms mov fs inc data16 fcomps iret pop js fnsave decb push lock mov xor ret aas xchg jno int3 pop mov jae das push push ljmp cmpsl jmp mov and sbb inc pushf pop push lret pop outsb mov iret and xor xor daa xchg int jne mov in push jno cmp inc insb mov fsubrs in mov sub inc mov jge xlat daa jle cmp inc mov mov mov loopne add inc cltd xchg jnp fild fbld dec jecxz dec lock aaa inc sti dec jnp outsl cli or mov xchg mov sbb sti adc repz mov sbb add es or jmp mov add jecxz enter cld sti jne cmp std add (bad) pop pushf inc aam cmpsb mov add adc jge int3 jmp push sub pop xchg inc stc int js push pop inc popa (bad) mov mov or or pop incl jle add es mov out pop xchg xor dec inc jg push xor inc push jmp adc cmpsb std mov loopne inc jb fucomi icebp in mov out loope and lahf add lahf bound mov jge dec lret gs imul scas jecxz push (bad) ror cmpsl test adc (bad) mov insb xlat mov jns xchg aaa inc dec sbb jecxz jl faddl dec pop or cmp cmp sub pushf cmc (bad) (bad) jmp test addr16 add inc aas fldenv shrb dec insb cs mov es dec push mov mov bound and push repz sub jmp jnp rorl jnp mov daa xor mov lock jno inc (bad) and iret mov je adc xchg enter inc test jno adc into xchg shlb add jne shr sbb push enter ret lds or jecxz sub mov mov mov mov inc sub int sti aaa iret pop sub mov lret cmc outsb xlat jp sub in add lcall cmp jmp cmpsb xor addr16 add fstpl pop test gs fwait les lds add sub jnp dec nop cld sub das cmpsl adc lret daa xchg cld loop dec leave cs xlat add jae jle nop xor cli das xor push ljmp mov test es xchg add add dec stos lea imulb lret into fnop (bad) dec dec aaa push imul in jg cmp lock aas lcall cli in cmp dec cwtl mov jnp and stos mov inc sub ss push jl les xchg sahf push ret dec fnstsw push pop in pop dec or pusha (bad) aas dec adc js sbb add rorb and cwtl jo or pop xchg add jmp adc dec mov inc pop int3 or lock (bad) in jp jno and cwtl shll inc pop (bad) sub xlat cmp cld xor add mov and jne test fimul xor idiv add in pop cmpsl xchg lock push sarb aad inc push pop jns mov int jbe repz cmp jne mov jmp sbb cld nop inc je outsl xor inc inc pusha nop mov into pop imul (bad) shrl movsb and (bad) adc ss mov pop jle mov and cwtl push repnz fnstsw cmpsb loopne inc sarb cmp daa adc push test (bad) out fdivp loopne aad test adc shlb cmp outsl stos popf xchg xchg rorb aam mov push pop scas lcall jmp xorb mov add or pop out mov inc fnstsw stos mov xchg outsb sti inc xor cltd jecxz mov adc cld jb jl cmp sub (bad) stc jo sub sbb inc imul mov nop insb xor mov lret enter or jae sbb (bad) (bad) lret mov hlt popf add aam push data16 dec jg aas jbe into mov xchg adc xor mov orl fs mov fild test out add pushf mov orl mov fistpl in outsl inc mov int3 xchg iret dec dec icebp fdivl sub mov sbb jg (bad) int3 imul lret push hlt ficompl cwtl and arpl mov or pusha (bad) movsl and push mov inc sub jp arpl pop sbbl fwait sahf mov (bad) mov xor fwait inc addr16 out adc xorb sarl xchg lods mov mov lahf push push in fcmovbe cmp (bad) sub xor mov test (bad) movsl push inc pop jnp inc xor fist dec sarb lea push push push add adc mov inc or lds stos add sub jp pop notb mov aam and or je push into (bad) jno (bad) xchg jg adc pop mov mov sarb push cmp jg adc cmp and or inc shrb sti loope jecxz ret mov out cs dec push jbe inc or (bad) fsts das mov imul test nop sbb xchg xor movl mov iret and cmp sub mov jg jno insl mov repnz popa neg dec aad outsb inc add jg sbb xor push mov scas inc hlt xchg push inc fsubrs int3 xor add and sbb mulb mov int add pop mov xor loopne sub xorl fisttp inc mov (bad) adc mov and stos sahf pushf mov bound lret mov sbb in pop lret (bad) ljmp jae and sbb mov sbb subl jmp add mov cmp fistl mov pop hlt leave and push mov sbb xchg xchg mov push mov xchg pop andl pusha scas pop popf mov int3 push ja cld push insb adc lcall add mov pop loope cmp sti push mov xlat or inc pop push and stos cli cmp jbe sti scas mov xchg dec sti jge push add pop xchg movsb adc add shr loop sub xor add mov jne add pop xchg mov xchg repz or push or sbb pop add sbb (bad) mov aad and cmp andl push loopne push in test sbb sub jecxz call int3 dec cmp add mov add ss or pop stos jecxz frstor push sbbl mov pushf mov lea and xor mov (bad) stos pop sub xchg dec jp hlt cmc xor pop ljmp mov insb movsb sub jae sub xor dec pop cmp inc adc jmp mov inc adc in cmp nop pushf ret jo rorb test rcll aaa mov lahf xchg mov (bad) gs xchg or mov add shlb or cs pushl jecxz imul sti push or das push push aaa js mov fcmovnu repnz dec and dec mov mov jp cli and das mov xor out pop std mov rcrb ljmp jle inc scas ret sbb sub dec iret inc out aad mov orb fstl jg lret cmpsb inc add adc jne add popa and mov inc lahf int sub mov int adc stc test adc mov mov inc aad scas mov (bad) stos push jecxz cmc sub mov loop add out inc cli jb dec sbb cmp mov ljmp pop pcmpeqw cmp js ja xchg leave pop stos xor test push inc jnp xchg sbb test sbb ja adc outsl dec xor xor push sbb lea in shrl dec mov cmp shrb pop fadds fnstsw cmc jmp pop or add icebp jo jl hlt push mov push mov mov mov adc into jg add jbe xchg push out loop insb ficomp test lret push push xor inc stc repz sub xchg mov xor out sti mov loopne cmp mov sbb outsb nop stos push pop cmc or xor pop xor cmp pop lods mov mov mov ds mov stos push mov inc pop loope dec xor jbe mov out xchg ret xor jge xchg popa mov (bad) je xor and xchg hlt pop negb shrl pop jp into call rorb mov sbb jo jg push hlt inc aas push or icebp sar shrl jg packuswb sub mov scas arpl lahf and cmp xlat inc out ljmp pop push push xchg cmc mov inc sar sub adc push lahf sbb adc das js push push loop push lret and lahf mov jnp sarl lea push outsl pop outsb stc subl sti sahf xchg clc scas xor sbb (bad) or dec jbe mov popa fcmovu cld jb sbb cmp sti push or cmpl and es repz loope push push mov cmc mov xor imul mov mov mov out into mov push repnz jp adc in mov insl jge pop and shll lcall loop dec test mov jo (bad) je setp inc das insb insb and scas in mov adc scas sarb outsl and out push aam xchg mov dec mov cmp rcrl push lods cltd mov mov (bad) mov jmp movl xor stc sub ret iret js xor mov dec (bad) jecxz (bad) and loope scas test je adc das dec jns mov repz sarb xchg pop stos mov sbb cmc dec rcrb dec push out sbb daa jmp dec scas loope rcrl gs mov int3 jp and dec loop outsl outsb loop xchg mov aad jo inc aad icebp mov xor into sub push popa jb inc mov and sbb pop les cmpsl (bad) jne mov sub pop leave pop inc fist stos pop xchg or inc xchg shrl jle scas sti inc cmpsb mov aad mov xchg jge int lahf and movl pop fwait cs aaa add (bad) mov int mov inc loopne lret hlt or mov inc mov fdivr push iret adc imul jne or cmp dec bound dec dec sub repz test movsb xchg jp push sub dec mov add sbb mov sub jnp iret cltd andl adc dec movsb dec bound or cs icebp loop in cli and (bad) (bad) movsb mov packsswb andb jne in (bad) add push push pop xchg jle aad (bad) xor push dec (bad) pextrw outsb mov push addr16 imul sbb int jg add jecxz imul test mov iret inc hlt cmpsb lock and jno add std into ja aas sub sbb xor mov xchg sub xor sub insl stc (bad) les mov lahf int3 dec icebp xchg jg lret hlt test cltd out xlat movsb imul fcmovnb jmp dec adc or fdivr mov mov (bad) mov iret (bad) aad arpl (bad) jecxz (bad) insb addr16 adc inc pop (bad) je pop xchg test xchg movb add pop pop inc mov es lea (bad) jne lds pop mov dec scas out add and push (bad) pop call in nop/reserved aas inc inc in and mov loope aas fcomps rcrl add fdivrl and mov pop gs jnp pop imul or test sub adc fisttp enter cmpsl mov and and sbb add imul stos sbb hlt mov pushf imul jbe dec sbb icebp sbb sbb dec mov cld lcall out and (bad) loope cmp inc sub leave arpl cmpb xor dec cmp pop mov adc sbb sub mov bound mov je hlt xor dec push repnz adc mov xlat cmp pop and sti pop sub loop push movsl dec pop push xor add test xor mov addr16 xchg and pushw aaa rorb inc int3 cmp fildl sbb and in jno cmpsl mov xlat (bad) pop jns pop mov xchg aaa and into call inc or or mov inc inc inc ret push add call fisubl imul push push dec cmp ret movsl and loopne xchg (bad) adc mov sub xchg adc mov mov (bad) sbb xchg adc mov xchg fbstp xlat inc adc or xlat push ss cld stc or sub or or or xchg das fnstcw dec adc fstpl and andb lods call aas push int cmpsl in xor or aaa push int3 int adcb into stos xchg jge (bad) sbb sbb sbb mov xchg xchg sbb add sarb jmp cmp lea in jnp sub cmpsb sbb lret push iret ja mov cmp rcrl sbb push fistpl mov inc movsb stc je xchg dec loope pop lret cmp ja mov sbb mov mov add sub ret repnz push insb inc (bad) popf xchg mov sbb (bad) jb sbb add stos sub aam aaa fucomi xchg xchg popf and push in add adc mov xchg and mov adcl imul jge add lock jmp out adc inc dec add movsl int js cmp loop xor jae sbb cmc rolb fbld xor shrl fwait scas push jge sub into push gs jle inc jecxz sti imul std inc fsubr insb negb dec (bad) cmp std les repz imul pop cld adc or repnz adc ss pop inc icebp cwtl mov outsb lea mov dec lahf sbb mov ss and inc xchg sbb mov adc sahf sub enter leave stos rclb sub pop mov mov and (bad) pop mov leave mov xchg add ret rorb push push outsl leave cltd notb mov adc out cmp xor or jno outsb test pop xchg (bad) in sti int3 repnz stc pop in mov leave xchg mov adc and xchg mov mov int3 push lret sub test std lcall fldcw lods fs test pop or sbb movsb fs mov insb icebp jne orb xchg push lods or mov in adc cs das js cmp xor les mov push jno xchg pop outsl or push fxch dec orl bound in jne mov (bad) xor sbb mov xchg les xor xchg ds enter mov or ret xor cld sbb jge inc jmp push lahf leave push mov loop mov jb dec js mov psubsb push jo lea sbb je jmp fs ljmp adc loope or and jae leave and add push xchg out out icebp ficoml add in xchg mov fsubs fildl fcoms imul sti adc jl jnp xchg push mov inc lahf fdivp pop es ret outsl mov dec insl inc sub nop sahf push mov decb aam in dec xchg mov cmc (bad) loop mov lock mov clc cmpsl cmc adc fmull movsl fwait ret data16 lods shrl es int3 das push adc je scas out xchg push adc or dec inc fadds in pop cmpsb rcrl jbe mov and mov jecxz or int3 iret rcl test sbb adc pop rol and dec mov sbb and or leave or cli adc scas xor lods stos loopne dec and pop in pusha rolb xor cs cmp es es aad sub iret add sbb dec or or inc and lods push mov pusha jl add mov sub adc fwait inc push or test test xor xor test test inc movsl xor xchg daa rclw jnp cwtl pop mov mov das pop jno enter (bad) aaa xor jge adc test xor (bad) dec lret add sbb loop ret popf lods mov into sbb push mov das mov xchg lds jae add pop adc fdivrs sub mov lahf jp pushl bound (bad) jge pop test aaa bound push and (bad) not sub mov cmpb ja xchg inc imul cmc fidiv sub jmp outsb cmc shll mov dec ljmp jo lods (bad) fwait push shrb cmc sbb jle mov push lcall (bad) mov fistpl lret push rcrb hlt bound inc adc mov flds outsb je aas pop ss lods sub cltd inc orl mov mov push jp int pop inc es stc mov cmp adc arpl push inc loope or aaa sbb rcrb push (bad) roll push xor or call and outsl pmuludq or bound lahf lods cmp mov fsubrs jmp fdivrs mov or push mov popf xchg lds fisubrl icebp push in (bad) dec roll pop sub dec dec sub fildl sub adc xchg push fsubl add jb int notb lea fs xor xchg push mov pop jle cwtl inc loope clc popa pusha push lret or lret shrl lahf cmp popa int3 mov sbb pop aam repz xchg xchg inc inc test sub ficomp pop pushf push setp aas or (bad) in sub test movsb jmp shrl es or push jae clc mov std and jno or push faddl cmp dec mul inc xchg iret sub mov std notl popf test fildl nop pop sbb dec mov cmp mov push mov or cmp iret mov jo ds (bad) mov (bad) lret add enter das fiaddl cmpsl or inc xor data16 and cltd push mov inc mov sub orb push mov push daa nop (bad) repnz mov nop/reserved bound jg test scas ret lods fadds les mov add dec jno iret cmp aad test jnp adc (bad) fimull mov xchg cld adc (bad) jmp into movsb fdivrs inc push std add mov mov inc jo sub stos mov mov pop shrb icebp dec jmp jecxz test push jae into push push cmp xchg lds xchg fildl dec int3 call mov pop dec xlat mov lods (bad) stos cmc lahf (bad) cmp xchg cmp into ljmp ficompl jno push mov roll mov inc mov xorl leave aas jo mov test cmp cli cltd lods mov xchg sub adc or into pop push (bad) add mov adc popa ljmp mov cmc jmp dec sbb ret out in insl mov gs ds aam pop dec lds dec cwtl mov lock xchg add cmp mov cmp sahf dec jbe pop pop fcmovnbe or sub pop mov mov ja in stc call or cld pop adc das adc mov inc xor outsb xchg (bad) mov add and sub or test mov pushf and mov or jmp push fnstsw insb jg out xor jecxz jg insb into fistpl adc sahf imul nop sub mov in gs fstl imul (bad) mov pop (bad) xor sub push pushf in pop lcall mov jl loopne mov (bad) sub cmp imul add fs jne inc cmp xchg jns sarl test ret pop sub gs push push std push scas sub (bad) data16 mov and push enter scas ret xchg rclb or movsb sub out fsub sti push sbb mov ret daa (bad) cld inc shrl mov jns ljmp and jne mov jb push adc mov mov (bad) test cmp inc into adc shll ret into pop inc jns lret push pushf pop dec lcall mov fcompl inc xchg hlt maskmovq imull (bad) loopne push ficoml inc cmp mov rcrb inc mov or xchg xchg pop inc fistp cmp mov loop movsb mov (bad) out test push and in ret les test aam icebp dec enter push xor or jnp out xchg clc loop aas lret pop sarb add push inc sub adc lea sub dec mov pop fcoms xchg mov aam repz (bad) ds jp mov aas std jg mov xchg adcl mov mov add iret loop popa pushf ds adc mov idivb xor mov inc jl cmpsb cltd lea cmp fist outsb cltd test or pop test pop das addr16 repnz adc mov jae mov lret jbe in pop ss dec stos adc add push gs xchg or inc aam addl sbbl nop pop inc or adc fdivl cwtl fstl (bad) sbb cmpsl into sbb sti aad mov sub ja inc mov sub lahf jo rolb and nop lods in js insl mov mov dec mov mov lods fldl aas cmc test xchg cmp imul jae lds aam test mov int3 xor mov jle int3 or rorl add mov iret mov test mov aam cmp sti mov jle or and pop lods fwait std in mov cs pop push movsl dec sbb push pop dec xchg rolb push aaa mov (bad) addl sbb fstpt inc out pop xchg cmp (bad) cmp repnz out enter cld fmuls xchg mov testl fdivs stc mov pop jbe aas jge sbb dec mov imulb lods subl je dec lret jnp xor xchg je je ds pop cli mov notb shrl ljmp repz pop loop popa pop leave sbb dec inc mov push stos adc enter add cwtl jbe xchg and sahf jae sbb sbb adc outsb (bad) fimul lods dec inc dec enter cmp or out adc pop div es popa dec stc frstor ljmp stos adc mov int3 and sub pop push lods idiv mov pop cwtl outsl lods (bad) repz lds lea in adc adc cmp das pop push mov jp and lods and in mov pop jb adc mov repz aad add fldenv popf xchg add mov dec loope mov je xchg lret outsb jle testb aas inc mov mov in mov push sbbb sbb aam sbb (bad) pop xor jle adc mov xchg (bad) mov or xor cmp inc iret (bad) pop dec jl in out mov push or test loop and fcomps sahf inc into mov je lcall mov in push fstl (bad) rcl and (bad) jb adc push ds cli dec mov fwait shrl jg inc mov das mov test notb mov and pop xchg dec lret in cmp sub hlt imul int pop xor lret movsl mov inc and xor in cmpsb pop test (bad) xchg xchg popa bound mov adc jl leave out jns pop lahf loop lods adc jne pop outsb xor mov mov repnz mov pop mov cmpsl rcrb in aad movb mov std and add in iret clc xchg int3 or jae sbb inc push mov adc dec test hlt or inc mov push (bad) xchg cmp pop out out xchg loope dec mov icebp sti das or sub lock add fs pop lcall lea arpl movsb jp push insb mov jmp icebp mov cmp shrb (bad) arpl outsb or jle and xor add pop lahf or rol stos dec mov rcr pop es cmp ja lahf jmp xchg incb outsb movsb and mov add inc das es mov inc fcompl lods out xchg (bad) inc inc fstp sbb repz ljmp (bad) rcll movsb push mov push ljmp inc push xchg dec fsubr inc mov aaa sub aam movl mov fmull push pop (bad) jl xchg fnstsw stos cmp jae cmc mov cmc inc lea jb push aaa fwait (bad) shll and dec cmp arpl in inc xor sti jns in pop sub dec mov cmc mov xchg sbb rep jmp xor or (bad) (bad) int sub arpl pop lods push ljmp and js push in aas add mov outsb add xor mov lret xor test cwtl and nop adc mov aaa cmp in aam cs xchg cwtl add dec in pop mov adc jne pop cltd popa ficompl or test aad add xchg icebp rolb jle aas (bad) call iret mov cmp aas jecxz lds loope mov jns pop fxch and jbe mov sti dec in jmp sbb add and inc add xchg and dec push sahf xchg pop (bad) jle sub out sub out call inc cli in mov mov lret sub scas clc push dec mov int3 cmc or (bad) dec jp pop pop mov fwait icebp or insl loopne mov clc mov mov add aas (bad) in pop cltd clc pop ror jo jne (bad) pusha or lods xor xor push adc xor mov mov (bad) push rcr cs rorl sbb push out pop mov xchg call in sbb fmuls and sbb xor or cli mov and lret or aaa adc mov mov push pop icebp push fstpt aas mov popa ret lret (bad) dec cmp sahf sub leave ds sbb (bad) pusha (bad) mov mov xlat cmp push jg mov dec push in aam scas ret cmpsb cmp jp and or cmp mov lods add clc xchg cld imul mov jno sarl jmp and fisubr cli add lods ret jle sub enter (bad) mov mov lcall mov inc nop out cmp sbb add and (bad) and lret xchg aam andl nop push pandn mov repnz sar (bad) cmpsl cltd ja adc test mov out iret in jo fistp in mov mov fwait mov lods shl pop push outsl add mov xor in pop mov flds cmpsb mov repnz inc pop sarb dec pop and sbb (bad) iret imul movsb sub iret or test jecxz push lods (bad) cmp mov add inc int jbe inc in fsubl inc fxch inc test (bad) fisubrl loope (bad) cltd out insb idivl cmp pop int sbb inc sub or adc xchg adc shrb and ja fwait mov insb inc dec movsb cmp les movsl addb xchg int add push xor xor lea mov mov movsl (bad) loopne je cld xchg cmc mov inc adc pop pop mov incl in enter add (bad) lock std xchg int or mov sahf leave dec hlt xchg insb je andl pop xchg add dec jecxz mov add jecxz or (bad) into and inc lret (bad) aad pop icebp out or call (bad) adc or push (bad) mov mov (bad) cmpsb push lcall out sub cmp fdivp dec jo push cli lret cmpsb ljmp push dec ret sbb push and xor push xchg int3 push scas dec xchg sub dec push fnstenv cs sub cmp sbb cltd out or pop andl sbb loope mov xchg lods xchg dec shlb xchg jns mov shrb push jmp and jle adc (bad) movsb add inc clc xchg repz add inc mov dec addr16 jecxz loope adc xchg and add dec pop jecxz pop jp cs mov pop or xchg sub (bad) addr16 mov fnstenv xchg mov insb mov hlt rcll imul cwtl ljmp sbb lahf jge xchg das cmp jae jb dec mov pop sbb jb mov pop sub and sbb lock inc xor mov jecxz fwait xlat imul cmc pop pop lods xlat fildll mov jo (bad) leave cli sahf dec jo push or icebp pushf (bad) scas pop out and sbb jb xchg xchg cld in or adc imul call dec inc movsl xchg test or leave sbb push cmc data16 lock mov out lock scas cmp push pop dec in bound sbb fbstp jge xor (bad) jo jp jmp dec or call mov sub nop (bad) (bad) push jecxz sbb call adc std mov fs add xor add ret lret stos push cmp repz dec mov push scas inc stos stc fwait add mov inc inc jecxz adc insl or leave bound loope jg imul lock cmp pusha (bad) mull movsb femms clc daa sbb jecxz jg lea insb dec and inc cwtl push xor hlt mov addr16 stos addr16 pop inc xlat mov push lds (bad) lahf test notl lods popf outsb bnd mov insb out sbb adc inc push mov cmpsl fs jno daa into jb jge push fsub (bad) ret outsl aaa xchg cwtl mov daa pop rorb leave (bad) dec scas sbb scas cmp mov sub or push push rcll mov daa and clc mov test mov xor sbb div mov (bad) mov xchg inc sub mov cmp lret (bad) pop adc in cli ss jle fistpl mov cmpsl pusha ss hlt movzbl mov jmp adc cmpsl jecxz rcr dec adc mov xlat add xchg and mov mov leave pop jmp fldt dec movsb or pop jle sub call mov fs into popa mov xor movsb clc sti xor sub loopne scas sahf fwait icebp add jle shlb les cmpsb inc cmpsb popf sahf scas (bad) loopne rolb aam cmpl mov xor fstpl xchg pop inc and and lahf add jecxz lret je push enter or add sbb mov mov mov in add jb pop sbb dec fs fsubs rcll adc push dec xchg inc sbb mov hlt cs sbb fwait mov jp in icebp dec inc in js cmp test addr16 mov bound loope inc je push lahf stos dec push add rorl push or dec fs jb leave push dec pushf dec ljmp dec push stos sbb and push jp cmp mov inc add xor sbb in fstps inc or in ja fwait in mov mov inc mov les xchg int pop jnp push cmpsb imul and push cmp xor and ds mov jge (bad) dec mov ret push push adc cli adc dec inc jle in push (bad) lret lret loop leave adc es fdivrs aaa pushf fidivl (bad) idivl popa mov pop call add pop loop insb in push xchg int3 icebp sbb push adc xchg ffreep nop loop imul or mov in jbe push jl xor adc jbe fistpl jb adc into mov sbb or jo out ret iret pop inc notl out inc lret pop lock mov push imul sbb add mov xchg lds mov and loope stos add imul adc out inc xchg fistpl out or gs aam bound jno xchg repz mov lahf or mov fcoml cmp dec xor in fwait cmc cmp outsl push mov xchg mov out add inc fadds adc xchg shrl fstl push loope and out cmp cmpsl lods js and iret stos stos xor cmp mov mov ss jno mov fstps sub pop inc addr16 les ret lods out aaa sub out push iret cld sub push adc mov ljmp hlt dec sahf sbb rcll xchg add mov cmp jbe mov repz inc lret mov ret mov cmp mov or jg xchg subb adc int test fucom pop lock mov hlt push adc test mov inc mov adc adc scas clc adc adc mov pop fdivrl outsb pushf gs jecxz test dec mov imul mov fld or adc xchg mov insb icebp ret adc pop xchg fwait inc push adc pop and jg cmp xchg lcall ja cmp adc insb ja sub mov std xor jle push add (bad) mov jg xchg push sub ja and dec scas mov adc pop sub ljmp icebp pop pusha loop jne or test jns and xor xchg xor dec mov xor inc mov inc stos add not int lea fiaddl mov and sub mov clc mov mov xor jb sahf testb mov jno pop inc test dec ja xor icebp lret mov je dec mov mov jge (bad) (bad) negb add idiv sbb sbb xchg mov jmp shll push lods pop loop mov mov jns pop addl cltd (bad) push jns movsb test dec jmp sbb dec xchg and push daa jge aas mov push shll idivl push mov lods outsb cltd jp int3 inc sub fstpl inc fcmovnu and sarl push outsl lret cmp mov aaa mov enter xor push push (bad) icebp and sti dec adcl sub (bad) pop cli mov pop inc jno mov cmc and bound pop sub ja les xor (bad) bound inc loop dec idivl mov loopne add jbe iret cmp shr or imul sarl leave jl cmc stc es bnd xlat mov mov jge pop incl loopne movsl sbbl repnz cmpsl add nop (bad) repnz imul pop jb dec fcom mov dec aam mov inc cmp and sub and arpl push mov mov lods roll jg add cmpl inc pop (bad) jle loop xor mov jg nop dec outsb jmp pusha pop dec xor imul sbbl add out ds mov mulb int3 adc xor mov ret aas cmp push xchg dec lods outsb sub mov adc and jo mov pushf das mov aad jo pop cmpsb mov shll repz cwtl ss push (bad) sub jge sbb jae cld inc int3 push xchg js jge xchg jl cmp ja lea call mov or and jmp xor mov xor xchg inc add jo das loope push sub xchg xchg subl cmp add pop sub out rorl pop (bad) stc jo les out add (bad) sub repz jp cmp push out xchg sub cvtpi2ps pop dec gs dec mov add dec add arpl rcrl xor imull mov out cs clc (bad) clc fsubrs and and pop mov add repz mov (bad) xor lock (bad) bound test mov jl jp mov push (bad) dec jecxz mov insb dec loopne out ja jno pop cmp sub in push fdivs (bad) adc std stc dec mov jo jge pop mov pop push and sub or adc rcr movsb push lds mov xor xor int mov mov loopne repz push and cmp fstpl jge sysenter mov test xor aaa sbb lret mov lods pop xchg cld outsl test or xlat test (bad) pusha cmp rclb rol test outsb ja sti lahf mov xchg xor mov repnz repnz pop mov lret and mov or fcomp mov mov add lea shrb cmp (bad) hlt and inc rcrl pop cmp sbb repnz lea push ret fidiv cwtl mov sub pushf fsts inc pop adc lcall fisubl cmp jle xchg jge popl aad adc xor incl in ja and dec pusha rcrl inc add push cmp rorl or int outsl jl sbb pop pop sub push ror dec mov jg aaa mov push lds xlat cmp ficomp call dec (bad) jb dec adc push les pop mov cld lods fnsave xor and xor or rorl add push inc cs jne stc orl mov div test push inc xchg lods push sub sbb mov jno pop cmpl jp scas pop lcall and (bad) mov or xor faddl jo dec mov out lods pop mulb xchg sti cmpsb stc sub rclb jge aam pop aam lds xlat inc sar pushf jmp scas je ret (bad) push jno sbb or mov xor lcall lods cmc dec in aam adc mov pop (bad) into arpl cld out je gs popf add jmp movsl cltd je cmp cs cs inc mov ljmp fwait or mov addr16 out and jo mov sbb in dec sbb fcmovb or sbb iret clc mov dec mov pop je into fcom dec hlt sub sbb mov pop (bad) int out insb nop mov adc jp jbe test mov outsl roll pop leave cmpsl push pusha xchg ret daa mov xor lock fstps mov mov mov mov and (bad) mov xor (bad) xor ljmp test lahf jne fldenv or or cld mov xor sub push in jne add nop jno stos movsb sar aad pop sti sub or (bad) cmc adc fldl xchg xchg (bad) insb repnz add cld mov cltd xor mov push mov push data16 mov xchg pop xor data16 jmp fstp push aaa imul movsl jnp mov push push loop xor or or mov out and (bad) pop iret fldl sub jne mov push mov inc out mov dec xor (bad) mov push mov dec cvttps2pi mov xchg push jnp xchg sbb aas out mov cmpsb jmp pop push into and mov mov sub aas adc stc sub jmp mov pop lret icebp inc in inc push out out mov pop add mov ret jo dec data16 (bad) jecxz jl (bad) sub inc (bad) jb sbb adc (bad) ja push cmp adc push inc subl loopne push lea cwtl jbe ss cmp adc lahf test mov jg lret jb movsb push push aas fldcw enter jno dec jge pop into popa lods out xchg inc mov pushf test addr16 mov sbb int call lret shlb loope mov push mov xlat jo jbe jno loopne (bad) loop or jp mov sub loop cmpsb gs cltd ljmp out dec cmp inc es (bad) (bad) icebp movsb hlt aaa fs in xchg ret fildl push xchg push mov (bad) adc sbb out xchg and leave mov push or or cmp cli scas sarl jns jae jae jmp and arpl call add sbb stc mov or gs out inc arpl loopne mov mov daa cmp jb mov lock rcrb (bad) loopne and jg sbb jmp rcrl and les mov lcall xchg lock lds mov stos aad or test push fisttpl cmp push (bad) jo hlt shrl lahf shl pushf or bound adc movsb (bad) negb add cltd mov dec push loop mov rorb jp adc test jmp sub pop hlt push mov fcoms adc sub or xchg loopne cli orb not ds dec sub in xor xchg popf js sbb (bad) cmc imul andl data16 pop lods dec pop jmp cli nop mov out and jge mov repz in shlw daa shlb out dec adc cmpsb pop or and sub (bad) add int3 enter cmc xchg aam push mov repz or mov call cmp cmpb sub pop mov lock sub int out outsb aaa jecxz jbe (bad) pop pop pop leave xor mov push or jmp sbb push mov fcom mov cwtl jae sbb mov in xor fisubl int dec jp stc insb pusha rcrl or out fcom adc loop xchg repz jle rcrb test lret jl ret test push xchg or sarb add mov out ficompl rorl sub jnp pop aas popa xchg fs ficoml dec cli sbb les xor jge out leave jl push fs popa iret lcall jp xlat sub mov jmp mov xor pop daa ret add pop stos xor (bad) push mov push sbbl ds popa ljmp mov cmp rcrb daa adc dec ret add adc sub fidiv outsb xchg stos dec adc jmp adc (bad) faddl add xor std (bad) jle jmp inc xchg ljmp push cmp les scas dec inc xor dec inc test mov sarl ret adcl cli xor mul (bad) int3 ficom add popf (bad) xor mov into test addr16 cltd scas mov icebp inc adc mov daa dec xchg inc lcall xlat jge scas sbb inc xchg pop xlat insb insl rolb repnz call cld jno mov xchg ljmp xor mov imul jg jp xor sub insl xchg ljmp (bad) stc (bad) ja lret sbb cli leave scas mov mov add rcll adc rcll add and add dec push xchg mov ds out fiadd sti adc test mov in cmpl lods pushf (bad) adc test frstor loopne jo popa mov ret jbe adc enter stc fs and cmp adcb adc cmp lods inc jne stc sub pop inc jg scas fwait pop push mov pusha mov lea dec (bad) imul add mov or gs ja int fcomps inc lret stc sub mov aaa push jg pop insl cmp arpl add clc sahf les dec sub insl insb cmc pop cli or or inc inc into pop pop mov (bad) in out nop outsl sub jns mov pop jmp push or mov cmp scas inc mov xchg scas sub stc test sti repnz push xchg loopne lret shlb adcb push std insl push inc jge call out adc fmuls add movsl cmp jne mov fadds test and inc leave mov gs or stos les cmp rep incb int3 push jns xchg jnp psubw sbb xchg jge in push imul inc aas xor push and pop lahf sbb lods pop and jp ret add pop (bad) sub cmc mov testb push adc mov xchg sbb dec xchg fdivrs mov add fwait lods iret loop in push pusha push jp rcll and mov loope sbb clc in xor imulb out insl pop cld hlt adc add mov arpl lcall mov cld lock rclb (bad) (bad) mov cmpsb mov mov popa sub pop (bad) dec add push arpl ja mov rorb dec loopne pop push push mulb cmp cmp lcall jge xchg stc add shr mov add push jae pop (bad) sbb (bad) cmp stc mov fwait cmp lret and int3 ficoml inc mov jl pop mov rolb xchg sbb add mov xor fisubr fildll pop imul ds xor cmp xor sbb ljmp sahf idivl cmp fistp scas dec xchg (bad) cmc repnz jno arpl loopne lret pop sbb lahf xchg leave sbb mov sub mov dec cli jno (bad) repnz jg sbb and cwtl loop xchg sub or cmpsw nop mov les idivl (bad) or xor push ljmp dec sahf bound cwtl data16 push leave sarl clc push bound imulb fild pminsw dec mov or xchg ret loopne mov fcoml dec mov fidivrl rorl fistpl add test mov sub lret or in dec rcl lcall adc push xor js xor sub pop push test inc inc pop bnd jl movb movsb cltd loope xchg dec sbb divl leave popa js sbbb mov pusha pop or or mov adc or cmpsb sbb test insb sbb add add cmc push and dec fidiv add shrb js adc ja xor push or push and mov jg xor xchg or (bad) add cmpsb (bad) aad ja pop stos adc out leave insl or adc insl adc xor mov loop std lock lock in imul cli jle nop push aaa add cmpsb icebp xlat popa cmp je jb mov test inc xchg enter sub and xor imul ret inc (bad) ss (bad) insb mov sbb cmp mov lcall dec cld jp dec insb dec mov inc scas outsb fwait lods in imul cli or in sbb fisub sbb mov test sahf popf adc xor xor out push or das xchg dec inc fldt xchg dec push mov push mov stos fcmovne mov test xchg ret insb bnd sbb adcl out add aas pop stos cmp repnz sbb imul jp add das cs gs test in mov insb sub mov call aaa mov sahf enter fcoml call add and sbb jle bound data16 ret xor add test lods popf repnz jmp xchg jecxz out pop popl xor insb lahf mov ucomiss inc sub jp push push lahf mov mov in sar sahf sbb pop or adc inc arpl sahf sbb ret call (bad) and jnp sbb sub stc pop int mov sarb pop test xor pushf add push sub push pushf pop aaa jo fwait rol in fs xor scas (bad) stos dec fidivr push icebp mov jecxz push cwtl (bad) adc pusha and jnp fdivs xchg lahf stc outsl ss ja cmp lea xchg (bad) xchg mov or mov arpl adc sbb mov mov movsl (bad) leave ret (bad) xor lock mov sub adc in jne insb das xchg mov ret inc out xor cmp sti sbb test inc cmp add dec mov leave lea fcoml les cmovg xor int mov cmp xor push jnp dec pop cmp pop in dec and dec pop xchg fwait stos and push iret ret mov mov xor insl mov aam pop or lods stc xor mov fnsave enter cmp inc mov rcl lret enter mov fidivrl sti push es mov rcrb gs int insb pop cmpsb or fldcw (bad) (bad) lods cwtl or xchg push push cmp sbb mov push mov push shll out xchg cmp or mov xchg fstpt lock je scas sbb scas dec clc outsb adc mov xchg mov adc and aam pop and mov mov cmpsl mov pop jmp leave icebp lcall xchg adc test jae sub mov mov cmp xor sbb repnz xchg inc fisttp scas in insl sub jmp int clc (bad) ss inc xor mov je (bad) dec je loopne,pt adc iret out cmp cmp adc fwait mov fucom shld mov out xchg jae or push jecxz testb add xchg repz pop sub cmp sub cs cmp adc dec add add out pop push mov adc (bad) or inc adc lods xor mov daa loopne mov rorb je int clc lcall pop and ret mov dec in outsl inc cld aam push mov repnz cmpsl xchg test xchg xchg push (bad) outsb pushf imul and sub push aas rcrb mov or fwait std test or sub fsubp subb out ficoml add cs scas adc aas jae jo scas out in inc movsl ds add cmp leave lods scas imul insb push mov enter popa test sub leave mov out pop movsb sbb xor pop mov push lret je sbb mov pop in bound mov test mov pop fldl adc ja inc fs push cli or icebp cld fimul adc sub mov test ljmp add mov ret and lods aad repz movsl js xor dec lret clc pop movsl dec sbb imul stc xor stc lahf and test inc xchg pop movsl adc xchg xor bound jne loop xor inc xchg adc neg push and xchg inc and iret (bad) mov mov cmp call test pusha out mov cmc divl pop aaa or pop data16 fcomps inc adc popl mov xor xor push push add add push sar inc iret xor push add or cmpsl adc bound sarb adc mov pop ret dec repnz sub xchg clc fs pop mov or cmc mov (bad) leave sbb scas xorb xchg shl sub test test jae and roll cmp mov ss xor cli mov cmp frstor or scas mov lea test pop jp lea add (bad) cmc mov adc push pop fimul mov (bad) adc lea test movsl aam pop lods mov sbb sub std mov divl mov aam addr16 (bad) and xchg int3 popa call push sbb mov sbb sbb jns cmc sbb xchg enter pop and icebp (bad) dec lods push xor xchg scas je cmp pop rclb sbb cmp iret dec out pop sub (bad) push clc push cs jae (bad) movl pop adc inc xchg icebp add adc mov pusha aas pop (bad) scas out dec fldl adc or pop aas mov fwait pop or lods std mov add jae loope mov push call or cmpsb pop sbb push sub addr16 (bad) or aaa ret xor cmc jl int3 sbb xchg mov (bad) mov adc adc jae mov jae lcall cmpsb and jp mov sbb or mov mov lods aaa sbb in dec xchg pushf xor xchg pop test outsl adc std xor sub cmp mov inc clc jae cltd xor clc stc add mov xlat aas ret add mov inc inc pop xor jge aam (bad) in and pop imul mov mov aad dec lahf sahf clc ss dec rorl cmpsl jae mov movsb push das sarl push nop shrb stos add ret mov shlb mov or sub (bad) adc call add mov jge mov popa mov lods cltd mov push sbb adc in insb sub mov fsubrl stc rorl subl add add lods pop push loope andb inc xor sbb divb (bad) dec pushw pop in push xor mov push or xor out xor sub loop push pop jae insb push test dec call lret mov cmp mov outsl sub dec shrl push or pop cs lea imulb adc rcl jle js xor or xlat jmp sbb sbb xchg imul inc lahf jbe xchg mov daa cmp dec pop icebp cmp loop jno arpl not cmpsl shrb lret and xchg out sub sti in fcmovnb andb insb stos int push and ret les mov sbb sub (bad) push xor sahf lahf aas push pop xlat fadds xor adc into test cmpsl cmp adc pop (bad) mov shrd inc jge and cmp lret mov loop mov mov mov jp push mov jno lods cld mov jne or ret mov incl push sbb jne pop pop (bad) xchg into fisubrl loop jae test icebp es lds inc and loope ret lret inc (bad) insb add add sub push les inc aam xchg sti insb push in and sti mov dec ja xlat jg add mov jle dec and or add loope in rorl cs sub adc inc addb pop lahf ffree jmp daa jne jmp push push lds push nop xchg cmpsl les push and dec xor in arpl cli sahf nop or ret dec iret dec out mov out in push jmp cltd xor (bad) iretw cmp sti (bad) xor enter ret icebp and sbbl stc cmovnp cmp sbb sti addl mov xchg loopne hlt xor sbb ss hlt dec sti loopne movsb pop inc sahf (bad) xor jg adc or movsb jecxz addr16 popa xchg or das (bad) or in lcall stos popf lret pop xor dec pop test cli pop mov cmp pusha nop sub lods lahf and lcall mov jne add cli clc inc ja pop cld lock fisubr and mov lods pop movsb rolb jl imull mulb jae lds subl dec sbb mov xor xchg mov cmc andl inc (bad) sub xchg jne movsl xchg test push fwait lods or sbb insl (bad) aas pop inc jb cmp push xor mov mov cmc (bad) movsl inc adc mov aam jae push cmp xor lea (bad) sub and mov aas pop jno mov adc mov loope and adc (bad) jecxz cmpsl mov pop andps outsl push add mov das cmp add psubsw jnp cwtl imul pop dec mov jo rorl lcall fwait rol jb in test popa (bad) cmp incb sbb jmp pop daa jno pop data16 sub roll push inc or or sub xchg lret (bad) ljmp jnp xchg in inc arpl leave xchg push in dec jne cli (bad) js stos mov rep stos outsb pop inc jns pop push push xchg pop pop cmpsl pop enter cmc hlt stc into mov or sub mov stos mov (bad) lret and xchg xor popa rcrl jbe adc sbb cmp ror mov mov mov in sbb mov pop enter outsl fbstp (bad) movsb mov aad (bad) pop adc jae std sbb xchg sub or aaa mov pop mov lds jae push and xor or mov xchg adc xlat sahf imul out cmpsb sahf jl inc ja leave jns lcall inc mov sub xor adc iret into (bad) mov aam cmp inc mov xchg outsb aam mov out icebp add les out pop xor movsb mov popf mov cld ljmp xchg jbe add leave (bad) jecxz push jp inc add sub les add xlat jae lds push pop scas out scas hlt cwtl arpl sbb mulb nop outsl aaa (bad) cmp cli subl (bad) loope and dec cmp inc jg,pt xchg push test outsl add mov into push rclb fwait mov bswap (bad) or xchg pushf int pushl add cld pop ss dec icebp xor jecxz mov cmp dec iret dec xchg xchg push int3 call jno jns insb sbb call mov pop xchg mov arpl sub sbb sub lds fnstcw loopne xor popa fimul or sbbl mov (bad) bnd and xchg idiv in jecxz mov or jecxz popf xor mov ja lret xor das in pop pop cmpb or clc lahf int outsb leave inc xor movsl jb ror xor mov mov push int in lret mov push (bad) fcoml mov rcl mov ss xchg jne inc lret dec popf pop mov sbbl jmp sbb dec lahf and pop loopne xchg mov inc arpl inc ret dec add cmp div out test xchg aaa call inc pusha xor scas cmp jno mov xchg and les lds adc lods (bad) cld jge repz das leave ljmp ja add and fstl pop adc test push out je rolb or cmp pusha pop and push stc (bad) sbb je je push pop imul sbb sub movsl ret pop mov lret xor fimull add sub and cmpsb mov xchg insb in adc or mov xchg xchg (bad) jae xor mov push cmp inc adc insb jmp out adc (bad) aaa mov cs cltd cwtl imul cmp lahf cmpsl ljmp push inc dec sbb xchg es fidivl mov xchg cli adc xchg (bad) repz cmp aaa add scas ret dec or mov inc sub movb pop sbb pop dec clc sbb leave ja jb aas ja jp push stos jae xor data16 cmp jg xchg pushf lea inc and loop inc push dec out aam push mov and pop enter es inc xchg cs imul iret and adc mov lods fsubrp adc repz push jno xchg outsl inc push stc add and mov push push lea and and or fisttp pop cmp and sahf pop xorl push sub aaa mov arpl sub jmp sar cmp pushf or sbb dec dec sahf (bad) nop adc test or repz mov pop hlt (bad) cmc arpl fcomps movsl sub ret mov out pop or push std nop xor jo push les dec or ret jecxz (bad) mov mov jecxz stos fdivl inc stos subl mov int mov mov jb lcall mov out lret mov in xchg icebp cltd mov mov and push xor mov adcl icebp int sub adc insb mov fdivp cld and cmp and mov andl in dec shrl jnp jp mov mov out data16 push ljmp push xchg inc push mov inc ds mov jb (bad) cmp daa fstpl je push (bad) mov (bad) xor pop in sbb or repz pop mov jnp test test jno test mov cmp or sbb sub ljmp and bswap movsbw lea push movl pusha lea call jmp movl jmp mov lea call cmp push push jmp mov clc sub pushf mov pusha mov lea jbe stos pushf lea jmp call or sbb in sbb jg arpl test add pusha aad jle (bad) je les cmp cmp iret push andl cmp jno cmc adc mov sub inc leave loopne pushf push inc mov sbb push xchg out dec pushf pop sbb dec inc push xchg arpl aas addr16 or sbb push sub push xchg add xor adc pop inc pop fucomi mov mov les stc shl neg mov pushf neg not jmp bt sub jmp mov or adc or js cld or hlt push lods test inc or push fidivr (bad) out xchg sbb lea in adc fistpl mov insl pop mov les in and aam push xor lock push cmp inc xor outsl dec sub xchg call xlat std nop adc cld nop xchg mov arpl sbb lret loop outsl pop cmp lods push mov fidiv push sbb add jl inc into xor xor icebp push cli pop loope mov das xchg ficom popl outsb mov xor and jmp mov (bad) je lock hlt test xor push rorl dec jmp pusha lods movb mov outsl xchg (bad) stos popl pushf in jp pop mov sti dec mov sbb ds dec sub fcmovu push cmp push das pop jp jnp dec xor mov inc fwait pop inc inc movsb in and mov and push xor out insl sub data16 int3 dec xor ljmp (bad) pop ds dec sub fwait push xchg adc and mov mulb pop into jle pop scas cmp push mov push xor xor stos mov sbb stc pop call lsl std xchg or mov cmpl xchg js xchg das xor fsubl dec adc xor xchg imul mov enter sbb in cwtl jbe sub or xor rcl (bad) aad loop ljmp pop add ror xorl andb cmp and sub xor sub mov adc pop mov stos (bad) dec loope jge mov jle pop sarl sbb lods sbb push sbb jl xchg xchg or lret xor and pop jne fldenv mov sbb xchg xchg incb mov ss jle sub mov enter adc dec insl dec fist ljmp cli cwtl add rcl jl pop fdivr iret fmuls xor mov xchg lret cwtl pop mov push jge nop mov fimull imul mov xchg nop mov lods inc lea xchg sbb popf test cmp outsl xchg arpl and arpl (bad) icebp lods sub sbb (bad) sbb idivl js pop mov aas (bad) adc jmp testl hlt dec pop aam pop push es scas xchg or or mov xchg fstpt mov rcrl test lods repnz test clc mov push aad cmp es adc sahf cmpsl out sub sub pop push mov push or inc sbb gs (bad) adc mov imul pop xor push push bound rcrb test or push sbb sub xor push hlt (bad) scas and and mov and rcr loopne testl inc lods aas sub mov (bad) jno lock xor inc xchg xchg inc stos inc cmp sarb dec mov push jnp shrb je push sti xchg dec dec (bad) jl faddl xor xor push int inc aad popf arpl jmp (bad) mov xchg imul push lods in dec outsb les add cmpsb or mov mov push inc add xchg add not mov pushl stos pushf lea jmp pushf pop scas jnp or and mov aad nop jbe push and imul pop (bad) imul mov scas dec in scas add (bad) arpl xchg push inc pushf fidivrl icebp xor imul sub pusha addr16 jae jae ds and aas mov mov dec dec xchg or clc cmp in lds or add les fs jp gs icebp xor aaa out mov jmp es inc pop cmp or inc stos movsb cmp push or mov dec mov inc test mov push xor in sahf and push push sarl test or push cmp in in push mov daa mov push (bad) aas shr mov addr16 ret lods ljmp add lcall mov push cmpsl lret (bad) push loopne fcmovne outsb aaa dec dec cld pop cld pop mov std ss int xlat mov outsb or daa arpl sbb lods sbb inc sbb nop shr adc mov clc sub call pushf lea call jmp pop xor inc out test test inc push arpl mov dec dec jnp and test lea insl lahf xlat fsubrp mov push push mov mov mov push repz or mov sub pop dec mov xchg cmc lea jg into xchg and add jnp mov adc test mov sub hlt imul lcall adc repz arpl adc addr16 fidivr pop test roll inc xlat dec loop loopne sub cmpsb hlt sbb mov mov jo push jecxz mov pop scas cmp or pushf dec fistpl cmp xchg ljmp cmp adc sub fisttp sbb lds xchg lds nop dec popa jb,pt into push outsl iret ret mov mov dec adc cmp aad xlat xor dec sarl inc ret lods push push pusha popf xchg int movsl daa pop (bad) fistpl into pop or (bad) or mov inc divb cmp sbb ss mov xorl xlat insb insb mov inc outsl mov mov dec dec or xor pushf pushf lea jmp mov shr setno add mov test test stc test and test add pushf pusha call psllq je or sub jo mov xor mov or pushf shrb sahf mov xor cld push aaa hlt dec dec mov dec aas dec cmpsl push pop xchg xchg out push and lock inc (bad) ja and sahf pop mov mov fwait stc mov icebp (bad) pusha sbb mov or jmp icebp (bad) jp push xchg shlb pop outsl (bad) inc xchg or lcall stos lret ljmp scas push push pusha sbb les fsubs cmpsb pusha mov fcoml fs and xchg fnsave cwtd lret jp sub testl sbbb mov sub je or cmp aas dec inc jne dec in stos push cmp jns and inc fs outsl mov imul cmp js sbb and xor xchg inc loopne inc and in fistpll stos jne inc mov sahf in xchg out pop xchg mov jne jne dec xchg divl cs adc imul add clc and leave fld cld lret and inc push cli xorl dec pop testl dec imul shll (bad) shll push nop mov pop xor cltd shrl lods leave data16 mov xchg popa push dec rcrl jnp xor dec repnz aam pushf push sbb inc cmp es out inc in sbb jno push (bad) sbb shl iret add ret inc add addr16 or bound loopne jg adc not mov in pushf aaa push movsl mov and push ds pop nop andl inc push out or or and sub dec fwait pop xchg xor adc sub dec cmpsl mov xchg cld in push (bad) aad icebp bound inc cwtl cmp nop fs mov adc xchg jno jnp ret cmpsb mov lods xor frstor xlat pop or and mov or add adcb cmpsl mov jle and frstor jg jbe (bad) mov stc lcall sub (bad) mov inc clc or fcompl push rorb adc pop pop jp xlat adc fstpl popa and dec lock jp leave test mov subl push inc xor sti or or movsl in (bad) push cli inc push cmp add xchg cmp fiaddl (bad) cld popa sti dec test and sbb repnz mov push adcl add xlat fs cmc shl push sbb fsubl pop dec in pop pop mov arpl pop or pop inc popf cwtl mov xor fs aam xchg push adc mov inc stc cwtl xor cmp jnp in mov testl scas (bad) push cmc insl adc dec clc pop sub mov pop xchg mov movsb (bad) fsubr xchg and fwait pavgw mov jae pop jae xchg lea or mov std pop repz lods and lret mov stos (bad) inc cmp inc in cltd (bad) adc jne and in gs cmpl jo add jnp bound push jae popf test fcompl aas add into adc clc xor jbe add rolb push sub xor bound stos xchg test sahf push imul inc test push fwait (bad) push stc mov std mov jnp stc and dec (bad) mov imul fdivs jnp cmp jmp aam mov test pop stos js or mov inc fsubs or mov sarb jns dec and or inc call xchg and xchg popf mov call hlt hlt into jbe movsb pop mov xchg fwait nop push cwtl insb jo xchg mov out sub dec inc fwait loope cld ret scas jns (bad) xor addl insl cmp lcall data16 scas (bad) jp jge decb sbb xchg add (bad) and add and psubsb add mov inc hlt and (bad) pop dec and rcr adc js sbb mov xchg mov push cmpl into arpl jae addr16 jbe mov jb sbb stc xor inc (bad) cmpsl jp add and pop enter addr16 fcompl pop es sub xor or jb pop push add rolb repz and test mov xchg out cmpsb and test fsts jno mov pop jb add and inc in jnp cmc and std (bad) jae out mov gs lret dec push aad add xor push push jne mov push jp jmp pop loop or xlat mov xchg fs movsl out inc adc pop cmp xchg jmp daa lahf and popf cmc push pop ret rcrb jno popa test (bad) push aas test cltd (bad) jp hlt mov xchg test xchg das fmull icebp fldcw loopne add jge jb enter pop mov lret xlat xchg fdivs push imul dec addr16 inc or inc mov movsl xor xchg push aad xor sbb call outsl push test xor add xchg sbb xchg cmp cmc push mov mov sarb inc or mov and sub dec (bad) ds cmp xchg pop add inc inc xor jne call neg mov rcrl les les das sub or xchg sbb dec int cmp pop lock mov push lods xlat add mov push movsl les mov jp adc pusha lds add push push sahf mov mov mov pop jecxz push pop push (bad) xchg mov pop fdivrp jle xchg xor pop jle fucom jp push inc clc aad adc pop sahf cmp push stos out cmp xchg cmc aaa dec cli in pop js and pop lea inc stos jmp mov mov or inc adc adc push js mov icebp icebp pop sbbl mov gs inc into test inc jne jg xor in movsl nop fistpll fwait loope inc test jo cli add and mov outsl divb pop iret test fmul mov pusha dec lahf iret xchg ret (bad) mov in outsb lret inc mov scas loop fsin ret insb jge jl shrl sbb out out rorb lret dec adc stos std add (bad) gs add push loopne cmp in es leave leave pop test xchg mov and xor lods and cld sbb and push imul call (bad) dec xchg sub sub sahf sbb lret pusha jae xor lret mov mov flds sub fdivrl dec add mov fdivs and xor cs (bad) xchg inc lds (bad) lret stos call lret cmp movsb mov mov lods and push or pop aas jnp add push mov ja (bad) (bad) adc dec fbstp xchg mov movsb (bad) and test movsb in jg add xchg cmp push rorl in dec push or int3 adc jg ror mov and negl sbb and fcom mov mov inc jmp inc js mov loopne loopne pop xorb repz mov and lods pop jl xlat test mov mov cmp mov add dec jo loopne mov bound add cli outsb and out sbb test adc (bad) gs push lret ret pop inc jl xchg jmp mov sbb std jbe shr push fldt add insl push adc js fisttp or repnz sahf mov imul ror push jno mov nop or pop and aam test rcrl nop and cmp mov pop icebp pop or ss pop sti jb loope jecxz iret inc and push sub negb out ja xchg xchg nop (bad) mov pop in in inc push mul imul ret adc sub cli adc pop in sub pop in push sbb add (bad) stos or js cwtl mov in sub inc cmc loopne out xor loop xchg popa mov aam pushf push xchg mov insb jmp (bad) and sbb dec add pop cmp xor leave cld inc scas pop lcall lea xchg aad jp (bad) sbb fiaddl inc pushf nop or sub popf nop jno rcll mov out jle add (bad) repnz (bad) (bad) scas xorl cltd add cmp lds adc cld xor loope sbb in xchg cs fwait jp incl out scas shll inc xchg fwait in jg sub arpl mov sbb jae or dec (bad) mov xchg dec xor inc bound out mov lret (bad) or xorb mov mov xor in jb push in or (bad) pop jne xor (bad) sar push sub mov mov scas sbb jle xor sub sub add push loop or enter cld sbb les push repnz movsb or insl (bad) out or movsb test cli sbb push loope outsl jne ds push jns (bad) sbb adc scas add cltd iret sbb fscale xlat adc aas rolb jg cltd repnz data16 push fnstenv aam clc aas sbbl in mov nop into mov rol inc push incl push push das or sarl imul add xor (bad) sub mov or pop jl dec mov adc call pusha mov add sub xlat ficom stos in adc pop xor xor xor jl mov lahf insl divl out xchg test cs mov daa adc gs iret lea pop in sub push adc adc (bad) je pop pop mulb cmpsb loop scas outsl mov dec inc adc pop dec int3 mov (bad) cmp pushf mov (bad) and into inc pop test clc dec stos lds push mov stc push (bad) int3 push scas shll call leave nop adc sub push fisubl scas mov sbb ja bnd jb xchg fistl xchg cli mov test std adc mov stc mov sub and sub xor stc mov aam fildl test mov clc mov inc cmp push cmp js mov outsb xchg adc push cmp xor add lods cmp aam mov mov pop cmp mov lds scas stc int add cli aam js push jl fimul dec call cld repnz insb fwait (bad) bswap sub jo add popf imul (bad) or rolb lods imul scas adc imul mov rorb dec mov insb insb jmp xor loop in dec pop xor test ljmp add je mov inc ljmp scas inc pop test cs dec lock inc mov fidiv mov psrld movsl xchg push aad inc out insb mov mov mov ja dec (bad) add jmp xchg or mov jecxz jle (bad) out cmpsb jl cmp nop sbb push js int push pop out shrb ljmp jae jbe push adc xchg out movsl sbb fistp inc (bad) jmp mov jnp jecxz xor pop jae inc sbb add jae test and mov inc test mov pusha bound and cmc pop (bad) in ret mov int sarb or scas lea push mov mov repz adc jo cltd pop push aaa pop (bad) es rorl pop sbb adc add fidiv xor mov dec insb pop scas je jg and mov mov and mov jecxz orb negl movsl dec push push cmpsl sbb inc and mov (bad) addr16 test call push out ljmp scas cmp jp cmc adc call data16 daa fiaddl inc or (bad) pop pusha push loop nop stc dec je mov xlat and movsl dec inc cmp bound jmp or jmp pop repz dec mov loop je jo outsb dec pusha aas enter arpl or mov loope add mov std cltd dec dec test add mov xor repnz fmuls mov fcompl pop leave push mov std mov ficompl xchg fimul push xchg (bad) je lcall cmp mov adc xchg adc add cld imul aam jo roll loopne js cmp lret xor mov (bad) int3 sub ret cmp in ret loopne or push (bad) mov je jne bound insl mov shlb fistpl fistpl ss orl pushf xchg test rorl cltd add pand jno xor jecxz jl test out daa jbe sub jno fisttpl hlt sub scas cmpsl sbb push inc jo insl cmp lods sbb es or out aad mov in data16 out fwait jo ja cltd cltd imul movsb dec (bad) jns jo fcmove jne push out ja insl int3 (bad) and (bad) jl out lds pshufw jae (bad) out xlat pusha mov fdivp fsubrl lret mov jl cmpsb mov into and incl cmp ss mov jle and sbb loopne gs or dec or rol sbb adc outsl mov pop in lahf push cmp sub xchg data16 lods (bad) rclb das xlat imul xchg jno add incl rcr push or cmp push sbb push jae aaa and insl adc into das nop adc add mov xchg (bad) push sub pop push ret sub iret mov xor adc mov dec sub jmp xchg (bad) test inc push aas or cmpsb push (bad) cltd insb jecxz movsb jle sub mov fwait outsl nop push pop jge dec pop ret add sbb loop scas dec xchg xchg enter (bad) clc test stos aaa dec lret xlat push jmp rcll add aam nop das pop sub lods adc movl movsl ficoml mov push jne mov cmc or adcl hlt or mov std sti pop out nop push push mov gs sti inc or sub mov (bad) call mov mov inc sarl xor jecxz les pop xor sub adc shrl ficompl jle xchg xchg out jp les jno sbb push dec stos mov pop subl (bad) popf cmpsl mov enter xor mov dec mov xor cmp loopne mov mov popf aas fiaddl insl and inc dec fisubr insl loope cmp pop push lock cwtl ret icebp jo stos mov daa (bad) xchg mov test (bad) push outsb dec test add fsubrp adc and lea mov add ret pop rol adc inc cmc mov in xchg sbb std sbb es mov inc imul mov sarb mov mov mov movsb mov xchg in mov push psubd loope insl ss cwtl and mov mov out or jno jnp mov xchg repz (bad) fiadd fmul fdiv fnstenv movsb mov push les imul cmpsb cmp adc jno js xlat rcll dec mov mov outsl mov add xchg cmp xor popf rcrb sar jo outsl cmpsb test mov aaa or je nop cmpsb add icebp pop movsb stos cltd daa mov pusha fs stos fstl push xor mov fwait bound xchg flds xchg fild dec jmp lds jg dec lret sbb mov mov jmp stc arpl inc sbb pmaxub aad mov cwtl cmp cmp jp (bad) jbe fist aas xchg mov mov js mov push and addl pop dec fsubrl jns test and arpl aas adc rorl outsl xor mov ret sub add test cmpsb inc xor mov addr16 (bad) fcmovu pop xchg popf mov loop push inc fildl pop aam add aad adc outsb jecxz sarl fbld imull test bound or xchg idiv andl xor dec adc sbb pop sub (bad) popf dec imul aaa sub cltd push xlat xchg in cmp xchg pushf mov loop ficoml adc jecxz scas in lods adc or sub in jg int dec out lret es jle cmp mov jnp lcall adc sub and bound dec cltd (bad) push cmp add sub fnstenv inc cltd icebp mov dec loopne es stc jo nop aas aad cmpsb push mov orl or push pop cs les push cltd mov (bad) cltd leave into and pushf mov cmpsb cmpb push adc push rcr mov ficoml jmp clc clc fisubl pop aad cltd push mov mov test xchg mov jle sar clc jb outsl jp mov inc or (bad) punpckhdq popf push sub fcmovnbe cld pushf pop dec or (bad) icebp fs lret idiv outsl inc stc std (bad) and mov shll xchg scas int or add and mov lock addr16 loopne inc mov xchg cmp sbb cmp adc mov sub push pop sahf mov push jl sub mov sub sbb pop sbb jmp adcb nop mov mov dec jae fcomps je pop xlat xor es das lods (bad) icebp fimull call xchg fsubrp dec mov mov cwtl xlat push adc stc jo push cmp outsb jle add inc mov sub sub call sub push out mov pop and xor jmp out out sub notl and rorl add xchg or add std xchg mov andb push mov pushf add push hlt mov (bad) gs aam rcrb push add lcall (bad) sub fcoml or fidiv push jp adc sbb mov pop out fnsave out movsl xacquire lahf pusha (bad) mov sbb add mov adc mov sub cmp push inc sbb mov sbb cmp in adc daa fisttp mov push (bad) shlb movsb loop into cld add xchg push adc and out xchg ds es inc ret fs leave movsb (bad) aam sub leave in xlat xlat xchg xor mov std inc jp dec insl lret shrl rcl setl in push jo xchg xor mov mov int aaa rolb subl lods add into xor mov mov adc pop and dec mov lahf and ja jecxz das jge stc (bad) fcomps xor test adc into je xor xchg rcr (bad) pop jae xor push inc addl movsl repz sbb or push sub (bad) leave fsts lret mov mov xchg and mov mov lahf lret mov test mov sub in and lods sti std jge mov mov outsb enter loope cs int3 mov jo aad jmp cmp (bad) push push cmc in xchg mov inc lock push cwtl sbb movsb pop sub mov mov mov push dec push sbb lods cs push push add nop pushf adc push cmp movsb adc loop pop inc loopne push int out pop into mov xchg fs dec je mov lret cmc xchg aaa pop jbe shrl pop mov mov mov fldl js pop shl adc (bad) stos test cmc mov fimull and adc lcall push aaa mov movsb (bad) je dec mov (bad) in popa dec popa inc mov shl (bad) and lds add pop cmpsl iret jp cld cmp push stos iret push mov outsl jp pop mov jecxz scas into fsts stos dec sub cli push xlat push sub imul xor mov mov (bad) je inc popf les lods movsl add jg mov mov js sbb pop js lods test and sub and mov movl sarl xor cwtl push cmpsb cmp in leave mov xor cmp xlat test mov in lcall data16 xchg jb fwait cmp movsb notb xchg (bad) int3 push jle outsb pop and lcall jb (bad) xor push or dec add mov test cwtl ss rclb lock daa mov test dec ror jl and (bad) sub adc sub icebp popf pop outsl push scas sti push shll push fcoms cmp pushf sub mov or in cmc sti xchg imul (bad) (bad) xor add fwait push dec push dec lret jge sahf adc cmp jbe andnps movsl cli in fbstp jbe dec pop mov mov sbb in adc rcrb rclb pushf pop rorb fistp (bad) nop adc stos call aam in loopne repnz mov cs push cmp lock int lcall sub sub sbb cltd je dec dec mov xor ret push es shr adc into shl into cmp xor cmp xchg bnd call cmpsl nop dec addl out jp cltd adc scas loop sub mov adc and repnz and xchg cmp enter aam mov push jecxz notl adc ffreep xor sub jnp aas nop dec adc mov add xchg dec xor dec out inc fistpl sbb sub jecxz adc and mov mov shl sahf cmp and shrb pop mov arpl mov subb xlat jo fnstcw lods je inc stc lcall cmp and test push dec push aas in sbb jecxz or pop in js and mov int inc xor jnp lock pop dec sbb int dec and cmp (bad) jle or sbb mov jno ss pop gs pushf push gs push and mov lahf pop xor push insl test dec lret sbb movsb xor ss mov and mov je cltd popa (bad) ret push and lds into and stc mov xchg js sub int (bad) icebp mov xchg push push bswap xor xchg fstpl pop dec mov jle sbb sbb loopne (bad) in sbb push test incb ljmp daa std pop cmc inc rcr cmpb arpl fimull sbb loope inc mov inc adc xchg and push xchg adc xlat and rorb notl aam pop repz mov aad out rorb sub dec in or jne or das dec loope (bad) xchg dec mov inc dec movsb call (bad) mov stos int mov mov cmc fucom ds hlt and into push insb pop call lds movsl aad push ja (bad) lret push (bad) hlt bound adc sub xchg mov lods xchg sub daa mov pop int3 sahf into (bad) fsts or pop movsl hlt add fmul sub cmp pop and bound shll int pop sbb int push mov aam call and xchg dec mov pop lret inc je addr16 fwait mov int outsb imul inc lds and cwtl repnz hlt dec (bad) or jo and fs push push xchg pop pop mov mov insl fimul push sub push iret xchg add sub mov fistpl fdiv fcomps out popf scas out (bad) movsl lret and push dec pop idivl mov mov movsl das stos xor add stos (bad) in mov ja jae ja je repz sbb mov xchg mov inc add pop scas adc and push (bad) inc cmpsl sub movsl (bad) (bad) das push cltd (bad) lds xor dec rcrb lea (bad) aas dec sub mov push lea push and jmp sub push sub mov or xchg xchg cmp mov mov aas ret test int mov dec stc sub nop fcom add (bad) fs aaa ds arpl fs iret mov sub push mov or cmp adc and cmp loope inc sahf push loope (bad) xor dec mov mov mov daa xlat jle pop mov nop or pop out movb pop push orl dec and mov fstpl dec pop cmc mov mov in mov xor add incb in mov out cmp mov sub ds int3 inc push lret test aad (bad) cmc mov pop push cmp fldt lock loop roll push sti pushf test and mov inc shlb stc xchg (bad) das fldl2t test jp fistp dec pop scas or loopne fbld pop mov rorb sbb (bad) pop mov cwtl movups xchg push add adc popa addr16 test mov ds mov or jbe adc call (bad) out es adc push cld mov pop jl loope mov movsl jbe sbb lcall pusha or cld xor push lcall loop sbb mov ret pop ret push scas sub lret jae fnstsw xor ror sar add xor sarl (bad) aad cltd mov in pusha add push pusha add les ss fisubl adc daa inc sbb scas daa lods ljmp push dec xchg out sbb xchg icebp mov dec adc ja push mov push in cmp cmp xor pushf (bad) mov fadd mov sahf dec push adc inc jle adc inc mov pusha cmp (bad) push aas sub subb adc je outsb lahf movsb das jo add cwtl xchg dec sbb and scas jo inc push dec xor mov jno push addr16 lock rcll enter movsb ljmp jmp idivl xchg test cmp push and dec jb sti adc outsl pop and shl sub jbe (bad) (bad) dec inc cmp gs sbb sbb xchg lods or mov jp divb jne frstor xchg ret sbb aaa icebp scas fdivrs dec adc (bad) push fsubp jl je testl cmp xchg (bad) scas (bad) int3 dec mov loop dec or pushf sub dec xchg mov pop fnop test jo sbbl fwait shrl xor leave popf pop fisttpll in popf inc dec jne in pop jmp pop pushf fiaddl dec xor pusha dec jg sub aad add xor rcrl fcomps fisub mov lret mov jnp enter pop mov inc out xchg addr16 mov ja push fcoml sbb mov sub cmp or pop push sub mov daa stc sub pop sbb and lock fs xlat loope mov insb outsb cmpsb cmp fadds iret sbb pop add cltd inc (bad) jbe jge mov in dec push fsubrs xchg adc xchg mov fldenv enter push sub pop int3 (bad) lahf inc fs fildl push sub jns cmc jno fcoml fisttpll cltd adc das add jge in insb pop ret mov stos int3 inc xchg and sbb or adc test xor pushf dec and pushf movsb in leave mov mov mov movsb pop jg sbb or mov loopne add lods mov out sub adc (bad) repnz adc int3 jnp out pop adc jmp mov dec push xor scas sub fadds pop pop inc add xchg je pop out fwait cld pop pop cwtl shrd lret js pop jmp insb jg repz cmp adc push icebp iret adc adc je cwtl adc cmp mov daa or and push mov test mov int3 pop mov lcall push sbb mov cmp inc test cmp mov out mov (bad) pushf orb movl mov pop or ret mov sbb jns fisubr inc lcall cld lock cltd push sub sahf sbb dec cltd mov das or inc mov pop push test out xchg jne cwtl (bad) dec ret mov xlat jns pop mov pop mov mov lds dec xchg imul inc lret lahf aaa aaa mov in lcall aas (bad) leave pop fcoms push sbb push inc jns les mov cmpsl inc inc jns out in rolb xchg mov sti ds xchg push iret mov aaa ljmp in mov mov popf sbb fbld jnp aad xchg insb nop enter sub xlat cmp push cltd pop movsb xchg jge fmuls arpl sub inc lret mov xor push (bad) jl mov mov push inc jbe (bad) (bad) sub xor cmp aaa int3 adc sub push sub dec lds or pop clc std mul jmp inc xor inc jae mov rclb adc pop xor jns insl aad bound cmp out nop jg cmpsb add fcompl leave cmpsb sahf mov cmp dec mov shrb loopne xor xchg jg cwtl lea xchg jnp loop (bad) adc clc idiv in decb int mov movl jmp sbb insl mov paddsb repz adcl push xlat loop cld inc inc rorb mov out sbb test gs (bad) orl mov cli scas loopne sub and xor stos mov daa mov das sub fcoms jmp dec (bad) mov jmp pmaddwd jo std inc sub push dec pop mov testb movsb (bad) adc adc test (bad) shl jmp inc xlat mov je js ss ljmp mov sbb lret ret dec sbb inc test dec pusha std repz pop push aaa inc fcoms xchg jge jl sub in lea mov (bad) (bad) fmul push and mov push in sub xorl movsl cmc xchg mov inc in scas inc lahf or cld insb in cmpsl mov imul ret jp sub jnp sub cmc sbbl push dec or les in xchg fimul dec ss clc iret sub sahf enter mov psubb std call ret (bad) std pop jmp mov mov in adc jge lods pushf mov jp out xor (bad) and mov ljmp or outsl mov or insb pop xchg mov out pushf popa cs daa mov stos popf lods xchg stc lcall jae data16 cli dec mov mov mov cmp inc dec adc repz ficoml dec jb les push test (bad) push lcall inc stos nop inc lret int3 out sub ds or cld jmp xchg dec mov xchg inc or adc mov out pushf jno cs inc loopne (bad) psubd jnp decl iret sbb or cmpsb (bad) neg dec cmpsb aam add lock jecxz add sub push mov loop out pop mov lcall xchg cmp ljmp xchg stos push addr16 ret sahf (bad) repnz jne nop mov pop test add sbb mov stc lods (bad) xor inc sub jno xlat push cmpsl iret push push leave xor fldl sbb jb inc roll rorl loopne lods xor jne mov (bad) push test dec mov ret lret mov pop insb movsb int push stos (bad) or adc iret stos mov push loop push stc aam shll call dec ret scas lahf pop pop inc xlat aad insl aas fbld xchg shrl add adc (bad) sahf cmp xchg call roll push fmuls lock int3 (bad) cld jmp rorl test outsl bound mov test pop sub and mov mov sub xor xor fwait mov mov pusha rcll sub cltd xchg dec pop mov (bad) pop adc mov fcom lds out in and fsubl inc out jle xchg cmp movsb mov mov push popa xchg cmp std sub rol repz fs flds adc mov pop cmp mov sub addr16 or stos (bad) push push leave popa cld sub inc (bad) int mov fdivrs (bad) mov inc sbbl cmc nop jne pusha in jp adc pop sbb inc mov jno dec enter xchg push test (bad) out mov inc cli test dec popa push jl jo xchg data16 pop xchg mov mov popa in add decb sbb (bad) mov stc inc sarl push test in xchg outsl xor leave idivl scas push rcrl aad cmp (bad) mov sbb mov cld outsb jbe lods inc scas jno and jb pop mov fistl lock (bad) ret loop cli mov mov icebp and sti test dec or or xor ds test enter (bad) loope sbb dec fistpl fstl adc sub hlt cmp sbb pop scas mov es mov sub pusha sub stc lock popa pop sbb push (bad) xchg mov push jnp popf sbb ja insb data16 adc add pop jo insl pop add inc nop pop xchg or notl test ret outsb sub outsb call pop out cmp sahf rcrb jne sbb xorl movsl imul inc mov loope fs outsb arpl inc xchg and xor enter sbb mov repz mov mov push popf imul or scas inc xor test imul int3 sbb jmp inc jne xchg dec (bad) int3 data16 mov rclb jmp lcall xor insl add push jmp ror xor sub ror and cmpsl flds bound cmpsl ret je scas cmpsb push mov jle sub lock in xlat sbb imulb xchg add mov jns bound pop lcall nop jnp int3 push xchg sbb xor sbb (bad) or addr16 gs dec or or std movsb pop add fs arpl aas test cmp mov repnz push ficompl push sbb scas add jb xchg adc mov std xor xchg std jmp mov in dec cld mov popf scas sub jae lock and stos mov cmp mov out mov scas inc sbb add rol mov lea dec es cmp xor clc push jecxz in dec and mov idivb jge jl das and sub adc add mov mov insb outsl icebp mov pusha adcb lret es gs or insl add mov stos mov clc cmp xchg sub mov stc jmp mov sbb mov push cltd sbb jb dec xor mov fisttpl hlt adc outsb test pop and push outsl mov fistpl arpl or mov ror or icebp xor in xlat fild int sub jg jl pop rclb pusha testl addl outsl xor cmp mov pop lods les mov test xchg xchg and (bad) pop ret or lahf xor xchg iret push xchg inc popa fistl popl cs cmpsl cmp jae dec loop adc cmpl mov mov lods test sbb add push hlt mov je mov test leave sbb push mov roll add inc dec aad jo add cmp pop xor push pushf ficom pusha les ja sub imul std sbbl sbb aaa stc add aam je fdivp aaa insb xor pop outsb xor adc imul push test popf mov push movsl jg stos test int add aaa jbe add ljmp fcmovb fs lcall mov jbe pushf test scas mov push cltd dec and xchg mov cmpsl outsb inc movsl or or mov in jmp xchg test or or jge leave jo clc cmp aad mov shrb test jae cwtl jo cmp out arpl rcrl push jg cmp push jo,pn pop push xor shrb or leave and xor (bad) mov push es mov lahf and mov cmp xor dec lea mov push pop out or mov popa and repz pop into jno ljmp movsb jbe or jbe dec add mov scas fisubrl cltd cwtl insl daa dec mov (bad) gs arpl test cmc inc or repz sub jns lods dec imul jg pop dec adc lcall dec int test and in adc int3 cli and jmp (bad) and data16 push jno push jmp pop sbb or out xor xor in dec and or sub pop push sbb dec push pushf jle jns fcompl (bad) sahf negb xor (bad) jecxz pushf fs inc xchg fsubr jmp pop mov xchg in aaa cwtl imul div cli dec loopne inc lods mov sti jb mov sbb scas push outsb sub lcall and sub or lret and sbb outsl pushl rclb pop dec testb or scas test push in add mov xor jecxz push fs add cli test add inc test mov cmp in sub leave test sbb mov pop inc lret and std and es pop test repnz sbbl mov pop clc lods dec mov mov mov lods or pop cmp inc pop dec and mov cld arpl in sbb pushf push jne pop sub cwtl ret jno push cltd cmpsb ret mov xor insl repz cwtl xor fcmove jne mov pop mov inc loop popa roll xchg inc pushf ret pusha push into dec pop (bad) pop ror cwtl ss scas stc jae and cltd pop pop push pop ret cmp mov xchg xchg imul pop and cld ds jb dec iret jnp out mov add fbld xchg xchg jle sti sub repnz outsl sbb push (bad) sub (bad) pop inc adc pop dec imul push xchg (bad) mov and mov and divl mov cmpsb lret mov push (bad) aad int3 mov out jb mov mov jmp cmp test mov mov cli rcl pusha pop test aam adc lock jb inc pop dec jne pop add pusha out add push in daa rclb (bad) jp mov pop or ja cmp (bad) ret push mov push lock fwait or pusha jns ret dec push or insl mov adc cmpb das sub test icebp int out (bad) push jg inc xchg jno xchg pop js cmp and (bad) mov test jle xchg scas test stos aas inc adc fisttp cmpsl dec idivb cs testl (bad) cmp (bad) xor adc and pushf repz inc or mov lahf fmuls sub jp dec xchg xchg push mov mov sub shr mov imul push xchg xchg dec fidiv dec jecxz mov ds dec sbb popa xor dec sub out in scas popa jae out adc pause jno mov pushf (bad) adc jnp adc xlat xchg sti inc cmc movsl push test rorl ds cltd pop jp dec mov leave mov fcmovbe icebp or xor pop test mov lods xor lods inc or fwait (bad) loope test imul jg fbld lcall mov js inc xchg js mov adc inc cmp sbb ficomp pop ret lcall fisub add sbb testb mov (bad) pop push outsl sti mov outsb icebp cmp inc bound fwait ds mov lods jp cs mov roll cld in pop lods mov fstpt popf (bad) call push cs cltd sbb dec and popa cmp cli ljmp pop cmc pop sub push loope je jae pop fldenv insb jbe fidivl mov xorb mov jb out addl (bad) xchg popf or pop rcr xor xchg data16 cmp xchg add jns movsl into jae out sub std mov push aas (bad) stos and loopne in nop clc pushl gs cmpsb mov push and out sahf sbb mov std test (bad) sub js addr16 (bad) leave cmpb push stos xchg sbb pop mov mov sbb jge cwtl fs pop aad fs data16 popf jge and and sub xchg repnz popf cs or in nop xor push (bad) jge ds mull mov shlb xlat sahf in lds fcmovnu xchg push fist mov sub mov and add lds inc sbb iret test jae cltd loopne push fidiv cmpsl sbb lret ljmp mov inc mov mov xchg jge mov mov xor repnz mov shl pop les mov (bad) clc enter jecxz shl pop adc call les mov mov and jg inc call imul push mov pop push dec rcll mov sbb cmpl aaa out xor movd dec bound xchg xchg pop jbe add jp add stos adc and enter shrb mov sbb xchg inc inc jnp ljmp push cmp mov mov dec lods xchg sub mov xchg imull or popf mov cmc sarb push xor inc std (bad) or mov push idiv jle and or mov imul push push and fcomp add cmpsl adc mov andb cmp dec pop pop stc cmpsl xlat push (bad) mov lock call repz mov (bad) mov sub cmp (bad) out ljmpw jmp add and push pop xchg pushf push aam inc jne dec (bad) outsl pop out lock push add fcmovnu in inc adc lret enter jb repnz pop fisttpl jns mov pop stos das stc outsl cld mov adc pushf scas cmp xchg or sahf sub push mov xor inc aam hlt jbe lods add mov es sbb fs sbb dec flds and int3 les push xchg adc cmc test jmp xlat (bad) clc test push (bad) lods add ret into notb inc add xor js lcall add movsl cmpsl dec ljmp or or xor mov out fdivs mov xchg leave out sahf pop loope pushf iret inc in cmp xchg shrb mov and push repnz popa dec sbb mov xchg andl and cs outsl mov mov jnp cmc push sbb mov in movsb jne adc xchg push push xchg shr cmpsb xor je sub dec gs jecxz sub fisubrl or push int3 fldenv cmp loop cmp into mov vpmacsdd test sahf and xchg or lock mov aaa outsl sbb cltd add add iret xor adc lods out pop push mov fildll stc mov add jnp stos mov push jnp mov popa js jmp mov push enter (bad) mov xor inc shlb test lret dec dec dec mov into mov mov push je movsl enter xor inc and insl out push jb sbb cld and movsl iret sub pop pop jno test clc push mov mov rcrb mov repnz inc (bad) sbb push and das jecxz hlt sub add sbb lret inc les lahf pop lret in adc cmp addr16 pop ret insb and aaa fstps imul push adc add pop test jno push pushf sub jns cmc xlat ret push dec (bad) cmc jb pop in dec xor xor mov in addr16 sbb inc mov and out sar aad dec mov rcr push fstpt push push iret std push out xor and jecxz inc ficompl lahf xchg jns pop sub cmp pop sbb (bad) mov mov or cmp mov adc mov adc shrl xchg sbb jo pop in mov jmp imul dec fmulp (bad) ja sbb ret lcall mov repnz mov leave jo lods xor mov sub (bad) ss divb in movsl add mov mov ror scas cmpsb dec clc fstpt xchg and loope xchg mov xor mov loopne js xchg or adc loop pop push roll adc xchg adc jecxz mov push xchg cwtl imul xlat add inc pop inc fisubr sbb cmp ret cmp mov add pop int3 adc sub inc repz adc jmp (bad) adc pop inc add mov xrelease in insb daa mov add dec sub test movsl stos aad lock dec daa inc into sub pop push jb xchg mov mov lret sub mov jg repz fist (bad) das insb add push add jae jecxz jae jmp cmp frstor ret mov xchg test sub ret push negl add jecxz or mov add and pop cs imulb and or lret cmpsb leave xor or lahf inc mov dec iret cmpsl add cmp movsl aam lock pushf xchg pop pop xchg push scas das sbb stc nop cmpsl jmp cwtl pop aam ja fcmovb jl or cmp and pop lahf mov pop sub cmp arpl (bad) jno sbb sbb xor jnp mov jmp rcrb mov mov mov sub popf sbb pop mov roll xlat sub sahf mov rolb test (bad) in clc sbb lret mov and popf aaa xchg bswap outsb ficom and pop mov imul fsubp push (bad) in in push xorb jbe adc rol sub push jns cmp xor sbb cmp (bad) dec jbe sub push (bad) and dec fucomp sbb fisubrl jno push jl cmc addr16 mov cwtl imul adc mov xchg imul repz or in pop push fldt pop aas ror test int3 insl out loop mov inc xor (bad) and pop mov cmpsl mov enter js das jno add adc ret popf fwait push sub sbb dec or repz sub aaa jbe bsr aad mov mov jbe fs imul inc lock dec pop out push jl pop jl fwait xor (bad) jl cld fwait push lds int cs push adc inc dec in jo xor and pusha mov fstl jo dec cmp stos test mov icebp inc dec stos push add xorl sbb fidivr in in xor mov fwait pop adc push (bad) mov or jnp lods test ret cld psllw lds push mov xor rcl fnstcw leave adc data16 jmp cmpsb and ret or push test jbe xchg mov in mov js mov sub xchg sbb cmp mov and adc les in fwait lcall adc xchg das enter loopne cli sub mov je insl sbb push sub ja ljmp push fnstcw cmp cwtl add mov std lahf (bad) imulb push cmpsl js fstpt jne fistl mov xchg pop add scas aas ret adcl mov js ds rcl imul data16 mov fldenv (bad) loope inc push out cmpsl inc or or movsl mov jecxz push test push test sub pop xchg xchg sbb pop ja ds rcrl xchg inc add xor or repz add fs insb push into dec mov xchg mov push aaa pop adc pop mov jae push or icebp mov (bad) jno mov bound mov rclb inc (bad) mov pop rcr xchg cwtl inc dec outsb cmp cltd (bad) mov mov (bad) arpl mov nop or jnp mov dec pop add lret mov adc enter xchg jp mov ficoml pop insl or inc inc or rcll repz aaa xor pop (bad) lds adc add leave lds jnp sbb jecxz icebp in pop (bad) sbb add dec out pop pop adc add lret jl dec clc rcl roll sbb sbb mov sub push shrb inc lds rclb and lea popf xchg jne lds (bad) mov xor mov push inc sbb shlb or cmp fldl je aam fdivl xor fmuls pop mov sub adc adc pop ds pop pop xchg cmpsb jl sbbb sub xor xorl cmp adc movsb inc outsl icebp rcrl out int loop cli loopne mov sti sub and add stos mov or aad daa outsb out cmc pop jecxz aas xchg in js pop loopne sbb je leave xchg lds pop mull and inc imul hlt (bad) mov cmc mov xlat shrl cmc xor pop add pop pop push adc mov imul es xchg popf jmp add push adc lods mov or cmpsb cmpsb xchg bt (bad) adc push xchg jmp je lahf adc dec sub movsl gs jbe in sub daa xchg movsb add (bad) jb pop pop push fsubrl mov outsl imul sbb mov mov aad in call addr16 xor dec lret dec sub or and sbb inc push lahf inc mov jne dec xchg adc adc pop popf fwait adc lock sbb sarb fimull push dec lock xor es sbb jns loop cmp cmp jbe fstpl stos mov loop mov call jns,pn jo inc mov inc icebp jne ret mov insb daa mov sbb testb mov fst out out dec mov out lock in (bad) sbbl fs mov xchg dec addr16 and mov cmp ror mov jmp ret enter push add dec mov xor sbb cmp push iret stc push jp shrl fwait in lods mov fimul imul je dec imul test pushf jbe std jo je push sbb negb dec adc lret test loop mov movsl mov dec mov dec xor jmp jle fs rep jbe pop leave aaa (bad) lea lods outsb les cmpsl stos mov in inc icebp inc je lods mov xchg out pop clc mov int3 jp jae into push sbb pop loope jmp fsubrs sub dec int3 inc jl xchg cmpsl push push test mov mov ret or xchg add fstps rcrl pop aaa mov mov sahf sti xchg sub or inc mov notb jne insb jo mov cld dec cmp xchg sbbl iret rcl mov nop push xor rcrl cmc sub insb jge add faddl enter pushf xor mov sbbl dec mov repz mov aam jg sub iret cmpsb fisttp sbb idivl mov mov xchg loope cmpsl aaa push inc xor add je les xchg mov push xchg je js jnp enter test xchg push mov inc movsb jl push (bad) lret std lea mov sub sbb add in sub fnop out inc sub push mov push xchg mov cmp sub ret adc ja (bad) nop mov int3 inc push push and mov mov (bad) mov test icebp cli jl fsubs std stos into adc adc xlat jns cpuid mov push in dec mov cmpsb imul jmp in in sbb sbb pop mov andb sarl jne (bad) mov insl push ret sbb mov xor jae pusha pop call mov ds sub movsl rorb repnz repnz (bad) out adc or xor jl cmp std push fucomip out scas xchg clc cmc inc push sub and add idivb lahf subl sub mov (bad) stos pusha mov lock out push fadd insb loopne xchg sbb inc pop in cltd js push nop mov (bad) pop lret jo loopne test lea (bad) pop popa leave and xlat imul jl mov add push (bad) test or xchg xchg jae bound shlb data16 ja cmp cmp sbb adc mov mov mov imul or and xor dec sub outsl mov inc daa enter push (bad) push sahf icebp mov insl xchg in out xchg pushf in js addl stos inc push out mov cmpsb lcall or aad mov lds test adc (bad) pop stc shll (bad) mov clc pop adc add icebp xchg movb out inc mov xlat mov mov dec xchg xor pop lods jno out fbld test aas int3 pop ds int sub mov jge jno repnz dec mov jns push outsb ret or add sbb mov lds loop push mov pop pop jno fs push inc jo pop (bad) imul dec mov ss (bad) in gs outsb xchg imul (bad) sbb xchg xor daa stos or dec add dec out and pushf addr16 mov lea out mov rolb and adc xlat adc or aam push std xor mov push pop lds push mov mov adc insl pop lods pop mov cmpsl push outsl pop inc (bad) pop lods ret lahf ja adc mov xchg je add push bound xor jo pop cmc lea addr16 jecxz ja mov leave adc das aas pop jnp pop jmp inc in pusha pusha push cmc pop insb and mov xchg loope outsb xchg mov add xor cmp (bad) add (bad) jge xor add jecxz js cmp pop mov loopne cmp cltd xchg cwtl mov out fadds hlt sbb xor cwtl into fdivrl adc hlt sbb mov lret add or outsb fwait adc mov orl adc cltd fwait push imul lods pop push xor xlat cmp pop mov int3 sahf mov sub test sti adc push bound call mov call les jo mov nop movsb pop bound hlt incl add sahf cmpsl xor dec idivl loop loop cmp in js xchg push or into repnz mov jnp and xchg mov mov es sbb jo lcall std xchg pop push sub leave movsl (bad) jb jae ret cmp stc mov mov jo adc js pushf repnz inc out mov add jae xor adc push rorb rcl push xor mov andl and stos mov aaa add rclb divl lods das add (bad) dec inc inc xchg inc roll jo mov inc leave sbb pop cmpsl inc frstor jnp fldl into insb lods fwait sti mov divb gs pop xor es (bad) mov stos dec mov cmpsb push jp jle pop xor cli les out jae inc xor sub adc addl test outsl pop mov cs push xor cwtl push jmp sub mov andb inc divl jmp (bad) dec das mov xchg daa out mov fimull push pop pop sbb scas stos sti adc ljmp cli movsb lock pop mov lock aad or stos adc sbb insb xchg lds inc aaa popa mov and ss adc mov cmp stc mov sub push lds cmpsl mov dec jecxz jl in or xchg sbb fcmovne pop cmp (bad) mov sub mov pop xchg mov inc repnz cmp popf pop mov out pushf sarb aas scas std scas or or xchg shll insb jp add outsl xchg cs pop mov addl clc cli movsl or stos pop or fnstcw ss cs (bad) sbb sub push pop mov lret xor cmp pop xchg fwait gs fwait jnp lret add ds xor mov mov jo cmp (bad) mov and mov push cmp insb es pushf add bnd lret xor jg add jo call (bad) ss out (bad) loopne push sub loop dec jbe lea mov lock loopne mov lock cmp sub int3 or (bad) in sbb pop stos add lods add adc push pop pop xor out mov push and lret in (bad) mov xor popf sub xchg test std test or imul test imul stos and (bad) xor push jns fdivrs or enter pusha jbe ficomp mov test mov push jno (bad) popf xchg dec loop icebp inc mov xor ret int3 sub add push ds and xor pushf rcrl les mov dec lods in push rorb jle cmp mov lods mov jmp cmpsb mov adc insl loop add pop push lock enter cli push insb jns lock push jb sub ss mov mov cmppd lods xlat fiadd scas mov sbb cmp sbb in insb xchg jno adc mov push shrb cmp mov jns pop xchg addr16 hlt push mov xchg and cmp jp mov neg xor popf mov std jne sub sub xor pop fptan cmpsb xchg ja cmp adc mov sub psrad cs repnz lods incl loop lret xlat xchg lcall jge push xchg int or push fwait jmp xchg cmp push lea ja in and or mov sbb popl (bad) notl mov stos add aas sub pushf daa adc inc incl or iret sbb sub pop sbb sahf fs std mov or iret sbb jae xor mov lods fs xor pop cli xor xchg fwait sbb sbb insl (bad) lock push (bad) call test lret std pop stos mov push hlt adc jae adc pop (bad) lcall mov cmp mov sub sub clc aaa or pop push ret push je pop cmc sbb aad dec dec xor mov in and subl pop adc mov jmp rcr mov cltd imul hlt mov lods mov cli (bad) rcl imul adc out jl pop and fs fistpll lret adc ret add add repnz faddl out sbb push pusha test inc add arpl (bad) je lods mov mov inc push int3 test xor outsl add imul mov jle lea fstl loopne mov sbb xchg mov jae and mov popa or in negl xchg sub xchg sub loop fbstp dec repz pop sbb data16 loope and jb dec xchg add xchg cld jp out (bad) dec mov cld jg mov out and xor out clc aaa inc pand adc push fwait inc (bad) leave cmp arpl pop mov ljmp push add add jae adc sbb xchg mov jo dec addb out or out ficoml pushf mov outsb or pop and dec imul jmp lea or dec dec xchg add pushf add lods lods das xchg fs (bad) testb lcall mov inc repnz push jecxz gs push pop pop jnp mov aaa fnsave xchg adc movhlps xchg cmovno pop lret insb push inc std outsb jnp jnp lret xchg shr pop ret mov in pop dec xchg clc push xchg sbb dec shrl shl (bad) mov xor cmp cmp or jle cmp mov jge lods fistl fwait test repz xor fnstenv xchg mov aad out adc lcall or cltd adc inc add add and add sub or js out add sbb scas ja cld cmpsl fwait xchg shrl leave push pop or mov jns ret (bad) jge lret xchg cmc pop sub loope push popa popa mov mov dec dec dec mov xchg pop in add cmc xchg pop out fstpl inc jno jae sub inc xor sub fimull idiv sub mov nop sub sub test lods mov push push test ja fs daa lahf jmp (bad) xor sbb dec lcall cmpsl es push jnp cmp mov stos scas lret cmpsl test add sub xchg pop mov dec addr16 imul cmpl mov loope ret xchg icebp call xchg jnp xchg in daa sub loope enter bound jne sahf dec cmc sub and rcl enter sub adcl pop pop mov les mov cmp scas sbb mov inc icebp cmp in ljmp lret ljmp dec add sub cli pop push or nop mov pushf inc mov sahf loop gs ss push mov stos pop loop arpl fcmovnb push lret xchg ljmp into fwait cmc add into jg outsl mov mov insl inc daa pop insb and movl mov jl pop stos decl cmpsl and sub scas movsl sahf lret hlt (bad) add int3 aas ret insl add orl pop fsubr xchg lret push add pushl sub pop push push dec (bad) xor (bad) repz jg movsl adc aaa (bad) mov add adc insb aad enter stc cmpsb inc sub push dec cmpsb pop sub pop sar movsl and repnz clc inc xor pop sub push (bad) push inc sbb push pop mov mov xchg lret je push pop add jno (bad) clc jbe out mov bound rcrl pop inc push ss bound shll stos test js cmp cltd (bad) std rcl jnp ds add sub xlat or cli dec bound jb repz mov push cli sbb add (bad) ljmp mov xchg jbe jbe ret adc test xor (bad) fsubrs sbb adc add adc roll xor fdivp push jge cmp sti add push in lods mov (bad) sbb rep xor pop mov lea dec fmul fmul inc mov xchg cmp mov push mov ret lret lcall enter sbbl (bad) and aam movsl pop cmp stos lcall jg mov dec mov xchg rcrl arpl push and mov pop sub pop sub xchg xor push adc (bad) out dec xlat sahf jge pop mov out imulb mov xor add nop ret xchg mov fisttp sbb leave pop test xchg mov sbb sub add mov lods mov (bad) mov stc jne es popa or push ret sti lahf lea or in push les aam inc lret xchg sub or jae movsb sahf xchg inc mov pop lret adc xor in pop mov pop lret hlt jo ds ret (bad) out push inc mov popa in add mov add imul jge in mov (bad) shl push fisubr in sbb add icebp jg (bad) js or ror add mov mov mov lods ljmp cmp adc or xor loop xchg aas outsb push push loop stos nop sbb jecxz js push lds inc dec mov scas xor xor lcall jnp repnz push jge adc push mov stc test xor push aas sarb add mov outsb pop or adc and mov inc jl in iret fs ret adc fmuls mov ret mov (bad) cltd add (bad) ja (bad) divb xor jl in mov add andl out pop icebp xor mov dec fist add int3 inc (bad) sarl push sarb add scas jle (bad) repnz xor mov sti pop sbbl pop addr16 shlb adc sub mov mov test movsl mov push dec pop int and das sbb jl push xor popf fcoml xchg mov adc or lret sbb (bad) push xor aam orl out std lcall out lods dec enter lods and outsb ret sub cmpl hlt adc sub dec inc add dec (bad) xor inc adc in insb fs and outsl or sub mov add enter and or lret pop stos push in cmp testl adc mov daa sub repnz inc (bad) arpl (bad) popa mov jmp jg xchg mov lret (bad) out mov (bad) ja or sbbl dec sub loope call lock aaa dec xor fcmovu mov insb cmp dec subb push or dec dec sbb and mov adc aam fs or sbb push and jmp sti lret fld out inc std inc and or adc pop mov repz mov jbe pop insb (bad) sbb adc int3 ret repz fldcw mov mov mov pop sti pop xor mov jg call push sbb push add jae and test loope in bound dec and hlt pop push jmp cwtl sub adc ficoml out push and pop or (bad) push shll shlb pop sub stos add insl dec push rcrb (bad) in fbld mov ja cmc lahf sub rorb jbe mov push and daa das jl push lds xchg dec mov stos out fistp jbe lods sub or ret pop into adc stos sub icebp xor xchg or sub daa jnp roll or clc jp xor mov and dec or adc mov pusha pop mov jbe jle test add lcall dec mov xchg (bad) fistl out xor dec sahf xlat and adc addl insl pop popf pop je lock in std aas outsb lock (bad) mov dec xchg enter adc xchg rclb xchg sbb ret loopne push hlt dec push (bad) addr16 lods (bad) cmp xchg adc jge xchg push addr16 or jg mov jp adc xor es jb aam mov and in (bad) arpl sub dec mov out sbb jmp and les fist xchg mov adc mov mov cmc pop inc pop xchg inc stos (bad) ja push cli dec test out loop lret loope pusha jle pop outsl xchg call add test jbe xchg push push pop inc gs scas mov mov leave mov add or push sub and scas rolb lds (bad) cvttps2pi loop jns psubb imul and push insb lds xchg pop sti mov fnstsw call ds fdiv aas outsl adc pop pop fdiv sbb or ss dec xor add add xor daa (bad) adc stos dec das jecxz jae jns test cli jnp add mov dec mov xor (bad) out int mov mov cmp xor das aad dec push aas loopne cmp mov sti and outsb mov lods (bad) jbe lcall pop mov jne icebp pop or pop pop out sbb lds adc mov pop insl and adc cmp icebp dec and fiadd or fdiv stc or aad adc adc mov cmp test and sbb push fdivs push sti cmp movsb adc pop in movsb dec pop xchg fld1 xor fmull repnz adc pop jns sbb lods les jnp xor cmp mov inc loop xchg loopne outsl push addr16 shlb enter push adc pop test ss imul xor (bad) outsb mov loope adc jg data16 je dec mov mov std sbb jnp jne popa jae cs mov cs and icebp mov inc cltd imul cli cld sub mov lcall es sub lret dec cmp push jle cmp cmc repnz sub insl jno mov cmp xchg mov aaa cmp or cmp cwtl (bad) mov mov bound xchg sub pop mov stc test mov mov pop (bad) xor gs jb xor aaa cmp inc sbb mov repnz fwait (bad) sub dec pushf jecxz scas int fldenv pop adc push sbb shrl xor out ds in inc repnz (bad) inc not ss mov push push mov sti stos ret lock movsb mov int3 aam inc shl (bad) adc push xchg mov jge or pusha dec inc cld out mov dec cmp cmp pop enter and clc mov repz in pop jl or xchg fcmovnu aas lock cmp bound jne imul arpl and rcr adcl or ret leave cmp ljmp adc dec loopne popf addr16 push sub std add dec ds or add cmp mov add fisttpll movsb mov repz ljmp int3 pop cmpsl js push repnz push daa (bad) mov gs xchg (bad) lea std sar lahf xchg lahf dec jp sbb lahf in pusha loopne movsb jmp push fistpl out mov out adc mov mov mov xor in jae inc push mov stos insl jo mov adc (bad) mov mov cmp inc arpl insl mov (bad) mov ja inc dec and pop sbb inc mov jmp pop or scas loopne out pop inc xor arpl push mov outsb sub pop loope adcb xchg fisub cmc cmpsl xchg add mov je sub xchg mov ljmp mov les jp movsb (bad) nop shll jle test popf sbb push mov (bad) pop fsubrs test lret int3 sbb inc adc jns lock mov lret gs imul mov add pop cmpsb insl aad add shl lods addr16 nop xor cld mov repz fnstenv dec push pop lock and inc seta mov mov (bad) rcll adc inc fcomps jno inc outsb mov xor sti inc push clc dec hlt mov test out mov hlt rcll mov fucomi dec popf sbb mov mov inc ret outsb and mov dec push in fdivrl jp mov sub jp adc sbb jmp and mov push and aad add or int3 in lret in mov cld pop fdivs (bad) out icebp xchg or (bad) in pop mov push lods xchg outsl jb aaa dec scas dec add out lock push sbb or dec stos cmp mov stos iret call cwtl ja (bad) js scas jmp mov test pushf sub lea ret xor sahf unpckhps es or loopne cmp test dec xor jmp cmpsl test cmpsl push (bad) popf xchg (bad) arpl xchg inc push enter cmp fwait ljmp fwait (bad) fstl push dec (bad) mov adc iret std jl icebp add xchg add call fninit pop lds adc add mov movsb xor aam fisttpl stc xchg jae or test iret pop pop cmpsl pop orl add lahf inc or sbb pop fs loop repnz insb inc out sti mov je shrb push jns stos loope rolb int3 sti or push xchg inc fnstenv mov pop in xlat pop adc xor push push push jge out sbb dec dec jle clc push stc std adc into jno sahf xchg notl test lods sub xchg jg xor mov dec mov dec mov enter inc data16 mov je inc hlt jmp rol out aam lods mov stc jbe mov xlat test imul hlt in or pop jmp jb adc xlat cmpsl mov rorb push pop outsl pushf cmp pop jp fcmovu jo,pt sbb or int3 or fsubp out aaa push ficoml and push xchg es push stos scas movl stc roll into test and stos cli inc mov pop jge push imull loopne lcall shl jp and das sbb fistpll pushf inc dec push push negb ret jno cmpsb push add loopne fnop test mov push jne lret loop jge pop sahf mov cmp dec and add mov test imul pushf jb ret (bad) push xchg dec sbb int std in hlt xchg aaa and aam push push push fstpl ljmp nop xchg pushaw xchg sub dec test xor (bad) cmp jb imul aas sub bound dec (bad) or stos ret cmovns xchg pop jecxz or imul aad mov dec (bad) pop dec fnop sbb fiaddl (bad) jecxz jae mov mov mulb rcr xor dec xchg sbb rclb jmp pusha cmc fdivrs cmpsb call dec xor xchg jns jg sub mov stos dec xor call or (bad) loop hlt jae addr16 mov imul and mov cmp insl cmpsb js xchg imulb xchg insl or sub or icebp rcll add add push push mov movb (bad) mov dec shr push mov and clc cltd stc outsb das gs ljmp lahf push jl arpl fsubs lods adc sub pop hlt adc jg mov ss lret or mov shr js push adc cmp cmp or and sbb or mov sbbb sti lods call pop arpl cld and sub rclb fimul cmp pop nop in out lahf (bad) xchg addb xchg rcll dec das inc lret ret imul ret xchg and adc mov jno fwait int push popa cs bound xchg cltd mov bound cld (bad) aas fcmovu mov jo sub pop jl add cmp and (bad) add popf dec lods push cmc xchg test hlt clc (bad) jle rcll push mov adc mov adc clc add (bad) in mov std int3 inc xor inc cltd pop pop in jae xor inc popaw or dec mov push add dec or jle popf xchg cmp cli jl mov lods scas xor inc xchg mov (bad) jo xchg stos mov xchg lock cltd sub xchg shrb bound and xchg lahf cmpl fbstp mov fdivl sbb outsb dec out cmpsb mov fisttpl jl inc ss pop xchg fcomip mov pushf ljmp xchg inc cld cmp movl jl add push sub jo mov pusha inc xchg mov pop nop outsb int popa in loopne mov sbb cld xchg cmpb ret jbe xchg pop cmpsl and sub cmpsb xor mov xchg in pop insb xlat cmp mov cltd dec rorl out adc dec cli nop mov adc lock repz mov sbb push sub adc nop ror sbb xchg (bad) lock int3 cltd iret mov inc dec aad notb mov jnp or pop add or cmp push mov add (bad) lret cmpsl and pop pop cwtl test insb mov mov mov mov and mov daa test dec dec add sub add lcall or cmp pop sub mov cltd mov push in sbb cwtl bnd es mov test fldcw push pop ret sub in pop mov push mov sbb pushf scas stos pop xor repz jle gs mov js jbe jb mov sub cmp icebp cmpsb dec jo xlat or pop mul (bad) xlat pop movsl pushf cmc lds jbe std out cmp mov and aas mov in ss push dec add subb test (bad) lods sub jb lcall fidivr xlat out cmp add lods movaps jns in mov icebp ds cmc mov pop and xchg int fwait cs (bad) jle (bad) ljmp push or push dec pop iret outsl jmp nop leave fndisi(8087 nop or inc outsl or pop xchg sarl cmpsl iret xlat movsb rorb adc outsl jae roll sub push jle rol mov dec int cwtl out mov lcall call mull pushf pop mov repz out enter cmp push push pop and ljmp popa mov dec jnp hlt out push xchg push xor xchg rcrl dec inc loopne stc mov dec add mov push idivl adc fmuls pushf or pop orl (bad) fidiv pop scas mov addl test fstpt fcomps sbb int3 mov mov dec call stos pop popa inc out mov (bad) gs fwait enter inc push les aaa (bad) fisttp sahf (bad) jb lahf jnp cmpsb dec or roll cs aad stos mov rorl and mov adc sub mov sub pop jne jno xor push pop cld outsl sarl and pop sub daa sub xchg inc dec mov out fmull lds js ss fsubrs stc sbb mov cmpsb jmp iret fiaddl ss std lea (bad) dec mov dec nop sbb fmull dec xchg xlat or jg (bad) jbe and inc or dec adc js dec fdivrl lret mov jecxz and sub mov std mov jp (bad) xor arpl pop data16 imul sbb fsub adc inc test dec add fstps into push insb mov bound sbb jno jbe shld push lods sub mov xchg faddl cmp jle and mov insl loopne adc call add jmp (bad) ror inc push pop mov xchg es pusha and popa gs jmp pop call clc ljmp xchg pop mov outsb cs aam push jne jle in xchg mov pop inc and push jge mov movsb fsubrs jp loope movsb xor sahf lret push int in cmpsl sub xor mov (bad) std inc push jp or jbe xor push negl stos je imul cltd cmp push mov adc js out pop push ja jp dec xchg out xor gs orb or xchg sbb cld pusha ss cmp mov sub cmp sub xor imul add mov shlb mov adc adc (bad) std mov mov mov loope cmc or or vdivpd std stc jbe push lock or fdecstp mov cltd aaa jge shr cmp call pop cmp mov mov aaa sub dec jo sbb jae inc mov mov fs sti push mov ljmp cmp sub xchg (bad) in popa enter stos not xchg mov mov iret push mov mov ja sahf minps repnz sub mov push scas cmc (bad) xor repnz xchg addr16 cmp sub jo fiadd jmp mov testl repz push or jmp dec jno fsubrs mov pop pop pop sbb jne xlat jge inc ds fisttp stos mov pop mov push sahf cmp pop popf leave pop sub fstpl in into cmp lock dec loopne dec fwait sbb mov ret jo,pn mulb inc call jbe pushf fbstp xchg inc push inc lods xchg loopne sti cmp adc enter xor popa outsb sahf pop xchg dec (bad) inc xor repz daa (bad) mov xchg sbb mov cmpsl jg mov jns aam cwtl jg pop pop cmpb das mov cmpsl push (bad) in test gs jb mov xchg jnp add out out add push mov fucomp outsb push ljmp out push into mov fwait inc sbb jg add adc push jb jo jno in dec insl fs test inc mov rol cld dec (bad) lea int3 xor xor ss mov int (bad) cld in jnp loop lods push push fist imul test mov ret loopne sti jp mov movsl and mov lock jbe pop inc and pop dec test das cli es cltd dec movsb test dec aas cmc aaa or stos subl xor or lea jge out rolb out loopne jns dec outsl stos and adc mov dec out or cs fimul push hlt popa pop lods cmp enter push sbb les (bad) push push push jae xchg inc xchg loope jnp xor mov xchg int xor jno add loopne cmp mov push shrb outsb xchg in into (bad) cmc sub mov (bad) popl aam daa ss add ret nop jecxz xchg lods cmpsb push mov and punpckhbw into into (bad) jmp mov ds inc (bad) cmc enter dec jns mov cmpsl stc (bad) jbe cmpsb mov popf test sub adc sub mov xchg scas pop lcall mov xchg mov or callw (bad) repz out fldcw inc mov pop jmp or or xchg aaa jnp test pop xor adc push cmpsb mov fsubr adc stos inc lcall mov (bad) in push adc xchg scas es mov (bad) sub xchg hlt push mov pop (bad) hlt icebp sub mov push flds fwait xor pop xor or pop lret aad or jecxz stc or push (bad) lret enter jns xchg in or xlat sub rolb sbb jo mov or adc push push mov inc cmp repnz pushf mov mov push dec (bad) insb mov adc sti xchg jo add fmuls std jae in hlt loope insl stos scas fcmovbe or icebp ja push clc movsb fdivr inc adc aaa jns sub mov (bad) cmp or in addr16 mov les roll or jmp leave mov add les or or ljmp icebp push jns imul in xchg sbb pop inc dec push xor xchg mov mov mov sbb int adc inc pop cmp mov (bad) (bad) xchg add mov xchg fcmovbe lret dec fs sar in xor ja and jns popf xchg ja nop and in mov outsl lock mov inc or dec loop push pop inc mov lods mov sbb aad ret mov push pop imul pop push or lahf mov and fadds sub lock popf (bad) sbb aad scas cmp bound mov dec iret (bad) hlt jnp,pn mov jge,pn mov xchg add je xor dec imul call inc mov cmp mov cmp push xchg rolb xchg ret xchg lds movsl mov push popa bound test xchg jge in leave add scas lods add pop adc sbb lahf call (bad) out adc leave loope daa ret cmpsl and test (bad) pop sbb lret inc (bad) sarb loope stos xor ret rcrl call fsubrl int jg fist xor (bad) push mov push cmp xor cmp xchg mov stos loopne movsb adc inc insl push fcmovnu push xchg icebp orl and cmp sub outsb xor xchg imull xchg out rclb cltd in sub and xchg pop repz std xchg hlt jp cs jge cmp push inc mov and cld lods out cwtl cltd mov mov xchg inc push xor addr16 int3 mov push out and mov add lcall xchg jecxz aas imul mov out cs adc nop movsl or lret or cmpsb inc dec insl stos or jg movsl push and sbb sbb mov inc js loop das dec sub in scas fldz mov xchg icebp gs jl cli (bad) xor or fistpl dec xor cltd sbb ja insl pop stos or push pop in mov fadds inc cwtl dec cmpsl mov rclb lret clc xor jo pop mov outsb test jnp hlt sub std jmp sahf clc inc mov xor hlt nop andb cmp inc sti addl push mov mov sub testl mulb cli (bad) (bad) bound jecxz in mov dec jl jle and xchg lods pusha cmpsl mov ret aaa adc pop jnp jns mov fwait xchg out mov shrb sbb je push xchg test mov cmp (bad) xor into cwtl (bad) mov xchg cltd dec loop mov fs jae std mov imul jp dec cmp push sbb idivb (bad) xor adc cmp in insl jbe mov cmc lea dec jo or and pushf inc je faddp imul stc loopne push jl popf jne push repz push cmpsb int fnstenv dec fildll push imul mov js xchg in mov xchg test gs xchg ljmp xor in inc repnz aad fwait xchg shl xlat int mov js or xchg out push jnp roll cmp ds cmpsl lahf cs mov and and and adc into dec mov adc pop jge jmp aas xchg xor into jo mov inc iret dec push outsl mov cmp in mov iret mov popf push (bad) hlt xor cmp sahf idiv mull pop aas fs iret cs adc (bad) mov arpl pop mov pop stc xchg sub add scas cmp fbstp rcll jno push mov out cmpb cltd and aam lea movl gs push or sbb mul hlt mulb imul int3 dec test pusha mov pop ret add shlb pop mov (bad) mov and fildll jno add (bad) aas xchg add (bad) mov mov loop sbb jecxz jg sbb sbb mov inc (bad) out aad cmp mov inc leave mov dec mov je sbb cmpsl insb aaa mov ficompl push xor jecxz mov or and push pop pop xlat push in pop fsubr notl loop mov xchg dec daa cwtl sbb mov cmp pushf adc stos iret cli pop imul xchg mov sub imul insl inc jae pop movsb jmp and sbb inc and sub sbb rclb (bad) int in ret dec fwait push sbb cmp lock mov pop test adc or jo test cmp (bad) jg loop sub jnp notb pmaddwd jecxz push cmc push cmp jae xchg (bad) std clc mov xor fnstsw lods or add outsb sbb inc aaa jge adc loopne cli outsb adc (bad) push imul (bad) xchg push dec xchg fxch orl jp jp scas adc xor xchg inc mov and lea test cmp mov push cmpsl (bad) pop pop push push push xchg jae bound mov (bad) jge das leave jp sti mov lds out mov xchg (bad) into pop je xlat aas addr16 jp cmp test adc pop int3 ffreep jecxz xchg mov jmp mov xor sti lods push mov jne inc nop decb add movsl push inc pop sub sti dec test cli sahf aam mov sbb test xor addl and cli mov jecxz icebp loop bound cmp mov out xorl jge add add cmp sbb inc xchg jb insb lods cmpsl xor add push insl fcoml xor (bad) gs lds sbb ja (bad) pop jb pop fidiv (bad) push push bound xchg sbb mov fadds test dec inc outsl icebp jl mov sub mov sbb mov inc pop lds add test sti or xchg popa arpl icebp bound inc cmovle hlt add add xchg arpl push mov adc xor dec or scas enter or (bad) enter mov adc mov repnz mov setae pushf jp out rcll clc addr16 dec push pop lahf cld mov pushf scas cli inc int3 inc sbb sbb sub or jb shlb popf ljmp cmpsl das ljmp rcrb aad sbb sub or mov pop (bad) cmp lea pop lret aaa test fimull cmpsl dec mov stos pop push xlat leave xor xor movsl push pop inc and (bad) negb movsl iret xor out xor cmpsb adc push movsb lret outsb add xchg lock or incb push mov mov es mov push dec ret stc out scas cmpsb mov cmp and xor mov push lret jb dec int (bad) add sub mov jl jge mov adc addb pop (bad) cld xor add mov push dec jae xchg sbb dec dec push int3 push mov les cmc dec push xor cmp inc ja xchg mov es pusha pop inc (bad) mov imul mov scas xor jl cmp add imul sbb adc enter not scas inc sti das imul pop test xchg (bad) and test dec les arpl xchg icebp add icebp inc out mov mov cwtl out aaa dec (bad) xor cmp ja lret sti lods mov mov sbb ljmp pop call mov aam add test jge out (bad) std xor sbb mov jae fs jb in xchg nop shr xchg je sbb repnz mov in cmpsb sub repz loopne das sub (bad) ficompl fidivr (bad) outsl cmp scas and sbb orl nop sbb push push mov push xchg push pushf sub pop xchg ret xlat imul repz mov lock fistp push cmp xor mov (bad) xor stc (bad) pop mov testl (bad) fisttpll (bad) aam mov pop stos into jge leave sarl ss mov sub mov pop pop bnd mov add sub stos stc sahf jge xor ffreep mov jecxz inc lahf repz addr16 (bad) shl dec int3 in lds and lds push sbb sarb aam in rcrb jns jg mov outsb mov test hlt in int mov hlt cwtl (bad) movsb jno (bad) xor and jle and pop icebp pusha jl cmp sbb sub mov cmpsb xor (bad) and xor fadds push idivl scas cmp repz in add cltd aaa fwait xor ret inc sub lock int3 push sbb and lods and rorb (bad) xor mov lahf jno (bad) bound jno ljmp sub sub pop cltd xor inc scas scas clc mov (bad) mov rorb (bad) int pop mov aam cltd mov (bad) xchg pusha cmp pop cld jb fwait scas jle mov iret sub cmp xor nop icebp add xchg adc stos movsb cld and ds icebp inc xchg stos mov push mov and fsubrs popa lods xlat jnp xchg mov xor ss mov mov xor fmull mov mov cld aam (bad) lret adc jnp dec ss flds xchg sub xor (bad) cmp imul and jmp imul xchg out jl jp cmp lods pop loope insl mov imul xchg aad movsl cmpsl xchg lret mov test imul add int3 dec inc push fstps in ja dec mov dec push xor (bad) cmp mov aas jle hlt and clc nop mov mov (bad) lea stc xchg in push out arpl mov xchg adc and test fisubrl sti sub mov xlat pushf inc add int3 scas (bad) pop and enter sub insl xor sub fucom pop daa popf add incb testb cwtl mov bound xchg mov (bad) or xchg push cmpsb dec adcl in sub stc sbb into add push imul dec lock pop jl gs out inc mov decb das inc scas imull mov push mov sub xchg sub imul loopne fcomip mov outsb movsl repz lea (bad) mov lret (bad) adc inc mov stc imul mov inc push push jge lock dec sub mov rcr fsubrl fucomp movsl xchg mov lret push push inc lds and lock or push mov pop or fabs cs and cmpps ss aaa sub inc test cmpsl imul and sub inc mov pop or js and mov ja leave mov pusha pop xchg in lea stos test daa push pop push mov fmull std fs sub mov jmp addr16 mov roll inc ljmp leave icebp ds xor loope aam mov pop mov push cltd insl out ror push cmp inc cmpsb xor sbb pop (bad) call addr16 movsl jno sbb inc and dec out mov pop sbb add lds xor sahf dec pushf or cmp into add xlat aas or aad outsb mov mov cli pushf movl dec ljmp (bad) push pusha jns fldcw push inc add jle pop cmp js popa push push or (bad) xchg (bad) fcmovu mov mov nopl push iret add bound xchg in jge mov cmp std enter outsb jecxz fnstsw xchg mov xchg cwtl cmp sub push push and aaa cmp push add xor lret pop cmp xchg cs rcll cs xchg aam test popa ds inc lahf dec cs jnp cmpsl loope xor dec fwait insb stos adc mov fs xor lret mov xchg xor mov pop fldt jns imul les inc ss fistpll push pop lds cmp call (bad) jecxz add xor fcompl fidivr add pop data16 aas cltd popf int3 mov orb (bad) xor (bad) movsb jmp add outsb lret das push or sbb adc mov hlt pop mov jnp inc jnp jle xchg (bad) icebp or pop and jnp std mov or cmp (bad) in and adc shrl aaa cli mov push popa or dec lret ljmp sbb xchg mov push mulb jl cmp inc sbb xor dec movsb mov mov lds icebp mov sahf lret (bad) ret test jno and mov pop push cmc repnz iret cmpsb push jg dec inc adc in sub mov mov sbb add jae loop leave insb (bad) xor stos jno sbb mov sbb test mov xor test mov cwtl cmove mov sbb xchg pop in dec pop jmp popa es lds and outsb test sbb idivl pop in mov arpl xchg xorl mov xchg pop mov out dec rol cs pop xchg (bad) int sbb outsl pop push rol jnp sahf iret lods pop int3 xchg rcll pop leave dec inc jo dec jp dec sti xchg shll mov pop cmp adc pop (bad) fldcw clc aad adc data16 and pop sub dec sbb xchg imul in push adc dec xor (bad) mulb or fiaddl mov push push add jecxz xor lods and cmp sub lea sub cmpsb inc add push sub xchg lcall xchg pop xchg js cmp sub ljmp das mov sub lahf jmp pushl hlt lock mov cmp mov or ljmp xchg les push (bad) push jo int3 dec fwait mov adc mov (bad) mov arpl shrb in sbb pop cmp mov movsb pop (bad) jbe leave scas pop inc inc wbinvd jmp sub (bad) push push repnz ja sbb xchg dec or fmuls not cltd xchg mov jb fistpl xlat ror fdiv push repnz pop in cld sub ret mov aas jno xchg mov aad mov hlt jg push stc insb clc pushf mov jmp loopne mov mov dec ja sbb fsts cmp notl pushf mov push sub lahf cmpsb int jbe cli jle pop xchg dec xor fcomps fimull adc pop fldl xchg aas mov dec pop lcall pop mov adc cwtl xor jge add aaa shlb add xchg jno outsl ds mov in push outsl jbe pushf jne lods cld andl pop movsb add xor bound enter jl pop jecxz fs cmc fwait aam in sti iret jmp push or clc adc data16 pusha lcall (bad) cltd cmp push jg int3 mov sti push fcomip adc movsl sub andps pop push lret and cs and add stos aas out notl add (bad) loopne loope adc push sbb pop inc rcrb cmpsb add mov lds jg xchg push cwtl (bad) fmuls mov mov loop push imul sbb jp xor bound (bad) push pextrw sbb hlt pop add pop stc push arpl push in pop jge stos inc inc inc cmp add cltd pop aad out and popf mov repz jl add (bad) in dec ficom cmp sti das insb mov stc mov stc push jg xchg shrb (bad) in push cmpsb dec shl aam jb sahf jns in movl ret mov pusha cmp sub lods xor pop push cmp or js jl lcall mov pop lock xchg jns fs mulb cmp loope dec mov mov inc xchg mov dec inc aas add add loope pop outsl arpl cmp int scas imul fwait jle shrb int3 cs or insl negl xor sub mov js test dec (bad) ljmp daa mov jo stos int mov ret pop mov xlat xor ja mov loop jle sahf stc pop cmp arpl push (bad) mov pop (bad) ja and xlat cwtl push loopne fs xor or test (bad) int3 sbb mov mov movnti mov bound cmp jg xor ret loop cld psubw jl fxch es jmp push aam (bad) (bad) lock xchg mov xor mov ds and lret in sar ret xor mov ss mov jle out pop hlt cmc xchg sbb xor daa stos ds xchg inc or out stos dec repnz jo jmp lock sbb mov pushl inc shll cmc in inc fcoms jp (bad) insb jns pop push insb aad dec inc push or push jns sti push seto loope das (bad) hlt cmpl mov sbb sbb in jb sbb xchg rcrb push dec movsb add pushf mov mov movsl mov fsubl ljmp outsb (bad) adc out cwtl cltd and (bad) in pop xchg loopne daa es push enter cmp or (bad) jne jbe sti mov jnp icebp cmp cmp pop nop stos mov jbe jmp data16 movsb sbbb lret cmc sub pop mov stc neg adc dec lcall sub outsl (bad) sbb cmp int or repz sub sub inc lock mov cwtl lock clc sbb pusha mov clc (bad) addr16 roll js inc sbb out sbb inc adc cmp pcmpeqd add (bad) ljmp mov dec (bad) into rcll call xchg mov in fisubl andb and push (bad) sub out and mov inc inc push test cmp sub cltd cli (bad) je add popa call add push push movsb jle ds (bad) hlt outsl sub dec xor jle add mov push jnp pushf sbb dec push pop or aam inc sub in out dec out adc in xchg fmulp in fildll push ret out jb ret and test xor xchg dec xor cltd sbb notb or loop ret sbb add mov sahf lcall outsb aas nop push mov xchg mov test fdivl xor fcmovnbe cs cmc mov (bad) pop aaa mov fwait sub jo call popa cmp jg adc xor or jp mov jp sub outsl aaa lock xchg cmp xor lcall push xor add inc aam in mov insl gs loopne aam das les pushf dec jb subl mov call mov adc stc xchg aam loop,pt test cmp pushf cmpsl xchg lds out sbb lcall (bad) add push (bad) push push fistl cmp jb xor out mov xchg repz adc fstpl rcrb xor push jmp dec stc mov ss cmp sbb fisub pop mov xchg fdivrs cs pop dec aas push iret in movsl push inc dec ficoml lret sarb mov push mov popf jle cmpsl ret and (bad) out shl scas in sub xchg js (bad) jp push jae push mov in cwtl or mov pop jae addr16 pop jl in sbb int push scas fildl sub daa popa enter scas fcomps cwtl dec push pop jae in jo (bad) bound add aas cli sub push shrb add (bad) jecxz jge in or or jb or pushf mov lret sub adc icebp out sub in pop popa mov push inc dec xor (bad) sub das pusha movsl jnp les jbe sbb push stos sbb mov mov xor pop loope xchg cli lods cmpb cmp cwtl add xchg jmp out or gs js stc data16 outsl repz fcoml insl (bad) inc jb add mov loop das ljmp fwait (bad) outsl xchg (bad) cmp inc xchg push aam xlat xor push dec (bad) or pop jns ds push inc mov adc icebp xchg sbb pop adc mov int testb fs (bad) lods inc out mov lock push std jmp pop shll (bad) imul insb mov sbb imul stos pop iret and mov out imul scas mov sbb xor sbb cmp jmp addl xlat fbld outsl mov ret fwait jmp jb fs xor jecxz lea fisubl lock cmp sub or outsl (bad) mov pop xor add xchg and es cmp xor push fwait ret dec imul pop and clc xor xor gs push sub arpl xchg iret mov mov xlat push mov lods add fsubrp sub add adc psrad sbb push mov mov cmp xor sbb sahf sub fadds outsb cli mov loope mov push sbb popa jns lods das and add mov jg mov (bad) fldl2t xor rolb mov clc idivb lcall mov push pop jle icebp fnsave lods sbb dec adc push aam stc movsb outsb push stos dec xor mov and das xchg insb sbb pusha ss or jp fsub add fwait adc scas pop mov imul ss enter iret or lret (bad) test mov mov sbb cwtl stc jmp push sub popf jbe (bad) imulb mov out mov mov lds mov cmp sbb jp xor pop mov sbb xchg fwait and repnz xchg notb jmp cltd push cmp sarl js xor dec sub lods sahf hlt push imul iret mov cs xchg xor (bad) or inc cmp out pop or repnz dec inc xchg fwait mov and cld jle or jp arpl lods lret mov fistp cmp arpl push stc push xchg mov mov cltd mov adc pop loopne mov sarl dec rcr sbb jae adc jp xchg xchg mov (bad) test popa xchg out ret xchg shrb divl jne mov test fdivp dec in mov mov decb repz jecxz xchg imul push dec mov dec scas cmpsl dec jno jmpw mov and in (bad) mov sbb ss mov js sbb mov xor mov xor cmpsw leave scas xor adc mov fdivrp inc pop push mov mov scas cmp popa int adc rcrb fidivl or jp outsl ror ds jge dec scas rcl jb lcall sub popf xchg popa cmpsl enter cmp or movsl cwtl mov lock call daa and ret jb inc pop mov add mov sti outsb out out stos call pop dec cli mov loopne sbb fbstp jns mov push xor in pop std sarl cltd cltd int3 mov daa adc cmpsl jecxz push xor inc fs int3 imul es loope jmp inc shrl mov add ja daa pop les pop clc scas sbb sub sub out xchg popa add sti cltd out rcrl add (bad) xor les iret mov push xlat dec pop dec cwtl adc icebp shlb adc add xchg daa sarb sbb in ja int sbb cmpsl mov xchg pcmpgtb add pop mov mov jae mov pop inc and int xor push movsb jnp imul mov sarb movsl cld xchg xchg ffreep xor mov push lahf aad push ud1 mov shl movl jae rcrl sub mov shlb ja jg dec push xchg cmp add rolb pop add jo add push orb mov xchg roll add add pop mov inc aaa sub shrb xchg ret mov leave lret add popf mov jmp lahf iret into mov dec int and lret inc pop ret push cmp push sar pusha push or lahf inc pop mov fistp xchg push mov jo mov aad xchg or pop push psllw out gs fisttpll xchg or sarl lret ret shlb sub in inc (bad) mulb leave push mov pushf call in or cmpsb push pop cmp mov cmpsl or inc lock xchg dec xchg js imul les hlt cli jge sub in les lret cmp scas jbe test cmp fcomps and (bad) jb lods sbb in std gs lods popf xchg pop mov fisubr outsb loope adc movsl jnp dec lods cld fsub test repnz jp push adcl push fcom addr16 pusha and mov jnp or jo xlat incl ds adc sbb mov rcl aam sahf lret dec cmp je shlb lcall addr16 out xchg fsubrp push push push pushl cld or stos loopne scas adc cmpsl xchg xor jns aad stos mov inc cmp push fs fdivrl inc cltd xchg inc adc fdivrp (bad) mov incb inc and sahf bound add pop jbe adc mov add mov xchg mov jecxz dec sbb mov je and hlt mov inc pop (bad) mov jmp mov subl mov sub sbb (bad) sub in inc into frstor in push mov std fiadd dec mov or pop dec imul and mov jl lods or push fild outsl xor push std popf and scas push inc xchg test mov pop sub ret sbb arpl sub ret gs pop addr16 gs popa mov mov icebp xchg cmp cwtl rcl fild xchg (bad) js and stc (bad) cmp inc inc in dec rolb sbbl sbb mov loopne xor (bad) push je in mov hlt mov mov in addr16 sbb fldenv loopne lret add dec loopne fidivr mov leave mov scas jnp adc icebp jp jae lock lcall out push add lahf je push mov and dec adc and je enter cwtl inc xor sbb mov fwait ss (bad) mov (bad) (bad) sub xor pop mov test out fcomps jmp int3 cli sbb xchg fisttpl andl push mov jp adc ja add mov ret or lret fwait sar pop push pushf rclb pop (bad) (bad) imul pop push dec add sahf add loope (bad) lds push sub out jnp jmp adc add sub lds fs jmp lods mov mov fprem1 and adc jmp sub rcr popf insl mov fmuls es jb rorb dec stos xor mov lret sub insl leave push cmc xlat orb loopne,pt lret sub mov cmp jecxz rolb sub jp pop test scas (bad) mov std pop add mov sbbl aam (bad) ja push jno pop ret insl mov dec mulb rcr std cmp test add mov xor data16 push dec not mov push dec sub mov xchg pop sub sbb fwait insb mov testl xchg (bad) inc xor imul jg sarl in pop mov std mov sarb adc xor insb pop fisub inc cs enter mov sub and cli and sub xchg pushf in jg xor dec lret repz iret mov (bad) call psrld push data16 pop or imul insb xchg into ret jl test in xor cmpsl jle and pop icebp inc pop sub xchg in sub movsb loopne je ljmp mov push jmp jo (bad) movsb cwtl cmc add into jl pop ljmp jecxz jmp push (bad) xor xor cs inc inc add scas jno inc dec jb xchg add pop mov rorb xchg fimul mov push or ljmp sub xchg arpl xor hlt inc test test dec push jle add ret xlat bound bound xchg xchg inc dec fcmovnbe insb imul or inc in stos push loopne cs mov mov push jle adc sbb arpl pop icebp dec lods inc loop repnz add jp inc push jmp mov jae lahf rol inc cwtl adc and ds jno dec pusha jecxz lcall sbb mov push add jecxz pop idivb lret xlat jmp dec cmp xor adc jb xchg jb mov adc sub inc fcoms mov (bad) lcall push cmpsb push mov xchg jl popa fxam stos pop pop decl and arpl push nop scas mov idivl xchg iret sub aaa jl mov pop aad xor test call mov ljmp xchg test mov iret ja inc dec decb and adc cmp fadds inc clc push lret adc mov cli fstps aas sub sbb xchg mov adc stos xlat clc push jmp dec xor push stos das adc aam leave dec jle add in lret daa push push scas fwait jge xchg rolb jp rolb sarb xor push scas jo mov xchg add mov insb ficomp inc fs aam mov mov and sbb addr16 fldcw jb or pop or jnp mov imul mov clc sub dec add inc pusha jbe ds mov xor int3 gs and ret fnstcw dec dec pop and jge xchg (bad) push mov addr16 loope xchg lret adc push jne jle xchg pop fsubs mov dec es fcmovnbe shrl sub jno mov fadds add lea push ret adc adc loope dec adc jne mov mov sub fdivrl xor sbb dec fadd fnsave mov ljmp addr16 (bad) sub in push cmpsb push jle test sbb jno rcrb sbb inc dec bound push bound (bad) adc in lret ljmp jnp add sbb push mov enter inc jp mulb sahf lds pop and out sbb inc mov test (bad) pop cmpsl xchg (bad) movsb jne movsl cmp xor push insl outsl loopne psubsb or and dec adc dec scas lods sub cmpsb ret jns xor insl mov mov int dec sub cmpsl aaa and jns adc lcall dec push cmp or xchg xlat cmc (bad) (bad) or mov test jmp pop cmp scas (bad) mov mov xor stos movsb dec in outsb cmp mov stos sub out cmp mov sbb add pop add les pop fildll mov jge mov je inc push ljmp or pop gs pop daa xchg mov repnz int aas xor push mov xor push dec lock jecxz nop mov push arpl dec adc mov cmpsb lods jg inc test je jns jb add addr16 sti add dec arpl pushf stos (bad) divb or dec or jne pop in insb push (bad) sbb lods (bad) mov insb jmp mov cmc mov sbb fwait pop das (bad) aam int3 jmp (bad) sbb mov arpl aaa ss test lahf (bad) out imul cmp jmp mov divl push (bad) rol bound push or mov mov pop and xchg sarb es scas pop jecxz (bad) roll stos pop jnp push pop das (bad) cmp add sahf stos jns mov sahf fwait std loop call cmpsb xorl fstps push jecxz loopne pop inc cmp dec push outsl pushf mov mov cwtl jae movsl mov notb aas out jo cmp loope mov les cmp data16 and push adc push stc push push push or and in jle mov jnp into (bad) mov mov iret sahf mov jbe cmpsl movsb mov iret xchg pop into mov mov push add jo sti cli sar lcall incb stos cmpb lock sbb jo aaa and iret pop add sbb xchg add mov pop mov push enter je lds shl cmp mov cmpsb roll mov xlat dec push or sarb inc and pusha push push add xchg adc mov jbe out xchg jle fsubs clc inc xchg push inc xor adc rol and push mov int xor jecxz leave das xor push sbb cmp mov jmp push sub mull ror (bad) jns xchg mov mov xchg xchg push jb cmp das sub fwait std inc add and dec fsub dec pop mov adc xchg xor and arpl outsb and push (bad) aad shrb mov call pop add push cmp adc cmp xchg adc sbb pop pop jns mov push sbb pushf fs out jp aad sub out sahf loopne push dec aas or ret sub cmpsb in movsl mov stos movsl and inc in inc or add cwtl mov pop jle push xchg lret insl and test out push sub into pop sbb lds push enter push push cmp mov xchg add cmpsl icebp and into pop imul jmp cmp mov and jp and popa mov and pop push fidivl imul jb (bad) in ss enter lods nop aad push or adc jg mov xlat cltd shl and fldt outsb xchg adc jne dec gs int dec aam stos add and aas inc cli fidiv aaa or cmp fisubl fisubl cltd fsubs or sti cmp rorb insb fldenv mov jns inc xchg adc mov sbb sti sbb es ficompl addr16 add negb push je imul popf aaa repnz nop in nop jmp je xchg sbb mov or push adc xchg lods jmp jp push push in clc aad (bad) sub stos adc mov sub hlt les cmp insl mov (bad) mov loopne jo push daa inc (bad) cmp cmpsb loope or jnp mov xlat xor push cmp adc xchg scas jo popa sub inc sbb sti and pushw jecxz pusha inc cmp jge sbb xchg mov stos dec lds or jl call xchg xor jle int ds cmpsb movsb push dec in out and test cmpsb and dec or (bad) scas and std inc outsl mov ljmp sbb xchg sbb mov ret sbb (bad) or inc xor jp push mov js jmp xbegin xchg mov cmp mov (bad) outsb jae repnz movsl movsb push jmp stos mov addl dec and pop cmp mov cmp add stc stc sbb or xchg push outsb jg pop fadd or jae (bad) mov push push lahf sbb adc adc insb pusha pmaxsw cmp add mov scas movsl aad and gs outsl enter dec scas xchg dec cltd push insl xchg enter inc cs pop push loope or inc scas outsb jno (bad) xor dec jae lret mov or aas adc pop (bad) mov in cmp in sahf mov push adc and dec xor pop jle mov lret push mov ret test addr16 fdivl ret inc pop push int3 mov or push and jne mov pop scas xchg xor aas lods (bad) stc xchg fild add int3 cwtl lds (bad) mov ret cmp and and shrl addl fstpt dec push pushf rcll push xchg ss add push mov hlt adc mov stos cmp dec mov loop outsl mov dec cltd cmp fimul sub adc stc cmc mov pop xlat inc lret test stos add jle (bad) mov xchg xchg push lea xchg mov mov js (bad) push hlt push jmp test ds dec mov in daa int3 inc and in loopne icebp ljmp sub aas aam mov sub xchg ljmp incb nop inc jae mov push roll icebp aaa cmp call je or sub mov call fisttpl mov addr16 mov sub rorl ljmp jb xchg sbb out xlat repz add imul and adc jbe out jo ret gs daa inc cld fwait mov or dec cltd popf and addr16 fisubr push fdivp js and repz jge into lods fildll jmp jge sbb xor pop sub divl pop inc mov dec in cmpsb add and push sahf cmp mov push jp lods or jle jno cltd lahf enter fs xchg xchg dec lcall jbe jmp hlt movsb push push or les lahf out add ja jmp loopne dec sub into jns cmc adc dec or pusha mov fwait add push mov xchg gs adc inc jno mov imul fisubr fnstsw fwait or mov pop leave cmp push and inc mov dec add mov jne imul or mov scas xor aas in inc xchg mov movsb and add (bad) xchg bound (bad) lret mov shrb gs je inc test cmp in jae int leave mov lods aad repnz ljmp dec sbb jae jnp fimull mov loop hlt mov inc mov jne dec rcrl divb dec jno into les mov jb lea enter dec fwait aas jae scas pop addr16 pop cs das lret aad mov cmp (bad) bound sbbl mov repz mov pushf adc sbb sbb into cs shrl loopw and mov out mov bound in adcl mov shll loop lock and mov insb arpl xchg outsb push or mov mov and addr16 stc (bad) mov pop add in out xor xor scas (bad) mov out sarb nop or push sbb jl pushf cmc enter lret insl mov pusha stc lahf xor pop mov pop xor int3 dec in jle scas push test imul int3 adc sti cs xor dec dec cs jb sub mov xchg jo cmc out rcrb xor sbbl and test popa xor mov and jno and dec mov les inc mov xchg cmpsl jb mov mov pop sbb jne or sub inc test popf push mov add jp iret inc mov and mov jmp push shll pop mov xor cltd jg stos xor push push mov xlat inc adcl (bad) dec push cwtl or mov lock lcall jns testb xchg jecxz jg (bad) or popf inc xlat push cmp aam stos mov mov or pop enter nop clc xlat mov test mov xor add lret or mov cmp into jp push or les push popf and inc inc pop aam data16 push pop enter ds pop inc idivl mov cwtl inc push insb ficoml push ja pop push pop pop outsl scas movb (bad) in lea add jg xchg add popa adc int (bad) test repnz cmpsb repnz in add inc (bad) cli add insb xor sub cmp mov sahf mov push lret stos jno cmpsb ret jno scas pop mov lret cmp inc push in pop pop add lret mov sti jnp adc inc sti jbe repnz pop fbstp in mov sbb dec cmp lea mov pop sbb aas adc push rorb cmp ss pop test mov mov dec data16 leave sti dec dec adc sbb mov dec inc lock test inc mov aad mov movsl xor inc test (bad) fld cltd repz pop sbb xor (bad) mov shrb cwtl mov sub movsl mov jge scas (bad) icebp or dec aas xchg cmc in mov xchg fadds jo movsl cs stc pop out add int3 xorb xchg jge daa lods inc and mov adc icebp bnd inc stos (bad) push push inc in mov mov and fisub aad jo ja andl ret mov dec movsl adc cmp push add or dec roll stc push insb insl dec or push mov inc push or sub mov loop js into ljmp dec ret cmp mov cltd fcoms and add lock fnstsw jae (bad) xor pop fisub loope jmp sub add cmp les daa dec or movsb and add scas jb jecxz or xchg arpl pop mov pop jmp mov adc inc dec mov dec lock xchg les and in mov gs je jmp rolb pop xchg outsl shll pop test (bad) test sbb cmp jnp test or jp test fcompl movsb outsb mov pushw cwtl aam scas sub xchg or sbb mov xor add xchg xchg inc movsb lret test mov xlat cmp sub je test into pop cltd cmpsl mov out and xor and fcomps adc mov jmp dec pushf loopne lahf add push add push loope insb outsb jp jp add rolb fisub sbb loop lret sub push shr fldt (bad) scas (bad) xchg scas (bad) icebp aas lcall (bad) push sarb jecxz pop sbb inc or int3 shrb inc adc iret outsb divb xchg sub or cld jae pusha sbb clc clc mov fnstcw adc jmp dec mov or aad in ss test or loopne xchg xchg pop sub je pop (bad) iret pop mov pop dec (bad) sarl jo das rorb (bad) mov jnp push sbb negb (bad) out xorb (bad) les imull icebp fisub add and int3 or push je cmp or leavew movsl fstpt pop jno enter or roll fldz cmp mov movsb mov or std add jnp and loope popf xchg sbb push lret mov in inc fnstenv fcoml push (bad) (bad) aad cmp pop or jae idiv pop pop aaa loopne icebp ds mov add lahf cmpsb adc inc shrb push rorb pop inc sahf xor mov cmp xchg mov sbb adc xchg outsl pop ljmp push arpl das fs (bad) rorb addr16 cmc pop fidivl xchg loop orl ljmp add cld add xorl repnz and mov aaa and jo roll inc mov out ljmp mov ss in test adc xor xor inc xchg fistl movsb sbb inc push inc push jle or mov lahf pop jnp pop js jb and and into inc insb stc repz mov fwait loopne jl pop std call fwait jl mov ja (bad) pop push daa fwait test xchg out movsl pop int fdivl outsb call stos or dec mov ret mov mov lcall sub imul mov push lret jbe inc mov ret sbbb sub push fcoms xchg stos mov cmp stos pop jmp call or aam sbbb bnd adc or std xchg mov cld aam (bad) int3 push xor push js rorb sbb test sub insb pop incl mov test nop repnz dec inc mov test rorl pop push jns pushf mov cld std rol mov xchg pop cmp out je inc fcomps imul xor fucomi push jle leave mov push pop rorb inc aad or push pop mov or je inc (bad) mov addr16 mov mov out xlat loope outsb fldt inc jb arpl add sbb and push and adc mov in mov jne jmp and ret jmp jne sbb jne jns leave dec sbb add xor and sbb out inc mov jmp dec (bad) in mov mov mulb jb cmp sbb push mov cmc pusha push xchg addr16 mov xor bound lods push or cmp mov jmp sti stc and sbb or push in jns je inc orl insb xor mov xchg cld pop mov inc fs dec lds inc scas cwtl bound iret outsb inc lret push pop into and jmp xchg push or pop or or xchg jno (bad) (bad) dec mov test (bad) ljmp sub cld lds xchg pop fsubrl loop sub pop pop pop sub and mov add cmp jle sti push dec gs clc push pop sub jae mov (bad) xor ljmp push jg cmpsb jecxz jl mov mov in les xchg inc adc sbb mov adcb rorb mov cmp bound ret mov bound pop (bad) jne sbb add stc ror in xchg sbb sti cmp call cmp hlt adc into mov dec adc or or mov mov pop sbb scas push mov xchg loop movsb frstor insl xchg xor outsb dec or test nop ret leave pop cmpb adc sub mov shlb outsl loop in popf fnstenv jno out push or push icebp xchg sbb daa or fisub jb xchg addl sbb ret lret adc lea cmpsl xor lahf adc push cmpsb and xchg pop pop int3 inc dec addr16 ss pop dec ret sahf andl or addr16 cmp push cmpsb cmp cli fist xor or cli hlt push test jo and ds test rclb les int iret out mov push (bad) (bad) hlt out loopne mov loop nop (bad) mov and mov movsl int3 cmp sub cmp movsb cwtl push mov hlt mov push movsl mov cmp out jno (bad) mov in pusha es jno jnp clc aam out jno sarb pusha push (bad) sub jp (bad) loopne dec (bad) int3 xor xchg xchg shll out adc push lret repz ljmp mov pushf repnz pop mov mov out popa js push pop push clc sub (bad) loopne imul push mov add xor or es fwait pop adc leave adc jp pop add and movsb mov imul cld add pop cwtl dec clc movsb ficoml fstl mov (bad) divb or dec push (bad) xor out and dec repnz jecxz mov lcall jecxz sub mov movd loopne imul sbb push pop dec les jecxz repz cmp pop imul mov sbb (bad) icebp jb xor loop mov int loopne iret incl out js adc push (bad) xorl lahf push imul mov jae pushf adc mov repnz xchg jo in aad push das ret loope pop (bad) aad das mov ret mov ja pop mov inc push nop (bad) orl and or enter test lds push jl mov adc scas adc mov sbb out imul (bad) sub addr16 mov ret in repnz pop push jl inc int add add mov cmp fwait ljmp push dec mov cld mov push int3 jnp adc push push lahf nop mov hlt nop mov or xor loope bound (bad) idivl mov jbe pop cmc mov lret icebp sub jmp ret ret pop xchg out cmp int3 add (bad) divb adc mov xlat push insb pop and push stos cmpsl not adc das les pop repz jg fidiv mov imul bound jmp rcl (bad) rep pusha dec arpl in sub icebp rorl mov lods xchg rcll imul sbb sti pop andl xchg (bad) xor jg int3 enter dec das icebp dec jne inc or lcall data16 sahf mov repz mulb outsb ret pop or (bad) push pop pop mov lret out in adc jmp mov inc out pop inc gs jo les data16 xchg sar xor leave subb pop fsubrp outsb aas test inc rcl repnz test dec and xor arpl sub (bad) push xchg and loopne add sub xchg pop fcomp add xor das ud1 mov sarb xor cmpsb leave int cmp xchg sbb mov call jb or adc sub rcrl nop loop jns sbb sub lock push fistp mov jae mov inc scas out xchg push push cmpsl divb jge lahf pop xchg enter nop and and ficomp dec xchg push in std mov or push and insb or push mulb sbb pushf cmpsb jmp jno mov adc or dec jle int dec ret pop pop push sbbl ljmp movsl and xchg cli popf jecxz js test lret aas cli adc in pusha pop ss (bad) sbb xchg jns out sub mov inc jmp jnp (bad) cmp icebp lret lea rorb xlat dec xor mov push pop fstp scas pop xchg mov sbb add push ret add lea adc stc clc pop lret pop sbb inc push push ljmp aas mov and js addr16 shll cli add push es sub test (bad) ror mov ss xchg mov (bad) lret cmp leave lock add push xor push cmp sarb les jmp jle jge pop rorl xor cmp jmp fist pop xchg test or pop push add in loope cmpsb pop cmpsl test jo and push movsb adcl test sbb imul int adc pushf (bad) mov xchg and fidiv and dec mov loope jae call pop fbld icebp dec jp inc icebp sub lds push mov into jbe pop sahf cmp push dec idiv out inc gs (bad) out cmp sub inc into pop (bad) lock xchg test adc je jb or xchg jge lret xor fimull ljmp lods adc xchg push xlat repnz mov mov pop push cmpsl out mov xchg pop push testb ljmp pop cmp push xchg cwtl mov iret loop (bad) pop loope xor addr16 cs xor aas or push xor xor cld xchg and pop dec movsl and stos xchg lahf out pop mov dec pop out sti div jno es stos jl loop (bad) cmc ljmp int mov ss insl (bad) repnz fimull pop sbb mov int3 or mov mov add in inc push repnz jb sub lds pop fldt in pop sahf xchg pusha sbb sbb daa mov loopne jbe,pn lds sub xchg pop ss or je xchg xchg and push sub and xchg nop daa repz iret (bad) (bad) aas sar mov sarb lahf push or aaa out mov jae and mov incb popf inc mov shrb sub inc sbb hlt imul push nop cmp xlat dec xchg push stos out ret lea mov jmp outsl js stos xchg ja aas test in jmp inc cltd cs test mov outsl loopne xor faddl repnz enter sub pop mov xor or (bad) cmpsl movsl or cmpsl arpl jnp imul inc jle pop push pop movsb adc jmp mov les pop aam cmc xchg mov ficom les and into cmp (bad) jmp jg or push aas xor add lret out cmp lea aas or push pop sub mov aaa jns jns inc jae nop addr16 icebp pop shrb sti sbb add mov test std hlt jns or push popa dec stos repz xchg cmp aam and xchg cmp jbe fdivp inc stc mull add insb or mov (bad) sbbb int rorl jle or pop insb lods push sbb psubb mov cmp lods and cmpsb dec rorl out stos dec or mov repz into test idivb pop inc sub hlt stc das push (bad) icebp lods inc test sar into mov or add mov or (bad) cmp and mov lock and add ds xchg cmc enter jo adc outsb and mov int adc sti cmc or stc (bad) rcr (bad) lret and mov (bad) inc out xchg cmpsb xor mov fcompl or je stos addr16 dec mov das xor test jne int3 pop jnp jge (bad) add sub xor (bad) ja jmp je jne sbb pop pop sub pop call cmpl std and sbbl jo pop xor gs push cmovns aam stos ffree loopne inc aas pop lea xchg out or addr16 insl into inc pop inc fcmovbe mov jmp in idivl mov ret repz sub jp into add pop jb pop mov cli cs ja dec fldt pop dec pop rolb mov dec xor push fxch bound adc repz adcb inc orl arpl sti ljmp and test lods incl cwtl fbld into or push xor jp adc push add rclb in mov jne insb pop popf cmp push not jge mov (bad) ja dec jo ret test fmul pop push rcrb movsb cld mov xor mov inc cmp enter inc cmp xchg mov ret push and movsb xor mov pop sub sub (bad) fisttp add sbb repz push test divb scas cltd movsl outsl inc adc or mov xchg mov mov xchg jne insb lds les or mov mov sub int3 addb mov jle cld iret push jmp cmp jl xchg in lret cmpsb loop mov popa in subl int sub pop xchg daa mov pusha enter xor iret les mov pop out pop fsubl ss inc leave jo push or cmpsl mov push aad nop mul mov in test dec xchg jle cmp dec cmp lds mov test or fwait mov enter jge iret jge mov add or dec mov (bad) push pusha aam lock jno mov jp repnz fcmovnb mov lret dec lret mov xchg mov fisub (bad) (bad) int cs xor lea ja dec lds fimull outsl mov fnop push movntq adc mov mov dec add (bad) xchg jns xchg adc insl mov scas jne cld add push popf jp pop test cmpsb scas in mov repnz scas xlat and xchg pop fidivrl push cmc mov sub dec inc or rcll into sub push jl push inc std push ror adc (bad) mov aam mov mov and jl dec (bad) std lret push jl or fstpt cld mov xor inc fincstp lock enter jns dec aam xlat bound into (bad) jnp pop arpl sub daa xlat (bad) xchg (bad) cmpsl hlt xchg (bad) dec ljmp mov mov inc jae loope insl xlat add cs push sbb ret test data16 (bad) mov xchg pop rcrb mov ja sub or and cmpsb sbb arpl daa inc mov sbb pop jno repnz mov cmp mov mov (bad) enter daa push xchg or out int fwait iret (bad) jae icebp xor pop xchg adc pop jl jns sub dec pusha lcall test mov insl push loop test and aaa rorb out adc inc sub lods xchg (bad) pusha dec stos and pop xchg imul ficomp mov cmc aam orl insb and and in nop inc test nop mov fstps shl lret cmp cli xorb rcll mov sub int mov pop add xchg jecxz push cli fcompl push mov pop lods iret aaa mov hlt adc sbb pop adc mov xchg pushf lret gs push xchg add pop loopne fcomps and xchg or orb clc jae mov shl mov mov xchg inc loope inc cmpsb mov jge inc pop pusha cmp leave insb out jecxz push mov xor inc push inc mov les subb out push sbb ss (bad) cmp ret cli mov repz int3 movsb enter and and (bad) fiaddl in push scas fs sti push pop cmp (bad) shlb add hlt fidiv mov les mov pusha or push push (bad) aaa xchg add out std out cmc cmpsb lret push mov mov cwtl movsl insl mov sub jno mov jecxz pop mov mov xorb (bad) push inc and xor ja xlat nop loopne (bad) in xchg push int3 jle add mov xchg xchg pop pop cli (bad) test xlat cli inc cltd (bad) cmp sbb fisttpl and dec or jbe xchg in push push add cs xchg aas cmpsl jmp push jnp mov push gs cld sbb jecxz push push xchg mov daa mov out lea lcall jl dec and jb pop movsl jo popa mov (bad) pop lcall (bad) lds pop jb cmp xlat mov pop jmp or inc push in in cwtl icebp negb xchg adc test push cmp fnop and bound sbb out mov stos arpl aam jae xchg push bound scas test imul insb scas cltd lahf das out and adc push cli divb aad decb push rcr xchg push adc adc pushw imul insb cmpsb pop stos jmp sahf fs mov test add (bad) rol pop dec lcall inc pop push lock mov in jmp add (bad) dec mov cmc jle pusha push ja mov add ss push jg pop push jbe lock mov mov div inc outsb adc cmpsl scas lods jg fwait (bad) pop sub sub sti mov (bad) mov inc pop xlat shlb mov cli xchg (bad) in add dec lds sbb (bad) mov cld shlb dec or pop push in and aaa and sub pop jge sub xchg rorl xchg xchg lahf cmp pop insb or or push lret rcrb adc shrb dec aad mov loope mov sub cs lds pop adcb fmuls and negl add sub repnz push xlat out mov movsb nop xor shrb sbb adc fneni(8087 adc mov and insb (bad) sar inc sub xchg mov fldt fs or pop fst leave xor (bad) jbe (bad) hlt push push sbb sub inc mov add movsl or mov es aas shlb sbb lcall or ffreep jbe loop es out (bad) cld cmc repnz pop imul loope mov fstl xor mov inc data16 fxch jae or sahf and repz out sub iret fimull les sbb mov fs xor (bad) gs pop mov outsl roll xchg xchg cld lret cltd cs cmp fsub cmp fist outsl sbb sub mov inc mov mov push mov shrb ss pop fs pushf (bad) daa xchg rol orb xchg pushf dec lods frstor mov in adc jbe int xor and cltd mov adc int3 pop aam fisttpl xchg and in dec lret sbb mov pop pop lret arpl pop lock add push iret (bad) lcall push andl mov mov pop daa xor movsl sbb bound cli insl insb dec (bad) out dec arpl jne cmp enter pand mov imul push pop cli xchg add enter (bad) jp sbb jo cmp and inc xchg sbb or jno insl xchg pop aaa xchg xchg or xor xor xor mov (bad) mov das and sbbb or push inc idivb xchg jb psllq into inc jecxz cmp mov xchg xor mov iret int mov (bad) mov xchg xor or movaps je (bad) fisubr jo cmp add repz inc scas in pop dec punpckhwd ffreep inc add test or shrl aaa add adc into add aas fsts and sbb pop loop adc divl push rolb cwtl adc or pop mov adc or rcrl sub fucom jge bound dec stos repnz ficompl mov xor push or cmp aas insl jno push xor aad mov cld push (bad) test mov (bad) jmp fnstenv scas bound fdiv mov sub adc shlb xchg xchg lock inc cs sbb jne (bad) mov jg xor push outsb jl roll fisubrl loop rcrl cmp dec mov push test push xchg xor in into and fiaddl incb cmpsb adc xchg data16 dec iret or xchg out lret push orl pop test cmp imul jns ret mov out popl in out push mov fsubrl lods (bad) fs mov int3 in cli fcmovnb and xorb jno aad addl mov push repz cs stos std xchg (bad) jb inc mov pop js mov in lds cmpsb (bad) fiaddl pop aam cmp pop in (bad) fidivrl mov fwait cmp xchg jne aaa or push push inc loop es mov (bad) iret int3 push and cmpsl jns mov ljmp push aad stc mov (bad) icebp decl xor or push gs mov les scas pop or rcr cmp cmp scas sbb jns and out cmpsl push jecxz pop popf xor xor or iret rorl mov (bad) nop sub xchg cwtl and dec out lea test cmp xlat insb lods pusha or mov pslld mov pusha jecxz inc push jno mov mov inc into cmp push sbb aas sbb adc out add ja out pop push adc repnz xchg pop bound pusha jne mov adc shrl pop loop pop fstps sbb pusha rol sub or pop adcl sub loope in sub cwtl (bad) dec mov and outsl add mov mov mov in mov and leave push mov popf ljmp lds cmpsl cmpsl addr16 shlb pushf jo loop icebp dec cli scas or insl xchg lods xor fcmovu aad jg out mov push xor mov insb jne je mov loop mov cli mov jo (bad) mov add sahf push xchg ret adc fstp bound inc dec dec dec xchg and pop jno inc add in dec mov arpl pop mov mov incl hlt xlat movsl notl iret push inc fiadd mov cmpsb add sahf xor clc pusha bound add adc add imul out xchg add mov xor mov data16 ljmp mov (bad) cwtl pushf push push imul lea cmp loope mov sub adc std insb and pusha cli xor inc sub (bad) lock jae mov inc test test adc aaa jge imul cmp in (bad) rcl call push pushf in mov std ja pop add lcall adc out imul lods cltd jo and cmpsb leave pop lcall xor push sbb ficom jl outsl push sbb inc in jmp mov xchg or cwtl lahf sti cmpsb movsb pop cmp arpl aam cmp sar push sbb imul mov sbbl add mov push adc mov jb les ljmp cmpsl dec dec lret mov sbb adc mov push mov jge cltd sbb add popa adc idivl test jae pop mov add lock xchg hlt sub js cli in cmpsl dec fsubl cli inc or pop (bad) repz jnp inc (bad) test xchg clc mov push push inc jecxz mov adcl out lods push shll ss pop test lret clc loopne pop jl fisubl pop mov xchg dec jge scas lock lcall fwait jno ret cmp (bad) cli and add cmp xor adc inc mov adc loope pop jae idivb jo outsb sub cwtl mov inc movsl out xor pop cs outsb sub test jo xchg fnstenv lahf mov iret ljmp jle ds mov jle sahf sbb pop leave insl outsb or push out les bound jle sti pop push add (bad) xchg pop xchg adc sub jb xchg cmp mov nop outsb js cmpsl xchg sti sbb jecxz add cs or inc out (bad) (bad) push cmp jl (bad) std or int3 push in imul dec xchg mov stos std cmp jg mov jecxz (bad) in out sub shl out pop ss (bad) jle into (bad) mov mov pop fcompl stos ss mov sub jp pop je jecxz jmp jbe sti mov push mov je fmull hlt or xchg dec arpl sbb aad jg mov ficompl mov (bad) pop adc sahf inc adc lods jne cmpsb popa dec das add je es xchg lock popa adc andl inc divb arpl xchg das jle dec xchg inc sbb push into push and int (bad) jl mov nop inc mov scas cmc adc jp jne ds sbb addr16 xchg xchg xchg call pop cmp fbstp (bad) mov mov cld les jbe jae outsl push stos dec mov lea jge outsb dec jb adc pop jge repz sahf xor mov xor daa add icebp lcall out mov (bad) stc fsubl and push mov add cltd cs mov or stc popa in adc imul jmp mov mov inc (bad) mov leave lods or outsl xlat mov jnp (bad) mov and adc int3 pop pop push mov dec adc ds jnp mov aam sub movsb cld imulb or daa (bad) mov mov xchg mov pop push dec sub ds cmp fstps fidivl (bad) and or mov dec cld mov insl adc (bad) push xchg xor xor cmpsl dec sub inc jbe or iret add sub pusha jmp (bad) frstor sahf cmc sahf cld sub dec imul rcrb int push lcall mov je lahf (bad) jle int3 adc sbb fsubrl loope sub fidiv xchg sbb test test or daa lret inc popf imul push popl out push mov xchg subl push jo mov test mov jb mov xchg mov imul insl mov pop mov adc lods push mov adc inc or loop aad dec (bad) lret sub in jbe xor sbb ror pusha fstpt repnz jmp mov js jae push push mov in mov fst or xchg dec dec fcomps dec loop outsl arpl fisttpll inc push jb scas push push sbb pop test or xlat (bad) addr16 dec imull mov jbe inc cmpsl or and pop sub rcr mov cmp xchg in adc mov popf push pushf pop and out mov mov rol pop xchg enter lahf add sbb int or fidivr mov jo push sbb sbb and es mov test je dec fs mov inc xchg icebp and ret mov dec adc pop mov cli imul pop add xchg or mov movsl cmp lcall add adc movsb dec push insb xchg pop push push adc xchg sbb sar push pushf push or jl inc imul sbb mov xor pop mov arpl push stc sbb jle jle (bad) mov jne shrb inc je xchg lock ret mov add lods movb jmp mov adc cmp outsl xor data16 mov cwtl loop adc lds rcrl insb push (bad) cmovg imul sbb sahf and icebp into cli shll jge leave in shll dec or addr16 fisub mov cmp jae xor fistl jns pop pop int3 mov cmp xor addr16 in call pop sub imul ljmp loop dec roll mov sbb in sub (bad) clc cmpsl fwait mov ja mov and outsl jmp jae adc daa imul int jnp xchg pop jo rcrb ror imul ret cmc rorb insb mov push mov stos add int3 dec dec outsb hlt data16 mov movsl mov adc out lret xor push sbb dec add sbb roll clc xchg repz test cmp inc out push insb pop lret jle xchg sub pop pop pop mov (bad) mulb and dec je xchg mov mov dec movsl sub imul or shlb xlat fcomi sti scas mov (bad) int3 jne mov adc (bad) adc es pop cmp into ret iret popa pop (bad) mov addr16 push scas (bad) sub xchg jg pop in aaa inc jle loop adc mov and dec pop or fcmovnb mov dec jo outsl adc jl adc out lcall xchg hlt jmp lret out (bad) xchg pop xchg leave aas int flds jbe out inc test aaa sbb push mov stos jecxz adc repz call nop bsf pop xor mov fldenv aad rorb jg cmpsl inc fwait aam mov add jmp sub iret dec cmpsb iret push pop iret sahf or call loop push jmp out jo nop inc dec pop mov arpl ficompl push leave mov pop icebp fsub pusha and cmp xchg mov or cmp add pop stc dec rorb into push std xor xchg movsb pop pop xchg dec dec (bad) jp dec fimul mov or push xor xchg (bad) in call cmp cmc adc dec fcoms shl adc sub nop test (bad) stos dec cmc jmp aaa lods lods adc push imul or jae fwait jge jb mov je sbb adc sub incl sub les dec hlt mov in xor loope or ds into mov sbb in std mov call and push pop ljmp xchg dec nop pop xor and ljmp jno add pop adc rcrb insb sbb out sub addr16 mov fstl fbld and outsb mov cs rcll push adc notl add dec pop es cmc ss dec (bad) mov sub jg rol subl ror adc dec notb push ret je fstps add enter dec and push sub imul sarl lds adc bound add lahf jecxz es mov pop and mov cmpsl mov add rolb cmp arpl cld jbe lods push pop fstpl scas jg pop jo sti cmpsl test cmp cs rorb (bad) push (bad) rcrb sbb dec push sahf push clc push decl sbb adc lret icebp push cmp inc insl iret fmuls (bad) mov and and inc aad xchg sub cli xor repnz mov fldcw sub pop mov cli (bad) xor cmp fstps cmp js subb and ror sub subl mov dec loopne jno push loop dec fs sarb (bad) lock out dec clc mov dec xor cmpsl aam mov push jnp popa jmp jno stos push xchg scas push cwtl mov add pop sbb (bad) xor jecxz sbb lret adc cmp lahf cmpb pop cmp sub adc mov test outsl (bad) int3 inc int3 cmp xchg dec push add ja sbb cli pop das add jmp ss jmp stos sbb test outsl test ljmp adc inc and (bad) cmp (bad) mov out scas dec cltd js cltd (bad) cli push inc sbb sbb scas sti into mov and into pushf and js ja sbb imull lods dec push insl xchg repnz and lret lock sahf flds leave stos push fxam fmuls or arpl rcl sub sbb jle inc and stos cmc mov loop (bad) sarb xchg inc fisttpll adc (bad) jne repnz inc and loope push xor fisubr mov pushf mov fild out add jne inc sbb rcrb mov mov jae push adc ja cmp dec in hlt push push jmp (bad) ss or dec scas push ljmp mov dec cltd jmp push and push (bad) outsl cld sbb pslld adc and lock clc daa es sub mov gs adc dec lds lods (bad) mov adc test clc mov cli pop pushf xchg push dec stos fbld jge icebp cmp scas jnp or ss int sub sbb push ds ljmp hlt push xchg adc out aas fwait repz leave pop jo adc call jae sbb cwtl cld adc dec mov push shlb cwtl xor xor jg add cmp add iret loope mov dec repnz cwtl xchg inc and mov (bad) rcrl sub popf mov inc inc fwait rolb ret or pop push inc xchg (bad) cmp lretw cltd popa pop push push fnstenv add cmp fs fwait lods out jae pop mov lahf fsubrl xchg aad mov pop or push inc mov loopne stc mov jne jl imul pop leave repz xchg mov pop daa in xor mov pusha jmp mov repz outsl pusha mov pop stos xchg sahf jnp pop aad ja push add aaa or push popf xchg jge lds mulb ljmp sbb mov fwait or mov js outsb pop xchg orl push add stos fbld loop orl scas jmp fcmovnbe popa sbb outsb xchg addr16 imul pushf hlt xor push negb push cmpsb xchg mov imul ret xchg sub cltd mov mov sbb addr16 out lret fldl mov ret xchg and or pop daa nop das push adc pop mov movsl stos and fst aaa aad pop sub or imul dec pop negb adc int3 (bad) lret mov hlt lods cld jp ret cli rorb call (bad) mov inc mov push jne outsl mov movsb popf mov stos icebp mov fnstcw or mov pop jo mov insb je shl dec ds (bad) leave jmp insb mov das test movsb sti cmp add pushf xor sahf inc pop inc inc push mov mov xchg ficompl mov xlat pop mov push add sbb iret out out dec loop mov and adc cltd incl push testl in ret xlat mov lods lods loope mov ds push lret fistl xchg mov sbb jecxz push sub sbb mov fadds xchg jne fsubrl dec sti ret lods xor js cli or fdivrl (bad) movsl xorl icebp pop mov xor cwtl popa and test sbb test sub ss or aam push mov daa aad mov sbb or jl pop das in mov sbb adc (bad) sti cli xor std adc aas aam rclb fs shr mov xchg adc cmp sub mov int3 (bad) cmp and fs call (bad) dec jle cmpsl inc test dec test js pop mov adc jo fwait cli in push cmp xor dec xchg push xchg int3 adc adc jbe jp and inc cmovnp add mov adc sub scas jmp xor std sti aam mov rorl push fcmovnbe dec pushf sbb bound adcb inc jg out add stc repz mov mov aas loopne mov pop mov sbb repz pop sti clc xchg dec mov xchg xchg sti ljmp xchg jb (bad) sub adc cmp stos cltd push inc mov (bad) xor nop mov dec fadd jg lahf (bad) imul dec jns test and inc adc push adcl cmp inc xor aaa nop push cmp out clc push mov clc mov add out xor jae mov decb aas or lods loope call jns pushf lock add jne fldl insl jmp cmp clc les stos stos pop lods add cmp xor jg dec and mov sub push (bad) sbb jle leave adcb fisubr jg mov dec sub out sbb data16 and fadds xor (bad) test out xor aam popf mov add jbe ret sub enter scas fidiv sahf cmp aas cmp mov mov (bad) jns mov sbb dec popf pop cld jmp xor pusha dec mov xor mov push movsl out sub inc out imul sbb mov leave out aaa into std fstp cmp cmp or xor or jnp (bad) mov popf mov loop xchg call inc cmp and xchg scas repnz and pop xor out cmp hlt cmp aam imul push lret cmpsl test xchg enter nop popf cmp jl stos movsb insb push pusha dec mov adc jmp jmp mov fcoml mov gs lret and fisttpll les mov xchg sbb data16 jp jae js roll cmp jnp or mov xchg shlb jns ret sahf bound adc lods or lock loop sbb xlat adc mov push push pusha cltd sbb xor cmpsl inc rcrl mov fildl ja pop mov jae mov cltd test pop jb je jbe dec loope popf mov aas push mov hlt pop push pop mov sbb xchg popa jb xchg dec loopne cld or push arpl jnp (bad) xor rolb pop pop mov fmuls insl js pushf jl pop xor js adc or mov (bad) int sub in mov icebp call cmpsl fs das sub mov dec leave xchg mov sbb adc sub in add int stos test icebp fimul scas cmp ret push push std inc push in fidivrl fadds test jns mov scas fbstp (bad) in loop mov sbb fcmovu adc and mov add mov lcall xor fsqrt jne (bad) ds ja lahf movb scas xchg mov sbb ret aad (bad) cwtl test adc je or adc push (bad) push xor insb inc fs xchg xlat nop xor xchg mov push stc imulb adc adc scas dec test or jnp push xchg sbb sub inc add sarl and out (bad) mov xor mov clc imul ret push aaa pop mov push fistpl stc pop fldcw data16 sbb adc addr16 std nop cmp insb pop mov pop pop es inc enter sub enter and xchg pop xor sbbb mov aaa test (bad) popf das inc dec jp enter loop sub sti adc iret mov mov (bad) rcrb ss sub scas pushf xor (bad) jg nop ret push les pop hlt sbb cmpsb in mov loopne (bad) mov xchg inc icebp inc mov add jne fdivs test nop dec test and repnz stc xchg into dec pop (bad) aam cs sbb cmp pop jbe pop push lea mov cmp stos lret cmpsl sub out insb add je popa xor jge les xchg mov (bad) subb lret pop sbb xchg orb (bad) (bad) cltd push int cwtl jb leave loop (bad) repnz pop sub je imul mov fadd std popf jns inc inc out fxch pop cmpsl out fstpl movsl adc mov jmp stos cwtl push enter hlt test (bad) push aas dec bound mov sub rcrl int3 mov adc lret popf test out xor xchg add push inc imulb (bad) mov stos adc cmp mov ja in dec inc and cmp stc (bad) in mov fidiv push bound xor inc sub adc (bad) mov leave inc jno pusha aam or aam mov cli pop lea push daa xor inc sub movsl jae jmp cmpsl les or or push pop arpl stos cltd and jns dec inc push cmp icebp pop dec pop jle cmp xor sub jbe test clc inc int pop out xchg test jmp cltd push loope mov std iret loope adc inc xor jne mov sub and jnp mov adc ja rcrb ja jl mov daa dec inc pop nop mov adc push out add push mov inc jp int3 jb xor outsl push push stc (bad) icebp sbb xlat (bad) mov rcrl jne pushf xchg das pop add or pop pop cmp (bad) mov sbb inc insl sbb cmp jge mov push orb xor jb jae,pn jecxz mov xor and jl jl mov cltd pop mov sub js fimul nop sbb insl loopne ljmp enter mov ds pop dec or cltd mov dec mov adc ds popa test pop fmull fs mov out insl out addr16 fistp mov and mov xor int add mov mov enter arpl std pop push xor dec movsb mov clc (bad) clc inc add cmpsb mov imul xorb lahf cmp in scas mov sub push xor sbb sub shlb mov out cmp adc mov mov sbb or dec mov pop fcoml mov cmpsl jmp push cld imul lret out and sbbb imul mov jp push test jl sbb or pop pop popf sahf mov lret jns mov xchg rolb loopne leave cmpsb cmp xor add arpl scas adc add (bad) dec or mov rcl mov lcall cmpsl jo clc sbb out dec inc inc cmp pushf add or stos mov jl fild cmp inc out pop pop push mov and inc (bad) pushf into iret mov nop mov movsb sub les (bad) mov pop out pushf push dec inc cmp mov push fwait jge or negl cmp push dec lret sub faddl inc mov pop je test mov or fwait mov aas mov (bad) jp mov std std pop jle fst movsb add dec loope adcl xor adc mov test and push inc jmp js ja pop ds test dec xchg jecxz push adc mov fadd push xchg jge loop jg or cmp sub dec mov push sub popf test in mov dec jnp push popa aas loope ret adc pusha xchg xchg sbb pop shrl fs (bad) (bad) jo dec imul mov cwtl mov insl inc lret or xchg adc dec dec adc ss (bad) xchg push pop push pop mov movsb shrb xchg (bad) in jecxz mov mov mov dec (bad) mov shlb pop mov mov test pusha dec push clc cmpsb inc sub pusha into xchg xchg clc inc out leave xchg jb push push test hlt aam mov test insb in push in jle mov (bad) jge rorb repnz out pop xor scas cmp mov or sahf mov and cltd xchg xor test adc or repz mov lret (bad) lock hlt lock in xor mov xor cmp push mov mov push movsl xchg (bad) or mov push test xchg (bad) sub cmp call add or jge push and repz xor js into stc loope inc adc inc inc cmp adc test add (bad) push sbb call mov std cltd gs push pop negb pop popf into in out mov cmpsb sbb xchg mov sub cli sub mov movsb imul test test xchg repnz pop pop cmpsb mov push cmp cmp jb inc ljmp (bad) cmc cmp xor xchg (bad) or (bad) jbe (bad) data16 or pop lds js push nop pop and stc lods adc je (bad) in ret sets jge push or jns add fwait sbb sub (bad) stc jg movsl inc cmc jbe stc inc push jno sub popa andb shrb adc mov popf loope push daa adc inc inc adc xor jbe int3 jecxz sub push xor and rcrb jecxz sub mov dec sbb out add scas mov pop or fs adc pop xlat or mov or mov xlat das imul mov ret andnps jp xlat imul push daa mov mov or fildll dec xor arpl fnsave and lret gs mov jb hlt cmp jle mov insb rcrl adc pop xor popf movsb inc mov push repnz lods addr16 xchg fs push mov test inc (bad) jge lcall scas pusha fildll cwtl jae fbstp into sbb dec xlat (bad) cmp fldenv mov hlt mov and jmp sub pop rcll jg cmc outsl stos bound and scas xchg jb imul pop cwtl mov je ret scas and push jp out add lahf push push not dec imul xchg mov sub aas sahf pop icebp cmc aaa rcrb add das (bad) repz xchg icebp adc rol insb loope popa xor mov subl mov jp,pt (bad) rclb or dec xor das sbb dec cld cmp lods je sti les pop lea pop shll insb insl or rorl clc cmpsl negb int3 test push test enter dec fninit (bad) lar mov jns xchg jge dec gs dec push fdivr gs inc ja jmp stos inc mov stos and xchg lahf pop xchg (bad) cli test xchg outsb mov std or xchg inc sub sub and fdivl sbb mov call cmp das lret imul pop inc and jmp fucomp movsb fnsave jmp mov test lret (bad) (bad) out mov or fdiv add sub gs sti xchg (bad) outsl fisubrl mov in mov inc arpl push xor jle mov stc cmc add fnstcw clc out push bound push lcall fstpt push mov add cmp lcallw iret movsb dec add inc sbb test leave sti xor gs jae push icebp pop cmpsl nop popa adc pop mov sbb sahf mov cltd add adc ss pop out (bad) minps cmp sub ficompl or sbbl cmp jl jnp sub ret add inc es out dec cwtl adcl sarb mov add mov out imul and shrl mov push cmp mov sbb jb dec jl push mov add jp mov xchg out sub sub lods das mov mov repz jge ja hlt xchg icebp fdivrl enter ret pop cmpsb clc lcall test pop imul repnz cmc nop fdivl push pushf pop inc pushf push dec and out (bad) test pop mov jmp jb mov shlb mov movsb (bad) or jnp test arpl pop loope cmp out out psubusw outsb mov inc out std pop in dec pushw es xchg and (bad) in int in jecxz inc jbe lds pop ljmp inc es sbb fdivs or xor sarb ret jmp movsl jle sbb insb sti cmpsb js pop lock xchg jge and adc in jnp cmp enter in adc insb mov fwait cmp mulb rclb push push mov dec in pop (bad) lret insl rolb inc cmp mov lcall sti data16 std jns insl shrb jecxz xor popa sti ret cmp jno cmp sub jbe andl fisttpll or and mov add bound ficompl xlat cmp xor dec push push insb ljmp xchg jmp in inc push ror pop mov xor lret adcb fisub or test adc iret add push movl xchg mov dec adc xor repz movsb mov ds lods test jae or and mov mov mov cwtl out xor insb aam jl mov pop es into dec mov inc enter dec pop push mov sub jae jp adc nop add adc test xchg mov mov push lahf sti test hlt jmp rorl jge fs mov popf out jmp aaa push mov out js push jns push push popa (bad) pop jge push rcll shr pop je cli pop dec stos push loop xchg lcall in into ljmp (bad) add push in addr16 jne or mov subl test dec and mov scas mov test mov popf and cmp rcrl jl leave jp iret sbb rorl mov cld jb sti push and dec clc mov lods aam and test loopne mov adc test pop stos jl mov or cs jae add pop xor cmp lods (bad) dec mov jecxz hlt int3 mov sbb inc pop ds dec roll mov icebp (bad) rorb jmp cmc mov xchg mov pop sub mov sarb pop or repnz xlat std movsb ja addr16 into fidivr adc xchg or jne stos sbb adc inc and mov imul scas mov pop cs xchg (bad) mov push or pushf cmp mov nop sub mov adc pop cmp xor mov repz mov and icebp mov pop gs xor lods sub or in popa rsqrtps push in es push add movsb mov cmp pusha inc (bad) stos jno jnp mov (bad) inc xor sbb adc xchg pop dec jbe and scas adc jno pop rcr push pushl fisubr aam adc fisub aas ffree std add pop push dec mov ret mov or or movsb adc scas insl je fistl mov adc jnp repz inc sub mov add in and push add frstor mov (bad) iret repz daa fimull bound fcom jecxz mov data16 pop test fadd cmp xchg addl and push lret xor (bad) jnp xor mov (bad) jmp dec pop xchg sub and fdivrs enter sbb inc sbb repz in lods test xchg mov lea (bad) aas out ror insl test mov inc arpl jno lret insb jno lret fwait rorb xchg sub mov imul pusha mov ret xor fucom inc (bad) mov jge inc jae ret bound push clc push lds jns mul inc jnp adcl outsl nop (bad) mov sti xchg sbb lock push clc std or in dec fidivl pop pusha cltd cmp add or ret fsubs fnstcw add mov mov mov arpl aaa aad jmp pop xchg mov add jmp add sbb push sub mov push lret nop out jg iret lret jb rcll pop sbb jg rep or adc mov push pmulhuw repnz inc xchg dec sub stc idivl mov scas dec and fisubl jnp xor xchg push les jbe push sub ret aas pushl shlb xor inc xchg mov xor clc jecxz mov in addr16 mov xchg push fldenv inc dec (bad) outsb jo les push jmp decl pop cmp loopne add (bad) sub pop add sub sbb mov (bad) xor outsl or test push or andb push (bad) stos lock xor mov sub jbe jns (bad) pusha cltd cwtl lret int cmp cmpsl lret leave jl scas xchg pop shl in and pop (bad) lea push push mov fisub pop cs adc lret mov mov lret or jl movsl or scas add jns xorl lock push hlt stos xor sbb cmp dec call aas call sub mov test pop shll or loop sbb shr jae jp dec jge nop lods mov loopne sub adc add sub add aas (bad) mov lret xlat test add les sbb adc sub outsb int3 push sub lods adc cmp and push xchg xlat jmp sahf adc add sbb int das test jecxz cmpsl push in test std dec inc js aas aas sbb inc jg xor hlt or popf sti lcall dec jmp test into aad mov cmp dec mov push mov xlat sbb pop jnp std int mov std fxch inc test jns pop fs gs ss mov rolb add call push cs xchg sar sbb xor inc push fsts cmp jae mov add clc lcall aam cmp add lret jl jnp xchg ljmp pop cmc nop iret aad push repz sbb pop icebp les aam popa xor out std pminsw pop inc xchg jmp jbe adc pop dec (bad) pop ret test imul mov data16 sub daa jp or call pop callw add or push dec push outsl sbb pop push les mov jl cmpsb mov jno mov sub and int3 pushf out rcrl into orb test loope test sbb push cmp mov test inc bnd mov mov mov or cmp loopne pop int3 ja aad jne cmpl (bad) sub jmp lahf fs push cmpsl xchg test jge jmp sub fbstp lahf mov mov pop movsb sarl dec call or (bad) pop sub pop pop xchg and in xlat ljmp dec jle mov mov test insl icebp mov loopne cmp test or ss stos mov es dec leave adc cmpsb (bad) aaa cmp xlat jp sub mov xrelease (bad) or movsb or fistl das das dec addl repnz xchg lahf or (bad) int sbb or mov sub imul test push push mov mov mov ljmp in jle icebp or popf and add cmpl sbb mov sti mov pop push lods push lret mov mov push test fimul adc lret scas call xchg or jns sub sbb inc cmp cli cli sbb stc test test movsb pop lret pop push sti fwait lea sbb xchg jne aam mov je test inc fcompp mov push mov push lds stos cld jmp xor enter mov push fstpt out loope loope mov sub ljmp nop dec xchg (bad) std xchg sub mov aas (bad) (bad) cli inc pop sbb and mulb andnps inc jmp out cmpsb sub mov xlat test cmpsb pop mov pusha and psraw push xchg xchg andl or jge sub es xchg loop icebp sbb icebp frstor jmp mov pop mov cltd add cmp fsubl pop ficomp or repnz leave jmp stos jbe pop jae cld jo adc mov dec add inc pop xor pusha mov jae pop jnp cld sbb in cs adc xchg and mov jnp pusha mov push daa or clc cmp jg lahf push sub push aam jmp fucomp lcall das ja pop cli mov cli cld pop inc loope in cld cmp pop into mov int3 sbb testl lahf insl add (bad) mov sete mov push or imul jge inc or stos lods mov lea fucomp jns dec loop jmp scas data16 jp pushf mov lods inc mov jmp xchg mov out or ret aad cmc mov jl mov decb xchg push repz add mov jg aas or rcll insl mov pop cltd mov imul call pop mov dec sar push cld loop or insb int3 cmp mov pop sub mov pop sub mov and outsl dec in sub and sbb repz push adc nop inc xchg sub dec jl daa mov adc or mov test add aad rorl outsb and mov sbb stc xchg int3 mov xor jge push xor pop lret mov xor jg inc push outsb out push ret mov dec pop fisub mov push adc out rorl mov jmp cmc cmpsb sbb jb es or bound sub testb xor incl cld pop in jae (bad) (bad) (bad) jne ret lock addr16 push in adc daa push dec mov cmp xchg lret enter sbb repz mov shl fs pop stos push (bad) jl,pn movl xchg mov in push pop inc dec scas movsl dec (bad) cmpsb ss mov push and jl jb xchg mov test scas lcall lahf lret iret sbb push sbb adc div movl fcoms outsb xchg stos das and cmpsl mov jl sub int push out mov inc cmp pop sbb push push xchg dec dec and stc add data16 rcrl (bad) inc cwtl add clc sbb divl pop int3 jbe js test jecxz xor pop mov sub aaa pusha jne xor xor cli lods mov out jbe int3 xchg pusha jmp cmc dec data16 rcrb nop sub inc stos ljmp inc fiaddl cmc jg fnstsw scas pop in into add stc mov mov mov lcall js cmp ret incb xor icebp xchg adc shlb dec jne sbb push push xor mov lods inc fwait repz pop popa stos add ds out push cmpsb and adc cmp movsl xchg pop std pop enter loopew outsl into xchg clc cmp mulb push xchg jg out adc lret popf mov aad cmp sub dec and ja arpl mov push cmp stos xchg arpl xchg aam (bad) aam ror dec xor mov push frstor sti inc loop test inc mov or sbb mov lcall and sub pop cmpb mov aas mov notb mov add add push icebp in mov pushf fcmovb (bad) add mov fistl shl inc xor rcr pop insl mov stc mov pop daa jmp pop cwtl (bad) jne add (bad) mov pusha cmp cmp xchg ret add add jns pushf lahf fistl out pop jne dec insl loop jno pop xor jl out shl and insb js rcr (bad) imull psllq xchg arpl push orl out imul rcrb xchg in ret int3 adc dec mov addr16 lods ds fwait orb stc mov test jle scas in add add shll push je enter and mov sbb xchg ret sub xor in push and fisubr sbbl cmpsb jle push in and pop xchg adc popa xor lcall test clc into xor bound roll lods inc sarl pop dec insb mov mov leave cmpsl sbb xor cli jae xchg mov inc push xchg push imul mov scas mov stos imul mov sahf and icebp push pop out lea shlb xchg push push and out (bad) xor push pop scas xchg je cmp sbb ret xchg pop test xchg xor mov (bad) movsl adc mov in add fimul movsl stos test sahf mov shll mov xchg mov movsl dec xor fdivl pusha cmc rorb pop mov popl cmp add loope inc mov add pop lret push or inc xchg test adc (bad) fstpt cltd jae cmp and ret or inc xchg mov (bad) inc push mov sub pop fwait enter imul in arpl nop xchg xlat and sub fistp mov lret insb subb xchg adc sarl loop fadds inc test test mov ret das add sbb aaa push jp aaa push ljmp and xor (bad) in pop test push fst pop push mov xrelease add adc pop add cmp mov andl xor rclb std jecxz add mov test or xor pusha js insl popa addr16 insb insb add or adc or pop inc mov add xlat loopne mov push sbb fistpl and lods sub jle mov push lret push ret jp shlb push jne dec xchg scas cmp icebp shrl jp cmp pushf jne sahf fs aaa jbe (bad) adc ss out test mov cmp push cmc jnp iret bound popf nop movsl into push test jnp les cmp ret cwtl push fsubl push push outsb push mov mov insl out test inc xlat pop mov lret ret aas cmp out pop lahf arpl sub mov pop pop push or sbb or adc add cmp push xchg mov call jnp test mov scas cli xor daa adc scas jns (bad) ja mov sub mov lahf outsl popa xchg lret pop mov xor (bad) in add xchg cs int3 jae pcmpeqb add adc sub push and lea cmp aam sbb mov sub subb xor mov stos roll pop nop ds sub push popa leave push popf xchg jg (bad) sbb xchg (bad) jle and int xchg sub xchg sbb pusha jne movsb rcrl xchg adc je enter stos xchg daa adc jge pop pop mov adc sbb rcr rcl pop bound adc lods aad out lds lods pop push sbb (bad) cmp aas push mov dec out mov cwtl pop out (bad) stos jg xor sub add inc mov jecxz leave mov sub sub inc inc add xor add in or add inc inc xorb ljmp mov and icebp fs hlt adc mov push lret imull mov mov sbb pop and jle loope xchg andl mov fidivl lahf adc mov pop pop out in outsb movsl dec mov xchg jae sbb leave mov and and xor (bad) xchg outsl or sub mov aas mov add nop cmp sbb fcoml xor loope dec jecxz or mov stos movsb or adc call pusha lea je lea lea pushf lea call lea call pushf pushf mov pusha xchg push push lea jle jae movzbw lahf movzbw xchg pushf lea pusha movzbw mov setnp push mov lea bswap call pushf push lea ja jb xor pusha ror add jp cmp dec movzbw call cmc sub pushl pushf mov lea lea jmp js and xchg or xchg or rcrb sub sub (bad) xor xor ljmp pop mov fcoms xchg loop aad std adc xor jnp lds sbb sbb jg test or nop std adc adcb sub pop movsl enter mov mov dec mov rcrl in jae test or mov push mov cld push pushl cmp std pop mov test outsl or mov add adc add call call jmp mov js xchg or pop sbb push mov sahf test sub xorb cmp xchg repnz cs test fsubrl inc cmp lret (bad) leave sub cltd xchg fcomps and mov inc push fst jns,pt ja jp inc les es lods xchg push jbe mov cmc fiaddl scas popf mov pushf xorl mov out dec in into out aam icebp pushf jp gs fstps stc mov xlat xor and addl (bad) test mov lahf rclb sti inc sbb lock std std test xchg fs mov ret jae aaa ljmp xchg pushf mov pop fidivl xor and sbb add dec push and aam pop int3 add in sub movl mov xor es in xchg push mulb out add dec add pusha enter rorl jb jle or jl dec xor fs dec in pop mov mov iret cmc dec cmp icebp fildl (bad) fnstcw lock push or and and sahf mov arpl hlt loopne divb test cs pop mov aad sub add loopne cmpsb hlt negb sti cmp xchg fs divl movsb inc sbb fidivl pop popf lods iret inc and mov adc fistpl push cmp mov xchg push cli cmp add add es les and cmpsb pop cmp dec inc pusha mov add shlb sarb dec dec sarb dec cli cmc icebp inc mov rcll shrb leave push movsb (bad) mov mov and pop enter mov fisub enter inc repnz inc and mov jecxz (bad) inc sbbl shrl mov dec add cltd popf wbinvd lods loop int3 addr16 xor (bad) push outsb cmpsl jecxz sbb xchg sbb sbb in inc pop mov cmc jl or xor lea pusha lea call pushf cmc mov push bt call mov pushf xchg mov setae push mov movb pushl jmp pushf lea jne pushf neg mov pop shr clc call jmp call pusha movsbw rep jmp push push lea jne setge lahf movb setg movsbw ja push mov jmp mov pushf cmp pushf jmp loope lods jns or lds jbe inc sahf jo sub jne add dec in nop sahf push ja mov add and ds mov and sbb dec inc and test out pop fsubrs lods fist cli outsb outsl sbb (bad) inc mov xor out xchg dec cltd mov roll pop lds xchg int3 cli jl fisubrl cmpsl sub test into jge adc adc leave or pop mov inc mov call leave fistl (bad) sti push (bad) sub cmp push gs sub fistpll sub fsubl xchg (bad) frstor mov es or inc mov lock sbb ficompl mov jae lcall mov or sti cli inc sub popa lahf call cs dec mov jne jle and repnz imul push jnp push insb fcoml popf push add adc stos adc out mov lahf in mov test fucomp dec movsl push icebp loopne jns or sub into rcll mov gs ss pop push dec add scas ret dec dec loop xchg cmp insb adc sbb mov pusha jmp push dec sub pop mov mov pop xchg les pop lahf xchg or add xchg ret popf cmp pop lods fdivl stos mov lods jns xor stos test mov push adc fwait pop repz fwait adc mov mov xchg mov jmp movsb repnz lea xchg outsl mov insb and test push or in pop cmp fdivl ljmp xor je test push xor cmpsl pop daa (bad) mov lret inc stos xor mov inc push xchg mov adc cmpsl jg andl cmpsl push and mov lret mov int fistpl aam movsl adc dec mov xchg sti add sbb push int xor mov pop or fs pushf pop in sub and and or rcrl mov push call (bad) repnz adc in outsb ror outsl ret or popf pop or movsb sub xchg jmp pop inc cs lea add pop iret push pop leave push jge inc rorb push test push and jp pop lret cmpsl push test gs or iret insb lahf leave pusha sub sub mov xchg ja loopne jge xor repz pop xchg add mov inc push lea ret scas push cs mov adc pinsrw inc sub js mov push adc mov fimull xor sbb push sub mov pop je test push mov fwait stc inc mov xchg or jmp ja pop repz shr sub daa sub cs mov imul movsl lret cltd dec cltd insl lds imul pop push sub subl jmp dec (bad) (bad) fnsave xchg xchg and and in add imul stc dec mov sub daa mov and lcall push clc pop loopne mov jne xchg or jo stc cmc or dec jo adc dec mov fcmovne aaa inc cli cmpsb loopne test or movsl lret mov adc add out mull jo mov pusha fmuls out jmp mov and push (bad) int loope mov (bad) xor inc cmp in cmp mov jmp loopne xchg and cmpsl pop sarb mov outsb int pop push mov pop mov push and fildll push mov or std scas jmp rcrl (bad) nop faddl pop xor mov ret outsb out inc lret mov jne push mov push add repnz xor pusha movl jmp xchg inc sub xchg cld and mov rolb loopne fidivr pusha xchg fdivs or cmp and imul inc mov dec rcr ss pop out in add ljmp sahf and lcall push ljmp jle xor xchg fsubrl or mov mov jno sti push xchg push cmc mov jmp jmp loop or lret cmp cmc lahf pop inc movsb pop mov in dec idivb cmp scas into push rcrl rcrb and and jbe push lea sbb dec adc pushf lea jb jb stc cmp cmp inc mov lea sbb movzbw lea lea mov push call lea je ror dec setge push add movsbw inc adc sub inc bswap lea shr and bsf ror pusha mov stc inc jmp sub jne sahf or jge in es push lock cld sub mov sahf out cmpsb les (bad) jg mov inc mov push mov sbb and push flds pop sub push shrb leave pop jnp out sub cmpsb in sbb sar add inc mov ror dec mov fdivrs inc jo cmp or jl outsl negb imul fsubrs push mov xchg cmpsb xor cs icebp adc adc std xchg loopne jb pop mov jnp pop or (bad) sub mov xchg mov bound pusha pushf lea jne pusha jmp cwtl call jge xchg inc lahf or fildll sbb or adc mov push js (bad) iret out inc loopne mov (bad) mov add stc push cmp icebp (bad) loop xchg pop iret push sbbl rcll pop ja inc inc lret in dec in lret xor mov inc jmp jnp dec pop and add pop xor add mov call and or aam jbe dec ror loope cltd icebp stc popa xchg lea daa sti fcmovnbe inc or jg cld dec sarb xchg faddl out jbe add dec jno insl bound adc xor cmc lock mov repz fsubs (bad) hlt mov frstor test add in popf lock add push adc mov js lods add cmc push jl sti inc mov xor jnp push cmp out fmuls (bad) stos sub cs scas test leave mov xchg jecxz hlt xor mov movhps xchg test xchg cmp xor aam push lcall add clc mov repnz pop mov cmpsl and out icebp cmpsb xor xor push out pop scas fs or bound jb cmp (bad) jl sub mov fsubp mov add int xor add aam dec jnp push adc test (bad) xchg or mov push int (bad) mov js push xchg pusha add adc adc inc call mov lret dec push icebp add xchg lock mov add lea mov or cmpsb dec gs jnp imul jmp pushf movw lea ja push jmp jmp mov xor lds (bad) jno scas in fadds lock testb stos inc mov into sarb enter xchg sti loop cwtl push (bad) je pusha lods out dec adc call ljmp (bad) arpl sbb test sbb ret pop loope dec dec inc push mov adc negb push (bad) inc test push inc daa dec and jp aas scas std pop pop sbb test xor test dec shl cmp add mov inc cmp mov out int (bad) fcmovnbe pop lods cld mov out cmp pop loopne mov xor ffree fisub cmpsb mov in (bad) sbb in mov rol in dec pushf xchg fwait xor and je bsr add bt pusha sub ror sub bt shr btr sub call or les adc sub cmp mov aad mov jecxz (bad) and mov inc leave pop lahf ss pop sti insb add or insl jne (bad) aas xchg adc dec jno dec mov stc ret add adc lret sbb jns push divb into xor dec rcrb push jp es outsl ret sbb xchg xchg andl sub sbb inc add lds mov jb jo jnp and test pushf dec mov stos mov gs xchg (bad) jns nop out dec in jo sbb popa clc pop cmp sub add push adc sub test mov mov push lea mov call and in fwait or mov add out outsb push fdivl out or jg jae adc stos int adc mov mov test jg cmp sub xchg jg insl or mov jne xor mov mov aas movsl adc data16 push push call js das pushfw mov pushf movb push lea jmp cmpb jne shll shll push lods not sub ror not mov pop ret mov jbe or and pop shl sub pop jae jmp pop in pushf xchg (bad) sbb inc mov pop cwtl gs pop xchg add dec mov aas xchg cmp dec lahf cs test jno xor flds push mov pop jecxz cld xor add mov aad scas xchg int add push fdivrs aaa out inc jp and stos jl mov stos xchg in lret or addr16 aas loop push cwtl ds xchg add loop add pop repnz imul gs test push cmp cmc jecxz mov lcall fnop out jns or xor fdivrs out cmc in pusha fucomp pop rcll fisubrl popl in push jnp or test lods fisubl jnp mov sub mov push adcb sub aaa cli imul jge int rcrb mov es adc lcall mov rcr inc adc sbb pop dec dec cli jmp mov fidivl fcoml (bad) push add pop hlt ret mov iret leave out xor mov notb push sbb test mov sarl add sbb negb xchg pop cmpsl mov (bad) mov sub push movsl insb imul cmp fisubr dec mov aaa push cmpsb push mov ja push hlt sub in cmpl out dec pop daa or adc mov dec and popf push cmpsl sbb (bad) mov jnp gs adc and sbb adc dec mov repz (bad) xchg mov sbb scas xlat pop add mov lret adc push test mov push nop dec imul enter in popf lahf cmc je push mov data16 sbb hlt dec int3 mov add pushf lea jb lea mov stc neg not mov mov xadd cmp mov dec add sete xchg movzbw setl setb pushf push lea pushf jmp pusha adc jmp in cs loop or xchg xchg jnp xchg push mov push lock cmp pushf xor icebp xor xchg jne inc adc dec (bad) mov ja mov je cli in leave ds sbb cs ljmp lods (bad) imul jnp call xor outsb push out sub lods rcll add lahf lcall ret and inc mov divl mov cld (bad) xlat outsb in sbb mov jae aaa out lret clc xchg jge enter inc inc jmp ja sahf adc xor (bad) xor adc or pusha cmp fs ja push lea call jmp fisubl pop lret cmpsl or outsl mov jge imul icebp stc ja arpl inc mov mov lds xchg out les out outsb sub shll mov arpl mov xchg fistp dec rcrb mov stos pop test and push xchg pop in push fbstp push jg add sub sbb pusha rcll jne roll xor int and or xchg bound add mov daa pop mov jb into cwtl dec imulb lods pop or xchg iret out mov inc dec pop (bad) push in lock leave sub test (bad) popa (bad) xor stc decl sub stc incl call jb mov shl lea call add pop ret push mov push sbb pushf pushl jmp push lea jne cmp cmc stc bswap mov rol pusha sub not lea cmp call push movl pusha movb pushf movb lea jmp lea jae add btr pop sbb movzbw pop sub mov mov shld cmp pushf mov pusha jmp lea call btc add xadd aam pop sbb btc shrd pop pushf stc cmp pushf call pushf cmc test mov mov call lea ja clc imul test bt bt add pusha pushl lea jmp orb mov xor scas and mov scas ficompl in enter add in lea stc aam inc (bad) push ret xor insb cmp xor or test movsb jb push outsl sbb (bad) roll aad mov repnz adc xor inc aas adc dec dec cld xchg dec mov (bad) jne mov out stos sbb scas xchg xchg dec inc fcmovu das push xlat in add js in je ljmp das push xchg (bad) stos jg mov or inc or std push mov loopne dec adc inc push (bad) (bad) outsb out mov and inc and stos (bad) fcoml lahf ds and or sub mov pushf pop cld es idiv mov mov adc add inc std repnz sbb push (bad) out and xchg xlat inc cbtw cli jp cmp enter mov rcll inc cmp lcall and mov lods xchg test mov aas lcall jl mov adc leave xchg shrl and pop mov adcl mov mov add jp add inc sbb fs into inc sub and dec sahf cmp mov call jns jbe mov pop mov jbe push cmpb xchg push repnz mov mov xchg mov ret cmp xor shlb push mov cmp sti mov int3 inc pop ficompl and jg xlat pop (bad) jno cmc mov push cmp mov clc fld pop out dec pop mov adc ja xchg add xchg mov push pop test cmp dec jne scas mov adc jecxz xchg mov gs adc nop or push aad fimul cmp mov jl sub hlt or dec xchg pushf jnp fs pushf seta movb pusha lea call sbb inc and imul ret add adc inc movsl mov in or mov pop cmp scas ficompl in push mov stos dec pop es test mov shll out sbb (bad) jb fnsave out and into sbb sub mov pusha xchg addl gs test stos jg xor nop cmp and and js mov fisubl xor and cwtl xor xor pusha fwait sbb jge divb mov into jne imul xor insl xchg pop arpl pusha dec mov jg jno (bad) stc adc pop fbstp out je arpl popa cmp cs aas stos jne jno (bad) jb jnp aaa cmpsb push pop fstps push push xchg jns inc data16 out dec mov mov into fcomp ret xor aad and gs in dec in dec ret insl div pushf (bad) mov sbb xchg xor adc ret mov scas out and push cmpsb ja sbb repz outsb scas (bad) jb call jbe adc jp nop or jp push adc scas icebp iret sti pop (bad) jo ja dec jle js and (bad) lret jnp js aam jg jge xor mov pop sahf xor jo cmc je pusha and pop aam mov dec ds jmp lods jne lret jg insl test fidivrl xor mov inc je jl es xor pop mov sub mov sub mov gs (bad) shrl and adc jg jge cmp push jge xor jno aam in jno jge add xchg scas mov fsubl imul loope andb mov leave jbe dec jp js (bad) or sti xor jg (bad) cmpsl mov xchg lret aaa push cltd out cmp inc add std xchg nop aad sub sahf xor enter and (bad) push divl add (bad) cmp cli xchg sbb pop pop xchg xchg daa lock out repnz cmp (bad) pop mov ret push sarb inc jg pop jns insl ret xchg sarl sbb jnp hlt pop stos dec ds aad add xchg mov adc xor adc (bad) xor and ja sbb cmc icebp inc (bad) sbb clc loopne lret inc adc xchg push add jmp cmp xor jp mov cmp ss xlat or mov jns hlt and cmp lods (bad) jae jg push cmp in dec sti xor gs ja jmp test dec lods fs pushf (bad) clc jl sub jbe adc ljmp jb ss daa in fiaddl xor push loop les pop sarb fdivrp aaa inc lahf idivl and push mov add inc gs outsl insb fs popa je inc add bswap pushf pop mov pushl jmp jne add scas or sub dec js cwtl xchg pop dec mov cmp dec pusha (bad) mov mov sub jno mov mov shrl int3 mov xor cmc dec inc in dec scas int and jle cmp sub dec xchg jmp or and cwtl bound xor sti cmp shr jbe jns icebp sahf jb popf mov js mov pop jl rorb mov mov and or sbb lret xchg iret jbe dec mov push push mov sub sbb mov mov (bad) rorb push pushl ret push lea jb lea mov cmc mov test push stc shr pusha adc test cmc bt stc sub stc shl pushf call cs or jns imul out and push idiv jmp inc cmp or (bad) jl repz jbe cmpl jb mov in repz or sub dec dec jb sahf sbb cmpsl cs mov xchg mov iret ret and cmp fwait xor push push dec push xorb test test fisub fidiv add jg mov (bad) pop pop xor inc add je out (bad) xchg bound aad arpl repnz jle leave cmp notl cmp imul loope call es jns aad xchg jg iret pop inc fsubrp loop sarl xchg xchg mov xchg xchg pushf cmp mov mov lret pushf sarb test neg test in sbb push movsb adc ja adc push mov cli mov lahf (bad) mov or lret pop sub leave dec adc (bad) xlat (bad) jg out inc popf inc das js pop cli push orl mov test leave pop jge lods stos (bad) or xor push mov xor jge aad push jge jb push hlt loopne cmp mov sbb xor mov add dec stos or out repnz les xor ds cmp mov sbb ret sub mov stos (bad) fnstsw push jae adc leave insb push (bad) mov push cmpsl xchg in lds loop addl sub sbb cmp sarb scas jo sub push loopne or call in push lcall (bad) pop (bad) lret pop fdivrl mov inc jnp xor mov dec sbb stc pop add (bad) adc in stos or fldt ds fnstenv inc into push sbb imul jg into inc popa pushf or pop shl sub xchg je cwtl jp adc loop dec idivl daa dec out push lahf adc in rcl mov jecxz sbb scas mov addr16 (bad) sarl mov sbb or fs call stos mov lret or dec mov dec push or insb cmp jo les and sarb add or add adc pop cmp add cs or pop movl inc mov pop int3 mov test addr16 fs cmp jne pusha movb setae jmp adc or dec cmp ret push aaa xlat mov lds or adc int inc mov and xchg jp into xor decb push pop jl jg jmp mov daa mov or out xchg (bad) xor inc push xchg or icebp push or sbb js lds cmp xor mov pop add (bad) fs mov mov mov cmp mov jno lea mov arpl fdivl (bad) ret mov mov ret ret sbb or mov cmc out movlps out and cmpl mov lret lods sbb cmpsl (bad) imull aad add fwait xor cmp dec scas xchg inc dec mov ficom jge sub mov fbstp faddl lock dec mov sub lods pop add or pop in enter movsb cmp sub xchg mov out xor repnz xchg xchg and imul sub cmp inc push sub jns int3 cmpsl or out fcmovnu (bad) repz dec push out fcmovb xchg imul sub add insl mov cmp mov das sti aad lock xchg repz insl les js (bad) repz mov sub fs adc out xchg jle sbb jmp push pop test mov lods movsb (bad) es loop jle,pt xchg mov (bad) in hlt nop fsubr mov int3 cmpsl ss sbb xlat ss mov push andl mov mov sti pop clc testl and mov push xlat bound testl xor arpl dec mov sub inc sahf xor test jecxz std jb dec mov ret ds mov pushf test test aas mov mov sub jbe stos push les rol in push icebp int fcmove call in addr16 inc dec and jge add lock aas jecxz test push mov (bad) jge xchg movsb ret cmp mov int lock dec ja dec push lret inc cwtl arpl push aaa cltd popa shrl jnp dec arpl popa jl int3 jnp decb and jo je mov add icebp (bad) jb test pushf sub clc pushf bt cmp pushl popl clc cmp pushf pushl lea ja sub sbb neg call pushl lea jae stc bswap mov inc mov pusha mov cmc test pusha mov sub jmp cwtl bswap sbb lahf lea mov lea lea pop bswap not setge mov pushf pushf pusha jmp push pushf jmp push cwtl icebp sub hlt mov push mov jbe nop scas pop mov rcll cmp mov push jle xor pop push xor imul mov aam leave (bad) mov aaa dec les lods add shrb xor aas in cmp js adc and decb aam add sub xor loopne xor push call fldenv popf adc test pushf aas mov mov pop dec mov loope (bad) or mov and dec in sbb push call insb notl and and bound jmp addr16 fs movl pusha mov mov pushl pushl ret pusha sbb stc lea cmp xchg shld xchg call test inc xchg mov inc or and lods fnstsw xor add mov jo and jecxz or add inc cmpsb inc sub mov (bad) adc push test adc rcrb fisubl mov jp movl out insl jl ljmp incl jo sub dec mov int3 cmpsl dec rorl sbb jmp mov sti inc setb sub add pusha bts mov clc neg mov pushf push pushf cmp repnz pushl jmp imul sbb pushf shl cmc lea bts lea shrd bsr mov clc xchg cmc btc mov jmp mov mov push bt pusha and pushf pushf add push mov pushf lea jmp call push jmp call or popf or in test sbb flds cli push sub pop lret leave bound xchg mov jnp xchg clc sub pop ret adc cmpsb insb sub (bad) rcrb cwtl mulb ret pop xchg inc mov mov xchg aam in lea jl ljmp dec xor (bad) xchg add sub sahf jg sub cmp scas outsb push dec jge das stc sbb shl ret inc loope xchg test jbe mov lahf mov or cmp dec jl sahf mov add into cmp dec mov daa ret stos sbb pop inc jae and out in or fdivp std inc test adc mov int3 jbe push movl push push pusha pushf lea jmp mov lea pusha pushl call add dec outsl arpl inc jb add add shr and (bad) ljmp ss cli mov inc movsl stos mov loop push jbe sub pop mov (bad) sbb adc sbb stos jae aas fstpl inc nop fs jne fwait (bad) fild mov adc cmp dec test (bad) scas lock and (bad) repz jno nop fs mov bound sub inc cwtl mov fistpll hlt pushf aas (bad) es and cmp std push mov mov sarb (bad) mov out rorb fnstsw dec in rclb cli or adc or (bad) and pop (bad) cmp sbb adc push cld push pop inc jle pop sub push or lcall nop (bad) into (bad) sbb dec pushl popl pushf pusha pushl ret add inc js je jb arpl jae std or xchg in loop movsb jne xchg push (bad) push aad lods mov or ja push xchg test push ja mov pop subb sbb mov lea fimull pop cmp incl mov cmp push mov lcall sbb loop mov sub das arpl loop popa lret cmp arpl or cmp inc stc sub mov loop cmc mov xorl adc adc mov popa (bad) clc mov scas sub in add sbb xchg xor mov das int3 out xor mov mov xchg stc lcall shlb mov movb shl pushl jmp jecxz fcomps or and scas loop test cli cmp xor mov mov xchg popa ss dec imul icebp js xor mov or movsl adc gs rcrl test inc cmpsl adc jg ljmp cltd mov imulb movsb pushf cmp sub bound mov or scas lcall jmp xor pop push lods inc js jb,pn enter clc xchg jb adc iret aas ret inc dec sbb push cmp xor mov cmp shl bndstx jmp shrl mov aam mov push int3 dec imul push test xor jecxz test test bsr rol mov pushf cmc cmp pushf pushf lea ja mov pop jmp sub xor lahf or lods repz jnp mov incb pop mov fmull (bad) cmpsl pushf jae scas mov cs pop lods mov add (bad) int pop sub mov jmp ja ret loopne aad fnstsw stos adc addr16 jo fs pop jmp jbe cmc inc rcrl in out sbb loop loope lea push cmp aas sub dec cld stc loop addr16 adc arpl inc sub adc xchg pushf cmpsl sti xchg fs jne jle,pt insb fistp fidivl ret loope (bad) cs pop lcall add loope imul daa sti insb das jne pop bt pushf shl pushf call pusha lea jb movzbl add adc btc cmp not pusha bswap lea sbb pop pop not lea mov mov pushf pushf call imul pushf test add movb pushf lea jmp mov cmp pushf jmp jne gs xor fs insb add mov cmp cmpb pusha pushf lea jne pushf push lea jmp push mov push pushl pushf lea jmp pushf lea je clc add pushf push cmp pushl pusha lea jb pushf push bt cmc cmp pusha push push lea jae setno jmp pop (bad) cmc mov push fsubrs test dec sbb lods mov stc push out xlat repnz lcall jecxz and imul inc mov (bad) xchg les jle xor and bound sbb mov mov adc xorl dec xchg inc shlb cmpsl into push inc out xor test push setb ret xor add push dec andl xor mov push mov ror jne js fadds inc cmc ret inc hlt cwtl xchg or push out or outsl test pop iret cld jns jmp dec jp into pusha scas outsb test xchg cmp push ficom and mov or inc (bad) jno arpl dec minps pop or pop jmp pop addl (bad) push js mov fwait jg push clc imul or repnz mov clc inc aam in test push and enter scas ljmp mov adc jb xchg (bad) movsl lods pop dec mov pop dec mov and jbe jb mov xchg movsl jo aas mov lahf mov mov inc inc jle jmp mov std pop xor cmp xchg xor (bad) mov out insb jp mov ret jecxz jle jp nop movsb das or inc xchg lcall pop mov mov ljmp sbb pop pushl mov lea call jmp cmp jne in dec mov lods dec push dec jmp cmpl je cmpsb ljmp cmp jbe xor xchg js jp mov xchg pop pop push push mov mov rorb mov xor cltd lea out pushf jl jp popf cwtl stos pop ds ret sti data16 sub testb test dec into push jle jl rolb jmp pop fsub mov cld jnp xchg adc movsl stos in scas (bad) movsl fist inc mov bound adc jecxz (bad) pop aam test cmp push in inc imul mov pop insl mov rcl gs pop adc inc push add std dec or push imul xchg dec cmc add test mov notl jae inc lods and push arpl hlt js or dec addr16 push cmp adc ljmp push xchg sub cmp add test add cwtl test adc cltd jno daa in (bad) and jnp fistl das pop xlat outsb movsl fwait repz xchg cmpsb cmp cmpsl aad cltd jno pop jnp adc out jg pop or das xchg lods (bad) and rcrb jle loop dec push leave movsb data16 and scas pushf decl sub int lret icebp inc or stc sub lret xchg push mov ds xchg jmp fldenv repz lea arpl je cmpb and sarl mov mov test fs bound pop xlat inc hlt ret add pop pop xor enter cli ljmp mov pop mov and fwait xchg pop sub mov mov fstl ficom mov in fwait loope inc mov dec dec push cs xlat fisttp out incl out cltd fdivrs fdivrl dec loope iret adc fdivl fdivrs pop or jne mov and xchg mov sub dec pop repz cltd xor aad jae sub ret lods dec ret mov pushw xor ss sub pop clc fisubl addr16 dec out in add les test inc pop cmp cmp dec mov xchg jns aam or aad (bad) push pop jo (bad) mov loope inc mov popa loop in mov mov incb xor test sub lret inc cmpsb dec jbe push mov jge mov or add js cli dec mov cld pusha jecxz (bad) rorb push nop inc xor aaa pushf jle mov push es sub and lea jo push pushl lods pushf cmc pusha clc xor jmp pusha mov btc btc add inc lea clc mov neg add movzbl movl btr btc shr mov add pusha mov cmp jmp movl pusha mov pushl pushf push push pushl ret inc rorl les mov stc add xchg movsl cmc add arpl jmp lock mov rcll iret sbb js stos insb xor dec mull rclb sbb scas sbb jmp add movsl add test push xor lods sbb sbb mov inc and jecxz rorl out xchg cmp push add fwait je xchg and xor adc mov iret int fldt xchg outsb addl cmp ljmp rclb push mov ss or mov leave sub sarl mov xor inc scas cmpsl std or dec dec jle stos (bad) mov (bad) repz out sbb sub or (bad) mov loope test in cmpsb (bad) jecxz cmp add push cs jge jp mov sbb sbb (bad) dec push sub lea loope cwtl mov pmullw mov dec mov and icebp repz mov push mov dec xor (bad) mov push lock sbb dec popf nop push jbe,pn or jb iret dec push (bad) add lahf inc (bad) or mov push gs out mov and insl inc cmpsl (bad) ja adc mov leave xlat popl push dec loop mov mov dec fisttpll sbb fldenv jp mov lcall mov test xchg or out aas loope enter and fisttpll fstp std sub std and mov inc fcoms std fwait pop out jo sub (bad) insl pop stc call rep jmp sub clc mov dec sbb loope sub dec jl push pop ss sub dec fldcw (bad) or pop add xor (bad) jg push lods aaa mov jle std and jne jae cld xchg rclb ret aas dec add inc gs imul outsl outsb dec outsb outsw push imul (bad) mov pushl pusha pushf lea jmp bswap call push push mov pop lea cwtl lahf mov lea xchg bswap pop mov mov call pushf jmp test cmp pushf lea je pushf cmp push jmp sub and or sub xor js push jo enter xchg lret pop test dec xor jae cmpsl (bad) sub ret dec mov push movsb popf cmp repnz les push loopne sub les fbld pop cmp cwtl loope mov (bad) popa jae scas dec ret shl add repnz repnz ss jmp mov push sbb popl ret push xchg dec repz sub aam push mov xchg xor push shrl cmpsl fnclex gs lds test lods xor data16 in mov add std fisubr push movsl inc cs mov add sub jno popa or insb jecxz adc xor in or mov loop push mulb dec mov mov push push adc cmp xchg nop mov adc adcl add cmp jmp add pushf les mov pushf insb cmpsl push lret sub and mov (bad) repz jg sbb cltd mov clc mov cld sbb dec push out mov pop xor cwtl dec mov subl add test adc cltd (bad) loopne pop jmp sbb jmp das inc leave rclb test dec xor rcl add outsb dec sub push movsbl mov sub jb cmp jmp sub movl repnz movl movl movb lea jne shl rcr test mov pushf sub shrd mov lea lea clc push mov push sub call jmp loopne cmpsl jge or gs das cmpsl out or outsl fwait jg aas pop sub and pop aaa jmp out add mov leave pop cmc or lea lods push xchg xchg jecxz xor or aas adc scas lcall push inc cld mov mov pop sub addr16 jbe rorb sub and sub jge xor inc fistpll cmp (bad) jae inc pop mov push jg mov pushl jl mov out mov loopne mov push dec adc and or jnp lods adc inc dec dec xor cs insb add pop mov and jmp cmpsb pop adc ret xchg jmp mov in or fucom out das jmp fstl cmc popf test lcall nop popl clc mov or ja cmpsb int lret dec ret aas adc js inc mov and lret outsb mov and aaa stc sub movsb movsb adc dec xor and and rcrb jb enter (bad) (bad) jge adcl std push mov scas inc into lds ret movsl pop mov je mov test je ds pushf ds push mov imul mov sbb daa and pop cmpsl fs dec mov push push mov inc (bad) cwtl repz push out dec mov bswap lea call into int3 add ret or fildll mov cmovge std cld or jnp aaa jnp jb stos push xchg push mov repz or add dec ret jecxz cltd sti ret popf mov lea imul roll scas mov inc ljmp aas xchg jl (bad) mov mov push mov rclb rorl or dec xor mov iret das lret adc xchg cwtl mov add sbb lods fsubrl jb pop scas dec jne xlat (bad) movsl and (bad) fstpl xchg mov xchg jge jmp movsl sahf cmpsb into sbb mov xor dec iret in pop mov hlt push lods and insb int3 or icebp test mov das lahf inc test mov sub subl loop add arpl bswap lea jmp call call add add pop add add xor xor adc mov jmp xor xor xor xor push ss cmp cmp cmp sbb cmp xor ss cmp cmp cmp into cmp cmp repnz add add pop add add xor popa xor stos xor mov sbb xor daa ss ss cmp cmp cmp cmp cmp (bad) cmp cmp cmp cmp int imul ds aas xlat aas add add adc add mov xor xor xor xor xor xor outsb xor js (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor sub aas xor push xor addr16 jnp xorb xor test mov mov mov xor js stc ss aaa jle xchg aaa or push cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sbb cmp cmp idivb add add add add xor xor xor mov xor xor xor xor xor xor bound das ss ss ss ss ss bound imul jle xchg mov xchg mov ss (bad) ss ss in cli ss aaa das aaa ds fdivl in divl add pop cmp cmp cmp cmp cmp cmp cmp push cmp xor dec cmp cmp cmp inc cmp cmp cmp cmp cmp cmp cmp insl cmp cmp cmp cmp cmp cmp cmp aam add daa ds movsb ds add popa aas add add add xor xor xor xor ss cmp and cmp lea cltd cmp add mov aas loopne out out aas sti aas add add add add add xor xor xor xor xor xor push movsl xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub das xor xor xor xor pop xor jl xorl xchg xor xor jmp pop xor xor xor xor dec xor jno js xchg les stc xor je (bad) ss cmpsb cmp cmp cmp cmp mov xchg cmp cmp cmp adc cmp mov cmp cmp cmp daa cmp cmp cmp cmp cmp inc mov xchg ds out ds ds jle add add fs xor xor xor xchg xor xor aad ljmp xor cmp (bad) aaa (bad) aaa or and xor cmp ja (bad) cmp cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp scas ds aas inc aas push aas mov loopne add add add mov xor xor aaa mov cmp cmp cmp nop add in add add xor xor lret xor sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb lea mov mov xor inc ss ss ss ss ss ss ss cmpsb lods ss mov mov aaa data16 outsl aaa mov (bad) aaa stc aaa add inc cmp pop cmp jne xor cmp pop cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp dec ds ds jno,pt jbe xchg mov ret or (bad) dec aas dec aas push aas pop aas popa aas data16 aad fidivr in add add add insb xor mov xchg xor dec xor jge xchg xor xor xor xor xor xor xor push xor xor xor xor xor pop xor xor xor jl repnz dec aaa je (bad) aaa bound test xchg cmp cmp cmp cmp cmp cmp cmp cmp test mov add add lahf xor xor xor ss aaa insl aaa in pushl or aaa cmp pop cmp cmp cmpl adc dec cmp mov cmp (bad) cmp cmp cmp cmp cmp cmp add add inc add add xor xor xor outsb xor xor xor xor xor xor xor inc xor ss ss imul push cmp mov add add add and add add pop add add xor xor xor xor mov xor cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp enter sarb add lock int3 add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp or add add js mov mov nop ss ss mov int3 fdivl loopne hlt ss or or adc sub cmp inc aaa je jl test mov nop aaa movsb aaa lods aaa (bad) aaa loopne add and inc cmp cmp cmp cmp cmp cmp cmp cmp jo jl cwtl cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp add sbb add add sbb inc xor xor xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp sbb cmp cmp cmp cmp cmp ds ds ds ds ds je,pt cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call add add add add (bad) adc add add add mov aaa push cmp add add add mov outsb xor test (bad) aaa fidiv movsl cmp cmp hlt cmp cmp adc cmp mov ja,pt add nop add inc add add xor cwtl xor xor xor xor push aaa inc aaa xchg aaa add and leave cmp imul sub dec cmp je add add add repnz xor xor xor xor out ss mov cmp cmp cmp cmp cmp inc ds outsl aas add add add adc xor xor fdivs fnsave test cmp pusha cmp cmp cmp cmp cmpl ds add add add dec add add xor xor xor xor xor xor jle ja scas xor xor stc xor out adc dec aaa xchg aaa repz push cmp fnstcw or push cmp cmp push jg,pt add add add cmp add push xor xor xor xor xor xor dec cmp cmp mov add cmp cmp cmp test sti ds aas add add inc add add xor xor xor xor xor xor xor xorl cmp cmp cmp cmp cmp cmp (bad) cmp scas aas add add push add add or sub dec xor xor xor xor xor xor (bad) lods aaa xor jg add cmp cmp cmp cmp ds mov aas insl aas test mov jmp add add dec add add add mov xor xor xor xor xor xor and ljmp cmp cmp jecxz scas cmp cmp cmp cmp dec aas arpl add add dec add add xor xor xor (bad) xor xor xor xor xor xor xor divl jl inc cmp inc cmp cmp cmp cmp xor sarl stc aas add add add inc add add xor cltd xor xor xor xor xor xor xor mov ss ss aaa call cmp cmp cmp cmp ds jp sarb add add add inc add add (bad) xor dec xor xor xor xor xor ss inc aaa leave aaa jecxz jge test (bad) cmp cmp mov cmp cmp cmp idivb push aas add add add add mov addb adc add mov aas add add add cmp fnsave cmp mov xor add xor xor xor xchg mov out ss cmp cmp pop cmp cmp cmp cmp cmp cmp enter ja add add adc xor imul (bad) xor xor mov sub nop cmp cmp cmp cmp cld cmp cmp outsl ds ds aas nop aas scas aas add add add pop xor xor xor nop xor xor fdivs fwait xor xor xor xchg add jp xchg aaa in (bad) cmp cmp cmp cmc cmp cmp cmp cmp cmp idivb sub jbe sahf aas sti aas add add adc add lcall xor add pushf xchg xchg rcr call mov or jecxz push fdivl sti enter push add mov push lods popf das jmp js into aam movsb ss jb cmp enter and imul mov jl dec jb daa jae arpl mov in xchg mov or popa sub xor (bad) mov xchg stos pop shrb cld cmp roll jl adc pop ficom cld loope fild dec xchg test fstpl lock ds out lock or call push cld mov push frstor sbb push jnp add in or scas int3 cmpsl jmp xor popf pusha push jno in push push fwait js pop dec sub (bad) dec outsb pusha jecxz test dec push adc int3 mov aas lods mov incl outsb and adc add adc sbb repnz mov leave hlt adc mov jno mov push xchg push inc sub push faddp pop push inc push int3 inc (bad) pop push push jp inc push les aaa mov pop aas cli dec xchg adc mov pop popa mov fadd xchg jb cltd sahf sub fwait mov inc sbb test in fdivrl sbbl mov lods scas ja cmp pop loop aad shlb mov aaa push int3 sbb mov insb icebp pop push xor adc pop shrl jmp mov lock jb cmpsl mov fsubrl sti stos in or jae jecxz stc mov mov or (bad) int3 jmp sbb (bad) mov mov inc jecxz nop pop jp inc in or ja adc mov out fistp lahf lock mov (bad) insl jns mov pop (bad) mov call int lret dec and sub (bad) pushf or aas mov loope lcall inc pop (bad) gs dec movsb mov call and scas imul nop push dec cmp cmovge jbe aaa jg xchg pmulhuw pop jecxz movsb imul out (bad) push mov shrl jecxz push subl lods jo xchg mov rcl sbb jle mov call (bad) imulb pop sub and (bad) rol insl fimul inc and xchg jmp lcallw dec pop rol repnz adc inc jns push dec sub je sbb mov cmp fwait dec push cwtl mov add mov sub push repz leave mov out cs fisttpll cld cli or insb stos test inc faddl jle pop mov mov jb add das out and pop push sarl insb add pop shrb add test jmp xchg push cmp lea out in (bad) xor inc xor int3 cmpsl jnp adc stc or inc lret aas faddl (bad) int3 and mov inc push adc clc dec mov add cmpsb lret inc sar iret scas xchg out adc gs leave xor dec mov cmp sbb and mov push xchg sub sub adc lret mov int xchg or fimul mov push xorl pop xchg lea imul fisttp adc add (bad) push xor (bad) adcl xor nop or sbb mov add jbe mov sub aaa pop and pop outsl je movsl push sub iret mov icebp xchg in sub add add xlat mov jo jmp or je pop dec and std jge and cmpsb cmc or mov sbb jg ss xchg popf push push test jns mov push leave sbb xchg sbb xchg xor xchg pop out pop lret rcll jp pop lret das mov cli mov movsl pop sub mov jmp mov ret push fisttp xlat jmp fldenv mov or ror iret data16 mul xor (bad) jne (bad) pop mov hlt sub cmpsb fisubrl into inc mov fimull sbb inc lea lock pop sahf loope mov xor mov push loope cmpsl cmp jmp pop mov (bad) cli shll fcoml and pop lahf jle or push jge in out test sbb loop jg stc repz in rclb daa jecxz outsb ret das mov add stos cmp into xchg (bad) aaa sbb scas dec push jno push xor pop add pop subl lahf movsb inc lock cmp ljmp test xchg movsl gs sahf or mov mov es cmp jo sbb pop scas pop call ficompl mov cmpsl push rcl add pop cs xor aas hlt xor cltd loope imul test sub popf ffree mov xor sbb (bad) mov and inc mov cmp sub mov sbb fimull aad cwtl dec movsb fadd lret insb xlat (bad) leave adc xor into inc mov cltd pop push xchg test iret mov aaa (bad) push cmc inc out dec data16 and xchg dec outsb icebp add adc sbb into mov cmp sub lea pushf lea call pushf jmp stos stos addr16 or xchg cmpl lea out dec mov push and sub es cs in or out cmp cmp mov add adc sbb mov mov mov outsl sti test mov push rcrb imul cmp into sub enter jbe jl,pt cmp cmp repz test mov test (bad) cmp sub outsb (bad) (bad) fldl mov cwtl pop xchg cli inc mov jbe cmp dec clc inc stos cmp sbb and fnop mov dec rorl aaa mov ds (bad) outsl stos cmp dec mov sbb scas pop pop testb test repz out inc faddl test and imul daa out scas sub push lahf and or push das stos and popf adc mov stos roll ljmp pop pop icebp push sarl mov pop ret hlt sti jmp lods jp daa arpl mov pusha mov sti inc add jb test (bad) outsb jmp mov fisubl xor xlat test cmpsb (bad) xor dec fist inc jne add fimull mov inc les je and sbb mov call dec notb mov fist sbb dec stc and sarb movsl jbe push loopne out jge mov lret dec pushf imul sti jns lcall mov xor pop mov mov or mov gs add mov mov stc xchg jl enter and loopne ss and xor and rclb das sahf jne jb dec (bad) jae stos ja inc hlt pcmpeqw pop inc ja sub sbb fisttpl pop lret jmp lahf jae cmp pop dec jge jge cmpsl xchg add mov mov cwtl lods sbb test movsb mov cmpsl outsb mov lods test in adc out mov push enter loope add (bad) xchg scas add aas xchg push push and adc pop aad popa lret sbb lea jb bswap mov jmp xor push jmp mov lea jb shr clc adc cmp not cwtl bswap mov push push lea jb btc (bad) lock clc sub not setp mov call xchg mov inc fidivl adc daa pop dec (bad) dec (bad) jbe xchg xchg stos push dec ljmp lock sub xor pop mov cwtl (bad) jbe leave xchg mov adc addr16 sub (bad) je rorw sub fisubr inc or jae inc out insb xchg or (bad) testb clc mov pop and or popf pop mov xor lret mov and icebp jp or je cmp lods fistpll imul inc cs push inc push add arpl dec nop inc dec or xor inc push in out bndldx jno std into add inc mov (bad) das mov data16 or enter xchg or lea hlt ja pop jl and cmpsl cmp lcall je xor adc jmp clc inc push cmp notb mov mov in inc sub xchg cmp fwait xchg or mov movsb shlb jae lcall insb flds test fidiv xchg outsb cs mov nop (bad) call lahf (bad) xor or outsb out jp dec sub push dec icebp sahf das adc xchg dec push loop sarb jmp push mov in adc decb scas add xor and cmpsl lret lcall sbb xchg jae (bad) pushf ja sbb sahf xor push hlt xchg or roll adc mov mov pop inc push das xchg shrl in xchg xchg or inc lods xor xor mov mov (bad) fs repnz push (bad) lea or add sahf or outsl mov orw cmc push gs jg cwtl xchg dec out cmpsl movsl and sbb das shl and mov push repnz call jmp mov or sub inc icebp mov (bad) lock out and inc xchg popl lods push push sub mov movsl sbb sub push (bad) imul cltd pop push cmp aad mov mov clc push test (bad) daa xchg sub sbb cmp mov or test pushf adc mov xchg fsub mov add mov lods and addr16 leave stos mov mov cwtl sub jnp arpl push mov frstor cmc sarb or sbb loop or xor mov js (bad) dec (bad) jp pop mov out adc daa ret push scas scas push push out (bad) movl xchg (bad) fistpl xchg imul lea je mov bound and lods sub (bad) imul mov jle ret (bad) or xlat repz ror xor jns js enter insb cwtl cs dec xchg sti es dec sub out push stc mov push push pop jne mov lock mov out (bad) in mov xchg sub inc sarb add dec movsb mov jo je popa mov jnp mov sbb pusha sbb inc insl insb xchg rcll loope (bad) jo cwtl into test (bad) xor sbb loop (bad) push imul inc mov mov nop xor fsubl mov add push sbb jo (bad) mov add lods sub sbb call insl sub test ret loopne std arpl mov fisttp xchg scas mov pop fsubl (bad) pop inc inc cmpl mov stos (bad) cmpsb mov push icebp movsl add gs lahf mov lret mov mov stos lods gs sahf cs cwtl imul inc in lods sub xor jae mov out scas cmp mov loopne inc (bad) lock xor or push aad pop jmp je pushf insl pop cld mov push dec sub (bad) dec cld ficom loope inc sub jmp dec xchg mov aaa movsl push inc fcompl add xor mov mov jo pop sbb test aaa jmp jo sub outsb sub add and shl jae stos inc pop enter cmp lods pop je test aam rorb aaa ds xor jae in lret xchg sahf dec aam (bad) adc and lea pop mov or clc test mov sbb call test add adcb dec cmp xor xlat cli ss and xchg rcll (bad) icebp lea pmuludq mov pop fstl mov adc xchg jno jns or jnp int pusha fwait loope or jne jne dec sbb loop mov es xlat inc inc jp (bad) cmp fwait xchg fsubrp gs fstpt mov cmpsl out pusha test pop lock push dec lahf sub jg dec nop or insb xor jp test pushf fistl jne daa xlat cmp mov sar mov mov loop push sbb in xor xchg push outsl test imul ret les scas out xlat or js push jmp mov sarl adc test add call dec mov xor push jbe std (bad) shll sbb dec inc in cmp stos mov push lea aad mov or pushf sbb mov or mov inc pop pop mov mov mov mov paddsw or or mov pop outsb sti sbb in loopne fidivrl xchg xchg xchg and ret testb push add pop push popf mov pushf mov xor add dec lcall out scas adc imull test scas or imulb test sbb push test mov icebp ljmp cwtl push mov inc jns je sbb inc test imul lods push dec adc mov jp out out inc cmpsl mov icebp int3 push or inc or sbb enter sub fsubrl inc inc xorps fs lea aad js cmpsl xor faddl and ss es xor insb dec lcall jnp cmp push xor cmp (bad) mov mov into inc fidivr imul inc enter iret add mov ret fsubrl push aaa push or sbb jl mov in xchg jnp mov fcoml int dec movsb xchg jg cli stc jmp test outsb je je dec outsb lahf cmp jo cmovbe jmp sbb stc mov mov cmp fsts imul loopne cli in sub repz cwtl mov mov pmullw in dec push lods dec mov push ret pushf mov push incl mov mov mov rcll data16 pop movsb inc dec push cmp xlat int3 push mov dec xchg testb sbb xor and mov sub outsl adc pop jp mov cmp in adc sub mov jb in mov and add push inc int push cwtl rclb xor jmp cwtl or sub (bad) push adc jecxz inc dec mov sbb clc sbb fnstenv xchg pop stos jne jmp rclb sbb aas add and cld inc js xor add lret cmpl fst dec xchg lods subl or lret jge test jo lcall jmp pop cmp fisubl pop fistl aas in sub ret adc adc (bad) inc or xchg gs sub push sarl xchg mov xchg and jmp aam js pop mov mov daa nop test movsb testb jecxz test jae mov and xchg push jnp jnp mov dec or movsb pop jge push pusha cmp shrb fwait cwtl mov xor pop push cmp pop add sahf cltd ret xlat dec aam aam pop adc inc mov imul sahf (bad) shll and test test dec and iret jg xor out adc clc repz jb out push sbb add mov je jns jp subl pop sub stos icebp sarb popa xor lock inc pushf adc adc inc cld xchg aaa outsb aam xchg mov ret icebp push add ljmp icebp dec hlt and push inc jle movsb mov and jb mov xchg lods out add scas cltd mov imul inc sbb fiadd adc inc ret add gs add cmp hlt repz gs fisub addr16 (bad) xor icebp mov xor or inc icebp popf mov mov lahf cmp jnp mov js jns ret sbb fsubl out mov jecxz jnp icebp repnz ja dec fmul sbb xchg push adc push xchg pop pop pushf lahf sbb scas (bad) fbstp mov enter cmpsb lock ret clc pop ja (bad) in dec dec out mov sub arpl (bad) sub adc mov jg mov imul push in imul and das fstps data16 enter (bad) arpl adc pop jbe (bad) ja je stos push fnstcw xlat xchg dec push mov loop out into (bad) shr aam and sbb shlb outsl push mov mov out pop jns dec repnz sub data16 popf arpl dec pop sbbb sti sarb daa popf scas mov sbb adc jnp and loop adc les pop mov sbb pop mov dec in (bad) sub loopne js add notl sbb xchg lods sbb pop dec rcrb lret insl cmpsb dec pusha jle inc sbb cmpsl scas mov push ss les sahf movsb fs sub push mov je mov mov add ficom mov rcl (bad) out mov fadds stc mov inc fnstenv dec pop (bad) out and push js ja loopne imul mov test outsb jb imul jge ret mov in cld popf bound div push jp dec sub inc jmp sbb dec mov lods add (bad) jbe nop decl in push sahf fistpl addr16 push ret rol movsl cmc ss jbe pop dec fwait sub sub pop xchg lahf inc insl or adc pop jbe in fidivrl ja mov sub ret hlt inc pop (bad) cmp repz and enter stc call loope xchg clc inc or iret lret pop (bad) scas mov lret push jbe jl jmp aad lods (bad) fdivp jp inc cs cli imul push lcall leave test jle and ret cmpsl pop scas incl fs jecxz inc adc mov in xor pushf add test sbb fwait mov mov stc gs int popf jp xchg sti ds scas mov (bad) mov pop sarb xchg cmp movsb int sbb shl pusha dec dec sbb insb inc mov cmp daa mov sahf adc repnz mov (bad) push sbb pop test xchg lret ja imul lods pop pushf adc bound and pushf or xchg adc jp add and jp scas xor pop repz jne xchg xchg sub orl mov lret xlat dec outsb add push lods adc pop sub daa pop cmp loope xor insl pop sbb in or movsb or cs movsl push rcl xor enter jge lods cmpsb das cmp push jge or add pushl add mov mov mov (bad) mov movb insb repnz ss dec fwait repnz sub jg or or sahf add xchg sbb sub mov xchg out adc shrw mov xor sub pop stc cs out pop int3 ficompl hlt out push xchg or mov scas cmp fdivs fsts xor dec sbb rcr les pop cmpsl cwtl fistl xchg push sahf aad xor jno jge gs sub in adc cmp loopne sarb sti jecxz jno sub push adc fsubl int3 in ret inc outsl rcrl push adc sbb dec fadd jo lea sarl int jl sub aas push mov cmp out movb xor mov inc pop bound mov das inc inc (bad) popa adc adc jge leave xchg jne pop push mov lds xchg pushf jae dec imulb or xor (bad) pusha jns and pop xchg cmp jle incb xchg dec out sbbl add xchg lea jne push (bad) call inc es mov (bad) push xchg lea mov inc ss test outsb push ss mov pop push movsl ljmp and push test inc dec stos idivb fs div sbb pop stos dec inc jg (bad) aam or dec (bad) mulb rol leave jmp ds cmp int3 mov add ret add sub ret rcrl out sbb jbe ss jo mov test sub out fcomps push (bad) jg insb sahf pushf (bad) mov push inc ss (bad) mov pop sbb enter ret and adc mov pop adcl inc je lock jbe fnstsw cmp sbb fwait stc insb (bad) inc pop call notb fsubp pop cmp or pop scas mov and decb ja dec pop mov pushf mov fistp out popa outsb bound test mov (bad) or testl or into jae add ret jge xor enter out xchg test mov lods ret repz insb test mov cmp lret out jle and xorl pop jle lahf pop lods (bad) cmovae lock insb xchg add movsl stc lds fsubrl dec outsb lahf clc jge icebp pop pop (bad) cmp xor inc xor loopne jne insb pop lods sub cmp sbb lods test lods in xor xchg adc dec ja sbb adc mov (bad) inc pop rolb (bad) inc stc xor and test inc inc nop jg enter pushf fisubr push mull popf dec inc pop (bad) mov cltd js test and push and adcl aas cltd out outsl imul xor loop sti leave push pusha popa mov xor das push add sub cltd inc xor mov pop or rorb lahf mov jl jl mov mov cmp jmp mov cmpsl push test lea (bad) stos cmp push mov adc push lcall out and dec push and idivl ficoml mov sub inc (bad) in mov mov loop outsb xchg cmp push nop and outsb cmp ds push adc int movsb push shlb jmp push into ss pop leave or mov lcall out sbb les fs push mov stc cli dec out or mov mov jae jnp test dec xchg lcall aam in and nop test xchg dec lods adc inc (bad) jle jle pop fcoms inc stos outsb dec stos xor loopne xchg (bad) mov test pop xor pop in gs fadd or das jnp xchg pop sbb sub (bad) add jb mov pop testb sarl push dec sarl xchg inc and cmc sub and lea sub push imul mov cltd insb and mov insl and add xor das mov jnp out bswap mov (bad) out fcompl ret cltd pop mov imul mov pslld lahf dec test mov dec pop inc pushf aad std mov jmp loop out adc (bad) push rcl add adc push fwait out push bound dec rolb popa mov iret inc pop mov xchg or (bad) adc add push or jle add adc xchg loop sub out fadds imul scas mov fadds mov sbb dec (bad) inc cwtl ss (bad) mov jmp fs (bad) (bad) sti loope pusha shrl mov adc mov push dec add and adc aad aad std xchg push sub cmp jae imul insb sbb int3 xchg sub dec mov lret pop xchg sbb fstps test mov movsb fisttpl mov adc lods aaa (bad) dec (bad) notb dec xor (bad) pop jnp arpl (bad) stos or aas push mov loop mov out push xchg xor inc dec xor lret mov sbb dec dec stos shrl mov pop lock jmp push lcall mov jmp mov add add push les add fdivrl cmp push outsl sub dec cs (bad) sub adc add push dec stos sbb sbb fnstsw hlt out mov iret push mov iret test shrb in push or fwait notl adc inc xor adc mov pop xor mov mov push push leave int3 test inc sahf sub scas adc add lock sub aad inc pop adc jle sub leave hlt mulb mov dec dec adc jno adc xchg cs dec (bad) jae mov fistpll inc xor cld pusha divb mov pop fwait gs xchg sbb pop sbb (bad) dec xor dec mov cwtl inc hlt fidivl dec mov sub fdivp outsl mov lret dec xchg inc je lret mov cwtl push jne and push movb mov fsts mov int pop dec lea dec or out inc pop je and adc (bad) push enter loopne enter pop (bad) mov iret jmp jns (bad) cmp xchg decb roll mov pop pop sbb in mov out outsb mov imul outsb push xor inc ljmp and pop push imul jmp leave push inc leave inc sbb cmp add pop scas push iret jbe xor sahf iret jg ds loop xchg jae mov xlat ss insb xchg outsl rorb loopne mov jle and cmp fwait in scas and int push (bad) or sub aas push mov mov inc aaa es scas mov jmp pop inc add xchg les rorb test inc icebp fadd mov ss adc mov and (bad) jmp mov xchg sbb pop push or inc int3 insl loopne mov cwtl out int3 call mov mov sahf loopne jmp adc mov mov sbb notl pop mov aas dec xchg mul cmc xchg jl loop sbb cmp xchg stos lds pop or les cmp shrl movsb or jp rol dec sub (bad) icebp add inc adc mov test add jae movsb lods sub push fwait and and jno push xor inc cmpsb push ror jbe imul cltd flds pop dec clc mov shlb mov jne xchg test xchg xor cmp xlat pop addr16 push pop xchg enter or rorl ja jl shrl imul in icebp fmul add and mov in or or test or (bad) les leave sub inc and xchg cmp popa cmpsl repnz sahf push insb dec enter mov (bad) pop push gs xchg mov mov je adc push lcall mov sbb (bad) xor in je ficoml insl push cmp xchg clc cmpsb adc in xchg fidivr aad out push and push stos jno lods and sbb or mov cmp movsl das int3 in cs inc pusha lea fmull std in and or and notl lods mov push fnstcw push or shlb aad pop movsb dec es stos jg sti jg out (bad) loop out push xchg add cld fs mov mov lret or hlt sbb xchg (bad) xor inc shr test cmpsl mov test or imul push fnstcw test mov or xchg mov xor ret cwtl movsl test add dec int3 fiadd and ret js aas in neg inc mov xchg lret mov cmc jp xchg aaa repnz add ljmp mov pop push addr16 stos xchg sub lcall pop xchg fdivl dec adc mov xor cmp and imul push out mov jo ret int3 sub cld cltd stos inc lcall icebp pop mov inc add jne outsl lds push adc cmp adc cmc mov cmp ret or popf stos incl cmp call or popf mov jecxz xor jmp andl repz mov push and push enter push movsb push stos dec mov pop lcall xor sub clc nop jno or cmp icebp pop pop push xchg jl inc aaa or aad and stos bound mov add sub test pop sub (bad) jl push pop adc add icebp hlt cltd mov and pushl xchg dec stc int movsl inc xor cli push push repz pop imul pop sub mov inc es lea pop data16 inc mov icebp jmp inc and push cmc fadd inc cltd cmp and or xchg add roll inc pop xor xor std into addr16 les (bad) xor xchg loopne sarb mov dec ret add mov sarl sub push sub mov out repnz test mov mov and cld sub dec ss dec inc mov insb aad jb in lahf out push mov jbe,pn jb mov loop xchg xchg inc add jnp enter lahf xchg fdivrl xchg or mov jae jae sbb rorb or loope sbb imulb push rolb mov fnsave jae ss insl (bad) pop loopne test jno jne pop jp sbb pop add pop and jmp daa add call js in cmpsb pop ret or out fwait push mov inc mov enter mov mov xor xchg je inc lods jle dec subl add repnz xchg ja sbb cmpl xor repz pop scas fs add mov push pushf adc jo fcompl outsl lahf inc insl pop mov jnp div jo cltd mov hlt cmp inc outsl mov ret and dec sbb ret std push aaa divb hlt sub (bad) daa and arpl gs mov imul mov mov es testl jne lea lea shr cwtl sub aas mov jns inc pusha stc add or or mov cmc push pushf test call mov mov mov pusha push lea jmp mov bt pusha add cmp test pushf jmp lea call clc test bt pushf mov pushf clc call jmp movl pushf pushf movl push lea jmp jmp add push gs outsb push gs js gs imul gs xchg stc mov cli or cs stos lock inc mov or out sbb or pop cmc mov mov push ret jecxz jg adc cmp jmp xchg jecxz xchg out fldenv mov bound mov xchg add pop cs push or fsubs xchg mov call sbb mov pop out adc mov sub mov icebp pop sbb add and xchg sbb rcrl jne loop loopne les shll jp fdivrs mov in outsl in stos fcoms sbb dec fnsave (bad) jge inc pop imul in stos xchg or xor cmc cmp mov xchg outsb aam mov ss sahf pop iret inc jbe add (bad) fldenv jmp pop push das fs orl pop ret jp and adc (bad) xor (bad) repz pushf orb ljmp cmpsb int dec je xor push mov pop insl lock ss pop les mov lcall adc pop scas or dec aam insl sbb rcrb or outsl pop or and outsl sub or (bad) in cs daa scas jecxz mov xchg je and outsb mov int lods dec (bad) mov add fwait loop arpl popa mov pop lret lret adc test lcall push leave stos jg push inc and mov repz test pop test sti push xchg sub xor lret orb mov push mov xchg inc imul cmpsl fist xor and popw mov fwait jno and aam popa sbb loopne shlb aaa scas inc cwtl jg push test cmp and adc sbb sysexit lods dec mov push inc out add in xchg add and scas fxch xlat pop out dec (bad) aaa mov stos mov cltd sti outsl ret xchg mov (bad) and aam or (bad) mov (bad) pop shr push sub jo inc sti and pop nop pop fsubr sub mov (bad) xor cs cmpsl sahf pop add sub jmp mov lock dec or jmp fwait popf adc fiaddl and pop mov aam mov sbb mov mov pop push int fs and scas lods push sub xchg aas iret iret bound ss sbb jmp push inc jge (bad) mov (bad) ja add add fucomip (bad) icebp or pop daa pop mov adc xchg mov dec jle add push inc jb adc and dec inc repz cmp adc test sar lahf jbe das push frstor pop xor nop jne scas popa (bad) out xlat ret int3 or xchg std das mov loop enter aam lcall scas push mov ds sbb and pop dec inc sub cmc inc pop ds inc outsl cmp movsl outsb xchg or xchg insb mov and je clc pushf push cmp movb lea je call mov movb mov pushf pushl ret pushf call test inc xchg fimul cmp pushf or dec mov and push sbb jmp psubq inc mov push popa pop dec popa aam mov sti cltd adc mov xchg add aam mov daa dec mov iret cmp pop mov cmpl inc inc sbbl testl xchg repz jmp cmp xor lret mov out cmp jp dec jle std sub xchg call leave push mov add xor pusha call negl adc bound out out jle ret mov jne pop add mov mov push inc pop mov call cmp sbb les aam imul xchg (bad) or pop lret jnp push mov xchg test mov ficoml shll sbb cwtl cmp inc cmp xchg pushf movsb mov cwtl adc pop pop xlat mov jle xchg push push cmpsb jo pop in cli idiv adc or pop gs cmpsl fucomp orl int3 and adc xchg (bad) pop mov dec push lret dec data16 mov adc or mov out stos or adc jo rorb lea je push pusha lea jmp push lock std std xchg jo sub sub sub pushf mov pop xorb lret shrb cltd in sub bound aam pop leave add out sub test cmc jge and out xchg or aam xchg fist in xchg push push stos les mov mov enter flds es jno push inc gs lock mov mov insb cmpsb adc xor xchg nop call in jge pop btsl xor sbb stc xor je cmp lock enter movsl pop out cmp pop fcomps stc sbb sbb test fldt int dec fiaddl and dec sarl or cmp imul cmpl sub fs into movsb je insb dec orl cli sbb inc into pop in test insb xor pop add daa aaa int3 data16 test add in test push lds sub sbb inc dec ljmp aaa jp adc sub fs call call movl lea jb test call cwtl seta cwtl lea call decb jp add inc cli arpl and xchg imul mov jno push inc loopne xor mov mov mov inc dec shll shrl and and or lret lock mov inc dec inc out js repnz xchg jp ret dec je dec push arpl mov in mov incl jb jns mov sbb push (bad) cmpsb cmpsb cmpsb xor aaa loope jle (bad) or mov int3 cmp pop stos sub in das jbe pop mov movsl lss test sbb mov popa clc cmp insb and pushl pusha pushl ret sub push cmp push lea jmp push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret push push lea jne pushf pushl jmp rorl in cmp push inc shlw mov cmp mov dec setge jg xor cmp mov dec outsl push adc cwtl jle xor pop pop xchg add dec sub inc (bad) fcmovne inc fldl2t cmp xchg push adc cmpsl push sbb sahf xor inc add pop mov cwtl or cmp mov mov push mov mov pop push xchg test es adc outsb add xchg iret lcall xchg dec fdivl cmp out or lahf mov or popl popf imul push jmp xor pop aaa ficom xlat mov jg and add push inc xchg (bad) aaa dec (bad) aam fidivrl mov (bad) pop mov faddl ljmp pop mov notb and ret (bad) jns insl outsl pop mov loopne cltd shll (bad) and lods aas cmp pop std pop push stc insb jmp or pop cmp fldcw (bad) cmpsb outsl push xchg jno lock sbb pop clc adc leave mov sarb lods ficoml xor adc in lcall push pop cwtl xchg push (bad) xor out jne,pt (bad) out imul and mov mov sbb je and and or inc movsb iret xor (bad) pop inc gs cmp popa xor mov pop aad xchg arpl dec lret mov pop (bad) cltd pop fcmovbe dec popa clc pop cmpsb dec mov sbb and push mov imul jnp into push lock into push ror pop sbb gs sub mov inc ret xlat mov call inc out dec out int ljmp ljmp pop mov call out push icebp inc out add xchg (bad) popf xlat jbe sbb mov xlat cmp xchg sti mov sbbl xchg dec arpl adc add fucomp pop test add (bad) stos xchg (bad) stc cmp call push inc push push dec dec dec cs insb add adc clc jmp mov aas lea add enter push inc push popf xchg jg push cs ljmp cmp inc add inc mov cmpsl push int3 fdivrp loope int pop mov inc les loopne fmull (bad) mov sbb mov dec mov popa sbb test push jbe test sbb pop loop and push test test jecxz enter push ret sti mov jnp jo fsubs or test sahf and mov fisttpl push mov test sahf (bad) pop repz sahf mov push cmpsb loope repnz iret add cmp shrb pop ret push xchg je pop or add js sbb lcall pop sbb add cmp sub das addl mov sbb pushf jbe adc add dec mov mov cld iret sbb pushf xchg xchg jbe test idiv lret lret mov leave jmp cmp mov jns aaa orl (bad) mov mov cmp sbb jno gs scas lret out sti scas in pusha insb daa xor ret or dec mov clc jne test bt or call xor shrl add mov sub jb mov add call sub jne ret not mov jmp lahf outsl and add imul pop lea push stos les call sbb jmp sub push mov mov dec mov test mov or subl (bad) cmp mov jl (bad) (bad) sub insb shrl popa push jne ja push mov hlt jo sbb bound fadd fdivrl jns pop lock stos inc (bad) shl dec enter vmovups xchg cmp mov sbb pushf lea movb pushf push lea jmp call mov daa adc (bad) fnstcw (bad) mov fnop faddl jae or mov lahf pop sbb pop es std jmp jmp sbb fcmovbe test enter test out cmpsl subl imul aaa sub pop push xor mov xor and (bad) xor mov push mov int insl add xchg xor hlt stos xor js pop lock jo fcoms ja std aaa roll sub pop xor xchg xchg mov inc cmpsl or push or stos ja inc sbb fcoms inc inc test arpl aaa fs test or dec dec hlt hlt enter adc adc out cmpsl sub pop ss add dec jne and (bad) xor adcl xchg push arpl outsb dec scas cmpsb aad xor pop rclb ljmp pusha ds push sbb xchg rclb mov out or fwait stc lret jbe mov dec out cld (bad) sbb mov jbe jg (bad) int3 (bad) mov xchg cs or into lcall dec sbb cmp and mov add sub mov jne subb pop cmc sub xchg mov dec adc adc shlb icebp mov mov psrld xchg xchg ret jge pop in mov jns fcmovnu gs pusha sub test xor int3 bnd pop or incb (bad) sbb ds idivl sbbl stos jge rol je jecxz mov fsubl and iret xchg pop ffree dec pop adc aad dec imul ja int3 dec shlb (bad) (bad) mov (bad) icebp xor inc mov ljmp fnstsw push inc imulb jmp es xor sarl es arpl daa mov out and call jnp mov lret in movsl pop mov jmp xor jge aas clc mov jo cmp mov aad mul inc test (bad) push mov mov arpl xor pop outsb sub pop in aad es pop xchg sbb mov or mov adc addr16 cwtl jns call lret cmp sub cmpsl das and or inc rolb inc dec push insb inc xchg aam and mov rorb js sub pop jge inc lret pushf test xchg outsl call lcall mov negl sub test das jecxz mov hlt mov icebp iret es mov (bad) cld loope push add sbb mov cmp mov pop jecxz aam insb xchg pop cmpsl push cltd inc mov mov fcmovu jle or ja sbb xchg out ja push test sub or sahf ret cmp sbb loope inc mov xchg jmp ficompl cmp (bad) popa movsb dec pop xchg sub mov dec jo scas inc adc sarl fnstcw repz popf pushf mov loopne loope mov dec inc cld push (bad) adc adc inc cmp cmp hlt outsl sbb sbb bound bound lds xor mov out stos cli xchg add stos lods mov xchg jg pop inc lret sbb xchg cwtl or inc dec aaa push push dec inc mov xor sub fs and dec popa ja mov cmp add enter in cmp push push sbb cs add xchg ds pushf cmp xchg push and xchg mov mov out jb enter test js loope xchg in jecxz cmp inc mov outsb dec lds rsm lods in and loop or cmp xchg cmpsl and cs add ret push xchg loope mov popa add lcall jle cmp xchg xchg xchg loopne push jp out cmpsl push sti movsl adc cwtl or movsl int3 repnz mov daa insb xchg or jle and jns rcrl mov mov inc inc and xor pusha sbb aad pop mov pop pop outsb sahf dec insb insl fs jmp mov inc add (bad) sub adc mov out idiv movsl dec divb out lahf push mov cmp ds adc dec aam shr imul sbbb adc in mov and nop enter xchg push xor insl sbb arpl jnp xchg out cli push push push mov flds push push sbb insb mov pop cmc bound cmovge jmp loop and sti cwtl out inc sbb push cmpsl push mov es add xchg aaa pop push mov xor rorb mov movsb add nop and jb push xor mov inc adc xlat or cmp jge mov fwait test xor xor mov iret jns ds pop adc inc sub adc jge push (bad) pushf iret test hlt lahf mov push sbb push gs dec push adc sub push mov fdivrl enter lods lret call cmp popf fsts xchg ss push pop pop lret add and sbb sti aaa mov jo jl mov jecxz enter dec xor dec call adc cmpsl jg jnp pop aas mov cmpsb test rol pop jecxz pop mov dec xchg mov dec ja adc js sbb and push sbb cmp test adc pop adc inc lret (bad) jg test fistpl dec dec lea and pop into mov sbbl mov mov pop sarb xor mov cmp xchg in xchg cmp aam fsubrs sub adc sahf fwait mov mov pop popl clts repz insb test xor add xchg mov push iret out sbb dec insl add mov xor mov cld ud1 or movsb and inc jnp adc jo daa fisubl jp cmp popa push sub arpl cmpsb mov xchg dec cmp js mov mov or (bad) stos fnstenv cmc jmp into xchg sub sbb adc jle cmpsl ja pop cmc xchg add lahf mov xor shrb sahf jns in mov imul pop adc xchg xchg push in mov push cvtpi2ps pop lds add clc cli xor mov or sets into push adcl add jns mov and rcrb or clc lods mov dec jno add xor in jo inc aam lahf es dec push cmp inc pushl inc lret dec popl pop dec sub leave push cld andl and or rclb adc stos add push ss mov in inc pop xchg fist clc xchg cmp out ret jp mov push into mov aam jbe lahf push cltd pop sbb push mov sub mov dec xchg xchg mov push arpl xchg push add push loop mov add cwtl lods cmpsb out addr16 jmp cmp cmp rcrl mov adc repz sbb bound or jge sbbl push int3 loope ret pusha sbb mov pop mov ret je push sarl push fcmovnbe mov xchg imul xor sbb inc xor jmp iret mov sahf fcmovne sub cmp or mov inc lea push sbb rclb and xor lds cwtl mov push mov add xchg ret mov fcoml (bad) stos pop icebp mov mov enter xlat pop icebp divb mov or dec stos mov shlb add dec and jo dec mov (bad) int push jb ficompl pop adcl imul stos je loop or push outsb in mov mov adc push add out pop (bad) (bad) xchg fidivrl ja into cmp std mov (bad) not cmpsl pop push rcrb fldcw pop dec ss jnp daa popa sti jecxz cmp push mov dec add sti lcall jg pusha rorb xor movsb jl lods push push mov dec jns into cmc pop (bad) jmp je add xor inc add jno adcl lret decb pop ja loop call jmp lahf pop sub pop inc dec cmp or test inc ds out (bad) repz cld data16 ret cmp push imul mov sbb loopne pusha mov inc mov decl jbe mov (bad) pusha lahf in mov or xlat cltd and sub andb insb sub repz fstl cs sub inc jge mov stos jae inc out inc insl orl outsb push sbb cmp bound test lret jmp xor loope or ljmp hlt test push push leave cmp and jg std repz inc int3 adc lret jp and cmpl sbb jne nop jnp sbb jnp mov les or xchg (bad) ja jmp mov or adc jmp popa fs dec in imull push jmp sahf test push xor xchg lea jo and mov jecxz aad cld (bad) fldl pop mov sahf popa fimull cwtl arpl (bad) push dec push daa ret pop pop outsl sbb xchg mov fidivr pushf mov fidivl leave add or and dec mull aas lods jge incb push je mov int3 cmpsb jl mov inc (bad) fcoms adc enter repz push mov jae cs mov out adc add adc xor or mov push clc cmp inc add xchg pop lods cmp sub subb loope cmp pop pop sub test inc push mov cli pushf sub es das mov icebp sub xchg dec and imul test out movsb ljmp aam jb push mov dec nop jae xor std je mov xchg inc dec xorl sahf lret mov inc add sub jb aam in pop dec jmp xor (bad) mov pop xor lea aaa mov and adc mov add mov rclb sub daa add leave fildl in mov inc mov gs or sub xlat adc les fdivl rcrb lea cmc add cmp mov dec mov fidivl mov ret stos jns imul push or imul xlat xchg pop pushl outsb nop icebp mov aam adc mov inc incl sbb fstps push push pop mov ljmp stc xor sub add add cld mov fnstenv and adc cmp cli sti int3 int3 mov sub (bad) sub sub cmpsb lcall out and pop jnp loope gs ror inc xor mov pop mov xchg mov (bad) mov pusha cs mov rolb jno sub mull cwtl adc (bad) cmp adc iret loope (bad) mov adc and clc dec mov mov and sub aas mov pop iret das push (bad) lret mov pop dec mov jmp lret es add pop xor gs sahf adc or jg pop (bad) scas fsubrp popf mov push dec sbb (bad) fisubl iret dec mov adc clc (bad) sub les or xor in push shll dec pusha inc push aaa jecxz in or bound lods (bad) fadd pop dec or and repnz dec imul mov mov std rolb cmpb aaa rolb out xchg fwait (bad) push adc in movsb (bad) (bad) pop stos jne test popa xor mov icebp inc dec aas int3 mov or xchg out in push mov jle ja lret dec pop cmp (bad) xchg jge out sbb adc xor cltd add cmp shrl andl in aaa lds or movsb mov push insl das add mov cli mov (bad) std xor (bad) mov jge sub xchg inc inc push pop das sub jmp cmp hlt and lods or call add ret dec xor push sbb out sub div stos mov xchg hlt cs cmp (bad) enter mov mov sti jmp sbb sbb leave int3 js adc mull cmc dec cmp das jo stos jne (bad) sbb lret push fimul cmovb imul (bad) cmpsl (bad) std inc push xchg push fnstenv add xor cmp stos sub lods lods push and push js cltd lock shll adc mov out push das inc mov xchg mov icebp nop jnp (bad) mov fwait dec mov xchg or imulb out shlb push outsb push jl jl insl adc jae cmp sub sub iret or popa sbb out jnp push inc subb adc lret ud1 adc inc aas pop jbe mov rolb fimul inc fwait pop or xlat gs into std sbbl aam jmp inc in out jo ret inc xchg sub or in pop jb icebp push jle (bad) fs xchg cmp xchg out pop int3 loope pop or dec push stc inc cld aad fs xchg pop dec lock jbe pop add leave mov je loope inc add xchg mov pop cmpsb fs and mov jno icebp and stos cmp sahf and rol xor (bad) scas ficomp inc es and out or inc pop jno subl mov (bad) fs imul sahf push lcall and jmp push jbe pop or xchg mov and push int3 or adc in addl (bad) xor neg mov inc push test pop push mov insb lea fcmovbe push mov xchg pop jp jl int push adc xchg mov das sbb jg ljmp add iret adc xor jecxz add push fistpll and add cmp mov or bound mov cmp adc clc push in and gs push adc ror sub ror int3 pusha xchg nop lret mov aam test mov stos loopne push (bad) xor mov xchg mov mov pop mov neg stos cmp test repz pop push jecxz sbb and sub scas xor in pop add ret lea test pop mov scas cltd or add aaa fldcw lret rcl ret gs daa pop xorb xor or mov lods sub lods lods jo inc (bad) ja ret dec andb aas mov inc pop (bad) loop xchg mov int xchg inc push lock jo xchg inc or push shr xchg jb add xor mov paddq or xor movsb xchg pushf rcll push out fnstcw les xorl in pop cmpsb mov jbe das or pop mov pushf insb or or popf pop mov add push aam lret adc jnp or in add lcall mov mov dec xchg mov popa das pop movsb and sbb and call cmp mov or add jb cmp add sbb mov jg ss xor xor movsl cmp add mov cmp and jp lods cs insl into push sbb loop in xor or add pop fbstp shr jns (bad) (bad) lea and xchg mov icebp cmpsb sub loop bound cli lahf mov mov ljmp or std fistpl inc jne mov mov jno mov jg cmpsb (bad) and sahf sti (bad) xor and add popf xchg and lea fucomip shlb add pop push shrl mov lods xchg imul mov mov in pop (bad) xor lds ja mov jno ja insb leave ficoml or (bad) push clc fcoml adc mov fwait das push iret adc rep insl sbb lods enter nop scas jmp bound jl popf or xchg mov scas gs or das lahf lret mov (bad) js jmp stc lock orl mov jg push ja mov insb sub mull out cmp adc xchg push cmp (bad) hlt or std lock xor xchg or mov cld add aaa in pop dec inc jb mov cmp imul cmc decl divl out sbb xor les lds jp mov pop mov xlat fcmovne xchg addr16 inc sbb daa sub psrlw mov and xchg lds jge out or xchg jecxz in lods add loopne lds lods mov mov dec pop fiadd movsb jbe cmp or outsb and shr adc adc mov jg lcall xor sbb (bad) xchg test (bad) lea shrb push sub les xchg test inc scas push xchg std (bad) mov aaa daa jl and and sub sbb sbb add mov cltd mov sub mov sbb dec pop jmp pusha rep fsubrl mov hlt sarl push jp adc jecxz sub scas pop mov outsb je into pop fmulp xor adc scas hlt cmp dec (bad) cmp cwtl fs arpl pusha sub inc sub movsl push shrb call mov into ret mov mov into inc cmp andl pop sbb outsb sti clc dec adc mov sub inc push mov dec dec or pop cmc out jns cwtl jo jp sahf ljmp ljmp or adc pop mov cmp push or stc lds test mov jl mov int3 cmp test mov inc mov in cmpb test cmc push jg inc std push in xor and pusha pop int iret mov loopne mov or shrb sbb add in mov popf or mov fcompp and inc iret mov add popa jmp push mov sbb dec ja out fbld add sub and aam or adc xor clc cld cltd cltd cmpsl lods sub jl jge adc mov jns shrl xchg inc loope lret mov fisttpl xchg xlat fcoms cmp xlat dec pop push dec push out test adc jo mov hlt hlt insb lods call sahf dec cmp mov inc mov fs push lea adc daa and mov fisubl sahf and sbbl inc mov sbbl mov sbb xor rcrb push lea pop mov xlat setb inc xchg xchg jae mov dec mov push bound daa add mov or (bad) and sbb mov pop pop cmp pop repz scas mov cmp test enter sbb sar mov xor jne cmpsb stos rcr int3 jge mov les arpl xor popa adc add ja imul pop adc divl out mov xchg lock (bad) in out fidivl dec mov dec push xchg mov jp dec adc mov scas jne int3 pop cmp (bad) mov es mov insl cs xlat sub jo jns lock push and js rclb or jl sub xchg sahf mov (bad) into push push xchg lahf mov mov hlt xchg nop incb testb movsl cmp into mov sahf inc fsubs inc in pop outsb out cmp not pop rol idivl or aam and dec mov jl and xchg cs lcall lods dec test mov xchg cmp sahf push mov jg sub movsl jle das xor sbb cmc mov cld lret jno mov fwait cmp mov dec push int lahf fwait jno lahf and cmp das rorl bound jnp in hlt and adc out push cmpsl or aas push js sti sub enter jne sub inc test jb arpl add daa add loopne nop clc xor push pop scas sbbl mov adc inc and testl mov sbbl dec xchg sbb xchg stos mov inc (bad) sahf fsubs inc fidiv or ja or sbb cmp jo push xlat mov dec push out test outsl pop xchg hlt cs jno mov fsubs mov popf xchg (bad) imulb cli outsl adc mov insl and mov (bad) push dec inc shr fidivr add lea jbe repz xchg cmp inc cmp leave cmp dec jo mov insl std repz or cmp clc xchg inc adc push cmp (bad) lds dec jle or (bad) dec shrb js enter daa movsl nop or inc or fdiv push dec mov jecxz icebp shll jmp push cmpsl mov add sub xor rcr int push call and and add das (bad) or inc add (bad) aas push cmp cmpsb push dec dec mov (bad) nop (bad) add cltd cmpsb ror scas out aas scas dec cltd arpl adc in je in jo dec das stos sub rcll add insl mov sub outsl adc nop adc icebp cli stos or scas sub adc jg jmp xor loope xchg idiv sbb and xchg es jecxz and pop jl enter dec scas mov ret lret ss lods pop sbb call dec ret fildll cwtl gs sti lods out pop push (bad) in mov mov repnz bound pop ss insl pop hlt arpl into subl enter xchg roll (bad) cmp lret jge and add or or insl or lds adc out cmp push movb xchg cmp push mov mulb daa mov (bad) (bad) mov jo push xlat mov pop cmp inc loopne mov add leave arpl or mov inc or (bad) mov fldcw sbb pop (bad) cmp ss mov (bad) fistpl stos sbb inc cltd out mov mov or mov push push hlt mov mov stos rclb jp mov jbe inc mov add mov popa loop xchg inc pop test mov stos (bad) jns xchg jg cli repz aam out jno jecxz sub in mov out fnstcw mov mov rol (bad) xchg dec and pop stos gs out dec dec pop pushf fwait and mov dec pop pop add pop mov cmc push cmp lods mov push fcomps xacquire cli (bad) cmp dec mov insb mov movsb and ljmp ret jns cmp pop movsb jo push xchg mov cmp mov (bad) data16 pushf mov outsb xor lods (bad) mov sub jmp lock mov repnz xchg in es pusha jle dec repz lock xchg addl cld add fstps mov fildll sbb mov lcall push xor and add xchg clc loope push xor enter xor mov sbb mov cld clts test sub out jne xchg adc xor adc call (bad) add jne adc xlat insb sbb adc jno insl (bad) clc mov xor inc push inc mov sub xor leave mul mov mov rcll mov jno fwait pop and jp lahf js rcrb fidivr mov inc test add mov pop push loope xchg or mov xor stos in sti sbb pop and dec or les xor fsubl aas dec sub clc jge movsb cmc popa clc out sbb inc into mov cmp loope out fldt hlt cmpsb xchg mov call sar stos and cwtl movsb xchg xchg insl outsb test (bad) cmp (bad) in xor pop mov and cs outsb mov sbb cs cmp pop scas mov in and test clc mov jb int3 push fcmovb dec ror lea sbb and cmp lcall push pushf add mov lds push daa adcl ja ret in mov hlt xchg cmpsb dec dec cmp inc dec push fsubr jle mov pop lock rcr fs or pop repz sub test gs pop jle push dec insl dec and ret inc cld mov jae sub push adc inc das mov or aad sti lds daa sub fisubrl out mov das dec loop mov xchg push pop lret imul xor (bad) lock mov lods xchg cmpsl test mov movsb mov aas and mov sbb pop jp push in roll fimull sub add cmp test lret pop or js (bad) xor add ja sub dec and mov xlat cmp movsb negb jo dec test cmp pop mov (bad) stc roll std push cltd fdivrl mov shr add iret call adcl xchg xchg decl sbb add fdiv out test adc in sub lret lea ljmp loop dec add (bad) arpl (bad) or mov test mov fdivrs jno or cli xchg sti and pop and inc mov lock je mov inc into cmp sub inc outsb lods xchg scas sti fildll movsb pop xor lea pop jle push inc add lock test xchg mov movsb mov in cltd clc sub inc aad stc push fwait insb cmpsl adc mov sbb es ret sub and shlb jb pop dec roll les out cmp jae jl aam jl xor add cld imul jle test fnsave mov pop movsb jns jle dec iret stc or cmp xor pushf sarl daa jns mov pusha or mov fdivs sub hlt push sub jmp pop mov pop cmpsl xchg movsl (bad) insb inc (bad) rolb mov cmp jbe out (bad) ljmp jle xor scas (bad) cltd add je (bad) mov xchg ret mov daa adc aad mov adc inc imul fistp out lret shll (bad) pusha push mov pop push repz add (bad) mov jbe clc call and add cmp enter mov test ds popa outsb adc testl leave test cmp ret movsl and out push xchg pop xchg mov or sbb cli in test and push dec jns addr16 jns lods jl cmpb sbb push mov out loopne mov mov push fldt cmpsl andl pop mov jecxz cwtl aam jb mov gs roll xor out (bad) (bad) sub lods or shll cmc idiv mov inc outsl jle loope adc add fsts pop je inc mov cwtl sbb xchg movsl cwtl inc jl daa loop cld pushf mov add (bad) mov insb repz or js pop in jae into popf sti inc mov cmp ds jae stos ret mov into (bad) inc mov dec je movsb lods mov jecxz rcr mov adc sbbb imul stos (bad) sbb mov test jmp and (bad) std lcall adc or in iret mov iret sarb pop aas mov pop out imull lret in add mov hlt cwtl push sti dec and dec (bad) mov cs mov jecxz testb ret sub in sub insb idivb stos notl sub sub sbb push dec lock fcoml xchg sub rorl ljmp xor xchg in or outsl fwait cmp and and cmpsl std xor in sbb fwait jecxz loope das and xchg rcrl xor pop outsl cwtl cmpb pusha fbld popa push shr add sbb into sub mov test jae xor pop pushf jmp pop ret out push pop mov jae cli cmpl ficompl mov cmp (bad) mov shlb pop (bad) xor mov inc sub pusha push leave mov mov mov sub mov dec test adc (bad) iret sub andl push push adc ret out jle ja ret mov mov in add cmp push ds xchg nop xor push inc icebp mov (bad) mov dec fnstenv push pushl mov xchg and dec lahf (bad) ja dec cmp lret mov (bad) cmp jns jbe or (bad) mov jbe,pt xchg xchg and enter xor lods scas lret cmp mov (bad) jb jae js bound bound or mov stc (bad) pop nop addr16 jp dec mov cmp add push jo cs aas loopne lcall adc xchg pop shlb lahf sbb push into (bad) (bad) sbb jmp add pop inc lods push cmp push in pop (bad) int3 stos sahf nop repz and and xchg xchg mov popf orb xor cmp out pop pushf in mov ss test pop (bad) ja inc aaa fdivrs lods sub iret ret jge hlt xchg push in decb mov cmp lahf ds int stc lods inc int3 jb jo jg aaa dec push sbb lret lock ret movsb mov adc test loope ja enter les add sub icebp or adc jae mov push jmp xor loop lcall dec xchg dec push les push jbe adc mov jbe lds mov dec pop sti pop sub sub popa mov bound repz pop fdivrs (bad) std scas xor jp js icebp rcr andl into mov cmc scas cmp out lods fcomps sub push je pop xchg and call push add and jg adc adc cwtl dec sub mov adc lea leave pop ret add or out adc dec dec popf mov sbb xchg jge lcall cmp sti add xor ljmp push (bad) cmc jns daa xchg or mov lods int xor fprem1 (bad) adc lahf push test aaa xor and popf xor movsb push xlat and mov js ljmp or cmp ja rolb les jl ficomp pop cmp jecxz in and xchg add dec inc mov cltd add js inc adc hlt fs jge out mov sarl xchg sub xchg inc movsb mov adc xor xchg lea lret mov add rorl pop mov pop loopne inc push sti pop sub pop pop and mov test xchg cmpsl cs imul cwtl adc sbb add ja pop sbb hlt and pop xchg in test ja roll out add sarl inc aad inc inc jecxz insl mov mov ss lock imul mov jnp mov adc inc fwait mov jbe test push (bad) or lfs cmp clc mov dec xor sar popf stc insb (bad) jmp mov insb sub cs es push aad inc mov rcll fbstp sbb aas pop jmp jle mov dec hlt test les add f2xm1 in push out sbb mov pop mov insb pop or imulb push inc hlt andl mov adc lcall int imul mov arpl mov jns jge enter push aaa xchg in and mov dec mov sbb jmp mov lret jns sarb push dec pop push and ljmp int3 xchg jmp adc push bound data16 ds sbb sarb push popa ficomp mov stos pop test mov mov mov fidivr stc jns cmpl shlb pop adc (bad) mov imul inc push sub mov (bad) cwtl or bound mov push push ds lods in adcl mov xchg ja push adc scas rcl popf inc or mov icebp daa stos push enter loopne mov sbb mov dec fcomi push push lret xor stos in cltd imul addr16 dec inc outsb add fsubrl xor icebp aam int3 (bad) jge push ss pop call fmull mov and or mov int dec clc sub stc sub adc (bad) ja adc addr16 rorb add pop push clc or sbb inc arpl (bad) pop rcll lret mov pop or movsb add rep sbbl mov fdivrl xchg jecxz dec div push cmp or scas xor ljmp sarl cmp jmp out cmpb jno sub cmp incb lods mov mov fsubs add jle inc scas pop arpl jl lods xchg xor ss stc xor jl insl add repnz cmp adc mov pop cwtl in push test repnz int3 icebp test (bad) cmp sbb addr16 mov mov aaa test loope dec je add sub jle je pop pop lds mov pop jg lcall imul fcompl lods adc mov call dec pop mov ret xor mov out mov test dec jecxz mov insl ds or sub fs jle pop repz adc sub aas lock cld loop inc lret test outsl int pop xchg nop cli imul push cmpsb shl fnstenv imul push jo stc mov cwtl mov xor clc push jp rcrl (bad) in xchg movsb scas sti mov lahf mov push mov pop xor and imul mov jmp sub inc repnz jl cs (bad) stos jl mov imull js jae outsl iret outsb clc inc dec aas adc bound sbb jnp sahf test (bad) mov xchg out add xchg das ds xchg jp mov xchg mov mov pop lcall jge (bad) lds fnstenv push dec gs sbb cli fnop lcall mov cld sub arpl add in push push fs xor out in pushf xor loope mov test push or movsl and pusha sub cwtl ror xchg jp (bad) cs arpl movsl sbb iret test std lret es push cmp adc icebp mov outsb jl lret loope lahf pusha sti dec or jl pop xchg xorl dec and loopne (bad) pop loopne bound pop jne push popfw lcall sarb adc jg cmp insb nop lahf cmp add fadd cmp popa adc js dec mov cmp test pop jns adcl out xlat outsb mov iret inc in ljmp (bad) sahf fist cmp dec sbb (bad) xor mov xor fcomps (bad) idivb ljmp mov pop inc add lcall fistl fsubl xchg mov lcall dec xlat cmp or cmc enter xchg cli push lahf pop xor cmp jecxz cmpsb jle and cmp scas inc jnp jl mov push push (bad) clc insb push shr clc mov inc fwait add pop outsl sar dec mov jp sub sub cltd int3 add pop add lea pop push add mov ret cmp ljmp push cmp test push or xchg sub xor sub psrlw and iret shll jo es fsubrl shrl push imul out out mov imul add add xor sub jmp lea movsl push mov inc or cli mov jbe outsb mov inc add fs repz push sbb push mov jbe mov mov cmp leave xchg inc sub mov and ja sbb xchg xlat jge cmpsl mov xchg push pop incb jmp gs decb loop or mov (bad) mov inc fdiv mov inc mov pslld in ss mov insl (bad) pop (bad) and jmp push ror repnz in imul cmpsb cmp add xor loope mov outsb cwtl out push add outsl rorl inc add adc movsb call das loop ja loope outsb push movsb pop (bad) xchg mov in xchg jp (bad) inc xchg push mov (bad) out cli mov mov push or sbb cmp push aad jb out orb test repz jbe lea xchg and and xor sbb repnz dec pop divb push add lcall mov jle inc xor cmp cltd divl xor xchg cwtl stos js inc test push (bad) mov xor jo jmp idiv sbb pop pop adc daa sub push xchg pusha cmp inc adc out stc frstor int hlt scas sub sub mov mov push jbe sbbl add inc out or dec in out cmp popa gs and or inc push or inc (bad) mov in add sub inc test dec jg int xor and dec cmp sub mov (bad) in out ret dec mov stc das jmp sti sub dec sbb xchg sub pop dec dec or daa enter xchg shl sti out dec xor add bound sbb adc jp push xor mov mov pop mov iret scas xor sbb jle push add xor faddl mov push or pop and xchg lea popa gs fcmovnb (bad) fsubrs sbb ret pop xchg icebp push (bad) sub sarb inc ret loopne addr16 jecxz pop push jbe xchg sbb mov add cmpsl cmp push and sbb (bad) sti ret aas pop ret push cwtl shrb js push cmp clc add mov pop out add pop movsl mov insl pop xor lds test add test add cwtl and or sbb mov add xor xchg pop lods cmpsl xor in jge rep inc repnz (bad) arpl push addb adc leave sbb sbb inc xor xor mov je stc cmp jl or jmp dec cmp mov add fs movsl imul add pop bound mov dec mov dec push das push push lock cmp mov unpckhps or cli xchg add insb push mov dec pop bound xchg shrb xchg xchg inc cmp inc jae add sbb xchg cmp push das jno mov cltd mov popa (bad) jb push pusha mov movsl pushf add and call dec test and fnstenv sbb push shrl loop pop pop mov jno je scas insb mov pop inc dec enter pop gs mov jbe dec mov push mov dec sahf xchg std mov xor add imul fistpll jmp mov add pusha jecxz daa mov xchg outsl dec imul sub dec (bad) (bad) daa pop push icebp movsb cltd or mov xchg sub pop mov pop bound jbe call les pop pop or xchg loop cmp scas jno enter testb push into inc xor ja cmp lods lahf xchg pop fcompl xchg ja xchg in scas push movl (bad) (bad) pop loop or xchg out ret nop out push mov icebp (bad) ja adc daa mov push or into cmpsl and (bad) pop jl in fnsave add sbb push outsb inc scas aaa mov ljmp (bad) (bad) xor flds pop or rcrb mov and fisubrl bound mov cmp pop fwait mov fldt repz mov popf out stos mov leave leave pop imul inc (bad) xor cmp mov sbb jns sbbl fisubl sub sahf xchg fiaddl xor ficom nop testb lea testl push pop les stc rol mov addl mov pop cmp out adc cmp xchg mov sub xor jg xchg imulb in and push pop and imull incb mov sbb mov es jg ja es push cmp cwtl (bad) lock js into inc lock jle nop lret scas xor adc mov in leave enter call pop add or insl ds xchg out (bad) js mov mov or fsubr mov nop add cltd pop (bad) data16 jge popa icebp aam stos cmc (bad) push je mov jne lret aad pop ret mov popf cmpsb add icebp pop lcall aaa sti jle xchg cld fist and and inc ret ret mov dec xorl mov test mov in in sbb insb ljmp jb mov imul xchg xchg mov insb or jp jbe jno inc inc ljmp (bad) mull adc (bad) sbb out jo clc lret mov ljmp xchg dec or mov inc inc jb imul pop inc out cmpsl loop xchg dec push jg das pushf mov imul mov jle out add arpl shll rorb fstpt fildll roll insb movb pop mov push mov (bad) mov sub str mov ljmp das shlb repz neg sub ror xchg cmpsb jb bound lret flds popa icebp cmp xchg dec push push pop sti lret mov mov cwtl dec jl and jecxz xchg pop mov scas pop pusha and sbb jo fdiv xor xchg cs cmc cs mov dec gs fs push add lahf cmp cmp imul push push adc fnstsw movsl imul (bad) jmp cld lahf pushf pop pop xchg push enter sbb mov jnp mov imul mov and lahf arpl pushf pop stos test inc insb cmp rcll mul or xchg and loop cmp jbe js mov repz jb (bad) jo fs data16 mov mov dec lea inc fwait inc es shrl (bad) xchg fs or mov ret inc es and mov repz pop dec (bad) pushf add enter xchg fidiv (bad) mov loop in mov mov sbb mov lods mov mov lods ficompl mov fmuls cmp push out int3 mov cli push lret mov sbbl pop push rorb sbb push in addr16 or add fcoml movsb nop cmpsb sbb mov cld lcall mov and mov imul adc icebp mov out or adc push into (bad) in mov mov dec and out cld shrb scas adc push ja and insl call dec fildll sub jne mov aad (bad) pushf sub jno (bad) sub mov aam mov cwtl add and sub gs add mov mov mov fbld mov fisubr adc jl mov lahf mov mov lret pusha lahf and jns mov jnp pop loopne,pn in mov (bad) int3 xchg fild enter inc (bad) mov pop mov int psrlq imul cmp pushf inc or inc pop xchg sbb mov movsb push or push pusha ret insl cmpl jne,pn and xor add cld insl fldcw pop stos shrb iret and ljmp sub jl and out addr16 push pop lods enter mov pushf insl (bad) fimull loop repnz int (bad) pop aad adc or xchg sub addr16 sbb dec popa mov mov and aas pop loopne fistp scas or fsubl and les pop adc push cmp divl fwait xchg in lods arpl jmp lods lods pop fldenv pop and (bad) jecxz pop cmpsl cs add jns xchg jo sbb ds loopne pop adc into loop and push or and test enter push inc mov mov ret cmp cmp fnstenv stos jo dec sub sahf lret fadds fsubrl out xor sbb call jnp in aas lock dec rolb xchg inc jp,pn popa cmp mov pop nop mul outsl shrl aam lds sbb pop pop or mov dec inc xchg adc stc ss pop idivl adc push lock jbe sub subb jecxz (bad) cmp pop pusha (bad) adc div loope (bad) and or inc lds xchg dec loop pop push loopne push pop es loop es xchg loopne adc add push mov (bad) fcmovnbe dec frndint pop mov sub mov cmp mov repz or lcall mov sub les pop aam jmp aad jae mov out mov sub and mov aaa in mov or outsb scas dec es cmp mov adc outsb jp out inc (bad) fcmove sbb or (bad) (bad) xor nop or loope xchg dec lods sub fdivrl push xchg je movb mov ror push cli and fisttp push adc loope jge pop les cmpsl dec insb jmp xchg mov jecxz das cmpsl mov popf lcall xchg xchg incl arpl jle testl nop aam loop mov dec lahf movsb movsb pushf rclb adc (bad) push sbb loopne sahf and notb xor addr16 std sub int3 addr16 out dec adc fiaddl lods push inc add sbb or sub loop xchg out mov loopne sbb das jl mov cmc push mov repz movsb push push inc ror jp out ret cmpsl sub dec push sub imul fwait js add inc mov cmp repz cmp cwtl pop enter hlt xor decl pcmpgtb (bad) cmp sub lods hlt adc inc or inc cli (bad) bound pop push jnp mov in jb or fnstsw jnp popf cmp je leave (bad) mov sub rorb lods push fwait lea repz jge jmp sti jae,pt lock out (bad) arpl cs cmpsb imul xor cmp push jns or loop dec inc in into icebp pop outsb lret bound addr16 decb pop sub sub add js mov (bad) jnp (bad) jne call sbb imul inc fnstsw mov xchg mov lods cmpsb xchg mov jnp imul rcll sub imul jmp clc (bad) pop arpl mov jno jb sbb popl mov cld addb in adc aam xchg (bad) push fisttp push cmpsl outsl rolb mov shrl gs mov mov xorl (bad) fsub daa add sub push xor hlt aas and repz jg std sub inc testl or adc aas jns push cmpsl cld scas push push push int3 cmpsl push sbb roll and or sub das lods dec xlat js aaa xchg sbb cmp sub mov les sti leave iret loope hlt roll xchg and or jl dec mov ljmp push xor repz rorl add mov jne push mov xlat mov lahf push mov aaa aad adc mov mov (bad) and imul inc sarb popf cmc inc (bad) and sub dec jl push out sti test jp and mov mov scas lcall addr16 add arpl dec sbb push daa sbb (bad) mov or ret shrb pop test jo sahf sub out bound add pop or lcall mov push data16 fsubrs xchg mov cwtl insl sub imul inc bound sbb mov xchg xchg and mov loopne test out int3 add and dec outsl mov push mov fidivr aam fiaddl lods ja lods xchg mov scas sbb adc sub lahf (bad) xchg repnz cmp cmp int3 test jle cltd andl lcall aas and xchg ret xlat xchg jne push push inc out sbb loope fistpll (bad) mov (bad) sahf out jo imul cli mov jno lcall repnz shrb inc adc cld pop iret sahf pop push cmp andb sub add xchg ljmp les add pop or dec pop pop scas aam ret aaa pusha sbb ss ja mov pop repnz jmp repnz dec mov sbb std and mov outsb mov pushf imul in sub pop sub cltd sbb jl (bad) cmp shlb or bound int3 cmp mov mov push fsubl scas push push or stos lret xchg pop fcomps sbb push push dec push adc mov stc (bad) in inc stc adc and mov call loopne fwait xor loop xor cmp rorl cmpsl pop fild lcall xchg in test cs call mov lods push rcl mov dec mov enter pusha ds push loop xchg mov xchg out push or or das mov out mov dec jns xlat mov (bad) (bad) loopne lds sbb and sbb sbb fadds jle shll outsb int3 leave adc xor xchg push insb push (bad) pop inc loope sbb ds add js pop adcl (bad) stos stos xchg and clc ret (bad) cmp or sbb adc xor xchg sbb xor pop xchg add aas xor dec cmp xor fnstenv and in mov pop outsl mov dec mov mov mov movsl in cmp mov mov (bad) pop test shlb shrb pop push jmp push inc jae fsub or push inc or adc sub cwtl fwait push pop (bad) jno cmpb adc pop cmp jne popa cmp sbb xor out jecxz std mov arpl int push xlat jae mov cltd sub pushl out and cmc pop int3 jle sub ret nop ret jp mov dec xchg dec cmp inc push fcmovnbe add push mov scas sti (bad) jae jle les mov push add aas and jp addr16 xchg popa ret jo movl jg xor repz pop cmc mov int mov fwait in xlat popf leave pusha jae add idivl xor fcmove xchg fsubr ficom int lahf cltd and mov or push pop xchg ror mov leave fwait gs stc (bad) pop sti clc orl loopne (bad) shll dec test dec out cmp mov and cltd fcmovnbe and or jne pop push fs aaa push lret mov fs push punpcklbw lods pop dec jne sahf data16 dec lock or fcoms add gs mov aaa icebp xlat push pop push rcrl pusha pop cmpsb sar mov je sub outsb cld hlt ljmp xor add (bad) cmp into push xchg cs mov mov mov add pop mov sar stos xchg cmc pusha fwait inc cmp add mov test cli xorb push adc arpl jnp je adc cli cmp cld fs xchg test lret movsl inc push out in jmp push bound enter inc std or cld repz push sub icebp pop hlt js or pop and mov mov sbb dec fs es mov mov push test and hlt fldt je punpcklwd dec pushf adc push test (bad) push out sbb pop lods repnz mov cld xchg jl in in adc inc pop test fs lret mov pop inc rorb popf (bad) add lods mov mov push lods lods stc stos mov push jno xchg mov popf push out sbb add insl (bad) jns add ljmp pop stos inc adc xor icebp test xor lock dec xlat les push mov loopne ret leave xchg call loope and inc aaa lods pop aas mov insl test loope and (bad) leave clc mov xchg xchg lret mov pop cltd insl push jl ds cmp mov mov adc decb nop jge mov dec mov jg cpuid out push jge lcall and xchg fistpll push (bad) outsl rorl push pop int3 lea sbb sub mov sahf es fisub das cmpsl std (bad) ret mov push mov push xor xor jb cmp xchg call pop ret adc movsl or mov ss jb dec (bad) and push ret ja or jns std scas dec xchg (bad) fmuls add xchg sbb hlt mov pop (bad) daa push dec outsb push lret dec pop push fwait jmp inc xchg pusha aaa mov jl or xor or pop xor mov cmp fidiv cmc sbb lods das fcmovnbe mov mov xor loop shlb lar add mov adc fdivrs xor and xchg xor dec insl stos sub cltd mov lahf in jns adc jmp add ja rorb into dec jecxz inc fidivl mov jno mov xchg scas cmc or or or aaa js jo out ret push test sub inc jmp iret push or cld or loopne xor je adcl lods outsb cmp (bad) cld push aas mov cs inc pop aaa jle mov imul loopne add and xchg cmp nop sub mov hlt les mov popf push sbb mov push or mov jbe nop cmp mov mov inc leave mov mov jmp repnz int push mov xor into out int3 push cltd add add cmpsb fisttp mov dec inc ret aad int3 lods jo adc fidiv jne push mov pop mov sbbb icebp out (bad) fadds lea rorl js xor sbb gs add aam cld (bad) hlt rolb mov cmp pop dec or pop loop add jb out sbb test mov cmp (bad) pushf imul mov bound xor and les adc or cmp movsl or insl jg pop mov arpl pop (bad) jmp lods sbb lock lods insb or aad idiv enter pusha arpl add dec dec sbb in fadds jg xchg pop pop jle mov imul addb sbb jle or out lcall push mov dec adc sbb dec and push push sub add cwtl push call clc test aad rorb sub cmp test (bad) pop ds ljmp repnz cmp lods or inc loop popf lea cmp nop les add adc test push arpl sbb add sbb inc xchg pushf leave xchg sub push push bound repz fmulp cmp cwtl out (bad) cmpsb cmp (bad) mov es xchg xlat dec iret push or adc ds jecxz mov pmaddwd xchg jge mov adc test cmp sub xchg mov cs outsb or jecxz popf sbb addl add jbe add call mov push es push jae cmp sbb mov push int xor or ret mov sbb in add push mov adc ss xor pusha ds mov and and rcr fwait lods add or or jl push add movsb nop push and cmp push inc pop lahf call lahf or mov sub mov dec or out and in mov mov (bad) mov lock push mov xor rcrl xchg int pop inc dec sbb sti adc ret ds out je stos cmp daa in cmp mov lea jp (bad) or push mov fstpl loopne lcall mov orl (bad) stc sbbb sbb lds test fistpll rcr and lods fsubr adc jg push data16 (bad) jo jg icebp cltd mulb in outsl pop orl out xchg dec mov (bad) aaa in mov bound add cmp lret add mov adc add test mov xchg cs mov iret cmp pop jmp fiaddl mov hlt ret cmp and loope cmc cmp fcompl gs fistpl push cmp stos xchg insb aaa sbbl adc mov frstor and mov push push shll sub xchg testb mov mov pop jne add testb fs push dec dec hlt push and fisttpll xor cmc push out adc test mov jecxz das or sbb imul daa mov pushf inc or add cmpsb push fnsave cmp xor pushf sbb scas mov xlat or xchg clc cmc nop push and jb mov stos jecxz push push sbb push (bad) mov jg addr16 in xchg sbb test clc or movsl add les not jmp orl ret arpl xchg xchg pop cmpsl xor jo pop mov mov mov andl lahf cmp out sub push adc testb pop xor pop or xchg pusha gs addr16 in flds mov mov jnp inc popf data16 std in mov mov xchg mov (bad) outsl fmulp adc loop pop loopne push pushf xchg divl mov push call push data16 jo mov jle pop mov pop mov iret popf sub sub inc mov popw movsb mov adc push ret lods or add pop add data16 jle fwait jp pop in out push test jmp into mov mov (bad) and stos or ja mov int lds and scas dec (bad) in push popf jno push jns sub loopne add les push lock fyl2xp1 add icebp sbb mov cmp xor cmp es fcoml inc gs call int inc stos repnz pop sub pop loop pop cmp add stos shr pop or push pop cmp mov mul and lds stc rolb daa in in jnp xor je ja dec mov mov xor (bad) hlt mov push movsb mov daa cmp aam and lea adc pusha lods movsl popf cmp pop adc cmc xchg or xor ljmp clc (bad) pusha sbb mov (bad) push or xor lock daa sar mov insl pusha cmp lahf jbe push and test sahf orb daa popa scas (bad) int3 fdivrp mov and cmp mov rcrl mov cmp fistpll pop mov in (bad) js mov jg dec cmpsl pop push jmp test xor hlt scas inc cmp jmp add sub jl int3 sarb dec jp xchg add test das inc fiaddl sub imul and xor iret lods or fcoml pop pop inc mov dec popa test xchg add stos inc mov vphsubbw sti mov (bad) mov dec jmp pop dec push mov push scas mov pop pop cmp add ret mov inc jb xor and icebp xorb sbb mov add fsts pop xchg mov sbb cltd mov loopne loop test std (bad) out sarb mov dec mov jge mov push jae cmp push out xor fist or (bad) xlat xchg pop faddl inc mov and testl scas sahf shlb rclb pop call jecxz notl aaa aas mov pop jl and cmpsl jg lds lea loop hlt shrb push loopne fwait and fimull dec lret fdivs test jmp icebp lret jp imul sub xlat or hlt and outsb mov fidivrl adc adc mov or leave xor pop jp out mov rolb lret lea inc mov sar mov xchg test inc in cmp sub mov add mov popf push add lds jmp push inc insb hlt in xchg jge test or push ss shl (bad) sar inc lret add mov fcmovu push out test mov push arpl cmp repnz cmp mov cld into outsl jno pop mov int es imul fstpl jno sub sub dec (bad) jl dec (bad) pop (bad) leave or lret (bad) out icebp jbe ja adc test cmp fwait loop mov or sub insl mov mov cmpsb test enter adc popf push dec mov out shrb out outsl pop mov call inc push lock adc cmp xchg cmp dec stc jg int3 (bad) mov data16 fildl pop (bad) (bad) xchg sbb jo movsl fwait push aad jae pusha mov pop imul das mov in lods xchg test cmp push mov push mov dec cld cmp dec jae ret test repz push and pop jecxz jmp jmp push xor or xchg leave (bad) push cmpsb fidivrl in jle in add jge repnz sub xchg bound arpl arpl push pop xchg pushf enter out bound jge bound aas lahf loop xchg xor lahf pop jmp loop mov imul mov inc cmp xchg aam lret iret mov inc xchg cld lods lcall clc and mov pop pop jnp fildll and leave in (bad) std ret mov push out outsb mov adc dec (bad) shrb addr16 cmp add sub enter test das xchg shl mov mov lods push and adc mov loopne lods xor fcompl lret push push fldcw repnz mov mov add jns dec mov dec cmp lock or cmp outsl sub les (bad) jmp andl outsl fidivl and mov xchg jge push sbb mov pcmpgtw jb mov movsl js xor jecxz adc sub loope adcl es inc rcll shlb jae push jno fistl xor repz pop sbb sub xchg mov or data16 popf insl mov movsl xchg xchg mov dec push cmc mov mov xor mov mov rcl in enter call outsl jg pop into push lds fdivl and lds pop (bad) xor mov in push xchg xchg jp mov cmp shlb enter cmpsl add fwait add insl cs daa xchg repz lcall stos cli les mov scas addr16 ret xor ljmp xlat inc dec movsl sarb in sub (bad) dec push inc or lock rcr sub enter (bad) mov inc xchg jne into je xchg sahf leave (bad) mov jle fisub fmull and fcoms pop adc inc (bad) pop mov data16 mov adc push lods movsb (bad) aaa xor sub adc pop lods iret xor mov test rcrl sbb sarb or das fcom add mov push cmp icebp ljmp xor (bad) or inc adc rcrl mov gs bound stos mov daa sub or or imul pop push xchg inc cwtl add (bad) mov jo xlat push jl xor fmuls xor cmp or mov (bad) xor xchg inc cmp call push dec add es dec lahf out pop movsb in fild test jecxz clc dec mov xchg fcomps aad mov (bad) mov movsb test lock scas cmc mov repz xor addr16 lds add out cld push lret xor jg or pcmpgtw cmp ret push andb imul and dec pop popa lea repz and or add dec cmp or test fadd dec cltd jno mov je aad cmpsl push popa cmp jb lea fwait imul inc mov int inc nop negb mov and ja dec fistl mov xchg out mov stos mov aad mov testb xor or rclb xchg call daa outsl sbb cmc in cmp mov aad xchg mov mov fst lret cmc xlat cs add sub adc aad pusha aas adc cld xor push leave lss in je rcrl pop mov add aaa or jmp sub jae cmpsl je cmp in or add cmp fs jge push xchg aam xchg jne test pushf dec mov adc dec fadd cld push cmc bound repz test dec aad jecxz push lock rcrb sub lds sti xchg or rcll pop lcall aas mov pusha add jmp lret inc aaa cmc enter push push and nop (bad) xlat cltd jns add pop add cmp movsb inc es adc pop mov jae sbb data16 xchg cmp push or pop ljmp and xor (bad) jnp push clc xor sarb pop mov cmovns fdiv push push dec mov aaa (bad) iret stc push (bad) push push and lret stc ficoml push dec sbb adc push push xor sub fisub insl divl inc popf inc mov cmp cmpb in (bad) xchg (bad) loopne (bad) in (bad) lock popa adc rorb xlat clc dec xor xor std jecxz xchg mov das inc icebp rep cli data16 push ret fnstcw addr16 fnop cld mov and sub hlt sbbl jb mov lea mov xchg mov sub xchg mov incb out stos adc popa mov push in fdivrl sub stos scas push pop add mov lea (bad) movsl cmp inc sub cwtl or incl xor adc inc fldlg2 adc xchg mov sahf sub jo xchg fist dec mov orl aas (bad) jno and out sbb int3 lcall aad repnz cmp jl jge pusha inc sub add and dec pop pusha mov inc mov addr16 xchg mov add mov ret int in mov ds scas jle scas push xchg int3 fstpl mov push cmp xlat sti mov sbb xor mov mov adcb fisttpl inc lods mov sub xchg and decl jns imul cwtl arpl fidiv out mov pop aad mov arpl fidivrl jnp sub gs push adc bound pop into inc pop outsb push std sbb ret sbb push push xchg push cli jecxz xchg pop adc push fildll pop test mov mov mov inc pop movsb mov js cwtl pop xlat sahf sti lahf inc lock repnz sub daa sub mov push mul xchg mov daa pop cld adc dec mov mov cmpsl js js cs push ljmp mov in enter mov ds inc adc pop iret (bad) mov xor int insl jg and icebp js inc pop dec sub movsb sub movsl lret call xchg cmp or cmp adc inc mov push inc add jl mov in lds jno (bad) mov lahf leave stos (bad) rcrl fidiv (bad) adc (bad) mov inc lock dec cmc es mov fldt adc repz mov fdivrp fwait aaa cmpl mov das and jo pop leave push movsb xchg int3 xchg mov mov xor jp insb pop and pop (bad) mov aam das fidivr nop pop (bad) ja cmpsb jnp les scas cld mov aam loop movlps imul jle movsb dec ret imul pop inc xchg repnz sub jl xor mov sbb adc mov cli mov pop lods imul sbb mov cmp mov imull push mov adc jbe jnp adc xchg add cmp sbb push add inc sbb inc enter xor shr imul insl pop mov cs adc mov pop push pop pushf ret sti out push xchg push mov pop or cmpsl add pop push lods (bad) test lret jg test mov push inc add repz push push mov aaa out mull shrl mov mov pusha or jg pop call push sub aaa xchg loopne lock xor nop sahf dec lcall mov jbe xchg rorl xor aam mov sbb inc jge cwtl mov sbb lods test por cmp test mov aam cmpsl imul inc enter inc cld xchg sbb (bad) (bad) out scas inc pop cmp mov sub jge rcrl and cld cmovs mov xor std pop and push xchg mov fstps outsb xor ss (bad) shll inc jle rolb pop sbb add xchg push push movsb aaa js rolb stos aas rolb dec mov cli sub xor out or xchg and dec fnstsw jp xor fstpl pop lret sbb outsb xchg push rcr daa mov pop sbb cmpsb lods mov enter push dec pusha or cmp imul adc (bad) jbe (bad) cmc dec mov cmpsb pop orb inc push xor les dec add mov data16 xchg ljmp bnd mov cltd mov fdivrl mov sub gs adc push adc add pop bound lea add (bad) (bad) mov jae xchg into mov add test imulb sahf mov rcr adc pop or (bad) push subl lock dec (bad) in ror stos dec into mov cld lea xor push xchg std cmp ss in jl lret or ja jnp xchg jmp insb dec adcb mov (bad) ja and int add jns cmp push pop sahf stc sahf xlat jge cwtl inc (bad) xor fcmovu jl push (bad) dec sahf pop repz movl out pop je addl popf cmp xor or xchg loop mov bound das fnop popa cmp dec add inc adc adc xor fsts xor das in imul or sub lcall nop out mov jmp (bad) testl stos inc sarb mov mov jns push loopne xchg sub xchg mov pop xchg mov in jmp mov sub outsl cmp pushf shll adc in stc push ss push dec pop and (bad) out leave xor fmul in repnz cltd sub sbb adc gs (bad) or mov (bad) inc insb movsb xlat cwtl sbb cs sbb or les stos sbb or add mov pop push pop xchg mov cmpsb in (bad) push sbb and sbb dec sbb fildll pop pusha mov fldt mov incl es cli shll pop test dec loop int popf je mov push sub or dec aam insl movsb cmpsb loope sub lock mov lcall ljmp mov jo roll mov rcrb enter shlb mov (bad) sti sub into stos cmpsl mov xchg adc xchg nop popf push imul popa arpl ret es inc push jle (bad) jo add mov addr16 lret push out sbb pop cli jg sti rcll jbe ret fstpt lods shr out dec jecxz push bound mov hlt aas sub in arpl mov push ds frstor das (bad) mov loopne inc dec adc xchg mov aas pusha cs or mov xor js sbbl rcll or mov xchg sub stos out jg pop fldl arpl iret cld sub loop inc outsb inc mov (bad) jecxz push arpl (bad) and cmp mov and jmp push ljmp dec rorb dec jle sbb in mov ret mov dec fist jb push mov popa or cs (bad) faddl dec test pop or aas sub fwait cmp inc stos aas stos dec pop add cmpsb and push ljmp jmp (bad) mov mov adc add xchg popa sbb jns push scas jae movsl dec fisubr sahf sahf std test addb and mov rcll adc mov incb int jl lods xchg jnp dec jl lods nop mov push (bad) sti jns aad inc fild fildll std jnp pop nop movsb ret cmp push sbb sahf movsb adc and pop ja cmpsl int3 pop xor movsb dec outsl mov outsb inc subb repnz cmpl imul (bad) add pop inc xor mov or pop je mov movsb or lea shl add mov pusha fisubr xor jecxz cmpsl leave test mov and aam mov (bad) mov mov jno push subl push (bad) fs sbb loop mov imul cs (bad) mov lea imul sbb pusha bswap cmp ljmp cmpsl je out jmp adc lods mov cltd repz sbb dec cmpsb xor stc sbb inc aad hlt test ja mov leave push push into mov test sub (bad) dec push (bad) je or mov movsb stos clc jno sbb pop pop lret xchg (bad) jb cmpsl outsb push adc stos add sub adc fadds and pop and sbb mov jb mov xor dec mov out test dec mov stos fyl2xp1 mov fmull xchg mov (bad) int3 into sbb mov add or nop push jmp adc pop sub adc nop inc xchg lcall popa (bad) xchg cmp mov cltd cli inc dec in dec push and lahf add mov cld and rclb gs out pop lcall add xorl imul push jge outsl test push mov (bad) xor push adc outsb or add lahf xchg repz xchg sbb iret imul popf push insl adc fidivrl pop xor imul pop mov fnop ds sub xchg xlat push gs sbb std in clc dec mov xchg movsl xor ret mov xchg mov daa sbb pop lods aaa rcrb (bad) lret out mov pop scas pop jb cmp dec mov sub (bad) fisttpl arpl mov inc pop adc fldt (bad) dec pop in add jne hlt data16 sub mov mov cmpsb jecxz pop (bad) mov outsb arpl xchg imulb test lods cmpsl roll popa les sbb mov lahf sbb sub das mov stos xchg mov andl das sbb fcomp ds ljmp add sbb into pusha scas xor call push push and jne cmpl sbb adc push xchg add adc (bad) xchg add sbb lahf fisub lock xchg cmp inc mov push dec hlt pop jge pusha mov fldenv pop outsb out mov sbb and addr16 add leave ret inc add fisubl aaa pusha sbb lods data16 lods lock xor into mov sub cmpsl add inc shrl gs scas pusha mov pop pushf push push fidivrl push (bad) push stos inc iret enter cmp and pop lret icebp add adc mov inc pop lods sub xchg jns lock jge in in pop mov fcmovnbe jbe dec pusha aam ficom cmp cmp inc mov mov xchg xchg sarl icebp (bad) divb cwtl (bad) sbb daa push dec pop jb (bad) clc dec mov imul cltd push mov add insl mov (bad) pop into (bad) inc popa inc adc inc mov das xchg inc mov xor divl sti add cs sub and sysenter pop mov sub pushf and lcall lock and (bad) and pop cmpsb push fdivrs xchg inc cmpsl pop and testb jne and mov adc fsubs xchg outsl clc ret pop aam lds adc cmp imul sbb test push (bad) mov test and pop test stc xchg cld or call rcrl xchg mov mov mov (bad) lods mull (bad) shr or (bad) loope inc mov stc pop fiadd mov loopne lods gs jle stos cwtl xchg sub andb add cmpsb lods push pop dec std mov dec jl cwtl sahf dec sarl sar loop mov cmpsl cmpsb xchg out ret js shrl pop adc xchg daa pop mov dec dec outsb and cwtl xor imul jp push imul dec lret push lock or pop lahf sub jno dec jo adc mov sahf push lods xor jbe cltd outsb clc lret mov push imul bound js dec into adc push mov out push push mov rcrb cmp push jp sub or or (bad) data16 inc push pop in and call scas add loopne mov sub push xchg pop pop mov or cmp mov or outsl fidivl and sti mov mov mov shrb rclb ljmp pop mov add adc xchg sbb pop or addr16 push mov mov xchg sahf cmpsl lret (bad) ljmp loope xchg flds lret jb sub cmc pop mov mov jge lods lock pop pop jo test mov rcr and inc cmp xchg jbe pop jb fcmovnb dec ss sti les jmp mov fmuls nop stos mov js pusha sbb adc je jo add fist insb mov fstps mov mov pop xlat fs pop int3 test pop or mov loopne (bad) (bad) sub xchg inc test jmp (bad) cmpsb and icebp in xor aaa ss (bad) mov rorb pop and test add in push mov cmpl ret imul xchg mov je (bad) ss xchg orl (bad) mov clc xor cmpsb xorl stos fst dec loope fldenv push sahf enter sbb mov es cmp pop mov push cmp cltd divb fidivrl out cmp mov push inc mov xor push dec jge popa xchg mov cmp repz repz push sbb popa les out ja or mov jo dec xlat xchg jns sub xchg adc mov sub cmp mov or lds imul stos insb or mov mov orb test jge stc pop and scas jae outsl lahf add mov fwait aas cmp lcall mov jl mov lret int xchg mov leave dec inc xchg js (bad) leave insb sbb adc std cmpb call xor movsb adc and mov ljmp cmp adc pop in pusha insl push adc inc mov addr16 popf mov push xchg jle mov adc lock scas push in inc xlat jnp popa mov cmp fs sub pop aaa jmp pop std sub mov arpl jg pop jp mov push pop je (bad) leave jp movd cld fbld or cmp stos and xchg js insl fstps cli mov or jae push mov fcmovbe das inc push movsl outsb xlat (bad) or jmp popf add addb xchg add add and or dec jo mov enterw push xchg int3 push mov mov aad scas ficom mov inc ficomp stos or mov pop pop sub pop clc repnz push fidivl cs mov sub leave inc jge (bad) mov dec adc cmp fbld sbb stos or mov subb ja sti xor sbb mov add adc and gs xor and repnz push inc pushf fstl pop cli loope sbb lret jo fiadd push mov xchg push mov cmp dec cli push dec push cmp or test daa mov push in and jl or xor (bad) push mov lods add enter ljmp test inc cmpsl insb repnz adc add xadd jo mov rorl (bad) (bad) cltd (bad) int3 sub mov adc jbe sbb insl push sub jne mov pop cmp mov mov repz fs mov rorb mov mov add push ret push adc pop out sub dec decl (bad) push xchg pop xor stos or lea leave je incl adc lds iret cmp mov aas xchg repnz inc and jnp cs mov or push xor push outsl sub cltd fsts sub roll fmuls addr16 adc into aad xor enter ljmp dec out cmp inc arpl outsl (bad) lods sbb stc call mov (bad) xchg mov lock and mov xor cmc push jno push ljmp cli fistp mov sbb sub add in push dec mov lods lods es pop out insl int3 out out sbb iret cli repz mov cmp and mov mov fdiv mov aad inc sti sub jmp xlat aas push call mov les outsl adc fwait lock dec rolb inc psrld add les sbb lods xor dec xchg popa mov jg stos repnz push pop mov xorl inc ja lods dec (bad) ret sbb mov jge mov sub lock hlt or add push test out push mov popf xor lcall into pop mov ljmp ret jb mov lahf nop imul les fdivrs push push orl add and (bad) mov push xchg push fnop xchg call insl adc scas inc push mov mov push sub or lods sahf cmp into iret cmp add cmc mov push xchg push mov push ficomp sub stos out loope mov gs iret adc (bad) insl clc dec test dec and sub jmp dec aad xchg xchg cmp nop add pop sarl xor mov push es xchg fs (bad) cmpsl cmc pop mov adc push or push mov or push rcrb outsb push mov inc pushf adc rcll je mov fmuls (bad) pop xchg inc dec sbbb loop xlat dec push pushf and sahf inc icebp cs push dec vmovaps or push mov cmp dec hlt ss sti dec cld scas inc jl rol sbb jae aas add inc xor inc pop or in adc divl dec mov xor pop pop xlat xor or outsb sahf mov dec mov add adc mov aas add repz fstpt adc inc stos rorl pop mov mov cmc cmp call lea je bt stc cmp pusha pushf call pushl push mov call fsubl daa cmpsl jge inc clc xchg jg xor int xchg or mov lret mov in (bad) push gs add iret jg push hlt and mov sbb shr shlb (bad) test push jns inc hlt pop jno out inc aam leave jmp (bad) (bad) pop push cmp mov enter sub jns imul inc stos adc fmuls push fldcw mov mov rorb xchg imulb cld shll js dec and inc adc add fisub or andl inc gs les cld add jp sbb ffree adcl std and push aas in xchg imulb aad push shll mov sbbl pop inc outsl mov sbb pop add lock add movsl and pop xchg iret ret loop sbb fcmovnb loope mov fdivs repnz movsb aaa xchg scas daa lcall in mov pop cmp js testl inc push cwtl and sbbl arpl mov lock or push int js jnp sub in xor pop push stos and mov mov icebp add aam scas sbb enter cmpsb (bad) pop int3 dec insl clc fidivl loop loopne jp fs movl pusha jmp adc push lea jae daa adc cwtl dec pop aam bt pop btr mov stc cmc push cmp pop lahf lea mov jmp movzbw mov cwtl mov movzbw lea call (bad) xor inc mov test cmp pop pop mov call sahf int3 divl lret stos rcrb popa mov cmp jl sti loop cli pop ss cmpb fwait mov jns pop jp insl push lods ret imul sub cmp insl mov or adc or cmpsb and adc fwait icebp pushf pop cmpsl mov pop negl das xor clc cld push imulb aas repz jnp cmp repz stos cmp bound push mov or add sub lcall mov fsubr mov add shl pushl cmc test mov clc cmp movb lea jae test bt cmc bt sub pushf mov lea call jmp cmp inc mov sti xor fistpl daa aam pop ljmp inc mov push stc cmc xchg sub jle jle cwtl pop and data16 mov outsb les mov sub push loop mov cmp lods inc psadbw pop jb das fiaddl rorl mov mov cld or loop add std sub mov mov xor popf outsb les (bad) fisttpll jae or xor pop dec aaa mov hlt cmc or pusha or mov xlat ror xchg out adc mov sbb mov decb cmp (bad) pop lock or test adc jmp bt jmp stc mov cmp cmp test pushf lea je clc add call cmp mov push inc leave mov dec rorb add lods rcrb push add mov fimul xor and movsl pop mov pop int shrl inc (bad) movsl mov ficom push fsubrp outsl out jno lcall push repz xchg mov pop nopl rcll adc jno mov jae imul rcrl int3 fwait or aas add dec insl ja adc push std pop rorb repnz or lods clc cmp mov push icebp inc negb outsb (bad) movsl shrl sti add and dec or or pop and pushf lea jmp jmp lret inc aam jp inc pop xor cmp (bad) aad gs jmp (bad) dec (bad) (bad) mov cmp dec inc and aaa (bad) into adc xchg movsb nop adc lcall jbe ret dec xor lret jg subl in sub push (bad) mov mov xor adc data16 int ret pop clc ja mov jno or pop sub dec les inc push in add mov negb cmp add out outsb ja in in sbbl push pushf lea je push lea jmp call pusha stos push push pushf pushl lea jmp mov test clc cmc call add dec popa imul jb inc imul jns popa je inc js jae jae jo icebp lods adc push mov popf (bad) sbb (bad) stos cmp cmp lods adc addr16 jne lods rcrb bsf mov clc pushf pushf stc cmpb push movb push mov lea jne push pushf pusha lea jmp pusha dec clc movb rol clc neg bt movb push mov cmp lea bswap lahf sets lea setb lea mov pushf lea ja pushf lea jb cmc call mov pushl movb push mov stos pushl pushf mov mov push movb push mov lea jmp ret xor test inc ret cmp jne pop lret jae insl lea repz mov or xor std stc push (bad) subl jl stos lcall sarb insb inc inc cld rorb push xor fabs insb xchg ret adc or pop mov rcrb and xor cltd cmp add je inc imul jae add arpl (bad) jo and insl mov incl add cmp inc ds movsl insl mov outsl jne xchg outsl jne push add pop mov ss cld mov insl pusha jecxz or (bad) and pop cmp xchg out add insb or mov lret pop imul ret loope cmc hlt jnp movsb sub inc sbb lods call sub mov pop jecxz inc and lock loopne icebp push cwtl ror popf push in jo and test inc sti nop outsb or notl xchg imul movsb ret pushf loop add stc mov enter jecxz jae pop aad or jp mov shrl dec xor adc and push addl pop pop push repz dec sub movsl mov ds sub inc sub cmpsb (bad) ret push jge push mov rcll aaa cltd ss fldt cmp loop mov aaa or pop mov fsub mov (bad) dec cs inc adc es cld sub push fist mov mov clc or js cmp push sub pop sahf lret test dec decb add add add sbb add add add add add add stos or add add cmpsb jg add add add or add add adc add pop sbb add xchg or std push add call mov add pop add mov add jmp jmp lea jb cmp test cmpb pushf pushf jmp not lea pop push pusha pusha pushl ret push movl jmp lea ja clc imul call mov lea jae pushf pushf jmp push sbb xchg inc (bad) or out xchg insb rorb push sub popa sarb mov outsb dec mov out aas jle sub and sub rolb mov or lahf pop bound push mov fdivl pop mov sti dec mov push sub sbb cmp and and mov inc mov mov pop lock adc pop lods in loopne test inc pop xor es mov mov lock adcl cmc je lds inc loopne adc scas jno shlb xor aad cwtl mov or mov cmp push xchg outsb test and out adc push dec xor push mov cmp sar pop ret lds jb xor es mov pop sub sbb stc or pushf sub (bad) jmp add and fisubrl mov lret or fstps sub (bad) add xchg mov cmp test jp out pop stc leave jmp jae xchg adc cmc (bad) mov fnstenv pop idivb sti jmp lea xor or pop or or push or adc (bad) lock pop mov sarb and mov sub pop and outsl loopne cmpsl es sub add pop fwait jne dec push mov push inc and and or mov push inc js sbb mov mov sahf xor popa je lret inc dec fs sub pop (bad) and aam xor add std sub fnstenv (bad) adc jg lock cld push sub sarb inc in mov (bad) xchg imul stos push dec mov jle gs adc xor push add pop lds xchg lahf mov sub lahf pop pop xor popf and mov mov cli lar data16 dec movb and push xor and or pop and js xchg cmc push adc inc cwtl dec orl loop loop pop xor pusha cmp fmull or dec xchg xlat in bound jl sti jl in sub dec mov mov lea xlat jl stos cwtl dec stos push movsb inc dec inc mov pop xorl lds dec xor fldenv xchg cmc add mov icebp stc mov xchg jle xor ret xchg and in cmp pop and (bad) mov mov xchg fisttp stos pop das shlb insl pop pop mov (bad) stos (bad) mov cmp push sub jle (bad) ja pop es push push mov (bad) mov and test xor das mov add push call adc ljmp (bad) (bad) stc pop ret ror lret inc pop pop dec insl lods in and push imul mov daa aas popa popa jnp jno out (bad) pop add add adc dec jmp jo orl inc out ret test mov fwait in sbb neg insl (bad) mov pop cmp (bad) adc notl jg ret lcall dec int (bad) stc fcoms mov xchg mov or sub (bad) xor std jle ljmp inc nop jbe jp sahf imul cmp lods cmp bswap jnp pop cmp sbb pusha push cmp jge scas push pop mov pusha push pusha mov lea jae mov push pushf pushf xchg jmp fstpl inc incl and shll xchg gs imul xchg mov xchg xlat sarb out lret mov inc scas aas repz sbb into dec mov adc or js jl loop call jp fcompl dec ret or insl add rcr aas dec and fldt pop mulb mov inc push cwtl pop mov lea int3 bnd sub mov jmp jo adc data16 adc cltd iret push dec mov xor (bad) push push lret shrl inc xchg inc pusha add mov push lock arpl add or (bad) pop mov xor into mov inc xchg push pop je dec in (bad) jnp and add cmp (bad) outsb sub cmp sbb stc int sbb jo push leave mov xor std iret mov push into aaa fidiv (bad) (bad) sbb test jmp cmp in cli loopne jecxz sub xor cmp rcpps lea mov dec lret inc jae frstor inc sarb ret sbb arpl les lret sbb sub lcall and pushf cmpb call jmp mov lea mov pushf movb pusha cmp pushl mov lea jbe jmp lea ja push stc imul bt add push pusha pushf lea jmp jg (bad) adc in fidivl fs mov mov ss jle stos pusha inc jbe pop int3 push aad jne jmp out push and inc cltd in (bad) mov andb mov outsl xor aas cmp cwtl jae add adc fistpll outsl mov div sub xchg add push adc aad add sub mov clc adc scas xor icebp shufps loope (bad) pushf xchg jl (bad) flds pop in cwtl (bad) out lahf add jo adc and aaa sarb ja xchg cmp xchg lds mov xor push mov inc or (bad) shlb dec pusha out bound sub xor xchg fdivr lahf cmp fstpl and adc std sub and arpl out enter or jo aas scas lods jmp adc jg scas dec mov es cmpl sbb xor pop pushf inc pop push add pop xor aam mov popa clc push iret mov mov cmp test mov sub sbb mov sbb fstps (bad) jmp xchg (bad) dec jno jmp and jmp ss push inc negl je xchg scas xchg rolb es sub and jae inc cli and push ret mov cmp ret je jge and (bad) addr16 jo lahf (bad) xor mov pop jp test cwtl cmp xor push test mov out ds ljmp cmp push call jnp (bad) pop subl sub scas out xchg pusha mov cmp push lock sbb push fs pushf add fisttpl pushf jmp pop in mov mov mov es dec js mov sub loopne xor jbe push pusha movl pushl call inc inc push inc push dec xor cs insb add add jmp cmp push inc call shll xor or adc cmc decl jge mov sbb test negb lea pop sub stos push sbb int3 or pop (bad) movsl mov sub sbb mov cmp out insb dec mov cli mov jne dec mov lock ljmp sbb xchg negb cmp lds mov mov xlat inc lods and xor iret or pushf clc pop mov iret outsb int test dec xor inc lock mov adc xor cmp jmp bswap shr dec or test mov bsf or inc add jmp ret mov aaa sbb shl and test sub xchg mov jns mov jne mov frstor mov dec adcb std ret test push fwait in jmp test sbb xchg mov fsubr push xchg movsb fdiv into xor inc ret dec rorb mov adc mov jecxz dec sbb push or mov push mov xchg jns or roll xchg test adc xlat jmp push cmp popa rorb test inc sub movsb int inc adc mov call test and call mov mov mov pushl mov movw pushl ret lea jne cmp setg xor lea shl jmp lea je push pushf bsr add shrd clc mov mov add jmp pop or aad push inc mov or add (bad) mov test mov sbbb cmp es aaa fsub pushl fsubs pop jno xchg jne outsl cmp stos mov push popf xchg movsl pop into movsl jne sub loop loop inc and in xchg xchg push inc dec (bad) dec cltd insb sub or movsb shrb adc pop out push leave jl roll inc in out push xor mov data16 or inc and fisttpl and mov mov dec es cmp clc paddd jmp std clc call inc mov inc mov into in sbb pop enter push fldenv insl mov mov inc jl pop leave lods cmc sub jle (bad) xchg jg fwait aas lods int3 jg fwait sbb sbb and push imul mov popa or fadds mov mov arpl dec lahf pop mov pop rolb imul lods push add aaa aad and (bad) es popf js and lods test std xor fidiv add jecxz (bad) cmpb and out push cmp xchg push stos stc push xor pop rolb mov inc xchg lcall ljmp imul xlat adc aam adc xlat pop dec out iret in add insb lret pushf push mov test or fimul imul outsb jmp add push sub mov jns gs (bad) aaa ret xchg xchg pop stos fsubl popf subb sahf push mov pusha (bad) jecxz mov (bad) je scas xlat es arpl scas pusha (bad) sub popa mov mov add fnstenv add pop pop out inc cs lds mov sahf xor or pop mov push daa or insb push nop push sbb je movsb and ljmp fidivl xor ret xchg xchg xchg mov push mov inc subl je sbb jecxz pop push pop mov xchg nop mov imul pusha inc and ret fdivl add sub jae mov or xchg repnz jmp repnz pop jmp jae mov jmp (bad) mov cli add adc ss fisttpl pop xchg cltd nop les jmp cltd mov pop lret jmp pop je sbb xchg stc pop dec inc push dec inc dec xor cs insb add cmp pushf push push lea jb btc xchg shr xadd mov bts shld bsr mov jmp or mov neg setbe shld cmp sub shld sar push movzbw rol bt push aad btr (bad) hlt pop push aas lea pushf mov adc test bsf sar mov test push push pushf test pusha push lea je lea dec mov xor (bad) testb (bad) shr cmp call movb movb pushl popl push pushf movb pushl ret push push mov push mov pushf lea jmp sbb inc and or push scas lret arpl xor movsl (bad) mull incl sub pop push inc lahf jae (bad) and push jecxz push pop push inc aaa jge fiaddl cmp loopne xchg add loope sahf fsubrl (bad) popa arpl pop std adc jns adc mov in cmpsl rcr lret lahf push sbb aas (bad) jge pop lea ja pushf imul cmc cmp add pushf lea jmp xor cmc or mov sar cmc pushf sar add shl adc mov pushl jmp pop sahf addr16 push inc in xchg and ds xchg add loopne in arpl repnz fwait outsl push dec jmp sbb cmpsl insl cwtl pop mov (bad) hlt xchg add mov cmpsb leave mov enter shrl lahf jg pop or jg icebp xchg nop scas xlat dec xlat or dec in lea mov pop scas xchg cmp sub pop rcrl (bad) jg aad std inc es imul sbb add mov sub push xchg insb sub xchg push inc mov dec (bad) push data16 cmpsb js insb dec bound lea adc jbe inc int push push dec jecxz push call xorl iret pop jecxz clc mov insl mov ja mov mov xorl push pop jo pop inc dec or cmp and iret mov mov xchg push sbb roll pop pop (bad) jne rcl (bad) and out std fadd adc dec pop scas ffree sahf push dec push cmp dec cmp nop aaa add pop out jmp adc test xchg idivl pop fucomip scas fstl int3 inc mov scas out sbb jmp orl (bad) dec jo ret or add mov push inc add inc subb in aaa cmpsb sti jno mov pop int adc mov rcrl xor lahf loope mov adc lea ret shr sbb popf js es pop (bad) daa push adc loopne fisub cmp mov decb pop lret aaa scas lea (bad) fsqrt add xor scas icebp pop add add sti push js mov xchg and pushl fsubl mov xchg lods or dec adc sub jecxz push cmp adcb fisub test jne cmp push push or adc lcall int js test inc scas push dec jne dec xor lcall popf xchg push inc ret xchg mov xchg jle jp fwait jae imul xorl or mov pop movsb xchg add sub lods test test cltd lods sub aad push in (bad) mov mov cmc mov loope push cmpsl lcall jbe lret mov mov cmp adc int3 dec jecxz (bad) pop sub into xchg out xchg dec dec jmp inc testb cmpsb or pop (bad) sub leave push test orl jle sub in jp lcall movsl xor pop call addl imul fldl jle mov cmpsb test pop cltd add inc gs outsl fs gs popa outsb fs gs add scas push call jmp shl call cmp jmp cmc sub test stc mov cmp cmp jmp sbb xchg dec xchg push inc adc stos xor scas and movsb lock out xchg xor lock pop push lock jecxz,pn xchg sbb mov xchg out out cmpsb lcall imul mov dec mov mov sti or jp jbe sahf add ret lods scas or int outsl in push shrl mov popa cmp pop outsl jge gs or add mov inc stc pop adc dec mov xchg xor popa addr16 pushf dec mov int fwait mov pop addl out jae push aad lret cmp leave insl and and (bad) and fist mov push (bad) lcall inc ret sbb mov icebp cltd fwait add sbb pop sub outsb mov push stos imul repz inc mov les lods pop add hlt (bad) aad and jnp fldenv ja and pop in outsb aad outsl push fs xchg into stos pop mov cmc notb push add (bad) and out jne mov pop shrb inc push mov mov sub and out notb xor rolb cmp faddl lret jb xchg lea mov bswap sub push movzbw mov adc adc btc push cmc add push dec inc push mov add setb xor push not (bad) icebp mov cmp mov movsbw mov call push stos push mov pushl lea jmp sbb seta pushl lea mov lahf mov lea jge not jmp cmp movsbw mov sar sub (bad) idivb mov pushf bt sub jmp lea jo lea pusha pusha lea call call js xchg popf push inc ljmp mov popf pop push lahf por xor insb lret and inc cmc mov mov or sbb repz (bad) in sbb or enter inc orl cld sbb mov pop inc lods and dec lahf jae sti push xchg ret aas mov and daa mov inc ret xchg in pop cltd scas xor lret pop mov push imul (bad) shr mov decl out fadds adc in rorl test pop setno arpl mov outsl lret les cmp int3 or xchg fdivs push inc std push bound xchg push jno (bad) ja jle inc and in mov jb test cli mov dec insl mov sbb lds (bad) daa sbb lret push divl pop jae inc jp dec mov mov imul cmpsl das sarb inc scas ss sarb sub adc mov adcl pop in popf into mov xor bnd pop into xor jl mov icebp es adc sti mov mov ds outsl das jne adc mov mov dec or push push mov (bad) (bad) (bad) fwait in or sbb jo daa xlat jmp call stc test pushl popl test cmp pushf push jmp daa gs sub ret sti sub stc push insb xchg add mov repnz mov sbb sub sbb xlat scas cmp inc stc mov mov scas push test data16 enter cwtl add mov push jmp (bad) pop scas lds shlb mov (bad) sarb mov insl les adc (bad) jns adc or push scas push dec xor jnp (bad) sub in xlat dec ret mov rcll call das lods push test xchg push aad dec lahf and or subb sub cmpsl ds add sbb sub push xor cs insb add xor and mov into ret sarl and imul inc xor bound test dec arpl and or jmp repz inc mov add nop mov adc mov sbb movsl ds and lea repnz sarl test in and pop repz xchg sti dec mov mov aad sahf in popf sub push sbbb adc dec in cmp xchg push jl adcl cmp xorl pop push lret insb out (bad) lahf jnp jl adcl jle cmp mov rcl adc clc dec and cmp jp in push lods sbb mov mov or mov loop sbb test test push xor jo out out iret jle push pop add mov inc lahf adc into mov jge or add fisttpl ss mov out jae or jmp (bad) sbb loope gs adc cmc mov and sub add pop mov lret test imul sub mov add add jmp push sahf mov add out dec mov mov fnstenv gs js lea dec inc loopne scas inc das idiv mov push mov or test and mov mov mov adc das test fsubrl ret rorl cmp pop lcall cmp fs add call jmp push jmp movb movl pushf movw mov pushl movl push movb pushf push lea jmp movzwl add bsf data16 mull jp clc clc add test jmp pushf movb mov pushf call mov push inc test aas out mov or and lahf loope mov outsl call mov adc pushf out outsb lcall push inc ja ficom iret mov add in sbb sub sub pop sub inc pop rcll inc insl scas ds (bad) inc and xchg cli jge mov daa pop sub movsb xchg shrl xor loopne xor or loopne sbb test in mov mov pop fiadd pop pop xor push lds ss jmp lea jge mov pushf lea jmp xor mov movb repnz call cmp call jmp jmp and push lods imul out adc je fdivl push mov xor sbb imul test pop data16 push cmp jmp lret inc and not sub out shll pop in jmp test jne adcb orl fwait out jp (bad) js cmp jmp ja mov out inc lds pop cli adc pop (bad) xor ds addr16 sbbb fwait out jl vpsrld and and aas xchg xchg push sbb push xchg in fs xor pop xor and jb adc cmp call arpl or add jae pop sub lods dec sbb mov push add fistpl data16 mov out push cmpsb and or call ret int mov stos out lods pop xor add sub pushf call mov inc and push fimul cmp mov push and clc inc mov xchg and xor mov or icebp dec mov and mov add insb iret outsb (bad) aam clc xor sbbl in and mov test (bad) push sbb push addr16 lea ja xor sub rcl sbb xor clc add stc sub add rcl mov xor mov cmc push pushl test repnz call mov mov pusha lea jb xchg pusha jmp pop cwtl clc cmp bswap pusha inc sbb not not movsbw lea push setge mov push mov not jmp shr mov pusha cmc test cmpb call movzbl mov clc add shrd rol or add movzbw mov movb shr cmc test cmp call cmpb pushf jmp in mov jg loop lods add inc mov ficomp out cli pop xchg imul lea in jae cmp push mov pop sub jno shl or gs adc imul test cwtl push xchg ss lea inc aam push test call cwtl scas daa mov int3 in ja dec pop movsb das mov fs popf sbb adc or adc mov pop and dec adcl test jnp fbstp (bad) in jmp adc pop xchg mov xchg test mov out jno cmp out shll popf pop hlt sbb loope inc fcmovu fs pop fistl adc in sbb ret inc sarb and cmpsb dec push or sbb push cmpsb add pushf movsb add into hlt mov pop mov stos fs cli mov outsb adc xor jbe insb fs sub inc mov rcr out data16 les adc cld push jne xor pusha loope pop je inc mov sahf xchg aaa jae scas aaa (bad) clc pop loope jbe in or xor lahf test stc jae sarb push mov pop stos lret mov mov mull adc dec daa fimul lret push scas out mov fbld cmp mov mov jb and inc icebp push inc sbb ror pushf pushf inc pushf xor jmp push dec dec push inc push dec cs insb add mov cmpsl push inc push loopne dec lods sub xor push fdivrp clc in adc and je cld xchg repnz inc cmp adc stos js std inc lds (bad) dec mov lret outsl push pop pop lahf aad into mov cmp jbe fcoml pop iret sahf faddl inc cmc pop cwtl fisttpl mov pusha pop repnz sarb adc shlb imul out aas sbb aaa or stc mov sbb mov movsl xchg in cmp jmp into xor adc pop (bad) jae lods pop sbbl pop push cmpb repnz leave xchg mov mov jmp lea ja not rol sar sub lea dec jmp dec cmpsb ja mov fbld rcll jmp jae div xchg mov jno cwtl xor or push call fldt inc mov stc jnp arpl jo push sbbl outsl mov mov in stos test cs subb pop (bad) clc (bad) mov push mov std pop mov jmp (bad) dec xor roll ret inc lahf xchg rol pop or mov cs and sub mov cmpsb andl test mov (bad) mov xchg cmc insl mov push pop and mov cli push and jmp push lea jne setno setge jmp mov pusha pushl pushf pushl ret mov pushf movl push call pushl mov movb lea call jmp pushl pusha jmp mov movb lea je movzbl movzbw lea push lea call pusha adc call pusha lea call pusha movw mov adc mov pushf jmp and jne mov adc lahf ja inc xchg sub lea lds vminps les (bad) ffree inc dec sub test cli inc mov xchg (bad) lock repnz mov outsl rcrl adc lds mov sbb pop and jne je inc ljmp mov adc mov dec (bad) std push dec push shll lds mov fistpll add adc into add mov sub add sub fistpll pop sbb ficoml mov in sbb jo ljmp pop mov mov sbb ds dec test and push xchg jo int xor inc xchg aad jae lock xchg mov (bad) insl lods shll enter int3 jne dec addr16 push std cmp rorb lods inc int add into sbb test mov inc (bad) jbe test call lea call inc rcl cmp mov bt cmp test cmc repnz push call outsb mov inc sub lods fadds lcall lcall cli lcall test sbb icebp es adc ret lahf aam imul mov cmp loopne (bad) xor pop call icebp and clc cli nop jbe icebp subl rorl cmp mov and (bad) daa jns mov popa mov ret rorb pop repnz (bad) mov mov aam adc test dec jo (bad) ret fldl mov push rcr test aad dec loope sub dec pusha pusha pushf mov call pusha movb lea jne bswap mov cwtl not movb movsbw movsbw movsbl jmp orl fwait adc aam jle das in sbb mov shrl jnp (bad) inc push mov adc inc jno inc flds mov ds pusha (bad) sbb mov push pop mov imulb out adc xchg mov in jnp cmp xchg pop push das scas push mov fwait xor dec pop aas (bad) or sub jp test pop and xor mov xor (bad) sub nop test gs sbb popf in sbb cld adc or or jmp jecxz inc out mov fidivr jae sbb sti dec mov jmp pop shlb and pop mov stos sbb and jecxz les or mov jmp (bad) mov inc or repz mulb repz or dec outsl (bad) push dec test pop shrl sub mov add leave mov jecxz loop mov jbe call fwait popl aaa mov mov add sbb cs or lods cltd hlt push je (bad) mov loope fnstenv mov jmp sbb nop mov dec dec mov xchg or push mov pop icebp lcall mov jle add addl add lods jmp pop add mov jecxz fstpt jge jnp cmp jns inc cld cmpl lahf addr16 pop fcomps xchg push stos jmp jne sti ds adc jno pushf sub frstor mov mov inc jmp push dec ret loopne adcb (bad) dec and pop lahf pop cmp clc pop in popa loopne and in pusha pop (bad) xor loop inc lds xchg xor shl inc or gs push lock (bad) aas les dec scas (bad) ds int push push sub fs cmpl lods add sub jge sarl jnp mov repz daa mov sar xor orl fnop dec or mov mov popl test dec iret lret clc loopne cmp shlb or inc add adc jno sti in loope fldcw pop (bad) inc adc sbb pop (bad) aad outsl lcall test nop sub pop inc jge fiaddl nop pop fs push jo lock or cs ret movsl xor xor sbbl outsl jne sbb je push mov mov mov shl lea call adc sub jne mov sub pop pop ret repnz push pushl lea jne ror jmp mov push lea ja call cmc jmp jmp mov lea jmp shl clc cmp add not pushl pop cwtl lea call in inc cs scas push inc push cltd pop icebp sbb (bad) mov aam insl cmpsl cs sbb test pop les inc jmp lds lahf hlt pop (bad) mov xchg je push add mov lock sbb push add adc cmp fwait popf cs cld push ljmp in mov dec fbstp inc mov mov and nop les lret out xchg xchg es sbb aaa ljmp and xchg or scas shll sar daa (bad) mov pop scas mov xchg jnp popa and (bad) jo adc add pop icebp dec test cltd sub adc mov pop enter test mov adc xor lea movw lea jmp adc gs push inc pop rcrb mov std push mov mov movsl lret dec int3 or dec sub js into jp lea mov jmp add daa mov ds shrl inc sub dec adc lods add and or icebp dec jnp iret cmp dec sahf addb in out xchg (bad) fcomp js jmp add notl rcll cmc push fstl push popf sub xchg test inc (bad) in jo fsubl push lahf jnp adc dec shll add les lahf das popa add mov icebp (bad) pop mov das cmp leave aaa jmp js jp xchg push and adc adc sbb inc xor or incl mov ror sbb add sbb sub jns test mov jo call add sti aas not pop cltd sub fcoms add (bad) loop sbb mov (bad) jbe insl insl add sbb ffreep (bad) stos add dec or jmp loope add push pop mov cmp xchg xor inc pop (bad) pop jbe or daa push int not mov bswap pop mov call lea mov pushf pushl movw mov jmp add ret push stos push inc or loope mov cmp popa mov jnp adc add shl mov cmc xchg sbb mov int xchg enter int3 pop mov stc iret stc aas cmp mov fyl2xp1 sbb xchg and into jle ds and es hlt push mov gs iret jl shr cmp cmp aad push int3 sbb cmc fisttpl xor jmp movd fldt jns arpl (bad) mov mov mov test xchg fimull lock aad test insl enter or cltd repnz add mov inc sbb or outsb les inc mov (bad) je fsubr adc pop bound fsubrs (bad) xor xor xchg lock int3 mov enter add jnp push cmc scas add xchg sub lds pop dec xor loopne xchg add xchg aaa mov and adc jo clc clc enter mov gs mov (bad) xor aas popf popa fs cmpb jns cld addl pop ret dec dec inc cltd adc fwait cwtl dec push adc mov and in lods inc inc adc and or fsubs sub es (bad) xchg push cmp or jge fmull enter inc inc sub cmp mov cmpsl roll and inc insl mov ret aam insl data16 lods clc pop in (bad) aam adc jnp sub cmpsl movsl in adc aam shl ret sub rclb insb add jp pop stos fisub andl xor pushf test out inc sbb cli and repnz negb notb adc imul movsl sti pop cmc out add pushf add movsb sub dec mov xchg nop aad jns sbb (bad) and fs call shrd rol cmp stc add cmc pop adc lahf aam lea pop cmc cmp jo sbb push lea push pushf lea jmp fdivs pop xorl orl cld mov fdivs xchg lods adc push inc jmp inc loopne or and dec lret test add mov dec icebp mov or (bad) (bad) in push out movsl lea mov sub push das mov adc dec call outsb xchg icebp sub pop ljmp mov movsb adc pcmpgtb inc testl mov jl mov lock mov push mov lahf lods (bad) lcall fnsave pop mov loop insb xchg xor lea call pusha jmp sbb (bad) pop mov inc pop mov jle dec mov xor test sub stos or mov lret mov dec in xor and outsb (bad) in cld xchg push push into in jb aas jg inc lock or jnp (bad) fld out push lahf popf pushw shr jg in dec pop leave mov hlt mov jmp adc rcll push push (bad) sbb hlt adc js arpl in add (bad) imul jno fwait pusha adc lea call jmp stc mov pusha call inc setno neg pushf pusha ror call bt clc test xchg cmp mov call bsf bts rol mov jmp call shld aam call movw movw mov call pushf popl jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call mov pushf jmp push pushf pushf push mov pushl ret cmp bt sub push push jmp xchg cld pop mov pushf cld lea call jmp jmp cmp sub call push push pusha pusha call push rol mov cmp cmc mov pushl call mov pushl mov mov pushf mov pushf lea jmp pushf pushf popl pushf jmp call movsbw bswap mov lea mov js pusha lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp mov mov pushf mov pusha mov pushf pushf jmp daa mov dec mov pusha jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call add pusha movb pushf lea jmp call mov movw pushf lea jmp pusha pusha lea movl jmp push xchg lea mov mov jmp bsr inc mov test add pusha pushf pusha lea jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp sub jmp mov pushf jmp push call jmp or mov push pusha lea je call call adc push jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret mov push mov pushf lea jmp shrd inc mov jmp bt xor push jmp jmp jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pusha sub jmp ror mov movsbw pushf mov movb pushf mov movb pushf call jmp pusha pushf pusha pushf popl call push lea jp pushf pushf pushf pusha jmp shld mov movzbl mov bt stc pushf call push mov jmp pusha mov call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pushf pushl pusha mov jmp call push push movb movb mov pushl mov push jmp mov pushl mov push pushf mov push pusha lea jmp pusha mov movb mov mov pushf lea jmp mov push push mov movb lea jmp bts shr pusha mov cmc bt sub mov test clc call call mov pusha jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp pushl popl pushf pusha push pushf lea jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp pusha pusha pushl popl push movw movw lea jmp movw jmp btc mov call mov stc call call push push mov push pushf lea jmp or movl stc xor lea jae pushf inc call movw mov pushl mov pushl lea jmp pushf lea jnp push pusha pushl push pushl ret bt shl sub mov add shr add mov cmc call call call call mov jmp push pusha mov pushl mov pusha mov jmp jmp call pushl popl pushf pushf lea jmp mov jmp xchg jmp cmp neg neg add sets xor rcr add rol dec add jmp add clc clc pusha shrd pushl mov call mov call mov movb push pushl pusha lea jmp movb call movb mov pusha pushl mov pushf call cmc movb rol push call add pushf mov mov pushl lea jmp jmp mov call mov pushf pushf push lea jmp mov push pushl mov pusha mov push jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call call push pushf mov pusha pushf mov jmp pushf popl pushf pushl popl pushl lea jmp inc pushf clc bt add jmp mov call pushf pushl call mov call bsr neg adc notl dec mov cmc call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call pushf mov call mov bt or movb lea je stc push pusha pusha xor pushf jmp sar add xor bswap rol movzbw mov call divl push mov push mov push jmp mov push mov lea jmp jmp movb mov pusha push lea jmp lea jns pushf mov call clc pushf clc add jmp cmp sub call mov not mov pusha mov jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp add cmp cmc std pushl popf push lea jmp jne push mov pushf lea jnp pusha movb mov mov jmp pusha mov jmp pushf pushf inc pusha decl movw pushf pushl jmp mov call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp mov call movw mov pushf pushf pushf popl jmp call mov pushl lea jmp bswap mov neg adc sbb mov pusha shr dec call pushf pushf mov pushf lea jmp lea jne stc push stc sub pushf call call lea pushf movb pushl push mov pushl mov lea jmp mov pushf jmp jmp push pushl mov pushl pushl pusha pushl ret cmc cmp shr jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp shl pusha mov push mov mov call jmp mov mov ror (bad) repnz call add add call jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov pusha call mov push pushl ret call push mov pusha mov push jmp cmp sub call pushf mov movb pushl pushf lea jmp pushf neg cmc call mov call pusha push movl call add pusha pushf mov movl call movl jmp cmc cmp add call push push inc jmp jmp mov push push jmp push push push pusha mov movb pusha lea jmp mov pushf jmp mov push call movl jmp mov movb push lea jmp pusha mov call pushl mov pushf mov mov jmp push mov call mov inc clc pushf neg call pushf popl jmp mov pushf mov mov jmp call movb pusha jmp xor neg movzbl cmc call pushf mov pusha pusha mov lea jmp ror aad xadd ror mov adc bts jmp movb jmp stc cmp mov sub jmp pusha push pushf mov mov push call call mov pushf pushl pusha pushl lea jmp jmp jmp pushl popl mov pushf pushf lea jmp mov jmp pushf popl pusha mov pushl popl push push push pushf lea jmp call pushf jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushl pushl jmp mov pushf lea jmp movb mov jmp mov call call mov call mov pushf lea jmp mov movb push push pushf lea jmp push mov pushf push push mov call movzbw mov cmc (bad) icebp add loope dec add mov or lds lea jno mov pushf lea jmp push push movb pushf mov lea ja pushf mov pushf push jmp inc neg mov cmp clc add push pushf pusha jmp pushf movb mov movb pushl lea jmp pushl popl push pusha push movw lea jmp call lea jbe mov pushf lea jmp pushf mov push lea jmp out mov in mov cwtl xor pushl dec mov out mov lock pop ss hlt cmp mov mov inc mov lock mov incl lcall dec mov push sub call mov out sub decl mov mov mov lea incl inc mov lock out mov push cs stos aaa mov (bad) cmp lcall mov pop xor (bad) mov xor push cs mov inc mov nop dec mov fmull decl aas mov inc xor mov in mov dec inc mov hlt cmp mov mov dec mov nop dec mov sti xor mov jmp dec mov sub dec mov dec ss lock mov lock shrb mov je mov fmull ljmp mov xor ljmp sub mov lea lcall mov stos inc mov dec ss mov aaa mov cwtl xor jmp inc mov je mov shrb mov (bad) cmp incl inc mov incl ljmp inc mov stos dec mov lea (bad) fmull incl sub incl cmp mov out sub (bad) sti xor mov xor mov xchg dec mov shrb mov lock push sub (bad) incl lcall dec mov dec ss lock mov pop ss xchg dec mov pop inc mov out mov dec inc mov push cs pop inc mov xor mov sub sub ljmp sub pushl das mov xchg mov xor mov pop inc mov pop xor (bad) incl ljmp inc mov xchg dec mov lock popa sub ljmp mov out mov jmp xor decl dec mov je mov mov sub decl dec mov cmovnp call cs add jmp inc mov mov mov popf sub pushl xor pushl sub mov popa sub ljmp mov push cs sub das mov xchg dec mov sub mov dec ds cmovnp ljmp cmp ljmp aas mov dec ss stos dec mov sub cmp decl mov mov dec mov out mov xchg dec mov popa sub (bad) mov xor incl mov imul sub ss xor mov lock mov add sub decl decl sub jmp aas mov shrb mov imul stos inc mov out sub jmp inc mov in mov pop xor (bad) jmp sub mov mov xor lcall mov incl decl mov popa sub jmp inc mov fmull (bad) mov ds mov ds push cs (bad) mov lock mov push dec mov push sub pushl cmp call sub push cs incl ljmp xor call mov fmull push cs xor incl sub jmp inc mov je mov add ljmp aas mov pop inc mov out mov mov cmp decl je add mov push mov mov pushf mov call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp pushf jmp movw movb movl pusha jmp pushf push pushl jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp pusha mov pushl jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf mov pushl pushf popl pusha jmp pushf stc sub call mov pushf lea jmp btc btr cltd mov btc pop inc jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pushf pusha mov movl push movw lea jmp call jmp pushf lea jmp push jmp ror movb jmp pusha mov call call pusha mov call push pushl popl movb pushf movl push lea jmp inc clc shr mov sbb call call mov push movb push lea jmp push call mov pushf mov lea jmp jmp pushf mov jmp pushl popl movw lea jmp jmp mov cld call lea jge push mov mov jmp clc test btr rdtsc call push movsbw pop lea push jmp cmp sub pushl cmp push cmc sub call add movw pushf pushf pushf popl pushf movw call call mov push push lea jmp and lea jno push movb pushf mov call sub stc sub jo push mov shr pusha call call pushf xchg jmp dec btc or mov push add mov clc add jmp jmp call mov pusha jmp pushf pusha mov mov pushf pushf lea jmp mov pushf pusha pushf pushf popl movb jmp call jmp pushl push movw pushl popl mov movb lea jmp pushf popl call call jmp mov call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call push mov push mov lea jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp call inc push push mov pushf lea jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov jmp clc lea jno add pusha jmp lea jo push pushf mov jmp movb jmp mov mov push pushl movb lea jmp mov mov push pushf lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov pushf lea jmp push mov mov mov pushf mov pushf mov call movl pushl popl pusha pushf push lea jmp stc call sub cmc add jmp cmp mov cmp add stc clc stc movl mov movb sub call lea jne push push mov pushl push pushf lea jmp call pushl popl push pushf lea jmp lea jne or jmp test stc bt sub call push mov pushf pushl mov pushf pushf movb lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp bt xor mov push bt cmp bt sub jmp bt bswap lea jae stc xor bt pushf sub jmp pushl popl push pushl lea jmp jmp pushf popl push jmp jmp btr daa mov sub shr rcl mov call bswap add lea push pusha cmp jmp push movb call call pusha mov mov call push pushf pusha jmp btr dec shl bt mov stc test add call push pushf popl pusha mov mov pushl popl push lea jmp call mov pushl call call test pushf cmc jmp inc dec movsbw lea xor movzbl stc bt pusha call stc bt sub jmp jmp stc sub cmp jmp mov call movsbw mov pusha pushf mov jmp pushf mov mov mov pusha mov call rol movzbl push add pusha pushl inc call jmp call movl mov call pushf pushl popl pusha pushf push lea jmp call mov call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call mov pusha mov jmp jmp push mov pushf mov call mov pusha push lea jmp cmc jl daa not notl aas mov push stc test sub jmp clc pushf ror push mov lea mov call call pusha pushl mov jmp pusha clc mov bt clc clc push add movb call bt add mov push pushl movl mov push pushf mov lea jmp call movw pusha pushl popl push movw lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf push pushl popl pushf mov movb lea jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call push mov pushf pushl mov mov pusha pushf mov mov push jmp mov mov pusha pushf pushl ret bswap call or call mov pusha movb mov pushf pushf mov call bt ror bt clc cmp sub cmp test cmc mov bt sub jmp shrd not mov stc bt stc add pushf mov jmp movl mov jp pushf mov pusha jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call cmc pushl popl test call mov mov pushf mov pushl push pushl lea jmp pushf jmp jmp pusha mov push mov lea jmp pushf mov pusha lea jmp not clc bt not test pusha cmp and pushf movl jmp lea jne call cmc cmc add call call ror clc clc call mov push call push jmp add push push pushf call jmp test movzbl call mov pushf lea jmp movw pusha mov pushl movw movb lea jmp test xor test sub movb mov pushl movb lea jmp pusha xchg call pusha mov pusha mov pushl mov pushf mov movw push lea jmp pusha aam add mov pusha call call jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov push push movb lea jmp jmp push mov pushf call cmc xor stc stc mov bt test stc add pusha jmp xor cmp xor call cmp stc add pusha jmp jmp sub call push pushf mov pushf pushl ret call pushl add pushf lea jo push pushf mov mov lea jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp mov push movb lea jmp mov jmp mov pushf lea jns push jmp mov pushf pushf mov pushf pushf mov lea jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp ror add pusha mov mov call bt xor movl jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp pushf pushf mov pushf push push lea jmp pushl lea jge push mov call mov pusha push push pushf mov call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp pushf pusha movw mov push mov jmp pushf mov jmp pushf call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp clc add push pushf clc neg call mov pusha pushf movw pushf lea jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pushf lea jo popl pushf pusha movw lea jmp pushf jmp jmp neg shrd movzbl shrd sub jmp dec stc rcr ror btr lea jmp shld mov jmp pushf popl call movzbl lahf lahf mov call call pushf jmp pushf jmp shl bt shr pushf pushf bt call pushf mov pusha jmp add call mov jmp movb call pushf mov jmp jmp mov mov movb pushf jmp cmp shr pushf movb mov push pushf popl call not pusha cmp not push cmc sub jmp pushf pushl popl movl pushf movw pushl lea jmp pushl popl pushf push lea jmp add add add and adc dec add add add imul and add mov 