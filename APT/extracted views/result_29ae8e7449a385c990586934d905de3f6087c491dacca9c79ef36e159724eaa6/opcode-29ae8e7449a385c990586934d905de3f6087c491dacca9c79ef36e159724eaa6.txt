xchg mov jb jb jb mov mov jb outsb mov jb mov mov jb mov mov jb xchg mov jb fwait mov jb leave mov jb mov mov jb xchg mov jb inc mov jb add jb jne jb xchg mov jb add jb add jb insb mov jb std mov jb insl movsb jb xchg mov jb out mov jb frstor jb lahf mov add add add iret dec add add add dec add add outsb outsl cmc mov lret ds aam add add add rcr mov add mov add add sub add add call dec add call add add add jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add pop inc inc movsl pop stos neg push pop movl add add add and xor jb push arpl add add add dec xor sbb aam inc xchg jne push not lret sbb sbbl scas (bad) pop dec cmp xor or stos add xchg adc add inc add add or push gs je popa imul push imul sbb add and (bad) (bad) jmp add gs outsl add ss add add add es add add add add add push add gs add pop stos pop add or add add add or dec jbe jb outsl jb gs add push adc xchg adc push or incl sub add pop push add outsb imul add or dec arpl jo imul jae lods or adc add add add or push jb jne insb gs outsb je or call das or add jbe add incl and add or add outsl ja outsb addr16 add add add adc push add add or inc popa insl jo fs add repz add add add add add imul sysret or into add or incl sub add adc add arpl gs add pop add jae je add push mov add add add add push add jbe jb add add pop or push jne popa jb jne add or incl sub pop add imul or inc jns outsl outsb gs arpl add out adc incl sbb add adc add arpl insl add add push stos add push (bad) or or incl and add adc add jne push data16 add add add mov gs add incl and add adc insl outsl jb insb imul add push xchg adc adc or add add or push gs fs arpl xor add jne insl popa bound add mov icebp adc push add add add add or dec jb imul add add daa or add add add add add dec outsl add add sbb sti or popa outsb outsl push adc add add add add or push push gs jb add outsl popa insl gs add scas add add add add add or inc jb jae imul add push add outsl je xor movsl adc loopne adc add add add add push add gs add add add gs add mov adc add incl add add push add gs xor add gs xor ficoml ss adc add incl add add add gs xor add push add gs xor add loopne push adc add add add add bound xor add push add gs xor add mov ds add add add push add ja jae add add add imul je add out adc add pop add add add add popa outsb je popa js popa insb xor sbb stos or push (bad) add or inc js insb outsl imul in jl repz (bad) (bad) add add add or inc outsl outsl insb arpl arpl add add or or add push daa adc add add add push add add cmp pop add add xor add js inc add add add add mov inc add add add add add add xor add add add xor pop add add add add add xor pop add add xor pop add add add add inc add xor add or or add sbb add sti testb (bad) (bad) decl add add add add add jmp sbb add inc add add add addl add add add jne bound jns ja dec gs popa popa jb xor add xor jb push arpl add add add add add (bad) (bad) incl add add inc add dec add add add push jl inc add add add cmp add jl inc add add add add sbbb add add add mov push sbb faddl dec add add add inc add cmp pop add add loopne inc add (bad) (bad) incl add add add add imul (bad) (bad) (bad) incl add add inc add adc adc xor inc add add add add add int3 dec add (bad) (bad) incl add add add add add add xchg push mov add add add mov add add sbb add add mov add add sbb add mov push sbb aam dec add add add add inc add pop add add loopne inc add (bad) (bad) incl add add add add sbb sub inc add (bad) (bad) incl add add sbb inc sbb sub inc add adc xor inc add add add add add dec add (bad) (bad) incl add add add lock add add add xchg push hlt sbb add add dec cmp add hlt sbb add add cld sbb add add clc sbb add add cld sbb add mov push sbb fdivr dec add add add imul cmp inc add pop add add loopne inc add (bad) (bad) incl add add add add inc add test lock (bad) (bad) (bad) incl add add sbb jl inc add adc adc xor inc add add mov cmp aam inc xchg jne push not lret add adc add insl add add add add add add add imul push movsb lods push dec mov push ret and add add add add lea add inc add add push sbb sub leave outsb inc cmpsl sbb lahf add add lods add add add add add add add add icebp jo int jecxz inc xchg sub test add add add test add add add lods cmp add hlt add add add add jmp add or dec add adc add dec add pop inc add add add add add int3 dec add (bad) (bad) incl add add sub dec add add lods pop inc add add test inc add add add pop inc add add add pop inc add add add pop inc add add add pop inc add add and loopne dec add add add incl add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add das inc add adc add add and add imul push add add or add add add add imul pop add add or add add add fsubs add xor or add inc add add add add add add imul sbb add inc add add add cwtl xor or add test imul or add inc add je add mov inc add add add and imul or add inc add add add int3 xor add add dec es add test fdivl inc add add add add jl add int3 xor or add push test in inc add add add add addb add xor adc add test inc add test lock adc add inc add add inc add add add test or inc add add add or add add add add inc add imul sbb add inc add mov add mov inc add add add inc add xor push add add adc nop add add add add test sub inc add add add add xchg add add xor or add and inc add test cmp inc add add add adc cwtl add add xor adc add cmp inc add test inc xor adc add inc add add inc add add add add add test dec xor add add add xor add add add inc add xor add add inc add add inc add add add inc add xor add add inc add add xor add add shrb add xor add add inc add add inc add add add sub call xor adc add inc add add xor adc add nop sub clc test xchg xor adc add inc add add inc add add add add add sub or inc add add add xor adc add sub inc add test int3 xor adc add inc add add inc add add add test aam inc add add add pop add add add xor (bad) (bad) (bad) incl add add add add sub sub inc add (bad) (bad) decl inc add sub add sub add sub add sub add sub add sub add sub inc add sub inc add sub inc add add inc add inc add sub add in inc add inc add adc adc xor inc add inc add inc add adc adc xor inc add inc add inc add adc adc xor inc add add inc add adc adc xor inc add inc add adc adc xor inc add inc add adc adc xor inc add and xor inc add adc adc xor inc add and xor inc add adc adc xor inc add inc add inc add adc adc xor inc add add inc add adc adc xor inc add add inc add adc adc xor inc add inc add adc adc xor inc add and xor inc add adc adc xor inc add and xor inc add adc adc xor inc add inc add inc add adc adc xor inc add inc add inc add adc adc xor inc add add inc add adc adc xor inc add inc add adc adc xor inc add inc add adc adc xor inc add and xor inc add adc adc xor inc add inc add inc add adc adc xor inc add inc add inc add adc adc xor inc add add inc add adc adc xor inc add add inc add adc adc xor inc add inc add adc adc xor inc add sub inc add incl add repz and (bad) incl add out or add incl add fldenv and (bad) incl add int3 mov and (bad) incl add mov insb and (bad) incl add mov or add incl add movsl mov and (bad) incl add cwtl mov and (bad) incl add mov and (bad) incl add jle or add incl add jno or add add add imul add jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add add add dec add (bad) incl add add dec add ja xchg mov pop shrb or add add add in sub add xor inc add add add add add add add add add inc add (bad) (bad) (bad) clc xor add inc das inc add add add add addl add inc add (bad) (bad) pushl cmp add push das inc add add add incl add add add add (bad) (bad) pushl cmp add pop das inc add add add nop push (bad) incl add add add inc add (bad) (bad) pushl cmp add push add add xchg push (bad) incl add add add xor jb push arpl add add push gs je popa imul popa bound add add bound outsl outsb insl outsb je add add jae imul in sbb sbbl scas (bad) pop dec mov inc fildl fs xchg test push push mov cmp aam inc xchg jne push not lret push mov mov inc cltd xchg mov dec lods xor or stos add xchg pop popa imul cmp push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add int3 das inc add add add add add add add das inc add xor or dec add imul lods xor or stos add xchg dec jne imul add iretw adc pusha rcll outsb je popa js popa insb xor add cli dec lods xor or stos add xchg push push gs jb add fimull xor or stos add xchg dec gs jae add pop dec lods xor or stos add xchg dec outsb outsl ja outsb addr16 add sub xor or stos add xchg push imul push jb jne insb gs outsb je push outsl jne push data16 or xor or stos add xchg dec outsl add add inc jb jae imul dec jbe jb outsl jb gs dec jb imul add inc popa insl jo fs popa jb add dec popa bound xor add gs xor bound add dec popa bound xor add lods xor or stos add xchg inc jae push repnz lods xor or stos add xchg push outsb arpl gs add add dec lods xor or stos add xchg push outsb insl outsl jb insb imul lods xor or stos add xchg inc popa jb arpl add jae fs arpl xor cmp xor or stos add xchg inc outsl jb or or add add or add or xor add add xor add or add imul gs xor add add or add dec gs jo outsl insl jo arpl xor sub inc add add or dec add or je jmp push mov call jmp add add add add gs xor add gs insb popa jae push outsl jb add add insb xor js inc add add sbb dec add or je jmp push mov call jmp add add imul cs add add or add inc gs outsl jb inc add add (bad) xor aam inc add add and dec add or je jmp push mov call jmp add add add add gs push jb outsb je jb arpl jae jb add add xor sbb inc add add xor dec add or je jmp push mov call jmp add add add add jbe push imul insb xor push add cmp dec add or je jmp push mov call jmp add add add add imul or add inc outsb fs popa add add add dec hlt dec add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add adc add push gs imul imul clc xor or inc add add push hlt dec add or je jmp push mov call jmp add add add push outsb fs insb addr16 je insl dec gs popa addr16 add add inc add add pusha hlt dec add or je jmp push mov call jmp add add add add je je arpl bound arpl lods xor movsb xor add add insb hlt dec add or je jmp push mov call jmp add add add jae gs insb xor cs insb add add add addr16 jne jb push outsl imul inc add xor add add js dec add or je jmp push mov call jmp add add add add jbe jbe xor add add add add je gs cmp adc add push add insl add add add add add add add add add add test dec add or je jmp push mov call jmp add add add add jne inc outsl outsb je popa insl imul add inc add add nop hlt dec add or je jmp push mov call jmp add add int3 add add add add add add add add add out add add add add add add add add add add add push add jb imul imul add imul push add jae je add dec add push add je add add push add add jb add add add add add add mov push add add outsb add jae outsl add je add popa add add add add add popa add je imul insl add add popa add add add add add outsl add add je add add add add dec add jb insl add outsb add add xor add add or add dec add jb imul add add push add add popa add push add outsb add insl add add or add inc add outsl add imul add adc add dec add jb jb add add add add add add add outsb add add imul imul add adc add inc add jp jne outsl add add add add add add add add popa add add popa add add add add add add popa add jae imul add add add add add jae bound add je xor add push add add outsl add outsb add jbe imul add add add add add add outsb add jb outsl add add xor add or add dec add jns popa add popa add add add add inc add outsb add imul je jae xor add add add add add add adc add push add insl add imul xor add add adc add push add jb je popa add add jae jae add add or add inc add add jb add adc add dec add data16 jae je add jae add adc add push add jbe popa add outsb add push add add inc add jb add add jae insb add add add adc add dec add outsl add add outsl add jae add sbb add inc add insb add arpl add je popa add add add add adc add push add bound imul jb outsl add jae add add adc add dec add outsb add insb add push add add add add add add add add jae cmp add push add add jb bound imul xor add adc add push add outsb add add add add add add add add insl add imul add add or add inc add add bound jae add add adc add dec add jbe popa add add popa add xor add add adc add push add jb outsb add jae push add add add add add outsb add insl add insb add arpl imul add adc add dec add add add popa add outsb add add add add add add jae push add cmp add push add add arpl je bound outsb add add add add add jb jb popa add add add add add add push add add jns xor add add adc add dec add jbe add imul add add push add add popa add add popa add add add add add add data16 jne outsb add add outsb add add add add add je popa add je add xor add add push add add je je push add add add add popa add imul add add add add cmp push add xor and push add xor add add or inc add inc add add add lods xor or stos add xchg sbb add inc add popa add je popa add outsl add je popa add add add add lods xor or stos add xchg adc add push add insb add add add xor add adc add dec add jb outsl add add add add add add add insb add insl add jo jb outsl add data16 add sbb add push add insb add add add bound insb add cmp add add or inc add inc ss dec dec add add pop pop jbe popa inc jb gs bound add add jbe popa dec gs add add jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jb gs je add add pop pop jbe popa push popa jb jne add jbe popa dec jb jae insb je push bound add add orl lods fcoms stc fstps jbe popa inc outsb add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa inc jb gs je dec imul pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa push je inc insl jo pop pop jbe popa inc jb gs popa jb add add jbe popa dec bound popa jb pop pop jbe popa dec bound gs fs data16 add sub and sub inc lods cmp aaa mov inc adc int3 or daa (bad) xchg (bad) imul push movsb lods push dec mov push ret and add orl gs and sub inc dec push sbb xchg fsub inc scas jb es lret or mov mov push repnz sbb sub leave outsb inc cmpsl sbb lahf daa shrb dec movsl in stos (bad) pop cmp xchg sbb jmp push cmp sub mov inc (bad) cmpsl dec ja fstpt icebp jo int jecxz inc xchg sub test xor add jo int jecxz inc xchg sub test jbe es jmp push cmp sub dec lods xor or stos add xchg dec add add add add add jae imul or inc jb bound imul add (bad) (bad) (bad) jmp add imul xor push adc add add add add inc add incl int3 xor add sub leave outsb inc cmpsl sbb lahf inc dec push sbb xchg fsub inc scas jb cmp xor or stos add xchg push add add add add inc insl bound outsl outsb insl outsb je or gs imul add inc add (bad) (bad) (bad) jmp add imul les add add jecxz add test add inc add incl add dec xor add jno movsb lods push dec mov push ret and sub and sub inc lods cmp aaa cmp xor or stos add xchg scas mov add add dec popa bound or jb outsl outsl xor sbb add and or insb je add or add jbe or add add add add add add add sbb add add inc mov add mov ret cmp sti adc push int jno jg lret in pop pushw xor add inc sub rolb push movsb enter push jge ficompl sbb sahf or mov dec cmc push ret (bad) pop or ror movsb dec fs test fldt add jle inc pop pop fiaddl pop mov out mov cmp lods xor inc lcall lret jno fsubrl lods test cmp push lock inc ja cmp fild dec sbb add and xchg sbb mov insb sub cmp call cmp xor into pop mov out scas test hlt setb shll cmp xor push push or push faddl mov xor sub (bad) out push fldt add mov lcall cmpsb push sbb out movsl mov xchg sbb push push add cmpsb stos push or mov in in (bad) jecxz icebp sub notb dec in arpl into pop pop sub push mov test jl imul dec push push ds push xorl pop int3 (bad) inc mov popa push push stos pushf push adc mov pop xchg push mov dec cltd jmp pop push add lret adc mov add dec cwtl jg dec sub and add js push imul ret jae icebp pushf testl xchg daa xor scas jne jno mov dec popf mov xor jmp roll repz inc xchg jmp stc jns add and xchg mov int lea mov sub aad push stos arpl fdivr repnz add (bad) insl dec fldenv xchg ret mov and rcr sub mov in sub sbb data16 add shll adc or mov xor dec jg ror out loop pop int out lahf mov stos sbb fmull es xchg iret outsl xor hlt pop stc inc imul (bad) stos jne in mov scas inc cld pop in fimull mov test cmp cmp inc shrb mov jle dec (bad) xchg push xor jecxz out cld push adc or xchg pop in loopne das inc pop out scas push sbb mov xor pop (bad) jge out je aaa test icebp ficoml iret imul test (bad) ss add sub jl iret jnp xor pop clc pop push jbe xor mov fstps into rolb orb pop adc outsl lock push mov xor sub lcall mov popa sub jne inc shlb mov je pop inc dec pop aaa push sub lods push dec jnp test imul xchg movntq inc push mov loopne pop loope pop and mov (bad) push and cmp (bad) xor aam inc adc mov cmp or ds push cmp xor mov insl in bound fldt pop jno out cmpsl xchg (bad) popa pop aaa cmpsb mov xchg popf test push xor sub push xor jb mov loope or cld mov or dec and pop add inc popa jmp loope daa add mov mov pop sbb mov xchg das test xchg into fistp mov jnp lods mov cli or pop sub imul popl mov add sub jbe adc cmc jae and ss and leave mov in cmpsl push addr16 cmp out fdivrl and jmp int3 lods or xchg stos pop cmpsb mov pop cmp ja sahf xchg pop jg jnp enter xchg ljmp or sahf stc inc ret scas int (bad) mov sub in mov scas leave cltd fidivrl sbbb pop fidivr pop adc mov xchg sbb adc ret push into jmp mov adc inc (bad) mov (bad) mov cmpsl sahf push lds jl (bad) sub xchg adc cmp pop push into push jge hlt sbb dec (bad) inc xchg xchg add mov mov cmpsb dec push ret push mov test aas jmp mov iret ds or dec pop mov fdivp test fnstcw in leave push mov push mov mov loop cmpb push xor or xor push arpl test mov inc sti pop in leave jl out pusha js jae arpl pop sub inc mov imul pop repz sti fstpl mov int3 fadd push test pop lea dec adc mov aaa jmp mov mov sbb sbb or jnp sarl mov das imul inc shr add ret jp pop lock mov es xor sbb pop inc movsl adc and in inc xor push jb ret inc mov dec daa lea testb add add cmp lret mov movsl mov insb (bad) xchg lods lahf rorl es (bad) mov fcoml stc addl je sub xchg in ret push push push or test xchg sti das jp jg dec xchg arpl dec in fisttpl fstpt or jle divb hlt das scas and call xchg mov dec mov pop mov xor sub push jl jecxz mov cmp xor loop bound mov sbb xchg fisubl inc shrb mov mov cwtl jne push cs mov add cmpsl sbb into mov rorb les mov mov add mov in movsb xor and (bad) imul lahf sbb mov mov das xchg notl mov jge imul lock and push cmc adc mov lahf mov xor push mov sti rorl fs pop inc lods pop repnz out push inc cmp jno pop mov jo pop popf dec pop mov xchg fcompl ja mov pop sahf push and push repz cmc adc test jmp out aad jge inc loopne cs in push rcrb and dec pop add imul jle jecxz sbbl pop pop (bad) (bad) sub test adc mov push push jp mov jne inc ret inc mov gs xlat mov (bad) mov jnp in and je mov test jg mov outsb hlt pop int add sar cs push mov icebp mov sub cmc popf lret jmp jns daa loop push pop push out sti xchg sub sbb cld push int3 test push add out pop in cmp cmpsb bound hlt xchg push jns inc jae,pn xchg cwtl cmpsb dec in je xor or mov sub sbb jns fimull sahf cmpsb mov add mov add out mov subl cmpsl and adc dec xchg aas fs xlat jge movsb cmp jecxz push in dec inc adc pushf mov (bad) ss jl adc in and jo mov lods mov or test lock and (bad) mov jge adc shrb rcll push aaa add jp inc cmp or popf jne in push push call xor lcall and dec push mov std push stc addl arpl mov aad push dec push or cmpsl mov jg mov in fimull jb cmp mov or add insl mov lahf popa fwait loopne repz scas and out and enter jnp (bad) loope add cmp push dec aaa fwait pop loop (bad) lret push aaa sub popa sbb js xchg pusha mov inc sub xlat push and rcll cmpsb cs movsl insb outsl lods inc clc adc mov jo pusha sub clc cld mov mov test rcrb pmulhuw xlat dec mov and adc dec adc adc cs push not in jge ror mov lret mov enter or into iret and outsb xor pop ret icebp cwtl mov push jecxz push cmp iret jnp inc sbb jmp xchg subl push push jns icebp pop lret add mov orl das sbb and (bad) add pop mov sbb fcomps add and js jecxz pop das xchg outsb push pop add dec aaa repz daa or fdivs sarb leave jle mov cld repz jbe xchg jne dec insb add dec mov fs sub sub mov sbb mov mov push or xor xchg push test cwtl sbb cmp ror pushf xchg cmpsb push xor mov aaa dec add xchg inc and sbb inc xor and ret repnz mov sub ljmp sahf stos cmp fidivrl and mov sub pop lock add outsl adc (bad) arpl rcr mov aaa loop ret mov and ds test jmp int xchg or fcoml cld or push fsubrs pop outsl push in movsb mov adc mov pop (bad) hlt orl call in xchg mov push lods push lea dec jg cli and cmp sahf mov repnz jg popf shrl jns lds or jno call or scas and lds jecxz cmpsb or (bad) lods jbe xchg jmp das cmc clc icebp lret out or dec and fwait xor and or add sub xor ja add and xchg push and push sbb mov int cmpsl nop daa and lds jp imul out push and fcompl sub xor push test aas (bad) mov xor lds xor mov pop cmp mov inc cmp les push add (bad) mov call mov xchg dec aad and (bad) cmp pop popa repnz enter adc inc imul outsb add inc cmp arpl repnz xor and (bad) movsl mov or jl sti push mov ret jg lahf pop int push notb xchg pusha fiadd lock loop movsl pop jne (bad) cmc in pop adc xchg movsb or (bad) mov lahf pusha fisttpl pop xchg add fs mov cltd mov (bad) cmp sub mov je adc mov xor (bad) adc push gs jno jmp sbb xor adc sbb cmp pop mov cmp stos ds and aad and mov sub out mov inc cmc adc and ja loop pop cs outsb push pop and mov mov daa or xchg xor sbb pop fdiv push (bad) sbb dec push sbb orb or dec loope mov push xor xchg push xor pop (bad) mov pop pushf pop (bad) stc out pop fiadd xor dec jecxz xor aad lret aaa ss enter loop or dec pop aas mov fldcw lea loopne in addr16 js les xchg inc dec inc outsl (bad) xlat inc mov je inc jb addr16 adc lahf movsb push ljmp adc fcmovnbe imul or mov nop cwtl iret lods into mov lock (bad) out cmp cmp (bad) push sbb andl std or cmp addb ret mov cmp jle sbb (bad) sub cmc repnz mov (bad) jle (bad) in sbb das leave mov mov divb pop into aad push std and and mov (bad) cmpsb loop and mov xlat xchg xchg sbb pop cmp and popl pusha mov cmpsl mov ret jmp ret inc jmp jl aad mov std (bad) (bad) mov mov loope js lock repz fstpt in and dec rclb push push cmp mov repnz mov sub cmc xor and scas jne popa div or test rcrl xor sub fwait and shrl push dec bound dec aas inc xchg inc mov jmp std arpl daa xor push mov test sti in jecxz scas mov adc fcomi jb inc sub mov incb pop push ja mov add test popf add iret cmp shrb (bad) jnp (bad) nop gs add dec rcrb mov insb inc sub sarl adc add cmpsl test test loop and adc jle mov imulb icebp clc roll dec cmpsl jb ljmp loop xlat into cmp (bad) pop pusha pop dec daa jno mov mov dec lcall or push int3 lret inc mov cmovns jecxz,pt dec lahf xor aaa das add (bad) inc mov push mov mov test inc mov xchg lret (bad) idivb imul push test inc and xor (bad) ja pusha mov or add (bad) fisub cmp adc pop lods add nop pop sbb sub or pop inc mov jae lcall sub leave scas dec pop mov sub push jae adc pop subl xchg add jl mov out mov mov shr (bad) dec fdivs dec sub cmp push ret std pop pop xchg imul cli lods neg inc icebp into adc mov inc lret ret lock cmp movsl movsl jecxz push sub jg and (bad) mov sbb sbb xchg pop pop push jmp jle les (bad) fidivr popl movsb mov fldt (bad) mov and xor gs jns lcall call ja sbb out pop pop cli xchg movsl or int3 aam js in xor int3 testb test rclb enter ret add pop out push cmp (bad) cmp add sub sub outsb inc cmc repnz js in push mov aam lock push fcmove sub lret inc and loopne arpl xchg addr16 mov cmp xchg xchg xchg mov cmp pop mov push addr16 arpl dec sub and dec cmp pop mov cmpsb je add pop cli jo insb cmc mov mov cmc inc outsb xor fisubl pop push jl sbb or jmp icebp mov fmulp jge ret in push fs enter (bad) popf lahf hlt mov adc cmp xchg sahf xor and ret push bnd mov mov sbb lods sbb cmp in and shl sbb pop mov mov inc lea stc sbb (bad) shll mov cmpl ret push mov push cmp hlt or into jp pop pop int3 push dec movsb repnz mov jo mov divb call ljmp repz insb xor or enter inc scas addr16 negl (bad) (bad) test fmull mov push mov mov and popf push mov adc or add push arpl fmull cwtl cmc ss jbe mov inc nop ja inc and sbb mov imul lcall jge out subl push jne adc dec cmp repz cmpl and sbb xlat scas and push ja dec push test cmpb ja test lret adcb test incb into dec and xlat js xchg ja push jle lret jecxz inc fs lret hlt add sub das aad inc into mov sub lret xchg fiadd test aaa (bad) dec xor sub jmp rcrb stos sub cmp sub int3 sahf xchg mov ret fisttp pusha adc push xor sub push inc lret xor xor cmp pop scas jl mov js adc arpl or je ror in cld pop inc push flds test outsb add test and adc repz ret mov add in inc lret or insb pop rclb fdivrs ja out test in sub push ret fs mov sahf jo inc mov push lock rolb xchg popf lcall cwtl xchg idivl push inc out jbe jp fwait pop icebp lahf sbb or fstps jne pushf xor lret fiadd int call icebp add adc lret lahf push faddp sub jb adc pop xorl aam push lods xlat (bad) xor or jne arpl sti fdivrs frstor cmpsl dec rcr cmp sbb push call and mov pop fidivr xor in push out xlat loop sahf mov xor (bad) repz cmpsb in dec loope lods sub mov aam inc sbb fadds push xlat add fld pop push insb (bad) leave in lahf ud2 lods lea adc inc insl aaa jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge jge ja ja ja pop pop pop pop pop cmpsb cmpsb mov or movsl movsl in movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add roll add cmp cmc dec add out in nop cwtl lea push push push adc pop pop adc jbe jg xor lods lods lods lods lods stc stc pop (bad) aaa and cmc fucomp sbb sbb and pop mov lods pop pop jae mov jae mul dec push (bad) addr16 rclb jmp sub pop cmp lods pop mov xor and sub fsub jmp sub pop pop pop or ss xor mov pop pop out out out out pxor cs es das mov sub cmp jnp xchg test lea mov lcall jno jno jno je in in in in in in xor aaa aaa aaa aaa aaa adc adc les (bad) (bad) imul imul addr16 ja addr16 int3 (bad) (bad) imul jg jg jg jg xlat rol ret ret ja pop jne fwait loop pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc aad addb stc stc stc stc stc stc stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg and (bad) (bad) (bad) incl push push push push push push xor xor xor xor sbb lods jmp clc stc push push push push push push push mov mov pop pop ja mov sti and (bad) arpl arpl decl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg add mov xlat ret mov pop jns pop pop and ss ss pop pop pop pop pop pop out out out out out scas out das out add pop dec sub sub mov jns jnp js lea lcall jno jno jno xor in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb sbb lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret dec xchg (bad) out jns jo subb pop fidivrl mov fldenv in (bad) (bad) (bad) add dec dec dec dec dec xor mov sbb add add add insl aad ret icebp addl sub cmpsb xlat pushl (bad) mov cmp jae (bad) out daa mov xor cmp sbb insb inc test push jl mov cmpsl hlt aad pop push fcoml pushf mov cli pop pushf pop xor pushf inc (bad) jo (bad) stos dec mov fist xor daa inc jnp fstp fnstenv dec movsl rclb inc inc inc inc inc inc inc outsl outsl outsl outsl outsl outsl outsl psrld pop je mov pop cmp dec cmp (bad) lcall dec movsb jg dec adc sub test das clc mov push push mov dec sbb pop pop out mov (bad) cmc inc xor test call jne mov inc aaa sets or xchg dec add dec jae loopne dec outsl es or sahf faddl movsl movsl movsl movsl movsl mov hlt cmp cli add xorl push pop cmpsb jl outsb sbb jg jg jg loope mov mov and xlat adc jle xor mov fcmovnu fistpl ja cmp mov jg dec aaa mov imul xchg push (bad) mov xchg xchg (bad) incl fiaddl mov lret stc stc mov cmc inc daa push xor adc mov lods ds stc push stos jo bound push je je je je inc pushf arpl pop jge lods add repz mov rorl outsl jmp cmp inc inc inc flds mov clc xchg les (bad) cmp mov dec (bad) movsl sub xchg xchg xchg xchg xchg cli cli gs pop or shll jle sti test mov pop sub sub inc das cmpsb pop sub clc (bad) mov pop popf cmpsb dec push mov (bad) pop push push mov mov outsl add mov pusha add lcall inc mov mov sbb ja or js mov loop cmp mov adc pop imul mov dec lods ret push outsl jb ja je sahf sbb mov fnstenv movsl movsl cmpsb pop cmpsb jge ljmp xchg xor jo fstp adc rclb aaa adc pop add jmp icebp cmp popa into mov dec enter enter jl repz stos fistl push insb inc push lea cmp out jno adc nop or mov lods lods incb lods stc jp cmc jp fldl add and (bad) pushf mov std mov add jmp pop pop pushf inc sti js idiv sub dec add pushf pushf loopne imul stos lahf fsubp iret add xchg mov sbb cmp mov xchg ud2 mov cmpsl cmpsb cmpsb mov repnz push jle or ud1 adc mov push cs das das jno jmp call mov mov jnp mov fldcw mov pop (bad) mov cld and lods xchg mov in cmpsl cmpsl cmpsl cmpsl lcall loopne xchg xchg sub cmp call push mov and xorl imul and inc pop iret add mov mov push rclb jecxz inc loop roll movsl push adc xor orl inc aas (bad) fnsave xor lcall jmp std cld ret xor add add sbb les sbb xchg lret int3 push mov cmp lret lret lret stc stc pusha mov cmp pop mov xchg push push and inc sarl mov call xchg jle pop stc jle xlat (bad) rcll aaa sarl cmp add add es adc inc push dec xlat pop jl xlat pop xchg loop iret inc push gs aad out loopne sbb insl lahf jae mov jae sub mov sub stc inc jmp outsb repz cmpsl sub ss fsubl cwtl lea jb dec lcall lea adc pop lods in cmp enter push adc int3 sub push (bad) les xor mov fcompl pop call scas in pop xchg xchg xchg pop mov addb add add inc hlt aas cmp insl mov dec mov pusha movsl cmpsb cmpsb popf jne mov dec xchg sahf pop pop pop inc rcll adc mov aas jl add xchg sub call inc (bad) cld cld (bad) jl ret mov cmpxchg (bad) imul add add stc stc mov mov leave lret repz leave lret fstpl pop push in push push (bad) aas jl add rcrb test cmp test xchg pop jmp call pop add and inc mov cmp sbb pushf pop dec or jae jo push pop shrb in psubusw jne gs pop pop lahf fmull lock iret leave leave bound bound push push adc xor stos ja rcl movsl in scas jb aam dec mov test dec or je jb fstpl arpl mov mov adc mov into enter xchg jae in in cmp inc movsl cmp out or repnz mov and in or xchg xchg clc mov cmpb cmp mov pop mov xor (bad) dec sbb and pop pop pop and nop jns ljmp jle out jl add push lock jnp xchg cld cld movsl sti mov movsb mov aas mov mov push adc insb push dec cmp push add push mov addr16 lret push std xor lahf sbb sbb and pusha push push push std je int push push stos mov (bad) xchg mov cmp lcall jle or jo sub cmp dec (bad) mov jg jo mov cli add adc jns insl insl mov mov pop pop sub mov cmpsb cmpsb rcr test data16 inc jns fbstp insb push sbb adc rcl sub in scas iret fadds nop xchg add jle gs xchg (bad) mov adc outsl push or enter and inc in push mov testl cli loop mov into (bad) pop lods popa loopne mov xchg xor mov inc sbb cmp dec cli scas test int3 mov outsl inc dec dec mov jb pop ljmp jb jle rolb push push jb lret in call and ret mov dec int fwait mov cmp inc or add (bad) (bad) (bad) in or stc mov lret mov mov in cmpsb xlat pop push push lods fnstcw push push test adc xchg push mov mov out call mov adc mov adc out je jo add mov jp orl packssdw pop cs popf stos leave leave mov movsl rclb xlat cltd test daa sbb rclb xchg call pop sbb (bad) mov lds adc push imul push repnz sub adc out outsl imul mov shl in in adc add aaa cmp les imul mov repnz test and pusha das and xchg xchg cld ret addb fwait cmp mov ss push mov push pop mov mulb jecxz ds pop pop pop hlt dec mov add adc add jb jle adc add push jo dec in call cld cld mov mov mov mov mov ja cmp int cmp push loope je dec or add cmc lret mov movq push mov stos call sub pop push push scas sub push or push stc mov xchg sar cmpsb stos stos mov mov xlat xchg iret call add jo push or cmp arpl pushf loopne (bad) nop pushf pushf (bad) cli fwait add xlat jo insl shrb and mov mov pop pop rcr add and ja pop pop movsl dec dec ljmp adc sub shr scas dec aam aam in (bad) sbb mov jb dec pop bnd hlt sbb imul enter xchg jg in in lods aad inc test add add lods repnz pop lods and and in sbb cli or mov cmp add mov mov sub cmpsb cmpsb ficomp dec enter pop pop pop stos arpl loope add jle jle inc jl push push push inc aas xchg insb call xchg cld cld mov ret sti enter mov mov ljmp jg cmp test inc test pop aas mov lret mov in dec inc (bad) icebp test push stos add adc xor xor cmc xor (bad) repz call dec mov cmp cmp lahf pushf pushf xor push lret pop mov mov repnz inc pop pop pop or pop data16 ss sahf pop rcr jb movsl adc push sbb adc stos xchg (bad) aam ret aas in jnp mov js jb xor out mov mov jns sbb adc (bad) pushl aaa mov pop cwtl xchg stos out cmp fs cmp andb lret cwtl xchg mov ja cld cli jl and push push rclb xchg addb dec xchg dec xchg dec inc daa mov dec jmp aad ss inc dec dec mov movsl movsl dec stos sub aam pushf or jbe jle les js push cli stc pop adc (bad) out sbb cld cld jle mov and scas inc dec fsubs mov (bad) std xchg xchg xchg xchg je out add ds add mov fnsave xor js lcall movsb in lods push push push mov fiadd (bad) mov push add cmp jmp call sarb clc jle pop cmp xchg dec mov (bad) pushf pusha arpl sbb push inc (bad) jae jo ret sbb push adc mov and pop pop pop loope sbb jb pop sbb mov lret leave movsl mov push pop pop shll fs call daa mov test test lret int3 lea cmp pop mov gs pusha clc in lea adc rclb enter enter sahf pop in in in inc sub push (bad) les outsl loop fnstsw jecxz,pt cld repnz mov in popf fdivrl loop inc xchg xchg xchg cld mov aaa cmp cmp dec xchg lahf enter hlt popf dec rcr and pop cmp pop pop pop pop cs jg sahf nop cmp imul cmp push call pop pushf mov clc cld cld push jmp lahf or (bad) enter mov add push push (bad) pushl add add (bad) rolb test cmp or xor nop mov in xchg mov daa sub jl test dec test test call add jo (bad) or cmp mov pushf pushf pushf add xchg jae jo pop mov insl insl sbb stos jbe jne rsm pop pop pop sub stos sub or sub leave leave xor movsl ror jle adc fs adc shrb aam aam scas push rolb (bad) jb stos dec or je gs pop pop in mov mov adc imul mov into in in cmp cmp leave add cmp out out xchg mov mov and xchg xchg aas scas in loope add testb dec cmp cld mov aad dec dec push jne ds pop pop and sub outsb rcll mov adc push or call test cld cld mov ret sti mov repnz fdivs add sbb jp push stc stc jle sbbl mov int3 lret repz int3 in je sahf and push sbb xor push stc je or fadd sub mov pop xchg rcrl inc call sti jb out cmp cmp inc jecxz pushf pushf andl xchg dec or push pop mov jne mov pop pop ss js fdivl leave leave sbb mov leave movsl movsl or adc xor rcl and stos add aam jle scas add test add add mov pop pop test mov mov adc imul icebp mov enter aad and add cmp xchg mov mov and xchg xchg shrb orb inc cmpb add mov repnz mov data16 dec dec lret jne repz pop pop cmp ljmp jle out inc add jle push dec aas jl push call sti jmp cld push mov insb aad aaa cmp sbb push (bad) push out dec mov inc push xor add xor mov leave lret lods xchg sub in in jne gs insl lods and mov push push (bad) dec shlb stos rolb mov loopne call jbe out or cmp (bad) or and jbe daa mov jg insl insl adc bound jne (bad) lea pop pop pop mov cmpsb cmpsb cmpsb fcoml ss fisttp movsl movsl pop pop out out fs adc sarb mov ret fsubs sub cmpsb (bad) imul int3 lea add xchg cld xchg imul mov lcall jns aas cmp les insb lods out and xchg mov shl mov and test xchg xchg xchg cmp repnz mov (bad) xor cmp sar orb or mov faddl dec dec xor inc pop pop pop movsl fsubrs ljmp jbe jle cmp jo gs call call add test into ret mov dec sub sub pushw xchg loopne je arpl add mov add xchg nop push nop mov lret adc sbb sbb sub push push push lods mov push push jl pop rcr push push push jle testl shl call ds add lret add cmp dec movsl out xchg pushf pushf push dec or jo daa push pop pop insl insl test jg jne gs lahf fcoml lock ret leave leave pop pushf fist push sbb adc jmp rclb aam fidivrl test or jb sbb pop dec outsl gs mov movsb test cmp adc clc icebp mov ret dec aad lret out in sahf add xor cmp xchg xchg (bad) mov lods (bad) mov sub and in mov xchg xchg ja cli mov add cmp mov xchg (bad) mov lods cmpsb cmpsb mov ss inc dec dec faddl arpl inc push pop pop adc nop icebp loopne ljmp jle je cmp jmp or xchg (bad) cld ret sub cmc jp dec rcrb imul (bad) pushl mov stc adc mov ror mov cmc ror sbb xchg sahf pop pop push push das insb push and push jb shll mov dec inc call call inc imul sbb nop pushf pushf fisubl arpl (bad) jl hlt aaa jns push pop lds jne pop pavgw add xchg sbb push (bad) ss movsl mov push pop pop xlat bound pusha daa das das mov sub sub dec cmp jnp cwtl mov mov stos fdivs jno fs shrl in pop mull ja pop repz add add mov xor cmp jnp xlat pop sub out aaa ja xlat outsb popf fdivl push mov cmp add dec lds ja ret lds pop mov mov cmpsb fidivl fstpt icebp mov aad in int cmpsl push adc subl cmp mov push pop jg mov add mov cmp ret pop and std inc test xchg std cmc dec mov mov stc stc test and lret ja ss out in sahf dec in push push or push push push je mov popf pop push push xchg out xor jnp pop xor and sti sti sti lods jbe (bad) enter enter movsl inc pushf arpl (bad) mov (bad) (bad) jo insl rcrb dec mov mov scas mov push out sub aaa cmp movsl pop pop fisubl pop adc out adc adc and aam sub jnp test addr16 pop les lcall mov loopne nop enter jnp aas cmp inc inc xchg xchg dec inc out (bad) imul xchg lods das push push jl lcall push xchg (bad) jbe imul leave or dec cmp jne ret jne js movsl je pop mov mov lret xor pop pop pop out sahf shrb push xchg repnz movsl xchg clc cmp jp sbb cli imul (bad) and add push and imul nop xchg xchg (bad) (bad) jl decb adc jno adc adc push cmp pop push sbb lods lods sub stc jo fucomp divb aaa stos stos stos or or cmp mov fcmovnu fcmovnu aaa js repz lods jns mov push pushf ljmp jo (bad) por insl jne leave add scas sahf lods adc mov pop rcrb ss pop adc xchg mov out out in out sub sub mov shrb sub (bad) xchg sub jnp sbb lea (bad) mov in push jno jno fdiv insl or in in mov aas jns stc aaa in in in push (bad) cmc sbb (bad) (bad) imul ja ja dec ja (bad) mov jns call jg or jo cwtl cmp cmp popf sahf sub mov mov ja xchg xchg xchg xchg xchg xchg jg jg jg loopne sbb stos mov inc sahf inc inc arpl sti stc repnz xchg pop pop pushf ljmp add mov aad ret ret mov movsl mov mov jle push imul push push aas jne ja clc or pop xor ss jne divl or pop sub out sub lods js stc clc stc stc test xchg push mov je fistl jae fnop jae fucomip ja dec and jmp inc push jmp inc mov aaa adcl (bad) scas sahf xor gs xchg cmpsb jb (bad) jb test cmp movsl jno rolb lret frstor lret scas imul js or sub test lea cmpsb fs mov xor cmp enter test add arpl or jne push aaa test add das dec das pop jecxz push xor sbb cwtl add push icebp jg jge mulb out dec xchg jmp or pushf jae sub pop mov cmpsl mov mov dec sub push add jns mov jbe mov mov cmp rclb ret add or sub ds push lcall mov dec int dec add push sbb out data16 lea push add mov xor imul adc dec comiss xchg lods jb fucomp js push push push push xchg mov push imul xor pop pop xchg outsb adc add dec xchg dec and out jg call add stos scas mov pop lea jno xchg mov cmp mov sub xchg sbb cmp cmc mov pop imul outsb int das das scas push daa popa stos loope aam aam cmp sub das pop movsl add insl sbb lcall (bad) xor enter adc mov or in cwtl push loopne (bad) sbb jb jg les cli and inc or ds fcompl and mov cmp inc xchg rol dec xchg je mov cli arpl mov cmpsl dec dec ds cmc imul ljmp pop mov mov cmpsl movsb dec push dec xchg shrl aam iret iret iret iret iret iret iret icebp icebp icebp icebp icebp icebp icebp sbb and into mov ret lcall mov jb push push push arpl sti (bad) xor mov xor adc lods mov lods scas lods sub stc cmp icebp cli fist fstl or jp mov xlat xchg fisubr inc adc jbe (bad) sti mov jno ja insb aad push bound dec (bad) mov xchg inc sbb lret testb adc pop push out or arpl pop pop popf fwait mov stos rcll out lods xlat cs pop shrb jnp int dec je sarl lcall sti jge stc jge cmp in xchg or pop and xorl adc add dec enter xor ja fwait push and cwtl clc lock rcr cmp cwtl lret sub xor jo mov dec xchg out js daa je cmpsb imull pop push add xchg mov adc mov out popf pop xor or movsl lock dec test xchg in lahf pop xor or dec or mov mov or add lahf sbb dec scas hlt add push mov cmp cmpl popa adc cmp jecxz jmp mov jno fucomp (bad) dec add aad dec xor pushf stos mov pop pop lahf inc xor dec stos ljmp dec mov ror aad jno aaa inc jbe cmp pushf movd adc sbb mov test sahf add scas mov adc lods fldcw cmp jle push in or push push outsl sbb xor cmpsl jg xor (bad) sti mov shrl adc mov push add or mov jg mov movsl inc push xchg xor dec mov frstor jne and js daa push clc aam jmp fnstsw divl pop push imull pop in add sub ret ja hlt mov rcrb lcall add add jg jg jg imul (bad) (bad) (bad) dec dec dec dec dec xlat or mov jg pop adc cld mov (bad) hlt inc aaa push push dec int (bad) scas mov ret mov adc cmc xchg test clc jg jle stc stc lea push repnz femms jns sub fs cmpsl sbb cwtl fbld les stos sbb stos add push cmp xchg xchg bound jg pop adc ret sbb rorb lds mov dec xchg mov int3 push les out lcall mov pop rclb and pop popa xor movsl or push lcall mov sub inc aaa pop arpl frstor ss add sbb jbe add push adc mov add out aaa aaa mov xor data16 lret inc sub mov or dec addr16 pop sbb push outsl (bad) mov aaa stos loop cld mov les ret cs mov xchg xchg xchg xchg xchg xchg jg jg out fild dec rclb pushf ds dec xlat sbb jle popf dec mov jns pop pop lcall jmp std cld ret mov sbb sbb les lea or in test pop jb stc and test int inc ja popa adc dec dec jno (bad) push mov jb xchg jns stc push fcoms push add inc inc inc xor xchg roll lods stos lods scas xchg sti stos cmp fbstp (bad) dec xchg xchg mov jns mov outsb jo int iret leave push lcall add xchg add (bad) jb add arpl and sbb mov out bound xchg das das sub jge ret inc aad test js aaa pop movsl push dec popf out out int3 lret lock jno sbb xor sbb ss imul adc dec nop loopne scas les imul add and push insb popf fcoml mov imul sub outsb addl mov sbb or or pop or mov inc push jnp push jecxz push popa adc and ljmp mov mov icebp jge lcall add ret arpl cmp sbb mov call je jbe out or stc stc (bad) shrb xor mov (bad) mov mov xor add stc adc stc stc adc inc push push mov push pusha lods mov pop pop (bad) test (bad) out sti (bad) cs mov arpl data16 xchg mov mov mov pop mov dec ss ss dec pop pop mov cli out out push pushf cli out das movb das movb sub ret jnp xchg outsb jnp fs cwtl lea lcall cmp cwtl mov in stc aaa aaa fmulp and aaa cli in adc cli loope (bad) les (bad) push jle imul imul (bad) cmpb imul mov jg sub xlat ret ret sub ja sahf call scas dec pop pop pop add mov movsl dec add add addl stc stc add flds pop pop (bad) sahf pop add ljmp sub dec dec movsb les xchg jl adcl adc push out adc push xor xor xor sbb sbb sbb inc push mov in stc stc adc in stc push mov mov push or pop pop adc sti sti adc mov arpl mov xchg fwait xchg xchg jnp xchg mov mov pop mov dec pop pop mov and and dec pop pop push add out out push add lret sub lret cmp sub mov lods push sahf lea lcall ret bound add add fisub or adc sub (bad) enter sahf jb ja sahf add (bad) xor and imul xchg cli rol ret sub ret ja or ja sahf das dec pop pop mov dec mov pop fbld mov movsl dec movl push adc addl pop pop (bad) pop add pop ljmp cs cmp dec dec movsb cmp cmp push jb (bad) (bad) out or es xor xor sbb repnz or lods adc jmp stc adc push push mov push arpl add pop (bad) testb sti sti cs mov arpl inc popf (bad) (bad) push adcb mov cwtl mov mov pop mov dec pop fist cli dec pop pop mov dec out out push jns out out mov das das (bad) (bad) add sub ret sub xchg push lahf lea lcall pop arpl cwtl sbb in in add fisubr aaa aaa fimul adc cli inc add les (bad) and imul xor fdivl xor sbbb jg dec insl jg sub rol ret sub gs sahf push gs mov dec pop pop mov mov mov mov movsl cld inc pop adc addl stc stc adc pop pop incb add ljmp sub cmp dec movsb dec pop dec xchg jl xchg (bad) call adc push push out ret push fsubl es xor xor sbb bnd lods lods inc or call inc push push mov push cmp add jmp ljmp add add (bad) cs addr16 arpl inc xchg (bad) xchg jnp mov mov mov mov pop mov daa ss ss mov dec pop pop mov (bad) out out push scas (bad) das das (bad) adc das das ret sub ret jnp xchg adc lea lea lcall fs jno add add fidiv es adc movb adc cmp (bad) les (bad) in jb imul lahf int3 (bad) xor add imul xchg stos outsl ret ret sub ret ret sahf mov mov pop pop mov dec pop mov inc mov mov movsl dec mov add addl stc pop decb nop adc add lea cmp cmp dec dec movsb stos xchg xchg add push and (bad) call pushw push push out insl push xor xor xor sbb repnz or lods inc out mov jmp jmp inc push push push xchg test mov pop (bad) xor pop sti adc jmp sti adc xlat mov arpl data16 (bad) xchg xchg jnp adcl mov mov mov pop mov dec pop pop fildll ss pop mov dec pop out push ss out push sti and das (bad) loopne sub ret sub xchg mov mov ss lea lcall int in in add fiadd lcall adc sub sub (bad) movsl jae ja mov ja xor (bad) xor addb outsb jg xchg and ret ret sub (bad) ja sahf push js ja mov push pop pop mov mov mov stos movsl movsl dec pop sbb addl stc stc adc sbb pop (bad) cmp pop add sub add sbb cmp dec dec movsb push inc dec dec jl lcall call xrelease out add push push out aaa cmp xor xor sbb repnz mov mov idiv stc adc (bad) pop mov mov pop pop (bad) fdiv sti sti adc push leave mov arpl cmp (bad) jnp pushf xchg xchg jnp test mov mov pop mov push ss rclb mov loope out push jbe out das (bad) push and das (bad) pop and and push sahf lea lcall sub jno add mov aaa aaa fidivr aaa aaa cli push sbb aam les (bad) pop imul jns ja pop jns fdivl sbbb imul xchg jo,pn ret sub xor ja xor or pop pop std mov stos movsl movsl dec loope movsl adc adc subl leave idiv stc (bad) cmp pop pop (bad) xor push add cmp dec movsb popl xchg jl cwtl xchg xchg push inc repnz call dec or push out test push xor xor xor sbb adcl mov hlt stc stc adc stc push mov mov push xor pop pop (bad) nop sbb pop adc adc mov arpl mov (bad) (bad) data16 xchg xchg jnp lahf xchg xchg arpl xchg scas mov mov pop pop mov and cmp mov push pop pop push ret loop out push enter (bad) or ss ret jnp xchg push addl lcall cwtl add push loopne in add faddp cmp adc clc pop adc sub sub (bad) mov imul jnp ja push rcr fdivl andb jae jg sub ret ret sub iret ret ja mov ja sahf out pop pop mov push mov pop push mov test sbb adc addl pop pop (bad) xchg sbb pop ljmp xor cmp dec dec movsb cld cltd xchg xchg jl cltd (bad) call mov pop or push out push cmp xor xor sbb repnz pop add lods adc cmc stc stc adc pop push push mov push nop mov mov pop decb sbb sti adc idiv sti cs mov arpl data16 sahf xchg xchg jnp cltd mov mov lods mov pop pop mov push pop ss cmp push pop pop mov push out out push cmp out out (bad) loope das das (bad) out sub ret sub les jnp aaa xchg lcall cwtl fidivrl jno insb loop in add fisubr test adc cli sbbl iret (bad) les (bad) call or xor xor addb jg xchg adc pop into ret ret sub ja sahf movsl jp pop mov push pop pop mov mov mov test movsl cld lods sbb addl add adc stc stc adc pop pop (bad) mov add ljmp xor dec dec movsb pop inc dec xchg jl sahf xchg xchg jl hlt (bad) call (bad) repnz push out sbb push push fsubl ds xor xor sbb repnz cmpsl lods lods inc mulb hlt stc stc mov mov push push mov pop (bad) hlt sbb idiv sti adc test cs lret mov arpl test dec test xchg xchg jnp orb mov mov pop mov cmp fist push pop pop mov in out push jl das das (bad) mov mov scas jno jnp add jnp testl push xchg jno cwtl mov sub in in add fimul cmpsb pop adc cli je (bad) les (bad) int imul add add sahf jmp (bad) xor cmp imul xchg divl ret sub ret ret sahf or ja push push pop pop mov push pop mov fdivrl test test sbb addl stc pop (bad) pop sbb pop incb add inc (bad) cmp cmp dec movsb jle xchg xchg jl cltd xchg call (bad) repz call and push push out sbb xor xor xor sbb repnz sbb inc clc cmc stc stc adc mov dec mov mov pop (bad) lcall sti adc lock sti adc int3 mov arpl inc test xchg xchg jnp cltd xchg mov orl test pop mov push pop pop fistp xchg push pop pop mov push pop out push jb out out push add mov movsl and sub xchg incl xchg lcall cwtl add in add ficom aaa aaa ficom adc cli dec sbb les sub (bad) es ja sahf aas jl ja lahf xlat (bad) xor adcb jg dec je jg in enter jmp push jl ja jns pop pop mov mov mov scas movsl movsl dec sbb adc addl stc stc adc sbb sbb or add aam cmp dec dec movsb xchg inc dec dec jl lahf xchg xchg jl cmc (bad) call das cmc incl out int push push out repz xor xor xor sbb repnz add repz stc adc pop push push mov push and sbb add sti sti adc sti (bad) cs int (bad) jecxz,pn arpl sbb (bad) data16 test xchg xchg jnp orb mov mov pop mov push ss ss push pop pop mov in out push stos in das (bad) adc and sub push and xchg dec jno jnp cmpsb xchg lcall cwtl insl jnp jno sti out in add fidivr cmp sbb adc adc (bad) les (bad) xchg bound (bad) cmpl sahf cwtl jle fdivl orb jg xchg movsb jbe ret sub cmpsb jle ja mov sahf push pop pop pop jno mov pop push lods movsl movsl dec sbb cmpsb sbb adc subl pop lock stc decb lea add ljmp xor cmp dec movsb lret inc add xchg xchg push xor call mov push push out je push xor xor xor sbb inc adc sbb movsl lods lods inc clc lock stc adc pop pop push push mov push clc mov pop (bad) sub pop pop adc repnz sti adc into mov arpl mov xchg xchg xchg xchg arpl test stos mov pop pop mov ds ds pop mov push pop pop push dec jmp sub das (bad) mov das sub mov jmp jnp xchg lock lea lea lcall mov jno add add ficomp adc cli jo adc sub sub (bad) lret arpl sahf in jg ja dec aam fdivl and imul xchg std lret ret ret sub add add pop jno ja jle pop pop mov pop mov pop fidivrl lods movsl movsl dec cli sbb sbb mov stc stc adc push pop pop pop ljmp xor xor inc dec dec movsb mov mov fdiv (bad) (bad) out sbb push push out pop cmp cmp cmp adc sbb push adc lods adc (bad) stc stc adc push push push mov push push mov adc pop (bad) cmc adc sti adc cld sti sti cs ret cs data16 loope arpl (bad) push xchg xchg xchg jnp xchg mov mov movsb mov pop pop mov pop pop fist sti pop pop pop mov pop out out push js out out (bad) mov mov mov clc jl jnp repz lcall add cwtl sbb in in add ficom aaa aaa fimul adc cli inc adc les (bad) daa insb imul jo ja xor loope (bad) xor orb jnp jg push mov ja sahf push inc pop pop pop mov mov mov mov scas mov adc addl stc stc adc adc pop (bad) cli adc add jmp add aam cmp dec dec movsb xchg dec dec xchg jl xchg xchg xchg jl stc (bad) call xor ret add push fdiv xor xor xor sbb repnz stos stc stc adc stc stc mov mov push sub adc pop (bad) jb sti sti adc mov (bad) mov arpl push mov (bad) xchg jnp xchg xchg xchg jnp in mov mov mov pop pop mov xor fistpll ss mov pop pop pop mov jmp jmp sub das ret sub ret jnp xchg push jge lea lea lcall addr16 jno std ljmp aaa fidiv xor adc adc rol sub (bad) cwtl outsb imul jb ja sahf (bad) fdivl xorb jp jg stos jp ret sub mov sahf mov mov pop pop mov pop pop mov movzbl movsl movsl dec pop mov adc addl stc pop decb xchg push add ljmp cmp dec dec movsb int xchg xchg jl nop xchg call mov (bad) call ja push push out push xor xor xor push sbb repnz push sbb inc mov stc stc adc adc push push xchg adc pop (bad) and pop sti adc (bad) sti sti adc ret loope,pn arpl inc data16 xchg mov xchg xchg jnp xchg xchg mov (bad) mov cmpsb mov pop pop mov pop pop pop (bad) xor ss pop pop pop mov pop pop out push add lret das (bad) iret sub sub lock sub xchg lods jg jnp stos mov lea lcall int3 jne in add fiadd pop adc cli mov pusha rol sub (bad) icebp outsl ja sahf loop ja xor xor sub imul xchg mov mov ja sahf add xor pop pop mov mov mov (bad) mov movsl dec sti mov adc add addl pop pop (bad) push adc add cmp add ljmp cmp movsb popa dec dec dec jl xchg xchg xchg jl sti (bad) call loop incl out fs push push out push insl xor xor xor sbb imul xabort stc adc push push mov push mov push pop pop (bad) xor sti sti adc cli sti (bad) cs mov arpl data16 mov xchg xchg jnp mov mov mov pop mov pop ss ss pop pop pop mov out out out push xor out das (bad) stc das das das (bad) cli sub sub out jnp xchg mov jb mov fistpll push jno jno xor int3 in in in outsl xchg fbstp xor jb ja adc cwtl push xor int3 dec add imul push (bad) add cltd push cltd repz xor ja mov ret ret dec xchg int3 jne jbe mov ja loopne pop pop pop push inc inc cmp mov mov xchg in pop pusha adc aam inc popa cld inc std stc stc stc jb lods pop pop pop pop loopne mov hlt fbstp dec dec dec dec mov xchg push xchg push nop (bad) jmp incl das cmp inc and mov or jo div mov xor cmp sbb jmp scas jp (bad) jo jmp sub and sub std mov adc imul mov mov inc (bad) jns mov jo lret lret xlat mov push insl xlat test mov fisub test adc ss mov xor das push mov movsl movsl add adc sub push sbb pop sub jnp test pop mov icebp mov enter sbb mov jae add outsl test xchg xor jb push rclb sub cmp cmp orl push push mov jne ja fsubl cltd call jmp popa loop shrb jg sahf jl cmp add shl ja mov xor and sbb cmpsb notb into xchg movsb adc sbb mov inc cmp cli aas push (bad) aam push xor aam inc and inc and cmp mov (bad) or and (bad) (bad) decl push cld cmp (bad) lds aas fstp lret lret jo xor fst in in pop cmp outsl das rcrl mov stc stc cmp jbe xchg (bad) adc jnp std fwait mov add xchg push push bound call cli sti sti cmp dec cmp cmp xor pushf pushf loopne imul jo dec jp xchg xchg xchg push adc test mov (bad) cmpsb and subb lcall mov jns cltd fldenv pop jp ljmp push es scas push sub pop sub test lea lock gs icebp or jo ja rcll adc das outsl xchg xor add in in sar mov adc pop inc mov xor imul or add cltd (bad) fistpl pop cltd ljmp ljmp xor fld xchg inc xor lahf dec mov pop sbb xor nop mov xor xchg in mov adc mov mov (bad) cmp outsl ljmp jbe jmp (bad) cld ret adc add add cmp (bad) mov push push call jl faddl lds mov xor movsl enter fnsave sbb fsubs outsl das rcrl push push push push xchg mov (bad) std fwait mov aaa imul js fdivr cmp lahf cmp cmp popa mov pushf addr16 jo or test mov test mov (bad) movsl mov cmpsb cmpsb cmpsb lcall mov jns cltd fldenv pop jp fldl mov adc (bad) out rcl shrb mov pop clc ds jge push lock mov mov gs adc jo push repnz out das add adc enter enter add push faddp and test push jge push jno dec mov (bad) fstpl imul xchg and add add aad mov mov pop sbb ficompl mov pop repnz dec dec fdivs call std fdivrl jle les mov scas in call cld cld cmpb inc cmp ljmp push dec or (bad) mov push jge add add add jnp push jae mov aas cmp mov cmp adc sbbl push push push outsl das shr clc mov jp repz pop rcl push push push cmp mov mov xchg jmp push stc mov js icebp les cmp push orl mov aad lock insl insl push adc pushf mov xchg imull repz cmpsb cmpsb lcall fidiv leave leave cltd fldenv dec pop das push insb xchg in lcall in lods push cmp push and arpl push dec cmp orl add gs cltd jg mov in test xor enter call rol mov xchg xchg test jno,pn xor push je xor and xor xchg xchg xchg ljmp mov cmpb mov lahf mov mov pop sub mov dec dec dec jo into mov shlb ljmp xchg jl jle jp out incb call sbb inc and aad mov dec cmp loope push push push (bad) jmp xchg sti stc stc lds and sbb lret dec aas ss addr16 out in cwtl sarl jmp jp out push and scas stos inc cmp mov int3 xchg (bad) cmp call in decb cmp add mov mov repnz add jp outsl insl insl push jp ja jne add mov out pop lcall dec and inc xor mov movsl movsl cltd fldenv stc out lcall in lods push cmp rcl aam push jno movaps dec push lock data16 jne std add adc cmp mov in in rclb ret cmp insl add sub (bad) fildll xchg xchg stos adcl hlt cmp xchg inc xchg (bad) mov aad mov sub mov dec dec dec jo into movsl movsb shlb ljmp nop imul (bad) adc jmp call add cmpb dec sub mov ret inc dec cmp movsl mov push jge add add (bad) jmp or stc lret dec and inc add fnsave cwtl or or push push push das shll adc push stos xchg (bad) sub and int (bad) mov push clc (bad) notl aaa add cmp add pushf mov lods or lods mov push insl adc test jb pop and test pop pop pop mov mov dec and das dec mov mov in loopne outsb das das das (bad) scas aam aam test cmp cmp lock popa gs sbb mov pusha cltd pop mov out cltd mov enter add push aas cmp pop inc mov andl mov or add repz and pop pop adc outsl sbb sbbl sub cmp mov or or xchg pop mov dec dec jo loopne movsb loopne es ss (bad) std cmp ljmp nop adc push push jp sbb leave in cld cld rolb aad lret into xor cmp push outsl push push push call pop jb stc stc test add iret lret mov and inc and insl in in cwtl adc push push push cmp push push push xchg ficom dec push adc std fwait mov rclb pop pop pop sti add fxch mov das test cmp aad add mov xchg push insl inc dec iret mov pop out pop out fldenv push sub mov int3 leave leave cmc mov roll pop shrl fs sub das das fmul sub aam mov bnd test scas jae scas or pushf jb pusha mov jle in rorb (bad) rclb inc cmp das sbb add das rolb (bad) vucomiss frstor mov jb ja cmpb cltd imul cmp add or sub cmp add xor ja leave sub arpl adc rorl sub cmc mov lds jecxz push lea sub add aas insl ja aas push dec cmp xor cmpsb dec mov dec dec (bad) (bad) mov and (bad) (bad) decl push add inc pop xor lret jo mov pop cmp repz loop in nop jmp daa insl inc cld stc stc stc push sbb push push push push push inc push inc push xor (bad) std adc add cmp enter mov arpl test insl xlat mov iret test imull push pop pop pop lcall mov ss add add pop push out out adc sub stos xor movsb push and imul xchg jnp jnp push cmpb push lock mov pushf jb bound mov repnz in test xor aaa adc adc test stc jnp les jl scas sahf xchg mov or add pop mov xor xchg xchg xchg stos push test sub scas add (bad) dec or js lea jl mov add dec mov cmpsl shlb ljmp imul (bad) jmp out call add add ret les dec dec movsl push mov mov jge popa push push shl (bad) mov add roll push xor cmp xor repz out in das sarl adc push push cmp cmp push sub test jns mov sbb add (bad) adc cmp add cmp fist jnp jo lret xlat mov xlat mov dec dec iret nop mov subb pop pop dec sub cld ret fldenv dec pop cs fsts insb xchg cmp push sub (bad) aam push jmp jnp pop dec lock dec mov insb xchg sbb out (bad) sbb mov imull out cwtl cli fistpll enter jmp ljmp cmp test bound insl jbe push hlt xor ficomp sbb imul aas jle sarb mov cmp hlt or or pop scas cmpsb cmpsb lcall cmpsb cmp dec mov sbb imul dec or push jb jecxz push xor push xor rol sbb add add mov jo dec dec dec xor push (bad) jmp (bad) adc jns in xor cwtl ret lret or xor mov nop rcrl mov icebp test adc stos stos xchg (bad) scas pop and inc jnp pop in call mov lds (bad) ffree (bad) arpl es insb aad mov in cmpl insl insl or pushf (bad) hlt lods (bad) call sahf arpl pop and fdivl mov fldenv push out jmp shr (bad) (bad) rcl mov or ds jns mov lea sub fwait cmpsl and pusha cltd dec pop adc outsl xchg cli jmp gs ret shrb rcll adc outsl orl mov xchg add scas (bad) mov test xchg xchg stos ljmp jno outsl cld xchg fadds lret mov mov sub fisubl sbb dec jo rcll pop loopne,pn adc ss push addl dec dec dec xor xor pushf push xor push push mov mov xor push mov sub xchg out (bad) push mov jb push lea add and jne mov dec or sbb jae mov arpl push sub push mov aas mov mov call jo clc scas fucomip xchg xchg xchg das lods dec (bad) arpl cmpsl outsl call xchg adc js adc rcl xlat dec inc and sub xchg rolb andl punpckhwd cmc (bad) mov movsb jmp das das jns cmpsb push (bad) bound mov stos mov add nop dec addr16 push jge jnp sbb pop je fdivs jno add stos or ja aaa gs push jg push adc mov mov mov pop (bad) imul fidiv ja add adc (bad) fcoml test mov xlat aas or xor sub inc add repnz mov adc xchg cmpsl jecxz loope pop mov adc xor sahf bndldx ret add ret jne push push call xchg rorl ror iret push mov mov cmp xor push popf push xchg mov stos stos test push lea mov cmp cmp lret adc sbb lods pop push push sub stc mov fidivr jno jo pop mov nop xor xchg lcall push (bad) adc stc shrb pop les mov cmp dec inc inc inc inc inc inc pop pop pop pop pop pop pop fcmovnu (bad) add scas mov movsb sub cmpsl and pop loop ss or push sbb lret aaa sarb daa lahf outsb das scas jmp scas jmp sub fistp jnp lea lret orl lcall fs (bad) xor xor pop adc push mov sbb (bad) les imul arpl xor mov add xchg rclb push and test outsl repnz push jl sub dec xchg rorl pop cld cmp repnz sub cmpsb dec mov pop mov (bad) lea mov push adc cmc mov movb std jl mov pushf push xor xchg xlat pop imul and jl enter (bad) xor push loope test add mov pop pop lds pop add push mov imul sbb sbb inc cmc outsl pusha pusha pusha pusha pusha xor xor and rorb fnstcw (bad) mov arpl inc and cs out ja (bad) dec cmp loopne fistpl add fidiv aad in sahf out jnp add (bad) fsubs xor cld rcrb pop fcompl mov ss or pop mov fwait pop outsb das jg cmp push jne out out cs pop jae rcl (bad) jmp enter test cli or jb lock push mov daa inc inc cwtl icebp lods je les imul mov add push fwait mov imul cmpsl cli movsb jo pop ret ret ret test bound (bad) ss cmpsb dec and inc xorb cmp sti mov jecxz pushf push add adcl mov jge jg pop add push push cld push imul add les imul pop xchg xchg je ret je fcmovnu push add push mov into lret divb das outsl adc fldl push push das push add push (bad) xchg push add xchg and cmp adc add movsb enter das fidivr cmp dec leave loopne loopnew dec arpl mov lahf mov push leave int dec add scas mov sub xchg mov fdivrs mov aaa inc pop rcrl jle push in dec in and out das pop sub sub shrb jnp jge xchg jl lea mov xchg pop rcrl add cltd jmp stos in mov insb hlt mov daa inc or xchg enter movsl adc (bad) cmp ljmp jno sahf xchg (bad) lods pop fucomi sahf mov mov jl popf add rcrl mov bound push fstpt sbb fucomp inc inc lock fs scas (bad) pop cwtl mov adc enter dec in stc stc inc mov adc pop pop or adc imul divl sti sbb mov xchg insb xchg xor cld push add add andl int3 ss cmp sbb adc cli movsb scas push scas mov add xor add lods push jb push out mov inc adc sbb clc xor dec lods test les pusha lcall mov inc mov push (bad) adc test pushl jne shlb movsb and mov xor leave xor xor lods mov cmp in adc stos pop rcl aam scas lock test subb sbb pop jb or jle daa jo adc mov std cmp adc sbb xchg rol (bad) push fnstsw mov je fist shrl fcmovnu nop push data16 popa jl jl jo sub sarb or jne jge mov out rsqrtps pop xchg mov dec mov stos adc test pop push fistp mov (bad) dec mov xlat mov add xor jmp pop xchg incl or jno cld cld mov mov dec test or enter sub or ds push stc stc add xor cmp xor nop faddl dec mov cmp cmc add and push aad mov push mov push inc pop pop cmp inc pushf into jo fcomip hlt dec cmp push inc jnp aam add lahf jg (bad) xchg sub adc pusha test pop jnp mov mov xchg jb mov ss (bad) cltd sti outsb add adc das scas rcr shrb das pop sub sub cltd test or mov lcall jno mov cld mov sub sti sti sti sti sti (bad) nop ljmp cwtl pop loopne dec nop loopne dec das dec das cmp aaa dec xor jnp nop clc mov cmp pop jae jl repnz out xchg dec xchg push mov push inc ja pop pop sahf sbb mov je xchg (bad) movsl movsl movsl movsl dec pop adcl aad enter movsl mov repz pop pushf out rcrl xchg add add mov xor cmp cmc mov mov adc mov push mov cmp push and mov push gs xor imul and xlat xlat xlat xlat pusha pusha pusha daa call (bad) jb fstpl stos add jmp inc call aam jo (bad) jo jo push cs push sub daa imul inc inc inc pop pop pop pop sub inc inc inc inc outsl outsl outsl outsl outsl outsl cmc shrb sub ss lods fwait pop cs push pop (bad) fdivrl outsb or out (bad) daa sbb mov push xchg jp fwait sub jae (bad) shrd pop jne inc jo mov cli mov xor pop aas mov enter cwtl pop xchg movsb push adc cmp (bad) (bad) idivl imul imul mov outsl inc arpl fsubrl fdivr and add pop jge imul jnp cs inc add dec add lahf addr16 lods mov jg cmpsb pop pop pop rcrb mov repnz push pop movsl movsl movsl xchg mov adc cltd mov sbb xor stc stc pop and (bad) pop test add sti mov cld xlat pop (bad) xchg int3 scas mov xchg xchg push addl ds jle stc push push push xor je mov push and ds sbb lahf mov lods jp std lret jb xchg mov push mov inc mov xchg pop mov add sti sti enter jl (bad) dec mov decb (bad) push insl jo xchg xchg mov lret mov bound sub mov rorb xorl mov fdivr jb push scas out movsb imul les sbb mov cwtl push push aam jnp jnp outsl (bad) jnp int3 lea pop jb mov cli stos cli jne in pop lods in sub enter add mov test adc test imul xchg ja ja jae ja popf fcompl fsubr sub mov outsl mov cmp ret ret cld arpl ja ss mov push cs repnz jge dec mov cmpsb push adc xorl fxch test pushf aad incl xor add add jl mov cld cmpsb inc int3 scas mov dec xchg cmpsb xchg or and add xchg lret xor mov ficompl adc (bad) out in push test cld daa jp adc lret cmp lods xchg mov mov stos pop mov cmp repz add mov jl and mov mov (bad) cmp (bad) mov xchg xchg xchg mov lret mov cmpsl and sub push add scas sub xchg adc ss pop lret dec imul out out out (bad) daa sbb mov push lds push sahf mov push jg push pop or lcall xchg popa jb cli mov in (bad) aaa enter loopne sti or ret in inc xor stos push push cld mov lahf outsl inc mov ds enter sub ljmp ds jecxz inc in ret ja mov pop ficompl pop mov pop movsl movsl movsl cs adc bound addl int cld (bad) sbb (bad) loope cmp test mov popf push push xchg push inc push adc adc add push lea mov mov lret xor fcompl nop ret mov mov stc js push stc push push inc fcoms stc mov call pushf fst adc jo jp add mov test arpl jo (bad) (bad) mov rcll xchg mov loop and mov int3 pop lcall jle fstps add or movsb cmp ljmp jnp dec outsl adc push pop jno test xor nop mov in fnop popa in das jbe add iret mov cwtl leave xchg repnz (bad) les dec imul notb rolb sbb (bad) jno gs jg jg,pt popf add ret lock push ret mov ja aas mov mov cmpsb add es in jl,pn dec sbb adc addl adc lret pop fcoms xchg idiv add add pop mov std cmp mov mov dec push jl push adc jle add incl lea mov int xor xor xor rcr add pop xor push stc stc stc lret push xchg adc pop fisubr push test pop inc pop pop pop pushf add jo cmp iret inc and mov arpl fs mov rcll mov pusha loop and faddl enter mov xlat adc or insb das jmp adc enter sub push lock outsb jb lea pop fistpl imul in insl push adc add aaa add mov nop std pop nop cli lds mov inc add xor popf pop jno rorl mov outsl out adc in stos sub ljmp hlt add ret cmp ret dec mov mov xchg cwtl mov cwtl mov dec mov mov fs mov (bad) (bad) (bad) (bad) dec dec mov add (bad) jmp adc xchg aad xchg jbe ror icebp icebp icebp icebp icebp icebp sbbl (bad) outsb mov xchg pushl sti enter int (bad) jb fidiv mov inc aaa push and fnsave outsb ljmp inc lods mov cmpsb cmpsl movsb cmp push push push mov mov sbb sti jp sti mov add mov arpl bound add stos xchg sbb or idivb fdiv incl jge pop pop pop mov leave leave leave mov pop pop xlat push jle pop lea adc imul cs das sbb shrb movntps jnp lock inc ja jnp fldcw mov gs pop fwait add cwtl bnd orl aaa aaa aaa mov pop xchg in xchg adc les fsubrl imul movsl cli sti push sti (bad) fcompl test (bad) push and push scas xchg cld add inc add mov sbb pop aam jge pop mov cmp (bad) aas mov movsl xchg push sub sbbl inc xor mov sub jp std jl (bad) out arpl sbb addl cmp cmp push jle rolb cltd adc lcall cs jl add mul into mov xor lret sub lods repz add stc clc stc stc cmp cltd cltd cltd cltd je je xor pushf pop xchg fisub and cmp fcomip jo jecxz fistpll cmp scas scas scas scas scas scas scas inc add stos mov add mov mov inc test push mov es push fisttpll pop adc mov cmp rcrl insb pop in loopne push out das das lods xlat cs and and cmpl outsb push int3 mov xor gs mov clc xor pop out jecxz insl in aaa aaa mov in in in sub gs (bad) das dec cmp andl dec cld xchg test mov mov loopne and dec add test movsl (bad) xor hlt mov leave rolb adc pop jmp cmc mov lret in inc sahf pop push es ss aad fbstp jb mov sahf push dec pop pushf pop pop mov mov dec jg ljmp lea mov adc sub into cmp xor xor add jne mov inc and inc aas mov push pop sub outsl adc push push push outsl xor xor cltd ficom jno cmp rorb arpl pushf inc or fcomip jb inc rol (bad) dec xchg jge arpl mov sub pop sub xor jne inc outsl outsl outsl outsl outsl sub jge fcompl sub push jle rorl jle data16 out out arpl aas cmpsb mov mov repz jnp repnz mov jb gs push push push adc dec mov ljmp xor mov pop aaa pop xchg fisubl dec (bad) fadds mov call fs push daa js jle add sbb movsl movsl movsl movsl movsl sub emms sub pop xlat dec adc sub dec arpl movq jbe pop pop pop sub jecxz cmp cli sti imul (bad) (bad) inc or (bad) popf or jmp ret adc arpl mov mov push insb aad inc cmp dec xor in test je jecxz xchg lea test or xor and dec dec nop addr16 mov outsl stos stc stc jb in cvtps2pd in push push push fdivp pushf test inc mov pop pop xchg push (bad) cld sti movl arpl jmp leave mov out adc test std lea mov test inc imul jb psrlq mov mov das das lods add add mov sub jns jnp inc lret xchg (bad) or lea lock fsubl clc stos in xor sub imul inc sbb rcl lds loopne arpl sub xor push mov pop sbb in test imul push ret dec test dec cmp jae ja pop dec rcrb dec rorb mov mov mov jecxz cs rcll sbb or xchg or mov jmp jb xchg pop pop pop pushf pop pop cmp jbe mov (bad) sub dec dec xor xchg jmp cli inc sti (bad) (bad) pushl mov pop pop pop and cmp xor and pop pop push sbb inc imul push and xchg mov mov pop mov or into or stc sub jmp xor fisttpll inc es popa mov pop arpl sub lea xchg aam add xchg test cmpsl sub stos sub rclb inc push cmpb jo mov dec pop add fs sub mov aas mov xor cltd push fildl les jno cli aas gs cltd jmp out in aaa aaa fsubl mov mov outsb sbb testl imul jg jae jbe enter push lcall popa loope outsl jle imul fild rol dec lea push std aaa arpl sqrtps pop dec pop pop cmpsl cmp scas cmp cmpsb jecxz,pn rep sub add popf add lods stc (bad) in jb icebp test pop daa inc inc (bad) out stc cld cld add mov cli jnp cmp or dec xchg xchg jl xchg xchg xchg add jl idivl out xchg push push push xor xor fwait mov xor push cwtl out shrl lret add imulb xchg mov pop mov jnp arpl fidiv inc jle mov or push mov test mov inc add dec aam jecxz xchg xchg jp jbe jne hlt out xlat mov adc xchg mov movsl cmpsb cmpsb push out jns ficomp leave leave xor pop xor lahf add adc cmpsb push push scas jecxz sub mov imul cmp fimull fcoml pop cld aad jno in in stos clc xlat jno inc add adc sub xchg dec sub and daa es mov rclb in push scas addl imul inc cmp ljmp cld sub arpl (bad) aaa push rorl loope mov mov cmc cmpsl movsb jecxz jecxz,pn stos mov xor popf add lods stc (bad) out mov setl cmp push mov shrb aad (bad) mov or fisttpl (bad) jmp icebp cmp push roll xor xor xor mov pop pop das aam lods mov stc jb in jb inc outsb adc arpl mulb or lret sarb stos jo iret les lcall enter addr16 sbb int3 xchg stos add subl mov out inc push sbb pop push mov ds xor fild xor lods push add pop xor xor sub push fidivrl bound sbb adc inc hlt stos add clc add mov aaa aaa mov xor mov adc cwtl push fadds loopne lret inc in imul jg xor xor ljmp imul push mov rolb xchg sub (bad) mov mov rcrb imul dec dec cmp cmpsl cmp jecxz roll dec or popf mov or jno pop push jns xchg int3 bound mov mov and or (bad) cmp fistpl xor lods pop and stc stc test or xor jae push xor pop jl inc nop ljmp mov mov jp sti outsb sbb push ficom inc xor add sbb jo iret dec ror (bad) test push call xchg (bad) in sbb loopne bound jne add scas sub xchg fs pop sub pop fimull ss sub mov (bad) out lcall rcl jb jo jmp call lock pop arpl pop mov test popa sahf out mov scas push jno sub imul imul mov adc adc inc mov loopne pop fwait sub sub cmp iret mov and (bad) pop pop mov ljmp movsb jo pop ret ret ret (bad) pop (bad) ja js in ja rcr fstpl pop cmpsl repz movsl div pop jne rcrl test jns hlt xchg std arpl stc stc jl sbb cmp or sub cmp imul cmp movsl lea xchg xchg push push xchg jle xchg call out or push test and pop mov jno cmc jge pop push in push add and movsl push (bad) cld jb mov push push (bad) xchg pop ficom inc cmp pop pop sbb js push jle cmp cmp inc mov ds rorl lea xchg sbb sahf add mov cmpsl mov int lods out push push js mov dec push in or mov cs cmp cltd js mov and outsl je fiaddl ret xchg adc jle es aaa addr16 clc in pop and andl pop sbb ror jb pusha loopne jg and jbe arpl push sbb data16 dec xchg nop mov fstpt cmp cld xor mov jb adc jae cmc cmpsl call sti data16 jmp ljmp jle push push push lret cmp sahf push sbb cld cld cld arpl icebp icebp icebp icebp icebp addl adc xchg xchg pushl jp lock mov push push push lea mov pop inc sbb lret adc cwtl in outsl mov push lret fdivrs jmp push push and in inc inc inc inc out xor xchg xlat arpl pushf mov stos jo shrl iret dec xchg jg and out pop (bad) add stos fild mov push lcall packsswb scas sub xchg rcrb jno cmpsb mov repnz (bad) fistp lret mov adc lods jmp movsb jns mov vmwrite test dec push jb (bad) sbb pop faddl das cmp xchg mov adc mov in xchg imul loopne inc pop fs add add imul js adc (bad) mov fsubrl loop lcall pop pop mov ret cmpsb cld xchg mov repnz push (bad) pop pop (bad) mov out sub mov adc or mov push sub aad push das pushf push aas pushf dec and push push cld in mov jno jnp (bad) push movb daa xchg mov arpl (bad) pushl mov dec es xor lret int jae mov or lahf cmpsb lods lods lods das shr lods idivb stc stc stc jp adc sar push mov cmp pop pop pop pushf inc cmp stos stos das mov dec call and mov xchg xchg sbb ficomp iret into add into mov repz xchg mov rcrb mov fimul pop pop rorl dec les add add add sub mov cmpsb daa cmp mov add sub mov cld idiv js in popa jp in in in mov aaa push adc lcall dec pop pusha imul pop mov mov lahf ret mov and fadds xchg xchg xchg xor cmpb (bad) pswapd mov mov pop pop push cmp dec lds shlb rcrb or cltd add clc mov jb jb daa inc inc inc lcall in cld call dec cs mov jge sbb push sbb movsl push push repz je fcomi push push push out xor xor cmp repnz stc xlat xlat xlat xlat xlat xlat xlat pusha pusha pusha daa ljmp mov imul inc xor hlt xor inc lcall add test adc inc inc (bad) arpl and cmpb (bad) lea xchg push sbb xchg mov pop loop sub push out rcrl sbb mov ss in lret sbb in out out out insb sub cmpsb push inc cmpsb push jae push pop mov xor sub add in rorb push push push push push push push repnz gs ds mov mov aaa lcall dec mov rorb call xchg xchg push jns mov (bad) push cmp scas sub jg jo xchg ljmp shll (bad) pop pop pop pop rorl aas mov mov mov cmpsl sahf inc popa sub xor testl movsl (bad) cli (bad) das or add mov or xor (bad) push ja add xchg pop movsl (bad) mov cmpl push test aaa ja insb xor ja das inc jbe insb xor pop and outsb and xchg mov enter mov jge or adc (bad) mov push push push sub mov loope lret movb pop lods adc add movsb pop push dec nop xchg xchg xchg test je jne nop cwtl testl roll cmp push push rorb jle rorl test loopne sub imul pop and je push test gs popl pop (bad) mov mov mov aam stos pop bound cmp rclb fiadd mov (bad) (bad) jnp adc cmp daa jbe add sbb xchg imul push outsb or stc (bad) mov dec xchg add ss data16 or sbb (bad) fwait cmp mov repnz mov mov push das add add mov test push bound sub mov add add mov cmp and lret enter (bad) (bad) jmp ljmp bound xor push outsl nop pop ja push addb pop push push jo (bad) outsb xchg daa ficom insl in xor push inc jns pop pushf inc pop jo mov test out test insb aam jno lea jns mov in add jecxz jbe push xor sbb repz xor lcall lcall and and cmpb lock push ret lret mov adc clc xor pop out imul sub mov or dec ret dec mov cmp cmp pushf gs mov lret push lret push fwait in (bad) cmp sbbl dec hlt cmp inc pop iret dec int3 nop xchg daa lahf clc sbb jbe ficompl mov (bad) cmp (bad) xor xlat mov inc jns pop dec push push mov orl leave sub (bad) dec mov lret push inc sahf push pop (bad) cld add xor cmp mov adc into push push popf push pop xor fistl lea test std (bad) jno cmp lret or lret push pop nop ljmp adc push push jb and xchg pop shll mov xor dec pushf push xor pushf inc xchg cmp (bad) sti sti sti (bad) dec ret (bad) mov cld mov loope arpl movsb pop push fsincos push leave (bad) pop pop out xchg sbb add mov (bad) icebp cmc mov xor rclb pop mov mov dec rcll aam cltd sub pop sbb daa js sub push lret rolb lds ss pop sub xchg lock sub outsl dec and inc xor cwtl add lret inc dec les loopne aaa loopne sbb xor mov fsub adc jmp xchg xchg xchg in mov inc jl sub lock lahf loopne ja rclb xor out cmp scas cmp cmpsl cs arpl sahf int3 nop into cmc mov rcll stos test pop pushf push or dec lar add bound adc into mov loopne je divl out je test or push push cmc outsb insb idivb add add sahf in ljmp stos daa ljmp cmp (bad) stos push pop sarl out aam imul pop sti jo xchg jb cmpsl dec roll movsb mov mov lahf cli orb popf pop push int leave ret mov dec or aaa arpl std add sbb cli cli cli cli cli cli cli xchg xchg xchg xchg xchg or mov mov das das das das mov sub jnp pop xchg lret jb lret stc push icebp test lcall cmc cmpsl jae in imul aaa mov xor pop cwtl push pop cwtl pop dec dec xchg test mov and data16 mov xor push xchg cwtl push lcall xchg loop aas sbb jnp hlt xor xchg cmpl cmp pop sbb aad cmpsl repnz leave cs ds xchg cld adc add or jno stc stc jp sti sbb xchg cli add mov add aad mov mov or xchg push jmp cld lock (bad) (bad) jmp push push sub push mov xor lea xchg mov mov pop out stc stc jns fstl push sti sbb js mov pop popf cli push insl arpl sti (bad) dec inc push pop ret (bad) arpl mov aaa (bad) mov loope popf and mov xchg and (bad) and pop pop pop pop bound leave fiadd sahf pop test xchg adc and and test sbb jb lea or fwait lea mov jno aaa adc sub adc mov aaa adc fs ljmp movsb lds add loopne aas cld cmp cld xor push (bad) (bad) loop sub sub and movsl hlt xchg orl movsl dec jae adc jae cld pop xor psllq in cs ret repz pushf add loope hlt das push clc mov pushf pop das lcall inc arpl cmp aas mov add sahf jne push mov rcrl adc je xchg lea mov push lea mov xor daa dec nop xchg mov cmp lods stc jno repz push pop inc push push pop jecxz xor mov adcl pop jo addr16 sti sti enter incb shll insb mull jbe loope or push adc insl add (bad) cmovae lea in mov cltd rorb xor fs fisub ds pop rcrl roll shll mov test movsb inc cmp adc pop sub dec lock (bad) jb repnz jge sbb cmp cmp jo push pop and nop insb pop les dec sub loopne call bnd mov sbb pop loop xor hlt cmp mov lock (bad) js mov cld and jb or cmpxchg (bad) mov cmp fistpll jecxz mov std (bad) ljmp rclb imulb dec dec dec pop xchg notl or ret bound data16 cmp push sbb push loope add (bad) (bad) (bad) incl push push push lea or xor xor int3 lret jae nop addr16 pop es movsb sub jge sti stc stc jl pop rcr push push push cmp lret incb pop pushf pop dec pushf inc jnp test sub jo dec jno (bad) (bad) inc and push leave movl hlt sbb test jecxz adc adc pop adc nopl xorl rorl mov movsb jnp aas xchg sub gs mov (bad) lock lea notb aam pop mov cwtl ja jno xlat sub mov cld inc add cwtl push dec cmp xor xchg cmpb push add lahf push sub and fsub das or das or xchg popa inc (bad) test inc cmp cld and pop movaps mov lds jecxz es cmpsb stos daa mov push jne push sub jb xchg lahf shrb pushf pop arpl mov (bad) mov inc pop push add fucomi adcl je addr16 cmpsb adc push sub fwait xchg and cmp sbb add xor lods lods and popa std stc stc js stos stos push push in push mov jo sbb mov rcll mov jo push sub dec mov arpl xchg test push mov sub lods aaa pusha rclb mov enter aaa xor rorl popa lea mov cld iret movsb adc sub cmp add lds adc and cli aas sbb mov jge jns mov aaa add push test dec rorb call aad sbb cld xor (bad) imul jo leave (bad) add dec xchg lahf inc adc jo cmp mov xor jno loop pop shll jmp cs pushf pop dec sahf push or xchg add ret sti jb xchg int3 arpl pushf inc pop mov push push jmp pop cmp dec adc adc mov jecxz cmpsl jmp and ret jns push inc xor and and out in repnz lahf insb div outsl jp xchg stc idivb push push push ficom cmp testb xorl sti enter sti xchg dec push pop shll call popl mov xchg xchg popf and hlt mov sbb mov aaa mov lds pop jb cmpxchg sub adc fist xlat in les inc inc sub cli jns jge mov jnp cmp lret roll add xchg ret aad repnz dec test out addr16 mov cmp sti jbe adc dec sbb fwait enter push jg xor cld xor das arpl rcrb pop push jge sbb loop ja cmp jno lods scas cmp mov mov mov cmpsb pop sub (bad) dec dec dec es movsl shl cs jns push sub or and pop out stc stc and jno or xchg mov lea cmp jecxz pop dec dec inc and xchg cmp add (bad) pushl jns push push push (bad) pop outsb lea mov dec xor fidiv push fldt leave cwtl in adc outsb (bad) daa cli rolb hlt cmpsb push push ficom cmp adc xor jp call cmp mov cmp enter cltd cmp loopne popa cmp mov add add int3 iret leave pop (bad) xchg mov dec inc inc inc inc lock hlt sub xchg sub or add add mov data16 cmpsb jo call sub mov imul arpl add cltd lock adc (bad) adc (bad) cli mov repnz popf mov mov xor imul in das shrl cmp call pop cmp jg ja pop sbb xor sub pop test movl out inc mov repnz js loope pop pop shlb scas ss mov movsl imulb stc xorl xchg add mov stc stc stc jp push sbb mov sbb mov mov sarb mov cltd sbb or jno aad push jb aas ja inc ds xor add mov icebp adc test fwait and stc (bad) dec outsl sti sub push push push mov ss cwtl fwait pop pop pop sbb sub mov gs arpl sub roll and (bad) (bad) xchg iret leave int iret leave xor jne dec sbb pop pop cld pusha xchg xchg rcrb arpl popa fwait push fisub fsubp push cs das lods push or adc shrl sub pop pop ja (bad) clc mov add jo pop adc (bad) mov mov push push scas lods in mov inc xor jo ja push adc mov add imul aaa push imul inc xor pop aaa rcrl popw popa aam imul cmp mov lret int3 inc or ja hlt or push push fsubrl pop pop mov clc dec xor stos and movsb movsl movsl add add add add xchg dec addb std idivb clc stc stc xchg in pop bound lods push add add sbb cmp mov (bad) gs push cltd adc jnp (bad) (bad) pushl sbb mov out mov adc lea sbb sbb cwtl and stos jg jo test imul sbb adc adc loopne (bad) std rclb sti sti sti sti jb xlat dec xchg lahf dec nop out dec and or xor leave mov lds mov fdivs add out sub jecxz hlt mov push jns pop or leave out jo mov pop pop pop mov test imul movsb pusha pop movsb js jnp aam mov jnp mov lea cltd add fcoml aas repnz movsb outsl xchg test inc jne testl sahf pop inc add mov add loop iret jge ja and and pop inc lret push push in imul jg mov add cmp inc pop jae sub sub pop pop clc addl in hlt mov pop rcll dec dec dec lods jmp inc fcmovu inc pop push push push movsb cmp dec aam iret iret iret iret iret iret mov sbb (bad) sbb sbb (bad) call xchg imull stc stc test adc stc stc stc stc stc stc stc stc arpl in outsl cld sub lock out xchg stc mov jb adc cmp sarb decl aas jmp sti mov add pushf movsb and popl stos (bad) sbb mov rol bound jbe jne scas std pusha sbb cmpsb cmpsb pop lcall mov xor add or sub out out out out imul sub sub jp ljmp add mov dec clc mov pop fmull jno jno rolb call lock enter nop fucomi rorb orb ret outsl loope sub jno (bad) mov mov adc pop insl ljmp or lds xchg dec data16 cli pop ja mov pop pop pop pop rcrb repz cmc negl movsl in movsl jbe push rolb adc std mov addl out jb push inc pushl jp add ja cli jnp ret mov xor or ret rcrl push insl std mov mov lds cmp mov xor cmp cwtl pop pop in insb scas jmp push push jb adc stos stos stos fimul add add mov sbb inc std sti sti sti dec arpl mov popf pushf pushf loopne mov jns dec mov mov cs insl insl sbb aas je jne inc stos mov fcompl cmpsl leave leave mov leave inc fldcw iret adc adc fwait ljmp in cmp cmpsb (bad) movntps jnp add stc mov jne out push jle jae jno cltd (bad) adc adc in inc sarl dec nop repnz dec dec mov lcall xchg xchg xchg xchg sub (bad) faddl movsl movsl movsl movsl movsl ds cmp or cmp add daa repnz jle mov cmp mov int (bad) lods cmp stc cltd rcl lods repz jne ljmp mov imul pushf push push xchg xlat arpl push jmp insb add add dec xor into jne loope push pop push mov std je lea add cmp fstpl xor mov outsl adc inc jg lods das push jl (bad) lock push (bad) xchg push out push cld fdivrl pushf rorb (bad) aaa aaa aaa aaa aaa aaa dec mov iret inc or pop jecxz aas std cli mov test ret (bad) ljmp pop and fwait mov int rorb sub in xor ja ss pop pop popf sbb out out out sub sub jecxz jecxz out out mov lea jnp lea pop push lcall popa es or gs call mov adc loopne mov imul imul daa (bad) xor ds fcompl int3 loope sub sbb loopne cmp sub cmp ret ret sbb xchg mov cmovns (bad) popa lods sub popf and sbb xchg mov jb mov lods test call inc dec mov sub bound incb adc pop pop pop pop xor xor xor inc push push push push out nop imul mov sbb dec dec xchg dec aas movsb les jge imul stc stc push mov fdiv inc cmp inc jmp xor sti sti sti mov xchg dec inc jecxz jae arpl aaa inc addr16 imul adc adc (bad) mov dec mov outsl sub jge pop aaa mov or push jle mov adc adc insb xlat cs sub cltd imul call mov mov mov das add add fwait pop add jns cmc mov mov fisttp enter pop dec rcr fisttp or or mov popf fs (bad) ja ja or stos rcrl (bad) fsub aaa insl ds dec jg jg jg push mov test and xor fidivl mov cmp in sub test push adc leave or movsl xchg or test ljmp pop adc dec imul mov mov cmp xor push jmp decb add lea mov inc mov mov inc or ret add repz outsl das xor cmpsb jo shll stos stos inc jecxz je je pushf push xor inc pushf arpl rep jo adc cmp cmp inc mov and add loopne popl stos sbb adc jge xchg dec test outsl outsl outsl outsl outsl xchg xchg xchg xchg xchg xchg xchg cli pusha mov imul lcall js push pop mov inc aam test gs push jb push pop xchg adc (bad) mov daa cltd mov in in outsl sub addr16 popa ja gs jnp (bad) mov les enter xor mov mov adc adc adc movsl loop dec insl in test and inc mov iret jbe ja mov nop fisubl popa pop push int cmp xorb imul push xor nop aad mov stc (bad) hlt test mov fcmovnu fcmovnu fcmovnu fcmovne iret iret iret push push mov (bad) cmp imul mov xchg xchg xchg (bad) scas pop in (bad) (bad) (bad) jl push (bad) call xor shrb idiv stc stc stc arpl (bad) loop in jecxz or push push insl dec icebp cli add outsl add stos xchg mov push lods mov cmp bound rclb ljmp clc cmp cltd add or or call jns mov aam int3 push adc into std jmp dec adc pop and fcompl jp mov movsl movsl movsl rcrl (bad) mov pop mov (bad) rcl rcl jno out out out mov mov mov mov push shrl mov fidivr mov lods in mov scas bsf cmp adc fwait rolb cmp push jg imul and fcompl fcoms (bad) push add test jns add or dec cmp add mov push xchg ja xchg (bad) jo sbb fdivl mov add cs cwtl inc adc push cwtl enter roll jb jb inc lcall lret sub mov sub sbb into mov (bad) lds push loopne xor movsbl mov dec push (bad) (bad) mov xor je mov inc ret bound xchg pop lods jmp insb fsts sub nop ficomp push inc xor call pop popf pop push mov jo push lds dec pavgb and rcl rcl dec add mov mov xchg or mov (bad) mov jmp rcrb sbb sbb inc ss cli xchg xchg xchg xchg xchg xchg xchg and and and jl sbb lods loop cmpsb addr16 jl daa pop ja xor test in push imul jno daa xchg in mov or add and adc inc xchg xchg dec lcall inc loop das (bad) imul rclb int3 push (bad) fsub aaa sub aaa push loopne inc mulb sbb and lahf sbb cld xor ficompl cmp jmp jecxz das lods in outsb rcrb push inc std movl or lods ret jge stc pop pop pushf pop xor shr add mov jl pop (bad) cmp aas add sbb ret mov add inc pop inc mov cmp or cmp imulb lock jge cmpsb imul mov adc lds jno push mov test bound adc sti sti adc jo jecxz dec lds and mov stos out fldt aam test (bad) mov std dec sub xchg jmp pop or push add arpl mov pop sbb out fs pop loope das das lods jmp cmpsb imul pop jg mov jne jb rcl mov ret jno jno cltd xchg and test jbe pop (bad) popa mov sti inc or les rolb mov push xor xor aaa ja lahf xchg mov push sub in pop add sub mov sub mov ja jno lahf mov pop pop ficompl mov and int rcl mov jecxz pop adc dec (bad) fiaddl inc flds aas adc inc push inc pushl movl jnp mov arpl adc into mov push into push push cmpsl cmp je (bad) insb stc push lea push fucom enter icebp cmp stc stc xlat xlat xlat xlat xlat xlat xlat daa call pushf jl test lret add adc call push mov call js lret cmp aaa aaa or or or dec daa inc imul add or push mov in (bad) clc test xchg mov and fisubl pop ss pop pop pop fldenv fsubrl mov mov xor inc cmp sub ret loope test and aaa jge stos test pushf in gs pop mov dec dec lcall aam lret inc mov imul dec imul hlt or ja pop and pop insl imul or xchg lahf sbb ret add ret ret ret ja and cld xor or pop sbb xor mov es mov jecxz and pusha push sahf pop push inc inc (bad) mov adc cmp xchg sbb add add mov cmp sub daa dec ret jge lea je out (bad) test test push mov xor popa mov jns int3 dec dec dec repz shlb cmp shrl hlt int xor ret call (bad) add test sti enter mov arpl arpl (bad) in addr16 insl insl adc sbb (bad) or mov test daa mov lahf pop sub fisubl dec pop cmp (bad) popf sbb cmpsl movsl movsl adc fs jmp imul movsb shrl and sub xchg lods fimul in cltd inc sbb pop pcmpeqw das jge stos cld imul addr16 ss dec ja adc aam stos aam add out lcall (bad) fcoml addl add aaa stos scas das push xchg addb test xchg lahf and dec ficompl mov cmpsb cmp mov pop pop shll sbb dec jle inc or cmpsb sarb cmpsl cmp dec scas jmp ror icebp icebp icebp icebp icebp icebp icebp addl sbb mov scas scas pop popa add add pop jae cmp divb stc xlat xlat xlat xlat xlat xlat xlat pusha pusha stc cli daa fmuls jl lea fisubr jno shrb in lods lcall jle test xchg cli lods xchg das xchg cmp cmp loopne bound fs cli insb push xchg xchg leave test jne mov aam data16 pusha cld std nop cltd add xchg xchg xchg xchg cli cli cli cli cli cli cli or jle,pn fildll out arpl aas lods (bad) sub sub mov add inc clc addl push jne (bad) push lret lcall or imul mov nop insl push adc (bad) les call xor mov pop into fstp fdivl imul jg mov out sub dec ja,pt ja ja bound or cmc mul in jns pop pop es test int adc jle pop or jp push bound imul add add or or dec ret sar push add cmp push (bad) popa xor mov cmp mov jg fdiv repnz daa ljmp add hlt add (bad) jl cmp call pop pop mov xchg sti mov mov movl addr16 or jecxz sti xchg insl aam fstl in loop dec int3 out jne pop xlat movsb fs mov cmpsb daa jp ss ss popf or sbb mov adc lods jmp stos out push daa add scas aam div cmp and inc jb dec push inc les push push push mov mov enter pop aaa fist enter pop rcr fisttp or or or cmpsl cmpsl cmpsl cmpsl cmpsl loopne push addr16 lods dec mov pop jns (bad) pop push pop data16 cmc imul inc jo push ret ret ret xchg xchg cld add and and bound (bad) cmp xchg stos sub pop es mov or mov mov jo rol cmpsl xor rclb push faddl mov mov push or dec sbb lahf into mov lret inc add add movsb add popl (bad) leave (bad) dec adc push xlat imul inc aaa inc imul lods sub lods jo ror cmp in stos stos stos inc jecxz add inc call fcmovnu aaa cmp mov sub into mov repz xlat mov pop pop sbb scas mov xchg fdivrl lods daa int3 push pop pop shlb inc (bad) enter cmp shrl inc popf pop push pop out out cbtw jmp cwtl add (bad) adc pop mov dec xchg lock ret leave mov jb inc stos clc cmp cld jecxz sub in aaa mov cmp xchg pop test inc mov loopne call pop xchg fdivl ljmp jg xchg or out dec xchg shll mov push dec cld mov popf push fdivl add cmp mov cmp xorl xchg rcrl lds mov jb jp push (bad) cld sahf push adc dec add dec outsl ret insl rorl push xchg cwtl xchg xchg xchg push adc push loop (bad) decl stc stc hlt fidiv repnz xor aaa fdivl adc sbb lock stos mov inc sti adc sbb xchg adc (bad) mov pop pop (bad) cld adc and sti sti jo inc es adc loopne inc adc out adc (bad) (bad) (bad) mov (bad) mov pop fisubr fiadd stos fdivl ss orb mov mov or lods rorl pop jmp fdivr push test mov stc fwait push fldcw adc jno jbe jno jno mov in in fbstp add mov sbb mov adc cwtl addl push jo aas dec pop cli cmp es push xor sbb test arpl cld add jg in test dec mov (bad) xor (bad) push jne sbb cmp xchg xchg dec out loope popa test and adc popf mov cmp xchg fucom jb xor sub popa adc dec daa and jns push sbb sbb xchg push (bad) mov (bad) mov (bad) pop inc and das inc jne icebp cmp fnsave mov lret fcompl sbb lods inc or (bad) mov jl mov add fcomps pushf test ljmp xchg rcrl xchg push hlt jg repnz sti dec and enter lods mov and movsl xchg mov lret stos (bad) adc push sbb popa vpshlw push mov add pop rorb xlat sub pop pop pop pop xchg insb sub insb shll push dec xor sub mov daa je mov jnp push je (bad) or lcall jno hlt mov out lahf (bad) imul adc mov inc in inc aaa cld dec sub add inc xchg bound cld xor js addr16 adc ds pop sbb push loopne dec outsl cld cmpl je mov stos ss mov xchg pop aas rcrb mov mov hlt fldt ljmp push cs dec addl jmp scas xchg (bad) dec cmc lods jmp lds push dec jae inc imul mov jge dec dec rolb sbb sbb fstps add std (bad) ljmp push roll push xor jb gs xor sbb outsl mov imul loope sub push push push mov xor fdivrl jg pop pop sti hlt jg stc sti sti sub dec mov dec mov call arpl lods pop sbb jnp test add scas mov es sub rclb adc addr16 bound (bad) mov sahf push push loopne jecxz out das movsb imul and (bad) mov xor ret mov push aad cltd inc sbb push mov jne clc test lock out or inc popf cwtl push aaa sets shrb mov loopne stos andl add repnz push cmp xchg cmp cld mov inc pop (bad) xor js dec rclb notl xchg mov cmpsb jg in xlat sahf push xor lahf mov sub rorb jb pop jg sahf inc pop addr16 inc imul add cmp and mov inc enter xchg lcall mov jecxz pcmpeqw stc sub cs jno and adc nop repz fist sahf inc mov lods jb fucomp (bad) dec jmp mov adc cmp pop xchg xlat adc or fisttpl adc dec xchg out insb out mov enter mov sbb push or dec dec mov jbe pop pop aas fisubl mov add stos pushf stos push lcall arpl aas jp aam movlps (bad) xchg je adc mov ficoml mov push popa addr16 lock sub mov xor xor or popa rcrl das jle cmp cmp test mov je pushf je sub add cwtl pop test loop dec pop repnz das adcb pop jg lcall rcrb mov push sub xorl aad int3 (bad) pop mov mov in adc call xchg jecxz add ret push in ds cli jns push dec dec dec dec (bad) (bad) push ret ficompl lock std stc stc add and mov mov pop jae fldt daa jmp scas jmp sarb stos stos (bad) push pop (bad) xor mov adc pop lcall mov insb or mov xor add out (bad) add loop clc xchg jp mov mov dec xchg cmovp vpmacssdql sub xchg mov pop sahf xor jbe pop pop rcll jle sub out call das movb add add sub mov pop repnz negb jge lea lret aad mov ja jno cli stos mov pop xor adc sbb pop cmp cmp ret jns imul insl add arpl and scas and dec inc loop dec imulb jae sub dec mov dec rorl jae xor sub cs push jne mov arpl roll mov adc (bad) lea iret xchg jb std jo fucom pushf dec das pushf pusha sub sbb inc cmp cmc dec dec xchg xchg inc jne fcmovu mov cmp sti jle (bad) (bad) in push or popa mov inc cs popa aas or in aas xchg daa inc das push jge std stc stc ficom jno pop jecxz clc xor pushf test jbe cmc pushf pop inc scas push sti sti sti sub jo add iret popl call dec xchg pop in push push popf push dec mov sbb cwtl mov push out mov bound jp in xchg pop nop loopne out out out cmp arpl (bad) imul ljmp xchg js lock lock test (bad) mov cmpsl pop sbb cltd mull enter adc gs inc aaa sub inc sub inc jnp imul dec jnp shll xor push cwtl clc rclb mov mov stos jl (bad) jle ret ret adc dec or mov cmp push mov mov out adc cmp (bad) cmp dec lods stos mov (bad) mov int pushf push adc or cmp pop sbb repnz ret mov mov xor dec cmp sarb roll add add ret scas scas lods jbe and popl es jb lret jno icebp cmp sbb sbb jecxz and in push mov in jo fucom xchg push inc push push push mov adc sbb pop pop adc sti sti push mov cmp enter subl sti fnstenv mov pop jg xchg add scas mov repz testl cmp rcrl jle push in dec and bound adc in mov jnp jnp insl lds dec jno imul sub ss jo in in aas push cmpsb iret aas mov neg sbb xchg dec (bad) les mov loopne dec pop out push addr16 mov push in xor sbb pop test imul cmp jo outsl orl rorl movsb xchg cld cmp iret jbe pop pop pop mov imul mov lcall mov jno jl stc stc stc jb (bad) (bad) pop sbb daa mov and mov testl mov sbb mov push pop out mov sub adc push lea movsl mov cmp adc sbb and insl jno inc fnstenv je fucomp stos test fidivr push mov adc pop pop pushf push xor sbb mov dec and dec or insb aad pusha mov inc aaa mov sbb dec (bad) mov lods adc xchg or pop fdivrs cmp xchg sub lret repnz add movsb (bad) out lds and loope rolb sarl (bad) lock pop mov pop int3 lcall cwtl jns jno cli mov add pop sub add mov pop addr16 sub pusha sub mov dec and out dec jnp cmp lahf hlt sbb pop xor pop and imul leave outsl hlt mov popf addl mov sbb xor dec add sub pop mov mov push sti nop data16 loop jbe mov sahf push cmp dec mov cmp mov loope call add mov jb insl mov sbb or (bad) lds mov push fstpt (bad) or mov sbb push in popa aas punpckhbw nop pop aas mov inc stos (bad) xor fucomp jb adc outsb jp mov ds xor sahf inc push jo jno jo (bad) dec (bad) xchg jecxz call loopne mov ret stos stos cli ja aad popf pop out jne add add add and out cmpsb cmpsb leave mov bound (bad) xor add mov sub call sub sub nop mov mov mov fidivr dec and stos fdivrs mov cmp call push cmp into xor xchg xchg xchg xchg sub mov mov fcoml dec pushf faddl sub cli sub out jg loop jg pop add pop xorl jbe jne pop pop pop pop pop pop pop mov mov ds mov aaa in repnz in jp push adc xlat or movsl mov fidivl in fisub pushf push xor mov insb ret stc xor dec dec dec cmpsb push lret push sub mov lret lret lret stc mov or arpl jns gs pop pop nop dec pop nop add xchg daa test and roll jo fucomp jb pop ficomp pushf in idivb call scas ffreep jo rorl jecxz dec (bad) jmp aaa inc dec call stos mov (bad) mov sbb fiadd (bad) scas lret fisubrl testl jecxz pop ss mov jle shll data16 out das movsb imul cld iret popa mov jg xor repnz pop dec push jb (bad) lods (bad) cmp fist push dec jp repnz cli mov test pop adc xor mov sbb pop dec rclb add mov pushf pop mov movsl test sub int3 test data16 mov jg jle jg dec (bad) out dec or push and jp pop mov notl cmp dec lods stos adc (bad) ds add hlt movl add jno adc sti stc pop (bad) incl xchg cmc sbb sub (bad) dec das xor (bad) sahf lods les mov xchg dec push push popf je inc (bad) (bad) (bad) call out and popa out push iret mov cmp cmp lods pop sbb das imul jo jno push (bad) (bad) xchg mov hlt pushf mov in xor xor pushf add repz dec bswap jno adc in lcall cli mov iret orb nop xchg xchg sbb and mov sub xchg mov dec cmpsl mov cmp xchg push in cwtl mov lret repz aas pop call lret and jg aaa adc jp,pn push inc pop outsl push dec xchg adc mov mov arpl and test gs adc xor mov sbb cwtl adc out cmp dec mov add je cld mov clc in aaa loopne dec jne mov jg hlt xchg call dec lock ja cmp rcrb call subl pusha push (bad) jns inc sbb add (bad) mov adc call dec mov push call movsw dec xchg imul mov jb pushl (bad) mov mov jae mov jno popa inc or adc repz jg sbb in lods in ljmp or jno mov jo aam in add jnp inc popf mov push cli dec (bad) mov dec or test loopne (bad) stc mov cmp cmp gs pusha pop addr16 pop adc adc jge pop sbb mov ja rorb sbb test jmp add lock inc or ret mov rep clc xchg jge int3 mov add mov into mov repnz jno in xlat cwtl enter movsl aaa aaa aaa mov cmp in in cwtl add push lret jb lds jecxz push cmp aaa xor popa js xchg fstpl dec cmp xor cld xchg sbb mov dec xchg jbe xor popa hlt mov cld rcrl pop pop cmp xchg cmc cs cmpl mov inc sbbl (bad) (bad) (bad) adc call insl mov sbb sahf or push xchg mov fucomi je ds add add int cli lea mov into cwtl fldcw jmp mov ficom jno jle mov xor pop pushf push xor sahf inc add jb (bad) movsb movsl cmpsb dec lahf lcall scas scas scas scas scas inc add stos mov sbb mov ret jmp sub inc sahf sbb pop ss rcll push rcll jp cmpsl (bad) cmpsw ret cmpsw pop cmpsb addr16 cmpsb adc sub in cmp sti jnp repnz (bad) (bad) pop pop and mov test call mov inc sets sbb jecxz xchg clc dec pop popa call and jbe ja movsb cmp push lods loopne dec adc push mov cmp cmp add mov xchg xchg rcrb dec mov add xchg stos nop mov imul scas jb (bad) sub sbb mov cmp dec aaa cli jnp sbb xor xor mov xchg push (bad) mov and je outsb and push pop xor lret icebp cmp repnz cmp in inc fcoms arpl jo icebp push mov scas mov xor pop push xchg negb lcall jmp dec mov pushf pushf loopne mov rorb stos ret mov dec (bad) add xchg aam pop pop pop pop cld pusha loope cmpsb cmpsb cmpsb push lcall cli rcrl jle rcll jle fs inc and xor out cmp out mov mov mov int3 lea fsts fcmove dec xchg xor xor jmp and sti bound inc sub inc cwtl jmp jge mov dec mov dec xchg dec shrl imul cld cmp sbb push pop sbb push das pop push lods sbb ss cmp mov rorb out iret jbe ja movsb xchg (bad) aaa imul fwait cwtl enter lea out sbb fst shrl mov sarl cmc cmpsb sahf jns sahf push cmp ret pop shrb xor aas mov movb (bad) sbb ret movsl sarb (bad) (bad) (bad) jl or jbe mov repnz xor pushf repz cmp sbb adc jo mov pop pop pop pushf pop cmp xor mov cwtl cltd hlt pop lcall scas inc inc inc add stos mov jle lds push popf push lea mov pop mov pop fisubl push pop push mov and pop das push fldenv pop pop loopne or out out insb adc sub sub sub sub jg lock cs movsl add test adc dec clc cmp enter enter adc lock pop adc adc nop jmp lret inc mov (bad) les imul xchg dec repnz aaa ja or fsubrl imul jg subl inc adc inc mov ja js xor xchg mov divb mov pop mov inc push push sbb out sahf or stc xchg stc xchg stc adc stos call jge mov das lds adc sti jns adc (bad) sbb pop movsl jg push push (bad) mov jl out and inc push xor xor and xor jb sbb sbb sahf fldt imul push push push push movsbl clc idivb push push push pop jecxz jns mov jae push pop adc and scas or sti sti or jle mov dec adc and pop ja daa stos iret add stos lahf dec rorb jnp lds mov push bound mov bound jge aas mov jb pop pop loopne pop out out cmp test test inc das cmpsb js movl getsec lock pop addr16 push outsb (bad) push push xchg adc (bad) adc inc clc outsb repnz inc aaa fistp add mov jne fwait rclb inc loopne sub call out mov ja js cltd fcoml (bad) and scas popa sub mov sub cld subl inc cmp repnz ja lcall cmp xchg repz mov dec aas add xor or push jo push push pop pop adc mov pop ret push aas mov sbb (bad) or lds das push je fninit jl repz xor xor xor mov adc sbb adc or sbb mov xchg pop adc fsubr pushf test inc cwtl lret push aaa xchg xlat arpl jb decl jmp (bad) mov dec aas inc jg test mov xchg lahf dec jns clc xchg pop (bad) mov add scas stos add xchg sub inc or mov jecxz leave mov sahf push rcrl sbb call les push shrb bound scas test jnp (bad) cmp lea inc pop jp sbb cltd test repnz cld sahf or stos int3 imul mov in adc adc in pop add addr16 sub ja ja add cmp sbb in dec dec loope pop pop hlt cmp das sub cmp xchg push imul jnp xor (bad) push sahf pop mov mov inc hlt mov rol es xor sbb add mov mov sbb adc sahf push daa adc mov sbb lea dec les xchg xchg xchg xchg mov ja fninit ds push insb add dec and mov (bad) mov in dec aas pop cwtl fbld ja movhlps jb fnstcw push xchg adc mov pop pop loopne pop pop adc sti hlt jg sti sti (bad) dec addb mov push fldt in sbb mov pop out add lcall xlat lahf sub jns adc push sbb cs xchg popa nop cltd jmp fs movsb jnp sbb outsl (bad) movaps jle xchg js jnp lock test xchg push pop xchg insl fisttpll add clc addr16 fild enter aaa setp push loopne inc add out adc push loop push addr16 or ja pop pop rcr fcompl fwait sub imul jg cmp lret ret ret int3 inc dec ja ja movsl js cmp cltd push add notl sub xorl int mov dec (bad) jecxz mov ret fs mov and jge imul insl dec cmp (bad) mov scas push out or push jb lea adc addr16 (bad) lret popa adc cwtl fist xchg pop add call scas adc fstp stc jo jno pop (bad) mov mov lcall rclb sti sti sti sti cmp mov add shlb xchg and arpl push (bad) xchg xchg pop inc popf push cmp dec pop out xchg jecxz sbb jns jp push mov inc jg adc push jle fldt fwait cmc mov pop cmp mov jg test lock lods lcall dec mov leave xchg popa in out in in cwtl cmc addr16 and sti add fadds enter loopne dec jg cmpsl je hlt or fcoml clc int3 shr inc imul cli mov out ret ret ret mov jg ja sbbb pop pop pop pop sub rclb test push adc lret add les jmp negl mov ja mov jge jge mov jl movsb and dec cmpsb arpl (bad) mov aas mov je out decl test pop (bad) dec sbb add pop xor repz in daa loopne loopne clc fucom jo loope mov xchg push pop mov mov add xchg jmp pusha sti sti sti sti jle enter mov call or xchg mov (bad) mov adc push inc or pop mov inc dec pop xchg rcrb xlat adc leave pop pop pop xchg fwait mov (bad) jmp mov aaa cmpsb outsb pop sbb sbb in sub sub clc add jnp or (bad) out lock mov and hlt gs fsubl adc mov cmp xor adc adc lret inc cs les adc imul cld mov pushf imull fsubrl sbb imul hlt cmp int3 inc add ret ret js xor mov lahf push sbb imul xchg mov inc outsb je sahf (bad) xchg hlt adc cmc (bad) iret or test jns mov lods push pop (bad) cld adc add sub aam ss add add mov jle push xchg xchg std push stc hlt push push (bad) in add add xor aaa fadd aas xor pop fcompl xchg enter stos mov lods stc cmp sti jp sti mov ficomp dec imul aaa fs xchg (bad) fnop sti sti hlt jno (bad) dec or sub movsl imul mov or scas loopne sbb push gs scas jne mov (bad) xlat mov sbb inc shl ja fbstp adc sub loope out out movsb push cmp sub or fldcw (bad) mov pop clc xor jle inc out in addr16 mov inc inc sti shll adc loopne in and inc das dec dec push push inc cld and hlt sbb fbstp arpl ljmp jo add jne ja mov lahf push sbb adc dec mov es mov aam adc adc loope push jb jp out negb push xchg (bad) adc call (bad) jl and les adc inc insb push push insl mov add mov push roll xor pop push jp inc jnp jl cwtl in push sub lods lods (bad) dec mov mov (bad) xchg pop adc xor pushf test inc adc negl mov dec or shlb and call mov xchg test sub int rolb xchg pop pop shlb cmpl pop imul (bad) push test sub cmpsb fs mov imul mov lret lret lcall cld add xchg add loop in mov repz lcall inc adc (bad) les add cld xor je pop dec fwait mov pop (bad) (bad) imul imul xor inc dec mov sarl xchg das lea popa mov movsl stos adc movsl cs cmc sahf pop inc pop add (bad) pop cmp sbb pop push sahf inc xor pop and mov (bad) mov cld aam xor pop jbe cmp test insb out mov push or sbb xor mov cmp pop sbb das push mov fucomp pop jecxz faddl jno orl mov je push jg cld cmp popf jo fucomip popf jb xorb bound add jmp add popf and pop rcll mov stc mov cs push pop pop cmp in rcll jle adc sub in aaa bound or adc pop icebp mov push mov mov lea hlt adc jp sbb clc cmp enter xor aaa jne ljmp loopne mov dec sub fwait sbb rcll ja ja push rcrl fcmovnu fsubl sub loop mov push xor sbb (bad) xor and dec xchg orl mov jae cmp xorl (bad) push cwtl push xchg push idivb (bad) stc stc mulb (bad) (bad) mov das dec add ds jl js sbb jbe aas dec inc jle push push jne jl hlt jbe fistl (bad) in add push hlt lds add and jno adc nop push jae fs jmp scas jmp ret jle rsm stos (bad) sub push int3 mov sub add add scas inc mov mov and pusha and mov out or adc mov cmpsb mov sub into test mov bound or adc lahf mov es das das (bad) pop and sub pop dec (bad) mov test popf pop fiaddl cwtl cmp jno andb gs xor push dec inc inc cwtl pop movsb add ret (bad) loopne (bad) out and and jnp fcoml clc hlt pop lods jno sub or cmp add fisttpl (bad) ret sahf mov ja jo pop pop pop fisubl iret xchg stos mov movsl movsl xlat repnz xor inc xor or xchg or cmc jb xor inc sahf aas sahf dec pop push mov dec add cmp ret or (bad) sbb push mov mov (bad) push and test push mov jno and xor mov jg in outsl jb jb mov std fstp popf xchg mov xor pushf lods sbb push lcall sub jg ret enter call sub lds xchg xchg inc jb (bad) add scas lcall sub out nop mov clc inc cwtl ficomp out out inc pop loopne push das das das movsb out (bad) and popf mov aaa pop pop je inc mov test mov fwait lcall push push cmp das aas add mov daa xor mov cwtl pop fwait add jb loopne dec orb andl mov mov mov sub pop push rcrl fldcw data16 loop lods lahf hlt xor mov lret rcrb (bad) mov xor js nop pop xchg loope pop mov pusha push cmp xchg test sub xorl movsl scas (bad) inc or int std js mov pop sbb and lds mov adc cmpsb mov push jl lcall jbe (bad) (bad) into (bad) out push (bad) jp mov inc repnz xor pop sbb mov outsl adc cmpsl lods lods lods inc xlat std stc stc push mov jno xchg adc mov pop sbb jb mov cld aam mov mov adc (bad) push ret xchg xchg xchg test mov inc pop inc jmp mov dec bound jle (bad) mov pop pop pop pop mov test cmp add call sub sub test xor push inc push lret mov adc jae xchg (bad) mov dec and jecxz (bad) xor aaa cmp (bad) repz mov mov push imul cld cmp xor and int3 xchg lcall push fsubr loop test popa leavew mov cmp inc or int3 inc iret ja ja mov adc jp call cmpsb jmp xor lods adc adc int mov adc xor (bad) incb adc mov mov pop mov mov or inc inc and push scas push jecxz jp lock cld push push or out mov mov cmp ficom sbb fs lods stc stc sub jb fnsave faddl jno sbb add pmuludq cmp pushf pop inc jo jp mov iret enter daa inc inc pop movsl adc cmpb stos mov inc jns arpl inc dec arpl dec mov out xchg sbb jbe jbe mov sub pop fs loopne das cs aas lods iret and arpl sub sub lock (bad) mov (bad) lods or push aaa cwtl lcall mov sub test adc or pop popa repz pop pop stos (bad) les and dec test sub mov cmp cmp (bad) fist sub dec aas mov ds sub ret add popa ja ja or pop push fisttpll pop mov cmp xchg fwait cwtl jmp loope aam sub aam pop mov lds jmp int pop aas sahf push xor sub call add cmc jb,pt mov imul fcmovbe sbb mov scas ds je adc lea and mov jno add aas add fisubrl daa insl and xor fucom jb jno jle ficom pushf pushf xor clc xor pop pushf pop xor jno add (bad) dec iret xchg shll (bad) loopne and lret stos stos orb xchg xchg xchg push xchg adcb mov mov pop pop rcrb jbe jbe,pt push jle rcrl jle sub std out out out (bad) cmp das das lods push and and pushf sub jnp test pop (bad) pop (bad) or mov lcall mov xor xor mov pop inc xlat mov push aaa or test lds inc out stos pop pop cld cmp cld and mov adc mov sbb aad adcb dec (bad) out cld and (bad) xor popf push rcrb imul notl lea data16 xor dec inc pusha xchg (bad) inc or cmp icebp js stc call pop adc mov ret add push jp dec xor or xchg jle cmpsb dec int3 or clc out incl test push or mov and xor cmp sahf leave mov lods mov aaa sub pop (bad) xchg pop adc xor pushf test inc cwtl imull or jo fistpll adc movl arpl fs xchg orb bound sub insl int3 iret rcl or dec add xchg sub xchg adc mov pop shrl mov mov in out out das jo jmp in sbb sbb in sub sub mov add dec leave mov adc push push movsb loopne mov daa mov nop insb cmp lcall lret jae inc loopne dec pop dec daa add cwtl clc hlt push cmp adc test arpl ret popf sahf cwtl jnp cmp mov hlt mov mov sub jge cwtl fnsave mov mov lret lods adc add or mov pop (bad) leave jp jmp pushf pop sbb push jmp xchg ret xor push data16 push sbb out cmp jbe lea icebp fcompl push cmc mov cmp sbb sbb lret sbb nop and mov jl (bad) (bad) jp jno push and pushf mov jmp dec inc add add js jmp dec and cmp cmpsl dec add jo jo adc push pop fistl enter jne jecxz cmc or pop mov sbb lahf jbe es jbe lahf lock icebp sbb ljmp das mov xchg jns imul (bad) cmp aad lea and (bad) fisub ficompl mov lds jno pop lods in ret aaa fiaddl push adc movsb push adc les test mov (bad) sub fidivl ja ficompl adc movsl movsl sub or cli mov inc add inc cld cmp mov insl fcompl cmc fwait jecxz je popa lods cs sahf inc cmp sarl add ds stc and dec aam jmp ror iret icebp icebp icebp outsb mov sbb enter lea mov or jnp (bad) (bad) incl lea adc bound cmp inc inc inc mov imull xchg cmpsb (bad) xchg stc xchg stc xchg stc mov add call inc cmp cvttps2pi arpl push add cmp lds pop lahf rcl dec mov sub insl jne dec add mov mov sub insl pop mov or mov push add sub das jno out je movsb jge jl cld sub sub push dec addl fcoml das inc mov mov push adc adc mov sti sti sti sti sti sti sti (bad) fistp add fimull fsubr stos pop jl sub add cmp push xchg cld sbb imul addb dec int3 lock xor add and cmp pop rolb add movsb pop ljmp jle addl sub push lods adc add sub mov jge jns xor adc les push sbb stc mov adc jnp (bad) (bad) pushl sbb (bad) mov xor xor xor pusha daa push repz imull xchg in lea popf (bad) mov xchg adcb or pop pop sahf push sub cmp in jbe add incl lods dec bound pop jmp outsl ja mov mov arpl jmp mov dec lea nop pop pop pop and rclb dec pop ficom leave leave movsl pop pop push jae pop out stos out fs sub jne jbe (bad) aam test mov gs jb push dec sahf adc xchg les out cs jb jno in fildll das mov leave enter hlt add (bad) (bad) (bad) or or or dec outsl out stos pop jo aaa imul add in test imul jg dec mov cmp add (bad) btc and shlb mov mov roll and dec or mov jb fnstcw xchg sbb imul add cmp push or dec sbb inc push jge push cltd adc mov jl lret inc inc and push push push xor adc xor nop push cmp (bad) cld push jge push jmp fiadd jge adc ljmp dec dec scas jmp call xchg lret faddp (bad) xchg jle mov mov (bad) popl ret add xchg xchg xchg adc mov clc mov mov (bad) jb je pop pop pop add into xor mov push pop pop pop rcrl push shll fildll das das out (bad) sub sub mov pop lock popf cmpsb dec mov pop bound je jno cmp imul adc adc (bad) icebp inc inc inc sub out les loopnew dec jae push inc (bad) push imul sub sbb test addl xor mov mov (bad) (bad) pavgusb cld jecxz pushl ja cltd push out xchg rcrb jb out or pushf push xor push xor or movsl int (bad) jo (bad) sahf push xor inc daa arpl ret push mov xor dec dec dec fstpl repz mov jb mov inc cmp mov test xor xor addr16 push lods fldcw mov jo fucom ret add add jno cmp cmp (bad) pop pop pop and jno scas fcomip jo cmp add das inc outsl ljmp push cwtl adc mov dec clc and pusha sbb aas fisubl or mov adc js fsts repnz xor jnp pop insb clc mov sti pop popfw lret data16 cwtl jno sbb jb mov dec cwtl enter gs adc lea aaa aaa aaa cwtl rcrl pop push pop (bad) push out adc xchg fs push out ja repnz mov fldl2e xchg push and mov and mov inc or hlt mov mov mov rcrb mov mov mov cli movsl ret cs pop adc aad out int in add mov jb frstor pop pop and xchg int3 add cmpb cmp imul and add repz mov dec stos mov push push popa popa pop jne testb repnz xor in es inc lods fdivrs cltd sbb stc ds adc fsubr pushf xchg push addl cmp mov and (bad) arpl (bad) (bad) fs add stos ss xchg xchg sbb mov dec into scas cmpsb cltd mov xchg sub jge pop pop pop sarb mov jp dec loop pop pop pop cmp mov fadd sbb mov rdpmc mov aas pop push repnz pop int jb clc xchg xchg sbb jae jno cmc push aad in in gs enter das mov movsb adc out cmovl mov mov push addr16 (bad) cwtl clc into aaa icebp mov add data16 cmp cmc jae hlt sub mull cmp adc xor mov push lahf sbb cmp xchg mov jmp xor fisubr push arpl dec or push jb fstp sahf push xor and add mov test (bad) add enter push (bad) mov sbb (bad) call out ret jb xlat fnsave cmc inc ds sbb nop xacquire inc das call push push stc stc lahf clc mov adc sbb cmp in xor sbb jo (bad) hlt dec (bad) dec inc jecxz mov xor das stos xchg add mov stos xchg insl add scas lret add xchg cwtl xlat xchg cmpsb cmpsb fsubr inc xor push jle rcrl jle (bad) lret shld add xchg sub sub cmpsb aas add fwait inc das pop addr16 xchg add fld (bad) sub pop in xor repnz jb xlat mov mov ss adc (bad) repz in inc js push (bad) les loop dec push push jns or (bad) jb (bad) pop push (bad) imul cmc jg jg jns jae dec int xchg xlat pushl out cld jno adc cwtl mov mov cmp xor pop ljmp orl dec aas mov mov pop xor mov sbb mov imul push (bad) mov je int3 and mov and (bad) (bad) mov fnstsw cmp sbb sbb jg sub stos jge jl mov jl and sbb jo push int xor aas pushf fwait xor ljmp mov xchg add cmp ds repz int iret sub or dec inc outsl outsl outsl outsl pusha outsl outsl xchg xchg xchg xchg xchg xchg xchg cli cli cli cli cli cli mov pop jecxz out out out mov sbb dec cmpsb pop lods jmp test sub idiv repz jnp xchg lea adc jae add cld repz (bad) in in in add push mov nop cli adc stos (bad) les imul loop (bad) ja cmc je (bad) push pop insb jg imul jg mov (bad) (bad) (bad) pswapd es out arpl or shrb add mov xchg sahf outsl sub xor adc or stc jb jno sbb pop sbb pop lods gs dec das dec sub test dec ja mov loop mov je add or sub sbb mov sbb and stos hlt mov jb fucomp jo lds pop push push faddp call hlt pushf add sub imul fwait int3 mov aaa inc ja roll and roll sbb and orl outsl outsl outsl xchg xchg xchg xchg xchg xchg fcmovu push arpl mov rcll push mov fs jnp add sbb repnz pop push je stos push inc dec outsl popf xchg adc stc xor jno stc test in in gs cmp aaa mov adc les nop iret (bad) (bad) pusha imul and ja jecxz adc fsubr adc imul sub jg incb dec mov imul pop pop push aam pop pop add mov push xor push in pushf inc xor or movsl mov adc jb fucom pushf pop xor pushf push sbb dec mov jl repz cmp xorl mov sbb push std cmpb stc (bad) dec cmp push loop ds dec adc nop das lods adc daa aas scas bound push out stc stc jl and loop rclb mov outsl mov pop pushf imul js fucomip (bad) js jecxz (bad) mov dec cmova mov (bad) (bad) popl stos mov ret insl sbb mov pop ds mov mov aas (bad) adc cmp mov pop das push insb add aad pop (bad) stos addr16 xchg aam jnp sbb xchg fwait xchg sbb pop ja iret cli and cwtl popf gs enter add add inc aaa setbe addr16 sahf push les xchg xchg daa dec jnp lcall mov lock loop in loop inc test addr16 jae dec sub sub insb sahf jbe fbld ja xor dec dec call mov fnstenv add pop add or movsl mov cmpsb cmpsl movsb dec xchg (bad) aaa aam fcmovne iret iret iret iret iret iret icebp icebp icebp icebp mov sbb inc cli xor dec push rcr out add add add inc cmp xor lret sbb ja sbb aaa lods lods lods jb fucom jp call fmull jno fimul pushf cwtl xor pushf test pushf rcrb les cld add imul mov test insl push or orb test dec fisubl leave mov cmp fstpl movsl fstps cmp pop and das cmpsb pop sub cmp ret jnp add jo test lcall xor sbb imul repz rcr fist lret jae (bad) xchg pop popf cmp mov das push imul clc enter push pop insl in test (bad) cmc jg jg add int3 dec or mov xor and rolb mov mov mov movsl movsl movsl xor sbb xchg (bad) je or fstp jo xor sahf arpl pop push cmp or jl cmp mov dec dec dec rolb lahf xchg xchg je inc jmp push push push sub outsb cmp xor stc nop push adc mov lods lods mov add add stc stc jb in fisttpll push cmp mov and scas pop pop pushf inc pop lahf or jo inc in sti sti (bad) scas (bad) jbe in or das pop xchg add stos stos jmp xchg xchg sbb mov popa sahf in add sbb test inc aas push shl pop pop xor mov shrl jle loopne mov adc push mov das stos std and adc addr16 out jnp (bad) cmp sbb adc mov jno pop xor daa gs enter cmp adc cwtl in (bad) hlt dec mov mov imul repz ja packsswb shl mov shrl sarb imul imul jo pop jg ret ret ret (bad) addr16 mov adc mov or xorl addl stc stc jb imul adc cmp mov mov sub inc dec dec mov pop xchg xchg test les sbb js or xor mov lea lods andl mov xchg in (bad) dec int inc push push ficomp xor pop pop push xchg out dec jmp xor jecxz dec das push fistpl stos lahf jns hlt sbb cs mov sbbl mov mov pop xchg ficompl mov pop and shll mov push xchg cmp das and sub inc jp outsl je adc push loop adc xchg adc addr16 in test pop cld (bad) daa push in mov lds adc je rol les mov iret popa ja hlt mov fidiv pop xchg arpl loope jg jg outsl jg jg dec aaa ret ret ret int3 je mov ja pop test xchg shlb mov mov cs jbe cs sbb add cmp in jno rclb add mov add sub icebp pop dec dec dec and pop repz jnp mov jecxz mov mulb mov adc xor fisub push mov xor adc daa rorb aas add add fucomp inc push push (bad) jmp inc imul pop jno scas scas add sti hlt dec arpl mov fistpl or aad ss (bad) popl fwait sbb lcall pushf mov mov push lcall ss mov pop mov pop pop out cmp mov pop push cmp das lods out sub add sub sub xchg mov movsb inc inc add test sub lcall jns in push cli in in cmp aaa cwtl imul cvtpi2ps lods ror jb jge imul arpl adc imul lret lret fnsave (bad) xchg xor repnz dec jae aad ret cld add pushf pusha adc loope push pop pop aas pusha push aad or movsl movsl movsl flds shl xchg in sbb or test jb pop jno scas scas add add cmp and and hlt adcl mov ja lock mov outsb adc (bad) mov sbb jge stos mov mov dec inc out stc stc jp push (bad) jmp hlt pushf lods mov inc xor xchg fisub inc jno sti sti jbe mov push mov fisubl arpl divb xchg mov outsl adc scas xchg mov es pop pop pop cld pop add ficompl cli cli cli addr16 pop fldenv lret sti mov das das das push jne pop rdpmc stos mov lock pop outsl push lds mov leave addr16 cli and fs in test cmp aaa cwtl pop pop cwtl inc sbb js les add aaa dec push (bad) addr16 mov push sub pusha jg imul jg xchg arpl sub fildl cmp cmp movsb xchg adc iret dec pop pop ficompl movsl mov cmp sbb scas imul xor pop or arpl leave xchg jo fucomp lahf lock add mov mov sub push sub sti aad pop dec dec (bad) fldl mov out je inc jmp adc and (bad) mov sbb jge stos mov mov mov sbb push push (bad) xchg push xor add mov add pop xchg out testl dec (bad) rorl inc jae push fistpl pop aaa test sbb test sbb dec rorb push roll mov ss xor push jle jmp lds in (bad) sub fwait xchg cmp imulb xchg xor pop sahf adc es inc mov stos jecxz jo in in pop xor aaa adc adc leave lret jb nop lea imul or ja or ds xchg enter sarl imul jg xchg lret dec (bad) ret js out into popa ja pop rclb dec rorb push cmp movsl movsl movsl movsb int cs xor jae outsl add or inc out stc stc lahf jo scas add pop cld or mov add fistp lods test dec into mov sbb xchg push xchg add stc lea push dec mov fstpl jns sub push xchg mov das push push push xor cltd ficom jno xor sbb xor inc pushf cmpsl pop in sti sti popf jb xchg dec ja rol (bad) call call popl fwait mov xchg xchg xchg xchg xchg and pushf mov lds pop pop mov pop jmp cmp pop cmp out lret out out bound mov das das add scas shrb sub sub je repnz xchg cmp xchg (bad) cmp mov fistpl stc js jno add in in (bad) and aaa adc rorl push pop or enter dec jg pop mov xlat popa ja rcrl (bad) fsub int imul imul dec push pop aad ja roll rclb in mov ss (bad) int3 stos adc push cmpsl pop mov adc (bad) fisttpl das sub jb icebp jo xor jno xchg mov mov insl sub pop inc sti or push fucomp je divl out lea stc jne mov and fstpt xchg stos mov shrl in dec lahf sub inc push mov mov cmpl dec inc push jl mov test pop inc lahf add stos scas push (bad) and mov add add sub stos lds pop push out scas mov ss dec movsl sbb cmpsl sti loopne ja cmp das movsb jg cmpsl aaa cmp jnp cmp imul pop bound shrl adc int jno cli and push push cli in aaa fsubrl push mov adc jne hlt mov (bad) (bad) loopne dec jnp movsb loop lret popa ja cld dec dec cmp popf fcoml dec dec in xchg sbb push nop jg,pt dec jg ret ret jns ja ja mov rorb mov movsl movsl movsl stos adc sahf inc add xchg mov sbb stc stc jb in pushf inc pop lahf or pushf xchg mov inc sub sub mov repz sub hlt sub cltd movzbl cli mov xor xor xor cmpsb xor add lods inc mov (bad) (bad) dec inc rcll push ficomp jno pop paddsb mov pop pop test rorb (bad) xor mov inc insb aam fld1 mov insl add xchg xchg sub xor sub push out shl pop pop mov ds out pop out adc setle add mov jg mov jmp insl jnp jmp cmp jno adc mov iret pop mov push cli in in xor mov adc push les lret inc mov jecxz jge ja pop lret fsubl (bad) fdiv mov loop lods popf hlt aaa ja and xlat movsl lret aad ja shr popa pop pop rorb dec roll dec repz mov movsl movsl cs mov inc sbb adc roll add add jb fucomp dec jmp cli lcall mov ss fcomps in pop dec dec dec pop sbb sub (bad) les adc push or (bad) mov xor and sbb xor data16 mov stc stc jb xchg or scas pop pop pushf inc add sti jae ljmp dec sub repz popl stos scas pop fwait mov xchg xchg jne sahf cmp dec cs cltd push push rcl in pop pop push mov ss in leave pop pop pop pop mov data16 stc out das je jmp in dec mov sub cltd sbb lea add xchg sub jno sub fs cli in in mov repz sti sti sti sti (bad) (bad) fbld rorl push (bad) (bad) les bound call add or pop inc fsubrl shll imul jg rorb movsl inc mov divl pop aas fisubl sub aad lret (bad) mov fsubrl xchg insb sbb clc xchg xor jp loope out aaa imul add and ret adc mov push test fsts mov ss std jl or idivb cmc ss adc push aaa fcoms insb test push mov insl cmp aad (bad) xchg push fiadd pushf cmp mov jns pop cmp fcmovnu fcmovnu aaa aaa aaa enter ss and int3 add out sbb pop rorl inc pop pop pop pop pop pop pop add ss mov (bad) xchg lods adc pop rorb and daa movsl sbb in ret out out cmpsl sti add add add cmpsl xor shrb sbb dec mov jnp repz insl lea test mov lret shlb jmp fs jecxz jl and aaa enter xchg scas add dec push jl (bad) les test cmpsl cmpsl cmpsl cmpsl mov mov push pusha lret ljmp leave out imul mov dec imul arpl aas dec rorb push push out rorl mov pop mov cs lods cs add orl xchg lret jo inc out pop pop sahf lahf stos add add iret iret iret iret icebp icebp icebp icebp icebp icebp icebp push sbb (bad) xchg (bad) mov push jmp jg jmp push push mov inc ja jge mov or arpl nop dec adc daa les icebp jno sar addl pop xor imul add add add sub cs dec lret in (bad) mov pop jge (bad) fwait add xchg sbb scas lcall js mov xchg xchg cli cli cli cli mov fmul pop pop pop bound out out lods aaa and das cmpsb movsl mov sub loop stc pop jno jnp stc lods xchg lcall inc push xor repz out in sub out aaa jg jne push lcall dec js (bad) les inc fistpll imul ja stos fwait mov adc adc movsl movsl movsl movsl ljmp jns mov ret ret call adc add aas pop test pop scas mov push mov fildl jecxz into imul addl (bad) (bad) dec mov fist sahf push push or ret mov mov mov pop pushf movsb dec (bad) enter add add gs jge sbb dec mov mov (bad) stc stc stc stc stc stc stc stc stc stc stc stc stc mov adc stc sti daa xchg daa in movsb jb cmc jb lret cwtl stos xchg outsb sahf xor pushf test aam sbb pop cmp scas out sti sti mov (bad) mov in inc pushf in fwait (bad) popl fistp sbb cltd mov add xchg sti mov mov push aas sarb xor or nop ftst or out in xchg mov sub ljmp jnp jnp lock sub lea add xchg lcall in ja clc in in adc cli aaa aaa or inc cmp movsb push xchg adc xchg mov jp shrb imul jnp cmp (bad) mov push pop mov fsubrl inc stos loop mov add dec add cmp cmp mov hlt mov mov add ds xchg mov mov cs cs mov adc push addl jg in stc pop jge pushf rcrl add movsb call pop ss dec fistpl adcl push jno hlt push push pop nop push adc xor xor imul pop pushf jge pop add push data16 jmp sarl push mov mov (bad) adc mov ja mov jo mov add push adc test push sarl jns jne dec mov xor mov mov cmpsb cmpsb cmpsb cmpsb xlat or mov and ror cmp out mov test movsb jmp aam ja ja in inc jo lea jo jb mov push add mov and and popa mov cmp adc les cmp in pusha imul (bad) jle ja lahf inc xor and in bound cmp cld mov ret ret sub dec mov sar xchg ss aas (bad) xlat daa push mov mov fidivrl movsl ret es adc aaa or addr16 ja sbb and mov push in add subl movsl dec into insl xchg call out (bad) jno jmp dec mov pop xor popf and fnsave mov xchg mov sbb repnz das inc scas and mov out stc push or je je je cld xor pushf lahf stos add sti js testb jecxz dec adc add (bad) popl xchg xchg sbb add cmp sbb mov adc or sub mov pop movsl sbb dec jo mov mov fsubl sub repnz ret insl jnp rcl out gs gs pop adc mov mov clc fs cli in in addr16 push cmpsl (bad) and adc lds aas cmp popf test cmpsl cmpsl loopne dec jae dec popa ja data16 (bad) (bad) cmp ds shrl jg xchg ret ret mov iret popa ja cld or adc inc mov add movsl cs mov inc sbb adc icebp in dec jmp pop pop pop jno clc xchg (bad) lock pop mov test cmp mov sbb push sbb int3 sub xchg mov int3 cmp jb subl add nop push adc mov out stc stc jb in fiadd fisubr add mov cmpsb pop cmp sub cmp push jnp mov jne arpl push pop xor imul add pushf mov mov fwait push fisubl ss pop pop mov stc out out insb push and and sub jae addr16 or fwait lea lret insl pusha cli loope addr16 in in pushf clc pop cld sbb aaa aaa jne cld nop shl lcall dec rcl jge imul dec popa (bad) push push pusha lret pop mov out (bad) imul fwait int3 jne jnp ja cld daa arpl adc inc dec pop sub movsl mov cs mov cmc lods popf or test add addl setg pop xchg aad sahf xchg mov aad vcmpunord_sss mov stc pop dec xchg xchg xchg xchg xchg into push jl clc jbe inc jmp (bad) stc stc push repnz and xor xlat dec dec nop inc mov mov stc stc stc add push mov arpl sbb mov jo adc or cmp (bad) (bad) arpl mov cltd pushf pushf add stos test push (bad) add jbe pop sub rcl cmc dec pop pop (bad) cmp idivl fcompl mov rcrl jle aam cwtl call sub jmp pop arpl mov test (bad) gs cwtl cmp jno push fs in in call aaa aaa or sbb mov dec js (bad) les add pop dec dec out jae daa cld mov xchg push xchg aam aad fs imul jg cmp ffreep cmp xlat int3 jne into popa ja cld cmp pop push roll cmp dec jecxz adc (bad) outsb ret (bad) call cmp or inc out stc stc adc sub jno subl mov jns xor ret gs dec dec movb sahf xchg xchg aad mov cmp or stc stc mov gs xor jecxz in cwtl fisttp inc and lods lods daa and stc stc jp hlt fisubr jno fcoms push (bad) call xor jno subl mov (bad) and ss (bad) popl fwait sbb lcall pushf mov mov imul stos ror in ss mov pop mov mov add out out lods out sub mov inc fwait shrb dec pushf cmp mov jb dec xchg adc jg mov mov add mov sub add imul (bad) or or or inc xchg daa dec and xor cld and mov clc cwtl mov loopne dec gs dec ja js xor stos cmp ret xchg dec and (bad) xor sahf sbb pop mov notl movsl dec insb pusha pop pop xchg rcrl nop aad dec xlat or movsl mov test push jb xchg rcrl xchg jmp inc daa or mov stc dec into mov cmp imul push jmp divl pop test lds enter push icebp or sub xchg adc out push push das push cmp lods out push xchg cltd je je je je fcmovnu scas inc pop pop pop cmp aaa aaa aaa aaa aaa or or dec and out outsl out arpl xor movsb inc sbb inc inc inc inc inc inc inc outsl sub xchg push or mov xor cli xchg xchg xchg xchg xchg xchg xchg and and and daa jg in das sub aam arpl sub cmp int3 lea gs adc jae jns jno mov sub mov mov aaa aaa outsb hlt mov inc cwtl loop daa cmp cmp andl cmpsl mov sub (bad) mov sub scas inc jg cld sbb clc divb nop xorl iret jnp pop add cmp mov pop or mov cld sub inc (bad) loopne jmp ljmp or imul std adc pushf cld push mov push mov mov pushf add dec push sbb jo and fld mov pop pop xor push insb sbb cltd pop xor xor xor sti dec pop sbb push lods fldenv jb adc lret add mov jmp call bound jle mov mov and xchg lods (bad) pushf push das pop and pop add or clc sahf int3 stos xchg xor jne (bad) dec lahf xchg mov sub mov leave leave leave (bad) daa pop pop shrl mov fbstp cmp cmp sub jb clc cmp jnp jnp jnp jnp dec rcl dec inc inc push push push push push push push mov cli popf mov addr16 dec aas mov aad in gs cmp inc pusha (bad) ljmp push xor mov (bad) push xchg and or and add pushf test ja ja bound pop fisubl push dec xchg xor shrb xchg push popa (bad) cli xor fnstsw push pop call inc add fdivrl lods fdivrl leave lods or xchg mov pop xchg sbb ja decb mov mov ss ss cmp in mov stc pop lods and lods (bad) jge pushl jae clc cmp xchg mov inc mov mov mov xor imul dec rorl add mov (bad) loopne xchg pop jl jo pop cmpsb jo xchg pop ret mov inc jecxz mov jecxz push mov sbb into xlat jbe (bad) xlat sbb mov popa or pusha or mov (bad) mov aas cmc mov leave add leave add adc adc mov xor bound gs adc mov xor adc in aaa xchg es dec cmp mov imul aaa ja xchg aaa ja cltd aam adcl outsb loop ja and dec les ret jbe xor sub rcrl mov cmc mov hlt movsb das jecxz sub sbb adc rolb pop bound (bad) (bad) adc cli or ror rol test scas or dec push sbb mov je inc add incl inc cmp lret loope jne in xchg lret clc pop sbb dec in lods movsb dec mov stc jae push jbe fstl push cmp jns mov out pop movsl push or add outsb pop and (bad) dec mov jmp jmp mov lea sbb nop adc mov jae clc add push pop pop xchg mov pop xor xor sbb cs in addr16 lods shrl sub shlb and jge aam xchg sbb int add lcall xor xchg xor shrd shrd aam aaa adc adc lock adc orb das in loop in cld xor arpl xor enter int3 push cwtl out loop out loopne lock cmp ja xchg xchg (bad) xor jae jae pop pop pop pop pop test arpl movsl cs inc inc in std notb in test lea orl xor imul pop pop lret je mov ds dec (bad) or or rcrb outsl jne cld ja cld mov mov mov mov add stc stc xlat xlat xlat xlat xlat xlat xlat pusha pusha daa clc mov jl lea jno sarl scas cmp mov xchg sub test sti sti (bad) (bad) adc hlt mov cltd adc mov andl adc (bad) jl inc dec push mov inc dec pop cwtl rclb fbstp xor icebp fisttp insb sub insb add imul jo mov out mov mov cs fcmovu push clc addl xchg adc mov pop jns adc outsb dec in in aaa mov aaa ss aaa popa or xlat inc push (bad) les mov fs xchg sub add sub xor sub push imul cld popf jl xchg mov xor out push xchg aaa ja cld sahf jecxz pop pop pop ficompl sarl pop andl add add ljmp adc or sbb stc imul repnz add rorb jnp mov cmp or movsb dec (bad) push push xchg push push cld jl (bad) lea or stc and mov mov jae hlt repnz scas das imul or insb jno adc xor mov rclb xchg add mov pop add push jecxz xchg dec sub test arpl iret (bad) (bad) push rclb bound mov jecxz jnp jecxz sub (bad) mov mov push aam rcrl pusha add pop imul mov outsl movsl xor hlt xor add leave add sahf pop lcall mov lods in addr16 or or ja jg push adc push adc dec or sti loope jecxz loopne jg sub push fistl fstl loop popa aaa ss bnd jns les ret jbe xor xor sbb pop push nop lcall iret pushf pop push bound xor cld pop xchg arpl mov pop add lock pop pushf call mov inc cmp cli xchg dec dec into mov out push jne mov cmp mov (bad) loope push movsl loope jne int jne adc pop sbb lret sbb inc lods insl inc scas das push clc jp icebp mov cmpsb lock pop clc mov push adc (bad) lahf push clc jno stc cmp stc dec add sub inc mov lcall jae stos sbb rclb test add mov in cwtl mov rcrl pop mov xor add movsl movsl adc sbb adc lret mov mov imul int3 cmp pushf cmp push lea push lea jge lcall xor xor arpl addr16 das mov push popf pop lcall aam and loopne in loop clc jnp xor jg cwtl push aam cwtl push insl loopne out in bnd jg jl sarb out add ja mov mov repz push repz loopne sti cli insb xor push popf push push sahf les or stc jae cli jno adc push adc inc or lret mov ds ds or or rcll mull rep push or dec adc mov inc inc mov aad pop sbb outsb pop jno inc nop mov lods cmc das pushf add jecxz push or adc add js mov call pop dec dec rclb add lock (bad) push push pushf push imul xchg (bad) (bad) lret push (bad) clc xchg insl cmpsl (bad) mov mov cli adc mov mov push pop pop shrb ja data16 push pop pop rcrl loopne out out sub sarb ret jle dec xlat sub outsb xlat sub gs jge pop xchg pop insb out (bad) dec xor add in in imul aaa aaa mov cwtl aad fiaddl dec cmp cmp push mov inc movsl das sub rolb cmp sub jg jg ret sub bnd ret hlt mov inc mov ss notb femms rolb out mov lods dec js movsl movsl dec sahf int ljmp orl push (bad) in ret pop cmp inc jge add push jmp stc add ret xor adc xchg std adc push pop (bad) into incl roll testb repz xor lds aaa pop xor nop (bad) dec daa pop imul push enter adc and mov loope jle dec aad pop pushf call add repz ss test gs xchg and dec rcl dec mov jle jle popa xchg (bad) bound mov xlat push cmpsb sub mov scas leave leave outsl mov inc rclb insl sbb out push cmp lods out pop lods and sbb sub test gs mov pop xlat outsb jb gs insl jle jno test fsubrp aaa sti mov nop fildl adc xchg dec icebp movsb std xchg push outsl pop stos orb repnz in fsubrl imul hlt dec pop inc cmp addl ret add add or pop add mov ret mov sahf (bad) xchg sub jle mov imul arpl xchg rcll pushf adc ret pop arpl mov mov jne cmpsb mov lcall dec aas int3 or jae or sub popf xor xor dec dec dec repz lods lods das push movl stos and xlat pusha mov jg xlat loopne arpl jge adc jb cmp mov das fistp xchg jae jo jo fwait xchg xchg xchg sbb outsb bound test mov movsb dec (bad) mov mov xor push je ficomp adc roll push fild jecxz js adc jbe jecxz das das mov pop daa sub and cmp leave fcomps jo jno mov xchg or or imul fcomip add outsb cmp les loop mov fs inc sub sahf fsubrl sbbl or sahf daa sub xchg sub (bad) xor rcrb dec sti mov mov arpl negb inc dec lret ljmp or popa shrb stc jp ucomiss bound hlt jbe xor inc mov xor mov sbb fldcw dec mov cmp inc leave jge repz aaa mov inc rcr nop out in dec in dec inc xor cmp pop push stos stos mov cmp pop mov bound push xchg rcrl js or imull repnz and jbe shll add add sahf sbb lcall mov dec add inc es lods es pop pop pusha fs gs inc sbb sub pop pop add lcall pop aas sub das push push iret pop inc mov fwait cmp xchg add (bad) aam mov or pop sbb je jno or cwtl test in loopne aaa aaa faddl roll inc inc jns in icebp mov xchg cmp jmp sub xchg out mov and xlat dec sahf fsubrl dec imul cld sbbl lcall ja pop pop pop push mov xchg mov jo pushl pop pop pop nop ljmp orl dec mov std pop pop sahf adc shr shr inc aaa add insl aad push cmp mov push push jns jns lods test (bad) or aas jnp jb sub inc sub (bad) xor dec dec fcompl or jecxz lods stc jp in lret or pushf xchg ficomp pop xorl cmp and loopne sbb push jmp ss div push lret lret bound ljmp push sti xchg mov xlat push xchg dec iret jb lcall sbb mov fdivrs inc sbb jb,pn (bad) inc out out out fs negl movsb xlat js pop xlat aam ret lcall jp push dec andl (bad) call jp cltd (bad) ljmp dec mov iret aaa mov rcrl ds cmp xchg cmp ja daa lahf in ja pop sbb pop and sbb scas push jge mov xor mov dec mov xor or ljmp add add mov pop jecxz,pn pop pushf push in nop aad xchg jns cmp jl call pop (bad) repnz cld cld orb mov push decb out mov mov push fistpl adc xchg repz dec or pushf sbb xor cmp or and and adc fistl and out stc stc push add add add cmp xlat (bad) mov add out adc dec mov cmp ja push jae push xorl addr16 insl insl adc sbb outsb dec iret jbe jne pop dec cmpsb mov mov dec fisubr cmc shll pop out fcompl aam lcall jns jge jge sub add lea dec cltd mov ficoml sub cli mov add cld addr16 mov add in lcall mov mov movsb push je movsb jne ja and (bad) imul imul and cwtl or dec mov clc addb hlt mov sub pusha sbb lds mov call rcrl loop,pn cmp dec jle push jbe jmp push pushf push sbb (bad) lar add xor or popa xchg test jnp incl push icebp inc or pop xor jae mov inc or mov nop loopne ret fisubr push idivb stc stc stc scas stos arpl inc push aas cld mov push sub push shlb aas jmp xchg dec mov arpl ds adc or jnp sti nop ss insl insl in mov addl jge push sub movsb sub sub rcrb add add cmp dec popa (bad) sub stos adc push jg pop xlat jns and sub jb ret pop cmp clc mov or lea xchg push add jno xor pop xor test fbld mov in sbb xchg adc les cmp mov loopne xchg xchg cs jecxz cld xor mov and sub shr jg xchg xchg loop imul xor mov mov jnp mov jg pop stos cmpsb cmpsb ficompl mov in repz inc cld addr16 jle cld lea xchg push mov xchg stc push mov dec in call sbb add cli cmp push lea movsb shrb push fistpl cmp sub cmp stc lret cmp pop in ja repz sbb in and mov in (bad) lret rolb add add dec and sub int3 mov int out call in add aas notl inc sti mov (bad) arpl mov dec fwait mov xchg xchg dec jne xchg bound sub pop pop sub cmpsb sub cmpsb sub leave inc cmp inc ds cmpsl movsl movsl fstps sub rol sub sub mov test arpl aam push jb push jbe out mov mov mov add adc adc and mov cwtl push sbb (bad) rorb in les js call cli aas lcall roll lods dec sub mov subb add mov sub fcompl xchg icebp mov es dec mov adc adc lods mov cmp cmp lods jb inc push call add add or mov mov movsl icebp mov mov jge enter rcrb lods test xor cmp stos lret bound bound xor repz lods lods das push mov lea mov out xor loop mov cs pop stos adc sti sti js xlat inc pop mov mov and test addr16 insl lret sbb mov hlt xchg dec aad clc (bad) pusha leave scas lret push push sbb jl pop ss ror add imul repnz xor rcl call sub sub xchg or dec cltd push inc jb xchg insb fcoml (bad) cli xor cltd (bad) imul in das mov aaa outsb mov cmp in in popf dec andl xchg xchg xchg subl ja mov xor repz test stos loop cmp test xchg pop sub movsb inc and mov sub mov and and pop dec pop pop pop mov xchg mov xor xor dec and pop sbb pusha sbb mov jns push push stos inc inc inc inc rclb add add jmp and sub cmc mov mov sbb jno pop loop jbe sbb inc out jae (bad) jo ja xor mov outsb sti repz push sbb das push pop (bad) jecxz mov cmp dec mov call pop pop dec dec pushf shlb add dec sub mov lods arpl jo xchg jo insl adc iret push pop inc inc inc inc inc inc inc outsl repnz xchg scas mov mov leave leave popa xchg sub fwait add out data16 sub das aas das das stos das rol aam mov add sub cmp insb mov out fidivl jns jno add mov mov dec sbb popa sti (bad) and adc sub repnz les addr16 lods push fs jnp mov js xchg and (bad) aaa fistpl gs ljmp cld sbb dec lds mov mov cld fwait and sub fsubrl xchg mov dec fstps ljmp dec jle sahf jbe (bad) stc mov scas (bad) jl pop pop inc pushl add pop hlt (bad) (bad) aas push std adc mov pop and jge (bad) xchg dec add sbb fisubrl call mov mov cmc dec pop sbb cwtl sbb lods je dec rol cmpsl ficom adc call mov lds scas pop pop pop mov ja (bad) lret xor mov ss fbld jo insl lret adc out jne outsb popa xchg mov stos (bad) mov bound jbe cmpsb cmpsb outsl mov leave inc xor daa cmpsb mov out out out test movsb pop iret mov pop fwait jge jge jnp and mov jb jb mov jns cli xor add add sti in aaa hlt pop fbld adc dec sarb jnp aam les shrl pop popf push push arpl jle lahf jp mov test sti and imul or sarl xchg mov mov push pop pop pop rcrb pop xchg movsb mov jo shrb adc std fnstcw jle inc or jb scas jb icebp pushf push sbb xabort cld les sub ret into lods mov sbb cltd loopne test (bad) incb inc or arpl out enter jae insb mov dec cmp pop pop lock add (bad) notl std stc stc and adc push mov inc int inc jmp stos adc test sti hlt push inc add inc aas pushf insb mulb rorb out (bad) rclb mov ljmp gs inc mov mov and ss pusha or or (bad) jns out insb sub insb daa adc adc and clc test test jp lea int out xchg mov cltd mov sub gs leave enter sbb adc cwtl push and rol les xchg push arpl cs jnp bswap sahf fdivl leave fsubrl xchg loopne lea hlt or mov add add jecxz rorb popa pop pop pop push push push push add pop mov mov xor es pop dec sbb push or jge mov scas adc xchg out cld ja cmp ja mov cld (bad) cmp mov xlat xlat xchg adc inc aas fdivrs jns das test lret mov lret inc and cwtl sti add sti sbb out out lods inc cld inc cmp mov aad dec mov jg scas mov inc inc inc adc roll cmp mov sub addl xchg jns fdivl (bad) bound mov out sahf sbb cmpsl cmpsb cmpsb leave fidivr ss dec pop pop sub lcall das jbe movsb sarb (bad) jge pop and lea jb repnz lea gs lcall jno cli jne mov das adc (bad) lea aaa adc loopne ret jl xor les imul sub outsl sbb mov fdivl xor das dec push stos or pop (bad) jg,pt ljmp lahf clc mov mov jg pop xor ss mov (bad) dec fnsave add faddl icebp xchg popa jmp add pop and pushf jle xor cmp or std push sti dec es mov mov pop adc ret pop cltd fdivrp (bad) jl adc out rcrb inc leave mov cmp (bad) fnsave sub sbb jecxz fadds stc stc mov ja mov jns mov push push pop inc call and sti mov push daa rol sub (bad) ffree mov outsb jb (bad) xchg push xlat outsb insb insl insl jne orl mov add shlb push mov jno outsl cmc mov pop mov movsl movsl adc add jl movsb push daa sbb adc pop or and sub fimul fwait lea lcall mov mov aaa push push out outsb adc xchg xchg sub mov call (bad) xor shrb push aam (bad) sbb inc cs addb jg js xor xchg dec xor xor addl or shrb cmpsl es out es mov push daa adc mov or repz call push sub jno cmp jbe mov leave aam cmp xor push push xchg cmp call js incl lock or or mov inc cmp mov inc push daa fsts insl scas add cmp cld jp out dec enter push xor mov mov push daa adc xchg sti add cmp lds outsl pop es push inc add xchg xchg cwtl out jne (bad) lret rcll in mov sbb pop cmpsb inc into leave inc lret adc pop fstps ljmp das sub and fs lea mov stc mov fldl cltd xchg jb test lds mov jmp rorb dec fiaddl scas enter xchg sarb imul orl out test xchg xchg scas imul sub xchg sub fadd ret inc mov hlt mov sub mov jg mov cmp dec dec (bad) lods dec mov pushf push icebp rclb jmp jle imul call add pop aam bound call and imul dec dec jle (bad) fcomps lcall pop inc lock stc roll xor bound fstl fisttp sub repnz lods lods daa jmp mov adc clts stos xchg push pop push push push push pop cmpl adcl push push pop sbb cld or into mov mov cltd data16 jl outsl mov sbb rcl xchg popf sub nop mov (bad) jbe mov sub cmp or fbld movsl movsl movsl xor mov cmp xor adc les cmc rol fmull adc clc xchg lods stc aad gs fcomps jb out mov add add jecxz lods adc enter inc sbb push pop adc adc das jmp adc ljmp push dec mov add add push sahf pop pop fcompl mov jnp mov or ret ret ss jbe mov loop pop sbb pusha jns dec xorb mov stos and ljmp or hlt lea out push push rclb movhps pop (bad) fdivr cld cld mov ret add mov inc (bad) or or push add hlt (bad) (bad) pushl and push push lds jnp xor cmp or repz lods lahf ja icebp dec lret test ret rclb push dec inc inc jg add pop pop inc inc inc test adc out sti inc add hlt pop sub push mov nop sbbb mov sti pop mov pop push mov incb fstp mov cwtl pusha sub mov lods cmpsb cmpsb icebp ss inc das iret pop xchg adc sub cmp das das inc roll cmpsb outsb fstpt lahf add jnp pop jnp,pn push dec andl int3 int ror jno repnz clc xor sub enter aaa aaa mov sbb adc cmp imul loopne ds fwait sbb and and stos loop sub xchg cld inc xchg hlt add lahf bound mov jg insb dec pop pop xor les clc iretw mov or (bad) popl cmp stc mov sub push add add cmp inc dec dec dec sub xchg aad loopne push inc mov mov xor push jne cmp fidiv mov (bad) xor or sbb sub (bad) mov xchg push push push mov push rclb push in inc call pop pop js pop sti adc mov mov lods js call jo or into (bad) sub (bad) rclb mov outsb mov cli mov push xor cmp ss faddp pusha ss fistp pop mov test (bad) and das das jbe jmp sub ret push jnp and sbb lea jmp gs ret lcall cltd xor adc outsl sub mov (bad) aaa adc xchg add les inc loopne xchg arpl jle cmp mov faddl and lahf cld add sub jmp ja xor rcrb pop jo mov jo mov movsl movsl dec add ljmp ret subl notl xchg sti stc pop dec xchg jb pop pushf jbe mov xchg dec adc mov or push loope lods popf add jbe add (bad) stc stc insb lret fucom ror lret push xor in in cmpsb lods lods lods inc cli hlt stc stc cmp adc push push mov je fcmovnu fistpl fcomip or clc mov lds push dec imul jbe (bad) push jp test mov xchg orb cltd ret mov cwtl pop ficompl in leave add lcall sbb pop aaa movsl sub sub test jp mov (bad) lea adc fwait add jnp add cltd sub or fdivrl and lods jmp xchg inc clc xor push jne jae aaa push xor jl (bad) and scas jno out xor es mov cmp mov sub mov add sbb pop pop xorb cmp mov rep push aaa push adc jle xchg add std clc (bad) hlt scas push sub mov and or cmp outsl cmovge (bad) xchg adc pushf push jmp decb test push xchg and dec shrl idivb mov ficomp pop lods push mov movsb cmp pop push mov mov xor pop mov or push pop mov adc sti sti lods fldcw sub mov arpl (bad) (bad) add lcall mov dec dec int mov pop add mov fiadd leave leave popf pop push pop pop pop imul pop mov das das jbe jb adc and jnp xchg push and aam or lcall ret cltd dec orl loopne in in gs fdivrl or xor (bad) imul in dec aam cmp cmp cmp imul cs lahf xor mov (bad) xor and and loop loop ja repnz mov inc std ret mov daa lahf push mov sub xor xchg mov xchg pop mov adc (bad) sahf ljmp rol sbbl xor adc cld push pushf inc or push jb cmp pop jbe aas cmpsb jle enter rcrb jl out je divl push lea push mov mov leave hlt fidivrl mov sbb sbb lods lods and mov mov mov xchg mov xor inc jecxz inc jmp scas add (bad) lcall mov cltd pop stc mov mov add xchg test sub jo add mov cs js mov aas inc adc inc mov xlat movsl (bad) add mov push mov jmp sub aad pop sub and rolb (bad) sahf adc cwtd xlat outsb clc sub and cli mov addr16 mov imul pop pop nop jmp sti sahf dec cltd cmp mov ss fs ja ja add andl aaa inc mov jl cmp add (bad) cmp mov bound mov aam rcrb xchg xchg out xor push outsl jbe mov mov std bound pushf pop pop ss shr lret mov mov dec dec cmp in je repz divl (bad) add xor cmp sbb out add sub stc stc jb or pop test or fdiv mov out xor adc jo inc mov mov dec mov jmp popa addr16 scas cld stos pslld pop sub popa add stos stos mov (bad) xchg mov aas fstpl fisubl push pop das dec xlat movsl andps out out outsl cld les cmpsb popa lret xchg sub jnp test idiv ret dec lea fbld pushf adc stos (bad) cli xor mov imul movsb push jne mov cmp cwtl push out xchg xchg dec icebp test sub imul imul int3 fcompl (bad) lea mov sub aaa inc cmp ret inc adc lret (bad) aas dec xor rclb sbb mov movsl movsl add pushf out sahf push add leave mov xchg add mov ja jmp add data16 push cmp fwait in add in call mov dec inc push lea out push inc xor xor and data16 xor xchg push or std and mov daa push push jb icebp (bad) xchg pop stos pop mov mov popa adc test sti pop sete sub arpl pop lahf fmul (bad) aam roll xor rclb fxch mov nop pop cwtl push (bad) xchg and or ss leave outsl push arpl pop movsl dec outsl pop scas out aam lcall sub js sub mov jnp xchg sub (bad) out cltd mov repnz (bad) sbb inc cmp stc nop pop jbe mov addr16 pop jnp xor les xchg jle fldt imul add add xor mov and nop push sub jl fnstcw jg in xor dec std dec mov and ja xor push cmpsb rcrb dec out pop hlt hlt cs inc inc sahf fs (bad) (bad) inc ret test jb nop xlat adc xor add imul jge les pop loopne call out (bad) (bad) ds add xchg xor test cmc inc cmp xchg sbb xchg cmp add jb jle xchg mov stc cmp inc inc cmp call sti sti jb dec push cmp cmp add lahf xchg insb arpl fisttp (bad) xchg bound lcall negb out cmpsb pop pop pop pop aam push sarb mov push rcll push rcrl pop insb mov out fcoml add xchg mov das das sub aad (bad) mov ret into clc mov lcall mov das mov mov das mov mov pop cwtl pop sbb dec mov xchg dec push loopnew inc cmp mov mov js push mov fcomp (bad) in push divb mov xor clc xor dec mov push add push xlat or mov inc jo mov movsl cmpsb jl out lcall jge js enter jp (bad) (bad) adc dec sahf pop out mov pop or xchg mov ds sahf cmpsb (bad) fsubrs fsts outsl mov lea daa pop fisubr mov aad fidivr xor in enter fistp lods lods push movsl fldcw mov fimul push fmull xor mov outsb pop pushf pop pop cmp add mov js pop sti enter mov outsl mov ret mov in clc lods int xlat jle xchg jno (bad) mov clc cmpsl sub pop rolb rolb push mov xor pop popa add lcall bound out cmpsl arpl test or sti push push inc lea adc xchg xchg adcl loope cli mov (bad) in cltd cld popa js mov aaa aaa mov clc cwtl pop sbb dec rorb add les and shrl ja movsb popf jle cld mov push xchg and pop xchg loopne loopne push sub test dec cmpl sahf dec jbe ja cltd mov pop pop pop mov mov clc test jmp pushf pop jmp or xchg inc jg mov movsb cmc jo add adc sub inc incl or mov dec rorl add xchg ljmp les push push push xchg mov inc xor ret imul lea sbb adc push mov xchg mov int pushf pop pop ss adc jo ret dec mov dec mov call imul lahf mov jae cli (bad) push insb xchg fcoml insb mov mov mov add push cs push sub pop rclb push shlb pop mov xor pop popa adc lcall bound shr cmpsl arpl pop aaa sti push je push jne inc xor jne xlat xchg xchg mov cli mov jecxz cltd cld popa jns mov aaa aaa mov cld cwtl pop sbb push dec inc push add les and ja movsb popf jle cld cltd int3 push fist les aaa xor hlt xchg inc das xlat bound nop addl ja cmp mov pop pop mov sbb jb xor cmp push fs mov xor xchg dec jle outsl add jns adc jp sbb call sahf push sti mov notl cmp mov dec (bad) jbe sbb loopne push push jmp mov out cmp sbb data16 fisub xor cmp adc outsb adc movsb xchg jne adc and pop push and jnp xor mov iret gs iret bound jo pop test sti adc inc mov loopne ja imul jg push cli lcall dec add (bad) sqrtps lea mov mov jge mov fldenv cs lods out lods aas movsb aas cmpsb jp lods rcl pop aas mov jnp lock jmp scas (bad) jne jae push out mov jmp add loope jno jno movsb test aad mov loopne cmp push out cwtl (bad) xchg adc les shrb dec ds loopne add cli sti jbe fstp fcoml sub stc sub or repz mov mov test je xor nop and rclb cmp push fs mov pushf pop in imul mov clc stc stc jb adc cld and inc sbb add mov mov sbb mov lea lea adc ficomp mov mov xchg fistp sbb xchg rclb pop divb adc pop ficomp mov mov push pop pushf pop pop jo pushl pushl ret dec mov insb out arpl add jnp cmpl xchg sbb lcall add rorb cmpsl cwtl adc pop rcll cmp jp push pop pop daa int3 outsl xchg in lcall movsb loope les adc jnp test lock jno icebp add out lcall jno jno aas add xchg call mov sahf pop rep adc les int loopne xchg out mov (bad) cmp pushf fist and test daa push dec xor mov dec mov mov aas pusha sbb dec rclb mov shlb out adc sbb (bad) dec cmp stc jae and pop pop pop mov adc push sbb sbb stc setne jbe pop add roll stc lret jo mov xor fcoms push lods lods lods lods cmc repz mov cmp cltd cltd je je xor pushf sti xchg sti cmove repz test nop dec movsl es arpl popl hlt (bad) adc out sbb mov dec mov in push rcrb push pop xchg push push faddp jnp rcrl push lods sbb loopne stc out out out bound mov xlat mov ret repnz clc addb add mov ficomp clc xor cli jno test clc loopnew xlat jb aaa icebp push in adc orl dec sbb xchg xchg push movsl jmp mov push cld jno and test push xchg fsubrs pop gs adcl xor xchg lret rorb stc lahf sbb ja cld xor mov inc mov mov dec insb cs data16 pusha cmp add (bad) fsts push pop pop pop xchg roll xchg ja mov push cmp ret push cmovge mov fcomps xchg je repz cmpsl repz mov inc push push mov mov xor mov pop nop sbb mov ss adc sbb out mov ja mov dec pop pop pop pushf push or repz adc (bad) mov pushf pop xor out jo jo cmp pop jp iret mov pop sub dec nop cltd pusha sbb xor mov ss pop dec mov das pop sub outsl mov js sub lock lock sub mov add fistpl fs sub in in insl adc aaa aaa inc xor dec rcrb sub rolb add add xchg push arpl mov push sahf fdivl stc (bad) add mov mov das stos jnp (bad) ja bound (bad) ss cltd sub repnz dec cmpsb mov shll lds sahf jle or hlt mov xor push push mov add imul ret push xor mov mov push push jns push gs je jp mov (bad) test add imul lret fldenv outsb adc fcomi adc insb fnstcw sti push sub std outsb and mov inc in xor iret inc push pop pop arpl xchg and mov (bad) sahf inc pop pop imul addr16 ficom rorl mov pop pop pop cli cli es sub xor sbb ss pop popf pop jle addr16 scas out pop mov rcl lods adc jl sub jb xor sub jnp mov or and lcall inc mov das xchg test lret enter sti jb in in dec inc mov xchg jmp sub repz ja (bad) push in fcoml int3 lret adc imul cli loop jg cmp adc push ja cs mov cmpsb sub loopne mov fldl in pusha leave pushf push add or adc pop pop adc cmp jno cld xor cmp imul push inc (bad) xlat call (bad) (bad) pushl xor push inc push fstpl adc or roll or sti outsl adc (bad) je jmp mov lret in push add or mov add add call cmpsb mov mov cmp sahf add lahf popf pushf pushf pushf mov repnz xchg out sbb loopne bound pop (bad) stos dec movsl movsb cmpsb cmpsb push sbb ds push mov mov movsl add imul jp ret inc das inc sub pop and call mov jb push popa out lock gs xchg jb (bad) mov das xchg xchg xchg fildll xlat pop sarb jns scas les cmp cmp scas addr16 xchg cmp ja xchg fmull imul jg xchg push mov ret xchg sub lahf inc cmp pop cmpxchg pop pop in movsb clc mov (bad) mov movsl dec pop xchg mov mov or jb test stos jb pop inc inc and and mov cmp (bad) push push jg dec xor add xor jnp push lcall cld pop adc push push pop test pop cmp pop ss jnp xor push cwtl sub sub add rcll push mov mov pop inc test ret lods adc test inc pop pop outsb xor loopew (bad) (bad) or xchg xchg xchg xchg xchg sub mov mov loopne cmpsb push cltd loope mov sbb testb push (bad) ja xor pop jle out out insb sub stos out pop and jnp jnp jnp add jnp mov xchg bound aaa jp jno lahf dec out sub jne pop imul aaa cmp inc inc sti ret sub les rolb pop jp popf cmp lahf nop jb ja sbb aaa fsubrp sub xor xchg clc xor cld mov add inc add and lahf mov ja ficompl dec xchg nop icebp mov repnz (bad) call sbb xlat xlat xlat xlat imul cmp push pop jg loope add dec add xorps or push dec scas dec loope push add mov xchg pushl (bad) push mov sti push ja lret movsb aas xor add push mov repnz (bad) scas adc jp push and push mov loope js or cli mov xchg pop sti mov cmp pushf arpl mov jo (bad) dec add (bad) sbb xlat lcall dec sub dec pop xchg lds pop mov js outsl mov inc cmp add das fwait ljmp out jb jp (bad) test and xor ja lock rcrb add popf jno pop add jle ja jecxz mov popa pop push cmp pop jne insb adc sbb mov mov or or adc sbb mov pcmpgtd sbb sbb adc movsl int3 mov or pop cli (bad) divl pop aam fstps mov (bad) adc (bad) dec fcomps inc clc inc sahf stc xchg stc or or add cmp fistp leave and xor push mull mov stos inc jle mov inc loopne je out je jl jns dec out cmp les fstl lret mov pop nop pop adc fcomp daa icebp mov sub sub add xor dec xor push xor pushf pop jmp mov mov xor repnz inc push xlat ljmp xacquire imul add add fistp fild iret mov out repz repnz cmpsb cmpsb cmpsb ficompl (bad) push rcll jmp push in sbb movsb in into sub (bad) mov xlat lock xor (bad) lock in mov lcall adc jno jle sub in aaa aaa fcoml jb cwtl adc les into stc fld imul inc mov mov adc sbb xchg loop lea mov das inc das fildl (bad) xor sbb or jmp jnp mov xchg movsl cmc cmp decl mov aad and les fsubrl lods adc push pop pop pop sbb inc sti pop hlt js cmp inc movsl adc loope cmpsb push aad std int3 aas movsb ss lahf stc stc stc movsl ret xor mov add mov xor nop push pop fiaddl lret insb inc icebp je (bad) stc stc push lds pop sub mov ljmp aaa jno push test xchg mov add out xor (bad) (bad) pop cli inc sbb outsb sbb dec fild or sub pop sub stos cmp mov fcmovbe cmp movsl das rclw dec sarl insb or adc pop cmp ret pop aam aam mov lock pop stc enter mov adc bound cli cmp pop inc addr16 call dec jecxz rcrl xor outsb dec xorl jnp mov ja xor and and gs popa loop xchg hlt lcall rolb mov mov das ja mov inc mov mov mov add add ljmp adc adc stc stc jp add inc pop pop add dec js push lret jle or les jno imul push ret mov test or cmp lds xor repz icebp in cmc and movsb adc or push mov adc push out mov sub arpl add rep test outsl or cmp cld mov imul lcall test mov mov mov push mov cltd push mov leave leave leave mov push fimul movsl adc sub jecxz out das (bad) push rcl sbb mov ret rclb inc push clc addb popf mov out pushf pop lcall cltd xlat test adc xchg test jne fbld enter cwtl dec sbb add lcall lret push add lods push jbe and ja ja ja mov push jge mov xchg sub inc lahf nop add jae push shlb dec dec ljmp scas cs pop es sbb pusha icebp (bad) push or gs les push push push adc stc stc pop cs bound inc push cld ss cmp ret lea mov mov push enter sbb stc stc pop lds mov or push nop negl lods or lret mov test (bad) hlt xor call push fldl jbe and add dec inc out cmp cmp out sahf pushf pushf loopne addl mov pop jb insl insl add push ja jne ss pop pop sub lea lret leave leave mov movsl movsl cmp iret mov arpl adc rorb mov rcl aam cmpsl scas out (bad) test jb jmp and jo gs adc mov xor cld cmp sub adc adc aaa ss mov in lcall lea dec dec (bad) xchg xchg xchg lods out mov mov sbb and and imul addb ret test (bad) iret (bad) ss repnz movsb cmpsb cmpsb or mov jae mov iret cmpsl dec jg adc test xor push dec push pop pushf pop jmp ficompl and add lret ret rol js jno dec movsl lods (bad) xchg xchg int3 adc cld mov pop sub pop out xchg lret lret fnstcw fcompl sub sbb lods and icebp stc jb add mov add xor mov pushf push pop sahf push repz jo ljmp loopne mov pusha arpl fwait enter dec jo lret lret sbb xchg pop push (bad) xchg jne mov fimull cmpsl mov mov fidivrl pop pop fnsave mov cwtl pop pop insb xchg out sub ja outsb das pop rcrb ret push out aam mov mov jnp lea gs adc adc mov jmp add hlt enter icebp dec dec rcll adc xchg xchg xchg xchg xchg pop mov mov ja inc mov and mov imul mov inc ret ret ret dec sbb jae (bad) jae cs mov movsb cmpsb dec cmp lock sahf pop (bad) in sbb cs popw sahf inc (bad) inc mov push mov pop dec dec xchg xlat bound les jge ret aad jl dec adc enter push outsb xchg lds lret addr16 sti out lcall (bad) push inc push stc inc cmp xor xor lock sbb xlat (bad) out lods daa jmp lret cmpsl mov add push rcrb mov rorl pop sti js negl test (bad) or or rorl (bad) mov sahf cli push enter jp jne rcll and movsl pop cmpsb sub mov enter mov cmpsb movsb movsl movsl movsl pop out out out fs lret (bad) call ret push aam call xchg test jae cmp jb push sbbl mov mov popf repnz addr16 aas outsb mov outsb repz lcall dec cs xor xorl sub pushf inc fstl popf cmp add push jae ret or lret ret cld mov cld fwait cld xor shrb ss rcrb mov lods cs jns sbb test (bad) mov stc (bad) jmp sbb cmp xchg pop jae add xor cmp insl pusha cmovge pop push rcrl mov mov out lods inc push push popl mov inc aaa inc and pop pop sbb adc in test mov movsb cmp fisubr push test inc int lcall add mov enter mov lcall es loopne adc dec data16 (bad) xchg stos iret lcall jne (bad) lock mov movsl cmpsb cmpsb (bad) and imul xor pop mov push adc adc das push jb pop out xchg aam aam inc mov popa xchg push scas add (bad) (bad) ficomp mov lea pop shll sbb mov inc and inc and popw in sbb jbe (bad) les aam pop xchg sbb xchg add mov jg (bad) (bad) and andl mov sar sahf aas mov cld xor rcrb cmpsl mov dec (bad) mov (bad) pop es aad sti (bad) (bad) sahf ljmp hlt xchg jle cmc push mov adc call dec aam iret iret iret iret iret iret icebp icebp icebp icebp icebp icebp mov imul xchg loope pop xchg push ds jnp mov push push jae xor xchg adc xchg aas sbb sbb nop sbb push push push shrb lret cmp push push push aam push xor inc cmp int3 and mov (bad) mov or and movsb dec dec add jno fidiv pop lret ja (bad) scas mov pop sub jge jb lcall addr16 imul adc jmp setnp jge jge adc add jne dec stc f2xm1 fwait lret mov jno sub xor dec sub cltd iret addr16 enter inc in rclb cmp imul out stos or add and adc xchg xor sbb ljmp or lock mov add cmpsb add cmp pop cs repz fisub sahf push lcall out cmpsl jo inc inc inc inc inc ljmp (bad) pop mov (bad) or mov cmpsb dec push inc pop xchg sbb cmp cld mov cmc cmp add pop pop insb mov fisubrl fildl inc outsl daa push stc daa inc lahf cmp mov sbb insb push and stc cmp lret aam sbb add pop add hlt cmp and pop call insb (bad) dec mov cli scas addr16 inc insl insl push xchg test fstp fisttpll pop pop pop and ficoml ss fisub shll cmpsb lods sbb scas lcall das jbe xlat rcrb test aad cmp jle mov insb xchg dec insb mov fcomps push xor lods enter outsl adc inc cs leave inc pop cwtl fcmovnbe ljmp ret out sub imul ja aaa clc pop test xor or jg imul xchg push cmp inc pop xlat hlt cmp sub cmpsb pop pop and mov cmp stos dec mov adc icebp rol jge jle jle cmc stc stc stc jb sbb call push jmp add cmp sbb mov lea cmovge incl clc inc (bad) std (bad) call cmp rclb xor aad xor mov insb fnstenv int3 cmp jle push or div sti cli mov jge dec dec aam lds fistpll test lret popa loopne inc loopne addr16 jbe test clc insb int3 mov enter dec bound sub pop shlb (bad) xor movsl cs popa pushf fwait jmp das lcall insl scas (bad) mov imul mov scas jb or lcall jno mov xor add sub adc mov add add aaa push (bad) pushl out cmp dec sub jno mov jb sbb add xchg call imul pop xchg cmp push jae ret sub mov mov cld mov sbb fisubl jae jecxz push jp pop loopne,pn xchg pop sbb faddl les push in imul call inc or push cld dec and imul cmp cmc cltd push push aam ds cli jl push push out mov stc stc insb push gs test fcoms nop loope das push mov ljmp stos (bad) xchg inc add loope inc inc loope aam xlat aaa inc call sti cmpsb cmp xchg dec sub xor popl lret leave or adc test inc jne dec mov in scas andl cmpsb mov pop pop pop add xabort movsl popf pop js pop out add mov pop cmp and lods sub sub xor repnz push lret sbbl cwtl adc jge das jne sub inc loopne in in cltd sbb cli lret mov xor jecxz pop sti add add push fwait push xchg push addr16 leave and sbb fisttpl imul jle jg jo inc ret ret dec test dec dec cli aas jbe jns pop inc jb adc cmp mov scas in pop shrb adc push jmp mov xor adc out call std ja mov mov cld (bad) dec mov xor nop sub or insb add push fs gs icebp and ds pop adc inc mov je icebp test add and add push cmp std inc subl sbb js add repz iret loop mov stos mov arpl imul insl insl xor mov add pop sub scas cmc nop scas rcr insl mov push ror leave mov movsl arpl lcall push sub das adc pop or mov sbb sub dec lea dec outsl gs repnz in in mov mov sahf daa xchg mov push adc inc and add loope dec imul inc sti cmp xchg jmp jmp hlt xor adc lahf pop mov shrb push xchg cmpsb cmpsb in in in mov movsl movsl movsl dec iret push ljmp xchg mov xchg stc xchg pop call pop add add xor cmp leave rorb xchg push xchg arpl xchg xchg jg jnp std (bad) (bad) out arpl push lea push cld or and lret fimull sbb and cmp cmp xor jno xor arpl xchg int3 sbb add cmp (bad) dec pop repz pushf ljmp dec push or xlat (bad) popf adc (bad) mov bswap outsl pop pop sub test cmpsb fstpl ss mov fisubl pushw lret movsb sub test adc pop mov (bad) repz in mov out pop fildll jno xchg iret mov cltd mov imul ror enter pop add rcll or inc popa (bad) add out sub lahf cmp rcrb and in fsubrs imul addb dec inc adcl and push fisubl mov mov gs cmc iret mov jg cwtl cwtl shll sarl in push push mov call mov add mov daa dec ror test push ret sbb popa lds sbb add xor stc adc cmc cmp mov in xchg sub push push scas insl xchg sbb jl sbb stos pop flds push mov inc inc pop sbb xchg sti jbe (bad) push add xchg lods (bad) dec (bad) xor call pushf add dec lret jo xchg insl xchg and mov dec test pop mov inc pop cmpsb pop push aad pop pop ss mov ror leave movsl fbld movsl movsl mov out out out shr fwait sub sub sbb loop test and je mov leave push cmp jg adc mov jo jne out cltd mov enter js adc sub lret inc lods mov mov xchg mov roll xchg xchg xorl inc inc andl cmp inc dec je ja repnz mov imul pop pop stos daa pop call push adc xchg jle rcrl jno mulb pushf sbb or lret ds lret jge int leave repnz dec dec push adc jb sbb add or (bad) mov ror lret and xor scas xor in daa and pop mov jle popa mov stos fdivrs xor fs (bad) sub add add (bad) push add dec aad inc cmp add push jae out xchg jo (bad) ja insl sbb outsl jne or out pop pop pop mov pop sub jle leave leave sbb fbstp movsl adc or sarb sub sbb mov je cmp lea or pop mov mov std dec jae jno imul mov ror enter sbb pop in in in sub dec inc das mov repnz ja ja xchg int3 rcrl (bad) imul repnz jmp cmp ja cli inc xchg mov cmpsb cmpsb (bad) (bad) mov testl inc ljmp shl jnp hlt xchg jp leave sbb push sti jge dec jno xorps xchg out cld aas mov ret les or push imul daa jb orl stc sub mov ror lret mov in nop sbb mov jl idivb clc stc push fnop jns stos stos mov inc adc fwait dec push pop pop jo mov inc repz cmp (bad) jae loope pushf pushf pushf iretw mov popf adc xchg xchg xchg add into outsl jne or lahf inc pop pop mov cmpsb cmpsb xor mov iret leave leave push ror stos or adc pop std cs dec test and adc sbb mov mov jb fwait das cmpsb jg gs clc popa jb lock dec or adc in inc mov popa popa pop inc push adc sahf sahf jecxz cmp xchg dec dec mov repnz mov (bad) daa cld mov mov jl fldcw imul sti call ret dec inc out mov mov aam insb test add add ss push dec pop movsl pop xchg mov push adc (bad) xor fs ret xor cmc call pop sahf xchg cld cld cmp inc popa mov jns ret enter mov adc mov add stc in cmp mov ror lret inc and lret sub push mov insb fdivrs push push jp mov fnop insl pop inc inc push mov lods adc push push add js ret push cmp (bad) mov inc jp xchg mov mov iret push insl out jp push jne dec mov test imul cmp leave leave add mov sbb and stos adc pop jg mov dec jb dec lea push pop gs jno mov imul sbb pop ror enter pop out and dec sub hlt (bad) les push jns imul xor pop and test xchg xchg ljmp cmpb inc or ljmp sahf and icebp icebp mov xchg pop (bad) arpl sub dec out shr ljmp (bad) (bad) (bad) (bad) (bad) adc push push jp add ficomp pop mov int (bad) cld stos dec movb add sub jmp add xor and inc and inc cmp in fbld mov push ds lock push push mov xor rclb jmp repnz sti sti jo and ds cmp add push imul dec add fiaddl sbb lcall xchg bound dec pop pop cmc cmc cmc cmc cmc add pop mov fcmovne leave mov and xchg movsl mov rcrl pushl mov pop daa js aam fcompl ret or sub fimull fwait lea gs jno stos loopne outsl jecxz (bad) aaa aaa lahf ja xchg notl adc mov or dec (bad) addr16 mov mov fidivr (bad) test and xor idivb or cmp lret xchg sub daa lahf pop pop pop pop ficompl mov cmp pop stos xchg xchg adc lea hlt into xlat imul cmp xor cmp ja imul ret cld mov sbb jno in xlat xlat xchg jge push add cmpsb ds add mov mov or pop sbb sbb lcall flds in jb cmc push icebp lea push push push push and test pop pushf sbb pop adc dec cli mov xor faddl inc daa xlat loopne jae and or jo ror push sbb sbb xchg add lcall sti sub test repnz leave fnstcw mov sahf movsl adc out out out out lods out (bad) cmpsl sub sub lock push jae dec jmp cmp stos gs dec jb adc and and and in add add enter mov in cli inc push adc cwtl add clc out lret sub imul hlt xchg push sbb fsubrs sbb mov xchg xchg mulb mov ret lret ret sub mov cs add bound mov inc cmpsl stos and movsl adc and push jns mov mov add dec arpl pop bound mov hlt shrl ffreep mov sub or xchg push push bound push decb stc stc (bad) push out push (bad) lret xor data16 in fistpll jge jo jmp fcoml inc stos and lods cmpsb mov jecxz aam or or add cmp idiv mov cmp loopne jo out (bad) (bad) clc xchg rol out bound test out mov out ficompl jne cmp adc rclb pop ficoml in adc lcall cmpsl daa movsb and cmp outsb fldt jnp jnp aas jne xchg push xchg adc xchg mov xor popa add jecxz adc mov leave ss jecxz adc adc or into mov dec fs gs jmp jge outsb dec sub add push aam rcrl cltd push jg mov nop dec mov xchg cmp addr16 cld jo inc jno dec xchg jmp mov mov call sub adc mov out addl adc pop xchg sbb cmpl xor push xchg inc movb int lahf loopne adc jg add mov add mov cmp mov daa add add cmc jno mov mov xor dec lock lcall icebp mov add int mov (bad) jae push pushf es popl lret in pop xlat insl ret insl mov cmp mov pop mov jmp sub mov fidiv inc or pop lods push pop pop adc in xchg jmp movsl add mov pop inc es push jge lock stc sub lock xchg cltd ljmp insb xchg adc cwtl call mov add push in cmp das rorl dec das insl outsl popf imul jb jg pushf jb fstl push pop imull loopne (bad) jo scas jg ret inc add inc or ja cmp jl mov fistp mov jae mov es mov loope sbb aaa mov add xor adc sbb cmpsl and jbe aad std ret cmp cmpsb aaa or pop loopne xchg dec jle je cld xor mov inc test aaa mov mov popa cmp pop cwtl jecxz outsb adc clc mov adc push and aas push pop add jns mov pushf push repz cvtpi2ps stos add testl xchg cmp mov jnp into popl lret push out insl xchg (bad) in jne cli and dec pop sub pop data16 or outsl rcrl mov mov out out out fs ffreep lods cs das movsb outsb (bad) mov mov rcrl out xchg adc test repnz jnp je in pop out insb int3 int3 mov (bad) adc lcall sbb inc cmp imul jnp fdivrl hlt mov repz (bad) mov pavgb cmp aas idivb outsl xchg ja ret ret dec mov hlt mov dec mov imul pusha push (bad) mov divb movsl movsl adc xchg adc xchg sub je adc out inc pushf adc aaa add inc cmp ret std or enter push call add mov cs test or xchg insl push mov js mov sbb push push and stos mov stos aas mov shrl mov lds int3 cmp jge call mov xlat mov mov or add add jg lret adc xchg add push movsl jecxz cmpsb and mov aas rcrb mov imul movsb adc adc jmp scas das inc sub jmp xchg aam in jnp jnp jnp mov jb add fs gs xchg hlt sub add fcomip push pop add add sti mov or jo clc leave mov movsb bound and (bad) imul sarl dec mov lret clc (bad) push xorl add add or dec dec je mov repz mov roll push or js je je mov xchg lock lock dec cmp mov test add pop aam cmpl iret pop std mov adc xor fnsave xor leave nop sbb pop and sbb mov fprem1 push mov adc xchg pop fcoml pop push scas push je inc call pop pop adc inc add jb inc mov cmp (bad) cmp push (bad) popl imul insl insl push insl out bound int3 mov imulb dec cmc sub scas inc xor daa push das inc mov out adc js js js cmc into aam test aas mov push imul mov cmp mov xchg jb fimull add sub adc ffreep cltd enter pop sub addr16 mov mov sub (bad) xchg xchg add (bad) jg xchg (bad) sbbl test xchg pop lret pop cmp jae ret cmp inc add push (bad) (bad) push xor sub pop xchg icebp mov gs jne shrl adc gs adc mov sbb push into call ja imul jl insl ret std or enter push popf push sbb divl mov out cmp mov arpl add xlat stos pop sbb sub or jp push and stos pusha loope cli mov cmp xchg jmp sti sti adc inc pop or shlb mov jmp or mov xchg rorl cmp add pop (bad) push cmpsb mov sbb (bad) jae push mov sbb pop pop adc insl das sarb jecxz outsb sub xor xchg call push jge gs cs movsl (bad) xor sub scas aaa mov enter in es das push adc (bad) cmp cmp fisttpl xchg (bad) ret push xor test mov leave add sub fisttpll jg xchg pushl stos mov ljmp sbb cmpsb dec xlat add mov jae mov pop pop dec pushf push icebp sahf pusha sbb jp or in jl arpl jg loope add push adc mov lds or push jno inc sbb add (bad) pushl pop or push push inc repz xor xor int ja jno repz shl in cmc das leave push lods push ficoml mov stos stos stos stos push xchg incl call pop jo divl stos inc pop mov data16 dec and and addr16 (bad) (bad) lret push xlat outsb insb insl insl jne lahf mov pop pop pusha nop pop push shrb xor dec leave outsl cmc pop push mov xchg movsl movsl add adc lahf outsb das rcrb lahf or sub test jnp ret in (bad) lcall jno cli subl (bad) mov jne enter push adc sti out in in popf cmp add faddl imul cs (bad) popf fcompl fsubs push outsl (bad) pusha aas subl mov adc jae ret pushf dec mov mov mov lahf cmpsb cmpsb cmpsb shrb fldenv pop cld cs (bad) jg jge pop push subl add add pop pop pushf push xor jmp lods ret mov adc movsl jmp push int3 push shll scas pop addr16 stc stc pop lea xor xor mov mov outsl sbb repz push cmc daa ljmp adc ficom sbb call call sub add das mov cmp stos pushf pushf cmp jae add out insl out lds bound lret mov dec ljmp mov jnp cmpsb leave outsl icebp jae enter mov pop pop pop test pop (bad) adc jbe push cs das sub pop pop sub lods dec jnp aam mov mov sbb mov jno jge dec jno jmp add ret in in outsb lock leave enter or sub push cmp xchg test add add add jp dec adc and add pop mov hlt subb jge xor bound (bad) ss mov pop cmpxchg cmpsb dec ljmp sti movsb movsl movsl cs add and jle jmp scas pop push lds call inc add aas inc cmp lret sbb stc jno dec push push test test lret mov inc push jb mov test ja xor orl pop sahf fcmovnu mov pop dec lds adc xchg push stc imul mov push pop mov (bad) mov dec xchg fs test loopne pushf insb out arpl mov xchg ret pop push popf push xor jnp pop pop xchg setg pop mov mov xchg je xchg mulb pop mov mov pop shrl add mov fcom aam aam xchg inc cmp iret inc cmp jb pop mov and mov mov mov mov add cs ret addr16 xchg inc cmp pop and jg imul lahf (bad) gs push sub test sbb (bad) jg dec lret inc cmp cmp lcall sbb mov dec cmpsb push add movsl es pop sub es (bad) adc xchg jle inc (bad) cmp lods jb scas pushf bound inc inc lcall add pop cmp dec insl pushf popf jg cmp inc mov xchg xchg loopne jl std mov or insb add sub xor int and xor fsubrl dec repz xchg lods lods cmc cld push in mov mov pop stos inc push in mov mov pushl pop pop pushf add (bad) jle test mov daa push mov fdivrs and inc jne mov pusha leave mov imul mov mov mov enter mov iret out pop sub shr das es das das test aam movsl sub jnp test pop jae mov mov adc in (bad) mov in in mov (bad) jmp pop clc ficompl dec fmuls sub imul call jno jl bound push fcoms jg testb hlt (bad) xor mov mov jg mov rcrb add lods movsl movsl movsl es jmp imul sub call lcall rorb mov xor into cmp cmp jecxz pop push cltd or std stc stc xor mov xor test pop pop outsl sbb fmuls bnd jno push clc pop jecxz mov jmp inc call call cmp dec sub call xchg andl insl insl adc xchg pusha sub mov push push sbb bsr mov and rcrl out jmp shlb movsb loopne push aam aam test aam push test mov clc (bad) push inc sub gs jno movsb das mov das adc mov dec xor cmp and dec cmpl cmp stos cmp or add push js and push imul aam (bad) addb cmp inc xor cmp mov repnz fdivl arpl dec cmp gs pop pop sub insl call lret add hlt mov push dec push push ds out stc pop pop and inc inc inc push push jmp fdivrp cld mov (bad) (bad) mov dec cmp enter push cmc in jl add aaa cmc push push lock or imul fcmovne lret cmc adc mov in add daa fs dec mov or pop cld cmp push push pop loopne pop pop mov dec stc xor xchg add inc daa fadds data16 out das int (bad) lea fs mov popf pop in jne jne inc mov lods daa (bad) pop pop pop rorl aam movsb cmpsb leave mov leave rcl out movsl movsl sarb adc adc and insb test repz aam sub out xchg lea cmpsb ret xchg add mov iret icebp dec xchg fistp fdivl add add cmp push adc popf dec out call js fidivrl ja clc pop insl xchg popf fcompl adcl (bad) lret cmp dec jbe mov mov movsb cmpsb dec cmp jnp dec dec dec shrl xchg std xor (bad) cmc mov imul adc xchg inc push pop add cld xor cmp mov dec movsb stos pushf xchg xchg push sbb add (bad) push int3 testb xchg mov xor xor enter repnz sbb das ds jo and sub je inc inc mov out pop pop pop xchg lcall data16 cmp cmp and (bad) arpl out sahf pushf pushf in test lcall jne arpl mov pop pop dec cwtl push pop pop fldenv icebp xor movsl shll push pop adc shlb mov test ret (bad) aam aam in jae jnp (bad) gs jb dec xchg xchg dec clc hlt cltd mov in in insb push movsl inc bound xchg jmp jmp int3 (bad) (bad) ljmp jg ja and fcompl test cltd xchg xchg xchg imul (bad) cmp sub lret ret ret hlt cli xchg je pop pop fcmovbe inc dec dec dec xchg pop xchg lods movsl movsl das cmpsb cltd xchg pusha or xchg ret or jl push stc jns stc jo shr call add aas xor mov sub int3 call push push sbb push add add and incl cmp (bad) roll xor mov xor mov ficomp sbb outsb adc adc idivb (bad) stc stc lds push push xor xor call stos jb xor cmp das call out jmp jo sti lods add outsl insl insl pop daa dec ja jne jno,pn pop sub movsb cmpsb cmpsb fstpl leave leave mov movsl xlat out (bad) cmpsl adc pop insl adc adc bound das das and and ret jp jnp incl jns lea jne (bad) add lcall jno cltd xor mov movsb inc aas jg cmp xchg (bad) xor inc push cmp cmp les jecxz test xchg imul popf xchg xchg xchg sarl jg mul fwait ds dec inc arpl mov ja sahf fdivl mov mov push mov movsl push and pop ljmp add addl icebp stc stc (bad) sahf pop pop pop loopne repz cld cld xor add int mov dec inc dec dec (bad) sbb push push insb add add roll xor lret cmp jmp fs cmpsb jmp in mov lods ret repnz inc ficom push fnop mov stos inc xor rclb push sti sti sti adc lahf enter arpl sub sbb jo fcmovu popf pop or mov rcpps pop mov mov movsb cmpsb cmpsb inc push cmp pop pop pop pop xlat fistp adc adc rcl jg adc sub test cmp (bad) mov lea frstor pop outsb mov mov adc in in in popa mov lret mov in cli es (bad) les inc add add (bad) mov xchg xchg push mov dec cld aas jae adc and imul (bad) cmpb pop call repnz pop pop pop mov pop mov cmp jnp dec pop dec inc cmpsb movsl movsl add xor pushf nop icebp jl jle imul aaa cli stc pop xchg out sbb add or loopne cmp xor into mov lcall pop xchg mov cs imul xor lret repnz out in sbb sbb int and push stc sti stc stc adc fsubr fs inc inc push push adcl xchg cmp add or cmp mov mov pushf pushf add add push jb insl sbb jne mov mov movsb cmpsb cmpsb sbb leave cmp ss rcl stos cmpsl movsl movsl add cs outsl out out loopne xchg das das movsb sub and scas jp jnp push ja clc call gs lcall cltd mov imul (bad) enter adc insl sub jno cmp cmp ss imul std loop and and xchg xchg in test fwait (bad) addb cmp sbb mov push cmp sub loop pushf nop cltd call and jle imul call call cld cld push ret rol mov lds push jno xlat xchg jge push add cmpsb add lea test sub inc adc in outsb add push cld call or mov stos stos or test cmp fild bound sub bound lcall test repnz test das lahf xchg pushf pushf cmp mov bound insl xchg mov outsb pop pop pop lock mov fdivl ss movsl mov flds pushf loopne pop adc shlb and test sub int jnp mov jb lea gs mov in jecxz test enter (bad) pop inc aad (bad) out cmp hlt dec inc adc xchg xchg lods out mov ja ja xor and sub data16 and jnp mov jle ds xorl pop push out hlt dec sub cmp pop push fs cmpsb cmp pop es pushf test jl jle inc (bad) cmc loop das xchg test sub fs loopne xchg roll hlt flds ret cmp add mov mov add push insl mov int3 and inc pop sti stc stc push jnp (bad) mov enter xor mov (bad) in mov xchg sub push xchg jo adc stos ficom cltd cmp lcall add add adc add inc pop mov mov xorl push fstp fadd jp stos xchg xchg adc or add add pop sub andl pop aam movsb leave leave mov xlat pop test push adc adc in das das cmpsb stos iret rcl aam sahf iret (bad) aam nop mov or jb jle gs xchg mov lods pop shlb xor or inc out xchg imul in in adc cmp sub repnz mov and and fistl insb sub or add dec inc and cmp hlt lret mov pop pop pop cmp inc dec dec dec sbb rcll adc shr jle push sub sub cld sbb adc xlat (bad) cld cld sbb ret dec dec dec (bad) rolb or add aam das add stc lock stc stc cmp lret enter mov enter jno repz push das push add push jb dec test stos fcom lea insb inc inc call call add repz aaa cmp pushf addr16 jno xor mov jo jp insl insl adc or inc ja jne sub inc pop pop pop sub cmp adc leave leave mov movsl push in pop adc adc adc fstpt scas mov aam insl jnp xchg scas dec jnp clc dec popf or movsl mov pop add gs mov mov adc popa mov enter mov in in adc jno fadds sbb xchg xchg xchg cmpb xchg mov add and xor popf xchg xchg xor aam (bad) addb xor cmp (bad) mov and movsb cmpsb cmpsb mov lods dec dec xor xor sbb pop movsl (bad) mov mov std cmp jle add mov call xchg (bad) cld cld xchg dec cs test lock mov mov inc jl pusha push jg dec add add jb lea mov inc enter enter js inc inc sub inc repz mov cmp mov mov push push push mov sbb push pop add xchg adc test das dec add pushf call popf cli pushf addr16 es add fwait xchg xchg xchg adc arpl mov pusha fildll sbb inc fiadd leave leave icebp ss pop pop pop or or adc out shrb cmpsb pop cmpsb mov cmp mov popf xchg dec imul xchg sahf sbb add inc jno mov mov addr16 jae xor inc push in sbb jmp adc popf xchg cmp sub out stos push pusha xchg bound ss xor aaa fist cmp xor sbb addb sub imul ret jle ja hlt cmp cmpsl cmpsb cmpsb dec pop mov loopne dec scas popa pop pop (bad) ljmp sbb jb scas jb icebp scas incl xchg sti cld jbe jmp stos ret cmp into test loopne call add cmovg stc stc jae lret test fidiv push cmc mov inc pop dec repz fs inc mov aas cmp cld jb jl pop pop push (bad) mov jns mov xchg aaa ljmp xchg jmp repz add cmp es popf push xchg shll jo mov jp cmp dec mov imul mov sahf and je ss pop mov repnz movsl shll in adc sub es das das js js jl dec sti aam clc mov mov je add lcall xchg ja jp push mov in inc mov sub aaa adc outsb out cwtl adc xor lds xchg push addr16 add fwait mov push cltd cmp jg ror xchg scas jg jg jg iret fs dec sti inc mov mov pop pop pop cmp push pop or pop pop shrb add add jg jmp imul push jo jmp push mov add mov add inc inc ret push jge insl adc movsl xor int3 scas push lcall pop mov xchg inc inc xor xor jne xor pop push adc mov mov insl xchg adc clc xor xchg (bad) pop pop pop sti sarb aaa popf ret enter (bad) arpl es movsb insb or (bad) popl pop lret xchg test mov fbld mov mov pop jbe push (bad) pop pop pop add fistp punpckldq mov cmpsb cs mov imul jnp jnp nop cmpsl dec int lea test ficompl jno adc mov leave out lods lret push getsec icebp ja adc adc adc push mov cmp sub imul pushf jno dec out sahf fcompl cmp in xchg pop add sub hlt ja xchg cmp fbstp cmp jg push or mov jae (bad) cmp inc arpl es repz and ret ret orl jo jae lahf push adc sbb add xor cmp std inc leave test dec mov popf push jne push mov pop adcl loopne add xor cwtl jecxz outsl sbb inc fisubr test jl mov xchg prefetch mov js call push pop pushf add add mov nop cmp aas shll arpl mov stos jo (bad) (bad) adc out adc mov popa orl mov cmpsl and cmpsl stos lret stc push pop pop aam push data16 add lcall in mov rcl rcl insb test sub dec aam test jb jns int3 lea pop fidivl xor adc adc outsl and fildll enter cmp shrb pop dec cmp pop popf xchg add add mov and push sub pusha sub ret dec inc sub ret ret dec jb dec xor xchg cmpsb shrb jns je sti clc cs lock inc inc es adc hlt mov xor push jb jp sbb push mov sbb ret lea lret movsl dec dec dec jbe sub jl add pop stc jae (bad) rcrl idivb arpl ret lret in adc xor in daa push cmc cmc sub aad mov push jmp add or pop lcall incb mov (bad) aaa inc fwait pushf push mov rorb fiaddl (bad) lds jne xchg (bad) dec sub pop pop sub popf push fsubl es adc xor data16 inc or cli ja scas out bound adc xchg pop imul test mov addl rcrb gs adc daa cli add inc stos es clc cltd cld xlat pop inc daa push push inc and dec dec sar aaa mov dec mov jo fmulp mov inc (bad) (bad) (bad) (bad) (bad) xor movsl xchg xchg ljmp inc and (bad) dec (bad) or addr16 movsb add imul mov in lahf outsb sarl or pop popf mov ret mov (bad) cld push mov mov cs add lahf sbb clc jbe cmpb add add ret mov xor sbb adc push mov les xchg fstpl push (bad) imul test pop jge ja frstor mov lret sub xchg pushw inc mov and jo sbb xchg push pop push pop xor sbb push push pop lcall jo jo lret outsl inc mov outsb (bad) jecxz arpl and and clc popf add (bad) ret and rorl dec test adc loopne pop cmpsb insl jmp leave leave outsl outsl xchg xchg sbb pop rcrl lods scas jecxz fwait jecxz mov (bad) jbe insl sarb nop adc divl jb adc adc rcl xor jno sub hlt cwtl movsl test aaa mov xor mov adc popf popf inc add sub imul xchg pop jno and mov jge lahf sahf fcoml outsl (bad) jb insl outsl ljmp add add out iret (bad) ret bound add or mov mov cmp mov mov pop add jg jle adc stc stc stc jb ljmp stos call out add sbb mov push pop in lea dec ret je repz add repnz pop decb jae or or daa imul inc adc stos stos stos ds inc push push push mov cmp js addr16 idiv clc sti sti adc inc mov (bad) dec lcall push (bad) (bad) or jae mov xchg lds mov sbb jecxz pop bound ss push aad pop pop pop loopne gs out out insb (bad) mov daa cs sub arpl cmp xchg arpl push add gs scas push gs xchg pop cmp mov test in in outsl mov iret ss aaa aaa faddp adc adc inc pop sub xor fsubrl ja cmp sahf into (bad) fcompl cltd sub imul jg cmp jo pop ret ret ret dec xchg hlt xchg mov mov rcrb jno (bad) dec pop and pop pusha bound les addl jp sbb pop arpl sub ja sub xor mov dec dec loopne pushf call mov lcall inc (bad) xor xor push dec out pop out sbb sbb lods cmp stc mov js pop push aad push mov mov adc cld adc sti sti mov enter pushf pushf pop ds insb add sbb aam lods mov push data16 mov fwait mov fcompl ss xor fs mov lahf test aad sub shrl jge and jnp clc mov orl xchg lcall jns mov add in in outsl repz aad xchg pop pop adc mov in ret lods outsl nop sub andl repnz lret fistpl imul incl or sub mov and pop dec pop pop pop mov je dec xor dec mov movsl ljmp hlt lea mov imul cmp adc cld and stos add mov (bad) mov inc movb les int sbb jecxz mov mov lret push add popa adc mov dec dec dec dec jae dec in lods enter lods stc stc pop dec sarl adc xor popf mov push xor pushf dec pop pushf mov xlat enter lret inc cmp mov dec aaa inc push loopne popf pop mov in into and xchg icebp mov mov push mov popa pop ss aaa ss bound add mov out out das das lods jmp jo jo mov cmp jnp jnp mov push fidivr test jno and test adc inc and or in in nop xlat pop dec dec and dec nop loopne loop shrl imul cld cmp push cmc and xchg sbb jl addb mov dec popf inc mov lods inc movsl push push cmpsb mov in in out jo pop cmp push cs movsb dec dec and into mov mov mov jle lods jb stos scas scas jge jge jg inc inc add js add (bad) push pop sbb loope cmpl cmp mov stc push (bad) ljmp or inc pop mov or outsb aas nop pop setno (bad) fdivr push (bad) imull push (bad) dec and mov mov pop and cmpsb cmp sti xchg fs xchg cmp jg xchg mov fiaddl (bad) fldenv jo insl sbb jl push int3 mov add loope push shlb rclb cmp fstps and add out daa adc pop das mov mov push aad add jno inc out popf test jno repnz outsl mov in fildll (bad) aaa aaa aaa mov call adc les movsb dec mov es or aas jae mov repnz fcoml pusha inc sub push test scas jl inc adc out or dec or hlt adc ja fs sbb scas jae icebp mov mov es sahf dec jmp in jno ds pop cld dec sub or inc addr16 jae fmull lea inc mov icebp adc ret (bad) aas mov roll push push xor xor bnd mov sbb lock insb fldenv stc stc stc adc push and (bad) fdivl mov jae pop call lahf adc js iret (bad) xchg cmp es cmp and aam roll adc xchg decl mov sub push push fsubrl add add ss addr16 sbb adc mov pop sub movsl sub das insb jl outsb mov add in mov lea gs push adc and and adc je or outsb inc push jns inc sti hlt in cmp add and sub jnp sbb shr sbb mov cmp xorl jnp xor ret mov mov inc xor cmpsb cmpsb fidivrl icebp mov xor out movsb adc dec dec (bad) inc jle loope mov push push xchg xor push pop pop or call mov insb mov sub les addr16 rcrb inc mov pop push test xor or inc and out cmp fucomi and push (bad) jl (bad) icebp jae add push pop faddl pop fbld (bad) push sub pop pop dec xchg xlat (bad) add js test lret dec gs outsl jmp and ret dec out adc outsb xchg jmp or decb cmp jno pop lahf sbb ss ss mov pop pop rcrb fwait jmp out sub fsubl int3 stos adc sub clc push jae je enter mov test lcall cwtl adc adc divb inc or outsb out adc dec (bad) lds mov loopne andb inc lods dec xor cltd and jnp in mov and mov dec xchg iret std jno mov and and pop sub gs clc (bad) mov rcrl nop (bad) popa ss dec and cmc mov jb cmc push mov call add add mov cmp xor or dec dec adc lea dec shrl push push (bad) repz add add ja pusha cmp xor lret nop pop adc sahf fcmovnu scas das mov push lods jb (bad) mov add andl pop pop pop xchg (bad) cli sti sti inc xor test xchg xchg dec fisubrl jbe aas into (bad) cs fcmovne xchg sbb mov decb mov pop rorb gs movsb movsl movsl rcrl mov adc adc pop movsb (bad) fldt shr int3 jns jg inc mov xchg jns jb push mov and cld xor and adc (bad) lret mov pop pop mov std xchg dec icebp pushf std sub stos subb mov sub mov and add ljmp outsl into jg,pt lock cmp add pop mov sub fs mov mov mov xchg mov in insl pusha pop jg fldenv push mov pop sub mov sbb cmp jbe cld aad lds (bad) dec cmp lea push rep mov fwait aad cltd (bad) out push mov jae lea adc data16 repnz jne dec dec dec xchg pop out push jp jmp (bad) test stos or adc jmp inc int inc call inc add jle mov add cmp or cmp ljmp jo cmpl (bad) sbb into adc decb jne stos adc mov push (bad) cmpsb cmpsb leave push sub jbe inc das mov sbb sub xbegin (bad) jb rcrb jge test lret xchg enter jb jne int lea daa mov lods in sub (bad) hlt mov sbb sbb cmp add fs out stos pop jne cmpsl hlt mov dec and push xchg aas (bad) mov sub cmpsl jno jg hlt cmp add repnz jne cmpsl hlt sahf pop bound jo dec out pop es mov adc in adc rcl ds addr16 push push sub arpl xchg aam or shll (bad) pop imul push cld or push loopne cmpsb loopne push cmpsl dec mov adc mov push xor test lds push rsm pop sbb pop lahf pop xchg push mov inc mov mov cmpsb and jle pop test dec sahf and sub mov push add cmp ss rcrb in cli cli adc jne or jbe pop (bad) scas pop (bad) stos cmpsb dec jns sbb jae fstpl mov rcrl pop mov out out das and movsb dec ret stos push lret cmp jnp push jae jae cwtl insl cmp jle pop fbld mov (bad) pop adc das xlat loope pop jne inc xor and adc fisttp or or xchg loopne loopne arpl es jbe fsubr sbb pop push popf push push call jg nop dec lods (bad) enter movsl cli mov jecxz cld mov lcall jg jg jg dec lock loopne,pn cs sub fstpl mov mov lock sub xchg loope or push mov cmp jno mov xor aas inc bswap lea inc out cmpsb push lret mov xor lret lret lret lret fstps pop mov lret push pop sbb sbb movsb stos scas scas pop dec sarl xchg add sbb jb rclb sti sti sti sti xchg sti movl addr16 pop fiaddl xchg ret xchg rorb jne stos es cwtl sub jge mov scas mov lret movsl movsl rcll stos data16 out out out mov jno movsb lret mov mov jle jnp (bad) sbb dec dec push pushl fbld mov orl imul inc inc and dec jae in xchg cmp mov xchg xchg call jno mov scas xor (bad) pop mov add jp imul cmp cmpl adc pop push sbb add (bad) pop je dec dec pop pop pop dec fstl mov paddusb subl pop in (bad) push pop aam call inc or sahf and jg out insl jae dec out imul adc je into cs push push aas xor mov ss cmp (bad) jo mov xchg insl mov shrb or cli mov call jg call push add hlt cmp and mov cwtl test ret sti lcall push out mov dec inc mov out fwait andb out mov inc and pop pop pop in shrl insl das les pop jae clc ret jbe aam lock mov xlat push dec push gs out cmpsb sbb out mov add mov sub cli in in in add addr16 or xlat shrb push in xchg dec push sub popa leave imul (bad) shl fdivl (bad) bound sub dec push cmp jle ret ret xchg sub adc xchg cs mov and pop push fldl notb mov push pop ljmp imul mov jo add sbb adc mov jo mov pop into mov cmp fadds (bad) icebp jae (bad) (bad) jl divl lea mov js mov xor pop sbb shll push (bad) (bad) mov loope (bad) gs jb movsl jo call mov inc inc xor call sti sti sti js repz cmp cmpl jp xchg push or imul dec sub rorl jne inc cli and xlat add mov int inc daa mov cmp mov stos aas data16 sbb (bad) out rcl call (bad) mov inc cmp dec push jb push popa adc xchg cmp mov mov add clc mov loop enter adc (bad) les lret inc dec imul addr16 inc (bad) ss and and pop imulb imul jg jg cmp inc add inc arpl ja lahf ja cmpsb cmpsb sahf pop jge mov mov adc jae dec dec shr rclb xor add (bad) and mov test call add push mov ret aad cltd mov adc add xchg adc cmp test sub scas sar stc pop xchg jge ja xchg jge ja push testb push push and cld inc stos jns push add int3 mov mov scas subl xchg xchg call xchg cmp stos lods lret dec mov xchg lods bound pushf mov mov jnp cli xchg fild popa mov lret mov dec adc cmpsb cmpsb add cltd sub jae mov cs sti push fs aam fwait cld mov (bad) jbe out pop and pop xlat aam xacquire mulps ret pop pop out mov popa mov cltd adc cmp out add push cwtl in inc cwtl lcall pop xchg xchg ljmp addr16 mov insb lahf lcall push in (bad) cmp cmp andl mov decl sar xor jae outsl pushf lods cld mov sub dec mov pop cmp lahf outsb popa push pop pusha out out hlt xchg or push xchg (bad) add add dec pop pop pop rorb jo imul jbe xor mov jmp push insb xchg loopne pop adc mov ljmp add fisubr fstl lret arpl dec fcompl or adc push jp in jp push cmpsl or pop mov mov xchg call arpl js (bad) (bad) divl add ret arpl (bad) (bad) (bad) dec aaa mov adcl (bad) add mov pop aam inc push or add rcrl xchg out xchg jecxz push aas and mov adcb mov push inc xor fwait adc cld imull jno in in in in data16 aas mov rorb in inc cwtl sub fadd (bad) (bad) lret sub scas (bad) xor add and mov stos insl xchg jl fsubrs imul cli mov ret ret lock repz mov sub dec dec jne pop pop pop pop test gs cmp jle aaa dec mov (bad) ret out sarb mov jmp call jmp add mov dec push leave lea xchg daa xchg push cltd sbb imul cmp stc stc gs xor xor xor insl pop xchg sahf out in sti cld sti and push pop push push test push mov cmp inc into mov call jbe pop add mov outsl xor or stos mov xlat outsb push mov test out movsl mov movsl movsb cmpsb cmpsb mov scas divl and rcl pop cmpsb cmpsb adc addr16 repnz das das les jmp add add sub sub imul or nop sub lea gs mov mov addr16 push adc mov aaa aaa adc sahf dec xor inc mov fnstcw mov js lea jns nop rol cld push or jns push jg ds mov mov lock cwtl lahf fadds xor mov sbb mov dec dec pop pop jbe pop cs add cmp nop push gs pushf add in xor jl mov jge (bad) cmp jmp stos cld ret xor call into sub sbb jno lret mov lock push stc adc test cmc inc cmp outsl sbb repz cwtl in cmc or jo xchg jb (bad) pop push fsubl mov stos lods fs mov call sti sti sti adc mov and cmp call fdivrl jp sub add and (bad) mov sbb pop ss and xchg bound cmpsb cs shll adc lods rcl pop cmp imul test lret push push jae clc mov fildll ficompl xor in in in pop sub mov inc xor out cwtl aad fiaddl dec cmp dec lret sub mov xor mov aam orl add xorl inc mov ljmp push mov fwait sahf icebp mov and icebp xchg aad sub adc add add stc idivb clc pop pop xchg call or add add mov insl ret cld or enter (bad) xchg xchg xchg sbb jge scas test ljmp or pop xor xor arpl cmp in leave pop cwtl push and adc jg push push push aad mov mov clc popf sbb sti sti sti hlt dec cmpl popa arpl or arpl fbld out insl insl sbb jbe dec xchg inc mov adc sub mov (bad) jo mov inc push cmp fs in lcall outsl lret ret daa imul popf insl sub pop xchg lock jae cmp pop push clc imul sbb jne add add call aaa aaa aaa fbstp in jns lcall dec inc inc sub or incb aaa pushf xchg test mov ficom jl jnp clc add or add inc loopne mov mov mov pop cs std pop out ljmp mov or dec xor (bad) mov test test xchg add insl add inc enter mov pop push fsubrs lret int3 xor iret lds push and fnop nop lret js lret lret in nop jecxz data16 jo push push daa cmpsb xchg jb icebp adc pop outsb sti mov mov pop pop (bad) cmp add mov enter (bad) arpl jmp arpl clc out je sub xchg shrl jp ja jne roll out arpl shrb and xchg fistp xchg pop (bad) lods out fwait sub or mov push cmpsl lret cmp lods (bad) lret std popl lcall jo hlt lods jno add xchg add jbe enter lret aaa mov sub int3 addr16 imul addr16 ja mov xor int3 mov pavgb sub jg xchg xchg lock daa inc jbe ja jp cmp rcl inc jb mov pop pop xorb inc cwtl movsl movsb movsl movsl push or orl stc mov fnstcw push pop call add sbb lds sbb push sbb mov mov cmp clc stc stc stc out aaa xor pop cmp cli lods lret fdiv ds jecxz outsb mov lods (bad) (bad) stos adc xchg stos or (bad) fsubrl mov xchg jb pop pushf push sbb dec pop add cmp xchg test (bad) push jno sahf mov dec mov rclb mov fild data16 add add cmc sub stos sub push push or ss sbb xor fsubr out out out aam fwait mov aaa pop jne test adc pop cmp arpl push jb jb xor mov lcall jno xlat das cwtl sti aad inc and fildll movsl scas adc adc jmp xchg fstp imul (bad) or (bad) fdivl mov loop test mov mov dec inc pop ret ja pop mov ja mov daa cmpsb cmpsb (bad) xor or movsl movsl movsl mov dec push imul sahf xchg lds shrl xchg push push dec cmp pop pop (bad) ds mov mov add cmovge pop je and lds aad (bad) incl enter stc stc pop pop mov cmp mov int xor nop sbb xchg outsl fsubs test push or or mov orl shrl add js jmp mov mov xchg das jo pushf pushf cmp jo add rol cmpsl dec and mov add (bad) fnsave sub mov sub mov ss cs or out out out push pop sub sar movsb test sub sub test enter lea mov lcall add outsl xchg adc inc cmp shll inc in lds int3 mov loopne mov ret ja ja mov pop push and test loop popa cli xorb jg ret nop xchg dec imulb jae ja mov pop pop fcompl cmp movsl movsl movsl and cmpsb inc ljmp addl push das jb cmp stc pop xchg xlat arpl call les cmp lds cmovge inc (bad) xchg adc xchg lds jl add mov lea add add mulb jecxz mov sbb sbb scas sbb lods cld push jp mull cmpsb movsb cmp (bad) rclb mov xor call jmp or mov stc (bad) sahf push insb loop dec dec and (bad) jb insl lret sbb push mov loop mov mov cmpsb mov xchg cmpsb cmpsb rol xchg sub je mov sub js and out fwait repz fisub adc movsb pop inc stos fstps inc or xchg mov test lock jb out gs sbb data16 aaa sbb scas in add adc enter lock in in in in sti adc (bad) les add (bad) xchg xchg xor push add cld fwait push cltd aam sbb into ljmp jg or xchg (bad) mov add and fwait cld cmp pop adc popa pop sub movb loopne mov (bad) sahf ljmp and cmp mov inc inc inc and pushf (bad) mov add lods add cmp dec cmc aad xlat xchg (bad) lds dec mov or add xor lret test cwtl jecxz outsb adc cmp out lods scas stc stc stc rolb ficom inc loope std pop pushf inc cvttps2pi imul adc pop sahf dec ss jno push jae repnz mov xchg xchg adc out jle xchg mov mov pop mov pop pop bound ss das mov daa (bad) arpl loope add cmpsb bound push push cmp adc and loope jnp inc cs out aad clc cwtl lcall jae jno xor xchg call popa jb addr16 push aaa mov mov std mov push subl jmp cltd ja xor fstpl test jecxz push popa sbb mov into aas aas (bad) sti ret mov sub or dec hlt or cltd sbb xor pop movsl sub dec rorl inc adc (bad) popa std sahf int3 or ret xor jg push call das pop jbe call lea push dec pop push daa inc mov push push push dec sbb inc les lock add stc mov sub jne aad out ret int inc das xchg pop add and fstpt lods jb jl (bad) in push cltd cltd push push mov leave inc inc loope xlat arpl rclb lret add add sti sti js repz daa sub inc mov andl daa jno jo jo jb out insl out loopne jne xchg jne arpl xor pop cmpsb sub leave inc rcrb das inc movsl mov (bad) fbstp xchg xchg lods test sbb ja fsubrl outsl xor inc mov push lea stc rcrb push lcall and mov sub ds ljmp cwtl jmp (bad) idivl inc cmp push jae push xchg sbb mov pop sbb lret (bad) mov mov ja push jb ret dec xchg and cmpsb sub mov movsb cmpsb dec cmp imul push movsl movsl movsl xchg pop xchg jle push adc rcll in icebp jb jb adc or mov int mov divl push add (bad) call add sbb shrl xor sub mov sbb xchg pop add push (bad) push fxam adc stc stc jb (bad) xchg dec shrb lret rolb (bad) jl call jb pop add fistpll mov cmp pushf push outsl pushf cli xchg mov bound dec out fldenv bnd fisttpll fistpl cli rcrb pop insl mov fiadd movsl movsl xchg cltd rcll mov call pop daa mov xchg aam pop (bad) outsl test pop test jb xchg jb (bad) gs mov xchg cltd adc hlt insb xchg adc cwtl jmp jp mov inc lret cwtl in inc cwtl incl aam cmp cmpl mov and lods dec pop iret in and ljmp mov sahf lret mov sub data16 mov or mov fistp dec dec xor popf clc pop shll jne call (bad) push shlb call jne jmp (bad) ret outsb outsb outsb outsb mov dec dec dec movsl mov push adcl mov cmp inc lds lret lret fnsave xor lock imul cmc stos push mov xchg clc inc push push add mov cmp aam or insl xchg call sti sti sti lcall (bad) fwait loopne adc or jno shrb xchg sbb push jmp ja roll sub dec cmc sub sbb js leavew inc fidiv sahf push fildll lcall adc pop xor in das mov mov in mov lea insl inc (bad) (bad) pop adc mov je dec xor adc pop sbb adc (bad) mov fcoml ret mov inc add imul and sbb add and test lahf sbb adc addb jmp hlt mov hlt sahf pop add pop fcompl cmp dec sti cli insb cs lock stc xchg stc add pop or jne cmp call inc les adc fistl sub test movsl ret imul sub pop pop mov inc jne ret push cmc or fistl xchg out lods xchg cld popf sarb stos stos stos divb jnp fsubrs dec sbb or out fisubr cmp mov mov pushf pushf movsb (bad) cltd (bad) (bad) (bad) or insl int leave pop push stos add jb movlps dec jns pop cmpsb add cmp pop or cmova arpl pop das dec test pop push xor inc push insl das adc pop call sbb jnp push mov lock out data16 fs mov sub mov add cmovb in dec sub data16 cmp dec andl imul jae jno cltd sub push call cltd call inc or adc mov pop lods mov lcall dec mov movsl sahf pop fsubs pop rcrb cltd mov jle mov idivb push push call and inc add in frndint ret xor (bad) xor pop mov mov sbb cltd sub sti je divl movsl data16 inc push aas pop cmp mov arpl pop sahf lret pop inc pop dec repz push push daa push cmc cmc xchg add lods (bad) stos stos adc push aam inc inc cmp sbb test test adc pop cmp inc add dec mov pusha arpl xchg iret js xchg pop gs mov ret lds mov lret mov arpl lods and push pop mov daa cmpsb cmpsb sahf pop sbb ss ficom movsl movsl add mov adc clc pop rcl movsb push jbe xor test mov jb push enter (bad) test mov clc scas in add jne enter push pop adc sub cltd cmp mov stos cmp ja and xorb sahf (bad) scas push jno sub jae or sub mov (bad) add xchg fisubl stc lock mov mov xor cmc pop mov adc push push adc add xchg bnd mov stc sahf or push cld mov inc (bad) std cld cld cld jmp cmp fldenv mov xchg jge sbb int3 cmp add lea push lea mov and leave fldl sbb cwtl aam inc xchg imul inc cmp push push ds lock stc push ficom inc int xor (bad) out inc call sti jb add add ja arpl mov or fs sbb xchg sbb mov inc mov out pop fnstcw rcrb mov lcall dec sbb pop hlt ja adc cmpsb pop repz pop lret mov aad addr16 pop push test lock pop lcall cli cmpsl cwtl mov adc sub jne aaa popa xor out outsl in in dec cld sub mov add add cmp and and pop sbb aaa adc mov jne fistpll inc and dec jl leave cmp hlt mov in dec dec cmp pop bound inc inc inc inc inc std jl jle add jp push jb adc pop pop dec mov mov cmc inc or ret mov pop mov inc push popf jge imul cmp jbe and out push dec lret xor (bad) lret and loope push imul push push push push adc stc stc push ficom mov add inc jnp bound lcall adc pop mov jo cmp outsl sti test scas arpl arpl (bad) add xchg rcrl adc xchg mov mov push pop aam dec rcrb ds ja xor ss rcrl push fnstcw pop add data16 mov adc ret movsb push lods rcl pop and jmp jnp jnp lea mov xchg mov jno insl cltd dec xchg adc mov lock ds aaa adc in mov in nop add testl mov outsb cld jnp xlat xor fcmovbe bound sub xor hlt subb xchg cld xchg shll jmp ret lock xor insb dec jbe pop sub xor pop shlb adc adc xchg jle stc stc adc inc jge lcall dec mov cmp mov dec dec cmp aam push pop xchg sub push insb add xor jo gs and pop sbb push cmp pushf mov lea fadds movsl pop add jmp cmpsb push pop xchg xlat arpl jo pop hlt or pushf stos mov int mov sbb sbb lcallw xchg mov add sub and jae or xchg cmp push imul adc (bad) fs aam outsb fistl jae push fs dec stc mov (bad) cmp (bad) data16 jbe xor repnz adc sub pop es jb cmp sti xlat adc adc inc add mov jecxz imul mov push dec cmp cld out push in aam cld stos cmp adc cmp (bad) ret inc mov xor dec vmulpd mov mov movsl movsl sub jo jle or jns loopne add mov ret call add cmp dec cmp add movsb ja push cmpsb push lods enter aas scas add insb pop push pop cmp inc xor and cmc cmp lock inc (bad) lods push mov push mov push and subl inc inc pushf sti xchg sti pop call or mov jno iret call stos arpl into stos xchg adc mov lea (bad) jb ret push sub mov pop cmpsb sub fimul add cltd shll stos out mov adc mov jp jecxz (bad) jle mov popf add lea xchg pop jl sbb repnz inc into scas in in mov sub sbb add xchg scas sahf subb popf xchg bound (bad) ss jo rcr sbb aaa jg stos adc jg jg mov mov ret inc mov mov cmpsb or mov adc loopne push fsin sahf test out adc aam test jo mov stc jb jp or icebp adc loope pop add cmpb dec or cmovge data16 test loope fsub in lods xchg or lods insb repz add and je mov lret lock repz in lods movsl lods lods lods inc mov loope popf stos or push or push xor pop xchg out jmp addl (bad) das leave mov push arpl stos pushf rorb jns dec out mov xchg add rorb or bound sub pop cwtl mov jbe aaa inc jle mov movsl movsl rcr pop and jns jns das sub sub add outsl clc mov popw (bad) rcl dec add xchg repnz jecxz mov or sub adc addr16 mov sub (bad) xor daa xchg mov push adc andl pop mov xor jge add push andl jae leave imul das xchg in lahf cmp lcall sub sbb cmpsl cmpsb cmpsb cmpsb pop xorl sarl adc adc test ret ret xorl xchg repz xchg cld cld (bad) xor mov xor lret mov adc (bad) push push jns rcrb loopne push add inc xor jno cmp and fdivs jae mov cmp sbb sub ds inc loope js pop xchg fucomip (bad) jne sti sti xchg lock cmp sahf dec mov loopne and mov add rcl xchg pop fs push xor inc sub pop pop pop push pop pop (bad) (bad) cmp lods sbb pop das push fsts test movl lock push jae push addr16 je lea lret sbb gs ret pop mov je sub lcall adc fistp aaa aaa aaa mov iret adc sahf dec enter push je imul and (bad) sti (bad) ss sbb loop mov arpl es mov add jns pop inc in sbb pop cwtl cmpsl mov je push mov push sub inc fadds pusha insb push cld ds imul mov xlat arpl movsbl cmp cmp (bad) pop int3 (bad) dec inc xchg xchg scas push out push mov add inc add cmc jne jo fiadd call dec rcll nop aam dec mov dec stos daa std jl mov pop push push add loope js adc pop add repnz das repz pushf mov or (bad) dec xor mov mov mov mov bound mov fisubl gs mov or sbb sti aam cltd jmp sub ret jnp lock mov jb jb gs xorl addr16 mov gs arpl pop cwtl aad inc in data16 xor je xchg xchg loopne fwait push xor bnd ja mov and imul inc mov jo test enter sub mov lahf shrb jae mov pop sub dec dec movsl popf clc pop shll add gs inc mov add call push push push push push mov aad mov pop jne mov leave xor push push shrb lahf popl push xchg add stc mov lea cmp xor or ds in pop jecxz int3 fcoml mov push push je cmc test add aas push fcomps inc jmp inc enter aaa cmpsl push pop sarb out ret enter cmp dec imul fsubrp mov lcall call jne mov test les cwtl pop push fild cmpsb cmpsb cmpsb push gs fidivr sahf push mov movsl movsl adc add rcrb aam daa aam and pop test dec inc inc inc inc inc push int3 adc mov pop cli cmp enter sbb mov aas in cwtl jecxz shl add dec add xorb mov push mov rclb clc popa mov subl mov dec xor out cld mov cmpb or sarl jmp push xor mov stos lds cmc push and and les lds sub mov into mov arpl test jbe pop ja add inc (bad) or push push mov mov lret aas fcompl sbb sbb and push and dec cld adc stc stc mov push push push push jmp mov inc inc cmp add sti sti jle mov xor movl jcxz jo add or xchg mov xchg dec xor (bad) in xlat (bad) jmp test rolb cmp fimul leave add or mov xor jmp (bad) das sub mov lea dec lea pop fbld lcall mov xor xchg mov sub inc sbb cmp add mov std mov loop fwait subb xchg fdivl leave sbb imul xchg jl sahf xor sarl jo ja mov pop pop pop pop bound mov mov xchg sahf rorw sub add mov idivb call adc sub inc sarl cmp mov mov jle test nop xchg xchg mov ret (bad) pushl cmp lret bnd xor xor repnz out fwait sbb sbb mov push sub mov rcrl add clc int3 add pop pop (bad) jp add sti cli movl arpl pusha push jnp scas sti popf push ret xchg xchg lcall mov mov movsb and mov int3 leave leave mov das inc mov sub adc insb loope (bad) cmp shr das xor sub ret jnp lock inc sarl clc outsb pop lcall popf cld xor and cltd sbb cltd adc inc cmp loopne jb nop jmp data16 pop cmp (bad) (bad) les mov popf addr16 push notb (bad) and and in mov orb orb cmp iret cmp dec xchg inc cld outsl rcrb mov adc icebp mov inc mov loope adc test rolb push mov call adc add jbe cld push add lea decb (bad) jnp mov xor sbb ds mov add xor arpl push inc lret in jmp push push sbb lods xchg pop fstps fimul pop push push push mov int cmp inc push cld push xchg out adc (bad) jnp add add and icebp das adc gs dec jne add sbb rcl xchg lret push jb roll (bad) jne inc mov sub inc cwtl mov xchg je pop fwait mov lret outsl iret outsl addr16 dec shlb (bad) shlb stos sub sub mov jns lea popf (bad) stc cld lock sbb int inc cltd mov sub gs fildll sub mov repnz jae xchg (bad) xchg xchg xchg xchg add xor andl xchg ljmp incl andl dec xchg pop xchg xchg cmp lahf lds ja popf push bound dec test jne pop es test jecxz ljmp cmpl inc stc mov pop bound pushf push jecxz les or (bad) ds sub mov cmp test xchg xchg xchg loope ret (bad) decl add jb or pop or sbb sbb sbb push push lods inc mov clc cli stc push jbe outsb popf and inc mov jmp pop cld sti hlt jg cli sti (bad) xor mov bound add ja (bad) (bad) (bad) push mov scas xchg xchg xchg lret cmp mov aam cwtl push (bad) pop pop ss cmp and pop fldenv pop jmp pop lods xlat sub stos dec sub sub xor jp lea mov gs mov popf jae in in add pop xor fbld in in nop xlat add push mov xchg xchg xchg xchg pop orl xchg xchg push mov mov hlt (bad) and pop push and and push sub cmp addb cmp inc add jne xor mov mov mov into pop dec push sbb jmp cld leave adc insl mov stc stc stc jp adc call or push cld ret aas outsb outsb ret mov push test add add out stc stc test and lret movsb xor in in pop xrelease lods lods xchg push push stc stc mov push iret mov or aam inc inc shrb sar jae sti sti movb lods lds icebp mov cmpsl pushf pushf loopne add or insl insl push xlat insb nop popa lret (bad) jne (bad) enter and mov sahf sbb mov mov icebp jae xor pop mov popf mov mov mov shrb and sti xchg popa repnz push mov push pop arpl xor jno xchg outsb sub in enter jp mov insb and cwtl adc rorl sub imul je xchg jno xor cld xchg int3 push int3 sbb outsb jmp divl and ror mov cld jno mov mov stc icebp icebp mov push mov loope mov push adc dec mov mov call pop cmpsl inc add jbe mov push ds ret int3 stos mov mov ret cltd push leave dec mov mov stc adc mov push add push pop lret xor hlt loop nop pop xchg mov dec stos and clc std jns pop push iret mov or and inc xor adc sti js in and dec ret leave dec mov mov fwait int addr16 adc insl mov mov cwtl pop lods arpl mov cmpsb cmpsb pop and push pusha pusha or or jne movsl adc sub lods and sbb push pop and jmp in shrd pcmpeqb test jae gs inc sbbl lea cld adc mov aam jns in in nop add dec andl xchg xchg cmpl ja xor pop shll xor out xchg xchg stos pop lahf hlt add or and mov mov rclb adc icebp mov testl movsb mov xchg std or ljmp or addb icebp push mov push bound call por cld cld cld cmp pusha (bad) mov push push push mov sbbl push add and mov pop bnd mov inc enter (bad) xor sbb adc mov mov mov adc xchg pop insl or jl mov xchg jbe ljmp cmpsb iret mov das bound xor xor popl insl insl adc stos xlat jle lea iret jp ret rcrl pop pop cmpsb es pop pop pop popa mov inc je xor mov out stc das das das (bad) in rcl test aas adc (bad) lock sbb jo jb jb jae fwait lcall jle js mov jecxz (bad) cmp add pop lcall aam fmul jb popf das push outsl loop (bad) js jl ja shrl mov imul insl inc lods or sahf cmp cltd add jg js movsl adc sbb push out nop aad inc cmp dec aad aad xlat test bound jae gs push out icebp xchg mov lahf ret mov cld xor push sti mov add jl sub sti les dec dec lcall xor je (bad) pusha or cmp aaa sub mov and outsb push xchg icebp push inc repnz sub xor xchg mov mov jno xor jno pop pop negl std mov icebp mov push add movsl jmp mov and mov lcall mov out nop mov xor jnp cmp pop cmpsb cmp xchg lcall push jb and adc pop sub ds sbb xchg inc dec sbbl sub add outsl lea bound add popw in data16 sub cmp cmp jnp test xchg ds fwait hlt fwait addr16 pop in int3 test mov imul xor cmp mov add add sub cmpsb sub pop dec mov test and in xchg loopne jl sbb cmp rclb jl call push push les adc sti lods ret mov adc insl push cmc in inc add add jae cmp or data16 sbb xrelease mov (bad) jb add add stos sub xor mov mov pop call repz dec xor dec cmp cmp ret mov pop jae,pt jl aad mov xchg xchg out stos iret outsb out add jb ljmp clc push rcrb rcrl cmc inc xor mov lcall loopne out and and sti insl fnstsw inc data16 pop inc rcrb lea mov mov jle mov out stos cmp inc add fsubs sub cmp xchg and stos call sub and mov loop cmp test orb cmp lret sub mov mov xchg xchg or mov in out mov mov icebp cs pop rcrb adc or jb (bad) push mov pop scas push pop add add mov sub aad popf mov sbb and (bad) push (bad) pop jmp (bad) incl inc and mov xor dec nop pop aas or (bad) push (bad) lock in stc popf push int3 stc stc stc push hlt loope pop push data16 xor mov pop pop pop pushf push (bad) jo repz lret inc cmp mov inc pop inc dec pushf pop gs sti stos mov in sahf and fidiv or cmp mov sbb ss add pop mov and das das das lods jmp je jo sbb pop lock jnp jnp hlt mov push int3 (bad) out mov lret xchg adc jge and je in in in in das mov jne fdivrl inc test cmp adc loopne dec (bad) int3 loop outsl loop addr16 das sub sub fcomp and push add test or xor cmp jne jnp cmp or fcmove mov (bad) push cs movsl movsl movsl sbb add add cmc cli lret jns add pop out xchg bound lret cld push push cmp dec movsl xlat push push push test cmp xor (bad) lea push or cmp mov aam and nop ret nop pop mov and (bad) push sbb push xchg inc push fiadd xor rclb call add sti js mull dec sub dec pusha arpl ret pop int push (bad) adc or push mov mov xchg xor sbb aad mov je push mov pop cmp inc shrb arpl stos adc dec mov sub push add inc cmp hlt jle mov lea enter movsl fcomps (bad) jno test scas in mov enter sub (bad) insb sti xchg enter imul jae sbb flds sahf fsubrl imul idiv cmpsl addl ret dec repnz mov jmp addr16 mov mov mov pop cld iret movsl pop mov movsl push adc cmpl jp adc mov jge incl xlat cld cld pop imul cmp lea mov loope or pop push call add (bad) ljmp xchg sbbl xor xor sbb dec outsl movsb (bad) cmpsb inc leave sub mov push rclb mov loope mov adc sti sti jb sbb cmp dec dec sbb add pushf jo adc jo sbb inc outsl insl insl sbb inc ja jne push ss pop pop pop lds aam movsb cmpsb cmpsb aas aad dec leave leave push mov movsl cmp dec das adc adc rcl mov scas fcmovnbe aam mov jg decb or lcall mov mov enter out lret enter inc sti cmp cmp sbb cmp inc mov mov and xchg xchg xchg jl imul addb cmp (bad) iret (bad) ss repnz movsb cmpsb cmpsb or mov mov inc daa pop pop imul xchg stc add inc or add scas jb or cmp xor inc push movsl jg,pt push dec dec dec dec push mov int aam adc divl inc mov add add adc adc mov xor aas repnz xor pcmpgtw daa loope daa jmp (bad) icebp mov (bad) pushf stos ficom lods xchg jns cmp push push sahf push add js stc enter mov (bad) bound or mov xchg sbb push iret stos incl cmpsl sub subl mov cltd pusha add gs inc and iret lcall out out out out mov stc movsb xlat adc and movsb sub sub test jne (bad) mov cmpsl lcall xlat jnp in addr16 das cwtl sub aaa sti sti aaa aaa clc add cwtl pop in cmp add mov imul jg xor sub subl imul or or ret jecxz adc xchg ja pop shrb sbb loopne in movb test jae fstpl add jbe cmc stc std stc stc lea cs or xchg cmpsl add add dec pop or lcall mov push sbb cltd push popf add push outsl (bad) (bad) (bad) cmp out out ret int inc or jno cmp sbb dec movsl lods lods daa pop xchg or xor pop mov testb sub arpl rclb lret sti js repz sub hlt xor xor and cli jnp cli xorl insl xchg and mov dec (bad) test fstps lock cmpsb sub cmpsb sub leave inc into pusha gs das jp dec jp sbb data16 pop mov (bad) jbe pop fcmovnb xchg icebp aam mov and jnp sarb sarb (bad) xchg out xchg adc jns sub cltd in ljmp add mov aas sti sub lcall ret pop stos (bad) dec push imul rep ja fmull cmp sbb xchg and jg pop fisttpl aaa clc add mov ss or cmpsb sub or dec (bad) mov pop sahf data16 es mov mov sarl (bad) stc std pop pop pusha add (bad) pop add mov cmp ja cli cmp icebp cmp cmpsb push sbb push scas push mov cmp and incl test push (bad) (bad) in aaa push lret inc or fucomp dec in cwtl fist in push sti push fnstcw mov push mov sbb lods outsb jnp mov call out call add fstpt mov das insb rol call loopne xchg js xchg jns out lds dec insl jne popa nop jne xchg pop (bad) mov add cmpsb sub cmpsb sub leave and ja shrl push adc adc jbe push adc pop daa adc pop sub xchg dec test insl rcl rcll test imul add cld enter jp fistp in in in cmp xor mov cmp dec xchg push ja push outsl mov arpl (bad) xor and xchg ljmp or xor or dec cmp cld fwait es ret jno pop push rcrb adc icebp mov repz jle cs sahf (bad) pusha das cwtl push in inc mov (bad) xlat jmp scas push in cltd dec push pop xchg xlat arpl sahf ss inc inc add aaa ret lea mov cmp dec adc xchg jle pop aas mov add (bad) leave push push push push idivb mov xor xor mov sbb sbb mov movsb daa stos daa add jb dec in push xchg insb in jmp inc int sbb lcall stos cmp aas pop cwtl insb out arpl icebp mov jo jo in in pop (bad) lods (bad) mov mov dec movsl mov lcall ss data16 adc fwait out out xor das das lods out daa movsb imull das adc adc xchg lea jb dec sbb gs xchg lock add mov adc inc aas enter push adc sbb adcl add jo pushf enter in jno popa loop loop jnp cmp or pushf mov mov jae mov push bound sub (bad) mov cmc pop sarb adc cltd mov hlt cmc push mov push mov add bound call pop cld push pop mov cmp dec cmp movsl jnp mov adc push sbb jns lret movsb je add xor pop sar iret lds mov and js fstl in in aas and pop push (bad) loope mov and and scas inc inc inc cmp push pop arpl jo add mov push add cmp push imul insb or mov jp shrb cld (bad) bound jne pop aad dec adc das dec mov or leave leave inc and nop or mov mov pop mov pop movnti pop xchg cld sub repnz gs mov in enter pop inc cltd push and adc lcall enter dec inc in in in sub xchg cmp cmp xchg xchg call aaa lahf xor mov and stos cwtl xor cmp xchg dec sub (bad) sub xchg cmp cmp daa lahf push and or dec dec (bad) cmpsl loope pop pop sar dec test arpl test jle jle in add (bad) jg jecxz call jmp push cld cld ret aad insb ret cmp movsl xchg sbb push jecxz jge scas add add stc stc test inc lret xor fs xorl dec in push sbb lods lods adc push push push dec fsts push mov inc push sub inc call sti sti sti adc cmp jno (bad) arpl pop xor (bad) (bad) jcxz insl insl insl and mov jne pop adc mov or ss movsl movsl fstps adc pop daa stos fstps add sbb (bad) sub aam lret mov lcall mov xlat ftst fdivl inc xor ds in in dec dec dec rorb xchg dec sub popf pop adc jb inc xor xor mov jns jp dec cmp sub xchg cmp lcall inc sbb pop or ljmp xchg out rcll inc std movsb inc ljmp test (bad) test call cmp and inc add insl aad insl ret (bad) cmp js movsl xlat xchg loope ret pop test pop (bad) push (bad) ljmp gs sbb movsl das outsb lods mov or icebp (bad) pushf stos fcomps mov xchg rcll sbb cmp add cltd push add cmp push lahf arpl add lahf or mov xchg mov or clc ljmp fcomps pop aad rclb es xor or cmpsb lcall pop adc mov pop or pop icebp sub pop stc popf mov gs xchg sbb data16 dec or add lods adc pop movsl enter xorl clc das sbb test lret jb cmp xchg sarl pushf pop cld cmp push cltd aam rcll in mov or cmpb cli sahf aas mov lock sub mov (bad) ja out push jb mov jg jg jg jg imul aad inc inc inc inc rcl rorl aam or stc jae repz sbb jbe mov mov aaa std dec xor mov dec imul push push add mov stos (bad) ljmp ja push lock mov pop or sbb outsb movsb push push lods push mov jl mov popf stos mov call call and adc cmp xor dec cmp push ret and dec push lret lret fisttp iret sahf flds iret pop add sub push push push rclb dec loop pop push push fiadd fcmove pop scas out mov sar mov sub push xchg jp aad enter out xchg gs pop pop out cmp or jo xor cltd xor test aaa mov enter lretw sti and popf (bad) lcall xchg mov add xor loope fcomp fsubrl imul inc mov ret sub xchg and scas add pop cmpsb sub cmpsb mov inc mov andb movsl movsl movsl cmc std int3 push ljmp inc sbbl jo repz adc push jle,pn ja mov xor (bad) lds mov mov push jno loopne push daa xchg incb mov stc aad (bad) jb lea push ljmp sub lret dec in pop in mov cltd jo sbb mov adc insb lds out out out inc inc call mov add jo (bad) xor das outsb rcrb outsl mov sti movsb fadd (bad) out fnsave xchg mov (bad) lods pop (bad) inc dec push adc cmpsb add and fnstsw cs rcll mov pop adc adc jbe push mov jo data16 dec mov pop mov inc inc inc faddl (bad) mov jnp jb push jp add adc sbb mov adc rorb ficompl add cmp loopne loopne,pt call lods and dec or fsubrl sbb in cltd xchg push and mov sub xchg cmp and and and pop dec pop pop pop mov int3 dec dec xor mov pop shll jne call (bad) push jb cmc ret xor bound jne jmp push cld ret outsb outsb outsb cli dec pop dec dec dec movsl sbb push subl data16 (bad) shr mov and lret (bad) lret repz sbb das push fdivrs cwtl mov pop pop push mov call pop call hlt dec cld jbe aaa xchg xchg das push arpl cmpsl jae pushf ret xchg out mov xor add add clc push sub mov push pusha insb pop or (bad) comiss inc mov or adc call das movl test cmp gs dec das sub sbb jno adc enter or add rorb xchg dec sub arpl outsl pop mov and mov aam mov and push cltd das aas xorl xchg es test xchg xchg lahf pop hlt mov cltd sub loopne pop mov popa mov bound es dec dec dec inc or or adc jmp push inc or fdivrs rorb movsl push push push push mov xchg xchg xchg jge call jmp mov inc incb cmc fiadd mov cmp pop dec repz add add inc mov mov dec adc int3 xchg (bad) pop sbb ret mov mov fcmove jo (bad) xchg outsl pop outsb and cmp mov out popf and incl sub pop and shll sub mov inc cmpsl imul add rcrb (bad) sbb aam test daa es adc lea xchg fcomps xor test scas in das dec test jne popa mov adc inc cmp mov xchg xchg mov imul mov jg (bad) and (bad) stos loop cmp test xchg addr16 sub ret cmp lret (bad) sub cwtl (bad) cmpsb cmpsb rcrb nop jno ja cmp dec es pop sar iret pop inc inc ljmp jle dec mov add jp jmp push pushf bound pushf push sub sbb or sti cmp push mov dec dec cs test add mov call adc inc push mov inc and sub lret xor repz lods repz cmp stos and inc push push mov inc cmp adc mov jo adc jo xchg cmp mov pushf pushf loopne orl sti mov push (bad) std inc add push pop (bad) pop pop (bad) push mov pop pop pop add inc lret leave dec cs pop scas out fdivl test xchg aam adc pop jo imull test lea inc gs outsb jno mov jne (bad) lahf xchg inc cmp inc aas fistp rcll cmp inc adcb add mov mov add test loopne (bad) pop mov cmp ljmp ja ja pop mov or cmpsb mov repnz sub rclb pusha loope jmp sbb sarb adc mov ljmp ret xor add cmp or in ret std movsb xchg mov mov mov push jns push enter mov je incb mov andl mov sub (bad) xor aas sbb dec adc aad mov jns stc stc sub js push adc cmp cmp in pop pop push pop (bad) fnstsw sti sti stc (bad) mov inc cmp (bad) arpl sub add add mov jo adc add cmpsl and test rorl mov fstp mov xor pop fisubl mov push scas stos (bad) jo je sub sub mov dec lea lcall popf cli xor daa inc sbb sub enter popa popa inc aam add mov cmp inc add jge andb pushl out sbb sbbl test test sub xchg sub cmp dec xchg add mov pop shrb scas (bad) lahf pop ja dec dec repnz std or jle inc xchg add add (bad) (bad) jb or and (bad) fildl add cmp dec xor test xor xor pop mov add (bad) jl stos push push push pop js mov xor cmp xor cwtl fist inc mov lods stc (bad) dec cmp dec std pop (bad) mov rclb call cmp cmp xchg pop sldt add add adc jnp rorb dec (bad) shl mov arpl or xchg xchg xchg adc popf add cmovp mov pop xchg xlat stos sahf sbb push pop pop pop fldl mov push data16 push popf pop sti out out out add call das das shlb sarl pop cmp orb icebp jl cmc stc mov adc jno jno mov sbb cmp pop sbb lods cmova stos push pop std mov mov shll stos fistp dec ljmp data16 xor cli xchg mov mov dec mov outsl pop fisubl pop sub cmp stos cld sbb mov shll jo adc jge movsb in cli and add pushf test stos pop jbe xchg cmp add int3 xor add add push loopne (bad) mov mov pop and inc push xor xor inc xor adc pop add jno hlt mov and jmp fsubrl adc int3 mov push pop arpl pushf push vmread cmp dec (bad) xlat inc mov jecxz ja sti mov jnp repnz mov inc dec add sub arpl pop (bad) dec cmpsb sub cmpsb sub rdpmc pop or pop xor sbb out mov adc sarb (bad) test xor push imul xchg xchg (bad) divl push rolb lcall xor cli insb and in in jecxz xor inc mov sbb sahf push sti xchg dec or imul mov cs gs cltd aam ficom loope nop scas sub jg xchg jne mov sahf cmp add xor dec cmpsb sub sbb jecxz ds dec jecxz loopne iret movsb cmc dec and ljmp hlt xchg mov jb or mov and cld add mov jae cmp cmp push push push jns jns lods test dec out out movsb jg stc mov xor xor mov mov sbb lods sarb xchg clc stos adc push push stos ficomp mov mov cmp mov dec xchg idiv jle (bad) hlt jo or mov mov arpl jecxz jnp sti mov bound repnz sbb push mov and bt rolb cwtl dec ds pop push jg pop pop out mov adc stos out pop cmp sub xchg cbtw gs ret jb pop lcall add add stc sub mov adc lods addr16 inc xor inc inc sahf pop out xchg xchg cmp sbbl xchg xchg hlt mov repnz repz and pop and data16 sbb xchg inc mov cld cmp pop add jg jg jg jg imul inc inc sahf pop add or mov test dec mov lcall mov and ret dec push mov dec ja aas dec ja loop xchg jae push out lds std std cmp jae test pop inc in cld pmullw mov lret inc sbb ret inc inc rep pusha pusha pusha pusha xor xor cltd fcoms stos jecxz xor pop pop lcall mov pop push daa iret dec xchg jecxz xchg mov sti lcall pop out push pop out fstpt mov test hlt sub mov sarb leave enter fwait shrl in push insb push adc sbb sbb lods in das stos lret sub jp cli stc pop test mov lcall sub das scas adc das inc add lock mull add mov out stos pop mov mov jno xchg add push sahf and aaa xor and dec cmpl mov (bad) ss xchg xchg xchg xchg xchg xchg xchg jg jg adc add movsl push popa xchg out (bad) (bad) (bad) fnstenv push mov stc cmp mov cmpsl push pop mov xor add iret iret icebp icebp icebp pushf pop lea cmpl pop pop pop xor dec mov mov lret xchg sbb cmc add div xor add sbb pop sbb inc stos mov push stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc add addl stc stc stc stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl jecxz popa arpl cltd lea push test mov mov mov jnp pop sbb xor jb pop pop add pop xor in out xchg clc in out mov cmp sub insb jns mov lcall xchg jae dec imul in mov xor aaa or adc fadd les imul outsl jne lahf outsl jne fadd (bad) (bad) (bad) dec jo imul jge aaa fcmovb ret fcmovb ret adc ja outsb jne aad pop pop icebp inc mov jne mov imul adc xchg fwait addl jecxz stc ret or adc add add cltd daa dec dec sti push dec dec test xchg xchg pop in decl in push or aaa xor outsl cs xor lahf add sbb mov lods jle sti stc and dec push push scas dec push push mov mov pop das or sti movsl out sti xchg fcmovnb (bad) mov jg arpl jg (bad) aas xchg lea inc mov mov add loop imul ja xchg ja push cld sbb pop pop pop add out out out adc scas das stos xor mov push (bad) inc push lret jnp jnp jnp lea lcall jno jno jno jno in in in in in in dec mov adc adc adc adc les mov xchg push das push pop push add ja cmp and mov das push sbb or sbb adc sbb mov ret ja ja ja ja pop or pop (bad) push xchg repnz mov xchg add sbb leave xor adc sub rolb pop sahf cmpsl mov xchg cmpxchg (bad) jl cmp or dec decl gs lcall dec mov push inc je addr16 jae pop push bound inc push jae ja pop sbb loope enter mov xchg popf xchg pushf mov adc and xlat fmul aam lock add add jae jb pop sti sti sti mov mov scas clts sub (bad) (bad) in std loope (bad) mov decb out (bad) out int3 (bad) (bad) iret (bad) in xor cmp ss ss cmp pop sub out xchg (bad) out shr das inc das inc das das sub sub push sbb dec push dec push dec jnp lea mov xchg je and push sbb ficom enter iret push sub push push inc daa frstor pop fimull jo iret nop out arpl imul dec flds and rcrb add push scas xchg jbe xorl xor cmp pop jp das ljmp jbe sub out loopne mov mov nop mov mov jo (bad) repz inc xlat pop dec (bad) mov aaa cwtl add aad xlat inc pop cs aad inc push sbb daa int pop flds or fisubrl sahf cltd add jmp mov int3 rorl pop sbb pusha insb inc negb lret in push jge fnstsw jle (bad) sbb nop imul mov mov cli ljmp adc pop movsl lahf pop pusha sbb and lea and das outsb xor dec add fistl icebp push iret cs cmp lea pop and int mov mov or jle inc dec dec inc xor sbb sub xchg out jge add mov ficompl outsl pop inc sub and iret addr16 fs adc icebp ljmp outsl rcrb movsl jbe or xlat enter mov mov sbb mov andl movsb outsb adc sbb push inc push adc push outsb pop mov sbb cmpsl (bad) mov scas sbb xor jge xor mov sbb testl into ds stos aam sub mov mov adc cli loopne das push mov sub gs mov aas inc rcr lcall xor adc lahf and xchg mov add movb push pop (bad) jb push pop in mov dec lds in cmp xchg cmpsb lods movsl xor mov jp or outsl movsb pop sbb call push in in xor dec sbb mov xlat jmp loopne movsl out repnz (bad) bound test adc mov lcall add repz lea js sbb mov dec (bad) in push add inc std xor hlt inc or sbb std ret imulb push dec in adc aad xchg adc jge (bad) out loop ds shrl in ret pop fdivs or loop cmpsb push (bad) mov pop in mov add sbb pop push lds mov shll sbb add idivl lcall hlt inc sub dec clc lret imul int3 sbb rcl test xlat int3 lds xchg push sbbb push mov arpl cli mov (bad) mov or int3 cmp xor lret mov enter pop aam mov inc jle lods jp mov out insb xor xor dec scas fsubrs call pop int3 pusha jns pop jge push daa mov sbb xor (bad) cmpsb std fcoms inc cmp daa mov sbb inc mov add xchg pop mov push out adc loop cmp jnp addb mov jno,pn xchg jns jnp jnp int3 mov mov mov pop sbb or dec mov sub mov jle cmc ret cld jmp enter mov call lock int3 incl adc sub push imul fist inc jb out insb cmc outsl ficomp (bad) mov test out out les leave leave pop jp in mov dec fdivs xchg push or cwtl mov mov jmp lock in daa sbb data16 out xchg pusha pusha (bad) rorb or es push movsb (bad) adc add cmc add xchg push add inc popa inc fadds call popf push fnstcw (bad) imul fcom pop sub cld popf adcb inc shl test loopne mov ret aaa cmpl mov mov pushf pop adc xor push mov xchg fwait out push sbb xchg iret aam push ss push pop loope sarl mov cwtl mov orl mov mov cmc push mov test inc ja rcrl call inc les sub stc cmp inc movlps out jbe sahf and rcpps jbe call jnp mov mov xchg insl loopne int inc push (bad) and pop xor mov cs scas and add xchg test test mov push sbb inc pop cmpsb cwtl pop inc gs in mov jmp pop or push inc cmp imul iret stc xor lods cmpsl inc imul scas lahf cmp mov outsl dec divb push out mov jmp inc clc or pop mov daa outsl (bad) aaa push pop icebp fisubrl ficompl jnp cmp pop aam cmp stc lock dec jmp jecxz loop and pusha push into into jnp in (bad) out movsb test lret pop ljmp jno sti fidivl mov and shll test push fnstsw dec push sub jp dec in div aam out pop call sbb mov xor xor pop roll dec mov push dec jg das pop push mov sahf mov (bad) xchg ljmp mov fbstp (bad) and cmp pop sahf mov dec mov mov add loopne inc lcall imul lods xchg sub lea das adc (bad) xor and pcmpeqd cmp mov fcoms aam xchg sub cs or cmc out xchg popa sub and sbb cmp (bad) sub xchg add pop or das xchg dec mull fwait sahf movsb or xchg es add dec (bad) in pop (bad) mov mov addl push es mov sub ret imul gs add jmp cmp stos mov iret inc outsl cld push pop jbe in pushf mov fldl xorl rorl daa jnp xor add imul inc xor lods hlt cmp mov xchg pop mov lret mov insl sbbl ret and insl push or inc out fbstp adc sub jnp dec adc mov xor popl xchg popf jno push ja or mov loop or cmp mov cmp cld inc pop ja or xchg push sbb into jmp aaa pusha sbb push imul xchg push stos jle cmc sarl or mov fimull xor rorl push (bad) dec enter dec add cmpsl leave sub mov push pop sub movlps cmp ret lds mov sub xlat sub add pop adc or mov js in jns sub movsb es add and out xor mov add adc outsb sbb jns push push pusha cmp cmp (bad) std mov sbb sarb pop imul add add xchg jnp or (bad) (bad) cmp jbe mov lahf mov sahf fnstenv inc lock movsb rcr std jle out or ljmp cmc mov scas fiadd sub je cld xchg xor pushf and je ss adc aad inc test pop inc sub dec adc mov test and mov loopne cld xor adc push mov mov cld loopne add push pop pop or (bad) mov or and shrb sbb lahf daa sub pop std cmp dec mov mov int3 sub mov daa pop test ds push addr16 gs sub negb setg add shrb imul lahf mov and sub inc add push adc lods cli cmp lods jnp and dec xor sbb dec ret sbb mov rorl adc xchg idivl jnp (bad) stc addl inc es push adc adc xchg adc or add imul xchg inc pop or fmul jle rcrl addr16 pop jge jne push ret (bad) fstpt xchg jecxz push shlb in mov inc call mov xor movsb fdivs aaa jecxz clc rorb cltd repz ljmp fistp stos dec mov pop out imul mov pop mov pop stos mov lods hlt sub mov mov rolb imul lods adc mov xor pop adc nopl icebp shrb sub xabort or push push (bad) sub std shl fsubl adc test mov sub push int xor out mov jp lea test sbb cmp arpl int3 jo adc fwait dec (bad) push lea int3 mov mov jg iret add (bad) clc outsb mov sub loope cs xchg xchg (bad) push xchg fs sub loopne xchg in mov mov lret ret test sar inc stc cmp jo adc pop xchg cld and popa inc bound aas rolb addr16 std insw cmp sar ffree mov dec cmp mov sub shlb pop adc mov lods adc lods ljmp jnp loop jle mov shlb (bad) lret jecxz (bad) xor psllq jno nop ret xchg sub sub dec dec xchg ret lock rcll add cmp mov (bad) enter sahf pop lds mov mov mov loopne lods lds lret jns divl cmpsl xor cmp cmp call jo adc cmpsl add into scas push sub or mov verw (bad) fcmovnbe out cmp rorl cmpsl outsl lock xchg inc sbb sub pop xchg jne jp fildll (bad) fstpl pop push addl (bad) cmc cmpsb adc xchg nop xor movb addr16 repnz test (bad) cwtl dec js std inc scas pop pop pop aam ret dec sub and jp stos xlat ret pop jl cmpsb cmp pop into add out loop xor cmp outsl pop xchg dec adc mov loopne pop mov mov imul adc dec lods lods adc iret add lock out dec xchg inc loop int3 and xor jle jl out es popa jb fldenv xor xchg dec pop jle cmc xchg cmp popf xor sub jmp mov mov imul dec lds sbb sub push int cmp cmp xchg cmpsb push dec loopne ds sbb (bad) jg rclb push cmpsl lods mov sub (bad) decb in nop movsb xorb xchg addr16 es mov in push fs dec test and mov inc cmp xchg and mov mov outsl cwtl sub lret out push sbb pop icebp jmp (bad) std jecxz popf sahf das xchg outsb mov jns jnp fs inc fisttpll (bad) ss outsl inc mov pop push push mov in test std xor push mov div mov int test add sbb push (bad) mov add sets xchg mov movsb insl sub pop sbb push jp sbb repnz dec pop dec into lcall test insb (bad) imul in rcrl js mov fldl jnp outsl (bad) xchg loope ret fnsave jb mov or aas hlt add orl xor jnp mov mov stc or xchg lea les iret (bad) fiadd xchg push aas mov movb cld jle push inc (bad) jno unpcklps xchg data16 lret add mov mov mov iret cmp loope cwtl fimul and (bad) int fidivl and or cwtl cmpsl in cmp xchg mov push lods (bad) push and mov mov mov add hlt ds and xchg and scas sbb fild dec fwait pusha add aaa int xor sub fildl ds fsubrl into push shrl inc addr16 lods sti mov dec or adc jne xchg insl addr16 pushw mov cmpsb dec pop sbb sub push (bad) cmp stos or aad shrl xchg add out (bad) icebp addr16 test jne in adc mov sub bound xchg fwait pop insb xor icebp ret xchg mov popf mov je aaa mov nop cmpsl push addr16 repz mov push jmp das das pop sub mov loop sub jl mov add scas add (bad) xchg stos stc inc or add mov dec xchg outsl scas hlt stos ds jnp push fnstenv mov cwtl rcrb aas repz ss mov cmp sub in scas insb adc sub adc add mov mov cmp xor cmp mov xchg insl jmp lds jb sub lret (bad) sub jl pop repz jl mov fwait outsl fdivrs les in fimul xchg adc xchg fwait inc pop ds test mov iret push scas and lds rcll mov add push cli (bad) mov adc sbb movsb push jne dec repnz (bad) xchg test or xor adc ficom xchg int3 adc fildl cs mov inc dec (bad) jno jl faddl mov popf xchg imul test xchg cmc loopne sbb cmp add add pop pop addr16 push cmp aas push test out mov hlt mov fucomi fisub jl fwait repnz lock icebp out inc xchg inc mov std mov cmp mov pop data16 xchg mov inc jecxz and pop int3 mov stc sbb adc add mov add mov mov fs insl inc sbb je aad xor mov (bad) mov in ss jl addr16 push jns push xor xchg xchg fdivl add aad lods imul cmp lret in sbb fmull inc push sub dec (bad) out xlat dec sbb xlat mov andb (bad) mov cmp lahf xlat cmpsl cwtl shrb and ljmp or mov pop pop or outsl popf sarl cli cmpsb adc xchg sbb sbb jle pop sub clc add stos mov fstp jae jnp data16 adc sub daa xlat sbb sub add pusha jbe cmp (bad) repnz inc inc sub pop sbb mov popa addr16 jl icebp mov ds in push or insb adc in mov outsb sub lock shr dec hlt jle inc cmc xchg cmp in add jmp xchg mov bnd mov jp out into out cli push mov lea mov cmpsl dec push cwtl ja rolb xchg int3 fidivr jmp push mov cs sbb lret add jne jbe (bad) xchg int cld mov movsb inc jb and cmp dec and cwtl sbb and ds jo test leave cli mov pop push push push jo sbb out xchg jns test add add mov je and xor daa cmp test add popf push outsl insl stc aad push jo aas xlat dec loop out jnp mov and test mov int3 mov mov xchg mov push test pop mov mov (bad) pusha and stos mov ds jb jp,pn xor jmp stos cmp xor inc xchg add push frstor adc (bad) add inc pop jae sbb add push aam add inc ret (bad) out out out das ss outsb sbb push js dec pop mov ds sub ret pop push inc adc mov xor loopne cltd dec jp mov popf xchg mov fcompl (bad) xchg xchg sbb sbb pop fldenv enter or pop add (bad) jmp icebp xor jg addr16 push test mov sub data16 xchg adc sub push add jecxz sbb je std hlt mov out inc pop add movsb movsb push push push push mov js fldt jne (bad) push xor sbb dec inc popa pop push jne dec shll dec adc arpl mov add cmpl add stos mov adc mov aad push inc xchg fisttp addb adc sub (bad) idivl aad cmp outsl out jno dec leave jl popa in loopne pop mov (bad) scas xor ret test pop (bad) inc mov int shrl inc or cli xchg pop and int3 push int (bad) ret and add aad fcmovbe in pop dec cld ja push int add das into movsl and adc cwtl mov inc cmpsl push xor adc sbb nop or adc rcpps cmpsb mov icebp and in js movsb (bad) dec mov fist call jle mov xchg clc ja cmp pop das inc popf sbb pop push inc push xor fmulp insb add pop inc cmp in or aam lret ret ror pop xchg inc inc push pop pop pop xlat stos rol imul or inc dec inc lods outsl mov xchg fwait dec and (bad) hlt sub mov and loope icebp jae movsl in mov (bad) push (bad) in inc je mov sbb xor add mov notb idivl xchg and arpl out mov or scas (bad) pop add jo cltd push push jb push sbb add xor dec sub jns sbb xchg jnp,pn mov and mov dec mov fimull sub cmc mov jo sbb add push mov mov popf fmul xor in mov scas mov pop lahf mov adc inc mov jb loope xor es out js inc push adc sub push and fs mov sahf adc lds mov cmp imul (bad) (bad) jnp leave repnz je fbstp dec rclb dec sbb dec popfw jno push ss sub int or lock jmp sub jne xor outsl and jmp es shlb int push (bad) sub inc sbb lcall mov imul add cmc fnstenv negl inc xchg sbb or mov mov (bad) mov pop sbbb les call jae pop cld (bad) lcall sbb es pusha pop cmp jmp rcrl out lcall outsl std lock out loope dec (bad) push dec lock xchg scas adc loope testl leave jle sub out out out sub sti inc sub and nop jg pop leave jle fwait or dec mov cmpsl jge sahf nop js adc mov cmp jo sysexit mov push neg sbb mov fisubl (bad) jno push in outsl fsubrl sub jmp icebp xchg js pop fldcw xor push cltd xlat xlat cmp stc or popa adc mov add add cmp lcall push sub das sarl out mov int3 int and movsbl xor xor push xlat push sub nop imul sbb mov movsb imul movsb fcompl and loopne pop adc (bad) and dec sbbl xor mov sbbb cmp or arpl (bad) idiv and loopne dec lret cmpsb loope gs and pusha test out stos mov (bad) (bad) ss adc ljmp repnz xchg jmp out ljmp inc fsubs pop iret pop (bad) jmp ss int3 call pop out fdivl xor mov sbb push daa dec inc ds add sub (bad) jmp mov std jp pop rorb push cmp cmp cltd xchg add push lret jns fcomps movsb sbbl pop pop subl sub mov mov test sub in cmp dec jge xchg mov std xchg je jle (bad) mov and and int jmp test jp ret dec xchg dec mov movsb dec (bad) adc fist (bad) xchg mulb or mul data16 mov in loopne cwtl in add es sub out cwtl nop jp ffreep adc fcomip adc push jmp repnz sbb rcr fdivrs mov out mov imul xor call jecxz aad lea dec lods lret xchg cli inc in int mov xchg push or xchg or rclb inc push not out push sub pushf push mov mov sti jg jl cmp jle add test mov loopne push (bad) ja outsb aas lea ds loope cld leave pop inc std rdtsc jbe jne cmp mov int dec fcmove push pop (bad) popa pop mov cltd in mov sub (bad) cmp loop push adc fiadd xchg add fisub (bad) std aaa out mov in sahf repnz xor push cmc decb xchg (bad) jmp incl pop jg cmp fidivrl ljmp jge les out aas push je sub and fwait mov push dec or jae fs sahf adc lahf shll mov cltd mov (bad) mov xchg xchg pushf leave fiadd notb (bad) out jns (bad) repnz in cmpsb scas es sti sahf xchg pop int3 fimul lcall or pop sub add pop lret pop mov cmc lods xchg jl (bad) sti dec sbb mov dec aas mov dec std loop jno pusha jns inc scas ljmp ds movb sub loop lahf ret fsts sbb aas xchg pop xchg in in mov in mov pop pop loop mov std lcall sbb fistpl push inc je out inc ret movsl (bad) lock pop loop jp dec fwait sbb leave sbbl xor fbstp pusha test mov jmp xchg mov mov int3 (bad) push sbb mov jno lods icebp int leave push int xchg out jno loope mov pop fisttpll xorl xor inc xlat xchg add ds add arpl cli test sub (bad) xchg in push push pop mov mov mov add sub repz xchg inc pop je inc out fisttpl lds int (bad) fcmovbe mov outsl movsl mov ljmp insb roll jnp cli (bad) sub mov mov fs scas in mov mov mov push (bad) in or or xor dec imul fdivrs fnstsw sbb cmp adc xchg lret ret lcall sti in adc pop movsl test ret scas lods add adc cmp jo loope jp pop scas ret lret lret or xor enter outsl pop mov mov popa inc sbb add pop cmc sbb jecxz jns mov or loopne dec stc pop loop add mov sub call in or dec nop pop jl xchg sbb pop test add and cmp push leave cmc mov dec pop push daa sahf hlt or xchg daa fnstcw and jl sarb shlb in sbb or mov rorb push cs dec xor dec ret (bad) dec push inc imul out jnp cmc shld js inc add sbb cmp mov test xor hlt cmp mov xchg push out fimull xor sahf mov outsl popa jle sub rorb lock cmp ljmp or movsl out in (bad) mov xchg xchg or jp icebp out push dec and push addl aas arpl jae (bad) in xchg imul iret push lods xor pop pop out out out cs inc pop sbbl xor gs in aam add push mov push inc cmpsl and xor aas pop push test xchg in cld sahf and std inc (bad) lods pusha xchg (bad) xor or insl adc test lcall adc movsl lea dec fdivs int3 xchg dec fidivl int (bad) cmp jo in or fnstsw (bad) iret and xchg icebp sbb cmp jmp and xchg imulb mov dec nop jae push cli (bad) pop mov hlt testl ror add cltd jae or pop aas jmp cmp sub and jo mov (bad) fninit insb sub pop aam test (bad) and call bound pop (bad) movsl clc xchg ror stos aad inc int3 pop mov mov xchg jno mov and xlat add jle into ret inc xchg rcr test shrb xchg mov fisubrl lret mov fucomi sbb xlat scas xchg and loopne int xor (bad) ss pop pop pop fisubrl sbb jmp jmp out sub dec pop outsl das sub sub sub sub push cmp jnp lea clc ficompl mov jno or jno in cld in int3 in int3 aaa out ja aas aaa add xchg adc (bad) int3 (bad) in jmp imul sub ja ja jbe fmuls pushf fdivr imul scas pop aas jg push dec in lock ret ret fadd ja cld ja ja pop pop pop pop pop pop pop (bad) mov mov mov mov mov adc or orl repz pop pop ja pop pop and add mov cmp dec inc or xchg test add (bad) decl xchg push adc cmp or xor sbb jae sbb lods stc icebp icebp stc stc icebp jno push pop sbb mov mov pop add out repz call iret mov (bad) iret push arpl stos arpl (bad) (bad) popl mov xchg fwait cmp mov out mov pop push pop ss ss push ret pop mov out out daa adc das imull cmp sub and jnp push jnp jb lea xchg push lcall mov jbe in in in in in in aaa and xchg aaa and xor adc popa adc int3 test int imul imul ja jg ja aad (bad) aam fsubrl jmp imul jg js ret ret lret cltd ret ret jg ja jle ja dec pop sbb push and mov jno mov mov movsl sbb aas adc orl pop pop pop push jecxz pop add add or cmp xor jle dec inc jecxz xchg popf mov (bad) out clc lock push pusha push push push and xor cmp pop sbb adc sbb repnz stc icebp out stc lock push inc push ss push mov mov pop push lret pop add repz sti sti repz mov imul popl jae repnz xchg xchg xchg lcall lahf stos and pop push sub push push ss pop push cmp out out out out out das daa cs das daa scas sub and sub cltd jnp jl jnp test lea xchg or jno or jns aad in in in std xor aaa aaa aas pop aaa adc cmp adc mov (bad) (bad) int3 loop imul imul addr16 ja aam (bad) aam imul push jg ja jg lret test lret data16 ja jg pop pop push jl pop push sbb mov and adc adc addl adc pop push add add or cmp cmp inc pusha dec dec pushf das xchg xchg popf cwtl xchg push jb push mov push paddb push add xor xor cmp cmp sbb push lods lods movsl aas stc call pop ss push pop jbe mov mov pop pop pop xchg pop pop pop mov sti jmp rol iret pushf (bad) arpl arpl cmc (bad) fwait mov (bad) popl test mov mov stos mov push out pop pop push cmp ss adc push lods pop (bad) call mov das outsl daa sub cmp sub jae jnp jae jnp test pushf mov lcall fbstp in in in in in aaa aas jo aaa fsts add adc sbb (bad) les imul imul ja jg (bad) aad fmul (bad) imul jg jbe jg lret int3 ret ret lret dec ja jg ja jle pop cmp pop pop mov mov movsl mov mov adc orl cltd stc pop pop aaa pop pop push mov add add add mov cmp pop dec dec dec xchg popf int xchg popf (bad) (bad) push outsb (bad) in clc cmp push push cmp in and and xor adc sbb adc sbb lods lods icebp jno stc icebp mov push pop movsb push inc push push mov mov pop hlt pop add sar sti repz sti (bad) iret repz outsb arpl jmp popl cmp mov into mov mov push pop pop push add ss scas ss pop or push es out out out out out das cmp and sub pop sub ret jae lea test lcall jb jno and in in stc in aaa and adc aaa aas popa adc sbb adc int (bad) aad iret les or arpl ja (bad) ja jg (bad) aam (bad) popa sub pusha mov js jg ja ret ret lret fld ret lret arpl ja push and push arpl mov mov movsl movsl lods aas adc adc mov addl stc icebp mov stc lock pop adc pop pop pop push add or cmp dec inc cmp inc jnp xchg pushf pop xchg test cltd (bad) decl and push bts xor cmp jae xor sbb sbb movsb repnz lods movsb mov stc lock in (bad) lcall pop xchg stos adc pop pop jns sti repz sti repnz mov iret in arpl sub (bad) out mov xchg xchg lcall cwtl lea mov push lcall ds pop pop push jnp pop push dec out out out out out daa scas das das daa outsb das sub enter sub jnp jae lea popf mov lcall mov in in in aaa aaa aas push aaa aaa sbb adc int3 dec (bad) (bad) int3 lea bound jae ja and aam fmul aam fnstsw inc imul dec jg jbe ret rol into ret ret jg ja jg ja push repnz pop push pop mov mov loopne movsl lods dec movsl mov sbb adc orl push pop pop sub pop or add add add xor (bad) dec dec inc cwtl xchg xchg popf sbb push add push add xor and push xor sbb sub lods movsl imul lcall pop repnz push mov mov pop pop push pop pop push lock jmp cld sti sti repz mov push arpl and xchg (bad) popl inc xchg adcb mov stos adc pop push push pop pop push (bad) ss ss lods pop dec pop pop pop pop out out out out out add das das cmp sbb sub pop sub and jb jnp mov lea xchg xor jno jns in in in in in fdivs daa xor aaa adc dec adc sbb (bad) int (bad) rol or arpl imul ja test into fcmovnb (bad) aam imul sarb jo jg dec ret ret lret mov ja mov jb pop dec pop pop pop dec pop mov mov mov adc adc xchg test sti in cld fdivr in push aaa add push add adc cmp dec pop dec int3 dec pop nop mov out cli clc jmp cli incb adc addr16 sbb xor and xor and add pop push sbb or push lods mov lods mov mov push inc push inc push push push mov mov pop sbb pop add sti idiv clc sti test (bad) leave mov arpl arpl popl loope orb mov stos arpl pop push pop pop push push ss ss cli pop pop push pop pop out out out out out das das es das aas sub sub jae jnp jb jnp mov lcall mov jno in in in in in aaa xchg aaa aas aas adc sbb (bad) (bad) int (bad) aam outsl imul imul ja jg fmul fcomi (bad) aam imul mov outsb js jg lret cmpsl ret ret lret out ja fbstp jg pop pop push fstpl mov pop mov mov stc adc adc xchg addl push iret pop add or add adc cmp inc rorl add add pushf insl (bad) out clc cld (bad) push push push push push adc adc push xor xor adc sbb sbb lods lods movsb into lods lods icebp (bad) stc lock stc push pop push push push pop xlat mov mov adc pop pop repz sti (bad) into push (bad) rol test imul arpl (bad) popl adcl mov test pop pop push adc aas ret xor ss push or pop push dec out scas out out cld call pop das das and sub je jnp sbb lea xchg pushf lcall aaa jno in in cld jmp aaa aaa aas imul adc (bad) adc ret cmpsl (bad) (bad) int3 mov imul ja jo ja jg (bad) aam (bad) pusha aad imul jg ja ret ret lret mov add ja ja es push dec pop dec push ficompl mov mov mov xchg movsl movsl lods xlat adc adc mov stc stc icebp clc pop pop pop xchg pop pop pop inc add or add cmp cmp dec inc push dec dec inc fist xchg popf xchg push (bad) (bad) decl aam pop add push xor cmp xchg sbb xchg sbb movsb in lods movsl pop lods jmp icebp lods push push pop inc push inc pop mov mov pop pop and sti repnz ljmp mov push arpl mov xchg lcall lcall mov mov pop or ds ss push sbbb clc out out out out out daa add das es das sub sub and jnp jb lea xchg leave lcall add add jno jbe in in in in in in aaa aaa ds aaa es adc sbb (bad) int3 out (bad) int imul imul ja jg ja aad fmul fcmovnu fsubrl xor popa jb jg jmp ret ret lret mov ja jle ja pop dec pop pop push xor mov adc movsl sbb pop adc xchg xchg stc icebp add push pop pop pop add xor add je cmp xor dec pop dec inc dec dec inc repnz xchg popf mov xchg notb push clc incl push addl xor xor xor adc lods lods movsb sar stc icebp (bad) stc stc lock push dec push push mov mov pop push test sti sti repz sti repz (bad) into cmp cmpsl arpl imul popl cld xchg adcb cli mov stos bound pop push cmp push jns ss xchg ss pop pop push ficompl out out out out out aas sub das das daa ja sub xor sub ljmp test lea xchg dec lcall sbb jns in in in in in aas aas aaa aaa aas mov adc sbb (bad) aam rol int3 aas imul imul ja jo ja aam (bad) aam imul jb jg sbb lret out ret lret ja jae ja repz pop push sbb mov mov mov lods stc movsl movsl lods mov adc orl and jmp add pop pop jnp add das add or cmp dec inc add pushf insb xchg test lods (bad) push in push adc movsl push adc cmp pop xor add sbb sbb adc lods movsb mov icebp sti stc stc pop xlat push push pop pop push mov mov dec pop pop pop loope sti repnz sti out rolb imul push (bad) popf mov xchg lcall mov sub pop push lods pop dec pop xor ss ss dec pop sbb pop cld call cltd das das daa sbb das es cmp sub jae jnp jae jnp test lea xchg sbb lcall jno jmp in in in in aaa aas sub aaa ds adc adc adc sbb (bad) les imul imul ja jg (bad) aad (bad) aam imul xor jbe jg (bad) lret xchg ja jg ja jg pop dec pop inc pop pop mov (bad) mov lods movsw mov scas adc adc add mov addl pop push pop pop push hlt add add add or xor fimul dec jbe xchg popf in xchg xchg popf lods (bad) push sub out clc pop push push push outsl push push cmp xchg xor adc sbb pop lods mov icebp lods stc stc icebp in stc inc pop push push inc push jle mov mov pop pop push fcoml push cld idiv sti repz sti (bad) iret loop (bad) into insb arpl data16 or (bad) fwait jns (bad) xchg lcall (bad) xchg mov mov or push and pop or ss in ss pop dec pop pop push aaa out out out out out out das das daa and das and sub cmpb js lea mov mov jno jns jno in in in in aaa xor aaa aas jo adc xor adc arpl (bad) int3 mov add call ja jle ja jo (bad) aam (bad) popa jb imul jg ja ret ret lret clc ret ret lret gs ja push xor push jb mov add mov mov movsl movsl lods pop adc add mov cmp icebp stc pop add and pop pop je add xor add cmp dec inc sub inc push xchg pushf cmp push js decl inc push push psubsw and cmp sub nopl sbb lods stc lock jmp loop push pop cmp pop xchg mov mov pop cwtl pop sti repz sti repnz xlat ret rol bound data16 js mov mov rorl lcall mov inc pop pop jns xor ss aaa push dec pop fistpl pop add out (bad) ljmp cmp ss xor sub cmp sub bound jge jle lea lahf sahf lcall inc jno je fdivr jmp cmp xor aaa ja adc add add (bad) (bad) (bad) (bad) int3 (bad) imul imul ja ja (bad) (bad) (bad) fsubl push jg jg jg jg ret (bad) lret ja ja ja pop dec pop dec pop dec mov mov mov mov movsl xchg movsl sahf movsl out inc adc add (bad) stc sti clc stc stc stc stc pop pop pop pop pop pop pop add add add add cmp pop dec pop dec xchg xchg in (bad) in (bad) in call push adc adc adc and cld xor sbb sbb scas lods test test stc hlt stc call push fs adc fnstcw add push xchg push push adc cli std cli repz lret (bad) xlat (bad) ffreep inc bound and (bad) (bad) (bad) (bad) lahf (bad) lahf xchg (bad) xchg (bad) xchg adcl mov mov dec pop dec pop dec and and cs pop inc pop inc pop inc out cmc out hlt out hlt out xor xor xor xor imul sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa ss aaa aaa adc adc adc adc mov (bad) mov imul imul ja ja ja (bad) (bad) (bad) imul jg jnp jg jnp ret ret mov ret jb ja jb ja pop pop pop pop pop pop mov mov mov scas mov sbb addl stc stc stc stc pop pop pop push pop pop pop add add add add ds add dec dec dec dec dec xchg xchg xchg xchg xchg xchg xchg cli (bad) (bad) (bad) cli (bad) incl add push push add xor xor cmp sbb sbb sbb lods movsl lods lods lods cmpsb lods stc stc repz stc stc repnz push push pop push push push mov mov pop sbb pop pop sbb sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop in out out out call das das das and and cmpsl sub sub jae mov jae mov lea lcall jns in in in mov in jmp aas aaa or aas adc adc les (bad) int3 (bad) (bad) imul imul ja ja ja fdivr (bad) fdivrl popa imul jg jg jg jg push ret lret ret xchg ret lret ja ja ja ja pop jmp push pop sub mov movsl das movsl lods adc fist mov xchg stc icebp stc std pop pop pop or add add xor cmp (bad) dec inc dec out xchg popf xchg outsl xchg popf (bad) stc push (bad) jns push push inc push push push (bad) xor cmp xor std sbb sbb lods movsb lods cli stc icebp stc das stc icebp stc arpl push jecxz pop mov dec mov pop pop cltd sti repz mov repz or iret (bad) jmp arpl or popl xchg or lcall mov mov daa pop push pop cmpsl ss ss pop sbb out cs out into out daa das mov daa das dec sub sub sub sub jae ljmp lea xchg lcall jns add jno in in in in mov aaa sbb ficoml sbb cmp int3 les int3 les imul imul ja ja ja faddl imul (bad) jg jg jg ret cmp lret ret mov ja ja ja pop push pop pushf pop push pop xchg mov mov mov movsl shlb adc addb subl icebp pop mov pop or testb add cmp xor dec orb mov xchg idiv xchg push call push push push sbb push push test cmp xor or adc data16 movsb lods push lods movsb lods ljmp push (bad) push pop push (bad) push mov jmp mov jmp push pop les push pop sub repnz enter hlt (bad) into (bad) je push shlb arpl popl popl popa xchg fwait xchg popa xchg fwait mov mov mov adc pop jge aas ss ss pop xchg pop push pop jno out (bad) out out inc das es test es inc sub sub and jnp jnp jp lea fwait xchg lcall js sub in mov in aaa in ds in ss or sbb sub sbb jg int jg int adc imul jle mov ja fst (bad) (bad) fsubrl pusha imul jle jg jg ret test lret ja ja jbe ja pop push pop jle push mov mov mov mov movsl ret movsl ret adc data16 out clc lock outsb stc push pop adcb pop inc add add add cmp xor jp inc dec jp pushf xchg and idiv mov idiv jno clts icebp push sysexit ret xor add add mov sbb sbb lods movsl lods jecxz movsl stc ss lock ss pop push jp pop push jp mov pop mov push pop js push sti xchg cli repnz adc into (bad) sub into (bad) fsubs arpl arpl popl xchg int fwait xchg int orl mov stos mov out push mov aas ss ss pop and out out adc out das das sub outsl das sub or sub dec sub jnp jnp lea (bad) ljmp jno jno jno jno in test jmp hlt aaa xor outsl aaa xor sub adc imul (bad) rol les imul jo arpl ja (bad) fsubr (bad) imul jg jg ret lret ret add lret ret push ja ja ja pop cmp pop mov mov mov movsl mov movsl add adc test in cld stc sti pop adc add add add add cmp sub dec dec push xchg nop xchg xchg xchg nop xchg out (bad) cli push (bad) cli push pop push add add xor cmp xor or push lods cmpsl lods test stc (bad) stc cld stc out push push push push push push push mov mov adc pop pop repz into into into into into into imul test test cltd cltd addl test scas scas push push push push push push push cmp cmp cmp cmp push push push push push jecxz jecxz jecxz jecxz and and and es jbe jbe jbe addb xchg xchg xchg xchg xchg xchg jg jg jg jg loop loop loop cmp cmp cmp cmp sbb add lret lret lret gs jns jns jns rcl rcl rcl addr16 jo jo jo int3 int3 int3 int3 int3 int3 js js js js push push push push push push mov mov stos stos stos stos sbb sbb sbb sbb mov div notb pop pop push add pop pop pop push push sub sub sub sub pop pop pop pop pop (bad) (bad) (bad) (bad) lea out out push push push push push push pop sub sub sub sub sub sub sub add add add add mov jecxz jecxz jecxz jecxz dec dec dec dec dec dec mov mov or or loopne loopne loopne loopne (bad) (bad) (bad) js js js js xchg xchg xchg xchg xchg xchg mov mov xchg xchg mov mov inc inc inc inc sub sub sub sub inc inc inc inc inc inc inc repz xor xor xor aaa aaa ss nop nop nop nop nop nop xchg xchg insb insb insb insb icebp icebp icebp icebp icebp icebp icebp sub sub sub sub push push push push push push (bad) (bad) (bad) fnstenv jbe imul jae jno jg aad (bad) (bad) xlat xlat shlb gs jno jo jo rcl rcl rcl addr16 dec dec dec dec dec dec mov mov mov mov add add add add xchg xchg in in in in in in in add add add add push adc sub sub sub sub pop pop pop pop pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) call call push push push push sub sub sub add add add mov mov mov mov loopne loopne loopne dec dec dec dec dec dec dec add mov push push push push loope loope loope loope fstp fstp fstp jns jns jns jns xchg xchg xchg xchg xchg xchg mov mov xchg xchg mov mov inc inc inc inc sub sub pop pop pop pop out out in out out out in das das das sub das das sub sub jnp jnp jnp lea lcall popa jno jno jno in hlt in in in lock aaa aaa pop aaa aaa aaa pop adc adc adc adc (bad) (bad) les imul ja pop ja ja (bad) fdivrl fsubrl imul jg ret ret ret ret ret ret ret ja ja ja pop pop pop pop pop pop mov mov mov mov movsl test adc adc xorl stc pop pop xchg pop pop pop xlat add add add add mov aas cmp dec dec dec xchg xchg xchg xchg xchg xchg xchg idiv (bad) push (bad) incl push push push push push push xor xor jne xor xchg enter jg lods and in stc jno mov push fldl stc mov lahf les lahf les cltd lcall movsb cmpsb mov test arpl outsb and push iret (bad) mov int push jnp xchg push mov mov lret ret loopne jb sbb or inc push push pop xor aaa aas (bad) sbbb dec inc inc pop inc dec pop dec or inc inc pop unpcklps wbinvd call mov (bad) repz and push adc add in sub pop aaa inc aaa push aaa jbe cmp les mov pop add push dec push add ja rcl (bad) mov or sbb add jg mov mov add ja sbb pop xchg (bad) rol sarl movsl movsl inc and shr loopne icebp in nop lcall jg fs jp and and dec pop push dec dec sbb and mov std lock mov mov es fs je adc inc inc push push inc pop dec sbb dec ja jp jle iret ret ret iret (bad) (bad) and xor rcl (bad) lahf lret cwtl lret bound js arpl (bad) sahf lcall stos test mov or push add out loope (bad) test xchg sarb and xlat (bad) into shrl sub push push jnp jg push cmp sub xchg inc dec inc push or pop inc adc movlps sti call call out repz sbb sbb (bad) out test push pop push push inc jbe xor jno mov mov or sbb push adc add sbb repnz xchg test mov dec add sbb sbb push pop or mov sbb push sbb push adc xor jns fstl mov lret int3 leave jo xor repz out out loop nop xchg xchg fstps jbe jns ja jne and push dec dec dec dec pop dec and insl and insl sub cli clc mov stc stc mov xchg xchg (bad) repnz push push push xor xor adc push pop pop inc push pop cmp jp jle lret mov ret iret cwtl xchg pushf fsts cmp cmp (bad) mov mov pop inc and and div (bad) fstpt mov out test or add out ljmp rol jmp clc out stos (bad) loop int int3 int (bad) lea xor sub pop push pop push push inc push sub jp das cmp xchg sbbb inc inc dec dec pop inc inc inc add sub mov lods into enter cmc out mov sbb sbb loope in aaa add add xor jb test in stos in add pop add push pop rcl (bad) (bad) mov pop pop arpl adc pop sbb lods mov stos jecxz mov adc push adc add xor jns fstp (bad) fcmovbe (bad) ffreep ror lret pop adc mov mov mov (bad) fstps aaa bound and jno dec dec pop push push sbb and and out hlt loope cli sti repnz (bad) (bad) (bad) ljmp or add adc inc push pop adc outsl jb ret int shlb iret leave addr16 pop pop js cmp int3 cwtl fst xlat int jg fs sahf fistpl test mov add push sbb pop inc sti out in jecxz (bad) test movsb mov cmpsl stos dec ret movb cmp jns pop pop inc pop pop push jp aas sub cmp loop out out out out mov and dec push pop dec sbb push pop pop adc in std lods call xchg nop lcall inc inc jl ror (bad) mov push pop pop data16 jp jnp mov stos cmpsl add sbb add jp ja ja and rcl icebp dec pop push sbb or pop pop or mov lods mov add add cmp push mov mov add int3 (bad) je jl jnp jge repnz pushf mov jg aaa inc bound push and and dec push push push pop cmp insl and insl and mov sti mov sti mov addr16 or push push inc push adc push push inc adc jp imul int vcmpsd mov xor cwtl (bad) lret xlat gs jle jno mov xchg jmp (bad) xchg push push push pop outsb imul ljmp loope jmp out stos in in add aad ror aaa xor aaa sub add push push cmp jp xor sbbb dec dec dec cmovns dec pop dec pop push push adc lea mov mov add pushf addl inc inc pop inc inc pop add xor jb mov les add sbb sbb add push scas test testl add sbb push sbb ret ret ret ret jge ja pop pop pop pop sub ss ficom test lret into lret lret sub cmc call repz test jbe sub mov es mov and and loop mov in div (bad) mov push gs out push xor xor ss mov sbb sbb ret popf pushf test xor push push push repz notb push pop pop pop and leave sti aad mov mov push add push xor out sti ljmp loope loopne out mov out fld xlat cmc ret (bad) pop pop xor add pop inc push ss sub ss out (bad) out subl inc das add sub sub add jnp lea lea lcall jne test jmp addr16 aaa adc cmp sub ret int3 (bad) repz hlt xchg cmp dec dec arpl ja jg pop mov fsubl popa outsb ja jg jg ja ret ret lret ret lret ret jo ja ja sbb jns lret xchg rcl rol lret mov movsl adc jbe out repz mov pushf xchg mov jns arpl insl and ja push dec push pop push pop push cmp sub dec dec (bad) mov cli idiv mov sahf mov push push push inc pop pop push pop push pop push adc pop pop jne sbb sbb ffreep (bad) iret leave mov xchg lcall add add jne and cmp fstp mov bound aaa arpl fistl mov stos add or loopne (bad) (bad) (bad) (bad) int std stc idiv mov jecxz out mov in or int or aaa xor pop pop or push sbb pop and xor aas jp xchg pushf fwait mov inc pop dec inc inc dec or dec inc jnp jnp xor in out call out mov adc sbb adc stos test pop pop pop push inc push push adc pop jge arpl stos mov lods movsl mov dec and or sbb add lods mov push pop imul adc cmpsb lods jecxz stos scas cmpsb add and sbb cmp and sub (bad) rolb (bad) popa jo adc mul in call sahf mov pop pop pop add add add bound addr16 pop dec push dec inc cmp insl sub sub out mul cli out pushl outsb bound outsl push push xor inc pop inc push inc adc sbb sbb ror leave aam mov mov and xor (bad) rcr fnstsw js jns sahf mov movl adc arpl ljmp std cld mov idiv sti out out mov add int3 (bad) les jns sub cmp ss inc xor jp mov popf inc inc push cvtps2pd pop dec inc inc dec dec inc push jnp jnp xor in jmp stc (bad) jmp jno adc mov mov push inc pop inc inc jl adc jbe in stos mov movsl mov push sbb add imul add scas test test mov dec add imul sbb jecxz cmpsb mov mov push push adc pop pop mov ffree mov lret aad roll addr16 in repz mov mov arpl jns pusha bound add add sbb insl cmp ds (bad) mov loopne xchg fistp imul inc pop inc dec xor push inc push outsl jb jne jne fmuls lea xchg jne daa daa cmp push mov lret mov das pop pop sti scas scas mov (bad) mov sub sub arpl (bad) (bad) push cltd xchg xchg xchg xchg xchg mov mov mov cltd pop pop pop ss pop pop pop pop out out out popa out out das daa das das das das das das sub add jnp jnp jmp lea lea lcall jno jno in in jle in sub aaa aaa aaa aaa aaa aaa aaa adcb rcrl adc (bad) (bad) (bad) (bad) (bad) in add sbb push pop push push cmp cld nop mov mov imul or pop aaa push cmpsb mov mov stos mov adc push sub pop mov xchg icebp rol (bad) test leave (bad) (bad) (bad) test je xor repnz mov fnstcw jle arpl bound sub pop sbb aas and loope out xchg xchg xchg lahf xchg nop pushf sahf xchg fbstp addr16 gs pop inc push push push adc push adc jp jle mov leave iret fadd mov lcall cmp and and int3 xlat lret int3 jb jbe js xor sti fwait lea out movsl cmpsb mov push inc add sbb loopne cld sti std cli icebp out loopne sti out clc jmp in lods mov aad cmp ss dec push push pop pop inc sub cmp xor mov or das dec dec push inc dec inc inc dec or nopl adc pop jmp clc out out cmc call push push jno jno adc test inc pop push jg imul in (bad) les or sbb add cld mov or pop sbb adc mov mov mov ja adc push add cmp ss lret (bad) rcl rol ror xlat xor je out repz addl popf aaa popa jb arpl and jo jno pop dec push dec sbb sub and push xchg xchg xchg cmc clc hlt xchg sahf cwtl lcall add arpl imul inc inc push inc pop inc adc jp je cmp lods lods int3 fadd int pushf xchg pushf xchg (bad) fstps xor or int jb pop pop pop pop ja xchg lcall out mov inc add or cli std ljmp cld sti mov repz stc jecxz lods mov (bad) xlat cmp add pop pop jns push inc insl imul cmp xor cltd mov cmovl pop pop pop pop dec pop inc pop or adc push or pop (bad) in loope out in loope in cld out sti clc notb jno and in mov push inc pop inc jbe popaw jge jge jecxz movsb cmpsl stos mov dec or adc sbb scas test imul sbb adc mov jecxz sbb add add sub sub add rcl fadd xchg mov (bad) test (bad) jbe jp xor repz loop out mov nop lea xor ja imul pushaw ja dec sbb dec aas cmp cmp aas insl cld loope out loope (bad) fdivr (bad) (bad) lcall jae push push pop inc inc pop push push push pop push pop inc adc sbb jnp leave iret fadd fimul fstps daa and int3 xlat lret int3 frstor arpl xor fwait lea out mov add or inc or ljmp xchg xchg xchg xchg repnz jmp jmp rcl rcl sub sub pop inc adc ss cmp cmp cmp mov dec dec pop pop pop pop dec pop inc pop pop jnp jnp sbb call stc lods stc cmc hlt jmp add sbb mov in add aaa push inc push push inc jl xor jg mov stos mov pop sbb or add push ja ja pop stos mov mov sbb sbb jg or mov lods movsb in ja ja sbb adc xor sub (bad) rol roll popa insb gs jae addl fdivrp cltd (bad) jne jbe jnp xor add arpl ja pop push pop sbb dec dec xor xchg mov xchg xchg test rol and push push sub push xor push or xor cmp lods lods lods repnz lods stc xchg stc stc rcl push push jns push push imul mov sub pop sti fdivrp sti sti aam mov loope arpl arpl mov mov xchg xchg mov mov mov rol rol xlat int3 roll pop pop pop pop add ss or or pop pop jnp pop pop shr out rcl out out adc das das cmovnp dec pop dec sub inc push or jnp jnp sar jecxz loope ljmp call sbb add pushf cwtl sahf add aaa push jo jg adc les mov or pop imul add push add push mov (bad) addl add and nopl mov ret sub adc adc pop push push cmp sub fwait mov mov mov movsl movsl mov adc adc jns ret subl mov pop fistl push pop ret add mov inc cmp leave (bad) or xchg mov dec mov xchg xor xchg ja mov push mov push ja test xor ja mov pop sbb lods out lods shrb mov stc lea push and mov cli pop jae push pop ja mov sti mov movl pop (bad) int lret (bad) rclb scas mov mov mov loope jne sbb pop je adc je push pop sbb pop sbb out lods out sti out lods das aas das insl das and imul das jnp jnp jnp jnp jb lea int3 lcall xor mov jno adc in dec enter enter in push adc in test cmp test sbb sub xchg sub mov ja mov fmull sub xchg sub cmpl jg cmp (bad) ja mov ja mov pop cltd movsb sbb dec repnz dec repnz pop in xchg pop in sbb push adc inc jge andl add add add push pop xor push add incl mov jl jp dec insl dec and sub sbb icebp cli loop loope mov lcall fs push push inc jl push pop inc pop push inc pop pop jne sbb sbb loopne fnop in iret lea mov and and fcmovne ror fucomp jle jae pusha pop pop sahf mov test xchg xchg xchg (bad) xor dec daa das das (bad) (bad) mov xchg lcall test mov mov mov inc inc jns adc adc adc push jae jno ja jne (bad) (bad) fcmovu sbb push adc adc push push xor xor rol ret (bad) into iret int3 int ret sub sub lea mov pop pop pop pop pop jl bound addr16 mov push adc imul xor sahf (bad) (bad) (bad) imul jg jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das comiss das add sub sub sub jnp jnp jnp jnp lea lcall push jno jno jno in int3 in int3 in int3 in pop aaa pop aaa pop aaa pop adc adc adc adc (bad) in mov aam jnp jnp jnp addr16 ja ja fmul fmul fmul fdivrl jns jns jns sti jg jg jg ret inc ret inc ret inc ja ja ja ja pop dec pop dec pop dec mov mov mov mov movsl and and and xchg adc addb stc clc stc clc stc clc stc push pop push pop push pop push add add add add cmp dec dec pop dec pop dec test test jge jge jge test test test add aaa xor aaa xor aaa sbb sbb sbb sbb lods scas stc sti stc sti stc sti stc push push push push inc push inc mov cwtl mov pop pop pop sti sti sti sti sti sti sti add mov arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add and sbb dec insl dec insl xchg mov std xchg mov add xlat call call (bad) fild es es es adc xor adc sbb sbb sbb lods mov stc jmp push inc push inc push inc push test test test test pop pop pop pop pop pop jmp jmp jg jg inc movl out out out or (bad) xchg (bad) xchg (bad) xchg (bad) mov mov mov and pop pop pop pop pop aaa aaa aaa aaa aaa aaa aaa pop pop pop pop pop pop pop out out out out out out out cs sub sub cmp jnp jnp jnp lea fwait sbb repz jo jo in out in out in out in xor ss adc adc (bad) mov push push push push ja ja ja fdivr fdivr fdivr fmull dec imul pop jg jg ret jecxz jecxz jecxz push ja ja ja jns jns jns jns xchg mov mov mov movsl test xor adc leave adcl pop pop pop pop pop pop add add add add cmp pop dec pop dec adcl out (bad) jmp push push push push push push push xor xor xor xor xor xor sbb sbb sbb lods lods lods lods lods lods lods clc clc clc clc clc clc clc push push push push push push push mov mov pop push push push cli cli cli cli cli cli cli mov mov lds bound popa bound mov xchg nop xchg mov mov mov pop pop pop pop aaa xor es pop pop pop pop pop pop pop out in out in out in out cs das das das scas stos test lods repz lock cmc add sbb push in out out rcl rcl add dec dec inc inc inc pushf fwait lcall cmpsl cmpsb movsl movsb stos jge jg jns jnp stos test mov mov adc or push invd mov mov mov sahf popf and es pushf fwait lcall lods lods scas scas dec dec dec dec dec dec dec pop movsl movsb cmpsl cmpsb mov sbb push sbb xchg in in out out loope jecxz or or aaa and daa es push adc adc jge jg jns jnp lods lods scas scas test sahf popf pushf fwait arpl outsb outsl insb insl pop pop pop pop inc inc inc inc inc inc inc inc dec dec popa inc inc inc inc inc jnp into iret enter xchg nop xchg xchg xchg xchg xchg cmp and iret rol ret les push jg jge jae jno dec dec dec dec push push icebp lock cmc hlt sti push adc adc xor xor aaa xor and and es add adc in out out loope jecxz mov hlt cltd sahf lahf pushf popf xchg xchg and and (bad) std cld sti cli stc clc repz lock cmc movsb fwait lcall gs ja jne imul test pop adc adc insb insl mov mov mov mov sahf popf pushf push push push push push push push cld repz lock jmp aam jns jnp jne ja (bad) mov lret lret mov jge add mov xchg nop xchg xchg xchg xchg xchg jl bound addr16 jge jg jns lret lret div gs adc push or in jecxz loope out cli stc clc (bad) (bad) std cld cmp cmp dec inc inc inc inc inc inc fwait lcall jmp in sbb sbb daa and adc adc sbb sbb sbb cs add xchg xchg xchg xchg nop xchg xchg (bad) mov mov pop push sbb div call inc inc inc dec dec dec mov fwait mov addl (bad) fstp fcmovnu fld lret jmp or or push es sub aam (bad) leave enter mov rol mov dec dec dec dec dec xchg addl ret (bad) xor xor dec dec pop pop pop pop push push push mov mov cmp cmp in in jmp jmp lock cmc and test (bad) addl xchg xchg out add sbb imul sbb mov adc push push push push pop adc jbe cmp mov mov call movsl movsl push jo jo ja repz add mov pop pop pop pop je js data16 push data16 pop push pop pop dec cmp sub loope,pt xchg fnstsw stc in (bad) (bad) (bad) pushl push push push inc jbe pop pop xor inc push pop xor jns outsb jp aad lods lods lods out xchg mov xor push sbb and fcmovne mov push bound pop bound sti mov mov (bad) add arpl out loope fsubr out loopne repz mov out ret mov sub ss push push pop push sub cmp pop pop pop mov mov dec dec push sub js inc dec dec add sub (bad) lret jmp (bad) fxam clc lcall adc cmp pop jno cltd (bad) in scas mov adc fs pop pop jl inc data16 mov (bad) mov cmp pop imul cmp adc lods scas xchg mov and sbb xor xchg ja ja pop pop (bad) (bad) xor mov mov daa and push push nop nop nop adc roll jno icebp stc rcr roll pop adc and xor mov add mov sub std popf popf xchg in in mov push push push push push add xor jno mov xor inc rclb pop scas ret or test jo lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop cmp out jmp lods out out out add das das das das das sub sub and cmp jnp (bad) in lods iret lea lcall jno jno lods in in in call aaa aaa aaa aaa aaa adc adc adc xchg in les imul imul ja ja jns fdivl sub imul jle jg ret ret ret ret cmp mov aaa pop pop pop adc xchg icebp mov mov movsl movsl movsl movsl movsl pop pop ljmp addl stc stc stc stc pop push pop pop pop cmpsl sbb xchg cmp cmp dec dec dec xchg xor fwait mov (bad) incl push push push push push push xor xor lret xor in sbb push stc stc stc stc sbb mov push stos stos inc inc mov call pop pop add sti sti (bad) lods das xchg mov and (bad) (bad) (bad) mov xchg xchg xchg stos popf rorb mov loope mov cmpsb cmpsb cmpsb ss ss icebp mov pop pop pop out out dec iret lods out out das das das rcl rcl sub sub daa sub jnp pusha cmp test lea gs mov jno ret in in in aaa aaa leave enter adc adc in in in (bad) (bad) (bad) les cmp xchg imul push xchg ja ja ja and and (bad) fdivrl imul jg ret ret std sub ret ret ja ja mov pop lea mov dec dec pop pop movsl movsl movsl movsl mov push adc jg jle addl pop pop jmp add add cmp ret dec dec dec xorl add xchg xchg xchg xchg imul add (bad) (bad) (bad) cmp inc push push push push xor cmp lret xor in in lods lods lods push push push push stc stc stc stc ja adc push stos inc inc inc mov call pop sti add sti mov (bad) arpl popf pushf pushf pushf (bad) (bad) (bad) (bad) pop jo insl xchg xchg xchg xchg insb insl jne mov jecxz mov cmpsb cmpsb cmpsb pop pop pop ss leave leave leave ss pop movsb movsl movsl movsl pop out out out sbb das das das rcl rcl sub sub call test jb jb lea lcall mov xor adc in aaa aaa aaa leave enter adc adc (bad) (bad) les cmp mov ja ja and and (bad) imul imul jg ret ret (bad) cmp add ja mov sbb cmpsb repz mov mov pop pop pop movsl movsl movsl movsl shr ljmp jle addl pop pop jmp add add cld cld ret cmp mov dec dec dec es aam xchg xchg xchg xchg add add (bad) (bad) incl into stc stc stc push push xor lret xor xor in in lods lods lods lods js push push stc stc stc stc pop stos stos stos xor push cmp mov call das add add mov cmp arpl jnp (bad) (bad) (bad) (bad) (bad) jno insl insl xchg xchg xchg xchg inc jne jne mov pop mov inc sbb pop ss ss pop pop mov out out adc adc das das das das les push sub sub aad test jb jb lea gs jno loope xor in in in adc adc aaa aaa aaa aaa out enter adc in in cmp (bad) (bad) (bad) les sub imul mov fmull and (bad) imul jg jg dec jg,pt ret ret ret cmp ja ja mov pop cmpsl dec dec dec mov mov aaa xchg in pop pop pop ljmp rolb stc stc stc and push push pop pop pop pop jmp add add jl ret ret cmp je dec imul xchg xchg xchg ljmp add add incl push clc stc stc stc push xor je xor lret sbb sbb lret in push lods lods lods lods push push push push stc stc stc stc std sbb push push push push mov mov call sti sti add mov arpl arpl pushf jo (bad) (bad) (bad) popl insl insl insl xchg xchg xchg xchg add jne (bad) lret mov mov cmpsb cmpsb cmpsb pop ss leave leave pop pop pop pop movsb movsl movsl adc out out out lcall das rcl aam sub sub stos test jae jb inc (bad) fistpl lcall mov in in in xor adc aaa aaa aaa aaa leave enter dec push adc (bad) (bad) (bad) (bad) les imul mov fsubl and and sub xor imul cmpb ret ret add mov ja mov pop pop sbb repnz mov movsl pop pop pop pop movsl movsl adc ljmp jle stc stc stc stc setge pop jmp add add ret cmp mov mov dec dec xchg push std aam xchg xchg (bad) incl add add push push push sar stc stc xor lret xor pop add sbb sbb in push push lods lods lods lods sub push push stc stc stc push stos stos stos stos push push mov mov jmp sti sti sti aaa add cmp mov pushf arpl arpl stc into (bad) (bad) (bad) (bad) (bad) insb insl insl insl xchg xchg xchg mov jne mov pop pop mov and pop ss pop pop pop pop xchg movsl adc out out out out adc rcl das das das das or sub sub jnp jnp jnp pop int3 lea jb lea gs jno (bad) mov in icebp imul and adc adc adc mov je imul imul ja ja ja (bad) (bad) (bad) fsubr jg imul imul pop aad ret adc popa jne pop dec pop pop push dec pop mov movsb mov popf movsb cmpsl movsl loope cmpsl movsl incl pop adc add xchg addl out sti stc push out adc pop fistl add adc add sub cmp push push dec dec addr16 xchg xchg lods lea jmp push add jo add mov sub aaa xor lret add sbb lods lods mov stc loope sti stc fnstsw push push jnp push push imul adc sti and sti ja (bad) faddp movl jp arpl lea lcall mov mov mov pop cmp ss sub cmpsb sub pop incb pop in cmc in out daa cmc in out stc xor sub sub pusha jns cmp (bad) (bad) out sbbl jno push in ds in xor aaa jmp movups fcmovu mov fadds imul imul imul rcr dec rcr leave jne imul arpl stos ffreep ret ret ret ret ret sub add sbb cmp sub mov mov rcl (bad) (bad) shl addr16 adc bnd loopne rcrl stc pop dec adc arpl outsl push jno ja pop dec cmp sub sbb icebp icebp out out (bad) decl (bad) mov bound arpl pop push pop push je xor pop inc jb bound dec je (bad) out (bad) int stc dec std xchg mov adc push ret rcr (bad) jg gs js bound (bad) sahf (bad) jno stos mov mov push or mov ljmp not sti (bad) test mov xlat out int3 cmp xor push ja pop stos pop push xor add add popf xchg outsb das das pusha imul inc pop or push jnp pop jg in call jmp pushl jbe cmp mov push aaa aaa (bad) xor inc jbe jl mov mov sub push add add rcr xchg mov test daa or or cmp cmp lods mov mov ja je sbb imul rol mov mov xlat rol (bad) icebp jp jns jo gs shr loopne repnz xchg (bad) stc stc push clc push jb push bound insw ja jno pusha pop dec dec je cmp sub sub cld stc lock ljmp lcall pushl push inc js push inc pop push jge pop push ja dec sbb dec pop cli (bad) fxch sarb stc add cmp and (bad) dec fstp mov add addr16 mov stc andb push adc sub add (bad) pop mov std ljmp loopne mov mov out jmp loop iret int3 shlb adc pop pop ss pop adc cmp or mov inc cs inc inc dec inc dec addr16 adc jnp call into push out repz sti (bad) leave adc add add mov je pop inc pop push push jg jbe addr16 stos (bad) les push sbb sbb pop push adc sbb adc mov mov faddl and sbb sbb push or jg pop (bad) nop scas cmpsb cmpsb mov jae xor push add sub cmp sub mov rcr (bad) jecxz leave shlb inc popa jno loopne in in sbbl stos jle jb pop cmp push data16 push bound insl dec push pop pop add ds dec in or loope loopne out xchg mov jne push cmp push push pop push push jo push push inc inc pop je pop jb outsl jle lods lods mov lods xchg xchg cwtl xchg popf cmp xor sub rcl (bad) (bad) sarl jb pop (bad) adc cltd mov mov arpl bound sti int3 loopne cld loopne not ret pop mov out dec in ror iret (bad) out int3 (bad) cmp pop xor cmp push jo pop push ss outsb pop push sub sbbl inc pop outsb inc inc inc dec sub push jg pop or push pand loope call imul fsubr call mov cmp add popl push inc push pop jbe adc call xchg mov mov sbb add imul xor add scas scas mov sbb or ret jge adc sbb mov lods mov adc sub pop ffreep rcr fcmovu shl ret ret rcl adc jo (bad) call nop xchg lea inc jb pop jbe outsl inc insb jbe dec cmp sub or sub in in xchg lods xchg rcrb lea pusha imul pop pusha pop inc pop pop push xor jle pop jne (bad) ret xchg lea xor adc ljmp into ror js jp jns inc (bad) xchg xchg pushf mov mov xorl or fdivr std out cmc loope xchg push xchg int dec in jecxz int3 int (bad) int or sub bound and aas sub popf (bad) mov pop inc pop dec pop sub insb dec pop jg sbb cmp adc (bad) out leave jecxz out push and add test mov (bad) xor jp jg imul cmpsl movsl test push or add pop push sbb faddl sub and sbb jg jle cmpsb mov adcb adc cmp adc or (bad) pop cli shl (bad) xlat out rol (bad) inc adc loopne in cmc pause xchg sahf mov push js addr16 push ja push fs cmp cmp and and and clc lock loope hlt lea mov je jb jbe pop inc pop pop push je lods xor push outsl pop je push fnop (bad) fdivrs std scas daa cmp xor cmp lret xlat aam out mov arpl mov xchg lahf xchg sahf sti (bad) das movb add push sub (bad) outsb lea (bad) fcomip loop out jecxz in lret mov out ret sub push ss push inc or sub xor push xchg lahf mov push pop inc inc dec jg pop dec sub jnp js push stc enter jmp repz lcall jno jno in in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor add xor xor sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop push ss ss pop pop pop dec pop pop out outsl out out out iret out das das outsl das das das pop int3 push lret into push jp jnp gs lea data16 lcall jno in in in in in in aaa xlat (bad) jbe aaa aaa adc add adc adc (bad) les sub imul dec and push lods mov mov sub imul aas (bad) ds xchg xor ja dec and xor rol repz icebp push in movsl movsl add inc jo loop icebp cmc call lea pop pop pop push pop add adc cmp cmp dec dec dec dec xchg xchg xchg xchg xchg lea (bad) push push push push add push push cmp xor xor cmp sbb sbb lods lods lods mov stc stc stc (bad) stc stc push pop push push push pop push mov mov sbb pop pop in sti sti sti hlt sti sti mov (bad) arpl arpl jb (bad) (bad) popf (bad) (bad) popl xchg xchg mov mov mov sbb pop cmp ss ss pop pop pop pop or out (bad) out out out mov das das das js sub sub jnp jnp jnp jnp (bad) aam lea negb jno sbb jno int3 in in in pushf in aaa aaa sub aaa aaa inc adc adc adc adc ret (bad) rol les imul imul ja ja (bad) fcompl (bad) pusha imul imul ret into ret ret ret push ja ja ja ja pop pop pop push pop pop mov mov mov mov movsl add adc adc addl pop adc add add add add cmp dec dec inc dec xchg xchg xchg xchg xchg xchg aad mov incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc clc stc push push push push push push push mov mov pop pop pop pop sti cli sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss ss add add pop pop pop pop pop out out out out out out out das das das das cs das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl sti pop pop pop pop loope pop or add xlat testb cmp or inc dec dec dec pop pusha aam test mov push mov inc push adc xor xor push (bad) je add sbb aaa out pop lods mov lods lods test mov stc xor push push push add stc mov jnp push pop or sti sti mov mov (bad) das xor arpl xchg and aaa jle xchg mov xchg xchg mov mov mov mov lods test ss ja lret pop mov out out out aas pop scas das outsl fildll das das sub sub sub sub jnp cmp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul imul jg jg ret ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul add add jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lea lcall jno in in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop push push push push push add add add add cmp cmp cmp dec dec dec dec dec dec xchg xchg xchg xchg xchg xchg xchg std std std std std std std add add add add ss sbb sbb in in push push push loopne in stc lds mov stos aad push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov push loop imul cmc mov sbb mov ja pop int3 sbb mov scas out (bad) adc outsb das das aad sub shrb jecxz cmp (bad) cmp je lea arpl lcall xor mov in ror jbe pop into jbe sbb push adc jmp les test pop cmp sub (bad) ss (bad) ss and fsubrl sub xchg jg,pt xchg jg cmp ret out mov ja (bad) ss movsl scas sbb scas repnz inc repnz push in cmp adc push cmp cwtl lds stc stc stc adcl pop pop xor inc cmp or ret or jge aam movsl sbb xchg iret jno dec jno push mov push push add xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov lcall mov dec dec dec dec dec dec es dec dec pop pop pop pop out out iret iret iret iret iret (bad) (bad) (bad) (bad) (bad) (bad) ud2 or or or pop pop pop pop pop pop pop lea lea lcall jno in in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor push push push push jge jae jno ja ret fstp fisttp addb push adc sti cld std (bad) push pop pop pop pop pop pop pop stos stos test nop lahf sahf popf mov arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa add adc adc adc (bad) (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl mov mov add add xchg xchg xchg xchg jmp jmp pop pop pop pop and and and and sbb insl insl insl insl mov mov mov xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop add ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa jb jo jbe je lods scas scas test stos add sbb sbb push add femms or (bad) popf sahf lahf sub and xor xor xor cs nop xchg xchg xchg xchg fwait cs ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc add lods jge push push mov mov xchg ss pop sti sti sti sti sti pop and mov (bad) arpl arpl push adc (bad) (bad) (bad) xchg shr adc xchg mov dec add andl pop pop pop pop ss pop pop pop pop pop fistl out out out out out out outsl shrl das das das das sub mov jnp lea lea lcall lock in in in in in in lods leave aaa aaa aaa aaa aaa aaa movsl adc adc mov data16 and data16 imul ja ja ja ja (bad) fcompl fsubrl imul jg jg cs xchg sbb lods sbb pop pop pop pop pop mov mov mov mov movsl movsl and jge cmc in adc jg addl push mov pop pop pop add add add add cmp cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov xchg cli pop pop pop pop pop pop pop sti sti sti sti sti sti fucomi test mov arpl arpl scas mov xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop jns je ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall xor pop xor ret in in in in pop sbb iret pop jne adc adc adc (bad) (bad) (bad) (bad) (bad) (bad) les imul jb ja ja ja (bad) (bad) (bad) faddl imul jns jg jg jg iret add cmpsl jnp ja jnp pop xchg push sbb mov icebp mov test out mov sbb adcl cmc mov stc outsl sbb arpl push add inc add jg push xor pop inc cmovge cltd xlat xchg int xlat ljmp repz push dec or cmp or cmp sbb pop pop sbb pop out lods mov out lods mov cmc mov push movsl pop pop mov pop mov pop lret sbb pop (bad) lock sti ja test into ret (bad) arpl arpl arpl (bad) mov mov enter enter loope loopw pop popf sbb pop popf ja ss ss sbb pop sahf sbb out nop nop nop nop nop nop push push das pop insl das sub sub jp jnp test jb std lcall orb mov in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg xchg xchg ja ja ja pop pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add pop xor fwait or ret dec dec dec dec dec dec xchg push push xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push lret lret xor xor arpl sbb mov lods sub stc stc push inc push push push gs mov mov call sti sti sti sar (bad) sahf mov arpl arpl xlat (bad) (bad) (bad) pop (bad) (bad) (bad) pusha xchg xchg xchg (bad) xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl mov adc mov cmpl stc pop xchg pop pop pop pop xchg add xchg cmp cmp dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) aas (bad) (bad) jg add push push fiadd push mov xor xor xor pop sbb sbb lods lods jns clc stc jns stc push push push push push push push mov mov pop aaa push pop jnp sti sti sti sti sti mov (bad) arpl bound arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop xor ss pop pop pop pop pop xor out out out out out out das das das das sub das sub sub sub sub add jnp lea lea lcall stc jo in in in in in in aaa aaa aaa xor aaa aaa adc adc adc adc pop (bad) (bad) les imul outsl ja ja ja ja (bad) fdivl imul jg jnp jg jg ret ret ret ret iret jbe ja ja pop pop pop pop pop pop pop add mov movsl movsl movsl insl movsb movsl movsl cmc je adc test stc jno sti stc push pop pop pop repz pop add add xor cmp dec dec dec dec dec aad xchg xchg xor xchg xchg sbb (bad) (bad) (bad) (bad) incl cmp add ss xor xor pop les xor lcall sbb pop cld stc adc stc stc sbb push push push mov mov pop pop daa pop sti sti fwait sti sti sti cli (bad) out mov arpl push (bad) (bad) (bad) (bad) xchg xchg xchg xchg xchg xchg jbe int3 jne popa int3 jne dec in inc dec in mov mov leave rcr jo (bad) mov movsl mov add adc add ror les lret les iret shrb nop cmp test lret jb lretw gs fsubl jno mov pop stos adc pop stos adc rcr jno rcr jno idiv push in idiv (bad) cmp das (bad) cmp subb xchg pushf xor cmp lcall (bad) das xchg lea andb test sub mov mov cmpsb mov pop cmc dec inc dec jecxz inc dec jecxz icebp (bad) push ljmp (bad) jle adc push repz push call out inc cld out jnp (bad) jnp fldenv or jno roll sbb add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock adc push mov adc pop push incb push push call repz add sub cmp sub pushf xchg leave jo fs jo jns insl jbe aam outsb popa int3 jne popa int3 pop inc dec in inc dec add cmpsb mov fnsave rcr jo mov mov adc add adc add ror les lret shrb shrb nop cmp jb lretw jb data16 jno gs aaa mov pop stos adc pop stos enter enter in idiv push in imull (bad) cmp das (bad) cmp subb xchg pushf lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push pop cmc pop inc dec jecxz inc dec push ljmp (bad) jle push jle adc call repz inc cld out inc cld out jnp (bad) jnp test cmpsb or jle push jle add adc add in inc stc loop inc stc rcr jae rcr jae rcr jae rcr pop in lock in inc ljmp sbb adc stos mov incb push incb cld push call pop adc cmp sub cmp sub pushf xchg leave jo fs jo jns insl jbe aam outsb popa int3 jne popa in inc dec in inc mov cmpsb mov fnsave rcr jo mov mov adc add adc les lret les iret shrb shrb nop cmp jb lretw jb jno gs fsubl lcall or stos adc pop jno rcr jno sar push in idiv push in and (bad) cmp das (bad) xchg popl xor xchg aaa lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push pop jecxz inc dec jecxz inc (bad) push ljmp (bad) jle push push sbb adc push call repz inc cld (bad) jnp (bad) jnp test cmpsb shrl jle push adc add adc add in inc stc loop inc lret jae rcr jae rcr jae (bad) lock in lock in inc ljmp adc stos mov adc pop push incb cld push call pop adc cmp sub cmp mov pushf imul fs insl jbe aam jbe int3 jne popa int3 jne dec in inc dec in mov mov leave rcr jo rcr sbb mov add adc add adc les lret les iret shrb sarb lahf lretw jb lretw jb jno gs fmull xchg lcall or jno rcr jno idiv push in idiv push cmp das (bad) cmp das sub xchg (bad) pushf xor add aaa lcall (bad) cs addl mov cmp cltd push mov mov cmpsb mov xlat dec push pop loope push dec loopne inc dec jecxz icebp (bad) push ljmp (bad) jle push push sbb cld push call out inc cld out inc ret jnp (bad) or test jle push adc add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock push dec inc ljmp adc stos mov adc pop push (bad) call repz mov add sub cmp sub cmp mov jo popa ljmp jle insl ja (bad) jne data16 jne dec call cmpsb mov mov leave rcr jae (bad) mov movsl mov add adc add ror les lret les insl aam shrb nop cmp test lret jb lretw gs fsubl jno mov pop stos adc pop stos adc fdivl rcr jno idiv push in idiv (bad) cmp das (bad) cmp subb xchg pushf xor cmp lcall (bad) das xchg lea andb test sub mov mov cmpsb mov pop cmc dec inc dec out pop dec dec (bad) ljmp (bad) jle push jle adc push repz push call in pop cld out js (bad) jnp fldenv or jno roll sbb add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock adc push mov adc pop push incb push push call repz add and cmp sub pushf xchg leave jo fs jo jns insl jbe aam outsb popa int3 jne popa int3 pop inc dec in inc dec pop cmpsb mov fnsave rcr jl mov cmp or adc add ror les lret shrb shrb xchg das test enter fsubl jno gs aaa mov pop stos adc pop stos enter enter in idiv push in imull (bad) cmp das (bad) cmp subb xchg pushf lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push pop cmc pop inc dec jecxz inc dec push ljmp (bad) jle push jle adc call repz inc cld out inc cld out ja aad pop ret or jno shrl jle mov add in inc stc loopne push stc rcr outsl lret jo rcr jae rcr pop in lock in inc ljmp adc stos mov adc pop push incb cld push call pop adc cmp sub cmp sub pushf xchg leave jo fs jo jns insl jbe aam outsb popa int3 jne popa in inc dec in inc mov cmpsb mov fnsave rcr jo mov mov adc add adc les lret les iret shrb shrb nop cmp jb data16 jb je gs fsubl lcall or stos adc pop jno rcr jb sar inc in hlt decb and cmpl popl xor xchg aaa lcall (bad) das xchg lea cmp daa sub mov mov mov dec push pop cmc dec push pop jecxz inc dec jecxz inc (bad) push ljmp (bad) jle push push sbb adc repz push call out inc cld (bad) jnp (bad) jnp test cmpsb shrl jle push adc add adc add in inc stc loop inc lret jae rcr jg fstp push lret pop in lock in inc ljmp adc stos mov add pop push std inc repz push call pop adc cmp sub cmp mov pushf imul fs insl jbe aam jbe int3 jne popa int3 jne dec in inc dec in mov mov leave rcr jo rcr sbb mov add adc add adc les lret les iret shrb sarb lahf lretw jb lretw jb jno gs fmull xchg lcall add add adc fdivl rcr jno idiv push in idiv push cmp das mov sub or pushf xor cmp lcall (bad) sub popl sbbb test pushf xor mov mov dec push pop cmc dec push dec jecxz inc dec jecxz icebp (bad) push ljmp (bad) jle push push sbb cld push call out inc cld out inc ret jnp (bad) or test jle push adc add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock push dec inc ljmp adc stos mov adc pop push bnd repz mov add sub cmp sub cmp mov jo (bad) (bad) (bad) enter xlat insl jbe int3 jne popa int3 jne inc dec in inc dec in mov mov leave rcr jo (bad) mov movsl mov add adc add ror les lret les iret shrb nop cmp test lret jb lretw gs fsubl jno mov pop stos adc pop stos adc fdivl rcr jno idiv push in idiv (bad) cmp das (bad) cmp subb xchg pushf xor cmp lcall (bad) das xchg lea andb mov sub mov fwait push cmpsb mov pop cld dec push pop cld dec inc dec jmp inc dec (bad) ljmp les push jle adc push repz push call out inc cld out jnp (bad) jnp fldenv or jno roll sbb add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock add add push dec inc ljmp adc stos mov adc push incb push push call repz add sub cmp sub pushf xchg leave jo fs jo jns insl ja fsubrs gs bound dec dec std pop dec dec pop cmpsb mov pop cmpsb mov push leave mov das movsl mov push adc add adc add ror les lret shrb shrb nop cmp jb lretw jb data16 jno gs aaa mov pop stos adc pop stos enter enter in idiv push in imull (bad) cmp das (bad) cmp subb xchg pushf lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push pop cmc pop inc dec jecxz inc dec push ljmp lret jle outsl jecxz add adc repz inc cld out inc cld out js (bad) int ret adc jno shrl jle add adc add in inc stc loop inc stc rcr jae rcr jae rcr jae rcr pop in lock in inc ljmp adc stos mov adc pop push incb cld push call pop adc cmp sub cmp sub pushf xchg leave jo fs jo jns insl jbe aam outsb popa int3 jne popa in inc dec in inc mov cmpsb mov fnsave rcr jo mov mov adc add adc rorl les iret shrb shrb nop cmp jb lretw jb push gs (bad) gs lcall or stos adc pop jno rcr jno sar push in idiv push in and (bad) cmp das (bad) xchg popl add mov aaa lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push pop jecxz inc dec jecxz inc (bad) push ljmp (bad) jle push push sbb adc repz push call out inc cld (bad) jnp (bad) jnp test cmpsb fildll jnp push adc add adc add in inc stc loop inc lret jae rcr jae faddp inc lret inc in lock in inc ljmp adc stos mov adc pop push incb cld push call pop adc cmp sub cmp mov pushf imul fs insl jbe aam jbe int3 jne popa int3 jne dec in inc dec in mov mov leave rcr jo rcr sbb mov add adc add adc lret les lret les iret shrb sarb lahf lretw jb lretw jb jno gs fmull cltd lahf mov or test enter enter in idiv push cmp das cmpl addl mov aaa cltd and aaa cltd xchg lea cmp fwait sub cmp pushf xor mov mov dec push pop (bad) dec push dec loopne inc dec loopne icebp (bad) push ljmp (bad) jle push push sbb cld push call out inc cld out inc ret jnp (bad) or test jle push adc add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock push inc inc lret push dec inc mov sbb mov sbb sbb pop push testl out call add add add sub cmp (bad) sub push (bad) jo arpl insl ja (bad) lds lds dec in pop inc dec in cmpsb mov mov leave rcr jns (bad) mov movsl mov add adc add ror les lret les iret shrb nop cmp test lret jb lretw gs fsubl jno mov pop stos adc pop stos adc fdivl rcr jno idiv push in idiv (bad) cmp das (bad) cmp subb xchg pushf cmp and andl xor xchg addl and sub xchg cmpsb mov pop cmpsb mov in dec pop pop in dec dec dec sti pop dec dec sti ljmp fistpll outsl fistpll pop cmpsl push adc cmpsl push (bad) stc dec call jmp pop cld jmp arpl aad arpl xlat mov add add shrl jle add adc add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock adc push mov adc pop push incb push push call repz add sub pushf xchg lret fs jns insl jbe xlat insl popa jp jne fs pop inc dec out inc dec sbb mov fnsave rcr jae mov mov adc add adc add ror les lret shrb shrb nop test enterw fisub je gs cmp xchg lcall or stos enter enter in idiv push in imull (bad) cmp das (bad) cmp subb xchg pushf lcall (bad) das xchg lea cmp daa sub xor xchg mov cmpsb mov cmp push pop cmc pop inc dec jecxz inc dec push ljmp (bad) jle jno jle pop movsb push sbb cld push call out inc cld out jnp (bad) jnp test cmpsb or jle push jle add adc add in inc stc loop inc stc rcr jae rcr jae rcr jo fstp jnp (bad) notl incl push dec inc ljmp adc stos mov incb push incb cld push call pop adc cmp sub cmp sub pushf xchg leave jo fs jo jns insl jbe aam outsb popa int3 jne popa in inc dec jmp cmpsb mov fnsave rcr jo mov mov adc add adc pop rol (bad) jb iret shrb shrb nop cmp jb lretw jb jno gs fsubl xchg lcall or stos adc pop jno rcr jno sar push in idiv push in and (bad) cmp das adcl pushf xor cmp lcall (bad) das sbbb test sub mov mov cmpsb mov pop cmc dec push pop jecxz inc dec jecxz inc (bad) push ljmp (bad) jle push push sbb adc (bad) stc jne repz inc cld (bad) jnp (bad) jnp test cmpsb shrl gs jge mov add in inc stc loop inc lret jae rcr jae rcr jae (bad) lock in lock in inc ljmp adc stos mov adc pop push incb cld push call push pop mov pop adc cmp mov pushf imul fs insl jbe aam jbe add jne popa int3 jne dec in inc dec in mov mov leave rcr jo rcr sbb mov add adc add adc les lret les into shlb lds test lretw jb lretw jb jno gs fmull lcall adc fdivl rcr jno idiv push in idiv push cmp das (bad) cmp das sub xchg (bad) pushf xor cmp lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push dec jecxz inc dec jecxz icebp (bad) push ljmp (bad) jle push push sbb cld push call out inc cld out inc ret jnp (bad) or test jle push adc add adc stc out call jo rcr jo rcr jo rcr jo add lock in lock push inc pop ret push inc inc movsl push sbb mov adc pop push std call repz mov add sub cmp sub cmp mov jo fs xlat insl jbe xlat insl jbe into jne fs inc dec out pop inc dec out mov mov leave rcr jae (bad) mov movsl mov add adc add ror les lret les iret shrb nop test enterw enter fbld jno mov pop stos adc pop stos adc fdivrl fstp pop in hlt decb hlt (bad) sahf cmp sub xchg mov sub and sub and xor xchg mov sbbb cltd cmp cs mov lcall mov pop jmp pop inc dec (bad) ljmp add jle insb fdivrs or push lock dec call in pop cld in addr16 addr16 pop mov mov iret push js add adc stc loope pop stc loope outsl lret outsl lret outsl lret outsl in testb lock adc push mov mov in push push dec call call cmpsl add xor mov mov (bad) jo popa (bad) jo jl insl jp into insl bound bound dec dec lcall add cmpsb mov push (bad) imul mov movsl mov pop adc add rol fistp les ret lds xchg xchg test fidiv pusha into gs into gs and mov add enter enter in cmc incb cmc sub cmp lea aas mov pushf lcall (bad) and xchg nop push adcb stos cmp sub mov mov cmpsb mov shll pop pop fistpl dec int3 pop dec dec jl cld cli jl cld outsb call jle push nop push adc nop call std clc push ljmp ret pusha ret adc jge leave push mov push adc out call push lret jno rcr jo rcr pop in lock in inc jmp push sbb adc mov std inc pop push std inc pop cld push call pop adc cmp sub cmp sub pushf xchg loop push jl insl jne leave jne fs jne fs pop inc dec clc pop dec stos fldenv rcr insl leave rcr insl movsl mov mov mov or mov or je enter int3 lds int3 lds xchg xchg and xchg xchg out jb enterw fbld jno gs lcall add mov or jnp rcr jae sar pop in sti std jae and cmpl popl xor xchg aaa lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push pop out pop dec dec les (bad) push ljmp les push push sbb adc cld out call out inc cld (bad) js (bad) js test cmpsb shrb jle push adc add adc add in inc stc jecxz dec lret push lret jae rcr jae (bad) lock in lock in inc jmp push sbb mov sbb mov fadds push std inc add cld push call pop adc cmp sub cmp mov pushf imul fs insl jbe aam jbe int3 jne popa int3 jne dec in inc dec in mov mov leave rcr jl (bad) cmp mov add adc les lret les iret shrb fisttpl test enterw lret jb jno gs fmull xchg lcall or jno rcr jno idiv pop in sti std jb and (bad) cmp das sub xchg (bad) pushf xor xor mov xchg lea xor fwait sub cmp pushf xor mov mov dec push pop cmc dec push dec jecxz inc dec jecxz icebp (bad) push ljmp (bad) jle push push sbb cld push call out inc cld out dec ret pop ret add mov cmpsb or jno shrl adc add adc stc in divb out call jo rcr jae rcr jae push pop in lock push dec inc ljmp adc stos mov push stos push push flds push (bad) call repz mov add sub cmp sub pushf xchg ret popa repnz jbe xlat insl jbe int3 jne popa int3 jne dec in inc dec in mov mov leave rcr jo (bad) mov movsl mov add adc add ror les lret les iret shrb nop cmp test (bad) jb arpl gs frstor jno mov pop stos adc pop stos adc fdivl fadd inc in sti std dec in idiv (bad) cmp das (bad) cmp subb xchg pushf xor cmp lcall (bad) das xchg mov push addb add add sub mov pushf pop cmpsb mov pop rorl decb jecxz inc dec call ljmp (bad) jle adc push repz push call out inc cld out jnp (bad) jnp fldenv or jno roll sbb add adc stc loop inc stc loop jae rcr jg ffreep inc lret push in cmc jns repz into push inc inc into push inc pop fwait push adc fwait push mov movsb and push flds push jne (bad) stc jne call cltd add sub pushf mov in jo pusha jmp insl jp lock bound bound dec dec rcrl cmpsb mov and (bad) push leave mov xor pop add rol rorl lds ret lds xchg xchg sbb arpl jb arpl clc gs clc gs adc add mov add mov rcr jno rcr push in idiv push in imulb mov sub mov xchg mov cmp and aaa xchg and (bad) and xchg xchg pop sbbb mov sub mov mov cmpsb push pop stc dec push pop stc pop inc dec out pop inc dec pop ljmp lret jle push jle adc call (bad) stc pusha cld in push cld out je fcmovnbe insb ret cs cmpsb add jo fildll jle add adc add in dec stc jecxz dec stc rcr jg rcr jg rcr jg rcr push in lock in inc out dec inc out sbb mov sbb mov incb push repnz push stc jne repz push call pop adc cmp sub pushf xchg pushl popa (bad) jo jbe xlat insl jbe aam outsb popa int3 jne popa in inc dec in inc mov cmpsb mov fnsave rcr jo mov mov adc add adc les lret les iret shrb shrb xchg sbb enterw xlat gs cli gs lcall or stos adc pop jno rcr jno sar push in idiv push in and (bad) cmp das (bad) xchg popl xor xchg aaa lcall (bad) das xchg lea cmp sub xor mov mov dec push pop cmc dec push pop jecxz dec push aad dec sti dec ljmp (bad) jle push push sbb adc repz push call out inc cld (bad) jnp fcom jbe movsl mov shrl jle push adc add adc add in inc stc out call js rcr add rcr js (bad) jnp push pop in inc ljmp adc stos mov adc pop push incb cld push call pop adc cmp sub cmp mov pushf imul fs insl ja fsubrs jl jne popa int3 jne dec in inc dec in mov mov leave rcr jo ffree sub mov add adc les lret les iret shrb sarb lahf lretw jb lretw jb jbe gs sti mov lcall or jno rcr jb sti std jae idiv pop cmp das cmpl addl mov aaa lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push dec jecxz inc dec jecxz add (bad) push ljmp jecxz gs push sbb cld push call out inc cld out inc ret dec ret adc test jle push adc add adc stc loop inc stc loop jae rcr jae rcr jae rcr jle repz jp push pop push dec inc ljmp adc stos mov push cmc inc pop push std call (bad) stc fwait add adc cmp sub cmp mov jo fs jbe aam jbe int3 jne popa int3 jne dec in inc dec in mov mov leave rcr jo (bad) mov movsl mov add adc add ror les iret shrb nop cmp test lret jb jge gs (bad) gs xor xchg lcall or stos adc fdivl rcr jno idiv push in idiv add cmp xchg xchg addl mov aaa lcall (bad) sub adcl xchg das mov xchg pushf sbb mov pop cmc dec push pop cmc dec inc dec jecxz inc dec jecxz icebp (bad) push ljmp (bad) jle adc push repz push call out inc cld out jnp (bad) jnp fldenv pop mov jnp push jle add adc add adc stc loop inc stc loop jae rcr jae faddp inc lret push in lock adc push mov adc pop push incb push push call call mov cmp sub pushf xchg lret popa out jo jle insl jbe xlat insl outsl data16 jne fs dec pop cmpsb mov fnsave rcr jo add mov adc add adc add ror les lret shrb shrb nop cmp jb lretw jb data16 jno gs cmp or stos adc pop stos enter enter in idiv push in imull (bad) cmp xor cmp subb xchg pushf xor cmp lcall (bad) das xchg fwait xchg cmp daa sub mov mov cmpsb mov pop cmc dec push pop cmc pop inc dec loopne dec dec jne lock pop ljmp int3 jle pop cltd push sbb cld push call out inc cld out jnp (bad) jnp test cmpsb or jle push jle add adc add in inc stc loop inc stc rcr jae rcr jae rcr jae rcr pop in lock in inc int dec inc jmp push sbb mov add inc pop push std inc push out call pop adc cmp sub cmp sub pushf xchg lret fs jns insl jbe xlat jne data16 jne fs pop inc dec out inc mov cmpsb mov fnsave rcr jb mov add adc add adc ret arpl mov outsl aam shrb nop test enterw fbld jno gs lcall or test enter enter in idiv push in and (bad) cmp das (bad) xchg popl cmp mov xor xchg addl sahf cmp xor sub sub mov add pop pop out dec pop pop clc pop dec dec clc pop dec sti dec ljmp fdivrl outsb loopne adc lea adc dec call (bad) in pop cld jmp pop cld add shll (bad) int mov mov leave push jp push jnp add call pop lret push lret push in cmc inc in inc icebp push inc inc icebp push adc movsb push adc or mov mov pop pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul add add jg jg jg ret ret ret ret ret ret ja ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg mov mov mov mov pop pop dec push ss pop pop pop pop pop pop pop or adc add ror les lret les iret shrb nop cmp test imul gs fsubl jno mov pop stos adc pop stos adc fdivl rcr jno idiv push in idiv (bad) cmp das (bad) cmp subb xchg pushf xor cmp lcall (bad) das xchg lea andb test sub mov mov cmpsb mov pop cmc dec inc dec jecxz inc dec jecxz icebp (bad) push ljmp (bad) jle adc push repz push call out inc cld out jnp (bad) jnp fldenv or jno roll sbb add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock adc push mov adc pop push incb push push call repz add sub cmp sub pushf xchg add jo fs jo jns insl jbe aam outsb popa int3 jne popa int3 pop inc dec in inc dec pop cmpsb mov fnsave rcr jo mov mov adc add adc add ror les lret shrb shrb nop cmp jb lretw jb data16 jno gs aaa mov pop stos adc pop movsl enter enter in idiv pop in imull lea and cmpl subb xchg pushf xor cmp lcall (bad) das xchg fwait xchg cmp daa sub mov mov cmpsb mov pop cmc dec push pop cmc pop inc dec jecxz inc dec push ljmp (bad) jle push jle adc call repz inc cld out push cld in addr16 push stos mov sbb js push jns add adc add in inc stc loop inc stc add fidiv rcr jae rcr jae rcr pop in lock in inc ljmp adc stos mov adc pop push incb cld push call pop adc cmp sub cmp sub pushf xchg leave jo fs jo jns insl je (bad) jne data16 popa in inc dec jmp inc mov cmpsb mov fisubl rcr jae mov mov adc add adc les lret les iret shrb shrb nop cmp jb lretw jb jno gs fsubl lcall or stos adc pop jno rcr jno sar push in idiv push in and (bad) cmp das (bad) xchg popl xor xchg xor and (bad) das sbbb xchg cmp das xchg cmp pushf xor mov mov dec push pop cmc dec push pop add pop inc dec jecxz inc (bad) push ljmp (bad) jle push push sbb adc repz push call out inc cld (bad) jnp (bad) jnp test cmpsb shrl jle push adc add adc add in inc stc loop inc lret addr16 gs jo (bad) lock in lock in inc cld push dec inc incb sbb adc stos mov adc pop push incb cld push call pop adc cmp sub cmp mov pushf imul fs insl jbe aam jbe int3 jne popa int3 jne dec in inc dec in mov mov leave rcr jo rcr sbb mov add adc add ror les iret shrb sarb sahf xchg sub enterw fsubl jno mov lcall or jno rcr jno add clc push in idiv push cmp das (bad) cmp das sub xchg (bad) pushf xor cmp lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop jecxz push dec loopne inc dec jecxz icebp (bad) push ljmp sarb push push sbb cld push call out inc cld out inc ret jnp (bad) or test jle push adc add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock push dec inc ljmp adc stos mov adc pop push jecxz icebp cli inc call sbb sub cmp mov jo fs jbe aam jbe int3 jne popa int3 jne dec in inc dec in mov mov jo rcr jo (bad) mov movsl mov add adc add ror les lret les iret shrb nop cmp test lret jb lretw gs fsubl jno mov add adc fstpt rcr jns cli cld ja hlt (bad) xchg cmp das cmpl popl xor cmp lcall (bad) das xchg lea andb test sub mov mov cmpsb mov pop cmc dec inc dec jecxz inc dec jecxz icebp (bad) push ljmp (bad) jle adc push repz push call out dec cld out jns (bad) js fldenv sub push jle add adc add adc stc loop inc stc loop jae rcr jae rcr jae rcr jae push pop in lock adc push add mov incb push push call repz add sub cmp sub pushf xchg leave jo fs jo jle insl ja ret popa iret jne popa int3 pop inc dec in dec dec cmp mov fnsave mov mov adc add adc add ror les lret shrb shrb nop cmp jb lretw jb data16 jno gs aaa mov pop stos adc pop stos enter enter in idiv push in imull (bad) cmp das (bad) cmp subb nop lcall cmp xchg xchg nop adc and cs xchg lcall mov pop loopne push pop loopne inc dec negb dec inc ljmp aad gs jle adc call repz add out inc cld out jnp (bad) jnp test cmpsb or jle push jle add adc add in inc stc loopne push stc rcr (bad) lret js rcr jnp rcr push in hlt jl repz repnz dec inc loope sbb mov sbb mov mov sbb pop push testb pop call push pop mov push pop mov and popf cmp sub pushf xchg leave jo fs jo jns insl jbe aam outsb popa int3 jne popa in inc dec in inc mov cmpsb mov fnsave rcr jo mov mov adc add ror les iret shrb lds xchg sub jb enterw fbld jno gs lcall or test enter enter in cmc incb and mov and (bad) xchg popl xor xchg aaa lcall lea das sbbb test sub mov mov cmpsb mov pop (bad) dec push pop jecxz inc dec jecxz dec sti jne repnz inc ljmp movl sbb cld push call out inc cld (bad) jnp (bad) jnp test mov fsubrs adc add adc add in inc stc loop inc lret jae rcr jae rcr jae (bad) lock in lock in inc ljmp adc stos mov pop stos mov testl cld push call adc xchg cmp sub cmp mov pushf xchg lret fs jns insl jbe iret jne popa iret jne dec out inc dec out mov mov leave rcr jae rcr pop movsl mov add adc add adc les lret les iret shrb rolb add add test enterw lret jb jno gs iret mov popf mov adc (bad) fcomps std jno cmc incl and xchg cmp sub xchg lea and xchg fwait and cmp (bad) and xor xchg popl push sbbb nop cmp fwait and cmpsb mov mov dec push pop loope push dec negl dec negl stc inc ljmp sarl push push sbb sti inc call jmp (bad) cld jmp (bad) ret cmp movsl jnp push jnp push adc stc out call push lret push lret push lret inc in hlt jno inc inc iret push inc inc cmpsl push push adc push sbb sbb pop push call call repnz stos add pop stos add sub cmp xchg and jo popa imulb jl insl jne aam insl fs dec push xlat pop dec push into cmpsb mov mov leave rcr push movsl mov add ror ret pusha ror ret data16 (bad) data16 xchg daa test pusha fidiv pusha (bad) jno gs xor xchg lcall or test enter in idiv push in idiv cmpl and cmp pushf xor cmp fwait and aaa cs addl cmp daa sub xchg pushf push cmpsb mov pop in push pop sti dec inc dec loopne inc dec loope repz inc ljmp int addr16 push sbb cld push call out inc cld out jnp (bad) jnp fldenv or jno roll sbb add adc push stc jecxz dec stc loop jno rcr jo rcr jo fstp push cld (bad) dec in lock push dec adc mov adc pop push out inc pop push pop call repz add sub test lret jo fs jns insl jbe xlat insl outsb popa iret jne popa iret pop inc dec out inc dec sbb mov fnsave rcr jo mov mov adc add ror ret jg mov aam lds sahf xchg sub popa fnsave popa lret jbe gs and or mov enter enter in cmc incb cmc sub cmp xchg mov fwait mov cmp mov cmp cmp lcall cmp sub mov mov cmpsb mov push pop loope push pop loope dec dec into pop dec dec ja repz inc ljmp sarl adc stos call (bad) stc popa cld in push cld in outsl ret outsl ret sub push js push jnp add adc stc loopne push stc rcr addr16 addr16 addr16 dec in (bad) dec in inc (bad) push dec inc ljmp adc add inc pop push incb cld push call sbb lods add adc cmp sub pushf xchg leave jo fs jo jg insl jbe (bad) popa int3 jne popa out inc dec negb adc cmpsb rcr arpl rcr jae mov mov adc add adc les lret les iret shrb shrb nop cmp jb lretw jb jbe gs lret lcall or stos adc add rcr pusha enter in idiv push in and (bad) cmp das (bad) xchg popl aas mov aaa xchg and aaa lcall test lcall cmp cs cmp pushf xor mov mov dec push pop cmc dec push pop jecxz inc dec jecxz inc (bad) push ljmp (bad) jle push push pop adc inc call repz inc cld aad pop ret push test cmpsb shrl jle push adc add adc add in dec stc loope push lret jl rcr jae rcr jo (bad) (bad) dec in notl dec inc loopne dec inc stc push sbb adc stos mov adc pop push incb cld push call pop adc cmp sub cmp mov pushf push fbstp fs jns insl jbe int3 jne fs dec out add mov leave rcr jo rcr sbb mov add adc les lret les int jle into (bad) aaa test pusha fdivs enterw fsubl jno mov lcall or jno rcr jno idiv push in idiv push cmp das (bad) cmp sub xchg mov xor cmp lcall test xchg lea cmp daa sub mov mov cmpsb mov pop cmc dec push dec loopne inc dec lock lock pop ljmp aam gs push sbb cld push call out inc cld out inc ret jnp (bad) or test jle push adc stc loopne push stc loopne popa lret popa lret pop lret push lret dec in (bad) dec push dec inc clc push dec inc add push pop mov ss pop push out inc pop push in call (bad) stc cltd add adc popf cmp sub pushf test (bad) (bad) (bad) insl je (bad) insl je fidiv fidiv dec negl mull pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret jecxz ret ja ja ja ja pop pop pop pop pop dec mov mov movsl movsl movsl movsl movsl movsl movsl adc icebp inc jle push jle adc push add cld push call out inc cld out jnp (bad) jnp fldenv or jno roll sbb add adc stc loop inc stc loop jge rcr jl rcr jl rcr jb push pop in lock adc push mov adc pop push incb push push call repz add sub pushf test les fs jo jns insl jbe aam outsb popa int3 jne popa int3 pop inc dec in inc dec pop cmpsb mov fnsave rcr jo mov mov adc add ror ret fs (bad) addr16 shrb nop cmp jb lretw jb data16 jno gs aaa mov pop stos adc pop stos enter enter in idiv pop in imull mov and mov mov sub mov add lcall (bad) das xchg lea cmp daa sub mov mov cmpsb mov pop std dec push pop out inc dec ljmp (bad) push ljmp (bad) jle adc call repz inc cld out inc cld out jnp (bad) jnp test mov (bad) jns add adc stc loop dec stc rcr jge rcr jge rcr jb rcr pop in lock in inc ljmp adc stos mov sbb inc pop push testb dec call push pop mov push pop mov and mov and sub pushf xchg jo fs jo jns insl jbe aam outsb popa int3 jne popa in inc dec jmp inc mov cmpsb mov fisubl fisubl mov mov adc add adc les lret rolb into (bad) pusha aam shrb nop cmp jb lretw jb jno gs shlb popf and or mov or pusha enter enter in idiv pop in and mov and nop xchg lea cmp xchg xor and and cwtl xchg lahf cmp sub adc mov mov dec push pop out push pop cld pop inc dec cld pop inc stc inc ljmp lret insl lret adc pop call repz push cld fcmovnbe outsb ret je test mov fildll adc add ljmp rcr jae rcr jae rcr jae (bad) lock in (bad) dec in inc jecxz dec inc testb adc push sbb sbb mov out inc pop push jmp call sbb pop add cmp (bad) sub pushf imul arpl insl jbe fisubrl jle jne data16 dec in inc dec in mov mov leave rcr jnp rcr or mov add adc les lret les iret shlb (bad) xor test popa fnsave jno gs fmull xchg lcall or js rcr jnp idiv push in idiv push cmp das (bad) cmp das sub xchg lea cmp cmp mov mov sub and lcall mov mov dec push pop decl jmp movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg add (bad) (bad) dec and repz jbe scas inc jp lods pop test add pop cmpsb aam xrelease rorb xor fmul pop jmp out xchg xor push inc and out in out push cmpl xchg andl sahf sti xor jnp pusha cmc xor inc rorb jb pop movsl add inc mov mov push daa mov data16 insl and sahf dec push rdpmc rol test dec mov push stos adc mov mov add mov int3 adc dec outsb cltd stos jmp aaa fs inc jo loopne stos ljmp sub xchg push repnz cmp or mov add add das xchg ret lea bound mov fwait xchg pop jmp add add rolb mov jge pop ret aaa insb push and pop mov adc or xchg sub inc push xor dec cwtl lcall shlb sub adc aas jns jecxz push dec loope aam in (bad) test test fisttpl or mov add pusha pop aam lret loope fnop adc inc mov test jb roll push mov shlb mov movsb js sbbl out leave or sub in rcr inc jecxz clc lret insb pushf les mov jns rclb xor popa jo jns cmp hlt ror xchg lahf pop jg mov scas adc ja mov sarl (bad) and pop xor push call xor dec xchg int inc loopne int3 lahf sub fwait es cmp inc mov scas ret add notl xlat ficomp into in add push add sbb inc movsb sub lahf aas roll push sbb in loope mov sbb pop inc je popa xor imul push jp pop xchg mov int dec inc push pop pop js inc jecxz insl add (bad) es dec mov push push jo dec jae sahf jle iret or mov movsb (bad) leave mov jnp popa mov ja das jnp bound iret adc mov mov out jge ds cltd sbb lret push (bad) push lret sub jno mov stos dec outsl pushf and cmp outsb pop pop into jbe xor cmp ret int3 imul jbe or cmc scas int3 sub sar popa in cmovo cmc jo faddl mov icebp jg clc loop mov fldt shrl add push int mov mov nop loope lret adc push cli cmpsl incl in push mov xor (bad) in push aas outsl inc mov aas adc push scas or push add push xor scas mov mov pop xchg mov mov push test mov stos mov jle lahf xor dec bound ret sbb orb cld sbb lds xlat cmpsl fiadd push cmp imul inc jo xchg mov dec popf scas cltd jb lods mov test popf and scas dec cld dec int push dec adc or pop mov insl hlt cwtl cltd call nop sub adc in repz inc cmc mov sub or addr16 jnp into cmp jo inc cs and fcompl je (bad) cld inc cmp mov or cmp jbe xor (bad) pushf add out sub pushf addr16 xchg mov xchg bound sub (bad) (bad) loop dec pop xchg pop xchg enter mov dec xchg int3 xorl lahf inc jmp jne xor mov jo,pn in inc mov fisub ljmp cs (bad) sbb jp rorb or push outsl add loope fistpll inc mulb mov js jnp pop jmp xchg xorl out jns and icebp not inc ljmp fcmovb sub push jbe sub rep (bad) (bad) xchg xor rorl mov (bad) aad scas add imul push push in xor hlt sbb (bad) and inc lods cmp inc (bad) pop pop mov mov mov sbb scas mov add scas (bad) mov add loopne iret add push mov xor adc lret xor ja sbb and repz test cmpsb sub lret mov mov pop push pop or or int stc (bad) aas sbb jnp into xchg push call sub inc cmp fistpl sbbl add pop pop cmp push xchg ds lea fist cwtl xchg sub enter inc call das inc lods out mov je pop jbe add jmp clc subb mov test mov lret rolb push (bad) int xchg pop dec cmc dec jbe sub fistpl jge leave (bad) push cwtl leave popa sbb imul leave adc xlat mov xor test or cld mov fcoms (bad) xor lret push pop sti pop outsb les lods sbb out gs scas xchg sarl lret sbb add imulb mov repz out ljmp lret push lea fsub ret ljmp movsb lods xchg jbe movsb repnz xchg in push test fcoml bound addr16 lcall jb lret and test jg jmp inc call cmc mov loopw (bad) fcoms push aad cwtl cmp cmp pop xchg inc adc push adc sbb sbb leave mov loopne lret pop add mov rclb (bad) jge idiv bound out mov sbb sbb inc and sub arpl fcoml mov ret xchg (bad) data16 jge in xchg inc test (bad) ja ret clc (bad) fdivl or inc add sbb nop pop mov out out (bad) idiv jb (bad) adc ret jns and or xor lock adc mov (bad) inc outsl out outsb push addr16 ret pushf inc fldcw lds mov lahf mov dec inc imul ds cmp adc adc insl pop sub scas out test or push push jae push fidivl (bad) test mov adc dec adc fstpt add pop xchg lock sub emms add mov push or movsl jmp mov lret stc dec lods push xchg xchg xor ja gs inc into das xchg cld mov cmc ds push stc addb sbb xor add stc cltd xor sbb xor sti sub (bad) rcrb int3 and aas test xchg cld add add stos adcl cmp (bad) push repz adc jge jecxz test sub fnsave xchg mov lret daa lods cmp popf sub jnp outsl mov dec loopne aam mov add mov in jmp adc pop popa pushf adcl pop pop jmp lds fucomp rcrb inc inc test inc jle inc mov addr16 and xor dec jle jne ret adc xchg bound test inc cmp or je ljmp sub ret jl xor nop test lcall xlat ljmp insl rorl mov (bad) dec cmc or push (bad) mov mov xor pop dec sub movsb and shrb clc mov sub dec sbb jnp pop or add sbb nop add jbe dec mov imull loop jl sbb repz test ret jb outsl cmpsl mov scas mov ret rolb sub xor ljmp jle mov lods xchg mov (bad) aas notl mov aad pop xor xchg int3 lds push orb ficoml pop fsts inc xor xchg xor pop lods in xchg sbbl pop fnsave fimull lds fucomip fnstcw jne in fsubl out inc shrl stos cs lods push or cmp leave pop insl mov xlat ret stos dec sub leave mov mov (bad) (bad) icebp ficom mov scas mov int3 pop mov iret enter pop sub or out sahf push ret lret (bad) je mov hlt dec and xor mov (bad) adc add sbb push fs dec movsb sbb sbbl sub (bad) jb mov test and inc and sub in xchg int sub pushf jae jnp xchg idivl lret push pop push outsl sbb xchg cmp and mov and mov les rol das xchg fwait nop jg les push xchg rclb daa add jge daa clc call cmp add aam je add and push aaa cmpsb xchg movsl xor push daa popf lret cs push pop and mov addb xchg jg stc jo idivb out out or dec scas testl fs fs das (bad) mov and sbb repz mov pop out fwait leave pop scas adc add (bad) dec mov push inc sub cmpsl xor cmc bound cwtl xchg xchg leave add or js int3 sbb icebp imul lds shll in fidiv dec adc xchg and sbb stos in bound arpl dec push pop repz pop imul xor (bad) js xlat outsl or inc fimul jno mov mov sbb call dec pop (bad) mov jg rcr add pop pusha mov lea sahf jmp and sarl lret dec jmp xor test je call jp scas jg sub cmp enter cld gs lcall add ljmp movsl ljmp adc and fildll adcl adc leave push jns pop mov mov jns,pn mov (bad) mov mov dec add mov jo fadds push dec sbb sahf sbb outsl je add dec leave inc mov das out out movb xchg mov add jo push jp cmp js sti xor ficomp fneni(8087 test jae and mov jle xchg cmpsl std jmp add aad loopne divb loope mov and js movl mov aas inc aaa sub or les (bad) push xchg icebp dec sbb rclb ljmp insb lahf sahf outsl outsl sbb mov pusha mov xor adc ds addr16 test add aam shll out (bad) jge mov idivl pushf dec leave out jo pushf cmpl push dec test jp jmp jb jecxz mov push push orl fstpl mov add test cmp (bad) fnstenv nop pop xor (bad) sbb cmc jmp leave mov rorl sar adc xchg outsl movsb mov test cs xchg mov xlat push pmulhw cmp ror aaa (bad) in mov push cmp cld aad inc dec sbb je out add jae jmp out pushf dec xor pushf mov ret mov cmc mov xor (bad) fwait mov les xchg into mov call pop sub lcall outsl call sbbb inc dec fadds sub or stos sbb jecxz mov pop jl movsl fs iret divb popf xor les lea pop or aam jns scas dec mov mov inc insl push push xchg pop and jmp pop pop fwait mov jae sarb inc inc mov add mov xchg pop hlt or jno and ret push je mov rcll test out hlt sbb je jmp int3 and and mov js cmp in adc cmp int3 jb outsb pop sub and pop cltd jp mov movsl leave jnp cltd movsl push push lcall dec sbb call (bad) or dec subl jnp inc xchg push sbb sub icebp mov data16 jle pop sarb pusha pusha mov xor outsb sti imul adc sub adc xor mov sbb adc xor lret add jp ja rcr jp push std (bad) jo mov negl imul fistp stc in cwtl mov jne lcall pop fs ljmp mov add add jge push mov mov and mov adc popf push xchg pop test imul xchg xor ret add sub pop cmp push scas sbb (bad) and ficomp adc xor xor loopne push clc sub jno mov test out cwtl sub xor and outsb pop add in sub jnp cmp in xchg clc jecxz push lahf adc adc dec icebp pop leave jge sub arpl or lret jp pop mov mov loopne adc int3 out xchg inc mov outsl push mov test lcall addr16 jnp adc idivb (bad) push in fcmovbe jmp mov cmp push fstpt mov push or fcom movsb cs cmp fildll push cmpsl cs cmp int3 add adc pop sbb push (bad) and out neg out sarl sub mov inc push enter jae mov push pop sbb adc arpl pop jecxz fisubrl and ja in mov cmp push sub je iret push popa jne or aaa iret adc ret xor jge and mov nop gs push jbe dec pop ret or int pop mov pop inc sbb inc in pop das andl mov iret sub mov sub jno push mov daa arpl cmp and sti imul mov lsl and fcomp cmp push in fisubrl dec shl fldl mov stc inc orb mov cmpsb cmp shrb gs imul jo pop cwtl inc sbb jmp mov cmpsl repnz or add add rclb call aas jns dec pop cmc rclb fcoml int icebp repnz pop stos mov (bad) int int jnp mov add sbb mov pop mov xchg or fwait (bad) adc pop or das cmp out aas repnz mov lret imul into inc push and and sbb insb mov lahf add xchg idivl (bad) pop flds xchg into insl sahf movsl cmp push roll sbb inc in mov sub mov mov jl xor inc cltd mov cmpsb adc pop cmp imul sbb add addb addr16 es movb fcompl mov fnsave jle test (bad) sti test xchg mov inc sub mov sub inc enter push int cmp add xchg mov push jl std add ja es ret sub xor mov inc add mov xor jecxz cld pop mov mov jns jbe add (bad) dec mov push push xchg out (bad) sub xchg dec mov or inc ss loop addl dec cltd or stos adc cli push mov sahf in inc (bad) cltd jne sbb std movsl fsubr sar out xchg push push jb int sbb pop iret fldenv daa mov insb bound mov xchg out out inc test xchg outsl push cld jmp dec add inc fxch or inc push movb inc das lock xchg inc movd pop (bad) xchg and adc scas in xchg imul (bad) notb sub jecxz cs cmpsl sbb inc js adc push xor dec or jo xchg and outsb mov sbb cld push adc pop jbe pop fisubr inc stc lcall fsubs adc inc push xchg sbb xchg push mov xor sbb lock and test lea push add div aad mov inc pop cmpsl pop enter lods pop loop fsubs out push pop rcll cmp insb stos mov xchg pop rol out xchg mov pop sub insb movsl lret sarb addr16 dec (bad) fisubr pop gs push mov pop (bad) test lcall scas sub popf mov cmp lcall sub ljmp mov push packsswb into fcmovb xchg clc and inc adc mov popf push adc cld ja and cmp mov xor jns daa aas adc mov orl addr16 mov popa outsl out je mov xchg pop lea mov popf jns mov insb in jnp,pn ljmp dec leave xor psadbw addr16 test fwait jecxz rcrl rorb pop push mov gs mov mov xchg jg call adc adc pop jnp lss ljmp aad aas pop xchg cmp sbb iret pop or test push sti cmp jo fwait js sbb sub pop sub jo sar sub sbb xchg int3 test xor lret push adc cmp ret mov or pop dec loop mov xor lods adc outsl inc mov cmp clc movsb add outsb stos scas ss add into arpl xor xchg xlat out clc push es push scas sub mov ljmp mov jno jecxz sub mov out dec int push jg or push int3 xchg leave mov sbb push dec mov fisttp lods cmpsb cmp shlb fcoml std xchg inc push sqrtps jp ret sub out hlt fadd pop in ljmp sub inc or jbe mov xlat lret jmp mov jne pop xor int or and mov add loopne ret fdiv jnp popa cli out fwait jbe ficoml mov in test ss dec push mov pop mov sbb mov (bad) dec pop repz in jp mov test adc lret dec in sub addr16 dec adc insl out or add push shll push xor xchg fcompl mov jecxz and cli sub loopne xor aaa xchg and jle jge xchg pop sub mov outsl cmpsl mov shrl jmp out int adc and jb addl gs out cwtl xor lret fs daa mov xchg in xor stc rcll cltd mov ja int3 adc add lods lret adc movsb push ljmp pop sbb jl sub cwtl add and outsl xchg rclb test xchg sub sbb dec mov push and adcl sbb sub into jae dec lock xor mulb cmp lahf lods or into xchg lods aad adc dec add leave push icebp stc dec adcl lcall push sbb lock add add ja insl jmp push jo clc aaa mov fisttpll inc mov gs js or mov xchg jb pushf jle jns shll std and xchg les xor enter cmp pop push arpl daa pop js jg enter xor mov lods dec pop in mov inc xchg shlb inc orl push mov (bad) bound sbb (bad) pop xor sbb std test fcmovnbe sahf push mov sub stos hlt sub adc sbb jno dec les mov cmp lahf aad xchg jmp pop das nop addr16 rclb fs sub jo ds in lea inc lds outsl in fwait ret pop xchg jg subl pop dec jecxz test mov xor sbb jge xor mov adc xor and mov pop mov dec mov stc std mov sbb les jo aam pop or dec cmp adcl negl jl imul imull loop pop test sub cmc cwtl sbb decb cli (bad) test (bad) lahf cmp sahf loope outsb cli inc mov adc test mov xchg les mov mov inc mov int and pop inc push mov test cmp or mov sahf cli ja gs lock mov sub in (bad) jle jmp adc mov lret orl jge and jne xchg lock lods je and icebp test xchg imul ret fbld dec lods xor xchg test and xlat out es adc lock xchg jbe or ret push lds fsubrl lahf shrl pop icebp stos mov xchg jne notb mov lret mov dec in pop mov xor sbb mov and add or mov les sbb les dec sbbb sub pop pop insb and mov loopne inc push mov cs fldl cmp xchg clc or jp jmp sub or cmp add mov pop add addr16 push jnp arpl mov inc lcall sub popf dec cmpl pop mov lds fsubrs test adc and outsb fstpl sub sbb add call pop mov (bad) in lea sub mov sbb fcmove loop mov (bad) dec xchg outsl add jp je pop frstor call inc mov jle mov (bad) jo pop mov or jg cld insb adc jae adc inc xchg mov mov (bad) mul aad or mov andb jecxz (bad) stc (bad) fstpt inc leave mov outsl xor lcall push xor sub movsb call mov xor mov or ret xchg dec sti mov or jl cld lret mov aad or xchg or fcompl fsincos jge inc insl or cs sub and sti inc push and mov adc imul mov divb xor (bad) lods mov pmaxub pop cwtl adc ds mov out jns test icebp pushf xor xor mov add sbb xchg ljmp mov call nop xor push adc mov cltd cli inc dec xchg adc xor adc adcl ret mov sbb inc stos push push mov popa icebp mov ret dec adc sub (bad) mov jae and call jns pop jge or lock jnp lcall mov dec sahf iret adc pusha pusha jge sbb es ljmp cmpl incb mov sub int3 (bad) mov mov cmc loop loop push aad push loope lret inc sub sbb pop jne cmp mov or dec popa pop jo loope negl xor testl mov imul pop lret nop out lea insb loopne popa jns mov cmp xor sbb mov stc stos ffreep loope sub add pop pop add mov mov jne stos cmp lahf in sub cmp aaa daa and xor sbb out pop jns test add jecxz pop out mov outsb and mov jo cld and icebp jl movsb sbb add mov cmp xor jge arpl cmp mov or insl (bad) mov shll popa fmuls add dec or jge mov push adc mov and lds lods and mov jnp inc inc out je pop jnp push xor (bad) orb cmc das or xor aas or call and mov mov pop lahf loope mov popf mov push mov (bad) xchg out mov adc pop sub popf data16 and xchg xchg xchg call insb ficompl movsl sub push test jg ret jo mov mov xchg mov out sbb incb dec in mov push mov adc or add in push (bad) mov xchg mov sbb rolb push lock jns ds addr16 movsl dec adc (bad) dec incb jmp fildll cmp bound jns sbb push sahf lods inc std or jge daa mov push popf inc cmp add pop add mov xchg xchg neg idivb iret lods (bad) les push or mov repz jae js lds mov jo ret arpl and add cld inc loop or sarl arpl int sbb dec imul adc sub dec outsl in push add jns icebp jmp xchg xchg inc xchg (bad) (bad) (bad) cmp xlat push scas dec mov pop pushl mov ret cmp sub xor mov mov js jge test xor mov jne ret add lahf push push enter imul mov adc dec pop add inc jno fisub xlat into int mov jge insb dec leave out scas dec or outsb push mov clc repnz add pop cltd pop xor mov pop shrl adc sbb mov push push dec hlt stos add outsl fildll xor xchg lods icebp dec push jmp jl xchg dec aad rolb cwtl or cli mov out add add call jp mov in push out cmpl (bad) das popa imul outsl add lahf mov inc mov into loop (bad) lcall fistl test mov mov pop mov daa das mov or and pop inc cmp jl xchg pop inc test les test adc jmp cs mov push ja xchg ret test push sub into cmp outsb cld fistpll jo inc or loopne push cwtl test stos and dec mov jp mov aam jbe mov cmp pop cmc adc inc push add lcall add fsubrl clc sub rcrb mov push dec mov dec aas fcmove das jns ljmp (bad) (bad) and mov movl (bad) repnz mov pop cmpsb negl mov cmp imul cmp pop cmp notb sub push and add in inc lock (bad) fmul clc pop jb out jns push pusha das movsb jg push ss jbe js xor popf mov outsb (bad) sbb fwait stos pop or ror test inc fidiv mov sti test dec jge inc movsb jl and das aad mov mov cwtl out imul mov xchg mov add scas les pop test cmp es stos push push ret imul scas sbb fwait and mov fdivr stos xor shr push mov mov enter out inc pop fimull (bad) aas pushf push jmp ds push imul ficompl cld add add jb in and add jmp mov jle inc or aas sbb les data16 add jne pop shr push jne mov pavgb fiaddl in repz pop movsl mov adcl sub push popf ds out push out scas popf xchg cmp mov or (bad) jo (bad) xor adc mov cs mov dec inc cmpsb push xor mov stc mov movl (bad) cli jle push mov sbb push faddp clc sbb ret (bad) sti mov and jecxz ret jp pop pusha subl into jnp adc pop mov sti (bad) and outsl xor (bad) lods dec or jnp dec cmp adc adc mov push xchg mov in lods adcl or xchg orl pop (bad) call fwait mov scas popl nop sub sbb mov dec aam daa add jg pusha dec xchg addr16 pop inc inc mov insb xchg jno repz fldt ss ja add push repz push xchg pusha aam sbb push jnp adc jne inc cmc (bad) fwait mov and add sub in daa movsb lods test (bad) xor lret arpl adc pop in aaa mov (bad) mov lock fcomps fwait mov sub xchg jp lds push (bad) dec call cs dec aad int3 add push inc jns fnstsw cld sub adc and fmul outsl pop mov imul sbb in pop fimull shrb arpl rclb sahf jns jbe movsb xchg push and adc add call xchg add pop (bad) push and cltd cli bound sbb imul jae push (bad) outsb sbb xchg in sbb or jp bsf push scas rolb sarl lahf shlb sar jl cmpsl jns inc pop cmp and dec inc push repz lret add push lcall fmuls cmp es xchg pop jmp add mov xchg hlt iret or lcall aaa movsb mov out fidivl pop enter cmp adc jg cmp (bad) sbb lods cmp jnp dec fucomp jmp cmpsl in leave aad push inc sub inc dec jp inc jmp or sub inc scas inc sti mov mov mov loop dec popf fisttpl push imul rclb add mov xlat (bad) rclb dec aam inc std fwait roll rorb outsb js repnz mov jge add repz ret je jb popa mov pop xor mov stos ss sti mov movsl mov mov mov jne idivb imull lret outsl lea or and mov scas inc mov fwait movsl fisubrl mov and xchg or jp adc lcall jo (bad) or outsl lods or pop jo sbb popa jmp popa dec int (bad) jae mov or push rclb mov frstor cmpsb jo and fnsave xor mov jnp inc inc outsb jne aam push dec add (bad) dec nop xchg or stos cmp pop and and add fidiv data16 add mov dec aas cwtl dec scas and je imul pop cltd data16 daa popf js pop cmp mov pushf (bad) aad in lock loopne dec mov aad out mov mov or pushf cwtl mov call sbb rorb xchg mov sbbl sbb hlt lods xchg mov dec cmp dec test pop dec (bad) out cltd push icebp push mov imul cmp insb xchg lock pop aam adc or pop aad push popa cli and out cmp and roll and loopne mov dec push and (bad) adc rolb lcall add dec inc pop jbe ja mov pop pop shrl (bad) lock loopne fwait cmp gs cmpsb sahf mov cwtl mov mov mov out mov add dec (bad) dec clc rcrb or icebp lcall addr16 sti cmp adcl mov pop jnp mov inc les scas cmp xchg data16 pop pop jbe cmpsb sub lcall inc xorl shrb outsl xchg mov lahf bound mov in cmc jno cmp ljmp (bad) bnd xchg arpl cmpsb fstpl shrb iret dec push pop test mov es cltd mov sahf into ljmp mov loope popa int3 mov callw orl mov jle lret enter mov aam insl dec test sbb inc jo ljmp arpl ret inc cs popa popa stos add ja out and scas xchg orl adc inc ljmp out or out dec mov inc or jmp (bad) call push jb scas mov dec repz add in sub inc movsb jo outsl dec (bad) cmp jmp xchg lret sub out xchg cmp imul stc adcl jg sbb jbe pop pop inc in add cmp inc sub mov loope sahf xchg inc push testl gs xor xchg add out or mov cmp xlat push jne (bad) daa sub shl cmp cmpsl loope sbb dec inc gs dec cmp push sbb cmc popf inc jge cmpsb lea sbb int3 imul xchg jmp imul jmp and cmp and inc insb and push mov fdivp (bad) (bad) or add fdivrp push adc push add stos (bad) xor jge pushf mov dec lds add daa push scas push fidivrl (bad) mov inc leave sbb pop lea or mov (bad) xchg arpl adc pop push scas cmc out xchg fiadd les mov sbb sbb or ja aaa cli push pop mov cs aad faddl add leave push dec lods sbb cmp scas lret pop test and mul push xor lahf jo inc or bound sti and and into aaa adc lahf push xor popf std aaa add and xor dec iret dec out and imul scas pusha mov pop dec jo (bad) pop mov sbb adc aam xbegin iret loop or es push sbb pop xchg or flds add mov cltd ja mov stos popa lods test incb and pop (bad) cmpsl mov adc loop inc outsl in in xchg stos cmp sbb in cmp in push push mov mov leave call xlat int sbb push sahf xchg mov sbbl xchg and lahf fmul pop xchg jmp pop clc cmp and jecxz adc jbe subl fdivl add es insb sbb fwait mov mov imull shll adc imul lds cmp es aam in jno cmp pop mov jge cld xor in dec mov cld lods mov jno and cs mov pop (bad) jecxz or sub sbb pop into lret sbb sti (bad) xchg mul ljmp mov add add test adc pop jmp lds and enter sarb sub movsb leave test pop xchg cmp mov stc jno ficoml xor insl bound xchg adc (bad) jge addl test leave test mov (bad) repnz adc ss ljmp fnsave cmpsl push mov cmp aam lods das cld cmpsl pop sbb (bad) pusha aas mov cmc cmp push mov clc es sbb scas inc jp or or jge rcr push rcll nopl mov dec sbb xor jl jp ljmp adc lret pushf push ret jecxz push test mov mov add icebp push add cmp cmp inc mov dec push sub pushf icebp loope xchg xor xorb test lea hlt test cmc (bad) stos and push add arpl fisub cs mov xlat lret inc pop jns inc lock sub mov or ret mov jb jb dec jecxz pop or test repz adc mov xor mov sahf jnp fistp jno fcomps xor subps lar dec pop int3 push adc xor (bad) jnp clc pop mov pop jecxz cltd lock cld push rclb mov fabs cli stc mov mov fs ja mov lea pop call jl xchg std fidivr mov pop repz sbb push call add inc dec xchg fsubrs xchg lds test add push dec test sub cmp jnp aas lds (bad) xor stc jg sti outsb xor fbstp pop mov add add mov shrl ss mov leave pop sti fisubr push xchg pop aad and lds fs int aas or push repz inc aad jg pop lock cmpsb xchg mov or inc into outsb add ja imul test call leave pop xor lret mov inc ja xor dec adc bound fldl add mov adc push test out stos imul gs in push mov in jmp xor rclb mov hlt sub cmc xchg (bad) repnz xchg ds or in add sbb aaa mov test push xor sub mov es mov mov mov sti es jae or stos mov or cmpsl aas pop jno ret inc add adc pushl and mov scas out xor mov rcrl sahf movsb push sar cmp fisubrl call sbb test push mov xchg inc cmp js mov cmpsb inc lcall and cmpsl xor mov shll lret das xor insl cli pop es inc dec push add insl push mov inc sbb jl jae (bad) cmp xchg pop mov sbb jno dec insl add add mov cmp cmp and push std cld sub inc test je gs pop jle call mov jge sbb xchg in (bad) shrb add add sahf (bad) fucomp pop jno cmpsb mov jp pop adc call cld cmp mov ds sub sub and dec ljmp push bound pusha sahf or stos dec mov dec jg xchg add add dec xchg test cmc sbb dec sub fcoml adc pop fisubl add jmp rcr or adc sbb test xor lret xor decb xor sti cs xchg fwait cmp mov clc sahf jg sti xlat xchg les ljmp mov adc pop rolb aas sub mov popf lods int3 hlt add fisubrl jmp jecxz rcrb gs and mov in (bad) repnz mov insl fdivs test pop lcall int3 push lods ja xor add gs bnd lock add inc aad pop cmpb sbb mov imul lods or mov mov test pop (bad) cmp push das mov dec cmp adc clc out jle aaa cmpl mov cwtl push xchg jmp xchg and scas in sarl push sub mov in mov gs or loope stos pop notl push mov and xlat jbe mov addr16 js pusha mov push mov cltd and out push decl pop daa lock in jbe cmp jp inc clc arpl dec xchg push repz aas add xor sbb adc (bad) ss push aam in push lret add dec pop aaa lock inc cmp shrb (bad) (bad) (bad) jns cmpsl lea fldl sub add scas sti jo sbb jecxz and (bad) les inc jg sbb and inc pop mov aas jp and insl ss daa dec out dec inc sub push lret jb jbe aam pop mov mov mov pop iret out xor mov lret push addb pop imul xor mov mov into (bad) jmp inc rclb cli xchg (bad) fildl lret ds xor call inc test call cmp inc stc shr jnp jge emms add ret fadds leave xchg leave cli dec mov adc push or push cmp push push lea mov cmp cmovle inc in dec test (bad) rcr add int jle jge jne test push sbb adc inc sub push pop arpl rclb add (bad) aas pop pop push repz pushf in cmp or fisub push xchg sub (bad) fst ljmp cmp and pusha cmp push sbb scas jmp dec push popa pop (bad) xchg xchg jg out cmpsb mov jae dec or add xor loopne inc jne sub xor sbb adc pusha pop lock cmc mov cwtl mov dec mov push (bad) sahf xchg loope push dec mov xor cmpsb stos jne sbb push jne sti aam pop (bad) lahf ret jl cmp aaa aaa and lock daa pop add test dec sub mov ficompl call sub enter stc lret jmp std pop lock lods pop adc inc add or je out push inc test mov add in data16 das mul mov cmpsl push pop addr16 outsb mul jnp cmp add or lods (bad) xor dec pop mov mov out lcall sahf jmp ljmp jnp jnp add mov and mov fbstp iret cltd pop cmp mov sub pop push push jo or mov ljmp ret js,pn jb mov cmp pusha sub pop roll cmpsl fs lahf daa fmul fildl sbb lret rclb lcall add lahf or lret jmp pop fisubr xor lods daa add pop adc hlt scas mov dec (bad) jge pop jp jne cmpsl outsb nop inc ljmp xor out rcrl sub sub stc enter jp aad lretw (bad) mov add add jnp sub ja add inc mov jecxz or push test sbb or and mov pop cli into scas pop add sti cli dec mov or lock or pop adc xor cmc gs push or pop rcl gs add xor push mov jl jae rep cmp lret jecxz sub fisttp jo (bad) fnsave dec movd and mov adc and or sbb mov push ret xor jnp bnd add sub pop sub aam mov fwait movsl fsts lahf jne ja sbb ret xor fucomip ja aaa mov (bad) movsb adc lret arpl hlt stc add dec leave das fsubrs into jmp jge sbb test je stos adc mov fiadd in pop (bad) cmp je jnp dec in mov popf cwtl sub lods (bad) jmp mov call push in jp shrl adc dec xchg ss ljmp aad pop sbb sub and or mov cmp mov and push push mov mov push cli loopne sbb mov iret mov cwtl xchg stos cld sub stos fnsave jo (bad) ss and push fisubrl cmp shrl icebp inc pushw add (bad) orl int3 cmpl push call hlt (bad) imull shrb pop test cmp negb jl sti mov dec xor push push lds sub jno and clc push insb pusha (bad) add cmp add mov add push mov iret (bad) out dec mov ret xor sub inc shrl std das sub shrb ffreep icebp mov mov or jno dec test inc push mov pop ja dec aaa incb pop inc fwait insb aaa sbbb mov scas in pop xchg xchg push mov pop pop cmpsl cmp imull hlt pushf ja pop sbb sub dec std sbb mov jg insl mov loopne cli push popf ljmp (bad) mov xor cmpsb bound sti lret xor or out aaa jb push add (bad) mov movsl inc inc movsl popw in mov orl mov cmpsl adc nop push (bad) bound jae pusha fdivs xchg pop mov aad out mov orl imul sbb cmc stc jge lock lea test stos fsub dec mov add or je mov cmp add push fdivs mov push (bad) inc sahf in adc add inc jg adc gs in les and xchg jo add xor xor notb push push mov mov add sbb mov jo addr16 ret add jmp cmp pop push es mov dec test mov testb adc cmp fs mov cmpsl adc daa dec cltd sub dec in and mov je jns shrb jo neg jecxz or push hlt into inc aas test xchg jns mov push frstor pop dec mov push stos (bad) fdivl adc mov fidivrl cmc add xchg cltd into fnstcw add popf decb arpl movsb cmp adc in and jae inc pop or pop cmp lods dec push sbb aam movsl push xchg and repz movsb stc xchg add dec cld (bad) mov or aaa mov cmc cmpsl sarb adc loopne cmc cmpsb scas pop pop pop (bad) and ljmp mov pop inc es aad and and (bad) mov cli cmpsb lods dec mov out pop in lods outsb (bad) cld xor inc sub cli sbb sti xchg mov push stos or cmp xor xor xor and stos pop (bad) mov mov lds and or adc pop inc mov out xor scas mov dec push dec (bad) jno lods (bad) xor mov pop xlat (bad) in mov add xor mov int3 mov test (bad) pusha popl push xchg xchg mov push ds data16 in mov insl lret mov mov out mov imul pop xor clc stos xor sub div out sub inc add cwtl push mov (bad) sbb cmp adc inc cwtl add sbb jle push pop inc pop cmp push adc ror es dec adc inc and xor insb ja push jne dec inc cmp fsubrs jg mov ds int3 dec lea or jmp xchg loope outsl or and xor mov (bad) int ss sub ljmp add push mov or jp xor add dec add xchg xchg xor bound pop addb sbb jl pushf cld xchg stc add xchg xchg sub scas sub sbb (bad) das (bad) jno ljmp test test mov mov fdivs ret je xchg jb fwait jne mov mov inc inc inc and push in mov mov dec fwait jp in xor mov pop jmp ja jmp mov sbb (bad) and or popa sub pushf in mov in repz decb and in mov jne lods (bad) push fldl hlt out arpl out cmp xor inc push loope mov jo loopne sahf pop add push jmp mov pop mov dec mov pusha jb bound xchg mov jg sti xchg scas dec out stc cmpxchg rorb scas stos loopne aaa add sub sub lods lea test leave dec cmp std add cmp fs push add push (bad) xlat add flds pushf (bad) xor stos add (bad) mov fcos enter xchg adc mov decb xchg jae jb fs sub icebp mov and ds lock cli sbb out sub (bad) je add loope scas adc push test in daa fdivrs adc scas das cltd repnz lds jle mov (bad) out fidivr push fdivs xchg aad repz mov jb inc fwait xor mov cmpsl hlt jle mov in mov mov cltd pushl dec (bad) push (bad) mov test xor xlat insb call jb mov or pop or jp orb aas test add inc pop push popa mov cmp sbb add aad (bad) das (bad) jp cld mov cli pop mov add loope arpl push and push adc sub jmp inc int fldl out sbb push hlt dec push xlat cmp repz ret outsl jno icebp mov mov xchg add cmp (bad) pusha outsl xor inc jo sbb std mov and lret into scas aas addr16 (bad) jo cmpsb insb inc hlt inc push pop ja xchg xor pushf testb cltd push pop cli push push out adc shll xchg dec sbb cmp fnstenv xchg or mov cmp int3 aas js dec and add ret jno xchg addr16 xor adc cmpsb cmpsl mov pop sahf mov push xorb in push jmp insb push xchg push add ja in rcll mov jo mov lahf popa ss mov (bad) mov mov movsl mulb daa xor pop or out (bad) bound or mov clc dec in adc inc scas insb in insb stc movsb pop mov imul scas js sar add jne out in in (bad) jecxz repnz popa adc push out push je push test sbb jge mov or ljmp sbb sarl cmp in jle je mov push stos int3 loopne (bad) jmp jns mov mov or popa add xchg mov fwait inc jge les rcrb pop (bad) lcall lods mov cld icebp mov cmp lock ret xor jne sbb push aad test scas sbb add (bad) xchg pop (bad) add mov shr sub ljmp xchg mov shlb imul scas jmp xor stc add dec xor adc sbb mov sub cmp adc adc imul sbb in inc daa jne mov inc dec std and icebp adc add mov cld pop push push les xchg out cmp pop push bound imulb and cmp dec loopne inc sub mov sub test (bad) xchg jne inc sbbl dec shrl icebp outsb xor sub and lret push sub mov in add and ret pop stc lock movsl sbb mov xchg inc stos jecxz out data16 ljmp adcl adc jle es rorl pop jmp (bad) pop add sub pop mov (bad) lock jmp pusha ja cmp inc or push pop jmp xchg ss mov idiv addr16 jp pushf mov cli inc jge adc add (bad) out jecxz aaa xor sub xchg push ja (bad) adc xor adc sbb mov mov lock cmp ret (bad) aaa inc outsb xchg dec pop sub sub test add inc popl add cwtl jp sub jae mov cmp subl mov es aaa inc cmp hlt pop jae das sub push mov (bad) loop (bad) mov movsl ljmp arpl aaa cmp in inc outsl mov dec gs cmp xchg mov push jne jmp cwtl fucomip cli sub adc into mov mov push jecxz add clc lds sub and push mov sub sub add cmp or jmp fstps mov xchg hlt mov andl xor jecxz cmp push push stc and cmp lods dec and (bad) call adc xor ret xor push lods (bad) iret ret pop mov addr16 xor pop ds mulb inc lahf aam popa push call or pop (bad) xchg dec lea insb clc nop les stc adc xchg xchg mov jp popf cmp scas pop data16 (bad) or (bad) xchg addr16 in sahf es mov adc out lods sub (bad) pop push jmp mov and iret mov jmp inc add mov push call push (bad) test pop sub orl add fwait and nop mov loop test mov sbb sahf inc add enter repnz push jmp test mov out pop in xlat es adc sub mov push stos jbe cmp ss popa mov enter in mov cmp push mov aad lods and cwtl jb bound loope jb and cltd dec sub xchg movsw rorl aas mov sti std scas shl mov shr add inc xchg and or js stos popf inc jecxz push jp sahf and xor mov mov sub adc pop (bad) ret repz rolb pop outsl (bad) inc or xchg out push cmp imull dec rcll add fwait mov xchg aam pop ret icebp dec dec dec fsubl aas inc subb jl lea mov add adc mov outsl sub inc sbb fisttp push cs and mov ja and hlt shrb mov xchg jl mov movsl (bad) mov xor and insl adc jae stos popf fcompl cmc xor gs repz push and push aas lock sbb cld cmp cmpsl mov or cmp lds popa bswap jl shll adc push jg imul insb jnp scas jno inc mov dec andb sub add ret mov leave push scas dec dec lds loope hlt jecxz jmp mov mov cmp jecxz in in fwait int3 or test or insb loop stos sub into sbb cmpsb mov ficompl (bad) repnz adc movsl iret fwait pop push cli sbb imul add adc mov jmp jbe std dec dec or clc mov inc jnp ret xor in (bad) lret hlt mov loopne adc or movsb mov sbb sar mov (bad) cmp pop push (bad) out es cmpsl push (bad) mov or fistpl push shrl (bad) xor add jmp int mov add fldenv push inc xchg pop es daa notb repz bound inc or mov (bad) push mov outsb inc mov aam add repnz push jl mov push (bad) mov xchg mov (bad) mov mov outsb cmp adc jmp imul mov daa and enter add jnp push sti sub lods ds movsl xchg xor jo gs je clc jmp aas add lretw shll cmp ret push cmpsb test lret xchg (bad) mov nop fimul in mov cmp mov and add sub sub (bad) dec pop xorl dec adc cmp mov loope push imul and sub test out fucomp into adc sub sub das inc adc xchg push nop jo (bad) icebp lds (bad) mov bound xchg jae inc popf rcrl call jae pop into mov popf icebp in fs loop stos inc das push sub mov xchg and jbe add push mov daa fst test cmp (bad) cmpsl shld add mov mov or mov mov sub ljmp adc in and add cmpsl dec pop pop inc cmp push test in into sub mov in test xor lret push popf add mov pop and dec push or mov adc sub and mov cmp xor jns enter stos loopne cvtpi2ps inc adc clc cmc push cmp push push imul mov aaa xor fs bound sbb inc out scas sbb (bad) sub push insb idivb mov mov es xor iret xchg stos cmp jo xchg dec fwait xlat push adc (bad) sub mov arpl clc loope cmpsb (bad) je jbe ret mov ds add adc dec dec add sahf pushf lahf push jns lods test push inc adc test aaa test mov dec inc roll or add mov pop xor xchg sbb enter mov ss cmc std push sub fs fidivrl xchg pop mov jbe dec mov test outsb ret jbe xor faddl pop stos pop mov inc ret sub cmp fwait adc imul dec xor fildl and mov mov iret test shlb leave addr16 inc sbb test mov pop adc fwait add test or (bad) or xchg jno pop jnp iret or es call inc dec pop nop inc cmpsb fs inc stc jae in xor mov xor cmp das or ja pushw add scas xor inc (bad) mov outsl out and cwtl and jg dec xor aam jns fcomps jns popf and mov push sbb dec add mov mov xor mov out (bad) adc call push add add fsubrs adc stc stos scas insl mov push mov aad test sti pop les jb stos and stos jns aaa add xor dec std sar mov hlt xor adc test xlat ja mov add hlt (bad) jnp sbb lret iret xchg xchg inc hlt cmp pop (bad) adc mov inc xchg mov xor (bad) clc int3 mov iret push ss in add pop loop movsb sbb push mov addr16 sbb divb sub jb sub xor test add cmp jns mov jnp into lds loop cmp movsl nop mov mov cmp outsl mov fwait jmp adc loop movsl bound lcall dec push mov mov loop fs xor (bad) leave xchg das faddp loope adc adc mov mov jne stos sbb adc mov mov std xchg out dec dec xor jnp sti dec aad or cmp xchg data16 cmc dec (bad) int in xor or mov mov jecxz insl jo cli imul push cmp push cld call sbb mov sbb mov xor popa push push mov lcall sub and sub xchg cmp jg adc sbb ljmp pop adc add pop cmp mov sub repz and imul xlat adc push xor xor pop pop push xorb sub stc in mov mov jmp push mov hlt mov add push fcmovb jb flds push pusha adc test xchg push stos mov dec aaa add push jmp sbb gs mov shrb dec cmp sbb inc test test div loope mov mov out push rorl std movsb mov sti ds popf loop lret sbb aam ds mov arpl jb mov sbb test jbe int3 add cltd (bad) push les imulb pushf cs push push std ljmp dec jns pop jmp stos inc cmp fs xchg and in and lea cmp sub (bad) push xchg xor pop hlt dec imul leave mov les push lock jge pop push mov sbb push mov pusha fcmovne mov jb scas test jmp mov mov add add cltd mov or sub jle inc or adc adc ror test mov mov cmp xchg rorb iret xor jae (bad) lcall enter jl lret cld dec jns xchg daa mov mov jbe xchg inc mov add jno popf jae push mov xlat das cmp ret adc inc int3 inc inc mov mov stc dec ret adc rolb push lret and aaa enter sarb push mov push push mov rcll iret in sub aaa mov ficoml rcrl (bad) cmpsl out pop push or push je ja cmp roll sbbl jle jmp cmpsb xchg add cli jnp jge xor xor int3 dec mov push out mov mov add cmp xor xor inc popa cld out sub iret jg loope not dec adc mov test lods jne stos dec bnd (bad) insl sub jae ret adc pop aas and outsl or jecxz les mov (bad) test lea pop add scas cs std xchg test push adc mov sbb add sahf push dec dec add loope or in lock add and aad imul xor cmp sahf mov clc pop fldenv cld std aas inc dec pop sub xor or cmpsb xchg sahf xor sahf jmp push cmpsb into add sahf dec js imul push lret jo jg nop push repnz sahf imul inc fcoml add jno sarl clc mov mov dec pop xor push fldcw std inc in je fdivl subl pop jnp repnz ficomp data16 shll sbb test mov neg ret enter xchg push mov scas test fsubrl (bad) cmp cmp repz or test jmp mov push rorb aas jmp cmp daa pop scas cmpsb js jns push (bad) das jbe sbb pop cmpsl jge mov rorb cmpsb and jno inc je cmpsl push addr16 int std sbb rolb cs lcall or int3 sub in sbb dec xchg int clc sub push out insl lock pop test movsl sar or addr16 mov std sub cmpsl (bad) (bad) fidivl mov jae ljmp mov add pop push push add pop and mov xchg fs sbb nop lret jge push mov jl mov mov roll push mov (bad) fsts mov and or ret jp sahf fsub push pop shll ds mov pushw gs rol pushf scas push sbb insb scas scas into lret aad add dec ss pop push inc pop push lcall in xor inc mov jb adc jg dec cmpsl inc pop mov xlat jl cmp arpl inc (bad) fldt ret ds jb ret mov pop mov cmp std push xor mov pushf jns das cs scas dec movsl loop fcmove and xchg push int push or xchg sti lods (bad) adc loope (bad) flds mov addr16 jo xchg pop sti xchg aad inc xchg dec in dec add sbb pop and cltd jnp inc and mov gs test inc xor call dec out les popf cmp daa xlat adc insl (bad) mov (bad) jp stos (bad) dec sbb scas mov or (bad) mov xor into imul pop mov xchg mov cwtl sarb adc xlat frstor mov mov data16 and xchg xor sub pusha xchg sub scas repnz andl mov jg jl and sub xlat in jg xchg and or push inc cli rol (bad) imul iret mov outsl aad scas dec pop sub out mov aas cmpsl cmpsl call sub cmp pop or mov inc xor jno shrb mov in adc call lock add dec test fistpl mov add add (bad) pop and lret cltd stos mov pop pop jo lods cwtl push test jecxz push jo int3 test stc out lret fs leave sub std pop xchg pop inc jns stos (bad) gs inc jns and and test xchg push sub mov push and push lcall xchg push xor push jmp inc fwait xor mov dec rclb lods or add or mulb xor call jle dec not int ja mov pop jae stos (bad) (bad) gs lods jb hlt mov cli push outsb push andl lahf js fist sarb and sbb push xchg dec fnstenv jmp rolb xor (bad) (bad) andl adc xor jp push daa nop outsl fidiv mov add mov xor stos push jmp cmpsb mov add test xchg inc mov xor outsl or cmp push xchg fwait les push adc push sub inc aam mov jne jge aad cltd push xor aaa or mov dec rorb mov enter jae inc dec and sub mov pop and fld push (bad) sahf cltd scas xlat insb cwtl fisttpll mov add or fld cmp mov movsb cmp jns sbb xchg (bad) mov jg dec lods push pop xchg fwait call xor movsl icebp lock xchg and bound stc bound inc stc inc je bound or push sahf decb repz outsb dec fistpl mov lds push push dec jecxz inc movsl dec push pop cmc mov inc mov mov lret adc xchg or rorl mov add std (bad) cmp or mov dec sbb xchg stos addr16 sahf cmp sub pop fisttp dec pushf daa mov mov cmpsl insl sub std push clc add gs aad add and mov dec pop jge inc jbe mov add mov push stos adcl out cmc xor loopne rcll stos xchg in (bad) (bad) movsb pop add mov xchg xlat xor mov sbb mov subb dec imul or or nop and or cwtl sub pop cs (bad) jl clc in or jb sbb cli jb inc loope jne or push sbb scas cmpb sahf mov xchg jae pop (bad) sbb lds inc (bad) push pop addr16 pop ja pop push jge dec sti add pop mov or addr16 mov inc cltd outsl pop jle dec inc mov fist and sub lret mov pop lock sub mov out ja (bad) fidivl movsl or mov and pop adc nop fs daa sti push clc sub xor das fwait cmp jo inc xchg dec insl lock adc fxch or inc (bad) (bad) fistpll mov int mov les pop stos dec cmp aaa cmp (bad) mov sub or out shll xlat repz movsb mov dec test mov and jno sbb xor lret (bad) mov fs xchg pop aad add scas movhps mull push and mov je push adc hlt shll xor adc nop scas and push bound std add mov bound sub pop sbb dec add add jns inc push xor inc cmp mov iret jge loope jns (bad) ja gs mov mov inc andl xchg xlat jns in mov iret stos scas or out xor inc sbb lock adc lcall cmp or clc pop xchg (bad) jae xchg mov scas stos and int lahf sbb fistpll das pop sarb mov or fdivs ret jno xor adc hlt adc mov mov mov and adc sbb call cmp push fistpll mov and daa enter fdivs jmp xor lret lds movsl ror xchg (bad) orl ret outsb cltd push or dec mov and clc add in fmull popa jb cwtl loopne cmp sub and mov push bound mov cmpsl xchg sub xchg mov in push mov or sarl mov cmp out test jecxz xlat scas xor scas inc sbb xchg aad addr16 sub rol push inc sub inc pop mov adc cmp push cmc lret ljmp or stos mov in mov ds bound inc inc jmp jbe bound sub add mov shrb (bad) stc shll add pop mov sub sub stc gs inc mov das setnp sub mov xor pop fnstsw sbb inc fistpll xchg jbe inc daa popa shl cmpsb fnsave adc stos add inc or add inc jle call inc fwait sbb cwtl shrl fsts or fsub xor mov loop xor les lock in pusha cmc dec and shrb test xchg scas inc inc addl (bad) in in push pop dec mov push sbb jecxz pop fstpl sub inc dec clc loopne mov xchg inc mov dec inc sbb aas jge mov push sbb cmpsb insb or (bad) jmp add and dec loop push cmp mov gs addr16 mov mov mov lahf cmpsl ja jmp mov mov mov int3 push popa dec lret push cmc (bad) adc mov in nop incb or iret je arpl hlt jbe inc aam cmp jbe xchg push jp sbb dec add mov xor test cmc rol lock mov pusha daa sarb std icebp test rcl mov jb jmp mov rorl arpl adc movsb push ds mov mov decl jmp insb mov xor int stos mov rcrb ret mov mov movsb lds loope cmp aam sti sbb pop adc lods in lret clc jne cmp xchg pop (bad) adc and xchg mov inc pop push push lahf rcrb mov int and add push cmovg aam outsb icebp pop jb aaa je jg cmc std mov scas and and gs add shlb sub xor lcall movsl mov mov and add sub (bad) icebp daa pop loop fldl mov insb lea mov in inc mov test mov xchg (bad) jbe or dec fbld mov divb xor sub (bad) in fisubl (bad) lods jge or push pop xchg pop sub scas push mov js fisubl mov push test jle xor stos sar repnz jns xchg lcall into aad xor test bound mov add ds adcl (bad) rclb push ds adc or nop loopne inc jae stos inc in jp gs push lds add movsb and in imul sub insb stos pop fs sarb pop aam (bad) outsb in hlt mov rcrb sbb push mov push js and mov test jbe outsb mov add add push cmpsl popf add popa cmp mov fsubrl pop (bad) out sbb insw repz fdivl push jbe arpl inc sub outsb mov push add mov sbb pop mov jmp jae lret and cmp pop leave imul es adc mov mov push outsl test dec push add push mov cld lret scas pop pop imul cmpsl lea je aad bound mov or inc push push sub repz mov sbb das std sbb ja push mov fstpt and and add pop nopl xlat fbld outsl lahf xchg mov mov je bound or jne mov sub xlat inc sar or jnp xchg pop out add add xchg push scas gs pop fidiv mov icebp mov loope push pop bound jl push js ret add push pop into cmp lret repnz adc insb or cmp cmp sahf sbb jns leave mov xchg mov (bad) cmpsb popa imul mov jmp jp dec xchg xor cltd xchg lea xlat fxtract lcall cmp arpl sbb mov mov lods sbb lret pop dec mov jecxz sbb mov dec sti adc ret hlt mov icebp xchg dec adc iret inc add repz sub pop shl pop sbb mov loope ljmp data16 adc iret xchg mov cmp adcl cld jl push mov inc mov dec stc sub stos loop roll inc adc add mov outsb xchg stos sub rcll js add mov aas leave iret inc insl dec aad ret mov and dec sub iret fisubrl ss mov sub hlt or mov jne jp push loopne and push and xchg add mov inc jg ret sar ret mov daa jae mov inc sbb push add push inc jmp add jbe push jae add mov pop mov mov ficoml sbb dec clc test jb in jmp sub mov dec out (bad) cld jmp mov mov xor aas sbb nop aaa cmp das add push in iret repz out cli cmp pop int (bad) mov lahf dec lret nop sbb add out xor xor std into pop jnp ss jae test fist lods inc jle xor xor enter iret mov dec xchg je int and mov mov sbb dec rol jp inc (bad) xchg sbb in js sti sti adcl out mov std pop lods add pop jp bound movsb pop incl insl jb inc inc add cmp cmp inc push inc pushf inc (bad) and cmp leave imul insb call pop (bad) jp sbb (bad) fmul test jns or testl lret inc xor dec inc mov lock lds sbb fmuls (bad) pop jmp mov sub adc pop push movsl lods addr16 push fsubrs gs repnz sbb add cltd cwtl leave in js pusha jecxz push leave xor inc repz jmp bound rorl or jbe fldt jnp pop in xchg mov push or sbbb jl sbb std cld adc sbbb cwtl pop jb daa pushf popf sub cmp mov cmp test and and xchg and arpl jmp testb xor imul iret arpl mov push xchg mov dec jmp and jge xchg cmpsl in bound and (bad) test push sbb outsl push inc stos (bad) pushf (bad) sub jp and cmc jb xor andl jae fcoml pop push call jbe push cmp (bad) pop xchg mov adcb xchg ja xor or (bad) mov fsubrl lea movsl and je add jl int3 inc (bad) inc push cmpsb pop js js inc aam test xchg and push mov and testl arpl pop (bad) inc xchg xchg pop xlat mov in fwait and pop dec daa xor xchg lock xor cmp lods int3 loope clc popf xchg inc ret iret es cmp (bad) (bad) jbe or dec (bad) push mov dec daa pop hlt loop stos xchg cmp jae sub aaa aas and xlat ljmp fimull pop pop sub mov (bad) sub test icebp mov mov xor jmp jno push and int repz cmp dec cmp sbb inc fnop add push push lock shlb or push sbb pushf outsb jns mov fwait arpl repnz dec xchg call dec and push test add dec xchg lcall stos pop inc stos rcl fs cmp pop loop (bad) pop sub adc push les inc mov xchg mov dec popa xchg mov into inc clc into (bad) dec mov lret mov mov pop inc lret mov inc jl jmp xor jb daa xor push xor lret sbb icebp cmp xchg cmp inc clc push das sub out inc data16 je dec clc mov ss adc out iret cld lea mov sti negb testl sahf jp and jae dec clc dec and xchg mov and mov pop inc jmp dec cmpl dec cs xor add pushf xchg fcoml ds mov stos push xchg or mov idiv cwtl lods xchg fisubl mov lods (bad) in mov mov sub out push xchg rcrb popa adc subl das push scas xchg mov push xchg mov out cmp incl mov lret or es mov or or mov in test cmpb push sarb adc mov hlt in (bad) xchg sub rcrb inc mov sub inc arpl lret pop dec jecxz inc test adc loope cs cli xchg pusha sahf push or inc adc mov in sahf sbb cmp sub enter sbb rep dec subl outsb mov (bad) fisubr rorl mov fmuls xchg xchg and pop mov jo jl jo push mov lret notb fiadd mov out fistpl xchg (bad) scas and adc (bad) notb (bad) pop jne (bad) pushl xchg ror mov pop movsb mov xor pop (bad) mov rcr cmp adc fmull inc xchg lea fisub sub inc mov cmp ss sbb or dec mov movsl inc out (bad) mov mov dec push jno mov notb in test adc test xchg lret pushf in and fwait dec fsubrs mov push mov (bad) mov mov mov adc pop (bad) mov nop ret movsl and scas mov mov fwait loop shr and mov cmp mov inc or inc jnp fldl or fsubrs inc popa push clc aam push mov mov pop add mov and cmp add ljmp dec nop or and in cmp adc in xchg inc mov imulb (bad) lods sbb sbb (bad) mov lds mov mov pop or (bad) (bad) rolb cmp jecxz pop xchg lret xchg bound or stos fs ret pusha push lods inc lods pop movsl pop mov icebp xor (bad) negb roll hlt sbb push inc and inc mov inc out jne mov divb inc ja fdivr (bad) cli mov xchg xchg jg dec sbb mov mov test xchg mov adc or jl into sti and sub rcrl imul cmpsb outsl mov out sbb mov pop ret les (bad) push jg out rolb ljmp dec or dec add add int cld das mov test popf push cmp xchg in imull and xlat (bad) shlb cwtl insb dec and cmpsl inc andb in fidiv imul imul (bad) xchg cmc or mov popf inc or push cli mov rcrb jecxz aaa std jg xchg and xchg push sbb mov add insb pusha lea jecxz push xor das lahf ja fwait bound test cmp xchg mov aad in in cmp dec inc loope jp and (bad) icebp pop and leave lcall mov dec push sub stos fucomip rorb and cmp jg outsl mov xchg push xor adc sub scas mov add sbb jbe or inc or xchg test lods test jnp mov into arpl js add stos jb fs mov inc into add les jle mov jl movsl cmp sti mov sarl rcll xchg stos sub jle jmp or adc movsb in xchg mov ds xchg push mov sbbb mov lds mov dec movsb outsb lea lret mov pop xchg cld fwait arpl movsb aas and ficompl paddsw fimull test push xchg jl mov jmp lret iret inc in insb adc sahf jo xchg leave (bad) mov xor or push inc or (bad) push push call sub stos pop xchg cmp mov jnp loopne scas adc imul adc and (bad) mov sbb cltd jno sub mov aad sbb adc aam push sub das scas mov dec mov inc sub imul inc dec cmp mov sub lret pop rclb and jns inc pop or mov shrb and mov push test inc lods stos out add cmpsl pop int into sbb in jae or mov jne ljmp sbb cmp or sbb das mov adcb xchg pop or push add insb es dec xor ja pop push popa gs in cld dec stos xchg arpl dec xchg orl lret mov scas inc inc les mov icebp pop xchg int3 ja lds in or test jge and pop xor cmp and out push cmp xchg pop inc push fistpl pusha xor pop test aaa call and add sarl iret mov mov cli jno jns jno mov sbb loop pop lds outsb test jnp cmp xchg mov sbb sbb in sbb inc sub pop roll push mov iret call ficoml mov fistpll cmp ja or push push sbb lret jp fistpll ret inc xchg cmpsb inc hlt xchg daa out les push inc dec testb mov iret adc jecxz cwtl or jmp sub xor mov mov hlt imul cmc es les std mov insb mov lock pop mov sbb or mov pop ret mov cmpsb push andb mov int mov xchg sub (bad) pop das daa out cld hlt mov out jle sbb dec roll pmaxub out jnp mov icebp mov adc lcall mov or add std sub dec loope mov je push cs int mov out and or adc nop leave push (bad) sub push mov sub icebp cmp xor hlt test negb or mov xor aad mov jne add push xor (bad) dec (bad) out lcall inc jmp outsb std shll ret jne lods shlb stos clc ljmp sbb jo leave xchg xor movsl mov cmp mov aam mov pop shr sub mov insb mov jno into pop and mov sub in jb push cmp inc in popa jecxz out and cmp pop dec out and dec pop lods add cmpsb cld fs cmpsl jmp movsl mov (bad) sbb push mov lea push cs idiv daa aad cwtl insl add lahf jne and fwait sbb stos and push aas xor or aad jns out bsr cmpsb stc out scas neg (bad) or fbld ljmp cwtl repnz or clc loope xchg and add cmpsl push popf pop ss sbb insb jnp inc mov mov (bad) xchg aam test mov jae lret jecxz mov lea dec mov (bad) jno adc push sbb iret aad sarl fs sbb cmp dec mov fsubrs loope mov xor jg jne leave (bad) xor inc loopne imul mov and dec outsb sub jg (bad) xchg sldt add add add mov lret mov je or mov pushf sbb aad xor std lret xchg pop mov sbb cmp ja jle dec xchg bound in scas jecxz and sub fildl push xor cwtl ret icebp mov mov sti aad loope and pop pop sub ficoml aas in cmp clc mov xor xchg fidivr daa lods xor push movsb in xchg loope mov push (bad) adc xchg sub roll inc ret mov lret fsts cmp xchg cwtl aas les fldl2e fwait out or jo dec xchg pmulhw xor mov cli xchg mov enter xor sub pop bound dec inc sbb xchg xchg popf inc fwait push jg jns cwtl pop mov loopne pop add incl mov rcrl (bad) (bad) adc iret into fdivs sbb mov jns adc cmc mov dec xor mov movsb fnsave inc (bad) lret test or push mov rol das inc sub lock insl pop mov mov popf dec out mov xchg mov inc or cmp cmp out lds int3 cmp dec sbb mov inc xchg bound in or hlt out xchg jle pop (bad) dec xchg inc insb mov jb subl loope sub jg push test das sbb jno or pushf lcall xor push mov xor lods adc and int lods (bad) jae inc mov and sbb (bad) icebp inc pop aas xchg inc add xchg pop xor mov bsr xchg and mov mov cs clc inc jb cmp sub lds pop test add out push popa jl push cltd push js call mov mov sahf enter stc popf call aam adc aad stos dec xor mov je dec fidivl add push imul (bad) jge test jecxz imul lock inc lret movsl pusha mov jg and add mov daa jecxz or icebp jg mov push popf popf sbb dec fs ja sysenter inc push repnz mov adc dec pushf aaa inc enter sar dec mov pop scas push sbb js or mov stc jl and adc xchg jmp aaa push mov into cs rcll pop mov cmpsl inc add test movsb jb xchg shll inc data16 dec leave mov adc pop enter dec sbb dec insl das mov repz sbb add sub fwait mov pop mov cmpsb ljmp fisub test js pop outsl mov (bad) arpl jo jb mov xchg pop scas clc jno jo nop scas daa clc stc cmp outsl xlat ja jo jl repnz popa add mov xchg inc lea jle push adcb adc (bad) xchg cmp mov aam arpl les es ror pop jl clc add lods xor mov sahf dec insb scas scas ret icebp jge xor xchg les jne daa mov ljmp dec pop xchg ljmp sub test addr16 in les iret sub adc add add js mov pop outsl inc mov xor add and jnp mov and cmp mov in add push (bad) cltd ret mov inc cmp int and jle ljmp adc outsl insl dec adc leave ss aaa mov pop fwait cwtl scas (bad) cwtl cmp cmp inc ror sbb xchg mov push cmp jno mov xchg leave fsubrs jno xor loopne inc mov adc pop test fdivl leave cmpsl test popa dec repz unpckhps jmp mov jnp xor out test sbb pop ret dec pop dec jns xor cltd outsb leave test ret popa ja and jp lea jge dec (bad) xchg andl mov outsl mov jbe push mov sbb pop das insl and pop sti jo adc jo jg mov daa les sub insl cmpsl push xor loop aam outsl std dec inc (bad) xor jle add and adc dec and push or lods and aaa xor (bad) jmp dec fnstcw xchg ds cs jnp cmp je fidivl mov cmpsl test cmpsl mov ret outsl mov or inc lahf test mov xor test ficom jnp hlt arpl lods rol pop lea dec pop iret and popf std in xchg les pop mov sahf adc ljmp sbb daa (bad) xor mov and cmpsl dec test test sti pop add cs jge mov imul add cld bound out sub int3 inc sti cltd jmp sti mov push pusha sti test pop jecxz jno sbb stc inc cmp xlat xor cs or mov fistpll arpl xor add lcall dec out cld adc popf mov or popl lcall jmp jbe mov es lods int je mov iret cmp ljmp mov xchg fisttpll jo ret xor movsb test push loop nop add shr xchg inc scas push stos add leave lcall std popf out sarb inc dec cmp adc sti xor daa sti loopne mov mov inc mov testb cmp enter pop les repz and push stos stos inc sbb jmp cmc jg scas es out sti mov add leave mov lods cmp loop out inc dec clc (bad) (bad) mov jp jecxz mov dec test mov out and in ja lahf das dec adc xchg cmp sub push push nop (bad) jmp pop xlat ljmp sbb lea or pushf cmpl push outsl mov adc iret mov adc aad movsl inc adc ja test mov push add aas popf sbb sbb pushf dec insl xchg dec (bad) sbb repz jmp sub ret jno xchg out sub out push xchg cmp xlat jne pop lret je adc out add xchg add ficompl aad pusha adc xchg cmpsl into cmp enter movl adc jnp out mov cs jo icebp pop add inc in inc sub dec das andb pop call test inc jge sbb jmp jnp jnp cmpsl (bad) iret push ss pop xor lock jmp adc pusha fcmovnbe pop rcl sub adc jo mov jge cli fcmovne or test xor dec adc push sub fadds mov or (bad) sub jbe inc sti xor scas jnp jecxz jne,pn pop inc sub lret popf xchg je into adcl in icebp int3 fisttp stc das nop dec popa fisubl push mov pop imul adc ja xchg pop mov arpl js jmp add sbb enter pop (bad) xorb and rcl dec xchg out scas and outsl lods test pusha nopl sub xor xchg jl cmpl xor or xlat xchg ds xor in test imul je mov push adc in jp incl enter repz mov jmp push ja sbb add dec frstor and cld sub popf push add pmulhuw mov push mov stos add arpl arpl (bad) and inc ficom outsb sub sbbl ret xchg sub inc or fildll sbb sbb adc out cmpsb stc leave pop cwtl scas xlat jecxz jb and lret sbb test lds add and call sub adc xor mov jg nop xor cmp and xor hlt xor xchg out cs add or mov xor xchg out fistp out sbb adc cmp bound add adc lods jmp loope cltd lret pop pop jnp push shlb pop iret repz mov jne cli movsl pop popf push sbb push popf enter push mov inc xchg push pop (bad) iret dec mov mov aam cltd add sarb mov movsl and je pop shrb fs clc mov in xchg (bad) stos and adc pop aam mov je dec scas sub sbb ret out jp pop inc inc or xchg (bad) loope cmp jns dec imul and jne mov add scas icebp movsl dec incl int (bad) rorb xchg movsb icebp inc add in sbb fst sub dec or add or imul mov add adcl scas test iret pusha sbb adc jg push sub imull adc xchg cmp mov mov pop pop loop,pn call mov loop sbb inc js test cmpsl pop mov add movb (bad) (bad) in ljmp xchg cmpl xor insl sub (bad) insl fcmovnbe movsb test inc ja imul adc xchg into ds cmp xchg stc sub cmpsb sbb cmp mov xchg insb pushf mov lods mov (bad) push fbld xchg pop iret jae cwtl jne imul loop xlat out es lea into jo cmpsl jns scas mov enter sti push xor adc dec ds xor inc mov aam jl dec mov jge push aam mov add add add dec xor xor lods cli aas test jmp pop mov mov jmp xchg push jo aad shrl mov fldl pop cld mov insl into jnp and pop inc or jnp out xor push adc inc jne call (bad) into xchg push imul xchg pushf xchg inc shrl rclb insb push cmp call xchg jmp fdivrs inc inc mov (bad) imul adc imulb lds dec nop hlt jecxz leave xchg push mov data16 lock cmp das loopne sbb mov xchg push mov out stc (bad) enter pop mov sbb in pop js (bad) and orb xchg mov das cmp jge pop jg testb jo es dec aaa addl pusha imul lds dec hlt mov sub lahf jne cmc loopne add push jecxz mov jge mov xchg push and ds pop fnsave (bad) repnz sub mov movd loop jmp mov je pop gs and dec pop in repnz mov push dec ljmp imul sahf pop outsb icebp jecxz negb add addr16 sti gs iret mov cs and sub and sub xchg or addr16 test xor loope outsb push inc fidivrl sbb movsb jp js rcrl fs dec push loope xchg pop cwtl inc dec adc xchg imul loopne push cltd insl loope frstor dec les lods pop and xchg and cmpsb iret dec stos add adc or sahf movsl xchg dec pop adc bound pop in js je (bad) das xchg pop add sbb add add cmp pminsw cmpsb stos shll fmuls je add and mov mov je mov icebp lcall add xchg into dec pusha ret int3 lahf gs xor pop push fisubrl mov loop lahf lret divb sbb jecxz enter mov xchg dec (bad) in inc int xor mov xor movsb jnp jne and sbb call jg jecxz dec (bad) fdivrp das and xchg and daa jae or test xlat clc subl aad mov jnp push push or xlat or insb fdivrs icebp insb jns (bad) sub jae push imull pusha push or decb stos dec or dec push xchg mov mov fwait loop (bad) sbb xchg mov repnz push mov pop pop jl imul jae aas fcom lret inc stc add pop push pushf push cld sbb pop dec mov jne sbb push cmp mov xor loop stos fistp or mov les pop inc icebp push divl scas mov movsl outsb pop or mov nop pmulhuw mov mov sub xor push sbb adc mov mov push and and andb ljmp jge mov outsl (bad) fcompl cmp cli js fmuls add mov (bad) inc iret add adc dec rcrb add pushf (bad) sbb push int inc jo (bad) out (bad) ficompl daa push into jmp pop jnp dec xchg cmp jne pop inc js orl xchg pop dec lcall xchg movsb inc lods cli ficoml xchg cmp bound add ret inc xor arpl cmp pop mov xchg cmp icebp sbb (bad) fs jge mov or pop faddl xor rcr lock push rol and fcomps or in push push das (bad) mov cmp repnz in push adc jle lret into mov and jge sub dec or pop pop mov out add cmp dec jo mov push gs lret and pop imul xor flds cmpsb (bad) lcall adc out insb jo mov mov outsl lcall adc lret inc cmp sbbl cltd leave sub mov cmovne mov lcall push xchg mov enter or mov out cmp (bad) enter or stos jnp cmp or mov mov test jmp roll lcall fwait xor push in xchg pop adc aam mov imul adc mov mov mov pop jnp mov movsl adc icebp or rorb mov sti shrb mov cmpsl std insb mov and jns pop aas hlt fdivs xor fsubs sub hlt xor mov pop fucomip nop add cmc adc lret sbb inc loope pusha test in loope cmpsl adc (bad) mov fwait dec ljmp cs push dec ss adc hlt pop adc ljmp fisttpl int3 or jns xor xchg lret and jg cwtl fwait sub cmpsl sub mov in pop es sbb sbb and cmp pop sbb enter out insl lds mov add add adc and aad imul push inc or add add push xor xlat jp push sub aam fs out mov cmp fidivrl jle aam sbb outsl mov test adc inc jmp push push sahf inc jnp jg test and dec dec push fstpl pushf aad push rol test nop popf rcll push jg inc (bad) sub repnz and out (bad) jbe rcrb dec out cmp pusha mov das inc push add pop add or mov clc scas lods jbe push pop (bad) mov pop add push movb into adc pop push loopne and sub mov out pushf sbb or dec push icebp (bad) sbb jae jbe div clc and dec sub mov and add mov cmpsb xchg pop adc dec cmp cmp pop sub cmpsl out or dec xchg dec xor cwtl test test test dec cmp insl inc out out inc inc push mov stos setne dec sbb and xchg xchg (bad) je lods push cmpsl ja fistpl pop (bad) imulb aas inc das mov push mov ds lods cmpsb enter idivl dec outsl and cmp aas inc nop or sbb xor test lret adc cmpb clc cwtl adc xor inc sbb adc fcompl pushf jmp xor adc mov out iret mulb mov sub pop mov jno fisttpl aad dec pop mull sub push lahf cltd es pop mov movsb rdpmc pop mov sarb or cltd repz out mov cwtl aad scas (bad) nop cld xor data16 in stos sub mov inc add mov stos mov popf rolb and xchg pop jl popf mov or in les test rorl pop iret pop nop cmpsw jb pop jle insb imull ljmp dec outsl nop pop sub (bad) cmc test pop stc push jo je loope adc lock cmpsb bound and fcomi add pushf cwtl jne or sub icebp cmp pop mov xlat test shl mov sbb in xchg cmp xor or (bad) fdiv jmp loop mov or cs daa dec or iret add pop andl aas xor sbb enter daa push sbbb jne xchg popf and xor pop aad nop xor outsb xchg movsl stos inc jne mov pop fdivrp cwtl call popf jo hlt loopne xchg pop ljmp jl push cmp rcrb and addr16 jne mov mov insl je mov jmp jne add jp push imul enter mov jne clc test push cmpsl jns dec pop mov ds cmp and cmp (bad) push xor ja jb test cltd cmpsl ds stc loop mov jp scas mov jle (bad) mov jbe,pn sbb clc xor shll shl lods xchg imul xor sbb mov jmp jns mov add and pop jge cmp lds test push fcmovbe dec ret (bad) mov popf jge sbb (bad) dec pop add lret jmp add test jl flds (bad) jmp leave imul mov fstpl ret mov sbb xchg clc in jo std stc add adc jmp jb push mov lcall or (bad) (bad) mov push and xor test sub mov mov aam mov sbb cmp mov mov aas xchg mov adc ljmp xchg mov scas stos clc dec push inc mov push mov cmp leave jecxz jp adc dec jp xlat sub inc orb dec test cmpsb in call adc insb and dec lahf mov mov out std mov insb jno xchg fimull fs pop lds add mov mov push jae and add roll insl xchg aam lods or idivl xchg sub mov ljmp xchg xchg adc pop (bad) push mov pop scas jbe mul fcomps cmpsl sbb push dec mov xchg (bad) add sti rorl popf mov fimull ja mov mov jb add scas (bad) push or out cmp sbb and call int3 insl hlt jp mov in adc fisttp (bad) push (bad) mov xor add dec data16 je pop mov mov sbb int jo outsl out data16 inc lds mov push sbb pop xchg xor dec sub imul imul xchg mov les xor cmp out sbb arpl push loop or scas and dec jmp sldt add add jg xchg enter fcompl or out mov jne mov mov push inc out mov mov fwait cmp add (bad) pop mov push pop dec pop jge xor inc cmp inc subl cwtl jno or lods fs inc cwtl aaa cmp inc push (bad) mov andl jmp lcall dec mov cld imul icebp fsubs rolb sub cmp add rcrl clc push adc dec mov int3 mov xchg call (bad) jne (bad) sub or (bad) pushf jbe or mov push rcll pop and mov add les xorl les in add clc les push jbe add or xchg sbb and add fadds push cwtl mov cmp jbe lcall daa sahf sub push mov xchg mov out and xchg xor loope add add or adc mov jle repnz inc sbb popa inc jl test mov mov sbb jg mov push lods cmc imul inc and mov add xchg xchg fidivrl lret dec mov mov fidivr lods mov xchg add sub clc push xchg inc mov dec xchg in push (bad) push in addr16 ret dec (bad) daa adc sbb ss into nop sub outsl ljmp cwtl cmp int sbb jle fwait mov pushf aad inc inc xor adc daa add mov cmp clc push adc push add pop or jmp jnp or inc mov mov cmp lret adc fidivr push cs xor pop xchg pop or jae into cmpsb adc hlt pop movsl sbb sbb sbbl lods mov mov or push rcll cmpsb imul add insb cli jnp movsb xor sarb mov xchg imul fldcw fldt out xor pop shll jb xchg in shlb sti or nop jge imulb dec arpl fisubl icebp pop jle in xchg or or (bad) and mov dec aaa aam lret add std mov xchg pop das push int3 mov je stos or out pusha icebp xor cmp frstor inc (bad) out mov daa push and sbb pop cmpb sub add push sub xor xor sbb ja mov sti dec inc lcall icebp out jns dec sub add pop jns cmp push stos and jmp push add cltd and mov push and pop into sbb pop xchg cmp sbb dec or cmp (bad) or sti inc sub data16 mov or jp mov bound adc xor shll ljmp bound mov cmp cmpsl das and rorl xchg inc push pop es inc xor jbe scas mov mov popa fcmove pop dec sahf cmc addl aas cmp mov fwait pop mov xor mov loopne xchg jge daa dec loopne test sub adc mov shrb jcxz,pt stos ds mov dec xorb sarb mov fidiv sub sti lds jns lcall ficomp cld xchg (bad) cmp (bad) loop (bad) adc sarl insb dec sbb lods mov ja imul ret cmpl xchg imul mov hlt xchg or sub and fdivrs icebp bound test xchg sbb shrb pop mov aas popf mov jg or jl in ret and pop and dec arpl fninit gs jno sub dec int3 mov insl lea stos fsubrs or inc cltd and fstps dec or mov fdivl mov pop push mov pushf jmp adc sub leave out mov cmpl add push sbb jecxz aas jb das fisttp xchg xor xorl loope push xchg bnd fidivr pushf jge std stos movb pop aaa sbb rcll jnp in aas idivl mov je push jp js mov sub jbe int3 mov xor stos decb fild (bad) pop dec mov xor incl fdivrs pop flds mov movl aam inc xchg dec fcomps xor mov int xchg add inc loopne dec int push (bad) outsb sbb mov and divl pop iret and je ret sub shrl loop jp mov into sub dec popa push pop cltd in jp call push cwtl pop cmp add xchg mov es inc add lcall mov pop in ret cld hlt in adc loopw call pop xor mov push in shrb dec xor jp (bad) or dec ss call call cmp fidiv in addb out sbb popa add icebp in mov dec mov xchg pop lea push fwait sub mov rcrb aad mov push sbb enter mov add out mov leave xor xor mov pop add sub push fistpl lcallw mov cmovbe mov mov aas push cli mov aad mov out xlat and daa push mov repz test jbe pop xchg outsl or outsl scas rcrb hlt ss (bad) jo push repz mov add pop mov jae test or into xchg pop inc inc adc je adc aad pop mov rcl xchg stos out inc mov push inc bound sub pop out shr stos stos inc push pop pusha adc pop mov in movsl sarl sub arpl cmp xchg (bad) pop xchg pop cwtl cmpsl xchg mov gs xor movsb mov imul xchg pop or popa sub sbb or pushf mov push or sbb mov in adc jnp inc pop xor in aad jae adc enter gs test inc inc dec adc inc mov adc insb int outsb jae cmp sub mov mov mov inc and ss inc (bad) mov mov jnp fcoml or and or add add add popa mov xchg adc adc call and cmp push xor and loope test mov push dec adc mov ret lret dec neg adc pop mov jbe fstl outsb pop jle push mov pop sub jae imul loop leave mov jp pop lcall cmp push push xor or imul add xchg inc scas mov mov pop ret sbb aad sub (bad) push lahf ret pop dec sbb and mov add or jne stos mov mov adc iret clc mov movsb data16 mov sbb sub pop stos xor or (bad) mov mov lcall popf (bad) js push mov aam pop jp,pn adc out xchg pop pop add add push std aas xor mov add cmp add int mov jb dec jns pushl (bad) dec and js loop hlt lahf icebp or gs push lret std push sub mov lds (bad) push xor call in pop loopne or popa mov sub mov stos push (bad) (bad) js iret sbb push and sbb add cmpsb xlat xchg lods mov addl push xorb or pop hlt pop inc iret jbe fdivrl inc scas ljmp test (bad) jecxz push sub jno imul xchg insb push pusha cmpsl dec mov sub pop adc call lret pop sti in in pop sbb clc mov inc pop loopne mov xchg ja push pushf jae dec dec je es aad inc pusha pop dec cmpsl lods push lds lds stos jo dec fyl2xp1 mov sub mov ds in sahf and lods stc or lahf mov (bad) mov (bad) cmp dec push cwtl loope xor and (bad) mov iret jl (bad) cmc sti and add js repz mov ret (bad) push pop imull jbe cmpsl mov jle sub jae cltd mov mov mov inc mov push loop test (bad) (bad) cs mov adc mov mov mov lods iret pop test in lcall fwait jo js stos inc mov dec push in dec dec cmpsb fistpll pop mov test insb add cmc xchg fisubrl cmp int cs imul xchg pusha test aaa in dec shlb mov (bad) fisttpll mov or jb and movsb mov add add jo inc and shlb fcmovnbe insl fst jne and rorl jmp inc dec xchg loope aas xchg add inc sub stos test in gs out adc aaa add insl icebp and out pop cmp add adc fnop dec movsl and xor jle jno dec pop add in mov mov jbe lods jmp into xlat push mov pop in mov sahf rcl mov pop sarl push pusha adc rolb cmpsb fidiv enter ljmp sub xor mov lock mov loope xchg aas xchg in inc (bad) daa xor sbb in adc inc mov ret adc roll xchg cmp ret (bad) sub mov pushl adc insb (bad) mov xchg cmp fiaddl fs sbb jecxz out inc xchg mul sbb outsl stc sahf lds sub xor pop xchg fidiv pop xchg sub add ret loope dec lea dec mov aam lret push add mov add pop test mov arpl jbe notl pop add jmp pushf xchg add fs adc xor push jns mov dec (bad) xchg imul or sub aaa and xorb (bad) mov and ss mov jmp jecxz push sub xchg adc dec jp xchg inc add repnz pop lcall and test inc lds and int3 (bad) xor pop mov xchg and xlat aad mov ret (bad) mov and pop sub add cmpsl and sbb inc cmc sbb outsl vcomiss mov push pop xor pop aaa mov adc xlat or aad leave pop cld or xlat jbe mov test mov xchg sahf and decl xchg mov aam or xor movl pop nop hlt (bad) mov (bad) dec jb inc pop loope pop into dec (bad) mov popa je dec push sbb cmc and dec mov mov mov bound pop lds cmp mov xorl mov adc dec decl mov vpsubsw es sub xchg mov addb add and jge and scas mov lcall (bad) pop mov outsb xlat add mov mov leave fiaddl loopne outsb adc out mov (bad) xchg mov xor lds in ret jae data16 xor sbb mov sub pop (bad) loopne imul add sbb pushf fldenv jns and adc or mov shrb pop push pop inc out add (bad) aas xchg imul int xor xor push fisttp push pusha and inc rcrb scas sahf mov jo mov stos mov hlt int push push sub out (bad) loopne scas lods imul js in (bad) sbb out mov sahf xor lcall mov mov mov dec ljmp inc fistp or and pushw sbb aas (bad) cld or cmp loope jno pop pop lea or xchg fnsave repz and add pop add fstpt and fstpt inc (bad) xor adc (bad) adc cmp add mov rcrb icebp lret sahf push adc fcmove rcl mov xchg aam sahf inc pop mov (bad) sti out sbb xchg inc mov std mov imul or or out push fiadd cwtl jae inc cmp lahf mov hlt insb in inc inc add fdivrp cs sbb jo cmp ret inc or cmp xor sbb jns jne orl in mov repnz cmpsl jae fldt negl hlt in loope je adc jb lret popa sti add iret or daa mov (bad) push push xor xchg lret sbb cmpsb es out jbe cmp cwtl jbe mov sub enter add fistpll repnz sbb fs jge movsb mov add das mov into inc dec test jbe dec cmp push lret fs push mov je sub dec pop lods movsl pop data16 jae and xchg dec icebp jb lret popf mov push pop adc das enter sbb push (bad) jb stos inc test adc add cmp jl lret rcrb mov sbb ds jns imul (bad) dec jecxz shrb mov lahf and mov arpl dec outsb push (bad) jle fidivrl mov loop (bad) ds data16 fs stos adc ret scas out jno sub cmc pop pop out scas add sbb xorb xor mov stos mov sub addb idivl push and jb push fcomps bound cmpsl sti push into pop int sbb add fucomi repz xchg (bad) push (bad) rclb mov ljmp insb (bad) test and push lret dec cmpsl fsubrs fwait inc movsb adc cmp jle dec xor xchg cwtl popa xchg dec arpl push adc mov or out and mov popa push jl dec mov dec pusha push dec icebp aas jb cmc cmp push xchg pop sbb adc (bad) mov fstpt sti add and jecxz push cmp movsb cmpsl xchg jnp shrb decl fdivrl and (bad) in adc (bad) in je add mov cs ljmp sahf in mov dec (bad) (bad) je lods insb sub int push lret leave lret cmp mov movsl cmp insb je lahf jg mov jmp and imull add add je movsl jne or rolb psubb xchg neg into test scas add imul inc sbb mov cmpsl pushf add dec xor xor dec jne mov sub pop (bad) sub pop aad int clc mov cmp xchg faddp insb sbb sbb (bad) lods fcomps outsl push fwait add orb inc adc mov nop jo loop subl rol mov dec dec gs xor ljmp jle pop nop cmpsb and inc mov sahf push nop imul in int3 (bad) fild or xor stos clc into into pop sbb daa jl add shll dec add push add and inc call (bad) bound and or push fsts loop inc das mov cmpsb mov leave pop test mov and add adc jle (bad) test mov nop adc jmp and xor jp ret pop out ret stos ficom dec test repz push lea cmpsb test and xor faddl lcall in icebp imul test xchg jmp cltd sbb cs lcall xlat mov mov push in push (bad) dec xchg cwtl ss bound call or fisub insl jae fistpll pop call jo push mov js mov mov xchg jle mov mov cld dec movsb lods cmp jbe repz aad out mov lahf jle cmc clc cmp mov mov pop sub pop stc pushl cmc std xchg mov and adc dec add add add test mov inc jb xchg jmp les insb js shrb pushf decb adc repnz mov fcompl fldz sbb adc xchg cmpl addl in test sub cmp subb jle in mov dec lds arpl mov int3 in das stc jmp aam sub xor xchg push xor adc jmp jns clc pop insl lret pop rcll mov dec pop jbe mov xor push (bad) push adc int sbb pop pop jns jp scas out jo repz mov add xchg outsb das das jg sarb jb or ljmp test mov mov shrl and adc jno pop lds je cmp cli js xor out cltd inc hlt pusha iret ljmp add ret (bad) pop inc xchg mov popf inc in xchg imul sbb sarb inc cmp test mov pop nop cmp adc or addl in jae jge mov pop fs inc mov data16 push (bad) xor mov add popf or pushf jns (bad) and (bad) decl dec inc lcall pop mov stos xchg out xchg dec xchg push pop scas inc cmp and out or jb rorl (bad) cmp mov pop xor xor mov jg push ljmp out push gs inc sub sub lea fiadd inc adc xchg push in push out push ds insl roll mov ds (bad) jl jl mov or pop lcall push (bad) mov xchg mov add stos dec outsb scas mov fcom out push and inc lock jb lock fcmovnbe pop je xor jo push jmp out fwait jg repz mov dec add jno roll jns,pn or ljmp popa addr16 clc (bad) mov outsb idiv mov cmp pushf popa sub inc and lcall push pop inc and (bad) adc enter push sbb inc push cmp out push xchg adc jp movsb popf xor inc jno mov les sbb je cmp imul mov aaa dec setle ja iret imul add mov aaa xchg push insl lods hlt and lret jle fsubrs mov push lds inc mov pop movsl sbb dec cld adc mov lahf mov sbb mov push push aad mov (bad) sbb das jle adc pop jb adc mov xor rolb jecxz movsb add imul sti mov cmc adc and mov jne fild mov and scas into sbbl (bad) out pop int repz adc (bad) in xor jmp pop sbb ljmp das cmp movq ljmp into pop aad test (bad) mov or ss and xchg mov pop cltd jle or xchg paddb andl (bad) ljmp or push popa bound (bad) jno lcall xor push (bad) aaa jp dec jbe js pop scas (bad) xchg leave das jne aaa fistpll jmp jp fcompp mov arpl sub add xchg cli sbb ds scas jbe daa pop sbb fbld jns aad xchg push mov cld daa sbb pop jno popf in popa mov add xor repz (bad) imul and pop push (bad) (bad) aas and mov mov repnz test fbld out push push lret sbb (bad) mov mov test dec pop cli test sub add cmp (bad) movsb mov add je push xor dec lock lods aam cld outsb add scas adc push and hlt stos cwtl ljmp int push push repnz and and jo sub aam push mov (bad) push lea push adc (bad) mov or add cli lcall sub imul dec mov stos lock jge pop or (bad) aam mov sub and insl jno arpl mov inc les lret aas push mov sub cmp sbb outsb cmp mov lret mov add add out xchg jnp cmp inc mov leave mov icebp repnz pop jp jle mov fdivl xchg shlb adc (bad) adc leave in and (bad) xchg mov icebp jg lahf mov sar pop push xchg sbb cmp sbb cmpl fdivrp sti pop test adc idivl jp pop in lcall pop rcl (bad) dec pop cmpl push jns andl (bad) xor jo rclb sbb xor inc out adc add push jp pop jmp xchg cltd shrl loopne sbb add mov out jbe aam and jns hlt es lret lock inc lret (bad) pop or jp mov mov add add add faddp repz mulb sbb and pop cmpsb jmp lods xor test jno hlt fnstcw lret daa out and jb xchg outsl aaa push mov dec out ja gs ss add out mov add je aad js inc inc fcomps dec inc jge cli (bad) xchg jle mov xor xor dec rcl dec in or xor or jns repz (bad) sbb ficompl cmp fcmovnu loope movsl (bad) xor inc enter cmpsl sbb push or push les cmpsb rcll push movsl sahf push xchg insl leave add xor pop inc inc mov push jb or repnz push out enter lods lock adc xor sbb lret adc mov cld cs cmp stos daa shrb int bound sbb pop popa push mov lods test and jne xchg sarl add inc add das repnz aas xchg jbe or loope fnstenv gs inc and leave sbb pop daa mov push xor (bad) mov jmp dec lret movsl das cmp dec dec scas fucomp ja push jmp dec sub pop (bad) mov icebp aas inc loop popa xchg inc std xchg add (bad) xchg or pop movsb jo pop aas test cmpsl and xchg shrl sub shlb mulb sbb fwait mov stos sarl or (bad) lods shr loop and cmp xchg iret js push xchg rcll mov push xor jbe cmp xchg mov in jb mov push sub aam fnsave daa adc ss ds movsb mov sbb imul xchg std sub push in xor and je lods jae sub insl dec push push xchg cmp std jge push add les mov pop test mov xor push das test int3 xor dec lcall test iret mov push lahf insl loop cmpsb sub inc ljmp enter or cwtl insl ljmp jmp and sub jge jbe daa push fmull sarl pop ds movsl mov insb (bad) cmc jbe arpl xchg jo mov movzwl stos loope js mov jecxz jg mov ss sti mov shr hlt jo fcmove loop leave loop jb pop mov sub adc test xchg add ret xchg ds mov mov fcomip subl inc mov mov cmpsb sub or add int xor push push mov lock fsts aaa inc inc gs push test jbe sub int3 mov cmp movsb add es mov or mov insb (bad) mov stc cmp mov movsl and cmp out xchg fs or inc dec adc sub sbb inc sbb xchg push push push add bound jae xor jl enter ficom (bad) sub sarb test push (bad) sbb scas pop scas loope add repz stc (bad) out adc stos fnstenv (bad) jmp push add popf inc in mov mov cltd xor push push pop mov movsl add cli jmp jns xchg jae test into pop les jbe repz inc pop pop nop leave ja test repz add inc loop ret and mov clc (bad) sbb or daa sub dec xor je fcompl pop jmp dec ljmp movsl movsb pop imul cli sbb gs popf cmp in push ja mov cmpsl gs sti push or andl pop pop lods ljmp data16 xchg and mov jnp and cmp jno jns cltd xchg sbb popl les cmp mov stos lock dec sbb push and inc pop es sub mov pushf out jge cmp xchg pop push pop mov pushf mov jae cmp addl (bad) adc push mov or inc stos mov ljmp inc cmp mov pop xchg fisubl sbb sbb inc das sbb int repnz sbb test add xchg call sub ss push cmpsl mov dec mov das pop cs mov repnz iret xchg sbb push fwait sub das sbb pop mov ret xor (bad) add addr16 fldcw mov xor mov mov cmp cld cwtl int pop xor cld cmpsl cwtl mov pop in push dec das rcrb hlt mov mov mov mov xchg out (bad) ficomp pop lcall cmp push mov mov stos shrb aas loopne js add nop dec in popf dec cld sub call xchg pop inc cmp enter popa mov arpl leave and xchg movsl or fldenv cmp fwait rorl arpl pushf enter mov cli inc dec inc and xchg mov mov and les movsb test decl andb iret or jmp push out movsl nop mov arpl push jg sahf shlb push enter pop loope mov cmp pushf xor (bad) repnz mov std popa mov or jb addb outsb lret into mov stos popa repnz xchg ret arpl fisttpl dec outsb stc mov mov jmp ja xchg mov fistp mov popf repz dec jno loope push aam add mov shrl push push test int nop mov push sbb sbb push mov enter negb mov push stos clc test std sub sti bound jmp (bad) sbb jl xchg insb pusha or cmp add fnop int3 cltd xor jecxz fidiv je pop test jb out adc xchg xchg mov mov test adc mov pop xchg sub (bad) pop nop mov jb jg pop push sub gs dec nop add loop adc and and xor pop movsl lds into loope or daa jg imul pop ret jmp popf (bad) popa cmc push ret and inc std icebp sbb dec orb je and jns push or sub pushf and shlb or (bad) loope jp aad jmp sub push adc jle lret ret in fisubl shrl sub mov into jl shll mov sti (bad) loop mov jbe fstpl xchg cmp fs cli je add push lahf addr16 test sub div mov lock mov cmpsl pusha aam int frstor push jo push mov inc pop mov and push and nop pop jae (bad) add sbb mov es sar stos jmp dec jbe add mov enter xchg popa jle pushf rclb mov lahf iret or outsl inc push push std out addr16 adc sbb push sub mov xchg or dec dec mov adc stos xchg adc cmp in stos inc out nop in ror inc pushl pushf push lds pushf mov sbb jmp scas int jb iret adc imul and out cmp (bad) push and ss sub push mov xlat je jmp repz ds cli outsb repz fdivp mov pop sub je adc cmpsl add cmp push mov mov and push imul sub daa in mov jmp push push pop mov jne add imul and or loopne cmpsb push lret nop mov inc je (bad) inc outsl rorl (bad) dec inc ret sub je xchg jae sub in pop sbb rcll addb insl mov mov das lret jmp jnp sub mov rolb sub stos pusha xor jg (bad) test cs pop sbb inc pop lds mov jae loopne arpl leave and aam push mov scas aas lahf pop adcl xor mov pcmpgtd jg xor lock jne leave xchg cltd nop fsubp inc xchg movsb (bad) and mov add add jbe xchg mov jmp mov in push repnz test ja inc sbb pop andl (bad) arpl daa shrl (bad) bound mov dec dec jmp test adc (bad) mov mov mov mov cmp jno sahf jl movsb rolb inc and sar sub cltd mov testb dec jp mov dec dec xlat stc mov je and inc jae das mov jmp aam fldt inc pusha mov cmp mov sub clc mov xor scas mov call push ja jns (bad) imul ret mov repnz loope fidivr test cwtl mov dec test fildl add mov inc adc xchg cltd (bad) cmp jmp sbb mov mov rolb enter call fldl sahf mov call mov aad xchg out dec jl adc bound mov test push xchg mov mov iret aam or leave jecxz mov xchg xchg int3 test les or test (bad) jns xchg stos shlb or shrb xchg or push lahf std push dec mov jecxz mov or int3 or mov or or pop (bad) push mov bound push mov cmp xchg outsl inc xchg mov pop test dec jno xchg in xor cmp daa pop push jle pop int pop repnz sti iret fimul cmp outsb pop mov mov cmpsl rol repnz sub mov fist add and mov inc push out bnd add movsb pop push pushf sbb jb inc inc out mov mov inc or lahf adc xor cmc or push jecxz,pn inc dec sarb stc out and (bad) jle or dec scas mov ret pop sbb stos xor jb clc int3 pop xchg paddsb jecxz jg aaa (bad) je pop insl or add pop int dec mov adc sbb sub insl add (bad) xchg jge negl sahf addr16 sbb mov mov popa xchg sub gs aam scas aam fwait roll dec add mov dec xchg aad out dec (bad) cmc fidivl push mov (bad) inc jb inc imul mov in or pushf rorb pop cmpsl and rolb cwtl addr16 xor les add xchg jg xorb fsubs xchg push movhps clc pop sbb repz ss ljmp test xor pop pop xor imul jmp test dec rol rcl divb in das cmp sub icebp sub fldenv (bad) les sbbl add jbe jge add out je into idivb pop adc mov aas push fdivrl mov push data16 mov add (bad) ljmp mulb stos pop jle decl mov ret imul adc jl out pop das ret sub das mov notl sbb rclb (bad) jmp inc mov out fcompl into pop xchg movsl mov popa in push lds lds loope sbb inc sbb dec scas (bad) into jbe fcmovbe out hlt lea out mov dec jl (bad) and loop pop add mov xor pop clc lahf xchg iret (bad) fldl dec fsubrl ret bound dec lret dec pusha adc pop or sbb fstl cli pop xor dec push inc pusha inc xor xor add icebp mov mov jo scas pushf xor pop leave and pop ds inc int test popf or pop lea movzbl xor out mov xor or xor lcall jns mov fnstcw push das imul or mull addr16 outsl cltd sahf inc dec xchg push movsl push inc push xchg nop shll rol sbb dec jecxz mov jo mov cltd fldl dec daa scas loopne pop push adc push lods popa mov push sbb mov add imul sub je and mov mov outsb mov jmp cli sbb push adc mov rorl fcmove (bad) cmp mov cmp in popf (bad) xlat jecxz xorl add cmpl push clc jl xchg xor xchg push rorb aam adcl jge mov sub sahf and push mov sbb out inc mov (bad) lret jle les xchg inc xor and mov loop mov xor cmpsb stc icebp (bad) in adcb data16 in adc or add in movb out ja jns test stc loopne mov jle lock in mov cwtl or add outsl (bad) cmpsl (bad) adc or mov lock xchg cmc addr16 adc add adc dec push jmp loope repz xor loope mov cwtl sbb loop je,pt mov xchg jns into (bad) mov sti ds fstpt add pop sti loopne or xchg adc sbb (bad) xor stos pusha lret sub dec lock xor (bad) outsl sub and push mov out fwait jp mov sbb add push pop pop inc (bad) outsl cmpsl repz cmpsb shlb jno mov inc cs imul pop xorl sbb or ret cld sbb xchg and mov xchg push mov push hlt into leave xchg adc sub push cld (bad) repnz scas aaa pop int pushf dec pop lret js xchg mov sbb mov cmp hlt add xchg add jno orl adc add add mulb push movsbl pop push fcmovnbe sub inc cmp dec fs push ja rolb cmp bound add aam xlat js sbb xchg popf lods mov push clc aad fsts pop push or dec es ss and or push mov xchg outsb and mov xor mov popa in push pop (bad) jp test ret int3 std loop or sbb mov or mov rcrl inc mov dec dec (bad) iret sbb imul mov jns stos or gs or push xchg cmc aam stos push out fidiv out and and mov das popa mov and xor sbb and cmovp xchg aad adc je add (bad) mov fwait add fs into xor dec popa popa nop jmp (bad) sahf jb push cmp sub rolb ljmp dec lcall adc sub fs (bad) int adc aas lret out cld pop daa push lret mov mov int3 jo daa push ret add bound mov and cmp test cwtl push and mov imul xchg inc enter xor fsubrl cs (bad) adc jbe pushf test dec rorl clc fs push ret add stos clc clc push xchg cmc insb inc mov cmc (bad) out pop xor sub addl dec and cmp movsb les cmc jbe stos cmp xor mov lods popf mov repz jecxz sbb loopne mov mov jbe jmp dec mov pop cwtl mov les mov pusha int pop cltd shlb imul (bad) icebp xchg pop and jmp repnz xchg mov fdiv cmp lods inc jo,pt movsb rcl mov mov divl stos popf mov jecxz test lds adc xor and leave sub (bad) and jle and fstl insl or inc into xchg (bad) mov sub sub xor xchg sbb in and in ret xorl pop jns mov add add cwtl add cltd or sub fwait aaa push testb sar jle push xlat rorb xchg sbb fimull inc jp push xchg inc insl jae out fsubr pop scas (bad) mov in or movsb lea or cmpl push cmpl cmp add pop lahf lods movsl js jae test das push (bad) lret cmpsb cmp mov mov cmp cmp xchg iret lcall push push cli sbb fcmovu jb jg push adc mov mov jl ds loope xlat xor xor (bad) xchg or test fwait mov pop xchg pminsw shlb loopne pushf rcr sub pusha das fwait xchg ljmp gs adc adc pop movsl sub (bad) and sub imul lcall test mov addl mov pop mov insl mov and dec cwtl fninit pop mov sbb and fimull pop (bad) mov push fisttpll sbb cmp mov xchg mov pop stc inc popf outsl stc rorl sub gs inc push mov or fwait and (bad) fbld xor add dec int push js cmp sbb movsb jae mov leave cmpsb repz lods lods stos add xor push jmp fbld dec pusha stc lods or jb repz fimul mov adc out int3 mulb int3 ret (bad) mov sub add pop and mov pop stos test jb and out or je out cwtl xchg psubusb mov jo in iret inc dec jo inc dec xchg push scas cmpsl pop xlat cs shll push sub ret xchg outsl pop pushf cmp xchg lock adc fiaddl das fs sbb xlat orl dec inc or or clc sub enter scas (bad) loopne insl mov mov mov add adcl add pop cli jmp add pop dec pop and std pusha negl lea pop loopne inc pusha push cwtl mov (bad) test es mov aad ljmp (bad) enter dec popf xchg push mov loope adc jnp test lea mov bnd outsb inc aad inc int3 jg cltd cmp adc sbb jbe out cmpsl inc or leave cmpsb ret fstpt sbb fwait push add xor dec mov notl (bad) loop cwtl addr16 xchg cltd push test and sub push or cltd push sub ljmp outsb cmp stc gs es (bad) cmp fistpl mov (bad) mov xchg sbb and push cmp int scas aam inc pop test sbb mov xchg mov xchg xor fidivl pop mov jb fbstp iret scas out and xchg sbb mov cwtl imul mov loop jge cwtl sub ret ds inc fwait aas xor xor and cmp mov dec rorl jns lods test adc dec aas sbb rol xchg push mov mov jbe,pt inc mov insl dec insl sahf icebp pusha inc cmpsl add and lods inc mov inc xchg xor ror inc mov push adc jle inc aas cmpsl sbb mov out and fbstp jge xchg (bad) xor insb xor jp rolb js bound mov in aas push mov pop or fucomip ja fistpll fbstp push fildl and ret mov mov ja mov movsl ret orps jecxz sub mov xor mov add adc pushf aaa dec jae out cltd add cmp jae cmc (bad) in sbbb aad cmpsb fisttp hlt add jnp sahf daa ret outsb pop dec push xor mov inc push ds pop push addr16 push mov es test insb xor js jge mov (bad) outsl pop nop iret mov fsubrs cs insb in arpl jl adc and out cmp jmp cmp psubw add in jae xor mov push mov std aaa test (bad) mov insl pop in mov jmp dec inc inc jmp push sarl jmp mov mov sub ljmp in outsl lcall lods jo vmovhps insl sub mul push outsb mov xchg out inc cmp push or sbb stos aam mov xor add in cmc mov jns popa xlat add pop jl push sbb mov mov adc inc pop push cmpsb mov mov fsubrs stc out xchg jo cmp sbb (bad) dec add loop pusha add inc stos push roll insb fucomp out lret mov mov lock negl aas rorb sbb mov push mov cmp movsb pop pop pop jne push inc push inc xchg sbb mov test sbb add lods js dec das loopne nop test leave pop data16 imul mov cmpsb ljmp pusha mov and sub mov sub les or sbbl adc and push cmpsb divl repz jns dec fcompl (bad) sahf adc add rcrl fldl ss sbb pop or mov imul fdivrl aad test arpl popf cmp xor daa push mov (bad) (bad) notl ret lahf fcomp sub mov (bad) movsl call ss jo mov rclb call mov xor inc test dec js fstps mov movsl shrl popa mov push and add push pop in (bad) jne movsl sub test jne add sbb jnp inc mov lahf cmpsl enter mov push inc mov loop call mov test (bad) insl pop in insl int3 inc dec cmp push xchg jge cmc cmp data16 aad imul pusha (bad) cli repz cmpl lahf pop fs adc (bad) mov mov movsb into add mov shrl sub add xor add je orl fs or pop lea xchg sub sbbb jne sbb out mov and pusha inc out xchg test in loope cli jns,pt push push or xchg fdivs jmp pop movsb std inc mulb and xchg mov (bad) xchg dec jge sbbl cmpsl test sub iret test stos pop mov sbb sub lds add mov mov cmc dec sub jmp test lahf insl jo inc nop pop jne ret inc pusha jnp sbb sbb test xchg pop push inc (bad) outsl xor test imul or dec push inc jno (bad) js mul (bad) mov jne mov pop adc adc dec inc mov jo je xchg lret jo lds mov and call dec and call xor and push mov mov aas cltd (bad) mov sbb mov mov in outsl lods test lahf repz xor xchg push cmp push out push jbe or popa test pop or mov daa xor adc or mov jo mov cld (bad) out add lods add inc xchg stos inc dec js xchg in inc or jbe mov xchg test rcrl jae ret or test pop mull in xor loop push push pushf not mov pushf dec jp or mov jno push (bad) jo sbb loopne mov into inc fldt loope fdivl jne lret icebp or (bad) xor and mov sub inc stos les jno pop mov inc mov fldt or lods nop and mov nop fisubr imul dec inc mov dec js xchg cmpsb mov das add and mov cli mov mov pop mov jecxz cmp pop xchg les push dec mov sub sbbl negl mov xchg imulb sub mov pushf lods cltd outsb and iret mov ds lea adc outsl clc push hlt mov dec (bad) jl out stos jmp dec mov lods xor mov in mov mov iret (bad) and mov dec push mov ljmp dec pop loope cmpsb jae sbb push xchg push int3 enter push mov pusha pop cmp sub jecxz fwait mov xchg pop mov stos jle adc jae xor lret stc imul add or and jae add call sbb mov in mov mov cmpsb loopne lret mov push pop cmp inc cmpsl add push adc jecxz outsb daa adc jp mov das sbb outsb xor mov xchg popf dec mov lods mov idiv aas or xchg test mov out inc addr16 call dec push das and pop push mov inc in out jb jmp je inc mov mov mov les ds mov out call push cmpsb push mov (bad) pop add andb pop mov iret mov (bad) xor les scas sub into sbbl movsb dec or sbb push scas ja insb jge jo test add mov out shrl adc out ret adc push add adc mov sbb add add nop fidiv js dec jb,pt in aad dec loope adc dec call into popf data16 cmp sub repnz mov es dec std cmp mov mov adc fmuls jl stos test pop dec addr16 xchg (bad) sbb fldcw xor insb push divl add inc xchg dec aaa bound adc loop hlt cmp or leave insb jo mov out lods test int3 or ret repz jne xor cmp ds sti mov push std std jb int dec jb loope inc adc inc shlb insb jb sahf inc call fwait daa loop fdiv push mull mov stos lods jg lock xchg and mov divb mov xor mov mov and mov jb inc adc xchg stos addr16 xor fsubrl and int3 sbb adc repnz test mov clc cwtl xchg aad fs mov repnz cmp push pushf jae pop sahf shlb arpl xchg in lods mov jo ja out in cltd andb pushf dec test jp int movzbl mov sbb (bad) sbb aas mov test cli sub mov frstor lret inc sub mov (bad) mov cwtl out daa ja xor pop insb push sbb and jle ror lods cmp repnz pop fcomps lahf in mov pop xchg adc mov data16 xor mov push push inc sub jmp inc lcall cs aaa movsl lahf scas xor lds popa or jg,pn add inc (bad) add mov stos cmp int fwait lret jbe lods loopne adc jmp faddp icebp aad cmp jecxz loopne into xchg add jae ds insb data16 and dec or outsl (bad) mov xor test add nop xchg jmp orb mov (bad) hlt scas out (bad) mul popf rcrl push sahf push fsubr dec insb scas in mov or xchg push hlt jns add push dec dec pop sbbl mov lret sbbl lahf movsl es jns jle repz mov inc sub jle cmpsb decb rolb push and cmpb loope in mov aam ret mov negb std push jns or cmp sub cmp testb add add or push dec out xchg sbb mov addr16 into sbb mov mov into cld (bad) cmp fistp dec jbe sarl cmp jno leave subl addr16 mov inc mov jmp fimull (bad) xor aaa stos imul das mov xlat add pusha leave add ret xor scas dec fidivr lea hlt jp add jno adc addr16 inc xor push adc xor call pop enter mov cmp sub xchg inc mov pop (bad) sub (bad) loopne inc jge cmpsl sub fwait pop jo pusha push getsec int (bad) mov movsl cltd dec ds mov cmp inc (bad) (bad) icebp sbb test push mov jge adc mov cltd in xchg (bad) bound dec jmp push imul jbe in dec (bad) std rcpps hlt sbbb mov mov fldt (bad) jb movsl out cmpsb dec lret adc (bad) enter (bad) sbb rcll pop adc push call sbb dec or out outsl xchg mov out inc (bad) mov popf jnp mov das icebp cmpsl dec dec pop std enter leave out push and lret movl lock fwait xchg xor sub lret cltd (bad) mov hlt jl jecxz adc stc jo repz cld dec sbb in shrl iret pop dec ret mov add push fwait mov cli in (bad) sbb cmc push mov push in hlt dec mov jecxz add push xor cli inc dec insb cld sar enter outsl mov mov mov push push mov jne test insb out insl adc sbb pop add xchg movsl jns inc dec lea inc stos push popa xlat xchg clc dec mov dec lcall inc insl imul bswap cmc sahf movsl pop aad cmp mov ljmp sub (bad) adc mov cmp sbb inc sbb push sbb pushf loopne cmp dec push lahf subl and ljmp pop cwtl dec stos call aas pop insl iret jge aad test pmaddwd stc (bad) cmc xchg add xor test popa nopl push scas ds mov repnz stos cmp fstpl pop mov and pop ja clc jp and lret jecxz or push pop jge pusha jp out cmp pop xacquire and lock sub int out mov and lahf adc orl pop push mov cmp add pop and aaa inc mov dec push adc xor cltd mov bound mov (bad) lcall mulb inc in or mov aaa mov xchg lret add xor dec dec mov and pop clc fisttpl adc or movsl popa mov outsb fsubr out out xchg or dec ds test (bad) mov les js (bad) or pop lods add rol rorb mov jecxz jecxz or shlb mov mov setle pop or outsl mov mov outsb mov scas push outsb popa jg dec adc cmc in repz adc and inc fcomp mov sub and jbe xchg dec into adc dec adc inc ja daa sub (bad) push fisubl roll fldenv or rol mov mov xchg dec decb aas inc adc leave sub jns hlt or bound mov xchg xor mov pushf or idivb test nop fbld inc push mov in and push jge jge sbb das dec in jnp adc fwait (bad) fs add lret xor aam push out xchg cmp dec nop outsl sub adc and xchg (bad) xor lahf xchg stos fcomps (bad) pop pop mov cmc aam mov roll (bad) pushl add xor and inc pop jmp stos mov das iret cmp scas adc out mov mov push lock adc cmpsl ds insl outsl addr16 mov sbb jb and test push push mov faddp mov add stc stc call add adc jae mov xchg add xor gs orl inc xlat pushf or cmpsb repz inc fsubrl and imul cmp hlt sahf fstps lods and pop popf fimul fbstp pop ss daa jnp push jo rorb fild aas pop rcll rolb push loop xchg and pop je int fist lods dec push pushf lea mov call mov test cmp aam sarb and sarb dec scas mov dec int sub sub adc fwait cmp aaa mov and aas loop pop sub lods int3 loop movsl pop xchg (bad) pop pop mov js scas adc cmp jb adc (bad) icebp cmp mov movsl mov out cmp cwtl sahf fs add lods lcall or dec cmp aaa sub or xor pushf push mov (bad) cmpsb mov pop negb mov push push cli daa and pop pop mov xor sub ret mov fsts data16 in or int3 xor mov lret out sbb jmp sbb dec xchg (bad) jno aad outsb adc cs xchg and imul imul (bad) scas or rolb lods mov and and and sub mov cmp push das rcrb push inc sbb cmpsl fmulp adc js dec cwtl adc test or adc sti pop shll das push pop stos xchg lcall pop dec pop push or inc dec or subl sub and pop lcall outsl cwtl sub add adc cmp push mov movsb push test dec mov (bad) or and or jne xor mov shlb enter les (bad) lock loop in push unpckhps ljmp add xchg movsl fild scas sbb jp and lret mov lea popf popl or or mov ror jo in pushf cmp fdivrs shll mov (bad) jns adc add mov sahf ret mov insb fisttpll adc sub icebp xor mov adc mov (bad) popf jmp sbb jmp jmp adc les push dec add jecxz mov push cmp scas mov (bad) lcall movsl aam xor out ret jbe dec out int3 movsb shlb lret aad xchg in adc je jmp pop sbb fist add sbb sub test ffree xor xchg scas dec mov cmp mov mov repz scas inc scas xor lahf mov pusha jnp call ret out jb pop lcall outsb arpl pop adc xor int jbe lret and inc psllw outsb (bad) (bad) ret inc lock jb push cmp inc es inc mov in mov cmp ret adc mov inc in inc mov movsl add out inc mov xchg push minps cmp pop and mov pop setge add jo xor inc push repnz and (bad) mov mov or neg xchg sbb xor test repz dec xchg nop and (bad) je mov nop cmp inc bnd inc pop cs jb iret aaa testl testl jl sti cmp and repnz leave mov dec xor enter in mov clc push sti mov adc int push addl fincstp sahf mov iret cmpl inc pop in stc ds push pop cmp xchg push ja xchg mov adc ja jns add cld aas jnp cmpsl stos and lods lods mov aaa mov mov repz aas out xor mov push je and mov jae dec pushf mov push push push or ret cs lret mov push inc jl sti in fldl pop jmp mov sub mov aam (bad) repnz cltd mov mov jmp pushl cld jge sarb popf shrb or push lock cmc enter out xchg jmp out cld lahf sub jle dec sub jl shll test fisub stos push nop ret test (bad) xchg mov xchg or and pop std iret movsb or mov mov jb sarb inc nop inc dec lret lcall dec addr16 repz movsl test ljmp mov (bad) add hlt (bad) dec nop in and test or decb sub fs pop xchg xchg xor std lds sbb push mov pop mov sub push mov push or add inc cld out stos jbe sbb add adc jmp bound dec inc pop imull mov push enter out sbb out or fmuls mov rcrl jg rcl loope mov (bad) aas dec mov pop adc dec jb mov icebp dec imul xor mov dec add inc bound dec mov mov and scas jge inc adc xchg outsl xchg sbb cmp ja jmp lds mov clc adc shrl adc fcomip aad aam sbb adc gs mov outsl js push sarb faddl lds loope hlt inc jnp pop lret aaa cli dec jnp,pn xchg pop jmp ret mov fldcw sbb add ss es aam cs in mov stos adc in decb aaa push inc and sub pop sti sub (bad) (bad) into sub sahf test mov sub add xor xchg js inc inc inc repz push in xor cltd fsubrs mov loope stc pusha inc mov adc add (bad) mov insl inc dec dec (bad) pop sub fmuls sub lahf dec ljmp dec cmp addr16 lret or sbb mov orb adc cld mov jecxz cs insl adc lahf mov cmp and clc in cmp and inc push in (bad) int jns ficom adc jge push insb xor cld mov icebp mov sbb pop mov adc lret mov inc push rorl push cld sub lret ret inc mov pop call lock loopne insb (bad) stc pop dec loopne inc dec test daa mov inc sahf dec jo inc mov mov dec cld pop rol mov roll adc adc inc lds (bad) imul dec pop adc inc and mov push and mov push adc mov in jns mov or (bad) and fsubrs cmp inc movsl fildl bound jns pop pop add scas adc pop cltd popa cli cltd jl in sar dec and adc scas cmp ja testl xor add mov or sub push push pop data16 stos insb mov imul test stc popa js inc out or xchg dec shl sti sub cs (bad) xor imul movsb and jmp nop imulb pushf sbb lahf xchg outsb sbb xchg add jne inc lcall gs cmovs mov xchg dec fst insb stc pop push cmp je das ret mov dec stos xor push jno cli aaa mov mov push jmp xor pop add ljmp mov cmpsb xor cmp addr16 cld mov pop loope xor in sub jo sbb scas lock cmp sbb dec or jge pop xchg repnz frstor lock clc mov ds ljmp rcrl add enter mov cmp and push sbb xchg lret ljmp loop ret pop mov add pusha pop dec test sub stos outsl jnp cmpsl and sarl cmp punpckhbw add notl sbb sbb push lods fiaddl pop test in pop repnz add adc and (bad) pop cmpsl sbb or and fs sub aam mov xchg mov jl or xor inc cmp add cmp ret inc loop lds lea ss pop scas sbb lahf repz enter mov pushf test fbstp in ret xchg scas mov lcall inc and sub cld mov adc push ret cmp inc pop adc sahf jl ss ds sbb js mov cmpsl fisubr and ret sti mov ret int xchg inc add popa dec ljmp push ds fisubl out aaa mov das jne inc sub xchg adc stos test add nop mov jmp add icebp pop hlt push and add (bad) and lods xor pop adc or imul xlat pusha sbb adc add mov cmc mov mov lahf fdivl jmp xor fisub inc lods popl jo (bad) (bad) inc jb (bad) mov pop rol out in mov stos and sub gs sbb xchg lods adc or mov je das loope stc mov adc push fsubrl xor loop imul scas sbbb into push and fsts mov sbb repz dec inc jne loopne (bad) xor call adc push into jp sahf enter lock hlt mov popa addr16 (bad) and mov xor adc fnop daa add jg pop xor cmp mov push pop mov jne pop ja imul ret xrelease push subl in cmp jg jb xchg pop push sub cmpsb fstps lods mov std push mov cwtl adc sub stos cli aas (bad) ja sub (bad) xchg mov es xor jbe mov addl jle xchg dec mov int out jge insl dec (bad) mov mov push and or mov cwtl test sub push dec push and outsb and inc xorl jg inc lret mov sarb sub inc loope mov repz daa xchg xchg loop (bad) sub ss pop movsb ss and pop adc and test imul ror adc rcll and loope cmp sahf push or into mov push lea je cli lcall cmp or push sbb jnp mov in pop pop mov out int3 inc and dec mov pop test pop (bad) xor dec inc fcmovbe in cmc leave lret mov sbb push push loopne cmpsl cmp fwait dec adc outsl scas sub cmp jb cmpl movsl xchg push push xchg sbb test in scas pop ds or sub mov sub xor push daa dec ss mov push in data16 mov stos push sbb mov leave mov aad and (bad) mov ljmp jno add push xor push pusha pop outsb (bad) popf jbe divb test sbb push mov xor and faddl cltd dec inc mov cmc dec cwtl sub lcall add add inc in push insb loop gs adc pusha and popf adc popl stos inc movzbl lahf jmp xor data16 cltd out nopl std push lock pop inc inc lods mov (bad) sbb dec ficoml stc cmpsl popf jb sub iret rol cld icebp and in call and test dec sub loopne lahf and cmp add fadds imul dec mov pop and test pop cs sub xchg sbb dec pop out lcall popf lret adc fdivl mov add mov or jns cmp pop mov pop or xchg mov dec data16 jns xchg jl cmp xchg sbb jle sti icebp stc movsl pop insl push cmp ss push cmp cmp hlt pop mov add loop rol xchg push int3 dec lcall jle jbe push popa sub mov bound mov xchg outsl xor idivl and mov insl xor sub mov mov out popf cs je fnop cmp out mov repnz push dec pop cltd movsb cmpsl sbb jns xchg int jno push shr cmpsb (bad) repz dec bound jge (bad) repnz add out bound cmp pop lret int3 shll popf mov stos mov or iret movsb push bound jnp adc add cmp iret adc push or add adc adc icebp xor add adc xor addl mov popa inc scas xchg fucomi sti in mov int3 ja xchg adc test xlat add data16 js adc icebp out or xchg outsb jmp pop jnp xlat sub push push add cld add xchg das leave rclb outsl add fsts lcall fwait xchg mov sarb and out icebp bnd imul jecxz cmp movsb adc ja xchg jb sub mov pop cli (bad) fnsave nop stos fistpl movl les addr16 sarb xchg mov push std add pushf lcall mov inc jg aam sbb add in jo add iret adc cmp daa mov mov in sub cltd sub xorb xor and mov and aas addr16 jg lcall (bad) gs push out out add hlt scas clc and sbb notl push add out fstps pusha movsb cmp loopne (bad) jae sub (bad) out dec nop inc mov lret or sub push xchg mov fsub test pop mov pop loopne lods loopne sub xor sbb fsubrs std (bad) lcallw loopne push mov mov lock jecxz pop sti out mov test xor push inc idivl test pushf mov lods sbb outsb pop xchg mov cltd sti xchg jns mov mov je lret and jp pop out push mov lea ret outsl push shll cli cmpsb jae stos mov outsb (bad) lock leave pop lret out sbb cli sahf lods dec adc add arpl addl mov add xor shrb out test callw fst loopne lea addr16 mov icebp mov or push jecxz out dec mov sbb out sbb les xchg mov sbb pop outsl dec jecxz clc test lret xor dec out push xor mov repz pop mov cvtps2pi test (bad) push mov call cmc push xchg inc test pop xchg push pop std mov xor sbb (bad) xor stos clc into cmp mov mov pop mov mov je mov xor andl dec ret lcall push sbb pushf or mov jge xchg adc push and sbb inc cmpsb rcl push sub pop in cmp push mov sub xchg cli cmp (bad) push or sub mov add add ja mov jp aam bound cmpsb lret scas nop out adc mov add and cmpsb cmpsb loopne push (bad) fidivr cmp addr16 jmp xorl jno in mov (bad) cli and dec mov cmp out push pop outsb fdivrl push dec mov push adc inc mov mov adcl in lret cmpsl add sbb sbb or xor push scas hlt in lret lods fdivr adc mov sbb xchg psrlw jge call dec je (bad) dec imul cwtl mov sbb nop cltd lret test pusha jl adc jp jbe push mov sbb std xchg mov pop xchg dec fcomip pop sti test ljmp loope subl rorb arpl jns lret data16 push add inc ds xor sbb and (bad) or lcall push and das pop rcll idiv mov mov mov and jl sub fbld inc cmpw outsl xorb ficoml pop and cmp mov rcl cmpsb mov add cmpsb inc rolb movsb xlat mov xchg dec into fiadd scas insl add inc xchg dec cs out ljmp pusha xor sbb out ljmp inc pop jle shrl xorb pop pop mov mov sbb cmpsl dec push dec lods push int3 sbb or cwtl fwait cwtl jno and jae adc dec flds cmpl jg mov add fsubs inc gs push cld ja and jecxz ret pushl in push fsubrs add rol dec inc push fmull mov enter aaa mov ja gs xor add int cltd lods lods jb xchg inc adc das mov mov push clc xor xchg xor push test js jbe lret aas lock mov lret loope sbb sub popf cmp fdiv (bad) cmp aam adc clc insb xlat (bad) es sub fdivrl jo mov rcr or push js pop out insl (bad) lods jno arpl and (bad) xlat jecxz xchg cli rcrl rclb (bad) mov mov repz cltd mov mov fisttpll xlat enter scas jnp movd xor in jbe lcall sbb inc in std paddw ja (bad) mov fnstenv add push sub shll mov inc mov xchg out out scas inc adcl mov inc xchg icebp push add xor cltd sbb mov std pushf jnp je mov in mov mov xchg (bad) in insb lea stc in addr16 xlat mov mov mov cmp repz pop je cmpsl in ljmp outsl stc mov mov adc inc pusha stos in push cmp xchg push pop repz cmp and add sbb test sub pushf ja and and jp cmp fsubl cmp dec aad mov out incb mov stos xchg dec jo cmp push sub movsb orl scas mov inc adc push and test sub outsl jae inc inc icebp imul mov inc lds jnp outsl scas (bad) jae in jnp mov (bad) mov out cmp inc mov add pop (bad) adc repnz add in jno jno je cmp xchg or mov push (bad) out pop lret loop cltd mov push loopne xchg lahf mov mov inc sub ja in mov inc movsl mov (bad) notb inc mov loope add add dec into rdpmc test mov stc pop pop xor mov adc test add jg xchg xor inc xorl std mov push add jae aam fdiv mov cs fucomi sti ljmp cmp add mov sbb add sub aaa jno adc popf inc nop adc mov pop (bad) and leave ljmp lret mov push scas cld sub pushf (bad) rol push and xlat push into push jg in lock add add nop mov in or sbb repnz and das popf bound mov mov add outsl sbb lods cli ds hlt outsb mov xorb loop sti dec outsl or dec mov cs ss adc pop push jb and cli fidivrl insl and fsubl aad test (bad) in push inc dec stos call aas xor (bad) mov sbb dec popa cmp mov mov cmp sub (bad) push jp mov fsub jecxz jne or xor lcall cmpsb lcall addr16 mov mov mov mov in xchg xlat movsl or aam les cmp mov lahf int3 call outsb test in cltd sti dec and pop mov xchg movsl xor xchg scas aas mov jae cmp outsb xchg loop push add movsb test push int push xchg lcall jecxz inc push and ss inc sahf and pop pusha sbb lods test or xor fstps jno adc fist cmp dec or or xorl push hlt iret cltd mov inc mov aaa mov xchg rcll lods push cmpsb inc sahf dec sbb pop cmp pop pop sbb pushf and xchg icebp pop fcomps int mov push cmp and cli push adc std dec pop or sub pop lcall aas in into jge,pn out ret cld cmpsl ljmp ss repz inc mov loop xchg xor jno imul outsb loop je dec ret daa mov adc and pop add fstl pushf in scas leave mov popf psubb jo push dec mov loope js inc inc out pop cmp enter test jb inc mov mov gs test out jl mov loop icebp push mov gs push xchg unpckhps aaa lds jo loopne cmp out je lods movsl popf and insb or lea sbb xor push scas dec leave push dec pop lock es or inc (bad) mov lcall lret mov test or aas cmp dec xchg out mov dec pop mov mov in addl jecxz pop fsts scas das sbb int push and clc ffree pop (bad) je dec mov cltd add sub aas pushl scas adc push xchg and int3 sub mov in iret push add and ficomp push pop xchg pop ss ret pop dec stos pop in mov mov or scas sub pusha pop jae lcall imul dec or sahf add jns,pn mov aaa or mov and cmp and ljmp mov fidivl aam lds push pop mov or les bound out outsb outsl sbb mov lods xor call mov (bad) rcrl pushf repnz cmc pop jnp mov xchg addr16 call xchg (bad) mov xchg or sbb and push popa cld adc movsl fcom push jno mov lds dec aas sbb (bad) nop clc and in cmp push cld outsl pusha fldcw xor pushf sub jge fs xor inc dec sahf add into lock bound cmp jb ljmp subl and jle sti nop gs push ss js add inc decl ds lret fcomps jno fs mov or rcll sbb stos daa xor xor pushf movsb imul js repz sub cltd push je (bad) ficoml sub sbb sub lret jmp add pop xlat shrl push inc orl es sub outsb cmpsl mov lret inc push ljmp lcall pop cwtl pop cli loopne bound insl push dec sbb cmp ja xchg xchg push jns dec lods mov (bad) (bad) mov aad test fimul pushf mov lahf adc add repnz lea imull jns aad leave add sbb xor pop push test lea add adcl (bad) aad das cmp push mov cltd push into mov outsl arpl ds push cmpl fst or cmp sub jmp mov int3 dec test lods test testb loop push fs enter jp pop hlt jb xchg loop jecxz insl dec (bad) das mov aaa inc int3 in stos pusha shll ficompl inc sbb sti adc jmp arpl std sub incb or push mov xchg test bsf pop (bad) repnz movsb mov push adc sbb xorl popf lds mov mov cmc cmpsb loope push imul out mov test mov mov mov push inc les add (bad) rorl fimull mov dec popa outsl enter sarl xchg sub lahf pop mov sub adc and into aas jle fcmovne in nop jecxz cltd out pop mov pop adc std cld adc popa (bad) stos xchg inc das in xor or xchg add out loope cmp add cltd lds push mov push pop sub rolb pop lret pop pop aad push addr16 jo (bad) jnp or fwait int3 jp js sub (bad) aaa push mov adc arpl mov mov imul fwait xchg mov mov ja and icebp xor popa sbb icebp adc cmp lret or popf xor pop cmc fsubl sti adc xchg add sahf mov mov mov mov xor mov cmp add cmp push sti inc stos add and pop fisttpll jno out xchg cmp lcall clc sub mov push push pop jbe and lea or lea aaa out sti jbe mov dec or and movsb mov out rcl nop pop and nop add sbb pusha and pushf lahf mov xchg decb sub and inc adc mov ds (bad) jo cmpsb nop xchg mov gs dec ret lret inc mov sbb je fsub xchg jle and mov fstl stos xchg ftst pop and outsl pusha cwtl mov scas sti dec (bad) fistpl int3 rcrb jns and test test xchg jecxz clc xchg push daa push lcall xor (bad) cld dec cli jl shrb inc ss ret addr16 test daa add add out fstps and add test sub jno xchg sbb shl mov add ja inc fildll movsl push test pushf pop sbb in sbb mov lret jl and jbe sbb mov test movsl out xor orl push fstpt sti jno les add fcom xchg rorl xor dec cmp or sub stc mov cmp or dec sbb sbb sub xchg cld pop mov test cmp ds (bad) ljmp sub inc lret jo mov adc out outsb movsl sbbb sub (bad) mov ja or pop adc bound fisubrl or test xchg repnz int rclb std repnz mov and out push loop pop cmp movnti xchg (bad) jmp mov and mov add fwait sbb jbe add lret xchg int3 clc pop push dec mov xor push sbb mov pushl es push push fs push push xchg pop pop fistpll cwtl pop mov or fwait mov pop (bad) mov inc movsl mov daa push mov mov sub adc dec and outsl bound nop fdivrs and pop and (bad) fs xchg scas pop lds dec fs mov rcrl jb or ja (bad) mov mov sbb loope negb pop mov movsl dec xchg inc mov or add jne dec sub sub push push adc add lods adc pop dec mov push jae xor je mov and in mov xor incb mov imul or (bad) imul test mov sbb xor or lcall adc lock inc dec push jmp cmp jmp inc loope scas (bad) out xorl jge mov mov cld icebp and cmp scas or aaa out mov out jnp (bad) sti mov ljmp cmp aad lret fidivl cld and pop push (bad) insl aam mov xchg xchg xchg les or aaa sub das das inc fsts scas jmp mul (bad) xor jbe data16 les addl cmp sub iret (bad) jge iret xchg pop push pop adc add shll xorl mov ret mov repz lods push add xor jnp mov pop add push je test xchg popf add (bad) xor push jg in mov cmp or push nop in (bad) add imul cmp and cmp pop leave pop sbb repnz das inc jae push sbb shll cmpsl jp adc push jle jnp cmp cwtl xor jge rorl sbb mov adc jmp sub aas aad mov es int3 dec (bad) dec lret adc pop lret push ror addr16 cmp and xor push repz outsb ja sti aas (bad) (bad) and fdivrs mov bnd jge lods push ret incl in int stos push dec sbb jge xchg xchg pop cld repz jae jo or enter sub fdivrs int3 je int jne or push push popa in push cli into out adc or bound or jne add jno insl cltd add mov mov sbb mov daa stos mov clc pop cmp aad stos jne movsl sbb add es dec mov and repz repnz bound and mov lret aas xchg dec std lock mov push xchg sub and adc push out jle cmp lahf mov call pop cs jle mov loopne aad rcll jbe dec pop sbb and jae mov mov pop (bad) call sbb and mov or rol jmp rorl xchg and push call ret push lret and mov dec out sub xor lock cmp push fnstsw jb push xchg pop mov or xlat mov fdivrs push dec pop inc mov ljmp sbb dec adc push mov lcall lock loope das inc test or aas push mov xchg jno out jl les aad push mov pop fildl punpckhbw inc std ret push sub dec push cmp mov xor lahf dec sbb mov mov push out js mov mov imul jp in mov xor xor inc imul out xchg sbb jb xorl nopl jns rcrl mov or icebp xor and (bad) cli xchg mov and cwtl cltd mov mov pop call pushf mov (bad) or xor lods cli clc sbb mov xor push and jo div mov push add ljmp daa and add sahf loop (bad) iret outsl sub jne pop xchg or hlt aas cmp sti imul (bad) leave enter mov fistpll xchg mov in repnz xchg cli out nop push sti flds scas xchg addr16 aam repnz sarb xchg add outsb ss push sbb mov sbb mov ror mov cli test or dec add jg mov aaa call xlat clc lahf repz push add mov mov ljmp repz xor jle (bad) (bad) push rolb nop sti (bad) inc add pop pushl mov test fwait push inc std scas (bad) push bnd mov daa rolb enter xor andl cmp jo js movsb icebp jmp jns cs jnp dec lods aad in mov push adc adc add xor into fbstp and pop cmp (bad) jecxz jno in cmp mov sub jbe cmp mov sbb fdivrl ret out sbbl sub mov loop lds mov sub ret add and in dec aas xor push call fldcw inc jbe xchg je fisttpl inc dec pop enter adc dec rorb lods and (bad) mov call cltd jmp fdivrs push cmp pushf mov push push push xchg mov lret add repnz push inc stos (bad) (bad) mov test sbb negl mov leave in movsb imul fisubl mov pop pop inc xchg jle jo mov xchg pop push jle daa push xchg shll inc bound pop aas (bad) pop mov iret loopne pop fistp sbb xor add lea cmp adc in out loopne jno jge sub stc xchg mov insb mov test pop add lret fisttpl mov jecxz rcll add clc push mov mov lods arpl popa (bad) shll cwtl and inc rorb (bad) mov imul daa or lea ja pop fdivp fisttpll xchg dec push cmp adc cwtl out and icebp xchg adc (bad) repz push push stc fsts dec stos mov js dec inc out lret cmc movsb mov (bad) jbe test inc mov fucom mulb les xchg dec stos test pop bound in ja iret mov fstpt out fs add lcall (bad) cmp mov add addl push mov scas ja,pn jno xchg out stc pop dec or adc mov bound mov outsl (bad) adc stc pop clc ljmp sbb inc inc mov movsb std sub sub mov push lock or ret and pop xchg mov int pop cwtl jno jbe xchg (bad) pop stc add hlt xchg xchg xchg daa xor mov sub pop adc jnp inc movl das jne cmpsb push insb push dec inc (bad) pop ret imul sub popf enter push pop cmc adc popf stos movsb push out jle sbb inc inc jge lret arpl xlat add das adc cld cli sbb add mov les mov scas push test cmp push lods fldcw ss mov and or sti add gs mov mov mov push or mov add sahf and loope lahf subb pop and mov test loop pop mov in mov xor outsb icebp ljmp sub sbb mov test sub add xor (bad) fwait add push sti sbb rol inc mov mov and and jecxz mov dec jl xchg dec dec jg iret push inc pop and ljmp inc mov dec lods addr16 mov mov rdtsc jbe fidiv jne mov or ja ja dec xchg sub jl pusha out jle xchg inc cwtl dec xchg fsts dec mov xor push pop js jno adc repz (bad) popf leave or cmp mov out or adc cmp sbb repz scas xchg jne flds (bad) xchg xchg adc lret lock cmp aas xor dec mov cltd dec sub sub xor test cwtl lds xlat sbb rcrl (bad) movsl out dec les xchg lds jg jne mov pop jle adc inc int3 jbe fadds mov push jno mov cmpsb inc sbb and mov insl mov dec pop push hlt dec jne icebp inc rcr push rcrb imul adc iret cmpsb push mov add mov fistl adc scas (bad) xor mov neg xor and jl aas jb stos call int3 inc add xor push mov mov pop or cmp dec in inc sub push jns mov jle in sahf adc dec xchg nop jecxz dec fcomps in (bad) in pop out lods inc call add push in inc xor fcoms sar daa push inc cs mov inc push push inc and mov xchg cmp (bad) push or stc fwait and cwtl push lcall adc push sbb mov adc mov mov dec sbb or jmp leave push stos dec mov xchg in jge jmp movsb add rcrl loopne roll fwait pop push iret shrl (bad) jl cmpl mov mov push xor sti adc add pop adc jle (bad) sbb daa test sub mov cmp pop call into inc fisubrl (bad) fs loopne lcall movsl shrb incl lret mov dec jecxz push aaa xor mov sub stos inc insb (bad) sbb push or or cwtl pop cmp aaa add cmpsb mov clc lods inc dec push or push cmp (bad) or mov dec cmpsl dec pop fstps out pop faddl xor mov jmp ffreep sbb ret xor pusha cld mov scas (bad) bound cmp mov adc fsts lods nop mov adc js adc (bad) test mov scas xorl bound pop and shr aas mov int ret mov lret shrb lea lea rcr js pushf jns lods mov negb dec mov cmovb mov int3 (bad) in in sub test jecxz cwtl pop mov pop pushf and cmp add mov or xchg mov insl sub or out dec roll mov jmp inc mov lods mov or test cmpsl pushl add push out inc jmp push js mov adc andl jb cmp lcall jbe inc inc pusha lods stc mov outsb mov mov mov xchg push xor packuswb cmp pop lods xor dec xchg movsl push sbb pop mov or sbb stos jae cmpsb bswap aaa inc sbb xor sub jg es or dec jle movnti addr16 cmp insb jg loopne or and and pop shr cmp outsb gs jno jecxz sub fisubr push jnp icebp js test cmc pop (bad) mov inc rcl adc imul mov nop dec mov and outsb add push jmp loopne dec cld stos mov pop testb out scas inc (bad) es das hlt test inc xor push rorb and outsb les sub (bad) repnz repz push xor pop mov pop xchg mov inc mov out (bad) jae (bad) xor insb or jp out popa mov push dec and in add (bad) outsl in iret pushf ret dec xchg pop scas sub call cs test mull scas into fnstenv jecxz sub stos mov jns scas scas (bad) push mov out pop cmp lods and inc sbbl mov outsl test jg shll jno scas cmp outsl popf push push add mov sbb xor mov sarl lds xchg insb sub enter insl add rorl cltd cmp lret fidivl arpl xchg sbb (bad) movsb and mov mov sub push push dec mov and mov stos lret (bad) cmpsb jbe jb add push sbb adcb add push outsb xchg ds xchg sbb push or sub (bad) mov xchg popf stos mov xchg mov mov enter sub test enter push ja push je inc sti insb xor mov jno dec cmp test sub push sbb mov outsl icebp cwtl into flds pop popa mov mov out and add movsb dec or daa inc add int3 std or fidivl mov repz (bad) hlt xor out shlb cld jo add ds jge,pn inc fs test xchg test stos pop in add adc ljmp mov out in enter pusha cmp mov xchg into aaa push leave sub xor lds adcl add fsubr pop test test into sbb mov push and test aaa cld lds insb fild test cmp test (bad) cmp test in inc pusha mov clc imulb jge test cltd sbb cmpsl mov test aas aaa pop ja sub sub sub sbb mov adc mov fistpl xchg arpl or jnp subb inc rorb pop in fstpl or or in cmp stc sub xchg cmpsb mov xchg jbe aaa shl and pop adc pop sub and fiadd jno jae fbld cmpsl add out iret adc and mov popf adc push shrl movl dec cmp xchg mov mov fwait xchg ret mov inc addr16 xchg outsl in iret pop fisttp add add imul ljmp xchg rorl push push cs pop dec fs mov (bad) jno gs repz pop lcall inc cmp (bad) je mov cmpsl xor jmp js mov adc lock fs pop jnp insl out and loope int3 fistpll push pop xor lret pushl mov inc faddl dec outsb inc inc jg test mov (bad) dec inc xchg call jecxz loop (bad) or cmp dec (bad) pop daa lock mov (bad) das push pop cmp dec pop pop pop gs and mov mov dec ret mov aaa mov inc mov push jp fdivrl xor cmpsb loopne push inc (bad) add add ret push mov clc pop push pop inc adc jp movb add add inc and int jae jb js loope add lds xchg popa aam sbb leave ret jl jle test (bad) xor xchg dec mov xchg dec dec lcall lcall aas sub push dec (bad) shrb mov cmc xchg xchg jl mov add nop mov mov mov js pop and xor jecxz mov adc sub jecxz xor bound daa stc (bad) sti jl sub sub push jp jbe cmpl repnz mov and mov in notl dec popa pop pop mov inc jb sub sbb mov ljmp pop and inc mov sarb inc cmp in dec sub or add sub xchg and test push jns mov addr16 roll decb jge add cli stc int3 dec fwait inc pop hlt dec cmc into sti scas mov popa adc popa inc (bad) mov insl cmpsb das xor js repnz adc loope hlt and sbb mov rcrl hlt push cmpsb add xchg add inc test push arpl mov cmpb mov es xchg cmp rcrb (bad) fidiv xchg ja das fsubs sub loopne mov int3 or push mov jne jp inc fimull call les fidivl in and cli and sub lcall push adc add cmc mov out sub mov insl ret inc out mov aaa jns sbb cmp mov sbb fistp or gs sarb or clc data16 mov xchg test retw movsl out mov fnsave sbb (bad) mov bound stos sbb insl (bad) cmpsl mov (bad) xlat test dec or adc mov sbb addr16 jge ret adc fisubl cli sub fisttpll ljmp pop push mov pushf fisubrl mulb fadds push or mov cmpsb mov sbb adc cmp into xor xchg shlb imul mov mov (bad) test dec inc xor mov outsb mov data16 add jbe jmp adc fninit jo jne xchg push loop,pt xchg dec and sbb mov xor push xchg sub ljmp inc std or int3 lahf stc (bad) lds push jg cmp add sbb pusha lds sti leave insl js adc jnp mov cmp jge xchg or push leave fisubrl shrb adc (bad) out sub fcmovb mov je fdivrs out or mov test add mov das call jb jge jmp push pop jmp daa jmp loop mov or (bad) movsl jnp jns push mov cmp fcomip mov rorl aam cwtl icebp mov ss xor mov jl mov pop (bad) icebp cmp xlat add rcrl xchg ret cwtl and adc movsb (bad) andnps adc mov ds jmp insl outsl stos test adc xchg pop int ret dec pop sub pop pop push outsb xor lcall repz inc loopne repnz xor add add inc shlb aas in das push les mov jo mov outsb (bad) out pop mov inc pop repnz push insb sub fbld jae mov push icebp push dec mov xor and xchg imul mov push out mov nop xchg lea jae cltd jge jmp js xlat push adc aas and in cmp xchg push fiaddl jne jns orl clc mov mov arpl xchg pusha aas shl in cmpxchg bound push jnp subl jbe sub rclb leave ja bound and ss test lahf pop ds pop stos pop and cmp shrl and pop in loope mov int sbb jmp xchg and cmp out xchg jp test mov add loopne add xchg mov sub ret divb mov fwait inc dec add (bad) addr16 jno mov sbb xor xor rcr adc insl loop ret mov pusha aaa jnp adc and mov pmaddwd inc loop xchg pop lds cltd push lock cmp mov outsl jg sbb loop jbe iret xchg lret mov cli in test mov popa out inc lea lods mov je shrl and les int3 stos lret push int out scas lock leave inc or aam out push lea ffree or fstps ss xor fisttp jne dec or cmp pop dec idivb ljmp lods outsl rorb ffreep xchg pop clc out arpl ret jae xor adc js lret sbb jl sub xor jmp lock mov bound fbstp or push mov sti inc lock stc xchg adc call jns mov das cmp fwait pop mov add jp jmp shr (bad) dec inc fdivrs mov pop inc pop (bad) dec lcall xor stos pop sub in (bad) xor push clc mov jge dec mov add push lcall out mov iret adc mov dec rorb jl and jle mov pop popa or das ds lahf test and lock rorb out mov cwtl gs cltd cmc jmp jecxz add lret jae sbb jo shl xchg jbe int xor rol or add mov fldenv mov scas out stc mov aaa xor pop pusha pop cmp jg and dec jb bound dec adc scas (bad) pmuludq and adc mov add mov inc push aas xlat iret in jns test ss jne push addr16 test jbe lret jne xchg loop pop cmp jge clc lds movsb xchg xchg sub mov inc in sbb jo jp out xor or add imul xchg jp cmp inc adc leave jl push rol mov xchg movsb or inc in mov push test sti sbb das dec callw scas cld das imul scas fistpl mov inc push push inc push cwtl aam ljmp and inc jnp add mov cmp push add std push cli dec and push dec add add jp mov jae cltd cld mov dec mov and pop (bad) mov and adc jbe cmp adc sti fs (bad) in inc add ficomp data16 mov jp mov add sub rcr mov ss xlat mov jne nop das xchg mov mov rcrb xchg dec pop and jle sarb add fild mov xchg push test jae enter or pop mulb test mov lcall aad push ss sbb test sbb jne stos repnz loop jae or or pop inc incb xor adc cmc lret xchg ds jne decl lahf js sbb push daa fucomp or (bad) es jecxz dec int3 jae movb dec sbb add mov dec cwtl ljmp mov mov les aaa (bad) (bad) mov inc out mov mov imul and inc ss lds (bad) mov rol sbb jnp and or inc jb xlat adc sub dec enter add cmovne sbb lret mov cltd cmp sub sbb shl push and sub mov out mov and sub pop pop xchg or cli and (bad) adc aas popa cmp lret mov mov cmp push shll add dec xchg lea dec cmp pop std sub rorl insl out stos add push lretw decb cmp orb ss ds imul loopne add out dec dec hlt push or add push pop xchg fimul mov mov sub jmp or arpl lret lcall mov mov iret fistpl popf sti fcompl sbb das adc cmc inc in or lods xor sbb loope inc shll xchg (bad) std insl fisubrl das inc ss data16 xor mov ds pushl outsb mov pop dec scas nop xlat ret xchg adc xor pop inc dec pushl popa nop shrl ficoml or sub lock inc cmp adc mov je pop leave xorb fldl mov out popa mov add out scas dec sub push and push pop std insb jl notl sub xchg sahf xchg pop sbb (bad) aam and mov inc xchg and loope test add pop rcrl nop fwait cld mov xchg aam das ljmp cmp inc fiaddl xchg jl push (bad) int3 xlat int bound xor push dec jnp test mov lcall sub xchg and xchg sub push ds insb cmp (bad) inc inc es jge (bad) push add xor jbe mov cmp dec mov and arpl mov out in imul lea adc stos inc sbb push xor imul inc fsubrl out lret cmp sti jae cli sub xchg pop leave mov ss cmp xlat add mov ret sbb mov mov jg adc cmp subl adc je addl add lcall add lahf pushf lea cmp pop push mov sbb jno jne mov pop loopne in pushf pop shrl push leave push addr16 or clc aad loopne pop pop jg (bad) push cltd mov add add cmp jmp or cmpsl inc mov in fwait pop sbb ret mov add iret insb ret int sub mov sub bound jmp and dec push aad out (bad) nopl xchg stos into (bad) lret ret test push push cmp out aam pop pop sahf andl out loope lock xor lods ficom adc les or repnz jbe ss xchg xor ret add jb mov mov sbb cmp add jo mov push push mov inc std jb test movsl rorb roll outsb pop add mov mov mov xor imul ret loopne addr16 jnp fsubrl jne in aaa jl mov out xor mov inc inc js inc cmp lahf and inc fdivrs mov xor jmp cmp sbb jb xchg jge sbb xchg das orb cld sub sbb jp jnp jns xor dec leave dec cmc andl imul arpl mov movsb mov cmpsb xchg push inc out les or sbb pop sub pusha arpl in dec test mov or call pop or xchg pop push cwtl xlat push xchg icebp pop dec and or cmpsb cmpl out jp xchg cmpl lods out or sub add add xchg and pop sti loope xchg add repnz dec jle jg enter cld addr16 xchg mov mov cmp sbb xchg or in out mov push mov jp into mov dec cmp sub leave sahf push xchg aam int loop imul cld push mov fdiv dec push testl add je cli pop inc (bad) cmc fidiv pop ss je loop or jge inc mov xchg push dec xor jno add mov loop push loopne push adc int3 xchg sahf inc xchg sbb in add jl cmovle aaa lods scas dec add mov cmp adc inc stos insb mov test sub xchg add out ljmp out dec adc leave add data16 add add mov loopne lock adc (bad) jmp push cmpsb idivl mov nop adc lock jle movsl andb lea rcl pop data16 mov mov mov sub sbb push mov movsl mov mov es adc sbb in push cli add data16 fcoml fistl std dec and insb sbb mov adc and iret xor rorl cmp mov sti (bad) and sub loopne in push scas pop imul mov mov test lods (bad) setbe (bad) mov mov fst push divb ja or mov gs (bad) in push add xchg hlt dec add adcl xor pop js jge jle xor pop or aaa std imul add fnstsw insl or shlb mov push (bad) movl rcl les jl stos jp hlt sub clc jo pop xchg stc mov push cmp in inc mov aas push jmp subl sub ja jmp outsl sub jge fist sub xorl (bad) mov imull mov mov fucomp xor pushf and cmpsb fcmovb push bound stos xchg nop adc sbb or xor loopne cmp xchg popf pop lock jecxz (bad) mov or ret add mov test jg mov or jne sub loope std and mov jns nop push sbb fisubr cmpsl js sti mov and movzwl je or fdivrp sub (bad) cmp and jnp les js dec pop idivl (bad) cmp data16 bound add lret in add out sub xor out or push sub jns jbe lret cs (bad) hlt push (bad) pop insb je cld sub insl sarb rcrl inc sbb sub mov pop hlt add mov mov pop popf dec inc imull jb ja dec add xor out jle das mov xchg sbb mov xchg push int3 popl xor loop sub jne lods cli test in ja clc inc loope test enter or stc xchg gs xor add mov das sbb jle inc dec and dec insl mov iret sbb lock jnp jecxz in dec (bad) dec inc cmp mov pop add sub repz and aas add ret sbb lahf test or je fist jmp mov pop enter mov sti lret or add js aas (bad) dec ret fsubrs repz mov lds insb jmp imul mov add shl push in shrb daa push (bad) jne in fisubrl (bad) xor pop sub fs mov push outsl insb cmp add push leave pop jne push mov push aad pusha cwtl mov inc orl fwait cmpl inc (bad) and (bad) xor adc dec mov repz in pusha mov jl adc jl and scas cmp lret inc fs mov mov ret scas cmc dec dec adcl and mov sbb (bad) jle and stos adc in dec push mov (bad) sbb out sbb mov insl mov dec dec hlt xchg aaa mov fdiv addr16 mov xor faddl in dec addr16 xor xchg jae mov lahf fstl dec mov outsl sbb and aaa or out pop push mov add popf bound add das es push in pop addl push jecxz mov subl jb int3 add pop movsl mov enter push xchg iret inc fisttpl pop scas outsl pop dec sbb jb mov aas xchg jmp test mov push add pop xor cs paddq inc add inc jb cld std dec rclb nop push mov dec adc in sbb jae mov arpl out xchg xor (bad) in sar mov je movsl xor icebp rcrl cmp scas pushf mov movsb cld jno or stos out (bad) cmp call in subl inc arpl ficomp pushf movsb popf es xchg cmp or push add shl test mov loop (bad) stc mov mov popf add push xor jl mov mov lock into adc sub sub mov out mov xchg lods mov ss (bad) pop (bad) sbb mov std mov sub add or cs lods das mov js add pop xor jae dec or or or sahf inc adc mov push mov jbe mov (bad) adcl repz (bad) rcll das xorl aad push lret mov push or ret imul pop test push inc aad fwait ljmp (bad) mov fs mov jae pop sbb inc bound mov stos dec adc xchg lret sub adc sbb xchg test jg les in dec mov cmp jge stc push in adc add clc mov push fdivrs fs push scas loop cld ja loopne lock (bad) sbb and outsb cli fistpl scas mov loope pop add popa add ret out sub pop jecxz cli mov cmp push enter (bad) dec add ljmp int popa ret test pop mov or movsl bound insl or aad in ret into into add mov mov or jp and or jmp fwait sub adc int3 shrl sub aam inc push mov mov dec fmull fbstp mov cmp lahf push cmp inc test adc lcall pop lock enter stos inc mov fsubrp jbe rol jb icebp add mov test and ret pop jb pop pop sbb or icebp xchg pop test loop xor mov pop xlat jo int data16 (bad) xor xor lcall cld in test (bad) or pop test inc cmp push std in je shr fucomp sti push scas dec test xchg jae mov cli outsl jg add stos nop test cld jecxz flds jbe mull in cli add pop push pop hlt pop fdivrl sar movsl aas lock pop xchg inc pop arpl xor push push mov int3 sub lods inc nop clc xlat pop dec jae pop adc dec leave pop lcall cmp lret fmuls dec fwait stos cltd jl cwtl mov rolb stos sbb test rcrb push sbb mov add (bad) cmp lods enter dec sbb cltd pop (bad) mov mov mov (bad) mov or in movsl arpl add mov inc cmc out mov fwait mov sbb fidivr pop jo cwtl cwtl lret loope (bad) std lcall add sahf out mov ljmp sub dec mov sahf mov out mov push mov dec enter lock test jae je lahf push lea jmp push dec insb push push (bad) arpl add lcall jno xlat lret cmp out inc inc add daa dec add pop dec xor and push out addr16 push ret stc addr16 pop cmp jnp arpl mov cwtl adc xor mov mov and mov jb mov mov hlt sbb lods ret mov and pop add push clc mov inc sub jle push xchg outsb push sbb mov cltd xchg cmp pop enter jae scas sbb push loope or xchg fldl adcb shr sbb sahf arpl or pop loopne jp xor mov dec subb mov inc shl sahf jno lret push cmp push movsb popl adc ret inc jge stos xor pop in adc xchg (bad) mov mov push lahf stos jp (bad) jmp stos movsb in adc jb in add popa data16 leave inc imul push fdivl xchg jbe add fist mov ds push mov jno jl push aam jnp pop es mov fnstcw xor das mov inc leave mov cli mov repnz scas adc loop cmp call data16 or cmpb inc push je pop lods sbb mov in popf divb and pop fsubl mov xor out mov loopne fwait xchg jecxz fsubrs (bad) in adc inc pop cmc sub inc or arpl mov xchg dec jl inc je mov sub xor movsb sub mov jp scas sbb stos sbb cmpl leave in scas mov and in sbb lret (bad) sbb sbb cmp cwtl xchg jno xor inc and pop jo call mov xchg lret (bad) xor mov adc fildll insb insl stos adc inc ds push outsl sarb push in xor fsts cmp and cmp mov out ror jbe adc or lret (bad) aaa xor sub sub lret sbb ret xchg push push cmpsb adc xchg lods enter sub popf adc loopne fsubrl mov mov add jne dec mov call mov movsb xchg int or inc xchg push push adc movsl inc (bad) xor sbb pushf lahf xchg and xchg cmpsl add negl jecxz lds (bad) iret sbb cmc iret dec dec sub pop ficomp jbe das adc lret (bad) cmpsb test adc jnp cmp movsb xchg sub xchg push fisubl push xchg mov out cmc push fnstsw call and mov cmp xor xor je pop sahf gs rcr scas mov pusha incl dec adc into daa mov es cmpsb nop jmp cmp lds popf inc mov xchg (bad) push outsl les mov rcl mov push subb das adc cmpb sbb push imul pop mov test mov and pop ret pushf lods pop jo pop cmp pop add cmp cltd jno fwait jns dec repnz jne js aam xor stos mov mov jno stos jnp js push cmpsl jle or shll lods frstor stos lods jg sbb adc insb cld push sub in neg push push scas push pop mov or jae das test fcmovu stos in dec add mov (bad) repz inc aad test jl fcoms adc in jg das dec bound faddp scas mov mov (bad) xor sub push call lds fldenv add scas add push pop jnp mov inc cmp sub and fistl mov out shll js pusha add adc test add mov cmc nop sbb fcmovnb js clc das movl lods push int3 sbb (bad) ds (bad) cmp jns fisttpl movb nop dec mov adc xchg test out jle ja xchg inc adc sbb mov cmc lock clc or dec aam xor popa pop (bad) into xor jmp sbb mov add xchg push sarl out mov fcoml mov dec or mov nop imul notl cmp rcr stos xchg (bad) lods inc arpl test (bad) jecxz push jle adc pop (bad) iret into push or mov test insb clc cmp push iret add in or call shlb fidivrl addr16 add inc into into jg sbb mov mov gs aas and inc scas push sti ss pop pop lret push lret jge ret inc add push in mov dec bound push sub mov popf ljmp xor or aas sub cs out sub jno sub adc cmp (bad) jnp lahf and mov into outsl inc push mov cld insl xor xchg lock movsb int loope dec (bad) cmp clc imul push cmp mov js jg jge jmp cld mov movsl movsl gs cmp in mov pop push mov pushl stc shr dec lcall inc pusha jae push and push inc in into cmp loopne and xor or xchg cltd xor inc dec sti (bad) push (bad) nop mov sub xlat mov mov or insb mov mov adc test xchg test cli sub mov mov data16 cmpsb rcrl sbb imul and xchg cmp sahf or jmp mul mov pop pop outsl add adc jno loop pop bound xchg or cs sbb int3 xchg pop negl mov push lret pop mov pop pop add insb sub push push mov jl cmpsl xor mov aaa fdivl mov inc mov iret fwait std push setl mov mov clc je pusha movsb jo push (bad) (bad) jmp fsubrp xlat loopne mov sbb pop scas inc leave fisubr jne or sub test lahf add cmpl push jb stos (bad) cs shr and push pop pop dec lretw jno sub nop sarl jge mov sarl push dec pop adc jbe cli sub imul ret jl lock sub dec mov ficom push sub and or adcl enter pop ret data16 lcall and frstor mov (bad) xor inc mov imul icebp sbb rcrl int3 push pop popl (bad) push dec and outsl pop push and mov insb sub mov dec fwait cmp sub xor lea cmpsl popf sub fmulp icebp cs das adc fcom xchg stos pop jmp xchg movsb bswap test add push inc push (bad) mov cld jmp psubsw cs loop xchg pop cmp xorl test or lcall pop push mov cmp add push lret inc jecxz sub lcall decl (bad) xchg mov ret push lcall jbe mov sbb sahf xor dec rcl stc movsl inc jecxz add fimul (bad) cld cmp pushf mov insl add (bad) out out xchg or adc inc ds add and xchg xchg sbb add clc mov jle repz add fwait out dec iret push loope pop loopne lahf insl xor xor sbb inc ljmp ret xor faddl xchg push xor add xchg and test adc add fxch loope ss push mov sub in push (bad) movsl inc sarb or xlat cltd ljmp pop jmp in mov add loope jne addl inc mov mov pop roll mov pushf or or jmp push jb out cwtl int xchg loopne sahf rcrl pop add sahf xchg xor test cmpsb int3 incb and mov mov je jns and mov cmp xor andl jle lret sbb fs call dec cmpsb mov arpl sbb cld aad setle mov push and mov icebp shr mov mov orl test mov pop adc fidiv es lcall insl xchg or bound adc movsb mov add xor int3 pop and cmp and inc and test sub or sarb loopne inc test jp and add jle (bad) shr cmpsb push adc lret ja sub sbb aad mov sti mov loope fwait popf rolb cmpsb fnsave inc push or adc out rclb push inc sub in push in fistpll jmp adc jbe or out cmp cs jne xchg (bad) (bad) (bad) add push jo pop ret push sbb fcmovnu mov addr16 call loopne sub mov dec loope dec lahf pop pop lcall pop dec in mov ret mov mov push int bound and outsb sbb and inc aas ja ret push scas xchg sbb lds fsubrs insl test cmp daa fstpt xor dec adc or stos rcl sbb jp or andb test out es or push mov out fwait and cmp adc fnsetpm(287 fisubrl f2xm1 test dec addr16 or xchg rorl sub cli (bad) ja es inc cmp and or xchg sti lcall cmpl repz test orb lods dec pushf cmp outsl pusha xchg out dec inc cmp std test sub fistp sbb sub in arpl xchg xchg cmp scas sub xlat xchg or sub dec cmp lea push add mov lret xor xorl push aam dec jl sbb notb (bad) xor pop out in mov or mov (bad) push jb xchg mov inc pop and add enter pop or stc jnp jne push pop clc xor pop inc pop lock xchg sarb cli fistl sub sahf adc xchg jae imul lret xchg pop out clc pop sbb in (bad) stc mov das mov repnz jns in (bad) push fildll jbe cld popf cmpsl lds pop push pop outsb pusha push push mov rclb mov or sub mov jae ja das outsb and icebp push push (bad) push inc (bad) pop stc out push push push mov sub fild adc sub fwait pop jmp cld jno aad cmp xchg enter inc sbb test popf cli sub popf (bad) fcomi xchg mov lahf sbb jae popf ss mov pop pop xor pop test mov fwait jl aaa in mov int3 mov ss jg jmp mov cmpsl loope test and add adc xchg jo in cmpsb call adc cwtl cltd sub mov dec sub mov in jne ds (bad) nop loope,pt or mov insl mov aaa jb inc mov sahf and mov (bad) outsl hlt mov sbb das lods jp adc mov lock inc in sub mov dec lret mov mov sbb add pop push jmp and or dec jb cli sub mov clc xor aam or imul push in mov mov insl (bad) lods popa loop addr16 dec test adc loope add and inc sub and test daa mov sbb mov pop xchg xchg and or mov or stos push push ljmp add insl pop insb inc push dec jbe out je out xchg lock inc inc pop fildll jne stos push jge mov pop xchg bound lahf jne int fwait cs gs jo dec pop repnz push xchg inc adc sbb out push pop sbbl leave loope push out outsl dec int mov mov aam add jns rcll inc fptan sub (bad) stos int3 scas movsb sahf cmp xchg data16 mov mov in jmp xchg lea mov ret pop sub ja das sbb or mov mov inc (bad) ret inc jne pop fsubrl dec push mov cmp daa pop xor std lcall outsb mul dec jmp (bad) xor repnz loopne push rcl jo daa xchg js int test (bad) loop and adc lret xchg add pop adc dec jmp popa xchg jge mov cmp call movsl sbb pop inc xchg jne nop sbb in shl and movsb mov jle lea pop jmpw or loope insl fist into out and shrl (bad) fucomp loope fisttpl sbb jecxz sub add inc push mov jp pop pop (bad) aaa (bad) repz ljmp xchg cli or xlat push in mov stos mulb in add xor mov push adc xchg or lea xchg xor es les or mov shll std fsubrl js in pusha mov outsl jle,pn add fs and mov fmul jne (bad) xchg insb (bad) repz push xchg dec fwait mov inc or jnp push rcrb add fldl jb test out sub jp sub cwtl push xchg ret addr16 scas fwait pop mov xchg adc or fwait mov lods rcrl out mov or and jne insl aas cmp adc loop (bad) loop inc enter cmpsl xchg shrb jo movsl rorb jne mov dec ror jg mov jle inc push cmp pop outsb sbb fs inc mov jle lret inc jb xlat mov sbbb jne or pop mov push xor adc adc xchg or push testl and stc arpl out sbb mov mov pop or add push lahf jae cmp inc cltd and adc xchg cs mov sub pop mov pushf mov add ficoml mov cwtl push mov push cmpsb mov out or int in stos sub jp imulb pushf test cmp hlt sub mov xor adc gs inc sbb adc and fs pop mov adc cmpb mov imul add in ret es add fwait cmpsl adc push add adc int3 (bad) jae sahf stos add xor ljmp aaa fisttpl jle ficoml out jns mov or outsb xchg or fidivr fisttp and add xchg dec clc loope inc insb js cs mov and bound arpl ret nop test fimul add pop push inc mov fnstcw push cmc fstpt ja xor adc fcomps jle mov sub xchg iret test xor repnz fs push adc ds lods jb jge add pusha cltd mov mov push or mov ja push mov psrlw rcrb jb outsb in xor fwait pop pop out mov mov es and jle lock sahf cmp push test or xchg push xor mov add pop lods jnp cwtl (bad) data16 adc stos popf sbb (bad) pop fs jl je lahf (bad) aam outsl call in pop cltd xor in inc sub sbb xchg mov cmp mov mov mov std mov icebp xor mov fidiv js pusha ss icebp push xor or aad ret (bad) xor mov movsb leave (bad) inc xchg inc iret popf pop call rclb shr inc xchg test or xor mov mov or cmp fcmovbe mov nop fisttpll imul add dec hlt imul mov (bad) test sbb sarb cmp push enter mov pop jo jmp fldenv push sub test insl into dec dec ret lahf jge roll orl roll fild push dec aam dec fwait es jmp sub sbb push mov and mov loopne cltd fcomp lea and add mov js fwait negb cmp mov imul xchg dec getsec or gs pop push push cmp mov pop lea inc icebp mov mov and jno test stc cmc lods arpl mov jno or dec or jge xor and cltd subl int cmp push push sub and ljmp or loopne jnp stos iret mov sbb lds push divb test stc icebp insl push repnz xchg cmp sbb icebp scas cmpsl and jg and and sbb rolb (bad) dec sbb dec outsl xchg cltd or out addr16 jns sub lods mov inc jnp rclb or fcmovu dec jne pop dec dec lahf out xchg loop dec jecxz (bad) cmp mov sbb jle icebp and addr16 mov nop xchg mov lret rcll sar mov aaa xor xlat and dec outsl xchg sarb imul adc mov jbe sbb outsl xchg sbbl lret inc jg cmc std sbb mov pop ss movsl cmp sub in mov xchg add pop xor cmp mov inc les in je cmp sbb jmp pop and in out (bad) pop mov pop cmp jecxz je jne adc cmc loope pop (bad) fiadd imul pushf scas movb addr16 hlt inc xor jp ficoml (bad) hlt jae lds dec lock mov push push sbb dec fimul ss adc or in adc or in push pop sbb es pop sub xor sub iret cmc pop out push stos mov cmc mov outsl pop scas inc imul dec pop loope in jb push add sub push xchg cmp jno ret xchg fldenv jp pop inc fiaddl gs cmp outsl outsl lret add push call mov inc scas aaa ja cmp add in and mov and out jmp pushf ljmp mov aad jl push pop jl add pop inc jb pop xchg aam and jnp xor cmp sbb add sub pop or or sub inc cld xchg mov inc pop outsl mov adc hlt sti mov push sub jecxz mov mov pop test adc mov cld aad ljmp xchg mov xor mov (bad) dec jmp xchg and push lds push faddl stc or xor fcmovne mov cmp push dec cmc and sbb cmpsl jecxz sub shrb xchg movsl cs cmpsl fimull leave pop bnd sub scas rclb mov push fistpl add xor addr16 push pop scas test jb cmp cs jnp lahf les push out out imul repnz aad mov bnd enter sbbl outsl sbb shrl cwtl fwait sbb lods stos xor loopne inc adc aas test push and lods xchg xchg push negl lods push dec fs add add fsts nop add movsb cmp cmp jp pop inc add addb jge xor jbe inc js negl inc mov ds aas mov ds and sub mov out imul xchg bound jmp shll jmp lea mov lock mov push (bad) fmull sbb mov mov cmp jne mov add add movsl ljmp data16 insb mov test stc xchg xchg movsl scas pop mov data16 mov inc push or pop adc add mov push mov (bad) or mov mov xchg pop or push mov dec bound add outsb lea lcall mov mov jp dec es mov jl push daa mov pop cld cmp les pop lds push xchg clc add inc pop mov push pop adc push add insb or (bad) fisub (bad) aad mov out push addb xchg es notl add sub sub dec es pop mov in dec sub or inc lods das xchg rolb dec sub scas push fs (bad) mov in mov and add (bad) push icebp jnp int3 loope and gs dec jae and out cmpl movb and (bad) pop jae iret dec mov test ss add arpl rorb sarb cltd jnp jnp sti addr16 jmp lcall pusha mov movsb sub cmp mov subb imul lock test fldt gs xor inc (bad) fldl mov jmp push lods out test (bad) cwtl cmp lret and push call les mov pop scas add xor enter add cld lods (bad) call jle fs test ror sub push ss push or repz inc outsl icebp mov dec das sahf pop jnp jbe jae ja xor sbb pop add lock sub jns stc hlt movsb cmp in mov inc cmpsl iret inc insb sahf xor fldt mov out cmp cmp (bad) ficom add pusha (bad) fstps icebp test loop inc xor (bad) hlt cmpsl js cmpsb add jo cmc cli sti cmpsl divb cmp jns (bad) push stos fdiv fidivrl addr16 pop ror pop inc pop adc and sahf inc mov add mov lods mov imul mov test and cmp pop push inc mov lret shll xor adc in sahf pop (bad) iret or bound cmp cmovne fisttpl adc dec push mov mov imul (bad) (bad) mov fs (bad) jmp repz sbb dec movsl dec jg push (bad) push out jnp into jg ja push stos lcall xor fistl mov inc and push mov or push cli mov popfw test insl xor cmpsb fs and aad in inc add sbb subl aam faddl (bad) das in add mov mov loop subb gs mov fist into (bad) mov or adc xor in scas mov repz mov daa lock je or or es sbb xorl hlt xchg ljmp rcll lds dec mov cmc mov dec outsl (bad) int3 loope imul pop jae loope jl pop jecxz cli push scas mov push xorl call inc lods inc mov jl xchg dec cwtl jle in fimul sub xchg add add lret imul hlt jmp dec or test cs adc mov mov inc jmp fildl pop sbb cmpsb repz es enter sbb movsb hlt push aad jge ds push das (bad) imul add or mov add outsl call mov loopne fdivrs push test cmp jle cmc int mov mov sbb scas xor cmc sbb push int3 repnz jmp dec (bad) sbb mov add pop jo jge,pt es decl mov jg sbb pop jns pushf mov test loop push mov sbb and pop roll cmp sbb ljmp jp mov cmc lock adc mov stc and add mov ja stos lcall dec imul mov jb push orl (bad) jno pop test sbb arpl in movsb adcb push popa fs cmp je in mov outsl xor jp push or add adc jo and aam loopne ret fiaddl shll dec mov pop mov lahf aas jbe mov push ficomp aas jnp lods imul test mov (bad) dec dec sub mov pavgw (bad) mov (bad) cmp inc push fildl mov in fmuls adc cmp sbb mov push inc and push mov test in and loopne fcoml (bad) mov mov subb sbb add mov fbstp mov (bad) fs into xchg mov jl push add mov pop call sub xor fninit dec adc in cwtl hlt sub cmp pop adc nop dec mov out pushl mov (bad) push clc dec jne lea addr16 inc ret lcall and ja lds stc mov dec leave cmp mov sbb pop bound mov lahf repnz sub lods or mov out jbe mov popf repz arpl fdivrl pop lret or popa pop iret (bad) or add pop xor lock rcrl xchg loope (bad) dec add mov aad dec adc into jge outsl pop and psrld sbb push into insb mov cmp shrl aas jns push dec and and es decb xchg in mov push pop adc test aad dec mov insl lods cmpsl add lret dec popf lods idivl sbb std push xor mov pop out sbb enter popa pop cltd inc sti xchg pop into dec outsb and jno dec sbb mov shll cmpsb inc in into lea cmp out xor fmull add lods and adc fdivrl or pop jp into sub hlt jmp sarl int aas pop rolb insl pop sbbb xchg cmp rcrb sahf aam mov icebp lcall data16 movsb lea out (bad) cmpsl push mov pop push pop mov inc pop push in xor mov lahf lods jnp lret push popf inc and and adc neg fst inc push ljmp push dec cmp shlb out test gs cmc ret imul pusha gs add cltd jmp cwtl ret xchg add push ror fs adc (bad) test mov sbbb out test add push sarb in mov inc lds scas bound dec mov cmp pop in mov xor subl mov sub (bad) adc mov fsubr sbb pop jns sbb fdivl into cli push cwtl mov push js pop push adc sahf or lds fwait popf rclb jecxz movsb xchg arpl sbb cltd mov fsub jp out dec out rep movsl iret fnstcw sub cwtd fwait aam out stos sub sub or imul xor fdivrs es in cmp aas mov xchg data16 inc int aaa adc fcompp push adc and pushf scas andl nop (bad) xchg add std cmp lret jl fildl mov inc xor test xchg scas and push push movsl ret push cmc dec into (bad) dec stc xor rcl cmp shll ds pop cmc scas adc mov iret lods adc inc xlat test inc fcmovne sub adc jg lods stc mov in ds (bad) je push pop pop mov add cmp inc and mov xchg fldenv or jns xchg pop cmc xor push (bad) sbb cltd or jmp cld jnp nop mov mov lret mov xchg aad mov push jnp out cmp xchg and lret call testl mov inc xor or out adc xor jp rcrb xchg leave dec stc enter xor std push movl jnp inc add and lcall out and int or and pop rorl sbb sub jo mov es dec cmpsb jb cmpsb ficompl jg cmp fisttp fadds cwtl test push sub sbb (bad) xchg mov repnz imul enter scas rcl es sbb rorb lahf sub xor adc fldl lahf hlt movsl mov xchg shl sti xchg ret sbb popf test ljmp ljmp or pop int push inc jmp lods add push pop inc dec sub mov cmp mov aam mov cld inc and push pop insl mov test outsl fsub inc les aad in xchg lcall push push pop jl mov mov lock stos mov repnz xchg je add pop add add dec dec push bound (bad) mov sub or mov popf push push add (bad) push dec and aam insl scas xchg std ljmp hlt add xchg inc (bad) lds cli sub lcall cltd mov cmp cltd stos xor fs int3 mov add lock or stos loopne xchg js ljmp lods sub repnz xor cmpsl loop into sbb mov pop jnp push add inc pop rorl jle cs (bad) pop sar jns out fisttpll mov pop (bad) and fisubl jl in cmpsb or xlat sti pop mov dec outsb mov (bad) ficompl mov repz xlat mov aam or inc push lret xor nop and mov jle mov outsb leave popf mov loope jbe sbb push inc das ds hlt mov mov mov movntq out add add add inc test jbe imul sbb andb (bad) mov in xchg rol stos mov pusha icebp and js mov xchg mov pop fcomps (bad) and mov out (bad) iret xchg test mov gs sub sarl insl in jo leave or out add loopne ja mov adcl or mov out (bad) cmp cmp cmpl or shlb aam setns add ja cli in push js mov add ret dec sub push out cs (bad) xlat into insl xor pop pop mov fwait jecxz aam jo mov and lret fs xor adc pop xchg adc iret jbe or mulb (bad) mov add outsb push lds insb imulb push out repz xor test mov insb es es mov mov addr16 fcoms sub sub (bad) (bad) cld movsb fwait (bad) add dec shll mov pop and stos sti ss repnz pop cmpb jne popa dec jg movsb xor add movsl inc lea (bad) imul loop pop sti inc sti or jecxz dec mov stc mov imul pop cmp shrl std adc inc addr16 jnp fwait jl enter cmpsl jae adc fstps push jno add xor aad lods imul xor lods mov daa ret dec mov mov mov pop imul loopne ljmp pop cmp movsl xchg cld lret jo jo les xlat xchg or jnp mov jle add xlat fldt push (bad) jp cld cmp inc sbb mov ljmp jo lret out lahf aaa lret jb pushf or les (bad) xor pop in (bad) sbb sti aam xchg les stos movsl jmp xor dec fiaddl call xor aad fnsave mov fisubr lods or (bad) push mov stos sub jle (bad) mov xor daa fisub mov or dec or rclb mov cmpsb fstl sub in push mov aad repnz stos adc iret mov cmp (bad) adc cmp inc stos lret addr16 mov out push imul cli mov jo add (bad) ja sahf or and stos popf (bad) addr16 xchg mov mov add xlat xlat sub or pusha ds scas add add add cmp mov out xchg cmp pop inc outsb pop add inc aaa ds cmp mov cwtl jbe push (bad) call ja inc or aas cltd adc pushf mov xlat (bad) (bad) aas cmp push adc test popa clc mov idivl pop mov and xchg (bad) sbb mov pop xor dec movsb lods icebp xchg add mov jmp add lods ds gs and leave push inc rorl cmp loopne ljmp rclb or cld xchg jb sub into sub cmp dec xchg xor add mov or aam sub aaa and jp in sbb xor mov ds clc mov jmp inc jp mov test inc xor rcrl movsl fnstenv scas cmp imull adc sbb mov mov add fwait inc repz roll mov mov and xchg popa mov pop iret jg repnz jmp mov push mov sbb pop pop inc jecxz and arpl xchg sahf push xor mov push inc cwtl addl push pop add icebp inc stc das outsl movsb xor jge cmp cmp pop (bad) aam aad std jno,pn sub jb fbld cmp jno jns es jne mov cld sahf decb arpl mov sti inc sti (bad) pop in jae rorl cmp call (bad) rcll ljmp adc addr16 pop push mov or and punpcklwd (bad) lock jno test aas push outsb sub mov rcr dec mov insb sub rcrl xor scas sub ret popa jle dec push jmp popa add dec mov fistp dec sub xchg jno cmp cmp imulb adc xchg rorl dec mov pop cmpsb ss roll add mov xchg add or mov jl insl and outsb and sub lea pop sbb das jg dec js lahf sub decl xchg das fs test cwtl cmpsl in jmp popf loopne push pop inc cmc jno cltd sub or jno sub or cmp xlat stc addr16 test lods mov pop inc sub test es loopne rolb cmc push (bad) mov jle sbb (bad) je pop sub push gs sbbb repnz inc pop xchg movlps dec fs or pop ss mov fistpll lret mov sahf in push jmp je jl repnz add add fidivl push jle dec or js (bad) loope mov push inc mov fmuls xor sbb mov hlt inc mov sub sub add pop gs scas xor (bad) xchg inc aad mov adc add (bad) or fidiv sar sub xor lods mov mulb or sahf jae add pop and (bad) jne iret sbb inc sbb mov loop xchg fwait inc xorl pop clc lret in sbbl jle (bad) lock out adc mov adc sbb sub xchg pop mov sbb xchg sub gs dec scas jno fs lret mov jnp lret pusha cmpl push lods popa lods scas cld xchg cmpsb jle aad repz dec rcll xchg lcall push xchg fcompl add outsb nop jae sbbl or or sbb sarb xor test add aam clc call mov cmpsl aam mov popa mov push add push and mov mov into jg xor mov fsubrs sub push jecxz mov pusha xor inc stos (bad) xor mov sub int jmp cmpsl and test push dec les sti inc cmp adc xor xor repz push div add stos push (bad) cmc sbb (bad) movsb mov adc jo and mov cli push xchg mov orl inc int3 dec cld mov in stos shl add add in sbb pop in lea insb mov mov jle and stos mov in push push aam jns jbe jecxz xchg xchg cmp leave jae test (bad) lods sub xchg xor adcb dec jg fdivrl daa lahf arpl loope dec push insb jg xor test sub movsl sub push fwait pop jge inc or mov out (bad) mov cmp popf or dec das outsl mov mov push stos add (bad) adc ja pop jmp mov mov inc jae inc scas lds jo in test mov xchg dec nop stos jl cmp (bad) sub add fwait push push loopne mov clc mov sub mov ret leave sub out xor push dec movsb mov aas sbb adc loope sbb ljmp xor xor hlt repnz push imulb xchg lea add mov fsub addb mov mov cmpl nop out inc test push push lods pop sbb xchg repnz mov loope stos cltd out cmp mov jne or rcll push leave adc faddl mov movsb add (bad) sti lock xchg rcr shl (bad) jbe lret add ja (bad) xchg aaa sbb dec sbb ror test mov or inc pop jns xor mov push stos test sub sub xor push loop adc sbb mov sti out in push mov lcall insl je adc sbb jle pop push (bad) mov ficomp ja scas hlt inc daa and xacquire int inc in pusha aam jge inc outsb inc addb add add jmp sbb ja pusha data16 outsb jmp pop mov rorl pop push lds push jle cmp or mov dec rcll dec sub push mov ss mov jo leave aaa sub mull lock xor mov aad fldcw insb (bad) jo into jb es xor add rcll push mov sbb adc outsl push stos and cltd inc arpl push pop (bad) nop adc movsl and xlat add or mov or add std mov and xchg ficoml loope movsb insb lahf movsl js push xor imul call js hlt bound inc lahf dec inc jmp adc jmp dec repz fsubr les mul inc xchg mov loop mov cli adc cld add out cltd inc ds cmc gs push iret pushf push sub jmp mov loop (bad) repz adc fdivs jge jl dec lret out cwtl imul inc pop push cwtl stc aad adc sti (bad) adc xchg das cli add cmp jl aaa push das aaa popf rcr sub std inc dec enter mov inc insb mov push inc das insl lods push inc imul xor sbb cltd jno lcall pop mov xchg xor test mov pop dec mov mov push or sti insl sbb jge or cli inc lea pmaxsw (bad) lcall add aad lds daa add sbb aad mov fst mov pop arpl fwait out leave or adc xor (bad) dec repnz push sbb imul (bad) cmp jg adc fbstp aas fldl je popa dec jmp scas es (bad) iret xor nop ja xor push in mov and sub pop mov jns lret mov mov movsl sub nop xchg cmp ljmp test lahf ret jp inc in jmp jge dec mov push sti movsl jl sarl cs pop xchg xchg sbb out sub outsl jno xchg push dec inc inc aaa pop push xor inc outsl sbb cmpsl xrelease xchg inc fdivrl sbb xchg in cli mov hlt fild shlb outsb jnp push int3 call sub in in jmp pop add push inc xchg dec sub scas sub dec mov sbb loop push (bad) in mov jns adc fdivrl pop xor xor fisttpll push push dec movsb pop dec lret push or xchg cmp mov movsb xchg inc xchg das pop xchg movsl outsl xlat pop add loope repnz imul popa sub cmp pop ret adc mov fmuls nop fnsave test shl mov aas push out push jmp inc aaa cmp mov jne mov stc or cltd (bad) sub mov mov test dec in jl or rep cld adc ds fsts adc out addr16 movsl pop (bad) int3 and jns xchg push xor mov cmp fcmovnb scas adc and or mov cmpsb add das inc popa push js (bad) cld mov (bad) sbb fnsave sub pop scas fwait idivb mov mov (bad) and cltd scas dec mov dec xchg sub mov push aaa xor push lods xlat imull pop int3 lret inc mov cmp aam sbb and sti dec loopne lcall aad scas xor (bad) push cmp fwait (bad) stc or in stos push setae (bad) bound cs shrl sbb in or ds jo mov sbb ljmp mov pop xor jne scas add into loope mov int pop cmp inc xorb out addl push inc push adc mov dec push xor adc sub pushf movsl lods test mov lret aas pop (bad) adc push nop mov insb je mov cmp cmc testb adc ljmp test mov (bad) jbe scas stos xor and movsb sub in xor xorb nop adc bound push popa jle hlt je mov stos mov pop mov rclb add jecxz adc cmpsb mov mov jl jmp jno out xor jle mov mov or cltd nop lods jle cltd xor mov sbb push and push dec pop aas dec dec icebp lea insb cmpsl xor jg xor mov adc push mov cmpsb jl out jp pop add fcomps cmpl push sbb pop sbb jmp cwtl cmp sbb xor adc pop (bad) call ret mov enter add push mov adc mov stc xor jge es out add repnz cmp aam aam lods xchg or pop repz xlat pop popa sub mov lods mov adc in scas je js sub xor ja lods push add out out popf and mov dec in pop repnz add enter add add pushl popfw push mov jne mov add hlt add loope fidivl xor (bad) (bad) jno inc lods sub mov imul push lods sub adc jne sub (bad) push (bad) fcmovu mov loope pop pop int3 add scas cmp mov dec pcmpgtw test or call pop movsb mov repz sub stc dec add push push cld sbb inc je addb test cwtl cmpsb int3 fldcw pop int3 pusha js fucomi dec sub mov gs std mov jae pop add cwtl cmp insl or andb add cli mov add or jmp push repz out and dec rolb push xchg sti jns lods fwait cmp lds cmpsl jno add (bad) sbb jge sahf xorb lods sti xlat divl daa int mov pop mov (bad) outsl jg int3 mov stos daa pushw fldenv push xor mov ja xor jge cmp or xor sbb sti jmp ja jp cmpsb mov flds movl mov and mov mov sarb sub sbb lahf mov push xor and popf xchg lahf add scas pushf sub or sar and psrlw (bad) negl stos inc sub mov and int3 cmp loope or inc xorl std pushf sarb movsl xor jb inc cmp (bad) (bad) push pop add or or mov sbb insl xchg or mov add addb aas xor inc lock push ja mov lds hlt cmp in dec cli cmp xchg cmpsl mov pop cld flds xchg add popa mull mov adc sub popf cs insb adc cmpsl push dec mov or sbb xor scas cltd push mov clc sbb (bad) cmc aam aad and sub adc in sbb sub inc out pop sub adc push subb dec popf ret aas mov pop jge mov out mov mov int int3 bound test ljmp mov andl out (bad) icebp fwait (bad) mov and jnp (bad) pop jb addr16 imul jle outsb cmp inc ret stc insb jae stos fmuls jns push mov mov push xor inc push pushf dec add out cmp add mov add rcl aaa xchg add ret and xchg xchg jle mov sub jne sbb push jae xor data16 dec jbe adc or (bad) and ss mov mov mov (bad) sub pushf add scas test in cli cmp jno mov sbb inc movsb pop popa stos mov bnd aas aaa out xchg mov test and add clc es shlb fmulp or jae inc pushf jae roll and dec aaa lret mov and jo mov xchg jbe mov out or xchg sbb jo test cwtl adc xor addb xor push ret decb xchg gs dec jmp inc xchg pop push add movsb arpl xor (bad) pushf and (bad) cli stos or jl add dec jae inc (bad) jno dec mov insb icebp das pusha loopne jne and mov jns pusha lods movhps scas jecxz or jbe sub popf stos xchg xchg add popf daa pop stos cmp dec lods mov mov adc (bad) pusha or in aad je insl sub or xchg sub inc fwait outsl xor dec cmp cmp mov mov fcmovbe xchg pusha outsl out adc fnstsw and add xor mov xchg aad inc jnp inc enter sub pushf mov mov std add jnp sbb (bad) lock inc insb adc mov clc sahf cli sbb or dec enter sub sti mov imul (bad) popl scas out mov orl inc out pop movsl daa decl xchg mov inc adc xor cltd push mov push mov fwait jno lods (bad) repz jno int mov sahf jae push mov inc aad icebp add mov notb cli push loopne dec loopne and xor in popf dec add xchg imul add or push ljmp das rclb and je lock shlb ds add inc xlat push test pop pop ret xor cmc notl adc movsl arpl iret pop and sbb and iret sub rorl cmp test jns arpl cmp mov pusha push mov cltd aas cmp cmpsb mov inc addr16 fninit inc inc out mov add cmpsl fmul dec mov xor in in pop push sbb jecxz orl ret xchg add lea inc jns stos jns mov iret pop in jno sub mov out xchg xor addr16 sbbl pop lcall adc add inc enter mov cli mov fldt sbb ljmp sub pop jmp mov mov push add sbb insl pusha jbe mov es xchg cmp pop xor mov mov mov js bound cltd adc ds shlb mov inc push rol and (bad) sbb icebp xor es imul out ja adc aad pop movsb (bad) in lahf xlat mov ret xchg cmc movsl add cmp push cmp add or sub jo daa test cmp push or repz pop and jmp outsl mov adc andl pause shrl popa les fcmovne insl inc sahf ret (bad) mov and test dec add dec (bad) sbb popf pop fs jmp mov hlt out leave or loope sbb les add mov int3 mov pop cmp js fwait and pop pushf and fwait das dec cmp movsl xchg adc inc inc into in outsl mov mov mov xchg sbb (bad) sti lods call xor loop xchg add adc ficoml outsl jns mov test sub push pushf and mov stos out hlt mov mov ret pop add cli or fisubrl std iret arpl push dec mov xorb dec or pop out pop dec mov mov imul incb adc xchg mov jnp subl jmp xor add std push xchg inc add add or lds mov or pop das jg cmc scas xchg cld inc jmp mov into add scas mov addr16 es cmc push jg jae movsb push pop inc fwait lea push (bad) jmp add fwait dec lods ja xor add add sbb jl in cmp add inc out xlat cs mov inc pop xchg adc stos dec push lock call push xchg outsb mov das jmp (bad) std mov xlat lret or ret movsl ljmp cmpsb mov push repnz dec jae hlt pushf dec outsb mov push adc pop xchg jb dec push pop insb movsl les add loope add jne jg push fwait stos xor mov aam add lea dec cld or mov mov (bad) dec dec out ja xor xchg hlt lahf push std xor adc roll mov nop xchg popa pop loope jl xor sbb jp mov add push xor (bad) fcomps mov add repnz add sbbl add pop xor pusha dec dec data16 and push loop popa ss clc loopne push in sbb sub in (bad) pop pop jmp and adc xchg mov cwtl mov inc hlt add aaa int3 stc xlat insl movsb xchg mov cli inc pop outsb leave xchg sbb dec push dec call ja call mov xor mov xlat add fist mov arpl mov cmpsb fldenv rclb arpl push pusha daa jge or ss xchg fwait es mov mov movsl cmpsb dec xor and ret adc icebp sbb add aam or add or jl push gs subb arpl dec jle mov cmc pop pop aam push jp xlat jle xchg dec xchg loop adc dec pop out outsl std outsb push inc mov test sub push mov inc sub mov jmp lret sub mov into sub jge xor sub jg xor ja add out in insl xchg xorl fwait pop sub sahf out stos rolb xchg mov fidivr in xor and icebp shll xchg loope add imul pop test movsb fidivr add cmpb mov fwait adc idiv add xor sbb (bad) and mov flds ds imul aaa pop sbb bound xor add sahf mov mov xor test call or push int3 lods ds aad cs mov mov push dec rclb add inc gs cli xor int3 test mov xchg adc or cmp jl jp add cli xor movsl push adc cmp aaa in fbld cmpsb pop jle cmpsl movsl xor enter dec lret adc cmp cmc dec xorl pop js negb adc adc mov jnp fiadd imul and jp lcall push inc adc mov popl lock ja gs push fisttpl cmp out jle lcall (bad) out divl rorl dec cli sub lret dec loop (bad) outsb adc imul enter fisttpl mov shl xchg (bad) dec sti xchg das dec (bad) jl je test or mov xor (bad) (bad) jno jno movsl stc data16 enter loop (bad) xchg imul and xlat (bad) xor in es fdivr test test fs pushf dec jg mov leave stos daa cmp mov out inc mov ror sbb push jp out icebp cltd dec add lds add inc add sbb cwtl push and xchg or lret mov xor add dec xchg pop pop mov mov xor lock mov lock repnz ss lock and into inc test rorl pop in pop jmp shrl out sbb jge addr16 and pop adc mov and lcall push sub mov mov jne xchg ljmp xor mov sbb js lock add jl pop xor xor and out int (bad) test rolb push loop push pop or xchg adcl rcr mov lret pushf jns adc inc pushf mov test mov inc jb aaa scas mov or (bad) push (bad) movsb sbb out push fcoml mov mov mov pop iret xchg cli (bad) mov mov add mov add imul push sbb sub cmc cmc xlat ja call rorl stos mov lock outsl cmpsb aam fwait into sub (bad) fwait mov dec lret scas pop adc mov cs cmp pop cmpl out cmp inc and out notl push mov adc xor inc lods pop fsubl push hlt cltd or sbb insb push (bad) xchg push stos sub push (bad) sarl cmp mov sahf mov das movsb ljmp jp mov adc in loop push aad adc cmpsl pop mov jmp mov jns lcall mov (bad) pusha mov int3 outsl cld mov scas loop mov mov or out or xchg pop loop lods xor or pop sahf and adc mov add clc jmp xchg pop ficomp test out je xchg arpl cs sbb int3 cmp sub mov pop fldl dec sub dec adcl cmpsb mov mov sub mov sub mov and icebp mov insl jp movl adc (bad) je out push adc scas sub jecxz in xor test adc ret jge sub sbb nop xrstors sub (bad) jnp mov mov xchg fild std add mov jo or loope or jp,pt or inc adc push data16 mov hlt ljmp fwait ljmp sbb inc aas cmpsl dec dec loopne mov push mov or add push mov sub xchg inc adc movsl lea push sub jb add cmp sbb scas jae add insb mov mov mov out shrl sub rcr jg insb dec jle stos test in sbb fisttp inc cmpsl scas fsts mov cmp push sarl mov mov mov cli push test jnp lds or mov and adcl daa push sbb and aas arpl mov ja das adc insb mov (bad) hlt push push int movsb les jno jmp fistl (bad) repz adc div pop repnz add data16 out loope fcmove loopne ljmp out adc inc scas insb mov lods push push lcall fstpl push orb insb sbb dec add enter jmp or in dec mov popf sahf add and jne cld jbe inc nop push add xchg mov mov shr and imul call ja pop scas sahf out jp test (bad) cmp subb jne adc pop push out mov push pop inc in inc jne mov push add jl xchg mov and xchg pushf ss pushf ds cmpsl xchg in pushl push int js adc loop adc stos adc xchg jecxz and test inc fcmovb mov iret mov xlat add fwait mov jge insb stos adc jl fidivl dec faddl or mov dec iret test and (bad) pop jecxz mov push xor sbbb push pop shlb mov push js push xchg int3 stos mov jno add pop in clc xchg sub push test mov in popa jnp outsl dec lds xor jecxz push and ss hlt jl mov movsl ljmp aam ljmp mov adc lds in push cltd movsb mov xor out pop dec leave jl loopne lahf cmp sub jp hlt mov mov icebp mov mov push or add addr16 movsb shrb dec adc lods daa (bad) jae call sarl mov dec jmp cs call adc ret xor out jns aam imul je and cmp push pop jg (bad) call out nop xchg bswap outsb scas loope dec mov push xchg cmp pop push xchg rcl push xchg orb outsb out stos insb pop mov cmp stos push ljmp push mov sub cmp sbbb cmp sbb mov test dec jno js push faddl inc mov add aaa pop sbb sbb or xchg xor fs xchg lods mov (bad) int3 or inc lods mov cmpsb mov jmp sbb daa jae ret pop sbb push push cmc in jecxz jmp fnstenv int cmp outsb ror jns mov je xchg jg adc shrl jge inc iret xor push lret push lret mov in bound xor sbb xor cwtl pop xchg cmpsl mov bound or leave add shll mov std sbb scas cmp mov mov dec lods ss lahf lods out xor jmp (bad) sahf repnz mov popa sbb pushf lea pop adc add xchg sub out incl xchg sbbb inc jns pop inc push or jl push add idivl adc out (bad) std dec inc pop insl mov mov aas inc pop cmpsl or mov divb sub push lret addr16 or cmp aaa (bad) scas cwtl or nop out or aas sbb cwtl (bad) (bad) enter insb pop jns push rorb jmp add fmul insl notb mov cmp imul out sbb inc inc das adc mov (bad) hlt sub and adc das (bad) jno push dec call mov cmpsl jl mov dec push jmp adc xchg test (bad) hlt xchg mov push add fcomi sbb flds push sub adc repz pop sub xchg out out add push jp jne jns dec aam hlt adc out pop xchg shl jge xor sbb jge lods pop (bad) mov push loop inc pop lret mov and and std ret pop fldenv adc mov cmpsl push pusha test aaa lods int mov mov sub in push xor push push (bad) outsl ret mov dec lds adc jb mov dec enter cli arpl mov into mov pushf sarb pop pop sbb ret out idivb ss aad cmp push int pop (bad) ja daa add fldcw adc inc jae,pn mov and lahf jnp dec jp les add test push mov jbe outsl sbb adc push lret mov movq jecxz lock pop cld in (bad) mov cmp int3 flds inc mov dec mov dec xchg jmp sbb ret or push mov push leave mov and mov jo pop stos int mov jnp jo dec aas jbe (bad) test pop fcomip pushf adc adc aam test push jae sbb xor push jge stos cli dec xchg lcall dec hlt int3 mov ficom push rcrb or adc push xchg call popf fsubrs lcall cmp ljmp ljmp dec sar push in (bad) in adc out mov imul add mov sbb xlat mov cs insb outsl fdivp inc sub orl pusha add shl mov add daa inc push in xchg hlt movsl aam mov ficomp gs add sub push jo jle inc outsb loop mov pop (bad) jle nop aad repz adc (bad) aaa lcall cmc call and out jbe lea movsl lcall ficom imul jnp xchg (bad) mov pop shr xchg cld mov mov rcrl les xchg jns xchg imul repnz je lds add cwtl jle jbe cmpsb add popa stc ljmp popf idivb stos and popa push loop mov lea ficomp div loopne sahf cmpsl aas dec or mov xchg mov jp mov jmp cmpsl mov mov stos (bad) divl outsb or lret (bad) xchg mov fsubp xchg fisubl iret stos fsubrl inc loopne insl adc fdivs sbb fimull lret add int3 push pop or adc fnsave imul popa fwait sti and mov movsb and test cmpsb aad hlt xorb aad subl cmp shll pop inc adc mov pop jae sub (bad) aam push or js or fildl insb (bad) cmp lret insl push sbb js inc adc sbb mov jns dec lock mov mov jmp pop data16 dec movsl fldl je dec inc pop pop add sbb adc dec or mov or mov int3 adc dec and or mov ja pusha xlat rcll cld or cmp push xchg std mov pop loope ljmp int xlat mov add into stc aas sti pop inc pushl mov adc or (bad) repz jbe mov add add xchg call test mov pop sbb or mov push mov int3 mov add xor or lds push int3 (bad) jp and xlat xor dec cmpsl mov cmp loopne or lahf mov dec sbb fs scas and inc imul test dec cmp lea iret or out push mov movsl dec (bad) inc xlat push lods mov inc push jo les int3 cmpsb pushf je inc (bad) mov jnp aaa negb xor jnp add fcmovnbe push pop cmp das jne jge lods aam lcall subps (bad) repnz xor call mov cmp add adc dec (bad) iret xchg push cli dec insl ret pop dec pop dec mov movsl lahf dec mov clc pop nop bswap sub push pop leave lea add sbb inc test mov mov adc xchg sti aas popf or sub adcl or bswap sub sbb push arpl push out stos lahf out dec adc adc pop and jg mov jbe ror idivb jb adc xchg mov ficomp imul and movsb mov data16 out out pop jb (bad) xor int rcl and pop das dec jge imul pop xor push in sub mov cmp stc cs add mov inc fildll inc jl pop test mov dec and sbb clc aas xlat ficompl dec sbb or int3 scas lock xor daa sahf aas push dec test fwait xchg xor jp insb loop icebp adc sbb jbe inc cs push cltd scas cwtl aaa sub mov pop push cmp pop insb adc add (bad) push lret jne sahf ja cmp sahf mov dec fsubrl leave jb ret adc mov hlt mov nop call lods cmp dec inc nop leave adc push mov and inc mov rorb cmp xchg std dec xchg sbb push enter lea mov sub xchg dec add sbb in imul push jmp inc aad stos inc inc push ds jo or jnp sahf imul clc sub lret test cld les (bad) (bad) out enter test into add dec lea mov sbb popf jnp hlt clc insl int pop cmp xchg push mov xorl adc out mov adc dec hlt (bad) or cmpsb inc mov (bad) jg shrl pop mov jecxz movsb and out sub sbb in pop fdivs testb cmp mov inc test je mov rclb pop arpl xchg mov lods ja cmp fstpl ja xor ss fcompl cmpsb inc mov out sub sbb (bad) jecxz jmp scas jno cmpsl mov in ja gs xchg add xchg fwait pop faddl sbb inc rcl jp lods inc push into push std mov sbb push sbb aam dec out cmp xor sbb mov push dec nop sbb sbb and jo or push jno pushf sbb inc in cmp push negb arpl or push add mov aas dec insb pop in and dec jmp jns mov in stos int3 jno pop cld jecxz es xchg cmp stos or mov add or adc add enter push out add and popf cmp mov jae sti cmpl int jge mov jno pushf inc or push outsl xchg nop stos fmul and push shl sbb xchg fwait cmpsl insl add test lret dec pushf xchg inc push test mov addr16 and xchg lahf mov in in adc inc fldl cli cmpsl push pop fwait cltd cmp test cmc js xor enter push cmp cmc and cwtl test jp (bad) pushl add mov xlat outsb mov cwtl xor rorb loop jb lock dec arpl add dec mov adc mov mov stos int mov cmc pop pop mov cmp lds and push cmpl fdivrs popf xchg mov aam (bad) aam sub ret jecxz jp out ds out rorl (bad) (bad) jg das jg push out lods (bad) xchg test js movsl in xor push pop push popa stc (bad) mov xchg (bad) sahf lahf sub xchg sbb add loopne sub inc (bad) dec push ret or xor xchg jae xchg push xor imul mov pop mov xlat push (bad) sti jmp pop cmp mov xor mov add decl cs sbb sub jmp cmpsb jl cmp sbb push (bad) jg jb std cwtl dec add subl fnop stc (bad) jg test loopne (bad) jmp rclb jbe mov nop imul fcomip mov push adc mov scas and bnd loopne insl in fs inc adc scas sub and and pusha inc inc jecxz jge gs jp stos add mov jge in sti xchg insb (bad) push and pusha int xchg push insl cmpsb out hlt movsb xchg dec aam mov ja sub push arpl mov jle adc inc in xor mov adc adc call pop mov pop cmp int3 daa addr16 inc ficompl or sarl cli fnstenv push repnz iret mov sub mov jne pushf loop rol pop push dec call mov xor int3 repnz aam insl dec (bad) hlt gs lods mov outsb inc dec es sbb sbb rorl pop fs pushf iret lahf mov cmp notb fcmovbe push or adc and in xor jb push mov add andl nop pop pop mov jmp insb sub (bad) mov mov mov sbb add fcoml popf sub add adc rcrb sub rcrb imul fistl add inc sub jp sub fldcw adc jns rorb js mov xchg enter and mov mov out (bad) xchg cmp pop cmp notb adc xor adc and pusha sub (bad) jno ss cmpb xchg sub cmp add das hlt adc cwtl cmc jg pop or aam cmp in cmc pop push in (bad) fldenv pop sahf sbb nop mov mov into js push or jno lods lods imul lcall fildll ss shr sbb dec mov popa lret popf pop push fadds inc leave iret jns stos mov nop sbb icebp or mov inc popa lcall nop out xor jno negb lret fiaddl pop in mov lcall adc cmc outsl popl or imul in and stos sbb insl push pop push jne (bad) cmc nop fs push fnstsw jle aaa loopne pop sub mov imulb adcb mov xchg idivl pushf out mov xor test cs inc sarw repnz inc mov fcom jbe pop scas dec pop dec sarl dec bound push sbb and pop jg mov sbb mov aas mov mov clc imul add repz enter cmp (bad) add sub loop incl stc js insb inc jns test daa (bad) into pushf jbe lods sub scas jo out or ja cmp in adc or rcrl addr16 lea fwait add or (bad) mov inc jge or arpl fwait mov fisttp inc (bad) enter push fdivp lret mov jne adc pop adc jge sbb mov cmp xor addr16 xor adc xchg mov popa and xor loop test je and cmpsl jmp and jecxz mov cmp ljmp sbb lret imul pop xchg or pop push loop push out jns jmp jge and std aam cmpsb rcrl mov dec xchg addr16 pop es inc iret mov xor insb sbb call sub jl ret imul pop in xor jmp divl insb inc adcl or movsb adc mov lcall enter mov jp and add and stos imul pop push cmp popf out xchg fmul (bad) leave ljmp jl aad scas mov ljmp sbb mov notl push in add push scas mov es push aam inc mov (bad) popf repz sbb pop scas pop and sub cli ss aam push jge push movsb xor daa dec (bad) in jecxz and push mov jmp or in pop xchg jnp cmpsb lcall xchg (bad) mov xadd ds xchg dec mov test push add mov jb fcoml loop scas pop sub and cmc cld inc (bad) mov cmc xchg ror hlt fdivrl push out jnp or dec and stc sub push lcall mov sbb or aas je mov insl pop jae in sub (bad) xlat pusha addb ret adc push punpckhwd adc lock ficoml fmull repz mov adc (bad) aad pop rcl cli (bad) xor xchg cmp std enter xor sbb ljmp movsl xchg ljmp mov (bad) fiaddl cmp or add jns fmulp sbb ss sbb fmull data16 pop mov adc and jbe cmp daa xchg cmpsb cmp lock dec mov imul cmp jecxz mov popa das mov xchg iret nop or inc sarb popf out push insl popa lcall jns popf cmp aam dec cmp or xor jno pusha pop jmp lcall or into dec dec mov inc add and add lcall add add or add cs lcall adc cmp lret jns aad arpl scas push cmp add aad loop sub sbb in bound adc lods inc push push pusha shll test stos es pop jg mov lea jg adc pushf rolw xchg aas jae ss imul sub sti cs pop repnz xor (bad) jg mov daa add mov imul movsl int3 repz fwait xlat push scas fsub and push mov repnz lcall repnz pop out (bad) aas mov pop movsl pushl lods push xor popf push loop lea cmc jns mov mov aam push pop sub daa sbb and clc addr16 fistpl sub pop pop sbb or sub jecxz xchg rcrb add add in mov fs xchg xor ficompl cli pop rcrl mov sub out ljmp mov ss in dec cmp pusha xchg cmp dec lods out mov pop ljmp mov pop in jo call fwait xchg xor sbb xchg lret jnp push jecxz or out sahf out xchg cmp mov lcall into xchg mov sub inc jg jp cld push int mov xchg push mov rorb inc xchg es mov out or sbb (bad) jno mov sub imul icebp push (bad) xor ret dec push adc xchg dec adc ret cmpsl scas push dec stc push and mov mov fcmove arpl fcoms negl js (bad) aam adc cwtl mov sbb add add pushf add fs mov int3 out jmp int3 inc dec fucom outsb test or dec or push xchg cmp test pop adc mov dec dec pop in (bad) dec mov xor aaa xchg cltd inc dec mov xchg test pushf sub sbb mov sbb mov paddsw sub rclb ret sub leave sti sub pop jne push icebp mov push and sti adc pop sbb mov ja mov mov mov ret sub cmp mov ret cli adc sub pop mov jl xor pop hlt fwait sub mov cwtl loop mov addl in sub mov mov or stos out dec mov in cwtl mov pop (bad) stc inc pop or cli pushf xor push pop out cs mov ja add test xchg inc cmpsl ficomp xchg es dec and testb cli or sub lock je mov dec stos adc adc sbb aaa pop pavgb int3 lock push inc enter adc inc push bound push fsubs mov (bad) dec add ss push imul aam fdivs dec cmp lret hlt fimull add bound addr16 ret mov rcrb xchg pop outsl clc pop mov out scas inc xor sub mov and in jb fisttpll push stos test fdivl lods hlt and and jge aas sub jb shufps lahf dec cmpsb gs push or push fst sbb shrb mov aas pop add icebp jo in xor dec outsb stos ja ror int3 daa xor jl add lds scas inc fldl bound insl ljmp aas xchg dec sarl mov inc xchg and push cld cmp fistl xchg push daa (bad) lea jl daa jne out pop dec fstpt sbb fdivl sarl sbb adc and add in jp and lock pop pop or cmpsl mov fs out dec int jb sub icebp loopne lods mov leave pushf jb dec jmp cmp jecxz aaa mov jne call aaa je daa ret inc pop jecxz push push repnz stc xor cmp jecxz pushf bound xor dec test jge pop and jle jge and mov jne rclb lret mov arpl inc mov ljmp mov shrb add jecxz inc sub pop xchg mov popa push pop jl cmpsb and daa sti aaa jp push iret mov int push cli adc sahf jmp lahf enter adc xchg adc mov repnz loopne outsb inc add cmp outsl xchg hlt subl jecxz jbe test gs jns pop xchg dec in dec es lahf sbb add mov push sbb aaa cmp movsb xchg movl aad jle xchg (bad) push dec jbe int3 iret sub (bad) dec push int3 imul mov dec adc (bad) movb shrb adc push jnp mov add mov stos repz add bound jnp out scas outsl cmc mov sbb lea sbb mov sbb inc push stc jae cmp xor shlb add sbb pop sub cmp push jno inc dec adc mov out pop cmc push jmp mov ds dec into fnstcw in adcb sahf stos and sbb dec push data16 pop xor sbb fcom in jmp pop jne jg pushf cmp or imul add or pop test push adc out pushf imul push clc das mov divl cmp lcall repz adc repz mov cltd jb add add daa stos jb sub xor dec cmp stos sbb dec mov xchg icebp cmp ss mov jmp xchg mov lret clc add jbe popa clc test mov movsb dec int3 nop rorb sbb mov sahf fstpl sbb dec sub add sub mov repnz mov arpl mov sub imul xchg adc mov (bad) jg pushf and mov or out inc sub out jne adc ljmp dec push cmp xor movb mov push pop fistpll cli jns lret pop mov out daa sub sub mov (bad) mov outsl dec xchg adc not loopne xor lods test outsl pop lods dec jecxz cmp mov sti jecxz pop cmp pusha push mov dec (bad) jne iret mov iret xchg push (bad) (bad) cmc jnp inc out and adc xchg pop push cltd clc ja mov mov fidivr push fs cwtl cmp dec mov nop rcrb jo test je repz add fidivrl addr16 lret les jno push in sti lret jg enter fbld movsb out pushl in pushl test les lret xchg repnz sti stc popf mov fucomi lds fcoms pop push jp mov rcrb dec nop adc push imul loope xchg test or sbb xchg xchg scas fcomps sub adcb loop sub adc push into inc pusha pop pop mov test xchg pop mov mov xchg dec insl test pushf sub xchg add into out scas sbb mov or xor mov pop scas mov outsb lret xchg pop popf ljmp pop lea push lret jg and imull mov dec (bad) pop add push in inc lds hlt jo or imul inc inc dec lahf xor push pop dec sahf jmp push sub test mov mov ss daa (bad) jl jbe inc stos push and cltd pusha sub xchg cmp pusha sar add mov sahf xchg (bad) call mov sub aaa test sarl inc dec clc negb xchg push mov or inc stos fildl sti mov pop add push aas add and (bad) outsl push std rorl in out jno inc xchg es aaa (bad) cli and dec xchg sub mov push cmp loop and adc push inc cmpsl cmpl fcmovbe xlat pop mov sbb (bad) sub aaa lods enter sub cs sub lea push cs push lods das xchg add cli inc dec cld add mov (bad) mov inc mov in cmp movsl pop fwait pop shr fldln2 push jle notl xchg and fiaddl xor sub xchg mov or pusha push ljmp cmp loope mov int mov insl push add call loop jp adc xor push pop mov add cltd sbb mov inc stc push inc stos sbb lahf jbe xlat jge std mov push pop insl cmp and dec sbb in mov bound adc mov xor std xor xor mov stc (bad) and loop call les fstl lods mov and xor rolb lcall and pop sbb pop xchg mov (bad) orb or push out dec stos fdiv fmull int3 enter movsb jp jl enter movsl (bad) (bad) clc ljmp inc pop ja xchg and jbe mov cmp xchg inc insl cmp loope imul pop dec pop pop popa in out aam lds mov jnp int ret jb sbb and sub jbe pop mov or imul les insb push sbb pop ret sbb mov cld or mov (bad) pop repnz stc insb popf ja (bad) sarl test fildl popf jno xchg cld and mov mov sbb sbb and dec scas es test pop mov lods jmp dec lcall and mov mov cmc ds pop push adc (bad) sub xlat push lahf sbb (bad) jge lret jno dec mov movl cmpsl inc sub ss sbb icebp mov inc fs xchg pop xor in and lods and cmp rclb ja push clc dec mov xor lock push cmp mov js xchg popa imul add cs mov pop (bad) sbb xchg fwait push std lea mov adc mov ljmp and (bad) cmp ds add ret loope int3 push add cmpb pop int mov mov (bad) pop inc mov add jecxz arpl lret mov sbb dec in dec add jb add mov sub cld or and cmp std data16 inc jp es mov cmpsl and mov popf in add cmc in pushf in divl push in jp xor mov lret cmp push (bad) cmpsb mov push jnp mov mov add out aas sub sub (bad) and and clc or mov pop out xor mov sbb lock cld mov dec push dec pop mov and shlb mov popa movsb mov int3 decl adc sub ret fisttp cld imul xorl sub sub movsb loope add xor cmpsl out push stos dec sti (bad) mov scas pop sub fcoml ror lock addl in int3 or (bad) mov stos mov and idivb lret lret or fcmovu pushf scas inc nop out loopne (bad) add pop jp xchg sbb xchg sar and cmp std in mov daa jnp add lea cld fsubrl mov or dec test add std mov stc cltd rolb lahf xchg loop dec aas daa test dec mov jb mov pop push xlat lods into daa addr16 lcall clc movb in cmovae push outsb movsb cltd mov cmpsl pop mov adcl sbb sub cld add js and js pop popa mov insl lret mov add push das cld jle mov jmp add rolb sti add call and je fs and or popf leave and adc or lcall adc sti lahf add dec xchg dec pop and inc push mov repnz aas or in push mov adc arpl aad and push mov scas scas add or sbb incb sbb or cmpl add ljmp cs jbe int3 xor or or mov arpl xchg jnp xchg mov (bad) repz sarb stc add je sub mov jmp push data16 pop and leave fs mov mov test sbb pop inc cmp mov lock cmp movsl jnp sahf (bad) mov movsb mov xchg jle loop nop imul jae fcomps in mov cmp cltd xor xlat cmpsb daa and (bad) bound xor fisttpll icebp dec imul xor sub mov setb ds adc mov xchg pusha ja ret sbb (bad) dec sar jmp sbb mov dec mov push xchg add bnd ret mov mov mov and test clc (bad) ret mov in out cmp xor mov mov or push cmc insl in jp (bad) push push arpl pop mov dec (bad) iret (bad) outsb mov lcall push bound sub mov push fbld dec lcall lahf into dec data16 xor sub movq scas shl inc pop and jecxz in sbb sub or cmp fbstp pop (bad) push shr sub data16 enter sbb mov sti sbb inc cltd xchg pop add loopne stos (bad) pop push loope sub stos pop and xchg adc fidivl pop cmp dec ret fucomip fmul dec test adc movsb insb dec and lods and push xchg mov pop and shlb fstps jo js dec loopne gs adc jmp add adcl adc sbb jno jns pop test jle sub mov cli in scas cld (bad) (bad) cld mov jmp and lock loope test add mov lret jb push out test fisttp into or mov sub mov pop mov adc (bad) adc cmp hlt test adc xor cmc xchg aas subl insb xchg lahf pop xchg call cmc aaa cmc shrb mov or mulb mov mov or mov or enter jae dec mul test add and (bad) int enter movsb aas dec pop ja ret mov jne and in stc xchg push xchg icebp fcoml fidivl ret lock mov repnz inc (bad) loope xchg ja push add lret test stos (bad) mov repz cmpsb ret cli xchg cmc lock jno pushf inc popa mov adc lods (bad) cld test and das sub mov mov or nop les (bad) jne sub movsl dec leave adcb pop mov jmp mov lahf inc push dec push inc adc negb sub xchg pop xchg mov pop imul mov mov sbb ljmp cmp mov popf pop xchg cmpsb mov repnz leave push sbb lods mul or inc cmc cmp loop (bad) outsl or stc sub jl imul lods cmc or push call cmp inc push xchg jl push mov inc cli enter mov xchg aas xchg jae jg sti sub fcomp movsb (bad) (bad) jecxz sbb xchg xor push lds shl lds add testl fcmovb pop gs sbb stos je dec int js (bad) dec sub pop out sbb pop adc mov add mulps push mov xchg mov (bad) mul mov sub xchg fcoms (bad) mov inc jnp rolb or fldt pop or mov jg dec mov test insl fdivl or out andl or xchg pop or sarl push imul cmc pushl into movsb sbbb mov lock add inc fcoml jl push add and xchg mov mov (bad) insl jmp ss cmp push adc push imul gs push jl cmc test aam jnp pushf and and and sub sub dec jge subl jns inc mov repz mov add jae in in jle sahf out (bad) mov or dec rcrb push and stos mov imul and das cli jns inc jl xchg movsb push or rorb xchg movsl shll cld sbb cld adc jmp and js jbe lea test sub mov call shrl and sbb popf jnp lea lock pop mov mov sub add clc and orb (bad) mov in sti nop fmul std imul push pop loopne cltd pop inc popa in mov xor bound xor sbb negl repnz inc nop push std push mov sbb cld mov push xchg cmp pop add punpcklwd in jp mov sbb add push (bad) pop (bad) push movsb aad dec data16 mov fnsave ret cmp lcall mov fisttpl lret lds in dec mov lods sbb mov mov jp jle sbb mov pop rcrl cmp jbe mov rcrl (bad) icebp out jbe jae mov mov mov cwtl mov pushf jbe inc stc movsb sbb loop mov cmp rorl into cli idivb stc (bad) hlt pop jnp jl cmp xchg sub cltd adc inc ds pop mov sahf daa sub fadd xor rolb mov pop xorl adc push clc add mov jmp and xchg add add push fdivrs fsubr js inc xor cld push jb mov xchg pop xor xchg hlt xor cmp and (bad) or sbbl repnz cmp (bad) arpl xor outsb les sbb pop (bad) ja inc pop inc js movsl in xchg cltd lock bound andb pop xchg pop dec mov imul out mov xchg sub test aam add and adc lock outsl or pop sbb xor sbb lock inc cmpsb fisubrl orb (bad) push jnp repz push mov jge push call movsb mov mov (bad) push add xchg es je mov xchg imul dec dec push call stc and jno mov es add push popa fdivl ret mov push lds scas cld jne mov jae fcoms aam stos mov add bound sub stos insb push imul addr16 adc cltd xor mov loope es fimull cltd out push in sub xchg xchg or xchg sbb (bad) repz dec xchg pop add push mov sub mov (bad) lock xchg add outsl and in pop insb out sbb dec cmc and (bad) lret push xchg stos arpl push les pop hlt sub dec dec xchg icebp lods dec hlt pop dec pop xor xor add hlt pop lock push out or je std in mov fistpl cmc mov mov adc out out cmp lea add orl xor xchg mov xchg (bad) shlb xlat lcall jnp sbb and mov sbb iret dec enter mov int pop pop loope test ficompl das popa fildl out andl push in adc (bad) in lods mov ret dec mov pop inc test inc repz xchg mov cmp roll aas mov icebp mov mov je shll adc jp outsl loopne inc sarl stos ds jns dec cmp dec nop les or fmuls out dec (bad) jp jb push adc dec xor adc cs inc pop fwait aam fidivl es cmpsl jbe jnp jns icebp sbb clc inc (bad) cmc xor dec jge nop lret cmp fsubs ja insl (bad) stc sbb jmp sbb add in add fld std (bad) (bad) or js (bad) loop mov test and mov gs adc scas xchg jg or nop sbbl (bad) mov and cld rcrb dec add xchg jecxz push inc jae dec sahf add xor jp jnp inc pushf add sbb xchg test xchg mov push (bad) rol pop or xchg popf cmpsb jmp repz lds dec cld adc ljmp jge mov daa push insb outsl pop in mov xchg es mov jg jp dec in sub xor rcrl je rolb xor sub pop (bad) xor jo lcall je movsb add mov xchg repnz mov rorl or push pop lcall cmp in scas xchg test adc cli mov inc mov inc test inc (bad) out push out iret inc add cs aam (bad) xlat sahf loope clc fisttpl mov mov imul push fsubrs stos lods add add xchg jecxz cmc xchg push (bad) mov addr16 push and dec rolb and inc inc pop adc inc adc xor sahf xor pop lds test cmp push mov jno adc mov addr16 mov adc sti ret nop lods (bad) ds dec pop cmp in sub test ljmp imul jp pop sbb out inc subl outsl cmp push jge pop aaa mov inc cmp mov mov lea lds or (bad) cltd sub add sysret xchg sbb in jae jp pop divl fistpl mov sbb pushf cmpsb mov arpl dec sbb fildl pusha adc xor mov push add xor jl cmp mov sbb push mov fnstcw push ffree outsl ljmp push and inc jae outsl repz fcmovbe inc mov jbe shll mov pusha xchg ret (bad) testb pop popf dec jns outsl les adc jp mov int3 mov repz pop sub push aas push (bad) scas dec mov je mov das inc mov lret repnz inc pusha sti mov add out (bad) mov adc into mov push push scas mov push inc inc stos mov mov sbb pop aad (bad) aaa push scas jae adc aaa aam inc add in nop cmp negb jno mov mov js add clc adc in jg dec sbb mov test sbb ficomp add push cmp into dec fisubrl mov stos add dec ret push out mov sub add dec test jg cs in jnp or fdivl enter leave outsl xor add mov push pop ds dec sbb aaa add mov push std push xchg xchg in mov lcall int3 xor (bad) repz (bad) ss scas xchg mov push ret pop mov xor out or outsl adc insb lcall jb outsb mov aaa sahf pusha mov jmp fdivl add push lea hlt sarl lods outsl or outsl xchg into sbb sub inc jbe mov xchg pop jne add add (bad) dec mov mov ret mov pop fidivrl jge (bad) std stc lea aad out sub gs fwait dec push std sahf xor inc jmp pop or sub and dec aas cli scas fist jno xchg jp pop mov pusha add mov or pop addr16 adc jo insb sub mov in fdivl or mov cmpsb lcall cltd and mov and jb jl dec jno dec fbstp mov mov rclb dec or hlt lods push or pop fdivl (bad) or stos pop out lea sub adc jle insb stc arpl and in cmpsb dec adc lds movsb ret (bad) sbb call gs cmc sub mov test and popf cmpsl mov mov dec push xchg dec stos mov (bad) add jns into cmpsl mov mov mov push inc pop inc ljmp jns add punpcklbw jecxz cmc mov lods dec ljmp sub (bad) fsubl (bad) push mov pop aam rcr outsb bound shrb and test ret pop jbe or test mov and js movb mov mov inc sbb bound mov lret cmp iret add outsb repnz (bad) negl pop and mov mov cwtl xchg jle pop cmp iret xchg out add js pop jle lcall call std dec dec xchg (bad) xor clc sbb sbb iret or in xor jne push nop js sbb jne ret sti mov mov aaa rclb mov sti sbb mov add imul aam jp inc out or cwtl hlt je inc dec lock movsl or in xchg pop lret mov (bad) jp aam or dec movsl dec jg push or cmpsb fbstp or ret add leave jbe dec pop push iret dec jge (bad) stos fidivr cli aad xchg rclb dec leave mov daa (bad) nop das push or inc roll test fsubl pop jge push es fcoml fnstcw mov or pop outsb ja in imul pop mov fild sbb loope or test jb xor mov xchg push (bad) cltd ja lret add (bad) faddl and and sbb mov bswap mov xchg and pop push cmpsl pop ja inc mov jbe out test sub jle cmc and stos xchg (bad) imul pop and sti repnz push in cmp xchg xor or in xchg ljmp in dec push nop or cmp push rol sub in cli jno xor jle push or out pop xchg sbb and push jo sarl out xchg xchg adc xor dec jmp (bad) es aaa pop ja addl xlat fstps sbb mov in loope shll mov sub dec insl add cwtl and dec jecxz shl cmp mov inc xor add mov into pop and pusha popa int ds jo lret pop jb mov rcrb pop movsb pushf loopne pop mov jb adcl push mov test ret dec jg push cs rorb xchg add adc adc (bad) dec jmp out mov xor das mov sub loope mov std jle dec mov enter mov js pop mov push xor pushf jne mov leave mov dec adc (bad) into jl mov mov scas jb ljmp cmp and dec push jne (bad) leave stos or daa push sbb aad outsl mov fcomps lock inc adc jne sbb loope lea push pop xor pop xchg out xor cmp pop and add sbb inc mov mov cmp xorl std mov mov mov mov sub lock loop fstp xor es inc push inc stos cwtl mov lods ds inc rorl jge xor cmpsb stc into xor rclb movb test xchg test outsb sbb pop andl xor aaa adc icebp dec mov mov cmp mov add add (bad) in ja dec enter lods inc rcrl cmp sub fld1 int3 loop jge and cmp mov jmp add pushf sub dec dec je mov arpl ja and ret mov push mov (bad) sub fdivl sbb daa jnp stos mov gs and shr int3 mov xor xchg adc inc outsl (bad) testl xchg popa mov adc add and out sub pop jne out repz das ret push xchg xchg enter jno loopne or xor mov dec lahf hlt fcomip lea push pop ljmp lods lret rolb sbb sub sub daa stc xchg pop aam jmp and adc mov jb sbb jle adc add mov or mov popa xchg mov jae test gs mov ficoml push fadd adc rolb nop sub jl push (bad) mov inc cld adc mov cmpsb stos repz fsubrs enter add movsl sbb in jo adc and push rcll (bad) pop sub xor mov mov mov fstpl xchg add sub sub jle pop pusha outsl jl mov mov jmp cmpsb out and frstor popf lret push cwtl iret call rorb loop stc pop in shll and (bad) lds bound pop jne fxch int dec jle sarb inc xchg or loopne sbb cmp cmp loop ljmp push mov add (bad) stc xchg aaa loopne lea mov icebp or jmp push pop jmp ret das inc dec ljmp (bad) mov pushf push bound pop (bad) fistpll xor mov or inc mov sub jbe sbb std and jae pop cwtl mov out xchg sbb (bad) push inc cmc jp dec divb xor stc cmp pop push out inc sarl inc cltd push xchg lea dec loopne inc dec mov cld xor leave fsubrs mov das lret sbb (bad) sbb xor addb (bad) xor shrb ret lcall ja aad outsl (bad) repz xor and (bad) loop mov mov pop mov cltd std mov cmp xchg inc imul add cmp pop in sub repz paddusb and sub in xchg dec mov cli cmp sub jge ret jg or testb mov cmpsl lret push dec mov xchg lea gs shrb mov cmp ljmp scas jno inc sub sbb push enter cmp cwtl jmp cld xor mov mov xor pop inc sti lcall mov dec mov std fwait cltd push inc jns daa clc xor xor add ret add pop movb shrl mov mov mov fsubp mov (bad) int mov sub sub inc add sbb xchg inc (bad) or ds imul cmp push neg insb iret jge js push jl out mov add mov imul mov lcall cltd push inc in push add dec lods sbb add out jno cmp sub jecxz mov stc cmp lock pop fnsaves jmp pop fisttpl xor sub mov jl jb xchg xor jns xchg sub sbb inc clc mov push inc and mov inc fld icebp test push xchg or inc loopne gs addl pop or movsl aad sbb jg test cmp cli jne push (bad) mov xchg cli mov enter nop cmpsb popa cmp (bad) inc rorb jb rcrb inc rorb xor xor pop push pop adc ljmp sub xchg jl inc das mov add pop ss fnsave mov or xchg lods or cmpsb loope pop ds (bad) dec mov into out sbb lods sub fldl fidiv jo push rorb out inc cmp mov mov leave cld mov sub mov repnz mov push (bad) std pop cltd jge inc xchg adc fdivrl and sbb pushf pop add dec scas fisubl outsl cmp xor sbb xchg insl dec out stc test mov sti frstor sub push insb xchg and jne lahf daa or pop fisubl jo div popa pop dec cmp cmp or cs jmp into stos pop in xchg pop mov lods mov dec loope andb in inc adc xor lahf fidivl out xorb sbb jl jg dec mov jecxz dec das dec enter inc sub nop sub or (bad) leave js sbb mov jmp fidiv mov mov stc int3 stc loop ja pop inc jp into stc lock pop ficoml loopne sbb push outsl pop ds push out mov jmp sub mov or jmp out imul push fiaddl mov outsb jns frstor xchg xchg shll dec (bad) loop xorl in icebp std out shrb adc xor cli cli popa stos push test sbb int3 sub or jl out (bad) push pminsw outsl sti test adc mov lcall imul and aad (bad) (bad) in or ret aam hlt scas loopne shufps leave popf aam jmp mov mov dec (bad) fchs into popa repz ret in cmp arpl lahf xchg movsl adc fimul or dec and mov inc rorl (bad) rcl add or xchg mov pop repz xchg add push sbb mov clc stos aas fistl cltd push xor sbb pop psllq pop xchg pop rclb addr16 add xchg scas cld (bad) lock push data16 into test es xchg stos cltd sbb push sbb aad adc push pop cli push (bad) subl sbb mov xchg adc xchg out scas call xchg fmuls leave and dec in xlat push arpl popa add ja xchg gs xor jae les mov mov push daa mov leave iret jae fs mov popa add js jmp sbb sub inc (bad) mov das mov lret fbstp inc int3 cmc jae popl test add add mov mov xchg add fs cmp cmp pop (bad) jg push aam les and mov mov add dec cmp rcrl pop jge insl stos mov sbb dec add mov sub cmp out popa scas or out mov cmp stc fimull aas je mov pxor or mov movsb ljmp in mov cmpsb daa enter push and cmpsb fisttp mov jecxz (bad) leave mov push std jle notl cmp add push add and out inc push jnp push inc cmp fsubrs lret fldcw xor add lahf aad popa hlt mov in xchg jnp xchg es test or or xor push pop jl in popf xchg pop or adc xchg cmp jle ret test jmp ja sub lock jmp mov (bad) push inc pop movsb sub push pushf int3 loope jmp jb mov sbb push insl fwait mov (bad) gs sub mov push scas iret fisttpl rclb xor icebp sub mov adc fisub (bad) push (bad) mov adc shlb outsl out int3 sahf cwtl ja popf cwtl mov pop cmp mov pop jns lea sbb or cmpsl pop jno vmovaps mov push outsb mov push mov jmp adc dec pop xor sbb repnz xor shr aam fneni(8087 hlt out mov jne das fs add lret dec aaa cmpsl cmpsl pop xchg inc xchg in mov fwait inc cld adc cwtl lock add add jb add lret call repz xchg xchg jl add mov adc adc stos mov and pop test movsl in mov xchg add int3 test jg lock mov xor gs mov mov mov push inc stos mov inc mov mov add jo pop sbb aas das sbb pop ljmp pop leave pop ss fs test sub adc pop pop xchg push sbb rolb push and mov nop popf fidivrl adc cmp push es fdivs dec mov hlt mov ljmp pop xor sub mov scas pop dec orl negl idiv mov inc xor testl add add jg inc (bad) int3 jle gs clc jecxz addr16 xchg sti movsb mov pop cwtl fdivr rorl pop stos aas insl pushf mov cmpsb jno mov push in mov das adc push popa jg adc mov lret rclb hlt xchg sub push and mov dec jmp mov icebp push and cmpb inc pop pop push or shrl aaa (bad) repz pop mov xchg jle push xlat dec clc fnstcw mov divb into add dec push dec mov js xchg loopne jmp mov cmpsb loope sub push repz pop in sti push pop js fld fwait lea dec jg push jbe add nop add push stc mov jns cmpsl and pop jno xchg or lds sbb sbb aas jbe insb mov mov in push inc jge loopne decl test fsubp lcall bound xor gs and sub aad repz adc dec es cmc and mov lret sbb idiv lfs and outsl push (bad) addr16 cli lret ja add js (bad) in scas mov repnz jp fidivl insb lock xor adc bound imul xor adc adc test jnp call xchg jge and (bad) data16 mov cmc into mov fisubr sbb and jecxz dec (bad) adc and inc and iret sbb push lret insb mov pop popf fistpll icebp jbe pop sar mov mov add test ss mov xchg (bad) dec fs outsl (bad) and xor cltd cmp pop mov cmp ja stos pusha push push xchg adc (bad) push inc xchg sub test inc xchg jne lret data16 sbb dec sbb inc test xor push dec movsl cmp in add cmc push mov in imul popf mov rorb adc sub cs clc out pushf dec mov rorl fnsave cltd movsl lods mov ljmp jno sub imul rcl mov fnstcw xor insl hlt and fsub sub fistpl jle sbb imul (bad) jbe jae dec dec push sbb inc cmc mov (bad) ja xor ficompl movsb xchg repnz je int and mov cmp (bad) ret jmp and cwtl inc inc or xor lahf cwtl mov fmul dec mov mov outsl insb or push add aad call das and (bad) mov mov je lret nop ss inc sbb (bad) mov gs xor pushf xor mov pop fldenv push mov test call hlt mov cld movsb push ret fwait (bad) enter movsb jns lods add aas add aas add xchg push lea js adc subl insl movsl jp fs push ss pop movsb icebp int3 sub or lods cmp jae loop jno enter fwait inc in fstpt addr16 fcom outsb push lods pop mov sbb inc jns,pn pop push ja inc rcr push push es xchg xor pop insb pop mov jl shlb mov (bad) jg les mov jg inc adc sbb lods daa cld push aad scas (bad) stos and add (bad) mov push enter jmp pop push and add popf pop int3 mov std out sub jns xor call add inc jo mov sbb out pop shlb inc xchg push cs ds add mov in add mov xchg (bad) mov cmp push push xor imul stc call push pop pushf adc test andl std movsb out dec mov mov adc cmp sub cltd mov add sub sbb cmp mov iret add lods arpl xchg cmp sbb (bad) lods mov into imul int3 pusha sbb jns cmp fchs js add fldt adc cwtl cmp stc arpl scas lret mov mov push jl,pn loop test ret inc arpl add loope nop ljmp aam mov loop adc mov lret popa dec int sub loopne push cmpsl fwait mov fwait xchg cmp cmp scas mov inc adcb ret xor movsl (bad) cld andl lret aaa out mov or mov (bad) ficompl fnstsw sub cmp out push mov cmpsb clc (bad) test fistl sti js mov sbb faddl dec inc stos sbbl jp rcll jl ds out addl sbb test rclb stc icebp cmp jno icebp mov sub mov (bad) sbb insb (bad) (bad) sbb xor (bad) xchg cmp or div add mov and les pop ficompl int lods (bad) mov push push add sti les mov pusha inc pop addr16 loope add mov frstor das adc lret xchg fs stos ss lret lcall leave pop jo add cmc repnz ss add cmp negl repnz aad outsl neg call mov pusha jle cmp loope mov mov mov mov (bad) repnz cmp fiaddl xchg test bound int jp cld pop pop cmp gs sub pop js les divl repz popa push jmp xchg fs xchg ja enter dec loop (bad) push adc das inc cltd (bad) int3 pop cmp or sub push xchg rcrl fidiv cmc mov dec mov cmp mov popf cwtl lcall add dec stos setne imul cwtl scas jb out jle dec leave lret dec bound mov test js ds outsb jge xor or int cmp icebp aam jae dec fucom or lcall negl adc sub aad and adc lods fcomps hlt mov insl add fdivp xor xor and out adc push hlt push cmp add lods aas cmp sbb rorb cmp cmpsl loope mov out or mov mov ds pop cmc roll mov and pop pop sub adc xchg mov lret jmp sub mov jb mov fdivl dec ljmp cmp ficompl (bad) dec cmpsl loop loopne aad clc insl add xor lods pop lods pop push sarl insl test sbb cmpsb mov push jbe,pn and push pop cwtl jge push xchg rcll add sbb sbb lret sub fimul rol std mov fldt loope (bad) push lods popl sbb xchg adc sbbb jp xlat xor sarb jnp xor dec test sub mov mov mov mov ret push (bad) jo jno in test push mov sahf testb fwait mov xchg lgs mov pop ss outsl out daa ja out push fildll lret jle push jno aas ds testl stos dec mov cmpsb dec cmp adc pop fwait sbb lret mov pop cltd adc pop into push dec and add aas in or loop daa fidivr out pop mov lcall push stc stos sbb incl and in leave test rcrl xchg movsb cmp pop aas out lock sub jne es cmpsl pop sbb pop popf xchg les inc adc xor jns repnz (bad) and test jmp mov add outsl call jnp ret jp or ret pop add dec inc in stc push mov and push shrb rorl loope pop cmp rclb pop lea or xor dec subl and jne xor jae ja mov adc out push out sbb dec fstp add imul add mov mul mov call xorl sbb xor or fs out jmp add ljmp sbb not cmp incl sub sbb addr16 add pop mov (bad) dec les cs jbe jbe pop mov insl fdivr rcl gs or sbb int sar fcmovbe mov xor imul mov pop rcll push imul xor ret pop popf add out cmp out ljmp jge and in adc sbb enter jne xchg xor scas nop adc mov sub and idivb mov jbe xchg sub icebp lahf inc mov popf sub enter arpl ds dec cmp sbb leave sub xchg add sar outsb and fwait mov sti add xchg or aam jg pop int3 mov jecxz xor fstps mov mov aas sbb ret mov pop inc cmpsb mov aas adc fsub sarb nop popa repz ret fs enter sub cld inc cmp popf aam mov push inc fwait insl sahf repnz dec lret and jo dec ret jp pop push jl cmp aaa sbb icebp inc cmp lret push (bad) cli repz push jo cmp cmp (bad) jne (bad) repz add popf andl ficomp popf push lret push cmpl pop xchg xor xor arpl add jmp inc sbb mov ret jg out mov jl imul test inc (bad) rcll push and push add in mov mov xchg int push xlat or jle sbb jno cmc into popa jg cmp leave inc les inc mov sahf xchg and fstpt lret push aad add ret (bad) call enter push push inc fwait push or mov push adc mov in add test lds lea and fsubl cmp or lods pop int3 test mov pop xor data16 mov mov dec pop xchg scas call mov dec insb xchg inc xor sbb pop stc mov jle jg mov in dec fs cli in (bad) jae daa xchg jne sub add cmp adc inc scas push adc fstpl (bad) decl and and add in pushf mov pop in cs and mov push pop movl lahf fildll imul roll dec mov sahf push nopl cmp sub jo add jnp add cmp (bad) out add dec pushf in in hlt imul (bad) in stos sub mov sub fstl clc in push sub ds test mov cmpl bound scas icebp and loop xchg fldt mov pop popf andl cmpsl mov xchg mov lcall mov movsl repnz (bad) (bad) xchg mov shrb cld mov imul dec ljmp push fadd pop jge pop push mov sub mov insl sub adc (bad) rcll cmc inc dec push ljmp lret (bad) pop (bad) out mov add pop mov jo outsb out adc fidivrl mov dec in inc jge jmp movsb jnp mov pop mov insl cmp or mov fnstsw push pop pushf or fs xchg or sub sbb lea les call into lods mov test mov aas xchg in fiaddl loop or inc add shrl mov cmp ds addb and mov movsl loopne insb push dec cmovne lret aaa jae cmp and or loope cmp inc sbb dec cmp out call xchg xchg ss xchg sahf xor scas mov ljmp jnp or sub or pop mov jecxz mov lea or in add dec sbb sub mov lcall (bad) xchg sti add push jo pushf xchg and test xchg adc xor xchg push fldlg2 pushf mov and add mov and pop test and and arpl cmpsl dec push mov lret in and mov imul js icebp jno pusha lods sahf jne xchg xchg mov cmpl or loope sti jecxz fs mov cmp mov xchg and push pop fisubr sub cmpl nop push mov pop mov xor sbb fisttpll (bad) sub les add in push add and shll add mov (bad) ja or xlat dec incb aaa lods ficoml inc (bad) in add or sub mov popf cwtl leave jecxz jbe and push xchg push lods pop push or or outsb inc inc and jmp inc mov push pop mov mov les xor push in or xchg cmpsb pop aam cltd loopne std push sub jb push xchg jo es mov jmp mov inc jnp pop repz dec xchg lock xchg cmc enter xor adc pop mov cmp adc dec push enter repnz mov lods notl je mov cmp daa pop xor ficompl or add ret lea ficomp jbe les sahf dec je mov mul and xchg hlt les loope lcall int3 imul roll cs je les pop bound int3 add dec or mov xchg cs subb jmp sub mov out lods fiaddl dec cmp mov and pop cmpsl loopne xor jb aam cmc and hlt cmp mov xor je popa js and xchg pop sub jns jb sarb stc cli sbb pop push lods pop mov push inc pop jne hlt sbb dec popl adc xchg bound cmc mov pop sbb add xor dec or movsb fs push jne xchg push pop imul mov out stc dec mov (bad) bound fisttp mov pushf std inc cmpsl push (bad) cmp rorl mov inc divl or and sahf xchg pop mov incb jg mov cmc cmp out loopne call jg addr16 lods add subl push add in inc in fdivrl daa dec repnz jl es (bad) mov cltd push jo mov dec aam loopne mov jns mov sub cli mov or dec dec sub test lcall outsb sub adc sti mov movsl mov les test inc and out aas cmp inc in pop sub mov mov in test repnz into and stc aas js mov fwait adc cmp stos push ret pop add faddp push or mov outsb add imul inc fdivl stos mov push pop mov xchg xlat call ds cmpsl fdivrs sub jae mov mov aam (bad) daa xor nop loop xor lea js xchg lret popa (bad) les test sbb aas leave sti sub mov mov inc fidivr sarb movsl dec sti push pushf out shr (bad) out fsubs scas adc sbb rclb dec push mov xchg jns xor sbbl scas pushf fisttpll int mov mov cltd xchg cld mov pop aaa adc push flds (bad) in leave inc jne mov adc sbb inc inc fnop sub push sbb jecxz inc cmp outsl sub shl into xor (bad) dec (bad) popa cmp je es shll mov mov cmc add jg (bad) jg mov add std push cli cwtl scas test (bad) and push xchg (bad) mov mov cmc mov xor jmp pusha xor mov pop jnp push jae adc and xchg or dec aad and pop mov push cmp adc mov xor fs stos stos push enter add or mov (bad) xor sbb repz dec xchg or loopne pop (bad) push xchg in dec xor jmp in mov fisttpll cli outsb stc js inc sub std jp jg int sub jnp daa fwait rcll push add xchg jp jle lea das in js aad rclb outsb stos dec xchg mov pop fild mov or iret aas rcll push cmp sbb ds sub rcrb sbb out cltd lahf add fsts xor (bad) (bad) fidiv cltd jle push leave cmp sub movsb mov jne or fistp mov push gs inc mov dec ljmp cmp (bad) mov jl fdivl fmul movsb add adc aam (bad) or gs inc fidivl mov out xor or insl jp jae dec loope insb enter outsb sub in push lods repnz add add cltd aad fisub loop pop jno imul nop mov nop repnz imul lahf xchg cmp xchg fsubs pop mov mov push xchg negl cmp nop mov inc push adc jno xor lods idiv pushf nop adc mov repz daa test nop aad xchg popa cs ds in pop bound arpl jbe mov das pop xor aas shlb lcall movsb sbb cmpsl scas jns mov in sub std shll jle mov aam shrb adcl test imul cmp into and fs push add adc sub sbb mov xchg out ret inc xchg push out out decl push mov add in (bad) jae fadds mul xor sub xchg (bad) mov sbb sahf gs jecxz aam lahf nop jne or xor (bad) pop sbb cmpl cmc aam push adc mov pop pop push or cmp in and lock pushf xorb movsb enter mov pop into iret mov mov fwait loop fstpt and add xchg dec dec inc sbb add xchg notb aas int inc inc sub loop,pn adc push mov lcall js cmp loopne xor xchg mov inc sbb sbb jecxz aam pop or mov pop pusha jmp push push test jl pop in sti jbe mov pop sbb cmp mov or std and scas or fcomip aas test mov xor test add sti cmp mov outsb xchg and ja adc push ja push jmp (bad) stos cmp adc mov in mov stos xchg push jge sbb sarl pop (bad) loope popa pop and (bad) mov (bad) xor cmpsb lea lods fdivp mov int3 cmp xchg je pslld xchg xchg daa mov into cvttps2pi (bad) jne pusha cmc xchg sub add adc mov adc (bad) sbb xacquire stos into push jnp bound sbb push (bad) leave and xor and inc idivl cmp (bad) mov mov adcl testb in jo ja push jmp rcl cld cmp inc mov xchg stc mov and jnp test icebp ja lcall and std jge push and inc push add adc mov out fidivrl inc lahf sarb adc pop pop cmp (bad) iret je in scas out scas mov leave mov mov test fist adc add adc lcall (bad) pop popa dec lea scas scas pushf std add cmp int mov stos daa inc pop repnz pop or push dec mov adc pop stc sbb sbb popa pusha sbb cltd push pcmpgtb rcrl xor inc or xlat cmp nop inc lahf mov (bad) test popa bound cmp jecxz bound test or (bad) jae jmp lahf xchg and push cmp sbb mov push xchg lret divb push jp jns scas lea aad xor bswap jp das outsl jmp cmp iret mov aas arpl adc (bad) (bad) rclb cmp ja inc jl pop mov dec enter ficoml mov lret cmpsb mov imul mov dec push pop es popf push xchg jecxz jecxz (bad) pushf xor fucomip dec adc mov in mov mov mov jmp popf mov lahf pusha mov (bad) dec out inc loop adc call mov jmp mov (bad) loopne in xchg mov pop ret out mov gs imul jg xchg inc loop subl xchg cmp xor pop adc (bad) imul dec rorb daa dec cmc jno cld sbb stos out mov dec sub xchg (bad) enter (bad) hlt fiaddl aaa pop xor inc add cmc xchg pushf lea vpmulhuw repnz fs cmp lahf in andb adc mov lods jle inc aas daa scas imul mov (bad) movsb mov sbb mov dec ja mov in das pop adc icebp push rol cmp out sbb aad mov repnz outsb xchg cli adc insl dec adc dec insl or mov out jle enter rorl mov mov pop mov hlt xchg xchg leave and outsl (bad) daa push icebp xchg ja inc pop pushf icebp fisttpll pop push (bad) jmp and mov inc into and mov jne mov mov loope push repz jmp (bad) pop cmpsb fisubr mov popf push out insb jo in decb js arpl or enter xlat data16 lahf ljmp mov int (bad) popa mov pusha int3 dec push pop jae out cmp pop jg nop (bad) iret lock jb (bad) push std xchg ds sub push jecxz roll stos adc repnz add push mov enter adc mov fwait dec nop dec mov mov inc stc fnstcw cmp xchg pop in add je out add dec ja pop arpl cli je xchg ror or mov insb lahf stos xchg insl dec push mov or (bad) xchg and sbb or or test adc cmp rorb sbb push mov pop nop adc lret outsb adc andl xchg push and data16 das and (bad) (bad) ret push loop test inc rcl push add lods fwait cmp adc xchg and int ret mov xchg mov arpl movsl test adc out jg jmp jno dec and mov rorb adc fnsave fsubrl sbb es out xor ret scas mov js fnstcw movsb adc aam js aas cmp mov ss arpl xlat jl and pop lds cmp mov loope add pop mov adc adc (bad) xchg das mov and inc cmc mov xor popf imul cmpsl ds hlt repnz mov (bad) or lret inc hlt (bad) orl sub inc jbe pop pop jo pop push fs lds enter rorl outsl mov sti outsb pop adc pop mov pop std sahf pop sbb pop or sbb jmp sbbb sbb cmp stc lcall ret int3 mov mov add mov lods cmpsb je mov pop dec movsl xchg gs fstl sbb fwait shrl jno mov pop ds or sbb dec sub or lea adc pop in jnp dec stos lock outsb outsb add das add movsl leave mov push xchg mov jl dec addr16 nop mov cmp insl mov sarl push loope adc fisubr adc in cli cmpsb icebp xor xchg adc stos xor dec imul enter sti push orl adc or into stos arpl xchg bsf (bad) shr ret sbb dec outsb inc add bnd mov stos mov adc and and fidivr insb adc mov dec mov mov test sahf jle cs push sbb jl push cmc xchg xchg jle pushf mov and push (bad) mov pop sbb imull aad scas jns jmp sbb movsb jge xor ret roll inc push jbe jg aaa popa dec lds sub and sahf aam lcall push xlat and mov dec or pop push jae cmp test push fcomps lcall fidivr dec cmp lock sti sarl adc jo cmp cmp xchg ds mov movsb add call dec or push or lds add dec test (bad) movzbl fwait jno sti (bad) lock jnp aam inc inc sbb lahf add test add jno push inc fsubrs xor push sub push (bad) push add (bad) lock subl fcompl inc lahf add xlat push insb orl jecxz jl mov ljmp push out imul fwait mov xchg xor (bad) faddl stos mov mov pop xchg cld mov out pop xor lret fistp (bad) adc jecxz subl sti ja pop iret push push mov jle mov pop insl mov inc pop rcrl arpl mov out std in and xchg push push pop inc imul out sub retw mov iret sub adc mov in jae mov inc pop loope pop frstor sahf or push in inc aaa mov (bad) pop test pusha jl sub outsb jns sub add sahf lret push or dec xchg jno sbb in aad subb sub dec aaa decb imul cmp icebp inc jo pop mov cmc mov adc lret cmp lods (bad) xor inc mov aam mov add cmp and (bad) dec and (bad) stos jecxz mov xchg rcll push pop (bad) movsw xchg cltd and or in fstl aaa sti jg adc les xor xchg and push lods (bad) loopne push xchg out add cmp scas or pop loopne hlt (bad) mov aas add add (bad) lods daa mov adc call add ret adc sbb (bad) dec in addr16 dec rcrl clc stos add ret call dec sbbl divl mov mov cld scas mul ds and and rol jnp (bad) pop sub jmp test sti xchg adc aas jo mov insl sbb test add mov rcll negb (bad) notb mov mov cs pop cli pop push mov dec jl les fidivl jmp repnz out dec dec ds fstpl add orl xor cs push cmp or sahf in push out fldcw imull shlb mov test repz xor mov int mov pushf dec and roll fidiv dec orl adc inc sub cmp outsl cmpsl in ljmp aaa pop fcoms mov mov jmp (bad) lea sub mov daa mov fidiv fcompl inc rcrb add or scas cmp push sahf mov aad xchg insb ret imul hlt mov add add in fisubl mov jne pop dec bound inc (bad) fsubl and push (bad) mov sldt call cmp jo fdivrs sbb adc cwtl clc mov sub mov or sar and inc in (bad) add leave mov dec push mov popf dec xchg lcall and cmp rol (bad) mov movsl movsl (bad) sbb sbb mov jne gs movsb cmp or insl repz adc aad and inc out sbb lock pop pop (bad) fiadd and out mov xlat pop xor cmp testl jno data16 mov jg or adc sub rcrb test add mov subb repnz pop cmp leave ret xor sti xchg push fild rol mov enter add jns fdivl jp dec addr16 inc loopne lods les pop mov arpl dec mov xorb mov add dec jnp stos (bad) sbb nop outsb mov insl outsl push adc pushf or gs test jb cmp les les adc cli add out mov mov jecxz xchg xor or xlat sbb sbb and rolb dec jns xor loope inc adc mov ljmpw movsl pop lret jae sbb mov xchg fisubl jmp in add xchg push std (bad) (bad) clc ss cmp out pushl aad or cltd daa gs das fisubrl fmull or enter mov mov mov cmp test sbbl into aad jmp pop cmc repz push mov push mov dec xchg (bad) mov pop sub repz roll mov jmp inc dec mov jmp inc mov dec mov mov xor fldcw mov xchg adc mov xor cwtl push stc movsl clc mov pushf inc ss lock cmp sbb mov popa push daa push xchg leave orl xchg inc jo sbb cmp jbe push mov (bad) and out pop inc jle addr16 dec addr16 lea mov add jns idivb adc sahf arpl add (bad) (bad) sbb popa xor adc cmp adc movsb mov xchg cmpsl dec add jmp xchg mov xchg addr16 add mov dec xchg push cmc sub or mov out cli lock test popa or mov loop loop jg dec cmp dec jno jg xchg inc sbb add pushf pop daa add xchg inc mov imulb push in mov in test addl stos mov jge repnz sub cmp mov and xchg xchg lock imul or sub and pop das pop xchg cmc sti stc pop call loope push sub add out pop xchg int fcomps clc push mov mov mov mov aad cwtl fstps imul push loop mov mov or add int3 pop loop sarl imul add push sti jo cmp xor data16 (bad) sub pop cmp pop es in lret add out xor dec lahf iret mov mov mov push push mov cmp xor jl xchg sub insb lea (bad) jae push and insb sbb jo pop scas loop stc mov pop jo mov ret cmp xor mov aaa push insb xor and popf ret int3 iret mov mov das jg sub scas pop mov jecxz arpl std pop xor movsb xchg mov mov xor xor andb mov add int3 daa nopl leave dec mov sub outsl ret fst mov (bad) jge push outsb arpl inc or fs mov jno cmpsl push es pop dec xor sub data16 sbb sub lods cmpsb outsl notl or jge and (bad) aas or andb fcompl aaa and or fisubrl jl pop pushf cmp ret mov or leave inc sbb mov or iret cmp pop or fs repnz fwait xchg dec pop xchg inc dec adc mov pop push xor mov clc hlt xchg xchg cmp cs (bad) mov and push aad push fmul push fcmovbe xchg pop mov fstp lea lea lock fbld out jbe movsl rep push mov jp ljmp pop arpl pop les xchg outsb jmp sbb xor pop jle dec sub cmp icebp ja or outsl scas ja out andl xchg test roll cmpsb test sbb push jl sub (bad) repz or add mov mov or push aam fldcw push mov sub mov int fnstenv pop leave data16 sbbl shlb sbb xlat xchg pop ljmp fnstsw gs rclb jb xor sub in mov (bad) mov je mov insb loop mov repz and pop add sbb fildl inc cmp je adc aaa push dec insl or leave (bad) ds test or xorl ret lahf sub xor jns lds adc mov movl pop addr16 fmull mov pop mov jnp (bad) xor or dec mov ljmp mov cmpsb repz outsb xchg (bad) ja sti mov dec push mov das or sbb mov loopne lret fs mov ret ret push fimul enter pop jge xchg inc loopne aad mov mov outsl xchg rorb mov cmp mov sbb mov ds arpl test cmc sub sahf sub into mov mov test push sbb shlb cmc adc cmp adc ss ret cli pop mov mov lret adc (bad) pop mov inc mov xchg mov sub mov test mov inc sbb mov mov test pop mov lods addr16 lock cld xchg adc imul dec mov test inc data16 (bad) aaa dec call mov or and rcrl mov mov push cmp in pop add bound sti add mov mov xchg rcll sub aaa cmp cmp dec and imulb ja mov push or inc push pop cmp dec insb xor in rcr je xchg aaa mov lea outsl repz lret dec addps push (bad) das push ss jge cmpsl jmp insl test stos sub dec mov lcall dec push dec iret (bad) pop stos push cmp cmovo inc inc rolb xchg and fcmovu lds adc jbe fcmovnbe popa xor lods push pop scas mov jno scas movsb dec fs dec xlat cmp (bad) push jo dec add and mov xlat mov shlb lods es test loopne incl pop jg lret pop stos cmp push dec in loopne mov movl aaa cmc fnstcw out or (bad) pushf pop arpl jo mov inc push push sahf in lds jle out outsl add jle pushf xor or xchg sbb icebp in xchg mov fs fwait jmp mov jbe xchg lret iret fisub and mov mov lea pop fbstp mov pop sub xor arpl (bad) jns loopne movsl mov test (bad) dec and cmpsb fiaddl adc mov sub sbb or sbb dec lds test cmp mov mov xor clc and xchg mov ret and and lea add mov xchg cmc cwtl sbb mov not inc dec sub outsb pusha ficom inc (bad) jne and popa inc into or add add jle push pushf xlat add lahf xor jg cmp jnp push cmc test mov sub jp add jne pop push outsl mov mov push pop mov or mov push dec js,pn add mov dec jne and stos cmp push cmp add lret scas mov out xor push sbb rcll dec pusha mov aad sbb das xor xor sbb sbb pop mov add imul repnz or pop out or add mov fcmovnbe inc xchg hlt cld pop movsb sbbl jns add cs jo dec sahf int pop pusha lret dec dec mov sbb jns js jg outsl les push xor bound adc cmpsb mov mov cmp sub dec cli dec test loopne das ret mov rcll pop mov xlat and into lock nop push mov adc iret in push xchg mov pop inc dec imul dec mov hlt int and lahf fisttpll in inc cmp push and jnp xor lods add push lahf dec pop repnz into adc xlat jmp push push xor stos (bad) adc cmp add inc adc xchg pop and stos push or fs xchg push das mov ret pop dec jb sbb push and adc lret mov cmp mov repnz in pop loop xor addr16 xor jo sbb mov (bad) js and jae fild cltd jo test stc or loop adc jp push mov jmp data16 or jg and movl add adcb sbb int jmp into sub inc (bad) stc (bad) pop inc add lods sub icebp data16 loop call mov iret jae rcl sbb push mov pop imul pop pusha adc push psubusw ja loop lds inc in loope xchg inc test pop jb jg pusha loop lods ds cmp or outsl lods in add cmp dec and sub xlat mov aaa push mov in dec data16 (bad) dec jnp push enter mov push fisttpll (bad) adc add fwait aam lea shlb cwtl ljmp test stos into jge jle or add mov mov out sbb fstpt mov ja xor cltd pop shrb jne jo lods pop jns mov add add stos mov adc aaa or icebp mov mov aaa jo das ss dec lods imul loope mov or loopne lods add mov or pop jge mov orl stos push inc mov or call data16 (bad) sub jmp fs mov xor popf scas in mov fdivl mov sahf cltd pushf sarl mov cmp addr16 sbb out mov xor mov loopne movsb inc mov jb dec and push (bad) sti dec xchg push in pop mov fistpl pop outsb or (bad) xchg arpl negl cs xorl cmp xor ret (bad) (bad) sbb dec push add (bad) into pop ffree test mov stc movsl mov mov (bad) mov lahf push movsb sub bound or pop and aaa ret cli stc (bad) sub stos dec or (bad) rol ret addr16 movsb sbbb loope imul pop pop cmp and out arpl dec inc pop and jnp adc mov cld mov add sub dec (bad) cltd xchg adc (bad) dec cld dec push out mov das jbe popf int ljmp es and sbb adc outsb movsb (bad) mov ret scas mov (bad) jmp out loop mov mov cmc es inc dec xchg mov cmp scas es loopne (bad) jne fs push shrd mov div add outsl cmp stos xchg pop dec out adc je leave in pop mov mov push lds shll addl cld mov xor lret lea ret lahf aam and enter add pop int3 add dec lret xor pusha pop cmp adc dec rorb push jnp or sub cmp (bad) sbb dec mov jg stos add stos add sub jle scas cmpsl out shlb pop jmp adc dec jp ficomp cli aaa lahf xor aam ja ret mov push xor loop bnd sbb dec cmp cmp popa sub test inc jnp loopne and cli in neg scas lret insl and insb xor xor mov std das pop jl bound repnz pusha cmc dec jl out adc inc repnz mov inc mov mov repz xor or test idivb in mov imul cmp call aad lret stos pop dec icebp mov or jno daa xchg sbb cmp jmp fcmovu or stos inc inc rcrl mov push popa xor push lret or mov stos jns loop adc cmp xor push sbb insl dec addr16 push sub push cmp inc mov jns mov sbb cmp xchg sub sbb loopne or imul dec and adc xchg loope repnz push xor cmpsb mov jno in std add shrl test shrb das jns out in test sbb lods and inc pop jne ret mov pop cs scas sub fistpl xor xor dec arpl jle (bad) jb in xor jo rolb cs pop popf lea and test je out pop ds jae das (bad) jmp add push push sub xor enter jnp push mov adc inc push pusha xchg icebp addr16 sbb sti enter out addl repnz cmpsl shl bound jo fisub rcr js inc fsubr sub pop les dec rcll mov (bad) sub jno add and jmp data16 xchg cmc insl outsl popf inc sbb xor in mov adc mov arpl imul push mov out fcomps rorl push rorb repz mov test or nop cmp and cmp hlt repnz mov cmp sbb sti es and lock mov mov jbe sub (bad) dec (bad) ja inc xorl mov lods inc lahf inc daa cmp mov push push xchg in cltd stos xchg add adc jo and (bad) nop and lret scas mov in jo mov pop sbb rclb aas (bad) push into xchg mov inc or (bad) in jg xchg mov push lods sub mov notb fisubr cmpsb pop push aas daa out cltd pushf mov jbe cmp call jo (bad) and inc imul lds enter push test add mov mov push test cmp jnp aaa ja fild bound cwtl jo cwtl out pop cli inc mov sub jp xchg mov scas call das xor or xor nop (bad) pop push loop andl pop out jl add inc fidiv push notl outsb jmp jne adcl inc xor cmp out and jbe enter (bad) pop imul jb add cltd adc xchg xchg insl scas loopne inc shll rolb xchg aad lods lea pop popf xchg stos call inc ss imul aas jb out sub adc add (bad) sub add jnp flds xor xchg mov js adc cmp bound int3 cltd std stos stc inc and push std sub pushf cmpsl push jns xor lods or fst icebp rorb cs test push add jae xchg and add inc sarl stos nop jbe adc cmp push mov sub das mov divl mov fildl mov sbb dec push dec shll or movhlps out pop and pop sbb jno jns lcall push lods mov push jae je add jae lods pop mov ljmp mov xchg and sub xor pop cmp jp sbb adc sbb ljmp ss and fldcw and mov sbb addr16 fwait dec imul aam pushf push pop and outsl sbb mov add mov sbb sub mov fsubr fiadd or inc movsbl xchg rolb cmp cmp ja inc mov lock xor insb stos (bad) pop in punpcklwd and push mov inc inc mov in dec daa sbb jno nop dec rcrl stc cli lods mov std xor cmp pop push (bad) pop mov mov jb pop mov aaa in (bad) (bad) lea in push mov sub mov add orl mov (bad) aas mov or lods xor clc mov aas xchg pop add fcomi and mov mov inc lds or mov push sbb lods fdivs xor sbb and and xchg pop (bad) add push mov jbe add ret aam add loopne outsb decb push dec cli xlat jp cli xor fild xor add setno dec add jl xchg rcrl push data16 rol cmc daa cmp xor in loop repz xor pop add cltd or dec push aaa mov imul jbe push sbb sbb pop fwait push and dec cltd imul stos jmp imul int3 inc and sub gs push sub add fmuls add cmpl outsb ficomp cmc xchg sarb in fistpll mov popa dec fisttpll pop and jg mov cmp and ds nop inc mov ss ljmp mov lret imul outsl xchg jb nop leave pop xchg test push test xchg dec xor cmp or sub cwtl pop and jae imul lea test and rclb pop repnz inc sub jp jge das mov in (bad) jb (bad) mov mov cli arpl mov jo popf int3 sub inc (bad) jle rclb repnz mov jae mov data16 (bad) fs testb dec test and mov inc xchg mov inc mov or xchg xor adc sbb cmp mov adc stc (bad) mov (bad) movsb lods cs jne xor pushf andl hlt push push and movsl and fdivrs ret xchg aad (bad) decl ja jl cs stos pop mov ljmp mov cmp cmp test rcl pop mov (bad) mov jne test into ss cmc imul roll dec mov or push aad loop add xchg psrlq (bad) xor inc in xorl call repnz jb rcr test les scas (bad) xchg xor mov aam fwait ds lret in xchg or bound mov (bad) (bad) xchg leave iret dec mov cmp movq mov mov cwtl jbe sub lcall mov call mov movl je xchg inc rorb out cmc cmp dec es inc scas sbb movsb std imul test cs lea jbe sbb or mov decb imul and cmp (bad) rorl out mov jge or out imul out adc std sbb popf cmp negb rcr (bad) cmpsl mov hlt lock insb jno and scas rolb mov sbb outsl jbe or das outsb es idiv push push dec ret fs add ds dec lcall dec mov dec or dec mov sub jmp (bad) or cltd or das dec dec scas cmp jno stc adc cmp push test dec call pop fnsave call xchg inc ficompl mov add rcll dec (bad) in xchg lret mov cmp inc push inc cmpsl and add inc roll mov rorb loopne sub mov aam sbb push xchg test inc call std adc fwait and lods dec dec push push mov inc sbb xchg fwait mov out sarb inc ljmp inc lods loope pop add addr16 jae cmp (bad) adc pop scas inc pop (bad) (bad) pop and jno push loop jmp imul push movsl test and jnp pop pop les mov fnstsw push fsubs call jg push push jle pushf xchg xlat ljmp inc cli sahf es mov mov pop mov sub and cmp xor add pop adc xchg mov add lcall cmp sub test jge adc outsb mov adc fsubr sbb xchg sti ret dec call sbb push add movsl dec pop jp and loope xchg popf xor es arpl stc jo stos movb int iret push xlat or cwtl cld push inc cmpsb push (bad) arpl lea (bad) outsl scas sub (bad) std fdivs sti jge xlat mov pop (bad) test lods (bad) scas fdivrl repnz in faddl pop and push inc mov push movsb aas ds lods data16 rcr xchg or in pop mov inc fidivl (bad) icebp xchg lods ret imul xchg gs loopne rsm movsb aam or pop aaa stos insl aaa and enter inc pop test jns push fmull inc push pop cmp add pop imul add xor mov cmova xor ljmp mov cli add dec testl lds xor out adc mov fcoms pop lods push jbe pop test negl mov aam movsl loope clc js ret adc xchg (bad) hlt pop and xchg ja jmp sub sbb test pop xchg cld jl and cs push and push xchg (bad) jb jns rol or insb pop fsubs clc mov push fmul jecxz jns bound xor pop in in mov cmpsb rolb fisubrl mov popa pop cmc adc test xor aad lods mov aad iret xor std es dec xlat cmp cli ss pop or sbb bound push push js cmovs cmp test fcoml lret cs sub pop cmp pop push pop jge jb jp push rol mov nop push (bad) lcall in xchg loop dec test xor sar push push addr16 mov lds push int xchg aad clc stos push popa out dec cmpsb pop popa and lahf fwait mov and mov and loope inc test insb pop test xchg xchg sarb jo jo into sbb lcall jp stos mov notl mov arpl lret (bad) aad sahf adc sub jne lahf push xchg sbb dec xor call push ss xchg inc mov mov or xchg mov jecxz mov xchg pop pop inc icebp adc pop dec xor xor pop aad daa lock cmp add cmp cli mov pop pop fs outsl std mov inc icebp in bnd icebp into insl pop ja (bad) adc and dec sub mov dec mov fwait or xchg jae int3 ds pop adc xchg dec data16 push mov daa or bnd sub (bad) or push out popa js repz andb sbb repnz adc push rcll inc dec pop jecxz inc sahf adc mov pop add mov (bad) outsl dec pop lods lea (bad) ljmp cli pop add mov fisttpl fnstsw pusha jmp scas ret xchg push scas (bad) mul adc loope adc cmp sahf and mov aas shr add sub cmp jl icebp mov aad inc and std fbstp ja pop jge stc xor mov push (bad) jae cmp xor loope repz test sahf mov js (bad) in cmp aas movsb mov inc mov jne,pn xor mov mov jnp or rol mov dec inc pop mov lret fucomip sti leave js push mov xchg sbb hlt jmp imul aas (bad) mov pop push add ficom (bad) fstps mov mov sarl jne jmp mov pop mov adc inc mov stos inc sub sbb jbe aad mov and cltd xchg sbb sub xchg sbb push mov call pusha mov pushf fistl jg add cmp and sub push mov nop sbbl mov pop inc lret adc stos push cmc mov std rorl movsl inc push std in xchg and add sub test fidivl mov push mov dec fiaddl inc js jl lods loope in or xor repz xchg mov ficoml xor add inc rorl sbb insl (bad) and sti ljmp je add or push mov xor jecxz lea (bad) xchg and cld aas andl mov (bad) adc push sub adc dec sti sbb push push lds add test mov in jmp dec icebp ljmp loop add out inc (bad) xchg sahf xchg fadd ja nop scas add sub or mov xor xchg adc pop xchg ljmp scas mov jecxz cmc or shl je pop pusha das sub add add popf jecxz test push cmpsl xchg adc jl add xor gs arpl andb pop leave pop testl ret lahf mov sub movsb and cmp push push mov push ljmp fidiv lods sub mov jnp aam aas mov sub sub js sub (bad) (bad) xor xchg cmp pop (bad) scas cmpsb cmp daa jle mov rolb sbb add lea dec into and xchg push lahf lds (bad) sub loopne cmpl pop inc sbb aad addr16 aam mov and outsl inc cmpsb cltd adc sub sub ret into int3 es lods push arpl nop loope scas push mov mov jmp out jg sbb sbbb push dec movb add add sahf push and push das mov mov into xchg or lcall pop out lods inc mov sub (bad) mov scas call jbe push test lds leave mov (bad) repnz xor sarl rcrl call sbb mov rclb js inc and add insb mov mov jb cmc sub gs dec (bad) std xchg js sbb in push fsubl outsl aaa bound jge stos scas xor (bad) mov aad push sbb inc aas mov loop arpl cmp dec mov or (bad) jno pop jbe jmp jnp dec out mov lods (bad) aam mov aam daa and mov xor add ret push xor xchg mov jmp dec dec (bad) mov iret les fnstenv mov (bad) enter mov pop push outsl add add add dec xchg and pop in ljmp out xchg (bad) ja mov pop addr16 call mov mov aaa xor daa push inc clc or int3 or imul xor push ljmp arpl and dec lcall stos (bad) mov lea test sub sub pusha in cmp js mov ret dec fs out dec cs ds fcos push jns dec xchg lods inc lock add sbbb out testl mov push xor test test push jbe or std xchg pop dec xchg adc imul xor mov mov decb bound jl jae cmp dec repz loopne hlt sti xor and mov test (bad) pop xchg sbb sub test mov out add test cwtl or cltd pop jne jae xor (bad) ficomp mov fcoml rcll arpl out xor (bad) add aas mov mov roll add pusha mov imull test popa sbb cmpsb mov repz push or cmpsb cmp cmc test and addl adc adc mov pop lcall cmp xor push jg (bad) push das lcall adc inc and les mov inc mov in sbb data16 push and sbb mov stc icebp or sahf push pop outsb xchg add fdivs outsl inc jbe xchg push mov lock cmc mov adc inc je lock add push mov add repz (bad) (bad) mov movsl mov inc (bad) scas pop pop inc adc outsb add out inc lock clc pop leave xorl xlat dec sbb add js subb mov mov xchg dec imul (bad) cmp pusha fildll dec xor add lock imull or xor lahf pushf subb xchg xor das stos jecxz or out (bad) ret lods pop or lock fimul int dec sbb adc xor arpl mov jno sbb lcall xchg (bad) fwait pop adc orl stos dec jne push test push push xchg pop mov pop les daa je jp popf das enter sbb movl clc test push bound mov sbb cmp pop inc or in mov mov xlat mov add pusha xor decb sub mov sub fdivl mov xchg loop dec in sub adc sub leave icebp cwtl out imul shrl decl mov add pop jns mov aad cwtl popf push inc addb jl,pt or stos push xchg jle sbb inc pop cmp inc (bad) fwait std dec in cli lea imul mov or lods loopne test adc mov inc xchg pop dec adc mov add xchg dec push push sbb pop add mov mov cmpsb jnp push daa sbb js sti lock pusha add jp loopne fisubrl pop dec inc adc aad stc aas xchg arpl sub ret xor add (bad) shrl lret adc cmpsl mov decb xchg push and and mov iret rorb sbb lret pop xor test rorl add jnp xchg cs or sbb push (bad) mov xchg sbb mov mov repnz negb or push lds inc inc out sbb push ret aas dec scas mov cmp inc cmpsb loopne rclb mov inc add andl scas insl subl out xor aam sub pop out dec dec jne test pop mov jge cmp rclb xchg sub rcrl ret cmp push test fucomi test pop xchg daa mov xchg sbb sub add xor pop adcl (bad) add aam push mov dec das rcrl jb gs lds dec mov pop jp loopne cmp popf cmpsb cmp add push push sub mov std (bad) push inc mov loopne pop push pop adc xlat push cmpsb lret and push pop aam (bad) mov fmuls cmp and loope in push stc inc out fsubrl ror add nop jp sbb sti sahf sub mov jnp sahf popa push jae dec lock mov xchg inc add jns popf jae mov dec imul mov mov push mulb rcll pushf int rcll call lcall in or dec xchg xchg int add mov sbb dec jnp and add mov cmpsl loope jno lods repz loopne pop lret lea (bad) movl mov cmc outsb (bad) insb sub mov imul xor xchg int cmp mov dec mov xor dec mov add fisubr out mov lret add mov mov enter push xchg cltd fwait push mov repnz inc iret sarl xchg (bad) jae xchg sub and jb sbb (bad) cld int3 cs aaa cmp notb hlt dec xor adc dec push add lret hlt adc inc and push mov in or cs js stos dec repnz pop push adc call lcall inc and pop jle (bad) mulb ds (bad) ja inc pusha sub test jge push (bad) out lock jecxz scas pop lds (bad) movsl sbb into and fadds pop sbb cmpsb cmp insl mov and pop scas push pop pop test pop daa notb add add push pop mov or cmp loopne xor aaa scas sub not dec sbb aaa imul jo in jg mov xchg pop or dec sub inc (bad) aaa test iret sbb xorb movsb repnz lret int sbb pop jle (bad) aaa daa movsl pushf (bad) ret aad xor add and popa scas dec adc inc lods cmp sbb jnp movb lret xchg jle subl sbb mov mov ror cmp fiadd push lea adc pop lcall test stc mov mov pop adc mov aad or (bad) jno inc xchg mov sub (bad) hlt dec (bad) shlb cmp adc push dec push popa pushf incb add mov sbb xor ret scas insb loope jae rorb ret test imul or cmpsb jae insb fldt test fs adc dec jg mov or js fsubp fmuls mov gs out jnp mov push testl sub dec dec clc mov outsl sub xor lods ds roll aaa xor mov mov sbb xchg dec imul pop mov push push int3 inc leave pushl repz test movsl aaa cs xchg idivb lret or pop jbe xchg xchg fdivrl in imul pop (bad) insl mov int3 lahf pop mov mov repnz jl out int3 mov insb inc add jmp jb addr16 movsb jle sbb popa and mov add loope je add mov add push mov push pop jnp repnz mov jbe repz sbb and adc loopne out sahf cmp add std in shl sahf sub dec fadds in jbe dec int3 out and adc and out inc jecxz addl lahf xchg es loopne data16 mov test xor xchg or ficompl or jecxz mov xor out test cmp jge mov insl outsb xchg cmpsl mov int ficom in cmp arpl mov stos xchg sti call test das jg notb adc mov imul in xchg cmp mov arpl or pop shl repz sbb push mov push lods jns jo pop or jno (bad) sahf add xchg xor xor xor pop loope or jne ljmp enter sahf dec sbb dec ljmp leave cmp leave cld pop fsubrs mov sti pop imul push lret xchg imul iret mov stc mov sbb out arpl das pop mov sub xchg lds lea ljmp mov push in les push mov pop int fldl jo jge dec (bad) mov mov js mov pop int3 inc mov int mov test mov rclb add inc mov adc add pop cld ret es sti stos sbb daa out cld jp push xor xor sarl incl push cmpsl (bad) stc mov stos aas pop lret aas notl xlat sahf mov push mov call ss inc lahf jns xchg in imul dec pop cwtl xor jge dec imul les jle repz stos pop xchg add adc stos or mov fcmovnbe mov xchg mov movsb push fcmovne es cmpsl clc xchg adc pushf xor xchg fadds sbb push sub jp fstpt pop inc or mov aaa sub cltd jmp flds mov push (bad) into in xor cmp push mov cli lahf nop fsubp adc mov inc mov out or jno sub sub inc scas xor mov xorl xor bound sub cmc dec pop push call in test and enter pop mov psubq repz fs xor add add sbb (bad) cwtl (bad) xlat xchg sbb mov dec xlat and cmp pop mov aad add enter push cmpsl ret push test push les data16 out in mov or repz xor int xchg push mov pop pusha xchg jmp imull loope bound lret cltd fnstsw outsl test ffreep adc (bad) hlt in scas xchg push lahf cmpb or pop and jb fistl mov jno scas xchg fcoml mov daa aaa movsb and mov cmpsl stos xchg add nop dec push pusha xor cmp fidiv xor push or scas xchg lods das cmp mov jle cmp in add fidivr sti and rorl rorb cmp icebp in pop repnz loop jl orl mov inc jge dec fist nop mov add scas and and xor flds add push stos cli rol jno int xchg lcall ror mov push (bad) imull jecxz repz xchg cmc hlt das jnp in popl mov push and (bad) (bad) jo subl xchg dec sbb aad mov add in xor xchg cmp int cwtl mov sahf stc test or sbb and test push cmp jge cld dec mov or jae jge jns scas cmp fistpl arpl and sbb xor (bad) and xchg dec inc jns inc les popf cmp (bad) inc cmp shr fwait and add jge mov andl mov popa jo cmc xchg or (bad) push notb and add and insb jb cmp js in pop xchg test cli dec aas push jnp pop rcrb out nop cwtl sbb pop sub add cmp lods pop pushf mov ss sbb mov fildl xchg mov orb jl ret aam xchg lods arpl rcr jle sbb dec add push in data16 fisub push cmp es mov mov out jo dec push add int enter or or jbe outsb xchg in mov (bad) sub pop bound bound popf cmp jne ljmp push pop imul fdivl nop jge test icebp je sahf jbe cmp mov mov cwtl mov ss push xchg pop (bad) stos lods or adc push inc loop test lock psllw outsb xchg jl scas cmpsb dec add xor mov das daa mov sbb inc das out ljmp aaa xor icebp pop std movsb fcom push lods les mov (bad) jno (bad) into adc iret mov cmpsl (bad) mov cli mov sahf sub cwtl xor imul mov sub pop ret js xchg lds ss sbb sbb push sti mov push cwtl and test cmp xor (bad) mov iret (bad) aaa and mov adc rcrl mov lods fldcw cltd (bad) pushf sbb mov sbbl retw orl jbe das mov rorl cltd cmpsl or jle ja xor xchg jge mov icebp movsb lods push (bad) cld jl sbb repz popa in mov pusha in push les adc pushf mov add in outsl adcb aad (bad) jo push ret dec (bad) imul mov fbld sbb inc push mov fistpll loop mov jle and lahf xlat xor xchg call jo test pop loop test stos lds aas (bad) pop cmc iret notl bound cmpsb hlt adc lret icebp push add (bad) cmp je aad mov lds push aas pop outsb repz mov out cmp sub push addl and cmp cmp cmp pop (bad) pop fidiv (bad) and dec int3 fdivrl in mov inc xor jno outsb pop add cmp mov ret fadds push ret and inc cltd lds xchg cmpsb dec popf mov adc out add ficompl rorl sbb and ret ds add jp mov xchg repnz jne loope lea pop adc mov jnp mov jb xor mov dec mov hlt call and xor movsl rcrb push (bad) popf pop in adc xchg (bad) mov sbb test stos dec cmpsb (bad) add hlt sub pop jecxz imul mov (bad) mov mov (bad) in lret xor xor rcrl outsl (bad) fildl mov sub sbbl sub pushf adc cwtl lret inc cmp lret int3 mov bound out dec jnp mov call call sbb outsb and adc stos out mov cltd inc push push fisubl xor daa mov iret push aaa jge sahf pop mov rorb dec or jnp xor push mov jne ret (bad) mov adc push aas in and lcall jnp jnp push push mov xchg sbb mov or leave xchg loope pop int sbb mov ds adcb call jecxz lahf dec sbb mov push pop cmp adc xchg mov jne xorl insl and or inc pusha ficompl pop mov dec imul cmc xchg xor push sbb aad and loopne adc aaa fcmovnbe pop inc cmp (bad) fldcw inc fdivrs cmp push jl je sub mov and xchg (bad) push xchg mov das leave jmp inc or out add lret stos (bad) jo xchg loopne or add adc (bad) jge lds rorl pushf dec mov xor les jl mov stos sub mov arpl jp mov inc cld push repz test dec imul test or ss test gs sub sub popa (bad) xor call clc mov pushf mov pop add popl adc push arpl outsb jo test jae pop lea push rcll je ficom fs popf out push ja jp cmpsb xchg movl out add pop inc push inc aas in sbb sbb mov test mov dec and les pop mov jbe pop jnp mov adc pop mov notb into and movsb outsl pop and xchg xchg jl (bad) scas sbb add les mov inc xor xor scas mov xchg imul in mov popf mov shlb subl std xchg xor (bad) xchg mov xchg outsl push ss and dec adc xchg mov aad push cld and or aam or imul jle pop inc fdivrl jno lods cwtl xor cmpsl adc call lcall in jecxz aam lcall sub jns sbb popa std clc sub dec lock inc sbb push lret push add mov lods (bad) xor scas lds dec jecxz sub jg or enter outsb xor aam ror and outsl movb mov sbb sbb inc jecxz scas fnclex and (bad) cli xchg fcmovnb call cld inc pop pop sbb sub add push and mov cmp ss enter xchg into dec inc sbb push jb adc push mov rcr shr adc pop push sub fstl dec ret fld into mov cmp mov je ljmp enter xor (bad) pop cmpsl popa xlat and or pop cmc dec mov cmp enter mov xchg in xor add fldl popf jb jp into enter inc or lock jbe inc in jmp ret push sub xor add pop mov or jecxz mov jne (bad) mov push fwait fs in inc add inc push insl add dec push mov fildll mov or push cmp adc mov mov xor repz add add roll outsb ja xchg adc (bad) out jnp in push imul lds leave out cmp ds or push push (bad) aaa xchg ret xor mov sub jg xlat mov jmp icebp xchg ljmp lret add clc aam xchg dec test pxor gs mov xor add cmp inc cmpsl dec dec cmp roll mov cli push fnstsw stc shrb mov jg pop xchg dec xchg mov adcb dec mov xchg add jecxz xchg inc xor sub pop or daa (bad) jns (bad) pop pop ret mov ret mov aad enter mov imul jae sahf mov mov adc lcall lods into xchg mov cmp add stos shrl mov mov popa jno cmpsb popa xchg mov (bad) mov xor jmp pop dec pushf lds mov cli ret pop les dec inc add loopne xor pop and loope jg cmp int3 je sub (bad) cmp (bad) and mov stos jecxz (bad) adc mov inc sub jp cmp test addr16 std enter cmp sahf hlt xchg pop push mov cli sbb movsl sub out mov in pushf lcall xlat out add push out bound das insb std push (bad) stc popf roll insl in jecxz inc pop sbb xchg ja fmulp adc dec jmp xchg iret rclb dec clc (bad) adc imul push mov cmp mov lea loopne ret cmp inc mov cmp xchg mov inc (bad) ja push popf mov ljmp loop not int3 repz inc mov dec and mov shlb aaa jne aad (bad) mov test pop dec loop mov mov mov mov adc inc cmp fbld js (bad) push (bad) dec mov stos icebp sarl lock cld sbb pop es and ja sub pop pop dec out daa xor dec jo cmp or into jbe pushf mov lret hlt pop adc jp fcompl cltd (bad) mov push scas call (bad) int and nop mov daa (bad) imul (bad) call pushf ds cld (bad) jl ss push lds fcom mov add xorl dec or push fbld jg sub or xchg mov add (bad) inc loop lods sbb test out ljmp xor or inc hlt and pop mov ftst mov pop mov sbb inc jbe pop jle les xor jb callw (bad) xchg cmpsb (bad) les lcall fdiv add dec and sub movsb pop pop pop iret inc fild cmp cmpsl cltd and jae mov nop sbb mov fnstenv push lods insb pop and jbe xchg jmp repz push xchg divb sahf (bad) or cli icebp mov dec lock pop loopne xor movsl aaa pop mov jno movsl or inc xor lcall movsb jg into lock clc push inc sub push add aas pop jg push pop push add iret fwait sbb lret xor enter mov mov sub add sti xlat inc add dec pop (bad) or cmp scas and pop jo add add stc or mov and pop lcall call je add cmpsb test or out or insl and (bad) stc out repnz in sub adc test aad popf sahf (bad) and clc mov push fisttpll lret into push mov mov sub adc lcall fbstp std sbb sub stos mov stc mov cs sbb loop pop xchg sbbl stos cwtl sub jmp push pop daa xchg or sub cmc push loope cmp xchg mov push xor arpl xor inc mov jns xchg pop hlt mov ret iret mov pop sbbl xor sub cmp mov imul (bad) daa mov das cmp add aam sub mov cltd jne std int3 mov cmp test scas movsb cmpsb mulb mov lret outsb or jle stos xchg jbe inc add and lahf and test mov xor push pop in out mov out cmc je push sti inc mov fsubs pop cmp sahf lea (bad) lock mov xchg xor pop inc pop jae jmp cmpsl adc iret ja jg popf sbb jo cmp fisubl imul xlat cmpsl lahf sti stos dec jns mov jl hlt xchg jns fcoml es popf pop ja (bad) xor repz fldcw rolb or mov and pop out std (bad) and addr16 jg mov or mov lds inc imul mov mov test mov push mov out pop or js sbb sbb mov mov (bad) jno daa cmp pop or mov pushf outsb xor sub or pop mov mov cmpsb mov xchg jae mov iret add out cmp ret movsl sbb jg stos cmp dec add pop push push dec sub sbb stc adc mov and mov int int inc pop out push rcll repnz das inc inc (bad) push and stos ljmp push inc xchg (bad) cmp cltd add adc mov fadds sub test pop in mov and aad add adc fs dec popf dec sbb inc jns jnp mov pop jle test pop dec cltd add sub cwtl test dec lahf cmp test sbb sbb push pmaxsw add inc adc sub subb push xchg and dec inc mov jb inc mov les jbe inc add inc sub je inc movsl jbe pushf mov in pmaddwd or rol in jle out movsb push cmpsb mov sbb movsb inc mov sbb or inc mov loop bt iret cwtl js adc into add out inc cmc aad pushf sti inc outsb js adc inc pushf mov mov jo rclb xchg xchg jecxz xor pop cmpsb lock or (bad) aad lret lret int3 xchg mov out mov jge imul cmp adc push add cmp pop dec dec lret inc pop sbb push adc xchg push fistpl push scas aad jo aaa jle imulb scas adc int sub cld dec pushf (bad) jo in jle sbb sti lods push loop push imul sub out inc lock (bad) jg inc mov (bad) pusha jbe adc jmp in mov int jne test (bad) ficompl jp push stos out jb loopne fstl int3 lods sti pop xchg testb daa fwait mov xchg daa stos loop and xchg aaa jo mov out add mov ja pop add data16 xchg out jecxz nop icebp rcrb pop sbb sarb (bad) adc outsb enter sub xchg clc cwtl cmp arpl in mov inc fsubp xchg in mov cld mov rcrb arpl or mov in xor jle mov ljmp xlat sub and shl (bad) jns (bad) pop in push adc divl les xchg sbb loop or int3 mov lock jl push roll test cmp push inc jle mov iret scas repz jp loopne pop mov mov aaa in mov clc (bad) push mov or sbb popf hlt in mov dec clc push xchg jbe and dec aad pop (bad) sbb adc inc or iret add lock inc xchg mov sub sbb xchg jle enter clc ror lods push je sub in mov pusha inc sub and (bad) lcall fildl jle jne and mov cmpsb push aam pusha dec int3 mov stos loope in gs xor rcll xchg push jmp je scas cmp fwait daa sahf aam js sbbl add cli add fcompl jmp push pop fsubrl leave adc lahf pop fdivs enter dec or pop cmovno dec mov xchg mov push xor mov push adc dec xchg cld mov (bad) and and cmp nop/reserved pushf xor pop stos outsb (bad) xor push adc pusha mov push add xlat mov xchg movsl mov clc jno mov outsb lods mov ret or cs inc es jl sub mov popa arpl mov bound fs iret cmpsb sub insl pusha cmc pop loope fucomip push fiadd mov ds push sbb xor test add aam push cmp jmp inc arpl leave fistpl test lods cmc nop inc or inc js rcll and xor or add add cmp fucomip movsb xchg xor (bad) icebp (bad) outsb sbb pop out roll mov scas xchg ret (bad) fidivl bound into and push dec mov pop sbb test adc scas inc lods sub (bad) cmc or push pop mov (bad) xor cmp adc lcall mov cmp out push mov dec or aad inc mov dec leave in lahf sbb xlat mov sbb mov push and sub (bad) int scas inc outsb adc inc xchg out (bad) jb addl adc pop (bad) add mov xor stc xlat (bad) cmc xchg add sub mov sahf cltd push and mov lahf rcrl mov roll add add ds push xor adc dec test fs negl sub mov jo out jne cltd and mov push push cmp and jb xor cmp push mov or into sbb (bad) sub adc mov push xor push xchg pop sbb add and lahf push shll lret or lret out xor (bad) sbb fildll fdivrl pop mov jae fstl mov cmp int3 xchg pop call mov divb pop mov test jb outsb lds pushaw jp sub sti inc mov std add (bad) jbe imul adc notb inc sahf lahf mov push xlat sbb fwait lahf mov rcll mov adc inc xor cmpsb test add pusha xchg jae iret decb ljmp mov (bad) stc dec jmp jl hlt movsl xlat mov mov sahf fsubl cmp xchg push movsb or fwait cs add or push fwait data16 and adc add nop divl mov test pop adcb shll push mov imul aas test pop mov sbb jp mov cmp (bad) lods and pop push lcall mov jge jae inc xchg mov and (bad) and pop dec das sti pushf les call cmp addr16 push xor in xchg mov add outsl rcr sub into mov mov mov xchg clc leave add jecxz xchg or inc jne pop lahf sti aam sub cmp (bad) int3 std xchg (bad) (bad) push cmp test add call outsb or fs aaa jmp inc add adc inc in push dec stos and xor or xlat mov repnz repnz in lret pop (bad) push xor nop add iret inc cmp insl cmp jnp adc jmp clc iret xchg repnz cmpsl dec push xor mov roll mov jnp jno shrl les pop cwtl xchg sbb mov in lcall sub je sub out mov xor mov adc and in or loope stos fmuls cmp sbb (bad) push pop ss mov stos cmp cwtl add jg or bound pop bound les cs aaa mov out movsl fdivs add add cmpsl add insl lea in fwait imul call or lods cld popa icebp xor shll cmp movsl outsb ret es (bad) scas mov dec jae (bad) cmp dec mov test in stc push or lea inc dec sub stc jecxz shrb dec test xchg leave jl (bad) mov lea mov push fstl xchg sarl out nop sub xor jecxz xchg leave sub aam mov mov out xor inc mov gs push push push lret test pop dec daa push dec xor adc sub lahf xchg fidivrl das pop cmpsb das fildll data16 xchg sbb arpl or sub jb sbb and mov ljmp mov mov sub repz push dec lret test lods xchg lods push add loopne outsb rclb das add xchg jno sub push lret in nop inc cltd jp add rdpmc (bad) inc or mov sbbb sbb scas daa sub pop xchg xor mov insl mov aaa rcr adc out sbb xor iret dec arpl sbb cmpsb scas mov setnp je xorl or ficom je in sbb out cmpsl push mov jge out fadds and sbb icebp daa xor cwtl jecxz push pusha stc inc ljmp inc add sahf repz lds mov mov pop fldenv dec cmp xor xor pop rcrl loope cmp (bad) mov inc cmp or xlat xchg mov sub or cmpsb test ret adc sbb add lret out lock nop shl add xor and mov nop adc xchg (bad) lods dec sahf pop cmpsl imull mov insl cmc fcompl call sub inc mov jmp mov in (bad) jecxz loope push mov mov ds mov loope jecxz or push movsb (bad) loope inc xchg mov adc rcl popa test rol rorl ljmp xchg insb int3 inc lods mov ret aas add jg xchg rcr lcall xor popf adc adc shl ficoml pop mov shlb leave push rorl pusha shr and addb into mov dec push or stos bound mov push mov enter sti jp sub lret out add aas add adc sub repz (bad) cmp add int3 xor and cmpsb fiadd (bad) arpl mov je mov dec cwtl rcrl add add xchg and gs mov mov fistpl push call hlt sbb dec jle (bad) xchg (bad) mov fcmovnb out and adc lret iret scas mov add (bad) in sar push add test mov jne lahf jb mov sbb mov cltd fist inc lds lods daa dec aas mov sub ret cli mov stos test nop repz in mov decl int mov je enter cmp pop mov lock cmp jmp dec add lret jne cmpsl (bad) mov repz lret fndisi(8087 pop in sbb and pop (bad) xchg scas xchg mov lea test pop pop mov into cmp xchg mov insl mov dec out and out add mov inc push add add dec xchg jne ret cmc rol xchg cmp insl ret xor mov pop inc in mov or fstl sarb jl call mov cmp test fwait jne pop sub shll stos repnz stos out dec stos and je lahf (bad) fnstsw pop lret arpl rorl sub cmp jb fbstp mov sbb jl pop mov mov das mov lea pop fildl lret ljmp dec dec mov lcall mov mov or fxch int neg add lods les xchg jnp xor push sbb mov inc into jecxz fwait test add in (bad) mov cmp sbbb sbb and fimull mov add addl xor (bad) jo push add aam pop adc dec jne sarb sub or push push cmpsl add pop push fsubr mov push add sbb cmp xchg fwait dec or rolb push cmc outsb cmpsb enter add adcl out lcall lahf pop inc outsl loop dec cltd iret jnp jnp inc xorl hlt xor arpl mov cld (bad) (bad) xor incb leave sbb loope inc sbb mov push sub addr16 pop cmp fnstcw lret cld mov test inc fimull es push ret loope imul add mov and mov add nop cmp or dec inc xor and lods pop jb (bad) cld add or aad mov xchg cmp inc add (bad) mov sub imul mov stc lahf mov mov jle pop xchg int3 es cltd push hlt lahf das ret inc and scas pop add pusha add push pop push xchg and mov out or (bad) decl jmp mov ja in popa xchg dec jg push imul mov pop sub cmp jp stos je std test pushf inc inc sub insb ss lods push (bad) pop scas and mov or (bad) out (bad) cmp cmp mov or mov xorl jne je mov cli add mov add gs jns pop xchg jp jge int ret dec test cmp fwait enter mov pop or jae mov cltd add or outsl jb cmpsb mov jle dec and popa and mov inc loopne pop or or jns mov sub out enter mov ss cld pop dec adcb dec jmp and push dec sbbl pop (bad) mov inc (bad) imul movsb (bad) das lds mov fistpll xchg adcb rcrb mov or dec mov lret cmp ret jmp mov push inc mov mov hlt mov add icebp push pop (bad) jmp rdtsc das inc cmpsl sub rorl jmp (bad) negb js aad inc jecxz ds sub push (bad) dec call fbld cmp jge xchg adc lcall pop pop (bad) rclb pusha jmp dec cli out jg cli scas test sub stc cli js data16 enter pop sbb dec (bad) movsb mov mov and test clc lock orl xchg sub icebp push loopne stos push inc test dec inc insl sbb mov mov arpl push xchg (bad) xor jo cmpsl push and ret (bad) mov jo ljmp sub pop lcall movsb push in or popf orl push mov or (bad) lret xchg xchg insl and mov push int3 hlt or adc mov icebp mov add mov mov mov mov je and aam xchg nop popf and fnsave (bad) int inc (bad) in xchg mov cld arpl add pop push mov mov push femms je cmpsb or push incl outsb pop cmp fist popf jle dec xor shll fprem icebp cmp cld daa scas into (bad) cmp sub jmp scas fsubrs xchg push cltd ss arpl sahf xchg jae cmp sbb cld rcl inc mov repnz or lret cmc or stc aas popf add jmp xlat mov jbe ds outsb inc addr16 jo stos sbb pusha addr16 mov fiaddl lret lret fwait arpl dec jno (bad) addr16 add mov push ljmp mov jns mov in loope sub mov inc std popf lcall adc xlat sub jns pop test xchg (bad) popa iret popa xorb call test test mov mov sbb cld rcl mov mov cmpsb inc lds add mov mov pusha fdiv jmp inc imul push das test loopnew enter push cmp je ret or adc rcll sti hlt nop cmp xchg leave call ljmp je into aad das xlat daa xor jmp pop (bad) outsl lahf inc xor call mov movb cwtl test mov pop or hlt cli sarl stc (bad) mov jg das daa aas gs pop mov ret mov and or push std les mov or ja mov addr16 mov cmp sub xchg mov cmp cli cli leave pop add cli mov (bad) aad push or scas add (bad) fidivrl scas test dec push sarb fisttp fimul add leave dec in movsb lcall jns push cmp inc mov pop and test out in sub mov xor ja mov mov xor aad sub shl mov adc cmp jno fucomp push push stos adc imul cmp sub (bad) (bad) imul adc xchg movsb rclb xchg loop xor inc out xor pop in lret jb inc in mov push fcmove daa mov mov out mov jno xchg out mov and std mov mov iret stos lret lcall xchg or pop aad sti loopne push in jns jne sti mov loop xchg test and adc push (bad) mov push popf out popf mov pop std repnz rorl data16 cmp sub pop jne out fldenv sete push imul jb pop sub cmpsl lods dec dec pusha js jp push lcall jno or outsb sbb mov stc push aad push fldenv fnop (bad) dec xchg add lea or (bad) mov scas mov scas mov addr16 sbb adc xor cmc xchg test inc dec xor mov cmc mov add dec pushf xor inc fsubs call sbb jmp mov mov mov addl sub sti push test in imul sbb lods xchg jnp idivb pop push ss out (bad) cmp std cld (bad) jb jbe xor or fs hlt jecxz push rol into icebp arpl stos xchg dec leave arpl int popf sub or testl push add stos mov mov mov (bad) enter test dec sti adc and mov lahf enter es adc int add inc nop and popa push mov push mov les inc lret dec ret push pop es clc xlat inc dec inc mov int3 ljmp mov xor enter insl jg push jo fisttpl stos jle jns inc dec xor das (bad) lods xchg scas mov pop andb mov xor mov test cwtl add test mov out mov sbb enter xchg outsb lret loop pop xchg insl inc test icebp (bad) cmpsb jo test inc sbb and push adc (bad) nop and jmp pop cmp daa imul fistp mov dec pop int3 int3 movsl push call fldl mov push mov xor add add fs cld inc push cltd cld pop hlt cwtl nop sti popl (bad) add (bad) popa inc mov push mov (bad) arpl rorl adc popf sbb xchg inc push or add fcompl dec inc inc push jle dec jo icebp pop rolb repz and xchg (bad) sub out jne decl insb xorb mov push jg test adcl negb out xor mov fiaddl inc (bad) inc push and sbb mov xchg clc outsl (bad) test add fiadd jne sub xchg loopne psubd les notb push xor fisubl (bad) negl adc push xor jmp mov fdivl dec stc mov (bad) int mov fimul addl push pop dec sbb add add or cmp aas cld jb inc fcoml rorl sti in add (bad) pop pop xor dec daa daa out int xorb psrlw dec mul outsb sbb push sbb sti fwait mov adc scas les fdivr xchg mov add inc arpl into mov fwait mov mov adc jo pop pop sbb xlat test mov cld frstor popf out (bad) (bad) imul cmpsb xchg call inc and test mov adc sub jbe sub sub and out xor sub push insl push movsb push and sbb dec iret inc jg stos lods shrb push loop cld fptan xchg dec daa push icebp call mov insl dec in mov mov mov popa adc mov fstpt enter fsubs mov adc pop (bad) into mov popa adc adc or xchg ja dec mov ror inc inc jnp,pn push clc (bad) es jle es cmp lcall push or sub sub pop int pop adc mov ss mov adcl fadds rcrl mov sbbb or mov sub js dec jne test addr16 dec xor cld int3 insl cmc xor daa shlb gs cmpsl mov fmull in jmp js mov scas cmpsl js movsl and hlt (bad) sbb inc ret repz add add add lea xor xor add and movsb jp fildll add ljmp lahf fs ljmp dec sbb (bad) and dec cmp push rorb push add xchg push imul jnp mov insl insb mov lret mov jmp out movl inc sub or or movsb cmp mov pop (bad) and lds dec mov mov jns xchg inc inc dec xor test pop (bad) cmc inc cmc ds insb imul sub adc mov jle cld xchg pop push inc push fcmovu xchg jle push mov fsts enter les jmp sub popa mov mov lea adc test call jge adc mov stc push ret repnz stos (bad) jns xchg mov jg fidivr ja fwait xor inc inc sub leave dec stc imul iret lods sub call sub and add jo mov push lret mov cmp hlt add inc into xchg cwtl lock stc pop (bad) push xchg rcll in pop xchg lahf rcll fidiv push and (bad) xor stc les call (bad) or push lock pushf jae jge mov pusha xchg sti inc adc (bad) outsb jbe mov rol lea mov fimul cmc jae inc lods (bad) outsb scas lods xchg mov fdivrs or and mov sub push and dec xchg (bad) bound (bad) jg lcall add adc hlt jae mov aas cmp lea mov push mov cld xchg inc or std scas push das les imul aad int3 adc in cmc ret sub cs dec sub loop mov test mov ljmp add mov add mov arpl cmp jp dec stos rorl and ljmp mov xchg push xchg or (bad) cli icebp loop sbb bound nop xchg jne cmpsl pop (bad) push rcr mov sarb lret sub mov push in push fcompl mov pop mov pop dec and scas std mov idivl adc popf sub std inc or lcall mov out cltd pop (bad) daa sahf jne xchg jne jns xchg or mov (bad) repz mov in inc push jnp xchg pop test or fcoms mov js xchg lea push in dec pop stos (bad) and stc aam inc dec adc das jnp jecxz gs in mov leave inc mov imul pop sbbb or mov xlat adc (bad) push imulb jne inc shlb lods add imul ja mov or jmp dec call cmp jae movsb aas sub add dec jbe mov jl movsl add call loopne cmp mov mov and sbb sbb sbb pop pop or lods mov push in repz xchg pop cwtl mov dec aas add icebp mov push and sub clc js jnp adc inc sub push and pop pop ror mov mov fsubl loop cmc cmp or mov aaa mov jns nop data16 xlat idivl cmp cmp outsl jmp cmp add cmp loope dec cli add mov dec xchg or xor jmp xchg jne pop adc pop test mov (bad) xchg push pushf scas xchg or cwtl or add pop sbb pop hlt ret mov sub mov fldcw notb jo push mov or (bad) xchg ds mov (bad) cli and xlat push push pop (bad) clc mov jo xchg xchg jae cmp in adc leave inc stos aas outsb adc cmpsl push jecxz add push ficoml or adc mov mov inc sub mov lds add mov inc mov pop clc call ret push pop or sti jecxz lods cmp dec push dec cmpsb xchg mov inc pop mov mov xor xor mov rclb pop inc rcrl je xor lcall sub mov cmp (bad) ret int3 imul sbb lcall inc outsb xchg cmpsl aas aas bndldx mov inc (bad) (bad) testb xorl inc call jb rolb enter daa mov cmpsl in mov fsts aas push push cmp rcl xchg ficompl xor pop in outsl repnz test pop (bad) fdivrl push sbb (bad) aaa inc mov xor out or push cli push add cmp dec je mov (bad) pop fstps cmp in xor push cmp mov mov ficom cwtl fsts xor int3 sbb movsb sbb (bad) mov add xchg push (bad) adc cltd clc (bad) nop mov std decb fisubrl daa mov (bad) jge (bad) push jl fisubr and pop pop jnp int3 dec xchg imulb cmpsb xlat rorb daa (bad) aaa int add sub add add add adc xor mov icebp jns xor aas decl or leave mov mov sbb je cmpsl jmp insl lcall stc nop out mov cltd fcomps adc jne (bad) (bad) cmp lahf inc mov imul loop push outsb loopne popa (bad) test inc shr inc add mov xlat mov cmp out jg jno sarl inc xchg or xchg inc leave mov push mov push bound push dec cwtl push test enter sbb in xor xchg repnz pop insl rdmsr pop add in scas xor dec cmpsb (bad) cmpsb pusha mov add js stos mov push fwait push jmp mov (bad) cmc mov cmpsl repz mov cmp push inc push or xchg imul xor cmp pop mov add add aad fwait dec pop cmp sbb inc xor (bad) fmull xor test pop les (bad) lahf xchg inc mov dec sub sub dec scas leave in lods test incb inc cwtl sub mov rcrl mov jge jle in sub mov add add mov xor mov pop mov fst dec lock or add ja jl jl push mov xchg push das dec mov (bad) mov mov std jae je cmp push xchg imul and mov in dec mov jmp lret test push (bad) into push inc sbb lahf cmp mov in adc in or add ret xchg daa mov sbb daa pop in jge xor daa in fiaddl hlt push lret adc lret xor stc jmp sbb xchg mov lods and dec hlt gs xchg mov xlat das (bad) jmp aas ret loopne and add mov (bad) aam or dec pop dec sub loopne lret sbb pushf cmp clc int3 lret fidivrl hlt mov mov jmp mov adc lsl sbb addr16 mov mov lret daa adc imul mov lock mov xchg sti add mov fcoms fsubrs cmpsl fist mov adc popf std inc arpl cmpsl mov pushf outsl rorb pushf cmpsl fucom xor pusha mov outsl fidivrl ficoml dec clc sub cmp scas add fdivrs int cwtl addr16 fwait xor add and scas jnp fidivl popf enter scas xor adc xor leave sub push add mov fs mov add vpmovsxdq pushf into call add int fsubrl xchg cli mov fldl enter xor mov and scas les lods dec sub (bad) adc pop aaa ljmp das outsb dec cwtl (bad) in inc sbb xchg (bad) scas push icebp (bad) out pop loopne sub or scas push push mov ds adc outsl xor push addr16 add push rorl leave inc xchg xchg sbbl mov test ljmp (bad) loopne mov ja push add popa pop (bad) popf jno xchg mov sub xchg je inc mov inc rcll scas xchg clc pusha call and add mov inc or (bad) repnz push (bad) insb lret jmp pop inc int fwait movsl mov ljmp pop test mov mov mov fdiv push outsl movsl imul push fdivl aaa addr16 jbe test aad mov out rcrl inc sarb leave mov sti ss lds lock gs les icebp cmp orb insl insl or and nop sarb iret jle scas enter pop adc and inc pop dec push mov mov xor test test int neg repnz (bad) jl jb cmp mov sub (bad) decl mov jle inc push cmc sub mov cmc (bad) insb outsb mov (bad) sbb stos or sub into ret add sti jns daa cmp sti jmp scas fdivrs sbb jnp dec add cmp decb ret and sahf test mov addr16 mov or jae cli xchg mov test or mov jne cmp xchg add cmpsl aaa outsb sub xchg mov mov mov sbb insl test jmp in push mov or repz aad mov jo (bad) out ret int dec jo sbb movsl imul sub out ds shrb or dec add cmpsl inc lcall aam or pusha cmp push divb (bad) push sbb shl imul jne rcr pop xchg mov xor xchg rcrb pop lea nop add xor insb scas fs pushf pop pop ss mov scas aad jae mov loope in push movsb aas mov add out fwait mov leave sub mov push and mov aad adc pop pop mov or dec rorl pop arpl and push inc jl cmp pop pop mov cltd inc xor or add rorl jl out cmpl inc mov in pop movsl push into sbb lods mov cmp cwtl and xchg out movsb dec fisttp popa jl inc dec or jmp nop mov repz xrstors xchg push pop test push adc adc jb daa mov xchg inc jmp out out pop cmp repnz inc loop mov jp gs xchg dec stos jbe mov es aad (bad) mov arpl sub fcompl mov jbe add sub je (bad) dec iret mov xchg loop cwtl std inc ds xchg iret mov mov jb inc add or ret cmp in push and lock cmpsl mov test lods andl dec sub jp push aad pop je imul insl lret xor testl and je sub jno or cmp out rorb dec ss mov sbb mov pop sbb inc ret pop adc loop aaa pop mov out dec xchg sub (bad) mov mov lcall pop loope pop les mov test mov mov mov or pop int3 scas push mov iret pxor scas (bad) dec add in insb mov fadd dec or aas inc addr16 cltd xchg add (bad) adc mov (bad) ljmp pushf gs pop push cmpsb xchg std int3 loop add scas in sbb loope ljmp add in stc mov add addl loop fsubp in or ja xchg lret or repz enter adc push mov mov ja xor mulb xor lahf je xor scas adcl test int push and or mov jle or int pop add aaa sub fisubr rol std fwait mov inc sub cmpsb mov jl xor or sub pop (bad) jle cld mov jae jno pop leave sbb adc jmp and fcomps xlat call mov sbb (bad) mov (bad) jp fisubl pop cmpsb push imul mov cltd shll xor std push insb insb loopne lcall (bad) push pop mov ss sub and mov or xor int3 mov push mov icebp mov rcrb or ret test into xchg xchg (bad) (bad) scas sahf clc pop hlt jmp bswap pop sub mov mov lods pop (bad) jp pop dec sar inc rolb (bad) jecxz mov inc jnp out mov test jmp and fxch xchg cld test fmulp cmpsb enter adc push mov cmp push or movsb push mov mov ds jno push xchg push jmp pop dec fnstenv aas popf std movd fistp push fucomp ja fwait mov pop or pop imul push mov scas outsl jae pusha bound cmc adc popa push dec xchg mov out arpl outsl mov jge popf sar cmp test fdivrl add outsl mov add pop pusha sbb mov mov out (bad) push movsb scas xchg fwait mov push mov repz mov (bad) data16 push add imul dec dec sbb pop pop bound inc mov idivl aam mov sub push mov insl arpl out inc mov fsubrs daa mov repz iret and or ds jecxz inc mov lock jbe mov icebp sub aas divb inc sub mov jecxz sub outsl movsl mov (bad) jg add mov imul fldcw pop or pop (bad) and and mov sbb or adc repnz loopne data16 in fimull cmp shll iret mov and lcall add mov pusha jmp flds fisubrl ret ss sub jns sub pop shlb mov push pop jle into ret test (bad) sbb out adc clc loopne test pop pop cmpsl nop lahf inc insl popf lea dec sbb and aad (bad) popa sarb fneni(8087 imul dec cmpl es ficompl pop mov inc imul inc stos push dec ret daa or pushf jl ret add loope jae or arpl and and pop imul repz test lcall repnz pop in popa clc xchg jl daa lcall test xor mov outsl sbb xor adc scas pushf cs nop dec shl xchg inc loopne pop cmc test out lods mov shrl adc outsb mov (bad) mov cld fcmovne add add ret push pop (bad) mov arpl je mov data16 mov stos addr16 lock cmc loopne popa arpl sbb pop fcomi push fimull mov mov and dec or mov lock mov fwait bound xor pop popa dec mov in mov pop push jle fdivrl cmc cmp push ret bound mov and sbb cmp mov sub adcl jne jbe and sahf or add xchg (bad) je out pop loop xlat sbb inc add cmpsl xchg adc es outsl push push sbb or (bad) ja repnz xor mul sbb mov jg add clc fsubrs shlb mov push cmp int3 dec cwtl cmpsb sarl iret das jmp jnp pop icebp adc xchg jp jo mov jb enter cmpsl sbb cmp add lds popf inc call add push sahf and or sub ljmp and inc cltd push pushf or add push jae xchg cmpsb scas cvtdq2ps xchg jle addr16 ret ss adc mov mov mov outsb aas ret and ja dec xor adc mov dec loopne pop or cmp push sbb and mov mov into sbb inc jae xchg sbb mov dec imul jg in fcom in cmpsb (bad) mov xchg sbb leave lret push (bad) out inc je add fldcw fisubl les scas daa push mov (bad) (bad) rcl jge stc jns cwtl mov out jne pop mov out lock push mov xor leave or mov aam mov jle popf or jl lret call mov loope fnstcw popa push xchg aad shlb dec sbb xor lods int lds repz imul push and xor lahf fmull imul pusha mov adc and xchg out and or cld jne jge push in ss pop and pop mov sbb shr and jmp or frstor ljmp popa fucomi dec sbb xchg std in ret cli adc or cmp icebp xchg popa insl and sbb aam mov jo dec insb mov pop mov mov (bad) or add cmovno out jns adc sbb test push cmp mov push mov leave adcb mov sbb out fs cmp out data16 dec sbbb or pushf daa mov popf imul add outsl stos push jnp pop cmp sbb or cmp aas pop pop xor push loop test mov (bad) js lock mov pop hlt adc add add mov icebp pop xchg xchg aaa sbb jmp subb mov xor jl xchg inc inc cs insb (bad) mov je scas loopne aas ficom xor jge mov sahf xor mov mov and cltd adc test out dec dec adc loopne movsl jo mov (bad) mov out add nop movsb pop repz xchg test out mov or push cmpsl loope fidivrl dec fiaddl popf add aam in pop stos sti jns mov pusha addr16 jl pushf pop pop decl jp xlat inc (bad) cmc xchg jbe or add push sub jnp pop push dec icebp loopne fs mov xor mov imul cmp call mov mov dec cmp lock jb js nop pop jecxz outsl xor pusha xor ret xor leave movsb mov push fucomp mov adc add sarb insb xorl jo stos add and das mov pop jbe loopne fucomi mov push shrl aaa jo aad push mov cmpsl clc dec add lea and (bad) adc sub in mov stc rolb outsl inc or mov out pop out movsl call jb jbe and inc enter (bad) rdpmc rorl pop jo rcr dec adc sub out cmp dec icebp sbb cwtl pusha push int sbb xchg lret das push pop dec xor mov aam dec add orl (bad) scas in xor in roll (bad) cmpsb sbb scas or or (bad) popa xor dec nopl stos clc aaa lods inc stos sbb ret maskmovq notl add xchg sbb enter jp ljmp test or sub cmp mov mov and xor insl arpl dec and clc sarb imul inc or jge insb mov test xchg pop inc movsb sub cmp push dec mov lds out mov insb lret (bad) mov add push xor into and jg sub sub add and fimull xchg outsb in out pop ret push inc loop push mov aam xchg fld es repnz fstps xchg pop add in cs and sbb jecxz jno adc jb js sbb jo sub sub jecxz pusha push xchg loop inc and lods addb shl lret cli adc xchg sbb xchg std shll out leave and jnp cmpsl imul push test stos and rdtsc aas inc jg mov mov (bad) test inc sahf dec into lea sbb std loop dec pop jbe lahf das or icebp incb popf or push clc mov (bad) ja jl pusha adc loopne (bad) mov inc and test xor push shl sbb movsb pushf jmp push cmp mov jp sbb add jno hlt pop les imul inc jne roll addr16 mov ret mov test notl jmp pop pop fisubr jg mov addr16 and rcrl clc jle xor xor nop lods imulb lods jg bound sarb (bad) sbb (bad) aas cmp add xor adc add add cmpsb fiaddl inc jb arpl mov or pop cmp mov xchg mov aas xchg sahf rorb gs or and cmp jp mov mov add fmul inc sbb jmp pop icebp fs pop js push sti or ja mov sarl xor xor pop or lret mov add rcll cltd push and lret ja mov add push pop pop fiadd ret mov pop sub test out ljmp adc xchg mov xor and and or jle pop jae inc mov pusha xchg add cmpsl dec test out sbb sti repnz and ds pop andl inc push ja cmp (bad) sbb mov or mov dec sub inc sub sub fdivr xor mov sahf outsb mov mov jb mov test subb jle push dec cli scas (bad) xchg push adc add jecxz mov pop fwait and xchg outsl fmulp pop jnp push adc ret push mov push std push lcall sbb fdivr bound mov or add mov add adc inc and ret repz add add pop sbb daa mov popf popl sbb js aad hlt jmp test daa adc mov pop movsl jne in sub xchg lret loop dec mov repnz cmpsb and add fistpl js ja dec and out inc scas in fwait xchg js add lea xchg jg mov cmpsl lods inc push jecxz jae jns sarb call sbb mov add gs fwait and sub sub mov mov lods xchg jle cmp (bad) loopne dec inc lods dec in sub nop outsb dec pop js aaa lds mov mov mov cltd sahf add push aam sbb lods adc js push sbb xchg decb iret sti insl bnd das mov addl divb test xlat std fmull bound jae stc sbb sahf test push popl push enter (bad) scas stos fdiv xlat mov enter sti sub ljmp repz or data16 (bad) stos in test popa jmp mov ret mov imul sub pop mov inc pop sub push and sub rcrb add dec cli mov sar mov jge imul test sarb mov adc pop mov mov push mov (bad) nop negl mov bnd loope sbb (bad) pop addl push idiv push push movsb add mov fs cmp and ds pop lret push mov outsb (bad) fstl pop or inc sbb rcll out inc popf rcrl stos fdivr pop sahf push data16 add cmp pop and push sbb push and push sbb mov cmp pushf lods orl cmpsl movsb mov out arpl dec sbb lea addl push mov mov xchg mov nop out inc jmp adc jae (bad) int3 addr16 sbb ret push daa or imul inc test mov push cmp in loop insb dec push addr16 and pusha aas push arpl loop push pop cmpsl cmp pop mov addr16 xor mov stos pop insb pop push mov (bad) int add out scas push loop addr16 inc xchg sbb pushf adc shrb mov iret sub fisubl mov ss mov in sbb cmp pop jp jl cmpsl stos xchg in into mov or stos dec or cmp adc lock jge inc imul and xor jmp int3 xchg loope dec sbb sarl aas cmp pop jge test sbb mov inc mov insb stos in jecxz ror ja mov or mov jge dec mov (bad) in cmp mov pop out mov in push add push push mov movsb int3 popa mov push sti sbb das clc and ja or push (bad) xchg repnz jne jecxz xchg sbb popa mov pop rcll dec pop sub mov sbb int3 out and mov and outsl dec (bad) jns cmp iret mov push cwtl xchg and pop mov cmpsl lods add inc mov xor add add sti aad push lods xchg mov and jle fs xor out xchg xchg call mov je sbb cmpsb sbb push and iret loopne inc pop push stos mov add test xchg lret mov inc fmuls in aam jle xchg fidivr push jne leave sarb addr16 xchg fistp outsb mov push mov cld adc cmp outsb mov add cmpsl dec mov xor fiadd mov out mov sbb icebp push mov roll jp inc xlat push cmp test cmpsb xor mov (bad) xor andb push pushf fstpt stc or dec sub fstps das insb dec add loope jbe add stos cltd mov arpl adc (bad) (bad) add push mov in sub push push andl pop fbstp pop sahf enter xor shlb jle inc cmpsb xchg lret adc push push pop jnp fidivrl data16 xchg aam jns fdivrs pop sub inc jb mov lods ror aas adc mov xor dec xchg pusha mov mov int3 jmp pop fwait aam or inc pop repz lahf mov add mov outsl mov dec push sub fs xorb jae and lock sbb inc rcrl cld and fistpll (bad) xchg mov rcrl and stc sub dec add mov enter mov dec jl,pn clc leave in into jae push call int3 mov push aad fs lods int3 flds xor mov ds inc mov and pop mov cmp std leave dec int orl inc popl lret das je adc int3 pop mov or lock or push imul sarb stc sbb push push out dec ret test xor add cmp xchg js in and pop gs add int3 mov gs lock roll (bad) rolb imul mov sbb pop cmc xor sbb loopne inc inc pushf cld adc pop mov mov cli pmulhw sbb arpl or mov ret adc dec std insl lods or jl mov shll mov jecxz in shrl sub mov roll pop sbb pop movsl (bad) pop adc imul ficoml adc xchg pop mov sarl xchg pop hlt and punpcklwd shll push or cmp lods lods and cwtl dec add xchg iret or lods adc lds repz addr16 nop mov push ret fdivl loop popa push test pop aam hlt push dec enter mov ret movsl pop add popa int test int3 hlt (bad) mul cltd outsb andl pop cmp faddl xchg sub aam sahf push pop jl (bad) (bad) and test dec lds enter outsb push mov sahf add aam sahf fwait push jl scas xor push pushf mov aaa cmp fcom test arpl bound cmp jle cli and mov roll lahf push lods cmp mov push add jge stos pop repz clc or aad dec movsl int3 fist and ret adc mov xor test dec fidivl mov xor fcmovnu or xor mov repnz jne jle or jge das sub jbe or sub shrl leave stos lock hlt movb imul adc loope pop cld sbbb imul push cld loope icebp enter or je xchg pop loop jmp or dec int mov jle das pop gs scas lret and cld stc inc adc pop mov inc sub adc imul lea mov jnp jg mov lret mov jo outsl insl cmp stos fwait cmc ds xchg jnp jns dec dec mov xchg cmp add add movsb or mov pop sti jno push jmp mov dec jmp rorb xchg aaa stc jb pop and mov push (bad) lock sub inc imul out push mov addr16 mov cld negl test and and fstp sbb pop mov push and xchg repz mov testb mov incb inc cmp jo loop std jl push (bad) sub jl test lret push insl ds pop lahf ret in gs gs rorl add shll xor mov sbb aam xchg inc mov ss dec jbe aaa shrl mov int ret mov mov lods cmp mov xor jns mov in daa shrb sbb enter lods test jb cltd outsb insl cwtl pop mov add hlt and add lret adc mov mov aam and int es sbb rcr mull jge pcmpgtw mov pop cmp popf xor int popf cld or jo adc jecxz xchg dec mov pop fsubrl inc out out mov test mov cmp xor jno je jo stos mov das movsl lods mov mov jl into pop roll pop xchg jl and push jo jmp inc bound sar sub mov jl scas mov dec test (bad) mov insb inc dec cmpsl xor lods mov pop mov aaa mov mov in in mov jno out pop jg cmp adc mov ss push test scas inc add xchg jge lock add testb ljmp mov jo xchg push cmpsb xor adc adc xchg nop pusha jle and jne xor lret ja (bad) or dec gs fs aad mov jae or jno adc mov xor pop pop pop adc mov clc mov insl es mov roll in cwtl pop cltd fisubrl int insl mov cltd outsl xchg adc jo rcrb or dec pusha xlat add mov jecxz mov mov rorb dec test sub int3 mov ljmp xor jp and and stc bound not test test pop stos add negl insb xchg pop fidivr push lret (bad) ljmp jb xchg mov push addr16 int3 sbb fucomp fadds iret jecxz mov sarl stos inc cmp dec pop and es pcmpeqb push scas mov jnp mov ret jp adc loop adc mov (bad) cld jns das sar mov sub push addr16 xchg test hlt stos mov dec xor cmpsl sbb lahf pop pop sub testb dec stc xchg bound in (bad) (bad) dec xor arpl xchg and mov ds outsl fisubrl push cmp xchg cmp add mov fcmove es add xchg pop (bad) lcall movsl pop stos lea sti daa sbb add push and cltd in in out cmp xor mov push fnsave pop cwtl adc add loope nopl mov bound pop push outsl mov js mov inc inc jecxz aaa (bad) add imul inc xlat sbb testl pop repz test pop mov inc repz inc test jae dec cmp push xchg cs jne in push outsl test (bad) movzwl lock push or test movaps and (bad) push push add xchg mov sub xor cmpl or outsl push fsts pop lret mov mov sahf mov push outsl out and or mov push adc push hlt movsb mov fwait cmpsb mov push push sbb xor bnd jmp xor in testb (bad) ljmp dec inc mov leave les je mov rorb out aad xor jp sti lret jl cmpl sti inc popf sbbb fs aas xor xor add add add push sub jnp jnp mov jae mov popf mov sbb dec ret mov (bad) jns into movsb push push sub (bad) add pop cmpb call jbe lret mov scas sbb dec dec sbb xchg dec xor push fstpt mov loope and addr16 cmp cmpsb mov or sti lods or sbb pop mov mov adc adc sarl stc jno jb or rcrb cld inc mov pop ficomp adc pop scas add stos mov sbb hlt push pusha push adc xchg popa test in jl dec inc mov pusha mov dec and jb cmp fs and add cld loopne test fwait out push int3 in jb inc add sbb out cli icebp dec or fiadd (bad) or nopl add push aam jge aaa lret mov xor jnp xchg outsb (bad) movsb jmp cwtl ss lods repz sub add loop repnz and sub int3 xor inc mov (bad) jne je leave adc or ss push sbb sub shl xchg or sub push (bad) (bad) out xchg imul scas call fstps (bad) incb std popa or movsb scas lods mov shrl fsub jo jae and decb lret outsb xor push mov lahf lods cmp cmpsl push bound call or lock push addr16 mov xchg mov es and xor and jo push loop xchg xchg dec test (bad) ja cmc cs ficompl or dec loopne add mov push lahf in clc and stos xchg shlb add imul pop push (bad) xchg and lock push ss test loop decl or push mov cli cmc inc cmp mov jp cmpsb (bad) sub push cmp push cmp fisubl pop xchg pushf sbb xchg in or sub jl insb sbb jp xchg lret xchg mov xor jae out fsubp inc icebp (bad) mov stos xchg pop repz loope movsl frstor andl stos push adc pop iret adc in add dec mov rclb pop mov fistl insl pop mov les or call mov loopne sub enter test popf test inc pop sbb add push pop insl inc das (bad) jb mov ljmp call int mov cmp sbb jnp jmp cmc mov int push sbb sbb sbb dec cmp push aas insb sarl stc popf popf (bad) bound jp sub sub sahf pop and push into inc push out cmc aad add inc lea adc imul aaa outsb mov push dec fistpll dec (bad) push mov dec xor push iret (bad) dec pop sbb jp mov lahf xor dec nop push jne adc addl mov xchg mov mov lea jmp lds dec mov inc lcall and mov xor sub dec fldt cmp push in cmp pop adc test fwait and test xchg inc add scas xorl (bad) and or lahf mov and pop aam fs pop lcall leave inc xchg mov mov cli stos xor bound xchg and push nop sti mov fadds hlt xchg popa or cmp pop xchg out sarb cmp loope out mov (bad) sub test jle repnz into adc inc divl mov push dec sub push ljmp pop mov mov popa pop leave xor ss dec jmp inc dec cmp aad xchg popf imul cmc jae test lahf xor dec ret sub ljmp lods mov hlt add loope cmc nop cs fcoms (bad) icebp test mov ret das jb xor cmp adc (bad) rol ljmp cmp lret push xor mov test jl test incl les fild fidivr stos loope dec ss jge mov adc add xlat int3 outsb mov and sbb pop dec cmp jle push aad inc add movsb rorb jo call out push loop stos xor xchg dec enter daa adc dec int rclb xor mov out aas loop xchg sub iret iret mov mov xchg cltd cld out dec divl mov loopne stc dec dec jle add int3 mov xor pop gs pop jnp sbb popf xchg add out or daa push pop cmp adcl out mov daa cld jp insb (bad) insl mov push dec jl stos ret (bad) es inc and jle das mov adc out ss sbb mov pop mov sub jne iret mov xor test dec outsb jo jmp xchg fildll jns adc movsl jl ds push mov adc lahf pushl das cmp xchg xchg xchg subl inc add mov pop mov pop fdivl stc in cmpsb into sahf push in push add out jge nop aaa jp lret cmpsb jle pop shl inc rorb leave (bad) inc push fnstsw dec adc out in xor stos mov mov cld mov faddp cmc pop lret mov xchg jle jg mov pop fistpl daa jns or int3 shll pop fdivl sbb out mov cltd jmp mov push daa add adc rcl sar mov and daa jb add les cmpsl xchg aaa adc or xchg fst mov fstps (bad) mov jge fnstenv xor (bad) stc stos push mov int3 adc (bad) xchg add lock lret rclb dec insl adc movsb cmpsb ret jecxz adc and ret adc sbb adc xor or xor sub adc stos mov fisttpl jmp movsb add jp jae aaa jns push xlat adc sub push daa sub iret lds adc scas cs popa sti mov add and arpl or mov push jmp pop mov add scas loopne in dec fistl mov in mov dec xor inc mov notl addl mov or xlat push xlat pop adc test pushf pop xchg fisttp and or fadd lock je cmc lret pop mov inc iret and daa add cmp call js dec push sub fdivp imul rcrb imul lahf sbb pop lret mov sbbb (bad) aad das mov aas sbb or mov int3 cltd sbb shrb (bad) loope jno and pop mov inc sbb cmp xor int3 dec jp aas sub jae sub bound push pop je sti mov popa xor enter mov mov xchg jbe es add jne push movsb xor test nop mov jmp orl sub shrb call dec nop (bad) ss enter cmpsl push and pop ret and cmp push cmpsb leave mov test and inc pop jno cmp jge dec fbld scas lods mov jno sub fidivr in aaa mov mov and bound imul jp jge pop xchg arpl out addr16 ficoml lds into xchg add nop dec jne jp add or (bad) push pop sbb dec mov lds push lods or movsb inc jle sbb leave es push icebp les and cmp xchg mov and mov leave test mov les or loop dec mov aad xchg adc in pop mov mov popf mov push (bad) mov rcll (bad) or into mov jmp js (bad) out jae push sahf pop and dec lcall push in cmp insb add ss and push or dec dec dec es sub jo scas dec mov (bad) mov push pop inc jge out jae fiaddl in pop arpl cmc (bad) test pop sub push jne mov pop dec push call push sar xorb or ljmp gs dec mov shrb adc or aas iret inc fisub scas in out movsl aaa adc ret mov cmp xor fbstp das fnstsw xchg sbb mov xor xchg faddl repz mov fimull clc dec xchg jmp insl cmp xor inc fdivr lret stc sti (bad) xor std test and mov mov lock jp sbb jg (bad) pop lret rorb inc inc insb or or xchg inc jmp cld outsl std inc sub ljmp add (bad) out mov sbb clc shrl pusha push push cmc ret sub adc out dec aam adc mov dec test sbb (bad) repz out cltd in js arpl mov ja mov adc das movsb cmp rorb out or cs jl mov add (bad) imul cmp mov pushf push cmp out in fs xchg sti jae sbb sub cwtl push shrl add push or std ja push pop mov mov xchg int pop add ds sub (bad) cmpsl and mov push das mov xchg outsb int mov or or add call sub outsl ret jmp push mov out lret mov outsb dec stc das pop add in movsl add sbb mov sub xchg gs and aaa inc sbb scas loope mov pop cmpsl sub add mov mov mov xchg cmpl cmp (bad) movsb icebp or xchg pop jmp inc in call addr16 adc xchg repz sub sub jne jns jne (bad) into imul ret add adc pop mov mov adc inc imul xchg dec out iret cld fstps jns jle xchg jp sub cltd cmp (bad) loop shlb xchg jnp stos and jp call js sub hlt xchg jno push jecxz dec fildll scas loop jl (bad) in jnp ret pop adc ljmp aam jb jb mov xchg inc jmp sbb movsb (bad) rcll lcall lds sbb data16 jl insb out ss mov cmpsb dec mov sti xor test iret inc adc xchg jp js xchg inc push int les in mov leave xor mov sub data16 mov outsb xor outsl fs insb mov sbb push divb adc sbb iret mov fcomi in mov imul (bad) or xchg jns or mov outsb mov sbbl mov arpl aas mov cmp mov cmp jne cmp pop aas sbb mov sub jns dec repnz mov loop cmpsl fcmovu inc dec test mov pop cmp push mov int3 jbe push mov xchg mov pop sub cmp add (bad) xor xor aas jne xlat mov not cmpsl pop jns or add cmpsl out (bad) loop adc inc push repnz lds xchg add leave mov out sub mov inc out pop push clc sub ss ret (bad) dec push pop mov pop dec sub pop cmpsl rolb cmp int3 nop push ljmp mov imul mov ret dec incb rclb and bound icebp xor pop scas sbb test lock hlt std jg cmp or and test les into sbb mov rcr and xchg pop stos mov dec movsb sbb out jnp add mov repz nop sar add jmp sbb sahf stos scas sub adc and fdivs xor mov (bad) dec cmpsl ss mov dec dec rorb xchg (bad) lea jle data16 fadds mov add add pop push inc int popl xchg jo cmp lods xor adc ljmp and inc add (bad) enter lahf lret push std repz pop cmpsl inc sbb pop or lock and lret pop enter or and add imul sub cli mov jne cmp je into cmp mov pop xchg mov loop lret adc pop or fisttpll xor jg sbb sub pop bound push fptan push (bad) and aam xor (bad) jae jae adc pop fsts inc pop mov xchg iret xchg or jecxz stos ja aas icebp pop inc addl hlt jmp test fimul sub push lret cld sbb dec fs out outsl lahf fidivl cli and addr16 pop pop adc mov sldt add add outsl shrl pop push and xchg jo lds cmp jecxz pushf jecxz mov xlat mov fstps sbb cld add inc and xlat mov cmp (bad) push mov inc lods lahf mov loopne adc mov je cmp jl mov (bad) imul repz inc stc inc out and sahf nop sub sbb push fldcw (bad) pop and mov jmp out dec andl adc dec hlt out pop ret jle fild push push bound lock pop mov mov data16 insl adcb dec add sbb pop fidivrl lea mov aas ret jge jo jmp xor (bad) push jecxz jnp out fildl jecxz cmp xchg loop fdivrs xor test xchg pop cld add jbe mov and movsl and xchg cwtl sub movsl mov adc xchg clc arpl mov and adc mov enter js sbb lahf fs adc addr16 sub adc pop lret sarl adc jl mov jno les adc mov test dec dec cmp and xchg cmp cld mov xchg mov push xor dec or cwtl mov xor mov add flds pushf shll loope jo cld cmpsb lods or or mov and mov in mov mov dec mov arpl std jmp (bad) insl and push xor jp xchg sbb into bound out pop popf test adc sub mov add add dec inc lret and add cmc fs sbb scas sbb incb jns scas fcomp and rcr jl push mov add inc lret pusha insl jl and out push lock in js mov enter fcmovb push mov ljmp xchg xchg fs cmp mov out ja sub je adc sbb cmc pop adc popf addb and add mov inc mov mov inc js mov jge xor int test stos and sub enter sub negb jp inc cmp out scas dec es cltd lods or data16 sub cmp mul sub dec mov inc jmp mov mov cmpsl pop xor fisub fildl int cli icebp add jp sbb xchg jle bound xchg popa push mov add repnz ss outsb sti int3 push add jmp loope cltd push xchg cmp int3 dec ds nop push (bad) les inc jo sbbl jbe add imul or stos int push dec stc aaa fnstenv pop cmp pop lock and fstl cld imul negl push mov sahf ljmp inc mov inc xor pop push outsl or inc jmp sti repz pop mov xor lds pushf add jne lds lahf sub inc imul cli imul sub test xor cli xchg in xlat push fiaddl bound popf mov popa sbb inc cmp or mov jns mov mov (bad) jno pop inc jp mov or (bad) ret ret fincstp call sahf pop or mov mov int3 sahf out xchg sbb pop push sbb cmpl xchg xchg fcomps iret sub inc out arpl adc add mov cwtl pushf add std lods pop clc hlt or movb or dec jle stos adc jg fldpi (bad) pop sbb imul std mov cmp sub pop (bad) push adcb cmpsb mov or jmp sbb in lea push jp lock and cwtl ja add dec and xchg dec mov dec test and jbe call std or test popl cmpl pop sbb das in add and adc mov or and jb es (bad) push add out out mov push or test pop sbb pop jge cld aas sub leave jge fldenv shl ret xor sub iret shll sahf jge fdivrs std mov call push dec (bad) pop add mov pop adc aam ret jmp xchg js sbb adc addl cmp (bad) push dec cwtl lods (bad) clc repz push das fcmovu not xchg and or lods fist imul mov push jle push mov insb inc je or daa push xacquire xor xchg cmp inc sahf mov incb in push jge fcmovbe repnz jmp fnstsw iret push incb popa mov ss sbb and add (bad) mov or sub cmp out sub jnp in pop insb fdiv fsubl xchg jno int3 mov imul inc xlat xchg pop dec pop and jmp xlat loop out adc push fidiv cmc out jo subl xor xor aam popf and ljmp bound das cmp lcall jns je,pn loop ss fadds jge jg mov xchg popf nop mov lods xchg into dec sub gs xlat add fmulp adc pop inc xor jl out inc (bad) or sbb xorl sahf test adc mov cmp hlt fiaddl int3 sti aad mov divl lcall out jb dec hlt rcl loopne mov xchg jns lock add cmc out inc ret push sbb popf imul adc or jp mov aaa jo mov in cmp aad aaa mov fwait sub sbb int3 cmp cmp xor pop movsb pop addr16 mov xor (bad) std cmpsb adc add xchg loopne popa and ficompl mov pop clc ds jp scas neg leave and sbb js int and push es mov mov pop adc fdivrs mov stos subb hlt mov add lret pop cmc lock pop lock sahf scas add or in (bad) mov pop or lahf cmp das jp lahf mov ficom ret xchg outsb in aad imul enter mov stos pop cmp jno push cld xchg add mov add add fist cmp enter mov mov pop test ret mov or sub sub dec adc das mov ljmp in fcmovnb inc lea aaa mov xor mov cs ja or mov fstps outsl cmp fs jge sub jns and lahf in scas push or push pop xchg lahf fucomi aas (bad) dec ss imul cmp push icebp or jbe xor popf mov and daa lds mov dec movsb out aam mov or mov sub arpl addr16 cmp outsl pop int js ja loope fidivl sub xchg orb sub jo adc sub add add fnstenv test test das or rorb add and sub addr16 sbb out cld mov sbb jne adc dec pop jg sbb xlat add mov xchg (bad) sbb mov sub mov jg and sub push sbb lea fistpl dec xchg ficomp mov adc add jecxz test push les fisttp dec and loopne sbb pusha xor lods sbb in jbe sarl lods mov dec cmpsl sub shrb push shrl mov fnstenv cmpsb lahf movsl mov inc fldenv inc push and pusha rcll sbb fidivl xor and pushl and jo mov jbe mov fmuls (bad) into add (bad) hlt ret icebp arpl or outsb fbstp je hlt pop sub cmp fcompl stos in outsl sub push aaa mov jb xchg sub push insb pop lds add div fimull inc pop jnp xor sbb dec pop sub mov lcall dec jno mov inc cli mov or jp insl xchg in inc repnz rclb jle mov jne js out ret dec mov inc jns cmpsb or jecxz (bad) xor xchg sub add mov or hlt dec (bad) cmc (bad) dec mov mov lret jnp imull lret adc fidivrl push mov nop movsl pop popf xor xor scas xor push scas inc xor ror and mov int and pop ret xlat pop push push aas jecxz bnd add or jns mov imulb ljmp and cltd pop pmaxub dec (bad) pop xchg into popa sarl sahf ljmp mov stos lcall xor push mulb cmp mov cmpl sub lcall ljmp push imul xor out cmp lea lret dec nop scas sbbb out cmp and mov fistl imul add mov (bad) mov jmp lea xor leave or in popf cmp sahf imul in push scas mov dec ds sbb mov pop rclb sub ja clc dec adc lret mov mov sbb out cmp loopne mov mov jae call adc xchg dec or lds xor nop and repnz hlt push call add push fs out sub sbb pop loopne xor popf jnp and inc sti test push push fucom cmp jmp dec lahf push adc push mov push dec mov (bad) popf xlat or dec imul mov and xor or sub mov dec xlat pop icebp push lea (bad) jne rcll movb and pop pushf stc xchg sub cmp mov nop push int sbb push push mov out aas jae and mov pop and and dec sbb sbb sub out lods pusha movsl pushf sbb ja int imul insl rcl xchg out out mov test mov pusha out in mov mov dec adc mov push cs mov push rcrl movsl scas and aaa jecxz jnp aad xchg add imul push cmp call lcall push aaa jl sar xlat repz cld mov rcr in loop ret lds ss inc jg push adc mov mov cmp and xchg stos lahf or test xchg sbb push addr16 cmp jbe lods or leave test and mov rclb mov imul xor mov mov push negb or dec jbe mov sbb hlt or arpl mov xchg lods and dec andl mov push in enter and popf fs xchg xchg loop dec or mov cwtl test add gs lea xchg stos pop mov mov mov add add stc popa cmp rorl test in mov clc mov jp sub aaa les dec xchg sbb push xchg and add scas xchg adc mov xchg cmp mov inc aad jns push cmpsb fdivl or scas lret popf sbb jl jle add loopne ss pop gs js xor adc sub pop jg cmp jnp sub jno sahf mov sbb or jmp js pop shl add nop aas je jg cs call and mov enter test addr16 xorb lcall dec adcb popf fimul adc stc mov add cltd sub inc mov jmp mov (bad) aam add jno mov pushf inc jo lods add repnz pop jns sarl add sbb aaa jge movsl icebp ljmp jo xchg in ret insb outsl sub bound push xor repz roll jbe jno lcall test xlat rolb push jo mov ljmp sti inc or add fstps cltd adc cmp add shlb jns push dec push push or jmp mov push (bad) xchg arpl (bad) mov jle jp jle xchg jnp pop jp mov pop gs in mov subl cmp fiaddl ret (bad) scas insl xchg adc gs dec xchg hlt daa in lret xlat fdivs sbb in popf sbb in mov push decl push jns les insb jp outsl insb lcall mov push into rep push inc and scas (bad) (bad) pop nop push adc sbb add add nop mov aam cmp stos fsub and xlat xchg data16 cwtl (bad) jg out adc add xlat dec ror mov rcrl pop lcall insl sub adcl sub cmp pop std pushf shlb add cld scas shrb (bad) (bad) jno xor mov xor jns mov or fsubp and mov (bad) push shrb mov and inc rclb fisubr cmp xlat sbb test je or hlt cli and push xchg loop xchg lock xor outsb fs dec adc rcrb push mov push sbb inc cmp test mov push inc cmp pop push (bad) sbb hlt js sub sahf or (bad) shrb call and lea scas mov and ss pop test mov jo in es mov and enter mov jecxz push nop rcr mov (bad) and jno ds lods adc jg arpl adc sbbl js in and adc movsl ja loop cmp xchg test ljmp leave test push mov lcall mov movsb fistpll data16 or push rcr cmpsl xchg movb pushf mov pop pop out mov popf ret stos xchg and imul pop cs pop fucom das push cwtl out and scas mov (bad) xchg xchg push loope cld and jge push insb push adc dec dec aaa jbe adcl mov scas addr16 adc mov pop inc lock notb add loope shr sti mov cltd sub add scas enter push pop ret lret mov lds repz xor popa (bad) idivb test (bad) lahf imul pop xlat push fbstp mov loop or push or xchg sarl dec mov popl sbb (bad) xor mov rol inc xchg sub mov jnp inc push cld int xor mov scas dec pop movsb aas mov out jp fs sbb mov inc cs sub ret mov rcr shl insl jns fwait inc arpl dec out insl mov mov and das (bad) xor sub push cmp stos adc mov sahf out clc in fcom movsb lret xor pop mov test inc push test xor ja out xchg mov int cmc xchg in pusha movb mov or pop lcall xor ss and add sbb mov or cmpsl xor mov out insl hlt jle fbld xor jae jnp rolb jmp jae hlt cli xchg jne movsb imul xor mov and sbb lret emms sarl push pop mov cmpsb sbbl inc rcl je into (bad) adc adc cmpsb mov and mov or insb daa pop pop mov mov nop mov insb in cmpsl and ficompl fldl hlt in addr16 mov hlt je mov sbbl jp jne faddl sbb pop fidivrl or in xchg sarb popf push stos add cld mov pop out (bad) daa push push pop std inc movsb add insb test and xor push fnsave add lcall add add int3 fxch fsts rcll or addr16 adc jno call repz lods jle repz xor and sub add inc js fs mov insl test pop jnp lret inc jl jmp add and aad clc (bad) jne stos sub jno fistp aaa push mov fcoml mov or (bad) iret arpl sbb in xchg and leave cmp leave add or lea inc pop jns pop flds mov aam lcall add aas or (bad) aas fistpll je add push repnz and adc xor scas inc sbb pop mov shll iret cs sub arpl mov jbe (bad) jbe xor int ss outsl or add bound jle cmpsb jmp in adc cwtl pop push stos enter pop repnz (bad) push pushf ja mov jge mov in dec repz jmp mov jl sbb in jg sub mov sbb cmp fs incl icebp dec jno adc lret cmp test in (bad) nop imulb or mov fwait push pop fsubl leave mov xchg push mov and pushf xorl es mov movsb daa (bad) std pushf fwait sub sbb cmp push sbb jge or push xor add movsb lods xlat or sub pop mov add jno add inc test cmpsb inc xor icebp mov iret in inc cmp sbb sub lods jbe jge fadds pop out mov push (bad) aaa sahf pop add gs aad ficomp xchg inc rcl cwtl (bad) or es mov jae jb aam ret aam scas pop adc add mov xchg dec jp movsl out xor and mov movsb rolb stos (bad) mov test cmpl into sbb dec xorl outsb adc or cmp and fsubl fldt mov and (bad) sahf jl popf xor fistpl adc and jb dec or sbb lds cmpsl cmp mov push ljmp sahf in out jbe xor cmp dec jns not cmp scas jno cmp rcrb sub adc stos (bad) adc jo jb popf sbb repnz adc inc jle aad addb jae add and fldl mul add mov ja test movsb pop mov sbbb push sub cwtl gs aaa into (bad) push push and mov and fsts fs push jecxz mov das push cli and sbb cwtl jno in in (bad) mov imul adc out mov cmp xchg inc xchg cmpsl cmc xor aam and mov xchg or clc jge outsl jno push jle bound cmp sub push cld movsb fs cltd push xchg mov popa sub sbb mov or pop mov pop movsl inc repz xchg fisttpl pop repnz xor jl mov mov shl mov pop ja shl cmp pop jae push adc cmpsl cmc push mov sub inc addr16 cld repnz addr16 mov (bad) rcrl or das stc and xchg mov adc jecxz enter add iret push cwtl (bad) jle idivl lret push dec (bad) mov xchg cwtl std test pushl das cmp pop nop jp jmp or add mov sahf (bad) lock pop in jle push ljmp mov xchg cmp jnp fwait cmp adc mov fnstcw lret fidiv out xor xor push pusha aas inc lahf jno push adc add sbb test dec in xor lret dec divl das scas pusha push sub adc std out push lea adc sub inc (bad) notb and xor mov dec into xor insb ret mov scas jo mov out pop mov cmp mov mov push push sub xchg andb and or sbb mov mov pop sub push and cld sub sbb clc sub sbb jg pop cmp dec popf cmpsb add sub addr16 add xor mov addr16 addl pushf ret push (bad) call mov insb and jns mov pusha dec mov inc jg test jge addr16 dec in jno dec mov loope cwtl in push mov or xor ljmp ljmp cmpsl pop inc inc (bad) jne rorl jnp cli rcrl (bad) or call cld mov es icebp movsl icebp call xchg addr16 cmpsb and dec jg scas out adc cmp xchg pop inc mov mov loop mov aam adc and cvttps2pi mov xchg cmp or xor cwtl xor mov xor cwtl add dec ss insl pop dec jmp mov mov mov js lock jmp out mov and pop inc jmp pop sub pop inc ret (bad) out xor xor iret js gs lcall sub sbb gs add loop leave jmp out stos (bad) into xchg jmp (bad) insb xchg out pop xor stc sbb add or mov aam nop jl fstl mov pop xchg inc sub xlat rorb es cmc xchg cmp clc je imul js jno int push movsl adc xor rcll aam and lret fsubs rcl xor mov mov out fs (bad) xor mov adc add fildl ror nop add imul or imul lock adc add sahf std push (bad) jo test dec jl push sarl xchg pop fsubr cmc mov es loope push sbb daa cmc xchg leave js nop sub push jns shll or pop push fisubrl jg aam mov inc jnp xchg xor and xlat inc or subb shrl jb mov jmp mov dec xchg test dec mov push xor or push jmp call lea ja pusha xchg lahf into cmpsl fbld cmp stc jno cmpsb push pop or or adc outsl mov inc jmp add adc arpl popa xor (bad) jg inc mov and mov ds jmp dec jge stc push mov sbb xor pop fadd jg adc adc xchg ds ss push cltd mov call xchg popa add dec mov shrb (bad) fiaddl cld and cmp out jmp aad imul mov xchg adc pop int dec in dec mov or xor insb in test xchg jb mov mov pop scas mov inc mov or sbb adc lock push pop push in incl and dec jmp mov dec or sub push in or test mov repz push adc jmp xchg jne and in push pop pop (bad) hlt pop jmp xchg insb ret pop and jno adc pop out rcl and cld and test xor cmp pop shr cwtl xlat push mov add inc movsl test or xor icebp in mov mov je pop xchg jg cli jno (bad) cmp insl icebp notl out cmpsb fidivrl push in fsts bswap (bad) stc xchg dec aam out cwtl test and icebp fstpt jne cmpb int es pop stos sub pop xor cmpl outsb (bad) int3 push pmulhw (bad) scas (bad) sbb fwait xchg dec adc add jo dec dec xor and addr16 add (bad) mov sbb outsb fwait xor mov add stc lahf cs and and cwtl rolb lcall xor fisttpll lret repnz or fdivrs jbe mov dec es mov ljmp aad xorl in out jnp pop idivb (bad) aam push ds mov jecxz or add loopne in jmp sub imul scas (bad) (bad) mov or call mov adc xchg out cld inc xor popa (bad) loopne pop out test xor pop fdivs dec in add mov dec fistl aaa jmp imul jge in xlat in mov (bad) popf mov clc frstor dec adc (bad) movsw and inc cmpb xor sbb pop lea out lods mov mov rolb fwait (bad) jae mov aaa pop lret xchg xor insl ret push sub je sub dec add nop lds cmp add mov out lret push gs subb out je mov add pop repnz jl insl int and movsl daa cld popa lock sub popa popf jns xchg in sti out mov jnp xor jae jl ja add clc dec lahf orb cwtl push inc je push cmp xchg gs jne rorb mov push popa push fcmovnu pop popf (bad) sub add push call or decb jge cmp xchg dec xchg cmpl xchg in (bad) fsubs xchg loop pop push mov repz jp xchg fdivl sub cmpsl inc mov scas shr (bad) push mov push gs xor in pop adc fnstsw sbb xor outsl jo sti (bad) dec dec mov pop in icebp enter push pop cmpsb push fisubl test idivb mov mov in iret fwait add testb cwtl and xchg add bound aam xchg or dec clc dec sub sub movl rorl enter add ret out inc push inc inc insl push mov xlat push test jmp xchg lahf xchg ljmp imul insl mov dec mov add jb out repnz das or mov mov jo in jns test inc mov test decb lds jge mov scas jl sahf (bad) mov mov out xchg insb adc lds insb cli outsb pop xor fwait imul push xchg mov sub sub mov xchg mov xchg in cmc out and xchg add test pop out pop mov dec fisubr and out in mov popf lods cltd mov mov nop pop xor jge adc sub scas fbstp sti (bad) mov adcl add cltd mov (bad) sti mov sub int fs sbb jp stos jns mov add andl jb (bad) xchg aad bound (bad) icebp pop gs xchg jle inc fs pop (bad) dec pop xor out push xchg xor jle pop and dec cmp xchg mov jmp dec jl cmp or inc pop pop lret (bad) mov loop push imul adcl mov stos je sbb rclb push push test push divl sbb test iret xor fsub dec lea jne in std stos sti sub add inc mov (bad) leave aad jge xchg xor inc and jle clc lcall imulb mov cld pop ret loope int3 rclb clc rcrb dec (bad) das mov sti add arpl add push mov dec mov jg (bad) stos mov sbb lret xor or push adc stos rorb test mov lods popf arpl jl xlat mov orl dec jb outsl cmc movsb ja and stos lods lret test in xor pusha push add (bad) and cltd leave inc ss jo lods fstl lcall and mov test out mov ja push outsl loope decl dec xchg jno das aas es or jne mov mov cmp inc jo sbb movsb std xor xor pop gs movsl sub mov int scas mulb aaa stos das and leave inc out fidivr cmp inc daa adc xchg shrl rclb jmp mov cld outsb and inc push adc (bad) lahf hlt xchg hlt and add mov push pusha jp dec pop cmp jnp arpl adc jecxz mov jle push jmp add xchg popf cmp inc pop fdivl lock adc inc mov int sub cmpsl aas int scas aas inc xchg or jns shrb dec in lock jb mov and out adc scas in adc lods add sbb jge fbld push xchg ds adc test imul inc xchg int3 sbb mov call or mov pop pusha xchg fldl pusha or xchg cmc popf lods popf cmp lret leave push in cwtl roll aas adc lret aaa imul inc pop mov lea das sbb push ror pop dec movsl out or data16 add jnp (bad) (bad) mov adc adc xor xchg add push clc adc adc jp icebp rcrb sub rcrb popf jno daa xchg int3 lahf in test rcl jge out xchg sub pop push jo into pop lret js or icebp pop cld and faddp push (bad) or test cmpsl out insb es inc mov lcall clc dec cmp out inc lock fstpl dec xor jb rorl lods sbb cltd xor repz cmp xorb loope xchg xchg mov lock sbb cs sbb add jb cmpsl outsl vprotw (bad) sub inc popa in or push mov mov mov bound lock xchg ss outsl mov inc fild repz mov insb jmp hlt (bad) sahf add pusha outsl fildll mov insb mov out mov gs mov cmp push ja (bad) lds mov mov sbb lcall or xchg jge sbb in jne adc call inc push insb in push cmp popa nop sbb and lret cmp jp hlt push lock mov lahf aam hlt out jno ret test xcrypt-ofb cmpsl jmp insb fistpll (bad) inc test cmp imul stc jp xor pop adc mov stc mov sbb inc stos dec jl imul fdivrs loop in test or int3 xchg loope jge and rorb adc and mov call mov push and es sbb aaa fcomip scas test ret mov sub dec sub xchg pop jae,pt inc (bad) imul sbb xlat mov mov push clc in cmc inc sarl in loopne sbb repz mov das ret mov cli fildll sub push inc rcrl pushf jmp pop cmc popf out jae rcrb call lahf arpl or push or sbb (bad) or out cmpl mov jnp and add lea mov ror lcall pop mov rcll and mov dec dec and and ds xor xchg subl mov sub or mov xor fildl jp and les pop idivb pop mov xchg xlat pushf iret out jbe and inc jg repz cmp mov jnp (bad) js xchg dec dec jns ss cld adc push flds xchg imul cld mov repz test test (bad) cld xor mov js xor es jae enter std cld jns (bad) xor adc inc pusha pop dec out int3 lods mov push mov jle in cmp fldt std lret push imul and push push pop push aad xchg pop movsl jo ljmp mov insl fwait out test push jle and in (bad) jne out jne jb sbb xchg pop std jno jmp add xor push rcll (bad) je jg aam ljmp xor repz fldl xlat (bad) push loopne insb int3 repnz fnstcw icebp (bad) daa mov dec ja sbb mov ficom jmp push xor rol push add shrl in ss xor (bad) pop xor and js and inc adc cmp mov mov int cmpsb jb and xlat inc add ja pop jecxz scas inc adc adc and (bad) mov jo xchg js inc cmp daa sahf add push mov int mov das push sbb xchg imul jae sub cmp and dec sbbl fs (bad) lret sbb or rclb lds loop or in out jne sub inc dec pop xchg cmp lods es cmp adc out add xor sahf popa push or (bad) jbe rolb sbb jno es jne add pop inc xchg mov pop ja mov roll jae insl and mov popa in sbb mov cmp jmp inc sub fcomps and fcompl inc enter inc jns scas shl rorl enter int ret xchg out stc in sub add push pop mov in mov push mov rolb inc dec (bad) out dec jb movsb or or (bad) sbb jno repz mov pop pop ss jno sahf sahf cmpb lcall aad xchg or adcb push cwtl pushf leave adc test aam imul sub and cmp (bad) lock mov push xor dec xchg mov int3 xor out add inc pop or mov je cmpsl rcrl push push int sbb lods xchg adc inc mov fcom enter mov add je sub xchg test mov adc mov (bad) sbb int3 nop push sub jno sub cmp cmpsb sti or push pop push dec pop lods das mov test (bad) std fsubrl pop subl add lods pop repz cmp out cld lret lods inc movsl (bad) jne mov aas and adc sbb sub lea add fiaddl push test lods jns inc fdivr pop leave int das mov fsubrl jae dec arpl xor jo dec nop iret dec (bad) repnz lret cmc dec (bad) loopne push jns mov daa adc clc jecxz int ljmp leave mov sbb mov adc sbb push cmp push out dec mov push cli xor (bad) jbe popf subl cmp mov inc fs sarl mov mov adc xchg pop inc inc jb (bad) lock aaa jae cmp lea ret pop xchg pop xchg xor or push subl push pop loopne incl mov mov sarl ret push jmp enter cmp sub mov pop mov call mov cli lret pop cmp enter sbb das scas test xchg push pop sbb in dec sbb and addr16 mov xchg and rcl sahf sub addb les or test push iret shrb or dec inc out popa jbe and leave dec loope sub sbb imull jl pop lcall xor fsubl mov loope (bad) in mov (bad) divb mov das pop (bad) lods cltd cli sbb push and add in jmp inc popf inc jo add arpl adc (bad) fmull mov mov mov xchg ds ss shl push ljmp imul and mov mov insl sbb pop push out adc mov fidiv shrb or aad and xor or sbb mov (bad) jne xchg jb loope scas inc fisttpl dec out lock xchg inc loope jae lods stos enter lds push mov jmp mov rolb es mov loopne fsts ret js,pn loop popa mov enter jp imul or fs repz xchg rcr dec cmpsb aad push setne cmp mov cmc sub add mov lahf js aad pop or sub cld out pop and cmp and lret out push into push ss xor adc pop loopne shrb adc xor nop xlat push and sub js sub push je inc and pusha mov out xchg or cmpsb andl mov rclb fiaddl iret mov (bad) push pop push je and xchg sarb push lea xlat dec push (bad) popa xor mov stos push xchg fisttpll mov test mov sbb add push sti (bad) adc push insl sbb mov call mov dec in rcrl dec loop mov idivl rcrb mov mov repnz dec xlat mov rolb mov jl das int3 push and xchg daa pop cmp pop iret dec xor cld cmp cmp jo adc mov add enter xor sub daa adc je jns call repz loope outsb xchg mov or xorl enter jle adc mov in cmp mov push mov or cmovae push rclb (bad) xor ljmp add adc lods int3 sub push lock js and sbb (bad) repz push mov or mov stc insb (bad) test cwtl roll lret inc cli mov dec scas es lock or andl dec mov inc lahf jnp add frstor loope mov rorb cmp or sbb push (bad) fiadd and orl mov sbb dec xor scas and leave lret ds sbb scas (bad) xchg popa jnp xchg and push add fdivs ret push pushl into cmpsl cmp and lock outsl into add dec adc fsubrp dec lea inc cmp jge int3 pop lock shlb (bad) loopne and in aam mov ds xor scas xchg push call mov push loop incl (bad) std test ret inc and inc fs xchg mov dec ja sub pop movsb loopne scas in int pop pushf dec jmp fistpl fisttpll (bad) fildl sbb inc push mov stos in or add mov adc repz lods ljmp mov in movsb lock mov aaa packssdw je scas or lds mov cld in jp test in mov jl fcmovnbe outsb aad xlat mov xchg lods insl daa mov repnz push addr16 xchg add jmp dec sbb and cmp loope jae cmpsb adc sbb dec mov mov sub insl bound (bad) jg js mulb aaa ret mov shr fnstenv jno add lock inc (bad) jo mov push cltd inc sub inc dec aaa fnstenv and cmp mov xchg sti cld stos test aad mov add dec out loopne adc xchg arpl pop mov push cmpsb push jbe loope push sub rclb mov sbb inc es fcoml mov pop enter enter jge xor mov jnp jl dec push rcl sbb dec push xchg or xchg mov adc push adcb adc dec out pushf (bad) xchg inc push aaa push mov jb inc add sub ret cmpsl cmpsb and ficompl pushf das cltd adc les ret ljmp push sub loope cs sti push xor lea rcl pop or cli and adc jmp push test mov cmp mov pop insb and das xor push ds sub push mov insl std push popa and xor push lea and lcall push and push ficoml ljmp adc ret lcall jns or mov add lret cmp and jp fwait call pop dec mov adc push jecxz mov add push loopne or xchg out inc push cwtl in jg or mov cltd inc outsl es lods ret dec (bad) add mov in sub xchg xor stc add aam inc jnp lods stos jl add loope dec mov inc fadd cltd daa pop lock pop cld popa or push mov jae mov pop fldcw pop scas enter or sahf (bad) call dec cmpsb inc or push rcrb flds or push mov and in sbb push jecxz aam js xlat ret test test ja int3 sbb jmp cmpsb fwait lods dec cmp stos dec (bad) mov mov pop stos loope xchg fisubl rorb mov imul arpl push pop pop lahf out push jbe lret arpl adc mov rclb pusha cmp jp dec lock nop cmp cmc cmp enter addl push loopne add add mov xchg addb decb (bad) add push (bad) dec mov add sub mov decb sbb loopne cmp and push int3 subl lds scas out mov cmp push imul in mov mov push arpl mov xchg aad cmc push ret jne into inc adc ja sub push in or stos sbb (bad) jl cmpsl test pop cltd rorl xor mov lret jge inc gs jns in dec xor add sbb lock mov movsl ja push rorb xor cmp pop mov outsb jp fnsave pop mov xor sub (bad) xchg cli (bad) aaa xchg add or loope jp adc mov aas xlat push sahf jnp cmp xor xlat cld subb xchg icebp cmp xchg push jle icebp add add mov mov shl mov dec xchg mov add mov mov jmp pop scas shrb movsl mov dec movsl or push mov pop popa and out and lods pop std cs js (bad) movsb aam push cwtl sbb inc enter xchg mov fldcw (bad) rol cmp loopne pop adc push sub sti push sub and test cli addr16 jne rcrb push xchg insb js paddq addl pop imul and sbb xlat call mov (bad) adc sbb pushl fsubrp xchg lret xchg clc pop in rcr fcoml cmp out fild xchg clc sbb add stos cmp mov fwait outsl sub mov mull rolb movsb or xor repnz pop xlat in out inc ficompl iret or adcb add aaa jecxz xchg popl lods iret jl inc mov mov sbb fs push shlb (bad) in cmpsl ficom push fs jb add mov mov xor sub fstps rolb cmpl add aam pop out mov mov mov loopne inc pop cmpsl cmp add pop sbb leave leave jae lcall loop or mov call test in xor aam jbe mov jl push dec test xor or mov sbb cmpsl (bad) sub inc push aaa or cmc scas aad mov (bad) aad (bad) and loop add pop loope sarb cwtl add fsubl dec push dec pop loop in dec ret decl pop xchg add or cmp xchg dec scas fsubs pop xchg pop adc adc adc mov push jmp aaa lods divl mov pop jns dec push (bad) push fsubrs lret mov push lahf xor mov xor lahf loop cmc sahf int sarl faddp jg cmpl (bad) add push je aas adc xchg mov iret testb xor jle outsb pop leave outsl sbb in fwait and in out sbb inc (bad) outsl pop insb adc pop and mov or and fldenv scas and and int and imul lock sahf xor pop test icebp pushf out jle es push rcrb mov jl pop cwtl insb mov sbb sub xor rorl xor leave ja out cmp add mov add int or sbb jns fisttp ret jle loop insb mov cmp pop shrb mov stos inc lret push jge xchg xor hlt or mov jecxz lock mov sbb mov enter icebp fcmovu jge mov add pop jg pusha imul pop cltd mov inc jmp mov outsb and loopne sub mov cmp por cltd push xor js (bad) out jae (bad) aaa pop mov sahf icebp call mov (bad) jb je xchg scas sbb push das jecxz push push add xor mov cmp mov jns (bad) out sti pop jecxz,pt jl lahf int3 sti sbb jl jp popa fidivr mov daa in jmp mov dec iret cmpsb dec add xor mov pop mov (bad) mov jo mov push jne push repz fstpt cltd test sbb (bad) push inc ret arpl mov (bad) inc jmp aam add cmp shrl rorb xchg or jno js inc dec shrl pop orl scas insl mov adc pop inc repz add xor mov mov out fsubp test dec repnz dec (bad) lahf jecxz cmc fnop hlt aam shr test xor (bad) int3 (bad) movsl pop cli inc cmp and fsubrl mov adc popa fcoms in mov cli pop pop sub sub or or bound lahf movsl jne mulb imul aas inc sti ret cltd push andl aas ljmp push xchg addr16 fcmovnu push sub pop xor or add bound pusha push or fidivr mov aaa add imul add push std add xchg (bad) (bad) mov adc pop stos fldl2e xor cmp mov mov or bound dec outsb fs mov call pop sub cmp out loopne mov push xchg icebp push hlt in scas mov pop mov dec fs pushl nop and rcll call add fist lods jo mov decb mov mov or xor cld pop mov flds mov ficompl movsb lea mov fiaddl test add dec rcrl cmp imul pop or cmpsl fdivrp push lock nop pop add rcrb nop push adc sbb outsl xchg adc popf mov add mov mov pop xor xchg dec fstps pop addl pushf adc push fptan or scas out (bad) lret cmpsl int (bad) notl inc xor movsl dec outsb mov stos dec push sub enter sub outsb mov fwait mov push jns mov dec stos hlt mov out push test pop rorb into dec (bad) dec sub stc mov push mov inc add mov fnstcw inc cltd add mov jmp data16 cltd fsubl mov sbb pop sbb mov push inc incl imulb addr16 add (bad) dec and in enter sbb jne cmp call and das xchg mov mov pop in js jp cmp add movsb mov mov daa xchg lods test cmp xor xor or fbstp jbe mov push mov (bad) lods ss pop sbb into mov add gs in sti add popa mov push jmp or push scas adcb adc dec push inc sub mov inc cmp rcl cmc sbb xor and xor test in push xor dec lret hlt sub cli xor jmp outsl xchg lods sbbb orl jl jle (bad) fcmove jg lods mov mov das xor mov push mov outsl loop inc dec aas ret scas mov rclb mov mov sub loopne sbb sbb sub fildll fwait lcall test ret sbb mov (bad) cs inc jne ja in sbb add mov in mov xor fwait sbb gs mov xor aas sub push xor test (bad) mov mov fbld xorb pop fwait jge cmp and dec fldl insl jecxz pop (bad) pushf pusha sbb roll mov daa xor and outsl hlt dec xor out inc jae pop and cltd out mov jl push pop mov sbb mov inc sbb mov jb mov nop xchg cmpsb lds sbb xchg adc cmp mov cld (bad) enter lret mov push paddsb jecxz mov jno outsb cli adc cmp or ret cmpsl sub mov jp imul xchg pop or sbb mov push xlat aas xor push sbb inc adc xor add adc mov xchg and popl fisubr aaa sub hlt sub adc push jo or mov inc xchg pop dec or mov xchg notb sub pop mov (bad) rcrb aaa cmp nop jo push fwait or imul mov cmp das pop sti dec int pop push and lock mov into (bad) or dec bound xchg outsb sti add sbb mov jecxz or imul call jle jno,pt test cmp mov cmp sub inc fcompl mov lahf xor jns pop popl xchg push mov movsl mov sbb xchg or loopne xor div sbb arpl pop mov ljmp in (bad) iret xlat dec fs sub fbld into inc jnp xchg or fmulp fstpt rcrl subb or jmp push push iret sub jbe mov sbb cmpsb dec sub mov sbb xor pushf (bad) int3 cli sub xor fwait xor imul lret repz pop push or je fistpl pop or xchg in push fiadd cli and fsts xorb sbb push xchg sbb iret cltd ror jmp fxch cs add scas push xchg std std stos (bad) mov decb cmp out test pop test bound ds lods pop movsl out out jmp sub push adcl adc mov js,pt mov sub ss leave inc imull jle cmp ss fcoms xchg test mov cwtl mov (bad) pop or add add add jle sar jns test adc lock test dec cltd push add sub mov (bad) (bad) sbb cmpsb in das mov sub jnp pop adc jge inc and mov pop inc dec and mov fwait scas xor lsl fisubrl (bad) call pop stos add mov movsb lret pop lret and xor js popf pop mov mov pop cmp sahf sbb adc movsl cmp cmp lea arpl jno ds push insb push test mov inc ficom stos add test cs jb mov fstpt jge mov icebp test push in xor adc stos fsubl sti aaa test pop popa mov mulps lahf or (bad) ja jp sbb fisub pop mov (bad) push add enter test out aaa lods inc mov loopne je push ret out inc enter push fwait mov (bad) mov rcr cmc push fsubrl stc aam jl,pt lcall rolb sub js ss sbb and push in cld iret and aad stc iret cltd push mov loope sahf mov (bad) shlb pop mov ja (bad) jo in iret repz rorl (bad) fildl scas jne enter pushl cmc lods and (bad) push stos mov popf sbb pop xchg sbbb inc sub mov rcl adc iret iret add sti sub call scas dec xlat test icebp pushf or jmp add jp xchg mov loope faddl lock leave adc out (bad) (bad) sub (bad) lret in fsubs aas (bad) mov mov add pop xor or daa insl sti rcl lock mov aam es pop pop add jo mov popf cmpsb sbb inc loop push dec rol lea iret xor ja ss aas lods (bad) mov inc fidivrl inc xchg lods cmp gs or mov pusha xor xchg ror jmp inc loop push push inc out jns jle sbb mov repnz jmp sbb in fcomps into or mov mov insl int cmp cld loopne and js jae icebp pop aad add aaa lock xor ficoml outsl es lock ret sbb jg (bad) jmp or dec cli lock mov aam mov int aaa bound pop stos movsb mov cmpb inc dec push xlat mov cmpsl iret jg add (bad) popf pusha xor lret sub mov sub mov outsb adc push xchg pop mov xchg fstpl and nop pop adc lahf push mov ret fwait cltd ret sbb mov jb and pop inc in fsubrs add (bad) jbe xor addr16 popf in mov xchg add test push enter adc test bnd incb adc sbb sub (bad) decl lcall pop js (bad) xchg pop mov insl cmpsl sti add jno cmp leave sbb jo orb mov les jl adc cld mov mov add rcrl sbb test add popf sub pushf std or dec inc aaa dec mov pop iret dec mov or push in cmp inc lods int3 adc (bad) mov (bad) sbb add xchg xchg movsb fucomip lds add or lods lret push aaa jno sub xlat push xchg pop popf mov fisttp scas inc mov push xor pop lcall (bad) pop push xchg cmp clc or aas rcl add mov jne addr16 clc xor xor punpckhdq sub or lahf (bad) mov mov imul jl add pusha mov dec pop pop popa jmp mov int iret and xchg or fcomp hlt stos cmp pop jmp mov dec stos mov mov loope call inc (bad) xor xchg in insl adc into scas jne xchg add and xor jb (bad) and add or lea sub stos mov or and jle push sbb xor push subb out jae mov lret mov sub (bad) sti and dec icebp inc fs xor test cmp outsl cmp addr16 icebp dec mov or sbb (bad) (bad) les mov mov mov in mov icebp lods lock (bad) push and call sbb xlat inc push inc sbb fmulp in sbb jg sti dec ret lcall repz mov fwait add mov mov cmp (bad) jl mov and cmpl loop dec mov popa dec adc push int3 (bad) fucomi cmp aaa data16 adc aad mov push (bad) mov bound arpl add adc cmpsl push and lods adc jae popf mov ret rorl fcomps into inc js out fisubrl jmp pop xor cmp or xchg sub push rorl xor pop push cwtl mov hlt xchg mov inc loopne aaa mov and mov pop cltd cs xor ret repz dec mov push xchg pop push push in icebp in negl lods xlat js mov adc (bad) daa js test shll xor inc inc sbb movsl jnp je lods test clc mov or xchg out mov push outsb (bad) ficompl jne inc mov inc repz (bad) lods xlat and xor add xor pop dec (bad) push and call aam push jb cmp fmuls mov lea les xor aad (bad) call xor testb mov stc rol je mov (bad) pop ljmp mov pop mov cld popf out (bad) mov and inc dec push loopne mov mov lods loopne push jb out push mov cmc sbb pop stos fstpl sub pop mov fimull aaa sub pop xor cmpsl xlat jg jecxz enter xor fstp jns pop jns sar dec pop inc enter mov cmpsl popa (bad) sbbl inc mov (bad) loope push push cmpsl xorl scas mov and dec fs cmpsl cld in bound mov xor jo lock js (bad) ss xchg xor fistp out pop cmp jne xchg or fsubs daa gs lret mov or or je cld sti aas mov adc rcr inc pusha pop sbb xor cmp sbb add ja popf dec lahf xor mov in lahf add insb in adc mov daa (bad) add xorps xchg je pop sub rcrl xorl push add dec mov xchg mov adc jg mov nop fsubrs fs lods out jns cwtl mov lret fistl popa and mov jnp mov and aas mov imul inc adcl xchg sbb jno fimul sbb (bad) mov sahf int3 cmp pusha popf or mov xlat out xor in bound jp jecxz inc bound in into sub mov aad pop loope jge movb xor or insb xor push xchg jb jo inc push mov pop iret jge fnstenv adc jmp xchg aam out mov outsb xor jno jmp mov xchg (bad) (bad) ret lods or add pushf incl mov inc pop xchg cmp aas rclb mov popa cmovl push mov out mov cmp out gs mov out mov mov and fwait mov mov sub inc cli es je in cmp (bad) jge outsb les jo imul cwtl mov and pop insl (bad) ja add out mov fs fisubr pusha mov (bad) imul loope push pop in sub xor (bad) mov fxch adc pop call inc ret xchg xor xchg adc fstps ret push jno lret mov loop adc aam adc push or push mov and stos (bad) mov xor stc xchg mov mov push and push mov sbb and fwait mov fdivl cmc je aas loopne aas jg es into cld xlat sbb (bad) aas cmc or (bad) cmpl dec cmpsl push pop jns clc cmpb jb sbb stc xor out lods loopne pop mov or or or aad push aam mov or add fldenv xor punpckldq mov js push frstor xchg dec and arpl (bad) ret and pop sub insb imul ret adc cli roll sub addr16 xchg dec and loop into shrb mov idivl xchg repnz push pop test ret jmp fist mov (bad) dec cld ret cmp xor mov jns inc sbb aad sbb les or test loop (bad) push aam xchg jge push jle stos fabs mov xchg fs (bad) out lods pop ret call loope icebp add in sub stos shlb cs mov jmp outsl lahf pop xor rorb mov outsb pop adcl stc mov cltd scas negl jecxz imul mov movsb sbb xchg and mov pop mov std fs mov outsl std stos push jbe data16 rcrl and cmp pusha add sub adc mul cld sbb out je xor mov pop cmpsb cs icebp andl fisttp das push fsubrs jbe and pop sub cs sub push push add cmc mov test xchg xchg mov cmp push (bad) in rcrb cmp xor es mov movsb stos mov stc adc jns mov pop jne popf pop icebp mov std out aam pop andl call mov jg fs jno inc cmc sbb pop enter iret sahf cmp fld jge clc out loop or pushf jb xor mov sbb cltd int mov cs stos xchg push ret lods pop adc jae mov scas stos dec mov scas aaa ficoml xor aaa jno sahf hlt pushl jnp repnz imul (bad) mov movsl pop cltd push mov mov in dec sbb dec mov ds lcall add mov lods inc push out adc mov pusha scas lds ds xor les sbb sbb test inc fldt aaa sub pop lea out gs cmp movsl add add call cli jno rcrb cmp cmpsl cmc dec xchg movsl pop mov jle xchg (bad) dec jns dec fsubl cmpsl test in push sub loopne out call jge popa test and ljmp sub in pop add xlat stos test movsb sbb dec fidiv loop adc ljmp ja inc xchg cmp ds inc and idivb sub imul lret out add into xor and push das insl jns xchg dec fld sbb in shll or adc xor repnz enter adc sub mov je test ss (bad) dec (bad) jl pop rolb mov pop jle and sub int3 or lods pusha or pop rorb into fnsave pop dec scas dec dec mov out pop in inc repz and scas push add out mov push sub mov (bad) repz mov popa int3 mov bound imul inc pop outsb loopne jecxz pushf leave sub cmc dec sub pop dec push mov push outsl fcoml ljmp mov adc or popa mov test xor push push pop mov cmpsb and sub movl or cmp add int (bad) repz gs roll pop notl jb mov inc or mov sbb push fmul icebp jns fwait shrl and dec sub dec js stos sarb cmp dec outsb outsb popa sbb jne mov mov mov mov adc stos test adc ds mov xchg adc jne fcmovnb mov pop (bad) fdivl mov rcrl cmp add ror mov mov nop mov int3 inc (bad) mov push inc outsb mov arpl (bad) sbb cmp jne int3 mov push (bad) dec lds jne aam movl sti jmp xor inc cld or imul loop xor and in cli outsl pop fwait sub jo cmpsb and out (bad) push lret mov les jmp xlat adc sub dec ds in test cmpsb cltd mov outsl repz movsb mov ficom inc cmp or dec inc in sbb cs repnz push sbb or mov and ds mov cmpb in push pop cmpsl sub scas jae imul (bad) pop dec gs mov sbb out dec cmc addr16 cmp loopne gs push pop dec add add movsb or call nop outsl or sub mov aaa fxtract repnz lock mov fldenv jno xchg popf insl sub push insl inc gs sbb jns jae stos cltd cltd xor add jns and xchg in in outsl in jle ljmp add sub enter sbb jp fsubr in jmp int fbld adc enter pop pop dec add inc mov mov fs jecxz aaa mov adc or cli sbb mov test (bad) xlat loopne pop leave repz mov mov nop jb mov fdivl arpl je mov lods sub out pop cmp (bad) cmp rol or test xchg sub push jp add stos xor push and shrl lcall add add test push lds imull lock push out cmp in mov and in dec inc in loopne aad fsubrs jg loop stos pop lock cmpsl (bad) loopne pop cld mov lret and xchg js lock jg and negb mov lret movsb dec cmc push jns (bad) cmc fmull dec test repz cmp mov dec out pop mov add mov in js jns dec pop loopne xchg and jno mov and xchg hlt jle mov mov xor and test nop sahf pop out sbb mov (bad) outsl fild (bad) mov dec (bad) or add xor (bad) idivb fwait xorb pushl loop mull bound push adc cmp les mov jnp fmul out sub xor jg fwait loop stc aaa sbb int les cmp pop rclb jo inc bnd push pop xchg xchg push and dec xor push sbb imul addl out jbe ds (bad) (bad) sbb xor inc addr16 xchg in push lret nop cs jae in (bad) xchg insb cmp cli dec push sti sub int imull clc or (bad) jmp cmp out movlps in stos dec cmp and imul sub sbb sub xchg dec lods outsl sbb add pusha sbb imull addb bound sbb std mov (bad) xor mov fnstsw mov psubusb rcr push ret ja dec and xchg in addb lcall add add test les jo imul adc pop (bad) in insl int sub mov iret cmpsb lds stc inc lret sub sbb in push and add mov out or je sahf push xor fwait jmp movsl popf mov lock enter sub imul int3 data16 mov jg in (bad) (bad) lds dec jl insb es cld jge daa js add stos push sahf push jnp insb mov and imul imul lods ja lret fsubs mov inc xchg and (bad) lds inc pop cmp xor fldcw in idivb xchg xchg pushf xchg jb mov aaa mov popa jno xor mov mov sbb ss jnp insb xchg (bad) lock int test add ljmp adc (bad) data16 fwait dec or out or in sub push push ss and mov aad mov aam xchg sbb std xchg jo pop pop xor (bad) (bad) (bad) and ljmp sbb insb out adcl xchg dec mov and push repnz mov rcll into mov xlat push pop in rcrl push inc aas jecxz imul (bad) leave jecxz sbbb lret pop mov call inc mov mov mov test lret jge xor adc lea lods xor jecxz popf mov ret cwtl jns or into idivl sbb xchg pop xchg inc test add insb sahf jecxz mov sar push inc ret popf sbb add ret push jnp rorb pop fcomip imul jns add aaa xchg lahf mov (bad) fldl out out adc mov mov imulb lea or loope ret shrb insb add mov rclb ja cmpsl sub fdivrp (bad) xorb mov mov scas push mov adc addr16 mov gs mov add insl fwait aad inc cltd add aas push fisub adc jb fildll cmpsb cwtl xchg pop or and (bad) dec pushf jo add sarb aas pop cmc xor add xchg out sar movsb scas cltd push fbstp mov subl push dec lods imul inc insb pushf pushw fwait dec sub dec and and cmp fcomi mov dec test sub jecxz popa aas stos inc pop fsubl mov dec fdivr je or lods jnp pop lahf pop std and pushf test push lods pop sub mov xor sub daa pop add out pop inc xchg rolb out stc pop fsubl sbb (bad) lret lahf jnp fistpll aam stc pop (bad) stos test sub movb dec lods sub in icebp bound mov dec add inc aaa outsl cld add mov stos dec insb jecxz int cmp out or sub fsubrl sahf xchg dec sub (bad) imul loopne pushf sti clc das xor addb mov pop mov jp xchg into sbb leave in cmp xchg adc test jae sarb cwtl or pop aam jbe xchg xor and mov jbe insb pop mov cmpsl (bad) push iret add add mov lds aad (bad) addr16 cs add (bad) fstpt pop insb pop lahf in xchg clc inc les mov push test adc sbb pop sbb ret xchg add lea mov iret fwait mov imul pop and sbb stc or les ja cmpsl jne jae mov mov int cmp mov push pop jns je test xchg adc mov adc jl jmp enter sub jb push cmp stos movsl aas movsl lods jb mov lret mov fcoml aas dec clc ss leave push pop repnz mov jo mov push push adc jb push jns adc pop xchg inc sbb lock add add in (bad) repz dec inc int in ljmp dec ljmp push out mov popf out jo popa imul add ret add jne rcrl jecxz std fldt stos test sbb dec sahf fwait push lret mov adc inc or jne (bad) mul std push popf clc pop call mov rol mov mov movsb inc mov mov scas popa mov dec or jecxz sub (bad) imul bound in sub dec push xchg jbe addl orl push mov pop mov lcall ret lods in out xor test mov or sub inc (bad) das dec stos insb int inc inc add inc sub dec in repnz lret mov xchg jmp in fdivl add add das test pop test test aam mov cmp andl or jo mov repz pop lret fs push add rclb repz inc jb sub cs inc pop (bad) jne and movsl mov fwait in xlat outsb fsts sarb mov notl icebp test addr16 push adc hlt adc test xchg or mov push dec add (bad) sbb mov test add js in insb mov push cmpsl push mov xchg inc or fcomps lods aad insb rorl test or es mov pop xchg (bad) jae mov out arpl mov adc jecxz jle pop mov jno scas pop in scas cmpsl (bad) js xchg sti lds dec inc bound inc int3 aam cmp lret add push add add add es clc out or int pop push (bad) aad lahf and lret dec push fwait sahf fdivs fidivrl sub sub out jl mov dec movsb outsb pop lods jnp dec jg or loope push pop and (bad) scas jmp (bad) push bound jb pxor (bad) push lock lock repz in adc mov inc mull and mov mov or xlat jmp jo (bad) mov in outsl iret mov sbb add imul inc in jae bound add sbb rcrl and push jl repz movsb loopne add or jno jno pop sbb fisttpl mov push mov mov out scas adc push mov mov enter mov or push push mov add sub jecxz push or inc das mov cli jmp jne jno movsb jmp jl enter rorb adc xchg pop or xor out popa or aaa jle aad jg je aad dec lea int3 jmp dec adc dec jmp sub out in push sti bound icebp jno flds sub popf xchg movsb shr mov pushf loopne loope test inc mov mov and shrl mulb adcl dec out or outsl adc inc stc sarb imul ret adc pushf push and aam aas cld lea pop adc push movl sbb add (bad) fnstenv test fnstenv mov cmp inc aas xchg xchg rep xchg push xlat in mov rol sbb imul roll sbb or rol xor loope,pn fcmovnbe sbb sti (bad) scas dec push xchg insb and addl dec adc and push stos scas and cli les iret dec push lods jp mov add popf and test cwtl or cmpsl dec xor jecxz scas cltd jmp (bad) xor cmp xchg sbb fcmove shlb cmpl insl xchg pop out fidiv sahf bound fidivl adc cmp lea mov test addr16 jo nopl ds popf loopne (bad) fidivrl stc ss lcall push loope cmpsb xchg lcall loope inc outsl jmp xchg lock cs in adc cltd ja mov xor fs dec push (bad) int into fcomps and neg ret (bad) mov xchg pop test arpl dec jge pushf cld loop fsubp sbb lret fs jle add inc xchg arpl pop jbe hlt mov mov popf add jecxz push shrl mov dec inc subl fildll jnp sbb mov add fstps div mov push and icebp mov popf (bad) scas cld xorl mov push dec pushf imul fistpl enter fst (bad) cmc inc jae xchg aad pop cmpsb flds sbb repnz add mov mov mov mov loope scas push add (bad) xor jne inc mov loopne addr16 cmp inc cmc push std jecxz stc ss test roll mov nop (bad) faddp dec out andl xchg bound lea outsl mov repz mov add daa out pusha push cmp cmp push data16 xchg push inc adc (bad) nop cltd push sbb stos ljmp hlt movsl les clc dec adc ljmp pop fistpl cmp mov test stos test fwait arpl (bad) push mov outsl cmc out mov or jno cltd aad cld call sahf std fidivl ss fisub lods fcompl mov test adc and xor mov jp mov or add sti mov sub iret (bad) (bad) fldpi int3 lret repz mov fidiv scas pop sub in fcompl daa mov lods inc adc mov sbb loope lds (bad) repz xchg (bad) push adc adc pushf and add ds xor jne pop inc push fistpl sub mov jns xchg xchg repz pop push mov mov add jae repz mov push (bad) icebp (bad) cmp test sub lahf lea mov cltd hlt rorl cmp push dec adc mov ss or xor pop fisubrl mov mov (bad) mov int3 mov mov sub pushf and dec out dec push je pop (bad) lods test gs pushf (bad) pusha (bad) adc mov jae mov sub aad cmp sub aas xchg add pop pop in (bad) test adc sbb or pop mov or (bad) mov push jg lret sbb cli mov pop push out jle jb pop sub sahf pop inc or mov insb xchg imul (bad) outsb aas daa add popf pop push stos inc dec or int xor fistpll dec ljmp popa cmpsb jns aaa cmp movl adc sub jnp adc add les loope inc out dec test ret fimul inc mov sbb movsb insb mov xlat pop add dec sbb enter subb mov ja scas outsb sbb mov push cs jnp ss in std mov push dec hlt int pop out jae rorb sub lret mov inc in xlat add jg les mov xor pop mov mov inc cmpsl stos (bad) sub add les and imul pop cmpsl data16 and jns cmp sub mov repnz jle fsubrl cmp fcmovne add sbb ret add and mov mov pop cmp outsl (bad) movsb jp inc cwtl jb mov cwtl call and dec imulb sub jecxz icebp std cmp es clc mov or adc fwait test enterw xor adc aad lds push xchg sbb out dec pop out sub rcll jnp dec fnop (bad) loop fs sub pop and xchg dec add or xchg jne loop popf insl mov cmp mov dec movb xchg aas outsb lea sahf ds or data16 xchg pushf add movsl int3 test jae call clc lcall push pop out sub mov mov mov movsb in inc cmp xchg ljmp movsb imul andl outsl xor inc push (bad) loop dec inc cmp (bad) popf and out test aaa push add lret or std mov cltd stos mov decl stc stc push pop xor mov adc dec iret push sbb add sbb std ss (bad) jl les or cmove jbe cwtl ds scas mov xor fidivl cmc ja sbb daa mov mov sub je gs in aam pop cli ds loopne leave sbb std inc or cwtl xor add mov dec dec test adc aad and cwtl stos les gs adc inc mov test pop adc sub jnp xor pop cltd xchg add cwtl imul dec scas mov fidiv dec mov pop (bad) icebp cli xchg mov cld in ret mov rcll add gs add unpcklps pop mov adc mov pop sbb adcl xchg insl xchg test scas andl aas cmpsl icebp mov subl mov mov lret enter jmp repnz cwtl mov cmpsl stc jecxz fbstp xchg gs and cmpsb inc cmpsb xchg add cltd (bad) dec imulb sar lahf adc pop (bad) jp stc test push jmp jg andl pop dec mov adc lods jae out pusha xor push jmp andb dec cmc (bad) neg sbb imull push pop mov adc push add in aas dec enter inc pop push adc push test dec (bad) into ja faddl (bad) stc (bad) arpl add mov xchg jb shrb arpl mov adc ja cltd fsub xlat inc xchg push lret sub sub mov mov mov jle fcomip popf movsb (bad) mov pushf mov pop mov es inc sub adc out pop add pop jp jae roll cmpsb xor lret vcmpss mov call dec cwtl cmp dec dec stos loop sub xchg adc fbld inc lock inc sbb push jo mov xor jmp loope in cmpsl call jle cwtl clc dec pop push (bad) mov cmpl pop mov mov call icebp scas and mov or rcll cmp sub dec cld mov add (bad) jle jnp outsb (bad) jb sub mov orb rcll add sarb andb int dec add shrl add add cmp add sti es jge sub cli sbb mov push mull adc sub xorb jno sub dec or mov cli fistpll je outsl rcll (bad) add xchg stos push push (bad) jbe (bad) inc mov outsb pop xor or push sbb lahf insb add sbb arpl adc lahf mov mov sbb push jnp and dec mov outsb xchg divl mov xchg push push leave and cmp leave mov fisubrl rcrl push jb ja fs inc sub (bad) clc into push mov push or fcom jle les sbb xadd mov and mov fucomp adc cmp xchg icebp xor mov roll push rol or in ss sbb sti jno cmpb gs xchg mov ret jbe push popf arpl (bad) lret lock mov mov (bad) or xchg mov (bad) adc dec mov mov (bad) loop xor cmc pop clc hlt popa rolb cmpb sbb fld push fldenv test mov or ja mov pop push cmc das pop test mov in scas lret pop outsl pop mov mov sbb dec adc add scas sbb arpl insl push imul cmp cmpsl and add inc dec repz lods mov push mov mov addl je divl mov xchg cmp gs (bad) repnz (bad) (bad) lret push push pop into imul fld push push insb xor aaa xchg mov outsb push push dec add addr16 scas fildl fs jae arpl pop push lods popf push rcl xor sti xchg scas jmp pusha jae mov sbb (bad) gs cli ss jns push cli gs mov sti xchg mov lret push fwait jmp mov aam call mov lds jne mov (bad) sahf pop pop inc pop sbb mov es mov call jl push inc mov or sahf js rclb dec jo ja pop stc stos pop pop jbe arpl jo sbb mov dec jl push xchg lock pop mov or iret inc jl mov das mov mov push sti sti out dec jbe inc roll dec iret std gs cmp dec data16 jbe jle nop call cmc insl dec push sub cmp in lods loope insb jne popl outsl and sbb and or cmp icebp ljmp sbb sbb stc imul out repnz pop cmp js dec loopne es adc mov stc mov cmp pop cltd in add imul sub cmpb cs fwait jno stos push cmp sbb scas adc scas mov sbb ds iret clc std dec (bad) popl test xor or arpl inc cltd cmpsb repnz ljmp lds push clc lea stos add mov out (bad) enter data16 pop ret (bad) incl jb pop cmp divb xchg (bad) gs stc pop mov push loopne lods sub fdivrp enter mov push insb inc dec iret jle out in imul repnz (bad) mov es dec stc push add js ret popa rorb in les in arpl nop xchg mov rcll fldl pushf push push out xchg out (bad) mov jae pusha adc push xor cmp (bad) xor lret ret test lods mov cmpb scas cmpsb jns imulb sub mov sbb mov sbb push test jmp sub lds xchg icebp pop out dec push lods adc mov ret movsl mov adc pop sarb and sti xor push imul in lret fcoms push sbb xor add sbb ss enter cmc mov dec (bad) repz push insb (bad) cld out (bad) imul aaa dec aaa inc fimull in mov (bad) ja repnz or push lret cltd xor or (bad) mov and scas pop (bad) xchg gs sub add (bad) xchg mov and test lods inc jnp insb and pop (bad) xchg cmp adc stos or imul adc pop adc mov pusha out fldcw movsl insb xor nop fisttpll sub pop into xchg add mov inc loope (bad) dec dec mov xor outsl pop dec jae and std lods in push mov add mov jns andb add mov jns jne test out int3 push mov push jp cs inc loope cmp xor mov jno,pt test repz lret sbb xor aas push and inc repnz jge test pop (bad) jge (bad) es cmp sub xchg sahf jle (bad) gs sub or and xor sub add rcrl xchg data16 lret data16 cmpsl cld gs inc pop jmp movsl test push cltd sub pop pop dec add mov sbb push imul push ja stos and or sti push dec ret fidivl pop fucom fidivl pop in mov push jmp repnz lock imul roll dec rcll jl aaa sbb rep and sub lods cmc adc arpl sub pop adc dec repnz mov xchg mov inc movsb and dec aad jnp xor imul adc dec in jne jmp lret sarl push icebp inc inc mov inc fidiv lcall inc icebp imull repnz push xchg push in pop imul cs pop insl call xor mov jle lods (bad) lods loopne rolb add push add ds pop divb cwtl xchg (bad) cltd dec sti lea xor or dec push and shll xchg add mov jb outsl repz popa pusha sarb mov mov jl into sti lock mov jno fisttpl arpl enter cld stos sub mov out dec aas stc push mov inc imul sub adc sti in sbb loop call xchg or fldl xor mov add mov popa mov je iret jmp cs push ljmp (bad) repnz mov rcrb mov sbb mov lret add sub lods push adc ljmp mov jns popf hlt aaa pop out aas enter push js cmp mov aaa add jge mov subl mov sbb gs test cmp call es fadds pop insb cwtl shrb inc outsb add jmp nop xor sub mov push mov mov pushf repz ljmp pop sub clc mov mov mov orb xor in sub or xchg or push sub mov in sub repnz cmpl push ret mov xchg sti fcoml inc insb fistpll mov sub jmp jb jle ds fisubrl mov sbb inc outsl out lds mov jbe adc or aam iret push hlt jge lock leave popa dec movsb add dec stc sbb mov (bad) negl mov stc inc xchg fimul cmp pop adc fisttpll ds (bad) sarl mov jb or aad push jecxz je push daa aaa adc fidiv sub mov xor scas jns imul cmpsl fcoms dec mov push xchg rclb sbb cmp mov das (bad) xchg fsub xor out jns inc dec sti jo jmp sti cmc (bad) hlt lcall decl add dec cwtl dec xor xchg sbb (bad) mov leave add mov fstl gs dec mov ds dec js cmp out sarl inc imul xor out or jge mov popa addr16 mov sub xor mov leave mov call imul fadds mov inc lret outsl nop pop push adc test lahf aam mov fmulp lcall pop xchg out js popf pushf inc movsb fimull jp sub pop sub xlat pop lret inc sub push inc mov pushf nop sbb mov and pushf sahf repnz adcl lds fisubl and mov xchg jmp clc adc leave cmpsb pop adc sub jle lret sub add rorl sub jno dec push orb aad cmc movsb pop jge negb icebp add xor (bad) dec push sub mov icebp add mov aas inc leave adc add out sbb repz imul adc aas jno jp out in jo xlat (bad) cmp xor or lret pushf ja pop imul imul jo pop inc pushf (bad) pushf (bad) xor xlat or daa add jns scas daa push repz ror out out test add sti pop je pop cmp scas mov jbe mov mov fwait lods (bad) cmp or test xchg insl and aaa cwtl pushf fs gs out (bad) loopne pop outsb and pop dec in subl jns adcl dec aad inc hlt xor ljmp mov sbb or xor push and and call xor fisub (bad) mov not dec rcrb cmp mov inc jb push sti jl jmp dec sub inc pop push or fs mov inc sbb lods inc loope shlb ljmp int3 sub pop xchg xchg fcoml xchg arpl mov jb jbe or xchg fisttpl repz sub jl je adc push (bad) mov icebp mov inc sbb cmp pop imul clc shlb shrb insl aam or mov push fstps ret sbb sbb jb fs jmp xchg stos jmp add jns sahf add sub jbe (bad) mov mov push push dec xor xor xchg lret ds gs inc pop jp push mov push and lods sbb out and inc sti sbb (bad) mov adc sbb adcl xchg xor xor mov fs cmp adc in mov sbb xchg mov pop movsb push inc (bad) jns jae xor fsubrs out mov inc adc ret adc das add push (bad) cmp sbb stos dec mov (bad) les xchg scas pop out dec adc inc sub clc hlt cmc aaa popf mov mov xchg add lock leave (bad) mov insb sbb ljmp fistp mov test jmp inc pop xchg scas cmp imul ret xlat rolb sbb and test or repnz lcall test test push mov push xchg insb mov mov js cltd add mov mov (bad) cmp loope lret add mov leave gs or test aad sub xchg jb or sarb or imul incl stos xchg mov and aam (bad) mov std loopne rclb mov or sbb push fdivr ja ret rclb and scas lret or sti lods out outsl sarl add mov repnz jecxz and mov or clc push pop jo pop shrl (bad) jb fstpt inc push sbb pop xor sbb mov or gs jle xchg lods sbbl ss movsb mov xor jg ret mov push in addb mov fsubrs and sub jp mov aad sti lcall call cmp es xor sub leave inc mov into fwait insb add neg or loopne dec js and push stos adc scas arpl dec push aad sub dec pop movsb ljmp cwtl fcom out jo jne insl fdivrs ljmp data16 xlat out fistp imul jp sub pusha sub into xchg jl adc inc lahf inc pop loopne test mov hlt ret (bad) clc ror data16 xchg add mov or mov inc dec xchg adc add popa int adc dec lea (bad) fidivr cmp cmpsb adc dec sub fmuls mov clc enter lret out jmp sub inc mov test fstpt imul es sahf nop mov xchg xchg ficompl mov stos imul or out push add or fsub xchg xor inc pop inc inc mov pushf inc scas dec icebp push gs xchg mov sub in and add xchg mov (bad) iret xchg lds sti add (bad) sahf mov fcmovnu dec jge inc hlt mov imul lret cmpsl sub mov out xchg cli cmp jo js cmc lock imul xchg jg rorl inc xorb (bad) sti xchg outsb dec hlt push xlat daa leave inc xchg dec stc cmc repz xor inc dec add fwait cmp mov repnz or and mov shll and hlt loope ljmp dec mov mov enter adc xor loope dec pop outsb scas push fsts das fcomps pop (bad) add adc mov xor test orl test inc pop or les mov jnp popa iret popa xchg lcall cld idiv push or pop leave dec pusha (bad) (bad) loopne sub (bad) mov add jg addr16 push cmpsb push jnp div sbb mov mov push test and mov sub xchg jmp push ljmp sbb (bad) mov aas iret xchg cmp jbe cmp in adc sbb sbb cmp sub inc push jp xchg aaa jge jmp shlb inc pusha mov imul loope rol mov mov lahf add and clc mov mov insl insl out in std push xchg adc fidiv les divl jmp mov jecxz (bad) imul lahf and mov jbe cmpl or repnz dec mov cmpsb sti out (bad) cmp pusha xchg jae in repz movsl pushf fcomip or faddl aas rcrl aam sbb in jmp lahf sub or sbb cmp sbb bound daa pop mov std icebp addr16 mul pop lret inc cltd mov pop popf cmp push (bad) pushf inc lock bound mov dec adc pop movsl adc push ss add in cmc rcll sarb cmp jge sbb aam add and (bad) (bad) mov in rcl rcrb lret gs jp cmpsb or pop movsb mov cmp sub mov (bad) inc lds sahf inc mov (bad) cwtl pop out das in fs std (bad) adc mov fucom jmp push xor pop lret aas sti mov pop jecxz mov jecxz add dec mov cmp pmulhw xchg lahf push pop xor xor jp in sahf adc shlb pop xor pop and adc xchg add (bad) or add loope iret push jmp in dec out add inc push pop adc jge stos xor xor jae lock jno and pop adc push jnp in imull or mov ja lea sub adc popf popf shrb push push jp xor insl pushf pop pop push lea pop int dec jle sbb or std push pop fdivs pop popf add aaa sbb or pop lods push and mov hlt into mov int3 out mov xor cli cmp (bad) (bad) add mov pop (bad) mov or leave xchg xchg stos and in add mov pop nop lock into call scas std jle xchg clc mov dec rcrl inc fs push sbbl stos mov push into adc sub ret jle lods ret xchg fwait push or in int3 nop pop lds add hlt test xor cmpsl frstor (bad) ss lcall lahf inc push sub add insl iret stos xchg outsb push add icebp shrb pop loop mov test ss pop ds lock stos into inc js cmp addr16 arpl pop push mov jne xchg sbb push mov loop in or mov test pop das fmull push sbb into and (bad) ja inc adc jle xorl mov shr daa hlt in xor add aaa fldenv lea ja movsl gs jp (bad) adc rorl cmpsb fwait xchg les mov cwtl push lods dec jnp pop or in sbb mov inc xor pop outsb and jecxz pop xor sbb fwait push mov mov rclb lret pop xor add mov imul out adcl daa fdivl hlt xchg cs mov or fs cmp or fmull stos push and jecxz xor into (bad) xchg daa push mov pop add ret dec les out jmp xchg arpl pop psllq mov inc cmp mov sbb pop xor arpl and outsb ss int loopne ja hlt stc mov sbb sub iret push sti add in stos mov shr mov into push push out dec (bad) int3 sbb insb das xchg jae add dec subl (bad) shr or xor loop jb fwait adc jb sbb xor icebp lock pushf mov xor push sub sbb test imul adc add xchg mov bound xor in xchg adc dec (bad) icebp movsb test stc push cltd push add adc js repnz cwtl enter mov cmp pop push sbb mov jmp push lea push xor sub jmp dec mov dec repz adc jg add jae loop dec lret sub (bad) lret bound mov dec xchg stc push enter test jmp (bad) or out inc pop pop std xor mov mov sub inc (bad) jb and jmp pop (bad) fsubs cmp int3 xchg movsb sub outsl xchg push pop sub into sbb xchg adc mov mov fistp mov adc in dec mov sbb test dec fsubl add pushf jg inc dec and mov dec int sbb loopne mov mov fnstenv pusha cmp push mov fs sub and lcall mov xor jg mov adc sti stos push cmp int mov mov sub out testl xchg and cli sbb (bad) mov jno inc jbe lret test rorb or add push pop fwait call mov hlt xchg mov inc int pop hlt lret cmc mov push lahf fcoms cmp pop and das xchg pusha jne jb movsb mov jmp popl push xor mov hlt pop cmp std inc or rsm enter (bad) les or dec lret sbb cmpl push sti test add lods imul add xchg pop insb lret into and dec add cmpsb ja lds jle lods pop (bad) and fmuls out sub or mov xor addr16 je cmp ret gs and pop add dec push lret lds jmp mov push int3 aad pop outsl xlat xor or (bad) jb push in xor rolb inc ljmp add fsts ja rcr cmp or cmpsl lods leave mov cwtl and jb test push xchg fs sub sahf xchg imul cli aaa adc dec inc sub hlt cld je subl imull ljmp pop sbbl movsl sub mov dec pop cwtl pusha and jp cmpsb xor pop mov (bad) push negb xchg insb cmc iret stos (bad) inc sar add lcall mov stos into js mov push xchg inc push (bad) insl lea or jae and xchg mov es or mov rorb push lea (bad) jne popf test loop mov sahf xchg addr16 pop cmp pusha mov mov pop scas dec adc mov je out clc repz pop mov arpl sub mov inc outsb insb stos dec in insl arpl inc xchg xchg adc repnz push sub jb out adc push cmp mov mov pushl xchg mov pop movsl lret pop mov jnp inc lea jge sbb daa mov or push xchg add xor sub add jb push xchg pusha and test inc fwait cwtl mov pop push scas mov push add fidivr lcall imul mov sub pop ljmp loope stos pop jnp pusha std pop jbe pop aad mov sbb sub cmpsb cmp lret or cltd aad xchg cltd dec sti outsl push push push clc mov sbb add sbb enter jb jle movsl jb inc sbb jl and imul push mov push aad pop xchg sbb adc mov dec lcall mov and cmp lods pop push out gs pop loope out xchg or stos xor mov aas sarl scas out sbb push push dec stos shl mov jecxz xchg es sub add aam mov or dec mov enter xchg iret mov fildl mov or sbb sub in cmp push mov add fcmovnb mov push inc xchg ds test push xor mov les dec add into mov push jo sbb leave sbb call push jecxz ret lods movsl adc push call cmp cmpsb sub hlt jns sti cmp or sub mov jg stc sbb mov loope (bad) insb pop fcomi mov out pop je lods in xchg fwait push stos sbb xchg fldenv and nop mov jle sub gs aad sahf jno jns adc xchg and lcall into pusha cwtl aas (bad) adc push add push ja jp nop pop cmp lea mov dec inc jmp lods xchg hlt data16 arpl and fsubrs adc int loope div bound cmpsb pushf int3 lock mov cmp sub lds mov mov add mov scas xor inc add xor cld stos dec adc sbb fnstenv nop scas mov leave inc xor xchg mov mov add adc add adc add lods lret aam and add lret push or xchg mov xchg mov ret cmp and bound int3 xchg mov (bad) sbb aad sahf test mov inc jmp xor imul nop add aam cmp mov pop fwait dec dec repz into xchg clc pushf push mov mov stc xor test mov fsubrs fidivrl ljmp lahf xorb dec push adc cmp (bad) int3 ja cmp and xor loop in dec or cli xor rorb jns mov jbe inc (bad) pushf mov sub nopl xchg pcmpgtd sbb mov imul stos cwtl xchg add popf cltd into sbb push adc push jbe in pusha repz enter ss ss ud2 xchg push xchg mov dec jb mov scas es jle mov fwait or sbb xor cmp fabs inc pop mov in jno jne movsl out orl mov inc sbb sub and dec fcomps add out movsl push adcl jmp cmp aam cwtl cmp in mov or rcl or fiaddl xchg pop push ja pop dec sub cmp adc xchg or shlb in les stos xchg sbb fisttp dec push mov dec repz ret inc clc mov cmp test sbb dec popf movsl pop ds cli push add sub gs add scas addr16 sbb add pop add pop daa adc xlat push mov popf push jae test cld add cld push cs aad bnd pop xor and dec lods cli cwtl jge jecxz xchg add push mov add adc mov repz cmp (bad) movsb xchg out xchg dec sub jg rclb adc mov sbb imul in clc cmp insb icebp or or je out daa fnstcw jnp xor mov xchg lods popa (bad) mov (bad) lds test inc xor sbb stos push xor in or or xor aad mov sbb gs adc add enter stc or mov add sti iret lret push outsl js mov mov cmpb add lcall imul ds pop xchg nop lds (bad) sbb mov fsubs xor mov cmp jbe push repz dec sub pop sbb outsb add mov icebp push inc hlt leave inc push dec cmp jb ret ljmp (bad) push mov int sbb mov js lcall jb sub out pop lahf jecxz and sub fist aas lret xlat add mov or mov mov jne mov (bad) mov xor incb jbe popf pop cltd dec imul aam mov inc xchg sbb fisttp imul inc hlt xor cmp mov bound fcompl lahf cmpsl inc adc inc imul mov push rol mov push or xor or or fldpi and pop mov mov sbb add or cmc jge or arpl and dec aam ds jno scas xchg adc dec sbb cmp sub repnz mov lods cwtl fidivrl pop jge int jno popa daa rcrl inc push jb es daa adc iret stc push mov pop ret sbb mov fistp mov cltd inc cs out sarl or mov mov ja out mov or push mov mov loope iret dec xor xchg mov int3 mov les sub or and inc mov jge (bad) out jns push mov js jne movsl cld jp aas sbb push shrb arpl enter fcomps lcall sti (bad) jbe xchg push orl pusha stos cld mov fsubrs sub sub mov cmp test pop push mov test scas fsubl xor cmp daa adc or pop or sbb imul pop inc jge lret setl hlt push insb popa push and adc push mov cltd sbb sub xor add sbb sahf fs mov stos mov pop mov arpl call add sub stos mov in mov xchg xor test int std mov lcall push xor cltd in mov int3 cmc or xchg mov mov pushf and xchg push mov in fldl adcb sub inc add pop int jo test cmp jnp mov pop out sbb and xchg (bad) jbe (bad) mov bound push fimul lahf and xchg cwtl fs mov add mov sbb dec out or orl add cmp call mov mov stc pop call mov adc sub or popa imul cmp gs or jmp arpl adc out mov imull (bad) test jo clc mov add and pusha ja add mov bound ja (bad) cmp sub dec outsl lcall sub out das sub cmpsl mov inc push mov sahf mov imul sbb bound add adc adc lret mov jbe outsl outsb cmp cld add xor (bad) dec cmpsl sbb sbb lds xchg mov mov push push xchg jg pop std ljmp in data16 mov sbb insl push cmc sahf mov add lea cmc test lret xor add adc push pop xchg out jp mov inc sub addr16 xchg jns and into js adc mov mov sub sbb into cmp hlt dec int3 mov popf ja loopne lcall (bad) jb sub and xchg ds rclb jecxz (bad) shr fwait push es roll jecxz loopne repz cli repz push dec cmp mov in sbb push out jp mov repnz fiadd cli hlt adcl addr16 leave mov pop leave jecxz mov push lahf and and jnp js (bad) mov int3 push lret cltd pmuludq xchg push cmp xor std clc xchg fisubrl loope sbbl cmp mov sbb add pop push jp pop lock inc inc nop scas pop jo mov sub cmc cmp push mov insl inc div add xchg sbb mov mov mov test jecxz adc (bad) sbb inc or mov andb inc xlat jle (bad) out mov out sti movsb jp pusha jns fstpl add lret sbb lret out pop push pusha rorb icebp iret or (bad) jb push jns cmp arpl hlt pop leave dec cmpsl (bad) ljmp pushf push add xchg iret sub sbb and add outsl ljmp mov fldl or lock add in xchg cmp sti fistp mov repnz mov popa (bad) (bad) loop jne add sarl lcall int3 (bad) aad imul lods fwait in push or add bound mov xchg stc and dec cwtl movsb imul call inc in lods sbb int loop stos sub push ror add mov cltd stc movsl xchg jb jecxz ja repz shrl cld cmp (bad) stos dec sub mov in scas add mov inc out mov lods and dec ss pop repnz jge aaa sti pop inc int3 jbe xchg mov and sti aas mov jmp jecxz test cmp cmp jo into mov xor sti sub jg and inc aad hlt int3 mov mov push ficompl inc dec mov jbe divb dec insl inc arpl jno mov pop cmpsl jle mov push push movsl inc or outsb or insl lret int (bad) rep ret jbe add and out fistpll xchg pandn insl cmc test ret mov mov push lock ret fwait imul adc cmp xor jns mov inc push add btc aaa xor mov (bad) std sbb cld push jno sbb and xchg orl in push push loopne push inc arpl repz das mov int3 mov push pop js aam loopne pop lock loopne jne in lahf out cmp out push pop mov sahf inc add jnp bound mov js test pop scas and lahf dec ret lods pop inc aad mov fildl xchg out int3 push mov (bad) and test mov jecxz aaa mov jle sub mov icebp jne xchg pop clc xor push jg adc scas pusha or add mov rcrb mov pop stos push aam dec cmp push rcrb mov mov jns jb cmp mov lods (bad) ret pop pop nop pop out idiv fsts dec sub inc mov sub scas mov or inc sub jb popa inc movsb dec push cmc arpl mov stos xor mov into fisub dec hlt notb cmc push out pop out mov xchg dec push dec ret and push dec mov sub add push int add (bad) (bad) shrb insl xchg js (bad) fadds mov cmp je or inc jle aaa fwait xor xrelease push push arpl inc cmp and and mov addl je outsl data16 stos stc lock sbb and in push dec dec bound push xor mov dec into aas (bad) sbb je jmp mov (bad) fsubl inc mov or mov mov and std out push inc fildl int std fcoms rorb sti push jae inc cltd mov xlat jbe lods cmp dec ja ss stos xchg lret mov adc test mov or inc dec je (bad) ds add and push iret and (bad) std mov testl cmp gs rcr jno cmp cs mov cmp (bad) fneni(8087 cli mov orl hlt mov dec sub andl lea cli insl dec ret xor jp out (bad) push leave pop rclb pop mov sub in jb movsb xchg push cmp xchg repz push imul lcall stc mov daa push ret xlat cmc sub or or faddp loope in and gs mov aas jge jae lret mov and cs out mov sub xchg cmp outsb je cmp insb xchg mov mov (bad) fisttpll sub mov mov icebp cli mov cli add mov adc ss jecxz daa add fbld ljmp xchg jge push push movsl ja cwtl (bad) mov add xchg fcmovne and mov (bad) or add add loop adc cld lcall sbb mov lock (bad) ljmp mov aad divb mov sbb pop lcall fisub aaa hlt scas or and mov or cmpsl lea add sbb call adc mov shr mov mov (bad) repz outsb out sar enter stos mov dec aam (bad) mov int cmp into mov adc in jae int3 les out cmp fmull int3 jle adc push add jo ficompl add jno out push mov sti fiaddl stos imul and mov aaa jne addr16 inc dec outsl popf jns cmp aam push pop push lahf insl clc bound mov imul imul add fidivr xor sbb shll jge inc data16 fstps out subl ret lret mov mov jmp add addr16 sub dec mov mov sub sbb dec mov push pop push sbb cmp fcmovu nop addb enter sbb mov inc outsb imul js mov push jmp xor ficom push imul inc ret out mov or cli inc insl in xor sub xchg push (bad) mov jae add pop aam loope sahf mov cmp pop xchg xchg rorl ss fistpll out call add popa rcrl das mov cs jae sbb xor push and cld jle sahf push (bad) fstpl rep mov and add add xchg mov test mov adc cmpb sbb jno lahf punpckhbw insb (bad) (bad) psubsw (bad) xor jno mov add sub pop (bad) add jbe outsl dec test mov roll fmuls sub push dec lcall xor orb lahf pop lcall dec and xchg (bad) jecxz mov test jno sub push mov cmp jecxz movsl mov ljmp loope inc push out outsb xchg mov clc and iret or int cmp idivb movb mov lcall dec lock mov jmp int adc dec cmp xchg out xchg shrl mov popf lret lret dec mull xlat or mov pop xor rolb add add and mov lahf jnp ss jae das lret pop imul push sarb xor stos mov xchg fwait jecxz es push inc call xchg cmpsb pextrw adc call mov or sbb lahf or pop data16 mov ret adc rcr mov mov stc sbb test pop jnp or lret xchg push mov mov mov jmp xor fwait add jbe mov das ds push mov cmp and pop adc jl pusha std push mov out mov call adc pusha out loop (bad) dec mov xlat in adc (bad) pop mov push (bad) cwtl popa fs adc (bad) rcl and xchg add jmp jnp adc imul add fs sub adc lods test dec rorb jno movsl addl add xor push loopne inc pop leave jg inc je xchg mov in hlt inc fmuls fninit push inc ret call mov fidivrl lds xchg es dec outsl dec faddl cld fisubr pusha in bound adc test jmp lds pop divb push cmp or outsb (bad) addr16 cmp pop jmp rcl jg inc insb cmp jg out scas pop lock dec decb out jo,pn inc cmp jne in pop stc je inc inc push add lcall inc mov insl push jmp in ds push mov sub xor imul push add mov xchg mul push mov cmp xchg in fst sub add lret in cmp dec insl (bad) mov std (bad) push addr16 fsubl (bad) gs stc das arpl pop cmp aad pop scas shrb aam insl je or clc fstpl (bad) outsl sbb xchg inc ret xchg cli inc push mov data16 cmp roll mov mov pusha mov mov mov push inc js icebp cld jnp int mov and mov cwtl push dec iret (bad) mov jnp js add fnstcw inc mov inc pusha je pop xor aaa jle das xor call cs jle inc adc addl je ret jne sub xlat loop cmc repnz inc mov dec dec arpl add mov sbb inc sub sbb ret (bad) hlt and add mov pop jnp inc add popa jo (bad) jo inc (bad) jae jbe push add pop mov push in (bad) call push or cmp xlat lods scas cmp pop cmp je nop mov int3 stos inc hlt cmp outsb mov enter (bad) xchg and jg hlt cmc lea jg cmc fwait pop xchg xchg push mov mov sbb and sub idivl loope aaa push sbb sub sub xchg xchg pop jae pushf fistl mov jmp (bad) stc dec sti or cmp jmp in sub push scas xchg mov xchg in das mov mov cmp push fcmovnu xor and mov sbb xor sbb ja mov lods test ljmp push cli pusha pop (bad) into (bad) je inc adc mov dec mov mov mov jne lahf in push int3 gs mov xchg cmpsl mov pop or dec and add mov popf mov xor mov stc stc ds mov lcall pusha push mov lods jo loope es leave insb xor jo add mov inc xchg xor sbb imul or mov add insb mov shlb dec pop mov sbb adcl test and xchg push pop push scas popf lahf cs loop mov mov repnz sahf aaa es jmp and fbstp lds lods xchg adc and daa xor out push movsl sbb out ret jl xor in (bad) addr16 in inc test (bad) push scas (bad) repnz pop out lcall mov mull cmp add cmp pop (bad) loopne fs negb rcrb out loope mov pop or stos sub mov out popa xchg mov aas or cwtl jns pop dec dec xor outsb xlat mov sbb or xor lods and jl std adc pop imul sbb mov mov mov mov xor or addr16 sbb jge je push popf test mov shl mov jno sbb xchg dec out pop or push jo mov fstpt test decl inc dec inc mov xchg push mov sub ja sbb jo das popf xor mov fstl cld adc lods sub aaa sbb mov mov fs imul fwait add adc add add add (bad) clc neg (bad) movsl outsl mov dec js mov std ds mov xor sbb pop imul clc xor push pop sub daa mov sub pushf mov and sti or jne xchg xchg xchg and adc xor mov cmp int3 dec popf or or pushf xchg xor push int3 pop jl mov xor orl test mov push sbb into test mov insl sar ljmp mov xor into mov mov movl push ret sub jge les push repz fisttpll outsb adc xor imul pop push lods xchg xchg insl and or push dec cmp fs fcomip rcr stos add push (bad) adc in push test jg or push or pusha fsubrl mov cmpb ja test (bad) and ror nop jecxz jp jbe insl lods ss in popf lret pop or arpl faddl pop sbb aas flds cli lock int3 xor sbbb mov mov int3 sub sub rcrb lret mov sahf cli or enter pop sbb imul faddl xchg rorl aaa fsts pcmpeqw xchg push cld int3 insb out stc xchg inc lret xchg xor insb test scas frstor aaa in (bad) jno std adc push mov inc cwtl xor mov les push mov mov cli mov std popf mov roll add add add inc cmpl sub pop ljmp std add push ss ss push xor xchg add (bad) stos xlat pop mov xor adc sub lret ds cmpsl xchg (bad) push stc movl cmp test xor or or mov push and mov sub (bad) in cmc jnp push in xor and cmpsb cmp dec stos scas leave jbe scas jae rcl cmovge ljmp mov pop cli push popa loopne sti jl sti or insl sbb rolb rol xchg or insl sub (bad) popa pop imul sahf xor sub xchg loope stos out sub sub jp cmpsb pop jo fcoml and lods outsb shrb add cmp push xorl divb and popa mov mov adc out icebp fldt leave scas pushf aaa dec out xor out mov idivb (bad) sub arpl mov shll cmp leave out test hlt pop (bad) lock pop idiv sub inc mov es mov mov push add ja sub cld pop pop je adc inc (bad) aam jae daa pushf je pop xchg sub test (bad) lret or xchg fisubr (bad) mov mov push push add xlat pop jmp les pop mov rorb mov inc enter add popf xchg sarl mov adc mov sarl inc xchg adc jnp imul mov pop sbb out ss push sbb jns adc lock jp cmpsb jbe mov cmp cltd fiadd in aas sub adc cmpsl insl xchg (bad) lahf and (bad) sbb movsl je mov movsl dec cmp or shll in mov ficomp jl add jo mov in jb adc les lea mov js cmp fistl inc loope fwait mov pop xchg mov mov push fwait push adc stc mov or cmpl dec mov inc dec fucomip xor xlat push stos xor and add dec imul int test add in addr16 push hlt xchg xor mov jp mov add dec sbb jb imul outsb cltd bnd cmpsb insb lods mov dec mov cli cmpsl and addr16 mov cs arpl (bad) fs (bad) sub mov mov jg jmp mov pop xor imul adc xor cmpl mov or xorl sbb xchg jae push xor xchg loopne mov add mov js mov jnp inc or test adc adc insl (bad) push and test outsl push xchg xchg enter cld or xor jae fcomi test inc inc pop dec mov nop cs mov sub stc mov pop mov lods stos ret popf hlt xor je call add push mov out adc loope movsb cmp mov negb or mov push mov pop (bad) mov cmp mov (bad) jbe pop lods js mov mov loopne nop sub xor (bad) dec mov mov mov jns pop pusha mov ds lcall add add adc mov and stc push jge cmp cmp imul aas inc or orb jg (bad) fnstenv sub test sub test mov movsb inc rcrl pop inc mov pusha mov int3 add pop mov or push mov hlt push push dec lds scas andl adc push fidivr pushw out push sub xchg mov mov ret inc test lods fsubrl add mov test (bad) pop ja fs mov rolb or jbe stc xor icebp bound sbb leave fcmovne (bad) adc pop add clc xor cmp movsl cltd mov ret push leave repz idiv lds mov mov jecxz jle jl fnsave mov repnz fild or ljmp add add add xor push out sbb std jns and cmp mov sar rolb push mov sbb and std es ljmp arpl lret rolb and fiadd out and xchg hlt xor xchg imul pop xchg adc leave pop pusha ret lret popa aas sub cmp and sub hlt mov cmp adc mov cmpsl fsubl and arpl dec cmp jb jecxz lods mov and addr16 and inc test repnz mov jns rcll push mov icebp adc mov out fbstp xchg adc add ror imul lds mov les inc test jno fadd cs push mov jp jae fild add cmp stos add int3 les xor and lock cmc add outsb es xchg or xor sub adc push flds mov (bad) iret cmp pop jno sbbl mov (bad) out sub mov sbb fsubl clc out repnz jae lods adc push cltd daa jp mov aaa sbb push mov cmpsl mov ficom push iret add mov jp add imul sbb fisubr je inc push pop xchg fcmovbe mov cmp jns push and (bad) sbb (bad) mov cmpsl pop dec enter push fucomp push (bad) dec negb push out xchg pop xchg or mov xchg (bad) jae jo call lods ds push divb and adc xchg out dec ljmp mov pop jno sti add fildl test cwtl ljmp inc push xchg push stos mov inc pop inc dec (bad) lret jbe jo es pop pop mov mov jo sbb push pop arpl mov test stc cmpsb rcrl cmpsl xor pushf or and andl lcall cmp inc mov lret cmpsb dec sub fild cld pop test call lret ret fnstenv imul xchg jns gs ret es dec mov loop fist push repz and mov (bad) mov out mov sbb cmp orl lret mov mov insl push call mov and adc adc cltd lods lahf lods les mov add or xchg xchg push outsb outsb test je jp lea add add add xor pop int push sarb (bad) lock das sub sub es scas jae mov sarl xchg mov inc sahf pop out ret imul adc push andl pop ds stos fisttpl jo push xchg test fsubr dec add out xchg pop xlat adc pop add sbb inc lods in jo outsl dec add negl pushf (bad) pop cmpsl push stc mov mov daa mov divb push cmp mov and dec push inc push pop adc repz xor ret (bad) mov dec jnp das bound scas rol stos dec js call mov xlat adc inc push icebp push sbb in mov and inc cmp inc loope test fwait xor sbb xchg adc add lcall xor and cmp rcll js cmp (bad) (bad) out imul xlat push mov jmp mov icebp xor push mov mov in fisttpll sbb (bad) jne mov inc mov jo scas mov loop push adc inc in int3 scas dec and pop mov push mov push ds and cld out mov aad mov addr16 in ret push xchg in mov adc pushf xor imul cmp (bad) or xchg jg ret int3 cs sbb inc scas lret ds push xchg shlb xchg sti xchg mov pop mov out add ss dec mov subb in push bound lods or dec mov xor imul xchg (bad) in nop stos lock add dec xchg sub push sub jno add sub pop sbbb mov dec daa insl outsb call std dec out inc xchg lea out sbb xchg addl je lret mov enter cmpsl pop mov ret dec sti outsb mov push hlt cltd int3 cli sub sbb push sbb xor adc adc mov jge xchg mov jg adc sub movsl cmc pop sub das pop bnd sub inc mov sbb push sarb imul mov mov cmc and orl pop add pop dec ficom pop (bad) inc sbb push setae pop hlt loopne into pop inc rcrb jo idiv xor add fwait push dec enter andb fildll mov lods mov fimull cwtl lcall xor cwtl add push dec neg mov (bad) (bad) sahf mov push js pop es loop in icebp cs jp iret mov cwtl pop mov mov fild popl fwait or outsl movsl inc push ss inc test adc aam fild roll notl xchg add xchg mov xchg push mov scas cmp divl repnz pop jmp shlb insb jl push push xchg pop pushf jo ja add movb xchg xor loopne jo repz loope jne and cwtl cmp pop push fbld out sbb jae mov or hlt jnp add push pop les mov rcr or out sti jg sahf mov loope shl arpl add cmp sarl dec or inc imul or sti shl add pop pushf lods push add call ljmp je bound inc push (bad) aas pop sbb or inc xchg mov mov xchg xchg (bad) sub sahf data16 fisubr push aad data16 rcrb (bad) xchg and dec push shrl push adc lret and (bad) test repnz xchg jl subb dec aad push aaa cwtl stos dec js dec xor fsub es out sub inc cmp xchg pop jle lods sbb loopne stos mov xchg lods jno lcall aas ljmp push cmpl xor icebp jns outsb mov mov mov ficom imul jns inc dec fs mov inc and shrl xor shlb push sbb lea mov xchg sbb add cwtl jbe sbb sub rcr xchg fwait pop je daa xor adc dec mov pop cltd shlb fisubrl pop rorl inc popf adc leave repnz xor add cltd dec inc aad pop or add loop push jbe mov mov divl jb mov pop icebp cmp mov js inc les add repz mov inc and rorb cmp mov sub repz dec in sahf jle or lods fcomi out outsl bound addr16 fbstp aam hlt (bad) mov in pop mov push pop ss (bad) int3 test xor loope insl jns adc je (bad) dec push xchg stos lds and mov and sub or movsb and cmp bound adc test add adc mov addr16 cld push pop dec je dec in jg test cmp push and push test sub mov fcompl pop insb dec cmp call (bad) and sarb lcall pusha stos sbb pop pop xchg mov daa xor sub cmpsl inc mov jp enter and call lret dec les cltd xor (bad) xchg cmp mov cmp sub (bad) fisttpl pop or push lods push jnp shr js pop xchg xor fsts ret (bad) clc jne stos mov sbb scas add movsl imul bound in (bad) and mov hlt lock mov ret xchg xchg cmp js bound xchg inc scas add fisttpll xor pop test xchg or adc pop jp fwait stos cwtl add inc mov cmp arpl jnp push lods icebp push out mov mov les mov (bad) test sbb pop sub inc xchg ret subl cli mov mov imul sub push push lcall cwtl in add emms bound jge dec pop and mov ss das aaa pop sub xchg leave push pop aam ja dec mov and aas in pop push cld stc js popa call push rorb add add xchg out xor stos cmc fwait sbb out inc cmpsb jg rcll sarb push add jmp cmp incl mov sub enter in jl out mov pop dec out loop adc cld jno push pop das ret insl loop inc (bad) mov add xor fdivp xchg jecxz push shrb cmp fist sbb pop dec mov cmp adc (bad) xor js test inc shlb loop jmp out ja movsl pop sbb sbb mov add lcall mov cli cmc out mov xor push dec int push in inc sbb sahf push sbb and aad cs add push cs sahf inc leave shrb xchg mov cmc dec imul fwait dec sbb fsubs inc xchg adc xchg inc call rolb mov pop sahf xlat xchg mov mov jno stos mov push icebp or cs lcall clc pop dec lahf xor les mov int3 stc cmp movsb add jmp xchg lret inc add mov rcr mov sub dec nop xor arpl mov or mov out into frstor cmp fs sbb add mov sbb je not xor aaa mov mov adc mov fnstcw sub mul (bad) daa paddb inc loopne imul cmp dec push and jnp ret cmpsb (bad) jbe mov sar add es add xchg jle mov add sahf or sbb je xchg stos inc jns mov mov mov mov cmpsl mov cmp xor ss and jb sub cs xchg in cltd cmp (bad) leave lods prefetch or or (bad) icebp in cltd pop jle nopl int3 xor inc mov cs lahf push adc push adc mov push popa jae stos (bad) jnp popa test xor add add pop daa popaw jp xchg sub adc int3 ja (bad) pop in out shll loope loopne data16 mov push gs ror cmpsb fdivl xor test out mov lcall repz jmp stos lret pop sbb mov adc jl push (bad) cmp stos addr16 (bad) dec cmp shrb push sbb sub xchg add and jno loop lahf loopne mov sahf sub outsb imul xchg jb test pop or jmp inc inc push out rol jp and xchg inc movsb (bad) ds push faddl dec (bad) aas mov jp sti (bad) mov pop adc adc sbb in cmpsl jnp or addl sbb fbstp push lcall sub fcmovne pop in hlt add scas faddl xchg xor mov int inc inc sbb scas outsb int3 addr16 pushf inc (bad) aas xor and push cmp push pop repz loope and sub sub xor mov adc lcall outsl insb enter mov push push cmpsl std gs daa repz mov hlt push cmp imul outsl pop inc into test cmp imul jmp jp int3 push pusha push mov push jecxz es std (bad) push push xchg mov inc hlt gs (bad) add imul pusha cmp popf divps loopne cmp je pushf mov scas lods push dec outsb enter dec adc in (bad) scas lret gs push lods pop icebp std mov jae xlat popa mov out mov lea xor cmp cmp push cmpsl or add dec add mov mov jne lea mov pusha mov cmp faddp rorl leave fldenv pop ljmp xor push xchg sub and jl fildl mov loope (bad) aam pxor push sar push mov lea ret outsb cmp daa loopne test mov push (bad) stc stc xor push fwait in mov arpl adc mov push dec imul and cmpl add pop fist rol cmc jmp and adc into fdivl pop push mov lea inc and testl jge adc clc sub test mov clc jbe jae jp inc shll adc push mov push js lods sub (bad) int3 dec ss adc push fs mov ljmp jmp cmp sub mov cmpsl and xor mov pop aad push adc sbb pop call cmpsl int mov and dec pop test adc lcall cs jae xchg scas push mov push popa test out push cmpsb push cmp in in xor xchg dec mov clc jo cli xchg pop lods jns mov lcall lods push mov lahf (bad) rorl aam (bad) push mov sub sub (bad) push jge add lahf mov out clc xchg push jl imul dec adc inc orl pop mov mov xchg inc fadds insl push fnstsw ljmp push jnp test cmp stos mov ret jge sub stos jp cltd sti push pop loop stos leave dec call add xor fimul pop pusha jecxz fnstenv sbb lock sub jbe add push pop iret add aam lods dec out jecxz test ret sti push inc xor outsl bound cmp inc loopne xchg mov adc jae add xchg into xor push xor jg jo mov js (bad) pop mov cmpsl daa bound cmc or jp xchg mov jle mov add sbb daa add pop mov or (bad) jne (bad) ljmp sub movsb cmpsb (bad) push test and xchg jp gs out scas pop fsubl mov ror sbb out pop outsb rcrb ja outsl mov sbb ret cmp sbb add dec out pop inc dec lock mov psrad sahf add add mov arpl lcall pop or rorl inc incb jne mov outsl cmp xchg and movsl jns xchg pushf (bad) jo mov icebp sbb jge daa shlb mov jbe fdivrl mov sti xchg arpl icebp out mov stos inc xor or pop lods cs (bad) repnz push js dec lret or rcrl cli push push adc rolb ds xor fisubr fistl mov cmpsl out int cmc out scas sbb scas mov jle icebp out or inc xor test add int push mov mov sub or lret pushf int or jp cmp inc mov or std cmp mov scas jb outsl pop mov xchg xchg mov pop cld sub mov mov nop xor mov mov (bad) lods test ljmp jb repz and aam xor add or xor fidivl ret mov lret fwait out outsb xchg daa push push jbe fldenv aam sar mov adc xchg jecxz mov xor (bad) leave je xchg imul dec aaa dec pusha xchg or jne cld cli out adc xchg and sbb dec (bad) mov out or xor outsb jae mov push clc pop push push lcall repz out ret cmpsl call in xchg inc mov pushf adc add es mov scas rcl (bad) or jb es mov sti movsb pusha lahf jecxz fidivr sub add mov mov les inc ret loop das mov out xchg in aas icebp cmp pop pop cld outsb or push and adc fcmovnbe nop nop add into push add mov inc push mov out or push add push cmp jl int3 jbe cli clc icebp sub xor and push cmp inc pop mov sub icebp aad add fmul sub rclb push mov mov cltd adc dec ret stos mov sti ret sahf dec mov pop jl pop mov mov je repz adc pop mov lahf push clc roll or insb js inc push rorl mov rcl xchg ret mov push pop jge in ret outsl je xchg lods xor mov lock int3 insb add or icebp inc sub mov and cmp pop ret xor dec add cmc lds xor jns bound mov loopne jle jae xchg cmp pop push sahf xchg lahf mov xchg repz stc push mov cmp insl inc dec das adc mov push sub xchg pop and mov movsb mov mov aas jecxz sub mov sub lods nop sub mov pop andl movsl add cmpsl jno sub jge cs sub in mov mov dec xchg mov and pop dec lock adc stos in insl and ret pop inc pushf pop xor fisttpl das (bad) js fistpll stc cmp (bad) adc mov lahf test sti inc loope inc push mov mov dec push xor add stos dec cmp sub dec jmp pop jb adc (bad) jecxz mov lds sub push call push xchg mov nop scas pop cmp xor inc out inc sub mov cmp test lret lods or movsl mov mov cmp push sub xor push loope jle lret lods test lds movsl xchg xchg push mov adc dec leave mov push pop add xor jne enter push jecxz pop cmp jns lahf adc xchg xor cmp pop add dec xchg add or int pusha cmp ja lods pop lcall incl pusha mov mov or adc pop sub clc (bad) jno pop and and movsb cmp inc adc mov test mov das mov adc add jge rcr stos cltd mov jl mov mov sti mov sar ss jl hlt hlt sub imul sub and icebp loope mov mov inc adc mov or inc jo dec ret adc add xor add mov inc daa mov ss xorl dec sub add push leave mov mov jns mov lock mov sub mov mov hlt (bad) xor lret adc and fadd insb push stos mov outsb shl (bad) in xchg adc pusha std push and daa jnp (bad) enter mov sub in add mov je mov push mov cs addl fadds notl cmp sbb add push mov inc push jb cltd dec mov push mov loope adc and insl dec lds call mov (bad) fs dec mov in adc leave adc bound lods js rcrl sbb mov fist insl and sti dec lret xchg xor push jl push out cmp lcall mov pop (bad) xor sub xor mov cmpsl xor mov mov push cs xchg pop dec je sbb lahf sub mov popa xor repnz jge ret inc mov pop insb mov jmp sub dec (bad) mov loope les jmp lods cmp mov dec dec enter mov push push jbe pop loop testl and ret sti sub cltd mov sbb mov inc aam or pop pop push add cli packsswb push (bad) push xchg push daa jmp xchg sub pop sbb lret stc repz int3 loopne mov push pop push dec iret xor ja out cli pop aaa lock inc adc push dec xor push clc pusha inc clc enter imul fisttp or xchg imul fdiv dec mov mov xchg popf push ds (bad) push fcmovne (bad) push jmp push fsts pop and mov xchg js push lock add mov lods cmpsl mov add adc cmp pop out pop push inc mov sbb or jmp mov inc insl xchg pop or fimull adc push push (bad) mov jae xchg mov imul pop xlat cmp cmpsb idiv pop adc push dec jle sbb test xlat movsb fstpl jp dec fnop push out mov sub adc add jg loope and or jae add mov in test gs or lret adc cmpsl es dec stc and test mov ffreep arpl es push pop add inc jb push mov scas push jecxz mov ja mov jae iret xchg data16 sbb stc repnz sbb jp lretw inc mov andl sbbl mov outsb gs lahf pop shl cli mov ret arpl add inc and adc xchg jnp imul jno adc xchg add pop lret std push add mov pusha mov mov mov insb aaa outsb (bad) jae lret adc loop outsb test xchg mov out adc mov sub sbb jbe fcmovnu fsubrl xchg adc pusha hlt js push xchg sbb xor stos sbbb out insl sbb fadds fbld bound push aaa mov scas fcmovne inc push mov mov add dec add nop pop sbb in popf or lret dec cli cmpsl mov adc jmp pop xor mov hlt bnd negl cmp lock pop aas xchg into icebp add (bad) mov mov jl mov adc (bad) hlt (bad) pushf sbb aad jbe (bad) not inc scas cmp mov aaa (bad) sbb sub fninit shl sub (bad) aad lahf (bad) mov ret push ja aad jecxz jmp mov mov add cwtl or dec inc fildll in mov or jle push icebp outsl jl mov cmp pusha fnstsw push testl pop lods cmp lret lcall mov push js sub mov div add (bad) popf mov xor cmp pop xor mull inc pushf roll mov fwait shlb fs rep jb ret or (bad) xor enter hlt or out xchg repnz scas sub xor popf jl xchg xchg cmpsl arpl push mov push push pop lahf lahf lret cld pop push arpl xchg and sbb inc fwait jne (bad) mov in lods leave jae sub inc (bad) scas ror roll mov or test mov fdiv sub sbb sub sub outsl lods adc pop push jle in dec dec mov sub sub cmpsb addl push out adc lcall xchg mov loope push dec jne cmp aad push jbe sub cmpsl xor in (bad) lret or mov cmpsb add inc dec sbb mov cli scas orl xor xor stos jle repnz mov push js (bad) call mov nop (bad) repz mov jne adc stos inc mov mov cmp pop sub cmpsl lret addr16 jmp mov mov adc jnp daa loop repnz dec insb jmp sbb jge arpl push insl or mov sti add sub (bad) jbe in pop stos cmc mov sbb dec daa and sub mov mov mov adcl add jb movsb jno ja fdivrl mov imul add sahf ljmp jne jl pop into xor in mov inc fldpi mov dec xor or imul lods pushl daa lcall dec mov mov sbb dec push mov adc mov loope or sub sub mov test psubsb xchg (bad) lret jg mov inc lds mov mov xor test mov cmp and dec scas loop,pn frstor (bad) or xchg and mov test mov cmp lods ljmp mov pop out add cmp xlat movsl mov outsb loop xchg jge and cmp or jecxz les out jecxz sbb test stos jns and adc xchg in inc adc repz jmp scas lahf cmp test sbb add movsbl jns arpl leave add jae insb in mov pusha xor into sub loop aad addr16 push test ret jno je sub jb cmp and lret xlat cli pop dec dec mov call pop mov mov sub (bad) les (bad) pop out dec jbe cmp xchg scas cltd xchg dec popa je addr16 lahf incl out sub inc movsb js sbb ret and fdivp jle aad xchg dec sub iret xchg lods lcall aam push clc or pop popl and sbb adc xchg push ja xchg (bad) jecxz in sbb mov inc push ret ret mov loop outsb lods insl out or cwtl inc sahf or cltd jnp std add push outsb xor out add out xor dec (bad) rorl iret imul dec (bad) aam cli jmp sub enter arpl push and pop adc fs push addl (bad) xlat xchg imul cli addr16 cmc (bad) mov lods pop test and out scas pop gs ds arpl cld roll or mov push xor adc icebp mov or push clc data16 rolb cmp lahf pop cmp dec pop (bad) sbb mov or mov add divb loopne sbb (bad) xchg loope push mov int3 test sub mov mov repz lods mov aas lock insb test stos neg xchg sub sub sarb rcr ljmp mov push shrl mov stc scas lret dec mov pop xor lcall insb insl imul fbld out sub movsl lcall (bad) rcrb sub sub pop mov mov lods divl ret popf push or loope loopne in dec lret xor cmpsb movsb gs cmpsb test sbb cmpsl in push mov pop cld mov jbe jae bound sahf fidivl push fdivrl lahf hlt push mov fisub std lahf jp sub mov enter cltd adc jo xchg sbb inc (bad) push aad out cwtl mov cmp add pop mov push movsl out test jns divl xlat mov mov and leave ss jb aaa push test push or xchg and into leave sbb mov inc add mov imul jnp xor cld subl sbb (bad) ror mov mov inc ret lock outsl mov les adc cltd cmpxchg xchg add fadds adc cli icebp sahf sbb mov in and sub sti cs and push pop fwait call mov mov fprem in addl xchg mov mov jbe test in mov dec sub sub inc (bad) test cli mov mov call fs sbb ja fs into cmp aad mov cmp ss ljmp sub test or mov scas cmp pop cmp push int out frstor cmp jb xchg xchg mov add (bad) fs jne and cwtl inc mov sub stc ret pop ds clc pop imull adc mov sbbb adc mov mov push or mov inc loope jns sub in in xorl jne repnz xchg xor xchg pop ficoml into out gs (bad) clc into or jne mov xchg lret push mov stos cld adc pop xchg cmp xor cmp push arpl push (bad) mov js test ljmp cmp mov das pop add push cmpsl sbb stos xchg sbb jne xchg pop sub pop fisub pand adc ret dec mov pshufw das jne hlt xchg popl arpl add ret jle pushf inc jle xor stos xor jmp ror mov add mov adc nop jecxz jno xchg add mov push popa loope or pop pushf nop and fcoml add lret dec and lock sbb (bad) scas pop adc jne cmc cli mov xor (bad) cmc inc cmpsl xchg fwait and daa fwait inc xor ja mov mov test push cwtl mov xchg (bad) inc mov push stos ja lds pusha push insl es dec cltd dec inc mov mov (bad) dec fdivrp fisubr mov push imul out xchg xor test sub ljmp loop xor aaa adc gs mov mov lret push mov ss xor and (bad) mov adc cli pop jle jg inc ror lea imul xchg mov jl mulb (bad) fs dec das dec sub ficomp xchg dec repnz int shll add sbbb push rcrb pop in jecxz cltd loop cmp dec imul nopl mov js cwtl adc mov mov pusha mov mov scas movsbl inc add lods insb jle lret mov fstp sub (bad) imul int stc mov and loope jecxz adc loopne (bad) pusha rcrl fbstp stos jge (bad) push dec or cs shrb push stos adc adc pusha mov js ret fs out testb jnp mov stc mov cs (bad) jge and inc inc and mov cmp mov arpl push xchg inc or inc clc jns aam mov ljmp dec (bad) mov lds aam sbb loope cld adc outsb popf jecxz mov add lds imul xchg cmp xlat test dec rorb or in push stc lret xchg adc (bad) testl jge or mov cmc xchg imul add mov xchg ljmp sarl jmp cmpsb mov fbld in xchg ss cmp outsb aaa sub stos (bad) aad jno cwtl cmpsb pushf lds add sbb push repnz mov push add in mov (bad) sti and mov xor xor xchg mov ja xor jne (bad) in jecxz movsl dec xlat in mov movsb inc mov imul jmp sahf jns push mov cld les pop out adc cmp lahf xorl (bad) decl jnp push adc aaa xchg xor and repz add add loope cli cmp fisubl xorl test dec mov sbb lods int3 in mov and ficompl call cmpsl ljmp out (bad) xor insb mov ja pushf sub ja inc push pop dec jmp insl (bad) leave jmp inc and add xor lret inc mov out cli xchg mov out and (bad) scas ret jp (bad) in in push sub in add inc push out lea cs psubusb inc jle add inc pop div ret insb lcall push les popf imul mov into outsb sbb inc js xor push cmp pop out add stos xchg push test out imul push frstor xor and jl and cmp pop jmp into lea jecxz jg jno int3 cmc popa push add jge data16 movsl or adc aam popa sbb sbb pop sub lds inc mov inc ja es jmp jp push mov pop (bad) int3 in lock jno (bad) lock mov std mov stos fcmove loope or aam cld push and enter insl pop mov mov pusha add cwtl (bad) enter adc ljmp adc repz xchg pop mov xchg shr test dec mov cwtl xlat or or push add dec bnd sub xchg aas adc mov shrl imul inc push popa cltd je movsl xchg or insb push jle test mov fwait inc inc fmuls cli out add subl mov xor pusha into inc faddl push xor out xchg cmp inc es gs mov add add int3 lea andl in cltd add test mov in pop fcompl cld lret or int3 push daa in scas mov xchg mov int3 imul in fcoml sub fcoms and mov stos mov xor fisub sarl pop lret cltd sbb cli rcll mov ja cmp movsl test xor and mov (bad) cmp and in popa bound dec and jo xor stos (bad) mov loopne push push mov lock dec sbb loope out pop pop and mov aam pusha push add mov in lea cmp or (bad) fistpl push cmpsb dec aas push enter lock jno sbb lahf jmp add orl cwtl sbb imul imul (bad) push cs xchg scas inc push ja pushl pop mov add sar xchg or push cmp out sub and lret and lahf aad adc xchg mov mov jns pop movsl pop sbb mov fdivs loop ret pop cwtl dec xor mov in sub es (bad) movsb in ss mov stos mov and jne xchg test jno inc movsl inc adc fnsave adc adc je popf adc fdivrl aaa dec jno mov sahf xchg pushf fistl arpl in push aaa lock out mov lea in and adc xchg xchg (bad) and cmpsl sub push call push fs mov sub clc mov test (bad) xor lret adc in loop add jl int3 shrb inc mov dec sub es enter pushf mulb insb cli loopne (bad) dec mov ret sbb cmp addr16 ss shrl mov mov popa rcrl sbb or xchg (bad) scas jmp xlat movsl mov push cmp dec or cmp dec pop and icebp cmp aam das das test fcoms mov in scas push add insl xchg in es jl popf xor cmp push (bad) push jle adc adc xor out or and movsb lahf (bad) adc out cmp jl push addr16 pop xor jecxz (bad) and cmp data16 cmp mov int3 mov loop xchg ret or and add pop movsb aad mov jle pop or lds repz jle pushf int3 (bad) imul cltd add fmull std adc cwtl jmp inc mov push ja xor adc mov push pusha pop les mov mov push nop cmp repz push shrl jmp jmp xchg and inc aad mov in mov xchg das mov inc mov fisubr pop pop add sar pop sub jno arpl mov mov xchg xchg mov pop or outsl out in out mov imul test push mov pop fwait popa ja mov scas mov stos cmp hlt sub pop push jecxz dec jle mov leave xor xchg cli (bad) and jg mov ret negl dec in je sbb cmpsb sarb sub push ret in inc mov jno cmp mov orl iret push fcmove pop mov shlb dec add dec push cs xor stc pop pushf lahf push push mov jp roll mov clc xor out mov andl cmp call shr cwtl xchg cmpsb jnp sbb jno popa imul adc jecxz popa dec and pusha mov sbb das fistl sbb add sub inc sahf in aas xlat inc xlat testl push test hlt inc mov sti stos push fldl xor aaa cld mov xor inc push cmpsl (bad) stc jne icebp mov in shl scas cmp cmp and xlat movsl dec ret sub pop lock push mov mov hlt imul mov jl lret int3 xchg pushf inc ljmp aad add xchg add (bad) adc inc dec repnz bound sahf mov dec std push mov inc test clc ds xchg in dec je call test mov cld adc xor popf cwtl daa (bad) push mov or pusha inc xor outsl mov sub xchg ftst lods arpl outsb pushf icebp sar pop xlat mov outsb sbb test mov nop das sub pop lods cli scas push mov pop pop and out vmaxss adc sbb mov repnz daa mov stc dec push inc jae mov sub push sub xchg lock fcmovnbe out mov jmp adc sbb pop mov mov mov jmp inc inc movsb mov inc sbb sub jnp nop and mov xchg mov or popf sub cmp lods hlt std sbb rorl mov (bad) xor jne je movsl jne push and cmpsl mov sarl xchg sbb jmp jl pop gs ljmp mov pop je jle pop pop xchg bound loopne cmp push and xor add in lea lcall push jl cs std push aaa cltd sbb mov mov pop mov fisttpll mov jle xor dec sub mov hlt sahf aas ja inc mov movsb popa sub sti cs fist jl arpl popa rorb push add jle (bad) fnop cmpsl jecxz movsb and fistpll daa mov xor cmp cmpsb ret movl jmp cs push push add outsb loope xchg inc jno into sub pop cmp imul lea push sahf incb mov aaa lds cltd adc fwait loop jl ss inc (bad) jecxz mov fld repz incl adc xchg xor rcl add dec sarl call add sarb insb cmp push or xor or icebp cmp cmc aam movsb aam aas ret ja fmull or adc stos mov cmpsl xchg mov adc loop pop mov ret cmp (bad) dec mov rolb jno jp aad cld fsub pop sub mov popa ret imul lahf mov push fwait mov mov adc lret (bad) jecxz std in loopne lods push cmp jl pop lahf sbb outsl das mov lret into jne mov ja xor in dec ja (bad) rolb add add sbb jbe faddl pop sbb xor adc leave xor push popf push pop iret push out jmp dec adc and cmp push arpl xchg jae roll or xor pop clc mov loop js push dec sub mov mov push inc lods cmpsb jo mov bound insl jbe outsb enter lods mov cld jnp sub dec imul push mov jl add faddp popa sahf or mov test jl repz dec dec push shll sbb and int3 cmc cmpsl pop (bad) xchg push movsb sub (bad) rcrl xchg subl push or push roll xchg add adc push mov js lea enter shrl sahf negb jbe fwait add sbb lds or xor jns add cmpsb dec (bad) iret push enter xchg faddl loope cmp js sbb loop mov pusha adc (bad) push sub push sbb (bad) lea sahf mov mov and stos cmp push mov insl xor in fistp loope add xor lahf (bad) in movsl pop rcll pop arpl sub pusha jnp pop mov rolb mov repnz mov fcoml int lahf jo fs inc push push out je hlt push ret pop jbe mov cmp imul idivb popf dec les incl adc gs jg in icebp mov pop push scas xor pop test pop movsl sarl nop pop push lods and xchg push (bad) lea push cld mov out loop sar inc pop mov jo push insl popa push (bad) pop test mov scas add lcall mov scas sahf inc lret xorl stc xchg ret (bad) call insl ss ss dec xor sub dec addb sub mov jecxz mov ret jp mov pop cld lds push or jno rcl fdivs push add pop cmc xor push shlb push cwtl mov int lcall mov mov in pop cli pop (bad) mov mov mov adc (bad) dec dec leave jecxz outsl adc xrelease dec mov or fistpl gs or jge or dec inc xor in push xchg add push jecxz scas in lods jecxz test pop adc mov dec imul jl mov ds mov sbb pop xchg (bad) repz cmp orb dec and insl popa sub cmp jo test sub popa lods xor jle aad add ss xlat mov int3 loopne call jecxz dec jne faddl out cli cmp nop jg lret push mov les adc or aad push pusha sub add push xor cmpsb ja ja add push and dec pop push ja jmp out imul andb dec pop ja xchg repz mov sarl mov jl js xor jns mov sti dec push fsubs sbb mov imul jbe jmp push sahf movsl (bad) rcl pushf arpl xchg outsb or (bad) cmp pop add pop inc jnp call add add push imul fildll leave mov xchg sbb sub mov (bad) jbe das sti sbb xchg js dec cltd cwtl sub fdivrs dec mov mov clc shrl lock sbb movb jp lahf sbb jmp data16 popa lcall pop and adc arpl adc imul test and enter fild (bad) xor or or inc imul mov cmp mov xor daa stos mov pushf andb add add add push xor insb aam inc xchg lret dec fiadd subl dec xchg push jmp mov mov jl push mov mov jge bound push add push lods leave lods add cmc inc icebp push sub aad roll inc stos and popf sub and xlat or sbb or or sbb sub int3 lds lock push jno repnz jp rcrb and mov ss bound jp dec ljmp ret mov cmpsb mov out fwait xor mov dec test inc orl push lret or push sub cmp sbb jae outsl cld sub mov (bad) aaa jle das out sbb push movsl dec fisttpll in sub pop clc lds cld cmp pop mov lods cli rol (bad) out dec inc je xchg orb pop jecxz jnp mov inc in push fnstenv insl ss add add pop inc cmp xchg fwait cmpsb mov std add xor in inc xchg push jecxz lret inc (bad) data16 mov push fstp ret cmpsb jb movsl lock dec pop lret fsubl in sbb test pop mov fwait jl pop in push xchg mov lcall das add xchg outsb dec inc mov test scas or jne mov mov mov movl xchg jne fild and xor pusha insl (bad) je cmp scas xchg jecxz repz setp insl push and (bad) lods fs lds in imul push call imul jp xor mov loop cld shrl xlat jmp cmpsb sub cmp push iret mov enter out enter lret repz pop xchg dec pop push or xchg jge mov mov bound inc pop jns fdivrs xor or mov sub decl jns mov imull pop test sbb inc loope pmaxub sti call lds adc push outsb xor es ret setnp add cli sahf push jmp sahf lock push xor cmpsb test mov into inc shlb or or cmpsb mov stos std cmp mov dec xchg jb (bad) cmpsb push addr16 out (bad) adc push mov pop cmp adc lahf lds push push inc stos or jp pop fmul mov fs sub xor and in push clc push repz dec cmp jns lcall addr16 cli inc mov int3 sarb lcall (bad) mov mov mov jne mov outsl test sbb mov mov loop dec cmpsb scas mov stos mov cmp mov dec (bad) cmp or mov or test ljmp jo popa insl fcmovb xchg xchg fild decb (bad) mov (bad) mov pop scas and (bad) or fwait push imul pop in push sub sub in sbb xor cmp xor cmpsb cmpsl sub or fdiv sbb std mov iret pop fwait mov aad dec leave stc or inc and sahf push cltd mov lods and xor les add test mul (bad) repz pop mov mov xchg das sbb lock add cmp in and dec jnp int3 fstps cwtl fmull pop negb pop jbe add jmp test pop jl in (bad) cmpsb test cmc arpl mov inc push out and ljmp pop addr16 call into aas aaa mov cmp ret dec mov aas xchg jbe push push mov aas xchg fistl out mov aam push xchg aas jno mov gs xchg mov scas pushf decb push sbb xor mov rcrb pop mov and insb hlt fnstenv aaa lea add cmp popf push test xor outsb adc bound sub ljmp xlat shlb add mull xchg mov popl cmc sti or pop pop repz mov jecxz or mov xchg (bad) cmp je hlt test movsl dec cmc das push scas aas inc fwait dec mov inc mov popa (bad) mov bound sub dec add fucom jnp or lea xor push mov xor in fsubl jp out aad stc pop inc addr16 pop loopne test subl and lock fs cwtl pop pop (bad) jl inc xor adc mov mov dec lds or mov repnz loope orl and movsb (bad) les ret pop cmc cs pop cld popa pop hlt fcompl fldenv mov pushf jmp cmp into adc int3 lods bound out out incb loop and fwait inc lret imul and lahf and pop test jbe hlt jnp or mov mov scas jl loopne,pt imul rolb pop mov les mov je enter addr16 ret cmp mov sbb mov inc fdivrl pop pusha add js mov flds or test (bad) outsb sub arpl mov push mov fstl cmp aam dec push lea fwait cmc pop add mov or sbb xchg fidivrl dec pop add lcall ficompl cmpsb lock cmpsl xlat xorl and and lret out mov fisubl rorb int3 cmp roll ffreep loop int push daa aaa dec cmpsb cwtl std add gs mov cmc pop test das jecxz adcl outsb out jo dec jne fnstsw xchg inc call sbb sub dec push dec (bad) jmp nop (bad) xor and adc into js test fsubl xchg jae jo je fs mov mov (bad) xor in pop jecxz icebp jg (bad) (bad) aad test dec ret adc inc movl cmp xchg mov in dec je or outsl add push inc add mov es fisttp aaa jge xchg lar add pop xor shll mov loope (bad) fcoml lds xor dec fidivl xor (bad) or mov (bad) out mov add loopne (bad) rcrb repnz jne sub inc inc outsb icebp push pop inc test clc movsb lahf mov jno fdiv mov shll das cmp out in arpl dec pushf pop pop lret stc mov movzbw adc mov fcmovu inc je cmpxchg imul mov cmpsl and loopne mov popa mov and dec jp dec push cmp or inc jo mov lods pop ss mov pop jb push lods pushf mov stos rol lcall sbb pusha xchg ss incl (bad) aaa add imul adc ds push pop popl jb loope aaa cmp out inc aaa push push cmpsb cmc and aam fmuls pop cmp fdiv inc mov mov add cmp int3 pusha fwait mov rcl fdiv or shll cmp in mov add sbb mov adc pusha in repnz popf xchg mov lock leave and aad adc sbb pusha pusha cltd movsb int3 data16 push pop add mov jle mov xorl cli jnp pop cmc xlat mov clc pop int3 xchg lret sahf fistpl xor pop lods sbb xor (bad) mov or adc mov and or ja dec sub jne and stos push loop lahf adc mov lret cmp sub mov pop or adc imul arpl sbb ret in adc stos mov xchg rorb fsubl push mov inc out cld xchg inc sahf cmp and mulb jecxz jo cmc xchg and (bad) cmp adc xchg sbb sbb push in arpl mov idivl mov les test std jmp outsl mov mov jge adc out fisubrl mov ret add cmp (bad) out adc mov sub sbb xlat push out pop cltd cmp pop mov mov jecxz pop addl mov pop lods repnz add add iret push push mov scas fwait sub dec int ficomp call popf adc into pop push jg pop out mov mov mov mov test jge in dec or and icebp xchg sbb pop lret mov lock (bad) into enter popf xor out dec pop and (bad) jno adc xchg lods lret aas pop je fwait or out dec enter xchg or stos daa out fdivr dec xor lahf int movsb movsb shrb dec pop cmp pcmpeqd sub les sub jl dec push andl cmpsb insb mov xchg ficom pop les inc push push lods clc dec aam bound jne mov jg mov out mov jg ds addr16 fsubs fsubrl movl add add leave (bad) ljmp mov mov lock dec data16 add adc lea in inc (bad) xchg xor or sbb outsb test and sbb ds test inc inc int jno cmc dec add mov inc pop cmc push pushf movsb cltd fdivs dec jmp adc cmpsl fsts dec xor ss add jae rcl (bad) addr16 mov mov pop adc mov pushf rcll imul push pop xor jg fwait mov mov xchg out outsl sbb push (bad) push out jecxz addr16 imul pop sub adc out scas psrad cmp nop bound fwait mov faddl int mov icebp int imul repz into jge imul ret stc sbb pushf rol nop or lea ljmp (bad) pop add cltd jnp popf pop mov mov aam adc pop mov jne xchg (bad) pop stos push aas cmpsb inc dec sbb push lods sub jns or jae lret lahf outsl les push mov inc dec test outsl or cmpl xchg jl mov sti test xchg std sub lods mov push pushf addr16 or mov int3 sub add movzwl adc inc and and rcrl (bad) in dec (bad) cli popf notb rcl push or push dec call ds jmp mov xchg sbb cmp adc adc mov leave mov std shrl lea dec jmp (bad) or sub jo lds mov dec pop push jecxz mov mov cmp mov add xor pusha cmpsb inc push mov jbe aad scas mov roll sbb inc scas into cmp jecxz (bad) adc outsb lcall jl mov sti adc sbb push out mov nop lods lds push and fsubrl xlat cli add insl insb dec xor dec lods popf icebp (bad) aas lods dec fmull add (bad) sbb inc mov or or mov mov mov (bad) pop iret jle dec call sbb clc adc cmp test mov mov ds repz xchg xor scas sub push or xchg clc jmp jno arpl lods lahf fwait out xor xor cli bound cmpsb mov lcall fldl add outsl adc mov dec call jp in or cmp jl (bad) pop iret cmp int add mov xor xor aam fbstp sbb out jno xchg mov mov mov lcall hlt nop les int std adc push and adc cmpsl or push bound sbb mov xor push jns leave mov and pop (bad) xchg xor nop aad jns jno inc push xchg mov adc mov cmp rclb test xchg push mov fcmovb and in jbe pop or scas ljmp fdivrs pop ret adc pop or (bad) les repz call call shr adc arpl data16 mov nop jo ss push jo outsl dec push lcall mov sub lods xor cmp add and add sbb sub in jmp sub clc xlat stos repnz push aad out and dec cwtl cmp push xchg cmp add jle sbb pop mov cli lret xchg ds inc aas pop ljmp mov or xchg jmp cltd in cld cmpsl lahf flds sahf int3 pop das dec jb pop xchg lods add retw pop xchg in loop outsb cmpsb mov sbb adc (bad) mov mov push mov sub into dec push jae int xchg (bad) mov mov gs adc or push cmp (bad) xchg push cli cli fistp xor sbb mov js xor jne outsb and xchg lods lret insb out fidivr or hlt add lret mov add inc xor and adc stos cmp cmpsb fwait sub pop push mov cltd dec test mov and ficoml cmpxchg sbb pushf add ss outsb xor scas xor sbb adcl loop or repnz stos rcr push roll sub mov inc popw dec xchg hlt adc into or and jge jbe push cmpsb stos dec cmpsb cmp inc xor or imul mov jno sub adc lcall jae pop int mov and dec orl jae out add fidiv out (bad) adc jne fwait jno push (bad) mov movsl aad sbb jmp fisubl mov cmp sbb stc popf jle aam fwait roll push jle push loope or xchg jbe orl cli test negl adc sbb loop cmp jp xchg js or jns pop cwtl repz mov fwait push fimull or repnz adc std clc add sbb (bad) lock loopne inc sub lahf subb inc sti mov in jmp sub inc inc fsubrs std les pop popf fs in call and pop (bad) xor mov pop cwtl inc mov push jge (bad) loopne repnz pop aam enter dec nop stos xor adc lods int ljmp sub movsl cmc xchg mov push jb or jno iret es jnp jb xchg adc (bad) (bad) fwait push adcl jmp add mov daa rcll mov test add jecxz push movsl orl pop lcall sbb dec pop dec add es or add push movsl scas fwait cs xor inc add xchg int3 dec xchg pop lods scas loope lock sarl cs inc push cmp dec int3 xor mov xor scas js adc pop mov and add popf idivb mov (bad) lret lahf outsl sbb fistpl mov out js cmpsl cmp push adc das add in arpl cli mov cltd sub mov jbe fimull sub xor mov aad fidivr ljmp inc mov push or xor sbb cmpsl out push xor (bad) aad cli jl idivl shr mov lds xchg ret outsl mov add xchg lds in loopne outsl pop aad fstp and int pop cmc sbb out sti int3 xchg mov pushl fidivrl mov inc pop mov arpl (bad) and jp stos mov outsl in jae sub xor pop inc pop aam lret shrb xchg and push push call xchg mov aad call testl test aam mov mov lahf loop roll aam dec (bad) out test push cmp cwtl ret outsb nop ret lret add repnz (bad) outsl adcb pusha or pusha sub jl adc mov das and dec out (bad) div mov cld (bad) jl dec or jns sbb iret imul sar xorb (bad) push push imul popl out jne adc sub cmp and insb data16 jnp in pushf sti stos nop pushf out imul or je mov and push mov add pop test mov cwtl (bad) dec addr16 and mov cli lock pop mov and sbb ss xchg (bad) and cmpl gs (bad) (bad) jg lds or mov popa int3 or das (bad) mov movsb cltd push dec push ljmp adc lahf jg push test dec out test inc aaa stos dec mov inc das int cli mov gs mov mov sahf aad subb inc (bad) push jns iret cmp int int xchg jg outsl ss addb cmp xlat sbb repz out or pop nop arpl mov scas sbb or mov testb lods out (bad) xchg iret sbb push sub fstps stos add add push in repnz push and out pop add push and inc mov cmp cmp xor sbb (bad) mov fwait xor cld mov mov pop mov loopne push cmp (bad) pop call cld jl addl pop pop jl ret mov xchg xchg (bad) jecxz je push rolb xchg sahf (bad) int3 sahf (bad) xchg movsl mov aam mov mov or mov mov push roll dec push icebp es adc call pop mov jecxz iret pusha mov ret (bad) call xor test and inc add xor test dec rcrl jle jb inc mov jl out xor cmp push and (bad) lock js fucomi je mov fdivrs or (bad) adc imul lds sbb cmpsb sbb xchg flds outsl add insb insb sbb outsl mov dec xchg gs (bad) bnd or shrl jg jge (bad) dec jo das mov test imul mov out loop cmp push stos push push imul imull jnp xchg cmpsb adc ja mov push inc rclb cmp (bad) cmp jmp push fildl xlat cmpsl insl insl mul mov stos adcl add emms cmp dec mov push xchg fcoml dec scas sahf dec sbb loope (bad) fistp cli jmp dec idivb sub mov ffree in pop es or adc pop movsb rolb cmp fildll jl mov shlb sbb data16 or std push imul cmpsl movsl pop outsb sarl mov (bad) shrb add mov cwtl fcomps and add push pop icebp imul inc dec jecxz js lods out in cmpl test sbbl xchg les adc mov pop fildll jns jb lret cmpsb and lock mov and ret fisubr add (bad) gs (bad) arpl test push call lea cmp dec xchg pop dec rorb enter dec test and lds inc int js test jecxz sbb pushf cmp jge or outsb and fsubrl xchg int3 popa jle xchg ds inc popf fmulp aad sbb jp push and lea (bad) jmp push jmp and xchg aaa adc pusha sub inc mov mov adc jo add and aad dec pop loopw pop mov add jnp out mov sbb jle cld add dec inc or jne cltd add andl mov loop out fild lods mov pop enter sbb rorb daa pop fnsave (bad) lahf or jns sub aad inc les cmp and dec push hlt ja jns cmpps xor push jge mov sub add clc inc fwait aaa ja cmp popf popf in idivl pop xchg and push pop mov push or repz or out lods ja lahf jle dec inc and jmp dec notl mov repnz xchg iret inc cmp xlat (bad) jbe pusha mov jne fcmovb test push and dec dec mov lret sub xchg jg add add adc or jecxz (bad) popa es sbb stc ds mov xchg or sbb and push dec clc call push push mov add notb push xchg lods ret pop out lret iret or insl mov ja cmp (bad) and xchg fcomi inc add (bad) adc cmpsb (bad) hlt popa dec (bad) pusha pop fmul gs xor mov jnp fwait cmc mov add dec push (bad) imul fsubrl cmpsl add ljmp mov mov std out xchg pop popf rep lds inc and std dec jecxz cmp inc lods jbe cmpl inc inc push fs (bad) scas fldcw mov inc mov (bad) lock repz ja leave mov inc lret push sbb pop xor push cwtl in je scas scas in xor test fisttpl sarl fstp add cmp fcomps or leave in loopne xchg stc mov in push sbb scas loop (bad) cmpsb sub add add mov das in jge sti sub lods inc loope and sti push adc loop (bad) and xor jo lret arpl test fwait push inc (bad) push testb in mov int3 adc mov jno pusha nop repz pop mov cmp sbb sub sbb sbb mov test jno lahf es push adc iretw xchg xor cmp cmpsb jo inc pop mov adc and sub fstpt in push add mov pushf or fcmovu jbe (bad) (bad) push push (bad) (bad) loopne enter lods mov fldenv add test add push loop jp repnz mov sti not test xchg jecxz dec cmp push pop int xor popf lret movsl fs xchg ja dec pop pop sbb loop enter add or lret out js adc icebp mov mov inc stc push jno nop out adc fisubl test mov lcall xchg imul mov mov test add sbb das stos loope das add jae insb shll cs insl sbb mov dec aad lahf cli mov cli push or lret pushf xor jae jo or cmpsl andl mov add push addr16 sbb mov dec out in mov cmpsl imul push mov add scas xchg lods jno and add sbb out gs cmpsl push cmp (bad) xchg (bad) push bound sub lcall adc push xor adc cltd mov pusha loope data16 pushf cmp push aam call mov inc and and fistp fs mov or add int sbb mov lret fnstenv sub cltd nop mov rorb sub pop dec push fsubs daa shrb fsubrs cli lahf mov mov movsl cwtl nop jecxz seto dec mov in jecxz and mov sub (bad) mov in and sbb sahf dec pop sbb xchg repnz xchg fildl cmp jle xchg enter jnp pop mov push jle dec test or divb mov xchg sub pop pop push out out out out iret out inc or das cs (bad) movntps sub or subl jns imul mov lcall xor and ds movsl mov stos jle jb jb fs pop pop xor aas and hlt call cmp sub cmp cmp push in lock lock lock add and dec pop dec jb test xchg xor cmovbe and adc xchg loopne rcr ret leave shr jae aaa sbb outsb mov ret fcmovne leave leave leave daa and xor push or or jno js pop jle and sub cmp mov mov sar stc fbstp push addr16 adc inc pop cmp cmp arpl pop cmp pop je fmul ret int pushf fcmovnbe (bad) mov push cmp int3 cwtl icebp (bad) fistl push inc push pop scas mov xchg mov mov adc or enter scas fsincos loope mov cld jmp addl addl cmp inc pop pop pop adc push js outsl je je rcr int in es arpl wbinvd bound dec pop inc add pop xor mov loope (bad) repz pop pop adc adc jl in mov pop adc jg jl push jp lods mov call inc dec pop pop pop inc push xor sbb push xchg mov test xchg mov inc dec arpl sub xor cmp mov mov adc push xor jnp jns push (bad) xlat clc fcmovb (bad) in lret (bad) mov sbb sbb inc ror les popf mov jb cmp xor and dec dec sbb insl cmp loope,pn cwtl lahf pushf pushf ret mov (bad) gs push inc inc pop pop pop pop sbb push xor cmp cmpsb movsl movsl cli in loopne mov mov add lret xlat (bad) lcall cmp lret fdecstp icebp repnz int add das sub sub fldz std leave out neg cld hlt std mov xor addb addl xor pop adc push push dec push push jp and fldt and jg les inc pop pop or loop mov mov push stc cmc (bad) sbb push dec push and stos rcl int3 lahf cwtl push pop push push pop pop pop jbe xor pusha xor cli leave into clc movsl mov push push or adc sbb sbb push test mov sbb sbb adc sbb out mov mov pop add push sbb aaa xor cmp sub fcmovu fstpl xchg sub in jecxz clc enter lea jb fs insl and sub or and jo add in stc cld div loope nop xchg rcrl add add cmp or or inc inc inc jl push pop adc push jne (bad) (bad) leave ror aam nop lcall js cmp (bad) fxch aad into and aaa aaa fcmovnu (bad) mov mov stc lret inc inc inc inc inc pop std ljmp test sti in out in out stc stos repnz iret int sahf adc cmp cmp push inc sbb push sub ja addb pop sbb adc and or or or or push (bad) stc call stc out out repz hlt (bad) adc adc push sbb ror lea pop push inc xor data16 jo mov mov dec inc push data16 push push push push push loopne scas mov sbb add push adc sbb or into leave jecxz jecxz dec pop add adc add push push jns xchg (bad) pushf mov lret ret lret pop sub je data16 jecxz clc mov test pop push dec dec inc push push inc dec dec inc push inc inc jns mov push add in repnz add add sbb cmp dec add popa add ja add mov add (bad) fiaddl jecxz jmp stc add or pop push and add add push add add js add add xchg sahf add test add aad jecxz icebp add add or pop add add sub add aas add dec push push pop add push jg mov add test add iret add add add hlt sti add add add adc push and add push add pop add add push add add lcall add add in in hlt sti add adc add daa cs add inc add add add outsb jne add xchg add mov add add rolb add rcr add call add sbb add dec push pop add outsb add add xchg mov ret lret add loope add add add or pop push and add push pop popa add add jp add add mov add int3 rcr loope add add cli add movhps cmp add pop imul jp mov add (bad) int add add out hlt add add add push push add and add inc add dec add pop add add add add add movsb add scas add add jecxz icebp clc incl add push adc add add xor cmp add add push pop imul jne add add add add add scas add add (bad) fucom add hlt sti add add adc and add aaa ds dec push add pop add add jbe add add stos mov rol add fadds loopne jmp or sbb sub ss pop popa add add jp add add mov add int fnclex call sti add adc push add sub add add imul push add add imul add test popf movsb stos add rcr add call add add sbb add add add xor add push push pop gs add jbe add xchg cltd mov rol aad add add repz add add adc sbb daa add add xor inc dec add push add pop arpl add outsb add add add add rol rcl fsubp add out cmc add add sbb sub add xor dec push pop add insw je (bad) mov add movb rolb fcomp out hlt sti add adc sbb es add add add insw je (bad) mov xchg cwtl lahf cmpsb lods mov mov aad jecxz add stc add push add sbb and sub add cmp add push push pop add outsb jne add cmpsl add ret add add add fild call add or sub xor inc add add add push pop pop add add add sahf add add add leave rcl fsubp in add add add push or add es add pusha add add jp mov nop xchg sahf movsl lods add ror add rcr add in add add add add or pop add es aas inc add add add outsb add add xchg nop add mov mov add aad add loop lock add pop push adc add sub xor inc add add popa push add jge add add add mov int fnclex add jmp stc add or pop push and add aas add add push add pop add insl je add test mov mov add into aad add jmp repz add add or sbb add add xor dec push pop bound jb add jge mov movsb stos mov rol add (bad) fldl in add add incb and add add add aas inc add add add popa add add or sbb add das add inc dec push pop bound imul addl lcall mov add loopne add add add add add add movhps das ss add add bound jno jns (bad) mov mov scas mov mov (bad) add add loop add add cld add add adc and sub cmp inc inc add add add add add add add mov stos mov add mov into add add add add jmp add add add sbb sub add add aas add dec push push pop gs jae jnp add xchg add rcl add out add add incl add add pop push and inc add dec add arpl insb jae add add add cmpsb lods mov mov loopne call add push add sbb and add xor add dec add add add add jnp add add add scas mov add add add (bad) add loopne add add add pop push add add and add add add add add pusha add push jae orl cmc add add add add and sub xor add add dec push add pop add arpl add jne jle add add add ror add rcr add add in add add add or add sub dec push pop add outsb jne orl add mov iret xlat fsubp add in add std add sbb add add cmp dec push add add jl mov movsb stos add lret rcr loopne add add add add or add add add add add add push add imul xchg add lret add aad add add add jmp add add or adc add sbb add ds dec add push pop arpl insb add test add add add add mov add add add add add add or adc sbb and add sub xor cmp add add je add fwait mov add roll fildl add add cmc add add add add xor inc dec push pop add insl je add xchg add lods add add add in in repz add ltr add and add cmp inc dec dec add pop add bound push jae jnp mov xchg add cmpsl scas add add add roll fsub ljmp push sbb add add inc add add pusha outsb jne add mov add roll rcl fiadd add out testb add add adc pop add add add dec add add push add add push add jbe add addl add add into aad add in repz std add or and xor add add add pop add add ja add add xlat add out out add clc add or push add add add cmp inc add push pop pop data16 add js xchg cmpsb lods mov ret roll add loop ljmp add add and add add push add push addb mov add add add add add lret add add add out add cld add add pop add das add inc add add popa push test add (bad) int fnclex add add add add adc push add sub push add add add addl cmpsb lods mov mov iret (bad) add add call cli add add adc add sub add aas inc dec push pop add jae add add lret fild out cmc add incl or add sbb and sub aaa add add push pop add add add add test nop xchg sahf movsl add scas add mov lret add fildl jecxz in add add add add add pop push and cmp add add add add add add add add mov mov add (bad) add in add testl adc push and inc dec add pop add add add orl test (bad) int add jecxz icebp clc incl add push sbb das add add dec push jae (bad) add mov add iret (bad) fucom jmp add add add pop push adc sub push push add insl add add xchg sahf movsl lods mov add add int aad add add hlt add incb add add adc and sub add inc dec push pop bound push add add mov mov mov add (bad) add add add add incl add or sbb add add xor cmp add add bound jno jp (bad) mov mov mov add xlat add add in add add pop push adc sub add popa add add add jo js addl add mov mov into add add loopne add jmp add idiv add or and add add dec add push pop pusha outsb jne add addl lahf cmpsb add mov mov add ljmp add add and xor add add pop pop add jo add addl xchg pushf mov add leave rcl fsubp add cmc add add or add sbb add aaa add dec add add add add jnp add add scas add iret (bad) fucom jmp add add or sbb and add xor add add inc dec push pop add add jnp add xchg lahf cmpsb lods mov add add add out cmc add add add add or add and sub add cmp add add add pop data16 ja jg add mov scas add add int add add jmp hlt sti add add add add es inc dec push pop add jo js add xchg add sahf add les int3 roll fsub add add sti add or add add push and dec add imul mov add add rolb flds loope jmp add clc add add add add adc and add xor cmp add popa push test mov add mov add xlat fiadd out add add add add adc add add sub aaa add inc dec push add popa add push js add add add add add movsl add add enter add add ljmp add add adc xor add ds add add add push xchg add mov add enter add lock add sbb and add xor cmp add pop add add jbe jg lea lods mov add lret (bad) call add or add push add cs add push add bound add addl add cmpsl add mov add fcomp out hlt add add or sbb and add add add dec push pop bound add add mov add lods mov ret add rcr add add add hlt sti add add add adc push and add cmp inc add add add pop add arpl jl add add lods add roll add in add cmc cld add or add sub add add add inc dec add add add jae addl add mov mov (bad) add in add add add add movhps add add xor ds add add imul add add mov add add add add repz add add add add pop push add add xor add add add push pop bound ja add movsb add add int add fsubp in add cmc add add add sub cmp inc dec add imul add mov add xchg popf movsb stos mov add mov fnclex jmp pop push adc xor add add add imul xchg popl add lcall mov int add fsubp in add sti add or sbb daa add cmp push pop add insw je add scas add into add add loopne add add incl add add adc and add add das add inc dec add add pop pusha outsb add js add xchg add add add add add add hlt sti add add sbb add add inc dec add add add jo js xchg (bad) xchg add add roll add add add in cmc cld add adc sbb daa add add add add add push add sahf movsl lods mov mov (bad) add idiv add pop add daa cs push add add imul add add xchg nop add lcall lds int fnclex jmp add ltr pop add sub aaa cmp popa push test add add mov add faddl add add add repz add sldt add sbb sub add xor add add dec push add add sbb and add add dec push add pusha outsb add ja add mov add add add add mov add (bad) into add fadds add jmp cmc cld add adc pop add add add cmp dec push pop add add add addb mov add add iret add out clc incl add push sbb inc dec dec add pop add bound imul jne orl add add mov add add loop lock add and xor aas add add add add jno jg lea add add fildl add add add add cli add add add sbb add add add xor aas inc dec add add pop pusha add add add add xchg cmpsb add add add add (bad) call add add adc add and cmp add add push add add imul add mov mov add add add ljmp adc push add sub ss push pop bound add jne add addb cmpsb add rcr add loop add add add incb add add add add add dec push add add outsl jbe test test mov add add rcl add out add idiv add add adc push and inc add dec push add add pusha add add add addl lea xchg add add mov lds add add fchs add add clc add add add add and aas inc dec add add pop add arpl js addb add scas mov add add add add aad add add add add repz std add add add adc and cs add add pop add jne orl add lods mov roll lret loopne out add add add add add sbb and add cmp dec push pop add data16 jo js add mov add add add add flds add in repz add movhps pop es dec add push pop add add je (bad) add mov rcr add add add add clc incl add or add sbb add add cmp dec push pop add insl jne addl xchg add add int (bad) fldl in out add clc add add or add add and xor add dec add add add add push add jbe add add add mov roll add add add add add lock incb sbb add cmp push add insw add add addl add add xlat fiadd out cmc add add add movhps xor add add add lea xchg sahf add test mov (bad) lret rolb fildl add out hlt cld add add push adc add inc add add imul popl xchg add add movsb stos add add add roll flds add add in hlt sti add adc add and das add add add push add add jo jns orl add add enter fild add out testb add add add add add add sub xor add add add inc add push pop pop insw add jle xchg add add xchg pushf mov add enter add out out cmc add add sub add aas inc dec push pop add outsb jne jge add mov mov ror (bad) add in add idiv add or sub cmp add add add add add insl je orl add adc sbb and add xor add add add push add add cmpsl scas add rcr add jmp pop push adc add add cmp inc add add pop add arpl jae addl add add add (bad) call push or and xor add dec push pop pop add imul add add lret rolb add jecxz jmp hlt add add adc sbb add add add ss add pop pusha add jns mov (bad) xchg popf add mov add jecxz add stc add or pop add add add ds add pop add insb add add test add lods add add add fcomp out hlt sti add add adc add sub xor add add add add ja add cwtl add add xlat fiadd out cmc cld add add or add sbb daa add xor cmp inc dec add push add pop arpl insb jae orl add mov mov fiadd out hlt sti add add add cmp add add add imul addl mov mov aad fiadd out out cmc cld add or add and add sub inc add push pop add insl je (bad) mov add add mov iret (bad) fldl in repz add add add and sub cmp inc dec dec add pop add add jns add mov mov add add lret rcr loopne out add clc incl or and add add add add push add (bad) add mov xchg fwait add (bad) int fnclex add repnz add add add or sub add add ds dec add push add pusha add jno add cwtl add add add loope out add clc incl or add push add add add xor add inc add add push pop add add mov add lret aam add ljmp adc sbb and sub add add inc dec push push pop add outsl add test stos mov add movl out out testb add or xor cmp add dec push pop add gs jae add test add rcl add add out add incb push or and add add add add pop add push jp add cmpsl scas add add add (bad) add lock or sbb add add sub add cmp add add add jg mov lods mov add (bad) lret add fiaddl loop add add add incb add sbb and xor cmp dec push push pop add outsb add jg mov cmpsb add (bad) int fildl out add add add or adc and cs push pop pusha outsb add add add mov add add into aad jecxz jmp stc add add add sbb daa add aaa ds dec add arpl jae add add lea add add add add fiaddl jecxz add stc add add adc pop add sub xor cmp dec add pop pop data16 jo add lea add add iret add add out add add add add add sbb daa cs add pop arpl js mov add add add fsubp in repz add or pop add es add popa push add lea add scas mov (bad) lret rolb fiaddl add add out add add add add add adc sbb sub cmp inc dec add imul addl lcall add add rcl fsubp in add cld add add or add sub add inc inc dec push add add add add mov add add mov add add add in in repz add or adc sub add add add push pop arpl imul orl mov add add add loop ljmp add or sub cmp inc dec push pop add add jge mov mov mov aad add out hlt sti add add adc add and xor cmp inc dec push add add jne add xchg add (bad) lret add add add loopne add add add add or adc sbb sub aaa ds dec add imul add mov lret add add in repnz add or push add and add add ds add add pop add add add xchg cwtl lahf cmpsb lods mov add mov fldl add add lock push add add cs add push pop pop data16 add addl mov add leave rcl add out out testb incl add add adc add add cmp add push pop arpl js xchg popl xchg add mov (bad) call add add adc push and cmp push add ja test lea add mov aam fsub ljmp adc sbb and das add cmp inc add add popa push add stos mov mov add loopne add idiv add add adc add inc dec push add add imul jl mov xchg cltd add add add mov loopne add icebp add add or add pop add add cmp push add add jne add xchg cmpsb add add aad jecxz add add std add or pop add add and sub add dec add push pop add jo jle add add add (bad) into aad fucom jmp add cld add adc add daa add add add inc dec add push add add jnp test test add leave add fchs out out testb add sbb add add inc add push pop imul (bad) add cmpsl add add (bad) fldl in hlt add add add and sub cmp inc add add pop popa push jg mov lods mov ret rcr add loopne out cmc add add or and add xor dec push add imul add xchg add lahf cmpsb add add jbe test add mov add add lret add loop add repnz cld add or add add add add aaa add add push pop add jae add test mov mov add rolb lret add add in add sti add or sbb add sub cmp inc add pop add gs jae addl lahf cmpsb add movl loopne out cmc add add and sub xor inc dec push push pop add je jge test stos mov rol iret add add loope add repnz add add add add sbb sub add inc inc add pop add jne add test movsl add add aam loop ljmp add add adc sub inc dec push pop add add add add test add add add add lret (bad) ljmp add adc add add add add ss push add pop popa add jb addb stos mov rol add add loopne add idiv add add sub xor push add add imul jp add mov xchg add add add add enter in add lock add add adc add and sub add add add add add push add outsb jne add test movb aad fiadd add jmp cmc add add or add sub xor add aas inc dec push add add jp test test add add fucom jmp add cld add adc add and add sub add dec push pop add jno jg add nop xchg add add add add add in add add std add pop push add add es push add insw je add popf movsb stos add add add add ljmp sldt sbb and das add cmp inc add add add add add jge mov movsl add add add add fiadd out out testb add add add ss add add addb add add add mov add add fsub add add sti add add add add and add cmp inc dec add imul jne orl scas mov add movb add fcomp out add icebp clc incl or xor add inc add push add outsb jne addl xchg add mov add flds add in repnz add push adc xor inc add add add outsl add xchg add (bad) int fildl add add jmp add lldt add and das add add add pusha add jno jns add mov add lods add int add add add jmp push or add cmp inc dec push push add add arpl add outsl jbe add add mov xchg cwtl add mov add flds add add out add repnz add or pop add add sub inc dec push pop pusha add ja test add add rol aad jecxz icebp clc incl add adc sbb and sub aaa ds cmp push push pop data16 jl add add add rcr fild call or adc add add addl xchg add rol iret add add loope add std add add add sbb add ss add jo jns orl add test add aad add add add icebp add add push adc xor add dec push pop pop add add add outsb add test add add add add add add faddl in add out add add add add sbb add xor dec push add pop arpl imul xchg add mov add leave rcl fsubp in repz add add adc add add add cmp dec push pop arpl js add scas add add rcr (bad) in add cld add adc pop es inc dec push pop pusha add jle mov add scas mov ret lret flds add add in add add incl add add sbb add sub aaa ds dec add imul add add (bad) int fnclex jmp push add adc push es dec push pop pop add add jg add add add add add mov mov add (bad) add add add sti add add adc add xor add inc dec push add pop gs add jbe add mov add add add int fnclex jmp sti add or sbb and add xor cmp add push add push mov scas add iret add add loope out testb add sub ss add dec push pop arpl add xchg add (bad) fiaddl loop add add testb add or add add and add xor inc inc dec push add imul add add mov mov add add add pop add and add aaa add add pop add add imul jl mov scas add add add fchs out cmc cld add or sbb and add xor cmp pop data16 add orl add add mov (bad) lret add fnclex add icebp clc incl pop add adc add add xor inc dec add pop add bound add addl add xchg sahf add add add iret (bad) fldl add add ljmp add or add aas add dec dec add add jns add add cwtl lahf cmpsb lods add mov lds int fildl jecxz add cli add add add add add and add push pop popa push add add add lea scas mov mov aad add loope jmp add movhps add aaa ds dec add add gs jae addl mov mov mov fucom add add testb push add add sbb add add inc dec add pop add jbe add popf movsb add add add add add loopne out repnz add or adc add sbb add add xor add push add insl add add xchg add add movb add rcr add ljmp add pop add adc sbb daa add cmp inc add push add insl je add add add add add mov add add add add add in add add add add or add and add xor aas add add add pop gs jae addl add add (bad) into aad jecxz lock add add add sbb and sub cmp inc dec push add insb add addl xchg add popf add add test (bad) int add in repnz add or add and sub add cmp dec add add add imul jnp add add mov mov int3 aam add ljmp or add add add cmp inc add dec add add pop pusha add add addb add lea add mov add add add out idiv add add add push add add add add sub push add sub add add push pop popa push addb mov xchg lcall (bad) int add add incl push add add add push add cs add inc dec push pop add add outsl jbe add addl add add mov xlat fiadd out idiv add pop push add push add cs add add jo jg add lods mov add add int add add add lock add movhps sbb cmp push add add imul add lea mov fiadd out add clc incl or sub cmp add add arpl add mov add mov fnclex ljmp add adc add push add add sub xor cmp add add outsl jbe jg lea xchg add add mov mov xlat add loope out add add add or add sbb sub aaa cmp add pop data16 add addb (bad) xchg add add mov add in repnz add add add push adc daa add xor add add add add pop add je add xchg movsl lods add mov mov add add out lock add or add add dec add imul jne addl add add test add mov add lret add add fild add out idiv add add add and add cmp dec add pop pusha data16 jle mov add lods add add lds int (bad) fucom add repz add adc sbb daa add add add cmp dec add add add add mov add xchg add mov ret xlat add add add repnz add add or sbb and xor cmp inc add add popa push test add test int3 roll add add add jmp push or sub add add add add add jb jp add mov add add add add xlat add add ljmp or add pop add xor add add dec push pop add add jb add mov add add mov add xlat add loope out add incb push and add add add add push add add add add add add add scas mov add (bad) into add fucom add out cmc cld add add add pop add and das ss add add addl lods mov ret rcr loope ljmp push push adc add add dec push add push add add xchg scas jmp cmc std add add sbb add inc add dec add add add add add add add mov add fucom jmp add add stc add add adc add add add xor cmp add add push pop add add jge add add pushf mov mov fcomp add incl or add sbb and add cmp inc dec add push add pop arpl add outsb add add add add mov add (bad) add add add call add push adc add sub cmp add push push pop gs jae addl add outsb add add lahf add mov xlat fiadd add add add hlt sti add adc pop add xor add add add add in repnz add or adc sbb and add sub inc dec push add imul mov add add add mov add add aad add in add sti add add or add add add sub add inc dec push pop popa push test movsl lods add add fiaddl loop jmp repz add add add and cs push pop add add jae jl mov scas add add rcr loopne add add add sti add adc sbb add ss push pop add jae add test mov mov mov fildl add add add idiv add add pop push add add xor add add add outsb add add jnp mov add mov roll jecxz in add add add add adc push add sub add aas inc add pop add add add add jbe add add mov xchg lcall mov add add add add fcomp add jmp sti add adc push add sub xor add add add outsl jbe add add movsl lods mov add leave rcl fsubp in repz add add add adc daa cs push add add pop data16 add add (bad) add mov lds int fnclex jmp add lldt push add sub ss push pop bound je mov add stos mov mov add aad fucom jmp add add stc add or pop add add and xor add inc add dec add add add add jle xchg add xchg add mov iret add fchs add out idiv sldt sbb add and sub add inc dec add add pop bound push js add lea add ror add add add out add add add movhps add and add cmp inc dec push add jno jg lea add rol aad jecxz in add add clc add add or and sub add add ds dec push pop popa push test movsl lods add int3 roll faddl add in repz add or pop add and add add xor inc dec add push add add add add xchg cwtl lahf add add lods mov add add add add roll (bad) add ljmp adc add add add xor aas add dec push push add popa push jg add add lea add add cmpsb add add add add add xlat fsubp in repz add or add adc and xor aas dec push pop pop add jne add add add add in out cmc cld add add sbb sub ss add data16 add xchg add add add add add add add fchs out cmc std add add sbb sub add add dec dec add add push add mov lods mov add (bad) lret add add xlat fiadd add jmp add or adc add add and add add dec push pop add add add add jl add mov xchg add add fnclex add in repz add add add adc and add add xor add add add add dec add add into add fucom jmp add cld add or das add add add pop add bound add add mov add (bad) into aad fldl out add testb add add add sub cmp inc add push push add pusha add ja test lea add add add add add in hlt add add add movhps add add sub add add inc dec add add pop add add js addb stos mov add fnclex cli add add insb jae addb add lea lods add add add add add jmp add add or sbb add sub inc dec add push pop arpl add add jno add add add add add add add mov fucom add add add add pop push adc sub dec push pop pop add imul add add mov shr add stc add push adc add das add add inc dec dec push pop add add add jnp add xchg mov xchg sahf add add int3 rcr add ljmp add sbb add xor add inc dec add add imul add xchg sahf add add stos mov add mov add xlat add add add in repz add sldt add sbb sub add xor inc add add pusha add jno jg add add xchg add add rcr add loop lock add add add or add add add add daa add xor add inc dec push pop arpl add add test add leave rolb add fnclex add in add sti add or sbb and das add ds dec push pop add push add jle add add test mov mov add add rcl fsubp in add add add adc add add add add xor add add inc dec push pop add arpl add add add mov add mov loopne add hlt sti add add add add add inc dec add add pop gs jae add test scas mov mov add fucom add out add std add adc and add ds dec add add add add xchg add aam loop add repz add ltr pop es add dec push pop arpl js addl lcall add add fsub add repnz add or pop push and add add dec add add (bad) mov scas add mov fsub add repnz add add pop add es add inc dec push push pop add add imul add test add popl add fwait add add add add add add out cmc add incl or add sub dec push pop add add insl je add popf add add (bad) int aad jecxz add add add adc push es inc dec add arpl add add mov scas mov (bad) lret rcr loopne add icebp clc incl or add cmp add dec add gs jae addl add test mov mov xlat fsubp in repz add add pop push and add add dec push add pusha outsb jne add add add enter in repnz add movhps push add xor add dec push pop pop insw add add jp mov add xchg add add add lret add add add add cmc cld add add and add inc dec add pop data16 add add mov xchg add fwait add add add xor push pop add outsl add addb stos mov rol iret (bad) fucom add out cmc cld add adc sbb daa add xor add add add jae orl stos add fiadd out add add stc add add sbb and inc dec push push pop add je (bad) mov xchg add fwait mov add add loope out idiv add sbb add add xor dec pop add add mov add add mov (bad) into aad fiadd out add idiv add or and inc add add dec add gs add jne addl lea add add loopne add jmp add add or add add sbb add cmp pusha add jno jns orl ror rcr (bad) add out idiv add adc sbb sub add cmp dec push add add jbe orl add mov fild call xor add add push add add jb addb movsl add lret add (bad) add icebp clc add or add add es dec push pop add imul mov add mov add leave add add add fsubp in repz add add adc and add add add dec dec add add add jle add mov mov rolb fcomp out out idiv add add add pop add and add add inc add dec add pop pop add jbe test add add leave rcl fsubp add hlt sti add add sbb sub xor aas inc dec push add pop add outsl jbe add add enter flds loope ljmp movhps pop add aas add dec push push add add jno jg add add lea add add add add add add add add icebp add add add add add sub aas inc dec add push pop add outsl jbe jle add add test mov mov rcr add out add add add or add add and sub cmp add push push add popa add jb jp mov mov mov fsub ljmp or adc add sub add cmp add dec add arpl jb jnp add add lcall mov mov ljmp movhps add add inc add dec push pop pop add push addb nop xchg add mov mov aad fiadd out add idiv add add add sbb add add add add add add add push add add outsb add addb add add stos mov add mov aad add add hlt add add adc add sbb add sub add cmp add dec push add insb add jle xchg lahf add lds int add fiadd out out add incb sbb es add pop pusha mov mov mov fiadd add add repnz add add adc add add add add ss dec add pop pusha add jno jg lea add add (bad) add lock cli add sldt sbb and sub add aas inc add push add pop add jo add (bad) add mov add into add add fiaddl loop add out add add add add add sbb and sub aaa add add add dec push pop arpl add jnp orl scas add add xlat add add jmp add add add add and aaa ds dec add pop add outsl jbe jle mov stos mov add add loope out idiv add or pop es inc dec add imul add add add add add iret (bad) add add call add add adc push and inc dec add pusha add add add lcall mov rcr fild add add repz add add adc sbb and add xor add dec push pop pop add add add jl add xchg add xchg add pushf lods add iret (bad) add add add jmp repz add lldt push add addl xchg cltd mov lods add add lret add loop add add idiv add and sub add add add add add gs jae jnp mov cmpsl scas mov mov loope add add add std add add add push and inc dec push add pop bound insb add add add mov into aad add out out add incb insl add xchg add scas mov mov fsub jmp cld add add sbb add add add add aas inc add push pop pop add add jg add add lea add ror (bad) add loopne add add add idiv add or and add cmp inc dec push pop pop add jbe jle mov xchg pushf mov add add add aam faddl in add testb add add add pop es add dec add pop add jo jle xchg movsl lods mov roll rcr ljmp add pop pop insw add add xchg mov add ror rolb flds loope out idiv add add add add cmp dec push add pop popa add add orl ret rolb add loop lock add push adc sub add pop popa push add test add add scas mov add add add (bad) fldl in hlt sti add add adc add add add add xor add add pop bound add outsb add jp mov mov mov add jmp stc add add add or adc pop add add sub cmp add add add data16 add add mov add xchg pushf mov rolb rolb xlat fiadd add out idiv add and xor add add add push pop add add je (bad) mov add movl jmp cli add or adc sbb sub add add dec dec add add imul xchg sahf movsl lods mov add add int fnclex jmp pop push add and add cmp add pop add imul xchg add scas mov add add add rcr loope jmp testb add add add add add pop add das add add dec add add bound push js add mov test mov mov (bad) fldl add call add or add add sbb and xor cmp add push add add jl add add mov add add in repz add or adc and sub add add add jae add add add add add add (bad) fldl add call add add or sbb daa cs add add add add mov add (bad) add jmp add cld add add sbb add add add cmp add add add fs add add addb add add add stos add lret add add add add cld add add adc and add xor cmp inc dec add pusha add add add add add add add iret add fiadd out add add incl or and aaa add dec dec pop add jo jle mov add test add leave rcl add out hlt sti add add add add add xor inc add push add add pusha add add add orl test mov (bad) lret add fnclex jmp add or add pop add sub aaa add dec add pop pusha add jbe add xchg cltd mov mov mov rolb add add loopne out cmc add add add or adc add sbb add xor add add pop pusha add add add jle mov mov mov (bad) fucom add cld add add add add add add add add pop add arpl jae jnp mov add ret rcr loopne add add add add adc and add xor inc dec push add pop add add ja add add add lods mov ret int3 roll fildl in in add cld add or adc add add daa add add cmp add add pop bound ja test test add leave rolb fcomp add jmp add add add and sub aaa add inc add dec add pusha add push jae jnp add add add rcr add in repnz add add add adc add xor dec add add add push js xchg mov mov mov add add add add lock add in add testl adc sbb es add add add add imul orl add loopne add add add cld add add add sbb dec push pop popa add add add (bad) add test add lret add loope add repnz add add adc pop es dec push pop pop data16 add add movsl lods mov add iret add fsubp add add add add add add adc and sub add inc add add add pop imul add add mov add add add jmp add testl adc push and add add push add add lahf add add add loope add add add add or add sbb add and xor cmp dec add imul jne add test rolb add rcr loope add repnz add push adc add cmp dec add pop bound push add movsb stos mov add leave add rcr add add in repz add push adc xor inc add add popa push xchg movsb add lret fild add add in hlt sti add add adc add add es add push add jnp test mov add mov add leave add add loop add in add testl sbb and xor aas inc dec add arpl add add add (bad) mov popf movsb stos mov add add add add out out add add add add and xor cmp dec add push pop add add test add add add aam loop lock add sbb xor push pop pusha add add add movsb stos add mov add add into aad jecxz repnz add and add das add inc add dec add add add jns add add add add lret aam loop ljmp adc xor add add add add popa push add rcr loope jmp cld add add sbb and add add xor add push pop add popa push mov xchg add add add mov fsub add repnz add add or sbb daa add aaa cmp add add pop bound add outsb jne add add add popf scas mov (bad) lret rolb add jecxz icebp add add or add adc sbb add sub inc add push add pop add imul add add movsb stos mov add add rolb leave add add add in in repz std add add add adc and add add add add add push pop arpl js add mov add lret rcr add add add add add incb pop add push sbb xor push pop pusha add jno add mov xchg cltd add add enter add loope out idiv add add add add and add orl add add rolb fcomp out hlt sti add adc sbb add add aaa add dec add push add add je add mov mov add fadds jmp add add push add add add add add add inc dec push pop arpl add jnp add cmpsb add add add add fild call add or adc sbb add add add xor cmp inc dec add push pop add jnp orl add add lds into aam add jmp repz add add sbb add add add cs add add add jne add addb nop add lcall add add add (bad) in add add incl or sub cmp inc add dec add pusha outsb jne lea add (bad) int add add add jecxz icebp clc add or add push and inc dec add add add jb jp add mov add add add add xlat add add jmp add add add add add sub add add add push pop bound imul je add add add add mov add fldl add in hlt add add add sbb sub add add add add dec add add push add imul jnp orl popf add cmpsl add add (bad) aam loop add repz add add add sub aaa ds add dec push add pop insw je add xchg scas add add fadds loope jmp or add add and cmp add add add jo add popf movsb stos mov add enter add out add add add add adc sbb and sub cmp inc add add add add add outsl add add jnp mov xchg add add lret add (bad) add add repz pop add push add add add add xor add pop add imul (bad) mov xchg cwtl lahf cmpsl add add add mov movb add add faddl in add cmc add incl add add add and sub xor cmp add inc dec push add imul add add sahf movsl add add into add xlat fsubp in repz std add adc sbb sub xor add add inc add push add insl je jge test add add add (bad) fucom jmp repz add or pop push and aaa add add push pop gs jae add test mov xchg popf movsb add rol add add fiaddl add add hlt add incb and sub add inc dec add add push add add lea xchg popf add add scas add add add fchs out add clc incl pop add add sbb daa add add add aaa add add add add arpl add add add add mov add add fnclex add add hlt add add push add add push add sub add add pop gs add jne orl test add add fsubp in add add add or add add xor cmp add add push pop arpl insb jae jnp mov add mov add xlat fsubp in add decl add add add add sub xor inc dec add pusha add jo add add add add mov add xlat fiadd out add std add add adc add sub xor inc add dec push add pop bound imul jp mov nop add add mov ror (bad) add add add idiv add or sub cmp dec dec push add outsb add test scas add enter fchs out out testb push add add sbb and add cmp add imul (bad) add mov pushf movsb add int3 add add add out out add clc incl or adc push and inc dec add add add add jne add add add add mov add add add add add add add push adc xor add inc dec add add add add add add nop add add add fcomp add jmp add or pop add and add cmp inc add push pop add data16 ja add add lods add int fildl jecxz in repz add adc add es pop add insl je (bad) mov add stos mov add add lret add aad fiadd add out cmc cld add and xor aas add add add add js addb scas mov add int3 roll add add add out testl popl add lcall add mov fildl add add out cmc cld add push add adc add sbb add xor cmp inc add add push add outsb jne add xchg movsl add add add add add add repnz add add or add add add inc inc add pop add add add orb lods mov add add add fildl add out out cmc cld add add adc add es dec push pop popa push xchg mov mov faddl in add lock add add adc add add add sub dec push pop add outsl jbe test lea mov add aad in repnz add or pop add and sub add cmp inc add pop add add add add add aam loop lock or add add add add add cmp inc dec add pop add add insb add test mov mov rolb add add add add add out add add add or add add sbb add add xor cmp add add insl je (bad) mov mov mov add (bad) call add adc add and add push pop gs jae orl add scas mov ret lret flds add add in add add incl add sbb sub ss pop popa push add mov add add into aad jecxz add cli add add adc add and add add cmp add pop add add add imul xchg lcall add add mov xlat fiadd out out add add add add add sbb sub add cmp add add pop popa push add add jp add xchg sahf add mov mov rcr add jmp add or pop add and sub aaa add inc dec push add data16 jo jle add add add add add stos add ret add int add add add out add add add add add sbb add xor add add add add add jae jl mov add movsl lods mov roll lret add fiaddl jecxz icebp add add add add adc daa cs dec push add imul add add add xchg cwtl lahf cmpsb lods add rcr loope add add cli add or add sbb sub add aas add rolb fiaddl add out out add incb and add xor add push pop add add add jb add add xchg (bad) xchg sahf add (bad) lret add aad add add add incb add add add ds dec add pop add add add xchg add lret add add in repnz add add pop push add add das add add push pop imul add add lahf cmpsb lods add mov mov fcomp add out cmc add add add cmp inc inc add add popa push add add int3 roll add in in add cld add add add pop pop add add add dec add add pop pop insw add ja add xchg add add rolb fchs out add clc incl add adc add daa cs add add dec add push add add gs jae jl add add mov add int fsub ljmp push add add add aaa add add push push pop add add add mov lods mov int3 rcr add ljmp add adc and add cmp add add add add add add jns addl mov add int fnclex jmp add add sbb add sub cmp inc add push pop add jl add sahf movsl add add add rcr fild add add in cmc add add add and add cmp add add dec push add add add add mov xchg add add rcr add call add add add or add add add add sub add add add jne test add add fchs add add repz add or sbb add add xor aas inc add add add jo jle add mov rol add fadds add add add hlt sti add adc add add add add add dec add add pop pop insw jne orl scas mov mov add fild add lock push add adc push and inc add dec push add add popa add add add test lea add movl fninit add add add add add or add xor add add jae add test mov mov add add into add add add fldl out add testl add add and xor aas add add push pop popa imul mov scas mov add add rcl fsubp add add testl sbb cmp push push pop gs add jbe add xchg lcall add add add add add add add add std add adc and add cmp inc dec push add add add add xchg add cld add adc sbb sub add cmp add add add add add push add add add mov add add (bad) add out add icebp add add add add sbb add scas mov add add in repz add add add xor add xor inc add push pop pop add add xchg add rol add loopne call cmc cld add add add add and sub xor inc inc dec push pop add jne orl stos add rcr add add icebp stc add push add push and add dec push pop add outsb jne jle add add add add mov add (bad) repz add add and sub add inc add push pop add add add jbe test add rcr loopne call add or add add add add xor add add inc dec add bound js xchg cmpsb add into aad add in repz add add adc and sub cmp dec add pop pusha add push js addl mov rol add fadds loope jmp or adc add add add sub aas add push pop add imul mov mov add loopne add idiv add push adc add ds add pop arpl jae add jle mov add mov mov add add loop add stc add add add add add sub xor add add add add jns add pushf add add add add fucom add hlt sti add add add push add and add add cmp inc dec add push add pop add jnp mov add add loope ljmp adc and add add add pop data16 jo jns addl mov mov (bad) add add add idiv add sbb xor push add arpl add jbe test lods add roll fninit ljmp adc add add xor cmp add pop gs add add orb cmpsl add add add add fsub ljmp or adc add sub xor add add arpl jae jl add add aam fsub jmp hlt sti add add add add inc add push pop pusha add js xchg mov add mov int (bad) add in add add add add or add add and add aas inc dec push pop bound add add add test add iret (bad) fldl add add add incb pop push adc add das ss add add outsb jne add add add cmpsl add add mov mov add add add fucom add repz add adc add sbb xor dec push popa add lods mov mov xlat fsubp jmp add testl add add and add add xor add dec push pop bound imul add jge xchg movsl add scas add aad jecxz add out cmc cld add add sbb and sub cmp add dec push pop add je (bad) mov add movsl add add add add add loope add add cli add add add sub cmp add add insl add add add loope out add add adc xor inc inc add add add add outsb add jg add lods mov ror rcl fsubp in hlt add add push or add sub inc dec push pop pusha add jle add lahf cmpsb lods add rcr add jmp add incb add add cs inc dec add pop pop add add add movsb add lods add add add int3 roll add in add cmc cld add adc add sub ss add push pop add push add jnp add add fchs add add add add or pop pop add sub aaa ds add pop arpl add jnp mov add mov mov (bad) fucom jmp cli add movhps add add sub xor cmp push push pop add add add add add add lret (bad) add cmc cld add adc sbb add add cmp add add bound ja test mov lods add add (bad) call add add add add sbb sub inc dec add add insw add add add add aam fldl add add testb add add add inc dec add add push pop add add add jae jl test add test add add add fcomp out hlt add add adc add sub cmp inc inc dec push pop arpl add add jle mov xchg add mov jecxz add cmc add add add push sbb add inc add add add add push addb (bad) xchg popf movsb stos mov add add rcr fild out lock add or sub xor cmp push push pop add jne jge mov xchg add mov add loope jmp idiv add adc add add xor add add add add add add mov mov mov add add add repnz add or push add sub add add add dec add add bound add mov add cmpsl add add add add add jecxz add add cld add push add push add and dec dec add add jne jge add mov add stos mov add roll fnclex jmp cld add adc add and add add add inc dec push add add add insl je jl add add add add add rolb fadds loope add in repz add or add add and add xor add dec push add imul add add movsl add lret add add fldl add add add stc add or push pop add push add add fwait mov rol iret (bad) fucom add repnz add add add add sub add cmp add dec add pop gs add jge add add pushf mov mov add int3 rcr loope out testb add add add das add cmp add push pop add bound push jb add lcall add enter add add ljmp add or add add xor cmp add dec add add add push addb add add into (bad) fldl add out cmc add incl add adc xor inc add add add add outsl jbe add add mov add add lret add loop jmp repz add add or sbb and xor add inc dec dec push pop add add add lea mov mov add leave rcl fiadd add add icebp add add add adc add add add add aaa add add add pop popa add jno jg lea add add (bad) add icebp add cli add sldt sbb and sub add inc inc add pop add add jnp orl add add add enter fild add add add add add add add add adc add sub xor cmp add add add pop insw jne add mov add mov add lret add add add add cmc add add or add sub xor add inc dec dec add add push jb add add add add (bad) in hlt sti add add add sbb add dec add pusha outsb jne add add mov xchg add add add int add add sub add add pop arpl js xchg mov add add (bad) add lock add or adc sbb add xor add inc add push add data16 jo jle fldl add lock add sub add xor add add add add add add add add pushf add cmpsb add add (bad) add lock add add and add sub add add add dec push add pop add imul add nop xchg add add movsl add (bad) (bad) add lock add or push sbb cmp dec add pop add add jns add test test mov add (bad) into add add add add idiv add or adc add add cmp inc add add pop data16 add addb stos mov rol add add loopne add idiv add add add cmp dec push pop pop data16 add add addl add mov add aam add jmp add sti add add adc add add add xor add add push pop add add add jl mov scas mov ret lret fchs out add add add add add add and add cmp add add add imul ja add (bad) mov lods add add in repz add or pop push and add cmp dec add add push mov test add leave rcr (bad) in add cld add add add xor add inc add add pop bound ja add test mov fadds loope out testb add add push sbb cmp add add dec push pop add push add mov mov add (bad) into add xlat add out add add cli add add or add add add add add pop add add add jg xchg (bad) xchg add mov ret lret add add ljmp adc add daa add cmp add imul orl stos mov add mov add fadds loopne add add hlt cli add sldt add and das add aas add add push add add imul add mov add add stos mov add flds add jmp add add add add add or add add add add daa add xor add cmp add push pop popa push addb add add mov add rcr loopne out add add add add add add inc add push pop pop add add test movsl add lds into aad fucom add add icebp add add add or add sbb inc inc dec push add add outsb jne jle xchg stos add add rcr loope out add incb add add sub add add inc add dec add push add add add js xchg lahf cmpsb lods add add rolb fcomp add jmp add or add add add pop add das add cmp add push add pusha outsb add add add xchg add xchg add add add add dec push pop imul add add mov add scas add mov (bad) fucom jmp add add add or add add and sub add add imul popl add add add enter add loope add add add add add sbb sub add add add pop pop add add js addb add mov fsub ljmp add or and add add xor inc add add push pop popa add ja add cltd lahf add add enter add add ljmp add add add sbb xor cmp push pop add add add add xchg add xchg lcall add add les add aad jecxz add add add add or add add and das add cmp add pop imul (bad) add add add add movsl add add aam fsub ljmp adc add add cmp inc dec add add add add jle add (bad) xchg popf movsb stos mov add add add (bad) jecxz add add incb add xor add add push add imul add xchg add mov add enter add fnclex jmp add adc push add add add inc add add pop add add js add movsl lods add add lret add fsub add add cmc cld add add push add push add sub add add add push add add imul jne jge xchg add add lods add mov mov add in add cli add or add and add add das add add add add pop arpl insb jnp xchg add add mov add mov fchs add ljmp add add sbb inc dec add add pop (bad) (bad) add add sti add adc push add sub add dec add ror rolb add add jmp add add add add sbb es add popa add jb add add mov add add jmp add add push or and add add inc dec add arpl insb jae add mov mov mov add add aad fsubp add add add add adc sbb sub add cmp add pop add outsb jne add add add add add mov add add add add add jmp add add push or add sub add add add push add mov add add mov (bad) fnclex call sti add add or pop es inc dec add arpl imul jl add add lods mov fnop out add incb push or add sub add add gs je jl test add nop xchg add add mov add loopne jmp add or pop add es aas add add dec push add add jae add jle add popl xchg sahf movsl add add add add in repnz add add add or adc add add add add cmp add add add pop add add add add jge mov xchg lcall add add lret add add fldl out hlt sti add add add adc push and cmp dec pop bound jno jg mov add add add add add loop add add sti add add pop add add and xor aas inc dec add push pop gs add test add popl xchg sahf add test mov mov rolb add add in in hlt add add add push adc sub add add inc add add add push add add insl add add add movsl lods add add lret rcr loopne out add idiv add add sub add inc inc dec push pop add add add jb add add mov fiaddl jecxz hlt add incl or xor add add inc add add add add insl je (bad) mov add lods mov roll add fchs add out testl push add and das ss add data16 add jb add add add add mov ret lret fiadd add out idiv add add and sub add cmp inc add add bound add add jle add add add mov mov add add (bad) add add add in in hlt add incb add or add sbb sub ss add add add jno jg add mov mov fldl add call repz add add sbb add dec push add add add add jbe add xchg cmpsl add mov mov add flds add lods mov add add add repz add add or sbb sub add inc dec add add outsb jne jge mov add add rol add add fildl jecxz add add cld add or sbb add add add add add add add addb add test add add rcr (bad) in add idiv add add sbb and xor add cmp push push add add add jbe add popf add add test mov add loope add clc incl or add add add add add add push add add add lahf cmpsb lods add add add mov aam fsub add add idiv add add lldt push add sub ss pop add add jae add add test iret add add loop ljmp push sbb das add add dec push add pusha add add insb jae addl mov ret add rolb (bad) add icebp add cli add or add add xor cmp add add add pop add add jle xchg add add add lret add add ljmp add add movhps pop add add add add inc add dec add arpl add add test mov add add add add add fldl in repz add or adc add sbb das add add add add push add add jge mov add xchg add mov mov add add add out cmc cld add add das add inc dec add add push test add add roll add add add ljmp adc xor inc add add add add js addb mov mov add add fnclex add add hlt sti add add add add add aas inc add push add outsb add add mov stos add rolb lret fchs out add clc push add add jle add add add xchg add add mov mov add aad add add add add cli add add or add push sbb cmp add inc dec add add add outsl jbe jg lea add add iret (bad) fucom jmp stc add or add add sbb and add add cmp add imul add add add add int3 add fsub ljmp or add and add xor aas inc add push add popa add ja jg mov add xchg lcall mov (bad) lret rolb fnclex add add add idiv add or adc sbb and das add aas add push pop add insw add jle xchg movsl add (bad) fiaddl loop jmp repz add add sub xor cmp inc dec dec push add outsb jne test test mov mov (bad) add in repz add add add push adc sub add add add je add mov mov add loopne add add stc add or pop push and inc add dec add pop add jbe test add (bad) xchg popf movsb add add add iret add add fnclex jmp add add add movhps push and add add add push add push addb mov add add add add add int3 add add add out add std add add and sub add inc add add pop pusha outsb jne jge mov add mov loopne call add push push add xor pop add outsl add add cltd mov add add add (bad) fldl add add out add stc add add or sbb add das add inc dec push pop popa add add add add mov add ljmp add or and add inc dec push add add add add jle add add add add mov add add add add add add add adc pop add sub aaa add inc inc add add add add add add add add xchg (bad) xchg popf add add add rcr add call add add adc push and add inc add push pop imul add test popf movsb add iret add (bad) in hlt sti add adc add and add add add cmp pusha add add add add add add mov (bad) lret rcr loopne jmp or adc add and add inc dec push pop add arpl js add mov mov add add rcr add loope ljmp add or sbb sub add add add add add add add add add add mov rcr fild add lock stc add sbb add add add add add dec add push pop add add gs add orl int fnclex jmp add or adc sbb sub add add inc dec dec push add add add jle mov mov mov add in add add add add push adc add add cmp add add pop add imul mov lods mov mov xlat add loope add add add adc add xor push pop popa add push add add jle add add add stos add enter jecxz add add idiv add add push add add add xor add add dec push pop pusha add add insb add jbe test add stos mov add add xlat add loope add add add add add add add add and das aaa ds dec add add outsb jne orl test movb rcl fsubp in repz add add or push add and cmp pusha add jno add addl xchg sahf movsl lods mov add add add add add add add add hlt add add push or xor cmp inc dec push pop add add add jge add lea lods mov ret rcr loopne add lock add std add add movhps add add sub xor add add inc dec push pop arpl add add jge xchg mov add add add rcr loopne add add add idiv add add adc xor add dec add add add add add add add jp add mov add xchg add add mov (bad) aad add loopne call or add sbb add insw je jl mov xchg lcall (bad) aad add out add add add cld add or sbb daa cs add push add insw je jge mov stos mov mov add iret add fsubp add add repnz add add adc add and add sub add xor dec add add popa push test add scas mov mov (bad) call sti add add adc and add xor inc inc dec push pop add outsb jne jge mov add mov rcl loopne jmp push or add add xor ds dec push pop add jno jg lea mov roll rcr (bad) add lock add pop push adc xor add ds dec add add add push add movsl lods add add out add add cli add add pop push add sbb inc add dec push add pop add jns add add lret add add add fildl in repnz add incl push adc add xor add cmp inc dec add add add add mov mov rcr add jmp pop push adc add sub cmp inc add dec add add jo js add lahf cmpsb add int3 rcr loope out add stc add add add pop es aas inc dec push add jno addb add rcl fsubp add out add stc add add adc push and add add dec push add add imul add cmpsb lods mov mov loopne call add or add push and inc dec push push pop add jne add lea mov (bad) fldl in repz add add or push sbb add cmp add add add push add add push addb add add mov add add lret rolb add jecxz jmp cli add or pop push add add add xor inc add add pop arpl imul addl fwait mov add (bad) into aad jecxz icebp clc add add adc sbb and xor add add push push pop add je (bad) mov add iret add fsubp in repz add add add adc sub push add add add add add jg mov cmpsl scas mov (bad) lret rolb (bad) call add add add das ss push pop arpl add mov add test ror add fiadd out add add add add adc pop add add xor inc add push pop add arpl jb add lcall add flds add jmp pop add add sbb cmp add pop add add add add add into aad in add add add and xor cmp dec push add insb jae add mov mov rolb fcomp add out add incb add sub add dec push pop bound add add add cwtl add mov aad jecxz icebp add add movhps das add inc add dec push pop add outsb jne orl add mov add add rcl add add add add sub ss add outsl jbe test mov add add mov les int add fsubp in repz add add adc add add in add add add add add adc add sub add aas inc dec add add pop popa push addb add add ret lret add xlat add loope out testb add and add cmp add add dec add push add add add popa add add test add xchg add fwait mov (bad) add add add add idiv add sbb sub add inc dec add push pop popa push add xchg add mov ret lret fild add add repnz add add adc sbb add add add add add add dec add add insw je (bad) mov scas mov ret add add aad add jmp add cld add or add add inc inc add push pop add add gs add add add mov add add cmpsb lods mov ret add add fldl in in add sti add add add push sub add aas inc add push add insw je (bad) mov lods add roll add fsubp in repz add or sbb and dec add push pop pusha outsb jne jle mov add rcr fild out add repnz add add or add sbb and add xor push pop add jo jle add add test add iret (bad) fucom jmp clc add add add adc and xor cmp pop bound push add add add add xchg add add mov add add out add add add or adc sbb and add sub cmp inc dec push pop add popa push addb nop xchg popf add add movb rcl fsubp in add idiv add add sbb add sub add cmp inc dec push add pop add jno jg lea mov add fiadd add jmp add xor ds dec push add pop imul add add scas add aam loop add add add add add add add add aas inc dec add jo js xchg add lods mov mov aad jecxz add cli add push adc add ss inc dec push pop add jo jle xchg add add add add add fsub ljmp add pop add adc sbb add add cmp inc add dec add popa push addb add aad jecxz add add add add xlat add add out add clc add add add sbb daa cs add pop add imul jnp mov lods mov add add in hlt sti add add add sbb add dec push add outsb jne addl lea lods mov ret rolb fiaddl add add out add add add add adc sbb and xor ds dec push add gs jae add add mov rcr loope out add incl add adc add add das add inc inc dec add add add add add movsl add add mov rolb add fadds add ljmp add add and das add add cmp inc dec push pop pusha add ja jg lea xchg pushf movsb stos add add jecxz icebp add sti add add add sbb add cmp add push jae add jg xchg add pushf mov ror add fchs out add incb add and cmp push pop add add mov add stos add rcr add call cli add add adc sbb xor pop add imul add add lret rolb fildl jecxz add cli add or pop add add add add inc add dec push pop add add mov add add mov aam loop ljmp adc sbb add das add add add pop add bound push add add mov mov add fiaddl add jmp add cld add or add sub add aas inc dec push pop add insb add add popf movsb stos add add (bad) call push or pop add xor add dec push pop add add orl movsb add lret add fiaddl loop add add cld add add add xor add add pusha add add add add add add add mov add add add add repnz add add adc add and add add inc add pop pop add add add add add add rcl add add ljmp adc sbb add sub xor cmp inc dec push pop add add jno jg xchg lods mov add add int3 roll fsub add repz add add add add add add cs add add push pop add add add jbe add add add roll fnclex jmp add add sbb xor dec add add insl add test add (bad) int add add fnclex jmp add add add add add add das add aas add dec add add arpl imul jnp mov add stos mov mov rcr loopne add add add std add add add sbb das aaa add add pop pusha add add jnp mov test add add rcr loopne add jmp cli add add pop add daa cs add mov (bad) call add add or add xor inc dec add add add add test scas add rcr add add in repz add add add xor cmp add add add outsb add test add add test add add int fildl in add add add add add add sldt sbb add xor cmp inc dec dec add add add gs je (bad) add test add aad in cmc add add add add adc sbb and add xor add inc add add insw add add cwtl add add add aam add in repz std add adc and sub add add inc dec push add popa push xchg movsl add scas add iret (bad) add add add add hlt cld add add push add sbb add add aaa ds dec push pop popa add js xchg lahf cmpsb add add into aad add add add testl add add and sub aaa add inc add push add pop arpl add add js xchg cltd mov mov add add add in add cmc add add sbb add xor cmp dec push add insl add test mov add scas add add lret add add jecxz add add idiv add add push sbb add xor cmp inc dec add popa push xchg movsl lods mov mov fild add add add sti add add add and sub cmp dec add pop pop add jo jns orl add rcr add loop add add add movhps cmp dec dec push pop gs add jle mov mov add add loopne out incl add add xor add inc dec add popa push test add lods add add rcr fild out add incb and sub xor add inc dec add add add add add add xchg (bad) xchg add mov ret lret add add out hlt add add push push add sbb cmp inc add dec push pop arpl jb addl add add mov add ret int3 add add add loope out idiv add add adc xor add add dec add add push addb add add add xlat add out add clc incl add add add add add add add add cmp add push add pop imul mov nop add add test mov (bad) add fucom add hlt sti add adc sbb daa cs dec add add arpl insb jae add mov mov add fabs call add add add adc add add and sub add cmp push pop pop data16 add jp mov mov rolb iret xlat add add jmp add push sbb inc dec push push add outsb jne add lea mov roll lret add add fsubp in add add incb and xor add inc add push add insb je jl test add add fwait mov add loope out testb push or sub add add add arpl add add mov add add add add add add incb or add and xor cmp add inc dec add add add add add insl je jge add add add mov mov add in add sti add or sbb add add add add add dec push add gs add jbe add xchg sahf cmpsb lods mov mov iret add fiadd out hlt sti add or sbb add sub cmp add dec dec push pop imul jne add addb mov mov add in add add add or sbb and sub add add aas add add add pop bound jae jge mov add flds loop add repz add add sbb add xor add cmp dec push pop add add add outsl jbe add xchg add add mov add add ret lret rcr loopne out add clc incl or add add add xor add add pop pusha add add jbe jle mov mov mov (bad) fucom add add icebp add add add add add push add add xor add inc add push pop pusha add add add add addb stos add rcr loope out add incb add add add inc inc dec add add outsb jne orl test add leave rcl fsubp in add cld add add and cmp inc add pop bound ja add stos add add rcr add jmp add add or add and add add add add inc dec add push pop add add xchg add add xchg fwait mov add mov mov (bad) fldl add add icebp add add add add sbb and sub add add add dec push pop arpl jae addl lahf mov add add fildl jecxz icebp add add incb sbb add add add add add pop add add jne jle mov mov add add loopne out cmc cld add add add adc pop es inc dec push pop pusha outsb jne add add cmpsb scas mov ret lret flds loop ljmp add sbb add add xor aas inc dec push pop add jns xchg popl add rcr loopne out add incb sbb xor add add add addl add add cmpsb lods mov mov aad add jmp stc add add adc add sbb add xor add add pop data16 add add test test int3 roll fsub ljmp add add adc add add and xor add inc add dec push add add push add addl add lods mov add lret add loop add clc add or push sbb das add cmp dec push add pop data16 jne orl stos mov mov rcr add add daa add add add dec push pop add bound add add add add add add add add roll lret rcr loopne add add add add add add adc add cmp add popa push nop xchg sahf add add add aad jecxz in repz add adc add and add add add inc dec dec add add add add jnp add add mov xchg sahf add test mov (bad) lret rolb fiaddl add out hlt sti add add push adc add inc add add arpl jae addl add add mov add roll lret add add add loopne out cmc cld add add adc and add cmp inc dec add push add add imul add mov xchg add lahf add test mov add add add rcr add jecxz icebp add add add add or adc add and add add pop add popa imul add xchg add lahf add add into aad fucom jmp hlt sti add or add adc add add add add inc dec add add jae add add add mov add add movl loope add add add add add sbb sub add add add pop pop add add js xchg stos add int fsub ljmp add add and add sub add cmp dec push add outsb jne jge mov stos add add fldl in add testb add or adc sbb and add add das aaa add add push push pop add push add add mov add add (bad) add add call add add add add sbb das ss push pop add add add popf add add add mov add jecxz jmp stc add or pop add add add daa add cmp add add add popa push jp (bad) mov add mov add add add fcomp out add icebp stc add push adc xor cmp add push arpl orl mov mov add add add loopne out cmc add add add and xor add inc add add add outsl add add mov add add add add aam add (bad) out add add cli add add sbb add add cmp add push add add add add add add add mov int3 rcr loope add repnz add or add pop es add cmp add add pop add jno jns add fwait add add mov lret rolb (bad) call add fucomip add add add add push or sub add popa add add add mov ret fcomp out out idiv add or adc add and sub xor inc add add push push pop add add add add mov add add add add into aad fsubp add add add add add add add and xor add inc dec add push pop add jno mov add add add (bad) add add repz add or add sbb add daa cs add jb jp (bad) add sahf movsl lods mov add add into add fsubp in hlt cld add sub add inc dec add add arpl imul mov add lods mov add add int add add add jmp stc add add adc add es push add add add jl mov mov mov faddl add add add stc add or adc pop add add sub cmp add add push popa push add add movsl add add mov mov add add jmp sti add add sbb add sub cmp add add push pop add add add add ja add add add add lret (bad) in add add add or push push and aaa aas add push pop pop data16 add addb mov mov fucom jmp cli add movhps add add sub xor add dec push pop xchg add cmpsb lods add add add add fucomi std add and das add aas inc dec push pop add add outsb jne jge add (bad) xchg sahf cmpsb scas add mov add jecxz add cmc std add add or adc add add aas add add add dec push pop gs je add add add cmpsl add add add fsubp add add add add or push add and add cmp add dec dec push push add jge xchg add add fiadd out add repnz add push adc daa add add inc dec push add add insl je add add stos add add rcr loope out testb add add add add and das add add add add push add add push add orl mov mov fild call add lret add add jmp add add add adc and sub aaa add inc dec add add push pop add add add js add add xchg popf movsb lods mov add add (bad) int add add in add add add pop add adc sbb inc dec push pop add add push orl add mov add add add in add add add add add add add and xor ds dec push pop add add outsb add test mov mov add loope out idiv add add add add add add xor push pop pusha add jno add xchg lcall add add add add add add add ljmp or sbb add ss pop add imul jnp add add add mov lret add add add out lock cli add or adc and sub xor aas inc add add add arpl add add jle mov add mov (bad) add add add add add add or sbb and das add inc inc add add add add add jge add add mov add add loope jmp add add adc and add add inc dec push add add add add lea mov mov flds loop lock add and sub xor add dec push popa imul add fwait mov mov int3 add (bad) fucom jmp repz add or sbb add add aaa add inc add add pop add add add movsl add add add add call add push adc add sub xor inc add add dec push pop bound add jbe add xchg cmpsb add add add add (bad) call push add adc add add add add add dec add push add add imul nop xchg sahf add add roll rcl add loope out cli sbb sub xor ds add push add add add jg lea add cwtl lahf add int3 add fnclex jmp pop push adc daa add add cmp dec push pop add add add add add popf add cmpsl scas mov ret lret add call add add and sub add cmp dec push pop pop add jbe test mov stos mov add add loop add add idiv add add add adc sbb sub add add add pop add add add add add add (bad) int add fsubp in add idiv add or add add add sub add inc add add pop add gs add add jns add mov mov rol aad fsubp in repz add or add add and add inc dec add arpl jns orl ret add aam fldl add out cmc cld add add add add pop add add cmp add dec add push pop bound ja test mov add add fild add lock push or sub add pushf mov mov mov add roll fnclex add add incb add add cs add add dec add add jae jl mov mov rolb lret add out cmc add incl or add add pop add add add add add inc add push pop add add gs jb addb add (bad) add xlat fsubp in add sti add add add and xor add cmp dec push pop pop insw add test scas mov add roll add loop lock add add add add add pop add add add add cmp dec push pop pop insw add orl add add lret add add ljmp push sbb add add cmp inc add dec push add pop add jl mov add add add add fndisi(8087 call or sbb add sub xor cmp inc dec push pop pop insw je (bad) mov scas add into add add loopne out cmc cld add add sbb daa cs inc dec push pop arpl jb addb lcall (bad) int aad add loopne out add clc incl add add adc and sub aaa add dec add imul add add add mov add leave iret (bad) add add add jmp hlt sti add sbb and xor add dec push pop arpl add add add jnp mov add add add add add add loopne jmp add add push or sub xor inc inc add push pop add add jle mov add test mov les add aam add jmp or add sbb add cmp pusha outsb jne addl xchg cltd mov add int3 rcr loope out cmc cld add sub xor add inc dec dec push pop add jae add add popf movsb ror fiaddl loop add add testb add or add add and add xor aas inc dec push add push js add add mov mov fucom jmp clc add or add sbb es dec push pop pusha add add xchg add add add add add mov add add loop add add add add or adc sbb add daa cs push add pop arpl add orl scas mov add roll lret loopne add icebp add add or push add add sub das add aas inc add pop add jo jle mov stos mov mov rolb add fucom jmp stc add or push sbb inc inc add push push pop insw je (bad) mov cmpsl add int fnclex add add add idiv add add adc add add sub add cmp dec push pop add jae orl stos add mov ret leave rcl fsubp in hlt sti add or sbb add sub aaa ds dec add imul mov add lahf add add ret xlat add loope add idiv add push add push add add ss add pop gs jae add mov add mov add leave rcl add add add add hlt add add add and add inc dec push pop popa push add orl mov fchs out add add add movhps push and inc dec push push pop add push mov test mov fchs out add add add add add add add das add aas inc dec push pop popa push (bad) xchg sahf add add movl add add idiv add adc sbb sub add cmp inc dec dec push add pusha outsb jne jge add add add lret add add fcomp out add icebp add add add or add xor add add imul add mov scas add add fadds add jecxz add add add inc dec add orl add add add fistpl add add fiaddl add jmp stc add lldt push add cs add add add jo add cwtl lahf add mov fldl add out cmc add add add adc push add add add sub add add dec add add add add add cltd add add rcr add add in hlt add std add sbb and add inc add dec push pop imul jne jle add add scas add mov lret (bad) call sldt sbb and sub xor cmp dec push pop pop data16 add mov add mov add lret fchs add lock cli add add add sbb add add add add aas add add dec push add pop add gs add jbe test mov mov (bad) add loopne add add hlt sti add add sbb and sub add inc inc add push add push addb add add add mov add add fldl in add testb add add add add and sub xor cmp add inc dec push add imul add test add leave rolb fchs out add add add add sbb add cmp add gs add jle xchg (bad) xchg add add in add add incb and add cs push pop add push js add add mov add add add add icebp clc add add add add push sbb das add cmp add dec push pop pusha outsb jne jl test add add lret aam loop add repz add add sbb add sub add inc dec push imul jnp addl add xchg popf movsb add add add iret add add faddl in add repnz add add or add pop add add aaa add add push add push add jl mov add mov mov add fiadd add jmp add add adc sbb sub xor add inc dec dec add add imul add add rol add add loopne out cmc add add sbb add cmp add imul jge test lea xchg popf movsb add add enter fsub add icebp clc add add adc push and inc dec push push pop add add ja add movsl lods mov add aam fucom in add sti add add add and add aas inc push add add add ss add pop add add add add jle add add add add add add aam jecxz add stc add or pop add daa cs dec add add add add add add pushf movsb add rolb flds add add add cli add or sbb add cs dec push pop add gs jae orl stos mov add mov fnclex jmp add add add add add xor add add add add add outsb add ja add movsb stos mov rolb rcl fsubp in add add incb add sub cmp add dec add arpl add add mov xchg lcall add roll add add loope out idiv add add daa add add dec add pusha add jbe jg xchg add rcr add add lock add push add sub add inc dec push push pop add add jle add add add int aad fucom add add add stc add or adc add sub add ds add pop arpl add jne add xchg add add stos add mov add fsub ljmp ltr add add xor cmp pop bound add orl add into aad add out add add push or and xor add inc dec add pop add arpl js orl add add movl out hlt sti add add add and das add add inc dec add add jnp addl xchg cltd mov mov fildl in in repz add add adc sbb add xor cmp add add push pop bound add je (bad) mov xchg cwtl add add add add call add incb push or and inc mov add (bad) call add push adc xor add add add imul jl test lea xchg pushf mov add add rol add rcr add jecxz jmp add add adc pop es xor push add add data16 jo add xchg mov mov rolb fadds (bad) in add idiv add add pop es add inc add push add add pop add add js add xchg add mov mov iret (bad) add in add add or add sbb add add cmp inc dec dec push add add add jns addl lcall add ret add int aad add add out cmc cld add or add add add ds add add push pop pop insw add add test mov add add (bad) add lock cli add add add sbb add add add add ds add add add popa add add xchg add rolb fadds add jecxz add add idiv add add add sub add dec add imul je (bad) add add in add cmc cld add add add adc pop add add add xor cmp add dec add add add insb jae jnp test popf add ret add int fildl add in add sti add add sbb xor add cmp dec add pusha add jno add add mov add rolb fildl jecxz add hlt add add add sbb daa add add cmp dec add add add js add add enter add faddl in in add cld add or adc add add daa add add cmp add add pop bound ja test stos mov mov add fiaddl add jmp stc add add or adc add sub add cmp add push pop add add jp add add add mov fiaddl loop add add add clc add add add sbb and sub add add add aas add push pop add add mov mov add add add fadds loopne jmp add add add add and xor add add inc add pop add jns add add add rcr loopne out add testl adc add add sub add inc inc dec push pop add insw add jle xchg mov mov add add int3 add add fiadd add out add add push or xor cmp dec push pop add add add movsl lods mov add aam fucom jmp repz add add or sbb add xor cmp add add add add outsb jne (bad) mov cmpsl add add mov add add add jmp add add add add or sbb add cs inc dec add bound add jl add xchg add add stos add mov add (bad) fucom jmp add add incl pop add pop add es dec push pop add bound ja add test add mov add (bad) in add decb adc and add xor cmp inc add pop pusha outsb jne jge add stos add lret add fsub ljmp adc add add inc dec add add js add mov add add add add (bad) add lock add add adc push add add add cmp inc dec push add pop add add jae add jge test add add add enter add loop lock sbb sub xor aas inc add add push add imul add jle mov add ret lret add add add add add clc incl pop push adc xor add inc dec push pop pop add jbe test add mov add rol aad loop lock add or add add add das ss pop popa add jb addb mov mov rol aad jecxz jmp cli add lldt add and add aaa add push pop add gs add addl xchg cltd mov add mov ret add int fildl jecxz add hlt sti add add add adc add es add data16 add mov add scas add iret add fiadd out add add cli add add add add sbb add sub aaa ds dec push pop add add je add add ror rolb add loope out testb push or add add xor add add add push add pop add add add sahf add mov (bad) fldl out add testl adc sbb and add add add add add push push add add jo jle add add add add add aam jecxz add add add incl add adc push add add add add inc add dec add imul jne addl xchg lcall add add add add add add out lock incl add push add and inc dec add add add insl add jge xchg lahf cmpsb lods add add add fchs out idiv add outsw jbe add orl mov into add fucom add hlt sti add add add add push and aaa add inc add dec add add add outsb add test add cmpsb lods add add aad add add add testb add add add add add and aaa ds dec add push pop arpl add add jno add add add lret add aam loop lock add add add push add sbb and das add aas inc dec add imul orl add fild call add add and sub add add add dec push add insl add jbe add cwtl lahf add test int3 roll faddl add out cmc cld add add push adc add inc inc add add bound push js xchg add mov add add add in icebp clc add or add push and cmp add add jne add xchg add add add rcl add add jmp add or add add and add xor inc add pop add add add add add movsl add add mov add fadds add jmp pop add push add add add add cmp inc add add push add push jg add add mov add add xlat fiadd add out testb add add adc add sbb sub ss add pop pop insw add add xchg stos mov add add lret add add jecxz icebp clc incl add add sbb and add add aas add dec add add push pop arpl jae addl add mov add fiadd out push add ltr add add xor add dec add add add add outsb add ja addb add add aam add ljmp add add adc add add add add add add push add imul add test mov add add add add add add add jecxz jmp add cld add push or add add sub xor cmp add inc dec push add add je (bad) add add add les add iret add add loopne in hlt add incb sub add add inc add dec add add insw je add popf movsb add add jno add add add mov mov mov add fcomp add jmp add add add add add sub xor push pop pusha jl mov stos mov add add rol iret (bad) fldl add call add pop add sub add aas add dec add add pop add data16 jl add lea add add add add add add add clc add add adc add add ss pop add add add push add jp add add add aad jecxz icebp clc incl pop add add sbb daa add add add inc dec dec push pop add jae jnp add add enter add faddl add out add clc add and add cmp inc inc dec add imul add mov add lds add rcl add add add add add add add pop push and cmp add push pop add outsl add add mov add mov add add add add out add stc add or push add and add cmp add add add add jns addl add add enter (bad) in add add add cld add add add add cmp dec add add push mov add add fsub ljmp adc add add aaa add inc dec push pop bound jno add orl add lods add add mov (bad) fucom add repz add ltr pop add add cmp dec push add pusha add js addb add add mov lds add add fcomp add add add add add adc sbb and sub aaa add add add add add add jle add add pushf mov mov fcomp add out idiv add add add or adc sbb add add add cmp jbe jle add add mov add add (bad) fldl add out cmc add add add or add sbb sub aaa add add push pop pusha outsb add ja test mov add add leave add add loope call add add add and cmp add add popa push add stos add add fadds add add icebp add sti add or adc sbb sub xor add add aas inc add add pop add add insb jae add lcall add add add hlt add add push or and add inc add dec add popa push jg mov nop add lcall add mov mov add aam fucom add in add idiv add add add sbb and sub xor add cmp pop popa add add add jg add cmpsb lods mov add add add iret (bad) fucom jmp add std add add sbb add add xor add dec add gs add jge add mov stos mov mov (bad) into aad jecxz jmp add add movhps das add inc add dec push pop imul jne jg mov nop xchg sahf add add add aam add add out hlt add add add sbb add xor cmp add add pusha add push add jne addl xchg add add add into aad add out hlt add add add push sbb add sub xor cmp dec add add bound add add jle xchg add mov (bad) add add call cli add add adc sbb sub add add add inc dec push pop pusha add push js add add cmpsl add mov mov int3 rcr loope jmp add add add xor add inc dec push pop add add add add xchg add add add add int3 roll fnclex add add add add add add add push and inc dec add push pop add jae add add add mov add (bad) add in repz std add or adc add xor add pop arpl add (bad) add pushf mov add add add (bad) out add add push or add cmp add dec push add insl je (bad) mov add stos mov add ret lret fchs add lock add add or sbb and cs dec add add add jbe jle add movsl lods add movl loopne call push or sub add aas add push add add bound ja add add fwait mov mov add add add add in hlt cld add adc add and add cmp inc dec add add add add outsb add jg xchg add add rolb fildl jecxz jmp stc add add add sbb and sub cmp add pop add add add mov test (bad) int fildl jecxz icebp clc incl or add add dec push pop bound add add orl mov mov add fsub ljmp push add and cmp add add jae orl add add add loopne add add stc add add add add xor aas inc dec push add pop add add add add cltd add add roll add in add idiv add add add add add add add add dec push push add add add add (bad) mov xchg cltd lahf add test mov fiadd out cmc sti add or adc add add cs dec push pop add jno jg add mov add (bad) into add add loopne jmp push or add add xor inc dec add pop add add js add movsl lods mov roll cmp inc dec add add add jl mov fucom jmp add cld add add add add cmp inc dec dec add add add insb je (bad) add add (bad) xchg sahf add add add add add add add add add add add adc pop add sub cmp add add push pop bound add add add add add add mov xchg lcall mov add add lret loopne out add add add adc and xor add cmp push pop arpl add jbe test movsl add aam fucom jmp stc add adc push add sub vpaddusb ljmp add sbb and sub aaa add inc dec dec add add add add add cmpsb add add mov in in testb add or add pop add add add inc add push add popa add add add mov mov add fadds add add add hlt add add add pop add ss pop add bound imul add test add add aad jecxz add cli add add add sbb add sub cmp inc add push add add jge add mov add lret rolb fnclex add add hlt sti add add or and inc dec push add arpl insb jae addl lahf add (bad) aam fucom jmp stc add or push add add add add cmp add pop add add add add add scas mov add (bad) into aad fucom add add idiv add or and sub inc add dec add add add jle xchg stos mov add add add add loope jmp add add or add sub cmp add push add popa add jno jns xchg stos mov add add out idiv add or das ss add jno jg xchg add (bad) int3 rcr loope add add add std add add adc add and sub add cmp dec push pop add orl add leave rolb fchs out cmc cld add add add push and inc add pop gs add jle mov add add add add add mov add add out add add add or adc sbb and add sub cmp inc dec push pop add bound add jns add test mov add add add rcr loopne out add clc incl or add add xor push add pop add jns xchg lods mov add ret add fild add ljmp adc cmp dec push add pop data16 jae addl cmpsb add scas add aad jecxz add add add incl add add sbb add add xor add inc dec push push pop add jnp mov add add fnclex jmp add push adc cs push pop popa push add add add rolb add int3 rcr add add add add clc add pop add pop add add cs dec add gs add jbe test add stos mov mov add fiaddl add out add add incl add add sbb add add xor aas inc dec push pop add insb add mov test mov mov faddl add out out cmc cld add or sbb daa cs add pop bound ja test add mov loop ljmp add add add add add and sub cmp push push pop add je (bad) mov xchg add fwait mov add add out hlt sti add or sbb add sub xor aas inc add pop imul jp (bad) mov add add add mov leave rcl add add add add hlt add add or add add xor add inc add push pop popa push addb mov scas add add (bad) add add call cli add add or add sub push push add imul mov lods mov add (bad) lret rcr add jecxz lock push add movhps add and add add inc dec add arpl js add mov add (bad) int (bad) add add loop add add add add sbb inc inc dec add pop insw je jl add add cmpsb lods mov mov fchs out lock add pop push add add es inc add add add add jns xchg add les int add fucom add hlt add add or sub add add add inc dec push pop add jno jp mov nop xchg sahf movsl add add int add fsub add add clc add add add adc sbb sub aaa ds dec push pop add push jb jnp mov lods mov add (bad) fiaddl add ljmp adc add and das add add inc dec add push pop imul add mov add enter add add in add add add add push add add and dec dec add pusha outsb jne jge add add test mov mov (bad) fucom add hlt sti add or add pop push and cmp push pop add add jno jg lea mov add leave add fadds loopne add testl add push add add add cmp inc dec add add push add add add rol add add add jecxz add add idiv add or add add add add dec add arpl js orl mov flds loope add repnz cld add or add xor cmp imul jne jl test lea xchg pushf mov add leave add add fnclex add jmp hlt add add or adc and xor add add push push pop add jbe test mov mov mov rcr fild call add add add sbb add sub aaa add add add add add jns xchg movsl lods mov mov add loope ljmp add sbb and sub add add inc add add bound push js orl add mov roll add into add decb push add and add inc add push add jge sti adc xor add add inc add add add add outsb add xchg add xlat add add jmp add or sbb add sub xor cmp add add add jle add add enter add (bad) fucom in add add add add or add pop add add add sub add pop add add jns orl add rcr add call add add add adc pop add add jno add lahf movsl add rolb rolb fcomp out hlt add add adc add add dec push pop pusha add push add jne test sahf movsl add rolb add in in add add add push adc add add xor add add add push pop add outsl jbe test stos mov rol add add loope add idiv add push adc add add aas add push add popa add imul jnp (bad) add mov xchg add mov add add (bad) int faddl in add lock add add adc add and sub add add push add add add imul xchg pushf add leave roll (bad) add add add add add pop add add and add add xor add push pop arpl jae add add stos mov add lret add in repnz add add adc and add xor add cmp add pop gs add (bad) mov stos add add (bad) fldl in out add add sti add add push adc add add cmp add cmpsb mov (bad) lret (bad) add lock add and xor add inc add push pop pusha outsb jne add popf add add add ror add fsubp add cmc cld add adc and add aaa add inc add dec add add push pop add je (bad) mov add stos add add (bad) in repz add adc add add add sub xor aas add add dec push pop pusha add push add add xchg mov add rol rcl fsubp add out cli or add sbb and xor add dec push add add add js xchg add mov rolb add rcr add call add or push sbb add dec push add insl add add add add (bad) fucom jmp add sti add adc push add cs inc add dec add imul xchg popl add lcall mov int3 aam add ljmp add add add push sbb cmp add add add add add jg (bad) xlat out lock add or push sbb cmp push push add add add add add test add add add add add loope add add cli add add add add pop add add aaa ds add dec push pop add outsb add test add add add add fild add add clc incl pop add adc pop es add pop bound ja test add add add iret (bad) fucom jmp repz add adc push and aaa add inc add dec push add add pop gs jae orl mov mov rcr add add lock add add adc push and aaa add inc dec push pop bound add mov add rcr add ljmp add push add sub ss pop bound jns andl add into aad in add add clc incl add add add add and ds add push pop (bad) roll add add add hlt sti add add sbb add add inc dec add pusha add add add jge add add add add lret rcr loopne out testb add add push sbb add inc dec push add arpl js add orl scas mov (bad) (bad) call add movhps add add add jne test add add mov add xlat add out cmc std add adc sbb sub cmp add add add add jae jp mov scas mov add int add fsubp add cmc cld add or sbb sub xor add add add add push pop insw je add add mov mov mov mov add add jmp cli add add or adc add inc add dec push add jb jp mov add add add add xlat add loope add clc incl or xor cmp inc add push pop popa push xchg movsl lods mov add loope add repnz cld add add add sub xor inc dec dec push pop add outsb add jg mov lods add ret add aam fldl in add add add sub add add dec push add add add add mov test add add fsub add in hlt add add sbb cmp inc dec add add add rolb add rcr loope ljmp or adc add sub xor cmp push add add pop add je addl xchg lcall ror add fiadd out add clc add add or adc sbb add sub add push pop arpl jns xchg popl cwtl add mov fucom jmp add cld add add adc and xor add inc dec add push pop popa add jb addb nop xchg sahf movsl lods mov add (bad) add in hlt add lldt pop add add xor add inc add push pop add je orl add leave add fchs add lock push add add xor push add outsl ja add mov add add add rcr loopne out testb add push adc sub add add insb add add add add xlat fiadd out cmc cld add add or add sbb sub add add add add add ja xchg add add add add movhps and inc dec add push pop popa push xchg lahf cmpsb add mov mov rcl add out out idiv xor add inc add push add imul nop add add mov mov rolb fnclex jmp push add add push and cmp dec add popa add ja jg mov add add add add fsubp add out idiv add push or and add add push add add imul add test add add lret add add fldl in out cmc add add or add add es dec add add arpl add add lods add add aad fucom jmp add add incb pop add add push and add add inc dec add add add data16 outsl add xchg add (bad) add out add add incl add adc sub add dec push add insb add jbe add popf movsb stos add (bad) add add add add push add add add and sub add aaa add add add pop bound push jae addl xchg add add aam add add repz add or add add add add xor cmp add add push pop add jbe test popf add mov add add out add cld add add add add inc add push pop gs add jle add stos add mov add add (bad) add add add add add add add sbb add add aas inc dec push pop bound jp mov add mov add leave rolb fcomp out add testl add push and add add dec add pop add push add add add add lods add add add add add sahf add stos mov mov add adc add add and sub ss pop add jb jp mov cmpsl add add add add add fiadd add add icebp clc add add sbb sub add add inc add push pop add jae addb nop xchg sahf add cmpsl scas mov add (bad) int fnclex jmp add incb add and inc dec push push add popa push add add add mov add add into add fcomp add add idiv add adc and sub ss add pop add jnp orl add ret add flds add add repnz add add or adc add and add cmp dec add add arpl jb add add add (bad) add mov stos add iret add flds loope out idiv add and add cmp add add push add add insl add add jns (bad) mov add add add mov add add add add jmp pop push add sbb xor add outsb jne add test add xchg cwtl lahf movsl add add rcr loope out add stc add or adc sbb daa das ss add imul jnp add mov stos mov rol aam fucom jmp stc add or add sbb and das add ds push add pop add add add mov add mov mov add fsub ljmp incl or add add add inc add dec add add add add xchg add mov ror rcl fiadd out hlt add add adc add add add add xor add add inc add add add add jg lea add mov mov add call incl or sub cmp inc add push add add imul mov mov add (bad) lret add add add add sub xor add dec push pop pop add add js add add lods mov add lret (bad) add add clc incl or sub cmp add add pop pusha outsl jbe test add add xchg cltd mov mov add add lret rolb (bad) call add push adc sub add cmp add add add add addb add rolb iret (bad) fucom jmp add add adc add add add add cs inc dec push push add popa add push add add xchg add add add mov fcomp add out cmc cld add push or and dec add add add push js add cmpsb lods mov ret lret rolb fildl jecxz jmp stc add push adc sub dec add add arpl add jne orl scas mov ret lret fiaddl add ljmp push sbb xor dec push pop popa push add jge mov add add mov mov add jecxz add stc add add add pop add add add insb add jbe add sahf movsl lods add add rcr fild add lock adc sbb add xor add add add push pop add insl je add add add mov fldl in add add add add push and inc add add pop imul jnp test mov add mov add lret loopne add icebp add sti add add adc and sub xor add add add add add add outsb add test mov add (bad) into add add loope add testl pop add and sub xor add push add pop add imul add mov mov add into aad add add add repnz add add add sbb add xor cmp inc dec push add add add test add rcr fild call add add add add add add daa add xor add inc add push pop bound add add lcall add iret (bad) fldl add out cmc cld add add sbb sub add cmp add inc dec push pop add add je jge mov stos mov mov add fnclex jmp add add pop pop add sub add add dec push pop imul (bad) mov add mov add enter (bad) in add testl add sub add aas add dec add pusha add push jb jnp add add add lds add rcl add add add add add add cli add or add add sub add add add add dec push pop add je jge mov xchg fwait mov add add add add add fiaddl loop jmp add cld add push or and inc add dec add pop add jnp mov xchg cltd mov mov (bad) fucom in repz add add add add pop push and aaa aas add push pop arpl add test lea xchg add fsub add add cld add add sbb add sub add ss popa push test add lds int fninit add in add idiv add or add add add aas inc add push push pop add add jg add add lea add mov add add fild out add clc add or adc sbb add add add xor push pop add jb addb lods add add mov lret rolb add add add out add stc add add add add and xor add add add add mov nop xchg sahf movsl add add aam fsub add repz add sldt add add sub add push pop bound ja add add mov fsubp in repz add or sbb add add cmp add add pop pusha outsl jbe add lods add loope out testb push or add add add add add pop pop data16 jne add xchg lods mov ret rolb fildl jecxz add out add add sti add or sub xor inc dec add pusha add add add test mov stos add mov ret add add add loopne add icebp clc incb or add daa cs inc dec push add insb add add popf mov ror add add add in add add incb add add adc sbb add add sub push add pop add add add add add adc sbb add add add add dec add add add outsl jbe add xchg add mov mov int (bad) fldl out add add add cld add adc add add add add add add inc dec dec push pop add outsb jne jge mov scas add add add add fadds loopne jmp push add adc xor add add add pop add add add pushf add add add enter in add add add add add and inc add add add jg xchg mov mov int3 roll fildl jecxz add hlt add add add movhps pop es dec add pop bound push add add mov xchg lcall mov add les int3 add add add add ljmp add add adc add add cmp add add add arpl jae add add (bad) xchg add mov add add add int aad jecxz add hlt sti add or sbb and add aaa add add dec add pop add add push add movsb add scas mov add add add lret rolb add jecxz sti add or add and add sub add push pop arpl add add test movsl lods mov ror add fsubp add add testl push sbb cmp add push add imul jne add add lahf cmpsb lods add roll fninit add repnz add add add add and cmp inc add push add imul add test mov add add add lret add add in add add std add add adc add add add add add inc add dec add arpl add add mov add add add lret add add add call add add or add add das add add add add push add add jae addl add scas mov ret add add add fcomp out hlt add incb sub add cmp inc add dec add pop gs jae addl add mov add add (bad) fucom jmp stc add add push sbb cmp dec push add add push js xchg add add add add add fildl add out hlt add pop push add push daa add add push pop add insl add test mov add mov add add add add fadds add add repnz add add adc add add add cmp inc add add add push add imul add add nop add lcall mov add add add fsub add repnz add add adc add sbb add add xor ds dec push add add add jbe test add mov add ret roll add add add in hlt sti add adc sbb and add cmp inc add add pop add add insw je (bad) mov lods mov ret add loop add clc add or add sbb add add add add inc dec add pop add add add add jae add test mov mov add (bad) into add fldl out hlt add add add add sti add add sbb and sub add inc inc add push add push jg add mov add add mov add add faddl in add testb incl add add add and sub xor cmp add inc dec push add ja add (bad) mov add ret xlat add add add in repz add add adc sbb add xor add add add add add jge add add add add aad in repnz add or sbb es aas inc add add insb add jbe add add add lds add add flds add add repnz add adc push and add add pop bound add jbe add sahf movsl add (bad) add fldl out hlt sti add or add xor dec dec push pop add add mov stos mov mov fucom add add testb add movhps cmp add inc dec push add pop gs add jbe jle add cmpsb lods mov mov fiaddl loop add stc add or add add and sub add inc dec dec add pusha add push jb add mov xchg pushf mov mov add add fiadd out cmc add add add movhps add add sub add cmp dec push add arpl imul add jg xchg mov ret add int add in in repz add add add add adc add pop add cs inc add push pop add add add icebp add add add adc cmp add push pop add mov into aad jecxz add add add or sbb and sub aaa ds dec push add push jb add add mov mov rcl add loope out add stc add add or sbb add das add jb addb nop add add mov fildl jecxz icebp clc incl or push add and add cmp add dec push pop add add push js add add xchg add add scas mov les add add fadds add jecxz add stc add add add add add xor dec push pop add imul jnp mov add add add add add mov mov add rcr add add out add std add add pop es dec push pop pop add jo jns add add add add iret (bad) in add std add adc and sub add add dec add add imul add add movsl lods add mov mov aad jecxz icebp clc add or adc xor cmp dec push add pop bound ja add add ret lret add loope ljmp add or add add das add aas inc add add push pop pusha add jno add add xchg movsb add add add add fcomp out add idiv add pop push add sbb add add add cmp add push add add insb add jns add add (bad) lret rcr loopne out add add add or add push and aaa ds dec add imul (bad) mov mov mov fsub ljmp add sub add add add inc dec push pop popa push add add add mov xchg add cmpsb lods mov ret xlat add out cmc cld add or add add xor add push pop arpl add xchg add add mov rcl add add add in repz add sldt add sbb sub add xor inc add add pop add imul add mov xchg add add rcr add loop lock add add add add add add add add and add add xor add add inc dec push pop arpl add add test add add lret rolb add add add in repz add add add movhps add xor cmp add add push add add push add addl xchg pushf mov add add lret rolb add jecxz jmp repz add or sbb add and add add dec add add jae jnp add xchg add mov mov (bad) add loopne call add add add adc and das add add push pop bound jb add mov add mov add aad jecxz in add add add add add add sbb add sub add inc dec fs test stos mov mov add into add fcomp out add and sub xor add push add pop add jo add orb add stos mov add (bad) int fildl jecxz add add add incl add add add add pop add das add add add add push pop popa add ja add (bad) mov add ror (bad) add add add jmp stc add add or adc add sub add add inc add dec add add push test mov cmpsl add add add rcr loopne testb add pop push add add sub cmp add dec add push pop add arpl jae add add add mov les int fnclex add in repnz add or add add add add add sub add aaa add inc dec add add add add js add mov mov rol aad fucom jmp add add add adc add sbb inc add push add pop popa push addb add add rolb fiaddl jecxz icebp clc incl or add daa add cmp inc add push add add jo add xchg add mov aam add jmp add add add or xor add inc dec add push add add add orl add add add leave add fchs add add in repz add add add adc sub inc add push add add imul add add add aam add add add in add add add add or add pop add add add cmp dec push pop add bound add insl je (bad) mov scas mov mov aad add loopne out cmc cld add or adc mov mov add add aam loop lock or adc add inc add add add add add add loope jmp add cld add adc pop add xor add add add cltd mov mov rol add fucom add out cmc add add add add add add and cmp dec push push pop gs add add jns xchg add xchg add add sahf add add add iret (bad) fiadd add add add incl or add das add inc inc dec add add add data16 add add jne jge add mov add cltd add add cmpsb lods mov ret add add add ljmp add sbb daa add cmp add imul add add movsb add rcr (bad) in add testb add add add sbb inc add add add push add add push jb add add scas mov mov loope jmp add or add sbb add add xor inc dec push add data16 jo add add test popf add cmpsl add add add rcr loopne out add add sti add add add add add add xor add add dec push pop pop add imul mov cmpsl add mov add ror add add add add out add add add add push add adc add sbb add add das ss pop add add jae orl add rcr loope add clc incl or pop add add xor cmp inc dec push add add jbe add xchg add test mov add add loop add in add add add sbb inc inc add add pusha add js xchg mov mov mov rcr loopne jmp push or sbb add add add cmp dec add add pop arpl js add add cmpsl scas add add roll add add add repz add add or add add and add xor cmp add pop imul add add add add xchg add add add into aad jecxz add add add add add adc push and cmp push pop bound jb addb mov mov mov add loopne jmp add push add add add sub aaa add inc add add add outsb add jg add nop xchg sahf movsl lods mov ror add rcr loope add add add add push sbb add add push pop popa add js addb fwait mov mov add rolb add add add lock stc add add add sbb and add cmp dec add push pop add jo add xchg mov mov xlat add add out idiv add add movhps cmp dec push pop imul jl mov mov add roll fchs out cmc cld add or add add pop add add xor add dec push add insw je (bad) mov xchg cltd mov mov add fadds add call push or add cmp add push pop gs jae test mov add (bad) into aad add add jecxz icebp clc incl add add adc and add sub add aaa add add dec push add arpl imul add jg xchg test mov add lret fchs out lock add add sbb sub xor add add add pusha add add add lahf add lret fild add lock adc sub ss pop bound ja test stos mov mov add add call incl or push add add bound add je jl test stos mov mov fucom jmp stc add add or add and add cmp inc add pop pusha cmp inc dec push add pop bound push jae addl add add add add int3 roll (bad) call add add add add and add xor cmp dec push add bound ja add add add stos mov add into aad fucom jmp add add adc add and add sub add add add push add pop add add test test add leave rcl fsubp add cmc cld add add sbb daa add xor ds dec push add add jae addl mov mov add add in out add std add adc and sub add add inc add pop pop add jo jle mov mov mov add fsubp add hlt add incb sbb sub cmp add pop add jo js addb cmpsb add add add add fabs call add push adc add and sub add add inc dec add add add jp add pushf add ret add (bad) add icebp clc incl add add adc add add add add add inc add dec add push pop add jno jg lea lods add rcr loope jmp add movhps cmp dec add pop pop add imul (bad) xchg add mov roll fildl jecxz in cld add add sbb and add add inc add pop pop add jo jle mov add leave add fcomp add out cmc add add sbb sub cmp add push add data16 ja test add lods add add add xlat fsubp in repz add add adc add sub xor add inc add dec push add add jo add xchg add add rcl add out cmc add add add add adc add add add add aaa add inc add dec push add outsb jne orl add jecxz jmp hlt cli add add sbb add das ss pop add add add add addb add add into aad add out out add add push or add xor cmp inc dec push pop add imul add cmpsb add (bad) int add add in repnz add push add push and cmp inc dec push add jo add xchg cltd add mov rolb iret add add loope ljmp add sbb and add inc add add add add add add add add scas add add add loopne out cmc add add add add daa add aaa add add dec push pop pop add imul add add add add aad jecxz in repz add add adc pop add xor add dec push add pop add insb add addl xchg add add roll fchs out add std add or adc xor cmp inc add add add imul add mov add add and add xor dec add add add add jp mov cmpsl add int3 rcr add jmp add add add adc sub add add inc inc add add outsb js addl add mov add loopne add icebp clc incl add adc push and add add push pop add insl je add add mov add add fnclex add add add add add add add sbb add sub xor cmp push pop pop insw add add add cmpsb lods add int fildl add add add std add sbb xor add dec add pop add arpl add add add lea add add add rcr add call add sbb daa add xor add dec push push add popa push add add add add add aam loop ljmp or adc add sub xor cmp push add add pop add jae addl mov add (bad) int aad jecxz icebp add sti add add or and add inc add push pop gs jae orl mov mov fucom jmp add cld add add adc and xor add inc dec add push pop popa add add add scas mov add movl loope out testb add add sbb add add inc add push pop imul xchg nop xchg sahf movsl lods mov mov add fldl add in hlt add add xor cmp add push pop add imul popl xchg sahf add add add lret (bad) add add repz add or adc add and add cmp dec push add outsl add addb mov xchg cltd add mov add loopne out add add add add add add add add aas add dec push add outsb jne add add add mov fsub jmp add cld add adc sbb daa add add inc dec add push pop pusha add jno jg xchg lods add mov add add add fucom sbb sub add inc add add add arpl insb add addl xchg lcall rolb iret (bad) fldl out out cmc cld add adc sbb sub xor cmp dec push pop add jb jnp addl add cmpsb lods mov mov add add add out cmc cld add adc add and xor cmp dec dec add add add add popf add mov add into add add add out cmc add add adc add add and cmp add inc add push pop add arpl add addl xchg add fwait add ret add add add loopne add add stc add add add sub cmp inc add add imul add jge add movsb stos mov add add jecxz add hlt add std add adc sbb sub xor cmp add push add add add insl je jge add add add add add lret add (bad) add add add add add adc add and add xor add dec push add push jp add add mov add add in out add testl add add aaa add inc add push add outsb add add xchg add rolb fadds add jmp add add add or add sbb add sub xor add add add imul add mov add mov (bad) lret rolb (bad) add icebp clc add add or add and add add pop add add jle add mov mov add fsub jmp add add sti add add add add add add add add add add push add add ja test add xchg add (bad) add cmc cld add and xor cmp inc dec add add add imul add add mov add scas mov ret lret add faddl in in repz add adc add add xor add inc dec dec add pop pop insw je add test add nop xchg sahf movsl add add int fnclex jmp add add or adc sbb sub xor cmp add add add add add push add orl ret lret fiadd out add testl adc push and aaa add add and add add cmp add push pop popa add js sbb add add add add add push add pop add insl je add mov rolb add add iret (bad) add loopne add testb add or push add add add xor add inc dec push push pop add add js xchg lahf cmpsb lods mov ret rcr add add ljmp push sbb add add inc push add add add jle xchg add add int3 add fildl in add cli add add or add sbb das add add add add add push pop add add jbe test add add add movl loope out add add add or add sbb and add add add add inc add push add insw add ja test lea mov add add add add add add loop jmp repz add or add pop es add add add push pop add imul jnp addl lea add (bad) int fstpt add dec push add pop arpl js add movsl lods add add add add in repz add lldt add and sub add add add push add add pop gs jae jl mov xchg cltd mov mov add jecxz add add cld add add sbb add add add dec push pop arpl add add test mov xchg add mov mov (bad) faddl in add add add sti add or add add add add das add cmp inc dec dec push add pop insw add lea xchg popf movsb stos add add add mov add add fadds loopne out add std add or add add sub add xor inc dec add add outsb jne add add add add enter fchs out cmc add incl or add cmp add add pop add jo jle mov xchg add sahf add roll fildl jecxz add hlt add add add movhps push and inc dec push pop add add add add popl cwtl lahf add test add iret (bad) add add add add hlt add add push or sbb add jg lea xchg popf mov mov flds add add in add add incb push add add add cmp add dec push pop pop add imul add xchg cltd mov add scas add add (bad) add out add add stc add add or adc add add xor add aas inc dec add arpl add outsb jne add orl mov add add add rcr loopne out add clc incl or add add xor inc add push add outsb add jg add cmpsb lods mov mov leave rcl fsubp add hlt add add adc pop add add xor add add push pop pusha outsb add js addb add add ret add into aad add add out add clc incl add adc add add inc add add arpl add add add mov cmpsl add add add add fildl add in repz add adc pop add cs add dec add add pop add je add mov mov add fcomp out out cmc add add pop push add add sub xor add inc dec push pop pop insw add add orl add aad add add out add std add or add add add cmp add add add pop add add add add xchg add lret (bad) add ljmp add add add add add inc add push add add add jae addl add add add mov rolb fcomp add add add clc incl or and add add pop add bound add xchg stos mov add add add add add flds loope ljmp movhps cmp inc add add arpl imul (bad) add add add cmpsl add (bad) into aad jecxz add add add add add and inc add pop add add jae addl scas add leave rolb flds loope add repnz add incb sbb cmp dec add add add add addl fwait add movsb stos mov mov add add add loopne add in repz add add adc and add add cs add add pop insw add add xchg add add mov mov lds add add fsubp in add cmc cld add or sbb and add cmp add inc add add push add add add add mov mov add int add fsubp add hlt add add push or pop add add inc dec push push pop gs add add lea lods mov ret rcr fild call cli add or pop pop es aas add add pop data16 jo add add mov xchg fwait mov mov xlat add out out testb incl or add sbb add sub add add dec add add add add add ja test add add add leave add add add in add add std add add and add add pop arpl add addl mov add add add add add add add in add std add or add sbb add add cmp add inc add add pop add ja add add add rolb add faddl add in repz add add adc and cs add pop add outsb jne test add stos add roll add add add jmp pop push adc xor inc add add add add js test mov mov iret add add loope add in hlt cli add add pop push adc add add inc dec add add add add fiaddl add add out add incb push add add add sbb add add add add imul jp mov add add add add add mov mov add fucom add add add add add add or add sbb add xor dec push add add add add addb mov mov rcl fsubp in repz add or add add and sub xor inc dec dec push pop add add js add add lods mov ret rcr add call add add and add cmp add push pop pop add imul (bad) mov add add lods add add mov add fiaddl add jmp stc add push add sbb add add dec add push add pusha outsb jne jge add stos mov add add jecxz icebp add add add add sbb add add add add add add add inc add add pop add imul test add mov add add in add icebp clc add add ltr pop es add inc dec dec push pop add push jg lea xchg add lahf add mov mov into aad jecxz jmp hlt sti add or adc sbb and sub add add aas inc dec push add insb jae addb mov add ror (bad) faddl add add add add pop push add add add add sub add add aas add dec add add bound ja test stos mov mov add aam add in repz add or adc add sub add cmp inc dec push push add popa push addb mov cmpsl add add les int add fldl add out add add add or adc sbb and add sub xchg add mov add add fsubp in repz add add sbb add add add add add add add add stos add lds add (bad) add add out cmc add add or add add das add aas inc add add push pop pusha add jno add add mov stos add add add add fucom jmp hlt sti add add adc add sub xor add add add add add add add mov mov rolb add xlat fiadd add stc add or adc sbb daa add add add add add outsb jne add movsb stos add mov mov fsubp add hlt sti add add add add sub cmp inc dec add add popa push jg add nop add add rcr loopne add idiv add or add xor cmp dec push add pop add jae add mov mov mov add add jecxz add add add adc add add push and add add dec dec push pop add data16 jo add mov stos add add add add fsubp in add idiv add add adc xor add add add add dec add add bound add add add mov add aad jecxz icebp add add lldt add add das add add inc dec dec push add add add jg lea mov into aad add add out add add push or add add add cmp dec push add pusha add add addb stos mov rol add fldl out add std add push or add push push pop add jne add lea add scas mov add add leave rcl add add add in add cld add add add pop push and add add add add add add add cwtl lahf cmpsb add mov mov add (bad) in incl add add add add sub xor add add add dec push add insl add jbe add orl ret roll flds loop add add sti add adc add sbb add xor aas inc dec add imul add add test add fchs out add add add add add add add add sub push push pop add je (bad) mov xchg add fwait mov add add loop lock add jmp add add add pop add das add add add ds dec push pop popa add add insl jne add add xchg add mov fadds add add add stc add add adc pop add sub add cmp arpl add add add jle add popl add add (bad) add add add icebp clc incl or pop add add ds dec add add gs jae add jle add mov mov fsub ljmp add adc add and add dec add add add add arpl imul add add addb mov mov faddl in add cmc add add sbb xor inc dec push add add jno add add test lea add add add add int fninit ljmp push add add add add add inc add dec add pop bound add add jl add add ret int3 rcr add add add add repnz add add add or add sbb add and ds dec push pop popa push add test add mov mov xlat fiadd add out cmc cld add add add sub xor cmp add pop imul add lcall mov add add flds add add add add cld add add push adc cmp inc add push pop add add add add nop sahf cmpsl add (bad) into aad fsubp in add cmc cld add add or add add and add add add add add dec push pop popa push jp mov cmpsb add add add add add jecxz icebp add add std add pop push adc sub add dec push pop add add add add add add add add add mov mov loope add add add add sub add cmp add push pop add push mov add xchg add add mov xlat fsubp in repz add add add add add and add push add add lret add add call add add adc add add and add add add inc add push add add push js orl add aad add jmp stc add add add adc add dec push pop add add add add xchg add (bad) int add jecxz icebp add add add pop add add sub aaa add push pop arpl js xchg movsl lods mov add leave shl call cli add or sbb es add inc dec add add add insl je add mov mov mov fsub add in add testb add push adc xor inc dec add push pop add arpl js xchg stos mov mov roll add add add add lock add adc add and add add add add add pop add add jb addb nop xchg sahf add cmpsl scas mov add fucom add hlt sti add add or and cmp inc dec add add add mov xlat add out cmc cld add add adc and das add aas inc dec add add data16 jne jge mov mov ret add int fnclex jmp add sbb add add add inc dec push push pop add add add add add add lahf add lret rcr add call add add sub inc dec push add jno jle xchg cmpsb add lret rcr loopne add testl add add adc cmp add add push pop add add add add mov add xlat fsubp add out idiv add pop push add sbb cmp add add add pop data16 add add add ret xlat fiadd out out add add push or sub cmp add pop pop add imul add lods mov mov add loop lock add add add add ss add add imul addl xchg add rol aad fldl out hlt sti add add or add sub add popa push test add cmpsl scas mov add faddl in add add add add push adc add ss add add add add mov cmpsl scas mov add add add rcr (bad) add cmc cld add adc sbb sub add aas add add pop add add add jp add mov add mov ror aad jecxz in add add add sub xor ds add dec push pop arpl add jnp mov add stos mov add add rcl add out hlt sti add add adc add add add cmp add add add add add jle xchg (bad) xchg add mov add add stc add or adc push add add cmp push pop add add jbe test mov add add add add fcomp out hlt sti add add add and add add inc inc add pop add je jl add add add mov add add fnclex add add hlt add incb add add add add sbb sub cmp add add pop pusha add add add jge test add add add add int3 rcr loope add repnz add add adc and add add add aaa add add add inc add add pusha add add add movsl lods mov ret rolb add fldl in repz add add adc and add xor aas inc add pop arpl add add add lahf cmpsb lods add rcr add jecxz add add add add and sub add add cmp add inc add pop add add je (bad) mov mov rolb iret (bad) add out add cld add or add add inc inc add pop add add push jno add jl add lea add add stos mov rol add add loopne out add add add add or adc add cmp push add cmp inc dec push push pop gs jae add test mov add mov add ljmp sbb sub add cmp dec push pop fs add jne add mov nop xchg sahf cmpsb lods mov add add add rcr add add ljmp add sbb sub ss pop bound jb add addl mov add mov jmp pop add adc pop es dec push pop pusha add add xchg add add add add add mov add add loop add add add add or add add xor add dec push add pop insw add ja add add lods mov add add add rcl fsubp in add testb push add adc add add xor inc add push add imul (bad) xchg popf movsb stos add add rcr loope out add incb and sub add inc dec push push pop gs jae add test add movsl lods mov ror rolb add add in add out add add add push add and dec dec add gs jae add add mov rcr loope out add incb add and inc dec push push add add add add add scas add add mov add add add out out cmc add add or sub add cmp inc dec push pop add imul jnp add test mov les add into add add loopne call add add or add add and xor inc inc dec add pop add jne orl mov add (bad) lret loopne jmp or add sub inc dec push add add js add mov add (bad) int (bad) add add loop add add add add sbb inc inc dec add pop insw je jl test add add xlat fsubp in repz add add sbb add add aaa add dec dec push add add add add add lods add add aad add add jmp add push add add add add add dec add add add addb (bad) xchg add add add add add jecxz jmp add cli add add add adc xor inc inc dec push pop add add jge mov mov mov (bad) fucom add repz add sldt sbb add sub aaa add dec dec push add add jnp add mov add rolb flds add add in add add add add adc sbb and cs add bound ja jg xchg lods add shl add repz add or pop push add add add cmp add dec push push add add add add add test add mov rcr add out out testb push add adc sub xor inc add add add jbe test test add add mov rcr add add out out testb add add adc add and das ss add add popa add ja test add mov ror add fiadd add jmp add add or adc sbb cmp inc dec push push add popa push add jmp add add sbb daa add add add add add popa push add movsl add add aad add jmp add add or adc and sub ss add pop pop data16 jo jle xchg movsl add add mov rolb iret (bad) add loopne call add push add sbb xor dec push add add outsb add add popf movsb stos mov add enter add add ljmp add add and add add add add outsb add add xchg cmpsb add add mov add add lret add aad add add out idiv add adc add sub xor add add add das add cmp dec add pop add imul add test movb add add loopne out add add add add adc sbb add add add add add add add add add add jbe test add popl xchg add add rcr add jecxz add add add or sbb add add add add cmp push add pop add jne jle add movsl add scas add iret add fiadd add add idiv add push adc daa cs push add arpl js addl lcall add add lret add add add in repz add adc add add sub add add cmp pop popa push xchg mov add add into aad jecxz add add add add add and cmp pop add jo add mov add add xchg popf movsb stos mov add add lret add add add add add add out cmc add add sbb add xor cmp dec push add insl add addl xchg cltd mov mov add add rolb fadds loope add repnz cld add or adc and xor cmp add dec add add jno jg xchg cmpsb lods mov add (bad) (bad) call add std add adc add sbb cmp dec push add pusha add jns addl mov add mov add add into add add fild or sbb sub aaa ds dec add imul mov add add add add out out idiv add push add adc sbb daa add xor cmp inc add dec push pop add add add jbe test popf add add add add (bad) add add out cmc add add add add adc and add aaa add push add jno jp add add add mov mov add aam faddl in repz add or add add add add cmp dec add gs add jbe test (bad) lret rcr add jecxz add out cmc cld add add push adc cmp inc dec add push pop add outsl add xchg stos mov mov add (bad) add ljmp adc pop push and inc dec push pop pop add add add sahf movsl lods add mov add fsub jmp add add add pop push add sbb add add cmp inc add add add imul add add stos add add aam faddl in add add add add or pop push sub aaa ds add pop add jns add add cwtl lahf add add lods add add (bad) add add out cmc cld add add add add add xor inc add push pop add outsb jne addl xchg cltd mov mov lret add add jmp stc add push adc sub inc add pop bound ja jg add add scas mov add movl in repz add add sbb add add add add add arpl imul add mov add mov (bad) xor cmp add inc dec push add pop data16 add add jp mov xchg cwtl lahf add (bad) add add jmp add add incl add add adc sbb add xor inc add add add pop imul (bad) mov add add add add add in add add clc incl or add sub add xor cmp add add push add add jo jns xchg stos add mov add int3 add fnclex ljmp adc sub dec push add add imul jnp add popf add mov iret xlat add add add icebp clc add add adc add add push add sub add add add add add add jg mov xchg add add add roll add in add sti add adc add daa cs add add add pop add je jge add mov add add add rcr loope jmp add add adc add add add add aas inc dec push pop arpl jae add jle mov scas mov mov fsub add add cmc add add and sub xor add add add add add arpl add jne add add movsl lods add mov (bad) lret add fildl jecxz add hlt add add add add add add add add add push add add add jl add lea add roll add aam fsub add add add repnz cld add adc add and sub add add add cmp dec push pop add outsb jne jle mov mov mov add add add loopne call add push add push and push pop add imul add add addl cmpsb add int3 roll fsub ljmp add add add add sbb and sub add cmp add pop outsb jne add add mov xchg add mov lds into aad jecxz add hlt sti add add sbb daa cs add dec push pop pop add add js orl add add fucom in repz add add push adc daa add xor add dec push push pop gs jae add cmpsb add add iret fadds out idiv add pop add add pop add das add ds add dec add data16 jo jns addl add add add lret add add fldl in add add add cld add push or and add add add push pop popa imul mov lods mov add add add add fldl out out cmc add incl add adc sbb and xor add add dec add pop arpl imul xchg nop xchg sahf movsl add scas mov (bad) lret add fnclex jmp add add or sbb add add cmp inc dec push pop pop dec add pop pusha add movsb stos mov rol rcl add add out idiv add push add add xor ds dec push pop add jo jg add add (bad) add fldl add in hlt add add adc add add add cs add add inc dec add add insl add add add mov xchg cltd mov mov add ret int3 add add fsubp add cmc add add and add xor add outsb jne addl xchg cltd mov lods add add add flds loop add repnz cld add add push adc add add add add dec add popa push test add add (bad) add loopne add jmp stc add add or sbb sub ss push pop add add orl scas add aam fucom add out cmc add add pop push adc add inc inc dec push pop add add add mov xchg fwait mov les int3 add fsub ljmp add adc and add xor add add inc dec add pop arpl jb addb (bad) xchg popf add add add add faddl in repz add sldt sbb add sub xor inc inc dec add imul add add add test mov mov lret rcr loopne add add repz add add add adc add add add inc add pop pop add jbe add xchg movsl lods mov ror add roll add in repnz add add adc and cs inc push add push addb mov add leave rcr add call movsl lods mov mov fildl add in add add add in add add incl add add add xor inc add push add push addb mov add add add add add (bad) add add jecxz jmp add cld add outsl jge mov add cmpsl add mov mov fldl add add lock add add add adc sub cmp push add insw je add mov (bad) int fnclex add icebp clc incl add adc sub inc add push pop add insl add test add add xchg cwtl add add mov add add in add lock add add add add add add inc dec push add pop popa push add add add add add add mov add add (bad) add add repz add or add sbb add and dec dec add pop pop add js addb mov add xlat fsubp jmp hlt add add adc push and cmp add dec add imul mov add add add add into aad loop lock add push adc xor add add add add add xchg cwtl add mov add rolb add fsubp add out add incb push add add adc and cs inc dec push add add add add jo add addb add add enter add out add clc incl add movhps add add and add add add add cmp add add add add jae orl mov mov add add in cld add and add sub add add add jb jnp add lods mov ret add roll add add add out cmc cld add adc sbb add add sub add xor cmp inc add add push push pop gs jae addl movsl lods add into aad add out add add incl or sub add cmp add add add add add jno jns add xchg pushf mov add add lret rolb add fldl add add add stc add add or adc and add xor cmp inc dec push pop add bound add jp add mov add mov add add leave add fadds add add add add idiv add daa add add add dec push pop pop insw add ja test add add aad add loope add in repz add adc sbb add xor aas add dec dec add pusha add push jno add add add popf add add rolb add rcr loopne out cmc cld add add push adc sub dec push add add add xchg lods add add (bad) add add call add add add add pop push and add push pop add add add jp (bad) mov add stos add rolb leave rcl fiadd add out add incl sbb add add xor add inc add add pop add add add addb add add int fnclex jmp add add adc pop add xor add add add add jg lea xchg pushf add add lret add add in repz add or add add add sub xor inc dec push pop arpl js add orl test mov mov add icebp add add movhps cmp add add push pop add outsb jne add add add add int add add loopne out add clc add add add or add add cmp add inc add pop pop insw add orl mov add or add adc add add add add add jne add add mov mov mov flds loope ljmp or sbb add add add aas inc dec add pop addr16 test add les int fnclex jmp add add clc add add or push add add xor ds add pop add jns addl mov add rcr loope out idiv add or add add xor add dec push push add push add add mov add add mov (bad) lret add aad add add add icebp add add jl xchg mov add lcall rolb lret add in add sti add sbb add add inc add dec add push pop add add push mov add rolb add fsub add add cld add add add pop es dec add pusha push xchg mov les add add flds jecxz add cmc cld add adc sbb add add xor add cmp add dec add add jo jle xchg ret fadds loope add repnz add add add pushf test mov add int add (bad) out add clc incl or add xor add inc dec push add add add add jg add add stos add mov add ror rcl add add add add add add or add cmp add push pop bound add add add add add add add mov add add enter (bad) in add add add or sbb sub add add push pop data16 jle add (bad) xchg sahf movsl lods mov add mov fadds loopne add clc incl or xor add add inc add add insw jne add xchg add add mov add ror xlat fsubp in repz add adc push add daa add xor add add push pop pop add add jg lea xchg pushf movsb add lods mov add add enter rcr add in add add add add add adc pop add add xor inc add add add pop add add js addb (bad) xchg popf add cmpsl add int add jmp add sbb add add xor add inc add add pop add add add add orl add add rcl add add ljmp push add pop es add dec add push pop add add mov mov add movb iret add add loop lock add add add add add add add aas add add pop pop insw je add add add iret add add loopne add add cli add movhps push and cmp dec push add add add add lea add mov add enter add out hlt sti add adc add add sub add inc dec add push add push mov scas add iret add add loop lock add and xor ds add dec push pop fs jae jnp mov add (bad) into aad add add add idiv add add adc add add sub add inc inc add pop add jne orl movsb add scas add add mov fcomp out cmc add incb xor inc dec push add imul test lea add add add add (bad) jmp add add add add add sub xor add add add add pop add jno add add add add rcr loope add in add idiv add sbb inc inc dec add add add jg add cmpsb scas mov ret lret fchs out lock add adc and das ss pop bound js add mov add repz incl add add add and das aaa ds add add add add add add xchg stos mov mov fucom in repz add add add inc add dec push pop pusha add jle pop bound imul add cmpsb lods add add loope jmp add add sub add add add add add add jp add add add mov add jecxz add hlt sti add or sbb and cs add dec push pop add add jae add add mov rol iret add fsubp in repz add sldt sbb daa add add aas inc dec add add outsb jne jge mov mov ret add int fnclex jmp add sldt sbb and sub aaa ds dec push add add add add add add mov xchg lcall (bad) int add in stc add add add sbb add add cmp dec add pop bound ja add sahf movsl add add rcr loope ljmp add add adc cmp add add push add add add outsl jbe jg add cmpsb lods mov add add movl add out idiv add add or sub xor inc dec dec add pop add add jae jl add lea add add rcr add add add add add adc pop add cs push pop pusha add push js xchg add mov lds int add in icebp stc incl or and aaa add dec push pop arpl jae add add add add test ror (bad) fucom jmp hlt sti add adc add add sub add aas add dec push push add push mov xchg lcall mov add loopne out add incb push or add and xor ds add add push pop pusha add add add jl add add movl add jecxz icebp add sti add add adc add sub add movsl lods add mov add add add add fiaddl add add out testb add sub add add dec add pop pusha outsb jne add rcr loope out add incb add add xor inc add push pop popa add add xchg add mov fldl in add add incb add or adc sbb add add cmp dec push pop arpl insb add mov xchg add mov add xlat loopne call add and add add add push pop add imul addl add add movsl lods mov ror add aam loop add clc add add or add and sub add add add pop add bound imul addl lcall movb add rcr add jecxz lock add or add add sbb add xor inc inc dec push pop add add jge test mov mov xlat fsubp in add sti add adc add and add xor inc add push pop pop add mov aad add in out add std add or add sub inc dec push add arpl add jnp add add mov add add mov mov add add add add add in add add add add add and add cmp add dec push pop add fs jae jnp add add stos add mov ret add add aad fucom add repz add add or pop add sub xor aas inc add push pop add add js orl mov add int aad jecxz icebp clc add add or add sbb add xor add inc add dec add pop add add (bad) add add (bad) xchg add add add fcomp out hlt cli add or adc and sub add xor add add inc dec push pop add add js add lahf add into add fldl out out add clc incl add add add and add add add add add push add add insw add add add add add movl add call push or sub add add add add pop pusha add push add add fwait mov mov mov aam loop lock add or add push and cmp add add add orl mov (bad) add fldl add out out add add pop push add add add add sub add add pop add outsl jbe test test movb add fcomp add out add clc incl or and sub add aas inc add push add pop add jo js add lcall add roll add add add add add add add add or add pop add add aaa add add add pop bound add addl lcall (bad) int add flds add in add add add add add add xor ds add add pop add add test stos mov mov add add adc sub aas inc dec add add data16 jge mov add (bad) rcr loope jmp sti add add or and cmp pusha add jge mov movsl lods add fcomp add jmp add or sbb and add sub xor inc add dec push pop add add add add add stos mov add add add add loope add repnz add or adc add add add add ds dec push add imul add add add inc dec dec push pop add outsb jne addl xchg add add add leave rcr fild call add add add add das aaa add add push pop data16 add xchg lcall mov add loop add repz std add sbb add add inc add add push pop add data16 jo js xchg add roll fiaddl add jmp repz add add adc add and add push add pop add imul popl cwtl add mov add into aad add add add repnz add add add add add add and cmp add pop add jo add orl leave rolb (bad) call sti add add or and add inc add push pop pusha outsb add add cltd add add add (bad) add loopne out testb add push adc add add inc inc dec add pusha outsl add test movsl add scas add rcl add add add add cmc cld add add sldt sbb add sub xor aas inc dec push pop arpl insb jae orl mov add ret lret add loop jmp repz add adc add add add ds add push add bound add add add add cmpsb add add mov mov add add add fsub add repz add adc add add and sub aaa ds add pop add jae jl mov mov add mov into add add out add add cli add or adc and das add add inc add push pop add jno jg mov nop cwtl add mov add enter in add add add add adc sbb and das add aas inc dec push pop add data16 jo jns addl mov add mov add add flds add jmp hlt add add adc and add add ds dec push pop add add add mov xchg fwait mov add fninit add add add add add add adc and sub add cmp add add dec push pop gs jae add test mov mov add movl add out add add add add or add cmp dec push pop add outsb jbe add add add test add add int add add in hlt sti add add add add add add xor inc add pop pop add imul (bad) lret add aad add loope out testl adc and cs push add add js mov add add int3 aam add in in add std add adc and add aaa ds dec push add add gs add addl xchg cltd mov mov mov flds loop add add lock add or push add add sub aaa add add add push pop popa push addb add mov add lret add add jecxz add out add clc add or and add cmp dec push pop add je add add add mov xchg lcall mov ret add int add fiadd add jmp add add or and add ss pop xor add add pop bound ja add mov add xchg lcall rol (bad) fucom jmp stc add add add add add sub cmp inc dec add add insl je (bad) add mov rol aad jecxz add cli add movhps push add sub ss add imul (bad) mov mov add add add iret (bad) add loopne out add add add push add add add sub add aas inc dec add pop add outsl add jns add add add add rcr (bad) out add std add adc and sub aaa add add add dec add add add jo jle add popl add stos add add add add loopne add idiv add and add add inc push add add push mov stos mov mov add fiaddl jecxz add hlt add add add sbb add add xor cmp add add push pop popa add push js add add xchg add add add add add add rcr loope out add or add add push sbb add inc dec push add push xchg add add roll add fcomp add out add incb and sub xor add pop add add add ja add add mov xchg lcall rol add add add repz add add or sbb and xor cmp add add outsb jne jge mov xchg add mov add mov add (bad) add add add jmp stc add push adc sub add add add pop add add jbe jle xchg add test add add int aad jecxz add hlt sti add add add add adc sbb add es add add add push pop imul add add add add add (bad) int add jecxz icebp stc add or pop push add add add add add add pop bound imul cltd movsb stos add add add rcr add loope add clc add add or sbb add and sub add cmp dec push pop pop data16 add jns xchg mov les int3 rcr add add in add sti add adc push and add add add add add imul (bad) add add movl in out cmc add incb pop push add pop add add sub xor cmp inc add add add add add jno jg add add add ret add add fucom add add testb add or add and add add inc add dec add gs add jbe test mov xchg lcall add add add add add add add in in hlt sti add or adc and add aaa add add add dec push add pop add add xchg lahf add mov loop ljmp or add adc cmp add push add add jo jle mov mov add add aad add in add add incb pop add push sbb cmp inc add add add add jp orl add push add add add add inc dec push add add popa imul (bad) xchg add lahf cmpsb add (bad) int (bad) add fild add add repz add or adc add add add sub xor inc inc add push push push add add lods add add add fchs add out add incb add or adc add add daa add add cmp dec push push add popa push jp add mov add rcr loope add repnz add push adc add add cmp push pop arpl js addb mov xchg cltd add add enter add in repz add adc push add add cmp add pop add outsl jbe jg xchg (bad) xchg popf add add int add add loopne out add push push add sbb add pop add add outsb add ja test add add enter (bad) add out idiv add add add sbb add add add xor add pop popa add imul jne add add lahf add add fsub add add repnz add add or adc xor add add dec push pop arpl add orl mov add int aad jecxz add add add or add add sub add add add inc dec push pop popa add add xchg add mov add int add fsubp in repz std add sbb xor add add add add add pop add add ja test mov add roll add add in add cmc cld add or add add add das add inc add push pop add outsb jne jge test add add add lods add add leave add flds add add add repz add add push add add add add add cmp dec push push add add add add addl xchg add add mov rcr loope add repnz add or push add add sub add inc dec push push add push jp add mov rol aam add add loop add stc add add add sbb add sub add dec add add insl add add addl lahf cmpsb add add aam fucom add repz add add or add sbb add and sub cmp inc dec add pusha add jo add cwtl lahf add test add iret (bad) fsubp add add add add pop push and add push pop popa add jb addb stos mov mov add add add add jmp stc incl or add sub add cmp add push add add add addb lods add roll fnclex add in add sti add add sbb sub xor cmp add dec add push pop add jae orl add mov add lret add add in repz cld add push or add sub add add push add bound ja addb movsl add add add add fchs add jmp add add add sbb and xor add inc dec add pop add jp test add lods add mov les int3 rcr add ljmp add add ltr add add and sub cmp inc dec add pusha add jge add add add add add lret rcr add add add hlt add incb sub xor add cmp dec push add add jno jg add add scas add aam loop add add sti add or adc sbb add sub add add aas inc dec add arpl insb jae addl add add roll roll add add in repnz add add add add add sub add xor add push pop arpl add add jno add (bad) mov add xchg add add iret (bad) add in in add add add add add adc add inc add pop add add add add add mov add leave add fcomp out out idiv add add add or add sbb add add add add add add mov scas add add add (bad) call add add sub inc dec push pop popa push jp orl add mov add add lret rcr loopne out cmc add add adc and sub add add add push pop gs jae add xchg mov xchg sahf movsl add add enter rcr loope add add hlt sti add adc sbb add sub add add dec push pop add add add add add sahf add add stos add mov mov add jecxz add add add or sbb add add add add add add add inc add add pop add push jp (bad) add mov add xchg add add mov xlat fiadd add jmp add std add adc and add sub add inc push pop add imul xchg add mov xlat fucom jmp hlt add add or add add sub add add add dec push pop arpl add xchg lods add add fnclex jmp add add add sbb add add add add dec push pop add add push js addb add mov add add out add add sti add or adc sbb add add add xor cmp dec add pop pop data16 ja jg lea add add add add rolb add add out add add add ltr add add add add inc add pop add add add jnp add mov add ret add rcr loope add repnz add or pop add add sub add add add dec push pop arpl imul jp add sahf add mov ror add fiadd out hlt sti add add add sbb add xor cmp add push add pop add add addl add mov lods mov add add fucom jmp stc add or add pop add add inc add dec add push pop popa push addb cltd add mov (bad) add loopne out add add add or push add add add and add add inc add add pop add gs add add addb mov mov add enter add loop add repz add add adc sbb sub add add add inc dec push pop pop add imul add add add mov mov add fiaddl jecxz jmp add cld add or adc add sub cmp inc add add insb jae addl lcall mov add add add add repz add add add add pop add add sub ss push pop add add add jb add add xchg (bad) xchg popf add ret add add aad fldl out out cmc cld add push or sub xor inc dec add pop add add add orl mov les int3 add fsub ljmp adc sub inc dec push pop pusha add add jnp mov add stos add lret rolb (bad) call add sbb xor add push add add addl add mov rolb loop add add add adc add add sbb cmp add add push pop add push add orl add add xlat fsubp add cmc cld add add add xor add add add add add pop add je jl add movsl lods add aam add in repnz add add adc pop add add add aas add add pop pop insw add jle xchg add (bad) add in add add add or adc cmp add add push pop insl add add add mov xchg add pushf mov (bad) int aad jecxz icebp clc add pop add pop add daa add xor aas inc dec push add jno add dec push push add popa push addb add add lods mov add add add iret add fsubp add add repnz add add adc add add add sub inc add push add add imul add nop xchg sahf add test add add add add add add call add sldt sbb add sub add add cmp add pop add add ja test mov mov roll add fsub ljmp or adc and cs push pop popa push add cwtl add (bad) lret add add add loopne add add cli add add or add sbb inc inc add pop imul addl mov mov aad jecxz icebp add add add adc pop add add xor cmp inc dec dec add add pop bound add add js add add stos mov add add add add rolb (bad) add icebp add add or push add and sub xor aas inc add push push pop add push jg cwtl add add add test mov add roll lret add add in repz add add add add sub cmp inc add add pop data16 jge add add add add rcr loope add clc incl or xor add add inc add push pop imul addl popl add lcall add mov fnclex jmp push or add add push pop add add jle mov xchg pushf mov add add rolb add rcr add add add repz add add or push sbb add aaa ds add add add add insw add add mov mov mov add jecxz add hlt sti add add adc add add add add add add add cmp add dec add push pop add add push js xchg add test mov (bad) lret rolb add fucom in repz add adc add sbb sub aaa add add add pusha outsb jne jge mov mov add movb rolb adc add es inc add add add add pop add outsl jbe add orl add lret add add ljmp adc push add add xor ds dec add add insb jb add add add add add lods add rol aad jecxz add out cmc cld add or add add xor add add dec push pop pusha add add insl add jbe test add ret lret add add add loope add add add add add add add add sub cmp dec push add add push xchg add mov ret int3 rcr loope add icebp stc add push add add add add cmp dec add add jo add orl mov mov add add (bad) add add add add stc add add adc and cs dec push pop add add jl mov xchg lcall mov xlat fsubp add out testb add add add add add and aaa add add inc dec push pop pop data16 add jns xchg popl add add lds into aad jecxz add add add stc add and xor dec add add add jbe test mov mov (bad) lret rolb add loop lock add sub add add add push pop pop insw add add add xchg fwait add movsb add dec add push mov xchg add add sti add or sbb and add add inc add pop add jae addl xchg fwait mov mov rcr add add add in hlt sti add adc add and sub add inc add add add add add lahf add mov add add add lock add add and add xor aas add add dec add add outsl add jnp (bad) add scas add add add add loope out idiv add or and add add popa add imul jl test lea xchg pushf mov mov add loope ljmp ltr pop add das add add dec add pop add push jnp mov add int3 add add in add sti add or sbb and sub add aas inc add pop arpl jae add jle mov add mov mov add add (bad) in hlt sti add add adc and add xor add inc add add push pop add add add addb stos add mov ret add int add in repnz add sldt add add and xor inc add dec add add jno jns add add mov ror (bad) fsubp in add cmc std add or adc add xor add outsb jne orl test int (bad) add jmp add add add or xor cmp add add add add add imul mov rolb rcl fsubp in add add add add or and inc dec push pop popa add jns add mov mov add jmp hlt sti add add add add add and add add ss dec add push add pusha add add jnp add add add (bad) int add fsubp in add idiv add push push sbb cmp add inc add push pop pusha outsb add js orl mov add enter flds loop lock incl pop push push sbb xor pop gs add add xchg lods add mov les int3 roll fsub ljmp sbb add aaa add inc dec push pop bound jno add add add add test mov mov fsub ljmp adc daa das add add dec dec push add data16 je (bad) mov xchg cltd mov add add in repnz add or add add add es add add push pop arpl add outsb add add add add lds add add add add outsl add test mov add add flds add in repz add add adc add sub ss add push add push add add pushf mov scas mov add movl out hlt sti add add sbb and das add add inc dec add add popa push addb add scas add mov lret add out lock add add adc add add push and add add dec add add pop add add add add movsl lods mov add mov (bad) fucom add in hlt sti add add and add cmp add add add pop add add int add fsubp in add add incb pop add push add add das add cmp inc dec dec add gs add add test add scas mov ret add add fnclex add icebp clc incl or add add add add push pop add outsb add add jnp add add movsl add add add loopne add testl adc add add jno add addl add mov rcr fild add out testb add or push add add add xor inc inc add add add add add add add add add add add add iret (bad) fucom add hlt sti add or add and add cmp inc add add add add pusha add add jns add fwait mov add add add add fildl jecxz icebp clc incl pop movhps xor push pop pusha outsb add js add orl mov rcl (bad) add lock adc sbb daa cs add dec push add add add jb add lahf cmpsb lods mov add lret add add fcomp out out add clc incl or push add and cmp push add imul jp add add add lret rolb add add loopne out cmc cld add add push adc daa add add xor add inc add add insb add add add jnp orl scas mov mov fnclex jmp cld add add add add adc sbb and add xor add push pop lods mov add add lds add rcr fild out cmc cld add adc add and xor inc add push pop imul jne add addb mov ret lret fild add lock add add sbb sub ss push add imul addl add sahf movsl lods mov ror add fsubp in repz add add or add add sub xor inc inc add push add pop bound jno jg lea add add fwait mov mov add (bad) add add add idiv add sbb add add inc add add add add jns add add sahf movsl lods mov add leave rcl fsubp in add sti add add add push add add sub add dec push add pusha add imul mov add mov fchs add out idiv add pop push add sbb cmp add add pop imul add cmpsb lods mov mov add fsub add in add cld add adc pop es dec add add imul add test add rolb fildl add jmp stc add add push sbb add dec push pop bound add add orl test mov les int fildl jecxz icebp add add push add add add xor add add add add insl je (bad) mov add add rcl fsubp in add add add adc add add add add xor add add inc dec push pop add add outsb jne add addb popl xchg add add mov add lret rcr add call add add push add es add dec add push pop imul jl mov add add aad add out out idiv add adc and add ss add pop add add jle mov mov mov add add add add cmc add incl or add cmp dec push pop pop add imul xchg pushf mov add mov add add aad fldl out hlt add add or sbb add xor add add add dec push pop add add add cwtl add add mov loopne add add add add adc add sbb sub xor aas add push add add jo jle xchg stos add add mov add add rolb add add in in add add clc incl add push sbb das add inc add add pop add add addb add stos add add roll add fsubp in repz add add adc add add and add xor add add add add add add add xchg movsb add add add add fadds add loop lock incl or sub add xor add add dec add pop gs add add test add (bad) lret rolb fnclex add icebp add add add adc add sbb and cmp dec push pop pop add add jae orl mov add add loopne call push or add inc add add insb add jbe add add mov mov add jecxz jmp add add add add add and add inc add push add add add imul mov xchg add pushf mov add mov rolb add fildl jecxz icebp add add add or add sbb xor cmp dec add push add imul add add add enter flds loop add add add std add or add add ss add dec push add pop imul jp add mov movsb add rcl fsubp in repz add add push adc daa cs add add add (bad) add lods mov mov and ds add dec add add pop arpl add xchg nop xchg sahf movsl add (bad) into add fiadd add add testl adc pop add add add add add add add add add add xchg add add xchg popf add cmpsb scas add add add add loop jmp add cld add sbb sub add add dec orb test mov add add in in add cld add add add add xor add add add insb add add add mov mov add ljmp add or adc push add add sub cmp add add add add add add mov add xchg popf movsb add rcr fild add icebp clc incl add adc add cmp add dec dec push pop add add ja test add mov add add add fnclex jmp adc add sub dec push add pop bound add outsb jne orl mov mov add loopne out cmc cld add or sbb add sub add inc dec add pop insw add add add mov add add add add fsubp add hlt cld add add add add add add add ss add pop data16 add add test test int add in repnz add add add or sbb add add sub inc add dec push add add push add add test add add add mov add add iret add flds add add add add clc incl push adc sub dec push add add add add jle xchg (bad) xchg add mov add add aad fsubp in add idiv add add add adc add add add add sub xor add inc add add add outsb jne addl add mov movb iret (bad) fldl out hlt sti add add sbb daa cs add add add arpl add add add add add leave rcl add out out testb add add add add adc sbb add inc push push pop insw je (bad) add add stos add rcl add out add add add push adc xor cmp inc add add push push add add add jae add test add add mov add (bad) fiaddl jecxz add add add add push add pop add add das add add add add arpl add outsb add test add add add add add add add roll add add add add repnz add push adc sub add inc dec push push pop add push test stos mov sar add add add add sub xor cmp add add insb jae jl mov add cltd mov add add (bad) add add add add add adc pop es add dec dec push pop add add ja jg lea xchg popf movsb add (bad) aam loop lock add add add pop push add sub add add add inc add pop add jno add orl test mov add add jecxz in add add add add add adc add sbb add inc dec push add add add add add add add add roll add loop jmp add add add add add sbb and xor add inc dec push add outsb jne add cwtl add add add add in in hlt sti add or sbb add add add das add inc add add pop add outsb jne add addb popl add mov add xlat fsubp jmp add idiv add add sub add add inc add pop add jno jg xchg add add lods add mov add add add rolb fnclex jmp add sbb and add cmp inc dec add push add add imul orl add add (bad) into aad fiadd add out testb add add adc add and sub xor cmp adc sbb add add add cmp inc inc add pop add add add outsb add test add add flds add add out lock add add add add add cmp add inc add add add arpl add outsl jbe add popf scas mov add add add lret add aad jecxz icebp clc incl or add adc and add add cmp dec push pop add je jl add sahf movsl lods mov roll add roll fnclex add add sti add add adc pop add ss pop popa push addb mov add xlat add out add add add add or add push sbb add cmp dec add add push addb xchg cwtl add add add add add add add ljmp or add sbb sub xor dec add popa push add ja addb add add xchg add add mov lret add faddl in in add add incl add adc sub add add inc add push pop add add add add lcall rol aad jecxz in add cmc add incl or add add and das add add add add outsb add js add add scas mov mov loop ljmp or add and xor add add dec add bound push jb add jle add add xchg cwtl add mov add enter aaa add inc dec add popa add ja jg add xchg popf add mov rolb add add jmp add lldt add add das ss add dec add pop add add imul (bad) add mov add mov add rcr add ljmp add add adc sub dec add add add add jnp add test mov mov add add add in in repz add or adc add sub xor cmp add add add imul out cmc cld add add or push add add add add add xor add add pop add add insb add jge mov stos add mov add lret ljmp incl pop push add sbb add sub add add push pop add add insl je (bad) mov mov mov add (bad) call add or adc pop es dec push pop pop insw je add test add mov ret add add add fcomp add add icebp clc add add add adc sub cmp inc dec add imul addl fwait add mov rcr (bad) in add cld add add and add inc add dec add add add add orl mov add mov add lret rolb (bad) add add add add add add add push and cmp push add imul add add add test add add add mov add (bad) add out hlt add add add push adc add add add pop bound add je (bad) mov mov add cli add or adc and cs add push add add jo jle add add add add leave rcl fsubp in repz add or sbb add add cmp add add popa imul (bad) mov scas mov add add fiaddl add in add testb incl or add add and xor add add inc dec push add add add add js add mov xchg add add add fadds add jmp add add adc add add add add xor add add add dec dec add pop add add add jno jg lea add lret rcr add jecxz icebp clc add or adc sub add dec add push pop add add add mov add add lret add fsub ljmp add add and add add inc add dec push pop popa push add add lods add rcr add call add or push sbb add cmp inc add add push pop add add add add xchg add add mov add (bad) into aad add jmp hlt add add add push add sbb and sub add add add add add add ja test add add add add add add add roll add add add add repnz add push adc sub add inc dec push push pop add push test mov add add add add repz add adc sbb add xor add dec dec add pusha add push ja addb add mov add add rcr (bad) out cmc cld add add push adc add cmp dec push pop add outsb add add add ret add add rcl loop add repz cld add adc pop es dec push pop add add add jge xchg add mov add add loop add in add cld add add add add add cmp add add arpl add add add add mov add add add int aad in add cmc cld add or sbb daa add cmp add add add data16 ja test lea add add add xlat fsubp add hlt add add or add sbb das add add dec dec push pop imul add add add cmpsb lods mov mov (bad) add add repz add add sbb es add inc dec add add add add add add add mov rol xlat fild call add or add add add sub xor cmp inc add add add add add jno jg add add add xor add ds dec push pop add add add add add add add add jmp add add add adc add sub xor inc inc dec push add add add add jl test add cmpsb lods add rcr add jmp add add push or and add inc dec add add pop outsb jp add xchg popf movsb stos mov add add (bad) int3 roll faddl in add cmc std add add sub cmp add add push pop imul jne addl xchg cltd add mov add in add add testl add sbb add sub xor add dec push pop popa push add mov mov fucom jmp add cld add adc pop add das add inc inc dec add add add orl test out add decb add add add inc dec add add pop add add jle mov add faddl in add cmc add add sbb xor add imul addl xchg cltd add mov rolb roll flds add add out cmc cld add add add pop push and cmp add add add jg lea add add iret (bad) add out add std add add sbb sub add cmp add inc dec add add add add add movsb mov add add add add add in repz add add pop push and cmp pop bound ja add cltd mov mov add fsubp in add idiv add add add push es inc dec add add add add je jl add mov add add add (bad) call add add pop pop add das aaa add add push pop imul jp add add mov les into aad fucom add add add stc add movhps and ds add imul jne add add add add into add fiadd out add add add movhps push es add add push add add pop add outsl jbe add add add test mov (bad) lret add add add add movsb stos mov mov add loop lock sbb add sub add ds dec add pop data16 add add add stc add or adc sbb add add daa cs add add jns xchg stos add add add rolb flds loop out add incl pop push adc xor cmp inc add dec push pop add jae add add xchg lcall mov fldl out add icebp clc incl add add sbb add cs add pop imul (bad) mov add add lods mov add rol add add fiaddl jecxz add add idiv add adc add and xor add add add pusha add add jns mov xchg pushf add movsb add add add iret add add add ljmp add add add add and sub add xor add add add add pop add arpl jns add add add add lret aam loop ljmp adc xor add add add add popa push add movsb stos mov mov int3 rcr add ljmp add or sbb and add xor inc dec dec push pop add add jo jle add add lods mov mov add fucom jmp stc add or add add add xor cmp dec push add pusha add imul add test rol rcl add out add add incl add add add add add xor add add add imul add add add mov add mov add add in add add incb sbb add xor add inc dec push pop add arpl add xchg nop xchg add mov add mov add roll (bad) call add or sub add add add inc add dec push add add add addl xchg pushf add cmpsb lods mov (bad) jmp add add adc add sbb inc inc add pop add add js xchg mov mov int3 roll add (bad) add lock cli add add or adc and sub cmp dec add add add add addl lcall mov mov add add fiaddl add in repz add add or sbb add add daa add cmp dec push pop imul add jge xchg add add add ret add int aad jecxz add hlt sti add or sbb and add aaa add add add dec add mov add add leave rcl add add out idiv add add sbb add sub add add push add pop popa push addb add add add fwait mov mov rolb (bad) add lock add or push add add and sub cmp add pop add je jl mov scas mov add add add rolb fiaddl jecxz add cld add or add pop daa cs pop add imul mov lods mov add (bad) lret rcr add jecxz icebp clc incl add add push add and add add inc inc add pop gs jae add test add leave add add add fsubp add add add add or adc sbb daa cs push pop pusha outsb jne jle add add test mov mov fnclex jmp add or add add sub add cmp add add add add add mov add rcl fiadd out add cld add add add add inc add push add pop add add add mov rolb add into aad add add add icebp add add or add add sbb add xor inc inc dec add pop add add jae jnp mov scas mov add (bad) int fnclex add icebp clc incl pop add adc add and xor add add dec add add jne add xchg add (bad) lret add fiaddl add in repz std add sbb push pop add add add test mov mov fsub add add testb add or xor cmp add inc dec push add add add outsb add add sahf mov loopne out cmc add add sbb add cmp pop popa push test add mov mov add aad jecxz add add icebp clc add pop push add add sbb sub add cmp add add dec push add add jbe jle add mov xchg add add rcr add out cmc pop add adc add sbb and xor cmp dec add add add add jl add cwtl lahf cmpsb lods mov add lret add add add clc add add or sbb add add xor cmp push pop popa push add add mov lods add movl loope out testb push or add xor inc add add dec add add data16 jo js orl stos add add add (bad) add add call push or sub add inc dec push add data16 jne add xchg add xchg cwtl lahf cmpsb add add aam loop lock cli add or adc sbb sub ss add add insl add ja add xchg cmpsb lods mov ret add loop clc incl add add sbb add cs push add pop push test lea add add fwait mov mov add (bad) add add add idiv add adc add and xor add inc add dec add pop add add test add mov mov faddl in repz add adc add add das add inc add push pop add popa add imul add add add cmpsb add add iret (bad) fldl in repz add add adc and sub aaa ds dec add push add add outsl jbe add mov mov ret add fiaddl loop jmp repz add movhps xor push add add insb jae add jle mov add fildl jecxz add hlt sti add adc sbb es add dec push pop imul add lahf cmpsb lods add add mov add add call add sbb add cmp add add add arpl js add test add stos mov mov fucom add hlt sti add add add add add sub add add cmp add insw add add addb fwait add add ret lret fnclex jmp add or add pop es inc add add pop gs add jbe test scas mov add xlat add out hlt sti add add sbb and sub aaa add add pop pop add add js xchg stos mov rol iret add fchs out cmc cld add adc add and add add inc dec push push pop add add add addl add add add into aad (bad) sub xor inc inc dec push add add outsb add js add orl scas mov ret add int add fiadd out hlt sti add or sbb add add cmp inc add add add push add insb add add jns xchg add mov mov aam fldl add call add sbb xor add pop add outsl jbe add addl mov mov lds into aad add add out cmc add add add adc xor inc dec dec push add jbe add mov mov ret rcr loopne out cmc cld add adc add and das ss pop popa push jnp orl add enter add loope add add cli add add adc add daa add cmp add add jb add add movsb stos mov ror add fiaddl add add hlt sti add add sbb sub add add inc dec push add add add popa add jns add add add add add add xlat add add add add add add add inc dec push add pop arpl insb jae addl xchg popf movsb add add roll fiaddl add add out add incl add add jecxz add add add add movhps pop add add add xor inc dec add push add add jnp mov add rolb add add in add cmc pop adc sbb add add cmp inc dec push add pop add jo add orl add lods mov add add add lret add add add testl or add add add sub add add push pop pusha add ja add orl add mov add fiadd add out idiv add pop push add cs dec add push add add je (bad) add add mov add rcr loope out add incl pop push push sbb add cmp add imul add mov xchg add add add add add fsub add add testb add add add sbb sub ss add add add add movsl lods mov add aad fsubp in add testb add push adc add add add inc dec dec add add add insl je jl add add add popf add add add leave add add loope add add add add adc add and xor add add push pop add jb add add add add add add loop lock add add and sub cmp add pop pop data16 jge add add add aam loop ljmp or adc and add add add add dec push pop add outsl add add jl add add add test enter in in hlt add add add add sbb add ds dec push add pop add outsb jne jle mov add scas mov add xlat add loope out add add add add adc sbb add add add add add add add add add popa push addb fwait add add lret in repz add adc sbb add add add add add dec add add arpl add add mov add mov mov aam jecxz icebp add add sldt sbb daa add cmp inc dec push pop add data16 add jg add add scas mov (bad) add fldl in out add add push or add add sub add add inc add dec push add outsb jne test test add add fcomp add out testb add push add add add inc dec add add data16 xchg add add lods mov add add add rcl fsubp in add add incl pop add add add add add and add cmp inc add pop add add jle mov xchg pushf mov add leave rcl add out out add add add add or adc sbb add sub add add dec push pop popa push jnp addl xchg add add enter add out cmc add incl push adc sub aas inc dec add add add jle mov add (bad) int add add add add repnz add add add fiaddl add jmp add add adc add add cmp add lcall add add fnsetpm(287 in cmc cld add add adc add add xor inc add add popa insb jne add orl mov add aam out clc add adc add add add dec push pusha imul cltd add add add add out idiv push or sub add add add add orl rol rcl fiadd add icebp add add incb or add sbb add cs add add inc dec push pop gs add add jnp mov add xchg add add mov mov rcr loop add repz add add xor add inc add push push pusha jb add add add sahf add test add add inc pop push add add (bad) into aad in add cmc cld add push or and dec add add add add ja test mov mov add add add in repz add or add add sbb add and aas dec push pop popa push xchg (bad) xchg lahf cmpsl add add roll add jecxz add add incl push push sbb add aas inc add add push pop add add add xchg add fwait add mov add add testl sbb add add add add inc add push pop gs add add jp add movsb lods add aam add add add add repz add add add or add sbb add xor inc dec push push pop insw add add addl cmpsl scas add mov rcr icebp cld add push or add add add add add pop bound jae orl mov lret rcr add jmp repz add add add add and cmp inc dec push pop add add xchg mov mov add lret rolb fnclex jmp sti add or add and add add add add inc dec add add add push add add add mov mov add fsub add repz std add or pop add das add add dec dec add pop add add add test mov add enter aam add ljmp stc add add adc pop add add add add add add dec push pop add outsb jne add test mov mov add fiaddl add add add add incl add adc inc add pop add push add (bad) add add add add movl loope out idiv add add add add es add inc dec add add add sahf movsl add add add add fchs add add repz std add pop add add add sbb sub cmp inc add push push pop add add add popl xchg sahf add test mov mov roll (bad) add in add sti add add add push push add sub add add add dec push pop add add add add add add popl add add add faddl in repnz add add adc and add xor inc dec push add add add jns xchg add xchg lcall add add add fildl jecxz in repz add add add or sbb daa add aaa add push add imul jl test add nop add add popf add add add leave rolb add add jmp add add add add add xor inc inc add pop data16 jno jg lea xchg popf movsb lods mov add les add rcl fsubp add add clc incb pop push adc add dec add lret add add add loopne add add cli add add add sbb inc inc dec add push xchg add mov mov add add add cmc add add add and add inc add push add pop insw add add add mov add add add add iret add fchs add lock add or add add add add daa cs push add imul add nop add add add mov mov add add fnclex add add std add adc and add add aas inc add dec push add add arpl add jne add xchg mov add stos mov rol add add (bad) call add add add or add sbb and sub cmp add push add push pop pusha add push add jnp mov add add xchg add mov add mov mov add aam add add out cmc std add adc sbb add es push add add jno jns xchg scas mov ret add add aad fucom in add sti add or sbb daa cs dec add push add add ja test add mov add add int3 rcr loope out idiv add sub xor add inc add add pop bound jb add mov scas add mov add lret roll add fsubp add out add incb pop add add adc and aad add add jmp add add add adc sbb add sub xor inc push add add add add ja add mov add mov mov add add (bad) add add add in out cmc add incl add or add and xor ds dec add add pusha add ja test add scas mov (bad) lret add (bad) jmp add add add and inc add pop popa add imul add fwait add add add roll add add add in add out idiv add add add cmp dec add popa add js addb mov add int3 (bad) add in hlt add add add add add sbb add and add add inc dec push pop pop data16 add jg add add movsb add movb aad fiadd add add add cmc add add add adc add ss add push add pop add add add imul jp add add mov fiaddl add out out cmc cld add adc add and add xor inc dec dec add insw je add add cltd add add enter fsubp add out testl add sbb add das add add add add add push add bound add xchg cltd mov mov rcr fild add ljmp add push and aaa add dec add gs jae jl add add fwait mov add add add rcr add call add or adc add sub add add inc add dec add pop arpl imul add add add test mov les add aad add add add add cmc cld add add push adc sub cmp add pop pusha add jno add add add (bad) mov add int3 aam loop add clc add add add add sub xor cmp dec add add jo add mov xchg add add mov roll roll flds add ljmp add sbb inc add add push pop bound add je (bad) add test add lret add out idiv add adc add add add inc add add add arpl imul add addl xchg add add mov add add add in add add add push add sbb and add add cmp dec add pop pop data16 add add add mov add cwtl lahf add add add add and add cmp inc add add add add push js add mov scas add add add add add add add add incl pop push push add and add inc inc pop add add add push orb add add add rolb add jecxz icebp clc incl add add add and xor add cmp push push pop add jl test add cmpsl scas mov ret lret add faddl in add add add add add add sbb sub add inc inc add pop add jbe add pushf add cmpsb add movl out out add add add add pop push add add cmp inc add add add add add add addb mov mov add lret add add add jmp sldt add and add sub inc add push pop gs jae orl mov mov fucom add hlt sti add add sbb sub add aas inc add pop add outsb jne add xchg add add leave rcl fsubp in add add incl or and add inc add add insw add jle add mov mov add fsubp in add add stc add add add add pop add add xor add add inc dec add popa push add add add add into aad add in repz add add adc and sub aaa ds dec add push pop add outsb jne jle xchg add add aam faddl in in hlt sti add or add and add sub aas add push pop add imul lcall rolb add fchs add out testb push or and add pop add jo js orl mov mov add add loop icebp clc incl add or sbb add fild call add or and cmp dec add add add jp mov lods mov add add (bad) into add fsubp add add icebp clc incl add adc add and add xor inc inc add push add add imul jae jl mov scas add mov add jecxz add out add clc incl add add add add sub add inc add push pop add je add std add add adc push and inc dec push add popa add add add xchg cwtl lahf add mov add in repnz add add sbb add add xor cmp inc dec dec push pop imul add add lea add scas add iret (bad) add in add sti add add add and sub add inc add dec add add outsl jbe test add lds int (bad) fucom add add cld or add add add sub xor inc add add dec push pop popa add imul jne add addb add add cwtl lahf cmpsb add add mov aad fsubp add cmc add add add add add adc add sbb and xor cmp dec push add add pop add jnp add cwtl lods mov ret add (bad) add add stc add add add sbb daa add add inc add push pop imul jp mov mov add iret add fcomp out hlt sti add add add pop add add sub add add add inc dec push pop popa push test add mov add leave add rcr loope out add stc add push adc add xor dec push add add add ja jg lea add add fwait mov add add (bad) fiaddl add add out add add add or add add add add add add push pop arpl add add test add add add mov add rolb fchs add jmp add add push or sub xor add ds dec push pop popa push addb add add mov mov add fild out cmc cld add add sbb daa cs add pop add add add test add add ror add add add in repnz add push adc xor inc add add add add jb addb movsl lods mov mov aam jmp stc add or pop push add sub ss add popa push add add add into aad loop add repz add or sbb sub add inc add push pop gs add add xchg sahf movsl lods mov ror add xlat fsubp in repz add add and sub cmp add dec push add data16 jge mov add add cltd mov mov add add rcr fild add ljmp adc add and sub add cmp add dec add push pop add add xchg add mov mov fsub ljmp adc add and sub add inc dec push pop add data16 jo add add add add mov mov add enter (bad) in hlt add std add adc add sub ss add add outsb add add xchg mov add ret roll flds loop lock add add sub cmp dec push add pop popa add add jnp mov lods mov ret roll add fnclex add icebp clc add pop push sbb add add pop add add test stos add (bad) (bad) call add or push add add sub push add add ja add movsb stos mov add add add rcr add in repnz add or add add and sub cmp inc dec push push add push add add add (bad) add add call cli add or adc and add cmp add add add ja add add add add (bad) fldl in add add add add add sub aaa add inc dec push add pop add add add add add stos add int3 roll fninit add repz add add or add add add xor add inc dec add add push js add lahf add add int (bad) add add in hlt sti add or sbb sub add inc dec add pop add add add out testb add push add sbb xor inc push arpl imul xchg movsl lods add add aad fucom jmp stc add add push sbb xor add inc add push pop pop add add js add add add add jbe add add add add mov add int3 add add add add add add add or pop add and add cmp add push pop outsb add js add addl xchg lcall add add (bad) aam loop add add adc pop es dec add pop add add add test add (bad) into aad fucom jmp stc add add push sbb das add add dec push pop arpl jb add jle mov add xchg sahf add test mov add xlat fsubp add hlt sti add adc sbb add das add add dec add add insl je (bad) mov xchg cltd mov mov add rcr loope add in repz add add add adc add es cmp dec add pop add bound add insl je jge add mov ror add fiadd add jmp add add adc add add xor aas inc dec push pop add jno jg add add (bad) add fldl out out cmc add add add add sub add cmp add add add add add orl test add add add aam add in in hlt add add pop add and sub cmp inc add pop add jae jnp mov popf add add mov rolb add add in add add add adc add add and das add inc add push pop add jl add mov mov mov add add add lock add add adc push and dec add push pop add push jb jp mov add add leave rolb add loopne jmp push or sub cmp inc dec add add add jge test add lret rolb fiaddl add add call add push add add add daa add add add dec push pop pop data16 outsl jbe test add fwait add movsb stos add xor add add dec add pop insw add orl scas mov add add add int3 add fnclex add add out idiv add add add add add cmp inc add add add add jnp add add add iret (bad) fucom jmp add add add pop push adc daa cs pop pop add imul mov mov mov rcr loope add testl add adc and das ss pop fs add lcall (bad) add faddl in repz add movhps add add sub cmp add push add add jo add jnp add test add add add fiaddl add add out add incb push add push add add add sub xor inc dec dec add gs jae addl add add add lods add add rcl fsubp add out add stc add add or adc add add add add add inc inc add pop add (bad) add mov stos mov mov xlat add add jmp add pop bound jbe add add mov mov loop lock add add sub aas inc dec push pop add je (bad) mov add fldl in repz add add add add and xor ds add add pop pusha add add add addl xchg cltd add mov fucom jmp add cli add add add adc add add sub xor ds dec push pop add imul jne jge mov scas mov add add aad jecxz add add add add add add add adc add add inc add add pop pusha add jno jns add test test rol add fadds loopne out cmc add add add add sub xor push add add jge test add mov add add rcl fsubp in hlt sti add add adc add add xor aas add add pop pop data16 jl mov mov add loope out cmc add incl add add add and cs add add pop pop add add jns addl lcall add aam loop out add add add add adc add sbb sub cmp inc inc dec push pop arpl insb jae add orl add add jmp hlt sti add add add adc push and add inc inc dec add add add add add js add add add ret lret aam loop add repz add adc sbb daa add add add inc dec push add add insb jae jnp mov xchg add pushf mov movl out hlt sti add adc add and add add inc inc dec add add push test mov lds add (bad) fucom jmp stc add add adc add add sub cmp push push add add add add add add add add add add add add testb push or and aaa add add add add add pusha outsb add test add add add out out add add add adc add and das ss pop bound push add add test add lret fiaddl loop add repz add add push adc add inc dec push pop add add add add mov mov xlat fiadd out add add cmc cld add add push sbb add add xor add add dec push add pop add jbe jle lea xchg add lahf add add lods mov mov roll add add add ljmp add sbb add xor add inc add add add add add add add mov stos mov add mov iret add add add add in repz cld add add adc and add sub add dec push pop imul add add lea mov ret add (bad) add add stc add add adc pop es add dec push add outsb add js add add test mov fiaddl add jmp repz add add adc and add add add inc dec push add add add add add test popf movsb stos add rcr add out out idiv add or add add add sub add push add add add jo js xchg movsl add (bad) add add add jecxz jmp repz add add or add sbb add sub add xor inc add pop add add jno jns xchg add xchg lcall add movsl lods add rcr loope add in add idiv add adc add and xor ds dec add add add jno add orl test add add xlat fiadd out add add sti add adc sbb add das ss add pop add jnp mov add movsl add add add add add loope add add sti add add pop push and dec add add insl add add add mov add (bad) add in add testb push or add sbb add add push add add add outsl jbe jg add add lahf add add add (bad) add add add add add add sldt sbb daa add xor add dec dec add pop pop insw add add add add mov mov ret add add aad fsubp add add testl add and add add dec push pop add add jge mov xchg lcall movb add fcomp add out add std add add add sbb and sub xor aas add dec add add pop arpl add outsb jne add add cmpsb lods mov ret rolb (bad) call cli add or add sbb sub add cmp inc add add add jno jns xchg cmpsb add ror add add add jecxz icebp add add add push add add add add add add add jnp add add mov xchg cwtl lahf cmpsb lods add rcr add jmp push or pop sub add add add push add pop add jbe test popf add mov add add icebp add sti add adc add and das ss add push pop pop data16 ja test lea add mov int aad fucom jmp hlt add add add or add add and add add add push pop pop insw je jge mov add mov add lret rcr loope add repnz add or adc and add add xor cmp dec add push add add outsb jne add add add test add add enter roll add jecxz in repz add adc add add and sub aaa ds add pop add jno jp mov lods add add leave add add loope add jmp add cld add add adc add xor dec add arpl add (bad) mov add add aad add add add icebp clc incb pop add push sbb cmp add push add pop add outsb add test lea add add fwait mov mov add add (bad) into aad fsubp in add sti add add sbb and add inc add add push pop add add jns add add cwtl lahf cmpsb lods add mov lds int aad fsubp in repz add add add or adc add add add das add inc add add add push add jge add mov lods add mov les add iret add flds add ljmp add add sbb sub aaa add inc dec dec push pop imul jp add add add stos mov rol add add loopne call add add add add (bad) add in hlt cld add or add add xor add pop add imul jnp add add lahf add add lods mov add aad adc cmp dec push push add add add add mov test mov mov xlat add loope add icebp clc incl or push add add add xor add add add popa add add add jle add mov add xchg add sahf movsl add (bad) add add add add idiv add add adc sub inc add pop bound add insl add add add add add int3 roll faddl add add add idiv add add adc daa add add aas inc dec add add insw je jge add scas add add fadds loopne out add stc add add or adc sbb sub xor cmp add add add add add push add jl mov add rolb fildl add jmp hlt sti add add add add xor add push add pop add gs jae add add mov add into aad add add add icebp add add add add sldt sbb add das add add dec add add bound push js add mov test mov mov (bad) faddl add call cli add add or add add cmp add arpl add add fwait add add (bad) into aad add out hlt sti add add sub add add add add pop imul jp mov cmpsl add add rcl add add add add hlt sti add add or add add ss pop add jbe test popf movsb add lret rolb add add add repz add add adc add add cmp add pop pop data16 add add mov xchg add add add mov add int add in in add cld add add add adc sbb daa cs add add js add add mov mov mov add add (bad) add add incl add add add cmp pop popa add js add mov add lret aam add (bad) in hlt add add push or sub cmp add add pop add push jns (bad) add xchg sahf add add rolb add fcomp out hlt sti add or sbb es aas inc add pop add add jno jg lea add rcr add add jmp repz add adc add sbb sub cmp add inc dec add pusha outsb jne jle mov mov add movb rolb fadds add jmp add sbb add add xor cmp dec push push pop gs jae add cmpsb add add into add fcomp out hlt add incb and xor add inc add add dec add add add jo js add add add (bad) xchg add add add add add add in in hlt add add or adc and add add add inc dec push add pop gs add jne add xchg add add add add mov add add fsubp add add icebp clc incl or add add ss add add jae jl mov mov add (bad) lret add (bad) call add sub ss add pop add arpl js xchg mov add add lods add add lret (bad) in hlt sti add adc and add add cmp dec push add pop pusha outsb jne add lea mov add rcl add add jmp add add adc pop es add add push add add add jp add mov xchg add add add aam add jmp add add add adc and add add das add cmp add add add push push add popa add add jne orl add add rcl fsubp in add idiv add add add cmp dec add add add gs add add add mov add ret roll fiaddl add jmp add add or add add pop add add add add add add push pop bound ja jg lea add add fnclex add add hlt sti add adc sbb daa add xor add add inc dec add add add push jp add add test mov ret add add fildl add out add testb add or adc push and xor add dec push add add jge add add add add add add add add add add jmp stc add push adc add add add inc dec push pop popa add imul add add les add rolb add fnclex add add cli add or add and add ds add push add pop insw add add add add (bad) (bad) call add add adc add add sub add inc inc add pop add add js xchg mov lods add add mov lret roll add add out out add add sti add adc push and cmp add add insb add add add add mov add add rolb add fildl in repnz cld add add add add add and sub add xor add add add pop add fs jae (bad) add add add add int3 add aad jecxz in repz add lldt push and add aas add add add bound add add movsl lods mov mov into aad add jmp repz add add or add add sbb and add xor inc dec push push pop add add jb addb mov add add fild out cmc add add add sbb add add das add add inc add dec add push add add add js xchg movsl lods mov mov add faddl in add cmc add add data16 jns (bad) add nop xchg add add add enter add add in add cli add add or add add add add dec dec add add jo add add xchg (bad) xchg sahf movsl add mov mov add in in hlt add add add add add add add pop add das add inc add pop arpl insb jae add add add mov add add int3 roll add fiadd out add clc incl push adc add add aas inc dec add add outsb jne addl xchg fwait add inc dec push pop pop insw je add popf add add add ret rolb fiaddl dec push pop add jo add xchg sahf add add enter add add in in add add add add add adc add push and add xor add inc dec push add add add add jge add mov nop xchg sahf add mov add flds loop ljmp add add adc push add sub add pop add add jle mov add aad fiadd add out add incb add movhps push add sub add pusha add push add orl mov mov add add loop lock add add or sbb and sub add cmp dec push add add jb addb add rol add fucom add hlt sti add or sbb add xor add cmp dec add add add insl je jge mov mov add add add add out hlt sti add or sbb add sub aaa add dec dec push pop add add add xchg add ret lret fild add lock add add adc pop add add add add inc dec add add pop add add jle mov add aad fiadd add out add incb add push adc sub add pusha add push add orl mov rol iret add add fdiv add adc add add std adc add sub xor add inc dec dec push pop add stos mov mov rcr loope add repnz add or add add sbb add add inc add pop add add imul add add cwtl lahf add rolb add add add add out cmc std add pop push adc add ss add add add add add add jnp add add add mov roll lret add add fsubp in repz add or sbb add add add inc add add pop pusha add add add movsl add rcr add call add add add adc xor add inc add popa push add cmpsb scas mov add add add add aam add add out out testb add add adc sbb and xor add add add add push push add outsb jne add mov add iret (bad) fucom jmp add add add pop push adc sub ss popa add imul add test mov mov (bad) fucom add out cmc add incb sbb inc inc add pop gs jae jnp add pushf mov int3 add xlat add add ljmp add add add push and add add pop add add add jnp mov test mov add add lret add add fucom add hlt add add pop add and sub cmp inc add pop add je jge mov lahf add add add lds int add fiadd add out add add pop movhps add add and add das add inc dec push pop add jp add test int add add add ljmp or sbb sub ss pop add add add inc dec dec push pop add add xchg lods add mov add add rcr loopne out idiv add or add add inc dec push pop arpl insb jae (bad) add mov xchg add ret add add add out add clc incl add add adc and sub xor cmp dec add push jb jnp add mov add movsb lods add aam add add add icebp add push sbb cmp dec push pop pusha add js add add add popl cwtl lahf cmpsb add add mov ss add dec add push pop add add jb add add add mov lds int fnclex add in hlt add add push adc add add push pop arpl add jl mov add out add add add push adc add inc add push pop pop data16 add jg add add add iret (bad) fucom jmp stc add push add pop push and inc dec push pop pop add imul xchg add add add add xlat add loope jmp add add pop push add sub add add arpl add add test mov mov add fcomp out hlt sti add or sbb add add cmp add add add push add insb add add jns xchg add mov mov roll faddl add call add sbb ds add pop add addl add add mov (bad) call sti add or sbb add add xor inc inc dec push pop arpl insb jae addl mov mov ror add fsubp in repz add adc push add sub ss pop popa push add lahf cmpsb scas mov mov iret xlat loop add repz add add sub add inc dec dec push pop add add jbe add cwtl lahf add lret fildl in repz std add or sub cmp inc add add add add add jne test add cmpsb lods mov add mov roll add add jmp repz add adc add add add cmp add pop add bound jb addb add add enter add add in in hlt sti add add or xor add dec add pusha outsb jne add xchg movsl lods mov add add int3 rcr loope ljmp sbb sub add cmp dec push pop imul xchg add test mov (bad) int3 add add add loope add add add add add add push sbb inc dec add pop gs jae jl add add cmpsb lods mov ret rcr loopne out add std add add adc xor cmp dec push pop add add add add add xchg add add mov lds add rolb add fsub add in add cld add or add xor cmp add add je add mov add ret int3 rcr add add in add testb push adc add cmp push add imul add add add xchg fwait mov scas mov add int3 roll fsub add in hlt add add add add add add cmp dec push add arpl add add add orl mov mov fldl add add add add add std add add or adc and sub add inc add add push add pop add add add je (bad) add mov add iret (bad) fsubp in repz add add or pop push and cmp add outsl add add stos mov add add call add or add sbb add add xor aas add push add insl je addl xchg add add add in out add add pop push add add add add aaa ds add add push pop pusha add jbe jg add (bad) xchg add mov add add rolb add add jecxz in repz add add add adc add add sub aaa add inc dec dec add pusha add jbe add add add lea xchg add stos add add rolb rolb fcomp add add add add std add add add add sbb add xor add inc push pop arpl add (bad) mov add add add add leave rcl fiadd add add repnz add add or add sub add xor inc add pop pop add jbe add xchg push add mov add rol add xlat fsubp in repz add add add sbb add add add inc dec push push pop gs jae orl add mov rcr fucomip stc add push add sbb add add pop pusha outsb add test lahf add lret fiaddl add out repz std add add add sbb add xor push add imul add xchg add fwait add add test scas add (bad) add add add testb add and xor add dec push pop add add add je jl mov add add add add add add loope ljmp add pop push add sbb cmp add push pop add add jg xchg sahf add add ror add fadds loope add idiv add add adc add daa add cmp inc inc dec push pop arpl js add add add mov add out hlt sti add adc push and cmp pop data16 add jg mov xchg cwtl lahf cmpsb lods mov add add add rcl add add jmp sti add add sbb daa cs push pop popa add add jp add mov (bad) fiaddl add ljmp adc push cmp inc dec push pop arpl insb add jbe test add add add add add mov (bad) lret add aad add in add lock add or adc sbb add and xor cmp dec add pop pusha add jno add popf movsb stos mov add mov (bad) fucom add out add std add add and inc add dec add arpl js xchg movsl add lds add rcl fsubp in add sti add adc push and add pop pusha outsb jne add popf add in add add add add add add add add add dec push pop pusha add jge mov movsb stos add lret rolb fildl jecxz icebp clc incl add adc sub inc dec push add push add add add lds add add fcomp add add add add std add add sub cmp add push add jno add mov add mov add add fild add ljmp add adc sbb sub xor add dec push push fucomi add add add or pop push and cmp dec push add push jnp mov lods mov mov fild add lock add add sub add cmp pop popa push add add add mov mov fsub ljmp adc sub add add dec dec push add insw je (bad) mov xchg cltd mov add add in repnz add add outsb jne add add lahf cmpsb lods add loope lock add sbb das add add dec push pop arpl jb jp add lods mov add lret rcr loopne out hlt sti add adc and add add inc add add pop insw je add test lea xchg add add iret add add loope add add cmc cld add or sbb and add xor add dec add pusha add add add add add cmpsb add add mov add fiaddl add jmp add add add adc and add add add add add add add push pop add data16 jo add add xchg add add mov add enter fcomp out add repnz sti add add sub add add add inc dec push pop arpl add jl test add add roll rcl fiadd out out testb add or adc sbb and add add xor push pop add jo jge add add ret add int add add add add idiv add add add add sbb add add das add cmp inc dec add push pop pusha outsb jne add mov add add (bad) fucom add repz add add sbb add sub xor inc dec add push pop pusha add jo add mov add add add add add mov mov add loopne add add add add or adc add das add inc dec add add data16 outsl jbe jg xchg stos add add into aad faddl add add cmc add add add add das add cmp inc dec dec push add outsb add js addb add add cmpsb lods mov ret rolb (bad) call add add and add inc add dec add pusha add jbe jg xchg add add cmpsl add mov mov rcr (bad) in hlt add add or sbb and add xor add push pop add jl test add lret rolb (bad) add add add sti add add add add push and add add dec add add add pusha add imul add add ret add fchs out add clc add add adc sbb es add add add pop bound add jnp (bad) add mov add roll fildl jecxz add hlt add add add sbb sub add xor inc dec dec add add outsl jbe test mov add mov ror add add faddl in in add cld add or sbb add add xor add cmp add push add insb jae orl add add fldl add out cmc cld add push add add push add sub add dec dec push pop arpl insb jae jnp addl lea add movb add roll fildl add out add icebp add sti add or add add sub add add add push pop popa add imul add lcall add add add add faddl in in hlt add incb push or add sub inc add dec add pop add jbe add xchg (bad) xchg popf add add outsb jne addl lea add cwtl lahf cmpsl scas add add icebp clc add or sub aaa add inc inc add pop add push js addl add test roll add fchs out cmc cld add or sbb sub add add inc dec add pop add jne add xchg popl xchg sahf add les add add fucom add add or adc add and add cmp dec push pop add add add add add add mov add add add add add add fucomip add std add add add add add add daa cs pop add outsl jbe test mov add add mov lds int add fsubp in hlt add add add adc sbb add add add add cmp add push pop add add add jle mov lahf cmpsb scas add add movb aad add add add clc incl add adc sbb and xor add inc dec push add pop pusha add push jns add add add add add add add add aam loop icebp clc incl or add adc and xor add add pop pop add jbe add add add add lret add fnclex jmp push push adc cmp add dec add push add add jae orl add add add add enter in repz add or sbb daa add add cmp dec push add pop popa imul test stos mov add add add add add jmp add add add or sbb sub ss dec push pop add add add jno jp add mov xchg add add rcr loop add repz add add add adc add add add add add pop add add ja add addl mov mov add fiaddl loop lock add sbb xor dec push pop bound add je add orb cmpsb add int3 roll add in in add add incl or and add add add add dec push add add outsl jbe test mov rolb rcl add out add cld add or add sbb cmp add push pop add add insw add add add mov add add add xlat add add jmp add or add adc add add add inc dec push add add pusha add push js add mov add mov mov add add (bad) add add add out out cmc add incl add or add and xor ds dec add add push mov add lods mov roll lret rcr loopne out add add add add add sbb sub xor add push pop add popa push add orl stos add add add add add fldl add call or sbb and sub cmp add dec push pusha add jge xchg add add int3 rcr loope jmp idiv add add adc add add and sub add add aas inc dec push pop add add jnp test add mov aad fldl out out cmc add incl pop push add add add sub add cmp add add add add insl add add add add add mov les int aad add add add out hlt sti add add adc and sub aaa ds dec add arpl insb add add add add fwait mov mov xlat fsubp add adc add and add cmp inc dec add add add add jp add mov mov mov aam in add out idiv add movhps pop daa das add add inc add pop add jno jg xchg add add lods add mov add add add add aad jecxz repnz add add add sbb and add xor add inc add add pop add insb jae jnp addl xchg add pushf add mov mov xlat fsubp add add add add std add add add sbb add add add add push pop popa add jb add add add orl add enter fsubp add cmc add add add sldt add add add add das add ds add add insb jae jnp mov add add add mov mov add mov add add add fadds add jmp or push add add sub add add dec push pop imul jnp add pushf add enter add loope jmp add add adc add add es push add outsb jne jge test lods add mov mov iret add fchs out out add add add add add adc daa add add inc inc dec add add add add add add mov add mov add add add add out add testl add pop es add add add add add jns addl add mov mov fchs out add add add incb add movhps add cmp dec add add push mov add add (bad) int add out add clc incl add add sbb es dec add push pop add add push jp add mov xchg fwait add mov mov add add out add add add add add add add add aaa ds add add push add insl je add mov add scas mov add add ret add int add add add add in add cmc add add add add or xor add add dec push pop pusha outsb jne add addb lods mov add mov add add add out idiv add and xor inc inc dec push add pop add push test mov rcr add add in repz add add add and dec add add pop arpl add add add mov add rcr fild out add add add add add push add imul jp mov add add mov rolb add add jecxz add cli sbb sub add add dec add add pop add je add test mov add rolb add fildl add in add testb add add pop push add add cmp push pop add add test mov mov flds loope ljmp or sbb add add add inc inc dec add pop insw add test mov stos mov mov fabs call add add adc add add outsb add add jnp mov xchg cltd stos add mov mov add in in hlt add add or and cmp push push add add js xchg stos mov add add fsub add add out idiv add add pop add sub aaa ds add push add add push jb jnp mov scas add mov aad fucom add add add add add fildl add out out idiv add or add add xor cmp inc add dec add add imul add cmpsl add add lret rcr loopne out add add add movhps add add xor pop add outsl add add add mov fcomp add out testb add and add xor cmp add inc add add push add gs add jbe add cwtl lahf cmpsb lods mov add add add add flds loop lock add or and add pop pop insw add ja add (bad) mov mov ror (bad) fldl add out add add add add pop push and add add add add add imul add cmpsb lods add fchs add add repnz add or add sub aaa add inc add push pop add jo js add mov xchg cltd mov mov lret rcr add add add out cmc cld add add add add add add cmp add add add je add add add mov mov add in repz std add add add sbb xor add add pusha outsl jbe add add mov xchg add mov (bad) fucom add out cmc cld add add sbb sub add inc add add pop pusha add add add movsl add scas mov add loopne out idiv add or and inc dec add push pop add add je (bad) mov lods mov ret add add add faddl in repz add adc add and sub cmp inc inc dec push pop add add add jns add add movsb stos mov add add rol add fsubp add out add incb add add adc sbb add add add dec push add add add jo jle lea xchg pushf mov add iret (bad) fldl add add add add add add add adc add add add jns add add add mov mov fsubp add lock add and add add push pop pop add add (bad) mov mov add fadds loope out idiv add add sbb and sub cmp dec push add pop popa add add orl ret rolb add jecxz jmp stc add add adc add and add aaa add push pop add add add addb mov add add add into aad fucom out incl or adc add and add cmp dec push push pop insw je add add mov xchg sahf movsl lods mov cmc std add adc sbb and or add add add and sub cmp add add push pop add add outsl jbe add addl add add mov fiaddl jecxz icebp clc add add add sbb and cs add add data16 jne add cltd mov add add rcl add out add testl sbb sub cmp inc inc dec push add add outsb jne add orl ror (bad) fldl in add idiv add adc sbb sub aaa add inc add add pusha outsb jne add popf add cmpsl scas mov add add leave rolb fcomp out out cmc cld add and sub add cmp add add add add outsl jbe test add cmpsb add add (bad) call add push adc add and jo addb lods add add add in in repz add movhps push and add add dec dec add pusha outsb add addb add mov rolb add int fnclex add in add testb add or adc add add add add add inc add bound push js add mov cmpsl mov add into add fsubp add hlt add add add add pop add daa add cmp add inc dec push pop pop add add test add mov add add add sbb sub add inc dec push pop bound jno jg mov add test int (bad) add add call cli add add add add sbb cmp add pop insw je jl add add lret rcr loopne out add std add add add add and add add aas inc add pop pop gs add add add add add movsl lods mov add ret add int add fcomp add out add add add add add add and xor add push push add popa test stos mov rol aad fucom jmp cli add or add sbb and xor cmp dec add push add push xchg mov add add pushf mov mov add add add aam loop add add lock add add xor add inc add add dec add pop pusha add add orb add mov xlat add out add std add add add sbb add and sub add dec add push add popa push jg lea add add fwait add ret fadds loopne out cmc add decl push sbb cmp push add pop add add jae add add mov add leave rolb fadds loopne jmp push or add sub add add inc add dec push add arpl js xchg stos mov rolb add rcr add call add add add add cmp add add pop bound add addl lcall add rcr add loop lock add push add sbb add add add inc add add add imul add sti add and add add add add inc dec add add push pop arpl add jle add add test add mov add mov fsub ljmp add sbb es inc dec push pop add outsb add add xchg mov ret lret add loop add add add or pop push and add push pop popa add add jnp add add mov mov fsub ljmp or sbb add cs dec add arpl insb jae orl add scas mov add add into aad add add add idiv add or and sub add cmp add add add add jnp add add lahf cmpsb lods mov add lret jmp add adc add add add add das add add inc dec push pop add popa add imul add xchg add mov (bad) fldl add out cmc add incl add adc sub add add pop gs add jbe test add add rcl add loopne jmp or sbb add xor add add push pop add add js xchg stos mov rol aad add in repz add or sbb add das add add dec push pop arpl jae add xchg mov add xlat fiadd out cmc add add add xor add add add add push push add outsb jne orl add leave add fcomp out add add add add add and sub cmp add add push pop add add insl je add addb nop add add add fcomp add jmp add add pop add add das ss add push pop pusha outsb add js xchg add add rcr add loop jmp stc add push pop and ds add push pop imul add test mov mov loop add repz add movhps add cmp inc add push pop gs je jl add add pushf mov mov fsub out cmc cld add adc and add add add add add arpl add orl add loope add clc incl push add sbb add add add push push pop add add jb addb add add add ret add add add add add clc incl add adc push add sub add aas inc dec add imul add add add mov mov add (bad) add lock add add pop push and dec add push pop pusha add jno jg add add add (bad) call add push adc cmp add add add jae (bad) mov add movsl lods add add add fldl out hlt sti add adc add daa cs add add fs add add add add add fldl add call add add or sbb add sub add add add add pop gs jae add xchg fwait mov mov fldl in repz add push add add sbb inc add add pop bound imul jp add xchg sahf cmpsb add int3 rcr loope add testl push add and sub add cmp dec add pop pusha add add add jle add add add stos mov add add add flds add ljmp adc add add add cmp dec push add arpl add add add orl mov lds int fnclex add add add icebp add add add add lldt push and ds add add pop add bound add insl add add xchg (bad) xchg popf add cmpsl scas add add lret aam loop lock add add add sbb daa add cmp inc dec push pop arpl insb jae add xchg add ror roll add add jmp repz add add sbb sub add aas inc add pop fs jae jl add add mov add fild call add add add add add add add cmp add push pop popa add js addb cmpsl scas mov mov add flds add in repz add or adc add and add xor cmp push add pop bound jb jnp add add add movsb add add ret add rolb add add out add add add or adc sbb and add cs add add add add addl add add add fabs call add add pop pop add add push add pusha add add jnp mov test les int fildl in add add clc incl or and dec add add insb jae add mov add int3 add add add add lock add std add add add dec push add add jns orl add movb add add add jmp add add add sbb add push add add add add jbe add add add add mov loopne jmp cli add add sbb xor dec push add insb add mov add xchg add add add mov rcl fiadd out add add add or add add and xor cmp inc dec add push add bound imul add add add int3 rcr loope ljmp or adc and add add xor cmp inc add pop add imul add js add add add movsl add rcr fild out add std add or add sub inc dec add push add imul add add mov mov rolb add add loopne out cmc add add add or adc add pop add add add add dec add add add ja jg mov lods add mov add add aad fucom jmp add add add pop push adc sub add xor cmp add add bound jb add test add add add add fsub ljmp sub add cmp add inc dec push pop add add je jl mov test mov rcr add add add add idiv add add adc add and sub xor inc inc dec push pop add orl mov add ret xlat add loope jmp add sldt sbb add add xor add inc add push add pop imul add add xchg add mov add add int3 roll fnclex add add cli add add add ltr pop es dec add popa add ja add add rolb add roll fildl in add hlt add incb push sbb cmp add dec add add je (bad) add add add lret rcr loope add icebp add add add adc add sbb cmp dec push add pusha add push jb jnp orl add add scas mov add ror add flds loope ljmp sbb and xor inc inc add add add add jns xchg mov mov rolb add add jmp add add add adc add add cmp pop add outsl jbe test mov mov (bad) add add loopne call add push adc add sub add add dec add add add ss dec push pop pusha add ja test movsl add (bad) fiaddl add jmp stc add add movhps add sub add cmp dec add push pop add bound imul add add orl mov mov add add xlat add icebp add add or adc sbb add and cmp push pop arpl add add jge mov add add add add add mov mov add aad add add ljmp add add daa cs add add add jnp mov add xchg pushf mov add loopne out add incb sub add inc add dec add add jno jg mov add add scas mov mov lret (bad) in hlt sti add or sbb add add cmp add add pop pop insw je add lcall rolb iret add fcomp add add add add add add push adc xor add dec push pop add add add sahf movsl lods mov add add fucom add add add add add add add adc daa add cmp inc dec push pop bound push add mov xchg cwtl add mov add rcr add add icebp add add add adc sbb sub add cmp add pop add popa push add add xchg nop add add pushf add add roll (bad) add add add add add sub add add inc add add add imul add add mov mov rcr add out add add add add add add sbb cmp inc add add add jb jp add (bad) xchg popf movsl stos add fchs out out add stc add or add sbb daa cs inc add pop pop data16 ja add add xchg add mov add fucom add hlt add add add sbb add add sub inc dec add add add add xchg add loopne lock add add or sbb add add es add add push add add add add add add mov add rcr fild add lock adc sbb add das ss add add arpl add add jg lea xchg add lahf cmpsb lods mov mov iret add fiadd out out testb add or push add es aas inc dec push pop add arpl jae jnp mov mov add leave rolb add add jecxz in add add add add add add add das add add inc add dec add pop add jne orl add add rcl add out add idiv add sbb and add ss add pusha add jge test mov add add add add add fiadd out add icebp add add add push or and add add dec add insw add ja test add cmpsb lods add add (bad) add add call sti add add or add sub dec add push add gs add test add add add int fnclex jmp add inc dec push pop gs jae jnp mov test add add fchs add add add add std add add movhps add daa add add aas inc dec push pop bound jb addb add iret add (bad) in add testb add push add push and add add dec add pop add push add add add add mov add mov add add add fiadd add out add incl pop add push sbb add add inc dec push add data16 jge test add add add iret add add out add add sti add or adc and das add add inc add push pop add jo jle xchg movsl lods mov add (bad) lret rcr loopne add icebp add add add adc add sbb sub add dec push add add jb addb add add enter fchs add jmp add add add or add add add add add cmp add add add push pop arpl js add lcall add enter add out cmc add add pop push adc daa das add ds dec push pop add jno jg lea add mov mov (bad) fucom jmp repz add add add add adc add sub cmp inc dec push pop add jno jg add add rol nop add lcall (bad) int add fiadd add add repnz add add add add add add sub push add add pop imul add add mov xchg sahf add test mov add add add add in repz add or add and add xor inc add add add add add add add outsl jbe add add xchg pushf mov (bad) int (bad) add add add icebp clc incl or and cmp push pop arpl add add add cwtl mov add (bad) into aad fucom jmp hlt add add push or add add add inc inc add add push add add orl mov mov rcr add out add incb pop add es add add add bound add jne add xchg add add movsb lods mov ror add fchs out add incb push or pop daa add xor cmp jno add mov add add add lds int fildl add in repz add add add or sbb add and add add add dec add push pop arpl add (bad) add add mov aam fucom jmp stc add or push sbb add add add aas add dec push pop add add orl stos add add or add and add add add add inc add add pop imul xchg nop add add add mov (bad) add add add add sbb and sub cmp dec push add add jno add add add mov rol add fucom in add add add or add and add xor add push push pop add outsl add add add xchg add add add add loop jmp stc add add add add add add inc dec add add push add add add sahf add test mov mov fldl out add add add add or sbb and xor cmp dec push push pop add jne add add add lds into aad fldl add out cmc add add add adc add and xor aas inc add add pop popa push jnp mov scas mov add add iret add add jmp push add add and sub add add add dec add push add add jns xchg (bad) xchg sahf movsl add (bad) int (bad) fldl add add testl or sbb and sub xor add add inc dec add add arpl add jnp mov add mov add ret rcr add add in add add incb sub cmp pop arpl insb add add js add add mov mov fsubp add add cld add add add sbb cmp inc dec push add popa push add lods add add fsub add repnz add or add add push and add inc dec push pop add add jbe add add add add into add fsubp in repz add add sbb add das ss push pop add data16 add add add add loope out idiv add add add add es dec push pop pop add imul (bad) xchg popf movsb stos add mov add add int3 roll faddl in repz add adc push and add add push push pop add add add mov add add lret rcr loopne out cmc add add or add sub dec add popa add jb addb stos add mov add add aam add adc xor cmp dec add add pusha push js xchg movsl lods add add fildl jecxz add stc add add adc sbb and add xor add add jae jnp mov popf movsb add lods mov add add enter add loope add repnz add movhps add add add dec push pop pop insw add test mov rol add add loope add icebp add add add adc add and add aaa ds add dec push add add jge add add add add add repnz add xor cmp inc add pop pusha add jb addb nop cwtl add xor dec push add imul jp add add add add out add clc incl sbb add add inc inc dec push pop arpl add jnp add add add iret add add out out add add add or add and sub xor cmp add pop add add jno add (bad) mov test mov add movl add jmp add or adc add sbb xor inc add pop popa add push add add fwait add add add mov add (bad) into add fadds fild call incl add adc add daa add add aas inc dec add pop add add add xchg add lret add add jecxz icebp clc incl add push sbb inc add push pop pusha outsb jne add xchg sahf add test mov add add add rcr loopne add idiv add or add add inc add add pop add add test add mov add add in repz add or pop add add add inc add add push push pop add outsl add js add mov test mov mov add add fucom in add sti add add adc add sub xor add add add add add add jnp orl add mov add add add sbb add add sub push add insw add jle xchg mov add ror rcl fsubp in repz add adc push and add dec add pop insw je (bad) mov xchg add add sahf movsl add add add add rcr loope add idiv add or add cmp inc dec add add bound ja jg mov lods mov add (bad) lret rolb add jecxz jmp repz add add add adc add sub add inc inc add add push pop bound add add cwtl add mov add add add in repz std add add adc add xor dec add push add add push add mov pushf mov add ret add add aad jecxz icebp clc add add movhps push add add add add dec push pop add add add xchg stos mov rol add fucom add add testb add push adc add add add inc dec add add add imul (bad) mov add rolb fnclex add icebp add add add add add inc add push pop add add add jp add cmpsl add int fildl jecxz add cli add add add add add add sub add add cmp add pop pusha outsb jne orl movsb add add (bad) in add idiv add and xor add dec dec add pop pusha add ja test mov mov add add jecxz icebp add add or add add sbb add add inc add dec add pop insw je (bad) add scas add add loopne add idiv add and xor cmp add pop add outsb jne add xchg add add enter in add add incb add add daa add add add pop add add add (bad) mov xchg cltd add mov fsub add repnz add add add add sbb and sub add cmp add push pop popa push mov add rcl add out hlt add incb and xor aas mov add add int add jecxz jmp stc add add adc sbb and sub cmp dec push add add jo jle add movsl add add roll add add add incb sbb cmp dec push pop add push xchg mov mov add mov (bad) fucom add hlt add add or add add pop add xor add add add add add stos add lret add aad fucom add hlt add add adc and sub aaa add add dec push add pop arpl add add jg add popl add mov (bad) aam faddl in add lock incl or sub cmp add push push pop add add jg add xchg add popf add add add iret add fiadd add add repnz add add adc add and xor aas inc dec add arpl jae jnp test popf movsb stos mov add add add fchs out out add clc incl or sub cmp inc add dec add pop arpl js xchg mov add cltd mov mov add add fnclex jmp push add push sbb xor add push pop add add jl add test mov add int add add in repz add adc add add add add insb add add js xchg add mov rolb flds loope add in add add add adc sbb sub add cmp dec push add add add add jbe add add mov xchg fwait mov mov add aam fldl in in hlt sti add add sub add aas inc dec add pop add add add xchg add add add loope out idiv add or adc add add sub inc dec push pop popa push add mov add stos add aad jecxz icebp clc add pop push adc xor cmp dec push add pop bound ja add add ret lret add loop ljmp add or add add xor cmp add add push pop popa push add add add add add add add fchs call incl add adc sbb daa add add add add inc add dec add add pop add outsb add js add add mov add mov add mov loope add repnz add or adc sbb add add xor inc inc add add add jns xchg lods mov ror xlat fiadd out add add add add or pop push and add cmp add dec push add pop add add jge mov scas mov (bad) lret add fildl jecxz add cli add add adc pop add ss pop bound add add orl test mov les add add rcr add call add add adc add add and add das add inc add push add add push jb jnp mov test add iret (bad) call add add add pop add xor push pop add add outsb jne add add add scas mov add (bad) int add add out hlt add add add or add pop add xor cmp add dec add push add add add add add mov mov (bad) fucom jmp stc add or push sbb sub add xor add dec add add imul add test add add mov fucom add repz add add adc and add ss add add push add mov mov add loope ljmp adc push and cmp inc dec push pop add add jae add add test mov mov jecxz jmp add cld add adc sbb sub add cmp add push add jno add add add sahf movsl lods add int add add fnclex jmp add or adc add and add add inc inc add add push jp add test (bad) into add fldl in repz add add pop add add sbb add add sub add add add outsb add add add add mov (bad) jmp add or adc and cs add dec push pop pusha add jb orl lock add add add and xor inc dec dec push pop data16 jle add test mov in add sti add adc add add sub push add jo jle add cmpsb lods mov (bad) into add push gs jae add add mov mov add pop add add add add and sub dec add add add add add add add mov scas add mov add add loope add icebp clc incl push or add sub ss dec push pop imul orl stos mov rol (bad) add add call add or add sbb add add inc dec push add outsb add jg add add scas add into add add add cld add or adc add pop add add xor add inc add add jno jns add mov add add rolb add add jecxz in repz add add movhps add add das ss push add add jl add add add xchg add add scas add add rcr add add add add testb add add add sub add cmp dec add add add outsb add test add mov add scas mov add (bad) int fnclex jmp add or add add add and inc add push pop add add test add add vpaddq fsub ljmp add push add add cmp inc dec push add pop add outsb add test lea xchg add add add add aad add in repz add add add sub xor inc add add add add add add xchg add xchg lcall mov rcr add add add stc add add add add pop add add add add xor cmp add push pop add add jb add add cltd mov add ror add add loope ljmp or add add add xor aas add add pop popa add imul mov add add int3 add fildl add add add add push or pop es dec add popa push add mov test mov add add lret add add ljmp add add push add add sub add add inc add pop pusha outsb jne add add add mov xlat fiadd add add add add or pop add and sub cmp add dec push push add push sahf add add add aam add add add add add add add add add add sbb and sub xor add aas inc dec add add add jge add lahf cmpsb add add into add fcomp out out add stc add or adc pop add add xor add cmp inc add dec add gs add test add add add (bad) into aad jecxz in repz add adc push add add xor add add pop add push jp (bad) add add mov add add rolb add add ljmp adc xor cmp add add add add sbb daa add aaa add dec push add add jno add orl stos add int3 add add add loope out add add add add or add add add add push pop add add add jp mov test add rcl add out cmc add add add add sub add cmp add add stos mov mov iret add add add adc pop add add cmp dec push pop pusha add imul mov add mov ror aam fsubp out add add adc and add add cmp inc add pop bound jne addb add nop cltd add add mov fcomp out idiv add push push add daa das add add inc dec add add outsl jbe add mov xchg add mov add add loopne add clc add add add adc and add add xor inc dec add add add push add add movl add in repz add add add add add add add add add dec push pop bound jns add scas add add add pop gs jae add test stos mov add ret add add add add add out add stc add or add add add pop es add dec dec push add add add add jbe add popf movsb lods mov add fnclex add in repz add add add adc add add add add add add add add mov vpaddq loop lock add add xor inc add dec push pop add arpl jns add test add mov add ror rolb fnclex ljmp sbb add sub add push pop pusha add add add add mov add xchg add add mov fsub ljmp and add das ss add imul add jge xchg lods add add lret rolb add fsubp add out add cli add add add add sbb es dec push pop add jae add test lea add movl fildl jecxz add add add add sbb add xor add dec add add add add add add jl add add add add add rcr loope out add stc add add pop push and inc inc push add add add add jb jnp orl stos mov mov add add add icebp clc incl pop push add push add add sub add add aas add add pop pop data16 jbe mov mov int fildl add out hlt add add add sbb add add xor cmp add pop add jo add add add add add stos add mov (bad) call add add pop add add xor inc dec add push add pusha outsb add jg xchg add add xchg pushf add add add int fildl add add call push add add add and add add cmp inc add dec push add add jb add add add cmpsb add mov mov add in in hlt add add add add add add add pop add cs dec push pop bound push js add add add lahf add add enter add add jmp add movhps add aaa ds add add pop insw je add add enter loop icebp clc incl or pop add add add inc add dec add push add imul jnp add cmpsl add add add add fild call add add adc sbb and sub add add cmp add add pop pop data16 jo jle add add mov add add roll add add add out testb add add add and add xor inc dec add push pop popa add ja addb add add ret rcr add out lock add add add add sub add cmp dec push add add add add add add loope add in repz add or add add sbb add add pop bound add add jle mov mov mov (bad) fucom add repz add add add pop push add add add inc add dec push add add jne orl test mov mov faddl in mov test add mov faddl add in add idiv add sub add inc dec dec push pop add outsb jne jge test mov mov mov (bad) into add add add add repnz add or sbb es inc dec push pop add add jnp add mov stos mov rol add fucom add out cmc add add or and add push add add pusha outsb jne addl add lods add mov add add in out add std add add add sbb and cs push add imul add add mov fiaddl add add add testb add add adc sbb sub ss add add add imul xchg pushf mov mov fcomp out add add incl add adc sbb and sub aaa add add pop add outsb jne jge xchg mov mov mov rcr loope add add add add or adc and das add add push push pop add jne addl xchg lcall add enter fiadd out cmc add add add add sbb add sub aaa add add add add add mov test mov add int aad add in add sti add or adc sbb add add add cmp push pop add add addl xchg lcall mov add add flds loop add repz cld add or sbb sub add add dec add add pop arpl js jg xchg cmpsb lods mov ret rcr fild call add add or adc sbb sub xor add push push add popa push add sahf movsl add (bad) add fldl out aas dec push add add jno add jl add add mov add (bad) into aad fsubp in add add add add ltr pop add das add add inc dec push add add arpl add xchg pushf mov add mov add fsubp in add cld add or sbb and add xor inc add pop pusha add add add add mov add add mov fsub add out add std add or add add xor dec add add push add add pushf add add add add add jecxz icebp add add add or add add add sub add cmp dec add pop add add add add jg lea add add out lock add add add add adc sbb and cmp inc dec add pop add imul add xchg cmpsb add (bad) int add add add out add stc add push adc add add aas inc dec add add insw je (bad) add add stos add rcr (bad) add add stc add or adc sbb add sub add add ds dec add add jns add mov add roll roll add add in repz add or add add sbb add add add dec push pop add imul add mov xchg pushf mov mov mov add call add add add sbb es inc add pop add je add add add lods add rolb fnclex jmp add add add add pop add and das add aas inc add push push pop add add jno add (bad) mov add (bad) into aad add loope out idiv add and sub add dec push pop bound add add lcall add add rol aad fsubp in add sti add add add and sub add inc add dec add add push jnp mov xchg add mov ror add (bad) in add idiv add and xor add dec dec add pop pusha add jo js xchg mov mov add aad fucom in repz add or add add pop add add add add inc add push pop popa push add stos add add fchs add out testb add push adc xor inc add pop add push addb cmpsl scas add ret lret (bad) add add stc push adc sbb add add sub add add add arpl jae add add mov lods mov add lret (bad) call add push add sbb add add add cmp add add outsl jbe test test mov mov xlat fsubp add hlt sti add add sbb sub xor aas inc dec push add pop add outsl jbe add add add add rcr add add add sti add add sbb and add add inc add push pop add imul lcall int3 add add in add cli add or sbb and sub add inc inc add pop gs add add cwtl lahf cmpsb add add add add (bad) call add or adc add daa add aaa add inc add add add jbe add cwtl add add fsubp add hlt sti add add add push add and add add cmp inc dec add push add pop add jnp mov add add loope jmp add movhps add dec add pop pop add push jb jnp orl test add iret add add loopne jmp push or add ss pop add add add daa add add cmp dec push add add jle add stos mov roll rcr add add ljmp adc pop add add add inc dec add push pop pusha add push jb add xchg add mov movb add fiadd out add std add pop add push add add xor add add add jno add add mov add roll fnclex jmp idiv add add adc add xor add inc add push add add imul add movsb stos mov add ret lret fiaddl jecxz add add add add add or add adc add add add add add jo js xchg add add add ret lret add add add clc add add adc and add add add dec push add insw jne orl add ret rcr loopne out cmc add add add adc add and add cmp inc add dec push pop pusha add jbe jle lea add add add in in repz add adc xor inc add dec push pop add imul add add add xchg popf movsb add add add iret add add fsub ljmp add add movhps pop and add add add push add imul add xchg cwtl add add add add add add rolb add fldl in add testb add add add adc add sub add cmp add inc dec push pop popa push addb add cmpsl add add add add loopne call or adc and das ss add add je add mov add add mov rcr add loop ljmp adc sbb cmp push add add add add xchg add add fsubp add out idiv add pop push add add and add inc inc add add add jb addb add lea add mov add rol rcl add add add add add add and add inc dec add push add add add add xchg add xchg add add mov add add lret fchs out add add add add adc pop add xor add dec pusha add insb jae add mov lods add mov mov add fadds loope add icebp add add or adc add add add dec push add imul xchg fwait mov scas add add add aam fucom add in add idiv add add adc push add add add add aaa ds dec push pop popa push test add add xlat add loope add in repz add add or xor adc das add add push push pop gs jae add lcall add enter add loope out idiv add add and xor add add add push test add cmpsl add add add add loopne add icebp clc incl or add sbb add add add dec add add imul jne add xchg add add add lret add aad fucom jmp stc add or pop push and inc dec add add push add add outsl add add jl test add mov roll add fiadd add jmp push or sub add cmp add add imul mov add add mov fsub ljmp add adc sbb aas inc dec push pop bound jb addb mov mov icebp clc add push adc xor inc add add popa outsb jne jle mov add rcl fiadd out add repnz add add adc add add and cmp add add orb add test add add mov fucom jmp stc add add add add sbb cmp dec push add outsb jne add add add mov xchg lcall mov ret add int add fldl add jmp add add or add pop push and inc add pop pusha add push add add stos add add into aad add out hlt sti add adc add add sub add add dec push push pop gs jae orl mov jecxz add out cmc cld add add sbb daa cs pop add bound jbe test mov mov mov loopne add add add cld add add push adc daa das add cmp dec push pop arpl imul xchg add add add in repnz add add push sbb xor add outsb jne jge add add add stos add add int fnclex add in add idiv add add add pop add add add add add inc dec add pusha outsl add jp mov add scas mov mov add fild add out idiv add add add sbb add add add add insl add test scas add mov lds into add add in add lock add and xor ds dec push pop add imul xchg cmpsb add scas add (bad) fucom jmp repz add add add add sbb add add xor add dec push pop pop add jl mov add add loopne out cmc cld sbb add add add add add imul (bad) mov cmpsl scas add ret lret (bad) add add repz add add or add pop push add sub inc add pop bound add add mov stos add mov add lret add out cmc cld add push add add sbb and sub add cmp inc dec push add add jo jle mov xchg add mov add loopne out cmc add add adc add sbb add dec push add insl add add xchg mov roll add add add repz add movhps push add add sub add add add push add outsb jne orl scas mov add add into aad fucom add out idiv add and xor cmp inc add push push add insl je jnp test test mov add add add int3 rcr loope out add add cld add add add daa add add inc add push pop imul jne jle xchg movsl lods mov add (bad) add icebp clc incl add sbb add add cmp add mov xlat add add add idiv add and add add inc dec dec add add imul mov add add add adc add sub add aas inc dec add push pop add je jl mov add cmpsb lods mov add add fsubp in add add add pop push add sbb add cmp add pop add arpl jb add add pushf add cmpsb add add fchs out cmc cld add add sbb add add add add cmp add add dec push pop popa add imul je add add add add stos add add rcr loopne jmp add push adc xor inc dec dec add pop add add jno into add xlat loope out idiv add add add cmp add dec push pop bound js xchg (bad) xchg popf movsb add add add xlat fsubp in repz add or and jbe mov stos mov rol aad add add jmp add adc push add add add cmp add dec add outsl add add stos mov add enter in in add add add add add sbb sub xor aas inc dec push add add je (bad) mov scas mov ret add roll fsub ljmp incl add movhps add add sub cmp add add add pop add add jle xchg add xchg cltd mov mov (bad) add loopne add idiv add and add add cmp inc add add popa push add add mov fsub mov add out hlt sti add or sbb add sub aaa ds add pop add gs jae jnp add scas mov ret lret aam add add add idiv add adc add add add sub aas add push push add push mov loope out testb add or add push add sub aaa add add push pop imul jnp add mov bound jb addb cmpsb add mov fild add add repz add add add add push add sub inc add pop add outsb add jg lea add mov add into (bad) fldl in hlt sti add add add sbb add add cmp add add pop add outsb jbe test add int3 roll add in hlt sti add adc add and inc dec push add add imul (bad) mov xchg cwtl lahf add add add add add add add clc add add or sbb add sub cmp inc add push pop pusha add add add ja jg mov add add add add add add add fiadd add jmp sti add or sbb add sub add add add push add outsb jne add addb mov add (bad) fsub add in add testb incl or add add and xor cmp inc dec add add push add jnp add add stos mov add aad out cmc add add sbb add cs add pop add je add cwtl lahf add add lods mov add fninit ljmp or adc and sub aaa add add add add add add jg add mov movsb stos mov add (bad) lret rolb fildl jecxz in repz add add add add add add add add das add add dec add push pop add add outsl add js add test add (bad) xchg popf add mov add fild out add add add adc add sbb add sub add pop arpl mov movsl add scas add add add add rcr fild call add add add add and das add add inc dec dec push add add jl mov mov add leave rolb add add in in add add add add sbb add add xor add cmp add pop add jno jg lea mov add add add add fadds add jmp add or adc add daa add cmp inc dec dec push add pusha outsb add jg add add add add add into add add add add add add add add adc sbb and sub add aaa ds add pop add add je add add movsl lods mov add add add iret (bad) fldl out add add incl or push add add sub add add add inc add popa add add add addl add mov rcr loope add clc add pop push adc add aaa add add add jno add addl add add (bad) int3 add add fild add add sti add adc and xor add add pop add add jno add add mov mov (bad) fucom add out add clc add pop push add sbb add cmp inc add add add bound jb add add xchg add xchg add add add into aad add add add add stc add add adc pop add sub add aas inc dec add arpl add jne add addb add test add add int3 rcr loope ljmp add add sbb sub xor cmp add push pop pusha add jno jg lea add stos add rcl fsubp in add testb add or adc sbb daa add add add add inc dec add add add imul (bad) xchg popf movsb stos mov mov xlat add add ljmp or sbb add sub xor cmp dec push push add popa add imul jp add mov mov add into aad add add add repnz add add add sbb add xor cmp inc dec push add add add insw je add test add rcr out add cmc add add add or adc add and add inc dec push pop popa add add insl add jle add add add fcomp out add std add add sbb add add add xor add pop add jns xchg add test ror (bad) add in add lock add adc add add cmp dec push pop add jae orl mov add (bad) into aad add add add testl adc add xor add inc dec dec add add outsl add add add or pop pop daa add cmp inc dec add push add add add outsb jne jge add add test add rcl add out add std add or add add add add add add add add jp add sahf movsl lods mov add add roll add fiaddl loop icebp clc incl pop movhps xor push pop popa push add add add movsl lods mov mov fild add lock add add add sbb sub add add add pop add bound add add mov add int fnclex jmp cld add or sbb and xor add inc add push pop add jo js add add xchg cmpsb lods add into add add add jecxz repnz add pop pop add das add add push pop arpl add jnp add cwtl lahf cmpsb lods mov add add add add add add add add cmc add add or push sbb cmp push push pop add add add cltd mov mov ror add fsubp add out testb add add add add add xor cmp add add push pop bound add add test mov xchg pushf cmpsl add add add fchs out add add add incb sbb cmp add push add add add add add add add orl add mov (bad) lret rcr loope jmp add add adc and add xor inc add push pop add outsb jbe test add mov mov xlat fsubp in repz add add add adc daa das ss add add add add insl add jle add add mov ret rcr loopne out add add add add pop add and das add add inc dec push push pop add jbe add add cmpsb lods add mov add add add add (bad) fucom jmp cli add add push or es add add pop add data16 add xchg add mov mov mov (bad) fucom add add add add cld add add add or adc add and add cmp push pop pop data16 ja add add test add rcl fsubp in add cld add adc add add add das add add push add add jl add add ret add roll fnclex add add out add add add add or and add add push pop arpl jae jnp mov xchg cltd mov add fcomp out add incl add add add add and add add add dec add push add add add jne test loop lock add or add adc sbb add add add inc add push add add add jae add add add cmpsl scas mov add add les add add add add fiadd out add clc add add add or xor add dec add add add outsb jne add xchg lods mov ret add rcr loop lock add add add push add add daa add add push pop add jae jl add add mov mov add xor add add add pop mov aam loop lock add or push sbb xor add push pop add add jp add pushf add ret add add fnclex add icebp clc incl add add add sbb and inc dec push pop add add outsl jbe add add add add rcr loopne call add idiv add pop push add sbb add cmp add add push add add insw je jge add add ret add rcr add jecxz add cli add add adc and sub xor cmp add dec push pop pusha outsb add jg xchg add iret (bad) add out add add add or xor ds add add pop pop add jno jg add mov mov (bad) out add add push add adc add add add add pop add jbe add mov add test add aad jecxz add add icebp clc add or add add sbb sub add cmp add add imul add add add cmpsl scas mov mov add jecxz in repz sti add add or add sub add xor cmp add add outsl jbe add cwtl add mov add add out hlt add add add and cs add pop arpl (bad) mov xchg cltd mov add lret rolb fiaddl add add add cld add adc pop add add add cmp add dec push add pop add add jge add mov mov add in in repz std add and xor aas add push add pop add add add add add mov add add fldl add add lock add or add add add add inc add add pop add imul mov add add add add add add add add add add cli add or add cmp dec push add add jno add jl mov scas mov ret add add add jecxz add out cmc cld add add add xor inc dec add pop gs jae add add mov mov faddl in add icebp clc incl add or add sbb and add dec push pop add outsb jne addl xchg add add mov rcr loopne out cmc cld add sbb and add add push add add pusha outsb add add add add add add add add add inc add add pusha add add je jl test mov mov rcr in add testb add add adc add sbb add add add aaa ds dec push pop popa add add je (bad) mov add ret xlat add add jmp add or add pop es dec push pop pop insw je (bad) add mov add test mov (bad) lret add add add loopne add add stc add or add add cmp dec add add add rcr add jmp add sldt sbb es dec add push pop bound add outsb add add add add add rolb add add out add add add add add sbb xor add push add outsb add js xchg add cmpsl scas rolb lret add add in add add clc incl or sbb daa cs add push pop gs jae add jle add stos add add add add xor inc dec add pop add outsb add js add add mov add ret add int aad jecxz icebp add add push adc xor inc add add add push add data16 add jae mov add mov rolb add fildl add out cmc add add adc sbb sub add cmp dec dec add insw je add test add (bad) xchg popf movsb stos add mov ret lret (bad) in hlt add incb add and dec add add push xchg add add lret rcr add jmp add and inc dec push push add pusha add js add add add add enter add add ljmp or sbb daa add cmp add pop pop insw je (bad) add add ror aad jecxz add add add add sbb add add inc inc dec push add imul jp mov xchg add add add fadds loopne add idiv add or adc daa add xor add dec dec push add outsb jne add add add test add add roll add jecxz add hlt add add or adc sbb add sub xor cmp inc dec add fs add test add movsl add add add out add incl add adc xor add push add insb add jne orl mov mov xlat add add jmp add add add and add pop pusha outsb add test lea xchg pushf add ret xlat add add add repnz add add adc add add add sub dec push pop add outsl jbe jle xchg cmpsb lods add mov mov add in repz add add or pop add add ds add push test add mov rolb add int3 rcr loope add add cmc add add pop add pop add add add add add add push pop popa add imul add mov add add add add into add fldl add add icebp clc add add add add and add add aaa ds dec push pop bound push js add cwtl lahf add add add add flds loope out idiv add or sbb sub add inc dec add add add jle mov add add ror add add add in repnz adc pop add das ss pop add add add orl scas mov ret lret fchs add ljmp add add and add add xor inc add add add add outsb add add jnp mov add mov mov (bad) add add add add add add sldt sbb daa add xor add dec push add jno add jl test add add rolb add add add in repz add ltr pop es add add add insw je add add add mov add ret add int aad add out out testb add push add add add and sub cmp add pop add ja out push jmp add add add add adc sbb and add xor cmp add add imul add add (bad) int add in repnz add add adc add sub xor cmp push add add add add lcall mov mov add add add ljmp add push add pop add daa cs add add js addl mov mov (bad) add add out add incb add and das add ds add push add pusha outsl add add add mov add add add add rcl add out out add incl add add add add sub cmp add push add pop popa add jb add add mov mov mov add add call add or pop add add sub xor cmp dec add add add add add movsb stos mov rolb rolb fadds loope out testb add or add pop add das cmp add movsl add add add add add jecxz add add cld add push or es push add outsb jne add add mov faddl call add push add push add sub xor aas add dec add pop add imul add add movsb add add add add add (bad) add icebp add add or add add add add cs push pop add jno jns xchg cmpsl add add mov push add sbb add sub xor cmp push push add add jb jp add add add (bad) fucom add out cmc cld add adc add add add cs inc dec push add insb jnp mov stos add int add add add add testl adc add add and inc add add pop add add mov xchg add sahf add add stos mov mov rolb add fsubp add out add incb or and add inc dec push add add add add add add (bad) add add movsl lods add add lret add aad add loopne out add incb add movhps add add add xor add pusha add add jbe test mov (bad) into add fiadd out add add add add or and add cmp add pop add add jbe add add cmpsl scas mov mov loop ljmp adc add and xor add inc add push add add jnp add xchg mov add aam add jmp add cld add or add add add add inc dec add add insb add add add mov xchg cwtl lahf cmpsb add mov mov add loopne out add add add incb push add add add sbb and add xor add add pop add add add add jl mov add stos jl lea add scas mov mov add fild add lock add pop pop add cs dec add push add add je (bad) add add mov add fchs call add and xor cmp add push pop add jno add add add add lret add fsub add in add std add or xor add add pop add add jb add xchg movsl add (bad) int add fiadd out or sub add rcl fiadd add add in repz add or add add add add add add add add add insw je add jg mov xchg cwtl lahf cmpsb add mov mov add add into add add out out cmc cld add add sldt add and sub xor add inc add dec push add gs jae add xchg add mov add movb aad add in repz add add add xor add cmp dec push add bound add mov mov add add fnclex add add add add incl add add sbb add sub xor cmp dec push pop imul jp orl mov add (bad) lret rcr add loop jmp repz add or add sbb add add add popa add imul add add xchg add add mov mov add add add fnclex add repnz add or add add xor dec push pop add insw add jle add lea scas add add rcr add jecxz add hlt add add pop push adc add push add insb jae add add add int fnclex ljmp add push push add add sub add aas inc dec push pop add outsb add addb add add ret int3 add add fild add lock add or pop push and inc dec push pop pop add add add mov mov rolb fnclex ljmp add sbb add sub xor dec add add add insb jae (bad) add add add mov add add add add add add add add and cs inc dec add add jl add lea xchg add add add movb rolb add loope ljmp add add sbb and ds dec push pop add je add test test into add fadds add jecxz repnz add add and xor inc add dec push add add jl mov add test add add rolb faddl in repnz add movhps pop daa cs add add mov add add rcl add add add repnz incl or pop es dec push add add imul add test add (bad) into aad jecxz icebp clc add add add add add sbb inc add add add push add add push jae add add lea mov fildl in add hlt add std add add add cs inc dec add pusha add imul test add (bad) xchg add mov mov (bad) (bad) call hlt sti or add sbb add add add add dec push pop add outsb add jg lea add mov add (bad) int add add add add in add add add sti add add adc add add xor inc inc dec push pop add add jle mov mov ret rcr loopne add add stc add push add add and sub cmp inc dec add pop outsb jne orl add mov fldl out add add cmc add add add add add add pop es dec add insw je add add sbb add add add add add jle add add pushf mov add add int3 rcr loope out add add add adc sbb add add add add dec add add add add add mov add mov add add add add loop add add add add add add add add add pop es pop add add imul jnp push pop data16 outsl jbe add mov lods mov ror add add add add in add add add add xor add inc dec add pop add imul addl add cwtl add add mov int fnclex jmp add or sbb and sub add inc dec add arpl insb add jne orl test mov mov lret rolb add fucom add out add clc add add add or sbb sub add add inc dec push add add add insl add add xchg popl xchg sahf add mov add add out idiv add add add add add xor inc add add pop arpl imul add js add add add add add loop add repz add or pop push and cmp add add add data16 jge test add add add aad jecxz jmp add add or add and add sub add push pop arpl add add test add leave add fsub add add repnz add add sbb es add inc add add push pop add add outsl add add add stos mov add rcr add ljmp add or and sub inc add dec add add add ja xchg add add add add add (bad) add in in add add cli add add adc and sub xor add add add inc dec dec push pop add outsb jne add test mov add add add add loopne call add push add sbb cmp dec add add push pop add add add movsb add add add rcl fsubp in repz add add or add aaa ds dec push pop add jo jns add lcall movb rolb fchs add add testl add add adc xor add dec push add outsb add add add add mov add add add add add testb add or add add and das add add add push add add imul mov xchg add fwait mov mov add iret add flds loope out testb add push add sbb add add add push add push je jl mov xchg lcall mov add add fnclex add in repz add or add sbb sub add xor cmp push pop bound ja addb add add stos mov rol aad fucom jmp hlt add incb push add adc cmp inc add dec add add imul jnp add add cmpsb lods add add add jmp add add adc sbb add sub add add pop add add add add add add stos add add add rolb add fildl jecxz icebp add add add or add sbb xor add dec add add add add add mov xchg add mov (bad) (bad) call add push add add es add pop add push js xchg add lret rcr add jecxz icebp add add or add add add and dec add add popa push jp add mov mov add add add out out cmc add add and sub cmp add dec add add arpl add add js add add fwait mov mov loop add add or adc and xor add dec push add pop insw je add cmpsb add mov add rol add add out add std add or and add cmp inc dec push pop add add add add add add test mov mov fsub ljmp ltr add daa add ds add pop add insb jae orl mov aam add in repz add or add add add es add add arpl jb add test add add add cmp add add pop add add add mov ror add add fildl add in repz add add or add sbb add addr16 add add mov add add add add fiadd add jmp add or sbb add and popa add fldl add out cmc add add push adc sub add add add jnp add add add mov xlat add add sti add adc pop add add ds dec add pop fs add add add into add fsubp add add add add push adc sub inc dec add add add outsl jbe test stos add int add in in hlt add add push add sub xor add add pop add outsl add xchg add and sub cmp add add push pop add data16 jo add orl fnclex jmp add and inc dec add push pop add add jne orl scas mov ret add add aad add jmp add add adc add add and xor cmp dec push add add add jno add mov xchg add fwait mov add mov add add sub xor add inc add dec add add add jnp test add mov mov (bad) call add add and sub xor aas add add dec add add outsb jne add addb add mov mov add int3 rcr add ljmp movhps cmp add push add add imul add mov mov add (bad) int aad fldl out hlt sti add adc sbb add daa add aaa ds add add pop push add add sub dec push pop pusha add add mov lods mov ret lret add add in repnz add add add add and add xor inc add add dec push pop add jae jl mov xchg cltd mov mov add roll add add out out idiv add adc add and add xor cmp add jo jle xchg (bad) xchg popf movsb add add add mov mov add xlat fsubp in add testb add add add add sub add add dec push pop add jno add add add loop add in add idiv add sbb inc inc dec add add add js add cmpsb lods mov ret rcr loopne add testb add pop add add sbb sub ss pop popa imul mov scas mov ret lret aam faddl in repz add ltr add add sub add cmp add add push pop add add movsb ret lret rcr add jmp add add push or sub cmp dec add add outsb jne orl mov mov (bad) fucom add add add repz add add add pop push and add inc inc add add pop popa add jb jnp add xchg stos mov add fiaddl jecxz icebp clc add or push add add add sub cmp add push add add js addb mov add mov mov fucom jmp add cld add add add add sub add ss add push pop add jns xchg add mov ret lret (bad) in add testl add sbb daa cs add add add add add test mov mov fsub ljmp add or and inc dec push pop pop add jbe add mov rol add fiadd out cmc add add add add or sbb add add cs add push push add add imul add add mov ret int3 aam add xor push pop add jae addl add scas mov add add add loope out idiv add add add and xor inc inc dec add push pop gs jae orl cmpsb lods mov ret add rcr loopne call add testb push add adc cmp inc dec add push add pusha add jno jg lea add mov add add add add add faddl in repz add movhps push and add add arpl add add cmpsl scas mov mov aad add in repz add or pop push add sub inc add add push pop pop insw je add add add lods add aam fsub ljmp add adc add xor cmp inc dec add push add add pusha outsb jne orl scas mov add lret add fiaddl jecxz add repz add sldt sbb and sub xor inc add push add add add add jge add add cmpsl scas add into add add add out cmc add add add add add adc add sub xor cmp add inc dec add push add insl je add mov xchg add add add add leave add add add add out out testb add add adc add sbb and add add add add add add push addb add add lret add add add loopne out cmc cld add push or das add add dec add push add add je (bad) add mov mov add add xlat fsubp in repz add add sbb and inc add add add imul xchg add add add add add fildl add out hlt add add add push add push and add inc add push add insb add add add add add stos add les add add fucom jmp add cld add or adc sbb sub add add add inc add push add jb jp add mov add test mov mov add in add cmc add add adc add sub aaa add dec push pop arpl add add add jnp mov add add add add rolb fcomp add add add add add or add and das add ds dec add push pop add add jge mov add cmpsl scas mov ret add int fnclex jmp push add movhps pop es aas inc dec push pop bound jbe jg lea lods mov add mov loop lock or pop push and cmp dec push pop pop add jbe addl lea xchg add roll add add add add add loop add add sti add add add sub add inc dec add pop insw jae jl add lea add mov rol aad add out add testb push or sub cmp add dec push pop add add add je jl mov add add add add add add loopne jmp add add and xor cmp dec add push pop add add jle mov add mov ret add add aad fsubp add hlt sti add add sub add add push push pop gs jae add test mov add ret lret fild out cmc cld add adc pop es inc dec push pop pusha outsb add js add cltd mov add add add rcr jecxz icebp add add or adc and cs push pop pusha outsb add add addl xchg pushf mov rol aad add in repnz cld add adc pop add add imul add add mov add add mov lds add rolb add faddl add out out testb add add add add add add xor inc add dec push pop add bound jno jg add add scas add mov add flds loope add idiv add add adc add sub add add push pop gs je addl mov mov rol add (bad) (bad) out clc add or sbb sub cmp add jb (bad) mov test mov cmc sti add add add add pop add add add add add add push jns xchg lods mov add add int add in add cmc cld add and xor cmp add push pop add imul orl add add add aad in repnz add incl or pop add sub add inc add add arpl jns add add movsl add scas mov add (bad) iret add (bad) out add incb push add add xor cmp inc dec add push add pop gs clc incl add adc sbb and sub aaa add dec add add add add outsb add ja addb add add rcr add jmp add add add movhps pop add add add add add arpl imul add mov stos add add add add add add jmp cmc add add add pop add add add add cmp add add add jle add add add add add add out idiv add add adc aaa ds add add outsb add add sahf add add add (bad) in add add incl or add cmp dec add add add add cwtl add mov add add add add out add add incl add add sbb and das ss pop popa add ja addb add add ret add add fildl jecxz icebp add sti add adc add and pop add add add and xor add add ds dec push add add add jo add add add xchg add xchg add mov mov add add fucom add add idiv add pop push add add add xor add add data16 add orl mov add int3 add fsub ljmp add add add and xor add add pop pusha add add xchg add lods mov mov flds add add in add add add or and xor add add add pop add mov scas mov mov add fsubp add cmc add incb sbb xor add push add pop add jne add xchg popl add add add roll add add add add add add add add or lldt push add add ss add push pop popa push jg add cmpsb lods add add (bad) add add call add add add adc add add sub cmp dec add push add insb add mov test add add fsub ljmp add adc pop pusha add jno jg xchg add mov add add fucom add add add add add add add sub xor push pop pusha outsb add add add movsl lods add int3 rcr add in in add cld add adc add add add inc add push add pusha outsb add add add xchg add cmpsb add add add add iret (bad) add in in add std add add add and das add cmp inc add push push add insl je jge mov add add fsub add jmp add sti add or sbb sub add add cmp push pop arpl add xchg cmpsb lods mov mov fild add add add sti add add add and sub cmp inc dec add push pop add outsl add jg lea add out add add incl add adc sbb and xor ds dec push add imul add lods add add add add in add sti add or add push add and cmp add outsl add add add mov add add add add faddl add in add cld add add pop add sub xor aas add add add add add add add add roll add add out add add add add add add add aas add push pop arpl insb jae addl lahf cmpsb add roll add add add in hlt sti add add or sub cmp add dec push add popa add jb jg lea xchg popf add add mov rolb fildl jecxz icebp data16 add add add mov xchg lcall scas add add mov (bad) add add add add or pop push add add xor add push pop add gs jae orl stos add rcr (bad) in hlt sti add add add add add sub ss add add add add insl add add add add mov roll rcl fsubp in add add incb add es aas inc dec push pop add add jl add add (bad) lahf add add add movb add add fnclex jmp add add adc add add add add add inc add dec add pusha outsb jne add add lahf add test mov add movl add add add add testl add add push add and add sub add add ds dec push pop bound push add jne jle mov movsl lods mov add leave rcl add loope out idiv add add sldt sbb daa add add inc dec push pop bound ja add mov add movsb stos mov rol rolb add add fiadd add jmp add add or sbb daa add enter add call add push adc add cmp dec add push pop bound add xchg mov add mov add loope ljmp add add and inc dec add add pop add add jbe jg xchg add test mov int (bad) fucom add in hlt sti add add add add adc add add add add xor add add add add pop gs je add add lcall add into aad fucom jmp stc add or pop push and aaa add add add pop popa push addb movsl add rol add fldl out add add stc add add add add pop add and das ss add add (bad) mov add add mov add add loope ljmp adc add add cmp add inc dec add push add pop add add add addl add mov add fiaddl loop add repz add or adc sbb and add add xor add add pop pusha add push js add add xchg add add add add add fild add lock add add add and add xor add add js xchg add test add mov mov into add fucom add repz add sbb and xor cmp add add push add insb jae jnp add add add (bad) add add add std add add add sbb cmp add push add add imul (bad) mov add add mov add add int3 add (bad) add fild call hlt sti add or sbb add add xor cmp dec push add pop add add je jge test movsl add add add (bad) int fnclex add jmp stc add add add push add push and aaa ds dec add add popa add imul xchg popl cwtl add add movsb add mov rol aad add out add cld add or add and add add xor cmp inc add add dec add add add add mov xchg add mov add add aam add in repz add add push add sbb es dec add add arpl add jne orl scas mov mov add add loopne out cmc cld add or add add and cmp add add popa push add movsb add add roll add add in add idiv add and add add add add add add add add mov add xchg add mov mov (bad) fldl out add add add cld add or add add add add xor add add push push add popa push test mov add add mov mov add iret add (bad) add cmc add add add add and add add add inc inc add pop add outsb jne add addl lcall add add add fsubp in add add incl or sub cmp inc add dec add pop bound ja test add mov mov add add aad testb add adc pop add add jae addl add add mov aad jecxz add add add cli add ltr pop add ss push add add add outsb add add add jge xchg add mov scas mov (bad) int3 rcr add add add add std add adc add and xor add dec push add pop bound js add add movsb add add fcomp out cmc cld add pop add adc sbb add xor inc dec add add add popa add add jbe test mov mov add in hlt sti add add add sbb add inc dec add add jb addl add add add iret add fiaddl add add add add cli add adc and add add add add add add loop add add add add adc add add add sub aaa add push add add je (bad) add add add add add add add add add add add fsub ljmp add add xor inc dec push pop add arpl add mov lods mov (bad) lret add add add add jmp add add sbb and cs inc dec add pop add push jp orl add test add add sbb sub cmp inc add add pop add add jge xchg stos add aam add in repz add add add sbb add and add xor dec add fs jae addl mov mov add ljmp push or add sub add add inc add add push pop add outsl jbe add add add add add stos add add add add (bad) jmp add add add add add daa cs push pop add je (bad) mov xchg cltd mov add roll add aam fldl out hlt add add or sub cmp inc add add add add add add xchg add add add add fsubp add add add add adc add sbb cmp dec push add add mov scas mov add add add rcr add add in add testb add or add add and add cmp aas inc add push pop add add add xchg (bad) xchg add mov mov mov add add add loope add in hlt sti add add adc and add add cs add add gs jae jnp add xchg sahf add mov lret add aam fucom jmp add cld add add sbb daa cs add push add add add outsb add jle mov xchg pushf add leave rolb add add add out add add or add add and add add add pop pop insw je (bad) add popf movsb stos add add fchs add lock add sbb add das ss add add add add add xchg popl add add rcr loopne jmp add add adc add and sub add add add arpl insb add add add add add add mov lds add add aam add in hlt add add or pop pop add add xor cmp add add outsb add add jp add add mov xlat add add out idiv add adc add sub cmp inc add add add add jp mov xchg add mov add fucom add add cld add add sub xor add add add mov add lods mov add add loop add sti add or adc add add xor inc add add dec add imul orl mov fchs add ljmp add add add sub add add dec push pop arpl add (bad) add test mov mov add in repnz cld add adc pop add sub add cmp add add add jge mov add lods add faddl out add cld add add push adc daa add aaa add add push pop imul add mov stos mov add enter fsubp add add std add adc add sub add add add dec push pop add arpl add add add add enter fchs out add std add add movhps pop add xor dec add pop add push jg add cmpsl scas add add add fiadd add add add cli add add adc add add sub dec push pop add push jp test add mov add (bad) into aad add out hlt sti add or sbb and add xor add inc dec add pop popa push addb cmpsb add (bad) int add in in repz add add add add add add inc dec push pop bound push jb jnp mov test add aam add add repz add lldt push and add add dec add pop pusha push addb add movb iret (bad) fucom add hlt add add push and xor add inc add push pop add outsl add jns addl lcall add into aad add add add icebp add add add add adc add add cmp push add add jne jle add mov xchg add add add fldl in add cld add add add adc add and add sub add pop bound add jp add mov mov rolb (bad) call add or add add and xor add dec add gs add test add add fiadd out cmc cld add adc pop add add add cmp add pop add add add xchg cltd mov mov aad fsubp add hlt add incb push or and cmp dec add add add jns xchg stos mov add add ror rcl fiadd add add repnz add add add adc add and add cmp inc add push add add add jle add add add add add rolb add fldl add out add testl or sbb and add cmp inc add imul add movsl lods mov ror rcl fsubp add add add push add add sbb es inc add pop bound add xchg stos mov add add lret add add jecxz icebp clc incl add add add and add add cmp add add push pop imul jp add lods add add fildl add add hlt add add adc pop add ss dec add pop pusha add jo jg add mov add add lret add add xlat fsubrp testb incl add add add add add add add add push add outsb jne add lea add mov add add xlat add add add icebp clc add pop add pop add add and add inc add dec add add gs jae addb nop xchg sahf add mov rcl fsubp add out idiv add sub xor aas inc dec push pop add jno jns add fwait mov add add add fchs add add repnz cld add add adc xor add push push pop add add loopne add repnz add or pop add add add cmp inc inc dec push pop add jns add add lret add aad add loopne out cmc add add or push sbb dec add push pop add insb add test test add sbb add xor dec add pop gs jae (bad) mov lock add add add pop add es dec add push add gs add add add mov mov rcl fiadd add add in repz add movhps add es add add dec add push pop add je jl add add mov add xlat fsubp jmp stc add or pop add add add add xor add push pop add add jno add add fwait add add mov aad add in repz add add add sbb and xor ds add dec add add push addb mov mov add add add out idiv add adc sbb add add cmp add add pusha add add orl ror add add loope out idiv add or adc and add xor cmp dec push orb add cmpsb lods mov add add fsubp in add add add push or sub xor cmp add dec add push add add arpl jb add add pushf add movsl add add fchs out cmc cld add adc add add add sub xor aas add add dec push pop pusha add push add add add popf add add mov fcomp add out idiv add push or and dec add push add add imul add movsl lods mov roll lret rolb fiaddl jecxz jmp sti or sbb es dec push pop pusha add jbe jle add add add xlat fsubp in repz add add adc and add ss push add add jae orl mov add mov add fucom add repz add or add and cs add push add pop add add imul orl add mov fsub add repnz add add add pop es add cmp add add pop insw je add add mov mov add add fsubp add cmc cld add add sbb add add cmp add pop add add add mov cmpsl scas mov ret lret fiaddl add ljmp or adc and das ss dec add popa push add cwtl lahf cmpsb lods mov mov (bad) in hlt sti add add sbb sub add aas inc dec push add pop add outsb jne orl add add add lret add aad fsubp jmp hlt sti add or sbb and arpl push pop add outsl jbe test add mov fnclex jmp add add adc add sbb add sub aas inc dec push add imul jp mov add add into aad jecxz in add sti add adc sbb add xor add dec dec add pusha outsb add add jnp mov add add xchg sahf add add ror out add cli add add add movhps push and add add add push add imul add xchg cltd add add add add add add rolb add fldl in hlt add add push push add add sbb add xor add inc add add pop bound ja jg lea add add add rol aad add add out add std add adc add sub aaa aas inc dec add add jbe jg xchg mov mov int add add out add add add add adc add sub add inc inc dec push pop add add ret lret add loop lock add add add add adc sbb daa cs push add pop gs jae add cmpsb add mov add mov add fsub jmp cli add movhps add add add push pop gs jae jl add add lods mov add aad jecxz repz add add sbb es dec dec add add jle add mov add lcall enter add (bad) fucom add out cmc cld add add outsl add add add add rolb add add out add add ltr pop es add add pop arpl js xchg mov mov add add add add jmp add add adc add add and aaa add inc add push add add imul (bad) mov cmpsl scas add mov aad add in repz add add sbb xor inc dec add pop add add add cltd add les mov fadds loope add add cli add lldt push and dec dec push pop add outsb jne orl scas add mov rolb iret (bad) fucom jmp add add add pop push add add and add add cmp add pop pusha outsb add test add add mov add fiaddl jecxz icebp clc incl or add sbb xor add outsb jne jge add add add movsb add add enter add out add testl or add add add push add jno add mov add mov add add fild add ljmp add or add add cmp pusha add jno jns xchg add add fcomp out add icebp clc incl or sub cmp inc dec push pop add gs jae orl mov mov (bad) fucom jmp hlt add add add add add add add add sub dec push pop pop data16 jge mov movsb stos add add add add inc dec add add jae add add sahf movsl lods add mov les add aad fiadd out add std add add add add add sub xor cmp add push pop pusha add add lea add movl loopne call push or pop es dec add pop bound add add mov add roll fiaddl loop lock add add add or and add xor add add push pop pop insw je jl add add stos mov mov rcr loope add add add add or sbb add add sub add add imul add add add lods add add mov add add add add pop daa add aaa add aas add add add add pop add je (bad) add test add aad add add add add add std add add add sub add add dec push pop add add ja jg add add add fchs out add std add adc add and add cs add pop add jae orl add add add add add out add add incl add adc sbb and das ss pop popa push xchg add lods add add add add cmc add add add and add inc add push add pusha outsb add add add xchg cwtl lahf add add add add add lret aam add ljmp add adc sbb sub add inc dec add arpl imul add add movsb add add mov mov add add fsub add add cli add ltr add and sub xor add push push pop add je add test mov mov (bad) add add call add or add pop es inc jl add mov add rcr loopne add icebp clc add add add adc and add add add add add add add inc add add pop add gs add add js xchg stos add add fchs add add repnz add or pop push add add xor ds add add add outsb jne addl xchg cltd mov ret lret aam add add add lock add add add add xor cmp inc add add push pop pop insw je addl xchg cltd mov add ror rcl add loope testl adc pop add xor dec add add pop add add add test add les add add fcomp add add add add testb push add ltr add sub add inc add push pop pop data16 outsl jbe add xchg cmpsb mov add movl loopne add icebp add add incb sub xor add cmp push push pop add add jle add add scas mov ret lret add fldl in repz add add pop push and dec dec add pop add arpl imul jne add sub cmp inc dec push add add add jne add add enter loopne add add add dec pop add jbe jg add add mov add int3 add fsub ljmp add adc sbb add add inc inc dec push pop add add orl add add (bad) add lock stc add add add sbb add add add add aas inc add add add arpl jb jnp mov add rolb fildl add in add cld add inc push push pop add push addb nop mov add rcrl and sub add add ja test add add xchg lret add add add out add add add add add add push pop add add add add add add sti add add cmp add mov mov mov add fildl add add in add add sub add add add insw add add mov roll add add in repz add add ss add add add mov add sti or sbb add sub add add add arpl add add add movsl add scas mov mov fsub ljmp adc add ss add imul add test mov add ret rcr add loop lock add add adc add add push and add add add data16 add jb add mov stos add add enter in in repz add or add and add add cmp add inc add add push add arpl add je add add mov add add leave add add loope ljmp adc sub add pop insw je add add mov add (bad) into aad jecxz add hlt add add or sub add add add add outsl jbe add xchg lahf cmpsb lods mov ret rcr loopne out cmc add add or add pop daa add ss add popa push add add ret lret add fsub jmp add add stc add push adc daa add add dec push pop arpl js add mov add movsl lods mov ror roll add add fild add ljmp add pop push adc cmp inc dec dec push pop add jbe add sahf movsl add lods add mov (bad) add loop add repz add add pop push add add and add add cmp inc add add dec push pop arpl add add jle mov add xchg add add movsb add movb aad jecxz add add add push or add add adc add and xor add add add dec add add add push add add jno add jl add add stos mov mov int fnclex jmp sti add adc sbb daa add add inc inc dec push add add add js orl ret add flds add add add cmc cld add adc add add add add add add add dec add add push pop gs jae orl mov add faddl add in hlt add add push or add xor add inc dec add add push pop add add add (bad) add lea xchg add add mov lds add rcl fsubp add cmc add add add add sbb add add add cmp inc add add dec add pop add add jno add cltd mov add mov add add into add fldl add add add add std add adc and cs cmp add pop pusha outsb add js xchg add add add add add add hlt add add and sub cmp add add popa add imul (bad) mov xchg add add add add add aam loop lock add add adc sub add add inc dec add add add lcall add into aad loop add add sti add add sbb add add xor inc inc add add pusha add add add mov xchg lcall mov add add add roll add add ljmp or add sbb sub add add aaa add inc add add add push add add imul add mov mov mov add aam loop lock cli add add adc pop es dec push pop add add add add xchg add aam loop jmp add add incb sbb add cmp push add add imul add mov add add into aad fucom jmp hlt sti add or add sbb sub xor inc dec dec add add add add jbe add add cltd add add cmpsb lods mov mov aam fsub add repz add add adc add add cmp add add add add add add test mov add add les add aad add add out add std add add add adc add sub cmp inc add add add add ja test movsl add rolb fcomp add add add add add add add or adc and sub add inc inc dec add add add add xchg nop xchg add add add add loope add repnz add push adc add xor add add push add outsb add test mov add add add add add out add add incl add add adc sbb daa cs add push add add add add lea xchg popf add cmpsl add movl add jmp add cmp add add add add jnp add mov add add movb add fcomp add out add add add add or add add and cmp pop popa add add add add add add add stos add add loopne add in repz add add add or add sbb daa add aaa add dec dec push add add imul (bad) xchg pushf mov add add xlat fsubp in repz add or pop add add sub xor cmp dec push pop add add jg add add mov (bad) call add push sbb xor add add pop add jl test mov xchg add add add mov ret add add (bad) fucom add add add incb add sldt add add sub add add inc add add imul add add add lcall rol iret (bad) fldl in add sti add add add add add add add add ss push pop add add jne add add add mov add ret lret add faddl in add cmc cld add adc pop add orl lods mov mov add faddl in add sti add add adc sbb add add add aaa add inc add pop add jae jl mov mov add add rolb add loop add add testb add add add sub add add dec add pusha outsb jne addl xchg cltd mov mov (bad) fsub ljmp add sbb and sub cmp inc dec add pop add outsl jbe jle xchg (bad) xchg popf movsb add add into aad add loopne call add or push sbb add dec push pop pusha add jo jle xchg stos add rcl fiadd out cmc add add add add sub add inc add add add add add lea xchg pushf mov mov add lret add fildl in add cli add or adc sbb add add add cmp inc dec add add imul xchg (bad) xchg popf movsb add add mov mov add add loop lock or add sbb sub aaa add add inc add add pop add insb jae addl add test mov les int add add add call add add add sbb add xor cmp inc dec add push pop add outsb add test stos add rolb fadds loope jmp cld or sbb sub xor cmp inc dec dec push add outsb jne jge mov xchg fwait mov mov add (bad) in hlt add add add push adc sub inc dec add add popa push xchg add cmpsl scas add add faddl in add add add or adc add xor dec push pop bound jno jg add add xchg lcall add add lret add loop add repz cld add adc add add add add add dec push pop arpl imul add mov mov add add add add add flds add in in hlt sti add or adc add add es add inc add add pusha outsb jne add mov mov int fnclex jmp add or pop add add cs add push jp (bad) add scas mov mov iret (bad) add loopne out add clc add add or sbb add cs push add arpl jae add add mov add in add hlt add add pop push add add and aas dec push pop add add add add xchg add add add add int add jecxz in add add add add add add pop es dec add add add jae add add add add add mov add add add loop add add add add add push adc cmp inc dec dec push add add add add movsb add (bad) lret rolb fildl jecxz icebp clc incl or add add dec push pop bound add add test mov add jmp add xor inc inc add add add add jg lea mov rolb rcl add loopne out add clc incl or add sbb add add xor add add add add add add jo jle add popl add lods add add add add add add idiv add sbb add cmp add add add add jb jp add mov add test add iret add add loope out idiv add add adc sub cmp add dec push pop bound add je add mov mov fnclex jmp add add add add sbb addl add test add mov lret rcr loopne out cmc cld add adc and add cmp inc inc add add popa push add add ret lret add loop jmp add std add pop add pop push add add add dec add add pop arpl add jle add sahf add movb add add add add decl adc add pusha add imul add mov add add out add add or xor inc inc add push pop add test mov (bad) (bad) add add add clc add add or sbb and sub add inc dec dec push pop gs add mov add lods add int fnclex add repnz add lldt push and ds dec push pop add jb addb nop add add add add add in repz add add add add add sub add add push add imul add xchg lcall int3 aam jecxz add repz add push add add push add sub add cmp inc add dec push pop pusha outsb jne jge xchg mov xchg popf movsb stos mov add leave rcl fiadd out hlt sti add add daa add aaa add dec dec push add add add jl mov add ret add rcr loopne out cmc add add add or add add and sub inc dec push pop pusha outsb jne jle mov add mov add leave add rcr loope jmp add and add xor add push add add add add add cltd mov add rcr fild add lock add and add add add add dec add pop add jbe add popf movsb add scas add add mov fsubp in add sti add adc add add sub add aas add dec push push pop add outsl add addb (bad) xchg add add add int add add out add cld add or add sbb cmp inc dec push add add add add add jg add add add lret rcr add jecxz icebp add add add adc pop add add add das add add add add dec add add add add add xchg add add int3 roll add fsubp add add testl add pop es add inc dec push push pop add push mov add mov iret (bad) fucom add add cld add add add add sub add add inc inc dec push pop arpl jb addb add add enter in add add add add push adc add add or add ljmp add add sbb and cmp add add jbe add add add add add leave rcr fild add lock push sbb add add cmp inc add add add pusha outsb add add cwtl add add mov add ror add fsubp add out idiv add add add adc add sub cmp add dec push add pop pusha outsl jbe add mov rolb add roll fildl jecxz icebp clc incl push add add and sub add add add pop add add push xchg stos mov mov xlat fiadd out add testl adc add add add cmp add add add push pop add add jbe add add add add rolb jmp stc add add or add add pop add das add add add add add pop data16 jne add jg lea xchg pushf mov ret add add add rolb fiaddl jecxz add add add incl add push add add add add add inc add add add pop bound jno jg add add add flds add testb add push adc sub dec push add add outsb add add sahf add mov (bad) fucom add add add stc add push adc sub push add add add add (bad) mov test mov mov add add add add repz add incl add adc sbb add sub cmp inc inc dec add add je jl add lea add scas mov mov add add add aam loop add repz add add add add and add add add add add add add push pop add imul add test lea scas add add (bad) fldl add call cli add or adc add sub aaa add add add popa push addb movsl add scas add mov lret add fnclex jmp add or add add sub add add add inc dec push pop pusha add add xchg add scas mov mov aad jecxz add repz add or add inc dec add add add add ja test mov add enter add loope add testl push add and sub xor add dec add pop add popa push xchg add cmpsl scas mov add add ret lret add add fadds loope add add add add add add add add pop add daa add add aas inc add add pop add jo add orl mov add (bad) into aad add loopne add icebp clc add add or add sbb sub xor add push add pop add outsl jbe jg xchg mov mov add add add push pop pusha outsb jne add add add test mov add xlat add add add add add add adc add and add xor add inc dec push arpl add add addl xchg add pushf add cmpsb lods add add mov fucom add add add incl or add sub inc dec push pop add add jae addl add add (bad) into aad jecxz icebp clc incl add adc add add add sub cmp dec add add add add ja test mov add add mov fnclex jmp add or add pop add sub aaa ds add dec push pop imul jp add mov lahf add add ret roll add add add call add add sbb sub xor cmp add dec add add insl add orl add mov mov fsub add in repz add add add add adc add add add add xor add add add add pop gs jae addl stos mov rol add fcomp add jmp add movhps add add add add add add jge mov add add mov fldl in add add repz add add add push add add sub ss pop bound ja add add ror rolb add loope out testb push or add add sub add add add dec add push add add add orl add add int3 add faddl add add add incb add add and xor add dec add add outsb jne add add add add add add add add fsub out cmc cld add add add add cmp add push pop popa add push js add mov add add lret fiaddl loop add clc incl or and aaa add add add add add add xchg lcall scas mov add loop add add add add adc add sbb cmp dec push pop add add jns xchg (bad) xchg popf add add mov int add fiadd add add add add cld add adc and add xor ds add add add push add cltd add mov add add flds loope out add stc add add add add daa add add cmp inc dec add push add add add jbe test mov xchg add add into add xlat fsubrp add incb and xor add add dec add add add outsb jne add mov rolb add add fnclex jmp add add add add sub xor add inc dec dec push pop imul add add lea lods add rcr add add in repz add add sbb add add add add cmp add add add pop add imul add mov add iret (bad) add add add add stc add add or adc add add add dec dec add add bound add jp add add fcomp out hlt sti add movhps add daa cs pop add bound add add mov scas add add mov into add add add jmp push or sub cmp inc dec add add add add addb stos mov rol rcl fiadd add out add incb and xor add aas add add add add pop gs jae addl xchg pushf add add mov lret roll fildl in repnz add add or adc sub add cmp dec add push pop add jno add add mov mov lret add aam fucom jmp repz std add adc and add add aas inc dec push pop arpl add jnp mov xchg add add mov add out hlt sti add adc push and ds dec push pop popa imul jge xchg (bad) xchg sahf movsl lods mov add add add rcl add add add add add incl pop movhps add dec push pop add add add lahf cmpsb scas mov sub mov mov add (bad) fucom add out idiv add add add cmp dec push add add arpl add (bad) mov add add lret loopne add add add cld add adc sbb sub xor add push pop add jns add mov add xchg sahf add add add add sub cmp dec push add add roll rcr fiadd add out idiv add pop push adc add dec push add insw add test add add rcr loope ljmp add or add add xor cmp inc dec push push pop gs je jl mov add mov add leave add rcr loope ljmp pop add daa das add cmp add push pop pop add imul nop xchg add lods mov ret add in add add sbb sub xor inc add add imul add add mov add add add add out cmc cld add add add xor add add dec add add popa add jb addb add popf movsb stos mov add add jecxz icebp or add add add add sub add add add push pop arpl ja add add mov (bad) add loopne out cmc add incb add add add cmp add push push pop add add orl scas add iret add fiadd out add add hlt add add add add pop add add sub cmp inc dec push add gs jae add add mov rolb add rcr loopne out add std add add adc and add add add push add pop add add add orl mov rolb lret add add in add add add pop movhps add add add sub add add insb add ja test add add xchg add popf add add add lods add add add add (bad) call or add add add add inc dec push pop popa add imul (bad) mov lods mov ret add add add add add jecxz jmp repz add or add and add ds add push add pusha data16 add add add add add rcr loopne out cmc add add add adc pop add add xor add dec add add add ja jg lea xchg popf movsb stos mov mov enter add loope add add cmc add add add loope icebp clc add push add pop add daa add add inc add dec add add push addl lcall mov add aad add out hlt add add add add or sbb add and add add add dec add push pop bound add addl add xchg cltd mov add fsub ljmp adc add add add add add push add add addl mov mov rolb rolb fcomp add add icebp clc add add add add and dec add add pop arpl mov add add fiadd out add add push or add add xor dec push pop add gs add mov xchg cltd mov mov add mov aad add out out cmc cld add sbb sub cmp inc add push pop pusha outsb jne add xchg stos mov mov rcr (bad) add idiv add or sbb sub add cmp dec push pop arpl add jnp add pushf mov add add add aad add add add add add add or and xor aas inc add pop arpl add add add add lret rcr loopne add idiv add or add pop es dec push add add add add add test mov les add iret add add loope ljmp add sbb add xor cmp inc dec dec push add pop add add ja add movsb stos mov add add add add (bad) add add out add clc add or add add and das ss add imul xchg cmpsb mov add enter add out cmc cld add add and cmp pop add jns add fwait add enter add add in add lock add or adc sbb es add pop popa push addb add add rcr loopne out add incb add add cs dec add add add add orl mov les int3 add (bad) add loopne add testb push add add sbb add cmp inc dec push pop data16 jge xchg stos add lret add add add in add add add add pop add das ss pusha add js addb (bad) xchg popf movsb stos add rcr loope add icebp clc incl or and cmp push pop add add mov add stos add rcr add add add in hlt add add add add pop add add das ss add imul (bad) xchg popf add (bad) lret add add loop or sub cmp dec add add add insb jae add add scas mov (bad) lret rcr add jecxz jmp add add or add and sub add inc add push pop add push add jl add mov add leave rcl add add jecxz add hlt add add add add add push add sub add cmp inc dec dec push pop add jne jge add mov xchg cwtl lahf cmpsb lods mov mov add loop icebp clc add pop add add add and add xor cmp inc add pop add add jg add lcall mov fsub add out add add pop push add sbb and sub add add dec push pop add jne jg lea mov mov fcomp add add testl push sbb cmp add inc dec push add pop imul jnp orl add ret add add jecxz jmp add add or add and sub add add add pop add arpl imul addl fwait mov mov add fiaddl add ljmp add or add add add and add addb add add rcr loope ljmp adc sbb add das add add add add add add pop add jno jns add add movl add repnz add add add pop es add add add insw je add mov mov fsubp add cmc cld add or and dec dec add add arpl add jnp mov add movsl lods mov add leave rolb fchs out add add cmp inc dec add add bound push add add cmpsb add roll lret rolb fiaddl jecxz icebp add add or push add add add add inc add add dec push pop insl jne add add add leave add add loop add add add add push or pop add sub add add dec push pop imul orl mov mov fsub ljmp add and sub add cmp inc dec push add pop add insl add ja test add add xchg lcall add enter add add add loope add repnz add or adc add add add sub xor aas inc dec add arpl insb jae add lahf cmpsb add add add movl add call add add cmp inc dec add add push addb stos mov add ret lret add loop lock add add sbb sub add add inc dec add pusha outsb jne add add add cmpsl scas mov mov add aam add add in add idiv add add push sbb inc add push pop gs add jle add stos mov add ret add add fildl jecxz icebp add add add add sbb add sub xor cmp push add add add jno jg add add add int3 add (bad) fldl in add add add add sldt sbb and xor add push add imul jnp mov add add test add add mov add add (bad) add add incl or add add add sub dec push add push addb lods mov roll lret add add fucom jmp add idiv add sub add inc inc add pop add outsl jbe test mov add stos mov roll rolb add loope add in repz add movhps inc dec push add add add add add roll rcr (bad) add add add cld add add add sub add add push pop insw je add xchg add mov add leave add add loope add in add testl sbb and xor cmp add pop data16 add jae add jle mov add add add add add fnclex jmp add add add or adc and add ds dec add push pop imul (bad) mov test add mov shll push and dec dec add pop popa add jb jp mov mov add add rcr fild call stc add add or sbb daa cs push pop popa push jp mov lods mov add add add add (bad) in hlt sti add or add push sbb xor add push add outsb add mov add leave add roll add add add ljmp adc pop add add add xor cmp add jo jg xchg nop xchg sahf movsl add add add mov mov add fcomp out add clc add add add add sbb add cmp add inc dec push add imul add cwtl mov mov faddl add call add sldt sbb sub ss add imul add mov ror aam fsubrp lock add dec add add add js mov add mov (bad) int3 rcr add in cmc std add and xor add add push pop popa push js add xchg lahf add add enter (bad) ljmp sbb add add pop add data16 jb xchg mov fcomp out add sbb inc dec add push pop pusha add add add add mov add (bad) lret rolb add jecxz icebp clc incl or pop add sub xor add add push pop add imul add add add scas mov (bad) lret rcr loopne call or adc add sub xor add inc dec push push pop add push add add mov add mov aad fucom jmp repz add or add sbb add add add cmp add add add add add add add add fsub ljmp add adc add add add add add add add aas add add pop add popa push add mov xchg add mov mov add push sbb add add inc add pop arpl add outsb add js xchg mov add mov mov rolb add add add in add sti add add add and add add add add add add pop gs jae add mov mov add fiadd out hlt add incb add add add add sub add add add add add imul mov xchg cltd mov ret add rolb (bad) call add add push add add pop push and aaa add add pop add add jge add mov lods add mov les add add add add add add add icebp add add add add adc add add add xor add add pop popa push add add mov mov xlat fiadd add jmp add or add add and sub cmp inc add dec add push add data16 jl add movsl add (bad) add add (bad) idiv add or pop es inc dec add arpl js add xchg add mov add rcl add add jmp add add adc and cs add popa add add add lcall mov add ret lret fabs add ljmp adc sbb add add add cmp add add add imul add add addb add add add test add iret (bad) fldl add call add push add sbb add xor add inc dec push add jno add jge add mov mov add add add fucom jmp add add add or adc sub add cmp add jo add jl mov add add iret add (bad) add cmc cld add adc add add and add inc dec add add add imul add mov stos mov rol aad fucom add repz add add or add add sub cmp add push add imul add add add mov add add add rcr loope add add out idiv add or add add add add add aas inc dec push pop bound add add jge add stos add mov rcr add loop ljmp adc push and inc dec push add add add add mov add fcomp out add idiv add pop push add add es aas inc dec add add add add js add add add add mov add add add add add add add adc add and xor add inc add pop pop jno add add xchg mov add add add in add add incl or add cmp add dec add add add jae addl add add into aad jecxz icebp clc add add adc add add add sub push add add add add add add mov xchg add mov leave rcr add jmp add sbb and add dec push pop arpl jg nop xchg mov add enter add in add add or add sbb es add add add add add add sahf cmpsb scas add add enter add in in add incb adc add and sub add pop add gs add jbe test add add xchg add popf add add add lods add add rcr add add in hlt sti add adc sbb add daa cs add add imul orl add add int3 add fucom add hlt add add adc and das ss add pop add gs jae (bad) mov xchg add add add add add leave rcl (bad) in cmc cld add pop arpl add add add cmpsl scas mov mov (bad) fucom add repz add add add add sbb add add xor add inc dec add add popa push add add xchg cwtl lahf add add mov add add add jmp stc add add or adc and add xor inc add dec push add pop imul add add add add xchg add add mov add add lret loopne out testb add add adc push es dec dec push add insl je add jg mov mov enter add out add incb pop push adc sub add dec dec push add add add add jnp add xchg popl xchg sahf add add int3 rcr add add in hlt sti add add adc add sub add aas inc add add insw je jge mov xchg fwait mov scas mov add rol add add fildl jecxz add add idiv add add and add inc add add pop pusha add push jb jp add xchg add mov add xlat add loope out add add add add push add add add push add and add cmp add pop arpl js xchg popl add lcall lds add (bad) fldl add in hlt sti add or sbb daa sub add add push add add jb add add mov loopne ljmp add or add adc sbb and add add ds dec push pop arpl add jne test mov ret rcr add add out cmc cld add add and sub cmp add add add add add push add add add mov add add aad add sub add add add dec add add jbe add add xchg pushf add cmpsb lods add rcr loopne out add incb push or add sub add push pop add data16 jbe add sahf add cmpsl add movl add jmp add incb add add sub xor add cmp add inc add push push add pusha add js xchg add add xchg add mov stos add rcr (bad) add add add add add or adc add and add add dec dec push pop add add ja addb stos add rcr loopne add icebp clc incl or add add ss push pop arpl insb jae orl stos add add add add add out add add add add adc sbb and xor ds dec push add add jns addl lcall rolb lret add loop jmp stc add add add pop add sub add add dec push add add outsl jbe add add movsl lods mov add lret (bad) in hlt sti add add add sub add add add dec add add add add add add addl add xchg pushf mov movl jmp add add add add sbb add xor inc add dec push pop pop data16 jl add sahf movsl add add enter fiadd add add in hlt sti add adc add add add add add add dec push add add jb jp add xchg mov xchg sahf movsl lods add mov xlat fiadd out hlt sti push add pop add add add xor add add add add pop pusha add ja add cwtl mov add add into add add out hlt add add push or add sub dec push pop add outsl jbe test add mov aam loop add add add incb add pop add and sub add inc dec push push pop add jnp mov mov add ret lret fild add out idiv add or and cmp add pop data16 jo add (bad) add add (bad) xchg popf movsb stos mov add add add loopne add jmp repz add add or adc add add add inc dec push add pop gs add jne add xchg add mov add add add add add add add add in repz add movhps pop add add add cmp dec add add push xchg movsl lods mov add add add iret (bad) fldl in add sti add adc push and cmp dec add pop pusha outsb jne add add add add add enter in sti add sub xor add inc add add pop popa push jp mov lods add mov add add lret add fsub add in add testl add sbb sub add add cmp dec add add add add outsl jbe add cltd mov add roll add loop add repnz add add adc add add pop add sub add add add add add push add add add add js xchg add (bad) add xlat fsubp in add sti add add adc and das aaa add add add add add jg out repz add add adc add add add xor inc add add add add insl add add add orl test add add add fsubp in add add add add sbb add xor add add pop pop add jl test add mov add ret lret add add add loopne out cmc cld add add push adc xor cmp add inc add add pop add jo add xchg add mov mov mov (bad) fucom add add add add cld add add add or adc add and add cmp add push pop pop insw add jge add add mov add mov aad jecxz icebp add add movhps add sub add xor add dec push pop add add jg add nop xchg add mov mov xlat fiadd add add add add add add or add sbb es add add imul add add mov nop xchg sahf add add (bad) int fnclex add repnz add or add add sbb add add xor add push add add pop gs jae addl lcall add add add and add add add inc add push add add add insl jne add addb movsl lods mov add add ror rcr loopne add jmp stc add add add add sbb add sub dec add add add add jl mov test (bad) int add jecxz add out add add add add or adc sbb cmp inc dec push push add insl add add add jge mov xchg fwait add add add add in add idiv add adc add add add cmp add dec push pop add jo jns addb add mov faddl add add out add add add add add push add add sub xor add push add pop add add add add add iret add add add add add cmc add add movsb add out idiv add sub add cmp add add arpl add movsl jmp add add add sbb xor dec add arpl jae jnp test popf movsb stos mov add add add fchs out lock add push adc xor add dec push add imul lea xchg add add mov (bad) add out out add clc add pop push add push and cmp add add outsb add add mov add add ret add add aad add add stc add adc and add add push push add outsb add add jnp mov add mov flds loop ljmp add adc and sub cmp add pop arpl insl je add jg add add mov add in repz std add or es aaa aas add add add aam loop jmp repz add add push adc add add dec push pop popa add jb addb lods mov xlat add add lock push or add sub add add add push add add jae add mov add int3 add faddl in add testb push add adc cmp inc dec push add pop add add jb add add test add add into (bad) add out add add cld add push add sub add xor add pop add add jae jl test cmpsb lods mov add movl clc add add add push add sbb add add add xchg add movsb lods mov ret rcr (bad) add add add or add adc and xor add dec add popa push xchg add add xlat add add out idiv add add add xor add add add push add data16 jne add mov add rolb (bad) add icebp add cld add add and xor inc add pop add add jbe add test mov add add add aam fucom jmp add add add bndldx sub ss dec push add pop add jbe jle xchg lods mov add mov xlat fiadd add out add add pop push adc add inc dec dec push pop add add add lea xchg popf movsb stos add mov mov aad jecxz jmp add add cli add add adc pop add add xor aas add add add pop arpl ja add add lods add mov add into add add out add icebp add sti add or sbb add das add inc dec add arpl add add add addl add add add lret rolb fiaddl loop lock add sbb and das ss pop add fs jae addl add add add enter add loop lock add add cmp push add outsl ja test mov test add mov aad fiadd out cmc std add adc add sub cmp inc add add add jns (bad) mov add vpaddq faddl add add ljmp adc sbb add sub push pop popa push addl add add int3 aam fsub ljmp or sbb and das add add add dec push pop add arpl add add add add enter fchs call add push add sbb xor dec push add add outsl add add sahf add (bad) int3 rolb add add out add clc incl or adc add cmp dec push pop pop insw add jge xchg add xchg add mov fildl add in repz add or pop push add add xor add inc add push add imul xchg cmpsb add (bad) into aad fucom add hlt add add push or and sub add add dec push pop arpl imul add xchg add add (bad) fldl out out cmc add add and sub xor add ds dec add push pop add add add add faddl in add sti add add adc sbb add dec push add popa add imul add jge add stos mov mov add add fsub add repz add add push or and add add add inc inc add add push add test mov mov mov add fild out add add add add add adc add pop add das add inc add pop arpl add jl test lea add rcr loope ljmp add add mov add jecxz add add testl or adc add sub aaa add add add pop arpl add xchg lods mov int3 add add add fildl jecxz repz add incl or add sub add add add add add pop add add jbe jg lea add mov add loopne out cmc cld add add add adc pop es inc dec push pop popa push addb add test mov (bad) lret add fiaddl loop jmp stc add or add sbb add add xor inc inc dec push pop add jns xchg popl add mov flds add ljmp adc pop add add add inc add dec push bound add jne add xchg stos add (bad) add in add add clc add add adc add es add push pop add imul xchg lods mov mov roll add add add add icebp clc add add add add add aas add add pusha add add jae addl add test mov add movl add hlt sti add add or and cmp pop popa push jp add mov add loope ljmp cmp inc inc add add pusha outsb add test mov add (bad) into aad jecxz add stc add push add sbb and sub aaa ds dec push add add insw je add jg add nop add mov add (bad) into add fucom jmp stc add or add add sbb add sub dec push pop pop insw add ja add mov mov mov add add call add add add add add sub ss add add add imul add add add add aad add out add add incl pop add pop push add sub add pop bound push add jnp orl add mov rolb add add aad add add out cmc cld add push or add add add sub xor aas add add push pop pusha add add jl add add add lret rcr loopne add icebp clc add pop push add push add sub add add dec add add pop add outsl add add movsb stos mov add add add enter flds loope add add cli add add add sbb cmp popa add add je (bad) mov add xchg fwait mov add into aad fldl add add add incb add add xor cmp add add add pop add imul add cmpsl scas mov mov aad add jmp add add add add add add and sub xor cmp add add inc dec add add push jg add add mov add rcr add add in add add incb sbb add xor add inc dec push pop add imul orl add add add add cli add adc sbb add xor add cmp inc add dec add add add gs jae jnp mov add add mov loop add out add idiv add push and dec add pop add add js orl add aad fucom add out add add cli add ltr pop add xor add add add add mov test add iret (bad) add add add add hlt add add push or sbb daa add aaa add add add add ja addb mov lods mov mov aam add add add ljmp add sbb add add add inc inc dec add add add pop add sub add add dec push pop add add add add xchg add add mov add leave rolb add loope add add add std add pop add xor inc add add add arpl add jnp test add add rolb fchs out add add push add adc sub add add push pop add add mov add mov add leave add rcr loope out add stc add add add sbb add add add add aas add add dec push add pop add add ja test mov mov xlat add add add ljmp add sbb and sub add cmp add dec add imul je (bad) add popf movsb mov add add add add add add add out lock or add add add sub add add push pop bound push js add test popf add mov add fild add lock push add adc sbb add xor add add dec add push add data16 jle add movsl lods add add add add in repnz add or add and das ss add add add jae orl add aam add add add add in cmc add incb pop push add sbb daa cs ja addb mov add ror add add loopne call add push add sbb add sub aaa add inc dec add pop add outsb jne add add orl add add add add add add (bad) fldl in add add add add add add add cs dec push add pop add jne add add movsl add add add add roll fnclex jmp cld add add add sbb xor dec add push add insl add orl mov roll rcl fsubrp testl adc sbb add das add inc add dec add pop add jo jns addl xchg add add add mov fcomp out hlt add add or sbb and add add inc add dec push pop popa add jp addl xchg add pushf mov add mov fnclex jmp add add add add sub add add add dec add add popa add add ja add mov add fnclex add in repz add add sbb add cmp add dec add add add add add cltd mov add add lret add add jecxz icebp clc incl add add sbb and add add aas add dec add add push pop fs jae addl add mov add fild call add add adc sbb and sub add add aaa add add push add add js add add xchg add add add add roll flds add jmp repz add add add add sbb add add xor add add dec cmp inc dec dec add add add add add test lea add add add xlat add loope out add add add incl add adc push and add inc dec add add popa push addb add add add rcr (bad) in hlt sti add adc sbb add sub dec push pop pusha add add jnp add add mov aad add in repz add add adc sbb add xor add add add add insl add jle xchg add add xchg pushf add add add (bad) call add push add sbb add add add inc inc add add add add add add add lcall mov rcr add add add repz add add add add sbb and sub add add add inc add push add pop popa add add add jg add mov add xchg pushf mov add (bad) lret rolb add fldl add add icebp clc incl or and add xor aas inc add push push pop gs jae add test sahf add (bad) fiaddl loop jmp add add or adc add and add add aaa ds dec push arpl jnp mov add add rcr (bad) in add testl adc pop add add add add inc add add pop add add imul add scas add into aad fiadd add add add hlt sti add add add add add add xor cmp push add pop popa push add add cmpsb add add les int3 roll add add out add add add add or add pop add add sub add inc inc add push pop pop add add add jle lea lods add mov (bad) add fucom jmp or sbb add add xor add inc add dec add gs add test add add add mov add jmp push push adc daa add cmp add pop add push add add lods add add mov add fiaddl add jmp stc add push add push add sub add dec add pop add bound ja addb add mov fldl add out cmc add add add adc push add add add sub add push pop add add outsb jne add addb nop add add add fsub add add idiv add pop push add add add ss dec add pop pusha outsb jne add mov add add add add aam fucom jmp add add or add sbb and add add inc dec push push pop add add test add add rcr add in add add add add push adc add add xor add add add push add add push js xchg add lret aam add add call push or and add push add mov test mov add add fsubp in add add add add or add adc and add xor cmp dec add pusha add add je jl mov stos add mov add add roll fnclex ljmp add or add add daa add xor cmp add add push add cltd add add add loope lock add add adc add daa add add aas inc dec add add add jle mov add add (bad) into add add add add idiv add add sldt sbb add add xor inc dec dec push pop add add addl add xchg pushf add mov aad fiadd out add std add add add sbb daa cs dec add add insl add add add mov add cmpsb add add add add iret (bad) add in out add idiv add add adc sbb and das add inc inc dec add pop pop add jo add mov add add (bad) lret add aad fucom jmp hlt add incb add and add dec push add pop add iret (bad) add add jecxz icebp add add add pop add push sbb sub cmp add dec add push add add add add xchg mov add cltd add rolb lret add loop add stc add and add add add add add push add pop add add jno add cwtl add add (bad) into add fcomp out out add add pop add add sbb daa add add inc add push pop gs add test test add leave add add fsub ljmp add add add add adc add add add aaa add add pop pop insw je add add add (bad) add loopne out cmc cld add or sbb sub xor aas add dec push push add popa push addb fwait mov add lret (bad) add add repz add add or add add add sub add add add push pop add bound imul jnp mov add stos mov add add add add add add add in add cld add add add add and xor aas inc dec add add popa push mov add xchg sahf movsl lods add add aad jecxz repnz add add or sbb sub add inc inc dec push pop arpl jns add xchg add lahf cmpsb lods mov ret add add add in in add add add add adc push and inc push pop bound jno add add mov add loop lock cli add add add add add and add xor cmp dec add add push pop imul add add add lods add into add fucom in add cmc add add or and ds add dec push pop outsl add add add jle xchg add add fchs add add add sti add adc pop add add xor aas add push pop add add jbe test add nop xchg add ret add rcr loopne add pop push adc add add add inc dec push add add add add jbe add addl add add stos mov ror (bad) add add out cmc cld add add xor cmp add add imul add cwtl lahf add add lods mov add mov add fiaddl loop add add idiv add adc add sbb cmp add add push add add push jb jnp mov popf add cmpsl scas mov add (bad) int aad jecxz add hlt sti add add add add adc add add add add xor add add inc add push pop pusha outsb jne mov test mov mov add in add cmc cld add add adc and xor add add add dec push add data16 jne jge add add add into aad add in add add add add add add add add add add cmp dec push pop arpl imul je (bad) mov xchg add mov (bad) add add call add and add inc add add add pop add data16 add add mov add enter add add add in add testl lret roll faddl in add cmc add add add and add xor add add add push pop add add add add fwait add movsl lods mov roll add add add add add ljmp adc push add cs push pop add imul add add add fwait mov mov fcomp out out add add add lldt push add add add inc inc add add push add add jo orb add add mov clc add add movhps push add xor dec push pop add add jbe test mov add cld add add add add add add xchg add pushf add add movhps cmp inc add popa imul (bad) xchg popf add add cmc std add adc sbb sub add inc inc dec jae add test into aad add add cld add add sbb es dec push add add inc dec add add pop add add addb mov mov xlat add add out testb push or add xor inc dec push pop add outsb add xchg mov xchg sahf movsl add scas mov add int3 add faddl in add add clc incl or pop es add add add add jo add mov add stos add add fsubp add cmc cld add and add inc add dec add add pop add insb jae add add movsb stos mov rol aad fiadd out out add incb and xor add inc dec push push add popa push add mov scas add add jmp hlt sti add add adc add add add cmp add add add add add add cltd add mov add add hlt sti add or adc and sub cmp inc dec push add popa imul xchg fwait add ret lret add mov rol iret add add fnclex jmp add lldt push add sub inc dec add imul add mov add lods add int aad in in repz add add add and add add add push add pop bound imul xchg add add jle mov add add fchs out add std add add add sbb add sub xor cmp inc dec push add add jne add xchg add ret lret fiaddl loop ljmp or adc add add dec add pop add outsl jbe jg xchg stos add rcr add jmp push or add daa cs dec add add add add addb add mov mov add jecxz jmp add add or aaa add inc dec add arpl add add add add lahf add test mov enter fsubp in add testb add sbb add cmp dec add add outsl add add addl xchg add add add (bad) lret rolb add add loopne add idiv add add lldt push add add add xor add add push add add add mov mov fcomp out out cmc add add add add add add sbb and sub aaa add add pop add add (bad) xchg popf add add add fcomp out add icebp add add add adc pop es add inc dec push pop add add jne jle mov xchg fwait mov mov mov (bad) call add add add add sbb add xor cmp add add push add add jae jl add add stos add add add faddl in in add add add add sldt add and das add inc inc dec add add add insb jae add add add mov add add add add add repz cld add adc pop add sub aaa add inc push pop add jne orl scas mov ret lret fiaddl add ljmp or add add pop insw je jl mov add mov aad add in add sti add add add adc push and add aas inc dec add add add imul popl xchg add add xlat fucom add out cmc cld add push or sub xor inc inc dec add add add arpl jae jnp add mov add add rcr add add add add add sub cmp add pop add add jge mov xchg lcall add enter (bad) in repz add sldt sbb add add add cmp dec push pop add add add add add add leave rcl fiadd out hlt sti add add add sbb add xor add inc dec add pop popa push test add rcr fsubp add cmc add add or add add and cs add add push add add add jae add add (bad) add add jecxz jmp add add or adc sbb sub xor inc inc add push add add push add add jg add add mov rol aad jecxz in add add add and xor cmp dec add pop pop insw jne jge mov stos mov add add loope add testl add pop add add add inc dec push add add add add add add test ror (bad) fsubp in add add add adc sbb and dec push add add js xchg stos mov mov add loopne add icebp stc add or add pop add add add xor inc dec push push add add jno add add add rcl add add add in add cld add add sbb and inc dec push add pop add add jae add add cltd add mov add mov (bad) in add add add add add push and inc dec push pop add bound ja add stos add mov add and sub xor cmp add add jo add orl mov mov add add in repz add add add sbb add and dec add pop add cmp add pop popa push add add lods add rcr loope add add add add add adc and add add add cmp pop popa push test lea xchg popf add add lds int add in repnz incl add push sbb das add cmp add push pop pop add outsl jbe test add add xchg cltd add add mov add add in add cmc cld add sbb add add add add push pop add add add jns add cmpsb lods mov ret rcr (bad) in add add incl add push sbb cmp add add imul addl lcall add roll add add loope out idiv add add movhps push add add add add add cmp add add pop data16 add add jbe jle lea add (bad) fucom add hlt add add add add add adc sbb and add xor add push pop imul add test mov xchg pushf add enter add lock add and xor add inc add add pop bound add insl je add cmpsb add mov add add (bad) in hlt add add adc add sbb add sub add add pop pusha outsb jne jge mov add mov add leave rolb fcomp out add testl add push and add add push add pop add outsl add jns xchg add add xchg fwait mov add ret rolb add add add jecxz add repz add or adc add add add sub xor inc dec dec add add xchg add add add add add push add add pop add add jbe add add lods add add add int3 add fnclex jmp push or and inc dec push pop pop add imul (bad) mov add xchg fwait mov (bad) add fsub add add add add adc pop add xor dec push pop add add add add xchg mov add jecxz jmp add cld add sbb and add add pop add jno jg add add lea mov mov roll add add loope out add incb pop push add sub add add add inc dec add add imul add mov add int3 rcr loope lock incl or sbb add es add dec push add pop add imul add xchg add add add mov mov add call incl push adc xor inc dec add push add add outsb jne add orl add (bad) fldl out out add incl or xor aas inc add pop data16 add addb mov add add fsub out testb add or sbb daa add inc dec push add add add jg (bad) cwtl lahf add mov aam add add call pop push add pop add ss add push pop add imul add (bad) int3 add fsub ljmp and add xor mov add add jmp add cld add adc pop add add add cmp add add popa push (bad) rcr add add jmp repz add adc and add add cmp inc dec add pop pusha add imul jge mov xchg lcall add add (bad) add in in hlt add into add loope add add hlt sti add or adc sbb add add sub add add dec add add add add add add mov fwait add add add add (bad) fldl in add add add add or add add and xor add inc dec add pop add add add add add scas add roll fsub ljmp add add add sbb add sub aaa add add pop add add jb add orl add (bad) into aad add loopne out cmc cld add add sbb add add xor cmp inc dec push pop pop outsl ja add movsb stos mov add ret leave rcl fiadd out cmc cld add add adc add push and add inc dec push pop popa push add sahf add lret fchs add add clc incb add add add cmp inc dec push pop bound push js xchg lahf cmpsb add add rcr add jecxz add cli add or pop push and add cmp add pop add add js add addl xchg lcall mov add add fldl in add testb push add add daa add add add cmp inc dec push pop pusha add jbe test test add add add mov add add loope out testb add add adc add sbb sub add add add add add pop add outsl jbe jle mov stos mov add enter in add add add incl or pop es push push add popa push add movsb stos add lret rcr loopne jmp add add or sbb daa cs push pop pusha add add add scas mov les add into add add out repz add add add add sub add xor add pop add jae jnp mov xchg cltd lahf cmpsb add add add rolb add add in in hlt sti add adc add and add xor cmp dec push add insb jae add mov add scas add add rcr loopne add icebp add sti add add or and add add inc dec add pop data16 jge add lea mov ror add add add in repnz incl add adc push and dec add push pop add je add xchg scas mov add int fildl jecxz add hlt sti add add or das add inc dec push pop popa add add mov lods mov add les int aad in repnz add add add add sbb add add add cmp add imul mov add add enter add fildl in icebp clc incl or add sub xor ds dec add push add orl cmpsb add add leave iret (bad) cmp add add add add push add (bad) add pushf mov roll lret add loop add clc incl add adc add add cmp inc add add popa push add add mov fnclex call add push adc sub add push pop bound push js xchg scas add mov fucom ljmp add sbb sub cmp add add add add add add jle mov lods mov ret rcr (bad) in hlt add add add add adc add and xor add inc dec push pop arpl imul add movsl lods add add loopne call add add add sbb add add cs dec add push pop add add jno add add add rol add fcomp add jmp push or sub add add inc inc dec add add push test mov add mov add add rcr loope out idiv add add insb add mov xchg add pushf mov mov mov (bad) add add add icebp clc add add or adc add add xor cmp inc add add push add pop add jo add orl add enter add add add add add add sti add or add and sub add add add add add add add arpl add mov add add add int3 rcr loope out add add add or pop add add sub aaa ds dec add arpl imul jne jge xchg add lret flds loop add repnz add incl push adc add cmp add pop pusha add add add mov xchg cwtl add mov mov add add add add repz add add add and aaa add add push popa add js addb mov scas mov mov aad add loopne add icebp add add push add sbb add add add inc dec push add add add add je add add add add add enter roll add fsubp in add cld add add add add add mov add ror add fchs out add movhps pop add sub add add add inc add pop bound push jb add lcall add mov (bad) (bad) call add and sub add inc add dec push pop popa push jp (bad) add add mov enter flds loope out add incl add adc add xor push add add add add add cltd add add mov add jecxz add add add or xor add add dec dec add pusha add add insb add add add add add add iret (bad) fldl in repz add add sbb xor push add add add jne jge add mov add rolb leave add add fildl in repnz add add adc add add add add cmp add add pop arpl jb add movsb add (bad) int aad jecxz add add testb add add pop push add add add add add add add test mov mov mov fildl in repnz add add add and add aaa add dec dec add add outsl add test add (bad) add add fnclex add add add add incl pop push add sbb add and add add add add dec add add bound add xchg add xchg cwtl lahf add test ror rcl fsubp add add add cli add add add sbb and add cmp add add add arpl add jbe test mov mov mov lock cli add push pop add add add xchg movsl lods add fadds add add in add add add add add add cmp add inc dec add push pop add jae orl mov add fiadd out add idiv add add add das add inc inc add push add pop add rcr add out add add enter in add out add add add or adc and sub add inc inc dec add pop pop add outsl add jns addb add add add add add iret add fchs out cmc cld add adc add sbb sub add add push add data16 jl test add add add adc add add add sub add add inc add dec add pop add add add jnp test add ret lret aam fsub add in add add add or add add add cmp add inc dec push pop pop add push js add add xchg add add add add add fiaddl add ljmp adc add add xor inc dec add push pop popa add ja test add add add mov (bad) fldl out add cld add add sbb add add add ss add add add jle mov add cwtl add mov fiaddl jecxz add out cmc cld add add push adc xor cmp add add arpl add xchg add add mov add fadds loopne add add repz add or add sbb and add cmp inc dec add push add add imul add mov xchg add mov add add leave rcl fiadd add out cmc add add add or adc and add sub add add add add add outsl jbe add add fwait add movsb stos mov rol add fcomp add out incb or pop es aas inc add pop arpl add mov mov add ret int3 add add (bad) in repz add or add add sbb das add aas add add pop insw je (bad) add lods add add aad add out hlt sti add add adc and sub aaa add inc inc dec add pop pusha add add add (bad) add add add leave add add (bad) fucom add add add add add incb sbb add add add dec push push pop add push addb rolb lret add add in add add clc incl add add add and xor cmp add inc dec push pop pusha outsb add add add movsl add add add add fiadd out cmc cld add add sbb daa cs add pop add add add test add add ror add add add jmp add sbb and xor ds add add add add ja test stos mov add enter fchs out add clc add add or add sbb and add add add imul add add mov stos mov add mov add add add in hlt sti add add or adc push and cmp add push pop add add add add add add add movsl add add mov loope add add add add adc and add xor ds add pop arpl add orl stos mov mov add loopne out cmc cld add add pop add sub aaa ds dec add add add add outsb add jle add add mov roll (bad) call incl add ltr pop add sub add add dec dec push pop add jnp add cwtl lahf add add add lds int add add loopne out cmc std add add or sbb and sub add add add add push add imul add add mov mov add aad jecxz add add icebp add sti add add add or adc add and add add add cmp push push pop add add js addb add lret rcr loopne add lock add pop add and das add aas add add fs (bad) fucom add out cmc add add add adc push add sub add add add add push add add jo jle mov add add loope add idiv add adc and sub add cmp dec add add jne add add xchg fwait add movsl add scas add (bad) lret rcr loopne out add idiv add add add xor cmp add dec add pop popa add jb add xchg mov add ror add add add add out add add add add add add sbb add sub cmp dec add pop add add add orl mov (bad) add jecxz icebp clc incl add or add adc sub dec add popa push add xchg lcall leave rcl fsubp add cmc cld add add sbb and das add add add popa add add outsb jne add add add add mov add add add add jmp add sldt sbb add das ss pop add add add jge test add cmpsl scas mov mov aad jecxz icebp add add or sbb es inc dec push add arpl js add test test mov (bad) lret rcr loopne out add clc incl or xor add add dec add pop gs jae (bad) mov xchg add add sahf movsl add add add rolb fchs out cmc cld add add sbb daa cs add push pop add bound ja add test add lret (bad) in hlt add add adc add sub xor add add add popa push add add add add add add add add add add add lock add sbb add cmp pop bound add je add mov xchg add lahf add les int add in cmc cld add add add add sub cmp dec add gs jae jl mov test (bad) int add fsubp in add sti add add sbb sub aaa add dec add push add bound ja test add mov mov aam fsub ljmp push sbb add add add add imul addl cmpsb lods add into aad fldl in repz std add add add sub xor add add inc dec push pop bound add add addl add scas add add add in repz add add or push sbb add ds dec add arpl jb addb add mov mov add aad add add out cmc std add adc add add add add inc dec dec push pop add jae addl add test int3 add fsub add in repz add or adc add sub aaa cmp push add pop add jo jle mov add add roll add flds loope ljmp and add ds dec add pop gs add add add int3 add fsub add add add add push or and sub add add pop pop insw je (bad) add mov mov call add or adc add add inc add push add popa add add add mov mov add rcr add loop jmp add add add or add daa add aaa ds dec push pop popa add jb jnp addl xchg lcall or and inc dec add add add add outsl add addb (bad) xchg add mov aam faddl in in hlt sti add add add add cmp dec add pop popa add add jge mov mov lret add add add add add add hlt sti add add add sub add add cmp inc inc dec push pop add jae jl mov xchg cltd mov mov rolb add fsub add add sti add add add add sub aaa add add pop add add jg lea xchg add mov les add aam jecxz icebp add add adc and sub xor inc add push pop gs add jne add mov nop add add (bad) add xlat fiadd add out add add pop push adc add push pop bound push add orl stos add mov mov aam loop add add cmc add add add add add xor aas add add add pop arpl imul add js addb add add mov add add fsubp add add add add add adc add sub add aas inc add pop add jnp add add mov mov add (bad) add add jmp cli add or add sub dec push add bound add orl add icebp sti add add add and add xor inc inc dec add push pop add outsl add addb lods add add leave rolb add loope jmp pop push adc xor inc inc dec add add add jge xchg movsb add (bad) lret rolb fildl add add jmp add push add add and das add add add pusha add jno jg add push add add add jp add mov mov add fsub add repnz add or add pop es cmp add inc add add pop add add js add cltd mov add add add add fildl jecxz icebp clc incl pop push adc sub dec push pop pop insw add ja add (bad) mov mov mov add in in add add add and add cmp add inc dec add add add push jg lea mov faddl in add cmc add add add add add pop add jo jle add add mov stos mov mov rolb add fldl in repz add adc sbb and add xor add add add add add outsl jbe add addl lcall (bad) int fnclex add icebp clc incl add add add add sbb add cmp inc add push add pop popa add add jl test add popl add lcall lds into aad jecxz add repz add add pop push and cmp dec push pop add add jbe test add mov rolb (bad) jmp add idiv add sbb and inc dec add push pop add add jae orl roll add rcr loope out cmc add add sbb add cmp inc dec push push pop add add add add test add mov add jecxz icebp add add or add add sbb add add das add aas add dec push add add add jae orl roll rcr fild add add add add incb adc pop add xor add inc push add add add orl stos add mov add add or sbb add das ss add add push jne orl sahf movsl add scas mov mov (bad) add add add add add add adc add pop es add add add add add add addl add add lret rolb add loop jmp repz add add adc add sub xor cmp push add popa add add add xchg cwtl lahf add mov add out idiv add and add add inc add pop pop insw je (bad) add pushf mov mov int add in in add cld add or sbb add add cmp inc dec add add popa add add add mov mov mov add add jecxz icebp clc add pop push adc add sub xor inc add add dec push pop bound add jbe add xchg cmpsb add add add add (bad) call add add add add inc add dec push add pop add add outsb jne add mov mov aam faddl in add sti add add add add add add add pop add add add jnp add xchg add add add add (bad) add add in hlt add add add add adc and add ss add jno jns add add add mov add enter flds loope ljmp add sbb and sub add aas inc dec push add imul jnp mov test mov add movl loopne add add stc add or pop es add push add imul add add xchg fwait add add mov (bad) fucom jmp stc add add movhps add ds add add pop gs jae add test lea add (bad) into aad add add add add cli add add add add sbb add add inc add add push add add add add add add add add leave rolb fcomp out out idiv add and add add add push add pusha add jno add add test add add add add inc dec push pop add jno add (bad) mov lods mov ret add add add in repz add push or xor add inc dec add imul (bad) xchg popf add mov rcl add loope add add incl or add cmp dec push add add outsb add test lea add add aam fldl add add jmp stc add add adc sbb add sub add add add inc dec push pop bound add orl add scas mov mov aad add add add icebp add add push adc add inc add pop pop add add insb add add test add test add add add (bad) call add add add adc add sub add inc dec push add pop add add xchg cwtl lahf add test mov add loope out idiv add adc add and add add add pop pusha outsb add add mov add aad jecxz icebp clc incl or push sbb add cmp pusha add outsl jbe add xchg cmpsb lods mov ret add add xlat (bad) add out idiv add add or sbb and sub xor aas add push pop add insl je add add popf movsl add lret rolb add fiadd add add idiv add and xor add push pop add add add insb add add add (bad) xchg popf movsb add scas add mov add add add flds loope add in add add incl add adc xor inc add dec push add add ja test add add (bad) into aad in repnz add add adc add add add cmp inc dec push pop add jae jnp mov add mov (bad) in add cld add adc add add sub inc dec push push add outsb jne add xchg mov add mov add aam loop add in hlt add incb pop push adc add cmp dec push pop pop insw add add xchg add mov rol aad add out add idiv add add xor ds add add data16 add add jne jge mov add add add add add add loop ljmp add or sub add cmp dec add push pop add jno add add mov mov fabs call add sbb add cs inc dec push pop arpl js add movsl lods mov mov into aad jecxz add stc add movhps add inc dec push pop pop data16 jl mov add mov ror add jecxz icebp add add add add adc xor add push add insw je add add mov add (bad) into aad jecxz add hlt sti add add sub add ds dec push add add cmpsb lods mov ret add add add jmp stc add add adc and add ds add add pusha add ja test movsl add (bad) int add add add jecxz add add add add sbb sub xor cmp dec push add add push jb add test add add add add lret add add fsubp in hlt add incl mov add or adc out add add add add inc add add arpl jl test lea add add in idiv popf add stos mov add add loopne call add add add add add add add pop outsb add add add add jns add test add (bad) xchg popf add mov add add loopne add icebp clc incl or add sbb add sub aaa add inc dec push pop arpl add xchg nop add cltd add mov faddl add add testl add sbb add add inc dec push add insw je add mov mov add add add add incb add add and add add add inc add add pop pusha outsb jne addl xchg add mov add add (bad) fucom jmp repz add add adc sbb sub add add inc dec dec add pop pusha add js add add add add mov add add (bad) add add add add or adc sbb add and inc dec add add add add add jg add add scas add mov add fiadd out add cld add or add add pop add add xor cmp dec add pop data16 add popl cwtl add lods mov ret rcr add jmp add add sub inc dec push add pop add insl add addl add add add lods mov add add fsubp in repz ltr pop add cs add add add jno add cwtl lahf add rolb iret (bad) fldl add out cmc add add add adc pop add add add das add add dec add add add jno add add fwait add add aam add add out add add add or adc add xor inc add add add pop pop add add add orl mov rolb lret add loop ljmp add sbb and xor add add push push pop add add jle mov movsl lods add roll add add out out add add push or add add sub add add add push add insl je orl test add leave rolb fchs add mov add add add incb push or add sub ss add add outsb jne add add add test add add enter add add fucom add repz add adc add sbb xor dec push pop add imul add mov add add add roll add add ljmp or sbb and add add add inc add push pop add arpl insb jae add add mov add int (bad) add in repz add add add xor add add dec add add jb jnp orl test roll rcl fiadd add add add add add cli add add add add add add pop add push jp mov lods mov add add add fiaddl add in hlt sti add add or sub cmp dec dec push pop imul orl add mov rol aad fldl add add icebp add add add add pop es push add insw jne add mov mov add loopne out cmc add jb addb add test add iret (bad) fiadd add jmp add adc daa cs dec push add imul add mov add add add add add in add add std add pop push add add es push add add jne jle add add cmpsl scas mov add movb add fiadd out hlt add incb add movhps add inc add dec push pop add add add js add xchg add add mov add fildl jecxz icebp add add add add or add xor add inc dec add pop bound push js add add pushf add add add add loope out testb add or adc sbb add add cmp add push pop bound add add addl add add scas add add mov add add jecxz add out cmc add add add add add add add inc dec dec add pop pusha add jno add add add add add add mov add add (bad) add add repnz add or add sbb add and dec dec add pop pop data16 ja jg add add add add (bad) fucom jmp hlt sti add adc push and cmp add dec add pop pop insw je add nop xchg mov add rcr loope clc incl or push sbb cmp inc dec add add bound ja xchg mov mov rolb lret add loop add add add add add adc and add add xor add inc dec add add pop popa push add (bad) add add add add enter fchs out add idiv add add es add add add add add pop add add je add add add xchg cwtl add mov lret (bad) in add idiv add add and aaa ds dec add add add jne test mov mov add in add add add add movhps add add cmp add inc add push add jo jle mov mov mov rcl add out add idiv add add adc push and inc add dec push add add popa push jp add fwait add add test mov (bad) lret add add xlat fsubp add add add add std add add add cs add push pop imul jne addl lea mov add int aad add out add testl or sbb das aaa add add dec push pop pusha outsb jne add addb stos mov add mov add add jmp hlt sti add movhps pop es push push pop add add jno jns add add add add add add add in repz add movhps add and add add add add jae addl lcall movb iret (bad) add add jecxz add add cld add push add push add add add sub cmp dec add add pop popa push add add addb popl add mov repnz add popl add add xlat add loope out add add add add push add add add push add and add cmp add pop pusha insl je add add mov roll add in repnz sti add adc push add add add add dec push pop add add addb mov mov rolb iret add add add add add add add add or add adc and xor ds add add push addl mov add add int fnclex jmp add movhps add add sub add xor add dec add add add jns xchg add xchg lcall mov add fadds add add add sti add add add adc add and xor add inc add pop add bound add add add add add cwtl add add add fcomp out cmc cld add or add pop add sub ss add push push pop add imul xchg lcall mov rolb fadds loope icebp add sub xor inc dec add pop add add add addl xchg add add into add fldl add out cmc cld add adc sbb add and add inc dec push add insl add test add mov sub cmp dec add add push pop add add add jns add add cwtl lahf cmpsb lods mov ret add int aad add in add sti add add add add add aaa add add push push add popa add add add test scas mov add add lds add aad add add out add incb push add add adc add add dec add add add add push js add mov mov mov add add add add add add add or adc and sub add inc dec dec add data16 add add mov xchg cwtl add add inc dec add add popa push orl mov rol add rcr loopne movhps add xchg test add add roll flds loop lock add sbb add xor add push pop bound add add add add add rcr (bad) in add add add movhps add dec push pop add outsb jne add orl add leave roll (bad) add ljmp sbb add sub add add add push pop arpl add add add cwtl add mov mov in repz add or pop push and aaa add add push pop add jbe test test add mov xlat fsubp add hlt sti add or add and sub add add aas inc pop imul add js xchg add xchg add add add fninit ljmp add add add add and ds add pop add jnp mov add add add add (bad) fldl in add idiv add adc add add add cmp dec push pop add insw orl mov fildl add in add cmc cld add or adc xor cmp push add pop bound imul add xchg add add add enter fchs add add clc incl push adc add inc dec add pop popa push add add leave add fsub add out testb add push adc add add add add add jno jg add add add rolb lret fchs add lock add or adc add add add sub inc dec push add add jb orl mov add add xlat add loope add repnz add adc push and inc add push add jno mov roll lret (bad) add idiv add adc add add sub add add add jg add nop xchg add (bad) add loop jmp add add or pop add add add cmp add inc dec push pop pop data16 jbe jg lea mov mov fchs add add clc add pop push add push and add add push add pop gs add test add mov mov add fldl in add cld add add sbb and add add inc add push add pop add add test mov mov mov add add add jecxz icebp add add std add or add daa add ss loopne call add add adc pop es dec add push pop arpl add xchg cmpsb lods add mov les int aad jecxz jmp add or sbb add add add inc dec push pop add add add add xchg add mov mov loope out add add pop push adc sub add dec add pusha add jno jg mov add add fcomp add call push add adc add sub cmp inc dec add add insl add add add add aad fldl add add testb add add and inc dec add add push pop add add add jae add mov add add mov add add add add add add add adc and sub aaa cmp push pop arpl imul add add add mov add fsubp in add cmc cld add sbb sub xor add add pop popa push addb nop add add mov add fsubp in add add add add sbb add xor add add add add jnp mov xchg add add mov ret rolb (bad) add add add idiv add or and bound je add add mov roll add add add in hlt add add add xor add add add pop bound add add test add add mov add add add add add add pop push adc xor add dec push pop add add add add add lea xchg add add (bad) add jmp add add add adc and sub add aas add push push pop add jne jle add add mov mov rorl adc sbb and xor aas inc dec add arpl imul jne jle xchg mov mov lret add loop add hlt add add push or sub add inc inc dec add pop data16 add add popl xchg sahf add leave rolb (bad) out add add add add add sub add cmp pop popa push add cltd mov mov roll rcl fidiv cmp add add pop add insl je (bad) mov xchg cltd add add (bad) add fldl out out cmc cld add adc add jbe test (bad) idiv add and add pop add add add add add repz inc dec dec add add outsl add add add mov add add add add add add adc sbb add add cmp add inc add jo jp mov scas add out clc incl add add add sub add add add dec push add pop add jnp add ret add add (bad) icebp add add adc sbb cmp add pop js add loope add in add idiv add sbb sub cmp inc dec add add add jl add mov add mov mov fsub add repz std add add movhps aas add push pop imul add jge mov mov mov add add out hlt sti add add add add sub add xor add pop add jae jnp mov xchg cwtl lahf cmpsb lods mov mov add xlat add add in add sti add adc push add das cmp add dec push pop popa push test stos mov add add add add rcl add add jecxz icebp clc add add add add add add sub add add dec push pop add jo add add add aam jecxz icebp add add add push or add xor pop pusha add add add pushf add rcl fiadd out cmc std add push push add sbb add add xor aas inc dec push pop add jno jg add cmpsb lods mov add xlat add jecxz add add add add adc and add add add cmp add add add pop add add test add roll faddl add out add add cli add movhps push and add push add popa push mov xchg lcall add into aad add add jecxz lock add adc and add xor add cmp add add push add mov pop jbe xchg add cmpsl scas add aam loop add add add incb add add sub add push pop add jae add mov ret add int fildl jecxz in repz add add or adc and add aaa ds dec push pop popa push addb mov add roll lret add add jecxz icebp clc incl add add add sbb add add add add imul xchg (bad) xchg popf movsb stos mov mov add iret add fchs out cmc add or add add add add inc dec add push pop bound add insl add add xchg mov mov lret rcr add add jmp stc add push add sbb add add add push pop arpl add add fwait add add add rol aad fsubp jmp hlt sti add add add and sub add inc add dec add add arpl jb addb (bad) xchg add add mov add (bad) in add add add pop add adc and sub cmp inc add dec add pop add add test add add lods mov ret int3 rcr add jmp add sldt add add add add cmp inc dec push add add add add addl add add xchg add add mov rcr add add add hlt add std add adc and add add add inc dec push add add imul xchg pushf add add loope add add sti add or adc sbb add sub add add aas inc dec add arpl insb jb addb add add add rolb add loope jmp pop push add add add add add add inc dec add pop add outsl add test lea scas mov add lret rolb fiaddl add in add add clc add pop add add add add sub add cmp dec push add pop bound jno jp (bad) mov add add add add les int add fldl add out add add add add or add push add add sub add aas inc add push push pop add add add add lahf add add ret add (bad) call or adc add das add cmp inc dec push push add push add add lods mov ror (bad) in out idiv add adc sbb add xor cmp add pop pop data16 jo js addb nop xchg add add add int add add out add std add or and sub dec push add add add add add jg add add add add loopne add add add or adc add and add add inc add add pop add gs add add addb mov add xchg add add mov aad add add out add add add or pop push add add add xor inc dec dec add pop pusha outsb jne mov add add add xlat add add add add add add add sbb add xor add dec dec add insw add orl add add (bad) (bad) call add or add push and aaa ds dec push pop popa push test cmpsb lods add add add in repnz incl or add cmp dec add gs jae add test mov add add add add rcr add add jmp add add add add and add inc add pop pusha outsb add add xchg add popf movsb add (bad) add loopne add icebp add add push adc xor add dec push pop pop add add add outsb add test add add add add add add fildl in in add add add pop push add sbb xor dec push add jo jns xchg add mov add enter in repnz add add or add and add xor cmp dec push pop gs jae jnp mov add add add add add cmp push push pop gs add jle xchg add add add ret add int aad jecxz add add sti add or sbb es add dec add add add jno jns (bad) mov cmpsl scas mov add int3 rolb add add add jmp add or adc add and add add cmp add dec push pop bound ja jg add mov add into aad fucom in add add incb push or sub cmp inc add add dec push add add add jo add (bad) add mov xchg fwait mov add ret add rolb (bad) add icebp add cli add or add add and add cmp inc add add add add add jns add mov add cmpsb lods add add (bad) fucom jmp cld add pop add add adc add sub xor cmp add add add pop pusha outsb add js xchg mov lods add add add add add add loope jmp push add push add add add add xor add aas add add pop add outsb add js xchg add xchg add fwait add movsl lods mov ror add add add jmp add movhps cmp add add arpl imul xchg add rolb iret add flds add add in repz add or add and cs add add add jae jl add xchg popf add ret lret add add add add add cs inc dec dec add pusha add add jns add mov add (bad) into add fldl out out add add sti add add and add cmp inc dec push add add add add add add mov add add mov add leave add add add add out add repnz add add add sbb add sub cmp add inc add dec add pop pop insw je (bad) add pushf mov mov fsubp add hlt sti add add or and push add imul jnp addl xchg cltd add scas mov ret lret add fiaddl loop lock add pop push add add cmp inc dec push add pop add outsb add test lea xchg add add add int fildl jecxz icebp add add add pop add es add add add add add jl test add (bad) xchg add mov mov aad fldl out add idiv add add add or add add sub add cmp add add add add add jno jns (bad) add add stos mov add mov xlat fild call add push adc add sub cmp inc add push push pop gs jae addl add popf add mov (bad) aam fucom add repz add adc sbb add add cs push add push test add add mov mov aad fiadd out out idiv add add pop add add sub add cmp add imul mov add add enter add fildl in add add add add push add pop add daa cs aas inc dec add pop add jo (bad) add add add lods add add mov add add add in in repz add or add pop add add das ss push add pop data16 jbe add add cmpsb add scas mov add add rolb add add jmp add add adc sbb add sub cmp dec add add arpl imul add xchg add add rol rcl fsubp jmp add add add add sub add cmp add dec add pop gs add jge add add pushf mov add rcr loope out add incl prefetcht2 add add xor add add push pop pop data16 outsl add addb add add std add add adc add add cmp add add imul add add add add movb add xlat add add add add cli add add adc and add xor cmp inc dec add pop data16 add add mov xchg add fwait add movsl add add into add fldl out add add add push add add add xor cmp inc add pop pop add add js xchg (bad) xchg add add cs add dec add add add add cmpsl add add add aad jecxz add movhps add sub xor push pop jo add add fwait add add scas mov add add lret add repz add add add movhps cmp push jno add add add fiaddl add inc add push add add add add je jl mov xchg lcall rol add add add in repz add or add sbb add add add add pop pop insw je (bad) add popf movsb stos add add aam add jmp add add add or sub cmp dec add add push pop add add add jns add test mov add add add rolb fildl jecxz add hlt add incb sbb es dec add pop arpl js xchg add add add (bad) fucom jmp add add ltr and add add inc inc dec push pop imul add xchg add ror roll add add in add lock add add or adc and das aaa ds add pop arpl add add add movsb stos mov mov fsub out out idiv add pop push add push and dec push pop add imul jp addl add nop xchg sahf movsl lods mov add add (bad) into add add add add in add sti add add add sub add cmp inc add pop bound add add test test (bad) into add xlat add add ljmp add add sbb das ss add push jae orl mov fnclex add add hlt sti add add sbb daa add aaa add add push pop insw je (bad) mov add ret jecxz out testb add add or add add add add add add push pop bound js addb nop xchg sahf add add int3 roll fnclex jmp add movhps add inc dec add pop popa push jg mov cmpsb add (bad) add add jmp add or add sbb and add cmp inc add add add add insl je jl add mov mov (bad) faddl in add testb add add or adc add and add dec push pop pusha imul xchg add mov fchs out add clc incl or sub cmp add add push pop popa add jno jg mov lods add mov add add add fucom jmp repz add add add adc add add add add cmp inc add pop pop insw je add mov mov (bad) add in add add add adc pop add das add inc dec add imul je addl xchg add add add flds add add jmp stc add add outsl jp add add stos mov mov faddl in repz add incl add add sbb add add sub xor inc dec dec push pop add add jle add add jecxz add clc incl or sub xor cmp inc dec push pop pusha add push js xchg mov outsb mov add enter fchs out push add sbb add das add popa push add cltd mov add fiadd add ljmp sbb and add add xchg pushf dec pop pusha add (bad) xchg sahf cmpsb add add jmp add push and sub push bound or add and pop add insb jae add lcall xlat fiadd sbb add add das add inc dec add push add add add add mov add add roll fiaddl in add add add add add add and das add inc dec push add add add add (bad) add add (bad) xchg sahf cmpsb add mov add rcr loope add add add add adc sbb and xor add push pop add arpl js add fwait add cmpsb lods add mov rolb add fchs add icebp add add adc add and sub xor cmp dec leave add loope jmp add adc add add add cmp add inc dec push pop bound jb jnp test add lret rolb fsub ljmp or sbb and push pusha add add jl mov add scas add iret (bad) add out add cld add add add and sub add inc add dec add add add jg mov xchg popf movsb add scas add add add (bad) add add incl or add and sub cmp add add push pop add add insl add add add mov add rcr add jmp add add sbb and add add add add add inc add add push pop add jnp add add (bad) xchg add mov add ret out cmc cld add adc add add add cmp add inc dec push pop popa push add lahf add lret roll (bad) call cli add add adc and cs add data16 outsl ja add mov xchg add fwait mov rol rcr (bad) add add incl or add pop add sub xor add push pop pusha push mov add xchg add add add add out hlt add add add or adc and add add cmp add add add pusha add mov xchg add mov add add loope add in repz std add or sub cmp add pop gs jae jl add mov rolb lret add loop ljmp add adc sub add dec push pop add add add jns xchg cmpsl add add add add rcr add jmp add add push add sbb and xor add push add insl add mov cmpsb add add mov (bad) add loopne add icebp add add or sbb add add sub xor dec push pop imul jnp (bad) mov add add faddl add add add clc add add add sbb add xor aas inc dec add push pop add outsl add orl add lret rolb add jecxz in add cld add adc pop add ss pop add gs add addl xchg lcall lret add call add add aas inc dec add pop pop data16 add xchg add xchg add mov add enter add loope add add add std add or and add add add inc add push pop add jnp mov lods mov add add add add rcr add add out hlt sti add add add add add xor add add add add push add outsb jne jge mov stos mov add rol aad jecxz add add add incl or pop es pop data16 jo add xchg nop xchg sahf movsl lods mov add leave add add loope out add incl add sldt add and das ss pop bound ja jg add cmpsb add add aam fsub ljmp add add add sub add inc add add add add jbe test lea lods mov add rolb add loopne jmp add add add add sbb and add push pop gs jae jnp mov add lahf add add ret xlat add jecxz add sti add add add pop add add add add add push pop pusha add ja add mov cmpsb lods mov ret add aam add fsubp in repz add add adc pop es add add add outsb add test scas add aam add push or pop es add pop insw je jl add test (bad) int add add add out cmc cld add adc sbb add and add inc add push add data16 jl mov mov ret rcr add loop add add add clc incl pop push adc add cmp add pop bound add xchg movsl lods mov add add add lret fchs add add in repz add add add adc daa add add add add add push pop arpl imul add add add int3 rcr loope add add add std add adc add and sub cmp inc dec push add insw add addl lea xchg pushf mov (bad) int (bad) fucom ljmp or add push and push add insw je (bad) mov test mov (bad) lret rcr loopne add add hlt add add adc and add add add inc dec add add add data16 add mov add flds loop add in add testl adc xor inc inc add pop add push mov scas mov mov faddl add add jmp pop add add adc and add xor add cmp add add push add add add or add push and inc dec add add add insl add mov add int add add add in add std add add add and xor ds dec push add pop imul add xchg add add rol aad jecxz icebp clc incl add adc push and dec add push add pop add jae orl stos mov add mov add fldl in repz add movhps pop and add add push add add ret rcl add out out add incb add or add add and xor add dec add add addl add add stos add add add (bad) fldl out out cmc push push add add add and sub dec push pop add outsl jbe add add add rolb add fsub ljmp or pop push and add push add add insb jae orl mov add rolb fiaddl jecxz icebp clc incl or sub cmp add add add outsb add test add ret add add add add loope add repnz incl or add sbb add add add xor push add popa push addb add lea add add add loopne add jmp add add add adc add sub ss pop popa push add ja addb lcall add ret lret add add in in add add add add or add and das add ds dec add push pop add add (bad) mov add add add rcr loope out idiv add add adc sub xor pop pop add add add lea lods mov add mov loop lock incl or add sub pop add jno add orl ror add add (bad) fucom add out cmc cld add sbb add daa add aaa add push pop add jae add add xchg fwait add mov int add add out hlt sti add or sbb es dec add add add pop add jo add add mov add mov mov add fildl add out hlt add add adc sbb daa add cmp add add imul add xchg pushf mov mov ret lret inc add add imul jl test mov add int fildl in add add cld add add push adc xor inc dec dec push pop imul jl mov scas mov les add add add out hlt sti add add add add add add dec add pop add jne jle mov xchg fwait mov rol add add fildl add add out add incb add sub add cmp inc dec push pop popa add (bad) mov test mov add add add add (bad) fldl add add icebp clc incl add add adc add add cmp add add add jle add (bad) xchg popf add cmpsl scas add aam loop add add add incl or and dec dec push add add add xchg add scas mov (bad) lret rolb (bad) call add or add add and xor add inc inc dec push pop arpl js xchg add mov mov add loop jmp repz add dec push pop add add add add add add mov rol aad add jmp stc add add add add add add xor add push test lods mov ror rcr (bad) in add std add add add and xor aas add add dec push pop add add add jo add jl test add add (bad) add loopne out add clc incl pop push adc xor add add add pop add add jns add add mov ror (bad) fldl in out cmc cld add adc pop and cmp push pop arpl add outsb jne orl scas stc add adc sbb add sub aaa aas inc dec push pop bound add jne jle xchg mov mov (bad) add xlat fsubp add add clc add pop push adc add inc dec dec push pop add add jno jns add mov scas mov (bad) add loop add repz add movhps cmp push add add ja test add add int3 rcr loope out testb add add add add aaa ds dec push pop add add jne add add stos mov rolb rcl add out idiv add and add cmp inc dec add push add add add add add add add lret rcr add add in repz add or and add inc dec add add insl je jge add add mov mov (bad) lret add aad jecxz stc add add sbb and add add add add add add add push pop add add add add mov add add aad add out hlt add add add or add and xor add add push pop pusha outsb add js xchg stos mov add add lret add add loop lock push add add sbb and add add aas add dec add add push pop imul jp add lods add add fildl add add hlt add incb add xor cmp add add dec push add add imul jge add mov add (bad) add cmc add incl add add add adc add add add inc dec add pop add outsb jne add lea xchg add mov add add add add add add add loop ljmp add pop add add sub xor cmp add inc dec push add add add add add lahf cmpsb add add into add fcomp out hlt add incb daa add add inc add dec add add insb jae add lcall mov add aam jecxz icebp add add or push sbb add dec dec add add push add lea xchg add add add xlat add add in add cmc add add add and sub cmp inc inc add pop add add ja add fwait mov mov add (bad) add loopne add out idiv add or pop add add add xor inc add add add push add bound add add js add mov add add les int add fabs jmp add add adc add push and cmp inc dec push pop add add add jle mov add mov add jmp add add add sbb sub xor cmp add dec add pop add jo add add add (bad) lret rcr add add in repz add or sbb add add sub xor cmp inc dec push add add add jo add add add popf add enter fsubp add cmc cld add add push add and cmp add pop data16 push add push jae orl add add mov add add fsubp in add add add add or add adc add pop add add add cmp inc add push add add add jge add mov lods add int fnclex add add add clc incl add add sbb add add xor add add push pop add add jnp mov xchg add add lret rcr add add jmp stc add or add pop es add dec push add add add test add add add add add rcr add add in add testb or adc and das xor push pop popa push add add mov add add add fadds loopne out add clc add add or sbb add add add add inc dec add pop popa push add add xchg add add add (bad) add add add add incl or sub xor inc add push pop add jne add add cltd add add add add fsubp in repz add add sbb cmp dec add add arpl js add scas add mov lret rcr add add icebp testl sbb add sub aas add push push pop add outsl add add jl add add cmpsb add lret rcr loopne add idiv add add and add inc dec push pop add add jl test add cmpsb add movb add add loopne out add add add add adc sbb daa add add add add add add add add jbe test add add xchg add add fucom add repz add or pop push add add add add inc dec add pop add add jle lea mov roll rcl add loope out add stc add or add sbb add add xor add add add push pop arpl add add test add nop add add add lahf cmpsb add movb add add add add repnz add add adc add and add xor inc push add pop add add jo add addl add add mov add (bad) fucom jmp stc add add or add add sub cmp add inc dec push pop pop add add add mov lods mov mov out add clc add add or add and xor add add add dec push add add insb add add xchg mov add (bad) into aad jecxz jmp add cld add sbb sub add cmp push pop add outsb add js xchg add add add leave rolb add add fsubp in repz add add add adc daa add add add ss push add data16 add jns (bad) mov cmpsl scas add mov rcl jmp add incl pop push add sbb add sub add add push pop add add insl rcr loopne out cmc cld add push or sub cmp add push push pop add add add mov nop xchg add mov add in add in add add add push adc add add add add add add add add jne orl scas mov les int3 add (bad) fldl in add idiv add or add sbb cmp add push pop add add insw add add add mov add add test mov (bad) lret add add fcomp out out add incb add or sbb add sub xor push add add pop add imul mov xchg sahf movsl add scas mov add add add add aam add add add add repz std add add add add adc and xor aas add add push add imul (bad) xchg popf add add lret rcr loopne add add add cld add add sbb and add cmp inc dec push pop add add outsb add add add add add add add add add fldl add jmp or sbb and xor ds add add add add ja test mov add add movhps push add add add xor add add add push add pusha add add add orl stos mov mov (bad) add add add icebp add sti add add add add add sub aas inc add add imul jl mov add add cwtl add mov add mov mov add add add (bad) in hlt sti add add add add add add das ss push pop add orl add add add add fadds loopne jmp push add adc xor add dec add push pop bound imul addl mov add add pushf add ret lret fild call cli add add add and add ss add insw je (bad) add add mov add add iret add fadds add add sti add adc add add add add inc dec push add jb addb mov add add add add add fsubp add add testl adc sbb es add pusha outsb jne jge add add cmpsl scas mov add movb add fiadd out hlt add incl add add sbb add sub xor cmp add push add add add insl je jge add mov add add mov add add out add add add add or sbb add das add inc dec add pop arpl jb add add add mov add aad add add hlt sti add add add sbb and sub add dec push pop add outsb jne add lea mov roll lret add add fucom jmp add idiv add or sbb sub add cmp dec add pop add jno jns addl xchg add add mov rcl fsubp in repz add or pop push and cmp add add pop pop insw add ja jg xchg add scas add mov add flds loop ljmp add add adc push sub dec push pop popa add ja test add lds add aad jecxz icebp add add add push or add add add add ss popa add jo jle mov cmpsb lods add int fnclex add in repz add add pop push add sub add add cmp inc add dec push add pop add add add add jle mov add lods mov add add add add roll fninit add repz add or add add xor dec push pop add imul jne addl add add add xchg add lahf add add add add xlat fiadd add add icebp clc incl push adc add das ss add pop add jne orl movsb stos mov add mov fnclex jmp push or xor add inc add dec add add imul add xchg pushf add add add add (bad) (bad) call add add add add add add imul (bad) xchg add mov add add lret add fsub add in add std add add add or sbb sub add add cmp dec add add add add jne add test ror add add faddl add in idiv add or sub add add add add add add imul jnp add add lcall int3 roll faddl add out lock fnclex ljmp or sbb es dec add add pop add add add (bad) mov test mov add int3 roll faddl in add cmc cld add add add add daa add add cmp inc dec add push pop bound ja add cltd mov mov rolb rcl add add in add add add or pop add es add add dec push add add add outsb add ja addb add lea add ror and das add inc add dec add add push jp addl add add mov ror add fchs call add std add add add cs inc add add add add addl add xchg add add fnclex add repnz add add or add pop add add add sub xor inc add add push xchg add add add lods add add (bad) fldl add call add or push sbb add add inc dec push add add insb jl lea mov add add add fchs out cmc cld add add add push add add xor add add inc add pop add add mov cmpsl add add iret add in add testb add or adc sbb and add add xor add add push pop pop add imul add mov add add xlat add add jmp add add add add sbb xor aas inc add dec push pop add je jl add popf add add add mov add jecxz in repz add or add sub cmp add pop add outsb add jg lea add mov mov add add (bad) in hlt sti add add or add sub add add add insl je (bad) add add popl xchg add mov fchs add out idiv add or add add add cmp inc add add pop add imul jp mov mov mov add int aad jecxz add hlt sti add add adc and das add aas inc add push pop pop add jo jge xchg stos add mov add add add fnclex jmp add add add pop add add aaa add dec dec push pop imul addl add add int3 aam fsub ljmp adc push add sub inc add push pop add insl je add mov scas mov (bad) lret rolb add fucom jmp add add add add adc sub add inc dec add add jo jns add mov add add int3 roll add add out add clc incb add add add sbb add add xor push pop pusha add jno jns add test lea mov add fucom jmp add add or adc add add add add push add add addl lcall rolb iret add fiadd out out idiv add pop add add pop add add ss pop add imul add add (bad) aam fucom add std add or sbb sub xor add cmp add push pop popa add add add xchg fwait mov add enter add out out testb push add adc sub inc add add pop data16 add xchg mov mov add int add fsubp add add icebp add add add add adc add xor aas inc add push add add imul jp mov lods mov add add call add add add adc sbb and sub dec add pusha add jno add mov mov (bad) add out hlt add add add pop daa cs add pop arpl add orl roll add flds loope ljmp add add daa cs dec add push add add ja add movsb stos mov mov rcr add call cli add or add and add add add dec add add add jb addb add add add mov add lret fucom jmp add cld add push or add add add push add add arpl insb jae addb nop xchg sahf add cmpsl scas add add add add add add in add add add or add push add sub inc dec add add jae add mov test movl add add icebp clc incl or add sub add popa push test add rcl fiadd out add repnz add add adc add and sub add cmp add pop add jne add pushf mov add add std add adc sbb sub add cmp add add popa push add add add add mov add add leave rcl add loopne add ljmp add sbb add add add dec push add pusha outsb add js add add add add add add ret add rolb add add out add add stc add or pop add and add sub cmp dec push add insb jae jnp test mov cmpsb lods mov add add int aad jecxz icebp clc add pop push adc xor inc add add pop add (bad) mov add add lds add add add loope out idiv add adc sbb sub aaa add add add add jne orl test (bad) int add fsubp add out testb add or add sub add add add pop add add outsb jne add xchg add mov add add add add add in hlt sti add add sbb cmp add add add add add add push add add add lahf movsl add movb add fcomp out hlt sti add add bound add add add add ret add add jecxz add add testl adc sbb add add aaa add add add pop arpl add mov nop xchg cmpsl add add add add add in add add stc add or add add sbb add xor inc dec add add add add arpl jae orl mov (bad) add loop lock add or add adc and add add inc dec push push pop gs je add add movsl lods mov roll add add add fadds loope jmp pop push add sbb add add xor aas inc dec push pop add jns xchg popl add mov mov add add call push or add add xor add push add arpl add jbe test add enter fcomp out out idiv add or and inc add pop pusha add add jp mov add mov mov add add fninit add repz add add or add and sub add inc add add add jno add xchg add add fcomp add out cmc cld add add or pop add daa add add cmp inc dec add push add pop add outsl jbe test add add add or add and add xor aas inc add add add add add jl test lea xchg pushf mov mov add loope ljmp adc sbb add das add add dec push add data16 add add movsb add (bad) add add jmp add add add sbb add add aaa add inc dec add imul add add sahf iret flds loope add clc add add add or sub add cmp inc dec add add add add mov mov fildl add add add idiv add add push sbb xor inc add add add add insl add add jp mov add mov roll fildl jecxz add out add add push or sub add cmp dec push add pop popa add add add add add add add add add enter add add ljmp movhps and inc add push add add add jnp mov add movl jmp stc add or add add sub xor cmp dec push pop pop data16 add jns xchg add test mov fchs out out idiv add or adc add add inc add add jno jg add cmpsb add add add (bad) fldl out out cmc cld add add add adc add daa das add add cmp push add pop add imul jne add add mov rol aad fucom jmp add cld add or add and add add add xor add cmp add inc add pop add add add add mov add stos (bad) iret (bad) add out add add add add adc sbb and add xor add add add push pop bound add jne add add lcall mov rolb add add add add lock add add xor cmp dec add pop add add insb add add jns addl fwait add movsl lods add fadds add add add add std add add xor add dec dec push pop add orl stos mov add add lret rolb (bad) call add lldt add add add aaa ds dec add add add add add lcall rol aad add jmp stc add add add add and sub add inc dec push add pop add outsb jne jge mov xchg fwait add movsl add lds into add add loopne out add add add add adc and add sub add add inc add add push add pop popa add add orl mov add lret rolb (bad) call push add ltr add add add add xor cmp inc dec add push add pop bound imul jp mov pushf add ret lret add out add add adc pop add xor add pop add add jne add add stos mov mov fadds loopne call push or sub xor cmp push add add imul mov add xlat add add jmp pop add push sbb add add add cmp inc add pop imul add add xchg add add mov mov add rcr add ljmp or add add sbb xor add inc add push pop add add add jnp test loop lock push push add add add sub add add push push pop mov add faddl add out lock adc add sbb sub xor inc inc add push pop pop add imul add add mov add (bad) into aad add in out cmc add add add add xor add pop arpl js xchg add add add rcl fsubp in add ror fcomp out hlt sti or add push and dec dec add pop add arpl insb add (bad) mov add add mov add add int3 add (bad) add out out cmc cld add adc pop add cs push pop add arpl add add test test (bad) int add fsubp in repz add add sbb es inc dec push add add add bound push js add add mov add add xlat add add add add cli add or pop push add sub add aas inc add pop add addl add mov add fldl add add testb add add push sbb add add add add add push pop add add test add add xchg cltd add mov mov mov add fiadd out add testl add add add and add add cmp add dec add push pop arpl imul orl stos add add add fcomp add out add incb add or pop add add add es inc add pop add gs jae add jle xchg movsl lods mov roll add add fsub ljmp or sbb add cs push add popa push mov xchg add popf add mov add add (bad) call add and sub xor add add add arpl insb jae add add stos add add enter rcr loope jmp add add add movhps add daa add add add inc dec add add arpl add jl add add mov mov rol add fcomp add out testb incb add pop add add add add add inc add pop add jae add add add add mov mov xlat add jmp add add and add inc add dec push pop imul je (bad) mov scas add mov lret aam fsub ljmp add sbb and sub add cmp add add push pop bound ja jg lea add add (bad) call add or adc sbb daa add add add add add add arpl add jne addl xchg lcall mov add fchs add add repz add incl add adc add add cmp add dec push pop pop add imul add add mov add add dec add add add add add xchg add add mov add pop push add sbb add add add cmp add push pop popa push add jge mov stos mov mov fldl add add icebp add add add or sbb add add cmp inc dec add pop popa add imul add ja xchg add aad fucom add hlt add add add add inc add pop add outsb add jg add add sahf movsl add scas add aad jecxz lock push sbb add add cmp add pop add arpl imul jp orl mov add enter add add ljmp add pop add add add sub add cmp add add bound jno jp (bad) add add stos mov add mov aad add add repz add adc add sbb add add dec add add jno jns add xchg add lahf add into add fldl add add add add or add add sbb sub aaa add inc add pop imul add test mov mov int3 add add in add add add add or add add and add add cmp inc dec push pop pop insw je jl add add lods add mov add enter add add add testl add add daa cs dec add pop add outsb jne add add add add add add lret add add add out out add add add add adc add sub add add inc dec add mov mov mov add fildl add out add add add add and sub add cmp add add popa add add orl mov mov rcr (bad) in add pop add add sbb sub xor cmp inc add pop arpl add jnp add add add leave rolb add fnclex add in repz add adc and cs dec push pop add add jl add lea add rcr add jecxz add hlt sti add add sbb and sub add cmp add add dec push pop add add jns addl add xchg add mov add add enter add loope jmp pop add adc push add sub add aas inc dec add arpl add jbe add orl mov fucom add add testb add or xor cmp add dec push add bound add add add popf movsb stos add roll (bad) add lock incl add add sbb add sub xor aas add push add add add insb jae add jle mov xchg add sahf movsl lods add add add xlat add add add clc incb pop add adc add add add inc add add push add pop add jno add (bad) mov add add add add add add add add lock add add push add add add add add add pop add add jno add xchg add add add lret (bad) in add add add or push add add sub ss pop popa add add add scas add leave rolb fadds or add sbb sub aaa add push add imul add add add roll fnclex jmp add add add add sbb das add add dec dec push add add imul mov xchg add add mov (bad) xlat add call add add add adc xor add dec add pop add js add add add add add movsl add add enter add add add in add add add add movhps push and aaa add add dec push add add imul add add mov mov fucom jmp repz incb add add add sbb and xor add add add add outsl jne add add add mov add int3 rcr loope add add cli add or add sbb sub add aas add push add insl add addl add add mov add (bad) fldl out add idiv add or sub xor add add add add add outsl add add add mov xchg fwait mov mov roll fchs out add add add std add add add add sbb and add xor add inc add add pop add bound imul add add mov xchg pushf mov mov add rol iret add flds add call add add or sbb daa add xor ds dec push pop popa add add add test add lods add int add add in add mov mov add in in repz add ltr add and add cmp inc inc dec add pop add bound imul add add add cmpsl scas add add add fildl jecxz icebp clc incl push adc sub add add push pop add push add sahf add mov faddl add in hlt add add sbb add xor inc add add add pop add add add je add jg xchg add add adc add ss add pop data16 jl add add add add add mov rcr fild out add add cld add add add sbb add add dec add pop add jne add add add lret rcr loopne jmp add or adc and add add xor cmp inc add pop add add add jns add add add ret fcomp out out cmc add add add and sub add cmp pop add add jl test add cmpsb add movl add jmp add incb add add sub xor add cmp add inc add push pop add add jns xchg add add xchg add add faddl in repz add or pop add add add add xor dec add add add add mov add add add sti add adc and sub xor add push pop add gs jae orl mov add add rcl add out cmc cld add add add add add add ss add add pop popa add add add jge add stos mov mov add in add add incb add and cmp push add imul jne add xchg add mov add add fsub ljmp incl pop add add add add add daa add add dec push pop add add add jae add lea cmpsl add mov mov rcr (bad) in hlt add add adc pop add add xor add add push pop pop insw add add test add mov roll lret fiaddl add ljmp or add add sbb es add dec dec push pop add data16 add add jbe add popf add add xlat add loopne out add clc incl pop push adc add add add add cmp add inc add add pop add insw add add jns add cmpsb add add aam add add in add add add adc add daa das ss dec push add insb jae addl movsl lods mov ror add add faddl in add cmc cld add adc sbb add add cmp add dec add add push cwtl add les int add fiadd out add idiv add sbb add add add add jno add add fwait add add rol aad jecxz add add idiv add add add add add sbb add inc add add pop add imul (bad) xchg add mov enter add add add out add add add add add add sbb add add cs inc dec push add add add orl mov mov (bad) fucom jmp add add add or push add and inc dec push push pop gs add jbe add xchg cltd mov mov add add add add add out add add add push adc xor inc inc sbb add add add mov add (bad) in hlt sti add or add and add add xor cmp add inc dec add push add pusha add add add orl mov ror rolb add fildl in add hlt add add sbb add add inc add add push pop bound add add add add add add add add add iret (bad) fucom jmp clc add add add add add push and add add push test add mov add mov (bad) fucom add hlt add add adc add and sub add add dec add add add add add add aad add add add idiv add add movhps add dec add add imul (bad) mov add add lds add add add add add add out cmc cld add adc add and add add add push add add jne jge add add add add (bad) fiaddl add ljmp incl add push sbb das ss add add add jno jg xchg nop add add pushf add cmpsb add add fucom add hlt sti add ltr pop add add add add inc add pop pop data16 add mov add mov fildl in add add std add add add add and cmp add add insb jae addl lcall rol iret add flds loope out add incb add add sub add add inc add dec add push add add add add addb mov add add fild add add add add or adc sbb add add sub add add inc dec dec push add pusha test mov mov xlat add out out idiv add adc and add cmp add dec add pusha outsb jne add xchg cwtl add add mov rcr loope out idiv add sub xor add inc add add pop popa push addb stos mov add fnclex add icebp clc incl pop push add sbb add xor inc inc dec push add add bound add add add mov stos mov mov xlat add add jecxz in repz add add sbb add sub add inc dec push add insw je add add mov mov add mov add fsub ljmp ltr add daa cs push pop pusha add jge add mov add rcr loopne call add sub add inc add dec add pop popa push add mov add lret add fnclex jmp add xor cmp add add add arpl add orl add add add add xor add dec add add add add add mov add enter add loop add stc add or adc sbb add add add cmp dec push add add add mov xchg lcall mov add lds add add add add jmp add add add sbb sub ss add pop add jne orl add mov mov fsub ljmp add adc and sub xor aas add add gs add jne add pushf mov add leave add add fildl add out out add incl pop add push sbb inc add push pop pop data16 jbe test lea add (bad) fucomp add std add adc sbb add es inc dec add arpl jb add mov add mov mov add loope jmp add lldt add add add add inc add add add imul xchg (bad) xchg popf movsb add add add iret add add fsub jmp add add add adc add add add add push add insw je add mov add int add flds add jmp cld add or sbb and add cmp add push pop add push popl xchg sahf add mov faddl in in hlt add add push or sub xor cmp push add pusha outsb add test lea mov mov fcomp out add add add pop push add sbb daa add add inc add add pusha outsb add test add movsl lods add add fiaddl loop add add add or adc add and add xor dec push pop popa add ja add add add add add mov (bad) add add (bad) add lock add and xor add push pop add add je addl add add add les add iret (bad) fucom jmp hlt add std add add movhps pop add add add add inc add dec add imul jne (bad) add scas add enter roll faddl add add add std add or add sub add inc inc add add add push pop add outsb add add popf add add add enter in add add add push or pop es add pop add add jp mov nop xchg sahf movsl lods add roll add fucom add in add testl add sbb add das ss push add add add xchg add mov mov add add xlat add add jmp add idiv add or push add add add sub xor inc add add popa push jp (bad) add mov stos add mov rcr (bad) add lock add or add cmp add inc add add pop add bound push jb addb popl cwtl lahf cmpsb lods add add add rcr add jecxz add stc add add or sbb add and sub inc dec push arpl insl je cld push or sbb daa add add inc add dec push add add add addb add mov fldl in repz add adc sbb daa cs add dec push add bound add add mov mov (bad) lret add add add add hlt sti add adc sbb es inc dec add push pop imul add add add orl add add rcl fsubp in repz pop add adc sbb and xor add add add add add add ja addb movsl lods mov ret rcr (bad) in hlt add add push or add cs cmp pop popa push add mov test add mov xlat add out out add add cld add adc pop add add sub cmp inc add add pop arpl imul (bad) add test add add aam add ljmp adc pop add ss push add add add jns add mov add fadds loope out idiv add or adc add add ds dec push pop add jb add (bad) mov scas mov add add rcl add loopne add add add pop push add sbb cmp add pusha add jbe add add add rolb add fadds loope ljmp push add add cs dec push pop add jb jp mov xchg add mov add add add add stc add add adc add sub cmp dec add add pop popa push add nop xchg lahf cmpsb add add iret add fild call add add add add and sub add inc add push add add orb pushf add cmpsb add roll rolb add add in add cld add adc add add add add add dec push pop pusha outsb add test stos mov mov fadds add ljmp or adc and sub add cmp dec add pop pusha add jno jns xchg cmpsb lods add add faddl out out testb add or push sbb xor cmp pop add jo jg lea xchg pushf mov mov fcomp out hlt sti add add add adc sub add pop add add jnp orl test add into add fadds loope add testl add add add sub xor add add push pop popa push xchg lcall add add lret rcr add jecxz add hlt add std add or and sub add dec push push pop add jle add mov scas mov add rolb lret add add add add cmc cld add and add xor add inc add push pop pusha add push add add cmpsb add movb add in repz add or adc sbb sub add add push pop bound add mov xchg add mov fsubp add add add add add adc and sub add inc add add pop bound jno jg add cmpsb lods add add (bad) add in in add std add daa add add cmp dec add pop add add js add add add stos add add mov (bad) add add fild add ljmp add add add add cmp push pop bound add jl mov add add mov add mov add fldl out add add stc add or push add and add sub xor inc inc dec push add insl je jl test lea lods mov add xchg cwtl lahf add xlat add out cmc cld add add sbb add add xor cmp inc dec push pop pop insw add add orl stos add lret rolb (bad) call push or add add inc add dec add imul xchg add scas add add add (bad) add add clc incl add add add add xor add add inc dec push add pop add add add add cltd add add rolb add jecxz add hlt sti add adc sub add add pop bound push js addb add mov add add add jmp add add add add add sbb sub add add aaa ds dec push pop popa add imul add mov add add add enter add add in in repz add add pop push add cs push add add pop add add add add jg xchg add mov add add loop ljmp adc push add sub inc dec push pop popa add js xchg add add ror add fucomip idiv add add adc add add cmp pop bound add insl je add jg add nop xchg add mov add call add add sbb add dec push add pop add imul orl cmpsb lods add mov les int add fiadd in add add repnz add push adc sub inc add add push add pop arpl imul add xchg add lahf add add rcr add jmp push or sbb add and xor cmp inc dec add push add pop add jnp xchg add add add iret (bad) fldl in repz add add add xor ds dec add push add add outsl jbe add orl add leave rolb flds loope jmp or add add add cmp add add bound add je (bad) mov lods mov ret add add loop lock add and add add dec add pusha outsb add add add add xchg fwait mov mov ret add add fcoml add dec push pop add add add jle add lcall add leave add add add fiadd out hlt sti add or sbb es dec push add add add popa add ja add add mov add add (bad) add add add add repz add or sbb and cs dec push pop add jno jg add nop add add add mov fsubp in repz add add add add and xor inc inc dec add add outsb jbe test mov add add sub cmp inc dec push push pop gs jae add mov scas mov les add add add in repz add add add add sub add xor add pop add jae jnp mov xchg cltd mov mov into add fadds add add jmp hlt sti add adc push add daa add cmp inc inc dec push pop add jae addl lahf cmpsb add add add mov mov add fchs out add clc add add add add sbb add add aaa add add push add jo add add add fildl add out add idiv add add adc cmp inc add add add jbe add popf movsb stos mov rolb iret (bad) fldl out add idiv add add adc push and inc dec push push pop gs jae add xchg cwtl lahf add add int aad fsubp in repz add add add add sub add xor add pop add add mov xchg cwtl lahf cmpsb lods mov mov add xlat add add jecxz ljmp bound jno jg add lods mov mov add call add add add sbb sub add add cmp add add add pusha add add jae add add add (bad) int add fsubp in add idiv add and xor add add add add add jne add add movsl lods add add loope out idiv add adc add and add add inc dec dec add add push test mov les add aad jecxz icebp clc incl add adc add add add xor aas inc dec push add add add add add mov xchg add mov (bad) fiaddl loop lock add add add and add add dec add push add add add add jl test stos add add add (bad) fucom jmp stc add add add sbb add add cmp dec push add insb add add xchg (bad) xchg popf movsb stos mov add add lret add fildl jecxz in repz std add add or pop push add cs push add arpl jb add add mov mov fcomp add add add add cld add add push adc sub add add dec push add pop popa add jb jp mov xchg add fwait add add cmpsl scas add into add add jecxz add add std add add adc xor add add add add add outsl add add add mov add add add add (bad) add add add add hlt sti add or add add and add add add pop arpl js addb add add lods mov ror aad fsubp in add add incb push add push sbb sub cmp inc add dec add add imul jnp add add movsl lods mov mov fiaddl loop add clc add or add add and add xor cmp add pop add add add add mov scas mov add rol aad loop lock add push adc add xor add push jg mov nop xchg sahf movsl lods mov add add add iret (bad) add (bad) in add add cli add add add add sub add ds dec add pop add outsb add ja add add mov add mov iret (bad) fsubp in add sti add adc push add daa cs add add push pop popa add add outsb jne addl lea add test mov add add add add add fucom add hlt sti add or and add xor add add pop insw je add add mov add rcr loopne out add idiv add add add push and add add popa push xchg add mov (bad) lret rolb fnclex jmp pop add adc push and inc dec push add pop popa add jb addb add add ror add add fsub ljmp or add and add add inc add push add pop add add insw add add add mov add and xor aas add add add add jl mov popf movsb stos add add leave add roll fnclex add add add add add add add push and cmp push add insb jae jl mov add cmpsb lods mov mov add add (bad) add add clc incl or add inc dec add add add arpl add jne addl add nop xchg sahf add mov add add add out testb add or add add add cmp dec add push add imul add scas mov add add add lret add add add add call add push add sbb add add cmp add inc add add pop add jne add lea add cwtl add mov mov add add add lock add sbb add dec add add push jb addb add scas add fcomp add jmp cmc cld add add sbb add xor ds dec add add jae add test mov add lret add add add add call cli add add add adc cmp inc dec add push pop add insb add add add add add add add add xlat add loope jmp add adc add sub add aas inc dec add add add pop add outsb add add jp (bad) mov test add add int3 add add add add ljmp add pop push add add add xor add imul add add add test mov add int3 add add add out add add add add or sbb add add add inc add push pop add add add xchg add rolb fadds add jmp add or pop push add sub xor cmp inc dec dec add pusha add add add add jg add popl cwtl lahf cmpsb add int3 roll fnclex add icebp leave add fiaddl add add out add add or add and sub xor add ds add dec add insw add jbe test lea xchg add mov add add mov add add fildl jecxz add hlt add incb add and sub xor cmp add inc dec push add imul add add sahf movsl add add into add xlat fsubp in repz std add adc sbb sub xor add add inc add dec add push add outsb jne jge xchg movsl add add add rcl fsubp in add cld add adc and add add cmp dec push add pop pusha outsb jne add mov nop add add add add into aad add loope add repnz cld add adc and cs dec push pop add insl jne jge add mov lods add int fildl add add out cmc std add push or and cmp add pop pusha add add add jle add mov add xchg add add mov add add add add icebp clc incl add adc add and add add inc add push pop add add add addb add xchg add pushf add add lds int add add out out idiv add add adc add add add pop add add add jns xchg add fiadd out add testl adc add sbb add add add add add add add add imul popl add add popf movsb add (bad) fnclex add add hlt add add pop push add sbb add add cmp add push pop bound add jns (bad) mov cmpsl scas add add add add xlat add add out cmc add add and sub cmp add add add add pop pop add add add add add (bad) fldl in add icebp clc incl sbb es cmp inc dec push add add jne orl add ret add add faddl add add out add add add or sbb and das add add add add add jbe jle add popl add lcall mov add iret add add loope out testb add push add add add add xor add add pop pusha add add jp add mov add mov lret rcr loopne add lock push sbb add aaa add add dec add push add gs jae jnp add test mov add add add int3 add (bad) fldl in add add add add add add add icebp add push push sbb cmp dec push add add add add mov add add fchs add ljmp add add adc add and sub add add inc dec push pop bound add add jge add mov add add lods mov mov fiaddl add add add cld add add adc and add xor add dec pop add data16 add jns add mov add mov ror (bad) fldl in add icebp clc incl or sbb add es inc dec push add add insb je add add mov ror (bad) fucom jmp stc add add add adc sbb add sub add add add pusha add add jae jnp add add lods mov add lret (bad) add add stc add or add sbb daa cs dec push pop add jno add add add popl xchg add mov add add add fcomp out hlt add pop push add add add add add add cmpsl add iret add add faddl add in hlt sti add adc sbb sub add cmp add add dec add pop add add add add add addb add stos mov mov add add add lock add sbb xor dec push pop bound add add add xchg cmpsb lods add fcomp add jmp add add adc add sub xor add add add add push add add add (bad) mov add int3 add (bad) add clc add add adc sbb add sub cmp add push add pop data16 add jb add add add lahf add mov ret xlat add add in repnz add add add add add add add inc dec push add add popa add push js add movsl lods add mov lds add add roll add add add add in add sti add add add sbb sub ss pop add add outsb jne orl stos add mov ror add fchs out cmc add add add add adc sbb and xor cmp dec push pop add outsb jge mov xchg add fwait mov add enter add fildl add add add testl push sbb add add inc dec push add add insl add addl xchg cltd add mov ret rcr add add add add xor add cmp add dec add push add add add jns mov cmpsl scas mov mov add fldl in add add add add push add add add add cmp inc inc add add pop bound add addl popl add add add add add fadds add jmp push add add add add add aaa aas inc dec push add pop imul jnp mov lods mov mov add add aam faddl in repz add or sbb add das add add add pop add add cwtl lahf add add lods add rcr loop lock add add adc add add xor cmp add pop add add jnp mov xchg cltd mov add add mov rcl add loope add add add add incl push adc add inc dec add add add jb jp add mov xchg add mov loop lock cli add push push add and add inc dec push pop add jo jg lea mov ror (bad) fucom jmp add add incl pop add push sbb add add add add add imul add cmpsb lods mov mov loopne jmp add or add sbb sub add add adc and sub aaa add inc dec add push add xchg add add add lret (bad) add add repz add add or add pop push add add cmp push pop arpl add jne jg lea add mov add int3 rcr add jmp add add add add add xor cmp add add outsb jne addl add mov add xlat fsubp in add sti add add add add inc dec dec push pop imul add mov mov roll lret add aad fldl out incb sbb sub add add inc add pop add jns xchg cmpsl scas mov add add into aad fucom jmp hlt sti add or adc and das add inc dec add push pop add outsb jne add test stos mov mov (bad) into aad jecxz add add cld add add add sbb add cmp push add insb jae add add mov lods mov add lret fchs out add std add or add and add add inc add dec add push pop add jns xchg mov mov (bad) fucom jmp add add sldt sbb daa add add aas inc dec push pop add gs add jne addl add mov add fsubp add add add push or add add add inc add add push add imul jnp mov lods add roll add jecxz in repz add or add add sub ss pop add imul add add xchg fwait mov mov add add fucom jmp stc add add and add add push pop add add jnp add pushf add add add add fnclex add repnz add add add add sbb add cmp inc dec add push add pop bound imul xchg add add fiadd out hlt sti add add add xor add add push pop add popa add jb jnp mov xchg cwtl add add fadds loopne out cmc add add or and cmp inc add add gs jae orl mov mov add out cmc add add add sbb add cmp inc dec push add bound add insl je add test stos mov mov (bad) int fnclex jmp add or adc add sub xor add add add outsb add jg add mov mov add fsubp in add add stc add add adc add add and add add inc dec add gs jae add add add mov fchs out add clc incl or sub xor add add dec add pop add outsb ja add movsb stos add mov add add add fsub add in hlt add add or adc and add add add add add push js addb add scas add fchs add lock add add daa cs push add add insb add jne addl lea xchg add lahf cmpsb lods mov mov (bad) call add or add pop add sub xor add add pop add jbe add xchg cltd add mov fucom add add add stc add add jmp add or sbb and das ss push add data16 ja test mov xchg add add mov mov add (bad) into add add out hlt cld add adc sbb sub ss add add add ja jg xchg add mov (bad) add loopne call add or adc add and add add add ds dec add add add add add add jg add add add add add add fsub ljmp adc push add sub dec add add pop add add add orl stos add fadds add add add cli add or pop push add cs dec push pop add gs jae orl stos mov add mov loope repnz add add adc sbb and sub aaa ds dec push add imul jnp add mov add leave rcl fsubp add hlt sti add adc sbb add sub xor inc add push pop add add add jns orl stos mov add ret lret flds add ljmp incl or add xor cmp add push add add add add add mov mov ror add (bad) add cmc cld add adc add add add add cmp add add dec add add add add add add add add add jecxz jmp stc add add pop push and cmp pop popa push addb add add stos mov rol aad jecxz add repz add add add sbb sub ss push add imul jne add xchg movsl lods mov ror add fsubp in repz add add or add sub xor inc inc add push add add imul xchg add lods mov add add int fildl add add jmp or and sub xor add dec add add pop arpl imul orl add add fcomp out add add add adc add add add add xor add add inc dec push pop add arpl add add add mov add mov add lret rcr add jmp add add push add es add dec add push pop imul jl mov mov add (bad) aam faddl in repz add lldt push add add ss add pop add add jge mov scas mov fldl add out cmc cld add add sbb daa add xor add dec push push pop imul add add cwtl lahf cmpsb add rcl add out add std add add add add sub add add add inc dec add add outsl jbe add (bad) add mov xchg fwait mov mov faddl in repnz add add add or adc pop add add sub cmp add add add add outsl jbe jg add mov add xchg pushf mov rolb rcl fiadd add out add incb push or add add add daa add xor inc dec add push add pop add outsb jne jge add add add ror add (bad) out add idiv add push add sbb add add add dec add pusha add add add add mov add lret rcr loopne out add std add add sbb and aaa ds add add imul jnp mov xchg add mov flds loop add add add adc push and add add push add pop insw add jbe jg add cmpsb lods mov mov fiaddl loop add cli add or add add and sub add inc dec dec add pusha add imul addl add add add add aad add jmp add add incl or add sub add cmp dec dec add pusha add add je jl test mov add ror rcr add out add repz add add pop add add add and add cmp inc dec add add push pop add add addl xchg lahf cmpsl add mov mov roll flds loope add repnz add add add push adc add add cmp push add add pop add insw add add add add add enter fiadd out cmc add add adc add and add das add add cmp inc add add add add jg lea lods add into aad jecxz add stc add add adc pop es dec push pop add bound add insl je (bad) add add stos mov mov xlat add add add add incl or add add cmp add inc dec add push pop add jo jle mov mov mov add fsubp add hlt sti add adc add and sub xor add push add add push jb addb mov xchg add mov add add ror aad in add out testb add or adc add xor dec add add add pop add jp add cmpsb lods add add add add add add add cmc add add add and add add aas inc dec push add data16 ja add add add fsub ljmp push sbb add xor inc inc add add popa push mov add lret rcr loopne add testl push sbb add cmp push push pop gs jb add movsl add add int add in repnz cld add add and xor add add add push add pop imul add jge mov add add lcall add enter add loope add add add std add or add sbb and add add add inc add push pop add test test add add add add fsub add add lock incl add add adc add add add add dec add add popa push add add add jecxz icebp clc incl add add add and add add inc dec push pop pop insw je add add movsl lods mov ret rcr add add repz add or add sbb add add xor push pop add jne orl mov add leave rcl add loopne add icebp clc add adc and add add add dec add push pop arpl add add jle xchg stos add rolb fcomp add jmp add add push add push sbb add add add push pop imul orl mov add lret add fnclex add add out idiv add add add sbb add add add cmp inc add add add pop pop data16 ss add pop arpl add add mov add add add iret (bad) fucom jmp add cld add adc pop daa add add cmp dec add pop popa push mov scas mov les int3 roll add in add out idiv add adc and sub ss add pop imul add add scas add aam loop add add add add add adc and add add ss add imul add add add add fsub ljmp add or adc add add pop pusha add add test add add add add add mov add add loopne add add add add or adc sbb add es dec push add pop bound add add lahf cmpsb lods mov add mov xlat fsubp add out add incl pop push adc daa add cmp add imul xchg cmpsb add movb add fcomp out add cld add adc pop es inc dec push pop popa push add cltd add (bad) lret add add add jmp cld add add and dec push push add insl je (bad) add add cmpsb add scas mov (bad) (bad) call push or and dec add pop gs add test add add mov add add (bad) lret rcr add loop add repz add add push add add add add add cmp dec dec push pop add outsb jne add add lods mov roll add add (bad) fucom jmp add cld add add sbb add add xor add push add pop add jno add add add mov add ret add add add jmp add cld add add add pop push add add xor cmp add add add push add add add sahf add cmpsl scas mov mov fildl jecxz add add add add add add add push add and add add push pop add add add jae add test test add add add fildl add in repz add lldt and xor add add push pop pop gs add addl add xchg add mov fadds add add icebp add add or add add add daa das aaa add push add imul add add add roll fnclex jmp add add add add pop add add sub add add inc dec push add add imul je add add add mov add enter add add add add cmc add incl or push sbb xor cmp pop add add add add addb add add xchg add mov add aad jecxz add add add stc add add adc sbb daa add xor aas add add push pop add arpl js xchg add add fldl in repz add lldt add and add add add cmp pop add insb jae jnp add add mov fnclex add repnz add push add push add add cmp push pop arpl add jne jle xchg movsl add add add lret add aam fucom jmp repz add or add sbb add xor add dec add add add add jl add add add add fsubp add add add add add add and sub xor add add dec dec add popa add insb jae add jg xchg add add add (bad) add fucom add add add stc add add adc pop add add add cmp push push add popa push mov add mov add add rcl fiadd out out testb add sbb add add cmp dec push pop add jnp mov cmpsl scas add into aad jecxz add add add add push adc add add cmp add add add pop imul jnp add mov add (bad) into add add loopne add add and add add add add pop add imul add nop xchg sahf add mov add add fldl in in add add cli add or add add add add add add cmp inc add push add add imul jp add add scas mov mov (bad) fucom jmp add testb add push add add and sub add aas inc add add add push add jge mov stos add mov mov aam add add out cmc cld add or add and xor add add add add jl add cwtl add add add aam add add in add testl push sbb inc add add data16 add jns add fwait mov mov mov fiaddl add add repz add add adc add add add cmp add add add insw add add add add add stos mov mov rcr loopne add jmp hlt add add adc add and add xor add push push add insl je add addb add mov add mov add fucom jmp repz std add sbb add add inc dec add fs add mov add add iret add fsubp add cmc cld add adc add add and sub xor add add add push jnp add mov stos mov mov out add std add or add sbb add cmp push add gs add addl lea add add int add fsubp add add add cli add add add add sbb add add add add inc dec add add add add sahf movsl lods add mov ret add int add in icebp add add sldt add add add cmp add push pop add add jle add mov mov add add loopne add push add cmp add jp mov add add mov add iret add fiadd out out add add add add add and add xor inc add dec push add outsb addl add add add add int3 roll fsub ljmp incl or add xor inc add push pop pop data16 add jg lea add cwtl lahf add lret (bad) call or add sbb add aaa ds dec push pop add add add add add add mov ror (bad) add in repz add adc add add add cmp add bound ja add sahf movsl lods add mov add add iret (bad) add loopne call add and add add ss add push add add add add add add mov ret add int3 rcr add in add cli add sbb add add das add aas add dec add push pop add add insw add addl lea add cwtl lahf cmpsb lods mov ret int3 rcr add add repnz add add or sbb daa add add cmp inc dec dec push pop add jnp mov add add add (bad) add add add add stc add or pop add add sub add xor add push add jno add jl add add stos mov rol aad add add out add clc add add or adc and add add aas add add pop data16 jo add add mov add aam add add out add cld add push or add xor cmp add add add add add (bad) mov add add iret (bad) add out out cmc cld add add adc add add xor cmp jl test add add int3 roll faddl in add idiv add add add adc and sub add add add add add add push add add imul mov add xchg add mov aad add out out add incb pop push adc sub add cmp dec add push add imul (bad) add mov xchg pushf add mov (bad) int aad fsubp add out add add add adc sub add cmp add add add orl stos add add add rcl add loope add add add add add add add cmp add inc dec add push pop add insl jne orl scas mov (bad) aam add out out cmc add incl push adc daa add aaa add dec add pop add bound imul add add sahf cmpsb lods add add add flds add add add add add add add add add add ds add add add pop arpl jns orl (bad) iret add fsubp in add add add add or adc sbb add cmp add add pusha add add (bad) add test mov mov add loopne out add clc add push and add aaa add add push pop add push js orb add add add add (bad) add add add add incl add add sbb add sub xor cmp dec push pop pusha outsl add xchg add scas mov mov (bad) fucom add out add add push add push sbb add add inc dec add push add mov add add add fildl jecxz icebp clc add add push push and dec dec add pop add arpl insb add jbe test add add scas mov add ror add add add jmp stc add movhps cmp add add imul jge mov stos mov rolb lea scas add mov add flds add add cmc add add add adc and das add add inc dec push add add add add insb jae jnp add add add mov add fucom add out cmc add add add add add and add cmp inc dec add push add pop add add jo add mov add lret rolb add fucom add add cld add add add sbb add cmp pop bound add xchg mov add roll lret add add fucom jmp stc add or add add daa cs add push push pop gs jae addl mov add add fild add lock adc push and add inc dec add add pop pusha add add add jl add add fwait mov add add lret rcr add add jmp add testb add sbb and cs add inc add pop pusha add push js add orl add scas add mov add movl loopne add in add add clc incl or sub add add inc dec push pop popa add imul add add lret add add loopne out add std add or sub inc dec add push add pop add add jge mov add add add add fsubp in repz add add pop push and add inc dec add add gs je jge add add ret lret add (bad) fldl add call add add or add add pop es add dec dec push add add add add jnp add mov xchg add add add faddl add in hlt add incb sbb add sub add add inc add add pop add add add add orl add add fabs call add or push sbb cmp push push add add add insl je jge test stos mov roll lret rolb fiaddl loop add repz add or adc add add add add add cmp add dec push pop bound ja test add nop xchg sahf movsl add add aam add ljmp or sbb add das add add add add add insw add ja add add xchg pushf mov add leave rcl fiadd out add add add add adc add add add xor cmp inc add dec add push add add add orl test add add rolb fsub add jmp add incl or add add add add add push pop imul jne addl xchg cltd mov mov add add add add testl push add and inc add dec push add add outsb jne add add add test add add mov mov (bad) fucom jmp stc add add add sbb daa add add aas inc add pop add jae jnp add add add add add aad add add out add clc add add pop add imul jnp add mov mov add fiaddl loop add repz add add add and add add xor add add pop pusha add push js add add xchg add add add add add jmp add add add add sbb das ss push pop add jns xchg (bad) xchg add add add movl out add cld add add sbb add add add xor add add add add jge add mov nop xchg add mov into aad fiadd add jmp add or pop push and inc dec add add imul orl stos mov add mov add xlat add add jmp add movhps add add das add aas add add pop add add jno jp (bad) mov xchg add add add ret xlat fiadd add out testb add add add sbb add add add add add add add ja add add fwait add movsl add add rcr add ljmp adc add add add add add add lods mov add add rcr (bad) in add std add add and cmp pop add add add add mov add scas mov add add aam add adc sbb add add add push add add outsb add ja add movsb stos add add add (bad) fldl out hlt add add or sbb add or add and add cmp inc add push add add data16 jge add stos mov mov add add add add add out add icebp add add add pop add daa add add xor add push add pop insw je (bad) mov scas add iret add add loope out idiv add add add push and inc dec push pop pop data16 add test lea add mov loop jmp add idiv add add movhps add add add xor inc dec add pop add jne (bad) mov xchg lcall add ret add roll fnclex jmp add adc add add cmp add push push pop add add js add add add stos add add mov (bad) add add loopne add jmp add add or adc sbb add sub xor cmp dec add insw add ja add add add add add add mov add in in hlt add add add add sbb add sub add dec push add add push add add jnp addl xchg add mov add out hlt sti add or add add xor add imul add xchg sahf add add (bad) into aad fsubp add hlt add add add or pop push and add inc inc add pop pop add imul nop add mov add add add rcr loope add idiv add push adc xor cmp push push add popa add add jl test add mov out cmc cld add add es dec push pop pusha add push js add mov add mov add (bad) into aad fldl add out add std add adc and add xor cmp inc add pop pop add add add add xchg add add aam loop icebp add add push adc add add inc add dec push pop add outsb jne test test add leave rcl add loope out add incl pop lldt add add and xor inc inc add add push pop bound push add add add add roll fiaddl loop add add cld add add add and xor cmp dec add add pop arpl add jne add xchg (bad) xchg add mov add fldl in out add add add add adc push and inc dec add push pop popa push test cmpsb add scas mov add add aad add jmp hlt sti add add adc add add add cmp add add add add addb mov xchg add mov rol aad add add add cmc cld add adc pop es add pop add push add xchg nop xchg sahf add add rcr loopne call add add add adc and das ss push pop add add add add add iret add add add jmp hlt sti add or adc sbb and xor cmp dec push add add pop data16 jno jns add add test add rcl fsubp add add add add add add sbb daa cs cmp add jno add popf add cmpsl mov add rolb fnclex jmp add movhps add daa add add add dec add pop pop add add jg lea lods mov add mov loop jmp repz add adc sbb add sub ss pop popa add jb add movsl lods mov add add add aad add out hlt add incb push or and add sbb sub xor cmp push pop add add je jl add stos add lds into add xlat fiadd out lock add and add add add add push add add popa imul add mov mov add add add add out cmc cld add adc add and add cmp inc dec add add pop add outsl add add (bad) mov test add iret add add add out testb add add push add add cs dec add add add jbe test add add rcr fucomip idiv add add adc sub xor cmp inc dec push pop arpl imul add test add (bad) xchg add mov mov rol rcl fiadd out hlt sti add add sbb and add cmp add dec push add outsb jne addl xchg lcall add into aad add add jmp add add and add add ss add pop add add add add add add mov les add aad add out add cld add sbb add add add add inc dec add add add add je add movsl add add rcr add ljmp add sbb add and xor aas add add add push test add add fadds loope add lock add add add cs inc add push add add jno add sahf movsl lods mov add lret flds loop add repz add or sbb es dec add push add add add jg lea add add add add roll add add out cmc add incl add add add add add add push pop bound add add add mov mov rcr loopne out cmc std add sub xor add inc add pop add outsb jne add add mov add add (bad) fucom add add idiv add add add adc and cs dec push pop add add outsb add add add add mov int aam loop add clc incl or push add and add inc add add pop add arpl imul jnp add add mov add add add in out cmc cld add add sbb daa add xor inc inc dec add imul add xchg pushf mov mov ret lret fist and add xor cmp inc add pop pop insw je jl add add cmpsb lods add mov add add (bad) fucom in repz add or pop push and add inc add pop add jns add xchg add add add add leave rolb add loope add add cli add add add add sbb inc add dec push pop jp add add add add add add out out cmc cld add add sbb daa add add add push pop add add add imul add add stos add mov add add add (bad) add add add add add cld add or sbb add xor aas add dec dec add add jne orl add add (bad) (bad) call add push adc add xor pop add add js xchg add mov fsub ljmp push add add jbe test test add lret (bad) in hlt add add add or add sbb sub add add inc add push add push jae orl add mov add add add in repz add add or adc pop es dec push pop pop add jbe add add add add add add fcomp add add add stc add add add and add ss pop popa add imul (bad) add add add or add add cmp push add data16 add add mov mov loope jmp pop push adc add das inc dec dec push add insl je (bad) mov add roll (bad) call add or adc push and inc add add pop add add add jns orl mov fchs out lock or add push sbb cmp dec push add pusha add jno jg lea mov add fsub add add add out add incl add sbb daa add xor add inc add add push pop add insl add add orl mov les add fldl out cmc cld add adc add add add xor add add pusha outsb add add movsb stos add rcl fsubp in repz std add add add and xor add cmp push push add insl je (bad) mov add rcr loopne add lock sti add add adc and cs add dec push add add add add mov mov mov loope jmp add or add sbb sub add ds dec push pop add ja add test mov mov faddl in add add add cli add movhps sub cmp add inc dec push add pop add add jg lea add cwtl add mov aad add out out cmc cld add or sbb add add add cmp add add push add mov mov mov xlat fsubp in repz add add adc sbb and xor add add push push pop add jne orl add mov (bad) fchs out add clc add add or add add and add add cmp add push pop pusha add jbe jg lea add add add rolb iret (bad) add out out cmc add add add add adc add sbb das aaa add dec add push pop add add add add add mov add ror (bad) fldl add out hlt sti add adc sbb daa add add add add dec push push pop gs jae jnp add popf add add add ret lret add out add incb adc add sub xor add add push add add push add (bad) add add add add lret add add in repz add or add sbb xor cmp add pop add add push add add add sahf add cmpsl add add aad add in repz add adc add add add add add add add cmp add add add add test add add add ret lret rcr loope add in add testb add movhps xor add inc dec push pop add imul xchg add add into aad loop add add add add or add add sub add add add inc inc pop bound jno add or sbb add add cmp add add pop pop insw je add xchg mov xchg popf movsb add add movl fildl add add hlt add incb and sub add inc dec add add popa add push add jbe test mov add add add rcl fiadd add out cmc add add add adc push add add add sub add add dec add add add insl je add jg mov add mov xlat add add repz add pop add add push add cs inc add push push pop insw add ja test stos add mov add roll fchs out add add push add adc add sbb add add add push pop add add xchg cwtl lahf add add enter fcomp out add clc add add add sbb add add add add inc add add dec push add pop add add js xchg (bad) xchg pushf add ret roll add add in add lock add or add add xor add add push pop add bound add addl add leave rolb fcomp out hlt sti add add adc add add sub ss pusha insw je jge mov add mov add into aad jecxz jmp add cld add add add add add and add add aaa ds dec add push add pop data16 add jp add add add ret lret add loop add repz add or add add daa cs add dec push pop pop data16 outsl add add add test add rolb fcomp out hlt sti add adc sbb xor add dec add add add jae addl movsl lods mov ror add fchs out cmc sti add adc and add add add inc dec push push pop add add add add add add mov loopne jmp or adc add and add aas inc dec push pop bound ja test lea mov ror add (bad) in hlt add add push or add add add xor add add inc dec push pop add add outsl jbe add (bad) add movsb add add add fldl out add add or add add add pop es add push pop arpl jb jp add add stos add add int fildl jecxz jmp hlt add add add or add adc and xor add inc dec add add add add insw add add orl add mov add leave add add add add out add add add push add sbb add xor add add data16 add jp add add add ret rcr fild add add add testb add add push add add sub add add dec push add pop imul mov add add ret lret (bad) in add cld add or add sub push add add push add (bad) mov add lahf cmpsb lods ret rcr add call add push add pop push add das add cmp inc dec add push add pop imul add test add add xchg pushf add add add into (bad) fldl add add in hlt add incb add pop add add cmp inc add dec push add add jb add add add movsl add scas mov add int3 roll fsub add repz add add add add add add xor cmp dec add add add outsb add add add add mov add (bad) lret rolb add fiadd add add icebp clc incl or pop add sub aaa ds add dec push pop fs js add add mov add add out add incb push add adc add add cmp dec push pop add jae adcl jne jge add mov add movhps add add add add inc dec add pop add add data16 add jb add addl xchg add pushf mov movb aad fsubp in add sti add add add and add cmp push add imul jne jge mov stos add (bad) add add add jecxz jmp repz add add or add sbb add sub add xor dec add pop add add ja jg lea add cwtl lahf add add ret rcr loopne add add add cld add adc add and sub add inc inc add add add insb add jg mov xchg cltd add add add loopne out add add add push adc sub dec add add add jnp mov add movsl add add mov les int3 add add add loope add add sti add add add add push and dec add add outsb add add add mov add xlat add out add testl push add pop add add add inc dec dec add add add imul add add xchg popl add lcall scas mov rol iret add fsubp add add add add or pop add sub cmp add add pop popa add ja add add pushf add mov add add out hlt sti add add or and cmp dec push pop add je add add add ret lret add add ljmp adc add and add add add add add bound outsl jbe add orl stos mov rol aad fsubp add cmc cld add add adc add xor dec add pop add jnp add popf movsb add mov rcr add add out hlt add add add sbb add xor add dec push add pusha add push add add add movsb stos add add enter in in hlt sti add add add and add add add add push add add popa push addb mov add add rcr add out cmc add add adc add add add dec push pop pop add add add mov cmpsl scas mov ret lret add loop add add add or pop push and dec push add outsl jbe jle add add mov (bad) add loop lock add add adc push and inc dec push add add arpl insb jae orl mov add ror add add fnclex jmp add movhps push and add add add add add add add add stos add mov mov add out cmc cld add or add add add add inc inc add add push pop bound add add add mov xchg sahf add add add loope add and xor add inc add pop bound imul add add mov mov rcr loopne call add or add sbb and xor ds dec push pop add arpl add addl popf add add add int3 rcr loope out idiv add adc add sub aaa add push pop arpl add add mov scas add add mov into aad add add out add clc incl push adc xor inc inc dec add add add jno add mov mov rol iret (bad) fldl add out cmc cld add adc sbb daa cs inc dec push add add add add jnp add add add add add add rolb fiaddl jecxz jmp add idiv add or add cmp add pop bound add xchg add add ret add int3 add fsub add add cmc cld add adc push add add add aas inc dec push pop bound add orl mov mov fnclex jmp pop add adc add and dec dec push add pusha add push jb jp mov lods add add mov int3 add add add out out idiv add adc and sub ss add pop add add mov xchg add mov add out add incb and xor cmp dec dec add add add jns xchg add add add mov (bad) fldl out out cmc cld add add and xor add dec add push pop add jno add add mov mov mov add add in add add std add adc and add add add dec push pop arpl add orl add add jecxz icebp add add push adc sub add pop add jb add lcall rolb add int add add add add testl adc cmp inc add push pop add outsb jne add mov mov fldl in repz std add or adc sub cmp inc dec add add add add jl mov mov add ret add int3 roll fsub add repnz add or sbb add add sub add pop add jbe jle mov stos mov add enter fcomp add jmp add adc and cs push add arpl insb jae orl mov ret lret aad jecxz icebp clc add add add adc and sub xor aas add add imul jne add add stos add add add aad add loopne jmp add or pop push and inc add pop pusha add jo jle xchg stos add rcl fiadd out cmc add incb sbb xor add add add add jge mov arpl add jp orl stos add mov add rolb fcomp out add add add pop add add add add add cmp add add jg lea lods add roll fnclex add in add add add add xor add add inc add push add add imul add aam fucom jmp repz add add add add sbb es push add add jns add add mov stos mov add add add rcr loope add add add add add add add lldt push add sub add cmp add inc add pop add add add xchg (bad) xchg popf add add rol iret add fild out cmc cld add add add adc pop es aas inc add pop add add add addl fwait mov mov add add add add add add stc add movhps push and inc dec push add add jae add mov mov mov add add add add incb sbb add add sub xor inc dec push pop pusha add add add mov add ret fadds add add add cli add or add sbb add add add pop add add jns add add xchg add add mov mov add add add fsub add hlt add add add add add ss add dec push pop add outsb add addb add add ret add fildl add add cmc cld add sbb add add add add pusha add jno mov mov add add int3 rcr loope ljmp adc add add sub add inc add push add popa add imul add mov add add mov add add lret aam add add out cmc std add adc add sub xor inc add add imul jne test sahf add movb rolb add loope icebp cli add or adc sbb add sub add add pop add add jno jp add xchg add xchg add pushf mov mov add add add add clc add add push sub cmp add add add add xchg cltd mov scas mov add add add add fildl jecxz add cli add add adc and add add add inc dec dec add pop pusha add jo add sahf movsl lods mov add ret add add aad fiadd out add testl adc add and das ss push add gs je (bad) add mov mov mov rcl fsubp pop add das add inc inc dec add add je (bad) mov add roll (bad) call add add add and add sub xor cmp add push pop popa push add add lcall add enter add loop lock add adc add inc dec add push pop add jno addb xchg pushf mov mov add add loopne out idiv add add or sbb add add add cmp inc dec add add outsb jbe test add test mov add (bad) into add xlat fiadd out cmc cld add adc and add add add dec arpl add add add lods mov add add add add add jmp stc add add push sbb ss pop popa push addb add add int aad jecxz add hlt sti add add add and add cmp inc inc add add add add insl add add movsb stos mov roll add fchs out out add (bad) aad add in add or add add daa cs push pop add jo js addb cmpsb add add add add (bad) call add or pop push add sub aas inc add add add jbe add xchg add add (bad) fldl in repz add add or add sbb sub xor cmp add add add jns xchg cmpsl add (bad) into aad jecxz jmp stc add add adc pop add xor add pop bound add jns (bad) add add rol add add add jmp add or adc pop daa add xor aas add dec add pop pusha add add add ja jg xchg add add lods add mov add add add rcr add add add add add add add sbb add add cmp add push add imul add add mov mov mov fildl in add add testl add sbb add add add dec add pop add outsl add add jnp mov add rolb fiaddl add jmp repz add or add sbb add add add push add add add je add add add mov fild out add incb add add and add cmp add push add add js add lahf add test add add rcr fild add add add add add add add or adc add das add add dec push add popa add add add addl xchg cltd add add ret add add fildl jecxz icebp clc add add add or add sub inc dec push add add add ja add sahf add add add fchs add lock add add adc push and add aas inc dec push add gs jae jnp mov test add add rcr add add add add idiv add add sldt sbb add add cmp dec push pop bound imul orl mov add add add add lock add add adc add and das add inc add push add pusha outsb add add add xchg add cmpsb add add add add iret (bad) add in in add std add add lldt add daa cs add ds dec add push pop add jle add add lods add add rcl add loope add repnz add add adc add add sub xor cmp dec add add add jnp orl mov add iret add add loope out add add push or sub cmp add add add gs jae jl test add add mov mov rcr loopne out idiv add and sub add add add arpl add jl test add stos add mov ret lret fchs add add add sti sbb add cmp dec push add add add add add add add mov add add add into add fucom jmp add add add sbb add add xor add add pop add add data16 jbe add xchg add test mov les add add add add jmp push or sub add inc dec push add outsb jne add test add nop xchg sahf movsl add add into aad jecxz add repz add add add add sub cmp inc inc add add add add add add mov ror rcr (bad) in hlt add add push or add cmp add push add add jns orl add add rcr loopne add add out cmc cld add adc add sbb add add xor inc add dec push add add jae add add add mov xchg cltd mov mov fiaddl loop lock adc and sub xor add inc add dec push add imul add add mov xchg add mov fcomp in add idiv add and xor add mov add lcall mov fucom jmp stc add add add add add sub cmp inc dec add add insl je (bad) add mov mov ret lret call push or add sub add popa add imul jne addl xchg cltd mov add mov ret add int fildl jecxz add hlt sti add add add adc add es aas inc add push add pop add add add mov xchg fwait add add mov add jecxz icebp clc incl add push sbb add add add dec add add pop bound imul test popf movsb stos add add add lret rolb fnclex jmp push or and inc dec push push pop add push addl xchg lcall add add add aam add add add cmc add add add or add sbb add sub dec add push pop bound add add jo add add add add add add mov fndisi(8087 call add add push or add xor inc add dec push pop pop data16 jl mov add add mov faddl in repz add add add add add inc add add add pop add add add add xchg mov mov rcl fldl out out cmc cld add adc inc add add add jo jle xchg stos add add mov add add roll add add in in add add stc add push adc daa cs add add outsb add js addb nop add movsb add scas add into add fsubp add out cmc cld add add add add adc add add add add add cmp add inc add push pop pop insw je orl add mov ret add int3 rcr add in repnz add or push sbb add add add add pop pusha add add lea lods add xlat add out out testb add or push add add add xor add inc dec dec push pop add add js xchg lahf cmpsb add int3 roll fildl add add hlt add add adc and sub add add inc dec add pop add popa add add add test mov add add roll add add in add testb add push add add add add cmp inc inc add add pusha outsb add js xchg add add xchg add sahf movsl lods add add add add add loop add repz add add add add add and cmp add je jl mov scas add add add add rolb fiaddl loop lock add or push sbb add add add push add add add add add add fucom add add add incb pop push and add add add je add add add int add add loopne jmp cmc cld add or sbb add add add inc add add pop add add jge xchg add add rcr (bad) in add add sti add add add add add add inc inc add add bound add add add add lahf add test movb rcl fiadd out cmc add add or add and sub xor add add dec dec push add add add add add add lods mov add fnclex add in repz add add add es add add pop arpl add add xchg cwtl lahf cmpsb add add rolb flds loope out idiv add add add add add add inc add add add add jno jp mov nop xchg sahf movsl add (bad) iret add fiadd add add clc add add add sbb add add add add add add add add push jp mov add add xchg popf add cmpsl scas add add add add jecxz jmp add std add push add add xor add dec push push pop add push add movsl add add add mov mov add rolb (bad) add jmp add cld add add add add sbb add and aaa add push add pop gs add add add cltd mov add rcr loopne add icebp stc add push adc add add cmp inc add dec add arpl jb jp add mov add add rol add fsub ljmp push sbb xor add push pop arpl add jnp addl add mov add mov add push pop arpl add add jno add add add add add add (bad) (bad) add add add add incb add add pop push and cmp pop bound jno add add add test add iret add fsubp in add cld add add add add sbb add das add aas add add pop add add jae add test scas add enter add loop lock add add push sbb das add ds add cs add add add add add addl add popf add (bad) lret add add add in in hlt add add add add add add add dec add add add gs add add test stos add add add xlat add add jmp push add add adc add sub cmp inc add add add add imul mov mov roll rolb add fildl add out out add stc add add adc add daa add ss pop add add add push js addb add test add add roll add jmp sti add adc sbb add and xor add add pop pusha outsb add test mov add scas mov ret lret flds add add repnz add or add add add daa cs add imul add mov mov add ret lret fchs add out testb add add add pop es aas inc dec add add pusha add jno add cwtl lahf add add add add add add add repnz sti add adc add and xor cmp add add add add add add fwait add add rolb add fildl in add add add add add adc sbb sub add cmp add dec add add imul xchg add add ret xlat fsubp in add sti add or add sub cmp dec add add imul add xchg add add sahf movsl lods mov mov fchs out out add incb pop push add sbb das add inc add dec push pop add je jge add add mov movsb stos add lret add add add in add testb add add push add add cmp add add add add add add add mov xchg cwtl lahf cmpsb add mov mov add fsubp in add add add cld add add sbb and add xor add add add push add pusha add jno add jl mov xchg lcall add add (bad) fldl in repz add add sbb xor inc dec push push pop add add add xchg add mov rcr add add out add stc add add push or xor add inc dec push pop bound push add orl test add add add cmp add push add add add add add addb nop xchg add mov add fucom add repz add add or add add and sub add add add dec push add pop add jns add add mov add into add add add add jmp repz add add add adc add add xor cmp inc add add pop add jae add jle add add test add add xlat add loope out idiv add pop push adc aaa add add add add add add jmp sti add or adc and das add aas inc dec add add add add js add add add add add add add add add add add adc pop add add add add dec push pop bound push add add xchg lahf add add into add fsubp in add cmc cld add sbb sub xor add add pop popa push addb popl add lcall movb add fsubp in add int fnclex jmp add add sbb add sub cmp inc add add add pop add add jo jns add add lods mov add lret rcr loopne add add inc add dec push pop add add jge mov xchg lcall add add rcr add loop add add add add add movhps add aaa add add add add imul jne jge test add les add aad add out add idiv add add add adc add add add add add cmp add add add add jno jg add add rolb add loope push xchg add mov add mov adc cs pop pusha outsb add js add xchg fwait mov roll add add add add add add repnz add add adc and add cmp add add jnp add mov add rcl fiadd add out add add cld add add push adc add add add add cmp add jp add mov mov add add into aad fsubp in add cmc add add sub add inc dec push add add outsl jbe add orl mov add loop icebp add sti add adc pop add cs dec add pop gs je (bad) mov xchg add add add add xlat fild call add and xor add add push add pop add add push add mov add add rcl fdivp add add adc add add xor inc add add add push add add add je (bad) mov add add add enter roll add fsubp in add cld add add sbb sub add cmp inc dec add pop bound add add xchg add fcomp add add icebp clc add or add sbb and das ss add jo add cwtl add add iret (bad) add out hlt cld add adc add sbb sub aaa add push pop add outsb add (bad) cltd mov add add add rcr add add in hlt add add push add push and dec add popa push add add add add lret rcr loopne add idiv add or push sbb cmp dec push pop add add addb add add mov add add lret add fiadd add ljmp or adc sbb and add das ss push pop add insw je add add lods mov les add iret add fabs call sti add or adc xor add dec push add insw add jle lea add ret lret fiaddl jecxz repnz add add add xor aas inc dec push pop arpl add jl mov vpaddq loop add add add add add sub ss dec add add add add add addl add mov ror (bad) add out cmc cld add or add pop add and add xor inc dec add pop insw je jl mov add nop cwtl add ret push pop add add add jl mov sahf movsl lods add add sbb add add push add js add add mov xchg repnz add add and inc dec add pusha outsb add ja add in add add pop add adc add and sub add pop pop add add add add jmp add add cmp add cmpsb mov mov fnclex add in testb les rcl add loope add in add add stc add je add mov xchg sahf movsl lods mov add incb push add sbb es inc dec push pop add add add jge test stos mov loopne lock cli add add or add sbb add add add dec add add pop add add add xchg jmp stc add or push sbb dec dec add pop add arpl add movb fadds loope jmp add add add sbb sub add cmp add add enter add add add repz add sldt sbb daa cs movsl add scas mov mov (bad) add in repz add movhps push and xchg popf add mov (bad) add out cmc cld add outsb jne addl lea mov add fiadd out out inc dec push pop arpl jb add add mov add xchg sahf add cmpsl add int add xor add pop pusha add add addl add mov rcll sub add cmp add dec push pop pusha add mov add or add add add pop es add dec dec push add add add insb jae add xchg add add add add add add inc add dec push add imul add add add hlt sti add or add add add sub add push pop lods mov rcr loopne out cmc cld add add pop es inc pushf cmpsb add add add fucom jmp stc add push adc sub mov mov int3 add fnclex jmp push add add adc add ja test add lahf cmpsb lods mov ret lret fnop out cmc std add add add add addb mov (bad) add loop add inc dec add imul je (bad) add add mov (bad) lret and add add aaa aas inc add push pop add outsb add add sahf movsl lods mov add add add and das add inc dec add arpl imul add add incl add or add add sub add add cmp mov fadds cmp inc add add pop pusha outsb jne add add add cmp inc add add add imul (bad) xchg add or and add inc dec push add add add add mov add add add add or adc pop es add cmp inc add pop bound push jae roll fsub ljmp add sbb add cmp add dec add pop mov les add aad add out add add push add adc add add add inc add add add add xlat add out out add stc add add adc sbb and add xchg xchg cwtl lahf add add enter in in repz add adc add add mov add add add add (bad) dec add popa add add outsb jne add addb fwait add (bad) int add inc add pop add add add cwtl lahf cmpsb add mov mov jmp sti add add sbb cmp inc add add outsb add add add xchg add add add add add add add add add add and add aaa add add push add add add jae shl add lock push sbb cmp inc add add add pop popa add add aad fucom jmp stc add add or adc sbb add cmp add pop add outsl jbe test add mov add int fildl add out hlt add push push sbb xor dec add pop imul add add mov mov add fchs out cmc add add adc and sub add cmp inc dec push add insw add ja jg mov add scas add mov add flds loop ljmp add add adc push and add aas add add add add add add add add add ret lret fchs add lock add add aaa add add add pop bound add jbe add mov add add add add mov mov add ror (bad) fldl in repz add add adc add sbb add cmp pusha outsb je add xchg add leave rolb fcomp add add idiv add pop push add sbb add add aaa ds dec push pop pusha add ja test movsl add lret add loop add in hlt add add add add add add sub add inc dec push add add add add add mov add add add add jmp add add adc add add add sub xor inc dec push add add jge test add mov add add fldl add add lock push sbb add add add add push pop arpl imul add mov scas mov (bad) lret rolb add add add out cmc cld add add movhps inc inc add push pop add imul mov add add sub add inc add add pop gs jae addl cmpsb scas add into aad jecxz jmp stc add add adc sbb and xor aas inc dec add add add imul add add mov mov mov fchs out out add incb add add adc add add add xor push add add add add jle mov xchg pushf mov add iret (bad) fldl add add add add cld add add add pop push and add aas add add push pop add add jbe add test mov mov add loopne call push or add add xor aas inc dec add push pop insw je (bad) mov test mov mov (bad) fucom jmp hlt sti add or sbb add xor add add add pop gs jae addl cmpsb lods add rcl fsubp add hlt cld add add es add add add outsb add js xchg add add mov add leave rolb fcomp out add add pop add and xor cmp dec add add jns add mov add add add add fild add lock add add add cs inc dec push add imul jnp add pushf mov roll add add add fsubp add add clc add add add add add add daa cs add imul mov add add ret add add fldl add add testb add add adc add and xor add add add inc dec push add add add add add add xchg add add add add add add add out hlt sti add add sbb and xor ds add pop arpl imul add add add fwait mov mov xlat fsubp add add add adc add add add dec push add add pop add add js add add (bad) int add fsub call add adc add add sub xor inc add pop add insb add add js add add add movsl add mov fucom add out cmc cld add or add and add xor add inc add pop add jno jg lea xchg add add mov mov add (bad) aam fsub ljmp push sbb add add add push xchg add test mov mov add add out add clc add add add adc and add add cs add add insb add add add add add add add add add add aam loop add int add jecxz add pop push adc daa add add add add push push add pusha add push add (bad) mov add mov mov rcl fsubp in add sti add add adc and das add ds dec push pop add add add jge add add lods mov ret add flds loop ljmp adc add add add sub add add inc add dec push add insw je (bad) mov lods mov ret add aam add jmp add add sldt sbb and sub add inc inc add add pusha add ja add add movsl lods mov add add ror add fsubp add out add incb add add adc sbb add add cmp inc add add add add outsl jbe test test mov add int fildl add add add add cli add add add add daa add xor add dec dec push pop add add add add jbe test add add aad jecxz add stc add push adc add sub cmp add add pop pop insw je (bad) mov add stos add (bad) fldl in add add add adc sbb add ss add dec dec push pop imul orl mov add int add jecxz icebp add sti add add and xor add add add push add pop arpl jae add add add add mov add movb (bad) add fild add add add sti add or add add sub add xor add add push pop arpl insb jae addb lods mov add add rcr add add in in hlt add incb add lldt add add add add add inc add add pop bound ja add add roll fildl add add out idiv add add add sbb add cmp add add bound push jb addb add sahf movsl lods mov add add jecxz icebp add add add add or add add add add sub add add add add push pop bound ja add add mov aad add out hlt add std add adc and add sub add aaa add dec push pop add add mov add stos add mov ret roll fiaddl add add call add add or add push sbb inc inc add add imul nop add mov add add iret (bad) fucom jmp repz add add adc add add and add add cmp add pop add add gs jae orl mov add add (bad) add fild call add adc add sub add cmp dec push pop add popa push add jge add add xchg add add add rcr loopne and xor cmp add inc add pop arpl add jnp mov add add aad add loopne add jmp add add daa add cmp pop add jno jns addl add add add lret add add add in add idiv add add add add inc dec add add arpl imul (bad) mov mov add (bad) into aad add add add icebp add add add cmp add add push add add bound ja test movsl add add into add fldl add add add incl pop add add and add add cmp add inc add pop add imul add add mov mov mov add add add in repnz add or adc add add add and xor ds add dec push pop add jae orl add mov add add add add fcomp add out add incb and sub xor add pop add add add add add add int3 roll fildl add out hlt sti add add or sub xor inc add add arpl jae orl stos add add add add add add add out hlt sti add adc add add sub xor add add add (bad) fucom add add add add add add adc add sbb add cmp add add add imul add xchg add mov add add add add testl adc push add sub add inc dec add imul add add addl add add rolb add jecxz add add add stc add add adc and add add cmp add add pop popa add imul xchg add test add leave rcl fsubp in repz add add add sbb and sub cmp dec push add add jno add add cmpsl scas mov add lret add add loope out add add pop add push add add xor cmp add dec add push pop pusha add lea cltd add mov add mov add fchs out lock add or add add add aas inc add add add add add addl add add cwtl add mov mov xlat add add add idiv add add adc add add xor cmp add add add add outsl add jns add test add (bad) xchg popf add mov add add loope add repnz add push add add add and xor aas add dec push push pop gs jae add mov add lods mov ret add add call add or add and add add ss pusha add ja test add pushf add add lret rcr loopne add add add add or add add add add aas inc dec add add pop popa push add sahf add mov add add add in add sti add add add add sbb add add xor inc add dec push pop add push xchg add add add add add mov mov add (bad) fldl add call cli add add pop push add cs dec add add add add jns xchg add mov lret rolb (bad) add icebp add add or add pop add add aaa add add add pop popa add add addl mov add add enter fchs add add in add cld add push add adc add pop es dec add pop add add jo jle mov mov add add in out add add add add adc sbb and sub cmp inc inc add pop add outsb jne jge xchg mov mov mov rcr loope add add add or add adc and xor add add loop sbb aas inc dec add arpl imul (bad) add test mov mov add add cli add add adc add and sub add inc dec add popa add js add lahf cmpsb add add into add fsubp in repz add or adc add add add inc dec push add imul add add xchg add add mov mov add (bad) add jmp add add or adc add add add add add ds dec add arpl add add add add add add aam add ljmp add or add sub inc dec push pop push add lea lods mov add rol aad jecxz jmp hlt add add adc sbb and xor aas inc dec add pop add add jne jge mov mov add add iret (bad) add loopne call add movhps cmp push add add add add mov add add (bad) add lock add pop push add add es inc inc dec add add add imul add add add add mov add add add add add add add add and cmp pop bound add add add add jge add mov xchg cwtl add lods add mov add add lret rolb (bad) call add std add adc and add xor inc add push add add add jns xchg add xchg lcall lds int ljmp sbb add add xor cmp add push push pop data16 add add add (bad) xchg add mov mov rol (bad) fucom add hlt sti add adc sbb add xor cmp add bound add xchg stos add mov ret int3 roll fildl in repnz cld add adc add add and add ss add add pop pop add add add add xchg mov mov rolb fcomp out add idiv add add add push add and add add add add inc add add add dec add add push add add test add lret (bad) in add add incl push add sbb add ds dec push add add add jnp test test mov (bad) lret rolb add add mov mov aad icebp clc add add add add add add add add add add aaa ds dec push pop popa add jg lea lods add int add add out hlt sti add or sbb add sub add add dec dec add pop add add add add mov add lods mov add add add add rolb (bad) add jmp repz add adc add add add cmp add pop add bound add addl xchg add add add mov add add add fcomp out hlt sti add or add push sbb inc add add pop pusha add jge mov lods add rcr loope ljmp add or add add and sub ss add add jne orl scas mov mov fiaddl add add add add stc add add add add add xor dec add add add imul add test mov mov mov add fild out cmc cld add add add sub inc dec push pop pusha outsb jne jge add lahf add test mov (bad) int3 rcr loope out add incb add das add add dec push pop imul (bad) mov add add rolb fnclex jmp add or adc pop es add add pop add outsb jne add add lahf cmpsb add int3 rcr add add icebp add sti add add adc add sub ss push pop add add jnp mov xchg cwtl lahf cmpsb lods add aam add add add add repnz add add push or and add add dec push add add arpl add outsb jne add mov rolb fadds loopne out cmc add add add or adc and add add add push add add add add add add mov fcomp add jmp add sldt add add add add sub add xor cmp pop add bound add add add popf add add lret rolb (bad) call add or add add and xor add dec add gs add test add add iret add add out cmc cld add add add add add cmp push add arpl js orl add lret flds loop add repnz add or sbb es dec add push add insw add jle mov xchg add add add fldl add add lock add or add add add add inc add add pop add imul xchg fwait add movsl lods add add add add fildl add add add add incl add push add and xor add inc dec dec add pop add add jns xchg stos add int3 add add fsubp cmp add push pop add outsb jne addl xchg lcall lret add aam add add add lock add add add sub add add inc add dec add pop gs jae orl add add int add in add hlt sti add add adc and das add aas inc add dec push pop add outsb add add add add add roll add add out cmc add incb add add add adc sub add add push add push addb add add add add add add aad add loopne add add repz add movhps pop add add add xor inc inc dec add add push test stos mov add add add (bad) call add push adc cmp add dec add push add add jae orl add add roll add rcr loope out idiv add sub xor add inc add add pop arpl jb add xchg cwtl add mov add roll add fsubp add out add clc add add add or xor add add add add add jno add (bad) add test add leave rcl add loope out add cli add add adc add add add add xor add add add add add pop add add jl mov mov rol aad fiadd add jmp add add add adc sbb sub xor inc add push add insl je (bad) add add movsl add add mov add enter in add cmc cld add push add adc xor inc dec dec add pop insw je add add add add add add add iret (bad) add add add icebp add add add add movhps add sub dec push pop add arpl jb add lahf add add ret add (bad) call adc sbb add cmp add imul xchg lods add add add (bad) in hlt sti add add sbb es add push pop bound jb addb mov mov fildl add out hlt add add push add adc sbb add add ss add jno jg xchg add scas mov mov loope add repnz add add or sbb daa add ss add jno add add add add add lods mov ret add int add flds add in in repz add or add pop push and inc add dec push pop add imul jnp mov xchg cwtl lahf cmpsb add add leave add add fildl in add cli add or add sbb and xor add dec dec push pop gs jae addl add mov rcr (bad) add cmc cld add adc pop es inc dec push pop popa push addb mov xchg add mov add add loope add in repz std add and xor inc dec add push pop gs jae add add cwtl add mov add int fnclex jmp add or pop push and inc dec push push add add jle add add mov add add mov add add add add add add add or adc sbb add and xor cmp push add pop pusha add jno add sahf movsl lods mov add mov (bad) add add call add push add add and add aaa ds add push pop imul xchg cmpsb add lret add add call pop push adc imul jp (bad) mov mov ret add int add add add out idiv add adc sbb add add add add add dec push add bound ja test mov mov add fadds loopne add icebp clc incl or adc push and pop popa add imul add mov rolb iret add add add in repz add add add adc add xor add add add jns xchg cltd add add movsl add add aam add in add cld add add sbb sub add cmp add inc dec add arpl add add add mov add add add add out hlt cld add push or sub cmp add pop pusha outsl add xchg add mov ja add ret lret add xlat loopne jmp push push push add add aaa add scas rcr add in hlt add add or sbb add add daa cs add imul jl add add lcall mov into add fadds loopne out cmc cld add adc sbb sub xor aas inc add add push add add data16 jo jns orl stos add add add (bad) add add jmp push or sub add inc dec push add outsb jne add xchg add xchg cwtl lahf cmpsb add add aam loop lock stc add or adc sbb and xor add add add jne add add nop xchg add mov add call add add sub dec push add pop add insb jae jnp mov xchg add add add mov lds int add fsubp add add add cli add movhps xor add add push add pop arpl insb jae jnp test xchg add mov mov fiaddl jecxz lock add push add add sbb add and cmp inc add add pop add arpl jb jnp mov add mov mov add jecxz stc add pop push add push add sub add push add add insb jae add test lods mov ret int3 roll fildl in in repz add movhps push and cmp pop add imul add test mov mov fildl add in repz add add pop push and add inc dec push pop popa push add add mov add aad fucom jmp repz add add add and add add xor add add add add push jp add add add add add pop add insw je (bad) mov add add int3 roll fsub ljmp add xchg add scas mov movb add fiadd out add add push or add and xor aas add add sub cmp dec add push pop add add jb lea add (bad) int (bad) add add add lock add std add add add dec push add add ja jg add nop add lcall add roll add fsubp add out add incb sbb xor add inc dec add add add pop add add add jns orl add scas add enter add fsub ljmp add add add and add add cmp pop add add add jge mov add mov add fadds add add add hlt add add adc sbb add xor add dec push pop popa push xchg add add xchg fwait add add mov add add out add idiv add or add add add add add push push add outsb jne add add add add add lret add add ljmp adc push add sub add add dec dec push add pusha add add xchg add add into aad jecxz add add add or sbb and sub aaa cmp pop bound jno jns add cmpsb lods mov add add add loopne add icebp clc incl pop push add sbb xor add aas inc add pop arpl insb add orl mov mov rcr add add add hlt add add push push add add es dec push pop add add add add test add add add add leave rolb fchs add add add add add or adc xor inc inc add push pop add add add add add pushf add mov add jecxz icebp add cli add or adc sbb sub add cmp inc dec add popa imul add mov lds into add add in repz add or sbb es dec add add add jnp mov add stos mov add add lret add aad fldl add out cmc cld add adc sbb sub ss add inc dec add add add jge add mov add (bad) int add add add jmp add sldt add and das add add add pop add add outsb jne add test add mov mov add add add add in testb add adc sub dec pop add add add jp mov nop xchg add add roll add add add in repz add ltr pop es add add add insw je add fwait mov mov loop add stc add or add add add sub cmp inc dec add add pusha outsb add add add mov xchg add pushf mov rol rcl fsubp jmp add add or add and add sub xor add push push pop gs add addl mov mov mov aad fucom add out add add cli add ltr pop add xor add add add add mov cmpsl scas add into aad fiadd add add in repz add add add and add aaa add add push pop add outsb add test lea add mov add add add add xlat add loope jmp add movhps push add add ss add add pop add add jo jns xchg (bad) xchg add mov mov add into add add loope add idiv add or push add add add sub add xor add add dec push pop arpl add mov xchg cwtl add add movl add out add add add or adc add daa add add add dec add data16 add add mov mov mov add rcr add jmp add add add add cmp inc dec push add jno add mov lods mov mov add xlat add add add clc incl pop push add sbb xor dec add arpl jae add xchg fwait mov mov mov aam loop lock adc push and cmp pop add jno jns (bad) mov xchg cwtl lahf add add add add fcomp add jmp push add add and add add inc dec add pop add jbe add add movsl add add rcr loope jmp cld add add add adc sub dec push pop pop add add add add mov add add add add rcl add out out add add add add add add and xor cmp dec add push pop add add add add add mov add aam fsub ljmp or adc sbb sub add cmp inc dec add pop popa push jg mov mov add add add out hlt add add sub add aas inc add push pop add outsb jne orl add lods mov add ret lret add add add in hlt add add and xor cmp inc dec add add add jo jns add cmpsb lods add movl loopne jmp add add incl or sub add add cmp add push add add bound ja add add fwait mov mov add add add add out cmc cld add adc add and add cmp inc push add add add add add add js orl add add add fildl add out cmc cld add adc sbb daa add add add add add outsb jne add addb stos mov mov fsubp add hlt sti add add add add and dec add add pop arpl add jne add xchg mov add mov ret add rcr loopne out add std add or add sub add popa push add mov cmpsl add add add rcr loopne add mov add add add roll add fsub add repz add add add pop add add das ss push add pop data16 jl xchg add mov add add aam add add out add incb add sbb sub ss pop popa add jb jp add add add add fcomp out out idiv add adc add sub add add inc add push pop popa push daa add add xor add add dec add add add jns xchg lods mov roll add rcr add jmp add sldt sbb cmp pop add insw add add jp (bad) add mov cmpsl scas add add add mov dec add add insl add add add rcr add in pop push xor roll fsub test shl add add cld add add add add sub add dec add arpl imul jne add add add add mov add fldl add in hlt add add add sbb and add add add add add add add push pop add add add add mov add add aad add out hlt add add add or add sbb sub xor add mov add loop lock add add and aaa add inc add pop pop add outsl jbe jg add add mov add out out sub cmp add pop add insl je add mov add lret add add add add out add add sti add add add and sub cmp inc dec dec add add je jge add mov add movsl lods add add add mov mov xlat fiadd out hlt sti add add sbb daa add add add add add add pop imul jp orl scas add enter (bad) add testb add add add add and sub add cmp push push pop add add js xchg lahf cmpsb add int3 roll fildl add add hlt sti add adc sbb and add add add add add push add pop add add jo jle lea mov add leave add fadds add add icebp add add add add add add add sub aas inc add add pop popa push jg add add lea add add add add add (bad) add loopne out cmc cld add or adc add sub cmp inc add push push pop add je (bad) mov xchg cwtl lahf cmpsb add add add add flds loope out add incl pop push adc xor add add add add push pop add add add mov add xchg add mov add add add repnz add add or sbb daa cs add add data16 jl mov add add (bad) lret add aad add add out add add push or sub xor cmp dec push add add imul jp add add add cmpsl add add iret (bad) fucom jmp add cld add add add adc add daa add add add pop add add je add add movsl add add mov add fadds add jmp pop add pop add add add add add inc add add push add add add lea add add add rolb (bad) add add repz add add or adc sub cmp dec add add arpl js add orl add add (bad) add add in hlt sti add adc sbb add add xor add cmp add push add add ja test mov add add flds add add cld add push or add cs add add add add insb add add js xchg (bad) xchg popf add mov add fucom add add testb add add add sbb and sub add add add inc add push pop add outsb jne jge test mov add add mov mov add iret add (bad) add testb add add add and add sub aas inc add pop add insw je add addb mov add mov add roll lret rcr loopne add lock add and xor cmp add dec add popa imul add mov mov add add xlat fsubp in add cld add or sbb daa add cmp push pop add data16 jae add test add add add enter add loope add cld add or sbb and add xor add dec add popa add add add add add add mov add fildl add jmp add add add adc and add add add add add add add push pop arpl imul (bad) add add lahf add add mov fildl add jmp add add add pop add adc pop dec leave rolb add imul jmp add add add xor add push pop add add orl add mov add add aad jecxz add sti add add add add push add sub add dec push add pusha add imul mov add add fildl jecxz icebp clc add add add sbb and add add add add add dec add add pusha outsb add add add mov add fucom add repz add adc add add add cmp add inc dec push pop pusha add js addb mov mov add ljmp add adc and xor aas add add push pop pusha add add add jl test add stos mov add leave rcl fucom add hlt add add or add sbb sub add inc inc dec push pop arpl insb jae add orl add add add into aad add add add icebp add add add add adc and add xor add add inc dec add add outsb add add (bad) add test add leave rolb fcomp out incl add add add add sub xor add add add pop bound push js add xchg fwait mov mov faddl in in hlt add add push or add sub dec push pop add jge mov mov mov lret add (bad) jmp or add adc and add sub add cmp push push pop add jl test add add flds add ljmp adc xor inc add dec push pop add bound jb jp mov add add add add into add add cmc incb add add sbb xor dec push pop bound add je jl mov test add ret lret add add add add add in add add add or add add sbb add ss add add insl je (bad) mov mov mov add (bad) call add or adc and cs push pop pusha ss inc dec add push add popa add add mov fldl add add add add add add add cs pop pop add jne orl mov add add jmp push or and xor cmp add add add add add jae (bad) mov add add add add fild out add incb push add adc sub inc dec push add pop arpl add add add add add movsl add scas add add add add fucom add add lock add add add add add push push pop add outsl jbe add xchg movsl lods mov ror add roll add fsubp add add idiv add push adc add cmp dec add add add add add add add mov loope out add add pop push adc daa add cmp push add add jne addl xchg cltd add mov add leave rolb add add jecxz in add add clc incl or add sub add add add add popa imul add add add (bad) int (bad) fucom add repz add add adc add add and add add add add cmp inc dec add push add add add jne orl add add add xlat fiadd add out cmc add incl push adc sub cmp add dec add add add add add mov mov add aad jecxz in repz add add add add add sbb add aaa ds dec push pop popa push addb mov add rol add add loope out cmc cld add sbb add add xor add add add sbb sub dec push pop pusha add push add jbe add add add fsub ljmp add add and xor aas add push pop add jo addb cmpsb lods mov add (bad) fldl out out cmc std add sub add cmp dec add pop popa push add xchg pushf add add add mov mov rcr (bad) in hlt sti add or adc and add add cmp dec push add pop arpl jb jnp mov scas mov add xlat fsubp add out idiv add or add add xor inc dec dec push add add arpl add (bad) mov add add lret loopne add add add cld or adc sub add cmp add dec add add pop pop insw je add add movsb add scas add add add add add in repz add add pop add adc pop add xor add dec add pop pop data16 add add jle add add add add add mov loopne out cmc add add add add sbb es dec add push pop gs add jbe test xchg lcall add leave rcl add out out idiv add add adc add xor add add add add add add js orl rol add add out cmc add add push adc add inc add add arpl add mov add add mov add roll faddl add add out idiv add pop push and add add add push pop add add jl mov add add mov add ror rcr fild add lock add add add add add add cmp add inc add dec push pop bound js xchg mov add lcall movb rcl fiadd add out idiv add pop push adc add add add xchg add add (bad) in hlt sti add add sbb add sub cmp inc dec push add imul (bad) add mov add add add add int fnclex add in add idiv add add add sbb and sub xor add cmp pop bound add addl fwait mov rol add add add jecxz icebp clc add add add sbb and xor cmp add add pusha add push jb orb add mov les int3 add add out add add add movhps pop es push pop pop data16 jo jle mov mov add ret add (bad) call push add add adc add add add add push pop pop insw je add add add add add aad jecxz icebp clc incl or sub cmp add push pop pusha outsb add test movsl lods mov add add add add rcr add add out idiv add pop add adc add add add xor cmp inc add add add xchg lcall add add or sbb add das ss add add add insb jae add test cmpsb scas mov ret lret fiaddl loop jmp stc add movhps add daa cs push pop add add jae (bad) add test mov (bad) lret add aad in repnz add push add sbb add add add inc dec push push pop add add add add xchg popl xchg add mov mov add jmp stc add add add and xor add inc dec push add add orl add add out hlt add add or add sub cmp inc dec add add pop popa push add add add add int3 add (bad) add add out cmc std add pop push adc add ss add add xchg lcall add add rcr add jmp cli add add add add add xor cmp dec push pop add jne add xchg movl add ljmp add add inc dec add push pop add outsb add test stos add jecxz jmp hlt add add add adc pop es inc add popa imul mov xchg cwtl lahf add add aam fucom out add incb or add push add add xor add inc dec push add add add add mov mov add aad add jmp hlt dec pop add arpl jns (bad) add mov xchg add mov add movl out idiv add add adc push and add inc inc dec push add outsb jne jle mov lods add mov mov xlat fiadd out out add add cld add add movhps add daa add add aas inc dec push pop arpl jb add add mov add ret lret rcr add jecxz jmp hlt sti add or add sbb add xor aas inc add add add jb addb add add lods add add mov add add add add jecxz add cli add or add add add aas inc dec add push add add outsl ja jg lea mov add mov roll flds loop add repz std add or and add add dec push add outsb add js addb lods add add add jecxz add out cmc std add or adc and sub cmp dec add pop add bound add adc sbb daa cs add push push add add add je add mov add into aad jecxz add add cld add or sbb and xor add inc add push pop add outsl add add mov xchg cwtl lahf add test add (bad) lret rolb add add loopne out cmc cld add add push cmp inc add dec add add pop add imul jnp test lea add rol rcl fldl out hlt add add add aaa add add add add push add add jo add add cmpsb lods add add mov roll (bad) call add sbb add dec push pop add outsb add add xchg mov mov add jecxz jmp hlt add add adc and sub add add inc add add add pop add jne orl scas mov (bad) lret rolb fiaddl add jmp repz add or pop push add sub xor cmp dec dec push add add outsl add xchg add add mov ret add add add fcomp add out cmc add incl or add sbb add add add xor add add pop arpl add outsb add js addb stos mov rol add fucom jmp add add add add add pop add add and xor add inc add dec push add add insb jae add add addl lcall mov add out repz add or sbb add das add add inc dec dec add add push mov stos add lret (bad) in add cld add or sub add cmp add add stos add mov ret add add (bad) add out out add add sti add add add add add add aas add dec push push pop gs add jbe test lea ret int3 add add add add add add out add add pop push add push add sub dec push add add add jbe jg add add add add roll add loop lock push add add add and das add add add add pop add jbe jle add add add add add fchs add add repz std add pop add add add sbb sub xor inc add dec add add add add addl xchg add popf add mov (bad) add loopne call cli add adc add and das add add add pop insw je add sahf movsl lods add add add add in add cld add or add add sbb sub add cmp dec add push pop pusha add add add jge mov stos mov add ret add iret add fchs add lock add or add adc add cmp dec push pop add jo jns xchg fwait add add mov rolb add add in add add cld add adc add add add add add push pop arpl imul add mov scas mov (bad) add fiadd add jmp add adc and sub cmp inc dec add pop pop add jo js orl add lret rolb add jecxz jmp hlt sti add adc push and inc dec push add add add add add ret rcr add add add add idiv add pop movhps push add sub add add add pop popa push addb add add add (bad) fldl add jmp cld add adc add sub add aas inc add pop add add jo add jl test add mov add add lret add faddl in add add add or sbb and xor add inc dec push add pop insw je add test add (bad) lret rolb add fucom in repz add movhps add add add push pop imul (bad) add test mov add ret add aam loop icebp clc incl add push sbb cmp add push pop popa push xchg add scas add add add add call add add add sbb sub add cmp inc dec push add add je jl add lea add movsb stos add aam add fild add add clc incl push add sbb inc add push pop add add add outsb add test add add add add add add fldl out add icebp add add add add sbb add add cmp inc add push pop pop insw add test mov mov les add iret (bad) fucom in repz add sldt sbb add add add inc dec dec push pop add add mov add mov add jp add add mov add add cmpsb add add add add (bad) fucom jmp stc add or adc add add pop es add pop add jo jle add mov add mov int aad fsubp in add sti add or sbb add sub xor cmp add add add add add jge add add mov xchg fwait add movsl lods mov rol aad add add out cmc cld add add sub add inc dec add add push nop xchg add add mov add add iret add add add loop ljmp add add and inc dec add add pop add add jbe jle xchg add test add add int3 add fsub add in hlt cli add add add add adc add add add add xor add add add add pop imul (bad) add add mov roll fsub ljmp adc add xor inc add pop pop data16 add mov add mov fildl jecxz add add testl add add das ss pop add add je add add mov rolb add roll fnclex jmp pop or add and add add add dec add add add js addb mov add add loopne add add add add or adc sbb add add sub add add inc dec dec push add pusha outsb add add add mov movsb stos mov rolb add add aad add out hlt sti add add add add add and sub cmp add push add outsb jne addl xchg add add add int aad jecxz in repz add adc sbb add add add ss add add add addl add add lret fiaddl add in repz add add and add cmp add add pop popa push test add mov add les add add add loopne call add add pop and cmp add add add js add add add add mov add fsubp in add add add add or sbb add and xor aas add add mov lods add ret int3 add fnclex jmp add or pop add add add add add add add add push js orl stos add mov add mov rcr add call incl add add add and add xor aas inc dec push add add push add mov mov mov add fildl jecxz jmp stc add push adc daa add aaa add add add pop add add gs jae add lahf cmpsb lods add int add in add add add push add adc add es cmp add add pop popa add add add fwait add add add xlat add out add add add add add and sub add add add add add pusha outsb jne add lea xchg popf movsb add add add roll fiaddl jecxz add add add incb add adc add xor cmp add add dec add add push add mov mov add fucom add add add incl or add sbb es dec push pop add add jb jp add movl out out add incb add add add adc and xor ds add pop bound add add add mov add enter add add add add call incl add or add add push and aaa ds add pop add add add mov add enter fiadd stos add enter add loope out add stc add add add add xor inc add add add dec add pusha add add insl add add xchg add mov mov mov add (bad) fiadd out hlt add add pop add add sbb and add add cmp add add add imul add cmpsb lods mov mov add add add loope ljmp adc add add add add inc add add push pop bound ja test mov add add flds add ljmp add add add sub add add inc add add add add pop data16 jo js xchg mov add mov int aad fiadd out hlt add add or add xor cmp inc add pop pusha add add add movsl add lds add rcl fsubp in repz add or sbb add add cmp dec push pop add add orl test add add add (bad) add lock add or and aaa ds add pop add add add add stos mov mov rcr add add add repz add add sbb add dec pop add add add add mov add add add add rcr add out lock add add add adc sbb sub add inc inc dec add add insw je jl add add add stos add lret fchs add lock add pop push add add add das ss inc dec add add addl lcall mov xlat add add out idiv add add adc cmp inc dec dec add pop data16 jge test add add int3 rcr add ljmp mov add roll fchs add lock jbe add fwait mov lds int fildl add add add xor dec push pop add imul add add add lods add add mov add add loope add in hlt add add or adc sbb add sub xor cmp inc dec add fs add jne add mov add iret (bad) fldl out add cld add add or add pop add xor add cmp push push pop add jl add mov mov ret lret fiaddl loop ljmp adc pop es dec push add add add (bad) mov add add add rolb add add add out cmc cld add or sbb and xor ds add add add add xchg stos mov rolb iret (bad) add loopne call add add adc add add xor push add add add jae orl add mov add add add lret fiaddl loop ljmp add add push sbb xor dec add imul add add add jge add xchg add xchg add add mov add add leave rolb fcomp out add add add or push sbb add cmp push pop arpl add outsb jne orl add enter (bad) in hlt sti add adc add add and sub add cmp dec push pop add add add add add add mov mov out hlt sti add add add sbb add xor add inc dec push push add popa push xchg movsl lods add mov add add iret (bad) add loopne call add add adc and add add xor inc dec add push add add add bound jno add add add mov ret add int fildl add in add sti add sbb add add add add inc add add add add add add test lahf cmpsb lods mov ret add aad add add repz add add or add add add push pop pop data16 mov add in add add add add push adc add add add add add dec add add add jbe test test mov les int3 add (bad) fldl in add idiv add push add and das ss inc dec push add pop add add jno add add add popf add mov rol aad add add jmp sti add add or add add add ds dec add add pop add outsb jne add lea add scas mov add add ret add int add add add add in add cmc or add and xor add add dec add popa push addb stos mov add add add add repz add or add and cs pop add popa add imul add jge mov add add (bad) fucom add repz add or add sbb cmp add pop pusha add add add mov nop xchg add mov add add add flds loope add repnz add or pop push add cs add dec push add add add je (bad) mov add add lods mov mov aam faddl add call incl or sub add add push pop add add add add jg add mov xchg lcall rol add fcomp add add add incl add add pop add add add ds push add data16 add add movsb add lret rolb fiaddl loop lock add and sub xor add push pop pop insw je add xchg pushf add cmpsb lods mov mov add add in in hlt sti add or sbb and sub add aas add add pop add add add mov add test mov rcr loope lock incl or add and sub cmp add add pop add arpl add add jle add movsl add add add rcl fiadd out idiv add add and add add add inc add dec add add bound add add add add ret add add aad jecxz icebp clc add add push adc add xor dec dec push pop add add add test mov mov fnclex add add hlt add add or das add add add push add add add jne add lea mov ror aad fsubp add hlt add add add and dec dec add add outsl add add mov add add add out out cmc cld add add or push sbb add add add add add arpl imul add jg xchg cmpsb lods mov add fnclex hlt add and add inc dec add add add add je add fwait add add leave rolb fcomp out add add add or sbb es inc inc add pop imul orl add add int3 add add in repnz add add add add cs add xchg add cmpsb lods mov ret xlat add out hlt sti add or add add sub add inc dec push add pop popa push test add lods mov mov add fadds loopne add add add idiv add add add sub inc add add dec add imul add add add cmpsl scas mov add xlat fiadd add out cmc pop add adc add sbb and add aas inc add add push pop popa push xchg add xchg cwtl lahf cmpsb lods mov add add fadds loopne jmp add or pop push and xor add inc dec push pop bound push js xchg add mov add iret (bad) fucom jmp add add add or add add and add add add ds dec push pop popa push xchg add scas mov mov (bad) fucom jmp add cld add adc sbb sub add inc add dec push add add add jbe jg add add add xchg popf movsb stos mov add add (bad) int add add add add jmp hlt sti add or adc sbb and add add add inc dec push add mov mov add add flds add add add add repnz add add add add add add and xor aas inc dec add add pusha add js xchg movsl add scas mov ret add int fnclex jmp cld add add and add xor cmp push push pop add outsb add js addl add add add mov add add loope add in hlt sti add adc push add cs push add pop arpl imul jl mov xchg add pushf mov ror add fcomp add add in repz add adc add add and sub add add inc inc dec push pop add add imul mov add lcall add add add out add idiv add add xor add inc dec add add add add add add add jns add mov add xchg add add mov (bad) lret add add add add out idiv add add adc and add cmp add pop pusha outsb add add add mov mov faddl jecxz add add testb add or push add add add add add add inc add pop pop add add js xchg mov add add leave rcl add loope add repnz add add sbb add cmp add push pop add insw je add add stos mov rolb add add aad jecxz icebp add sti add adc push and add inc add pop add data16 jl mov scas mov les int3 rcr add jmp cld add adc sbb daa cs pop pop add imul xchg fwait mov mov rcr loopne out cmc add add add adc add add sub add add add addb (bad) xchg popf movsl lods add add add add loope add idiv add add add add and add xor push pop add jge mov xchg add sahf movsl lods add add add mov add add loopne out testb add add adc add sbb and cmp add pop add ja add mov test mov mov fsub add add add clc incl or and dec dec add add add jg add cmpsb lods mov ret (bad) in repz add adc add add xor inc add push pop imul xchg cmpsl scas mov ret lret add add in in add cld add adc pop add add add xor add add push add add outsl jbe test test int3 add add fsubp add cmc add incl or in sti add adc sbb add xor add inc inc dec push add imul xchg add add mov ror (bad) add add loop lock add add add or and add add add add dec add arpl add jnp mov add mov add (bad) into aad add loopne add icebp clc add add or add sbb sub xor add dec push pop pop data16 jbe test scas add mov add fsubp in add add incb and xor ds dec push pop popa add imul xchg add add into aad jecxz lock add add add and sub xor add dec push push pop gs jae add cmpsb add add iret add (bad) out out add incb and xor add inc add push pop pusha add push js add add stos mov rol add add fnclex jmp add add adc sbb add xor cmp inc dec dec push add add arpl imul xchg (bad) xchg popf add ret lret fchs out cmc add incl add or add add sub add add cmp add popa outsb jne orl movsb add flds loope out testb add push adc sub add add pop arpl jb add lahf cmpsb lods mov add lds add add add out hlt add add or add add and add sub xor cmp add push pop bound ja test lea mov add fadds add jmp add push adc xor add inc dec add pop bound add addl mov add add fadds add add jmp add add or add add sub xor add push pop add imul jne jge add movsb add lret add add in add cmc add add pop add add pop add sub add cmp inc dec push pop pop data16 ja jg add mov xchg lcall (bad) add fsub ljmp push add add sub add cmp add push pop add add mov add ret lret (bad) add lock add add add adc sbb and add add inc dec push push pop add outsl add test stos add rcr add add stc add push adc add add add inc dec push add pop insw add add add add (bad) lret add add fsub ljmp add adc sbb add xor cmp inc dec add pop add arpl imul (bad) add mov mov add fiaddl add add add testb add push add sbb add sub xor aas inc dec push add add add js addb lods mov roll lret (bad) add idiv add or add sbb xor cmp add add jns add add ljmp or sbb add add sub cmp add push add bound add add add add movsl add add mov mov add add add add add jmp hlt add add add add sub inc dec push add pop add jne add add movsl add scas mov add add iret add flds add call add add adc sbb add add xor inc add push pop add bound push jae jnp mov mov rol iret (bad) fucom in repz add add add cmp add add push add push add xchg lcall add enter in repnz add or adc pop add add xor add add push pop pop add outsl add orb add mov xlat add add add icebp clc incl add add or sub add add add add add add push add add imul popl add lcall rolb lret add loope add add add or push sbb add xor inc add add add gs jae jnp add add add add hlt sti add adc sbb and add xor aas inc add push push pop gs jae add add mov add (bad) fnclex add in add cmc add add add push sbb push add fs jae add add add loopne out idiv add add and xor add add popa push xchg add enter add add add repz add add adc add add daa add ds add pop add jae add add add mov add lret (bad) jmp add incb pop push adc xor inc dec add pop jno jnp mov scas add add add fsub ljmp adc add add sub cmp add pop add add add add add add add stos add rol aad in add cmc std add add add add das add aas add dec add pop bound push jae add add add mov add ret lret add add loopne add add add add incl pop sldt sbb add and add xor push add add add add orl mov faddl in repz add add add cmp pop add jp orl add lods mov add lret add fildl add add out add add sti add add adc cmp dec add add arpl add jbe test lea add aam loop jmp stc add add add add pop push sub add cmp add dec add add pop bound js xchg add scas mov mov add flds add add add cld add pop add and sub add add add pop gs add add add add add ret int3 add add fsubp add cmc add add add add adc add and add add imul mov add xchg add add mov mov add loopne call push or add add add xor add push add pop gs add add jg add nop cwtl lahf cmpsb lods mov add add add aad in add out idiv add adc add sub add add inc add pop popa push add cltd mov mov add add add flds loope lock incl or and inc dec add pop add add jb add jge add add add add (bad) fiaddl add in repz add add or adc pop add add xor aas inc add add popa add imul addl add add mov rol add xlat fild out cmc add add add pop add add add add cmp push pop add add mov xchg cltd mov add mov add ror rcr add add ljmp add add sbb inc inc add add pop bound add add mov scas mov add add iret add add push and add add pop add jne add xchg add add mov mov add (bad) into aad in add cli add or adc add and sub add cmp push add imul add add add xchg fwait mov scas mov add add add fiadd add out add add add adc add add sub add add cmp push add add add add test mov rolb rcl fiadd add add add add add add add das add ds add add add add addl popl add lcall add fsub add add add clc add add adc pop add xor add cmp push push add popa push mov xchg fwait mov mov mov fnclex jmp add add adc sbb and add xor add add dec push add outsb add test test add mov add enter add loop add repz add or sbb and add add xor add add push add add pop gs add jge xchg add mov add add add in add cld add or jne add mov mov add rcr loope add add add add add add add push add push add sub add cmp add inc add pop add add add xchg (bad) xchg popf add add (bad) int aad fsubp add hlt sti add add push add sbb es inc dec push add imul add test mov add mov mov aad add add repz add add add movhps cmp inc dec push pop pop data16 add add mov add scas mov add add (bad) add add add add or add add add xor push add imul xchg add add mov fiaddl loop jmp add idiv add pop add push sbb xor pop insb je add addb stos add rolb flds loope out idiv add add sbb add add cmp inc dec dec push pop imul addl lcall add aam add add in hlt add add adc sbb and add cmp inc inc add push add add add addb add mov add add rcr loope add idiv add add sbb and xor add add dec push add pop add gs add jbe add popf add mov mov xlat add out incb add push add push add sub add inc dec add push add add outsb jne jle add add add aam add in add cld add or sub xor cmp add dec push pop bound add addb nop xchg sahf add ret lret add call incl add adc cmp inc add add pop popa push addb mov xchg cltd add mov ret rcr fild out lock adc sub add add dec push add data16 jo js add add add add fcomp out out cmc cld add and sub add inc add add pop add add je add mov xchg add add add (bad) (bad) add jmp clc add add add or add add add cmp dec add push add add jae add add cwtl add mov mov xlat add out add std add pop add add add add add aaa add dec add add je add add add mov mov rolb add loope add add add add add sbb das cmp dec add add push add jne orl scas mov mov roll fchs out cmc cld add or add add and cmp add add imul mov add add aam add add out add clc add add adc sbb and sub add add cmp add add pop pop data16 add jle add add mov add add add add flds loope add repnz add or adc add add add sub xor aas inc add push push pop add jne jge add mov add add in hlt add add push or add add sub add add add dec add data16 jo jle add mov add stos mov rolb add add aad in repnz cld add adc pop add ss dec add popa push mov xchg add mov add add add loope out testb push or sub cmp inc dec add add add jno jg add add add add add add faddl add call add add adc sbb daa add xor add inc dec add pop add mov rolb lret add (bad) fldl out add add add add or add xor add dec add pop add jp add add add add add cmpsl add add rcr add add add add cmc add add add add sbb and xor add inc dec add add pop add imul add xchg add mov add leave rcl fsubp in hlt add add add add sbb xor pop add imul add add add mov mov fldl out cmc cld push pop add outsb jne jle add (bad) xchg popf movsb stos add mov mov (bad) fldl out out add add cld add add or add sbb and add xor inc dec push pop pusha add add xchg add add test ret rcr add add repnz add add adc sbb sub add cmp add pop add gs je add add add add add mov add add add add call add add add push sbb add add inc add add add imul orl mov add add jmp add add adc add das add aas inc dec add pop data16 jo js addl add add add int (bad) fucom jmp cli add add or add sub add push add data16 jge test mov add add test add mov add (bad) jmp pop lldt pop add add inc add dec add add outsb add add sahf movsl lods add mov mov add call add add sbb add add add add add pop pusha add js xchg stos mov add add roll flds loop lock push or add sub add cmp inc add push add add jno add sahf movsl lods add int add jecxz add add cld add and add add add inc add add add outsl jbe test test add aad add add call add add adc add and sub add add dec add add pop add jne add add ret lret add add add add testb add add adc add daa add aaa ds add dec push add add jo jle add add les int aad fsubp add add (bad) or sbb add add add dec push add arpl jns mov add lret (bad) jmp or add adc and add inc add add push test mov add rcr add in in repz add or sbb add add add cmp inc add dec push add insw je add add add add add add fsubp in repz std add pop add add sbb and add add add add dec add pop insw je add mov add mov int3 add (bad) add add add icebp clc add add or add add push add xor add add pusha add jbe add mov mov into aad stos add add xlat fsubp in add cld add adc add jo js add lcall movb add rcr add add in add testb add or push sbb add dec push pop add add mov stos mov mov xlat fiadd out hlt add incb sbb xor add push add add add add add add (bad) xchg popf movsb add scas add mov add ret lret flds loope ljmp add add adc sub inc dec add imul add add add add add rcr add add out hlt cld add adc sbb add and dec dec add add add imul add add add add (bad) fucom jmp hlt sti add adc push and cmp dec add pop pusha outsb jne add add add add mov fsubp in add cld add adc add add sub add inc add dec push pop pop data16 jo jle mov xchg fwait mov add add mov rcr add loop jmp add add add add movhps and xor aas add add add add imul add add (bad) into aad add out add idiv add pop push adc add add daa add add add aaa add inc add push add pop popa add add insl je (bad) mov add stos mov rol aad add loope add add incl or add daa cs inc add pop imul (bad) mov mov add les add add add loopne out cmc cld add or add add sbb add and sub add inc dec push push pop gs jae jl mov add mov add movl out add incl push adc xor add add add push push add add add jae add test add add mov add rol aad fldl in add add add or add add add sub aaa add add inc add dec push pop arpl add jl mov add add add add add add add fadds add add add add idiv add adc and add add add dec push pop pop insw add ja test add add roll add faddl add add out add add push or sub cmp add add popa add imul orl add add add add fsubp in repz add add add pop daa add add inc inc add add pusha outsb add add add mov add xlat add add jmp add add adc and cs inc dec push add insw add add addb add add add add into aad jecxz add hlt add add add adc and add add xor add add add add dec add add bound add insl add ja test add add rcr loopne out add clc incl add adc push and dec push pop arpl jns (bad) mov lods mov add add add add rcr (bad) in hlt sti add adc push add sub add cmp dec push pop arpl imul xchg popl add add add mov mov add fabs call add add add add sub add add push add insl je add mov add mov add leave rcl add add add in repz add add adc sbb add xor add add add add jno jns mov mov mov loope jmp add add adc and sub ss pusha outsb add js xchg stos mov mov roll (bad) call add sbb add add add cmp inc dec add push pop imul add stos add add into add fcomp out hlt add add adc push and add aas inc dec push pop bound jb addb mov add add mov add add loope out testb incl add adc add sbb and add add add add pop add add lret rolb add jecxz jmp stc add or pop push add add add add add dec add push add outsb add add movsb stos add lret rcr loopne out add clc decl sbb add cs inc dec push pop arpl insb jae orl mov fsubp in hlt add incb add add add pop es dec add add push pop add add jb jp add test mov add int fnclex jmp sti add or add sbb sub xor cmp dec push pop add add jge add stos mov mov add in add add add sti add adc add add and xor add cmp dec add add add jg lea add add ljmp adc push and cmp add add add jno add addl fwait mov (bad) fiaddl loop ljmp adc push add sub inc dec push pop add imul mov add test ror add fsubp in repz add add adc sbb and sub cmp dec push add add add add add jg mov cmpsb lods mov ret add add call add or add pop add ss pop gs jae add lcall add add leave rcl add out out testb add add or sbb daa add add inc inc dec add add add add add mov add add add rcr loope add idiv add or sub add inc add add pop add add add jge add mov add mov ret lret (bad) add add add add movhps cmp add push pop popa push addb movsl add scas mov add add aad add cmc add add adc add add xor cmp dec push add add add orl mov mov xlat fsubp add add add add add xor cmp add pop add jo add lea xchg popf movsb add rol add xlat fsubp add cmc add std add or sbb daa cs add add add add mov mov roll add add in add sti add or adc xor inc add add dec push add pop imul add js mov add leave rcl add add add add add add adc and add ss push pop arpl jb addb mov mov mov add loope jmp add lldt add add das ss push pop add insl je add test mov xchg popf add ret lret flds loop ljmp adc push add sub dec add pop bound imul orl stos mov add ret lret (bad) add lock add add add add add add add ja test lahf cmpsb add add leave add add add add in hlt add add adc add and add xor add push pop add outsl jbe add (bad) add mov add lret add add in repz add add adc sbb sub cmp inc dec push add pop gs add jge test cmpsb lods mov enter out hlt sti add adc add and xor aas inc dec push add pop add push orl add mov int add fiadd out add std add adc and add aaa ds dec push add add jbe add movsb stos mov rol add fsubp add out idiv add adc add sub aaa add add add add add je jl mov add add add cmpsl scas add mov add add add in in add add add add adc add sub aaa add inc dec push add fs add test test add mov int3 add add in add add clc incl or add sbb daa cs dec add imul add mov scas mov les add rcl fsubp in add cld add add sbb add xor add inc dec push push pop insw je add add mov les int add add loope add in add add add pop add pop push and add pop pusha outsb add add add mov add enter in in add add adc add sub cmp add push pop add add add xchg cltd mov add add leave rolb add fildl add out add idiv add or daa cs inc add pop data16 jo jle add cmpsb lods add add fiadd add ljmp add adc add and cmp inc dec push pop add add lea mov ret add loopne out add add add movhps pop es dec add add jae (bad) mov mov roll (bad) jmp add add add adc daa add add aas add push pop pop insw je (bad) add test mov mov (bad) fldl out hlt add add sub xor add push add gs jae add mov xchg fwait add add add jecxz add out cmc cld add or add add xor dec add pop add add add jp add cmpsl add int fildl jecxz add stc add add add add add add sub add add insw jne orl test ror (bad) fldl in repz add add adc and sub ss imul jne addl add add add jecxz in add add add adc sbb add add add inc add add push add add ja test mov mov fadds loopne out add incb add sub cmp dec add data16 jl test lea mov mov mov fadds add jecxz add hlt sti add add adc sbb add xor add add add add data16 jl add add xchg fwait add movsb add (bad) lret add add fcomp out hlt add add or das add add inc dec add add outsb add js add add add movb add rcr add jecxz jmp add add movhps cmp inc dec push add add push add jge mov movsl add lret add aad fucom jmp add cld add sbb das ss add pop pusha add add add jge add mov add xchg add popf movsb add (bad) lret rolb add fiadd out out cmc cld add add and cmp pop popa add add add js add add add rcr add add ljmp or adc add and sub cmp add push push add add jo jge xchg lahf cmpsb lods add add fnclex jmp add add add add add xor cmp inc add add dec push add add add jb add sahf lods mov les int add jecxz add add cld add or add sbb sub add cmp inc add add imul jge mov add ret lret add add fsubp in repz add add or adc add sbb add daa add xor add add pop pop data16 add jns (bad) mov cmpsl scas add mov rcl add out hlt add add add add adc sbb and add xor add add imul add jge test mov lods add mov mov fsub ljmp add adc sbb add add xor inc add add add jns xchg add add enter add add add repnz add add add adc add sub cmp dec push pop add jae orl mov add (bad) int add fiadd out out testb add add add xor add push add pusha outsb add add add xchg cwtl lahf add add add add add rolb add loope jmp add add add add pop add es dec push add push test add add scas add add add fucomi add add add adc add add sub xor cmp dec push pop pop data16 jge add lea mov add fiadd add jmp add idiv add add adc add es add add add jne orl add cmpsb lods add add rolb fadds loopne out cmc cld add adc sbb daa cs add add insb add mov add stos add rolb add add jmp add add add adc add add aaa ds dec push add add add add add add add iret (bad) add add add ljmp add push and add push pop add add imul add add add xchg add add mov int3 rcr loopne add add out add add add push adc xor inc dec add push pop pop insw add orl add add add int fnclex jmp add idiv push or add add add ds dec push pop pusha add add addl mov add ror aad jecxz icebp add add movhps add add cmp add push add insb jae add add movsb stos mov add add add into aad add out add add incl or add and add cmp add dec add add bound add je add add movsb stos add add leave rcl fsubp add hlt sti add adc add daa cs inc add push pop pusha add add insb add add xchg add mov add add les add iret (bad) fucom jmp stc add or push sbb xor push pop pusha outsb add js add orl mov add add add pop add sub add add inc add add add add insl je add add movsl lods mov add add roll lret add add add fiaddl loop add repz add add or push sbb inc add add push add je (bad) mov add stos mov rolb lret (bad) in add add add add or adc sbb sub xor add dec push add pop data16 ja add sahf add add movl add jmp or add add and add add push add sahf movsl lods add rcr add add in add add incl add add adc sbb add add cs add push pop arpl jb add add add mov add add add xlat fsubp in add sbb add ss push add add add add add add add add mov add add add add add add incl or and xor cmp dec push pop add add jge add mov add add scas mov mov (bad) add icebp clc add add add or sbb and add cmp inc add dec push pop add add jae add mov scas add add add (bad) call add push adc sub xor add push pop bound imul add ja add add add lods add ret xlat fsubp in add testb add sbb add cmp dec add add outsl add add mov nop xchg mov add ret lret add add fild add lock add sbb and add add inc dec push add add add add add mov test add fiaddl loop add add add add adc sbb and xor cmp dec dec push pop add je jl add add cmpsb add add iret (bad) add add add lock cli add movhps add inc dec dec push add add outsl jbe test add mov fchs out add add add or add add daa add xor add add pop bound jno jg add cmpsb lods add add aad add add jmp add add add add add xor add add add add add insb jae add add popl xchg sahf movsl add rolb leave rolb fchs add add add add std add pop add push sbb xor push add add add add add add add movl add adc add add add daa add cmp inc add pop add popa push jp orl test mov add add add fcomp out add icebp clc incl or sub add add inc add pop bound ja add cwtl lahf add add add add int fsub add repnz add or push add add add cmp add pop data16 jo add xchg nop add add add ror add add loope out add add add add add or pop add das add add dec add add add popl xchg sahf movsl add out idiv add add add adc and add xor add add pop add add jae add lcall add mov iret (bad) add out out add incb add or add add and xor add inc dec push pop arpl jb addb add add add mov add add loop add add add add add add adc add sbb sub xor inc inc add pop add outsb jne orl scas mov add rcr fild add ljmp daa cs add push add insl je orl mov add int add fldl add jmp or sbb and xor ds add add push pop add jbe jle mov add rcl fiadd add add in hlt sti add add add and add add push add imul jne jge add mov add stos mov mov rcr add add add out add incb and xor ds add pop arpl add add add jp mov add add ret add rcr add jmp add or sbb add cs add add pop pop add add add jnp add add fwait mov add add rcr loopne jmp add add add add add cmp inc add add dec add push add add add jnp mov add add add add add add add fadds add add add add or adc and das aaa add add add add push pop imul add test mov add into aam jecxz add add add add or adc sbb sub xor add cli add or sbb sub add aas add add pop add outsl add jns xchg add xchg add mov ret xlat add add add icebp clc incl add or sbb es dec add add add jnp mov add roll roll add add add out cmc cld add and xor cmp inc dec add add add jb jp add mov add add add add mov add in repz add add push add sbb add add add cmp dec add push add add add addl add stos mov rolb lret add out add incb push or add add add add add add dec add add add add addl add test add iret (bad) fldl add call add or push sbb add add inc dec push add add outsb jne orl test add lret (bad) in add add incl pop push add add add xor add add dec push add jb jp mov add scas mov mov (bad) fucom in add cmc add add add adc sub aas add add dec push add pop add jae jnp mov xchg cltd add mov rolb iret (bad) add add call cmc cld add sbb add sub add cmp inc dec dec add add outsb add jle xchg add add lods add add add fadds add add in repz add add add adc add sbb add es dec add push pop bound add insl je jge add movsb add add (bad) into aad add out repz sbb and add add add add dec add pop data16 ja add sahf movsl add scas add add mov fsubp in add sti add adc add add sub add inc add dec push push pop add outsl add addb (bad) xchg add add add int add add out add std add or add sbb cmp inc dec push add add add add add add add add add loopne add add add add push adc add and add add inc add add pop add gs add add addb mov add xchg movsb lods mov ret add add fucom add in hlt cld add add sbb and add add add add jl add add ret add roll fildl in add add add add add add and cs push add add add add jle add add add add (bad) aam add add add add add add add sbb add ss push pop arpl jb add add add add xlat add out hlt add incb add es add add outsb jne add popf add add add add add add in repz add add adc and das add inc dec add pop add add add mov rcr add jmp add add add sbb add xor add inc add add add add jp (bad) mov xchg cltd add mov int3 add add (bad) add add std add and xor add add ds add pop add add push add add mov add add add add add add push pop pop data16 jl add lea mov add aam fucom jmp repz add or add add sbb add add add push pop gs jae jl mov add mov loopne call add push add xor inc dec push add data16 add addl cmpsb lods mov mov iret (bad) add add call cli add add adc add sub add aas inc dec push pop add jl add add (bad) lret rcr loope jmp add or add sbb and sub cmp add inc dec push pop add add add add test add add add add (bad) int (bad) fldl in out add add add add add sbb daa add aaa ds add dec push add add add add add add add xchg add mov add add fild out testb incl add or sbb daa cs push add add add jle lea mov mov fiadd out cmc cld add push add outsl add jns add xchg pushf mov rolb add int add add out add add add pop push adc cmp inc dec dec push pop add jbe add popf movsb mov add (bad) int fninit add repnz add add adc add and sub add add inc add pop add add add ja test lahf cmpsb add add add ror rcl add add add add add add or sbb add sub cmp add add push pop popa jae add add mov xchg cwtl add mov add add mov fucom add add add incb add add inc dec push pop add add jns add add test (bad) int fnclex jmp add sldt sbb add add sub cmp push add add add outsb add add addl add (bad) int aad jecxz icebp clc add add or add and add xor add add pop pop data16 jl add add lods mov add iret add add fsub ljmp add adc add add xor add cmp inc dec add push add insw je add add xchg nop xchg sahf movsl add scas mov add (bad) int add fsubp add add add add cld add add add or adc add and add add cmp dec push pop pusha add add jp orl add int (bad) add repz add adc add add add sub dec add add outsl jbe test add mov mov add add add add add add add add push add add and cs push pop pusha outsb jne jge add add cmpsl scas mov mov aad jecxz jmp stc add add add add pop push add add xor add add inc add add add insw je add add mov cmpsl scas add add add add add ljmp add or add xor add inc dec add push pop bound add add jo add add add add test add aad jecxz add repz add adc and add add add push add add add insb add add test add fiaddl loop add repz std add add or add and sub add add gs jae addl lahf cmpsb add int3 add add add fildl in repnz add incb sbb add add add add pop add add insb jae add add mov (bad) fldl out repz add add add movhps ds dec push pop bound add add lahf add test (bad) int fnclex jmp push add push add pop add add cmp inc dec add add jae orl mov fchs out add add add or pop push and add add aas inc dec add add add imul xchg lods add add out add add cli add add xor push pop popa push addb mov xchg cltd mov mov add add add clc add push or add cmp dec add add add add xchg lods mov ror add icebp stc add add or add cs add push add add add add addl add nop xchg sahf movsl add scas add mov lret add fiaddl loop jmp repz add add add pop push and cmp add insw addb mov add xchg add add rol add add fildl in repnz cld add add adc das ss pop insb add jle xchg mov add ror rcl fsubp in repz add adc pop add xor add pop add outsb jbe test add add add add fsub ljmp adc add es add add add jle mov mov mov fldl add add add stc add or adc and add add add add add add add je orl add add add add add add add add or sbb cmp add add add add add les add add add add out add sti add pop adc add add xor inc dec push add add outsb js mov add rcr jecxz add add add adc sub add push pop outsb add mov mov pop add imul xchg popf movsb add scas mov mov add fsubp in add sti add add add add and cs add dec push pop add add add jg add add lret add add fadds loopne out cmc cld add adc sbb sub xor inc inc add pop gs add jbe add orl add mov add lret (bad) in hlt sti add or adc sbb and xor inc inc add pop add outsb jne addl enter in hlt sti add add sbb and das add add inc dec add add popa push addb add scas add mov iret (bad) add out add add add adc and add add das ss add add popa add add add js add add add add add add (bad) call add add adc sbb and add cmp inc add add add push jp add mov add add add add out out add std add pop add add add sub add add dec push pop add add orl add add iret (bad) add loopne add add add add or add add add add cs inc add push add pop add jno jg lea (bad) lret add add fucom add repz std add adc add and sub dec add push add pop add je add xchg mov add add add add add fiadd out add icebp add add add push or and add add add push pop pusha outsb add test mov mov add movl fildl add out add add add add pop add add aaa ds dec add pop add add add mov mov add ror (bad) add loopne out cmc cld add add pop es in cli add or sbb add das add add dec add data16 ja add add xchg pushf add cmpsb lods add rcr loope out add incb and add xor add pop arpl add jne jle add movsl add scas add iret add add add ljmp add or add add xor cmp add inc add add add add add jg lea add add fwait add leave shl add repz add or pop add add and add das ss dec add add imul (bad) add add add lods add add (bad) fucom add in repz add add adc and add ss add add jbe add add stos mov rol add fadds loope jmp push or sub add ss push add pop data16 jbe test add roll fildl add in add cld add or sbb add sub add ss add add add imul cltd add mov add into aad in icebp add sti add adc add add and sub add cmp push add add add add (bad) mov scas mov mov (bad) call cmc add add pop push add sbb and sub add cmp add add pop bound add add add add mov scas mov mov add jecxz icebp add add pop push push sbb add add inc inc dec add add outsb jne orl test add leave rcl fsubp in add sti add add push sub add add jne add add stos mov add enter in in add idiv add and xor add inc dec add pop pop insw je (bad) add add add test les add add fchs add add add add add push sbb xor add push add add pop arpl imul orl add movsl add add (bad) call add add add add add cmp add add pop bound add add add add lahf add add mov (bad) add lock add or add pop add das ss add add insw stos mov add (bad) int fsub ljmp adc add add add cmp pop add jo add add add (bad) xchg add mov mov ror xlat (bad) add cmc add push or pop add add inc dec push pop add arpl imul repz pop push add sbb add inc dec dec push add add ja add add add mov enter add fildl add out add testl add and add add add add push pop add bound add jp add mov add ret add aam faddl in add or adc and sub add inc dec add add add add xchg mov ror add add in hlt sti add add push es add add add ja add xchg add add add rcr add add in add testl adc and xor add add jge xchg add add mov mov add add out lock add or add sbb es inc add add data16 add add xchg mov mov add add add add add add fsub add repnz add or add add add add sub cmp add push add imul jnp mov xchg cwtl add add add mov rolb add add in add add add adc add add sub xor cmp add popa push xchg add add roll add add add out cmc cld add add push adc xor add add add arpl imul jnp add add lahf cmpsb add add leave add add loope out idiv add add and add add jne jge mov movsl add lret fiaddl add add hlt sti add add add and xor add add dec push pop fs jae add jg add add add add rcr add add add in add std add adc sbb sub xor inc add popa add add add mov add add scas add mov add add in hlt sti add add or and inc dec add push add mov add add enter loop hlt sti add add push adc cmp inc add push push add imul add addb lods add roll fsub add in hlt add add push push adc add inc inc dec push pop add add add lea xchg pushf mov add mov fsub ljmp incl or and cmp inc add add add imul add add mov rcl add out out add add add or add xor add push add add jle add add xchg add add add mov add add fsub add add cld add add add add add add sub xor inc dec addb nop xchg sahf add test mov les int fnclex jmp add add add and dec dec push pop add outsb jne jge test mov mov add add (bad) in add cld add adc add daa cs pop add outsl jbe test mov add mov (bad) add add add add stc add push adc add xor add inc dec push add add bound add xchg mov mov add add roll add add in add add stc add or adc pop add add add cmp inc dec push pop pop add jne addl add add add mov add add fnclex jmp add add add add add and add add add add push xchg add into aad jecxz add out add clc incl or and inc dec push pop add insw add jle xchg mov mov (bad) fsub ljmp add add add sbb inc inc add pop imul add test add add iret add add out cmc cld add add add add and cmp add add push push pop add je jge mov xchg lcall rolb lret roll add add out out testb push or pop add sub xor dec add push pop add add data16 add addb add (bad) lret rolb add fucom jmp repz add or sbb and add add cmp dec push push pop add add add add add add add mov fsubp add out add incb push or add add add aas add push push add push add add fwait add ret lret fadds add jmp sti add or add add add and add xor aas inc add push add add add add jne orl add int aad ds add add pop add add data16 jbe test lea add add add jecxz icebp add add or add add and add add xor add pop imul addl lcall mov add loopne add add stc add or add pop es add add add add add add jg add add scas mov add xlat fiadd out add testl adc sbb and add add add add push add add add jne mov mov add add (bad) add fldl add add add stc add or add add add and add cmp inc add add add add push js add mov lods add add add add add add add add clc add pop push add push add sub dec push add add add popa push add add add int fsub ljmp add adc and add sub cmp dec push add insb add jle xchg (bad) xchg popf movsb stos mov add add lret add fiaddl jecxz jmp add cld add add or pop sub xor aas add push pop add insl je jl add movsl lods add mov add (bad) into add add add add add add cld add add xor add add pop add add add add js add add add add add (bad) aam add add add add stc add add or sbb add sub cmp inc dec dec add add add add add test mov add add add aad add in repz add add add add adc add sub xor add dec add add pop add outsb jne orl add lods or pop add xor ds dec push pop add imul add jge xchg mov mov rolb fcomp add add testl add or xor add pop outsb jne jle add add lods mov ret add add add add out cmc add add add add sbb add and xor add add inc dec add add add jnp add mov add enter fild add add add add cld add push add adc sub add pop arpl add add add addl add add add add add add jecxz add out add add add add pop push add sub add add add add imul add mov add (bad) fldl add lock add or adc add and xor add dec push add pop add imul add add mov lods mov mov fild call add or adc push and cmp add add jbe add add (bad) xchg add mov add fsub add repz add add sbb add add sub add cmp pop add imul orl add add scas add mov add add loop lock add add add or adc add add add add inc inc add add pop popa add jb jp add xchg mov add mov rcr add add lock incl or add and xor add dec add add outsb add add xchg add popf add ret rolb add add add add add add add or sbb add xor push pop popa add add add mov add add (bad) add add add add add add add pop add and sub add cmp dec push pop add add add add lods add mov (bad) aam add add repz add add adc sbb xor cmp dec add pop add imul add mov add iret add add out hlt sti add add sbb add add cmp inc add push pop imul add add sahf movsl lods add mov mov (bad) fldl in repz add adc sbb and add cmp inc dec add push add add add xchg add test mov add rcr loopne jmp push add add add add xor add add inc dec push add pop add outsb add js add lahf add add push add outsb add ja add add add add cli add add add sbb add add ds dec add push pop add insl add addl lea add xlat add add out cli add movhps add add add ds dec add pop imul xchg (bad) xchg popf add mov fnclex jmp add add adc add and add xor cmp add push gs fucom add hlt sti add adc sbb add xor cmp add dec push push pop add outsl jbe test add stos mov add ret rolb (bad) call cmc cld add add add adc add daa add add cmp dec add pop add arpl add outsb jne jge add add add ror add fchs out add clc add pop pop add add add add cmp add add dec add add add jo add add test add stos add add fchs add out idiv add sbb das ss push add pop insw je (bad) add lods mov mov add fldl in out hlt sti add adc add add add sub add add inc add dec add add outsl jbe test test mov add int (bad) fldl in add idiv add add add and xor add dec add push pop add outsl jbe jle xchg add fcomp out hlt sti add adc and add add inc add add pop data16 jne add xchg mov xchg add add roll add fsub ljmp add add add xor add add add add add orl add mov add lds into aad loop add repz add add adc and add add add cmp inc add add add pop add add add add add pushf add add mov xlat add loope out add add add add add xor add cmp add pop insw add ja test mov add int add add out hlt add add add add add cmp add add push pop gs jae add movsl add add roll add in repnz add add or adc sbb sub xor cmp add inc dec add add add add jae addl mov mov add fcomp add add icebp add add std add or and aaa add inc add push pop add push add movsb add add add mov mov add rolb fld1 icebp clc add pop push add push and add sub inc dec push add imul add mov rolb iret add add add in repnz add add adc sbb add xor cmp dec push add add add addb add mov rcr fsubp in add cld add add add push sbb cmp add add push push add pusha add push add jnp mov cmpsl add add lret (bad) add idiv add add adc xor add add dec push add pop add jo js nop add mov add (bad) int aad fiadd out hlt sti add or adc add add xor aas add push add add add js xchg add rolb (bad) call add movhps and sub add inc inc add dec push pop gs add add addb test mov add enter add add out add cld add add and add push pop add add jp add pushf add ret add rcr loopne add idiv add add add and add add push push pop add outsl add js add mov test mov mov add add fsub ljmp add sbb and add aaa add add add add add add pop add add add add mov add xlat fsubp in repz add or pop add add add cmp add inc dec push pop pop data16 cmp pop add outsl jbe test test add add int (bad) add in repz add add sbb sub add inc add dec add pop gs jae jnp mov xchg cltd mov mov add iret add fiadd add add testl sbb sub xor cmp add add push pop add outsb jne add mov add int add add loope out add stc add add add adc add sub xor cmp inc add add push add outsb jne jge mov add add add add add add faddl add out lock add or add add xor cmp inc add dec push add fs jae orl add add rcr loope out add add add or sbb es dec push pop pop insw je add add lcall lds add add flds add in add add add add pop push adc cmp inc dec dec push pop add jl add mov add iret (bad) fucom add repz add add adc add add add xor add pop add add add add xchg add add mov add add fiadd out out dec push add outsl jbe test test mov mov (bad) add add jmp or add and xor add add pop gs jae jnp mov add rcr (bad) add add add add add adc and add add dec push add add jle add add add add (bad) call add add adc sbb daa cs push pop add imul add add add add mov rol add add fnclex add add add std add add add and add cmp inc add pop add insl je jge add add add rcr loopne add icebp clc incl or add sub push add pop add je (bad) mov test mov mov faddl add out cmc cld add or sbb daa cs add pop bound ja test add mov loope ljmp add add adc add add sub xor aas inc dec push pop bound push js xchg add add add loopne out cmc cld add adc add sub cmp inc add pop imul jp orl add mov add lret add mov sbb pop add add sub xor add pop add jae add xchg add add add into aad jecxz jmp add add adc pop add add xor add add pop add push jnp addl xchg lcall add mov lret add add in out cmc cld add adc and sub add aas inc add add pop add add je (bad) mov add stos add add fsub ljmp or adc add add add inc dec dec add add add add add add addl add cmpsl add add add add fninit add add cmc std add pop push add add mov mov add mov xlat fiadd add add repnz add add add add or sbb add add xor cmp inc dec add imul add xchg cltd mov mov add in add lock incl add add push and inc dec push add pop add add jbe jg lea xchg add stos mov add mov aad fiadd out hlt cld add adc add sub xor add add add add jno addb add in add add cli add or add sbb and sub add add add pop data16 add add addl add add movsb stos add lret rcr add add add add idiv add sbb add dec push add imul add xchg movsl add scas add mov add fchs out add add cli add add adc sbb sub aaa add add add pop pop insw add ja test add add roll fninit ljmp adc add add add add push add add aam add add in add idiv add add push sbb inc add push pop imul add jle add stos mov add ret add fildl jecxz icebp add add add add sbb add sub cmp inc add dec push pop add add add jne (bad) mov test add mov movb iret (bad) add out out add incb add or add add and xor add inc dec add add jnp add add popl add lcall mov mov add xlat fiadd out out idiv add add add pop add add das add cmp inc dec push add jno add mov lods mov ret int3 add add fsubp in add add incl add adc add cmp dec add pop add jns add add lods mov add (bad) lret add aad jecxz add add icebp add sti add add add or adc add and add add add cmp push push pop add add jns orl mov (bad) add jmp stc add push add add add and xor cmp dec dec add insw je (bad) add mov add test mov (bad) lret add add add add add add add add add add movhps inc add pop pop insw add add add cmpsb lods add int fildl jecxz icebp add sti add add add push and add cmp add dec add add pop popa push add add add mov mov add add out cmc add add add or sbb add sub aaa add inc inc add push pop pop add add add add add add add add add add mov (bad) (bad) add add add add add adc and add xor aas add push pop add insw je (bad) mov add xchg add sahf movsl lods add add fnclex jmp add add adc sbb add sub cmp inc add add add pop add add jo jns add add scas mov add lret (bad) ljmp adc sbb daa add ss dec push pop imul jnp add add lahf cmpsb add add add int3 add add call or add and add cmp inc add add pop add add jbe add cwtl add mov add mov add fucom jmp add add stc add add add add add add and add add add add inc inc dec push pop arpl jae jnp add add mov add mov les int3 rcr loope out add incl or add add add cmp inc add pop add add xchg add mov (bad) add out add add add add add add adc add and das ss add pop imul add mov mov rcr (bad) in add cld add or adc add add daa add add cmp add add push add add bound ja test mov add mov add add add add fldl add add add incl pop add add sbb add add add add add push add pop gs add add add add add lods add add rcl fsubp in add add add add add add xor jle add stos mov rol iret (bad) add add add add add add incl or adc push add add ds dec add add add add jno addb popl cwtl lahf add mov add fiaddl add jmp stc add push add add add sub aaa add add push add push add cltd mov mov add add loop add add cld add push add adc sbb add add cmp inc dec push add pop add jae add orl mov les int3 roll fildl in in add add add add add or sbb sub add cmp add add dec push add outsb add add mov add add (bad) into add add add add in add testb push or and inc dec push pop add add add add jle xchg add test add iret (bad) fiadd out hlt add add add add adc sbb add xor cmp add add add insw add ja test add add add (bad) fsubp add cmc cld add adc sbb add add ss push add add fwait add add add ret xlat add out add std add and add add add pop data16 add add add xor cmp inc add add add pop pusha add add jns mov add add add int3 add add fsubp in repz add push add add sbb add das add add add add add popa push addb add add add add add add add in add add add add xor add push add pop add add add jno jg mov cmpsl scas add add add aam loop icebp add cli add add sbb sub add cmp dec push pop add je jge add lahf cmpsb lods mov ret add aad fucom add add cld add push add add adc and add cmp add push pop imul jp orl movsb add add add add in in add add add add or add adc add xor add dec add add imul mov add mov add int fild jmp cmc add incl or push sbb xor add arpl add add add (bad) add cwtl add mov add flds loop add add add add add or add and add xor aas add add add pop gs jae (bad) add mov stos mov add ret lret (bad) out add std add or pop add das ss pop add add add xchg add add ror add (bad) in hlt sti add add sbb and add xor cmp add dec push add add add mov rcr loope add repnz add push add push and add inc add dec push pop add outsb jne add mov mov add fnclex jmp add add add sbb add sub xor cmp push pop arpl js addb add scas add aad add in repz add adc and add aaa add dec add add push addb popl cwtl lahf add mov ret lret fild add lock add adc and add add inc add add insw add jle add mov mov add fsubp in add add stc add add add add sbb and sub add dec dec add insw je add add add mov fnclex jmp add add add push and add inc add push push pop add outsl jbe add mov mov add fsub ljmp add add and add xor dec add arpl js addl mov sbb sub cmp add pop add outsb jne jge mov mov mov rcl add loope out add clc add or adc add add das add inc push pop add outsl jbe jle add add add add aad fldl in add add add add add add and cs push add add add add jle add add add add (bad) lret add fiaddl jecxz jmp repz add add add push sbb cmp add add add add add add add add add enter (bad) add out testb add add push sbb add cmp push pop arpl imul add add mov add rcr fild out add add push adc xor add add push add jb addb lcall mov int3 add (bad) fucom jmp repz add or pop push and add push pop add add jl mov scas mov add lds into add xlat fiadd out lock add add adc push add add add add inc dec add add push pop imul je add add mov test mov mov add add fsub ljmp add adc sbb sub inc add dec add add add insl add add add rolb leave add add fsub ljmp adc sub xor inc dec push pop arpl add outsb jne jge mov scas mov (bad) lret rolb (bad) call cli add add adc and das add add add push add add add jae jnp add mov mov add jmp repz add or add add and sub cmp inc dec push add imul je jge add lahf cmpsb lods add add add add fnclex add icebp clc add add add adc add sub add add add add add imul jl test lea mov add ret lret aam loop add add add add add incb add or adc add and add add inc dec push pop arpl jb add jle mov add mov add add rcr fild add ljmp add sbb and das ss pop popa push mov add cmpsl add mov mov fldl add add lock add add add add add push and dec dec add insw je add add mov fsub ljmp add sbb add add add add inc dec add push add add add add orl mov add mov enter add out out add add add add add sbb sub add cmp add push pop add arpl addl lea add cwtl add add mov add aad jecxz icebp clc add add add or sbb sub aaa add add add pop pusha outsb add add mov mov mov fnclex jmp or sbb add add add add inc inc dec push pop jp add add rcr add ljmp add cmp inc dec push add add pusha outsb jne add add fwait add add rcl add out cmc add add adc add add xor cmp dec push pop add add add orl mov add loope add add add or push sbb cmp inc add pop pusha add add jns add add scas mov add lret rcr loopne add add cli or sbb sub xor inc inc add push push add outsb jne orl add add mov add fchs out out add add pop push add push and cmp add pop add add insw add add add mov mov vpmullw fisttpll pop popa push xchg add popf add add cmp add add add fildl in in add add add add add sbb sub add cmp add add imul add add movl add in out cmc std add pop sub aaa aas add push push pop data16 jne orl add int3 add add (bad) out testb pop movhps and dec add push pop bound js xchg add mov fldl in add add stc add add add sub cmp add inc dec push pop bound add insl je jge mov mov mov loop add repz std add sbb cmp add add dec add add add add add jg lea mov xlat add loope add testl pop push add sub ss pop add gs add add jns addl mov test add add add rcr in repnz add add push or pop add add sub xor add add pop bound add jp (bad) add add ror add fcomp repnz add add add or add sbb add add aas inc dec push pop bound push add jne orl add ret xlat add add jmp add idiv add add adc sbb daa cs push pop pusha outsb jne addl lea add test int3 add add add add add add add add add add or sbb daa cs add add bound jns add add add mov add roll add rcr add ljmp adc add add inc dec push pop popa add add jbe test mov (bad) int fildl add jmp hlt add add adc and cs add imul (bad) mov add xchg fwait mov movb aad jecxz icebp add add add adc pop add xor dec push add insb jae orl mov add add aam loop icebp sti add or sbb and das aaa add aas add add pop add bound add add add add add scas add mov rol aad add jmp stc add or adc pop and add xor add add pop pop insw add jbe add xchg add add mov add rol add fsubp in add cld add add adc add sub xor inc inc dec push add add add js xchg add mov rol add fcomp add add add incl or xor add add push pop add add jbe add add add (bad) call add or add cmp dec add push add push mov add cmpsl scas add add add fiaddl add jmp clc incl or sub cmp inc dec add push add add add jae orl mov rcr loope out testb push or add sub add add dec add popa add add insl je (bad) add mov add test mov add add add add add jecxz add stc add add adc pop add xor add push push add insl je add addb mov add (bad) into aad fldl add out add incb pop push and dec dec add gs add add xchg sahf movsl lods mov mov fsubp in repz add add adc and add cmp add add jnp mov add add lds add add fiadd add out idiv add adc sbb sub ss add add add js xchg add fwait mov add jecxz add cmc add add and xor add add add add add jns xchg fwait mov mov add mov add in in add cld add add adc sbb cmp add add pop bound imul add add test mov int add add out add add incl or add add add push push pop gs add jbe test test add add add in repz add movhps and cmp dec push pop popa outsl add jp add fwait mov add add add rcr add add add add add add or push sbb add dec push pop add jbe add popf movsl add lret add call clc incl or push sbb cmp dec push add add add add (bad) mov add mov iret add fild out add add push or add add ss push pop add gs add orl add add les int add add loopne call arpl js xchg add ret lret fild out cmc cld add push push adc sub cmp add push pop add arpl add orl ljmp or adc add xor add add push pop arpl insb jae jl test add add add jae addl add add add add scas add mov add add jmp add clc add or push push add add add out add daa xor add jbe mov add add aad or add add sti das cmp jb add adc sbb add add adc ja subl add xor ds add add pop gs jae orl mov mov fsub add repnz add or sbb and add xor add add pop pusha outsb jne jge xchg lahf cmpsb lods add add aad add jmp stc add add add sub cmp add add add pop add imul add test add mov add fiadd add add repnz add add add sbb and sub add add dec push pop imul jp mov lods mov mov movl loope add add add cld add push add adc add add das ss add add push pop imul xchg nop ret add add cmp add push add add pop insw je (bad) add add stos add mov add mov add add add lock add add add sbb add sub dec add push pop arpl add add jno add add add add add add mov fnclex jmp add add or sbb daa add cmp inc add push push pop add outsb jne orl add add mov fldl in hlt sti add add add sbb add sub add add add pop add add add add add stos mov ret rcr loop ljmp adc add es aas inc dec push pop add jno jp mov add add cmpsl scas add mov lret add in repnz add add add sbb daa add add cmp add inc add add pop add outsl jbe jg add add movsb stos add mov add int3 roll add in add add add add add add adc add add add add inc dec push pop pusha outsb jne add cwtl lahf cmpsb lods mov add (bad) add fsub ljmp adc push add add add add add push pop add add jns add mov add add add add xlat fsubp add out idiv add pop push add sbb cmp add add add add ja add add add mov add add add jmp add add add and add ss push pop arpl add add add add mov add movb rolb fadds loopne jmp add add add and add add cmp add add pop popa push mov xchg fwait add add ret lret fiaddl add jmp stc add add or adc add sub add cmp add push pop add add jnp add add mov mov lret add add add add add repz add or adc sbb sub add add xor push add pop arpl add test test add add add aam faddl in add cmc add incl add add add pop es inc add push push add push add lods mov ret add rcr loopne out add clc add add or sbb add and xor cmp push push pop add outsb add jg xchg nop xchg sahf movsl lods add int add fcomp add jmp add movhps cmp dec push pop add add add mov xchg pushf mov add aam loop jmp add testb add sbb add cmp add push pop pusha outsb jne add xchg lahf add add stos add mov add int3 add add jecxz add out add clc add or push sbb add push add jno add add add mov add add lods add mov add enter fcomp out hlt add add add add add sbb and das ss pop add imul add stos add mov add rol (bad) add add call add add add add add push pop popa push add (bad) mov add xchg pushf add movsl lods add rcr loopne out add std add adc add add sub add inc dec add pusha add jo jns orl add add rcr add repnz add add or sbb daa add add add cmp dec add add jo jle mov stos add mov mov aam jecxz add add add sbb add add xor pop pop add jne orl mov add add jecxz icebp clc add or add sbb add add add inc add dec add add add add (bad) mov add add add fadds add add add stc add add adc sbb and xor add inc dec dec add pop pop add imul add add add add add add add add add fcomp out hlt sti add or add push add and add inc dec push pop add jno add add add add ret rolb (bad) call or sbb add add sub xor add inc dec push pop popa add add add js add addl add cmpsb lods mov ret xlat add out hlt sti add or add add add xor inc add add bound add xchg add add mov add add add (bad) add add add jmp stc add push add add xor inc add pop add add jo add addl add lods add mov mov xlat add out add idiv add add add sbb add sub xor add inc add add add push add add mov lds add (bad) fldl add out cmc cld add or sbb daa add add add add add arpl jae add add mov rolb fchs add out add add cld add add add add pop add sub ss pusha add add jns add add iret (bad) add add call add sub add add ds add add add pusha add push jae jg lea lods mov ret roll fiaddl add in in hlt add incb push add push add add add sub add ds add dec push add insb add jne addl add add add add add add add add add cmp dec push pop add add add add cmpsb add mov mov aad jecxz in repz add sldt add add add ds dec add loopne add idiv add add add adc and sub add aas add add pop add add jae add test lods add enter add loope or add aaa add add pop pusha add jge mov xchg add add mov mov add ret add int aad add add call push add sldt sbb add add cmp push push add pusha add jno add add add add add fsub ljmp add or push add add sub xor add add add add imul add nop add cltd add add (bad) into add fsubp in repz add or add adc add pop add add sub xor cmp pop add jo add xchg add add add cmpsl scas add mov aad add out hlt add add add push add sbb es dec add add arpl add jbe orl scas mov mov rolb fcomp out hlt sti add or add sbb xor add add push pop pusha add jge xchg add add roll add fildl jecxz add hlt sti add or add and add add add add push push pop add add jle add mov xchg cwtl add mov mov mov add fldl in add testb add add add and add push add pop imul jp add add add add add add lret add (bad) add icebp add add add or adc add add add sub add cmp dec push pop add bound add add test mov add add add fchs out add repnz add push adc add xor cmp add add bound ja add cltd mov mov add add add into aad loop jmp stc add or pop add add add cmp add pop data16 jo add jg lea xchg pushf mov add add aam add in repz add or sbb add das add inc inc dec add pop data16 add add add add lret rcr add call add add add add sbb xor push pop pusha outsb add jle mov stos mov mov xlat fiadd out out idiv add adc sbb sub xor aas add push push pop add outsb jne jge add add add lret add add fsubp jmp hlt sti add add or add xor cmp inc dec add add add outsl ja addb mov mov add fcomp add jmp testb add or add sub xor ds dec push pop popa add jb jp (bad) add add add add fsub ljmp adc sub inc add push pop add jnp mov add ror add fiadd out add add add add or adc sbb add add inc dec dec push pop add jne orl test add iret (bad) add add out cmc sti and add test add cmpsb lods mov add fildl jecxz add add add incl or add sub inc dec add add jae add fwait mov add mov iret (bad) add add out cmc cld add or sbb add add sub dec push add add pop gs jae add add sahf movsl lods mov mov add add add add out idiv add or add add add add insw add jbe jg xchg nop xchg sahf add lldt push and cmp add imul jnp orl test rolb rolb add fninit ljmp adc sbb daa add add inc dec add add add lcall (bad) int aad add loope out add stc add add push add add add add cmp add pop add imul mov xchg cwtl add add movl add add add xor add push pop add add add addb (bad) xchg add add add enter add fnclex jmp add add add adc sbb add add add add dec add pop popa push orl movsl lods mov add add (bad) add add add lock cli add add add add pop push add cs add dec push pop imul add add flds loope out idiv add or and add add imul xchg nop xchg sahf movsl lods mov mov add add add in repz std add add sbb and add add add aas inc dec push pop bound add orl mov mov add add call add add cld or adc sub add outsb add add jnp add mov xchg add sahf add add add leave rolb fchs out cmc cld add add add add add add inc dec push pop add outsb jne add lea mov rcl add add call add push add push add sub inc dec add add jae add add add add xlat add out cmc cld add or adc sbb sub add add push add add jge test mov add add add add ljmp add add xor cmp add dec push pop add jns addl mov add rcr add add out add add add or adc add add add inc dec push add insw add add add add add movsl lods mov add les add aam add in in cmc add add add add add add add xor aas add push pop add insw je (bad) add popf add cmpsb lods add mov rolb add xlat fiadd add out add std add add adc sub add dec push add insb add mov fwait add add loop ljmp adc sbb and das ss pop popa add jb add sahf movsl lods mov mov into aad add out add cld add add add add sub dec push add bound jb add add add roll flds add add add cmc cld add or add cmp inc add add add arpl add add jle mov add mov (bad) add add add add add add or sbb and aaa aas add dec push add add add add add add add add mov mov add add add out add testl adc push and inc dec add pop add add add orl test (bad) int add jecxz icebp clc incl add push sbb and aaa add inc dec push pop bound jb add jge mov add xchg popf add cmpsl add (bad) into add fsubp add hlt sti add adc sbb add das add add inc add add insl je (bad) mov xchg cwtl lahf add test mov and add xor cmp dec push pop pop insw add ja add (bad) mov mov (bad) int fnclex add in repz add or sbb sub add dec add popa push xchg add mov (bad) add loop lock add add adc pop es dec push add pop bound imul xchg add add add leave rcl add add jmp add add adc add sub add add add push add popa add add outsb jne jge add add mov add in repz add add sbb and add xor add add pop pop insw add ja add xchg add add mov add ror add loope testb add push add sbb add cs push pop add add add jge mov add mov add fcomp add out testb incl or push sbb inc add push pop add add jbe add add add lret rcr loopne out add clc incl or sub cmp add dec add pop popa push add lahf add mov lret add out add incb and xor cmp add add add pusha add xchg add add int fnclex add repnz add add add push and add add inc dec push add add pop gs jae add add cltd add mov add aam add jmp stc add add adc add and sub cmp add push pop add add add jg mov add mov add fchs add out testb add or push sbb inc add push pop add add ja add add add lret rcr (bad) in add idiv add xor add inc add dec add imul xchg popl add add mov add add add add fucom in repz add add pop push and add add dec push add pop insw je add add (bad) int fnclex jmp push or add cmp add add dec dec push pop imul add js xchg add xchg add add scas mov mov add add add add repnz add add adc add and add cmp inc add pop arpl add outsb add js xchg mov add mov movb add fchs out cmc cld add or adc and xor ds dec add push pop add jl mov add xchg pushf mov rol aad jecxz icebp clc incl add movhps inc add dec add push add imul mov add movsb stos add add add (bad) add in repz add add add push and inc add add push pop add outsb jne addl xchg cltd mov mov aad jecxz icebp clc add or push sbb xor inc add add add jne orl sahf movsl add add into add fiadd out add movsl add add mov in sub add cmp pop bound push jns add add scas add add rcr add in add testl adc and xor add dec add arpl jns add add add iret (bad) fucom jmp hlt sti add add sub xor push pop arpl add jnp add mov les int3 add add fchs add add add add add or adc cmp add pusha outsb jne jle add mov mov add add xlat add add add add sti add or sbb add and add add cmp push add insb jb add jle add add scas mov (bad) lret rcr loopne jmp add add pop push es inc add add imul add xchg lods mov mov fild call add or add sbb sub add cmp inc add pop arpl imul add add add add xchg lcall mov add jecxz add cli add or add and add add inc add add push pop add add add add add add enter add add lock add add add lldt add add add sub xor add push pop add jbe jle xchg add xchg lcall add (bad) add fcomp add add testb pop push adc add sub cmp add push pop pusha outsb jne addl add xchg add mov mov mov fiaddl jecxz add cli add add add sbb sub cmp add add outsl jbe test lea add add mov add repnz add add adc add add add add aaa add add add pop add add orl mov add (bad) add out add idiv add add add add daa add ss dec push pop add outsb jne add xchg sahf movsl add add add rolb add add add add add add add add add add pop add add add xor add cmp inc add popa add imul add lcall add add add aam loop jmp add add add or sbb and add xor add push pop fs jg mov mov mov add fcomp out add std add sub xor add inc add add add addb mov xchg add add add rcr add add jmp add add add or pop push and inc dec add bound imul add jg add nop cwtl lahf cmpsb add mov mov rcr loope add add sti add add adc and sub xor add inc dec add add add gs add add add add add add ret add add add add add add add std add add inc dec add pop add jne add add add add add jecxz add add cld add adc sbb add add add cmp inc dec push pop pop add outsl jbe add add roll roll add fsub ljmp adc sbb daa cs add push add popa add dec add add add imul add mov mov (bad) lret rcr loopne call push add add add add jno jg add nop add mov mov add add loope add icebp add add add or add add xor add add add pop add add add jb add add mov add add fsub add repnz add add ltr pop es dec add add add pusha add js add mov add add add aam faddl in add sti add ltr add daa add xor aas push pop popa push test add mov add rcr add jmp or sbb add add add add push pop pop data16 jl add lea mov ror add fcomp add jmp add or add and sub add pop add jae addl add add movsl lods add add rolb fadds loope out idiv add adc sbb and xor add add dec push add add imul (bad) xchg popf movsb stos add lret rolb fiaddl jmp add adc sbb add xor cmp inc dec push pop bound add add test mov xchg fwait add movsl lods add add add jecxz icebp add add std add or sub cmp inc inc dec add imul jnp mov add movsb stos add into add xlat fiadd out cmc cld add adc push and add add push pop arpl jb addb cmpsb add scas mov (bad) lret rolb add jecxz add hlt sti add add or sub cmp add push push add push mov test mov add (bad) into aad fldl out add idiv add add add or add add sub xor add inc add dec push add add outsb add jg mov add xchg lcall add ret add aam add add hlt add add adc add sbb add sub add inc add dec push pop popa add ja jg add fwait add movsl add lret add fiaddl loop add add add add add add sbb add add pop gs je jl add add cmpsb lods mov ret int3 add add add in repz add add add adc add add sub aas inc add push push pop gs jae add lahf add add ret int3 rcr loope jmp add add or add push add sub inc dec push add arpl add jnp add add add add add test mov add roll lret rolb add fldl in add add add sbb add cs inc add add add push add xchg add mov add leave rcl fiadd add out cmc add add pop add adc sbb add add xor inc add push pop add add js xchg mov add add add loop ljmp push add and add add inc dec add push add pusha add jno jp mov nop add movsl lods add add add rolb (bad) call or adc add sub add add inc dec add add bound ja add cltd add mov rcr add out add add add or pop add add add inc add add dec add add arpl add outsb add ja add lahf cmpsb lods add add iret (bad) fldl add out cmc add incl add add sbb cmp add inc add add add add jle xchg add add add leave add add loopne jmp add add add add and xor add cmp push push add add jge mov movsb stos add rolb add add in in add add add add add add add xor add cmp add push add insb jae orl add add fldl add out cmc sti add add sbb add cmp push pop add add addl lea add movb add roll fildl add out add repnz dec push add add ja test add add xchg add rol add fsubp add hlt sti add or add add add aaa add add add pop add bound jb jp mov add add add fnclex jmp push or and cmp add bound add outsb jne addl add stos mov rol add fadds loopne call add add add add add and aaa add dec dec add pusha outsb jne orl scas mov add add into aad fsubp add out cmc cld add add and add inc add dec add add outsl add addb mov add movsl lods mov add add add (bad) add add add add add add incb sbb add inc add push add outsb jne jge mov xchg lcall add add lret add add fsubp add add icebp add add add add adc add add cmp add add dec add add add ja xchg mov add mov fcomp out hlt add incb add or pop push add add xor ds dec push pop popa push add cltd mov add lret add add fsubp add out cmc add add add add push and dec add pop gs jae jl add mov rolb lret add out out cmc cld add add sbb add sub cmp inc add dec push pop add add add jne (bad) mov test add ret add add aad add in add add add add sldt sbb and das ss add imul add add xchg add add add mov add add fsub add add cli add add add add add add sub xor aas inc dec add imul je (bad) mov add cltd mov add lds add rcr (bad) add add clc incl or das add cmp dec add pop pusha addr16 add addl lea mov mov rcr loope add add out add stc add add add or adc add and add sub add add inc inc dec push pop arpl imul add jg lea mov rolb rcl fiadd add out cmc cld add add add sub inc dec add arpl js add mov add movsb stos mov rol iret add add add add add add add add add or sbb daa cs push pop pusha add add add mov add add in add idiv add add or add add add inc add add add arpl jo add add test mov mov mov add add out hlt add add add add adc add and xor cmp inc add push push pop add add add jbe add add add add add add mov (bad) lret rcr loopne call add add adc pop add sub ss pop add imul xchg add xchg add pushf mov add leave add fcomp out hlt sti add add add add add and das ss add add pop add add outsb add add add mov rolb add rcr loopne call add push adc add add add jo js addb add lea add mov add add iret (bad) fucom jmp stc add add adc add and add add add add add push add insb add add xchg add add stos add lret rcr add add add add lock add add add or add sbb add and add xor pop add imul ja test stos mov mov fldl in repz add add add add add and cmp add jae add add mov rcr add add in add add repnz add add sbb sub aaa add add add fwait mov mov fadds loopne out add add add unpckhps and add add push push add add add je add xchg add add mov rcr loope jmp add add or adc add add add xor add push add pop add add add jle mov add add add add add add add faddl add add add add or add pop add add add add cmp dec push pop add outsl jbe add stos add lds add rolb fadds add add add sti add or add and das add aas inc add add add push pop add outsb add add lahf add add add lret rcr loope out add add add adc add add dec push add add add (bad) mov lods mov mov lret add fucom add out add stc add add or adc and sub cmp add dec push add insb jae add aam add out cmc add add add adc and sub add add cmp add dec push pop insb jne orl scas mov add xlat fiadd out out cmc cld add and add xor add dec add popa push addb add add add add aam loop lock add add adc push add add ss add add jnp mov jl add lahf cmpsb lods add mov lds into aad fucom add add add add sbb sub add cmp dec add add add add add mov mov rcr add out lock add or add push and add inc add dec add add add add jle add movsl lods mov add add add add add add hlt sti add add add pop es inc dec push add jno jg add mov mov (bad) add in repz std add or adc xor cmp dec push add add add add js addb mov mov add add aad fiadd out hlt add add or sbb add xor add dec add push pop pusha add add add add mov sahf add mov loop ljmp or add push sbb add cmp inc dec push add add push js orl add lds add add fadds loope add add hlt sti add adc add and das add inc add add pop add add js addb nop add stos add mov mov iret add fsubp add add idiv add add add add adc and add cmp inc dec add add add pop add outsb jne addl add add add int3 add (bad) fucom add repz add adc sbb es add add dec push add imul addl add add add rcl fiadd out add cld add add or add add sbb and cmp dec push pop pop add add jae orl mov add (bad) into add add loopne call push or add add sub add add add dec add push add add add jns xchg cmpsb lods mov mov add out out cmc add incl add or add add add add add add aas add add pop pusha add jno jg add stos add add add add fiadd out add testl add add add and add dec add push pop bound imul orl add scas add ret rcr add jmp push add adc add add add cmp add pop add gs jae add jle xchg movsl lods mov roll add add fnclex jmp sti add adc push add cs inc add push pop gs jl mov xchg add sahf add mov add roll fnclex add add cli add or pop push add add add inc add add pop add add js add orl mov add ret lret fild add lock add add add and add sub add ss add pop add push add add pushf add movsl add add rcr add ljmp sldt add add add add cmp inc dec push add add jbe add add add mov mov roll add in add add add add cmp dec add add add jno jg add lods mov mov add fildl in in repz add movhps push add sub xor add add add pop add add insw je add mov add int3 add fildl jecxz add hlt sti add add adc add add add cmp dec add add add add add ja add add test mov add ror rolb flds loope out add add add push adc sub add inc add dec add imul add mov add add movl add add add hlt sti add or adc add add aaa add add add dec push pop add jno add mov add xchg add sahf add test mov (bad) lret add add add loopne out cmc cld add push or xor cmp inc add add pusha add ja test add mov add add add loop lock adc cmp inc dec add add add jo jle add (bad) xchg add mov add add add add fiaddl add in repz add add push add sbb add cmp add out add std add add adc add add sub dec add add add add add mov xchg add mov ret lret add add add add adc sbb and xor cmp add pop add outsb jne jle mov xchg fwait mov add add xlat fsubp add hlt add add or add add and cs dec push pop popa add add add add mov xlat add loope jmp add add add and add aaa ds add add push pop add arpl add jnp addl xchg add pushf add cmpsb lods add fadds loope jmp add add sub xor aas inc add push push pop gs add xchg add add mov add roll rcr add call add add add add ss add push pop add outsb jne addl add add roll fiaddl loop jmp stc add or adc push and inc dec push add bound jb jp mov lods add add iret (bad) fldl add add testl add push and inc add push pop add add add addl xchg add mov rolb add add add in hlt add add adc and orl jae (bad) mov add movsl lods mov ret int3 rcr loope out idiv add add adc sub dec push pop popa push add lods mov add rcl fsubp in repz add or sbb es inc inc dec push pop arpl insb jae addl xchg add rcl fild add ljmp or add add sbb cmp add pop add jo add add add add add xlat fsubp add add add cli add or sbb add das ss push pop arpl add add add (bad) mov popf movsb lods mov add add add add jmp add add add movhps pop es dec push add pop arpl insb jae jnp mov add ret lret add loop lock add add add cmp pop jg (bad) xchg popf movsb stos mov add fiaddl jecxz add add cld add adc sbb daa cs pop pop add imul xchg fwait mov mov rcr loopne out testb add add or add add add cmp add add push pop arpl add xchg stos add mov add xlat fsubp in repz add movhps push and cmp pusha add ja test lea add add add mov mov add xlat fsubp in add testb or add add xor cmp add pop add jne add xchg movsb add lret fild add ljmp adc add add sub xor inc add add add jo add (bad) mov mov add (bad) lret rolb fiaddl jecxz jmp add add add adc add sub aaa ds dec push pop popa push jg mov mov add ret add add fnclex jmp push add add adc add add add inc add dec push pop imul orl add adc add and sub add cmp add pop popa push xchg movsl add lret rcr loope add testl add add sbb sub cmp add add data16 add add jge add stos add roll fildl in repnz add add adc add add xor inc add push pop add add add jne add sahf add add (bad) into aad jecxz icebp add add add adc and cs dec push pop add jns add test test (bad) into aad in add hlt cld add adc pop es add dec add pusha outsb jne add cwtl add add add mov in add add add add add push add sbb add add add xor add add add push add add add insl je add fwait mov mov add xlat fsubp in add add add add movhps xor add pop bound imul je jge test mov mov rcr add add lock cli add add pop push adc cmp inc dec dec push pop add jl add stos mov add mov add fucom add add add add or add adc and add add xor push add add add lahf cmpsb add add add int3 add faddl in in add add stc add add or sbb add sub cmp inc add push pop popa push add ja addb add add xchg add add mov lret roll add add add add add cli add or sbb add sub add add add add pop gs jae add jle add add scas mov ret lret add loop add add cld add or xor add add add add outsl jbe add lea mov fucom jmp repz add or adc cmp inc dec add push add add jl test lea add add cmpsb lods add mov rol add xlat (bad) in hlt sti add or adc and sub add cmp add add pop add add mov xchg fwait mov mov ret lret aam loop ljmp or add add add add add add add cmp inc inc add push add pop bound add insl add add mov mov rcr loopne add icebp add add or adc and add add add cmp dec push pop add bound push add mov xchg add lcall add add rcr fild out lock add add add add add das ss dec add imul mov nop add lcall rol iret xlat add loopne jmp add add add add add and xor add inc add add pop arpl jns xchg (bad) xchg add mov add add (bad) call add add pop add daa add cmp inc dec dec push add pusha outsb add jg add add add cmpsb add add les int3 roll add add out add add add or adc sbb and add sub dec push add add add xchg pushf add (bad) lret rolb add fiadd add jmp add add adc sbb sub xor add inc dec push add add imul addb add add rcl fiadd add ljmp adc sub add dec push add imul add mov add add add add add (bad) add add add add add adc sbb inc inc dec add add je jge add add cmpsl scas mov add movb add fiadd out cmc add incl add adc pop add add add add pusha add add add jl add add add add stos mov rolb fnclex add add add icebp add add movhps push and inc add push pop popa add add add add lods add int add loopne call push push add add and sub xor add dec push pop add jae add test test int3 add xlat add add jmp add or add and inc dec push add pop add ja jg mov cmpsl add add mov add add int add fiadd out out cmc std add adc and sub aaa ds dec add add add jl test add (bad) add loop add add cld add add add add add sub aaa add add add push pop bound add jbe add add add add ftst add add add testl and add push add insl je jge add lcall mov mov jecxz add cli add add add sbb sub aaa add inc dec add push pop add add imul add jge add mov xchg popf add add add lods mov ret add add fsub ljmp add add or add and sub xor inc inc add push add popa push addb add stos mov lret add add flds loope add repnz cld add add add push sbb add add dec push pop bound ja add (bad) mov lods mov add mov add add out add std add adc add sub aaa ds dec push pop popa add je add xchg add mov mov add add add add add add add repz add movhps add cmp dec add add popa ja jg add xchg cwtl lahf add rol add (bad) add repnz add add or adc add and add add cmp add add add pop arpl add add jle lea add cltd add add cmpsb add add add loopne out add testl push sbb xor add dec push pop outsl add add add jg xchg add add fcomp add add add cli dec jno orl mov mov (bad) fucom jmp add add add add ltr add daa add cmp pusha add push add (bad) add mov add add add add add add jecxz add out cmc cld add adc pop add add push pop add add dec push add data16 jne add popf scas mov mov xlat fiadd add add icebp add add add add and add add cmp dec add add imul add add add mov add fadds add jmp add add pop push add sub xor add add add add add insb add jne add addb mov mov ret add add add add in repz add add adc add and xor add inc dec dec push pop add add add jp add add lret rolb add jecxz jmp hlt add incb add add add add add add dec add add imul add lods mov add add int add in add cli add or add add add add cmp dec add add add add add add test add add movsb stos mov rol add fadds loopne add testl adc sbb add sub xor cmp dec add pop popa add imul jp add test mov lods mov add add roll lret rcr add add jmp repz add add add or add sbb sub add add add add add push pop pop insw je add mov xchg fwait mov rol aad cli add add add add adc sub add pusha add ja jg xchg add scas add add xlat add add jecxz in repz cld add adc pop add add add inc dec dec add add push add add cmpsl add int fnclex add add incb add or add sbb add add add add aas inc dec push pop bound add jnp orl mov add add add add cmc add incl pop push add add add sub add cmp add add add add insl add add mov add mov mov add add add lock incl add adc daa cs dec add add insl add add add xchg cwtl lahf add add add add add iret add fchs add out add add pop add add add push add es dec push add add jle add mov xchg add add scas add add add (bad) add add clc incl or sbb and sub add inc dec push push add insl je add jle mov mov mov add add loopne out add add add add push sub ss add pop add outsl jbe test add mov roll fiaddl loop lock add and xor aas add add add outsl add xchg lahf add lds int add fiadd out cmc add incb or pop es add add dec push pop pop add add add add nop add lcall add enter add add add out cmc std add and add cmp add push add add add add jb jp (bad) mov add add add sub cmp dec push push add popa push je add add add mov loopne add add repz add add add add adc sbb add sub xor cmp add add (bad) add mov stos add mov ret add add add fildl add add add add cli add add add sldt add sbb sub cmp inc add add pop pusha push add add lods mov ret add aam loop add add add incb add xor inc inc dec pop outsb add js add xchg fwait mov rolb add add add add add add add add idiv add sub xor aas inc dec push add insw add add xchg add add rcr add in add add idiv add add adc add add add add add inc inc dec push pop arpl jo jle add mov add add add (bad) into aad add add add idiv add sbb add cmp inc add add add pop add add add insl add add xchg add xchg add add sahf movsl lods mov ret rolb add fucom jmp pop insw je add mov add add fldl add call cli add add adc add sub xor aas inc add dec push add add jno jg xchg add add add add roll add in repnz add push adc daa cs dec push add add addb add xchg cltd mov mov fildl add add out add add add add add adc sbb add add das ss add gs add test add add add rolb add add aad add add out add idiv add push adc sub add add cmp add add add push add add insb add add add movsb stos mov add add add add (bad) fucom jmp add cld add add adc and cmp inc dec add add add add add add add mov add (bad) int (bad) add add loop lock add or add add and das add add add add push pop popa push test add xchg cwtl lahf cmpsb add add iret (bad) add in add add incb pop push adc sbb add add add add add add jo add addl add (bad) xchg popf add mov aad add jmp add add add add add push add add add add inc add push add add add js xchg add add add add add fild call add add add or add add add add inc add push push pop gs jae add mov xchg lcall movb add add add add add jmp add add pop add es dec add add add outsb add add add add add fcomp out hlt sti add add add adc add xor push add imul add test mov mov lret rolb add fucom add out add clc add add add or sbb and xor add add add add add jl test add ret add lret add add add loopne add in repz add add or sbb add and add inc add add pop pusha add add (bad) add mov stos add mov rcr (bad) add lock add or add add add add dec add add add insw je jl add movsl lods add add add mov rcr add ljmp add add sbb add sub dec push add add push js add add lods mov mov add faddl in in hlt sti add insl add add mov cmpsl add mov add add fnclex jmp push add add push add sub add dec push add pop data16 jge test lea xchg add add add mov les int3 add (bad) fucom add add add incl add sldt add add sub add add inc add push pop add add add add mov add mov add xlat fiadd out add std add add add add add add add add cmp add add add add jbe add add add popf push aam push add cli push add add xor add dec push pop add jl test add add in add testb push add adc cmp inc dec push add pop add add add xchg cmpsb lods mov add add add aad fsubp in add add cli add adc add add add add cmp inc dec add add add jno jp (bad) mov scas mov add movl (bad) add add add add add add add or adc and sub add inc add add dec bound jo jg add mov lds add rcl add add out idiv add add adc push and cmp inc dec dec push pop add orl add mov rcr loopne out testb add add or add add and cmp add push push pop gs je jge mov add mov add lret aad jecxz icebp add sti add adc add jmp add cld add add adc add add sub add push add add add add addb add lea add add add stc add or add add sub add aaa add dec dec push pop add outsb jne add add add add add add add add add flds add add in repz add add add push sbb add cmp inc dec push pop bound add insl je jge test add add add rcl add out add testl adc add add add sub add inc add push pop add add add ja test mov mov fnclex add add add repnz add add add adc add add dec add add add jb add jge mov xchg fwait mov mov (bad) fucom jmp hlt sti add adc add and add sub cmp add dec push pop pusha outsb jne test add ret xlat fiadd out add add add and add mov add add add add add fadds add jecxz in repz add add push or sbb sub ss add push pop gs jae (bad) add add movsl lods mov add add int3 rcr jmp incb push or add cmp dec push pop arpl add jp add popf movsb stos mov add add add into aad add loopne out add add add add adc and sub dec push pop pusha add add add cltd mov mov (bad) add jecxz add repz add add adc sbb add add xor add add add imul orl add add test ror roll flds loop add in add add add sbb sub add add inc dec push add outsl add add mov xchg pushf mov rol add add (bad) add cmc cld add adc pop add add add inc add dec push pop add add outsb jne add addb (bad) xchg add mov add add fild add add repnz add or adc add add add add ds dec push add imul xchg fwait mov add mov mov add aam jecxz add hlt add std add add ltr pop add add add add add pop bound jno jg add nop xchg add mov add add add in hlt sti add add sbb xor inc inc dec push add pop add ja jg lea mov rcl fiadd out add idiv add add adc push and inc dec push pop pop add add test mov add ror rcr (bad) add hlt sti add add add add push and cmp dec push push add add imul orl add add add aad fucom add add cld add add add adc sbb daa cs push pop pusha add jle add add add xchg add add mov add add jmp cld add add add and add das ss pop add imul jl add test mov add add add rcr loopne out add idiv add sub xor add inc add pop add bound push js xchg stos mov mov add in add lock add and xor ds dec push pop add arpl js xchg (bad) xchg popf movsb stos add mov mov (bad) call add add or add add add sub add bound imul (bad) mov lods mov add add add fildl jecxz icebp clc incl or add sub xor ds dec add arpl add orl movsl add add enter add out add clc add add add adc sbb and sub add ss pop popa add imul add mov mov rolb add loope out testb incl or xor cmp add add pop add imul lea mov (bad) fldl in add add or sbb add das ss pusha outsb add js xchg mov add lret add fnclex jmp push add add adc add add cmp add dec push pop bound ja add test add add fucom jmp add add movhps add cmp pusha add jge mov xchg lcall add add faddl add add out testb add add add add sub add add push add bound ja add mov rol iret (bad) fucom add add add stc add add add sbb add add xor add add test add aad jecxz icebp clc add add adc sbb and xor add add push push pop add jne orl add mov (bad) fnclex jmp add add push and xor inc add add add add add ja jg add test add aam loop push (bad) or mov mov cmp add out sbb pop add ror roll fabs add lock add add add adc sub add cmp push push pop insw add add add fwait add add roll (bad) add add stc add or add add add inc add pop pop insw add add add test mov add movl loopne out add add add add adc add add add xor cmp inc add pop add je jl add add mov add rcl add out out add add add adc add add cs dec push add data16 jo jle add add add add add add into aad add loope jmp sti add add add and inc add add add add add jns add add stos add mov ret lret add jecxz icebp stc add lldt add and add add add add push pop add outsb jne jge add add rol aad fsubp add cmc cld add adc sbb add sub xor add inc dec push pop popa add push jae jnp test movsb add add mov iret (bad) add loopne add add cli add movhps add dec add add add add mov movsl add lret add aad add out add idiv add add and das add add add pop add add push add add xchg add xchg add mov roll add add add in repz std rcr add jecxz add add add or sbb add add add xor inc add add add jae addl add add add add ljmp add and add sub add add outsl jbe test lea add add int add add add add idiv add add add add add add add je add xchg mov add enter fiadd out add testl adc pop add das add add add pop add push jg add add rolb add add aad adc and add add add add dec add push pop add add add mov add add cltd add add int add jecxz add stc add add pop push and add add inc add push pop add add insl je jge test add mov mov aam loop lock add or add sbb daa add xor ds dec push add pop add add jbe add add cmpsb lods mov ret int3 add aad fiadd out out idiv add add sbb add add add cmp push pop arpl js popl cwtl lahf cmpsb lods mov add add into aad fucom add out cmc cld add add adc sub inc add dec add add outsb add jg add add add ret add iret add add add add add add idiv add or es add add inc dec push pop pop add jbe jle mov xchg fwait mov rol add rolb add fucom add add cld add push add adc add add das ss add pop add add test mov mov rcr loope out testb add add or sbb aaa ds dec push pop popa push addb add test (bad) into add add loopne add icebp clc add add add add and das aaa ds dec add arpl js addl lcall movb rolb fadds loope add idiv add add add add sub add dec push pop add add add ja xchg movsl lods mov add add rolb fiaddl add jmp hlt sti add add add add add sub xor ds dec add arpl add jp (bad) mov add mov lret flds add add in hlt add add add add sub add xor add push pop pop add ja add xchg lods mov ror add fiaddl add in repz add add sub aaa ds add dec push add add js xchg add add (bad) into add xlat fiadd out out idiv add add xor aas inc dec add add jnp add sahf movsl add (bad) add fldl add add idiv add sbb add aaa ds add add add push add data16 add jb jnp add mov add test mov add add add add add in add cli add add or pop add add add inc dec push pop add add add jg lea add scas mov add add rolb add add add in add sti add add add and sub add add push add add add je (bad) add test mov add add rcl add out add decb movhps add add add add inc inc add pop add add add add jb add addl xchg add pushf mov movb (bad) add out add cld add push add adc add and das add add dec push add pusha add jno jp mov cmpsl add ret add add add fild call add std add add and add add add inc add push add add insw jne jge mov add xchg sahf add add ror rcr (bad) add add add add add adc add and sub add inc inc add add add insb add jbe jle mov add sbb and inc add add pop arpl jb add movsl add add into add fucom add out add testl adc push add add add add inc dec add add add push add orl add rolb fildl add in add sti add add add sub xor push add pop add gs jae add add mov add into aad add add add lock add add add sldt sbb add das add add dec add add popa add js add mov cmpsl add enter add add add add cli add add or add push add and add inc dec push add add jbe add add add add in repz add add adc add sbb add cmp pop bound ja add cwtl add add add aam add add in add idiv add add adc cmp add push pop arpl jae add mov mov add roll add flds loope out add stc add add or sbb add add add add cmp add add outsb add add orl add add rcr loopne add add out add std add adc sbb sub xor aas add push pop add jge add mov add xchg fwait add add aad fsubp add repz add add or adc sbb add cmp add pop add outsb jne addl lea add int3 rcr add add in repz add adc push add sub add add dec add pop add outsl add add jl add add cmpsb add lret rcr loopne add idiv add adc sbb add add inc add pop pop add push addb nop xchg add mov mov roll lret add add add in repz add add or pop es add add push add popa add add add lcall add rcr add jmp pop add push sbb add add add dec add add push add add jo add add cmpsb add add add add add fucom jmp repz add add adc pop es dec push pop add bound add outsb je (bad) add add mov mov xlat fiadd out out add incb add xor cmp inc inc dec add pop pop add imul mov add lret (bad) add add clc incl or push add and cmp dec add data16 add add jl mov add add add iret (bad) fucom jmp stc add add or add sbb add add add cmp add add pop data16 add add orl scas mov mov fnclex jmp testb add or add add sbb and add xor add inc add push pop imul add add add test test add mov (bad) add fucom jmp add add movhps add xor add std add sbb add add add aas add dec add pop pusha outsb add add jnp add test movl add add add add testl add add adc add or add je lods mov add add push add add adc add sub add cmp push push pop add add add jne add mov (bad) int add fiadd out out add stc add add pop add add add add add dec push add add jno jg lea xchg add mov add fldl add out cmc add add pop push adc xor add inc dec add add push pop add add add jnp add lea cwtl add add movsl lods mov ror add fchs out add incb push or and add xor cmp inc dec add pop add add outsb add add add add test add add add iret (bad) fldl add jmp add add add sldt sbb daa cs add add add pop arpl js add mov scas mov ret add rcr loope ljmp add add or adc and sub add inc inc dec add add jne add lea xchg popf add add add add faddl add in hlt sti add adc sbb add sub cmp add add pop add jae jnp mov xchg add pushf add ret rolb fiaddl add add out add add add add add adc sbb sub add ds dec push add pop fs jae jnp add add mov aad fiadd add add icebp add add add or adc sub add add add bound add insl je jl add add add xchg add pushf movsb stos mov add add add add add add out cmc cld add add sub cmp add pop add add js add add popf movsb add in add cld add add add add sbb add sub xor add add add add outsb jne add lea add add add fucom jmp cli add add pop push add add xor cmp inc dec dec push pop gs add add xchg mov add add fsub add repnz add or adc sbb and add aaa add inc add add pop add imul add add add lods mov ret add (bad) add add add testb add sbb and das add add inc add add imul test add add movsb stos mov add ret lret fchs out lock add add add add xor cmp add add jl add add add roll rolb fildl add in repz add add push add pop push and add add push pop arpl add jbe test test add leave add add loope out idiv add or add add and cmp add add push pop add jae add mov mov add into add fadds add out add add dec pop add add outsb add test mov add ror (bad) fldl out hlt sti add add or add add add ds add add insb jae add mov xchg add mov add add jecxz add hlt add add add sbb sub cmp add push add insw add jle mov xchg pushf mov add add roll (bad) call add add add add and add xor inc add add add add add mov test mov add int3 add dec add push add imul orl add add add fnclex jmp pop push add add add add xor add add inc dec push pop add add outsb jne add add cmpsb add scas add add rcr fild call add or and aaa add inc dec add push add add insw je jl add add ret rcr add loop add clc add add adc push add add add add add push pop gs add add mov call add sbb add sub inc dec push pop add add jns add test lea mov rol rolb add fnclex jmp sti add adc sbb cmp inc add dec add pop imul xchg nop add lcall mov add add xlat fsubp in add cld add or sbb add add aaa add add add pusha add add jns add add mov lret add add ljmp add or add add add cmp dec add pop add outsb jne jge add add mov mov ror add fchs add out testb push add adc add add add add add inc add pop add je (bad) add mov add add rol aad fiadd add out testb add add adc add and das ss add push pop gs add add test mov add add lret add loope out idiv add or add add add add cmp add add imul mov add add roll add add daa xor aas inc dec push pop add imul add xchg cwtl lahf add add (bad) int fnclex add icebp clc incl or add sub add add push add add jp add xchg popf add mov fiaddl jecxz add add testb add add add sbb and sub cmp inc dec push pop add imul add add (bad) aad fucom jmp stc add or push add and cmp push pop arpl imul addl add mov lret rcr add add jmp add cld add add add add add add add dec add pop gs add addl xchg cltd add mov add fild add add add add add add add ss pop add imul add jg lea mov rcl fsubp add hlt add add add add and sub xor cmp add add insb jae add add stos mov mov add add jmp add add push add add sub aaa cmp push add insb jae jl test test mov mov (bad) add in add sti add adc sbb add and xor add dec add add add add add mov xchg fwait mov mov add aam fucom add repz add or add add sub xor cmp add push add imul jnp mov lods add add mov rcr add add in in hlt add incb add push add push and inc add push add add data16 jne orl add mov mov faddl in in add idiv add pop add ltr add daa add add push pop add gs add add mov add add rcl fiadd out out add incl add or sbb es add push pop add mov fsub ljmp add and xor add add add pop add bound add jns (bad) add mov mov add (bad) into aad fldl in add cld add add adc sub add dec push add popa add imul add jge add stos add add add (bad) fldl out repz add add push adc add das add cmp dec push add popa add add je jge test mov add ror rcl add out add repnz add add add add and xor cmp add add add pop add add mov add mov aad add add add cld add add movhps add add pop add imul add add mov rcr loope out testb add add adc add and das add cmp inc add dec push pop pusha add ja jg lea add add add jecxz in repz add adc sbb and add add add cmp push pop bound imul jp mov add add xchg cmpsl add add inc dec push pop add add outsb add add add mov add rcr add in repnz sti add or sbb xor add add add dec push add pusha add imul test add add add rcr add jecxz icebp add add add adc add sbb sub cmp add inc dec add popa push test mov ret add add (bad) add add call or dec add add pop popa add add add xchg add mov rolb iret xlat fsubp in add sti add add sbb add xor inc inc add pop imul jnp add mov stos add add add (bad) fucom add add add stc add or add add sbb add add add push pop add add jns addl movsl add add aad add out add les add loopne sti add or sbb sub ss add imul add popf add cmpsl add int3 rcr add add add add clc incl add or sbb and add add cmp dec push pop add orl stos mov add loopne out cmc cld add or sbb add sub cmp inc dec add add add add add rcr loope out testb add add adc add sbb add daa add cmp inc inc add pop add add imul add sahf movsl add lret rolb fnclex jmp push or add add inc add push pop add push add mov (bad) add add add idiv add adc sbb sub add cmp inc dec add push pop gs jae add lcall rol iret xlat fsubp in repz add add add and inc add add add imul add cmpsl scas mov ret add rcr loopne out add add add add push add and cmp inc add pop pop outsb add test add movsl lods mov add fiaddl jecxz add add add incl or add add xor dec push add pop add add mov xchg fwait mov add rcr add jmp pop add push sbb cmp add push add add add jne add xchg add add rcr add add add add add movhps cmp add pop add arpl js xchg mov lods mov mov fiadd add add add cli add or add add add add add push pop add imul add add add stos add add movl loopne add icebp add add add pop add add add xor add dec add add add add add mov xchg fwait mov mov add add jecxz icebp clc incl or add add xor cmp add dec push pop pop add jo add add add mov add out out cmc cld add adc sbb add sub xor add inc dec push pop pop add jno jnp addl xchg cltd add add add rolb add add jmp push add push sbb xor inc add add pop add data16 add jg xchg add add add lret rcr add loop lock add add or sbb add add add add add cmp add add dec push add pop add push jp addl mov xchg add scas mov mov add fild add ljmp add sbb daa add add add cmp push push add popa push mov movsb add scas add enter add add cmc add pusha add jb jnp mov mov mov fsubp in repz add add add xor add add inc add push add insb add jge add add pushf mov add aam loop lock incl or push add add sub add add dec dec push pop add push jg mov add test ret add add add ljmp add or add add xor cmp add add add add pop add add jnp addl add mov mov (bad) add loopne add add incl pop push push sbb add xor inc add add add imul add test lea add int3 add faddl add add add add add add es dec add pusha outsb jne jle add add mov roll flds loop lock add add add or pop add xor add add push push pop gs jae jl add add stos mov mov rcr loopne add add add add or sbb add add sub cmp add add ret rcr loopne out hlt sti add adc and add add cmp dec dec add pop pusha add add add add mov scas mov add movl add and add cs dec add imul add add add movsl add lret add add fldl add add add push add add push add add js add add add ret mov add sub cmp dec add add imul add add add mov add fiaddl add jmp stc add add add sbb add sub add add add add add add imul jnp add add lcall lret fiaddl add in in hlt sti add adc add and add xor inc inc add push pop pop insw je add jg add mov test add into aad add out add add add or unpckhps push and add add add add dec add add add ja test movsl lods mov add add rcr add jmp push add add sbb es dec add popa add add insl je add jg add nop add lcall scas mov ret rcr jecxz add add cld add add and add add dec push add add add addb nop add add add mov add add add loopne out add add add or add add add and add xor push add add add add imul xchg cmpsb add roll fchs add add add add add add or adc sbb sub xor add dec push add imul add test stos mov mov add add lret add add fadds loopne add icebp clc incl or add add xor add pop add add repnz add add or adc sbb sub cmp inc add add popa push jg add xchg popf movsb stos add rcl fiadd out out testb add add add sub add dec add pusha add add add jbe add add add test add add int3 add aad add add add idiv add add adc sbb add sub xor add dec add add push add pop add jbe add xchg stos add add add add add add add add cli add or add and sub aaa add pop add add add jnp add xchg lods add mov ret add add add add add loop lock add add sbb sub xor dec push pop bound add add xchg add mov fcomp add out add add push add adc add add sub cmp inc dec add arpl js addb cmpsb add mov mov aad fiadd out out cmc cld add add pop add add xor add add inc dec push add imul orl mov add ret add add iret (bad) add das add add add add push add insb jae add mov xchg add add add add leave add add add add out out testb add add adc add sbb and add cmp add inc dec push add add jne addl add add lds add add add (bad) call add push adc pop push add add cmp inc dec push add imul jne add add mov add add add add add rcr jecxz icebp add add incb pop add add and sub add cmp push pop add outsb add jg lea add mov add (bad) into aad add add add add add add add testl adc add and add add ss add add insl je (bad) mov movsb stos mov add leave out testb add or pop push add add xor cmp dec push pop add jae orl add lret rcr loopne out add add add add add add add add cs pop popa add js xchg add xchg add lahf cmpsb add (bad) into add add loopne out idiv add sbb add add add ds add dec add add add add mov add mov lret fiaddl add add add cld add add adc sub inc dec push add pop add ja add cmpsb lods mov mov loopne jmp add movhps pop es aas add push push pop insw jne add sahf add test mov add add lret fchs call add push adc sub add dec add add push pop add jae orl add add fchs out add add pop push adc add and add add dec dec push pop add add jno js add test mov add mov xlat fiadd out cmc cld add push and sub add inc dec push pop pop add add add mov test int aad add out out add add pop push adc cmp dec add gs add add xchg lahf cmpsb lods mov ret lret fchs out testb add or push sbb cmp dec add add pop add jne orl add mov add fchs out out idiv add or sub add add add push add pop add add imul orl add jecxz icebp clc add push add push and add inc dec push add add add arpl imul add add add add add add roll fiaddl add add add add incb and add cmp add add imul add add stos mov add ret add roll fninit ljmp add sbb add sub cmp push push pop add outsl jbe add sahf add add add aad jecxz icebp clc add push adc cs outsb jne addl lea xchg add ret roll add add in add icebp clc add add or add sbb sub cmp inc add pop imul addl xchg add mov ret lret loopne out add std add sbb add push push pop add add jg add add add add add mov rol add add fnclex add add add std add add add sub add cmp dec add pop pop data16 jo add sahf movsl lods mov add mov (bad) fldl dec push add pusha add jbe jle add stos mov mov rcr loopne out cmc add incl or sub cmp add inc dec push pop pusha add jbe add movb rcl fsubp in repz add add adc add add sub cmp dec push add add add add add test mov add mov ret lret (bad) call add add and cmp push pop bound add xchg add lods mov add lret rcr add call incl add add sbb sub add add cmp dec add add add pusha add add add stos add mov mov fildl add jmp add add add or sbb xor add add inc dec push pop popa add add outsb je add add xchg add mov mov add add add hlt sti add add sbb add sub add inc add add add add add add add jno add (bad) add add cltd mov ret add add add fsubp in repz add add or sbb add xor add add push pop add add add mov xchg cwtl add ret lret fild add add repnz add add adc and add add add add add add push add add add jns xchg lods mov leave roll flds add ljmp or add add and xor inc add push add pusha add add jae add add add mov fldl add add icebp clc add add add add ltr pop add sub xor cmp dec add pop add imul mov add mov mov add add (bad) add add add in in hlt add incb add or add add sbb inc add add push pop popa push add mov lods mov add add int fnclex add add add idiv add sbb sub cmp dec push fs jae jl mov add add iret (bad) fucom add hlt cli add add add and add add add cmp add add pusha outsb jne add add fwait add add mov rcr add out cmc add add adc add add xor cmp push push pop add add add jae addb cmpsb lods mov ret roll add loop ljmp or sbb es dec push pop pusha add add jns add add scas mov add lret sarb lcall mov fcomp out hlt add incb push add push sbb add add dec push pop add add add jbe jg lea xchg popf movsb add rcr add add out add stc add add add add pop add es add push pop add arpl insb jae orl add add add add add icebp clc add add add adc add and add xor add add add arpl add outsb jne add xchg cmpsb lods add mov aad add in repz add add sbb das add add add push add add add test lods mov ret fadds add jmp add movhps add and xor add push pop imul xchg cmpsb lods mov ret lret add add in out add incb add add add inc dec add add add push addb mov mov fiadd out add repnz cld add push or sub cmp push add data16 jo jle mov mov rolb rolb fcomp out add add cmc cld add add and cs add add add fs add jge xchg add xchg cwtl lahf add add iret (bad) add loope add clc incl add push sbb das add cmp add add imul jnp add pushf add add loope add cli add sldt sbb daa cs inc dec push add add outsl ja add sahf cmpsb lods add aam loop icebp clc incl add adc add add add xor inc inc dec push add add add add add xchg nop xchg add mov add jmp stc add add add sbb add xor add inc dec add pop popa push xchg movsl add add aam loop jmp add add or add add push and add add push add add add orl add add add add hlt sti add add sub add ds dec add arpl add jnp add xchg cmpsb add mov add add fnclex jmp pop add add sbb and das aaa add dec push push pop add jge add add add into aad add in add sti add adc pop es add dec add pop popa push add fwait movsb add add leave add add loope lock push xchg add rolb add fchs add out testb push or and xor inc add push add insl add jge mov add mov mov add add fsubp in repz add add and add add cmp dec push add add jb add mov xchg popf add mov add jecxz icebp add sti add or add add add add add cmp add add pop bound ja test movsl add xlat fsubp add out cmc cld add add add cmp inc dec push add pop add outsl jbe add add rcr add in add add add push adc add add add add add add jl xchg mov add add rcl fiadd out lock add push adc add add dec push push pop add jne jge mov xchg add mov add loopne jmp cmc cld add adc add add xor add pop add jne jge add lahf add test movb add fiadd add add add add pop push adc daa cs add imul mov test mov add add lret add add ljmp add add adc daa add xor add cmp inc dec push pop pop insw je jl add imul add add xchg cmpsb lods add mov mov (bad) fucomp add cli add or sbb add sub add add add pop add add add je add add add add add lret add add add add add add push or pop add das add add add imul add add add mov mov add flds loope add add cli add or sbb and sub add cmp inc add push pop pusha add add addb cmpsb lods mov ror roll add loope ljmp add add push add add add add movsb stos add add into add add out hlt sti add add add pop add das xor dec dec add add push add sahf add mov rcl fiadd add add add add add adc add add pop es add add push add add add add add cwtl lahf cmpsb add add add add fnclex jmp add movhps cmp add inc add add add push add orl mov add les int3 add faddl in repnz add or adc and das cmp inc add dec push pop imul addl lcall rolb iret (bad) fucom jmp add add incl pop add add pop add add add add inc dec add add add outsb add jg mov add aad fldl add out add std add pop push adc add add cmp add pop add add jle add add mov add add faddl add add add add add add add add adc add daa add add aas inc add add add arpl add jnp mov xchg cwtl lahf add add add add add add add lock add or add add sbb add add cmp dec add add pop add jae jnp mov scas mov add add ljmp adc add sbb sub add add inc dec add pop insw je add add add add rolb add fucom add add testb add add add pop es add pop insw je jge add movsb add mov roll lret add add loop jmp stc add add add add push sbb xor inc dec push add add add jp mov cmpsl scas mov add lret add aad add jmp hlt add add add push add sbb and cs push add imul add add xchg add add mov mov add add fnclex add add stc add push add add sbb and sub add inc dec push push add insl je add mov mov mov add add loope out add add add add pop push and cmp push add gs jae addl add mov add xlat fsubp in repz and sub cmp inc dec add add insl je (bad) add add add add (bad) fucom jmp add add clc incl add adc push add add xor add add push pop pusha add jbe add add add add add add fiadd add jmp sti add adc add es add pop data16 add add jbe jle mov add add add add add add loop jmp add testl adc sbb es dec add push pop bound add xchg scas add add add fchs out cmc cld add adc add and add add add push push pop gs add add add roll add rcr loope out idiv add or sbb sub xor add inc dec dec push pop add jae add test add add aam loope add repz add add or sbb add and add jg add add add add add add out add repnz cld add adc and sub popl add mov ret lret (bad) in add add incl push add add and inc add pop add add jns xchg (bad) xchg popf add add mov int add call cli add add push or xor add inc dec dec add add add jb jp add mov xchg add mov add rcl add add add icebp clc add add adc add add push add sub add add add add inc add push add add add jae orl add lods mov ret add (bad) call add add incb and xor add add add push pop add insl je add mov mov add rcr loope jmp add add or add add sbb and add xor inc dec dec push pop imul add orb add stos add mov add add rcr loopne add add cli add add adc sbb sub add inc dec push add pop imul jnp mov test add mov ror add rcr loope jmp or add sbb add add inc dec add pop add add push add add add movsl lods mov ror (bad) add in repz add or add sbb and add xor inc dec add push add bound jno jg add fwait mov add int fildl add lock add add add sbb and add add add add add jae add add add cmpsb lods add out testb add and xor add cmp add inc dec add pop add outsl add jns add cmpsb lods add enter add out cmc cld add adc add and xor add inc dec dec push pop add outsb add add xchg mov mov add in in add add add add add add cmp add inc dec add push pop add jae orl lret rolb fildl add jmp hlt sti add or sbb add sub add xor add push add add add push jg lea xchg add mov add add (bad) add add idiv add add add add sub add inc add push pop add add outsb add test test mov mov faddl add add add add cli add add add sbb add sub add dec push pop arpl add add jno add jge add add add xlat fucom jmp hlt sti add adc add and add sub cmp add push pop arpl js xchg movsl add add int fnclex add repnz add add add adc sub inc dec push pop pusha outsb add test add lods mov mov fcomp out add add add add or sbb and add add das ss push add add je add add (bad) mov add mov (bad) lret add aad add fild out add clc add pop add add pop add add add xor cmp dec push pop add outsl add test lea add ror add add add hlt cld add or add sbb sub xor add add outsl add jns add add mov cmpsb add scas add mov add into aad jecxz icebp add add std add add add add add add cmp dec add insw add add jns add mov mov (bad) fldl add add jmp add add add add add or add sbb add xor cmp dec push pop arpl insb add add jg lea mov add (bad) lret rcr add loop lock add add sbb sub xor add add pop imul add add add test movb add add add add add add add incl add or sbb daa sub dec push pop pusha add add add mov add add in add idiv add add or add add add cmp inc add add dec push pop popa push add add add lods add add add (bad) in add add cli add add adc add sub add aas inc add push pop pop add add add add add add add add add mov mov loope add add add add adc and add cmp pop bound ja jg lea stos add add rcr loope ljmp add pusha add jb add mov cwtl add add add add add in add clc add adc and sub add cmp push add add outsb add mov xchg popf movsl add int faddl in testl add add and add xor add inc add dec add add add ror xlat add add in repz add add add or adc add add cmp dec push add pop add jae (bad) add mov stos add mov les add add add add add add add out out testl or add add pop es add add pop push mov add xchg sahf add lds add rcl (bad) in add add incl or push sbb cmp push pop bound ja add xchg add popf movsb lods ret iret add (bad) out cmc add add or add xor inc add add add push add data16 add jae orl add scas add add roll add fsub jmp repz add add pop push and add inc add pop arpl add add xchg add rcl fsubp in add idiv add sbb inc inc dec push add gs jae add fwait add add leave rcl add out hlt sti add or add cmp inc inc push popa add push add (bad) mov add (bad) into add fcomp out add add stc add or pop add es pop add jo add addl add cwtl mov mov add fildl add add idiv add add add add push add add add add je (bad) add add nop cltd mov add mov into add fldl out add repnz add add and add cmp add push pop add add jle mov add test mov les add aad jecxz add adc sbb add add cmp add push pop popa push mov xchg fwait mov mov add aad jecxz icebp add add cmovle gs xchg cmpsb lods mov add lret rcr loopne add add add add adc push and add cmp add add add ja jg add pushf movsl lods mov ror rcl fsubp in hlt add add add add daa cs pop pop insw add ja add xchg mov mov add add call add add add add add add add sub ss add add add imul add add mov ret int3 rcr add jecxz add cli add add pop push and add cmp dec push add pop add add test lea add mov add fnclex jmp pop push adc xor add push pop imul orl add lret (bad) in repz add add add adc sub dec add add add add jbe jg mov add scas mov (bad) lret add (bad) call add or add push add sub add add push pop bound jb addb mov scas add add loope ljmp add pop push adc add xor add add dec add add arpl jae add lahf add test rcl add loop lock cli add or pop push add sub add add push pop add add add test popf movsb stos mov rol rolb fadds loopne out cmc cld add add adc and xor cmp inc dec add add insw je jge mov mov ret int3 rcr loope out idiv add add and sub ss pop add add outsb add add (bad) add pushf mov (bad) int aad jecxz icebp clc add add or add and add xor add dec push push pop insl jbe jle mov add scas mov add (bad) int add jecxz jmp add add add pop push adc add xor push add pop add insw add jl test mov add mov fnclex add icebp clc add pop push add sbb cmp inc dec add push add add add ja add mov add scas mov (bad) lret rcr loopne call add or push sbb cmp add pop pusha add imul add scas mov mov add jecxz icebp clc decl add sbb add add add inc inc dec add add add add add add add leave rcl fiadd out out cmc cld add or add xor cmp dec add pop popa push xchg add add int fiaddl jecxz add stc add add add push adc add add dec push add add add add mov stos mov mov lds int fnclex jmp add movhps push and inc add add pop add add add jle add popl add (bad) add add add add idiv add add sbb add add add aaa add add push push pop insw je add mov add add aam loop ljmp add sbb add sub xor aas inc add push push pop add outsl add js xchg add add add add add mov mov add aad add add add clc add add add add add sub xor inc add add add add add jne add add ret lret aam fsub add repnz add add or add daa add aaa sbb add add add add push push pop add jne add add add lret add add ljmp adc add and add add add add add arpl add add add add add cmpsb add rcr fild call push add add sbb add add cmp inc dec add push add outsb add test add cmpsb lods add add add fucom jmp add add stc add push add add add and sub add add add add add add jb addb add movsb stos mov add rcr add add repnz add sldt add add add add add dec add pop add add jle add mov mov rol add add loopne add testb add add add add rdmsr inc dec push add pop add add jne add add movsb stos mov rolb lret flds loop ljmp add add add sbb xor add inc inc add pop pop insw je (bad) mov xchg cwtl lahf cmpsb lods mov mov add fucom add hlt sti add add add sbb add xor add inc add dec add arpl add jne jle add add add add add flds loope add add add repnz sti add or add add sub add add add add push pop arpl imul (bad) mov lods add add flds add in add add add add add add xor push add pop add insl je jl mov scas mov add add in repz add add or add push sbb add cmp pop popa push addb add test roll add int add add out add testl push sbb add dec push pop add jbe add mov mov rolb fnclex jmp add add sbb and aaa ds add add add push jb jnp mov cmpsl scas add aam add add repz add lldt push and add dec push pop add gs jae jnp add add add leave add add fnclex jmp sti add add add add add add add add pusha add add lea xchg pushf mov roll rolb fchs add jmp testb incb pop push add sbb add sub xor aas inc dec push pop bound add addb add mov mov add loop testl push and add xor dec push add gs jae jl add add roll rcr fild out add add add add add add sub inc dec push pop pusha outsb add jg lea mov mov fchs add add idiv add and add cmp dec add pop add push test mov add test int3 add add fsubp in add add incb add lldt push add add add inc add add add arpl jae add stos mov add add (bad) (bad) add lock incl or add sub add dec push pop add add insl add jle xchg movsl add add mov add add add fiadd out cmc cld add adc add daa add aaa add add push add pusha add push js add mov xchg add mov add add rcl fiadd add out cmc add add add adc push add add add sub add add dec add add arpl add add add mov add mov fadds add jecxz icebp add sti add or adc add sub inc add add add arpl add jnp orl test add add push addb add add add (bad) (bad) add icebp add add push adc add add inc add pop add data16 outsl add js addb nop xchg add add mov add add enter add loop ljmp sbb and add add rcl add out add std add add adc sub xor imul jne jle mov add add ror add add add in repnz add add or add add and add add add cmp dec push add popa push add js orl enter (bad) in hlt add incb push add add add add cmp inc add add pop add push addb add test roll rcr (bad) add cmc cld add add adc xor inc dec push pop add bound add insl jne addl add lods mov ror add fadds loope jmp add movhps add add add sub add add jne add addb mov mov faddl in add testb add and add xor add pop popa imul jge mov add add mov ret add add add fcomp add cmc add add add sbb add add add add inc dec add add imul add movsl lods add fild call add add add add sub add add add inc add push add pop bound add insl je addl add add mov (bad) into add fsubp in add idiv add and xor inc add dec add add fs add add test mov add ret rolb fiaddl jecxz icebp clc add push add push add add ss add add add pop add add mov add add add add add add add add fsub jmp stc add movhps pop add add add cmp push push add popa push addb cmpsl scas mov add add add add fildl jecxz in repz add or sbb daa add cmp add push add pop bound jb add add add add jecxz repnz add or sbb and add xor cmp add add add jnp mov xchg cltd mov add add mov rcr add loop add add add add add adc sub add add inc dec push add add add js add mov xchg add add add aad add out add std add add push sbb add sub add add inc add add pop add add add (bad) mov add add rcr loopne out add clc add add adc pop add xor aas inc dec push add add add imul add test add rcl add add add repnz add or add add add add add add add add add push pop insw je (bad) mov xchg add dec add outsl jbe test add mov fchs out add add add or add add daa add xor add add inc add push pop arpl insb jae (bad) add mov add ret rolb add add in repz add or add add sbb add add cmp add push pop pusha add add add add mov add add add rolb add loop jmp add add add add sldt sbb and xor add inc dec dec add add add add add add scas add aad fucom jmp add add add add add sbb add sub add aas add add pop add add jb add orl add enter add loope out idiv add add sbb add add xor cmp inc dec push pop pusha outsb add add cwtl add add add mov aad jecxz jmp stc add or adc add daa add stos mov add add add add add in add add add add push add add pusha add add insb jae add mov add fninit add add add add add add add sbb and sub add add add inc add push pop add outsb jne jge test mov add add mov mov add rolb fcomp out out add clc incl add or adc add add add cmp dec push push add popa push jp add mov add (bad) add jmp stc add push adc add add add dec push pop imul addl mov mov add add add into aad jecxz jmp stc add or push sbb add add add pop arpl (bad) mov add add loopne jmp add push adc xor inc add add add arpl imul add add mov add rolb add add add add add out cmc add add sbb and cmp push add insw je (bad) mov xchg add mov mov add in add sti add or adc add sub add aas inc dec push add add jne add lea xchg pushf add add add enter in add cmc add add and add add add add jge add lahf add add add add fsubp add hlt sti add add add adc sub cmp inc dec add push add pop arpl insb jae orl add mov mov fild out cmc cld add push or sub cmp add add add bound push jae jnp mov xchg cwtl add add xlat add out cmc add std add or add and xor add inc add pop add jns xchg popl cwtl add add (bad) fldl in add sti add add sbb add add add xor push add add add (bad) add add add leave rolb flds add in repnz add add adc sbb sub xor add add pop pusha add jge mov xchg add add mov mov add ret add int aad add add call push add adc sbb add das add add dec add add popa add jb add cltd add mov add mov add jecxz icebp add add add add or push add add sub xor add add add add icebp stc add push add add add add add add aaa ds dec push add add insb add mov add add add add lret add loop add stc add or pop add es add inc dec push add add add add add mov ret lret loopne jmp sti add add add and sub cmp inc dec push add add push jns orl add (bad) add mov fchs add daa add add add add add add add orl add add fsub add add lock add push adc add add add dec push pop add add add add mov add add add rcr loopne add icebp clc add add add add and add add add cmp inc add add pop add add je add add add movsb add add (bad) fldl out hlt add incb or add and add xor add add add jne test add mov ret add aam add add add repz add adc sbb and add cmp inc add add pop add add outsb jne test test add flds loop add stc add add adc and add add cmp inc dec push add add add add add add mov ret rcr add jecxz add add add add sub add add cmp add mov rcr add add lock add add add push add add xor ds dec add push add insw je add mov rol rolb fcomp add out cmc add add and add cs dec push add imul add add xchg lods add mov mov add in in hlt add add or add add add add add inc add add add jl mov scas add add mov rcr add add out out adc add add sub add aas inc dec push pop add add add addb (bad) xchg sahf movsl lods add add jmp pop push add add add and add xor cmp push pop add je (bad) mov add add fadds loope add add add adc sbb and sub add add pusha add jno jns mov lahf cmpsl scas add aam add add repnz add add sbb es add dec add pop pusha add add add lods mov add lret rcr add add icebp add add or add sbb and add cmp inc dec push pop add insb add jbe jle add mov add add add loop add clc incl add add sbb add sub add add inc dec add add jne add addb add scas mov cwtl add movsb stos add add add add add add in add lock incl add push add and mov lods mov add (bad) (bad) call add sbb add cmp inc dec push pop add add mov xchg add mov rcr add add in add add add adc and add add add inc dec add push pop pusha add push jae add xchg add mov lds into add fldl in add cld add push add adc xor inc inc add pop add bound push add addl xchg cltd add mov add fild out cmc add add add movhps add add sub add xor add pop add add jo jns orl add aad out add testl or add sbb add add inc add push add pusha add add jns xchg movsl lods add int add fcomp out hlt add add push add push sbb cmp dec push pop fs js add xchg add add roll add add (bad) fldl add call add add or sbb es dec push pop pop add add add test mov (bad) lret add fnclex jmp push add adc push add daa add add inc dec add push add insl add add add add add movsl lods mov add les add add add loopne call add or add adc sbb cmp add add pop bound imul xchg add fwait add add add add add fucom add repz add add add movhps add inc dec push add popa add add add xchg cwtl add add ror aad fsubp in repz add idiv add push adc xor inc add dec push pop add insl je jl mov add add add int aad jecxz add add jg xchg add lahf add test add add rolb fildl push add add cmp inc dec push pop add bound add jp add cmpsb lods mov add add add rcl fsubp in add testb add add add xor add push add insb jae orl mov mov add fchs out cmc add add sub ss push pop bound ja test add mov int fucom add add add cli add add or adc sbb das ss pusha add jbe test popf movsb add (bad) lret add add jecxz icebp clc incl pop push adc add ss pop popa push add jno add add add add add int3 rcr add add add add testl push add add cs add push pop imul jne addl lea add add fild add ljmp add adc add add ds dec push pusha push jae jnp test scas add mov (bad) add jecxz icebp add add add adc add daa cs add arpl js xchg add mov fsub ljmp add or add add add xor cmp push push pop gs add orl add add lret add add lock add and add add dec push pop add outsb jne jge add test int3 add add fcomp out add repnz add add cmp add add popa push addb add add add faddl add add add repnz add or add add and inc dec push push pop gs add add mov rol add fcomp out hlt add add adc and add xor add inc dec add pop pusha add add lea lods add roll fnclex add add add idiv add add add add and sub xor inc inc dec push pop arpl insb add mov xchg add ror rcr fild out lock add and add cmp add push push pop add push test mov add stos mov mov add fcomp out add add incl add adc sbb add das add add add add add insb add orl add add add fiadd add add add cmc add add or add daa add aaa cmp pusha outsb add jg mov nop xchg sahf movsl lods mov mov add loop lock sbb add sub push push pop jno addb add xchg cltd mov mov add in in add std add adc and sub add xor inc add add add pop add jbe jle mov xchg pushf mov ror add out add clc add add add add push add and dec add push pop add add orl add add add add add repnz add add pop push adc add add aaa add add dec push add add data16 add addb (bad) xchg popf add add int3 add faddl in in hlt sti add add or es inc dec push pop bound add add mov mov ror (bad) fucom jmp hlt sti add add sbb add sub add xor pop pusha addr16 loop lock sbb add sub cmp dec push pop arpl add add jg xchg mov mov (bad) into add add loope add add cli add or sbb es dec push pop pusha add add je add add add rolb fninit ljmp adc and sub cmp add data16 jbe add add test add add mov add add add add add add and add add add add jge add nop cwtl lahf add stos mov mov (bad) call std add or sbb and add add inc add pop add add add movsl add rcr loopne add icebp clc incl pop add pop pop daa add add cmp push add outsb jne orl stos mov ror xlat fsubp add out add clc add add adc and cs add dec push add add add ja add mov jecxz icebp clc incl or add sbb and add xor inc add push pop pusha outsb jne jle mov add scas mov add lret rcr add call add add add xor add add dec add add add insw add add popf movsb stos mov mov faddl add in hlt add std add or sub cmp inc add push add add add jb add addl lea lods mov ret add add add add clc incl or sub cmp inc push pop popa add imul xchg add scas mov add int3 add fsub ljmp add push add sub aas add push pop imul add add mov add mov fucom jmp cli add or sbb sub xor add inc add add pop imul add lea mov add add loop add stc add add push add add add add cmp push push pop add add imul add test movsl lods add int fnclex add add add add and sub add cmp inc dec add push add add pop insw je (bad) mov scas mov add add into aad fsubp add out idiv add add adc add ss add add add add insl je add xchg stos add add fnclex add icebp stc add add or add add out out cmc add add add add sbb add add xor inc add dec push pop add imul add add add mov add add rolb rolb add add in add add add add or adc sbb add and xor cmp add push pop popa add add jl add mov add mov add fsubp in repz add ltr add and add add add add push pop add je jl add movsl add aad jecxz in repz add lldt add and add cmp add push push pop add add js orl stos mov add add add loopne add idiv add or add aaa add add push add add imul add mov xchg add mov lret rcr loopne add icebp clc add add add adc add add add jne add add add add add lret add add add add add add add or add add and add xor add dec push add push jp add add ret lret add fldl add add add stc add or push add add add cmp inc add push pop pusha add add orl add cmpsl scas mov int3 aad fldl add out add incb push or add sub xor cmp inc dec dec add pusha add add insl je add jg add nop add mov (bad) lret rcr add ljmp add add sbb add sub add add add add test lea mov add add add aam loop add add icebp clc incl add add add sbb and add add add add add dec push add add add jns addl add movsb stos mov add fildl jecxz icebp clc add add add adc add add cmp add add jle add mov mov add add in repz add adc add and xor add add add outsb add jg xchg stos mov add ret add int3 add add add in hlt add add adc add add add xor dec push pop bound ja add movsb add (bad) int add fsubp in add testb add push add sbb add cmp inc inc dec add add outsl add jns xchg add add xchg pushf mov add add add add add add call add add pop add add add cmp add add je add test add add add aam fldl in add testb add add add sbb daa add add inc add push pop add outsl jbe add add ret lret loopne add testl adc add add das add inc dec push pop bound add insb add jne jle xchg (bad) xchg popf add add mov int add fsubp add add std add adc and add aaa add inc dec add add add add addb add add pop add es add dec push push add popa push add add add ror add fchs out add add add std add pop push add push add add add add add push pop popa push xchg (bad) xchg popf add add add add add add add fild call add add or add add sub cmp add add dec add add orl mov (bad) aam loop lock add add cs inc add pop bound add jp add add mov add iret add add loope add in hlt add incb sbb inc inc add pop imul add test stos mov roll lret add loop jmp stc add add add add sub add dec push pop add add add js xchg movsl lods mov add add rcr add ljmp add or pop es dec push add imul add add xchg add add stos add int add add add outsb jne add mov mov add add leave add rolb fnclex add add add idiv add add add sub inc inc add add pop popa add imul add jmp hlt add add add add add adc add add add inc dec push add add add add add add add (bad) mov add add cmpsl scas mov ret lret flds loop add add lock add sbb sub xor inc dec dec push add insb jae addl add cwtl lahf add add int aad jecxz add hlt sti add add add adc xor cmp add add add pop add push add jnp mov mov add mov fildl in repnz add add pop push add add xor ds imul jl mov add cmpsb lods add add add rolb fildl add add out cmc add add add and cmp add dec add add data16 ja add add add add mov add add ljmp incl add adc daa cs add add pop add bound ja add add fwait add movsl add add rcr add jmp add and add sub add add add dec dec push add add jl add add add scas mov add lret add fiaddl jecxz add incb add adc sbb add sub aaa ds dec push add add insw je add add mov roll add roll fsub jmp pop push add add add and add add add dec add add add add mov add stos mov mov add flds add add add cli add add add add add add add add inc inc dec push add pop insw add jnp add add enter add add fsubp in repz add add add add pop add and sub aaa add dec dec push add insb jae addl add mov inc dec add push pop imul jne add add add mov add add add iret add fsubp in repz add add sbb add xor cmp dec add add pop add add js add mov add stos mov mov add add add fild out cmc cld add or sbb add sub cmp add pop imul jl add xchg add lret (bad) add lock adc sbb xor inc add add add push add orl test int3 add fnclex jmp add add adc sbb daa add ss add pop add jl test add add xchg cltd mov mov lret add add add in hlt cld add adc add and xor add add add inc add push pop add add jns add add sahf movsl lods mov add lret fchs out lock add adc add sbb and cmp inc inc add push add pop arpl imul jp mov add add cwtl add add lret add fcomp add add icebp add sti add add add sbb sub aaa add add dec push pop add imul test add add add add rcr loop add stc add or pop add and xor add add add dec add add add push add add jo add add add add lods mov mov add xlat fsubp in hlt add incb sbb xor pop add add outsb jne add add iret add flds add add add idiv add and add add xor add add dec push add add jg lea mov xlat add loopne add clc add add adc sbb add sub cmp add push add popa push jne add add add mov add mov fiadd add add repnz add add adc add push add sub inc add push pop add add push add test add ret add add add add call add clc add pop add adc add sbb sub cmp add add add imul nop xchg add mov mov add loopne out (bad) or add sbb add and ds dec add add jns orl mov add movl add jecxz add add icebp add add add adc pop es add dec dec push pop add add jbe jg lea xchg pushf mov mov ret lret fchs out lock add add add pop push add daa add xor cmp add add push pop bound add jp mov cmpsb add add add add add jecxz jmp hlt add std add pop add pop add add add xor add inc dec push add add add add jo add add test add (bad) lret rolb fiaddl loop jmp add add stc add pop push adc sub add dec push pop pop add jbe xchg lcall add leave rcl add out out idiv pop add push sbb add cmp inc add add add add jae add add addl pushf mov leave add add add in repnz add add add and sub cmp inc add dec push pop pusha add jge xchg mov add add lods mov add rolb add add jecxz icebp clc incl add adc push and dec push add pop add add jbe add orl add add ror xlat fiadd add out testb add add add sbb add add cmp add add arpl add jl add add mov mov rol add fcomp add out cmc std add add sbb add and add add inc add push and xor push pop add outsl add add add jg add nop xchg add add add add out add idiv add add add add add push pop arpl js add add test mov mov fstl add sub add add add pop add imul add test add rcl add out add add incl add add add add sub xor add add add arpl add jnp mov add add xchg sahf add add (bad) into aad add add out add add add add pop add add add add xor inc dec push pop add insw jl xchg add add add add add add jmp add sldt add add add sub add aaa add add push add add jno jg add mov add mov ror rolb add fnclex jmp add movhps cmp dec add push add imul xchg mov mov add add add fucom in repz add add sbb es add pop bound add jnp add mov add add add add (bad) add add call add add add add sub add cmp push add imul add jge add add add add mov rcr (bad) add out idiv add or add add add add cmp inc add add add pusha outsb add add cwtl add add mov add ror add fsubp add out idiv add add add adc add and xor aas inc add add pop pusha outsb jne add lea mov add add add jmp or adc add add add add inc add dec add add pop arpl add xchg (bad) xchg popf movsb stos mov add fldl add in add std add adc add add add add add pop popa push test add add roll add loope add repnz add add adc add daa add ss add dec push add data16 jge add add scas mov add lds into add fldl out out cmc cld add adc sbb and sub cmp add push push pop add insw je jl mov xchg add mov add add add add repnz add add adc sbb add xor cmp add add arpl js add lahf cmpsb add add aam fsub add add sti add add add adc sub inc add pop add jns add add popf movsb add scas add add add fchs add out idiv add add sbb and add xor cmp inc dec push pop add jno add (bad) mov lods mov add add int add fsubp in add add add add sbb and xor add inc dec add pop add jo add add mov mov rolb fadds loopne or sbb add add add inc inc dec add pop gs jae (bad) mov xchg cwtl lahf add add mov add fucom jmp add add add sbb xor cmp add imul orl mov mov add fild out add incb sbb das add cmp add push push pop gs add mov add add xchg sahf add add ror (bad) add loopne add icebp add cli add or add add add add add dec push pop add jno add (bad) popl fwait mov add mov add xlat add add add icebp clc add or adc push and add add dec push pop add insw add add mov add aad jecxz icebp add add add adc pop add add aaa ds dec push pop add jo jns orl mov ret add add add fucom add out cmc cld add push add adc sub add pop pusha add jno add add mov mov (bad) fldl in out add testl adc sbb and add add nop xchg sahf add add add add add (bad) fucom jmp add add incb add or add and sub xor cmp add inc add pop arpl add add mov mov add add add add add aad add loop ljmp or add add push and sub inc add add pop gs jae add lahf add add ret xlat fiadd add jmp push or sub cmp dec add add add jg mov mov mov int3 add add add in add add add add movhps push and inc dec push push add add add add (bad) xchg popf movsb add rcl add out add testl adc sbb and das add add cmp dec add add add add jle add add add add add add out add add add add adc pop add sub add inc inc add push pop pop jno add add xchg (bad) xchg add lahf add test add loopne add add add add movhps das add add push pop add add jne addl add lods mov rolb rcl fsubp in repz add add adc add and add xor add add add add add xchg mov fwait mov (bad) aam loop lock sbb and add xor inc dec dec add pop pop insw je jge mov add add mov add fildl add add add icebp clc incl or sbb daa add add add add aas add add add outsb jne add add lahf cmpsb lods add mov lds add aad add out incl add add add sbb add sub add add dec push pop pusha outsb jne jge add mov mov add mov aad jecxz add add cld add adc add sbb add cmp dec add gs jae addb rol rcl fsubp add add add cli add or pop push add sub push add insl add add add jge add add mov add add add add ljmp add add movhps pop es dec push add pop bound imul orl add add xlat fsubp in repz add movhps add daa add add add dec push pop arpl jb add lahf add mov rcr loopne out cmc sti add adc and add add cmp push pop add jnp add mov stos mov rol add add add jecxz add repz add add add adc sub add pop pusha add jb add addl mov add add add add fadds add add icebp clc incl add adc cmp inc inc dec push add add add add jnp add add add xchg pushf add cmpsb add mov add add add roll fiaddl add in add lock add push adc xor add inc dec add add jo jle add add cmpsl scas mov add add testb incl add push add add add add add add dec push pop pusha add jbe add xchg cmpsb lods add add add int add fadds loope out add incb push or pop add add add inc dec add push pop gs jae jnp test add add (bad) lret rcr loopne add add add pop push adc sub push add data16 add addl movsl lods mov mov int add fsubp in add testb add or push sbb add dec push add popa push mov add add leave rcl add add add repnz add add add add sub xor cmp dec add add add add jnp add add add add ror rcl add add add add add add or sbb add xor aas add dec push add add add add add test add add rolb rcl add add jmp add or add sbb gs add test mov add mov loopne jmp add adc sahf add into aad fsubp in add add incl pop add adc pop es add dec push add add add jne add lea mov faddl in add sti add add adc cmp inc dec dec push add insw je add mov add scas mov add add enter add add in add sti add add add push sbb add cmp add inc dec add add insb add add addb add add (bad) fldl out hlt sti or add and sub add dec push add add pop cwtl add add add iret xlat fsubp in hlt add push push push add add add cmp add dec push pop popa push add ja add mov mov jmp adc sbb add xor add dec push pop push add orl add into (bad) fnstsw ljmp add add adc add add add inc add push add add cwtl movsl lods add add (bad) add jmp add add ltr pop es add inc dec dec push pop add add add lea xchg add lahf cmpsb add movb aad jecxz icebp clc incl add adc push add add add add add pop pop data16 jl mov mov add loopne jmp add push add add es add add add add add add addl lcall add aam loop out add incl and add cmp add dec add pusha outsb jne addl xchg cltd add mov rol rcl fsubp in add sti add add add add and sub add add pop add add add je add mov rolb leave add add loope out add stc add add add sbb and cs push add add add push addb mov add fucom add add add add adc and add xor aas inc dec add arpl add jne orl mov aad jecxz add hlt sti add adc push and add add dec push pop pop insw je jl add add fwait add mov mov loopne out add incb and add add inc add dec push pop add push js xchg add lods mov mov (bad) call push add adc add sub cmp inc dec add add pop pusha add add add jle add add add roll fildl jecxz icebp clc add add adc add and sub aaa mov xchg sahf add cmpsb scas add mov les int aad add out add testb push or xor cmp add pop insw je (bad) add add add into aad jecxz add hlt sti add add add sub add inc add pop pop add push addb (bad) xchg popf add add add leave add add add add in add add add adc pop es inc dec push add arpl add mov nop xchg sahf add (bad) lret rolb fucomp repnz cld add or adc and add cmp inc dec add add add add jge mov movsb stos mov mov add aad fsubp add hlt add add add add add aaa ds dec add arpl imul (bad) mov add add add add in add add clc incl or push sbb inc inc add pop add imul xchg pushf mov mov rcr loop lock add sbb add add aaa add add fs add jne faddl in in hlt add add add adc sbb sub add cmp add pop add fs add add add addl add add add add add add jecxz in add add add add push xor je test test mov mov faddl in add add add add add or adc or add and add inc dec push sbb add add dec add pop add add jge test mov mov add aam fucom jmp add add incl or add and add xor add add pop add add insl add jle mov mov add add out add icebp add sti add add add sub add outsb jne add add cmpsl scas add mov add into add add out hlt add add add and cs add imul add cmpsl scas add add faddl in repz add adc add add add xor add inc dec push add add add add add mov rcr add call add add pop add add das add add add push add pop arpl insb add mov scas add add add add adc add add xor add push pop pusha add jb add jge xchg popl cwtl lahf cmpsl add add (bad) into add add jecxz add cmc add add movhps es dec add data16 add add mov mov xlat add call add push add pop pop add sub xor cmp push add add add jns (bad) add add mov cwtl add add add add add jmp add add add add adc and add cmp (bad) out add add ltr pop es add add push add dec push add outsl js orl add enter add jmp hlt add add and xor add add add push pop pusha add imul add add add int (bad) fild call add add add or sub xor add imul jnp add xchg add add add add xlat add add add add add insb jae jl add test mov mov add aam loop lock adc push and cmp popa add ja addb js addb nop xchg sahf movsl lods mov mov into aad add in add testb push add adc sub dec push add bound jno add add add roll flds add add add cmc cld add and add cmp inc add add add fs add add jle mov add mov (bad) add add add add add add or sbb and add xor add add add add add add mov add xchg add mov loop lock cli add add adc sbb sub add add cmp inc dec push add pop add add jbe test add add xchg cltd mov add add iret add add add in add cli add add adc add add add add aaa ds dec add add jns orl add mov rolb flds loope add repnz cld arpl insl arpl insl imul and ja ja ja pop pop pop pop pop pop mov mov mov mov movsl movsl movsl movsl movsl movsl adc adc addl stc pop pop pop pop pop pop pop add add add add cmp dec dec dec dec xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) incl push push push push push push xor xor xor sbb sbb sbb lods lods lods lods lods lods lods stc stc stc stc stc stc stc push push push push push push push mov mov pop pop pop pop sti sti sti sti sti sti sti mov (bad) arpl arpl arpl (bad) (bad) xchg xchg xchg xchg xchg xchg xchg mov mov mov pop pop pop pop ss pop pop pop pop pop pop out out out out out out out das das das das das das das sub sub sub sub jnp jnp jnp lea lcall jno jno jno jno in in in in in in aaa aaa aaa aaa aaa aaa aaa adc adc adc adc (bad) (bad) (bad) (bad) (bad) les imul imul ja ja (bad) (bad) (bad) fsubrl imul jg jg jg ret ret ret ret ret ret imul and jmp test cli push jae sbb add test test test mov cmp cmp cmp mov cmp test test jmp call cmp test cmp mov test test test mov cmp cmp test inc test test test mov cmp test cmp mov cmp cmp cmp ret pop test cmp test clc adc test test cmp call jg insb jmp (bad) stos sub mov in test fstl leave (bad) jae lock subb jl push ja dec dec cwtl call cmp test jmp test test test pop test cmp add cmp cmp cmp mov test cmp cmp mov inc test cmp test cmp cmp test dec cmp cmp test test cmp test dec cmp cmp cmp test cmp test dec test cmp test cmp cmp cmp dec test cmp test test cmp test mov cmp cmp cmp test cmp test call test cmp test cmp cmp cmp push test cmp test test cmp test test jne mov cmp cmp cmp add test cmp test mov test cmp test add cmp cmp cmp call test cmp test jmp test cmp test pop cmp cmp cmp push test cmp test push test cmp test push cmp cmp cmp mov test cmp test call test cmp test pop cmp cmp cmp cmp jl test cmp test mov test cmp test sub cmp cmp cmp mov test cmp test sub test cmp test call cmp cmp cmp push test cmp test mov test cmp test push test test push cmp test cmp push test test cmp mov cmp cmp test call cmp cmp cmp jmp test test cmp pop test cmp test inc test cmp cmp push cmp test cmp pop cmp cmp test inc test cmp test or cmp test test xor cmp cmp cmp mov test cmp cmp cmp jne cmp test test mov cmp test cmp test test cmp sub cmp cmp test mov cmp cmp cmp call test test cmp mov test cmp test cmp jne test cmp cmp jmp cmp test cmp je (bad) push in loope push mov pop popf iret jnp cmp shr adc jle push lods sahf movsbl adc aaa mov inc (bad) and jecxz push mov popa test popf push movsl mov pushf pop cmpsb cmp xlat test mov cmp shlb or ret out pusha lret inc popa dec mov mov sub xor ja fimul push push aam aad stos cmpsl notb in push repnz cli aas jb sbb cltd pop lea ficompl adc dec inc mov xchg outsb pop xchg call add js test pop push outsl loope daa sti testl fist dec nop jg insb jmp (bad) stos sub insl mov (bad) test fstl leave (bad) jae sbb subb jl push ja dec dec cwtl data16 (bad) push in loope push mov pop popf iret jnp cmp shr mov scas cmp cmp test mov test cmp test pushl cmp test test pop cmp cmp cmp mov test cmp cmp mov cmp test test push cmp test cmp mov test test cmp mov cmp cmp test mov cmp cmp cmp inc test test cmp cmp jne test cmp test mov test cmp cmp inc cmp test cmp inc cmp cmp test cmp jne test cmp test pop cmp test test mov cmp cmp cmp mov test cmp mov test test test add test cmp test mov cmp cmp cmp mov test cmp cmp add test cmp test mov cmp cmp test add cmp cmp test lods test cmp cmp test je test cmp cmp add test cmp test mov cmp cmp test cmp jne cmp cmp test mov test cmp cmp cmp jne test cmp cmp mov test cmp test push cmp cmp test pop cmp cmp test push test cmp cmp push test cmp cmp push test cmp test push cmp cmp test push cmp cmp test push test cmp cmp push test cmp cmp push test cmp test call cmp cmp test add cmp cmp test ret jge jle push lods sahf movsbl adc mov inc (bad) and jecxz push mov popa test popf push movsl mov pushf pop cmpsb cmp xlat test mov cmp shlb or ret out pusha lret inc popa dec mov mov sub xor ja fimul push push aam aad stos cmpsl notb in push repnz cli aas jb sbb cltd pop lea ficompl adc dec inc mov xchg outsb pop xchg call add js call xor js and pop pop push outsl loope daa mov addr16 inc test dec and imul mov in jmp jl loop and mov push out jmp dec loop jno mov pusha adc jg out jbe stc hlt adc loop push jmp jnp ljmp jae call jbe stc xchg jae movb xchg xchg (bad) inc leave jnp xchg in iret ss fildl xor outsl loope daa sti testl fist dec nop jg insb jmp (bad) stos sub insl mov (bad) test fstl leave (bad) jae sbb subb jl push ja dec dec cwtl data16 (bad) push in loope push mov pop popf iret jnp cmp shr mov scas jge jle push lods sahf movsbl adc mov inc (bad) and jecxz push test cmp cmp push test cmp cmp xor test cmp test pop cmp cmp test ret mov popa test popf push movsl mov pushf pop cmpsb cmp xlat test mov cmp shlb clc (bad) call sbb jmp lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall shl and icebp xchg sub cmc jnp or jmp loop jnp scas icebp xchg xchg int3 cmc jnp or (bad) jge cmc jnp jbe jp jecxz adc in jnp jbe jnp jecxz out in loop jnp lret xor popa lds jecxz (bad) jecxz jnp mov hlt je add jg push fnstsw mov cmc repnz repz jnp mov jae jecxz out stc loop jnp jecxz out stc loop jnp jecxz jnp in ja jmp out pop jecxz and adc jnp mov test xchg jecxz clc adc cli (bad) and cmc jnp jns jnp mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and mov stos and movsb out mov jecxz and aam jnp push out jecxz sub jecxz adc jecxz jg jecxz test xor popf or (bad) xor jl jecxz and stc jp jecxz jno jecxz and sbb jnp push jae jecxz cli add mov stos push cmc je in (bad) jnp in lcall ja jnp mov out loope cmc jnp sbb je adc jnp in lcall popf cmp adc andb jecxz shr jecxz jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns loope jns xchg (bad) cmc jnp mov jne cltd in jno fsub cmc ret call inc jl sub loop or jbe call jecxz dec and pop call out jno jecxz and pop repz push sub fdivrs mov sbb jecxz xchg inc in jnp cmpsb mov movsb out test jecxz and je jnp push aaa add jnp lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall nop lcall (bad) and or jnp push xor icebp xchg cmpsl into cmc jnp or jle jecxz shrl jg sbb jmp jecxz repnz dec cmc jnp push fnstsw mov cmc repnz jecxz jnp push fdivrs mov cmc repnz div jnp push fnstcw mov cmc repnz sti hlt jnp push fdivrs mov cmc repnz push jnp push fnstcw mov cmc repnz ret hlt jnp or push jmp push inc add hlt jnp rcl lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret sti jmp cmc repnz sub jnp pusha or xchg jmp test jnp (bad) jle in cmp in in cmc cmp cmc jns jecxz mov cmc jnp push and adc jnp mov cmc jnp ja jnp inc push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl push fisttpl mov push cmc je lods out jmp push das add jnp or jmp sbb mov or push jmp push cmp cmc je std idivb or push jmp pusha jmp and cmc je in jnp push mov add aad jmp and ja jecxz adc jecxz jnp jbe jp jecxz test jecxz cli jecxz,pn jnp mov xchg jmp sbb arpl jecxz xchg imul jnp bound jnp jecxz cmp pusha lret sbb ja and jmp stos sbb call ja out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out jge popa out test sbb test mov orb jecxz ds jne jmp and jnp push in jbe jecxz jnp jecxz jnp mov adc mov adc jecxz cmp xchg stc clc das sarl and jle leave mov es into jnp in js and movsl test ret test cmc (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock in (bad) lock adc mov sub jecxz jnp mov lock mov sub jo adc push das pusha cmpsb mov lea jnp jecxz cmp push jle shll jmp bound jnp or stc mov and call push jl push fst insb and cli (bad) mov xchg push add ja outsb sbbb mov jnp mov test pusha xor xchg jecxz lock and in mov jp push lock xlat jl in push cltd jp jecxz push in or sub xor pusha lods std clc sub jl stc bound jmp cmpsl sbb call lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli lock cli push aam jmp sbb test push push add test push push add jnp mov cli jnp push (bad) jae xchg stc adc mov adc mov adc mov test pusha jnp jecxz clc adc cli decb jns jnp mov mov xchg xor or jmp xchg hlt jecxz and and test push arpl jecxz ss lock jmp lock jecxz and std xchg xor or push sbb xchg push clc cmc jnp pop cmc jnp add or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or adc or jle loope (bad) gs pop or jecxz mov jecxz and jl push jecxz jnp sbb pop push call ficoml out xor sbb test mov jnp in jbe mov sbb in mov sub sbb test jo out cmc nop mov xchg hlt jnp mov cmp push cltd jp jecxz or push or inc jecxz jnp mov cmc test hlt jnp mov adc sbb out jecxz repnz inc cmc jnp mov lock inc pop call inc cmc jnp sbb jg mov test sbb arpl sarl call jecxz pop into (bad) rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb rcrb lahf jnp in or mov xchg icebp lock mov clc adc cli (bad) jne cmc jnp cmpsb sarl and push int (bad) jg mov test sbb arpl cmc je cwtl clc jnp push repz jmp sbb jnp test jmp test mov mov mulb int jle in stos jg push or pusha or jbe jecxz and jecxz (bad) bound jp pusha dec ret jmp addr16 jmp or jecxz xchg cmp or jmp or sbb clc adc cli (bad) adc cmc jnp movsb in xchg pop jecxz jnp sbb adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb push adcb lahf jnp out subb sub in bound jnp pusha xor mov rorl stos push cmc je lock jnp push inc jnp jecxz xor push jl bound cmc jnp or push sbb or push icebp test pusha or jo jecxz imul cmc adc jecxz jnp jecxz adc push or jne cmc jnp inc jnp jecxz fcmovu jecxz jnp mov leave clc sub jle mov aaa bnd cmc jnp push in jnp mov or jmp bound ret jmp push inc jnp jecxz sub sbb test or jnp jecxz xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov xor stos mov jg or jecxz jnp push cmc cli sub hlt jnp mov sub sbb test out xor push jl dec jecxz jnp or jecxz jnp push cmc cli sub idivl mov sub sbb test jmp nop push jecxz lock cmc jnp bound jg jecxz sub std test sbb arpl fs jmp jecxz jnp mov std sub push inc jnp jecxz sub sbb test jecxz and sbb lret jmp jmp dec push mov xchg mov cmc jnp scas icebp xchg test or (bad) insl jecxz jnp add jnp (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl (bad) rcrl scas icebp xchg lret jnp or (bad) imul icebp sub xor push jmp es sbb xchg mov cmc jnp mov test cmc pmaddwd or jecxz ss mov jnp jecxz and sbb test jnp pusha dec xchg jecxz jg mov ss or jmp adc xchg lock jbe loope movb in jnp mov or jmp bound psubsb cmc sub jecxz test sbb test jnp and jnp jecxz jp jecxz lock jmp add jecxz and and test or jnp jecxz ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret dec ret sbb and sbb jg xor jmp jecxz lock out mov jecxz and inc add jecxz repnz xchg jecxz sub std test sbb cli push pop bnd loopne jnp in jo sbb pop cli jnp out call scas icebp xchg mov cmc jnp or adc cmc jnp mov test sbb lock out xor test test push add jecxz lock out xor jecxz and aam test push pop call out jnp jecxz repnz arpl jnp push cmc push jmp fs jmp jecxz movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb ss movsb sbbl jle loop jnp sbb add jecxz clc push jae jnp loop (bad) jb cmc jnp imul jecxz je and jnp fisubr addl cmc jnp in jno call in jnp addr16 jp jecxz mov insl jbe jnp fsubrp jnp and jmp cmc jnp or jnp fcmovne inc rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int rcr int aam cmc jns in jno jmp jecxz mov jmp jecxz sete icebp jnp arpl jnp xchg lcall mov sbb fdivp jnp arpl decl cmc jnp mov mov mov jmp jecxz je addr16 jnp or clc push jae jnp out pop and out jge cmc jnp loope jp sbb jecxz jecxz test hlt jnp sbb pop call sbb lahf test mov mov and test hlt jnp sbb out call lahf hlt jnp or jnp dec pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb pop rolb icebp jnp mov cmc jnp push popa jp jecxz in xchg loop jnp inc or jecxz int3 jno cmc jnp push popa jp jecxz in xchg loop jnp imul iret call repz jmp or bound test push cli sub lahf jg jecxz jnp sbb jg mov pusha xlat jmp bound psubsb cmc sub loop jnp push jne jmp sbb test jnp mov jnp jecxz int3 jno cmc jnp push popa jp jecxz in xchg loop jnp jecxz jnp stos jbe jmp sbb out jmp loop jnp jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae jmp jae push cli sub lahf jp push jno jmp loop jnp mov pusha xlat jmp pop or sbb test or lods fbstp jmp jecxz pop dec sti cmc jnp push in test pusha sbb jnp mov cmc clc sub xchg lock jmp lock in xchg inc cmp jbe jecxz cmp sub xchg clc aad cmc push pop pop jl bound icebp jnp adc xchg out je jmp sbb jnp bound jnp jecxz sub or jp jecxz test jnp push cmc jle jecxz mov push cmc cmc jnp or mov pusha sbb call loop jnp pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pushf mov pop jle in xor jecxz lock out je jmp inc sbb cld jecxz and xor dec in jecxz repnz idivl push outsl add sbb test loope int3 test jmp fwait sbb jnp jecxz lock fbstp jmp sti sbb clc jecxz and inc push test push cmc jle jecxz jnp mov test or nop push sbb jnp jecxz js jecxz jp jecxz jnp mov mov out jl push in mov jecxz repnz scas sbb jmp lret ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror push ror subl adc mov or out cmp jecxz sub jmp mov sub sub leave jp push stc lock jecxz lock int3 test jmp and sbb cmc jnp jecxz jnp loop jnp loope jnp jecxz sub das push clc sub lahf jnp sbb aaa in push mov jmp scas mov lret cmc adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov jnp jecxz cli jecxz,pn jnp sarb icebp pusha xor clc sub xchg clc shl adcb or mov push notl (bad) and je jecxz mov out cmc clc sub xchg mov push negl jmp sbb cmc jnp jecxz jnp loope jnp loope jnp jecxz sub outsb sbb jnp or jecxz repnz daa cmc jnp or cli jecxz,pn jnp or jmp jecxz jnp sub loope jmp jae xchg push jp or push jecxz xchg loop,pt jnp push je jmp sarb cmc in jne jmp arpl daa scas pusha xor add xor nop xor xorl mov add jnp mov push in or das jecxz jnp mov sti sti adc xorl loope mov in xchg adc cmc jnp clc out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz out pusha repnz jle in or das pop cld jnp mov sub jmp sbb sub cmc test cmc jnp mov xchg dec repz jnp pusha int pushf clc jle in or jne jecxz xchg adc je jmp loope test push cli das jecxz jnp mov adc mov sub push mov nop in test clc shl cmpl sbb shll ss icebp imul scas arpl jnp push ss and daa icebp cmc repz out mov call loope sub sbb jmp mov push jmp push push call loop jnp add cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push cwtl or push xchg loope cmc jnp push hlt jnp mov adc (bad) cmc jnp push fnstsw jecxz jnp sbb out jne cmc jnp sarw jecxz (bad) aad cmc jnp sar jmp sahf stc pop dec (bad) cmc jnp push mov cmc jmp subl cmc jnp (bad) std pavgw jae xlat loop stos or add in jmp sub int jle bound jmp clc adc orb out dec jnp jecxz repnz mov cmc clc sub xchg xchg aaa in cmc jnp push hlt jnp push cmc bnd hlt jnp test loope (bad) into (bad) cmc jnp pusha or out xchg repnz jbe jmp aaa jns add jmp aaa jns jbe jp jecxz js lret hlt jnp push inc call xor bound jp jecxz loopew jno call jmp addr16 mov hlt jnp sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub xor sub add xchg jnp push shr cmc jnp outsb fnstcw jecxz mov cmc push lret pop call test push div insb (bad) hlt jnp push dec call outsb sarl push jp or xchg jmp mov repnz jnp jecxz repnz jecxz repnz mov (bad) lock loop mov push lock jecxz jp push mov push xchg xor cmc jnp dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec pop xlat inc dec jle jecxz push je and adc mov sub pushf loope andb clc sub andb (bad) icebp icebp ljmp jle sub adc jo jecxz mov push jl push jecxz adc jecxz adc sbb xlat jmp mov dec cmp aaa jg or pushf push sbb push mov nop or xchg mov xchg sbb push pop cmc jnp jecxz cwtl add test or jnp jecxz xchg jecxz lock cmp mov stos stc repnz out cmp sbb lock (bad) jbe in and push lcall shr jecxz (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop (bad) inc dec pop xchg mov or jecxz jne sbb sub xchg xchg and xchg or sbb xor lea xchg pop movsb xchg xchg out xor test nop cmpl jmp sbb push popf mov xchg xchg or xchg nop sub mov xchg jmp sbb push popf mov sbb xchg cmc xchg cmp cmc jnp pusha jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push jbe push sbb xor mov mov jo cld adc push lods subl xchg xchg mov or (bad) sbbl mov cmp xsha256 cmpsb xchg nop adc popf jecxz fmull sbb xor xchg pushf or xchg xchg (bad) loop jnp sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub cmp daa sub or xchg cwtl push mov xchg xchg mov or mov lea mov xchg xchg lea or mov lea mov xchg xchg cmp cmpl xchg mov test mov ud1 xchg lcall mov adc mov xchg push sbb push popf cmpsb lea popf mov xchg xchg lods push sbb or lcall or push sbb push mov movsl or test pop test jnp out jnp or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb pop or sbb push sbb push mov pushf or mov outsb scas push sbb adc mov adc xchg xchg xor or mov cmp or test sbb adc mov mov jmp jecxz cmp mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test mov mov test sbb sbb cmpsl nop sbb cmpl mov nop sub popf or push test movsb nop ud1 xchg lcall nop xchg inc adc xchg pushf adc mov or sbb sub or sbb adc xchg pushf adc mov fwait psubsw adc push sbb or cltd push mov sbb sub mov push jmp sbb pop xchg xchg pop mov sbb sub xchg nop aas adcb add cmc jnp test sbb popl xchg sbb popl xchg sbb popl xchg sbb popl xchg sbb popl xchg sbb popl xchg sbb popl xchg sbb popl xchg sbb popl xchg sbb popl xchg sbb popl xchg xchg test or jecxz jnp jecxz dec cmp or (bad) cmc xchg or or (bad) nop cmp xchg sbbl mov or mov test mov xchg push popf xchg test movsb nop shld adc jecxz (bad) cmp das mov sbbl mov daa test movsb nop imul (bad) push jmp sbb push popf mov push cltd mov jno loop jnp pop dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les dec les adc push dec loope jmp sbb adc xchg adcb ret mov jno xchg sub (bad) cmp lods xchg adc cmpsb sbb mov push test cwtl add ret xlat xor mov push mov pushf sbb xchg test adc nop test push xchg pushf adc mov fwait sbb or mov push mov mov xor rclb mov cmp mov pop in mov push test aad jmp sbb jnp jecxz in sbb jnp jecxz xchg mov or push and jnp or test sbb jnp jecxz add sbb jnp mov test mov fwait sbb cmc xchg in or mov xchg mov xchg add test add lods xchg push mov sbb sbb cmp push enter cmp sbb int test jecxz jnp or jp jecxz data16 insl xchg jecxz pop aad stc sbb push ds mov pop mov aas lahf cmp inc jo aam (bad) push xchg leave addl outsb je das xchg cmp hlt test neg jne sbb sub leave data16 or mov or mov lods mov sbb xchg mov add pop fidiv sahf loope jl adc sarb inc mov fisttpll fdiv (bad) or lods test adc or (bad) fucom mov sahf and data16 jle push and mov test and out add icebp add and sbb jge xlat mov mov cltd ja (bad) std lods fwait int sti subb mov mov out pusha fmuls dec sarl mov xchg jecxz les sbb jmp mov jg ror out loop das cltd jbe imul pop jecxz xor sbb arpl mov or jle cld cmpsl add mov repz std leave mov enter cmpsb pop test cmp inc sub not (bad) enter sub aam psubb cmc imul sbb xchg or xchg pop fcmovnb (bad) ja sahf xor fsubr or mov out xchg cmc sub rorb stos cltd dec jnp sub (bad) imul push push imull in inc xor adc pop fstl pop and pop jb xor pop jnp add ja lret nop fcmovb daa aad mulb dec mov scas out mov adc sahf imul inc idivb xchg and dec fsubrl rorl add in (bad) loope sub mov jb inc pop inc adc xlat xorl lds popf jmp mov into pushf pop cmp ljmp and jo mov pushf inc loop std es add jle dec push out adc xor loopne or adc (bad) jmp pop loop test lock into addr16 cmpl fnop add pop into jp inc sbbb imul imul sti fcomps das mov mov push and jle (bad) aad das mov fbstp jno mov add loope fnsave or dec es sahf mov mov mov (bad) std push dec jns cmpsl sub ret int xchg xor ficomp repnz inc in scas push fbld test lock imul adc mov xor xlat and sub icebp cmp js push add jne and add or sub jg cmpsb jmp or repnz scas ds mov sahf push inc ds in outsb icebp (bad) xor xor xchg fadd sbb fwait les test cltd (bad) cmc ja fnsave jnp and scas clc jns xchg mov aas into (bad) and ja jmp (bad) sbb adc mov and mov mov aaa (bad) fnsave inc jge dec call fdivs dec push sbb cmp xor fwait scas xchg jno inc int3 popf mov pop iret jno pop ret testl sub push inc ja movsb sub lret xor fistl jecxz add lds mov scas cmp (bad) dec cltd sub or mov rolb fnstsw mov int3 jle scas adc pop popl xchg mov fsts adc inc pop cltd test mov push inc outsl lea setbe mov into call scas lret pop imul std frndint into rclb nop adc jo mov hlt xor movsl aaa mov sbb jecxz dec pop std popf and adc stc lock sbb cltd cmpsl or into (bad) sarl out xor jge sbb bound addr16 mov pop nop dec mov sti mov mov adc xchg dec stc icebp ret mov xchg imul sti fcomps ljmp fmull cmp inc adc ss js inc call arpl mov dec cli (bad) mov inc stc push loop xlat mov cmc xchg outsb xchg subl push int imul inc jle loope stos inc lds loopne in or sbb jae test sbb cmc fidiv adc or jae or fisubr xchg leave mov sub sbb fcompl ret ja mov mov cmpsb (bad) int icebp or inc loop inc cmp mov ret push (bad) adc pop (bad) mov addr16 fild cmp cltd sbb fcmovu pop enter mov pushf sbb sahf andl sbb mov (bad) jae popa lds dec dec and inc aaa imul mov outsb sub dec mov push out mov stc fucomip xchg xor push sub mov or adc add in jmp mov into dec mov (bad) ja mov sub cli bswap clc jmp inc fwait push pop mov inc mov pushf (bad) push cmp decb pushf sub aam mov in jno mov mov dec dec sbb dec xor xlat or and push mov push enter or idiv nop insl pop jb cmp push je adc dec cmc mov (bad) in (bad) loop sbb aad and cmpsl scas ja xor or or imul ljmp in xchg push and pop arpl jle sbb sbb movsl pop (bad) fucomip push test fcom rcrb hlt movsl and adc xlat sub xchg imul jne push jnp,pn pop stos mov fldt nop jno loop out push jle jp mov std inc repnz bound adc (bad) fistl fidivl mov jbe xchg scas mov and daa mov push add mov mov mov ja loop ret xorb and test scas ficom push or out mov stos mov xchg sub cli xchg jb mov sbb inc dec inc in lret movsl adc mov insb popa mov test adc mov ret cld xchg push aam mov addr16 fwait push (bad) (bad) enter imul test push add and (bad) aam out jbe push fsts insb loop aas add repnz sub ljmp cmp ja jb scas or shrl aaa push daa in lret or addl sbb mov pop jnp nop lahf mov xlat in jne sub (bad) mov (bad) ljmp mov daa dec xchg adc cmp or repz dec cmpl ja repnz or mov movsl dec imul xchg ljmp dec in push mov pop repnz xor jg lds mov mov push (bad) call popf pushf and push pop fiadd add push and mov dec es adcb insb mov mov pop nop aad out insb pop stc sub pop ficomp arpl jmp or cmpsl inc mov cmpb adc add xchg lea dec inc in and arpl xor xor add in push mov mov mov sbb adc sub jle lock pop pandn mov aas ret pusha add push and push mov cmpsb stos in push or aas jmp das mov or (bad) jmp lock adcb ds sub push mov pop icebp push dec xchg outsl push sub arpl es and cmp cmpsb cwtl xchg jge mov inc mov clc jl test out cli test lock adc xor ss push xchg bound daa xor int3 pop pop sbb in fwait mov adc je sarb jecxz dec dec (bad) cmp xchg int3 xchg shll and sahf dec xor fimull out sub outsb inc sarb mov pop mov lcall cli rclb xor scas pop mov jle or xor push (bad) lds mov inc cli adc xor xchg outsl inc cmpsb jb popa sub sub (bad) mov mov cmp xor shll stc push lret push push and pusha hlt fcomps xor sbb adc (bad) (bad) andl cmp fld js mov sub mov lcall or popf sbb adc lea mov xor mov stc sarl xor sbb inc xor scas and pop div ss jle (bad) jo cmp adc cmp pop push mov aaa jecxz lods movsl cmp push (bad) adcl (bad) addr16 jp imul (bad) (bad) mov or and in push call xchg add fcoms or pop imul jp outsl and cmp lods into sbb push xlat add js inc fnop sub into push ret pop or mov mov dec insl jbe lcall out hlt rolb fidivr and mov pop shrl std add in mov cmp fbld nop push mov cmp and arpl (bad) mov jg clc iret out loop rcr mov fcmove (bad) stos sbb fmull es xchg iret roll xchg imul sarl mov (bad) in cltd cmp aas aad jmp mov cli or repz mov in fisttpl fdivrl jge jb je xor loop popa or scas xor hlt or jbe push push out mov or or push fwait add jl xor mov movb and std add (bad) sub imul or pop or add aam movsb das les (bad) (bad) aaa adc add movsl test jmp and (bad) cmp push arpl mov lods xchg daa out outsb add push and pop jb movsl pop jne (bad) cmc in pop adc xchg mov mov fwait imul test lock les lods push rorb ret xor and jl push jo push popf cld adc mov aad mov imul mov inc mov push nop enter cmc mov sub (bad) and pop and les mov inc call jp in pop xor add pop dec cmp lcall xchg adc popf jg jnp sarl sub scas mov cld loop xchg jecxz (bad) jecxz mov fisubrl jo rclb xchg popf lcall xchg test idivl push inc out jbe mov pop lods sahf sbb xchg pop enter pop fstps je pushf in jl in (bad) mov adc dec inc push jno mov cli notl rorl pop pop loop xlat fcmovne repnz roll or add stos mov sbb xchg ret jle sbb movsl insb outsl push mov rcrl push xor insb call aad cwtl lods sti xchg lds lods push lea and cmp and sahf lods push repz aaa std adc popl das add inc outsb adc out scas stc xchg jecxz (bad) inc enter mov int or scas out cmp push pop xchg xlat andl pop sub movsb push dec sbb mov lahf shrb jp (bad) xor push add dec jb ljmp xor in rcll pop xchg aas mov cwtl sub xchg inc or add xchg lods cmp cs faddl scas mov lahf jle cwtl adc adc add jae mov je movsl imul mov das hlt or xchg lods test rcrl and ljmp mov xchg std pop clc xor das and es loop rcll push roll or cmpsl aaa xchg test (bad) cwtl xchg outsl (bad) jnp mov inc push or cmp fsubp and lahf sub ja sbb jle jecxz add pop mov subb inc shl add lods jns in ficomp push stc dec and fdivl cmpsl test jl out enter test push cmpsb sbb fwait or pop xor dec popf inc into inc jl dec lahf (bad) lea mov (bad) jae (bad) (bad) stc xor dec push lcall inc mov xchg pop outsb sub dec mov ljmp outsl adc mov call notb jne out rep imul adc ja mov cmp cli adc clc sub inc punpckhwd xchg sbb jno adc fsubrl icebp cmpsl rcll inc or (bad) mov test insb pop or mov out fdivs jg dec jecxz xor int lret mov std add out cmp mov mov jl xchg push mov in jl adc jge leave xor push push (bad) dec jne in adc inc jp mov mull cwtl rcrl sub imul aaa jecxz lods movsl (bad) ss andb pop ficomp outsb and mov inc xchg cmp bound mov ja mov adc cs cltd cwtl (bad) xchg or adc fiaddl in cli pop inc or test inc fdivl pop icebp push add outsl adc add loop mov mov lret inc repnz roll js (bad) inc mov pop out repnz and and jns cltd test out jne xor or mov sbb xadd sub adc mov xorb ja lret loope jno test arpl test or xor push leave outsl lea adc lret inc jl enter arpl addl (bad) not sbb int cmp mov mov jp push popa mov xor test out jg bound outsb jno inc stc adc and inc sbb xchg cs cli (bad) jp sbb out stos add cmpsl (bad) jb mov or dec sahf inc iret xchg lahf fnstenv and and mov xor aad inc jnp jp push inc mov inc jne adc pop (bad) lods cli arpl pop xchg stos addr16 mov outsb sub and jl aaa stos push jo push popf sti psllw testl popa xchg mov sub repnz mov iret adc enter lods rolb icebp gs dec cmpsl ljmp and aam adc scas aas dec insb xchg sbb xchg pop pop cltd das in mov jo mov jae push (bad) pop inc dec adc test cmpsl sub jg xchg pop mov lret int and mov mov in xchg lock cmc rolb pop xchg ffreep mov cmpsb xchg jo mov mov aad add mov sub xchg ret cmpsl test loope sbb inc stos out fildl sub and in mov xor xorb (bad) push mov (bad) add ja push fistl jecxz inc pop pop sub or (bad) xor mov sbb mov and fcomp aam adc stc dec out mov pop mov sub and sbb clc dec rcrl lds push jno inc xchg add or push sub mov fisttp jmp xchg cli das mov aad and movsb int mov jg pcmpgtd or add rol scas jno xor add add cmp adc xchg add or sbb mov fsubs or cli aas out repz mov imul lcall lea (bad) mov (bad) adc mov add xchg dec cmpsl xor xlat scas lds shrl xchg push mov nop mov test mov mov dec movsb pop outsb pop lahf cmpsb mov inc push negl mov xor add movsl enter mov bound aam stos imul cmc cmpsb push mov repnz cli jecxz fdivs mov add mov cmpsb lret dec lret add test fadds dec popa in loope sub mov xchg cld addr16 xchg cmp cmpsl cltd and js jl fstps rcrb popf or mov pop add xchg pop out jle out rcrb dec and bnd jae mov test ret pop add sub push fistpl jb pop inc loopne sub imul xor cld movsl cs std cmp cs je (bad) mov xchg jns or jo inc mov push xor cmpsb fldenv ds mov sub movb mov je imul add mov dec pop in jl out shrl adc and add lcall push das jae sub test xor outsl fs out mov stc mov jle dec xor orb mov jno cmp (bad) (bad) pop push movsb jl cmp dec xor add mov es test add adc mov mulb mov das movsb call push sub pop insb push das out mov in aas and push add sub xchg xorl or insl cmpsb mov in ficomp rolb xor mov stos cmpsb mov dec sbb out pop mov (bad) pop aad ljmp scas pop cmpsb movsl int inc scas and adc sub push xchg (bad) mov or mov shr sti mov les fsubrl popa cmpsl jnp mov jno inc pop mov xchg dec add sub inc and loope pop iret and push pop and mov int cmpsl shrl cmp xchg mov pop push xchg cmp cmpsl and dec (bad) jo loope (bad) mov pusha mov cmpsl or pop in mov mov iret in testb dec sub ret cmp inc mov or dec pop xchg push loope stos cmc faddl int3 adc (bad) fist das mov pop in push movsb mov pop jge and lea jmp (bad) fcom push cld scas inc sbb jge dec sub loop subb mov push mov push xchg xchg hlt xchg push jns inc das je xchg test pop std test inc pop sbb cltd push pop sub push sarb cmp jp jmp scas mov pop jge push adc mov push adc sub mov outsb mov pop bound adc push and imulb lods (bad) dec out dec jge adc in and cld lods mov sbb clc in inc jno pop dec movsb mov setno mov rclb imul (bad) xchg dec cli rol xchg dec addr16 fisubr push cmpsl jle stc xchg js jl cmp int imul icebp mov inc jle loopne xor test jb mov mov sub push in test cmp cmpsl dec sub fwait iret sbb and call sbb sub sti pop divb inc add sahf loope iret xchg lret adc stc sbb movsl xor (bad) lds jp mov push and fs pop (bad) mov or andb dec lret mov or sbb cmp push jne adc sub popf lahf fdivl inc into arpl mov jno mov mov sub ss jne sarl pop cmp mov ja jae add dec in aas in or inc and lock bound andb adc cli mul rorl pop pop cmc daa xlat push flds popa imul mov call test sbb sbb push fsubr shrb push push (bad) mov (bad) shll cltd mov lods xchg movsb por loopne daa push inc enter gs push addl hlt mov shrb hlt loopne sub int3 scas aaa add mov sbb cmp xchg push outsb adc mov mov scas (bad) xchg jecxz mov mov push and out pop ljmp xlat fisub push xlat insb push pop sub movsb mov mov dec addl or roll adc jecxz mul sbb sub mov js dec movb jg fsubrs fidivrl lret inc pop popf jle out and ja mov xchg (bad) pop mov jno pusha rorl push xorl mov js dec insb jns mov and jmp jp mov stos or push sub mov movsb insb dec imul std outsb repz das pop clc js add and es mov add pop push aaa inc jmp adc sub test lret pop jp cmp push loop or and jg packuswb or add scas mov xor add add cmp leave subb cltd sbb cmp hlt (bad) jns out inc scas mov addb lret rcrb mov pop push mov notl cwtl popa icebp (bad) aam inc adc mov dec es adcl es adc or (bad) fsub pop or sub pop ficomp in and mov mov or xchg aaa (bad) mov fdivl xchg jecxz mov movsl or push mov jns ljmp jne mov lcall test add jg xchg int3 dec ret (bad) and adc mov jge leave jecxz add inc adc push cmp into adc sub (bad) mov mov lret test punpckhwd test sub jo ucomiss test sbb inc notl pushf xor insb inc mov add idiv mov mov xor dec jmp pop xor dec fwait inc int3 rcrl (bad) push sbb sbb test sub inc js lret enter lods sub (bad) imull cmp push mov leave lret mov pop shrb sub push push dec test loop lods movsl jb aas jg mov push outsb and mov cld inc icebp cmp popa push leave xor arpl sbb enter dec xchg push add dec pop fldt rorb lret pop adc dec lock pop mov sahf rcll lahf push (bad) sub pop sub leave or push jbe out fs call sub (bad) jmp push sub icebp pusha sbb lcall jnp out xor xor xchg sub js push push adc rcl dec rolb adc xchg test mov andb mov pop cli inc sub inc sbb cmp sbb and inc cwtl gs push (bad) das icebp (bad) mov mov ja adc les test and cmp insb test jg outsl aaa adc or ja push dec mov jns inc ret nop dec cs outsb fidiv or sub pop fs (bad) nop aaa repz aaa cld adc popl add inc inc loop (bad) icebp movsb lods test or inc pop mov test mov push mov inc imul fiadd std and addr16 fcompl mull add add inc pop fstp scas pusha in aad movsl (bad) ss sub cmpsl xor jg and sbb fcomp pop (bad) mov mov mov mov inc or sub sahf orl pop xor popa cmp dec xor inc and or xor inc popf cmpsl inc jno mov cmc xor iret outsl in fildll test leave fdivrs jmp and mov pop sub jo std fsubrp push test xlat aad sahf call (bad) jno mov or and xlat sub push xchg lret test (bad) jo adc (bad) imul insb dec fistl and jb,pt or fxch sbb data16 test and popa push scas imul dec mov sti lea cmpb adc inc repz pusha jmp rol pop out shrl lods aam (bad) cmpsb stos push or pop adc xchg jmp popl popf fldl2e cmpsb inc movb xchg mov xchg cwtl ljmp or int3 test cmp mov cmpsb mov add mov scas sbb ret xlat xchg (bad) mov or pop rcll arpl dec in or test sub ror fwait xchg jno jle,pt mov inc pop addps adc xor sub push inc enter gs bound pop inc hlt mov ss test fisubrl fdivrl cmp lret sbbl leave cs clc mov scas addl sbb xor dec sbb cmpsl out pop jmp movsl xchg (bad) frstor pusha out pusha cmp mov xor jnp ds inc ljmp das fbld jmp sub ja sbb rol scas jno xor add add cmp xchg and add add pop cmp xor inc sub adc stos popf and cld xchg mov aam jno pusha and in ljmp ss sbb mov and lret dec std xchg imul lret rcrl xor into mov testb test cmc mov rcl inc aad insb movl or mov xor add movsb enter xchg popa pop cmc sbb scas sbb stos xor (bad) negb sub mov rorb ret js lea mov cmpsb (bad) int icebp cld adc rorb or push mov and shlb cmp jge call les sbb fcmovu pop enter mov pushf sbb fwait sub orb mov push mov cmc into outsl inc pop ret cmp add sbb xchg sbb mov push or test clc (bad) jno cmp imul jbe imul jl hlt mov rcrb add outsl adc (bad) arpl mov lret in addl pop ret and (bad) or hlt out ds test xchg pop xchg fadds mov fsubrs pop outsl push in movsb xchg lea xor (bad) push test sbb push test adc mov and imul dec fistpll test fisubrl mov js dec add cmpsb cmp xchg loope lahf jbe lods mov inc sbb jno push push ret fwait jmp lcall repz push pop daa movsl dec lcall mov inc sbb mov dec (bad) int sarb loopne add inc scas rsm loop mov rcl sub xchg xchg or outsb xlat adc negb inc pop cmp dec inc and jg mov (bad) out das jae imul or outsl cmpsl mov fisubr stc mov jle dec xor mov lods mov mov jle push ret (bad) shlb jo xor add add enter adc test add stos add (bad) pop sbb cmp stos cmp movsb nop aad movsl and sbb test cmpsb js xchg add loope jns sbb inc arpl ret dec jno jmp mov data16 push jecxz rclb or push sub mov xor aas jb (bad) mov mov mov inc scas and adc sbb test pop std add outsb popf mov pop cmp cmp leave jg push jnp repz pop out idivb push sub or jge inc push mov push adc xor mov loopne lret adc and lcall dec std ds cli shll pushf js insl jno fmul mov pop push stos pop mov mov or test dec cmp dec int ret (bad) and into loope movsb pop jecxz inc fs leave (bad) addr16 inc aas in push ficomp fwait and mov jnp or or cld push inc mov cmpsb xor data16 ret push std iret (bad) jmp repnz sub jl nop inc mov xchg pop pop test gs pusha cltd icebp imul jmp scas adc push jno setle daa in lock mov (bad) pop xor stos shll movsb lods je jae mov and sti cmp aaa data16 sub cs and jmp adc xlat insb xchg pop insl push in mov xor dec (bad) add pop lods rcrb cmpsb roll icebp mov mov neg sbb outsb mov dec jle stc xor dec movb jg sbb popf push add lret push insl loope fnop and mov mov arpl xorl adc mov mul push (bad) sub xchg sbb push xlat and leave pop jmp aad dec dec inc pop aam jp outsl data16 cs sbb and fcomi cmc jno cmovno outsl repz js add and push mov inc or push cmp mov iret xchg test (bad) cltd mov pop pop mov jmp or adc out mov (bad) xchg mov xor adc loope (bad) jge movsb cmp daa cmp sub out pop jns cltd cmp shll sahf jp outsl jae fnop push jnp stos lahf clc mov adc aam inc xlat les adc imul adc adc mov stos mov pop mov sub adc sbb clc dec rcrl add fdivrl in jbe ss test out mov mov inc pop out fcmovnbe inc stc fwait jl in and and or xor jle sbb std jnp sub ds push cmp xor dec adc cmp xchg jecxz ret and sbb sti push neg cmp push mov (bad) js test mov movsl movq inc push adc xor xor movsb aaa adc sbb into cld sbb mov and loopne test fsubrs int mov mov push push cli sbb push aas jmp and sbb xor shr dec mov adc les add inc fsts and cmp incb add adc fwait dec dec sar es ds and adc jg imull pop loope mov mov lret jmp movsb xchg mov or mov push pop push cmp and cmp mov mov jp xchg bound add in mov jae js inc jmp push (bad) lds mov inc cli pop jecxz fmuls xchg scas xchg sahf inc gs jg cmpsb cwtl xchg pop test jae mov push lahf sbb xchg dec pop inc mov jne pushf xor and pop jno adc rcr inc js (bad) mov and test out pop inc (bad) mov fs mov push lea xchg or clc (bad) cmp dec lret dec shll and dec imul mov out jecxz sub sarb mov pop (bad) mov xchg mov popf xchg jl loope cmp adc inc bound mov imul stos lods movsl xorb (bad) (bad) pop out nop (bad) in push addr16 push bound sbb cld das jmp loope jns sbb out rcll adc rolb testl in loopne jb push out mov mov mov icebp pop mov jae (bad) adc lds movsl and push adc (bad) sub insb mov or pop dec inc sbb out pop ja cwtl cmp cs (bad) mov mov pop bound stos sahf divl data16 mov xor cmp jecxz cmp lea mov xchg sub clc test pushf jmp test push mov jp dec daa add insl pop sbb push dec movsb repnz mov std cmpb test xlat jbe xor popa push dec cmpsb jno jmp cmp mov je or es mov mov dec sbb fidiv dec push mov xchg inc daa ret mov or pop notl push jne pop jbe jno mov inc inc imul xchg dec jnp pusha mov fsubl pop (bad) bound push popf push or push arpl test sbb xchg mov (bad) lock (bad) je pop sbbl push icebp adc mov xchg out ds or lret mov aaa mov mov cli loopne xchg ss cmp mov xchg sarl xchg jno mov (bad) mov mov sub mov lret mov stos (bad) lock loop sbb cld jnp jo xor lea or or popa inc mov sub cmp mov adc or xor stos adc or sub ljmp ret arpl aam and scas ds mov pop sub popf lahf cwtl das in into arpl jbe loope pop jno insl push pop and and sub (bad) mov es jmp mov std mov fstl mov ror out std mov stc or sbb adc xor iret insb jp adc mov xchg inc je and arpl repnz pop out daa in sub rcrb ret out lock in mov je cld sbbl pop pop sub pop inc cmpsl adc xor out push inc lret out movsl xor imul mov dec cmp and lcall rorl sub fnsave mov outsb test nop add loope sti enter cmpsl pop in addr16 fist push fstps jg ljmp cmpsb mov popa ljmp arpl sub repnz (bad) stos insb lock pop imulb inc (bad) sub and or cmp xchg int ret nop and adc or fisttpl call inc ret mov mov pop pop mov sbb mov jle jecxz add pop mov jg cltd mov push in adc sarl repnz jl and sbb les add repz push imul xchg loope stos inc adcl fisubrl aad push pop popf inc xchg cmp lcall mov jae or pop ss dec jp test push (bad) into aaa xchg xor cmp pop mov push sbb and mov xchg mov push loopne push xor inc cmp xor pop xor xchg mull xorl mov jg int3 xchg imul (bad) repnz xchg sbb (bad) pushf lahf cwtl das in int mov mov jb sbb adc adc call icebp cmpsb sub and or mov hlt cmp mov and dec fbstp pop and mov out jge and lea fiaddl aad inc int3 hlt pop insl xchg aaa rol push fld cli mov lock inc stos sub cmp sub and mov pop sub add inc push xchg xlat out mov fisub rcl aad lock push lret add roll xor dec sbb jl mov std sbb mov imul outsb into addl pop sti push lock aaa in dec loop lods sub mov (bad) leave inc pusha mov mov lahf inc (bad) pop jae dec xor cmp adc cs lock negb rcrb xlat es out mov xchg jnp jo mov je pop and popa loope sti sbb dec bound cmp fwait adcl fdivp jl js scas xchg inc inc pop enter push jmp dec inc (bad) ljmp (bad) adc rol scas jno xor cmp add and adc pushf sub fdivl mov sahf jge xchg adc xchg ret sbb or xchg jne mov sti jbe in fs call xlat jle call adc movsl mov pusha pop std fsubrp push test xlat aam sahf out movsb cmovb loopne es jns xor popa push push stos pop rclb divb push inc (bad) xor test mov sbbb pop negl xor sti fcomps das mov mov push adc outsb out mov repnz sub fisttpll repnz push test and or dec daa or mov cmc fucom lods mov (bad) inc fst mov or and jecxz adc popa cmp dec mov adc dec adc psubsw xor dec or shrb into mov lret cmp or fst shlb sbb jmp fiaddl inc je cmp mov (bad) mov imul adc arpl sub sbb cmp xor cmp inc outsb popf arpl adc gs test dec cmp xchg and pop dec adc inc xchg cmp cmp mov rorl leave mov lcall repnz cmpb mov jle scas idivb js xchg js push out test sub enter or mov aas add mov jb les cmp ja ret jg mov sbb xchg (bad) or inc dec popf mov mov xor mov clc rorb (bad) lret mov (bad) mov ret mov movsb push mov add mov push repnz fsubrp push xor lret inc cmp test outsb repz push cltd jno jmp in mov mov int hlt out aad lret or insl pop rolb leave stos jmp test cltd test sub push ret fs and mov adc jae js inc mov xlat inc jne adc pop subl pushf pop inc js iret jl cmp ljmp lods push jo push sahf sub (bad) std mov pop sub mov push out dec pusha xchg insb sub cld scas cmp mov iret (bad) jno mov rcrb xor mov in adc aad fistl cmp mov sub mov jmp mov sbbl mov mov icebp lods pop movsb loope inc fimul test inc inc mov add in ja inc (bad) push fadds (bad) fld pop push pop out fstl mov and jae cmp jno adc push jle out mov adcl js xor vmread gs mov cli fnstsw and ljmp push fcoml sub movsb js mov add mov pop adc dec repz imul aad addb aam out or pop jg sarl inc test shr jbe imul outsb inc sbb inc dec adc lret xchg inc xor fstl jb ret jae ret pushf cmp add mov cmpsb dec test ret jmp lds mov iret negb pop bound sub mov mov dec stos inc jle dec jl popa mov and cltd psrlw xchg stc fs arpl test neg jne sbb sbb mov sbb mov pop aaa jnp jae fwait lea xor data16 rcll mov push dec iret mov and int test xchg out cmp hlt pop xor and (bad) jmp mov jae (bad) adc lds movsl and push popa dec xchg mov mov imul or in cmpsl pop ja aam out pop push sti cwtl movsl or jns jle add push fisttpll imul add lret mov push mov or data16 push mov testb fistpll push xor lret js inc cmp jecxz hlt push addr16 in stc aad lret cmc call or sub inc shrd xchg sub xchg (bad) adcl in cltd pop bound cmpsl add lret mov das pop pop out in add outsl pop rclb test nop rcrb arpl icebp punpckhdq pop gs js cltd test in jne and cli jecxz xor ljmp out orb adc je add mov xchg fstl aad addb xor mov adc (bad) mov xor push lea insl inc hlt icebp lds jmp mov sar out jne dec fmul daa loopne xor frstor mov (bad) ret push cmpsb lds movsl sahf js dec shrl mov jbe jb bound sub inc mov lods xor shrb mov aas adc rcll cli test mov sub xchg in shl aas aam call mov scas cli add cmpsb leave adc pop lret mov cli and adc or jle imulb hlt das scas and out test je push mov dec mov push add jmp or rolb push movsb enter push adc insl out mov pop pop leave iret popa dec clc push pushf sbb repnz popf mov mov (bad) mov (bad) (bad) mov adc cs cltd mov jmp pop mov push lret mov or dec mov cli dec cmc jg dec int ret adc mov fs shl dec add jle aad dec dec stc call cmc outsb (bad) cmp or fimull sti std push inc mov xchg and (bad) adcl cld test mov inc xchg xor das pop jl ret imull (bad) imull sub sti sub shll fidiv or sub add cmp lock and into and jbe loope pop cs int3 mov test inc dec or test sub fstpl mov imul fldl cld sub adc jbe adc mov pop (bad) (bad) mov push inc repz arpl xor dec xor imul les xchg sbb cwtl stos mov sarl outsb dec scas (bad) hlt int3 dec inc pop addps push xor daa push inc mov scas and imul lea jg dec lock dec das cli (bad) jb cmp lret sbb movsl jge cmc push jno lock insb dec imul add rcl mov xchg jae mov mov cmp xchg lcall mov and dec add jl daa mov sbb push aas out mov jmp sub ja sbb rcll inc out adc cmp fldcw xchg mov xchg mov stos mov pop stc xchg aas sbb adc jg negl fs roll add test clc in ljmp inc aad dec sub shrl xor rcr jmp inc xchg imul fninit out int3 stos rol in ficom mov push out push mov loope push sub lea (bad) and push mov (bad) imul test lret dec push mov in push and mov cmp jnp dec arpl dec aas inc xchg inc mov ljmp or xor push mov test mov mov adc fcomi jb inc cmp dec sti add pop jecxz mov test popf aaa add mov shrb (bad) jnp (bad) nop gs add dec rcrl aad movsl xor es aam adc add cmpsl xchg cwtl dec ror es cmp jle mov imull push push movsl dec cmpsl jb ljmp loop xlat into ds xchg js jmp dec sub mov mov dec inc loope sahf pop xchg rol cmp mov in es adc push jb adc jnp and jmp mov daa pop xor movsl or xchg inc mov testl sub sbb ljmp ror push pushf imul adcl add (bad) ficomp negb jmp scas pop dec cmp lods xor test sub pusha push shll inc mov adc push in nop mov rcll inc push mov sub xchg and dec jle sbb add int pop movsb pusha dec cmpl ja scas call inc mov jns shlb aam xchg dec cli bound dec mov imul sti fcomps ljmp mov imul sbb fiadd call scas das mov stos push push and scas retw dec in (bad) mov (bad) push ffree int jno data16 sub (bad) mov sub mov (bad) mov dec leave out cli or cmp push mov and iret loop popa sbb add in or jbe jl inc (bad) sbb inc jns sbb pop xchg dec mov rolb ficomp pop or fs add test cmp push mov sbb jl ret imull nop mov hlt call fidivl inc fwait lcall adc int3 je add pusha inc pminub fptan jle jae mov jne hlt cld or ret (bad) pop add fistpl jae pop inc loope cs jle (bad) jno cmp imul jne imul jl repz push fldt nop jno loop bound push xor (bad) xor add cmp fiaddl aas ja inc je imul add fwait inc pusha fsubrs pop outsb push in movsb xchg mov xor adcl rcrl add scas rep cmpsl jmp gs jecxz mul push (bad) outsl cmp leave or stc mov loop leave sahf cs (bad) dec dec mov (bad) fisubr pop push movsl jge cmp add mov cmpsl xchg push pop mov xchg int3 fstpl mov imul mov test stos sti and cld in ja sbb adc jbe mov xchg cltd xchg andl lds js adc (bad) jecxz mov xchg adc decb xchg xlat ljmp inc and jg mov add lods neg inc scas mov jg (bad) addr16 inc lret roll xor dec sbb jecxz push out jg and jns sbb in mov mov cltd pop sti scas std sbb mov icebp popf (bad) jge out je (bad) push pop into imul push add std push orl or aad cwtl push push dec pop in mov pop mov ror jbe loope das cltd int3 mov add ja mov add rorl lds cld aaa shlb push popl (bad) shlb mov and in dec inc adc sbb cmp mov sbb cmpsb jmp lahf getsec sub movsl sbb jns xchg pusha (bad) std cmp xlat ja xor pop and ret cmpsl jb ljmp loope xlat mov fnstenv pusha sub push aas jge loopne stos inc mov cmp (bad) fnop push push push or bound pop repz hlt dec jecxz mov push js cltd xchg aaa aam inc jp adc mov and stos imul xor xor xlat bswap adc add call aas push jns lret js inc jle lret push gs addl les (bad) stc (bad) sbb into adc sub or jl push arpl inc xor inc fs loope imul push clc dec and cwtl mov stos xchg fwait cmpsl andl clc xchg xchg add js cltd fwait or pop xor dec mov scas mov inc or mov adc out push repnz jmp add push lcall inc outsl mov outsb sub cmp ds in aad jns outsb adc push popa insb mov sti int mov lock pop push lcall daa pop (bad) je pop rcrl lods addr16 ret movsb or out pop ljmp rcr jl sbb popa out push pop sbb mov xor pop inc sbb dec sub sbb mov adc jecxz mov push out sub xchg sbb inc sbb outsl push test jg jg (bad) imul add iret add add add add add add add add add add add sbb sub add (bad) jo add xor add add add mov add add sbb test add into mov add add sbb push int3 add sub add pusha add add add add add add add add mov add mov add mov add add mov mov mov mov mov mov mov pushf mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jecxz mov mov mov mov mov add lods lods lods jo jo dec dec aas aas aas cmp cmp aaa aaa aaa aaa aaa aaa pushf aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa jecxz aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa cmp cmp dec insl insl insl movsb movsb movsb pushf add add add outsl inc inc inc ss cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jecxz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp aaa aaa ss cmp push push lahf lahf lahf pushf movsb movsb movsb dec dec dec aaa aaa aaa aaa aaa aaa inc inc inc pusha pusha pusha ja ja addl test test test test (bad) addl addl addb jg jle jge jge jge jl jl jnp jecxz jp jp jns jns jns ja js ja jbe ja jbe jne jne je jae jae jb jb jb jb jno jno jo outsl outsl outsl outsl outsl outsl outsb outsb outsb insl insl insl insl insl insl insb insb insb imul imul push push imul push addr16 gs arpl arpl bound pop pop push push push inc inc inc aaa aaa aaa xor inc xchg xchg xchg add add dec ss fs rcl aam aam aad aad aad aam aam aam rcl rcl rcl rcl rcl rcl rcl rcl rcl rcl iret iret ror iret jecxz into into int int int3 int3 lret lret lret lret leave leave leave enter mov (bad) ret mov mov stos mov movsb mov mov cmpsb mov mov scas cmpsl mov stos test lods stos lods stos stos stos stos stos test test cmpsb cmpsb movsb movsb movsl mov mov lahf mov popf popf pushf pushf popf fwait fwait pushf pushf cltd lcall xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg nop nop xchg (bad) (bad) nop (bad) (bad) (bad) mov jae push push pop ds inc xchg xchg xchg add push xor inc js js mov fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) fcomp fcomp fcomp fcomp fcom xlat xlat xlat xlat xlat xlat xlat xlat (bad) and aam aam fst rcl rcl rcl rcl ror into into int3 leave enter (bad) mov mov jnp jp cmpsb insl push movsb addr16 mov inc mov inc mov inc mov dec mov arpl xchg lods stos stos lods lods lods lods stos lods stos stos stos test test movsl cmpsb movsb movsb movsl mov mov sahf lahf sahf sahf sahf popf popf popf fwait fwait fwait lcall cwtl cltd xchg xchg cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg (bad) (bad) nop xchg inc inc inc xor inc popf popf popf add ja ja cmp cmp cmp jne ret fcmovnu (bad) (bad) (bad) (bad) (bad) fcmovnu and fcmovnu fcmovu fstp fcmovu (bad) (bad) (bad) (bad) fcomp fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl ror mov xchg subl dec sub inc and pop xchg aas push xchg ds ds ds ds xchg aas pop xchg inc sbb and cmp insb push movsl (bad) jb xchg mov stos stos stos stos stos stos stos test test cmpsl cmpsl cmpsb cmpsb cmpsb movsb movsb movsb mov mov lahf mov pushf popf pushf pushf pushf fwait fwait fwait lcall cwtl cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg mov ds push add and inc inc ss pop mov fcmovnu fstp fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) fnop fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat (bad) aad ror enter mov insl mov and adc cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp cwtl inc and push cmpsb mov lcall stos stos stos test cmpsl cmpsb cmpsb cmpsb movsl movsl movsl mov mov lahf mov popf sahf pushf pushf pushf fwait fwait pushf lcall cwtl cltd xchg xchg cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg aaa aaa aaa cmp cmp frstor cltd cltd cltd cmp cmp aas aas xchg xchg xchg fcomp fcomp (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fcomp fcomp fcom (bad) rcl lret mov mov sbb cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp cwtl inc sbb and es dec sub es inc sbb adc cmp lcall xchg mov stos stos stos test test movsl cmpsb movsb movsb movsl mov mov mov popf popf sahf pushf pushf popf and lcall xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg jne jbe inc inc xor imul add push push xor mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) aad iret lds dec and adc adc adc adc adc push movsb bound jb scas subl mov xchg mov subl push ss dec and adc inc sbb pop test mov stos stos stos test cmpsl cmpsb cmpsb cmpsb movsl movsl movsl mov mov mov sahf sahf sahf pushf pushf popf fwait fwait pushf lcall cwtl cltd xchg xchg cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xor dec push pop push ss enter loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovbe rcl ret movsl cwtl cmpsb pusha inc cwtl inc sbb adc adc adc adc cmpsl dec mov jae mov enter (bad) mov mov (bad) (bad) rol sarb mov mov xchg stos mov push xchg aas pop xchg cmp popf pop cmp cmpsl movsb lods lods lods lods lods lods stos stos stos test test cmpsb cmpsb movsl movsl movsl movsb movsb movsb mov mov lahf lahf sahf sahf sahf popf popf popf fwait fwait pushf fwait fwait fwait lcall xchg cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg mov aaa aaa aaa cmp cmp stos stos add dec ss loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcom aad stos sahf movsl pusha inc xchg aas pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp test xchg mov rcl iret rcl ror iret iret into into into int int int3 int3 lret lret lret leave leave leave mov (bad) (bad) (bad) (bad) rol mov mov stos movsl lods lea bound sbb ds fwait push das movsl xorl scas lods lods lods lods lods lods stos stos stos test test cmpsb cmpsl movsl movsl cmpsb movsb movsb movsl mov mov lahf mov popf popf pushf pushf pushf lcall cwtl cltd xchg xchg cwtl xchg xchg xchg xchg xchg xchg bound cmp cmp cmp mov add dec dec dec aaa aaa aaa imul into into loope loope loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmove mov cwtl inc sbb adc adc adc push mov je mov aam rcl rcl rcl rcl rcl rcl ror iret iret into into into int int int3 int3 lret lret lret leave leave leave enter mov ret ret ret rol mov mov mov cltd inc and adc (bad) jb pop cmpsb scas scas scas scas scas scas lods lods lods stos stos stos test test cmpsb cmpsl cmpsb cmpsb cmpsb movsl movsl movsl mov mov lahf lahf sahf sahf sahf popf popf popf fwait fwait pushf lcall cwtl cltd xchg xchg cwtl xchg xchg xchg fs cmp aaa aaa mov add dec dec dec aaa aaa aaa imul iret iret loop loop loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) xlat ror mov and adc adc adc push mov mov lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aad aad aad aam aam rcl rcl rcl rcl iret iret iret into into into int int int3 int3 lret lret lret lret enter mov (bad) (bad) ret rol sarb mov mov inc sbb cmp xchg ds xchg lods stos mov mov scas scas lods lods lods stos stos lods stos stos stos test test movsl cmpsb movsb movsb movsl mov mov mov popf popf popf pushf pushf pushf lcall xchg xchg data16 cmp aaa aaa mov add dec dec dec aaa aaa aaa imul iret iret loop loop loop loope loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) fbld (bad) (bad) in (bad) (bad) fcmovne mov xchg cmp xchg cmp xchg cmp xchg sbb xchg cmp xchg cmp xchg ds sahf mov iret int3 fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad aam rcl rcl rcl rcl rcl rcl iret iret iret into into into int int int3 int3 lret leave leave lret enter (bad) (bad) (bad) rol rol mov xchg mov adc ds xchg mov mov scas mov scas scas lods lods lods lods lods lods stos stos stos stos stos stos test test cmpsl cmpsl cmpsb cmpsb cmpsb movsb movsb movsb mov mov lahf mov pushf popf pushf pushf pushf cwtl cwtl cwtl addr16 cmp aaa aaa mov add dec dec dec aaa aaa aaa imul ror (bad) loop loop in loop loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) aam xchg test adc adc adc adc js int (bad) (bad) (bad) fcomp fcomp fcomp fcomp fcom xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad aad aam aam rcl rcl rcl rcl iret iret iret iret iret into into into int int3 int3 lret lret lret lret enter mov ret ret rol rol mov jne inc and adc push mov mov mov mov mov mov scas scas scas lods lods scas lods lods lods stos stos stos test test cmpsb cmpsb movsl movsl movsl movsb movsb movsb mov mov sahf lahf popf popf sahf cltd cltd lcall aaa aaa aaa mov add add in add add aaa aaa aaa imul rcl jecxz jecxz jecxz jecxz jecxz loop loop loop loop loope loope loope loope loope loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) lret lds pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp cwtl aas pop stos push iret mov fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fnop fcomp fcomp fcom xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aam aam aam rcl rcl rcl rcl rcl rcl iret iret iret into into into int int lret lret lret enter mov (bad) sarb xchg cmp xchg cmp lcall mov mov mov mov mov mov mov mov mov scas scas lods lods lods lods lods lods stos stos stos test test cmpsl in movsl movsl movsb movsb movsb mov mov pushf pushf imul sbb mov add dec dec dec aaa aaa aaa insb insb insb rcl shl in jecxz jecxz jecxz jecxz loop loop loop loop loop loope loope loope loope loope loope loopne loopne loopne loopne loopne (bad) rol mov cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp pushf dec and xchg (bad) (bad) rcr fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fcomp fcomp fcomp fcomp fcom xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl rcl rcl rcl rcl rcl iret iret iret int int int3 int3 lret lret lret lret leave leave leave mov mov push xchg aas pop xchg cmp xchg cmp xchg aas push bound mov mov mov mov mov mov mov mov mov scas scas mov scas scas lods lods sbb stos test test cmpsb cmpsl movsl movsl cmpsb mov mov push cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa insb insb insb rcl shl in in jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope loope loope loopne loopne loopne (bad) sarb cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp lret mov fcmovnu fcmovu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad aam rcl rcl rcl rcl rcl rcl iret iret iret into (bad) into int int in lret leave leave leave mov scas subb xchg cmp xchg cmp sbb fwait dec sub mov mov mov mov mov mov mov mov mov mov scas scas scas scas lods lods lods lods stos stos stos test test cmpsl cmpsl movsl movsl movsl movsb movsb movsb lahf lahf mov cmp aaa aaa aaa mov add dec dec dec aaa aaa aaa insb insb insb rcl shl in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope loope loope loopne sarb xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds stos imul rcr (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl rcl rcl rcl rcl rcl es iret into into into int int int3 int3 lret mov cltd inc pop xchg cmp xchg cmp xchg cmp cwtl pop sbb mov mov mov mov mov mov mov mov mov mov mov scas scas scas lods lods scas stos stos lods stos stos stos test test cmpsb cmpsl mov insb cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa insb insb insb rcl shl in in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loope loope loope loopne sarb xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg aas pop mov pop xlat int fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) es fcomp fcomp fcomp fcom xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl rcl rcl pop rcl rcl ror iret iret into into into int3 int3 int3 leave mov inc pop xchg cmp xchg cmp xchg cmp xchg cmp mov mov mov mov mov mov mov mov mov mov mov mov scas scas scas lods lods lods lods lods lods stos stos stos test movsb insl insl insl cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa insb insb insb rcl shl in in in in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loope loope loopne (bad) enter dec xchg ds cmp xchg cmp xchg cmp xchg cmp xchg aas pop mov pop fmul lret fstp fstp es fstp (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu fstps fnop fcomp fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam aam aam rcl rcl rcl rcl iret iret iret into into into lret scas jg cwtl inc sbb adc adc cltd mov mov mov mov mov mov mov mov mov mov mov scas scas scas scas scas lods lods lods stos stos stos cmpsb cmpsb cmpsb outsb outsb outsb cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa insb insb insb rcl shl out out in in in in in in in in in in in jecxz jecxz jecxz jecxz jecxz loop loop loop loope fcmovnbe shlb mov inc sbb adc adc push scas jb (bad) int3 (bad) (bad) (bad) pop (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aad aad rcl rcl rcl rcl rcl ror mov xchg ds cmp xchg cmp xchg cmp pushf dec sub mov rol mov mov mov mov mov mov mov mov mov mov mov mov scas scas scas scas scas test jo cmp aaa aaa aaa mov add dec dec dec aaa aaa aaa insb insb insb rcl shl out out out out in in in in in in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loopne fstpl mov adc adc adc inc rol mov (bad) (bad) (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fnop fcomp fcomp fcom xlat xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad aad rcl rcl iret into mov das xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp fwait dec and sarb ret rol rol mov mov mov mov mov mov mov mov mov mov mov stos lods jo jno cmp aaa aaa aaa mov add dec dec dec aaa aaa aaa insl insl insl aam aam out out out out out out in in in in in in in in in in in in jecxz jecxz jecxz jecxz loop loop int mov pop cwtl inc sbb adc adc sub cmpsl cltd (bad) fcmovnu (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp popf fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fcomp fcomp fcomp fcom xlat xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aam aam sarl sbb adc adc sub (bad) mov (bad) (bad) (bad) rol mov mov mov mov mov mov mov mov mov lods lods scas jno jb cmp aaa aaa aaa mov add dec dec dec aaa aaa aaa insl insl insl aam aam out out out out out out out out out out in in in in in in in in in in in in jecxz jecxz (bad) enter push xor adc adc sbb lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fnop fcomp fcomp fsubs fcom xlat xlat (bad) (bad) (bad) ror enter popf dec sub adc adc adc lcall enter mov ret ret ret rol mov mov mov mov mov mov mov mov jae cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa insl insl insl aad aad call out out out out out out out out out out out in in popf in in in in in in in jecxz jecxz (bad) iret mov and adc adc xor movsb xchg fstp fsub loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp frstor (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fcomp fcomp xlat xlat ror lret mov adc cmp xchg cmp xchg cmp xchg cmp xchg cmp les int int lret lret lret enter mov (bad) (bad) (bad) rol rol mov mov mov mov mov je cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa insl insl insl aad aad call out out out out out out out out out out out out in in in in in in in in in in in loop aad mov inc sbb cmp xchg cmp xchg cmp xchg cmp cwtl aas pop test test fcmovu loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) fcomp ror leave mov aaa xchg ds xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg aas pop lods jb lret iret iret iret into into into int int int3 int3 lret lret lret leave leave leave enter mov (bad) (bad) rol mov mov mov mov mov jne cmp cmp aaa aaa popf mov add aaa aaa aaa insl insl insl (bad) (bad) (bad) jmp call call out out out out out out out out out out out in in in in in in in in in loopne sarb inc push xchg cmp xchg cmp xchg cmp xchg cmp cltd inc sbb mov (bad) loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu (bad) fcom mov push xor adc adc adc adc jle int3 lret rcl rcl rcl iret iret iret iret iret iret into into into int3 int3 int3 lret lret lret leave leave leave mov (bad) (bad) (bad) rol rol mov mov jbe cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa insl insl insl (bad) (bad) (bad) jmp call call call out out out out out out out out out out out in in in in in in in in (bad) sarl popf dec and cmp xchg cmp xchg cmp cwtl inc sbb (bad) aad mov (bad) loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu (bad) aad mov sahf dec sub adc adc adc adc inc (bad) mov aam rcl rcl rcl rcl rcl rcl rcl rcl into into into int int int3 int3 lret lret lret leave leave leave mov (bad) (bad) (bad) rol rol mov js cmp aaa aaa aaa stc mov add aaa aaa aaa insl insl insl (bad) (bad) (bad) jmp jmp call call call out out out out out out out out out out in in in in in in in in loope fmul ret jl pop cmp adc cmp xchg cmp xchg ds jo ret rol mov fstp loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp outsb fstp (bad) (bad) fnop rcl (bad) lods mov inc and adc adc adc adc and lret aad aam aam aam rcl rcl rcl rcl rcl ror iret iret into into into int3 int3 stc lret lret lret lret enter mov ret ret ret mov jns cmp aaa aaa aaa mov add dec dec dec aaa aaa aaa insl insl insl (bad) (bad) (bad) jmp jmp jmp jmp call call out out out out out out out out out out out out in in in in in jecxz (bad) aad mov mov arpl sbb adc pop popf dec es jno movsl xchg iret mov fcmovbe rcr fcom fstp (bad) fstp (bad) (bad) fstp (bad) fstp (bad) (bad) fcmovbe lret xchg xchg xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp cwtl inc sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl rcl rcl rcl rcl rcl iret iret iret into into into int int lret lret lret leave leave leave mov mov jnp cmp aaa aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb xlat xlat xlat ljmp jmp jmp jmp call call call out out out out out out out out out out in in in in outsb in in loope fcmovnbe int3 lret scas mov pop cmp xchg cmp xchg cmp popf dec sub mov gs mov cmpsb xchg leave scas mov mov enter jge sahf dec sub adc cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds movsl pop lds fcomp fcom xlat xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl rcl rcl rcl rcl rcl iret iret iret int int int int3 int3 int3 lret enter ret jl cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb xlat xlat xlat ljmp jmp jmp jmp jmp call call out out out out out out out out out out out out out in in in in in in jecxz (bad) aam sarl mov pop movsl pop cmp dec sub pop xchg cmp xchg ds cwtl inc sbb and sub pop aaa mov das cltd inc sbb cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds mov (bad) aad iret (bad) fnop fcomp fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad aam rcl rcl rcl rcl rcl rcl iret iret iret into into into int int int3 int3 lret lret lret (bad) jge jge cmp aaa aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb outsb xlat xlat ljmp ljmp ljmp jmp jmp jmp call call out out out out out out out out out out out out out in in in in in stc loop (bad) fcmovnbe int mov mov bound cmp and inc sbb inc sbb adc cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds mov mov ror (bad) (bad) fcmovu (bad) (bad) (bad) (bad) fnop fcomp fcomp fcomp fcomp xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl rcl rcl rcl rcl rcl iret iret iret into into into int int (bad) enter cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb xlat xlat xlat ljmp ljmp ljmp jmp jmp jmp call call call out out out out out out out out out out out in in in in in in in in in jecxz loop loopne (bad) (bad) iret xlat leave ret sarb (bad) cmpsb xchg rcrl xchg ja sahf dec sub adc adc adc adc adc adc cmp mov fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fnop fcomp fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad cmp aam rcl rcl rcl rcl rcl rcl iret iret iret lret jg jg cmp aaa aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb fcomp fsubr jmp ljmp ljmp ljmp jmp jmp jmp jmp call call out out out out out out out out out out out out in in in in in in in in in in in jecxz jecxz jecxz loop loop loopne (bad) (bad) fcmovu fcmovu fcmovnbe iret les xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp cltd inc sbb lcall fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fnop fcomp fcomp fcom xlat xlat xlat xlat xlat xlat xlat xlat (bad) test xor aam rcl rcl rcl rcl lret lret lret addb aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb fcomp fsubr jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call call call out out out out out out out out out out out in in in in in in in in in in in jecxz jecxz jecxz jecxz loope loope ret mov inc sbb adc adc adc adc adc inc and test (bad) fstp fstp (bad) (bad) (bad) (bad) test xor fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) fcomp fcomp fcomp fcomp fcom xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl ror int addl mov add aaa aaa aaa outsb outsb outsb fcomp fsubr jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call call out out out out out out out out out out out out in in in in in in in in in in in in jecxz jecxz (bad) mov and adc adc adc adc push lahf xor rol mov (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fnop fcomp fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad aad iret iret iret (bad) (bad) (bad) cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb fcomp fsubr jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call call call out out out out out out out out out in in in in in in in in in in in jecxz aam mov ds cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp cwtl aas sbb (bad) int3 (bad) (bad) fstp (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) fnop fcomp fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) rcl rolb cmp aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb (bad) fldlg2 in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call call out out out out out out out out out out out out in in in in in in jecxz loope test xchg cmp xchg cmp xchg das adc adc adc sbb pushf fcmovnbe rcr (bad) loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat rcl roll aaa aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb (bad) fldlg2 in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call call out out out out out out out das out out out out out out in in in (bad) rcll cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg inc pop test inc lret scas movsb (bad) fabs loopne loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu jbe fcmovnu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) fnop fcomp fcomp fcom rcl test aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb (bad) fldlg2 in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp das jmp jmp call call call out out out out out out out out out out out in in loop fnstsw pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp lahf dec sub sahf (bad) (bad) fsub loope loope loope loope loopne loopne loopne loopne loopne loopne (bad) (bad) fbstp (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) fnop fcomp fcomp fcom rcl test aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb (bad) fldlg2 in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp das jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call call call out out out out out out out out loope ret pushf dec and adc adc adc inc aam mov loop loop loop loop loope loope loope loope loope loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) (bad) aam aam test aaa aaa mov add dec dec dec sub aaa outsb outsb outsb (bad) fldln2 in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call call call out out out out out out in jecxz mov mov adc cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds int3 (bad) jecxz jecxz jecxz loop loop loop loop loop loope loope loope loope loope loope loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu aam aam test cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb (bad) fldln2 in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call in jecxz fcmovu aad fcmovne enter fcmove (bad) fxch (bad) iret mov test inc xchg ds cmp xchg cmp xchg cmp xchg cmp xchg cmp aad mov jecxz jecxz jecxz jecxz loop loop loop loop loop loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu aad aad test aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb (bad) fldln2 in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jb in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp call (bad) (bad) sarl jne jns lods insl dec lods push lods push lods push stos addr16 lahf dec sub adc adc adc sub movsl xchg loope fsub jecxz jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope loope loope loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp fstp (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu (bad) (bad) (bad) xchg aaa aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb fnstenv in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp (bad) ror scas mov pusha ds dec daa cltd inc sbb adc cmp xchg cmp xchg ds ds cmp xchg cmp xchg cmp xchg cmp cwtl inc sbb mov in in in jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope loope loope loopne loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) xchg aaa aaa aaa jb mov dec dec dec aaa aaa aaa outsb outsb outsb (bad) fldln2 in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp mov ljmp ljmp aam mov subl xor adc cmp xchg cmp xchg cmp xchg cmp xchg cmp mov aas test inc cmpsb pop cmp inc sbb adc pop mov xlat (bad) mov in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loope loope loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fisubr fstp fstp fstp (bad) (bad) (bad) xlat xlat xlat xchg aaa aaa aaa mov add dec dec dec aaa aaa aaa outsl outsl outsl fcmovu (bad) out out out out out in in in in in in in in in in in in in in in in in in in in in in in in mov in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp cmpsb xchg test sbb cmp xchg cmp xchg cmp xchg icebp adc adc inc sbb mov scas mov lret (bad) fxch ret aad mov xchg pop ds cmp fwait dec and loop fsubp in in in in in jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp fcomp xchg aaa aaa aaa mov add dec dec dec aaa aaa aaa outsl mov fcmovu (bad) out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp icebp jmp jmp jmp jecxz xlat lds xchg ds xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp mov imul (bad) in call call out out jecxz (bad) sarb lahf dec sub adc push into mov loope (bad) in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loope loope loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fcomp fadds mov aaa aaa mov add dec dec dec aaa aaa aaa outsl outsl outsl fcmovu (bad) out out out out out out out out out out out out out out in in in in in in in in in in in in in in in icebp in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp loopne enter push xor ds cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp mov lret call jmp jmp call call out out jecxz ror mov sub cmp cwtl inc sbb popf loopne fsub in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcompp (bad) xchg aaa aaa aaa mov add dec dec dec aaa aaa aaa outsl outsl lods fcmovu (bad) out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp out (bad) mov cmpsl pop cmp cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp mov shr call jmp jmp jmp jmp call out out out aam mov xor adc cmp movsb xchg loope fsub in in in in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) (bad) fcmovu (bad) cmp lods aaa mov add dec dec dec aaa aaa aaa outsl outsl outsl fcmovnu fucomi out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp (bad) lret mov pop cltd inc sbb adc adc adc sbb ror jmp ljmp jmp jmp jmp jmp call call (bad) ret mov cmp xchg cmp xchg aas pop cmpsb pop cmp lods sahf loop fucom in in in in in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loope loope loope loope loopne loopne loopne loopne loopne (bad) (bad) (bad) fcmovu mov aaa aaa aaa mov add dec dec dec aaa aaa aaa outsl outsl outsl fcmovnu fucomi out out out out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp xchg lahf dec sub adc adc cmp xchg cmp xchg cmp xchg cmp aam mov out ljmp ljmp ljmp jmp jmp jmp call call mov inc push xchg cmp xchg cmp xchg cmp cwtl inc sbb mov jecxz in in in in in in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loope loope loope loope loope loope loopne loopne loopne loopne loopne fcmovu mov aaa aaa aaa mov add dec dec dec aaa aaa aaa outsl outsl outsl fcmovnu fucomi out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in in in xor in in in in in in in in in jmp fnop lret push xchg aas pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp pushf dec and xchg (bad) out fucomp ljmp ljmp ljmp ljmp jmp jmp jmp jmp scas mov cmp xchg cmp xchg cmp lcall ror in in out in in in in in in in in in in in in jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope loope loopne loopne fcmovnu mov aaa aaa aaa mov add dec dec dec aaa aaa aaa outsl outsl outsl fcmovnu fucomi out out out out out out out out out out out out out out out xor out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in in in in in in in in in jmp jmp push cs cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds stos inc fld mov jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp mov cmp xchg cmp xchg cmp xchg cmp mov sahf in loope out out out out in in in in in in in in in in in jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope loope (bad) mov aaa aaa aaa mov add dec dec dec aaa aaa aaa outsl outsl outsl fcmovnu fucomi out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in in in in in je jecxz rorb cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp fwait inc and xchg jl loopne jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp lods imul push xchg cmp xchg cmp xchg cmp xchg cmp cltd inc sbb shl out out out out out out in in in in in in in in in in in in jecxz jecxz jecxz jecxz loop loop loop loop loop loop loope loope (bad) mov aaa aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) lock out out out out out out out out out out out out out out out out out out out out out je out out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in jecxz aam jne cwtl inc sbb adc adc adc aaa aam scas jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jo xchg aas pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp sarb out out out out out out out out out in in in in in in in in in in in in jecxz jecxz jecxz jecxz jecxz loop loop loop fstp mov aaa aaa aaa mov add dec dec dec je aaa jo jo (bad) lock out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out in in (bad) lds adc cmp xchg cmp xchg cmp xchg cmp xchg cmp cwtl aas pop mov pop loopne shr in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp ljmp push xchg aas pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp pushf dec and lahf (bad) in loop out out out out out out out out out out out out in in in in in in in in in in jecxz jecxz jecxz jecxz jecxz loop fstp fisttpll cmp aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) lock out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out in in fld mov cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp fwait inc push ret out loopne in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp lods imul adc adc adc jb (bad) out out out out out out out out out out out out out out in in in in in in in in in in in jecxz jecxz jecxz jecxz (bad) fimul cmp aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) lock lock out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out in in fld mov cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp mov movsb ljmp in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ds out adc cmp xchg cmp xchg cmp xchg cmp xchg aas pop je pusha loopne shr call call out out out out out out out out out out out in in in in in in in in in in in in (bad) fimul cmp aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) lock lock out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out in in fld mov cmp xchg cmp xchg adc adc aas fcmovnb mov in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp stos mov adc cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds mov pop loopne shr call call call out out out out out out out out out out out out in in in in in in in in in (bad) mov aaa aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) lock lock out out out out out out out out out out out out out out cs out out out out out out out out out out out out out out out in (bad) ret inc xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp loopne int in in in in in in in in in in in in in in in in in in in in in in in in in in in in mov in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp out enter dec and cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds mov pop loopne shr jmp call call call out out out out out out out out out out out in in in in in in in (bad) fisttp cmp aaa aaa mov add dec dec dec aaa aaa aaa jo jo fstp icebp icebp icebp icebp icebp lock lock lock out out out out out out out out out out out out out out out out out out out out out out out out jecxz (bad) mov push cwtl aas pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg aas pop mov popa in xlat in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp in fdivrl xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg ds mov pop loopne shr jmp jmp jmp call call call out out out out out out out out out out in in in loopne loopne mov aaa aaa mov add add add add add aaa aaa aaa jo jo fstp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out out out out out out out out out out out out out out out out mov out out out out jmp jno inc sbb adc adc sbb fucomi in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp ljmp xchg ds cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg aas pop mov (bad) (bad) jmp jmp jmp jmp call call call out out out out out cs out out out in in loopne mov aaa aaa aaa mov add dec dec dec aaa aaa aaa jo jo fstp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock lock out out out out out out out out out out out out out out out out out in ljmp daa xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp cltd inc sbb fucomp out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in ljmp push xor adc adc adc sbb fucomp ljmp jmp jmp jmp jmp call out out out out out out out out out out out out loope loope mov aaa aaa mov add dec dec dec aaa aaa aaa jo jo fstp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock lock out out out out out out out out out in in fmul shrb xchg cmp xchg cmp xchg cmp xchg cmp cwtl inc sbb fucomi out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in outsl in in in in in in in cmc in in in in in in in out fidivr sbb cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp popf dec and out ljmp ljmp jmp jmp jmp jmp call call out out out out out out out loope mov aaa aaa mov add dec dec dec aaa aaa aaa jo jo fstp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out out out out out out out call jns inc sbb cmp xchg cmp xchg cmp xchg aas push mov pop in (bad) out outsl out out out out out out out cmc out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp leave shrl cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xlat ret jmp ljmp ljmp jmp jmp jmp jmp call call call out out out loop mov aaa aaa mov add dec dec dec aaa aaa aaa jo jo fstp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock lock out out outsl out out out in in fadd cmc cmpsl pop cmp cmp xchg cmp xchg cmp xchg cmp (bad) leave out out in out out out out out out out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in call mov adc adc adc adc push ljmp ljmp ljmp ljmp jmp jmp jmp call call out out out loop loop mov aaa mov add dec dec dec aaa aaa aaa jo jo (bad) repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp outsl icebp icebp icebp icebp icebp icebp icebp cmc icebp lock lock out out jmp jg dec and adc adc scas in jmp out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in in in in in in in in in in in jmp enter dec xchg aas pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp iret mov ljmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp call call jecxz mov aaa aaa mov add dec dec dec aaa outsl aaa jo jo (bad) cmc repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out fmulp (bad) mov push cltd inc sbb adc pop ret xchg (bad) jmp out out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in out in in in fcmovb nop jnp dec and adc adc adc sbb fcmovbe jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp ljmp jmp jmp jmp call jecxz lea aaa aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock jmp aad lods test pop xchg cmp xchg cmp xchg ds enter in out out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in ljmp pop xor cmp xchg cmp xchg cmp xchg cmp xchg cmp aaa cmp xchg aas push lods imul call jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp jmp jecxz jecxz lea aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock in mov test aas cwtl aas pop xchg cmp xchg cmp fwait inc and aad out out out out out out out out out out out out out out out out out out out out out out out out out out out out aaa out out out ljmp inc cwtl aas pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg aas pop cmpsb pop cmp mov jmp in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp jmp lea aaa aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) repnz repnz icebp icebp icebp icebp icebp out icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock jmp jecxz mov stos fs cltd inc sbb adc aaa sub xchg and shr jmp out out out out out out out out out out out out out out out out out out out out out out in in jmp cmpsl stos addr16 cltd inc sbb adc adc adc cmp loop in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp in lea aaa aaa aaa mov add dec dec dec aaa aaa aaa jo jo fsubrp repnz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp aaa icebp icebp lock lock in mov popf dec and adc test mov in in jmp out out out out out out out out in in in ljmp lahf lea sbb adc adc adc sub mov in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp in lea aaa aaa aaa mov mov dec dec dec aaa aaa aaa jo jo (bad) repz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock jmp loopne leave ret xchg (bad) cmpsl pop cmp cmp cmpsb pop cmp lods pushf fld mov leave rcr mov fwait xchg daa xchg ds cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp mov mov in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp lea aaa aaa aaa mov add dec dec dec aaa aaa aaa jo jo (bad) repz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock out out out ljmp mov cmp inc sbb sub cmpsb pop cmp and adc adc adc adc adc sbb (bad) jmp in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in cli jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp cmp cmp aaa aaa mov add dec dec dec aaa aaa aaa outsb outsb outsb fstp (bad) repz repnz repnz repnz icebp icebp icebp inc icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock in in call mov jae movsb pop ss dec and push xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp popf dec and mov fsqrt in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp mov cmp cmp cmp add add push ss (bad) (bad) repz repz repz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock out out in call xlat mov mov pop stos inc cmpsb pop cmp sub push sub dec and adc cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp (bad) sahf mov loop in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in enter jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp (bad) fistpll jle cmp aas aas aas scas scas scas add jo ss push push mov icebp repz repz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out in ljmp aam iret (bad) fcmovnb mov mov aam lods (bad) mov leave mov movsb pop xor cmp xchg cmp xchg cmp xchg cmp xchg cmp aam scas jmp call in enter in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ss dec dec add add sahf sahf sahf cmp cmp mov out repz repz repnz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out out out out in in out in in out in in out in in in in jmp call aad scas mov cmp adc adc sbb aad in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp out out cmpsl cmpsl dec dec dec ss jo add dec dec dec xor push mov out repz repz repz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock lock out out out out out out jnp out out out out in in call stos mov pop lahf dec sub adc push lods insb dec fnop leave out in out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp leave imul aaa aaa aas aas aas test add cmp cmp insb insb insb (bad) out out out repz repz repz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp ret icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp jnp icebp lock lock out out out out out out out out out out out out out out in jmp loope into lret scas outsb push sahf dec daa fwait inc and xchg call out out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in ljmp jle ds aaa aaa outsb outsb outsb add arpl aaa aaa cmp cmp insb insb mov in icebp icebp hlt hlt hlt repz repz repz repnz jnp repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out out out out out out out out out out jmp in into (bad) enter xchg jge mov out out in out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in (bad) les inc inc inc xor dec scas scas scas add push aaa aaa aaa cmp cmp push mov (bad) (bad) (bad) ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu fcmovu (bad) (bad) (bad) (bad) (bad) (bad) (bad) fnop fcom rcl aam int (bad) (bad) (bad) fcomp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fnop fcomp fcomp fcomp fcomp fcomp fcomp fcomp fcomp fcomp fcomp fcomp fcomp fcomp xlat xlat xlat rcl rol rol cwtl cwtl popa popa popa cmp ss dec dec movsb movsb movsb ret mov mov arpl cmp xor cmp arpl insb insb insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insl insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb imul imul imul imul imul imul gs push push inc inc inc ss cmp push cmpsb cmpsb cmpsb add add add add dec cmp cmp ss ss ss ss ss ss ss ss ss ss ss ss add ss ss ss ss cmp inc ja ja mov add lahf lahf lahf jno jno push push dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec add dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec mov dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec push push push push push cltd cltd add add add add add add add add std add add std add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc pop (bad) inc add incl add (bad) std add add aas clc add pop clc add pop clc add (bad) add (bad) add (bad) test pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock std add add add add lock pop lock pop lock pop lock pop lock pop lock pop lock test add pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock add std add add add lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock add add add add pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock pop lock (bad) add psubb add clc nop add cld add pop cld add aas incb add addb add add add add jmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add addb add add add add add xor add nop add nop add add cmpl jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp jp addl mov inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc nop inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc aas inc inc inc inc inc inc inc inc inc aas aas aas aas aas aas aas aas aas aas aas aas aas aas aas ds ds aas aas inc inc inc push push push (bad) (bad) (bad) add inc inc inc pop pop pop jg jg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg nop nop nop nop nop nop mov mov xchg cmpl jle cmpl jnp jge jle jge jge jl jl jnp jp jp jns ja js jbe jne jne je jae jae jb jno jno jo outsl outsl jo outsl outsl insl insl outsb insl insl insl insl insl insl imul popa popa dec dec dec inc inc inc pop pop pop add add push jp mov mov rcl xlat xlat xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) (bad) aad aad aad aam aam aam rcl rcl rcl rcl ror iret iret int lret leave mov mov mov mov cmpsb jbe movsl jae movsb jb mov pop movsb jp cmpsb test nop test mov cmpsl test cmpsb cmpsl movsb movsb movsl mov mov popf sahf pushf pushf pushf lcall xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg lea bound inc inc inc pop pop pop add inc js js ret fcmovu (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) fnop fcomp fcomp xlat xlat xlat xlat (bad) (bad) (bad) aad aam int3 lret lods adc mov sub sbb inc sbb sbb sbb and mov js lcall test cmpsb cmpsb movsb movsb movsb mov mov pushf popf lcall xchg cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg inc inc inc (bad) (bad) (bad) add data16 push push mov mov fcmovnu fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) (bad) fcomp fcom aam int3 mov movsl bound dec and adc cmp xchg cmp xchg cmp cltd inc sbb dec sub fwait dec sub and daa popf pop inc mov xchg stos cmpsl cmpsb adc movsl movsl cmpsb mov mov sahf sahf popf popf popf fwait fwait fwait cltd cltd lcall xchg xchg xchg xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) dec dec dec push push push add dec dec dec je je rcl (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovbe aam leave mov scas jne popf dec es aas push xchg cmp xchg cmp xchg cmp xchg ds pop aaa stos outsl push mov outsl mov (bad) mov xchg mov xchg mov lea jb jo sahf pop cmp and popa inc cmpsb mov mov test movsl movsl movsl mov mov sahf sahf pushf pushf pushf lcall xchg cwtl xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) popa popa bound inc mov mov add add add inc inc inc test loopne (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcom lret stos insl push cltd inc sbb cmp xchg cmp xchg cmp cltd inc sbb mov lods mov enter leave lret leave enter (bad) ret mov mov mov cltd stos subl push fwait push xor lods lods lods stos stos stos test cmpsl movsb movsb movsl mov mov popf sahf pushf pushf pushf lcall xchg xchg xchg xchg xchg insb insb insl ds add add inc mov loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp (bad) (bad) fcmovnu ror les pop xchg cmp xchg cmp adc xchg cmp fwait dec and movsl ror enter rcl rcl rcl rcl ror into into int3 int3 int3 lret leave leave leave mov (bad) (bad) (bad) mov mov xchg mov sbb outsb lods cmpsl movsb scas scas scas lods lods lods test test cmpsb cmpsl movsb movsb movsl mov mov popf popf fwait fwait pushf cltd cltd lcall ds jp add inc inc inc mov loop loop loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) fcom les xchg cmp xchg cmp xchg cmp xchg cmp lcall mov xlat xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aam aam rcl rcl rcl rcl into into into int3 int3 int3 lret enter (bad) ret ret rol mov mov push ss aas pop fwait push cs jp lods stos scas scas mov lods lods stos stos lods stos stos stos test test cmpsb cmpsb movsb movsb movsb mov mov pushf popf cltd cltd lcall jp jp add inc inc inc mov loop loop loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) into lret gs inc sbb adc pop test mov xlat (bad) fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad rcl rcl rcl rcl iret iret iret int int int3 int3 lret mov ret mov cbtw inc sbb ds lahf pop inc scas popf xchg mov mov mov scas scas mov scas scas lods lods lods test test cmpsb cmpsb movsb movsb movsb mov mov jae aas aas aas jp jp add adc add inc inc inc mov jecxz jecxz jecxz loop loop loop loope loope loope loope loopne xchg loopne (bad) rol mov cmp xchg cmp xchg cmp popf dec daa mov rcr fcmovnu fcmovu fcmovu (bad) (bad) fnop fcomp fcomp fcom xlat xlat (bad) (bad) (bad) aad aad rcl rcl rcl rcl iret iret iret int int lret lret leave leave leave mov mov mov cltd inc and scas mov mov mov mov mov scas scas lods lods lods stos stos stos test test movsl cmpsb mov mov aas aas jp jp add inc inc inc mov in jecxz jecxz jecxz jecxz loop loop loop loope loope loope loopne loopne fnop mov xchg cmp xchg cmp xchg cmp or fcmovu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) (bad) fcomp fcomp fcomp xlat xlat xlat dec xlat xlat aad xchg aad aad rcl rcl rcl rcl into into into int3 int3 int3 lret lret lret enter stos mov cmp mov mov mov mov mov mov mov mov scas scas lods lods lods stos stos stos test test mov inc inc inc jp jp add inc inc inc mov in in in in in jecxz jecxz jecxz loop loop loop loope loope loopne mov xchg cmp xchg cmp xchg ds mov (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) fnop fcomp fcomp fcom xlat xlat xlat xlat xlat aad aad aam rcl rcl rcl rcl ror into into lret lret lret rorl cmp pushf dec sub mov mov mov mov mov xchg mov scas scas scas lods lods lods stos stos stos cmpsb cmpsb cmpsb jns jns inc inc jp jp add inc inc inc mov in in in in in jecxz jecxz jecxz jecxz loop loop loop loope loope enter dec xchg ds cmp xchg ds enter fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) fnop fcomp fcomp fcom xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aad aad aam rcl rcl rcl into int shrb cmp cltd inc and mov mov mov mov mov mov mov mov scas scas scas stos stos stos jnp jnp inc inc jp jp add inc inc inc mov out out in in frstpm(287 in in in in jecxz jecxz jecxz sbb jecxz xlat aam mov inc push xchg cmp xchg cmp xchg cmp rol mov (bad) fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) (bad) fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat aad aad aam iret lret nop jle dec and adc insb sarl sarb mov mov mov mov mov lods scas jge jle inc inc jp jp add inc inc inc mov out out out in in in in in in in in jecxz jecxz jecxz loopne iret mov movsb pop cmp mov sub fcmovnu (bad) (bad) (bad) (bad) fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) sbb fnop fcomp fcom xlat xlat xlat xlat xlat (bad) (bad) (bad) aam rol mov cmpsl addr16 xchg aas push xchg cmp xchg cmp cltd inc sbb sarl (bad) rol mov mov mov mov mov mov jg addb jp jp add inc inc inc mov out out out out out out out out in in in in in in in fst aam (bad) jp dec es cmp xchg cmp cwtl inc sbb ret fstp (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) (bad) aad int3 mov inc pop xchg cmp xchg cmp xchg cmp fwait dec and xchg xchg enter lret enter mov (bad) (bad) rol mov mov mov (bad) (bad) (bad) inc inc inc jp jp add inc inc inc mov call out out out out out out in in in in in in in loop xlat mov inc and adc dec daa mov (bad) (bad) fstp (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) fnop (bad) aad mov fwait dec and adc adc push xor stos mov into into int int lret lret enter (bad) ret (bad) mov mov test jp add inc inc inc mov jmp call out out out out sbb out out out out in in in loope (bad) les sub adc dec sub mov aad (bad) fucom (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) fcmovnu xlat rcl enter jno lcall cmp xchg cmp xchg cmp cwtl inc sbb mov rcl rcl ror into into int3 int3 int3 lret enter (bad) ret ret rol mov xchg inc jp jp add inc inc inc mov jmp call call out out out out out out in in in in mov loop fxch lds aas lcall inc pop test inc mov stos (bad) lret aad fstp (bad) (bad) (bad) sbb (bad) fstp (bad) fcmovu aad leave rcrl inc sbb cmp xchg cmp xchg cmp xchg cmp xchg cmp shlb aad rcl rcl rcl rcl ror iret iret int int int3 int3 lret mov rol mov jp jp add inc inc inc mov jmp jmp jmp call out out out out out out out out in in jecxz fcmovbe sarl test inc sahf dec daa cltd inc sbb pop lods outsb push mov insl mov xchg lret int lods into mov mov outsl mov pop xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp pushf dec and leave (bad) xlat xlat xlat xlat (bad) (bad) (bad) aad aad rcl rcl rcl rcl iret iret and int3 int3 leave leave ffree (bad) lds inc jp jp add inc inc inc mov ljmp jmp jmp call out out out out out out out out in in in jecxz loope fcom rol mov mov stos push lahf dec sub sub xor cmp and adc adc adc dec and mov fcomp fcomp fcom xlat xlat xlat xlat xlat aad aad aad rcl rcl rcl rcl ror iret iret int3 int3 int enter mov inc jp jp add inc inc inc mov ljmp ljmp jmp jmp fucomp call call out out out out in in in in jecxz loopne (bad) rcl leave ret lods enter cwtl xchg scas jae mov push xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp mov imul mov fcmovu (bad) (bad) (bad) fcomp fcomp fcomp xlat xlat xlat xlat xlat xlat aad aad aam rcl rcl rcl rcl ror int3 int3 nop nop nop inc inc inc jp jp add inc inc inc lea ljmp ljmp jmp jmp jmp call out out out out out out out out out in in in in in in loop loop fsubp (bad) (bad) (bad) fcmovbe into and aas xchg ds fnstsw xchg cmp xchg cmp xchg cmp xchg cmp xchg ds mov je lds fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) fnop fcomp xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad aam rcl ror into into xchg xchg xchg inc inc inc jp jp add inc inc inc lea jmp jmp jmp jmp ljmp ljmp jmp jmp jmp call out out out out out out out out in in in in in in in jecxz jecxz aad mov and adc adc sbb mov int (bad) fcmovnu fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) fldenv fcomp xlat xlat fst xlat xlat aad aad rcl xchg xchg xchg inc inc inc jp jp add inc inc inc lea jmp jmp jmp jmp jmp ljmp ljmp jmp jmp jmp call call out out out out out out in in in in in in jecxz sarl xchg cmp xchg cmp xchg cmp xchg cmp lcall stos sahf fcmovbe rcr (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) fnop fcomp fcomp fcom xlat xlat (bad) (bad) (bad) rcl rcll jp jp add inc inc inc lea in in in jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp jmp jmp jmp call out out out out out out out out in in loop lret lahf push sub adc adc push sarb loopne fnstsw loopne (bad) pop (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) (bad) fnop fcomp aad aad xchg xchg inc inc inc jp jp add inc inc inc lea in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp jmp jmp call call call out out out out out in loop (bad) cmpsb xchg sahf dec daa xchg cmp xchg cmp xchg cmp xchg cmp mov sahf loopne fndisi(8087 loope loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) fcomp fcom aad xchg xchg xchg inc inc inc jp jp add add add add add add add inc inc inc lea in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp jmp jmp call out out in in loop loope int movsb mov adc cmp xchg cmp xchg cmp (bad) lds loop loop loop loope loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovbe xlat xlat xchg xchg xchg inc inc inc jp jp add inc inc inc lea in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp pop jmp jmp loop (bad) rcl les lahf lret lods sahf ret mov adc cmp xchg cmp xchg cmp sarb jecxz loop loop loop loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) fcmovnu fcmovnu fcmovu fcmovbe xlat xlat xchg xchg xchg inc inc inc jp jp add inc inc inc lea in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp ljmp ljmp fcmove ret (bad) mov test inc mov sub sub cwtl inc sbb adc fst shl jecxz jecxz jecxz jecxz loop loop loop loop loope loope loope loope loopne loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) cwtl cwtl cwtl inc inc inc jp jp add inc inc inc lea in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp ljmp fmul lods sahf mov push sahf dec sub adc cmp cwtl inc sbb dec mov gs push js cmpsb pop ds dec and xor lahf mov aad jecxz jecxz jecxz jecxz jecxz jecxz loop loop loop loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) (bad) cwtl cwtl cwtl inc inc inc jp jp add inc inc inc mov out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp ljmp mov sbb adc push scas insl push lret fcmovne (bad) loope xlat loop fstps aad aam mov xchg jg pop cmp xor xchg jg iret leave jecxz loop in in in jecxz jecxz jecxz loop loop loop loope loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) fcmovu ficompl inc jp jp add inc inc inc mov out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp loopne (bad) mov xchg ds cmp xchg cmp lcall (bad) mov loop jmp jmp call loope (bad) leave test xchg inc sbb je lret (bad) in loop in jecxz jecxz jecxz jecxz jecxz loop loop loop loop loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) fcmovnu lcall jp add add inc mov out out out out out out out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in ljmp pusha aas xchg aas push xchg cmp xchg cmp xchg cmp cwtl inc sbb mov out ljmp jmp jmp call (bad) ret popf dec and dec es lret jecxz in in in in in in jecxz jecxz jecxz loop loop loop loope loope loope loopne loopne loopne (bad) (bad) fcompl inc jp jp add inc inc inc mov out out out out out out out out out out out out out out out out sbb in in in in in in in in in in in in in in in in in in in in in in (bad) mov sbb cmp xchg cmp xchg cmp xchg cmp lret test ljmp ljmp jmp jmp out out les ds dec sub cltd xchg fcmovbe in in in in in in jecxz jecxz jecxz jecxz jecxz loop loop loop loope loope loope loope loopne loopne fstp fwait fwait fwait inc inc inc jp jp pusha add inc mov out out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in in in in in jmp (bad) mov xchg cmp xchg cmp xchg cmp cltd inc sbb shr ljmp ljmp ljmp jmp jmp (bad) mov pop cwtl inc sbb adc mov out out in in in in in in in jecxz jecxz jecxz jecxz jecxz loop loop loop loope (bad) ficomp jp jp add inc inc inc mov out out out out out out out out out out out out out out out out out out out out out out out out out out out in in in in pop in in in in ljmp dec and cmp xchg cmp xchg cmp xchg cmp mov lcall jmp jmp jmp ljmp ljmp jmp jmp mov sbb cmp xchg cmp fwait inc and (bad) out out out in in in in in in in jecxz jecxz jecxz loop loop loop loop loope (bad) pushf pushf pushf inc inc inc jp jp add inc inc inc (bad) (bad) (bad) lock out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out call jo inc sbb adc adc int3 (bad) in jmp in in in jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp lcall cmp xchg aas push lods insb dec fcmovne (bad) out out out out out out out out in in in in in in in jecxz jecxz jecxz (bad) fistp inc jp jp add inc inc inc (bad) (bad) (bad) lock out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out out fnstenv sbb adc sbb (bad) in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp insb cltd inc sbb adc cmp mov out out out out out out out in in in in in in in in jecxz pop loopne loopne popf popf inc inc inc jp jp add inc inc inc (bad) (bad) (bad) lock out out out out out out out out out out out out out out out out out out out out out out out out fnstenv sbb adc and mov in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp ljmp jbe cwtl inc pop xchg cmp xchg cmp xchg cmp mov lods out in call out out out out out out out out out in in in in in loope popf popf popf inc inc inc jp jp add es inc (bad) (bad) (bad) lock lock out out out out out out out out out pop out out out out out out out out out out call insl cltd inc sbb adc sub ljmp in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp ljmp xchg ds cmp xchg cmp mov stos call call call out out out out out out in in in in in loope popf popf popf inc inc inc jp jp add inc inc inc (bad) (bad) (bad) icebp icebp icebp lock lock out out out out out out out out out out out out out out jmp out lcall adc mov mov jmp in in in in in in in in in in in in in in in in in in in in in in in in pop in in jmp jmp call mov adc adc xor mov jmp jmp call call out out out out out out out loop sahf sahf sahf inc inc inc jp jp add inc inc inc (bad) (bad) (bad) icebp icebp icebp icebp icebp icebp lock lock out out out out out out out out out in in aam lods mov adc adc pop aaa fadd mov in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in out faddp xchg jle inc push xchg cmp xchg cmp xchg cmp xchg cmp fld mov jmp jmp jmp call out out out out out out jecxz jecxz lahf lahf inc inc inc jp jp add inc inc inc (bad) (bad) (bad) icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out out out out jecxz rcrb sbb adc mov in jmp out out out out out in in in in in in in in in in in in in in in in in in in in in in jmp fmul les adc cmp xchg cmp cltd inc sbb ljmp ljmp jmp jmp call call out in in lahf lahf inc inc inc jp jp add inc inc inc (bad) (bad) (bad) icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out in jmp mov adc cmp sahf dec daa int pushf jmp out out out out out out out out out in in in in in in in in in in in in in in in in in in jmp xchg lahf dec sub popf xchg cmp xchg cmp lahf dec sub mov ljmp ljmp jmp jmp jmp call out in in lahf lahf inc inc inc jp jp add inc inc inc nop nop addr16 icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock out in aam test inc pop xchg cmp cltd inc sbb fucomi out out out out out out out out out out out out out out out out out in in in in in in in ljmp dec cwtl aas pop xchg cmp xchg cmp xchg cmp cwtl inc sbb (bad) jmp ljmp ljmp ljmp ljmp jmp jmp in mov inc jp jp add inc inc inc nop nop nop ljmp repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock in in fcmovnb mov inc sbb inc (bad) mov out out out out out out out out out out out out out out out in in in in in in loop iret mov and adc push movsl pop cmp mov call jmp jmp jmp jmp jmp ljmp ljmp jmp jmp jmp in mov jp jp add inc inc inc nop nop nop ljmp repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp popf lock ljmp push fwait inc and pop fcmovnb mov out out out out out out out out out out in in ljmp js dec sub adc adc mov in in in in in in addr16 in jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp jmp out mov jp jp add inc inc inc nop nop nop ljmp repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock ljmp insl mov and jo int3 test out (bad) (bad) loope iret (bad) mov mov daa xchg ds cmp xchg cmp lcall (bad) in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp ljmp ljmp jmp mov jp jp add inc inc nop nop nop ljmp repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock in in in (bad) into stos fwait mov pop movsb push xor dec mov popa mov fs jo mov sbb adc adc sbb in jmp in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp ljmp ljmp mov jp add add inc mov repz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock in call (bad) mov mov push cmpsb pop cmp and inc push lcall cmp xchg cmp xchg cmp lahf dec daa rcll in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp pushf pushf inc inc inc test add add dec ja ja (bad) repz repz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock out out in jmp jecxz loope int3 fadd mov mov lret (bad) pushf mov fwait xchg xchg test inc pushf dec and adc xor stos fwait jmp in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp (bad) fild inc mov mov add push push push push mov out repz repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock out out out in out in jmp jmp jmp in out out (bad) ret mov pop ds inc sbb shr in in in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp call les popa push push push add mov dec jbe jbe int3 int3 out out out repz repz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock lock out out out out out out in in jmp mov xchg pop mov ja fcmovnbe out out out out out out in in in in in in in in in in in in in in in in in in in in in in in in in in in jmp iret addb mov add jne inc inc jne jne mov jmp ljmp ljmp ljmp jmp jmp jmp jmp call call call call out out out out out out out out out out and out in loope ror lret scas mov int in loop in in in in in in in in in in in in in jecxz jecxz (bad) mov jle dec dec gs add dec dec dec push push push ja ja mov lea lea mov lea lea lea lea lea lea lea mov mov mov mov mov mov mov mov mov mov mov jp pop pop pop inc inc inc push add add push dec dec inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc popa inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc dec dec dec addr16 cwtl cwtl add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add cld add add add mov add add lock add add pavgb add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add add loopne add add mov add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop loopne add add add lock add add psubb add add add cld add add add aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add sbb add add sbbb add mov add mov add push ss xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor ss dec dec nop nop nop xor xor pop pop popf popf popf scas scas scas scas scas scas scas scas scas scas scas scas scas scas scas lods lods lods stos stos stos stos stos stos test test cmpsb cmpsb movsb movsb movsl mov mov lcall xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg (bad) (bad) nop lea mov test (bad) (bad) (bad) addb jle jge jge jl jnp jnp jb dec dec dec xor jne add xor jp (bad) (bad) fcmovnu fcmovu fcmovu (bad) (bad) fxam fcomp xlat xlat xlat (bad) (bad) (bad) aad aad aam rcl ror int3 lret mov push dec sub and es push mov je mov test sahf movsb movsb movsb mov lahf popf popf popf lcall xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg push xor add add pusha push push pusha fcmovu fcmovu fstp (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu (bad) fnop fcomp fcomp fcom xlat xlat aad aam cltd mov adc adc adc adc adc adc inc test mov test mov sahf sahf lahf popf popf popf lcall xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg dec dec push dec dec dec add add cmp cmp (bad) (bad) fstp fstp fstp (bad) (bad) fcmovnu fcmovu fcmovu fcmovu (bad) (bad) iret int3 test adc adc adc outsl mov lods mov scas mov xchg and dec lods cmpsb mov test movsl movsl cmpsb mov mov pushf popf pusha lcall xchg xchg xchg xchg jae je ss add aaa aaa aaa popf popf popf loopne loopne (bad) (bad) (bad) (bad) fstp fstp (bad) (bad) (bad) fcmovnu (bad) xlat test adc adc cs rcl rcl rcl into into into int3 int3 int3 lret mov rol mov scas mov adc mov stos stos test test movsl cmpsb mov mov pushf pushf cltd cltd lcall xor xor add add aaa aaa lahf lahf lahf loope loope loopne (bad) (bad) (bad) ficomp fstp fstp (bad) shll cmp xchg cmp movsb pop cmp lret enter aad aad aam rcl rcl rcl into into into lret lret int3 leave leave leave mov ret pusha ret rol mov dec xchg cmp pushf push xor scas mov lods lods stos stos stos cmpsl cmpsl test movsl movsl mov mov fwait fwait addb add add cmp lahf lahf lahf loop loop loope loope loope loopne (bad) (bad) (bad) (bad) (bad) fstp movsl pop cmp adc sbb (bad) fcomp fcom xlat xlat (bad) (bad) (bad) aad aad aam rcl rcl rcl int int lret lret leave leave leave mov ret ret ret mov sbb bound mov scas mov lods lods stos stos stos cmpsl cmpsl cmpsl movsb movsb movsl mov mov xor add aaa aaa mov jecxz loop loop loop loope loopne loopne loopne (bad) (bad) fcmovnu cwtl aas push xchg cmp xchg cmp xchg cmp fcmovnu fcmovnu fcmovu (bad) fnop fcomp fcomp fcom xlat xlat (bad) (bad) (bad) aad aad rcl rcl ror iret iret int int lret lret enter mov pop aaa xchg cmp cltd inc sbb mov mov mov mov scas scas scas lods lods lods test cmpsl movsb movsb movsb xchg cmp cmp in jecxz jecxz jecxz loop loope loope loope loopne loopne in xchg ds cmp xchg cmp (bad) (bad) fcmovnu fcmovu fcmovu fcmovu (bad) fnop fcomp xlat xlat xlat xlat xlat xlat (bad) (bad) (bad) aad aad rcl rcl ror into iret int3 int3 int3 lret cmpsb addr16 sahf cmp mov cmpb mov mov mov mov mov lods scas stos stos stos test test mov add add aaa aaa mov in in in jecxz jecxz loop loop loop loope loope loopne mov adc adc mov (bad) (bad) fcmovnu fcmovnu fcmovnu fcmovu (bad) (bad) (bad) fcomp fcom xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aam aam rcl rcl ror into into lahf push xor adc sarl mov mov mov mov mov lods lods lea add add add add add add aaa aaa aaa mov in in in in in jecxz jecxz jecxz loop loop loop mov adc adc (bad) fstp fstp fstp (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu (bad) fcomp fcomp fcomp xlat xlat xlat (bad) (bad) (bad) aad aad aam lds xchg cmp xchg cmp cmpsl insb push mov ret ret ret rol mov mov mov mov mov xchg xchg xor xor add add aaa aaa mov out out in in in in in in jecxz jecxz jecxz fst aam dec sub adc (bad) (bad) (bad) (bad) fstp fstp fstp (bad) fcmovnu fcmovnu fcmovnu fcmovu fcmovu (bad) fcomp fcomp fcomp xlat xlat xlat ror (bad) mov adc adc lret enter vcmpss mov mov mov xchg xchg xchg xor xor add add cmp mov out out out out out in in in in in in jecxz jecxz mov xchg cmp stos imul (bad) (bad) (bad) (bad) (bad) fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovu fisubl fcmovu (bad) ror ret mov adc adc fwait iret iret iret int int lret lret enter vcmppd mov mov xor add aaa aaa mov call (bad) out out out out out in in in in in in (bad) mov push xor adc movsb (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp (bad) (bad) (bad) fcmovnu leave mov sahf dec sub adc adc rcl rcl rcl ror iret iret int3 int3 int3 lret mov rol pushf pushf popf xor xor add add aaa aaa mov call call out out out out out out in in in in in fcmovnu daa xchg sbbb xchg cmp mov push movsb xchg iret mov fcmovbe rcr rcl mov pop xchg cmp xchg cmp xchg cmp (bad) scas mov aad aam aam rcl rcl ror into into int3 int3 int3 leave leave lret (bad) mov xor add add cmp movsb movsb movsb jmp jmp call call out out out out out in in in in in (bad) int cmpsb mov push pop cmp ds cmp cwtl inc pop cwtl aas push xchg cmp xchg cmp xchg cmp xchg ds (bad) fcomp fcom xlat xlat (bad) (bad) (bad) (bad) (bad) (bad) aam aam rcl rcl ror into into lret lret int3 movsb movsb movsb xor add aaa aaa aaa movsb movsb movsb ljmp jmp call call out out out out out out in in in in in in jecxz jecxz jecxz (bad) fmul (bad) sarb inc sbb adc adc sbb mov fcmovu fcmovu (bad) fcomp fcomp fcomp xlat xlat xlat (bad) (bad) (bad) aad aad aam rcl rcl rcl test test xor aaa aaa aaa movsb movsb movsb ljmp ljmp jmp call call out out out out out in in in in in in jecxz jecxz jecxz loop loop andb adc adc adc lods fstp fstp (bad) fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) fcomp fcomp fcomp xlat xlat xlat (bad) (bad) (bad) aad aad rcl stos and add add cmp movsl movsl movsl jmp jmp jmp ljmp ljmp jmp jmp call out out out out out in in in in in in fst rcrl adc adc inc fmul lret (bad) (bad) (bad) fstp fstp (bad) (bad) (bad) fcmovnu fcmovu fcmovu fcmovu (bad) fnop fcomp fcomp fcom xlat xlat (bad) (bad) (bad) lods lods lods xor add aaa aaa aaa movsl movsl movsl jmp jmp jmp jmp jmp ljmp ljmp jmp jmp call out out out out out out in in in sarl xchg cmp xchg cmp xchg cmp fstp xlat loopne loopne (bad) (bad) (bad) and (bad) (bad) fstp (bad) (bad) (bad) fcmovnu fcmovnu fcmovu fcmovu fcmovu (bad) fcomp fcom xlat xlat scas scas scas xor xor add add aaa aaa movsl movsl movsl jmp jmp jmp jmp jmp jmp ljmp ljmp jmp jmp call call out out out out out in lret cmp xchg cmp xchg cmp rcrl loope loope loope loopne (bad) (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) fcmovnu fcmovnu fcmovu fcmovu (bad) (bad) fldcw xor add add cmp movsl movsl movsl in in in in in in in in in in in in jmp jmp jmp jmp jmp jmp ljmp ljmp jmp call aad mov and inc pop xchg cmp xchg cmp mov jecxz loop loop loop loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) (bad) fstp fstp (bad) (bad) fcmovnu fcmovnu fcmovu fidivl xor aaa aaa aaa movsl movsl movsl in in in in in in in in in in in in jmp jmp in in jmp jmp jmp ljmp ljmp jmp xchg (bad) mov adc adc and adc cmp aam mov jecxz loop loop loop loope loope loopne loopne loopne (bad) (bad) (bad) (bad) fstp fstp fstp (bad) (bad) fcmovnu mov mov xor aaa aaa aaa cmpsb cmpsb cmpsb in in in in in in in in in in in in in in in in in in jmp jmp and jmp jmp jmp ljmp xlat shll adc adc pop fadd mov loopne aad mov cmp iret mov in in jecxz jecxz loop loop loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) (bad) fstp (bad) fdivl xor add add cmp cmpsb cmpsb cmpsb out out out in in in in in in in in in in in in in in in in in in in in in in in in jmp jmp jmp out fbld adc adc jge call call call out mov adc xchg in in in jecxz jecxz jecxz loop loop loope loope loope loopne loopne loopne (bad) (bad) (bad) (bad) mov mov xor add aaa sbb out in in in out out out in in in in in in in in in in in in in in in in in in in in jmp in in mov adc adc push jmp jmp jmp call call push xor cmp int movsl in in in jecxz jecxz jecxz loop loop loop loope loope loope loopne loopne (bad) (bad) fbstp aaa aaa aaa cmpsl cmpsl cmpsl out out out out out out out out out in in in in in in in in in in in in in in in in in in in in in out fstpl adc adc int3 ljmp jmp jmp call (bad) call cmp popf dec and (bad) in in in in in jecxz jecxz jecxz sbb loop loop loope loope loope loopne mov mov xor cmp cmp out out out out out out out out out out out out out out out out out out out in in in in in in in in in (bad) mov xchg cmp xchg cmp xchg cmp jmp jmp jmp ljmp ljmp jmp jmp xchg cmp xchg cmp ret out out in in in in in in jecxz jecxz jecxz loop loop loop loope mov mov xor add aaa aaa cmpsl cmpsl cmpsl out out out out out out out out out out out out out out out out out out out out out out out out in in in in in in rcll adc adc cmpsl jmp jmp jmp jmp jmp ljmp ljmp sbb jmp cmp xchg cmp out out out out out in in in in in in jecxz jecxz jecxz loop mov mov xor cmp cmp lock out out out out out out out out out out out out out out out out out out out out out out out mov adc adc fsubr in in in in in jmp jmp jmp jmp jmp jmp ljmp ljmp adc adc out out out out out out out in in in in in in jecxz mov mov xor add aaa aaa lods test lock out out lock out out out out out out out out out out out out out out out out out out out out (bad) popf mov adc sub jmp in in in in in in in in jmp jmp jmp jmp jmp ljmp jmp lods push xchg cmp xchg cmp call call out out out out out out in in in in mov xor add add aaa aaa test test lock out out out out out out out out out out out out out out out out out out out fcmovb mov cmp xchg cmp cmpsb pop cmp in in in in in in in in in in in in in in in in in jmp jmp jmp jmp jmp (bad) fwait inc pop xchg cmp xchg cmp jmp jmp call out lods out out out out out in mov xor add add cmp test test icebp icebp icebp icebp icebp lock lock out out out out out out out out in jmp mov adc xor in in in in in in in in in in in in in in in in in in in in in in in in in in int popf xchg cmp xchg cmp mov ljmp jmp call out out out out out xor xor aaa aaa aaa test test icebp icebp lock icebp icebp lock out out lock out out out out out out out out lret cmpsl xchg xchg cmp xchg cmp fwait inc push call in out out out in in in in in in in in in in in in in in in ljmp cmp xchg cmp xchg cmp ljmp jmp jmp call call out out mov aaa aaa aaa test icebp icebp icebp icebp icebp icebp icebp lock icebp icebp lock out out out out out out out out in in jmp outsb push xchg cmp xchg cmp out out out out out out in in in in in in in in in in in in in in in (bad) lahf mov adc adc jmp ljmp ljmp jmp jmp call mov xor add add cmp test repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp je icebp icebp icebp icebp lock stos fs xchg cmp mov shr out out out out out out out out out out out out out out (bad) mov cltd inc sbb adc aas out fucomp jmp jmp jmp jmp jmp jmp ljmp ljmp jmp call xor add aaa aaa test repnz icebp icebp repnz icebp icebp icebp icebp icebp icebp icebp icebp lock icebp icebp lock out out in call cwtl aas push sahf dec and fcmovnbe ljmp mov inc pop xchg cmp xchg cmp cwtl inc sbb aad in in in jmp jmp jmp jmp jmp jmp ljmp ljmp ljmp mov xor add add add add add aaa aaa test test repnz icebp icebp icebp icebp icebp repnz icebp icebp icebp icebp icebp lock lock out out out out out fmulp les and sbb adc adc adc imul jmp in in in in in in in in jmp jmp jmp jmp jmp ljmp ljmp mov xor add add xchg repnz repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock in ret mov mov push arpl cmp xchg cmp int3 test in in in in je in in in in in in in in in jmp jmp jmp jmp jmp ljmp cmpsl ss add push push dec dec ljmp repz icebp icebp repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock icebp icebp lock out out out out out out out out out out out out out out out out out fmulp lds adc es call in in in in in in in in in in in jmp jmp jmp jmp jmp jmp call pop push push push add add aaa aaa jb jb ljmp repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp out icebp icebp icebp icebp lock out out je lock out out out out out out out out out out out out in in (bad) mov lods push in in in in in in in in in in in in in in in in in in in in in in in in in in in call xorb add aaa aaa dec dec dec xchg xchg xchg cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsl movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb mov mov mov xchg push push push xor xor xchg xchg imul cmp aaa aaa aaa cmp cmp aaa aaa cmp cmp aaa je aaa aaa aaa aaa aaa cmp cmp aaa aaa aaa aaa aaa cmp cmp aaa aaa aaa aaa aaa cmp cmp aaa aaa aaa aaa aaa cmp cmp aaa aaa aaa aaa aaa cmp cmp aaa aaa aaa aaa aaa cmp cmp aaa aaa cmp cmp aaa aaa aaa aaa aaa cmp cmp aaa aaa aaa aaa aaa cmp cmp aaa aaa aaa aaa aaa cmp cmp popa popa add add add add add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add pop add loopne add add add loopne add add add rolb add add das rolb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add das add rolb add add add add add add add add add add add add add add add add add add add add add pop add lock add pop add clc add add pop add (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) pushl add add add add add sbb add add orb add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor add xor outsl mov mov mov mov mov mov mov mov cmpsb mov (bad) jbe jg cwtl (bad) js nop mov xchg mov xchg nop nop nop lea xchg test pop pop xor add add add add aaa aaa insb insb insb (bad) (bad) (bad) fcmovu fcmovu (bad) fcomp fcom xlat xlat (bad) aad mov cmp ds cmp xchg cmp xchg cmp xchg cmp lcall mov movsb movsb movsl mov popf lcall xchg xchg xchg xchg xchg pop pop pop xor add add xor xor lods lods (bad) (bad) fstp (bad) (bad) fcmovnu fcmovu fcmovu (bad) aad jo xchg cmp xchg cmp lods je das mov ret mov xchg movsl jo cwtl inc sbb stos lods cmpsl cmpsl test movsb movsb mov popf cltd cltd lcall xor xor add add add mov loopne (bad) (bad) (bad) fstp fstp (bad) mov adc and mov rcl rcl rcl int3 int3 int3 enter (bad) (bad) rol mov mov jb scas scas stos stos stos cmpsl cmpsl cmpsl mov mov mov add add add mov loop loope loope loopne (bad) (bad) fstp popf dec es cmp (bad) stos sahf (bad) fnop fcomp (bad) (bad) (bad) aad aad rcl iret iret iret lret lret int3 enter ret ret movsl imul mov scas scas cmc stos stos cmpsb cmpsb cmpsl mov mov xor add add add mov jecxz loop loop loope loopne loopne fstp xchg cmp fwait inc push fcmovnu (bad) fcmovnu (bad) fnop fcomp xlat xlat xlat (bad) (bad) (bad) aam aam rcl into into into lret mov jb cmp mov mov mov lods lods lods test xchg xor xor add add add mov in jecxz jecxz loop loope loopne push xor and fstp (bad) (bad) fcmovnu fcmovu fcmovu (bad) fcomp fcom xlat xlat (bad) (bad) (bad) aam aam rcl lods jne xchg cmp rol mov mov mov cltd cltd cltd xor xor add add add mov in in in jecxz jecxz jecxz mov xchg cmp outsl (bad) fstp fstp fdiv fcmovnu fcmovnu fcmovu (bad) fnop fcomp xlat xlat xlat lret cltd inc sbb dec leave leave leave (bad) rol mov mov xor add add add xor mov out out out in in in jecxz mov arpl sub les (bad) fstp (bad) (bad) fcmovnu fcmovu fcmove mov pushf dec and adc iret int3 int3 int3 enter (bad) les movsl xor xor add add add mov call out out out in in in (bad) cmpsb xchg mov pop mov pop (bad) cmpsl cwtl rol mov (bad) aad xchg sbbb xchg cmp ror lret aad aad rcl iret iret iret lret lret int3 mov xor xor add add outsl xor mov jmp call out out in in in jecxz loope mov scas jb movsl pop cmp adc cmp popf dec and mov xlat xlat xlat (bad) (bad) (bad) aam aam rcl into into into mov mov xor add add add xor mov ljmp jmp out out out out in in in in in jecxz loop loop jge xchg cmp xchg cmp rol rcr fcmovnu fcmovu (bad) fnop fcomp xlat xlat xlat (bad) (bad) (bad) aam aam mov xor xor add add add mov ljmp jmp jmp out out out out out in in in (bad) rclb adc push fnop (bad) (bad) (bad) fstp (bad) (bad) fcmovnu fcmovu fcmovu (bad) fcomp fcom xlat xlat mov xor add add add mov jmp jmp jmp ljmp jmp call out out out out out ror xchg cmp cltd inc sbb fcmovnu loope loope loopne (bad) (bad) (bad) fstp fstp (bad) fcmovnu fcmovnu fcmovu (bad) fnstcw xor add add add mov mov out jmp jmp jmp jmp ljmp jmp loopne rol popf mov popa cltd inc sbb push fxch enter loope loope loope loopne loopne (bad) fidiv (bad) fstp (bad) (bad) fcmovnu mov xor add add add mov in in in in in in in in jmp jmp jmp ljmp mov xchg cmp mov movsl les movsb pop aaa fcmovnbe lret jecxz jecxz loop loope loope loopne loopne loopne (bad) (bad) (bad) fstp rol xor xor add add add mov in in in in in in in in in in in in in in jmp jmp stos pushf xchg cmp cltd inc sbb sarl call (bad) movsb pop ss dec daa fmul ret in jecxz loop mov out loope loopne (bad) (bad) (bad) ret xor xor add add add mov out out in in in in in in in in in in in in jmp es cmp rcll jmp jmp (bad) mov mov loopne in in in jecxz loop loop loope loopne loopne ret ret xor xor add add add mov out out out out out out out out in in in in in in xlat (bad) mov cmp xchg cmp in fucomi jmp ljmp jmp sarb xchg cmp lret out out in in in jecxz jecxz jecxz loop (bad) (bad) les xor add add add mov out out out out out out out out out out out out out out into scas mov cmp mov out jmp jmp jmp jmp jmp ljmp mov cmp out out out out out in in in jecxz mov xor xor add add add (bad) lock out out out out out out out out out out out (bad) mov xchg cmp in in in in in in in in in jmp jmp jmp ljmp cmp mov call out out out out in in mov add add add (bad) lock out out out out out ljmp cmp in in in in in in in in in in in in in in in jmp ljmp xchg cmp jmp jmp call out out enter xor add add add (bad) icebp icebp icebp icebp icebp icebp lock out out out out out ret xchg adcl in in in in in in in in in in in in (bad) mov xchg cmp lcall ljmp jmp call leave leave leave xor xor add add add (bad) icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock in jmp jno cwtl aas adc out out out out out in in in loope iret lahf dec daa xchg cmp lret test jmp jmp jmp ljmp jmp jmp lret xor add add add (bad) repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp lock in jmp xchg (bad) sahf dec and mov ret xchg (bad) popf dec and adc mov out in jmp jmp jmp jmp jmp ljmp jmp xor add add add xor xor mov repnz icebp icebp icebp icebp icebp icebp icebp icebp icebp icebp aaa lock test outsl push scas insb dec lahf dec sub adc pushf mov in in in in in in in in jmp jmp jmp jmp ljmp xor xor add add add cmp imul repz icebp icebp icebp icebp icebp icebp icebp icebp icebp lock out out out out out in jmp int3 test mov jmp in in in in in in in in in in in jmp jmp jmp jne jne xor add add add xor imul rol mov mov mov xor mov mov mov mov stos mov mov mov mov mov jo xor add cmp xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp cmp (bad) (bad) (bad) jmp xor pop rolb add add add add add add add add add add addb add add add add add add add add add add add add add add add add add add pop (bad) (bad) (bad) ljmp add add add add add add add add add add add sub sub sub sub sub sub sub sub sub sub add cs jp lret lret mov push xchg pop inc xchg bound jp pushf lcall nop mov cs enter (bad) fdivl mov mov mov test movsl popf popf sahf mov sub int3 loope loope (bad) xchg inc sbb xlat xlat xlat rcl ror int mov dec mov mov stos stos lcall sub in in loop movsb pop cmp fstp fcmovnu (bad) fcom (bad) (bad) mov jle dec sub ret mov xor xor shl out in in lret pusha inc mov (bad) fcmovnu xlat mov pop scas jns rcl ror leave lret mov xor sub shr jmp out out in aad mov push sub cmp stos imul fcom aad ret ret ret xor xor shr ljmp jmp out loope ficoml push (bad) fstp (bad) (bad) (bad) fcmovu lret xor xor aad in in jmp jmp ljmp arpl push lods outsb push loopne fsub loope (bad) (bad) fstp int int xor sub in in in in in in jmp ljmp in fucomp call stos imul loop loope rcl (bad) xor xor xlat out out out out out out loopne int3 xchg cmp lds ljmp cmp aam mov in in in aam xor xor fdiv lock out out out fstl scas in in in jmp jmp scas mov mov out out (bad) (bad) xor xor fyl2x icebp icebp lock out out mov sub in ljmp pop ss ljmp xor xor xlat repnz icebp icebp icebp icebp icebp lock into lods sahf lds cwtl inc sbb in jmp jmp ljmp xor xor jle jle xlat xlat fcomp fcomp js fcomp fcom xlat xlat xlat xlat xlat (bad) (bad) (bad) int3 ret mov aam aam aam rcl addl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor add add add add push add jo outsl xor xor mov adc add add inc add incl xor or inc add int3 dec add int3 dec add int3 dec add inc add (bad) (bad) incl add add dec add add add dec add dec add dec add add add add add add jl inc add (bad) (bad) incl add add dec add add add dec add dec add dec add add add add add add add inc add (bad) (bad) incl add add dec add add add dec add dec add dec add add add add add add xor inc add (bad) (bad) incl add add add add int add add add dec add dec add dec add add add add cwtl sub (bad) incl add add dec add (bad) (bad) incl add add inc add dec add inc add add inc add add xor jl inc add inc add hlt dec add inc add hlt dec add inc add xor mov xor cld xor mov xor insb xor (bad) hlt dec add inc add dec add inc add hlt dec add inc add dec add inc add xor (bad) hlt dec add jmp ret push mov sub push mov push mov sub push push push mov movl mov mov and mov and mov push mov call xor push push lea push mov mov mov mov call lea push call push add push call lea call push pop push pop mov mov lea push mov mov call mov lea call push lea push call mov lea call push call mov lea push neg sbb lea push neg push neg call lea push lea push push call add cmp je call mov push jmp lea push lea push push pop push call lea push lea push push call add ret ret mov mov push call mov mov pop pop mov pop leave ret push mov sub push mov push mov sub push push push mov movl mov push mov pop and mov and mov push mov call mov xor push push mov mov mov mov mov mov mov call fnclex cmp jge push push push push call fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov neg test je push pop lea lea mov mov movl movl call lea push lea push call lea push lea push push call add jmp push pop lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call neg sbb inc neg lea mov call lea call cmpw jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je mov jmp xor neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add push pop lea push push push mov mov call mov lea call push push call mov neg sbb inc lea neg call lea call test jne fldl fcos fldl fcos fcomp fnstsw fstp sahf je push pop mov jmp push xor pop neg test je lea lea mov mov movl movl call lea push lea push call lea push lea push push call add lea push push push mov mov call mov lea call push push call mov neg sbb inc lea neg call lea call test jne lea movl pushl incl mov push call call mov cmpl jne mov lea lea push push push mov call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call mov lea push pushl push call lea push mov movl call test je call cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call pushl push call mov neg sbb inc lea neg call lea call test jne cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call flds fcompl fnstsw sahf jne push pop jmp xor lea call neg test jne lea push mov movl call test je call cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call pushl push call mov neg sbb inc lea neg call lea call test jne cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call flds fcompl fnstsw sahf jne push pop jmp xor lea call neg test jne lea push mov movl call test je call cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call pushl push call mov neg sbb inc lea neg call lea call test jne cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call flds fcompl fnstsw sahf jne push pop jmp xor lea call neg test jne lea push mov movl call test je call cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call pushl push call mov neg sbb inc lea neg call lea call test jne cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call flds fcompl fnstsw sahf jne push pop jmp xor lea call neg test jne lea push mov movl call test je call cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call pushl push call mov neg sbb inc lea neg call lea call test jne cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call flds fcompl fnstsw sahf jne push pop jmp xor lea call neg test jne cmpl jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call pushl mov push call fnclex test jge push push push push call lea call lea call movl fwait push jmp lea call lea call lea push lea push push call add ret lea call ret mov mov push call mov mov pop pop mov pop leave ret push mov push andl push mov mov lea push push call fnclex test jge push push push push call push pushl push pushl call mov call fildl mov andl fstpl xor pop leave ret int3 int3 int3 sahf sahf sahf sahf mov (bad) (bad) (bad) (bad) (bad) (bad) incl adc add ljmp mov or add ljmp je add or or add jmp add add add push or add jmp add add andb add jmp add jmp add jmp add jmp add in or add in or addb pop in or add or addb or add add add or add in or add in or add or add push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa inc jb gs popa jb add add jbe popa inc jb gs popa jb imul pop pop jbe popa inc outsb add add pop popa fs imul xor add pop popa fs data16 gs xor add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add fs imul xor add pop popa fs imul imul pop jbe popa dec bound gs fs data16 add fs imul xor imul dec jae outsb add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push je inc insl jo add pop pop jbe popa dec bound popa jb add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop inc dec insb outsl add add pop pop jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa inc jb gs je dec imul pop popa fs imul xor add add pop popa fs imul add pop pop jbe popa push popa jb jne add add dec popa je outsb add add jbe popa push je dec outsl jbe add add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je add add pop pop jbe popa inc jb gs bound 