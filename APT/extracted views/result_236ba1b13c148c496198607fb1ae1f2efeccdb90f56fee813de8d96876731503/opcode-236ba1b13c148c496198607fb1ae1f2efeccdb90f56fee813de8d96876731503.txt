outsl (bad) out incl add test pop push push xor push push push add (bad) fbstp push call mov cmp mov je addr16 push dec fdivrs lea movb jmp add stos stos pop xor lods and push stos mov or jb ljmp mov repnz not dec cmp mov mov adc sbb and xchg dec mov sti mov push dec push push lea push mov outsl fwait mov sarb and jbe mov incl push add adc add adc mov in aaa adc jo xor sub pop adc add adc or mov (bad) mov popa adc mov cmp pop add out mov push push add mov jge push push push adc add or cs fistp pop sub jne neg mov sbb mov mov add cmpw pop imul sbb fist cmpl out push jo bound push push push cmp pop clc and (bad) je or add push mov push jo xchg xor push sub fdivrp scas adc lea cmp jne mov mov ja jl push sbb divl mov lods (bad) fnsave sub jne pop push adc sub les add and div pop pop add or sbb cmp push fldt nop add in mov mov je lea mov test or je dec mov mov testb or (bad) and add or pop inc push iret or cmp mov out jmp or cmp jns inc dec sbb sbb fidivl push adc rcl mov or vcmpsd int (bad) aas fwait aam mov cmp ja cmp jae sbb (bad) fcoms or mov push mov shr rep mov aaa and rep js mov pop movb dec imul push xchg xor sbb and adc jnp std data16 roll dec add xor add loope push push push nop adc jnp push inc fcmovne je mov lret je cmp aaa sbb push cmp mov dec pop mov lcall or xor test frstor jne cs cmp cmp je mov insl movsl adc scas or pop sbb inc add fmuls frstor xchg je iret jae popa xor sbb push mov pop mov and or cmp jae sbb jno sub inc or sbb mov sub lock loope sar lahf adc cmpl fstpt mov xor fdivs mov adc test or jmp sub sar add (bad) mov (bad) jge nop shl push xor ret hlt mov mov lock mov or adc aam fist jne test mov jbe cmp cli sub jl jmp and sbb imul rol loop lea outsl or sti je and (bad) push push pop dec into fstpl and sub add mov outsb inc sbb movb in fidivl mov jne aam lock jmp pop adc lret and or bound adc clc ret pop pop mov xlat rcrb (bad) sub sar sarl mov cmp mov adc jmp lea dec mov push mov out (bad) loope js push sbbl je cmp data16 and sub (bad) jb not test jae push cmc pop lods repz and xor outsb or pop mov mov mov add add fidiv mov cmp lods je push push insb ret sahf fcmovu nop mov dec fidiv jo sub fadds xchg dec sub jmp je mov xchg xchg sbb cltd je sbb sub test pop xchg iret repz stc lahf push (bad) adc jmp fwait aaa mov rcrb jg outsl fsubrs fidivr lret jae fnstcw out rorb xor mov sbb sub or sbb ret or lock (bad) sub ss sub add push cwtl cmp xchg (bad) push adc jne sub das int mov xchg fsubl test outsb push test sbb sub dec dec inc dec lcall int3 and push lcall icebp mov jbe imul pusha mov xlat cs js (bad) jae add test jle inc ss add inc fcoms sbb popf aad adc in mov pop adc sbb inc out jbe or xor lods daa xor lock cmp and cmp outsb pop jne imul insb inc ljmpw adc cmp or ss cs roll popa adc sbb in aas push mov jo arpl in inc push mov sbb mov sbb sub mov pop sub popa sti std mov dec call idiv mov in sbb cld sub mov mov cmp and sbb mov ss cs mov inc or jbe divl (bad) mov enter mov js enter jnp mov cmp in test sub pop sub aaa dec cltd jae push xor lea call push sub std fldt push jo cmp pop mov lods cltd sub jo inc pand ret (bad) xchg xchg or mov jecxz cmp inc mov mov test sbb and mov mov ret adc push (bad) adc notb xchg in ds mov mov in and rorb sbb adc (bad) ljmp push pop and rcrl pop imul push dec or out flds push jne cmp xchg sbb pop (bad) jbe mov cli imul push push popa pop inc dec pop ficom or sub lea inc mov test das adc inc xchg pop cld jbe cmp jne je (bad) cmpsl andl xchg dec push pop mov cltd mov addr16 mov mov idivl add sbb cmpsb dec sub or (bad) (bad) or test inc stos test lods je inc inc dec leave icebp and mov movsl mov or xchg test mov (bad) or push mov pop aas xor pop lcall idivl decl sub movq js push in xor int push gs cli inc lea scas add xor push jg pop jnp mov lcall sbb mov push lock pop or arpl sbb (bad) fdivr push add stos in mov add loop ljmp mov out out scas jge subps xor lea outsb xchg or rorl push xor jbe jnp sub popf les dec enter insl mov int3 mov jecxz xchg sbb or inc les cwtl out insl (bad) aas pop push and jnp cltd pusha int iret int sarb mov pop jmp inc mov aaa and orl mov js cltd fs ret arpl jae mov adc sub int3 and lcall fisubl push mov movl push fsts dec mov pushl mov jge sbb add pop dec push rcrb inc je xor imul int lret inc pop cmpsl jae and add roll xchg adc rcrb in outsb adc push fistpl fisttpl adc mov ret aas (bad) jno (bad) ss or and je add sbb stc js mov imul fimul inc stos stos cmp inc adc imul push push push mov ss add push adc in cltd loopne sarb lods (bad) mov insl or push imul or les mov in mov ret (bad) neg sbb adc add add xchg mov jns xchg jo add jge push rclb pop pusha repz or rep adc (bad) cmp test inc pop jne insb and gs mov test and add jae adc or insl aaa sub fisttpll and insb cmpsl ret insb and inc or sbb mov daa adc mov adc cmp sbb dec inc into outsl popf xor movsb add push push les test lret add mov dec fmuls inc cmp push clc and enter aaa ret mov sbb popf repz xchg imul mov rolb sbb adc pop mov cmp xor sti std clc test (bad) sub cmp sub mov je inc adc call mov mov jne xlat cs mov push push push or cmpl push push adc push push and sub ss sbb insb mov fnstcw xor xchg push jmp push inc cmpl push mov jae lock cmp add pop (bad) (bad) add xor fsubr aas push inc cmp or sbb ret push push mov push mov push xor push divl cmp fs push dec (bad) ja loop (bad) push push mov xchg or push mov or push jmp jp xor push adc push or fwait cmp gs fisttpl pop es fmuls cmp lock cltd xchg pushf andl add mov mov pop pusha add cmpsl and or sub adcl gs sbb or pop xor lock xchg xor or adc (bad) push clc fist fimul rolb outsb adc mov insb push pop push aad fmuls ret inc insb inc fsts (bad) jo pop and std jne test ret jo jne adc je cmp das jo xor ret add test insb add into jbe jo mov adc pop mov out xor sub fbstp xor insl jge ja pushf bound add (bad) fdivrp mov (bad) cmp push xor add cmp dec divl pusha sbb or and and cld mov (bad) js jle or int pop mov pop orl add pop add popl fmuls fstl sbb and dec ja dec push hlt or idiv mov jne mov cmp mov mov add inc or dec outsb jmp lea fcoms mov clc shll cwtl push push push and test ret loopne pop or lock xor adc loopne sbb jge sbb mov sub inc incl pop mov push mov xchg sub push xchg dec hlt and pop dec sarb and and pushf and adc inc loop sbb and dec leave (bad) je (bad) xor cmp and adc (bad) push mov mov dec xor insl sbb adc in and iret adc push pop fwait sub pop adcl adc testb fldt std (bad) lret jle mov je add je imul enter or or into lds es adc mov cwtl mov cltd out or adc pop push or xor pop out inc add dec add fnstsw adc mov or (bad) mov cmp add pop add in into sbb ret cmp std pusha push pop aas call xchg (bad) fnstcw sub and pop xchg pop push aad xlat mov (bad) outsb cmpl push push popf xor ss xchg xchg mov or leave sbb test inc and rol movsb mov mov inc sub jae call (bad) and jle aaa cli xor imul and movsb pop pop adc sub outsl jo push in mov mov add in sahf and jmp fidiv cmp int pop cltd lret inc or lds adc adc xor leave enter mov push push push mov lret rcr jmp pop jbe cmp jne and jbe cmp xchg cmp loop push inc dec push fisub pusha pop dec inc push xor dec (bad) fs jno push ret xchg mov add mov adcl sbb add xchg cld push and push push inc add mov xchg pop or add test push or lret fisttpll add mov loope mov or sbb mov mov aas ljmp cmp outsb insl es notb mov rol (bad) jno push inc js daa loope mov mov das ss scas mov jbe,pt cmp dec leave lret test fcmovne sub insb cmp dec inc adc cli (bad) into push push cld mov pop mov call dec and inc or outsl insb jl test sub shrb mov cmc in mov add or dec sbb insl fisttpl or sub sbb ss neg adc add int3 fucomi push pop fbld cmp cwtl mov fisttpl aaa cmp jne mov mov in mov sub imul rol add push push dec iret lcall and inc and sub stc sbb push std sbb push push sbb lods jne dec inc sub mov mov das cmp push xor push inc cmp push insb jle xor dec in cmp mov push sbb adc loope ret mov pop mov push mov repnz xchg xorl sub mov cmp data16 and fs xor arpl mov lcall xor and cmpsl das fisubl and mov or insb test gs dec rorb mov je mov and and lea mov in or (bad) leave lea imul inc loop pop mov stos nop mov push xchg ds sbb je or dec jmp pop mov leave iret inc jne push ds sbb mov push mov sbb jp mov je rolb js mov in out adc pop mov cmp sub out divb cmp adc jo xor dec shrl pop sub mov mov pop fist mov cmpsl lea aaa push lea fildl jl jne xor push mov pop mov pop lea lret pop jo imul cmp clc mov or je pop push sbb aaa jns insl jmp adc adc mov bound insl pop mov add push push cmpb iret cltd pop lods jae or or mov cmp ss pop add xlat cmp pusha push inc push sti or push inc inc jo push xchg data16 jae xchg adc sub mov shr sbb into cmp je ret imul and inc clc sahf in xchg push loope movsl imul pop cmp sub dec adc cmpl rolb jo sahf mov scas imul or daa push or cmp cmp dec add add dec das pop insl outsb cmp js test dec adc ficomp je cli pop sub inc jecxz push add add xchg out push push inc lcall (bad) or fcoms repnz jmp push sub es sbb (bad) add add jo dec push lods test dec aam imul sbb pop (bad) ja sahf insl xor add and sub pop fldcw mov ret outsb in and pop add mov pop inc adc xchg rorb cwtl fwait mov sbb dec push dec mov and scas or mov incb or lds sub push mov add clc sbb mov mov sbb rolb or ljmp aam fs daa mul fs adc dec push sub push mov orl das push inc sub inc push xchg sbb subl ficom hlt dec outsb jno aam mov pop (bad) shlb inc inc mov and gs fstl or adcl inc scas jp,pt jg dec xchg adc loopne orb nop mov (bad) clc and push mov inc and lea enter xchg mov push (bad) dec inc or shrl mov push cmp lea (bad) jne mov or cs push lock add sbb push adc in sub outsl rcll lds imul mov bound iret ror clc int dec mov and jbe pop pushf and jmp jae and sarb fs sub inc pop enter dec js and add (bad) jle popf mov jae or push pop mov nop addr16 adc or sub leave jbe cmp and inc leave inc add xchg pop sub popa scas fstl mov jp lret pop sbb push jno push int pop addr16 or pop inc push xor lcall lcall sbb mov leave pop mov xor mov jb dec push xor adc cmpb push add ljmp pop add jecxz popa outsb mov add or pop pusha adc or fnstenv or ljmp jns dec and decl adc pop ficomp cwtl nop imul ret adc jmp or push notl or push aas sbbb ljmp leave cmp shrb xchg into sbb mov add cld add loop sbb cmp fidivr out jne in sbb cmp pop test jbe xor and jbe shrl xor sbb xor cs adc repz cmp nop cld add idiv pop jecxz add mov adc xor dec fsubs idivb cli iret push out pop mov push pop nop inc movsl cltd cmp mov ljmp fnsave js enter repz pop je sbb addl and mov inc sbb sarb adcl jl mov inc dec adc (bad) cwtl scas cmp cltd lret std cmpl mov (bad) mov sbb adc pop add enter scas stos add mov ret xor sbb aam jne ss ret pop ret (bad) idivl push inc xchg je push mov mov mov adc ds cmpb xor add stos aam jo dec je cmp (bad) mov fidivl or mov pop jl add fbstp and mov sub jo dec clc jmp popl in mov or (bad) cmpl push or fdivrl fwait mov fmull mov or inc jbe imul int3 int3 push inc xor pop inc xor mov sub cld fiaddl testl mov testb loope cld lea and (bad) jae sbb popa lea mov rcr fidivrl lea test pop pop inc or mov and jo sbb sbb ss leave (bad) iret fimul or or sbb mov mov leave jae sti aas mov and pop push xchg push mov inc sbb add push and scas insb sub scas fidivr lods loop or push loopne gs jae adc ds pop repz jge imul arpl insl cld jmp pop leave rcrl xchg mov or cmpsb mov movsl ds popa fcompl es int adc sub std outsl (bad) sub pop cmp jb sub or cld lea add add dec dec mov mov cmp jmp clc jae bound hlt sbb lock aas inc cmp fisubl in lea sbb xorl push inc lods imul test leave push cld push movl pop cmpl ss xor js jp xor int cmp sbb cmp pop pop call add hlt mov cld lock fcoml fsubs int3 add ss lea push pop (bad) dec aad incl pop push pop pop and mov dec int3 jge pop mov pop fcomps das fmul mov data16 ffree insl rcrl loopne outsl imul and pop jmp add fiadd adc or mov add js push adc sub xor mov and arpl dec je push (bad) push mov lret ja pop dec (bad) xor fwait jl cmp mov xchg adc add cmp test and add push or lahf jnp (bad) dec movsl xor jge adc sbb mov add xor or pop jbe inc ja out into inc out (bad) repnz das imul push jb imul cmp lcall pop sbb test insl clc or stc or inc jmp mov sbb jmp add enter inc push xlat cmp nop pop or adc add and mov mov mov mov add xchg lods or (bad) pop int3 xchg gs (bad) add jmp es nop and inc aas cmpsb jmp in outsl push pop add imul (bad) xor (bad) in arpl pop call xor in lock hlt clc or in in adc ds add jo xor adc mov insl nop popf or adc and pop mov insb mov lea or jg outsb jnp and std jecxz ja inc (bad) leave and mov out (bad) rolb jmp xchg iret sub inc sub sub dec add insb cmpsb jo add outsl add xchg mov pop and in adc sub daa and sub add dec (bad) jne les add fsub sbb xor hlt pop inc xchg sbb imul imul movsb imul (bad) jne sub cmp ret into mov xchg adcl rclb mov mov dec mov xchg js or mov fmuls repnz add cmp inc orl inc ja sbb lahf mov xor or sbb xor pop jb enter outsl lock push mov popa popf sbbb pop add ret pop pop sub pop inc stos push outsl in mov (bad) arpl or dec hlt add push das hlt pop mov test je mov divb dec pop les cmp je sub or (bad) jg insb rcrl adc jne lea mov test mov sub mov xor mov add fidivl jmp das xor ret mov js out lea or lods add or inc lea popa cmp jl out or (bad) mov jb cld mov mov add fistp and mov jle ss push into clc ret cmp enter fildl and bound sbb sar mov (bad) sub loopne or mov pop or or or or std add push xor push leave push ficom rcrb xor push int3 dec pop sbb mov add or shl or mov jmp rclb jae out inc adc into dec loopne or add push jecxz jp jb mov js sbb lahf push and mov lret call test push out es iret mov das mov pop aam je jg dec and adc lods pusha push sbb dec add mov jecxz xor dec push push mov xchg or fisttpll in test inc pop push adc dec std push dec pop xor xchg sub test cwtl adc adc jae in insb incl dec mov add fisttpl cmc inc (bad) pop fnstsw nop fistpl dec int3 xorl xchg pop adc jg test stos decl dec call push rorl inc mov mov and mov jo xor sub pop or adc loopne inc xchg mov xchg mov popf add jo insb sbbl fnsave lea dec ds mov inc mov or loope push cmp loope es adc int pop movsb xor mov mov pop jne and shl add adc lret call add cli mov fs pop and clc xchg push xor cld aas imul mov loop dec adc pop xchg add fmull lret mov rclb inc pushf ss cli push test pushf testb (bad) mov rorl test mov pushf push push fbstp adc mov cltd test add push movsl cmpsb jb (bad) mov in lock or and and (bad) jne mov xchg je loope negl add push dec dec xchg pop cmp sub mov arpl cmp (bad) mov pop (bad) (bad) in push xor xchg aas add shll push inc mov jle add push dec jae fwait dec fsubl fs and dec lods lret popa push outsb faddl lods popa insl mov cmp inc imul mov push leave sbb and je sub notb je cmpl mov ret sbb adc adc (bad) jmp push or cmpl arpl pusha sub js jbe jo rcl je or sbb scas pop cmp and push and in scas mov pop sbb cmp sbb xorl addb inc cmp dec (bad) jnp test jl mov ss pop push jne mov push xchg mov pop or dec outsb loope add insb pop mov jo push adc pop repnz (bad) push repz pop in push stc add mov adc sbb inc ja or pop clc aam lret mov xchg frstor sbb xor pop push adc mov cmp cmp jg mov lea sbb or js ret mov jbe loopne sahf aam fdivrs outsb aaa pop scas clc jg cmp jg or orl stos mov adc and in adc jp xor imul in push ds sub decl xor fs call xor stos inc and adc xchg in mov cmp test fdivrs imul insb cmp and xor das ja jae sbb clc (bad) dec and clc jae cmp jl cmp sub mov adc adc mov add hlt fs cmpb mov fistpl out std mov call es lods aad bound dec dec cmpb into inc das insb les dec lock rorl mov or and push add pop and mov push mul lret mov scas jg jnp pop or mov sarb xor pop push mov adc scas je sbb push inc jle cmp inc sub ss lock or add fnstcw popf mov sbb in jnp inc loopne add dec push push sub popf ss pop jmp lret dec sub repnz mov add xor or mov sbb jge add push and rcll ds pop out push sub mov pop mov pop sub adc outsb push push jnp cmp inc mov ret sbb push xchg sbb data16 dec aaa jbe cmp loopne,pn add pop inc pop aam loope insl nop mov inc jl mov gs in loopne shlb sub push dec jo mov jnp mov add push aaa (bad) imul inc movsl out sysexit cmpl gs xchg and inc mov mov mov loopne sti iret xchg stos xchg mov in loopne xlat mov sub jg mov add push je add aam pop push or fwait mov cmpl js jo mov push cwtl add push test sbb or add imull (bad) or or fdivr lock push jb adc testb inc dec loopne sbb jbe pop pop dec mov in push adc push dec and mov or mov jmp cmp popf dec jae cmp mov push aam push mov push jge sbb add pop and or jmp sbb add cmp ja push mov xor pushf push pop jmp cmp fwait mov xor cmp rorb je pop int3 inc (bad) loopne pop and (bad) sbb xor adc rcrb and push and enter mov adc ret ret sbb sti inc xor test push push sbb inc and lods pusha pop add test jle inc push call sarb xor icebp sub add jecxz popa ljmp stos push sti icebp aas insl (bad) jp aaa push fstpl cs stc negb mov pop sbb mov test dec pop adc lahf cli mov aas cmp sub stos dec xchg dec dec frstor pop iret pop pop inc pop jnp lret (bad) sbb adc das push out xor jb das stos push jne insb es push mov pop mov (bad) (bad) mov xchg inc popa and push jge mov mov rorl xor inc mov push cmp xchg adc (bad) pop and xchg pop xchg mov cmp in popf adc sbb or add xchg adc (bad) jns pusha xor mov add rcll shr pop push mov sbb loope test cmpl and pop lock cmp addr16 cltd adc fdivrp es mov mov ja push mov lret and insl movsb inc dec stos loop lahf xor mov lea out xchg mov pop mov pop ja enter adc shr dec fstpt jb pop inc and enter bound pop pop jne jb xor sarl jl push fstl scas adc xchg pop push fisubl or nop addr16 jl adc push add adc cmp sar adc xor daa pop push icebp fstpl cmp mov cmp pop jp call lea lock mov push dec out push test fistpll jae pop push arpl adc push pop jmp pop pop ret orl or inc cmp mov enter (bad) and add push pusha pop stos sbb sub fbstp fcom adc dec xchg push mov cmp insl xor cmp ret mov subb cwtl lods pop loopne clc fdivrs (bad) movsb movsb mov outsl ja push mov clc push inc sahf pop fsubr cmp mov leave inc cld dec ret sub xchg or call pop mov push push outsb pop push or pop cmp (bad) (bad) push call or xchg push inc jae into sub and dec adc repz xchg dec add jne add fs push push push rorb pop mov leave pop adc fstpl rolb ja sbb inc cmp push inc sub ja,pt ret inc adc adc enter dec cmpsb sbbl jle fildl jae mov shr mov ja xchg cltd cltd lods test aad loopne mov movzbl push adc and sub and sbb test mov cmp inc xor push inc rcrb push pop jne push je cwtl mov adc jmp dec (bad) or push adc pop dec dec or leave and xor test sbb sbb sbb cmp icebp or push loopne loopne es repz adc dec inc shll mov stc fbld push movzbl shl xchg loopne test push les pop and nop test jp addl lea pop ret lea and fs push push push mov mov test or fnstenv mov adc or push (bad) jecxz push rorl or push xor pop cli ljmp out stc xor xor xor xor add and sahf fist and scas and inc xorb pop mov fdivs inc mov fdivl out cmpsb jmp faddl aam dec out mov sub push std test into cld leave enter (bad) inc xor inc and adc push shll jnp cmp adc divl jne push shrb adc and lock push adc aas sbb mov ds insb popa cwtl jl lods push inc cmpw call and cwtl mov outsb adc push neg inc sbb add push adc (bad) out mov sbb and and nop sbb sarl (bad) icebp movl jle adc js jbe sub adc sbb dec xor dec (bad) xchg mov mov jns inc and mov jae loope xor subl rolb fnstenv and scas jp imul add cmpl add repnz inc push mov (bad) out or faddl mov je cmp mov dec in sbb in mov mov or or mov jg fidivl dec (bad) mov enter inc or sbb fmull (bad) jge je push fs je (bad) fldt add mov push and dec adc jb mov loop inc dec decl push mov pop mov dec push push pop jne pop sub pusha push ja test xor or inc jmp mov ljmp aam or (bad) testb pop je andb int incb mov mov push std or cmp mov and popa in mov test xchg subb or inc or (bad) imul add test mov inc xchg inc push out pop add data16 incl and mov mov std pop sub sbb inc and or test imul ret cmp ds jno and or test pop push pop shrl xchg pop mulw or push je jbe (bad) sub out push pop sbb pushl ss pminub (bad) movsl add or mov arpl mov cltd stc add lea stos outsl adc jmp mov sub loope pop add mov xor mov mov jmp cli pop pop fadds pop push (bad) or fwait test outsl addb jb das jmp and imul sbb sub leave leave adc negb pop mov inc test pop in add (bad) lret add add add cwtl jmp cwtl mov or (bad) (bad) mov sti and js push movsbl mov ffree por cmovnp mov setns sub daa jmp add inc rclb sub enter add (bad) push pop dec dec sub cmp je pop jo push dec pop dec dec je or mov daa or inc xchg mov adc dec sar sub adc pop pop int3 mov out insl jge push daa add ret push mov inc inc shr jmp pop aas push clc sub sarb lret pop sbb push aaa dec mov insb push mov lret je ja jmp lods xchg adc and ds xor outsb hlt cmpb loopne inc enter and adc sub stos jbe mulb sbb mov iret jo pushf pop add mov push jg xor clc addr16 jge (bad) in xor pop call insl pop ret jb add mov test mov push insl add je (bad) xchg rcr clc sbb int or sbb into xchg sub adc es dec xor lock imul out inc jmp and add pop ret ret and mov call dec (bad) int clc push icebp add int scas (bad) js cli mov cmp test xchg xchg fisttpl xor enter pop lock pop xchg je xchg mov add push push aaa cmp pop mov shr insb sub inc out adc mov pop jp fsubrs test pop (bad) shr jecxz jnp int3 data16 mov mov push xor hlt or push adc arpl (bad) rcll cmp jle mov mull inc jle sbb jnp sbb sti test pop ss (bad) dec shrb clc xchg outsb xchg mov mov scas sbb adc inc stc cld aas jecxz rclb enter pop and clc lcall or outsb inc cmp adc or add pop mov add pop ret fxch repnz rolb add xchg xchg mov aaa (bad) rcr and int3 daa xchg xor cmp rcl inc sbb jl and adc add icebp es insl xchg repz or mov inc ljmp push or sbb jmp and je sub cmp push cld push mov and mov mov data16 in mov add push jno mov push sub mov mov je add flds sti ret cltd jmp or sti cmp loopne xor sbb jecxz add xlat jae js rorb sub fisubl je mov icebp pushf pop jnp mov sub jge sbb aas idivl dec jge ss or sub xchg test or add sbb pop lock lahf lock mov push push repz int sbb ret xor sub cmp sbb int3 hlt mov jae scas push sub xchg add lcall cmp je or and shufps sbb sub hlt mov test es mov sub in or jmp add fcomp fistpl jno sub xorl push add mov add ljmp out or inc inc push fs (bad) (bad) mulb cmp mov lea push lods mov inc mov jae ja jle lea push cmp pop add (bad) dec fildl adc push dec hlt sbb pop pop movsl jae mov adc gs or xor pop adc lcall (bad) fnstenv inc shll xchg or gs and add cmp mov insl insb je (bad) fdivs push test fprem cltd pop mov into ljmp sub into adc add sbb pop and and push jp (bad) scas jmp es xor push inc sbb ss jl aas ret dec loop pusha scas push jge addl arpl mov pop jge xchg sbb sbb or or pop or jb cmp in rcr mov psubw sbb fstpl or cmc add pop cmp mov jbe xor ja sub fsts add pusha or pushf dec sahf and mov scas int stos or fwait aad inc mov pop rcr mov cmp test clc mov inc cmp xor pop add je xor cli pop push inc add jns dec dec sbb or nop cmp cmp enter cmp xchg or loopne daa cmp mov mov gs js shrb or jbe and dec loope mov outsb test or sub or push pop xlat stc jmp pop loop jae in push mov ret test ljmp add push cmp jge lea shl mov add xor cld and cmp jl insl popa xor aas adc mov out dec lods and pop sbbl movd stc cmp ds inc test cmp cmp push cmp xchg pop push push pop pusha rorl ljmp inc lret sub lcall fldl jp cmp push fldlg2 idivb xor outsl mov ret cmp add mov dec cmc out adc push fildll je pushf mov jo mov sbb icebp cmp jne dec inc pop push adc inc jmp outsl jg sbb or jbe inc or ja lcall psubsw push mov imul pop hlt pop aad add daa and clc push add lock in mov mov jmp aad cli push mov pop adc add mov addr16 scas popf inc cmp je daa mov (bad) loop pop inc ds and cmp jmp push cs ss jg outsl das push negl std aaa jne pop incl mov movl mov popf add mov js xor dec mov or cmp pop icebp cmp clc mov push lahf pop cs dec (bad) xor dec mov mov xchg daa and push push xor cmp mov or and orb mov inc pop lds decl aaa (bad) mov repnz inc fwait inc mov inc cmp sub js push (bad) add lahf je sbb aaa push xchg push mov mov inc inc or mov into or add fistl sbb add scas shrl sbbl mov insb xchg mov and or jne into dec pop pop sbb incl xor js cmpsl inc sub push jp enter stos testb add sarb and inc jmp xchg sub push fmull sbb inc xor and push or sbb sete cli insl call jmp rorl push inc mov push push mov jne andb out push or add cs je sub loop pop faddl inc add add pop sbb movhps push pop call mov popa loopne or dec mov mov mov shrl shlb aad repz jnp pop mov inc js pop hlt cld pushf xchg xchg mov pusha mov fldt cmp jae jnp aad xlat or jne push repnz inc sub das dec add fiaddl pop add jp push jmp les and xchg and xor and in stc mov daa pop out add lock mov jle jmp dec dec movsl test je pusha repz inc cmp lds sub inc push into pusha or pop dec or add dec inc in (bad) icebp mov xchg cmc fcompl out sub dec push push in sbb pop sbb loopne sbb and xchg data16 sub lock orb data16 hlt mov add and pop jmp mov push mov mov lahf lods (bad) aam sarl in in or cmp pop lcall jle cmp jl cmp fs lods flds xchg xchg push cmp xorl cld fmuls sbb pusha or imul sub add pop ljmp or inc je adc jle adc sbb push push or xor jnp inc adc ljmp pop push mov or aas imul sub inc cmp jl addr16 subl dec ss das enter jge negb xchg ret dec popf (bad) cmc mov in xchg mov push jo loope dec or mov in orb mov or and add addb jl incl xchg xor pusha cmp push les push cmp sub and adc cmp add or or sbb inc sbb clc orl imul iret repz pop jae (bad) xchg jle or cmpl fwait insl adc insb add inc or js xor adc xchg or and lea stos in fcos incl cmp jl cmp jg sub mov inc cmp jne inc push ds je inc xchg jle push xor arpl push neg imul pop add adc push inc cli xor sub add push or mov sbb fmul push in mov jmp repnz sbb mov xchg sbb imul jge push sub xchg add jno push orl lahf xchg cmp pop loop divl std inc mov inc add inc jae cs and insl mov bswap lds fcoml ds xchg sbb sub hlt sbb out sub add cli push and sbb push cmp adc mov leave mov dec nop adc cmp fisubr aas shl cmp insb es pop sbb scas mov adc push cli jne icebp adc push push in fwait push xor pop dec mov js addr16 sti pop adc mov mov inc aam jbe sbb xorl add push je push jb cld push pusha decl adc dec cltd sti and mov rcll in in mov push cld mov mov clc fisubl aam les push lea cmpsb adc in adc push popf push imul mov in aad out xchg add andl stos xchg mov pop bound hlt xor add sbb push push andb add push or mov mov cmpsb adc add loop ljmp jb vmovntps shr mov lock imul inc test in dec test jl clc fldl adc lea mov mov insl les imul or jle xchg push aas jbe mov add pop xchg dec lock (bad) dec mov and mov jmp dec add das jne cld shll pop mov andl cmp fs and pushf mov imul jl add pop push pop jno fsubp push adc add pop add (bad) push data16 imul pop sarl jmp xchg push mov sub adc sti add mov hlt add fisub inc cli out out adc (bad) adc cmp je mov fs inc cmp out pop mov out not and add or loopne sbb in jl mov pop push inc dec into pop mov add or or pop (bad) hlt or test into subl pop xor int sub aaa add add mov fcmovnu adc and fsubs or insl pop ret inc lods or jmp and and mov ljmp aad adc cmc movsl add pusha lcall cmpsl xor fild jnp mov sbb mov sbb adc addb push mull out pop xor push or outsb idiv mov inc adc cmpxchg call or jns cmpsl or add adc mov adc in adc les push adc cmc loope sub sbb mov insb enter dec adc lea fcmovne daa mov inc or idivl add or jp inc jne fidivrl shlb push adc xor fidivr (bad) sub dec pop and pop adc and add and push mov outsb or inc imul hlt jmp nop aam movsl jo or mov push inc out jae test mov cmp sub decb iret sbb fucomp add sbb pop jne mov cmp es add pop and jae mov aas adc jmp mov or fimull jnp add or insl test adc insb pop iret inc test imul out frstor into mov cli (bad) push cld divb mov inc mov mov pop ror jbe adc sbb mov add or mov sub sbb mov or je mov mov dec dec push into mov push (bad) pop pushw fs pop jl jmp loope and or push sbb icebp inc and pop aad cmp jle pop dec or rorb dec popa repz jecxz sub iret call fistp in and mov decb jne jns pop das nop mov dec adc xor sub mov imul cwtl sub add pop movsb mov add pop (bad) imulb pusha mov jp or fs insl scas sub add sbbl jge fsub pop sub xchg or mov bound std into shr or or das sub testb lea and jnp mov or test xchg or adc mov sbb cld mov jne add and adc cld lahf shlb lea out (bad) outsl (bad) jne cmp cmp push outsl adc dec xchg fiadd add push in ljmp xor xchg jmp sbb je lcall or mov movnti inc xor cmc sub mov sub push std push mov and cmpsb stc pop dec add and bound add bound shll inc dec loope fwait jno push fcmovnb dec loopne ret bound aaa imul (bad) or inc or add dec push sti (bad) outsb test out push mov xor inc (bad) repnz outsl daa outsb jp xchg add cli ja lea orl fcmovne icebp mov pmuludq cld lock push out push ja,pt testb sbb mov jbe and add jnp pop mov or inc mov jno mov mov or js cs rorb mov add aad jl cltd ljmp add cld (bad) sub and pop sub mov xchg push jp ljmp cmp push sbb adc clc mov jle sbb add xchg popl sbb aas lea dec pop pop pop xchg fadds mov pop dec cmp mov clc icebp add sub and dec xchg hlt nop dec or or push jno fs sub add insl andb insb fstpt incl inc xor call rorl pop scas sbb ror mov or xchg gs dec pop pop pop xchg in xchg pop call pop and mov nop dec iret in mov adc and or insb test cltd ds inc xchg mov and inc adc add stos adc jno insl jno jge push push fisubr pop mov mov mov call xchg jmp cmp test cld sbb es test imul dec call jns add xchg dec imul sbb pop jbe ja ja push fs jno mov add sbb cli pop cltd xchg xchg in punpcklwd movntq cmp xchg xchg in jns adc push or mov sbb cmc xor insb decl ljmp sbb int or mov or sub shrb sub int roll sub xchg aad mov lock fs mov or ja mov or xor mov lea out sbb add mov rolb mov dec and dec inc mov xchg cmp out jecxz push push ljmp ret cmp jae orb jne addb inc add push lea jmp andl fstpt cmp dec adc push cmpsb call xor cmp cmp lods shlb adcb loope add dec test push xchg or inc lea jbe jo xor aas push ss lods fistpll mov add incb test pop orl dec lds push pop push cmp fbstp mov or out inc test dec jge and js cmc ret jns (bad) cmp and mov cli out pop adc (bad) jb push mov sub ljmp dec mov ljmp add jb lds add mov mov push xor jmp out or jb fmuls fisub jle enterw sub mov sub pop lret lock imul dec push xchg cli out jbe or enter movzbl add and cmp rclb cli or xchg jae add fwait in arpl rclb loopne add imul and (bad) sub sub jp jbe add loopne cmp out jae mov int lret jl cmp mov or adc xor push add jne (bad) data16 jb add jb cmpsl jle aam mov loop inc jae mov pop inc mov mov cmpl andl inc cmp xlat push mov sub mov mov jne (bad) jg push add or aas insl ss mov sbb call popa pop mov xor testl mov jle add jge xchg je rcl add sub sbb mov mov push mov mov push pop cmpsb mov sub push orb fs or cld mov inc push mov or mov stos xchg inc (bad) call ss jae cmp sbb repnz aaa fimul inc or aas add or add pop xchg mov popl mov sub mov sbb jne jo lods insb jne rcll shrl push sbb sbb push repz or mov pop cltd sbb push cld add mov jecxz aaa mov inc jmp andl sub push push mov inc jno mov test loope cmpb iret xchg hlt push dec push jae,pt sbb jmp cmpb inc inc pop test dec cmp mov mov cmp (bad) cltd jbe mov lahf repz adc ss mov jle jbe push insl push xor push jle push pop add inc inc lods sub fistl or stos sbb movsl (bad) or shr jns ljmp jb out jmp mov lock rolb push mov (bad) mov dec js and push inc or inc loopne inc mov rcrb mov sbb call insb fwait sti addl gs add cmp lock rclb lods mov popa or repz or mov mov xor ja lods outsl btc jbe sub jle xor push gs push pop inc inc stos arpl add push aam jno xor jae push adc add inc mov push dec aam lgs mov adc mov pop sbb and pop ret stos push push add adc fwait sub sbb add enter mul sbb addb xor movsb iret push (bad) xor fistpl cmp add jne or mov das in in sbb jne adc xchg mov imul popf nop cltd lods pop stos cmpsl inc ret or lahf lods fstpt inc jmp add imul ror leave mov pop rorl mov lods push jae subb pop pop push pushf inc sub rorl push call xor mov es xchg add inc push (bad) mov jb jae mov mov mov jbe orb or frstor ljmp add fsubl fdivs mov or rorb and je sub mov mov jne repz sub mov mov mov push mov dec (bad) jne pop add jl mov test daa test mov mov mov mov iret or jg inc mov jp fldenv test sbbl jne adc outsl cmpl inc dec je imul lods sarb add and add lods pop gs cmp adc add and out cmp cli sub add xor mov ja xchg xchg scas mov lahf js xchg ljmp fisubr pusha add sub push push pop mov or add je test cmp sbb sahf subl loop mov cs or pop pop imul xor jbe sbb add ja sbb dec add add jmp stc imul inc leave call bt mov pop pop dec cmp inc les inc pop and jne pop mov xor shll cmp fisttpll cld sub xor test into adc adc push pop ret or std cs and call push or std jecxz mov clc pop lods flds lret mov push repz clc fistpl fbstp cmp ja decb sarl sbb (bad) cli mov repz add pop ret lock xchg inc sbb mov inc ret or sbb and jmp add jmp clc pusha pop jns jmp cld or sbb push ljmp int3 push cmp inc repz add inc lcall daa cmp (bad) cmp pop cmp xor or mov and or roll sub lods ret jae mov mov xlat dec push sub inc mov loopne adc std cmc xor jne pop rep cmp and enter push jl mov mov pop sbb jle mov in fsts inc pop pushf jg js add (bad) mov inc sbb sub stc push call mov inc jno sbb dec xchg mov popa iret cmpsl call cmpl push sub adc bound sbbl je nop lea aaa dec sbb stos or mov int3 adc rdpmc (bad) (bad) mov leave fisubrl push pop sbb out sub xlat mov push adc add jae mov inc addl lret (bad) xchg xor or adc jbe (bad) pop imul flds inc jno inc xchg cld cwtl pop jne sub add sub hlt into sbb mov adc in ficom push and inc sahf into and mov scas test fs lea mov orl cld add adc mov sub pop fildll push jp push nop aas out sub movb jb rorb sbb xor cmp sbb rol int jl lods push mov cmpsl push stos pavgb xchg aas in push ja movsl or push int jae or mov cmp je lock inc sarl lea stc inc int3 add sub cmp hlt mov push push push pushf sub jno xor or sbb jl or lea mov mov xlat nop dec push bound pop cmp pop push inc shrb inc mov dec mov dec hlt push push es add jo lods loope pushf push loopne xorl push xor and movsl push adc cmp sbb jmp movsb lock stos pop cwtl dec sti add pop mov jne inc mov orl movl lret aaa inc adc adc add push mov pop cmp inc lock jb inc xor inc scas ss pop insl stos arpl and push and adc pop jb (bad) sbb (bad) jge mov jle add iret pop mov and push mov mov insl rcrb sbb mov shlb cmp xchg jl sbb loopne out sbb mov mov push xchg mov imul inc cmp mov lret add jbe sbb push xchg mov (bad) jb cmp add sbb sbb xor in lea cs xor insb pusha adc push xor push repnz xor leave lock mov mov cmp movsl rcr fs push xlat push mov es test xchg mov or (bad) or pop or les inc nop mov cli test arpl sub pop add rcrl mov stos mov or in xor aam fadds pop xor sbb pop dec push das (bad) ficompl or call inc notw or shrl ljmp sbb jmp rcr aam mov or jne (bad) dec lock inc ja out ja out (bad) jb cmp ja pop cmp dec adc dec dec jb outsl ss outsl sub outsb mov add outsb sbb mov adc add dec xor imul jbe out adc or ss jl insb push inc inc mov in sub jecxz test jl cmc and lret inc out adc adc adc mov sbb lock or mov cmp mov loopne (bad) push mov fisttp push add js mov je cmp inc cmp adc xor lock and inc andl pop dec jbe add sub pop jmp sub fwait js out cmpsl mov pop adc cli adc fisubr adc roll ret xchg and rcrb pop add pop (bad) push dec lea aam jo shrb cld mov or push add mov cli inc ja jnp xchg jo test outsl or inc inc cmpb push mov fcomps ja sbb in lcall js adc mov cmp pop mov movsl jmp inc jns call push jns add dec (bad) push cmp hlt or xlat adcl pop push (bad) dec pop dec stos add ret idivl push mov ucomiss cmpsb insb popf push and xchg dec (bad) test cs sub (bad) (bad) fisubr int adc je pop test cld jne nopl aam jnp movsb add call push mov or add mov cmp adc sub push jno rclb jnp pop mov fwait mov mov test add and ja add mov pop jge mov inc repnz dec bound push push lea dec fadds stos (bad) (bad) je sub mov out clc dec inc repnz inc inc mov cld in xor pop push cli mov out les push mov sti into pop and sbb cmp xor and or subl jno mov sbb pop fimull aas jecxz lods je add mov mov sbb add jecxz inc out pop adc xchg add lods mov and pop mov enter leave lret fcmovnu mov jb jp push push aaa in int jmp dec mov hlt cmpsb adc sbb pop ss nop or jo xor add mov push pop push xchg or aam mov ja leave lods push jl dec mov jle cmp or push jae wrmsr jne mov inc pop std push in mov rolb cs xor lods add cmp or adc (bad) lcall orb pminsw (bad) xlat (bad) ja adc insb inc int pop adc xor add pop adc pop mov add sub pop add mov add add add mov cmp or leave and or add inc mov xor test popa jmp push sub sub sbb and sub xchg adcb dec xor or imul lret jb sub ret dec adc je xchg imul icebp sahf inc mov sbb test xor rcll cmpb mov jmp test inc mov push lds test jne movsl clc inc mov ja insl or sbb sti testb pusha addl and clc loopne push mov adc out ljmp pop add ja sub push sbb pop fcompl imul das enter push lods test xorb loop in call dec sti cmp push adcb insb pop mov mov push mov rcrb outsl add mov ficom cmp inc or loope clc lea mov fisttp loopne test scas inc mov scas add or push je push jle lahf adc nop imul xchg out or les lods call loopne popf in test rcrl jmp sub and push jmp xor add and (bad) push hlt dec pusha stc sub stos insl mov adc cld mov aaa sbb and clc test add je add mov adc je dec or pop (bad) mov pop add sbb push aam mov jge jno sub jb test sub cld sahf cmp inc add iret jl or xchg and xor push sbb adc push adc xor inc mov out movsl push and sub mov and and mov in add and push es adc (bad) or lea fdivrl jne cmp dec mov mov je dec cmp mov cli sbb leave and rorl push insl je and lods (bad) cmp adc add insb fisubl jmp adc xchg movl mov daa pop sbb xor xchg (bad) xchg or cmp je imul push adc bound mov jmp and cmp mov sub jmp out mov mov mov mov xchg es mov je jg (bad) fistpl push cmp ja add cmp or (bad) int sbb jne xor dec fwait mov in in call nop add in sbb out or (bad) pop mov in je or pop ja lock in aad mov int3 add add push pop orb dec mov cmp adc dec xor pop cmp pop pop add aaa sbb add lahf ret mov add jp mov jns hlt jmp add jmp negb dec (bad) hlt adc xor notb lock push cmp push and call push add hlt add insb insb xorl push je xor sbb cmp shl or fidivr test rolb push adc sbb subb lea mov fcmovne (bad) jge and or push pop pop aam stos mov xchg push sbb cmp jns idivl jns inc jae ss notb xchg lock mov je inc cmp jl sub mov (bad) arpl adc xor push sti movsl pop or and add pop jl pop dec or (bad) jno ret pop xchg xchg outsb movsb add cmc testb mov insl idivl inc imul pop mov mov lcall stc rolb add in lea inc mov push push cmp and cs jmp movsl add in or xor fistpl mov push pop mov (bad) mov lahf xchg xchg fs lcall loope and pop cmp inc sbb mov pop pop mov in in pop sbb mov rcrl jecxz arpl add xchg inc sbb jle fisttpl iret and mov jne or mov mov xchg dec inc cmp pop test sub push sbb scas (bad) flds sub je out push aaa mov imul add and aaa das daa xchg xchg loopne xor push mov adc push (bad) jae adc mov popa ds xor je cmpsb or add js xchg mov push or jb and out add dec sbb add imul sub out pusha pop ds cld xor pop inc inc pop enter inc test or int3 lret inc fwait loopne sbb enter or push cs mov mov js xchg or add mov add imul mov int or sub fcomp scas data16 pop add cmp jns insb inc (bad) sub xor and or cwtl add jge cwtl mov sbb fisubl inc adc ds pop decb (bad) push mov lock mov jns mov ret dec pop push insb push dec cwtl push int inc iret mov pop movaps pop pushf mov or adc aam jg pop adc mov add sbb add cmp lcall xor cwtl pop or sub add (bad) hlt push add add out sbb lods mov clc lcall jge das cmp test rcrl jbe (bad) jo notb je push mov adcl test pop ljmp in xor clc or loopne loopne inc cs push mov push push popf add fisttpl mov orb les bound (bad) or mov dec inc pop mov adc fisubl lock push mov lock outsb dec (bad) fisub iret mov jbe test lar push jno lods enter xor mov in add push aam adc int3 xchg int sbb xchg in dec in add mov mov pop lock add out test inc into cltd sub je and and repz pop fwait in sbb mov inc cld mov pop inc jae inc mov add loope mov xchg mov fwait pop add in mov sbb fcompl incb adc addr16 mov push xchg xchg inc and add pushf out pop mov or or testb sub in mov push dec adc cmp outsb jmp mov mov sbb int3 pop mov jle lods mov push call sbb inc pop divl ds or jmp addl bound adc inc push lret inc loop push and stc or ret inc daa mov int3 jmp and and inc mov pushl shlb xlat dec adc pop dec or push ljmp jnp or xchg cmp aad inc adc jae pop add push mov or call movl test mov mov je scas push imul inc sbb data16 and xor (bad) push sub loopne movsl add mov xchg mov and or iret out pop mov (bad) cli lea rep in or inc xchg or or xor mov (bad) mov enter stos mov clc loope sbb fsubr or mov sbb out pop or nop dec xchg int add in mov and cmp adc adc add cmp arpl daa adc xor push pop dec sarb pop rclb imul fwait cmpsb imul dec xlat sub sub sbb (bad) out mov dec les mov lcall ret scas imul lcall add cmp cmpsb imul imul sub (bad) push ret pop push dec (bad) xor xchg mov loop lcall sub cmpsb imul imul mov add adc mov or adc xor xor add sbb pop inc fild adc pextrw repz in outsl leave in dec pop dec pop sbb or pop cltd jb dec daa pop dec repnz ja in cmpps dec daa sbb mov in push jl test (bad) push out xchg push mov mov pop sbb mov cs or push (bad) or xchg xchg sbb push (bad) pop dec pop and mov sarl sbb pop add iret rcr sbb add pop push add add imul add and cmp pop cmp aaa xor push push pop mov cmpsl pusha push fild add jo js pop adc cmp sbb push outsl add insb mulb add subl jne insb or addr16 or inc dec dec inc inc dec pop dec inc inc jle incl pop push inc dec inc inc push inc inc add dec push push inc push push cmp ret outsb je insl and jb jb mov pop jb xchg push inc push push adc xchg decl add dec inc (bad) dec dec inc adc xor cmp sub insb and outsl and imul js jle fldenv aaa daa aaa outsb outsl je add out mov jne push arpl data16 outsl ja cmp mov outsl outsb aaa ss and je xor neg pop sti jbe jb jne xor or inc mov xor sub js das pop push fsub out mov pop xor imull gs xor pusha fucomi jae pcmpgtb arpl cmp and gs and inc push and insl xchg outsl fldt mov arpl insb test pop xor mov pop imul add push fcomp mov inc addr16 insl and ss xor dec adc sbb xor sub jb jne jae insl mov shrw (bad) outsl pushf mov mov je adc dec ret fildl sub push imul inc sub and dec imul ja inc push and push fsubs pushf aam ret add loopne sub insb ja ds fdivr into cmp xchg add je popa ds popf mov gs mov xorps xor addr16 outsl js in mov xor cs cmp mov fwait add dec and jns xor fs push decl jnp flds inc inc lret bound imul cmp or outsl or jo cwtl fmuls xchg dec data16 fcompl pop outsb gs iret imul arpl gs jne jnp inc cmovp or push mov dec inc inc aaa jns movsl inc jnp aas cmp and sbb or jae imul or jne icebp sbb dec add test pop inc cmp das daa jae mov or sbb jae negb nop into cmp pushf xchg sahf movsl lods mov lods test jae enter dec mov cs add test adc xor or lahf cmp pop xor fiaddl xor adc xor push jmp sbb daa lahf shlb lea int push lods add push sbb fidivrl sbbl inc add (bad) inc cs inc js addl mov and add shl popf enter outsl jbe inc ss adc mov mov mov mov pop enter orb inc imulb mov mov or aaa call xor pop out cmp (bad) mov jnp fwait jl pusha pop pop push sti lret add mov daa pop leave pop pop test mov addr16 add mov inc stos scas mov in mov sbb add and lods mov fsts shlb sarl inc add mov cmp dec cmp daa call cmpl and in xor lret daa pop pop pop rolb and repnz daa or repnz stos test (bad) add adcb xchg xchg mov rolb in rclb add inc push dec jle,pn push repnz dec dec add outsl leave (bad) pop mov pushf lea daa adc push push or mov ret jmp jb gs add aam pusha and aaa sub imul inc inc add xchg gs mov mov insb fstps les dec (bad) xor mov insb xor (bad) xor push inc cmp imul cmpsb imul fistp imul jb jae sbb jp insl inc adc (bad) mov imul imul stos loopne jbe push push (bad) fucomip mov jns outsl outsl imul jae arpl rcll gs or jbe outsl push pop jae outsl jb cmp pop insb fnstenv insb insb jns repnz jae or lahf outsl ss in pop sahf js xor sub or and and xchg gs or jmp test fidivl gs call pop gs inc jne jb or jae pop outsb xchg adc and jbe add xor push xor xor pop mov add dec add pop pop and add (bad) fild daa out dec cld xor je nop xchg mov scas mov (bad) ljmp lods stos stos mov push mov push fwait push push dec aas in aas fdivs insb inc jae cmpsb add pop roll mov inc (bad) ja in dec pop test pop (bad) xor sbb imul hlt sub lock cmp pop hlt enter aas sahf xchg stos nop mov fistl dec fstl jge dec out neg imulb dec inc or add add push add jl mov dec or xchg and dec sub pop inc enter add fnstenv mov dec subl stc push mov nop out inc pop lods sti cmpsl test mov sbb and dec fnstenv mov adc cld pop daa or xchg mov push jb fsts and pop mov add mov pop adc inc fwait xchg xchg lahf jnp in or leave in jg out lret mov mov insb mov mov inc repnz cmp mov out fisttpll or (bad) in pop or insb mov pop jae mov insb int3 adc fsub jns lret (bad) pusha dec fimul inc jnp mov inc push lcall mov insb inc pop push pop sub fidivrl sub mov ja jno mov call add leave mov leave cmp xor push jb ja insb jo jecxz adc push pusha adc mov pop mov outsl xchg dec (bad) sbb cmp mov fisttpl movsb sub mov dec repz lods cmp call insb (bad) mov outsl test or xor lods jae cwtl push mov pop mov mov jmp outsl cmpsb fdivl and push out sbb outsb imul test js sub mov jnp jg fnsave xor lret sub inc sub lret cmp jae dec addr16 cwtl mov dec mov sbb cmp sahf push push sahf imul push dec xchg out pop inc mov shrb and push int3 ret pop rorl add push fldz in insl cwtl (bad) pop or jns mov arpl insb cmp shr or daa call mov mov and push test jae or lods mov lret nop orb xlat ss mov fidivl movsb das adc mov push in mov xchg mov xchg imul and xchg mov xchg mov xchg mov jo icebp and cwtl ss pop xlat push jl xor aas inc lods loope in test lret cmc cld maskmovq divl aas sbb mov mov mov inc sti pushl outsl inc or mov lret sub popf cmp sbb clc arpl mov stos dec inc push mov jbe sbb dec sbb test int xchg push out fadds int push rorb dec cltd lcall sahf ss xor (bad) add nop and flds jecxz xchg test (bad) out dec (bad) push add enter repz int3 repz pop iret (bad) mov adc push push mov lcall fstl fwait inc add cmp mov movsb sbb data16 gs jo lds push out insb ffree popf xchg adcl xor or pop sub or xchg xor insl pop jb cmpsb xor xor aas lret and mov daa pusha loopne pop add or push mov sub xchg mov add mov push xor call cmp lods adc dec push fcomp inc loop (bad) pop lea mov movsb adc add insl enter dec test sub cmc mov sbb jbe mov dec xchg dec push test stc sbbb ret imul xor jg (bad) or rorl adc lock or sub or cmp xchg dec gs jnp inc jo mov push mov xor inc nop enter (bad) enter pushf adc hlt adc adc add jmp jnp (bad) ficom push das push test es std mov and cmp mov sti mov push lret sub in je popa adc jo popa sbbl hlt jle mov mov lret jns fldcw mov bound mov outsb in andb hlt xor or push push mov mov invlpg xor mov dec pop jg cwtl and in enter bound cmp and push in pop pop xor add cltd pushf pop popa jo ljmp in push push insl add je imul imul dec (bad) jne xchg pop test pushf je imul pop imull jns jnp push scas mov push andb push gs xor dec std in dec lahf mov xchg mov mov mov dec fwait xchg mov sti mov mov mov ret xchg das jne mov lea fstl pushf mov and fisttpll mov outsl dec xchg mov mov mov insb xchg jne inc mov adc cmp or pop mov xor add adc cwtl ja outsb fistpll xchg mov nop fwait lods je scas stos std outsl (bad) mov lods xchg xchg mov sahf mov into sti btc push jle or dec mov xor outsl jo mov lcall out fsts addr16 sub jg dec adc dec addr16 xchg mov addr16 push add mov fwait sbb pop nop lods (bad) dec add outsb loopne addr16 lock add add cmp cmp lods loope mov je add mov mov imul mov xchg sbb jne sbb mov lods sbb int repnz add pusha jge dec int inc push pop (bad) mov (bad) js js js js js js js jge jge jge jge jnp jnp jnp jnp jnp (bad) (bad) (bad) (bad) jnp jnp jnp jl jl jl jl jl jl jl jl jno jno jno jno jb (bad) (bad) (bad) pushl jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb clc sub stc jb jg jg pop nop adc das data16 push sti or add push pop mov int mov pop stos mov dec rcrl popa outsb movsl bound sub (bad) fisttp push and fs mov in sbb repz add jl repnz pushf xchg out push jnp js clc jbe icebp sbb fildl xor out fwait test jns lock push imul roll mov xchg imul add add iret mov jbe ret jnp in and add pop mulb add sbb push ss sub pop push add inc rcrb dec push shll movsb cs pop lock nop sbb push imul add pusha jb,pn sbb add and jbe repnz cs lods rcll rolb adc mov data16 jne or push test jno sub jnp sbb jno add mov mov cmc dec call or and or add jb data16 xor test lret or mov add pop inc rcr js push cmp scas fisttpl push push call add out mov call jnp or push push dec sbb jecxz pop int cltd int lcall push push xchg loop xlat and call subb pop push ficom jmp push dec call out cmp pop and add outsl sbb push mov mov mov lcall push loop data16 out add jb es mov fcompl dec cmp sub out push adc scas imul popa adc adc push dec idivl sbb sbb xor xor frstor xor sub jbe cmp cmp cmp in ds add inc push inc pop inc inc rolb je insl ja mov lret rolb pop push cmp push or inc fwait mov dec inc inc aaa mov add push loop test xor push push call mov push scas push inc or sub aaa sbb cmp jne mov mov icebp push call fcomps mov push pop gs mov mov call pop in fmul imulb and pop jno push cmpsl cmp add sbb jne mov jle inc mov mov (bad) jne push sbb test push push call or in xor and xchg call push add shrb es xor loop dec pop and mov idivl cmp push add jnp,pn sbb push sbb into call xor inc mov mov jae inc push div pop cwtl daa or add pushf and (bad) pushf test lods push lock cmpl and popf or xchg pop subb mov cli test dec das push bound xor mov jl insb inc cwtl lods sbb pop dec or add mov xor push push outsb rclb pop ja cmp decb mov add xchg xchg and mov add adc int stos cmc mov adc inc sbb sbb (bad) mov ficom (bad) aaa mov mov adc mov sahf sbb jge pop inc add das (bad) ja (bad) pop or adc icebp cmp adc cli mov and lods and repnz add or sub adc js adc or ret or cmc mov push arpl ss mov or mov je add daa mov (bad) lret pop add pushf in or or mov je cmpb push dec dec test ja sub inc lea push cltd in jle sub (bad) ja pop rol xchg and and das mov push push xchg sub mov mov push xor jmp fs pushf xor sarl mov pusha cwtl mov push mov test call xchg push xorb push dec call jo jo or sub test fisub add or scas jecxz (bad) or (bad) push mov cmp add dec insl dec loopne mov loopne in cmpsl clc icebp mov dec fdivl pop jo pusha adc (bad) scas insl mov push rcrb inc inc jne (bad) and push bound ret and je js xchg xchg xchg xchg addb nop xchg cwtl pushf imul fcmovbe sub cmpsb out add adc jmp ss cs and bound jbe cmpsb imul imul push mov add xor add cmpsb push in fsts pop jae xchg xor dec mov adc inc das (bad) and xor jbe adc jo inc jnp cld add incl or add je outsb fs inc and outsl lea mov cld adc push add add ljmp add jo sbb cmp ficoml subb sub add fisttpl sbb std pop cmp inc insb outsl jae dec popa insb push xchg inc insb adc mov mov sub leave popa outsb or insl add fistpll outsb dec inc push dec inc dec in cmp sbb mov (bad) jge sbb sahf add mov inc inc imul add pop popa mov out xor imul jnp xlat pop cltd mov add fistpl add outsb jbe lods sub shll push pop sub addr16 sbb insl stc mov pop mov or push (bad) stc popf adc push (bad) imul (bad) arpl fwait movq data16 or xor das xor jnp jns adc insb data16 sbb push xor add rorb fldenv push jo jge jo test and jne and (bad) sub xchg sbb (bad) adc test outsb xchg bound add add xchg xor ja push repz push xor mov sub mov push add lods mov pop xchg arpl insl jo push adc jnp (bad) movd inc mov jle rcll cs pcmpgtw imul or push pop xor sbbl push add xor movsb imul jb je sbb push je je test loop popa jae cmp adc push fnstcw or push push push inc insb and lcall fldenv loopne mov and mov add icebp sbb cltd add add nop dec cmpsb sub push nop mov dec add test inc push fs addl adc inc adc stos add cs sbb add push xor or pop add (bad) xor roll ss or or out mov cmp sarb mov add push sbb or and nop inc inc push xor insb mov push push pop push pop pop jnp jmp insl out and testl orl andl xor test or enter cmpsl mov xor pusha lahf into pop xlat or cmp xchg pop add lcall or sbb add nop nop xchg xchg sbb js inc (bad) push add or (bad) fdivl (bad) lret aam inc test xor roll or adc adc mov fcomps lods sbb sub cmpsb imul sbb xor (bad) mov movsb jns dec (bad) xor jp cld cmp inc dec into ss add and popa inc lock icebp or dec pop mov or jl and and pop add push sub add movsb push dec pop add add add inc jl inc add cli rclb movsb pusha (bad) jns outsb notl pop mov cld das push icebp out inc jle cld test mov in adc das out push sbb inc mov iret mov inc (bad) sbb in call (bad) push add add pop ficompl fisubrl xor fcomp loopne loop dec outsb cmp jle and pop and add mov dec mov test cwtl mov das insb push shll pop push push dec (bad) xor dec dec inc inc cmp aaa dec (bad) xor and adc cmpsb pop ss or hlt mov loopne cmpsb imul push and and in sub add das inc icebp in arpl mov outsb test or mov insb xchg lods xchg ss push lahf movhps xor pop js xchg dec (bad) xor aam adc xor pop mov dec insl add cmp pop dec (bad) xor ja mov repnz cmpsb imul or aas inc push pop inc inc pop jge std or imul sub aaa pusha or dec addr16 and xor (bad) jg jne pop outsl pop jb outsb addr16 and stos pop outsw sbb add add mov mov lret sbb add adc jne aam sub dec push add pop add sub pop and inc je bound adc inc adc dec popa insl lods sbb and mov dec or pushf add je das cwtl stos loopne test push popl pop add movsl add push push or pop fiaddl data16 (bad) popa inc inc xor push dec bound jae xor ja lock add sbb fs (bad) ficomp dec nop insb jne push fnsaves push je xor dec mov dec inc push or pop jb push fild (bad) push je push outsb insb insl ret pcmpgtb (bad) fildll leave or jge dec outsb lahf jbe daa sub dec aas push insb jae push popa mov sbb mov imul orb dec lods (bad) fsts inc dec loop add xchg fs data16 add jo inc les xchg pop clc decl push ret sbb or or jo or push or dec jne popa inc aad or sbb mov push lea push insl push jbe inc adc fcomi xchg sub fs out push outsl dec xchg int3 fldl hlt inc jns jb adc pop aas inc dec xchg fwait inc adc mov mov int3 cmpb in xor add xor sbb pop push xor ret pusha pop inc enter jne jo inc jns (bad) dec inc push popa insb or add sarl es mov jns or push int inc mov mov inc mov push aaa xchg fisubr mov adc xchg jecxz mov or push jns xchg lret push outsb cmp fldt movsl mov cmp ret mov dec fildll gs int mov and cs cmpl xchg gs lahf push add adc sub inc push inc xchg adc insl sub or add and jb cltd mov adc add or add mov test cmpsb lahf mov mov sti push and movsb lea pop loopne push mov xor add add add add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add mov add add pusha add mov pusha add mov pusha add fsubl add pusha add add add clc pusha add add add xor add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add xor xor fs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb outsl jae dec gs add test add add add xor sub add add (bad) pop test add xor xor or xchg (bad) or xor or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor or xchg (bad) or add ret dec jbe or inc aas xchg lcall je (bad) add (bad) add in adc sub cmp jnp int3 mov or xchg (bad) or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor or xchg (bad) or add orl leave pop pop sahf repnz fild fninit push scas push inc popl fsts iret out add and add js sahf xchg mov jge lods test daa int3 hlt dec (bad) jne sarb out dec inc lock or cwtl psubb movsb leave xchg mov and push movsl test cmp and xor jbe in cpuid jno dec gs add xor dec xchg or add addl add adc cmpsb sti cld or test das jl (bad) lock insb sub push int3 jae movsb rclb (bad) es jbe push adcl and imul sbb pop fcompl cltd in mov mov xor push icebp into clc call bound mov pushf leave cmp dec test fs jp (bad) add add add add cmp scas sahf hlt nop out mov pop aad or dec xchg or add push xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul xor pop or xor xor pop pop or xor xor xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor add add sub jb push imul and popa insl jo outsb and jb imul outsb gs sub sbbl (bad) or add orl les mov pop das dec xchg imul xor bound push xor ret sbb les divb fstps scas mov jbe icebp test imul dec dec sub pop in sub (bad) stos pop fxch inc repz stos (bad) mov xchg push (bad) out loopew ret sahf pusha cmp loop push mov jnp sub add (bad) xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor add adc add add xor xor push add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das je jae arpl arpl xor push add and or or or push add xor push add sgdtl incl add push (bad) xor push add adc xor xor xor add push push push inc xor or xchg (bad) or add (bad) add add dec enter in and ficomp mov add adcl sub pop pop popa mov add xchg xchg mov sbb jmp mov ss cwtl dec in mov inc sbb lea cli aad add xor mov daa (bad) repnz dec add dec cmpl push loopne loopne xchg movsb xchg sahf pop or loop mov pusha loope lods sub (bad) movsl dec fs sbb lods cmp aad and lcall inc or mov sbb mov jmp iret leave add mov ds jb mov sahf sub mov cmp dec xchg add stc pop push hlt sbb sti cmc lods xchg mov push andb sub add jmp js roll pop mov xor add add adc sbb inc neg insl dec or push or xchg (bad) or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor or xor xor xor xor or or add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul xor push or xchg (bad) or add (bad) add add (bad) add add lret int3 int scas or lods xchg mov icebp ffreep movswl mov mov test mov mov imul sahf movswl in js ja jle cmp xchg scas or xchg lret sub mov pop pop sbb lahf cli das imul mull add jg push jecxz pusha in inc sbb mov mov xchg add and xor push sub xchg adc das stos out ret sub mov xchg sbbl jne cmp xchg adc push rorl (bad) inc dec fnstsw jl ds rcrl js lahf xor icebp out sbb les pop mov cmc out jl jge bound (bad) cmc dec or shlb push test int mov out mov fldenv adc mov sarl mov fdivs xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push add adc add add xor add incl add xor add pop add xor xor mov xor je cmp das arpl jbe,pn jb jae outsb arpl das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor add adc xor xor push add adc push inc xor xor sub xor dec xchg or add addl sbb mov sub (bad) sbb int mov fisttp sub adc add or add mov leave xchg dec lcall aaa and xor mov call push xchg dec and test mov inc repz out fstps mov popf mov loope (bad) mov iret or lock (bad) sub cmp sbb daa idivl dec xor add mov add jle leave pop or arpl cltd add fcmove out xor dec xchg or add xorl push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp xor pop or xor xor xor xor pop pop or xor xor cmpsl xor xor push add push adc dec push xor xor add or add insb xor xor push add pop adc inc popa outsb outsb popa insl xor xor push add or dec inc pop dec dec and jb outsl jb je outsl outsb xor xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add dec inc pop dec dec and jb outsl jb je outsl outsb xor or xchg (bad) or add orl mov push out jae inc jg mov dec js into fsub mov leave adc pop lgs idivl dec pop xlat insl mov (bad) pusha fs ss cli pop (bad) cmp std pusha sbb and cs add das (bad) push outsl dec add mov out pop mov dec xor pop dec das outsl int ja (bad) push or xor push enter mov jb cli add int3 mov add add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor mov xor je cmp das arpl xor sub insb jbe,pn jb jae outsb arpl das inc push inc xor sub insb xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub popa jbe,pn jb jae outsb arpl das inc push inc xor sub jb pop push add and xor adcb imul xchg pop or mov push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add pop arpl test mov xchg in pop repnz popf dec and push inc push outsb push movl jge dec cmp hlt loope sahf xchg dec pop add mov (bad) mov or cmp dec xchg fcoml dec mov xchg popl jae je in movb lahf daa push (bad) iret jge xor sbb cmp lcall mov sub sbb std jp mov adc adcb lods (bad) xor inc jmp sub cs cmpsb xchg pushf sbb dec add jbe xchg mov icebp out cli and jge mov popa inc (bad) (bad) mov aas sub jecxz push dec je out enter and inc mov scas and jnp (bad) out add pop popa (bad) imul (bad) add xor add add adc es cs pop movaps xor dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp xor push or xchg (bad) or add (bad) add add (bad) add add addr16 dec outsl push pop jl leave pop xchg jno mov mov and dec sti shlb mov cmp pop or cld adc pop mov and jnp hlt add into mov daa dec push in andl adc adc xor sub inc mov mov dec mov push nop loope negb data16 mov jns stos xor sahf xlat stos adc test xor adc push mov loopne sbb add mov pop mov adc xor dec cmpsl into leave pop and outsb jl mov xchg mov mov sub and in pusha js jnp cmp or or inc and add add add (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb adc or push add push or push add xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add adc xor movsb push xor sbb sbb add add adc popa jae xor xor xor sub xor push add add xchg shrb es mov sub mov push or xchg (bad) or add addl mov test (bad) xor nop cmp inc mull in jae add add pushf mov jmp lret jb push mov adc subl in push push aaa xor movsl sub sbb mov cli addr16 gs jp cmp adc js jbe xrelease punpcklbw mov popf (bad) mov (bad) sbb and dec movsl cmp fiadd push pop rdtsc (bad) add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp add jle leave pop or arpl cltd add fcmove out xor or xchg (bad) or mov push or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add adc mov div lret push add es js pop xor push or push add (bad) aaa add or sub mov inc add add sbb jo das das ja ja outsb gs outsb arpl imul push or xchg (bad) or add sbbb iret fwait xchg das loop sub jecxz sahf into stos push mov rorl mov adc mov adc mov jb sbb mov cmp stc mov pop std das and dec and jge out inc mov push lods mov sbb (bad) rorb fsubrs add lea xor loopne push (bad) add (bad) add or xchg (bad) or (bad) add add add xor push xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul add cmp scas sahf hlt nop out mov pop aad or add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor xor xor pop xor push or xchg (bad) or push add inc sub sub pop (bad) in aas fiadd xor dec xchg or add adcb jp jp jns mov jle insb iret push test adc lds mov mov pop sbb gs mov cltd pusha mov mov leave mov inc bound add push push pop dec (bad) jae lock aam aas cmp add in or loopne aas aad jo dec shrl (bad) cmc int3 loopne dec push stos (bad) add add sub add and add inc add add add add addb add add addb rol add add add incl add (bad) incl incl add incl incl (bad) incl add (bad) incl adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc ja ja ja ja ja ja adc adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) push ja jg jo adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb divl ja ja ja pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb divl ja ja ja pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rol rol (bad) ja ja ja pushl or or or or (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) inc ja ja ja pushl cld or or decl (bad) (bad) (bad) (bad) (bad) pushl lock lock (bad) ja ja ja pushl cld or or decl (bad) (bad) (bad) (bad) (bad) pushl lock sar ja ja ja pushl cld or or jg (bad) pushl ja pushl lock ror pop ja ja (bad) jg jo or or or or pushl idivl jo ror iret rol ja jg (bad) jg jo or or or or pushl addb add (bad) (bad) (bad) (bad) (bad) inc (bad) pushl (bad) (bad) js or (bad) (bad) (bad) (bad) decl pushl (bad) testl sar (bad) decl or or or or (bad) (bad) incl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) decl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) incl adc sbb mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add incb add incb add incb add incb add incb add incb add incb add incb add incb add incb add add add add add add add incb add incb add incb add add add add add add add add add addb add add addb rol add add add incl add (bad) incl incl add incl incl (bad) incl add (bad) incl adc add add add adc ja ja ja adc (bad) (bad) (bad) (bad) pushl sbb push ja jo or or (bad) pushl (bad) (bad) push ja jo or paddb pushl (bad) jo lock jo or or jg jo iret (bad) lock jg or or or jg rol rol jg (bad) (bad) (bad) cld incl add rol sar add sbb (bad) (bad) incl mov add sbb add jmp add jmp add jo add sbb add add ja add pushl add sbb add incl add incl add jo add sbb add loopne ja loopne pushl add add add add add add or std stc stc add (bad) incb sti repz repnz add cmc hlt add in add in jmp mul in mul jecxz imul in imul out stc out in add clc testl mul loope cmc in add jmp add ljmp cli icebp out add out add out in add fs add test (bad) jne add jge add mov aam jne mov gs mov in xchg ficompl scas add in add out add cmc repz hlt repnz cld sti add sti cli add cli stc add je add jbe add jge add je add mov in push xchg pop inc add xchg outsb add xchg jb lcall add jno mov pushf jl cmpsl jae add test in test add mov xchg add mov add mov movsb add test add mov cmc add div add fs add jno add jns add jl add jp add test aam pop add (bad) pop add jl add mov fldl fs test loop addr16 mov xchg jb into xchg fstl jnp ljmp add in jmp add fs add imul lret add jae add js add pop cmp popf fs add mov mov add repz add clc cmc add std cld add sti cli add dec and movsb push sub lcall add arpl add push add jno add mov roll cli loope add (bad) lret add int3 ret out add jmp fldl cld in jecxz cld out call add cmc lock hlt out add div add dec push add popf imul in stos (bad) add mov add mov add mov mov stc fld add fcmovne add fmul add fmulp add (bad) add (bad) add loopne add jecxz add in add in add out add jmp in (bad) in jecxz sti jmp add in in std icebp ljmp bnd (bad) div add cmc lock stc testb clc cmc add lock add add (bad) cmp add aas push add mov add movsl xchg shlb xchg add mov add mov lcall (bad) lods add les add mov xlat add out add call loope cld jmp add ljmp cld out out std repz add div add mov addl fisubrl lea xlat scas xchg add mov add mov mov add shrl out mov in into mov add (bad) ret movsl xchg add fld add scas mov add mov aam sti in loope cld lock std div add hlt out add cli testl repz in sarl shrl add mov test iret mov in add clc repz cmc lock xor js dec add js add inc sbb pusha dec xor push pop inc add sti clc add and add xor push cmp add incl add fdiv repz repnz icebp icebp icebp icebp icebp clc clc clc clc clc div idiv sti sti lock add mov insb insb xchg xchg mov mov xchg xchg xchg mov xchg xchg xchg xchg nop nop nop nop nop (bad) (bad) (bad) (bad) (bad) testb add xchg movsb ret add sahf sahf lahf popf addb cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg (bad) testb add cmpsb cmpsl cmpsl loopne les mov lahf popf popf addb cwtl xchg xchg xchg xchg xchg xchg xchg (bad) testb add test cmpsb cmpsl xchg movsb ret mov sahf lahf popf popf cmpb cltd cltd cwtl xchg xchg xchg xchg xchg xchg (bad) testb add mov test cmpsb xchg movsb ret mov lahf lahf popf addb cwtl xchg xchg xchg xchg (bad) testb add stos mov iret mov mov mov enter leave leave leave leave leave leave leave leave leave leave leave leave cwtl xchg xchg xchg (bad) testb add test outsb test cmpsb cmpsl xchg les mov lahf popf popf sbbb (bad) testb add mov outsb outsb test cmpsb cmpsl xchg les test popf sbbb testb add outsl pop out mov mov int3 mov lret leave leave leave leave leave leave leave leave leave leave leave pushf fwait cltd cwtl nop testb add stos stos lods lods mov outsb (bad) test cmpsl xchg les test cmpb cltd nop testb add jecxz stos stos outsl pop mov outsb (bad) test cmpsl xchg movsl xchg mov sbbb fisubl stc jecxz rcl mov mov int3 mov lret leave leave leave leave leave leave leave leave popf popf cmpb add add es daa jecxz jecxz outsl pop pop mov (bad) cmpsb cmpsb xchg ret mov adcb add add add add es daa daa jecxz stos stos outsl pop pop (bad) loope insl mov test xchg les shlb add add jo xlat (bad) out rcl aam rcl ror mov mov mov leave leave leave leave leave leave shlb add call es daa stc jecxz stos outsl pop mov (bad) test cmpsl xchg movsl xchg ret test add add add jo es daa daa jecxz stos stos outsl pop (bad) test (bad) cmpsb cmpsl xchg les mov add add add (bad) xlat (bad) out rcl aam rcl ror mov mov mov enter ret xchg testb bound pop jns ja je jae jb mov scas daa daa jecxz stos stos pop pop mov test xchg les testb popa push push push push dec dec dec dec dec gs jp mov jns daa daa daa stc jecxz stos outsl pop mov test cmpsl xchg testb arpl adc or pop adc adc or or push movups out aad aam rcl ror mov int3 mov lret xchg fs and push pop adc adc or or adc es daa stc jecxz stos outsl pop (bad) loope outsb outsb test xchg add dec das add or pop jbe std decb or or jo es daa daa jecxz stos outsl pop mov cmpsb cmpsl xchg mov add jl inc add or jbe mov orl mov xlat (bad) (bad) out rcl daa jecxz leave leave leave leave leave leave leave leave test xchg push inc add fisttpll pop inc mov adc or jnp add jo jo es daa in mov mov outsb test cmpsl mov add sub and jbe push inc sub mov or jl add add jo jo daa daa in lret lret mov mov test mov add dec cmp or js aaa sub inc jb adc or (bad) (bad) xlat xlat (bad) out es mov mov into mov mov test testb push pop sub cmp xor dec cmp inc inc inc cmc mov adc (bad) incl add add jo in (bad) aad mov mov outsb mov add dec pop daa sub jle xor push adc addr16 (bad) incl add add jo xchg aad mov mov stos outsb mov add dec cmp jno imul xor pop cli mov dec jne (bad) (bad) (bad) xlat add fiadd lret leave pop mov add es xor push xor incb dec je (bad) (bad) (bad) incl add add in jo fidivr pop mov cs and sbb cmp and sub pop dec je (bad) (bad) (bad) (bad) (bad) incl add in loop outsb xlat pushf ror stos outsl pop mov testb push aas add inc inc cmp or push push sbb dec dec ja (bad) (bad) (bad) flds add in in in in jecxz outsl out (bad) testb das aas jmp and and sub sbb inc sbb ja (bad) (bad) (bad) (bad) (bad) (bad) incl add add jo jo es jecxz stos outsl (bad) testb xor add add daa daa sub or add push jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add jo out rcl mov add inc (bad) incl add jo jno sub and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add hlt hlt repz icebp clc sti testb xor (bad) incl add es add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add out aad aam xchg lock add inc inc inc inc aas aas ds pop cmp push push xor push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add jmp mov add xor xor das push cs push dec dec push dec sub arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp icebp add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov in in fstp fucomp ljmp (bad) fcmovnu fucomi call add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add rolb add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add addb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add addb add sldt inc add add add inc add add add inc add add add rolb add add inc add add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add add or std stc stc add cli cli add icebp lock ljmp cld cmc hlt add hlt repz in jmp cld div add cmc hlt add call out cld div add out add in jmp add lock add clc testl imul out stc out in add out jmp int pop add subl rorb jle loope xchg add iret rolb mov sti add sti cli add cli stc add addr16 insb dec add jl add je add mov call jp add xchg jno jmp jno in xchg jae roll push add lea lods jns add mov xchg add test add mov add mov movsl add mov lods add les add int3 mov add lret ret popa cmp cltd push cmp ret add jne add js add jp add jge add sbbl mov in imul jle add mov mov in mov in mov rcrl xchg add stos popl jmp xchg add mov add mov add mov mov add jne add je add imul inc add popf jg aad jle fcomps addl mov les std out call add clc cmc add std cld add dec es xchg jb into xchg jbe rcrl jl sti out add jmp jecxz (bad) cmc lock hlt out add div add dec sbb cwtl dec sbb pushf dec pop add and movsb push daa add pop sub stos pop das add dec sub scas popa xor repz data16 lahf imul mov jnp enter (bad) nop jo lret add xchg je stc fmul add (bad) add lds add loop add fnop add jecxz add in add in add call fild (bad) out in cld jmp add in in cld out out cld lock add icebp ljmp repz add div add cmc lock stc testb xor add add xorl or mov or xchg or mov add dec pop add push and jmp mov add lods mov in xchg add movsl xchg shlb xchg add test cwtl add mov add mov mov add mov mov add out add out add xlat lret add jecxz add ljmp sti in loop cld out in sti in in std div add sti stc add mov test shrb lea (bad) lods popl xlat scas xchg add mov add mov add mov add mov test loopne mov add shlb jecxz test out lods add leave mov out mov in iret mov add sarb add cmpsl cwtl add mov stos add mov add mov icebp add hlt out add cli testl repz shrl add mov add mov add mov scas add mov lock xor bound add aaa add cmp add clc repz jmp std add cld sti add (bad) jnp push cmp add mov incl add (bad) hlt repz lock lock add add add xchg arpl scas scas lods lods stos stos stos test addl fstl outsl outsl xchg xchg outsb mov lea xor add add xchg ret xchg ret jo rol outsl xchg xchg mov lea add add add add xchg xchg xchg xchg xchg xchg xchg xchg jo xchg xchg mov (bad) lea add add add ficomp cwtl fs ret jo mov scas scas mov lock add add add pushf pushf pushf cltd cltd cltd lcall jo mov (bad) lea add add jmp rcl iret into int int3 mov lret enter xchg popl add add jmp jecxz sahf sahf jb pushf cltd lcall xchg mov add add add call aad rcl iret into into int mov lret enter test add add add add data16 (bad) sahf gs cltd cwtl xchg xchg sarl add add add in xlat fcom mov iret into into int mov lret jo stos lock cmpb jp ja jne cmpsb movsl mov data16 sahf pushf cltd cwtl xchg xchg jo lock pop push dec xor dec dec pusha pop insb imul iret iret into int mov cwtl fs lods lock pop push or adc adc or test data16 cltd fs add pop push or pop adc adc or ror iret into int pushf lcall xor push jg adc push cld std (bad) add and in data16 lcall and push jg out jg fwait movups addr16 mov (bad) jno cltd mov add inc add and jg or insl cmpsl clc addr16 sarb jb mov add inc aaa and dec dec push jg sub pop test clc out mov mov (bad) popf sahf gs add inc cmp sbb sub jg adc out (bad) mov mov jae jb lock inc cmp xor xor cmp dec js clc out mov mov add cmp xor xor sub cmp dec jns clc out addr16 hlt hlt xrelease dec push sbb sbb and jp clc out in jmp push lock add cmp (bad) clc clc addr16 and adc clc clc out out call lock add sub (bad) (bad) (bad) clc addr16 add adc clc clc clc addr16 call add add add sbb cmp aaa ss jle clc clc addr16 jmp xchg repz add add sub sub dec inc es inc inc inc inc inc pop pop cmp clc clc addr16 in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc (bad) clc clc addr16 in in in in loop in in out out (bad) loopne loope ljmp add add (bad) (bad) (bad) cld add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jo add aas cld add jg add (bad) (bad) (bad) (bad) ljmp add add add add add add add add js mov push add test hlt mov movsl add jecxz add xor add stos nop add lods xchg add mov mov repz add loop add jecxz add gs add pop cmp pushf push aaa add add dec add jge add andl stos jno add xchg je loope jl loop jg out xchg out mov fldcw hlt add popa cmp add div add jns add jle add sbbl mov (bad) mov sti out add ljmp cld out out std lock add hlt out add div add hlt lock ss jo add jne add mov jnp out jg out addb mov add fcmovb add fcmovne add fcmovne add mov add (bad) add fmulp add fmulp add loopne add loop add loope add loop add in add in add in add out add in add call loop sti jmp add in in std lock add lock add xor add add xchg cmp add mov add mov inc add add dec pop add dec or mov or mov sub call stos test out test in mov in mov in mov jecxz popl loop xchg add mov add mov add mov movsb add mov movsl add mov rolb cli in add out add jmp fild cld in loope sti in loop std icebp jmp add add scas nop add mov mov add mov xchg add stos pushf add mov add ret xlat (bad) mov (bad) (bad) mov aam scas add mov mov add hlt in add clc repz clc hlt add mov lret (bad) incl add add addl add jo insb push imul push dec dec dec inc inc inc addl push addl inc inc addl xor push xor dec inc imul arpl pop pop addl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl pop xor cmpl adc xorl inc subl or push jl subl or cwtl popa sub sub prefetcht1 jle andl sbb sbb addl pop push push adc xchg xchg mov cwtl cwtl cwtl cwtl cwtl cwtl cwtl es and and sub xchg mov add js mov add loopne add loopne jmp shl add int add add mov add add add add popf add jecxz add sahf jb add xchg add xchg mov sub add xor add pusha add add add add fcompp dec jecxz fmuls (bad) dec loope aad loopne rcll fcom push fst rcrb aad pop fcmovnbe int fcmovbe int3 (bad) (bad) lret ror xlat iret (bad) push int insl aad lds lret ret jb lret ror (bad) ja enter (bad) mov jle lds int mov xchg (bad) mov lret (bad) mov lret (bad) leave mov mov enter (bad) mov mov (bad) mov scas cwtl lds scas cltd mov jl call jp decl js decl arpl mov mov incl outsl pop incl pop incl imul jl push (bad) jp dec (bad) js dec pushl dec pushl dec pushl pushl inc pushl inc ljmp inc ljmp aas ljmp ljmp cmp imul jmp aaa jmp xor jmp xor bound jmp xor lds add mov out in (bad) ret (bad) (bad) sar lret loope mov jmp (bad) mov jmp les jmp shrb out cmpsl jmp mov lahf (bad) call mov (bad) ljmp (bad) ljmp (bad) in scas xchg in lods test in stos cmp out test push movsl ja lock jne icebp mov outsl push mov push repz push push fwait jmp xor (bad) mov add mov lock (bad) cld out out cld out in cld in in cld in jecxz cld jmp (bad) cld ljmp sti jmp fdivr sti call (bad) sti in (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) cli loopne (bad) stc loopne (bad) stc fmulp (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb (bad) stc fcmovb (bad) stc fld (bad) clc fld (bad) clc fadd (bad) clc fadd push fwait jmpw xor (bad) mov add mov icebp ljmp lock (bad) cld out out cld out in cld in jecxz cld in loop cld jmp (bad) cld ljmp sti jmp fdivr sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) stc loope (bad) stc loopne (bad) cli (bad) (bad) cli fmulp (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb (bad) stc fld (bad) stc fld (bad) clc fadd push pushf push inc mov add mov repnz (bad) cld repnz (bad) std icebp jmp std lock (bad) std out out cld out out cld in in cld in jecxz cld in jecxz sti jmp (bad) sti ljmp sti call fdivr sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) stc loope (bad) stc loope (bad) stc loopne (bad) stc (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmovb (bad) stc fld (bad) stc fld push popf push dec mov add mov hlt out (bad) std repz (bad) std repz (bad) std bnd std icebp ljmp lock (bad) std out in cld in in cld in jecxz cld in loop sti jmp (bad) cld ljmp sti call fdivr sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) stc loopne (bad) cli (bad) (bad) stc (bad) (bad) stc fmulp (bad) stc fmul (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb push sahf push pusha dec xor enter mov cmc lock std hlt out (bad) std hlt out (bad) fistpll (bad) fdivl xchg (bad) fdivs nop call stos mov shrl mov shlb test into mov cmp into mov cmp into mov cmp into mov cmp into mov cmp into mov lret fcmovne (bad) stc fcmovne (bad) stc fcmove push sahf insb jmp xor leave mov add mov div (bad) std div (bad) std cmc lock std hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd std icebp ljmp lock (bad) cld out in cld in in cld in jecxz sti in loope sti ljmp sti jmp fdivr sti out (bad) sti out (bad) cli in (bad) sti in (bad) cli jecxz (bad) cli jecxz (bad) stc loope (bad) stc loopne (bad) cli (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne push lahf insl jmp xor lret lea add add div (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock std hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd std icebp jmp (bad) cld out out cld out out cld out in cld in jecxz cld in loop sti jmp (bad) sti ljmp sti call (bad) sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) stc loopne (bad) cli (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc (bad) (bad) stc fmul push mov xor lret (bad) mov mov clc cmc (bad) (bad) clc hlt (bad) (bad) clc repz les jmp mov mov (bad) fdivl cwtl (bad) fdivs xchg call lods mov shrl mov shlb test into mov cmp into mov cmp into mov cmp into mov cmp into mov sar stc (bad) (bad) stc fmulp (bad) stc (bad) push mov xor int3 sarl mov stc idiv (bad) stc idiv std clc cmc (bad) std clc hlt (bad) std div (bad) std div (bad) std div (bad) std cmc icebp (bad) std cmc lock std hlt out (bad) std repz (bad) std repz (bad) std bnd std icebp jmp cld icebp jmp (bad) cld out out cld out in cld in in cld in jecxz cld jmp (bad) sti ljmp sti jmp (bad) sti out (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) cli fnop (bad) stc (bad) (bad) stc (bad) (bad) out mov xor int mov add cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) (bad) cmc lock std cmc out (bad) std hlt out (bad) std repz (bad) std repz (bad) std bnd cld icebp ljmp out out cld out out cld in in cld in jecxz cld in loop cld jmp (bad) sti ljmp sti call (bad) sti out (bad) cli in (bad) cli in (bad) cli loop (bad) cli loope (bad) stc loopne (bad) stc (bad) (bad) out movsb jbe pusha dec xor into ret mov add sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) in int (bad) jmp enter lds jmp shlb fidivr fwait (bad) (bad) call scas xchg call lods (bad) call stos mov shrl xchg shlb (bad) dec mov cmp into mov cmp into mov cmp cli jecxz (bad) cli jecxz (bad) cli loope (bad) cli loopne (bad) out movsl js pusha dec xor into les add cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) std cmc out (bad) std hlt out (bad) std repz (bad) std repz (bad) std icebp jmp cld icebp ljmp out out cld out out cld in in cld in loop cld jmp (bad) cld ljmp sti jmp (bad) sti out (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) out cmpsb jnp pusha dec xor iret lds shrb (bad) cld cli (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock (bad) hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd cld icebp jmp (bad) cld out out cld out in cld in jecxz cld in loop cld jmp (bad) sti ljmp sti call (bad) sti in (bad) cli in (bad) cli jecxz (bad) in test jmp xor rol mov add lods sahf (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti push aad (bad) out sarl (bad) in into mov (bad) call (bad) scas jmp les jmp mov mov (bad) fdivl xchg (bad) fdivs nop call stos (bad) call test mov shll dec mov cmp into mov cmp sti call (bad) sti in (bad) cli in (bad) in test xor ror mov add scas lahf (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) stc idiv (bad) stc idiv (bad) stc cmc (bad) (bad) clc hlt (bad) std div (bad) std div (bad) std div (bad) (bad) cmc lock std cmc out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out out cld in in cld in loop cld in loope sti ljmp sti out (bad) sti out (bad) cli out (bad) in stos cmp ror (bad) jbe add add scas lahf (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) std div (bad) (bad) div (bad) std cmc icebp (bad) std cmc lock std hlt out (bad) std repz (bad) std repz (bad) std icebp jmp cld icebp jmp (bad) cld out out cld out in cld in jecxz cld jmp (bad) sti ljmp sti out (bad) sti out (bad) ljmp call lret ret jae add add scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push fld push fadd push xlat ret aad (bad) out sarl (bad) in iret mov (bad) call (bad) scas jmp les jmp mov mov (bad) (bad) xchg (bad) fdivs nop call stos (bad) call test call cmpsb mov shll cmp mov cmp cld jmp (bad) cld ljmp sti call xchg pusha dec xor aad les add add aas pushl cmp scas pusha aaa ljmp pop xor movsb pop sub lahf push sub lahf push sub lcall decl inc adc decl cmp incl xor add ja add (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) stc idiv (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) std cmc icebp (bad) std cmc out (bad) std hlt out (bad) std repz (bad) std bnd cld icebp ljmp out out cld out in cld in jecxz cld jmp (bad) sti ljmp jmp dec xor (bad) int insl add add mov mov loop arpl loop arpl fldl pop call sbbb sbbb jge dec jp dec jbe dec jae inc outsb dec inc insl inc (bad) mov push cmp mov cmp scas pusha aaa ljmp xor cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) cmc icebp (bad) (bad) cmc out (bad) std hlt out (bad) std repz (bad) std bnd cld icebp ljmp out out cld in in cld in jecxz cld in loop sti jmp (bad) call dec xor xlat iret (bad) push add add mov cli repnz cli repnz cli repnz stc out in (bad) stc out in (bad) clc out ljmp in jmp push jmp out imul in imul in cmc out push out push out push out pushl add out sarb jmp mov jmp enter lds loop movsl jmp mov lahf (bad) fdivl cwtl (bad) fnstenv xchg call lods mov aam mov shll xchg shlb (bad) cld out out cld in jecxz cld in loop out mov pusha dec xor fcom leave add add mov mov cli hlt repnz cli repnz cli repnz cli repnz stc out in (bad) stc out in (bad) clc out ljmp in jmp push ljmp imul in imul in cmc out push out push out (bad) mov xor cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock std hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out in cld in in out nop jmp xor (bad) lret add add outsb dec jmp xchg outsb (bad) cld cmc hlt (bad) cli hlt repnz push xor mov (bad) clc lock (bad) stc out in (bad) clc out ljmp inc and push cmp push jmp in imul in imul in cmc out (bad) mov cmp (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) std cmc lock (bad) hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out in out xchg jmp xor fcmovbe int3 popa add add shrl out outsb (bad) cld div (bad) cld cmc hlt jmp pop ljmp dec es stc out in (bad) stc out in decl pop xor popl push and loop leave push jmp in imul in cmc out (bad) mov cmp push fadd push (bad) ret aam (bad) out sarb (bad) in int (bad) ljmp (bad) (bad) sti stc (bad) (bad) cli clc dec mov cmp into mov cmp into mov cmp std bnd std icebp ljmp out out in xchg jmp xor (bad) into pop add add (bad) jae (bad) jmp div (bad) cld cmc hlt ljmp xchg jnp fnstenv ljmp mov out lcall arpl decl mov imul out imul out imul in imul in mov inc adc (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc push lret jmp lods (bad) ljmp (bad) ljmp jmp mov jmp mov dec mov in (bad) std repnz (bad) cld icebp ljmp mov jmp xor fst iret pop add add lret (bad) jmp clc idiv cld div ljmp pushf cmp jbe (bad) fnstenv decl (bad) lcall jae (bad) mov push and outsb cmp (bad) ljmp push jmp in les decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) cld cli push lret repz (bad) fsubrs (bad) (bad) call mov (bad) fbstp popf dec mov out (bad) std hlt in (bad) std repnz (bad) std icebp ljmp dec xor (bad) rcll add add jp jmp sahf jg std stc clc (bad) std clc idiv mov data16 frstor (bad) fisttpl cmp (bad) push das jmp pop dec push cmp popl pushf mov clc ljmp imul out shrl popl repz push fld push fld push fadd push (bad) ret aad (bad) out sarl (bad) (bad) std sti (bad) (bad) cld sti push lret jecxz xchg jmp mov jmp mov jmp mov jmp mov (bad) fidiv popf dec mov lock std hlt out (bad) std repz (bad) cld repnz jmp mov xor (bad) rcll add sarl jmp sahf jg (bad) cli stc (bad) std stc clc (bad) mov stos xchg lcall test loopne push ljmp mov ret dec push xor outsb cmp (bad) ljmp push ljmp lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std sti push lret stc jmp push sarl push fcmove jmp mov (bad) fsubrl mov (bad) (bad) div (bad) (bad) cmc lock std hlt out (bad) std repz jmp mov xor loope aad add add xlat sbbb movsl mov (bad) sti cli (bad) std cli stc inc subl mov lcall arpl sahf jg loop arpl fnstenv (bad) fnstenv decl pop inc (bad) fnstenv lcall mov clc in jmp dec jbe lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld push lret jecxz mov in into mov jmp mov xchg (bad) fisubrl movsb dec mov repz std div (bad) std cmc lock std hlt out jmp mov xor loop xlat dec add add aad pop (bad) jmp cld sti (bad) std sti cli dec nop je ljmp (bad) out call push jmp sahf jg fldl inc decl mov fnstenv (bad) fnstenv ljmp and ljmp dec jp lcall fld push fld push fld push fld push fld push fld push fadd push xlat ret (bad) (bad) (bad) std (bad) (bad) std std push lret hlt jecxz (bad) in fmul (bad) sti cmc lock fistpll (bad) fldcw (bad) dec mov hlt (bad) (bad) div (bad) (bad) div (bad) std cmc lock mov xor jecxz fmuls add add test out xchg (bad) (bad) std cld (bad) (bad) cld sti call mov icebp mov dec push in jmp inc jl jmp sahf jg fldl dec (bad) cli xacquire push jmp jbe clc out ljmp push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret std stc idiv (bad) std std (bad) jmp leave push loopne push jecxz (bad) in lret jmp lods dec mov cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div jmp mov xor in fiaddl add add mov in mov (bad) (bad) std cld jmp ror (bad) ficompl dec nop je mov data16 clc lock (bad) fistpll jmp xchg outsb jmp repnz out jmp push pushl cmp repz jmp jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret (bad) (bad) (bad) (bad) sti hlt out push jecxz (bad) cld repz push xlat ret push loopne (bad) in lret into mov idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div jmp mov xor in fildl add loopne push (bad) (bad) (bad) std call xchg jbe icebp mov stos (bad) ljmp jmp idiv mov movsl mov stos je (bad) cld cmc hlt dec jnp call mov aad jbe iret test shrl xlat sbbb pop xor repz push fld push fld push fld push fld push fld push fld push fld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push lret repz repz repz repz repz repz repz into mov idiv (bad) stc idiv (bad) stc cmc (bad) (bad) clc repz mov xor out fldl add add mov lock (bad) (bad) (bad) (bad) (bad) ficompl (bad) ficompl call mov rorb stc (bad) fistpll dec jnp (bad) sti div inc jae inc jae inc jae inc jae (bad) mov test scas pusha aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) .byte outsl (bad) out incl add test pop push push xor push push push add (bad) fbstp push call mov cmp mov je addr16 push dec fdivrs lea movb jmp add stos stos pop xor lods and push stos mov or jb ljmp mov repnz not dec cmp mov mov adc sbb and xchg dec mov sti mov push dec push push lea push mov outsl fwait mov sarb and jbe mov incl push add adc add adc mov in aaa adc jo xor sub pop adc add adc or mov (bad) mov popa adc mov cmp pop add out mov push push add mov jge push push push adc add or cs fistp pop sub jne neg mov sbb mov mov add cmpw pop imul sbb fist cmpl out push jo bound push push push cmp pop clc and (bad) je or add push mov push jo xchg xor push sub fdivrp scas adc lea cmp jne mov mov ja jl push sbb divl mov lods (bad) fnsave sub jne pop push adc sub les add and div pop pop add or sbb cmp push fldt nop add in mov mov je lea mov test or je dec mov mov testb or (bad) and add or pop inc push iret or cmp mov out jmp or cmp jns inc dec sbb sbb fidivl push adc rcl mov or vcmpsd int (bad) aas fwait aam mov cmp ja cmp jae sbb (bad) fcoms or mov push mov shr rep mov aaa and rep js mov pop movb dec imul push xchg xor sbb and adc jnp std data16 roll dec add xor add loope push push push nop adc jnp push inc fcmovne je mov lret je cmp aaa sbb push cmp mov dec pop mov lcall or xor test frstor jne cs cmp cmp je mov insl movsl adc scas or pop sbb inc add fmuls frstor xchg je iret jae popa xor sbb push mov pop mov and or cmp jae sbb jno sub inc or sbb mov sub lock loope sar lahf adc cmpl fstpt mov xor fdivs mov adc test or jmp sub sar add (bad) mov (bad) jge nop shl push xor ret hlt mov mov lock mov or adc aam fist jne test mov jbe cmp cli sub jl jmp and sbb imul rol loop lea outsl or sti je and (bad) push push pop dec into fstpl and sub add mov outsb inc sbb movb in fidivl mov jne aam lock jmp pop adc lret and or bound adc clc ret pop pop mov xlat rcrb (bad) sub sar sarl mov cmp mov adc jmp lea dec mov push mov out (bad) loope js push sbbl je cmp data16 and sub (bad) jb not test jae push cmc pop lods repz and xor outsb or pop mov mov mov add add fidiv mov cmp lods je push push insb ret sahf fcmovu nop mov dec fidiv jo sub fadds xchg dec sub jmp je mov xchg xchg sbb cltd je sbb sub test pop xchg iret repz stc lahf push (bad) adc jmp fwait aaa mov rcrb jg outsl fsubrs fidivr lret jae fnstcw out rorb xor mov sbb sub or sbb ret or lock (bad) sub ss sub add push cwtl cmp xchg (bad) push adc jne sub das int mov xchg fsubl test outsb push test sbb sub dec dec inc dec lcall int3 and push lcall icebp mov jbe imul pusha mov xlat cs js (bad) jae add test jle inc ss add inc fcoms sbb popf aad adc in mov pop adc sbb inc out jbe or xor lods daa xor lock cmp and cmp outsb pop jne imul insb inc ljmpw adc cmp or ss cs roll popa adc sbb in aas push mov jo arpl in inc push mov sbb mov sbb sub mov pop sub popa sti std mov dec call idiv mov in sbb cld sub mov mov cmp and sbb mov ss cs mov inc or jbe divl (bad) mov enter mov js enter jnp mov cmp in test sub pop sub aaa dec cltd jae push xor lea call push sub std fldt push jo cmp pop mov lods cltd sub jo inc pand ret (bad) xchg xchg or mov jecxz cmp inc mov mov test sbb and mov mov ret adc push (bad) adc notb xchg in ds mov mov in and rorb sbb adc (bad) ljmp push pop and rcrl pop imul push dec or out flds push jne cmp xchg sbb pop (bad) jbe mov cli imul push push popa pop inc dec pop ficom or sub lea inc mov test das adc inc xchg pop cld jbe cmp jne je (bad) cmpsl andl xchg dec push pop mov cltd mov addr16 mov mov idivl add sbb cmpsb dec sub or (bad) (bad) or test inc stos test lods je inc inc dec leave icebp and mov movsl mov or xchg test mov (bad) or push mov pop aas xor pop lcall idivl decl sub movq js push in xor int push gs cli inc lea scas add xor push jg pop jnp mov lcall sbb mov push lock pop or arpl sbb (bad) fdivr push add stos in mov add loop ljmp mov out out scas jge subps xor lea outsb xchg or rorl push xor jbe jnp sub popf les dec enter insl mov int3 mov jecxz xchg sbb or inc les cwtl out insl (bad) aas pop push and jnp cltd pusha int iret int sarb mov pop jmp inc mov aaa and orl mov js cltd fs ret arpl jae mov adc sub int3 and lcall fisubl push mov movl push fsts dec mov pushl mov jge sbb add pop dec push rcrb inc je xor imul int lret inc pop cmpsl jae and add roll xchg adc rcrb in outsb adc push fistpl fisttpl adc mov ret aas (bad) jno (bad) ss or and je add sbb stc js mov imul fimul inc stos stos cmp inc adc imul push push push mov ss add push adc in cltd loopne sarb lods (bad) mov insl or push imul or les mov in mov ret (bad) neg sbb adc add add xchg mov jns xchg jo add jge push rclb pop pusha repz or rep adc (bad) cmp test inc pop jne insb and gs mov test and add jae adc or insl aaa sub fisttpll and insb cmpsl ret insb and inc or sbb mov daa adc mov adc cmp sbb dec inc into outsl popf xor movsb add push push les test lret add mov dec fmuls inc cmp push clc and enter aaa ret mov sbb popf repz xchg imul mov rolb sbb adc pop mov cmp xor sti std clc test (bad) sub cmp sub mov je inc adc call mov mov jne xlat cs mov push push push or cmpl push push adc push push and sub ss sbb insb mov fnstcw xor xchg push jmp push inc cmpl push mov jae lock cmp add pop (bad) (bad) add xor fsubr aas push inc cmp or sbb ret push push mov push mov push xor push divl cmp fs push dec (bad) ja loop (bad) push push mov xchg or push mov or push jmp jp xor push adc push or fwait cmp gs fisttpl pop es fmuls cmp lock cltd xchg pushf andl add mov mov pop pusha add cmpsl and or sub adcl gs sbb or pop xor lock xchg xor or adc (bad) push clc fist fimul rolb outsb adc mov insb push pop push aad fmuls ret inc insb inc fsts (bad) jo pop and std jne test ret jo jne adc je cmp das jo xor ret add test insb add into jbe jo mov adc pop mov out xor sub fbstp xor insl jge ja pushf bound add (bad) fdivrp mov (bad) cmp push xor add cmp dec divl pusha sbb or and and cld mov (bad) js jle or int pop mov pop orl add pop add popl fmuls fstl sbb and dec ja dec push hlt or idiv mov jne mov cmp mov mov add inc or dec outsb jmp lea fcoms mov clc shll cwtl push push push and test ret loopne pop or lock xor adc loopne sbb jge sbb mov sub inc incl pop mov push mov xchg sub push xchg dec hlt and pop dec sarb and and pushf and adc inc loop sbb and dec leave (bad) je (bad) xor cmp and adc (bad) push mov mov dec xor insl sbb adc in and iret adc push pop fwait sub pop adcl adc testb fldt std (bad) lret jle mov je add je imul enter or or into lds es adc mov cwtl mov cltd out or adc pop push or xor pop out inc add dec add fnstsw adc mov or (bad) mov cmp add pop add in into sbb ret cmp std pusha push pop aas call xchg (bad) fnstcw sub and pop xchg pop push aad xlat mov (bad) outsb cmpl push push popf xor ss xchg xchg mov or leave sbb test inc and rol movsb mov mov inc sub jae call (bad) and jle aaa cli xor imul and movsb pop pop adc sub outsl jo push in mov mov add in sahf and jmp fidiv cmp int pop cltd lret inc or lds adc adc xor leave enter mov push push push mov lret rcr jmp pop jbe cmp jne and jbe cmp xchg cmp loop push inc dec push fisub pusha pop dec inc push xor dec (bad) fs jno push ret xchg mov add mov adcl sbb add xchg cld push and push push inc add mov xchg pop or add test push or lret fisttpll add mov loope mov or sbb mov mov aas ljmp cmp outsb insl es notb mov rol (bad) jno push inc js daa loope mov mov das ss scas mov jbe,pt cmp dec leave lret test fcmovne sub insb cmp dec inc adc cli (bad) into push push cld mov pop mov call dec and inc or outsl insb jl test sub shrb mov cmc in mov add or dec sbb insl fisttpl or sub sbb ss neg adc add int3 fucomi push pop fbld cmp cwtl mov fisttpl aaa cmp jne mov mov in mov sub imul rol add push push dec iret lcall and inc and sub stc sbb push std sbb push push sbb lods jne dec inc sub mov mov das cmp push xor push inc cmp push insb jle xor dec in cmp mov push sbb adc loope ret mov pop mov push mov repnz xchg xorl sub mov cmp data16 and fs xor arpl mov lcall xor and cmpsl das fisubl and mov or insb test gs dec rorb mov je mov and and lea mov in or (bad) leave lea imul inc loop pop mov stos nop mov push xchg ds sbb je or dec jmp pop mov leave iret inc jne push ds sbb mov push mov sbb jp mov je rolb js mov in out adc pop mov cmp sub out divb cmp adc jo xor dec shrl pop sub mov mov pop fist mov cmpsl lea aaa push lea fildl jl jne xor push mov pop mov pop lea lret pop jo imul cmp clc mov or je pop push sbb aaa jns insl jmp adc adc mov bound insl pop mov add push push cmpb iret cltd pop lods jae or or mov cmp ss pop add xlat cmp pusha push inc push sti or push inc inc jo push xchg data16 jae xchg adc sub mov shr sbb into cmp je ret imul and inc clc sahf in xchg push loope movsl imul pop cmp sub dec adc cmpl rolb jo sahf mov scas imul or daa push or cmp cmp dec add add dec das pop insl outsb cmp js test dec adc ficomp je cli pop sub inc jecxz push add add xchg out push push inc lcall (bad) or fcoms repnz jmp push sub es sbb (bad) add add jo dec push lods test dec aam imul sbb pop (bad) ja sahf insl xor add and sub pop fldcw mov ret outsb in and pop add mov pop inc adc xchg rorb cwtl fwait mov sbb dec push dec mov and scas or mov incb or lds sub push mov add clc sbb mov mov sbb rolb or ljmp aam fs daa mul fs adc dec push sub push mov orl das push inc sub inc push xchg sbb subl ficom hlt dec outsb jno aam mov pop (bad) shlb inc inc mov and gs fstl or adcl inc scas jp,pt jg dec xchg adc loopne orb nop mov (bad) clc and push mov inc and lea enter xchg mov push (bad) dec inc or shrl mov push cmp lea (bad) jne mov or cs push lock add sbb push adc in sub outsl rcll lds imul mov bound iret ror clc int dec mov and jbe pop pushf and jmp jae and sarb fs sub inc pop enter dec js and add (bad) jle popf mov jae or push pop mov nop addr16 adc or sub leave jbe cmp and inc leave inc add xchg pop sub popa scas fstl mov jp lret pop sbb push jno push int pop addr16 or pop inc push xor lcall lcall sbb mov leave pop mov xor mov jb dec push xor adc cmpb push add ljmp pop add jecxz popa outsb mov add or pop pusha adc or fnstenv or ljmp jns dec and decl adc pop ficomp cwtl nop imul ret adc jmp or push notl or push aas sbbb ljmp leave cmp shrb xchg into sbb mov add cld add loop sbb cmp fidivr out jne in sbb cmp pop test jbe xor and jbe shrl xor sbb xor cs adc repz cmp nop cld add idiv pop jecxz add mov adc xor dec fsubs idivb cli iret push out pop mov push pop nop inc movsl cltd cmp mov ljmp fnsave js enter repz pop je sbb addl and mov inc sbb sarb adcl jl mov inc dec adc (bad) cwtl scas cmp cltd lret std cmpl mov (bad) mov sbb adc pop add enter scas stos add mov ret xor sbb aam jne ss ret pop ret (bad) idivl push inc xchg je push mov mov mov adc ds cmpb xor add stos aam jo dec je cmp (bad) mov fidivl or mov pop jl add fbstp and mov sub jo dec clc jmp popl in mov or (bad) cmpl push or fdivrl fwait mov fmull mov or inc jbe imul int3 int3 push inc xor pop inc xor mov sub cld fiaddl testl mov testb loope cld lea and (bad) jae sbb popa lea mov rcr fidivrl lea test pop pop inc or mov and jo sbb sbb ss leave (bad) iret fimul or or sbb mov mov leave jae sti aas mov and pop push xchg push mov inc sbb add push and scas insb sub scas fidivr lods loop or push loopne gs jae adc ds pop repz jge imul arpl insl cld jmp pop leave rcrl xchg mov or cmpsb mov movsl ds popa fcompl es int adc sub std outsl (bad) sub pop cmp jb sub or cld lea add add dec dec mov mov cmp jmp clc jae bound hlt sbb lock aas inc cmp fisubl in lea sbb xorl push inc lods imul test leave push cld push movl pop cmpl ss xor js jp xor int cmp sbb cmp pop pop call add hlt mov cld lock fcoml fsubs int3 add ss lea push pop (bad) dec aad incl pop push pop pop and mov dec int3 jge pop mov pop fcomps das fmul mov data16 ffree insl rcrl loopne outsl imul and pop jmp add fiadd adc or mov add js push adc sub xor mov and arpl dec je push (bad) push mov lret ja pop dec (bad) xor fwait jl cmp mov xchg adc add cmp test and add push or lahf jnp (bad) dec movsl xor jge adc sbb mov add xor or pop jbe inc ja out into inc out (bad) repnz das imul push jb imul cmp lcall pop sbb test insl clc or stc or inc jmp mov sbb jmp add enter inc push xlat cmp nop pop or adc add and mov mov mov mov add xchg lods or (bad) pop int3 xchg gs (bad) add jmp es nop and inc aas cmpsb jmp in outsl push pop add imul (bad) xor (bad) in arpl pop call xor in lock hlt clc or in in adc ds add jo xor adc mov insl nop popf or adc and pop mov insb mov lea or jg outsb jnp and std jecxz ja inc (bad) leave and mov out (bad) rolb jmp xchg iret sub inc sub sub dec add insb cmpsb jo add outsl add xchg mov pop and in adc sub daa and sub add dec (bad) jne les add fsub sbb xor hlt pop inc xchg sbb imul imul movsb imul (bad) jne sub cmp ret into mov xchg adcl rclb mov mov dec mov xchg js or mov fmuls repnz add cmp inc orl inc ja sbb lahf mov xor or sbb xor pop jb enter outsl lock push mov popa popf sbbb pop add ret pop pop sub pop inc stos push outsl in mov (bad) arpl or dec hlt add push das hlt pop mov test je mov divb dec pop les cmp je sub or (bad) jg insb rcrl adc jne lea mov test mov sub mov xor mov add fidivl jmp das xor ret mov js out lea or lods add or inc lea popa cmp jl out or (bad) mov jb cld mov mov add fistp and mov jle ss push into clc ret cmp enter fildl and bound sbb sar mov (bad) sub loopne or mov pop or or or or std add push xor push leave push ficom rcrb xor push int3 dec pop sbb mov add or shl or mov jmp rclb jae out inc adc into dec loopne or add push jecxz jp jb mov js sbb lahf push and mov lret call test push out es iret mov das mov pop aam je jg dec and adc lods pusha push sbb dec add mov jecxz xor dec push push mov xchg or fisttpll in test inc pop push adc dec std push dec pop xor xchg sub test cwtl adc adc jae in insb incl dec mov add fisttpl cmc inc (bad) pop fnstsw nop fistpl dec int3 xorl xchg pop adc jg test stos decl dec call push rorl inc mov mov and mov jo xor sub pop or adc loopne inc xchg mov xchg mov popf add jo insb sbbl fnsave lea dec ds mov inc mov or loope push cmp loope es adc int pop movsb xor mov mov pop jne and shl add adc lret call add cli mov fs pop and clc xchg push xor cld aas imul mov loop dec adc pop xchg add fmull lret mov rclb inc pushf ss cli push test pushf testb (bad) mov rorl test mov pushf push push fbstp adc mov cltd test add push movsl cmpsb jb (bad) mov in lock or and and (bad) jne mov xchg je loope negl add push dec dec xchg pop cmp sub mov arpl cmp (bad) mov pop (bad) (bad) in push xor xchg aas add shll push inc mov jle add push dec jae fwait dec fsubl fs and dec lods lret popa push outsb faddl lods popa insl mov cmp inc imul mov push leave sbb and je sub notb je cmpl mov ret sbb adc adc (bad) jmp push or cmpl arpl pusha sub js jbe jo rcl je or sbb scas pop cmp and push and in scas mov pop sbb cmp sbb xorl addb inc cmp dec (bad) jnp test jl mov ss pop push jne mov push xchg mov pop or dec outsb loope add insb pop mov jo push adc pop repnz (bad) push repz pop in push stc add mov adc sbb inc ja or pop clc aam lret mov xchg frstor sbb xor pop push adc mov cmp cmp jg mov lea sbb or js ret mov jbe loopne sahf aam fdivrs outsb aaa pop scas clc jg cmp jg or orl stos mov adc and in adc jp xor imul in push ds sub decl xor fs call xor stos inc and adc xchg in mov cmp test fdivrs imul insb cmp and xor das ja jae sbb clc (bad) dec and clc jae cmp jl cmp sub mov adc adc mov add hlt fs cmpb mov fistpl out std mov call es lods aad bound dec dec cmpb into inc das insb les dec lock rorl mov or and push add pop and mov push mul lret mov scas jg jnp pop or mov sarb xor pop push mov adc scas je sbb push inc jle cmp inc sub ss lock or add fnstcw popf mov sbb in jnp inc loopne add dec push push sub popf ss pop jmp lret dec sub repnz mov add xor or mov sbb jge add push and rcll ds pop out push sub mov pop mov pop sub adc outsb push push jnp cmp inc mov ret sbb push xchg sbb data16 dec aaa jbe cmp loopne,pn add pop inc pop aam loope insl nop mov inc jl mov gs in loopne shlb sub push dec jo mov jnp mov add push aaa (bad) imul inc movsl out sysexit cmpl gs xchg and inc mov mov mov loopne sti iret xchg stos xchg mov in loopne xlat mov sub jg mov add push je add aam pop push or fwait mov cmpl js jo mov push cwtl add push test sbb or add imull (bad) or or fdivr lock push jb adc testb inc dec loopne sbb jbe pop pop dec mov in push adc push dec and mov or mov jmp cmp popf dec jae cmp mov push aam push mov push jge sbb add pop and or jmp sbb add cmp ja push mov xor pushf push pop jmp cmp fwait mov xor cmp rorb je pop int3 inc (bad) loopne pop and (bad) sbb xor adc rcrb and push and enter mov adc ret ret sbb sti inc xor test push push sbb inc and lods pusha pop add test jle inc push call sarb xor icebp sub add jecxz popa ljmp stos push sti icebp aas insl (bad) jp aaa push fstpl cs stc negb mov pop sbb mov test dec pop adc lahf cli mov aas cmp sub stos dec xchg dec dec frstor pop iret pop pop inc pop jnp lret (bad) sbb adc das push out xor jb das stos push jne insb es push mov pop mov (bad) (bad) mov xchg inc popa and push jge mov mov rorl xor inc mov push cmp xchg adc (bad) pop and xchg pop xchg mov cmp in popf adc sbb or add xchg adc (bad) jns pusha xor mov add rcll shr pop push mov sbb loope test cmpl and pop lock cmp addr16 cltd adc fdivrp es mov mov ja push mov lret and insl movsb inc dec stos loop lahf xor mov lea out xchg mov pop mov pop ja enter adc shr dec fstpt jb pop inc and enter bound pop pop jne jb xor sarl jl push fstl scas adc xchg pop push fisubl or nop addr16 jl adc push add adc cmp sar adc xor daa pop push icebp fstpl cmp mov cmp pop jp call lea lock mov push dec out push test fistpll jae pop push arpl adc push pop jmp pop pop ret orl or inc cmp mov enter (bad) and add push pusha pop stos sbb sub fbstp fcom adc dec xchg push mov cmp insl xor cmp ret mov subb cwtl lods pop loopne clc fdivrs (bad) movsb movsb mov outsl ja push mov clc push inc sahf pop fsubr cmp mov leave inc cld dec ret sub xchg or call pop mov push push outsb pop push or pop cmp (bad) (bad) push call or xchg push inc jae into sub and dec adc repz xchg dec add jne add fs push push push rorb pop mov leave pop adc fstpl rolb ja sbb inc cmp push inc sub ja,pt ret inc adc adc enter dec cmpsb sbbl jle fildl jae mov shr mov ja xchg cltd cltd lods test aad loopne mov movzbl push adc and sub and sbb test mov cmp inc xor push inc rcrb push pop jne push je cwtl mov adc jmp dec (bad) or push adc pop dec dec or leave and xor test sbb sbb sbb cmp icebp or push loopne loopne es repz adc dec inc shll mov stc fbld push movzbl shl xchg loopne test push les pop and nop test jp addl lea pop ret lea and fs push push push mov mov test or fnstenv mov adc or push (bad) jecxz push rorl or push xor pop cli ljmp out stc xor xor xor xor add and sahf fist and scas and inc xorb pop mov fdivs inc mov fdivl out cmpsb jmp faddl aam dec out mov sub push std test into cld leave enter (bad) inc xor inc and adc push shll jnp cmp adc divl jne push shrb adc and lock push adc aas sbb mov ds insb popa cwtl jl lods push inc cmpw call and cwtl mov outsb adc push neg inc sbb add push adc (bad) out mov sbb and and nop sbb sarl (bad) icebp movl jle adc js jbe sub adc sbb dec xor dec (bad) xchg mov mov jns inc and mov jae loope xor subl rolb fnstenv and scas jp imul add cmpl add repnz inc push mov (bad) out or faddl mov je cmp mov dec in sbb in mov mov or or mov jg fidivl dec (bad) mov enter inc or sbb fmull (bad) jge je push fs je (bad) fldt add mov push and dec adc jb mov loop inc dec decl push mov pop mov dec push push pop jne pop sub pusha push ja test xor or inc jmp mov ljmp aam or (bad) testb pop je andb int incb mov mov push std or cmp mov and popa in mov test xchg subb or inc or (bad) imul add test mov inc xchg inc push out pop add data16 incl and mov mov std pop sub sbb inc and or test imul ret cmp ds jno and or test pop push pop shrl xchg pop mulw or push je jbe (bad) sub out push pop sbb pushl ss pminub (bad) movsl add or mov arpl mov cltd stc add lea stos outsl adc jmp mov sub loope pop add mov xor mov mov jmp cli pop pop fadds pop push (bad) or fwait test outsl addb jb das jmp and imul sbb sub leave leave adc negb pop mov inc test pop in add (bad) lret add add add cwtl jmp cwtl mov or (bad) (bad) mov sti and js push movsbl mov ffree por cmovnp mov setns sub daa jmp add inc rclb sub enter add (bad) push pop dec dec sub cmp je pop jo push dec pop dec dec je or mov daa or inc xchg mov adc dec sar sub adc pop pop int3 mov out insl jge push daa add ret push mov inc inc shr jmp pop aas push clc sub sarb lret pop sbb push aaa dec mov insb push mov lret je ja jmp lods xchg adc and ds xor outsb hlt cmpb loopne inc enter and adc sub stos jbe mulb sbb mov iret jo pushf pop add mov push jg xor clc addr16 jge (bad) in xor pop call insl pop ret jb add mov test mov push insl add je (bad) xchg rcr clc sbb int or sbb into xchg sub adc es dec xor lock imul out inc jmp and add pop ret ret and mov call dec (bad) int clc push icebp add int scas (bad) js cli mov cmp test xchg xchg fisttpl xor enter pop lock pop xchg je xchg mov add push push aaa cmp pop mov shr insb sub inc out adc mov pop jp fsubrs test pop (bad) shr jecxz jnp int3 data16 mov mov push xor hlt or push adc arpl (bad) rcll cmp jle mov mull inc jle sbb jnp sbb sti test pop ss (bad) dec shrb clc xchg outsb xchg mov mov scas sbb adc inc stc cld aas jecxz rclb enter pop and clc lcall or outsb inc cmp adc or add pop mov add pop ret fxch repnz rolb add xchg xchg mov aaa (bad) rcr and int3 daa xchg xor cmp rcl inc sbb jl and adc add icebp es insl xchg repz or mov inc ljmp push or sbb jmp and je sub cmp push cld push mov and mov mov data16 in mov add push jno mov push sub mov mov je add flds sti ret cltd jmp or sti cmp loopne xor sbb jecxz add xlat jae js rorb sub fisubl je mov icebp pushf pop jnp mov sub jge sbb aas idivl dec jge ss or sub xchg test or add sbb pop lock lahf lock mov push push repz int sbb ret xor sub cmp sbb int3 hlt mov jae scas push sub xchg add lcall cmp je or and shufps sbb sub hlt mov test es mov sub in or jmp add fcomp fistpl jno sub xorl push add mov add ljmp out or inc inc push fs (bad) (bad) mulb cmp mov lea push lods mov inc mov jae ja jle lea push cmp pop add (bad) dec fildl adc push dec hlt sbb pop pop movsl jae mov adc gs or xor pop adc lcall (bad) fnstenv inc shll xchg or gs and add cmp mov insl insb je (bad) fdivs push test fprem cltd pop mov into ljmp sub into adc add sbb pop and and push jp (bad) scas jmp es xor push inc sbb ss jl aas ret dec loop pusha scas push jge addl arpl mov pop jge xchg sbb sbb or or pop or jb cmp in rcr mov psubw sbb fstpl or cmc add pop cmp mov jbe xor ja sub fsts add pusha or pushf dec sahf and mov scas int stos or fwait aad inc mov pop rcr mov cmp test clc mov inc cmp xor pop add je xor cli pop push inc add jns dec dec sbb or nop cmp cmp enter cmp xchg or loopne daa cmp mov mov gs js shrb or jbe and dec loope mov outsb test or sub or push pop xlat stc jmp pop loop jae in push mov ret test ljmp add push cmp jge lea shl mov add xor cld and cmp jl insl popa xor aas adc mov out dec lods and pop sbbl movd stc cmp ds inc test cmp cmp push cmp xchg pop push push pop pusha rorl ljmp inc lret sub lcall fldl jp cmp push fldlg2 idivb xor outsl mov ret cmp add mov dec cmc out adc push fildll je pushf mov jo mov sbb icebp cmp jne dec inc pop push adc inc jmp outsl jg sbb or jbe inc or ja lcall psubsw push mov imul pop hlt pop aad add daa and clc push add lock in mov mov jmp aad cli push mov pop adc add mov addr16 scas popf inc cmp je daa mov (bad) loop pop inc ds and cmp jmp push cs ss jg outsl das push negl std aaa jne pop incl mov movl mov popf add mov js xor dec mov or cmp pop icebp cmp clc mov push lahf pop cs dec (bad) xor dec mov mov xchg daa and push push xor cmp mov or and orb mov inc pop lds decl aaa (bad) mov repnz inc fwait inc mov inc cmp sub js push (bad) add lahf je sbb aaa push xchg push mov mov inc inc or mov into or add fistl sbb add scas shrl sbbl mov insb xchg mov and or jne into dec pop pop sbb incl xor js cmpsl inc sub push jp enter stos testb add sarb and inc jmp xchg sub push fmull sbb inc xor and push or sbb sete cli insl call jmp rorl push inc mov push push mov jne andb out push or add cs je sub loop pop faddl inc add add pop sbb movhps push pop call mov popa loopne or dec mov mov mov shrl shlb aad repz jnp pop mov inc js pop hlt cld pushf xchg xchg mov pusha mov fldt cmp jae jnp aad xlat or jne push repnz inc sub das dec add fiaddl pop add jp push jmp les and xchg and xor and in stc mov daa pop out add lock mov jle jmp dec dec movsl test je pusha repz inc cmp lds sub inc push into pusha or pop dec or add dec inc in (bad) icebp mov xchg cmc fcompl out sub dec push push in sbb pop sbb loopne sbb and xchg data16 sub lock orb data16 hlt mov add and pop jmp mov push mov mov lahf lods (bad) aam sarl in in or cmp pop lcall jle cmp jl cmp fs lods flds xchg xchg push cmp xorl cld fmuls sbb pusha or imul sub add pop ljmp or inc je adc jle adc sbb push push or xor jnp inc adc ljmp pop push mov or aas imul sub inc cmp jl addr16 subl dec ss das enter jge negb xchg ret dec popf (bad) cmc mov in xchg mov push jo loope dec or mov in orb mov or and add addb jl incl xchg xor pusha cmp push les push cmp sub and adc cmp add or or sbb inc sbb clc orl imul iret repz pop jae (bad) xchg jle or cmpl fwait insl adc insb add inc or js xor adc xchg or and lea stos in fcos incl cmp jl cmp jg sub mov inc cmp jne inc push ds je inc xchg jle push xor arpl push neg imul pop add adc push inc cli xor sub add push or mov sbb fmul push in mov jmp repnz sbb mov xchg sbb imul jge push sub xchg add jno push orl lahf xchg cmp pop loop divl std inc mov inc add inc jae cs and insl mov bswap lds fcoml ds xchg sbb sub hlt sbb out sub add cli push and sbb push cmp adc mov leave mov dec nop adc cmp fisubr aas shl cmp insb es pop sbb scas mov adc push cli jne icebp adc push push in fwait push xor pop dec mov js addr16 sti pop adc mov mov inc aam jbe sbb xorl add push je push jb cld push pusha decl adc dec cltd sti and mov rcll in in mov push cld mov mov clc fisubl aam les push lea cmpsb adc in adc push popf push imul mov in aad out xchg add andl stos xchg mov pop bound hlt xor add sbb push push andb add push or mov mov cmpsb adc add loop ljmp jb vmovntps shr mov lock imul inc test in dec test jl clc fldl adc lea mov mov insl les imul or jle xchg push aas jbe mov add pop xchg dec lock (bad) dec mov and mov jmp dec add das jne cld shll pop mov andl cmp fs and pushf mov imul jl add pop push pop jno fsubp push adc add pop add (bad) push data16 imul pop sarl jmp xchg push mov sub adc sti add mov hlt add fisub inc cli out out adc (bad) adc cmp je mov fs inc cmp out pop mov out not and add or loopne sbb in jl mov pop push inc dec into pop mov add or or pop (bad) hlt or test into subl pop xor int sub aaa add add mov fcmovnu adc and fsubs or insl pop ret inc lods or jmp and and mov ljmp aad adc cmc movsl add pusha lcall cmpsl xor fild jnp mov sbb mov sbb adc addb push mull out pop xor push or outsb idiv mov inc adc cmpxchg call or jns cmpsl or add adc mov adc in adc les push adc cmc loope sub sbb mov insb enter dec adc lea fcmovne daa mov inc or idivl add or jp inc jne fidivrl shlb push adc xor fidivr (bad) sub dec pop and pop adc and add and push mov outsb or inc imul hlt jmp nop aam movsl jo or mov push inc out jae test mov cmp sub decb iret sbb fucomp add sbb pop jne mov cmp es add pop and jae mov aas adc jmp mov or fimull jnp add or insl test adc insb pop iret inc test imul out frstor into mov cli (bad) push cld divb mov inc mov mov pop ror jbe adc sbb mov add or mov sub sbb mov or je mov mov dec dec push into mov push (bad) pop pushw fs pop jl jmp loope and or push sbb icebp inc and pop aad cmp jle pop dec or rorb dec popa repz jecxz sub iret call fistp in and mov decb jne jns pop das nop mov dec adc xor sub mov imul cwtl sub add pop movsb mov add pop (bad) imulb pusha mov jp or fs insl scas sub add sbbl jge fsub pop sub xchg or mov bound std into shr or or das sub testb lea and jnp mov or test xchg or adc mov sbb cld mov jne add and adc cld lahf shlb lea out (bad) outsl (bad) jne cmp cmp push outsl adc dec xchg fiadd add push in ljmp xor xchg jmp sbb je lcall or mov movnti inc xor cmc sub mov sub push std push mov and cmpsb stc pop dec add and bound add bound shll inc dec loope fwait jno push fcmovnb dec loopne ret bound aaa imul (bad) or inc or add dec push sti (bad) outsb test out push mov xor inc (bad) repnz outsl daa outsb jp xchg add cli ja lea orl fcmovne icebp mov pmuludq cld lock push out push ja,pt testb sbb mov jbe and add jnp pop mov or inc mov jno mov mov or js cs rorb mov add aad jl cltd ljmp add cld (bad) sub and pop sub mov xchg push jp ljmp cmp push sbb adc clc mov jle sbb add xchg popl sbb aas lea dec pop pop pop xchg fadds mov pop dec cmp mov clc icebp add sub and dec xchg hlt nop dec or or push jno fs sub add insl andb insb fstpt incl inc xor call rorl pop scas sbb ror mov or xchg gs dec pop pop pop xchg in xchg pop call pop and mov nop dec iret in mov adc and or insb test cltd ds inc xchg mov and inc adc add stos adc jno insl jno jge push push fisubr pop mov mov mov call xchg jmp cmp test cld sbb es test imul dec call jns add xchg dec imul sbb pop jbe ja ja push fs jno mov add sbb cli pop cltd xchg xchg in punpcklwd movntq cmp xchg xchg in jns adc push or mov sbb cmc xor insb decl ljmp sbb int or mov or sub shrb sub int roll sub xchg aad mov lock fs mov or ja mov or xor mov lea out sbb add mov rolb mov dec and dec inc mov xchg cmp out jecxz push push ljmp ret cmp jae orb jne addb inc add push lea jmp andl fstpt cmp dec adc push cmpsb call xor cmp cmp lods shlb adcb loope add dec test push xchg or inc lea jbe jo xor aas push ss lods fistpll mov add incb test pop orl dec lds push pop push cmp fbstp mov or out inc test dec jge and js cmc ret jns (bad) cmp and mov cli out pop adc (bad) jb push mov sub ljmp dec mov ljmp add jb lds add mov mov push xor jmp out or jb fmuls fisub jle enterw sub mov sub pop lret lock imul dec push xchg cli out jbe or enter movzbl add and cmp rclb cli or xchg jae add fwait in arpl rclb loopne add imul and (bad) sub sub jp jbe add loopne cmp out jae mov int lret jl cmp mov or adc xor push add jne (bad) data16 jb add jb cmpsl jle aam mov loop inc jae mov pop inc mov mov cmpl andl inc cmp xlat push mov sub mov mov jne (bad) jg push add or aas insl ss mov sbb call popa pop mov xor testl mov jle add jge xchg je rcl add sub sbb mov mov push mov mov push pop cmpsb mov sub push orb fs or cld mov inc push mov or mov stos xchg inc (bad) call ss jae cmp sbb repnz aaa fimul inc or aas add or add pop xchg mov popl mov sub mov sbb jne jo lods insb jne rcll shrl push sbb sbb push repz or mov pop cltd sbb push cld add mov jecxz aaa mov inc jmp andl sub push push mov inc jno mov test loope cmpb iret xchg hlt push dec push jae,pt sbb jmp cmpb inc inc pop test dec cmp mov mov cmp (bad) cltd jbe mov lahf repz adc ss mov jle jbe push insl push xor push jle push pop add inc inc lods sub fistl or stos sbb movsl (bad) or shr jns ljmp jb out jmp mov lock rolb push mov (bad) mov dec js and push inc or inc loopne inc mov rcrb mov sbb call insb fwait sti addl gs add cmp lock rclb lods mov popa or repz or mov mov xor ja lods outsl btc jbe sub jle xor push gs push pop inc inc stos arpl add push aam jno xor jae push adc add inc mov push dec aam lgs mov adc mov pop sbb and pop ret stos push push add adc fwait sub sbb add enter mul sbb addb xor movsb iret push (bad) xor fistpl cmp add jne or mov das in in sbb jne adc xchg mov imul popf nop cltd lods pop stos cmpsl inc ret or lahf lods fstpt inc jmp add imul ror leave mov pop rorl mov lods push jae subb pop pop push pushf inc sub rorl push call xor mov es xchg add inc push (bad) mov jb jae mov mov mov jbe orb or frstor ljmp add fsubl fdivs mov or rorb and je sub mov mov jne repz sub mov mov mov push mov dec (bad) jne pop add jl mov test daa test mov mov mov mov iret or jg inc mov jp fldenv test sbbl jne adc outsl cmpl inc dec je imul lods sarb add and add lods pop gs cmp adc add and out cmp cli sub add xor mov ja xchg xchg scas mov lahf js xchg ljmp fisubr pusha add sub push push pop mov or add je test cmp sbb sahf subl loop mov cs or pop pop imul xor jbe sbb add ja sbb dec add add jmp stc imul inc leave call bt mov pop pop dec cmp inc les inc pop and jne pop mov xor shll cmp fisttpll cld sub xor test into adc adc push pop ret or std cs and call push or std jecxz mov clc pop lods flds lret mov push repz clc fistpl fbstp cmp ja decb sarl sbb (bad) cli mov repz add pop ret lock xchg inc sbb mov inc ret or sbb and jmp add jmp clc pusha pop jns jmp cld or sbb push ljmp int3 push cmp inc repz add inc lcall daa cmp (bad) cmp pop cmp xor or mov and or roll sub lods ret jae mov mov xlat dec push sub inc mov loopne adc std cmc xor jne pop rep cmp and enter push jl mov mov pop sbb jle mov in fsts inc pop pushf jg js add (bad) mov inc sbb sub stc push call mov inc jno sbb dec xchg mov popa iret cmpsl call cmpl push sub adc bound sbbl je nop lea aaa dec sbb stos or mov int3 adc rdpmc (bad) (bad) mov leave fisubrl push pop sbb out sub xlat mov push adc add jae mov inc addl lret (bad) xchg xor or adc jbe (bad) pop imul flds inc jno inc xchg cld cwtl pop jne sub add sub hlt into sbb mov adc in ficom push and inc sahf into and mov scas test fs lea mov orl cld add adc mov sub pop fildll push jp push nop aas out sub movb jb rorb sbb xor cmp sbb rol int jl lods push mov cmpsl push stos pavgb xchg aas in push ja movsl or push int jae or mov cmp je lock inc sarl lea stc inc int3 add sub cmp hlt mov push push push pushf sub jno xor or sbb jl or lea mov mov xlat nop dec push bound pop cmp pop push inc shrb inc mov dec mov dec hlt push push es add jo lods loope pushf push loopne xorl push xor and movsl push adc cmp sbb jmp movsb lock stos pop cwtl dec sti add pop mov jne inc mov orl movl lret aaa inc adc adc add push mov pop cmp inc lock jb inc xor inc scas ss pop insl stos arpl and push and adc pop jb (bad) sbb (bad) jge mov jle add iret pop mov and push mov mov insl rcrb sbb mov shlb cmp xchg jl sbb loopne out sbb mov mov push xchg mov imul inc cmp mov lret add jbe sbb push xchg mov (bad) jb cmp add sbb sbb xor in lea cs xor insb pusha adc push xor push repnz xor leave lock mov mov cmp movsl rcr fs push xlat push mov es test xchg mov or (bad) or pop or les inc nop mov cli test arpl sub pop add rcrl mov stos mov or in xor aam fadds pop xor sbb pop dec push das (bad) ficompl or call inc notw or shrl ljmp sbb jmp rcr aam mov or jne (bad) dec lock inc ja out ja out (bad) jb cmp ja pop cmp dec adc dec dec jb outsl ss outsl sub outsb mov add outsb sbb mov adc add dec xor imul jbe out adc or ss jl insb push inc inc mov in sub jecxz test jl cmc and lret inc out adc adc adc mov sbb lock or mov cmp mov loopne (bad) push mov fisttp push add js mov je cmp inc cmp adc xor lock and inc andl pop dec jbe add sub pop jmp sub fwait js out cmpsl mov pop adc cli adc fisubr adc roll ret xchg and rcrb pop add pop (bad) push dec lea aam jo shrb cld mov or push add mov cli inc ja jnp xchg jo test outsl or inc inc cmpb push mov fcomps ja sbb in lcall js adc mov cmp pop mov movsl jmp inc jns call push jns add dec (bad) push cmp hlt or xlat adcl pop push (bad) dec pop dec stos add ret idivl push mov ucomiss cmpsb insb popf push and xchg dec (bad) test cs sub (bad) (bad) fisubr int adc je pop test cld jne nopl aam jnp movsb add call push mov or add mov cmp adc sub push jno rclb jnp pop mov fwait mov mov test add and ja add mov pop jge mov inc repnz dec bound push push lea dec fadds stos (bad) (bad) je sub mov out clc dec inc repnz inc inc mov cld in xor pop push cli mov out les push mov sti into pop and sbb cmp xor and or subl jno mov sbb pop fimull aas jecxz lods je add mov mov sbb add jecxz inc out pop adc xchg add lods mov and pop mov enter leave lret fcmovnu mov jb jp push push aaa in int jmp dec mov hlt cmpsb adc sbb pop ss nop or jo xor add mov push pop push xchg or aam mov ja leave lods push jl dec mov jle cmp or push jae wrmsr jne mov inc pop std push in mov rolb cs xor lods add cmp or adc (bad) lcall orb pminsw (bad) xlat (bad) ja adc insb inc int pop adc xor add pop adc pop mov add sub pop add mov add add add mov cmp or leave and or add inc mov xor test popa jmp push sub sub sbb and sub xchg adcb dec xor or imul lret jb sub ret dec adc je xchg imul icebp sahf inc mov sbb test xor rcll cmpb mov jmp test inc mov push lds test jne movsl clc inc mov ja insl or sbb sti testb pusha addl and clc loopne push mov adc out ljmp pop add ja sub push sbb pop fcompl imul das enter push lods test xorb loop in call dec sti cmp push adcb insb pop mov mov push mov rcrb outsl add mov ficom cmp inc or loope clc lea mov fisttp loopne test scas inc mov scas add or push je push jle lahf adc nop imul xchg out or les lods call loopne popf in test rcrl jmp sub and push jmp xor add and (bad) push hlt dec pusha stc sub stos insl mov adc cld mov aaa sbb and clc test add je add mov adc je dec or pop (bad) mov pop add sbb push aam mov jge jno sub jb test sub cld sahf cmp inc add iret jl or xchg and xor push sbb adc push adc xor inc mov out movsl push and sub mov and and mov in add and push es adc (bad) or lea fdivrl jne cmp dec mov mov je dec cmp mov cli sbb leave and rorl push insl je and lods (bad) cmp adc add insb fisubl jmp adc xchg movl mov daa pop sbb xor xchg (bad) xchg or cmp je imul push adc bound mov jmp and cmp mov sub jmp out mov mov mov mov xchg es mov je jg (bad) fistpl push cmp ja add cmp or (bad) int sbb jne xor dec fwait mov in in call nop add in sbb out or (bad) pop mov in je or pop ja lock in aad mov int3 add add push pop orb dec mov cmp adc dec xor pop cmp pop pop add aaa sbb add lahf ret mov add jp mov jns hlt jmp add jmp negb dec (bad) hlt adc xor notb lock push cmp push and call push add hlt add insb insb xorl push je xor sbb cmp shl or fidivr test rolb push adc sbb subb lea mov fcmovne (bad) jge and or push pop pop aam stos mov xchg push sbb cmp jns idivl jns inc jae ss notb xchg lock mov je inc cmp jl sub mov (bad) arpl adc xor push sti movsl pop or and add pop jl pop dec or (bad) jno ret pop xchg xchg outsb movsb add cmc testb mov insl idivl inc imul pop mov mov lcall stc rolb add in lea inc mov push push cmp and cs jmp movsl add in or xor fistpl mov push pop mov (bad) mov lahf xchg xchg fs lcall loope and pop cmp inc sbb mov pop pop mov in in pop sbb mov rcrl jecxz arpl add xchg inc sbb jle fisttpl iret and mov jne or mov mov xchg dec inc cmp pop test sub push sbb scas (bad) flds sub je out push aaa mov imul add and aaa das daa xchg xchg loopne xor push mov adc push (bad) jae adc mov popa ds xor je cmpsb or add js xchg mov push or jb and out add dec sbb add imul sub out pusha pop ds cld xor pop inc inc pop enter inc test or int3 lret inc fwait loopne sbb enter or push cs mov mov js xchg or add mov add imul mov int or sub fcomp scas data16 pop add cmp jns insb inc (bad) sub xor and or cwtl add jge cwtl mov sbb fisubl inc adc ds pop decb (bad) push mov lock mov jns mov ret dec pop push insb push dec cwtl push int inc iret mov pop movaps pop pushf mov or adc aam jg pop adc mov add sbb add cmp lcall xor cwtl pop or sub add (bad) hlt push add add out sbb lods mov clc lcall jge das cmp test rcrl jbe (bad) jo notb je push mov adcl test pop ljmp in xor clc or loopne loopne inc cs push mov push push popf add fisttpl mov orb les bound (bad) or mov dec inc pop mov adc fisubl lock push mov lock outsb dec (bad) fisub iret mov jbe test lar push jno lods enter xor mov in add push aam adc int3 xchg int sbb xchg in dec in add mov mov pop lock add out test inc into cltd sub je and and repz pop fwait in sbb mov inc cld mov pop inc jae inc mov add loope mov xchg mov fwait pop add in mov sbb fcompl incb adc addr16 mov push xchg xchg inc and add pushf out pop mov or or testb sub in mov push dec adc cmp outsb jmp mov mov sbb int3 pop mov jle lods mov push call sbb inc pop divl ds or jmp addl bound adc inc push lret inc loop push and stc or ret inc daa mov int3 jmp and and inc mov pushl shlb xlat dec adc pop dec or push ljmp jnp or xchg cmp aad inc adc jae pop add push mov or call movl test mov mov je scas push imul inc sbb data16 and xor (bad) push sub loopne movsl add mov xchg mov and or iret out pop mov (bad) cli lea rep in or inc xchg or or xor mov (bad) mov enter stos mov clc loope sbb fsubr or mov sbb out pop or nop dec xchg int add in mov and cmp adc adc add cmp arpl daa adc xor push pop dec sarb pop rclb imul fwait cmpsb imul dec xlat sub sub sbb (bad) out mov dec les mov lcall ret scas imul lcall add cmp cmpsb imul imul sub (bad) push ret pop push dec (bad) xor xchg mov loop lcall sub cmpsb imul imul mov add adc mov or adc xor xor add sbb pop inc fild adc pextrw repz in outsl leave in dec pop dec pop sbb or pop cltd jb dec daa pop dec repnz ja in cmpps dec daa sbb mov in push jl test (bad) push out xchg push mov mov pop sbb mov cs or push (bad) or xchg xchg sbb push (bad) pop dec pop and mov sarl sbb pop add iret rcr sbb add pop push add add imul add and cmp pop cmp aaa xor push push pop mov cmpsl pusha push fild add jo js pop adc cmp sbb push outsl add insb mulb add subl jne insb or addr16 or inc dec dec inc inc dec pop dec inc inc jle incl pop push inc dec inc inc push inc inc add dec push push inc push push cmp ret outsb je insl and jb jb mov pop jb xchg push inc push push adc xchg decl add dec inc (bad) dec dec inc adc xor cmp sub insb and outsl and imul js jle fldenv aaa daa aaa outsb outsl je add out mov jne push arpl data16 outsl ja cmp mov outsl outsb aaa ss and je xor neg pop sti jbe jb jne xor or inc mov xor sub js das pop push fsub out mov pop xor imull gs xor pusha fucomi jae pcmpgtb arpl cmp and gs and inc push and insl xchg outsl fldt mov arpl insb test pop xor mov pop imul add push fcomp mov inc addr16 insl and ss xor dec adc sbb xor sub jb jne jae insl mov shrw (bad) outsl pushf mov mov je adc dec ret fildl sub push imul inc sub and dec imul ja inc push and push fsubs pushf aam ret add loopne sub insb ja ds fdivr into cmp xchg add je popa ds popf mov gs mov xorps xor addr16 outsl js in mov xor cs cmp mov fwait add dec and jns xor fs push decl jnp flds inc inc lret bound imul cmp or outsl or jo cwtl fmuls xchg dec data16 fcompl pop outsb gs iret imul arpl gs jne jnp inc cmovp or push mov dec inc inc aaa jns movsl inc jnp aas cmp and sbb or jae imul or jne icebp sbb dec add test pop inc cmp das daa jae mov or sbb jae negb nop into cmp pushf xchg sahf movsl lods mov lods test jae enter dec mov cs add test adc xor or lahf cmp pop xor fiaddl xor adc xor push jmp sbb daa lahf shlb lea int push lods add push sbb fidivrl sbbl inc add (bad) inc cs inc js addl mov and add shl popf enter outsl jbe inc ss adc mov mov mov mov pop enter orb inc imulb mov mov or aaa call xor pop out cmp (bad) mov jnp fwait jl pusha pop pop push sti lret add mov daa pop leave pop pop test mov addr16 add mov inc stos scas mov in mov sbb add and lods mov fsts shlb sarl inc add mov cmp dec cmp daa call cmpl and in xor lret daa pop pop pop rolb and repnz daa or repnz stos test (bad) add adcb xchg xchg mov rolb in rclb add inc push dec jle,pn push repnz dec dec add outsl leave (bad) pop mov pushf lea daa adc push push or mov ret jmp jb gs add aam pusha and aaa sub imul inc inc add xchg gs mov mov insb fstps les dec (bad) xor mov insb xor (bad) xor push inc cmp imul cmpsb imul fistp imul jb jae sbb jp insl inc adc (bad) mov imul imul stos loopne jbe push push (bad) fucomip mov jns outsl outsl imul jae arpl rcll gs or jbe outsl push pop jae outsl jb cmp pop insb fnstenv insb insb jns repnz jae or lahf outsl ss in pop sahf js xor sub or and and xchg gs or jmp test fidivl gs call pop gs inc jne jb or jae pop outsb xchg adc and jbe add xor push xor xor pop mov add dec add pop pop and add (bad) fild daa out dec cld xor je nop xchg mov scas mov (bad) ljmp lods stos stos mov push mov push fwait push push dec aas in aas fdivs insb inc jae cmpsb add pop roll mov inc (bad) ja in dec pop test pop (bad) xor sbb imul hlt sub lock cmp pop hlt enter aas sahf xchg stos nop mov fistl dec fstl jge dec out neg imulb dec inc or add add push add jl mov dec or xchg and dec sub pop inc enter add fnstenv mov dec subl stc push mov nop out inc pop lods sti cmpsl test mov sbb and dec fnstenv mov adc cld pop daa or xchg mov push jb fsts and pop mov add mov pop adc inc fwait xchg xchg lahf jnp in or leave in jg out lret mov mov insb mov mov inc repnz cmp mov out fisttpll or (bad) in pop or insb mov pop jae mov insb int3 adc fsub jns lret (bad) pusha dec fimul inc jnp mov inc push lcall mov insb inc pop push pop sub fidivrl sub mov ja jno mov call add leave mov leave cmp xor push jb ja insb jo jecxz adc push pusha adc mov pop mov outsl xchg dec (bad) sbb cmp mov fisttpl movsb sub mov dec repz lods cmp call insb (bad) mov outsl test or xor lods jae cwtl push mov pop mov mov jmp outsl cmpsb fdivl and push out sbb outsb imul test js sub mov jnp jg fnsave xor lret sub inc sub lret cmp jae dec addr16 cwtl mov dec mov sbb cmp sahf push push sahf imul push dec xchg out pop inc mov shrb and push int3 ret pop rorl add push fldz in insl cwtl (bad) pop or jns mov arpl insb cmp shr or daa call mov mov and push test jae or lods mov lret nop orb xlat ss mov fidivl movsb das adc mov push in mov xchg mov xchg imul and xchg mov xchg mov xchg mov jo icebp and cwtl ss pop xlat push jl xor aas inc lods loope in test lret cmc cld maskmovq divl aas sbb mov mov mov inc sti pushl outsl inc or mov lret sub popf cmp sbb clc arpl mov stos dec inc push mov jbe sbb dec sbb test int xchg push out fadds int push rorb dec cltd lcall sahf ss xor (bad) add nop and flds jecxz xchg test (bad) out dec (bad) push add enter repz int3 repz pop iret (bad) mov adc push push mov lcall fstl fwait inc add cmp mov movsb sbb data16 gs jo lds push out insb ffree popf xchg adcl xor or pop sub or xchg xor insl pop jb cmpsb xor xor aas lret and mov daa pusha loopne pop add or push mov sub xchg mov add mov push xor call cmp lods adc dec push fcomp inc loop (bad) pop lea mov movsb adc add insl enter dec test sub cmc mov sbb jbe mov dec xchg dec push test stc sbbb ret imul xor jg (bad) or rorl adc lock or sub or cmp xchg dec gs jnp inc jo mov push mov xor inc nop enter (bad) enter pushf adc hlt adc adc add jmp jnp (bad) ficom push das push test es std mov and cmp mov sti mov push lret sub in je popa adc jo popa sbbl hlt jle mov mov lret jns fldcw mov bound mov outsb in andb hlt xor or push push mov mov invlpg xor mov dec pop jg cwtl and in enter bound cmp and push in pop pop xor add cltd pushf pop popa jo ljmp in push push insl add je imul imul dec (bad) jne xchg pop test pushf je imul pop imull jns jnp push scas mov push andb push gs xor dec std in dec lahf mov xchg mov mov mov dec fwait xchg mov sti mov mov mov ret xchg das jne mov lea fstl pushf mov and fisttpll mov outsl dec xchg mov mov mov insb xchg jne inc mov adc cmp or pop mov xor add adc cwtl ja outsb fistpll xchg mov nop fwait lods je scas stos std outsl (bad) mov lods xchg xchg mov sahf mov into sti btc push jle or dec mov xor outsl jo mov lcall out fsts addr16 sub jg dec adc dec addr16 xchg mov addr16 push add mov fwait sbb pop nop lods (bad) dec add outsb loopne addr16 lock add add cmp cmp lods loope mov je add mov mov imul mov xchg sbb jne sbb mov lods sbb int repnz add pusha jge dec int inc push pop (bad) mov (bad) js js js js js js js jge jge jge jge jnp jnp jnp jnp jnp (bad) (bad) (bad) (bad) jnp jnp jnp jl jl jl jl jl jl jl jl jno jno jno jno jb (bad) (bad) (bad) pushl jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb clc sub stc jb jg jg pop nop adc das data16 push sti or add push pop mov int mov pop stos mov dec rcrl popa outsb movsl bound sub (bad) fisttp push and fs mov in sbb repz add jl repnz pushf xchg out push jnp js clc jbe icebp sbb fildl xor out fwait test jns lock push imul roll mov xchg imul add add iret mov jbe ret jnp in and add pop mulb add sbb push ss sub pop push add inc rcrb dec push shll movsb cs pop lock nop sbb push imul add pusha jb,pn sbb add and jbe repnz cs lods rcll rolb adc mov data16 jne or push test jno sub jnp sbb jno add mov mov cmc dec call or and or add jb data16 xor test lret or mov add pop inc rcr js push cmp scas fisttpl push push call add out mov call jnp or push push dec sbb jecxz pop int cltd int lcall push push xchg loop xlat and call subb pop push ficom jmp push dec call out cmp pop and add outsl sbb push mov mov mov lcall push loop data16 out add jb es mov fcompl dec cmp sub out push adc scas imul popa adc adc push dec idivl sbb sbb xor xor frstor xor sub jbe cmp cmp cmp in ds add inc push inc pop inc inc rolb je insl ja mov lret rolb pop push cmp push or inc fwait mov dec inc inc aaa mov add push loop test xor push push call mov push scas push inc or sub aaa sbb cmp jne mov mov icebp push call fcomps mov push pop gs mov mov call pop in fmul imulb and pop jno push cmpsl cmp add sbb jne mov jle inc mov mov (bad) jne push sbb test push push call or in xor and xchg call push add shrb es xor loop dec pop and mov idivl cmp push add jnp,pn sbb push sbb into call xor inc mov mov jae inc push div pop cwtl daa or add pushf and (bad) pushf test lods push lock cmpl and popf or xchg pop subb mov cli test dec das push bound xor mov jl insb inc cwtl lods sbb pop dec or add mov xor push push outsb rclb pop ja cmp decb mov add xchg xchg and mov add adc int stos cmc mov adc inc sbb sbb (bad) mov ficom (bad) aaa mov mov adc mov sahf sbb jge pop inc add das (bad) ja (bad) pop or adc icebp cmp adc cli mov and lods and repnz add or sub adc js adc or ret or cmc mov push arpl ss mov or mov je add daa mov (bad) lret pop add pushf in or or mov je cmpb push dec dec test ja sub inc lea push cltd in jle sub (bad) ja pop rol xchg and and das mov push push xchg sub mov mov push xor jmp fs pushf xor sarl mov pusha cwtl mov push mov test call xchg push xorb push dec call jo jo or sub test fisub add or scas jecxz (bad) or (bad) push mov cmp add dec insl dec loopne mov loopne in cmpsl clc icebp mov dec fdivl pop jo pusha adc (bad) scas insl mov push rcrb inc inc jne (bad) and push bound ret and je js xchg xchg xchg xchg addb nop xchg cwtl pushf imul fcmovbe sub cmpsb out add adc jmp ss cs and bound jbe cmpsb imul imul push mov add xor add cmpsb push in fsts pop jae xchg xor dec mov adc inc das (bad) and xor jbe adc jo inc jnp cld add incl or add je outsb fs inc and outsl lea mov cld adc push add add ljmp add jo sbb cmp ficoml subb sub add fisttpl sbb std pop cmp inc insb outsl jae dec popa insb push xchg inc insb adc mov mov sub leave popa outsb or insl add fistpll outsb dec inc push dec inc dec in cmp sbb mov (bad) jge sbb sahf add mov inc inc imul add pop popa mov out xor imul jnp xlat pop cltd mov add fistpl add outsb jbe lods sub shll push pop sub addr16 sbb insl stc mov pop mov or push (bad) stc popf adc push (bad) imul (bad) arpl fwait movq data16 or xor das xor jnp jns adc insb data16 sbb push xor add rorb fldenv push jo jge jo test and jne and (bad) sub xchg sbb (bad) adc test outsb xchg bound add add xchg xor ja push repz push xor mov sub mov push add lods mov pop xchg arpl insl jo push adc jnp (bad) movd inc mov jle rcll cs pcmpgtw imul or push pop xor sbbl push add xor movsb imul jb je sbb push je je test loop popa jae cmp adc push fnstcw or push push push inc insb and lcall fldenv loopne mov and mov add icebp sbb cltd add add nop dec cmpsb sub push nop mov dec add test inc push fs addl adc inc adc stos add cs sbb add push xor or pop add (bad) xor roll ss or or out mov cmp sarb mov add push sbb or and nop inc inc push xor insb mov push push pop push pop pop jnp jmp insl out and testl orl andl xor test or enter cmpsl mov xor pusha lahf into pop xlat or cmp xchg pop add lcall or sbb add nop nop xchg xchg sbb js inc (bad) push add or (bad) fdivl (bad) lret aam inc test xor roll or adc adc mov fcomps lods sbb sub cmpsb imul sbb xor (bad) mov movsb jns dec (bad) xor jp cld cmp inc dec into ss add and popa inc lock icebp or dec pop mov or jl and and pop add push sub add movsb push dec pop add add add inc jl inc add cli rclb movsb pusha (bad) jns outsb notl pop mov cld das push icebp out inc jle cld test mov in adc das out push sbb inc mov iret mov inc (bad) sbb in call (bad) push add add pop ficompl fisubrl xor fcomp loopne loop dec outsb cmp jle and pop and add mov dec mov test cwtl mov das insb push shll pop push push dec (bad) xor dec dec inc inc cmp aaa dec (bad) xor and adc cmpsb pop ss or hlt mov loopne cmpsb imul push and and in sub add das inc icebp in arpl mov outsb test or mov insb xchg lods xchg ss push lahf movhps xor pop js xchg dec (bad) xor aam adc xor pop mov dec insl add cmp pop dec (bad) xor ja mov repnz cmpsb imul or aas inc push pop inc inc pop jge std or imul sub aaa pusha or dec addr16 and xor (bad) jg jne pop outsl pop jb outsb addr16 and stos pop outsw sbb add add mov mov lret sbb add adc jne aam sub dec push add pop add sub pop and inc je bound adc inc adc dec popa insl lods sbb and mov dec or pushf add je das cwtl stos loopne test push popl pop add movsl add push push or pop fiaddl data16 (bad) popa inc inc xor push dec bound jae xor ja lock add sbb fs (bad) ficomp dec nop insb jne push fnsaves push je xor dec mov dec inc push or pop jb push fild (bad) push je push outsb insb insl ret pcmpgtb (bad) fildll leave or jge dec outsb lahf jbe daa sub dec aas push insb jae push popa mov sbb mov imul orb dec lods (bad) fsts inc dec loop add xchg fs data16 add jo inc les xchg pop clc decl push ret sbb or or jo or push or dec jne popa inc aad or sbb mov push lea push insl push jbe inc adc fcomi xchg sub fs out push outsl dec xchg int3 fldl hlt inc jns jb adc pop aas inc dec xchg fwait inc adc mov mov int3 cmpb in xor add xor sbb pop push xor ret pusha pop inc enter jne jo inc jns (bad) dec inc push popa insb or add sarl es mov jns or push int inc mov mov inc mov push aaa xchg fisubr mov adc xchg jecxz mov or push jns xchg lret push outsb cmp fldt movsl mov cmp ret mov dec fildll gs int mov and cs cmpl xchg gs lahf push add adc sub inc push inc xchg adc insl sub or add and jb cltd mov adc add or add mov test cmpsb lahf mov mov sti push and movsb lea pop loopne push mov xor add add add add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 