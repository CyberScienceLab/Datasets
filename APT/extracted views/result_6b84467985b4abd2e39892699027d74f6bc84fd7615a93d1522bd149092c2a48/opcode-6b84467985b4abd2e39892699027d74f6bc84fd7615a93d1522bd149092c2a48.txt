push mov sub cmpl jne call test jne push call mov push mov push call mov cmpl jne mov shr and test jne mov push push lea push call add lea mov mov push push lea push call add push push lea push push call push call mov mov pop ret push mov sub push push push movb mov xor lea rep stos stos push lea push push call cmpl je cmpl jne cmpl jne mov jmp movl mov mov movb mov xor lea rep stos stos movl mov mov mov mov mov mov mov movl sub mov lea mov rep call add mov pop pop pop mov pop ret push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp push call jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push lea push call push lea push call lea push call mov cmpl jne lea push push lea push call add push push lea push push call xor cmpl setne mov pop ret int3 int3 int3 int3 int3 int3 push mov push push push push push push push mov push call mov mov mov cmpl jne xor jmp movl push mov mov push call mov mov push push push push push mov mov push call mov mov mov cmpl jne jmp push mov push mov push call add push push push push mov mov push call mov mov mov cmpl jne jmp movl xor test jne cmpl jne mov mov push call mov mov push call mov mov pop ret push mov mov cmpl je mov mov push call mov movl mov cmpl je mov cmpl je mov mov push call mov movl mov cmpl je mov cmpl je mov mov push call mov movl mov movl mov pop ret push mov sub mov push call cmpl jne xor jmp push push push push push push mov push call mov cmpl jne xor jmp movl push lea push mov push mov push mov push call mov push call mov mov pop ret push mov sub mov mov movl jmp mov add mov mov cmp jge mov add xor mov mov add xor mov cmp je xor jmp jmp mov mov pop ret push mov push mov cmp jle or jmp movl jmp mov add mov mov sub cmp jg mov push mov push mov add push call add cmp jne mov add jmp jmp or mov pop ret push mov push mov push call mov cmpl jne xor jmp mov and cmp jne xor jmp mov mov pop ret int3 push mov sub mov mov mov mov add mov push push mov mov push mov mov push call mov cmpl jne push push mov mov push push call mov cmpl jne xor jmp push push call push call mov mov mov mov mov movl mov movl mov movl push push mov mov push mov push call push push mov mov push mov push call mov mov mov mov add push mov push mov push call add mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov sub mov cmpl je mov push mov push call add mov push call add test jne jmp mov push call add mov mov cmpl je mov mov mov add mov cmpl jne jmp push push mov push call mov cmpl jne jmp mov movl mov jmp mov push call add xor jmp jmp jmp jmp mov pop ret push mov sub mov mov mov mov mov mov mov xor mov lea mov movl jmp mov add mov mov add mov mov mov xor mov cmp jge mov cmpl jne mov mov mov cmpl jle push push mov push mov mov add push call mov mov mov mov mov push push mov push call add jmp push push mov mov push mov mov add push call mov mov mov push mov mov add push mov push call add mov mov mov jmp mov pop ret push mov sub mov mov mov mov xor mov lea mov movl jmp mov add mov mov add mov mov mov xor mov cmp jge mov mov and neg sbb neg mov mov mov and neg sbb neg mov mov mov and neg sbb neg mov mov mov and test je push mov mov push mov mov push call jmp mov shl mov lea mov mov mov mov mov and test je mov or mov mov mov mov cmpl jne mov mov and test je mov mov mov mov jmp mov mov and test je mov mov mov mov cmpl jbe lea push mov push mov mov push mov mov push call jmp mov pop ret push mov sub mov mov mov mov mov add mov mov cmpl jbe mov mov add mov mov cmpl jbe mov mov add mov mov add mov movl jmp mov add mov mov add mov mov mov sub shr cmp jae mov xor mov sar mov mov xor mov and mov mov mov cmpl je jmp mov add mov mov mov add mov mov jmp mov mov add mov jmp mov pop ret push mov sub movl mov mov mov mov mov add mov mov cmpl jbe mov mov add mov jmp mov add mov push mov push call test jne mov cmpl je mov mov add push call mov cmpl jne movl jmp mov mov lea push mov mov push call add mov mov mov cmpl jne movl jmp mov mov mov mov mov mov mov mov add mov mov mov cmpl je mov mov add mov mov mov add mov jmp mov mov add mov mov mov add mov jmp mov add mov mov add mov mov cmpl je mov mov and test je mov mov and push mov push call mov mov jmp mov mov add mov mov add push mov push call mov mov mov cmpl jne movl jmp jmp cmpl jne jmp jmp mov mov pop ret push mov sub mov mov mov movl mov mov add mov mov cmpl jne xor jmp mov mov add mov mov cmpl je mov cmpl jne xor jmp mov mov add mov mov mov add mov movl jmp mov add mov mov add mov mov add mov mov mov cmp jae mov mov add push mov push call add test jne mov xor mov mov jmp jmp cmpl jne xor jmp mov mov cmp jbe xor jmp mov mov mov lea mov mov add mov pop ret push mov sub mov mov cmpl je mov cmpl je mov mov mov mov add mov push push mov mov push call mov movl mov cmpl je movl jmp mov add mov mov mov cmp jge mov mov mov cmpl je mov mov mov mov push call jmp mov mov push call add mov cmpl je push push mov mov push call mov push push call push call mov pop ret int3 int3 push mov sub push cmpl je cmpl je jmp movb mov xor lea rep stos stos movb mov xor lea rep stos stos push lea push mov push call lea push lea push call add test jne jmp mov mov mov mov add mov mov xor mov mov lea mov movb movb movb movb movb movb push lea push mov mov push mov push call add mov movl movl mov add mov mov mov mov mov push call add mov mov mov mov push push mov push call add mov push mov add push mov push call add lea push call add mov mov mov mov push call add mov mov mov mov push push mov push call add movl jmp mov add mov mov cmp jae mov add xor mov xor mov mov and and shl mov and sar add mov add mov jmp mov sub push mov add push lea push mov push call add test jne mov mov mov add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov cmpl je mov mov mov push call add pop mov pop ret push mov sub push push call movb mov xor lea rep stos stos push push lea push call add push lea push mov push call mov mov mov mov cmpl je cmpl jbe mov push call add mov cmpl je push mov push call add mov cmpl jne xor jmp sub mov lea mov rep call mov cmpl je cmpl jne push mov push call add mov cmpl je push call mov mov jmp xor pop pop mov pop ret int3 jmp jmp jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop xchg sub add add add cmp add jne add scas xor adc xor adc add daa das add popa das add fwait das add and add sub inc and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea in add fidivl add dec xor adc adc aaa add pop cmp adc add xchg add aad add dec xor adc add lds add jle add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov roll adc inc add or mov add sub adc add out add push dec add mov adc nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop jmp add inc imul add mov add jbe push sbb push push cmp es and std jae mov (bad) mov clc lods mov (bad) add cli repz cmp pop rorb test call add sub mov test mov adc insb cmpsb mov scas jno pop fcoml pop cli in (bad) test push push aad mov cmp dec rolb int3 scas sbb int3 les inc inc sarl or pushf inc sub rorb sbb les outsb sbb aam lcall shrb ficoml dec mov (bad) loopne (bad) fnstcw hlt mov dec sub movsl (bad) iret mov and aas daa fadd rorb imul sub sahf pop xchg icebp inc fimull ffree dec cld or inc lret lret lods hlt sbb jge scas dec or inc lret lret lods cld inc shlb sub clc push push jle inc add daa mov subl addr16 dec push lret mov addr16 (bad) in test jbe or mov andl mov cmp stos fidivrl dec movups repnz add test faddl dec shr push pushf mov sub fidivrl dec dec hlt mov (bad) dec sub and inc and jbe inc lret mov loopne (bad) lahf jp and xchg lods push or pop imul js (bad) ja in fimul imul cld aaa ds into pop pop fbld es negb in sub cmp addr16 push mov push pop pmulhuw mov cmp inc or xchg mov ficoml fwait orb cld jmp cmc lods aam stos cmpsb lcall mov cltd (bad) inc mov cmp int3 push push clc lock repnz xchg dec lods sbb xchg xchg adc fisttp insl ds sbb sbb push or (bad) dec dec push lret in inc dec fidivr add mov jmp pop xor mov lcall push pop mov dec mov lret sub dec dec sbb and xchg or out repz cmp push sub push dec dec cwtl jp sub fisub pop adc or jge lods icebp jl pushf mov jo xor xor ja lods sbb or insl into xorl rorb daa into fnsave in in loopne out cmp dec roll imul sbb xor out lea aaa lds ds pop popf out imul pushf add sub loope dec lock xchg mov int mov sti mov stc loop lock mov pop enter pop test jbe cld push dec push xchg (bad) sbb lahf fisub add fsubrs sbb in popa mov mov mov push and sub ret es pop ret incb sub imul and jno push fdivr dec dec add jg hlt ret push adc lods testl mov sub insb aad cld or dec insb inc test dec and sub out mov test dec xor jnp lcall push repnz mov in dec ss (bad) pop out inc fmul fimul jg aam scas pop inc lret mov (bad) hlt pop fwait call movsb xchg out jg ljmp ret dec (bad) mov (bad) loopne subb lds (bad) push push clc js inc xor adc add repz fadds jae adc movsl out bound into fnstsw mov vmovaps or (bad) pop insb mov icebp iret sub popa in mov mov in mov iret add jnp sub test fucomip rcrb dec leave lds les and cwtl add dec push call sbb xorb dec push sahf loope mov int sti (bad) jle movsb ds jo outsb enter lock repnz and xchg stc test (bad) mov pop in or cmc fs fiaddl scas lods jnp mov lret mov repz arpl cmp inc incb movsl xchg cmc xchg out fnstcw jmp in jg cmpsb popf aad push aad outsl in xor leave outsl in outsb mov dec cmp das mov push fildl repz add out push nop out jns (bad) mov adc add mov addb imul imul push data16 dec lret mov adcb sub jbe add or mov mov das out adc cs jne push data16 pop lock dec fwait sbb dec adc pusha gs mov lods jbe lcall adc imulb stos cld push insl sub pop test add or lret cmp jle popa ja int jbe int pop icebp push add xchg mov jnp (bad) dec ret jp mov push iret mov stos lea or mov into out jo xchg fabs or repnz fldt clc std stos pusha xor or adc mov fstp sbb mov ffree pop into xlat xchg and into ja loop cmp stos ds aam movsb push dec repnz imul sbb into xchg pushf cwtl popf (bad) jp pusha out mov fcomps sub inc lret fdivr (bad) int pop mov insl mov pop flds push and jge xchg shrb decb or mov adc (bad) mov stos and dec repz push inc out addl les (bad) aas xchg in add lret sub test dec into xor iret mov pop out jne mov outsb in ljmp pop cmp and (bad) loop mov mov pop xchg xchg sbb mov add repnz inc sub gs ja cmc shll sbb cltd nop icebp xchg out scas xchg inc xor and jo aad mov pusha hlt dec pop pusha lock xor js push and hlt add lret addr16 cmpb sbb shrl adc addr16 inc (bad) xor mov int ja fisubr cmp out (bad) icebp lods cmpsb sbb sub adc xchg sub (bad) cmp jnp add cmp inc add loop leave or lcall inc and or mov pushf ljmp pop int3 daa push xor out aaa jmp iret cmp mov fisttpl jo add sbb pop loop xchg lods pop jae ss movb loopne clc popa add mov push pop xor pop jg pop push out push testl mov ja fistp fs xchg inc mov sbb jp xchg jg mov inc mov mov jl (bad) mov push mov dec inc push sbb jge mov iret stos cmpsb aas inc fdivl nop cli mov push or dec or mov dec mov movsb (bad) test sub mov fdivl test adc rcrb ja dec or ss jg add aam and hlt pop imul pop jg mov movsl mov ja xor sub xor push and push cmc fmul test lds and les fwait xchg xchg das in lds not or imul adc pop dec jb mov les fwait xor popf sub pusha sub jp psllw sbb xlat ret pop mov repnz fs dec stos jo dec mov ret (bad) das jge loopne add xchg push fidiv pop lahf out xor lods push pushf ljmp sub xor xchg ficom cwtl mov jnp mov cli dec jge pop repz cmp xchg pushf mov xor out enter and xor movsb mov bound cltd dec dec mov (bad) jne jbe mov test (bad) (bad) inc mov std adc jmp nop xchg nop xchg cmpsb pop in mov pushf insb lds cmp jp mov mov or mov cltd test inc outsl and cmp xchg mov outsl cmp mov cmpsl sbb movsb mov icebp mov mov push test sbb push or mov addr16 push imul lds fdivs jmp inc gs add jbe xchg jg popa jmp jns pop jmp ljmp pushf cmpsl scas push or in pop push jle xor leave test sub mov mov in loopne ficomp xor jns fldt insl mov imul fisubr (bad) jl out add inc mov add nop xchg daa push shrb mov mov (bad) inc rclb int sub mov add (bad) pop sbb dec xorl mov add push sahf daa divl sbb mov push push fbstp sahf imul (bad) xchg pushf call lret ljmp add int3 mov xchg ljmp insb scas pushf xchg mov jmp and jae inc pop mov sar insl jb jp enter sbb loope mov and pop mov mov xor dec mov mov into pop enter (bad) mov mov out cld and daa sub jne (bad) enter scas xor push push push je xchg lcall pop cwtl dec add xchg lret adc iret enter jno,pt cmp insb loope push into sbb push cmp push xchg daa cmp or jp test aaa pushf dec lods ljmp jge jg sub mov ljmp mov dec frstor pop hlt pop (bad) mov repz mov outsb ret pop jns jp aad or mulb xchg inc les mov jl lock mov js iret popf inc mov jo insb push inc lret and jns (bad) lock popa sbb nop cld dec hlt (bad) (bad) lea mov out popf xor dec movsb and out (bad) out push mov push fsubrs adc cmp into cmp aad mov fmull or jecxz aad lds xorb mov dec mov push movsb aam push pop out cmp test adc or dec fistpll repz hlt mov or jmp sub sub insl inc and or out pop outsb xor daa add push out jp sub mov test (bad) mov push pop push and loope mov mov and xchg and test stos mov fsubl icebp adc mov or test jne jmp sub and sbb jmp mov sub push jb icebp mov mov (bad) mov sbb and adc repz xchg cs push lcall lcall and push mov mov sub push push push inc sbb out push pop sub mov push adc jne pop mov sub lcall adc xchg inc push cmp dec in ljmp (bad) push inc nop push ret push lds push (bad) adc lea dec pop or das jle das ljmp test sub sub mov xchg push cld inc adc leave jae jmp (bad) movsl ret fcompl cltd dec in bound inc aas lds inc lods jle outsl fildll in or xchg int3 mov cmp sub outsb fsubrl in dec subb imul push mov (bad) mov cmp xchg mov gs inc stos push mov popa popw lret hlt gs inc or inc dec pop fbld fistpl add mov xchg sbb cmp lahf lods lahf lcall mov lret lret ret es popf inc stos and hlt xor inc xchg (bad) fsubrl mov (bad) xor cli (bad) or loopne lods mov iret dec bound sub (bad) mov xor inc pushf xchg adc sbb mov sahf lock aam mov fnsave pop call adc (bad) mov in push (bad) sbb int mov pusha fidivrl sub jle jo clc dec mov xchg int test sar into xor jmp sahf dec cmp pushf xchg pop into fimul sub sarl hlt and and movsb fnop pop (bad) dec std mov data16 push outsl jl mov aam sbb aad call lds push cmpsb xchg jnp in dec insb jne mov scas dec push fwait in cmp jmp std pop lods clc dec in inc mov jb (bad) shlb add ja stos jno xchg test out jae int3 imul mov clc mov jl adc sbb xchg jne xlat adc mov daa sahf or or icebp push mov cmp add mov cmpsb aam pop loope je mov (bad) jne and sahf jge xor test test lods insb inc or sbb ljmp sub lahf inc repz clc in or pop cwtl xchg enter or add test nop int3 cmp rcrb fidivl outsb int3 sub sbb stc scas stos ss xchg adc enter add arpl (bad) daa fidiv push push rorb testl xlat sbb mov jecxz jl (bad) mov jno dec sbb out inc mov mov xor test js add scas add lods cs push popa out mov sub inc mov ret popa sbb aad sbb mov outsb add jo sbb mov xchg sbb xchg jmp imul ss dec cmpsl outsb jbe sub imul xacquire and mov inc dec inc sbb xor sbb or and adc mov or out jb dec sbb in pop (bad) xor hlt adc orl sbb cmpsl std int3 push jno js (bad) cs int imul mov push insb mov gs ljmp (bad) int mov outsl outsl mov cs jmp add mov mov pop inc mov sub dec fmuls enter cltd mov adc mov adc fdivrs rorl push xchg into bnd or mov out dec mov imul xor inc scas xor push iret ja in mov mov je pop adc add mov mov ljmp jmp je test js ja or xor adc xor fsubr jae xor insb adcb push outsl sbb cmp jge rol lahf pop imul lock mov test shrb bound (bad) sub imul mov cli sub enter adc sti jnp sbb cmp fwait cmp xchg das adc daa mov scas cmpl xchg lret sbb jle mov fisttp cld mov mov pop mov adc aad adc dec jg xor mov andl adc xor lea cmp icebp sbb inc sub cmpl cmpsb jae iret test fwait mov test cmp cmp add outsl (bad) fcmovnu ret out jbe and rclb ljmp push lods adc dec or cmp and cltd sbb in (bad) (bad) mov clc inc xorl inc sub je dec lret test in cltd int scas xor fs gs xor or cld movsb cmp adc lret aas fidiv inc push scas sbb cmc stc add sub mov gs leavew push jb fidiv sub pop loop jl loope jg test jge or push inc inc push (bad) movsl shll sub pop sbb in aad in mov mov addr16 push insl jmp (bad) push lahf mov into mov mov inc xor aad int3 scas cmp jmp mov data16 jmp push je pop mov mov pop lcall ss jno mov cld (bad) pop clc cmp mov push fwait aad (bad) mov (bad) insl imul add pop (bad) idivl and sub dec loopne (bad) (bad) popa sub dec add pop call mov mov popa repnz mov adc push xchg loopne (bad) out (bad) and sbb pop repnz and sbb ss fldt es sahf jae pusha sti pop pop sbb xor jno cmp int3 or aam daa divl jae cltd jecxz push adcl leave xchg jnp pushf cltd gs call fs mov dec js push xchg mov xchg push lods repnz loop xor add mov shl lret mov imul bound jns cli lcall fcompl sub setl jne add dec cwtl push lret dec je scas jl sub stos dec repz and cmp rorl sarb cld rep fildl pop cmc ja xchg and mov imul mov (bad) lahf lret push enter add jns fnsave lods js pop bound (bad) cmpsl pop xchg mov push lds xlat lret xchg dec cmc test push and enter mov sbb cmp lcall xchg push dec outsl jle fsubl push scas xor mov mov inc pop int xchg sbb out rcrl imul fs adc fistpl jp mov sbb inc push push loop mov (bad) dec inc cmpsl lret pop (bad) iret stos pop push in popa pop repz cli nop (bad) mov cmpsb lods and jae je push xor aad lret mov les movsl xlat push push and rcr scas jbe mov movsb std pushf js lods pop xchg cmp es das mov pop and scas and iret mov addr16 in push add inc fcompl js jmp or push insb or in jl lods in mov (bad) int inc negl aam dec std pop in ret scas push in insb ss xchg popf adc (bad) not fs scas lret lods mov mov (bad) pop ljmp enter dec mov ja sbb notb aam stos xchg mov andl add fwait les mov sbb push test xlat shrb dec pop out inc mov xchg push cmpsl addr16 fsubs imull loopne mov dec lret fistp or jmp jmp (bad) cld xlat xchg dec int rol imul (bad) imul pop pop pop inc jl xlat sub outsb xorl jns lret pop fwait jg sub pop das hlt fadds (bad) sbb bnd pop stos shrl mov sub lcall test leave jmp dec stos in lret mov xor ljmp fs (bad) iret pop negb and scas pop dec xchg push std adc or fisttpll mov cmp inc roll cmp jmp inc mov jns xlat push push (bad) xchg or xchg imul (bad) jns inc repnz dec add and clc out inc sub push cmc enter mov and fildl dec pop cmp jb xor cmp outsb in xchg add int or popa in in push lcall sti in out mov outsb stc test (bad) xor add out xchg pop push dec cmp popf ret out pop xchg repz adc lds fmull rclb inc int pop inc in cmp inc mov dec std ja add add (bad) into jmp out cmpb popf int3 add dec scas rcll adc dec or mov jns cwtl lea popf imul pop aam data16 aad inc sbb inc mov mov pushf aad xadd inc cmp sbb pop cli popa pop es (bad) adc out xchg jp in mov rcrb out jecxz andl xchg jbe pop xchg (bad) xor cltd into push scas inc pop cmp dec iret push std (bad) out mov (bad) out (bad) data16 and push dec (bad) adcb xor xor lea pushl imul into js in sub in lret cmpsl popa pop mov cli std shr clc and int pusha lret cmp dec sarb adcb lahf sub std jo push xchg mov enter sbb cmp (bad) mov mov (bad) pcmpgtd cmpsl jo rolb cmp push or jmp (bad) lds nopl les cltd leave pop dec mov dec pushf enter popf ljmp and fnstsw jl xchg test loopne cmp mov push in (bad) out in icebp into jno pop (bad) pcmpgtb push or (bad) out push xor jg xchg pop (bad) imul sub pusha incb xchg test aas adc enter outsl imul leave and mov (bad) (bad) pop (bad) lock test mov push xor pop jmp ljmp mov imul and cltd popf lea mov pop mov lock sbb adc mov add and outsl pop ljmp xchg (bad) iret pushf bnd mov sarl xchg es mov xchg sub add pushf or lea mov decl mov xor mov sarb cmp ret and (bad) std pushf addl jmp mov fs and cmpsb xchg popf cltd dec out stos dec jecxz jnp xor xchg push sbb inc sub mov and xlat rclb and (bad) out in mov add mov out sbb test add push lods mov (bad) int cmpsb jae jmp jl sbb es push and test cmpsl test repnz aam adc mov dec test sbbl sti leave and sti or cmpsl es mov inc mov arpl das jmp lahf push dec pushf inc dec sbb imul cli test pop xchg mov cmp rcr stos ja aad rcrb mov cmp or test insb xor inc and dec lcall out lock data16 (bad) scas (bad) fwait inc push lds sbb (bad) jns fstl jg mov fidiv fwait (bad) push (bad) mov push icebp xchg insb ret into adc pop bound push (bad) lock inc cmc mov loopne jbe add setl rorl (bad) push je push ret scas cmpb push pop daa and cmp cmpsb inc xor nop vcvtpd2dqy cmp push (bad) cmp (bad) mov stc enter pop mov out icebp cmp aaa roll stc leave dec cwtd pushf enter (bad) (bad) jecxz jb inc dec sub jle and sub add loope jecxz lods movsb adc loope fcom mov jl pushf sbb int3 aas push xorb mov mov movsb jecxz ret inc push cltd stos xchg test cmp push adc add outsb lods mov jne sbb out pop ja sbb jp fadd or std cmp (bad) lds inc mov pop lds or (bad) (bad) add stos mulb icebp or jns jnp daa push stos test and mov pusha and or push lret mov jl stc loope jne sbb and (bad) incl das daa sbb vucomiss mov out cmp xor mov (bad) xor sbb cmp icebp sbb xor mov push inc in jl movsb daa pop cmpb bswap fldl mov lds mov or in fadds sub add scas push cwtl (bad) sbb es out adc scas and int3 sub movsb pop mulb dec sarl stc push cltd (bad) sub mov mov jecxz inc ljmp sar push sarb popf xchg push jnp xor les mov sbb pop scas lds sub (bad) (bad) loope mov jb in int3 fimul push lcall mov push sbb or in movsb lock mov pop jb mov xchg into (bad) pop cmpsl into jmp stos (bad) xor ret cli cmpsb add mov ret dec imul es fsubs dec push xor lcall mov insb imul fnsave adc gs (bad) pusha jge cld lods or pop sub stos inc sbb pop clc insb jle pop push test pop jmp adc push jmp jns pop out popf mov mov adc enter add je dec sub in or push pop addl stos lods divl inc inc addb (bad) adc hlt popa test loopne lahf lock dec out in xchg mov sub outsl cmpb jbe pop mov fadds pop mov jp sbb or jns or addb loop mov dec stc (bad) mov jne and sbb orl ficom push and dec jle lret cltd lods or cmp pop push jns or mov repnz pop sub push enter jns scas lcall mov in pop imul sbb clc je add pop ficomp push dec mov in (bad) jbe pop fwait sub dec in popa in mov mov nop jno lods cmp mov mov (bad) scas aad mov outsl loop xor mov sub xchg cltd popf enter repz inc mov std fisttpll out mov les test inc inc mov lds (bad) add mov xchg fdivl jne push lds out sahf fwait mov dec pop jae lock ret mov lret setg fdivs out cmp cmp pop mov xchg mov lret fcoml cmp pop mov cwtl push jecxz jmp bound in jo ficomp nop (bad) cmp mov mov push popa xor pop clc pushf lcall scas mov dec in aam lods sub dec mov sbb adc jmp pop in adc in mov xlat decl cmpsl inc dec out jnp (bad) sti jecxz dec outsb or xor stc sub imul arpl sub inc dec and mov cs xchg lret in jbe xchg lds cwtl popf mov cmp cmpsl out add (bad) scas mov mov jnp cmp lcall scas push sti adc in dec cmpb push in loope adc and scas mov push sbb loopne int3 negb add jo pop je leave adc into inc jge mov hlt stc pop (bad) aam add mov ret and jno stc call sub xchg dec scas or adc mov mov hlt sarl leave xor add sub or adc adc (bad) fabs fcoms out scas hlt inc out push lods xchg cmp imul cmp (bad) sub out (bad) xlat sbb addr16 adc out push lret jcxz sbb decl (bad) into dec cmp ds mov or cli add mov lea rclb arpl sub test jne fwait mov jg into in shll add sub loopne mov fbstp imul fidivr ljmp aad pop jle je loope inc (bad) decb xor (bad) or mov mov nop mov outsl sub rol pushf xchg mov dec stos fsts add int3 and fldenv ljmp add movsb jg adc cmc pop mov add push pop and xor or std neg outsb lods test clc sbb mov scas dec add sti jb or mov inc inc push xchg cmc out cmc dec sub jnp pushw in imulb push push les std std lds bound in ficoml jmp adc mov sub jno clc mull xchg dec or (bad) mov inc xor leave xchg mov jle jne loope xor pop cmp dec jmp cs aad pushf (bad) cmp js shl xchg sti mov dec lcall pop (bad) and sub sbb add push leave sbb out cmp mov js mov ljmp mov aaa sbb sbb push inc pushf jmp fildl or add shlb (bad) lcall popa ficompl mov and scas movl iret inc lea sub pop in or lock mov mov xor dec dec xchg xor mov stos cld faddl dec push in sub xchg sub pop dec es xor movsl push adc movhps xchg test or and or mov jno test push or out sub push or insb rclb test rcr std fnstenv adc pop ss aas mov js mov inc pop add (bad) jmp cwtl nop (bad) daa jge fs in cwtl int3 mov in pop pop je push mov and mov inc xor das dec call push orl pusha adc push add inc cmp mov gs jmp lods jmp dec out or mov cmp clc out mov mov leave push out sub push (bad) pop xchg inc mov icebp sbb push repz loope lea stc rolb sbb in data16 sbb repnz (bad) aad inc enter fld pop lea sbb fs inc popa jb mov jg xchg pop sbb sbb flds ja imul jmp jg pop sub lret xor mov mov xor mov sub mov sahf push push loope ss mov push scas jns sbb and inc lods or loopne int3 in fsubl inc add mov in popa mov sbb scas (bad) scas les pushf fsubl dec mov icebp fisub push int cmp call push add xor and xlat mov add sub call cs lods mov pop pop mov js add sahf call jp xor xchg dec dec into or sub adc dec pop jne dec pop mov repz or cmpsl pop mov insb enter push lret addr16 sbb pop and dec ret mov cmp adc push sbb xor leave aam dec lods movsb or xchg (bad) jno jp cmpsb mov les inc pop fs push movsb pusha rol out xor scas mov sbb mov mov shr mov or lods or icebp mov in push pop lods jbe pushf dec shrl insb dec fidivl push int3 dec cmpl cmp lahf mov (bad) mov mov pop test adc push jmp jg aaa in mov in jl mov or sarl fsubl rcrl sub pop loop lods into leave call jmp sub mov cmp push popf or add lret mov mov mov repz mov cmp pop pop mov bound (bad) push and ja or adc and das ficom (bad) push inc fsubs fwait out pop outsb mov mov pop and mov jns sbb xor cmp popf sub mov ret (bad) push in push cmpsl hlt scas jge xlat add (bad) shrl push sbb pop inc add xchg (bad) les cmp fcmovne fcmovnbe enter add push push dec in jmp ljmp pop fcmovb int3 popf mov or int jg jp (bad) jno pextrw xchg (bad) mov add cmpl jle pop aad pop lea sahf lock in push loope sub dec jl mov sub adc dec jno mov dec (bad) cmp pop cs lock inc mov pop test fdivr dec sub adc nop jecxz or sub mov sub ljmp fsubp sub test pop cmpsl push sti mov out movsl popf leave loop xchg mov or or roll mov or inc sahf jg pop nop xor mov add xor push dec inc cmp dec pop lea mov or insb movl es hlt or lcall daa cmp addr16 in mov push rolb test cld cmp mov add lcall dec jae fbstp jb test cmp mov rolb lea and js and jp imul orl das arpl xor mov test lahf repz jmp jge in cwtl xchg sub dec dec movsl adc in cwtl lret fwait aad hlt adc jne in outsb leave gs arpl lret rcr mov das into and and sub fdivrs dec dec push in mov clc push fidiv push lea push push (bad) icebp cmpsl loopne enter loope xchg dec dec push push mov mov repnz inc mov jmp repz outsb cmc stc fdivl add (bad) cmp lcall enter sbb mov push int3 jl,pn inc push mov addb mov adc ss mov mov cmpsl and shll movsb pop sub jo lods imul mov push jmp push cmpsb in popa aas loopne lods cmc push xchg shll mov push insb dec fstps (bad) out mov in gs adc gs xchg stos sbb ja movsb push rorb ror ljmp sbb dec and add rorb test imul aas sbb mov jg cmp dec cld adc rclb out pushf mov pop sbb mov xor inc (bad) je fs push or mov (bad) pop vpmaxsw test mull or xor dec fcmove xor and and adc push xor stos mov add (bad) test cmpsl dec xchg int3 cmp fcmovbe pushf cltd orl push js pop sub mov xchg pusha inc push or add add addb mov or hlt faddp cmp aad sbb loope jns orb lret fdivrl test icebp out gs cmp jg ss sbb cmpsl mov iret addl pop aas bound int lea sub xor outsb dec jl pop (bad) mov xchg pushf (bad) outsl test mov into pop xchg test jle inc stos (bad) leave int3 aaa cmp inc or mov mov or sbb mov mov fdivs int jle jecxz cs cli push push or leave mov into loopne inc data16 sti push sbb (bad) cmc jns (bad) dec mov pop ljmp xlat ljmp sub cmp pop (bad) mov xchg aas adc lahf stc xchg les push and aaa cmp add xchg or lods mov and iret pop adc icebp nop es pop aas ss mov test fbstp insb dec (bad) rorl pop dec pop cwtl pop jl (bad) lock test int3 cmpsb cmc insl sub pusha (bad) je pushf dec aam mov mov xor lahf fwait sub mov xchg adc lods adc mov pop mov out cmp fldcw sbb sub xor mov inc jecxz rep jecxz add pop pop daa rclb jae xchg (bad) dec int test outsl sub pop int3 xchg pop add test or jl subl jae push add cmc pop sbb ret adc lret out sbb arpl test out mov lret sbb mov xchg pop ret push out es fstpl push xchg jle mov cs imul xchg sbb mov xchg mov mov adc lcall loop fiadd lods push pop test in inc fdivrs xor pop mov sbb in popa pop sbb inc lods int pushf test mov xor dec cmpsl fadds imul rorl or mov mov mov pop arpl push mov cmp sbb add loope pop xchg jno jno outsb push jns idivl xchg lods je cld jle fadd xchg fdivl xchg cld jnp sub sub fnstenv data16 dec stos push imul (bad) fwait arpl js mov push jp sub shll lods scas mov hlt push and pop sub mov xchg mov fdivrs into xor adc add pcmpgtw movsb fsubs mov movsl mov inc notb outsb jo sahf dec xor xor orl in inc cmc js mov shrb fstpt lret adc shll test and cmp adc lahf mov test jno in push xchg clc mov sti xchg paddw mov mov push fildll jbe addr16 jl (bad) and scas push dec dec icebp push cmp mov fldl push movsl fdivrs roll dec dec dec or sbb (bad) mul test jno je loop push insb mov jno mov test sbb xchg es mov cmp push mov jo ror sti sbb inc js (bad) in mov lods inc std pop mov fnstsw fldenv out jecxz push and and aam jbe jl lret clc loope fwait stos cmc cs fs inc or inc cwtl ret adc add lahf jns pop sbb add sbb stos xor ret cwtl cmc (bad) pop fsubl mov stc mov sti xchg fisubl test ds mov cmp mov (bad) repz push js push mov sbb cmp pusha add rorl xor rorl cmpl iret jmp pop mov ljmp movsb dec mov in (bad) push inc push test xchg test pop negb xor outsl fild jnp enter xor imul ret in call xor imul and enter ljmp call test mov fidivrl jle fdivrl xchg test xchg jp dec pop lods sbb std insl fwait ja cmpsb jns jb lret lahf or lock scas js pop push pop cmp pop push mov mov xchg sub xor stos ror bound jmp fcoml xchg and mov mov xchg into jge dec sbb xchg rorb leave xor push add add xchg jmp in sub test xor mov das ljmp fs mov repnz sub mov cs movsb js ficomp adc nop repnz inc sub xor enter int3 xchg aam xchg clc cmp ds sub mov (bad) xlat xchg in repz nop clc add lcall xchg outsb or imul movsl push jmp cmc jnp (bad) xchg mov rdpmc fwait sub cmp add xchg cmp add jne addr16 push data16 (bad) cltd adc out mov adc bound outsb movsb repz popa icebp inc ret mov or out lret adc sbb mov cld lea (bad) push and push aaa subl sbb fidivr jecxz add jno dec arpl mov cmpsl pop repnz loopne or push mov add lcall sbb btr jo loop addr16 sbb (bad) aad (bad) stos sti mov push mov and push call sub jge push sbb and inc inc and mov or and pop jmp scas outsl jl leave movsb or (bad) fs adc sub pusha aam push jmp mov (bad) repz mov jecxz xchg je out (bad) add lea and and or pop mov push inc xchg pusha sti test and (bad) je jl cld cmp (bad) out and inc and les adc out mov rorb into daa inc pushf fdivrp and enter inc andnps ss and loopne (bad) mov xchg mov fdivs cld in mov (bad) dec in mov and inc div inc cmp icebp adc negb and hlt jbe mov lock das fidiv lret imul xor sub rcrb ds push movsl ljmp mov out ret mov ret outsl and pop aaa cli sub test cwtl adc jnp lock test hlt outsb mov mulb (bad) rclb cs xchg (bad) sbb clc (bad) jle fcoms loopne and push jecxz inc ret inc jge and data16 lcall out jnp sbb enter pxor push or pop call jne mov sbb push (bad) mov jp cmpsb xchg inc cwtl pop (bad) cld mov stos xchg mov and pop mov jne repz xchg sub ds mov xchg mov out enter sbb sbb out sahf push (bad) or test sti sub sub xlat into inc mov fnstcw imul adc inc orb in or enter dec xchg rclb pushf insl pop in cmp mov jne imul jo jge pop push cli push mov add into dec jb xchg mov (bad) xor movsb sahf iret popa mov int (bad) in leave adc jecxz int push sbb or lea stc int3 jne lock jno adcl pop ficoml and xchg and xchg or adc fwait in pusha cltd int3 pop aad addr16 dec push (bad) fild icebp sbb adc adc out inc popf dec ss cmp ljmp imul pusha out scas lds pop xor xchg pusha jg pmulhuw mov sbb fwait (bad) lahf clc cmpsb pop push into js xchg (bad) enter repnz cmp sbb and ljmp stos fiadd (bad) movsl pop sub push test scas sub scas lahf mov sub push pop (bad) cltd cmpl ret mov jns fmuls or push mov mov ljmp mov (bad) and jge and mov jmp jmp add mov popf xor rcrb sbb loop lret out cmp hlt (bad) fimul aam sbb jns mov movb clc ficom and stos (bad) mov or (bad) leave sub gs mov fidivrl or dec mov cwtl nop inc cmpsb jne lcall xchg pop enter shl sbb loop sbb cmp mov scas imul idivl mov fcoml pushf (bad) imul lds movsb adc ds mov push scas (bad) (bad) int jo push add mov pop inc mov (bad) xchg xor mov leave xor xchg fcoml ret int3 inc imul hlt mov hlt xor sub cmp and inc test js inc test mov aam pop hlt enter aad (bad) mov jo jge add ljmp and adc hlt mov xlat rclb and lods aas das jle xor fs adc inc (bad) xor test sub mov aaa cmp scas sbb (bad) mov imul dec push adc pop mov and sub std in inc inc pop xchg mov jmp xchg pop test mov and nop mov xor lcall iret add xchg (bad) mov dec arpl fdivl inc pop sbb cltd out stc sub test fs dec add fmuls loope js,pn dec dec sub es out xor xchg add xchg (bad) int jb daa das scas and push adc xchg repnz movsb clc mov push cmpsb sti or mov or decl js sub add sar fucomi ja sub jle in mov imul mov inc push or mov inc push (bad) sbb nop call stos in xchg cmp fwait ss fnsave adc xor (bad) push insb cmp mov dec lcall loop (bad) push (bad) dec sub inc jmp imul sub fisttpl in add jg jle push fisubrl push jecxz push adc sub bound mov scas cmpsb and movsb mov std gs ret mov add ret (bad) stc cmp movsb insl ljmp loope or in loopne mov mov mov push mov ljmp in inc jge sbb sub lds lahf lock cli test sbb pop add xchg addr16 ficompl fnsave repz add jae (bad) movsl fistpll in loopne dec mov push pop leave out inc add pop cmp xchg repz faddl addr16 in sub fild pop push mov pop aam mov xor mov inc mov jns cltd cmpsl int3 cltd out lock test sub xchg lret xor fimul idivl in add push add jae daa js (bad) rorb into and lahf add addr16 xchg cmpsl stos (bad) subl jecxz (bad) xchg xor and call xchg sub mov pop out mov ret inc mov mov fucom xchg cli cmp mov popa jmp call adc pop (bad) ja pop push sbb add mov lahf fpatan aad mov jg push mov mov jns pop mov jmp lds cmp into lds loopne or xchg out pop (bad) imul lods inc aad push ljmp int test xlat jns pop pop into sub sbb ds sbb jg mov pop and (bad) cmc mov ljmp push add push js bound aaa pop inc stos rorb rol push xchg lahf sub dec mov (bad) sub dec scas mov in out xchg jmp jmp hlt hlt cmp inc aam enter xchg pop push je pop int3 aad sub jo dec jp adc pop stos ss sub pop loope sub loope lahf (bad) adc gs adc faddl (bad) mov dec jns push stc in icebp cli and scas sub fisubr mov mov lahf aad rolb ret mov leave rolb mov pop cmp cmc stos fiaddl push xor lock xchg push fcomps xlat stos call adc lret in (bad) es repnz rorl ds mov xchg icebp mov cltd sub mov mov ljmp fs aas test loop arpl iret fiadd add (bad) out pop cli mov stos pop cmpsl xor pop ljmp and je jmp cs in scas adc push jp in out repz mov (bad) lds fldl mov loopne rol enter mov (bad) jmp xlat hlt cmc fdivrs add mov arpl inc xchg in pop jno jl sbb pop mov js push addr16 int3 add sub adc scas rcrb mov ja push jae ja sbb ret jecxz mov fisubrl popa push mov jl ret fiaddl pop stc adc ss std mov scas or les lds bnd divl stos andl addr16 ret cmp repz ss jle and rorb or sbb mov mov (bad) xchg or daa xor adc pop aad cmp out mov cli jge fildl cmp rorb in sahf les dec out gs xor test adc insb jl (bad) insb test lds sarb mov outsb movsb mov sub cmp sbbb lea inc mov sarl aas movsb jecxz sbb or xor scas or (bad) (bad) xchg mulb inc ds rcr jns dec add inc xlat dec lods (bad) dec or dec jmp data16 (bad) mov (bad) or pop je xor jae cmp mov jne mov mov fidivrl shrd mov addb outsb out push aaa add jbe sbb xor push inc jb pop in mov inc sbb mov lock aam jmp ret je pop je pop aad test jbe or dec jmp dec rcrb dec je lods lods push jmp hlt (bad) (bad) jns sbb lea cld xchg inc cli ret test sub int pop sub inc push adc inc mov dec rclb mov mov loopne popf testl sbb fdivr dec inc jne aad hlt les xchg cmp stos iret cmp jge cmpsl loop les sub push xchg dec stos mov in hlt sbbl xchg push popf mov mov add psllq outsb mov push cmp sbb aaa mov fdivp or sbb mov movsb int sub stc jmp test xchg movsb mov xchg push xchg gs cltd inc mov fmull int3 mov and sbb daa inc dec pop ljmp in mov sub cltd in je lcall dec mov inc lock xor jns xlat ljmp pop push fs adc push inc stc cmp inc jle mov sbb and cld and call add jecxz mov in mov lcall inc aad fildll pop (bad) div inc sub pop dec jns lods add dec std push in stos lret lods adc loopne loop rolb imul xlat dec int lods mov (bad) enter outsb jmp xor mov repnz (bad) xor dec popa mov mov scas sbb jne push pop (bad) int (bad) xor xor jl pop pop lods sti bound call adc shlb shrb sarb mov insb xlat test lea sub fisttpll cmc push lock and inc dec in hlt fs imul pop push cmp push push dec lea jg mov cltd in dec sub push inc and mov adc jg aam iret mov sbb outsl lock xor nop leave imul out adc in mov lea sahf sarb mov jmp mov dec sbb movsl mov xlat mov and loopne in dec pushf cs ficom or stos jnp jnp lds mov jb ud2 ja ljmp pop push lock roll inc data16 sub pushf inc dec sbb dec sbb dec mov cmp scas (bad) into cltd (bad) (bad) lret hlt inc dec rcl lock push dec mov sub test ss pop cmpsb icebp mov cmc fildll sub push mov xchg xchg rep inc pop scas or adc push gs push test and jbe das mov add divl (bad) test cmp and imul jae test in mov pop lds and jne pop sub add das sub mov jecxz jmp jle test inc cmp push (bad) sbbb icebp mov xchg es test sbb mov push (bad) push jl,pn fwait pusha shrl aam cli or jl dec push dec (bad) mov pop xor ret or (bad) popa in lods push rcll inc rclb cmpsl mov sarl adc scas lret rolb sbbl es rclb mov in sahf cmp or sbb daa outsb pushf cmpsb lret (bad) fildll aas add jns insb das and push cli aad outsl and nop (bad) adc nop std mov inc pop and cltd (bad) imul inc andl stos shrb cmpb out imul pop mov stos xchg sbb js (bad) mov addl xchg mov add cmp and jp inc int jmp popa sub lock popf scas sub or lods stc addr16 fwait jnp xchg mov in gs adc jmp cmpsl mov jne inc outsb mov cmp cmp subb sahf insl data16 pop xchg push or arpl xchg popf (bad) mov aad xchg into dec (bad) jne aas sub sarl sbb jge and adc lods push sub or push pop jbe,pn pop sub nop push mov dec dec dec (bad) dec mov add mov cli loop lret fdivs dec jns inc inc icebp ret loop into and std and cmp dec and (bad) sub lret inc out pop movsl mov push xchg xchg mov sbb mov test mov sbb (bad) (bad) roll lods (bad) jp cld dec iret cwtl dec iret mov and jo mov jmp psadbw ds ret cmp (bad) mov sub sub cs fmull cs mov fstpt (bad) decl mov and cld dec cwtl int3 push cld sbb mov mov add xor push out js std mov gs and and les pop mov fimul inc mov dec inc loopne jle dec sbb (bad) mull push mov mov (bad) or cmpsb push shrb cli (bad) hlt dec push loope cmpb mov scas iret call enter jge cld sub xchg add in dec rclb inc cmp jae xchg jmp cmp movsb or fisttpl js out or pop ret arpl es add ds mov stc mov push mov js hlt jle movsb in in pop addr16 mov sub adc dec testb fs int insl xchg add ret add repnz push lahf leave xor dec add cmpsl sub sub leave and jbe xchg dec sub test cld push pop add flds repz mov cmc rorl cld sbb jmp inc aam jbe js insb call and in (bad) lods push cli add and add mov in clc sbb add (bad) xor mov mov mov jl add mov cltd add mov add inc loope dec mov sub (bad) jnp popa in addr16 frstor dec inc sub pop dec arpl (bad) sahf sub enter lret in sub mov out or sub jbe push inc mov push mov mov cld push mov sbb fistl test and sbb pop jae fdivp mov inc mov int3 mov mov test mov jecxz stos inc sbb mov sub sbb dec sbb add lods ljmp sub cld idivl inc lea (bad) fmul adc imul push pusha inc pop in xchg (bad) sahf xchg ljmp inc clc mov push push out sub cmp pop and sbb cmp (bad) mov and sbb arpl mov fisub mov loop mov cwtl push into inc xchg add push cmc or (bad) ss lret inc inc inc aam int xor cmp fs lods sbb bound or fwait outsl fist outsl jnp xchg fdivl movsl std sarb sub loop out dec adc iret pop loop lea std or jne mov (bad) jnp inc add xchg sbb cmp pusha test mov inc adc mov add punpckhwd push iret cmp (bad) and xor cmc pop imul mov sub (bad) mov movsl out pop je (bad) lahf ret (bad) (bad) lods (bad) jno and inc stos je mov or cld push in and (bad) enter sar aaa shll jb sub cltd or fwait jnp cmp and fisubr rcl ss xchg or add add cmp cmp fdivrl lods xchg mov (bad) sbb lcall mov and pop movsl je ja daa mov test cmpsl adc pop pusha mov ss push fistl push int3 in push mov lret inc pop cmp and dec sub mov mov (bad) ffree insl sub xor sti dec hlt mov scas xchg push (bad) jmp cltd icebp lods push pop push in jl loop or fdivl ss into cmp sub jl aaa les mov mov pop inc rcr or sbb movsb hlt pop idivb push fld xor push test or std add out aad fwait (bad) das scas addr16 push push hlt cld mov cmp test xlat lock pop mov sub pop sarl incl fsubs mov jae enter dec js loop cmp out fdivrp and jnp add ja sub es xor sbb clc and cmpsl fnstsw inc orl cli push xor adc es cmp mov iret aas aam sub pusha cmp insb and mov jo jno jg dec mov addr16 out adc pop mov clc test jae mov sahf pop sbb cwtl sarb adc sbb in dec cmp lock icebp adc addr16 and cmp mov lods sbb loope or lcall std enter stc into xchg and (bad) enter sbbb arpl dec jo xor fdivrl test xchg xlat jno xor (bad) decb cmc cs lret mov push stos fadd dec or and mov mov neg fs out pusha aad inc ret sahf push mov (bad) in add rcl pushf xor cmp mov mov xlat dec and push lahf lcall lods mov pop cmovae inc xchg inc add mov jb fldl lods xor push xlat push rep rclb mov and pop insb xchg and pop ja fcomi scas je pusha push movsl lret ja add adc or push test aaa or fwait cmp and in jnp jg jecxz push (bad) push cmc jp cmp mov mov (bad) loope shrl in gs fisttpll push xchg repz fs jns push mov adc fcompl adc dec loope movsb fstpl xchg add mov or iret inc loope (bad) stc dec fildl push (bad) aas adc mov add mov mov inc or test ficompl adc movsb cmp das lea mov add pop mov sbb sub push lock mov mov aad cmpsl mov mov adc aaa xchg lea mov inc std sub ret stc in stc cli cwtl ja test out pop and xor loope scas and ds aas sub insb cmpsb mov cmc lods push sub mov clc cmp jp mov outsl (bad) mov popf jb fidivr es inc pop aaa fcmovnu ljmp xor pop std push dec test imull dec mov mov aam lock ret test mov push loop pop mov roll add repnz mov addl lds std int mov or xor dec jno out cmpsb jp cs sarb jne mov adc sarl scas fadd mov push adc mov ljmp add cmpsl mov or push pop jl dec mov mov int3 in mov adc lahf mov inc cli adc inc jns push push addr16 enter pop inc sti pop (bad) (bad) std repz sti nop sbb into pop adc mov insb ds adc jmp jns jle scas dec rol js cli ret mov xchg stc mov outsl adc add and lock js sbb jecxz out jnp pop dec insb xchg add add hlt cmc mov jno lcall cmp mov cs into adc push (bad) sarl (bad) loope int int int in adc ds xchg mov js (bad) sub lock (bad) sbb icebp sub lods xchg arpl mov xchg pop outsb mov pop cmp clc cmp ljmp mov (bad) fwait int fdivrl add lret adc std xor scas push es dec push fmul bound and aas and push add ret or dec pop mov pop lahf mov cmpsb mov (bad) mov fidivl cwtl jbe,pn daa lea pop pop mov lds enter cmp push fiaddl xlat daa cmc mov mov mov cmp das or ret lret rcr stos push nop push shrb clc imul dec add and jbe and jmp dec xor push jno cmpsl add ds ret xor ja pop xor popf scas inc ficompl repz inc push pop clc pop adc sarb inc gs add movsb xchg repnz incb test inc aam jns mov repz mov leave ljmp cltd adc popf dec push dec push xlat iret mov fsubrl movsl pop lods scas rolb cmp mov aam xchg icebp inc sbb sbb lock xlat xchg sub pop fimull mov cli out adc loop cmp mov pop cmp test insl sbb add pop ja pop and sub test pop fld scas inc lret sbb sub imul in mov imull dec mov int3 and popf or mov iret lret inc inc (bad) into sbbl lock inc dec mov push lods mov (bad) aad push mov dec add aaa aad mov sub dec sub jmp sbb inc adc push (bad) in sbb (bad) jo gs (bad) dec arpl sbb lods adc jecxz fmull lret xchg or dec inc xlat push dec pop popa cmp (bad) jnp mov movl sub mov adc shrl xor dec pop mov aad sub ret lret aas inc into inc fisub popa in imul push mov mov lret adc pop jb inc pushf sti outsb fs jecxz cmp cmp mov scas pop sbb jl call and mov mov push arpl and enter lahf lods sbb xchg pushf (bad) clc aaa sub push aad dec sub jae fcompl cmpsb lods mov xor iret add inc (bad) aam push cmp es ds je dec cmp mov cs fistp push xchg jg nop ret sub cmc rcrl xchg ss lods je mov (bad) adc sti fcoml negb bound inc aas cmp cmp add outsl test sub or icebp outsl stos lock sub ljmp fsub cmp mov sub imul icebp pop mov shlb insb mov call push add push dec lcall sarb inc leave jp inc xchg mov ficoml (bad) jae cmpsb mov in iret lret jmp mov add inc gs jno popa cltd into arpl out jns (bad) xor mov cmp sub lahf mov imul mov call xor mov add out and or push ret push rcl scas jg cmp cli mov dec push out or add (bad) and imul lret imull cli mov outsb cmc add sbb icebp sbb lods mov arpl dec mov call repnz in fsubl mov lock outsl xor jmp push mov movsb or jecxz sbb stos test icebp inc dec jae mov jmp test sub into jb xchg das xlat les adc loope enter inc mov xlat enter in adc and jns in jae imulb cmpb push cmc push jg cmpsb pushf in add xor lret jl adcb aas and sbb mov mov push pop jne jne push adc cmp lds mov dec shl pop (bad) xor add aas stc dec jns mov xchg aad fdivl repz sub mov imul outsb lods sub call (bad) lds sbb jne xchg or inc cmp nop mov adc xchg mov mov inc pop and lds cmp outsl cld in lods inc cmc in ret sub es pusha or dec mov jle push nop imul xor jb lret push cmp repnz cs mov mov je std adc cltd jno push sbb repz jo test push jo std loop or cli pop call mov out sahf mov push push sbb andl cmp jmp pop arpl dec call or push in out push daa inc cwtl dec (bad) mov pop outsb and outsl gs push addr16 sub (bad) aaa pusha notl in jle mov jle ret dec call int xchg inc pop cmp inc pop mov fdivs out fildll or jbe xor push stc stos test shl jp mov xlat pop cmc fucomip and jo sub and sub pushf (bad) mov cmpsl jp roll outsl ss push push sbb mov sbb fbstp fidivl add jns call xor add into mov pmulhw in fs jle mov sub scas and cwtl adc mov adc sbbl ficomp (bad) xor mov out fstpl (bad) xchg ds jno mov pop ficomp inc (bad) pop inc add sbb mov leave push popf or ret cld sbb push insb pop mov xor jns sbb imul add cltd pop jg add imul ss mov mov inc xor inc pop das jmp mov jg mov cltd jo aam pop cli xor test xor push repnz (bad) movsl mov rcll loopne frstor (bad) repnz movsl ror inc sti mov adc inc imul add fdivp gs xchg loop mov mov jae (bad) outsl sbb mov cmp or js sbb es test das fistl das jg jae add mov mov cld xchg push mov test inc mov mov fldt cltd les cmpsb jl out dec mov shl popa jae mov mov ret insl mov std add or mov sub pmaxub mov adc negl pop dec xor pop add stos push das movb fstps das test outsl mov jmp dec enter cmp add cmpl inc or inc jge aad xchg cmp pop adc les mov xor adcb test dec add ljmp out daa mov (bad) loop inc mov pushf in and not fwait mov push popa out cld pop movsl mov rcll ret popa sbb or popf insb mov out adc hlt lahf jp cmpsl pop das daa repnz mov fnsave sbb fisubr mov dec add inc (bad) dec aas imul fisttpl or and cld shll adc jbe in (bad) and and mov lock push loope imul mov (bad) xor insl sbb mov inc out sarb inc mov sub gs sahf lods cbtw daa push lahf add jae iret mov or adc sahf xchg insb fcomps adc inc cmp adc push outsl dec cmc adc pop push dec or outsl lds sub adc xor (bad) adc adc sub push popf mov push lea and in mov push jle in dec jecxz loop pop xchg fdivrl adc leave sbb mov test ficomp shll or addb (bad) add jae and jb cld push rorl cmp rcll inc leave test xor push cmpsb mov sbb or inc loopne pop std adc arpl daa test cld adc and adc mov shr jne clc insl int3 gs aas or add scas xor add pop cs inc outsb mov ljmp lret sub jns add imul mov dec dec call dec or addr16 adc cmp mov adc xchg jno out dec pop sahf inc sbb mov into or pop movsb push pop cli in int3 (bad) test push lea xor pop jecxz jne xlat dec daa lret movsl mov xchg (bad) jno adc push movsb jno push mov cs (bad) loope (bad) push mov sahf adc or adc fsts cmpsb stos dec cmc mov or add comiss icebp mov jno movsl mov add sub cmp popl rcrl xchg lret std pop imul push out pushf pop mov xor sub mov aas lahf call sbb xchg add xadd fistpl lods mov test mov push cwtl in jl dec fs dec or mov sub les mov jae sub dec push std js pushf mov repz das mov loopne les in imul mov adcb aad mov jbe stos int3 insb pop jg cli cmp lods adc iret jecxz xor or add sbb fcompl and stos into push sub ficom pushf jl fnstsw leave cli cltd dec test sti sbb pop mov hlt aaa (bad) pop adc into push adc repz add lret fwait cmp and dec dec jns and loop mov clc mov int dec cmpsb sub outsb test mov movsl clc lahf add ds sbbl out int3 xchg jb lcall jg sub lahf sbb mov jb scas lods notl enter insl (bad) pop mov lods mov loopne push jne popf je jb add addl test dec sbb cmp mov lock push daa lcall jl outsl add or or inc xchg sti lea mov cmp in jne mov lods mov cld sbb pop test fildll pop push dec jg mov jp sub nop test mov rorb stos sbb jno sbb sub mov push stos sub jmp cmpsb xchg push xchg (bad) lock je and adc sti pushf fldcw mov pop mov dec and sbb jo mov lds enter inc xlat hlt (bad) xor mov pop dec loop or scas add fwait cmp out jmp mov inc push ret fsubs out jle adc mov adc inc ret leave (bad) sbb jmp ja jo inc push and dec xchg mov enter or shlb es sub mov pop or push mov leave push xor sub inc cmp mov cmp incb inc inc aas push jbe sbb sbbl push cld lods mov mov jecxz pop xchg loope inc mov in rorb sub je js jmp xchg mov std inc ret adc leave inc movsb inc mov fld jl dec inc mov cmpsl (bad) cmc mov jno sub lods dec inc pop jmp rcll add jecxz sarl mov pop mov dec pushf sti stc out and scas add ret xchg in repnz fisubl dec inc jl fdivr inc mov int adc mov add pop pop cmp inc lahf push pop inc nop dec cld stos mov scas enter push dec icebp orl lcall push cld scas icebp or cmc sub fstl std cmpsb jno cld add int gs jno js inc lods ds xchg fdivr fs sbb (bad) in mov lret repnz mov mov data16 rolb data16 in mov xor js cmp lds ret orl and lret xchg mov adc dec and mov call dec std add jecxz or push out (bad) ss xor mov mov out sarl or sbb mov and cwtl pushf dec xor je inc ret les or ds mov or nopl push push jb push or push loopne rolb pop or mov bound or jns and add jne in shlb mov sbbb push mov inc sbb cmp inc dec subb clc xor add cwtl jnp mov jge xchg or mov call ret mov (bad) imul cmp jb jne xchg mov dec inc mov add mov mov jae js mov stos (bad) pushf pop out (bad) mov je outsb arpl into mov enter sub mov xor jb andl fistp jl xchg lcall dec add shrl adc mov xchg addl cld jnp push jecxz push push imull lock cmp sahf out shrl xor ljmp out jge cmp pop mov fadd mov xor xchg adc loopne pop jmp (bad) xchg (bad) jo mov sahf shl lahf fsubrp (bad) push call jbe int3 scas int3 or (bad) mov test mov or dec push jmp pushf mov in inc push sub xlat push out or data16 xchg xor jmp add sbb inc fldcw cmp popa adc (bad) (bad) xor ljmp cli mov push and xchg mov cmpsb push xchg in xchg out stos repz iret xchg cmp xlat add jecxz add fcmovnb push pop inc lds dec xchg cmp jmp mov (bad) (bad) fsubr sbb mov aam mov int3 loope imul xor les push add ds aaa (bad) xchg jns mov jae lock sahf jns mov mov sarl mov xchg jg fidivl jbe call push push clc daa mov out sub leave nop xchg xlat lock loopne shl arpl jb int3 cmp (bad) addr16 and pop add xor adc cwtl dec add divb (bad) dec xchg sub mov ljmp hlt and mov int cwtl ss fildl bound mov lock push jno cld movsl cltd mov mov (bad) dec mov je mov adc mov hlt call mov mov jl ljmp pop mov (bad) aam and xchg into dec shrl scas push mov xor shl test jge add shlb adc ja or imul fadds mov (bad) xor movsb inc shll clc lock daa cmp das or jp (bad) push aaa imul inc fdivrp add xchg out (bad) fidiv cmp push out cmp notb jle cmpsb dec inc xor push mov sbb fsubrs adc call push inc stc dec dec iret push cmpsl (bad) mov push idivl js pop dec scas push adc (bad) jecxz sbb or movsb mov cmp cli in pushw lcall push je mov cmpsl jb pop popa nop movsb mov jnp cmpb fnstsw mov (bad) es movsb mov pop imul (bad) mov mov notb (bad) sub mov dec inc jns mov clc mov fistp mov sub enter cmovae pop pop add mov inc mov ret mov add imul loopne dec icebp jmp je jecxz sbb pop inc jb lock shll cmp fwait and ss sbb lahf repz cmp nop cmp xor pop inc dec or imul (bad) insl test clc addl dec (bad) mov dec (bad) movsl adc rolb xor ds stos test loop mov test (bad) dec inc add pushf xchg repnz and into setbe mov into or std adc jle cld xor mov add je (bad) cs push outsl ja lea sahf add orb or stos lret fsts jl lret xchg adc (bad) dec jb rolb jg push mov fadds out xorl add push fsubs divb mov mov pop jne rcll ret jge mov insl dec aas cld das dec cmp inc aam clc lods push cli mov in pop pop cmp imull loopne (bad) (bad) lock addl gs in lock cwtl lcall fbld and dec popf jbe add or sub scas and fiaddl fildl mov lea xlat cld ds add mov cltd imul dec outsb add sbb (bad) mov sbb xor jo xchg xor hlt xorl mov aaa inc jb (bad) mov or sub popa rcrb push aam repnz sub jl jl std xchg pusha std ret (bad) jb mov cmp loopne jb (bad) xor icebp xchg inc shll cmpsl mov dec and sub (bad) pop push inc inc int3 add push test js ljmp or pop push (bad) sti dec add push mov jno add (bad) mov dec call rcr leave daa dec dec adc sub pop mov xchg inc stos (bad) shr sub movsl inc test repz xchg scas inc adc push xlat jg les jp out lret xchg cli in sub hlt mov sbb mov push add push repz scas hlt mov scas popa loopne imul js pop aas int popa mov sahf test pop mov aad mov mov mov and cwtl movsb lock jno imul aaa in cmp add jecxz fs lcall push cmp add ja addl mov push lock in into fisttp mov negl hlt jge or out mov je inc pop pop addr16 pop jae xor jmp movsl jne jae sub in mov rcrl dec and add pop enter ret jg cmp rorl xor sahf and sbb mov and dec mov aam sbb xlat icebp jle je jmp lock jnp repz jae xchg pop test dec and (bad) mov xchg cmp adc jg jle and aam pop or pop add hlt fwait imul icebp pop int dec loopne pushf xchg stc mov xor xor mov dec (bad) stos out enter adc int inc inc sbb fadd in add cli loopne jbe inc sub addr16 dec push in sbb mov pusha push imul cwtl dec or jmp call or mov (bad) (bad) push (bad) push adc movsb call push inc rclb or sbb (bad) sbb lret int mov mov ret stc xor mov pusha push xchg aaa xchg sub cmpsl inc xchg pop das aas fstpt xchg and sub push xlat cmpsl inc mov mov xor aad jecxz sub shrl jle lds inc (bad) pop int3 push test jl pushf je dec mov movsl xchg mov cli or and mov (bad) adc dec inc jnp dec pop xorl and loop insl mov icebp outsb mov fdiv pop push repnz in and mov das mov xchg dec dec lods dec in stos test and stos clc add imul mov aam push push stos outsl iret cmc adcl pop pop insb or pop or add push jno dec adc fxch dec sub sti movsb and sti sub out sub loop iret dec push mov lea mov add add out jnp cmp add ss sub lcall loop out pop jmp test or stos subb (bad) xchg cmp adc and push pop adc call or mov lods sbb fisttp lock cmp std addr16 fmuls pop and sti and imul stos or repz fmul or mov sahf mov leave xchg mov jg movsl push pop adc xorl movsb mov mov xchg (bad) jo loopne and imul aam and fdiv mov (bad) adc mov stc mov pop mov adc jae mov xor dec js movsl push mov pop (bad) sbb mov adc add out or mov lret aam lcall jle inc movsb add add jg das dec outsb mov inc cli sub jl and or out popf adc andl and mov mov (bad) dec outsl adc mov mov lea mov in (bad) (bad) icebp iret fcoms sub sub cli cs push adc loope stc das adc jno,pn jae ss ret dec push fildl mov pop pop in bound (bad) mov rol sub lret sbbb sbb popa data16 (bad) repnz (bad) sbb push call or (bad) ljmp sub in xor lret not sub ljmp push and xor rolb cmp jnp mov bnd loop cli cmc into cmpsb sbb inc push loope or das mov xchg ss ljmp loope jge or fwait jo scas xchg loop out push jle stos pop mov xchg inc sbb popf jle jl sbb int or cmc inc loope push mov nop popa xchg lds cmpb adc dec in push or jmp jnp xor pop cmp in (bad) cmc imul outsb (bad) sbb xchg cmpsl aam outsb in in cmp xorl cmp inc jnp cwtl cmp mov popl int3 mov or les lret xlat lock xlat std cmpsl and imul jb test xchg dec fidiv fs mov or fisubr cmp xor mov loop mov call push lock or mov arpl nop lcall inc push sbb xchg or ja cmp mov loopne jae lds sbb dec bound into lret frstor pusha mov lcall adc mov movsb mov lds pop mov mov mov fbstp sbb inc ja je fyl2x sbb fistpl jne and push sub fcoml ss (bad) arpl incl adc div jno cmp (bad) incb stos cmpsb sub push or ret sbb dec jmp stos mov push sbb (bad) jae xchg shll or xchg adc xorl mov xchg fdivl xchg inc daa push pop stos bound mov cmp add mov pop and mov sti movl les adc cmc sbb sub mov inc std jbe mov lods outsl dec imul cmp add loope jne lds loopne pop xchg mov ds repnz movsl xchg cs inc inc sbb lods mov enter push sub xchg stc inc ret mov dec xor push or jl out movsl jnp and xor clc popa test jg call jnp pop pop mov lods mov sti ljmp icebp add sub pop cs test sbb or xchg pop mov cmpsb in repz fdivs pop add jecxz add mov ss repz (bad) dec test cmp mov xlat out or leave pop push out mov and repnz cmp mov mov xchg (bad) into pop cmp pop lock dec xor lret pop (bad) cmp fdivrs test enter les jnp loope into cmp adc enter mov cmc cld out mov out xor out mov js add rolb popf mov mov lea xchg fisub js xor mov inc (bad) jb adc mov or pop outsl xor dec popa je in imul scas xchg loopne sahf lock mov jbe (bad) adc cli jl jle mov mov pushf lock and inc xchg push push dec sub movsl or iret lcall ret mov or enter cmpsb je clc pop xchg jnp push fdivrl or dec sbb shrb lcall fs or cmp scas repnz xchg xchg movsl pushf mov mov imul xchg lret daa mov or jge outsl aas js dec in testl aam dec sub aam in incl push cmpsl pop idivb xchg xorb std cmp xor sti inc in cmpsb outsl gs dec (bad) cmp push fldl or mov cld cmc xchg in lods adc adc jle aam adc loopne xchg js jmp mov jmp adc icebp jo add mov js sti bound push (bad) aad push out mov pop popa dec fdivs jge jmp loopne movsl aad jle roll aam or xor in aaa pop mov sbb int ficomp add incl dec movsb cmp stc test mov pop mov mov jmp in (bad) xchg sub lock or jg gs loop add lods cmp sbb (bad) lock imul sub or pop inc pop outsl mov jmp jno xchg and add push jnp dec aaa cmp sub call cmp gs mov pop jnp cmpsb (bad) in es (bad) enter sarb imul sub int or pop test insl ficom push cmp cmp cvtdq2ps and lret addr16 dec dec jecxz cltd inc loop arpl int add es out lret in mov jbe icebp add pop bound hlt sti mov aaa pop imul lcall repz add push mov icebp lret inc mov adc fs mov or lock outsl (bad) addl shrb popf mov addb outsl or push lods dec out jae inc push es mov mov outsl push (bad) ja sbb out lret and xor adc cmp cmc pop mov lea fnstsw enter outsl jnp sti arpl cmp dec or sahf mov ds bound sbb cltd fbld or popa xchg clc mov pop adc adc jge (bad) call movsl outsb sbb push push inc negb pop into jns xor inc lds andl call repnz setle ja lcall xor xor bound pop and lcall aas mov mov stc adc xor (bad) pop lds mov dec das xchg dec xchg and movsb je shl mov sub cmp (bad) jnp adc (bad) jne inc xor js fwait call push or or lods hlt push push jmp xor je mov push mov cmp mul adc faddl das adc mov stos pusha mov pop lods fstpl push xchg add mov (bad) dec outsl jp (bad) decl out inc aad inc push add (bad) in mov jb shrl xor gs cmp adc fwait mov das fstpt and dec adc mov stos insl lods subb inc jle clc sti pop not movsb mov sahf popa aam dec test aas dec daa jl (bad) test or mov push stc iret cli or jecxz add mov subl rcrl inc dec jno mov mov imul sbb xchg or mov (bad) out xor sbb jb pop mov sub jnp add lret and dec xchg scas nop out lret xor (bad) sbb aas mov dec mov dec outsl arpl je jo or test hlt cmp ficomp shl cmp adc scas add inc repz adc xchg into scas adc cmp push jb stos (bad) jle inc nop fistp movsb push scas lret sub (bad) aam xchg rcl push inc imul orl sbb push or jo pushf mov mov fmul push sub adc ds aas jne mov pushf pusha pop inc and int3 xchg mov cli fcoml orl xchg in inc jge je and add mov rorl scas mov xchg fildl sti add jg push lret mov adc repz ja mov or setg jne sbb cs add push leave inc inc data16 or enter clc mov (bad) in in or loopne (bad) (bad) ret mov push jl mov lds std data16 cld or in sbb push push mov mov cmc ret je cmp push call pop fwait sub int3 mov pop inc jo adcb adc int stos movsb pop cmp push xchg jne mov imul das mov popa and push rclb mov sub je cmp scas cmp mov jmp jge stos data16 or clc (bad) out mov mov lods adc mov mov mov clc icebp sub pop jmp loopne scas aad ret outsl add xchg jno jae loope pop inc lcall shll stos xchg sarb mov je dec call jbe or push dec xor or adc jnp xchg jb sbb test xor mov fs jo scas xor mov fdiv cmp ret adc sahf xor fimull pop pop add hlt ror pop add pop push mov push shll lea cmp outsb stos in adc faddl ds out mov add (bad) dec hlt and mov pop fistpll mov add cld sub push pop xchg mov xchg pop sub fnstenv inc std daa stos push shl xor movsb ljmp mov (bad) test clc test and (bad) cmpsl je push pushf and inc jmp inc inc fcmovu jns movsb push mov dec dec dec (bad) cltd mov dec add xor mov lcall mov pop cmpl pusha pop cld xchg movsb or pop roll dec sbb push xor inc dec mov lods nop mov xor fnstsw dec adc dec call push adc ss add or dec push jl cmpsb and into out adc js mov dec in mov aas dec aam ret and rorl pop jg sbb lods push adc in sub rcl mov icebp mov stc mov xchg cmp cmc clc rorl pop cmp jp rorl xor loopne cltd dec cmp dec outsl aam fildll dec pop mov pop test cmp (bad) mov push xchg and out xchg dec in push popa movsb adc jns rcr fs pop dec movsl dec mov pop dec pop stc mov hlt fs rcrb sub or pop add adcl adc adcl xor pop nop sarl cmpsb mov aaa stos imul jg scas push (bad) inc (bad) mov mov xor xor mov je or inc dec xor repz rsqrtps (bad) rcrb enter in pusha and dec sbb loope xchg xchg fist scas insl push jecxz pop jne imul cmp lret ret movsl pop out shl cmpsb cmpl push mov adc xor push (bad) icebp push aam adc fisubrl negb xchg mov popa leave daa lahf add mov loop jl test jae lods mov cld ret test ret in cmp les or xchg lock push lcall outsb or xchg and or and push popf dec adc cmp dec cmp lea movsb (bad) cmp sarl jnp xor xchg out lods mov or add cmp push ja lea pusha dec in pushf in out js jns and inc push pushf cld out ja pusha movsl jne adc ss dec cmpsl lahf and sbb sbb cmp or adc mov or xchg fwait divb mov sbb push jg and idivl jmp test sbb sub cmp out cmp push lret aad mov movsb mov jne aad mov mov in cmc jg int inc in out arpl mov xchg sahf into or add adc jle and xor xor test xchg repnz cmp jmp call cmpsb test lret xor mov je insl xlat mul into imul nop mov ret sub pop add fisttpll jmp insb ds sarb and sub pushf dec jg movl (bad) pop insl test stos jle vpcomub pop je lods adc data16 in sbb sub dec or or pushf arpl nop adc aas (bad) idivb aad cmp adc aas mov jne into push movsl jmp loop aas nop lock das push dec loopne dec lea and fisubl sbb adc mov data16 xor cmpsb addb sbb loopne,pn mov jp mov mov aaa mov or lret sbb fdivrp pop lock sbb lcall pushf push dec lahf mov jno pusha test (bad) xchg in int3 pushf sahf shll testl int3 or inc and cmpsl mov cltd test and lret sub iret mov add pusha pop cmp aaa xor mov xchg std lods jnp adc xlat outsl pushf jl mov xchg add xchg aas fimul push div push mov add loop and incl loope jg inc lret testl ret mov mov repnz orl dec mov idivb or sbb insb sbb movsb mov mov add clc lahf imul adc (bad) xchg sarl sub stc mov cmp popa imul fs inc pop rolb jl jge cmc adc mov rcrb and adc cld js xchg sub push fmull loope negb leave push add and pop lea mov (bad) sbb sbb aas jae es inc les bound push stos ret mov adc xchg shll fildl jmp xchg push add add nop add test mov sbb mov adc out mov mull ja rorl or gs pushf xchg inc or insb addl mov sub repnz cmp pop xchg cs pusha push add or or add movsl and pop jb xchg xchg add test ljmp mov pop lret mov hlt lahf cmpsb popa and out xor add dec push repz mov stos mov andb or (bad) adc and sbb pop dec out mov out in mov ljmp dec stos mov adc rcrl pminsw lock pop add xor test inc pop cmp das insb jbe xchg pop and rolb int3 mov xor push ret add sbb out (bad) es leave (bad) adc mov inc xor addb cmpsl dec mov popf dec fistpll dec movsl jl jbe (bad) lock test pop pop sahf mov mov pusha (bad) lods aam aam fdivrp dec adc into and xor mov pop push nop cmpsl ss sahf adc or mov sbb in (bad) hlt bound add xchg outsl pop inc add and jae push movsl ljmp aad jo aam movsb xor loop and (bad) dec in sub lret jns add sbb pusha pop (bad) paddsb dec repnz or aas mov ljmp pop pop push xchg inc icebp cmc jae dec negl jecxz rcrl pushf ret (bad) das cli loop (bad) add aas jecxz inc mull pushf inc std cmpsl sub repz adc test repz jbe scas jp lret add mov jg ret cmp mov int cld iret or into adc fild dec xchg ret pusha mov mov cld subl sbb push adc mov shr cmp das mov xor in sub ret mov (bad) insb inc imul sti pop call insl popa jl sub aaa inc test pop lret inc aas inc nop loope and dec add xorl xchg push push dec (bad) iret leave cltd std inc push fidivrl push cli iret test add nop pop jb sbb adc add sti insl xchg es nop pop stos jnp fucomi mulb dec andl mov lock inc stc mov sbb cmp xor insl mov xor pop stos bound jo and hlt jo mov cmpl ljmp lds lods outsl xlat je cwtl ret je addr16 lea rolb pop inc mov movsl out imul in mov stos icebp cltd aam mov inc add add lret xor iret (bad) pop pushf cmp adcb mov test xor jnp ret dec xchg or xchg scas stos xchg enter gs (bad) lahf mov rcrb sub cltd fiadd in imul call xchg outsb jp call pop (bad) loop iret out push jno push leave (bad) push cmpsb sahf das (bad) cli dec (bad) inc fnsave add pop clc mov dec jmp inc mov fidivr roll xchg jmp adc dec int jbe mov dec push dec iret jmp fdivl popf or xchg lods xchg mov xchg cmpsl push mov ficomp jb jmp test inc adc gs push sahf jnp xchg les mov mov les imul imul push sbb out and xor xor adc xchg sub out jl mov pop jecxz jne lea repnz test dec lcall mov add lea rcll and pop xchg in gs rclb out (bad) add or mov sbb shrb adc mov push pop mov scas in pop decb inc scas or aad mov dec lea adc (bad) push aam sub push jae out sbb or out out stos push or cmpsl (bad) bound nop mov cmp jecxz adc adcl or mov xchg xor je pushf pop stc adc add pop xchg push add shlb jb sahf int3 add insl adc lods cwtl out pop pop mov movsl std loop or outsb or inc dec cmp mov xchg js das fwait push cs scas xchg aam and lret sub xor sbb ds and insl imul mulb xor fisttp pop inc inc mov outsb lods push out icebp (bad) cmp add pop lds mov (bad) sbb jmp push js xor push std add inc adc aad lcall scas dec dec (bad) rolb arpl or push push sbb jl test dec insb mov push push jo push bound pop mov lahf push push cmp lret cmp ljmp notl pop dec mov sub in adc jb jge cli push xor jge pshufw mov sub xchg jns idivb je lret daa or lret daa les jbe data16 int cmpsl lcall inc and xchg xchg cmp imul stc mov imulb jnp outsl in mov fwait sub inc sbb (bad) jmp push pop lea mov dec sub xchg pop inc andl inc pmaxub sub scas addr16 sub clc cmpsb loope pop push pop pusha mov mov sub lds lcall add sub push mull cmp int (bad) lcall mov pop or mov adc movsb gs pop ss inc std call out lcall mov mov inc inc aaa jp add and nop ljmp jg repnz fwait decb cmp int dec ficom fwait add pop sub push push bound and fdiv jo adc insl sbb mov fadds sub or outsl roll enter pop mov jne mov (bad) (bad) lahf xor pop mov xchg call push call xchg mov and mov lds sbb shl ret in daa inc pop sbb or pop xchg jo sar xchg dec cli sarl cs inc lret mov push xor imul leavew or add ljmp je mov lcall lret pushl sub jg push jnp loope and test push test fimull inc mov mov imul outsl xchg jno dec jle add ret adc xor aaa inc (bad) lret into mov fbld inc mov sub clc das and xchg cmpl (bad) icebp push jo inc in mov stos fs cmpsl in xor adc mov push jb out in test lock orl inc xor push faddl aam out mov mov and xchg add loopne movsl adc sbb mov mov fs sahf (bad) mov sbb jle jb or iret dec std jb dec inc sahf mov aaa pop aam in xchg mov add dec xor aad loopne inc jg jle mov xor insb sbb inc mov jecxz jno js clc inc mov fildll push xchg (bad) jecxz xchg insl fisubl jnp mov xor out fadd push cltd xor dec cs cmp pop mov xor out xchg push push push xchg loope sub in mov xchg stos inc pop cmp jae sub stos and sub mov jecxz aam iret daa movsl xor add cmpsb mov addb and ficoml xor imul popl jbe jb push outsb add add or pop jo imul int3 cmp outsl push fistpl add (bad) xchg iret test mov leave or mov out add mov movsb cmp pop repnz cmpsl stos hlt je push and pop mov in repz call xchg lods popa sbb aas sub test pop pop sti mov cmp push ret mov pop jge push cli test cli (bad) icebp dec inc in sahf sub es inc fs jle dec pop jne fsts pop jnp jl out push xchg add data16 push sbb insl pop not cld cwtl cmp jno (bad) cmp push add mov mov jle adc sahf fs mov (bad) adc fbstp mov data16 mov stos cmc dec divb les jbe rorb xor push dec inc js mov sahf xchg loop insb ror leave push add inc push in jge and dec out push ljmp pushw add adc aaa mov inc mov pop lea mov dec out shl xor mov das pop or ficoml dec int test dec jecxz cmp sub dec data16 dec sbb js mov mov into xor out mov ja jmp iret push lds int3 and aad (bad) cld repnz sbb outsb adc lahf cmc lds dec xlat imul mov out jl jae mov rol jne mov mull lret fcompl adc xor pop push and mov dec insb insb cli lcall add push push test mov mov fsubl xchg and in in sbb lods xchg jae lret xchg xor pop xor inc mov icebp pop bound fiaddl xor sahf ret and xchg mov out rorb lret in cmp lock (bad) mov insb adc lods lock push mov push or jl (bad) out jb imul lret adc or add xchg inc (bad) hlt mov cmpb insb inc out test mov (bad) sarb jg pop fistl xchg aam push add mov sbb push popa es js jne mov out or pop or fs je out and ss sub mov popf xor push jge mov out ss aaa xchg (bad) out jp cltd pcmpeqw in and sub aaa push popa ret or popf sbb in adcl push sbb inc mov pop add adc ds imul je jne aad xchg inc leave and push loopne push lock lock or add je in mov shll aam cmp in arpl repz ss repz xor inc shll movsb outsb je out jle leave sahf dec stos dec xor sub mov xchg fadds cmp fmuls jl sahf sbb pop mov or stos or or jno dec add push jle idiv sbb sub push nop cld ror jmp jne mov xchg cmp adc adc testb jno cmp xor stos cmpsb and dec cmc or cmp lock mov cmpsb imul icebp jno lret in int xchg lock fs sbb lock push jge je cmp xchg xchg aas push adc aad mov iret mov and js mov jne sbb jg (bad) dec movsl sbb rcrl add adc and or add inc mov sub fiaddl push fmuls push fwait out out xchg movsl add xchg xor loope sub push lds in adc movl or lret jns push subb out rclb cmp jmp enter pushf or js movq lret jbe cmpsl adc cmp inc jmp jnp cmp xor push lods ds rolb cmp ljmp (bad) or fsubp rolb cmp int aas cwtl sbb cmpsb lods pop lods ret cs aaa push pop sub bound dec mov in fdivr fiaddl aaa inc add scas sbb xor loop repnz dec add and dec cltd shrb mov sub lret aam loopne and loopne add lcall fstps lahf stos gs cs fwait push dec mov inc jl mov sub add sub dec inc fcompl add push push orl xor lods out sbb xor pop cmpsl adc outsl jno mov int3 out cmp fimul movsl jbe cwtl negl jo inc push adc cmp cwtl mull ss lock jno scas sub xor push shll push pop sbbl sbb test negb (bad) pop pop rcl cmp add pop push dec ret push mov lds xor dec mov and xor addr16 cmp push xchg fstp lea mov lods xor test dec xlat pusha pop and mov xchg leave in test or jmp sub lods jno sbb pop xor ja mov clc push adc insb jo inc icebp push adc add out test push xor shr push cmp cs (bad) lahf mov rol ja adc jno lds ja stc mov push (bad) and pop (bad) repnz repnz mov lds mov incb add daa mov std mov sub stos test clc aad adc in and sbb movsb push mov xor pop add in sbb xchg ficompl add popf xorb xchg bound adc push rorb into xchg sub loop fild jb sti xlat cs fidivrl ret roll jp (bad) mov ret ja mov push mov jno (bad) and sbb lods cld xor cmpsb data16 mov xchg out add xchg mov or loop xchg lahf in imul dec cmp push push (bad) dec js dec push sbb loopne das or pop mov push (bad) int (bad) xlat (bad) out fmull popa inc mov sbb cmpsb shll mov push out lcall int sbb cs dec dec sub leave mov mov sub inc and das cmpb xchg js dec mov and loopne adc (bad) das jp sub orl and mov xor (bad) fcoml mov into push add inc scas bound jns call (bad) bound pushw add shrb loopne or dec or cmp jge mov cld mov imul pop push mov mov sub js outsl shl inc push outsb rclb mov mov out (bad) lret ljmp cld rep test icebp xorl repnz or mov mov outsb test jo ljmp cmp inc out in rclb xlat pushf cltd push dec add xchg rolb sub arpl dec mov cld pushf scas ret jae sbbl lock mov or or int or movsb ljmp lret or jg and movl sbb int3 mov popa and xor push sbb pop enter and mov pop divb xor (bad) pop insb mov push pop push push fcomps test stos sub mov xchg pop cmpsl pop popa out jne push xchg push inc in sahf dec insb sbbb test jns call push mov inc cmp stos cmp addr16 leave sbb mov push aam adc sarl out stc scas loope imul insl insl cmpb pop adc aad imul js pop ljmp mov pop xchg arpl stos popf and ret lahf aas imul testb outsb mov sub es fildll test fnstsw push mov xlat loopne (bad) and mov es clc loop insb (bad) out or pop (bad) cmpsb and hlt sbb cmpsb aaa xchg mov or xor imul jbe mov push jne and inc daa push pop sbb jmp sub push ret adc cltd pop mov sub mov push push cs fcoml data16 (bad) insl xchg pop lock add and and fnstsw mov ficompl mov adc divl xchg ret mov mov pop out jmp xchg (bad) neg push aas ds std mull sub pop repz hlt xchg ret cmp stos adc test mov (bad) and movsb jp movsl jne fistpll das mov in pop sbb adcb es or lahf xchg push or sbb pushf stc cmc stos mov pop inc (bad) push stc fistpll hlt nop push jle xchg sbb xchg std add mov ja or or adc aad jbe outsb test sub jl mov daa or lock sarl movsb cmpsb es sub aad rclb pop stos xor cmp stos cmc adc ret jge xor fwait imul mov inc leave loope,pn mov je shr jl add mov fcomp enter ret pop sbb repz fwait ret xchg sbbl test cld push stos cld push xchg jmp icebp push mov ja push lock jns cwtl das dec and das imul pop xchg mov repnz inc jns dec mov cmc imul xrelease dec aad fisttpl jl popf dec sub and sbb or pop sub push add int jmp scas lcall add out mov imul inc push test mov mov addl xor pop jae inc push jns movsb subl orl movsb sbb dec gs cs push lock jp adc popa ficoml jg clc or lea fwait std push or sbb jp mov (bad) scas movsb xlat arpl cwtl out inc mov jne push or adc sbb cmp cmpsb (bad) adc shll stos sbb lahf and or add mov sbb (bad) jo pop or (bad) aam xchg ja stc fildll mov aam fdivl scas adc fscale jae aad outsb mov pop movl or ss sbb mov inc scas lock jecxz insb or std ljmp and xchg inc lods ret stc clc jno bound gs adc push ljmp sub mov inc jp xchg hlt lahf in popf sbb push (bad) ljmp jns cmp in rclb call dec push fstps scas in dec fiaddl (bad) lret test mov (bad) xor rcr int add call out idiv push insb (bad) push call or sbb loope pop sbb and add xchg cmp cwtl je hlt cmpsl test mov inc jo push loope lods sbb shlb cltd push xor sbb sub mov jbe addr16 jp add xor pop rcl mov lahf xchg jp and adcl inc mov mov dec cmpsb add adc imul not mov popf or rcrb mov add loope add fstpt mov in jo leave cmc in inc jmp dec dec (bad) jl jle lret icebp lret sbb ljmp jbe cmp lahf (bad) (bad) mov or push stc cld or sub dec mov dec or into int fmul pusha push loop popf dec in jl cmp insb lret ja and ret mov rorb (bad) dec cmp push ljmp or das dec ucomiss mov ja negl aam (bad) jbe mov mov aam into push or lea mov pop mov push adc jl in rcll jbe (bad) dec js mov js xchg xchg aaa fildl jge jp iret in fwait icebp dec mov push pop mov repnz insb xchg push lahf pop cwtl popa pop pushf cmc sub sahf mov aad js pop (bad) call and and fdiv movsl adcl push or clc xor addps pop or cmp test out or push sub test cli das arpl xchg adc push in je mov push enter (bad) xchg aaa push pop popf pop lods add test (bad) xchg cmpl add bound pop and adc ret fbld jae pop mov jl out jae leave push dec push leave or inc scas repnz repnz sbb sbb cs repnz push or sbb aas loop xchg gs xor mov inc add add jno cld sbb imul dec jecxz iret xchg not stc add rcrb xchg (bad) ja mov insl pop mov test les sahf repnz (bad) cld sbbl sub mov fild sub pop out sarl lret into jmp call scas or in hlt outsl adc (bad) insb mov out xor lds lock lods mov fisttpll cmp js fistpl (bad) cmp scas addr16 push cld ret ja lret rolb jmp jge jmp add push inc sbb lods mov push loope push out ds sbb inc insl cmpsl rorb jo cmpsb les insb mov inc jo push lods jge mov mov and add nop mov aaa loope cmp mov push test mov dec sub icebp out faddl fiaddl jbe iret mov aas xor pop je sub cmp pop scas mov mov or jae rcll lret jb push pop shrb jae arpl push ficomp in push adc out les jne out jl in lods imul xor adc repz sar mov sahf adc inc inc mov add xchg std lock lods dec cmpsb xchg sbbl lods inc stc mov adc sahf sub cmpsb mov (bad) popl push pusha xchg mov movsl rorb jge icebp (bad) xchg cmp out jnp mov xlat mov mov xor add ljmp jp test mov xchg js push and sub xor jmp insl test movb push int lods nop imul xor xchg push sub push lret (bad) (bad) negl addr16 jge inc xlat movsl pop lods or into xor fidiv dec clc cs push lret cmp mov stos out (bad) fdivrp (bad) nop mov push cmp cmp cmpsl fsubl pushf push push and in fdivr adc stos test add xchg dec pop mov jl or pop aam xchg add bound std pop dec imul push pop shrb ss mov aam sahf push add cwtl je das jp sbb mov ljmp std sub push nop mov loope jbe addr16 push clc out and cltd mov lea aad rorb cs js lret ja into adc call or jnp popf dec fldcw inc stc out in jmp pushf and xchg into xor fs pop adc add cwtl mov add xchg pop sbb mov insl adc dec negl pushl cmp sbb cmp inc jge mov jg mov decl dec dec cmp insb mov pop es mov push adc ret mov scas and or sahf ja add gs sarb adc mov add pop std shrl inc xor icebp xor or std stos push pop xchg out aam push (bad) fnstsw pop push xor lcall loopne lods dec mov out pop int push xchg adc and dec cmp loope scas push jmp xchg mov or call fwait call cmpsl fnstenv jg xor cmpsl push jnp mov (bad) sbb fs outsl inc pop std adc insl mov setnp xlat mov cmp mov shrb lcall out scas mov fsts xlat pushf loopne rcrb outsl add lret pop ljmp in popf icebp mov out dec mov sub fwait pusha and nop out lods js stos or je fs mov mov subb inc fsubrs pop enter mov mov mov inc mov pop sub test xlat add push iret popa call leave sbb sbb add loop or ja push pop cmp mov ja jle insl push or subl jl lods mov xor movsb mov adc jae hlt adc push out icebp sub fwait out dec in cmc decb rcrl push rcrl test mov in mov xchg dec outsb jmp add lahf inc inc pushf js fwait jbe sub cmp cmc testl mov fistp mov imul jbe negb jb xchg push mov pusha sub mov inc fisttpll stos pop add insl pop sti adc sbb cmp aam mov nop jo fwait jmp imul pop xor call insb flds mov mov mov adc cli and push aad loopne mov cmc lahf jecxz pop insl fnop insl add paddsb mov rclb push js std fnstenv (bad) or push nop test mov inc aaa xor add shr sub into adc test bound xor jge push lods xchg fimul adc xor lods outsb outsl cmp icebp cmc push push push cmp pop or cmp cltd and inc xchg dec cmp stc movl add loopne das jbe loope lret jns cmp loope jmp popf out ljmp xchg cmp cmpsl add es in adc xchg test cmp es orl fstpl mov jbe inc (bad) jecxz shl loopne and aad jne fwait out out xor iret push mov cwtl or add aaa (bad) pop sbb inc jle (bad) (bad) mov in sub xchg cs or (bad) fucomip mov xchg scas jl insl out fs lret mov inc dec and loope dec ret or sbb movsl or shrl std cld mov push xor mov cli xchg pop push into pop and stos ficom jecxz cwtl jb xchg inc movb sahf xchg inc mov rolb in imul pop int stos push mov notb cmp mov jb stos int3 push lods jno nop push add imul mov cmpsl inc inc sbb (bad) ss pop and ret xor pop iret lods popf dec adc loopew arpl aas (bad) out pop (bad) lods jp push mov into stos mov push and mov clc aam (bad) sub sbb rolb lret dec push cltd mov dec test or add scas jb push aam push pop clc cmpsb jge xchg mov sub orl movsl mov fiaddl adc or fidiv mov aam arpl gs dec dec xchg test or scas push xor pop mov out jnp sub add scas inc mov mov xlat loop out sbb or addr16 (bad) test mov xor mov pop les cli xchg xor push hlt pop lods mov call or sub movsb push push iret mov lods inc mov rcrl or pop adcl sub test les ret les sub or push mov addr16 and fs xchg decb sub mov inc pop sbb inc (bad) pop out out cmp jge hlt jnp into lods and leave jecxz (bad) sti lea adc adc add and jmp push cmp adcb in ljmp daa lret xchg xchg stos popf or mov call in fsubs loop cmp int sub pop iret mov and fnsave add fsts cmp popa inc mov mov test mov jne movsl jp jp inc nop imul pop daa push jnp xchg jno mov xchg pusha incl push js ljmp sbb add outsl push mov fimull out mov mov or jp inc jbe add fs jne inc mov les lcall lcall push cmpl cmp loopne or xor cli jle lahf jo adc in adc jmp jne imul (bad) stos orb or fstpl mov add xchg cmpsb sbb cltd dec fwait les ficoml out rcrl mov cmp pop pop mov cwtl cmp mov sub sbb jne mov pop push lret cmpsl std sub je les std fisttpl cmc add adc cmp jmp loope add (bad) add (bad) xchg adc or pop add cmp xor cmp lret push dec outsl jecxz add dec mov dec xor std arpl push mov and clc or fsubrl ds rcrb pushf std test xor je daa loop push inc enter inc cwtl adc addl (bad) xor dec jge mov hlt adc mov sub out sti cmp xlat xor (bad) lods mov sbb inc jo stc js and ret lea cld and jmp jb jne adc outsl fisttpl jecxz je and sbb (bad) mov sti movsl cmp out and fxch lret iret inc movsl fnstenv mov cmpsl inc ds imul les fildl fistl or cmp lea jg mov cmp mov cs mov pop xchg icebp sar xchg ds or jo testb cmpsb xor dec mov adc inc jns bound cmp mov (bad) (bad) adc jb pop pop inc sub mov sub sti (bad) test mov dec cld jns negb adcl push inc sti dec xadd (bad) adc mov cmp mov cmp cmp jge pop sub imull mov aaa fsubr loopne out jmp pop and insb inc daa mov push (bad) jecxz cmc mov int3 sahf int3 (bad) jae push (bad) (bad) icebp or dec movsb mov incl cmp xchg rol pop int3 xchg mov mov adc jb scas gs adc jno push xor jp imul icebp or mov inc cmc test sub lret dec notb ljmp xor sti adc adc adc add mov sub scas jno push popf mov mov in dec cld loope xor mov sub xchg aaa out loopne jecxz test jle push push push pop dec and add cs mov xor sbb in jb xchg outsl sub jb xchg push dec lods jp cmp sbb shr adc push dec sti jnp sub lods movsl test ja push sbb movsb add xchg xchg add push stc gs jb push popa push bound idivb pop cli clc cmp xor inc sarl xchg outsl xchg push add insl xor jl inc in addr16 es and mov addr16 xchg mov (bad) cmc in or ss sub sbb xor pop push dec aam jp subb mov (bad) xchg lcall mov inc mov sub xchg hlt nop movsl or xchg pusha js and out fisttpl (bad) cmp decl jl sub je dec lods sub pop (bad) inc stos loop int3 mov cmpsl dec loopne dec and fisubrl test xchg dec dec sbb mov cmp xor xor mov cwtl mov rcrb lret scas or enter test stos sub pop mov ljmp dec iret push cs mov lock sbb shrb std (bad) cmp mov fnsave or and ds sub je jmp mov push test clc or bound dec mov pop dec xchg add inc fsubl xchg lock rcrl in mov push aam (bad) pop sysexit les sbb sar xchg jle jnp xchg mov push paddq add lods mov mov xchg mov fisttp pop push inc mov inc lods scas test cmp jge out and std loopne das push jmp inc sbb int3 out ds repz int imulb pop push cld aam aaa mov enter pushf mov fnop pushf mov fnop pushf mov xchg and imul mov push mov sub xchg and sbb sbb pop xchg test and faddl push pop int cli sbb popf pop mov mov daa mov mov pop mov movsl (bad) jnp (bad) aaa mov cld push pop dec xor jecxz xchg and ret and pop loope js jp jmp sarb and mov (bad) and mov push pop jb add mov xor cmp cmp jb mov jnp xor push mov mov pop pop in pop bound fbstp inc ret imul or xor subl add jnp cmp jno insb pop xor repz jnp dec or push mov adc jnp mov mov xor mov pop mov (bad) mov push shlb and lahf enter and pop xor sbb and mov test es scas adc cld or stos pop int out sbb push inc jecxz ret mov (bad) (bad) jb xorl rorb test cld arpl mov clc outsl popa imul call inc push loopne out sbb insb jecxz jecxz pop sub mov nop push incb scas add inc lret push dec mov ss outsb mov inc shlb in iret jnp or lret push mov loope xchg lahf lret cs add (bad) (bad) fimul pushf add dec test shrl pushf mov outsl jmp popf mov and push incb dec and popa outsl out inc mov pop mov xor and arpl and xor imul out (bad) xchg (bad) fmull dec lock popf dec insl loope sarb sahf pop pushf imul (bad) xor outsl std xor cmpsb inc mov xchg lods (bad) xchg dec clc pop adc out add jnp pop daa cmp adc enter outsb pusha sub popf aaa insl push insl sbb pop andl push cltd dec xchg fstl push dec pop inc outsb sbb ja cmp cmpsb ss push sub jnp imul cmc scas push sahf jg movsl in cmp nop adc fwait movsb and enter sub shlb push (bad) mov mov mov aad ss loope xchg repz mov xchg add and lods stos dec inc xor ret leave adc stc test xchg inc in sub mov loope adc push clc sub add jg outsb pop pop rorl pop mov push mov insb insb push fildl mov iret push clc insl pop dec inc jle pusha repz loop push call mul jle gs loope mul adc inc (bad) icebp jmp bound cmc mov inc add fild mov sub xor subps jecxz mov push add pop rclb xchg pop mov mov mov pusha sub pushf aaa cmpsl out add or orb xlat and cli pop dec call bound push cmpsb mov dec stos cld lahf cmp aaa mov push gs fs sub mov shrb add adc mov mov cmp ss adc mov or fdiv iret clc ja push push (bad) fisubl pop enter insb sub sahf push daa mov (bad) push scas xor aas adc movsl or aaa out sbb xor (bad) out cmp cld dec push mov mov mov data16 push out jecxz (bad) jbe mov clc xor out adc repz leave movsl jb adc popw adc pusha bound inc (bad) test mov ficoml mov adc sbb mov subb insl xchg data16 pop out mov push jae pop pop sub jecxz or imul pop adc mov sarb jae movsb aaa bound inc cmc ss out (bad) and xor enter xchg aaa imul std sub insb sub sub sub mov dec addl add out sahf and add xchg cmp jecxz fmuls fwait sub push leave mov pop jnp,pn out ret xchg test fisttp xchg jle xchg lret ds das push mov cmp cmp push cmpsl jecxz pusha aas out lret das add or (bad) cmp mov dec push stos xchg inc mov pop pop insb sub movsl cmpsb pusha aas testl push pop lcall enter lods pop mov sub push mov mov or jo dec and mov mov jnp ror jae fdiv cmp das push call xchg dec stc sbb out mov orl jp fs mov push pop popf pushf xor fs xchg ja mov lcall and jg lret test jg and xchg mov mov pop xor movsl jae in mov add pop in jbe flds push fnstcw leave fnop pushf mov cmp push xchg or mov mov out cwtl ja sub les dec cmpl xchg lahf push ja jbe sbb jb sbb jecxz mov mov sub xchg mov (bad) enter test sbb arpl (bad) mov add sub in ds xor jle jecxz pushf outsb (bad) jo xchg fcmovne lods mov cld fldenv mov jns or pusha cmp pop int mov sbb (bad) fwait loope dec cld xlat mov sbb insb imul sbb mov fmuls or (bad) mov jg dec lods lods xor mov mov dec add xor stos inc (bad) mov push jo cwtl (bad) cmp nop das adc inc mov shlb xor sbb enter fimull lods add xchg cli mov in sbb xlat adc push cs add xor jo mov cmp fsts in sbb fmuls das xchg shlb xchg (bad) out inc jo xor lock xchg insb int3 (bad) in int3 lahf lret daa movsb repz shrl clc es faddl ficoml les lods or lret mov in movsl fdivr pop push dec rolb xor jno jmp and rcll enter jle gs enter mov jmp mov push in int jae (bad) push fidivrl enter leave (bad) dec pushf mov shrl enter test insb xor gs int3 lcall in xchg sar leave ljmp dec arpl cwtl lahf sahf and (bad) sbb push andl stc xchg adc lods dec jno mov fsubs jns cmp mov test pop popf test out add xor sbb cmp fisubr stos xor mov or notl push mov cmp ljmp jnp cmp insl jmp adc cld scas insb pop loop ss popa inc mov nop jl mov clc je cmp xchg leave test adc pop fcoml mov mov xchg (bad) (bad) stc fldenv jb mov hlt mov pop jb mov outsb loope cmpsb cmpsl leave cmp mov mov lds aad sbbl dec out dec mov leave jmp mov fist push outsb jle pop xchg jp in (bad) xor (bad) (bad) sahf arpl mov addl xchg push bound or dec jp stc cmpsb push mov lahf out imul in xchg cmp insb ss movsl in mov fdivs sbb mov jnp,pt insl jecxz push push or ret scas or lret sbb cld xor sub cli nop popf dec mov jge inc cmp aad test int xor repz jp dec in mov mov sbb cmp lahf jae sub add sti dec movsl jmp or mov xchg pop (bad) cmc aas pop and fs (bad) push mov ss movsb iret add xor out in out in int in int3 fadd shl mov cli add add add call lret (bad) loopne in or and call repz int3 push fs lds outsl addr16 lock cmp and jb adc mov (bad) and push sbb xchg push lret mov and mov cmpsl xchg sub das sahf int inc jb jg jge aad mov add mov sbb push dec out idiv mov aad ljmp mov lds dec cwtl dec sbb cmc sbb sub jne mov xchg roll and sbb das cltd popf mov mov pushf fmuls clc push mov inc add mov (bad) xlat cs sbb xor dec into jmp dec call sbb jno sbb or adc push or sbb mov add jle jbe fs and push xlat inc cwtl sti shll push push xchg and inc cwtl jmp and jl fcomps out pop test or out imul bound push push pop out pop dec out out out mov (bad) out enter aam cld test or std inc cmc add aam int3 lock ret jge or out pop mov daa cmp sub cmp mov mov jb cmp scas push sbbl lods jp or adc cli adc popa sbb sbb mov jmp sub xor mov bnd popa push xor cmp ret sub popf in push fiadd addr16 mov xchg (bad) xchg (bad) in add int jmp ja mov lods bound jae adc mov pop les inc xor pop arpl movsb dec call repnz out dec in fwait mov dec (bad) cld jne push (bad) mov push faddl fcoms mov xor (bad) mulb fcoml mov jno inc pop fwait add sbb sub sub sub and mov jbe xchg cld push lock je rcl fstpl xchg jns xchg sbb xchg icebp scas imul fisubr pop cmpsl fs daa lods mov jb inc scas in jge sbb movsb sbb data16 inc lahf scas sbb lods and mov cld cltd cld pop hlt jbe xchg fcoml inc inc lahf into (bad) mov and rorb dec sbb mov jmp mov jb addr16 sub mov sub mov and adc and xor lcall shll jmp es sbb sbb sbb sbb arpl pop xlat add scas movsb jne lods xchg lods popa int3 mov and test out xlat jmp ss lret jle cmp and and loop or push xlat pusha push mov mov inc and movsl cli push lods jno imul inc mov ljmp pusha out imul movsb sub or decl inc out and ret or push adc sbb xor jg das call and test mov cmp rolb cmp into sbb lock les int3 mov xor and add xor dec cmp or les adc xlat xor bound jg sbb inc sbb scas mov fildl (bad) push js push push jge mov push push std test outsb ret jg adc and cmp mov jne movsb inc stos out popa int push mov addr16 jmp push xor jmp sti (bad) mov test test adc nop mov movl rorl mov mov cmp push inc pop (bad) test and xor push xchg pop inc out xchg rorl add pushl push mov iret sti sbb lret mov mov out dec sbb mov push xor fcmovb xor (bad) mov movsb sub cmp push dec push fwait testb movsl mov repz dec dec cmp lock into fcmovnb das inc adc mov adc ss mov lock test pop sub mov movsb or insb pop jae mov sub xor xor xor scas js cld lcall dec or mov xchg inc (bad) loop fildl test cli lret jmp mov imul (bad) pop shrl ljmp cwtl inc xlat divl sbb in xchg incb xchg inc aas sbb push jecxz int cmpsb test (bad) mov pop hlt fcoml shrl js xlat jae sbb mov sarb test add rclb sar add mov dec mov ljmp add arpl dec je xor scas je jb imul roll test push add movsb sub or or pop into lcall lret lcall mov out cmp push or movsb cli movsb imul lahf hlt scas cli push (bad) in repnz add cmp and xor dec aad inc or or inc stc lret outsl and repnz popa and test aad dec jge adc add dec test test decb and iret dec testb pop imul mov repnz add add fimul shrb int3 and cmp in mov mov pop in jo pop xor (bad) repnz hlt pop sti mov mov (bad) popa fadds mov mov aam xchg movsb jns push dec push and in xor sti mov cmc xchg mov or mov mov xor int enter fisub or and fwait and add inc (bad) mov jne add fldt aaa xchg (bad) xor pop out or ror push rolb outsl pop sub fidivl imul push shrb xor sub sbb pop enter jo add adc cmp outsb fucomp inc rclb add loopne jnp ja imul dec aaa push sbb (bad) sqrtps mov add add adc mov test test mov data16 (bad) lea ret jbe mov cli ret and sbb mov imul push push cmpb dec jno cmc inc sbb jno push in mov sbb sbb scas and xchg and xchg push aam mov cld or jmp cmp mov xor ja adc stos mov mov sbb mov lcall xor sbb xor mov fidivl sub fcoms lret push les lods xor jb pop leave mov pop push or push fisub or add (bad) aaa add imul test pop lret add (bad) jnp pop aad in xor xor mov aam push fwait inc stos add repz fdivs pop mov shrl jo lcall xchg inc in pop stos fldl lods jnp xchg nop add les pop insl fcomps stos cmp (bad) jp adc clc push (bad) inc shl ror add push out mov pop lock insb mov hlt mov (bad) jno sub das xchg loope dec maskmovq (bad) dec mov (bad) (bad) rcrb inc or mov (bad) notl add mov pop jb imul add stos mov js shlb add test push inc test adc cmpsb push fldenv lods out mov and mov and lret sbb cmp jbe imul xchg ljmp sub outsb es push dec mov test sub cmp jae aas mov cmpsb pop arpl or cmp fs inc jmp jmp mov xchg enter pushf sti into (bad) pop lods mov shl (bad) fcomi mov or mov mov add push lret ficoml rcrl push adc orl ds dec or push cmpsl cmp jnp cli xor (bad) or lahf jle cmp int or pusha xchg clc and and sub mov cli out test add ljmp mov sub lret mov jmp ret int3 outsl icebp adc cmc push mov xchg and loope add adc out dec xor ds push pop mov adc or mov pop mov sub orl mov lock mov mov and mov pop xor mov mov mov mov cmc rolb push gs mov outsl aad hlt mov sbb cmp or (bad) pop test mov push repz faddp (bad) int3 add sbb stos mov sub or and cmp scas and leave jmp and aam mov fimul das ds cmp repnz cmp and adc mov decb insb jns jle xchg push (bad) popf cmpsl loopne inc insb jns jle xchg push (bad) popf cmpsl loopne inc in rcr ret lods (bad) test ficoml sarl (bad) sub ret (bad) lret or lods arpl (bad) std addr16 sahf add jg mov and rcr notb movsl cwtl pusha aad cs clc and es popf cmpsl int3 or inc aam sub pop in sbb mov imul and movl loop pop mov in aas and das sbb jbe or jo pop out jnp lods dec pop imul out stc cld xlat mov dec push xor dec inc sub xor adc dec dec fcomps test (bad) jae (bad) es mov enter (bad) das je mov mov cmp mov jecxz jmp jle (bad) enter inc int3 or mov (bad) ds mov jb and rorl pusha loop mov pop push ret sbb ret inc mov xchg lahf divl mov das push and lea test pushf mov jmp daa sarb call int3 sub jae mov addl mov add insl out cltd push and lahf mov or push mov and arpl cmp mov add scas inc popf in jmp xor lds mov lods sbb sub lods insb xchg call mov push push inc push push ljmp push mov in imul or sub push mov jbe mov sahf test test fbstp lds jae pop das cmp je cwtl or ss fsubrs inc inc mov (bad) (bad) or xchg ja push pxor stc jle push pop popf mov dec repnz jp xchg xor push cmp add fstp (bad) mov jp or dec cmp cwtl popa popa insl push shrb (bad) test test push sbb lods mov fwait rorb es icebp loop jmp imulb mov js sub inc adc dec pop outsb xchg push mov jo jp push xchg outsb inc orl mov push pop les nop inc shll fild push (bad) out test xor inc push and loope pop test ljmp dec std (bad) ljmp push inc push (bad) (bad) out lods jae bound movl stc inc into test mov cmpl loope adcl loope add ds iret ljmp popf mov cmp xchg mov mov sub xor xor mov cmp mov xchg out xchg les push jbe repz jecxz loope or cli push lods sub adc aad push inc ljmp adc jp popf xorl aaa xor dec loope in jg add push and cmp ljmp jo mov cs adcl xchg mov popa sbb and (bad) ret ret mov jl mov daa sbb dec mov jmp stos jns dec push pop mov xor or dec xchg into leave push add jp add mov xchg jle xor scas push addr16 jns sub out sbb cmpsb (bad) fistp or test add daa aas mov dec and jo cs cmc cmp lahf outsl (bad) mov xchg shl or and sbb mov dec repz mov mov pop and or sbb xchg repz add repnz aaa or push stos push je xor push pop adc add pusha and int and inc cltd sbb sbb imul sub repnz (bad) mov mov in pop push mov cmovl mov adc out adc sbb lods aad call xchg lahf imul mov pop mov stos leave (bad) stos xlat sbb in inc xchg mov add jge jbe and ds ds js into push mov push fstpt cmp push jmp mov aad inc jg push xchg cmp jnp mov mov xchg jmp shrb sub les push pop push mov ss ds imul cmp mov ja mov (bad) pop pop loope mov mov int3 adc add mov xor cmp out cltd (bad) imul hlt shl sbb lret ficomp je outsb mov cmp imul leave int xor fstpl pop (bad) movsl stos inc loope es mov pmulhw popf add mov jg pop add jmp xchg in scas xchg adc mov mov idivb mov sub fistpll ret push adc mov sbb sub and adc mov pop mov dec xor push outsb mov sub dec and jmp mov xor push push rolb jbe mov negb sbb in mov aaa inc sbb pop mov orl lods jecxz pop add mov xchg pusha pop daa fsts out fs xor rolb sbb cltd and das sbb inc int3 inc insb push jle cs lea xchg xchg add jnp test enter mov adc syscall jle mov adc mov push ss jo cmpsl stos shrb ljmp call jne cmp (bad) dec inc dec pop cmpsb jg pop jo rol and repz popf rolb pop xchg xchg ljmp lods imul jns add adc mov les adc ds pop mov mov lods xchg sbb push roll pop cltd jecxz in cmpsb out pop ja adcb loop inc and add adc mov call mov xchg xor je enter ds in cmp ss (bad) mov mov cmp jge aaa and in cmp dec ss mov fistp cltd cmp jmp lret adc mov xchg (bad) mov pusha ss jle (bad) les (bad) and ss jbe rcll pushf or push or sub aam dec and push lcall dec std lret iret push popf test in mov ss jp lds jae (bad) repnz icebp popf ja andb mov leave push cltd insl mov or pusha or (bad) cld leave pop scas push pop out mov ret push dec cmp dec and dec sbb (bad) stc jle dec divl mov fldcw scas jp pop cs inc movsl sahf xchg add pusha inc push mov jbe dec cmp pop adc push imul mov dec mov jb orl int aaa xor push pop xchg inc mov push inc insb imul pop inc inc adc dec xchg jmp sub lcall scas repz sarl and ljmp movsb xchg rcrb xor mov (bad) jne mov add sbb sti cmpl nop mov (bad) ljmp push mov inc repz sahf fs leave jns or mov popf sahf adc lock enter cld pop xchg aas dec outsl mov fdivl mov or adc call push cmp cmp mov loope (bad) test daa push xchg xchg cs cmpl xchg mov cs lahf dec sub push push inc mov shlb (bad) mov out mov mov xor lcall xorl mov pcmpgtd pop push xor shll xor adc xchg jecxz ror movsl cmpsl (bad) gs (bad) mov or fldcw cltd shrl push pusha adc cmp loop inc inc std jb insb stc push mov mov sti insb out stos lea jmp sbb mov pop repz xchg dec insl pop call cs mov xchg push jbe push jno adc sbb aaa xchg popf es sahf (bad) aaa (bad) mov xchg adc pop or push adc fdiv mov add lcall loope mov jmp mov dec (bad) xor jecxz fwait inc fstpt jnp loopne xchg fcomp fmuls cwtl xchg adc dec std dec ljmp test mov or adc ret add fcoml jb arpl mov mov test out push dec inc arpl sti fs iret mov (bad) xor push dec je jle decl outsl mov mov in xchg addr16 aam and (bad) nop or or movsl (bad) addr16 dec nop push out xchg mov push ret and call push movsl add ret insb lcall ja mulb add pop add mov je inc dec pop mov pusha or and or mov pop fisttp int cli cwtl roll lods fisubr lcall inc mov data16 xchg (bad) mov inc and nop or (bad) mov xchg add xchg setp mov ret xchg xchg inc movaps icebp push jb dec and mov cltd sub setb push imul in add mov test sbb sbb mov ret dec xor jle inc pop adc gs push cltd and fstpl in ds pop push mov push ljmp xchg add imul sbb adc pop jecxz loop aaa xor adc xchg add cwtl out push mov cmp scas xchg push imul enter rorb jecxz loopne in mov negb fs pop cmpsb sub push and push (bad) xor rorl in pop pusha outsl ds or sub scas cmp jnp xor loop imulb insb fsubrs out pusha add or add dec test out xchg push sub fwait xor mov push adc xor pop fldenv mov or sahf mov lods pop cmpsb scas lahf fnsave outsb push sub cmp jbe hlt cmp xor outsl xchg repz cmp stc xchg pop push or xchg or dec or mov push xchg cmp mov cltd mov or sub dec mov out jg ffree inc add out pop dec (bad) test rorb repnz mov fs add sub cmp jmp adc mov xor fisttp out xlat jp mov stos call rorl add jo and xchg jl stc fs add decl dec (bad) mov or xchg rorb xchg xor testb inc push sbb jnp mov cmpl jle push addr16 pop jg sahf and (bad) push lahf push jae aas sub roll add jne gs mov mov dec cli int3 bnd push jl push sbbl cmp sub pop mov shrb cld mov je xchg sbb aas and bound jnp es pushf lret push dec stos sahf ficom loope imul push dec push pop push xchg mov lds xchg push test mul mov dec loopne xor pop pop inc lret lds mov ljmp inc popf insb add addr16 jmp mov (bad) mov ljmp ret cmp in and mov push mov or push cmp lcall mov cmpsb adcl push test nop adc mov ret cli lret mov pusha add cmp adc cmp insb add jle inc and out push insb aad sbb in movl pop aas cmp js (bad) adc scas inc aas in mov mov mov (bad) sbb dec ds or jae mov lahf jno mov push xchg xor xor hlt repz mov fimull push in (bad) je repz mov data16 inc mov fisubrl loop outsb ss xor ds icebp loop push push in repnz inc mov idivb dec (bad) adc out frstor aam jl stos hlt pop (bad) push in push inc and test sbb sbb pop in mov mov lahf sbb sub jle and out and (bad) pop push dec les adc (bad) mov cs inc test iret lret xchg sbb cmp dec mov xchg pop pusha cmp leave leave movl or and adc xchg push fchs insl lret orl mov jecxz fcom aas fadds les sbb cli loope loop addr16 (bad) mov fsubrl (bad) sub cmpsb insb ss xchg jge fucom cmp inc inc sbb sub cld (bad) push lcall je mov mov xor daa xchg lret das cmp inc fbstp inc dec outsl mov mov or cltd mov and repnz inc push int xchg mov jnp,pn jecxz lock aam dec ss push fistp test ss ret or xor and in stc clc mov insl sbb sub pop lcall pop mov icebp (bad) fxch push aad (bad) rolb dec fisubrl outsl inc mov mov pop fcoml bound xor loope and mov mov adc push push mov fnstsw jp jbe popf call std adc aaa jb inc sbb cmp fwait gs dec push mov mov and inc popf in into int3 incb sub and inc mov xor sub sub mov insl pushf (bad) cmp orl or mov enter clc dec xor xlat fs jl dec (bad) repz xchg (bad) popf cmovge test not rclb mov xor adc dec dec inc (bad) hlt insb scas es dec inc dec movsb fcom scas cmp frstor mov in (bad) test sbb out fbstp and rcl lods sete popa xchg jns push dec leave dec mov xchg push call stos fwait pop aaa pop or dec xor in and jnp dec fldenv dec pushf repnz cmp xor shrb in pusha xchg push inc add outsl mov cs pop inc lret incl dec inc into add lea imul in outsb data16 pop lret aam push out dec mov inc movsl jbe mov test or mov pop rclb pop mov ljmp adc dec popf rdmsr jbe ret movsl (bad) je mov or pop cmp xor out lods jbe in sahf cmp repz test cmc or mov sti adc pop adc lods cltd jmp iret outsb xchg pop int3 cmp (bad) in mov (bad) cmpsb out push loopne cli push pop fsts cmc lahf js push inc pusha sub ret les jno jmp sbb push or pop ret hlt ljmp mov aaa inc enter cmp and les sub jmp mov or push inc mov sahf mov add jmp shl movsb mov fmuls sbb movsl arpl (bad) jg adc ljmp inc sbb (bad) fdivrl cmp mov aaa jge test ret hlt aam fadds mov inc movsl cli xchg inc lock rcl dec adc dec dec jp push jb mov test (bad) f2xm1 jecxz push xor mov inc outsb adc insb pop fdivl repz sahf adc xchg dec fcoml je or pop aaa (bad) mov push stos mov fnstsw or shlb (bad) repz xchg adc inc in adcl (bad) cmp fdivrs jmp in std or mov cmp xchg push in pusha test jp sub insl popf repnz rolb movntq sbb adc lds sbb xor and leave outsb (bad) xor cmp add cwtl push xor fwait lea add mov jbe sbb insb sbbb mov add pop xor or mov stc adc test in call aad insl (bad) les out cwtl cmp nop mov push xchg mov xchg mov test xlat mov add sub pop xchg stos lret pop sub setb push shl pop fsubrp sahf push sub shr cmpsl jns mov cmp test adc fisttp (bad) aas lods div mov adc and pop aaa dec push mov ja xchg push jle adc mov and sarb xor gs jmp sbbl jbe out jmp cmp xchg (bad) adc and pop push and jns mov or shll aaa fidiv loopne dec and inc lods nop jge cmp out popa mov repnz clc jb or sarb cmp aaa fdivs test adc mov jge mov xor aam (bad) fnstenv into jo inc mov and out mov (bad) xor xlat outsl icebp mov mov jecxz outsl pop mov xchg cmp mov in or enter jle or mov inc sub jne (bad) scas (bad) push adc sahf outsl movsb outsl out fwait pop inc sahf std movsb mov stc xor mov pop out and push (bad) insl cld inc and push jo cmp ret jns xchg jb aas push add xchg adc fucomp imul add mov lcall stos xor mov or dec add std (bad) mov dec outsb daa stos bound rorl pop add into mov mov xchg fcmovnb leave cmp inc cwtl dec arpl loop,pt (bad) adc fiaddl int3 (bad) push shrb pop lds inc int3 sbb aaa dec stos rorb out int3 popa in inc pop or cmc mov lods or push les or push jo mov sub xchg pushf inc jl jns outsl jns (bad) mov ds fisttp movsl push add jb jle inc inc frstpm(287 pop sub fadd and ljmp mov (bad) enter push inc sub add fsubr in pushf enter or mov mov incl test inc mov dec sub aaa sbb jecxz mov jo std sub test into pop jp iret or (bad) cwtl cmp aas inc je xlat mov in imul scas test push test sahf mov jp pop cmpsb rolb out and cmpsb cmp movsb push cmc pop fwait sbbl pushf mov xchg out js stos cwtl (bad) call mov subb jb pop jno stos sub (bad) cmc into insl inc xchg jl test daa mov dec mov lods test inc inc mov sbb pop in mov adc inc icebp jg hlt sub loope lret js or sub sub mov (bad) fldt mov in push sbb cmc xor ret dec jmp repz fisubrl cmpsl fstpl test test adc mov lcall cmp pop ja,pt adc lods arpl jno scas dec (bad) sbb sub ret xchg cmc dec (bad) sbb loop and repnz sub jmp js imul push or add outsb (bad) sub mov loop cmpl lds aas pop xor in cltd jle stos sbb lods cmp mov fidivl loop outsl mov xchg dec lods imull mov scas push std popl je jmp add lcall mov pop (bad) mov das adc mov inc cmc push sbb int3 jmp jo inc fsubrl dec add mov lahf mul pop sub std xor (bad) adc pushl iret add xor add and mov and or psrlw cmpsb ret mov aam (bad) and loop iret cmpsb mov movsl aad enter leave cmp pusha cld rcr pop leave dec int3 inc bound imul pop (bad) pop inc pop fs mov (bad) mov push inc mov mov cld mov ds (bad) xor rorl mov fstpl jmp das mov insl frstor pop xor sub pop fbstp iret sbb xorl add cmpsb call loope iret mov test vpshlq lcall adc mov inc xchg mov repz mov fimull and mov lock (bad) cmc and (bad) fwait sub cli jne pop xchg ret xchg addr16 pop push nopl lods clc jle insb push movsb sbb (bad) (bad) jno dec dec lahf mov hlt test out jo jmp jecxz cmovg outsl cmp popa cld fs ret fsubl loop dec insb jg sbb mov stos mov mov mov mov mov mov mov jns imul push enter lods pop lods enter or 