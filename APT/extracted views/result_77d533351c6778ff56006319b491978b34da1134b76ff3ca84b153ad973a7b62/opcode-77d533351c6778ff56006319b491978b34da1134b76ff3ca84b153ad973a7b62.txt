xchg mov jb push mov jb push jb inc mov jb mov mov jb int jb add jb xchg mov jb fwait mov jb mov mov jb xchg mov jb inc mov jb add jb xchg mov jb mov mov jb insb mov jb add jb xor movsb jb jne jb xchg mov jb jne jb out mov jb frstor jb adc add add adc inc add add add add mov add add add add add adc inc add add add add add add push inc add add add add add add (bad) std inc add add add add add add aaa incb add add add add add add fwait incb add add add add add add cld incb add add add add add add outsb incl add add add add add add loop inc add add add add add add inc add add add add add add mov inc add add add add add add sgdtl add add add add add fwait add add add add add add add add add add add add jg inc add add add add add add xor inc add add add add add add stc add add add add add add xchg add add add add add add add cmc add add pushf sub add or add add or add add add add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add add sti imulb push inc test ljmp lcall add add add add shrb add outsl insl bound arpl push add add add int3 xor add in xchg dec xchg inc inc and (bad) xor lods dec cltd mov add cmp xor or stos add xchg push add add add add push insl imul imul gs jb addr16 add add inc add add add imul addr16 add (bad) or add adc add add add xor add or add add in inc add lock add (bad) decl add add add add add add add add pop inc add adc add inc add add test add cltd add add add add cmpsb imul fs add jb popa gs insb gs outsl jb outsl insb fs add push push outsb arpl push add add add add enter add add cli inc add pusha add or inc add adc add inc add add add add mov in xchg dec xchg inc inc and adc add stos add add add add add push add add test xchg movsl sbb add add add add push add fist add sbb inc add add add mov dec test adc pusha dec add add add add std add add call add add add xchg xor cmpsb out jmp mov cmp add add add push add adc add add add hlt push inc add add push add add mov or loopne dec mov cmp rorb call add add add add cli add add in inc inc add add pop outsl outsl out clc in inc nop test inc sub add add add push add sti add add lock faddl add push add add ret add jecxz (bad) xor push add add push add cmc add add clc xor add push add add sub fwait out test inc orb xor add add add add push add in add add add and inc add add add rolb inc cmpsl aam mov mov add or add add add adc add add add or add add add add and push cmp inc mov aaa aad cmpsl cmc or add add add in add add or inc add add push add add adc inc pushf pop fs sbb cltd jle add add add add push add or add add add call add add add add add add add pop inc add add add add add add add add pop inc add add add push inc add add add add add push inc add add add adc add test inc add add add inc add add add add les add add add inc add add add inc add add add adc pop add add add add add inc add add add adc pop add add add add inc add add add inc add add add add jo inc add add add inc add add add adc pop add add add cmp inc add add add cmovno pop add add add add add add add cmovno pop add add push inc add add add inc add add add push inc add add add or add mov add dec or add or add lods or add add add add add add or add add add or pop add add add add inc add add add or pop add add add add inc add add add inc add add add or pop add add inc add add add inc add add add or pop add add add inc or pop add add pop inc add add add add push pop inc add add add inc add add add push inc add add add add add inc add add add add add movsb add add pop add add or inc add add add add add add add inc add add add add add add add add pop add add add dec add pop add add add pop add add add add add add add inc add add add add pop add add add add add add pop add add add pop add add add add add add add add pop add add add add inc add add add incl pop add add incb pop add add inc add add add incb pop add add std inc add add add add add inc add add add add mov add add inc add add add cld inc add add add sti inc add add add add inc sti inc add add add cli inc add add add add pop cli inc add add add inc add add add stc inc add add add inc add add add stc inc add add add clc inc add add add add add add add add clc inc add add add add insb testl sbb inc add add add testb add add add add inc add add add cmc inc add add add add dec cmc inc add add add add mov add add inc add add add inc add add add repz add add add add add add add add repnz add add add add add inc add add add repnz add add add icebp inc add add add inc add add add icebp inc add add add lock add add add add add lock add add add out inc add add add add pop out inc add add add out inc add add add out inc add add add inc add add add inc add add add in inc add add add add add inc add add add in inc add add add add add add add add inc add add add jmp add add add add add inc add add add ljmp xchg ljmp inc ljmp cld jmp add mov inc add add add inc add add add jmp add mov add add inc add add add inc add add add out add add add add add inc add add add out add add add add fs add add add out add add add in add add add add add add call add add add add add add add in add add add jecxz add add add add xor inc add add add loop add add add add pop loop add add add loop add add add loope add add add add add add inc add add add loopne add add add add sub inc add add add fild pop add add add push fild pop add add fild pop add add fiadd pop add add inc add add add fiadd pop add add fldl pop add add add add inc add add add faddl pop add add add pop faddl pop add add inc add add add fildl pop add add inc add add add inc add add add fiaddl pop add add inc add add add inc add add add flds pop add add add add inc add add add inc add add add fadds pop add add add add inc add add add xlat inc add add add add add inc add add add inc add add add add je inc add add add inc add add add aad add add add add add add add (bad) aam add add add inc add add add aam add add add roll pop add add add push roll pop add add inc add add add add pop rolb pop add add inc add add add roll pop add add inc add add add roll pop add add rolb add add adc inc add add add (bad) incl add add add adc add add add add add add iret inc add add add add add add add add add inc add add add add mov push es add inc add add add add add add inc add add add add add or add call je add add add adc cmp add add add push add add jle add scas add add add adc cmp add add add sbb add call je add add add adc inc add add add add add add jle add scas add add add add add add add add jle add add add add adc dec add add add add add add jle add insl scas add add add pop add add add add (bad) (bad) incl add add jle add jl add (bad) (bad) incl adc push add add add add add add jle add insl scas add add add adc push add add add add add add jle add insl scas add add add adc pop add add add add add add jle add add inc add add add add add add add jle add scas add add add adc pusha add add add add add add jle add scas add add add adc add add add add add call push scas add add inc add add add add add sbb add call push scas add add add adc insb add add add add add add jle add add add adc jo add add add adc add call inc scas add add add adc je add add add or add call inc scas add add add adc js add add add or add call cmpsb test or add inc add add add add add add add jle add test adc add add add add add add jle add lahf test pop add add adc test add add add pop add add jle add lahf test pop add add adc mov add add add sbb add call push scas add add inc add add add or add call fwait test or add inc add add add add add add jle add add iret inc add inc add pop add add inc add (bad) (bad) incl add add add add cmpsb add inc add (bad) (bad) jmp sub sub sub inc sub push sub popa sub outsb sub jnp inc add sub mov sub mov sub (bad) sub jecxz inc add sub std sub or inc add sub and inc add sub sub dec sub pop sub sub jb inc add inc add inc add sub shrb add sub fisubrl inc add sub hlt sub add inc add sub sbb inc add sub xor sub dec sub pop sub imul inc add sub popf sub stos sub mov inc add sub shrl inc add sub jmp inc add sub add sub pop sub sub inc add sub inc sub push sub add add pop es add and and inc add adc adc sub subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add adc inc add add add add (bad) (bad) incl add add enter adc add add add add sub add add test inc add add add sub add add fsubrs inc add add add sub sbb sub add mov push xor pop pop inc add add add inc add aad add adc xor add mov inc add add add inc add jle add add inc add add add add add mov jle add inc add add add adc cmp add mov inc add add add add add xor call sbb adc add add add mov inc add add add add jle add inc add add add adc inc add add add (bad) xor call sbb or add add add mov inc add add add inc add jle add sbb push add add adc dec add add add mov inc add jle add inc add add add adc push add add add in inc add jle add inc add add inc add add add add inc xor call sbb add add inc add add add mov inc add add add cmpsb add add add add adc pop add add add clc xor call sbb or add inc add add add mov inc add add add add jle add inc add add add adc add add add mov inc add jle add add inc add add add mov inc add add add cmpsb add add inc add add add add push jle add add inc add add add mov inc add add add xor cmpsb add add inc add add add add and inc add jle add sbb sbb add inc add add add mov inc add add add add jle add sbb add add inc add add add add fdivs inc add jle add sbb add add add sbb sbb add xor inc add jle add sbb sbb add inc add add inc add add add jle add inc add add add adc mov add mov inc add add add aaa inc add jle add inc add add add adc mov add mov inc add add dec cmp call sbb add add inc add add sbb adc add movsb cmp call sbb add add add adc xchg add add add add inc add jle add add add add adc cwtl add add add pop cmp call sbb add add add adc pushf add add add mov jle add add add add adc mov sbb add add adc inc add jle add inc add add add pop add inc add (bad) (bad) incl add add add add inc add jle add inc add (bad) (bad) incl add add sub pop sub and inc add adc adc add add inc add adc sub inc add adc sub add inc add adc sub inc add adc push sub add inc add adc sub inc add adc js inc add inc add adc sub inc add adc mov sub and inc add adc adc enter pop sub and inc add adc adc lock add inc add adc sub inc add adc sbb inc add adc sub inc add adc inc sub inc add adc sub inc add adc push sub and inc add adc adc nop sub inc add adc sub inc add adc mov sub and inc add adc adc loopne inc add inc add adc sub inc add adc or inc add inc add adc sub inc add adc xor inc add inc add adc sub inc add adc pop cs add inc add adc sub inc add adc subb add inc add adc sub inc add adc test inc add inc add adc sub inc add adc shrb inc add inc add adc sub inc add adc clc cs add inc add adc sub inc add adc and inc add inc add adc sub inc add adc dec das inc add inc add adc sub inc add adc jo inc add inc add adc sub inc add adc cwtl das inc add inc add adc sub inc add adc shrb add inc add adc sub inc add adc call sub and inc add adc adc adc inc add inc add adc sub inc add adc cmp inc add inc add adc sub inc add adc add add adc inc add add add repz add (bad) (bad) incl add add inc add inc add add add add add add add add push inc add add add add add add add cmpb add cmp add mov push inc inc add inc add add add cmp add inc add adc xor add mov inc add add add inc add jle add inc add add add adc cmp add mov inc add add add inc add jle add inc add add add adc cmp add mov inc add add les add jle add inc add add inc add add add mov inc add add add add add inc inc add jle add add add add add add jl inc add jle add add add pop add add sbb inc add (bad) (bad) incl add add add add inc inc add jle add inc add (bad) (bad) incl adc dec add add add insb inc inc add jle add add inc add add add mov inc add add add inc inc add jle add add add adc push add add add and inc add jle add add inc add add add mov inc add add add add add jle add push inc add add add add add faddl add jle add push inc add add add adc pusha add add add cmp call push inc add add add adc add add add xchg inc inc add jle add push inc add add add adc push sbb add add lock inc add jle add push inc add add inc add add add add dec inc inc add jle add pop inc add add add adc jo add mov inc add add add jle add inc add add add adc je add mov inc add add add inc add jle add inc add add add adc js add mov inc add add pusha inc inc add jle add inc add add inc add add add add mov jle add pop inc add add add adc addb add add sbb add jle add inc add add add adc test add mov inc add add add add jle add inc add add add adc mov add mov inc add add add add add inc inc add jle add inc add add add inc add add add inc add jle add inc add add add adc nop add add add mov add jle add inc add add inc add add inc add add add dec inc add jle add add add adc cwtl add add add inc dec inc add jle add add inc add add inc add add add cmpsb add add add adc mov sbb sbb add clc dec inc add jle add pop inc add add add adc movsb add add add push dec inc add jle add pop inc add add add add add inc add adc sub inc add adc lods cmp add inc add adc sub inc add adc aam inc add inc add adc sub inc add adc cld cmp add inc add adc sub inc add adc and inc add inc add adc sub inc add adc dec cmp add inc add adc sub inc add adc je inc add inc add adc sub inc add adc pushf cmp add inc add adc sub inc add adc les add inc add adc sub inc add adc in cmp add inc add adc sub inc add adc adc inc add inc add adc sub inc add adc cmp inc add inc add adc sub inc add adc fs inc add adc sub inc add adc mov inc add adc sub inc add adc mov inc add inc add adc sub inc add adc fdivrl inc add adc sub inc add adc add inc add inc add adc sub inc add adc sub inc add inc add adc sub inc add adc push ds add inc add adc sub inc add adc jl inc add inc add adc sub inc add adc movsb ds add inc add adc sub inc add adc int3 ds add inc add adc sub inc add adc hlt ds add inc add adc sub inc add adc sbb inc add inc add adc sub inc add adc inc aas inc add inc add adc sub inc add adc insb aas inc add inc add adc sub inc add adc xchg aas inc add inc add adc sub inc add adc mov cmp and inc add adc adc in inc add inc add adc sub inc add adc add pop add enter add add add (bad) (bad) incl add add inc add add add cmpsw add dec inc add add add inc add add add dec inc add add add dec inc add add add inc add dec inc add add add aaa inc add add add dec test add add add add mov inc add add add jle add add add adc cmp add mov inc add add add inc add jle add add add adc cmp add mov inc add add jo inc add jle add add inc add add add mov inc add add add push inc add jle add and or add inc add add add add sub add jle add and add add inc add add add mov inc add add add cmpsb add and sbb add inc add add add add loopne inc add jle add and add add inc add add add mov inc add add add inc add jle add and adc add inc add add add add cwtl push inc add jle add inc add add add adc pop add add add hlt push inc add jle add and add add add add add push push inc add jle add inc add add add adc pusha add add add lods push inc add jle add and add add add add add or call faddl adc add inc add add add mov inc add add add add jle add add inc add add add add rclb jle add add add add adc jo add mov inc add add add cmpsb add inc add add add adc je add mov inc add add add inc add jle add inc add add add adc js add mov inc add add add push inc add jle add add add add adc jl add mov inc add add add push inc add jle add add add adc addb add add mov add jle add add inc add add inc add add add push inc add jle add add inc add add sbb adc add inc push inc add jle add add add adc mov add mov inc add add add jle add add inc add add sbb or add cld push inc add jle add add inc add add inc add add add add add inc add jle add and add add add sbb add add mov inc add jle add and add add inc add add inc add add add pop inc add jle add and add add add adc mov sbb or add insb pop inc add jle add and add add add pop add inc add (bad) (bad) incl add add add add pop inc add jle add inc add (bad) (bad) incl add add dec inc add adc sub inc add adc pop dec inc add adc sub inc add adc orb mov inc add adc sub inc add adc test inc add adc sub inc add adc rorb add adc sub inc add adc clc dec inc add adc sub inc add adc and mov inc add adc sub inc add adc dec dec inc add adc sub inc add adc jo inc add adc sub inc add adc cwtl dec inc add adc sub inc add adc rorb dec inc add adc sub inc add adc call dec inc add adc sub inc add adc adc add adc sub inc add adc cmp add adc sub inc add adc pusha dec inc add adc sub inc add adc mov add adc sub inc add adc mov inc add adc sub inc add adc fmuls add adc sub inc add adc add add adc sub inc add adc sub add adc sub inc add adc push dec inc add adc sub inc add adc js inc add adc sub inc add adc mov dec inc add adc sub inc add adc enter mov inc add adc sub inc add adc lock inc add adc sub inc add adc sbb add adc sub inc add adc inc dec inc add adc sub inc add adc push dec inc add adc sub inc add adc nop dec inc add adc sub inc add adc add add add add add add (bad) (bad) incl add add add add add add add add pop inc add add add pop inc add add add pop inc add add add pop inc add add add pop inc add pop inc add add add add add add add add inc add inc add adc xor add mov inc add add add add jle add inc add add add adc cmp add mov inc add add add pop inc add jle add and add add inc add add add mov inc add add add inc add jle add inc add add add adc inc add add add js inc add jle add add add add adc inc add add add aam inc add jle add add add add adc dec add add add xor add jle add add add add adc dec add add add mov add jle add add add adc push add add add call jle add add add adc push add add add inc bound call and push add add adc pop add add add mov jle add add add adc pop add add add cld bound call and sbb add inc add add add mov inc add add add add add inc add jle add add inc add add add add mov inc add jle add and add add inc add add add mov inc add add adc call and sbb add inc add add add add insb fs add jle add and or add inc add add add mov inc add add add fs add jle add and add add inc add add add add and inc add jle add inc add add add adc js add mov inc add add add jle add inc add add add adc jl add mov inc add add fsubl add jle add inc add add inc add add sbb push add add inc add jle add and push add add adc test add mov inc add add add cmpsb add inc add add add adc mov add mov inc add add add inc add jle add add add add adc mov add mov inc add add add add add add jle add add add add sbb or add test inc add jle add inc add add inc add add inc add add add inc add jle add inc add add add adc cwtl add add add pusha push cmpsb add add add add adc pushf add add add mov jle add add inc add add sbb add add sbb add jle add add add pop add inc add (bad) (bad) incl add add add add add jle add inc add (bad) (bad) incl add add pop inc add add adc sub inc add adc add inc add add adc sub inc add adc sub inc add add adc sub inc add adc push pop inc add add adc sub inc add adc jl inc add add adc sub inc add adc movsb pop inc add add adc sub inc add adc int3 pop inc add add adc sub inc add adc hlt pop inc add add adc sub inc add adc sbb inc add add adc sub inc add adc inc pop inc add add adc sub inc add adc insb pop inc add add adc sub inc add adc xchg pop inc add add adc sub inc add adc mov pop inc add adc sub inc add adc in inc add add adc sub inc add adc or inc add add adc sub inc add adc xor inc add add adc sub inc add adc pop pop inc add add adc sub inc add adc test add add adc sub inc add adc lods pop inc add add adc sub inc add adc aam inc add add adc sub inc add adc cld pop inc add add adc sub inc add adc and inc add add adc sub inc add adc dec pop inc add add adc sub inc add adc je inc add add adc sub inc add adc pushf pop inc add add adc sub inc add adc les add add adc sub inc add adc in pop inc add add adc sub inc add adc adc inc add add adc sub inc add adc cmp inc add add adc sub inc add adc add add adc inc add add add (bad) incl add add inc add add add cmpsl add add add add subb add add mov add add add add mov add add add outsl inc add add add add inc add adc xor add mov inc add add add outsl inc add jle add sbb or add inc add add add add add insb outsl inc add jle add sbb push add add adc cmp add mov inc add add add outsl inc add jle add sbb sbb add inc add add add mov inc add add add add add inc add jle add sbb or add add add add xorb call sbb add add inc add add add mov inc add add add jo add jle add sbb adc add inc add add add inc add (bad) (bad) incl add add add add jno add jle add inc add (bad) (bad) incl adc push add add add int3 jno add jle add sbb sbb add inc add add add add sub add jle add sbb sldt add adc pop add add add test add jle add adc add inc add add add add loopne inc add jle add inc add add add adc pusha add add add cmp inc add jle add add add add adc add add add cwtl jae add jle add add add adc push sbb sbb add hlt jae add jle add add inc add add add add push je add jle add inc add add add adc jo add mov inc add add add cmpsb add add inc add add add add or add jle add add add adc js add mov inc add add add add jle add inc add add add adc jl add mov inc add add add add add jne add jle add add inc add add sbb pop add add inc add jle add add inc add add inc add add add inc add jle add incb pop add add adc mov add mov inc add add aam inc add jle add push inc add add inc add add inc add add add ja add jle add sti inc add add add adc nop add add add mov add jle add add add add adc xchg add add add call jle add cmc inc add add add adc cwtl add add add inc js add jle add add add adc pushf add add add mov jle add add inc add add sbb add add cld js add jle add add add adc movsb add add add pop jns add jle add jmp add add add push add adc sub inc add adc mov inc add push add adc sub inc add adc fsubrs add push add adc sub inc add adc add add push add adc sub inc add adc sub add push add adc sub inc add adc push imul push add adc sub inc add adc js inc add push add adc sub inc add adc mov push add adc sub inc add adc enter or add adc sub inc add adc lock push add adc sub inc add adc sbb or add adc sub inc add adc inc insb inc add push add adc sub inc add adc push push add adc sub inc add adc nop insb inc add push add adc sub inc add adc mov push add adc sub inc add adc loopne inc add push add adc sub inc add adc or add push add adc sub inc add adc xor add push add adc sub inc add adc pop insl inc add push add adc sub inc add adc subb or add adc sub inc add adc test inc add push add adc sub inc add adc shrb add push add adc sub inc add adc clc insl inc add push add adc sub inc add adc and add push add adc sub inc add adc dec outsb inc add push add adc sub inc add adc jo inc add push add adc sub inc add adc cwtl outsb inc add push add adc sub inc add adc shrb or add adc sub inc add adc call push add adc sub inc add adc add push add enter add add inc add (bad) (bad) incl add add inc add add add cmpsl add inc add add add add sub inc add add add inc add add add jp add jp add add add inc add add add test add and inc add add add mov inc add add add cmpsb add and or add inc add add add add add sbb add jle add and add add inc add add add mov inc add add add add jle add inc add add add adc inc add add add sarb add jle add and sldt add adc inc add add add sub inc add jle add inc add add add add mov inc add add add add add jle add inc add add add add add in inc add jle add inc add add add adc push add add add inc addl dec and sbb add inc add add add add pushf addl pop and adc add inc add add add mov inc add add add addl and adc add inc add add add add push (bad) inc add jle add add add add adc pusha add add add mov inc add jle add add add adc add add add or inc add jle add add inc add add add mov inc add add push jle add add inc add add add inc add (bad) (bad) incl add add add add addl jle add inc add (bad) (bad) incl adc jo add mov inc add add pop test call and or add inc add add add add mov inc add jle add add add adc js add mov inc add add add test call and pop add add adc jl add mov inc add add add add jle add and push add add adc addb add add enter call and sbb add inc add add inc add add add add add inc add jle add and add add add sbb sbb add addb add and sbb add inc add add inc add add add xchg call and or add inc add add sbb add add cmp cmpsb add and add add inc add add inc add add add cmpsb add inc add add add adc cwtl add add add lock call and push add add adc pushf add add add dec mov call and push add add adc mov sbb or add test inc add jle add inc add add add adc movsb add add add add inc add jle add add add add add add inc add inc add adc adc pop jp add inc add adc adc test add inc add adc adc lods jp add inc add adc adc aam inc add inc add adc adc cld jp add inc add adc adc and inc add inc add adc adc dec jnp add inc add adc adc je inc add inc add adc adc pushf jnp add inc add adc adc les add inc add adc adc in jnp add inc add adc adc adc inc add inc add adc adc cmp inc add inc add adc adc fs add inc add adc adc mov mov inc add adc sub inc add adc mov inc add inc add adc adc fdivrl mov inc add adc sub inc add adc add inc add inc add adc adc sub inc add inc add adc adc push jge add inc add adc adc jl inc add inc add adc adc movsb jge add inc add adc adc int3 jge add inc add adc adc hlt jge add inc add adc adc sbb inc add inc add adc adc inc jle add inc add adc adc insb jle add inc add adc adc xchg jle add inc add adc adc add or adc inc add add add (bad) incl add add add adc add add sbb add mov add add pusha sub add add fmuls add loopne inc add add add mov sbb mov add mov push mov cmp inc add add add inc add add add add mov inc add add push jle add add add adc cmp add mov inc add add add mov call sub or add inc add add add mov inc add add add popl call sub add add inc add add add mov inc add add add add jle add add add adc inc add add add fmuls cmpsb add sub adc add inc add add add mov inc add add add inc add jle add sub adc add inc add add add add nop nop inc add jle add sub sbb add inc add add add mov inc add add add nop inc add jle add sub or add inc add add add add dec xchg inc add jle add sub add add inc add add add mov inc add add add cmpsb add sub push add add adc pop add add add add cmpsb add sub adc add add add mov inc add add add add jle add inc add add add adc add add add mov jle add inc add add add adc push sbb or add adc inc add jle add sub or add inc add add add add jo inc add jle add add add add adc jo add mov inc add add add add add xchg inc add jle add inc add add add add add sub add add add add adc js add mov inc add add add cmpsb add inc add add add adc jl add mov inc add add add xchg inc add jle add add add adc addb add add cmp inc add jle add add inc add add inc add add add jle add add add adc mov add mov inc add add hlt xchg inc add jle add add inc add add inc add add add inc add jle add sub push add add adc nop add add add lods xchg inc add jle add sub or add inc add add inc add add add xchg inc add jle add sub sbb add inc add add sbb or add fs inc add jle add sub or add inc add add inc add add add add add xchg inc add jle add inc add add add sbb push add add inc add jle add sub push add add pop add inc add (bad) (bad) incl add add add add inc add jle add inc add (bad) (bad) incl add add mov pusha mov and inc add adc adc or inc add adc sub inc add adc xor inc add adc sub inc add adc pop mov pusha mov and inc add adc adc orb add adc sub inc add adc test inc add inc add adc sub inc add adc rorb inc add adc sub inc add adc clc mov pusha mov and inc add adc adc and inc add adc sub inc add adc dec mov pusha mov and inc add adc adc jo inc add inc add adc sub inc add adc cwtl mov pusha mov and inc add adc adc rorb add adc sub inc add adc call mov and inc add adc adc adc add adc sub inc add adc cmp add adc sub inc add adc pusha mov pusha mov and inc add adc adc mov add adc sub inc add adc mov inc add inc add adc sub inc add adc fmuls add adc sub inc add adc add inc add adc sub inc add adc sub inc add adc sub inc add adc push lea pusha mov and inc add adc adc js inc add inc add adc sub inc add adc mov mov and inc add adc adc enter pusha mov and inc add adc adc lock pusha mov and inc add adc adc sbb inc add adc sub inc add adc inc mov pusha mov and inc add adc adc add add adc inc add add add inc add (bad) (bad) incl add add enter adc add add cmpsl add add nop sbb add add add add mov add mov add mov mov push sahf inc add add add add scas add sbb add adc xor add mov inc add add adc inc add jle add sbb add add inc add add add add add jo inc add jle add sbb add add inc add add add mov inc add add add sahf inc add jle add sbb add add add adc inc add add add sub cmpsb add sbb add add add adc inc add add add test cmpsb add sbb add add add adc dec add add add loopne inc add jle add sbb add add add adc dec add add add cmp inc add jle add sbb add add add adc push add add add cwtl mov cmpsb add sbb add inc add add add add hlt mov cmpsb add add inc add add add mov inc add add add add add inc add jle add add inc add add add add lods mov cmpsb add add inc add add add mov inc add add add mov cmpsb add inc add add add adc add add add mov cmpsb add add add add adc push sbb adc add shlb add inc add add inc add add add add sbb inc add jle add inc add add add adc jo add mov inc add add add inc add jle add inc add add add adc je add mov inc add add add mov cmpsb add add inc add add add mov inc add add xor add add inc add add add inc add (bad) (bad) incl add add add add cmpsb add inc add (bad) (bad) incl adc addb add add and cmpsb add add inc add add inc add add add add jle add add add adc mov add mov inc add add add movsl inc add jle add add add adc mov add mov inc add add add inc add jle add sbb add inc add add sbb sbb add nop cmpsb inc add jle add sbb add inc add add inc add add add cmpsb inc add jle add sbb add inc add add sbb adc add dec cmpsl inc add jle add sbb add inc add add inc add add add cmpsb add sbb add inc add add sbb pop add add test add jle add inc add add add adc movsb add add add pop test add jle add add add add mov inc add adc sub inc add adc mov inc add inc add adc sub inc add adc fcompl inc add adc sub inc add adc add inc add inc add adc sub inc add adc sub inc add inc add adc sub inc add adc push lcall and inc add adc adc jl inc add inc add adc sub inc add adc movsb lcall and inc add adc adc int3 lcall and inc add adc adc hlt lcall and inc add adc adc sbb inc add inc add adc sub inc add adc inc fwait inc add inc add adc sub inc add adc insb fwait inc add inc add adc sub inc add adc xchg fwait inc add inc add adc sub inc add adc mov cltd inc add adc sub inc add adc in inc add inc add adc sub inc add adc or inc add inc add adc sub inc add adc xor inc add inc add adc sub inc add adc pop pushf inc add inc add adc sub inc add adc test add adc sub inc add adc lods pushf inc add inc add adc sub inc add adc aam inc add inc add adc sub inc add adc cld pushf inc add inc add adc sub inc add adc and inc add inc add adc sub inc add adc dec popf inc add inc add adc sub inc add adc je inc add inc add adc sub inc add adc pushf popf inc add inc add adc sub inc add adc les inc add adc sub inc add adc in popf inc add inc add adc sub inc add adc add or adc inc add add add inc add (bad) (bad) incl add add leave inc add add add cmpsl add test add add inc add add add test add cmp add xor inc add test mov push lods inc add inc add add add add inc add adc xor add mov inc add add add lods inc add jle add add inc add add add add add sbb inc add jle add inc add add add adc cmp add mov inc add add add inc add jle add inc add add add adc inc add add add aam inc add jle add inc add add add add add xor cmpsb add add add add adc dec add add add mov cmpsb add add add inc add add add add call jle add add add adc push add add add inc mov add jle add add add adc push add add add mov jle add add inc add add add mov inc add add cld mov add jle add add add adc pop add add add pop mov add jle add and add inc add add add mov inc add add add cmpsb add and add inc add add add add adc cmpsb add and add inc add add add mov inc add add add add jle add and add inc add add add add enter call and add inc add add add mov inc add add add inc add jle add inc add add add adc je add mov inc add add add add add jle add es add add add add mov inc add add add mov add jle add es add add add adc jl add mov inc add add cmp add es add add inc add add sbb sbb add xchg mov add jle add es add add add pop add inc add (bad) (bad) incl add add add add mov add jle add inc add (bad) (bad) incl adc mov add mov inc add add add add add cmpsb add es add add add inc add add add mov add jle add add add add adc nop add add add cmp inc add jle add add add add adc xchg add add add cwtl mov add jle add add add add adc cwtl add add add hlt mov add jle add inc add add add adc pushf add add add push mov add jle add add add adc mov sbb or add lods mov add jle add add add adc movsb add add add or cmpsb add add add add cmp inc add adc sub inc add adc pusha test inc add adc sub inc add adc mov inc add adc sub inc add adc mov inc add adc sub inc add adc fsubrs inc add adc sub inc add adc add inc add adc sub inc add adc sub inc add adc sub inc add adc push stos inc add adc sub inc add adc js inc add adc sub inc add adc mov test add adc sub inc add adc enter mov adc sub inc add adc lock inc add adc sub inc add adc sbb inc add adc sub inc add adc inc stos inc add adc sub inc add adc push test add adc sub inc add adc nop stos inc add adc sub inc add adc mov test add adc sub inc add adc loopne inc add adc sub inc add adc or add adc sub inc add adc xor add adc sub inc add adc pop lods inc add adc sub inc add adc subb and inc add adc adc test inc add adc sub inc add adc shrb add adc sub inc add adc clc lods inc add adc sub inc add adc and inc add adc sub inc add adc dec lods inc add adc sub inc add adc jo inc add adc sub inc add adc cwtl lods inc add adc sub inc add adc add or adc inc add add add repnz add (bad) (bad) incl add add inc add add jo cmpsl add mov add les inc add add add mov add in inc add add add mov add in inc add add add add inc add add add push test add es add adc xor add mov inc add add add add jle add es add add add adc cmp add mov inc add add add mov cmpsb add inc add add add adc cmp add mov inc add add and inc add jle add inc add add inc add add add mov inc add add cmpb add inc add add inc add add add add fdivrl cmpsb add inc add add add adc dec add add add cmp cmpsb add daa inc add add add adc dec add add add xchg mov cmpsb add daa inc add add add adc push add add add lock cmpsb add inc add add add adc push add add add dec rolb jle add add add add adc pop add add add test inc add jle add inc add add add pop add add inc add (bad) (bad) incl add add add add inc add jle add inc add (bad) (bad) incl adc pusha add add add cwtl roll jle add add add adc add add add hlt roll jle add inc add add add add mov inc add add add inc add jle add add inc add add add add lods ret call daa inc add add add adc jo add mov inc add add or inc add jle add add inc add add add add fs inc add jle add add inc add add add mov inc add add add ret inc add jle add add add adc jl add mov inc add add add inc add jle add daa inc add add add adc addb add add js inc add jle add daa inc add add add adc test add mov inc add add add les call daa inc add add add adc mov add mov inc add add add add add lds call daa inc add add add inc add add add cmpsb add daa inc add add add adc nop add add add call jle add sub add add inc add add inc add add add add jle add sub or add inc add add sbb adc add add add add jle add sub adc add add inc add add add movb jle add sub pop add add adc mov sbb adc add pop movl cmp inc add add add adc movsb add add add mov inc add jle add add add add add add mov inc add adc sub inc add adc or inc add add adc sub inc add adc xor inc add add adc sub inc add adc pop mov inc add adc sub inc add adc test inc add adc sub inc add adc lods mov inc add adc sub inc add adc aam inc add add adc sub inc add adc cld mov inc add adc sub inc add adc and inc add add adc sub inc add adc dec mov inc add adc sub inc add adc je inc add add adc sub inc add adc pushf mov inc add adc sub inc add adc les inc add adc sub inc add adc in mov inc add adc sub inc add adc adc inc add add adc sub inc add adc cmp inc add add adc sub inc add adc fs inc add adc sub inc add adc mov inc add adc sub inc add adc mov inc add add adc sub inc add adc fdivrl inc add adc sub inc add adc add inc add add adc sub inc add adc sub inc add add adc sub inc add adc push mov inc add adc sub inc add adc jl inc add add adc sub inc add adc movsb mov inc add adc sub inc add adc int3 mov inc add adc sub inc add adc hlt mov inc add adc sub inc add adc sbb inc add add adc sub inc add adc inc mov inc add adc sub inc add adc hlt adc hlt inc add (bad) (bad) incl add add adc and fs imul or add or fs add add inc add add add add add add add add add and (bad) (bad) (bad) (bad) js inc add add add add add incl add add add push add (bad) (bad) decl inc add add add add cmpsl add incl add add add inc add (bad) (bad) decl inc add inc add add add incl add add add inc add (bad) (bad) decl inc add inc add add add cmpsl add incl add add add inc add (bad) (bad) decl inc add add add cmpsl add incl add add add add (bad) (bad) decl inc add add add incl add add add (bad) decl inc add add shlb add incl add add add (bad) (bad) decl inc add add add cmpsw add incl add add add (bad) (bad) decl inc add add add cmpsw add incl add add add add (bad) (bad) decl inc add add pusha cmpsw add incl add add add inc add (bad) (bad) decl inc add iret inc add add add sbb add add add or add add add cmp pop add jae add jae pop add push add add jae imul add jo pop add add add jb add add xor add add and push add add add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add arpl jb outsl add outsl add je and push add jae jne popa add add je jne add outsl add add cmp cmp cmp inc add add add outsb add add jae pop add jns jae je add xor xor cmp inc add add add outsb add add jae pop add jns jae je add cmp inc add add add outsb add add jae cmp add add cmp pop add imul outsl add jae pop add jns jae je add xor xor cmp inc add add add outsb add add jae cmp inc add add add outsb add add jae pop add jns jae je add xor xor pop add bound add cmp inc add add add outsb add add jae pop add jns jae je add xor xor pop add imul outsl add jae push add ja add push add add add add add add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add jns jo add add outsl add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add add push add dec add add outsb add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add arpl jb outsl add outsl add je and push add jae jne popa add add je jne add outsl add add cmp cmp pop add add add outsl insl bound arpl push add imul insl insl imul add bound outsl insb outsl jne cmp add add jb imul add add inc fs jae imul jb add add dec outsl outsb je jb jne jne add je jb popa insb imul insb imul jne popa outsl xor popa jo gs add push je movsl insb imul outsb jae je je outsb add add xor lods dec cltd mov add xor outsb into add inc mov out lahf or push in xchg dec xchg inc inc and fsubrl and mov aaa cmp cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add add add xor inc add add add add add add add add push inc add cmpsb add xor add add xor add or add imul gs xor add add push add add insb dec outsl jbe dec gs outsl jb add add rolb rcl inc add add in inc add or je jmp push mov call jmp add add add add gs xor add add add gs dec outsb jne add roll and inc add add lock inc add or je jmp push mov call jmp add add outsb jne push jb jo inc js add add sbb inc add inc add add cld push inc add or je jmp push mov call jmp add add add add imul inc inc inc add add rolb mov inc add add or inc add or je jmp push mov call jmp add add add add inc popa fs jne gs jb je push je add add rolb clc roll add add adc inc add or je jmp push mov call jmp add add add add imul or add inc gs imul outsl jb add add inc add add and inc add or je jmp push mov call jmp add add add add outsb insl insl cs insb add add add add imul jb jo jb dec gs fs add inc add add sub inc add or je jmp push mov call jmp add add add add je gs outsl popa jb dec popa jns jne dec popa insl gs add sbb inc add rolb add add cmp inc add or je jmp push mov call jmp add add add insl outsl jne gs gs outsb je sbb inc add add add inc pop inc add or je jmp push mov call jmp add add add inc insb outsl jae inc imul rolb mov inc add add push pop inc add or je jmp push mov call jmp add add add add data16 je imul addr16 js add inc rolb int3 roll add add pop pop inc add or je jmp push mov call jmp add add add add add add dec outsb push arpl add sbb inc add inc add add push add add add add or je jmp push mov call jmp add add outsl outsb jbe jb inc gs jne je outsl arpl add add rcl add inc add add je inc add or je jmp push mov call jmp add add add add je insb imul push imul sbb inc add add adcb add or je jmp push mov call jmp add add add add insl xor cs insb add add insl insl inc gs popa outsb imul je add add cld aam add add mov inc add or je jmp push mov call jmp add add outsl insb jns gs dec jne inc add add inc rolb pop aad add add cwtl pop inc add or je jmp push mov call jmp add add add add arpl outsb jne popa imul add add add fs popa je add in dec lcall pop sbb inc add add movsb pop inc add or je jmp push mov call jmp add add add add fs outsl arpl add add inc add add mov inc add or je jmp push mov call jmp add add imul cs add add adc add inc outsl arpl outsb je jb jo jb imul inc add inc add add mov add add add add or je jmp push mov call jmp add add add add js gs gs popa jo inc add xchg rolb lods (bad) inc add add enter mov or je jmp push mov call jmp add add add add je bound arpl jo add add add (bad) inc add add aam inc add or je jmp push mov call jmp add add add add je jne jb outsb je push dec add rcl add inc add add loopne inc add or je jmp push mov call jmp add add add add je outsb jne gs jne je je insl add add add sbb inc add add in pop inc add or je jmp push mov call jmp add add add add jbe jo xor add add sldt add je gs imul add fcom inc add xlat inc add add clc pop inc add or je jmp push mov call jmp add add gs gs jo popa je inc add add rcl add fadds add add add inc add or je jmp push mov call jmp add add add add je outsl insb jns imul inc rolb js inc add add adc inc add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add pop add add je arpl add fadds aam inc add add sbb inc add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs je insb dec popa outsb fs gs add rcl add inc add add sub inc add or je jmp push mov call jmp add add add add xor inc add or je jmp push mov call jmp add add add add outsl jae dec gs inc imul inc add add inc sbb add add add add or je jmp push mov call jmp add add add push gs popa jbe dec gs add fadds loopne inc add add dec sbb add add add add or je jmp push mov call jmp add add add add je jb imul inc add rcl add inc add add pop sbb add add add add or je jmp push mov call jmp add add add add popa jae push popa jo add add rolb insb fiaddl add add sbb add add add add or je jmp push mov call jmp add add add add gs je inc arpl insb gs je jb popa bound add roll mov inc add add jo inc add or je jmp push mov call jmp add add add push jb jo jb push popa jo add add add js jb gs outsl outsb je outsl insb inc gs imul add rolb add inc add add jl inc add or je jmp push mov call jmp add add add push gs insb outsl jae dec gs rcr add add add mov inc add or je jmp push mov call jmp add add add inc jb popa je push arpl popa bound outsl outsb je gs jne arpl add add add xchg sbb add add add add or je jmp push mov call jmp add add add add inc push sbb inc add fildl add add mov add add add add or je jmp push mov call jmp add add add add jb fs insb add add add gs gs outsl outsb outsb arpl outsb inc add cmp inc add inc add add lods sbb add add add add or je jmp push mov call jmp add add popa insb imul je add add roll xchg faddl add add mov add add add add or je jmp push mov call jmp add add add dec outsl arpl push outsb insb outsl arpl push fs insb imul add faddl add add les inc add or je jmp push mov call jmp add add add inc outsl outsb outsb arpl push jb outsb je jb insb add inc add add rcrb inc add or je jmp push mov call jmp add add add add inc imul je js add roll js inc add add fcompl inc add or je jmp push mov call jmp add add gs jbe inc jb je arpl push arpl outsb add add rcl add fldl add add call add add add add or je jmp push mov call jmp add add add add jae je jb outsb je jb add add add fiadd add add hlt sbb add add add add or je jmp push mov call jmp add add add add je outsb jne je insl push arpl roll pop fiadd add add add inc add or je jmp push mov call jmp add add add add ja outsb imul arpl add push fs outsb imul roll mov add or inc add or je jmp push mov call jmp add add gs arpl push arpl add inc rolb clc fiadd add add sbb inc add or je jmp push mov call jmp add add add add je jne bound inc outsl jb popa je add add rcl add inc add add and inc add or je jmp push mov call jmp add add gs popa jae inc jb outsl jb add add rolb mov inc add add xor inc add or je jmp push mov call jmp add add add add gs imul add add inc add add cmp inc add or je jmp push mov call jmp add add jb gs gs jne arpl add add rolb sbb inc add add dec sbb add add add add or je jmp push mov call jmp add add add add imul push outsl insb jne add add or add inc imul inc and add add add inc add add push sbb add add add add or je jmp push mov call jmp add add add add gs je inc insb insb imul outsb dec outsb imul add add loopne add add pusha sbb add add add add or je jmp push mov call jmp add add add add je popa jo jne add sbb inc add loope add add insb sbb add add add add or je jmp push mov call jmp add add add jae gs insb xor cs insb add add add outsb inc js arpl jb jb add add add add add js inc add or je jmp push mov call jmp add add add jbe jb imul add add add push gs outsb jae popa insb insb inc imul mov inc add loope add add test inc add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs outsl fs rcl add loop add add nop sbb add add add add or je jmp push mov call jmp add add add add inc add add pushf sbb add add add add or je jmp push mov call jmp add add add add je imul add add add test inc add or je jmp push mov call jmp add add add add outsl ja imul jns arpl sbb inc add loop add add mov inc add or je jmp push mov call jmp add add add add gs popa outsb arpl inc outsl outsb outsb arpl outsb inc add add inc add inc add add rcrb add or je jmp push mov call jmp add add add jo push add push outsb push jne jb add insb jecxz add add add int3 sbb add add add add or je jmp push mov call jmp add add add add je jb outsb je jb jb jbe jb add add add add fcomps inc add or je jmp push mov call jmp add add outsl insl fs xor cs insb add add or inc add add add in inc add or je jmp push mov call jmp add add add inc gs jns inc outsl insb outsl jb sbb inc add inc add add lock add add add add or je jmp push mov call jmp add add add add je inc dec dec outsl fs inc rolb xchg in add add cld sbb add add add add or je jmp push mov call jmp add add add add jae jb dec outsb jne je insl inc add roll fsub inc add add or inc add or je jmp push mov call jmp add add add add je jae jb bound arpl outsw jb popa je outsl outsb inc add add roll and inc add add adc inc add or je jmp push mov call jmp add add add insl imul dec inc add inc add add and inc add or je jmp push mov call jmp add add add add je popa jo gs insb popa addr16 add and dec test adc pusha dec inc rolb mov add sub inc add or je jmp push mov call jmp add add add add je outsl insb outsl jb jo arpl add inc rolb adc inc add add cmp inc add or je jmp push mov call jmp add add add add addr16 imul pop loope add inc add add inc sbb add add add add or je jmp push mov call jmp add add add add je inc inc js sbb inc add add push sbb add add add add or je jmp push mov call jmp add add add add jae push jne je gs popa add roll fsub inc add add pop sbb add add add add or je jmp push mov call jmp add add outsb insb outsl arpl imul add rolb and inc add add push add add add add or je jmp push mov call jmp add add add add je jns je insl inc gs jne je popa outsb addr16 inc add cwtl xor inc mov test ss mov jb jne insb jns add rolb insb out add add je inc add or je jmp push mov call jmp add add add add popa jo outsl arpl add add rolb fsub inc add add sbbb add or je jmp push mov call jmp add add add add gs inc inc insb push popa jb insl add add roll sbb inc add add mov inc add or je jmp push mov call jmp add add add insl imul arpl rolb fs add cwtl sbb add add add add or je jmp push mov call jmp add add add add insb imul je insl add sbb inc add add movsb sbb add add add add or je jmp push mov call jmp add add add add je imul je add inc rolb lock add mov inc add or je jmp push mov call jmp add add add add push outsb imul imul add cmp daa sbbl loopne add add sbb inc add jmp add mov add add add add or je jmp push mov call jmp add add insb outsl jae push jb outsb je jb add add add add enter mov or je jmp push mov call jmp add add add add je outsl jb fs jb outsb jae outsl jb add add add jmp add aam inc add or je jmp push mov call jmp add add add add outsb fs js arpl popa bound add add inc add add loopne inc add or je jmp push mov call jmp add add add add gs je inc dec inc push popa je gs inc jb jae add add add add add in sbb add add add add or je jmp push mov call jmp add add add add gs je inc imul jns add add rcl add ljmp clc sbb add add add add or je jmp push mov call jmp add add add add outsb fs imul inc add add popa addr16 outsb add add sbb inc add jmp add add add inc add or je jmp push mov call jmp add add add add je gs outsl popa jb push je je add add sbb inc add add add adc inc add or je jmp push mov call jmp add add add inc fs insl jo je imul insb gs sbb inc add add sbb inc add or je jmp push mov call jmp add add add add js jb gs outsl outsb je outsl insb inc gs imul add inc add add sub inc add or je jmp push mov call jmp add add jo outsb inc jbe outsb je outsl add add rcr add add add xor inc add or je jmp push mov call jmp add add add add fs jo popa je push gs jne arpl add rcl add add inc sbb add add add add or je jmp push mov call jmp add add add add insb imul imul add fadds call add dec sbb add add add add or je jmp push mov call jmp add add popa jbe dec jne inc insb outsl jae add add xchg rolb xor inc add add pop sbb add add add add or je jmp push mov call jmp add add add add outsl jae inc jbe outsb je outsl add add fadds js inc add add sbb add add add add or je jmp push mov call jmp add add add add gs je dec arpl dec outsb imul sbb inc add in inc add add jo inc add or je jmp push mov call jmp add add add add outsb fs outsb jbe jb outsb insl outsb je je imul loope add inc add add jl inc add or je jmp push mov call jmp add add add add outsb inc jbe outsb je add rcl add add add mov inc add or je jmp push mov call jmp add add add add ja imul outsl outsb outsl insl add add insb imul add rolb mov add xchg sbb add add add add or je jmp push mov call jmp add add add add insl push gs outsl insl jo jae je outsl outsb push imul aam add out inc add add mov add add add add or je jmp push mov call jmp add add add add outsl bound inc gs je insl dec popa insl gs add rcl add inc add add lods sbb add add add add or je jmp push mov call jmp add add popa imul outsb je jb push add add dec (bad) inc add add mov add add add add or je jmp push mov call jmp add add add add fs je insl inc add add rcl add out inc add add les inc add or je jmp push mov call jmp add add add add outsl jae inc insb imul add sbb inc add lock add add rcrb inc add or je jmp push mov call jmp add add add add je imul imul je outsl jb je add add add add fadds jo inc add add fcompl inc add or je jmp push mov call jmp add add add dec outsl outsl imul jb jbe insb gs imul popa insl gs add fadds enter add add call add add add add or je jmp push mov call jmp add add add inc insb outsl bound push outsb imul inc add inc add add hlt sbb add add add add or je jmp push mov call jmp add add add add imul inc insb outsl jae add inc add add add add or je jmp push mov call jmp add add add add insl inc gs popa outsb imul je outsl jne je add add aam add add or inc add or je jmp push mov call jmp add add add add je jb jbe je dec bound arpl arpl imul fadds cld icebp inc add add sbb add or je jmp push mov call jmp add add js jb arpl outsl outsb inc add add pop loope add inc add add and inc add or je jmp push mov call jmp add add add add jo arpl inc inc insb push popa jb insl add roll cwtl repnz add add xor add or je jmp push mov call jmp add add jae popa fs outsl fs je add add rcl add repnz add add cmp inc add or je jmp push mov call jmp add add add add gs push gs imul arpl arpl imul add repz add add dec sbb add or je jmp push mov call jmp add add add add outsb gs je inc outsl outsb jae insb gs je insb inc jbe outsb je add add rolb jl inc add add push sbb add or je jmp push mov call jmp add add add dec outsl imul inc add roll (bad) repz add add pusha sbb add or je jmp push mov call jmp add add gs outsb addr16 push imul inc add inc add add insb sbb add or je jmp push mov call jmp add add add add je jne jne fs outsl insl jo gs outsl outsb push je je jae add rcl add add add js inc add or je jmp push mov call jmp add add add add imul add xchg rolb mov inc add add test add or je jmp push mov call jmp add add add add addr16 gs outsl jb dec gs add rcr add hlt inc add add nop sbb add or je jmp push mov call jmp add add add push insb jae gs popa insb jne add rolb cmp inc add add pushf sbb add or je jmp push mov call jmp add add add add insb jns imul inc rolb xor add add test inc add or je jmp push mov call jmp add add add add insb insb push popa je add add push je outsb imul je addr16 outsb gs inc rolb (bad) cmc inc add add mov inc add or je jmp push mov call jmp add add add add insl push gs outsl outsb jbe jb imul jne add cld aam add testb add rcrb mov or je jmp push mov call jmp add add add add inc gs push je jb insb popa arpl outsb je add add inc add add int3 sbb add or je jmp push mov call jmp add add add add je imul add roll enter add add fcomps add or je jmp push mov call jmp add add add add je outsl jns jne jae jb add sbb inc add inc add add in inc add or je jmp push mov call jmp add add imul gs jb dec gs fs add add inc add add lock add or je jmp push mov call jmp add add add add imul outsb je outsl insb add rolb movsb testl cld sbb add or je jmp push mov call jmp add add add dec jo outsb inc popa arpl jo jbe outsb je outsl addr16 add fadds in testl or add add add mov or je jmp push mov call jmp add add add add je gs inc imul js add inc rolb cmp inc add add adc inc add or je jmp push mov call jmp add add add add je popa jbe inc imul add add or inc add add and add add add mov or je jmp push mov call jmp add add add add gs add rcl add clc inc add add sub inc add or je jmp push mov call jmp add add add add insl inc gs outsl outsb je js add add aam add stc inc add add cmp add add add mov or je jmp push mov call jmp add add add add gs gs jns je insl push imul data16 cmpsb jb gs xchg rolb pop stc inc add add inc sbb add add add mov or je jmp push mov call jmp add add add add jbe dec jne dec gs popa add xchg rolb mov inc add add push sbb add add add mov or je jmp push mov call jmp add add add add jbe dec jne inc gs gs popa jo inc add xchg rolb clc stc inc add add pop sbb add add add mov or je jmp push mov call jmp add add add add je outsl jb fs jb outsb jae outsl jb add add add add add push add add add add or je jmp push mov call jmp add add add add jb popa je add add rcl add add je inc add or je jmp push mov call jmp add add add inc gs jne jb outsb je jb arpl jae fs rolb aam inc add add sbbb add add add or je jmp push mov call jmp add add add add je insb popa jae dec outsb outsw inc add add insb cmpsb jae imul gs jae add roll and inc add add mov add add add mov or je jmp push mov call jmp add add add add outsl bound inc fs je insl inc add rcl add add add cwtl sbb add add add mov or je jmp push mov call jmp add add add add je insb addr16 je insl push gs inc add roll (bad) sti inc add add movsb sbb add add add mov or je jmp push mov call jmp add add add push popa imul insb gs bound arpl rolb or inc add add mov inc add or je jmp push mov call jmp add add add add gs je push arpl outsb add add add inc add add mov add add add add or je jmp push mov call jmp add add add add arpl jae push outsb fs jne imul add add fadds mov add enter mov or je jmp push mov call jmp add add add add outsb jae popa je inc arpl insb gs je jb add add roll hlt cld inc add add aam inc add or je jmp push mov call jmp add add add push outsl insb jns outsl insb jns outsl outsb add add add add loopne inc add or je jmp push mov call jmp add add add add je insb je add add add in sbb add add add mov or je jmp push mov call jmp add add add push jb je push jb imul imul inc add std inc add add clc sbb add add add mov or je jmp push mov call jmp add add add add imul arpl jne je popa insl gs add rcr add inc add add add inc add or je jmp push mov call jmp add add add add je data16 outsl outsl je outsl outsb imul je jae add fadds pusha incb add add adc inc add or je jmp push mov call jmp add add add add jbe push outsl inc js add add jb gs insl gs outsb add jne add add add add add add sbb inc add or je jmp push mov call jmp add add add add jo jb outsl outsb popa je inc fs insb imul outsl ja add roll or inc add add sub inc add or je jmp push mov call jmp add add add add gs jb outsl insl insl inc jb outsl jb add rolb pusha incl add add xor inc add or je jmp push mov call jmp add add add add je popa imul outsw add rolb test inc add add inc push inc add or je jmp push mov call jmp add add imul jae je add add inc add add dec push inc add or je jmp push mov call jmp add add add inc insb addr16 imul add roll cmp inc add add pop push inc add or je jmp push mov call jmp add add outsb fs gs popa addr16 add add jb fs outsb popa je add roll jl inc add add fs inc add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs jne jo je push add rcl add add add add jo inc add or je jmp push mov call jmp add add add add inc insb insb outsl arpl add add rolb sbb inc add add jl inc add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb imul inc outsl jb popa je add roll pusha add add add mov inc add or je jmp push mov call jmp add add add insl imul arpl push popa je push rolb mov inc add add xchg push inc add or je jmp push mov call jmp add add add push gs outsl jbe inc outsl outsb je gs jne arpl add add add add add mov add add add add or je jmp push mov call jmp add add add add imul add inc gs jb insb gs add inc rolb dec add add add lods push inc add or je jmp push mov call jmp add add add add gs je dec popa je push push inc rolb pushf add add add mov add add add add or je jmp push mov call jmp add add add dec outsl popa fs je imul inc add add add add les inc add or je jmp push mov call jmp add add add add inc insb imul inc outsl jb popa je jbe imul sbb inc add inc add add rcrb inc add or je jmp push mov call jmp add add add add je dec inc inc outsl insb outsl jb popa bound add add add add fcompl inc add or je jmp push mov call jmp add add add add outsl ja ja gs outsl jo jo add roll int3 add add add call add add add add or je jmp push mov call jmp add add add add outsl bound dec gs outsl jb push je je jae add rolb adc inc add add hlt push inc add or je jmp push mov call jmp add add imul outsb je outsl jne arpl add add rcr add inc add add add inc add or je jmp push mov call jmp add add add add je popa jae inc arpl gs outsl jo jo add roll mov inc add add or inc add or je jmp push mov call jmp add add add add je outsl insb jns imul inc rolb cld add add add sbb inc add or je jmp push mov call jmp add add add add jbe dec jne inc gs outsl jae je outsl outsb add xchg rolb inc add add and inc add or je jmp push mov call jmp add add add add outsl outsl jae push imul insl popa je add inc rolb nop add add xor inc add or je jmp push mov call jmp add add inc dec popa jo je imul add rolb faddl add cmp inc add or je jmp push mov call jmp add add outsb je jb jb je arpl push arpl outsb add add rcl add inc add add dec pop inc add or je jmp push mov call jmp add add add add popa fs imul rolb je inc add add push pop inc add or je jmp push mov call jmp add add gs insb addr16 je insb dec inc add add sbb inc add add pusha pop inc add or je jmp push mov call jmp add add add inc fs gs popa je inc add roll add inc add add insb pop inc add or je jmp push mov call jmp add add add add popa jo imul rcl add add add js inc add or je jmp push mov call jmp add add add add outsl ja jne jae jb add jae imul add gs jo outsl jb gs gs add add sbb inc add add test inc add or je jmp push mov call jmp add add add add insb insb dec jae inc imul sbb inc add pop inc add add nop pop inc add or je jmp push mov call jmp add add add add gs je push imul inc add roll xor inc add add pushf pop inc add or je jmp push mov call jmp add add add add insl dec outsb jae popa insb insb dec dec inc inc add cld aam add add add test inc add or je jmp push mov call jmp add add add add je push inc gs je jo add add roll les inc add add mov inc add or je jmp push mov call jmp add add add add je outsb push inc imul imul add inc rolb adc inc add add rcrb add or je jmp push mov call jmp add add add add je popa insb gs gs outsb je imul rolb or add add int3 pop inc add or je jmp push mov call jmp add add add add je push push outsl imul add xlat inc add add fcomps inc add or je jmp push mov call jmp add add add add ja arpl add add sbb inc add or add add in inc add or je jmp push mov call jmp add add add add jae imul sbb inc add inc add add lock inc add or je jmp push mov call jmp add add arpl push imul inc rolb orb add add cld pop inc add or je jmp push mov call jmp add add add add je gs inc push je jb js jb inc add inc rolb enter add add or inc add or je jmp push mov call jmp add add add add outsb fs jb jbe jb gs popa add add jb jb outsb addr16 jne fs add inc add add adc inc add or je jmp push mov call jmp add add add add addr16 gs arpl sbb inc add add add and inc add or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne sbb inc add add sub inc add or je jmp push mov call jmp add add gs outsl outsb jae insb gs jne jae jb outsb outsw add add rcl add or add add cmp inc add or je jmp push mov call jmp add add add add jbe dec jne inc jb popa imul add add xchg rolb push or add add inc and add add add add or je jmp push mov call jmp add add add add addr16 jb popa je dec gs js add fadds pushf or add add push and add add add add or je jmp push mov call jmp add add add add insb imul add push imul outsb outsl ja gs popa addr16 add inc rolb in inc add add pop and add add add add or je jmp push mov call jmp add add add add insb jns outsl outsb add add inc add add push add add add add or je jmp push mov call jmp add add add add insb jns jb ja add add add add je inc add or je jmp push mov call jmp add add add add popa bound outsb jne je insl add sbb inc add or add andb add or je jmp push mov call jmp add add add add gs inc outsl insb outsl jb jo arpl add add add inc add add mov inc add or je jmp push mov call jmp add add add add insb outsl arpl gs imul bound add add fadds pop push inc add add cwtl and add add add add or je jmp push mov call jmp add add add add dec inc dec inc push jb arpl add add outsb gs jb add add outsl je jae add add roll test inc add add movsb and add add add add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul sbb inc add cmovno add add mov inc add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add rcl add inc add add mov add add add add or je jmp push mov call jmp add add add add je imul inc js inc js add add add add enter mov or je jmp push mov call jmp add add add add je bound arpl add add cmovno add add aam inc add or je jmp push mov call jmp add add add add jo push imul adc add add loopne inc add or je jmp push mov call jmp add add add add fs arpl jae inc outsb imul add jb popa insb imul fadds je inc add add in and add add add add or je jmp push mov call jmp add add add add outsb jae popa je dec gs popa add add sbb inc add adc add add clc and add add add add or je jmp push mov call jmp add add add add je gs push outsb add inc rolb sbb inc add add add inc add or je jmp push mov call jmp add add add add je outsl insl insl push jb jo jb imul rolb pop adc add add adc inc add or je jmp push mov call jmp add add add add je gs imul popa insl gs add rcr add add sbb inc add or je jmp push mov call jmp add add add add jne dec outsl outsb imul add add adc add add sub inc add or je jmp push mov call jmp add add gs jns gs popa add add jae jne bound jb add add roll cmp inc add add xor inc add or je jmp push mov call jmp add add add add jae popa addr16 outsl js js add add roll nop adc add add inc and add add add add or je jmp push mov call jmp add add jae popa fs gs fs je add add rcl add adc add add dec and add add add add or je jmp push mov call jmp add add add add je imul inc js inc js add add add adc add add pop and add add add add or je jmp push mov call jmp add add add add je jb jae dec jb inc js add inc rolb insb adc add add and add add add add or je jmp push mov call jmp add add add add inc jb gs popa je dec popa outsb fs add add roll mov inc add add jo inc add or je jmp push mov call jmp add add add add je jae jb gs jne je inc dec inc add push popa imul jae add add rcl add adc add add jl inc add or je jmp push mov call jmp add add add add jo jb outsl outsb popa je dec popa insl gs imul outsb je add fadds pop adc add add mov inc add or je jmp push mov call jmp add add add add insl inc gs jb jns outsl outsb je js add add aam add add xchg and add add add add or je jmp push mov call jmp add add gs jo popa je push outsb add add sbb inc add adc add add mov add add add add or je jmp push mov call jmp add add add add je inc dec inc push add add rcl add add add lods and add add add add or je jmp push mov call jmp add add add add gs insb xor add add add insl insl popa outsb fs imul addr16 add mov inc add add mov add add add add or je jmp push mov call jmp add add insb gs outsb add add sbb inc add or add add les inc add or je jmp push mov call jmp add add add add insb arpl imul add add push inc add add shlb inc add or je jmp push mov call jmp add add add add jne push gs jne arpl popa outsb addr16 addr16 add rcl add inc add add fsubl inc add or je jmp push mov call jmp add add add add je popa insb gs gs outsb je imul rolb mov add call add add add add or je jmp push mov call jmp add add add inc insb popa jae push imul roll add inc add add hlt and add add add add or je jmp push mov call jmp add add add add jne inc jb popa imul rcl add inc add add add inc add or je jmp push mov call jmp add add add add inc push dec add add add add jne push popa addr16 imul popa jb gs add inc add add or inc add or je jmp push mov call jmp add add add dec outsb jae jb dec outsb jne add roll call add sbb inc add or je jmp push mov call jmp add add imul outsl push jns je insl push imul rcl add inc add add and inc add or je jmp push mov call jmp add add push add add add add cmp add cmp add inc add add add add dec add add add push add add add push add add jne insb add add imul outsb add insl add cmp and add add add add mov sbb add inc add insb add and jbe add jae imul cmp and add add and add push add outsl add add je and jbe add jae imul cmp and add sbb add inc add insb add and data16 add jae cmp and add add adc add inc add insb add and dec add cmp and add push inc inc ss dec dec add add pop pop jbe popa dec gs add add add add jbe popa push je inc popa je pop pop jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add jbe popa push je inc outsl jo add add pop pop jbe popa push popa jb jne add jbe popa inc jb outsl jb jbe jb insb outsl ja add add add imul jae jb dec outsl jae jb fs insl jne xor add add jbe popa inc jb gs je add add pop pop jbe popa push je dec xor add jbe popa push je dec outsl jbe add add pop pop jbe popa dec xor je add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jb gs popa jb add add add add jbe popa inc jo xor add pop pop jbe popa dec xor jns add pop fs xchg push mov inc scas xor jg dec popf or pop lea jb xchg movsl sbb inc or cmpsl xchg inc mov mov and dec lods xor or stos add xchg jbe push jns outsb imul add push outsl jb imul add outsl outsb addr16 xor gs popa je push popa jae popa insb jo outsl addr16 insl insl gs add add push gs jae add add push imul dec outsl imul outsl jb outsb fs outsl add add je jns insb jns js insb add add jb imul je add add jne je imul push ja xor add add movsl jae imul push jo fs jae gs add outsl fs outsl outsb addr16 add push arpl insl popa je jae fs add add dec jbe jb popa insb jae imul push outsl arpl insb jo outsb jae outsl outsb outsb xor inc popa jae gs mov outsb gs jae arpl arpl je imul data16 jb outsl outsb imul jae add jo jb data16 outsb fs push fs fs jae jae popa imul push gs gs imul gs jae popa bound imul add push fs gs insb jae jb xor add outsb imul add inc imul aaa add add popa jne push add outsb imul gs add inc hlt inc fcomi sbb in mov movsl mov lret jne lods jmp sub fwait mov xchg xor cmpsb out jmp mov cmp xor mov mov in outsw jb insb cmpsb bound push jne ja jb add outsb outsb gs insb jns gs add add push jb je outsb jae inc insb imul imul push insb jns imul popa insb jae push imul je jbe xor dec jbe jo gs insb push jb add add jae popa bound jae outsb jae add add jne imul add addr16 jb jb add add je popa jo insb popa jb add outsl imul add jbe imul jae jne imul jae add ja popa je gs je imul add add fs add add outsb addr16 jne je outsl outsb add add je popa imul dec insb popa jae gs inc je jb bound je insb fs imul je js jae add gs insb insl outsl bound popa outsb xor add insl jne je jne add jns gs bound jae add add inc arpl outsl je insb jne fs add jae outsl jb popa outsb outsl imul xor inc movsl or and add inc lahf xor fdivrs mov or loopne dec mov cmp rorb call outsl push rolb or lcall jae outsl jo jb gs add add insb fs add jae gs outsb add inc gs insb outsl jne add add jbe gs jae jb add outsb insb imul add insb je jo arpl imul jae add je gs jne add add arpl cmpsb jae imul add je outsb je outsb jae add jb fs imul push movsl jb imul gs jae push movsl fs gs ja outsl fs jae add add inc data16 jb gs insb gs add push jbe outsb jae push jae add add je insl gs jp add push popa push add imul gs gs add imul popa jne gs gs outsb gs xor add gs popa je insl gs jb add push imul jb jbe gs gs add je imul push add jne outsb arpl add add jne jo imul outsl outsb jae add push imul outsb jbe jae imul add outsl insb popa outsb imul jns arpl imul outsb je add add fisttpl outsl ja inc cmpsb rcl inc mov inc xchg sbb mov dec sti notl xor outsl out clc in inc nop test inc sub cs ficoml insb or dec mov sti adc jb insl jo outsb je jns add data16 outsl insl insl gs jb gs arpl jo jb add add bound popa outsb arpl jbe insb jae jb add pushw fs outsb outsb jae add push outsl arpl gs xor add dec popa bound add add jbe bound imul jae xor jbe insb popa jb add jo jb insb imul imul imul add jb imul outsl outsb xor dec outsl fs jne imul gs add add jae jae gs popa data16 imul add bound popa jne add dec outsb fs popa arpl imul jns insb fs add dec outsl outsb imul jae add add jo jns popa jb push dec popa jb gs insb popa fs jb add bound insl gs add imul gs outsl jo gs add push outsb mov fs add jbe insb insb jns insb imul jb add insl popa imul add inc popa insb arpl insl outsb imul add add inc outsb push jb jae add lods insb pop jmp in inc mov pop push xchg mov scas leave inc lea or push stos xor cmpsl dec add jecxz (bad) xor xchg or loopne xlat movl popa addr16 add add push gs insb imul add fs outsl insb popa jb add dec jb imul add cmpsb bound xor add add fs jne fs jb add push gs cmpsb jae outsb je je jbe xor inc insb popa fs jbe je add arpl outsb je imul imul jae gs add add inc arpl outsl jo imul data16 gs add push je fs outsb jae add push outsb jne outsb fs add push imul gs fs imul insl insl imul imul add push outsb insl popa insb imul push jne outsl insb data16 push popa outsb gs popa add outsl jbe jae outsl outsb jae outsb fs addr16 outsb jae add add jae movsl jae add insl imul add jae jo jb je je outsl jne insb jns add addr16 outsl insl gs add add dec popa jb outsb outsb jae add add jb fs data16 outsb arpl outsb gs add outsl outsb jae imul (bad) inc dec adc movsl lea jecxz ljmp (bad) xor xor aad sub fwait out test inc orb xor jmp in inc das inc mov sahf (bad) push outsb jne popa outsb imul add add insl imul add push push jp inc outsb je popaw jae imul add je je fs xor add arpl popa arpl jne insb jns add imul bound fs add je jb jae jb outsb add add inc outsl imul outsb add arpl outsl jb outsb popa je outsl outsb xor inc jns popaw insb jae fs jae insb popaw insl gs jp outsb add add add add gs outsb je add add inc gs add insb outsl outsl jae jae add bound jae imul jb gs add add outsl je popa jb jb add outsb popa push fs inc cmpsb jb gs gs add jo push jae add add insb imul jae xor add insl jne gs add outsb fs add add outsb push jb add addr16 gs add arpl jo gs insb jns add add lret inc mov (bad) loop dec jbe in insl dec test cmp rolb inc cmpsl aam mov mov inc xchg push dec stos cmp and add push insl imul add push jb addr16 insl imul jb add add outsb jae outsb jae popa insb imul jbe jae imul outsb fs jb jbe gs add add inc insb outsl bound popa insb add add je je imul jns add add jae insb gs add add dec popa ja outsb outsl jae jae add jae gs insl imul gs add add insb imul add insb insl popa je jo jb gs add je gs add fs popa outsb imul add add imul imul outsb outsl je imul add jae jne je outsb add insl imul bound jae add jne addr16 imul add jns je insb outsl add add outsb fs jb bound gs add data16 jae push gs add jae data16 add add outsl ja gs imul add fs gs dec outsl outsb je popa imul jae popa bound jae add outsb fs jbe jb jae outsl insl jo imul jae add addr16 pop push lds xchg push loopne repz leave iret scas adc inc push and push cmp inc mov aaa aad cmpsl cmc adc decb pop jecxz mov outsl jb jae outsb imul add inc jne jo jb mov outsb jae add outsb popa add add dec gs outsb xor gs jo je add add inc push xor imul jo insb je cmpsb fs add push popa jb add add je add inc gs jb insb jae jae outsl jb outsb jae popa insb je imul inc outsb imul outsb fs dec movsl insb gs cmpsb gs xor push jb outsb outsl jae imul ja jb gs add bound imul jb insl popa outsb add add inc popa jae popa jb add gs arpl jne add push jne jbe jns add imul push outsb jae outsb add add push outsb jae je outsl outsb gs gs jo add add dec jb mov jb imul add add insb imul jae add add bound outsl jae je gs add add jae jae add arpl popa bound add popa outsb addr16 add add clc xlat or dec push sbb adc out add jae std inc xchg cmp jnp cmpsb push mov in sub pop fs sbb cltd jle (bad) int inc cmp dec fwait push mov mov insl outsl outsb addr16 add bound outsb imul jb imul outsb add add insl popa jb je add add outsb fs gs bound gs gs add add je insl outsl outsb outsl jne add arpl imul add add outsb fs jb outsb je add je jb jne insb gs jb add add push outsl jb add jae gs jp add dec outsb jbe jae imul gs jae inc outsl jb popa jb outsb jae add popa je outsl outsb jae gs outsb je add add inc popa ja jns outsl jne gs dec imul fs jb outsb jae add add dec outsl outsb jo jb insb jns gs add add je outsl js jae add add fs outsl outsb je outsl insb insb outsb jae add push jb bound fs je outsl jb imul jae insl gs popa jo outsb imul outsb je jb outsb jne jae add add push popaw insb fs fs add imul jne jb outsb arpl jns je addr16 add jae imul je insb bound gs cmpsb imul addr16 add dec xor sbb sub fwait out test inc orb xor std (bad) inc dec adc movsl lea jecxz ljmp iretw adc pusha rcll mov add add add insb imul add outsb outsl jo gs fs gs add add inc add add (bad) (bad) (bad) jmp outsl jo gs fs gs add clc push add or add aad add inc add add add add or inc je imul add or inc fs jns add add jae adc add add add add or imul bound fs adc inc gs outsb gs jae jae cmpsb je imul jle xchg add ja adc add add adc bound jae imul jb gs add or dec outsb imul imul les movb add add add add add outsb push jb add or inc jns insb popa outsb insb popa fs add or or roll adc add add add add arpl outsl jb outsb popa je outsl outsb xor add bound add or or add incl add add or push push jb gs add or dec outsl data16 popa outsb outsb xor add or adc add add add or inc outsl imul outsb add or imul jae add adc (bad) or pop adc add add add add or jae insl imul add add add add or notl adc add add add add or imul gs insb jns add or inc js outsl jae outsb gs add or or adc add add add add or imul je cmp add or outsl js insl popa je outsl outsb add or add push (bad) push adc add add add add push add push fs lldt addr16 imul outsb cmp add or ss adc add add add add gs or push outsb fs imul outsl add or or incl xor add or insb popaw insl gs jp outsb add or fs jns insb jae add adc adc or incl sub pop add imul or push push outsl jo imul test inc (bad) add or add add or inc outsl outsl je popa jb jb add or inc outsb imul insb popa fs add or adc add add add add adc add gs outsb je add or push arpl outsb gs or xor adc add add add add pop add fs add (bad) mov insl imul gs add or mov adc incl xor add adc push popa je jb jae jb outsb add add add outsb popa outsb data16 jne jb add pop sub or adc incl sub add adc add push jae add or inc jo insb outsl addr16 aaa add or adc adc add adc incl xor or push fs insb imul add outsl jb outsl outsb gs mov jae add add jae adc add add add add outsb fs add or push gs je outsb xor add add pop push add incl sub add push or push outsb jne popa outsb imul add push add imul sub adc add add or inc jns popaw insb jae fs add pop add bound je add add push mov push add add add sbb imul jae xor add or imul gs gs add adc adc incl sub add sbb add jb gs gs add or outsl jbe jb push add or adc add add add add push add arpl popa arpl jne insb jns add or popa data16 gs jae add or add sbb incl add add or inc insb insb outsl outsl jae jae add or push outsb jae outsb addr16 outsb add add or aad adc add add add add add gs add pop add outsb outsl outsb add add or sbb incl add int3 xor sbb jae push cmp inc mov aaa aad cmpsl cmc aas addr16 pop push lds xchg push loopne repz dec lods xor or stos add xchg xchg add add add add jo gs add outsl je outsb je popa je jae sbb add and and (bad) (bad) jmp add je outsb je popa je jae xor add add or add add add add pop add jae popa jb add or jne jo outsb jae imul push add add incl sub add add add insb gs cmpsb gs xor add pop add gs je jb add adc add add add incl das add add or dec jb mov jb imul add or popa jae imul add or xchg add add incl xor add add add imul verr addr16 popa fs jb gs add push mov sbb insb pop adc add add add add outsb jae je outsl outsb gs gs add outsb outsb imul and adc incl sub add push add push popa jb add or insl gs imul add add arpl add add add add pop add jb gs add lldt imul imul jae add adc or push jno adc add add add add sbb inc gs jb insb jae jae outsl jb outsb jae popa insb je imul add add popa insl insl gs outsl jb add adc add pop add add add add or push gs jo je add lldt imul jb gs add or sub dec or or incl xor add or imul jae add or insb jns outsl imul sbb pop adc add add add add or push jb outsb outsl jae imul add imul add or add add or incl sub add or add outsb popa add or push outsl jne gs cmp add adc add push pop adc or incl sub add je add adc inc data16 gs outsb imul fs add or adc (bad) or or incl add add or imul imul add insl imul or or adc add add or inc insb popa outsb addr16 add or inc popa insb cmpsb jae gs gs add add add push add add add add or push outsb arpl popa bound add or push popa jb jae je arpl aaa add or inc add add add add or jne gs arpl jne add lldt insb movsl outsb jae gs imul jmp aam or xor adc add add add add sldt jo jb mov outsb jae add or data16 outsl outsb imul adc adc add add add add sldt outsb imul outsb fs add or dec jbe jb imul sahf pop pop or add add adc incl sub add adc add jb insl popa outsb add or inc insb gs insl gs add or push call adc incl add add bound outsl jae je gs add or push outsl fs jne add cmpxchg xchg push xchg add adc incl sub add push or je outsb ja jb gs add or push jo outsl popa fs add push xchg adc add add adc add add push add jae jae add pop add insb insb outsl outsb jae add adc pop movl add add add add push add je jo insb je cmpsb fs add adc push imul je jo outsl addr16 outsl jb gs add add adc adc incl add add add dec gs add or imul je add or add push test adc add add pop add insb gs add or dec outsl outsb gs imul add add add mov add add add adc push imul fs outsb jae outsb add adc push popa outsb fs jne jae imul inc or xor adc add add add sbb add outsb xor add insl imul jo arpl add add add sbb incl add add dec xor sbb xor cmpsl dec add jecxz (bad) xor jmp in inc mov pop push xchg cmp xor or stos add xchg pushf add add add add je jb popa insb imul add jb outsl jb push sbb add and and (bad) (bad) jmp add jb outsl jb push xor or add add add add add add add add add push gs insb imul add adc inc insb gs outsb je jns addr16 gs gs add add lods or add incl sub add add add outsl outsb jae imul push fs popa jb gs add add add orl das add add or jne insl imul add or popa bound je jb outsb fs adc ficoml sub adc add add add add add jne gs outsb jae add or dec popa je gs outsb add outsl adc add or add incl sub add add outsb gs popa add or push imul add adc push adc incl sub add push or addr16 outsl insl gs add push add jp jns add add adc add add or insl imul imul add pop add je gs add adc adc push add add add add or inc imul popa addr16 add pop add imul add or add jp adc add add adc jne jae jo jb je je outsl jne insb jns add or inc gs outsb je jb jae add adc adc add or or incl sub add or add jae movsl jae add or dec outsb jne jae je aaa add push std push mov add incl xor adc inc outsl jb fs data16 outsb arpl outsb gs add or inc insl jo jb outsb jae add add sbb adc add add add add add jns addr16 fs push add imul outsb jae add or push or or or incl das add add fs jne fs jb add or dec jne gs outsb jae add or pop fmull mov adc incl xor add push or dec popa jb outsb outsb jae add sldt addr16 outsb addr16 imul gs add or adc das add add add add or dec jb imul add or push jne imul add or popf sets adc add add add add or arpl outsb je imul or data16 popa insl bound add and adc inc or adc (bad) incl xor add adc cmpsb jb bound jo jb add or push gs insb insb popa outsb je add add or adc push adc add add add add lldt jo cmpsb jae outsb je je jbe xor add push add outsb outsb gs jae imul xchg adc add add add adc add imul add or push gs outsl insb gs insl popa add add mov pop push adc add add or push outsb jne outsb fs or dec gs imul jae jae add add add adc adc incl das add add cmpsb bound xor add or inc popa jne jne gs add or or adc incl das add add or push outsb insl popa insb imul add or push outsb jb bound gs add adc ja rorl add add add or inc arpl outsl jo imul inc imul add add dec add push add add add add push add outsl insb data16 push add insb imul movb push sub add add sbb jo outsl jbe jae outsl outsb jae outsb fs addr16 outsb jae add push add outsl jb popa outsb imul out roll sbb incl das add add or push jb fs arpl add or push imul je outsl outsb add lfs adc add add add add or fs gs or push popa jo imul add loopne mov sbb incl das add add add popa fs jbe je add or outsl insb insb popa jb imul cmp push minps pop adc sbb incl add add dec xor sbb outsl outsl out clc in inc nop test inc sub fisttpl outsl ja inc cmpsb rcl inc mov dec lods xor or stos add xchg mov add add or dec outsl outsb je jb jne jne add outsb imul gs jae jae popa outsb xor sbb add and and (bad) (bad) jmp add imul gs jae jae popa outsb xor xor and add xor add push push add inc add add verr outsl insl insl gs jb gs add add inc outsl insl aaa add or add add incl xor add add add fs jne imul gs add push add outsl outsb add lahf adc add push mov incl xor str fs popa arpl imul add or dec popa jae jo bound outsb xor add pop dec adc pop mov incl das add add add push jb jae add or outsb jns jo popa insb imul movb or incl sub add add jb insb imul add outsb imul or fist xor adc incl xor push add jb gs insb popa fs jb add or insb gs insb jae jb add pop and xchg or adc add add str jbe bound imul jae xor add pop add jbe jbe xor add push popl push or add add add imul add add imul imul add adc pop add add add add or dec outsl outsb imul jae add or push jne gs imul add pop adc add add add or add fs jne add or dec popa arpl popa jbe insb insb imul add adc adc add add add add adc inc popa insb arpl insl outsb imul add or bound jae gs add add push es daa movups add add add add add jbe insb insb jns add or jae popa insb je insb imul enter movsl add or incl das add add mov fs add or dec outsb cmpsb imul fs add adc mov or incl sub add push push add insb popa jb add or inc jb data16 insl popa outsb cmp add or adc aas push adc add add or popa insb bound insl gs add or inc gs insb imul add adc adc add add add add or insb imul jb add push add outsb outsl jae imul aaa add pop xchg or push cltd add (bad) incl sub add gs add push add outsl imul jb gs jae jae add or or adc incl xor add adc add arpl gs xor add adc inc imul arpl je outsb xor add pop pusha push adc add add add add push add insb fs add pop add jne imul or mov adc incl sub or jo jns popa jb push add add outsl bound add add adc adc incl xor add adc jb imul outsl outsb xor add or inc insb imul add or or or or adc incl xor add push verr insb popa outsb arpl jbe insb jae jb add or inc jb jp outsb popa outsb xor add bswap or or or adc add add push add jb gs outsl jo gs add pop add popa outsb imul add or adc decl push add add or imul imul pop add insb jo popa add adc das add incl sub or jb insl jo outsb je jns add or bound jae gs gs add paddd pusha adc adc add add add add or push fs outsb outsb jae add or dec gs jo insl gs outsb add add add adc add add add add or arpl jo jb add or gs outsl outsl insb imul add movups add add add add add jae gs popa data16 imul add add jb bound add or pop xchg push pushw adc add add dec xor sbb mov or loopne dec mov cmp rorb call scas xor inc movsl or and dec lods xor or stos add xchg mov add add or inc fs jae imul jb add outsl jae outsb arpl outsb je xor sbb add and and (bad) (bad) jmp add jae outsb arpl outsb je xor xor aaa add add lds add inc add add add add inc data16 jb gs insb gs push add insb imul or or add incl xor add add add imul gs jae add or popa data16 jne je fs add add pop movups add add or ja outsl fs jae add or jo jp jne insb popa outsb imul adc adc add incl sub add add add fs gs add jb imul out sbb lcall xor add add jo insb outsl jne add (bad) jae outsl jbe jb gs gs outsb jae add or push into push adc add incl sub add push push add insb fs add or popa insb insb gs je outsl outsb add add add add add or imul gs gs add or inc popa addr16 insl je add or add add add add or arpl imul outsb je add or jae jb outsb addr16 jns add push push adc push xlat or pop add add add add or inc jo jae outsl jo jb gs add or insb imul imul add or incl add add adc inc gs je jo arpl imul jae add or inc insb outsl outsl imul add push je leave push adc add add add add or inc gs gs jae jb add add jne add adc or or incl sub or dec gs gs outsb add or push jo imul addr16 add or xchg add adc add add add add arpl cmpsb jae imul or inc outsl outsb jbe jb outsb je add or adc or adc or incl xor add push or push jbe outsb jae push jae add or push jo data16 jb imul jb aam cmpsb or or add add push add gs popa je insl gs jb add or inc jae imul add adc mov add push add add add add or jb fs imul add add dec outsw add add add adc adc add add add push popa push pop add jae outsb add adc push fadds or adc add add add add push add insb imul push outsb add add fisttpll fist adc add add add adc add jne jo imul outsl outsb jae add sbb inc insl je imul jne popa insb imul gs gs add adc adc add add add add add je insl gs jp add or inc outsl outsb outsl jo outsl jb cmp add add stc add add add add jne gs gs outsb gs xor add push add insl popa outsb add add adc add incl xor add push or outsl jo popa outsb je outsb jae add adc dec jbe jb arpl insb gs je xor add push pop or adc adc add add or inc imul add or dec outsl jbe cmpsb jb gs add adc add push add add add add adc push imul outsb jbe jae imul add or push imul cli pop jecxz sbb lret pop add add add sbb add outsl insb popa outsb imul jns add or inc outsl jb outsb fs imul add add sbb incl sub add sbb add outsb insb imul pop add gs jb add add add sbb incl xor add sbb imul push add add jbe jb popa addr16 jae add pop pusha add outsl or sbb incl add add add popa bound gs gs gs add add bound add or mov incl add add int3 xor sbb and dec test adc pusha dec add sub sbbl loopne cmp xor or stos add xchg movsb add add add push insb bound outsl insb outsl jne cmp or outsb xor sbb add and and (bad) (bad) jmp add outsb xor xor rcll add adc add add add add add imul imul add jo jb arpl insb add pop pop adc add incl das add add pop add imul add add outsl je bound popa outsb arpl jae add add adc add or add incl xor add add add outsb imul gs add or push jb jae push mov enter mov incl add add add jne je imul add add je jns outsb imul sahf adc add adc add add add add je jb outsl outsb imul jae add push add fs jo add or add add incl xor add push or dec popa bound outsl jne insb jns add or je insb imul add add test add add add add or push arpl insl popa je jae fs add or jne fs push insb gs add add add add add add add or push arpl popa jne gs jae add adc jo imul outsl jb outsb fs jae jb add push mov add pop add add add add or bound imul outsb add pop add insb outsl jae popa add or adc sbb adc add add add add or inc imul aaa add pop add imul add or sub jns adc add add add or add imul add or inc outsl jb imul xchg add or or or incl aaa add add add jae gs gs jae popa bound imul add or push imul insb popa fs add add adc add add add add jb outsb fs outsl add add inc cmpsb jae add add fiadd adc incl sub add push or inc push gs gs add add dec bound add or cmp cmp adc add add or fs outsl outsb addr16 add or push cmpsb jb imul add or pop inc push inc or push add add add add push add popa jb popa insb jae imul add add imul mov add (bad) incl sub add adc push ja xor add push add imul popa insl jo add adc add add add add push add jae gs insb jae jb xor add adc push jb ja imul imul push lods adc jnp incl aaa add add adc push outsl arpl insb jo outsb jae outsl outsb outsb xor add push jbe push gs add add or out adc add add add add je add or push jb imul imul add adc pop adc add add add add insl bound add push add jne gs add add or adc incl cmp add push or push jns js insb add adc dec popa jo je insb outsw jb imul jb add or add adc add add or dec jne imul add or arpl gs jb add fimul adc psubd adc add add add add push add jb imul inc push gs xor add or pop adc incl xor add sbb add jae gs mov outsb gs add or jb fs arpl jae add or xor adc add add add add or inc js jne push add push add popa je jb jns arpl jne add adc adc add add add add push add jbe fs jae jae popa imul push add je popa outsb jae jne popa bound add pop push or loopne adc add add add add add jb data16 outsb fs or inc outsb jae jb outsb addr16 add or add or adc sbb incl add add dec xor sbb push mov in sub pop fs sbb cltd jle xlat or dec push sbb adc out add cltd iretw adc pusha rcll mov add push add add adc movsl insb imul outsb jae je je outsb add imul add add inc add add (bad) (bad) (bad) jmp add outsl jb je add mov add js add out adc add add add add or inc popa insl insl popa jb je add or jae jns outsb imul xor sbb movups add add add add or jb imul outsb add or push outsb je bound mov fldl and sub add incl xor add add add fs jb outsb je add push add imul imul adc add (bad) movups add incl sub or outsl jb imul jae add or bound insb gs add or or add add add popa jae imul add add outsb imul orl or adc incl das add add or gs jne insb gs jb add or dec jae push add or add add or add add add or dec outsl outsb jo jb insb jns gs add or dec jns jae je aaa add adc pop daa add or push add add add or add outsb imul outsb arpl jns je addr16 add or push jns imul imul or add add add or push imul imul or push fs outsb imul add push inc or or add add add add or push jne arpl imul inc gs jb outsb outsb add add push adc incl add add or inc outsl jb popa jb outsb jae add or inc jb jae jb outsb aaa add or pop adc add add add or add je jb outsb jne jae add or jae insl popa insb gs outsb jae add push inc adc or or or incl xor add or ja jns outsl jne gs add or jo imul add or or add add push or insl gs popa jo outsb imul insl gs gs jae imul je add add adc or add add or push jb bound fs je add or dec outsl jbe je popa je add adc or add add add adc push je je outsl outsb jae gs outsb je add or inc imul add bsr adc incl das add add push add gs jp add sldt arpl popa imul aaa add add aad pop or adc incl sub add adc add jb je gs add pop add imul popa add adc or adc incl sub add adc add outsb fs gs add or push jne imul lea cmc add adc incl xor add adc add fs outsl outsb je outsl insb insb outsb jae add pop add gs jae insl add adc add adc add add or dec outsb push outsl jb add or arpl insl outsl imul or or incl cmp add push adc je insb bound gs cmpsb imul addr16 add or dec jne jae gs outsb xor add adc add adc add add adc dec imul fs jb outsb jae add or dec imul add or add push add add add add adc dec outsb jbe jae imul gs jae add add gs add or or sbb add add add or push js jae add or push jne data16 or adc sbb incl xor add sbb gs insb fs fs add or movsl bound insl jne imul add or push lds insb push adc add add add add or inc outsb je insl outsl outsb outsl jne add push add jbe cmp add add push add add add add add ja insl outsl outsb addr16 add or inc outsl jae gs outsb addr16 add add add add int3 xor sbb xor cmpsb out jmp mov cmp fcomi sbb in mov lods xor or stos add xchg mov add add or inc gs imul add imul outsl jo aaa add add inc add add (bad) (bad) (bad) jmp add cmpsb outsb imul outsl jo aaa add test push add pop pop add inc add add add add or inc js jb jo insb popa jb add or fs imul add push data16 outsb or add incl xor add add inc outsb outsb gs insb jns gs add push add bound addr16 add push jo es mov incl das add add or inc arpl outsl je insb jne fs or popa insb bound je outsb add or adc add add add add add jb insb cmpsb bound add or inc gs jb insb jae outsb cmp add push movsl push scas or add add add add jae popa bound jae outsb jae add or push je popa ja outsl insb gs add add addb add add add add add jbe add adc push outsb jae je outsl outsb popa insb imul xor add or pop adc adc adc add add or jae outsl jb popa outsb outsl imul popa ja gs add add add add add add adc ja popa je gs je imul add push add outsb popa jae add add add add add add or jo je popa imul add add outsb je popa arpl add adc or adc add add add add pop add insb je jne add or push popa fs arpl outsb add das or lret or incl sub add or add jo outsb imul add jb add or and mov incl xor add or add ja jb add lldt jb push insb popa jae imul or or incl xor add or jne imul push add jb jo je jo imul mov add or incl sub add push add imul add imul gs add add or or add or add add add outsl add or push outsb imul xor add or inc or push add add add add pop add popa jae gs add pop add popa outsb imul add push dec add push pop adc (bad) incl sub add adc push je jb je bound jae add push add outsl insb imul or adc incl aaa add add adc inc je jb bound je insb fs imul add add insb imul add add adc adc incl sub add adc add popa js jae add or push popa insl imul (bad) paddusw xchg push jmp incl add add add outsl imul add or insl popa je jae je outsl outsb add push mov or incl aaa add add gs gs insb push jb add adc fs jo jo outsl arpl je jb add pop cmp adc incl xor add push or inc imul add verw jbe imul je jb add push xor adc add add or push insb jns imul popa insb jae add push add fs gs jae jae outsl jb mov jae add push cmc adc push add add or push jb je outsb jae add adc dec popa jbe gs outsb imul add add mov adc add add add add or push imul je jbe xor add or inc outsl fs mov xor add adc lahf add adc add add add sbb insb insb insl outsl bound popa outsb xor add or imul jns add sldt adc add add add add adc imul insl jne imul jae add adc imul fs je addr16 add add add add add add outsb addr16 jne je outsl outsb add or push outsb outsb outsl je data16 add or or adc incl add add dec xor sbb rolb inc cmpsl aam mov mov adc fwait xor add lods xor or stos add xchg mov add add or push jo jne popa outsl xor add popa outsb fs jb outsw jb popa je sbb add and and (bad) (bad) jmp add popa outsb fs jb outsw jb popa je xor adc add cld or add add inc add add add add push add outsb fs jbe jb jae outsl insl jo imul jae add or inc outsl insb outsl jo popa outsb jns add adc xor das pop adc add add add add or inc imul gs add adc dec imul jb gs gs add push or add incl xor add add data16 jae push gs or inc popa jb imul jns add or add or or add incl sub add add add je gs add or dec outsl outsb outsl addr16 jo jae add push jns pop add add add add add jbe jae imul add jne je outsl jno outsb je add adc or add add add push add insl imul bound jae add or push jne arpl imul add push push adc add add or outsw outsb outsl je imul add or inc popa jb imul nopl jnp decb adc add add add or add outsb fs jb bound gs add or inc imul outsb gs add or adc pop add add add add adc dec outsl outsb je popa imul jae popa bound jae add push add bound jb add adc ja enter add add add add or je je imul jns add or gs insb imul add or add mov incl sub add or add imul add or push data16 insb fs add or adc or or incl sub add or add outsl bound popa insb add or push outsb arpl jb jo xor add adc add maxps adc add add add add jne je outsb add push add outsb imul or insb or add or incl das add add or dec outsb fs jb jbe gs add or inc gs cmpsb outsb imul add adc adc or add add or jae outsb jae popa insb imul push gs outsw outsb outsw jb imul outsb add add pop add incl das add add or inc jb ja gs imul or imul insb gs and pop or add incl sub add adc add fs gs add or push outsl imul aaa add pop xchg or clc adc adc incl xor add adc push jb addr16 insl imul jb add or imul jae add adc adc or add adc incl xor add adc add fs popa outsb imul add pop add jne imul jb test adc incl xor add adc add jne addr16 add jo jb popa insb insb popa outsb je gs add add adc adc incl das add add jns je insb outsl add or push imul jae outsb outsb xor add or adc or or adc incl add add or jae data16 add or dec bound fs add add add adc adc add add or je imul add or push je insb gs add pop mov adc add add add add or push imul addr16 add or jbe jb imul add add in push adc add add add sbb imul add je outsb outsl outsb imul adc sbb incl xor add sbb add ja outsb outsl jae jae add push add je jb jb je outsl outsb outsb add or mov sbb incl sub push add insb insl popa je jo jb gs add add bound add cmovnp pop or add sbb incl add add insl insl imul gs add verw popa gs jo data16 imul add adc push roll sub sbb incl add dec xor sbb (bad) jge call movsl sbb fs xchg push mov cmp xor or stos add xchg xchg add add add insl insl imul adc outsb outsl outsb push imul jae sbb add and mov add add mov xor add add add add add add add add xor add add sbb add add nop mov add pop aaa pop jmp xor or lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret mov push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call push push xor pop pushl push call jmp mov adc cmp jne jmp mov imul pop mov mov mov mov dec cmpw jne mov mov inc mov bswap cmp jne cmpl jne sub push call mov mov push rep mov xor pop cld cld cld cld cld cld cld cld cld cld xorl cld cld cld cld cld cld cld cld cld cld jmp push jmp pop jmp pop call push push push push call pop jmp call push push dec outsl je data16 arpl inc add lret (bad) (bad) decl inc dec dec add ret (bad) (bad) decl push gs outsb outsw jb popa je outsl outsb push jb arpl jae call xchg in jb add rcll inc loope jecxz rcr pop xor rcrl xor rcrl push inc inc cmpsl jo push lea rcl and rcl fwait (bad) pop dec sarl sbb rclb add push gs (bad) jb (bad) rcrl jmp mov adc rcl adc cmp add mov lea fwait add arpl insb rcl incl adcl aad (bad) sbb rol call cmp add mov sbb pop mov add xorl rcrl add mov rcl mov mov adc pop adc or test push mov jne push loopne xchg std ljmp sbb rcr pop icebp rcl fwait subb add rcll pop sub mov cmp adc cmpl lret sub add pop mov add call xchg mov fwait add lahf pop rcl fwait minps rcrl add xchg lea rorl fwait push sub fs fwait add push arpl rcl adc cmp call pop push cmp rcl repz rcrl add mov fwait add out fwait add rcll cmp adc cmp pop rcl shr fcompl incl inc fwait add mov incl out mov add repz in sub jle mov fs inc rcrl jmp mov xchg psrlw lret push mov fwait call pop sahf lahf jmp mov jbe rcl adc pop (bad) add or (bad) rcrl dec aad arpl sbb fwait add mov pushf xlat jb (bad) rcrl add pop fisubr sahf lahf jmp mov xor rcl adc pop (bad) add and cwtl (bad) fwait mov les push fstpl mov fwait pop cmp fimul lahf jmp mov decb rcl adc cmp rcl ret (bad) fwait add rcll (bad) pop sahf lahf jmp mov fimull rcl adc mov fwait add mov into or repz fwait push subl add shr pop push xchg xchg add aam pop cmp mov rorl fwait pop cmp ficom pop lea rorl fwait pop cmp xchg add loop mov add cmp rorl add push pop add rcrl clc fldt fwait add inc lldt rcll cs pop add (bad) jae cs mov xchg adc imul xchg add fwait add mov fwait add sub or lahf subl out jmp insb lds jmp pop xchg cmpsl jmp pop xchg fucomi sub fwait add fucomip push lds sbb jno add mov inc int mov or rcll inc leave push mov jo rcrl mov pop or les cmp loopne xor adc add xorl rcrl add xchg cmp arpl ficom or (bad) jb (bad) rcrl add mov (bad) rcrl jmp sub push pop xchg xchg add cmpl adc (bad) pop inc rcl pop add stos pop rcl ret mov pop ficomp lea rorl pop push rcl fwait pusha pop pop aas add (bad) jb ret rcrl add adcl jne fwait add dec mov rorl fwait jmp mov push xorl add mov adc cs and sub and imul (bad) mov jge pop adcl pop out or xchg xchg mov push pop or rcrl jmp fwait add cmpsl mov fldt rcrl cli fcmovbe fwait mov aam add mov dec ret xchg add mov pop xlat mov lahf adc dec pop pop rcl adc pop mov mov pushf add pop les push pop rcl sbb xchg pop sbb rcl fwait mov xchg add pop sbb rcl fwait mov xchg add pop les adc rcl adc pop sub fwait add add push mov rolb xchg loopne rcl rcrb mov adc fsts inc lahf or shr fildll fs or shll push arpl movsl and inc mov sub or rcrl add mov sbb shll pop add rcrl jbe pop into or test or rcrl sbb rcrl inc ljmp fldcw fs or shll sub add rcrl add xchg mov rcl fwait (bad) xchg (bad) fwait add rcrl mov rcr pop leave rcl fwait push pop fs adc shlb lcall push pop add rcrl add pop sbb fst fwait subl xchg test fwait add push fwait or rcll inc rcrl fst fwait test cmpsb popf mov xchg add pop sbb fst fwait xor test xchg fistp or rcrl je and add rcrl je cmp (bad) fwait adcl adc cmp rcl adc rorb rcl lds and adc push xor rcll pop lds pop or rcll lahf rcr add dec fwait or rol add test add inc lds adc (bad) cmp add cmp jge rclb mov stos add rcll inc fstpl or scas ret add fistpl add rcrl mov fistpl add xchg add pop jmp push scas ret add adc stos leave sbbb rcr fwait add ror jmp fistpl push mov mov (bad) stc xchg mov add xchg add xor cs or rcll xchg fistpl incl fwait add inc fwait or sar mov lret fwait add pop fiaddl subl movhlps push cmp cmp cmp mov push sbb loope (bad) xor loop xor sub mov fiaddl rcrl push pop sahf iret mov in dec in aam pop popf lret mov lcall sub rcrl fisttp rcrl push adc rcl adc pop (bad) add xchg add rcrl push rcrl insb pop sub mov fwait je pop ficom cmpsl add mov inc (bad) mov fwait pop cmp in or movsb xchg push mov fwait push mov enter enter arpl ficom ljmp sub dec mov rol call cmpl adc cmp adc rol call pop xchg adcl nop add pop (bad) jo leave mov rorl fwait jmp sub incl mov fwait add testl aad aam loop,pn push fstps push pop rcrl push pop xchg jmp sub add test sbb fwait andps add pop ficom (bad) push mov fs pop int3 or loope push leave push arpl ficom add rcll pop mov roll mov std push mov adc rcl std mov jle std add sub adc popl mov cwtl pop aad adc sub incl fcompl push rcl fwait data16 fwait jge pop aam push rcrb mov rol call movsb mov aad dec subl xchg test rcrb push mov pop add pop les pop pop aas add rcrl rcr adc sub incl push arpl ficom add rcll pop rcll rcl fwait mov cltd mov ficompl jo adc (bad) rcrl push fldcw add add clc rcr push rcl fwait subl add shr cmp or fwait add rcll pop fsts or loopne rcrb sbb movsl rcrb push movsb lahf mov xchg (bad) push rcll add pop (bad) jo mov jae xlat rcrl or mov arpl ficom add rcll dec aad stos push rcl shr aad add pop add rcll stc push adc rcl lret (bad) add mov rcl fwait add push mov mov rcr pop psrlq fwait mov fwait pop cmp sbb rcl fwait mov fwait pop cmp sbb rcl fwait mov rcrl add pop sbb rcl fwait sub pop push pop add (bad) repz rcrl add ror incl lcall rcrl add rcll xchg fwait add cs add fcompl mov rcrl push ficom add shll andnps shr and rcl xchg test fwait add push popf add fcompl mov rcrl rcr in rcl cmpsb inc rcl pop je out mov jo inc fwait add cmpsl repnz movsl mov pop rcl pop je out (bad) dec xchg xor push in mov insl xor fwait andb pop andnps add out lcall loope mov aam pop pop rcl fwait push sub xchg rcl fwait push cs rcl fs rcrb add (bad) jb cs ret mov sub cwtl rcl fwait jmp lcall rcrl add xchg fs rcrb add shll rcrb add rcrb add sub xchg rcl fwait incl lcall addr16 jns clc shll pop je rcrl add rcrl pop fldcw incl fwait add xchg rcl fwait push mov rcrb add rcll pop fldcw incl fwait jmp lcall rcrl add pop sbb rcl fwait mov out add ror push sub test rcrl add pop les loopne,pn push mov cmp sub add sbb rcrl or loope push test sub out (bad) fwait pop pop enter mov xor rcrl leave nop pop vpmacssdql movsb and lahf mov notl or nop inc push scas cmpsl add add enter mull mov subl out adc push pop add rcrb out shr xlat and scas push jmp mov mov add push es rcrl add rcll inc cmc (bad) xchg ja adcb rcrb insb fldcw lcall and mov pop lahf or and fidivr xchg out adc push pop clc and ret shlb lahf or lcall push es rcrl add rcll jge pop out and mov (bad) adc fwait add sbb add rcrl sti loopne stos leave loopne adc roll and pop mov inc push sub or rcl fwait jl loop jmp mov inc test fwait add pop out push adc cmp loopne stos fneni(8087 sbb adc rorl fst adc pop popl roll adc jecxz inc cs mov jge push pop ret fwait dec loopne and rcl fwait (bad) aad fwait loope adc add mov cmp cmpsb (bad) mov fwait add cwtl cltd add cmp ret ror fwait add in add pop (bad) or adc adcl xorb rcrl or rorl or rol mov xchg inc nop push mov lock fwait mov fwait add add adc mov rcl sbb shll fwait add fdiv rolb fwait add cmp cmc cs mov rcrl mov fwait add pop popf add push arpl movsb (bad) xlat rcrl movsb xlat rcrl push cmp (bad) or adc into loopne int cmp push (bad) xlat icebp fucomp lahf aad add lcall adc popf push xchg adc popf and adc popf push xchg adc popf inc xchg adc fwait mov fwait add sub adc (bad) icebp add xchg call pop sahf xchg adcl pop mov (bad) mov cmp cmpsb imul mov (bad) icebp add rcrl push xchg or adc int xchg (bad) fnstcw adcl test incl adc (bad) pop inc rcl adc rolb test pop adc xchg fwait add xchg cmp cmpsb popf mov nop adc xor movsb fistp (bad) rol fwait add (bad) icebp add rcr push xchg or adc icebp add adc int xchg push cs lldt (bad) jb xlat rcrl add (bad) icebp add xchg mov push imul fs push sub ljmp cmp mov push arpl ficom cld cs inc and fs fwait add pop fistl pop xchg cmpsl ret loopne adc std adcl std sub fwait jne mov jmp jo fwait add pop (bad) pop xchg mov mov jae pop and rcl adc mov adc cmpsb push xor sbb rcl imul pop out and pop mov adc std sub out icebp pop xlat xchg add pop or pop xlat and pop iret and pop (bad) and push push je pop cltd mov nop (bad) sbb cmc adc fwait fs fwait add pop fisttpl xchg (bad) mov pop ret sub (bad) add test push rcll jmp xchg cmp out add pop lds xlat mov adcl test cmpsl pusha add negl cmp sbb aas xchg push pop cmpsb jl loopne enter repz xlat fwait push addb add add (bad) int stos rolb fwait add sub adc cmpsb mov pop add rcrl (bad) int sbb shll pop cmp sar mov lret fwait add push pop sub rclb ret push adc add pop xchg or rcrl jmp (bad) fwait mov fcomps cli mov mov rcrl imul inc fcmovbe or xchg fcomps add fwait add andl add pop fisttpl xchg (bad) mov pop ret sub fwait add push bound movsl ret adc pop out sbb xchg dec jmp xor inc roll adcl xor mov xor cs pop pop fwait cmpsl mov adc adc pop mov inc (bad) mov (bad) fwait sbb ror push sub or rcrl add mov jb and idivl insb push lods mov je push in mov fwait pusha movsl mov fwait add cmpsl les rcll out push push lods mov je push in xchg rcrl jle xchg fwait add neg add sub push lods mov je push in xchg sar shlb fwait xor cmpsl mov loope out push push fwait add cmp add frstor add rcrl add (bad) jo adc or adc jmp mov fwait add rcrl add pop pop mov fwait (bad) aad movl mov adc xchg inc nop push mov jne push pop add rcrl push mov fwait add xchg int test adc pop cmpsb xchg adcl mov lahf adcl test incl adc push pop add rcrl push test add adc inc cmc fistl pop cmc xlat repz rcrl dec adc fwait mov out jb in push inc pop xlat nop cmp cmpsb arpl (bad) nop dec pop xchg mov adcl xor mov xor cs pop pop (bad) mov inc pop rcrb mov xor rcrl inc lds mov rcr cmp adc shr (bad) add pop fwait mov popf notl mov push pop or mov enter enter dec subl xchg test fwait add mov add xchg mov andnps add push mov jnp shr in push test mov xlat push pop or sbb add rcrl jne pop fdivr pop nop popa mov movsb negb jnp shr pop pop nop addr16 xchg sub inc and inc push call sbb (bad) out pause push bound movsb ds imul mov loopne cs adc nop lcall rcll push xlat xchg sbb fistl or fwait and shr lahf adc fwait mov negl inc call call loopne shll and imul ret fnclex push mov nop nop mov subl push or nop bound cmp pop inc daa imul es sbb shl fwait add fwait mov notl inc xchg xchg sbb shll jmp pop xchg stos subb add (bad) out push imul stos rclb fdivrp cs arpl mov fwait call (bad) nop jmp and sbb pushf lcall test jmp movsl mov and cld iret push icebp icebp fwait call (bad) nop jmp and sbb cltd pushf into push popf mov xor repz lahf repz je in and xchg and mov jmp rorl sahf (bad) push mov mov clc jb mov int3 imul mov (bad) jb mov out outsb repz icebp icebp (bad) and nop cli jo cmpsl (bad) aaa repz mov and cmpsl mov push mov mov icebp icebp (bad) and (bad) jae sub das mov cmpsl cmc and nop cli jo cmpsl (bad) aaa repz jae sub dec roll fwait push rcrl fwait rcll fwait call nop ror add ror add (bad) jae cmp fs rcll fwait cmp mov rcrl add rcrl add rcrl add rcrl add rcrl add rcrl add rcrl ljmp mov fs (bad) jae cmp inc mov loopne inc mov ljmp movsb mov fwait call xchg mov jmp imul sub inc mov out jb stos int3 imul sub movsl xchg (bad) jae cmpsl hlt jo mov fwait call test repnz pushf std inc mov out ljmp lcall mov sub inc mov fisubl out mov mov fs mov mov and cs movsl lahf cli jae xchg jmp call (bad) mov inc mov mov insl ljmp out popa mov mov js cmp ljmp out popa mov mov je stos fwait call xchg mov (bad) mov add repz cs imul cmp mov fs mov lods ljmp repnz mov bnd (bad) jae cmp inc mov mov fs cmp mov dec mov cmpsl repz mov incb cmp cs movsl nop hlt insl mov mov jae ds inc mov sub mov call lret and inc mov fidivr cmpsl fsubrs mov jb mov jae (bad) jae cmp push mov imulb mov andl push cs imul xchg in gs and mov out gs mov jne xchg in gs xor incl (bad) jae cmp jae mov insb loop fwait call (bad) mov jecxz mov out gs (bad) jae cmp outsb movsl mov insb sarl aas call mov jecxz mov out imul cmpsl int3 jb cmpsl (bad) push mov mov jmp lock je mov inc mov cmpsl iret push sarl mov cs je mov (bad) mov call lahf cmpsl lret jb cmpsl (bad) arpl cmpsb cli insb pushf mov outsl mov and cmpsl enter hlt outsb movsl mov je mov fwait call lahf cmpsl leave mov mov fwait call lahf cmpsl into outsb mov mov dec mov (bad) arpl cmp gs cld inc mov bnd sub mov call jmp mov test sarl mov outsb movsb mov hlt ja (bad) jae aaa sub dec mov jmp mov cmp xor nop fwait call shl cltd add mov fwait add cmp jmp rcl jae sub add rcrl ljmp cmp or or sbb jg or dec dec push (bad) xor xor std mov push mov sub xchg adc dec pop adc add lahf pop (bad) sub mov lods jg jg dec in push jo cmp movsb insb cld lret lcall cmp xchg sbb out and stos lock jne (bad) or daa cs push les xor and (bad) dec or adc adc jmp dec cmpsb cmp push (bad) pop pop xchg cmp sbb in mov ficompl push inc fstl imul adc inc and add mov (bad) jno and xchg sbb inc xchg cmp add rcrl call rcrl ljmp (bad) repz mov sarl xor cs add (bad) jae cmp add rcrl call rcrl ljmp rcrl icebp cs add (bad) jae and add rcrl call rcrl ljmp rcrl inc xor inc sti mov test mov movsb adc movsb mov cmp repnz mov mov subl jmp movsl sub (bad) int call daa in stos cli cmp xor jecxz xchg rcr or push cmc adc lcall push pop push mov aam loope jmp sahf or push icebp mov (bad) jo push jno in popa lea pop out dec dec jne loopne push loope cli es and jno sahf insl push jns dec and lcall mov popf xor mov mov orl jnp loopne xor scas decb leave dec test and out aam pushf and fimull jo popf mov add add (bad) jbe xchg mov xor lea mov dec adc sub pop push ds mov (bad) and sbb mov sbb jns jg or (bad) bound (bad) and mov fcompl and mov sbb dec adc sub out dec mov jnp dec mov dec or loopne add jl out fyl2x mov aam push adc gs dec rorl fwait or add roll push call push aad mov (bad) (bad) mov xor je int3 add push loope cmpsl cli repnz stc mov cli cltd xor insb push in push jmp mov or cs inc fidivl mov xor das cmp outsb mov adc mov xchg pop lret xor movsl int (bad) xor loopne jecxz sahf mov and inc jmp mov and xor leave out and dec pop and out outsb sti mov cmp (bad) cli movsb and xor xlat repz jle je iret pop das xchg sub rorl fdiv repnz in jo outsb dec dec jo into ret adc mov loop stos pop bound out push adc ret adc stc into mov push fwait jmp (bad) sbb push inc jl js dec jg or mov aad out icebp or in pop (bad) inc or inc (bad) xchg mov jb (bad) in or aas fimul or fcomps pop ret jb xchg rcll out loopne adc imul pop push rcll cwtl mov pop jno xchg aas (bad) jne dec mov inc aam jecxz in pop fild jb mov cmp sub mov mov jl into sbb xchg cwtl sbb pop cwtl or ljmp jmp aad cmp aad sub movsb push sbb (bad) xchg and mov xor xor add or cmp pop ret mov jp lods orb push or dec std addr16 or dec fcmovu addr16 jecxz mov fsubr jno xchg push leave dec cld xchg push int3 test imul adc cld std lds xchg insl xor push (bad) stc pop or jae mov add dec psubw adc sub (bad) insb mov das lods repz clc mov xchg shlb lods xchg dec or imul xchg ja and fwait cmp lcall jns test mov mov adc repnz std cmp das fsubl jmp data16 data16 dec adc inc js lock xlat fldl sub mov push in push mov fsts add loopne lock movsw adc int3 movsl pop push mov inc sarl fsubrl (bad) sbb adc mov adc rorl fdivrl arpl adc ss push or je es add rcrb mov sub pop add mov mov jg sahf pop loop ljmp cltd stos mov enter or mov add lds fisttp pop bound leave jl cwtl popa in or pop inc sbb call aas xor stos fsubrl popl jecxz ret pop insl or mov repz jnp mov cs repz scas in xchg xchg jmp push out cs in (bad) push (bad) cmc subb mov push mov push fsub sub lahf jle lcall sbb imul mov jae sub cli data16 ss inc sbb sbb sbb stc popf rorl add xchg fwait push xor lea les stos push jle mov xor rcrl out pop int3 test jle sub cmp aam xchg leave xchg lret std push xor and loopne movsl inc inc inc xor pop sub daa cmp or pop cmp stos mov (bad) mov arpl ficomp in dec lret rorl nop (bad) jae xchg xor test (bad) mov mov inc mov fistp cmp jno orl nop clc lcall rclb dec push fbld std stos dec cmp adc jmp rcrl mov push hlt and pop ljmp cmp fcmovnu lahf inc xlat dec sbb (bad) or sub rorl adc nop push mov push lcall pushf outsb xor pop stos call stos cs out push adc cmp faddl add stos data16 push xor sbb into xor cmp aaa les andb push jno sub ret xchg nop imul push mov fst and in lret fwait (bad) dec sub adc or mov and mov sbb mov shr or xlat and out push int sahf aas or mov das adc addr16 xchg or (bad) lret or cli imul mov or cmp push fstl loopne std dec lcall dec xchg sub dec popa pop and stc push xchg insl inc add repz mov cld sub jg lds cwtl movsb push jmp jmp daa mov xor sbb rclb sub aad sti pop pop and outsb and iret push sub subl out mov or mov inc pop push push hlt push add dec and cmpsb jmp lds add das or dec mov xchg sbbl ss adc je aas xchg xor dec nop clts (bad) fisttpl popf jle in inc jns,pt sbb dec fistpl gs andl lcall movsl inc and outsl mov jl loop aad jmp movl shrb add idivl mov rorb movsl mov cmp js add mov pop or adc fidiv add hlt shlb (bad) pusha xchg or push xor sub sbb nop (bad) mov lods xor (bad) dec pop fs mov and movsl push ror inc sbb add or ret popa in xlat dec sarl loop mov inc imul mov ds cmpl rcrl jecxz adc inc xor sahf jns sbbb adc mov mov and or in mov pop dec inc pop sbb pop stos adc out mov xchg das mov fbstp dec mov inc rcrl and jae inc cmpsb nop cmpl jo (bad) lcall test shr (bad) std cmp shrl insl lahf sbb icebp pop pop call jge mov inc scas cli mov xchg cli ss sbb sub (bad) cmp jo (bad) lret enter fimul mov lods lcall (bad) loop insb jb stc sbb sub xor mull xchg pop push (bad) cmp add ds jno dec movsb pop and mov scas mov mov insb loope push shlb sbb jl cld pop sbb push push fmull jmp jg repnz fisubr outsb mov mov pop (bad) cmp ljmp push jp fscale add xchg bound pop mov gs aas dec xchg push mov jp xor js enter jp std mov lods sub xchg pushf push xchg out imul xor je mov in and outsb js inc test push rorb pop stos shrl (bad) or mov pop rorl cwtl sub push sbb push mov pushf mov fsubl int3 cmc mov sti decl pop inc inc cwtl push (bad) and outsl mov sahf xor or cld cs dec inc ljmp cli es (bad) (bad) leave mov gs icebp fcmovnb mov sbb jle ret ss pushf cmpb lea mov fild bnd xor dec lods adc add mov mov cltd inc (bad) pop add dec jne pop pop test inc aas push addb jno imul push loopne in jae sbb pusha inc popf mov lea mov movsl das aas adc scas mov mov xchg mov jno bound inc out sbb adc movsl pop adc ja dec insl dec push push cltd and out pop dec flds cld inc pop jg xchg push lret push test push jle out inc or lret icebp inc xor movsb fcoml pusha fcom jecxz cmp call outsl dec jns (bad) fcoml iret movsl fwait imul inc jae mov fs mov rcr in loop movsl decl inc das cmpl nop jbe push pop jae adc loope lds stos mov dec test (bad) incb insb inc dec test push pop inc xchg insb mov stc xchg sbb push pop clc stos sub in sarb fsubrs fnsave pop adc pusha adc pop shl cmp and fnop es jne sbb push lret test cmp pop test sub xchg int3 clc adc lods ret imul inc or sbb fimul and fmuls mov rcll data16 stos push lret inc lcall lock jmp sarl jo adc int inc and dec clc lods cmp pop add ret in (bad) rcr cmp nop pop add repnz add outsl adc mov (bad) fsubs (bad) jb pop lods dec jge in pusha adc cld pop cmp (bad) jbe sbb push loopne clc icebp dec in outsb not aas lret mov outsl pop sti and fcoms and or out das lock xchg mov adc mov push xchg dec cmp inc and pop mov dec idivl mov clc jmp outsl sub ds dec lods xor jo adc lock pop sahf repz inc fs dec and jmp jp sub add sub mov mov fucompp sti mov (bad) aas or fisttpll and ret jb mov jmp pop loop fnstenv in push cli sahf pushf adc pop xlat incb add mov mov pop or dec mov sub hlt (bad) data16 test and xchg mov dec cmp aad dec adc aaa leave test popf or loop mov test pop jecxz gs adc fisttp add jnp movsl dec jo cld adc addr16 ret in aaa fiadd lods pop dec pop sbb ja push addr16 stos clc shl mov stc push loop and loope sti out mov insl out jmp divb adc pop mov cld sub test xor cmp insl push lods int lods arpl mov ljmp mov push out lods dec mov rclb fnsave mov cwtl jno xlat add incl mov lds mov daa sarb push or lods pop orb jae mov mov ljmp into fcmove daa ljmp fistpl das add sub push test hlt jmp cmp shrb cwtl mov sub jb pop test sub es pop xor andb pushf lret popa push add adc cmp inc pushf sub cmp into mov sub cs push and aas arpl (bad) sbb inc cli enter jmp movsl out jg add pop push inc scas notl pop sbb mov insb inc fs lods daa out xlat (bad) cs push out push cld pop je cli ret stos xchg mov push xchg loope nop dec (bad) mov pop inc cwtl mov sbb insl ret dec cmpsb call sub adc xchg repnz sbb imull jb add pop xchg fs loopnew and sub fnstenv lea add and xchg xchg push add aaa shr jae adc imul pushf mov repnz pusha cmp scas lock dec xchg (bad) jmp mov pop out jo bound lods imul mov and xchg aad dec push push and loop imul repz test subw imul inc bound mov fdivl popf mov lock int3 pop cmp aam jbe push loop xor xchg nopl and pop test ja or fld push dec jnp pop lds jecxz mov popl stc cld negb iret xchg cmp dec cmpsl in daa das lds mov in gs xchg int3 leave scas (bad) ljmp pusha out (bad) mov dec add pop pop (bad) push ja mov (bad) xor loop in xchg adc or mov pop gs mov scas inc add cli xlat repz (bad) cmp stos out arpl aas jge pop sub dec aad pop sbb sub add sub mov cmpsb icebp scas xor pop jle xchg lret repnz cmc sub ret aad scas pop adc cld call cmc shlb push add cmp add xor pop ret and xchg jg pop aaa shrl mov push test ror mov sbb gs sbb stos jg imull rorb xchg imul in dec lahf loope xchg sbb mov fild push scas cwtl cmc hlt aam jmp inc push mov lods aam xor cmp add push out out inc adc stos mov ret xchg push cmp js mov mov push out adc pusha imul add push mov push ret sahf sbb std add inc ss push adc jmp mov cmc roll clc scas or mov enter xchg stos leave and fdivrs cmp popf inc inc dec mov adc push movsb and push xchg aam enter and ds and mov fdivrl dec jl imul jle and arpl sub fwait cli or pop pushf mov pop cmp ljmp adc jl adc jo clc (bad) cli call lret xchg movsl testb int addr16 nop fdiv in push test lahf ror das aas fisttpl sarb (bad) lds mov notb or pop cli xor loopne push pop add outsb fstps ds clc test prefetchw adc dec test mov jmp or push popa (bad) (bad) mov push inc pop subl dec mov inc xchg cld pop jae fsts xrelease inc iret mov (bad) jae xchg jmp cmp and aad repnz cmpsb jne movsb leave lret mov std add mov jmp jle ss insb lods inc jmp (bad) push jo cmp outsl stos jg fcompl lods push scas aaa shrl mov mov adc inc out (bad) cmp jae adc pop jne insb inc add movsl test test popf movsb imul mov and or mov bound lret pop (bad) fcompl (bad) movsl sbbl jp nop xor std mov ljmp jne out push mov shrb lods xchg loope sbb dec xchg inc out or fildll cmp (bad) rol (bad) fs add push mov mov adc sti les aam xor test add push add repnz insb repz dec sub or loopne adc inc insb mov lds mov adc leave je (bad) pop mov mov jnp imul std or les (bad) pop cmpsl sbb cmpsb js sbb jns in xchg cmpb ret xchg xor out sub sti sahf outsl repnz in imulb xor add inc in int and sbb and shrb loop insl test or and adc pusha pop fbld imul push cmpsb ja cmp stos cmp add jb xchg mov arpl mov jmp je mov popf inc test invd or push xchg clc test jno inc ret imul inc fcomi pop shrb popf sbb dec int sub popf hlt mov rcrb pusha jb popf lahf mov mov mov shrb mov and xlat xor fs lcall (bad) mov test mov rorl sub iret lds and push sub (bad) xchg and push (bad) outsb jae int3 add bound scas and adc sub es adc fisubr inc mov and push dec and xchg enter stc mov shrl inc pop or sub dec (bad) mov into jl inc imul decb push les xchg inc (bad) mov aaa fcomi fisttpl es lock add pushf cmpsb pop rcrb and rorl mov cwtl js mov js ret pop push test or dec or add gs mov movsb or mov dec out insl scas pushf xadd lret jge imul (bad) or dec lret adc outsl pop cli and mov outsl cmp lods sbb push add loope cmc mov arpl xchg data16 xor fdivl add adc xor clc mov sbb lcall (bad) xchg jb outsl mov dec mov mov xor mov sbb inc fimull and loope or pop mov xchg sbb xchg mov mov sbb xchg in (bad) and or cmp aam stos jmp and pop jnp cli jbe jns pop sbb push ret mov stos out lret jmp js int3 dec test out push cmpsl and add test xchg int3 mov out pushf add push das lcall sub mov sub adc popa sbb pusha mov (bad) (bad) lods setbe jge out stos jo xchg (bad) jns jp ret xor out add sub xlat test jecxz leave (bad) push mov sbb sarl mov mov lods out pcmpeqw fidivr (bad) ss cmpsb data16 mov mov outsb clc rcr mov pop movsb jle mov sub add (bad) fdivs pop pop dec jbe fwait add out in (bad) mov std jmp (bad) in icebp add stc outsb sbbb cmp in out fmuls and sti jne push (bad) lret inc and sbb dec ret adc lcall scas loopne jne pop xchg cmp ljmp pusha jle sbb clc push cmp out (bad) std in (bad) test pop inc add jg test adc mov xor cltd gs cmpl mov or mov into pop int3 inc adc jl test inc mov sbbl (bad) dec popa and push sub inc jmp call pop daa bound pop mov fwait sub cmp mov jno insl insb int push loopne in lds ljmp (bad) xlat mov xchg jae push mov cmp mov test cmp jle cmpsb sub unpcklps pop dec push inc dec in shrl leave out mov enter dec push cmp (bad) sbb or inc into pop xor pop dec jne mov jmp and dec xchg insl aam sti das aad insl es jl out sti dec pop das push aad sub mov cmpl mov out (bad) or mov fsubs push js adc inc out push push adc stc xor jo cmp push add aaa je daa ret mov orl icebp mov (bad) push fistpl nop jg ficoml xor add cmp jno xchg adc fldl out sub xchg inc push scas mov int pop outsl mov xchg mov cli cmp cld shlb pop pop je mov lcall mov (bad) loope scas in ja and int movsl dec or adc mov popl add xchg or repz rorl or or sti jb jp aam push gs adc lret scas or (bad) cmp gs seta push xor xor push test mov in movsl fs fs push mov shrb mov enter adc mov sbb lret nop iret popf fsubl ja pop rclb sub popf into cs dec and cwtl repz jmp jmp inc sbb dec ds adc push cltd mov fnop or leave or dec testl xchg ret fucomp decb or movsb icebp jge aas dec sub ret repnz inc adc lahf jmp add cwtl in fisubrl mov sahf ret mov sub (bad) sbb inc cmpsb fisubl inc lds movsl and (bad) or jnp dec mov out xor mov jmp daa fwait xchg mov mov jnp popf fimull dec fcompl xor sti add ja jns loope loope inc fidiv push xchg dec jmp mov and in fisubl out pushf mov xor inc mov call stos loop fnstsw xor pusha test lock pop push rcll stos in push nop pop xchg int3 jecxz imul and outsb cmp call imul insl lods (bad) jnp inc fmul xor repz push cmp roll jmp and add dec (bad) rcrl (bad) addr16 mov lds repz lods dec ret adc gs int loope sbb xchg xor sub cmp pop sti out pop adc xchg cmp stos or jmp push push inc (bad) repz orb xor mov dec ss sub cmp push push stos js lahf push lcall fnstcw cmp xor xchg xor pop and jecxz (bad) insb aam inc xor call lea jg cmovl xchg outsl stos xor cmc mov aam inc inc xchg loop andb sti cld aas dec ret pushf dec pop push mov mov cmp xchg setno add pusha leave push xor xorb fiaddl mov cmpl cwtl sub rcrb std sub scas std jle popf pushf inc pop lea lods outsb and (bad) mov cmp gs ret test fnstenv ret loope jnp push call outsb cmpsl inc hlt and iret sbb push cmp mov sbb mov inc stos xchg cmpsb out loope cltd lods dec mov insl cmp (bad) pop push adc (bad) mov pop sbb ljmp dec mov leave xor sarl outsl pop cwtl fldcw popf test mov add jle mov mov xchg sti xchg mov sti pop or push xchg stos cmp lret or sahf movsl ljmp xchg jnp mov cli js add scas xchg neg call scas cmp inc fs fidivr dec pop inc or xor mov jne jno scas loop cmp (bad) clc mov sahf mov sbb rorb ret mov mov dec fstl adc cmp jmp test adc enter (bad) pop fildll fs ja (bad) enter gs sbb jb insl test push jmp mov idivb push sub push jp idivb lods pusha jnp mov adc jg inc xchg (bad) xchg (bad) adc das in inc rcll xchg push gs (bad) arpl outsl add inc in jecxz mulb inc xchg or jne lea ds push loope leave lret dec mov push xor fidivr mov lds ud1 pop or mov dec stc jge jmp xchg sub sub aaa jg push mov xchg loope fsts push xchg xchg into imul icebp jns (bad) mov inc fs xor fcoms lea mov mov ret mov inc push lcall inc test and cs push lods loopne adc add adc sbb rdpmc dec xchg insl add adc scas adc add pop xchg out xor cmpb test push mov push (bad) sti lret daa cli cmc pusha and pop add cmp push xchg mov mov mov sbb jne daa pop call sub push pushf repnz xchg add ss mov and (bad) hlt jge rcrb outsb data16 call sbb sbb das sbb xor xchg lods je xchg mov and scas sub (bad) icebp mov rolb (bad) into pop aas dec dec mov repnz mov lds lcall nop (bad) jmp mov xor add cmp enter sarl arpl and or add xchg and xchg inc loopne sbb dec movsl mov add mov enter sbb fcmovu ffreep arpl (bad) mov xchg cmp sahf pop sbb pop call jg jne jo mov xor (bad) sahf aas enter jne inc mov adc popa or loope cmp jne inc lahf adc inc stos cld and mov ss or jmp sub (bad) sub xorl inc movsl or das scas jle aaa insb dec sbb stos adc insb inc imul stc xlat add sbb stos test test in and aad mov sbb lods frndint lret pop sbbl pop movsl pop dec out rclb scas xchg fsubrl dec fwait or adc stc aad mov out push lret in (bad) (bad) out mov das arpl jle daa mov movsb mov lret fldcw adc jl and pop js add inc cmp cmpsl fistpll cmc push jo dec int3 loop pop adc cmpsb fcomp cmp insl dec xchg fs popa mov inc popf sub mov mov lret dec sbb sahf icebp jns into test add shlb sub loop nop dec sarb in sbb pop test adc sub sub mov out mov xor addl out mov popa sbb es or pminub repz xlat cmp adc and pop dec adc push inc (bad) pop xchg (bad) sarb xchg jl add adcl push cmp mov (bad) jns call cmpsl xor inc xchg mov loope adcl push scas fldenv add jle insl inc jo mov data16 sbb test addl cmp sti mov aad adc scas mov (bad) pop sahf jb nop lcall mov mov lods jnp ret ljmp sbb mov add and leave jbe test test mov mov mov int3 xchg sub push (bad) mov mov rolb in fs or push outsb (bad) or or dec in lret dec ret xor or push stos push andl dec rcrb push fsub in lret inc xor fmul lcall ja cmp sarl add mov jno popf fisttpll cmpsl push xchg fwait xchg cmp pop mov ss jl inc je jns xor jmp xor lods pop insb mov jne xchg mov dec adc sbb (bad) and mov sub and or scas jl add xor inc loope or mov call fcompl (bad) jmp xchg jmp pop faddl stos mov cwtl clc lock jb and lock xor sbb jns into adc fmul pop jp es clc xor inc push dec add mov add xchg pop dec in test incl xchg dec mov insl mov icebp (bad) lahf stos pusha xchg sahf mov (bad) dec sbb mov adc into test aaa dec mov pop mov dec js dec mov ljmp (bad) mov xchg popf leave xor xor inc outsb pop insb or jmp lea test xchg js xchg int3 (bad) mov dec and jo jg and sub gs ss jmp adcl sar push (bad) sbb jno mov mov jno ret jge mov shlb jl xchg jne and mov jg stc shlb push test mov ss scas jae sbb movsl mov mov aas xchg xor cmp aas mov adc pop test push pop pop xchg shl addb cmp jbe jecxz (bad) cld mov cld mov push jp pop test push push insb xlat ror lods or addl sub mov inc je lret jle mov (bad) sahf fwait bound push mov sub fisttpl lret adc push loop,pn mov aam dec imul xchg (bad) cld dec push jnp cmpsl xchg inc cmp mov hlt cmp adc pop out cmpsl shrb mov add popa imul (bad) arpl lds xor icebp insl adc xlat in sub sub subl mov xor sbb cs into cltd push mov pop popf and rclb (bad) repnz or mov subl or adc cs pop mull xor adc inc ja xchg fiaddl cltd fsubp jo sub dec add in rcrl inc daa pusha mov enter scas (bad) add xlat and mov sbb cmp mov or adc mov pop in mov push je std (bad) cmp cmpsl push lods adc inc inc mov push xlat and lods mov iret testl mov loope mov sahf mov aas push pop (bad) mov test mov jne out frstpm(287 xlat (bad) outsb and sbb into ds mov xchg enter sub into adc lea adc sbb ss mov xchg dec test xor aam icebp fdivrl imul (bad) movsb jmp pop mov push stos push mov (bad) push xchg iret arpl push cmpsl stos dec push (bad) in add (bad) mov ljmp and jmp stos movsl mov fwait inc or gs push popfw lods fwait fs fcoml or adc dec mov leave loope sub mov repz icebp pop les jl add mov (bad) mov xchg xor or scas lea fistpl shrl push in lcall sar mov (bad) cmpsl or inc xchg inc adc test and cmpsl mov sbb xchg fstl and mov cmpsl popf jp cs xlat sbb pop push icebp je push xchg push sti xor push mov movsl scas push pusha xchg rorl add lods inc sbb clc out mov hlt enter cld mov xor mov pop fbld paddb sahf shrl xchg ljmp jno ds adc xlat push fcmovnb ficom in sub mov notl inc lcall jbe lret jnp in lods inc roll mov test mov jae mov sarb popa mov jp sbb mov int3 fsubrs inc xchg pop sub lret cwtl xor scas mov cmpsl loopne fs sbb (bad) mov jg dec in pop incl add inc jbe push in adc xchg cld sbb mov popa clc and stos popaw enter mov dec je aad rclb mov repnz call mov clc les cmpsb push pop out xor call cs aam xchg jo les imul iret mov sbb push dec sub push mov arpl imul movsb push cmp out sahf mov mov sahf xchg mov or inc inc leave mov fnop (bad) inc jbe out push std iret jno cmp je or mov test mov xchg ss cld lret into xor dec fidiv (bad) dec cmc mov gs sub sbb in push mov push sbb cmp sub xchg mov adc mov (bad) (bad) mov out mov jecxz movsb add push movsb cltd mov lahf aam nop outsl inc xchg pop lahf mov xchg arpl ret cmp inc cli shll mull or rorb sbb mov inc lahf mov jne,pt fcoms adc inc dec and push xor in inc nop rcr (bad) cltd ljmp mov (bad) lcall jmp scas sbb scas xor stc push (bad) leave mov adc push pushf xorl in pop pop test xchg sbb fdivrs sub push inc or jb push movsl xor fcmovnu int3 out mov and sti pop out mov sub mov adc fiaddl mov jne insl push mov mov pop dec jecxz sbb faddl sub sub cmp inc cmpsb arpl and fsts mov lret sti push ret cmpsb test cmp ja fidivrl dec loop sub es hlt push sub and add xchg or scas adc jg movsb les and inc cwtl movsb lods bound (bad) dec adc fldenv adc xchg jo push movsb lret mov flds cmp pop push sbbl push stc add repnz loop outsb cltd and dec pop ret insb iret sub fistpll scas add sbb or push daa mov sbb jp adc insb xchg mov dec in subl xchg scas mov cltd jle xor scas in pop mov sbb mov sti push testl add inc ss (bad) scas cmpsl fmull (bad) jb sbb loop fisubrl adc cmp push insb pop inc in mov movsb out mov jmp (bad) (bad) fsubrl into and int rcll fdivrs cmpsl int3 je out dec jg inc add bound xchg sub sarb xor rorb int3 leave push add adc mov es into lods mov imulb in mov (bad) cld (bad) sbb jmp ret ret and mov push cmp push int3 or sar (bad) push mov in xchg fwait add clc push xchg xor mov lea shrb lods lods push pop sub int lods popf add cs out xchg push ds je ret and pop pushf int sub xor adc pop mov cmp addb push push stos mov test push xchg pop dec xchg and sbb inc lret clc je sub push xor lods mov (bad) ss push pop sub scas xchg mov (bad) mov jno mov jle gs pop sbb inc fs test mov orb js dec mov pop lea and sbb jns sub and adc sub adc mov rolb inc pop push sub das cs in sub or mov pop pop fsubp shlb movsl fprem imul fmuls mov cmp loope fwait push out lds adc lret sub xchg push (bad) push test ud2 adc stc movb sbb sbb cld inc dec call rorb jbe int in fwait hlt xor add inc imul mov mov fsubrs add pop ds or ret xlat aas (bad) cld mov outsl push mov in mov fwait cmpsb jle pop lret flds push pop scas pop hlt insb mov es aaa and test (bad) mov adc in pop hlt xor and pushf mov in cmp clc sub test imul add jno loope mov mov sbb push gs xchg cmp add xacquire hlt push (bad) in inc pop pop mov lcall lcall out mov jmp jnp xchg into xor insl iret pop movb jne or scas aaa push in sub hlt pop and fdivrl mov shlb pop sbb jle xchg mov mov mov aam and (bad) mov rcrl push add inc imul xchg push xor jns and das ss cmp mov and add lds sbb outsb push jle and jle into ds mov rcrl mov xor adc and into jnp imul jle sub lret mov sbb adc or jbe pusha (bad) pop inc cmc out ljmp pop cs movsl dec lds sbb inc sub and jge pop sub div and or leave xor xor xchg and push mov dec mov rcrl sub ss lods (bad) imul jno inc nop hlt (bad) xchg aam xchg fstpt adc mov xor mov mov popf inc cmc loop stos (bad) test data16 pop jle rcll dec lret addr16 xor inc xchg cmp jnp adc inc xor jae test mov mov cmc loop fisttpl gs or test cmc mov cs fwait xlat jmp icebp enter mov cmpsl push inc mov pop adc mov imul ds loope ss and jg mov roll xor fidiv mov push add mov data16 cmp jbe test imul xchg scas jno leave jbe push jecxz add xchg sub sub test push xchg or imul lcall xchg cli sub movl cltd adc mov xorl jnp outsb and enter ja sbb xchg adc pushf push adc subb push push mov jp inc arpl xchg scas push out aas jns sbbl pop mov dec scas in jne out bound roll or test xchg (bad) pop (bad) jl jp cmp jbe xor movb mov aas jge test mov inc popa dec mov andb xchg lahf sub jae sub rcrl mov lock pop (bad) xchg jl fsubs jo lock sbb sbb inc push mov (bad) fstpt push add hlt jp mov ret inc out cltd pop pop sub xor das ljmp mov or das cmp (bad) jns fwait addr16 rol fistpl sbb mov xor test mov sbb rorl add mov xchg (bad) push out push ja sbb mov pushf inc (bad) leave pusha js pop push (bad) imul lods cmp ret lds mov in data16 cmpsl and aas sbb insb cwtl mov dec fwait mov pop inc or in imulb ja inc (bad) mov adc test mov add sub leave jmp and fcomi mov xchg out dec daa stos and cmp jg outsl pop sbb mov outsl push stos cmpsb loopne sbb fdecstp add jnp test test add adc test orb lret inc aaa mov or lcall lods mov lcall cmp jmp jo outsb xchg fsubrp mov fisubrl out mov leave cmp push mov lret cmpsl and fsubr cmp sahf pusha clc divl ss rorb and stos popa cmp aas imul mov sbb sbb cmp dec clc (bad) jecxz inc sub dec mov (bad) shrl clc dec sub out aam test mov mov fwait cmpsl mov mov fdivr repz movsl sbb mov or icebp push xor sbb cli lea aas cmp pop xchg insb mov sub popf mov jnp test gs sbb pop add dec mov in inc xchg push inc fnstenv inc sub aad in sbb xor jge jg shrl sub loopne cli sbb sub jne xor (bad) out ds imul pushf and jp cli push inc pop data16 jp adc xor rclb inc and mov idivb sete andl push pusha out xchg push sbb cmp daa pop inc dec sahf lahf das ljmp cmp cwtl ja stos fwait pop cmp sbb pop mov sub in mov stos and fsubrl jl shrb pop mov push imul icebp ret in (bad) mov jmp aad aam xchg sbb inc mov cmc data16 lods mov push mov mov jg loopne xor outsl loop movsl pop xchg repnz cmp loop push jae or mov adc add inc lret and repnz jae sahf inc popf cmp enter pushf int bound xchg lea imul fcoms mov icebp xchg loope fild fildl xor mov leave push jnp popa dec and and mov cmc dec push jle sti scas add or scas jbe xchg add jo and xor jl and and inc adc shlb clc pop or jne pop push push nop fnstsw sub fisttp jmp pop mov sub aad imulb sub popa push mov pop ja mov fimull out or ret sub mov adc out lea nop pusha or mov out (bad) enter cs and testb into in inc dec jns fcmovne mov (bad) movsb xor (bad) call scas jmp dec test push imul icebp test jmp test in push test lods inc adc jae and push lret pop mov push faddl outsl ret add lret mov sub inc fistpl idiv mov lods mov cmpsb inc xor pusha mov mov jmp sub dec orl lret stc xchg inc mov sbb dec xor in out movsl jge pop ss mov mov fmuls adc shl test mov sbb icebp mov inc rcrl xor mov inc outsb fs out cmp mov outsl push (bad) jns test and sbb insl mov add sub jle add sub mov frstor mov sbb jp (bad) decl mov cwtl cmp pushf sub add mov inc les pop pop aad sahf int3 hlt popa mov and cmp xchg imul cli dec push rcr pop clc jns fiadd pop test cmc push adc fldl mov pmaddwd push mov push cmp lret mov mov xchg insb inc je push (bad) or mov fldlg2 imul xor aam inc cmp or (bad) lret iret dec push int3 xor incb jns je es mov dec pop int repnz test push dec xorl sbb inc ja lods ficoml mov mov adc adc adc sub iret dec or inc mov loop mov addr16 gs sarb and das fisttpl sub outsb pop call insb sarl add push sub and sub xor xor (bad) popa adc popf jb nop cmp rcrl imul pop add addb xchg jl jp,pt xchg and inc inc gs push xlat popa mov bound addr16 rolb mov cltd inc ret lock sbb scas inc (bad) dec and xor scas add sahf ljmp mov mov cwtl or repz pop pusha mov (bad) outsb fwait insl dec mov mov aad das sbb inc je outsl out icebp mov shll imul adc pop mov adc ds push ds jmp adc (bad) xchg fdivs (bad) loope push mov loope std ja add jno dec mov lods hlt adc mov mov xorl xor (bad) int mov aad cmc pusha imul rorb cmp cltd ret stos cmp adc je stos subb or mov xchg mov jae mov xor lcall adc cwtl inc je sub es test pop fisubr jg add (bad) mov push popf xchg jae arpl cmp mov shrb outsl add fsts aaa push ljmp inc lods sbb adc xor pop sti fstpt push xchg cmp std pop cld sbb lods divl aam and hlt aad ret inc cmp jae sub sti jnp pop xor scas loop stos rorb loopne mov push in sub jbe ja loopne jl inc add into faddp jns jle cmp aam jmp pop pop mov mov push pop call lea repz push push jbe and inc sub movsl daa dec outsl cmc lcall push inc in add mov out jecxz push jmp add stos inc (bad) xchg ror or and xchg (bad) cmp push ficoml pop (bad) dec ret cmp stos xlat sbb gs test xor outsb lds mov repz rorl (bad) xchg xchg ret mov mov adc ja hlt gs fstl cli mov mov js cmp pop xorl push loop pop rcll pop mov mov mov dec inc xorb adc or dec scas mov mov mov ret cmpsl out shr iret idivb push in fisubl (bad) and pop in loop cs (bad) jno addr16 adc movsl pop adc movsl test cmp and mov sub mov mov mov and mov into cld dec push cwtl test inc std loope sbb insb adc add sbb in imul add or fnstsw fs push mov cmp (bad) and insl loop sar in int adc sub or inc fs dec dec in mov ds mov sub jns xor mov dec dec push mov aas xchg jl mov popf mov cmp das movsl and jle jle ja test jp jl scas jnp cmpsl add ret mov xor loop pop push cmp (bad) std outsl pop dec imul aam cmp dec icebp es adc xor les out and pop out scas in pop daa cmpsl enter in pop aad icebp and fsubs imul shlb popf jge pop add jl pop fimul (bad) nop aam jecxz pusha push adc adc mov inc pop aaa jnp push scas xor aaa xor cmp jge in daa fisttpll fidivl xor shrl xor lods cmpsl (bad) into sbb mov rolw mov mov or sbb mov jbe jp (bad) jb fstpl xchg push mov pop xor pandn shrb sahf cli imul idivb jge add push cwtl sbb xor aam repz cmp (bad) mov pop push and lahf push inc cmpsb push mov repz jmp mov xor push pop xchg test les mov adc cmp adc mov stos fdivrl sbb ds cmp lcall xchg (bad) sbb xchg mov popa mov xchg mov cmp sub ss inc cmpsl test arpl stc movq sub (bad) clc cmpsb cmp jns sub add js or into insl (bad) hlt pusha or scas jge test push addr16 jnp inc mov fdivrs int jl cmp sub call pop and mov inc push aam sbb push cwtl push cmpsl test inc int3 add xchg and cld inc and (bad) jno fidivrl sbb mov or and xor mov pushl fildl and fwait adc arpl dec scas cmp imul xchg mov js lret lods dec rcll sbb out (bad) dec cwtl cld pop int js,pn fimull jp push mov sti sbb popa xchg xchg sbb (bad) jbe xor jb lods cmpb ljmp push sub jb icebp fdivp jmp scas xor sbb pop fmull and dec add je scas sub pop inc mov ds sbb sub shrl sbb dec adc fisub into decl lea or jno push add fdiv lock dec push sbb inc icebp mov pop push lock scas xchg rorb into lock inc dec iret xor mov xchg sub lret stos repz inc stos rcl scas or mov test cmp aad mov xchg in mov cwtl xor mov je xchg fidiv stos scas add mov (bad) xor in jecxz jge add outsb sub mov fnsave (bad) fwait mov lret aad mov jnp add sbb cli mov add jbe xor js ret push pop popf adc push jno inc into lods mov dec xchg mov pop stc clc lods xchg jns flds push jno jno (bad) adc or xor push adc mov cmp dec sub out or loope and push aaa pushf pop aad xchg (bad) pop mov fisubrl sub cmp add xor ret or aad sbb push mov aam sarb lock cmp dec jecxz outsb arpl (bad) mov les popf cmp push int3 mov into xchg xchg out push sahf imul and in cld inc fildll add sbb cmpsl mov inc sbb bound or push fisubr ljmp fidiv mov pusha insb stc in cmp sbbl mov rcll mov pop sbb push pop push popf cmp pop and cmp (bad) stc dec add outsb imull repnz and mov aaa lahf mov inc into dec pop jb pop add subl push repz pop xchg sbb inc cli sbb addr16 mov fldcw mov scas nop popa insl ss loope mov xchg stc sub mov jo jle mov and mov jbe inc iret ljmp sub cmp (bad) jbe in xchg aas add adc or adc sti dec icebp sbb mov fisttp adc add mov mov cmpsl xchg lret inc mov jmp ljmp cmpsl clc pop or sub test push icebp xchg shr jge inc add jo outsb push int3 call mov outsb cld mov lock jge clc push sbb jge fist add test imul fcoms stc aas push aad pop jmp int3 mov push fldl adc lahf jb mov add add bnd lret cs mov pusha movsb push jle dec cmp fwait cld pop sbb mov mov cmp sbb mov sbb es xchg fidivr into mov xchg inc jecxz cmpsb pop push int inc ljmp inc aas icebp mov push and arpl push push jl nop (bad) leave bound cmp push cli xchg and xchg fiadd inc or mov insb jmp adc xchg test or in les out mov add iret push adc add (bad) sbb xorl ss mov sbb mov cmc mov ja sti cmp mov or test mov popa in xor in mov sti jae cmpsb fdivrs fwait adc pop test dec cmp in fnstsw adc and mov push pop fcomip add aad xor xor insb movsb jnp loope dec sbb aad bound sub mov pop je xchg cmp adc imull mov cmp dec out push mov sbb sbbl (bad) pusha xchg mov (bad) ljmp int3 std push push xor and (bad) jp jnp std mov add pop ds in aad cwtl pusha les shll (bad) or mov inc hlt push inc sub insl shll push sub push inc js rclb aas leave push fistpll loope notl sub test push cltd and mov int3 pop cmp into xchg sub xlat dec sub jmp add push popa adc push test jns inc mov xor hlt mov sub rolb and pop ja dec mov and push in dec cmp cmp mov data16 lret mov ja repnz fsubs sub push adc or hlt sbb push insb clc xchg fdiv pop mov push les push sahf inc imul xchg out mov add sarl in cmp fadds aad or inc (bad) shll es sbb test adc (bad) sbb push popa (bad) cmp (bad) mov jb (bad) aam pop ja mov aas test out add nop clc sahf (bad) nop mov dec stos or and lods stos test adc int and cmpsb jo pop (bad) lret cli mov add mov cltd lahf (bad) leave xor aaa cli sub mov push je ljmp (bad) int3 movsl xor js lahf mov in xchg dec sbb addl mov sbb sarb sub daa les in inc mov out cmpsb loopne xchg movhps insl xor cmp inc dec icebp dec rol ja xor movsl or xchg aaa lods pop add movsb dec or xchg xor jecxz and fiaddl and mov adc lret nop push add sub jae sub mov test mov aam in cmc add gs sbb std and pop xchg pop add notb xor adc mov xchg pusha into iret das aam lods lret stos fldenv test je cmpsb jmp ds sub (bad) mov (bad) sbbl pop sbb sub lods jle dec ljmp jle jle inc imul sbb mov (bad) hlt jecxz mov mov stc test pop push cltd scas push leave call and stos xor sahf jl lods dec addl cmp ret es popf stos push sti clc xor fistpl stos sub aam sbb jecxz lock pop cmp stos repnz call inc (bad) cmc out mov fildl pop fptan mov (bad) aaa into popa imul push bound mov dec inc mov dec and mov sbbl fcomp xor mov cmpsl outsl aam in aam imul int sbb enter mov inc or adc xchg adc push inc push pusha aas and push into xchg cmc ret repnz mov sub lock leave or je jb or ret cld xchg fidiv mov lods xchg sbb outsl jg jp sbb push pop xchg fdivrs xlat adc push data16 push cld in movsl test ljmp jmp hlt and (bad) pop out xor push jne and xor or inc sbb fcoml or divl das mov iret mov jae xor mov cli clc adc (bad) add jb or sub (bad) je pushf xchg out pusha stos push xchg push nop xchg out es negl dec roll lods ja aaa mov dec add pop jg xor mov mov mov mov jo aas pop imul cmpsl (bad) or fisubrl inc in cmovno shrd sti xor sahf mov xor mov das scas mov scas lret movb and mov adc in pop push cmpsb les aaa add insl clc pop dec cmp dec repnz cmp mov dec pushf (bad) icebp sbb mov jbe (bad) dec mov jge mov pop mov mov mov sub je loope stc out outsl arpl test mov or xchg lcall lock movsb mov jecxz (bad) mov fidivrl ret pop and pop lods decb cmp int3 fnstcw aas jae lea add xor rolb sbb outsb ja (bad) dec cmpsl cmp xor cmp outsl push gs sub leave jecxz lret scas loope andb xor aam cltd add hlt jb stc dec sti adc mov jmp mov sbb mov clc adc pop daa imul insl ds inc jne test mov add sbb pop sbb mov xchg lods xchg out pop inc and xor imul or gs push cmpsb push sub jae push mov add std sub sti repz sahf ds cmp (bad) pop aad adc out lahf jns data16 mov fninit jo inc (bad) (bad) scas stos fwait sub xor fistpll jo mov mov ret fdivrs lret inc inc push push jmp jns scas or iret push cmp xchg mov sub push mov cmp bound pusha loopne gs ficomp ficoml fdivs add out inc andl or xor fwait lret clc int3 in shlb cmp mov lret outsl push add adc hlt xor in dec lret leave pushf adc call sub shrl and jb pop jb cwtl into xor jle (bad) insl lods mov je mov mov add jp,pn outsb out mov clc popa sti fs jmp ds fdivrs je in cmp movsl neg outsl xor xchg mov mov sub pop sbb mov xchg test outsl pop outsl cmpsb mov fsubrs int jno push bound sub jp or lahf repz gs sbb aas lcall mov push int mov mov inc pop adc test push mov and enter jo or jp push inc mov lcall mov and push sub repz leave aad cmp push ja fbstp pop test push pushf cmpsb dec push and loope jle rol pop mov adc push cmp ret jne cmp test mov call (bad) aas adc sbbl cmp enter mov jb lea adc push inc cmpb jecxz mov pop ss dec data16 cmp sub cmp mov cs ror add rcr sub adc push jecxz jae aas or mov (bad) pop sub push push xor inc and rcll aas dec (bad) pop fs pop fsts (bad) mov xor or into cmpsb jae dec sbb jg repnz xchg (bad) mov ja fsubs mov mul dec stc scas dec mov xor (bad) test test inc push or xchg fwait iret lret push cmp notl fstpt fimull loopne bound lock add or dec out xor sub daa jnp out je enter ljmp (bad) and lods jp sahf cmp pushf std mov jmp dec mov cmpsl rclb stc and fmul sub sbb cmp pop jecxz sub mov je movsb scas sbb xchg inc dec xlat or add fnstsw cld xlat out xchg dec sub cmp outsl mov fmuls (bad) push pop rorb lods (bad) and mov push adc mov inc ss cmp dec push outsl pop cmp xor ret and cmpsb rorl loop push (bad) cld lea mov movsl outsl scas adc insb ljmp jns cmp fildl fiaddl sub mov (bad) mov pop xlat dec dec int divb int3 mov inc inc mov rol push xor dec dec adc in js xchg and mov loope es loop cs sbb or push sahf icebp cmp cmpsb je mov bound test stc lea cltd in call mov lret jbe inc jo fwait and insl in pop sbb movb aad sbb sahf in xor jmp or push mov push mov sub aad lods sub add xor and ss out stos sub or test add sbb (bad) lret fs nop repz push out xchg sub pop and fdivrs add dec repz sbb sub scas cmpsl xchg or rorb sbb jp xchg sbbb mov fiaddl in aas xchg (bad) mov pusha or adc lahf popa pusha push mov push dec or shrb fdivrp lahf cmp movsl ljmp pop movaps cmp mov sbb ds test dec adc mov (bad) and push into out test out bound in das movsb xchg fs jmp leave test ret rol or and cltd loope xchg xchg lock movsl lods cmpsb dec lds mov iret cmp fistpll add sbb adc xchg scas sbb xor fstpt and pop pop cmpsl jno sti cmp (bad) or sub loope loopne nop lea xchg das add loopne aas mov pop cwtl cmp add mov jnp mov mov (bad) rorl sbb xlat lret push mov mov loop insl in testl push cmp inc sti sub in or test in ret (bad) int3 inc lock jb mov or into xchg add mov sbb enter leave xchg (bad) push lcall jbe mov push shrl (bad) ja pop jno (bad) xchg out mov inc stos mov lret aaa mov std mov fwait lret in into push mov mov ss inc cmpsl mov push test fstps fs xor mov scas sbb and in (bad) xlat cltd dec cmp (bad) jbe inc movb lcall leave test insl pop add js xchg pop test mov sub insb imul add in out sahf dec xor pop mov cmp jecxz inc xchg sbb enter pop jle loope inc mov jg mov cwtl or jg stc lret mov dec push inc outsl mov test xor sub cmpsb mov mov sbb lret push add sub or jecxz fbld test dec mov push dec push push mov test mov sub cmp inc xlat cltd sub push mov xchg xor mov mov or mov (bad) ret fcoml out mov rcrl out je mov sbb push adc pop mov lahf push inc or pop dec jb es mov xor mov lret and ds sti js pop dec loopne arpl mov lret enter scas (bad) lret imul std test xchg mov mov orb repz mov std push arpl rcll inc sub lods and mov es mov cmp imul lcall push out cwtl mov popw push mov mov xor jl xlat adc xchg jne lret std push jo sub mov (bad) mov xchg dec inc loopne sahf xor sub fldl out sub icebp imul mov mov add push hlt dec cmp inc inc fcomi fbstp xchg insl loop mov nop xchg pop nop xlat sub cmc jmp push cs clc jl xor add mov mov in lods inc inc (bad) ficomp aas mov fmulp into mov cmp pusha inc imul aam mov movsl add insb mov xor add sbb stos lahf lds repz stos or lds jne dec movsl loop add bound pop or (bad) popa int3 jmp pop insl pop cmpsb sbb stos and arpl fs lret mov inc push mov out mov push push movd incb scas decb pop stc mov jbe das cmc jp jbe cmp in ret pop pusha xchg sbb jmp xchg idivb out lret and lods rolb out daa aaa add jecxz inc hlt mov mov sbb jge xchg xchg out scas dec adc and mov pop sub sbb xor adc dec dec ret xchg push cld ja lods dec jae mov je push dec and add sub inc daa pop mov arpl inc test test push addb stos sti mov lret imul xchg xchg xor fmuls pop lock scas out lcall cwtl mov leave popf mov in add jge mov push insl jnp sbb cmp out lret push loopne sub roll mov push gs xchg mov push fnsave sub inc es out jmp sbb fcmovnu xchg test sub inc xor negb (bad) mov enter in adc outsl rorb test mov ret adc out cmp lret xchg jae cmp pop roll xchg aad xchg (bad) mov xchg jmp adc or sub sub ja test sub ljmp orb shl jmp mov jb enter ja ja pop pop stos les clc insb test popf ror mov popa pop cld (bad) pop stc outsl fdivs (bad) mov or sub stos (bad) add sbb xchg popa int notb notb test data16 sbb scas pop (bad) jb push xor fsubs mov lock lret lret insl lds mov mov xchg in movsb ret mov push jbe in cld icebp ds push jp xor xor push mov mov add arpl jbe movb dec aad into fwait in cs int3 ret cwtl cltd inc and jge dec add pop movsl adc aas mov dec push inc add (bad) lock sub fdivl push mov icebp xchg mov mov cmp sub fxch cmp fs (bad) aaa popf dec inc mov loop fucom mov lcall loope in xlat popa (bad) pop in rorb xlat sub jo jle jp repz push cmp xor cmpsb dec xchg mov data16 pop int movsb ss sahf int3 sub mov aad xor or mov rcl lock sbb mov add adc push xchg sub or ret adc mov mov sbb and idiv add push xor xchg cli mov add shr mov sbb pop into loopne cs pop adc fldenv dec push das in mov in jno jge push inc push mov xor in add aad or mov add lods (bad) imul aam fsubl leave lret arpl cmp push push testb std pop imul inc xchg fcompl js int inc (bad) sti clc or shlb sub lcall mov push lock ljmp push mov add std ret sbb dec push xchg shlb push aam cld or out jb mov mov jb je and stos cmc sub xchg mov popf add fstl and mov (bad) mov push lods sbb insw decl divl mov imul jp outsl pop xchg dec cmp xchg fcompl xor dec ds scas mov jl test into out mov scas jge pop add and out loope inc into (bad) mov in (bad) repnz movsb sbb mov (bad) dec jp sbbl inc adc negl das push fs pop cmpsl cmpsb and cmp in outsl jo cmpsl out js xchg add sbb ret call loope xor jmp sbb (bad) addl cmp mov jae mov cld mov sbb mov nop sub push xchg fdivp sbbl mov out jno stos fnstcw jo inc push pop (bad) xor out rclb xchg or pushf cmp test clc push scas pop push jbe sub xlat and loope (bad) insl cwtl or jnp int3 jo mov ret push iret sub mov mov cwtl mov adc addb ja ljmp imul rolb push mov js pop mov fcmovne test insl mov std hlt (bad) repnz cmc mov push jge sub jl dec inc cmpsb (bad) pushf sbb dec fisttpll imul push xchg test out mov dec dec repnz cld push xchg rcrl mov dec aaa nop add fcmove mov mov int or fsubrs stos popf js jp int3 stc mov sbb xor push pop sarl push mov mov xchg cwtl test loop lods bnd in cltd scas inc (bad) sbb test mov cmc fisubl adc in xor cwtl addr16 adc ficoml push or data16 mov cwtl das lods xchg scas mov push xchg and test xor cmp fcoml test push jo call inc jle sahf stc sbb loopne in jmp (bad) sub sti testb cmpsl mov lahf sbb insl aas mov stos test xchg mov data16 fnop add in and insl rcrl push (bad) ss out out movsb add lcall inc xchg (bad) xchg adc scas leave and or fs adc xchg and fldl les add lea jmp pop aad pusha and sbb test add sbb rorl out jp inc enter ret popf fistpll inc out inc dec push lret and jnp mov pop dec sbb out rcl pop test and (bad) or mov jg xor negb lods les mov xchg test jbe mov pop stos fiaddl fisub sub (bad) jnp pushf inc (bad) cld pop mov pop jb and mov add out or (bad) gs std dec dec shlb sbb mov ds and push lret fiadd dec xlat dec movsl cmp push mov sarb fsubrl mov jecxz sti xor mov sbb in call aam cmp les mov dec (bad) push int fcmovb cmp cmpsb pop sub scas fwait xor cmp clc js popf cmp (bad) lret and xlat dec insl mov and sub xchg dec mov add fmul fst mov and pop repz jecxz (bad) (bad) jno jecxz (bad) int pop fsubl aam push xor aad jae fisubl bound or xor cli push imul pop lcall and mov mov dec push test es mov mov push js cltd pop mov pop mov mov out cmpsb sbb pop ficoml hlt outsb xor int3 pop mov push mov push cmp sbb mov jno jmp mov addl push fdiv cltd gs sbb popa fdivrp mov stc frstor in test pop cmp cmp push xchg out mov cmpsl inc les jecxz aas or dec mov jmp pop or and lret cmp jno push in adc sbb ljmp jae inc mov mov jbe pusha push test sbb test test adc or or sahf sbb (bad) ds in push insl xor enter cmp xlat (bad) into fsts aam inc jb mov negb push sbb fsubp push jl in add (bad) jbe lret scas (bad) mov daa dec mov and add xchg or cs movsl mov or in jmp movsl jg,pn push mov or xchg fnsave (bad) mov lds cmp mov push hlt outsl enter pop pop sbb int arpl add shr dec add gs and (bad) mov arpl das push (bad) aas mov add mov mov mov je mov dec ret or lret adc or scas pop fidivl jl mov pop jg stos int3 xor add pop pop daa inc dec push stc and cmpsl inc inc cmp jecxz xor adc cmp ret addr16 data16 lahf jno jecxz push scas and jns and ror divl jne xchg mov push jae cmc fmulp cmovae repz fstps xor gs pushf jbe and inc pop push xchg cmp jecxz orl cmp cmc jmp adc push out jmp push lcall inc inc pusha dec cli pop arpl imul fucomp fmuls stc jmp jecxz in ja insb pop jb,pt jae and (bad) repz sub inc aaa pop in std cmp (bad) push cltd cmpsl shll es push and jge hlt pop in xor mov repz movsb or mov aam call xchg loop mulb xlat inc mov jecxz jo push and loopne imul xorl insl or test mov and movsb ss push popf inc pop and call insb push sbb xor push dec arpl scas adc and aam push mov bound ljmp jge mov fcmovne les xlat dec push jns xchg cwtl xorps shrb xchg inc insl loopne mov push (bad) xor clc xchg (bad) icebp inc fldl pop dec jnp add mov and out mov or sbb dec adc cli fisttp jno negl mov inc sub xlat fcom push lods add and leave pop cld inc cmp arpl in jne mov lret mov dec (bad) (bad) sub sub iret ja sub (bad) cmp add inc xlat mov insl movb jno push push lret jmp jbe mov movsl test stos jne dec in (bad) icebp roll enter mov and xor or cmp cmc dec and fadds or jno (bad) in ja (bad) iret lds or je jb xor mov call popf mov into faddl add in sbb dec repnz cmp lock mov pop sbb sub scas or dec sbb inc loopne movsb push adc inc mov sub xlat mov pushf sub nop out jo adc inc icebp jecxz insl mov (bad) rcl cwtl sub xlat inc jge je lea pop dec dec fcompl bound pop (bad) xchg cltd lods pushl adc pop nop loop sbb iret (bad) outsb nop popa pop ljmp sub mov pop ja xchg dec stc xor out mov cmp popa iret mov sbb jmp stos xchg mov lea sub jns and je sbbl cli push and push sbb xchg pop xor fcmovu push mov lock out jecxz ds xchg sub sbb pop (bad) pusha aam xor dec test (bad) push lock imul out les fisttp xor sarl jle cmp sbb adc inc rclb mov mov or sbb adc push mov stos fwait xorb add inc rol dec jnp inc xor test mov jle enter xchg sbb aam out sub inc adc scas lea mov inc jl inc mov insb int3 push pop jp sbb sub clc mov hlt sbb pop fwait push es xchg and lret mov call pushf mov outsl pushf call sbb aam cmpsl xor push rcl std xchg or adc mov stos adc cmp and arpl pop push fbstp cmc lcall mov push adc and (bad) rcll sbb ret popa lds jecxz xchg arpl ljmp jo lods xor pop inc push xchg xor cld inc dec cmp mov mov icebp mov sub int dec int lcall jmp xor jno push pop cmpsb xor pop addl sub lods dec loop inc pop dec jo xor std xchg push mov popf and push test xor aad inc out mov dec stc js xchg jmp daa inc shrb test and mov sti loopne jmp repz ds out rcrl test movsl pop pop leave mov insb mov hlt cmpsb js lea cmp fnsave sub jno xchg xchg jp mov adc out push mov mov pusha subl push into out insl adc int3 push rcr test aas adc push jns pop clc sbb and cltd sbb out std lret jne mull in insl or stc scas lret imul cmpsb inc ret fadd (bad) das jae lds addr16 flds and (bad) sbb sbb in inc sti adc inc mov dec jmp and dec adc lret xchg sbb mov pop je jnp es mov mov sbb pop mov mov rcrl insl pushf or xchg jae push add sbb xchg inc test push nop or mov pop push dec push add or (bad) mov mov or push mov arpl inc mov pmulhw mov sbbb rcll into enter lods xor daa or int3 insl jle xor mov in sbb inc sub xlat adc push (bad) in mov pop mov jecxz enter lock ret pop cld add jp outsl cmc lods xchg outsl xchg push arpl mov add out (bad) arpl or mov addr16 inc dec bound (bad) xor out sbb sti mov or adc loop pop (bad) and fnstsw ret mov xchg ss sub shrb inc lock lret pop jp and scas xchg fsubrl into lret inc bound cmp scas push pop mov or in mov test push loop sub sub mov fcomps sbb mov jno jecxz jge mov pop push daa push lock or mov ja,pt (bad) sub cmp push test jp mov mov test pop mov ret inc jmp jge mov cmpsl insb ja push adc mov sub mov push fs jnp fsubrp jbe pop mov push sub jno cli mov xchg pusha jg scas pop mov dec dec lahf add sbb jge dec mov jb imul lahf lret into adc adc aaa lds push bound stos mov dec jbe jbe daa sti fcompl xchg xor push mov add sbb test xchg push dec dec mov (bad) fldt lret cmpxchg8b sbbl jecxz fwait mov movsl dec xchg mov xchg les aad xor into push mov enter mov lcall sahf je push push adc mov ljmp or scas fstpl jne ljmp pop xor push adc ljmp sar sti mov cwtl sar push sarl cmp ds neg sarb mov scas loope (bad) sbb sarl cmpsl leave push adc mov call xor mov pushf jbe dec inc sub jle out fdiv and mov enter xor pusha (bad) push inc jns mov pusha fiaddl jg mov pop dec xchg mov in mov xor jle xchg pop dec ds aad lret in mov xchg cmpl jo mov or iret xchg cli push mov adc pop mov std jne and and mov in mov mov add js cmp mov xchg dec sbb add pop mov adc ret adc scas push fnop leave sub mov xor outsl push pop cmc fdivl jno mov pop inc lods setae pop icebp ss cli lret mov and cs cmp repz cmc push outsl lods mov into adc cmc outsl pop mov imul jno loop lock jb push add fnstsw xchg insb call popl aas adc aaa bound (bad) cs mov int rorl (bad) push outsb jnp inc lret and loope sub lcall in sbb sub or mov fs rcll pop sti (bad) aaa dec fistpll lods int3 pop cli ficompl lahf out sbb outsb mov test popf icebp dec aaa popf clc pushf mov xor (bad) mov jmp pop jp inc lcall fsubp adc xchg xor les mov in push out sbb sbb int3 aam fcoms or into into test lcall sub inc dec cmp dec test sbb fmull loop push lock loope out add inc test lea adc pop js push jg insb jb repz sub add ja cmp in movl xchg or je mov arpl or rep dec xchg jnp sbb in mov es js test into jae fwait cmpsl or dec inc mov adc sti dec stos (bad) jmp scas push mov sbb push pop xchg decb test test ljmp sarb notb das sub sub andb repnz jb adc xchg jb mov xchg jle sub lret add mov add divb xchg call jns push inc pop test and mov mov sub loop mov jp ret mov hlt cli dec sub push fildl iret mov jne ror fwait xchg andl jns inc gs dec adc in mov add stos jnp cwtl mov test push addr16 add add push mov iret dec jle ret call sub xor mov movsl push mov adc dec or in (bad) jbe jmp mov gs mov xchg jae movsl fsubrl das std mov mov mulb sti adc pop icebp pop imul insb insb lcall jp data16 push loope xchg sub ficoml jg push cmp adcl or xchg mov pop mov xor jns pop mov sub inc pop repnz repz fdiv mov lea icebp data16 jge xchg (bad) sbb cltd inc ret sub ret fbstp and pop adc xor xchg cld sub lods sbb (bad) cmpsb lods mov loop and out scas xchg cmc xchg mov movsb test dec xchg jo cld mov jnp mov or (bad) jne push std mov pop sub icebp sbb in rcl push xor sar or call xchg push stos inc test mov daa jns in jmp add xchg sbb cmp loop jne pop out mov loopne loope sub cmp jnp repz sahf mov mov mov int aad mov dec stos push fidiv cmc stos ljmp enter es pushf nop jo xor ljmp or xchg adc (bad) repnz jmp jmp sub xchg cltd sub push or mov inc loop xchg (bad) dec cmpsl pushf into js dec jmp out out dec fs add jle mov jmp add lcall ja,pt dec cmp sbb cmpsb cmp ja aas imul fs sbb mov (bad) call daa xchg mov add scas jge pop rorb dec add out cs dec xlat out adc push addr16 aam repz dec frstor push cmp mov movsb lds ret aaa andb dec gs imul inc (bad) (bad) fcompl or aaa or call stos cs ss gs cmpsl sbb add push mov sti in sbb mov adc mov push sbb xor pop mov cmp adc sbb lock iret jecxz and push fistpll mov push popa mov sub cmc mov aaa movsb call in int3 int3 sub out xor jo cmp inc cwtl sub fisubl hlt xlat inc cmp stos in push (bad) rorb lcall je nop ss xchg inc xor xchg jae int3 sahf (bad) ret push adc insl out mov xchg sub repnz and jge in outsb push clc push inc push popa sbb out and dec out lock xchg ret ror push lea cmp scas xor addr16 insl imul das fisttpll in pop lret adc push lds xor and imul out test mov pop out (bad) mov imul fs clc scas test inc je stos and lahf pop adc xor jp push mov lods push and adc push (bad) mov cmpsl bound insl outsb or jmp mov scas mov mov pop test popa jns pop shrl aaa lret add (bad) mov iret mov push fwait movsl sub and mov aad shl lcall sub outsb jb dec jne add push or push dec xchg xchg sub int3 (bad) das sub xor mov ret and sub mov pusha ret lock imul lret add sbb shll aas rcl jecxz xchg pop or mov cltd jae pop or push mov sub rorb loopne inc xor std mov jo data16 add int cwtl out enter sub arpl shll cmp add std arpl fdivrl mov cld and add (bad) mov stos pop xchg mov fstpl out push add hlt push push xchg mov idiv stc ljmp pushl stc jmp add mov das (bad) icebp sbb mov popa addr16 es hlt fld out (bad) pop leave fldcw jp repz clc and and in inc jecxz cmp lahf insb decl subl sbbb pop push aaa dec insl popf xchg pop add inc sub pop into inc add sbb dec arpl je mov sbb lods sub je int xor (bad) lahf adc and and mov (bad) in fs into jp int3 jo xchg lret mov loop lds jae lds xchg mov mov pop mov mov sbb push push lds rcr mov push out sbbl sub cmc enter fisttpll inc (bad) inc mov ljmp (bad) xchg or mov aad lahf inc dec mov sti dec mov lds jno (bad) popa loope stc mov push pop (bad) pop ja cli push in les pop mov mov imul imul out adc or lock dec mov ds sub pop leave into fstps mov jne scas xor sbb jns mov lods jle or and xor test jbe into push push ret xchg imul adc syscall cmp scas dec in roll inc sub and sarb popa cli fwait cmp mov sub push js imul repz inc loopne mov std into test sub mov dec (bad) test mov hlt xchg sbb cmc jl test ja xchg xchg push and imul cltd es ljmp push xchg int3 mov lahf lcall mov jb ss mov lds dec and int3 mov and clc jmp (bad) mov dec scas popf das cmp cmc movsl into cld (bad) xchg xchg arpl mov (bad) sub pop fsubl pop sub jbe rorl or (bad) incl shlb sbb lret (bad) ds pop mov lock ja std pop ljmp icebp gs and mov (bad) lods call cmp out jno pop fwait scas xor or adc aad pop push rcrl jp ret cmpl js aad rorb aas cmc sahf iret adc lds mov push pop inc push push fldenv pop out add dec push mov imul jg test jne mov (bad) stos or mov mov jne subl jne into outsb cld push pop mov mov call xchg adc cmpl out imul mov das scas movsb sarl std sbb sarb cmp sbb stos mov pop mov adc xchg mov mov sub (bad) dec in dec and mov pop sbb cmp icebp movsl enter lret cmpsb xchg (bad) push iret addr16 faddp subl ret enter in mov aam cmc jp dec addr16 fdivrl mov pop loope add test jg,pn orb mov (bad) mov sub mov aad imulb cltd test mov xchg mov scas fs loope push jne ret jg ret arpl add pop jbe jnp sahf push shlb push mov insl gs sahf pop mov es and test mov push in arpl les jnp cwtl jmp xchg pop xchg sbb fs mov ror enter dec pop cwtl dec sbb pop or out cltd mov (bad) adc or test popf and inc sbb into adc mov (bad) push mov add std xor hlt fadds or sbb (bad) sbbl enter inc jbe sbb sub sub fnstsw movsb add ss dec jb cmp sub xchg ror xchg xor mov push sub add call clc out cmp push (bad) hlt in ja addr16 leave mov mov adc sbb xor into orl sub dec and add sub or xchg xor pop xlat jg jne int push cmp test les enter xlat int lret pop xor fdivrs (bad) jne xor mov call jbe sub cmc loop fs jl lock cmp fldt ljmp lahf (bad) (bad) rolb iret cmpsl cs dec sub test xrelease push psubd orl inc in push dec xchg inc cli jo add enter popf and insl inc ss repnz pop sti pop pushf push xor or or or in cmc xchg aad and aaa lea cltd adc je lds cmp mov mov sbbl in lods sbb shlb scas mov rcll fs pop out in gs xchg cs cmp dec fwait sbb pop stc (bad) sbb int3 mov push add dec cli jno and ss int3 ss pop cmpsl jnp in lret cltd in ja les xchg lods dec aaa out or sarl fldt loop xchg das ds sub mov add ret push or (bad) mov popf xchg cmpsb pop sbb mov outsl mov mov inc into int addl gs push cltd mov dec imull cmp push pop sub sub mov loopne and lahf fcmovu adc push lods shrl xchg or (bad) jecxz jmp push (bad) mov mov or sbb mov or mov loop arpl adc inc pop xlat push mov (bad) les pushf cmp fs mov push cmp mov adc dec sbb or push in lahf int adc jns lds stc and cs arpl std dec mov repnz push xchg and xchg test mov jo cmp in xchg lock in jns sub shrb insb loop shlb lock mov xor lahf in jge push cmp fiadd dec int insb inc rcl mov add loop lods or adc les push and ljmp cmp cmpsb movsb jmp xlat loope adc push push xchg rorb in out add push test notb mov mov mov mov sub test inc dec sbb ss push outsl xor lds arpl insl or movl mov enter popf inc add push repz dec outsl jl subb rcr sbb vmovdqu sbb (bad) inc out pop mov pusha push lock loope test xchg pop inc xchg pop lea pop inc xchg test das enter fistp mov js cltd adc cli (bad) aad fmull pop inc call mov jge insb or push push jnp adc das pop movsb enter (bad) xor xchg div imul call out aad cmp inc hlt push pop push cmp sub shrb popa out fistpll sbb call imul insl push mov adc rcr or imulb adc je lcall pop jl xchg sub lret cmpsl out daa sbb adc int3 inc in (bad) out std add pop (bad) xor ja dec xchg pushaw adc push (bad) dec mov jno out inc push int3 and arpl add stc imull clc cmpsl loop mov jae in xchg mov loope out xchg inc push sbb das pop outsl popf test fs pop (bad) testl inc test jno xor lcall jmp sahf mov dec xor stos cli aaa (bad) adc imul pop jl arpl aad sahf sahf das jmp insb jge leave in (bad) xor into sbb push loopne cmp adc rolb insb ja and out jb jge orl cmpsl cs and pop jmp outsl outsb int3 push test pop cmp sbb push pop jecxz dec popf mov (bad) jle leave sbb aam inc out outsb mov xchg ds int cmpsl in (bad) mov jno dec fnsave imul lods pop fucomi mov clc imul jl inc cmp mov scas jecxz test mov sbb loope lods and adc mov sbb push cmp and dec les cmpb mov dec mov ret pop les sbb in cld push sub jmp outsl mov cmp data16 into inc iret xchg inc jmp loopne mov dec or daa jmp dec dec mov inc rcll jbe mov insb hlt nop pop mov jecxz fcmovne dec xchg jle arpl data16 cmp incl scas mov (bad) mov push mov (bad) xchg (bad) repnz mov enter (bad) cld int mov inc xor adc (bad) shlb gs mov jbe mov mov cmp lret test pop loopne push repz mov dec jge fwait sti inc nop mov dec sub cmp cltd fstl jmp rcr int3 cli adc (bad) mov adc jg test pop jo xchg jl (bad) je cmp les adc dec js lret mov jecxz loopne frstor adc push out xchg add push mov inc jno fstpt and mov ficompl sbb mov xor idivl leave jae sub scas and imul and fiaddl mov adc jp lods jbe aam dec jne repz add sub mov mov cli inc push (bad) or roll dec cltd mov xor lret or mov pusha fistl mov popf fisubrl xor dec and jae pop (bad) xor jl and sub sub out cmp xchg add jnp mov mov ss cmp mov ljmp outsl mov lret aas add push test leave lods mov roll (bad) cwtl (bad) cmp dec push gs repnz loop push xor sbb cwtl inc add flds sbbl dec pop pop xchg xor mov inc and jo pop popf outsl scas aad fldenv dec insl fdivrp mov inc sub or jne sti sub xor insb hlt pop inc jg outsl mov outsb stos push sub add mov or test or cmp popa rol mov adc das mov fstps pop sahf push je in xor xor sub xor in mov daa jo sub sbb cmp cmp jmp mov xor into ret sub test addr16 or dec jecxz int and pop push inc mov in mov into leave mov pop out cld inc pop add arpl sbb jge dec xchg xchg cmp mov mov push dec (bad) iret icebp xchg pop scas push fs pop ss xchg jg test loopne outsl cmp or pop out cmp jecxz mov add sub adc dec aam sahf ds out inc adc inc sub adc daa push out pushf cmp xchg xchg jge inc addr16 xor test lds lcall test test js pop arpl mov test in or dec adc jo or aaa xor add jae and inc cmp test or leave pusha cmc (bad) repz lods cmpsb aas jge push fisubrl jge add mov jne mov sub sbb jge (bad) adcb je insb dec outsb ret mov in adc mov mov dec jae mov lock mov popa pop test push lret pop xchg lods or push mov push push xchg xchg sub fisttp mov lret hlt xchg mov andl in add stc ljmp rorl push xchg xchg cmc das jmp stos fcoms ret jno test sbbl sbb cld or push xlat aaa push sbb insl mov jl fsubl cmpsl xchg cmc fwait into je jmp sbb add mov or aad xchg xor cs loopne rol push jnp (bad) fwait jbe and (bad) push daa ret addr16 cmp ds jo aaa pop cmpsb dec hlt mov xor arpl sbb aaa xor mov dec jmp test inc nop (bad) xor push sbb inc inc scas sbb mov ds scas iret dec mov mov jae leave adc js mov mov cmpsl std inc repz or xor mov add sahf add mov das jb push pop mov fnstsw xor mov (bad) push add notb stos or sarb jno inc cmpsb not xchg ss pop mov adc mov mov lahf ljmp sbb nop (bad) aas and ficom hlt test test add pop pop add scas mov pushf mov dec (bad) cmp ljmp scas cmpsb cmc in addr16 lods jge out cwtl mov sbb adc push test xchg lods mov out cmc push xlat out stos mov bound jo xlat push fwait daa lea outsb dec lds mov mov dec jp stos test cmp (bad) rorb sub das movsb loopne push xchg dec push adc mov loopne mov lea ret jnp mov mov pusha lods adc inc cmp mov sti int3 cmp mov xchg in jecxz adc fsts out add popf rcrb pop add lret cmp mov aad int3 fmuls push mov mov fs int3 ror mov dec into leave fs jge or imul inc fisubl jecxz (bad) fs push addr16 movsl rorb outsb clc sti jge cmp rclb xchg mulb sbb inc icebp aad mov push loopne fbstp pusha jbe add jns mov lcall pop mov cltd sti mov (bad) add idivb push jnp push call xlat call cmp push decl js dec ja inc fs data16 sbb mov (bad) xchg scas int fldenv das cmpsl enter and mov fimull adc pop rsqrtps push cltd ret mov add mov hlt sahf push cld add jecxz lahf in nop loop jns xor cmp push cmp in and jmp and push loope (bad) push ljmp xchg addr16 ret cmpsb jle sub test popf push mov mov mov (bad) xchg push xor in (bad) stc pop and cli adc mov pop sub mov outsb clc nop es cmpsb mov out cmp shlb ljmp sbb in cmpsb popa out fisubl les mov out mov (bad) xor sub mov jecxz xor jbe jg inc jns push inc sbb out movsb into jne cmpsl push leave (bad) hlt dec cmp popa mov scas fst adc (bad) push jb icebp xor mov loop aam cmp das mov loop and add add (bad) sbb or push test or mov lods push pop dec sbb jle sbb mov cmp mov ja lods pop (bad) inc xchg pop outsl rcrb mov out or mov cli and push imul movl push aas mov cltd add imul sub add sub pop mov (bad) mov mov cmp push aas xchg or or nop jle hlt mov in mov xchg mov sub scas add lods and and mov xchg and xchg arpl jo mov mov pop rorl add sti adc in adc pop test (bad) imul jae mov sub lahf lret loop inc ficom (bad) movsl (bad) je inc inc repnz mov jge daa test mov jno (bad) movsb sub dec pop rolb arpl (bad) mov test fs inc nop pop scas jp add xor jo adc push add sti rcrb notl mov sbb jb inc sbb mov jb negl aam inc adc imul popa mov and loopne shrb push xchg mov dec sbb call jbe lea into add aam inc fdivrs gs rorl dec das jnp adc cmp mov int sbb mov mov cltd outsl call mov and mov mov dec int arpl js scas scas enter stc xchg jb jae add pop sbb (bad) pop mov pop sbb cmp xchg push add aaa loope dec icebp popf pop lret in add push xor sub cmpsl shll sub push jle repnz nop push aas fisubr lods jle adc adcb adc not js or sbb pop fstps jae dec dec mov add sub iret dec push jb arpl adc cmp mov rcll or adcl shlb ret sub mov mov jns cmpsl cmp mov test fisubrl cmp inc push je jbe outsl outsl push aad in push idivl (bad) jno xchg std lahf push lock cvtps2pd mov cmc cmp jno in xchg mov and js movsb sub jne loop ffreep dec fdivrs sbb inc mov into sti sbbl leave push xor push cwtl sbb push pop lea pop jecxz dec mov xor psrad sub lods ret fwait and in xor mov dec cmp pusha and movsl push push mov adc jns push ret jbe sbb lahf pushf fsubr cmp sbb scas push outsl xchg cmp movsb or fldcw push xchg mov fwait imul das and sarl and xchg sub inc adc sub add mov inc mov push cmp lcall lds arpl std aas cmpsb and inc gs sub sub dec dec dec iret fstpl aas fldenv push in fstl int jo ret sbb add xor pop mov pushf lahf inc jle mov rcrl mov loope dec push inc scas push int lahf dec test jecxz push sub jge (bad) pushf adc int3 in sub adc pop mov or lock jp and push movsb jns mov push ja sub push les jle xor inc jo push jl fwait lds jp inc movsb std adc ss bound add fwait mov std popa push fucomi insb pusha mov test ja mov cmp outsb cmc cwtl fs incl mov repz xor sarl in icebp push mov lcall sbb aas mov xorl adc sub (bad) xor outsb sti mov out mov jno (bad) add movsl sub mov dec xchg sbb aaa push sarl xor repnz jecxz and in jge mov xchg sub push rcll repnz or jecxz loopne (bad) rclb xor xchg fprem adc pop ret pop cli mov stc fistpll mov push ffreep xchg bound lcall fadds pop or sub push sbb decl xchg jle lret aaa in idiv and mov adc iret adc out fwait (bad) mov xor jl and outsl es xlat mov push call pop pop imul mov dec and adc stos shrl je insb xchg aas inc cltd pop hlt jp movsl xchg jl inc add mov cs mov aaa scas imul in insb and sub insb les stos clc xchg pop mov fst ret adc sti scas ljmp out dec cmpl mov (bad) fmuls mov adc jno ret pop int lock aaa and and mov jae in je aad push cmp insl test xchg add mov cmp pop repnz push mov in lret dec shrl fwait or in ret loope dec xchg add jne sbbl push lea push pushf mov (bad) lret mov pop inc xor ja call push push jp xorl aas stc cld mov inc movsl (bad) dec lret add add xchg mov testl lea xchg mov in adc imulb cld mov (bad) xor test xor lock jb fldt lahf (bad) cltd mov xor pop and ficomp scas jns (bad) jg and (bad) incb in test jno shlb xor iret or (bad) pop push addb sbb ss imul xchg inc popf inc arpl gs dec negb stos andb out xchg lds pop sti arpl insl int3 ss jp aad adc cmp mov divb dec lods cmpsl push loopne push cwtl mov push sbb adc decl mov push xchg or pop adc jno add mov cs or rorb aad int3 inc pop stos inc push gs mov cmp fcmove iret mov cltd bound aam sbb fadds ss push cli adc mov cwtl cmpl aad jmp xchg mov jl hlt ret sub scas sahf sbb pushf jge outsb jle jnp sub lods dec xchg (bad) (bad) dec cltd and test xor push xor or cmpsb fiaddl inc mov lock adc adc daa push jecxz pop pop cmp rorb push loopne ja add leave push sbb insl pusha xor xor push mov xchg pop xor inc cmp pop lods cmp lock dec xor jle push pushf and add movsb jge add mov pop adc int fidivl aam xchg and divb xor push inc (bad) pop idiv add mov loopne arpl jnp dec ljmp adc xor push leave pop sub stos dec xchg cld fistp xor sbb xchg dec mov mov xor in mov out cmp and push cmp mov fcmovnb xchg test mov icebp push push imul rorl push xor dec mov push clc or scas pop xor jnp adc clc fdivrl cmp loopne test data16 pop imul fldt xor clc cmp cli inc fsubrp push sub push jmp rolb shr aaa outsl add pop mov or inc fs aam jae mov xchg ret in loope xchg shlb (bad) pop imul stc or cmpsb lods mov dec xlat mov sbb leave dec repnz inc and les adc mov inc iret dec aas sub xlat pop loop lods fild inc fadd push jecxz inc repz cmc popf pop xor (bad) xor lock insl xor scas andb jne jae mov or nop test dec jo leave inc inc mov dec (bad) add pop cmp push imul mov xchg cmp push (bad) pmulhuw ljmp mov jmp int3 adc jb lods pushf in imul pop cmp xchg xchg pop iret in aaa sbb clc mov add scas in int3 sub test mov outsl (bad) xchg ret ss xor xchg int sar mov mov roll aad xchg pop adc ljmp xchg add aaa mov xchg fsubrl mov sbb out jns mov add addr16 scas jecxz in je imul aas pop inc es push in ljmp arpl sbb ja or pushf stc pop nop cmp pop jl push scas in jb jge mov (bad) leave pop jb or sbb test push out lret sbb mov scas icebp stos repnz and push call xchg and fs mov jns jp push in ret pop ljmp and iret sbb pusha sbb push mov add mov mov and loope push int3 xor popa out ror dec xor push mov mov adc stc and and pop pop jno add aaa dec push shll rorl xor mov nop stc sbb sub fcomip lcall add mov out mov (bad) cmp mov mov (bad) pop add and stc push (bad) adc out ret out mov jo add sub out mov cs scas loopne mov push (bad) aas push or xchg js xchg popa mov stc mov and or jnp pop xchg push and add out lahf push (bad) call (bad) xor mov cmc sbb push or mov adc pop or ljmp jno (bad) aam jl xchg xor scas add popaw adc stc sub notb xchg in lods cmp add fs iret insb rclb push lods (bad) xlat stos sbb cmp sbb pushf arpl dec sbb pop or xlat xor push mov mov dec mov push add push leave add leave mov rorl ds mov insb mov lods sbb cmp in inc mov sbb loope inc movsl jne out out sbb adc cmpsb ret je das mov out jecxz xor inc testb sahf test arpl (bad) xor rcll sbb cld cwtl pop aaa cmpsb push shrl xor sub mov inc scas sub orl es jl cmp pop mov out pop mov and mov leave fcompl or inc and push xor sub in xchg mov pop gs sbb (bad) xchg mov or int3 mov ret mov loope or jle sub imul xor cmc nop (bad) sub orl imulb fimul or fmul leave les and (bad) mov sub data16 mov add cmp std shl dec cltd test test es inc mov dec push mov js cs iret sub add mov xchg jle inc sahf clc daa fcompl out and sub enter es sbb stc daa fsts mov (bad) repz push test iret pop pop test fldenv pop aaa cmp test aas and pusha and inc fwait je push inc or mov (bad) xchg sahf ja push test cwtl loop xor push xchg data16 fadds or sbb stos push mov out mov sbb sbb or lcall sbb mov xor cmp in test dec repnz out cli sbb inc push and ss and nop lods cmpsb lea pusha xchg in inc jge daa stc jg jmp in adc in lret dec outsb cmp fsts inc cmp jo (bad) mov and rcr cmpsb stos mov xor scas sub pop xchg int3 call pop hlt pop jb push popf fwait mov test mov xor loopne (bad) xor nop xchg cmp (bad) test mov popf cmp rcll (bad) sub xchg jmp push or addr16 push sahf mov push mov and (bad) popa lea fild push sbb stos sbb mov stc cmp shlb jp pop mov pusha jne sbb push sti sub xorb mov mov sub mov xchg arpl cmp scas mov sti inc sub pop in sbb and mov jg sub js xchg push and push push pushf sbb popa test hlt repz aas jnp inc push fidivr push fcompl dec data16 cltd sbb xchg imul in fdivr insl pop fstpt stc stos sbb or jmp addl jns loope scas push xorl inc dec ja aad mov shr mov pushf jnp sbb mov jp imulb xchg push bound cmp sbb mov mov sub aas pop add repnz push adc ja in shl xchg adcl cmp inc add (bad) push loope push mov test out (bad) jbe inc pop aad dec out push int rcrl out push mov xchg int mov mov dec (bad) lret inc test push or test daa push cmp pop mov aam fadd fimull fs cmp sbb scas jl pop jle and hlt mov inc mov mov mov data16 mov (bad) and add mov fistp fidivr sbbl lcall insb lret and add xlat mov fs and add pusha movsb cmp rcrb cld and cs inc and jg fidivl pop in call repz add pop popa inc test mov xor loope test es je dec ret loop (bad) int mov sub cwtl dec inc pop and pop stc outsb clc jbe push sub add inc push leave adc int leave sbb ficoml dec push jl xchg fidiv push and add and ds mov cmpsb lcall cmp das cmpsb inc imul stos (bad) adc out aad mov and xorl (bad) push add xchg inc out nop in cmp out pop add enter push mov xchg push dec xorl out jle mov xlat (bad) cmp pop call nop rorl sbb repz or dec jg sbb jmp sub cmp andb push jo mov or push and xchg jnp popa jge insl stos inc xlat lods out rolb dec and pop xchg das inc repnz (bad) gs add and mov sbb or daa cmp imul xchg push lock sub lds mov cmp jmp pop jl iret fstps imul push sbb xor cmp ret push in pop pop and outsb in mov jb cmpl add daa daa icebp mov jl push mov pop in and hlt dec test inc jp in sbb arpl arpl xor scas inc inc test add hlt nop mov jno mov push mov inc xchg pop cmp roll mov sbb das and pop sbb out int mov sti xchg mov adc aad or (bad) mov ds aad adc push dec sub cmp jae faddp dec ror sub (bad) mov stos push push xor jnp xchg stos mov push icebp cmp out cli sub insl jb xor jne clc lods cs sbb (bad) addl test scas imulb inc popa in bound jae jmp clc lahf add push push in addr16 push pop (bad) jmp cmp pop into fisubrl cmpsl mov clc sbb sbb data16 bound cmpl adc in loopne sub pusha out add xchg das lock jecxz enter out roll out loope add mov shr mov cmp mov push jg sub inc dec adc mov cmpsl loopne or shrl ss mov popf not in enter lods mov push sub mov out mov sub lock dec inc sarb loope rolb mov pop mov test outsb push dec pop xchg (bad) (bad) nop insb lods sarl push cli lahf cs inc inc dec xchg jle inc nop push fstpl bound andl mov sbb mov addr16 (bad) fcoml mov or or inc (bad) loopne test mov xchg (bad) mov sbb das out stos sahf jle test out or push outsb xor inc push adc call pop push pop mov xchg dec les push repz lea out or cmpsl call scas lret xor (bad) xchg mov push in adc loopne bound adc jmp bound loope std cmp xor mov inc in dec xchg xor jmp jg imul stos pop xor andl repnz lahf subb sti and xor fwait (bad) stc cmp jns insb out stc sahf or in add xlat dec jbe pop sub cmpsb or lret inc cmp int3 pop mov data16 sbb cld test mov sub and aam add imul jl mov inc stos xchg jle ss rcrb inc sbb js addb rorw xor mov pop push ss and or fyl2x push pop sahf inc in cmp aas mov sub sahf sbb mov stos (bad) mov lock movsl jnp inc sbbb inc mov in in add and pop dec dec inc sahf outsw xor cltd push pop cmpsl sub pop inc cmpsl jg in test pop into xchg pop int sub ja xor jbe or mov mov das cmp test pushf sub adc divb xchg or insb sahf mov xchg dec xlat pop jo setns repz sub or int3 fcmovbe jo dec xor bound lret push (bad) aaa jno jns outsb arpl in xchg sbb mov insb xchg js out fstpt dec xchg jp dec pop sub je pushf js scas out pop mov cmpsb xor les adc scas outsb cs xlat pop adcb cmp orl push dec adc xchg fisub pop lds xor ljmp pop inc out inc sub push cwtl pop je lret enter in aam xor cltd jl outsb inc mov cmpsl push lods dec mov mov xor std outsb outsl xor loope addr16 or fnstenv (bad) xor pop lcall dec inc sbb out inc mov dec push dec push fnop cmc pop mov stos cmpl or push jno repz mov adc mov incb adc sbb xor xchg or adc mov les aaa pushf cwtl stos fist push xchg push stos (bad) js mov push mov cmp pushf mov dec xor mov xchg (bad) mov sbb jle or mov (bad) jne int3 test arpl (bad) ret (bad) xor jno jae fimul mov add jae stos mov cmpsb js mov jo lret xchg mov dec ds add loope bound cmp pop cmp sub dec mov sub push stc mov test push inc rorl push scas push push mov xlat cmp je stos in push mov jb mov insb popa cltd (bad) (bad) inc and dec mov jb mov cmp popf jge cmpl hlt ds xor clc test out mov adc add jbe mov enter stos dec popf insb (bad) dec mov imull out cmpsl (bad) mov pop push mov dec lds leave pop (bad) lods aaa push push out int arpl sbb movsl or mov or push pop mov fisttpl ds xchg mov push mov imul mov div push aad adc inc test insl mov (bad) pop and pop jmp nop aas arpl shrl mov ret inc and ret sahf xor jnp xlat mov sar je pop int fldl pop int outsb adc scas mov pop aas popf xor gs lea sub lock lcall dec rorl lret sahf out stos rep (bad) lock stos and and mov in inc xor pop xorb lahf fld dec pop test adc inc adc xor push push pop roll cmp pusha sbb aam mov xchg dec cs xlat aas loopne movsl inc xor mov sub pop mov insb ds gs sbb shrl cmpl mov inc pop lahf inc fcompl mov outsl xchg lahf or lcall sbb lret xor das inc bound test bound (bad) mov jno and mov std pop pop cs jo and test nop mov cmpsl dec int3 enter mov es lret xor ret xor test lret std jns jns jb rcr fidivr and loop push xor dec add fild jle rcl lahf in inc push jno lcall mov dec jbe pop lods call test dec cmp xor loop outsl (bad) cmc fidivl lret push das pop cmp in dec cmp jne fs in add pusha add push cmc les mov int mov nop fs xor cwtl pop mov pop push pop orl call jo inc ret popf xchg nop stos sbb jg jle xor cli mov or int3 cmp add xor movsb rcrb ja sbb repz mov test or adc movsl jmp push pop (bad) fdiv loope pop repnz sub push xchg jnp push cli jge dec loopne int jnp lods movsb xor push push lret lods sbb loopne add out fs hlt mov adc and jns xchg inc xchg pop lds add xchg movsl mov out mov lret xchg xor sbb adc inc sub clc inc clc adc rorb sub xor in push cmp roll sbbl dec lock lds loope adc cmpsl xchg or dec loopne int inc or int jle and or adc das test xchg (bad) and mov jmp add sub xor push out notl in iret add ja pusha adc shlb inc jbe inc scas mov mov fadd fcmovb insb dec dec mov mov push nop fist push xchg arpl jo cmc adc jnp xor dec mov or xchg dec pop in cwtl (bad) bound test (bad) (bad) repz jle push shlb adc std sbb pop lahf (bad) fwait sub dec add out mov push sub sti jge cmp sub sub and mov sarl mov cltd inc mov push in rol (bad) mov xor ds mulb in sbb mov scas ja jns loopne in jecxz add in in lahf and inc xchg icebp mov adc sbb bound dec jecxz dec je jmp add daa xchg or add mov pop out mov std sub sub ficompl xor pop test (bad) sbb add mov ficomp jb imul ret mov xchg gs addr16 xchg rcr xchg cld cmpsl ja ljmp rcrl arpl jb mov cmpsb push mov lcall push jb lea mov mov mov adc clc rolb insb gs pop lcall or loope xchg scas mov inc dec jb push gs push inc mov add aaa inc mov pop loop icebp xchg or and out popf movsb imulb pop inc rorb sbb push adc add cwtl test adc test loopne mov inc sbb cmp sti stos imul les jae dec mov and repnz pop jo ret ss movsl sbb and loop xchg scas push cmpsb push out fnsave icebp cltd icebp add mov loopne pop clc mov add sub sbb lret cwtl push imul or (bad) jmp ret mov cld je mov test sahf movsl sub and pop lods sti sub loopne pop jp ss fmull outsl std hlt into outsb test xor std adc adc pop repnz adc das jno fnstenv out jo ret sbb jge movsl popf adc push (bad) xor loop fwait jl loope mov fdivrl jb mov jbe lock sub mov call jl push and fldenv icebp jge ret inc pushf and pop xchg ja pop addr16 xor divl insl fisttp sub loop cmp popf mov enter xchg xor (bad) cltd sbb cld mov xchg shll lock dec aam xchg mov inc hlt mov lods push ja mov mov sub lahf pop cld negb sub sub loopnew and dec mov cmp cld xchg xchg in lcall sti sar in out sti xchg push jb cld xor inc push retw das sbb je xchg pop sub (bad) mov out sbb cmpl cwtl xchg cmp cmp push mov shr xchg int dec cli cmpsl test dec mov mov cmpsl xchg lret dec push xor mov addr16 das push jns bound cmp shrl hlt (bad) rclb fistpll cmpsl push push jle cmp push and push bound mulb gs ret mov or jecxz sarl stc fs bound jp stos jl add pop ss jne or popf test or push fs call loop push cmp pop sbb sbb adc mov mov mov loopne xor or in push add add inc jae cltd test bnd iret (bad) aas lods push aaa aam adc nop fwait and movsl cmpsl mov fcompl jnp jo inc jbe in cmp jb xchg lahf mov pop jl mov inc and or (bad) push jp mov cmp dec fcoml sub (bad) mov pop dec cmc out dec add imul aad pushf es and push fildl daa add nop rep or repnz add pusha mov int or adc enter iret xor push xchg push sar in mov jnp enter sub mov and cmp loop nop sti ret pop mov rorl jb add and jge pop jns jl es lahf dec jp cmpsl scas roll xchg lahf shrl adc imul lret loope add imull mov insl lcall xchg cmovne sbb loopne lods push test mov dec and imul test popa pop push hlt int in xchg sarb or pop repnz mulb fcmovb test inc xor pop inc ds push ret and enter and sbb sbb out xchg pop test xlat loopne xchg xchg dec mov insb xor or sbb and fistl sbb and aas fwait xor fucom negl lret outsl mov js cwtl (bad) icebp mov cmp jb inc mov aaa dec jecxz and sbb dec add in scas cmp test pop repz add ret mov push inc shll daa add adc cmp inc add pop fbld pop xor lods je inc mov cwtl in (bad) jle and neg push jb lahf dec mov out pushf dec pop pop sbb fiaddl and rorb in int or cmp sub jns cmp (bad) loopne arpl cmp mov orb jb inc stos dec (bad) ja mov and inc xor sbb les fistpll pop xchg aas xchg adc leave adc cld cmc mov jb jnp into mov mov adc ret sti sbb and cmp cmp jno shrb pop mov insl stos or add call mov lock ret shll sbb aam ret mov cmp sbb push and (bad) mov jecxz,pn xchg and je jle or inc dec or in pushf scas or jmp jl in inc push mov sub mov mov xor sahf cmp loop mov or mull test fcomip ficompl jmp setl (bad) mov mov mov into inc jle add lea jae xchg cmp adc outsb sahf and repz loop lcall repz bound outsl scas mov (bad) out push or mov push jb add mov mov push xor in jbe jns aam xchg lea gs jg int loope int inc sub pop mov outsl push xor lods jp sahf cwtl rolb imul ret sbb sbb jg adcl sub dec jl (bad) ja cmp outsb shrb rclb pop sub leave dec xchg js insb mov mov mov or xchg addr16 add dec fs sub jne stos adc xchg sub movsl das icebp cmc cmp addr16 std and and dec sub xchg arpl popf xchg mov xlat jl lahf fisubrl lret int3 (bad) (bad) stos or (bad) xor jb or pop cmpsb gs push push mov or inc mov cvtdq2ps dec scas dec daa imul adc push cmp iret jecxz popa icebp scas (bad) (bad) jmp loopne adc repnz je in pop pop aam andl fcmovbe push jmp icebp scas jne push xchg rcrb icebp das data16 leave jbe popf sbb stos int3 popa fwait leave push das add mov sbb fwait inc push imul test stos rolb jecxz dec dec mov icebp push adc xchg test cmc pop lods jmp adc scas pop lock loope adc stc iret das push cmpsl jl cmpsl or inc es xchg cmp ss jbe pop aaa sarl test imul dec lods in jecxz out mov bound push (bad) lock out into adc fidiv adc in dec or fcompl dec sar jnp adc sti ljmp dec iret cmp and push jnp stos shlb mov mov mov loopne lcall sub lret pusha cmp or out shl push push and lahf inc fcmovne (bad) cld enter enter popf cli cli ds daa xchg or pop ss sbb mov and leave or fwait mov movsb cmpsl jg jge daa divl mov push inc pusha push scas xchg xchg mov fimull jbe mov test mov xlat scas push rcr mov sub ss repz mov inc push jo inc jae add bound scas push ror hlt out scas addr16 es dec pop in or test dec aad xor xchg pop (bad) fldt dec pop lods pop pop icebp mov outsl push jbe test stos push xchg mov jns mov outsb data16 push les sbb rol ds push addr16 call andl arpl test in jge dec or lea mov mov mov or and pop and ror paddb and xchg push repz push (bad) jecxz push flds or jb pop incb js add inc scas addr16 fidivr clc or sbb stc xchg jno stos xor test jecxz int nop movsb cmpsl jecxz dec js xor sbb push xchg jmp jmp in sahf inc add push mov pop xlat loopne cmp cmpsl sbb daa out aas outsl out jns (bad) adc outsb adc xor mov add test fcmovbe cld pusha test fsubl cmc lcall sub mov sbb daa and fidivr cmpsb std and mov mov mov mov dec adc sbbb outsb mov pop test pop sbb cld scas mov decl dec iret (bad) in cwtl fbld nop xchg lret pushf iret insb aaa jg mov jle inc and sub movsb cmp xor fadds stos jns and scas (bad) scas stos pop jl fsubrl test and push or jnp mov xlat into and dec sbb inc jae mul pop lahf mov fidivrl lock out cld jmp mov inc into jl sbb adc stos fwait xlat mov sub dec aad dec rcrl pop dec cltd outsl stc lea movsb fnstenv and adc dec or mov enter push test icebp lods dec push bound mov mull cmp sahf pop std (bad) xor sbb cmp cmp or pop mov adc mov add jecxz xor cmpsl jne fwait lret inc jg push dec adc mov stos jg fisttpl xor jg sbb imull dec (bad) push iret jg leave pop xlat jecxz jmp orl enter jp int3 jnp adc ss lods inc pop inc shrb nop mov mov mov dec pop xchg xor dec pop (bad) scas mov pop stos dec xlat rcrl cmp out pop sahf pop xchg inc mov div lods inc push jmp loope inc mov mov lahf pop xchg jp bound js adc data16 adc and ss test mov jno sub and jl mov (bad) xor call (bad) sti cmp cmpsb adc pop push inc mov (bad) (bad) addr16 scas imul inc stos out adc cmp mov cmc mov out hlt add mov out int pop data16 mov ror pushf xor lds dec outsl repz mov loopne cli ret aam out lods mov lret mov bound or int push lret fsubr pusha mov lret mov mov xor sbb dec mov cltd lcall mov jne or out cld mov mov mov adc cli movsb xchg and popa sbb insb (bad) pop pop (bad) or add jne (bad) stos fs fs sbb xchg sbb or fwait call push and dec (bad) pop cmp push push xor sbb rcrl pop lahf fsubl mov movsl sub aam iret cmc popa (bad) ljmp js and int out adc pmaxsw clc adc out popf sbbl movsl loope pop scas dec lods pop cmp mov mov push aad mov pop and add sti iret sub loope mov add mov sbb repnz mov test mov add xchg mov jnp fisttpll mov out das jecxz cmc push lcall adc sub mov xor pop leave lret call pop (bad) mov adc add mov dec mov mov lea addr16 or push das xor clc (bad) mov (bad) dec cwtl fisub push jo pop test (bad) addr16 aas jne popa idiv mov jge jb sub clc test and or movsl aas xlat mov ficompl dec popa mov mov mov outsl jmp aaa mov push stos inc (bad) adc shlb mov in sti jns aad test sub mov outsl push mov fadds sbb leave push int3 add (bad) repnz mov subb std jnp xchg in stos imul mov enter or xchg and or aam popf das in rclb and (bad) lret pusha xor xchg cmp xlat adc mov inc pop sub and std dec xor lds aaa push mov rolb and (bad) or inc push out repz sbbl pop popf cltd cmpsb jbe sbb xchg sub push mov push scas jge lods (bad) push testb insl pop cld dec jnp out lods out repz push or lds sub out (bad) dec pop aas cltd test mov xchg dec inc inc enter lret (bad) frstor jl out dec push sbb mov lds rol icebp fcmovb sbb pop mov push fstpl imulb (bad) pop adc leave add loope out xor rcll popa addl lea or stos js xchg stc loopne xchg xchg adc cmp and pop and je sarb xchg pushl scas aam jns jbe movsl movsl movsl mov mov lds xchg cmp mov dec push dec add cmp cmp in shlb test inc rol push jp into adc or ret and add cli jb movsl incl xchg ss jge push imulb mov and pop out mov add iret xor cld and jecxz ljmp xchg push pop (bad) scas mov ss flds faddl sub xchg (bad) mov push (bad) int3 pop xor mov mov or les lret lea cmp cs jg inc xchg xor add cmp rcrb mov push dec int3 adc fisubrl dec add sbb inc inc (bad) negl adc ds push sub mov sbb jmp xor add test xor mov adc and movsb mov adc mov iret jnp or pop mov cmpsl xchg mov insl sbb push cmpsb js push xchg clc push imul gs mov inc mov inc jmp dec imul int cld into stos push vmovaps inc or (bad) mov sub mov cld pop xchg push sbb push jp (bad) leave add jnp pop sub cmpsb (bad) and and aaa mov in jl add arpl aas dec add mov in mov xor sahf mov in inc mov mov sub jle cmpsb (bad) xchg xchg mov mov push add mov iret movsb lret out loop inc dec aad inc pop out jmp jmp dec outsb mov jl out dec sarl or aad ja jbe or cltd mov fdivl push mov adc xchg cmp mov or les mov arpl sbb cs cwtl lea jle stc and (bad) cmp dec addl push mov pop and xor cmp int loope cmp mov mov jl xor jno sbb fidivl sbb pop ljmp call mov push pop out mov rorl test jae pop jbe adc jl push es out push out bound shrb jmp xchg hlt sub (bad) scas or iretw add and and inc incl sbbl jmp cmp sarb push adc loop xchg popf mov mov (bad) (bad) mov insl pop mov (bad) (bad) sti leave aas mov xor lds insb out cmp dec lret add mov or inc jbe push orps leave ret punpckhwd ret fistpll adc imul clc and sub inc lahf push push out push and adc xchg mov inc sahf lock jb into sub sbb inc xor mov loope inc add pop xor mov xchg push xor xchg add xor mov push mov loop inc jno andl mov mov cli cld inc lea add sub mov cmp sbb add and pop (bad) (bad) fistl enter pop rcrb ret mov fucomip std cmp mov insl stc push push lea in sub cmpl mov jnp test xchg jmp or push adc jo (bad) jle or pushf out outsl and dec jle mov jnp imull sub movsb stc mov inc call mov fwait xor aad mov fldenv inc mov mov adc dec cld lahf xor mov and ret and jns rol insl rcrl std mov ss or fs lods sarb pop pop out outsl outsb lret out mov sbb adc push jb mov dec aam scas fimull bound arpl xor int3 lret cmp fstpl cld cltd pop mov int jp imul mov loop mov jb cli pop outsb ret daa ret xchg jecxz pop es or xchg and scas daa inc and lcall sbb pop xorl sub mov int (bad) hlt xchg mov (bad) sbb add add inc mov adc inc pop jge adc inc les test nop jb outsb jae and push inc fsubrs sbb shl out dec xor mov out outsl lds psubq xor and push xchg adc push dec xor imul cmp test cwtl (bad) pop daa push out leave push fisttpl mov dec shll fs fistl xor int rcrl test in test inc adc mov jne adc adc sub add ret test jp pop add lods mov pusha scas add and add repnz fadds pop mov ja pusha xchg jnp push jo lods dec cmc insb sti mov test adc push inc jae lahf pushf inc in fstl and push xor cs mov jp add fldt mov or ja ret (bad) cmp repz (bad) pop pop push test lds out xchg jae mov pop imul ret add mov dec imul jmp clc cs ret shll inc sub test test loopne clc arpl loopne pushl outsb jae push lret pop add ds inc pop lds push movsl sbb push mov xchg cmp (bad) js xor pop mov push push cmp repnz loop mov pop inc (bad) (bad) jg inc adc sub xor cltd andb (bad) and dec cmp dec push js push outsl cli pop pop pop (bad) mov mov or sub jg inc jp cmc jle xchg das mov inc dec lahf adc sub xchg and in into jecxz fisub cltd stos lods jp ja imul and fmul outsb std cli (bad) iret out std jecxz jnp outsb xor repz lret (bad) popl shrl mov rcl insl push cmp add fmuls jmp pusha or cmp sbb movb adc xchg inc (bad) (bad) lret enter sub dec fnsave add pop sub adc int3 cltd popf pop dec add loopne outsl or adc push xchg insb or and add cmp ret clc out mov xor out je xor lds fstl fcomps cmp insb and iret stos cmp loope mov ss mov push int mov rcrb push and cs iret pop push mov xor sbb sbb mov push pop fstpl inc std shr push adc test in sub (bad) mov jb xchg out mov loop mov cmp sub sbb out cmp outsb imul jg adc ja xor jnp push pop mov js pushf jbe add push hlt jae ret xor lea aaa sbb aaa mov sbb pushf sbb icebp ret popf insl dec add in cmp jb xchg dec pop push push loop (bad) sbb pop mov aaa clc mov xchg in ja daa imul stc or pusha test adcl jne insb icebp adc mov inc push push fwait inc mov xchg jmp insb cs sub xchg fisubr cmp test popf cmp leave pop xchg int in sub shrl xor sbb cltd loope (bad) jl (bad) jle scas or (bad) out mov add mov cmp sbb cmp (bad) mov xor test mov mov test jno push xlat inc sub dec loop inc sub dec fnstenv mov pop and ss shrl mov push xor mov aam dec sbb xor pushf jne in and jb lcall mov mov jo mov dec cwtl out pop sbb outsb cs jo notl aaa popa sbb std aad push push xchg test ja lods call lret xchg cmp mov shr enter (bad) add fimul aad cmpsl (bad) nop jle sub sub (bad) push test xchg (bad) jbe xor int (bad) add in es xchg mov jno jmp add push push lods sbb or push sarb lret std sbb lods movsl sbb arpl sub push (bad) divb push cmp pushf mov xchg loopne ja loopne sub push sbb insl outsb leave fistp jp aaa add jl xchg push aad adc lds movsb loopne dec leave pop (bad) lods add cmpsb sub and pop pop decl inc notl test sub aas sbb imul (bad) jnp sub push adc aam jge xor mov ret fildll jmp jp xchg sbb (bad) dec inc fisubl push mov dec test or mov mov ret dec sub and pop jno push scas pop mov (bad) rorl pop dec mov iret outsl or jbe out sbb lahf out testl int3 or cmpsl out in addb adc cmp pop sub xabort sti or xlat int3 dec call aam aaa sub and rol sub mov (bad) mov inc insb mov insl sti sbb lret mov push fimul std jns in aaa adc cld lods mov xor adc sub jle ljmp lods and stos pop adc or cmp add lahf cltd scas pop std divb or mov negb jae in cltd rclb (bad) xor fwait scas lret arpl jp outsb and notb fucomip sbbl jne dec adc lock inc dec sbb fisubr inc loopne xlat in jle aas mov lods sub pop jmp or lea hlt jl cs xchg mov sbb in jle jl dec in mov fiaddl repz arpl or sub cmp scas (bad) (bad) push pop push cltd pushf fnstsw jmp or mov iret mov mov cmp mov xor pop jbe popa (bad) mov cmp in loop outsb push push std loopne jno add mov dec cs mov enter mov aas pop xor rorl scas leave sub pop jecxz sub adc (bad) call scas fdivrs mov int roll mov inc pop ds xchg and rclb push xor divps in pop int or xchg (bad) divb push dec mov das dec mov out (bad) jge push cmp jb jae lock ret popf mov repnz loop mov call xor ss and mov or popa or or (bad) arpl sti adc ds cmpsl or dec mov jle in push jge in xor pusha mov outsl call pop or (bad) push mov enter mov stos scas add in or fstpl (bad) scas cld sub adc sahf dec ret cwtl ja xlat insb lret jge mov (bad) mov fs xor hlt xor es js test pop cmpsb sbb or dec adc lea inc enter mov mov loope ret out fstpl jae repnz int3 into (bad) or (bad) mov pop mov mov push mov js bound setl rorb xchg mov arpl jb mov or sub (bad) dec dec aad or mov iret jle out inc mov cltd lods and repz lock cmp and scas xchg insl std into pop jne fsubrs mov inc pop (bad) or xchg sbb xlat ljmp mov jne lods test out pop adc lahf push add push movsb pop inc je mov jmp push shlb cmp push fs mov in push stos out (bad) jae sbb cmpsl leave clc out movsl popf and dec int mov push jle add mull imulb jne cmp iret mov icebp lret push imul ret cmp (bad) mov sbb outsb sub mov pop xor inc dec call enter (bad) jne jp cmp pop pushf fildll push mull fsts mov (bad) inc es roll push jmp ds jne mov stos jg mov xchg lcall adc (bad) aas xor mov add add aas jo out aas fldenv enter clc mov imul lods (bad) jae mov jns add repz addr16 lahf test dec and mov loopne push sbb mov xchg (bad) in popa or and jmp xchg sbb fmul (bad) jo neg mov add loop dec mov je insb sub push pop or repz das mov je fmulp mov loope cltd mov sbb in xor inc (bad) ja push (bad) popa ds sub dec sub movsb dec push ret sbb sub std repnz jmp sti clc or cmp sbb in pop cwtl popa decb mov mov push xchg dec (bad) daa gs cs jb cmpsb inc sbbb mov jns mov pop pop mov fwait pop sahf pop mov repnz int3 rorl (bad) mov jnp xchg rcrl gs mov push adc fldenv add mov inc xchg and mov in pushf in and jle jmp cmpsl scas and fidiv fs (bad) pushf and jmp repz ja sbb mov jge mov add pop mov out xchg mov (bad) std inc sbb es sbb rorb lahf add fisttp std cmp xchg mov leave orl scas or push je inc es jb mov jo lods cmp and mov pop push dec in neg negl mov sub dec dec pop sub cmp in mov and lea adc cmpsl jmp in sysenter clc pop shr mov jo mov pop lahf shl pop mov mov push cmc (bad) (bad) movsb fucomi mov out jmp mov idiv jno xorl add dec popa jo ret cld adc cli lahf fist (bad) pop mov cs imul xlat lret mov das sahf pop xchg rcrl mov push (bad) out inc xchg aad adc sub scas jmp hlt dec ficompl cmp push lock movsl push add and mov jns mov pop sbb scas sub aaa out stc add push or orl cmp cltd push sbb imul loopne cmp fsubl and pop scas push xor add fsubl scas lahf repz inc jg fstl jmp nop addl adc imul fild outsb dec sbb dec dec cmc fdivl fistpl jo imul imul cwtl xchg pop push dec rolb dec xor shrb inc ret push arpl and call xchg mov sahf test mov pop xor mov pop sbb xor rolb sbb or fstpt xor fs out sub push pop fs stos movsl push inc push (bad) aam sub inc (bad) jmp lahf add inc movsb push popf repnz push int3 push test adc lods sbb stc leave imul jo inc fsts inc (bad) adc mov mulb xchg jo scas sbb push out je sarb (bad) int or (bad) cli stc outsb inc jbe sbb jl ret imul (bad) sbb sbb xchg (bad) jbe int xchg bound add clc add and test add xchg call xchg or stos mov stc dec cli jb pop or xor inc inc push pop aam mov cmp insl add jb mov adcl sub jo adc insl je cmp in cwtl xchg xchg es mov wrmsr fdiv decb ficomp pop jo mov mov pop (bad) in xchg cmp bound shlb repz sbb hlt dec in fbstp xor jecxz js dec jbe cmp push test in cmc movsb in (bad) mov nop jge lea fnstcw das sbb in fimul or shrb push les sti pop stc cmp adc mov mov je ss add xchg mulb scas mov add daa ret cmp lret push push popf add xchg dec ss popf and (bad) xlat jp ds ljmp (bad) ja push and pop mov inc mov in cmp dec cmpsl call nop aam pop cwtl sub add add cmp ficom sbb stos addl push (bad) pop imull fcom rcrl arpl hlt inc mov lods lods adc jmp std data16 dec nop call sub dec imulb dec mov insb mov sbb (bad) sub cmp in into daa mov sub pop adcl loop in jge test in add lret adc (bad) add mov inc sub (bad) scas push es or test sbb pop push pusha ljmp stos ret jge dec sbb dec gs andl add ljmp sbb fscale push jmp mov mov xlat in pop ds adc push fisubl sub mov xor scas xchg jo jo or negb pop cltd out shlb dec jbe push cmpsl int3 cmp lret sahf scas or and adc (bad) or gs popa roll mov int xor test jmp xor in lds pop or dec movsl rorl adc jb xor sbb ja mov lahf adc sub pop stc es enter xor sar mov enter pop inc lock out add leave in ljmp dec mov push dec fmulp or xor sbb div sahf clc test xlat add sub fsubrl cmp dec (bad) repnz lods repz (bad) idivb pushf xchg je sub push cmc cmp add into and icebp adc je in sub pop push (bad) inc inc outsl and jne add test mov loop outsl cmp dec sarb scas loope cwtl movb pop (bad) jo sub cmpsb loopne mov stos scas jecxz jno gs sbb xor enter inc mov push inc nop test and fistl lods mov addr16 sbb (bad) xor outsl and xchg out or xor out out loop or jo dec cmp inc jge roll xchg std push nop cmp push add cmp and sub add in repnz (bad) mov inc xchg lock cld roll in inc cmp dec dec push pusha or sbb add lea dec out js push xchg repz lds cltd popa dec (bad) pop mov fcom push pop push ds andb scas inc insl adc push ljmp xlat ret jns inc stos (bad) xor mov aaa btr test xchg fcoms es xor (bad) mov xor fdivs xchg into push and mov pusha lcall gs sbb push xchg xlat jle inc mov scas and iret or js sti jecxz pop ja dec (bad) sahf xchg sbb mov dec jl sub call sarl in and mov test pop jo xchg call stos mov test mov insl (bad) fs aad cmp cmp mov pop add push xor and dec fsts pop ret sub xchg pop cmp iret push sbb push outsb pop fstp flds jns jne cmpsb call or outsb cltd xor aad popa and xlat ljmp je xchg and push shrb in idivb aas push cli ja add lahf dec mov pusha mov push lea push andl add push testl fwait dec cli push mov cmp mov jle or repnz mov cltd mov stos add and xchg or in xor iret cmp dec mov movsb ficoml cmpsl fstpt push dec pop push add repnz fdivrl jp adc cli jecxz loop sti xchg outsb lahf xor mov test test cmp ret fsts xchg ret out mov adc stos add and jecxz test mov dec (bad) push sbb cmp push jl imul in cs xchg das movb repnz es hlt hlt divl cli lcall cmp daa aad mov inc jg sub adcl lahf std lret jbe add rcr lcall sbb sub sub inc jp repz or mov pop xchg (bad) fild cmc dec sbb mov shll cs in mov mov cltd dec xor jno inc aaa cmp mov push or fs test sarb inc rcll bound add mov jle mov xor mov aad push pmaxsw and aaa xlat int3 popa repnz jne pop pop insb mov jl sbb and cmp xchg aaa ljmp test out xor mov mov mov dec jb inc jb daa std or jecxz cli push and std or stos push mov adc inc out pop cmpsb inc push cmc fdivrs adc sub aad xchg pop jp jmp std sbb xor repnz imul out jge ss gs xchg mov xchg mov cmp mov rclb (bad) jecxz sti fidiv jb mov in cld dec incb ret cltd jle push xchg or mov sub inc jp jbe xchg aaa xor bnd inc nop dec and je cmp out shl inc out jmp sahf sahf pop test insb loop mov out dec cmc cmpsb (bad) xor and mov outsl leave (bad) pop sbb nop cwtl lret adc mov lea cmpsl aas test jge test pop and xchg push mov arpl dec xor mov mov nop or push pusha push stos pop mov mov jne outsb push mov lods popa cmp sahf fdivl fldenv leave cmp sbb xor (bad) adc insb js lahf fstl jmp dec lret mov stc adcb outsb popa ljmp jbe popa cmp push daa jl rorl and xor lcall mov fidivrl lock fdecstp mov ljmp sahf test insl insl pop xrelease ss push stos leave fcoml loop cmp add loope xchg js add jno popl aaa dec mov jno mov adc (bad) xchg push jge jbe out lcall jo mov test in in xor mov in mov cmc out aaa (bad) xor repz icebp adc adc (bad) pop (bad) xchg xlat in dec clc mov push int movsl or inc mov int3 xlat mov or push and adc rolb clc iret mov push je test scas dec inc hlt mov mov imul mov jns mov mov outsb (bad) mov (bad) jns gs sub scas dec mov ret popf mov into lods jbe cltd mov gs loope das add or mov mov cmp add movsb jecxz add je adc outsl pop out popf and push inc sbb mov test xchg mov mov shll dec and mov divl mov mov pop sbb mov fwait call cmpsb je bound js push dec adc ljmp pop xor xchg sbb or popa push jns push mov repz and addr16 lret sbb sub jne iret lret in pop inc pop xor fstpl jmp mull decb shr cltd imul mov (bad) icebp xor adc mov jne jle lea pop adc imul xor inc inc je inc pop aas in and add mov xchg addr16 mov imul xor je xchg (bad) xor sbb mov (bad) xor enter pop loop dec in push fisttpl sarl cld cmpsb out adc stos call or (bad) (bad) incl arpl imul subl dec roll jg (bad) jg or or push pop into daa fwait (bad) lcall fcomps sbb cmp stc mov jge out jp cwtl loop sbb xchg jns stc pop enter pop jp push stos xchg jno sub adcl xor sub and insl popf (bad) pop jbe sbbl sub mov ljmp arpl call push sbb clc mov cs scas (bad) iret adc pop notl insb add push enter xchg mov call nop pop xchg mov sti test jnp mov xchg insl mov push iret jl test push mov fistl mov loop adc cwtl das jge jmp inc cwtl (bad) and sbb test xchg pop (bad) out je stos push fsub and xabort sahf xorb xchg mov and popa dec pushf fnstsw xchg xor mov push call orl int3 insb out pushf jmp cmp dec ds push int3 cwtl or cmpb push jg in mov xor add (bad) icebp and or mov jmp ficom cwtl scas leave mov pcmpeqw in push fwait mov (bad) or push mov cmp outsl or in pop push je mov js popf mov fidivrl mov jmp push aam imul xchg pop out jp out inc mov int xchg pushf jno xor sbb aad loope out add mov inc jle mov pop stos push in fisubrl or pop jge ror mov pop mov add jo add ret inc mov jg xchg xchg out mulb cld or inc cmp lcall loopne push lea inc xchg pop pop mov mov movaps mov inc orl (bad) int lea push adc es dec jle xor xchg into (bad) rolb and push jo jne and xchg push dec cmpsb xchg js xlat shll cmp add ds adc loop inc ret aaa inc inc xor arpl notb mov cmpsl mov aaa arpl clc (bad) dec or jbe and out add sub je cmp lea adc stos dec push xchg and in jecxz jbe mov dec xor mov enter hlt loop adc popa jno (bad) aad cmp cmpsl cmp lret loopne lods and adc imul dec pop cmp cmpsb stos mov cs jbe mov push xlat lahf arpl dec mov mov ljmp (bad) dec push sahf call lahf rcrl or pusha out sbb pop xchg mov aam pop loopne cmp pop xchg mov sbb aas jmp stos add inc xchg mov (bad) out xchg mov iret fstpt jo xchg fidivr sub mov orb cmp clc mov sub dec les or mov or ret and dec xchg repz ror mov push xchg fs mov gs nop mov js sub inc inc push mov xchg jmp cmp lea rcll push fs push sub int3 fdivr das push nop mov (bad) imulb adc inc mov xchg ficomp mov fmulp in jbe movsb std cmc jmp push testb jg daa sub pusha mov inc in cltd mov xchg (bad) je mov cmp or pop dec in (bad) inc adc pop mov add inc dec lods mov xchg pop cmp outsl cmp movsb imul adc cwtl inc and in sub (bad) sub mov inc cmp sahf ds pop jae xor dec dec xor inc outsb aas add lods insl cld dec lods jg add repz mul (bad) lock xchg sub or out pop repnz cmpsl mov pop add push add fwait mov repz cmpsb test cld jge jne sub fld data16 in test rorl lcall js inc dec push xlat aam test xchg or jge or out (bad) mov mov call cltd mov pop cmp adc fstps pushf popa jnp pop aas in dec xor jnp mov xor inc stos xor jbe cmp pusha pushf dec mov sbb xor pop or add test mov daa lea jmp repnz imul lcall sbbl rcll sahf sbb xor lea sbb stos popa xor xor mov cmc xchg imul (bad) fmuls or pushl sbb mov sub dec cld xor mov imul mov xor js gs iret inc dec es dec out (bad) mov nop pop pop (bad) leave sti andb inc (bad) cltd aad imul push cmp ss sarb xchg stos icebp mov inc xchg movsl and repz mov mov mov jae push loop mov imul idivl jo (bad) rcll addr16 adc sbb (bad) xor push lods pop in mov dec (bad) jmp mov push jbe ret sbb mov das das mov xchg inc aaa cli pop jne insb insl out cmp subl push ja idiv mov incl lods and sub sbb gs ds in add or ret imul outsb adc jno fistpll dec mov lret andl jnp push mov jo mov notl adc mov dec lods lock inc dec in and push decl ja jmp in loopne fs mov adc pop fild leave (bad) xor outsb je ljmp outsb nop test inc outsb and push jb mov add xor rcll pop (bad) ja push add sbb cmpsl leave cmp add pop jno cmp and test xor mull mov or test jg adc aaa or outsb dec push xchg add push pop sub mov loopne std ret mov and xchg lds dec inc ret jb bound mov pop rcr mov outsb outsl mov inc mov pop xchg xor pop clc sub inc (bad) icebp mov pop xchg lcall imul enter jg xor pushf stos out mov movl push jecxz jns push std and aam xchg sub mov add jecxz fcoml push mov out jge scas push adc ss lods pusha jmp sub arpl dec (bad) in or xor (bad) popf movsl pop sub movsb stos mov clc lods fld rorl cmp and stos (bad) cmp js adc loopne std jmp add cld inc pushf dec pop std adc in lds dec lcall mov les jb or dec adc inc xchg sub add sbb pushf lret xchg inc push cmp push dec dec pop xchg dec mov pop hlt dec jmp inc jmp lds mov addr16 idiv stos loope into add ds mov clc jae xor roll sub inc test sti push cmp push fsubl sbb jp fdivrs in cltd xchg mov out jmp sahf mov push mulb adc (bad) les sbbl jnp outsl push or pushf into push ss (bad) testb add fisttpl push mov insl or aaa nop mov xor dec pop cs xchg mov push push test push (bad) jb sub pusha enter add cltd jo or rolb outsb scas mov mov mov sbb xor movl ret push jmpw (bad) cld sub stc sub jnp negl enter pop in loopne adc mov pop test lods lahf inc pop jle jmp icebp cmpsl loopne es lret sbb add mov inc or or movsb dec jmp call dec aad xchg jle add mov xchg jl outsb cmp dec mov daa in iret push pop push mov ja stos imul test daa ret add sub xchg or adc scas fsubl fwait aad add jg adc data16 sbb and xor xor ss sub xor sub fstpt rolb out mov pop adc addr16 imull push mov xchg into xchg cmpsl cmpsl stos gs hlt push lds fs pop and test pop js dec mov repz int ret insb mov lds dec ljmp jbe (bad) aam push clc test adc mov push jmp les inc cmp out jge cmp push or add mov pop push pop jbe (bad) or inc imul flds rorl popf and fadds pop mov pop jecxz mov fidivr std mov imul push adc jle sahf xchg or sti daa push scas imul ljmp nop popl or andb pop out aas pause stos sbb pushf or push sbb jmp or ss loopne test xchg mov sub insb fistpl xchg std sub jp test pop or xchg xor out adc adc idivl cli xchg xchg fisubl cmc jl insb inc dec jbe xchg test cld scas and xchg outsb (bad) push add arpl add (bad) jecxz imul call psllq bound es lahf xchg pop mov fwait popa push xchg andl pop cmc pop dec dec nop xchg jbe add xor add or cmp pop roll test (bad) pop xchg jo scas fiaddl icebp idivl jmpw aam inc and adc (bad) mov bound out test pop lahf mov adc pop xchg or inc add (bad) cmp and lret pop push (bad) sub inc mov jge push les push pop cmpsl loopne (bad) loopne add pusha mov xchg sbb and mov imulb js pusha xor test and gs push dec and adc push and push addr16 adc and repz sub add push xchg pop push loope in scas push popa (bad) mov jnp test or xor in mov xchg test xor mov fsubs negb imul iret scas sub or int or cwtl xor and inc fucomip (bad) decb das repz xchg (bad) int3 mov jg xlat mov pop mov stos (bad) fwait nop sbb mov repz mov jbe hlt cmp push xchg clc inc mov aad popa cmp cltd cmc pop mov adc pop ficompl mov add jnp int3 cmp sub jg dec movsl inc in div pop test (bad) push push and mov xchg (bad) pop lods cld pop std jnp dec inc cli push add clc sub (bad) xchg jmp jp movsb fmul fwait iret in xor and leave mov add sub mov scas mov dec int repz movsb push into fucomip inc (bad) adc xchg push dec rcll rclb inc cmp fnsave into iret dec xchg orb sub dec push clc mov push xchg pop fs pop xchg cmp mov push fimul loopne rcrl push out jge sbb or cld xor jle (bad) jo wrmsr mov fwait jge inc jno lods loop mov push push inc push arpl push data16 subb outsb movsb mov mov sub adc adc adc cmpsl call xchg mov outsl push push push lods icebp mov sub mov mov sub sub pop (bad) lahf into xor pop sbb and inc add popa jl inc out fstps jb int3 sbb mov push fildl adc pop insl or xchg adc ret pusha (bad) outsb repz add mov aam inc mov push lock sub xor fcoml sbb flds dec pusha js leave js pop (bad) iret lock jbe scas sbb inc pop mov jns mov jno cs jns es cltd xchg into sbb (bad) les adc fisub mov rcll lock aas sbb ret jb out add insl movsb call cmovae xor push outsb lods push or mov pop adc pop mov fwait mov hlt sub jns jecxz clc pop add pop mov movsl adc xor hlt mov loopne sbb enter and lcall cltd push cwtl pushf hlt xchg jbe sbb int3 lods dec push lock fnstenv dec pop lock mov dec sbb lret mov and pop outsl mov add sub int add xor cmp inc adc push call mov cmp add add insl or cmpsl dec pop cmc ret mov orl stos into test (bad) push jge pop ds bswap mov adc loope and loope cmpsb mov adc in dec mov cwtl pop adc mov js push pop in mov cmp mov mov mov cmovnp dec jl sti inc stc jnp repz mov sub fidiv out mov xchg nop in fist cmp xor or jno push sbb inc ret dec xchg or inc mov push loop add push mov (bad) or scas cli out lock (bad) sahf mov movsb pop lods cmp cmp cmp dec push dec stc popa inc cs jl pop xchg xor mov sbb ja inc sbb out and out scas adcb dec dec (bad) test leave sub push pop test mov sahf mov nop (bad) in cs rorl jnp mov add sbb out mov iret stc jge (bad) repz test pusha ja (bad) stos push xor and add sub cli insl mov js popf mov mov ljmp sbb fnstcw mov (bad) mov adc push pop dec (bad) xor hlt rcrl push mov push pop dec (bad) in and imul repz jge pop inc cmp out (bad) je (bad) inc test iret lahf sarl adc adc push lcall pop sbbb movsl dec jne lods xor loope lahf and mov mov andb dec push adc lods dec (bad) push rorl out nop (bad) in gs je cmp into loop into push xor push ds fsts cmpsb pop (bad) lods mov jbe (bad) rol ljmp and sub and push ss inc lcall ficoml pop into xchg mov arpl in cmp add mov jb in flds dec xor aaa xor es xor mov mov sbb in cmpsb and push dec pop stos mov pop fstp dec cli sub (bad) (bad) push fiaddl popf or roll cmpsb sbb test and lock leave (bad) imul jmp sub dec lret dec sub push loope adc xor imul into ds push gs rolb in push mov lret loope ljmp cmp out sub je rcrl xor mov xlat test (bad) push or mov cmp test addb dec mov arpl jb and jle iret (bad) pop rcll aas imul push jb xchg dec jae std dec andb nop test movsl mov popa nop out cmc push lret lea lods test (bad) stos fildll add pusha pop sbb fs or mov and mov jne mov mov leave adc sub fisubl xchg int3 adc push pusha clc iret lret or or dec adc insl sub push adc cltd aad dec push negb enter mov push loope cmp fcoml aam pop arpl or (bad) or push push jp xor jecxz dec xchg add or popf dec mov xor mov push cltd cmp mov inc in (bad) addr16 lret push lret stos xchg dec nop xorl fdivrs (bad) (bad) in notl jbe stc fdivs jecxz lds scas sbb outsb mov pop fnstcw sbb add pusha pop decl loopne mov loope test lods dec rcll out inc pushl rcl mov jo xor push pop insl lcall mov cmp inc push xchg out movsb test popa jg fdivl xchg add mov cmp mov dec (bad) jge sahf movsl call sub ds sub loop pop loop out jp les push std lock out and xchg jo (bad) outsb lret pop iret pop push repnz mov cmp inc imull shlb loope inc and ss movsl push xor adc test mov fmuls jo hlt aad mov or add jns shrl insb jmp sbb cmp mov nop repz push xor mov das stos (bad) jge mov loopne cwtl or xchg mov aad and push cmove mov cmp subl fs push insl (bad) rcrl cmc les jge push or add daa hlt inc sbb leave inc insb mov adc in gs xor jne (bad) cmp mov clc cmp je insl mov sbb rcrl fdivrl rcll out fsubp inc dec out and mov test shl fidiv iret dec pop jb fildl pop inc or fcoms sbb lret cmp and jp aaa fadd test js in sbb int fs and cs rorb aas and and outsb jb push mov pop jb or mov rcl xchg (bad) iret fldcw loop pop in insb and ljmp movsb shrl les mov insl push adc pop inc dec popa push out mov (bad) lret xchg fdivrs stc push jmp pop mov pop in gs xor (bad) xor mov fdivrs mov lea fsubs or jmp imul add and xor outsb imul mov iret (bad) sub out mov lock jo dec je sub mov das (bad) stos les int3 sbb add gs leave sahf and jae loop outsb cwtl rorl dec mov sbb push scas cmp outsl or sbb or fwait xor mov sbb mov xchg bound sub mov push inc movsb add jo in rcll out aad sahf jns xchg push (bad) je pop add insb inc loopne out dec ds sub loope jl (bad) cmp adc push lcall add pop aaa fdivp inc jb stc or pushl mov jbe insl mov sbbl push adc popf movsb xchg data16 inc jecxz push addr16 mov lock dec xchg sub inc pop pop xorl arpl jb out movsl dec pop mov repz loopne push xchg aaa sti mov fnstenv mov call dec mov dec xchg pop jns inc rol int3 cmp into mov sub push push xchg insb cmp int lds sarl ffreep decb jmp (bad) adc test adc ljmp int outsb lds flds pop pusha stc mov sahf fwait mov dec sub sahf pop lds in mov mov or or mov inc and jmp fs mov adc xchg push xor lcall hlt scas dec mov divb stos movsb sahf pop jo add out mov and jl stos add roll shrl mov cmp adc jle adc push pop aam push test push pop pop push jno int3 shrb mov or sub rolb icebp inc and lcall or in lahf lods cmpsl mov inc insb dec dec xchg std std sbb aas ljmp jns dec xor mov insl xchg test lods inc fsts cmp rcrb fist scas dec stos test dec pop or jnp les mov sbb mov push scas inc aas mov mov arpl movsl das in sarl aad jecxz clc dec jo jge jb ljmp mov (bad) and xchg gs je sbb out ret pop inc inc (bad) enter xchg cltd sub movsb sbb or fldt push sub sbb lcall dec jg pop sbb xchg mov in call mov std enter sbb mov cltd cmp cmp mov (bad) sti in sbb mov mov xor std fwait sbb out lahf sub lock in sub scas jo inc mov mov push leave push fistpl in lods sti sbb test fnstenv jge outsb mov cmpsl notl std (bad) mov movsl dec out rcrl dec fwait addr16 lods (bad) sar int jecxz cmpsb inc jge movsb jge das insl negb jne outsb push add dec inc cli xchg or cmp ja or cmp mov xchg add mov jnp add sbbb mov mov dec pop push imul or xor fcoms mov stos xor pop popf inc mov sti or les xor cld mov rclb or inc fwait xor (bad) mov mov cmp push xchg dec push mov jae pop lret (bad) adc mov xchg xchg je ss inc or pop or cmp pcmpeqd dec lods ljmp xlat adc push mov push stc sbb int testb test arpl int mov pop pushf add decl insb mov (bad) lret es xchg adcb hlt push (bad) lock fild sti adc jg jns js xchg int adc mov leave cmp sti in xchg data16 (bad) mov js dec mov inc jl xchg inc shlb aad xor jno pop mov dec xchg outsb xchg push jmp pop or test loop sbb mov xchg nop addr16 xchg jp cmpsb das mov add test mov dec lret sarb stc sti adc mov mov sbb insl pop stc (bad) rcrb (bad) xor ljmp pop xlat push in push aad mov aam in xchg les jle inc (bad) sbb insl jecxz mov adc pop int3 sar ret jle std mov add and cltd in or fsubl mov nop jl inc xchg inc pop sbb lret dec iret bound stc stos ljmp jg sub out in inc push adcb cld test inc in ret mov in movsb fisubl sbb jp mov push or fs leave addr16 repnz cmc cmpsb pop fnstsw dec and sbb push mov fisubl shrb lahf sub imul (bad) dec icebp repz inc lcall in cltd mov lret or loope sbb adcl (bad) rolb iret imul andps jmp dec pusha jl or outsl lods out xchg stc aas (bad) stos mov inc (bad) fdivs dec insb bound leave out je and fdivr jge and pushf icebp xlat adc push cmp imul mov mov xchg push fdivrs lock mov mov sbbl lret add adc fldt adc pop es aad mov pop add xor test enter adc aam fistl ds subl adc lods cmc mov or cs push hlt mov cmpsl (bad) lret push (bad) dec pop sbb mov cmp lea xor and adc mov lret adc jb clc stos xor or clc stc stos mov fidivr arpl (bad) mov ja or xor mov mov mov (bad) not hlt icebp and jae xor jnp movsb xchg std and jbe repnz pop cmp js pop iret add pop push pushf sbb sarb repnz dec pusha adc adc cmp (bad) push nop jbe neg lret fist ja pop sahf mov aam in decl inc int xchg inc sbb xchg lahf mov xor jae xchg xchg decl push rcl add leave add xchg or outsl scas dec sub dec add dec loope repnz pop add lock jns ret stc mov mov mov (bad) cmp fsts roll pop je or jmpw int3 mov mov (bad) int3 std or loope scas jno fmul push fildl cld out fldenv clc mov fs flds in pop enter cmp xchg jp push sbb std mov ljmp xor push imul sub inc clc pop rcll cli jno (bad) cmp lods lds pusha jecxz ss cmpsl xchg lds in movsb sbb aaa push ljmp xchg add add test inc idivl into out sub in or fcoml movsb inc popa cmp mov cmpsl mov outsl insl mov push fs andb adc in jl pop or add sbb dec pop or xchg pop leave mov je roll mov cmp jmp daa or fbstp rorl cmp xor pop pop sbb or test fisubrl dec rcrl cmp pop addl test dec add cmpsb lods pop in add cwtl lcall daa lahf jbe push xchg push jns test push outsb cmp jle and dec faddl jnp mov mov imul push jne,pt inc test and jl,pn psrlq jge mov js,pn test lock xchg mov sub cmp rcrl gs adc test rorb test and adc cmpsl xor sub push jae cmp sub xchg mov add js pushf mov stc push hlt add jo mov cmpsl into mov jb (bad) or mov or or pushf pushf leave mov shl pop in adc inc bound xor (bad) adc or and mov dec and jae or adc decl add lcall pop (bad) leave or lret cs push xchg call lds and int stos rcll sarl aad jp pushf mov xchg repz mov scas push clc aad shrl cmp scas dec mov push sub push (bad) jnp cmpsl lds jne or mov adc cli xchg ret and fwait mov xchg lods push mov dec mov inc or cmpsl adc cmp mov cld push in mov bound xor nop daa outsl cld insb lock imul ljmp push sbb mov mov pop clc xor xchg movsb shl lods or in je mov pop mov pop push push popf fucom ret stc jp push pop fwait fs gs cs stos call fistl mov dec xchg sbb movsb jae in push (bad) lret push iret dec imul add xor pop fstpt xchg push or inc outsl pop dec push inc xchg inc inc xor ror out mov xor fstl pop jmp aas data16 aaa andl jmp fcoml or sub jns jmp add jle mov lods nop call jb ret xchg icebp loop sub and xor (bad) sahf insb mov in fcomps inc push cmp mov mov aad stos fist mov repz and fild or out xchg nop imul jl and and les dec fnstsw mov js sub js cmp inc xor and xlat lcall pop daa hlt lods gs push data16 leave mov jmp cmpl mov xchg cmpsb mov rcrl mov iret movsb push mov mov (bad) aas sbb mov fildl and cmp jae jp cwtl xchg cmp sarl push xchg insb in and jb das dec jecxz dec (bad) decb das sahf xor sbb fsubrs or push roll or cmpsl jb insl ss push repz sbb out int mov cmp jnp adc test add in lret fadds add sbb (bad) mov and pop push jne sti es mov lods lock lds jo ds push jae lea dec xor push gs xchg daa push lds mov (bad) pop mov mov mov aas push stc fldl daa adcl mov inc add or and mov (bad) out and dec inc inc lret jmp sub lahf push inc push push cli pop mov das adc mov mov test xor dec cmp sbb (bad) int3 cmp push push jns jnp stos movsb int3 jge mov pop es sub stos ret aad enter into shll ss adc jne xchg shrb in sub push jg pop push xor dec mov imul mov (bad) jb xchg sub dec push loopne fwait xchg arpl jp imul adc leave sbb (bad) clc and xchg cmp cmp cwtl out mov xchg arpl divl mov pop pop repz lds dec push test push popa fist mov mov add sbbb sub push sbb mov (bad) jecxz das ret (bad) sbb out lea movsb pop aam mov sar add jmp lahf or push mov fldenv dec insb sbb mov imul popa dec out jno add dec frstor test dec mov imul cmpsl push pop cwtl jge arpl out xor (bad) cs xchg into lods imul insl mov sbb jno xchg jmp and in xor in ds movsb pusha fs scas inc fcmovu mov mov add jp push in int movsl icebp add mov xchg mov (bad) dec add jne arpl clc (bad) jp and jne lret xor push loop es push mov push mov sbb push sbb into cltd sbb rcll scas mov pushf sub inc cmp adc or push push fdivrl sub push mov adc (bad) pop test xor push outsl cmpsb in push or rol add rcll push xlat xchg and out cli xchg cwtl add arpl std je and in xor sahf inc scas les push ficom xchg fwait stc xor xor push das pop add sub sti adc in mov sbbl inc (bad) std push lret int negb and and rcrl adc call mov inc mov push (bad) popa or xlat loop sbb pop das xchg xchg std dec test push (bad) xor scas sbb arpl fucompp xor mov (bad) mov lea cltd stos mov xchg jp cmc jnp insb int enter (bad) mov dec mov popf mov in sbb mov add std int3 add outsb push jns mov xadd iret xchg adc je stos pop push cwtl xor push mov into mov out pop cmp pushf enter movl clc fwait sub jle rcll into sub clc mov cld mov xchg stos call xchg ljmp push add xor lods es xchg push dec mov ret cmc jp movsl push mov in out lea out mov adc cmp mov pop pusha xlat cvtps2pi xchg sub push dec push xchg lret inc repnz mov jo fs sub lcall sub push mov fdivrl cmp inc rolb int3 fwait je sbb into sub movb xor push outsl add xchg jno push xor xor push cli cmpsb or orl mov jne cmp mov adc or repz div push or rolb mov mov jmp lods mov or fcmovnb mov push pop lret or into inc scas into je cwtl sub xchg loopne or and adc outsb xor jbe (bad) mov cmp stos cltd pop insb xchg popf aas rcrl push pop mov icebp mov cmp cs mov xchg stc stos clc gs in mov push push mov cs ret inc fisttp rcrl add insb xor inc adc pop cmp insb mov xor cs imulb insb mov (bad) add pop cmpb pushf mov cmp lock mov jecxz fwait adc cwtl ret add dec data16 adc jae incb ficomp out int xchg pop push xchg bnd xchg pop dec and dec and xchg rolb stos jo loope shll (bad) xchg mov imul rcll sahf jp and xlat lds in push push loop fcomps and mov (bad) pop and insb mov test adc in les xor inc mov or pop movsb mov dec push andl adc or mov lods loop lock ds mov xchg or inc xor out mov xchg (bad) cli enter dec xlat je xorb mov das push jge pop jnp repz out (bad) jge in xchg (bad) mov cmovg xlat mulb xchg in dec das push xor push int cmp lahf mov adc mov aam xchg int3 les and pusha jae (bad) cmp lahf cmc paddb mov push or sahf inc sbb push rclb cli jno fnsave mov pop js xchg movsl add pusha mov xor outsb add jns dec les push or ret push sub leave shlb imul sbb mov aam inc cmp imul lock xchg sub cs (bad) enter xchg xor sub mov dec push pop idivb xchg jge push dec mov jo enter mov jnp test cli dec push test cmp in not in pusha xchg scas js and mov pusha jbe imul sbb stos jno sbb dec push xchg rorb jl fwait adc ret sub arpl mov mov sbb rorl pop sbb std sarb push scas rorl add sbb add ret repnz inc in lods push fwait add cmp push push sbb and int3 fmull jnp clc daa push outsb xchg repz add test test (bad) pushf inc mov negl cmp sbbl mov fs sahf add mov mov icebp inc (bad) repz (bad) enter mov push mov jecxz mov data16 cs sub jle pop cmpsl adc sub sub enter sbb push inc ficoml mov leave dec sub cmp hlt mov ja xchg lds pop fldz jnp idivl scas out nop pushf dec in xchg (bad) mov lret mov mov (bad) jne jle jge leave cmc or add sbb fdivrs sub mov repnz test add jmp mov pop mov das dec ret or push dec or inc stc daa leave dec pop icebp out jle mov mov leave adc xchg cmp cld ljmp and cld dec sti testl fisttpl cwtl in mov repnz lcall aad in add negb mov cs lock cwtl xor imul into shll into movzbl add stos cmp or sbb xorl mov and pop mov sbb pop push call or or lods imul mov movsl je jl int3 mov inc dec jg sahf mov fld js movsb inc jbe jbe jbe ret add stos in inc ja fwait insb add cmpsb dec cmpsb fstps mov mov fwait arpl out lcall and fcoms ja sbb cs mov cmp xor fsubl and push js rorb mov rcr in push popf cmpsb jno xchg pop jae negb or or js jg adc push mov dec xchg nop stc pop lahf push xorb push mov mov mov inc jb test in aaa fisubr test ljmp adc pop xor sbb fidivr and add dec stc mov jg inc lahf pop lods scas lahf lcall sub inc cmpsl and pop xor fldenv xor push xchg xor sar and pop dec mov pop ss (bad) adc pop xchg mov add pop xor cmpsl mov dec (bad) mov jp cltd push nop es test mov cld sbb mov add inc pop loop test cld jg aaa push and icebp xor in in push outsl push movsl testb loopne dec or xchg cmp mov and hlt (bad) arpl add cltd pop push xchg repnz mov (bad) jno xlat or popa arpl cmp inc lret mov fbstp mov iret lods dec adc shrl iret pop jp pop lret int push or xor inc or xor or add fwait dec push pusha cmpsl inc es mov mov stos xchg mov jecxz or cmp mov test xchg (bad) jbe sub xchg daa movsl add jbe cs adc jns lcall sbb (bad) inc jb cmp add mov jge pushf mov cmpsb in aad and push subl pop or inc in mov mov jle mov xchg sbb into in pushl pop push mov insl cli jge aas cmp dec inc out xor xor mov gs loopne xchg jnp mov cwtl add cmpsl or xor xchg aad adc xor jbe sub decb xchg cld mov stc jge movsl in test push adc mov pop aaa inc jecxz,pn fisttpl fstps aam andl mov xor test mov sub dec add stos jp imul clc dec jmp adc cltd sbb cmp sub mov popf mov divb push sahf sbb mov test in out shll or rorb mov cmp jle add mov mov aaa rclb test fs repz mov addb (bad) sub and fidivr aas lea notb loopne xchg shr pop inc (bad) mov inc cltd xchg clc ljmp roll inc push jne movsb or xor inc cld push and or stc push ljmp mov xor xchg add in addr16 jg mov pop pop dec out dec daa jle pop cmp pop (bad) pop dec and inc jo dec sbb test scas push pop addr16 sbb ds inc add movsb out nop xchg popa and jmp pop nop loope inc xor mov fcompl xchg fwait cmp sbb mov lcall and mov inc push fwait pop lock inc test fmull xchg test int3 sti cmp outsl inc push sub sbb mov sub push ja popa fisubr sub xlat cmp sbb fcmovu xchg stos jbe iret pop loop out xor ds ja mov lock cli aas bound mov xor xor daa sbb pop cltd outsl (bad) cmp lret in cmpsb mov in sbb (bad) fcmovnu dec sbb cmp iret cmpsb add notl mov stos push cltd iret shll jmp fcompp jl xor sub out inc push and pop jo fldl adc ja jmp fdivrs mov or push dec stos or add fidivl mov mov fnsave dec (bad) outsb xchg xchg pop jge or popl mov push out es sub fdivr stos adc xchg sub mov cltd fistl jmp aaa imul xor xchg in sbb add xchg les mov dec cmpsb lods pop ret sbb xor xchg push ss mov and mov adc jmp sub repz pop xor (bad) (bad) aad push fs jg or mov subl jge and jno sbb scas lock in mov sub adc rolb sbb rclb in arpl insl les dec inc mov and or int loope sbb arpl in jmp sahf repnz xchg cmp dec out sbb sub push mov jle mov mov in add out shrl inc mov push loopne iret cld ret jle out das (bad) push pop popf ljmp sub fs push or ficom mov dec stos mov xlat call push (bad) pop in test pop rcrl (bad) mov xchg mov ficomp mov jg cmp arpl xchg mov pop ja push add cmpsb dec cs stos imul daa xchg jge rcl loope,pn dec addr16 push and stos (bad) hlt adc mov xor call cs sbb mov int bound (bad) mov out cmp setb test or inc xor cmp mov xor xor dec lods dec pop mov sub xor sbb add movsb addr16 pop jns es and ljmp mov int insl ljmp sub lea jbe outsb push jo push imull sub (bad) jle push xchg lods and inc push into cli lret aaa in ss adc mov lds and add std insl scas xchg mov cli mov outsb inc inc mov sbb mov push fnstcw mov lods push adc ds jl xchg sbb (bad) les lret pop sbb add enter sub mov rorb std pop popa lcall pop sub cmc cmp sub sahf in setge adc inc jae jle popa int fisubl lods popa lods mov or in bnd lea lsl xchg notb bound cltd mov jmp fistpll fs test jg sahf push mov rclb or and adc das cmp sub pop ret mov pop dec inc add push dec mov push sub push (bad) jp sbb jmp outsl sub jae insb xor mov jb daa jle jge push mov das les push bound jecxz jne inc add js shrb and jp pop mov xchg or xchg sub ret pushf xor pusha mov inc clc and (bad) in test adc jnp outsl xchg mov jno lods and inc daa scas xor jno fisttpl leave mov mov aas cmp dec fsubrl (bad) in (bad) iret lret dec sub rcl and pop cltd xchg shr inc lcall stos sti inc lret pop sbb in inc mov rorl popf mov mov lret (bad) stos fiaddl das sbb imul ja popa jne leave leave imul inc roll xor push xchg mov cltd mov sub pop and dec ljmp pop jmp dec and cmp push sbb jo or fcmovnu pop xchg cld neg adc xchg daa sub and push idiv sub sbb add movsb dec mov adc imul cwtl nop (bad) and mov mov adc mov xlat (bad) inc in popa xchg mov mov dec jb js (bad) xchg cli push hlt mov sbb sub inc mov inc cmp and cmp (bad) test cmp or mov mov xchg push (bad) into rcrb xchg adc cmp sub popl outsb pop and nop loope in add adcb test subb dec out in dec jne aam mov ror insl and arpl and adc (bad) adc ljmp lods sbb and xor inc cli push ja or sti fstl push mov push and xor lds int3 daa dec mov aaa ljmp cmpsl jae cld sbb xor scas scas out mov popf inc hlt pop outsl mov repnz pop mov jge push cmp mov cmpsl add jo mov mov idivb test sub pop (bad) fmull mov push cmp or jne repnz add dec or mov cmc rorl mov mov push pop mov int and mov and sbb push pop clc (bad) lods ficomp push out dec adc xchg add shrl push stos jmp insl es cmpsl xchg popa xchg test mov pushf and iret out js cmp (bad) rcr adc mov clc push insl fisubl mov dec add test fadd ds lahf and and xor jae sbb in xchg daa push mov bound pop mov cmc cmc sub in imul cmp in lahf shrb rcrb mov push pop loope wbinvd sub add xchg repnz xor sbb das in xor xchg scas mov mov pop clc cs out ljmp andb insb rcrb add js,pt xlat mov mov test mov jle pop mov test iret enter jns sbb mov mov jmp mov jbe xor in cwtl mov cmpsb jge sbb aaa dec sub jge arpl mov xchg and push dec push xchg or imul std mov aas dec fidivrl outsb out cltd pop loop xor (bad) in fiadd sbb push (bad) xchg cmp pusha adc lods fstpl iret hlt fwait push inc leave pop lret dec inc pop scas mov sti xor shlb mov in jne pop addl xor repz (bad) xlat xchg rorl sub scas inc das iret xor out add out fcomi adc pop cld jno sbb (bad) je cmp add shl loope jnp push cmpsl xlat sbb xchg aaa popa nopl scas popa int3 jae imul push jbe mov or inc ret daa jns or xlat fimul fsts aas xchg pop adc jg jg xchg and aaa add inc xor ss je sbb or pop jnp sub fdivs pop das inc cmp push sbb xchg or pop add mov fs in dec jns pop cmpsb stos lods push testb lcall add xchg cmp ds clc into pop ret fsts clc fisttp jmp rolb lahf mov sub adc pusha and mov (bad) sub jp adc sub (bad) jne dec lret and adc pushf mov push push aam xchg xor jp stos dec iret or and push les push cmpsl call (bad) cmp pop xor push jl imul cmp gs add sub mov loop mov sbb adc dec dec add movsb (bad) (bad) insl aas jmp mov shrb lcall das xchg xchg push push and and dec imul lods and sub mov insl cmpsb add xchg or std stc and dec push hlt and (bad) mov xor mov or jns mov jno or pop mov pop aaa jno sbb stos dec js inc je movsb push arpl or xchg push pop (bad) les cmpsb lods je mov pop adc fcoms sub into pop test (bad) mov insl mov inc mov xor xor popf js push js push aad fiadd into inc fmull out cmp inc cltd push and push dec pop test pop sbb inc out xchg fisttpl jmp push (bad) jg pop in sub adc fiadd subl pop in inc loope lds add push cmp push fstpl push imul lds and jo and dec push leave add std jmp cmpsb sbb and adc adc cwtl cmpsb dec movsl repnz inc sub fsub sub mov jnp aas mov lret call loop outsb jns inc pop sub xor xor cmc fnstsw daa xor popf mov dec mov movsb shrb pop jo dec mov inc dec lahf cmp mov lret movsb jns cmp fwait pushf iret lret lea adc mov jg push xchg pop pop lcall ljmp xadd mov (bad) fnop xor ret mov mov ss push or sub fidivr inc mov lret mov push lods mov cli mov lret mov shr cmp cmpsl cmc and pusha movsl (bad) push cltd xchg mov sub test dec or cli movsb jle inc mov mov sbb daa push test lods popa pop enter cmpsl je xchg mov pusha out add cwtl aaa and mov (bad) loop je push mov sbb and fldcw push jae dec xchg imul or xor aas je add mov mov lods aas insl pop xchg jae mov mov or pop add add sub cmpsl pop inc jmp into sub ja push shrl mov inc dec add outsl leave xor roll rcrl cmp addr16 bound cld and pop push rorb dec push or (bad) dec (bad) (bad) ss sbb imul inc dec inc xor sub loope xchg jbe movsl mov ljmp mov cmc jecxz out fldt sar jl (bad) mov jno nop xor test jb into fwait jecxz int in push hlt (bad) sub nop pop std sub xchg push jmp jae data16 cmpsb das ret lods cmp mov xlat daa dec lods test loopne push out bts mov outsl push stc lds sub pop or sub dec (bad) ljmp push xchg sbb cli add jae in out outsl jmp mov cmpsl xor mov push and cmp cwtl mov cwtl test movsl jmp stos adc dec pop mov cmp xchg rcrb fldcw dec mov idiv cmc inc leave and inc xchg fcomps inc jns nop lea lcall fcompl out dec sub and lds aas or out les add sub adc jo (bad) je mov (bad) mov jge in bound out pop leave sub sub mov jg adc mov in cmp cmpsl sbb sahf jge fs movsl push cmp dec or inc push nop sub or dec je mov cmp in xchg out or aaa push fistpl inc rclb mov addb jecxz out cmp stos jno xchg popa fiaddl ja push (bad) ret sbb jge in xor mov arpl push jo out lahf and xor jp xor jge jmp lea bound or mov ficom imul pusha sub sub ljmp iret inc pop shrb scas insl lods sar arpl cmc imul fidivrl scas mov and es mov decl pop or mov mov idivb adcl sahf movsb cmpsb mov rorl jl sub jge mov (bad) pushf lea sub aam sbb (bad) and lcall push mov add xchg xor stc sbb mov pushf scas pop orps cli fildll xchg popl xchg lock (bad) push ret mov dec push sti adcl inc movsb mov inc mov in test jno lods (bad) clc push fs sub cmp add arpl and jnp xor cmp inc loopne mov cs popf ljmp ja fisubl or sbb ret jnp gs xor fs and popf sahf cmp dec sub sarb jbe imul xchg or xchg (bad) aas aad push (bad) mov pop xlat jnp xor in sbbl sbb push mov lcall or rcrb inc mov mov sbb lcall pop dec insl cltd mov std fisubr gs xchg sti loop cmc adc or pop (bad) fadd xor je scas mov cmc or pop icebp ljmp jg imul or sub ficompl and (bad) xchg jge pop push adc mov xor dec stc je jbe dec mov (bad) xchg dec mov scas dec adc ret push inc lret xor stos pushf fwait cmpsl dec js inc loop mov mov (bad) adc popa lods cs sarb xorl int icebp pop (bad) jno outsb push xor dec aad dec xchg jns negb (bad) mov stos sbb js and nop rcr fdivrl mov insb (bad) fimul inc inc push push xchg pop inc mov push ja dec ja xchg mov stos or popa and pop inc les dec inc sbb (bad) sub and popf sarb add push sbb rol stos addr16 faddl mov outsl sahf out in (bad) sub push pop pop dec or push stc shlb adcb mov jns lahf jmp inc test adc cli jbe adc fs loope (bad) cs adc test in je aad outsb call mov lock xchg jmp push sbb fnstenv rcl cmpsb into cmp inc outsl ret test push es sbb sahf movsb (bad) lods jbe div adc pop jb dec mov stos sti es divb push popa pop mov fistl xor dec (bad) jae jmp cltd clc sbb mov mov fistpll inc mov int mov fldenv fldcw (bad) mov sub nop fstpt pushf fdivrs cmp and out lret mov fisttpll or inc (bad) mov pop (bad) fcomi jg out dec cmp repnz cmc adcb notl loopne popa sti mov add cmp out jne or movsb leave inc xor out inc in inc js lds add test or (bad) xor fstps sbb push sbb lret mov call push push mov push xchg or in cmpsl push inc adc mov jmp push add mov jo lods mov cwtl push dec aam sbb mov out push adc sub aaa outsb addr16 mov aaa rcrl xchg pop add nop stos add xchg push aad xchg push popa js xchg lods sarb hlt sahf mov in std add jg lret xchg jae lods imul imul mov mov cwtl add pop adc add push les xlat mov push mov jle shlb ds pop xor fidivr shll add bound pop inc inc dec inc jnp outsl xor jb lcall outsl scas pop xchg and stos fcoms les jg and pop imul pop mov lods push movsb pushf rcrl sbb dec push ja in mov push mov (bad) dec jp shll adc stc pop loopne add pusha push dec or ret gs xlat stos insl push inc outsl in out iret push or add and insl sti or dec xor inc nop (bad) insb divl mov stos dec mov fwait xchg mov (bad) adc ret (bad) stc cmc mov or dec ret lock call das (bad) xchg lods add (bad) adc mov jne (bad) inc daa sub cmc and (bad) sbb jl jno,pt mov sahf and js jecxz sub cli jno dec dec mov jbe fcmovu inc cld mov inc pop and lds mov sti enter lahf mov mov sub fld sbbb aaa xor pop (bad) mov outsb mov scas mov or xchg lock or or xchg scas out (bad) dec xchg popf inc jl call call adc pop pop out (bad) dec and das adc or cmp sub sbb jge das movsl pop adc rorl inc mov xlat sbb setg mov repnz mov (bad) arpl roll das cmpsl pop lahf mov bound cwtl and addr16 cltd jno hlt xorb pop pop mov push call inc mov push push cmp dec decl or jo cmc ljmp dec mov jns cmpl jmp push sbb jno insl push push cmp dec stos addr16 push jns or dec stos aaa pop add je jecxz mov int3 cmc sbb pop sub cwtl lret je and dec repz cmp enter push add div pusha and je mov mov add aaa sahf adc cmp (bad) aad (bad) mov es inc insb (bad) sbb pop mov push cmp jo stos push ds movsb cwtl inc mov xlat out sbb ficom xor xor push cltd xchg negb movsl mov imul loop adc mov repz adc movaps sub jmp cmp mov dec jmp and call movsb jbe outsb dec lock xor sbb mov addr16 cmc and inc lea and sti add loopne fisubrl lcall or loop cmpl repz xor lods sbb cltd adc (bad) mov and or sti jno mov mov push cmp adc mov out (bad) push fnsave cmp fs dec (bad) jbe add inc test (bad) cmp and (bad) fistl pop mov xchg das iret jl (bad) push lret lods inc mov leave ret ljmp pop in add lds cmp and js mov mov xchg idivb (bad) jbe jns lahf add mov mov add in dec inc push xlat sbb sbbl xor inc mov popa xor ret pushf add mov push ja test ljmp fcomps jo mov lock sbb sbb ret push mov dec pop sbb sar push stc test add or xor gs es dec push mov loopne cmp sti fnstenv test xchg inc icebp lcall mov clc add jne dec xor adc les clc fbld xchg pop sub cwtl jno xlat ficompl pushf enter inc xlat movaps jecxz scas divl and movsb sbb rclb sbb (bad) jmp add inc repz adcl out iret inc sub ja (bad) cs pop mov mov xchg pop mov and and mov push mov scas pop jb lea imul sbb cltd fist sarl movsl cltd and ss dec incl adc rolb adc out clc lahf divl inc dec jbe jo sub mov hlt add stos ljmp xchg std lcall aam add fisttp aad xor and addr16 add cli and mov mov lret mov mov pushl mov repnz mov lcall into pop ljmp popa xor out sbb js aas adc in jl mov mov or add mov fstp aaa adc mov mov add jp hlt jb or dec push inc iret xor push stos fidivl add lret out push imul push sti aaa fsubrp movsl mov dec mov adcl bound repz sub enter pop mov add cmp mov fistl icebp mov loopne inc cs fadds leave lea rcll dec mov sub outsb hlt mov mov leave (bad) call cmp inc sarl popf rcl mov (bad) in sub inc pop movsl push adc movsb cli (bad) sti jl or jae das sbb pop js lods rcrb xor call data16 jecxz xchg xor push xor inc add mov push fs insl add ret and icebp and ja pop daa ret push adc mov add cmpsl scas mov pop repz mov roll out jge jmp sub mov sbb jno stos sub outsb fmuls mov jo dec jno ljmp icebp mov inc icebp adc in lds cmp dec adc push xor pop bound dec pop xor dec stos ret xor sub mov adc outsl mov imul in aaa and movsl loope jns add movsb outsb adc mov cmpsl repnz or cmp outsb ja pusha lods mov gs or es lods inc or fsubrl xchg ja lret sub fcom sbb (bad) xchg and les fsubrp sbb xor loop int3 outsb and scas (bad) or push cltd pusha mov (bad) pop sub fidivr idivb mov out hlt dec xlat sub push mov negb and mov adc mov dec xor lret sub cmp imul fsubr loopne fist stos aas pop xchg cmp and jle out or in cmp push mov aad xchg add or nop xchg js mov lcall cltd push cmpsb mov lcall stc mov mov mov add inc jo cmc push mov int lock lret cwtl nop movsb inc pop mov sbb je jle dec and out and (bad) cmp xchg lea movsl out or cwtl dec and inc iret xchg out xchg in xchg jo mov mov sub mov repz xchg pushf rorl iret mov inc ljmp stc xor xchg push faddl cmp mov stos xchg imul jns (bad) int mov in hlt rcrb mov jno ljmp cld and inc xchg aam insl inc int3 mov fsts pop xorl jb rorb cmp fild enter sbb sti popa lods cli mov test add insl cmp mov dec mov test mov add xchg ds loopne pop lcall mov cmp icebp adcl movsb sub aad push cli jo cmp movsl push out stos jnp hlt add push insl std adc test sbb push pop add adc ficoml pop and lods movsb jne xchg jl dec xchg push in in movsb pop dec movsl or mov push fldt lahf mov call stos sbb stos adc mov inc mov fimul add call enter jbe pop push jo out inc aas sbb les rol decl cmpsl loop (bad) sub mov ljmp repz jae inc mov cs jno jecxz aas enter in sbb push (bad) jb dec dec push lock adc pop xchg sub test mov pushl push sub jle jle rorb fstpt enter (bad) mov mov push daa roll movsb pop loopne rcl mov popf sub ret add lret stos js in (bad) jnp sub scas or (bad) loopne xchg ret adcl sbb or pop dec or push dec mov or es gs lods insb arpl xor in cltd out adc fwait cmp aas cltd sub dec push bound and add mov jecxz sbb sbb fildll and pop fstpt fwait sbb xor jmp jle sahf xor xchg adc nop xchg inc pop fwait jl inc cmpsb fidivl mov jnp icebp out cmp lahf mov mov dec pop mov inc fsubl inc mov scas or mov lds mov rclb mov mov push sbb jecxz mov dec xchg cmp gs data16 pop xchg jecxz adc jno test xchg repz xchg mov xchg inc mov jae jns xor (bad) movsb adc jo xchg (bad) scas xchg push ret daa mov dec subl fldl xlat lock movsb xchg and out lods pop sub inc in mov and adc lret pop and in scas sti inc push dec nop ss adc inc mov jg cmp mov pop int3 xchg pop xor fs or lea push xor cmp pusha cmp fwait lcall push and fsts out pop movsl (bad) frstor dec ret jne jecxz insl dec xchg dec cs mov mov std imul xor ljmp lret stos jno push sbb sub jo mov lods popf jl and (bad) or ret and pusha cmc (bad) mov xchg pop inc fucomp hlt jl xchg mov ljmp inc mov fsubl adc loopne and push pop (bad) dec ror push and scas (bad) mull xchg fistpll rcrb adc mov dec cmpsb add sbb (bad) insl sub out xor jae test push adc out ficoml shlb aas or lret xlat or lea or xchg push (bad) ljmp mov dec loop clc or fidiv cmc push pop push sub dec cmpsb sub fwait mov and ret pop mov jmp or sbb shrb (bad) xchg pop outsl aam dec in push cld adc stc mov fstpl xchg pushf push push (bad) lret (bad) loopne fs sub xorl cmpsl (bad) push inc lods mov lcall mov stos xor pop int3 bnd xchg sarb cmpsb push and sbb (bad) jno ss adc test sbb xor and and leave pop ja inc dec xchg lcall pop iret mov jecxz mov jo ljmp lret movsl jno (bad) in cli outsl test clc lods pop or inc rorb push frstor insl shl insb test dec arpl call out and inc les call es sub mov xor and shr insb push leave popf xchg xor sub and pop mov pop pop scas movsb inc xchg xchg (bad) outsl rorb in in xchg test je mov (bad) jae xor in lods xchg outsl mov pop jne mov inc mov (bad) jne mov sub cmc adc push mov sbb xchg sahf outsb xor rcll lods in pop (bad) mov inc in mov xchg inc mov dec popf pop in outsb push or cld xchg movsl mov pushfw fnsave xchg dec int3 pop (bad) (bad) mov pop out xchg pop ja std jmp enter jne adc imul cs pushf jae cli sbb js pop shr cmp fs mul mov jmp in xor test fmul scas pop cmpsb gs or xchg iret pusha inc ret mov je movsb pop popl pop add scas mov imul xchg loopne mov and mov fdivl ja imul inc adcl pop enter pop hlt jns and fwait pop xchg ljmp lock mov push xor jbe lcall mov stos popf or xor rclb aaa loopne out movsb adc outsl add movl out mov pop mov lret lahf and enter push enter mov lods push push repz cmovge (bad) jp fist jp adc call lret push add sbb mov dec (bad) leave test add (bad) sub sarb mov push inc cmp jbe add hlt call and cli and mov cs into cmpsb stc out pop fcmovnb fcmovu dec and xlat xchg sbb jo adc sbb sbb out cwtl lcall cmp lret jno pop fidivr mov stc mov mov test (bad) cmc dec cmpsl test pop add push jle or xchg std sub xor mov cmpsl inc aas and push movsl or sub shrl stc movsl sub repz test stos sarb inc fcompl add push in push sub xor stc push add mov inc push add xor mov and mov xlat xchg enter pop lret pop cmpsb outsb add out pop cld sahf and dec cmp sub (bad) negl adc jae mov and rorb (bad) sbb rol push adc cs mov rorb add xor test jne and adc outsb ffreep mov scas (bad) test adc jle addr16 push fidivrl sarb push cs mov lea cmp iret cmpsb adc cmp mov mov fsubl fiaddl cmp adc ds jle dec lret lret fdivs mov sti or pop addr16 iret xlat shrb fwait js das jle lods adc call frstor jg or dec (bad) rcrb mov mov mov cmp pop xchg fldl fnstcw and fucomip jo ds cmp mov lret xchg pop arpl cld cmp (bad) lea jp sub pop jne dec cmp sbb and in xor or dec jnp fimull jae push xchg fimul bound xchg cmp push out jb pop pop bound cmpsl sub or (bad) int3 xchg fidivl push xchg cld pop jecxz cld icebp lods (bad) loopne sub popf lods out aam aaa dec loopne pop mov sbb inc pusha aas mov mov push and movsb fild bound dec repnz lods dec in daa cs mov movsl push (bad) movsl fstl pop enter sub adc mov pop mov into ret loopne not cmp xchg (bad) loop hlt lret lcall mov jns test or mov sbb jne daa int3 mov fs add adc and loopne cmpsl jl fmuls push (bad) jl jne iret jmp (bad) mov das lods inc leave push arpl mov mov test scas add pop add ja pop out outsb (bad) jle xchg (bad) sub pop fidiv outsb fsubrs jne jnp lea or leave mov inc add sub iret push mov mov mov dec add lock rcll adc xor sbb push cmp mov mov jg xchg movsb bound lret clc cmp push inc (bad) pop cli mov ret inc (bad) js mov int inc addl sbb cmp mov mov mov pop mov fcomps xchg push jecxz pop or sub inc push pusha push cmp mov in jmp mov cmp ror les sub test push ja xor xor insb mov push sti push and jg addr16 push xchg lcall jno inc test jo lahf add mov cmp in fdivrl mov out xchg loopne and mov stc je xchg push add pushf xlat xchg push cs pusha icebp data16 jmp pop inc mov cmpsl dec xchg add xlat lea fsubs lret dec inc je and out movsl cwtl pop mov movsl in cmpsb xor fdivl sub lods pop pop (bad) push or cmp gs mov inc pop fistl aas je je sbb dec insl dec inc xor push xor push sub movsl fisubrl sbb stos outsb loop mov push and adc xor xchg push loop mov inc lcall repnz ret movsl adc loope mov dec out sub rcrl pop (bad) push mov movnti lods xor test jp sbb cmp pop xchg ret inc mov mov pop leave xchg mov mov jecxz inc testb mov clc push loope mov test repz ds dec sbb pushf out cmc mov roll sahf roll dec push daa popf and outsb push pop mov mov cwtl sbb daa (bad) fcmovb imul jb push arpl in add pop outsb dec mov aaa inc cltd aam outsl mov or push fistpll repnz jns xchg repnz jae in push cmp rcrb ret pop int3 push out mov jo lret das push pop iret adc adc xor sub movsb sub fucomi pop pushf les js rcr xchg push (bad) or inc cltd inc not lret mov pushf stos mov inc je mov jmp jo sub stos mov pop jae pop pop unpckhps sahf dec sahf pop dec test iret ds pop mov es fcomps mov stos ja imul inc aas das inc sti lods jp mov mov mov pop and xor push mov push sbb inc pop jo ja ljmp dec in xchg lods dec pushf mov pop gs mov mov adc out loope jbe pop xchg fidivr fucomi mov imull hlt das fidiv jmp nop ja (bad) lock movsb cmc sbbb or ss xor and xlat lret mov mov mov mov cld dec sub lret xlat les or ja ljmp in xchg ficompl or lods push sbb pusha sbb mov les jae jecxz lcall das aas repnz cmp push ljmp out dec movsb (bad) ja loope or imul cs int3 inc outsl gs aad cs adc sub inc fwait pop adcl cmp push jl (bad) mov aaa movsl mov push idivb jbe sbb outsb lods test cmc lret jp fwait push pop xchg push and add or cmp addr16 push sub out dec lcall (bad) scas and xor out aas outsl and (bad) das (bad) rclb cmp mov sub lahf or mov cmp insl insl loopne cmp pop mov add jbe mov push push mov cmpsb insb (bad) jbe lahf stc pushf sarb out pop sub mov xchg add add out ja sub lods pop mov (bad) lock jae stos ljmp mov jo mov inc stos push std push jmp in repz arpl insb sub mov outsl pop sbb fdivrs in les leave movsb jecxz mov lret mov and inc adc adc and lds sbbl in insb stos cltd (bad) sbb mov js (bad) enter js or js cltd cmp cmp lret and cmp mov push lcall shl js test leave (bad) call insl dec loop lock rorl inc cli push leave repnz fs mov xchg sub push add js cmc out push fwait aad das mov popl mov mov xor into (bad) pop lods clc (bad) repnz adc mov push dec xchg (bad) stc je mov aad cmc ds fldenv jno test mov lret fldcw stos fldl (bad) push adc push xchg xchg mov mov pop fisttp imul fsub pop stc xor mov das les mov xor cmpsb jno popa daa bound daa sub out fstpt mov daa cwtl xor mov lods jae adc dec dec (bad) (bad) mov cmp push enter sbb xchg fistpl mov adc and sub sbb adc (bad) xor mov lods adc push scas fcompl pop leave inc sar mov inc out or jmp jmp add (bad) aaa mov fwait outsl mov cmovg sbb adc adc fidiv rclb les fwait push shlb lret test and test rcr outsb outsl lods leave push xchg cmpsl push push dec mov pop sub mov xchg std mov bound lods jae (bad) iret mov std jns test repz pushf push cmp mov push sbb inc rclb xchg pop push lcall jge push lret inc push repz imul jmp je out lahf pop jp scas add push iret sahf int3 (bad) ss movsb sarb mov inc hlt and sbb int3 dec pop es mov adc pop cld sti jne jo mov inc xor sbb cmp mov jo daa sbb mov mov xor (bad) insl pop icebp xchg push (bad) push xor sbb and pop mov mov sub xchg mov push popa cwtl imul test push xor pop pop out add inc bound add (bad) ret fmuls dec shrb fidivl in ljmp dec and mov push xchg lds lea roll dec cmp push add fisubrl push dec js scas sbb xor xor dec lods clc or fnstcw std stos jmp int imul inc jnp push mov test insb aas cmp sbb ljmp pop mov xor mov (bad) (bad) mov push sbb pop lret fldenv test fidivr dec ja adc (bad) repnz mov lahf pop mov pushl cld pop inc inc fidiv dec fsts pop pusha mov and adc clc jo popf insb (bad) mov dec jmp das inc jns ror cmp and fwait popa jecxz insl cmp and adc arpl adc dec sbb cmp or add cmpb mov add hlt push popf (bad) xor mov inc lret fcom sbb loopne les adc mov pop jae or or test test pop and rorb (bad) or (bad) arpl pop inc cmp cwtl (bad) push out out inc mov into stos adc repnz push hlt int3 stos xor jnp adc cmp and push xor pop loopne xchg cltd adc xorl mov stos aas add push sahf in (bad) and fisubl repnz out fstl int or fisttpl jae stos dec fcomi ret add cld imul sub mov push and add cmp dec mov pop nop inc jne cs or push ret lods mov cmp sub jmp inc push sbb push loop ds ss je pop cwtl (bad) mov stc ds lock add jae,pn into or mov ja and mov sahf cmp dec aaa icebp cmpsl fldenv sarb sub jno mov sub mov jmp xchg and dec ds mov pop xor fidivl cwtl adc mov test and std scas std pop cmp inc (bad) xchg mov jo shr cmp lds cld cmpsb loope ja mov mov adc (bad) fimull bound jle dec inc fistpll and rcll ss outsb stos pop pop adc es insb sti and pop mov jns daa enter jb test inc jno bound stos xchg leave add push lcall (bad) cwtl out sti cmp dec inc mov pushf xor mov sbb cmp mov push data16 cs dec bound lahf pop pop pop call out cmpsl leave pop or in fdivrs jnp adc push mov pop jle enter aam xor push daa inc (bad) xor repz xchg ljmp push push push or xchg sbb (bad) mov clc adcl in mov adc bnd inc jno aam inc sbb xor test or rorl mov sub jb xchg jecxz xchg cld or mov cvtpi2ps mov shrb add add daa lods xor mov pop dec sbb inc mov loope ret adc mov mov lret sub stc mov adc in fdivrp jae xchg lods push out popf fs add (bad) push movsb jp js sbb mov popw pop adc lcall mov (bad) into fimul dec xchg ss inc ljmp test sub std cmc orb rorl cs and fsts mov jbe mov dec lcall popa lcall adc insb fistpl inc sbb mov xlat aam (bad) scas sbb loope jp (bad) std or adc pop outsb mov mov mov lds push enter xchg test jle jmp xchg and incl cwtl test icebp mov aad inc mov outsb push subl mov in sbb pop insb loopne test (bad) xchg cwtl lret inc ret into popa pop fwait pop pop lahf xor or push dec ljmp out mov rorb into push or test mov xchg adc pop nop push jne xchg and and mov int3 in mov repnz mov je mov or loopne mov sbb in add cltd xor jecxz jo or mov pop jbe ds xchg (bad) mov ret int jge data16 loopne push lea mov out inc shrb add fild fiadd push out sub je pop adc adc jns add into in xchg cs test out pushf dec cmp push int3 push (bad) xor sub jb inc cmp inc xor testl fs mov sub lahf insb rcll adc xor dec jne xorl sbb ja in vmovaps cld aad int push ret notb jl inc (bad) rorb out out fstpt xor loopne cmc add sub pop adc push mov add leave push dec and es push add mov data16 clc pop mov orb lahf sub pushf push jge mov inc test jg mov mov mov sbb pushf pop inc hlt aaa lds pop movsb test or pop aad int mov dec xor int pop sub and xlat scas andl (bad) or dec les add ljmp or in ss fsubs call stos cmpsl outsl cld push mov icebp fwait aam aam lock jle jl dec jo lret arpl pop adc scas fwait pop inc sub lret adc cltd sti aam mov pusha clc fmuls (bad) icebp ret inc inc je or and fwait popa and loope pop clc or jmp rcr clc and mov pop sub mov mov aaa sti xor bound in add (bad) dec or mov in loop push dec pop lret push inc mov les aam insb test xchg fsubl adcl dec pop (bad) addr16 cmp cmp (bad) dec call mov and in lcall in shrb fbstp jge lock inc loope mov sub fsubr cmp xchg bound ljmp (bad) lret test orl pop dec push sub movsb push or add jle roll bnd push pop inc or (bad) fidivl aad cmp push push inc nop loopne popa mov enter ror push mov xchg push jo jbe and push test push sbb jae cli inc sbb pop mov (bad) insl in sbb jae dec xor push loope or mov mov lret and hlt iret sub aas xchg ds test pop dec mov adc movsl mov lods lahf aam loopne inc dec jae daa aaa inc outsb sub cmp push icebp mov dec loopne pop stc pop (bad) in push pop xchg inc dec pop lcall dec adc in fildll scas gs aam push sarb sbb sbbb pop into lcall cmpsb jge or in xchg rcrl mov in nop jno add aad lret mov (bad) jg scas mov (bad) jae or leave inc xor cmpl out in iret int sarb inc xchg mov dec (bad) lock fcomps pop and aaa loope sub gs sbb mov out lcall das mov cmpsb das inc in sbb nop push mov xchg mov xor pop jae push xor mov push mov imul dec push mov inc and ret sbb iret in jp jbe movsb pop sub pop aas jo stc ja jmp int scas shrb (bad) ret enter int pop adc ficompl test push push aam add inc les adc sub notb xor ja pop dec mov inc lret push insl (bad) mov and leave jns fisttpl and cmp xor pop or rclb inc (bad) jl xlat pusha je add ret bound sti and xor add aas in fcompl add xorl push add jge push mov ja fistpl xor sbb add pop or and push nop clc call push int3 or or push jg adc mov or pop div dec movsb adc mov fldcw mull stos in cltd mov data16 (bad) fisttpl jne mov jno outsl xchg inc jg leave out or lods pushf adc cmp sub or jbe fmulp fidivr cmpsb imul movsb xchg ret sbb jnp sbb hlt push jmp sub push sbb ja in mov test mov shrl ret ljmp test xchg (bad) dec je cwtl cmp fisubl add adc fcmove cltd inc nop mov jle inc add cmp ret push mov leave jmp clc jo std mov mov in add push fcoml out add jo cwtl xchg imul fcmovu push xchg in push adc test dec cld mov (bad) mov out nop xor push paddusw jl mov bound fbstp mulb cmp insl sbb cmp daa pop pop xchg inc lods rcrl orl add fwait insb dec je sti sahf add in ljmp (bad) test mov fiaddl or (bad) insl sbb je in mov jl adc jmp push js jecxz cltd loop out jo pop mov scas out pop add jb aaa jb in push orl lret xchg pop cmp smsw aaa cli inc push dec pusha imulb in das testl pusha insb (bad) xchg xor xor pop pushf cmpsl cmp push mov enter jno or mov pop or mov fimull add (bad) xor mov nop cmc mov gs data16 push mov jo dec dec das mov sub cmp mov push cmpsl adc aam jecxz mov xchg negl sub addl lds sbb inc mov sti mov dec add out cmp outsb mov push out fdiv call jae in test out jge push sbb lods xchg ss push dec testl ret cmp sbb mov ja sahf dec cli dec mov js dec aas addr16 ds xor fisubrl xchg adc andb aad sbb outsb sub insb mov enter pop cmp fs xor inc pop scas sbb sub cs sub ret nop (bad) mov mov in (bad) mov or inc test popa mov aam dec jle insl fimul mov or mov lea dec push ds or mov out notb aad test or jge mov mov out stos push stos adc ret (bad) pop pop dec xchg sbb pop lahf jl sbb mov fiaddl or jge pop lock push adc out mov stc mov shl clc and inc xor lahf repz jns or push or jnp xchg cmp inc sub cmp push cmpsb xchg lret cmp rorb jle fsubr adc mov add push mov xor cmp push xchg ljmp inc stos inc stc fwait inc sub pop push aaa in pop fucomp movsl lea jae mov add mov xchg and outsl jne lcall (bad) jne push jo lret cli inc cmp cld dec xchg pusha das jge dec aad aad sub inc sti imul test xchg dec cwtl dec xchg test xchg in ja ss mov outsl adc mov fcmovnb mov mov fucomi sub adcl movsb sub mov pop xchg outsl dec addl mov sbb inc leave sbb push shll push fimul sub jecxz je mov fildll cltd es rol inc or test dec xchg pop dec cwtl push movsl add mov mov rcrl push imul out pop push add shrb ds scas or mov xchg int nop mov adc mov or jno add pop popa cli test in aas mov cmp mov insb test pushf sbb add popf and cmc outsl pop in icebp ljmp dec test inc int sahf (bad) js dec xor xchg lds mov iret xlat jg leave jg pop xchg adc mov icebp jecxz orl push (bad) jp aas xor mov lahf cmp test fidivl cli cwtl xor dec add rcrl fldl nop push jae jge cwtl loop cmpsl dec pop and cs push sub inc jmp sbb adc cmpsl je loope pop xchg mov push fldl scas sub gs fldenv negl xchg xchg into in mov jl (bad) pop int3 out test xchg test rclb je icebp xchg xor pop jbe or mov cli or mov dec dec (bad) mov pop jecxz (bad) push xchg aam jmp in jecxz adc sub xor dec fwait push xor cmp add or cltd add fsubrl add movsl jbe push lock insb idivb add mov push in adc dec jmp shlb iret xchg cmp jno aas pop stos int dec adcl lds loopne popa adc les mov push enter adc dec push add pop ja hlt dec xchg jae add sub out jne rcl mov mov bound pusha es add (bad) xor cmp stos out loop cmp inc ss rcrb inc inc pushf (bad) out jae or xorl push pop test ja fstps (bad) pop jne push push xchg lret aam cwtl stos jg jb pop pusha mov ljmp pop cld push out adc ret cmp int mov (bad) jnp inc mov push imul subl in loop inc sub pop xchg dec ja ss push mov icebp mov dec xor in movsb fnstsw xor (bad) cltd xchg add mov popa cs bound lock (bad) push and inc dec fcmovu imul adc inc or sub sbb adc enter rcr test push js dec pop xor out xchg nop cmp cmp add sbb test aas or sahf jb call inc fs push jnp loop and pop sbb insl pop xor pushf pop std mov test ret xchg mov sub sarl pop mov mov popa loope push or lods ja cmc ja lret push scas outsl fildll (bad) (bad) push loop xor roll out dec imul (bad) bound mov xor and xchg in adc cmc mov xchg sbb pop jl int or mov jp jb mov roll test and scas jo int3 mov loop cs push andl sub xchg cmpsb cltd cld fild dec int xchg ds andl mov xor push popa inc mov lahf pop push les and xchg in push inc and dec repnz cmp mov jne mov add fsubrs xchg push movb fstps iret sar or mov sahf out xchg lds adc adc cwtl in mov jmp or packuswb xor js add xchg cmc push xor jnp pusha jb dec cmp loope call push or (bad) mov fbstp or nop clc adc push mov int3 int3 jns jg mov jecxz mov sti popl mov pop add or jle scas (bad) sahf dec in inc push mov add std cmp fisub fstps rcr shrl xchg iret mov pop push fcom js lcall loopne xchg mov add stc jae pushf shll int adc jb and cmp pop aaa dec push push icebp push and inc daa push and or cmpsb inc dec das (bad) jne jmp test push cld push xchg cmc add jge ficoml aam test aaa std (bad) jmp push jne push mov cs cld pop push scas sbb shrl imul imul jns in (bad) push cs imul cmp ret (bad) or inc xchg cs xchg jb inc rcrb ds inc dec es push adc sub jae data16 sub push lcall mov jmp pusha adc sti mov sub hlt push aam loop int3 xor lret pop or mov mov inc pushf jno ret or scas xor push xor xor push out cld sti ss data16 push dec (bad) sub mov fsts stos sub fstl mov pop lods dec pop mov push xchg xchg hlt cmpsb (bad) xchg repnz and sub test int3 adc mov mov scas gs mov cmp push icebp scas pop sbb in jg aas dec mov jl mov push mov dec in dec popf cmpsb xchg nop ss add xchg (bad) adc jecxz sbb addr16 mov mov mov push adc insb dec mov les test mov push pusha pop cmp pushf adc outsb cmpsl sub (bad) cli mov add sti (bad) mov ljmp adc cmp faddl and xchg arpl loopne imul std seto out jecxz sahf push leave dec or xor repnz sbb cs mov inc fdivr aaa dec in mov fldl lds push add movsl insl hlt pop push inc push mov pop jae adc cmc push mov inc push pop mov imul ss pop mov mov repnz add and ja xor fistp daa out in pop sbb fst pop rcrb jns push test sbb orb mov fimul (bad) mov jp jmp dec push sub pop lds test sbb sbb in mov inc push push push add jmp fldcw pop imul push jg outsb scas pop dec clc es fidivl push fwait repz jbe pusha scas rolb in dec lret sbb gs add push push lods and std out nop popf (bad) cs sbb sahf mov or jecxz inc out shll jecxz imul pop imul insb je out or jo adc push aaa mov les das repnz mov sbb pop mov (bad) into fsubl pop fidivr lds jne sbb inc stos repnz push mulb mov bound in cs stc lret in idiv dec fwait aas cwtl inc ss (bad) ffreep dec push imul idiv cwtl push sub ficoml sbb dec repz or mov mov adc (bad) sub adc mov fldcw gs or pop cld fmul cmpb adc not mov inc loopne jo hlt es push ja repnz cltd dec sbbl inc push push sbb cmc mov lret cmp test pusha push movsl lahf mov arpl sub push out jno aas sbb fs pop fadds nop jae jae ficoml xor imul mov add xchg (bad) imul aam packssdw xchg jae out (bad) jecxz pop xchg dec ror add gs pop icebp adc test in popf icebp mov push xchg mov and jecxz lcall leave xor cs add xchg push ds xchg (bad) inc pop icebp jb es aaa mov dec gs pop mov push lahf inc jp jmp adcl bound movsb fisttpl inc jne jg int3 (bad) out inc movsb setl ret das xchg mov in xor xor mov xchg in (bad) pop rcr or mulb call add iret daa fisub push (bad) daa or or xor or inc rolb fildl mov pop xchg sub add jecxz mov ljmp mov or jnp dec jnp in push sub sti clc jae out cmp out dec outsl pop dec xor inc lret pop mov jb loopne pusha mov xlat and bound pop clc sub xlat das cld fiadd ret test dec cmp jecxz mov sub inc gs xchg cmp jle sbb (bad) clc inc sub (bad) (bad) cmp push je enter sbb pop jle xor mov (bad) fldcw test adc int3 pop fcmovnu adc lds sub inc fisttp popa ret adc adc jecxz (bad) xor push popf lds pop fisttp ror dec (bad) mov fdivp dec lea call (bad) ret mov sbb pop nop (bad) test in jae cmp jg or or adc mov enter pop cmc adc (bad) mov adc adc call lea mov ljmp xchg xchg iret xchg pop cmp (bad) jno (bad) fcomip movsb jmp push dec inc aas xor inc loopne or nop pop xor jl add int mov inc daa xor and imull sar push push add mov out xlat test push mov and and int or (bad) dec mov je xor (bad) or pop popa gs (bad) jb jns mov xor mov sbb (bad) out or add fisubrl fldcw mov movsb sub lret and fcomi popa cld mov mov rorb daa roll pop (bad) sub and dec sub xchg cmp sti into lret mov loop add fidiv or test inc stos xchg sub cmc fsubs pop sbb pop mov mov and xchg push jo idivb lods or and add scas xchg cmp rcl lea lods das out std ljmp and int3 test fcomip les mov jmp aaa cmp pop cltd or lret xchg sub ror mov cmp xor dec xor xchg xchg inc (bad) xchg out stos aas call pop xchg insb dec mov push outsb adc outsl push mov mov ret mov aas cmp out push mov pop xor js pop and ja stos inc inc jae icebp sbb pop in shrb cmpsl inc pop lock push add lods in imul mov push push dec sub jecxz stos lods call je mov sarl and testl in sbbb mov inc lods je cmp lods lcall int3 xchg rorb in stos aam xchg xchg pop mov inc push sub xchg and push cld testl and call mov icebp call shr movsl lea push mov jmp or xchg fwait inc std mov iret mov fwait adc mov push fistpl cmp dec cmp dec xlat stos xlat sbb adc push cli sub leave loop jb push scas out loop sti or repz lods cmc pop ljmp frstor mov sti mov hlt dec cmpl jne cmp pop adcl jl mov repnz ja adc push pop adc js pop push mov insb pop jmp aaa lock adc leave adcb cmp ret (bad) (bad) aaa mov dec cld ret sbb aas jae mov bound sarb pop pop cwtl call (bad) test or xor dec mov leave or sbb adc mov popa mov jmp jecxz mov push insb or movsb cmp and ss mov test push mov mov es mov div cmpsb inc jo ljmp inc mov test lret ja (bad) xchg cltd mov mov xchg and xchg (bad) ficoml xlat fnstsw adc loope fs xchg sub inc iret inc and shl mov ljmp adc (bad) jl mov push shll imul push ficom mov mov inc ss add xor or mov push mov cmpsb or xchg lahf neg dec (bad) leave in mov jle mov std sub popf fisttpll (bad) xor dec fmull pushf sbb int in pusha xchg fs in lret ja lret pusha sbb mov movsl pop in mov mov mov jge clc cli loop fidiv int3 pop jo repnz jns and mov (bad) and icebp outsl xchg out pushf and add jp fcmovu or testb mov jl ja js cli push or call adc ljmp adc sub insl test (bad) cmp out jp stc popf div sar stos mov inc mov repnz cli xchg or not mov lcall fwait pop jne jb (bad) push in cmp cld push scas jnp insb rcrb dec jcxz aas mov les add adc dec mov inc and adc (bad) sbbl jp mul rclb xchg in sbb or inc adc jmp sub loopne mov rcrb insb insb fdivl scas mov ja sbb sbb out push xor or lret stos pop xor push icebp (bad) arpl or push sub xor push dec insb push adc sub ljmp xor lret mov fsub mov mov and cltd and in imul mov mov xor testl in and or push arpl jae incl xor movsl push sbb jge jp mov jle gs xor std or adc mov std out in or xchg (bad) and sub sbb or mov cmpsl vpmullw mov xchg adc fwait adc mov data16 mull adc jle rcr xor cmp or jmp jmp fnstenv or ja roll mov (bad) sbb mov pop das mov sub fs dec stos test push nop mov bound movsb sbb lock addr16 mov cmp sub int lcall dec xchg add sub int3 jle subl or ret sub sarb (bad) adc std ljmp adc mov push jns js leave cmp daa and mov jbe xor push icebp jnp insb jbe outsl inc pop jecxz jp fdivp into cmp xchg add sbb ret fs js call rorb arpl sti gs cwtl cmp dec repz out lret mov adc (bad) ficomp mov jae in push cwtl iret sub (bad) xor sbb cmc outsl cmpsb jecxz and sbb mov and fdivl sub outsl imul fistpll adc pop mov push lock (bad) mov fwait fs scas ret dec sub imul outsl xor dec test lods int add or inc das fldt mov popf dec (bad) shll les outsl lods fs add dec add inc mov insb cmp mov and cmp std mov inc addr16 fwait loopne inc (bad) hlt shll sub ret es dec (bad) out cmp mov js fldt aam aas pop (bad) or dec fstpl loopne inc xchg jl add mov movsl ret or mov fistpl icebp mov sbb rcrl loop flds fs pop shrl mov dec xor sbb insl add ja pushf mov into idivb cmp pop (bad) repz dec and enter xor add adc sti jne fistpl cmp addr16 pop call shlb push mov push pop or (bad) scas lahf je mov and roll clts dec add jle or iret push or outsb pop cltd repz pop lret mov sub adc inc vprotw out push or mov or popf push sahf sub scas sub push lcall dec add lahf ret ret sahf mov sub jae aad ja and mov dec popa mov ret mov enter (bad) test or sbb into fsubl dec jb divb stos pop repnz rcll (bad) mov data16 mov mov cmp xchg xchg pop xchg xchg loop divl fcomps inc iret iret jo movsl push popa push sbb mov loopne mov and scas cmp int3 mov lcall or jle inc mov cli out stos jns mov in cmp loopne xchg xor mov jecxz adc ret push push std and sub xchg imul pop int popf sub adc mov xlat pop mov push pop cmp mov icebp mov inc scas sbb pop das pop or mov sub mov push (bad) cli cld js lret pop fs pop cmp cmp data16 mov or popf pusha jo or imul sbb push das add adcb std or call jge stos pusha add mov ja push lcall xchg adc clc (bad) insl sbb dec (bad) mov and or in dec sub into cmp lea dec and mov ret ljmp packsswb mov lret mov (bad) test jp bound arpl xchg mov mov lret mov das adc jp stos in jae push mov out pop les cmpl dec pop inc push mov scas cmpsb sub es imul std or loope push inc xchg std ds sbb xchg ja mov fdivr outsl add pop cmp shrb pop xchg dec adcb imul mov cmp jge loop or into jne push popa movsl and cli out stos into sbb (bad) cmpsl mov cmpl inc pop add shll int3 xor mov hlt cmpsb lret cmpsb sbb aaa xchg push jge iret or jmp pop leave insb xchg and pop push outsl push call fnsave jge pop outsb pusha iret scas pop dec xor lea lcall ret dec add in sti aam dec popa xchg mov lock jbe test adc testb js testb push xchg bnd scas xchg mov or sub mov lods inc xchg cmp std or imul mov aas mov call or repz flds in fsubr add xchg enter jo xor push les gs inc lock addr16 and iret dec pop jmp cltd inc jecxz sbb clc mov out clc pusha andl nop cmpsl mov mov aam push (bad) movaps sbbb add es fistpl pop xchg imul xor mov inc insb pop xchg mov and imul rolb push mov mov ja insb sbb mov lods repz mov ljmp pop std lret lgs cs movsl (bad) je rorl cmp jmp inc sub test jno adc fmull mov or xchg test std sub dec stc fbstp insb or mov xchg sahf sti (bad) xchg mov inc lea pop inc inc sub es lea nopl aam into xchg in enter jo mov push sbb (bad) jg or or cmp pop and popl mov sbb mov push test pusha mov inc cmp loopne xchg pop mov insb popf aas inc jg jg iret jp xor mov mov pop out std jmp outsb sub xchg xor pop hlt adc mov push mov fs (bad) dec lcall pop aad pop (bad) cli rorb adc adc mov fwait repnz inc clc das in dec push pop dec xor push dec pop pusha mov add inc pushf in sbb inc sti dec cmp mov mov add call ss add fs jbe sub jl jmp dec adc mov mov and incl mov imull push mov cwtl dec jecxz lret mov inc cmp imul xchg popa cs push cmp syscall test mov and and movsl mov mov xchg add outsb push xchg sub imul fsubr push xchg fs dec push in xchg inc sub into lods shrb and mov outsl or cli enter pop fidivrl jo push js xchg sbb daa das roll or addr16 aam leave jmp (bad) mov sub mov jg mov cmpsb inc aaa decb ret insb and jl inc hlt int3 jno add inc mov dec xor (bad) add push lahf leave int fs popf aaa xor fcoms mov mov pop mov inc ror aad cmp fdivs dec sbb mov hlt mov sbb repnz ficompl rolb cmp bound aas (bad) dec fmuls daa (bad) addr16 jp xchg mov xorl push int dec aad enter addr16 out sub imul push mov arpl loopne dec insl sub push fistp aas fsubrs cmc xlat scas popf mov push xor test jae (bad) xchg pusha push jnp push int3 ss push aaa sbb jnp fisub prefetcht2 js xchg inc cmp aaa mov scas ljmp xlat (bad) stc fildll popa xchg les fimull push pop pop push sbb sbb pop add sub (bad) std das lahf enter mov insb imulb subps push (bad) dec fisttp inc adc dec cltd orl xlat into mov pop das jge loop test xor fcoml (bad) mov jne jae xchg push xor gs imul test mov xchg xor addr16 (bad) int3 jae scas lods pop rol outsl add push push push pusha jmp scas stc test imul pusha aam jmp js adc adc pop fs scas pop fdivr repz jecxz push rcll ret insb dec dec leave imul cmp pop dec mov cmc cmp jns outsb sarl cltd push rorb pushf movsb (bad) mov add add inc push add or imul inc shr lods or add repz std mov pop aaa pop (bad) loopne out push adc sub jnp jg lods ret or push mov dec into mov jecxz daa dec out mov xchg fstpl pop add inc inc sbb xchg sahf mov (bad) or sbb movsb adc jno outsb push jne adc subb out jmp push mov push mov pushf outsb pop insl ja push jmp xchg or jno add xor mov in repz mov movsb sar subb adc inc jo fs js (bad) push cmp pop clc mov fwait arpl xchg in dec insb inc pop out adc fs mov ficoml mov xchg pop add jl inc scas mov add fwait pushf pop lods push xchg sbb add mov popf inc mov push push mov mov enter gs cmp pushf lcall cmp jge adc push gs inc inc xorl dec stos (bad) fidiv jecxz cmc xor bound fsubl cmpsl sub test lods push loope cmp cmp dec cltd add je mov sahf (bad) outsb sarl loop lea xchg outsl inc lcall pcmpgtw sub hlt mov push ljmp pushf mov push sti lret (bad) add in pushf mov stc fisttpll sahf jns clc (bad) cmpsb repz add data16 test (bad) mov push rcrb mov rol xor jecxz fwait push outsb test mov movsl push insl cs jns fstl popa cmp inc roll xchg ljmp cltd es aas sahf int3 adcl (bad) jo pop dec and cmp fstpl std stos out lret inc cmpb rorb das add leave sub sbb inc push xchg xchg sbb pop movsl mov stos mov mov sti mov jge dec imul movsl mov dec cmc adc testb leave popa daa cmp aaa test dec hlt pop dec in push sbb shrl cld out push (bad) push cwtl sub push aaa jge nop mov or cmpsl pop pop imul (bad) aad add mov ljmp sbb mov stos fwait push sub mov sahf mov fsubs or pop push ret mov adc sub repz pop imul or arpl and xlat add in inc cmp push int3 fldl2e jo nop fs or das aam movb loopne add negb loope loope int addr16 inc add xor pusha ss push dec cmpsl popf shrb and out shll stc sahf mov rcrl mov push aad cli add cmp pop fstpl out push fidivrl inc lea add xchg sub mov and mov je jg xor xchg fcompl mov movsl or es hlt je mov or cmp (bad) jmp sbb fwait add fdivs xchg cmp jns jnp and adc jecxz or adc scas lret cwtl push stos ja xchg push mov add stc scas aad shll loopne imul or xor imul (bad) xor dec test adc cmp fbld sahf push stc ret fidiv iret jno jge jnp add aaa jmp frstor stos inc xchg stc or rorb xor es sub jg ret jb movsb fcoms xor shr nop fwait sub (bad) rcr pop cli cld sbb fldl jns adc pop push imul test je sub icebp bound cwtl mov xor pop daa push sub pop adc inc bound dec adc cmp fs adc in lahf ss out nop mov fnstenv aam lods jb pop (bad) sub sub sub sarl (bad) mov lret cmpsl push ds xor fs add adc mov cmp push sbb (bad) in sbb adc or test xor or je sub adc or inc inc inc mov pop lea repnz dec ja cmp js lods orl sahf lret in es (bad) xor fcmovbe lds jae repnz int3 movsl repnz imul lret aam loope xchg notb mov das lahf push inc data16 dec dec push loop fisubl adc arpl sbb lret dec adc ja aaa inc not inc jo add push inc xchg cli je test mov mov jmp cmp loope loop mov das mov (bad) dec cwtl test jmp pop or add js dec dec pop and into lods repz lret mov mov loop push les jp sti cltd sar mov (bad) popa bound cmpsb or mov aaa cli inc mov sub in ret or dec mov sbb pop jge push int3 push mov mov (bad) or mov lods cld mov mov mov cs xor pop movl mov cmpsb (bad) lock xor je jle out imul and inc xchg add sub push mov test outsb sbb movswl sbb lods adc mov mov pop daa inc sbb fldt out add jmp mov out xchg hlt ds scas or or cmp mov or jne or insb (bad) jl cmp and mov inc cli aas in adc mov (bad) mov insb scas aam sub mov add push popf dec pop test mov add fldt pop daa xorb xorb fisub icebp mov fcoms mov sbb inc mov stc xlat loop jae popa push mov (bad) mov inc int dec outsl popa insl enter push fs sbb aam cli lds xor mov aam ljmp cli adc mov lret push les and lret stos jecxz cmc nop (bad) pusha (bad) jmp and cltd (bad) ja lods ss icebp add push dec inc jecxz daa loope or lds jns pop jne add movsl ret lods sbb clc ret popl movsl jae inc push je mov push mov cs xchg movsb fcomps jmp push cli dec fimul mov mov dec inc xchg test jae out lcall stos mov int push jno out pop push pop fldenv je push or xorb mov mov outsb cmp dec push jmp push imul sub dec js and mov mov mov xchg xorl pushf push mov (bad) mov jns sbb mov push out or mov jo pop iret xor push out incb add adc test repz push cmc rclb in push insl imul jo dec mov or shl push or je ss out and and push cltd adc fiaddl adc inc fadds std mov je or test mov pop dec std imul pop lods in mov push add repz mov bound push stc lahf jno sub and and pop push inc inc mov test clc aaa mov add cltd cld cmpsl cmp adc add inc hlt xchg pop dec mov inc sub or jp adc aam popf lods cltd sbbl jge in lcall add test icebp pop mov test mov jg xor push cmp lea pop lods dec int3 jle fildl add popf imul subl dec pop xor (bad) add mov xor add movsb xchg stos cltd inc dec mov cmpsl inc test (bad) push inc push mov cmp sti push lret cmpsl mov mov (bad) stos mov repz cmc pop (bad) es cmpsl test jb insb jecxz jmp jmp repnz std out fwait add in lea ds push xor (bad) or arpl push push xchg (bad) cmp mov test jne and insl mov dec sbb pop mov and jmp lods sbb jge fmull pop fs xchg ja lret fmull lcall xchg jmp dec cmp jns sub call xchg pop ds mov aas test cs lret mov notl in lods xchg adc and nop (bad) mull mov mov jge mov cld stc dec sbbb cmc jge lock mov loop out cmp jge pusha inc scas mov loopne mov call dec and shlb push xchg xchg into push mov lods push hlt xchg sub fsubrs fwait mov jns bound jmp arpl inc pop xor inc jmp adcb sbb lods clc addb test pusha sbb adc daa out push and pop cltd jne mov inc mov lcall jmp add (bad) push in adc (bad) and stos cld aaa out jnp imul lods pop xor xchg sahf push popf outsl jae nop and cmpsl cmp lods xchg ja call push (bad) jne ja pop push movsb les mov add clc jnp loope cmp enter aas les cwtl popf movsb out xchg add mov lock xchg lods sub pop js movsb pushf sahf ja lds repz test mov movsb jp mov sarl dec clc adc ds pop xchg ja lret mov jbe cltd outsl inc mov mov aam sar mov dec jmp in jae xchg jmp dec out fild movsb and ss pop stos imul cmc fdiv inc xor mov or inc push fldl mov dec mov sub out push fadds or adc lock mov pop sbb sbb adc call mov adc sbb ljmp cmp push xor pop sub pop pop stc repz subl dec loop mov mov add loop and into fistp fsubl lahf cmp pop ljmp push mov push repz or dec xchg dec jle out push push enter lcall mov dec inc pop or and sbbl jle mov ret xchg sbb sub in adc pushl sub test pop mov js pusha das lods out ja sbb dec cltd jmp imul cltd cs pop jae xchg int add pop daa or fsubrs pop ret lret (bad) fsubs mov sti adc xchg xchg sub jg adc dec push mov lods addr16 test outsl call mov popf aaa or mov faddl push xchg sbb sbb cmp hlt std push popa clc stos loopne roll xor inc inc jb mov jns cli movsl pop in xor lods cltd repz pop loope adc ficoml mov cli cmp dec cmp in inc ret pop fwait sbb jns gs rol outsl outsb cmpsb pop push int lret pop xchg mov push in aam lea jb xchg mov fsubl pusha (bad) cmp adc mov pop jns iret repz std pop inc dec mov (bad) pop fnstenv push mov repz bound mov shll jo cli ds cmc xor add ret jne inc int3 sub loope pushf (bad) xor mov jge fsubs (bad) pop rorb add mov out stos mov incl inc mov sbb testb fstl mov loope out inc dec sbb sbb test push orl fs add mov jns cmp mov aas and xor mov loopne (bad) cmc adc push sub mov hlt add and xor xchg cwtl inc or jne cs mov outsb sahf stos lret in repz loopne dec pop test je inc (bad) push dec (bad) call cmp hlt bound lds ljmp fstl mov je pop fadds loope mov and pop xor jl ds push cmp mov sub stc aad les pop jno mov adc dec push je xor and cmp mov lea adc xchg jae dec (bad) and outsl jmp fs stos lret leave jbe (bad) inc mov cs jl or push js adc pop bound test ret daa fisttpl in mov das jbe aam popa ja push sub test outsb in mov fucomp loopne mov (bad) repz lods jecxz sub popa mov (bad) repnz test mov pop mov jle adc rcr imul dec cmp mov icebp fs shll add sbb stos inc sbb cmpsl popa pop mov sti daa adc pop in movl or sahf in jae (bad) sbb sub ret adc pop or mov inc rcrb loop mov mov aaa sbb lea xor push aam pop cmp push mov dec xchg inc cmp and xor lret bound movsb xor and cmp lcall mov pop int3 iret add or pop push xchg cmp cmp cld and jno test in cwtd xchg add sub call adc push negl lcall xor mov xor xchg (bad) and loop or test mov insb xchg aaa imul cs mov sub push in das popl cmp inc incl pop add sahf test adcb sub mov stc adc movsl add sub mov add jne clc cmp add shr and movsb dec fisttp jmp or xchg xchg adc fisttpl pop jno shrl outsl dec ss inc adc test pop cmp pop into jle jle std (bad) out imul into cmc inc es lret xchg enter mov insb out dec jns and mov imul loopne sbb pop sbb call js (bad) mov inc mov ret xchg aam out shl jb nop ja ds int mov (bad) push pop adc add rolb cmc (bad) mov mov mov out cwtl movsb fistpl mov das xchg outsl and fisttpl les dec xor xchg add cli outsl rcr jae test mov push or dec lret xor (bad) sub pop mov adc add push xor add (bad) mov or mov and pushf cli addl out mov and repnz leave adc enter cmp out xor addr16 orl add xchg mov in dec ror sbb in int cmp dec push xchg cmp xor mov test fisub fisub cmp nop bndldx mov lock xor mov stos scas adc dec (bad) xor pmuludq mov (bad) dec sbb or hlt add adc in js mov inc nop lahf (bad) scas push scas fistp outsl nop and je xchg sub jmp cmc daa sbb jmp push xchg decb add sub insl ret aam sarb or xor xchg repnz pop out std pop push sub adc data16 iret ja inc or icebp cltd cmp repz cmp adc loope sub push pop ljmp movsl xor arpl and inc push pop lods inc push mov pushf mov rcl xchg sbb jp js into lods and int3 and mov mov lods fnstsw mov jmp negb and repz clc mov push std cli adc fbstp cmp mov xor jecxz dec xor orl imul pop cmp test sub cltd fs xchg sub jbe push pop int3 test dec and xor sbb push mov dec int3 jle mov imul scas dec popf add pop ds (bad) cli xchg push cli lahf inc inc pop inc in jmp mov inc faddl jl mov mov xor aaa mov roll cmp dec push pop lds iret jne mov inc sbb pop push shrl mov adc xchg int test fs clc (bad) rorb imul jne int adc scas xor mov xor cmp adc sub ret test fistpll adc aaa fcmovb pop mov in (bad) ja pop bound dec fisub mov ret mov dec or leave movsl scas cmp lods (bad) in scas inc sarl inc les push pop movsb cli dec pop je pop pop mov dec mov sbb js test (bad) rcll sub test push jbe pop repz inc mov shrl aad inc ds out and and dec rorl call ficompl (bad) cmpsl cltd mov pop xchg lods push xchg mov fldenv sbb hlt sub movsl push insb add mov (bad) xor movsl stc xchg sbb mov test mov ss shrb nop xchg insl mov push push jmp xchg jmp les mov fs stos leave push mov aaa dec xchg dec push mov bound inc mov addr16 push pop lods mov rcl std shl jecxz aaa cmc loop int3 adc repz dec add out (bad) jo mov push pop test negl sbb or cwtl mov sbb (bad) mov adc xor rcrl mov cltd push movsl sbb repnz stc sbb mov xchg adc mov sbb sahf xor in xor and lods nop loop inc cld imul pop imul mov pop and cwtl (bad) mov dec add aad lret rclb aad je mov jns das imul sub insl inc out sub ljmp lea sbb lcall mov cmc pusha shl (bad) loope mov mov test dec inc popa movsl imul in pop dec jno daa mull or mov mov cmpsb subb mov loope andb adc loope into dec jo fldcw adc ret scas adc cli sbb aad pop sub sti addr16 mov rclb and roll ret add test push out inc (bad) lea lret jl push int aaa adc push sbb cmp dec dec (bad) lods aad movsl pop cs fbld and jl jecxz add outsl pop or add pushf addr16 aad fistpl sub outsb cmp sub imul cmp mov mov lret mov cwtl mov loop fwait mov sbb jle je jmp pop cmp adc mov in dec gs call arpl cmpsl jmp loope cmp pop daa or adc mov sub pop sti rorl inc iret xchg mov fdivr pop cli jbe xchg and stos xchg pop mov mov xchg or fwait fwait push inc adc jg gs pushl or or push sbb stos xor sub pop aad cmp jp inc (bad) mov je ss push push and fadd pop cmpsl xor inc aam cmp out stos mov push ja add jno mov js jle loope sub mov sbb scas sub (bad) xchg enter xor icebp jnp repnz push fdivl inc jle dec sbb outsl cmp jb mov push mov push aaa (bad) sub lock negb jae ret cmp jo out popf xor inc nop scas fs pop nop fwait ss adc test int3 mov sahf fcompl inc mov mov or or lahf mov sbb and popf xchg popa (bad) lret mov mov arpl sub fiaddl sbb arpl mov scas add adc lcall test mov movsl pop dec loop mov push adc in cmp (bad) test lock fsubl int cltd cmpl (bad) xor idivl shlb stos add std inc push mov mov pusha test (bad) or dec jge,pt ljmp rclb ret pop mov push sub icebp jge mov xchg sbb mov into adc (bad) mov cmp inc in fwait stos and dec out mov cmp nop xchg ja stc in fs jge xchg sti cmp addr16 js push sbb mov mov popa adc mov pop hlt pop lds xchg push push sti xchg xchg or jecxz test push loopne cmp jl add push test and add jge cmpl xor jmp pushf inc sbbl pusha loope cwtl cltd out jno idivl cmp pushf int3 aaa adc out out push dec andl push push inc mov xor inc jb fs in leave and adc jle mov and xchg sahf clc lods les adc adc outsb pop add mov loop addl fcmovnu or addr16 leave inc popf mov mov data16 xorl lcall mov ss push inc push adc sbb adc xchg lahf (bad) out imul fimul movsl es jle dec jle test std xchg mov popf fs push mov es insb stc xor cmpsl imul sti pop xor pop pop or out aam jne ljmp cwtl cmp jle inc ret dec lods mov test scas sub enter dec pop (bad) dec test fsubrp inc shlb imul sahf pop dec lahf or pushf sbb lock (bad) out lret mov add xor rcr inc lock cs test mov popf or and mov aaa inc nop outsl enter (bad) arpl or sti mov lahf arpl or out add inc (bad) mov iret out dec sub mov sbb ficompl pop sarl adc sub adc mov divb scas inc imul mov push pop push stos or xchg cli mov leave mov lret repz outsb sahf test or jae popf mull add jmp xchg sahf push fstps in pusha ss jnp pop sar push jp test dec hlt add stos mov pusha int gs sbb mov sarb sti sbb std inc inc push xchg (bad) mov sub cmp mov jmp adc mov hlt inc insb pusha out xchg test or (bad) cld jns leave orl jp sub cmp jle mov loop mov push mov ret fsubs insb icebp movsb std scas sub (bad) mov pusha fildl xor stos cwtl inc pop cmpsb or flds jl pop adc sub lock das pop test add sbb mov mov (bad) arpl js cmp mov addb push cmpsl xchg dec loop movsl pop mov sahf popf pop (bad) inc push inc mov jmp movl sbb pop sub test je (bad) sub fimul in add mov mov inc test in jb or ja xor sub pop mov mov daa xchg and adc adc xchg out sarl pop add cmpsb out test sahf addr16 bound movlhps in int3 loop les stc outsb jnp cmp or add jmp mov mov xchg mov (bad) int3 lcall xor mov add push adc cld jne mov outsb or jp xor pop mov sub repnz repz sub test rorb sub leave inc sahf aam aas dec test test fstpl dec pusha sti cmp test (bad) test pop jb stos ret loopne loopne popf movsb xchg (bad) into gs or mov insl icebp xchg inc out mov dec cmc jne or dec mov int3 fnstenv call inc jne scas inc jle mov testb jae in sarb pop test xor outsl push loopne jmp xorl dec sub (bad) jb sarb ja ss adc or lock das clc ds out lock mov mov lret add imul push jmp fcomi xor or sahf pop icebp shll test adc popl mov test pop cmp jmp data16 imull push or adc cmc inc lea into mov stos mov fs lret mov inc jns xchg cmp or sub mov inc insl repz bound inc xchg sbb mov repz popf (bad) rclb cmpsl xchg lods inc std shl mov in ficoml pop adc (bad) sub clc loope mov mov aas (bad) pop jg add mov fisttp int loopne es push jle scas jno pop (bad) scas mov push pusha sbb mov jle sub movsl pushf jb in inc call mov push or outsl sahf sub mov cli test loop cmc sub (bad) in cmp fisubl push lods daa in jno dec inc inc icebp rolb inc mov ds cmp inc cli es push ret sub es cmp stos xchg stc xor mov das jne lcall movsl mov (bad) and cwtl shl pushf arpl call stos mov add xchg adc sbb cmp mov addr16 pop or rclb cli lods push and mov mulb add shrl and les loopne jae inc clc jmp jno pop cltd mov pop loopne push test mov in cmpb push in pop sbb movb cmp cmp xor jmp lcall or pop dec dec add stc roll js jmp (bad) lahf lcall jo mov arpl push imul push jl push jg pop test jg mov clc push xchg iret ja push and sarb push rcr int jae (bad) loopne popa and (bad) sbb mov stos (bad) popf int inc jae pop push imul sub xor jno test sahf sbb cmpsl cmp jne imul sub and gs into xchg cmp dec sub call loopne dec dec cwtl lret out popf fnstsw mov out fstp pop mov outsb xor sub data16 inc roll in std mov mov jle sub (bad) mov sub add or out add fisubr inc rcrl sahf pop test sarb (bad) pop jl test repnz push rcrb divl lock shrd repz stos (bad) mov mov ds inc jmp xchg dec es cmpsl daa in jns,pt std aas out aas retw xchg adc (bad) in lahf or cs push push das jmp adc mov mov jb mov jbe jl cmc mov mov aam not rcr adc (bad) adc frstor mov push push push xor dec and cmpsb (bad) inc push mov xadd aam imul mov mov leave sti cmp lret add leave loopne inc cld test add adc mov (bad) jae addr16 mov in cld sbb ss fldcw idiv movsb (bad) and adc push mov rcll (bad) sub (bad) cmc mov lock xchg lret stos jno fwait xchg (bad) mov xchg bound cmc and jmp xor aaa mov cmp insb fcomps arpl pop rol inc mov es (bad) and xchg xlat sbb lods out mov nop dec or test add xchg ret out lret lahf mov cmpsb out aam (bad) dec sbb insl in ret popa pop fcoml bound xchg inc hlt xorl ss xchg inc mov mov fsubrp adc xchg loop cs xchg jle push cld mov mov loop mov inc xor pop mov insl test lea (bad) inc xor out repz or xor mov mov adc xor test leave cmp out call sahf hlt leave xor stos dec fcompl js xor inc or lods cwtl fwait subb push ljmp dec (bad) push add lods or xor dec add shrb movsl jmp push fdivs pop dec pop cltd sub push ror dec jmp xlat ja xchg popa mov ret imul sub aas cmp mov shll fldln2 ds xchg push gs mov xchg mov sub loop sub adc jns mov insb lods jp inc enter mov dec pop fnclex sbb cld popa insb aad outsl sbb lods lahf dec (bad) mov (bad) xor test (bad) or dec and cmpsl bound jecxz cltd dec pop ret add sub mov pop bound push leave pop gs int push das inc lahf mov sbb lods cmp sub das cld (bad) repz fwait push mov pop or pop lods mov cmp aaa xchg mov cmc sub rcr stos repz add or fs cmp fdivr hlt je or imull pop mov (bad) dec sbb (bad) (bad) xor fxch inc push out insb add arpl jmp push pop loopne flds test push adc test ficoml and addr16 (bad) (bad) mov xor in dec cmp pushf jmp jp jge jns mov ja mov jmp repz jnp jne (bad) in jno xor shlb cmp pop pop cmp pop test inc xchg test push cmp frstor and jge push push in cld push sbb push sub and (bad) addr16 dec push sar xlat adc lret mov push push pop sub lret cwtl imul cmp dec sbb ret push aaa or fldt stos and pop (bad) lock mov nop roll push push sti sub lock jge or fwait sbb pop iret js int aas (bad) xchg aad mov mov push stc lea xchg push cmpsb daa shrl and cwtl lods or aas test dec notb xchg mov mov outsb and xchg or popl (bad) cmp test mov xchg clc notb pushl xchg adc test aad xchg je sub pop ss sub sub sub outsb in cmp or outsl mov loope daa cmpsl cmp fdivr jg in sub cmp bound pop mov push xor mov lret fldl jbe shrl fist bsf test out aad aad inc movsl adc ja (bad) ljmp jno dec in out add push scas iret repnz sti jmp mov mov rorb rclb xor cmp push pop lods nop or aad lcall adc mov push fisttp mov gs jnp stc push mov repnz jnp mov dec mull jae mov and jge mov push jl mov add cmp jae,pn (bad) or xchg rorl dec cmp aam mov leave cltd jl jne sbb cltd inc lea jbe stos test daa pop rorl cmp int lea out (bad) jbe jns (bad) xor in in pop and mov jae out inc stc stos cmpsl loopne pop or popf add daa out push rcrb or xor sbb out jle insl mov (bad) popa mov lcall mov mov fisubrl and mov mov pop xor pop mov or stos and int3 aad adc pop rcr jae (bad) imul bound cltd into fistpl sahf cmp int3 dec cmp mov sbb test aam imul aas add rorl pop pop jmp (bad) cmc mov add pusha pushf lods data16 jne cmpsl por add loop pop iret cmp clc data16 xchg mov push jg pop dec mov bound lret jnp,pt icebp (bad) xchg je mov outsb int inc addr16 mov out jae inc add xchg mov call xor push movsl mov (bad) repnz call std xlat mov orb mov xor orl mov mov jle call jo cmp sub test lea inc mov testb xchg add cmc lahf repz lret pop sub jle (bad) jne pop mov dec mov dec push loopne adc jne inc insl lret xorb add sub shrb jbe pop aas aad or mov sbb daa lret aam and fstpl push mov in ljmp frstor xor dec push sub jb ss cmp mov imul fimul jp int3 aaa jmp xor lcall adc push aas mov ss out xchg mov sub xor push in fdivrl jnp pusha or movb pop pushf dec movsb loope lcall xor add out jnp jns xchg cs ffreep lahf int3 or sbb xchg stos jno xchg mov aad roll imul lahf icebp inc lcall push xchg (bad) dec xor cwtl mov sti lcall jae add cmp imul cli inc cmpsb aam or leave test cmpsl mov repnz jecxz jnp push fsubr pushf out mov rorb inc lock dec dec (bad) push mov loop leave int3 jecxz (bad) popa aas push mov inc js jg test mov jge leave push add cmp mov lods push in aad rolb stc out int push js jnp dec push dec cmp jnp pusha push mov mov jns jmp lods stos mov jo cmp xchg adc dec imul mov sub mov addr16 lods imul fimull iret gs cmc in pop cmp fwait mov stos stos mov lods xchg jge or pusha icebp push and adc xchg xor andb mov xor lret out insl imul mov and and xchg sub push cs mov inc rolb mov clc mov jnp add mov rcrl jns cwtl incb std or adc add add (bad) ss daa cmp jbe,pn pop mov loope repnz adc jne and pop xchg and push mov jbe stos shl jo adc lea xor insb and out push movsb xor rorb (bad) movsb mov jae or in cmp xlat or (bad) push mov jae cltd pop je lret xchg jne out push dec jne outsl cmp pushf xor roll jle daa nop data16 aam xor aam cmpsb mov scas les cmpsl inc pop pusha push repnz inc iret dec sub aad aaa cmpsl out xlat fcomi das scas mov clc adc lods sti test stos bound push ss addl lods outsb cmp pop xor pop je (bad) push ljmp push or pop (bad) icebp decl lahf pop (bad) add cvtps2pi test repz pop add cs mov insb cmp lcall pop int3 inc mov adc dec and or movsl xor mov inc jno ds (bad) push cmp cmpsb mov sub fwait or fstl fs mov inc jno mov jns cmp push lret hlt insb (bad) dec (bad) pop in fs jo mov push test cmpsl lods xchg mov out sbb inc xlat fldenv and adc loope dec add xor pop lock xor adcb sarb aad ljmp outsl jae mov loopne out jae fmul adc mov loopne in sti imul fsts nop loopne inc xchg test add mov inc cmpl push dec xchg inc xor or mov pushl mov ret mov mov out mov mov cmp pop sub aaa rclb mov out cmp sub add fdivrs stos rolb cltd inc mov xchg shl adc dec or imul scas mov scas mov (bad) bound adcl cli mov inc ret and fnstcw fistpll imul aaa lcall les xchg sbb mov pop stc jecxz adc sbb jg or cli push mov cwtl xlat (bad) cmpsb sahf sub mov (bad) icebp out es mov or xor push fiadd xlat in cmp push xor stc hlt jno pop pop pop or jg dec inc mov fldl ficoml fistl pop in stc cmpsb dec xchg lods jno in ja inc and cmp push mov (bad) mov adc cmpsb mov lds lods sarl mov lock jnp mov inc loopne arpl xchg add addr16 ss pop and jno pop out scas popf xor pop mov js fwait xor xor inc jle xchg lods ljmp xchg or sar mov sbb adc jge sti addr16 into jne inc jo mov cs popa aam clc sub jecxz sbb (bad) mov pop jp mov insl cs inc test (bad) pusha popf xchg mov adc and imul lods mov int3 aas sub addl cld cmp push arpl jbe dec pop cmpsb fisubl adc into sub out jo pop push mov pop int dec stc mov inc mov lahf pop aam xchg cmc mov test xchg inc sub mov jg,pn pop xchg in xor cmp dec imul add adc cltd sbb fcoml (bad) push insl inc js outsl iret stc pusha add test test pop rcr add in lret repz add enter push inc adc int3 imul xchg jo pop (bad) repz rorl jmp mov fs mov or nop adc adc push ss and mov cmpsb sub es mov mov stos je pop fsts xchg outsl jg adc in add add pop xor add push rcll push cli dec pop or fchs mov out loopne arpl mov (bad) repnz inc icebp or dec mov or dec loope add cmpsb hlt sub mov jbe cmp lea cli push mov mov sti cltd jne iret lock pushl xchg mov pop push add sub cmp addl mov add pop dec jne rcrl xchg sti popa dec jmp push stos jne nop push fcoml pop sbb dec rcrb mov outsb js popf jl insl mov xlat jge call adc push xor xchg push inc cmp xchg mov scas xchg cmp orb fldt ja popa mov ljmp jno pop xor adc xchg pusha pushf aaa adc outsl push and aaa xor lahf stos les faddl aas popf sbb sbb push dec lods in jp dec in dec cmpsb cmp shrb pusha cmpsl push adc or (bad) clc mov xchg jo push cmp and inc sarb push xor fs and fcomps jae stc cmp jmp jne cld jp icebp dec jle jns (bad) lret enter or mov jne rorb mov test pop or fsubrp sub xor jecxz xor sbb and sbb xchg adc cmp test mov xor pushf bound push push jmp lds adc mul jb iret fsubrl lods sar mov add push sbb mov jae jns adc movsb arpl sub add arpl or and jp sub dec xorl mov mov xchg cmp idivl movsl mov inc lret in xchg add xor icebp cmp xchg cltd mov clc cmp mov jnp mov scas jb xchg outsl xor cmp aaa sub pop lahf pop jnp into xchg jl cmp movsb sub xchg and popa push pop fsubl test adc and arpl sub xchg lcall jns and add in je mov xor push enter jae mov jo jl andb xchg (bad) adc fcomi aam xchg cmp push leave add shr jge jns xchg jp adc shrl (bad) and mov adc sbb ja cmp sti xchg fisubrl cmpsb stos jno push lods xchg fs fs in rcll imul lret mov inc into inc ljmp std addr16 pop mov (bad) mov cmpsb jo,pt stc push or lea lds adc aad stos jne scas pop push (bad) imul ret sti mov push adc adc (bad) mov cli xchg (bad) pop pop hlt cli jl enter std mov lock dec arpl add or inc mov dec hlt dec add xchg xchg xor hlt or push outsb stc lock aas fsubs (bad) dec icebp or mov pop lods shl inc (bad) mov or or cli jno jmp mov inc push mov cmp (bad) negb cmc jmp adc cld cmp std xchg ds mov out dec out add iret (bad) add js cmp pop adc push mov sar (bad) adc mov inc lock mov shrb sti cli icebp sbb aam aad or enter adc cmpsl mov loopne lock mov cmp faddl (bad) push xor mov test pop lret mov xlat xchg pop into cmp inc add cmp jo jae aas jge mov ljmp jo lahf (bad) mov (bad) fsts sbb sti cmp push adc push mulb push xchg jg xor dec mov lds cmp cmpsb pop dec das push popa adc pop aaa or lds stos sbb sub xchg mov std add insb mov out adc pop xchg je iret adc int (bad) jmp je jnp scas xchg lods add adcl add and out inc pmaddwd leave sub xor push jne cmp aam jbe mov cmp sub dec bound xor ja and pop ret arpl cmpsl adc mov sub adc xchg fs mov stos xchg int3 cmc push fnsave or xchg and push mov enter sbb fnstenv jmp adc movsl mov mov and mov xchg mov xor in mov je cwtl dec dec es mov xchg push cwtl sbb mov inc roll mov dec incb outsb pop rcr int sub xor pop (bad) pop jno xchg jo repz jl fs (bad) imull in xor out adcl adc push pop jae add das insl sub xor call fcmovnu and xchg gs nop cld xchg lods xor aas cmp xlat cwtl insb jne inc jg out in pusha (bad) cmp mov mov cli jbe outsb fisttpl lret ret jg popf dec andb iret daa sahf popl lahf jp (bad) mov sub xchg movsl dec out testl clc inc push lret repz in inc mov xchg loopne xor and pop xchg xlat jle add jge (bad) mov xor push sahf pushf les movsb mov jb adc xor ljmp mov stos dec add add pusha movsb jb pop dec cmp pop inc pop mov fcompl push xor jl es mov cli sub nop or rorl fstpt dec mov inc repz test mov fld1 push data16 (bad) rclb and inc lock mov inc adc pop cwtl je das dec das adc mov dec stos cmp test and pop stos xchg mov cld fsts or pop cltd mov out into dec stos pop loop idivl (bad) cli adc sub inc sub cmc subl out inc add or pop aam into inc jmp bound ret aam add push jmp inc inc loope loope sub cmc mov pop hlt cwtl cmp clc inc jle xchg push xor and sbb pushf mov faddp stos daa inc push into add stos pop inc pop dec xor out fsubrs scas pop scas fs pop mov hlt sub add pop sub cmp fwait jl out stc sbb pushl inc jno hlt shl sub cmp cmp jne scas xchg mov jb sbb data16 inc sarl cmp in xlat pop out pop dec and mov in stos sub cmc add int xor ja jno stc movsb daa and roll mov mov sbb xchg into lock insb jecxz addr16 cmp push jmp pushf jno fsubrl das xor fwait mov movsb andl adc and dec add jbe cmc out ja adc jl mov mov enter pop pop sets jno mov mov push add cltd mov or inc sub mov cmc xor popa push inc xor scas sbb lcall inc aaa loopne dec sbb (bad) cmp test xchg push inc stc push mov mov loop jae dec sub xor jp pop xor mov cmpsl in jns das and ja push test inc mov and cs sarl jb fistl lret cmpsl push or jp data16 mov xchg push ja mov mov xchg inc cmp inc imul adc repnz add and pop add mov add imul push xchg xor mov call adc inc fadd cmp pop inc pop add dec loop add mov ljmp and sub inc std test push ss mov shl xorl xor add xchg jb or add in outsl jns jae repnz xchg lret cmpsb push pusha movsl jl jl cmp fwait scas out popf es out dec out in test mov arpl (bad) (bad) xor movsl lock movsl add mov lods xor push adc jle rorb das jecxz cmp xor cmc aam cmpsl inc nop test mov sub jo into pop in jnp stos mov and mov into sub mov xchg pop mov push push mov fistp dec out adc gs daa les inc inc adc pop mov jge mov inc xor cmp add cmpsl icebp mov pop xor gs mov jg and jl stc jl adc or push sbbl jmp fbld adc outsb shll scas mov outsb scas out pop cmp ljmp xchg push test mov inc jns or push in cmp and xor ds loope imul push or or fisubrl test xchg pop int3 je test adc pop lahf iret aad popa jge mov mov (bad) or (bad) lcall lea pop or push cmp orl popf cmpsb loope mov lods call movsb das add icebp inc push nop sbb lret mov xor cmp cmp addr16 push sbbl xor sub mov outsl push add cs cmpsb pop sub jmp xor xchg push jbe mov ljmp imul ret lret jb sub call repnz push fldcw aaa xor sub mov xchg addr16 (bad) pop test and loope mov mov lahf ds dec shrb and leave repz (bad) jne mov movsl dec enter push push push cmpsb in addr16 cmpsb addr16 inc push stos dec add and inc (bad) sub xor iret pop frstor sti xor and ds aas in pop sub imul push or clc loope xor pop repz (bad) sbb or push dec pop ds es mov inc ret sbb test test jecxz jecxz jmp lock adc aaa xchg inc cmp daa fstpl sbb call xchg xchg or pcmpgtb stos aam lods lcall fsubrs in or and shl mov xchg and cld adc pop cli cmc dec and cmp in xor jno pop in movsb xchg xchg loope cmc jnp mov mov hlt xor ja adc sbb ret sub hlt mov mov lcall mov pop scas loop or fwait dec mov pusha insl pop inc addr16 push or xor pop (bad) cmc mov adc cli dec rcl xor jae rcr dec jecxz xchg fisubl adc sbbl mov test jecxz mov or int inc mov and mov adc bound add leavew inc in orb sub and ljmp push jb sahf jne jle aad mov sub in movsb sbb mov int ret and popf pop stos fs cmpsl loop push jb mov and fnstsw fadds lods je or or push sbb mov loopne lods add pop std ret lea xchg cmpsl add jbe vaddpd ja xchg clc (bad) loop push (bad) xor out aam lea pop ds loop inc or lds dec or cmp insl or push je stos jo pusha cmp aad punpcklbw jno lock mov mov jp xchg outsl mov sbb mov fstpl mov pop repz jp jbe sub xor lret fildl or or in cltd bound lock lods loope (bad) mull mov xor popa leave fldenv ja stc pusha mov mov fcmovne repz or add popf mov or lods test jge cmc inc cmc popf pop lods les loop (bad) clc mov inc add daa jg out rep (bad) pop push xchg and pop add shlb dec cmpsb lret dec xor pop or in xchg lods mov iret lods xchg popa jmp arpl mov mov jbe push inc jns das ljmp and lret or aaa xchg or pop call mov mov xchg shrl scas jl xor rol icebp sahf add mov sarb jo nop push mov js or scas lods mov pop nop xor xor orb xor pop push mov or gs imul out push into and je cmp cmp aam and test xor mov dec cmc divb nop stos fistpl dec mov imulb icebp testb in mov popl cli sbb and mov insl xchg call (bad) sub aam xchg mov mov ss push pop ds sahf mov pop movsl js mov push fimul push (bad) ficomp xchg mov in inc push cmp xchg mov dec loope add add mov adc cs xchg (bad) int outsl adc dec int jnp fbld mov cmp push mov xlat (bad) les jg pop leave add jecxz (bad) sti add mov jp sbb sbb gs ljmp mov mov std mov xor or sbb and dec sti sub (bad) (bad) sti cs adc bound sbb pop pop (bad) imul (bad) sub dec outsb ljmp sub add add pop out mov outsb (bad) cmp add xor add mov call jnp stos lods sub mov or lret test sub pop data16 inc and in ret gs push and pop das mov mov stos leave dec out mov stos pop push jae jns jl xchg sti jne or fsubl push sarb pop aam lods xchg mov js (bad) nop (bad) pushf xor bound mov scas sub imul or cld dec pop or pop movsl inc jle push inc pop fwait sti stos dec je scas test cmp mov inc inc cmp popa lods and add ret xor pop mov dec dec mov inc repnz sub out jmp adc (bad) jae mov inc xchg lcall rorb pushf push insl roll jo and mov mov xchg xor aad add xchg popa jnp adc fdivrs cs jae pop push jnp pop aam jnp inc dec jp xchg cmp sub test pop xor (bad) rcl rcl xchg stos adcl sub pop add into stos ret mov lods dec dec pop cmpsl int3 rcr push call sbb push movsb push push sbb and pop or jp jne dec movsl shrl mov sub aas in cmpsl (bad) (bad) sbbl aam adc call jne ds jmp (bad) xchg mov mov sbb mov mov loopne inc sti sahf es leave add arpl jle ljmp addr16 jmp pusha push sbb cmp pushf push jmp ret stos pop push add sahf fcoms dec xchg test mov adc inc cwtl xor cmp push test addl sub mov xor and add loopne mov scas adc dec add push add pop push sub mov add lods (bad) adc push or cltd in outsl fucom mov pusha leave inc dec push cmp je lahf fsubs dec jle cmpsb test iret repnz call call cs inc test ret jno mov xor xor (bad) fcmovnu frstor sub int or mov mov stos and xlat mov fiaddl sbbl rcrb mov jecxz nop out xor pop mov xor cmp jbe jmp mov scas and insb xchg sbbb jg bound (bad) cli loopew jmp pop push sbb icebp sbb data16 iret xchg movups (bad) dec std les lret aad push mov add xchg gs adc fldl mov pop and mov jp mov push orb cs js stos cmc aad inc add or inc cmc cmpsb cmp pusha push scas shlb add pop test mov arpl ret aaa fs jecxz mov (bad) popa dec jecxz cmovo pusha pop jmp mov inc xchg iret scas stos inc cmc dec call pusha sbbb popa xchg lret mov (bad) stos lcall movsb out push sub idivb les xchg mov jmp adc ss lahf pushf xchg cmpb push and stc inc xor lahf push daa adc sub aas mov cwtl lret add mov repnz add decb jb dec out mov mov sahf in into mov dec in push loop mov (bad) dec cmpsl in xor adc inc loop mov and test inc inc fsubrs lock mov fild xchg push jbe addl rcrb jecxz xor aaa iret lods je fs call mov loopne xchg sub stos lcall mov sub push lods out xor and leave sub arpl push sbb lret popf pop aad rcrb adc lret xchg loopne ret inc push fldt xor outsb mov iret test push xchg push imul sbb ja inc push xchg xor cmp ret add dec adc push inc ret push mov cmp jae cli mov inc ja addr16 icebp scas ds stos in test lods bound (bad) jl scas adc imul icebp xor inc and xchg fdivs add shl dec jl mov popa int jmp push sti pop sub in mov lcall dec loop lahf ja jno fs je cld mov sahf sub (bad) dec test or xchg in orl xchg mov pop inc jmp inc iret inc cmp lret xor xlat mov pop outsl mov test and xchg test or xor sub (bad) xchg xor jle push adc enter add sub jae dec arpl les das pop cmpsb xlat mov cmp fidiv push adc aas jmp in gs xor dec repz stos rorl push jnp data16 dec cmp inc inc adc fwait mov push mov imul xor jae scas rcrb out mov in (bad) lods mov xlat out pop insb fmul pop mov pop (bad) or mov inc and daa out mov frstor mov xor mov dec mov mov mov dec aaa xor sbb out pop (bad) add and bound lds mov mov js jnp and pop pusha cmpsb addl into and insb imul xchg lods and xchg (bad) xchg imul (bad) xchg push js lods push daa sbb inc cli adc adc decb int adc mov frstors lock pop and loopne jmp sbb cld mov mov (bad) inc lcall in stc in xor cwtl inc in xchg adc sahf in (bad) add nop cmc push and push inc je repz xchg pop fild enter cmp adc adc out cmp lret fsubr int loopne sub fldl2t fs pop mov pop lcall jp fs pop mov insl into xchg lds jp xchg sahf xlat std pop jne inc add fs aad loop imul out addr16 sbb adc push jecxz test (bad) push inc xor stc xor mov push push pop ret jae imul mov out add push xchg (bad) jg mov ljmp cli es sarb sti jl mov sbb pop in jbe and scas cwtl stos sbb pop fcmovne fimul scas sub je int3 in std ror (bad) icebp jnp scas jecxz out xchg mul dec mov sub dec mov lea inc add fisttp imul mov sub sbb push sbb mov and pushf xor (bad) imulb movsl call outsb leave loope pop mov lods inc and je ljmp sbb mov xorl push outsb sahf gs adc cmpsb subb xchg pusha mov aad push mov movsb sub out dec ja sbb dec imul add vhsubps movsb adc pop sti fstp sub in orl icebp jb fbstp sti call inc aaa ljmp or push dec je mov mov inc inc pshufw dec iret (bad) and mov stos xor fnstcw hlt fist dec (bad) mov orl repnz and xchg jle mov lods sbb jnp stos jb icebp jb jb add sbb jns or ss addr16 (bad) es sub rep xor dec xchg popf mov out cs rclb pop sbb cmp stos gs dec xor nop sub sub adc mov aam dec test add mov negl mov hlt stc insl pop dec sub jno push jl ss sbb frstor mov iret push das out push sahf popa lcall push push notb aam mov rorb inc (bad) mov es xchg mov inc or nop mov pop out cld std cmp lea call repz mov movb sbb or mov push (bad) mov (bad) in mov xor adc gs (bad) xor adcl mov stos ss lret dec ret lcall pop lea test lea jae cld jmp push xor inc fisttpll add jmp xor arpl push fmul cld mov sub and jp mov sahf (bad) (bad) xor add sbb xchg js mov add inc test mov add jb ljmp or mov (bad) fcomps rorb mov sbb mov outsb pop adc push jle enter in mov jmp xor out scas call push pop add test bound out cs mov mov into jae jg inc and sub mov inc movsb repnz ret jle cmp push push pop out adc addr16 stc popl cmp push xchg pusha pop push jp sahf imul ret or (bad) clc sub sub sahf sbb push js xchg popf fildl sbb sub imul popa jg push jl sbbl pusha mov notb adc push pop sbbb dec xchg leave shr mov imul fcmovnbe call popf and fwait inc out sub cmc lcall ljmp pop cmp sbb xchg and cmp rcll push test mov test inc and cmp fldt or les cmp cmp cmp push jmp xchg mulb fwait xor mov push fsts mov hlt popa inc add scas pop icebp dec jnp pop dec popa or jnp stos sub shll cmp jmp mov push (bad) mov scas test xchg xlat mov mov xor call sub xor sbb sbb das mov in andb (bad) fsubrs cmc aam pop adc and (bad) fimul out and imul jnp jno cld cmp or stos out xor (bad) (bad) lock push stos pop fadds xchg sar pop bound arpl mov adc fldt push imul int mov shrl test xor dec sub lea das inc pop push sub aam jb lahf mov push inc gs clc es cmp fidivl jge sbb fiadd in (bad) lock (bad) imul cmp leave adc jno sarl sbb mov fmul sub negl pop xchg xchg mov dec daa pop xchg out mov imul ret mov in lea out test push add push cmp into ret callw out in inc jmp push cmp adc fisubr mov sub mov fistl dec inc and (bad) (bad) xchg push mov inc add (bad) insb fnstenv and pop call (bad) out mov ds push xor int3 push cmp push lock cmc mov scas mov xchg add xchg jecxz cli add jno sbb jbe shl push adc mov bound xor sbb xlat stos xor cwtl adc xchg fistl test xchg lcall test into or es ja arpl jns mov cli xor adc add pusha jg xbegin cmp pop push inc sti fwait xchg jg sbb jg push xor movsb cmc and ss adc mov inc jne sbb mov mov cs mov mov mov inc (bad) xor mov sub sub jnp imul or dec insl jae mov lds jle test push dec pop inc lret repnz mov dec kmovd cmp mov sub cmp test pusha outsb outsb sbb fsubp cltd add mov xchg sub xchg push xchg push xchg xchg sbb xchg mov roll push inc lock adc mov ljmp pop mov jg mov pop sbb mov aas xor cmp ret xchg shlb mov mov and mov mov mov sub and notb pop mov test addl aam mov popa repz outsb push ret cmp (bad) mov and hlt mov pop adc fdivrp xchg sbb cmp push mov (bad) add dec mov aaa lret stos pop scas lds add jnp out fnstcw data16 jbe mov adc pop fs loopne and jb sbb scas in in fisttpl cmc sbbl push mov aam sbb negl push dec icebp or jae xor adc xor cmp and lods out sbb mov jmp addr16 divl cltd and in adc orl jb xor lret sbb mov cwtl adc add pop xor loope pop (bad) jns fwait aam fdiv call mov (bad) adc mov (bad) imul popf (bad) (bad) push xchg test dec enter les sbb out mov testb xor out add popa push icebp loop aad clc inc int3 cwtl ret pop fisubrl (bad) ss xor gs and test cmpl aad lds loop inc jmp outsb xor sub hlt mov fcmovnu idivb (bad) mov cmp push jmp or popf mov adc add dec push add (bad) and push mov into dec scas fmuls push cmp daa popf shrb orb adc and (bad) pop (bad) mov inc add lret scas pushf jp mov adc sbb fwait pop int aam dec popf mov pop adc in sbb cmp out test cmp test loope inc clc movsl lcall push insb xchg aad lahf mov mov fisttpl imul xor push daa mov movsb movsb das sbb aaa sbb mov and in cmpl mov ret loope sahf hlt add push jecxz inc pop or sarb pusha mov add test in (bad) clc pop jle daa sarb mov fild out mov into push sub sbb inc out xor pop dec xchg cs loop subb cmp lea push fldl pop ret xor ja fs js iret pop adc pop cmp (bad) lahf fcomps jnp jnp test pop jecxz mov pop jp gs rclb enter lret aam cmp or add or mov int int3 fadds adc pop arpl pop mov mov sub lea mov pop sti (bad) test sub repz sub mov fnstenv js xor insl sbb cmp arpl outsl test (bad) xlat (bad) jmp push fwait out enter push adc mov push mov add add shl xchg dec insl (bad) out pusha jns push cmpsl enter imul push lcall sbb mov sub pusha xchg test in or mov popf xchg jmp mov aaa rcrb add cld dec (bad) adc mov ss imulb fldl jmp jbe cmp cs sub pop popa es hlt loope les stc mov cmc and fwait adc xor aas sahf mov push adc adc rcrl loop pop inc xor (bad) in sub or mov pop jno fiadd pop fidivr push push jnp (bad) movsl sub scas test pop clc stos mov (bad) mov push ja jp pusha stos mov bound xorl addr16 push int3 ljmp push mov inc xor mov aas mov sti mov stos sbb push inc pop lods cmpsb test or cmp mov inc mov aas jmp jae pop mov loop mov ret mov xor jbe clc cmp daa shlb jp std repnz jo mov dec out and mov push mov mov jns,pn adc dec xchg dec fwait or jne push dec fwait add lock clc cmpsl and adc jg test or icebp mov sbb pusha xchg sub fnsave mulb test ffreep mov adc fidivrl ljmp scas sub jb sbb mov ljmp shrl cmpb and out pop cmc mov xor movsb out loop (bad) das loop cmp mov ficomp cmc dec pop sbb mov dec jl xor scas mov add sbb popa pop cwtl aam xchg mov sahf xor jge test push icebp mov js sbb xchg mov or gs mov push dec xor push push imul lods in sub nop inc xor lcall xchg repnz xor and lret cmp loopne test adc push dec sbb and (bad) mov insb cmp lods leave je inc cli cld sub pop (bad) (bad) ja (bad) push cmp enter pop adc mov ret test mov incl jecxz cli fwait leave or loopne or mov pop ds xchg pop sti mov mov sbbl stc push int es fwait cmp lods icebp inc fwait pop cmpsb insb (bad) loopne mov pop pop pop adc imul jnp ror aaa mov mov scas xchg xor mov (bad) sti xchg push adc xlat adc push iret cmp jle xchg iret sbb sub inc pop and mov push pop ss add push push cmp outsb sahf add cmp in inc mov jo lret push icebp pop rclb mov sbb aas inc push xor lret shlb mov das adc int3 in jp fs adc neg pushf fstl dec fmul dec push mov pop dec push test add xor push dec push ret into rolb loopne fisubl xorl push bound cmp pop dec inc insl mov rcl (bad) push imul in jmp mov repz push inc orl outsb mov push pop lret loopew clc mov sbb std and lret push mov ret dec mov jo mov xchg sbb test inc mov ss jl push xor mov dec sub pop sbb inc out mov mov mov jne pop les pop out push out lcall xor call and adc imul jnp inc (bad) sub clc lcall rcl data16 mov aas setne mov fnstsw mov dec rorb and jg ret cwtl loop (bad) sbb roll sbb cli push sub in test push insl rcr fcom aaa xchg pop cmpsb insb cmpsb xor adc jbe cmc stos and out and mov ljmp fisubr cmp fdiv insl mov xchg jbe xchg xchg xchg adc and cli jl pop push repnz adc orb fs adc iret dec insb lahf cmc push jmp jmp sub mov mov mov sbb push cmpsb cmpsl repz mov xor adc jae pop mov icebp and inc fdivs sti xchg cli fstl (bad) adc add push incb pop mov and push mov adc adc and add leave inc xchg pop add mov pop int cmp mov addl mov int ret jmp icebp cli jmp inc mov cwtl popf inc aaa (bad) in cs jp add addl cmpsl aaa shlb push in jg incb insb je jbe das mov mov arpl push scas call (bad) jb sub push ss insl sub push or (bad) js fsubrs mov aaa and aad call sub notb test dec xor adc mov xlat aam ja mov dec daa in mov aad sub (bad) mov or (bad) dec std and mov mov push imull jmp je rcl loop jl xchg xor mov xlat mov call loop hlt movsl lds cmpsl mov out push xor (bad) adc xor xchg and mov add fmull lods adc sbb popl sub mov mov jo mov movsl es push out or out incb lcall jbe fisttp cmp scas cwtl cmc je jno jge ret notl es aas pop xlat or lahf sarl imul xor nop into das das or loope lods dec (bad) pop cltd js mov mov pop xorl negb push lret pop ret daa sar (bad) mov or (bad) in test jg and (bad) pushf stc mov rcrl xchg fisubr or push dec xchg fs sub mov inc and inc push ss sbbl shl pop imul insb mov data16 mov jnp iret fnop push sbb rep loop fnstsw or cwtl adc lock mov (bad) mov js push pop jbe imull jmp pop mov mov add das in xchg and jae push arpl push xchg inc test jo jo cmpl (bad) fwait sub add cs or or hlt aas rcrl insb jmp pop xor push pop jo xchg push pop xor dec sub or push cmc imul push lods mov mov mov (bad) mov pop inc arpl and push pop loope or mul mov stos daa add rcl repnz jecxz sarl mov inc fistl (bad) int inc sub add mov jns int3 leave and andl xchg dec and sahf mov xchg add xor nop cmp sahf lret push xchg stos pop repnz xchg push aam icebp out add push mov outsb xchg sbbb xchg sti xor adc pop arpl pusha stc mov xchg sarl fs jge ljmp inc or addr16 shll push bound insb push decb fwait push pop (bad) fidiv test lods call cmp mov fnstsw sbb fild repnz pushf int rclb push cs sbb jo pop mov sti stos push stos jg sub insl ja imul cmp dec xchg das scas mov inc cmp sbb jg out sbb aaa push (bad) orb push dec sbb jp dec push bound jb jmp sarl cmpsl push ja cmp repnz cmp dec sbb cmp jns loopne cld stc (bad) xor mov in lea jmp push and imul xlat (bad) fsubrs xchg aaa lock test (bad) pusha sub popf or inc (bad) push aad mov dec mov mov mov xchg pop leave sbb mov popa imul push cmpsl lods andl lret ffree insb test pop aas or dec bound (bad) pusha call ficoml jmp add or ror dec mov ret jg lret push or sub inc push inc out mov mov cmpsb push inc mov fcmovnbe adc xor and test movsl jnp add subl or add xchg stc jne adc push sbb jae pop mov popa sbb xor or div test adc cwtl je add shrl cld lods aad cmc or (bad) pop push inc std out lds add aad jecxz and insb pop sbb inc cmp push sbbb sbb push add iret enter sti cmp xlat data16 stos xchg mov test ret idiv and or inc aaa mov ror dec jp mov test sub jns les mov mov test stos sub push adc test xorl jle outsb or rcrw fistpll mov adcb mov sbb push adc sbb or pop dec or out mov pop mov lcall outsl in xorl idivl test ss mov add cmc adc fldcw icebp clc sub repnz mov out add and or repnz test mov inc mov pop and mov add cmp ds in sahf cmp bound outsl xchg daa imul mov aaa xor test xchg mov pop sbb push mov std repz movsb add xor and sbb or std pop push movsl pop push (bad) adc jle xor cmp xchg rclb lret shrl pop xchg imul (bad) mov je mov pop insb out mov jl,pt fimull fildll xor shrb jmp imul mov push pop aas dec cmp test xor sti das and xor nop mov (bad) std pop push xchg sbb (bad) sar push and add or rcr mov fldl sub jnp call sbb cld adc lock push cmpsl lret stc rolb inc loop push jg dec push aad test mov inc insl (bad) fcmovne xor lock shrb aas sbb in aam out sbb mov sbb push and push imul stc xchg hlt enter mov popa push shrb repz cmp pop out test cmp rclb add daa sbb daa cmpsl negl cmp test dec bswap inc lods rclb lcall insb stc pop sbb inc dec rcrb and (bad) sbb lret int test pop test inc sub pop inc mov insb push fist mov sub mov adc cs jbe xchg ficompl cmp out jg jno xor mov aaa or rolb lods cltd or xor xor push jo out jge mov inc push mov sub xor xor jne aam aas movsl jbe push ja cmp sarl push outsb mov push mov dec icebp scas fincstp add xchg jecxz iret fmull gs jecxz cli test les sub jns in mov ljmp gs (bad) pop sub daa push hlt or (bad) cmovg scas hlt idivl (bad) sarb sub sti mov inc mov mov mov test xchg xor ljmp push push int frstor sub push mov aad lcall pop mov lds mov js adc jmp stos inc add lahf mov pop fist ljmp outsb sbb push aas cld jp (bad) xor pop cmpsl sub fildll (bad) lahf popa (bad) xor aas and sahf push iret fcompp inc jecxz mov daa mov sti inc sbb insb adc lret in sti xor jmp movsl iret das jl cld insl sub fdivrs cmp (bad) mov pushf adc scas add ljmp xor pop (bad) pop cmp ja push (bad) xchg bound lea push fwait or or sbb adc out adc add iret sti pop xchg push mov adc adc into adc scas iret and out adc adc push shl addr16 jge pop sbb sbbb xor xor int push imul lcall idivl mov clc add cmp cld out stos cmpsl cld dec jge (bad) mov xor aad sti (bad) fsubl imul stc push icebp adc push lods mov or push cmp and sbb insb ret xchg cmpb mov push push mov add mov push cmc xchg mov pop mov in xchg mov sbb cmpsl (bad) xchg sti mov push mov sub shll addr16 and mov push lcall pop pop std into lea dec cmp (bad) (bad) xlat fsubrl cmpsl and test sarl jmp mov dec cltd cmp jmp mov jp pop mov lods std out enter aad mov or xchg mov add ret lea int3 (bad) imul sub sub stos in out cmp arpl (bad) mov (bad) push shr adc add mov stc or (bad) mov pop sub xchg push push adc fwait repz mov sbb and fimul mov repnz xchg mov xor ds or add lret rclb xor js test cmp pop mov mov scas xlat stos jno xor les sub fisttpll cmp xchg mov lret jo mov aad cltd and xor push xchg inc lea push fcmovu lods in mov mov mov mov lcall call sbb adc sbb mov xchg mov dec sbb rorb add pop inc (bad) sbb addb out fwait lahf pop sti sub pop in pusha sti test push and faddl add mov repnz add ja jecxz test fwait xchg loope jns out xchg mov inc pop out std lods xor int pop scas test fs dec add cld imull and sub cmp adc inc push or inc or cmp push fistp xchg sub adc jg jb and std cmc out mov les sti mov in sarl push popa subb clc and mov mov dec adc paddq pop jo mov negl lret push or xor (bad) pop jmp dec (bad) dec and adc fidivr and add push or ss lahf rolb jno std cmp jmp shr inc test hlt pop fwait ss lret sahf push int3 addr16 vcvtps2pd cmpl loope clc lea pop pop mov push (bad) sbb mov stc aas fs movsb stos inc lods xchg dec scas jb in movsb sub jo fsubs data16 loopne,pn (bad) icebp jae sub pusha mov imul jae insl mov rorl test jge mov shl sbb add cmp xchg and sti pop bound lds (bad) push into jecxz test mov outsb sbb mov cmpsb xchg pop dec lcall test jbe lds jnp ss adcl jb outsb jp add pop gs inc sub test xor scas in out les mov dec scas loope incb stc mov fistpl data16 add pop inc add inc adc push sbb and dec fild mov imul dec repnz ucomiss and aam mov sbb shlb ja and mov outsl aaa mov addr16 aas aad dec js or pusha adc jge outsl sub mull cmp pop push cmc stc fmul inc push mov cmpsb mov nop mov adc push adc inc adc sti sub daa shrl cwtl mull sub inc das mov jns jnp pop cmp in jb sub jno mov pop test inc imul ret out xchg lods popf in mov xor xchg cmp aas adc out enter out or xchg add ror mov das ret sbb rclb jl inc and pop add rcl aas test and je sub cmpsl in pop push sbb stos pusha dec xlat add adc jns push fsubrl pop mov (bad) xor xlat add rcll das fs clc xor in dec fild aam fadd cltd in mov hlt xor in lcall cmpsb insb inc js ret mov xchg mov pop sub pop mov cwtl adc jb dec fsubs xor and sbb mov adc dec and addl cmpsl inc sub lds fadds outsb mov fiaddl je imul mov inc lock add cwtl cltd jge or jbe scas in lds push mov imul (bad) jae movsb ss jbe or inc mov in leave lods push mov call cmp cmp pop imul jae push fcomps sub loope aas xchg inc jmp or xchg and loope rcl xor and aam test mov loop mov fimull loope fldl2e or cmp cmp fistp int out testl aaa mov sbb (bad) jmp mov sti cmp lret js stc xchg mov add xchg jge xlat into les mov movsb rorb test mov pop mov lock lcall xor cmp mov das sar mov inc je rclb push mov dec lfs notl rolb mov push fs jnp xchg mov mov jmp pop daa xchg xor mov test sbb stos shll lock cmpsb push inc jnp mov mul push inc (bad) and lea inc dec test dec cs fisubl pop adc gs shlb sub imul popa mov sbb push push cmp imul mov pusha imul (bad) fistpll fadds mov cs stos jne or and stos push or mov or and cmp cs push or sbb (bad) cmp cmpsl ficoml push or es jle aaa div dec mov int3 pop inc cli ret adc inc faddl mov inc mov mov push rorb andb cmp push rorl push push (bad) mov jbe into xor rorb dec cmp mov mov and lods dec jp inc std push lock testb lcall cmp push int3 dec test cmpsl (bad) lock fldenv aad into pop clc repz inc cltd dec add rcpps sbb stos mov sbb ss sub sub sbb fistpll add push scas xorb orl shrb mov adc test mov lahf jb mov ret arpl dec stos iret jl fnsave jp sub clc stc jmp dec or insb pusha enter dec ret pop pusha jbe sbb les inc and mov jp iret mull cmpsb jmp insb jecxz lcall out in mov stos fsubp jecxz leave push (bad) xor sbb push mov xor lret rorb cld into repz add inc (bad) in dec cmp fcoms cs push sbb test mov sti sub mov das cmp ret test dec jnp xchg sbb cmpsl (bad) mov sub gs push stos clc or push je dec je add repnz icebp cld int add sbb lods inc ds es in cmc mov stos shrb sbb dec push je push push cmp std adc dec pop (bad) jo insb jbe adc sub nop mov sbb stc divb in out into mov xor sarl jno push add dec bound je jae and lret enter shrl mov jecxz cwtl mov mov pop insb (bad) push (bad) fs aam jle icebp or repz pop jno pop dec iret xlat daa mov add cmp jne sbb adc or out loope mov in xor movsl adc and and add jne cltd dec jecxz das cli popa jo loopne or inc in testb jne sarb sbb xor push mov pop aaa stos and cmp test fistpl je gs jne daa test popf xchg ljmp sub push or push loopne js cmp shll push pop pop mov sub adc or lahf xlat xchg xchg and adc pop inc rorb ljmp or pop out adc sub or aam lock fiadd (bad) insl cmpsl fwait adc cltd je in repnz insl sbb mov out popf and xor fldcw mov imul repz (bad) pop push push sub push repz clc mov flds sub xor adc push pop pushf mov and dec xchg sub add push clc (bad) mov mov mov sbb sbb pop jg mov jb mov dec pop mull loop and lcall jmp cs aas test cmp and push inc insb lahf (bad) and sbb dec cmp fmuls push jno loop insb test outsb ds adc xchg jmp test in out stos stc out dec cmp fist mov jecxz test inc les cs rolb addr16 ds mov in dec mov cs mov (bad) imul imul rcrl mov xor and lods lea aad pop sti fstpt xchg add dec sub sub call pop lahf mov fistl cmpsl insl dec or jge es imulb jno xchg ficompl add xchg lock ret push rorb inc scas xor jecxz push jae test cld aas and add jmp js jns sti dec mov and mov fistpll out lret mov loope dec adcl mov cmp sbb mov sub sbb stc movsl mov imul call push pusha lods cmpsl fcompl call jnp mov push enter ja,pn xchg rcll stos push rcrl divl ja pop dec pop addl xchg push dec shl hlt sbb jo (bad) mov sbb jns,pn mov mov and adc shrb aam (bad) cltd aam push add js loop dec jae,pn mov orb dec xchg cmc jmp and sahf xor dec ljmp xor add dec in add sbb inc ja or pushaw mov je push loopne iret cli adc and push int3 xchg (bad) loop jns adc into in fcompl sbb xchg fbstp jge mov add push lahf inc xchg jp xor and inc xchg xchg mov stos or jg dec cmc push mov out xor leave lods out jl mov sarb push sbb push or or fs lret mov cmp mov dec stc cmp test xchg push iret jne lock jl ljmp mov pop add add jb cmp and mov jmp push lret loop or jecxz repnz push add cs and imul xchg mov xchg and into es (bad) sbb add movsb out push (bad) mov sub dec into repnz shll lcall mov cmp push xor or push mov shl loop jge cmp aaa movsl insl add data16 orl jge dec fsubrl jecxz or push movsb ret jo dec xchg out push dec (bad) mov push call in cmpsb decl cmp dec cmp inc fldl dec or mov sbb aas insb mov pop data16 ret mov pop daa add cs xlat dec sbb cmp in or add fidivr cmp mov xchg movd dec or clc add cmp mov (bad) mov cltd or jle mov jns push or mov in dec xor sub xchg sbb movsb or adc add dec insl test enter mov pop outsl shll fcoml xchg mov cmpsb xor xchg jnp (bad) push add call frstor repnz jge in adc addl out les jecxz fcmovnu lods dec mov fcomp fdivp mov sarb mov adc pop (bad) icebp loope dec icebp or (bad) pop cld mov stc imul sbb rorl lahf aam test ljmp lock jne arpl add push xchg out scas fldcw inc pop movsb scas aas gs lods (bad) add mov cmpsb ficompl cmp inc push sub xchg loopne jle fbld or jp scas addb pop push lock cs adc (bad) into inc ror push sub pop arpl push xchg lock jmp fstpl pop xor popa jnp push push js lock mov sbb and int3 rorl and aad (bad) sbb out mov fcoms and xchg jle push jecxz xchg lods pushf outsl sbb sub xchg jae sbb pop push (bad) popf (bad) in jae mov push cwtl dec mov imul inc js outsl hlt xchg call lahf ret mov mov fmuls sub nop lcall mov xchg jmp mov (bad) bound sbb push pop ret clc xor push jg push push cmp add pop in (bad) add xchg xor in lods ss jo add fs xlat imul loopne fmul jge mov and xchg pop scas test cmp fmul (bad) notl mov inc jecxz pop addl dec gs aad stos sub or mov daa fdivrs push (bad) push and (bad) fldl xor dec jg pop and shll xor lret inc push xor (bad) subl fstl nop jmp bound jmp fmuls dec or sub (bad) popa movsl (bad) dec sti push jmp mov fdivp sub push and flds push cli in jg (bad) pushf addr16 ljmp adc mov mov es or (bad) std push fyl2xp1 jo fcompl cld out lret ljmp pop loope nop sbb xchg rclb sbb xchg add jecxz nop inc and mov xchg (bad) repnz push repnz addr16 movsb enter test mov sub test mov inc inc xchg pop aam jp mov mov clc mov sbb shlb fsubrp cmp or arpl lret pop jge lods adc add (bad) cmpsl lea cmp pop mov xor xchg insb and cmp negl push cmpsb cli lcall push pop xchg ljmp imul xor mov (bad) pop test scas pop mov add ljmp mov adc pop jg pop movsl gs out adc sub in cmpsl fisttp inc dec pop mov push mov xchg pushl movsl jnp jl xor fist or add (bad) (bad) aad rolb dec (bad) inc (bad) bound ret pop inc mov or int idiv test repz push mov mov mov hlt or pop arpl inc adc ss sbb adc ds shl and mov add fs stos imulb adc or (bad) jo mov inc jo sbb sub bound inc (bad) stc lcall stc hlt fistpl popf hlt xor mov adc mov arpl (bad) jecxz sub adc xor and ds iret (bad) ds cmc or imul xchg pusha mov std mov xchg pop push outsl mov orb pop fdivl push (bad) aas add cld adc fwait sbb jo xor inc repnz push call scas inc js adc xor pop mov out mov (bad) inc xor lret xor jmp in adc test cmp in stc jae pop and (bad) fimul int stos push icebp pop mov jns fadd insb sbb sbb in push shrb mov in in in xor and fldcw lea jl jns cmp aad and mov jae stos adc inc xchg lret sarb insb xchg mov movsl lahf cmpsb cmp lods int adc cmpsb fisubr fs (bad) out adc xchg dec ds jne insb add sbb int inc test mov and xchg jecxz jg out test lds dec jns outsb sysret ja,pt imul loop adc rclb test pop jns loop add mov shrb outsl lds inc dec in ds lahf xchg test bound add jbe sub cmp addb inc test test jne movsb mov inc pop sahf or aam mov sub out sub repz pushf in jbe ret cli gs sub xchg cltd out mov (bad) mov push or push push sub cmp adc scas call test xor mov jb cmpsb add push shrb cmp xor xorb inc rcrl mov add pop mov outsl (bad) cwtl aad and push mov or lods and sbb cmpsl fidiv stos inc lock (bad) push jno bound (bad) cmp push fimul mov or jno dec leave pop mov jne or add jmp add jge cmp ret jge xchg jecxz jge pop cmp inc in clc clc dec pop negl cmpsb pop mov pop add xlat inc pushf fmuls push (bad) mov fnstsw sub out mov insb xor jecxz xlat cwtl frstor mov adc into idivb cltd (bad) mov or xor popf inc (bad) cmc rclb loop jl sbb and pop loope push and inc or or add ret jae add mov cmp and mov cld or les dec das test inc mov out xor iret clc or test lahf in enter and lods or push pop and inc push cmp push push cmpsl sbb mov outsl (bad) jecxz icebp jns and test cmp or pop frstor and and push push dec push mov mov in or mov jbe sub andl daa sbbl dec pop smsw cmp push sub pextrw jne push or inc jae push fs test call xchg lock inc mov (bad) rorl lods push bound popf sub pop std andl nop pop sbb cmp fstps xor lea lcall ficoml test stc xchg xchg outsb xor push inc mov scas push adc (bad) mov or repz adc inc pop sub mov push mov aaa or mov mov je jmp test lods mov (bad) repnz gs and and pop mov lahf fdiv loope js sub out test daa adc stos dec inc push add movsl jae dec cmpsl push imul ljmp adc or mov mov mov push jae stos jo mov cmpsl pop mov inc and out jnp mov loope jecxz mov dec jno push icebp dec sub mov sub xchg sti sub cmp out out push mov push ss jecxz mov jecxz cmc cmc loopne addl js mov dec mov or sub stos pusha fadds ret andb lahf jp dec je aas xorb cltd stos jmp lret sub stc mov mov sahf rcrl mov imul mov leave pusha mov sub jmp jmp lods inc popa cmp sbb add cli pop dec sahf enter push jae add ror jns aaa int adc mov stos shrl repnz jecxz push add shrb push in jno lock cmp sarb lods sub mov (bad) pusha cmp bnd mov inc mov mov adc call mulb lret pop jns pop mov popf sbb or testl xchg pushw (bad) cmp out ret sbb inc (bad) add jg mov dec mov mov dec lret sub pop dec lahf out inc adc imul dec fs xor mov les mov jno sub xor cld sub outsl cwtl insb push sbb pop and sbb arpl xor fldl repnz paddw dec jne nop mov addr16 add inc lds inc ds inc ja adc or and and (bad) aad (bad) mov (bad) lods cmp test rclb cmc scas in xchg fcompl fldt sbb test paddsw sbb in xor or (bad) lods jae fdivl and mov (bad) pop sti cli cld popa sub jns pop xchg das (bad) aam lods out pop mov mov insb lods or inc repz or mov and cs and (bad) jo cwtl stos mov sub push push (bad) cltd add aam hlt aad adc sbb jl testb sub into loope or (bad) xchg or pop dec int xchg imul orl jne divl mov pop cmp xchg cwtl sub push sub mov pop std sbb scas and xchg pop or mov xor pop xchg inc pop gs push test aad (bad) int adcl mov add or xor inc (bad) loopne lds mov mov es sub cmpsb mov ss mov add test out clc or in ret cmp aaa sbbl loopne or mov or mov stos pop cmp adc fsubrl push mov in push sub lahf sbb dec scas fist push cmpsl cmp mov imul cltd in jg jae nop pop sub (bad) mov sbb ljmp les pushf pop call or sub hlt aaa mov aas (bad) fcompl (bad) xor or dec inc mov fild adc rol push sti popf mov lret je xor gs lret int3 jo inc xor mov nop sbb dec add notl ljmp mov in pusha lods lds mov add (bad) sub add setg jnp jmp cwtl ret xchg arpl jle inc xor adc xchg mov jb add repz pop inc add xor cmp sbb mov mov in add xchg imul rcrb in dec push lret cli adc fstps sub aad inc fisubr sbb sub inc aas dec dec scas and in dec clc (bad) jnp jbe or or fwait lods fcompl or adc shl inc xor push or push fsts in lods pop cmp dec sti jae push adc in inc lods fcom jns mov cmpsb inc push pop mov jns sbb and iret mov push icebp repnz push movsl icebp mov test cld ja cmp arpl int out adc inc sbb xor xchg adcb add in out inc data16 mov adc test std iret pop adc cmp inc push outsl cld cmp dec nop xchg (bad) sbb movsl lahf and gs cltd jecxz cmp push js or (bad) in int3 popf jle fistl loopne inc mov jecxz (bad) jns and mov sahf insl in fwait jge cmp scas push imul mov pop mov in lock and jo addr16 (bad) jo or pushf lcall xchg xor (bad) pusha loope (bad) mov in mov push xchg push pop mov call add dec out dec cmp or cmp pop sub push xchg aam pop mov fisttpll dec mov loop (bad) rcrb fmull test (bad) xchg rorb iret mov mov fcomp mov into or pop testl and lock loop fdivrs leave xor adc pop enter aas hlt sbb pop sbb mov into xchg std xor iret icebp int3 jmp insb sub sub or adc mov or aad addb jns cltd rorl fwait cltd mov je int nop test and lahf pop inc cmp lret ret add loop jle mov mov cmp push ljmp arpl lea dec in mov cs jo decb xor pop cld (bad) aaa xchg mov cmc fistp adc lods int3 jbe sbb jae movsl sbb outsl test sub mov (bad) mov mov or xchg mov sbb ja aad cld jl or push and cmpsb add test mov mov fisubr pop lcall call fstl lods in sub into pop mov ss add insl jle adc mov and xchg pop push data16 (bad) out aas cmp cmc imul mov jbe mov std loop jo jae in pop (bad) aaa mov sbb sti xor dec mov push sbb inc jns out stos push rol lret or mov mov (bad) in bound repnz (bad) (bad) stos fdiv or jne and lea gs enter sti mov je mov cmpsl out loopne mov arpl pop jo adc scas add fimull add in lret ja adc test mov cmp lock add int3 aaa aas jl xchg or out fstpl hlt das call jae mov lds xor sub loop,pn mov out enter (bad) sbb dec pop fcomps stc into scas dec (bad) sub je sti into in push (bad) cld inc pusha repnz movsb jp fadds fidivl push addr16 adc imul pop sbb mov sbb mov outsb iret daa lcall pusha inc loopne aam cli jecxz sbb fldl mov pusha xlat mov sti int3 push cltd ret sub in in xchg xchg icebp hlt leave or lret int3 add loope add dec repnz sbb idivb inc pop pop pop lock outsl jbe stc cmp push push xor mov cmp xor xchg push sbb sub or test push int3 sbb sub test fstl inc pop jge jb inc ficompl pop ljmp jl push lock out repnz mov add pop add smsw mov mov adc xchg and jnp cmc fmul ljmp data16 xchg lret rcll enter loope addr16 inc inc push push xchg adc cmpsb jns adc hlt mov test jbe mov (bad) dec out or loopne xor leave xchg das inc popw adc mov pop sbb dec or incl out sarb add push mov xchg mov divl loop dec jb or jle adc xor dec lods incb xchg jge divb mov lcall jp lea push push push bound sub imul xchg ljmp imul dec out cld inc push xchg jmp dec (bad) mov fcmovne sub mov nop xchg int3 jo jno data16 in xor shr mov arpl push ljmp mov out inc push add xchg (bad) cmp rcl mov mov cmpsb sti cld push aam xchg push pushf jle xlat jmp xchg mov fldcw andb jne or daa mov negl xchg out push enter add fneni(8087 clc leave cmp xor lcall mov in lods outsl jle (bad) shufps insb mov sub loopne enter dec dec xchg int3 movsb xchg mov pop fild lret outsb sbb les (bad) loope movsb (bad) int inc pop cltd das subb insb inc or lret aad movsl jbe es loope add or xor mov inc clc jp push cmp pusha inc outsb xchg icebp test mov push lahf movsb cvtps2pi or cwtl aaa in sbb insl movsl xor add cltd mov and insb inc jmp fstl mov pop mov jl in sbb sub data16 pop fcmovbe or int3 jbe imul shrl ds lods mulb pop push pushf add (bad) jbe xor sahf dec or test fcomps (bad) mov cmp rcrl inc pop jmp vpcmpeqd shrl adc and cmpl cmp and adc adc out fbld inc mov push or mov in mov jecxz lods push rol push inc inc push test sbb sbb les test dec jo aas xchg lahf pop insl inc cli or lcall imul pop je popa loope jg dec jo sbb in add lds adc dec xor xchg outsb je pushf test ret scas add cmc pop (bad) mov inc iret inc lret cld dec mov inc enter mov sub sahf and scas mov in inc movsl out xchg sub pop inc into pop push in jle jb,pn stc stos xchg (bad) fs dec xchg shrl popl in (bad) stos sub cli pop das arpl aad mov pop push push xchg stc cmp ja adc dec lods xor lcall jl js (bad) push push jmp jecxz rcr dec nop test inc shrb xchg int hlt (bad) cmp pop xchg xchg jns (bad) pcmpeqd xor cmp stos mov int jl stos je data16 popa sbb addb dec mov mov pop xchg es mov js inc sahf (bad) or sub cmp pop jecxz push mov rcll iret inc add mov jmp push pop (bad) cltd dec pushl pushf in mov adc in (bad) (bad) mov in jb or dec std jecxz,pn data16 mov in jge inc jg sub mov mov les sub inc aam inc popa jp xchg int ret out ja xor (bad) jbe mov xchg in dec pusha inc enter out int pop fdiv and mov stos inc stos jbe mov test xchg or (bad) hlt ljmp push out outsb in outsl mov push fstl fiadd pop jae adc aas stc cmpsb int3 out nop icebp dec fisubl xchg jne xchg xchg ss mov insb and sub scas (bad) or mov cmp outsl aad mov push repnz dec repz insl aam jge dec imul enter das (bad) test repz iret imul xchg and or mov rcll push push js or test dec and sbb loop cmp clc cli push outsb in in cmp imul popa lcall mov add push sub and test adc nop push adc mov add add jb ljmp (bad) jno mov shlb add ljmp or sub mov mov jecxz cmp ljmp movsl and test pop pop and and hlt out gs leave push jne mov pop jge pop (bad) movsb mov loopne or mov lock das imul jl adc xor scas popf lret dec inc outsl rcrb es sbb stos dec dec jne xor popf test decl jo dec add cli adc insl xor stos sbb cmp leave sahf sub ret sub add pop in ret insl mov bound add addb cmp aam jnp sbb push adc sub fdivs mov sbb dec xchg adc int3 stos int mov jle sub in gs mov lods jmp pop test sub in repz push or js (bad) cmp aas js push lret fidivl sbb dec into cmp push sub call mov cmp movsb lcall mov cld ret popa outsl scas push dec push les or xchg fcmovnb or fnstcw or mov push out jo in aam sbb dec adc (bad) hlt xor mov cmp pop (bad) pop pop or dec mov andl jae sbb mov popf sbb sub jl sub sub mov or cmp and loope xchg cwtl shl sti sarl mov ds sbb out jno pusha enter cmp cmc add cmp lcall cmp jne inc mov insl movsb mov fdivrs popf push clc jne cld cmc dec (bad) mov call xor push cmpsl cmp xchg push loope push sbb daa hlt jae dec sbb dec outsl and pop fdivrp push dec orl mov jge push mov in fchs and cld fadds fwait lahf xor (bad) orl lret popf push mov jae test pop das sbb jmp dec jns pop aam mul mov or mov add fistl mov (bad) xor in and int3 jl into out nop sub fdivl out jmp lahf popa into outsb and push idiv insl test sbb xchg xchg aaa sub popa pop insl scas and xor (bad) sbb (bad) cmc xor lret shl inc cmp in lds (bad) adc mov rcll and mov (bad) cs fmulp sar addr16 and jl bound std xchg sub rorl lods add xlat cmpb or add fidivr mov and les dec push sbb das dec test pop lret lds pop enter dec sub repnz subl adc out dec lret lds cmpsl mov add (bad) push insb fcomps xchg jae sarl das ds int3 cmpb ror enter or jmp xor inc (bad) jae mov lcall repz xchg inc pop das jp adc xor ficoml dec out xor mov mov sub or int int xor gs mov cmp mov sub mov xchg cmp jmp mov rcrl stc push push loope lods imul dec aaa inc into rcr mov pop push inc add nop fsubs popf jbe sub push sub push inc push cmpsb xchg mov sti jnp lods push add pop push inc call adc jbe shr rolb loope and pop inc inc cli adc (bad) or (bad) push push xchg and dec outsl mov call int scas add fs lea lret mov xchg into cmpsb fidivr pushf sub and inc popa mov jg jae push (bad) sbb lods xchg and dec mov cli aas push loop mov jg jp xor jo negl push cmpsl push repz mov dec (bad) aaa or adc into push fwait jge call mov push jno (bad) imul sbb mov popf inc (bad) pop sbb jo icebp jmp sbb (bad) dec push push lds inc shll lock lock cltd lds mov repnz inc xor fldcw inc aam je dec outsl rorb shrb or sbb cld mov sub jecxz,pn mov cld ret inc enter mov mov sub dec cwtl pusha in ja jae mov dec sub cmc cmp inc rcl push adc repnz adc pop adc cld pop fistl stc jecxz lock xor pop jae scas dec jo es jge out popf jns push xchg mov xchg out outsl inc int jb push repz ljmp in dec lods icebp shll add fbstp clc es sub push pop scas mov adc or mov xchg mov imul ret mov clc push loope aas push loope dec mov fdivl cmp xor stos jl cmpb mov fstps or js push xchg mov mov push jno cmc jnp lods ja xchg js into hlt and jl jns mov sub push sti sub cmp mov jp sub gs xchg imul cmpsl add pop jo xchg cmp leave mov push xchg (bad) inc ljmp out sub jecxz jnp ss scas movsl adc cmp or iret ret pop or arpl push outsl fidivrl divl mov negb imull sub insb stc mov xchg push add cli push or (bad) sbb rolb pop inc flds inc add jns mov out shrl cmp clc jno (bad) and mov mov aaa imul ss sub sub loopne cs push xor adc scas xor and jle shrl movb pop and add xchg lret mov add or mov xor flds push notl enter stos repz pop std les inc push pop stc adc sbb into (bad) test aad sar sbb mov pop mov popa inc jg pop jb xchg jo pop push add push jae push lods (bad) test mov inc adc jo sahf cmp ljmp imulb andb fisubr push (bad) mov xchg mov push jnp add mov js popf mov insl frstor pop inc (bad) mov or in data16 icebp push inc pop testb dec jp sub or (bad) hlt dec dec push fstpt js xchg inc sub inc pop cwtl js or dec in pop (bad) jno xchg (bad) xchg fistp xchg pop mov out sbb or dec add sbb lods pavgb in lds dec fnsave jl leave cltd or lret jae movsl dec fidivl cs repnz stc shll lret int sbb pusha popf mov mov ret push enter les les popa addr16 and out inc pop lret fmul jl fs or adc or push mov dec add shl setne mov bound sahf cmp sti sub outsl iret push cli cmp loopne push lret add sub iret jl mov mov lds sarb mull daa dec xor inc xor clc scas pop fimul ja mov rorl jmp int mov sbb jae inc stos (bad) mov pop lods call mov push insb lret jge or mov mov mov add int3 fucom movsl jbe jo push mov addr16 push and xlat aad fs (bad) lock mov jne mov test hlt push push mov sub or mov pushf call (bad) xor fsubrs dec inc in add rcr pop dec insb sbb add stos bound stc jmp popa cmp rorb shrb movsb xor arpl movsl sti xchg cmp lret loope push cmpsb sub push icebp cmc bound idivl (bad) xor xchg fwait imul xor jmp repnz cmpsb push ficomp sbb rol std mov insl test addr16 movsl push dec (bad) ret movsl test pusha notb pop jo dec fnstcw mov mov pop icebp mov mov xchg lahf lea pop mov dec push cmp dec jg xorl dec xchg push push sub orl jbe mov out cmp push and fs mov push int dec loope lds inc into leave push mov bound fidivrl mov jnp stos dec add sub jne sbb xor or adc int addr16 std push ret (bad) in push mov mov lock xor das cmp test pop cld out or gs cmc out test adc jnp cwtl add cmc xlat sbb sub dec cwtl out (bad) repnz test lahf rolb out pop cmp pop test mov xchg lret add pop hlt daa mov adc sti sti fdivrs xchg mov jp jnp mov xor jmp loopne sub and mov pop loop xchg out js sub andb sbb adc mov out jmp xchg aam scas xchg push mov dec les fdivs add xchg jecxz adcl cltd xchg repnz mov mov lret jmp ja pop mov jl sub add cltd mov jo gs dec fs outsb fs mov test in arpl mov or sub in mov xor fsubrp lods enter mov push fnstcw fldt fwait cli ja xchg cmp jb lds pop and shrl xor sub sbb aas pop sub out insb xor test mov sub fcomps xchg data16 or mov in inc arpl sub sbb sti in adc idiv mov loope ret mov popl (bad) out and xchg jno add push xor xchg push pop jecxz xor aas xchg icebp (bad) in jae mov test and orl fnstenv outsb scas push std pop push (bad) aaa sbb or loope in negb xlat ss ja sbb rol inc pop push imul dec adc js dec ret movsl arpl inc push push loop sub mov mov dec sub or insb enter sub gs push (bad) out lods test test mov into in mov xor adc mov mov and popf adc test aas es outsb dec jmp pop stc icebp sbb out (bad) push push mov inc pop jae xchg shr mov es in pop xchg call std cmc rolb repnz jb stos test mov jmp sub (bad) popa lahf jo push subl mov int loope and movsl push jb (bad) xor push sbbb push ret add out aaa pop faddl sub mov push mov mov dec or xor mov les pop (bad) lock mov es lds movsl adc sti mov test ja outsl mov clc enter (bad) jbe adc bound sub mov mov inc aam pop xor push mov xchg outsl xor push ljmp cmp or mov cmpsb mov xchg pushf addl fcoms xchg adc cs sub (bad) mov push aas pop stos mov or dec dec out cmp es roll add ret xchg imul (bad) rorl mov pop mov pop aas test mov sub out pop mov int cmp insb xchg jo ljmp pop mov sub fiadd jmp (bad) xor out imul jns add test das stc out stos xor mov cmp ja sub (bad) loopne std lahf cmpsb and adc ret lods movsl out je out stos mov divb int jae out sti outsl xor push jne jb mov into mov sar leave sbb sti pop inc sub mov hlt jno xchg xchg enter mov jmp mov mov scas cmp sahf or push mov lea xchg in pop pop imul sarb pop int3 push lcall cmp mov ljmp stc inc (bad) test (bad) in mov adc (bad) int3 lahf scas xorl pushf jbe mov in push adc push xor cmpsl xchg mov cmovns push mov sahf (bad) dec dec jmp pop outsb xchg jp lds outsb adc cvttps2pi xchg imul jns adc mov pop xchg addb jp and (bad) in (bad) cmc jae stos daa cltd push ficom sbb div lods cmp adc lods add mov xchg xchg push xchg rol ror mov xchg adc ret pop out stos sbb mov out out mov lock lret adc and and (bad) ja mov cmp fwait loop add sub or mov mov imulb lods pusha stc (bad) lret pop push popa mov fldl and inc sbbl pop rcll int (bad) push repz sbb loop or xor ja mov lret pop (bad) and push in cmp add push jp and rolb jecxz jb dec mov ljmp movsl mov mov test push aaa xor or dec adc jecxz nop int3 (bad) fmuls ljmp adc cmp mov pop shrb sti push fucomip pop sarl mov js addl adc push xor jle icebp adc mov xchg pop into sahf nop mov mov xchg cmp mov inc mov dec movsb xchg add jecxz lods cmc (bad) hlt outsb mov cmpsb fcmovnu xchg xchg aad sub stc xor orb repz test xor mov xor and mov push cmp jmp add jle xchg or test mov test xor add jae out (bad) mov jmp loopne in jb lds push fnop jmp shl call xchg xor aaa xchg pushf int3 mov push cli pop repz sbb fild test adc xor in das daa out xor xchg inc das cmc adc dec dec (bad) inc push (bad) or mov pop sbb mov cwtl xor addr16 pop ret and jb ret jbe fistpll xor cmp pop mov insb mov cli lea mov repnz subl push lcall mov adc icebp and aas mov (bad) sbb cld aas bound rorb js inc aad jg imul sbb iret jne stos mov sbb repz xchg adc add nop test lcall xor inc mov popf movsl mov mov fwait mov xchg xlat push cmpsl in inc add aad jge mov inc cmp push not aaa jp xlat adc cmp xchg xchg add ret xchg sbb dec inc jmp stc xor in aad xchg mov pop jp mov gs xchg iret in lods cltd mov sahf stos inc adc outsl xchg cmp or movb xor sbb lcall inc mov call cmp sub lret and push aaa inc insl xchg push pop or (bad) sbb pushl jo (bad) jb bound shl mov xor in cmp leave push xchg insl out or push sbbb jno fdivrl jmp push xchg pandn adc movntps xlat add int outsb xlat mov jbe push cli pop in mov mov fistp push xor addr16 jle mov mov insb cld dec xchg mov pop (bad) xor inc pop jmp xchg or mov lods popf mov mov (bad) ljmp (bad) in arpl shrl or outsb sub cmc pop dec xlat repz push dec xchg sahf dec sbb cmp pop push add mov sub mov pop inc rcrb roll cmp insb rclb mov addl lahf xchg and arpl xchg mov cwtl inc inc mov or lock in jb cmpsl cmp ja sbb mov cs popf pop out ror push mov mov inc sub pusha imul fwait jle aad sbb ljmp adc cmpsb (bad) gs pushl mov sbb xchg inc movsb std fstpl arpl sub cmc pop sbb arpl push pop negl fwait mov mov dec cmpsb and push or ficompl fwait inc pop or pushf div rorl push mov dec fdivs mov into test adc popa lret out dec adc out ljmp pop mov mov out prefetcht0 lret adc mov sar pop cmpsb popf mov xor iret movsl out out stos dec gs or or cld lcall xor mov cmpsl arpl lret mov dec fstpl jmp pop add iret ret popf xlat imul ds inc add pop scas and leave sub (bad) stc fcomp jo cwtl cmp leave jge push sar call xchg or movsl out cmp insl ljmp ss xchg imull outsb out ss popa sbb test jns push mov and mov xchg clc or push es xlat rcrl (bad) aad movsb iret xchg jns stos and pop mov xchg aas fistpl iret push mov jmp mov mov gs mov test dec jb nop sbb sbb aaa lcall out dec (bad) xchg xor dec cmp lcall pop xchg mov aaa push mov cmp pop scas inc jnp enter imul jp sbb js fisubr mov (bad) xor loop sub aaa or inc in (bad) and inc jbe cs mov arpl (bad) rcrl or lret or lock push jbe sbbb rorb xor lret pusha das cmp aam xor (bad) daa jbe fwait scas sub and in or add dec cltd test das in jb test pop mov imul ret jbe int3 inc popf fnop sbb pop jp push (bad) mov mov movsl pop fcomps sti imul in ljmp xchg nop xchg mov and dec dec jle repz iret lcall inc cld into mov xor or mov (bad) xchg pop or fistpll cs leave and and ror sarb rorb jnp push sub xchg (bad) lods jb mov loope jmp out dec loopne push or add push jle mov imul adc lahf movb jg xchg lds int3 mov dec inc mov cmp and sti mov (bad) lock clc imul cmc push mov cmpsb mov jae insl and es lock pop pop aam xchg (bad) mov js pop je push add scas push adc sbb mov add cmp mov cltd xlat inc rclb outsl in push out imul sbb and mov loopne sbb loopne dec add or adc and xlat cli addr16 cwtl jle pop int3 leave dec fild inc outsb fildll xchg jp nop mov clc push mov pop push into mov js add sarb cmp mov (bad) mov stc (bad) xor push jbe cmp lock out xor ljmp xlat inc mov xchg mov sbb std fs in es pop fdivrp sahf imul xor adc adc dec pop mov adc shrb test fildll xchg lock mov in das bound icebp mov js and gs adc lcall sahf inc stos pop ja jl sub leave pusha stos mov push cmc into rorl xor mov leave xchg push (bad) in sahf xchg or add cwtl xchg adcl ljmp popf add bnd and sarl sti cld mov xchg xlat xor int imul es std push pusha add dec scas fisttpl sti add ss inc or xchg cmp mov pop cmp inc ror mov mov adc (bad) add (bad) cmc inc int3 sub pusha inc add mov je xor xor or imull movsl push xchg jg bound inc test in add lock leave addr16 sbb cmpb mov pushf insl inc or pushf cmpsl in lahf pop mov stc cli ror fildl (bad) sbb dec in int mov xor cwtl sub jecxz sub inc and ficomp (bad) iret cmc sbb push mov movsl cmp mov push (bad) in repnz pop daa es imul cmp add (bad) mov into movsl or lcall cmpsl push mov fisubrl mov and in fadds ficompl push movsl cltd jne sbb cmp cwtl dec out sbb outsb mov adc pop adc fdiv lds xchg ss das fs ljmp imul lahf mov jecxz and mov inc mov push daa (bad) imul pop mov mov or jbe out xchg aam cwtl out hlt imull add mov cwtl sbb arpl cmc jp stos out xorps mov ror je pop (bad) (bad) dec into data16 stos dec stc popa sbb movsb int3 inc in lcall push enter ds imul popf adc or lods ljmp mul js jg cld cmp pop fwait and dec jnp sub fs jne push pop negl mov movsb push lods push and (bad) mov gs sbbl movsb lods inc jb dec push lahf cmp or xor dec xchg out into (bad) in (bad) ror lret in mov cld adc dec jb bound imul cmp les adc push adc ret jnp cltd push (bad) xor pop jne scas popa in fucomp xchg stos test rcll adc add leave rcrb leave pop (bad) int movsb cmp out aas js imul inc sbb pushf pop divb call and sub jnp lret push loopne jb and mov aaa (bad) incb lret data16 sub xchg add cmp lea rcrb and jecxz cmpsl xor xchg pop mov pop pusha sysexit adc or sub test jp loopne pop dec and inc je mov jae sub loopne pop jle nop repz jecxz xorl dec jns repnz fs dec test or (bad) cmc scas push lret sbb subb jl lret fnstcw mov out xor xchg pop jmp jo cmpsl lds insl mov add subl lcall sbb dec hlt add jp into xchg add or mov and or pusha inc xchg add or repz mov popf ljmp mov repz xor outsl das stc jl fimull leave mov (bad) mov orb pop ja cli imul xor ds imul mov rcrb in fs push imul add inc jge jecxz xor inc in and aas outsl loopne cmp xchg mov pushf push pop (bad) movsb das clc mov faddp jmp jp adc adc xchg mov push jae lahf lea (bad) movsb sbb and fdivrl push inc jnp cltd dec xchg dec sub int je sti mov pusha adc jmp test clc mov adc stos subl pop xchg mov repnz sarb and push xchg mov aas xchg sbb (bad) mov fadds mov int mulb add aad mov mov je stos lret test mov ficom fisubl lock pop in test mov pop out inc in je stc sbb shrl add fisubrl cmp mov pop dec push xor (bad) fdivrs decl mov ror sub shrb scas pop imul add jmp cmp loopne (bad) in or fsts sahf popa repnz push cmp stos adc push mov fsts add repz xchg aas xchg dec outsb dec (bad) jmp push mov test fldcw mov adc jle fcom inc push adc (bad) push in das jno insl mov inc or hlt clc iret add jo dec and scas dec into add xchg imul mov clc add push push insb leave mov mov in sbb cmp test or adc outsl lds daa mov jns je mov ret add lahf daa idivl out ret cmp or pop xchg dec mov scas xchg and jno gs mov lret rcrb shll mov aaa mov xchg or add pop jbe sahf xor sbb pop lods lods out mov fsubrs cli push fwait movsl bound out lahf lods xchg scas sbb mulb es nop cmp push (bad) je sub test test in cltd sub xchg or mov inc sbb dec jnp and xor aam jb sti mov out je pop and xor xchg jb mov enter mov pushl push add das jmp (bad) push lcall mov ret imul adc das xchg mov cvtps2pd or addl mov push popa cmp pop (bad) hlt jg lcall icebp loope push cltd movsb out push sbb or inc leave pusha div imul cs movsb cmp daa mov test mov mov call cmpsl imul aad adc push push dec mov test mov xor ret ret jae inc (bad) in add inc xchg mov push sub popa and push add ljmp fcomps (bad) outsb out mov enterw stos inc push (bad) ds adc lar fistpll lock lock stos icebp push mov into xlat xchg fs jno xor (bad) aad push inc push mov add cmp or stos (bad) test xor imul mov fsubrp or pop dec xlat push dec push mov push iret in xor jl out rolb add pop stc xor out cli movsl pusha out mull sub pop and addr16 fwait mov aas push mov pop dec mov sbbb mov popa push sbb inc xchg das scas inc ret js and cltd jp fdivs icebp fdiv repnz pushf rdtsc in popf mov sbb aad (bad) lods jp or xchg pop sub mov sbb divl xor mov test xchg fnstcw dec ja add push cmpsb (bad) (bad) test lret adcl pop push jle,pn jns inc mov cmp mov aam mov adc orl rolb dec dec (bad) movsl sbb lea roll xchg aad mov cmp pop aam cmp dec jl push ds jae pop push jno xor fistl pop or ljmp cmp cs push sub ret mov and (bad) mov mov (bad) push enter push sarb push add adc testl out lcall xchg jbe ret cmp aad mov mov lods add dec push shlb xor mov jmp sub call dec add inc jno and lea adc movb or mov pop mov or int3 test jnp adc dec jp mov insb sbb pop cmp mov fisubrl lret divb pop js mov inc fucomip arpl xchg fs ds mov sbb adc jno shlb pop dec mov sub mov add je lahf and daa xchg addr16 xor out xor cmpsl sub dec add xor pop add push mov repnz out lea stos cld dec lods fistp cmp ljmp lret inc rorl mov cli icebp in addr16 into sub pop nop xchg ljmp inc xchg jae adc sub dec cmc fisubr enter sub sub xchg out or fnsave and bound jge mov mov out xor ret in sti push cmp les or adc mov (bad) in shr (bad) in adc movsb negb mov jmp jl mov rol xor and orb js add icebp into mov stos adc or inc or or in fistp mov adc (bad) (bad) xor jo lds scas inc imul daa add sbb adc movsl js jne leave push jae orl cmp into cmpsb push loopne mov lret repz push cmp test imul iret out sub mov cmp push xor out and daa out sub cmc out adc mov movb scas jne fidivrl stc or jg push lods mov ljmp add rolb dec jmp ss mov mov mov and imull loopne enter negl pop mov fldlg2 push call mov jmp inc frstor xchg sbbl andb cmp ja and cmpsl hlt rcrb cmp loop inc sbb rclb ret in pop xchg adc in hlt aaa hlt xor ret mov (bad) andb frstor mov int push inc jl inc inc jnp popf test mov cld mov push insl mov sbb jg movsl test sti shll leave sbb (bad) xor jne sub repnz inc stc xchg (bad) in fstps adc cmp xchg pop pop inc loop add sub or outsb mov out testl mov mov xor int3 mov jmp pop aad notl pushf cmp cmpl sbb fbld mov outsl std imul cltd cs jb fldcw out xor jg add lret arpl repnz push cmp insb arpl stc inc push fwait xchg xor cmc dec out ja cmp sbb iret xchg mov sarb mov mov inc mov test jp sub xchg movntps xlat mov sub or mov or nop pop fstpl sub pop aas inc in icebp push lods jge fisttpll xor out (bad) pop add jl inc fucomi out and outsl cmp ret lds sahf jp cmp mov dec leave add addr16 es rcll pusha icebp xchg cmp shr inc cmc (bad) ret bound fwait shrl add fidivl add sbb mov (bad) dec fiadd out cmp dec sbb cmp mov call es dec cli dec sbb xchg (bad) cli push sti xor insl lret mov pop adc (bad) xchg add pop in clc repz lcall add dec push ljmp or dec push (bad) in sbb adc pmuludq jmp out in (bad) mov pusha test aam inc mov xchg inc dec rol push (bad) xor inc pop and addr16 je pop test ret or mov mov aas test xchg push scas push xchg icebp push or jbe ds mov imul in mov jae and and cld cmp (bad) dec mov ljmp test popa add ss fs test fildl push jge push cmc stc (bad) xchg test and jecxz std outsb shrl stos add dec repz dec clc fdivs out inc fnstsw push fs imul pusha xchg jp mov sahf dec sub push dec lods incb cmpsb dec mov adc adc arpl cmp pop mov mov and add lods roll andb loopne cmc mov mov loope sbb ds jg dec and xlat and rorb gs adc ljmp push jp clc insb (bad) jb push push add frstor mov movsb jl mov rolb in mov xor cld mov mov int pop fwait (bad) loopne in insl loopne pusha sub inc test jecxz dec xor loop in cwtl mov imul xor out repnz dec ficoml outsl mov int3 pop fldcw lahf add daa arpl and fs (bad) mov sub and xchg jmp dec loopne pop mov fsubr rorl ret mov lods sub add movl pop mov fwait mov adc imul add sbb into cmp movsl dec leave out dec mov dec cmp add aad dec (bad) fdivrl xor pop in add jns mov add test mov and je sub and xchg cmp jns enter arpl adc mov mov mov pop pop xor cmp fstpt stos xchg or xor stos pop jo inc out sarb mov xchg inc cmp mov int jne int or idivl loope add sbb pop movsb jno,pt xchg mov cmp dec pop adc in or xor clc adc inc test cmp les movsb pop push cwtl mov inc or roll adc rorb mov jp mov ja mov push cli sub cltd in or xchg movsl dec lods mov (bad) cmpsb pusha bound push mov or mov lea mov or adc xor adc push test test jbe pusha xor cli push cmp iret popa dec incl (bad) push repz mov push adc std cmpsb repnz lods in shrl jae mov clc and fist repnz divl fstpt mov add in or mov (bad) push popf mov push dec lock sub pop xchg add add (bad) stc sub imul div sub xchg dec rclb decb (bad) sbb jbe dec or loop dec jb add insb push hlt add mov mov cwtl gs push cmp jo mov enter (bad) push js mov iret dec pop out cli jae aaa imul popa and xchg ja sbb adc push stc lock fsincos imul pop and movsb mov leave mov fs sbb sub sub (bad) push jbe es or jo push ja aad pop xorb mov lret data16 into push sbb dec and fidivrl jbe cmp cli fwait and push fadds dec repz les add movsb nop cwtl pushf pop scas mov mov xor std popf (bad) pop mov mov sub xlat xchg cmpsl adc cltd mov repnz test cmp inc call loope mov or push stos leave imul cmpsb stos fild xor dec jae popf cmc (bad) dec ljmp sahf jno roll xor dec mov xchg mov sub mov pop popa pop loopne stos mov lret pusha out roll (bad) or sbb mov test outsb or cmp jbe xchg mov lock jne dec jge cmpsl ljmp mov cs cmc cld sbb xor pop jp (bad) and pop or rclb cs outsb sbb movsb in inc into (bad) xor push xor add cmp stos xor insb jge icebp aad aam aas and repnz rcll pusha fistp pop pop add jecxz js pop repz adc mov insb (bad) dec lret out lret pop pop mov mov and ss in test pop repz adc sbb mov xchg xchg adc (bad) mov sub or loope jp cli clc push scas mov leave ret ret xchg and aam pop inc pop (bad) cmpsb icebp into xchg (bad) jbe in sbb scas dec fwait icebp aaa mov sbb sar data16 loope in fdivrs add (bad) mov ret add push call std xor je xlat movsl mov adc xchg hlt fcompl into cmc pop icebp jno xor push out iret test psubw loopne cmpsb cmp lods sub and lcall inc test pop hlt sub jle xchg pop mov jnp mov insb pop and adc fcompl dec mov xor inc ljmp pop cmp mov fwait in out xor pop cmpsb sbb mov push jbe inc mov lret push pop ret movsl and cltd adc mov inc dec movsl loop mov dec cld dec and lods aas pop call rcl mov mov xor enter cli sbb mov les mov popf in fdivrs or arpl inc push mov cmp push cmp cmp dec out mov mov fnstcw gs jle or add int loopne add pop fcompl clc mov in xchg or adc rcrl mov inc jg sub int3 mov inc xchg insl add xchg bound sbb xchg xor loope fucom out sbb dec repz imul push mov sbb add test ret sbb jne mov push inc enter in cs pushf pushf (bad) insl or or push mov add jl dec pop sti dec daa popa jge leave clc mov out inc mov out fisubl test rol rclb mov push adc jl push xchg or lods inc cld cmp or popf iret stos jne mov xor xor nop sti lret sbb sbb sbbb xor adc test push movsl fildll xor (bad) lret out dec mov cmp scas test das clc cs popa inc push push jnp (bad) ret mov repz sub fisttp sbb push pop jle lret sub ja inc adc loop cltd insb or jl jae test mov jle pop lret pop xlat lea pop out mov (bad) in sti dec cmp (bad) scas sti insl outsb push aas (bad) std push cmp dec jnp movsb and test xchg ss sbb add mov fiaddl mov xchg outsb mov stc in jnp cmp mov sub fucomi inc std loopne aaa fcmovb adc xor jb pop and enter or adc (bad) jcxz insb sbb pop add cmp pop add xor fwait mov leave out inc dec enter push xor xchg add loopne jl push inc rcrb stc and ret inc test xor push ror xor aas mov lcall (bad) enter jb and xchg pop (bad) mov aad scas jno cmc (bad) xor pusha into mov mov cmpsb mov sub (bad) and adc adcb test inc rcrb repnz pop dec jmp or mov pop sub loope mov inc cld mov jbe stos pop dec jae arpl lahf enter jg mov insb nop jle shll cmp mov fisttp fldl xor fildll adcl sbb adcl mov push sub arpl mov dec push xor jnp or fcmovne mov mov inc mov cli mov insb nop dec mov pop sub add pop push jo pop shrd pop mov addr16 xchg push test daa mov sbb outsb insb stos pop dec lret mov push sub mov das pop push jge mov cmp add in ljmp xchg adc dec mov popf (bad) jecxz daa ret (bad) repz and pusha sbb imul pop mov in pop out jae pop (bad) xor pop (bad) jge ror mov test pusha add mov inc jecxz es lods (bad) flds iret in clc xor cmp cmp jg add out and xor clc int3 ljmp adc cmp pop loope movsb dec xorb ljmp out dec jle mov lds sub fisubrl jge leave cmp jne mov pop mov mov jnp mov fimull stos mov (bad) mov mov and adc xchg push cmp fnsave inc into subl mov xor add ret arpl fstpt mov push pop add pop xor cwtl jp add lods loope add add mov les cmp fwait icebp and mov mov push add jno push subb sbb mov jge sub push mov mov ds movsl push cmp test dec jno aaa sbb and in pusha adc xor out rorb iret cmp sub inc sub cmovl dec out in insb enter jbe sub lret mov pop out (bad) or int3 call xor lahf push pop xchg pusha fldl push insl into icebp sub int inc push push xchg lea inc cld insb xchg xchg and pop push or push pushf lahf push call loopne ljmp (bad) gs rorb push in incl sarl jle lret sub add loopne je mov jge ret rorl sahf (bad) adc (bad) push jp adc cmp repz mov rol ror (bad) shrl fiadd mov xor xchg sbb xchg aam nop aas push pop pop in jge lcall pop repz lock aas push out cltd xchg lea pop in sub xchg (bad) mov call push sub icebp (bad) mov js jbe xor and cld mov (bad) (bad) mov mov adc xchg insl add cs xchg imul add sbb dec pop jae cmp adc js mov adc adc or add cld pop inc or lret add push scas mov mov stos or cmp adc (bad) fsubs repz sbb or mov test or idivb mov insl int adc cmp dec das and movsl stos (bad) jecxz cmpsb mov popf sub sbb cmp imul fstpt ret or pop sahf push push loopne and cli dec js xchg int jmp cmp sub inc lea inc lcall lret adc jp test bound jo mov int shrb push push insb xchg test xor jge (bad) mov lock ret enter mov mov cmpsb xchg push out (bad) ja and mov test push or inc mov outsb dec sbb adc lcall jb (bad) repz jbe scas pop dec test stos push lcall je dec jecxz in mov cmp sbb lods test je add adc and mov adc pop dec enter pop inc mov movzbl mov out mov in int xchg xchg in fdivr std in and sti sub cwtl add nop inc jno cmpsl inc cli (bad) and xor xchg fdivrs leave xchg fidiv xor push push add mov xchg and outsb cltd jecxz push bsr xchg xor rclb xor or ljmp mov ret or jae shrb mov cltd or mov imul push dec cmpsl aaa xchg inc inc sti push or and cmpl push inc push rolb outsl (bad) rcrb push ljmp sbb push inc pop or sahf push xchg js xchg popa push inc xchg dec in pop jl test push dec lea bound jg xor aas (bad) pop inc pusha (bad) pop icebp dec bound or popa outsb mov in fldt hlt inc cmc xchg pop sbb out xlat sub (bad) out xor aam lods mov fidiv outsl les dec xor std pop jp and mov adc inc enter inc leave (bad) mov dec in cmp aas jno mov lret iret lret or push ficom mov dec ja shlb mov stc xor push mov in test adc cmp sub (bad) add lcall (bad) ret jecxz xor call jns mov adc cs xor mov sbb stos adc mov sti inc pop mov fistpll out fisub xchg jg mov mov int iret jle pop (bad) ficom mov dec sar inc in rcr or xchg cmp cmp loope sbb les jl xor jl sbb es frstor nop mul mov (bad) ficoml cmp lahf out mov in fs push sahf sbb rorb pop ja cmp pop xchg (bad) jnp jle add rcr inc aam roll fstl or inc roll (bad) adc rcrl xchg sbb sub (bad) pop push ret lahf push add cwtl cmp push out lods mov popf call jno jmp push add les fsubl loop mov and push pop (bad) ds inc adc or xchg bound loop mov in dec cmp push ja adc push or iret mov jb and psubd pop addr16 rcrb mov push aaa adc (bad) pop sub xchg (bad) fdivrp cmp test and lahf add (bad) shlb jmp insb push mov rorl es movl and dec mul out push shrl jle xchg push fs inc push jmp hlt jae xchg cmp (bad) mov test add mov int mov loopne stos nop pop imul (bad) jb dec push xchg (bad) in adc in aas push add dec push xchg adc stos jo insl push mov mov inc test push fmuls adcb jge xor lahf aaa stos std jle jmp ja push lea xchg push inc jbe inc sbb mov lret es jo pushf daa xor popa out fsubrs ja test sub (bad) sub (bad) xchg test mov loope jb add xor add push paddusw cmpb xor ljmp mov das (bad) adc xchg cmc mov or sarl enter js imul sbb repz adc pop popf jle jae xchg je ja mov jno lods fild push les test jne mov xor aaa mov jae fsubrp in add and cmp xor push daa lds cmp les fcomps fimull mov fnstcw mov (bad) and outsb inc or push out push daa pop icebp push pop push fisttpll pop cwtl push ror jae ret jns jmp sub mov mov push pop sbbl les and aam stc outsb bswap sbb adc sbb cmpsl out clc dec leave fwait das cs jecxz imul nop and test jp movsb push ja imull dec mulb jno push jge mov dec lds je fidivr loopne pop mov loopne mov push jl pop js xlat scas out cmp dec and mov cmc pop aas xchg mov jle test (bad) sub (bad) shll (bad) aas or adc lahf sub das jge out mov iret (bad) repz pop hlt test adc out movsb movl outsb xor lods orl out insl cmpsl rorl mov and test fsubrs sbb push or xor into cld daa shrb or jp xchg aam inc (bad) nop pop imul xlat fldl pop mov pop cmc (bad) aam and cmp push push std decb mov ficoml out enter dec pop subl fs outsl dec daa sub fistpl or lret out out jae insb xor das mov pop jle stc out idivb iret push dec jbe mov cmp xchg and not icebp in inc out lmsw int3 ret cmpsb movsb sbb pop jmp cmp xor pop cmpsb jno sub pop mov sarl cwtl mov pop out xchg xchg lods cli push (bad) arpl mov out or sbb sub mov aas cmp bnd data16 pop stos cmpsb repz int in and in xor ds and mov cmpsl dec sbb xor and mov mov roll (bad) xor sbb pop out ds sarl sti jmp pushf aaa push mov lahf (bad) imul and and (bad) (bad) jmp add outsb push imul jae xor popf or add adc add add add add push add jb jb outsb addr16 jne fs add push add imul decl adc add add add add or popa outsb insb imul add sbb dec outsl imul popa insl insl gs outsb addr16 jae imul add adc or or incl cmp add add add jae popa insb jo outsl addr16 insl insl gs add adc jbe fs imul gs jae jb add add fist mov adc add add push add jb gs add add popa jns add add pop push pop push adc add add add add popa addr16 outsb add push add insl insl outsb jae imul add push decl xor faddl adc incl xor add push or push popa imul jae add or dec outsl imul jae add adc movups add add add jne add push add fs imul jns add adc or test adc add add add or add push jns outsb imul add sbb outsw jb imul data16 imul cmpsb jb jb add adc xchg add add add add (bad) jne gs jo outsl jb gs gs add or push imul jae add adc adc add add adc push fs cmpsb jae imul gs jae add or push imul add seto (bad) or pop adc add add or inc gs jb insb gs add or push jne push add or lahf or add or incl das add add add insl insl outsl outsb outsl insl add or inc jns insb popa fs jb gs add or std add add or incl xor add or gs popa je push or jo popa arpl gs mov push or incl xor add push or push outsl jb imul add or push jae jne outsl popa arpl imul add or incl xor add (bad) add jae jb fs insl jne xor add or jb jbe jae jbe outsb jae add push out sbb popf or push add add add add or inc popa jae imul add add jo jb gs add or or add add add add or jae jne bound jb add pop add jae insb fs add or pop add adc incl add add sbb push je outsb imul je addr16 outsb gs add or imul outsb popa insb insb jns add or or or adc incl sub add adc insb jne add or outsw jb fs outsb fs or cmp adc incl sub or push gs popa insb imul add je outsb imul adc int and adc add add add add fs outsb popa je add or insl imul outsb add add jmp inc add pop adc incl das add add or inc data16 cmpsb jb gs or imul imul add add jne adc add add or inc outsl jb gs insl gs outsb add pop add outsl jo gs add setp and push add push add add add add pop add jns jae jb add add js add bswap or pop add add add sbb add insb gs outsb add or push popa insl mov insb jae add adc fmuls add adc add add add add or push jo outsb addr16 xor add outsl insb imul add adc push lea adc add add add add or inc imul add pop add jne jo je add xorps mov sbb incl sub add sbb add imul inc fs outsb je jb xor add adc or or add add mov inc add inc add add inc add repz add add inc add add inc add repnz add add mov inc add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add inc add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add and (bad) (bad) (bad) incl add add add add add cld cmc inc add add add inc add icebp inc add add add add add add add inc add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add inc add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add inc add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add push add (bad) (bad) incl add add icebp inc add add add icebp inc add icebp inc add icebp inc add add add add add enter (bad) (bad) incl add add repnz add (bad) (bad) incl add add rolb xor inc add sbb xor inc add jmp in push push push mov push mov push pop call push push push mov movl push push call mov movl andl jmp mov add jo mov mov cmp jg movl fildl fstpl fldl cmpl jne fdivl jmp pushl pushl call call mov jmp call movl movl lea push call fstps lea call movl movl lea push call lea call cmpl jne jmp mov add jo mov push pushl lea push call call jmp mov add jo mov push pushl call mov lea call push call push call call lea call fwait push jmp lea call lea call ret ret xor mov mov pop pop pop leave ret call push mov push pop call mov fldl fstpl xor leave ret push mov push pop call mov mov mov xor leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov flds fstps xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call lea lea call fwait push lea call lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov xor pop ret push mov push pop call mov fldl fstpl xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push pop call mov flds fstps xor leave ret push mov push pop call mov mov mov xor leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push pop call mov mov mov xor leave ret push mov xor pop ret push mov push pop call mov mov mov mov mov xor leave ret push mov xor pop ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push pop call mov mov mov mov mov xor leave ret push mov push pop call mov flds fstps xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call fwait push lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov xor pop ret push mov sub push mov push mov push pop call push push push mov movl mov and mov mov and mov mov mov pushl call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov pushl mov pushl call mov lea call mov mov add call lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov pushl call push mov pushl call mov lea call push pushl push call add lea call movl fwait push jmp lea call ret ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call movl movl andl jmp mov add jo mov mov cmp jg jmp mov mov pushl call xor leave ret call int3 sahf sahf sahf sahf fmull add (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add stos or mov add ret add or loopne add lock decb add sub add and add cmp add push add adcb orb add add add js add xchg add lcall add add loopne add ljmp add add sub add cmp add push or pop or jo add jl add mov add mov or mov or add sbb add in or clc or add add or add or add or add or add add add add dec push push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa push je dec xor add add jbe popa inc jb gs popa jb add add fs imul xor add pop popa fs data16 gs xor add pop pop jbe popa push je inc popa je add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add fs imul xor add pop popa fs imul imul popa fs imul xor imul dec jae outsb add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push jb outsb je bound add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop inc dec insb outsl add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa push je inc outsl jo add add pop pop jbe popa dec xor je add add pop popa fs imul xor add add pop popa fs imul add pop pop jbe popa push popa jb jne add add jbe popa inc jo xor add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add add pop pop jbe popa dec xor jns add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je 