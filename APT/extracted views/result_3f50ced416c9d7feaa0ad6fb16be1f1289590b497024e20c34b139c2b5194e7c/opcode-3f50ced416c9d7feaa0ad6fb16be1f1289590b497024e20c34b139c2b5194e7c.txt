jl jl adc nop int mov outsl hlt lahf ret std mov jecxz orl sarb loop jno pusha xchg gs in adc mov cmp fiadd sbb cmc and in loop xor sbb push dec jge movsb xchg sbb aam out outsl pop ds imul xchg ret sbb add insl loopne lds mov dec scas pop adc pop jbe call pop (bad) or mov dec mov movsb dec jg leave cmpsb lods pop mov adc jl jg xor loope pop cmpsb or lret fwait je icebp hlt or inc (bad) or fnstcw xchg jg cmpb push jnp mov sub cwtl (bad) mov xchg cmp and mov bt jmp (bad) push lods mov and stos addl mov mov loope in (bad) leave sbb and imul mov mov mov xchg dec clc push jae dec popf push nop outsb ret xchg dec add cmp fwait pop (bad) mov push iret hlt pop sub movsb sbb imulb add add fadd gs cmp inc popa jle cmp xchg stos mov xor mov ror insb out fmull adc js xchg mov cmpsb mov es aaa mov xor lret popa mov jg mov arpl mov dec inc xchg push dec inc dec dec xor cs insb add adc imul lock (bad) mov mov dec pop repnz push inc inc popa das mov or inc jecxz nop add test mov mov xor fs push dec sti add sbb arpl xor aaa call lods push in adc mov mov and arpl cmp dec xor jae enter dec shl arpl pop pop ja jnp (bad) or loopne or mov jae mov mov ds cli out out mov loop popf ret push sub cli inc ja adc jg aas and mov outsl nop mov mov cmpsb fs mov lock (bad) mov add aam (bad) cmp and or mov lcall and mov sub fdivr xlat jo push cmp xor cmp pop ss lock rolb sbb cmp mov cltd and mov push into and jae mov push xchg into nop ljmp outsb xor rolb adc sbb mov data16 (bad) dec xchg jns aam ljmp pop fadds test imul out inc dec or pushf pusha movl mov movl pushf pusha lea jmp rcrl add dec stos mov sahf xchg lret flds jmp test sbb in adc fistp xor or jge jp pop jmp xchg fcompl out dec push test into jns mov xchg sbb cmp js mov je xchg into outsl das mov call ds arpl movsl xchg mov dec scas xor push daa stos sub mov test cmp stos std mov movsb fwait (bad) enter out sbb jb arpl dec dec push sub and shl sub push bsf or push call and cwtl in xchg dec or lods mov addr16 cmpsl rorb push scas pop mov rorl xchg or jle jb icebp cmp sub mov out fidivl or or or mov test and sbb sub dec mov pushf or hlt adc ljmp dec (bad) repz ret dec mov sub jno out ret int3 jnp jae mov (bad) (bad) stc mov imul and leave in testb (bad) xor das jo sarl and add adc imul shll sub xchg lock hlt lret xlat bswap cmp xchg hlt imul stos les bound lea mov adc sti mov pop in js or mov in jb stos or (bad) xchg in sub mov fisub adc jbe in mov jge cmp jecxz (bad) fldcw xchg in lea xor sub ret add movsbl movzwl pusha pop lea pushf mov pusha mov pushl call pushf lea jae clc jmp retw jl js push movsb xchg or stc pop add or sub imul sub movsb sti push fbld cvtps2pd ljmp loopne sbb xor andl rorb and or mov jo stos int sbb xor jmp sbb mov cld push out inc mov pushf pop (bad) repnz out add daa xchg rep inc pop lret in hlt sub pop and lcall sub (bad) xor xor in int icebp int test add test cmp pushf lea jne pusha call cmc (bad) lock cmp stc pusha stc repnz jmp mov (bad) mov jb sub fldt mov out jno aad sub adc adc inc pop lods or in jl ds jno aad clc push js hlt push inc or adc ret xor pop popf rcl adc int3 pusha negb sub sbb inc bnd xchg nop arpl push rolb lods loope in inc cld shlb lock out mov in mov sti sub enter xchg jl dec repz lock les hlt cmpsb sbb add and jns leave imul fldcw mov and lea jne pusha bts mov inc dec sub call movb and jmp shlb cmp xchg rorl mov fsub mov std (bad) test pop pop or cmp cmp adc cmpsl mov rcr mov mov (bad) pop insl mov cmc push lods and push imul (bad) shl jnp xor addr16 pusha sbb add (bad) cmp neg loope icebp loop repz jo lcall mov and mov scas pop mov adc cmp lret xor je lea jo jno ljmp les add sub push mov push (bad) dec sub sub cmp hlt adc sarl mov pushf add jl mov mov mov sub cltd mov fwait orb fwait sbb leave and test rcr roll jno push (bad) xor push lret lret jb cmp sbb popa cmp into lods cli fwait xchg xchg mov bound cmp inc ds aad sbb sub ljmp outsb je pop lds fimul sbb insb pop shrb ret ja lock (bad) jno ljmp push inc push test test (bad) test les lea hlt lret inc cli sub lods adc jl mov daa mov out jns xchg adc push dec (bad) je sub dec sbb jo mov std xor or test scas jo or adcl hlt sub jno cltd xchg mov (bad) js adc aad aas aad fisttpl sub ret mov aaa fistp xor jl pop fwait jno js jb add addr16 insb add cmp leave dec (bad) sub mov mov jns (bad) rorl or xchg sbb (bad) mov das (bad) jle (bad) imul (bad) scas jno jmp call bt push add push call call xchg xchg stos clc out inc fwait imul xor jge mov dec xchg or imul dec sbb add xor stos add add adc test push sub cmp dec xchg (bad) mov stos ljmp imul gs pop and insl mov loopne mov mov xor sbb push mov (bad) sub adc incl pop cmp aad ja jg (bad) dec adc or cmp dec (bad) jl gs je pop sahf jno call fnstcw idivl aad (bad) movl jno jne arpl dec adc in frstor pop xchg test loop scas icebp fs pop aaa or sbb andl pop outsb xchg sbb fsubr mov lcall mov inc or imul cmp dec and push das xchg mov es mov sub inc fwait xchg repz dec out push xchg push dec and and out lret aas cmpsl cmp cmpsb fbld bound popf mov ret leave ljmp cmp sub cmp or out popf cmp pop add sub call stos mov nop outsb xor jo and das iret movsb fiadd push inc jg inc pushf lods call pop jbe repnz rolb das xbegin sub xchg lods aas subb mov mov cmpsb movsl or enter push dec shr mov push add sbb sbb sbb lds int3 fnstsw sbb push adc pop mov cmpsb cwtl test dec loop out cld jle movsb xchg and test adc xor clc lret enter cmpsl sbb push pop or pop inc pop into nop cmp add mov stos xchg mov out (bad) call push (bad) xchg push mov jo icebp dec inc jle jns (bad) cld lds ror test daa pop mull les outsl inc mov insb fwait inc lahf and dec ljmp mov loope (bad) fsubrs xchg gs mov or jno jns outsl ds ret cmp or mov pop jp push cwtl lods in mov push fldenv push sbb jmp mov cmpsl pushf out xchg push mov ret mov add or push repz adc pop aaa sti inc aaa sub push ss in xchg jmp pusha stos xor loope jmp fdivrs jno in movsl lahf mov lcall cmp jb movl xchg call mov adc xchg push leave cmp enter dec pop dec ds pop loopne (bad) pop out push cmc cmp pop mov cmc jns mov and mov inc mov out or pop jmp test sub cmp das mov cmp xchg call and pop add sub lock outsl adc aam cld movsl stos cmp fbld xchg sub xchg push inc sbb das inc je xor lock push jo dec nop outsb push scas faddl (bad) mov push hlt fwait out dec fwait andl mov jb fwait lods lcall cmp xor pusha pop dec fwait and add adc push pop and cmp push or and pushf in (bad) push or outsl iret iret iret iret iret mov clc test adc (bad) xchg call in es cld xor pushf push fidivl dec pop popa jbe ljmp les sub xchg jb mov pushf fbld mov cmp push adc mov fcompl cmc leave xor repz push sbb popf loopne sbb and inc jl enter (bad) cwtl out lock dec pusha fist pusha jecxz outsl das scas (bad) mov ds xor mov pop inc cmp jno in bswap push inc pushl or inc push int3 jl mov rolb in fist bound jae cmp cmp stos and movsb push xchg dec (bad) mov icebp insl or mov sub cmc push clc cmp cmp sub es push sub pop pop xlat dec pop xor push dec jmp call add jecxz mov dec divb sub (bad) inc jnp adcb lods std and add jp mov dec pusha dec xor test ja enter push mov lds mov clc out sbb (bad) popa test mov inc or fsubl daa cwtl pop addr16 push jae mov in notl negl cmp add jp and jge add pop cmp repz test jno mov mov hlt jbe test mov andb lods shll dec jno xchg dec xchg cs xor dec mov add or out rcll (bad) mov push jmp mov lcall hlt xchg std inc int3 xor pop repnz pop jge inc sbb push out mov lret ret lea call push push push lea jmp adc push sbb (bad) xchg rcrl mov lock fidivl into shr add jne pop cmpsl lret mov xchg sahf xor push movsl sbb inc xchg pushf mov lods push cld inc addl and or mov (bad) in add inc push jns pop outsb add test scas mov jecxz dec xchg mov dec test into xor repnz in xchg push nop mov jbe dec xor inc icebp dec pop and fmulp push fiadd mov clc test xlat inc pop inc adc dec je xchg inc lcall mov jno loope stos adc enter fs xchg not push lods call cli das adc add in iret das sbb jae sub (bad) sbb xor insl adc inc adc adc repz pop jo out mov mov mov jno fs js fwait loope sahf test adc cmp aad add repz pop pop stos xor popf data16 call xlat push out push add aad in jl cmp dec add imul cmp cli pusha aas stos xor rcl into mov mov mov pop insl mov xchg adc add sti (bad) loope sub mov (bad) push dec push imul lret in push xor pop lea jmp jge stos stos mov xchg aam sbb adc jg jnp cmp scas xor push mov dec das xor mov xchg lods xchg sbbb push cmp inc push cs cmpsl test adc pusha outsb rclb in inc pop sbb dec mov repnz lea xor cmpsl mov mov push pop loopne fwait push fisubrl testb push test mov stc cmovg cmp popa jbe pop outsb mov push jecxz lret in add aaa mov and in push push sub (bad) mov sbb das inc loope dec fs cmc movsl xchg pushf rclb mov mov (bad) mov pop popf pop jl dec jae sub inc bound mov mov out sbbl mov scas shrb sbb insl jl xchg jae pop loop es (bad) movsb fwait sub fist jl xchg jne pushf stos pushf mov pushl lea jmp pusha dec stc push cmc call aam push and popa ds ret mov or adc or outsb xchg sub inc flds jb pop mov in xchg or scas pusha mov int3 frstor bound mov mov (bad) popa pop inc jge (bad) fidivl jo jo cld mov cmpsl lret out out mov mov lock fisttp xchg inc add aad pop pop gs and pop cmp pushf mov push lret hlt sahf add (bad) cld mov and stc push mov mov jmp mov sub out xor add fsubs insb out nop mov xor dec add push jns je insl push popa jb insl gs jb dec outsb outsw inc add add fs imul add call call jmp inc mov add add dec dec (bad) shll or pop mov dec enter push scas or xchg dec cmpsl pop cmpb sub fbstp mov (bad) xor aad hlt xor in cli and push or fisttpl and fist subl stc cmpsb mov jp jns shll in lret cmp into nop sbb push pop pop aaa or jecxz xor cmp out jno fisub movb popf jmp and lea jmp jmp call sub push bt stc bt cmp lea jp pushf movl lea ja clc jmp xor inc mov mov push out fcoml push loopne xchg stos stos mov fistp (bad) (bad) or add stos jmp fldcw jbe dec stos xor insl leave dec (bad) dec mov jp inc dec je xchg dec ror rcrl or mov lock jb lahf movsb cmpsl sbb and test popa push mull push adc arpl jl,pn (bad) xor sahf (bad) cld fucom add dec push xchg push ja pop mov or mov sbb cli inc addr16 out add inc dec xchg cwtl cmpsl dec jb jg jo imul sbb inc pop add or sub ljmp movsb mov insb scas ret cmp test clc inc jecxz mov aaa stos pop fnstenv jg or xchg out add adc pop daa or scas dec mov (bad) cld or mov pop add sahf and arpl or jae xchg in sub inc cmp sarb adc xor xchg stos aam rcll and mov dec scas add mov and mov inc jbe add mov add lcall insl sbb xlat cmpsb fsubs mov loop fs ljmp pop gs push jne stos push mov push imul out (bad) pop adc jbe stos mov repnz icebp adc mov jle jno fsubrl xor js leave push call add inc gs jb jns outsb jbe jb outsb insl outsb je insb outsl arpl lea jb push cmpb pushf lea jne add and dec mov jmp lods xor fild xlat sbb mov mov push sub std sahf loope shrl push jp mov add xor bound and xchg js addr16 roll jne and mov ret xor clc cmp pop call fadds test jp xor mov jmp or rclb xchg jae ja js jmp (bad) repz inc shll pop mov lret loope mov call test mov xchg add cld add rcrb (bad) push ds out push jmp test or push (bad) dec mov jae inc adcl pusha mov xchg xchg popf (bad) (bad) xchg cmp in cmc fnstcw gs cli inc sahf and xor jge xchg leave aad rcrl loop push fsubs out in adc imul sbb (bad) decl and aam push xor sub test pop mov shl dec addr16 test sub inc sti xor add repz dec repnz cmp inc jmp hlt mov test mov dec hlt add xorb (bad) (bad) sti push or stos push outsb pop push repz out fcmovb cli pop out repnz test inc pop (bad) xor mov cmp inc jl pop dec sti scas inc dec (bad) insl cmpsl cmp push adc mov sub push mov adc mov cmpsb sbb popa fimull out fs out xchg jle ljmp pop leave xchg sbb aas jns mov inc dec push loopne rorl pop fwait rcll jae pop fisttp cmpsl lock pop (bad) popf repnz lret push sbb test mov imul push incb sub xor xchg sbb sbb sub jo and and fnstenv aad (bad) mov rorl movsl jmp mov adc shr movzbw mov jmp dec add push mov mov mov mov jbe bound ja sbb in adc push jo push stos cmp repnz data16 aam aaa mov lods adc sub xor or pop pop pop loop or push sub aad lea xor ljmp push mov popa lahf addr16 inc repnz xbegin orl and mov imul push (bad) mulb mov mov sub (bad) aaa jl psadbw mov jno fcom mov pushl lea jae pusha pushf cmp mov pusha call je push mov mov jmp mov rcll sub pushf push cli loope xor adc sub dec mov in fcoms bound xlat jge enter mov aam (bad) and enter inc fstl inc ret outsb xchg adc pop mov cmpsl xchg inc sbb loopne int3 xor xor cwtl jo jle cltd in push add mov sbb mov dec mov mov push into icebp inc fsubrp jno xlat and push push mov enter ror dec lea mov xor popf inc icebp outsb sub sahf mov mov cwtl cmpsl push mov aaa (bad) (bad) cld or fisubr sub xlat xor icebp inc dec movsb mov enter adc ss or mov jno xlat orl pusha lea je pushf jmp imul jnp std inc push mov push mov clc (bad) cld jb cmp ds das mov jae jno loopne in shrb sub ljmp iret adc (bad) out add popf sub xor lods cmpsb sti or lods jns sub daa mov push push jnp,pt je mov jge sub lods mov mov cmp xchg ljmp icebp add xchg jmp iret fs out mov ss and mov cmp enter lock shr seto insl rorl and sub dec les mov sbb rorl loopne in xor pop adc (bad) mov fnstsw movzbl pusha neg mov mov pushf cmpb mov mov lea jp jne sbb cmp xor lea mov pushf pusha mov lea jmp inc xchg dec out mov xchg into lea dec mov xor notl mov pop sbb lret push pop push or clc and xor cwtl mov mov out stos or shl ret int3 repnz iret out xor scas (bad) jo mov jp outsb push mov jg pop fcomi sbb lret xor sub cmp sub movsl sbb mov jb gs jae jb daa dec loope inc add test sub ljmp mov add dec xchg dec pop mov inc mov (bad) jg pop insb cltd mov int3 pop add (bad) pop and xchg jns push fwait hlt adc add add push neg not mov cmp movsbw neg sub or not pusha bsf mov call pushf pusha lea call jmp add pushl pusha lea jmp mov mov push imul rorb mov scas iret loopne cmpsb subl nop ljmp sti pop mov sti movsb rorl mov cwtl ja lret call pusha mov cmp xchg lcall fsubs repz adc xor or std in out xor movsl push ljmp pop xchg outsb xor push loope inc jns push pop addr16 jno jno aam adc and dec cld movl pushf lea jae call sub pop inc jg xlat sub data16 push cmp popa mov mov xchg ljmp int in mov mov mov iret cmp xor cltd add in (bad) aaa or jnp jbe ss popa mov daa in adc mov sti dec hlt dec pop mov add out sub or pop sbb popa push in adc push cltd add test shrb dec jecxz cmpsb (bad) jbe adc pusha call dec xor cmovg ss sbb add jno shrl add inc insb jne push insb jbe jb popa arpl add jecxz fnsave jns or (bad) cmpsl (bad) pop push mov dec mov and add aad sbb call xor xchg jle out (bad) loop fidivr cs dec pop aas test imul adc leave cmc push outsb push popa ficoml dec add jbe lret loop dec push dec push mov in jge mov mov mov pop mov push ljmp fnsave ja jnp cmc (bad) and xor pop loop stos aad fisubrl idiv or movsb sti (bad) fsubr jno shrb fs ja dec and lea je call (bad) mov test mov mov lods push test mov fistpll push dec out pop adc ret dec scas mov dec xchg push mov insl dec xor inc xor xor inc jl mov mov fwait push rorb loope std movsb cli pop jecxz or jno shlb shrb adc inc out sub in push loope test or nop cs adc xchg les cmc push add mov out inc lds gs cmp adc incl int3 pop fstpt out pop cmp mov sub rcr add jnp int3 rol test mov push push fstps pusha jne mov fxch jne cli xor mov inc and mov jnp jge into nop test ljmp je imul mov add notb and push (bad) outsl jp pop inc pop and sub (bad) je pop out inc sub dec push sub or cmpl mov repnz imul outsl outsl ja adc pop sbbl sub sbb in shlb loop shl ja push lods jo sbb fs sbb ljmp cmp pop (bad) xor push sbb mov and in fucom and sti sub pop xor lret mov mulb push repnz lock mov xchg iret inc stos je into mov mov xchg mov jb movsb pop xor inc push insl jle shrb cmp in mov fbld sbb aas mov mov mov mov aas fwait inc mov add dec jmp test lods mov xor push loopne (bad) xlat add mov call mov shrd mov clc pushf and call imul jge push in (bad) (bad) ror test jbe dec in and je movq daa (bad) loopne (bad) fadds call adc mov lcall push push test (bad) lds jp out xor lods mov lock lods stos mov mov inc sbb and cmp pop repnz push dec jmp pushf loope out pop addl fld (bad) xor mov flds xor pop movsl add test in repz cld jle xchg sbb push vpmaddwd push sub jno iret ror mov lods jbe cli xchg ret add push mov int aas movb adc cld arpl xchg dec mov lods sti adcl scas sbb mov mov mov mov pushf mov pop gs mov cmpsb fs sbb enter out push ljmp adc aad rcll ret test aad jns pop add ret enter jmp inc stos pop (bad) das pop cltd dec push aas jecxz (bad) fnstsw push out repz mov std ret cld and jb stos push enter into cmp push pushf lea je setbe mov cwtl cwtl push movzbw lea jmp jne movzbw mov push pushl pushl push lea jmp pusha pusha push rep not mov pushl push lea jmp lea jle pushf lea jne bswap jmp jmp lea outsl mov inc mov mov mov pusha jne pop pop sub cmp and xchg lods (bad) and jmp or pop push sarl jno out pop mov push add xchg dec add adc sbb cwtl or sti mov fwait push push ret shrl dec cld jecxz jmp inc aaa adc aam and xchg out negl add or push repz cmp xor xchg dec jb jp mov loope incl xor aaa cmp push xchg and dec hlt add mov sti and sbb dec (bad) pop fnstsw cld pop jmp pop lds cmc mov test call jge call aad adc mov enter push lea jne pushf mov mov pushf lea jmp lea jne call jmp scas cs jle xchg test dec stos adc ficompl sub mov jle fcoml sub fiaddl sti add mov pop xchg adc test addr16 lods cmp inc cmp jne adc rcrl mov mov inc fsubr sbb mov ficoml fstpt scas sbb xchg dec xchg sar or pop pusha jne inc xchg out js popfw rorb fldenv addb xchg leave jbe pushf dec idivb clc adc pop inc sbb dec adc add mov call inc pop cmpsb sbb in repnz inc clc sbb push ret call pop sbb mov inc sahf xchg stos ror mov clc push or aad push jno,pn bound sub push cltd pop jmp test ffreep aas or dec xchg mov gs lcall add sbb mov fcmovnu in (bad) imul icebp xchg adc pop (bad) jle (bad) in mov inc jbe and or mov or xor test nop add or jbe clc jne nop xor pop aaa xchg mov push jecxz pop add push das jno lret in lcall test mov ja xor pop inc pop dec mov inc lds lret inc ret pop pushf stos adc add and test mov mov fbld mov movsb mov imull cmp jp test je jl jae push faddl adc pop cmp jl fs pusha (bad) mov imul add pop fwait inc push xor lock clc out and popf hlt cmp sub sbb cmpl scas scas cmp cwtl xchg lea jns adc cwtl (bad) fcmovb and mov mov cli out out add lret add xchg sarb xor imul dec inc xchg stos enter xchg or pop add jae mov cmp sahf (bad) jg lcall loope icebp sub jbe frstor fisub test jmp sarl xchg jb pop xor ficomp in jl lcall dec push pop push popf fstps aas adc out mov xchg mov pop xchg bound jg xchg inc cmp lds aas mov xor mov xchg or (bad) leave jg pushf movl pushf pushl pushf lea jbe push push lea jmp pop sbb cld mov fisub test jns jno mov dec rclb push shl lock (bad) ror (bad) dec mov fcmovb inc int3 cmpsl xchg mov jmp sarl dec push xchg mov sub sbb mov cli loope push jns lds jo add mov pop push xchg mov test repz dec or outsl inc push or adc and pop shrl pop in int push movsb (bad) out loop jmp sti xchg or cmc mov repz sub sub pop stos xchg movsl jno leave pop aaa rcrl aad add cwtl jo shr inc sbb cmp and lret inc pop stos adc mov and xor scas outsl jg ja stc mov push push int3 lahf fist sub jl pop mov cmc les mov aam pop cli repz gs xor cltd lods out mov sarl dec inc add lret push lea popa nop into mov test mov cltd pop push sbb pop pop cltd lds jno cmpsb jle jecxz xlat pop mov mov insb repnz jge push movsl sub call and jnp mov movsb mov or arpl mov adc and push xchg int3 repz bt add call xchg jbe push push movl lea jge push pushf lea jmp lea jbe xchg sub mov bts add shl (bad) icebp push mov bswap btc dec add sbb movl and jmp call je sahf fs jge repz or push icebp dec jno xchg sub cmp notl jmp mov and loopne in lods fisubl inc xor jle mov iret fisub cmp adc add jnp ja dec pop icebp stos or add in les enter insl add jo arpl fisubr pusha ds lods pop aas xor xchg fnop rorb insb add cmp int cs aaa js mov mov or push clc push dec lock sbb int3 mov fsub fild jp cwtl out xlat dec lock or aaa es mov cmpsb mov inc jle push imul sub mov jg mov or jbe mov roll mov xchg jmp out push xchg mov xchg mov and dec mov adc push add push mov pop shl fwait push cmp out add push cld jecxz add or pop and or push mov add fidivrl lea jmp pusha clc or lea jnp jne pusha mov call movb pushf jmp aam (bad) in ror mov lds scas mov pusha fistp jmp stos repz jmp stos hlt cmp iret adc pop insl outsl push pusha mov xor xor mov jno dec xchg add cmp lcall pushf mov fmul pop cmp loope js add imul sti les jl test mov adc add outsl mov xchg mov fbld or in (bad) enter add das adc push aaa js fldl2e adc js pop fsubl outsl add jno (bad) cli les (bad) das insb adc arpl add and cwtl pop pop pop int3 rep repz pop jnp add pop inc push mov mov ret jecxz (bad) cld xchg or ja mov aam jnp sub nop jnp xchg or les cmpsl add xor and push test cmc dec jp push lods mov cmp add mov fs ja pushf jmp pushf lea jae clc btr sbb bts mov test mov and mov call pushf neg push not push call jmp mov mov push pushf mov push mov pushl ret xchg add inc push nop dec cmp mov cmp (bad) icebp into push xchg jl test cwtl (bad) test in repz cmpsl adc push push stos jae mov fistp pusha jne jecxz xchg cwtl mov and add int cmpsb out jno test cwtl ja or sbb and aas sahf pusha jno idiv in jle adc and fisubl mov xchg push push xchg sbb mov les aad fcmove adc je pop (bad) stos hlt xor les xor call add inc outsl insl insl popa outsb fs imul addr16 add jbe cmp out repz xor imulb out inc js jo jo push jb movsb lds out outsl out add fs xchg push jno sbb scas jbe fs xchg test frstor fcmovnb sub arpl fcomps pop and pop inc faddp fidivr cwtl out dec xor inc dec iret jl nop into movlps (bad) mov inc enter clc out pop push movsb out cmp stos hlt sahf add sbb pop cmp mov xchg mov stc sub sub pop pushf inc test in mov sub aaa nop dec push dec movsl cltd sub mov xor fs jne add test mov cmp clc pushf cmp add pushf pushf jmp jge cmpsl shrl push jo fs push mov (bad) adc negl das (bad) jnp jle (bad) je out fwait bound sti jmp les xchg dec pop cmp lea xchg ljmp sti das std jb stos and aaa in repnz push sub inc mov ret fsubl mov xor das inc (bad) dec cld sbb xchg lahf ret sbb jns into push lret jmp (bad) xlat or sarb in jno jbe jmp out inc pop call xchg lods adc cmp insb push mov xchg cmp incb pop jno ret sbb mov mov xor pusha push mov imul fdivr rcl dec and std push jle les pop xor push lods addr16 or arpl add dec jno es and xor pop out and fsubs and ret fstpt inc ror icebp add add lods cmp iret out add flds sub push (bad) cmp inc dec (bad) cmp lret mov call jbe movsb lahf inc dec (bad) into push mov arpl jecxz loop add and imul adc std mov mov leave jne jbe jnp pushf es sahf add (bad) (bad) cmc leave and stc jno rcrl jns inc in add cmp pop adc in push aad dec mov push mov and (bad) dec adc add jg sub mov scas sbb stos jne es ret insb sub mov xchg push jle fwait add test fnstsw and lock adc sbb push loope add xchg xor pop push jmp push jle stos xchg arpl stos xor dec testl bound inc mov xchg adc mov popf inc push jg sub adc popf sbb (bad) (bad) mov xchg aas cmpsb jno pusha into nop add ds (bad) leave mov imul in adc adc push bound xor adc cli in lock push arpl xor adc or popa mov sbb push pushf push lea jmp movsbl push sete lea mov lea push push lea mov movl jmp push jmp lea call pushf lea jne lahf setge mov push mov pushl lea jmp xchg movsbl movl mov lea lea jns push push movl push pushl popl push pushf mov movb pushl ret icebp sbbl sti or adc test addb or pop sbb xchg popf (bad) fadd int3 jae scas xchg cmpsl (bad) int dec dec jae mov add (bad) mov mov sub das jo arpl sub fdivr rcll jne mov clc movsb cmp popf jo (bad) fcomps std adc (bad) adc mov fdivs sahf sub jb mov dec mov loopne out inc and stos repz jp imul push xchg into lret sbb adc xlat cmpsb fdivrs in mov scas mov ret inc jb mov push sarb outsl xchg mov or test add push stc cmp jmp xor js mov jo (bad) jb jne inc hlt mov mov loope scas outsl inc fwait daa xchg or sbb cmp aaa pop pop jge push cmp pop rclb std cmp xchg jg rolb stc cmp xor sub add push mov pop movsb adc ret push push js inc mov adc sub outsl scas (bad) sbbl cmp xor jg rcll sub push dec push inc cmp push imull mov lods and call or pop imul jno mov cmp or pusha pushl lea jne xor rcr mov cmp call das pusha mov jmp int out or dec adc cmp out mov rcrb dec arpl rclb mull aaa daa push mov ret movsb lock out repnz lds pop test fadd fdivl inc mov pop pop sbb mov or pop mov imul cmc push jae ljmp idivl and leave test pop daa mov lcall cmp xor lock cmp imul adc mov push enter jecxz mov jno mov setg pusha mov call pushf jmp clc cmp push pushl pushf movl lea jbe or sub xchg cmp mov sbb add shl movsbw mov xor mov clc shrd add sub shr rcr bsr ror shl mov rcl cmp add movzbw push mov lea pusha jmp xchg jb add sbb out sub push mov sbb dec repnz and scas sbb sar loop cmp icebp faddl inc fsubs and outsl addr16 and mov out call mov cmpb jecxz cld int dec je dec cmpsl adc mov (bad) aaa jmp mov inc dec jl setg pushf push xor or jae pop movsb icebp mov fidivl lret (bad) fdivs cwtl push push in pop out sbb lods xor inc push imul push mov rcl shl cmp dec xchg xchg pushf mov sub pusha sete sar mov pushf pushl test test mov xor shld sbb jmp nop in push lret divl or sahf inc push pushf mov call xchg sub xchg shr mov or sub test test (bad) xlat sub xchg std and ss jb rorb sbb xor adc mov jmp mov sbb jge icebp adc jmp mov jno lods pop jl fbld pop xchg lods pop out sti jecxz or inc cmp sbbb add loopne rorl daa push sub push stos in movsl test pusha call mov test bt sub jmp scas mov adcl decb (bad) test xor mov cmpsb mov pusha mov int3 push sub aas push fbld inc int out das movsl sbb fsubrs imul xchg fnstcw push mov inc fsubr mov incl mov loope repnz xchg dec mov and cmp imul ret push xchg inc addr16 cltd dec repz push rcl adc dec shrb push mov xchg jmp dec adc mov cltd sub pop add mov sarb dec jns cltd jno mov lods les sub cltd leave rorb sub loope inc and and and das inc inc dec sbb cli sbbl mov mov iret into aaa mov test mov js popf sub push loopne adc push fcmovnu dec repz sbb xor lds xor faddp or ror and mov push imul aas jmp (bad) sub loopne loop (bad) mov cmp enter in in cmp sbb sub fadds data16 push jne xor ret cmp adc test mov push sub call loopne outsl push and jns mov fdivrl mov imul xchg out fadd cmp xor jnp test add push dec mov push sbb add dec mov mov mov or ljmp mov fistpll xchg or sub daa sbb clc pop rclb out adc sahf mov xchg test call pop mov inc ds xor dec pop dec rorl loop (bad) pop (bad) adc lret jl sahf mov stos repz (bad) std jmp pop cmpsb sbb (bad) sbb mov pushl popl pusha pusha pushf pushl ret pusha lea jbe push sub pushf rcl push sbb mov xadd pop sar dec mov xchg ror add xor xchg clc shr lea rcr test add mov adc clc rcl add movzbl lea pushf call movb lea call pushf push call lea jae jmp jmp or icebp add pop fsubrl mov pop aaa lret dec ljmp (bad) cmp jnp sbb jmp mov xchg mov in jb xchg dec xchg jmp mov test out es test inc add push cld test rclb dec aad push inc xchg mov mov cmp (bad) mov popf mov scas mov std jmp mov movsl inc cmp jo add mov xchg aam sbb in adc outsb shr mov sbb push lods adc leave xchg or fnstenv movsb cmp mov or dec mov jge xchg test adc inc push iret jo or rcrl popf xor push xlat push sub in mov mov jecxz rdmsr jg mov (bad) jg jecxz mov addr16 dec lahf and push lret xlat pop jecxz cld cmp lea xor pop out push jb jmp cmp lods gs cmp push jno mov rorb call lahf bswap mov push push pushf pushf lea jmp scas jge jns insl jno mov stos aad or xchg lods adc inc rcl xor jae in dec clc sbb or pop jp jb stos lods ror rolb cmp jb addr16 push sbbl sbb (bad) aad and xchg dec in movsb xchg fwait movsb (bad) xor rclb xchg mov xchg stos int mov inc pop cltd insb loope ficom das pop push nop push (bad) mov faddl leave je out data16 movsl mov sbb sub out in fxam add pop (bad) xlat test in jno mov mov mov int insl xor sub ret mov jne cmp mov fbld mov mov ror mov shrl rorl dec loope dec fcom mov cmp (bad) (bad) cld adc hlt adc lods lcall rcrb loop inc aam dec rcll je out xor dec push jns fwait and add imul jecxz cwtl ror out adc repz mov dec idivl lret xchg movsl dec adc mov ret in sbb add push testl xchg lds jae in jno mov push rcrb add loopne add pop add adc or sbb sub pop add xchg adc adc sbb xor pop add add sbb cmp pop add icebp adc and sbb inc rcrb add push adc sub sbb dec rcrb add adc xor sbb push rcrb add loopne add add adc inc loopne add add push adc dec loopne add add pop add add add loopne add add sti pop add add add add add cmp and insb loopne add add add add or sbb xchg rcrb add loopne add add add add mov loopne add add sbb sarl ljmp cmp jb ret dec xor sub scas ror (bad) add popa pop push imul in sbb jb (bad) test lods pop int pop xchg push jae xchg loopne mov jecxz js pop test (bad) std rorl cld or inc int3 adc sub lds sub pop scas scas adc aaa sub sbb test sbb sbb jecxz fs repz sbb mov (bad) fsubr rcrl and dec inc jp data16 mov cmc push movsl shrl mov mov and pusha mov xor push sarb rcl ret sub add pop push add mov xchg cs data16 sub xchg popa pop pop xchg mov ja repz inc rorb xor pop pop and and or dec sarl pop adcl or pop xlat insb je sub cmp sub xchg dec or decl pusha mov add stos cltd add push scas push addr16 push sbb loop lahf loopne push movsl (bad) aaa xorl sub mov aad fisubrl jno mov shrb scas aaa cmpsl mov add scas inc ret loope pop and sub imul mov push movsl rolb mov sbb outsb jg jl comiss mov (bad) jg mov data16 mov out add outsl das daa sbb dec dec push lods jb cmp fcmovbe lods cmpsl inc addl xchg dec mov push pop aas mov cmp push jmp pop js mov add dec sub xor push insl and and jmp push xchg jbe out jo aas fbld mov jge mov cmc test cmpsb sbb loop std mov int xor xor test stos inc shrb inc xor into jle stc push sar add test jbe xchg xchg ja xchg inc jo daa sbb jg cmc push push adc cmp sbbb inc sbb dec push sub cmp jno mov sub shll dec push mov lds cmc pusha call inc xlat mov pop xchg aad push dec fiaddl mov nop and data16 repz cs push rcrb es xchg jno pop test xor fiadd out push (bad) lods adc jne lret adc jle insl mov inc jl js into xchg xor in and inc sbb inc fwait in mov out (bad) fbld add sarl jns ret inc cwtl fld dec mov out inc fcompl xlat jg jb add scas adc test cwtl movsl push add (bad) xchg fdiv scas mov jnp ja outsl lock sub add cld out jnp daa clc out lock sub call mov fcomip enter xor gs aad movsb mov rol sbb dec xchg sbb ffreep (bad) iret loopne ss pop (bad) leave push xchg lock and cld mov (bad) loopne ja js jge lods xor dec adc movsl jle ljmp adc sub sbb adc jb leave sub jg adc test sbb push add lock push mov jnp pop imul cld and inc push or outsb scas mov (bad) (bad) mov test pop outsl das bound push and nop outsb in push mov int add data16 mov decl repz mov cwtl dec nop mov (bad) fiadd push or loope jbe sub dec xor adc js stos lcall out pop xor sbb dec test sub pusha mov pop pop mov push clc xchg xor addr16 adc xchg lcall repz std add add cmc ljmp sbb inc xchg jnp arpl dec std jg mov hlt lret pop out jmp hlt js xor imul push sub out adc or sbb scas outsb and clc add bt test jmp push cli inc lods pop inc cmp sahf (bad) mov xchg imul fistpll jnp imul jae dec jg xchg stos mov pop lock iret loopne sarb and xor cs sbb push test enter test (bad) cld daa clc cmp outsl out js into mov pop aas cmpsl sbb xchg sub stc push or mov cld adc pop lcall mov xor aas mov imul nop enter pop fs xchg xchg int3 test mov cmpsb outsl inc inc in mov fcmovu jecxz sub add or add fninit hlt loopne pop mov pushf mov in pop sub fnstcw mov jecxz stos aam or add test ljmp lods ret lock xor and sub inc and jno js xchg fiaddl jne lahf mov (bad) mov sub test xchg in btr jae fwait and push lea inc sbb popf sbb imulb xor pop and fild test aas decl lock pusha sbb jl push xchg rorb ja jb (bad) xchg pop sub xor pop pop pop xorb add std or xor pop sbb lods cld xchg mov and jb push inc push inc popf dec xchg sub mov out push mov push rorb dec push daa inc sbb shlb lods add out stos cmp mov or inc sbb xor mov mov and ret shll (bad) mov and pusha lods test das out mov aam dec cltd and cmp jno jnp cmp je xchg xchg sub cmp add adc lock sbb incb pop dec rcrb cmp cmc ss mov adc js xchg push cmpsl push mov stos shrb fwait out jno lods push xorl popl bswap mov cwtl cwtl movl mov movzbw movsbw lea pushf call cmpsl test mov add push rorl cmp stos cmp nop scas lock ret idivl inc sti dec leave popf mov loop fdivl pop fs mov dec outsl jge test mov popa mov scas push stos xchg pop mov jbe sbbl adc xor pop outsl scas insb lcall cmp repz in xchg out (bad) or dec or (bad) in jmp repz cld push jp pop pusha iret mov lret jae dec dec jno mov cmc call sub mov push and push outsl jmp push test add pushl cmc movzwl bsr dec or mov cmp movw pushf stc add movb bt call movl pushf movb movb pushf lea jmp clc test pushf or pusha jmp pusha lea call jmp bt pushf stc ror jmp add pushl mov not mov pusha test mov call adc lea je push pusha lea call pushf call push inc call ss je pusha ds jno xchg push mov daa xlat jmp dec mov sahf aaa sub mov imul pop mov repz jbe sub pushf imul dec scas xor inc or cmp cmp jo (bad) (bad) call js fbld sbb pop push ret jecxz fiaddl (bad) mov sbb sub add lahf xchg scas flds xor xor adc stc cmp mov mov jae es mov rcrl leave xchg cmpsl or push pop inc adc xchg pop js mov test pop andb push jno test stc shl call add inc js je jb arpl jae arpl movsl scas xchg shl pop inc push xor mov leave cmpb lret adc mov mov mov push inc cmp xchg test sbb data16 scas jb dec insb fsubs adc loope stos or in movsb jnp jg push out mov mov or shrl xchg mov outsl dec enter cmpsl pushf pop daa cmp xchg daa pop dec jmp xchg into xchg and pop ret mov test mov test xchg jnp out mov pop jo push int3 fnstsw outsb sbbl lret stos scas out push dec mov dec les pushf xchg int3 scas mov js adcl push enter stc test test pop in jno test lret dec loopne push aaa outsl hlt or lock test jnp scas nop out scas rcrb and adc lods mov add xlat pushf hlt popa xchg dec mov push aaa add mov sahf std (bad) cmpsl mov fistpll xor pop es mov rcrb (bad) sub cld fsub mov rorl bound sbb mov inc push xor mov pop rcll or mov test das push arpl xchg pop movl mov xchg jns ljmp mov sbb popa and sbb loope cli gs dec out pop pusha fisubl testb push negb addb mov mov dec (bad) sbb sbbl pop mov dec xchg in cmp mov rorb sub cmp cmp lret adc aas fist jp pop pop mov inc pop clc inc pop subl jo iret loopne into fcomip leave lea jo movsl fldl2e mov addb mov and pop fwait pusha in mov mov jmp sub scas ja mov fnstsw jo mov push adc daa lahf pop cli fs movsl sbb nop movsl cltd mov pop inc cmp jno cmpsb outsl and ds jo cmp fimul mov dec jno mov lds icebp inc sbb outsl lahf lahf mov mov mov jne nop dec test test or aas sbb cmc dec adc mov adc pop xor cld and inc std add into add inc mov mov (bad) ror adc pop jnp jbe mov xchg test mov (bad) stc or pop sbbl data16 scas mov inc das sbbl lock sbb jmp add cld cmp jl pop imul fucomi add dec movsl pusha (bad) dec jmp mov movsl sub jg push clc stc rol clc clc neg stc jmp mov push call cmp mov int int loope add iret outsl andb inc push das mov inc fistpl jne xchg or cmp push pop pop xchg out (bad) adc into mov mov inc jle push adcl fwait outsb add jnp aad cmc lcall push mov stos shlb repz xchg insb jge (bad) repz mov leave jbe sub or adc jno mov jmp ds mov inc or inc push mov jbe adc xchg ja jns push loope dec rcr mov data16 out enter jmp arpl fstpl cwtl inc push cmp fadd mov enter dec inc js clc call xchg dec mov adc cmp and ret movsl stc movsl stc movsl sbb dec xchg xor mov aaa xchg notl cmp ret dec mov xor das imulb adc in and cli je sub mov push inc cld ss pop das pop and push push lods hlt jge jo outsl mov ret cmc mov dec push aas sbb or sub sbb or xor ja pushf mov out inc jno movsb mov shll rorb add mov pop sbb enter int xchg push or mov mov hlt sub cld and jb jnp sub ret pop mov (bad) cmp mov fdiv lea test jmp and in xor (bad) cli in test cmpsl mov cmp dec dec cmp es xchg mov adc add test icebp cs sbb xor xchg outsb nop push int3 bound mov pop insl cwtl add ret in push movsb imul inc idiv out and fistp aad sub into adc fiadd out pop add pop rorb rcrb mov adc jae xchg push xorl or stc xchg mov push xchg stos adc outsl dec add sbb lret fs sbb std jp mov mov sbb popa stc movsl adc aad sbb pop or and out add mov add sar repnz loop cmpsl movsb pop (bad) jae ret mov je into xor or push lock andl jp cli lock mov fist pushf clc pop pop cli and icebp mov insl push cmpsb lahf and bound ljmp je cwtl das mov int ficomp inc push jno mov sub mov faddl sahf (bad) je mov mov push inc pop stos and mov ret mov jmp je inc test mov pop mov cwtl hlt mov sub cmp push fwait jecxz mov mov mov mov pop inc cmp dec pop sub jbe sbb push out sar and lahf mov and xor aas mov in (bad) aam pop sahf mov mov mov inc stc xchg xchg sub pop jl pusha lret je out (bad) jp pop mov mov sbb push sbb repz lret inc sub sub das mov pop pop and outsl outsl lods mov out xlat sub push (bad) jno mov and int iret inc adc push jle xchg into aaa rorb imul dec sub xchg (bad) sahf andb add ficoml mov inc dec pop push into fcomip mov xlat (bad) xlat mov xor jbe sbb imul sbb or fs cmp out in decb and mov orl push sub cmpsb jno mov pushl call mov ss adc mov sbb inc sbb fs dec xor pop add add sub pop popf ffree mov mov addr16 call pop push sbb aad les mov sbb sub clc or addl and push repz cmp jb add test and or adc ret hlt jnp pop and ja jmp sti fs dec pop je inc stc push mov test jmp adc fwait mov in hlt sub mov dec cmp add jg or call push popf push stc and movsb cmp inc ja outsb lock stc in int3 repz frstor call lods lock jnp cmp add mov sbbl aas aas mov xchg lea (bad) fcmovnb add mov inc (bad) ja lahf pop out out fs xor push push mov jo aad insb bnd lret cmp es lea sti mov dec mov dec (bad) paddb sbb mov (bad) lret incb push int3 push mov fwait jae mov pusha ss (bad) aam sub push (bad) imul jne cmp stc movb dec mov lock fwait shll enter cwtl dec test mov outsb cs add and xchg movsl cmc sub xor pop out push test xor mov dec bound mov popf insl ror shll inc insl imul add sbb jno lahf test (bad) std push push mov call mov ret jnp mov inc xchg or fwait addr16 fistpll push scas repz pop pop xor mov pop pop fistpll inc or fdivrl xchg cmp xchg test test lods inc rolb lcall jl jo xchg ljmp out or pushf in sbb push stc data16 jnp scas int3 sar inc mov push push jno cmpsb clc cmp aad xchg push imul adc lret in mov cwtl mov sti or aaa incb insl adc stc and push mov sbb sub cmp imul or shrb sbb es ljmp pop out scas ret (bad) xor rorl and cmp xchg pop adc xor test fidivl mov pop lods in mov inc das jo cmp repz adc shr clc (bad) fsubr ss repnz adc pop ret es cli xor push sub add test outsl loopne shl cmp loopne cld adc das inc and stos cli movsl cld mov cmp aaa aad dec movsl fstpt (bad) sbb push add ret aam incb scas aaa mov mov inc fisubr ss mov jno popf stc xchg xchg stos jg xor arpl popf stos push lret nop scas inc ret daa ja jnp ja outsl ret mov or ljmp xlat mov push out push popa loopne lods jae inc jno ror fisubrl out push sbb xchg test jmp faddp adc insl aad dec sbb bound sbb adc shl fnsetpm(287 inc and cltd push call les imulb fldl push pop ss data16 push cmc cmp jmp arpl jne pop (bad) dec mov add sub stc dec xchg mov in dec rclb mov cmpsb jmp cmp dec mov push pop mov imul cld add mov mov mov dec les push lret fsubl lret in and mov (bad) enter sub fwait and or inc outsl mov sti ret sbb movsb shl mov push shrl mov adc arpl rcrl je mov int jl lea sti and jno pushf fwait hlt jg xor xor lea lea pop bswap xchg movzbw pop movzbl bswap not pop mov movzbw pop pusha mov lea push not mov mov pusha push pushf pushl ret jbe cmpsl mov test push xchg insl adc lret test pop out and fsubl add movb imul sbb rcll pusha inc gs sub lock hlt push cmc push jg mov jns (bad) stos cmp dec dec jne pusha sub xchg lret add and test xor or push das push dec sub fisubl (bad) shld dec jo jno sahf sub fwait jno fwait jns xor and scas pop jmp sarb inc jg addr16 inc enter sbb movsb cmp das rorl xchg sub xchg mov push sarb dec bound push inc jl je rorb mov cmp jmp cmpsl das clc cmpsb (bad) jno je pop dec fidivr nop jp insb cltd stos xchg inc (bad) test outsb inc stos xor rolb pushf lods mov cld or xor push push xchg sub fstps inc (bad) (bad) mov mov cmp mov cmovg in in insl adc out pop outsb jno lcall and je pusha pushf adc pushf movl pushf push lea jmp repnz jne dec mov pop test movsl mov and add sbb movsb add test imul leave fnstcw repnz faddp sbb and dec xor mov sub xchg push fwait and push test jl fisub fidivl in lods xor ret xchg dec jo mov xor adc std xchg sarl add into fild sub test dec outsl cmp dec hlt in sub fdivrs inc fcoms daa xlat cmp sub out pusha mov add cmp movsb iret lcall subb sahf sub sub xchg ljmp lods mov cmp xchg push call jmp push sub std sahf loope xor dec (bad) jns shrl sbb mov nop into fucomip push mov pop sbb xchg xchg push ljmp pop sahf mov das int3 push mov adc cmp ljmp ja jns and leave and shll adc mov mov inc adc mov fildl xor lds data16 and or (bad) pop icebp lea push into (bad) push add shrl add in icebp inc je cli pop es loope xor sbb jbe mov sahf mov (bad) ds adc (bad) sbb cld bound mov (bad) sub out ret mov xor outsl outsl mov sahf loope inc call bound mov (bad) movsl pop lods mov adc jmp add and jbe test es mov jns xorl inc adc out add or aaa je mov dec nop loopne,pt push pop push sti mov sar pop add pop mov adc lock jnp repz xor cmpsw jno cwtl push cmp and rorl or out (bad) pusha rorl jns mov add sbb mov popf scas mov cltd stos xor aas or hlt cwtl aaa stos je pop push stc push orl xchg test xchg dec jl pop and les stos js ljmp adc test cli fs insl outsb jns jl or dec add gs lods jmp cwtl pop mov dec fdivrs mov mov jae mov xchg or aas (bad) cmp dec mov pop cmpsl js mov jmp dec jno xchg mov data16 stos je jae outsl jp jb push outsl or jnp push xchg xchg data16 sub and jl insb (bad) js push data16 xchg jne je (bad) aad inc mov ss mov dec (bad) xor insl repnz sbb push addr16 fsubr inc clc cmp sbb mov sarl push adc aas in fstp rorl mov jge test imul mov test xchg lahf lahf mov jbe push cltd sub movsb pusha stos cmp hlt dec movsb ja stc mov mov ret (bad) mov xchg jbe jnp cmp call mov nop popa cwtl mov mov adc mov mov cltd enter (bad) fmuls bound add and int3 adc mov sub add add and shrb fs inc jmp adcl adc scas mov add xchg mov mov or jne (bad) (bad) mov (bad) dec cmpl ret or (bad) icebp jp mov and add jnp lock (bad) (bad) (bad) add xchg in jl mov mov addb push dec jle lods les sbb sub cltd sbbl xchg fwait mov lret adc jecxz repz add adcb sub cmp dec add mov mov mov (bad) ljmp sbb sub cmp dec push mov pop shll sbb adc adcl mov rol lods xchg (bad) je out mov out lds and mov cmpsl repnz lock inc rcrb add test enter xchg rorl inc ja push test je push xlat add nop add adc mov ret and int3 inc adc mov loopne (bad) jo rol rorl xchg sub adc or xchg add adc or jecxz int3 loop (bad) mov cmc pop mov mov enter mov rorb (bad) int3 inc adc or fs jecxz mov or bound int3 loope popa mov rorb add mov adc or add or mov jle sbb pop aam in leave inc mov xchg inc push shll add ret mov mov into (bad) in sbb int3 nop jp mov outsl cmpsb add movsl and inc fs mov or cwtl addr16 cld cmp icebp ret shll subl sub push add jecxz mov stos adc dec mov repnz addl dec mov adc repnz fiaddl fwait mov fwait lcall add lret icebp adc mov mov sbb cli roll (bad) enter rol add or sti cwtl fwait lret jmp (bad) jecxz lock stos mov xchg add mov add dec xchg adc or je jb dec hlt add rolb jecxz ret jns loope or cwtl sbb mov (bad) fldt cmp popf daa xor loop loop mov cmpsl adc loopne ret lock iret ficomp int icebp jae rclb inc mov and lret sti repz pop push les jecxz inc inc enter adc or mov mov inc or in int3 jecxz arpl inc je xchg movsl loope pop or loopne add ret add and lret addr16 cmpsb and inc fldcw or inc sub gs test add inc stos shr cltd jl test test loopne pop rcrb loopne rolb clc inc mov test andl into add and xchg pop repnz (bad) scas insl lret addb jo scas push mov pushf xchg lock leave std jne push jle test dec xchg dec and das mov incb lret push dec sti xorb mov mov fldt mov add fs or xorb pusha fbstp sbbb sbb cmp mov imul scas cmpsb pop xchg mov test stos stos and or dec clc lahf popf mov test loopne mov ljmp dec pop sub out sbb scas imul pop fdivr jne push add xchg mov jo adc addb int3 push pop mov and outsl test cmp adc pusha out out mov or sarb rcrl push mov cmp xor dec xchg mov adc dec mov mov ss mov std test cmp xchg push scas das and inc xchg jo (bad) mov cmpsl cmp pop (bad) cmpsb jbe jns mov jno sbbb sub out and fs xorb and pop push (bad) push xchg data16 mov fs (bad) sub sbb fs aas idiv in mov adc mov dec mov clc xlat jl roll andb jb sbbb and add mov pop push dec push fwait test in mov (bad) inc xchg mov aas pop addr16 rcrb lahf mov mov xorb dec subb icebp push sbb bound cltd adcb lret dec mov mov lods xchg xchg ret push or dec ds test xor cli sbb neg cmp orb xchg insb pusha add jno mov or xchg inc repnz fisubrl std mov insb orl ja notb test mov pop enter stos xchg fildl inc sub jns jmp addl adc andb xor inc dec fyl2xp1 test xchg test repnz add inc or arpl add in int cltd test enter cmc aam (bad) int mov enter xchg aad and adc and rol xor icebp fmull push cmp jbe sbb or inc cmp js (bad) mov add rolb mov mov jns leave add add dec clc add mov inc sbb cltd test (bad) mov inc popa add pop movb pop mov ret adc dec push ljmp ret cmp test and or mov mov cmpsl mov imul sbb (bad) arpl mov fs dec inc mov jecxz loope inc adc loopne shl loop cmpl or sbbb cltd adc xchg adc dec movsl popa nop hlt mov cmpsl addr16 or and popa push hlt mov rol shll aam (bad) hlt mov xor xor cltd mov or mov hlt mov in mov mov mov out (bad) dec jae jno mov je jb addr16 dec repz icebp hlt mov hlt (bad) repnz push hlt ljmp mov xchg sbb hlt mov mov xchg push dec popa dec hlt mov dec adc jb lret cltd leave or int3 (bad) lret fs mov mov or sub mov test lods cmpsl stos adc jb imul dec push push cld or push adc dec in popa ljmp sbb sahf cmp (bad) sbb sbb jb fwait cltd cltd or pushf scas lcall pop (bad) pop cmpsl xor pop cltd aaa cmpsl fistl dec ss fdiv mov cmp cmp clc (bad) cmp cmp jb mov (bad) mov dec idivl jnp jns jne jl jp mov stc adc dec clc popa cld hlt mov mov (bad) lea (bad) sbb push cld cmpsl adc js int iret jp dec push jl push js scas sbb sub cltd cs xor out jp in push jl outsl push outsb jns jo or cmpsl lahf jl sbb push js and cld cmpsl fnstsw push pop jns pop js pop sbb cmpsl mov mov mov or push std jns (bad) js jge jg or add sarb pop xchg add mov dec andl (bad) mov nop and mov arpl adcl adc roll nop test inc inc mov mov dec (bad) mov add xchg add call mov jns inc inc push add std mov ret stos jecxz sti rolb push mov xor lock mov into ret insl cmp cmp mov cmpsb xchg mov adc mov rcrl sub adc lock mov mov leave cmp mov add and dec add push loop push dec mov jecxz jno lret mov xchg andl (bad) ljmp mov and outsl sbb ret add jmp repz dec dec stos jmp repz stc sbb loope shrb dec sbb sti shrb mov dec or lods mov insl stos mov pop xchg ds and xor and iret inc inc nop mov int mov dec movsl push cwtl dec lret jecxz xchg dec nop mov lods stos sbb and pop or pop mov mov push mov sub ret mov fs add test leave mov ret bound pop add add xor xchg lods and stos fwait ret mov and or in into lret mov jae and loopne fs cld aam shlb dec adc mov add dec xchg add add inc std mov mov sub lahf mov sarb rorb inc fstp push mov and stos jne mov xchg in xchg clc outsb and shlb sti cmp test sbb scas rcrl enter lcall enter lock cmp push sbb enter aaa ror stos sbbl sbb mov (bad) enter adc mov jp ret es movsb xchg scas stos shrb lods enter xchg popf cld cmpsb xchg add stos ret mov hlt push xchg rol in add mov test pusha adc lods rol loope ljmp add loopne mov mov mov sub test cmp js shlb loope lcall rcrl push add daa jmp xor rclb popa mov jo fwait add add xchg ret jecxz add iret mov mov xor xchg and roll movsb and loope push mov cmp lcall lods out (bad) cmp push jecxz inc out inc mov mov lret add in adc bound shlb jg xor inc and ret mov sub ja jecxz loop repnz fwait dec adc call sti int jmp (bad) fsubs push dec shl inc sahf arpl mov in aam mov sbb ret jp mov test loopne shlb lds ret xchg loop mov push lock sub dec add clc (bad) lret jle lret iret mov sbb lret ds rolb shlb or adc in mov xchg pop jg mov ror add xchg xchg mov mov adc (bad) xor pop repnz or stos mov fldt shlb sbb fldt push sbb mov inc cli int3 xchg xchg sub xchg xchg xor mov or adc xchg mov cltd addr16 push lret sub mov in xor xchg pop out loop fisubl mov jecxz adc mov jecxz xchg loope leave or lods lret xchg pop inc xchg imul shlb data16 jno and ja jns add in jecxz mov mov stos pop fnsetpm(287 xchg lret fistl sti dec and xlat sub daa lret (bad) stos ret test sti push mov xor popa xchg mov ret lret leavew (bad) lret adc stos add lret stos repnz (bad) leave jmp or sbb ret jne aam mov and out mov add pop (bad) ja adc into aaa xor and clc loope mov scas fisubr mov outsl add and mov in pop shl jnp sbbb ror andb jns push pop arpl add aad pushf xlat adc push adc cmp je andb ret dec cmpsl addb icebp jo cmc adc inc test insl not sbbb daa in es sarl test into mov (bad) ja xor mov call mov loopne sub add push std or push mov sub cwtl and and mov cli cmp mov jle sahf (bad) ljmp aaa sbb nop clc dec test adc bound pop inc popf cmpsb push jne addb push mov mov mov in int mov ffree nop xchg add or mov popa sub clc mov cwtl sbb cmp loope mov mov repnz push lahf aaa cmp fbld jp sbb mov inc sub popf mov subb frstor out clc xchg mov out mov subb sub movsb fimul sbbb cmp into cwtl fbld test mov or sbbb cmp sbb jno pop jns test pop mov pop adc xchg mov bound dec mov sub popa mov roll lock xchg andb hlt inc adc sbb les fldenv movsb mulb arpl lahf xchg jg and inc push push cld inc inc insb roll or xor (bad) fwait mov int3 subl std das in push test or sbb mov aad hlt cli cmpsb scas push addb stos and in out sar pop scas push adc and enter jns xlat mov mov cwtl inc adc nop cs test xchg sbbb sbb test sti jecxz imul xchg push lahf (bad) mov cmp lcall xor rolb lods adc xchg cwtl lret into push xor pop fwait cmpsb push adc mov clc dec xchg lret and std ja and gs sbbb es cwtl sbb loopne test clc fs or mov xchg (bad) in cmpb pop es outsb out cmpb push cli cmpsl mov mov (bad) clc push cmp jne sub dec fmuls jle jnp and adc inc es popa pop out add dec sbb adcl xchg push cmc sub sub andb xchg leave dec pop sbbb jg mov (bad) repz std out roll int3 xchg xorb push ljmp mov pop addb pusha jbe fildl inc mov sbb hlt xchg adc pop xchg cmpsb dec sahf mov pop adcb mov nop (bad) adc ja xchg pop xorl push jae lret fnop outsb fcmovnb jb std sub add sbb jl cmp or pop dec sub addb call cmpb xchg xchg pop cld hlt lods cmpb sub aaa sub fwait adcb call xorb jle js in adcb xchg or std xchg mov pusha fsubs mov mov stos add cwtl mov push std fiaddl dec cmp push lret loop subb mov mov mov lds gs xchg xchg xchg (bad) push addb aaa cs in cmp cmp test out adc test loopne and stos mov imul das xorl addb xchg push sbbb rolb popf leave aad sub xchg subb (bad) ja int3 jb or fcompl in or je cmp imul icebp test add lret xor loop cwtl cmp mov adc xchg (bad) fiaddl stos xorb xchg or mov push or xor mov or xor out cmp call in in adc mov lods xor arpl adcb pop sar ds pop xorb sub jb or and repnz mov (bad) xchg mov xor cwtl push arpl sub popf or push movsb and mov addb cld push mov push orb pop add push adc pusha adc and addl or mov (bad) (bad) test stos test inc adc scas hlt aaa jno xchg call and add cwtl ret lret pop push inc fisubl pop loope test mov stos xchg jg test in sub xor mov or fs sub push jns in xchg (bad) shll lock lcall xchg cmpb lahf pop es popf insl jp jge mov das jnp inc or push aad xchg mov cwtl sahf inc mov pop cmp xor mov int3 jl jno ss call orb dec push pop scas xor inc dec dec jle hlt push mov imul xchg (bad) xor iret andb jmp cwtl mov cmc add or pushf pop clc xor pop popa pop and test cmpb arpl add jo pop bound hlt dec mov mov cli cmpb pop sbb pop insb xchg xchg mov mov cwtl pop popf xchg movb sbbb leave adc sbb incl test pop ret add mov hlt sbb ret add sbb ficoml enter cmp xor (bad) sub imul lods xorb xor jns in test sbb jle push and popa jb cmp adc jmp repz or fcompl add xor inc pop cwtl in fwait mov out cmc test scas js and decl sahf sbb adc mov leave sub or xlat jns sbb cmpsl add mov addr16 (bad) sbbb dec out mov negb into enter lods in add cltd cmp dec stos mov inc cmp arpl andb loope cmc mov subb sbb imul inc pop jg ret adc adc sbb mov adc xchg aam jge test addb inc cmp adc popf push xlat xchg mov (bad) adc jns sbb jno in sbb loop movsb and mov dec xchg and sub xchg or mov and int test add dec andl jmp jb fstpt adcb insl fs adc nop cli inc mov andb push inc push sti orb jge aaa movsb add push xchg fiaddl jl sbb fldcw les (bad) sub mov jbe dec xor rcll (bad) sbb push adc mov fwait in and loopne sub fidivr inc pop stos popa movsb subb push push adcb mov loope cmc mov sarb xchg or lret and xchg loope or imul sub scas nop push pop xlat jp push xorb (bad) xor enter mov loope insl out pop jmp jne mov adc xchg inc imul subb or sub subb cltd mov cmpsb xchg (bad) fucomi (bad) test into fwait lret (bad) int repnz mov sub sbbl sub stos test (bad) xor xorb jns and xchg and mov fsubr cmp std ja jo fiadd scas orb leave mulb enter pop mov adc rcl xor sbb scas fisttpl lock xor mov pop xorb arpl inc adc es sub jns add inc pop or fwait lahf cwtl push cmpsb mov fsubr jmp pop xchg xlat repnz pop test ljmp jno daa lea fildl movsl inc xorb test sbb push pop add add xchg xchg sbb mov test inc aam std jae sbbb lret in pushf andb je cmp or pop sub jns jno in xchg cmp cmp xchg mov popa dec mov daa add add sub repnz ja adc mov push or es mov orl in ds fwait mov rorb arpl movsl jle pop popa adc fisubrl idivb stc outsb orl mov cmp sarl xorb cmp sbb sarl popa mov or ret jp nop dec mov pop cmpsl push xchg sbb hlt xor bound pop lahf jle and out test mov jp xor xchg mov orb mov sbbb aaa rorb lods testl popf adc dec (bad) jns inc inc mov jo (bad) sub add ficom in mov and lods jno imul js inc (bad) outsb pop std mov jno cmp (bad) (bad) out daa jns pop aad push ret cmpb insl testl cmpb adc jno adc in pop enter icebp cmp outsl jle mov xchg and mov xor mov push jb dec cmp ret mov (bad) scas cmc push rcl jae decl sub pop aaa sbbb loopne ja lret sub cs sbb ljmp cmp sub ljmp enter xchg pusha (bad) sahf mov leave ss fisubr dec nop inc (bad) jo xor jecxz dec imul xor xor cmp jecxz fnstcw pop dec popa sbb je sub jnp arpl cmp sub je mov add sub test lods js loope cmpb popf or fsubrl ds fiadd sbb aad orb loopne (bad) cli mov ja orb lcall fsubl jg dec sub testl add pop mov shlb or jae sub loop mov sarl (bad) mov and clc push and addb cmpsl add dec sbb pop andb jmp addb pop inc lods repnz add push orl xor mov mov xorb loopne fcoms xor cmpb out popf addb (bad) stos bound and (bad) xor in sbb bound push cmp adc cmp dec call popf insb ds neg orb mov or loopne dec addb xchg xor loop adc mov mov or sub mov addb jge out xlat mov or cmp sub xorb icebp (bad) mov pop arpl add cld out cmpsl adc mov mov dec add cmp adc dec adc mov xchg dec cmpsl dec xor cmp jmp into lcall sbbb sbb add mov push mov sub push push push and inc xchg std cld cld and add add mov jp pusha iret cmpsl xchg ljmp dec inc inc (bad) and repnz cmc jb loopne stc imul pop dec pop lods jp vprotq sub enter rolb xor jp mov cli inc mov cmp mov test test gs repnz test sub pop dec xchg jo outsl subb mov sarl xorb insl mov mov push and insb lcall lret cmpsb aad and orb xorb mov inc repz addb cmp adcb adc add mov mov pop lret cmpsb jb sbbb and xor jae daa lock cwtl mov fnstcw sbb rorb movsl inc jne ljmp and push sub mov push test mov mov sub cld mov rolb icebp enter xor pop orb lahf (bad) mov add jl ret mov cmp xor lea jle inc in orb popa or sub pop jno cli push cmpsl mov movsl or pusha scas dec test sub dec mov and clc repnz and movsb subb inc popf (bad) jb jbe cmpsb ds push xchg pop dec sbb lods push imul lea sbbb fdivs rcrl or gs xchg xchg mov cmp xor mov test (bad) cmpsl outsl or jbe add mov adc rcrb aam jle out mov pop (bad) xchg mov inc add adc sub or hlt xor sarl mov pop test jo cmpb fs xorb scas sahf jge sbb imul (bad) push (bad) adc addr16 cmp inc shl adc xor xchg jno ficompl in shlb popa test pop mov aas mov cmp xor pop (bad) ja mov sahf sbb leave lea pop push cmpb push movsb mov call jmp mov nop mov aam iret mov fdivrp ret xor rol ret icebp les and nop mov adcl movsl and sub sub nop icebp shll cmpb add icebp mov sbb sbb jbe push cmp mov icebp or pop push sbb lock imul xchg (bad) aad in nop xchg enter insl and xchg lds or ds in pop loop loope push lds dec jp inc inc scas pop sbb cmp mov jb fwait and jnp mov pushf jns pop cmp (bad) pop (bad) aas mov test inc fildll mov (bad) in inc cmpsl push mov fildll jnp imul cmp cmpsl lret cmp pop pop movsb push jle jl (bad) frstor mov adc sub inc xchg cmp rclb rol stos xchg shr movsl shl xor out pop pop inc pusha jnp hlt xchg leave (bad) ret xor pop popa (bad) adc je push stos add sub ror jecxz fisubr (bad) mov pop mov fwait inc and je pop mov add mov mov lcall xor adc sti add pop faddl add mov clc es or and jnp push fistp sbb mov daa das das daa aaa jg mov mov and shrl and mov add mov push mov dec int adc xor in shl xor and imul push mov ss (bad) cmc cmp xchg stos sahf mov arpl or aad mov mov dec aad stc or je mov movsl out push cs out xor out pop pop out push mov jnp pop xchg mov out sbb cltd push cmp dec in xor movups xor pop movsb sub iret jl mov mov ret inc fwait ror iret iret or rorl insb repz call lret jmp sub cmp fisubrl adc icebp leave dec jbe das iret testl rcl dec lds sub adc jl cltd push and jp std int (bad) imul inc fwait mov or push inc mov stos (bad) out mov sub push mov les xchg in divb jno jb mov ret test adc cmp push pushf pushf lea jae push lea jmp scas xor imul and pop and (bad) sub out jl out outsl nop scas incb mov adc int inc mov pop movsl lret push test je lahf aaa adc sub mov lods mov insb dec dec pusha xchg int xchg insb pushf ret cmp and pushf cltd adc aas in sbb mov inc shlb xabort cmpsl fcompl int3 hlt sub cs pop inc pushf mov adc jb data16 xor mov pop mov sbb push dec ja jns ja lret inc fildl pop mov ret fwait lods cmp aad and cli fs pop insb add jp sti jnp (bad) xor imul mov push aam shl mov cld test testb daa cmp shlb dec xchg stos out aam inc or sub (bad) fcmove rolb jge push scas fiaddl mov jle jl les sub daa cmp pusha jl cli inc push loope sbb daa xlat sub pop xchg test dec iret sbb ffree add inc dec je jo mov cmpsl scas scas out adc jmp psadbw mov enter push sbb test movsl nop dec insl inc js mov push mov sbbb hlt push or push lret mov add xor xor fs insb add jge inc das jo icebp jmp scas cwtl (bad) mov test pop out inc in jp insl jle repnz jg inc pop jg lock cmc cmp ss sub je jl movsb popa cmp sbbl lret sti add sti (bad) negl add mov mov cmp jno movsb lcall mov jmp push add cltd insb lret mov sti dec cmpsl call push mov mov push idivb inc cli or rclb or mov cmpsl mov pop or add or in repnz fdivs outsl and inc and movl movl mov lea ja pusha pushl lea jb jmp dec jl pop addl push sub mov lahf and pop aaa clc daa cwtl pop in sbb push inc cmp inc lds xor jbe stos rcr sub xchg rorb cmp cmpl fadds pop mov dec jno test (bad) mov jae adcb mov add xchg sub popa ret xorb adc repz pop movsl stc push clc repz xchg xchg daa jl hlt inc push pop xor gs mov dec adc dec ljmp dec adc mov jno outsb xor jge adcb lret mov cwtl cmp or xor adc mov cltd fmuls or sub test cs into cmp add call std addb sbbl mov fcmovnbe aad sub sbb xchg xchg pop stc (bad) lock and cwtl sub xchg or adc stc mov mov popf jno leave sub sub cmpb add jge mov in or adcb in sahf cmpb push (bad) sub es mov jno sahf (bad) lcall mov lock lds inc and pusha or mov stos push popa xchg orb in and dec mov inc mov (bad) int3 aaa inc mov jg cmp sbb mov xchg andb int sbbb dec mov push (bad) mov fwait nop fs xchg pushf push test push cmp inc adc sbbb jb lea xor and sbb cmp inc sbbb mov imul test push push dec xor sbb outsl mov jb mov push xor inc xor cmpsl add push test addl fist sbb add pop mov xor pop xchg cmpsb ja pushf cmc sub sahf scas push shrl test pop push clc add inc mov cmpb inc dec and idiv cmp dec dec sbb sbb sub dec (bad) lcall cli and inc add add cmp (bad) xor orb mov sbbb loope adc outsl or lock mov call subb mov mov shrl mul pop mov jl ds nop fs imul adc adc xor xchg sub in adc mov mov bound mov in ss mov mov dec cmc push flds lods (bad) and sahf cmp or mov addl inc es mov loop xor cwtl xor std or fisubrl pop xorb test xor add add rol adc cwtl andb cli cltd add inc mov xchg cwtl jge pop ficom and fsts jmp jns (bad) in addb data16 jno pop movsl cmp sysret mov inc xchg enter jns xchg jo les fs cld xor dec mov cltd and fcompl movsl pop xchg xchg popf ret lock push mov pop loopne push aaa mov sbb adc mov aam jnp (bad) pop lds lret das loop out inc jle add ret loopne hlt or jmp cmc mov or loope inc (bad) sbb jbe mov push inc movl addb fstps inc mov int3 push test das ffreep lods sahf jae (bad) test cmp sbb in add add xor aaa cmp cmp adcb popf mov fstps jne test in daa arpl js push mov xchg mov test jbe adc mov lret push lods test xchg push sbbb icebp inc cmpb enter adc xchg pop subb and cmpsb cmpb out xorb mov mov mov out repz inc xor push sub xchg (bad) mov shl dec inc flds add sbb jecxz test fstl jns fdivrl cmp sbbb lcall cmp xchg sbb sub xchg sub push mov adcb mov mov adcb in xlat and data16 sub orb int3 push push xchg push (bad) lock mov sbb sbb adc mov inc add mov test mov mov (bad) jb add notl fcomps popa ret cmp leave mov inc mov dec xchg or mov or mov pusha or mov adc roll sub stos cmpsb (bad) jb mov sbb mov inc mov cmpb inc inc les push data16 test or xchg mov sti inc fwait push and into repz orl lock fstpt stos inc fwait mov movsl jns ja cmpl sbb enter add stos jecxz leave cli pop roll mov mov cwtl mov pop xchg cwtl add add mov sub je mov cmp fdivrl (bad) in addl add push cwtl adc jl stos cmp pop clc mov pushf clc pushf ret push xchg jmp loopne mov nop loope adc cmp leave dec nop inc and mov ljmp mov xchg xchg inc repnz gs and xchg sti out or mov xchg mov and rorb div shrb ret lret inc movsl mov dec out ret dec mov mov sbb inc repz push (bad) movsl adc inc lods add movb dec and mov ret jno sbb adc lret roll xchg cmc test cmp int lea loop sub add (bad) shlb repz inc sub jmp imul add dec (bad) test lahf out sbb imul ljmp jle ds inc jp stos mov enter push adc xchg sti xor loopne fwait je (bad) fcomps stos push inc sub sbb loop and stos (bad) mov lret mov xchg fwait ret jno stos xchg push sub sbb push addl and mov add ret sub mov jbe in ret mov mov bound stos (bad) pop call shr mov ljmp rolb andl (bad) loopne inc sbb adc mov add jecxz div stos and (bad) frstor xor sub lcall loope scas jmp mov faddl cwtl enter xor sbbb and add jae or sub jbe into push jl test mov loop jnp and ljmp adc pop cli inc sahf and ja add jae mov xlat loopne pop in xchg rcl xchg mov mov les mov clc or leave xchg sarb mov cmp rcr loopne call adc and dec push pop popa subb orl leave rcr loope jmp adc and dec push pop bound mov mov ret (bad) sub cli add adc and dec push pop arpl mov mov ret lret rcr jecxz jmp sti add lods aaa sub cmp dec push mov jl jnp loope sarb lcall loope and pop repz inc call icebp loop sbb mov lret mov and ljmp mov mov jmp push mov test repz ret mov shr loope ret jecxz sub mov cmp sub push imul call pop mov mov loopne rcr xor fistpl shl fwait sbbl outsl add sti lds xor (bad) adc (bad) mov mov jmp rcr push imul fst les inc imul push cmc jecxz shll xor xor inc add sti stc jmp jb sub fwait xor mov leave rep movsl push lods adc xchg ljmp icebp or xchg adc sti loop stos aad or cmpsb add dec fwait xchg jae test movsb push ret sub pop inc pop cmp add into or imul lea sbb rol and lea xchg sub inc (bad) cmpsl sub pop adc mov mov popa add cmp mov js add paddw mov mov ss lret out xor xlat dec xchg and notb leave in lods add jnp push mov cmp lret imul into mov pop shrb int cmc mov (bad) and in xchg hlt aam frstor icebp out mov jmp mov lret adc lods xor sbbl pop and iret cltd add mov in iret fsubrs and inc ret test imul push adc lock cmp cs stos mov jmp add test sub adc push int3 mov movsb (bad) jb adc movsl sti int and addl mov and mov nop mov add add enter xchg pop ret mov or ret or mov test push xchg adc or mov or test mov dec xchg mov push ret ljmp mov addr16 push xchg dec test adc push lahf loop sub xchg testb nop nop bound movsl mov mov lret insb dec mov cltd repnz jb gs xchg xor arpl cli bnd mov aad and add or loop cmp repnz xor gs imul in cltd rolb add clc mov lcall add mov mov adc add and lods nop int3 sbb les dec cmp mov or sti add adc cmp inc nop (bad) hlt mov mov lret add mov aam nop push rcr lods dec ret jno movsb jae xchg and (bad) or ficoml (bad) adcl add ds nop or mov jl xchg and mov nop push test add pop test mov (bad) int3 aam fsub in hlt cld add and dec push sbbb jne test lods mov vpmullw std push push push sbbb cs dec push sbbb jbe xchg scas mov (bad) into (bad) sbb out idiv pop movhps aas inc dec push sbbb ja xchg scas mov (bad) iret xlat sbb out idiv or sbb inc dec push pop mov add pop or or andb test mov daa lods test sbbl imul pop in loop decl inc jecxz sbb inc ret stos cs jge jo sbb mov xchg jb stos test dec mov cli pop mov test and stos stos fiadd inc and pusha fadd adc pop sub mov andl dec stos (bad) xorl repz adc or cld ds (bad) andl rcrl add stos dec dec jmp sbb movsb add cmc mov mov or pop mov stos cmc jno sbbl adc loope cmp add push xchg ret add adc repz mov test pop add mov cmp jns idivl or repz cmp adc xor pushf outsl xchg mov mov mov inc adc (bad) or ds ljmp aam pop add inc mov std jp mov cmp sub sbb cltd divb loop outsb repnz xchg adc sbb sbb loop aad xor sbb mov push jns lea mov push lods stos es push in clc inc cmp mov xchg sbb mov jmp or mov test jmp mov mov and leave xor or mov or jmp pop (bad) loopne dec or (bad) xor add and movsl mov inc enter fcoml (bad) jmp sarl xor mov jb cwtl inc add and and xchg xchg lret xchg add and addl dec loopne loope mov ror mov cli fcmovnb repz (bad) lcall (bad) adc or arpl (bad) sti and or enter ret mov adc and rorl inc (bad) (bad) adc lret or enter fsubrl arpl dec sub or out mov addr16 int3 pop adc mov xchg int3 push adc or and loope loopne out mov les rcll fcoml and mov and mov adc mov daa jb lret movsl dec or enter mov je mov and imul sti jmp push fimull mov adcl mov sub xor fiadd pop loopne sbb popa cmp jns inc fildl add inc vandnps stc jbe push adc xchg mov movb push push ret pop jmp push fsubs mov mov roll and fmulp push xchg add or bound fwait sarl ret xchg (bad) cmp sub popa mov cmp pop sbb sbb mov call push mov rorl and dec cmc add pop lcall shlb pop loop pop stos sub and jno iret add rcrb mov sti mov je inc ljmp add daa lods cmpsb ret push es stos sub lds shlb and adc jae dec mov mov lea (bad) ret cltd lea jecxz mov gs xchg xorl repz ret mov add in sti add adc shlb es add xor (bad) hlt mov dec dec sbb jne (bad) movsl (bad) shr and pop dec adc xchg adc and adc jns addl sub and lods and and or in mov shll lods ret (bad) ret ror lds and or jp loopne mov (bad) dec adc popa stos add not push loopne shrl xchg lea rolb cmp lret or bound cs sbb cmpsb inc leave popa and sbb ret and lret or daa jle (bad) das jecxz addr16 dec jle push lods shrl push mov mov mov (bad) and sarb inc leave dec ljmp jecxz lods gs add and add repnz add popa jl loop insb int lcall xchg ror lahf push jp lcall bound add mov add (bad) in andl roll ret inc movsl subl rolb sbb rclb inc rolb push mov stos push pop adc xchg push rcl rclb in rolb ret xor (bad) sub (bad) jbe sub jne and test or and add jo rorb mov or and cmpsb ss add rolb sbb cli stos xchg sub mov mov xlat les and ret rol (bad) stos mov roll xchg mov inc data16 sub rclb sub rolb and xor or inc mov and ret push mov test inc mov push test jbe mov or (bad) test mov or loop (bad) aam (bad) addr16 pop xchg add mov (bad) or or inc pop in sub add mov add stos ret aam lds arpl loopne push mov sub pusha xchg jmp outsb dec push imul enter mov mov cmp js pop call adc sub lret cmp int cmp and es mov lret xor add add aad movsb add sahf movsl xchg pop inc add adc mov repnz mov test jmp cwtl insl cmpsl adcl loopne movsl inc ret inc leave int3 loopne les imul lds mov cmp xchg dec ret movsl mov loope mov mov and les dec stos ljmp stos xorl lods aam mov sub add inc mov jnp les fsubrs bound rcll jnp inc loopne mov push mov cmp call stos test test inc xchg cmp loop test jmp mov cltd loop (bad) int3 or ret mov or repnz ret inc or mov mov adc adc lcall and mov xchg inc inc (bad) and mov test call in push sub xchg clc andl test sub sub xchg or cmpb or xchg push mov adc cwtl or cli test mov inc out negl jbe and jo pop ds (bad) jle (bad) inc repnz push repnz aad (bad) popf repnz fidivr test sub dec (bad) or xorb or (bad) xchg rol xchg push test enter adc sub (bad) nop mov adc dec scas xchg repz pop dec bound cli add popf push lret int mov mov jns popa sti mov ficomp push cli jecxz lds jo (bad) aam inc sbb cmp icebp imul pop addb mov sub and sub mov pop mov fnstsw adc jecxz add adc sbb push cld es sti mov test es mov setno fmull cmp sub or mov scas inc daa (bad) xor sbb repnz icebp ds and dec ret in adc rcll stos fisubl sarb les lea mov sbb dec (bad) cmp dec mov adc adc push pop int3 ret mov and lea add jo xchg inc mov jo sbb rcrl test scas lret int3 sbb jge pop jecxz jp das mov ljmp das cltd mov cs dec (bad) mov mov jns jmp sarl mov fdivrs mov mov xchg ret and mov adc push pushf jmp dec out (bad) add mov or sbb xor repz jl fs rcll xor adc sub cli add imul std xor push popa push sbb (bad) imull in jecxz adcl cmp xchg adc add mov push inc adc xchg sti test mov rol mov lods add mov sarb mov xor stos inc push push and leave shrl add loop out ret ret and in mov sub pop jbe,pt insl mov leave push (bad) push (bad) ljmp dec xor dec sub in xor sbb jge popf push sbb pop inc movsl or mov push push adc lret add leave ret mov fcom mov mov sub test in dec dec dec ljmp (bad) aas pop mov mov mov xor repz sbb outsl push je loop scas dec adc fwait ret mov jecxz add test cmp loopne adc les pop cltd cmp in and add adc adc lock mov cmp mov rclb sbb or pop and adc mov xchg add test popa mov and fwait jns push xor enter xchg sarl mov leave and fnstenv xchg jmp cli data16 movsb ret xor xchg into inc mov sbb sarb and sub adcb jg cmpsb pop pop xor in or pop out jno adc cmp xor jmp dec xchg inc aaa test cmp cmpsb pop pushf ss leave lods dec sbb insb repz icebp and (bad) add or dec les mov adc ljmp pushf fstpt lods xlat lahf ja fidivl xor mov push mov aaa adc or loope adc pop mov push xor sbb negb ljmp pop jmp adc je dec (bad) push fsubs pop add das (bad) rorb lds fwait (bad) jae scas cmp or cli cmp push mov xor cmp fcmove lret data16 sbb dec mov arpl jmp shrl sbb xchg mov add ret in jmp inc pop ret aas xchg dec mov ret aam sbb lods ljmp loopne jno ret sarl jns fmull pop mov pop xor test in in or jmp inc xchg cmp rcrl adcb or enter loope adc inc mov inc jmp out lods ss jle sub in push dec fmuls and pushf cs inc (bad) stos dec push daa push int sti cmp in jmp jmp push scas cmp or pop lods jae xor adc out push ret repz sub push dec cmpsb cmp inc (bad) sbb aas mov decb xor jp loope jae stos jno and push dec add scas bound pushl fwait bound data16 rcrb stos jecxz sub push aas dec out movl ret adc out outsb mov gs mov xchg sbbl (bad) in adc jne and mov add jp dec arpl mov pop iret jmp daa (bad) inc mov loop aad or or pop test inc sub mov lock and ret mov pop mov lea loope out movsl mov or dec dec jg das (bad) bound and jecxz lds jp xor testb sbb sbb ljmp clc cmp push sub xchg shrb (bad) adc mov cltd lret dec gs rcrl sbb stos dec jmp lret daa mov jbe push inc add or enter xlat or push xor bt sbb xchg ret mov sahf das mov into sbb mov cmp or es push outsl (bad) adc fcompl push pop push mov stos hlt lods rcrl rorb ror cmp in out mov adc push sub push and std push adc lds pcmpgtd pop pop cmp pop push xchg aam xchg pop push test movsb lret movsb jmp and popa mov lret push and mov xor ret and hlt loope lds ss dec fisttp add sbb xor sti inc mov test ja lret cli pop push fimull adc aad test fstpl les (bad) sbb mov lret out mov les cmp pop sarl cli xor inc xchg ret bnd (bad) and sbb imul (bad) mov (bad) or fiaddl push aad jne cs xor sbb dec jae jb movsl (bad) enter xchg (bad) mov inc int3 xchg lds mov xchg mov adc push add and int3 add rclb es mov and enter or inc push and ret loopne cmpsl imul enter ret or arpl ret or xchg enter int3 mov push mov and loop loopne (bad) dec push lret enter ret mov int3 inc adc mov loopne cmp xchg enter loop sarl (bad) out or mov xchg sub mov inc xchg mov lret enter adc sbb (bad) enter xchg add push int3 movsb sub xchg jb arpl les leave jecxz mov ljmp sar mov cwtl sti xchg and dec adcl fadd mov pop gs mov push addl leave mov and movsb xchg mov mov popa sti xchg (bad) inc outsb gs adc mov or jno in ds in jl cmpsl and jmp jns mov xchg loopne test cmp jp aad mov xchg fiaddl lds xchg pop push add fadds xor popa loopne jmp xchg add incl and popa je add sahf and loopne and add call and popa jle xor enter in jecxz inc popa jg out orb decl inc cmp cmc mov mov sbb addl sbbb pop push or imul ja lds popa subl xchg rolb or mov mov xor jmp add adc push and stos repz fstpt jle loop outsl sub dec (bad) in and cwtl fsubs pop bound data16 movsl std cld bound (bad) add jecxz adc adc adc push int3 dec mov add mov inc sbb inc shlb into adc xor xor jmp adc sub and lretw adc fwait add hlt (bad) mov xchg out icebp jns iret popa jmp test mov jecxz mov fcmovnbe fwait mov sbb sub jmp fisub cltd mov and iret mov mov fidivl js lret jno push popa je add add pop daa lret xor dec stc cli xor pop lds int sbb and stos out sub and (bad) leave sub imull lods or ret frstor push test data16 movsb mov ljmp shrb push iret lret mov jmp addr16 arpl imul movsb inc repnz leave and xor xchg mov cmp xor mov jecxz hlt call aam add stos inc das rolb into mov loopne test loope sub mov dec test stc out mov insl adc mov addr16 (bad) loop pop movl push pop add cli ja in iret lods pop mov pop lret dec les add cltd or mov mov les cld rclb fadds xchg rolb notl arpl icebp arpl rol scas xchg sbb jb aad rorl sub outsl sub push cmpsb int in aad test add rcrb jmp adc adc decl xor sbb int arpl xchg lcall js inc mov jl jg arpl inc sub pop ret xor dec pop popa inc and add ds sbb lret imul inc mov cmp mov movsl popa stc mov push and fistl mov mov sub push leave push and in pusha fnstenv movsl enter ret sti add mov adc loopne popa and push add mov or mov ljmp adc shrb lcall push lret add loope (bad) lret rolb mov adc inc (bad) mov mov ljmp addr16 xchg add out cmp imul xchg push shr push xchg outsl dec (bad) xchg ret mov pop aaa adc sub inc sub mov icebp adc sbbl sbb jo aam aas and or and push jp int3 pop std add jge lcall leave sbb and fcmovnb jg adc or outsl adc mov fcmovne cltd dec adc mov jmp add mov lea cmpsb adc cmp lret adc scas mov fwait mov and outsb inc pop ljmp shrl mov jecxz lret adc sub in pop mov mov mov sub mov sar out and adc xor ror fidivrl repz test ret jp xor imul scas imul mov movsl leave leave js mov leave outsb and xor xor jecxz push jns (bad) bound outsb sbb lods leave leave mov jecxz inc sarl mov (bad) stc xchg outsl mov test adc movsl lcall jnp insb mov inc jmp push loop dec adc mov cmp je mov imul mov push cli push xchg hlt cmp sub addr16 adc lahf adc cmp add test cmpl sub test lcall sub jmp mov out mov mov push (bad) and pop mov fistl jne jecxz jnp xor mov jne test cmpsb (bad) sbb and sub in dec fldcw out icebp pop loopne and cmpsl jns mov xchg add or sub outsl xor inc sarb dec adc inc cs mov add cltd out xchg sub xchg lcall push mov test int3 out xchg inc iret mov push sbb jnp add gs pop ret jmp jb fwait jl into pop sbb adc sub jecxz mov gs out ljmp mov pop (bad) out mov sbb test cmpsl bound mov and movsb jae mov insb lret lret jle jno dec loope sbb xor xor nop loop lret lret insb int3 shrl push cmp popa daa movsl stc xchg pop and add mov cmp rolb and mov sbb add jge frstor and (bad) add vandpd jns xor adc lahf dec or push mov cli (bad) sbb mov les or sub std mov leave pop add loope stos insl jecxz or inc bound test xchg xchg rcll and clc call (bad) mov push xchg andl test push add pop cwtl dec les inc or mov dec test enter mov jno add xor cmp sbb mov mov adc (bad) enter les fwait dec int add mov loop enter xchg cmp les enter lret pop sti add call dec mov or jno enter mov mov cmp adc out mov mov mov icebp add sbb stos pop jb sahf mov imul mov or fwait call dec lods and nop xchg cmp test dec pop or test mov add add mov bound mov inc mov fcoml stos movsb and loope inc add push pop add pop (bad) gs dec sbb leave addr16 add mov ss inc pop call add and adc mov lret mov insl shl fadd lcall and inc lahf movsb mov rol (bad) loope inc rolb rorl movsl imul mov add mov mov popa mov sub addl ret push leave mov xor inc movsb push pop jae add add dec sti (bad) roll repz loope test dec sbb push popf dec add and int3 xchg (bad) inc movsl inc fsubl (bad) nop bnd cmp and fstpl jge mov pushf and lahf jmp ficompl inc imul and and inc and insl clc enter mov mov outsl sbb in pop inc and mov lock mov ret dec push xor inc pushf movsl jae (bad) xchg sbb sarl mov mov fldenv and hlt movsb arpl mov and jmp or inc add mov xchg push inc popa gs mov push add daa xchg and mov lret outsb rcrb inc movsl loopne mov enter mov rclb es and cli and lea fs adc shll adc add xchg mov loope xorl (bad) notb jecxz and je and mov inc std dec and ljmp scas jnp xchg pop lret bound and inc xor shll inc pop xchg push sbb add movsb push ljmp push inc and into pop jmp rclb hlt add cmp daa enter (bad) mov in (bad) bound (bad) loop insl xchg dec and arpl add popa (bad) hlt (bad) movnti and inc lea add and movsl jmp lea lea sub leave jge in inc loop popf mov rclb in mov sub ds inc fs xchg mov mov rcl (bad) pop or les daa or pop enter xchg pop rorb loop jg xchg add enter pop dec pop (bad) mov stos enter mov adc (bad) jle js adc enter (bad) imul pop mov push add cmpsb and or fsubrl daa repnz or push or fsubl (bad) jbe sbb push or dec jl fsubl loop adc push mov scas pop or test or push push or fsubl (bad) jbe sbb xchg adc push mov mov xchg mov loop rcrb cmp es mov ror aaa adc ficomp xchg push mov cmpsl jnp push xor add dec mov (bad) ja xchg add les sbb adc mov iret cmp jbe sbb or xchg push cmp jbe sbb or sub dec or xlat cmpsb dec jno xchg out or leave mov stos sbb pop inc fnstcw outsl or xchg stc or xchg push mov stos mov cmpsb mov or mov iret jbe repz push push or mov iret cmp adc stc pop or jbe or push push or mov mov push or mov sti or fistpll ljmp pop or inc or or fs mov push xor cmp fbstp out push stc popf fucomi rorb test in pop sbb stos sbbl test js or xchg push cmp jle js or gs mov inc iret mov inc (bad) sbb cmp or stos enter aaa sarb in enter pop enter enter ja cmp add dec (bad) xor test add push dec hlt or jnp pusha cmp scas cmp push insb fsub jnp push cmp jbe sbb or xchg pusha cmp scas fisttpll xor add ja cmp adc lahf jmp xorl pop mov cmpsl jnp push cmp jbe sbb or jne enter mov mov enter and add enter adcl enter push cmp jbe sbb or xchg xor xor add add xor mov cmp jbe and bound cmpsl jnp push cmp jbe imul mov sub pop stos and repz mov sahf cmp sub ret sbb add pop xchg mov add add xchg repz mov lcall pop cmp (bad) into loope sub hlt mov fisubl es xchg xchg (bad) (bad) loopne ficoml sbb and ja pop mov dec lcall mov repnz push pop cmp lods add addl push repnz jl test scas stos repz mov xchg andl pop xchg mov aas push mov add cli fidivrl xorl movsl jmp cmp xchg (bad) adc xorl aad inc mov mov jg sbb xchg sub icebp push mov adc outsb (bad) movsl sub add test mov leave mov sbb xchg cmc mov lods mov (bad) mov xor lods js ret cmc or add mov lret mov call loopne cmp mov cmp ret mov int aad call fidivrl add pop mov push add push leave fadd add in push nop loopne mov dec mov fs lret hlt sub (bad) mov pop int3 add mov fwait jmp or add or iret lea xchg mov fst iret adc jne aad adc jne hlt and hlt adc push or daa push jecxz mov xchg sub add pop adc into or shlb enter or pop lods inc shr pop cmp movsb push push jne pusha cmp loopne or rclb outsb push xchg jmp jae in dec call stos repnz in add (bad) aaa leave repz cltd push mov shl cli int mov push and lods dec std shl push cs aam dec test outsb lret jnp mov icebp dec and loop repz jle repnz and cmc pusha mov mov push test ds mov and movsl ja insb xlat xor and adc mov ret enter es xchg lods adcl not popa add or jnp inc lret and repnz and sti or mov dec sbb mov nop sbb repz lea in fsub mov add sub mov inc push sub cmpsl adc push pop lods loope mov (bad) ljmp lret ret nop ja int mov mov iret push sub in cmpsl mov push addl lret movsl lret ds int xor jmp add fucomip std push roll lods test sub (bad) sti loope or cld adc icebp dec stos jmp fnstcw push fs ljmp cli adc push data16 xchg in dec dec push sub jb fbstp and rclb stc push sbb cmp (bad) outsb pop xor es lock or jne popa push subl hlt fstpl mov ret in adc mov aam shlb and stc or es cmp or sub inc push rcrb ret or lcall fcmovb icebp (bad) dec call stos movsb sbb ss xchg in int3 outsl pop pushl or js dec (bad) adc test cmpsb mov cltd mov repz and sahf xor imul sbb repnz mov lret (bad) aaa add xchg dec aaa sub ror in nop test lds or lea fs int3 fwait jno lcall lcall mov xchg xchg adc sbb lods and ljmp aas pop call lret (bad) inc stos mov xchg out mov lods lods in bound (bad) aam fidivrl test mov xor push adc in dec lcall das push push jmp hlt mov xchg movsb lods lret fbstp mov outsl mov movb cmpsl cmp jne jmp mov and hlt and pop sub sub cmpsb lcall leave mov add loopne loope jecxz popf inc sbb xor leave push and bound sub loope inc inc dec pop ret daa insb adc ret jae notb inc adc loopne jb sub sbb shrb movsl jnp addl inc xchg pop push xchg xchg (bad) test lcall (bad) mov jbe add imul popf xchg add test xchg dec or mov or sbb jb xchg add loop jge in pushl xchg inc jecxz jae ret cli shrl cli push call sbb leave (bad) mov add sbb cmp outsb dec or sbb test ror add mov leave shrl inc clc push incl add and adc repnz (bad) add out sub xchg pop adc shrl sbb and sub and inc sub cmp lods sbb pop mov (bad) (bad) mov push jmp xor test push cmp cmp mov mov jae jmp stos mov int stos hlt jle xor adc nop add sub mov and fwait xchg stos or pop mov jmp arpl pop fimul loope pop and push dec or jp add dec lock and (bad) lock fucom add jmp ret sarb test mov pop mov fwait leave push mov dec out das in pop fldt enter push cmp push pop out inc dec adc sub cli mov pop daa inc inc sbb inc lds sahf pusha cs arpl lret adc push (bad) xchg ljmp dec inc push test pop pop inc cmp jb pop call sub dec ret in push popa or popa mov repz cmpsl les add repz jno leave cmpl xor push or fisubrl ss push mov fisubl enter inc stos fldl push mov push sbb lcall mov jecxz mov mov xchg and rolb jp icebp insl cmpsl shll fwait push mov fmulp fdivl sub and mov stos pop jecxz scas lcall and adc cmpsl xchg push add (bad) lret jecxz outsl ret leave inc sub repz sub or out ret es pop and aaa jns leave xchg jle add std sub push aaa jg push movsb aas in add mov or cli push jmp inc pusha (bad) out out mov pop into mov repz enter cld outsb push paddb push ret das pop push add rcll pop dec mov adc in add adc mov es or shrl dec flds cmp jp das cltd movsl andl and repz shr inc mov fwait add pop fwait inc jge sub push test pop movsl add cld call subl and inc jb sbb stc je icebp add pop push pushf add pop mov mov data16 ljmp mov in pop addr16 lock adc rcll cmp add bound mov in dec add rclb les mov push xlat add addr16 mov sub adc ret (bad) xor push push ret (bad) icebp int3 push mov ret xlat mov or jecxz sahf in and mov sub mov in test int3 gs inc inc lock adc mov and inc and jp xchg sbb mov repnz adc jo add add or adc xchg shrb push icebp xor inc aam enter ja mov hlt cmp stc adc fcoml cli rorb call cli mov xchg xchg fucomip push lcall sbb sbb out add dec jge mov pop icebp mov xor (bad) sbb xor (bad) fxch mov push xor sbb icebp push test push add sbb inc sub sbb push sub lahf cmpsl fisubl in jmp mov in mov andl jmp negl ret mov mov xchg leave sbb mov test loop shrl sbb (bad) push imul sbb cld sbb jmp mov rclb fisubl dec fistpll out push and aam jae jb inc jmp pop mov mov xchg fwait bound mov jb pop inc push ret mov and fxch sbb lea pop xor adc pop adc cmp and push sub (bad) int3 pop js mov call xchg dec dec clc inc pop leave fmulp push adc ret cs mov fsts and sbb mov shr add add sbb mov mov hlt loopne inc lock add ret mov pusha es jo add mov psubb dec shlb icebp cmp loopne idiv lods jno sbb adc out jae pop xor mov xchg shlb add add ror mov stos sub mov out and inc adc mov pop push (bad) in pop inc push adc call mov int3 mov fist push mov (bad) aaa out add sub out add lret cmp inc sti mov adc test dec sbb fcoms arpl loopne je push and mov mov ja repnz imul stos test mulb leave scas adc xchg mov mov ret js scas (bad) scas adc ljmp sar stos pop add xchg loop leave mov mov inc stos pusha jb pop stc sub sub fs mov test clc adc stos xchg adc jns and push or popf lcall xor popf sbb xchg iret ficompl repnz and mov jnp stos ret sub das rcrb push pop jae push adc lods mov mov mov xor sarb fsubs lock clc inc sub inc test cli rcrb gs mov adc dec call shll lock enter mov jecxz out popa gs arpl addr16 or push xchg enter ret xchg xchg xchg mov adc mov push xchg adc sbb int3 aam shlb aad shll adc push ret push xchg push mov adc or mov int3 xor ret ss xor cmp int3 hlt adc mov cmc xchg repz adc ja jb jbe je js int3 mov mov lea int3 or ret push xchg or adc int3 int3 adc mov int lret mov adc dec ret dec xchg dec mov adc or scas sub sub ret cs sub xor int3 in adc mov in xchg jmp out imul outsl ret outsb xchg insb mov popf mov sbb and pop cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp in mov enter int3 add add rclb inc adc inc ret mov mov mov cwtl lods pushf or mov adc gs inc loop,pn mov popa or rclb mov xor mov aam nop sub mov adc mov mov mov (bad) cwtl mov cmpsl shlb or cmpsl lock clc add fsubl xchg cwtl sub inc sbb mov or js or repnz adc add dec sbb cld or mov mov mulb testb cwtl movsl cli mov inc (bad) jne scas lock xchg and loope push stc lahf loopne inc daa sahf mov enter ds mov xchg mov add mov push inc push out push push dec and mov in mov dec or mov fistpll dec adc mulb jnp adc jo aaa das aad and enter cmp test pop jle test cmpsb xchg pop mov adc pushf ret sahf xchg lahf jmp fstpt mov sbb (bad) dec or jnp mov or mov jge cmp (bad) jle jo or or jbe inc pop cmc std pop shlb stc jp or arpl adc or mov mov cwtl popa nop push mov data16 jecxz cmp stos aad imul sbb mov push dec and xchg ror or loopne (bad) je loopne mov inc xchg loopne inc or sub jecxz in add scas popa adc rclb jmp dec xchg adc cmp loope lock enter cmpsb jmp cld sub add lods sbbb adc mov movsl inc addr16 jno das xchg dec adcb (bad) ss push je jmp mov sbbl push roll ja jbe subb fbld test mov inc and xchg (bad) jo into stos aam arpl mov les pop xorb shr xor lret loop mov mov bound jo call shrb jecxz push xchg xorb pop pop (bad) push in lahf addb arpl (bad) call push fucom add mov mov aas (bad) xor sub mov dec sub popa outsb inc jne nop rol test adcb loopne mov mov loop inc sbb mov addb pop mov roll das (bad) jns lods push test ss cmpsl cmpb daa inc (bad) xchg into enter push cmpb enter inc lock pop call push sarb arpl cmpsb xchg mov mov repnz mov out sub orb cmp dec push stos add cmpb xlat inc jbe les outsl xchg lret push sub (bad) pop in loop pusha mov (bad) mov push and popfw adcb jg inc aas sub andb iret lret sbbb les adcl mov cwtl sbb rolb outsl bound dec add mov jbe and ret cmp lods sti sub andb dec jge mov lock inc into dec leave xchg xlat pop addb lds mov dec mov test pop arpl in and xchg mov xchg mov and mov cmp insl sub xor adc fwait sbbb shr imul xchg lock insl add xor push jne insb mov pop popf sarb xchg mov imul addb stos test jecxz dec mov pop daa js sbb int3 push push push add mov outsl mov cmpsb pushl hlt lcall add aaa xchg je sbb inc inc adc mov data16 xorb ret fld1 inc loop sar cmp cwtl mov incl sub hlt repz mov sbbb ficom mov test xchg ret adc cwtl mov xor sub pop push scas roll sbb rcrl arpl or pop fdivl cwtl loope cmc ja push or fwait out popf shrl cwtl sbb enter lock lods mov subl jle and cmc sbb pop inc pop ss xor adc ds mov fsubs js imul sbbb pop mov push sti out sbb push xorb add mov mov fmuls cwtl cld lret cmc xchg dec pop into fisttpl xor test pop call mov orb mov addb mov repz pmaddwd aaa orb jg or jp sbb pop ja cmp mov popa inc sbb aam push (bad) add cwtl popf mov push mov out leave cmpb and dec cltd icebp adcb rorb ret imul jbe es hlt loopne push in call addb les or cmpb add std addb clc lds or dec sbb add sbb or cltd xchg addb add add and outsb jbe adc std inc fstps arpl jb scas cmpb bts js je mov fistpll jno xchg ss ffree pushf xchg rolb pop in xorb adc xchg push xor and cmc xor push jne cwtl push jl adc xchg daa jo je mov popa push ja mov test mov (bad) je inc sbb xchg or in sbb jo mov pushf into stc dec (bad) (bad) lcall movsl push push test jge sbb mov cmpl (bad) aad sti test jb bound or pop add xchg cli inc (bad) in (bad) add mov nop cmp les sbb jl mov sbb add cltd (bad) lcall cli or frstor mov faddl loopne sbb or popf test inc mov sti addb jl fadds jns sbb lcall inc popf movsb movsb mov (bad) lcall sbbl inc fadds jns lds test add inc cltd and rcrb mov adc inc fdivr orb (bad) lcall cltd psubw jnp fisttpll std inc dec test inc fsub push mov inc mov push mov mov mov inc mov lds inc adc sub mov push ret sti addb jb and addl push (bad) inc stc mov cmpl addr16 mov mov inc adc repnz jp adc mov fisubl or inc jp (bad) sti adc test (bad) adc cld add sbbb inc (bad) movsb std addb xor sub sbb nop call jne or mov repz and cli dec subb call mov jecxz mov movsl cwtl mov fisub inc jns pop sbb add (bad) cmpsb push push gs int3 cwtl scas jg sbbl jl rorb addb push or pop or nop ret xchg ficompl (bad) daa mov inc jp lcall jnp mov orb andl jno jne cmp test inc xchg xor fmull cli sub and daa test xchg test and mov xor fistp lret pop xchg and scas push inc aaa adc cltd mov mov push lods lcall mov xor addb jl push (bad) pop mov roll cmp cmp cmpl inc lods push sub test cwtl xlat testl addb pushf mov cmp mov lret pop xchg rcrb and xchg xchg (bad) idivb sar mov (bad) addb cmp inc mov sub and mov sbb add jo sub addb cmp push nop lods jl in or jle xor push (bad) lock pop ret xchg adcb jno sub add test andl xchg xorb test aaa repz mov ret jb pop fmull (bad) aas stos dec outsl jns cltd in daa inc cmpsl push les test orb pushf (bad) adc orb imul cmpsl jl lcall std pop test sbb mov mov lcall mov inc and movsb xlat dec addl xorb rol cmp add int3 fadds sar cwtl add xchg and or or sbb in mov nop cwtl lcall imul pop orb and jnp sbbb xor sbbb sbb dec cli lahf test icebp inc sub sbb mov push orb shufps addr16 ret fdiv popa sti or dec mov mov fidivr mov cmpb repz insb jp dec inc inc hlt pop jg xchg inc cmp add sbbl mov mov or cs cmp sbb inc lods pop fcom mov mov in das fadds in out addb bound mov mov repnz and into cmp mov sub xchg cltd jbe (bad) outsl std sbbb push sbb shl jb rorb incb aas jae loopne mov test das cwtl mov pop in (bad) ret rorb pop fbstp arpl and add jle pop shrl or sbbb rcrb ret push orb mov and cmp daa or dec jg mov subb addb mov pop popf pop andb out cmpb jl inc roll mov xchg (bad) and add in and mov inc aam xorb (bad) dec push inc jb flds jmp push addb pop iret or xorb lret movsl jnp in movsb add (bad) push cli imul hlt lods pop add mov cltd ret addl xchg cwtl inc jb push std pusha inc jnp fistp into cmp jno xor ret push jbe lock (bad) mov pop addb dec sbbb and iret cmc addl dec sbbb cld xor mov jl and addb jne sahf add cmc fcoms pop icebp movsb cmpb fnstenv sbb and test clc int3 and ffreep pusha stos (bad) sbb dec addb imul test jp add adcb sbb cmpb mov and mov test mov inc hlt adcl test mov cmp pop nop rcrl mov lahf xchg add dec popf sbb orb loope jne jb dec add (bad) test pop push pushf cmpsb xorb dec insl sub cli cwtl sbb das add add imul lods orb jne and sbb (bad) stos pop andb (bad) dec (bad) adc cwtl push xor out mov andb fwait xchg push mov ret adc xor lahf out pusha jo out lods xorb std xorl dec cmpb pushf and pop stos imul sti add les mov add inc sahf out xor cmpb jns les (bad) dec cwtl sbb daa pop ja mov ret and cmp ss mov sbb movl jb std mov cmp xchg jg adc and xor push (bad) mov testl and popl out out jbe pop jl push fmull daa rcrl in jo arpl int add mov xchg push xchg fmuls loopne push jb repnz inc cmpsb add pop pop mov lret addb test mov rolb aas mov jno adc add jmp inc andb test sbb mov test pop push clc jge inc (bad) xchg push cmpl enter adcb sbb pop test and daa aas je sahf fistl test push and test pop test mov xchg sbb jns dec orl movl mov mov push jne cmpsl push push clc pop dec or xor lock stc rolb roll inc jns addb mov std int3 (bad) and and fs mov cltd andb neg in ds pop push add addl fwait ret sbb dec inc jae inc subb dec (bad) or jnp subl xor inc mov scas cld add xchg cmp ret add cmc cmp mov mov dec inc pop mov mov ljmp ret push jne jp daa jle push add stos and xchg orb mov inc mov out imul inc inc or out mov cwtl xchg (bad) icebp inc xchg cmpsb jb loopne out fisttpl repz stc addr16 dec arpl xchg (bad) in pop ss mov or adc or cmovg mov fisttp andb ret pop inc das xorl sbb out add add jb or mov inc mov test mov pop inc repz sbbl dec rolb subb or inc add mov add adc clc call sub cmpsl mov iret (bad) cwtl (bad) in push dec lock dec iret cwtl sub int3 lret add add rorb cmp shr jns xorl sbb lea sub jp push dec aad (bad) enter jns mov lea mov daa lds inc dec sbb add xor adc clc and out mov ficom in mov imul add mov add rcrb push mov mov mov lret mov dec mov dec cwtl sub dec (bad) in (bad) dec popf (bad) iret push (bad) into adc cmp mov inc inc cwtl fbld push dec gs (bad) jne adcb mov sub dec xchg add out test iret add xchg mov out jg bound daa xchg pop sbb sub dec mov lcall out inc jb imul xchg xor stos fisubl and iret repnz addb (bad) xor enter loopne sbb add sbb pop push mov (bad) or stos andb addb jg andb into pop add or mov mov insb xchg xor subl jl in lret movsb cmp jecxz stc or fldenv mov pop xor imul sbbb dec fs mov (bad) nop mov mov insb xor (bad) subl add andb data16 jle outsb add cwtl push (bad) mov jb xchg pop in sbbb call je mov xlat sbb data16 inc pop or sub loop das fcmovnu mov insl out sub push (bad) xchg push jp and call outsl cmpsl cltd adcb push push fidivrl bound dec imul js adc loopne mov addb mov dec andb icebp pop inc imul inc fstps pop (bad) subb push mov outsl cmpb lods andb add cmpb (bad) rcl mov or add inc ret addb add movl or mov add mov shrb xchg add push repnz mov hlt xchg pop clc adc adc cmp xor addl mov (bad) outsb inc adcb mov cmpb xorb push add xor inc (bad) xchg cmpl jne add data16 orb mov lods lds jb adc add jmp fcmovnb sbb sbb add xor mov cwtl pop inc lods add lahf das xchg inc mov add dec or xor adc push xchg push orb push adc test inc enter ret pop shlb sbb add ss incb add mov xchg mov adc lds movsl sub inc adcb xor add leave (bad) sbb xor subb inc xchg inc test fs push adc inc mov (bad) addb ret js (bad) xchg testb inc aas mov pop xchg add mov sbbb test push fs inc and hlt lds test jg push lret mov mov movsb fs mov xchg adcb inc dec fiaddl add xor inc adcb push jb or mov add clc inc and pushf sbb hlt aam mov add xchg push orb ret xchg xchg add or add sub add out xor aaa add or jae xchg inc je or mov mov inc orb loope jno pop pop imul js push (bad) test pop push inc mov adcb lcall inc out or andl das pop ffreep out mov sbb inc xchg cld or mov incl inc jno inc adc cwtl add test jnp mov imul adc cli or fwait adcb (bad) jno pop add inc popa sbbl add dec mov jne in inc adc mov inc adc in mov jno mov test int pop test jne (bad) jo lock mov xorb mov sub out pop fadds movsl cmpb xchg addb sbb adc pop les cmp mov mov push cmpsb sub (bad) xor inc inc push mov les test mov add dec dec orb pop mov xchg test bsr es dec xchg dec mov inc nop lret cmc or push in sbb fwait out jecxz mov mov and dec cli andb jmp xor lods mov jmp stos inc push insb popa pushf push push test xchg xor mov jb xor jno mov icebp push cmp mov jns cmp popf jl adc mov cmp mov or inc out sbb mov xchg mov pop push cmpb mov push enter call xorb jno in cmc jle dec add or pop icebp adcb and cwtl pop xchg leave fiadd in jle mov or cwtl cmp (bad) mov sbb pop lret sub sub cmp dec repz and arpl std cmp xchg cmpb jl movsb sbb pop das clc mov jne mov or mov lds sub sbbb test xor add lods xor pop sbbb neg repnz loope clc mov inc negl out icebp ret sub adcb aad add fcompl sbb add (bad) jmp pop mov xor adc out sbb pop incl push push nop adc inc cmp in ds mov popa push adc ljmp and outsb and push out push and push imul das icebp mov (bad) and mov clc dec jae mov push cmpl lcall or adc js cmp fidivl clc stos and subl enter mov leave mov sbb inc imul adc subl add mov push movsb out sahf dec aam in or hlt lret das inc outsl orb inc xchg xor ljmp fwait icebp sub cmc and fdivrs sbb shrl aaa inc ljmp add adc xor ds popl outsl jp sbb jnp dec xchg dec sub and or adc clc or pop cmp cs dec addl inc mov add dec sti mov jne xor push jp and add hlt (bad) adc orl insl adc push orb add fistp xchg push xor mov invd shrl xchg push in mov out jg add pop daa in bound in in (bad) call xor enter push cmp or into shr es cmp lods mov ss sbbb dec or sarb mov sbb sbbb mov icebp movsb in fs jns push (bad) sbbb std jne arpl mov and orb inc and mov lea (bad) dec mov xchg loope clc pop subb adc xchg mov ret into (bad) nop stc dec xchg clc xchg adc test mov inc jbe and xlat mov movsl addb inc cmp popa sub add xchg roll arpl lea dec test pushf jne aad lock xor popa outsl lock sbb add and cmpsb das fs addb or inc imul and adc adc sbb inc mov cli push sbb fadds or cmpb inc jbe cmp imul inc or mov jno or jge outsb push (bad) lods movsw ret (bad) cmpsl (bad) arpl rolb cwtl push addb ret xchg sbb mov cld sub pop out test sbbb inc arpl repnz pop jecxz clc mov sbb jmp cmpsl push enter jno out icebp aas jecxz lcall add jno dec pop lds repz jae xchg pop (bad) and xchg into aad lds fildl out xchg sub xor xchg cmc orb lods in dec stos jno clc mov rolb xchg addb fldcw subb push mov xchg sti and ljmp int pop xor cmpb bound adcl xor cltd push loope add popa lret insb subb test bound das stos cmpsl loop cmp mov adc cmp pop orl xchg jl xchg cmp dec xchg xchg dec jecxz xorl popa xchg dec jmp rcll or test stos andb sbb dec or mov jne out lock inc imul push mov sub cmp (bad) mov ja xor test xor test xor mov or xlat add or inc sub cwtl cltd data16 int add (bad) cmpsb mov xor sti xor (bad) pusha jne icebp adc dec mov jmp sub or lret sbb jns loope jmp imul inc lret ret push xorb (bad) mov sbb (bad) dec pop out test xor call mov adc mov pop orb gs mov popf dec xchg dec andb fsubl loope loop imul insb mov pop orb addr16 movl mov pop arpl mov mov movsl xchg sub xor dec mov loope push push jns inc mov psllq pushf and inc mov mov xor je rcll and jmp cmpsb xchg push in decl test ja hlt js lds subb roll adc pop cmpb mov clc xlat sub stc inc test int3 jg add leave mov fdivs ret add jge xchg aad fdivr push (bad) cld das mov iret mov cmpsl test sbb test out jge popa xchg inc mov inc and js cmpb xchg in outsl fwait push subb mov imul and xchg test jne loop inc orb cmp and adc dec scas rcll les dec and sbb sub pusha orb cmp orb test in mov xchg js mov or je aam subb pop jmp lds sub push out mov jnp outsb push xor lods jbe and sbb mov movsl cltd xchg cs cld or pop or add inc cmp in push imul mov sub test jb rcr pop cwtl roll mov inc pushf sti xorb sbb repz jp pop ret mov push ljmp inc fucom cmc push cmpb cwtl xchg enter mov xorl jecxz negl fsubrl test (bad) sahf push pop xchg xchg xlat push push adcb clc mov loop test andb in sbbb sbb jmp and inc lret imul push pop test sub je mov lret subl jecxz adcb movsb mov out add out cmp xchg insl insb ret mov lods sbb jmp jge xchg (bad) je orb in or pop lock dec bound iret and outsl frstor cmp (bad) xor pop add pop rolb fwait out mov jge mov fcomps dec cmp cmpsl call xor lea fstpl leave (bad) sbb movsl adc fcomps cmpb cmpsb andb lock and cmc data16 or in in std (bad) loope daa cmp xor jmp sub outsl mov sub add cmpb aas ja sahf lods xchg (bad) adc pop fild push or inc inc orb mov jb lock lds cwtl shrl pop loope cwtl lea pop xchg test sar movsb (bad) pop and push jmp xchg pop mov mov jge call jne test mov push inc lahf or repnz in pop into pop dec xchg push pop mov cwtl jecxz rol out xchg aas xchg clc or cltd and ss (bad) addb mov mov adc pop sbb sub or sti mov cwtl leave mov pop mov rolb xor xchg subb cmc insb add cmp jp and in jle in cmp jne sbb int3 fidivl mov mov rcll xor stos popa jp insb lcall jno sub sbb mov ljmp push clc jecxz cs jne addr16 imul fwait xchg cwtl subb push adc fdivrs enter push inc xlat movsb sbb pop mov or mov ds jae mov sarl xchg aas mov cwtl ja popf and dec test inc sarb cs addb dec mov pop cwtl push (bad) (bad) fldenv sbb xor jge gs cmp aam sti fist mov jno xchg ret rcrb adcb shlb aas imul orb jo pop jnp mov in mov cmpsb movl bound or dec sbbb pop mov inc fadds or push mov imul xchg jnp sub adc addr16 insb mov sub jne sbb insl add ficompl orb jnp xorb and jp rcrb jl fs sbb mov leave dec adc push pusha int int3 test cwtl or js lods fcmovu cmpb call dec cmpsl scas clc out inc idivb repnz and xor dec xchg xchg xchg xchg xorb add cwtl imul and scas adc sbbb (bad) jb imul dec add inc out mov pop icebp mov (bad) repnz cmpsl test mov and insl rclb xchg lods xchg adc cmpb xor mov jg and or add subb lcall pop mov mov mov insl and pop mov fadds cwtl xor push out (bad) add cmp xchg inc ret sbb adc sub mov cmp (bad) xchg push ficom or fsubrl pop andb jg push mov fsubrs scas inc andb sahf pop imul push adc jnp dec cmp rcll jns loop ficompl in test (bad) xchg jmp cld in pop push push repnz lea les mov xor jns test and scas loope cmpb mov sbb mov data16 mov movl cwtl add repz nop dec pop imul jg sbb dec out sub add daa outsl push andb gs xorl in fwait out mov pop mov jnp sub (bad) cmpsl ret inc ja pop stos cmc jp mov jl sbb dec addl imul arpl clc and dec subb mov mov cmp in and das cmpsl mov aas test bound adc aad mov push xchg cmc jae inc and and popa (bad) imul (bad) adcb in mov fldl int jbe add mov cmpsl xchg andb fld fwait adc cltd or push dec je subb imul push ret mov jmp sbb inc (bad) ljmp cmp jg jo inc aam andb mov sbb movsb cmpsl push subb (bad) hlt xor orb xor cmc ja adc lret arpl add jnp sub and and mov inc jmp dec push (bad) jl stos leave subb mov insl int test cmp sub sbb hlt or xor mov or fldenv and addb mov cltd push sbb (bad) jecxz addb xchg lea sahf ret cmp xchg jno add xchg dec xchg scas insb xor int3 imul andb cmc pop das (bad) (bad) out clc ja out subl mov dec dec flds mov cmpl cmp mov sbb fisttp dec mov inc xchg cmp and daa lcall cli pop ja add in push fwait cmp out outsl jl (bad) lock mov adc imul pop pop push cmp (bad) sti dec scas lahf movsl xchg subb push ds push pop (bad) adc sub (bad) mov lods jo jge inc push push clc jbe outsb dec subl or mov jb cmp adcl lea sbbb lock lret jns emms outsl mov idivl stos lahf push out pop cmp lds cmp or (bad) in jbe inc push hlt mov ret (bad) and push addr16 mov or xchg jbe es imul xor pop push addb dec fsubs (bad) (bad) jno stc ljmp leave jns movb das adc insb mov fcomps sahf test (bad) leave popa imul pop add shl stc pop ret xchg enter jmp stc mov les sbb pop aam in adc push push jbe push enter and mov popa mov lock jno insb bswap push fwait rcl bound mov imul cmp cmp push fnop cli add xchg sub jae (bad) andb pop pushf mov negl popf mov jmp scas sbb test test js mov pop rcrb pushf sub outsb pop jle movsl test push inc (bad) mov popf (bad) movsb imul orb pop push adcb cld fcompl push adc into (bad) les (bad) out pop inc ret jmp push mov fistl xor cmp cli dec addl mov rorl pop insb (bad) xlat dec mov xor imul stos stc fs orb sbb jae int sbb dec push std pop add test movsl cmp mov fwait push test rclb mov lods sarl mov xchg cwtl push sub (bad) push addl aaa movsl repnz jmp xor xchg cmc pop mov test or (bad) call ret jl xchg mov push inc clc in or sarl mov mov outsb in ret pusha xchg pop outsl lcall dec cli adc bound popf sub mov add sub subl pop sbb and loope bnd xchg or test sti sbb mov int3 fdivs cmpb (bad) es jmp jg in fdiv (bad) jbe xor testb les sbb push mov fimull jle cmp loop xchg sbbb dec mov or inc or sahf xchg outsb cld arpl cmpl add jmp xor xlat inc orb mov xor (bad) loope cltd imul in push dec addb xchg aaa clc mov data16 sar push in and fild mov push mov pop xchg push ret and pop ljmp subb icebp dec sub das xchg mov mov pop xor fisub pop add add mov inc cmp out jb add bound movsb mov and subb or jg loope addr16 adc fisub ficompl and xor mov lret jge and pushf imul insl enter mov mulb repz xor stos jl test xorb sbb lcall ficomp xlat fnstsw sub cmc xchg cmp or push mov mov xchg inc jae movl out andb loope ret fxch pop cmpsb rclb and pop xchg scas jle (bad) xorb (bad) xchg sbb je cltd xchg dec in hlt gs rolb sbb mov xor cld outsb orb jae and in push in test ret lret xchg mov cmpsl sarb popf add or push push subb enter cmp jb call stos inc scas and cmp xor sub cmp imul and popf sbb xchg pop sbbb clc pusha inc rorb or out popa mov inc repz cmp add cmp xchg mov mov fiadd cltd mov adc aaa cmc jbe cmpsb cwtl jmp fisttpl xchg dec subb adc or push popf arpl jecxz sbb mov mov lea sbb std mov ret pop mov aad push jge orb push push inc pop mov xor adc sub frstor dec cmpb xor pop aas mov sbb add inc out sub scas andb pop xchg jp mov lcall mov pop int3 dec subb addl mov push jge cmpb sbb sub xchg stos test enter aam inc adc test inc movsb (bad) jne and fsubs dec xchg ror (bad) mov addr16 cmp inc cmp insl test push mov dec orb and jne push xchg aas jno dec mov subl iret xchg fiadd lcall push xchg cmpb xor xchg mov xchg push adc imul into lret cmpb sub pop fwait mov mov mov xchg ja lods pop popf xchg dec loop mov stos fs cltd xor data16 push xchg sbb xchg ja test xlat sbbb dec inc jmp push addb inc mov pop mov mov cmpb aaa or mov out or sbb negb mov adc jnp sub shll rolb pusha adc xchg neg movb push xchg pop mov (bad) mov adc pop jp push andb popa dec test int3 (bad) cmp adcb jmp jnp cmp sbb mov inc sahf fistl (bad) int mov nop jnp lcall rolb into int testl addb nop inc xorb mov loope jecxz jae rcll mov cmp test cwtl pop bound sbbb pop xchg cmpb inc mov jno or cwtl inc (bad) pop add ret mov ljmp lods jmp and jbe sub fild inc (bad) xlat or aaa ljmp dec pop gs adcb push xorb mov mov push jne test scas push loope adc loopne inc inc add (bad) mov mov aam mov (bad) sti or adcb ja xorb test pop andb push loope jns push pop push jno nop mov jo inc xlat jbe xchg int3 (bad) jle pushf loop lods or push test mov cwtl sbb clc fldl out fisub jecxz mov andb mov mov inc test mulb pop (bad) mov shlb jge adc inc inc adcb xchg adc pop cwtl jo pop mov cmpsl dec xlat cwtl add add dec inc andb or call xchg cmp jb cs cwtl enter pop dec int ja ret stos inc mov out dec cwtl fnstenv (bad) cli test js lods roll lods into aam dec pop pusha movl jnp push sbb mov add aas mov aaa sti (bad) in ljmp mov int3 loopne mov sbb cld hlt xchg mov icebp loope xor daa clc cmp adc inc xorb jne popf adc iret fcomi ljmp add xor lret xchg popa jae pop test andb dec inc cmp xorb scas cmc jnp cwtl sbb push rorl xor mov dec add cmp mov daa jp sti pop icebp dec enter bound mov sbbb sbb inc and adc lods sar fadds test fs mov loope cmpb dec outsb mov jne (bad) xchg idiv pop aaa test repnz cmp mov aam push sti adc faddl mov mov int3 cmp ds dec (bad) roll xlat pushf xor subl div and andb sbb call jecxz test (bad) add jbe in leave and loop mov call (bad) or push insl sbb subl imul add sbb leave pop pop and ret orb push fmull ja insb adc mov jp mov pop mov push xor add sbb jo cmp mov faddl mov jmp sbb (bad) pop xlat add sub sbb mov test adc mov cli out dec or test dec pop (bad) mov jo jb loop sbb dec pop js mov adc out movsb sub add inc repnz stos pop pop xchg push outsb into dec andb notl inc xchg xchg aad inc cli lods call imul pusha int3 loop dec sbb hlt cmpsb sbb fdiv add jae mov fdivrs inc out pop andb stos aas out addb arpl adc andb mov inc inc orb imul add shrb clc pop mov push (bad) jns lock sub xchg cwtl adcb lcall jecxz pop push or jp pop iret sub bound roll pop sbbb rcll imul popa inc push loopne fsubrs scas stos cli call sub and add lea (bad) sbb push cmp xlat sub adc pop xchg push leave repnz inc mov jle outsl in cmpb fadds and pop jle sbb and cmpsl stos test sub test subb repnz cwtl push mov inc test out pop mov jae push ret (bad) int3 cli pop push lcall movsb and xor sbb sub rorb imul add loope dec mov mov and adcb pop aam aad mov sti xchg std jno loopne dec jb sbbb dec inc or pop jbe xchg pop fadds lods cwtl (bad) loopne (bad) lock xor (bad) fistl sbb mov das mov in jle arpl sub ret sbb jp xor addb pop icebp lcall fiaddl andb subb rcr testl les sbbl mov push or ja out test out (bad) xlat push fdivrs sub sub fstpl xor adc dec out sarl jns loopne fstps aam lds cmp idivl je fwait lahf jno popa pop iret dec xchg adcb push adc flds fimul rol popf add inc jmp adc je data16 jne xchg xchg cmpb lret enter js insb repnz lea dec mov or pop inc cld mov lahf bound orb in dec push mov sub dec icebp adc andb (bad) lock ror subl adcb aad jne jle push or fwait mov cltd mov sbb jns push subb (bad) xor cwtl cmpsb insl into fnstenv insb mov aaa cmp in xchg call dec gs pop incb sub cmpsl insb test outsl clc imul test cmc leave jno and loopne fs mov cmpb cmpsl sbb out mov (bad) inc add xchg and mov add (bad) sub das test test sarb xorb std pop movsb mov stos loop (bad) xchg add (bad) mov jo int lret into aaa arpl (bad) ja mov xor inc push pop int3 mov addb addr16 xor mov adc addb pop std shlb cli daa cmpb test push xchg aas out rcrb (bad) js or aad xchg mov mov push inc push cmpl xor cmp and push pop inc popa hlt sbb pop sbbb jg es pop or nop push inc pop jo in addb ja adc test mov xchg into inc push ss (bad) xor xchg pop pop mov lods stc mov sahf pop mov cmpb inc add call je push test jne das fstpl cmp mov addr16 clc out mov inc addb stos fwait lret mov test popf push aam xchg ret into sbbb jl jns and aad cmp xchg cld ret (bad) mov sbb sub adc addl pop xchg or mov inc jne imul dec or or lods enter lahf xor push (bad) mov test dec dec out xlat rorl sbb (bad) lret mov cmp addr16 or adc cmpb push mov dec iret sbbb test lret pop sbbb adc adcb adc sub adcb scas fildll jbe jno xchg mov scas outsl cmp jns aam iret cmpsb jmp test sbb decb shrb mov xlat mov and jne sbb js ja add cmpb sbb bound jp test scas jge (bad) jbe movb movsb add pop imul mov aas mov subb cmp subb stc mov hlt pop cmp sbb pop test jbe test mov in sbb or or add lcall add ret sbbb ror icebp xor adc jae fwait rorl je push (bad) (bad) dec inc adc test lds mov fstps fiaddl mov imul int inc and dec ffree sahf stos subb pusha pop lock xor in gs mov adc dec add jecxz sub xchg loope rcl mov and cmp lea cmp mov and jnp adc adcl movsl lret das pop xor and mov clc jmp lock jne imul xlat and xlat and cli inc inc or or sub xor lret mov xlat bound sub cmp add add add es clc mov dec or xchg mov lcall inc scas lds ret rorb push test loope add ss jo adc add loopne and lcall sbb movsl rorb sbbb jge mov sbb add ret lret push test push cs adc or stos pop std dec ja dec pop std (bad) lahf xchg and frstor (bad) lret jbe adcl mov lret or and ja lret and jge inc jae dec pop into and xlat cs call int3 aaa jbe inc mov push sub xor cld sbb (bad) jo outsl mov nop outsb pop push cmp out test pop in pop iret movsl rolb xchg (bad) test push addr16 in daa mov cmpsb lods adc push inc mov xor inc (bad) das jno cmpsl insb (bad) push jmp inc sbb pop pop dec repz mov adc cli outsb (bad) std mov divl dec sbb sub add cmp add xchg sti ja mov lods (bad) xchg inc imul mov mov pop cmp mov loopne inc loopne mov push mov leave sbb jmp loop pop in and outsl xchg xchg jnp xchg (bad) xchg sub lret pushf adc sarl jge adc fildll insb push mov inc mov mov fbld pop arpl es and mov shlb scas sbb or and enter sti push cmpsl jns xchg fbld nop add sbb sbb subl xchg stos ret mov mov xchg pushw lret push adc sbb xor jo pop jo (bad) mov and ja push (bad) jo adc or xchg mov imul lcall mov nop in mov inc or mov fcmovu ljmp and (bad) aas adc pop rcll pop fbstp loope leavew fwait jg sub jno jb insl xor and popf push jo sbb dec xchg sbb xchg push stos loope (bad) adc popf mov adc fild (bad) (bad) sub pop and cmp sarl push bound fcomps push insb cmp adc sub inc clc pop int cli (bad) mov lret dec stos and mov pop insb out pop icebp pop sub xchg or adc enter mov fcmovnbe sti and xor sub sub fsts popa push das dec adc lcall sbb in cmc and sbb das rcrl push in test and mov and inc jge pop cmp xor in xchg dec and push das lcall sbbb pop and inc iret inc ret dec jmp xchg add push sbb xlat and jae int push sbb add or xor jbe push sub xlat imul add daa (bad) lret jl imul sbb mov add inc fwait mov imul mov add lret mov nop sti ss sub add js stos das sbb mov mov adc jnp or cld inc xchg cltd mov sub ret jb cmp lret dec jne movsb (bad) and sbb cmp repz repnz jbe bound aas ss (bad) jb push jno pop cmp imul cltd and cmp cld xchg call repz push dec (bad) jp push dec lods inc sub jnp test lcall xchg or lcall outsl mov xlat and mov xchg mov mov jo mov subb fcomps xor cmp cmpsl pusha clc lock and out fwait test lea rol add and mov movsl cmpsb enter mov add test mov cmpsl ret mov mov test nop inc and and movsb popa nop dec mov nop ret xor (bad) mov add shrl in cld or mov push cmp or cwtl mov orl mov or lret lahf or jecxz mov mov gs mov cmpsl gs xbegin shlb je movl inc mov mov enter adc lock inc mov movsb loop and or dec out mov jns xchg mov push test addb ss mov (bad) aam fldl mov loop add gs or ror or and nop (bad) jno mov mov enter adc loope mulb xchg bound add inc int3 nop fsubs int in add adc sub in nop addl push test and mov xchg adc mov fldenv and popa adc cld daa or mov iret adc loop xchg mov rorb in add add lds mov movsl decb popa (bad) enter mov inc outsb sbb jb loop mov test mov mov and cmpsl into nop pop popa xchg add inc xchg loop bound cli xchg mov cmp jae sub (bad) cmpsl or xchg enter or and cld rolb enter in loop inc ret cmpsb clc xchg mov and test in cmpsl inc stos rcl mov leave dec sbb ret add or sub cld jbe push out das aad sub test mov and ret jge sub mov sub outsb test push fildl xchg icebp add loop mov test lret lock xor insl cmc divb sub lock movb dec rcrl inc andb and dec pop clc cld fild jne js adcb mov orb or jmp test dec popa mov loop push xor mov cmp pop cmp imul and push xchg psllq loope xor add (bad) add and (bad) mov mov nop push mov and mov jg and (bad) jo lret xorb jns mov arpl dec outsb enter repz xchg xor cwtl dec sub repnz or or fcompl (bad) ja jl xchg imul inc sahf and lock or mov js out daa or add repz jb jnp nop loope flds dec ret cmp jno inc xchg push fisubrl (bad) loopne ljmp sbb stos aas (bad) (bad) iret ret jnp lods and inc push dec aaa lcall pop shrl cmp dec mov je jb lcall xchg mov pop inc xchg aad outsb adc js std (bad) xchg xor or enter and iret push andl nop sbb jb jnp xchg fiadd and sbb (bad) loopne ss popa stos push or xabort and or enter and inc bound paddb seta add sbb add mov popf (bad) add mov mov add cltd lods jbe mov xorl jle xor push xchg jge loopne daa add and or in add inc mov out (bad) xadd lea push add dec dec loopw iret adc sbb adc icebp enter outsb add lcall gs mov pusha mov adc nop aam mov rolb inc xchg lcall inc movsb add cltd xorl and cmpl adc mov enter pop and mov nop add push sbb adc pusha leave sbb pop mov loope sbb cld movsb (bad) pop inc fldenv xchg mov bound rolb add sbb add (bad) or push ljmp cltd mov (bad) dec loop or popa and rolb inc xor cltd (bad) aam bound leave (bad) shlb movsl fndisi(8087 mov jge shr mov scas testb clc sub mov lcall (bad) movsl js test pop js and adc rorl add lods movb rcrb out adc inc bound (bad) leave lcall rolb xchg test add add movsl cs xchg mov daa jns jg xchg pop jb pop add push (bad) and or mov inc inc push jne addr16 test rolb mov adc loopne add and sbb cltd test clc cltd out ljmp loopne fcomps inc add fistpl inc dec cmp pop and dec (bad) add fwait add movsb cld xchg add loop inc sub scas push pop and (bad) call movsl add in test sbb sbb push jl mov inc pop and mov int3 in sub or lods cld sarb mov push add push mov rcrb add xchg and and push (bad) in stos xchg lds scas inc pop and add orl clc fwait pop cmpsb inc inc ret cmc repnz lret and stc mov add (bad) jb ficompl inc and leave or cmpsb cmpsl (bad) out mov sub inc or adc imul inc fyl2x mov jns addl rorb movsl shlb test mov je push movsb inc jno jmp cld loope (bad) bound add add sbb movsb movsl jno xchg add js test add jns mov jb mov (bad) shrb lret rorb jns orb popf loope les xchg ret lcall push out sub fbstp mov sub mov (bad) fadds test xchg sbb or in adc bound xchg loope push inc (bad) mov test xchg leave ret add adc and jbe inc sbbl test lahf and ret ret mov pusha mov push and mov jmp loop andl inc dec push and push add je mov (bad) rorb fxam jno stc dec loopne xchg popa cmp inc andb or pop adc mov inc mov cltd loop cmpsb fwait popa cmpsb xchg and xorl (bad) loope lcall mov pushf cmpsb cwtl push (bad) pop call lcall daa or sub dec lods adc and adc push dec test xor mov xor inc stos addb jb mov (bad) add stc pushf int (bad) xor arpl cmpsb loop pop cmpb in push scas push pop subb lock sahf mov or rol lret mov mov adc subb dec mov cmp sbb test sbbb lret data16 ds mov test inc stc cli mov dec orb lahf mov or aas push jmp adc mov ret cmp cltd push dec inc out inc mov push cmc out lods subb inc and fldl inc das adc subb rorl sbb mov jb es and in addr16 je sahf into lods mov clc mov cmc or incb lea mov jns adc jp mov pusha mov mov mov or (bad) inc movsb icebp and shlb mov addr16 pop adc or loop int3 push adc aaa enter or repz bound popa mov dec (bad) enter xchg xchg mov adc mov and cmp cmpsl enter or loopne add xor mov mov loope popa mov out aaa adc aad push or mov int3 rcrb push mov mov enter adc mov mov or shlb adc addr16 sbb xchg adc (bad) enter ret icebp xchg xchg mov out push or push adc adc ret repnz jb xchg (bad) ret xor mov or addr16 or add (bad) mov js mov adc mov movsb xchg jecxz jae int3 adc andl xchg inc addl adc mov loop xor or rcll push enter ret xor inc int3 (bad) adc mov dec xchg enter push nop out push adc and in enter adc mov cmp adc cmc ret mov daa or (bad) into les dec (bad) mov (bad) inc movsl (bad) enter xchg shll and (bad) enter cmp mov jno loope adc stc dec nop xchg pop or inc jp dec mov enter arpl add les or or and enter adc xchg ret test add ret xlat xchg js inc or mov mov loop jb adc ficomp and enter sbb enter fildl ror jb xor test test sbb int3 sbb loopne mov mov mov adc or fmuls or push lret dec or enter xchg mov xorl sbbl sbb fs ret enter sbb aas sub push cs inc cltd gs mov lock push cmp pop mov push xor xchg push ja jbe mov or es and adc icebp cmp fwait add data16 repnz popa (bad) out mov (bad) push add xchg push inc mov xorb test cmp xor fildl insb xchg outsl mov roll push out pop lret movsl sub jl andb xor xor out (bad) (bad) sub cli in test je mov sbb andb mov sbb lcall mov out sub adcb and pop stc into mov add xchg outsb arpl sub push pop fsts int mov outsl adc mov or jl mov lods (bad) pop mov or fcmovb (bad) icebp inc test int and out sub mov mov add xchg mov and and pop scas out mov shlb lods lock scas xor jle fstps xorl adc adc push pop lahf sub cmp (bad) test and sbb and adc jp shll addr16 scas push lods push in adc aad orl add sbb mov sbb jbe push out adc mov push inc or orb push inc mov xchg add dec mov sub jg push in push adc xlat mov (bad) and mov cwtl das aam fwait cmp addb or enter adc xor adc push xor xor ret mov movsb sbb push mov orl pop push and add cmp add mov movsl mov adc addl push mov ret bound sbbb inc push (bad) lock and xorb gs fs cmpsb ret jbe pop lods or mov loopne and lea push cmp or inc mov cmpb or mull push mov add inc mov sub pop ss jae pop divb pop (bad) ja cld inc mov jmp enter hlt inc xorb cltd jne mov imul mov sub push add jge and xchg xchg adc fbld shlb sbb loopne clc sbb test jle mov jbe add pop adc jo sbb arpl jl ret andl int add sub repz sbb popa push ficom push mov test loopne inc cmpb cmc orb lods cmpl aas cmp sub jecxz inc out sub inc mov clc je (bad) push repz mov movsb dec ljmp lret mov cmp adc cmp pop ret andb push mov mov adc mov cmp push mov xchg rcll jo and das popa outsb lahf push push and lcall sub mov jl and xor jae or cmpsb and jnp xchg insb aad ja xchg xor or orb dec or mov mov pop dec sub in jp fiadd test add mov insb mov xor scas test sub mov add jmp lea push jno adcb mov lret sub cmp ljmp inc loope inc xchg outsb xchg outsl add add subb sub mov insl pop fucom mov push lods loop xor jl test fisubr sub sub jg movb mov dec mov mov jne or je test cmp std mov fisub pop sti and clc fstl mov (bad) popa mov in movsb scas sub dec bnd cmpsl (bad) loop cltd subb insb cwtl push scas xchg mov cmp mov into scas pop test rorb sub xor popa jns les sti push xchg add sbbb xor iret fcoml ret cltd mov shrb push fs test xlat scas out fmull lahf add sbbb gs jo rolb mov (bad) clc stos mov pop cmp pushf bnd xorb xor xchg cmpsl inc stos mov pop int3 add (bad) aas pop push dec ficom movsb subb fcompl bound mov mov outsb push scas rorb mov jns jnp and or in pop or pop add cmpb push sbb jecxz push inc mov xchg cmpb std inc sub lock pop ja and push adc sub fsts mov and out adc (bad) stc mov call addl ss jb cmp test mov dec mov movsb in je fwait enter faddl mov std mov orb mov xorl inc outsb xchg and push adcb jl mov mov clc sbb rep fnsave jae cmp adc lret cmp lds (bad) dec (bad) (bad) out (bad) xchg xchg mov jb rcrb inc dec cmpsb cmpb ljmp jecxz pop mov test lock and pop sbbb mov (bad) out xlat mov test rolb pushl and xchg call subb cmpsb popa xor xchg clc sub inc enter int3 mov inc lea cmp mov add jnp mov ds push ljmp test inc xchg xchg stc pop mov fs mov or fsubrl cli adcl push cmp lock clc out fnstsw andb xlat mov test (bad) mov jl dec movl lock mov lock jle das xchg ljmp mov push popfw out cmp or std test mov pop out mov xchg mov ret dec xchg sbbb pop mov les stos cld adc jno out test mov sbb sbb jge xor xchg ret adcb mov inc mov cwtl sub mov inc adc ljmp stc aad jmp or xchg orb int repnz sub add or xor sti std xchg aas (bad) (bad) and aaa jecxz or insl xchg fadds sbbb sahf mov (bad) fidiv push mov daa xorb test loope or rcrl jo out or data16 std pop mov incl inc add test cmc imul test std or mov jb jns pop rorl xor sbb popa jmp inc fldenv nop push lret push mull sbb ss and jne andb in lock add xchg fsubrl mov cmp xlat push lcall sbb xchg and sub push out mov (bad) xor insl test cmpsl (bad) hlt imul sbb push aam jp popa pop in lods sbbb addb (bad) xor mov mov repnz addb dec test push cmp loope inc (bad) test mov stos sub cli ret orb inc mov mov cmpsl push fbld pop xor stos dec ror jle (bad) sub jnp sbb orb or jecxz out inc sbb sbb and add mov push lock test ret mov pop nop cmp cmp pushf roll nopl nop gs push loopne jp daa mov cwtl dec mov es popl dec sbb lds dec subb pusha or (bad) push in mov lock inc pushf sahf pop dec jg call sahf mov aam xlat adc inc sbb xchg adc sahf mov xchg (bad) dec loop mov jmp aaa out push push cmp and jb (bad) sub lret adc cmp hlt or mov dec js mov roll fsubr dec mov test std xor adc xorb and addb cltd imul fsts push push xorb pop jge jecxz cmpb movsb and dec popa mov push leave rcl add test repz cs pop adc push adcb enter adcl sbbb in inc adcl or mov out fstpt mov fcoms lods popa cwtl push or loope lea jge cmp cltd hlt dec mov jnp leave and sub icebp sub xchg push push sahf xchg mov or mov cmp test popa mov and cld pop add or orb inc mov mov sbbb dec xchg push ja push lret mov das lds xchg insb lea mov xor std pop cli cwtl sbb ljmp mov or out xchg scas and repz andb mov cmp mov push cmc int3 adcb scas sub xorb jo dec push mov popf lock inc mov int3 dec aaa cmp mov xor leave cmpb rolb xor out add out mov addl insb mov adc push movsb push addr16 mov adc out mov lods in bound inc sbbb push fdivl orb and push out dec mov xor cli addl les out dec pop test pop arpl cld aam xor mov idivl mov hlt dec adcb jp js pop (bad) cltd adc adc loope ss xorb cltd xor (bad) push lods sub add jecxz xchg (bad) popa jmp mov test fnstsw or jle sub mov pop fcoml orb aas push and xchg ret jl xchg rorb cmpb push sbbb mov (bad) popf sub pop dec push imul orb mov test cmpb gs cmpb mov sbb lahf cmp xchg inc orb (bad) into mov idivl mov ja xchg std scas xchg insb adcb pop and pop sbb shr imul hlt mov cli and xchg or loop fcom adc rorl dec cld arpl adc popa fildl adc idivb xchg xor xor ret out adc shl add popa (bad) negb clc in cmpb enter insl inc push (bad) data16 dec in or add or outsb mov pop xorb mov pop xchg insl cmpb cmp addb mov mov xchg add push nop sahf loope,pt ffree inc in (bad) popa jae sbb xor sub inc cmpb enter (bad) arpl call xor push cwtl jecxz xchg pushf movl sub dec push dec mov cld lods addl or addb sbb mov subb mov out cmpsl add imul orb lock xchg (bad) fdecstp addl xorb xchg (bad) dec mov aad add mov add mov mov ret dec add mov mov xchg add ret es gs ror out push lret dec or jl mov mov jb push mov enter xor fmuls fmul and les in repnz addb daa add mov pusha mov outsb xor xchg sub data16 in imul into xchg cmp pop jo into (bad) pushf sbb movsl je add jno adc cmp cmp test dec ret sbbb imul cwtl stos xchg inc mov or jnp push and lods adc mov pop fwait punpckhbw movsb rclb mov mov xchg clc (bad) or jns sti das xchg jp orl cmpb sbb xor sub pop in xor cwtl leave in xor push andb icebp add subb sub jns fcomps mov mov mov push mov gs test dec imul (bad) or dec xchg sahf imul xor xchg jl incl sbbb stos or ret movsb jmp int3 xchg inc insb or xchg mov dec xorb jne xor pop xor pop (bad) mov leave adc cmp mov orps popa insb mov lock ss xchg repz je xchg sbb and out fsubp pop daa ret orb pop clc jle mov mov sbb fldl cli je out add out cmp cmpsb xchg push pop mov loop test shll jnp fwait xor xchg jg inc pop pop pushf hlt or mov dec push out bound data16 mov inc dec lock cld jmp mov inc hlt clc in incb and add jnp mov insl xor fs mov outsl mov adc ficompl sbbb sub mov sahf andb jbe jnp lcall sub sbb mov add es cld int test mov (bad) pushf fsub ja js (bad) sbb icebp xorb sbb pop and xchg insl mov (bad) movsl mov ficoml sub sbb data16 sub ljmp jbe cvttps2pi addl xchg pop addb loopne sbbb inc jmp test out jmp xchg adc sbb jne xchg gs push andb push xchg imul jmp push incl in sbb sub je mov xor adcb loope mov in test test inc ss loop jmp cmp push push lahf fisubl ret add dec insl push outsb jns mov (bad) push pop pop fnstsw addb sbb push loope enter sti adcb dec and push mov push test fisttp lock cmp insb std mov (bad) rolb or inc outsb pop push add cmpb (bad) mov cltd sti insb sub nop dec test hlt test cmc xchg sbb and pop jns inc addl mov pop addb xchg arpl mov in dec mov shll and jns xchg mov sarl ret lahf out test (bad) fcomps aam xchg addb adc lcall in jge imulb push mov rcrb orb clc dec cmpb gs add inc push mov jo sbb loopne mov xor mov sahf into xorb xchg xor dec out or xor cmp loope pop or xorb mov leave xor cmp mov pop andb sahf xchg sub jno decl fsubs cmpb lret mov lods jo xchg mov xchg loope adc fistp test dec or test mov mov aaa mov xchg and cmp dec mov test dec dec loopne cld dec hlt addr16 jno loop mov xchg addb mull and push mov aad mov movl jne shlb sub or roll add mov pop into mov scas xchg out loope xor and ja pushf leave jmp inc clc daa cmp push add fdivrs imul sub test fnstcw arpl out adcl es xchg push orl add add jg mov fimul rol xchg repnz sbb addr16 jae cmpb dec or inc sbb add cmp push rol (bad) cltd adc xor out in decb mov mov mov lahf data16 add repnz ficom mov adc sub outsb lret mov sub pop push jle xorb adc clc mov inc push jmp repnz fild pusha enter xor sbb mov imul cmp cmp xor test movb mov xlat sub inc fcmovnu xor cmpsb jnp and orb push nop inc inc and sub xor jae imul xor pop jns dec inc sti jecxz xchg inc jb mov pop mov xchg xor and add loop mov aam push push into ss xchg mov inc movsl pop movb mov movsb test ret shr les ljmp or push and inc mov sbbb lea mov push scas andb jmp mov or mov mov adc dec xorb mov subb or outsb or xor les in cmpsb push inc cmp data16 lods lods cmp fimul clc and movsb mov (bad) cmc clc push iret lcall adc subb xlat ss cmp daa push push cmp dec mov inc repz jbe fild mov or dec pop dec add mov sarl mov sbb adcb or push push add test (bad) outsb loope fsubrs dec and dec leave xchg cmpsl and icebp mov scas ret aaa pop imulb lahf das jo aaa gs xchg movsb nop std cmp add and mov mov ljmp mov jne ds dec in adc into xchg out leave pop imul fdivr ret pop pop outsb outsb jo cmpsl aam cmc (bad) lret mov adc inc pop add mov dec cmp jp lcall xchg push movsb icebp int out mov sbb or lods jno int3 sub cmc mov call inc rcrb loopne shlb ljmp sbb out jmp pusha (bad) mov (bad) xor pop loopne and mov std and imul lret cmp xorb ret pop ret xor and and (bad) in (bad) repz rcll lods (bad) call sub mov pop imul adc (bad) pusha add lea pop arpl cltd inc in mov hlt or incb aas call test mov repz xor shl dec push fs jecxz test mov fistpll mov cltd es xor pop popa ds pop outsl inc jns lock pushf add push mov rol push dec test xchg xchg sub fsubs inc mov adc cmpsl ja lock inc cmp pop cltd push sarb outsb sarb stos jae xlat call (bad) sti cmp lds lret cmp pop enter jl inc ds aam fdivl in cmp ja pop pop ja push cwtl subps jbe push rcll pop loop out jmp xlat cmp sub enter clc (bad) jbe mov sbb sub mov mov inc add in xchg mov jmp cld cmp (bad) int3 xor pop or adc jl outsl sbbb sarb ret aam imul icebp or inc roll pop rcl xchg mov packsswb and in xchg or pushf adc or push xchg dec push push outsl jo js mov sub cmp out or or push insb push cmpsb inc ficompl jo popf out scas xchg stos icebp mov sarl lret fcoml and pop lea pop mov imulb inc xchg dec out (bad) mov imul mov test stc call imul or fildll push test mov xchg cmp sub aad test sub inc cli push (bad) (bad) insb mov stos inc loope push out stc dec xor sbb mov mov adc mov cwtl sbb mov ret aam sub outsl dec jo movsb cmpsb mov inc (bad) xor pop pop bndstx imul das loope movsb cmp dec jo rclb inc mov fmuls dec or dec mov mov imull fistpll push push pop aaa mov loopne adc out shl mov lcall pop push inc sub rcl or sub pop daa insb jne mov jg iret add in in lret mov dec cltd imulb pop fcoms das xor stos cmpsb adc negl movsl pop notl daa ljmp addl (bad) mov shrl mov scas adc imul push lock std std lea and dec fistp daa pusha add pop out xor fidivr mov jp in dec dec inc andl add jmp and test popf xchg and jle add mov imulb pop jbe (bad) cwtl test les rorl fs jl push lea call push mov jmp int iret test adc rcll or fstpl xor inc mov xchg dec out mov dec dec nop insl loop js call mov or pusha mov data16 xor inc stc dec bound cmpsl test cmp into and sbbb scas scas mov pop andl xor xchg (bad) mov mov xchg jmp inc and outsl cmp inc jg push sahf mov or xchg push adc cmc mov xchg outsb int sub test ljmp jno enter push cmp push sahf and stos ret std sub or mul cmp inc xor sub in push or pop dec pop mov test adc cmp imul test pop push dec popf inc idivl adc out mov popa adc push sbb (bad) call lods xor pop (bad) mov mov shrb pop imul xchg lcall adc pop pop sub lahf movsl mov xor xor and test and repnz xor cmpsb sbb icebp sbb ss mov jmp imul push call push push pushf jmp mov (bad) mov pop int hlt mov ds leave popa fisubrl lock es pop mov jl movsl and stos xor sub jp ljmp dec (bad) jae cli mov fiaddl cmp fiaddl add fldcw loope push dec dec outsb incb push bound pop faddl call or or daa cmpsb jo dec jp fsubl or test xor lea loop nop pop mov inc cmp int hlt dec adcl nop sti and cmp andb movsl fsubl mov xor iret xor jp in mov rol jge dec pop lcall fisubr mov lret and mov cs lods xor pop cmp call dec enter sub daa insl repnz pop fisubr (bad) sbb dec out push test subl mov mov sbb into mov pushf inc adc sub sub jo lret adc icebp push xchg sub xor fcomi or add jle mov iret fidivl pop in sbb into cmp inc out out lock add mov pop xchg jo cltd mov (bad) iret mov loopne add and cmpl mov dec inc add pop pop inc cmp outsl push pusha mov mov and mov pop xor pusha jecxz push out dec fs in cmp test (bad) pop jl cmc lea dec cmp enter fwait jae inc mov dec push xchg lret fstps in mov dec push daa das dec nop push pop push push or and xor in aas pop mov cld mov sbb test pop xchg xchg mov add roll stos test lock mov mov mov mov fcmovnbe xor pop sbb (bad) cld xchg and ja pusha jmp push add or mov icebp jg add jmp and fs mov add xor adc lods icebp inc cmpsl mov js inc (bad) adc jge cmpl add scas xor mov xchg jl sub in popa fstps roll sbb adc int in in sub (bad) fiadd push xchg xchg mov add push lret pop jmp decb call iret fs (bad) (bad) dec jo arpl roll insl roll xchg mov inc adc inc push sbb (bad) fdivrl dec cld bound sub xlat js xlat jmp rcll popa cli popf mov adc ret mov mov cmp cmc mov cmp into sub sub gs int3 repnz and dec adc mov lahf sub imul not pusha mov mov movsbw mov movzbw not mov jmp mov shrd bts mov neg bts bts sub push pusha bswap not lea call cwtl inc lcall adc fs rep repz pop inc fwait mov or add cli fildl mov fmul aad (bad) repnz xchg stos xor outsb scas out mov icebp add jge push cmc ljmp inc pop inc std xchg scas jg xchg or into icebp adc mov sub stos je push stos jno ret fiaddl or ljmp aas pop inc out (bad) push imul fwait add fcomps inc cltd mov lods cmp sbb jbe addr16 ljmp pushf push lret and test mov xchg mov int xchg jae pop insb and xlat jecxz (bad) sbb rolb or cld lea jno lea out and push (bad) ror or jo cmp daa mov xchg ljmp dec sub sbb push push or and and ss pop jno ret mov push aam les out mov clc out popf add dec push push je cmpl das adc jmp fild cmp lods pushf inc fcompl mov fdivs xor arpl cmpsl pop fs push and inc jle sahf dec xchg sub jge lods rcll dec pop stos xchg push scas loopne ja xchg xlat jp or dec sarb fisubl jp xor fcoml fsubrp ret into aaa cmp int add xchg xchg sbb cmp cmp mov (bad) sub or sub stos repz push fadds mov sbb mov mov fidivrl jge and sub aas scas (bad) or add mov scas lock repz and pop pop je dec pop pop test andb and xor sbb xor dec mov inc mov out ds lods push movsl sub and cmc mov push cmp xor adc and pop movsb in das dec nop xchg dec mov das mov test loop jns inc lret cmp or aas int3 mov pushf jmp and jae push rcll sbb mov mov aam mov mov pusha jg (bad) outsb (bad) mov (bad) gs popa push sbbl dec (bad) pushf dec xchg xor frstor bound rcrb pushf jmp call add fs adc jo test or inc fnsetpm(287 xchg call cmp sbb or addr16 arpl cs roll push int arpl lret jp stos repz sbb imull cmp adc xchg sub jno lcall dec repz dec sub insl aas fdivrp mov sbb adc daa mov lcall adc pop add dec jl xchg fisubl inc (bad) cmp mov ret pop inc mov int3 and push mov out icebp mov gs sbb imul pop aam stos (bad) or jo sahf addr16 lret push jae pop addr16 cmpl (bad) mov test or add negl lock pop pusha cwtl lods rcrb ret je xchg sub imul push out incl daa (bad) and xor jns jg js pop ret outsl mov insb xor jnp cmpsb mov jns mov add xchg into pop fidivl dec adc push out dec ret dec repnz mov mov ds sbb pusha jg insb fiadd stc add sub push push sub jnp mov xchg mov sbb stc call xor mov scas scas xchg dec jne iret inc xor scas lock loopne or clc lret inc mov mov iret scas jo mov xorb pop lahf bound xchg dec push dec or lahf out xor push push or mov cmp cmpsb cmp mov xchg dec jo popf scas addr16 sub sbb push leave sbb ljmp iret xlat pop mov pop inc cmp loop add sbbl and repnz das lds jno mov sbb mov cmp shrd neg push rol rcl rol mov cmc clc test call movb dec clc cmc clc jmp add dec gs jae jb outsb jne add or add aas mov (bad) dec xor pop mov push scas in xchg popf (bad) inc sahf flds stos es ret sbb aad xor in mov lds sub (bad) in shr hlt lret aam addb popf adc mov test mov movsl adc ficomp xor repz ret sbb das jo movsb push fistp (bad) sbb sub xor jmp and pop cmp dec xor dec mov mov and cmp ret aas in pop and gs sub daa cmp xor stos add negb stc xor (bad) sahf mov (bad) or mov push test or mov cltd es xor and pop push mov scas iret test ret pushf and dec popa in cli or push popa mov loop sahf add push push outsl fstl pop mov dec scas das inc pop insl enter test pop insl push repnz aad rorl sti push insb mov lds inc popf dec jbe xchg lods icebp adc sub jo jno mov loop lock mov xor jb into jp jns cltd adc std inc (bad) sbb popa test mov mov sub and mov fwait lods insl aad sbb loope inc icebp dec jne or dec inc pop imul lock jo push outsl jo mov dec lds test jnp push gs jl mov mov imul rolb or sti (bad) jge adc dec xor dec mov jno mov loopne ljmp add xor (bad) jg fisubl mov in mov dec xor adc insl xor xchg cmpsb sub sub adc mov push inc jl cmp cmp push hlt fucompp in cmpsl sbb cs cwtl push call iret mov fwait hlt ja call sahf lock jl int3 or and aas into xchg test lcall jns lods xchg (bad) xchg in js xlat or sub cmp push adc sbb xchg flds inc xchg mov movzbw movzwl not bswap bswap lea lea mov jmp push pushf pushf lea call pusha lea jne call mov pushf clc pusha test pushf call xchg jb popa mov scas mov in lcall test sbb add push int stos mov pop cmpsl jle sbb or push mov mov cmpl fs ret cmp fs pusha fistp das cmp add dec in xchg shl ds inc and jo ret scas arpl pushl push in and add xor (bad) (bad) sbb pop dec pop movsb movsb incb xchg mov (bad) xor mov jnp pushf fadds (bad) aas push jno mov call push jmp enter and xor movsb pushf movsl mov (bad) mov outsb xchg sub pushf bound xor sbb dec mov in call mov mov pop add xor mov mov fwait cltd mov adc sahf incl in xchg jmp (bad) fcoml cwtl or in sub stc nop nop (bad) xor imul lahf xor xor aas pop ja setle mov cmp lock fldenv gs mov (bad) and and lcall (bad) aas cld and jnp or daa mov imul or sti adc test das fistpll repz inc jnp pop pop pop scas outsl fwait arpl addr16 push mull gs loop sub ficomp or sbb (bad) incl cmp mov das in negb in stos sti push mov sbb jb jge sbb je imul jge unpckhps push ret imulb fidivrl fnop (bad) sbb stos xchg or pop add adc inc mov das pop es dec jmp data16 imul mov and (bad) enter push xchg dec jecxz xchg and outsb fisubl or pop jecxz xor add pop (bad) cwtl jb lcall push cmpsb jbe jp sbb pop inc pop lret jl jmp or push mov sub nop pop jg ret or or and adc inc into or inc push inc inc mov int3 into jge test mov push arpl jmp jge mov cmpsl xlat xor lcall adc lea jae xor setns rcl mov clc bts mov call cmc jg out das jecxz mov inc pop in (bad) fisttpl shrl add mov movsl adc cmp inc jl cwtl out sub sbb fadds hlt mov fildl sub imul insl fsub add push into fistp jl loopne int3 (bad) out and sar push in mov lea dec (bad) (bad) jg out mov mov mov push daa jnp (bad) iret lock out xor pop mov pushf and or lahf shrb fsubrp test (bad) aam lret sub out sbb push mov lret pop in mov lahf rcl mov sbb mov xchg mov add shlb inc cmp andl test jo and in repz das add pop ja xchg addr16 ret xlat pop mov inc rorl out mov loopne pop jg push (bad) movsb xor inc dec jnp push sub cmpsb and push fistp mov inc inc pop popf jne or jae mov mov (bad) push adc adc cmp or cmpsb mov jns xchg push out cli mov lock or mov sbb sarl ja pop inc jns push or lods mov push les sahf and xor pop scas dec ret sbbl imul and jno mov jmp jmp add add (bad) repnz pushl pusha jmp out in ror cli add shrl addr16 mov xchg cmp jl jb flds pop inc ljmp jge (bad) ret xor add push pextrw ds enter insl scas mov adc pop aam inc sub pop fcmovb outsl aam jnp setae in mov sub cmp inc xchg movsb cli mov mov mov cmpsb pop popa or cltd cmpsb cmp fstl push and popf xchg mov lahf sbb add xor mov sbb mov in rcl jge dec mov jmp push mov pop pop or mov scas pop mov cmpsb mov loop jp push or lock dec jle push or add push and xchg cmp mov movsl dec cmc push (bad) ja stos xor mov xlat fadd (bad) flds add add adc nop (bad) cmp clc mov fwait pop call xchg mov xchg scas xor mov mov xor incb xchg stos push enter push and push jno mov lea negb imul push stos mov inc cltd mov orl mov mov pop inc dec pop sub test notb sub inc xor add push jbe inc pop dec xchg jb jns push xchg test in lods xchg cltd or add mov sbb sar inc outsl jo push lea xchg pop mov xor jle jo add add sbb addr16 cs (bad) hlt add xchg in std and in mov cwtl test mov insl adc add inc fxch (bad) push out hlt mov adc sub mov xchg inc jg mov mov jno dec test dec cltd scas pop (bad) sti ret xchg lret loop xchg call inc cwtl pop lods pop mov lret hlt xchg sbb loope dec inc inc pop ret cmp xchg lret sahf fist dec pusha sti movsb clc pop add push adc (bad) lret int in in sub notl pop std pop movb inc cmpsb add movsb pop into push inc add sub mov xlat sub imul inc xor mov jp adc stc mov dec clc fiaddl popa mov cld cmc imul jo xchg dec mov push pop sub cmp negb clc pop add aaa (bad) sub shrl ret jle jae nop cltd lds jno mov adc loopne popa les sbb push rorb xchg dec push dec test (bad) es shrb enter cmp stos insb and in push movsb sbb xchg es into mov ret push daa jl fwait lods and cs sub pop inc and loop lret je cltd push das mov pop cmc pop (bad) sub xor ja push leave dec mov loope and arpl jne enter inc cmpsb add pop xchg lods jne nop mov mov stos cmpb je xor in psubd loope cmp out jp dec mov xor in and jbe pusha sbbl adc rolb testl lcall and xor jl ret mov scas shrb pushw sbb iret clc mov ds (bad) cmp in push or mov ljmp fnsave pop in aad icebp stc out test test push pop jp xor lret clc dec lock jne or icebp pushf loop sti inc lods add ja orl mov fdivl add and jbe fs js dec inc cmp int3 aas (bad) (bad) cmp dec mov jbe idivl sub (bad) lods jb in sub in push mov or stc cmpsb cli pop and clc test pushf lods inc (bad) push jl js leave xchg cmp pop aam pop pusha flds add fsts jge (bad) and or test loop inc ds mov mov pop fstpt outsl faddl sbb jbe (bad) fisubrl or xlat rcrb add stos mov inc (bad) xor xor pop nop scas movsb scas cmp mov xchg scas cmp (bad) inc pop subb xor push cmp xchg mov test dec push ljmp (bad) jb cmp mov popa ficomp test xor test pop in icebp add jno ljmp jae (bad) aam dec mov xorb popf ret lock mov out push sub (bad) shlb pushf inc adc pop scas es jge mov int xor and or xor fs pop jno mov in or call sahf fistpll push dec or sub push jle pop xchg jb daa loopne (bad) cmove jg pushf jecxz xor and lcall mov in test and (bad) roll outsb mov nop inc add hlt cli xor jmp inc or xchg dec out stos xor cs and pop scas dec xchg add pop inc sbb (bad) je mov xor lods mov outsl adc rorb lock xor mov push pop lahf push mov int3 inc fldlg2 sarb cmpsl rorl scas aaa pop xchg in setl shl mov inc push movzbw shl sub mov bt lea clc test pushf cmp sub jmp jbe xchg mov push jmp setns mov mov pushf movb lea jmp push lea call cmc test pushf bt cmp pusha pushf call mov lea je clc pusha bt test add sub call cwtl mov out pop inc (bad) xor les pop dec repz call lret lods mov test push addr16 (bad) mov int3 out aas mov dec lds pushf stos aad sahf stc test sub inc dec sbb push (bad) fstl (bad) push push popl push gs sbb and push cmp sbbl lret repz mov xor sbb (bad) cmp test test xchg inc aas cwtl loope adc lds and dec lods movsb push xbegin push (bad) outsb rcrb add aaa sbb dec and mov scas push aas cwtl inc psadbw enter push (bad) daa cmp mov outsl shrl nop mov popf icebp mov push jle into and sbb push or aam out adc xor cmp cmp jl movsb (bad) cld adc in ror pop add sbb insl jle jmp add popf scas fsubl mov jle aad fild movsl out bound sbb mov mov ljmp shrb stc and movsl frstor add xchg adc popa pushf jle inc dec sarl jns cmp dec rcrl imulb lock dec addr16 xchg out sbb aam pop inc gs adc ja ret mov add fs in sarl cmp js imul mov loope rcll jmp int3 xor mov inc push xor jmp test push push and fiadd rcr jmp dec inc push cwtl mov jbe ds xor mov stos andl je jae sbb dec pop movsb jnp mov ds push adc int jns push xchg mov (bad) shlb inc sbb (bad) dec out scas repnz mov mov fdivr in addr16 xor scas mov flds rcrb popa ds loope add (bad) xor or es cmpsb clc dec jno lods mov loopne add add loopne adc adc sbb adc lods adc rcll add add mov aam stos mov and xchg lods pushf pop mov mov loop ds sub xor xor das inc les out lret cmp and mov imul (bad) rorb cmpl push out xor std (bad) outsl push (bad) out cmp lcall push ret sti push pop test ja fildl lret or (bad) mov nop or cmp (bad) sbb inc fdivr inc fsubr int3 mov dec insb xchg pop ret aam push xor pop repnz popa popf icebp nop dec mov sub scas lock das (bad) dec jp lahf sbbw stc test data16 imul jmp pushl pushf lea jne call xchg mov out push xor dec xchg pop out xor not cs neg loopne fsubl and xchg add cmc sub cmp hlt jbe hlt mov mov in pusha push das sbb jecxz loope pop popf adc mov push jne icebp mov mov lcall nop xchg sbb or stc jb loop mov mov pop jp popf stc sub xchg mov mov imul das push movsb sbb subl dec mov cmpsl mov push arpl fwait std loop add cltd mov jmp enter shl fistpl loope or imul push dec cs insb add inc sbb sub (bad) jmp xchg mov ljmp mov aas ja lock fwait inc test jecxz sbbl cmp pop mov movsb mov xor cmp xor test stos cli add cmc jbe cld gs in and cmp sub pop push push fsubs cmp xchg dec cmpsl sbb addr16 xchg mov jle sub rcll dec cmc push dec push lock xor xchg cmpsb mov in (bad) dec mov data16 cmpsb aam aaa push pop add in sbb push add jmp mov bound push inc push das xor loope add nop outsl scas jp mov (bad) mov jmp xor clc lret adc fs mov pushf ffreep jae (bad) enter popa lods jno jle nop outsb jg xchg stos sarb cmpsb ja xchg shrl imul orl daa or sub rorb les testl int3 lahf mov sarb adc call fadd shrl dec shlb mov lret cmp int jns sbb sub (bad) popf push nop mov push or mov dec je mov mov mov add mov mov enter (bad) mov cld in icebp add test xchg (bad) scas add mov mov sbb (bad) mov cmp mov fs pushf inc push out jmp xor dec pusha adc dec fisub stos mov add sbb inc clc or (bad) pop xchg mov movsb cmpsl cs jmp pop dec rcll inc pop inc push insb jns xor (bad) ljmp fmull cmp inc lods (bad) or lcall bound cwtl call pop mov je mov mov pop and call xor jno test into sbb call call neg clc jmp mov pusha lea jmp call xor ss xor inc pop mov inc sbb scas leave xchg sarl inc test push mov or dec xor mov in cmp inc or mov in pop scas push sub lret icebp pop out sti sub test bswap xabort std or push insl push dec insb push fs cmpsl mov mov dec pushf movl bt rol test cmp cmp lahf lea movzbw jmp dec dec jne jge (bad) push sub lahf aas iret dec arpl cmp mov add xor fistp and pop add fs xlat leave int3 cltd ret pusha ds (bad) xor sbb push push imul jns stos xchg mov dec mov mov fistp jae inc mov les or inc sub jne cmp adc (bad) and push cmpsb inc xchg or (bad) dec out incb adc in lods ljmp push dec test adc jae dec add jp roll fildl mov cmpsb and rcll or cmpsl xchg aad leave mov imul xor push imul sti arpl inc cmpsl xchg and aaa call jbe (bad) cmc sub jb jmp jmp aad pop mov dec pop mov mov push movsl pusha (bad) mov pop movsb add rolb ror nop inc pusha and mov mov mov ljmp sti addl rol sub lahf leave xchg ljmp mov cwtl imul fwait js xor test movsb mov mov mov xor imul mov dec xchg dec bound jmp inc sbb out add jmp repnz sbb jg imul add add sub roll add aad cmp jbe sub push addl xor sti push roll repz push scas cltd lds push outsl sbb mov and dec iret das inc lea add ret pop nop xchg imul and and sub rclb in mul fidivr mov mov sbb jecxz lret dec jp fdivs adc decl push iret inc adc psubusw nop adc mov loopne cld adc sub sbb sub xchg adc cltd jo outsl push outsl xor stc clc data16 mov push call fildll xchg rclb daa cmpl test sub je sti insl icebp xor and andl or incb popa scas xchg jns out and pop mov pop sub mov call push mov push jle les push mov mov test (bad) mov mov repnz movsb lret int3 sbb das dec xor out arpl jae sub sub add pusha xchg je test or push sahf and dec dec push fnstenv pop and (bad) sub scas or sbb lea jno dec add sub push cmpsl (bad) lock and dec daa rorl cmp fdivr lret int3 xchg or test cmc imulb pop sbb jne in jge popf add ljmp adc mov inc (bad) mov shr xchg sub pop mov push rcrl (bad) cmp pop mov sahf sub mov aam fdivrs adc test or mov es pop xor mov test xor push or jmp add inc gs outsl fs gs imul add push insl cld ficoml int loopne xchg push insl mov aad outsb addl imul add inc fldenv lds mov mov sti movsl (bad) or out adc jb lods push jge insb jge xchg insb xchg shr imul push and ja mov fsubr mov imul sub fwait pop rcrl insb rorl xor scas out dec in jb mov lret nop out add cmp stc call adc pushf ret jno mov call call pop pop addl mov je test sbb mov into xor and dec xchg mov pop mov ss mov mov inc pop mov mov repz pop inc xchg xchg dec mov cmp jbe rcl ljmp pop add int pusha or xor dec pusha mov (bad) icebp jge fstps repz mov or jae cmpsl sbb ja lret xchg mov mov addr16 jo insl movsb jp ret add imul add sti add add sub test ljmp and xchg lea jmp cmpsl out mov or push xchg aas lock fsubp aad fsub dec repnz lret lcall pop and in jle jge push push sub loope (bad) ds push or mov jns dec push dec mov aas pusha jno ret repz xchg scas add pop sub sbb ret inc in outsb out mov aam mov mov fs inc lds push sub cmp and aaa xchg mov paddusw push cld arpl (bad) cmp xchg js mov clc (bad) popf jmp fdivrs in mov jb cmp jecxz (bad) flds movsb mov imul jmp xchg mov shrl dec xchg add mov mov mov (bad) mov mov fldl jno jne mov scas jmp (bad) jnp and dec adc add dec xor mov in movsb fisttpll inc pop (bad) insb mov push sub fs rolb mov test mov cmc sbb dec xor cs mov cwtl pop in mov fsubrl enter dec xor fistp je mull repnz pusha sahf sbb outsl mov mov imul mov outsb mov adc sub xor sbb ror jnp mov adc xchg fs scas dec xchg loope mov xor and loop (bad) shrl xlat push xor and ds xor dec ret aam aam loopne cltd std pushf pop mov mov divl ret xlat call sbb pop pushf imulb sub ljmp sub test push push dec outsl mov test das jo jge jno lahf push cmp mov xchg movl stos mov mov mov mov xor outsb sbb push mov jge addr16 pop scas adc in sub aad mov movsl mov add cmp into mov pop dec mov xchg stc fstpl pushf and dec jne stos lock or push pop into cld xor aaa cmc sbb or sbb inc ja fwait pop cmpsb out cmp ret aaa addr16 addr16 in sub jmp mov lods pop in and push sbbl pop and inc in mov sahf mov sbb out fs shrb and ret cld xor xlat or insb test inc fnsave pop loope mov dec outsl and sbb enter cmp scas mov (bad) loop frstor inc fisub mov mov daa pop je mov rol lods cmp mov ficomp orl xor pusha mov sub mov sbb jge cld inc mov fildl push mov sbb mov lock jmp xor sub stos into cmp mov or pop adc imul xor adc inc out dec mov cmp inc pop imul pop (bad) sbb jmp xchg cmp enter push lds call mov pop jmp bound adc sub jle push ret fisttpl xor mov lret enter mov cmp mov cwtl fwait (bad) sti movsb cbtw dec nop ljmp lock cmp addl hlt (bad) ljmp sub pushf aam pop lds test in subb loope clc addr16 mov pushf sub inc pop movsl cli enter mov pop je jae add cmp (bad) push es xchg dec mov pop inc pop imul popf pop xor pop add sbb mov call cmp and mov call cmpsl (bad) mov mov insb pushl push mov push cltd movsl mov and mov dec push pop inc enter pop xchg (bad) aaa inc pop mov pop add fstps ret dec xchg dec cmp dec fwait inc xchg je negb out or jp pusha xchg inc sbb (bad) inc data16 dec lds scas ljmp stc dec fimull rorb jge (bad) mov out sub add or jmp imul mov leave (bad) dec xor imul mov mov jno pushf sub adc add (bad) cli ja sbb lret sbb xchg cmp pop xchg mov jne pop les imul xor fwait arpl data16 add pop mov pusha icebp sub jl fwait scas cmpsl ja ds into mov pop les rcll clc xchg lea cmc lret cmp test iret adc push bound add adc (bad) push pop into bts sahf scas icebp mov aaa icebp cmp ljmp dec lahf loop fild sub adc inc push cmpl popa mov repz pop js or mov shr mov sbb daa xor mov lea (bad) xor imul cmp fucomp lcall int sbb int3 cmp sub rorl xor push pop push pop dec notl inc or cmc pop (bad) pop cltd iret pop xchg test fistpl clc xchg movsb cmp hlt mov add sub jle popf inc mov das add inc sub push std sub pop cmp push adc insl movsb mov pop xor adc pop popa aad mov add jne orb jbe test popf and ljmp mov inc mov aaa xchg mov aas and lcall cld pusha pushf jmp clc pop outsl out shr sub jge (bad) jne xchg loop ss add dec sub mov cld (bad) push mov loopne mov cld (bad) xchg pop nop iret push arpl lock pop (bad) dec movb mov pusha fsubrp and cmp mov es jmp mov pop loop lods cld and test xchg (bad) xchg or je imul pop (bad) push xor xchg cmp mov adc mov jno cltd cmp insl (bad) stos aad cmc cmp idiv sahf stos lcall sarl adc ficomp dec push sub mov ret jns pop nop inc jns add loop push mov aas cmp mov inc popa mov je push ret add jo out enter aas jbe sub mov popf or lea mov cmp setle (bad) bound insl push xchg ffreep lret in int3 pop mov cmpsl dec mov inc sbb or add jge mov sbb nop es adc insl sub movsl fxam loope movsl sbb and jne sbb push ret and xor mov pop mov popf bound mov dec xor dec xchg sub outsl sbbb scas mov out mov clc dec dec ret cmp leave ss cmpsl mov xor or ret jp push sbb jle cwtl les jno push xchg or push test add sbb push mov gs mov jo adcl hlt jp mov mov and loopne adc aam add jge test iret xchg adc out call xor jmp sti mov rorb call push sub je sti inc mov dec push fadds adc sbb arpl or stos and aas mov jns inc mov fucom repz test imul fs je dec add cmc mov pusha add bt bt clc mov mov bts cmp movsbw dec mov test pusha cmp pushf lea jbe jmp call movb xchg not lea pushl popl lahf movb mov call sete dec inc push call xor jl iret ss sbb jmp add dec inc push pop fdivr roll xlat sbb jb ss popl jae push std cmpsb jge mov lods jno fiadd cmp jno mov pop inc loopne lods push lahf cmp hlt xchg lret inc mov imul lea sub incb dec fcoml jl inc sub sbb pop sub test daa pop push lcall adcl dec dec adc inc jp scas test jmp mov leave push jno xchg negb das nop (bad) pop pusha out arpl rclb (bad) iret push or addr16 arpl xchg ror cmp sti mov fldenv xchg (bad) std add insl (bad) mov je push mov ret adc jg addr16 lods out xchg mov in dec mov pushf and ljmp xchg xchg in inc sbb or add add popf scas jb push add dec lea sbb arpl fs pop lea loope bnd (bad) (bad) iret mov xchg cmc mov and cmpsb clc int inc cli or push and jae loope pop int3 bound fisttp cwtl mull sbb push mov scas mov hlt cmc jmp imul mov mov push stos pop mov mov jle nop scas lock and lea (bad) mov mov (bad) aad xchg inc out push jl cmp iret mov mov pop fwait inc or js cmpsl pop cmp in mov jnp xchg mov test xchg or dec push int3 (bad) cld mov jne aam mov cmp inc subb lea xor gs lock push insl ds inc and xchg cmpsb jp mov adc mov xchg dec jae mov dec push mov sbb inc push insl icebp lods (bad) xor dec mov imul dec mov mov dec add jmp aaa addr16 jg dec shrb loopne les sub es iret xor outsb pop in sbb (bad) jge or neg data16 call push xchg jg mov push push mov popf add or cmc adc mov rorb mov mov cmpsb mov xchg rcll loop pop mov inc insl inc mov es sbb and popf ret mov ret sti movsb std mov out nop (bad) jno xchg inc dec or pushl cmp movl lea ja shl (bad) lock enter dec bsf shrd shl add sub cmc mov jmp mov xchg mov pushf ds int sub jns pop dec xchg cli lds mov mov inc xchg imul sub cwtl pop add sub push sti push add push cmpsb cmp adc mov stos jne lds imul inc mov sti mov or clc adcb fsub or in sub repnz xchg fcoms sbb xlat pop mov mov lea jbe lcall imull jns jbe (bad) jae push das xchg or inc enter sbb imul add mov js movq out pop mov push dec movsl pusha mov xchg les cmp or inc enter add pop push dec push hlt or mov mov xchg push scas mov mov loopne scas (bad) std cmp xchg sub insb addr16 (bad) fiadd repz nop (bad) mov fcmovb push mov sti iret inc jno jo lahf mov add (bad) das inc aas lahf mov push mov cld push xor xor inc mov push cli inc aas jecxz add mov adc arpl inc pop mov out imul sub and xchg jnp stos aam lods test loopne jno xchg fdivl inc xor sub xchg dec popa out sti loopne repz xor or je int mov pop nop mov lcall xor in mov shlb and lods or push lret mov dec xchg xor imul ljmp push addl sub lods in jl (bad) xor inc sbb lahf shrb popf mov adc push call lret insb mov mov xor mov adc pop inc adc jno xchg mov mov sbb dec cmpsb jecxz cmp mov pop bswap lea pusha bswap not mov mov mov lea call call stc or fs lret xor jge test dec mov icebp dec push cmp test cmpsb mov xor cmp dec mov xor push push adc pop adc mov sbb jo fs data16 and sarl ret mov inc fnstcw pop mov shrl lds jno xchg stc xchg xor adc sbbl lcall sub ret sbb arpl mov ret xlat sub fiadd mov cli (bad) sarb add lock hlt (bad) pusha mov fbstp jo lock xor xchg mov fcomi mov jns aam pop mov fcomip and js jbe sahf mov inc mov sub out push lret nop pop lcall mov pop mov mov stos dec adc mov pop add (bad) sub fldl popf rorl inc sub jge and xchg mov push test nop js loope push jmp mov mov pop push push iret xchg mov int jbe (bad) std loop sbb rcrl out cmp int3 adc jmp (bad) sti movsb mov jg insl roll (bad) ret pop push pop pushf add loop adc push xchg sub jmp call sbb add add pop lret daa cmp and mov fdivrs ds iret (bad) lods fs movsb cltd push pop pop ffree mov sbb rep ja sahf and pushf icebp mov add and mov cwtl push xor les add cmp xorb popa fucom mov scas rcrb push jno (bad) (bad) xchg in push and je fadds pop jne ret scas xchg imul mov mov sub leave jbe into loop mov jg enter arpl mov popa cmp insb or sub clc push (bad) xchg clc insl jg mov inc jnp jnp js mov adc cmp lods mov dec pop pop je xchg in and sbb data16 push rorb ficomp jg push outsb dec jmp arpl (bad) pop and insb jge jb call sbb pusha push dec jo mov mov je mov pusha xor lcall mov fbstp fnstenv mov push mov mov lea pushl movl jmp jne lahf bound jne sti test mov into jno shll inc jle push dec mov ljmp mov les clc cmpsl mull (bad) es loope ret (bad) rolb pop lret fsubr sbb ret push js fadd inc insb std inc rcrl or push arpl pushf pusha jecxz dec dec jecxz mov int push mov xchg enter in out repz in jno lea push and shlb and jae jmp call pusha pusha lea jb stc call pushl popl pushf movb movb pushl ret push push call andl jae ret inc sbb sti test adc push sub mov adc fidiv lock sub imul aaa dec xor jb push outsl push push cmp dec lcall mov push scas mov test lods jecxz or jg add and (bad) mov ret dec inc xor cmpsb and movups inc jmp (bad) cli rcll mov push lods out daa push es cltd dec pause sbb out out push (bad) sub (bad) dec imul mov out jae sarl xor sahf std popa xor push push sub adc clc push mov into (bad) push test out mov loopne fadds xor sbb test mov (bad) enter mov out push loopne cmc popa ficom push fildl xlat or std push jno mov mov or pusha imulb push pop js int3 scas lock enter cld dec push xchg sub pop movsl ja push imul xchg mov icebp mov push scas mov fxch (bad) mov adc mov sbb outsb jge jecxz sbb iret outsl mov inc mov push jno mov xchg fild lea pushf pusha mov lea call push call lea movb xchg lea bswap pushl popl jmp jmp push arpl xor cs insb add fmul or xor cs insb add sar neg jmp ja cltd jno int and outsb loope repz mov aas (bad) sti loopne das popl pop and sub jle sti test pusha and xor xlat mov cwtl test mov sub out stc cmc dec pop push das cmp aad push (bad) pusha xor fs pop inc iret js pushf mov jnp adc and insb in lcall shrb jo lods adc lods les lods push aas fbstp in sub outsb xor flds (bad) aas mov lahf pop adc jmp lds (bad) jno mov add je gs imul xor mov mov arpl xchg jae arpl imul pop ret mull sahf and or mov and test dec les lret sub fwait test push xchg inc push mov and or sarb or and xor test (bad) sbb adc mov xor repz enter jge jns mov cmpsl js jne fiaddl and dec int ljmp mov xchg mov (bad) aaa daa and jae cmpsl test jp out push sub out dec xchg mov dec mov addr16 jecxz fdivr (bad) adc (bad) enter inc add dec mov fiaddl mov outsl pushf aad sub xchg or repnz rcl daa sti lods (bad) sbb into cmpl lret sbb add xchg xchg imul xchg or in mov iret jmp xor mov push int mov push mov push jg push xchg mov jecxz cmpsl aaa dec roll and add fdivs mov or dec stc movsl jnp push push pop or xchg or jns stc scas ret inc stc out sub jns fimull or jns jbe sbbb push sub fisttp mov sbb lret in jb pop mov inc icebp cs stos je push lret nop (bad) cmp dec in in mov cmp cmp mov jp out dec (bad) ljmp (bad) cmp stos jecxz fs insb test pop sbb and int3 fadd sbb mov mov mov cmp lret shrb mov imul pop shrb xchg lods pop loope sub stos xchg push lods xor inc mov sub mov ret sub push (bad) dec add dec xor jno mov int3 pushf or push pusha push pushf lea je stc push movl cmp lea push push pushl ret lea jb pushf cmc cmpb jmp ror push pusha inc pushl stc not movb ror jmp pusha lea jge rep jmp add push gs jne jb push popa insb jne inc add pushf jbe mov push push mov idivl pop pusha mov adc inc push fwait jecxz xor and jecxz fucomi sub dec pusha push cmp mov fidiv dec rcl clc (bad) dec scas cltd (bad) cmp dec dec mov pop insb fsubs jecxz sub ds lods xchg rorb xchg mov (bad) sbb pop ss mov repz mov cmp push sbb js enter (bad) hlt stos inc fidivl out les adc iret and adc imul dec or mov push push hlt jecxz cmpl aas sbbb or aaa sti inc add and mov scas xor adc outsl jo and (bad) dec (bad) (bad) and mov out or popa movsb inc fcomps das (bad) sub dec pop inc lcall mov loope gs cs out pop (bad) sbb xor pusha int3 dec sub fisub push sub sub jmp gs add in sub pusha sub push sbb push xchg cmpsb je sbb inc sbb cmp dec pusha jl pop inc add add pusha pop pop pop or xchg mov adc imul fcmovb mov les sbb fcmovnb mov mov mov xchg dec xchg cmpsl or std ret and mov mov lahf mov imul xor popa jb in lea in aam mov ret (bad) vpsrlw aad test (bad) repz popf test lods (bad) sbb cld jle (bad) cmp sub aad add in pushf ret aam add test enter mov and xor jns popf mov inc es push push adc jne jecxz mov stc cs sub lret or pop loopne inc stos push mov pop sbb adc xor pusha mov push test and or add je inc imul jae add dec (bad) (bad) push cmp pusha lea jne jb call pusha jmp add dec jae inc jb gs gs jb inc jne data16 mov mov cmp rcll (bad) ja inc pusha jle mov lcall scas push hlt stos mov repnz es (bad) lret pop xor pop add xor lret iret out inc inc and (bad) fiaddl push arpl loope jle inc sub outsl sarb sub stos and cmp xor outsl mov (bad) test lcall addr16 dec fisttp mov add jno imul jmp cmc les sub mov xchg imul icebp sbb or fisub push sub adc ljmp orl jmp call call pusha pop mov pushf lea jmp cmc or call pushf lea jne shr shl stc inc mov cmp or call jmp push pop jg xchg je jl nop popl adc (bad) into xchg push insl or mov movsl pop inc je xor push sbb rorl jle ret mov pop lahf movsl cltd cltd movsl mov movsl cmp sti inc push push scas les and ret or lret add push cmc mov (bad) lock loop and loope (bad) mov mov fsubl mov pop and cmp push mov rcrl jecxz adc loopne xor dec dec and fcmovb insl mov idivl cs imul (bad) pop sahf jno sbbl add push push out (bad) xchg mov (bad) sti call outsl fiadd xor xor jo jl and leave push sbb dec mov rcr std int3 cmp or fucomi out push or daa je imull cmpsb js and xor aad out lock push ss movsl mov cltd inc cltd js out adc adc pop jo sub ss jle mov cwtl mov adc jnp push scas mov sahf mov or mov xor cmp dec fiadd fsubs jo popa xor jnp scas out and dec test roll sbbl mov xlat ja xchg aam mov idivb out and arpl jo jno (bad) xchg cld mov out cltd insb jge rcll fiaddl popf ret mov and sbb mov adc rorl clc adc enter outsl and data16 mov aas enter xchg mov out (bad) dec cltd test insb repnz sub int aad xchg fisubl xchg sbb jp sub outsl iret mov add bound loop adc sbb fdivs (bad) push xchg (bad) in jb pop inc pop mov xor and xor insl je aas lahf (bad) enter jno subl in scas xor sbb mov dec negl inc pop arpl mov pop cmpsl pop fildll out sbb inc mov xlat call roll mov lret mov sbb xchg fwait mov mov insl in jns push xchg pop dec outsb insb jb xchg rcrl mov pop cmpsl fninit (bad) and adc cwtl pop test pop fild imul ja aas hlt mov and sbb jl cmp jp ss mov inc sbb sbb fwait and adc pop mov insl xor mov pop aas xchg and iret rcr dec mov cmp popa and out movsb sti stc or inc push jno andb adc add sti arpl fwait out in mov pushf and out (bad) fildl mov push dec xor inc sbb or hlt dec pop insl jae jbe or cld sbb (bad) mov sahf popf loop sbb or add push cld adc lcall xchg push mov lcall xchg enter xchg mov pop adc rolb inc sbb push and insb push cwtl out mov aaa xchg bound push into lret inc pusha pop mov insb xchg xor and cmp xor ret (bad) imul adc mov push hlt mov test (bad) (bad) jno jg dec lods xor adc in nop mov call repz pop dec mov jp (bad) in lock mov sub xor pop adc mov mov inc std or and out mov inc and mov jnp fld enter dec inc cmp test popf (bad) sarb sbb push mov into (bad) jno lahf movsb aam fstps rcrb lahf jg jnp mov jg cs push mov aam pop mov and adc mov call in sub shrb mov imul add add sbbl adc jmp sbb sub pusha cmp hlt scas xor inc push push sub mov xor sbb xchg roll cmp rcrb cmp jle ds push mov sti adc sbb data16 xchg scas push mov cmc push mov out pop insb inc pop inc pop fsubl inc fucomi out adc pop adc stos xchg out je out imul pop jb mov inc dec dec fdivp jp insl xor or sbb icebp xor popa (bad) scas push addr16 dec xchg sbb mov stos mov in leave (bad) adc adc icebp xor jle les lea jne lea mov mov push mov mov lea jmp rep pushf mov movsbw mov movw movb pushf lea jmp pushf lea jne inc mov pusha pushl or push call pop (bad) pop cli test jno repnz cmp sbb pop imul stc jge rorb out sar and push fildll mov mov mov lcall sub or sub cmp ljmp fsts loope pop cmp into fistp inc mov ds adc cmp jnp sti dec (bad) hlt repz out pop push mov int3 jg (bad) sbb ss out nop out xchg dec rcl dec jp adc xchg pop push jne push sub aam cmp and add lock in mov stos mov jge push loop mulb mov hlt push outsb push push jp adc addr16 pop addr16 adc push dec push push sahf in lret cmp lds dec cli and pop les push enter xor xchg sub mov ret sub add sub fs ds adc adc pop mov dec mov out push das dec test xchg add inc shrb loop imul ja sub push ret jb pop inc mov inc jle jp lahf mov mov movsb pop popa in xchg and sbb sub notb out aam loope mov imul adc popf push call pusha lea jae push push cmp mov jmp xchg outsb mov mov dec push pop push mov sbb sub repz nop adc and mov scas cmp mull mov popf mov fnstcw pop pusha bound frstor push daa push incl add jg mov xchg push aad aam call mov push ret in mov pop cmp adc incb mov mov int3 stos adc inc mov jmp pop insb fist xor test dec movsl jp ja scas fwait les mov movsb leave sub frstor sub dec pusha (bad) mov mov sbb stc sbb jae push push das inc jno jnp mov adc hlt (bad) cld cmp mov movsb mov mov (bad) mov sub and jle data16 in mov xchg mov xor lret hlt pop hlt lods std xchg cli repnz mov lea test xchg push and adc addl out push dec mull lcall mov inc mov movsb iret (bad) in lods ja and out push mov jmp sbb std mov and loop inc dec sbb les jns imul stc ret cs test dec mov xchg dec mov cltd sub jmp imul cld mov fistl dec xchg outsl inc inc add pop inc pop xchg outsl xor adc mov fwait push scas fwait add sub (bad) dec daa js cmp test jl cltd imulb adc loopne sti cs jmp (bad) pop sub jne mov iret pop mov scas pusha mov callw or mov inc mov (bad) inc jle jnp jp jbe call rcr fs mov xor jmp in int3 out shlb xchg das (bad) out nop cmp incl jmp adc pusha stc gs pop outsl jno jns ljmp (bad) sbb mov fstp dec std inc ret push mov adc outsl cmovs stc or sub xor cmp xchg xchg (bad) aam jb xchg dec pushf mov (bad) pusha mov lret dec das pop ja xchg mov pop xor sub stos scas jae (bad) jmp mov mov adc mov or aad sbb imul loop adc fst repnz or lcall pop jbe mov in mov mov fiaddl sbb outsb mov repnz clc jno jns mov add mov push lea jmp test push lea je shl cmp pushf rcl add setge mov push stc push call pop mov fiadd push or pop xor mov inc orl imul xlat mov adc push cmp xchg jae (bad) lret cwtl js in cmp push inc call cs dec pop jg sub push flds cmp movsb jp pop mov addl ljmp aas jg dec popa mov int3 test (bad) mov and fs sub and ja jo dec adc mov lea movb into hlt stos in cmp out cmp adc stc shlb dec leave push sbb mov lea push js mov jno js (bad) jbe std loopne and test pop xchg leave out jb inc or mov mov (bad) jle mov out and lahf data16 insl repnz les pop movsb lcall fwait lods insl aad sbb lods and mov insl jb sbbl mov insb jge sarb in xor fadds adc (bad) notl int3 ffree sbb stos outsb mov pop mov leave ljmp pop into push inc jg xor bound mov cmp call sbb xlat cmpsl or rorl cmp dec or mov push push xchg test xchg sub dec mov jnp mov sbbl jnp xchg jno jbe sub call sub push lods mov out jmp cmp stc outsl lock push or xchg ljmp dec pusha push cmp lcall and fadd dec daa pop sbb push lods dec xor pop out dec repnz int3 (bad) clc push mov ret outsb cmp pshufw sub pusha add out clc out sub mov xchg inc pushf stos xor sub and out lcall hlt jge sub xor dec push pop xchg out fsts popa add mov sbb sub jle lea outsl (bad) repnz push lret dec jno jbe ficoml repz xchg pop test inc pop inc xchg xchg cs sbb and mov dec (bad) repnz add adc and sub inc xchg dec mov insb xor shrl inc pop divl push out cmp add jne push mov scas shlb jne add jmp out lret push daa push mov je int3 cwtl hlt mov ret dec (bad) and cwtl (bad) negb add adc in push sub mov xchg jge iret aas call (bad) cmp add leave sbb je cmp mov (bad) and push jbe push out push ss movsb imul sbb jo fs daa ja cwtl mov add fisttp test cmp sub adc jl cwtl addr16 cmp pop inc jo xor lock aas out jmp or mov push mov sbb inc pop and jle popa sub (bad) movsw jle dec mov dec mov arpl and out in rorb movzwl imul stos pusha lea call call lea xor cmp mov bt cmpb pusha push lea jne pusha sub pusha daa dec movsbw mov lea shl test xor sub add clc bt dec mov stc test jmp adc out sbb ja aam out cmp xchg dec sub test leave sub lcall std jp push push pop jne jo xchg out and xchg repnz inc std loope xchg out cmp jae add sti push inc addl (bad) sbb stc dec rclb test sub jb out mov movsb pop mov or fiaddl cmp loope xchg dec pop cmp mov das paddsw or pop or add mov pushf fiadd pop mov or mull xchg pop test popf xchg mov push xor cmpsl cmp lcall or add andb pop push or scas mov adc clc push fsubs outsb outsl das stos aam mov shl xchg or jne mov fxam mul cmc rorb fisttpll out mov mov int3 loope push or jne mov (bad) js dec in fs mov xor inc pop insb pop ret ljmp ljmp test (bad) jae clc xchg mov aaa adc pop mov push lock fadds mov subl xchg jg (bad) jo shrb orb call mov add sub jbe jne lods mov mov imul fildl ja popf mov add dec je dec push data16 (bad) xchg daa pop inc mov iret mov daa jg sub stc gs shl lods mov out push inc lock in push mov pop imul mov inc flds js mov add flds or iret loopne negl pushf lea scas jnp aaa xchg mov cmp inc jl pop insb pushf dec xor pop sbb test push mov jl inc js push mov and sub rorl and imul xchg jmp xor test pop adc jg mov mov int3 adc mov cli dec repz pop scas sub or jl aaa js add and push adc cltd jne pusha fldt mov lahf xchg sub xor mov popa out jmp adc xor pop add aam cmp fwait and (bad) pop pop and push sub dec inc pop pushf aad jb sub cld data16 cld mov (bad) lret lock or push adc loop fucomi in mov shr xchg (bad) scas push adc mov sbb sti mov je xorl in and xchg sub imul (bad) mov lods xor cmp mov repz and (bad) sahf pusha (bad) mov int3 scas shlb movsl stc cmp cmpsl and push in or jmp xor mov lcall and (bad) xchg mov add rcr sub movsb adc idivb sbb adc repz iret mov push inc jle lahf add cmp inc aad xor push imul insl into (bad) jle das xchg sub fidivl scas stos mov fnstcw add aaa sub iret ss push jae jno jo pushl or (bad) dec in lcall or xor mov and out push mov mov int3 (bad) or push stos xchg out add dec jo popa jb mov imul in mov dec lea lret hlt dec outsb hlt lret jmp (bad) cmp (bad) pop lcall mov cltd xchg sysenter cmp mov pop rolb dec scas xor pop int xchg or mov dec xor mov mov mov lea push pop (bad) pop xchg mov mov imul loope or arpl outsl mov shrb sub in lret or mov cld cmp arpl mov jno outsl call dec push push xchg add stc xlat jno jl rclb lods (bad) popf mov les dec stc xchg mov mov lret and xchg ljmp call lods shl jnp cld fildl mov xchg (bad) xchg sub popa dec mov fs or inc into xchg lret inc int3 push out dec xor fs mov fxam jmp adc insl test imul pop mov fldl xor cmp mov (bad) push pop cltd dec xlat fs imul cmp sbb pop jae push jns int3 ja mov push popf push pop and (bad) mov mov xor aad cmc xchg dec pop pop arpl fldcw scas das inc ret inc fidivrl ja or sub pop or mov iret rorb pop add mov (bad) ja cmpsb or lock pop pop scas mov test or out fmuls adc push pop mov test dec jbe xchg movd add popa jno outsb pushf repz out push pusha or movw pushf pushf lea je pushf jmp mov (bad) lock fildll loopne cmpsl cmp xchg test inc pop mov and jno movsb cld jecxz in test in (bad) fcomip enter insl xor out sarb sub jmp add out inc jo lds in pop insl xor je dec push outsl lret push in sahf xor (bad) movsl arpl and mov xorl xlat pop add sbb sbbl andl out (bad) mov mov fist xor mov popa popf sbb std (bad) push xor adc mov pop popa mov lahf outsl xor mov pop stos loope lock into push bound data16 cmc mov into sbb je shrb xchg aad fwait push dec out (bad) (bad) jno insl sub jmp push cmp xchg mov jp and fsubrl mov jge test xchg mov mov or int arpl cmp push fwait repz mov push xchg out jmp cs or adc (bad) sti orl ret repz leave jbe xchg test inc pop pop sbb cmpsw mov mov hlt adc mov btr push rcl imul add test jmp outsl pop lods (bad) popf add dec stos popf rol pop loop jmp add cmp sub adc pop loope (bad) inc jle jle fisubl push cmp xchg outsl les (bad) xor and int3 arpl out pusha lahf jg clc pop jge pop bound lahf push and dec jno leave or dec nop xor adc imul mov and push jmp sub ljmp add stos dec call xchg xchg shr jo xchg or and jg mov movsl stc jno imul lods jae scas ror mov pushf lods mov push cmp movl hlt sub inc or cmpsb fnstcw and push insb mov jnp js xchg outsl mov cmp xor into pop mov sub xchg mov rcrb sub mov or scas mov lock add movsl push xchg sub (bad) mov inc addr16 push lret sahf inc push loop and pavgw and movsl cs cmpsb cltd jne jbe jns mov add xor or xor fs inc xchg jno imul add lea je call aas jge push dec sarl scas popf stos sub xchg sub imul inc cmp pop aaa dec mov rorl and cmp fs add and call mov jg out aaa outsb xor aas or dec sahf mov lret xlat fwait jp fmul (bad) lea int3 or fildll jo push lret or inc sbb sub inc xchg lahf fnstcw aas lahf mov mov adc mov xchg sahf addl mov rol cmp inc jge jle pop cli arpl mov repnz jno push call clc push or xor jns jns gs push xchg sub fadds pop xlat jl pop leave incl mov repz je fwait arpl xor in sbb lcall mov sbb push ret push mull jp add push insb dec out inc in and xchg sub inc test xchg int int3 mov stc mov inc sbb mov rol pushf mov mov movsl push adc sahf scas je or cmp dec mov pop inc hlt mov iret xchg pop xor aad (bad) sar in std pop cld xor sbb and sbb adc xor leave xor xor imul (bad) pop pop sar mov add dec xchg sub dec adc and sbb jbe data16 mov mov hlt ljmp out lret loop push mov fisubl xchg sub (bad) enter fiaddl icebp pop push popf and fwait test popl fildl cld jle repnz lahf rcrb push imul push cmpsb (bad) dec nop or xchg into jo movsl fsubs out shl jno push (bad) xor rcll insb cltd stc in in adc mov jno (bad) and xor das ret fwait call dec adc push inc lods fwait les dec das (bad) inc dec je test mov add dec outsl pop ds jecxz inc push jbe inc mov mov pop mov sbb aas mov xchg ds pop mov shlb sbb das xor push dec aaa pop and cmc iret sbbl imul mov sub mov dec cmp repz ja iret lock enter add pop add imul mov jns push mov mov dec arpl adc int in pushf or sbb cs es rolb insl and mov dec test (bad) xchg fcos xchg or xor pop imul lea ret scas lock aaa fwait sbb xchg scas hlt mov nop push insb sahf inc mov in iret mov lods jbe popf and xor and insl fldl shrb jecxz mov dec inc push out push xchg stos adc clc or xor notb and jl (bad) mov inc pop and push in bound cli jmp repnz xchg pop je pop jg fsts ds cmp lcall mov (bad) mov popf push push lods inc rorl in jno dec jbe cltd push inc xor dec outsl push mov and jbe jg mov (bad) xlat fldz in imul (bad) popf scas mov inc fwait add fbld or pushf ret adc push idivb ret sub sbb stc lret cmp sub dec stos xchg movsl jno outsw and int mov in std sub pop pop movsl mov inc jns xor push lahf data16 call arpl imul fucomip das inc push arpl adc incb inc pop fldcw js je stos hlt add cmp pop xchg mov (bad) out adc clc fisubr push test (bad) into adc jo dec mov jno lds jno dec and xchg lea je incl cmp mov iret sub or aaa out int jle mov jns lds repz adc mov outsl fwait inc icebp dec pop jno data16 lock pop pusha pusha inc movw call sub pop pop and sbb jle test cmpxchg dec sub cmp add push and inc stos lock mov lods mov in mov sbb and ljmp push mov hlt gs mov xor ret mov arpl rep adc lds fs scas data16 nop mov mov jg add arpl fcompl jecxz repz out insb adc sbb and pop flds pop push imul out lock aam add dec mov mov sarl loope scas adc notb into hlt lret xor in push (bad) ljmp sbb dec insl jb cmpb loope inc push fisubl dec rolb inc ds cmp push jns sub iret popa sub outsb rolb jbe sub or mov ja mov cmp pop aam js int ror shr (bad) aaa je ja jae leave mov test loopne loop int sub inc mov aam rcrl cmp jno fdivrl das (bad) cmpsl xlat pop (bad) fs into nop mov sbb mov clc pushaw sahf xchg stos jmp adc add inc aas iret dec xchg sub pop scas outsl (bad) addl cmp inc jg xor cli sub pop xchg (bad) pusha mov cli push cltd stos push cwtl inc pop lods ret and mov jp out fucomi sub ret ds or stos jecxz sub aaa pop jnp mov or arpl lret dec mov xlat cmp xchg fstpl pop aad cmp rcrb push cld (bad) fs cltd insb rcr sti or pop add inc in insb jae jno arpl mov (bad) push or lret aam pop mov pop inc push push lret fstpl rorl dec test test scas push into sub push call in fadd and and (bad) or ss jbe mov cmp inc push push dec pop data16 sub xchg xchg jle inc fwait push lods cmp adc xor xchg jmp cli xor jns jbe test in int cwtl fsts jnp lcall add add subl pop mov jl fldenv mov adc pop lahf repz arpl outsb (bad) imul xor dec ret jl pusha mov aam es dec mov out (bad) das push add hlt (bad) cld es push int mov cmc mov aas xchg or mov inc push sbb out aaa mov fmuls idiv or imul cmp pop xchg or call lret adc mov or fs pop adc mul fsubp push jmp ret dec inc pop and mov aas jno bound sbb pusha pushf cmpb jmp push call call add lds mov xchg in sub sub jbe bound rcrl mov fcmove push cmp xor rcrb nop fildl bound clc mov aaa scas dec mov mov add jmp dec push add cmp adc fidivl dec push popf sub xor dec inc js les insl imul in movsl movsl scas jb test inc mov inc lcall lods add repz pop loopne fnstenv dec pop lods mov div insb cld sub push aad scas mov mov inc push cmpsl cmp sub xor pusha movsl mov or gs call cmp hlt rclb push cmp rcll dec mov out pop pop je int3 addr16 or and (bad) pushf push mov mov and xor cmp xchg lock adc ljmp add shlb sub int3 loopne push xchg fsub fwait pop xlat sbb sub scas jo popa sbb push scas adc mov jno popa clc xchg add fildl rolw loop push insl xor cmp dec leave xchg jne icebp in cmpsl mov gs das nop push push push (bad) mov push sbb dec dec mov mov add in std outsb pop adc (bad) fisttp test test lret pop push jbe rcrl rcr shrb push push (bad) mov in aas mov lods test das adc sbb bound lret in pop or in out out add mov inc jle stos dec mov addr16 test mov mov test adc lods (bad) xlat in repz hlt push inc dec pusha or push lahf add cmp and add adc sbb push cmp push adc jg fcom add pop or loop or mov adc stos aas lahf loopne loope inc cmp xchg and adc (bad) jl xor pusha adc addb movsb sbb cld inc pop sbbl test daa sbb inc adc cmpsl mov sti into xor je pop cmpsb cmpsb data16 jns test xchg mov test movsb and gs out dec jno pop mov add add add push mov add add add add add add add add adcl mov sti add xor add sbb add sbb add push add xor add mov add add add add add add add add add adcl lock or adc sbb add test add add adc dec outsb jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add outsl js inc insb insb add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul js jb js pop insb insb add mov dec pushf fwait sub mov inc orl xor out loop idivl sbb jae fcompl popf inc dec test pop cmp lcall mov pop ret dec and shlb xchg xchg or mov shlb cmp push xlat nop push js pop adc out sbb loop cmp add adc sbb push in pop test pop mov push mov sub mov sub fist inc (bad) rorb push or pop aad sbb or sbb test xor pop pushf xchg loope dec (bad) or sarb sub inc or cmp jno push dec cmpsb scas mov pop ss fadds enter mov dec shrb ficoml push add cmp sahf xor and mov jae push dec sti and hlt sub pusha dec in xor pop ja mov mov xor xor nop (bad) pop pop mov stos xor adc iret (bad) adc orl lahf repnz and test ljmp mov sbb jl push adc decl push mov add fildl in jo cli sbb (bad) std xchg into sub arpl mov popa iret faddp push xchg mov push dec loopne loop in fimull movsl xchg cmpsl add cmp cmp mov jns,pt push loope or lds xchg adc loopne pop push push add clc std inc jne imul push leave adc call lahf push adc dec adc xchg add cmp pop popf xor mov insb mulb aam aaa add jl test enter mov in (bad) cmp inc pop inc test loopne jo lahf push sub or ret jne aad subl insb or xor sbb pop adc pusha fwait je loope and loopne dec mov mov add mov pushl cli dec xor testb hlt data16 je sahf in fdivr adc xchg pop aaa pop xchg or xchg xor mov rcrb jg (bad) stc das iret int3 scas nop jle xor nop push pop mov cmp jp push (bad) mov pop inc sti xor pop decb aam add aas push sahf jl out jne lods push (bad) sbb rcl cs jbe mov cmp dec lcall mov xor outsl in mov adc jg inc mov jnp and mov aad xchg loope pop or (bad) stc dec mov in push popf sbb mov mov repz mov lret add add aad pop pop jge dec mov fucomp cwtl cwtl or jl sti sti mov sub adc movsl ss je fcoml aaa movsb daa sbb aaa lcall pop in mov jl js inc pop clc pop cmpsb inc std cmpl inc xor sahf push popf mov testl adc lret sub sbb inc jo nop jecxz sbb out adcb aas aas dec cmc push pop or (bad) xor icebp out mov inc adc aad add dec or push (bad) push xor mov or sub or mov and or rolb cmp jp sti unpcklps sub sarb daa subb ljmp pop and in ljmp aaa adc xor hlt nop push shll add mov xor mov test (bad) arpl inc sbb inc fistpl cmp pop (bad) adc dec mov aas daa adc dec out ret push fsubl sarb subl scas movsb int sbb imul cs adc or mov addl lods outsb lea xor jne (bad) sti and xchg mov mov cmp mov nop sbb xor pop movsl pop pop and cwtl or mov data16 add ljmp lcall mov mov push fstps mov insl and insl mov ja push js cmp cltd inc addr16 jecxz push jno dec gs bound daa (bad) test xchg pop jbe mov iret jnp insb loope pop push mov sub jle push scas cmc mov lock mov outsl ss or dec xchg mov add pop and jnp sbb lods mov addr16 sbb pusha lock fiaddl jnp mov dec lret aaa add xor mov (bad) mov (bad) jecxz jb movsl ret push (bad) mov mov xor inc stos push enter arpl cmp les loopne adc jmp in cmpsb or dec sub cwtl sbb adc mov push cmp dec jp xchg (bad) mov fmul jbe cmp cmp dec out mov lret cltd insl mov and dec xor das mov mov out adc add lahf cli (bad) xor add fadds sub lahf jne adc outsl mov js (bad) cmpsl pop imul fdivs xor icebp shrl inc aam jns jnp stos dec outsl nop pop adc sbb mov push addr16 cs inc mov push xlat imul scas test ret sbb (bad) xor pop inc (bad) dec pop jge xchg pop popf adc fwait add pop in mov ret sub push lds mov and in int3 jbe push push jecxz push test int3 xchg dec adc insl stos aad rcll dec push out cltd xor fsubp loop daa adc sub stos scas push mov mov inc add xchg popf fsubrs inc int push push leave ljmp push decb scas cmc jecxz or jne push jecxz xchg pop mov adc push adc fwait and dec push popf xchg mov cmp mov mov movsl inc pusha loopne lcall sbb ret inc or out and out idiv mov sub xor mov lea insl lds aaa inc pop sbb xor and mov repnz clc sbb or ss push lret repnz mov aam jno loope or dec mov adc dec or loopne jae mov (bad) (bad) repz push and mov mov pop cli pusha mov sbb mov ret int3 out imul call xchg lods inc cmp imul in mov rolb jge or aas push mov stos sbb mov aam daa push not sbb jo js adc lock mov out or mov sahf test dec stos fildl xchg push pop mov daa nop lea pop or pop push xor je push testl pop add mov lahf mov in ror pusha and daa pop (bad) dec pop ljmp (bad) adc and inc push push jns rol js inc ret dec lods int3 test inc mov or repz data16 xchg into mull jae leave jo jmp fstps push pusha cmc aaa out jnp mov fbstp dec jo lods and jmp mov dec into mov sub lock xor jne push cmp jne lea dec aam xchg xor outsl pop mov cmpxchg sbb pushf dec and out shll pop or jle pop cmpsb into scas jg xchg in (bad) test sub sbb push andl lods xor cmpsl or (bad) aas adc scas arpl sbb daa insb insb push sbb cmp lahf mov (bad) dec lcall xchg sub daa sbb (bad) sbb imul fs adc inc xchg ret pusha add lret imul cltd adc jmp (bad) (bad) hlt std enter cmc or lret icebp mov pop push mov dec push fwait cmp pop adc pushf shrl or jno mov inc pop out xchg das sbb leave or sub (bad) push pushf sub mov pusha (bad) arpl inc sbb arpl jno fs notl repnz ds xchg lahf jne pop je push (bad) mov xor gs dec enter movsl push inc push ficompl pop leave inc (bad) xchg and iret sub mov adc daa push push jns sbb and dec mov popa mov loope dec or roll scas or mov xchg (bad) ds fcmovnb inc (bad) push ret inc sbb or or mov push xchg cmp dec push sbb xor and (bad) fidivl dec rclb ffree lcall ds pop (bad) dec std imul (bad) (bad) sti mov in test push mov repz pop dec stc or aas lea xchg in mov inc jle mov (bad) adc out add mov xor sbb out (bad) imul ja mov adc fdivl or fs imul fstpl sub mov xchg pop and outsb sub cmp inc cmpsl xlat out loope add (bad) enter xchg jmp outsl mov sarb pop (bad) dec jns mov push in mov cmp (bad) mov aas mov lods jl add test and sbb mov sub mov xchg test jge xchg jne dec insl pop shll adc outsb imul cs insb add xchg or jo pop popf pop push push (bad) out es lods jl adc add aad test pusha les jae faddl sti movsb push adcl (bad) ds jecxz fnsave pushf frstor fist cmp xchg mov pop inc cmp sub add or add or aam fwait jno push bound fldenv xor test (bad) mov pop aam adc add insl into jns aaa addr16 ret stc adcl popa imull imul lods adc (bad) xor addr16 in or mov adc (bad) in pop jecxz adc pop movsl xchg inc out jle addl pop mov ret mov xor out aaa stc xor add xor inc jnp add fwait cli les adc add sbb and jno push lret les shrb sub subl xor xor and sbb xchg sbb inc lret xchg pop cmpsl mov jge,pt xor js mov mov add jnp mov jb push enter inc jg ror xor and push out in jae jo fcoml jne push inc jle mov mov mov addr16 push jae or jecxz imul push sbb js jno add adc cmp (bad) rol test mov les push add fnsave sub jg je fsubr bound and push frstor xchg lock and imul fisubl add out push out repnz xchg add dec jnp push mov shr xor int3 loope fimul daa cmpsl test cmpl inc push lea and push rcrl in popf mov add mov xchg lods int adc mov jno push xor pop push pusha not pushf push dec cmc pushf rol cmc stc clc cmp bswap lea cwtl bswap lea call aas mov int adc ret push sub pop pop mov sti add mov out cmc imul xchg xor insl fiaddl cmp lods push lcall test lea cmp and push ljmp ljmp push and pop scas or dec mov or xchg sub mov jno ret lock fbld pushf dec mov rcrb movsb jnp add fildl testl dec push mov sub xor push orb xchg std mov xchg lea mov scas movsl sbb mov xchg imul sub or aad fnstenv mov xchg (bad) out (bad) les push mov ja inc mov dec mov movsl stc movsl stc movsl stc or shl sbb lret mov push xchg sbbl xchg popa fidiv lds pop out push ljmp pop cmp sahf push das jae pop cmp imul cwtl dec int3 pusha or call xchg hlt mov test mov xchg ljmp in sub test lea out sarl and imull iret scas jp loope adc mov jno dec jg pop pop jmp movb clc and test cmp bt add lea push test add pusha dec pushf lea jne bsf rcr movzbw mov clc stc pusha call lea jne call pushl popl pusha pushl ret inc inc dec xor cs insb add push mov cmpb int3 mov ds scas in fadds repz movb jns mov sarb repz fmull sub jo push (bad) out scas pop orl jae mov (bad) xchg ljmp scas and jp test mov pop add (bad) fstps loope ds dec imul add add cs add andb subl test in cmp sti lods pushl jmp loop (bad) sub popa xlat hlt out int and rcll cld mov fistpll fstpl mov xor mov and cmpsb mov xchg ret data16 loopne mov fnop cmp or dec xlat mov iret adc fistpl adc int3 jl xchg je or dec aaa addr16 (bad) jg (bad) jnp aas jg jnp lret scas iret pusha mov sub and mov and jo add repnz adc pop push xor cmpsl fmuls data16 or mov inc sbbb xchg jae js ja inc fwait pop xlat bswap insl gs in movsb std mov adc and and pop inc test push push push mov adc xlat add cmp sbb dec out mov lea xor jge adc and (bad) into mov pop cmpsl pop ljmp inc jno mov fstpl into dec aam in xchg mov sbb cmp mov mov sub pop das xbegin xchg mov or sbb jmp adc ja inc popa dec xor xor adc adc movsl jp adc mov fnstenv scas cld mov nop paddusw rcrl cltd (bad) mov sti jecxz add sub out push in mov mov rolb imul jo dec outsl ja mov jno inc or push imul sbb inc shl in mov rcrl mov cmp sub or lcall mov mov push imul add jo jl inc mul test popa jg,pt rcl lods rorb daa pop cmpsl movsb ljmp mov (bad) fs push xchg mov cmp mov push test bound mov (bad) mov cmp test sbb mov leave ss jl cwtl jb sub mov cmp pushf jne movsb fisubrl ret aas loopne mov sbb idivl jno dec fdivl leave adc mov pusha jmp loope add test test push aaa adc or pop push bound jne jns imul stos xor (bad) loopne test addr16 dec add jge (bad) jmp or push cwtl inc pop inc push xchg dec pop and js jle jb aam and jnp stos adc push out iret iret and nop stos aam insl scas pop jge add int int std push xor (bad) lret add lds arpl lods out push sbb inc dec outsl and cltd out out jg jb es lods mov fisubrl adc mov inc cmp in cmpl xor dec mov daa negl adc ds cld jo sbbb inc mov imul mov stos mov inc mov jge iret aas mov pop add (bad) or xor adc or fdivrp fdivp ret aas gs arpl sbb cmp scas push mov cmp sub sahf xchg test mov jge jge (bad) pmovmskb sub push stos hlt dec mov pop int3 adc insl xlat push fdiv cmp out cmp cmpl lahf cmp cmpsb jno dec outsb and cmp dec xor add (bad) leave std dec mov (bad) mov fistpll pop xor sbb mov dec loop sbb js mov fdivl cmp fwait mov clc cmp mov push dec imul sti test cmpb aam lcall into xchg inc inc push dec pusha decb ret aam inc les popf ret pushf add cmpsl ja add popf add pop inc (bad) pop pop lret xchg push ret xor icebp in mov push adc and fisttp sub sub flds sahf xor sbb enter pop fadds (bad) sbb mov and (bad) aam adc sub inc fwait movsl push adc pop pop gs dec push stos push or xor push and test cwtl test cs pop leave out sti in and fnstenv sti movsb inc pushf aad insb shl fstpt (bad) mov repnz jecxz flds add dec adc add cmp dec das mov imull jecxz and cmp fwait cli les dec jno inc lret les cs sbb iret aas mov les mov xor pop ret jns test mov stos rorb stos out cmpsl idivl dec clc xchg or (bad) out shlb jecxz pop fs xchg cmp or stc lds inc jmp stos cmc icebp into shrb sbb addr16 mov mov bound add loope into pop ret js xchg mov push sub test imul pop lahf shrb in fstpl cs and roll pop xchg mov pop test scas mov sti jle,pn cmp xchg dec cmc or lock sbb mov pop add push sbb dec push imul leave mov test add xchg lods aaa out jg arpl xchg je xor pop outsl flds leave loop scas ljmp jmp mov cs sbb dec lods movsb das mov add inc fwait mov daa add pusha pop addr16 cwtl jno inc sub movl pushl push push mov lea jmp cli ret sbb push popa and sti xchg cmp sbb js pushf mov cmp sub adc cld jecxz repnz movsl jns add xor adc xor inc addr16 imul xchg ret imul sub cmp inc ficoml sbb pop pusha (bad) idivb jp jbe push add jmp inc fsts je mov incb mov ja ss enter popa pushf add loopne sub insl jle je hlt lea cwtl daa js pushf xor jb iret out (bad) lods add sub xor hlt imul mov cmpsb pop rorl pop xor (bad) imulb leave push xchg jmp mov movw pushl popl movl pushl ret dec inc push dec inc dec xor cs insb add fiadd adc sbb push lods cmpsl cwtl sub sbb cmp or fcompl jne jns rcrl scas push lock fstps les xchg ljmp movsl stc jb dec mov or sub jae xor cmp xchg jl lods jo pop pop shlb stc sub xchg dec jo nop in sti sub cmp adc lret mov xchg jmp sub (bad) mov (bad) (bad) fsts cs pop sahf je in add (bad) aaa mov pop repz test mov pop sbb fcmovnb sbb inc in in xor stos cmc lret insb shr mov xchg sub jmp incb adc test adc lods pop push mov xchg pushf in ror mov rorl xor adc test xchg pushf in xor mov cmp jns dec and out imulb sahf inc sbb push push jecxz repnz xchg imul push push fs cs push enter jne inc jbe pop jno adc push incb mov test cwtl push adc xor aas sti jge pop divl scas push imul fs mov sbb mov mov inc mov mov cmpsb js sbb inc (bad) adc mov movsl mov and adc int3 jg (bad) lret inc pop fs pop inc cwtl sub ljmp cmp and sub push and cmp push sub xlat or and fidiv movsl mov test cwtl mov stos mov lods adc stos pop outsl scas adc dec scas rclb push sub xchg imul test sbb and stc int push mov dec pushf bound add jae lret xor cmp mov aam mov mov or add mov jmp adc loopne mov and js,pt cmc mov jb jbe push imul mov das outsl sahf pusha (bad) nop (bad) jns outsb pop mov sub xchg in fsub jae xlat enter inc hlt fwait pop (bad) lea call call push fldenv push imul pop ljmp mov pop stos push cmp jo xorl ret js fdivrl out push lods inc (bad) xor cmp popf loop ret mov fsubrl inc xlat mov fildl (bad) stos push mov push dec je pop pop int3 pusha fsubrl test cmp mov dec or jp and adc movsb sbb shrb daa xchg (bad) scas out nop sbbl mov pop jo out (bad) cmp add imul jno test jp (bad) out add adc leave push dec push push mov mov decb inc loopne add sbb mov das scas out scas pop mov mov xchg xchg jns movsl mov adc bound inc push sub lahf stos lcall xor add xor femms and pop mov sub xor add sub repz sub mov loope inc dec push mov cld jne movsl (bad) into adc loope int3 xor push dec pop sbb (bad) icebp nop or jb arpl push add push jno inc lods loop stc ror pushf stos setnp mov lea pushf lea call push lea jae stc cmc test cmp sub jmp xchg jecxz mov mov fwait test rcrb push cwtl data16 das stos aam or pop pop cmp pop rclb xor sahf scas push cli ficomp cli in push idivl loop push dec push stos pop lods mov push add jmp push ss and out daa rcl clc push test cmp in andl jge dec mov jbe (bad) int3 sarl lcall xor push rorl stos xor test mov xchg sbb dec adc or insb adc xor js jno inc inc dec mov cmc aaa daa push dec call cmpsl imul outsb jo test or or lret aam sub pop incl jle lret int3 adc push cmp mov lret and xchg mov (bad) mov (bad) jmp dec cltd test cmp xchg push xor or testb insl and adc cmp in or adc cmp sarl adc sub and dec idivl jmp (bad) fildl sub icebp fwait push popf int3 inc (bad) hlt stos jg mov cmp mov clc or imul push push inc push xor cs insb add js sti jbe inc adc and dec xor or adc cld add mov mov aaa mov jl jns jns adc jle push adcb fistpll fsubrl shlb and mov rclb mov and pop adc fistpll je mov sbbb push xchg les sub data16 js enter repnz or jle sahf cmpsl pop movb fnstenv sbbb aaa add subb mov (bad) xor jmp jno ds push insb push dec clc cmp mov clc shl movb pusha call mov test mov test test jmp lea bound or repnz gs dec out xchg push imul icebp (bad) fldl mov sub pop shrl lahf aas sbb sbbl dec pop or arpl inc fcmovnb insb out inc arpl outsl addr16 cmpsl test lock in mov mov add jne fcomps sbb pop push ljmp add cld sbb test (bad) cld cltd or add sbb fnsave je jmp dec xor or or ret jno cmp jae mov outsb xor mov sbb sbb sarb or add push or mov sub sub or and mov rcl sbb rcr scas mov mov iret (bad) mov xor addb sbb fs clc rcrl mov pop jo xor xchg jno fisubrl xchg fcmovnb cmpsb shlb sub lock (bad) xchg sbb cld in push pop and inc out pop pusha pop ret cld mov xor mov jecxz xor adc lcall sarl mov mov imul inc jmp and or pop fs add outsl mov jge cmpsl inc pop or sahf les lods adc adc sub sub sbb mov sbb mov repz pop and out xor and push cmp xchg ja test mov lret out cmpsl insb (bad) and dec push mov dec mov lcall divb nop mov lret repz mov jg sarb pop mov and sbb mov scas jno cmp sub mov mov and adc scas jo inc imul and xchg sub or in cs adc xchg or cmp sub or adc push movsb repnz dec insl adc lea mov ss and xchg add sbb (bad) out or pop mov stos mov and xchg xchg mov scas jg inc leave lret sahf lret xchg jp fdivrl lods mov loop pop std sub jp push cwtl cmpsl mov out ror ror shrl lahf xchg mov shrb arpl ja or aaa pop loop ror inc fisttpll adc incl lds (bad) enter in adc sbb loopne mov sbb popa and mov pop push inc xor mov cmp inc push jmp push jmp inc les iret test fcoml out xchg loop sbb daa pop test scas mov cmpsb cmp ret push fnop xchg pop sbb test adc push and pop and cmpsb gs or call das in pop cmpsb cmp int xchg mov outsl test imul push bt call pushf movb lea je call mov pop xchg scas mov and jns pop mov mov mov insl mov mov push mov dec js sub pushf sti sbb nop xchg cmpsl xor sub leave or popf fisub decb adc xchg dec imul cmpsb pop mov sub insb roll and sub pop or cwtl cmpsl mov es xchg rolb test loope ljmp dec push add leave or scas lock jmp in jmp sbb or adc and add fwait cmp std ret mov sub repz ss mov push sub outsl es dec insb jno inc pop lret repz insl jle imul sub pop dec inc pop inc jl das cmp je push jl addl outsb js mov mov arpl push scas push pushf rclb arpl jb xor daa mov sbb cmc lret sbb (bad) mov clc jae lds repnz cmpsl mov std add lahf mov and mov test out cmpsb movsl or cmp outsl seto jne bound inc pushf mov fbld les (bad) mov xchg xchg sub cltd pop adcb or pop sbb (bad) dec pop jg jmp pop scas adc sub imul push imul ret push add adc stos mov pop jecxz iret and cwtl pop push dec xor in icebp push data16 fs jmp das out xlat daa cmp cwtl flds aaa out or xchg mov ljmp outsb push mov mov lret negb xchg mov in adc xchg dec cli pop (bad) shr add mov mov loope and gs fidivrl pop idivl add in xchg sub cmp dec push dec xor sbb sbb imul add push gs imul jb popa add mov add add mov rclb sti jbe and mov fsubrs addb push cmc mov scas ds jb xor push sbb jbe lret fbld sahf repnz iret in mov pop out into inc fdivrs stos jnp xchg icebp add dec shrb mov xor repz shrb mov pusha aas push push sbb repz pusha jle shr nop cs sub mov test (bad) aaa pop rorl into mov stc cmpsb hlt mov mov hlt (bad) sbb sub insb jge jb iret (bad) repnz (bad) out (bad) sbb add sbb daa (bad) pop pushf imul jno aaa xor and andl add push pushf mov cmc cmp movw mov lea ja dec inc pusha inc lea dec xchg lahf mov mov shr mov cmc stc push shrd jmp mov lcall mov or cwtl mov outsl or (bad) in mov cmpsl push rcrl pop cmp xchg mov iret cli or sbb mov aam movsb inc ret add not iret push xchg cltd test aas dec mov fldcw lods (bad) dec (bad) sbb push jmp roll pop loopne jle mov packssdw dec mov xchg test cwtl and in scas adc pop fisub xor inc add iret scas jo push insl xor cmp push fsub xchg xor inc (bad) jno sub and xor pushl popl push pushf mov pushf pushl ret movl pushf call add add adc or lcall js cwtl loop repz addr16 pop add inc js lods sbbl and (bad) mov push pop push aaa ret fadds dec add push pop ds mov xor aaa insl adc inc (bad) push jmp or sbb push dec pop mov ret movsl pop mov aas mov mov pop imul or pusha stos push outsb cmp inc mov mov sbb sub push scas sbb sarb lcall call xchg out es sahf push pop jo outsl scas sub lds jle rorb and das inc pushf icebp sub push dec or test (bad) adc dec xchg out rclb aas pop mov push les jl sub icebp add (bad) jae pop sbb scas xor xchg sub sbb sub (bad) adc fisttp push call (bad) cld mov cmpsl mov add mov xor inc push insl movsl mov ds sarb jl nop jg mov pop mov sahf inc sub xor shrb (bad) jg or cmp cli inc push loop sub (bad) (bad) xor call sub addr16 stos adc xor pop add and pushf nop ljmp das inc lds mov pop loopne cmpsl pop or cmc (bad) outsl xor sbb inc fnop inc lahf mov pop je jae cmp (bad) dec repz push fwait iret push adc cmp sub sub add mov test cmpsl jno xor cmp push lea ja jmp rcll or lret jne sub cmp lds sbb cmp pushf mov popf fimul cmp push stos mov mov stc mov movsl jle es in loop int xlat push or cmc xor mov mov enter dec fisubl frstor jle rcrb pop ret insl jo sub ret ljmp mov dec cmp pop or jecxz xchg inc pop jl aas andb (bad) xlat call xor adc lcall mov fsubrl mov (bad) xchg jae dec xchg or pusha push mov movsl in mov repnz aaa lret push sub jno xor mov leave (bad) pop loop bound and mov xor and cmp mov mov add std push lret call inc push cmp aas xorb mov lahf (bad) jo jno cltd test sbb and xbegin push icebp xor pushf and daa xlat sbb popa repnz rorl test cmp jp sbb adc aam (bad) loopne (bad) inc mov imul cmpsb pop xchg inc cmp test mov mov scas dec xchg cs mov mov cmpsb cmp dec jg add cmc sbb addr16 adc bound jno xor mov mov lea pop not not seta pop mov pop call xchg push or pusha ss daa in pop mov bound mov jecxz addr16 into adc loopne cmpl jp imulb jg inc jns pop shrl push enter push jp,pt cwtl es jbe mov mov cmp sub fnsave inc call xor adc mov in push xchg jecxz pop (bad) fdiv pop das rorb popa jbe insb jge (bad) xor sub imul addr16 adc dec push and int daa test nop adc sbb (bad) jmp mov inc jno xor mov pop mov gs add lea push std inc pop bound leavew push fwait push push dec xchg daa mov movsl (bad) out fucomip mov arpl (bad) or inc mov and sbb pop rolb addr16 mov sbb aas cmpb push lret push mov testl lahf hlt icebp dec push add daa aaa (bad) jg cltd add jmp xor mov aas loopne push and mov pushf jecxz sub insl mov mov lcall jno bound das (bad) clc js imul push adc (bad) add mov inc xchg add jge pop sbb scas jecxz pop mov (bad) lock jle inc les jle sbb adc cld and out dec xor inc sbb jp out xchg in ret xlat fld movsl cli test (bad) das daa sbb or (bad) ffree loope mov insb movsl jns jno xor jnp daa dec push inc popf insl xchg rcr push sub sbb ds adc mov pop push into fist dec out addr16 and dec sahf ja shr xor fadds out mov or ss xchg xor pop add pop mov push flds pop nop or out std inc lods xchg shl jbe bswap pusha sub jne aas bound mov fldl outsl add mov imulb fisubl sub jmp sbb add push cs daa mov ret testb jno das pop xor fsubr scas daa or pushf movb not call add and xchg (bad) sbb push insb jb aaa fs fsubrl mov fdivs movsl cltd aad call jb pop insb fldl int3 push inc sbb hlt add sub cmp sbb or mov add adc mov inc jnp faddl movsb stc jle insl ja das fbstp mov cmp pop mov unpckhps pop xchg out (bad) xchg gs fbld cltd stc inc jg ds cmpsb sbb lahf mov neg inc sbbb hlt sbb cmp lret lret jno das jo sbb dec or nop test push dec sub divb lcall mov fxam es lods aad cli add loopne int3 xlat (bad) das shrb inc mov shr inc mull mov popf scas push lock inc fwait push out hlt loopne,pn or (bad) fmuls aam out jo adc push rclb scas dec mov mov xchg andb mov ret xchg call cmp cmp xchg jnp lret out mov or add push and sub jmp sub lea push call lea ja stc imul cmp bt cmc test add pushf mov mov push lea jmp push pushf adc pushf pusha pushl ret add inc outsl inc jb popa je dec outsb jae popa outsb arpl cltd xchg lret xlat pop sub cmp movl fisubrl (bad) (bad) xor inc ret cmp rorb xchg test popa std sub inc and push cmp or out mov sbb fdiv sub pop ret insb outsb dec out call lret rclb cmp push adc in cli cmp lock mov shrb (bad) ds xor xor inc or loope cmp (bad) frstor dec inc cmp push jbe rcr mov idivb aam mov bswap repz ss popf fisubr add fsubs out aaa or sti adc cmp xlat cmpsb fdivrs in jno sub mov out loop ss out nop (bad) xor fist xor jne jge addl faddp mov scas rcrl out lock fwait adcl in add and std push or in sbb fwait les sahf and inc jle adc cmp adc mov imul push out rclb lods add mov pop mov rcll lods mov test mov addr16 and pusha mov cmp dec jb ja scas adc mov lcall dec repnz sub dec jbe inc push push dec dec dec cs insb add enter cmpsb (bad) pushl hlt lret faddl dec stc daa clc or daa js test rorb gs push mov movsb sbb rorl or lds aad cld rclb repz bound push xchg mov fadds cmc dec out scas rcr add ja lahf mov roll push mov cmpsb sbb and je cmc js mov or aad ljmp mov push jmp (bad) cmp mov lods in xchg sub fimul cmp movsl mov xor imul addl insl jle imul mov push adc pop pop xchg scas stos popf pop test insb aam rcll add dec mov (bad) loopne cmp popa jns jmp cld loop pop dec aam fwait lcall cmpsl mov mov dec div sub pop aas inc xchg outsl xchg xlat and pop push jo (bad) cs out or mov les int test call sub into xchg jno mov sti and jns test inc mov dec xor (bad) cmc rorl addr16 mov cwtl es and pop test lcall pop jno sub test repz xchg shrl call cmp push aaa inc pushf pusha and scas je (bad) sbb mov fcoml mov pop dec pop out pop add mov xchg push imul jnp mov aas cmpl das sub mov push shlb lret mov cbtw cli push iret outsl (bad) hlt ljmp cmp sub dec xor push gs jge push xchg das sub mov stc movsl nop scas out insb mov sub dec jmp jo push shrl mov shr (bad) das inc jno sub mov daa fsubs arpl and int3 movups pop push mov lods push add or dec xchg in add ljmp mov cmpsl xlat sbb cmc shll and push out dec aad sub lock adc mov mov mov push iret iret testl inc jo,pn and xor popa mov dec or add stos repz mov iret mov aaa call lods imul (bad) pop ds insb push jbe jle inc add xchg sub dec (bad) adc outsl psubq xchg leave insb rclb sbb std jno sub popl or ret inc stc cmpsb sbb adc ja add (bad) jb xchg pop cmpsb fsub sub movsl fidivrl es mov out imul shrl cltd insb les xchg out dec mov xchg lods pop insb mov cmp add add popf movsb imul inc lret push (bad) jl ljmp adc pushf lock in and pop push cmp and in into pop or lcall hlt pop loopne icebp jne mulb lock lods iret jbe sub sub data16 or data16 ds cmp push outsl xchg sub jmp xchg mov lock jecxz mov pop mov loope not sub inc pop xchg mov jno sub pusha pop lea jne movsbl mov cmc add pusha test movzwl lea add data16 (bad) or in mov stc pushf bt jmp jno xchg add into xor push cmp mov pop inc push into push cmp mov add in inc pop (bad) xchg xchg sbb push jbe pop ret pop cli fs fiaddl xor adc inc mov push push mov add inc pushf mov popf (bad) add inc adcl addr16 mov fadds xchg mov mov xchg xor adc loopne (bad) in imul sub cmp dec xchg dec xor imul mov out add or pop inc mov cmpsl jno daa insl and movl jmp scas or and jmp movsl cmp add inc push test shrl push xchg adc push js (bad) in jl test add insb jb addr16 lcall jae (bad) xor fs sub add mov pop lods movb icebp inc fwait into ds loop ret stos mov in (bad) repz (bad) push and mov xchg cmpsb jno es cmp inc sti or in push dec dec sar mov lods pop push mov add in lods shr mov movsl fstps in leave xor pop insl jg xchg push fistl pop dec adc (bad) sbb and push sbb sub ror cmpsl outsb adc dec or das out mov or cmp and xchg push xchg outsb jo jns mov sub pushl lea jmp movzwl push movzbl lea pop jmp jg xchg jne pushf inc push out jns cs idivl add pop out das insb adc jg sbb pop fiaddl xor dec insl repnz ljmp dec xchg movsl (bad) jnp rorb push lret rolb (bad) sub out sbb and pusha shll adc insb movsb cmp mov dec (bad) sbb aas clc (bad) dec insb xchg mov add nop and fmul lock mov push xchg push or test cmpsl repnz or stc out jno dec jmp leave xor jns jg dec (bad) test leave jne pop (bad) dec or jo,pn pop mov imul fcmovnbe xor jp lea dec jo fs inc sub dec sahf orl pop and xor and je fsubs adc jmp movsl lret inc dec jb out out jo push iret mov mov sarb inc imul iret and and (bad) je (bad) repz cmp mov ljmp cmpsb mov pop sub push mov mov dec (bad) jl lock push out icebp push adc and cmp pop pushf imul cmp imul jns je in imul idivb inc js cwtl lock push gs mov cmpsb adc adc repz sub cmpsb inc sahf test in adc insl xor pop dec mov out cmpsl hlt mov nop mov jge (bad) push nop mov out and (bad) jmp xchg xchg dec fldl sub push mov lock mov lods movsl fsts imul imul and test dec jmp push push mov incb mov movq xchg sub push das jno and shrl mov aam fldt insb or dec cmc sbb call outsb mov cmpb mov into push lock mov sub xchg das cmp jmp jg (bad) je or icebp in sub adc jmp sarl mov iret xor fcomip incb jb iret popf leave pop (bad) mov push dec fbld (bad) iret das daa aaa mov ljmp add scas leave xchg movsb fidivrl mov out rcrl jno and fs xor lea jb bt pusha push cmp push pushf lea ja shr pusha ror add add bt not and rcr mov clc pushf jmp shr push mov push jmp lods xor (bad) push sub (bad) xor push mov xchg sub pop push in and push lock cmp push rorl cmp out pop inc push clc mov loop xchg outsb ret sti fbstp (bad) mov and mov js dec repz std or mov inc cwtl test pop or pop test fidivl in sub push inc and test stos (bad) std adc icebp out das flds rcl outsb xchg movsl push xor icebp fisubrl mov mov icebp lods inc mov inc fdivr inc aas jg pusha stos xor shrl imul pushl push or pusha push call jmp or pop ret imul mov (bad) icebp shr sub cmp insl loopne test push mov insb test (bad) mov fistp addr16 punpckhbw rcll mov scas mov das sbb or xor inc clc subl xchg ja bound fs out mov dec mov xor mov inc jnp push xchg lock fucomp clc or sbb cmp insl jns lret push aas pusha pop test sub inc sti (bad) dec popf jno and icebp movzwl pop not movzbw lea push bswap mov push lea call call fmuls idivb push pop push push jo dec repz xchg jmp jecxz mov adc lea test or adc test sub mov or dec push xchg and test jno cwtl ror xor clc pop jns std aaa adc sub mov loopne dec push mov (bad) into pop add fiaddl and mov int3 out shlb xor jmp mov mov dec xor pop inc push push stos mov adc adc push jae jp cmc mov fs int3 cmp or pop pusha pushl ret movl call jmp (bad) das lock cmp or cmp push cmp pop fsub add in dec xchg das (bad) cmp mov arpl jb test mov adc cmp dec insl pop roll sub dec hlt jp rolb inc (bad) mov and jo imul lods push lds jnp and pop pop sub inc sbb xchg shr cmc xor lcall and jmp popf or ja scas jl (bad) mov mov jmp (bad) adc repz dec iret fsubr iret pusha mov push mov fiaddl jmp pushf loop dec mov fwait inc dec push push nop xchg test sbb mulb cmp and add inc outsb jne push jb arpl jae jae out fsubrs and jbe pop enter sarb push imul mov in in jno add xor insb aad pop lcall inc xchg sub (bad) push pop jb mov push dec dec sub or inc insb xor (bad) leave (bad) dec bound push dec rol push js inc aaa dec (bad) popf loopne jne bound lahf incl mov das rorl cmp xor and push fnsave fs je bt pushf test call inc inc push inc push dec xor cs insb add jns push xor sub xor cmc push and cmpsl jmp test ret fcmovnu aas scas (bad) js mov fwait jecxz cmp fs movsl pop cmpsl rcll add loop mov out add and repnz push mov dec adc (bad) and mov mov ss pop cmp rorl add shll gs xchg fwait add dec rolb sub or imul clc ds subl or xchg inc cltd mov pop mov ror gs stos mov add imul mov ja clc fisubrl jg aad movsl lcall data16 xchg dec pop mov sub enter mov jae or imul adc ds pop cmpsb sbb add mov mov jle pop and jno sbb pusha jmp jne gs xor fs insb add and or push call cmp push sbb cmp xchg scas mov mov inc cli adc mov cli jge lret cmp sbb repnz (bad) xor inc fistpl ss aaa les jnp (bad) mov xor xor lcall mov adc lock push and push jbe insb stos push lea jle pop mov lods outsb mov (bad) lods fwait popf cs out cs rorb sbb add mov nop mov xchg sbb hlt sbb imull and test sub int (bad) or out xor inc test xor pop jno sbb xlat dec bnd push lea jb clc cmp pushf pushf call xor xchg test cmc inc int pop lock jmp (bad) lret repz cmp dec xor sbbl xlat xor repz inc mov dec cmp jmp cmp das mov pop push je push xchg sub or cwtl out pop add insb push flds ficoml jns mov jl mov xchg xchg test loopne inc pop sti arpl imul push fcomps mov ret jns pop lea mov pop pop inc jnp iret ror add and dec sub fcomip (bad) add ja je cmpb jne dec xlat sbb sbb stos lcall jae push inc mov dec inc push pushf pusha not mov push lea call push push adc push movb lea jae push jmp cmp push incb and sahf lods adc ret xchg out and jge cltd add lea shr pop scas jo cwtl (bad) lods push stos jb sub add pusha xlat test incl int3 in loopne jmp push insb mov ss popf mov dec xlat insb shr xchg mov mov jb insb fidivl stos mov ja sti inc mov pop lods adc mov or outsb push fildl cmpsb mov mov xor sbb popf and sub dec push lods xchg mov or xor aaa dec mov imulb mov out scas ror ds (bad) leave imul imul pusha jmp push pushf movl movw mov mov pushf movl pusha pushl lea jmp lret jbe repnz into lret cmp cmp lock push push jb cmpsb rorl pushf inc cmp mov cmp cmp xlat inc fimull testb dec add inc xchg sub ja and xor or jl in shl sub jl enter xor inc add cmpsl mov sub xlat lret aaa pop jle out in push sub arpl sti jbe push aad mov xchg sub cmp in das int3 xor lods xchg xchg enter in pop add fistpll cld adc test iret jg sbb lods pop les inc and ret and jne call shr hlt cli inc push mov xor pop sub sub adc xor adc shrl push dec push dec jne mov jmp fmull push mov loope outsb or pushf xor inc push cltd mov (bad) in cld sbb outsb nop lret mov hlt repnz lahf loopne cmpsl inc call mov outsb aas mov out or push sub cmp packssdw gs pushf and xor and stc cmp sbb int3 cmpsl xchg stos pusha movb lea jmp sub out mov in cmp shrb mov (bad) loopne mov test in add movsb into sub pop ljmp fdiv cltd pushf (bad) sbb xor mov push jge jae scas imul or (bad) daa sub cwtl sbb add es ret clc in mov xor or orl dec jnp push mov mov xchg mov push inc inc mov clc push mov add jge or rolb pop insl loopne lds adc les (bad) mov (bad) stos sub add jle lds movsl inc call js ret popf fwait cltd add jge mov add lret test and ret es dec mov (bad) cmpsl scas mov jns add loopne and leave out stos fldenv xchg add or ret cmpsl shrb lock out sub push ret inc in sub (bad) (bad) push test cmp movsl adc and add mov or jge gs xor or (bad) mov and lock (bad) mov faddp mov movsb xchg insb cmp clc adc mov pop imul push mov inc in test and in xchg sub xor sbb mov sub leave into and inc mov xchg sahf cmp add sbb jecxz pop xchg pushf ficomp and mov inc ljmp stos pusha les inc push jo aas add push adc pushf pusha and jl (bad) xchg dec lret jp lahf adc add movsb adc imul ljmp jle add ret lret jp movsl mov enter lock push daa dec insl jge jecxz hlt cmpsb cltd mov pushf movsl les or rcrl test pop or (bad) cwtl cmpsb les jmp adc js mov sub push mov stos and push and push or cmp out jae mov cmp (bad) xor ds cli enter je (bad) xor adcl loop call out inc mov jae int3 mov xchg xor mov mov mov cmpl and xchg sarb stc in addb test outsl add (bad) mov xchg out mov loope (bad) sub dec pop dec dec jns rolb lock lret add pusha fdivrl mov cmp sub dec in and or fist ret aaa int3 or jle jg jb xor sbb lods mov outsb es mov ret cmpb jb ret call sbb jmp (bad) test js mov (bad) out cs repnz enter and fldcw mov and scas dec xchg fsubl sub cltd push push xor push cltd xlat xchg and cmp lock loopne enter sbb jge outsb int3 int3 cmp ret sub lock jecxz sbb ljmp cmp sti add (bad) xor mov lar add mov inc fst test (bad) movsl fadds adc test rcll pop (bad) mov jle mov inc fstpt loop sub aaa mov cwtl mov jbe jle add xor mov push fdivs xchg ror aad je cmp test mov mov mov andb add movl lods pop icebp sub fcomps and icebp push sbb clc push inc inc push push sbb loope cmp movsb es push dec rclb inc mov hlt shrl mov aam sahf inc or xchg xor enter mov inc pushf mov sub lds jo shll insb xchg dec dec or (bad) mov addr16 xchg out adc (bad) mov add loope imul adc mov gs test jns adc inc test pop jmp (bad) mov or inc jo (bad) incb mov lds js inc sbb xchg data16 vmovntpd add mov lock (bad) push dec and mov add movsl mov popa inc push (bad) clc lods lret push or cltd das sub and les inc ret or andl arpl rcrb test or ret push loopne or fidivr (bad) sbb in loope cmpsb xor sub test stc jg loop in and and cld in ret mov ljmp xor or mov cmpsl stos xchg dec iret pushf or push movsb push push movsb mov mov ret test sub loop push scas int3 mov add or and aas adc xchg bound lods mov mov pandn ret push sbb and mov pop mov lea enter sbb ljmp (bad) out mov imul dec sahf lret xchg xor mov mov add adc adc lcall or push movsb pop and popf add pushf je nop pop mov push add fild xor roll push test sahf dec loopne cmp movsl mov or add xor mov push dec aam sub pop enter movb mov imul aad dec or call test test mov and pop shlb fist nop fiadd rcll jno push gs out cltd fsub sahf aad and cmc jns add ret inc nop mov (bad) test repz mov sbb adc test sbb aam test fpatan stc shrb push mov icebp or fcomps mov adc xchg mov push push ret cmc cmp in mov loopne int3 (bad) sbb cmp (bad) jg mov mov add jno and inc in popl cmp push es test rcll inc rcr cld ja pop fs lahf and push inc pushf xchg mov mov add add cmp cwtl or pop in xor sbb int3 popa mov cmp mov mov and imul cwtl gs mov add inc cmp stos clc cltd cmp test push (bad) mov les push dec or jb dec inc mov lds in fsub and sbb outsl pushf out clc les pop push adc xor enter mov adcb jno sbb pushf loopne rol mov ret and lods or add fdivr xchg push and in subl stc inc leave jbe out jmp iret sbb cmpb js xchg lret or cld xchg cmp leave sahf pushf ret or xor mov adc out xchg aaa inc xchg (bad) addr16 xlat mov fsub fsubl fisubrl ret insb hlt test mov mov mov iret dec jg int3 into jb sarb lods (bad) iret jnp,pn incb les add pop test xchg in mov (bad) fidivrl rclb jo adc aam sahf mov int (bad) xchg jbe jp mov pop aaa inc sbb dec cmp sub out bound sbbb xchg mov adc or lods nop ret lock adc jo mov ret rorl test addr16 push xor ficom (bad) shl arpl dec int3 sahf inc pusha pop js add ljmp lods ret push mov dec sub (bad) mov out push clc rolb repnz lret gs lock sbb pop into adcl icebp in fmuls or rclb out and cmp loope add enter cwtl loopne mov mov sbbl mov (bad) add cmp andb imul ljmp iret out outsb insb rorb dec xchg fdiv mov movl gs fist (bad) adc sbb ret (bad) xor push add stos mov int rclb inc cmpsl ret test cmpsb negl push mov popf addr16 mov movl sub lcall leave xchg mov mov mov aaa mov add orl or (bad) mov out dec mov mov sahf aam mov (bad) dec and ljmp scas jnp out jne int3 rolb and and jo or int3 movsl mull seto dec mov mov sbb fadds dec enter int3 add pop cmp mov and ljmp dec mov test pop push jo xor adc dec leave rcrl aam inc push or push push test gs push stos push xor and nop jg mov decb (bad) mov clc into jl dec push orb push mov imull add stc roll cmpsl enter seto sub pop push arpl add mov pushf pop jne sub ja mov mov jg addl pushf daa lret test inc or stos adc lds add mov mov cmp mov sub mov mov iret fmulp xchg mov aas push in xor adc dec mov lret rcrb inc inc loope lret nop ret sahf inc orl cmp testl sbb add pop mov sub sub js or mov add and xchg ret pop jp inc lret movl add iret cltd adc add leave sbb fcomps push inc icebp (bad) xchg mov enter dec jns push lock test ror mov jo in addr16 sbb (bad) and adc lods sub xorl ret xor adc imul mov sbb add mov (bad) call push sub call js ret mov and pushf lea outsl jbe int loopne rol out adc jge xchg lea mov int3 ret sbb iret test adc pop fwait push popf push int ret and les add mov in xchg and inc int fcompl inc mov aas faddl mov sub into mov imul in mov out test lods pop xor add xchg dec loope mov mov (bad) dec dec clc cld cmpl or adc jge sarb sbbl or mov roll sbb (bad) cli cmpsb (bad) pop mov and dec mov ret mov pop xchg dec xchg aaa cmpl mov sarb popf pop in mov jge int3 push xchg aam add dec mov (bad) sti sub push (bad) mov clc shr iret call sahf dec daa in (bad) out mov sbb out lock and push stc (bad) rol inc sbb into mov add fcoms movsb (bad) mov or push addl fsubl iret sbb loopne out test lahf nop add aam or rol movsl mov mov lret stos sahf cwtl xor add js xor and mov loopne mov xor stos add push sbb out pop test xabort aas xor test xchg dec mov dec inc shrl pop pop adc dec clc out ret jb mov (bad) mov mov cwtl adc inc movsb mov subl test pop bound sbb fst iret and lods aad adc mov test pop aas pushf dec loop jl sarb popa sub pop sti xchg shl test ret push cwtl sbb movsb xor inc fnstenv enter (bad) xchg and jmp lret mov cli dec test and jnp ret (bad) dec mov or into pop mov sahf lahf enter loop xchg cmp mov jp ficom cmp mov mov fiadd dec jg mov inc (bad) or xchg js cmpsl int3 lock fmulp in adc gs pop iret xchg push int mov arpl in cmp mov mov addr16 pop sub add (bad) (bad) enter mov sahf dec mov (bad) not cmp je enter ret jns cwtl jne sbb movb adc or or and xor push dec xchg add popa adc mov mov (bad) sub lock xchg imul push loope inc mov pop pop pop (bad) int3 rcrl sahf mov or dec lock adc mov jne test loop adc (bad) es add jg push jl aaa lea mov stc lret outsl lods mov dec sar or popa sbbl (bad) mov adc jo push sarl pushf popa jge pop popa jecxz ja sahf aam (bad) aad mov into mov push les gs leave les sbb and adc dec shll lods loope mov into nop sub xchg call push mov pop lods addr16 leave loop in popa and sub shr mov nop ret cmp xchg mov addb mulb mov (bad) push xchg addl subl fnop xor inc pop arpl and imul add mov rcr xchg ret dec inc xor dec shr adc or into mov (bad) test (bad) push push test int3 cmpsb xorl inc jle inc mov in jbe les enter inc movsb add mov and insb lret mov ljmp jge repz nop daa adc gs addl loopne sub dec dec pusha mov adc std mov jmp outsl sbb xor xchg mov es sub daa adc cmp xchg movl xor ret mov mov mov lret pcmpgtb push sub and adc xor loop adc sbb mov inc cmp inc xlat ret sti mov out xchg ret push mov cmpsl loope sub (bad) mov add sbb pop jno (bad) sub fstl dec fdivs addl (bad) ljmp (bad) sub aad add arpl loopne dec and dec arpl add xchg xchg push xor xchg sub adc arpl inc sbb jg pop xchg stos adc xor xchg imul cmp sub nop fdivr test enter and push push mov bound or ret nop push std lret in rol test push add adc arpl pop sti push mov cmpsl (bad) loope loope mov dec enter mov leave inc cmp push and mov xor push rcr xor (bad) xor sbb xchg dec out call adc nop cmp loope or xchg cmp lss pop loopne insb (bad) mov out mov ja jae test mov pushf xchg cmpsl into shlb mov adc mov movl mov push push cmp into pop test or mov or rcrb ret rclb jmp repz mov or xor movsl jnp les shlb mov and add mov icebp gs iret mov mov into (bad) (bad) (bad) dec inc cmp (bad) xchg or iret mov es or rolb mov mov repnz loop or xchg (bad) mov sbb dec nop pop mov adc xor incb shlb (bad) call int (bad) pop xor cli (bad) (bad) inc push cmp sbb lret and push mov repnz adc push pop sbb push pop or and xor cwtl xchg jae divl mov loopne int3 mov js bound pushf test (bad) retw adc mov xchg mov xchg enter adc jle inc jno fcmovnbe iret (bad) xor (bad) push sub push mov sub (bad) bound mov push pop sub loopne add jmp inc mov xorl (bad) sub sub mov jmp or mov (bad) jno rcrl mov mov ficoml push (bad) leave add pop ljmp and inc mov jns mov (bad) ds or nop das mov sub jmp xchg add sbb mov adc mull das jne movsb lock adc icebp push push test pop fcomps inc jno loopne dec push gs jo jg insl sub jge loope pop mov out popa inc xchg bound jge mov fwait cwtl shrb loop add mov addl imul lret arpl push sbb int3 add mov sbb ret adc sbb add enter leave mov add mov pusha cmp outsl daa mov lret roll xor push dec sbb xchg or in (bad) lods mov xor and sbb test fsts sahf (bad) fsubrl pop mov dec nop repnz adc dec xchg (bad) cmpsb adc xchg iret sub lds jne fistp mov lret lcall push push rcl addr16 mov mov fs dec mov add mov sbb inc dec adc cmpsb pop cmpsl push mov js out enter xchg loop incl sub adc push xchg sbb ret push aad les movsl push mov sbb test jnp and mov push or add loope inc mov test dec mov push sbb adc jp outsb sbb nop xchg inc pop adcl push xor iret pop mov das lret (bad) pop and mov xor andl push aam or out xlat sahf jno mov test add (bad) or enter pop rolb jo js and dec aad dec nop sbb lret dec fsubs mov cmp movsb iret mov leave xor inc mov jmp mov iret inc fldcw sbb repnz fsubl cmpsl int3 inc or loop mov ficom and xor push pop push ret cmpsb lock add lret mov (bad) js enterw icebp icebp mov mov mov add sub nop std inc notl out push mov and cmp jo cmp mov int3 loope inc cmp (bad) sbb into lock cli (bad) andl test mov fcoml cwtl mov cmp jns les mov lahf aas in sbb mov lahf and add mov cwtl mov lret inc test adcl fwait mov mov (bad) imul enter fiadd jle adc stos loopne inc or pop mov adc jnp repz aas add adc movsl xlat cmpsb xor nop ret test jge adc dec sub cmc rorl jp sbb mov out in in mov adc add ret pushf push and jg (bad) iret xor xchg fsts mov xor push xchg fidivrl sti lret bound popf (bad) mov shufps icebp es lea sbb movsb pop push int3 xor inc xchg mov prefetchnta (bad) loopne shrb lret dec push and sbb push adc mov out and nop mov fild push int3 mov test push pop dec jge ret sbb popf push sbb add dec xor or test jecxz sbb mov push leave fldlg2 mov inc add (bad) or movsb jp fcmovb cs int3 pop ljmp sbb mov add frstor mov xorl out pop int3 push sarb xchg in jecxz adc mov xchg pushf iret mov jnp ljmp cmp mov add adc js mov xchg push or dec scas (bad) nop inc sub (bad) out cmpsb sarl sub inc mov dec xchg test pop ror lcall hlt inc xlat (bad) pop aas jnp loop add lret push or mov popa mov mov test inc ret rol jge mov xchg sti fnsave xor fiaddl rol cmpsl scas cli push mov mov dec mov clc mov imul push mov xchg insl (bad) int3 gs xor pop cmpsl loope loopne xchg test lahf shll sub jl jbe add mov aas iret and adc roll aad and sbb or cmp sbb dec movsl pop subl lret push mov push into adc add imul push adc ficoml mov rcr scas rolb mov iret adc push fdivl sbb cmpsb in add sub clc movsl inc add inc add cmpsl mov add out xor pop outsb mov ljmp push mov int3 and clc outsb xor cwtl sub in xchg sub pop sbb xchg roll inc or pop add cmp xlat nop mov mov ljmp fdivrs test bnd push rorl sub xorl shll xchg jp pop jae movsb das ret mov mov call xchg subl xor inc popa loopne fdivl mov cmp push cltd jno fcoml add mov cmp ror rcr es mov inc aam mov mov (bad) aam mov test int lock clc pop mov in (bad) bound das or loopne cwtl (bad) adc sbb loopne and iret (bad) dec lods xor mov sar and aam pusha mov ret adc test or sub mov (bad) mov sti jo sbb fucom or push fsubrs fnstenv mov ret ds xor cmp pop or mov mov inc push aas mov pop (bad) mov dec es (bad) aas (bad) push sub loopne gs jno mov into push add and cmpsl lods jb sub scas imul scas mov js push enter movsb pop (bad) repnz pop movb mov mov mov fdivp outsb andl mov jo sub addl (bad) mov aaa mov jbe mov sbb xchg fdivl mov add add or jb in mov xchg push xchg cs xchg pop (bad) (bad) in adc iret inc sbb lcall cmp loope scas mov sbb mov ret mov xchg lret or imul add insl arpl repz lods or lea xorl mov cld sub pop push pop adc scas jnp fnstsw xlat mov push loop popa test sbb cwtl add or enter push (bad) aas pushf loopne int3 jecxz shlb xchg dec fldt cmp mov jecxz addr16 adc repnz cmpsl xchg cmpl mov and jbe fmull pushf lods cmpsl sbb mov sahf inc leave fadds mov add loope out mov fadd rclb bound pop fcomps inc and (bad) ret mov dec pop das adc sub mov iret cmpsl xchg and cltd test shrb (bad) ss jo ret sub (bad) call push faddp sub adc (bad) int3 in flds cmp add adc ljmp imul es cmc or and and ds cmp xbegin (bad) and in hlt jns add dec iret xlat inc outsl xchg mov cmp outsb leave mov and mov jge push inc push cmpsb in xorb jmp insl nop orb lcall (bad) mov arpl (bad) lods inc mov mov cmp test into push test test fsubrs mov loop insb mov and mov mov enter (bad) and mov loope dec mull not mov imul clc xor test cld pop bound ss test xchg (bad) mov int3 pop stos sub jl dec iret roll cmp dec push (bad) xchg mov test pop push outsl cwtl and or add repnz or xchg loopne and rclb ljmp in ljmp stos adc adc repz xor jecxz je xchg in fimull popa cmp jmp mov push or xchg enter xchg and test inc push mov push ret xchg outsl and and ret add mov ret ja pop add and sbb push cld jmp sub pop xor adc pushf enter stos mov rorb loop dec out lcall call sbb add xchg (bad) repnz nop xlat nop sbb sbb mov loopne pop (bad) xchg iret arpl lret push outsb pusha mov dec mov mov adc iret mov jno add jg pop es add sub sbb sub (bad) addr16 add or pop mov mov nop cmp (bad) nop test adc mov sub xchg loop cmp ror aas subb sahf sub xchg jnp pop arpl cmp ror enter xlat or addl jbe mov sbb test mov movsb lea insl arpl pop mov popl std out cmpl fadd adc and stc mov adc js push push iret xchg hlt (bad) daa push mov enter rclb and push inc cmpsl sub les iret inc jmp rol in sub insl fwait inc in (bad) jae mov stc inc std add mov mov pop test jbe outsb (bad) lods and in pusha fdivrl jo pushf mov inc or jge,pt fstpt pop pop gs and iret mov add mov xor fisubrl push and mov inc aam fwait les ret jl mov rol mov push cmpsl (bad) mov iret out xchg out xlat outsb pusha inc xchg lret repnz cwtl popa (bad) divl add (bad) int3 sbb and aaa and cmp ljmp xor xchg sbb call mov push jge inc jo sbb push cmp aam loope pop negl mov loop push loopne lods adc movsl jmp mov imul ficom add cmp sub inc adc or test imul lods mov and pop mov xor sti cmp mov bound push dec (bad) rol fbld mov (bad) lret call inc add pop mov sbb lret test sub sbb jns xchg loope cmpl (bad) pop or cmp sbb mov jns fadd push or adc mov (bad) xor daa mov mov mov and and push xchg dec and andl add inc or inc xchg inc rol add je push xchg aam cmpsl in cmpsb mov (bad) sahf iret loopne pop in xor ss dec (bad) xor in insl lea into (bad) (bad) jmp je sbb (bad) mov ljmp inc orl test push xlat mov fisub (bad) test aas out notl pushf xlat arpl iret add mov cmp fcoml in sti mov inc (bad) aad loopne adc fmuls jge push cmpl nop movsb iret push test adc bound jae inc rolb gs iret mov fadd iret pop add mov rcll fwait cli jge fisubr movsl cltd aam icebp mov sbb out iret loope loop push sub cmp in sbb (bad) sub add lea fcomps lods (bad) dec pushf js add inc repnz jmp shl out adcl out push xlat inc (bad) ja adc push push andl xchg outsb and mov cwtl iret pop inc cwtl fcomps push adc add cs add sti xchg mov jle or inc iret mov roll add fdivl popf xchg enter and loopne lret fsubrl test xor mov (bad) pop shrl push ljmp sbb mov pop aaa add cld iret scas xchg clc and xor and adc cmp sbb loope ret xchg mov and sub shlb adc fiadd push in cmp ret mov inc incl test movsb pop lret out sub mov push loope fdivrs (bad) popa xchg addl cwtl push iret icebp sub rclb in mov int3 adc shl adc icebp loopne jl mov pop leave cs inc ret xor sbb enter cmp mov lret enter mov mov (bad) iret mov mov bnd icebp iret sub mov insl aas aam adc int3 jbe sahf popf aam mov ror data16 jg add test xor inc out inc dec dec (bad) icebp and add mov gs inc loopne imul push fadd scas xchg cli std and movsl dec cwtl aad int inc adc gs push movsb xor scas inc mov or sub mov shl leave pop push popa sbb pop rorb shll mov pushf (bad) fsts jbe loope mov andl ljmp push mov cmpsl mov push jne mov pop imul sbb ret push loope and push xchg mov jge pop push inc pop add and sbbl mov mov test and lea xchg jl adcl mov xor addl jns mov repz add incb xor push jbe mov aaa fmull test sbb jne stos mov xsavec add into ss roll mov insl sti mov iret inc aaa ror cmp mov les xor lods mov stos addl (bad) cmp test jno aam push push xorl mov (bad) mov mov mov add nop std sbbl popa out pop mov iret pop cwtl jnp (bad) mov cwtl mov pop adc ret rorb fsubs adc stc outsb jo push adc xor out icebp cmp dec nop jge ror and int3 test add arpl dec out decl dec sub mov xchg or std or jle test sub dec loopne (bad) mov jo inc jae jecxz iret adc inc mov out pop jne pop fadds jne push add adc enter fs xor loop xor insl mov loope inc xor test out shlb push dec pushf sub shrl and sbb adc cmpsl xor movsb cmp lods inc rcrl lea mov mov test je pop adc loopne and xchg test adc mov imul ret sbb push pusha div jl cmp lods xor aad popa loope (bad) cmpsb mov mov loop lret or and sbb push (bad) cmpsl lock cli scas mov xchg mov sub dec pop or fwait mov les add sbb pop cwtl je into cltd loop movsb mov ja inc mov adc sub xchg inc adc scas roll aaa add cmp inc xor clc lds mov push and rorb outsl and movsb jo icebp dec popa (bad) pop inc cmp lret in icebp pop (bad) fbld (bad) or imul out mov leave aad out cmp lret mov sbb cmpsl lds xchg out iret ljmp sub mov xor sti mov (bad) mov xchg fist sub mov inc mov mov xor repz leavew push inc outsb enter mov add je mov stos mov mov xchg inc mov movsl sbb loopne out (bad) in mov (bad) push (bad) out ret cmp add inc fisubl lret (bad) jg ljmp (bad) mov xchg jbe pop mov aas nop pop xor xor int and cmp jl cli and les mov add pop fdivrs fdivrl les add push add clc test ret inc dec test pop and dec outsb (bad) jno iret outsl lods mov nop gs in pop push jl js push xor ret mov push dec inc test sti sti xor test jge ja movsb (bad) xor inc mov fmuls clc aam out mov test mov adc adc jecxz fisubrl push sarl test add fsubl clc adc push (bad) loopne cmpsl addl adc ret mov inc int3 sbb xor out sbb lret test addb aas mov (bad) or mov int3 out popa dec enter ret sahf ret ss push mov adc xor lret push lret test fwait in mov test movsb test jmp mov test cmp ficomp add out lahf fsts repz mov lds jns jne clc jae movsb mov push inc mov (bad) hlt movsb add (bad) icebp pop int3 adc leave out push (bad) cmp push scas ljmp dec ficompl data16 dec pop dec sub add mov arpl or iret (bad) neg push add sbb or movsb cmc and pop (bad) pop rorl shrb orl mov pop movsb mov mov mov dec hlt repz mov inc loopne mov jmp (bad) pop jle ret fistpl pop mov sbb outsb cs leave out mov loope lret xor or lods (bad) fidivrl add int3 push sub sbb movl xorl mov dec jecxz les and dec unpckhps or pop stc inc fs inc adc aam sub popf daa cmpl lcall xchg xchg iret fistp sub jge fdecstp pop cmpsl push cmpsl jg mov aam insb push sub jno js lock sbb add cli (bad) mov inc jg or sbbb add mov orb lods cmp mov popa pop jecxz inc mov andb xchg sbb sbbb fwait (bad) ds or (bad) cmp dec mov lock jmp adc add add or testb pop andb aas pop mov in aad sub cwtl les cmpsl mov daa movsl jp jmp fdiv add (bad) lea cmp mov rorl scas sbb add aas es xchg mov iret push (bad) cwtl mov jo xchg cwtl insl xchg and fcoms mov mov sbbb ret xchg add jge or or pop (bad) out nop das loopne (bad) xor adc push inc mov dec mov add jb cmp (bad) pop mov mov test int3 xchg sbb outsb cli movsl sbb mov rep xchg and fcmovu sub adc sbb sub imul adc scas xor das lods add test cli addb fidivrl cmpl add sar mov jns iret adc or inc sbb or std incl mov pop (bad) xchg push aaa lds test add in out cli xlat mov dec jg sbb pop popf es mov ljmp mov cwtl lods outsb (bad) push fcompl or popa xchg adc pop icebp sti aad sub or pop mov sub push xor mov sub stc pushf jp lret std xchg cmp sbbb lea test jno and test or pop xchg orb inc sbb outsl out cmp aad ss scas push test xchg cmp sahf scas (bad) in xchg aam cmp inc nop cmc xchg pop dec test adc aad add adc mov push fldl xchg cmp inc mov or pop popa cmp mov (bad) fnstenv int sbbb and ret add ljmp movsl xchg mov outsb pop jmp xchg (bad) popf shll roll frstor sbb mov push add test xchg jnp mov sbb sbb cmp cmp pushf es int gs fadd xchg loopne leave mov sub pop rcrl jbe,pt outsb or mov iret mov mov lock push or mov test cld dec ret inc jbe xchg movsl xchg cmp js fsubl sbb or sub pop hlt les jl jnp inc gs test jp cltd jb in inc jo push jmp jle inc test iret cmp enter (bad) cli inc pop out cli mov or pop shr (bad) fnstenv and mov pop enter stos rclb mov imul jnp movsb (bad) pop mov mov cmp cmp pushf in cmpsb dec in movsl pop bound arpl jecxz xor mov mov xchg scas stc test sub push dec cmp (bad) sub add jecxz sub rcll rolb and xchg inc sahf push rol rcr rclb xlat inc and fstl jge test ds fildl cld call add jge in mov repnz push orb add mov adc jb das pop jns dec cwtl adcb pushf push pop ret xchg xor out fisub in dec mov and fidivr (bad) xchg repnz test (bad) sub mov and cli imul mov pop pop add imul pop loop mov adc mov fadd mov loopne ja mov mov mov (bad) in jl sarb xor mov outsb sub add loopne dec and mov pop adc aam jnp fadd mov fcomp lods push mov mov ja das add sub lock pop lods sbb cwtl (bad) xchg (bad) push outsb outsl mov push clc sbb test mov call (bad) cli movsb jl je mov mov adc fstpt loop pop and cmpsl cmpb add xor js adc xchg cmp cmp je mov out cmpsb jp lahf xchg mov dec mov (bad) nop loop adc pusha pushf (bad) fstps pop cld lock test sbb data16 xchg mov dec inc dec test gs cltd add in or (bad) in bound std jge out mov cmp adc push inc scas cwtl sbb dec rorl fwait cmpsl fiaddl sti cld mov sub (bad) pop cltd and mov addr16 or cmp mov mov mov lret push stos pop (bad) outsb adcb popf push or dec mov jp sub fwait test jo push push xor jg fstps mov add jnp andb cmp in inc andb cltd enter sbb dec test subb adc das mov andb aas push ret out add gs push mov (bad) (bad) lmsw or adc and nop jbe or aas cmpsb jge sub sbb inc sbb loope or push pop pop test fsubl movsl push movsb xlat cli xor or fmull add (bad) dec dec add mov xchg iret sbb mov loop xchg iret or stc jns loop fstl adc subl or das xchg cmpsl jbe loope cwtl inc mov (bad) in ja dec or fmuls mov clc pushf sbb mov jb xchg cwtl pop mov (bad) push inc scas aad iret clc lods mov xor ret adc hlt test les (bad) test jmp inc push iret mov add repnz adc fwait dec pop xor cmp mov imul inc cmp push lret xchg pop mov and lods dec pop sub int3 or lods leave xor xchg push add lcall push rorb or out xorb push push mov sbb jae test outsb mov sahf je add into lret das or jb add orb mov mov adc ljmp movsb leave inc rorl loop sbb out push negb dec popa mov pop cmp mov out mov push xchg or popa test mov or sbb cmpsl cmpl xor add andb loop fdivl xor jb test cmp mov js std clc or loopne test leave push andb sub add ja popf cwtl fstpt pop push rol mov mov mov or push rcrl subb xchg add inc pop clc aaa add xor and sub xorb jp pop movsb pusha mov scas movsb mov andl xchg lret rolb xor sahf fstps xlat pslld sub aad push cmp mov ret movsb popa into lahf xchg sti add dec in xor sbb xchg dec ror mov sub mov fnstcw rclb sub mov xchg inc shlb add mov (bad) icebp movl aad cmpsl pop lret jnp iret in dec push cli and ret insl jl xor adc xchg mov xor lea (bad) dec test shrl in orb jp pop iret addr16 push ljmp das and mov (bad) (bad) mov xor scas pop adc sbb adc ja jae dec and jns adc call xor dec push jge and jns mov add add pop xor mov xor iret data16 mov mov lds nop push cmp mov cwtl adc nop lods loopne (bad) pop stc mov mov movb sub cmp inc xorb sub sub aas (bad) fisubl icebp nop jle sbb jb inc adcb mov ret mov push xchg mov inc mov insl lods and sub xlat and pop xor cs add (bad) mov cwtl mov outsb adc fs das pop adc add iret cld and call cld loope loope push popa pushf mov int3 sarb ret movsl xor faddl xor cld mov stos test cmpl faddp (bad) xor movsb inc scas pop or pop or mov mov adc dec pop int3 mov in add adc mov xor and adc in test fcoms dec insl sbb mov mov jno mov mov enter iret inc (bad) hlt fsts mov push test in lret cmp and jbe dec dec jge adc mov call mov cltd mov stc enter sbb jbe (bad) mov add addr16 xchg inc cwtl mov sub clc jmp cmp push adc jg push or in std popf and sahf cmp in mov fcomps in pop inc jb pop adc insl mov loopne mov add lret mov sbb cmp rcr pop jns fs inc and nop inc mov dec ds jb (bad) mov stos jecxz xor repnz pop mov adc mov out gs mov stos cmpsb dec arpl inc pop inc xchg adc nop pop out cld daa push addb mov mov inc sub movsb pop push pusha test sbb fisubr fadds ret pop mov inc or jmp jl (bad) lret call mov jno sbb xchg loope xchg jns test (bad) xlat roll sbb dec fcomp jb movsb lcall xchg jl sub js cmp mov inc andb arpl push mov push leave mov into enter or (bad) leave shrl cwtl xchg lret fsubrl loop test sbb ret test popa bound xor (bad) cli jno call andb sbb loope mov mov cmp cmp mov (bad) mov push pop out mov dec jmp adc aaa movsb lds and cmp adc std add cmpsb fsubl imul push sbb sub sub addr16 test fidivr mov fldenv adc pop test vmread push scas roll add push stc mov and loop mov mov je cmp call mov nop lcall add jno sbb clc sbb mov inc andb xor inc push mull mov cmp loope in jo andb repz add cwtl test test lods js cmp cld sbb mov xor or cmpsl loop inc xor mov popa mov mov flds add cmp xchg and imulb push ret lret (bad) sahf xchg xlat mov mov mov sbb out pop or cmp sbb xchg movsl arpl mov dec mov lock test jno arpl cwtl push dec mov adc icebp or insb pushf pop jnp test mov cmp test mov (bad) aam sti xor ret cli (bad) jp mov pop add mov (bad) test test cmp nop push xor mov leave jp sahf aas push loop inc lds adc pop xor push or mov sub and xor push push dec (bad) sub cli push sub movsb (bad) out sub aas (bad) test rcrl mov dec iret fdivrp enter (bad) push imul test pusha insl loope inc lock and mov mov jbe xchg out xchg lret sarb adc insl add adcl mov fadds jns nop dec add xchg loopne (bad) pop mov dec xor js dec shrl or and and mov and fcoms mov push add mov cmp pop in sbbl ret and test in or jecxz inc inc adc inc ret leave mov push jbe daa xchg mov fadds pop je mov sbb shlb sub add ja cs lods xchg jecxz inc inc fsubl add fldl mov mov nop repnz or cltd roll rorb popf test pop xchg xor mov pop addl mov mov add xchg add pop sbb rorl inc scas test pop add xchg xor cmpsb inc mov xchg add sahf lods mov or in (bad) and inc es add movsb ret jmp add mov int popa lea ret (bad) jecxz enter test or in test add inc inc into and (bad) js popa jb cmpsl mov inc addr16 test and (bad) pop mov loopne sub inc sub adc add and add popa cld add push movsl rolb xchg push xchg outsl sub rcrb inc cmp sbb xchg loope mulb add int3 cmpsb and add or mov or in jp jne sahf popa (bad) and sub hlt adc pop out mov xor or (bad) out cmp gs movsl push pusha mov pushf pop fistp xor cmp or inc push pop iret add out movsb cmc jnp push adc cmpsl or add cmpb ret jnp movsb negb flds fucomi sbb in jne movsb xlat test clc add cmp and aaa (bad) pushf lds notb mov adcb orb jmp cmp rcll add pushf mulb and or jp je add repz pop sbb cld movsl jo xorl jmp jns ss orb lods xchg outsb orb lods loopne movl xchg daa fwait jo cmpb cmpsb and cmp fcomps (bad) cmc push jns sbb sbb (bad) or loop mov (bad) scas mov mov movsl mov enter or sbb cld lahf fimul les cmp pop xchg orb push add push mov gs jbe fisub or cmc inc cmp push (bad) in fildl clc fadd cld inc lahf das push xadd mov mov bound mov mov add cmp xchg pop mov adc lock xchg cmp testl sets mov sub fst pop fmuls mov out or cltd sahf pop lahf data16 mov nop mov sub lods aam xchg insl (bad) outsl jo xchg jecxz ficom mov bound movsl scas adc insb popl les ljmp push movsb scas mov mov cmp xor out fs cwtl inc and dec inc or cwtl lahf cs xchg add test popf cwtl sub pushf pop jp test bound pop pop mov ficoml hlt or or cmpsb mov jno jae test inc adcb je xor subb xlat jecxz fs sbb mov and daa cwtl pop cld aad test mov dec lods es pop and cmpsl pusha bound mov mov adc into push sbb lea and insb in adcb lret stc std inc sbbb sti out xchg pop aaa adc test xorl xchg sbb mov lods dec pop pop fistpl sub jg js sbb inc cmpsl dec jns or shrb test cwtl pusha mov imul mov enter cld loope or cmp inc loop add orb mov inc mov in test ds insl test cmp lds in test scas sbb xor sbb adc out mov mov jmp (bad) inc (bad) pushf lods pop lea ds test inc (bad) out mov (bad) (bad) mov xorl imull cmp bound jg enter sbb or cltd icebp fs fiadd clc (bad) mov mov inc outsb (bad) int xchg outsl roll push or movups adc enter cltd pusha cli (bad) jo jp xor push out adc inc mov jl jno push and je cmpsl jle inc inc cmpb sahf jge push cwtl cmp (bad) or lahf pop cmpb int das xor xchg data16 add mov jne test roll cmp jb les xchg xchg enter mov popa sbb out in shrb mov addr16 je mov fnop and mov int3 push sbb imul popa xor jno addl leave push test jno adc jns inc xchg stc jl nop sti sbb je cmp pushfw sbb clc inc xchg cmp sub push scas cmp (bad) cmp push and icebp xchg sbb inc jae adc fisubr sub bound icebp pop jb (bad) divl cmpb adc inc mov mov test sub push (bad) push fild loop xlat and or xchg orb adc adc mov inc sbb adc test sahf pop test inc rolb pop lret jbe rcll repz ss or test sub adc ret cmpb fldt ret jp icebp mov cmp pcmpgtd mov jge repz outsb sub push ss add (bad) mov sbb cmpsb adc xchg dec ficoml lods and scas test cmp cmp cli jmp test rolb shrl mov std inc mov movsb inc (bad) push add stc and fldl popa and fsubs (bad) test sub mov adc int in push fs add test pop xor and or stos loopne mov enter jbe fsubs (bad) cmpsb (bad) adc add push mov clc mov aas nop pop ret push push es jnp into aas adc pop mov pop outsb sbb dec jnp push (bad) cmp movsb test jae mov pop imul (bad) jbe int3 call out cwtl ret pop mov push (bad) sub fxch sbb adc xchg loope in cmc push es cmp xchg imul arpl mov dec mov ds pushf xchg xorl xor jp sarb mov push and addl xorb jnp popa pushf in (bad) (bad) addb loopne jmp push xchg data16 cmp lret adc push out ljmp adcb xor (bad) shll pmaxsw dec cli test iret xchg subb rol insl mov jge xchg cld add mov ljmp xchg mov and call pop scas pop xchg mov jns xchg fwait xchg cli ss imul lret xchg lds lret push sarl fsubr push fldl jmp sbb and ret and fldenv lods mov push mov les push std mov daa adc jmp fdivrs cli mov in sbbb cld sbb push sbb push dec lods test cmp iret jo enter sbb hlt std roll push seta lods xchg inc imul mov lret iret xor or idivl jl sbb (bad) lret pop test pusha push push jb mov sub orb cmp les and imul icebp clc xchg (bad) pop test jmp push out jge cmp into inc sbb adcb andl mov and lea test ret orb mov inc xchg sub pop or je fidiv pop push and push fstpl sbb or or fs scas add out mov cmp jge addr16 push mov mov cld shrl cwtl (bad) iret cmp xor inc in push subb lret ficoml xor int inc xorb jae orb dec adc cwtl xchg jo push aaa inc pop add xchg pop push loop fwait or icebp (bad) je ror mov and lret mov test imulb addl aaa les nop gs push mov or dec loop inc mov xor jle pusha cmpb imul mov imul add xor or arpl or mov push test jne add outsb fstpl rolb or leave cmpsl mov js inc mov adcb pop adc lock and orl dec cmp enter add inc push jb nop fsubrl cmpl add cmp and (bad) repnz (bad) div ss test ret divl inc js cmp rep sub enter ret outsl cmpsl bound add outsl int addr16 xchg push sbb sbb mov out test jl pop insb jl mov jmp push iret jb addl mov loopne je mov lahf xchg nop or fstpl orl pusha add inc jno and xorb ret push push push dec sahf jge xchg inc xchg inc sbb xchg cmp insl test outsb cwtl cltd andl (bad) dec xchg sbb loopne icebp add push mov test xchg mov jl or addr16 and (bad) iret into cli mov add jno loop xchg adc lods cmpb xor xchg fsubs es mov and or mov inc adc jbe stos xor scas jmp adc addr16 test cmp cmpsl push in fcomps mov fdivs imul sub add in sbbb push mov dec in sbbb jle pop cwtl mov ljmp loop leave mov fild andb cmp pop mov stos mov sub adc imul mov add daa ljmp icebp dec push (bad) jo call add mov cltd sub cmp sub lods cmp fs inc ret push pop cmp xlat cmpsl inc lock mov xchg xorb xorl dec sub incl mov out xchg mov hlt add xor mov stos (bad) fnsave inc jo push iret repz mov in jb cmp loopew (bad) into ljmp sti jnp xchg xor mov orl xchg loope lret ret sub addr16 fistp fiaddl add mov jb call xchg xchg add mov mov popa call test lret outsb mov adc push stos rorl in sub orl mov stos ja loopne cmpl test sarb pusha cmp mov ja nop addr16 les sahf sbb push fidiv or das (bad) cwtl and roll scas dec push pop mov sbb fldenv push mov sub xchg xor lcall dec sbb insb cs xchg sbb (bad) clc add mov xor (bad) jge xchg int3 xor test sbb jno test dec mov sbb and (bad) xor shl pop popf cwtl inc sbbb repz jle pop lret add xlat sub je push mov mov leave dec mov orl sbb je lods push pop and push sti (bad) mov mov xlat pop imul jo push testb cli cld jg roll pop in mov fildl out cmpsl sbb pop mov lahf clc les lods add pop test loop mov enter jb ds lods mov push and imul shll xorl xor cmp arpl push xchg imul jle push fildl stc cmp push lcall push test aad xchg orb rcr sub test mov loop and test adc jle (bad) rclb xchg gs xor pop arpl les jns dec test push pusha inc jo adc fimull sub and sbb test dec cltd add outsl push sub adc cmp icebp test imul xorb pop cmp dec ss push inc mov mov icebp push jp xor xchg sub incb mov nop hlt outsl xchg cltd mov fwait orl add mov sbb push cmc pusha js cmpb popf int3 xor mov out jp xor sbbb stos popa jns mov xchg subb jp mov int das xor aam mov jl dec mov mov inc push stos out adc or add into les mov daa dec lods add jne push push es testb jmp je pop pushf data16 mov dec imul xchg cld lea insb inc xchg dec fs xchg (bad) mov sbb add lods sub int3 iret xchg push sbb jmp insl (bad) jae xchg ss movsl stos lahf add adc adc push sub into aaa and pushf pop lock gs add fcmovnu movsb and cmp cmp cmp dec mov je mov sti test negb leave pop mov cmp (bad) subb shll in mov daa add push hlt or sbb cmpl jecxz addb pop cmpsl xchg and es ficom add test (bad) rorb add shl mov test fildll (bad) mov cmp test inc xchg push dec xchg lea cmpsl ret stos xor push in cmp imul xor pop push add ret xor sbb pop xorl mov nop and sarb xchg pop push daa loop mov (bad) lock out fdivs cmp adc cwtl dec (bad) push or ret or ret pop inc rcrb mov lds jp push test fstps jl adc in inc cmp inc test inc adc (bad) push cmp std jmp push test sub repnz fld popf and clc sbb inc xor enter aas lods cmp xchg loop (bad) adc inc andl jno cmp test dec roll (bad) sbb les add jmp in xor jle lods mov gs dec dec mov push fldenv sub add xchg push adc push shr xchg jae mov std lods push fiadd dec pop mov in push inc popa sub adcl mov push mov fcmovb in ret xor std inc xchg daa jae popf or fcomps xchg fcoml pop movsl movsb test xchg je cmpsb nop pop les add mov and (bad) idivb jnp popf pusha sub mov nop lea in std std andb jle fnop rolb clc mov cli (bad) ffreep dec cmpsl adc subl flds inc gs lret fcomps shlb ret gs push loope inc mov mov insb into sub or xor add xchg adc add nop mov stos cmp mov fiadd insb lea aas pushf mov nop ret lahf jb push iret add xor cmpl hlt imul xor xchg sarb cmpsb xchg xchg jae mov sbb cli loopne shlb jge xor sbb mov inc es add cmp and cmpsl xchg push in fxch shrb int3 lea fsubs mov out bound enter add cwtl (bad) or iret inc pop mov jbe and (bad) push add arpl scas es sbb aad cli mulb jno xchg imul (bad) mov sub loopne sub jg ret jmp data16 movl scas stos lds xlat add movsl out (bad) test adc fcoml ret mov (bad) bound ret cs add push mov dec jmp jne mov das test add and imul push and call out mov movsl pop dec cmp jae lea adc xchg sub pop cwtl rcrb por aam hlt jp pop aad dec loopne adc sub add addl lds dec shrb jecxz sub sub sbb int je sbb mov pop out or (bad) add leave dec pop test xor inc or iret or cli jle sub adc mov lods xchg cmpsb inc cs outsb adcl cmp lods adc ficoml lret add rolb je inc jecxz sbb lret (bad) dec (bad) jnp push mov sub push jb ljmp xchg cmc cmc adc dec xor mov sub pop das adc fcmovb adc cmp in mov aad mov cmp andb scas iret js adc mov cltd shll xchg add cld inc aaa and mov mov push sbb ret push adc and mov lret inc rcl gs push stos call jl xor (bad) mov test test jmp (bad) xor xor sarl ret rcll test push iret dec lods enter (bad) in mov inc push add test mov jbe adc jb (bad) daa mov aam adc into call enter cmp mov xchg dec xor jl roll jp (bad) cmp xchg cmp inc xlat pop nop insl xchg mov and and pop cwtl pop push push test sahf pop movsb add pop lds push and loopne (bad) fiaddl (bad) clc push mov jg loopne decb adcl rorl pop xchg mov push sbb jne iret push loopne nopl inc sbb add inc push pop les xor in cmp xlat (bad) xor iret mov and loop pop inc ret adc pop jl mov pop test imul push je out xchg mov inc dec mov iret adc push (bad) mov sub jae mov std xor out faddl xor shlb int3 inc js mov (bad) (bad) mov pop les jb add data16 imul mov hlt aam jno lock cltd pslld and in into cmp repnz push aas push dec stc mov add inc sub lds and ret popa cmpl mov scas shrb mov inc out cmp cmp push inc in mov std push inc mov call idiv (bad) mov aas add jbe ljmp mov pop mov pop adc aam test sarb jns stos sbb sub xchg arpl add xor mov mov or test in enter and cmp xchg push test xchg int3 insl dec movsb iret mov fbld adc int3 xor adc int3 and setae and adc and stos imul icebp imul test sub lods rcl pop xor daa cmp in jne,pn bswap xchg pop out (bad) cld lds jno iret inc addl ret inc into icebp mov or and fcmovnbe adc sarb sbb jno xchg push fmuls xchg mov or fcmovu jne mov xor lock cmp ret and iret ret mov pop jbe push add sbb sub scas test adc xor sub pushf insb rorb rol and in ret cmp popa lock cld pusha inc lds mov sub or sub jmp xchg or xchg push adc pop jecxz push arpl inc mov test push jb out xorb sub push clc adcb aaa mov leave and fdivp add out (bad) or pop dec test mov push clc pop cli jbe sahf adc jmp aaa adc andb lock cmp in int push dec mov sbb fdivrs mov int cmpsb dec inc pop loop subb push in adc push mov sub in andb (bad) dec xor sbb into mov lods (bad) push aam cmp pop sbbb push cmp push icebp add push mov sub add add hlt adcb iret cmp jge cmp dec sbb inc inc sahf popa mov mov int3 mov ret imul pushf pop cltd sub rcll (bad) mov add arpl faddl mov xlat add fcoml and fldl inc in mov nop mov rcrb xor fdiv dec outsl pushf movsl cmp xchg je or inc xchg clc push add (bad) cwtl pop lahf sbb lods xchg cmpsb cmp jns pop jnp sub (bad) nop add add sbb jnp jae mov jae push inc mov mov or jp lds (bad) outsb jae (bad) leave mov mov into and pop (bad) rolb sbb add cmp fdivs cli sub jae xor dec add or and jne mov leave jae popf test fsubr mov mov mov test int3 cmpsl jns pop test jbe (bad) mov xchg ror inc xchg fidivl enter or xchg aaa sub loop shll cmp push cmp je sub xchg test clc mov mov cwtl sbb jp (bad) in sub insb int cltd add cmp hlt fsubs fimull iret ljmp mov lcall (bad) outsb test (bad) mov iret int ss lret add pushf repz test test add stc mov push cmc pop cmpb es adc jg test movl cwtl adcb stc add xor dec pop popf push sub or and addb cmp lcall in and (bad) or out into les lret ljmp arpl and inc push addb clc or mov dec (bad) jns push jecxz test pusha js mov cmpsl add repnz inc jno and mov insl cmp jle xorb outsl scas push push fidiv es or mov arpl mov push cmp sbb mov push out sbbl imul fs fmul mov pop sar data16 ret out mov cmp cmp insl adcl in outsb jmp stc jnp cwtl ljmp or mov add mov sbb test mov imul int3 scas clc or ja push mov gs nop (bad) inc pop inc mov xor ja imulb and lea pop rclb jns leave popa lods push inc add test fmull stos mov in (bad) mov fildl or cmp mov ljmp (bad) stos or cltd nop addr16 xchg imull mov sbb aad pop cmpsl imul scas stos dec insb xchg outsl xchg push xorb (bad) mov push add inc fcomps mov push pop adc std add mov dec aad inc mov mov pop cmc xor push xchg (bad) pop clc repz cli mov jo add pop cmpb mov xor mov fildl cs xchg mov leave or popf popa sub lahf repnz jns mov (bad) mov dec cmp and in stos les mov scas xchg fisttpll inc dec popf andb out push and lret adc cmpsb repz xchg enter xor push push lods test fidivr in cwtl aad xor orb pop cld mov pop add sub or push aam jne adc call icebp loope dec xor or cltd and pop pusha push rep clc ret push xchg inc test rcr test xchg mov sub (bad) xchg sahf add push and jge or adc jmp mov in (bad) outsb pop mov pcmpeqw jmp jns add and iret inc and and push dec outsl clc fs (bad) jg cmp jno test xchg enter insb ficompl ds push fcmovnbe sub jne test adc push push mov xlat cmp sub scas sbb sub ret fmul daa js pop ret lock in rolb jne xchg loope mov xor fdivrl in loopne iret or inc ficom sbb or (bad) loopne (bad) dec push nop mov inc xchg mov add mov rorb sahf add aam iret fimul push (bad) shl test pop jno push mul imul sub xchg stos jbe inc add (bad) jno out push gs lret and sub cmpsl nop pop cmp fistp adc aas mov push pop xorl adc cmpl pop jmp in mov mov clc xchg sbb add stos fild jl push into jns iret dec jl cmp cmp jnp out (bad) outsb push fidiv test cwtl pop loop mov into gs rolb (bad) aas (bad) pop mov lea subb leave and pop subb aad xchg test cwtl xor into mov mov fadd xor adc fildl add and ljmp das mov lcall inc pop mov cwtl inc leave and add test jo lcall rcr or inc adc adc outsl rorl aad mov or mov sub jne xchg addb dec int3 js addb adcl icebp lods push mov test or cmpsl mov dec outsb orb xor and subb dec push cwtl pop out xorb inc insb js loopne inc mov jnp or fstps inc dec xor (bad) xchg push cwtl jmp push fwait js adc incb sub subb out sbb sub test bound pop dec shl jbe add imul jge jl mov test in mov rolb dec mov cs xchg jb stos int3 mov mov test int3 popa mov jl add add cmpl mov add fildll test sub mov outsl lret leave jp push jnp fcmove test out mov enter iret cmp xchg in fsubl mov loopne sub (bad) mov push or rcll fwait push add mov or sar mov inc loop or mov or in mov out add (bad) ja xor push out mov mov inc mov push push jae scas push inc mov sbb xor cld stc pushf sbbb add mov imul mov fisubrl test cmpl lahf mov icebp aas sub outsl inc sahf mov orb adcb add sbb add imul pop rcrl test rcrl jl dec stos push or subb adc ja xor lahf and jno shlb ljmp insb mov enter xchg scas ret test movl push xchg (bad) daa fiaddl xchg in push movsl mov xor mov (bad) mov cwtl movsb ret add push mov add add xchg popf xchg (bad) cli inc scas adc adc or lret pop push lret fcoms popl xchg test lret adc std or push loope mov mov (bad) or dec mov loop adc adc cmp fadds into std in jns enter in jnp lods (bad) cltd outsb mov lcall pop ret test (bad) test cli adc jbe add rcll in js xchg mov roll xchg arpl adc and add addr16 adc pop movsb incb pop xchg push lods lock push dec cmp rol xor and xor dec mov out mov jecxz cmp lcall push andb fbstp xor add fwait pusha loopne repz mov mov rolb cld rolb xor jbe mov cmc jo sbb adcb jns adc cmp andl pushf jno dec into fstps lahf int3 (bad) cwtl andb inc mov fnop addb mov push push mov cmp inc lea fldl (bad) fcomps mov dec insl xchg jmp fsubs and mov movsl cmc cli or int3 inc sbb add mov mov mov or mov nop jmp in int3 cmp dec mov sbb andb bound and mov faddp ds fadds aam xchg imul xor or cmpsb subb icebp add rolb daa iret and sarb lahf bound and leave flds cmp inc pop fildl mov adc and adcb mov xor push adcl call (bad) orb clc cmp lcall jo and or push mov orb dec test es je sbb in add fadds iret (bad) xchg mov call repnz jmp (bad) push daa and jl icebp dec test sbb fildl nop sub mov add fwait push sub movsb pop (bad) ljmp mov inc dec lds jo pop sahf je nop fadd cwtl mov mov dec cmpsl imul mov and add out pop (bad) cmp dec mov add (bad) mov mov fist sbb pop mov inc xor movsl loope clc (bad) dec dec lds in add push lea push test inc pop js xlat push (bad) jae out in or xchg or inc les inc mov insb inc push sbb cmpsb enter enter nop fs sub pop pop imul scas pop (bad) add mov loope mov sub int3 xchg movsb and adc pop fdivrl (bad) adc or jb sbb add xor enter mov iret cmpsl mov fdivrl lret add stos inc dec sub mov (bad) sbb mov dec xchg jb mov (bad) xchg fbstp cli in xor dec stc gs out mov mov out fistpll imul pop int3 sub cmp push loop jae out int sub movsl ja adc daa into push movsb je dec push insl push dec rclb movsb stc into mov mov lea mov addl pop xor jae and iret jbe lods sub lcall adc ret test sub cmp adc lods lods shrb ret inc adc lea addr16 lcall mov sub inc int mov add inc orps sqrtps movsb sub (bad) jecxz dec rcll inc test rcl xchg nop iret sbb mov and mov movsb mov (bad) loope lock dec cwtl and call mov jle sbb ret xor iret xchg out dec jmp pop push fsubrs fdivl push push mov xchg (bad) mov mov sbb pop mov mov movb cmc fdiv jl and xlat scas push inc out push repnz in xchg add xchg push push (bad) hlt (bad) popa je orl xchg mov mov jecxz cltd jae add or sbb lds adc mov jmp int3 sbb pop arpl cli sub or es js hlt repz mov mov test lds pop iret mov inc add mov adc enter loopne add fwait sub push mov push mov in mov loopne stos cwtl test mov adc (bad) adc xchg aaa addl adc jns mov mov sahf ljmp in ds rol enter std outsl inc lahf ja sub dec fcmovbe loope (bad) mov jns sub out rolb fidivr jmp mov iret cmp jno mov push sub scas ja sbb inc pushw into and add mov popa insb jbe sbb call (bad) or mov iret mov or jbe popa outsb ds icebp jle out imul js jmp sub xlat pusha jmp aam add gs sbb cmp push sbb mov int3 loopne pop xor pusha aad xor sbb jge in push adc aas flds cli enter and and jbe push xor into movsb addl imul nop xchg xchg clc test das (bad) lock ret imul jns adc sub flds mov jl dec in push add xchg cmpsb jnp test dec adc sti loopne test sti into test or dec je test cmc sub ret xor pop data16 jmp (bad) xchg jp in int rol pop mov les test sbb cmp or test cli icebp mov add hlt xchg cmp iret ret jns xchg ret enter in mov mov and lods and pop test lods xchg sbb movsb lret and inc mov xchg (bad) scas rcll xor (bad) iret mov and dec and add test orl add xchg stos (bad) dec lds popf and push stos adc les into lock mov ret iret lret pop mov push lods ss inc jle inc pop adc ljmp loop daa xchg add pop sub (bad) das dec and lret pop test cmp pop inc enter adc sbb fwait xlat and out adc cmp cmp dec push adc enter xchg rcll push sti or add hlt mov xchg pop stos dec (bad) inc nop mov js popf rcll cmc int fild sbbb leave push inc call out mov and mov bound and ret xor mov xchg cwtl in pushf cmpsl jmp fcompl jl adc cmp addl sbb cmp push adcl mov stos lea or lret cmp mov pushf push inc mov jno mov cmc add sub adcb icebp add jmp aam pop sbbb adc outsl add inc mov adc lds dec or mov add jle or pop pop mov cmc shrl test out xchg or stc subl inc mov mov ds addr16 cltd andb mov or insb pop lea incl test fiadd push cmpsb sbb mov inc push sbb adc sbb sub (bad) xchg mov mov xorl shll jle add roll ficomp cmp xor int3 stos pop mov adc dec lgdtl jp jl aad mull out scas clc (bad) fmuls addr16 or int3 loope jge cmpsb aas pusha push sti out mov mov xor mov xchg arpl xor out rolb (bad) mov loop mov mov mov sbb fcomps dec cwtl andl add mov cmpsb rol push pop int3 lahf mov adc inc jle test daa sub insl add jge (bad) cmp pushf and dec dec mov movsl sub sti inc and loopne fwait cltd test adc xor incl xchg sub mov jbe iret jmp mov mov inc jl add push stc test (bad) cmc test and arpl jnp sub jg lret mov xor sti sbb popf mov add iret enter or inc inc sub pop inc add bound sub push push loop iret shr (bad) jo xor shl dec and fbld and insb pop in lods dec imul xor wrmsr inc das iret push test mov push mov and mov incb push mov out jb push test ret das lret cmp enter fildl gs fwait (bad) push out push stc push sbb les adc dec xorl mov push and sbbb mov adcb (bad) repnz insb adcb movb dec enter push roll decb stc adcb cmpl ret jecxz stos cmpb sub add pop movsl stos xchg mov shl mov fildl xchg jo cmp sbbb push push xor and fldl mov mov lods add fcoms push jb xorb movsb sub xorb jno or lea add push jp shl mov sbb push mov add jne and daa lret xchg orb mov fbstp or mov hlt iret ljmp jecxz pop mov fnstcw cwtl dec mov aaa cmc inc test mov pop pop (bad) repz adcb lods dec adcb jmp pop xchg push in add iret fwait pop dec mov xchg insl sub xor sbb sbb mov jb scas xchg mov inc dec mov pop ficoml out call pop mov cmp cmp cld (bad) pusha jmp xor scas addr16 mov (bad) dec mov pop ret or cs cmp lods cmpsl cltd pop test lods sub mov fisubl xchg ret fmuls outsl adc or test mov cmp hlt cmpsl sahf pop mov xchg gs mov sub adc pop pop daa mov mov fcompl add inc push jbe cmp in aas int3 pop fstps mov repnz mov mov and mov out inc mov inc test mov inc lea dec mov test sub sbb test pop add sbb jnp jle cld icebp xchg dec test dec movl mov push subb dec aam (bad) dec mov xchg popf outsb push pop std enter test lds loopne mov push int bound orb in add divl (bad) outsb cmpl mov dec js add fucom stos subb call orb mov pop sbb jge push mov bound mov cli add inc outsb mov roll xor mov scas clc add adc fisubl sbb clc push mov pop out subb mov mov inc sbb mov dec imul jp hlt leave addl sub push push out jle and sarl test lret popa ficoml in orb jns jmp lret push nop dec mov divb insb test xchg sbb adc out sbb push fs xorl je add lock xor hlt or cmp outsb and push pop cs into mov cmpsl pop mov pop pop scas jo xchg add and ljmp jmp test mov pop mov dec push pop sub cwtl mov int3 in adc push leave xor lods and (bad) popa jno test push mov mov inc pop mov add es loop push mov outsb sub (bad) ret adc inc int3 das dec (bad) jle jl adc inc fs js pusha jae pop pop and andb dec mov fwait inc mov scas push mov or adcb lods push inc push shlb xchg inc mov fldt inc or push or inc loopne (bad) mov cwtl jge jns insb xchg push pop rorl repnz stos jo push fwait mov jl das mov popf push pop cmc or fisttpll aas lds int push push stos xor cmp mov arpl loopne insl test cmpb mov adc dec jb pusha (bad) xor andb mov dec (bad) jp cmpb dec idivb jno sub loope out inc addb xor lods jle jno or dec mov pop loop outsb cmp loope sbb pop popl mov lods xchg stos push sbb mov xor scas push sub mov je movsl (bad) jg insb add mov mov popf stos movsb jb orb es xchg lea add xchg sti (bad) mov xchg cmp ret cmp subb and or nop sbb insl xchg out xorl mov add rcll (bad) xorb sbb nop push lret aam lcall (bad) push mov adc and (bad) fnstenv push cmp cmc enter push ficomp insl incl cmpb lds int stos jge add test and fdivrs xor outsl mull subb mov add lea inc loopne adc add mov int je and or test cmc mov mov and fimul pop cmpsl cmp lret mov invd push faddl cltd shrl add fdiv push test repnz les idivl or addb xor ret sbb dec push mov jecxz out push pop mov scas cmp lock pop pop (bad) mov movsb out sbb and mov mov aad mov sub in das mov add imul mov (bad) test pop cmp xchg lcall je mov cmc push scas or ljmp adc aaa aaa xchg dec lods movsl push xor in push jae and call stos pop cwtl sbb les nop mov in fsub adc jp test dec scas clc dec pop mov test jns and mov jecxz mov mov jge out aam outsl xchg inc mov jmp mov out or mov mov mov lea enter inc and mov mov out xor add mov test inc in test (bad) xchg or test out mov in fucom aad cli dec xchg daa add and mov into hlt iret scas div xchg stos inc inc les (bad) in lods loope movsl pusha cmp inc sarb inc add adc enter nop xor fidivrl int (bad) cmp add xchg sbb pop cmp gs xor test mov fdivrs fiadd je aad es jmp int3 cmp mov or arpl push sar xor inc jno faddl mov xor cmpb cwtl mov jl cli mov xchg sahf jae mov push cmp int3 jp out push xchg stos dec adc lods jb push inc sbb inc pop or xlat mov addl cmp gs sbbb outsl orl xchg enter mov pop jg xchg cmp lds out jmp cmp xchg mov adc xorb xor dec cmp cmp imul push sbb insl mov (bad) xchg push mov jno jge xor sub adc es push mov cmpsl xor xchg sbb and in add imul pop cmpsl test nop test cmp test divb pop xor jge es mov sbb fs fwait data16 jle xor inc das push scas push cmc cmp mov ja adc xor stos push fadds in pushf mov das test and pop xor cs mov push lea jb mov adc fstpl inc dec mov mov orb and addr16 jns nop dec (bad) and in jmp dec les lods imul rol inc jmp mov jns pushf data16 andb cmp pop std jne fldl inc addl xor imul cmp flds daa (bad) test lds cmpb es enter mov test popl sub dec jno aas cs inc test (bad) sbb loope mov and cs pextrw xchg test inc rcl hlt (bad) aaa stc xor (bad) jmp clc addb jns iret (bad) and addb cmp sbb scas xchg (bad) adc repz push sbb stos jbe sbb lahf into dec out sbb insb rorb mov icebp adc lret push test (bad) mov mov loope pop sbb xchg popa cmp lret popa cwtl inc mov sahf cld sbb fwait dec mov std test je fnop sub add nop cmp mov xor stos lock mov jb inc nop pusha xor and dec test cmc push addb (bad) xor jo movsl pop fdivs (bad) test andb repz pop pop (bad) mov sbbb pop cmc mov and push sti xor dec orb ds movsb mov dec stos add in lock test or (bad) es adcb rcll xchg icebp dec or and les test push sbb mov xchg movsb jle sbb dec sbbb and dec dec mov sub popa cltd ffreep cmpsb inc scas adc sub add fdivs cmpb sbbl into mov xchg addl pop pop mov cmpb movsb add push orb nop psubusb rcrl jecxz je adc aad aas inc sub fstps dec enter test loopne ds pop repnz inc push or bound dec stc sti push mov xchg ret subb jle or ret xor cmp sbb subl or or or test stos and inc push fdivl xchg idivb lahf jg call imul (bad) (bad) pop subb jae ja xchg rcr xor out sbbb push fild push scas fimul sbbb dec or pushf xchg xorb add jle inc xchg fldcw mov mov xchg sbb testl push lods or sub mov pop and stc aaa shll mov mov or xchg xor orl mov and cli sti test in mov mov orb cli sbb cmp shlb out or mov jno dec (bad) mov dec test push mov addb and icebp xchg lahf mov mov outsl sbb cwtl int3 xor lds or test dec fistl inc mov xchg pop scas shll test xor fimull xchg rorl cmp in pop xchg adc sbb xchg (bad) fwait and mov inc sbb lcall dec pop rcr (bad) aam subb lock mov mov lret push push push adcl fisub mov pop mov jg sub xor int3 cwtl mov xchg add lods orb int insl nop lret pop xor int xor sub push loope out lahf sbbb cwtl (bad) jo or sbbb je jge cwtl sbb mov mov sub inc and icebp out cltd test call mov loopne loope push mov sub sub add cltd outsl push out insb imul roll loope xchg andb xor cmp aaa ret xor arpl mov int and adc mov ljmp hlt jge push jns push stos in lret mov into push add or dec xorb popf mov ljmp nop ja push scas clc fwait xchg pop sahf cmp les idivl jg sub pop daa add nop cli mov call (bad) pop in jno out ss fild mov inc dec mov push pusha test jmp inc jl and or push cmp sbbb pop mov xchg icebp pop repnz or xchg pop ret subb jbe movsl or shlb dec mov clc jne scas imul xor divb jge jb and enter cmpsl daa sub addr16 cmpb jle sub inc jmp outsb xchg add js xchg mov roll pop jns in sub cmp int xchg inc (bad) lock or mov cmpsl bound and imul sub into ss xchg sbb xor jnp mov mov and lds jmp insl and fnstenv popa mov dec rorl std (bad) cmp scas xorl or inc mov mov popa sbb enter jo cwtl xchg or push sbb movsl pusha loopne jae lock push clc cmp add stos xchg push mov jno imul push lret mov dec dec jp mov xor arpl xor sub mov int mov mov jecxz fcompl test outsl rol cwtl pop xchg push sub pop lahf adc and int (bad) sbb repz adc test inc inc mov cmc or cmp int3 xchg leave pop jno cmp and ret or inc andb cmp lods sbb lock es sub lahf enter mov dec push clc sub xchg jne jo hlt andb mov (bad) ret fmuls lret sub ja or and mov mov mov fisttpl fisubl into xchg mov in pop fmull movb cmpsl test xchg roll dec xor push in add arpl aaa enter (bad) scas or pop icebp test sub enter into cwtl xchg mov pop test push fcoml sbb jle sbbb mov or daa mov cmp movsl inc lods adc das push push mov orb mov cmpsb pop jmp pop sbbb sub mov test jecxz scas xchg insl ja cmp (bad) (bad) lds sti in inc rcrl mov push jns jb sub das xlat test mov (bad) decb jo mov ret mov mov xor rolb mov sub fcoml incl inc cli fld jb xchg lods mov orb dec sub xor cwtl push inc or sbb out xor jno fnstsw pop add dec call jmp (bad) adc cwtl fs ss xor dec xor dec inc push loopne adc aad testl pushf mov movsb inc bound icebp aas mov xchg gs adc mov jle adc xor xchg push (bad) sbbb addr16 xor subb iret (bad) mov adc push mov jb push in (bad) sub (bad) or adc xor scas insl push arpl dec dec mov or fs out sbb fadds jp dec pop movsb or orb sbb subb cmp pusha xlat lock cld or andb mov jno push xorb cs jb push xchg stc sahf xor sbbl in nop add sbb lahf mov mov inc fildl or jnp insb hlt or mov test in push push movsl adcb push jnp push or inc jo pop cli push aam push fldl gs add xor xlat stos adc xor mov push gs and jns jge jle shr xchg cltd sbb addb (bad) lret cs mov sbb add ret cmpb pop push push cmp push loopne sub lock icebp ficompl mov popa in or or adc enter mov mov inc fbld push fisttp jl inc pop cmpsl fiaddl into fldcw push fucomp inc mov int3 repnz das rolb push loopne cmp jo ret cmp inc int3 cli xchg addl jns shl popa shrb int3 mov pop cmpsb das cmp and stc (bad) jns hlt mov fcmovb aam mov (bad) (bad) and push lock (bad) ds repz and add scas mov cld outsl xlat imul incl orb sub and (bad) sub clc xor add xor mov dec mov sub mov jge adc push (bad) subb and aad or add jae (bad) xchg cmpsb dec mov mov add cmp (bad) sahf es jns pop mov add les cmp in xor repnz cmpsb dec stos dec pop std stc or or ret sub jl test add jmp mov jle pusha mov mov dec push mov jp mov faddl mov int3 bound pusha adc mov mov xchg jmp push or and (bad) fcom clc test push push inc jae mov hlt add orb add or in cmpb enter cmc subb add mov dec fistpl push mov sub adcl push fcompl pop stos fldenv cmpsl jo lret pop nop stos addb and fnop add adc pop subb fmull xchg mov stc adc test xorl push pop ret subb das xor push mov mov popa jmp scas dec adc mov das push jecxz out and aad add incb subb jle xchg mov mov stos push fnstcw js or mov jmp and inc inc mov scas push stos andl mov add jne popl mov nop cmpsl pop mov test push test lods dec inc stc mov inc imul mov iret push fisubrl mov test nop add roll arpl cmp xor faddl (bad) ljmp sbb dec stos int sub sub cli jne popf push lods cmp int3 sti je test scas aad ret test bound xor loope fidivrl (bad) sub into sub sbb (bad) test cmp shll cmpsl mov fdivrp test push jo mov aaa (bad) std test cmp xchg test syscall cmc addb mov sub test fild sbbb push mov fimull mov enter push cmp xor or cltd mov adcb negb fildll jp ret xor (bad) lahf jge,pn inc pop call mov pop cmpsb out mov rcr mov mov subb je daa mov or pop or cmp fcoms cmpsb nop lret (bad) fwait in cmpb mov sbb inc add sbbb or mov mov mov push mov jmp in nop clc fiaddl mov cmp faddl cmc push xlat cmp fwait and or or das int scas sub repnz mov (bad) mov xorl add cwtl jl mov cmp mov or and idiv sub mov adcl mov popa mov into lahf rcll push std loopne mov daa push pop mov sbb ret ficom cmpb dec mov pusha adc daa sub aam push cmp dec pop ret idivb out dec orb ds sub jno pop mov inc mov cltd push cmp pop push adc int push fs inc pop mov inc aad iret ficom push push inc test sbb and cmpb mov fsubr push scas leave xchg mov subb xchg xchg mov lods add push push aas call dec xchg xor add mov cld or (bad) cli test shl sbb adc sahf xor inc pop popa lret (bad) adcb jno (bad) pop cwtl inc xchg sahf jae clc aas and gs xchg scas and xor mov inc push daa xor jl loop out mov jmp test or mov add mov (bad) inc (bad) sbb test or roll lea mov inc negl outsb mov sub push sahf sbb cmp mov sbb icebp and scas dec lret stos jne adc xchg fidivr inc js in jecxz and in mov lahf fs cli cmp (bad) in or and cmc nop cwtl or daa movsb mov test inc xchg cmp add add cs dec xchg fisubrl jmp mov push mov push test add jmp or push mov pop enter jl inc iret sbb add movsl mov xchg mov pop popf dec mov pop incl ja or pop fsub inc scas ret inc loop cli fwait add or ja orb and pusha notl xchg xchg addr16 mov jecxz shlb sub leave xchg addb xor aas test or push (bad) popf cmp xchg mov lahf popa adcb int cmpb adc cmpsl add sub push jmp enter in into xchg pop mov xchg xor mov incb or push sbbb insb mov mov push pop jl adc push dec fdivs shrl adcb rol imul movsl adcb daa jne inc cmp xor xor xor out mov sbb sahf test test adc cmpl ret imul stc arpl (bad) fdivs mull popl push stc icebp jbe insb adcb pop (bad) pop cltd cmpb xchg dec scas or fadds cli mov inc mov popf push or and xchg mov and xor sbbb jmp cmp fwait mov pop (bad) movsl cmp mov mov (bad) sbb inc push repz sbb cmpsl cmp mov leave mov mov fldenv mov arpl (bad) sbbb mov jmp pop dec add arpl je mull outsb test mov jo pop in inc adc sarl dec and enter faddl enter adc call cmc xchg rclb jg sub leave push inc sub lea scas into repz add cwtl stos add mov jg orb jo xchg or das push xorb shrb xchg sbb mov add mov fwait and (bad) adc xchg and adc rolb das mov or sbb adc mov push movsl lret sub mov inc (bad) or shrb andb insl xchg cmp jmp incl cwtl je jb (bad) lds imul outsb inc icebp inc and or inc jne shlb pop push movsl shll cmpb jb pop daa mov out mov hlt push addb std repz out cwtl push push jne pop and add pusha rolb into sub inc clc jmp mov imul jno andb shlb scas add test addb and popf ja roll (bad) jae movsl andb jg sbb mov popf ret sub leave scas push daa mov out mov mov push shrl nop add or jmp test (bad) jnp orb mov loop xchg jne sbb aaa int3 (bad) xor cmpsl mov pop xchg ror pop pop dec sbb inc mov idivb les int xorl int3 pop sub test mov push adc adc adc sub xchg stos enter mov mov push loopne pop or push fistl mov andl sbbb pusha add pop and orb pop cmp cmpsl bswap jae insb add pop subb cmp inc mov adcb push sbbb pop (bad) and cwtl in pushf std incb (bad) andb rolb pusha pop fbld aad sbb cmp icebp sahf mov push lods push daa adc hlt jge fwait test cmp popa iret push mov imul pop call subb mov push in sbbb xor dec jns jo leave testb subb add adc push out scas nop mov mov and inc shrl xor sahf stc popa js repz add mov push stos xor sar inc push or (bad) aam jae adc fsts mov sbb sbbb iret rcrl mov jmp sbb pop add adcb js mov dec or cmp subb and jg movsl nop push pop cmc add mov pop lock rcr notb sarl test inc mov xchg loopne push mov test rol subb cwtl loop rclb adcl dec and pop notb fdivrs xchg mov and les addl roll scas dec test jecxz lahf lods dec push stc mov (bad) js enter fdivrs and je mov xchg outsl test adc mov mov adc mov pop sub or gs add arpl ret xor cmpsb out std mov rclb in mov dec sub mov jno adc sbb inc inc xor (bad) pusha lea inc ja test add les cmpsl pop ds stc test add xorl mov adc in sub les mov and fstpl (bad) pusha test xchg mov mov sub inc sbb mov or iret cmp es popa call pushf sbb loopne (bad) fisub sub div cmp mov test mov cwtl ret or lea jb es xchg (bad) mov mov ja push nop fadd ljmp dec in iret jp addl movl xor adc out (bad) iret xchg repz rclb nop adc xchg das bound xchg imul test cld (bad) jb cmpsb shlb insl dec das std aaa mov in (bad) xor sbb inc pop inc (bad) mov xor jle test cltd mov rdtsc movsb pusha add leave lcall (bad) xor pop es rol inc pop xor sbb enter ficom cmc jmp mov popw mov ljmp iret adc loopne fistp jno xchg encls mov mov sbb iret gs cmp mov add outsb xchg shlb cld repnz inc loop in mov loope daa sbb inc dec movl inc sbb pop in lods je loopne ja xchg sbb fcoml cmp sbb ret dec arpl (bad) jmp js xlat xchg jne xchg test loope cmp cmp mov rcl push test stos mov dec mov popa dec mov arpl fiaddl sbb mov mov lret imul outsl gs in xchg mov adc loope loopne cmp jl pop (bad) push cli mov jg clc push adc pop es sar mov imul call mov nop inc mov mov out push add inc int rcl pop test (bad) xchg in je scas and adcb imul push mov pop adc pop fs sub push insl cmpsb lahf dec orl pop (bad) enter (bad) add ret test loop sub add lret sbb adc cli enter js lahf (bad) sbb sub inc jnp xchg in cs adc and jb mov test prefetch stos icebp push out enter test pusha (bad) fwait loope dec push loopne or inc and fcomip add addl aad repnz cwtl adc out outsb pop jae lods iret test (bad) inc pop loope imul pop pop mov inc push (bad) dec adc fcmovnu mov sub ret scas xchg test imul adc dec push mov int3 add (bad) dec push stos icebp xchg iret dec cli lret mov dec aaa fstl test mov cmpsb and jae lret mov xlat mov push push repnz cmpsb mov cmp inc mov or stc (bad) notb xchg enter add push xchg xchg jg jne xchg jnp fisubl icebp fdivl (bad) pop movsb sahf inc mov and scas push sub clc sbb sub mov lahf dec mov scas add loopne inc iret push imul ret repnz sbb sbb fldenv loope mov ds test jo incb cmp fs mov xchg dec (bad) pop icebp bound out add jge xor xor mov xchg outsb mov jns les nop clc mov mov sbb or jae test jp popl lock mov xorb frstpm(287 imul or xchg push jno mov mov mov cs movsl inc adc push adc fcoms in fcoms fldenv ret xorb jle jg adc jecxz mov cmpb inc mov (bad) and rcrb mov xchg cmpb adc subb lcall mov fild pusha inc shlb mov pop xlat xchg dec in andb push lcall rcr insl stc ds dec mov mov loope jl jmp and andb into mov psadbw (bad) in xchg jnp cmp mov jg add aad mov test repz lret mov mov pop cltd fdivs fisttpll or xor cld jo or mov into test hlt movsl (bad) daa stc fisubl mov out leave adcb dec and push js sahf sub cmp dec mov in and xchg dec mov sbb pop (bad) and pusha insl inc mov xorl mov cmp (bad) mov xchg sub sahf clc andb popf test mov xchg cwtl stc pop movsl adc imul add push xorb or fistp movsb adcb mov cmpb dec xadd add jle fild sub cmpb sti jno pop xlat (bad) ds imul test sbb shlb out mov cmp mov movsb incb jo sbb ret mov xchg jae jne (bad) out dec mov jp or test lcall test andb xchg mov cmpb inc mov or xor sbb insl mov xchg (bad) fcmove xchg cmp mov mov fs inc mov dec mov ret jmp dec clc roll int3 cmc xorl ret stos hlt mov add inc lcall sbb out sar mov mov ror push mov mov push pop inc fcoml psubsw sub orb xorl or cmpsb push mov cld mov xlat add xchg aas out cmp addb mov mov inc lret scas jge cmp sbb out cld sbb add iret xor insl inc xor add or loop lea test push addb das and xor mov popf add divb scas sbbb aam push pop pop loopne push xor outsb subb mov sub cmp inc jge mov stc insl xchg adc xchg and inc sbb dec push mov daa lock hlt dec adc jl inc out mov jmp mov cwtl (bad) cmp popf fs pop pushf add imul inc out push dec repnz dec int3 mov movb push mov cwtl pop mov scas testl pop sbb out shlb sarb and test xchg jb xor (bad) scas repnz int bound push jbe push push mov jnp (bad) xor faddl dec out jno iret xchg mov inc cltd mov push add mov loope out mov mov xchg fistpll mov data16 int mov subl repz stc mov mov in xchg test jno fwait es dec cmc and pop sub inc xorb cmc or inc jno stc aaa (bad) (bad) pop inc sbb mov (bad) and (bad) arpl mov xchg int3 xor xor cmp mov mov (bad) arpl jb mov inc dec inc lock mov mov test shl loopne adc mov add das xchg outsb and icebp ret loop xorb xchg arpl aad inc dec and addb push movsl dec fildll lock test or sub shrb outsb pop mov push popa xchg imul xchg adc (bad) (bad) xor add je test sbb pop fs icebp orb iret sub in jg test push jns push cmp mov test dec jl adc cmpsb daa xchg mov cmp out xchg fistpl mov test loop sub and fdivrl int3 stc andb mov mov lods enter jg mov shrb xchg mov jns (bad) ja int3 cmp das lock mov xlat test mov addl xchg les insl adc mov clc add dec mov add (bad) dec icebp mov pusha daa xor sbb cmc sub mov ss mov out jecxz je ja ljmp and data16 sub aad ret nopl pop iret insb out lahf sbb negl sub ss sbb add nop add sbb adc test subl pop ret push inc gs stos adc inc push lret (bad) sbb inc pop sahf sub sub adc orb inc sti mov dec pop jno ffreep cmpb fidivr cmpb (bad) bound repz mov mov nop lea push push or dec ljmp icebp test je sub pop fildll lret adc dec mov and sbbb (bad) pop cmp cmp icebp dec imul (bad) push in cmpb jbe and addb clc les xor mov adc push out icebp jns scas dec test adc loop jnp xchg push loop or xchg out adc adcb test jno cmp in int3 (bad) repz scas aaa sbb sub fcoms or mov je sub sbb adc test adc adc loop test lea xor lea xlat push lcall xchg xchg jp push push stos in ss cmc mov fisttp jge imul sbb cmpsl pop jmp (bad) xchg es fisubl add (bad) adc fidivl clc mov into or sbbl and lcall mull mov xchg lock subb add inc adc cld add sbb lds loopne xor (bad) pop lea or push sub xchg (bad) (bad) pop jle repnz out cmpsb cli pop jno sub call mov pop test pop in or xor movsb test into lods test push mov and push mov or (bad) xor mov movsl sub arpl loope hlt es mov pop mov push jle (bad) test in and sbb loop cmp push enter arpl icebp or jg mov pusha lods aaa sbb out test xchg dec push mov xor test adc fist inc add js decl in pop sub movsl scas ret rolb movsb cmp pop add (bad) jmp leave add std addl in and (bad) iret cmp in arpl inc rolb mov fsts aas inc push sbb lcall iret pop cmp sub cmp sti test cmp addl enter iret gs cs mov ret sahf in mov cmc scas loopne sahf imul (bad) loop inc mov in aas adc (bad) xor es roll js xor stos mov jecxz or nop push repnz cmp gs lret outsl xchg adc mov push cmc add movsl push or sahf stc fsubrl xorb push insb loopne leave xchg in xor outsl inc xchg ja mov ret push jns fildl fisubrl stos hlt cwtl push cmp jo fimul mov aam xchg inc xchg dec add dec jns push fld idiv jne pop dec cmp inc jae inc aam xlat into int3 dec arpl xchg cwtl xchg cmpsl jbe idivl cld movl or cmp inc add pop jl test dec or xor or nop js negl fisubr test stos in subb lods push fcomps mov out adc mov aas xor sub scas push pop sub and inc lods dec imul jne subb xchg rcr xor mov popa rolb sbb pop jnp xor sbb mov add or (bad) testb stc test jbe orb push cmpb lea inc int3 scas dec ret jge push sahf pop jecxz addb jmp (bad) outsb testb inc cmp stc std add sbb test fdivs pop xchg test mov mov xchg stc cld in cmpb push push notl jecxz test lds pop mov mov and or inc pop add (bad) jno mov iret xor aam and jb das sbb lret pop mov mov dec loop dec aad or mov push or lds aam pop xchg andb jmp cwtl je int3 sbb lret sbb iret test je (bad) xchg jo pop das and lock lock xchg adc lret mov pushf pop std cmpb ss push aam hlt out popf jmp sbb add mov (bad) cmpsl fidiv xchg and mov pop lcall mov jp mov and hlt (bad) nop add bound sub ret adc push cwtl pop gs add arpl xor ljmp xorb sbb subl mov fwait cmpb faddl rol mov lea mov test stc push stos push sbb jmp xorb test loope jmp (bad) adc sbb jns test mov fidivrl mov ds mov enter or test cmp or les popa ficom push adcb mov jecxz pop xlat or pop lcall insb dec out inc add imul push lock xchg popa clc out or xlat xchg mov pop loope mov subl xor and iret cmpsb out or jne enter push imul or int cmpsl lea outsl sub rolb cmpsb outsb add cmp mov dec dec mov add cmp or iret xor xor loopne add ret inc rcrb clc aam fistl mov mov int3 (bad) daa jbe jo test ror cwtl (bad) das push (bad) popf push push mov cmpl cmp sub daa mov xchg cmp iret sbb leave cmpsl out out test leave add push dec outsb movb ret call (bad) push (bad) mov inc div pushf add mov mov mov shrb jle xlat mov cmp inc repz fisub xor rcll (bad) push xchg cld andl pop scas lcall mov inc into data16 jbe push sbb out xrelease or push call cwtl mov xchg xchg lea mov or gs cmpsb jge popf inc (bad) int3 scas push orl loope jp out ret and pusha enter dec out push push and movb and or add (bad) idivl out into iret push cmc (bad) int3 add dec jae iret cmc cmpsb pop test in in movsl jo (bad) test fsubrl nop call sbb (bad) fdivs pop pop divl nop dec sbb push xlat fwait xchg imul aad add ret sub icebp jo insl jae mov into call push ja adc loope mov push mov int dec loopne mov fisubrl test xor pop sahf fisttp xchg std jecxz scas cltd sbb nop inc test xchg lret lcall cmpl ljmp dec addr16 into sub imul xchg ret icebp pop sbbl fildl push roll pop pop add pop stc push or mov xchg pop mov ss adc cli int mov or mov mov sbb mov mov scas aad imul fsubrl ret aaa dec xchg adc insl sbb jb xchg xchg xor (bad) mov jle (bad) call add (bad) in or ror fcoms lds pop sbb sub dec into jecxz out cwtl out mov mov xchg sbb lock nop addr16 test push xchg iret cmp sarb in jle and in fadds cli dec inc or or jecxz out sbbb push or sbb ret jb and xor int3 testl cmp jbe mov jne enter adc mov or xchg xchg pop test cmp in jmp cli and cmp aas or repz jge sbb iret in push or das inc or cmp pop push jmp cmp (bad) xor push (bad) rol popf jge sahf dec es imul fildl addr16 cmp aad ss test sarb xorb and inc inc pop lea (bad) and cwtl int mov mov mov jae mov and push mov jno loopne mov mov dec sbb nop in xchg add jo std pushf push sub aam repnz imul cwtl sub aam pushf pop mov sbb jb into int sub cmp mov mov shlb add je dec mov or mov mov adc mov push aam popa test cli add dec mov test pop negl push cld and movsb imul lahf jno jns cwtl mov mov les ffreep xor js nop mov call xor xchg rolb fadd jecxz lock ret (bad) repnz fdivs aas pushf movsb sub add pop scas popa test mov mov pop test les rolb jmp (bad) add sub mov loopne shrb sub pusha icebp push sbb inc sbb cmp cmp ljmp xchg imul xchg ret (bad) pop ja sahf sbb rcrl and test or xlat mov mov loopne call pop clc mov lcall cwtl mov sbb or pushf addl pushf xor gs popa (bad) inc inc and mov pop or test mov insl adc les cmp mov js fildll (bad) es rcrl adc into icebp push lods test add mov sub cwtl adc into imul (bad) jo pop and add (bad) dec mov enter push mov incl orl orl ret push dec push cmp movsb xchg pop imul popa mov lcall fsubs pop xor pop fisubr insb loopne pusha cmp movl int3 roll mov adc mov add pop and mov push cld paddq ret adc adc scas icebp (bad) xchg pop xchg dec int3 (bad) fist (bad) mov mov mov jno cwtl mov pop inc push and xchg mov clc xor lock rol iret fiadd (bad) lcall movsl add pop xor pop shrl leave int3 mov shl iret mov mov daa stos rorl test les lea mov push add aam popa add fsts adc bound enter mov cmp add mov fucom sub in mov rcrb scas clc mov mov enter out mov jbe mov sub pushf call (bad) and xchg adc lcall mov fildll adc subl cmc pslld sbb dec insb lret xor adc adc push xor cltd addr16 and mov lcall jb mov in sbb pushf and jl fild rolb (bad) and fcmovbe sub fisttp inc test ljmp push jecxz out shrl lret ljmp bnd iret jae scas (bad) mov cltd mov or xchg dec insl subl (bad) jbe adc cld rclb pop inc cs fbstp (bad) or (bad) hlt mov sbb (bad) int cwtl mov mov int inc je outsb repz out scas pop xchg setno cs mov (bad) int push (bad) popa mov iret scas das mov cmp adc enter sub mov stos out xchg clc int3 sub aam xchg enter sbb in mov sub jne xchg inc scas mov add add loope data16 mov adcl jb fisttp xor sbb mov and lea xor or pusha nop pop cmpsl ret js insl cmp xchg jnp add dec add (bad) mov mov mov test and sarb aam test (bad) mov mov and in mov in push sahf mov pop mov sbb sar mov sub sub sub (bad) xor or sbb pop jb call in xchg mov add sub clc mov (bad) aam loopne mov (bad) test inc fist int3 lahf (bad) fwait lods and adc and xchg push xorl sbb cmp bound (bad) shrl test push clc imul dec clc pop jl pop and push nop pop loope xor xchg adc pop mov or cmp jle rolb cmp adc inc and ret lret into jo cwtl test sbb jno out stc test sahf scas test int3 push test add xchg enter int3 and fstps (bad) jle inc push adc sub iret movsl les mov fs call xor push mov cmpsb mov xchg dec int3 loopne pop pop mov js dec mov ljmp scas mov dec sub (bad) adc in adc loopne fwait (bad) jo mov bound adc rorb add and test add and and pop add and inc arpl xor ret shrb cmp mov fdivs xchg dec xor xor inc (bad) xor xchg pop aam sbb ds adc add mov mov (bad) xchg stos clc lods push jae shrb jle sbb (bad) sbb aam fisttp mov nop push xchg (bad) xor test mov mov sub xor fidivl fildl inc andl mov icebp cwtl mov adc jbe (bad) inc les adc inc int3 pop out test mov pop stos xchg rorl jmp fildll sub push xor lds popa mov les xchg jnp popa mov mov xor loopne mov push loope rcr aam repnz negl cmpsl inc xchg insb and cmc sbb jno xchg mov mov adc mov call mov ljmp shrb mov and mov mull jb clc in iret push xlat shll cld dec int rcrl and aam (bad) lock mov sbb pop repz lock mov stc test jle dec sbb mov pushf mov inc aaa cwtl (bad) jns or jg addr16 push dec or shr dec (bad) stos inc mov xor push dec cltd enter cld adc adc orl faddl imul pop jnp std xor fild cmpsb add mov lret mov dec cmpsb xchg dec test aaa or out fucomp into movsl xor jl stos pushf adc mov sahf and loopne int3 pop xchg or xor call push add sbb mov jb mov (bad) jg js xor dec clc rclb daa adc jns inc outsb cltd and pop arpl clc dec mov (bad) jae in shrb xchg sub lcall inc out rolb mov mov add ror adc dec pop xchg xchg adc or cmpl fsubs enter data16 lock cmc mov push adc (bad) mov int out fisubl mov out mov add mov iret mov (bad) enter or xchg fsubl imul or or or dec icebp or adc (bad) lods cwtl mov dec ljmp xchg enter adc jae notb add js adc movsl xor das clc mov loope adc pop fs pop repnz lcall push adc cli roll and daa and shlb pop out dec inc enter addr16 mov xchg movsl (bad) dec jb loopne lods pop lea jg mov (bad) add es jmpw xor clc arpl enter xchg and movsb int3 cmp push mov stos and mov loopne mov mov mov or lods add jne aam les sub mov fnstsw mov movsb (bad) bound xchg ret bound iret addr16 jb fnstcw popf gs out mov add mov shrb insl (bad) (bad) or addl and jp sub fadds test lret test xchg dec test sub push push inc je xlat call (bad) movsl sub test divb (bad) and pop pop sbb (bad) aas dec out fs fwait lock ret and xor loopne sbb faddl dec xchg pop inc clc movsb xor push xchg sub add loop rol lret loopne jbe pop add mov add add movl popa and push dec stc iret pop xchg add test (bad) into clc daa cltd adc (bad) mov xchg test inc ret test push lret cmpl mov lods cmp fldt (bad) push iret out js outsl xchg js movsl icebp (bad) loopne sarb sbb insb dec mov (bad) adc outsl lcall aad mov fs mov cmp ret adc mov adc cmp fisttpl and fldt movsl lret leave and test fwait out lret in fildll mov add (bad) jno mov addr16 int test gs pop test adc xor cmc pop jns jp out dec repnz xchg xchg jo ret jb jle pushf push mov shll sub or and pop mov mov (bad) mov cmp xchg daa mov pop clc popf scas push lods lock sub add (bad) xor aas or loopne daa imul movsl lcall lcall ret xchg inc add mov rol push ljmp mov push popa inc push jne ljmp mov je mov cwtl loopne popl fsubrs jo (bad) nop dec addl add idivb dec aam push arpl inc in mov idivb sub xchg rorb mov lea scas xchg push cmp jle (bad) or mov mov and inc mov mov xchg test dec inc (bad) sbbl add cmpl lcall cltd cmc arpl xor mov call adc lcall inc xchg (bad) xor push fs lret fnstsw jl pop pop jecxz or jo cmp ffreep fistl and inc mov add adc test xor add mov test mov rolb aam test loopne or add cmpsl (bad) stc fildll (bad) mov enter jl lret jne lods cmpsl or into leave loopne fsubrl lock push sbbl movq pop je movsb push sbb in xchg fistp pop (bad) adc jbe cmpb pop (bad) unpckhps into sahf es imul dec lea add mov jecxz mov fdivrl mov add jno pop mov and nop movsl pop out int3 fsubrs pop sub xchg xor push push movsb cmpsl cltd add mov js sbb push mov into sti xor xchg stos add test fcomip faddl int3 sahf pop jb lret mov ret ljmp dec imul add (bad) xchg push dec (bad) mov fbld xlat sub adc mov fistp push jp imul (bad) mov inc dec mov out xor sbb int3 outsb mov sub xchg sahf (bad) ds insl pop inc dec and test or xchg push xchg cmp mov push sub dec mov (bad) lods jns inc rolb jg push push bswap ret mov mov lcall sbb int3 pop mov sub clc jmp mov mov sub aam mov push stos xchg inc ss jmp mov adc add mov gs rcrl add ret rcl ja jp sbb pop loopne mov cmp xor xlat mov xchg orb inc and test mov mov rclb fdivrl rcrb mov mov sbb or jge and fmull mov repz (bad) cltd shrb mov mov enter scas mov mov jge je mov adc dec js (bad) or mov fcoml mov mov mov mov aad movsb enter sub cmpsl and mov out mov and mov xchg lcall mov jbe jo stos add add mov ret adcl add inc lods mov dec (bad) loopne cmp xchg pusha and adc mov xchg test push xchg icebp ret (bad) cmp in cli mov xlat push mov pop loopne jae sbb and cwtl insb add js mov xor xchg push outsl push jno cmp sbb add or inc loopne popa mov push insb ret loop rcrb loopne jle (bad) rcr (bad) push loop mov inc popa les iret inc xchg dec push icebp inc xchg ljmp add pop ss and sbb (bad) lea js or and cmp and xchg nop roll in xchg add sahf repnz pusha movsl xor sbb (bad) insl int3 std call rorb shl (bad) push push pop ja fucom (bad) jo xor in adc mov sbb test sti push pop out ret roll cwtl cltd jae inc sub cltd popa inc or mov and and push rcr jl xchg mov (bad) push push stos xor inc fsubs cmpsb mov (bad) jmp xlat add dec fcomp mov mov stos into add cmp jl loopne imul or leave inc xor add mov inc and in je cwtl xchg (bad) mov cmp sub mov pushf fcom in adc out push mov lock mov js xor loop jmp scas mov lds pop add leave mov cwtl add bound cmp fcompl mov fstl xchg pushf daa or (bad) mov clc test (bad) jp fmull xor dec add sbb insl clc sbb (bad) loop xor test in push inc jb xor inc jo inc jae or jmp or or cwtl cltd or mov xchg pushf je popa (bad) sub jo mov roll and or jecxz push ret xor push ljmp cmp push dec sti push pop mov push push mov lea xor stos aad add lret test hlt cmp push ficoml cmp (bad) adc xchg out or inc ret and cmp and and mov jl sbb mov aas add xchg and (bad) cwtl pop (bad) xor cmpl mov mov popf and pop sub outsb dec out mov adc cmpsl push cmp rcrl scas jbe call andl mov outsl add data16 (bad) xor sbbl (bad) xchg les push xor mov adc mov mov mov add xchg mov (bad) cmp lcall int3 mov je mov pop add xor mov lock lcall iret lcall rorb mov add mov pop loop mov push pop dec fisubl jae pop sub int adc jmp jge in inc sub mov dec mov iret lods mov rcr mov repnz cltd out mov mov jo mov inc roll repnz adc enter cmp sbb mov or jl aam loopne adc pop and push mov sub dec cmp mov dec fidivr shrl cmp (bad) in pop cltd (bad) or les or inc arpl add cmp or stc xchg cwtl fimull icebp push inc cmp fnop sub out xor (bad) adc movsb (bad) and adc inc jecxz cltd adc pop int3 pop fwait iret jl and jp stc sub jno xor add add add fisubr sbb fsubrl mov cs push fwait inc jae lret imul js jns enter xor lret out nop sbb cmp jg mov aas ret or cli jno and lea inc call add xchg nop mov int3 std or rol dec call decb lcall dec test sahf mov cwtl add bound rcr inc int3 jno fistp in cmpsb add add xchg (bad) sub movsl lods pop lea sub ret adc or shrb cmpsb mov test stos ret rcll mov stos (bad) adc popf scas lods xor shl xchg mov and gs lods add dec pusha test ljmp fist push jae push add mov inc outsl int3 rol dec xchg call daa pop neg and and adc imul in pop inc cmp push mov jnp enter int3 push cltd and cmp fidivrl pop or sub shrl push je push fsubr decl lret nop push (bad) pop fisubr sub lret jns mov add insb mov add in pop sahf fiadd movsl pop push shrb add xor pusha stos movsb rorl lret jmp loopne in mov xor loopne in xorb sbb inc or xchg jp shrb cmp sbb mov and add lret adc or or enter pushf xchg jae aas inc push (bad) xchg jb lcall xor jecxz mov add loop and push adc or jae gs lods cmp and leave inc popa xor lods ljmp divb iret add stos push jle rorb popa xor in rcl mov fist xchg jl lods fisubrl jge sbb mov cwtl mov es fbstp mov mov pop addb sub cwtl popa inc out pop dec fdivrp rcrb mov dec pop sub or jne and mov pop mov mov iret orl pop fdivl or ljmp aam and xchg mov jae mov inc mov ret movsl pop in loopne cmp ds je push xchg stos scas loope jo stos push mov pop lret (bad) xor es lds and mov push sub mov push mov lret out aas lcall ss inc ja cmp xor inc std cmp (bad) pop test xor subl (bad) xchg fildll arpl xchg push pop loopne lods inc lods or mov mov stos xchg test sbb (bad) sarb or mov repnz stos shrl xchg mov addl mov out test pushf push jmp ret or inc aaa add movsb in test (bad) ret nop (bad) pop xchg mov jmp mov cmp mov xchg out loopne nop mov xchg jl dec rorb lods pusha xchg popf insb inc sti or pop xchg loopne push aas xor ss inc mov insl out inc mov sahf rcrb push jbe dec jl mov cmp clc jne lcall nop popa (bad) daa test xchg inc fildll imul in add pop shrb popf push divl cmpsb push jnp and adcl fbld push testl popf ret (bad) popf inc roll rcrl inc rcl add loop in lods fildll sahf cmpsl (bad) popa inc int3 out push cld fiadd push sti dec loopne loope loopne xchg in movsb sub shrb pop or test in dec mov insl (bad) loopne lcall data16 lods or mov int mov (bad) sub cmpsl mov call in push or fsts outsb test (bad) popa leave in dec mov stos mov (bad) in nop int xchg rol cmp or xchg popf out and push push enter sub rol sub and mov loopne jl movsb cmp cli push and test popf mov xor jno (bad) adc pushf inc xchg push xor cltd and pop fidivrl sub repnz ss rorb dec cs (bad) push aaa mov xchg sub push push adc xchg (bad) test lret xchg mov adc adc lock cwtl push pop lds in jl cmp cmpxchg fcom int3 call or sbb cmp loop test pop push mov (bad) adc jne clc and (bad) inc inc and and or mov cld or pusha push mov ret lds add lcall cmp add aam daa push stos testl mov jbe lret (bad) mov insb xchg pushf mov mov rdmsr mov cmp repnz xchg sub jl test (bad) aad mov xchg xchg movsl dec bound push enter pop cwtl mov fisttpll mov mov faddl (bad) or mov or les rcr cltd lcall adc or ret add sub mov shrl push outsl jae andb ja mov and inc pop scas and add xor add sbb aas loope test adc fcmovne xchg add (bad) pop std sarb adc xor mov clc outsb sbb sarb dec in (bad) dec add test mov jge out or mov stc lea sub or nop inc loope ret rclb push jns and clc pushf mov xchg daa (bad) rclb fldln2 cmpsl inc pop fildll sub xchg insl cmp mov push pushf inc icebp shlb mov mov test das popf xor sbb pushf jmp ja fcoml faddl pop jno xchg pushf and aam cmp out cld mov add mov fcompl or imul mov subl ffreep sbb adc std jne enter test cmp imul jns lcall shlb mov push jb mov repnz (bad) and mov add into dec pop inc clc fnop or dec int mov pushf dec xchg mov sub lea mov cli or (bad) (bad) jl mov es enter jge push negl out movsb in cmp (bad) push sbb xchg jle push ja jg in pop mov adc test cmp (bad) push sbb inc jle dec and div daa cwtl cmp adc movsb jp shr out andl jmp xchg cwtl mov (bad) dec out int popf lret int3 mov imul xchg std jecxz dec sbb add inc sbb and jno enter leave rcll rcrl pushf mov ret call in mov sar adc sub push sti mov pop inc sbb fdivrl (bad) sbb and loopne ds dec ret lcall dec mov add mov (bad) adc jmp ret cltd mov aam js clc sub push dec es inc jle (bad) mov pop (bad) jno inc pop push lea and push lea lock push (bad) ja shll add mov sbb mov lds mov dec or fidivr aas aas lods xchg icebp xor dec test mov fild push xor xor cmp mov fild xchg or leave xorb xchg mov xchg les dec jb int3 inc mov clc jb int3 rcl test ss add adc jbe pop scas in insb xchg and fwait jnp push cmp ret ljmp push or inc or out pop (bad) pushf loop xor insl rclb nop movsl mov call xchg xchg test cmp add xchg cmc enter loopne cs mov (bad) sub xchg cmp lahf or xor jae inc xchg test js lock mov ljmp dec stos daa dec jno and divl rolb jb sbb (bad) (bad) sub call out stc add fildl pop (bad) mov jmp jb ret xchg inc (bad) jmp icebp je mov pop stc jns outsl inc lcall or repnz jns jne loopne pop sarb aad mov setnp incb test icebp fnop rol clc cmp rcll mov xchg push or push test xlat (bad) xor sti pop push lods cmp mov ffreep ds sbb in pusha dec es dec add inc add cmp dec scas shlb dec or mov mov lods push lock test mov adc cli in adc fsubl je xchg push cmp (bad) dec and or xor ds cwtl add loope loopne je lcall insl and imul cmp xor xor dec ret imul mov adc imulb fldenv pop dec shrl mov insl mov adc dec sub addr16 push xchg inc (bad) (bad) fidiv sti imul minps mov test sbb in lods sbb lahf ret (bad) shrb sarb push add mov das xor fisttp scas out movsb cld xchg out cmpsb lds xor pop and test cwtl leave pop dec loope outsb test in mov mov test pop push mov or sahf icebp movsb add mov mov dec pop mov sbb (bad) jmp outsl enter loope pushf (bad) repz in sub sbb mov iret push es js frstor shrb jno fnstenv inc mov clc lods repz shrl stc call push fsubs lret mov sti lcall adc dec push add cwtl aaa sahf and int3 pop or in adc or mov nop and test adc add iret enter sub inc test ja cli btr pop dec jg cltd cmpsl sub mov and shrb (bad) (bad) jecxz inc xchg mov add cmp add jp sub xchg jbe cmp or rolb loopne subl loop sub test and fs mov shll js movsl jns adc push imul adc rolb sti mov mov add add (bad) (bad) shl nop dec cmpsb xchg or mov data16 jb in (bad) dec lods nop dec iret inc mov cld add call (bad) mov je imul pushf xor test mov mov mov add or mov cwtl or popa test lret push iret mov mov into xchg mov popa xchg sub dec inc fdivrl xchg outsl mov in jle rcl pusha and mov pop nop mov pop push fisubr fmuls daa lds lea out call hlt imul xchg mov mov rclb call (bad) cmp popa mov dec outsb mov fs iret shrb ret rorl xchg sub mov in cltd lods mov push adc add mov xchg cs mov and (bad) loopne or jo cmp fcoml mov popf push push in fucomp subl into (bad) aaa jns insb ret lds dec mov popa adc ror xchg movsb dec pop (bad) (bad) jge aas ret sbb stos aaa enter xchg test adc inc dec jns jae (bad) das lods cmp shll sbb pop mov (bad) dec add or (bad) pusha ja xchg clc stos (bad) out (bad) adc xchg arpl out ds jmp repz mov cmc dec inc clc test adc fcompl std pop lea stos push out xor pop push xchg (bad) and mov mov adc mov and mov loope mov stos push mov cli cwtl lock lcall mov xor mov add dec xchg loopne mov cltd loop or popf push aam insb mov (bad) jl ja movsl add xor sbb loop pop sahf jp mov jp in (bad) jb rorl jne movsl lods jae adc sub lds sub adc xchg sbb fcoml das ret popa mov push push aam inc sbb add add and mov mov shlb or (bad) icebp lods test jb scas (bad) and fisubrl iret cli shrb lret mov ffreep fbld adc sbb and push lods mov sbb or xchg add sub pop int3 fcoml fstps out mov ficompl ret out in add out and enter loope mov (bad) xchg and mov dec int popa aad add jno sbb movsl mov cmp and pop jl fs inc inc fs (bad) das push repnz fcoml mov push insb loop mov int inc push lahf cli add sub mov mov mov in jl mov and jmp adc lretw (bad) and dec int fsub sbb cwtl xchg in in (bad) lock std nop lret mov jge out sbb test and lds dec add repnz xorps (bad) fbstp and pop sub ret loopne mov cli imul lods rolb sub fnstcw cmovs and (bad) je insb fxch or shr fcomip add or or adc addr16 fsubl popa fnstenv mov sub cmp xchg sbb bound cmpsb sti leave imul xor push dec add mov add xchg mov shrb push cmp mov stos cmpsl pop and jecxz gs push sub xchg je movsb hlt gs (bad) in sub rcrb xor lds scas sbb dec aaa pop dec jbe xchg sub (bad) and xor les push add ret jb (bad) mov sar lods and repz pop and (bad) jae xchg test add iret lea jl call call cmovle repnz icebp movsb jne mov mov sub mov dec or jno test test mov popl mov sahf pop push xor xchg adc in popa dec add xchg inc paddusb cmp dec xorl pushf (bad) (bad) ss push mov (bad) xchg sbb adc dec push enter lock mov lcall f2xm1 orl mov rcrb inc lods mov jg xchg lret cmpsb sahf (bad) jmp mov lock les js pop popa lods adc xchg inc outsl fldcw imul xchg aad inc scas xchg dec (bad) add add dec xchg inc (bad) (bad) sub sub push inc adc test add xor in inc insb pop cld inc push or nop (bad) mov xchg lahf xchg mov inc cmpsb out test sbb ds mov xchg mov push enter mov rcr iret (bad) cmovne mov xchg rorl out (bad) les sub jmp inc cs cltd mov mov xor (bad) xor fmuls sub push mov push sti mov repnz xchg xor jl enter stos cmp sbb fild or dec je sbb pop cmp js add ss lcall popf jmp iret sub imul (bad) popa sub arpl jp test sahf dec push mov flds mov pop adc xchg (bad) sarb sub loop roll (bad) jl ljmp fxch xor and mov insb out cmp mov mov bswap outsl out inc outsl dec pop (bad) or pop out in and pop (bad) sub inc dec xorl shlb jle inc ret cwtl xchg jb (bad) loopne add incb (bad) loop int3 fist cmp and in imull lahf xchg sub xchg cmp add push call sarl cltd and inc (bad) pop push imul mov outsl leave mov mov xchg and xor adc xor xchg xchg pop insl add and jns xchg (bad) clc xchg xchg jno mov inc adc mov pop inc insb and lret arpl inc rcr mov fidivr pop mov (bad) sahf arpl jne mov cmpsb mov push mov jns (bad) addr16 imul dec pop sbb test (bad) inc push and stos popf shll shrl jmp ljmp or push jb dec movsl sub loopne repnz movl jle cltd push dec mov push stos dec adcl jmp ja mov imul xor inc mov dec movsb outsl pop rcll dec lock ret pop mov add test les test or imul add int3 dec mov aam mov mov sbb dec (bad) cmp (bad) lret mov fsubs shl sub adc or data16 movsb fnop aad (bad) xor pavgb mov mov dec add rol addl push cltd ret inc or pop cmpsb fcomps sub aaa sub loopne js mov pop (bad) iret inc lret sub xchg mov add or enter add rorb push adc adc or sbb xchg mov push sbb xchg adc dec aam fs inc or or push insl or insl xchg outsl aaa test dec inc mov inc in mov mov addr16 add mull add dec mov out ficomp inc shr jne outsl hlt cld clc int3 mov aas sub xor out int3 and xchg xor xchg cmc xor fistpll movl sub out add movsb xchg cli push cmpsl jns jo das ror lahf les call rorl jns and sbb shrb mov ret pop xor pop mov ljmp push pop cmp jp out xchg xchg and scas mov mov roll mov rolb ret dec lret stc cmp into fiaddl shlb add and stc cmpsb inc loopne stos add icebp ss iret xorl xchg pop mov jecxz int loopne sub call scas fild mov push adc and test (bad) int3 inc mov pop shrb mov fldt inc mov adc mov sti xor cmp or arpl and inc in dec inc mov sub pushf js nop fsubrl mov pop add pop repnz cwtl ljmp mov sbb pop dec and sbb lods sbb shll into pop add xchg dec push nop fs fbstp andl cld push (bad) aaa jecxz xor rcr vpunpckhdq insl sbb xor and cmpsb jae leave mov dec lock mov addr16 mov and mov mov jne cmp test mov nop pop call rolb mov sbb imul mov pop int sti (bad) negl fist fisub shrl fcomps mov adc fiadd mov in xor test orl adc mov (bad) fnop iret imul popa and cmp mov mov clc in jbe (bad) adc mov fisttp xor fdivrp rep adc notl jb int3 or mov cs inc push mov cwtl test lret fcomps push fcoml mov mov jns sahf xor jbe jae (bad) inc mov packuswb sub cmp fnclex sbb mov bound mov mov sahf mov pop pushf sub sarl mov push loope gs int3 push and xchg mov fist test lcall jnp popl lret push adc ss mov int3 lcall sti sbb add leave xchg jbe hlt fsubrs mov (bad) insb lea xor (bad) cwtl mov notl sub cmpsl popf in loopne sbb xor pop sbb inc lea fwait inc inc add mov xchg repnz sahf jne push cli clc and shll arpl ret xor int3 and jno test add mov adc hlt fistpl jb fimull push jno mov mov pop and and int pusha adcl jge mov mov jge push repz mov fbld repnz lahf adc mov aad mov add loopne nop mov mov leave and cmc cmp jns and lahf pusha dec test mov xchg pop call mov bswap mov lret nop arpl adc out cmpsb and adc jns mov clc jbe int3 pop ret fstps push call out lock xchg pop (bad) rorb cwtl sbb aad iret push xor je inc (bad) xchg adc lock jae pop loope add js insl stos push loopne mov lret xor or movsl cwtl sbb imul ret loopne gs sub sbb adc sub jg insb sbb cmp push aaa dec shrb and cli loop push jp sbb mov arpl mov mov test inc mov or xchg movsb leave inc jp js cmp mov popf and and add cmp xchg xor loop dec pop roll mov lds lods adc cwtl ljmp add inc popf dec leave fildll jecxz fidivl pop les mov lock pop lock leave push mov and test cmp imull mov dec (bad) add in and push sub xchg push cmp push aad dec lret sub sub mov ja xchg xchg sbb ret fsubs sahf fbld jle cltd mov jp lods imul xchg mov (bad) mov cmp jecxz (bad) dec (bad) loope xor std lods and jp xchg pop aam stos pop pop (bad) cmp xor and adc in inc scas inc bound test xlat mov cmp mov adc mov mov mov rcll cli ret and ss mov sbb pop iret xor and js sar mov ret pop push stos data16 pop and jns pushf mov in fdivrs dec lds loopne loopne mov xor and inc jl aad and jnp (bad) mov cmpsb add arpl fs adc jbe (bad) aas push icebp xor pop xor leave inc dec xchg stc mov (bad) sbb lcall loopne mov adc dec xchg adc ljmp ficompl cmovae test adcl pop (bad) sub xlat or mov cmpl imul adc mov outsb sub lods inc inc push call and orb push pop aas insb mov adc mov jns imul xchg roll xor push xchg cwtl cmp mov cmp xchg add les mov xchg movsb add cld xchg mov lock adc mov aad fwait lds sbb mov jb scas int3 mov (bad) les scas orl mov jae into jnp outsb ret push rolb sub jne popf sub pop mov jecxz mov push push jl push or pop mov (bad) push ds out adc or ljmp sarb (bad) or out cmp fidivl and inc add inc mov cli fdivs int3 js stos call mov outsl iret or out ret movsb xchg mov movsb ljmp ljmp mov mov adc inc mov xchg jnp stos lret cwtl pushf loop and mov cli add and aas movl jl and enter insb or or push add rorb inc xchg sahf fisttpll mov adc xorl ret shlb stos cmp xor xchg inc sub test adc sub mov pop push (bad) cltd jno cli mov out adc ret adc mov loop dec pop int3 ret lea clc add ja dec imul adc faddp (bad) popa insl sbb mov or sbb jle repnz pop sbb sub stos mov lods aad xor pop popf mov xor jle mov fdivrs lcall cmp dec or test out arpl mov cli pushf cs lods and mov or mov and add pop fldenv or xor jno mov int3 inc add outsl fadds mov jecxz jp mov js fs cmc into xlat mov int popf mov sbb dec fildl andl mov mov lret mov rol push sub mov sub cwtl add xor insl xchg icebp enter add mov popa daa mov jp and jbe or inc cmpsb jae roll lock dec or mov nop jle jge outsl fs test sbb rcl add add call or addr16 inc cmp outsb dec stos xor and cmpsl or arpl mov fs ljmp inc pop and mov jmp and xchg jo adc and fiaddl nop fidivl lret leave iret adc into add cmpsl flds loopne mov enter lret inc rcr fbld imul stc (bad) repz push add (bad) fwait push cwtl dec into mov in mov repnz lret lea xlat pop xchg sbb popa or enter sub testb adc cmp pop mov jp cwtl rcrl insl xchg mov jg js roll (bad) pop fucomip lock mov inc mov cltd mov fbld rolb jecxz fwait pop mov mov sbb xchg cwtl mov in call add mov mov or test xor mov fidivl ja nop fcompl leave add pop aaa push test jae mov pushf sbb pusha nop cmp pop rorl cwtl mov or push in fisubl xchg in (bad) les mov push lret repnz loopne mov stc fistp push pop xchg and pmaxsw pop (bad) jae dec imul mov sub aam sub lock stos test test rcr cmp xor fnop dec sub adc cld (bad) xlat leave test mov mov push mov inc enter xchg adc pop mov add sarl shr arpl push rolb into inc (bad) jmp cwtl ret (bad) push sbb leave add adcl popa faddl movsl les inc xchg jmp fdivrs sbb (bad) mov mov push add cli sbb fcompl sbb cmp mov into sub push or or ret dec fdivrs cmpsb data16 (bad) mov aam test adc jb shlb jno popf and inc int3 push popf dec jne lea bound ret jae or push and mov add jp cmp and aas test cmp cs pushf (bad) xor loope insb mov ret cmpsb mov lods outsb or int3 mov popa mov ret movsb outsl inc jecxz fisubl jmp adc xor div mov pop pushf repnz bound test lret fsubl sbb sub or mov cmp out in movsb xchg add xor dec push mov (bad) mov rolb sub mov ret loop cmp fadds xor mov insl inc in cmp sub andl loopne jle mov out sarb push or mov clc add mov test ret lret jbe dec mov mov push cli loopne push sbb push lcall mov cs dec add (bad) mov xchg mov mov xlat sbb mov mov inc dec dec imulb aad aas icebp (bad) pop movsb cmp xchg push pop ficoml jo insb mov (bad) clc or sub sahf and stos scas sbb iret bound push mov mov cmp jnp popf inc cmp push (bad) aam mov cmpl aam imul cli pop shrl (bad) mov jne dec sub and mov int (bad) cmp and mov add (bad) jnp sub popa pusha jno sub jmp loopne test icebp adc ja call cmp mov add add sub pushf es out cli ljmp movsb cs icebp scas mov push stos push (bad) pushf push das aaa xchg xchg xchg mov int adc call call repnz sbb mov mov js jb cltd pushf and sahf jae stos addr16 xor imul or adc roll or loopne or add cmp jmp insl in sub cwtl aam dec addr16 loopne sub dec or cmp xchg and mov insl mov or negb dec adc (bad) or enter imul add xor movsb ljmp push repz sbb cwtl mov mov repnz lea movsb xor insb cmp clc testb negl call mov cmp xor into dec popl mov pop cltd dec mov rcrb call rorb or lock loope fistpll jns inc adc or dec dec xor pop ljmp enter (bad) push push aad or scas sub lods addr16 xor pushf loope jae enter xchg push fs mov xor sub (bad) push sub imul lock bound and fistpll mov add imulb dec jecxz shrl into mov and fxch dec adc lret pushl repnz repnz (bad) or loop hlt insb push iret inc dec adc daa and (bad) out arpl mov clc sub jl gs nop mov (bad) (bad) jb mov aam lcall sti fidivrl and jae leave dec dec pop push or mov jp test (bad) and push adc loopne dec inc jae push sbb shrb jp pop cmpsb and dec pop dec lods mov int leave lret gs loop and icebp jbe (bad) enter jnp xchg int3 rorb jno imul mov lcall repnz pop repnz sbb add jecxz fcompl fnstsw mov xchg mov pop (bad) loopne mov packuswb movb lock and pushf test fnstsw push mov test loopne pinsrw fmul mov sbb fadd mov mov pushf xchg loopne arpl push rol rcl mov jnp call add push iret loope int adc push xor adc fs xchg sbb sub arpl arpl xchg aad sahf sub mov pop inc dec mov loope outsl pusha inc aam movsb add pop hlt xchg add sub xchg gs mov or mov ffree cld bound and sarb cmp popa inc sti and xchg cmpsb push jp fist cmp sbb rorl or inc push rol sbb ficom xchg xchg loop ja cmp in mov xlat ss sahf ret popa (bad) std cmpsl js out stc inc mov jle push add loopne mov aas lcall pop addr16 lods jo mull pushf stos push xchg jg inc daa std adcl out pop hlt mov mov xor xlat popa jle sub cld nop and std sbb sbb jg jne add add shr rcl stos (bad) jne add and sub daa and sarb mov jl and mov rorl incb mov xchg cmp and cli rolb mov push cmp sbb sub shlb sahf jne add mov push rolb bound popf sbb mov inc mov mov add sbb and fistpl inc xchg fwait dec fs pop imul xor movsb fmuls cmp add and (bad) fsubs test movsb lcall dec loope push repz pop sub mov test add mov jnp shlb adc mov in sub inc adc xor shlb sub movsl test adcl cltd mov or movb icebp xchg andl and push imul fildl repnz jne mov rclb xchg mov fist int cmp sub dec mov pop xorl popa adcl and add lcall mov mov and stos inc jb and xchg mov (bad) call (bad) enter mov xchg jnp call (bad) enter cli outsb sbb lock add mov dec inc enter inc outsb add mov das (bad) lock enter xchg and movsb int3 cmp dec lock mov mov scas andb inc mov adc push movsb sub jmp lcall xchg inc cwtl pop jg jmp faddl fwait (bad) test in cmpsl hlt inc mov clc add jl test pop js (bad) jo cltd push aaa xchg inc mov xchg loopne adc mov lret divl jmp (bad) mov cvtdq2ps mov sub mov mov jl jnp adc add jns repnz sub mov and dec xor and sub pop inc adc mov loopne adc mov xchg mov pop data16 movsb jnp popf (bad) aam mov or cmp cmpsl and nop pushf insb (bad) mov jnp popf pop mov adc stos pushf aaa addr16 mov inc (bad) dec subl inc je mov mov add hlt inc jmp cmp mov push xor pushf jne jb scas lods jae ja cmpsl sbb sbb xor mov push inc popf mov cli add jl imul test sbb scas nop mov mov pop dec js mov sub ret cmp and xor dec popa sbb fxch mov iret lock cwtl lods mov mov mov fs and sbb xor stos xchg xchg mov mov rorb xchg fcomp dec iret push inc std hlt xor cmp je mov add bound or jle ret add fstpt loopne cwtl lock xchg je aaa xor jno scas mov xor mov add (bad) mov addl xchg pop push cmpsl adc hlt pop mov loop sub (bad) loope dec mov xchg enter subb int3 push pop inc int jge outsl xchg mov lea xor pop fildll test and xchg rclb xor or bnd inc mov jle add cmc jbe jge lea sub leave cmp test dec out ret loope and dec daa (bad) aam push mov arpl subl push push inc inc cmpsl push rcrl fsubr ret inc rcl shrb cs shlb adc cli lds sti or (bad) popa mov push pop jmp adc shr leave pop shll es sub loopne (bad) dec xchg insb insb dec aas shrb and enter or pushf test fistp and repnz enter clc mov mov ret sub push mov pushf and dec or mov pop nop mov lahf lods arpl (bad) test stc xchg inc clc lods hlt iret ret (bad) ficompl sbb (bad) js pop rorl or cmp and cmpsb loop cmc cmc lods push lods inc popf pop mov jb cltd loop stos movsb sub cli dec incb add xchg jnp add and mov dec imul xor xchg lods enter aad roll int stc and mov dec jg inc loopne loopne icebp mov cmp stos sub nop enter jl and movsl inc mov es test push ret mov imul ret adc mov out lcall fwait jbe inc pop mulb pushf push nop je loop push mov pop hlt rcll pop (bad) jl pop sti popf sub sbb jmp in aad xor jnp and adc or sub mov adc pushf test sub loope loopne add js and pop int3 and clc sbb in insb dec inc arpl (bad) stos ret xchg add xchg push add inc call push mov movsb or ja cmpsb arpl stos mov inc mov and (bad) notb je mov sbb or inc sti arpl out xchg and push jb xchg shrl les mov sahf sub mov add sbb shrl adc (bad) jo and pop int or cvtdq2ps cmp imul pop into mov fidivrl ret rol ret mov (bad) pop mov insl push sbb jecxz out or or mov mov add add xchg mov dec adc pop jg das add imul cmp cld movsb fistp pop adc inc cmp (bad) xchg push and cmp fcompl (bad) (bad) enter cwtl jg ss aam enter sbb sahf pop inc enter (bad) jne fmull mov ljmp and add cli stos dec jge cmc mov push push lret shll (bad) lcall sbb aas (bad) lods sub daa mov push (bad) sbb mov add out repnz sub and enter push add (bad) xchg loopne cli mov sbb in mov jo push sub sbb lret mov mov (bad) dec js pushf ret loop cli inc inc jle movsb gs aaa iret pop sbb add mov movl xor sub mov ffreep orl test in popa adc xor in ret clc jbe or mov rol mov cld (bad) (bad) ss dec adc fcoml test cwtl cmp fimul (bad) pop mov adc sub mov sbbl addr16 popf xchg ss loopne mull pop arpl bound xchg dec or inc cmpsl push sbb (bad) repnz xor lods and mov int3 dec mov add mov cmp pop pushf dec push dec iret jbe sbb les push cli lods repz sbbb pop pop mov les jp test or fldenv and and scas dec adc fsubr iret lcall dec mov jo fsts add nop lock in push add fucom faddl loop xor lods popa xchg mov and and mov (bad) icebp mov xchg and push orl xor rorb add (bad) popf inc jge adc icebp stos mov lret inc mov idiv mov push cmp jno insl aam xchg adc ffreep mov jecxz test push (bad) mov pushf cmp or pushf stc inc inc aaa mov add les sub ljmp ret rcr fiaddl test sub push fsubr test faddp cwtl leave mov (bad) pop mov lods mov dec lods (bad) or sub jl mov inc lcall movsb movsb test in and test outsl (bad) mov aas add je pop stc out arpl fwait jmp in not add movsl mov addr16 (bad) enterw (bad) repnz sub add cwtl mov dec bound stc inc mov in movsb mov out lods jmp sub sub (bad) iret gs lods pop cwtl add sbb popf mov iret pushf sub lea sbb (bad) lcall inc (bad) aam mov xchg and mov jnp das pop cltd test ret test and push xchg mov adc fisubr clc xchg push ret sbb fdiv aam ret inc and and mov mov lods xchg cwtl ret test jle dec mov in pop mov pusha pop adc mov mov (bad) arpl fildl mov ret and fsubrl mov adc mov mov loop leave les enter mov sub push cmc xchg jne or xor adc xchg mov push (bad) xchg mov in lds sub (bad) ficomp and nop and and cli push xchg mov mov jno out (bad) lock adc (bad) aas push xor pop mov inc (bad) mov mov xchg mov and adc xchg xchg lahf push addr16 pop lcall dec pcmpgtb lds out bound enter fisubr mov bound mov add push movsl or and call fbstp lock mov dec scas adc add jo sbb in jle into nop fidivr lock movsb sub mov arpl insl iret sbb outsl cs adc jl fbstp ljmp js movlps jp mov or xchg shrl push jecxz enter into mov xor xchg addl inc movsb and adc pop jae fwait xchg fcmovb adc push pop xchg cmp dec mov stos fild clc loop test ja (bad) mov (bad) popa rcrb cmp fsub int3 (bad) adc jae sub cs and pop xor dec pop repnz lcall adc sarb repz cmc (bad) into push out cmp xor cli add cmpsl fbstp movsl adc fcoml push (bad) sbb cmpsl data16 cli aaa mov sbb fdivrs gs popa jae mov xor push mov (bad) mov pushf lret mov fisttp cld pop mov nop sbb loop jae int3 mov clc (bad) mov fsubrl mov sbb inc pop movsl or pop in cltd loopne jge add fisttpll xchg loopne aas daa mov shlb xchg or adc and scas es mov into jbe ja and nop (bad) aaa mov in loopne jno xor add popa (bad) sbb xchg test push jnp (bad) sbb or pop add cmp loopne and push sub xlat sarl stos mov xchg xor (bad) jmp sbb mov sbb int3 or jl push out pop or jnp movsl xchg (bad) stc jo xchg push jnp into rcll push nop add cld jecxz adc test xchg or mov mov neg sbb push or xchg adc scas test pushf mov lcall xchg jae fs xchg xor mov add stos push adc push push mov adc sarl or inc mov mov iret lret aaa and xor fwait ljmp sbb pop lods (bad) push stc or sub adc fistl sub int out jbe ffree lods cwtl insl xchg bswap (bad) sub ds xchg cmp cmp mov pop pop (bad) cli inc dec movsl out xchg sub xchg or cmpsl in bound mov jl add lock mov shrb push lret (bad) cld add jge xchg jno cwtl testb mov jo imul sub add sbb mov imul rorl mov adc (bad) (bad) rorb int3 dec fbstp xor add (bad) mov mov pop mov adc js call lahf push or cs sbb xchg sub xorl ljmp xor inc int3 pop mov jp adc and mov test adc jbe es repz and dec imul inc jno adc cmp rcl arpl add mov dec inc xchg sub add aaa lock cli sub push add and fidivrl sub (bad) in add test mov xlat mov adc enter iret sub xor imul add orl call (bad) sbb sahf iret dec fmuls dec mov out sub in in icebp call jp sub scas rorl mov mov js pop add xchg inc lret repnz push (bad) lcall sub or icebp or out add mov and mov (bad) inc inc fdivs and mov arpl pop or rolb xor repnz pop mov mov or inc push sub mov xor and lock add and fadd sahf call mov pavgb rorb cmp add cmp fcmovnbe cmpsw or (bad) (bad) addr16 jge mov sub dec inc icebp jae jnp mov dec fcmovne ja int3 sub shrl loope cmpsb ret mov das leave clc std jp push int3 in js jl icebp movsb sbb (bad) cmp nop ja cmpsl (bad) in outsb sbb mov fldcw pop pop insl push flds pop bt add jp pop xchg mov je mov rcll (bad) dec push dec mov adc loop imul jo jge push sahf adc loop inc sub int3 sahf sub and mov xchg push sbb js stc (bad) sbb ds mov or lods (bad) rorl shrb mov pop push mov aam (bad) lahf (bad) lret jno (bad) ret jne cmp lods jae sub xchg aaa fsubrl daa adc movsl mov inc int3 inc inc and ret movl push mov sub add movsb push xchg dec insb and int3 and adc and or push inc push (bad) pop pop push xor and (bad) imul insb shrl or inc data16 jle dec in mov jle in rcrb add add add test fistpll bound and loop leave fisttp lea mov je mov pop mov pop lret dec xor subl scas or sti out and mov push test adc sti adc and aad in pop aas jmp lret mov movsb test das add cwtl mov mov test inc clc and imul adc inc ret clc jmp dec loopne mov cmp push inc test pop jge jns add push jmp insb mov xchg pushf xchg aaa rol cmc adc sarl add cs fdivrs je dec dec sub xchg sti lods jne or pop test sub push pop push dec shrl inc add and movsl push jmp rol fmull jns pop push in adc fbstp fstpt xrelease punpcklbw or rcll loop xor add sbb inc jp (bad) cmpsl outsl xor and stc fistpll enter dec sahf ret insl loope sti push sub sar sub daa jo and pop das add pop (bad) ds fistp sbb inc imul gs notl enter cmp jo mov enter (bad) adc fnstcw stc jge add jo subb sub movsb and std xchg mov cmp aam iret in arpl lods cld rol push sbb adc mov xchg sbb mov test xchg push push dec add xlat xchg loopne sbb mov or rolb into pop sub decl add mov ljmp pushf xchg jl scas cmp lcall sbb imul mov (bad) fsts push lds pusha and inc jg pushf mov push inc popf cmp jle jmp orl adc (bad) je jmp popf outsl xchg popf inc (bad) cmp mov cmpsb xabort sub push mov mov lcall inc or and stos (bad) push pop cmc mov movsb xchg in lods shl nop add pusha push dec int rorl roll call adc sub aad (bad) out mov (bad) das sbb xchg sti sahf rcrl xchg lea in daa scas cmp (bad) fistl and mov push jmp sub pop add push and cmp adc push or fs out inc cmpsb test inc sbb push xchg mov ljmp dec js pop movb cli add xchg ficom or aam pop jg xchg adc inc mov cwtl add mov (bad) and (bad) stos rol int scas mov sub add fs mov ret icebp ljmp add stos imul mov xor lock inc xor fsub push int3 xchg sbb cmp fs mov mov lods adc jnp fistpll adc dec adc loop fadd add clc test popa ja outsl dec jne daa test pop mov jne fnop mov or jecxz xchg fstps xchg pop jge sbb mov scas pop fidivr call sbb adc xlat adc (bad) scas xor scas mov arpl and in aam imul cmp jp sbb shrl fildll imul cwtl sarb sub jge fwait mov cmp mov cli mov cmpsl gs sub or pop rcrb mov xbegin in pop (bad) xchg cmpsb sbb ja cwtl jo insl sub mov add ficomp adc nop fsubrl inc int3 xor ja inc jbe dec rorl push xchg in jae jnp pop mov cmp sub add sub pop in cwtl inc cmpsl (bad) inc cmp sbb pop dec sub outsl mov inc mov jo mov mov xchg cmp ss fbld lds cmpsl push (bad) (bad) xchg lods add jge cmp and in adc xor dec aas and (bad) out stos cmpsb ret mov mov cld aas rcrb int3 and ljmp cmp cmp mov xchg arpl (bad) mov jae fs xchg cmc sub rcll leave mov xor pop cs pop mov shrl cmp mov adc lahf xchg mov xchg dec sbb imul dec cwtl jnp mov pop push jae loope adc jge jae inc and fcoml jno inc clc pop xorl mull shll lea stc adc adc and or int3 popa dec mov outsl or sahf mov or cmp test push test xchg ja rorl fstps data16 adc jmp adc mov sub or movsb xchg loopne int3 and cli mov in add cmpsl cmp jmp mov enter loopne (bad) adc and jbe aaa jns inc movsb sbb iret negl or adc pop xchg mov pop enter sub inc sbb xor fsubrs or movsb jmp cmp (bad) mov lret (bad) xor jg hlt push (bad) xor push es loopne mov loope sub stc adc jno sub dec sbb loope mov stc sub mov stos addr16 add shrb fbld int3 push mov inc adc int3 pushf adc into adc (bad) mov sbb loop jns stos add lahf mov dec (bad) adc iret push repz mov cmp mov mov xchg in mov jle dec add nop loope pop fcomp sahf stc sub pop (bad) out sub pop das dec aad lcall adc jmp nop addr16 cmp mov or xchg ljmp or mov aaa push lds test fcomp imul sub pop iret (bad) fwait imul fmuls mov test iret dec or and adc fistpl aaa aad cwtl iret mov sub sbbl mov (bad) xor stos mov popf pop sbb inc xchg push jmp pop iret jo mov dec add xor fdivrs lods push std xchg lret add jecxz cmp insl adc psrld adc movsb je loope lcall cmp pushf xchg les repnz test (bad) push loopne or cmp lret std adc fnstcw add and mov test mov loopne (bad) mov in push and mov ret jnp aas xchg push out inc iret cli pop mov mov in xchg fs and cs mov pusha pop sahf xor mov and add mov push subl mov push cltd aam cmpb lahf inc cmp outsb mov (bad) sub sub pop lcall and dec add nop mov dec adc pop out arpl pop cwtl into mov sub adc dec jae aaa aas dec sub mov into sbb in out sbb jae sahf std push or (bad) sbb push leave out sub fist cmp jne inc xor mov iret test push into add test sub mov and adc push or jle mov fistp sub loope int3 cs rolb push (bad) adc fisttpl cmp mov stc outsb test and add daa test fildll push jle fdivr inc pop add or push push push (bad) jo pop mov mov sbb xchg xchg xchg xchg push (bad) mov mov and or clc mov pop inc imul fdivrs inc or mov pop test sub lods arpl roll fnsave icebp imul mov cmp nop xchg fldenv or es mov inc inc add lea enter sbb adc popa nop add mov jo mov dec sub stc sub sti popa test mov or push and mov arpl bound fmull inc das xchg adc push cld rol rolb push pop je push imul sub ljmp mov mov xchg cmp outsl jecxz push clc adc or test jno sqrtps movb loopne je loop mov inc (bad) (bad) mov js out shl push mov and sbb mov or sbb push rolb pop pop pop hlt out mov ds outsb sbb popa jmp xor mov jbe mov enter imul push sahf call loopne add mov (bad) cli pop pop or clc hlt cld and lret mov (bad) loopne xor mov mov sub fildl aaa das into daa xor sub inc inc sub add pop in insl or mov push mov mov sbb lret jecxz and cltd jno ret mov loopne lock push mov negl dec inc xorl jecxz aam les (bad) xor stc and push sub inc inc mov into rolb lahf adc stos test mov or mov mov pop mov cmp mov arpl pop out mov xchg test hlt ret sub pop mov inc mov and mov adc add jge pop inc out inc inc imul mov fcmovu cmp mov popl leave jb push lods add les hlt jmp adc sbb xor add add into or cmpsl cmp xchg cwtl and adc pop xchg in pushf cmc mov ljmp add pop loopne pop pushf add and dec sti cwtl mov fimul stos test xchg cmc (bad) jnp jl xor xchg or clc sub xchg stos xchg cmpsb daa inc sub call mov (bad) ss popa xor jns bound mov loop jb push leave adc jo dec js mov add ss push cmp mov fnstcw adc adc xor and inc cmp adc cmp mov cmpsl test xchg mov gs or fldenv dec pop xchg lock std jp sub out and leave inc inc cli fsub and int3 sub outsl (bad) call (bad) pop mov and cli in dec rcll lods nop jo jno mul lea or adc insb rclb mov inc out inc adc pushf (bad) stos sbb pop adc imul out mov dec or (bad) call jo or pusha adc mov stos jbe cmp in movsl int3 push xchg stos mov mov pop aam jns fsubrl repnz mov pop mov xchg ret in jl shrb mov push xchg xchg mov arpl dec add inc mov sub pushf xchg mov mov lret add sub mov rolb mov in mov cmp bound jge jno pop xchg daa enter sbb mov pop in dec lea push pop pop xchg popf mov dec addr16 sbb lea jno xor adc pop loope ljmp or mov and iret xchg (bad) adc orb or ret sub push sarl cld dec sti cmpb adcl mov (bad) xor enter cmp sub or outsb xorb js and cmp and bound scas xchg cltd adc in xchg stos xor cmp push aam mov jle mov adc leave scas xor loopne xlat fbstp mov cmp mov cwtl das in push adc or ret xor addr16 cmp loopne nop xchg mov out push loopne fstl enter subb ret jb push mov mov (bad) stos outsb stc inc push mov xchg ja push (bad) mov fldcw jb jle das xor pop movsb pushf lahf subb jl add loopne andb mov add inc je jp mov lock stc or subb push push fstps adcb or cmpb repz inc adc movsb cmpb dec loope pushf pop sbbb test imull mov adcb clc out out adc pop fsubl cs adc ljmp xchg pop in orb mov cmp or mov xchg les add gs and push push loopne sub pop cmp and fildl add das (bad) shr popa xchg lret inc lcall rorl test adc out (bad) or daa push and enter call or sbb sub push pop popa imul xorb loope xor add adc and xorb inc dec push pop bound jb orb mov (bad) ljmp sbb js mov dec push pop arpl mov mov ret lret rcr jecxz jmp sti add adc and sub cmp dec push pop fs insb je sub mov repz sti shlb inc lret xor mov mov mov imul loop sbb adc dec call (bad) pop stos es mov sbb push inc lcall js int mov mov adc mov jmp subl sub loop sbb adc mov mov ljmp adc add popa mov jecxz fwait jecxz sti incb cmc sbb jmp test rorl and xchg lahf add jbe sti daa test roll (bad) icebp lcall insb mov xor test and dec icebp push rolb push pop xchg inc sti mov adc mov jno dec sub jmp mov mov sar int3 cmp mov add jmp sub dec ljmp mov dec jmp lret ss adc xchg popf mov mov mov stos lret adc push jnp shlb add shll xchg cmp mov in icebp in lret cmp fldt cmc mov jmp data16 hlt jmp leave and lret add stc inc addr16 xchg jge leave adc and lds movsl stos rdmsr jo mov mov and push lret imulb ret xor add repnz stc lret jmp xor les pop xor stos outsb movsb adc dec add push cs xor icebp cltd add gs pop sub mov movsb xchg pusha xchg cmp mov test cmp inc pop and push daa cmp mov add sub xor lret mov lea rcrl andl dec xor xchg mov adcl leave daa test ja mov cltd inc xor rcrb pop jne mov fstpt out xchg mov fildl scas repz lcall mov int mov imul xor and xor jae insb js sub push adc int3 mov cmp icebp and arpl xchg ss xor loope sub js (bad) leave sbb inc adc push mov cmp mov ljmp loope aad fwait lcall xor rorl icebp inc nop dec bound mov ljmp out jb lods xchg sbb arpl mov or daa mov adc adc add clc fisttpl inc push test dec inc add pushf mov sub (bad) mov mov mov fcoms loopne mov mov hlt (bad) cld dec add adc mov scas andl ret cld mov aam nop dec mov sub xchg lods nop add mov nop cmp ret aad mov nop pop jo nop nop lods pop mov aad jp or mov add test jl sahf (bad) test mov (bad) int3 aam and hlt cld add and dec push pop andb jge lea mov vpmullw and cmc std push push push push andb ss dec push pop andb jle mov mov (bad) into (bad) fiadd pop movhps andb aaa aas inc dec push pop andb jg (bad) xchg lahf andb xlat fild or sbb subb cmp push pop pusha enter add mov stc cs cmp adc test sub adc inc push jmp jne push nop mov cmp pop dec cwtl mov mov (bad) outsl xchg and xchg fs ror jns repnz cmp test fcomps (bad) roll mov mov shrb stos movsb mov jecxz ljmp stos xchg scas sub data16 rcl repz sgdtl loop ret or add and push or mov jbe shlb ret (bad) mov and mov leave and test sti rep or sub rol (bad) rolb rcll gs cmp sbb mov cli xchg jnp fsub lret mov popa loop mov jae mov lds add mov mov mov adc adc mov sbbl pop ss push mulb and jecxz jno ret movsl xchg push dec repz add push (bad) xchg or test dec mov jne mov sbbl dec pop stos in stos adc sbbl mov bound test in enter push lret adc in xorl cmp es flds mov dec dec sub sbb cmp xor jno sbbl adc loope cmp add push xchg ret add test mov add lea loop cmp sbb mov or call adc mov (bad) mov bswap pop mov inc adc (bad) or es aaa or scas adc lcall push add cs cmp arpl mov sub sbb lods xchg sub sbb stos sbb push lret inc stos mov jge lea mov push lods stos es push in clc inc cmp mov xchg sbb mov jmp or mov test jmp mov mov and leave xor or cmp dec test jb (bad) es sti fmuls (bad) xor add and lds aam and cltd out sarl sbb xchg mov adc pop out inc or xor mov and enter (bad) jge loopne loope mov add mov je or shll cli ret push ret in test adc adc mov ret or mov adcl arpl inc mov loop (bad) mov adc mov mov inc int3 and inc or mov mov or int3 xchg addr16 daa or (bad) cmpsb int3 inc adc mov test int3 cmpl or arpl bound and fcoml (bad) adc or dec mov les dec or (bad) fwait mov adc mov mov add stos cmp call nop add lcall addl cmp dec cmp mov fisttp adc cwtl add repz clc out test and lahf mov fdivl cwtl add xchg out and pop scas lods nop mov jg add imul out cmp mov (bad) sti cmp sahf adc dec nop cmc mov mov xorl sbb movsb jecxz sbb push repnz xor fild repnz push loopne ret mov sub cli sbb jge lcall jmp aaa dec movsb loope xchg push push adc dec dec pop daa inc rcrl dec add fnstcw mov jb cmp jo rorb ljmp xchg lea mov xchg loopne addb out mov orb fsubl push cmp mov mov pushf pop dec sbb xchg inc inc fstps (bad) sti in xor repz pusha arpl int cwtl data16 sub dec loopne pop xor cmpb jns cmp jb push (bad) pop psubb xchg xor xorl jle mov pop test push inc aaa cli pop sti iret sub fs leave scas cld insb dec mov add or sub mov outsl jmp mov lahf xchg sub aas sarb out push ror mov mov icebp sahf loopne sub fs popa add mov or xchg mov mov mov iret lock fwait call rorb (bad) jns sub dec dec sub xchg dec adc sbb mov mov (bad) enter add sbb repnz inc jle mov (bad) enter push adc jmp sbb cmpsb sub or xchg (bad) adc ja push add add ljmp inc addr16 mov fdecstp dec sub jmp pop shl sbb cmp jae and cmp adc jo enter in loopne cmp adc inc add out sub cmpsb pop dec inc stos cmp sbb test push icebp xchg add inc (bad) mov jp test inc or sub lcall out jge cmp (bad) and lahf pop cwtl insw (bad) pop bound inc std add jae test mov insb rsqrtps add mov sbb xchg inc les xorl out bound dec mov cld stc test xchg fisubl dec push sbb sub fucomp lea xor cmp pop lock jmp mov or pop lcall insl and and outsb cmp fwait mov push pop sbb lea inc lcall bound aaa rorb push ret mov and out or xchg shrl call mov sbb mov sub sbb xchg test dec imul test push adcl mov addl push cmp loopne enter xor rolb loopne adcb enter in mov xchg add xor jl ja mov enter mov out stc adc push xor insl stc mov les shrb mov inc ja pusha cld mov push mov ret or mov sub xchg ja mov xchg dec jle mov push sti test or and mov inc lcall mov and inc and push cwtl inc jg imul adc bound mov add sbb mov pop enter adc test adc or xchg fwait stos jnp push sarl sbb mov add repz xchg sbb mov sub test mov xchg sbb jle mov push cmp mov mov or aam sti push hlt mov sub cli in xor es shrb mov or fsub xchg mov in in or cs ret (bad) enter mov (bad) nop (bad) loopne dec inc enter mov inc sbb push add gs addl mov (bad) add inc inc xchg jge add test int3 sub lcall arpl in out push arpl add cld or and (bad) enter mov add scas jecxz and sbb mov es xchg push loope or inc loopne loopne enter mov or jns ret and scas loop ret movsb stc or xchg mov int3 gs mov in out xchg nop mov sub add std test and or cli test mov (bad) repz nop sbb add test add popa xchg test and mov add ds lock in add out mov imul xchg out xchg outsb add add inc rorl adc add fistpl add mov (bad) aaa cmp inc iret inc and push sbb out bound lock mov inc daa sbb push cmp or adc dec jae movsb stos mov (bad) enter repz loope jl andl lea inc push test xchg and lods out hlt and push ret scas lods push push ret sub inc (bad) out test fnstenv loopne insl push rclb loopne fadds add sbb les inc rorb push sti pop mov adcb lock cmp and cltd push jbe mov pop rorb mov (bad) enter repnz out adc (bad) mov push mov and enter (bad) enter mov or jae int3 aam push mov dec out popa mov mov outsb out test aaa int3 notl dec xchg mov mov ret adc mov ss xchg mov or xchg ret xchg xchg arpl adc or xchg andl ret movsl xchg mov or addl push popa or cwtl enter adc add xor ret addb or cwtl cmc es (bad) mov imul inc cmp gs push pop es pop jmp int pop adc xchg and add stos divl cmpb mov sbb in or jge xor adc call inc imul jns jp test lods inc mov push mov mov xchg sbb pushf push shr mov imul xor adc lock popa inc push std cmc add and jecxz xchg push sbb sub andb pop (bad) repz rclb mov push ljmp sub xorb mov cmpb loope cwtl add jo mov repz dec jle sbbl lock daa rclb popa sahf jne inc (bad) fcompl adc aam lock testb orb les or mov mov sbb rorl pop mov (bad) xchg sub nop cld lods xchg cmc sub (bad) jno add xchg xor xlat inc xchg subb out lds movsl repnz inc test aam add mov mov inc cwtl movups cmp test inc adcb jb xchg push pop mov add dec inc cmp cmpb loop out adc and bound jecxz (bad) loop ret clc push repz dec cmp imul xchg xor mov lret (bad) jbe fwait dec pop orb or xorl jae mov xor rcll dec test adcl cmpsl pop mov cmc xorb mov popa push push test jbe and cmp std rcll dec aam and sub push push xor and xor pusha popl leave sti loop inc rolb stos shrl mov mov dec rcrb sub in jecxz or or xchg mov in xorb out xchg xchg fimul push fistpl xchg xorb dec add xor or pop dec shlb pushf in shll inc mov ret aam pushf (bad) mov sbb test fistl std int3 lds addl xor sahf (bad) das in int sbb aam lahf pop sub addb mov cmpb je adcb mov mov call push insl ret (bad) dec imul inc lcall addb out loop les test bound lock add cs xchg push push aas xchg vmovaps dec cmpsl cmpsb dec loope or ficompl push mov jne shll xor adc popf mov xchg cld int3 aas rolb clc or push pop and loope adcb inc jle bound inc mov mov mov cltd jb mov (bad) in xor dec test ficom add faddl dec mov inc mov popl push pop add loop sbbb mov (bad) sbb andb cmc add orl lcall test or mov gs xchg adc push xor lret sbbl pusha adc cmp cmpsl xor ss mov ds pop mov cwtl scas test test pop lods dec inc int3 push leave add pop xchg mov jge subb cmc jb cli mov fstpt in repnz jo mov fiaddl and add lea jb cmp sbb popa sub push (bad) je mov and lods jge push add and xchg push xchg jno (bad) daa scas fwait xor xchg shrb (bad) aam shr mov sub xchg sub dec push cwtl leave cmp mov testb test scas mov jecxz test clc jmp andb adc fwait jbe imul aam pop xor sbb and nop adc ret call sbb cmp push lea outsl rcrb cltd lods xor popa xchg pop jo sbb subb jmp cmp add lret fildl das divps mov add and loop das add and adc sbb stos inc fiaddl xchg inc sbb scas jno int loop out outsl add mov addb cmp inc aas push adc incb pop add mov xor cwtl and jnp bound hlt divb cmpb mov js push add and ret popa mov pop addb fcoms test subb hlt lea pop push lods push or and adc adc enter cmpsb and sub andb ja cld mov test stos inc mov mov aas (bad) dec popa popf jns std fidivl or insb test xchg cmpl aad pop cli add and mov addb pop and aad iret loopne add push cmc subb mov push fdivl xchg icebp lods mov pop mov add cmp lcall js mov xchg outsl xor das cmpsl push arpl dec mov shll addb xor dec pop lock dec lcall icebp inc sbb xchg sub test daa andb ljmp inc mov fwait test sbbb push sti out xor (bad) aam mov test add xchg subb sti xlat mov xor aam xchg dec add fbld or orb jmp xor mov data16 adc adc add jns arpl imul dec cmp add mov icebp dec cli arpl push push imul mov add cmpb adc into bound fldl pop push insl popaw fcoms sub stos stc mov imul imul cwtl lea aam sub add fcomps test xchg pop mov test cmpl jno xorb ss inc sarl mov push jl aad popa outsl pushf mov adc or push xor or fldenv nop jb lahf and cmc add adc xchg fcoml dec and (bad) add cmpb pop ja pop fldl push push negb mov push insb pushf xchg push xor out ss fsubrl inc cmpsl scas cwtl inc jmp adc mov movsl mov (bad) lock pop (bad) and xor mov pop into inc mov cltd xorb mov push sbb push (bad) or orb push mov mov loop aas push sub mov or xchg cmpb fmuls push cmp sub arpl testb sbb fldenv cmp push xchg or cmpb ljmp cmp jmp pusha inc shrb inc insl scas pop scas or adc out fistp inc dec iret fildl mov fnstenv mov adcl cwtl stc mov (bad) fdivr add rcll lock jns repz (bad) sti lret orl mov jns js pushf inc mov fldl adcb insl popf andb mov xor push xchg cli sbb fcomps out cmc ja mov sub adc out add pop inc push in sub xor sbb sbb in add add rep stos sbb lds inc (bad) sti mov dec xchg roll xor pop dec mov xchg jmp outsl cltd andl shlb cmp push subb (bad) sbb out mov mov or add push mov xchg sbbb and jb push imul pop mov or jmp cmpsl cmpsl push and outsl decb xchg mov js,pn jae loop pushf pusha dec fwait sbb pop cmpb lods inc pop test hlt lock ljmp stos push inc inc mov loopne mov dec pop ja subb lods lea shr xor clc xchg int3 sbb std adc (bad) and call cwtl imul movsl dec jae (bad) or sahf pop inc and lcall sub stos and inc xchg cmp (bad) les scas inc push stos mov nop and pop add jge imul cmp bound cs sbb stos fstpl ss or jns ljmp mov dec imul inc pop ja sbbb xor inc mov sti (bad) and add enter in xor loop loope push out xor addr16 dec (bad) jns sub xchg pop adcb mov jae adc or stos add sub cmp or xor cwtl xor xor fistl movsl orb mov pop sub jno cmc popa xchg arpl sbbb mov cmp jl aam xchg xchg repnz stc push sbbb (bad) cmc dec xchg addb lods stos jmp push add jb test call lds fsts loope icebp fnop mov in scas sbbb (bad) paddsw pusha push adc mov bndldx ret and sti fcmovnu ret or xchg icebp jp xor popa jnp repnz sub std shl mov mov outsb stos add popa popf mov add imul lret arpl out je sub adc fdivrs sub cwtl nop mov dec xchg dec and jg rorb xchg (bad) je dec lds sub rorb cmp ss xchg cmpsl into push mov push pop add or pop xchg rorl add push and je lods in push into mov pop outsl inc add adc pop shlb add rolb mov sub shl add enter mov mov adc mov mov cltd enter (bad) fmuls bound add and int3 adc mov sub add add and shrb fs inc jmp adcl adc scas mov add xchg mov mov or jne (bad) (bad) mov (bad) dec cmpl ret sbb add les adc add mov and add xchg xchg adc dec ret push add xchg pop mov adc fs inc xchg addl int3 ret mov mov push inc stos dec and mov mov xchg test pop mov cmc popa stos mov out insl mov mov bound add mov repnz mov push dec jle xchg or aad add adc enter ret cmpsb xchg xchg adc add xchg inc mov adc mov arpl int3 loop mov and or or cwtl or addr16 pop adc push mov inc movsl in or stos pop int shll fstpl inc icebp mov push inc sbb inc mov mov jecxz nop sbb lods mov inc rcll loopne enter movsb test movsb or adc test add and jo add cmpsl enter fisub loopne jle inc adc mov cmpsb cmp xchg and or or push or adc or stc xchg enter int daa in mov dec fisubl sbb into or and sub xchg sub lea popa cmpl mov sub sub lods ret dec mov test sti mov jge pusha in inc ret push mov std rorl mov xor cmp mov mov frstpm(287 sub es clc pop das add stos fildl lcall cmp stos aam add leave cld mov mov pop or cs je dec aaa and in mov mov call adcb pop cmp xor push and add lahf jb test or fs sbbl adcb or fs lret mov cwtl inc arpl scas mov jp mov cli xor out outsl cmp lahf sub xchg loopne mov adc or dec inc dec out bound popa pop popa push cld jo repz cmpl rorb and insl inc cld cmp js xchg cltd es fs subb mov push movsl dec push cmp aam cmp and cmp lock popa and sbb bound push adc inc repz cwtl loop and cmpsl lds sub test dec lret add adc (bad) xor jmp add loope xchg imul push jne mov pop lahf inc cwtl nop cwtl inc push cmc jle stc aaa cmp mov mov leave xchg movsl push cltd xchg add lods dec rcrl or int3 clc adc out ja sbbb jb mov mov aad mov lret clc dec sbb popf ds in (bad) insl mov (bad) xchg xorb out test movsb bound test xor and lahf mov ljmp dec push in mov mov lret outsb mov lods jp imul jg pop lea adc js push sub cmpsb adcb test pop ljmp add sbb mov andb ja inc mov icebp push adc ret dec xorl dec mov in lea stc xchg add mov (bad) jne pushf inc ret int nop sbb lods (bad) sub andb and mov addb test or mov cmp (bad) mov inc fisubr sub cli ss push fisttpll cmp add scas dec push xorl xor test ds dec adc out or test sahf popa push jae pop jp sub add cwtl dec scas (bad) push mov adc sbb or adc testl ret (bad) popa ret mov std sbb bound imul jo xor das xlat pop pusha jbe push icebp cmc pop sti insb and or mov mov pop mov mov out jmp scas mov xor xchg pushf cmp mov ljmp leave sub cwtl test subl cmp movl and cmp in or add add sbb jno jns imul and cmpsb or and push xchg mov ljmp lock clc jle or xchg xor cmpsb mov fs lods popa int xor movsb ret adcb and jns adc xchg cmpsl pop dec out push out sub pushf fdiv add push repz test add andb sub push xchg or imul mov stos xor popf dec lods add (bad) or jns dec fldenv (bad) icebp int3 orb fistpl add and jbe rol and loopne movsb add push (bad) std fiadd cmpsl push lods xor cmpsb subb call sub add mov outsb inc xor dec stos fwait adc push add add jge stos push iret rolb test into mov pop fisubrl adc daa sbb jae je test sbb ficompl fs dec sub pop popf adc mov push pop repnz cmp xlat cs and lret (bad) mov (bad) jo cmp fstpt (bad) jno,pn push addr16 aam cmp lods jnp lahf pusha cmp scas pop inc jns cmp std cmp jle cmp pop cmpsb pusha pop movsl push out mov lea sub imul loop jbe aaa sbbb movsb sub mov xchg add and sub (bad) fdivrl sub into fnstenv js push test loopne addb cltd ljmp cmpsb test shll aam and nop imul popf xor enter mov insb in dec jae ljmp shll addb mov add fcoms pop pop popf pop mov jns push jp xchg enter mov inc sbb pop sbb sahf (bad) das or or incl outsl add cli add psadbw cmc (bad) js mov mov jg cmp adc sub fimull cmp (bad) notl inc jno pop cmc add push addr16 pop mov mov repz mov dec cmp ret dec stos cld xor push cmp sub sahf pop in sbb mov orb iret ror sub cli imul add mov cmp push inc cli std xchg sbb in test mov inc (bad) mov sbb loope orl shrl movsb add int3 ds mov xorl mov into sub xlat (bad) mulb pop jp sbb jmp xor jnp daa pop call pushf push mov clc orb fucompp mov add lock add cmpsl push fstl inc dec mov cwtl and (bad) xor inc lcall add mov inc andb stc (bad) cwtl jb outsb mov std mov sti add cmpsb movsl push test iret push pop ret xor mov adcb add and ja aam mov cwtl mov mov mov js andb xchg pop add mov sub xchg arpl insb hlt dec add or es sarb cmpb out rorb sbb andb repnz pop andb popa shll int3 mov sub jns outsl xchg addb iret stos mov add push mov test ret ret adcb ja test mov mov push push push roll jecxz and fsubl inc fistpll adcb fwait scas cmpsb pop pop mov shr sub (bad) mov repnz daa loope aaa test xlat adc push test out or pop fwait arpl inc iret inc mov mov test push (bad) clc nop enter and xchg lds xchg popf gs movsb fs sbb es data16 sbb orb xor dec stos dec and aam pop mov or sbb push mov pop sbbl hlt add pop stos sub xor lods dec out mov andl add and dec jg sbb lcall pushf addb mov aad imul fldt daa sub ljmp popa je lods jne test cmp lea arpl push jle data16 inc mov mov cmp or in mov in mov ror outsl sbb xchg pusha sbb in push push ret and cmp test repz clc adc add enter or fsubs hlt sub outsl cld inc mov arpl test push push out iret push fcmove test mov lods sbbb adc sbb ja mov mov lock mov into and pop cwtl data16 mov fs add daa scas mov jge push xchg (bad) mov (bad) sti loop imul into push sbb lret sbb test add clc sub stos sbbb xor sub inc ss jne mov adc imul inc fdivrs mov push orb adc jb bound mov inc aas clc sbb stos or mov add adc imul lock adcb sub cld jns test imul lock rorb cmp loopne dec jmp shlb dec mov lret inc lods xor inc mov jl nop sbb (bad) mov ret addl and pop cs (bad) mov aam jecxz daa pop loopne inc jo jmp aaa lret xchg les out or xlat pusha add hlt xor mov or jns pop jecxz jmp mov les pop je andb xorl and push lock movsb push das rcrb cmp into xchg cld addb xlat jb iret ss orb mov sbb pop xchg bound dec mov fisubl push mov inc pop (bad) xchg xchg subb xor (bad) js push inc jno test inc add andb les inc dec mov pusha imul clc (bad) jne mov (bad) insl lcall jle xchg xor inc (bad) pop mov scas jno push cld pop in pop nop sbb sub dec (bad) mov insb orb cmc push popa or in mov stos push hlt out pop and jmp lcall sbb sub mov push jae aaa and mov in mov lds mov inc and and sbb cmc in fcoms pop mov push add je addb cs push arpl adc jae loop add push cs icebp or movsl inc testl loop popf pusha loopne xchg jmp ficompl mov fldenv adcb push mov cld jle cwtl cwtl lock mov iret cs fstpl jl sbb mov test sub into mov outsb inc out aad in cmp int pop enter lcall insb jge cltd arpl testl fsubl dec fcomp cld sbbb inc adc je jl orb (bad) int add xorb or and fldenv shrl in mov cmpl js cmp sbbb pop mov xor shl aas dec jb and shrl lret subb mov push shrb add adc addl subb in adc inc mov dec or gs and sbb cmp sub push mov aaa mov icebp xchg fldenv mov sti pop arpl cmp (bad) jbe or std mov push aam clc pop addl nop (bad) jne pop sti push xchg push loopne dec (bad) sbb dec movzwl xlat mov lods dec arpl xchg or lods push in or les push inc cmp fadd dec scas test clc in subb or cmp enter sub mov out cmp dec mov lock jno mov pop (bad) mov jmp xor inc xor push xchg xchg and fist sbb adc mov addb test inc push fisubl sub adc mov out inc je jnp inc mov orl in xchg jo aas addb insb and rorb lock pop int3 mov lea subb mov inc rorl cs sarl dec or hlt or xor adc loopne sub mov jns cmp movsb leave pushf scas movsb push cmpb push fsubs addb aas jmp std pop add and dec stos push fucomi jmp cwtl cs int3 and jno sub mov xor xorb neg or js (bad) cmc adc sbbb add sti cvtps2pd xor xorb add mov push mov dec cmpsb das inc add enter mov sbb xor jb cld and jp mov sub orb (bad) mov or int3 ss cwtl cwtl lcall add loop es (bad) jns ret sbb sbbb lock cmc cwtl cmpl lcall pop or stos push mov and aam repnz sbb enter ds stc mov dec test inc mov lods push bound push or pop mov fst insl mov sti sbb pop popa addl mov xor repnz addl rorl xor dec ljmp mov test or xor cmp and sub cmp (bad) adc xor xchg pusha cmpsb testb andb aaa stos xchg insl ja push add cmpb lods mov jns out pop aaa mov push push scas push and or and and mov fiadd and push pop jno sub cmpb js xlat xorb idivl mov mov lock mov inc jno test (bad) sarb mov repnz xor in int3 pop cwtl (bad) sarl cmp and jb or jne add repz ds leave andb mov sub xchg mov cs incl jb cwtl loopne inc cmc stos (bad) test inc daa (bad) (bad) xor movsb mov ret sub xchg push adc jno pop adc leave subb push jne mov sub mov sbb outsl or mov jl sub fildl cmp popa mov xorb jbe jno stos je pop jae xorb stc out sbb cmpsl mov adc mov fmuls xlat andl js mov lods adc push sti mov adc push sbb popf sbbb xchg data16 das rolb push sbb lret jne mov fistl push testl sarb add adcb decl mov faddl ret xor cmc lds test dec lock mov dec pop enter inc or test jno cld jge jae and dec popl xor mov pop or cwtl adc dec icebp das or sbb jno loop and mov jb adc jle movb adc es jmp cltd int3 sub push mov jge popf rcr mov mov pop sahf daa xor adc repnz xorl outsb inc or (bad) test shrl adc (bad) jl scas pop fmuls (bad) fwait and mov cli gs or arpl xchg pop xchg pusha imul push or jno jb pop test push adc aas adc xchg sub pop inc add or std mov fs mov xchg test faddl xorb (bad) and loop into andb push rolb add add push in xchg das movl mov orb adc repz orb es enter aam int add xchg test loope mov or cwtl inc push cmp fcmovbe fistp or stos lret adc and or dec xchg sbb rclb orb stos out andb xor sahf jg mov repz fwait aaa add (bad) out sbb jne js dec lret push mov repnz sar push icebp mov int sbb fisubl das adcb mov sub sarb sbbl insb insl mov leave addl and adcb jne adc add sbbl (bad) je test pop sti adc sub adc daa fiadd addr16 xor xchg test and sbb aaa or cmp shrl imul cmpsb (bad) push inc sar xchg adc inc andb mov int3 adcb mov rorb xchg inc andb roll push fadds int jl xchg divb cmpb outsb fnstenv pop dec repz std sub xchg push pop dec mov and popa pushf subb cltd gs loope hlt add fstps js and or jle cmp add inc (bad) insl jo jne mov int3 sbb push test test xor push stos dec inc push lock dec mov icebp addb jge out std mov out adcb mov ret cwtl push movsl aas (bad) sbb and and arpl jecxz clc ret push lea out daa mov jge add aam pop outsl sbb into lret enter xchg mov xchg push adc cld gs push (bad) sbb mov rcrl and movsl sub cmp cs mov (bad) dec rorb stos sub xor push scas adc mov push pop xchg fs movb mov insb ja xor in int push test and rcrl adcb pop cmpsb and xlat mov dec push cmpsl test addb lds pop cmp sarl and and fdivrs in add jne or mov mov and sbb mov mov fistpl pop jle scas lods push jle push and dec insb aaa adc fcoms arpl cltd pop popf es stos daa mov call (bad) mov push rorl sbb cmp add jle push jns jno xchg push adc push xchg addb sahf imul jecxz adc lea and nop cmc jle loope cmp xchg das sbb push jo fwait repnz mov cwtl xor cs stos push xchg addb cmc add jbe xor pusha inc sub dec mov lret mov dec sahf xchg pushf out icebp andb test cwtl dec mov clc out (bad) fmuls cwtl xchg cltd jle push xor mov rcll or pushf push out sbb cmp or ds enter mov xor lea (bad) sub mov clc and or dec loope loopne adc daa xorb mov xchg test outsl jno xor pop (bad) sti (bad) test add inc push movsl add mov mov out cmpsl sub mov subb sub and fsub jge enter inc adc sbbb frstor add mov push addl subb loop dec iret stc mov (bad) fldl add pop cmp mov and incb adc pushf popa imul sti push cmpb sub xor cmp mov lcall adc iret clc sbb mov mov xchg xchg addr16 add arpl dec test push sbb push xor xchg orb sbb xor xchg sbbb mov psrld and fsubrs cmp mov loope xchg xor push mov push cmpsl dec pop ds test pop addr16 xchg xor call repnz repz stc ret shll dec push sar and pop test js adc outsl mov pop (bad) cmp push movsl js repz xchg sahf gs sub dec add xchg imul outsb push out addr16 jp or mov je cmc lds push (bad) aaa pop xchg andl xchg ds and bound sti int pop lahf scas ret push adc loopne clc dec add lds push mov jae ret aas mov sub (bad) jp sbb sbb cmp cmp call add sub push cmpsb pop les stos push into or js xchg (bad) sbb jmp cmpb clc add scas mov sbb fistp cmpsl mov arpl test repz mov xor pushf data16 jle mov sub adcb data16 cwtl jno (bad) js mov stos fildl mov xorl xchg jmp pop cltd aam scas add or xlat mov icebp mov stos xorb test rcll jecxz in add xchg mov arpl imul jne mov sbb fiaddl dec mov jmp mov in pop cmpb cmpsl insl or adcb cmp adc hlt cmpsl stc adc loope test repz dec jp fucom repnz test xor outsb and sbb mov push cmpsb mov xchg leave por add sbb pop aad movsl push lock mov add add dec test push mov cmp movl pop movsl lret sub sarb inc jbe arpl mov enter push sub out jno xchg (bad) ret movb adc fs lods fisubl dec xchg sub mov adc jp cmpsl cmc std mov mov xchg mov sahf fisttpll jne sbb shrl imul add leave faddl or and ret xor flds subb fsubl addb jae mov ret aad inc stc (bad) jp cmp and cld pop adc mov loop mov and pushf daa rorl insb cmc loope sahf into mov dec loop mov int jl mul xor cltd es jb fcmovnbe and push dec outsb xorb testl xorb ds repnz jns and pop add in xorb mov orb mov subb inc mov xchg cltd bound cld sbb add rcl mov test xchg imul sbb inc push lret jge jb lods insb call xchg orl out es xor imul cmp hlt cmpb shl cs inc add mov ret pop cmpl add jp fwait gs add sub fsubs (bad) iret xor test lea cmpsb pop xchg sarl dec insb add adc xor mov (bad) pop ficomp inc adc (bad) push in xlat nop sub js cmp or xchg test cmpsb fist hlt jno (bad) xchg xor xchg push addb fwait and mov popf cmpsl jecxz dec jnp jno or cltd mov mov cmp imul fbld xor cli mov xorb fwait pop mov lods dec rolb adc in cld lret xor xchg add mov xchg (bad) sub jmp je enter push xorb mov ljmp cmp mov nop dec or (bad) ss mov cmp or popa sub sbbb xor lock leave cs inc in test (bad) roll clc push adc icebp cmp inc sbbb push pop cmc push mov scas sbb jge jmp aas mov popf lods push movsb mov xchg push sub pop push lcall popa enter sbb or mov fnstsw sbb (bad) cwtl dec out popf inc (bad) js mov push int adc mov sbb scas aaa stc add xor push cmp and xchg or cltd cmpb mov cmpb pop sbb lods inc pop pop dec sbb adc in das push ja mov mov lret or xor inc mov push mov daa add ret cmpb push clc sbb std add fcoms jecxz mov push mov jns (bad) push mov mov mov pop arpl mov roll addr16 pop test cmp fcomip sbb stc or stos cwtl push sub outsb xlat test inc mov sbb lahf pop add hlt icebp insl xchg fwait mov xorb jno xchg stc sub movsb loope repz test push test andb lods sub sbb xchg jo jb push dec call cli xchg subb les nop dec out pop jle xor xor push andb push fildl cmp adc mov inc mov call nop mov add ret add mov push into xor andb popa jmp mov mov ret and aas inc jb mov mov cmp repnz dec and sarb jp sbb push xor (bad) mov mov xor xor loopne and gs (bad) fstpl and mov in shrl mov dec pop sti sub or sbbb lods orb dec inc xchg imul roll cwtl pop sbb subb mov (bad) std xchg or or addb cmp adc js mov nop mov or (bad) jnp or mov xchg imul or cmovno adcb imul xor nop and out hlt or test aas mov int3 push pop scas ficompl mov push (bad) ljmp push lods addr16 mov xchg nop ja (bad) pop out mov or mov aaa dec pushf andl xchg xor rcrb pop cli decl xchg arpl xchg inc add js icebp add mov inc pop mov psubd cmp enter enter mov fldl addl cmp mov decl push rclb jmp push add and fldl cli jnp in out (bad) xor test popf popa shrb orb sbb push adc sbb and mov cmc jle pop movsb ds inc loop hlt dec lods daa aam mov andl lcall xor or inc adc sbb or jno dec sbb mov jno sarl adc out sub stos dec lock (bad) mov cmp int3 jge xor subb or nop movsl mov mov sbbb popa movb sub push mov ljmp sbb lods jge pop mov insb inc imul subb jo adc jmp out xchg test nop shll iret aas sahf dec popl andb aad out inc inc cld inc cmovbe and popf (bad) xor fldl add sbbb inc in mov mov ror adc imull orb push (bad) js add out test aaa xchg and push icebp je outsl pop cmc inc or and push mov adc jmp xor cwtl mov insl lds aam rclb push fsubrs pushf adc sar sti cltd pop test test inc adc les frstor pop mov push fcompl mov pop jle cmpb sbb jno xor push in adcl dec mov stc out test orl cwtl aam dec aad add mov sbb push mov fnstsw data16 rcr xchg xor xchg loopne pusha dec loop push test in or pop inc push aam cmp mov mov jmp xchg mov mov and ja cmpsl and test out and testl fs cs jp mov aam mov test fsubrs ljmp cmc repz lcall cmp cld or jge addb inc aas test fs test inc mov add sbb aad xchg mov movsl lods mov inc dec mull add gs mov push lcall xchg outsb cmp mov bound dec adc test call in (bad) or dec sbbb orb jbe cli faddl orb enter mov jb jno xor insb add xchg aam inc adc jns lock cmp and mov das leave rcll in push sbbb sub notb (bad) out pop lods (bad) mov adc testl testb movsb mov jmp call add mov lret xchg std dec stc xor mov adc orb mov fsubrl sbb mov leave sub cmpb nop mov movsb test lret repnz icebp mov add test mov add pop cmp dec nop pop ljmp test (bad) xor clc cmpb or push test xchg sbb (bad) jb jns dec shrb fsubp push inc jb mov or movsl addb or xor icebp cwtl ds mov cmc mov scas dec and imul pop stos push sbb call rcl pop mov and jns andl orb arpl int3 xor and imul sbb dec inc cwtl icebp mov add push push fld rcrb xor inc inc (bad) lock test test push sub and adc daa push andb shr xor add mov cli add xlat sbb add fmull addb les inc cwtl outsl cmpb push loop (bad) lock cmpsb je mov hlt or std mov add imul push mov mov xor cmp mov jmp out push and xorb lods mov or add jnp sbbb pop mov adc mov clc cmp jp,pt sub jns enter iret jmp (bad) andb (bad) loopne mov push sarb sti jmp xor xor test rorl test outsl cwtl cmp (bad) sbb inc sbbb add mov jnp jns push xchg shrb orb enter std add mov cmpb pop mov pop cmpsb repz lret in xor lods or imul (bad) repnz push fisttp add jbe jno cld mov jae mov or pop arpl lds orl mov sbb dec cmp push adc js push push icebp add mov scas dec shrb andb in nop in push sahf std xchg (bad) enter inc sbb dec lods push cmpsb sub test insl ret dec (bad) sti cwtl test loope mov dec sub call inc sub (bad) lea mov scas push and xchg or mov inc mov sahf cmp add add jno mov cmc rorb loop mov (bad) je jp stc clc sbb and popf pop lock int3 or xorb jno loop dec rcll outsb mov inc in data16 sbbb jo cmp lret rorb add mov mov popa adc cwtl jnp or (bad) mov cld dec subl adcb xlat mov add xchg lea (bad) lret jo xchg and push fistpl je mov stc pop pop fisub sahf es orb jnp and add mov out cmp pop data16 addb mov fs int ds bound nopl or fist mov cli mov and pop fsubl ret inc pop cmp mov jbe (bad) mov nop cwtl idivl add mov mov mov les hlt lock push mov dec jl and push mov lock sub inc mov test fiadd jp,pn xor int3 enter nop sub adc bts jge mov xchg push lods pop inc mov jne (bad) dec mov inc mov xlat (bad) mov dec xchg daa xorb or sub loopne sbb fildll adc int3 aaa xchg minps bnd jb movsb jg add test aam mov push xchg cwtl insl (bad) xor mov (bad) mov out or cwtl inc icebp out inc cmpsb lds outsl subb adc and imul loop pusha mov pop aad jns popl cmp pop roll mov sub push orb jb imul (bad) sbb es sub push lcall cmpb dec mov cwtl mov or cmpsb mov shl addr16 push pop mov jnp das (bad) or jne mov nop dec mov aad add add mov mov xchg sbb jb cwtl subb rcr sarb cli xchg inc aaa int3 xor sub fimull adcb jno push inc and cmpsl pop fs ret ljmp pop movsl jo sti mov push movsb push lods jp movb gs sbbb aaa leave xor cltd mov inc mov push in lods mov pop jle jnp xlat pusha and mov nop sbb addl clc cmc cmp and mov mov ja adc mov cmp clc aad mov int test mov xchg push add xchg adc sub sbbl xchg mov je adc mov jbe dec leave ret and inc bound aaa mov jb enter test xor adc cmc pop mov push movsl addr16 jne iret lea dec mov outsb sti imul jl mov pusha fwait and in push lock test add andb mov loope dec mov fistp or and pusha mov mov sub cwtl add fxch sub stc sbb fsubr xor jo sbb lret adc pop sbb adc fadds and pavgb lret mov out adc outsl int3 push pop add fsubs scas mov xor jae repnz fisub idivl push inc ret orb pop bound repnz mov xchg es ja mov lret sub lock insl ficoml mov mov cmc pop add cwtl sti add mov jnp or or outsb jmp mov mov (bad) xor addb jge and mov addb int3 iret xor scas aaa pop mov or cwtl sbb adc (bad) enter inc sbbb or sbb xor adc js pop mov lods stos sub je scas orb xchg mov push jecxz cli xor adc dec les sarl mov xchg or nop mov ds and cltd push mov sbb imul adc cwtl xorb mov (bad) lock cmp popa adc pop and jle fsubs push les lock xorl dec push je pop inc xlat sub inc pop adcb push jge pop mov inc mov std ret mov pop cmp pop cltd mov xchg out inc xchg sbb sub andb mov sbbb push xlat add adcb pop call pop add inc mov in popa nop mov mov mov xchg (bad) int3 xor stos adcb mov imul cmp xor gs inc adc nop test cwtl lret pusha outsl fidivr and inc push push cmp cmpsb add dec push cmp sbb ljmp outsl cwtl divl or arpl lcall adcb insb adc xchg pop lcall (bad) testl out sbb cltd out push aad icebp mov inc xchg clc xor push mov out sahf lds shl adc repnz fsubrs push andl push mov or mov or icebp cld and stos ret inc xchg test cmp and gs xchg aad les or pop inc out outsb xchg cmp mov pop sbb add push loope fisubl sbb enter pop xorb xor ljmp testl mov in pop ret stc imul popa jns mov (bad) cmp and and incl int fbld sbb xchg inc cwtl sti std or mov mov inc add sbb lds aas inc std sti bound dec enter rorl sub jle cwtl xchg outsb negb enter xorb or fcomps and stos pushf adc sub xchg add clc add push mov jl cmpb lea pushf push and gs sbb or push pop adc (bad) xor fsubrl dec cltd inc fdivs shll push mov inc xchg insl add jbe cwtl das (bad) adc inc jb std test aad mov clc incb ret loope (bad) test push and psubsw lock push add fisubl popa xchg je js in mov aaa enter xchg mov or dec ret cmp jo push lods das adc je repz mov addb xchg fs or mov mov bound xchg mov mov xchg std cwtl jg lods (bad) data16 inc in stos push pop xor mov sahf push outsl jp subb xor sbb mov ds daa mov mov sub andb jae out or cmp jno jae subb icebp push push fdivs jl insb nop push pop outsb pop sub testl xor pop xrelease andb sub lcall (bad) fcomps fldenv addb inc dec sub (bad) or outsb mov cmp add dec xor cmpsb mov repz lock stc in test adc cmp xorb inc jmp movsl push sbb xor jg xchg clc adc adcl sub cwtl out insb and ret push movsb sarb jnp aas cmpb sbb cmp cmpsb test xchg push call mov xor cmp xchg subb stos add and imul sub stc xor test jbe cmp push leave ret jns icebp cwtl fmulp out jno out and mov js xchg and test fwait aas lds push cli int3 sub push mov mov fsubrs adc orb add test (bad) lret and dec repz sbb lods and add xor insb out mov call mov hlt (bad) sub scas jno lea out aam mov add inc nop mov fdivr cli jge inc adc out cmp outsb xchg xchg sub movsl andb movsb leave cmp insl mov cmpsb sbb add jp pop sahf cmpl adc addr16 sub mov icebp fild jl nop mov (bad) jno sub dec adc rclb inc or mov push mov pop pop subb jne mov sub (bad) stc out or cmpb jno cmp pop ret orb push stc jmp mov data16 push push popa fcomps sarb orl fiadd push ss ljmp clc cmp repnz dec out xchg xor xchg dec sahf loop sub hlt int fwait orb enter imul cli sbb lret fiadd mov cmp pop xchg or jle pop data16 xor lret inc (bad) js and ds inc aad sbb xrelease rcr pop or daa test sbbb fcomps out mov test adcb jbe lock mov adc add pop in (bad) stos stc pop cmpsl push lds sub adc push adc or jns clc jg test jno imul je aaa push adcb adc cwtl mov cmpsl jbe stos add (bad) cmp rolb sti in test pop sarb std nop cwtl cmp mov push cmpsb das push adcl movsb adc ljmp inc jae cwtl pop out test mov daa (bad) fstpl inc movsb pop adc movsl orb out inc push add aam andb fldl mov fstps mov inc paddw iret inc fs pop adcl xchg jns das inc inc sub out rolb pop aad call (bad) mov sbb xchg dec stos pop in xorb xor pop test jb pop rorb jo gs andb lcall imul test mov mov push xor orl pop mov jo jl mov or scas stc mov cwtl mov dec mov xchg test frstor fmuls xor scas (bad) xchg lds pop in cmp cwtl lahf and and sbbb xchg pushf sbb sbbb pop xchg (bad) into rcrl cs mov inc or cmp movsb pop stc hlt xor enter incl orb addb lods push mov push adc jnp ret cmp push out lock imulb cli or lods dec loopne dec push and mov dec subb inc cltd xchg adc test sub jo (bad) xchg aad aaa or cmp faddl stc xchg gs push jp jb lock fxch subl cmp add aas fxch or pop stos dec mov cmc or in subb test sub icebp jp outsl mov cmpsb xor push cld pop lcall sbb add clc addb mov mov inc in repz jl and mov sub int js xchg jnp sbb xchg sbb fldl xor xlat xchg xor adcl inc hlt pusha and inc push testl cwtl sub cmpb inc lahf scas or into xorb (bad) ds cmp imul pop (bad) mov (bad) cmp roll pushf adc fild jle aaa ret andb jnp repz test and mov dec xor stos nop sub xor xchg cld mov sub jg out subl inc push sub lret fs xor lahf xchg jns pop nop rolb push icebp mov in (bad) nop dec push mov cwtl xchg test jno sub int3 or ret mov (bad) pop adc adc orb or xchg ret mov sahf jno popa push xchg sub fcomps addb sahf adc sub dec cbtw inc mov xchg (bad) xchg movsb out (bad) jbe orb jae test fistp fadds xchg adc mov cmp (bad) orb inc mov (bad) push es dec push outsb jl xor cld lahf (bad) ja sub xchg jo push lock mov add xchg mov test (bad) rorb stos test lret mov imul loope in adc mov and mov lock push mov jb stc mov inc insb push push lret je ss imul push lock pop inc xorb push fiadd xor cmc jae inc stos gs aas icebp loop int3 je sti or xchg sbbb inc test push scas lock mov lock cmp loope outsb andb iret xor jl lret mov addr16 mov xchg ret mov out push sbb dec mov mov dec ss lock xor inc mov mov xor jg imul jne daa leave sbb adc adc imul stos orb std add test aaa lret mov jne inc adc push add bound jbe loop sbb insl fcomps sub xchg xorb cmp or sahf gs jae jmp incb int3 test pop nop andb jle or lock cmp sahf into add mov shlb cli andl add js rcll loopne inc mov testl out ss leave pop fadds mov adc and test or (bad) or aad loopne scas adc and clc push fisubl int3 sbb mov or iret fcompl gs dec xchg mov dec test mov ja or xor jns std sub jge pusha mov js cwtl in fdivrs arpl int push popa test lods subb cmc pop or xorb mov out fisttpll loop cwtl pop pop popa gs cmp popf mov outsb mov push and orb pop jge out clc add (bad) icebp jbe fwait sbbb inc int3 mov fmull push je stos aas sbb jge dec mov out adcl pop sub clc xchg xchg sbb xor insb jbe mov sbb dec (bad) jnp mov ds cwtl xchg cmp nop and mov jg std add cmpsb sbb mov popa sbbb hlt add cs lods inc cmpsb inc ret and je adcb mov dec test subb cli pop inc xor (bad) dec mov ret addb mov popf imul jp dec mov ss adc sub sahf mov in sbb pushfw cmpsb xchg pop jb inc andb push add push jp in out mov and and addr16 sbb pop cmpsl mov mov inc popl sbb test inc cmpsl pop mov cmc add je sub jge inc movsb addb repz mov push test push cld test (bad) push sbb sub push nop xchg aas (bad) jns test cmpsl pop test sub jmp aad test xchg roll mov xchg data16 jnp adc inc mov dec or mov in mov shrb xlat jecxz or push bnd testb shrb shlb stc incl test shrb cmpb call mov test push andb sbb nop dec in or (bad) mov cmp cli cmp adcb arpl pusha pop sbb cwtl fwait adc pushf and mov push ret sbb ds jl scas out sbbb insb fwait pop out jp jg test jo fldl repz pop lock xchg mov sub and xchg cmp sbbb pop cltd clc icebp jae xchg xor mov pop adc or in movsb push mov (bad) jb xorb imul ja push xorb mov jge xchg adc cmpb or imul fadds mov xor mov xchg or icebp movsb inc jl sub or xor sbb xor mov cmp dec pop fs sbbb mov out test jecxz dec aam add add enter xorb xor xor test mov jo xchg adc popf mov das leave push ret sbb and jns pop out int3 shll add mov aad fadds cwtl cld mov push adc dec std xorl sub mov mov xchg xor ljmp jb int3 push lock dec lods (bad) sbb call roll xchg fs and sbb mov xor sbb lock adc dec lods mov frstpm(287 mov jl sbb mov adc mov mov dec xor mov sbb or xorl orb sub movsb sub andb add pop inc fwait and inc pop xchg enter push das add jne (bad) outsb xchg int xor sub xchg enter scas icebp dec bound andb cs lds jle mov mov fistp add in mov inc mov testl inc lods dec mov cs lahf mov push (bad) or jg xchg out cwtl mov mov (bad) and mov xchg js fisubr cmp jmp (bad) cmp cmpsb xor inc leave stos push in jle (bad) iret xor aaa imul out sbb sbb (bad) push out js cmp js jp dec int3 mov xor xchg clc ja xor cmp mov pop lods push cmp loope mov icebp add jl pop std bound xor test cli repz jno mov lds push sbb adc outsb test cltd mov jae aas (bad) movsl loopne andb popf (bad) ljmp in vpaddd scas xor pop xchg in xchg xor cmpb cmpsb jns pusha adc out (bad) jo cli mov clc lret jg imul lea mov inc mov add std mov cmc outsb mov add cltd bound in xchg jbe xorl xorb ret aas dec add cmp repz icebp ja jp xor pop dec stos xor mov pop and cmpsb sbb insl test fiaddl xchg outsb xchg ret je mov sub lahf in test out xchg jno mov xor add jp push mov xchg jno out cmpsb ret xor or lret stos lahf rol add test cmp add mov rcrl mull cmpsb subb xchg add lods mov cmpb cmpb fstpl cmpb stc ljmp imul xchg outsl andb in sub mov fisttpl mov sub push pop dec xorb xor aaa rcrl std movsl aad cwtl mov movsl enter leave gs xor pushf lods xor test mov mov mov or aaa cmc jge pmaddwd je fdivrs mov cmp cmpb fdivs ret cmp mov adcb into sahf andb lahf arpl jg adcl mov push add push and mov cltd retw mov lahf pop popa fs scas xor mov std fisub pop cwtl flds sarb iret push imul mov data16 fcomps outsl xor jb mov push test add (bad) inc xorl (bad) fcompp cmp jb jno scas xlat andb xchg and mov lock mov subl ret jg xchg out outsb xor mov movsb xor (bad) es ljmp lock lea loop mov push scas lret mov pop jne das mov loopne cld xchg (bad) lcall outsl mov adc lock or inc fidivrl sbbb lods idivb mov test cmpsl add xor mov call sub jne xchg out (bad) cs test orb sub xor call iret scas cs mov aaa cmpsl (bad) mov arpl repnz cld test and in jno repz cmpb cwtl mov inc int3 push popa or push imul outsb sbb rorl lret inc mov pop iret popa sub test mov lret sub fcomi sbb pop add adcb push jne orl jecxz clc in sub js inc ret add push cmp push mov push jbe dec jbe sahf aad or fcoml xor add jnp dec sub xchg outsb (bad) bt sbb cmp ljmp mov mov xchg xchg shlb xchg or sti xlat push adc repnz pop (bad) stos mov iret xor aaa ret sub mov inc arpl movb lock mov fild repz or or stos add and fild xchg ss xor xchg aad adc jecxz dec push stos dec jge gs test cld test xchg adc cmpb fistp adc adc arpl or xorb aas outsb xchg pushf push inc sub ret cli in sub lret out insb xchg xchg sbbb sahf xchg sbbl dec jmp cmp and repz jge or lds fsubs sbb addr16 jp (bad) sarb mov rolb lods dec jmp inc in lret push lods or push les sarb jae xorb mov fmul ljmp pop sti outsb xchg cltd cmpb js repnz mov mov jo push cmp lret adc and pop lds in inc outsb fmuls subb cwtl pop cmpsl ror insl xchg les into lret lock std das xchg jb pop sahf icebp ja sahf addb (bad) cmp test outsl mov and popf out aas sbb mov push inc mov jle test jb adc xlat xor subb sub mov cmp mov stc imul or aaa cmp (bad) mov push mov subb push test loop enter enter mov xchg jp xor xor adc addr16 mov jp mov cmp leave mov roll xor mov xchg orb push (bad) lcall movsw inc mov sub lods (bad) mov dec xor cld cmp pusha adcb enter mov xor test subb mov inc xchg mov mov int loope insb in sbbb mov sbbb nop jns mov jge adc lods push (bad) and or cwtl sub add xchg adc mov jae xchg mov mov jnp jp nop cli clc loope popf add test push int3 mov mov jmp (bad) jl pop jae test loopne movsb repnz xorb mov in cli push and jmp (bad) xor pop push cs pop mov repnz push sub insl xchg and incl movsb push out faddl test scas mov push hlt or js popf jb test pop fwait nop pop jae imul sub and ds (bad) xorb inc cmp and push (bad) (bad) mov pop adc inc lods dec pop movsb andb out int3 jmp ficompl jne adc mov rol xor sbb sbb sub xchg test xor pusha test cwtl pop lods pop jl gs es cli xchg xlat sub arpl mov push dec mov jo sbbl lret es and push lds mov clc call rcll flds mov jno bnd cmpsb cmp or push fisttp mull fld scas inc adc push ret pushf ficompl dec stos loop push mov add daa rolb addr16 aam or pop mov xlat pop inc pop ds inc nop pop xchg inc dec ds sbb xor mov cmp adc dec jecxz sub or sub repz or enter in xchg and and incb mov adcb mov sbb std cltd pop cmp stc add mov por xor push lods ss gs push fidiv fwait pop cmpb mov jo outsl xchg jmp (bad) call andb lods sbb dec sbb sbbb xor inc loope daa and cld adc xchg out ret ja lock arpl mov js adc pop mov addb frstpm(287 test int cltd lahf in gs sbbb ret adc pop addr16 or lea jae hlt rcll ret loop jb stos fcmovne dec sbb das mov xchg shrl addr16 imul clc lea jg mov sub out in or or or jp add jb dec pop mov fldl adc xor inc (bad) imulb mov pop sbb mov jg std or in cli xor sbb sti adc add js adc dec loop or mov je ljmp sti jnp cmpsb mov mov cmp neg ljmp sbb aas mov call loopne int clc xchg xlat sub mov xor dec lods orb mov out jecxz andb mov push cld xchg addr16 xor xchg into fiadd inc xor loope dec mov rcll jp,pn jmp mov pusha add sbb (bad) xchg adc jbe idivl (bad) roll mov ror inc test (bad) je jge inc pop jno sbb mov and jmp xchg test addb data16 adc arpl sbb clc ret or mov and sub cmp and jne cvtps2pd jle adc cmc cmpb inc jp fisubrl xchg test popa sahf daa xlat pop lock into xor lods mov xchg fwait out js or xchg sbbb out push test (bad) enter pop and int sbb pop xchg mov pusha ret (bad) fs and adc imul sbb enter inc mov pusha rorl mov outsb lret mov xor fdivrs mov mov cmp les cmp dec dec aam lea arpl andb xor cmp testl xchg adc mov xor shlb icebp add or incl xchg cmpb mov jns add enter or (bad) jle imul inc test mov jg jmp push cmp shrb adc incl jg nop cwtl js cmp jns test daa popf data16 jno (bad) shr test out or nop int inc loopne pop ret pop push dec adc bound jbe adc xchg imul xchg pushf and and rcrl icebp jp mov xchg cli add jno cmp push (bad) pop sub mov jne push fcomps jae xchg subl jg dec mov roll cmpsl loope push pop push jl mov and add pop cmpsl jge scas mov outsl nop pusha lcall pop (bad) lret fcompl ficomp dec sbb jmp jne imul mov adc je or mov adc hlt (bad) test sub fimul jmp pop fwait sbb jge jnp sbb or imul pop sti lea push or sub repz mov test int3 mov lahf dec clc mov xchg (bad) sub lods in adc pop repz xchg stc call outsl mov xchg push lock or jle fiaddl (bad) mov subb inc mov push inc mov ds mov and subb sbb lock fbld jne enter pop rorb and mov mov lock lea test lcall and dec icebp push jmp (bad) (bad) mov cli add dec sbb (bad) mov cmpsl pusha cli xchg insl addb xorb and inc mov mov inc sti enter dec mov inc or rorb scas addr16 xor dec call cmpsb imul sar popfw jo cmpb jae jno or std and adc sub sbb xchg push mulb jb out enter push orb clc or sub xchg adc stos push lret adcl test test sub nop xor rcr std sub dec outsb sub add xchg (bad) in js fdivr pop mov (bad) (bad) or mov je cltd and mov sbb cmpl imul jae or jno stos mov inc xchg ds adc add inc testl mov xchg aam cs je mov push sub jecxz dec pop fist sub push adc sub inc (bad) test cwtl cmp adc xchg pop jle je jl mov xchg inc cmp or clc adc jne mov ret jb adcb pop sti jno mov loopne cltd pop pop fmull jae xchg adcb dec add mov add xchg push pop cmp xchg fs and inc jb insl subl fldt sbbb xchg je or or leave rcrl mov test rcl cmc andb or push sub popl mov roll add xorb leave xor push adc jo lea xchg adc push xchg andb xor jae inc les mov jg and sub imul scas and std adcb pop adc push ficompl add sahf xchg sub js or mov (bad) out adc dec stos sub cmp les mov inc mov cmp orb xchg outsl int3 lods sbbb mov rolb fdiv xorl sbb mov enter into clc xchg je xchg sbb dec andb or add sbb mov pop or scas mov pop xchg add mov cmp add pop fs mov daa xorb gs andl ds stos test repnz push or cmpsb sub and (bad) movsb xor enter jecxz aam sub cmp addl shl or aam push pop fdivrs scas add aaa dec mov mov fldl xchg sub sahf adc test push ljmp xchg pop inc daa subb ret fisttp xchg mov jno push inc lock mov sahf daa arpl ds adc test fwait pop (bad) and (bad) andb loop push sbb lock add add lods ss dec das addl and cmp cld outsb scas rolb dec ret add sub test std and xchg aas mov insb xchg inc push add or or rcr test dec push enter test addb idiv push pop push fcmovu mov jnp mov mov add popf les insb test mov pop adc mov jb ficompl inc lret push cwtl xchg imul outsb pop arpl mov ret mov add fisubr andb lcall in inc (bad) in (bad) lret jl sbb jbe dec dec mov mov cs or fs (bad) mov xchg add and fdivrs jp fisubr sbb and mov jecxz mov test pop jp dec mov andl popf sti call (bad) xor cmp cwtl and inc lods sbbb lods js loop adc dec scas insb ja out adc lock xchg outsl leave addr16 cli jno int3 push mov sbbl ret xor imul addl and pop mov das into enter dec xchg adc mov jne clc push or push addb pop pushf enter in int3 adcl sahf cmp loop jbe aaa fbld enter mov push jge imul outsb xchg mov int3 xor aad or xchg cmp stos push xchg fs repnz cmp mov dec sub clc mov pop mov test idiv adc jb test dec sahf addr16 adcb sbb ja mov rep loopne stc pushf inc sub test push fstps ljmp js push test test out sarl enter inc cmp dec jecxz out hlt push mov jg or test inc clc shll sti incb leave pop roll jno fist cmp loopne scas enter pop js mov loop dec subb mov sbbb (bad) popf insb stos push loope lds repz pop sbb das cmp pusha pop mov popa movsl mov cwtl add mov clc int3 cwtl aas add ret popa ret mov gs roll xor fmuls int3 std mov mov imul or xchg xchg rcrl clc mov pop xor push mov sarb push cmp stc cwtl pop pushf xor cmp gs test and addb add mov call and imul dec mov mov sub add lret adc lcall add add lea or xchg inc push fdiv adc hlt xchg test lods mov mov mov inc jp nop addr16 xchg fadds test jle rcrl mov xor es hlt enter cmpsl shrb sti sbb loop add add scas push movl push cwtl (bad) mov add or lock subl clc xchg sahf les sub inc add inc jle int3 mov repnz (bad) rcpps mov add or (bad) (bad) cmp inc sarb loopne fsubs mov int3 and mov xchg inc mov test mov jne les adc ret lods lds fsubl and mov popf mov mov ret mov jns mov jno push inc call sub (bad) and mov adc lds cmc lds out (bad) cltd mov cmc jle in pop iret jge mov insl jb xchg outsb es mov mov push leave test push dec mov add cmpb movsb adc add (bad) cmp notb ds dec scas aaa or out lock mov adcb push out jge mov fisttp loop rorl je xchg sbb push mov mov sbb mov and int adc mov out xchg icebp ljmp or arpl adc lods mov stc mov shrl mov icebp adc pop cmp dec mov jl lea sub loop cmp pop lcall (bad) jge xchg je jle test mov xor out dec mov (bad) jnp mov dec xor push mov pop ret adc les pop cltd mov inc aad sbbl pop iret pop (bad) movsb les lret add enter add dec dec (bad) repz jnp pop addl cmpsb in adc ss and incl insb out sbb push and lods mov push cltd test adc call dec repz jo pop test test movsb pop pop sbb in cwtl fs or xchg test rcll fsubrs mov addb movsl push call sub sub sahf cmp lock movsb mov dec jmp test dec xchg adc cmp orb mov push dec push stos dec lods sbb push je enter out mov xchg add es sar xor pmuludq sub pushf and ret dec and dec fcompl sti test pop incb mov xchg icebp aaa cmp imul iret xor subl ret mov outsb mov sub bound daa shl adc cmp rcrb jns (bad) cld test xchg cmp mov xor push or sub pop push fmuls jno mov mov jg jle pop mov repnz dec sub int (bad) dec pop out movsl test sub lock test addr16 and aam xchg popa ljmp mov stos dec (bad) je icebp xchg cmpb cltd sbb or mov dec call add add adcb les hlt sub mov inc sbb or jge cmpsl push xorb xlat outsl mov add push inc and fildll xchg mov je out lahf cmp inc test enter imul cmpsl repz adcb outsb stos or mov mov (bad) and ljmp andb xor pusha loopne shrb sbb or fild lods mov inc (bad) jo mov adc jg jmp cld adc xorb mov pop popa sbb out mov (bad) and push pop js daa sub mov sbb mov loopne out dec xchg fdivs mov jbe xor xor (bad) inc aaa ret inc roll jne call sahf cli je pop scas push cmc mov call push cwtl mov jl inc fbld or xor xor jmp and rclb test adc push in inc dec out mov orl sub orb mov adc jp leave (bad) jbe lods push and insb int gs andl scas jo xlat cmp adc les fadds cmp mov popf loope mov add in mov cmp inc xor push push ss rclb (bad) cmp sub pop xchg inc xor lock push and ds icebp bound mov test sub clc cmp lea in mov xchg jmp cmpl sub inc xchg ret add and ret cmp movsl decl (bad) mov rolb xchg inc add and inc popf imul inc in (bad) inc xor roll popl xchg or sbb mov jne adc xchg jo testb mov mov pop outsl test sbb cmp mov inc adc frstor xor jo push test sub add xchg pop in insb sub incl sbb inc lahf push enter mov inc push (bad) cld std adc or test (bad) pop rclb aad scas mov and bound stos test psubb or mov fs daa in enter sbbb cmp std mov dec mov cmp and push xchg dec mov and cli add xchg or andb dec mov mov out loop cmpb cmpsl xchg xchg lods adcb inc push lret xor sbb mov fwait cmp jns lret aaa mov test pop dec scas dec mov out test push sub gs inc stos and sbb mov dec mov pop lahf movsb std xchg pop pusha fwait movsl cmc sub jl pop stc xchg (bad) adcb dec cmp and pop outsl cmpb add in jmp adc sbbb int3 inc aaa lds mov fildl lret xor testl test mov xor clc in fadds outsl mov sbb sub hlt xchg push jb in fisubl sbb fcompl mov add pop bswap dec pop andb push jl sbb lods jno test cli add and int3 (bad) loopne inc gs push enter adc (bad) repnz or gs jl in ss or sbb aad push bnd int or scas andl (bad) mov mov mov mov aad nop dec fsubl xor enter mov lea mov push fnstsw mov xlat iret jb test inc dec xchg add ret push in gs and ja hlt iret fwait lret fbstp jg test push test adc mov lock stos mov push push and jne mov clc les movsl mov cli sbb or and jp (bad) (bad) mov cli sbb xchg inc mov pop ret jmp mov test adc int3 call push push add pop sbb fwait (bad) lock add rorb loopne loope out cmp mov (bad) add xor aas sbbb nop add aaa or (bad) jp mov mov rol sub nop sbb nop std inc mov mov das pop (bad) (bad) movl push nop fsubs add xchg lods xchg movl test or mov dec lcall shl in adc (bad) or and add ja inc fstps cmp xchg call adc ret mov (bad) sbb ja xor loope iret push out or clc fcoml jecxz ja sub and mov dec mov push lock mov aas sub sti pusha clc lea add and pop enter fs sbbl ret outsb rorb mov out (bad) adc sub add stc test outsb lods xchg movsb xchg adc test outsb arpl cmp mov addr16 lock xchg loop sub xor and movsl jo fdivp les sbb jb in lcall xor subl negb mov xor aam cmpsl push sub data16 ror stc pop and fiaddl movl clc push xchg rclb cmpsb enter leave add xorl loop mov xor loop add push jbe (bad) mov push cmp into scas repnz sbb dec jns adc fmull addl mov lods iret sub (bad) loope cwtl adc sti add mov addr16 pushf int3 dec mov ja mov and dec add xchg pusha xadd lcall or mov out pop clc xchg orl aad mov aam add pusha dec cmp sbb stos and rorl loop ret mov add (bad) sahf test in iret xor dec dec dec and cld (bad) mov add add nop pop popf ds movb xchg test sub mov or lea xchg (bad) adc mov jbe sbb dec mov cmp push mov fisub sub pop out std xchg xchg and cmpsl add mov pop (bad) dec sbb inc repnz cmpb jnp scas dec xor (bad) repnz xchg arpl adc loop cmp inc enter bnd scas push test nop sbb popf adc and fisubl jg and mov test or xchg out mov or in nop fsubrs dec in pop cmp add stc and xchg fs adc test push adc test xchg pushf mov jns xlat add xchg das mov sbb mov xorb test cmp mov add cltd test popa lods dec adc or inc loop jno add movsl dec push dec test out sbb and ret mov xchg mov js imul sbb adc fldt insb and push mov into addl push push les iret xchg pop xchg jae out orl imul sarb sahf inc fsubl gs lock mov hlt les xchg iret aas mov mov int3 jae add and add ljmp dec mov ds dec js add jnp es call popf shll add or pop int3 lret xchg sarb pop fwait pop push movsl add dec sbb hlt dec jo cmp sub in dec imul repz fadds mov sub inc lock jno xchg (bad) xchg adc mov in ja mov cld inc cwtl mov xchg and inc ret sub jae push mov push nop pop sahf orb movsl cmp das aam sbbb insl orb lods aaa daa pushf push push adc orb xchg stos xorb je es into xor mov nop push dec cmp sub je sbbb ret cltd inc andb loopne out popf xorb into push orb in enter fs inc pop add xchg shrl sbb scas push in test imul movsl pop adc mov inc add sub and iret and sahf movsb add mov mov iret xor pop adc arpl lcall inc sbb pushf call pop mov pop in imul outsb icebp repnz lods bound adc adc xchg dec inc push insl jb les mov xchg add fsubl repz cmpsl cmp int3 test gs gs adc icebp jle jp int3 nop ret arpl test lret or pop inc aaa sbb fcomp add pop loopne int3 (bad) mov xor test mov hlt addr16 push test dec iret mov sbb fsubs (bad) aam loop xchg fiaddl out testl mov stc adc pop rol inc inc cmp jne lock nop (bad) aam adc rolb mov mov mov shrl lock mov push sub mov dec loope or inc iret adc and fbld push rcl add jns iret mov mov add lds pusha xor sub rcll ljmp popf int mov push sbb iret adcl (bad) lret add cwtl leave mov pop into sbbl loopne mov adc int sub mov imul lcall out xchg iret mov jns sarb sbb dec sub jg test les mov mov and push sbb imul ret xchg jb in sbb cwtl ret and test sbb ror sti xor xchg jge mov jg push into sahf dec int mov mov les in (bad) iret (bad) xchg xor sub sbb mov incl enter mov add mov xor movsb pushf mov and mov pop mov sti into xchg outsb out xlat pop jl bound ljmp addr16 sub enter das push inc (bad) out mov sbb jmp mov cli mov js aam xchg xchg pop incb pop sahf jg mov dec arpl xor into sub mulb mov xor cwtl adc push mov cmpb (bad) jmp test sub sub sub lea in shr jge push mov cmp inc cli add mov push or mov outsl xorb adc mov sbb insl enter mov (bad) mov into pop cmp mov mov nop test stc das pusha xorb jecxz pop cwtl orb ret movl mov push movsb fadds xor add pop mov pop xorb (bad) pop xor pop add mov mov es pop outsb dec (bad) dec fwait nop mov push test shlb test popf lock in push scas push into out arpl xchg mov clc or add jecxz loop adcb jmp mov inc mov lock jne fcomps cmpsl adc insb mov push mov cmp adcb fidivl orb mov lahf pop push jne mov sbb imul ret push (bad) jmp scas mov push int sbb subb (bad) addb in adc sbbb and mov in and adc loopne sahf mov push add ficom imul repz sti cmpsl test test jle cmp cli mov insb mov addr16 inc pop ljmp xchg mov (bad) mov adc sub stc push test mov and mov cmp in iret push cmp cmp out arpl xchg adc xchg push pushf jp mov or dec lods fcmovb xor or jae test mov icebp xor cmpsb xorl cwtl or mov mov mov and lods xor iret ror ror jge loop movsb jne pushf (bad) sbb iret mov notl push and add push xor mov fbld mov pop test pop inc jbe nop mov (bad) out jle cmp lds outsl ret cli les inc gs rol or sahf inc inc inc test btc mov mov pop (bad) sub dec inc (bad) or mov cmp adc mov je or (bad) cld lahf adc cmp pusha int3 fnstenv fiadd pop lea jl ret jns fsubs test mov pop add sbb and add adc inc pop shrl out (bad) mov mov js xorb and adcb jmp jle clc adc xchg arpl test in mov jo sub pop mov push xlat and cmp lock push jo push mov push and jb push or jno inc mov fdivs jge adc or xchg sbb or mov pop es cmpb fucomi adc pop fisub andb inc cmp sti xor pop xor lds loopne scas (bad) jne lock add cwtl loope and xlat jg sbb roll movb jl adcb mov or test pop adc movsl repz jg cmpb xchg xor outsb and shlb pop dec das xchg dec addb into jmp cli orl popa dec mov mov jns test cmp adcb adc int3 ss gs pop in adc xor push sbb pop or movsl ret mov popf aas pop add push subb or cmp adc mov sbbl mov sbb (bad) out aam inc subb jns in ficoml xor sbb imul jmp sub je mov dec testl jle mov jmp test out or sub xor ds faddl cltd pop add cmpl ds mov xchg clc jnp clc loope sub pop cwtl push mov outsl adc xlat sbb mov jne cwtl xchg scas pusha dec addr16 outsl jg pop nop jnp xchg add cmpsl sti dec mov inc arpl mov add repz fs sti test loopne jp jle and fisubl jno or imul add data16 pop push xor xorb adc stos fcomps idivb fcompl test mov scas dec push adc test test cmpsl push cli movsl or std test fiadd mov cld orb and cwtl es or jle nop jmp (bad) inc push sbb je xorb lods lret test sub orb testb out inc and or ja test push loop data16 icebp sbbb mov adcb pop loope aam cs scas cwtl or cmc mov jae cmpsl in sbbb cld push jb js cmp push mov subb in push xchg mov xor xchg cld addb (bad) div fsubrs adc daa jb mov mov jbe xor orb in xor jb adcb push push mov sub cmp scas addb jno lea fcmovb cmp push jb enter nop or xchg (bad) clc cli inc insb mov pop arpl lcall jo push in addb push test pop pop insl popa mov mov or aas xchg mov je adc arpl orb imul clc in andb dec pushf orb dec fs (bad) jp icebp sbb dec stos push clc and mov fmulp addr16 mov insb cmp out dec sub mov aam mov jp outsb lea fidivr cwtl repnz cld outsb mov or mov testb aad in rorl les jo cltd push jbe cwtl iret xchg sbb lcall inc mov adcl or pop scas subb pop ret cltd insb aam sbb test mov sub and pop out mov or adc cwtl subl cwtl add fsubr jae push xor or scas xor sub mov (bad) cmpsb jg imul adc outsl test loop into sub jo lahf cmp loope mov mov int inc mov into loopne add cmpsb pushf mov out adc xor or (bad) cmpsl mov mov pop je push mov push out mov inc xchg stc xchg adc pop push cmc push popl or (bad) xchg mov add inc in cmp cmpsl insl or (bad) loopne sarb mov or lods mov mov inc shrb mov lret mov and push ret mov jmp test fcomp (bad) push jnp idivl pusha (bad) scas mov push pop rorl and sub fwait jae ss dec xor stos mov mov sbb loopne testb loop mov imul cmpsb cmp inc sub (bad) cmpb xor repz fcmove mov int pop mov ret test bound mov ret (bad) in or (bad) mov (bad) push mov and push stc (bad) or repz loopne pop add or fsubs add and ret test movsb sbbl mov fdivrl fmulp lock loop clc pop inc inc testl gs push dec add arpl (bad) xchg (bad) push lods add fnsave jns test loop bnd push or mov js inc and add pop rclb in shll arpl int adc push lods rolb push xor loop les cmpb (bad) adc loopne out add or add in add mov and imul adc out in lret xchg (bad) jle inc sahf loop xor aas mov out sbb fidivrl mov mov sub sahf pop cltd or into ret jne mov xchg roll mov xchg lock ret sti push jg mov sbb dec idivl push ret andb cmpl dec cmp push stos jne inc adc (bad) adc and jecxz push icebp add mov mov inc mov test mov ja (bad) xchg cmp mov movsb pop mov pop out jo ret mov xchg imul es test fimull or xchg loopne push sbb mov mov pusha cmp sbb loope scas icebp or popa iret jb sub nop outsb stos push pop cmp push jne mov mov pop daa pop push push sbb jg add mov (bad) xor add test flds roll pop jb enter mov scas iret sbb je jle xor repnz test stos test pop jo push aam inc lret daa lock lock fnstenv (bad) jo sbbb sub fucom sbb pusha xchg cld orb pop fnop aam xlat sbb daa leave cmp movsb jnp sbb mov or rorl pop (bad) jbe popf addr16 clc pop lcall mov loopne lret mov fldenv das in cmpsl add popf aad jmp stc or jnp test fdivr dec mov int rorb inc imul dec add lds cmp icebp dec icebp clc cmpsl arpl scas xor push (bad) mov repnz jb loope cmpb inc add (bad) repz std mov jne clc fwait push xor inc jle mov dec test or enter mov jg jae mov dec nop imul outsl pusha nop mov jns sbb jle xchg aam mov test push add cmp rorl xchg stos xor addb notl and and mov into xor inc outsl popl push test ja xor mov mov push lock xor dec mov ja cmp xchg lahf movb fiadd sbb push xor insl xchg mov loopne orb lea push fildl addr16 inc mov sub iret xor xorl mov outsl xchg lock sub es cmpb sub fsubr xchg mov xor pop faddl adc cmp decb movl adc xchg and cwtl enter out or fsubs faddl mov pusha sahf mov insl jp mov or fdivl jmp add mov adcb cmp rcrb nop loope fildll sbb dec cmp gs sub enter bound sbb jle jno outsb mov mov adcl inc or jg bound lret popf dec scas cmp cmp (bad) movsl ret mov das xchg sub pop loope cmp fcomps and jmp roll es sub xchg mov (bad) xor cwtl and int3 mov cwtl das sbb insb pop mov jmp jnp cs mov mov out ret cli addr16 orb shl cmp adc sbbb lods push negl add cwtl aad lret mov repz adcb test outsb inc mov mov lret jae (bad) mov rcrl xchg jb or pop cmp jmp scas jne jmp xorl scas popa xchg push and out add inc push pop jp aad int3 push push aaa mov mov sub iret pop cmp test push sbb pop sub pop mov ljmp sub (bad) cmp rorl andb jne push xor and mov push aas les mov scas dec (bad) push enter xor sbb add lcall aaa cmp lds add scas je loopne pop insb lret fisubr icebp int mov popa push fsubrs orb fs cmp dec setl repz jp mov cmp add andb jecxz xchg jne pop popa xchg xchg cmc call addb jns mov dec (bad) sbb pop lea cmc jbe pop add imull or jns test jo mov inc mov jg mov shlb pop movsb sbbb adc into lods jns push (bad) outsl sub xchg adc test out ret aaa pop lahf cli pop sbb ret inc xorb scas aad dec mov fild inc dec jmp and ficomp jge mov mov inc rcrl mov xchg stos rclb test and (bad) ret inc xchg dec push mov rcrb xor xchg lods add repnz adc (bad) xchg popa jmp adc mov out or xlat sub outsb nop insl push rorl sub mov jnp sbb xchg add movsl jb push mov jno insb jnp add push cli fldenv andb inc outsb repnz in mov xchg test lret orl add inc jmp xor pop xor and test sub mov (bad) mov push xchg aas pushf pop push cmpsl inc repnz push mov jns inc fwait (bad) aad sub aas test jnp and insb aam jmp stc or cs stos test hlt pop scas mov xor cmpsb xchg push mov (bad) clc (bad) jb cmpb in es cmc insl mov rcrb or jl sub daa inc call sub mov sti or or fs imul ret mov nop sbb pop jl test jle sub and aad dec rolb in push push test xchg inc (bad) pusha sbbb xchg insl inc (bad) aad cmp scas adc mov movsb scas dec shrl push (bad) jae adc adc and push cmpb adcb cmp subb cmpsl das rcrl add daa xor rol insb push fsubrs jge test popa jb imul inc aaa lea inc dec clc scas push popa xlat ja sbb subl addb fs or stc out dec sbbb or cmp jno xchg adc cmp mov xor sbb lret nop ljmp iret jg addr16 jle xor pop adc lret sub inc outsb xorb sbb enter inc test gs pop cmp push (bad) enter ret sub jns fwait shrd popa scas xchg nop xchg sbb cmp imul repnz addr16 adc clc lret shrb inc fs dec inc cli test cmp lea movsl jp mov jbe sub test jg mov out rcl insl imul (bad) loop pop mov cmp pop cs dec pushf mov push test paddusw adc inc jl xor js pop and xchg inc decl mov (bad) fisttp inc ss adc sbbb sub push or dec inc jns cmp cmp xchg nop (bad) and outsl mov inc mov add push (bad) or out push xchg mov lods ret pop repnz jmp movsl (bad) out jecxz mov movsl loopne imul xchg push mov js jp rolb incl adc into sub sub mov inc mov cwtl push sarb aam xor xchg lods sub or mov pop mov (bad) (bad) jns (bad) loop (bad) mov orb jg mov imulb add mov ficomp cmp in (bad) push scas and mov sub test call popf pusha cmp cwtl mov jp orb and pusha sbb fsubrl daa mov test aam leave inc add add sub push cwtl mov cltd inc lahf stc add or xchg test andb icebp aas and mov fcom cmpsb aaa mov loop popa mov push mov dec pop repz mov push sbb fs frstor ret subb push sbb mov loope cmp xor add xchg lds cmp jbe adcb xchg mov icebp or (bad) add ljmp das sbb add rcl lahf pop inc sbb in push adcb and cltd loope or and sarl jns lea xchg mov dec fiadd lods mov out pop idivl push adc test call rol add cmpb sbb jb icebp mov loopne lret outsb repz jb gs adc jle rorl dec incl fsubl mov std fs sbbb cld inc ror and add orl dec es shrl dec pop (bad) push out mov jge fist imul xor (bad) or pop sti andb out lahf out and xorb pop in fbld int3 test addr16 mov add flds shrl cmp pop mov mov jno jle (bad) jge dec add jmp inc sbb cmp shl stos push pushf xchg mov xchg inc out xchg cmp frstor nop dec mov dec cmpb or sbbb mov roll idivb inc sbb out mov push roll mov rolb xchg pop fwait lods fs repz sbb jle xor push test insl push out mov jb outsb and push pop pushf lods xchg test adc cmp (bad) pop sbbb dec cwtl movsl insb in xorb out clc popf sub xchg xorb jbe mov or adcb aaa cltd aas subb addr16 and testb cwtl xchg sbb stos repnz jl popf push lcall imul mov adcb sarl xchg (bad) mov push ljmp jbe mov mov or mov mov dec mov test xor xchg pop jns jnp test xchg cmpl rorl (bad) jecxz dec mov pop cmpsb bound (bad) push jbe popa or jne mov cmpsb inc push pusha xorb inc pop (bad) push xor scas pop mov or jp cmpb sbb fdiv dec imul test add icebp je mov mov std cli fldenv lret pop repz inc (bad) ds push mov cmp mov xchg lods popa shll lret push xchg arpl repz mov add int3 mov rorb rolb sub mov stc mov ret fsubs cwtl mov lock and xor adc pop or (bad) int3 add sub iret inc xorl cltd cli and sub add lret les clc popa sub outsl test mov push mov test popa clc mov mov and sahf int jo inc fistl lock or mov lea (bad) mov sub fisttpl mul sbb icebp imul xor lods jno repz outsb jo adc sub test and out cmc stos jg add andb adc gs inc mov cmp aaa iret out cmp enter fwait enter adc lock scas les popf mov aam jns or in and sarb mov test int into ret mov ljmp jl jbe lea mov outsl jp mov je adc popf sbbb in jmp aaa rcrl cli fild mov ss fsub sub nop lock sbbb cmpsb inc cmp mov dec jb xlat pusha jno xchg movb test xchg cwtl jl aas (bad) jmp cmp lock sub cld stc icebp push mov and adc mov ret sbbb out or push (bad) sarl cli leave (bad) nop nop cwtl xchg push loope xchg push push test sarb jle daa cmp daa xchg imul fbstp test in jbe cmpsl xchg xorb imul loope push fsts or arpl mov cwtl xor fsubs push test mov adc or mov test push clc test movsl gs rclb in xchg lea mov adc mov or cmp enter cld xchg js xlat xor les cmc cmp gs mov or fsubl (bad) adc mov fcoms add test inc or ror push jno add dec cmp stc dec pop pop (bad) subb sbb jnp pop xor or scas adcb cmp add (bad) jg push clc ret inc sub lahf add incl outsl pusha call cmp inc cltd insl push into rcl add shl xorb (bad) and addr16 dec or push or sti or scas andb xor enter jb xchg and outsb test push mov mov push or push loope (bad) cmp xor mov add xchg mov xor mov lea pop cmp andb pop mov dec aam sti adc icebp inc pusha mov push ljmp cli add push outsl xchg dec inc cmpsl push arpl cmp add loopne lds cwtl ja enter mov shlb sub bound pop jb popl call sub dec aam pop hlt daa mov and xor mov sti std cmp add push and ret int cmp cld cli lahf pop stc jecxz ja adcb cmpb xchg in or xchg outsl jne (bad) cmp in stos add mov leave cmp in popf mov outsb notb fwait adc (bad) jp pop xchg orl or mov orb jns mov iret orb lea add pop xor xchg ficomp loop jmp adc xor adc inc mov push outsb xchg cmc fdivs xchg push addl incb mov sub movsl jns gs ficoml out jg scas sarl add aaa ret in jnp in mov mov les pop inc push push inc dec movsb jg xor mov ljmp pusha test xchg fcos lock and test imul sub sub sbb xor and lds and and jno xor xchg dec pop cmpsb add push fbld bound incb dec mov mov dec repnz and cmpsl dec (bad) sub inc ret subb mov mov cmc mov jae out mov inc shl mov sub test mov addr16 mov add mov cli mov fadd test xchg or mov adc int inc jo addl dec add add ljmp fnop scas dec out dec add inc or push pop jp mov cmpsl loop xchg test dec xchg mov jo cld adc pop nop cltd sub adc mov xor jmp mov jmp dec mov fldenv add inc in scas pop mov imul cmpsb inc subl inc dec and popa pop test (bad) int adcb cmp idivl xchg or out inc pop orb daa pop scas das iret and fwait out loope dec test cmpsl pop add repz xchg rorb (bad) loope or fsubrs lret sub xchg lock xchg xchg in fmuls jle sbb dec push stos cltd and mov out push push popf xor aam shrl nop or pop sub push jb rcrb inc add sahf or loop in mov xchg clc addb cld pop (bad) adc popf pop cwtl pop movsb inc inc lds sahf andb pusha cltd adc push and mov cltd dec test jmp xchg cmpsb xlat xorl lock cwtl pop pop pop push iret cmpsb cmp pop fstl loop inc xchg and inc mov call pop nop enter mov jp sbb (bad) fcmove inc sub add push scas cwtl icebp pushf cmpsb (bad) inc movsl pusha adc jg push les mov gs mov fdivrl mov xor and mov lcall jmp fwait movl or or jg cmp mov out dec fadds pop jmp pop cmpsl fisubl mov in outsb popl xor sti or sub pop ja fmuls push nop outsl sahf pop adc cmpsl cmpsl lcall sbb sbbb dec scas xchg call call xor ljmp test popa add or inc enter xlat sbb icebp add cwtl mov inc dec mov lret pop adc or add push data16 xchg add inc sbb cmpb data16 in sbbb add cmp or push adc add ret mov pushf cmp xor mov test imul jb mov mov xchg lahf xor icebp pusha aas test pop pushf enter cmp push idivl scas mov mov int3 xchg gs lods imul sbb enter enter adc xchg jnp mov inc shlb aaa sub lods cltd push mov mov pop pusha push xchg loop push jge dec or incb test fsubl mov add xor xchg fcoms xorl fcoml xchg inc aas movsb lcall adc and adc aad stc xchg out mov in mov call ficoml cs daa jmp gs test fcmove es js test ja adc xlat mov test movsb bound leave insb push pushf xor jb and ja std movsb roll add sbbb movsb mov mov add stos pop frstor (bad) xchg xor scas sti mov insb pop imul andb dec xor push or cmp imul ret inc out mov fstps and lods sbb xchg (bad) std or mov and fs aas inc fstps fwait push jecxz insl push out andb ds pop add jmp push adc nop ret cld loop push add call push js lsl dec mov jo jb test subb into push repnz mov test xchg sbb cwtl cmp daa cmp push pop ds js sub loope mov dec enter cmp loope push pop fmuls adcb xchg inc sub sub pop mov leave mov dec mov inc (bad) mov hlt pop popf xchg out es nop (bad) jb pop mov xor push fcomps cmp pop sub subb pop loope push rorl fistp adc add enter sbb std mov and std push mov adc jp jl jno push sub roll xor xchg loopne lock add ss imul xchg jb (bad) (bad) int3 ja sti test pop cmpb dec xchg add inc pop mov enter xchg xor or in shll fidivr das lods dec jbe sub sahf mov push js or daa xor sbb mov pop arpl add rcrl jo xchg rolb insb mov sbb clc jl aam bound out icebp jns orl andb fs jle sbb inc cli add (bad) or adcb dec pop icebp in popf dec subb cs fdivs repnz push xchg insl push lods push add adc push stos xor in jbe ret imul shr inc sbb movw popa push xchg aam mov aaa fdivrp push inc stc test adc popl jecxz adc pop sti sbb cli inc push adcb shrb push jmp loopne iret cmp push aas dec mov cmp inc sbb mov stos dec or mov cmp jns lock push loopne adc xor inc xchg dec movsl jns jge add sti insl iret or pop iret jle and sbb mov mov lea xchg fsubrs sbb adc mov bound inc inc int3 loopne into jle mov jge add mov iret ret rorl mov testb mov mov cwtl pop xchg test repnz sbb xorb andb mov icebp lahf pop rcrb (bad) notb sti cltd popa or fdivrs inc add cld imull cltd mov rcrb test inc mov (bad) xchg pop stc js cmpsl nop jns test addb cwtl mov js jmp adc adc lods and push adc fimull jae enter jp cmp xor mov mov out subb sbb addr16 scas mov xor mov pop add add add sub add or inc adcb stos cmpl test (bad) xor lods pusha xchg test loopne lret add repz xchg mov popf data16 idivb insb sub inc nop mov leave push aaa cli int3 push xor aaa out dec addb jg mov (bad) imul pop cmpsb sti mov ret test iret inc mov test cs cmp shrl inc clc mov out cmp xchg cmpb push push mov mov dec out inc xchg sub xchg test cltd push pop aam sbb fdivrs int and cmp jmp xor gs jns orb stc mov mov pop mov push mov add adc ds lret add rolb loope mov and (bad) in es ret inc stc add jge cmp fistp dec test pop pushf cmpsb pop xchg call dec inc add jecxz and cwtl sub ja xor (bad) and fnstenv (bad) into iret pop js mov xlat add bound cmpsb pop (bad) push sub clc pushf js xchg xlat and jl or mov cmp sbb enter (bad) lock jns mov loopne push fildl pop sub inc dec out or lock das addb mov imul add xchg ja mov addb cmpsl shrb andb ds pop lret inc push cltd ret cwtl jae and xchg inc push ljmp pushf enter test cmp add ja mov bound lds mov flds arpl jne cmpb dec cmc mov mov mov ror sub imul ds bound add xchg sbb test dec (bad) rcl fldl data16 and es sti or pop lcall fstps sbb insl nop fs mov sub push xor mov out lock fildl jb std dec and test push hlt inc mov push insl ret subl lds or cs and aad test xchg xchg cmovo movsb loope scas sti subb jl (bad) aaa test in jbe add jecxz gs popa dec pop xchg addb pop mov adc pop incl dec inc jp andl xor cmc push pop enter and (bad) xor sub lods pop roll mov or mov sahf inc (bad) aaa shrb add push pop pushf fwait arpl and jle aad inc mov rolb mov cmc inc adc popf cltd pop mov stos push sti push imul fisttp add movsl add arpl arpl sbb pop mov clc (bad) pop fimull cwtl (bad) stos mov out mov sbb fsubr adcb (bad) xor cmp mov ss xorb mov inc fisttpll push out jae push andb inc clc push test shll jge pop jne sbb and add (bad) mov inc add fnstenv movsb orl (bad) stos test push jb cli xor mov jecxz sbb iret mov cwtl leave sub push in movb out jb adc outsb push test mov cmp mov inc dec add add out lea mov clc ret adc xor imul cmpsb insb sarb popa xor jno sub jge insl (bad) dec iret jae outsb rorb mov loope mov loope jnp (bad) sti aaa jo adc (bad) dec xchg iret mov adc int out mulb iret xchg mov repnz adc movsb mov mov out pop int3 mov (bad) scas sub mov and insl test jl pop hlt (bad) das (bad) aaa mov rcrl cmc inc jl (bad) leave mov shlb ret imul dec jne out rorb sub bound sbb jecxz arpl test cmp sub add sbb mov rorb sbb or rol push nop mov ljmp das pop push (bad) lods ret ss or adc je js xchg sbb gs mov inc ror fdivrl dec pop mov inc aaa push mov je mov sub add test add movsl jg ja fs mov sahf addr16 andb pop jg int3 mov imull and add lret mov call fadd dec cmp dec jne loopne stos rcr rolb inc fsubrs lcall mov mov push and adc push cmp (bad) (bad) push pusha inc dec in (bad) jg loop cld add add roll xor push sbb roll push fadds popa jo shrl (bad) repz loop sbb sub stos es or jl mov roll xchg pop lds in enter push nop pop sahf push nop andl mov jns lods (bad) mov sub out and cmp js lea mov cmpsl sbb inc mov xor call add jl loopne shrb cmpb stc inc ret and push pop cmpl (bad) fldenv stc (bad) push sub jnp ret jle imulb daa rcrb xchg nop push fldcw jnp or (bad) mov fcoml hlt or aad icebp lds inc movsb (bad) and test pop movsl jge fcompl out push mov dec lods out mov adc je int3 push add sbb dec cmpb mov sbb scas push pop lods ss push sbb sub push xchg ret mov enter cld test movsl sub push ds mov (bad) insl and jbe test xchg push mov inc sbb add dec rorl les adc and aaa jbe out subb insl push add pop add pop (bad) kmovw dec push adc mov roll es mov and mov or aad in enter int3 ljmp stc add mov and cmp fldl mov jle lahf test xchg pop (bad) faddp mov mov pop adcl cmp push or sbb add inc inc jno ds jp in cmp gs inc xor negb adc dec in cmp sub adc out mov popa pop (bad) xchg jns or dec mov add outsl mov cmp push xor hlt test sbb sbb dec data16 xchg sub push lods out comiss dec xor add mov cld mov mov add loopne paddsb int (bad) int pop sub push jmp adc sarl inc je or cmp test adc dec fsubrs inc std dec adc xchg ret in sahf add hlt (bad) and mov call repz add outsl or ljmp insl or xchg clc aaa mov test repz fiaddl (bad) ljmp add push sbb (bad) faddp push push scas push cmp xchg into xchg mov xor pop dec sarb test ffreep imul and mov mov push out mov push xchg add shlb ret mov mov push divl inc lahf addb ret push xor (bad) jb aas jmp subb xchg loope lods push mov inc loope sub mov mov into test clc loop xchg mov mov jl pop shrb mov mov pop scas aaa pop lcall sub notl and imul fistpl lds jae xchg jmp fcmovbe or jnp adc add and xchg sbb cmp es or pop pop add add lcall cld mov and dec leave fs cli add rcr fsubrs xor sub loope push jae mov sbb hlt mov xor rorb sbbl loope loope stc add mov aam jg sti dec and lcall ret scas push rcr sub add add lahf lods pop sub or sbb xchg push iret and and test iret mov subl add cs pop jae pop lods (bad) jbe adc insl mov int out aaa jl mov xor lds lock adc cmp pop push push fisubl rcll sub pop inc xchg cmp pop loope popf aad xchg mov repnz lret add mov test iret pop icebp enter loopne lea jge out aad pop mov mov cld pop cmp ljmp and pop sub orb push sub js enter stc aas test xorb ret ds dec sbb fcomps sbb mov cltd popa pop cmp mov dec cs xlat ret jns insl mov jns push lds shrb mov xorb mov push ds push pop sub pop adc clc sub inc jl xchg (bad) imul nop mov daa jg mov hlt or jecxz roll test jp ret xor sub (bad) mov dec dec lds jno jnp stos push (bad) fstl enter inc cmpsl cmp mov test (bad) jae sbb and mov jo repnz mov imull xchg mov adc rcr cwtl sbb xchg mov call jle enter insl outsl test ja and imul xor pop mov test pop fwait inc push cmpb jne xor push or adc add out clc push (bad) subl jle adc out sbb jp mov mov pop adc mov jno push and outsl mov dec mov mov mov jnp xchg push addl jmp cwtl gs and ss mov xchg mov and enter cmp pop mov lcall sub outsb orb xor enter jne or lods fsubrs jbe adcb aas fisub pop test aam adc mov jae mov dec inc mov dec sar dec sbb icebp mov movsl ss fsubl sub push mov push sub xchg jbe mov psraw test or jmp sbb add and loope subb in adc inc cmp pop jge sahf add pop mov rolb imul orb jecxz adc (bad) insb nop ret and andl inc and jmp in jmp mov pop mov test adc imul scas sbb ror int3 dec or inc xor dec sbb push add push iret xchg inc or nop pop jl push sbb push mov inc mov sbb cmp (bad) dec jbe ret int3 push mov test mov (bad) jle out test mov (bad) jae jo ret sub fidivr and mov cmp push mov js mov pushf nop (bad) push mov stos cli (bad) andl movsb pop mov add pop call jno jg xor les or add sub push test iret mov in sub in leave pop aaa ja (bad) scas int3 shrl pushf add and mov dec sarl loopne into ret sbb mov sub mov mov pop fadds fcmovbe pushf and js nop lahf mov (bad) ss jmp or jg in pop mov xor in hlt cs out outsl in xchg inc call inc jl xor inc lea je js fcmovbe xor xchg and dec rolb xchg ret jnp gs cmp neg or fmull test xor std je incl and leave fidivr mov inc push xor hlt and and xchg popa xchg subl mov fldt or leave dec mov inc lea nop mov arpl lods adc adc mov scas sbb lods or lock dec rclb jnp add dec mov std mov pusha pushf or mov mov pop (bad) jns roll lret xchg andb ljmp lahf pop xlat push mov and fiaddl sub pop sub (bad) mov stos addb push bound jns repz mov stos push inc pusha (bad) and jg xor popa leave cs adcb outsl dec repnz (bad) dec mov scas scas push and divb rorb dec les daa sub imulb mov inc mov jl mov arpl xlat xchg pop mov ja mov in in loop pop mov popf mov push sub inc push arpl notb cmp andb rcrl fstps fistpll cmpb cmpsl push mov rcr jge dec adcb enter jno push sti and (bad) das mov sub nop push xchg push nop pop push lock dec add sbb xchg push scas dec jno nop or pop decl (bad) pop xlat and cmp cmp pop sub or lret aad cmp dec dec scas add sbb sbb adc or xchg movsl dec cmp inc (bad) popf xor (bad) lock lock mov aad pop ret adc mov roll adc or adc xchg sub gs push enter cmp pop out push out adcb xchg inc add inc shrl sbb rorb cmpb subb inc lds jo (bad) dec cmpsb pop out movups xlat (bad) cmc loop loopne sbb dec movsb mov cmp jbe icebp pop inc leave fcoms xorb inc sbbb fcompl mov and nop xchg adc pop jmp rcrl and adc mov dec jmp and add mov mov adcl stos push lret or jg movsb sbbb mov insl and (bad) xchg fadds add les mov test out xlat maskmovq negl add (bad) and (bad) insl pop mov sub inc mov xchg ja jb mov fsubrl pusha shll dec icebp icebp dec push sbb in jae adc fs push add dec mov adc out shr mov outsl lret test loop pop enter add cmp ret out sbb sbb stos nop gs add (bad) ljmp iret cmp add arpl stos out fldl mov xor fmull (bad) sti sahf loope xor fimull daa aaa push adc inc ja xchg gs dec call inc (bad) push in jns xor add iret pop loope mov scas mov dec in mov mov test add and sbb pop xchg fnop or (bad) sub arpl test scas test adc mov sub fistl data16 sbb dec inc rcr mov fdivs dec bound lahf cmpsb movsl lods test mov (bad) ljmp in adc sub orl add stc iret ja sahf nop sub mov push ret sbb movsb inc mov into xchg dec lds in addr16 push jg add aam ret dec dec xor mov mov imul scas cli in loopne das nop sbb jg fcoms int3 fwait xor rolb into lcall iret mov pushf lds mov lods adc dec mov loope sbb fimull sbb xchg mov sbb popf jp cmp cmpsl mov test js jl mov sbb out xchg icebp jmp adc sub (bad) pop test in orb rcrb jbe dec mov loope jl (bad) mov mov xor in int3 inc stc iret lock scas xor lret sub cwtl fs popf mov aas mov les cmpsl jmp cwtl cmc pop insb mov adc cmp mov pop test jmp dec outsl cwtl (bad) mov movsb enter mov xchg daa and dec cmp xchg ret sbbb and fcomps pop cmpsb aas sub adc hlt es fsubl andb in push dec mov iret and repz test xchg data16 xor js xchg sub in mov outsb das push test add sbb fsubr mov addl js xchg xor hlt jmp sbbb xor mov inc push mov push jmp jno adc leave xor rcll sbb or ljmp imul aaa mov push mov xor test mov imul mov cs btc mov jae adc adcb xor mov (bad) pop cmp xor movsb dec pusha test xor clc cmp sub xlat test test orb sbb and cmp push pop xor cmp shll inc fsubs push or sbb add jb aam (bad) cmp jp sbb cmp mov gs fcmovne lcall or lea mov orl xor sub testl sbb pop pushf test ret mov adc adc cmp outsb inc sarl add sbb add aas sbb sarl jle mov xchg inc mov mov scas jb inc int3 mov stos popa fisub mov mov sub sbb sbb (bad) ja nop add ljmp dec adc push fisttp jge jmp cmpl push push xor xchg fstps sbb mov push pop pushf xlat mov adc jp pop xor inc push icebp xchg int mov or mov andb adc cwtl xchg push cwtl maskmovq notl dec scas dec test dec pop mov push cmp sbb int3 mov pop ljmp sbb leave pop inc jl addr16 xchg bound mov pop and fildll and sbb ficompl out das adcb push (bad) aaa jp push jo push movsl scas fistpl cltd pop sbb insl jp fldl scas mov outsl adc sbb out test cmc test insb xchg sub xchg fisubl stos lahf pop xchg adc inc sbb mov sarb out into adc inc subb cmp push cwtl sub inc or int3 sbb decb inc fstps push push mov stc in shl adc andb (bad) xchg outsl test push testl les movsl nop push adc aad and (bad) push (bad) jae cmpb cmp sub aad inc lea cmp fwait test mov mov rcrb jae mov mov add mov jecxz (bad) sub bound test add push leave test loopne mov nop call jecxz aad pop test (bad) repnz (bad) in andb ret movsl adc push mov and sub and popf lcall imul stc push loop fisubrl fadds or cli push jle push lock pop test and jae xchg rolb or mov cmpl push scas popa push movsb pop cli fcomps imul or fmuls and pop icebp dec es inc push push mov mov fidivl fcom loope pop sahf sub mov cmp jae mov lock pop mov xor aam mov pop dec test jne sar adc push les insb xchg lock das test pop (bad) xor xchg cmp xor sbb mov addl (bad) or and push fbstp and loope int3 jp loopne mov test dec mov call cmp clc fiadd scas incl and fidivrl jmp mov out mov mov sub loopne ret out xor hlt (bad) mov xor mov movsb (bad) and and aaa rcrb adc and add adc fidiv pop lret cmpsb xor push ss cmp lret andl xorb jg lea in adc in icebp or cmp dec xor imul addb daa aam or nop out inc add cwtl jo outsb pusha fwait andb fistp pop pop popf jmp and (bad) lret icebp jecxz cmp int addb lds mov imul and mov jns aad ss cmpsl xor orb (bad) mov pop inc and sbb out lock dec test iret mov dec incl imul enter mov mov mov mov aaa cmp cmp test pop mov adcb shrl adc pop cmpsb (bad) mov jge xor adcb xchg repnz daa sbbb into inc pop jnp (bad) sbb sub add or inc adc sbb adc sub mov cld mov or test add xlat pushf dec ljmp jecxz jl pop cwtl movb mov test sub test (bad) movups popf pop push scas push out sbb fcmovb nop lock leave (bad) dec cmpl loop stos xor test pop lcall js adc mov jae ret in pop pushf pop fdivrl nop (bad) jb pop push mov cmc cmp adc cwtl iret xlat jns rolb jp aad and mov cmp and cmpsl pop (bad) sbb push loope sbb fnsave hlt jmp sti rcl cs pop (bad) sbb loop push jae in bound or and lea pop test jae mov gs insb add push iret and inc and xlat loopne xchg in and (bad) hlt sbb inc daa cmpsl (bad) in jle cmp mov mov mov sbb mov xor stos lret iret mov ret mov je and ror jecxz arpl cmp jo rclb and rcrb enter pop pushf stc mov (bad) cmp mov jb int3 (bad) adc push scas cwtl ret leave (bad) loopne and or nop gs adc pop addb out call ja repz push push cmpb pushf sbb ret xorb jno push out out outsb adc push fdivr out mov cmp loope mov jle fdivrl xor fsubrs in sub and hlt inc lods clc fidiv push cmp lea lea ja push ljmp xor (bad) mov xor lret ret cmp aaa rolb inc push jae cli dec mov addl cmpsb test enter cmp enter (bad) test pop jno mov ret mov in sbb sbb mov jp sbbb sub xchg jae inc dec subb xchg mov test pop sahf cli clc pop xchg fwait ret faddl xorb mov mov adc pop push notb data16 cmp lret popw inc bound test fcmovnbe cmp dec in mov or movsb xorb pop pop jns adc cmc (bad) int3 sub in hlt andb lods dec rorl adcb add jg into xchg out xorb ljmp add in jnp jmp mov pushf inc pop out and add addb jge and sbb mov inc mov mov (bad) movsb cmp jecxz fild mov and subb sbb aad pop lock mov (bad) testl inc les nop outsl nop scas mov inc out loopne fadds sti cmpsb pop daa and in xchg popa arpl mov pop jg mov inc mov xor adc sub lret es sbb ret out test sahf addr16 pusha pop xchg adc mov mov leave insl xchg decb jge lods xchg adcb sub xchg pop push movsb scas orb scas ficoml sbb inc mov ja adc xor jp push adc scas test and mov sub inc sarl cmp div ds aad pop test and push stc clc add lds inc lods rcrl cmpb cmp pop mov cmp lods mov icebp dec sub aaa mov insb popf orb mov js enter adc jl xchg rcrl and and ret rol inc fsubrs push cmp scas push sub cwtl dec or inc jne in jle faddl adcb popa fimul jno sbb ficompl jbe mov dec jle mov scas nop mov mov (bad) add lret (bad) ja xchg cltd lods and push sbb movsl mov mov repnz jnp mov and jge bound inc pop jle and and jb daa or mov mov lea icebp xor icebp (bad) add (bad) test outsb lret ljmp outsb js xchg mov mov adc mov mov sbb dec lret cmc add daa fcoml les cmpsl mov clc sbbb xor lret jo sahf dec fmull sbb jns int3 adc cmpsl inc xor insb out mov cmp add jle fsubrl sub mov rcll aam add mov sbb xchg push test xor inc cs mov adc cmp or test push cltd imul mov ret push inc cmp mov add jae imul xor xlat inc loopne inc pop lock nop adc sub (bad) (bad) mov jle push dec push sub jno dec mov adc and xor xchg add sub outsb sub lods adcb sbb hlt jnp arpl (bad) in enter and lea test in add adc sbb mov das dec mov scas inc cmpl iret fisubrl in mov sbb adc mov dec imul jns or xchg dec (bad) (bad) add cltd rolb enter mov adc fldl je pop jne pop inc jmp pop or fnstcw (bad) cmp mov sub mov lea lret fwait dec pop fcmovbe xor push inc mov arpl lea and in faddl dec dec fwait or ret jb std popa jmp fdivs lds xor loope ss cli add xchg ret dec les pop add mov int3 test inc mov push aas xor movl insb mov repnz test mov xlat push jle push enter test xchg push (bad) popa push (bad) and push xlat scas adcb (bad) jbe mov negb out fadd mov outsl mov adc je data16 add lods push pop mov cld push xchg leave pushf cmp and arpl dec xorb in pusha incb mov movsl push pop adc imulb cmpb loop movsb pop subb jge enter faddl addb enter data16 sub aaa push xor aas inc inc mov jmp sti pop stos dec add or test mov xor orl sbb and sub adcb into iret mov push dec pop (bad) popf imul inc jecxz or mov sub lret les xchg inc idivl push cmp clc nop lcall pop cmp inc sbb lods cmp inc leave mov (bad) sahf (bad) enter jp xor mov mov or push lds les sbb pop loop mov flds cmpsb and scas adc aad sbb adc iret xchg mov or movsl mov dec outsb mov sub or adc pusha dec pop (bad) ficompl sub sahf daa aaa xor sahf mov xor hlt int dec cmpsl jecxz scas in add and cmpsl pusha loopne xorb std jnp sub int sub cs mov rolb jmp xchg jo pusha addb jbe mov cmc add (bad) sti loope pop int and lods push add cmp sub test fiaddl (bad) ja outsb mov xchg rcrb orb stos aas sbb test xor jmp add jns dec hlt adc adc insb xorb pop sarb leave subb and add orl dec orb add int pop add xchg in mov xor std xchg aas fildl cmpb es jno out sbb push test (bad) sbb data16 aam mov ret xor xor inc in out xlat xchg jo mov push addl xor rorb imull sub iret in mov (bad) jne or xor or jle cmpsl xchg mov mov (bad) pop push and inc cltd ret popa adc xor andb inc push adc subb jns mov or xor push cld adc xchg ret out lods xchg cltd mov pushf test mov or shrb jg pop (bad) xor sbbb jne mov test dec inc cmp sbb test xchg xorl pop ja enter xchg mov andl ret sub outsb xchg sbb pop pop movsb sbbb mov cmp pop cwtl jae cmc jnp and push jp orl daa fsubs mov sub (bad) jae add pusha adc inc in sbb cmpb sbb arpl push inc sbb sbb movsb stos mov lret in lcall jge dec mov push cmpsb ret or mov mov fs jno das aas sbb ljmp mov mov add iret xchg aam mov pop gs (bad) mov pop (bad) fldenv test dec js cmpl iret scas add out ljmp scas push add movsb into and and jmp add loopne fiadd inc mov jb rorb shll inc sub int3 and outsl movsl test aad aaa iret sub sti hlt out (bad) sub sar test ljmp ficomp inc mov mov aam lret test loop jle cmp dec adc xchg lret aaa rcrb mov mov and dec add or popf xor cli es andb das imul test cmpl pop mov xlat (bad) xorb (bad) cli movsl or sbb mov into mov xchg sub xchg mov jecxz inc inc sbbb jb cmp xor cmpsl xchg insb jbe sti out pop ffreep mov push sbb js adc call jns inc out mov repz ja jg xor sub add xchg cmp (bad) dec add mov push lock (bad) lock popf pop fucom jl lock mov push enter je mov xor repz inc xor pop mov nop dec cmp push sbb and mov test vmread in sbb popa inc dec lods ret push rorb xchg jmp ja (bad) sub xchg enter and hlt pop jecxz in mov int lahf nop sbbb in cmp (bad) lock pop pushf add xchg es outsl mov incl mov pop aas add cmp int3 fs out pop (bad) fnop xchg dec nop pop mov fistpl or imul sub addb outsb add jg jns outsl fild daa clc fs aad lock mov sub xor cmc xorb test movsl push imul jmp sbb xor mov cmpsl push fs lock jg xchg frstpm(287 cmp mov pusha cmpsl xor orb outsb iret mov or jle (bad) scas lock mov test lods mov mov in push mov and in (bad) cltd pop std cwtl jecxz ret dec loopne test xor mov jo sub pop (bad) and jecxz mov mov dec push fidivr push outsl (bad) (bad) js add popa nop repz loopne mov inc xchg xor roll clc adcl sub xorl andb das mov sbb aaa sti test xor sub add lods push adc andb mov mov cmpb je push inc cmp out push scas cmp test xchg jns dec lods jp and out enter dec or jmp movl mov mov inc inc mov repz iret int3 sbb adc xchg imul inc and or inc in pop mov jge inc mov dec dec daa mov mov mov add xchg and test arpl push adc sbb push popf pop mov push icebp test pusha (bad) icebp pushl cmp xchg gs addl fisubl cmpb add xchg cmpb or mov dec scas inc in mov in js jnp mov clc mov jns push add mov xchg insl ja and and xor sahf dec (bad) mov loope adc hlt fwait xchg push mov and imul inc in pop mov imul orb jae nop addr16 pop lcall inc mov inc mov jecxz lahf arpl inc pop movsl (bad) push push cmp sub sbb mov mov int3 adc xchg (bad) dec cmp (bad) cmp xor cmpb loop push mov jb pop cmp decl idiv mov pop xlat stos les (bad) pop subl out jle mov out into (bad) push mov sub mov lea xchg cmc add xchg fs std nop xor popa xor pop in inc and les pop mov sub loop push jb fdivrs mov psllq lock mov push mov pop push (bad) or cli xor push fucom adc add lods jo sbb push xor cmp in fdiv std pop mov pop adcb addb sbb or xlat xchg mov cmp divl fdivl mov mov mov push sub pushf sub ja out pop (bad) and add mov sub mov mov lahf sub mov loope pop sbb jge fstps cmp pusha xorb cmpsl pushf jmp andb out xchg sub add mov mov lret xchg jg sti std pop andb pusha loopne fisubrl dec or dec (bad) jg out scas cmp (bad) cmpsb add fdivr in inc out or (bad) cmpsb or mov mov cli add xor adc or lods sti dec testl dec js push xchg outsl jbe cmp (bad) xor sub sbb jb mov cmp dec inc orb push test push aas movsl repnz (bad) sub das movsb xchg loope in shll adc fwait mov ret push loop xor lods shrb dec lahf push add es lock push je and cmp addr16 sub push xor jne (bad) xchg jns cmp sarl xlat push sti add hlt addr16 shlb shlb lods inc jge adc (bad) cmp push sub mov add jae jno add mov movsb movl daa mov add add nop adc or pop add call rclb aaa cltd pop (bad) add les nop jl pop push adc bound jge iret adc scas aaa pop cld mov jge icebp in xlat daa shl mov (bad) imul leave pop jnp and rol cmp popf sub add xchg inc jl or fldenv ds jl jo fcoml ss or adc jo mov sbb (bad) jnp inc push lcall nop mov mov out test in cmp andl or ret test and sbb outsb add cmp mov sub loope nop shrb jl out mov out pop lret push inc push cmp sbb jne adc push sti and rorl mov add inc sbb mov sbb xor add mov pop cmpsb mov ret cld mov cmp gs lods mov mov clc cmp repz xor sti icebp inc xor sub lea or sbb jmp mov les rcl mov aas cmp cs jb cmp ds xor test sub jp xor rol jo repz ret or cmpsb inc mov mov mov (bad) test or rolb popa test dec lods clc mov inc cmpsl sub pop movsb push int cli add iret and dec add add les fdivrs frstor ret test ss push add ret or (bad) outsl (bad) negl iret adc mov and jge jo push mov gs adc (bad) dec mov clc (bad) shrl pushf inc rep add add mov pushw sub in lahf mov dec pop lock mov or out pop cmpsl jae loope pop (bad) sub adc test stos xor mov lds inc jecxz xor mov stos loopne dec outsb sbb adc jmp outsb mov sub es imulb inc and out enter sub hlt out xor and rcrl cltd mov push repz xor test cli iret (bad) pushf inc (bad) lret daa out push inc negl sub jecxz or xchg gs jo arpl sub bnd dec mov sar dec sarb cwtl daa movsb ret cmp xchg add sub enter aas inc inc mov (bad) pop add (bad) sbb mov mov pusha cmpl mov (bad) pop faddp and popa pushf sbb stos inc mov sub pusha test stc and popf xchg mov int jno mov pop adc rcll adc (bad) test inc movb sub xorl imul orl pushf (bad) hlt dec stos sub inc inc fwait inc dec out xchg dec ret fcomps test jp in rolb xchg jb push loop mov sub cwtl loope and mov mov xchg nop iret scas arpl shll rorb adc mov rclb mov insb pop sahf inc dec push xchg ret sbb add out into mov or out sub ret pop sub dec sbb dec dec jge dec add mov adc cmp stos dec aam jb testb fs movsb and jnp mov pop stos (bad) adc addb cmp icebp xor idivl popa push lods mov cmpsb shlb push cmpsl lahf subb mov nop lcall into jp push cmpb dec cmp and fisttpl xorb in loop jns add test cli jae dec mov cwtl pop lahf int mov sub test bound cmpb mov fwait jl int3 inc mov (bad) insb lods orb xchg shrb data16 rcr clc frstor xchg ret cli mov orb lret leave lods dec addb pop fdivs out xchg mov fwait ret das lock ds pop cmp cmc and fbld sbb gs push and ljmp add movsb je add out sbb mov and push movsl mov outsl mov mov rolb cmp clc mov lods sbbb xchg sbb adc stos cmp jmp mov (bad) (bad) sbb mov dec movsb test (bad) xlat sub xchg mov mov push adc push aam inc sbb aaa xchg iret push subb in mov mov loopne roll testl cmpb xor push push divb xchg sbb clc mov mov das enter bnd mov (bad) or iret flds sub fsubl dec adc inc aaa outsb jl xchg les mov cmc rcrb xor add push shrb andl subb int lea cli mov mov data16 sub or popa in cmp daa mov mov mov sbb mov inc addb sub xchg movsb pop ret fsubrs andb mov mov sbb popw xlat mulb sbb mov dec aaa and jg lahf ret add jge and mov push mov push sbb (bad) pop cmp mov out ja push scas mov or dec dec test test xchg push sub rcrb lret jle dec or test mov cmc pusha mov leave xchg shr outsl pop cmp xchg lahf adcl in dec mov pop adcb pushf gs insb addr16 pop dec clc mov sub or and andb sarl test push and mov xchg xchg gs cmpsl sub pop imul cmp idiv mov je pop repnz (bad) insb lret nop push mov xor add das xchg xor in mov mov xor femms test xchg xor inc daa xchg fldl2t stos sbb sbb mov aaa (bad) mov xor and sahf xor adc aas popf jnp pusha and mov add pusha xchg pop push clc ficom cmp push mov mov daa (bad) repnz (bad) lahf xchg movsb es mov iret mov sub loopne xchg cmpsb or in or sbb (bad) adc cs mov inc cltd pop imul mull scas adcb stos pop loop mov sbb js mov hlt mov mov outsl ffreep jp jnp add mov mov fisttpll pop lds push xchg je dec dec jle hlt cmp dec pop fiaddl addb (bad) leave mov sbbb test cltd aam xor stc lret mov or xchg repnz mov cmp clc movsl push ret cmp jb inc mov les and jo test xchg ret cwtl ds loope sub and shlb pop addr16 pop jne lods outsb inc loop arpl rcr and mov cmp shl daa cmp push sub mov sub cmpxchg mov jl inc insb lret pop xor xchg sub gs push lods jg jmp mov enter sahf cs xchg lcall movsl xchg out (bad) in mov or pop xchg sub xchg add fcomps jmp loope adc stc test pop inc sub xor xor add and pop adc gs roll add bound xchg sub les or xchg int mov jecxz jp iret mov pop jb test lds mov out jmp les pop pop and sbb in add cmp jle jbe enter or (bad) imul inc push test (bad) loope push adc rcrb int3 loop and orl sbb cli jmp (bad) mov iret shll out add les aad ret ret enter rcll pop loope lahf lock sbb jge and mov push les arpl push insb nop test push lods adcb popf pop fsubs aaa lock (bad) push enter inc enter inc dec cli add inc xchg addr16 pop mov push loope scas and mov fmull push mov pop test rolb idiv mov sub push xchg pop fiadd (bad) test enter push fdivrs dec mov mov nop add adc cmp pop mov das mov mov push (bad) mov inc test dec xor popf ja out shll cmp ljmp iret xor dec lret mov xchg faddl ret jae jb mov (bad) mov or cmc add leave adc js mov js jae xor repnz stc mov fdivs xchg add cmovnp daa shrb jno rcl push push sbb dec dec xchg jg or push in data16 inc out (bad) in sub in (bad) or stc lock int cmp ss imul add inc jae,pn mov push pop addr16 sbb mov nop mov and push andb dec cmpsb in pushf jno mov into test fmul or xor and int inc pop iret mov aas in mov jnp jno xor ljmp push lods xor imul in popa sti sub cmp ror or pop stos mov dec mov add ret push mov ss adc es and out rorb fs jno add je jno stc mov xor jmp jno mov xor add mov lds addr16 push int aaa aam push and stc xor inc sbb xorl roll mov addl ret xchg mov out sub into int3 and addb lods test push push roll or cmp addl iret dec fs scas pop cmpsl (bad) jge or adc mov adc cli add mov mov hlt sbb ror enter sbb loope sub inc jnp xchg ret inc mov loope mov out fbstp faddl out jae lcall jl mov ljmp cmc cwtl clc (bad) jnp pushf pop test mov iret mov xchg mov xchg ss movsl sub sub adc sub addl mov fcoms sahf fisubl (bad) movsb (bad) adc loop rorb cmp std add or daa loop pop (bad) nop enter into push mov jb clc mov adc les out inc mov (bad) xor lea mov or fsubrl cmp rol jae outsl mov imul sub (bad) pusha lret rolb push out push jle sub adc add inc int3 or repz lods pop and lcall popa in stos les jmp jg xchg mov notl mov xchg mov mov pop sub scas or nop ret push jo xchg js add mov cwtl push das mov add fwait mov (bad) in adc push adc sub mov xor jmp mov outsl cli int3 and or and ds push inc repz lock add shrl or out pop scas stc mov add iret (bad) sub cmp sbbb cmp sub out scas les iret addl lods pop mov inc cmpsb jecxz cmp mov outsb xor mov xchg inc push (bad) push xor int je xchg dec lock icebp and ljmp cwtl iret dec xchg mov mov mov pushf negb sarb sbb cwtl movsb bound sbb xor push outsb inc mov test sbb testb fisubrl divb dec sbb or mov jae add imul or sub into insl and popf push es iret jecxz add cmp test sbb sbb imul cmc fdivl (bad) cmp daa inc (bad) aas dec add sub pop sbb ja (bad) test mov xchg add les jne jp ret ret (bad) jne mov aaa cwtl jmp fsubs ljmp push cmp add (bad) es nop pop repz push loopne gs mov bound popf mov jle inc xlat dec iret inc push pop add clc or jle mov test ja sub adc arpl iret push xor sbb das sub dec xchg outsb test push call sub adc cmp popa sub clc sub cmpsb dec adcb or cmp test dec aas icebp xchg pop xchg repz lds push int out jno mov enter orb int3 pop jae xchg pop cli push andb or lock aas hlt sub mov mov sub jbe out sarl xchg movsl test sbb inc lock jg into nop test dec sub nop push stos dec mov xchg and into xchg jno cmp inc mov aad lret pop xchg cmp xor stc (bad) insb (bad) (bad) lcall xchg outsb xor xchg xchg daa sub lea mov dec sbb add fdivrs icebp aaa (bad) cwtl jp adc in int3 add sub bound push fstpl (bad) rorb data16 inc cmpl sbb sbb subl push out lds inc dec jl cmp jecxz lcall sub adc ret cmp mov js sub cmp xor (bad) imul roll cwtl mov (bad) jno sub mov sub leave loop iret push mov mov icebp add lods jno xorb stos dec push cmp xchg mov xchg mov pop test and cmp pop push mov ss adc (bad) mov das sbbb jg mulb sbbb jge ds rol or mov add fs jge push mov cmp jl adcb jle jb shlb clc notl pop pop mov (bad) movsb push fisub (bad) inc (bad) push mov mov js adc inc sbbb andl inc loop jb roll jecxz sub mov enter clc push xor cmpb ljmp enter andl out mov adc fcomps sbb push out je or or push mov mov push push and pop mov sbb int3 xorb push cmp sbb inc adcb xor xchg outsl or cmc (bad) mov aaa iret jmp dec pop popf mov jle subps loope lcall xchg and orb (bad) insb jbe cmp (bad) (bad) jne dec subb add add adc test fcomp sbb mov out ljmp jnp push sbb pop mov mov mov mov imul xlat int aad mov dec lock mov push mov fistpl add pop xor sbb (bad) or push xor xlat xorb jp xchg pushf dec in test nop out xlat pop dec subb mov mov jno shlb mov push jns mov mov pop cmpsb test jmp pop push add jnp hlt jp lods inc adcb dec test mov or push fiaddl mov pop and xchg outsb loope push add lret cltd xchg add repnz push (bad) je in movsl cmp mov xor andl push xorb mov dec cmp sbb and push sub xchg popa imul jne aad mov dec pop xchg mov adc push add negl and cmp inc xlat inc add add (bad) lods cmpsb dec adc pop cmpsl jle nop pop out icebp nop jp fldl jg and push test xlat dec call popa popf cmpsl mov movsb jno mov int fist rol ss sar loope mov pushf jb aaa les mov dec repz or insl add out pop fcomps mov (bad) cmp (bad) ss cmpsb pusha imul lock xchg lahf mov mov rcrl push cs xor or pop pop je out (bad) lds daa shrb dec ror bound test cmpb and xor cmp pop pop add jl dec int3 cmp xor mov orb test add mov mov jo push sub mov sti pop in xorb sub sarl push fprem1 sbb imul roll jge mov sub lret insb cli jmp sbbb cmpb loopne xchg dec mov jno rcll xlat fsts mov in mov test les adc addr16 test xchg sbb dec or sbbb imul lods push adc out cmp nop pop subb lods xchg dec mov cmp cmpl movd inc cmpsb aad std or xchg fsub insb inc sub dec jge xor mov loop movsb xlat aad add push imul (bad) xor pop rorl insl jge es lsl movsl mov repz dec or std xor fcom loopne cli nop adc or incl and push mov data16 out or mov mov int3 insl add (bad) lock sub xchg dec test jno cmp fs xchg (bad) cld std add jno decb xchg fistp cmpl daa fcomps and mov sbb rcrl nop sahf pop outsl xlat dec daa cmpsb cmpsb int3 cmpsl aad subb adc sub and xchg dec test stc xor cmp add sti add xchg ss dec jmp cwtl test lods mov nop add in xor adc cmc or call mov cs sub or pop gs loope push cmpl iret (bad) (bad) or sub cmpsl dec subb mov stc sub (bad) xor xchg push or dec scas icebp mov cmp inc lret pop testb sbb pop fnstsw mov test sarb mov sahf xor sbb iret (bad) mov fcoms loop pop xchg inc call ljmp rorl test orb insl pop mov leave pop cwtl pusha cmp push (bad) push pop cltd bound ja cmp sub loopne xchg add dec dec add mov sub inc lods push nop adcl mov iret fs idivl bound lahf mov enter pop jnp imul push aam das adcb xchg or jnp push jp jge cmp shr out add xchg (bad) or mov (bad) xchg jo out add inc jmp (bad) mov fcomip test sub test pmaxsw or mov int push outsb js shlb scas and or idivb addr16 repz (bad) xor in pop sbb stos push ss adc dec lods mov pop adc (bad) jmp adcb jle inc dec andb mov andb mov iret inc pop pushf dec inc gs call int3 sub xlat jb xchg sbb push add push (bad) xor ret inc ja addb push xchg in pushf pusha loop mov cmpl xchg jp jb in pop adc or popf pusha test inc test fcomip adc cmp xchg ljmp cmp xchg mov push test and xchg xchg xchg int3 cmp inc test jne imul adcb sub shll cmp mov mov fild add adc dec push push cmp repz sub (bad) cmp sub cmp mov sbb loop add sbb pop pop fwait cmpl mov mov cmp mov fldl pushf sub lock mov lds (bad) xchg pop adc enter decb out xchg andb xchg xor clc mov inc aas loop push adc xchg rcrl je mov push sub xchg lods enter inc pushf add xchg es sub jbe stc sti xchg push stos dec jp cwtl andb imul xchg adcb jne mov out lods pop pop cltd out outsb or inc push sub mov js add aaa movl xchg xchg jns adc into xor add or mov andb iret sub inc pop orb movsb jo cmp rorl jbe (bad) mov lock cmpb cmpb add test adc data16 mov movb shrl mov add mov xchg cs outsl (bad) out or mov popf outsb mov fstpl fsubrl test xorb repz movsl push movsb mov push scas dec enter lods mov insb add lahf popa pop xchg pop inc jp jl xchg js cmp cmc clc pop sbb fist mov repz movsl cmp xchg jo scas push cltd fsubs mov xlat (bad) push (bad) mov rcr loop enter jp imul add and mov push out cmpl adc testb enter inc testb inc pushf gs (bad) or popa test and shll push and push movsl subb cwtl addr16 jmp cmpl int3 mov xor xrelease shlb in or adc dec popf dec enter inc orl pop outsl subb aad icebp das pusha sti nop xlat sub shlb mov js cmp cmp rclb lds mov out push fadd mov xchg adc jae mov movsb cmp aad and in or test sbb lret dec mov lock rcrb imul adc pop fild std push mov insl (bad) dec push rep je inc scas mov outsl stc adcl subl stos xorb les pop out ds pop subb pusha and fdivs leave adc test mov or sbb rcrl cmp mov (bad) jbe mov fcoms incb inc xchg add add push fsubl or mov jmp xchg jb loopne addl loop and cs cmp mov shll and xchg mov cmp call dec dec mov xor pop lahf cwtl sub or subb xchg insl inc push testb shlb inc std add les es jmp sbb (bad) mov cltd dec (bad) sti daa fstl repnz jne lds mov decl (bad) icebp sub cmp outsl iret push jo (bad) jno cmp mov jne jg xchg inc popa (bad) adc inc inc or sar hlt es mov test mov outsl insl lahf (bad) push (bad) jns or test jnp push ljmp clc dec in aas pushf lret pop jae subb orb dec mov fstpl ret enter jg gs xchg mov cmp cmpsb in nop adcb mov (bad) push xchg cmp jbe jo nop sbb (bad) lret mov aas mov cmp xchg mov push shr cli addb movsl pop pop jno adc adc out lock mov and xchg jne mov les mov mov add lret cwtl xchg ljmp xchg xor push stos mov repz addr16 and and fisubr mov lret out mov jnp xchg sbb adcl mov nop push cmpsl mov movb lahf adc sti xlat xorb and fwait add mov in insb out dec xorb in adcb add push sti add rep sub cs cmp mov sarb inc lret fidivr inc incb xchg data16 cmpb out mov fs cwtl mov out (bad) and mov inc dec mov and je or imul push pop mov sbb cmc push lret icebp or out loope sub pop push mov out rcll addb jmp cmp inc fdivs les (bad) fistpll andb push inc stc mov test inc fmull mov push testb jbe sbb mov (bad) in adc lock xchg xchg ljmp mov or test loopne faddp flds subb dec loop mov sub add lds ljmp test pop lock adc rorb push std insl (bad) dec scas pop js adc ret push ficompl fcompl pop adc sub arpl popa pop sbb or xor mov negb jno cli mov mov mov xchg dec jl push ret loope cwtl popa sbb cwtl or clc add (bad) and mov or xor aad pop add push push popa mov xchg add mov (bad) lcall pushf cmpsb inc dec mov lods pop mov out adc adc clc movsb scas iret pop je movb sbb fisubrl mov mov loope push adc les in lea in enter ret pcmpgtb leave cmp sahf inc adc mov shl add loopne mov addl aaa jbe jnp rcll mov mov fstl mov mov stos inc mov imul jl fistp or mov cmc repnz ret xchg je shrl pop enter (bad) xor mov les es cmp out test adc push scas (bad) ret test pop fbstp incl (bad) mov pop icebp cmp push xchg dec iret push push int3 (bad) lods and adc std inc add gs jmp and enter mov inc call lcall ret mov jno repz data16 rclb jp outsl aam in scas (bad) sub mov add mov dec adc pop aad (bad) mov les xor fcoml mov cmpsl jbe pushf iret push mov adc hlt pop jecxz sub lahf xchg ret fdivs xor or jns stc jae mov sub clc cwtl add faddl jle add and mov cltd adc out sbb inc movsl icebp jns push leave nop pop cld fsubr sbb out jge inc and aaa fdivl jo movsb adc aad in inc add ljmp pusha push call push aas ss xchg popa add fistl nop in mov test imul mov cmc push cmp lods add insb adc enter loop lock jbe std fldcw push js sbb add adc inc aas nop aad xchg mov je mov sub inc cmpl sub add iret sbb jo loope mov jns in jbe mov fnstcw addl (bad) cmpsb mov or mov sahf cwtl mov loope add fcomps jmp add ficomp dec add add bound mov push gs dec sub rol ret enter sub incl lods cmp (bad) mov andb shr or dec cmpsl jmp pop lods push and and enter fs inc mov jg clc pop pushf popa jmp xstore-rng cmpsl inc out xor mov xor mov jbe fcom pop aas ret inc mov cmpsb push fisttpl push div loope xor cmpb cmpl mov dec mov mov sbb xor sbbb sub incb test jp or test std lea xchg mov int3 sbb and in pop popf sbb cmpsl mov sbb scas dec ja je cwtl cmp mov cmp jns js jge xor xorb cmp cltd and xchg sti add lods or out mov clc fwait xchg sub jge test dec mov nop jno jg dec mov inc and xorb push jmp addb addr16 cmp add adc xlat cwtl and sbb fwait subb es addl ror bound lods fcmovnu and xchg jnp pop push call (bad) xchg ljmp movb jae movsb test notb mov pop lock push out ret push cli loopne pushf sbb pop out mov sub push xor test scas mov xor cltd (bad) fstl fsub adc nop ret mov aas mov fdivl insl jmp stos shrb sub mov cmpsl loop inc push data16 sub inc xor es iret adc push fcoml adc sub andb fldt push mov mov cmc addb out lds adc orb inc dec xorb lret movsb cwtl sbb fwait data16 into push adc sub sub gs mov aad lahf (bad) decb or xorb loope pop cli push (bad) or subb xor xchg push xchg push push mov push sbb or imul mov dec mov jl outsb or loop jae mov pop andb dec mov test insl sub xchg mov shrl mov es sbbb xchg insl or mov mov subl popa pop cmpsl mov adc sub push andb insl mov fisubr call pop in out jns mov cltd test fildl mov (bad) jno stos je pusha movsb jne mov xor je (bad) adc das loopne sbb pusha jae lock xchg push pop add sub push icebp adc or (bad) push out test test out jno aaa sbb sbbb mov (bad) (bad) xor cwtl adc inc pushf test mov xchg imul fstpt sbbb aaa stc and jge mov rcrl adc push stos xchg jge subb jp in mov (bad) sbb push sti test (bad) aaa enter fwait push lcall mov mov push (bad) and pop jge lods inc cmp xchg insb sti in shr xor insl mov and dec mov rclb sbb int3 xchg jae cmpsl addr16 sub fcmovnu push cmp inc and mov jge and xchg movsb aad in jbe mov cmpl int mov addb inc inc movsl xor scas test fiadd je xchg push cmp icebp dec mov or test push (bad) mov daa lock addr16 xchg mov hlt xorb push cmpsb sbb daa (bad) test aas cwtl addr16 test jae xchg jle nop jp or jl dec outsb mov scas inc test inc cwtl xchg sbb clc push pop add loop (bad) or cmp addl jno dec lea clc dec xchg sub mov pop jecxz aas cmp rclb (bad) add pop js divl mov data16 sbb in js xchg and jae iret inc fdivrl jg xchg (bad) popa dec push mov xchg xchg cwtl add pushf ljmp test iret and cltd mov ret push leave push or idivb insb mov pop vmovhps cmc pop subl inc js sbb push pushf cmpsb and (bad) lret aas mov dec xlat rclb or ret sarl xorl mov dec icebp add or jae in rcr mov enter xor or enter adc mov inc repnz fsubl in ja pusha call icebp int3 dec jbe sbb orl jge jnp add sbb hlt mov scas test cmc sbb ret mov shrl mov stos mov test jecxz mov inc add je dec push xor jmp test xlat push or enter cmc mov jl push xchg pop inc (bad) (bad) sub adc in in idivl xchg sbb cmpl std sub jge ret xchg pop pop push test (bad) mov pop sub or push test iret and and xor mov (bad) (bad) enter test out sbb lea ret (bad) mov inc (bad) and push add dec cltd jno jo dec add lock loop lock cmp dec xchg (bad) imul icebp test lahf pop movb mov jp test mov add into push fidivr dec fdivs xchg mov mov sbb pop repz sbbb xorb cmp dec mov xor into mov test subb mov inc xchg pop loope addb mov add (bad) mov lods jl xchg mov fldenv pop cwtl (bad) pop popa roll rolb push dec or mov xchg outsb mov sub and cmp stos push xor jae,pt push adc push lods pop mov sbb (bad) adc xor xchg push and mov mov adc cs ss cmpb andl push jmp loop je push xchg push loopne addb js les pop lock adc jae adc das pop xchg push push out inc jmp (bad) in test add iret fidivl adc (bad) mov pop lahf (bad) fdivs xor test add iret outsl nop out adc testl addb or jge push xor xor push (bad) clc repz jmp (bad) icebp cmp xchg adcb jbe jo mov orb dec in je mov aad test mov outsl xchg sahf int3 iret rcrl in in cmp test xchg xacquire fs jp dec pop ret xchg dec pop sti xchg lcall jecxz pop jo call sub imul jge enter mov std in mov enter mov ret xor push jno mov or stos push nop sbb (bad) test ds xlat test and sahf daa dec jo add out adcl cmp xor push notl jg inc int3 sub inc mov bound cmc xchg jp imul jbe add mov std rclb insb mov dec idiv push gs test fadds idivb xor push imul and shlb fsubs orl imul xchg pop (bad) ret dec mov lret jne or adcb inc dec jle pop xorb pop fwait xchg arpl ret mov ja cld pop sbb outsb (bad) iret xchg repz lock nop lds aaa cs xor outsl mov and cmpb jmp cmp stos (bad) fisttpl mov imul (bad) sbb aaa dec insb mov subb mov cwtl add test inc mov lock pop jns mov nop sub adc or enter inc repnz push ret nop dec icebp mov rcr cmc (bad) fdivl shrl das adc or aad inc jge pop inc test jp mov mulb mov jnp push and stos xlat mov or mov stc (bad) add push adc insb movsw loopne in mov and imul add out (bad) arpl stc pop xchg dec add and mov add add mov test cmpsl or test iret leave pop mov bound xchg clc mov jp add aaa dec add movl js call add aad cmpsb sub cwtl ror and outsl roll ret cmpsb repz movsl push (bad) jno loop ljmp jns add xor xor mov scas fimull hlt ljmp inc sbbb stos ret inc or iret or hlt mov mov jl add es adcb xchg cltd sbb loopne arpl push call xor lret inc sub and test je fcomps popa fwait icebp test shrb insl dec xchg popa addb pop fdivl dec out loop cmp rcrl loope loopne test das xor (bad) cmc or stc xchg dec andb insb add add sbbb pop adc in cwtl pop (bad) cmc test jmp addb sbb ds mov mov mov ja xchg jno jl dec (bad) rolb cmp adc pop lcall and xorb insb mov loope xlat and loop idiv pusha je sbbb inc ss mov cmc fnsave subb out scas test xor xor push lock mov arpl jecxz push fiaddl repz inc out xchg add mov repz aad je nop mov sahf lock test mov add repnz shrb sub ret cmp or clc test or push sbb push sbb sub pop jp in xorb adc lea mov xor cs (bad) outsb add aad out dec xor mov call ret shl arpl cwtl push je (bad) ret rcll mov mov cmp push popf inc pop lock xchg or dec pop mov leave das mov aas xor xor test jle dec je mov repz enter loopne or andb ret dec cmp xor bound nop outsb mov sub arpl popa cmc push or or ljmp fcoml pushf enter xor fisttpl adc fcompl call mov rolb cld cwtl lahf stos and mov mov popf mov stc popl dec and nop jge mov jb sub jl mov jp add sub mov nop xlat pushf test pop rol mov hlt fnstenv scas cmpsb jmp cwtl aam inc push cmp inc fiaddl icebp movsl mov lock push idiv dec lods xorb mov imul lahf fild int push fadds sbb loop insl adc movsl pusha jp pop lock pcmpeqb or add mov out and pop fwait outsl cmp mov inc dec std (bad) lea jnp jno adc add pop (bad) cmp mov or clc mov mov inc jo add out pop sbb out js hlt xchg dec xchg mov aaa pop mov cwtl nop ret add push icebp add xorb inc sbb cmp inc push ret (bad) enter rcrb ret pop rcrl mov or enter popa sbbl sbb jecxz bound scas mov fiaddl sbb bswap imul enter (bad) jne xor inc mov mov and mov cs sub andl fidivr add push pop add jmp mov nop xor cmpb mov andb popf (bad) dec jge xor inc push sub sub sbb push pop (bad) enter sbbb xor lcall cmp mov ja icebp or xchg stc sbb je ljmp add xchg sahf push push mov add push push (bad) loopne xor adc xchg sbb in mov leave fmull repz mov cld lcall xor lcall sbb pop inc mov sahf or dec mov xor inc enter or sub add sub sbbb mov pop xor jb fadd iret mov jns jl test mov add mov fcomps clc add xlat das sbb (bad) cmp jge ret addb clc cmp fistpl mov fsubl subb adc negb xor iret rorb (bad) cld iret mov cmpsb cmpsb or outsl fdiv out sbbb add and dec mov add fadds roll inc mov (bad) or jmp nop les into cmp jno mov cmpsb in std nop ret les lods sbbb jle sar mov aaa jle lret je push iret js sbb addl xorb xchg lahf xor stc adc lcall and or and repnz test xorl jb cli inc aad sahf ret addb dec mov jl andb insb cmp ret xor addb cmp sub call xchg andb mov mov lret mov xchg push repnz out stc mov icebp pop iret and fnop pop mov (bad) adc push scas insl test arpl mov mov fwait inc sarl cmp add pushf jbe subl mov cwtl adc and and sub pop add add mov pop pop bound fstpt mov mov xor (bad) stos dec in jl jo inc push cmp ds insb hlt pop cmpsb addb mov pushf and sbb dec inc ret imul int int3 test adc sbb insb xchg pop scas dec shl repz arpl and or and jns xchg push sbb out cmpb pop divl (bad) je call inc mov popf push inc ss cmp mov ds sbb inc pop adc mov mov movsb push sub pop (bad) xchg roll sub insl mov nop add addb sub pop stos movsb or inc pusha or clc xchg in xchg (bad) push (bad) lods or jmp jae fisubr lret nop lock clc xchg mov xchg out cmc mov test mov roll and or incb xor sbbb cmpsl push jb int (bad) icebp jns xchg lds sub push mov jo popf rolb fldt jb mov mov cmpl lcall add testb icebp subb mov cmpb push mov xchg cmpsb repz sub lods xchg insb (bad) or mov cmp and addb icebp push jno mov cs in cmpb das stc add iret mov xor insl andl mov sbb daa pop mov es sbb in andb movsl cmpb jno xorb cltd sbb cmp insb cmpb popa (bad) xor int andb dec mov int3 xor sarb imul ror cmp cmp lds jns xor and jle mov adcb lods jmp xchg xchg hlt out addr16 pop test sbb xchg pop aam subb nop sub aad insb cmpb pop pop (bad) aaa mov adc fnsave push icebp adcb mov sbb jnp sbb test mov cmpb out cltd cmp cmc dec mov cmp xchg arpl out test push pop dec add andb sub imul insl jae imul roll push repnz adc fistpl sub mov push nop mov lea sbbb (bad) pop jbe sub (bad) pusha fildl into orb mov (bad) setns popl sbb out pop mov adc scas jnp cmp jmp and ret xor fcmovbe mov (bad) xor sti add add adc gs push xchg adc inc jo cwtl rorl or sarl fdivrl test mov (bad) aas xchg test pop pop mov mov rclb xor push gs out add xchg mov fidivl js sub xor pop inc fnsave fcmove (bad) imul ja arpl jb and lret jecxz nop ret rcl je jae into movsl test jns in push mov iret mov addr16 mov int3 cmp xor ficompl sub lea add test dec push push jge dec cmpsl jnp push pop fmul jbe cmp and ret arpl pop int xor jl mov xchg adc pop mov mov push scas mov sub push mov jbe push dec mov imull xor cmp ja cld (bad) pushf cwtl xor incb sbbb lock cmp inc or jp (bad) push movsb sub jnp and enter mov push cli pop mov adcl adc push leave daa inc nop mov incl inc inc cli jge int ror adc mov mov mov cmp xchg repz xchg outsb jns adc sub divl (bad) daa cmpsl fadds stc sti mov testl pop cld adc cld test jp (bad) loop sbb lds inc sahf sub push xor fnstenv mov sbb sbb sbb sub or nop inc add test pop push mov dec movsb fildl and xchg dec test jbe bound out inc dec mov popa sbb insb ret outsl adc jo xchg and inc adc dec imul cmpsl fidiv scas orb dec xorl (bad) jp dec cld mov sub hlt add xchg es xchg subb lds sbb cmpsb push fisttpll (bad) mov fsubs lock add add mov addb cld cli add std fmul dec fwait popa test imul mov jge subb inc lds mov pop aaa test push pop je inc and data16 mov mov add xchg mov dec inc andb arpl push movsl dec sub cs test (bad) push dec mov fistpl sub pop xchg cmp cmp arpl push bound lds push cmp push faddl leave jge (bad) dec mov cmp and mov in add js or mov adc push fistl lea push jns xchg outsl xchg fcoms lock shrb lret xchg andb loop imul dec sub xchg lahf mov add popl or jle call (bad) in inc pop jge xorb push lods in or or in xchg mov popa scas imul movsl pop pop (bad) xor push outsb scas imul push das xlat test inc ret mov insl mov add (bad) or mov adc ret loop mov std and in shlb stos shl nop loopne les in int3 pushf loopne push (bad) repnz ds enter mov inc test push mov ss loopne das arpl and xchg orl ss mov adc adcb sub mov pop stos pop nop rcr sbb movsb cmp cli xor outsl loop mov orb xchg xor loope fidivl pop stc (bad) jle adc mov in or pop fadds xchg bound add mov jae dec stos push jb prefetcht1 pop outsb dec mov mov pop cwtl add imul push add or lret cwtl xor xor jl xor mov adcb ret pop aaa stc cmp (bad) xchg (bad) insl xor add pop scas inc mov mov push movsl cs add nop mov sbb aas or sub xor and lds jecxz mov fs fwait inc push incb xor jge pop add xorb cltd pop adc nop sbb es xchg mov repnz sbb insl xchg mov ret and gs xchg rol sbb push call add push jae mull rorb mov cmp orl lods push mov jl mov pop test push lods cmpsl pushf enter lock clc (bad) pop movsl xchg dec mov lahf add xorb mov outsl stos adc aaa fistp popl cmp fcompl in cmc push xchg mov int sbb addl (bad) jb inc push pop cmpsb push in add scas pusha mov enter loop adc aad jae (bad) push mov sbb mov add (bad) jae cmpsb xlat nop sub inc xor mov stos dec rcr jp adc pushf in (bad) xor fbld orb sub push in out cmpb pushf adc (bad) jae (bad) push sbb out pop push mov fs add sub mov iret sub mov or adcl dec jns int adc xchg nop jne shrb mov (bad) pop dec pop push ss repz xor push mov mov pop or repz int mov xchg xor test push pop xchg xlat shr or test xor (bad) mov mov inc push insl leave jns insb xorb mov lea addb jbe enter jb jo or in shlb loopne shlb xchg mov and enter lcall ljmp cmp sub test sbb test push xchg add jne cmp xchg loop in pop test jge dec repz push imul xchg or inc mov daa cmpl ret jl jecxz cmp iret jno cltd jae jbe bound daa ljmp xor pushf mov inc add xchg cmp in icebp addb mov push bound ret inc pop shlb popf outsb fwait inc shld adc lahf (bad) push xor idiv repnz jp jl xchg push sub sub add dec mov sbb sbb jmp movsb push fidiv add push out mov add mov pop add loope dec insl xchg cmp mov ret outsl cs dec outsb cmp gs add lock ja pop mov fildl sub sbb dec or enter and fsub nop jns addr16 mov pusha sub xchg mov loope adc jbe xchg jb push stos ljmp adc mov xchg lods push lds notl mov xor xchg repnz mov push out (bad) mov mov xchg subb ds nop test sbb jmp jl push das fisub mov pop xchg (bad) enter (bad) test inc mov jle push cwtl xchg jl xor add stos jnp in xorb addr16 xchg test cli cmc (bad) or lea repz mov cmp jle insl loopne mov rolb dec rcrl adc add and (bad) fdivrs jo pop ds adc aad shll cs cs daa sub incl popa mov repnz mul addl addl jg lahf loopne xorb push lods out rcll ja lret (bad) pop sbb xchg mov pop push xchg mov bound lock fcomps loopne movl cmc adc xchg sbb test adc inc loope in enter mov mov daa adc xor addl repnz inc ss or (bad) and xchg imul test shrl leave push stos scas dec push and mov psrld pop andl mov xor icebp sbbl sarl (bad) inc mov sub cwtl mov nop sub in pop push push ss das sbb mov ds pop jmp mov sbb add dec adcb mov aas mov imul shrl cld and (bad) mov pop pop nop mov (bad) fwait add mov sahf jl movsl lock or scas xor imul adc sbb out orb pop shlb popa cltd test fild add jnp push inc pop fisttpll (bad) and add jle ret arpl sbb or pop mov out sub imul and push clc ret mov aaa or xchg xchg scas addr16 mov sub mov jle outsb adc movsl pop ret cwtl push push into faddp or cmp lods or mov cmp nop and fcoms loope test das test adc mov pushf iret sub gs lock mov and out dec sahf cmc (bad) adc andl cmp adc mov ljmp fcom mov popf clc mov pop std mov adc push dec mov add scas test aad test cmpsl push fucomi (bad) dec insb mov cmp test push xchg inc data16 cld add push aaa nop fmull or pop adc cmp jle (bad) lahf sub pop outsl mov ja mov mov dec or addb xchg xchg mov lock mov in fadds and xor jp push xchg loope jo lds sbb (bad) das xor jge xchg scas cmp push jg mov adc xorb sbb fsubrl push subb adc bound sbb adc cmpb xor mov outsb xor stos mov push (bad) jo test mov daa pop fcompl and push adc fildl call dec ds mov sub cmc adc cs in pmulhw inc jmp flds orb sub popa pop test movsb pushf cltd adc adcb push lock mov lea popa cmp xchg xor subb shl leave ss into push jbe subb sbb cmp dec in andl testb dec mov jge or addl and (bad) mov (bad) addr16 sbbb xchg popa push jne mov sbb orl je jo jae mov sbbl pop aad push insb fimul adc bound mov mov lahf push push fdivr mov mov fildl push in bound roll pop rorb or mov stc loop cmp loope mov and push xchg fdivrl add push ret add sbb insl pop jns jnp add mov and mov mov jle xchg jno cmpsl pop frstor std mov into add xchg sub inc xor mov (bad) dec inc mov push fldl fiaddl cmp dec xlat xchg dec rcll xchg pop jge aad adc add clc int3 mov ret and lret inc mov push outsl push push insl daa ret (bad) sbb sbb xchg xlat cwtl cmpsb shlb pop (bad) cmp nop dec repz into sti rolb ret movsl push adc les add test nop cmp out iret testb fwait dec (bad) arpl loope xchg psllw test jecxz xor stc addr16 xor in and enter leave jl out das cmpsl loop sbb sbb loope pop fisubl push mov sub cmc ljmp jo jecxz aas clc mov xchg cmpsl hlt jne jb loop cld stc xor push mov inc cmp mov inc xchg fiadd sbb cmp cmpsl pop test sti adc (bad) xchg xchg (bad) sub inc jg loop inc fmull loop mov mov mov sub (bad) push add loopne inc enter cmp sahf push scas push outsb addb xor das lret or enter aam in nop xorl add mov jno jmp cld (bad) cmp fdivs (bad) je xchg loope xor add push orb addb nop xor xchg sbb cld stc addb aam fadd cmp mov add orb mov pop adc cwtl int3 cs cmp loopne xor (bad) xlat andb (bad) pop lock call pop outsl nop or jns mov addr16 xchg inc mov add mov sbb std add or mov adc jle mov mov test push fwait sbbb ret fs mov (bad) xor (bad) jo push pop xlat test ret aam mov clc movb mov insb imul out stc lcall mov pop pop mov fildl test fidivrl adc stos sahf int3 popf pop loop out (bad) push and aaa adc jge pop int3 icebp (bad) inc cmpb frstor sub ret mov cwtl xor je into and loope jmp push push mov div fcomps or push faddl ds mov adc or notb (bad) cld cmpsl push xor xchg leave imul sbb pop jb (bad) cmp cmp dec cld mov out cmp inc sbbb jne lret mov dec mov clc add mov adcb lock leave mov imul adc pop fiadd cmpb stc mov shr dec pop and push mov out shl xchg movb in jecxz fsubs (bad) lock push jb push lds and ss icebp push mov pusha inc stc mov add xchg and shlb xor adc sbb addb dec mov scas mov mov les clc rcr and xor mov dec sub test cld incl aas mov stos mov sub add dec dec lods mov (bad) ds mov pop pop sahf xchg adc sahf mov mov loope in movsl pop jl sbb lock sbb xchg rcrl ljmp aaa cmp mov dec xchg jne jae push call cmpsb lds movss test jbe (bad) test pop cmp dec test push fidivl dec insl xchg inc jle jns add jno (bad) mov jg sbb fiadd jl dec test or pop push stos call ljmp fs out fwait and sub xchg jo popf mov inc inc cmpsl pop and and inc mov xchg popa sub mov incb enter stos ja xor add adc call inc jmp in (bad) inc test mov sahf dec xchg dec mov sub jne pop les cmp adcb mov fildl in imul mov addb mov fcom cmp clc push mov jl gs movsl mov jae mov orb and adcb mov jnp or das adc sbb push push cmc bound pop cmpb test mov mov das aad jge es add push fadds xchg inc popf sbb push test enter loopne cmp int3 inc jb inc jo mul add mov scas pop jae adc mov nop rcll pop mov fidiv je,pt std mov icebp lret and pop or add sub scas pushf xchg imul into jne,pn lea push scas sarl mov imul mov inc movsl mov adcb pop fs and nop sub loop add push imul mov inc cmp xchg mov inc jp js dec jmp push adc cmpsl push pusha lret sbb fadds dec xchg das loopne jnp scas mov pop xchg mov dec cmpsl sbb aas ret test into daa or push fwait xchg mov jno jmp cmp lea add xchg aam xor daa sti push mov xchg test movsb imul mov adc push inc sub je inc xor xor test mov sbbb xchg out add adc jo movsb add sti mov mov xorl test (bad) pop lcall cmp test xor adc jnp enter push stos push out add add cli mov mov mov ss adc int scas sbbl outsl (bad) insl inc movsb fsubrs mov mov push out sar mov jae arpl in insb test test mov push jl xchg jmp fimul cmpsl jns mov xchg mov popf (bad) lock ret push cmc insb in iret push sti inc pusha cmp sbb push jbe je cmp sbb push push cwtl adc sbb (bad) jbe jecxz add inc sbb mov xchg ss mov lret xchg adc inc ror mov cmp int3 insl pop lahf mov lods push cmpsb (bad) (bad) lcall push push cmp sub hlt fldlg2 adc cmc mov jmp arpl je pop fadds push mov adc mov outsb mov bound lods and jmp mov push (bad) std cmp mov gs push sub xor scas push cmc adc mov cmp add or popa lods lret das mov leave xor push push pop push lods lds lret aad xchg and inc inc enter and movsb addl mov xor adc cmc nop dec push repnz mov adc les sub or xchg mov stos xorb in repnz lcall jae xchg push loope clc scas add std xchg pop mov mov pop push xchg or pop jl enter loop addl or arpl (bad) icebp cmp imul jb push pusha subb mov lds xor outsb inc dec icebp xor mov bound addb fs xlat fildl cmpsb lret sub addb jle xchg pop clc rorl movsb push xchg xor fidivr xchg mov lods mov loop inc (bad) pusha gs jg push orb push fidivrl les (bad) in and aas (bad) pop rorb cwtl push xchg sub and ret addb test movsl test pop (bad) ds ret scas sub mov cmp mov adc sti add daa test push pushf adc lock enter insl addl repnz addr16 sahf rclb jno jl mov jmp pop pop add incb (bad) or dec negb mov clc cmovae loopne xchg scas pushf lock adc orb mov cld (bad) xor and or sub movsl push scas push fstpt mov push outsl mov xchg arpl jae sarb push push loop leave jno outsb xchg aam and fs cmp push mov aad jno add adcb rorb fiadd xchg sbb and arpl sbbl fiaddl or xchg in pop mov ljmp dec cmpsl pushf (bad) in hlt push out scas cmp nop mov fwait addr16 (bad) jg mov movl add dec rorb xor adc adc cmpb add mov sbb (bad) lods cwtl (bad) adc jnp orb ljmp cmp dec les mov shrl (bad) enter out sbb or mov push in push imul or push insb insl inc fnop lret jbe ljmp xchg push mov or loopne test clc aad xor out pop xchg or jle mov push cwtl (bad) xor in push cmpsl mov cmp or stos shl push and imul icebp jb insb xchg in lods imul lea push nop sti xchg (bad) push dec sbb xchg pop mov or cld sbb xchg xchg mov stos andb imull mov nop pop and cmpsb pop push adc push pusha in push cmp bnd sbb sbbl movsl enter adc jle adc add pop jmp (bad) data16 jmp inc ret add repz add sub dec jo add (bad) mov xchg sub bound xchg add mov push fmul sub dec xchg cmp mov outsb adc pop cmpb mov outsb cpuid add loop cs pop sbb jg push test add push adcb jmp cmp dec push adc and push movsl inc cmp scas ss test dec stc push mov xlat adc cwtl cli scas add outsb pusha fcomps lret mov and fcomip xor jno lcall cwtl addl nop adc addb loop cmc pop lcall xchg xlat or (bad) and mov add (bad) mov cs outsb mov ret cs mov jecxz ret testl dec into xor in jne fmuls ja pop push cld popa push mov call jle push ror push test mov sub insb cmp daa xlat fsts in aam arpl mov pop sbb arpl mov lret xchg push test and jb xor jl fstpl in jbe stos xchg imul adc lock mov cltd shll cmp int3 les call adc scas repz or push add cltd jl mov mov imul mov daa mov roll test jle and adc xor inc mov mov and aad xor sbb out das fadds push cwtl shlb sub enter enter jmp mov (bad) inc leave subb jmp inc push push push cld les lods pop scas pop fild pop pop or lock imul cld xor sub cmp add mov mov jno hlt sbb (bad) jmp stos and (bad) rep and lock jbe mov or inc imul cmp cmp fistp sbbb test inc movsb cmpl jmp dec (bad) aaa mov jle (bad) xchg arpl xlat fisttp stc lea (bad) fdivs cli ljmp nop mov add les mov imul xor sbbb push pslld mov flds cmp pop nop int3 xor sbb enter mov dec clc stos xor xchg andl cli sub imul addb cmpb insl xchg enter repz xor pop sbb rolb call inc mov adc jle mov out mov cltd data16 cmc (bad) fidivr adc scas jno add cwtl jnp add add jl int3 test sahf lods adc test push into (bad) je jle lahf jae inc mov hlt mov push repnz outsb push xchg shl divb mov sahf fdivl loope loopne fs inc jb in andb push lcall (bad) incl sbb and or fwait add mov hlt and iret dec (bad) (bad) aaa dec and inc out xchg call (bad) cmp cli jae jo (bad) ror jl mov xchg xchg inc in fucom out enter fxch repnz inc mov or xor stc sub out addr16 cwtl sbb into icebp repz mov add fmuls xchg dec or adc sub sbb imul dec push nop pushf rcr test lea into xor mov jns add mov cmp fisubl mov xor add testb fmuls xchg mov test das aad mov lds fcomp arpl fcoml jmp testb scas (bad) jge fxch mov dec loopne repnz cwtl pop add cmpsl sbbl push jmp and lock stos (bad) bound je (bad) jbe adc mov out clc mov sub jbe xor jmp inc sti xchg testl jl xchg dec jmp push lods jno add xchg addl cmpb adc aas (bad) std or inc dec orb arpl or dec inc or xlat inc mov jmp mov addb arpl out roll pop shrl scas ds lret mov add mov xor add (bad) xor stc inc repz jecxz inc divb inc xor add scas jg repnz push cli sbbb cmp fcomps aad int ljmp orl sub insl lock lahf ja mov xor aas fwait pop mov and fcmovnbe andb mov adcl (bad) lret loop pushf out cmpsb push xor nop xchg push test les test cmp jae fstl mov cltd or int mov sub inc jge popa and (bad) cli out sbb xor dec xchg addr16 ss adcb push pop and jle popl pop sbbb insl bound (bad) repz lods add sahf add mov jb fdiv mov into and (bad) imul dec scas mov out cmpsb mov into andl mov xchg lahf roll mov xchg pop je jge cmpsl mov arpl add icebp or stos jle jb add ja mov and enter hlt loopne sbb jb clc xorb pop add xbegin xchg inc add insb test orb dec jno rorl ret sub mov mov mov dec enter sarb (bad) cmp or inc xlat lret mov jbe orb sub jns movsl rcll xor outsl roll nop loopne es pop xchg or mov jle sub jg add mov enter jle insb pop cmpsb scas xchg add xchg repnz clc int3 (bad) test dec mov (bad) dec sbb xchg test adc dec scas pop fstl cld adc adc enter gs loopne xchg dec jg xor mov or sub or jns mov add dec pop stc scas std loopne cmp mov push lret (bad) mov not inc das sar jnp pop fnop pop inc imul jl sbb adc jbe ret mov aaa in ss jp (bad) jae push push and cli adc mov mov xchg fstl and dec gs stc push ds add pop mov add mov loopne add mov push out out fist test gs movb int3 sbb lds push sbb rolb (bad) int3 int3 ret or mov clc mov inc pop popa push mov xchg adc (bad) jb lds sbb xchg mov iret das push fidivrl fldl xchg jns addl std dec and inc mov sti cmp sti add jb xor push inc mov ret mov adc sarl sahf bsf cmp insl sbb mov movsl in jmp sub enter pushf mov sub loopne (bad) mov rcr pusha jp jmp cmpsb mov add addr16 subl (bad) test fwait jmp jle in fsubr mov xorb scas inc (bad) mov jp into shrb das lods sub mov scas xchg sti cmpsb sbb mov cli das out pop bound add out lea fimul add inc xorb scas push push test repz bnd andb or adc icebp push outsb out mov pop cmp sub pop sbbl push out xorb xor pop clc stc or xor (bad) mov imul xorb jl enter xlat add addb aam je mov loope pop cli std jno push dec xchg insb imul aaa pop mov in pop adcb dec das loop inc sbb daa xchg mov cltd pop and imul mov or push lahf mov test add in addr16 xor cmpsb test inc lock xor xor mov adc mov imul mov unpcklps push or imul mov jne cmp addr16 leave pop sahf pop loop sub (bad) push jo mov leave rorl push (bad) pop incb pop imul enter lret mov xlat sub test push nop pop push lods and jno lahf and adc and orb aaa out push cmp in jns nop aam sbb push pop sbb inc test rcr sbb xor xchg nop inc push jae fidivr ror inc ljmp lock ja cmp jle xorb pusha bound xchg clc or xorb jae out cltd adcb mov fadds (bad) fimul xor repz jae or adc mov lea (bad) or pop jmp test cwtl pop lock (bad) dec mov and sarl and arpl das xor inc or test sbb jne xor cld sti fstl popa lahf pop add (bad) cltd aad scas test mov mov dec addb (bad) xchg (bad) jg jns sbb adc mov aaa into es and int3 xlat and arpl inc push movl cmp xchg mov jns in fs and aas add mov push cwtl outsb ficomp rcll fdivr pop cmpsl add shr mov inc daa scas cltd mov insb mov int popa hlt and (bad) and movsb jb cmc test (bad) fistpl fisub xor mov bound push ja imul cmp fild inc push push loopne xlat nop ret popa leave mov or lea add mov lret adc add pop dec inc ja movsl mov js es rol fdivl mov cmpsl inc sub in roll call pop les dec imul loop cmp popa dec pushf test dec les movsl mov and in adc clc (bad) cmc (bad) bound adc in jb cs xor lret leave add push clc les dec add sub inc movsb aas je ret imul sub xchg aad subl loopne lret or mov or pop out insl mov outsb xchg mov loop out mov sbb push and adc cmp test pop cmp adc inc mulb movsl data16 sbb out roll cmp xchg pushl (bad) or imul pusha andl (bad) xor add loopne sbb nop nop sbb test int3 mov xchg sub jmp xor aad sbb imul js inc pop mov inc inc fbstp or push mov shlb mov lret xor and xor pop rcr (bad) in jle jmp insl call ret mov pop rorb (bad) mov (bad) add mov hlt pop int3 (bad) mov (bad) add iret adc shll rcrb imul aaa push lock adc aad jle cli mov adc adc out jmp rclb xchg clc sar lret pop xor es int in ss outsb (bad) sub xor lea clc mov xlat pop cmp (bad) stc mov lahf mov scas aaa lahf cmp enter icebp iret pop sub sub mov rcll mov xor nop adc sar ret or daa jns hlt pushf inc dec testb nop fmul pop (bad) lock rclb out or rolb mov (bad) cmp in outsb mov push sbb cmp clc aam dec mov ja cbtw adc (bad) mov pushf rcrb stos mov and pop loopne rolb cwtl das mov sbb add sti subl pop and les add dec push mov cmpsl rclb clc dec fadd sub adc lahf lods mov mov outsl jnp test dec cmpsb pop sahf inc pop xchg iret incb cs decb adc std inc icebp int movsb xchg outsb roll stos jns movsl jbe loopne enter ret xchg add jle (bad) popa rorl rorb shrl add dec mov jnp lret lods pop les jmp mov and (bad) mov adc dec lret movd mov mov jecxz mov lds divb std cld jbe mov shr pop and loopne add inc pusha jl pop mov push (bad) orl test xchg mov sbb sbb xlat cltd add ss ror lret out cmp js pop mov int3 mov pop test add inc stc xchg rclb test xor in sbb aam ljmp in mov adc ss in push sbb out fidivr inc out inc cmp xor cmp push fild js out dec lahf push xor pop fsubr adc jmp icebp add mov es cwtl test aas jecxz test xor andb inc add mov xchg into int3 jmp (bad) push (bad) cli and xchg mov mov mov sbb repnz fisubr addb cmpsl jb adc jns and add jnp test mov cmp pop iret (bad) jb or inc lods pop sbb jl and nop mov insb mov ret xor loop adc pop or sti and sbb (bad) mov dec lcall stos and dec xchg in (bad) pop lock test cltd iret jmp mov stc add enter lods mov cmc mov add mov iret enter gs into inc xchg mov (bad) lret mov int sti shr sub xchg std fidivrl adc shlb jecxz lock sbb enter imull imul xchg sbb mov clc in test aad push jp ss nop cmp clc ja pop mov jne (bad) pop in outsl add testl xchg and or repnz sub hlt lret mov adc sub dec (bad) sbb pop jl mov and adc xor fmull nop mov inc (bad) xor and adc mov sub cmp loopne xor lds push pop jmp std inc cmp sbb test bound fiaddl xchg jecxz dec nop adc lds iret inc sti add gs rcrb cmp nop sub inc (bad) scas gs (bad) mov jle outsb jp mov xchg xchg iret xchg jnp test je outsl scas or and and cli les iret sub dec rcrb addl xchg cmp mov fmul sbb int3 insl lea ret adc lret clc sbb sbb pop push ret adc mov inc jbe (bad) les or fwait gs and test (bad) movsb ret cmp jns nop gs adc (bad) fildll bound sub pop jb pop pop add cmp add movsl (bad) sbb mov mov enter mov push popa xchg mov mov nop mov es repz dec jns cmp fsubrs mov fstpt outsb enter mov mov test popa mov orl daa pop ljmp cld fwait movsb pop ret mov and sub push xchg mov jle fisubrl xor enter aad push (bad) fcoml cs iret test ret shll (bad) xchg cmpsl rolb xchg ficomp jns cmp mov adc out xor mov imul xchg nop mov ja add sub sbbl (bad) cmp fs daa dec push cmc mov or mov mov mov adc mov lock adc push adc push mov lret (bad) cmp imul xor leave lahf mov xor jae jb insb loopne (bad) inc xchg cmp push js test mov iret mov pop push test and xor push call push loopne iret add jle mov mov repnz pop mov dec jne sbbb cmp movsl out push (bad) inc mov cltd int3 pusha repz dec test dec repnz ds fstpl or mov ret sub mov mov loop loopne rol push inc sbb movsb orl mov loope jno add ljmp nop mov dec mov loope sbb fdiv mov pop mov mov fnop stos aaa std mov inc dec fisttpl test or fwait lret jp ret test adc cli es loopne (bad) push mov mov mov loop ds in jo fadd (bad) sub pushf mov loope push insl test push mov jmp cmp and lret es test cmc std push gs iret mov std in shrl sbb mov outsl push mov add loopne jno jle sub loopne jmp hlt cmp sbb test adc lock inc add pop sbbb inc pop fsubrs xchg fcmovb mov mov orb scas pop clc aas ret sbbb fadds mov jmp lret sub xor lds incb mov cmp or mov and push movsl in andl sahf jnp or jo xchg movswl je xor mov bound mov arpl push mov adc sbb inc pop mov lds adc or mov imul mov call imul sahf cmp sbb pop sub push movsl dec xchg fadds test xor mov cmp xor andb test xor scas pop add sarb pop loopne adc or aaa (bad) sub push dec adc adc mov mov cmc nop push push movsl incb out cli sti fistp xchg test incl lock bound fsubrl and cwtl add lock adc xor jl push (bad) sub or test xor incb cwtl xchg jecxz push sar movl fucom loopne (bad) dec orb outsb rcr mov fmul xchg test and jns into sub jnp pop les xor int movsb lods xor xor aam rcr adc cmc iret push loope jno insb jp pop cwtl data16 push sbbb jns push imul dec nop std cmpb orb repz and sbbb out aad call mov dec mov in daa stc mov xor sbb cmp iret je mov in mov out push sarb orl push nop andb push xor les mov cwtl in enter ss add fcomi or sub adc mov lds leave cmp mov inc mov jb roll into xchg cmp pop rorl and pop xor xor int3 sbbl subb jae,pt clc addr16 test int add leave mov cmp xor adc daa mov loop in popa mov inc test daa nop call push mov inc jo hlt push into mov nop mov mov insb pop xchg js push adc stos mov ja xchg lcall mov outsb mov pusha imul mov iret jns in test mov test push mov subb pop (bad) (bad) out inc push sbbb jmp out mov pop or add add js inc pop jg jge jns in (bad) shlb mov jno repz (bad) aaa out xchg xor cmp and pop or (bad) es mov xchg mov addl mov dec sbbl mov mov cltd jp sbb xor inc and ficom xor fs and (bad) jae xchg mov or call ret mov pop lods adcb jne (bad) int3 cmp add inc adc sbb jecxz cmp lahf pop pushl push sub in and call icebp imul push cmp (bad) mov dec xchg pop xchg or and inc scas dec sub test arpl xchg (bad) fidivrl dec test cmp orl xchg pusha mov aas rorl mov lock mov lret add and fiaddl jecxz lds mov ret popa add loopne jnp in xchg mov (bad) aaa pop xlat dec mov test das xor add jmp mov mov xchg dec shrl mov mov sub mov sub roll data16 adc and push testl xchg adc sbb and adc subb jo fiaddl (bad) insb mov pop fcompl sbbb (bad) seta push add xor push cmp mov cmpl dec cmp subb sbb dec jg ret out imul and subb movb mov shrl mov fisubrl jbe andb scas imul inc ret mov pop mov cmpsb xorb ficompl mov xchg loope cmp decb inc stc in mov dec into incb add xor nop mov add lods jl bound enter add jno inc enter cmpsb cld sub into xor xor mov test shll pop jbe pop test fcompl dec shr and iret cs cmp test add and adc xlat xchg test pop xchg sbb das or mov mov pop mov sub push push loope mov mov mov test mov inc sub cmp rcr fiadd mov jg adc or (bad) scas cli or outsb mov xor jns cld inc mov jae mov push andb fwait push jne xchg subb jno lea test mov (bad) or idivl jno dec mov push cmp int3 sub and xchg jno iret insb mov movsb cmp mov aam add xchg inc sbbb sbb incb (bad) jne pop pushf or test xor in or int inc xchg adcb pop sub sbb orb and push sti mov (bad) xor sub mov jns xchg fwait xchg insb add lret add imul pop push adc sbb mov inc mov cmp push xchg jns sti movsb xchg andb jno cmp xor gs cwtl jp ss jno pop andb andb pop into inc cmp xchg sbb outsb (bad) fcoms pop aaa mov bound cmp icebp or rep imul test jmp adcb aas movl mov cmp xor mov add sbb ret adc jns lret add (bad) shl test lods sub pop add cwtl inc mov iret ficoml add pop cmp mov add mov pop xchg adc inc push and fs fsubs (bad) mov pop cwtl push (bad) in inc faddl addl push imul clc pop test js mov push lret (bad) cmp inc and fucomp add or nop pop insb dec pop ja xchg (bad) or mov inc in adc (bad) je (bad) pop nop and pusha gs test dec (bad) fisubr ret loop push sbbl ror in pop cmc das push movsl ret loope iret sbb adc movsb nop (bad) repz mov sbb push mov pop lret pcmpeqb ss cwtl and aam aaa xor dec (bad) addl mov (bad) testl push popf adcb mov mov sbb or enter daa mov std xor xor mov shrb stc in mov cmp test xchg cmp pop (bad) int3 and sbb (bad) rcrb mov and mov cmp push mov jmp nop add lods push add in adc or jns add fiadd add jb mov xchg jae inc cwtl xor out push iret xor cmp pop cmpsb movb sub sub cli loop sub mov in sbbb rclb je sbbb mov adc imul xlat test and pop jne mov cmpsl sbb add mov adc (bad) int (bad) xor xchg mov enter pop mov adc (bad) pusha lahf (bad) pop loop push mov scas dec cmc cmp jo les out or and sarl cmp xchg xor mov push mov mov cli loopne out (bad) negl and lods xorl mov notl nop orl imul xchg dec sbbb bound mov shrb add lods push and mov jno and test xor rcrb lcall (bad) popa or xchg mov inc cltd orb inc mov loop test fwait rcl call xor push pop xchg out or movsl mov outsb or test pop xchg xchg sub inc and mov sbb out jne adc xchg in pushf mov jnp mov and push loope adcb mov movb push xorl fwait fs mov xchg ljmp stos xor popf pop mov push add jns mov aas mov outsl (bad) sbb stc add add (bad) mov xchg jo subb enter aaa add pop add aam test addr16 and xchg clc mov notb incb int jl cmp xchg add sbb add (bad) (bad) pushf mov and sbb (bad) outsl (bad) mov dec or sub xchg jo or (bad) das mov or adc repnz andb movsl dec mov inc mov psraw (bad) jecxz data16 mov and stc xchg mov cli movsl xchg pop mov pop dec or push jae fs pop in pop inc icebp mov sub fildl in or push jle add push sub pusha mov fidivl enter cmpb rcrb add xor lret mov sbb ljmp sbbb mov test sbb enter test lock bound imul test (bad) testl stos push (bad) sbb arpl cmpb lahf fsubs sbb push or mov sub out pushl aas (bad) dec jge push inc loope aaa xor shlb nop subb test lret int3 jmp add xor addb cmpsl xor push ret sbb mov jp icebp jnp mov pop inc mov mov pop sbb and clc mov cmp push repz push add (bad) je pop sahf mull inc clc or sbbl xor push dec scas xorb sbb test ficomp mov lds mov and sbb cmp xor sub cmpb fdivs push pop test repnz sbb dec mov adc cmp xchg pop in test fcomip andb mov cltd pop aas mov mov incb frstor mov sbbb icebp or xor xor push mov cmpsb push int3 (bad) out addl inc mov push pop test xchg imul std add sbb out and adcl push icebp (bad) xor test push dec mov enter into subb adc pop cmpsb (bad) roll data16 enter lods jns pop (bad) stos fsubp insl push rcrb or (bad) dec xor lea or cwtl pop call movsl mov ljmp loop or xor sbb or test push (bad) or fcomps xchg sub add inc mov fmull pop mulb imul cmpsl arpl mov scas fildl push dec add adc mov (bad) adc jnp rorb loopne les jmp test add (bad) mov cltd xchg push fldcw sbb aas dec mov pusha cmp cmp repz fcomp cmp mov adcl and pop jns imul test xchg sbb addr16 add sub test out addb mov clc dec push hlt lock es in das mov jb inc dec inc mov inc das sbb enter mov cmpb lret outsl inc in mov push mov cmpl sbb andb push mov ja mov ljmp jle xorb pop je mov jnp test addb lds and sub lret pop mov cmp dec and add xor das xor sbb repnz add enter test add mov sub test clc into push (bad) mov scas mov roll cmp xor add xchg push scas cmp pop subb cwtl aad mov sbb push mov test out xchg xor call fsubs sub lcall les imul (bad) pop sbbb rolb gs xorb sub test in mov pop xor add mov lods fisub rol sub subb aaa sahf orl dec (bad) fwait and xchg test mulb sbb mov or inc test repz ror xor (bad) xchg pop xor fwait or pushfw mov adc xor cld aas add push adc (bad) out jns cs sub or popa xlat pop cwtl adc xor shrb insb jle test fxch xor xor dec and fstps xlat pusha sbb mov and pop or dec in or in sbbb sbb test mov rcr out dec mov (bad) push ds daa add jg call pop repnz bound push push shlb dec fdivs and test adc loope dec jmp cmp sub mov sub leave push dec mov push cmp jle cwtl pop xchg jecxz (bad) std mov mov leave fdivrs sub addb out push lock icebp je mov out repnz test aad add cmp adc (bad) sub in popf pop cmp add movsb loopne mov test pop lahf sub cmp sbb nop or dec pop push popl mov dec dec lock mov jge add xchg dec pop (bad) xchg loope mov sub int mov fs xchg sbb vmread mov mov xchg mov mul adc rcrb jl loop mov imulb push mov shlb out fdiv in xor les out stos sbb or ljmp sub mov cmp loop gs xorb seta push adc (bad) cld mov mov jl xchg jle aaa mov inc lock push mov inc mov inc push imul sbb (bad) (bad) xor jle mov xor add mov outsb sub loopne lea dec enter xorl stc inc mov mov mov test test and add scas and mov bound cmp inc sbb int nop pushf cmpsb ss call adc mov bound cmp insb outsb cmpsb sbb je mov ds sbb mov shl out lret push dec stos mov mov dec xchg cwtl outsb push mov roll xorl xlat mov adc xor lock mov xor jmp mov jae or pushf andb cmpsl push notl aaa lret outsb xchg inc mov andb pop dec not es add test sbb test jmp sarb mov pop push push call mov adc dec inc mov dec push jge (bad) roll fwait or dec xchg ja lock mov repnz xchg mov push add mov mov inc mov scas add mov inc fstpl adc ret adc arpl mov mov pop xchg lock int3 cwtl outsl xor or push imul sub xor xor mov leave cld mov jp aad add pop mov fsubs frstor in orb jnp ficoml cltd movsb push fldcw lds jnp mov push enter loope sbb int3 sub std or xorb (bad) jg push mov sub orb (bad) ds mov outsl testl push jle mov stos loop arpl ficoml cs mov mov in fmull out ja mov out ret push jmp mov arpl (bad) cmp mov mov (bad) ja mov test xor push lock addr16 (bad) add adc dec (bad) jle test cmp data16 inc mov sbb sbb lods out pop popa int3 mov movsl mov inc ss cmp test jp pop and and mov fbld imul mov push stos (bad) sub int sub (bad) scas leave mov pop test bound pop in xchg into loopne,pn xor cwtl jle (bad) jp or jmp push sbb add mov popa jns pushf pop les andb jp (bad) shl push andb (bad) js adc inc mov push pop mov (bad) xor imull in aam (bad) nop lret mov cwtl test adc cmc or xor out or daa (bad) int cmp xchg stos pop mov lods repz xorl mov std arpl into xor and fisub inc pop push lret iret mov inc lahf cli cmp lcall jo repz xchg sbb adc cmp push out jnp add cmp xlat mov (bad) test ret adc iret scas lea clc fsubrl add xchg push iret sar into mov and sbb inc repz imul sbb mov iret mov in xor cmp cwtl mov nop in outsb mov sbb lods pop jge lea sahf jge ret das push cmp add mov xlat pop lods xor test pop xchg js je mov cmp cmpsb inc mov nop and xchg shr dec (bad) sahf or icebp or test fsubl cs (bad) int3 jo sub (bad) shrb dec pushf mov push cmp add out jb in imul mov scas xchg lea xchg loopne or in jecxz cwtl loopne xchg jae addr16 mov (bad) imul push andl or lods adc dec mov repnz push xor es int3 insl fcmovnu adc scas enter inc clc mov jae mov rcr or and mov cmp mov loopne in inc negl mov mov add cmp xor xchg and ljmp arpl std push pop jecxz cmpsb popa shrl push mov xor pop pop ret jo inc stc loopne cwtl iret push jnp into scas ljmp pop loopne lret in (bad) ss or mov test repz shll push addr16 inc lret int3 stc ret xchg mov movb add outsl adc divb mov sub out add sti pusha sub pop cmpb in movsl pop clc pop std (bad) (bad) xor ljmp or xchg out sub cmp mov (bad) pop hlt (bad) xor jl lret iret ds adc (bad) xchg out mov adc mov test pop loop cmp sbb pop pop pop dec imul fs xor cmp cmp ds aam loopne ret dec sahf sub nop push pushf aam movsl inc push dec (bad) iret test mov sbb push (bad) jmp add adc sub jnp mov lcall inc adc insl mov (bad) xchg (bad) pop enter cmp rol pusha inc add push xchg xor mov jg inc stos or frstor adc (bad) jmp cmp mov clc imul adc or aaa js or lds sarl lods jecxz stos inc or icebp cwtl pusha sbbl mov mov cmp mov (bad) fcmovu mov (bad) loopne int add clc mov xchg imul ljmp test dec pop cmp std fdivrs mov imul push cmp or and mov lcall push (bad) repz daa push ret stc (bad) (bad) icebp cltd or bound push rcr pop mov cmp out arpl sub jb out adc mov cltd and in adcb scas add cld adc les inc sub jnp std into int3 xor mov hlt movl andb enter mov loop orb xchg push push and lret mov and xor leave insb shrl jp adc push addb pop out sub popf cmpsl mov mov adc lods cmp xchg push cmpl inc aaa jnp sbbb out test inc mov lods xor mov xchg mov push and adcb call add dec pop lcall daa dec je ficompl jo test dec shlb arpl incb xor fstps and roll pop test orb test mov mov sbb xchg xorb dec jbe pop or test mov adc lds dec push cmc nop inc add subb mov aaa xchg rorb add mov sub push push mov cli cmpsl mov insb or inc cli cmpb aaa les jns inc fildl and lcall jno loop ficompl andb negb fwait mov xchg jge insb or fs inc nop or mov fdivr jnp jle mov dec lods sbb test and mov call add popa cmpl fistp add andw lods dec xchg and enter test fistpl pop mov jno jl mov daa inc fiaddl cwtl and sbb outsb add dec push fwait addr16 mov jmp push repz push lods sbb adc movsl mov mov ja test les jmp dec xor cwtl jne adc jmp sub outsl xor fmul sbbb loopne add or mov (bad) in pop test sub mov mov jl repnz push aad sbb jmp cmp in xchg loop jp sbb into add inc stc js aaa mov sub out orb popf pop mov shll insl pushf dec test and pop fwait add pop sbb mov mov dec xlat out jmp ret xor jl inc cwtl mov enter and adc (bad) bound leavew sub shlb cld movsb pop test inc mov lock loop repz lea pop pop jp and mov add out js popa jns out mov xchg mov scas pop xchg sahf les mov clc bound adc add mov addb xor into sbb pusha sahf push mov mov rcll (bad) xor add or sahf inc inc mov (bad) gs dec mov outsl sbb repz sub enter mov add imul sbbb dec mov sub fistl mov xor test and inc sbb mov daa rolb (bad) or jne das (bad) push rcll iret or xor jns imul in add iret int imul jge mov loope dec lds das fnop xchg add cmp int3 cmp mov mov rorb lahf lods jno and sub iret pop push test sub jge push (bad) adcl ret inc iret data16 xchg push loope add push les cli fldt arpl xor out inc clc sub inc push jnp js (bad) adc bnd jl inc pop or inc roll repnz mov divb jo insl (bad) les mov mov xchg pop cmp test push and pop add (bad) fldl xor dec ds nop add fsubrl xchg ror divb pusha xor and xchg dec dec and pop xor nop outsb or std cmp inc jno ja push ret mov mov dec mov mov outsb out loop sub es adc sbb rorb jno test insb pop out and pop inc rorl in test adc inc xchg mov xlat (bad) jecxz rcll ret sub xor adc pusha pushf mov iret sub jp mov insl jp adc loopne sbb arpl fiaddl dec xor (bad) jbe adcb push rol xor addr16 roll jge cli test icebp jp fcmovu xchg into inc ds jge orb push mov jp pop test lret out or push jbe pop xchg (bad) mov aas mov shrb adc xorl mov arpl orb xchg bound and les loop andb cmc sarl inc sbb mov push test loop and imul sub out push sbb dec arpl pop insl addb outsl lahf pop test les jo pop sti or and lock jno sub repnz addr16 andb push arpl mov test outsb loope push adc aam push pop xor pop out and push or pushf ret or sbb cmp push movl sbb sbb push mov add stos sahf mov inc daa stos add nop roll push lods add rorb fildl lods fisubrl mov les insl push add cwtl js mov insl hlt icebp cmp or jbe sub xchg (bad) dec loop mov jle (bad) imul je pop mov rolb movb nop (bad) addr16 fcoml pop and lret mov (bad) out aaa or xchg iret pop adc push test stos mov xchg push fisubl adc cmp push inc dec nop sub iret outsb shrl dec jmp (bad) dec push mov (bad) push and add popa fmuls scas fmul add loop pop gs (bad) movsb clc dec cmpsb inc inc stc loopne mov jmp fxch cmp add iret pop pop clc int3 in mov or out xchg cld jge jmp fisttp fstpl sub push das adcl div inc push xchg xchg stos and mov sub jnp gs popf mov jmp cmp inc lds jnp rol addl adcb addr16 mov mov mov or or fimul pop or subb stos dec sub (bad) push (bad) jae shl fdivl fs mov fs xor loop test adc popa jmp add sahf push cmp xchg sub out ret pop mov cmpb stc xorl test ljmp inc mov cmp or into jno dec add cmpsb mov fbld shll inc enter cmp xchg ss push jns fsubrs ljmp insl push fild nop or (bad) jae sub insl cwtl pop arpl adc (bad) jp lock cli xchg out push and dec arpl cmp scas dec (bad) out mov inc out jmp push jo sbb xchg cltd add add adc lods or fidivr into rolb xor fwait xchg jg xchg sbb test (bad) stos subb in je mov aad push cmpsb (bad) sbb push lock xchg cs addr16 mov call cli loopne dec push add in jmp or andb stos arpl outsb andb movsl dec xor icebp stc and (bad) leave mov fdivs xor outsl ss pop into pusha xchg adc jo fwait mov daa scas and std addr16 int3 and jo jle push jecxz sahf insb inc std dec lea (bad) ljmp mov cmp es mov mov mov inc stos (bad) jne xor add jmp add jle lods ss adc and loop andb lods cmp mov pop test mov pop or push lret arpl or in mov push sbb pop pop xchg mov scas call mov movb or stos (bad) notl and adc push sbb test inc mov mov scas (bad) daa imul adc les sub roll add pop je mov and push (bad) mov mov xor icebp sub je dec jbe adc (bad) mov xchg (bad) enter ret xchg stos xchg daa xor add sub adc mov inc inc nop xor pushf loope nop and add adc jmp testl mov stc or mov add aaa stc fcomps int3 das mov cld enter add faddl add out xchg push push pop test sarb xchg mov xchg adc push fucomi cmove ja (bad) mov push ss cmp std cmp addr16 mov jae mov mov push fistp mov test loope aaa int3 in ret xor add and jle adc xchg jns jae xchg arpl aas shll test jmp int xor fldenv dec pushf pop mov (bad) mov mov shlb xor mov sub loopne cmp pop sub daa aam je popl std mov jmp enter arpl (bad) push pop cwtl or lcall popf gs xchg sbb in cs xchg loope xorb rcrl inc add jnp (bad) jmp std xor mov fcomi mov mov sbb mov imul and in xor pusha mov inc or mov sarb xchg outsb or orb jnp test sub ja pop dec cmp sbbb cmpl cmpsb loope fildll mov shr fmuls pop jae mov xchg inc push fidivrl jl cmp out insb mov test xchg outsl pop std je and sbbb xor movsb sahf push incb lea bound roll dec in cmp mov or and nop cmp xchg icebp push test dec roll fistpll orb and push push cmpsb (bad) lret (bad) sub call cmpb pop xchg je adc pop mov xor jl push (bad) mov pop mov out adcb xchg sub nop lea test test cwtl aas lds aas xchg out scas add push sbb lea sbb ljmp jb lcall sub xlat repnz cmpsb addb mov add or (bad) fildll jl (bad) mov and je nop or enter add xchg mov pop xchg add sbb mov call aad es or and sbb ja xor pop dec mov dec push int leave test out push in repnz aaa lret roll imul gs or pushf (bad) cmp loopne push sbb inc nop sbb test orb mov mov incl mov or outsl pusha enter add cmp aaa addb push loopne pop loope inc shrb inc cs test testb xor dec orb (bad) icebp add sti mov lea xchg test xlat and (bad) adc mov scas shrb jecxz loopne mov pop shrl jb cltd test lea cmpsb testb inc xorl imul add lret enter mov loopne cmc lret shlb fdivrs int3 dec pop clc movsb aam add aas xorb mov cmp ret imul jecxz jbe mov dec rcll xchg jnp fcmovb push subb cs fsubl in (bad) repnz outsb mov (bad) cmp xor stos inc andb jne ficompl adcb jnp (bad) shrl xchg and add mov and adcl outsb bnd mov adc lret data16 jnp push ret jb (bad) incl jbe mov scas mov cmp mov lcall add jmp mov dec sub jg add mov lcall ss subl test inc fild jns pop jp rclb out pop std xorb ret addb pop andb mov fadds repz push mov or outsl testl or (bad) push inc int3 jns ret pop jge stos xchg pop xor xor aam sub nop add dec inc stos jb (bad) (bad) adc mov sub movsb cvtps2pd outsl adc inc mov cmp clc in jnp lods enter iret dec gs dec pop lods inc cmc inc testb or fidivl rclb sub (bad) adc (bad) pop adc fsubrl dec iret jns xchg roll shll gs aam fdivs mov (bad) pop xlat or loop fwait push mov lcall rorl subb pop les mov push inc mov ja mov pushf (bad) jle sbb js mov sbb popa xchg jno subl sbb int3 mov xchg arpl push cmpl rorl inc xchg mov int out xchg and cmp xchg add aaa mov repnz mov lods ss mov rcrl jg jns adc xchg int3 jge push fiadd add test leave enter out sub and mov mov fisub xchg insb jo sbb sbb cmpsb pop shlb shl adc aam dec andb or push testb or xchg sahf aad loopne adc sti or enter ficoml sbb push (bad) jo mov shl fadds call mov jae dec out lds jecxz notl mov es enter xor pop ret mov fmul jp fisubrl add cwtl add jp ret (bad) (bad) add aas jno dec or sub push lcall in jne inc leave sbb mov jl aam repz inc vpaddd mov xchg (bad) push std lcall push cmpsb subb xchg imul int3 inc sbbb (bad) mov mov cmpl pop cmpsl rol lea cld imull add xor dec mov test test repnz push dec cmpb movsb (bad) jbe add in pop push gs mov std adc cmp lods jmp xchg mov xor pop cmp js out inc in pop aad movsb mov and dec fidivrl and ja jmp lret add dec mov jno mov insl movsb mov pop mov pop leave xor stos adc outsl mov arpl jmp jp push xor out push stos fldl stc fimull or pop rcr fidivr sub push mov adcb push lds hlt dec mov lcall call iret inc xor lock xchg mov xchg mov cmp dec scas mov imul xchg shrb into in outsl mov mov mov enter fldl xlat scas enter add test jbe mov jne arpl jl mov push stc and lea mov add push jno or cmpsl ja js push mov pop and add insl addl or push jl faddp (bad) mov jo mov out mov mov repnz cmpsl push scas cmp and sarb inc (bad) pusha call das or xor je inc shlb (bad) clc sub mov sti mov xchg cmp mov vmulpd nop sub ret pop add movsl lods sub jp xchg sbb cs rcrl insl clc jae or xchg (bad) sbb cli fiaddl xor dec jg and int push cmp mov and mov cmpsl stc test inc cwtl ds notl dec and test sbb cmp push cmp orb mov push jns mov inc adc mov loop pop sahf test pop mov fimull xchg mov pop lahf mov mov xchg jb xchg inc cmc mov es into and add divl sete add push clc shrb mov push (bad) (bad) and ret mov std subb xorb out loopnew ljmp test adc xorb nop pop fwait inc insb enter mov (bad) sbb sbbl mov and mov adc mov inc push cmp xchg arpl es enter mov (bad) andb fsubs jbe pop andb lods dec cltd sub jle lock or sahf outsl movl jmp test cmp jge pushf xchg pop xorb les sti or mov nop xor pop cmp xchg mov inc inc mov mov sub push lret pop lahf and movsb insl cwtl mov pop jns insl or add xor xchg nop sbb (bad) arpl pushf xor movsb cmpsl add lret mov movsb jno shlb test mov pop push sbbb mov pop sbb xchg push fiaddl push adc mov mov xor xchg aam ljmp mov hlt mov inc jle inc mov les jno jg orb bound ficompl out mov add pusha inc out xchg outsl and addb adc dec xor cmp add scas enter stos sbbb test mov jae adcb lock orb leave jl mov xor aaa cs adc inc jae sbbb xlat ds popa test shrl fiadd fistl movsl push out or pop pop mov cwtl jl inc (bad) enter mov stos xchg xchg add adc enter roll js ret loop,pt jns in mov sub fwait int3 fcmove sub fcompl clc add pop gs jno xchg or lods mov mov mov mov mov jmp cmpl pop je mov (bad) addr16 iret xchg (bad) lock movsl jmp pushfw lock loope sti aam roll jle outsb xchg leave lret sti bnd inc cmp add shrl out enter lock rcrb iret jge xchg lret test (bad) xchg mov pusha in mov aas adc cmp lret sbb data16 (bad) mov int3 fistpl xchg dec sbb aas mov mov mov cltd mov jg mov aaa (bad) xchg add loope pop jmp push jmp gs or mov mov fildl mov lods lea or hlt stos push adc popa jo test push xlat das xchg popa fwait movsl bound adcb dec pop jne cwtl push stos mov lds cmc out pop scas test popa cwtl and xchg jnp mov mov test outsl test adc mov clc xor pop inc mov adc sub neg push scas mov inc mov repz (bad) mov sti dec js push stos out adc mov aas fisttpl fimull arpl in (bad) sbb decb sbb mov add push cmpsl pop dec inc fcomps ret jp sarl add sub jecxz out es stc aaa jb fs imul and xchg jbe or and rolb dec dec cli fs addb fidivrl stc cs or cltd fisubl push addb push and add jl and xor xor pop out test inc outsl fucomip fcomps stos inc dec xor sub sahf (bad) cwtl bound int3 or stos dec mov mov sbb clc add inc mov loope andl add insl (bad) adcb and lahf xor loop push mov pop sbb loopne jl ja push xchg xor adc sbb dec and in jb mov push add fidiv insl fbld xor icebp pop push addr16 push movsl xchg fptan dec aas mov test mov imul xchg bound mov adc pushf mov orb hlt shrb orb mov mov dec dec push repz push fadds adc and bound leave adc inc push cmp mov sbb lock dec iret or or ja mov add (bad) cltd inc lret fdiv mov mov adc imul pop fwait rep leave mov int lret test mov insl test movsb stos mov js cld arpl test outsl clc loope xchg bound sub add sahf aam adc out ja leave fdiv fidivrl int xchg aaa insl xchg pop inc addb pop lcall sbb cmp xchg (bad) xorb test cwtl repnz and mov orb xor ret inc mov pop in dec cmp inc sbb iret and jmp out (bad) add push jae frndint test pop (bad) xor cmpsb cmpsl into lds mov adcb js cmpb (bad) dec mov xchg (bad) icebp push xchg inc je sbb cmp mov pop mov jecxz mov fsubl xchg xor ret adc xchg subb jns sbb bound sub sub xor mov in jg jnp jae mov sub ja aaa jnp in andb inc out or movl xorb aam adcb jge enter (bad) jnp sarb push cmp leave mov pop mov and sub xchg adcb jae dec jns cmp xchg pop add xchg jae inc bnd fisub rorl and out mov in jl shll sbb jnp pop fs pop leave loop pop nop pop divb xchg mov fiaddl out mov xchg mov dec fnsave sbb jns ljmp nop mov sbb adc jae dec out jp inc out (bad) mov xchg ret cwtl add cltd or hlt in inc mov out mov adc je stc cmpb lods push fldl fmuls and out bound dec test push stos andb ret cmp lret call hlt adc push orb (bad) cld push adc fisttpll test ljmp pop (bad) pop and or rcl or sbb addl cmp xlat cmpsb in inc pop adc mov push (bad) jg push mov cmp sub orb push mov cmp add rcr adc in (bad) enter pop jmp adc xchg incl pop test in out adc jno imul jo push sub mov and push lret stos adc int3 xor sbb js aad inc into mov (bad) push ret xchg stos lods outsl add mov iret fnstcw (bad) jbe jmp rcll mov sub sbbl mov fcmove add inc dec xor xor out cwtl enter push in inc ficomp sub push (bad) cld jnp mov cmc movsb jnp push and clc int3 popa mov dec sar inc out jle or fprem je cmp mov loopne cmp add sbb cmc push xchg shrl scas imul fbld cld shr inc (bad) adc add imul pop test mov pusha mov cld or lcall out cmp les mov dec test rol mov fsub imul push jno mov in inc or pushf orl enter xchg cmp enter push out add cli dec (bad) enter ret mov outsb ret mov mov xor enter or jmp cmc insl lock and iret (bad) aas mov inc in dec fs notl (bad) inc and ds mov mov je enter xlat xor stc orb adc insb or lret xor rcrb into aaa and lea cmp pushf rol push subb jmp and orb icebp pushf loope cmp shlb xchg je clc push pop pop jl jbe mov mov clc xlat andb mov inc cmpb insb hlt jmp shll dec mov inc jecxz ret mov mov js or xchg pop xor imul jo mov xor aas test pop xchg lcall out movsb dec add pop mov rcll inc nop fdivrs (bad) sbb cmpsb jo inc xorb notl adc cmpb fsubs test (bad) cli ficomp fs cmp test jl (bad) sbb cmp clc mov (bad) arpl movsb and mov shlb xor cs rol xor fdivrl test xor (bad) gs scas rcr mov mov aam xchg push bound pop adc lcall test outsl mov xchg jle aam (bad) (bad) repnz je cwtl repz sbbl mov sub cmc or insl push lods nop xor add mov roll mov jo push dec in push pop push ljmp ror xor jmp and insl pushf xchg jo mov fxch sbb das jecxz les sar add shlb subb mov subb leave xor and push add shl mov mov jp test jbe cli add xor cmp pop dec in stos test out adcb pop xor sub pop arpl int xchg push inc test les idiv cwtl xchg push xor stc (bad) in xlat sbb dec movsl xor lock jp orl popf add cmp lds mov dec push xorb in dec cmpsl setb ret xchg sbb sbb xchg sub pop andb and xchg push (bad) pop cmpsl ds rolb jb and sahf cwtl out inc jl nop inc mov pop add sub dec es adcb xor jns test lock xchg arpl inc loop roll inc mov adc jl aam pop xchg test sub hlt jecxz and xor fcompl andl sbb lods les ja pop out aad in or das jo mov or ss clc xor hlt add addl mov mov mov xchg outsl cmpsb pop roll stc das mov icebp adc mov xor pop adcb sub cmpsl shlb stos adc adc cwtl sbb enter and push nop sahf cmp lret mov or cmp cmp int3 sbb ficomp testl ljmp cmpsb dec int3 mov cli push jno roll push mov dec or ds sub pop jl fsubs pop pusha pop xor inc in inc sahf cmc adc pushf enter cmp adc cmp in adc (bad) jno xor movb vpunpcklbw pop sub out cmpsb test or nop dec mov test aas cmp addb mov stc (bad) outsl lods stos neg (bad) not (bad) add jne ror cmp cmpb cmp rcrb adc adc movsl pusha adc dec xor shrb mov repnz and outsl lea xchg mov sbb mov jle cs or test xchg rolb insb pop push pusha inc mov testl inc push fstps adc xchg imul and outsb orb subl adc add sbb adc jno adc and jge xor cmp add xchg or int adc out dec shr xor pusha mov sbb mov movsl cmp into inc rorb pop pusha (bad) cmpsb cmc rcl push movb (bad) xchg cld subl pop fisubrl mov in sbb jb mov mov rcrl in loop add cmp jmp add dec xor pop dec outsl out fucomi push xchg mov push xchg mov fstpl inc push cmp pop les inc in lret add (bad) cmp cld dec mov stc and insb cwtl push fcompl jae pushf jnp mov lret jl ret xor mov adcl test push xchg jge xor sub ret and int push sub add add ss in insb repnz mov (bad) fstl cmpsb adc lods and stos aad enter push mov lock aam and mov add xor push xchg adc cmp fwait cli mov shrb xchg imul enter lock out cmpsl adc outsb scas push push sbbb stos rcrl int3 ret out and add mov lds clc add sbb jge movsl repnz sbb in sbbb mov fdivrl test fwait inc ret push mov (bad) jns,pt push sti lock xchg mov jl cmp xor (bad) je sahf andb loope mov je mov popa xchg sbb mov cld leave je xchg subb jnp jae in scas mov jo cmpb pop stc jl sub scas dec push leave addr16 andb clc repnz jp and dec mov mov xchg cs mov jge lea cwtl lret enter xor jmp mov daa mov pop jp xor (bad) jae xchg dec push xchg xorb fs pop lret push mov hlt movsl pop lahf sbbb jbe mov inc push mov aam fisubl xchg cmp lahf imul stos loopne push leave jl sahf mov lock adc sbb in add ret rorl or push add movsb (bad) dec and adc aad out mov push enter (bad) out mov imul iret popf fcmovu xchg test outsb mov and es mov cmp data16 shrl jg into inc je std sub or xor jge mov xchg mov iret cmp adc (bad) sbb inc inc jge mov test cld cmc nop add iret rorl lock jns and mov lds test gs shll sahf pop mov fisttpl dec mov push mov ja inc (bad) dec mov aam daa mov push cmp cmp int3 jecxz (bad) push enter ret sti mov sbb mov ret adcl dec (bad) sbb inc and (bad) fchs pop les lret movsb mov push push aas inc add adc push scas xabort movsb push push xlat bound subb test ret dec xlat imul int3 aad pop push mov mov and test or dec jbe leave and insb push lahf and add cmp and fsubl inc adc jmp outsl add adc mov popa cmp pmaxsw cwtl and mov mov adc int3 inc out test jp enter repnz ja loop call mov mov movsb push and loop xor iret push sbb pop lret xchg xchg loopne shlb mov (bad) shr xor push add sub (bad) popf int3 out inc add (bad) rol mov jae fbld add inc cmpb lods xchg stc outsl sub xchg sub cmp mov xchg pop xchg sbb aaa rolb or in sbb imul xor push addb outsb test lea into rclb test mov cwtl xor addr16 outsb test movsb pop imul fnstcw cmp adc push jl fistl xchg stc aam cmp inc inc loopw sbbb xchg loopne (bad) into nop dec ret mov xor fs sbb clc into mov scas dec loopne dec orl movsb fisubrl cwtl pop sub lcall jne outsl popf mov cmp leave xchg add inc pop inc add mov (bad) push cmp inc scas les outsb xor (bad) sub push jle jbe leave fmull fiaddl in xor inc push sbb pop add xchg xlat push das int adcb add mov pop (bad) cld fwait pop mov jne jl mov push cmp lret xor subb xor aam xchg pushf pmaddwd enter dec jnp ljmp mov xor cmp (bad) sbb fstpl sub pop or arpl rcll orl mov movsb and in pushfw push in (bad) or repz bound (bad) ficomp rcrb adcb aaa mov loope inc mov iret adc test jo nop in mov stos andl pusha (bad) jae mov mov sbb cld and push cmp push ret mov pop movsl xchg movsb sub add add daa in inc insl dec mov fsubs mov repnz insb popa or jg (bad) sbb fidivrl ret nop testb insl iret std (bad) int pop jb enter jno push cld insb fmul loope inc adc xchg das aad xchg sbb enter aas loopne nop xchg sbb push (bad) ds test or jne test das or cmpsb mov bound lret xchg arpl lds mov or push inc daa mov cli insb dec loop (bad) stc out lods mov enter sahf inc mov test jmp insl nop lcall aas mov push int3 push into inc ss xchg mov xorb out xchg adcb push add in das shrb jns fistp (bad) mov cltd mov enter xchg mov mov xor or stos orb popf xchg test (bad) sbbb push fsts lds pushf (bad) jo xchg xchg xchg cmc or (bad) sbb iret lret jg add jmp inc fdivrs int mov negb (bad) hlt xor xor out mov push cmpsb inc jmp push inc mov test pop sub lods dec int3 imul imul not or add mov out dec mov (bad) leave lods add xor fist xchg fs or sbb push lds sbbb pop xor dec adc cmp xor mov jns stc pusha sbbb push mov subb pop dec pand repz flds fnstsw jne xchg cltd clc jge mov xor or mov int3 xorl mov xchg inc fildl or dec fdivs rolb test jle (bad) scas js (bad) adc xchg mov mov aam movsl mov mov aad pop jnp xor call outsb js dec dec adcb sub fcompl std adc sub icebp adc in lock ss xor cmpb push fs movsb push inc fdivs outsb dec xlat mov adc (bad) stc push sub test add mov push pop or sbb jnp lods xor test push push loop mov cld std inc mov sub xlat and jp pop mov adc sbb stc push orb push adc pusha cmpl fwait hlt cmp add or xor (bad) xor inc mov std nop out jnp inc enter sbb shrl lock mov fsubp (bad) loope push ficompl add dec iret mov fadds int andl xor inc sbb inc clc inc or mov jnp (bad) lock int3 test mov ljmp push movsl adc test cmp adc repnz mov (bad) cmc jge xchg xor pop test add and fcmovu add jb (bad) jle jo dec pusha (bad) xor andb loope cmp leave sbbb adc adc mov adcb cli xchg imul mov icebp dec mov add mov jmp je das outsb addr16 fwait test sbb and xor and or rorb out je mov shll sbb jl dec inc int3 adc addr16 fdivrs repz bound rorl add dec jb fistp add add xchg or popa lods mov mov pop ret loop pushf adcb inc test pop mov sbb (bad) push mov cld pop sub and pop iret sub stos add or hlt xchg jnp push mov jle scas lds (bad) imul mov pusha jg lret mov dec inc loop in adc pop cmp fwait popa add push mov nop mov adc adc xlat ljmp mov in mov aam negl insb push nop mov ss into lahf mov push mov roll and popf or sbb ljmp bnd sub loopne sbb andb enter and jnp les test sbb sbb les (bad) mov sti mov pop int enter mov cmp jmp cmp cmp (bad) mov jge sub cmp inc jmp pusha lret or jge sbb push iret adc jp inc jns add subb in inc sub test push imul loopne cld hlt ret jp loop jo (bad) adc mov (bad) sarb mov pop mov movsl dec mov jne xchg int3 test jge lods pop jnp push shrl ror pop jbe fisubr fmul sbb data16 testb loopne mov pusha mov pop cmpsb movsb scas orb lea xchg add lcall fistp lds push outsb inc pop clc test xchg pusha fstps push sub adc lea dec ret cmp jl stos push add sbb insb ret xor outsl xchg and lods orb dec mov push mov loope mov out (bad) xchg xor jbe inc mov pop xlat sub sub addr16 subl cld mov xchg outsb inc and lock js sbb mov xchg and test lcall xlat xor ret jmp cwtl xchg (bad) jbe dec and iret adc sti pop cmp jno lods push out outsl mov push arpl jne xchg jnp mov negb pushf cmpsb stc cmp dec daa fild add mov mov movsb faddl push add adc leave jecxz pop loop enter adc (bad) lods xchg push mov dec inc and dec imul (bad) cli mov inc fcomps ficoml mov push or repz push adcb push call dec loop out mov and arpl adc daa mov adc lret xchg mov mov loopne mov and jecxz inc cmp fs (bad) and loope sahf negb out orb rolb or (bad) mov jg mov in (bad) push jbe mov mov (bad) imul xor adc add out notb cmpsb pop cmpsl sbbb sub push ficom sbb inc shl in test cld test jbe aam lods push sbb mov pop nop mov push arpl out (bad) xlat jecxz bound mov jl lds gs cmp pop push sar mov and sub sbb mov js addr16 push mov neg xor mov inc (bad) cmp ss cmc (bad) push inc aad addr16 (bad) adc rolb cld clc add push lods mov pop xchg arpl add push loopne out mov repnz pop clc shlb xor into adc psubsw enter cmp add int3 push arpl fiadd sbb iret mov inc int inc outsb sbbb or mov mov pop jns mov or push test or je lock incl mov xorb fidivrl loope bnd in loop mov fsub insl adcb test (bad) xor adc leave into cwtl fsubs scas mov (bad) repnz scas fmuls jbe les add adc (bad) arpl enter add mov jo and insl adc out sub add sub jp push ret jp in cwtl jo sbb mov cmp cmp iret xchg rclb dec sub test (bad) stc sbb hlt dec mov jmp ss out fmull xor push cmpsl push push arpl mov push movsl xor (bad) scas fldt jp ror cmp out sbb dec sbb idivb or shl inc enter add sub dec jns sbbl xor cmc jae mov and dec mov repnz xchg or iret xor mov xorb sub sarb jnp pop int3 (bad) adc sub mov mov jnp aaa repnz and ret jle addb fstpl addb enter out addb push lods dec lock addb xor mov mov inc cmp mov mov fistpl (bad) dec lret mov xchg in (bad) or mov lock repz mov test lock nop orl pop popf stc jl fldl xchg xor mov stc pushf rcr cmpb lods mov iret loopne divb enter fnsave stc sbbb dec sarl orb aad xchg out mov push xchg insb jbe fisub loopne adc clc clc mov adc mov or xor in fdiv add adc addr16 adc push adc xlat andb cmp lock push ret add jmp push int3 sbb iret mov insb cmc pushf adc mov and arpl dec movsl enter cmpb lods test scas dec in and adcb mov fstpt sbb cmp jmp ficoml sahf inc mov xor cmpb mov mov jecxz xorb cmpl mov in cmpsl nop dec outsb fs cmp test mov aas test push sub int3 push imul lock fmuls jg add adcb inc cmp loopne and cmp push xchg imul lods subb (bad) mov loope sub adc test pop mov test xchg inc mov fiadd jnp jle cmp out out clc outsl stc or xchg nop pop pop mov cmpb push mov jp imul push xchg pop and push mov xchg insl pop xchg sub mov sarl sub add decl fildl loopne mov jecxz xlat jne sub sahf daa iret cmpl adc loope hlt fld lock fsubrs pushf dec aas subl test inc pop cmp lds push and rorb xor (bad) jb rorl hlt add sti (bad) ds int (bad) mov imul cltd lret xor mov push jp sub movsl rcrb pusha movsb push mov xchg icebp cmp mov enter mov pop push xchg add ds test pop sbb cmpsb ss mov nop sahf cwtl popa out sub shlb pop repnz arpl imul pop and cmpsl jg fistp ret nop insb test popf or rolb incl shll stos test movsl std sbb mov or (bad) fndisi(8087 ret xor jecxz pop leave jle test nop daa (bad) leave fcmovbe mov xchg or in adc int stc leave xchg fnop add bound outsb inc mov or out jmp rolb lods stos lret xchg dec ss mov les sbb cmp sbb sbb iret jb mov pop aas fcompl out xchg cwtl cmp in dec mov aas cmp push jle icebp adc nop in in mov xor ds mov mov movsb dec push cmc movsb mov data16 jg sbb daa add in ss or push and cmp add mov aaa das adc fmuls add fisubl add mov fadds xchg cmp fcoms loop cmp (bad) fidivr out popf push push sbb or add pop pusha inc mov and push sti orl pusha (bad) in lahf mov into jl xor mov inc add mov iret mov mov fsubrp jbe xchg mov xor stos push idivl dec mov lods lock adc rcll cmpsl xchg pop bound mov in and enter add push push pop cli rcl and int push data16 (bad) xchg (bad) aaa push fidivrl dec sub xchg hlt inc sub pusha shrl dec mov popf pop pop fidivrl mov imul sti mov test xlat xchg cmp dec sbb ret (bad) xor sarl addl cmp cmp ret inc rcrl push cmp aam test std or clc mov or mov add inc or adc or ret lret mov cmp leave ficom ss test jle (bad) push js int3 movsb pop iret sbbb xchg stos mov dec mov out cli cmp lret test add loopne cmpsl adc xchg pushf cwtl cmpsb xor fldenv lahf sub cmp push icebp sti xchg mov idiv mov lret add cmpsl or cwtl pop sbb mov dec sub scas add sarl pushf add gs fildll or repz xor decb jmp aam xor mov dec gs jb orb dec test dec mov movsl fisub leave xchg sbb and sbb and jnp push cmp dec fst dec andb cmpsb jmp inc subb test jno jecxz (bad) push out or and cmp repnz scas pop das add dec (bad) movb or push jge add mov subb adc dec aas xchg ss outsb sbb (bad) jno stos lea stos push int cmp lret pop rcr faddp movsl into jl mov mov jo xorl mov dec insl push push adc (bad) or cmp cmpsb jecxz xchg out pop lret mov js dec mov dec enter popf cli call xor xchg and loopne ja int out mov add sbb push xor dec push arpl inc imul (bad) fistpl clc aaa sbb pop dec (bad) insl ja subb clc fbstp mov iret mov inc cld and add mov add addb enter sub scas mov add cs jno sarb lea stos out or cmpsl pop mov push jb leave and jnp pop fistp fnstcw roll xor out js sahf in add movsl xchg jecxz in cmpb push repnz fild arpl jmp mov push addl sbb sti (bad) loop or mov jge in loopne imul mov pop mov fildll divl fidiv fs xchg iret pop xchg outsl test adc gs imul adc cmp test jle cmp ja scas inc mov push in nop mov xchg (bad) ljmp cmc jle sbb mov (bad) sbb inc orb add or and sub aad xor popa fsubl add out jno arpl mov mov dec or cmp aam std sbb lahf shlb cld push mov sbb pusha or push mov nop xor xor (bad) or or aad mov or aam outsl das loopne sub mov cmpsl xor add sbb and mov aaa push jl or out in loop sbb outsb xchg and xchg lahf sbbb inc mov repz push idivb nop xor pop xchg mov lock or xorb or inc inc mov (bad) roll push and cmpsl aad into inc xchg js sahf sarl jge mov addl push movsl xchg jns cmpsl mov add sahf enter inc xchg xor cmp pop stc lock cmp cmc dec mov push xor adc (bad) sub fstp subb insb xchg jns out subb adc or pop subb cmc push out mov add mov mov mov xchg add mov cmpsb lret push scas mov andb xor int mov pop enter add orb push movsb repnz pusha sub outsb sbb xchg sahf cmc iret sub add in fdivs push test std xlat mov or in mov pusha imul out cmp sti jne inc dec mov jae (bad) sti or subb push jo fsubl mov rcll mov leave inc fildl int cmp and push dec sbb test insb jmp push clc push testl fsub out test clc (bad) cmpsb push leave cwtl push push jnp jl cmp fmulp das xor fs mov scas test sti pop mov jns mov insl push imul adc add jb lea (bad) sbb mov jge mov mov int mov in rcrb pop gs sbb roll (bad) mov cwtl scas lds loopne dec xchg push enter xlat or and lar divl js mov adcb push jge xchg sbb xor xchg stc push jl pusha mov push lret icebp inc mov inc mov sbb (bad) push pop orb push test les cmpsb push mov mov push cmc nop and int3 sub pop adcb cmp loopne test inc jmp cmp xor aam int dec pop repnz xchg mov rcr (bad) lds add mov mov inc jp adc pop and pop out mov push and mov fstps mov mov aam cmp adc addr16 loope xchg fwait mov sarl rolb scas or mov xchg paddsw and mov in cltd xlat aad fwait loope vphaddwd jne cmpsl inc out dec sbb mov int3 xor das pop sti insl cmp adc xor xlat hlt (bad) sub aas shlb or shrl icebp jp hlt stos push sbbb mov cmp imul mov mov adc add jno notl popf pop jg mov and popa sub lret xchg aad test cwtl pop adc shrb jmp dec cmp (bad) jb add ljmp pusha ror test daa daa cmpb cmpsl inc mov push adc push movsb into cs lods sub pop popf cmpsl test lock in jp fdivl imul adc popf (bad) mov aad xchg or (bad) dec loopne insl loopne gs jno or and dec nop daa adc cmpb fsubs insl mov sbb sahf sbb clc inc inc outsl sbb insl inc addl xor iret popa call cmp lahf test add loope jle xor sti aas inc ret mov (bad) fnstcw (bad) and sbb popa subl scas push cmp addb dec pop outsl push cmp xor cli push (bad) lcall test les cmp shll pushfw (bad) xor fdivl or es ret enter out je lret movsb add push mov fsubl fidivrl inc (bad) push loopne xor pop adc test jmp add xorl clc xor mov sbb xor inc fcomps test inc arpl dec pop push xchg les mov sbb lahf sahf ret push mov ljmp xchg add ds rcl test push cmc out xorb jg iret pop movsl into jnp and loope std xor shrb cmc xchg mov pop dec in cmp repz mov iret and adcb (bad) jge pushf popa and add shrb lds out cli aaa test sbb mov lret enter mov lds push fdivrl or or push (bad) or lea sub imul xchg loope and jno dec push (bad) cmc mov je repnz sahf mov addr16 jmp pcmpgtw fnstenv insb xchg (bad) test mov add ret xor gs addl enter test or mov lcall int3 mov outsl cwtl lea sub out or xchg mov xchg aaa adcb std jmp xorb pop dec (bad) cmp jmp jbe decl movsl cmp lods dec push add mov and std std orb cli sbb scas push dec push leave test add inc hlt or and jmp or mov add xchg jae xor xchg imul adc adc sub or outsb out repnz loop int3 mov xchg xchg stos sub cmc sub pop std mov mov add (bad) enter or jae mov hlt roll sbb dec imul scas fs ret (bad) popf jns aad push daa cmp aad (bad) repz movsb (bad) dec sbbl jnp add out fcompl imul add cmp jge jl imul and js cmp jno jno cmp xor or rorb sbb cmpb les jmp leave sub das sub fcomp or (bad) jp dec rcrl xchg mov add fs ret xchg sbb inc mov cmpsb pop in flds subb or in out cmpb sbbl and mov flds subb mov cwtl outsb dec add popa xor mov mov scas fs mov jae cltd aas xchg mov inc (bad) push out xchg andb js lock mov inc jmp jo dec pop loop inc andb add mov bound inc cld lock mov dec (bad) (bad) sub xchg xchg xor sub and mov sub and fwait mov add cltd and sbbb into sub sbbb fcmovnb (bad) int3 mov inc int xchg roll das (bad) inc push sbb or in js adc jl fwait xorw dec jmp cmpb movsl push jns xchg sub mov jns xchg orb cld sbb sbb cmpl mov dec fsubs or mov push fldenv mov pop lahf push out cwtl cmpb fs mov movsl sbbb xchg sarl mov cmpb cmpb push dec lods mov (bad) shr lcall test inc adc pop xchg pop and dec mov aas mov push cwtl xor xchg sbbb test xor mov ltr rcr pop std stos xchg jmp push das mov test push xchg pop cli mov mov in or lahf add scas aaa out jns test (bad) jg fsubrl pop enter mov ljmp nop outsl js cmc movsb ret xor push cli jmp push sbb popf xor cmc hlt imul insb lahf (bad) repz cmpsl ds jno inc mov pushf pop lock mov sub clc add ds daa enter insb addl cmp int mov leave pop repnz jne aaa enter sbb mov push repz xor jnp push inc mov jmp aas rol sbb cmp and mov stc mov mov push cmpb stc adc mov jp hlt popf loope add push xchg jo jmp mov insl mov sbb js adc enter xor sub lds loop jg jnp cmp jle mov mov cmpsb mov add andb mov fadds push xor inc mov mov cld movsb pop out test stos ja inc sub pop pop pushf cmp add rol scas pop test aaa loope mov cli cmc or pop subb inc adc add push mov repnz xchg icebp lcall daa loope popa xchg xchg or sbb repz pop inc lcall test fs xlat and pop test mov pusha cmpsb inc mov lahf add andb icebp scas push cs xor mov or andb loope pcmpeqd ja mov mov xlat (bad) xchg adcb or and cwtl aaa lret aad test in subb andb daa loop sbb into mov lods test ficompl es sub sbb test mov mov pop xor jge sub test loope in test popf fs daa cmc cwtl gs pusha loopne repz incl (bad) xor sbbb lret add out xchg loop (bad) in inc mov jnp movsl imul push mov clc pop ds xorb sbb gs and jne lea jg lret popa std test sub leave cwtl mov insl xchg jecxz inc xor imul pop loop lret sbb push ret lock pop addr16 dec outsb push xor mov inc incb mov mov sub mov xchg push push imul (bad) mov dec addl fwait mov sub mov sbb xchg lahf mov or (bad) out xchg sub movl jmp cmp ret (bad) sbb lods cmpsl adc outsb imul push lock sub (bad) das (bad) xor movsb push pop mov test sub xchg test icebp roll adc in je sbbb adc sub pop loope push fdiv add xchg sub iret cmp mov mov call fild andb mov mov cmp sbb xchg imul bound cmp lcall out pop add mov inc adc inc adcb gs std frstor inc insl and xchg add (bad) xor xor sub cs fimul clc and in inc lahf fadds jecxz inc xchg jb dec popa cmpb jno inc mov lcall mov int scas pop adc rorb xor inc imul hlt push jecxz push sub adc and aas mov jge mov cmp xchg outsb jmp jge into das mov fwait mov sub cmpb (bad) sbb adcb adcb add sub mov test and lret stos sbb adc and mov xchg aaa imul test mov xor out mov mov test mov cmp adc sub cmc (bad) (bad) xor dec mov jg add or adc nop in nop gs test sub scas push fimull cmpsl clc pop inc mov repnz xchg subb xor daa or enter loopne push push scas cmp pushf push add xchg ja lret inc fst sub lods or xchg inc pop cmp iret sub es addr16 dec dec nop pop fistp int3 push xor add loopne mov (bad) push cmp push jo in xchg cmp ret adc sub xchg adcb faddp mov push test jne cmp push cltd xchg in xor mov add pop daa push lods xchg gs dec scas fdivs sti mov and add jbe push or or jae mov test (bad) jle sbb in jb or popa add js mov push sub jmp inc clc rolb add mov mov xchg test sbb mov jb dec and add enter test jae mov push arpl adcb mov xchg dec mov cmp pop pop sahf fiaddl loope call lcall insb in adc andb inc or hlt scas arpl inc fmul sti out orl xor das jae pop orl adc cmp hlt jbe jmp jo aam pusha cmp fistpll subl add pusha test cmp xchg pop scas dec adc aaa push push sub notl iret icebp xchg mov mov sbb in push xchg cwtl addb xor in adc fisttpll les outsl cmp fadds or mov cltd and mov imul out lea mov enter xor out add data16 mov fldt add inc imul iret inc mov push subb aas in pop cmp cmpsb mov out add test shl aaa lds in push scas inc push fildl ss loope aad push out sub add sub pop xor jmp mov repz loopne clc insb cld daa push flds inc arpl mov and lods or or sbb jne adcb dec fldt mov xchg xchg scas sub jmp out test cli add stos fsubp cmp clc mov in int3 push in enter popa jl sub lcall xchg daa fwait hlt cwtl sbb sbb adcl std in mov out pop pop add cmp aas loopne iret push scas xchg subl lods adc mov rolb fs imul adc or mov aas dec pop aaa xchg pop add jno jmp clc inc scas cmp imul fcompl popf and loope mov mov insl xchg aas loope inc repnz sub ret and fnsave arpl stc outsl sbb (bad) (bad) scas lret ret out mov and sbb test int mov lret push xchg je cmp inc cmovnp pop cmpsl test and mov insl scas rclb jl out ss inc or mov int3 loopne dec ret stos sti mov pop scas rclb inc lds push cwtl mov cmc pop cli rorb enter or loop xor push mov out mov scas aad aas iret add stos mov cli push js add pop jl stc (bad) loopne jnp mov cmp in mov mov xorb inc fstl adc cs lods dec scas push (bad) or test lods mov lcall jnp add jl or aam fistl mov aam imul inc cmc sub cmp pop cwtl frstor out and rcrb stos call movsl inc add ret mov aaa shll stc ret arpl mov sub pop xor roll neg and movl sbb mov push mov int dec int3 add inc mov mov mov call sub xor es test sbb add lret dec shlb out les jb addl pop fsubrs sarl fwait and jnp add stos pop ret mov into (bad) or test in addr16 andb popa nop subb outsl adc sbb imul sbb ds inc cmpsb mov xlat pop mov mov lahf test cltd add cmp into dec mov popl mov hlt fimull rorl fnop push xor roll orb jne mov sti sahf andb ds mov les xchg xchg xor push and xchg pop fcompl xor push xchg (bad) jnp pushf sarb mov hlt jo nop mov cwtl dec rorb popf cmp aad mov sqrtps xchg mov jnp jecxz mov xor outsl mov ret push fwait sbb sub clc in xchg pop jp pop testl mov cmp inc orb inc fmul outsl inc jp aam xchg bound sbb jb enter mov imul outsb addr16 xchg mov dec test mov enter mov pop movsl mov les mov pop rcr mov sbb or pop xchg xorb rcl push enter mov or imul inc add push insl adcb or mov leave inc outsb or test lock incl mov push mov mov enter in lods movaps int3 arpl xchg enter jae test add and (bad) in mov cmpsl xchg repnz and pop iret addb test andb popa in repnz lock fwait subb mov addb scas cmpsl lock pop icebp xchg test lock push cmpsb cmpb mov ljmp into xorl xchg testl push xlat aam adc mov push movsb das andl and sub jne adc ljmp cmp push adc addr16 mov pop repz mov repz or mov out mov in test lods inc dec xlat and xor inc sub movsb movl or adcb mov mull enter or mov sub dec scas fadd shl add arpl loop fildl (bad) mov idivb in inc andl ja stos (bad) stos out mov mov icebp lret xchg or and inc pushf test cmpsb mov inc ljmp iret add cmp jno inc repnz jle outsb dec fsubs iret fldenv and pushl pop mov fdivrs (bad) cmp fistpl (bad) into cmp (bad) pop inc out (bad) icebp or fcmovb add xor mov (bad) nop test inc fucomi sahf add adc mov mov das stos xchg mov adc mov lcall mov sti test or xchg imul mov dec shl test bound sub mov and sahf adcl rol jg add adc xor xor xlat or add insl adc xor addl testb scas mov (bad) mov push test adc xchg loope sub sbbb pop ret pusha orb in lods cmpsb push insb rol faddl (bad) sar inc pop orl fstps in popa outsl outsb cmp pop sub mov cmc lds popa test or fbld in sbb push ljmp mov clc (bad) xor push jbe pop add pusha popf dec cwtl push scas iret jmp or add add (bad) in sub or stos aad xchg jbe dec adc loope call ret bound mov pop iret mov mov addb sbb push dec lds sbb out pop mov jg push mov cwtl cmp sbb stc fiaddl or fist cmpsl xchg repz xchg xchg jno adc xchg in push arpl rolb jae popa mov icebp ret gs hlt cmp cmp cmp cwtl pop lds ret inc cmp nop cmp or jae push mov andb fwait popa leave cmpsb nop subb sub rdmsr mov pop sbb cwtl popa add lods push test leave fistl js lea outsl icebp fiaddl jg sub andb adc out subb inc mov jle or mov push lods iret das sbbl mov xchg push enter sub push call sti lods inc int3 xor dec sub in cmp jns test aad push stos es pop mov sbb adc cmp dec bound xchg lea xor inc add dec bound addb xor test (bad) pop idivl outsb test xor lret sub push mov imul or clc dec scas push incl lret jno std and jl pusha cmpsl stos dec subb movsl pusha orb lea hlt sbb cwtl inc mov and in jbe mov dec adc rcrb add xor xor loope jp mov in sti jno test jg negb xor or jle imul (bad) adc lret test test add fnstsw push stos into sub xor roll jge mov push out adc mov repnz jno adcb fstl push movsl fsubr ror mov test or pop xchg jb adc xchg shrl mov loop subb js in cmp ds pop in mov push sbb pushf test lods dec (bad) andb andb js mov jno idivl mov inc sub pop adcb cmc add or mov movsb add jg push mov fisttpl cmp daa xor push sbbb mov pop (bad) sbbb pop das adc cmp push or fwait mov test jno inc popl xor lahf xchg pop mov aam sbbl xorl inc rolb sub js xchg jo in (bad) scas (bad) or pushf repnz out andb pop subb scas aam xchg arpl jne adc and popf pop aam cmp dec scas and aad or push sub sub jp in (bad) sahf push gs enter scas push into fs xchg rol push dec jmp outsb and stos push jbe or adc mov repnz mov lock inc jb push mov sub je xor xchg sub dec mov (bad) dec inc inc sahf repz sub add and insl xchg or or lds out sbb subb xor or iret sub dec nop scas fildl icebp or addr16 aas in lods dec add mov push cwtl mov outsb jae mov daa ret mov jge xchg mov dec aam (bad) sub test mov push push xchg addr16 push test aaa in jg cmp inc out fwait or xchg pop xchg adc mov cmp xchg arpl cmc add mov and mov (bad) into (bad) imul pop in sub sbb leave mov push add mov add (bad) xor xorl xchg (bad) fdivrp outsl mov shl loop int mov clc xor cli lret cmp inc mov insl bound pusha loopne or xorb cmp cmp xchg push add add dec fstps and popf cmp sbbb gs jno dec roll lret mov lahf mov je mov or adc hlt mov sbb bound xchg jb or pusha jns js xorb sbb mov xchg xchg in lret xor test sbbb scas dec cwtl inc aaa nop cmpsl in cmp adc jo adc lods push push cs jmp and subl mov sbb (bad) mov test jmp pop jo mov dec xchg les mov xor xchg pop popf cmpl mov jb sbb imul ret in sbbb jg andb nop xor dec sbb pop and clc out push dec test cmp cwtl imul addb fiaddl lods (bad) std xchg lret andb fdivrs test xchg push enter mov imul data16 push test mov je mov inc lret dec popl sbb (bad) jle pushf xor js mov cmp adc mov enter adcb inc jne or scas dec addr16 jb cmpsl pushf xchg and insb dec nop or mov arpl je and ret adc leave push ljmp mov sbb orb xchg mov cmp mov loopne pusha sbb mov cmp andb aaa pop lretw fcoml cmp (bad) add fdivr (bad) mov or sub jl or iret push out inc inc ret lods enter xor pop pop sahf pop mov (bad) push cmp dec fdivrl pop pop stos (bad) lods aas out lock iret jl cld sub imul das daa xchg (bad) iret fwait outsb mov dec (bad) sbb sub inc push or push scas push and stos push addb xchg push imul clc test (bad) in pusha sub mov dec cmc enter and jg xor jle jle fiadd lret adc inc stc inc push addr16 mov aaa out pop xchg lret test xchg mov add rolb nop and add in sub adc xchg int3 inc mov mov leave jne push xchg mov repnz sub arpl xchg push (bad) pop int3 cmp insb adc adc cmp leave imul mov sbb push lret dec (bad) faddp icebp movsl or es adc aam aas xlat or gs cmp mov add outsb cmpsl sbb testb sti jbe ret jge push outsb movsb (bad) inc sub sbb test push mov mov popf test insl scas mov or adc and push jl rol dec mov fadd mov cmp ror pop cwtl call mov imul add mov push (bad) nop add sahf lock fdiv outsb fs call jae or mulb push add das fs push rcll sbb or push sbb inc dec lret inc mov sub sub inc and jecxz push movsb xor dec gs lahf push push pushl in lods fxch das (bad) sub xchg or in adcl repz lea pop popa sahf pop push insl jl outsb out test pop stos push addl addb dec mov jmp xor mov aaa mov pop pusha xor js or cld jmp decb push cmp in je push cmp jnp adc lret mov mov xor fcomps sti fsubs jl and mov inc test add jno rorl mov dec jnp (bad) mov je add jns xchg push mov xchg loop arpl add mov cmp fistp imul imul mov stc enter lods cmp add inc cmpb mov and frstor ja push ret scas outsl mov sbb lcall cwtl cmc sub int3 adc dec pushl sbb gs xlat xorb andb cli add dec (bad) cmp add xor dec clc pop and cmp stos dec scas (bad) mov lahf out xor sbb jmp cmc xchg add ret scas in andb inc jp mov test bound inc (bad) leave mov stc js mov movsl pop mov push lock pop repz fsts pop and pop or adc ja add repnz cld inc mov bswap aaa nop cmp xchg roll dec push sub fisub mov sarb inc sub rcll cmp fstl test inc push loop ficoml iret jne mov xchg aas mov (bad) fmuls jo loop nop ret clc inc inc subl (bad) adc dec add jo fldt xor push mov xchg lods adc ss orl jg mov push fstpl je add enter inc fwait sbbl test stc hlt (bad) negl inc test cmp (bad) xor adc add sbb ljmp fwait mov inc add (bad) xchg sbbb rorl adc test sub sarl xorl andb add aam mov (bad) adc mov out add adc cmp test cmp sub sub test xchg ficompl or mov or in std das stc (bad) mov mov mov push dec fidivrl adc or and add jne adc mov dec roll popa cmpsl mov push jo xchg out inc into adc or mov sti add jnp or pushf movsb mov nop sub jmp cmp sbb aad stos loope mov xor adc mov xchg fldl rorl jne addb lods dec sub jo sbb sahf push in enter cmp jae cmpsb and out mov ret lcall (bad) cmp add jne,pn mov aad mov shll enter cs imul in lods push popa and shrl cmpb cli add inc pop xor data16 inc clc orb adc lods push pusha jmp stc movsb (bad) ss insb mov (bad) dec mov mov (bad) sti jl push bound pop xor jb cli sbb sbb mov mov or xor int test es bound in xchg xor imul movsl xchg insb hlt and jae or push nop aas sbb das test jnp out orb adc decl pop dec out outsl faddl jne lret mov xchg aam or pop xor sub in jns mov dec call xorl into jmp jge outsl lock mov jbe mov rorb inc jecxz loop test fidivl scas fistpll shrb xchg jbe dec clc adc mov inc addl mov fwait orl pop xchg js dec out fsubrl xorl adc out les inc mov in aam jbe (bad) stos inc and test sbb sbb add mov (bad) mov and mov adc xchg fiaddl dec movsl inc lock fdivs inc subl dec inc jmp (bad) jecxz (bad) (bad) test push in cltd mov sub xor decl int test test cmpsb or sti and (bad) fs test or push inc jae and xchg out jle insl dec pop mov ret or popa sbb aas cld pop pop outsb ret push clc and jbe adc jnp icebp mov popa ret mov int or ror fdivrl pop xor out push push sbb loope inc js clc repnz xchg push xor inc in int int3 ja mov pop mov outsb lods lock or arpl es push jmp inc es jne mov cmp scas dec adc xchg sbb sub imul rol (bad) pop iret and cld out push push hlt mov push shr xor pop out add jnp enter pop movsb test xchg test or and test jbe xor mov daa sti in nop test jge add ds arpl lret test aaa pushfw movl push and jp (bad) jae xchg js sbb sbb jbe outsb pop sti mov subb xchg cmp mov xchg orb inc mov push scas mov mov stc fdivr cltd lods cli test pop imull gs pop add jle je xorb xlat dec adc xorb (bad) mov subb or cmp dec mov rcll dec ret dec and xorb fs aaa popa or ja sub inc xorb add scas jmp decb cmp pop xchg arpl jae cmpsl push pop into lods out fild mov stos xor testl cmp ds loope add imul scas incb add rol mov jb std add jnp pop cltd test mov fs nop scas (bad) mov add inc push add sbb cwtl test pop cwtl xchg dec cs cli xchg lahf pop xchg inc pop cmp dec adcb test or test cwtl cmp sbb add out es adc repnz std adcb outsl mov mulb or (bad) adc enter ljmp sbb mov add and test lods cmpsl cld and fsts mov (bad) mov sbbb test icebp shlb lcall inc fldenv push fnsave (bad) cmp rcl call sbb addb imul out cmpsl or test and repz imul pusha mov test lahf sub (bad) cmc (bad) shll addb (bad) sub xchg test mov fwait cltd (bad) push (bad) jnp xchg or xchg arpl or (bad) sbbb hlt jge iret js lret add push rclb jle jge in or push or ss in lret xor js pop (bad) call je (bad) inc mov xchg sbb xchg or ret sti or std adc xchg xchg scas add push scas jbe xchg cmp cmp test (bad) es enter jbe push or test push js aaa icebp push outsl in subb inc pop push and enter adc rcrb dec stos pop xchg mov cwtl jecxz inc or xchg enter push (bad) lret xchg push addr16 data16 dec pop push inc mov add int3 aaa mov pop fiadd or test mov out sub add mov ds inc fild sbb inc andb cmpsb push pop call xorb push ss push mov or in enter lock into (bad) cmp dec shr or push ficomp testl mov rorb pop mov adc pusha fadd mov test jle imul imulb sbb jnp xlat sub mov mov faddl and lcall add lret mov mov xchg std je scas test mov lcall jb outsb stos push cmp mov push sbb adc (bad) bound lret and mov rorb nop pusha (bad) repz inc imul imul mov aaa xchg cmp cmp addl loopne (bad) fmuls and stos push dec lret push adc (bad) ljmp int3 ret mov mov jbe or shrl jl in adc les mov frstor mov ret pusha xor popf ret nop push mov je faddl es (bad) mov ret lock hlt lea clc jle scas fdivrl cmpl rol out mov incb ds mov out sub (bad) adc xchg xchg nop jmp in or mov lods cmp lods dec push xchg mov loopne jbe js enter pushf xor push pusha adc inc jl enter xchg jnp js jcxz lret xchg test movsl mov in mov xchg imul test jae mov cmpsb and data16 pop test mov mov loopne cwtl arpl push fdivrl (bad) enter jae push movsl outsb adcb stos or out movsl fildll dec subb adc imul and clc xor arpl xchg fiaddl push pop and sbb pop add rolb (bad) cmc mov into xchg or lea mov (bad) and pop push xor jno dec out (bad) orl out push cwtl (bad) sub popf jg fstl (bad) (bad) aas jge andb fild push cli cld jnp xchg cmp pushl jae (bad) xor aaa dec outsb (bad) gs aad lock loope xchg loop loop pop and pop (bad) (bad) or push sub sub adc test mov out mov dec jl mov outsl (bad) mov cld bound sbb mov cs loope mov mull jnp lds push (bad) xchg aad mov cmp push push iret add and js jbe xchg mov push and loope (bad) push sub jnp cmpsb ror jae (bad) movsl inc xchg jo fs mov bound add cmp mov and (bad) sbb lock push mov in jge jae xor mov mov xorb mov push (bad) jo loop push add cmp rcl xor cltd xchg xchg nop test leave xchg test arpl mov loope popf cmp jne,pn aam xchg (bad) ja rorb addl iret jl mov (bad) push les cmp pushf (bad) scas jo adc lahf push inc das enter test mov xor test sahf pop addb cld adc jbe adcb out mov and add mov addb mov lea mov inc push jecxz lock or pop repnz xchg scas das test sub pushl insb dec pop pop fildl stos mov aad sub xchg xchg enter pop test xor push push jecxz popl push jo addb lret fadds (bad) shrl mov pop out xor jp xor adc pushf or lock push idiv shld jp xor and mov test test in addr16 nop sbb dec mov fisubrl cmp push inc subb adc pop js cmp xchg imul xchg jo lds lea nop jle mov loope xor sbbb dec rorl data16 je cmc test lahf push fldl adc fiaddl adc xchg xchg repz enter mov in mov (bad) jno push test cmp xlat cmp cmp xor test (bad) jno aas mov dec xor cmpsl mov cmp and pop sahf cmp dec mov mov cltd inc xor push neg test sbb mov pop mov andb sub push sar pop mov inc orl or pop xlat repnz jns pop ljmp fstps dec stc mov add sbbb cmp (bad) push and out xor out sbb push testb pop push orb or leave nop out pop notl mov add clc cmp pop dec test xlat dec fmul sub pop std mov mov mov or cmc ljmp jp mov adc xchg xor lret sbbb fs clc movsb leave xor sbb fidivr xchg jl jbe iret xor jns (bad) mov into xor jecxz push mul rolb dec ljmp inc popa popa and jl sahf int (bad) in push andb cwtl sbb push std nop imul into pusha movsb imul repz into xchg xchg sbb sub or repz lahf in cwtl lar (bad) fadds test pop mov push cmpb xor std cwtl ror mov jae push fldl xchg and test subb stos sub cmp mov pushf jl or xchg mov (bad) mov or cmpsb sbbb arpl jmp outsb enter enter sbb stos orb int jb fistp test mov xchg test xchg xchg nop pop mov hlt leave jge std jp ja adc repz jno push mov adc mov push xchg xchg mov pop or ret jmp jg scas popa (bad) jmp icebp lods (bad) inc ret in jp add cmpsb inc cmp push sti push (bad) test or cmpsb jne cwtl int3 (bad) push rolb sahf (bad) lock xchg iret mov cli mov mov (bad) xor das ret or and cmp jle mov loope in scas test push push in inc ret das inc outsb ss ret and push enter push mov fstps ret lods stos lahf adc loop pop inc cld pop inc ret xchg pop push jnp clc inc mov xchg jl cmp jbe jnp or add out lahf repz jle xabort adc sbb out inc mov in jle or gs or lods sub testl sahf jo test pop xor push mov push and xchg test and aam ja or push mov add in movups push test xchg sarb dec (bad) imul nop lret in mov out test rcl fstl jge subl adcb mov (bad) je mov mov daa fdivl mov pop loope pop inc mov fadds test add sbb sub addr16 test mov ljmp subb sti test xor mov test test pop (bad) or lock (bad) fs pop addr16 data16 aas data16 jne fistpll aaa adc add mov mov cmp pop or lock dec xor push jo sub sbbb jecxz push add inc mov add les orb stos ljmp mov andb repz subb add pop cmp lods ss sub cmpb jl aaa movb stos mov jb push dec mov es iret cmpb dec test test or add icebp or fs mov (bad) jns lret (bad) mov adcb repz arpl dec push xor cwtl arpl push xchg (bad) movsl pop fsubp in or add gs ds mov rorl nop sbb add aad hlt dec adc mov stos xor shll push (bad) popa jecxz sbb cwtl andb daa aad ret subb nop or jecxz adcb jo add (bad) pop in stos inc sub sbb xor lds sub adc std push mov add push andl mov sarl add push push lea test add xorb mov gs in jmp and sbb sbb mov test nop loopne pop popl arpl sbb xor xorl fisttpl dec mov rcl leave addr16 xchg xorl push mov cmp jl xor bound in jne arpl mov xchg iret mov add xor gs mov mov mov xchg xchg mov pop adc xor js pop mov std lret nopl dec mov push movsl (bad) cmp add dec cmp fs scas xchg popf lahf jbe lods adc fsubl pop mov addr16 mov ret xor dec test mov lds scas jg sub stos dec add (bad) iret enter mov outsb leave cs popl shll jae mov fcoms pop sub insl fbld test stos data16 and clc cwtl fldt mov push mov (bad) out add fbld addr16 test sbb cmp dec mov add push add inc push cmpsl (bad) (bad) xlat into scas jo je adc and pop loop js jmp pmulhw lahf aad xor inc out cmp outsb js cmpsb push and mov xchg jne mov add dec cmpsb clc pop out (bad) rorb (bad) aaa add add lds inc mov andb xor ret jp jno mov xchg lds cmp and (bad) pop loop sbb or cli inc flds fsubrl sbb adc jmp mov mov or push inc xchg ret dec push and and neg mov (bad) push cmc subl xchg push mov add jle mov mov in loopne adc enter lods xor ja (bad) ret sub and mov fcoml lahf in add xor jge incl dec faddl or mov push outsl stc in shlb inc jae sahf enter insb pop inc std addr16 xor stos aaa inc test add mov mov repz cmp scas mov sub or push leave add in cmp nop fdivs cmp sub xchg ret push movsb imul hlt and enter cmp xchg fdivrl ret sub clc int3 scas cmp jnp (bad) pop adc ret ret mov das inc jp jg pop jnp mov test gs jae pop lods jnp out mov sub pop daa test push sub mov jns mov mov add lods push jecxz enter je jg xchg adc andb sbb push xchg test sarb inc cmp add stos push sbb jp inc xor add lock mov add sub repnz pop mov jmp dec cmpsl in push push fcoms aaa sbbb sub scas or lea jp jg lret aam cs imul add scas xchg test lcall popa push (bad) xor jne pop cmp xor sbb leave inc mov pop ds icebp sub pop mov jg jbe xor mov xorb push pop mov and inc inc mov int sub sbb sub jg jl ds into fiadd mov fmuls jo mov sbb fcompl bnd xor movsb mov sbb lcall dec dec test (bad) std call ror test daa addb jmp addr16 jns loope or sbb xchg addr16 and xor sub andb fcompl (bad) ds std xchg inc cmpsl inc cmp mov dec mov addb lods aas aaa les push out inc cs xlat repz ja xor sub xor ss sbb push dec imul aad fwait sbb lock cmpsl or sbbb ds (bad) popa lret sub cmpsb xchg lahf clc rorl jae lret in ja jp repz xchg data16 lahf cmpb inc mov dec into test aaa mov aas pop jno inc test push pop ljmp mov dec test xor mov pop test mov imul push popf pusha (bad) cli pop pushf test adc and iret inc insl sbbb popf addr16 or cmp insb sub or loope and mov insb in mov push cmp repz leave sub (bad) ss mov add dec pushf or nop stos dec adc xchg stc mov xor jp sub jnp xchg xchg popf addl sbb and xchg lahf subb adc js adc cmpb in sbb stc lock enter int3 pop pushf aas push test and xlat addr16 je mov cltd outsb ss into jmp dec mov rorb xor ja sub out stc inc pop mov frstor mov lods sbbb mov stos xchg adc imul xchg gs cwtl mov cwtl cmp push enter jnp pop mov test lea cmp and add pop ret cmp es test sub pushf jns jecxz out adcb lret jae mov mov aad mov jns mov loop and loop pop arpl cmp sub cmp jae rolb add lock int or jns inc jae mov mov push and test subb movsb test or dec mov shll mov cmp inc fsubrs xor inc orb inc pop pop sub mov adc adc iret ss pop negb das aad push dec inc cld or je stc lods push pop sbbb push stos fdivs enter cli sbbb mov addb cmp jnp in mov (bad) and popa dec mov les les sub pop lock test andb (bad) cmovl rolb insl mov push nop arpl mov insb sub sub bound rcrb rcl jnp sub sbb mov stos dec mov sbb push test push inc mov adc leave xor sub push mov js push lods nop push imul movsb pop mov cli pop jl xchg push test cmpsl cwtl xor sub cmp sub pop or mov in xorb jmp arpl xchg xor inc jns stos mov jl cli rolb addr16 pop (bad) clc test out scas bound repnz sbbb dec xchg arpl adc pop imul inc insl jns push jg and xchg jo add jmp mov (bad) sub sub xor (bad) cwtl mov cmp fldl mov add mov add sub add add mov cs test js fwait arpl (bad) mov sub lret shrl xchg push cmp fdivs xchg xchg jp pop outsb popl rcrl mov rcll or rcrb xchg lea cmpsl mov and xlat add mov xor pop scas les mov sub adc ds andb lods js lock jbe imull les stc (bad) cmpb lret and adcb mov sub inc fwait cmp pop inc sti push sbb mov mov xor push movsl pusha addb stos jge test fmuls push cmc xchg or or add nop rcll lds or int popf cmpsl int3 cmp test jl in insl add aas out xchg push outsl (bad) lret sub xchg mov popa inc lret mov jge jmp push mov pop daa loopne nop jp mov cmpb cmp fildll subl mov jle jmp add jecxz mov subl cwtl shr or in mov loopne adcb inc dec add cmp test push hlt mov mov jg push andb out push out cs add add dec push in nop stos dec fmuls (bad) sti cs daa adc mov pusha adcl dec xor test scas sub les inc push mov pusha test (bad) and pop in add pop js sbb pushf mov inc cmp movsb cmp aam mov shlb (bad) push vdivsd mov or adc sbb add sub dec fcomps or push iret dec clc rol movsl xor iret ds shrb rcll mov in sbb xor mov aas pusha adc pop cmp dec inc ret fstp jecxz sahf fdivl rcr sbb js jecxz movsb pop xor fisubl test lock and stc into mov sbb ret jp pop push (bad) mov xchg add cmpsl cmp sbb xor push sub enter mov leave popa pop out pushf loopne arpl sub pop jp mov pop in mov sti xchg xchg xchg int3 mov call mov dec dec cld cmp lock push lock pop xchg cmp ret pop adc (bad) adc stc xor insl push pop and clc jnp mov (bad) (bad) pushf jnp pop pop rcrb das jo xchg iret jmp shlb push shr mov push jle lret outsl xchg inc inc jecxz mov cli mov popa das andb idivb jae int3 les movsl adc js jle adc and mov inc add or into xlat add (bad) popf fmull xchg pusha or iret or xchg adc out mov or (bad) lcall jecxz and repz aaa rorl push (bad) pop imul sbbb outsl push sbb mov addl ja sub sbb out jnp test (bad) mov in mov (bad) pop mov mov clc addb inc sbb add andl push push cmp bound jns fnop aas in pop xorb jne movsl loope,pn pop das sbbb insl xchg push jecxz leave inc jo scas aaa mov xor (bad) or mov rcr loopne repnz and lods cmp cmpsb pop adcb enter sti xor cmp idiv push out sbb xchg aas out jb sbb jne mov imul pusha mov outsl sbb mov arpl je and push dec test (bad) mov stc aaa fnstcw aad subb addr16 sub mov addb into pop loopne jecxz dec test nop sub addl mov mov (bad) test sub mov sub sti cmpsl mov fstpt lds hlt data16 mov fild push ljmp lods in dec fiaddl sbbb mov movsl pop (bad) jge fisubr mov jg imul sub lcall loopne (bad) mov outsb xorb scas mov push adc or aam and fildll shrl add iret sbb mov sahf inc mov out orb test scas sbb andb lods mov (bad) cmc std jmp pop outsl xchg jge incl sub fs mov (bad) or lea xchg movsb lea test hlt mov addb mov subb push test dec imul cld mov and ret dec mov jae out andb data16 fisub loope into and pop test in add cmp dec adc pop mov (bad) rcll dec icebp xor inc aad stos dec addr16 popf sbbl sub adc es xchg bound add mov call xchg jp mov mov jo aaa lret test jl lahf addr16 jo dec mov xorb sbb cli aaa adc add mov xchg dec mov pop jno (bad) subb sahf adc out push mov xchg insb mov cmpsl or xor test dec lret sub and loopne (bad) mov push xorb loope imul mov jmp arpl sbb call mov incb (bad) not sbb test addb add sub mov pop mov lahf mov jno or stc mov roll and loopne mov lods mov cmpb pushf pop xchg bound inc or sbb sbb add inc xchg mov and push ljmp inc and jae inc das rolb fldcw clc stc jb rolb scas sub mov push push adc cwtl and das mov lret mov outsl inc mov mov sbb iret inc inc jnp mov sbb mov out adc int (bad) sbbb mov subb xchg sbb cmp add or (bad) mov dec push mov nop sbb mov mov dec in inc cmpsl nop out mov jl xchg lods push add je dec sti jns rcrl jns aad out bnd mov cmp js fldt sub pop loope outsb lcall out mov testl enter cld addb lods (bad) jo xchg fistp (bad) cmp inc nop mov push nop data16 inc shr cmpl sbb cltd push test mov dec pusha int3 insl mov sbb inc mov test mov je xchg cmp andb ss add movsb cli int3 jle test js scas mov xlat jmp (bad) fcompl mov fsubrs flds (bad) push sbb jle and jnp sbb (bad) sahf mov rolb xor sbbb outsb inc mov pop lahf or out ret mov out in push push adc ss inc inc sarb xlat ljmp cmp test (bad) pop faddl push dec dec test lock cwtl pop repnz jecxz mov lret add mov int3 popf aas sub addl (bad) iret mov inc jb pop movl push xchg test iret leave repz and das in sub out ds (bad) les xchg or pop data16 iret and dec lods adc add std int mov ljmp mov push or adc test add out shl daa pop jnp jbe xor jbe adc fwait je xor sub add pusha loopne into js cmpsb sbbl ret jmp lds ficom cltd push dec hlt ds (bad) fsubs cmp (bad) pop or and mov gs pop sub jae nop das test cmpsl mov int3 arpl adc sar sbb and cmp shrl arpl or sahf lods mov xchg jle iret ja (bad) cmpsb push mov test ret lock rolb int3 add push loopne rclb inc fcmovnb cmpsb popf and and mov lock test in cmc cwtl xchg fs int test rcrb in and addr16 mov and nop out mov bswap pop int3 orb pop ret sub sbb pop jge sarb movsb fadd and cmp fs pop mov je aad xor jns jl ret dec pop test adc (bad) pop (bad) xchg pop ljmp jbe mov bound aam inc fucomip (bad) jbe mov xchg mov ret adc in cwtl mov arpl dec stos iret sbb daa daa pop imul push addl jo jmp clc dec clc sbb (bad) dec nop jge add pop divl jmp xchg stc and jb adc xchg inc cmp lds movsb scas or mov adc js mov pop pop pop hlt int push or outsb jns iret xchg test enter arpl xlat enter cwtl js mov jae andb sbb cmpsl and mov sarb dec pushf jb inc jb adc (bad) int3 repnz das int3 add rol xchg push sub inc cmp js xchg movsl fmul mov fstps mov jnp xchg and pusha jle (bad) dec les mov adc ss repz add inc adc xchg mov iret jne movsl jge movsl mov inc pop sarb mov cmpsb idivl jne in or mov mov movsb lods int ficoml mov (bad) fimull adc add daa dec loopne lods daa outsl adc mov fnstenv cli fisub aas stc mov fildl pop icebp sub loope js cmp adc jecxz jmp (bad) mov rcll xchg dec cmp shl xor in jmp lock test mov (bad) ja mov movsl xchg sbb mov ss jno mov lcall in xor sub loope cs or popa ficoml pop add in movsb enter dec sub out cmp lret jp data16 xchg or push into das fidiv lahf mov sbb mov cltd add sub test aas pop inc aad add int3 and mov mov and (bad) out outsl and lret mov jle xor mov roll fnstsw repnz in mov out inc jp and clc out mov mov rol fisubr cwtl daa inc (bad) push (bad) cmp int ljmp in fwait cwtl rcl imul cmp lods cmp dec and jge pushl lds hlt divb adc add int ret pop out mov addr16 loope cwtl repz lea loope cltd nop shrl iret adc js pushf int3 movsb stc lock sub mov (bad) sub sub and pop test push loop sub pop mov sahf sub lahf notl (bad) repnz insb dec xchg push mov and and test and (bad) stos roll std sub pop mov xchg hlt add lock and out loopne clc mov call imul mov sub mov jo subl add sub xor outsl mov ja loopne mov outsb dec pop outsl cmc inc fbld test xchg mov ds repz pusha iret or xor outsb push lahf movsl dec fsubl gs fildll jmp sub das or scas jbe stc adc insl pop xor shr jns imul or xorb fstp and clc xchg jnp fwait mov fscale in lock incl dec adcb aad mov shl and nop test sbb (bad) cmpsb push cmp stc add dec hlt or test fimull mov and adc in jbe dec icebp cmc add lods popf pop cmp bound or mov inc (bad) mov mov xor mov icebp cmpb mov pop ret je pushf and imul mov xchg fiadd xor push push inc subb lret aad mov dec mov pop movsl xchg or cmpb xchg outsl sub or andb inc int3 push (bad) test (bad) and sub xchg jle and aaa and add popa adc decl mov sahf jns dec lods cs mov scas xchg lds or rcll jge outsl (bad) lret (bad) xor mov bsf pop out jo push ljmp addb inc lret sbb or pop cmpsl loop adc sub fadds das je lret adc pusha jb pop fsubl (bad) insb xorb inc inc decl mov icebp mov or xchg and nop mov cmp add pop inc lods cwtl fisubl xchg (bad) imul roll push mov sub icebp cwtl sti or lret popf call (bad) or mov test bound jo push cli aad jo cmp sub or mov or cltd shr xor mov sarl cmpl stc iret test frstor ret rcrb (bad) add test imul sub pop lret (bad) cmp outsb pop dec mov push imull xchg mov iret mov jnp jno jb cmp mov out clc add jno sti dec push bound rorl or subl push xchg mov rorb xor xchg xchg sub test add daa push xor add mov adc push in jne mov adc or inc mov jns (bad) push cs scas orb xchg inc orb mov jno xchg sbbb insb jl jle mov cmpsb push int jno repz adc push mov loop repz add jg andb jne mov mov push les jp jl das xlat outsb xchg fwait je lea mov jne mov (bad) es push outsl out std aas enter mov (bad) fsts pushf sarb sbb rcl test dec pop jb inc and js repnz add nop xchg xchg xor lock add sub out inc jb mov (bad) hlt push aas icebp (bad) mov mov xchg adc rcrl lahf mov imul xor push sbbb in add dec mov sahf inc imul xchg rcrb fisub clc and scas adc pop push mov xchg cltd frstor test push cmpsb ret jp adcb cmc sbb testb data16 push lcall and add mov xchg mov arpl mov loop mov icebp or adc adc test rcr sbbb mov pop adc mov xorb fdivp imul xchg jae lcall rorb add add sbb arpl loopne push cmpsb jle or sti sub push in flds add das arpl (bad) gs mov jo call xlat adc or rclb arpl es mov (bad) aam xor loopne roll xchg in bound adc pusha inc aas add jns lret cmp cmp in lock push sbb (bad) mov xor les andl pop lcallw and (bad) mov xor loopne in movsb inc test xchg and ret mov mov inc dec push jae out mov jg icebp dec mov ljmp (bad) cmc lds stos movsl cli push mov mov fwait mov mov pop jno push cmp aaa add or jecxz jbe insb dec popa or mov insl ret push adc gs inc mov popa inc notl loopne xchg mov push pop loopne shlb sub mov subl out popa mov sub xor je lods test sub pop mov scas scas outsb inc jmp pop xchg mov xchg xchg mov cltd or test dec andl lock dec add push inc adc lret iret lods xchg insb add ret jns xchg insb mov xorb mov inc (bad) xchg push add jl adc or cmpsb push mov test jnp sarl movsb sbb or cmpsb inc stos inc test inc fadds fs and aad xor add inc inc pop and (bad) inc mov test xchg (bad) out or sbb mov cld jno lcall icebp mov push insb test pop and adc mov test push fildll icebp cmp add mov in loopne (bad) xor fsubrl xor nop dec push decb jo jp iret jl data16 push (bad) xor loop mov mov (bad) ds loop popa xor lahf std cmp ss mov call jno aaa fs jge sub mov fbld push cmc jge mov jo fidivr add test scas mov mov shrb cmp mov cli dec cld pop mov jne sahf cmp dec push add jns push cmp xchg outsb rol mov cmpsl mov push adc xchg mov insb bound inc stos mov inc es mov inc mov xorl inc cmp insl mov xor fdivr fs xchg loope xchg mov inc or (bad) faddp clc adc lds mov push dec jo push xchg mov lret adc lock jmp aas rol jae rcll adc repz push icebp xchg incb insb scas sbb in cwtl popa ljmp (bad) cmp mov (bad) jno push pop adc int3 orb lds mov jle int xchg ds mov lret popf cmp jg adc movl gs insb outsb dec jbe pusha fiadd fstpl sbbl add ljmp out pop mov test jmp in pop dec or outsl dec cwtl jle aaa rol jp sub test int ror test ret (bad) push add loopne (bad) mov test fiadd mov orl test pushf test adc leave dec push push adc cmp fstpt test cmp outsb push add lret ss mov (bad) ja insb xor enter xchg dec adc mov push mov cmpsl jl xchg jmp out push mov ret dec jb push je int ss leave es nop aam sti sub xor dec nop outsl popa imul add addl popf les pop rolb sub imul add rclb les add mov or loopne roll fucom outsl (bad) popa insl divl loope jl and inc mov jle iret (bad) xor xchg jae in scas or mov js or packssdw daa push pop iret lcall and movsl mov mov push pop lock imul imul add inc jmp push pop pop xchg xchg push sbb cmp cltd aad jnp push mov inc cmpsb dec cli pusha sub jbe test mov jne or xchg or in jle push add dec inc jge xchg in and addr16 sar push std inc aaa mov mov xchg int3 mov (bad) xor vunpcklps stc test xlat loopne pop mov lds pushf call stc test jne pop sbb popf gs mov stc jl and es mov mov and inc loope sar les cmp xor test push and js jns out ficomp xchg or loopne adc dec fistp and fcom mov mov iret inc or cwtl addl push jecxz aas fbstp dec xor xorb sahf pop out cmp jmp dec adc loopne clc xchg out add adc jmp sbb dec lods in push ja addb int3 xor push frstor mov jp lock cmpsl aas icebp sti test fs leave dec sub jge and jmp sti (bad) pop and call mov mov xchg (bad) add sbbb cli sbbb lret adc sbb jge das fcoms sbb cmc rorb jno icebp add out sbb es nop sbb adc andb aaa es shl adc lcall jle (bad) xchg pop sbb fwait xlat xor jl add orb shrb loop movsl mov inc cmp in cmp repz jbe push (bad) push cmc mov (bad) gs mov scas orb cmp or jge jbe inc test insl xchg and popl lcall sub aam push in adc cmp sbb push xor dec int3 addb ss adc jmp inc gs vpsrld or jae jno mov pop dec fldenv or or xchg test popa pop add pmaxsw nop lods mov fldl xchg xor mov int3 (bad) or sbb push jecxz cmp loopne lods xor add addl sub addl push jle call jno js (bad) dec sbb jge cmc jno xchg call rcr out pop sbbb enter int xchg inc scas push pop cltd andb (bad) jae fisub sbb mov imul dec mov mov jl lfs inc jg sub adc mov scas loop mov xor imul xor dec xlat xchg push cld mov sar stos (bad) jg roll dec stos xor fldt addb pop mov sub icebp mov lcall mov rcl cmc mov ja test adc push cmpsb push pop inc push and push int3 pop arpl lock ss fwait mov jb cli jnp mov pop in nop mov inc insb orb jl cmp sarl cwtl mov jmp jno test aaa cmp add or pop xchg mov dec xchg cmovs xchg popf xorl lahf cwtl les inc lods pop pop sahf adc enter dec (bad) cmpsl cmp and in adc mov xchg ss repnz mov mov xchg dec xor cmp lret or jmp sbb int3 sub mov loop pop cs xor pop enter pop mov movl jp push sbb inc jb cli or sub xor push jl dec xchg xor andb pop and xchg (bad) lahf imul sbb nop rolb (bad) jno insb loop sub pop inc cli andb jbe call sub pop fdivr add inc or adc dec ds mov cld inc mov jle add mov rolb dec shl adcb pop xchg addr16 mov adc outsb push jg lret loop pop cltd insb xlat xor sub into ss and xor orb fwait pop jp mov mov js leave insl push mov arpl adcb ja xchg sbb jmp sbb cmpb mov aam mov jo shrb xor jb jno lock sbb adc hlt push orb scas dec xlat pop mov jecxz popa dec lea jl lea dec mov int ss xor push lock inc outsb xchg (bad) dec sbb sbbb ret cmpsl jae into or testl mov fcomps enter das sub cld andb aam insb mov fs sub mov xor out xchg xorl cwtl pushf stc sub mov adcl pop mov test sbb xchg sbb fistpl rolb mov dec lods cs rorb jl stc xor xchg jle mov add shlb fsub xchg xchg mov mov hlt push or sbb out adc cmpsl mov out addb imull enter ds mov lret outsl dec mov and jg addb test shr jns jo (bad) jge scas dec adcb jb inc int adc adc adc xchg pop repnz lods mov loopne sbb outsb jp lds mov mov cli mov pop in test adc mov add or jmp addl and push inc mov xchg cmp mov pop rolb js cltd addr16 insb xchg xor mov xor or mov loope sub push loope mov push aas mov movsb pop in adc inc dec xor loope lods mov sub jae lds push insb push inc clc ret push stc bound icebp mov inc adc fiaddl push mov xor sbb adc push nop (bad) andl xchg mov or pop ja pop ret lods ror jl stc cld in xchg (bad) (bad) mov insl aas sbb (bad) lcall out int3 add test cltd out mov test adc loop add sarb push fmull xchg cmpl nop xor lds and sub enter cmp ss sbb add movsb pop jns dec std adc aam adc xorb xlat mov test mov mov xorl xor mov pop and and inc insb inc addb ss jp decl sub xchg fisttpl loope add xor dec andb xorb cld aas xor mov fs sub (bad) sbb cld lock xorb stc aaa test enter in lock bound xor sub clc mov sbb (bad) testl out adc repz sub in pop xor jmp outsl mov int3 cld add lock cwtl adc sbb cmp pop mov xor pop ret out rclb xor cmc pop das inc add mov mov inc push test decb and popf sbb push or outsb cmc test cwtl xchg push in mov jo jns pinsrw push repnz aas mov fwait popa jne test jecxz sbbb call mov into mov xor inc out xor sub arpl fild xorb fdiv add jecxz add sarb cwtl and imul inc adc xchg jge inc or roll dec mov cmp xor pop dec nop lea xor jbe mov adc jl negl stos push and addb ds pushf pop nop mov pop add insl cmpb mov xor int inc out ljmp mov adc mov movsl add fnsave insb cs or jp dec pop fcmovne sub (bad) (bad) inc test test push adc inc sbb daa aad (bad) inc add sub scas fcomps jecxz jge sub xor mov adcl (bad) cmp movsl fldlg2 pop pop push cmp xor orb pop fwait or sub pusha fbld mov pop mov (bad) sbb push fisubrl (bad) jo fidiv into stos and mov sbb add and loopne adc loopne xchg das push jb out mov add cmp fbstp sti adc xlat (bad) push iret xor or stc mov fs add adc fsubs xchg inc cmpsb loop rcrl mov adc sbb add add pushf inc mov inc jne lcall add fadds fisubl pusha orl (bad) dec mov mov mov test test pop pop (bad) imul push or mov scas outsb jbe xor test jns add popa xchg ss mov outsb cmpsb in test cs sbb pop rolb cwtl mov inc dec and xorb adc popa or ret cltd pop andl outsl shrl jg cmpb dec sbb push out gs or xor cwtl sub sbb mov xor push rolb cmc inc gs test or adc mov clc dec stos xchg addl sub xlat xchg (bad) addb andb fidivr dec dec mov loop pop xchg scas movsl add fnstcw (bad) popa push subb mov sub adc mov stc push sub orb loope add lcall rolb jle lahf jno scas mov aaa cli cmc add sub ljmp stos nop sahf add es loopne xchg inc mov add js mov xorb aaa xor inc mov xor or insl lock or aam (bad) inc push add and mov cmp xchg insw fimull idiv mov push subb ficoml adcl fist jbe aas add test movsb inc mov xchg aad (bad) ja out add push adc inc mov sub pop into sub and mov add and repnz pop xor adcb mov sub test jnp add nop ficompl and jne incl int ds sbb jl add test cmp icebp add (bad) mov cmpb sbb bound ret mov cld subl cwtl sub jge icebp or push addb stos test fistpl mov aaa or adcb iret mov in sbb test pop stc add pop mov mov dec fsubp jl cmpsb aad shrb jmp xchg (bad) jle jnp mov andb push adc xchg lret aaa cwtl (bad) push push mov jne imul inc push rolb sub enter cwtl jnp popf fsubrl dec cld add mov in push adc imul or jo inc into jno int3 mov (bad) pushf jmp push adc mov outsl jb xor iret repnz push mov cwtl xchg cmpsb enter add add ret dec scas jo les cvtdq2ps mov and pop pop mov stos dec push pop movsb dec mov jae adc inc xchg mov xor mov loopne sub jae cmpsl idiv bound cli test inc es mov add test pop sub js (bad) ret xchg call imul mov cmpsl push mov int3 dec and inc pushf popa popl xchg add lods and in mov inc jecxz insl into cli popf sbb xchg dec movsl mov push mov inc outsb (bad) pop pusha add mov cmp arpl and sahf and js adc add in cmp adc mov xor sub sahf (bad) aaa imul dec (bad) xchg dec mov ret pop push inc (bad) mov add jle dec dec xchg jmp gs cmpl roll in adc or adc leave or fs hlt sti mov scas popa bound fs iret jbe xchg jl mov adc add fisttpl sub leavew add (bad) insl aad dec outsb (bad) mov mov (bad) (bad) fdivrl rcll int3 test (bad) jns stos cmp (bad) repnz int3 stc xlat cwtl repz mov jge cmpsb jmp add and iret sub loopne (bad) cmp push iret or movsb gs loop dec fdivp jae in xor lret scas sbb mov sbb ffree and loopne int3 outsl adc mov or jmp in fnstenv fadds stc sub notl clc xor mov fs push imul add mov out (bad) enter imull movsb jbe adc xchg add pop push (bad) sbb adcl iret stos ret cmp mov sbb in cmpsb inc fsub push xchg mull xchg popf mov mov fcomps and popa fucomip rorl fadd orps jp hlt lea push ss mov mov mov mov and out add call jo repnz les imul pop (bad) int3 mov ret jns dec pop adc iret sahf je mov out mov je jecxz inc and jg or movsb sbb in adc mov popl xchg pop mov adc jge xor jl pop add push add sahf sbb (bad) iret js jb and sub fcoml push add push enter dec enter mov push xchg iret add add mov inc inc sahf test lock test (bad) testb test aam or out adc clc sbb jns cmpl sub inc mov loop sub faddl out sbbb stos (bad) or inc push cmp add push notb pop add stos dec push and (bad) cli lods cwtl jg mov pop xchg inc push in push fcomip subb jnp sub cmp inc repnz sub mov pop out test mov movsl pop (bad) lock in mov jg sub sub lahf add (bad) js sbbb stc add ss clc mov (bad) xchg inc add test push loopne std aad (bad) out inc je andb jns xor push jnp sahf lret jb mov fildl cli jns jge xor and sbb xor cmpsb sub push pop in xor orb adc std loope mov sub (bad) ja sahf pusha (bad) fbstp sbbb pop jns fstpt addl imul cmc xorb xchg mov adc pop xor std adcb sbb add push cmp cld lods mov jge sub jle adc out cmp pop mov push sbbb aas mov xchg xchg test orb out imul nop je sub fnstcw stc push jl (bad) fdivrs subb ss sub or outsl test mov mov sti nop xchg adc adc aas add push jo cmpb ret mov gs ss and sub fisubl test js sti jbe mov xor push xorb fucomp (bad) cli popf sbbb ja jns adc and lcall mov into es aaa shrl sub fcoms sub lock ja mov push push add cmc bnd orb push adc push pop lcall xchg mov stc and pop in mov notl scas push outsl xchg and shl mov xor nop into sub insb aas test mov cmpb scas movsb push mov push mov xchg or cmp adc mov inc xchg bound or leave inc clc aas gs (bad) mov popf cmp inc mov fbstp dec sub fsubs add (bad) xor sbb xchg iret add (bad) and mov gs xor enter pop cmc movsl and mov sti sbb lret nop mov scas add lods inc inc xor int3 je jl cmc cmp cmp sbbb lahf clc popf cmpsl mov rorb xchg and sub mov mov aaa loope jl int3 jl ljmp push dec jbe fwait loopne mov sub and inc cmc sbb leave stc push inc pop sub mov imul popa dec inc sbbl xor scas (bad) xchg or push movsl and jle iret es xchg les stc testl cmc test mov xor sbb dec xchg xchg jae mov enter in fdivrp (bad) rcl adc popa xchg cmpsl cmp fdivrl clc in cmp cmp pop jae xor ja pop pop js and (bad) int std inc js cmp jne into rcll adc lods ds mov xor pop mov insl mov jae mov dec dec jge sub adc fprem inc test call int3 loopne ret push cmpl in xor xchg mov daa ja xchg andl mov mov or fs in push pop sahf lret and adc push add inc subl add (bad) int3 and pop mov out jno jne lods sub in adc ret jmp test sub neg mov pop aad adc add push in push dec lret fisubrl dec push add test test mov les sub pop add movsb test sbb pop sbb push popa stc xchg mov nop sub mov cli and outsl mov jecxz es data16 test fstpt or clc pop cmpsb push repz xlat xchg flds inc int3 sbb push push mov (bad) shl xchg cmp sbb push add xor xchg test call push mov xchg mov xchg test jns imul sub dec xorb cld movsl sbbb cmp jbe (bad) xor stc add and (bad) mov cmpb mov andb test pop lcall push sahf lret sub add cwtl (bad) push or xchg lds outsl test rcll or fistpl xchg fnop dec stos imul stc mov xor adc out sub push cli lock pusha test mov movsb (bad) popa dec xorb dec dec cmpb jbe rep enter or stc or shl loope loop and aad mov or dec fsubl or xchg imul nop adc cmpl aas xchg xchg enter xor xor xor and outsb push dec sbb jo cltd xchg nop or and inc aam jo test push repz or xchg rcrb adc inc loop pop dec cs pop xchg out or cmpb rcrb push jecxz sub pop inc dec sbb stos xor (bad) loop pop pop xor pop mov lock or cmp inc gs lds leave sub pop fwait or test out sub scas int jp jmp add std or mul out orb addr16 inc jecxz rorb adcb sbb es dec loopne fldl shlb dec mov and enter sbb mov lods test push inc aaa sbb pop rorb add cmpb sbb movsb mov and xlat test js add out sbb adcb mov (bad) push pop lahf sub adc cli sti xlat adc mov leave sub (bad) sub icebp jmp xor xor fldl fcomp xlat push jle int jae orb leave xor popa cmp sub imul cmp in cli aad mov sub dec inc pop fstps ja test push enter xor sbbb cmp mov or pop stc or popl jbe enter movsl pop jns jns dec xchg shr cmpl inc cmp aad inc fs shrb xorb xchg mov xchg jl mov mov xchg stc add enter xor subb out pop add dec es push dec cld (bad) push mov aam in adc or decl outsb insb xchg adc in test stos subb js push cmc push cltd movsl xchg mov xchg lea and lret repnz rolb mov lahf mov enter (bad) idivl (bad) cmpsl in gs dec mov aam shrb test mov jecxz or jge pop mov jo xchg dec fs mov aas pusha pop pop addb addr16 iret push test rolb outsl ja xchg out mov cmp sbb push or (bad) andb popa push lods jp popa lcall cli jo sbb outsl outsb inc test jp mov test mov stc jb xorl data16 jmp xchg (bad) ret lods xor in fwait bound repnz mov xchg jne lds mov sbb sbb xchg loop lcall (bad) cmp or xor add adc fildll ja cli sub jno aas jne mov add xor mul mov push xchg push inc out fcomps stos push repz test inc rcll ret ret data16 pop pop jnp enter pop dec jbe stos pop mov js jnp pusha xchg mov push cmpsl cmc icebp out inc xor sarb jl sub test stos dec enter mov cmpsb or mov stc scas mov push mov les cld pop in jo cmp push popa popa cltd xchg xchg sub xor adc cs push outsl cmp (bad) bnd fstpt sbb add pop and lods jmp in sub fmull ja es mov mov mov ds inc lret mov push out js or push mov cs loopne clc sti test aad inc xchg fldl mov loopne (bad) jae fiadd adc cmpl xor aas add sub mov subb call cmp test or aaa je fstp (bad) jb xor out shll inc sub jg cli incb pop aam loop stc dec hlt nop adc orl (bad) shlb adc pop test and jp and nop mov xchg add mov sti test pop dec jno push adc or sub mov dec rolb imul adc cmp ljmp lods mov push mov dec leave mov pop mov das imull stc sbb adc mov test lcall pop lock cmpsb sub inc cmpb push leave orb (bad) gs popf loopne cld test repz or addb jnp (bad) and xchg stos inc mov mov dec pop mov sbb and push add js dec and iret loop cmp cmp xchg dec add loopne cmp dec fs push call les xchg flds inc mov mov push scas and push push out mov stc cmpb mov sbb cpuid push sub mov add pop dec pop loope xlat daa mov mov stos mov orb mov nop sbb (bad) and cmp nop pushf pop loope add pusha fiadd xor cwtl xor in xchg cld insl test lods mov jae mov fwait xlat and or mov jno jge nop lea add and arpl sbbb shrb int pushfw and mov push enter xchg incl xor outsl xchg and jno ljmp push test cld data16 scas sbb aad xor test cmp insl jae testl fs std push adc test iret mov rol xchg clc mov sahf bound jmp pop andl popa inc push ficoml lds and pop inc xchg movl into sbb cmp sub mov mov lgs js inc and (bad) dec fisttpll fldcw ljmp sub loope sahf sub mov (bad) xor ret decl push fdivrs push test outsl lea shrb imul mov mov stos in pop insb adcb xlat xorb hlt or test dec (bad) and jle jmp fsubrs lahf sub lret jo cmp lret test mov jl stos jecxz xchg in dec aas cwtl (bad) mov fdivrl test fs ja push test addr16 mov and daa sbb inc jmp rcl ss imul pop xchg add jmp orl repnz adc addr16 andb movsl scas jns or cmp adc sbbb dec (bad) aam mov xchg sti add or (bad) aad cmp prefetcht0 jmp or icebp sbb xorb xchg aas movsb dec jbe cmc and scas mov test inc jb jecxz mov loopne xchg pusha sahf push (bad) push addr16 sbbb mov sbb in js bound mov jg out stc clc cltd fsubs fsubs addr16 enter or jle outsl lret xorb sbb in loop mov cld sub xchg sub adc js subb addb pop mov push popa dec pop jge test mov lcall adc out dec in xchg mov lock pop lcall subl fisttp les mov fcmove aaa sarl (bad) inc adc add inc aaa nop mov outsb xorl push or and frstor mov push ret inc test subl dec test les jne mov (bad) mov xor (bad) incl jb test dec dec inc mov mov lret xchg jg pop sub mov jns hlt or ljmp js sbb xor push orb dec dec push push push add pop test ja mov add sub xchg add (bad) out or jl mov cmp add dec gs lods mov call insl nop fs dec divb jo outsl jge xlat jbe lea int3 subb addb in adc or rcr add push les lret xchg cltd loopne enter inc push add ja mov xor nop push test pop lahf fadds shrl pop iret nop insl dec xor stc incl inc mov jae sub mov out orb lret dec stos dec mov movsb pop scas and ffree jmp mov out movsl jo xor xchg out fmul fs imul mov xchg sub jo mov bound inc push xchg dec mov and andl test pop test les nop aas aad mov andb (bad) pop test push mov fidivrl int nop push jmp addl adcb mov insl and xchg mov sub pusha jo orl popa lcall xor aad cwtl sahf pop movsl jge xchg xchg push ds lcall repz js and jae lahf ret mov mov fnstsw or jmp pop test xchg dec jmp test jnp inc in addb pop inc lock sahf adc push xchg mov xor (bad) pop push popf mov (bad) int3 xor jo xorb or call jmp push xor cmpsl xor adc adcl xchg mov test mov push sub addr16 mov mov addr16 movsb nop mov cltd popa sbb lret (bad) mov cwtl pusha mov cmp push mov mov test in call cmp orb mov or outsb aam xor xor test jb pusha (bad) jnp push cmp hlt aas fbstp scas aaa cmp test xchg dec jns fcoml into imul pusha push cmp fdivrl jno jne test dec pushf mov xchg nop out cmp cmp orb orb sub mov jb or push test add push ret xor shll xorb add fsubs mov imul add adc or fstps or orb (bad) xor mov add and sub adc xchg nop add rorl int (bad) mov xorl daa andb or jnp or (bad) outsb cwtl or ljmp cmp cld mov mov push xor pop cmp scas sbb pop addr16 loop inc int pop xchg jg xorl outsl push jo dec test xchg cmpl scas jns in (bad) decb rcr pop lock adc out clc sbb add cmpsl insl cmpb pop pop mov xchg movsb add cwtl mov fistp cwtl test out test inc add (bad) jno xor push adc mov xor or push mov cmpb pop mov sbb (bad) leave push lahf pop lea sub add cmp pop fsubp (bad) jne adcb gs adc cld cli test or fisttp inc fs sbb outsl clc cmp (bad) adc jmp (bad) das xlat sub jmp adcb js loope xorb cli (bad) mov sub pushf cmp (bad) cmc xchg andb adc pop test dec lock daa pop test dec out loop addb mov dec sub jecxz cmpsl addb pop inc push in cmpb test and data16 xchg cmp cltd adc call adc and arpl mov sbb orb xor and xor sti adc xorl fdivl mov lods inc dec movsb inc stos or adc iret loopne (bad) and sbbb test mov add (bad) imul cwtl dec shlb inc data16 and and icebp sub lock gs pop gs dec (bad) push int3 pop hlt repnz xor rcr mov test cwtl add int3 rol aas push pop imul mov jge fwait mull mov (bad) xor and dec mov imul jmp push in (bad) loop movb jp mov pop dec aad sbb xor mov mov sbbb mov gs mov pop jle sub insl mov arpl ret and adc jne sbbb xchg data16 cmpsb stos push or in mov lods dec imul nop clc mull mov test lock out mov in nop inc mov ds sbb xchg pop push xlat stos test fcomp xchg das inc movsl int pop or in jle int3 out inc das call xrelease pop in lods mov pop pop (bad) je icebp mov or (bad) cmp imul mov push mov test push imull xor int jo (bad) clc sub (bad) imul fstl adc loope cmp sbb jp scas xorb sub dec mov jb jns inc mov outsl orl enter outsb xchg mov inc push lock mov cmp adc cmp fldenv lcall push pop jg xchg xor cmp lret loop cmp sbb insl ja test flds and dec or mov mov call rcrb sub dec inc fdivs pop subb addl cwtl addr16 mov dec stos pop mov cmp xchg mov hlt add roll (bad) shl pop xchg addb and or sub jmp and ljmp test add outsb xlat sub xorl dec mov rorb addr16 nop mov add xorb repz pop enter push insb mov pop sbb cmp mov cmpl push mov ret dec jecxz iret fs xorb sub ja std xchg pop mov pop lcall sub fcoms jle cwtl and test xor mov sbb nop loop aad imul push mov in add (bad) or out sbb nop mov lods sub mov push sbb jb mov add outsb fcoml lods (bad) jmp loopne or sub cmp ffree cmp test inc add mov ret int3 sbb xlat cli adcb enter mov (bad) mov incb push or fsubl adc ret lods (bad) adc push and add icebp push pop push pop jle push mov adc ret pop loopne aas (bad) fild inc call scas push xor push cmpsl es loopne test sbb ljmp xor xor adc push add adc mov stc jns cmp repz dec pop ret (bad) jns repz cwtl stos orps clc sbb jmp movsb xor pop lds test inc std or jle mov outsl (bad) mov loope xor std inc xchg jnp jecxz mov jbe lcall pop cmpl xor cmp out out push mov (bad) mov nop shrb cltd push mov pop cmp mov sub push popf clc jne (bad) out mov add test dec (bad) dec sub es cmc ret xchg add scas jp lret jp incb push mov and add movsl mov mov mov test push aaa (bad) fadd add sub insl nop jmp xchg xor inc aam cs ret add pushf xrelease outsl stc mov pop inc adc (bad) push pop dec pop xchg mov mov inc jl test add sbbb ret insl test call pop sbb (bad) ljmp inc or jmp dec divl ds xchg adcb push sbb sbb mov dec subb pop sbb fwait mov fcomps flds daa popf dec bound pushf aas cmp inc sub into test ds xchg pop (bad) (bad) xchg push daa or imul add test cmp push fstpt inc mov sbb mov cmp ret test inc push mov outsb int3 xchg push dec xchg popa xor adc and cmp iret (bad) mov xchg arpl lock mov mov in pop js lock or bound and jge test stos sbb xchg cmp push lea pop sub lds enter inc jg fcmovnu sub inc pushf xchg sahf xchg popa xor mov jb test push mov push add or clc cld add xchg cmpl es mov fwait (bad) sti pusha xchg movsb xchg stos sbbb pop (bad) pop out orb inc je mov shlb xor and cwtl sar and sar scas repnz in or test rolb (bad) lock xor pop ret mov iret or push (bad) fcmove sarb outsl int3 mov lahf aaa mov fisttp jmp fmuls mov insb cwtl and loop and xor xor ret lret mov out jbe cmp or push push sti jp ret (bad) add sti gs mov hlt xor xchg iret aam sbb xchg add xchg pop jecxz add dec call arpl aas pop lahf clc popl iret cli cmp push xor call inc cmp sub lods lock popf jae mov inc fistp cmp mov jae ljmp adc jbe mov subb inc (bad) lret mov inc mov mov movsl cwtl in pushf sarb inc inc addl test mov daa fcoml xlat mov pop in lods sbb cld rcl les test hlt idivl jle sub dec lods jns (bad) js shl (bad) sarl nop iret inc inc nop jae loopne add jo jle cmp enter xchg hlt (bad) mov xchg hlt inc stos dec test popf cli lret sub rcrl jge imul leave movsl pop sub pop std sbb lahf inc rcl inc imul sbbl cmp (bad) cmp aaa mov or cmpsb add out js movsl and cmp dec adc iret pop jge cltd mov sub xchg pop mov pop inc iret xchg addb test xchg add inc (bad) mov cmc aas aas sub add sub ljmp mov mov inc push aaa dec mov and xor add flds mov (bad) pop das sbb mov shrb add jb mov inc jns jns ret inc and (bad) loope xor inc push add sub pop testl in dec stc loopne cld mov cmpsb test daa or in mov mov push imul out pusha scas fcoms std inc gs fcomps xchg (bad) aas push sbb test and jle (bad) jae xchg nop test popa and push into sub sub mov mov mov bound int and je mov xorb out cmpb push mov xorb (bad) shlb adc lock bnd imul adcb cmp les push xchg cltd fs in jae sbbb ds mov adc fildll clc test lret push ja sti xor pusha test mov add push cmpsl aaa nop into push bound or add mov sub push ret aaa add jae mov rcrb add add sbb loop push mov (bad) or lret in sbb jp adc pop leave sahf jl dec cmp xchg xchg adc inc xchg test adc add inc pop mov jb jmp cwtl scas dec pop jae or push dec (bad) out test loope icebp into add aam and mov adc incb popa cmpb or fmuls xchg or sbb idivl jecxz jge aaa push movsb mov sbbb xor jae nop xchg imul fucomp adc or fcoms xor push jbe push test jmp cmp andb out jmp jno sbb xor and cmp lahf push mov cmpsl ret sub mov mov inc mov test sbb fstps dec clc (bad) mov cmc dec add fcoms out and ss xchg mov outsl cmp xor fadd test dec cwtl push xlat jg int3 add (bad) sbb cmp (bad) lcall mov inc push (bad) imul icebp jp inc push cmpsb jle add add cli sbb dec mov js jb ret decb pop fdivr inc jg (bad) ret adc fs daa pushf lods cli jle stc (bad) cltd cmc into testb dec lea outsb in clc std into dec dec and shrb mov push lock test jnp pop or (bad) rep push jl loop cli push subl sub dec sub arpl ror movsl mov add fnstsw mov push bound nop or jbe jg inc call fwait negl xchg popa mov movw in jl jle fsubl shlb movsl cltd vpaddd iret scas adc lret xor and sub out add int rclb xorb ret pop mov xor lods adc rcrb int3 dec pusha popw not push and loop call jl mov iret clc imul jbe sub fdivrl pop mov push jmp loop adc call (bad) or jle pop push imul inc push jge push cs adc adc test out cwtl and pusha insb (bad) mov and imul insb inc sub shlb insl add jge jae (bad) lretw inc sub inc pop ret ret or adc inc out int3 xchg clc (bad) js add adcl mov or imul xchg mov dec mov (bad) cmc push pop mov mov jle jg iret (bad) mov fcomip pop mov cmp dec (bad) ljmp aaa es mov shrl movsl aaa xor cmp mov sub je (bad) lret sbbl adc jg xchg clc in scas add fistpl sub mov xor mov mov xchg push adc scas in call mov mov rcl cwtl dec jl in out js or mov mov fnop loopne mov sub jns sbb sub (bad) pop adc dec push insl mov mov inc cmc jae jbe in add sub push mov aam add or imul (bad) fsubrl and jno adc xchg mov outsl add push xchg xchg shlb jae inc test mov cmp cmpsl (bad) cwtl out outsb mov addb sub mov jmp addr16 adc add sub in sbb xchg out or cmpl outsb inc dec sbb xchg mov std or mov jle or sahf gs add cli inc adc addb xchg cltd inc or lods pop fcomps mov and (bad) mov mov test stos outsb push fdivrs sub lock jp xchg arpl inc addb xchg gs fbld outsb dec adc ja jbe imul inc popf adcb xor cmpb pop mov adc out mov hlt jbe js mov sub subb cltd popa shll int3 orb das int dec xchg repnz vpsubsw inc sbb jne inc or push pop or faddl mov and add test shrl push adc pop push mov fnstsw adc jnp es sub or insl inc ret mov clc test sbb adcb bound push pop xorb int3 nop dec mov adc shl jl into jb xorl xorb sub negl (bad) mov xchg mov xchg nop push or pop xlat sbb gs mov sbbb subb (bad) in jnp adc xchg push into mov jns jne xlat int pop push ja popf xor push (bad) jecxz in sub pop and jb call push fiaddl add adcb sti cmpsb push pop mov mov sbb mov imul frstor shlb in cwtl xor mov sub mov sub inc or mov fcom mov jp stc push push xchg jne mov repz mov lock (bad) cld cs pop insl fildl inc (bad) cs addr16 (bad) movsl add (bad) xchg int3 sub ret cmp push popa je (bad) outsb or inc subl push push bndmov test cmpsl pop out js das sub push mov icebp gs scas nop ret adcb inc mov popa jp imul xor flds out test pop adc cltd and repz mov lea sub pop popf adc les mov mov cmpsb pop xchg orb iret vprotw movl push fdivrs ret nop lds and subb cwtl cld (bad) jb (bad) cmc andb jne xchg es pop xor cwtl mov mov sbb mov inc mov xchg sbb je outsb shrb clc addb push pop lds mov cmpsl and push fiadd mov cmp out pop mov jmp adc lret sub dec inc mov jmp (bad) enter cltd jbe pop push push xchg jne popf addr16 add push xchg (bad) mov dec out clc dec (bad) jne js cld push or iret jge call xor inc mov sarb mov xchg and les pop inc xchg subb xchg insb std mov rolb push test inc pop push or jb dec adc cs mov xchg sbb fiadd sub aad daa sub pushf pop (bad) push jne out mov pop outsb mov mov or notb push mov mov lcall hlt mov (bad) or movsb sub aaa cmp stc pop das sub adcb pop pop bound pop mov pushf jns add add fidivr mov and fdivrs xchg pop pop popf xor inc inc mov mov cmp arpl in or jp pop or subb test mov jmp addb sbb sarl jecxz dec adcb jg mov cmp lods mov cld mov je (bad) stos lcall test inc xchg (bad) nop (bad) rorb movsb fadd sbb test test mov cli cmpsb pop mov inc das sbb mov cmpsb (bad) scas jb pop jp movsl ficom clc adc cwtl inc push cltd cli movsb aad jp dec pushf cmp push push cmpsl in push cmp ja out pop nop cwtl add xchg push add jl cmc sub enter cmp nop imulb and pop in xor cmpsl push popf call inc push mov loopne jl xchg out mov dec mov jns test ds cmc orl mov sub inc mov test fsubp inc dec in daa insl testb inc xchg in js sub dec arpl xchg inc add mov sbb cmpb loop or leave fdivl scas es adc jns add sub outsl movhps fldl adc cmpb testb pop popf andb (bad) ja das test cmpb ret lea imul sub xchg outsl sbb orb push rolb fnstenv (bad) fstl jg jmp pusha fwait jl push mov and xchg loopne andb mov (bad) rolb sub pop fisttp data16 or xorb xor addl popf cmp aam (bad) adc jmp cmp aaa into loopne cmp cmpb mov ja clc test xchg popa add sbb mov imul fild xchg inc or and test lods cmp xchg cmc arpl fadds mov ds jge mov pop xor movsb adc jno pop mov mov test xor xor or fildl aaa mov (bad) mov sahf lds test (bad) ja lea mov loope enter ds push mov movsl push mov clc and sub repnz int mov inc ss jne repnz pusha jg inc sub imul mov out enter pop pop push cmpsb imul xchg mov inc add sbb dec addr16 xor hlt jo cli lret and testl pop mov xchg pop sub js jmp lods or andb inc pop mov test clc fldenv mov push sbb xorl cmpsl test stos pop xchg mov xchg lahf cmp addb pop sbb jg inc dec or lods push jno test into out cwtl sbb inc inc jno lock fcmovu hlt andb sub inc push dec and imul push cwtl xchg scas jb push movsb mov mov jo cmpsb clc fisttp push cmp sti insb jge push or outsb subb cs inc mov cmp jae into addl std cwtl lods dec rcr or cmp and inc daa fucom mull and mov mov subb sbb fadds test addr16 les in neg mov rorl lcall mov sub push inc (bad) add cs fcmovnbe or adc or and call ret int cmp inc cmc je and pushf rcrb and fdivs or cmp push movsb testl ljmp or adcb xor mov mov jle dec mov add fldenv lahf cmc (bad) aas je ss stc subb jne daa adc or movsl pop test sbb sti test adc cwtl in mov test clc les cld ret sbbb cmp icebp jp sbbb mov pop sbbb cmpb pop mov pop and mov (bad) jp xchg cwtl xchg lahf shll scas or pusha stc addl fmuls imul xbegin mov xor xchg jns jl pusha add insb pop scas (bad) pop (bad) (bad) fmull shl or leave mov fnstcw sub mov ds push arpl pop out push fs imul loopne push enter shrb xor push push xchg mov push stos stc arpl adcl (bad) (bad) mov mov fcmovb dec jl loopne rolb mov icebp popf (bad) cmc (bad) scas addr16 test daa pop stos mov mov les push rolb aaa ds ss xchg imul nop iret xchg jmp xor fucomip movb enter loope hlt cmpsl daa xchg lds (bad) cld and mov js fcompl data16 call fld leave sahf shlb cmpsl in nop js fidivl xor test sub sub pop and pusha (bad) dec push ret test js dec (bad) dec movb add rol push nop test stos jno outsl jle pop bnd test iret cld fidiv or push outsl push jb push cli push push hlt addr16 xchg lods push imul (bad) lods stos nop mov stos pop aad test sub jbe sbb mov pop xor adc add lcall sbb subl jb repnz mov movsl add in xchg iret push movsl nop aaa stos subl jbe pop in popa outsl int rcrl jge push loopne adc mov sub jae mov es xlat out ffree gs and cmpsl xchg inc enter (bad) cmp inc pusha xlat sub mov sub pop enter xor mov bound add jmp shrl hlt orb lret push xchg popl lea test push addr16 aam xchg imul push push xorb andl popf addb jae jne xchg popa inc lret mov mov leave cmp jecxz cmpsl or add shrb adc dec clc mov xor subb fild hlt imul pop mov mov inc mov nop cld mov add cwtl push arpl loope push inc pmulhw incb add sbb jns scas push nop rorl jo movsb in adc sub fstp pop scas dec (bad) lahf addb jp fnstenv cmp adcb repnz mov sbb test xlat add pop push ja push cwtl loopne insb push imul pop orb decl mov mov push in and addb lock xlat mov addl add push adc ret (bad) sti pop aas (bad) and add xor add push notb iret or rorb sub xchg fwait movsb mov (bad) dec addl adcb inc sbb es aas inc test insl sbb inc mov xchg scas fstps js xor loopne lods xor push dec mov sbb jcxz mov xchg fstl pop mov xlat imul int3 sub repz cmp pop xor pusha cmp xchg nop sbb (bad) dec aad notb dec fisubrl jae mov add jl xor leave scas ret xchg pop fld mov mov mov test cltd lahf cmp out insb lock mov imul or adc adc in shrl or add nop subl rorb mov jae dec (bad) push int3 xor jg and int3 cwtl push xor addr16 pushf movsl adc in icebp add mov sbb movsb xlat mov int lgs ret stos xor data16 push sub pop sbbb insb enter sbbb adcb pop mov mov lret idivl cmp rcrl sbb daa scas stc mov or cmp cs scas sbb push sub ret xchg data16 jecxz movsl xor insb and xchg loop adc ret mov fadds adcb lcall xchg in icebp or orl xchg sbb (bad) andb sub mov pop dec mov je add push sbb jne sbb ljmp test jp aas (bad) mov cmpb pop inc adc push ljmp xchg insl (bad) xchg pop mov pop mov sbb repz adcb icebp add add mov orl sti es je sbbl pop jg jae fmull xorl and popa std dec test pop pop mov orl adc xchg or pop fistl dec push lods andb jl shrl (bad) fsubs aas ds xchg jg cmc mov sbb nop sub aas xorb aaa mov lret xor clc lock (bad) popa push sbbb repz clc lock out xor jg inc and (bad) (bad) pop sbb mov and inc mov sbbb hlt ret in pop jg xor adcb daa jnp pop data16 movsl into es inc ret jae push gs ret xchg mov sbb jnp addr16 cwtl push cmc fwait (bad) imul push xchg arpl fwait mov (bad) jae inc (bad) es xchg dec test lods sarb mov jne or pop (bad) xchg xor cwtl scas xor rcll scas xchg sbb lds mov add xorb test aas push cmp lods adc cmp icebp or xor aad test test pop jae xchg sbb test insl pop in sub jp xlat out test xor std and (bad) stos mov jo lcall push sahf rorb das and mov mov popf push xchg xchg outsb ret subb xchg into xchg subb arpl orb dec mov jns lock lock lock xchg xchg cmp add rorl jnp push jecxz pop movsb div mov bound mov lret inc mov mov mov int and addr16 add andl lods mov fs xor test inc ret loop xchg push add bound fisttpl or mov outsb test stos rcl add test or inc js (bad) movl mov sbb jo inc mov mov xchg push jmp test sub jae xchg push mov sub xchg pusha jb in jle sar and cld arpl enter sbb pop adc add incl jle ss inc xchg leave enter ja xchg jne ret enter inc outsb ret lock cltd scas push lea int inc mov lret cmpl mov ja loop adc inc jl mov movsb cmp dec add dec mov push call insl jo outsb or (bad) mov jg add pop lahf addb and aad cwtl sub out (bad) dec cmpsb fdivrl in repnz iret xchg insb nop sbb mov push and ds test (bad) xorl aam inc (bad) scas pop ret xchg andb jle (bad) lods (bad) test cmpsl or cmp mov mov outsl nop pop (bad) mov jg sub cmp cwtl dec scas add fucomi fcmovnb adc outsb jbe outsl test imul enter loop bound pop add fisub mov fsubrs cli sub test iret clc lds sub and sbb jecxz push rol outsl out js cwtl mov adc dec daa pop (bad) or inc push in adc aas push fcomip sbb sub cli xor (bad) in sbb sarl lret iret (bad) mov cld mov cmp loop enter sbb cmp jle int3 test or (bad) sbb cwtl pop (bad) xor nop nop and inc mov mov cmp shrl pushf test pusha fdivrl addl inc and mov (bad) jae les jbe pop mov cli fs cwtl pop rorl clc or jle das (bad) ror (bad) push aam mov mov pop xor insl sbb int3 inc inc inc push push cli pushf push cmp xchg cwtl adc int3 xchg push data16 sbb pushf gs sbb cli xchg stos mov push pop in iret inc stos pop icebp cmp mov das ret fcoml iret mov add mov push pusha pop jmp nop sub lds lret add int3 and test (bad) mov (bad) jle inc mov mov ret pushl xor adc cli stos (bad) push shrb sahf xchg mov ljmp add xor xor sub scas (bad) mov or in push and xlat test add cmpb xchg fnstenv movl test cwtl cli mov adc outsl push sub cwtl (bad) mov push jbe insl mov mov mov jmp xlat in or out rol inc adc aad enter sahf and negb pop sbb xlat loop jecxz mov cmc jae mov lret sub inc sbb push mov mov lods fwait jp scas addb or xor jmp push stos dec cmp leave test lcall jnp xor lret jo push cmp fsubp pop fbld test xchg cwtl fisubl adcb or jns scas lret mov ljmp jmp cmp push movsl scas nop insb es div into loope jmp cmpb (bad) sbb cwtl mov fdivs test dec xlat and and aaa cmpsb mov lock add icebp aad jg je into enter inc inc subb mov test inc mov pop cmpsl icebp movsl icebp popa or ret xchg loope out fmuls loop mov cmc cwtl roll or insb inc pop jns xchg mov pop xchg clc je jae andb in repnz mov and clc adc sub out nop popa hlt jl xchg cld cmpb push mov cmpl lock add inc and cmp push test sbbb pop (bad) add mov movsb pop scas in adc and mov pop loopne jno je xor mov and (bad) out ja popf addr16 mov fiaddl sub pop data16 outsl adcb jnp test jecxz outsb mov mov xchg sbbb popa xchg cmpb cmpsl or mov test aam pushf into cmc mov in dec xchg add test mov inc add xchg movsl outsb xchg pop cmc add sbb in test lods enter (bad) sti mov jb stc inc mov (bad) or xchg aas mov and mov add xor xchg xor dec aam lods lods mov mov addr16 lock or clc pusha cmpsl push dec scas std cmp or mov cs jo jge (bad) pop daa jo xchg (bad) loope roll add fmul fs inc cs push loopne outsb inc (bad) adc aaa rclb iret int movsb jns push gs inc xor mov and adc cmp fnstsw xchg test cmp xchg sub data16 dec ficomp push pop aad mov lahf push cli mov cltd mov cmpl push fdivl jne xchg (bad) jb stos enter addr16 xchg cwtl jle push xchg int3 insb idiv aam roll xor fisttp test iret shr sub pop xchg rol push clc hlt fisubl inc subb popf daa fdivrl mov pop pop pushf in aad scas push sbb add sbb roll fdivs pop xorb push dec mov xchg cmp (bad) mov mov arpl (bad) mov gs add push inc mov sub imul jnp push adcb test cwtl in and inc push idivb xorb jne fiadd inc dec repnz or roll daa mov sbbb stos pop pop arpl pop enter cmp sbb fnsave jbe xor imul xchg mov and roll pop and lret or cmp add mov aad jp jnp dec cld mov inc jns popf pop out stos fadds mov mov pop push xlat dec push or outsb test aas (bad) mov leave cmp bound inc mov or push mov outsb add insl add orb xchg jb pop arpl ret xorb sbb xor incb adc pop jl out xor stc (bad) mov aad pop mov cmp popa clc pop hlt test mov test mov dec popf pop loope cmp (bad) fwait xorb cmpsl mov push test lcall mov xorb mov push (bad) cmp push aaa fs or mov cmc mov cmp sub in lcall ret push adc test xor loopne and mov xor push ljmp jle xchg insl loopne pop or xchg hlt adcb iret and lret xchg pop cwtl pop mov or jb xor add (bad) or adc rcll (bad) jmp mov fistp testl test outsb in stos insb dec cwtl inc lcall push insb pop int3 std xchg in jbe mov clc sti mov outsb pop fwait sub orl mov adcb cmpsl js adc daa addb mov scas leave shrb mov (bad) addr16 incl pop jmp lea int3 sub push (bad) lods addb push fs adc movl cmp imul sbb out shl or addb mov flds icebp sti cs pop movsb jb test inc mov sub and fsubrs lret in and fcoml dec dec sbb jo mov inc xchg pop out mov call subl adc dec or sub pop cwtl and cld sub xchg (bad) push adcb add jno xchg push mov push or mov je repz movsl sbbb dec add push sub jbe cmpsl loop push mov push nop lret (bad) cmpsl pop add int sbb addl test and cmp ds mov sbbb mov mov adc push mov cmc xor (bad) mov xor mov in xchg fs lods test (bad) jne (bad) xor push or aam and sahf pop mov sti (bad) jo fild subb nop cmpsb push fsubr adc (bad) cmpsl iret mov and mov mov jge mov loop mov fstps dec popa ss mov push test test sub sahf mov rcrb repnz mov pusha jmp int3 lahf inc add sub fcoms nop sub sbb insb mov roll gs pop jno iret mov rclb repnz mov jne (bad) mov mov push enter movsb out mov xchg movsl add adc xchg fucomip arpl add jge stos test js sbb dec cmc hlt xorl loop and inc mov imul cmpsl jp imul and push in out (bad) clc or addl add mov add pop xor sbb inc shrl jl cmpsl add call or sbb push add adc mov xorl push enter iret fwait loopne sbb sub (bad) lock xor dec mov cs lcall pop (bad) xchg mov addr16 adc xchg lds gs roll aaa jae (bad) in bound in add mov xorb push int3 repnz iret loop push jb cmp mov (bad) addr16 cli clc aad add dec aaa lret cwtl stc imul pop sub (bad) (bad) mov xchg in cmpb inc out test int mov mov jecxz mov imul or nop (bad) ljmp cltd push iret and sub pop lods cmp jnp or or clc orl mov jl dec addb imul xor add (bad) xlat test mov cmp in lds ss or arpl sti or enter test call pop cltd rcrb cmpsl dec mov repnz mov sahf xchg pushf subl les cmp xchg repnz mov xor dec (bad) aaa cmp xchg subl push sti and push ljmp dec xchg popa jmp pop xchg dec xchg mov cmpb cmp rolb xchg push push lea pushf mov adc mov int3 add inc cs sub loope mov pop sahf xor roll lea stos cmp ss sahf popa inc loope daa and push fidivr jne xor addb cmpsl mov cmp pop push push jge push sbbb add test xlat jb out xorb repnz loop xor adcb push lods xorb mov push or add in xchg call cwtl (bad) mov loop in mov sbb pop int stos or cwtl pop gs cmp jno push ja hlt add jmp sbb mov les push pop aas subb mov pop test daa sub pusha fiaddl xlat mov add xor mov mov jg mov mov divl out test mov cmp or jns mov mov popf je test mov pop lods rcll rorb or pop mov add sti das test mov or or rcrb movsl jae out popa pop fldl mov xorb leave les (bad) jno and aaa (bad) cs push dec jno cmp xchg jg lea in popa adcb xor subb movsl pushf pop push jo stos outsb and andb mov in clc mov subb cld mov stos call jnp push movsb cmp test and nop adc in je adc mov bound sub jge sub pop mov inc push push and cmp xchg nop push test xlat and (bad) ficompl nop push mov (bad) or out jb popf test push leave mov adc mov sbb (bad) es repz mov ficompl sub or xlat xchg std mov cmp pop cmp sbbb inc sbb cltd add ds icebp movsb fdivs jge inc data16 std or cmp cmc dec nop loopne iret mov movl addb fcoms imul inc inc cmp sbb popf jne or mov inc sub jle nop inc (bad) jle out push iret mov mov aad nop sub sahf sub ljmp inc sbb (bad) negl adc xor pop sbb cmp xor push pushf loope mov mov and xchg fistpll mov pop inc mov orb xchg mov mov add icebp mov cmp sbb enter cmp cmp cli sbb stc or iret andb (bad) fdivrs push cmpsb (bad) sahf sbb andb and jecxz notb jo xchg loopne cltd jg dec das adc stos sbb ds in or subb dec pop inc cmp cmp cwtl xchg lock in test sub cmpl test push pop dec lods pop orb orb sbb das orl out sti cmc or jmp mov repz (bad) (bad) xorl sbb test adc or cmpb call mov add fbld fcompl mov xchg jmp gs cld xorb pop js xor xor pushl adc insl popf mov lret cmp (bad) jecxz (bad) add popf push mov scas mov pop mov dec roll je insb sbb jbe xor (bad) sub pop or andl test js xchg add pusha (bad) int3 add out mov pop jl and push cmpsb add push xchg test hlt lea outsb enter sbb enter roll cltd add pop aam pop mov jp push test into mov add jl add xor std cmc subb mov sub addr16 push cmp lock cmc add and sbb je stc sub mov icebp movsl add mov xchg repnz jae,pt adc out orb imul out mov push add sbb jg cmp dec push ljmp pushf mov inc ja adc inc into imul jbe cltd movl sbb mov inc aam fdivl or rolb lret pop lcall popa ret sahf dec stos xor push test pushf jg xchg push pusha clc scas sbb sbb inc xor inc mov pop push andb fnstenv pop sbb xchg cmpl add loope xchg lock nop cmp scas sub mov mov pop cmp in and jb imul in xchg loope xor push test xchg sbb mov pop dec push lods add or in and aam hlt pop je dec cltd adc pop repz jmp dec jge mov nop add loop cmp fildll xchg je jb sub mov jnp mov pushf sub xchg iret jo popl stc cmpb adc pop add push es out cltd stos into (bad) push nop int3 (bad) pop std pop cmpsb xor or pop mov test subb lret mov out ds test imul jnp dec adcb xor push repnz xchg adc mov fadds xchg push lahf andb test mov lds and test (bad) fwait test mov lods loopne fnstsw sbbl push or jge test lock push cmc into xorb adc test cmp push pop loopne mov lods rorb add cmp imul cmpsl pusha add jnp es addb or cmpb loopne jae mov push push (bad) xchg out inc subb or addr16 lods lret add pop cmpsb mov dec loope jmp sbb hlt sbbb jle jns std xchg sbb mov mov and push mov push icebp or mov cld jp int mov aaa dec cmpsl add cli adc rcrb (bad) mov ja mov jbe lahf cmpl gs jae mov sbb jg lods iret aad add shlb lcall popa lret jnp push cmpsl repnz fcoms jmp ret xchg jmp lods iret xor fidivl imul ret scas xor dec or clc lcall in mov out mov xor out lock cmp inc xchg add ss jmp mov inc ret fcomps xchg cmp xchg pop (bad) xor test in (bad) and es mov inc lret shlb bound fcomps addr16 (bad) sahf enter ret mov movsb aad add in icebp and mov icebp push xchg ss xchg test cmpsl test (bad) lock les push ret test pop and pop mov jno int3 mov cmp loop in jne xchg ret xor xor js in jp add inc jns std sub or sahf fisubrl lret pop fwait and pop and std fisttp (bad) xchg push sub mov sbb or inc daa movsl rorb add arpl pop data16 mov (bad) jl pop loopne pop cld xor jp xchg xor mov inc jle js mov jge fsubl cmpsl jmp in mov mov sub sbb cmp mov inc and mov mov popf mov shlb inc push push sub fucom jbe int3 js pusha push ret mov imul sub xlat jnp cwtl repnz lods mov mov cli nop dec mov aad pop jo test rorl pushf add push les inc insl push push lock xlat sarl je aam cli or ret je mov jle cmc push nop (bad) int3 out mov popa push pop mov sub insl add insl and sub xchg dec xchg outsb or sbbb sbb push inc mov movsb mov rolb dec xchg icebp add subb (bad) xchg lcall lods test pop mov adcb out adc mov dec test cmp cli orl arpl add xor and sbb fwait outsb xchg sbb ljmp (bad) and xchg call stos adc inc in mov xchg subb dec shlb (bad) sub int or or xlat jp fwait fs mov mov lock push sub cmp loopne mov or dec loope jno xchg out (bad) adc test xor inc mov push and (bad) and add ds mov pop push andb xchg mov jge jle dec mov int3 clc cmp lahf jne jle xor cmpb sarb in (bad) push ljmp push sbb aad sub in test push add pop cmp aad mov dec sbb and fiaddl inc mov in ljmp outsb test mov mov xchg aas adcl cmp pop insb push mov and xlat cltd sub pop inc mov popa cmpl (bad) int3 rcl or pop aas mov test push das loop dec xchg xorl dec mov push or (bad) mov inc dec push pop dec and mov push sbb pushf iret ja cwtl lods push push sarb xchg nop pop insb or sbb push testl dec dec loope cmp pushf fs xchg or roll lret lret xlat add scas mov iret (bad) sub clc out sub call (bad) sub lods test and cmc mov pop in divl sarl fldt dec mov (bad) pop or cwtl push addb mov orb ja addb les rorb jnp push lahf test cmpb gs jb sub lea push pop andb xchg data16 lods push roll orb dec pop adc xlat mov jae pop fs mov subb push clc stc aaa add scas or std xchg incl ss dec xchg enter aas inc es sbb fs cli dec fwait jb mov mov pop pop ret clc lahf cbtw rcll jle cmp jmp adc or bound js roll lock out rolb xor push clc test cwtl cmp dec cs jg jno mov clc xchg push xchg fcmovb push cmp (bad) lahf test cmpsb dec int arpl jno sub loop xchg andb xor outsb jnp xchg xor adc mov adcb hlt jge pop mov scas arpl push cwtd and pop mov subb jecxz push ret insl fidiv xor ret xchg cltd aad aaa pop cmpsb inc ret repz outsl shrl insl rclb jns jno stc lock xor das sbb mov leave call and dec add stos xor repz xchg aaa add dec int3 movsb nop or and jmp mov (bad) ljmp mov (bad) orb inc and cmp aam sarb xchg pop cwtl inc mov pop lea subb (bad) xchg scas or xorb jb mov adc or and pop stos xchg scas fidivl fcomi inc cmpb cmpb das (bad) lock mov cmpb lea scas ss cmpb sbb xchg ficom push popa or mov in push iret std andb pop mov cltd rclb js xor pop test mov subb fs inc and and into jbe aam bnd scas adc and or les add dec int mov aad sbbb pop add clc mov jne and dec out lock and cli sti sahf test mov out lock add lea mov jns xchg insl fcoms scas mov ss orb mov push in mov xchg adc fisub test (bad) je pop mov out jp imull repnz add shrl fs mov (bad) aaa pop pushf cmpsb sahf iret enter sub test addb cmp mov orb mov icebp and test mov jne xchg xor cmpsl push pop lahf jmp andb loop adc mov in add mov fstp or xchg outsb ret aas or test jmp adc icebp lds jns popl pop into mov dec mov loop (bad) cmpb lret dec neg mov das sub sbb loope imul xor mov pushf adc dec mov pop xchg mov mov icebp and and sub adcb mov in pop cmpsl mov scas in adc insb sbb insl push mov mov fild xlat xchg mov fldl enter lds and cld sbbb pop clc xchg in sbb mov fcoms ljmp jge test and sti mov inc out leave mov int3 (bad) inc pop xorb adc adcb cs inc pop cld push xlat test cmp add cmp sbb add dec imul sub cwtl jae scas int3 loopne inc xor (bad) nop lret sub mov nop xchg push lcall subb stc xor popa mov xor adc xchg loope lcall mov pop dec xchg mov xchg aaa mov and push test jo xor mov or iret popf pop fcmovbe pop mov movsl scas subb ljmp out dec cmpl cmpsl out clc nop adc imul mov add cmpsl adc cmp subb bound jge dec mov repz je sbb out push in cmp or int mov test subb pop loope (bad) movsl cmp dec gs lcall inc int3 clc jae (bad) movsb fidivr xchg add add cmpsl inc or sub mov lock lahf insl sub jge pop pop decl mov or ja mov out mov jbe cmc nop jmp lret add subb je pop stos bound xorb sbb sbb orb nop (bad) mov push or ret mov inc cmpb adc mov fwait arpl sub push dec fdivrl int3 test sub mov inc stos in inc mov cwtl sbb daa fsubp fidivr (bad) sub loopne cmc xor in and add jnp push andb cmp or jmp ret nop jecxz pop pop mov aad or push (bad) aaa shrl lret sub jne fldl adcb or add mov faddl movb loope nop and push and lea dec dec andb inc fstl adc mov iret dec mov fnop xor and cmc mov jle iret dec orb inc in jae jle xchg inc js mov fnop jmp add dec and jle mov imul imul roll lea inc das push pop cltd sbb movsb dec jnp pop out fdivrs cld or sti xchg push mov cwtl mov out (bad) jno stc fwait fs lret mov lods in mov push stos je xchg xchg arpl ljmp insb test clc cli cmp xchg loopne mov mov icebp (bad) lock sub into sbb stc adc mov xchg push xchg cmp jae inc inc movsb mov jbe mov call sbb jns mov test popf push sub enter xor sub je sets enter or imul out inc sbbb cmp sti (bad) std mov ret jle inc jle push frstor push insb addb fisubrl clc lea jo jnp cmp xorl pop sub adcl inc mov daa mov push xor push fucomip bound call xor or ss jno sub inc pop sahf xor les inc mov pop fdivs sub jmp xchg outsl (bad) sub dec cmp rcll push jo xchg mov js addb lcall lret pop sbbb mov test cmpb nop cmp mov out mov icebp test scas push loopne push test (bad) cmp inc sti cmpsl xor mov or jge adc mov mov xchg sbb xor adc adc repnz sbb cld pop add lock jl ljmp mov dec andb in idivb or jb rcr andb cli call test adc pop jge cwtl sbb and or hlt jnp lods popf pop cmp roll mov sti add enter jl lcall mov jp mov mov mov mov shrl mov in leave das mov dec outsl xchg sbbb call dec mov jnp jp mov imul fwait imul in dec cmp lods cmpb push jl incl xor fmuls out mov arpl xorb fiaddl xchg jl scas mov jp push out orb (bad) cmpsl xchg cs dec jge addb jne add int3 adc test enter mov xor cmp pop fcomps sbb adcb mov outsl dec mov in sub in add addr16 orb push mov test jbe mov sub setbe test and add dec cmp addr16 (bad) js lods adcb adc loop push mov mov jecxz pop sbb sbbb inc jmp inc mov xchg fs lret sub mov add icebp clc dec scas xchg xor pop xchg (bad) jbe fldl adc mov loope lcall aad icebp push lods icebp test sub jbe gs jne (bad) xor jl xlat cmp mov fwait test sub push sbb mov andb lods cmp js jle sub addb xlat fstps mov (bad) out popf sub aam out and adc test clc into jo lods sbb xchg hlt jno or addb shr push roll mov mov mov mov cmc gs jno loopw cli dec cmp data16 fdivr xchg cltd cmp scas dec aam inc js rol repnz jl jns movsl lods leave xchg bound scas pop enter adc insl out sbb int (bad) inc and into or jmp add lea pop cwtl enter xchg popf incl mov push sbb or sbb loop adc mov xor push jnp dec nop adc icebp or sub ja pop jnp sbb nop popa inc test jne xor les (bad) inc or and push and pop inc mov (bad) jmp mov jns les orb jle repz ja notb fstps int and imul aas or out insl sbb das sub push gs xchg ror sarb (bad) fadd cmp fisubl out imul out mov call daa mov xchg data16 outsb xchg mov stc stos xor inc or dec test sub ljmp xor enter xor inc inc loope sbb mov das orl add popl jb fwait cmpsb and push (bad) jae mov dec pop ss leave js mov imull (bad) or xchg pop in imul jmp int jne inc mov repz pop scas push clc das lret xchg inc jl mov sbb sub lcall nop jno mov fist je adc in jge cmpsb xor or push in (bad) lods inc pop imul sub test inc xchg stos inc pusha icebp push xor push mov ljmp movsb jo mov pop push or gs cmpsb jl cmp mov sbb stc frstor push sub test cmp adc sahf pop dec fsubr jns inc (bad) lcall xchg mov inc jg jp ret bound rcr sbb pop jg mov push add nop mov lret dec daa repnz pop int3 push or pop sbb cmp lret jnp mov andl je cmp test outsb sahf aad fcoms jno jbe inc in fcoml mov mov and cmpsb mov mov fdivrl jmp stc data16 in (bad) dec and (bad) pop push inc dec dec (bad) pop sti popf insl in inc test ret test adc add xchg movl jl fdivs (bad) and scas sbb lock mov xchg fnop (bad) adc fiaddl movsb xor mov popf and xchg mov (bad) sbb std lds maxps in cmp add iret sarl addr16 adc inc jo fsubrl xchg shrl mov int enter mov mov mov nop (bad) iret cmp jg pop rolb fcompl fnstcw enter xor xor bound xchg or data16 sub rol dec in mov mov ds jnp sub xchg into call test test mov in or rcll adc inc adc and aam cmp push jb (bad) (bad) rorb mov or ret inc out pop sbbl cli push lret mov sahf mov or jmp mov inc cmp add cli push enter and loop pop xchg fsubp int pushf stc jge xchg test add and into push mov rorb push iret xchg sbbl or adc shll (bad) cmp push fldl mov mov mov insb andl cmp inc in adcb hlt inc mov leave das data16 daa mov jbe mov jne cmp fisttp leave sbb orb and jmp or xor lahf xor je jno (bad) jns fsubs sub lret sahf mov ljmp sbb test in jbe pop pop (bad) xor movaps imul icebp adc sti subb insl pop adc jne fbld jg std inc int3 inc inc cmp jle notb popa clc adc pop push xchg jns fmuls test inc es cmc lods loop lret fsubl adc push ds les inc and pop cmp cmc test das scas mov fldcw and ss adc sbbl clc pop ret xchg dec cmp cmc into mov fsubs lock mov test testl inc imulb out insl mov paddusb (bad) mov xchg orl cld bound mov pop push ret mov lods iret add push mov pop jnp iret mov pushf add pop push add mov clc mov (bad) rolb pushf mov or popf inc rcll nop jo (bad) imull and xchg ror ret loopne mov xchg mov mov loopne jecxz lock pop xchg sub insl lret je fidiv movsl rcll mov xor pop fild pop sbbl inc sbb scas dec aam fsubrl in (bad) shrl add aaa iret daa aad add lret jp test sub into and pop xchg jae mov loop in ja popa xor and xlat adc arpl jp xchg fsubr rcll pop and cmp (bad) jnp mov xchg ret jle mov adc dec loop sbb out inc dec imul mov xor dec cmp jbe sub js cmp fs scas test fdivrp sub pop add iret xchg add mov push mov stc andl lods adc (bad) ffree cwtl test lds incl iret jbe mov fmul gs xchg daa or adc mov pop dec mov addr16 stos test jnp add and add cwtl fstl scas jne test outsl cmpsb jae imul aam add jns shrb push xlat int3 jl sub jns std push test adc rorb fs add jnp enter call push xchg xchg aas fdiv stc out jne push (bad) cli inc std test out addr16 cmp sub lcall ret nop or nop call dec inc pop add bound sub enter stos jnp dec cmp loop mov pop mov stos jns subl outsb sarl mov mov imul sar mov cmp adc shl (bad) gs dec (bad) mov outsl xor sub add scas enter cmp sub ret jmp data16 loope nop xchg xchg jmp aas xchg add sbb (bad) lods jbe mov iret ja xchg xor ljmp int3 fcomp stos cwtl push in cmovbe or (bad) (bad) (bad) adc add dec cld jno jmp (bad) and fcoml fs sahf lahf dec cld push lods out testl xchg pop push fdivrs bound das repz icebp add neg push js imul ret jle (bad) pushf rcrb (bad) cld inc lods xchg (bad) inc mov or push cmp aas sub and int lcall pushf add cmp (bad) and movsl int in cwtl lods xchg sub enter sbb (bad) out pop mov mov or test lds xchg mov lods sbb cs push xchg cmpsl mov or (bad) orb xchg pop sti cmp jae (bad) bound pop xor or imul imul mov nop je adc shrb aas fcompl mov mov aad enter daa cmp mov jne xor dec loop fiadd xor pusha mov das lods push pop mov test mov adcb jb pop ficoml push add xor ds (bad) inc ljmp into bound cmp addl in or pop sbbb mov arpl or cmp sbb daa icebp adcb adc jmp jge dec ljmp xor sbb (bad) bound cmpsl ja out dec stos loop scas push or sbb mov cmp mov in cmp and fidivr jle fbld ficompl roll mov pop (bad) jb jno sbb jb icebp andb jmp mov loop ret cwtl xchg movsb and push xor pop mov push adc repz and push inc lret cmp std jl adc add dec andb lea out enter lds mov pushf push or sub fmuls xchg push js cmpb dec in or adc lea rcl push (bad) mov xchg subl (bad) loopne inc inc pop test or js inc test xchg dec and push mov pop cmpl push loope (bad) mov add (bad) push dec out iret jp xor xchg jbe mov (bad) dec mov mov push movsb pop test jge or ds scas dec xchg (bad) add adcl adc jge loop add lea pushf mov pop stc roll bound xchg sbb (bad) iret xor out lock hlt xor sbbl outsl movb fwait pop aaa arpl loop popa mov add cmpb into xor lret std xchg test neg (bad) sti out cmpb cltd data16 sbb pusha fadds shl test and ljmp or sub pop mov dec out or xor or nop pop test or test cmpsb pusha and mov mov mov nop and xor in xorl mov ja adc pop sbb cld add inc (bad) mov dec test add in xor jae pusha mov cmp das jmp divb mov push cwtl push lods xor lods orl loop (bad) cwtl addr16 sub mov xor orb xlat xchg xchg sub outsb js orb pushf out adcb or (bad) aaa mov mov xor fs xorb and mov mov shll enter and mov and sbb pop in cmpsl rcrb stc add ret adc sbb cmpb dec movsb push pop outsl cmp addr16 int js orb pusha lahf subb popa mov mov adc pop test lret jbe dec notl popa jmp cmc lds out lea cmp add adc mov call out (bad) mov loop int3 fidivl xchg add fwait arpl xorb xchg sbb pushf mov lea in arpl adcb cmpsl jecxz in jae mov and push inc das in cmpsb ror xor imul imul loope les push adc enter inc jl or jl mov and mov call pushf testl out das pop jo aas mov sbb sahf jnp test enter lods test ret sbb or nop ret icebp sbbb xor mov (bad) mov dec and sub ja push mov cmp stos xchg mov jae fmuls hlt fdivs lods add add xchg outsb sahf jnp stos push fild aaa (bad) rcll dec dec mov test imul mov nop imul xchg subl aam push pop or cmp cltd (bad) and je dec cld pop mov xor adc ljmp jnp int3 push aas (bad) pop movsl subb jle (bad) cwtl pop pop adcb sar or dec add jle and or gs push (bad) dec shr testl imul sahf nop pop xchg popa out or adc pop or xor jne mov outsl xor cmp inc xchg fwait clc jo mov add arpl xchg sub xchg jo pop fcom and add xchg mov push xchg jge andb aam adc or movl orb jns cmp je jb ljmp nop test xchg xchg lret enter inc daa aas pop add inc mov or mov pop xorb jno adc cwtl pop sub repz test add daa addr16 jno scas jo xchg inc lret das push dec add add sub je fstps int add test popa imul lea sub or push push cwtl dec repz outsb dec mov adcb push adcb adc sub int3 stc lds pop adc pop mov mov pop lcall dec scas out js and fs and push test fcomps faddp test xor pop pushf pop movsb xchg ficom pop mov or mov or clc (bad) pop sahf xchg xor mov test lods dec in imul addr16 adc arpl sbb cs xchg mov mov add inc mov nop test (bad) stc addl aas jmp mov xorb icebp or push xor pop lods and fs arpl xor sbb fwait test jnp arpl add cmp pop stc inc mov in mov cmp or xor pop adcl addb push xchg fistpll jae push jmp test cmpsl pop jp sub (bad) pop and and pop loope jmp mov addr16 ficomp test movsb mov push sub outsb imulb cltd gs aaa stos imul popf test test ds fwait sbb xor ja mov dec mov add cmp outsl lea fisub enter repz sbb add subb jmp outsl push movsl scas cmpb sbb sbbb and lret dec jmp pop pop xchg mov mov jecxz insl cmc xchg and cmpsl pop (bad) in std icebp pop or jmp mov sub insl or mov add dec inc (bad) cli or jb jle mov inc and enter pusha sub cmp (bad) jbe (bad) xor loope popa std bound add adcl inc mov mov add xchg cmp cltd rcl mov sub imul fldl mov fs xchg mov xlat mov dec push fmuls ljmp mov scas popa xchg push mov arpl std mov stos dec cwtl lahf or jbe negl and xchg mov loop sti xor jl nop bound sbb xlat (bad) sbbb ret ds insl xchg mov mov into bound mov jae lds sub mov enter inc dec sarl jmp mov mov (bad) or pcmpeqb push mov scas into jb xchg seta mov pop sbb mov orb push pop jge cwtl call test jns (bad) or xchg int3 jae maskmovq idivl push gs dec or fsubs sub nop push into aaa cmp gs mov xor ljmp mov test inc mov dec jmp xchg popa mov add scas push or (bad) movsl mov sti xchg xor (bad) addb add outsb aas mov xchg mov jno jno inc test xchg jb adc fnstcw sbb inc lcall mov (bad) mov test data16 mov sti sbb lds cmc pop cmp ljmp les icebp std jg icebp sub cli sub cmp dec fsub cmpsl dec subb mov movsl cs nop popa dec scas cwtl dec mov pop jl repnz sbb lahf push (bad) and pop repnz aad sub and loope cmp inc add adc mov xor movq cmp adcb xchg jbe xchg sahf jmp sub inc xor insb je dec test dec jecxz addr16 stc clc or xor test loop xchg aad cmpsb fcmovu popf loop ret sbbb inc mov cs push sub cltd dec andb xchg cmp gs movsl pop out test and in sub js clc pushl mov fsubs jmp nop outsl movsl lock test pop inc pushf lods clc icebp stos iret aas mov sub (bad) fisttpll sbb or jle lea cmpb push jp cltd je add push mov scas fsubrs and mov inc mov push mov or mov xchg aad loope insl repz int3 out push sbb icebp or cmp xor aad mov cwtl and fs xchg loop pop (bad) jno lds xorb movsb pushf mov mov jno mov mov jo mov mov cmpsl xchg (bad) fcomps jmp mov stc addr16 sub jnp,pt adc sbb fildl push dec dec adc (bad) xchg pop fsubrs mov mov rolb and push enter mov (bad) and cmp lret push lds sub jae or cwtl andb fnstsw and gs icebp movsb incb rolb repnz xor sbbb test xor sbb jle ss repz or sub mov das jnp dec neg sub das enter inc xchg adc leave shr pop pop je,pt xchg cmp ljmp outsl jmp or imul add add pop push add add pop js movsb cmpl nop and xchg (bad) repz std clc scas sub stos fwait dec xchg lock fstl or in pop shrl mov add (bad) shlb xchg pushf fistp xorb int3 mov mov rorl and adc push ss lods cmpsb call fisubrl (bad) mov enter out sub gs sbb fs ds inc sub mov mov inc repz add inc xor rcll mov dec push jb (bad) into pop jl pop lock clc mov aas push test sub lock ret inc mov std (bad) fisttpl push ret jbe (bad) jmp inc mov loop stos and (bad) or mov sub mov dec inc repz iret sahf add xchg pop add test add aam add int in (bad) fiaddl sbb add cli pusha test push fcoms loopne (bad) iret push jae fmuls mov aaa push adc push mov popf std sbbb mov aad xlat cs pop push scas adcb outsl adc les jl cmp popa lret test mov nop xor cmp insb add test mov (bad) fdivr nop and add dec out or rcrl sub inc or int pop mov test scas dec out mov jmp testl into mov sbb push xchg jle imul mov outsl (bad) mov adc add adcb cmp adc sub mov enter es add jle stc test jecxz adc addb orl fbld adc ror scas push (bad) ss cmpb fcmovb testb insb nop xchg xor mov in sub flds in sbbb outsl or add and (bad) cmc dec mov inc call mov repnz xor push ja mov mov js adcb mov inc dec mov mov push push test adc lcall hlt nopl add mov popf xchg fmul daa roll xchg mov nop popa dec in cwtl adc sub pop stc cltd clc sub jo or in adc pusha mov dec ljmp rolb into sub ss or cmp sub xlat push mov lret or and scas dec push push std lods aaa stos in dec iret sub xchg dec mov inc sub subb mov jmp mov fldcw test and popl ja mov jne xorb mov pop and decb jge jbe mov dec dec lods addb ret dec fiaddl dec xor test xor lea add subb dec rcrl sub aam mov pop mov inc xchg jl popf gs enter cmp push cs adc (bad) mov (bad) cmc flds hlt test popa and cmp test or test jb push clc or out in xchg add (bad) fdivs sub xchg iret and mov push enter lcall addr16 lods movsl and mov sahf fiaddl rcrl hlt mov into shll jp xchg lcall cmpsb sbb aam fadds dec jo xchg cwtl and push adc test sub push pop dec mov cmpb leave and mov inc dec std sbb mov dec movsl push fidiv mov dec cmpsb xchg jno pop xchg (bad) aas cmp (bad) shlb test xor aas mov (bad) fsubs jne pop test outsl addb lret enter and mov popf pop dec inc (bad) xchg sbb orb push roll ret mov cmp repnz pop mov fisub sub decb push xor fwait pop pop adc enter mov loope or sub aaa (bad) mov mov jae addb out dec stos les pop ret das mov push mov lcall push cmc jle mov xor cmp sbb je mov std movsb mov sub sub xchg mov adc ret jl pop repnz fwait pop cmp mov adc dec xor mov mov xlat loope pop xor lock or aas xor mov xchg add clc xchg fstpt clc out push xchg mov add xchg or cmc push add cwtl push std scas push push mov adc fimull lret add mov cltd cmc mov popa xor cmp nop loop xchg data16 mov adc push subb xchg fadds inc pop jae test popf adc jl (bad) in cmp push ss sub and adc jmp shrb sub dec test mov mov (bad) or pop inc popf jo out pop test mov xchg add mov inc xorb xchg pushf cmp repz lock adcb jno or sti mov xor jb add sbb xor std (bad) insb das rcrl adc loope fwait repnz sub and loopne jmp (bad) faddl std inc sbbb cmpsb xchg cmp lods lock loope add out addb cwtl xchg push test mov cmpsl pop fmuls stc cmc sbb movsb nop gs jmp push cmpl mov mov sbb dec cmpsb mov cltd addl add jp pushf pop cmp lods addl cli jae loopne (bad) pop xor xchg mov orb (bad) jo bnd mov adc pop and test xor es mov das mov lea xchg fwait repnz orl dec xchg dec cmpb cld jg int adc adc mov xchg (bad) rcr ja mov das imul cld (bad) es in hlt jge lret push stos test (bad) insb subb mov push loop sub inc mov popa sbb hlt jp stos sub mov jmp iret pop rcrl sub inc mov dec loope mov nop test push adc jb xchg push mov ret add push jle lods pop jge repnz mov js (bad) cltd mov jp pop xchg movsl pop mov sbb jge test adc adc andb lods test sahf and js loopne xor add cmpsb call out mov outsl movsl jle jno pop insb test add mov jo push rcll and mov jns out mov pushf and dec inc roll adc std mov mov inc jae aam loopne pusha xchg pop xor push enter divl imul andl ds push adc pop xchg jne xor scas mov sub jmp add fcoml and xchg call stc pusha bound (bad) xrelease push subb repnz fstps adcb mov push pop lret sahf lds fiaddl push cwtl push ss insb rorl pop out adcb jb imul out sub iret jp scas ret clc fdivrl xor lock test jo daa adc inc and fcoms jns mov sub cld pop imul jne dec and je cmp into rolb add or xor (bad) scas mov nop xchg push and xor mov outsb je mov sti push add and out idivb mov std pusha xor cmpb arpl nop bound orl sub es and push pop inc jbe (bad) subb ret out sbb mov lods outsb mov inc dec popa andb mov mov cmp ret pop mov test adc jo sbb loopne xor adc or cmp mov dec repnz xchg xor lods aas pop scas roll cmpb xor push outsb xchg data16 in jns cmp test sub pop pop lcall stos push lods xor lock ja icebp inc mov repnz fsubrs in mov jno stc aaa xchg int in adc roll test arpl dec dec sbbb pop scas sbb sub cmpsb adc pop bound (bad) loope int loopne mov dec nop cltd in das cld cmp and mov mov (bad) mov clc fldenv psubsb inc cltd test es lods out pop popf fbld push cld clc in jecxz xorb xor cmpsl mov test sub mov cs push lock test fstpt scas jne mov inc mov cmpsb fwait out adc mov int mov adcb push ljmp add jecxz xchg aas orb xor cwtl pop add pop sbb push push test (bad) jmp sti imul outsl xchg inc mov sub lahf dec mov insl inc or push out xor subl inc aad xor int sub xor and add roll ret fadds int pop lret jnp mov loope iret in std (bad) adc outsb adc pop sbbl hlt flds dec inc xor add pushf aad loopew test mov clc cld ds mov inc sbb out fistl mov aaa lret jbe mov or mov push mov cs pop dec test dec adc out jle pop ret sbb jmp pop sub jmp xor outsl push cmp (bad) and cld (bad) stc iret fildl pop pop adc int dec pop ficompl inc fsub jle aam mov mov icebp aad shll jle jp rcrb scas enter aas (bad) out rorb ljmp gs scas cwtl lods into cmp lock sub mov idivl xlat jecxz addb iret sbb faddp call (bad) jmp cmp mov test add aad test inc loope mov idivb xchg stos out xor push mov xchg movsl jo nop test aam cmc mov mov dec stc in test cwtl pop jns xor (bad) iret popf xchg and mov fadd aad sub fisubl sbbl sbbl push mov in add sbb mov cmp push mov std cmp xorl sub or mov or jmp mov pop (bad) mov push mov icebp jbe (bad) sbb cmp adc adc add and xchg jno aaa in dec ror dec jge pop pop mov jmp rcll mov insl je stos iret and jno stos js std movsl xchg (bad) adc xchg (bad) rorb adc add jl push insb addl cmp repz sbb xchg daa push adc (bad) xchg mov and and add mov fcomps subb sbb gs das jbe test jecxz stc arpl daa or (bad) imul rorb bsf inc push nop ss orb jb mov sti addb lret adcb xchg imul pop cmp lahf dec fsubl fistpl and sbb lcall xor push shrb and cmp stos push inc jb fimul into ss dec sub int pop xchg inc mov mov mov jle push dec dec loope or mov sbb adc add xchg (bad) sar das xlat dec add daa adc test das adcl pop push xlat les xchg push daa sahf nop ret clc hlt add clc std add mov or xor dec xchg mov sub scas ja js int3 scas cmpl pushf out xor pop (bad) iret dec iret sub fcmovnb test push mov rcll dec lea mov outsl outsb (bad) addr16 clc daa mov mov ss (bad) scas xor div insb pusha outsb or push sarb inc lahf jp sbb lret out xor ret pop stc sub adc (bad) cltd cmp movsb std fistpl xor mov out add dec xchg and mov xchg inc cli int mov aam sbb inc pop aad pop xor pop and mov add mulb sti or jle leave imul pusha or push out in gs jmp loopne sti push arpl (bad) daa jo test adc dec xor (bad) mov jb pop xchg loope jae lods push mov test xor test mov mov xor sar sbb in (bad) mov neg dec movsb in test and add je sub jo inc std push inc cmp jno adc mov aaa xlat and movsl or and mov test sti loope insb test (bad) fwait daa fadd (bad) gs outsl push mov xchg xchg daa test push pop iret xchg pop fs push pusha ret enter cwtl inc inc test sub (bad) xchg sbb inc nop movl adcl or cltd xchg ljmp enter movsl push pop jle loopne pop hlt add add jno es test sbb aad push sub enter cmp fcmovne out or inc test nop xchg leave xorb cmp ret addb mov add push adc ds inc out or cmc fmuls xor leave mov xchg addr16 push cmpsl test pushf push sarb push cmp pop pop mov lret test cmpsb xchg sbb pop pop jmp sub pop sti (bad) jns (bad) jae (bad) xchg mov (bad) adc sub stos dec sbb jmp mov hlt add add outsb sbb enter fcomp sbb sub and sub inc cltd xor jmp andb or or pop adcb add (bad) cli add sub and add jl jl cwtl mov in nop pop and mov fldenv aad imul adcb mov dec adc (bad) or or sbbb in int3 cmpb ss push sahf jle lods (bad) mov in lock int3 fwait push jb mov xchg dec subb xchg cmp stos outsl orl jecxz jnp jae je mov scas cmc mov add mov scas push f2xm1 or je or popf cmpsl jle push les addb push cmpsb pop fwait and cwtl or mov xchg shlb mov cwtl mov clc add dec jnp ds xor push pusha orb aas out add cli ss jnp stos pop xchg add addb repz decl add inc mov lss aam sub pop push xchg xchg adc out xor xchg (bad) jno or xor stos or out icebp add pop repz jge inc pop hlt inc sub add leave mov jbe and lahf pop xlat andb outsb add xorb (bad) lods push fild out xchg ja mov lds scas sub push mov cmp mov dec xorb mov sub or sbb mov sub ret iret xchg js popl sbb ja mov cmpsl inc sbb subb int3 test push or mov loope,pt subl test ficomp ja (bad) fiaddl add jae lds lock iret cmpb jnp jmp push adc lret cmp mov xor dec pusha test sub test sbb clc int3 adc xchg sahf sbb and push ficomp adc out mov push int3 subb pusha jns fstpl sbb and pop movsb inc test bound adc ret mov test lds orb push in aam ja inc mov dec repnz loop mov cltd pop clc or jge sbb jno xchg andl scas dec pop shll mov into fisubl js popa aaa xor xchg outsl jle pop fstpl xchg fnop mov (bad) adc out xor daa aas rolb sub sub mov aam add pusha mov xchg adc mov pop test enter test push inc pop add add mov mov cmpsb cmp orl and add push in mov fldlg2 mov xchg sbbb mov js imul nop pop negl mov dec and fisub adc movsb push cld (bad) adc daa icebp mov add fs jne cmpsb faddp aaa cmpl push cmpb (bad) or sub sbb faddl enter nop/reserved inc (bad) out scas sbbb test mov insb mov mov xchg aam mov sbb stc push imul sbb mov cmpb fs mov ss xchg arpl xor mov push and xchg icebp test popl aad mov xor addr16 jg sbb call pushf dec jbe lods add insb pushf mov scas adc icebp sub out push insl adc orb shrb and aas cmpsb lcall lcall adcb or test not mov shlb sub popa pushf loope dec sbb sub out inc cwtl insb inc mov aaa ret repz imul mov sbb mov sub mov pop cli xor sti sahf fsubrl ljmp or pop pushf roll jnp adc adc xchg push mov repz or xchg icebp and fbld xlat jnp or pop xor test stos xorl add push mov (bad) jle gs test call das xchg sub mov lret mov sbb add or mov cmp push lods mov mov sub out xchg push ret jmp pop jp iret clc dec jo pusha out stc cs js sbbb mov add mov add adc mov mov fldl push xchg jae cmpb shlb enter lret push in movb mov fstpl mov push subb and arpl push test pusha inc mov cmp mov fwait push pop das jne test movsl incl xchg xor mov xchg sub in pop add inc sub adc mov push mov xchg mov fldenv and sarl push out je jl pop and xor icebp pusha fwait ds adc lea fisubr test mov mov mov or cmc inc nop xchg popa loopnew dec mov in stos pop or pop fstpl test jno mov sbb lods cmpsl push test movsb xchg inc xchg or push and pop sub nop into adc mov clc adc push mov addb pop cmpsl cmc adc popa lcall adc into jno sub dec inc xor mov sbbb inc mov inc or push sbb add sub and pop dec cwtl pop xchg ljmp clc gs mov xchg pop int3 int3 pop repz cltd push mov cmp mov lea cmpsb movl xchg mov (bad) push pop lods outsl mov popf push test out add clc sub jecxz arpl mov pop or in pop add jno sub push imul call and inc sub loop insb addr16 in ss lcall ret push xchg mov mov adc jb test arpl cltd scas insb jg movsl sbb jg mov cmpsl cs add out movsb ret insb test lods imul or (bad) or shll sub btr add cmp adc daa and pop (bad) jp mov sub sbb orl sahf sub mov stos fsubrl scas mov xor sub sbb jp adc out fistl mov push pushw jmp mov mov jp push ss inc jb jmp jl addb js andb adc push imul mov and je (bad) out dec mov pop enter adc cmpsl and push cmp sbb jl aaa les test jecxz andb in cmovl xor dec inc mov xchg or dec jecxz nop fwait movsl mov int test jmp and icebp mov cwtl dec frstor imul add fisubrl dec outsl mov or fisttp push andl orl bound cwtl mov mov cmp fcompl sub ljmp jp push enter dec dec cmp xor imul inc or inc (bad) dec aaa cmpb iret xor push std orb mov lods iret sti add push dec setno stos loope cmp mov or leave push icebp fstps mov inc fisttp es push popf pop popa add ret xchg mov jno xchg sbb mov cmp js cmp outsl pop test ret arpl mov cmp rcrb test jg sbb out sbb mov popf xchg test cmp add push gs test loopne jg iret mov cmp (bad) cmp imul sub test xor js mov fmuls cld outsb icebp add and lcall xchg inc mov dec stc fcomps cwtl jae lods iret mov sub loope dec loop mov mov movsl sti pop adc dec in xor and cmp adc js roll iret lcall (bad) in adc push cs daa xchg shrb cli pusha cmc (bad) xor jb sbb pop iret push std push int imul (bad) xor mov sti sub adc or xchg ror aas mov inc in sub cmp test cmpl inc test popa aad repz (bad) push jnp test gs pop xchg ja popa push pop in xchg and repz cmpsl clc fsubs mov sub or mull test jecxz in pop xor loopne cmpsl mov inc jnp sbb xchg push xorb or sub xorb scas add outsl add out pop mov jno xor push aad andb push fildl pop jp pop test push mul pop data16 xorb test sbbb mov mov jb pop mov sti add test push fiaddl les pop lds fcompl pop imul addr16 popf les pop pop pop test push jno (bad) fwait inc mov inc mov fs jns mov and lods mov push push adc int3 out push inc push bound pop popf xchg ret xor jecxz,pt lock test out aaa jae notl jg (bad) xor sbbb cs xchg inc mov add sahf xchg fs dec insl push sti jmp stos cwtl addb mov push mov (bad) icebp mov lds cmp adc xor xor mov xchg adc lcall loope adcb in adc inc sarl data16 js sbb fnsave inc jb in popa jns outsl dec xchg lods scas addl xchg mov cmp sbb test mov pusha xlat in jb mov test test jb dec testl mov cmpsl mov orl push mov adc shr inc lock jmp adc in out sbb gs cmp sub mov icebp inc enter jle fistpll sbb xor mov popa add inc xchg pop int3 mov mov pop push je cmp ret fisttp push lret test ret mov int3 sbb jo jo mov mov ret test cmp leave mov pop mov pop lahf jmp push lret shl sub test dec test push sub mov add dec insl lods dec out jmp push lock cld mov sbb inc movq andl xchg and mov push insb adcb std (bad) dec cmp mov rol in enter jg (bad) xchg insb hlt push orb sub mov lret iret sub jle and lock mov and xchg roll push scas aaa sbb ljmp cmp in cmpsl iret dec mov inc lret pop fsubl stos (bad) jbe mov test andb aad shrb xlat add orb sbb xor and shr dec or adc push pop sub lock loopne and mull scas push add imul mov and ss scas mov dec push sbb cld sti and or aad or test test mov xlat xchg xchg adc fldl outsl stc mov nop (bad) ds xchg imul lret jb xchg cmc nop add sbb leave jb pusha (bad) jb xor xor inc (bad) or xor adc inc and sbb test lods adcb or cmp repz cmpb negl lds into popf out sub inc pop cwtl mov push inc cmpb jmp sbb cltd clc jb mov sbb pop sahf cmp xchg mov leave mov mov test jb enter xchg xorb cmp sub xchg push insb xor mov iret lret into js xchg in mov push pop out adc adc mov mov mov into pop push stc jb dec (bad) out cmpsl outsl orb jmp xorb lods popa inc fdivrp loope xchg cmpb ret and lods and push pusha aad dec xorb in (bad) dec jbe mov and popf cmp lcall mov ds lods subb out sbb push mov add dec jns cmc lcall lea add arpl stos cmc (bad) xor subb daa or mov adc int add cmpsl mov and lahf push push and xor shlb adc out in decb mov test inc mov rclb xlat pusha scas inc pop or push lods xor xchg xor push or dec (bad) inc inc iret push cmp cmp add or addb add sti xor add mov cld and push lock jecxz cli clc shlb sub test movsl push push xlat in add add test xor pop xchg dec inc sub cmp andb test popa xchg orb adc pop sbb mov jno mov pop sahf test xor fmuls enter test shll rcrb repnz jno mov daa add inc dec add (bad) xchg inc cmp push fucomp fsubr and jge cmp mov idiv lods jp mov mov sub or mov push pop add daa add cmp mov nop es out out cmp in add adcb adc add nop nop gs fs call in inc push xchg faddl xchg rolb int (bad) nop pop sub or sbb cmp (bad) or dec dec movswl xchg movsb imul orb out les mov pop cmc xchg loopne or into scas lahf add hlt cmp sub pop inc and adc sahf xchg cmp lcall outsb or or xchg xchg (bad) mov dec movb cld nop xchg dec mov loop js repz testl imul push and int3 mov lock enter fnstsw aaa test adc push iret cmc sti in (bad) mov jle das andl lock ja xor or mov push mov dec mov fisubl loop pop fisubl or cmpl mov shrb jge fwait pop fsubrl (bad) outsb test add cmpsl (bad) lods addr16 lcall lret addr16 mov push lds data16 iret sbb js es xchg punpcklbw lea inc jnp push (bad) in ret sub aaa jmp mov and in pop mov test mov push sbb sbb bound stos pop scas push (bad) jmp ror divl sti push pop insl cmpsb jle call in and daa ret mov fdivrl dec fadds push pop cmp xchg xor adc roll mov jo inc or faddl je lods pop incl cs stc ds das lret and leave sbb frstor frstor cmp lock in lds in cwtl jl into iret jmp cmp popa iret sub (bad) xchg xchg lock ret sahf js aas sbb ja pop cmpsl pop pop add sbb pop in out out xor out call mov test nop into cmp fiadd add fwait cwtl aaa inc mov xor imul (bad) and outsb mov cmc or jmp adc push (bad) xor dec leave xorb cmpsl (bad) cwtl arpl sbb lea xor cmp (bad) seta loopne xchg (bad) jae lock jl (bad) dec adc andb cwtl pop (bad) loopne nop loope pop clc add and outsb pop sbb scas (bad) push inc sub cltd andb mov jmp (bad) je addr16 fistl xchg outsl fsubs adc icebp std cltd sub subb pop dec xor push andb jl mov cmp test (bad) lea int3 test sbbb idivb dec mov mov test shll stos add add jle push cmpsl sbb andb and xchg mov xchg cmc and mov sti pop mov and mov cwtl lahf addr16 scas mov fwait ljmp mov and enter les pop test inc mov das sub pop stos mov arpl xchg jnp add test mov pop cmpsl fldenv xor mov pop lds repnz pop mov jno mov (bad) adc repz arpl xchg jge test adc xchg sti ljmp mov mov js xorb sub cli mov sbb insl dec fbld shl mov (bad) mov mov xchg inc and mov xor lcall enter andl inc push out mov mov stc (bad) xchg pop nop scas test (bad) or leave adc ret fist cmp push test loopne icebp and sbb inc jmp adc nop mov bound adc inc pop sub mull aad xchg and fs mov and andb inc mov adc pushf xor jb (bad) nop sbb shl lahf sub andb scas cmpsl pop mov pop xchg clc lods xorb jnp or cmpsl mov js inc xlat imul and sbbb lret inc dec jae (bad) movb inc push jo in mov mov cmpb not loop movsl nop mov cmp (bad) shll js popf jecxz insl inc insb jno repnz in sbbb or (bad) enter rcll mov fisttpll out ret cmp fmul pop mov jae cmp fstpt je test pop aas les movsl pop ret mov addb bound sub mov xorb in cmp outsl sbb add jo cwtl or jnp sub adc push dec push jmp ret fdivrs add test pop cmpsb repz fs cmpb mov fsubr jp andb mov pop enter jl in andl popf xchg mov cmp xchg addr16 les popa outsb or mov mov mov dec out mov xchg fild mov hlt test mov jno sti add sbb repnz shrb rcr push enter andl push call and subb mov nop push sbb into add test inc out movsb push adc dec ss aad xchg enter mov jns ffreep andb xor stos xchg js in cwtl test jo xchg inc add aaa mov std andb xchg fwait dec lods sbbb inc out je scas xchg shlb test mov outsb inc cmp lahf jle mov lret das mov push jp gs add push clc xor pop fwait push xor and mov and push aad and add or ret add setl xchg jo insl andb xchg push mov sub shll mov inc test or les dec xchg arpl lea add jg sub mov sarb and mov mov je mov dec mov (bad) push mov je adc shr jle adc (bad) data16 sahf xchg dec push sbb pop test mov (bad) pop push and enter dec sub scas and adcl xor int3 pop fwait stc lods lock mov sahf les stc pop pop xchg mov cmpsl xlat fcompl shr dec les (bad) sti (bad) cmc cmpsb and cmp (bad) iret ds and push adc xchg xor inc sbb rcrl aad adc rcrb or (bad) subb dec push lods stos dec sub int pop mov enter je add enter jnp sbb dec mov fisub or test cmp and ffree add xchg pop push xchg jnp orb (bad) push push fnstsw and inc mov lods jg xchg xor test jae mov mov xchg jnp mov negl push push pop push movl nop cmpsb outsb shrl or movsl enter jecxz or jge inc test xchg sub mov cwtl inc ja or pop mov repz nop enter imul pop and mov mov jle loopne add lods jp (bad) mov adc cmp cs jbe adc out sub fisub leave xorb sbb inc stc mov pusha mov xchg mov test pop sub fadds sub mov imul subb inc push jne jae nop mov gs mov jge bound sbb sahf sub dec adc test push pop int3 out sub test std (bad) push lock inc mov and scas dec push or jb jle mov or mov xchg imul (bad) xor xchg movsb inc dec fcoms add mov add sbb nop cltd imul rolb repz inc incl movsl out xchg and lret cmp (bad) hlt push adc stc add mov jge xchg cmp cmp fstps cmp in push rcl xorb sbb dec ljmp and clc xor ret repnz mov mov orl (bad) and sub mov add cltd out out xchg lods mov js test cmpl dec mov jnp in rdmsr out jp xchg movsb push sti das (bad) jbe dec data16 cmp xchg sub mov icebp test (bad) outsb xabort mov cwtl or aas (bad) je std inc (bad) sub inc loopne mov rcrl daa (bad) mov jno pop movsb mov insb and dec xchg jge movb lock pop xor adc es cmp mov bound push fmul jmp test dec mov bound popa cmpsl cmpsl sbb stc outsl push adc test in lods sbb inc std mov int3 fadds inc sbb nop add adcl cwtl clc ss add out sub in loope mov fdivl in negl movsb mov test mov clc sub rorl pop push and insl mov repnz ret xchg mov add and sbb inc (bad) icebp pop aad mov xchg incb cmp cmpl fist int mov lods sarl icebp xlat test jb mov into addl loope or sub mov inc mov mov lret bound rclb ret andb decl inc popf fist (bad) data16 pop pop out jl js sbb fsubrs xchg jecxz into imul xchg test push in inc sahf jg pusha loope cmp cli dec xor jae fist loopne ds fwait pop jp push and jnp icebp (bad) sub mov mov add out dec je leave push mov jg jmp xor xchg add inc in in lock movl scas or cli pop dec mov jbe rol in mov loopnew (bad) lock fisubl xorl call jle cltd loop lods in (bad) mov ret stc xor fsubl adcl ficom lahf xor and mov fmulp adc inc inc push gs movsl movsl lock mul out sbb pop mov push add and arpl bound push push dec inc enter insl ret push cmpsl js and jp lea or dec cmp arpl lea popf sbb fldt push push mov mov sahf lret (bad) xchg lds imul push mov xchg es test nop mov stos and test insb les and add std xor and fsubr repz loope sub cwtl sbb imul lock iret lds cmpsl mov lret lods or push nop cmpb mov push scas loopne repnz xor jb sub mov nop and insb hlt frstor aas orl xchg pop inc mov mov xor subb lahf sbbb cmp jns sbb mov lret mov adc mov and add inc adc adc push movsb sub mov push push test dec jg and outsb andb mov jnp pop std jno (bad) xchg rcrl push inc fstpt testl loopne imul fcompl jg flds cmc jle xorl out xor lret mov jns fnstsw pop dec rcrl xchg cmpsl push incl push orl test dec js push mov add lds test mov or pop dec mov (bad) test outsl add daa scas jnp and mov jmp sahf mov xchg loope dec fnsave push test (bad) cmp inc and add mov (bad) lock jge inc sbb xchg ret orb dec xlat daa test push in (bad) xor cmp or incb fidivrl iret push ret daa or fs adcb pop sahf cmp sbb les lcall stos add inc subb or mov je repz into cmpb add imul xor push mov sti movsl cmp popf dec add xor push orb fldt inc inc daa aam adc cmpsb xor insb movsb (bad) jl int3 movsb cmc jnp mov jns test xor xchg jb sbb ljmp popl and push sbb int lret aaa dec mov ret cmp push jae cltd stc adc (bad) frstor adc and mov cld add mov mov adc cwtl push jl sbbl pop addb xchg nop xor repz adc push or test adc adcb xlat xchg mov outsb mov add mov sub or jmp jp and add bnd add (bad) jp fwait mov mov mov xchg jg jno push inc (bad) cmp jmp dec sub mov fiadd lods xor inc leave shrb imul mov xchg subb mov mov inc pop xor mov clc pop mov stc and pop outsl mov fiadd mov scas sbb pop adc je adcl push test fistl loopne xchg sbbl (bad) xlat sub jp dec mov ficoml aaa pop lahf test and push andb mov xchg outsl int3 xchg mov ljmp testl adcb push aas mov mov fbld xchg push add sbb ds inc and sbb inc cmpsb cmp adcb sub mov jae mov push imul sbb xchg imul test bnd cmp (bad) add (bad) cmp sub fildl pop sarl xchg outsb clc pop xchg xchg mov (bad) mov push mov xchg push cmp mov push jno push aaa xchg andb xchg lahf (bad) mov andb jp repz sarl fs xchg (bad) mov mov test and xchg icebp addb jne push jg inc nop mov test dec scas push fs ss mov iret push inc or lret jno enter push test adc dec mov push inc adc and mov in cwtl repz jmp or xor jmp lea jno leave xor aas inc mov ficompl leave mov nop ret in test ds shrb aad adc xor fistpll jmp out das ss push movl adcb or mov xor pop mov adc cwtl push leave inc inc sti push or fistl loop jno jae adcb cmp jle ret adc xchg xor lds fnstcw xchg sbb mov inc add jle call sub pop (bad) pop xchg xorb xchg fldenv inc xorb leave jp in xchg xchg mov pop push scas gs push stos mov inc lret cmp std xchg inc mov cmp enter (bad) rorb (bad) dec inc mov xchg dec push subb fsub sbb gs inc rorb push add mov gs mov (bad) xor std lcall sub pop nop xor nop shrl xchg cmp fs sbbb scas mov jmp leave in adcb mov jnp push subb scas imul cwtl mov push lods subb insb mov dec jae shr ljmp aam mov pop notb adc mov les imul jno (bad) cmp lods and int movsb stc xchg imul inc addr16 addb adc xchg insb xorb sub incb adc outsb out jl jb xor lret mov jno rorl test outsb xor movsb (bad) or push test mov into mov xor sbbb xchg iret repnz cmpsl daa jge jge out rorl ret dec les movl cmpsl mov or cmp dec adc add sub ficompl xchg imul mov std cli lods jecxz enter int mov mov (bad) mov add cwtl mov inc mov mov aad adc lret and jnp sbb outsb into adc mull inc adc sub ret enter mov in pop xchg ja mov xlat negl rorb cwtl jmp shrl push inc js iret aam cmp mov add out movsl xchg ret fmulp xchg or cwtl pop add hlt mov cwtl popa pushf (bad) ret gs iret test mov pop add (bad) (bad) xor mov sbb sbbl or mov jl mov mov and pop adc push dec rolb pop push outsl xor adc inc jne push push aam inc jne lods das subl sbb inc sub je stos cmpsl and pusha mov cli fldl jo (bad) mov and movl xor fucomp scas in inc aaa cmp push jo and and test sub out xor fidiv lds xorl fild push cwtl pop inc and scas mov fildl mov int3 popf mov int3 jge std aas sbb ss xchg (bad) in js add add push jns mov cmc fdiv adc sbb push outsb sub cli push fcompl aam jb mov inc ret xor testb popa push pushf fmul dec movsb sub pop or push and dec je jnp or out adc mov in jp dec pop loopne mov push loopne (bad) aas xchg aad rolb mov and sub xchg pop test mov push lock or xor outsl pop sbb sub mov repz cmp and cmpsb cld loope xchg ret and (bad) mov hlt jmp inc mov les mov mov aad or (bad) xchg js jp cmpsl jno jbe add inc or sbbl rcrb popf mov mov mov movb ret cmp jge xchg mov sbb mov std subl sbb dec stc loop inc lods out pop incl fstpl jecxz sub mov push test lds leave pop sub test in int out pop lret loopne aaa sub xchg add jg sbb lret adc cltd add ret add cs lret add jmp negl daa or xchg out or mov leave mov pushf dec call mov inc add insl or jnp lret inc lcall xchg mov inc or adc mov lahf cmp mov adc ds ja xor loope jns leave test xchg gs and test push sar addb das and mov arpl cltd cmp rcrl mov jle mov add pushf xlat mov cmc xchg scas mov mov pop loop andb or add xor push loopne (bad) lcall or data16 mov pop rorb subb push jecxz inc dec sbb outsb je pop adc jp xor (bad) mov add imul mov lea inc fs jge or xchg (bad) adc stos pop mov xchg mov and mov mov loop sub inc fmul addr16 mov fwait dec or mov cmc scas mov pop xorb popf pop cld adc (bad) enter sub faddp or dec mov adc cmp push mov xchg (bad) (bad) xor mov fmuls sub sbbb jmp sbbb sub add shl push orb cmpsb imul js or and dec dec push nop add stos cwtl pop xor dec inc xor lret add shlb jmp add fwait dec xchg fstpt mov sub je pop push mov mov push sbbb sbbb sbb orl jnp jge jo sbb pop mov or cwtl in addr16 test testb testl mov push jmp test mov or cmpb int xchg pop in nop or ret mov outsl mov fldl jno xlat mov cld sti clc std xchg mov cbtw xchg push or scas or and jbe loopne std mov adcb aam test push and dec aas mov xlat ljmp (bad) mov psrlq inc fbld cwtl out das je sbb loope inc adcb inc mov stos fwait pop cmp xchg fdivrl and and mov clc ds subb sbb sbbb dec xchg dec nop sub dec pop rcll jl inc or jle jmp jbe sbb insb andb das xor xlat enter mov add mov push arpl sbb xchg or sub lret ficom sub popf jns into xor adc inc daa (bad) cmp repz mov stos enter (bad) fdivrs mov ljmp lock xchg mov cmp jno sahf into fsubrs mov pushf inc es mov clc adc mov push sbbb dec mov stc or outsl stos sbb testl in or ljmp mov mov add jns mov mov cwtl xlat jecxz adc stos dec orl xor ds stos xchg int3 sub mov cmp bound add je subb (bad) push sbb shrl insb or cltd xchg push add mov (bad) add mov adc ret clc iret subl aam nop in hlt decb inc faddl arpl sti test or addr16 sbbb loop arpl inc out orb and cmp adcb xchg sub add cmp xchg dec test ds clc test xorb mov int enter add daa cmp sub dec jl add jbe (bad) shrl pop test push sbb pushf scas fiadd mov cmp loope jg cwtl mov push sahf bound jnp sbb cwtl fsubrs push pop mov cli or cltd pop pushf mov icebp or enter dec aas repnz mov leave xor inc std (bad) jns adc add jmp xchg fdivs add aad mov push adc (bad) xor dec inc add sbb stc xchg flds mov jo out mov cs xor adc dec popa xchg addl inc jno aad xor dec mov mov aaa lcall repz addr16 andl inc test adc lcall pusha sti push mov call jmp pop fbld stc js fidivl add pushf inc mov notb sub or push dec xor pop sub fnop pop test sbb sbb cltd cmp scas test pusha push xchg xorl inc stc clc jbe xchg andb test mov int3 push jb adc test cmp add jge mov mov rorl imul mov fadds stc inc xchg cmp outsb fbstp sbb add iret cld or add movsl in loope ret xchg cmpl notb andb aas lds push fdivs sub cmc or std xor lret xor adc test xchg xor rorb or testl xchg test inc and movsb pop sahf fwait pop cmc push fsubrs lods orb fadds pop xorb stc mov cmc push fsubs dec mov or mov adc mov inc push les stc inc mov mov ds fstp imul repnz pop xchg gs out adc jecxz test sbb rolb ret cmp jns mov mov push out or or xchg fistpl lahf out popf nop push in jge adc jbe js lock hlt mov jmp adc jl jmp inc jns ljmp mov sbbb and mov push scas sbb xchg out cld xchg jo sahf pop cmp in addb mov mov lcall and pop aam add mov nop xor cli jbe mov sbb inc pusha je shlb test add enter add or cmp pop sub pusha xchg dec outsl push sub out fs (bad) mov int3 sbb xor sti sbb cwtl les fdivrl dec jp loopne push push sub inc jg repnz adc inc mov pop jle xor mov and add mov xor flds push aam nop push sti jl sbb xchg or imul aaa iret mov dec scas add je pop push adc or lods sbb mov inc iret xchg jl loopne push test aad icebp pop repz xchg cld mov inc adc cwtl addl xchg je mov int scas push ds jbe push or adc lds xchg les jle lds outsb adc ss (bad) sub ret push or (bad) cs bound loope dec (bad) repnz loop (bad) jbe outsb mov dec cld arpl pop sub out decl or ret lods mov dec movsb jmp fist jnp push (bad) ljmp push inc mov test sahf shrb loope sub xor imul (bad) cmp ss sub push xchg (bad) jmp test cwtl xchg cmpsl and jae jbe sbb sub cmpsb (bad) adc (bad) cli sbb add cmp das jns mov outsb pop pop repz add fsub dec xchg jo or js jecxz or rcrb adc sbb xor mov daa cli int mov into addr16 pop or sbb mov sub inc mov popa cmp xor mov mov adc lahf push xchg iret xlat lock loop xor pop ficoml xlat out bound adc fadds test lea fcoml xchg or add int3 (bad) repz pushf mov adc inc lcall fmulp sbb mov stc add pusha or push lock or jge aad test mov dec add sub jle cmp stos repz hlt xlat sbbl add cmp xchg lock es leave loope pop pushf into or ds cmp pop lret jl ds cmpsb xchg pop jmp or (bad) js movsb les pop jle lods ret out dec jge (bad) push bound sti int3 in stc test inc dec add ss mov pop or push daa cmpsl fdivl pop lcall imul vcvtsi2sd xchg movsl mov inc out sub jne add cmp push gs fdiv mov repnz fisub sbb inc orb cmpsb das sub pop (bad) xor add mov js mov rorl sti enter push pop adc fnop stc jnp jae mov and pop repnz xor arpl sarb lahf xchg xor fcmovne insl mov xor dec rorl mov jnp fwait pop into dec and cld ds insl add (bad) mov mov sbb popf scas cli fdivrs sub sbb mov lds and incb pop loop sbb ds xchg imul xorl daa rcrb sub cmpsb repnz fstl nop sti xchg nop mov xor stc notb data16 (bad) test mov add (bad) jle push ljmp shl int3 xchg pop adc adc fisubl lock jg pop repz dec add adc cmp popa scas (bad) popa mov inc jae ds lea mov ss stos xor out or sub icebp aas out aad andb cmp xorb fcompl leave sbb jae push inc in or and test jmp cmp bound fsubs xor pop mov nop jge mov xchg mov add jecxz adc lods addb ret cmpb inc dec mov sahf (bad) mov test std sub mov sbb push hlt cld jge enter cmp lods mov mov fisttpl or xchg or mov in ret ja (bad) das jb mov fistl dec cld cmp push push jno out adc inc dec xorb clc or ret xor cmc push mov jmp lret push std push and adcb jecxz cld add push nop loopne and add add fcoml mov xor pop test or scas push add add mov negb je xchg fwait pop imul cs xor cmp and js pop xchg scas and jb les push or outsb loop jle or jp roll cmp lret xor sbb nop cmp test inc cmp or mov xchg pushf add (bad) lcall subb dec addr16 push mov cmp int3 sahf leave xor addl adc push int mov cwtl fidivrl push out test xlat pop cwtl xchg cmp dec push out inc inc mov aam cmp popf xchg daa lods xchg stos fidivl pop pop adc cmc movsl mov push je sub xor xchg cmp jo inc and mov enter sbb int3 stc sahf pop add sbb pop int3 enter mov inc dec sbb inc push enter faddl or pop xchg ret outsb sbb xor fnstsw xlat dec pop add je cmp dec cmc lea in shrb cs mov jg or ret push pop adc mov clc (bad) xchg (bad) addr16 add mov les xor (bad) pushf push ljmp mov mov cmp lock mov aam je shll adc gs push adc insb sahf mov shll pushf xchg ljmp and icebp popa cld or (bad) orb pop movsb push loop enter nop mov enter add pusha xchg es xorb mov (bad) shrb mov mov and mov imul push xchg addr16 mov and fnsave cltd aaa lret popf in ret js testl xchg dec fsubs xlat xchg in sub and adc sub sbb sbb jecxz sbb in jbe or dec sbb pop outsl jo xorb push mov movsb cmpsb data16 outsl (bad) sbb push rorb incb cs fstpt xorb xchg mov movsl int3 aam adc sbb out xchg imul andb mulb fsubs stos or fdivl es pop cmp add incl mov mov pop cmpsl fwait loope pop arpl sbb push (bad) fsubs out sbb orb mov push rolb inc cmpsl cmc jae jne xchg fistpl jb xchg outsl push push pushf pop test dec cmpsb xlat sub out orb fs mov ret stos test cmc push es xor insb (bad) cmpsl inc scas pop fildl lock cld pop lahf cmpsb (bad) loopne test iret xor mov cmp movsb and push xor data16 test dec nop enter andl notl mov addb int3 mov and (bad) pop add adc mov int3 std es mov cmpsb jno mov sbb call jnp pop pop in mov pop mov (bad) test lret add pop fs sahf cmp pusha pop mov scas jnp imul call dec inc pop movl xchg cmp cld and mov sbb cmp icebp pop xchg mov (bad) dec mov xchg insl cmc mov push push sub add xchg add inc jg mov iret adcb and scas mov enter cmpsl addr16 subb jns insb inc sbbb inc adc movsb addr16 std mov out jp test add inc pop stos mov or jne (bad) sahf push enter cltd imul cmp sub int3 jmp popa xor ds test xor orl pusha cmp insl add xor daa lret sbb cs and cmp jnp mov rcrl xorl das jge outsl int push notl cmp outsl xchg scas fxch jo sbb and sub sub outsb inc inc bound andl (bad) xor add cmp mov es repnz test mov xchg test or pop loope push imul push cltd adc pop mov test cs sbb push add push fistpl addb dec mov adc and lcall sub idivl aas icebp fldt or jbe adcb xor sub test lret xor jmp jle xor movb mov push jns aas repnz clc stos inc loop mov jl loopne jnp mov (bad) push gs mov sbbl xchg xchg sub sub mov or mov add push cmpl xor scas subb outsl orb lcall xchg mov cs or adc (bad) xchg scas jns imul mov cli fbld scas lret add dec mov stc test aaa iret or aad lds cmp inc adc and mov loopne or loope push addb add mov xchg mov pop subl lea xorb push test loope das xlat enter in jmp adc and lods cwtl add sbb push mov test mov popf out pop movl mov aas rolb cmc movsb leave test xchg mov adc adc add jbe nop sbb lea popa push loop adc fild add jge pushf aad cmc out js imul fs pop shrl cltd sbb lret sahf ljmp push faddl dec cmpl (bad) fidiv in loopne stos fbld fdivrs mov shl push js sub test out subl inc push dec les inc adc icebp or inc ja ret in (bad) sti jnp (bad) into sbb jg pop xor cmp add or iret xchg imul sbb lods (bad) and (bad) adc cwtl das mov mov fadds pushf cmp nop pusha sbb or test or cmp mov test lcall xchg jge xor test (bad) cwtl fidivr pop int3 cmp (bad) inc lods mov xchg mov cmp je int sub bound or in fmul xor lahf and fdivrp or adc insl mov insl add jne xchg (bad) pop ja subl test jge mov (bad) mov imul sbb fstl mov mov out or cmpsl pop inc in je test clc jne iret jge aas pop jae pop mov dec iret les addb add cmpsl mov (bad) mov inc lds pop pop pop pushf lock or adc sub (bad) insb pop mov pop inc pop ds add push sbb lods jb dec lret imul or sub scas shr and decl add repnz pop (bad) call xor aaa mov sbb lods (bad) stc roll in fildl pop xlat andb fisubl scas enter pop test rorb cmpsb in movzwl and xlat (bad) aad int loop inc xchg lods and push mov fstpt pusha push loop cld aam mov lahf xor mov call enter ret clc jae cld push gs (bad) int3 pop jne mov xchg mov (bad) xrstors mov add mov pop lret je inc mov aad jb test (bad) dec (bad) fnsave int3 xor cmpl adcl lea aad js xchg outsl mov mov push or and in lock or mov mov adc and lcall sub rorb (bad) icebp test dec (bad) push lret sbb scas into outsb stos jne jbe orb inc mov loope sub dec mov xorb jbe jg and pop in out orb lds les fildll (bad) jo push mov (bad) loop lret jp xchg lock (bad) jmp imul xor andb mov pop movsl xchg in scas or xlat mov test push push jo js,pn mov mov pop push dec addr16 psraw subb icebp andb or add repnz imull xchg sbb push push fcoms xor mov xchg test add in (bad) enter ret or push mov pop sbbb inc shlb scas and or incl inc inc cmpsb hlt dec test adc test imul sahf addr16 scas test adc mov dec dec mov repz or (bad) xor shll popa mov test fstpt js mov sub or push mov add scas push stos addr16 mov pushf mov lea mov push sub or stc (bad) faddp lods mov dec loop push cmp mov jns or subb lock pop movb ds stos dec rclb mov jg jge test jns fiaddl push test in or (bad) jmp movsb es test or movsb js subl movl or mov pop (bad) lret add sub mov jo sarb inc adc sbb (bad) ljmp in sbb into jg push data16 dec sub (bad) mov and fprem dec iret shlb (bad) and in in aam ret mov fwait ja and jo std cmp fsub push xchg inc cmp cs ss push mov xchg (bad) mov inc (bad) rolb pop jne jae in or jp (bad) push jo pop sbb add xchg mov lea loop mov ret out nop test cmp cmp roll push shll lods push cmp mov arpl and dec ret xchg int3 cmp repz dec add cli xchg rcrb test pop in xor inc add mov hlt add mov inc pop cmp add mov loopne das cs loope mov cmp mov test iret inc add pop push cmp ds nop mov scas aam xchg repz popa andl pop imul lea outsb insl pushf (bad) or ret push cmp and ds lret loop xchg push bound push pusha pop imul add gs mov outsl lds pop (bad) xor das stc dec xchg cmp call jo xor mov jl nop inc das inc mov scas cmpb inc fs jp (bad) mov cwtl sbb fmul jo outsl add sbbl sub fnop mov fist mov pushf out dec jge or rorl jle (bad) addb insl stos nop push fnop cs insb mov push jl mov in clc cmp cmp cmpb sbb mov mov shrl xor inc pusha repz lea in int3 sub insb adc mov jle int adcl push jo inc mov loope lahf xor jl (bad) cmp mov add mov fstpt mov add lods adc mov xchg sbb push into ljmp mov addr16 iret (bad) aaa mov insl mov leave je out movsl clc (bad) imul mov or add (bad) hlt push inc add xorb dec mov fldenv out mov pop mov insb (bad) xor pop stos test mov and imul negb loop aaa xchg push rorb xor sub xchg arpl in jp scas sub arpl test pop popa and mov push and fcomps or sbb nop and adc jno imull or js push xchg push or xor xor adc lret or pop cmp aas into mov dec mov scas sbb shll pop inc sub lods data16 dec xor dec sbb inc lods cld xor aaa jne push (bad) mov mov cmp cmp and nop pop in fild cmpsb (bad) je jbe in mov pop rolb adc (bad) aaa in bound clc pop push xchg lea test (bad) clc cmp test loop mov stc push mov xchg repz repnz scas add pop add scas shll cmp test test (bad) jne (bad) popf iret stos sub and pushf push adc push mov mov and iret icebp fistl pushf das fsubl pop add or and adc cmpsl pop jp fisttpl dec clc dec gs jle int fcmove mov push ret arpl add mov fdivl notl mov adc mov stos push (bad) mov bound xlat scas repz out test pop cmc mov shrb push cwtl jbe pop mov out shr jle mov mov add ret int addr16 rolb lea out xchg jnp inc pop movsl pop je mov test (bad) cli xchg jbe mov fsubl push jg xorl iret shll out fsubrs dec cmpsb in lds and cltd rorl orl cmp jl mov cmp fsts jg fdivr xchg pop pop test dec and push dec loopne loopne dec in xchg mov (bad) les mov xchg cld pop icebp js movsb inc sub cwtl add addl push cmpsl (bad) jne add ljmp mov adc idivl jns cmpsl lret mov rorb ret mov or stos insl icebp mull inc rcrb push outsb push adc sarl divb (bad) push or adcl mov call sub gs (bad) adc ds xchg sub xchg sbb and cs adc sub xchg cmp ret mov popa xor cmc fdivl gs xor push sub movsb jp scas lcall xlat in scas repnz test imul inc or sbb or push adc into push inc lds push (bad) enter pusha je sbb aaa shlb xor mov lods dec cmc int (bad) out (bad) mov xchg iret cmp stc adc in (bad) xor outsl xchg jge xchg test incb fisttpll cmp mov (bad) cmp cwtl add or nop jns jmp inc (bad) mov fucomi mov xchg inc cmpsb sbb sbb iret xchg adc lds ror fsub jnp sub jae sbb nop (bad) jmp outsb ret data16 addr16 movsl push ret jns (bad) sti sub adcl mov mov sub jne shll pop shr push cmp pop fsubl stos push sub push lcall or pop inc add mov insl add mov push inc xor (bad) iret and sub enter shrb pushl dec add pop and and (bad) aaa test xchg add iret xchg jo leave cmp mov enter sar pop lods adc inc pop jns jle arpl ret out mov or andb jb int3 lds or fdiv xor adc sbbb push test imul lret (bad) lea mov sub jge cmc pop fisttpl adcb inc jp xchg arpl (bad) insl xchg pop scas orb and in push test je in ja add dec xor or psadbw inc imul lret mov push dec jge int adc imul addr16 cmp xor jno pushf jle mov inc mov adc cmp sbbb mov dec inc inc cmp out les adc or (bad) xor adc mov in negl fsubl ja mov orl push xchg ret cwtl cmp (bad) aas push in (bad) lods mov fisubrl xchg jbe sbb xchg mov imul adcl sub mov mov and (bad) push and pop jbe loopne int3 (bad) push or cmp arpl and dec ss cmp push xor pop mov dec repz push mov fnstsw jnp out aad pusha mov stos dec push jno or pop and loopne xlat pusha dec imul fs jno addb xchg jo popa ss lahf test mov cmpsl jl mov mov orb inc lds repnz orb xor pop call aad (bad) or inc or test into push fdivrl mov scas and xchg (bad) orb xlat loope adc jle add and or int out aad adc loop sahf pop cmpsl push cmp jo call dec pop adc push lock xor test mov xor adc sbb stc add iret push push jp (bad) inc ret fdivs sub push cmpb xchg mov pop pop adc or out sub adc push call lcall popf pop loop psllq sahf xor fisubl add push and scas sub test add jo daa icebp push mull lahf jns adc adcb scas jg add pop lahf cmp sub lea lret int3 adc addb pusha mov jae es outsb mov xchg (bad) jmp dec sub js cmp insl adc and insb jb mov jno jns andb push mov or xchg push mov and test inc (bad) jl xorb pop cmc shlb sub movsl icebp add mov std inc repz xchg adc imul push jmp and cs add pop cmpsl ja or mov movsb sbb (bad) jl lods mov lcall lds scas sub inc cmp mov repz flds aad dec mov mov mov lahf je lods adc out jg xchg jnp mov xchg xchg (bad) adc xor fdivr lcall pop addr16 xorl add cmpsb test push sbb out adc popf add ljmp add dec (bad) aaa shll (bad) jnp loope das xchg xchg mov (bad) aas out aad sarl cli punpckhbw cmpb xor stos mov mov nop mov inc les fisubrl mov pmaxsw jle add cwtl mov inc push fldenv stos inc add je lret mov loop test in in sahf push jge jnp pop mov mov sbb cmp cmpsl jae mov aas (bad) clc cld (bad) addr16 lods dec scas xchg std subl jae xchg shlb insl addb cltd xor mov cmpb mov ret enter xor scas dec push stos mov testl sbb add xorb mov das pop jns int cmp add test pusha mov mov push scas aaa lcall dec pop add adc movsl cmc mov pop mov push data16 pop xchg fadd js fsubrs into nop sub cld test arpl (bad) xor ret xchg jo insl add xlat dec xor cmp cwtl andb fsubl out nop aam stos add sbb mov add in cmpsb pop pop and dec and jo in mov jbe fcomip (bad) xchg enter xchg enter test pop movsb addr16 xchg pushw je dec roll sbb fsubs xchg fs adc stos pop xor or push pop outsl decb inc xorb mov enter mov adc movsl adc fsubl adc mov cwtl pop cmpl incb sub mov orb and andb (bad) mov dec aad fcompl xchg sbb int3 jecxz cmp add daa shll push add test cld pop icebp loope dec pop inc mov orb mov mov xchg mov inc jne addb or (bad) cmpb or push sahf mov stc add xchg leave jne jno push xchg arpl add in insb xchg ret xor mov mov outsl cmpl mov fistl add dec pop movsb push sar in jmp repz inc je lods dec adcb jae popa inc addb fs popa jl insl nop lret cltd arpl jl in ljmp lcall shr adc jns adcl adc es xor jge inc icebp or jnp es push inc dec (bad) repnz add and sbb int mov mov (bad) fldenv xchg add fdivrs notb fisub lret nop repz imul (bad) inc cmp add lahf popa nop mov dec push sub cmp movsb jecxz push and sbb andb dec jno adc mov inc jnp mov adc sbb das xchg (bad) mov pop push std push mov addl rcrl sub push gs xchg pop jnp push xchg shlb clc (bad) in sub cli sti sbb leave xchg and imul in ja jl push jmp cmc mov jle arpl mov loop mov mov sub addb jno push mov mov nop (bad) in adc and out gs mov mov lret adcb xchg mov cs jbe sbb enter add rorl xchg incb aas rorb jno arpl xchg inc addb sbb mov adc pop aam testb mov pop imul pusha fimul in cmpsl andb aaa dec jp popf shlb cmpb and sub push pop orb loope inc rolb mov xchg and add loop scas fdivr sub addb add mov mov lret mov add xor and mov in jp fistp dec loopne sbb xor in (bad) mov mov (bad) pusha test cld add xchg xchg popa inc nop jns fnop inc imul inc push push xchg pop in stos adc add lahf fild fwait mov out or sbb add xor xor cmp orb enter sbb jo mov jecxz sti test popa jbe xorb stos fiaddl cmp hlt adc xor xchg mov fstps adc nop icebp hlt mov cltd popa cld mov das stc and jae xor xchg add aam jg adcl xor push call push fisttp cltd gs push mov pop mov sub inc push scas inc push fisubrl loop aas andb jp movsl nop add addl cmpb push adcb insl mov repnz mov test mov out ja cmp adc mov sub sbb imul (bad) xchg iret mov adcl andl mov adc add sbbb inc in inc int gs mov inc push or loope jp cmp mov subl add xor cmp mov push xchg gs out push orl ret mov push sahf fiaddl xor mov pop enter popl inc lods and arpl dec test xlat addb ss lock ret cwtl sahf fisttp data16 cmp test push movsl cs pop inc test ret adc not xchg imul dec pop cmp inc jb lret inc pop xchg or movsl jb pop cltd test test test iret jle pusha sub jmp jge fcomps mov je lcall daa idiv and iret xchg dec xor add xchg rol cmpsb push loope addr16 add fs pop stc inc cmp jb push popfw clc mov iret inc sub lahf mov lds ja div outsb (bad) popf into sarb popl mov (bad) sti mov (bad) and insl ja nop and inc fbld repz xchg xchg push adc jns jbe add adc xchg in jo xlat sub aaa mov test enter (bad) enter mov test mov cmp loope mov jle mov rcrb rcrb adc mov adcb push insb mov cmp iret cmp cmpb xor cwtl aaa cmp xchg data16 icebp fcompl sbbb loope insb popa mov rolb mov xchg xor sbb sbb mov addb jnp push add loope clc andb in out lcall mov push adc mov inc insb jle sbb jp stos (bad) iret adc loop push nop lcall add jnp push fldt xchg test cmpsb fs js ss ds and shrb mov mov sahf gs push scas push push std jns xor and repnz add add add test inc mov inc mov test inc jmp mov imul xchg mov xorb mov fstps cmp lret sar jnp loope js ret adc mov push cmp in in sub sbbl lock mov in or push leave jg mov int3 jno test jae in subb aas mov jo sbb jp sbbb ljmp addb add jecxz jbe imul dec xchg or in (bad) mov cld int3 xchg ret jnp ja insb xchg leave mov xor fcomps adc xor jb dec repnz push pop cli adc push jp fisub inc jbe xchg dec cmpsb mov push outsb sbb sbb jl mov lretw scas fldt in mov push (bad) (bad) lcall jecxz mov inc add push int3 fwait dec loop mov mov (bad) fnsave sbb xorl and jbe (bad) or and std cmp push in sbb rorb loopne sub movl adc xor xchg push mov dec push das jnp hlt push cmp int xor nop push in loope xchg mov inc mov xchg mull cmp or lret push adc xchg test inc (bad) in icebp jb ljmp add xor pop mov insl mov mov outsl mov cmp andb sub jb arpl out icebp test and out push aad xchg enter arpl xor enter pop mov loop data16 int mov and subl lcall or xchg jge std (bad) imul inc add sbb fsubrs test aaa ret dec xchg xchg sahf arpl mov and nop xorl stc scas cmp adcb (bad) fdivrs push lock or sub sub xchg inc test and int xchg dec cmc sbb mov subb sbb mov outsl xchg int mov roll nop dec sub mov cmp dec (bad) rorl (bad) repnz add cmp rcrb std cmp mov cmpb lret addr16 lcall ljmp xchg movsl fist shl mov rorl test test (bad) pop push adcl mov addb lds sti (bad) mov test pop dec mov jle,pn iret nop arpl (bad) loope sbb xor and cmpb mov iret fmuls test movsb sbb mov jp dec sbb add xor or xor inc addb sub fs (bad) popf pop mov aam cwtd cmpsl or pusha sahf push sub mov adcb push fwait jne xchg fdivs mov ret add inc int3 mov add jle sbb loope aas orb ds nop cli ret push push dec je,pn xchg push and xchg dec and outsl add ss sub xor je les xchg cmp fnstsw xor clc jecxz ret adc ret ds call repnz mov gs scas cmp inc jge dec mov addl subb mov mov (bad) xchg jnp adc in mov dec aaa nop pop mov mov pop pop add cld lahf rcll insl inc adc xchg push insl add js adc lock lods sbb adc (bad) out (bad) and iret mov scas insl fsubs pop sbb ds mov xchg pop sub iret mov or cli add and ret notb pop xor fild dec add sub adc iret sti loope jg adc lea sub (bad) sbb dec mov mov fcoml (bad) outsl sub stos shr (bad) cmp in mov and jge lods jmp lds jnp inc push iret or add add adc jo cwtl dec out imul sar and imul cmp adcl jns jae mov sub ja xchg popa cld movsb mov mov (bad) mov ret sub jo xor or movsb js xor imul fiadd fdivl (bad) jge pop push divl inc (bad) int3 adc mov test (bad) movsl ds bound inc inc fadd xor mov inc aam cmp lods (bad) lock push and xchg pop adc xor mov inc rcrl fildl lret mov (bad) xchg or pop jo push addr16 insb add pop stc push test (bad) fild jmp rorb pusha (bad) jp or or int3 push jo nop push xchg gs (bad) mov adc ss fs mov add adc lock out and mov add mov fmuls pop lcall sbbb jmp dec push mov add loope dec or mov add mov push pop fsubrs add sub push data16 xchg popa jmp lret inc pop jecxz imull (bad) leave movsb or (bad) xchg xorb and add enter adc mov xchg jo jecxz push mov adc lcall cmp stos incl (bad) rolb int3 lea orb jg bound mov insl xchg xor xorb push cmpb cltd lret std fcoms icebp add jg push inc rsqrtps push fsubrl cli cld cmpsb (bad) ljmp dec sub clc xchg mov aad push mov pushf xchg outsl pop cmc sahf or mov inc push dec scas ds data16 xor out inc imul jl jecxz test cmp cs je int3 ss enter add pushf jle,pt dec dec pop cmpsb cltd cli orb lahf test movsb sub loope sub pop pushf mov repnz data16 mov andb sarb stos xor mov jg (bad) out mov into cltd mov mov subb push hlt pop sbbb adc fimull shl inc mov push test mov les push xchg enter subb (bad) inc sub addb adc call mov xor or test jno add cs xchg sbb lahf out jnp int cwtl loop mov dec les lret mov insl mov mov push sbb aad inc xchg repz mov add inc mov pop aad pop repnz jmp cwtl dec sbbl xor sbbb sbb adc fisubl mov push add add xor int (bad) xchg lea aam dec mov addr16 xchg aaa mov adc push mov test (bad) mov ljmp out xor xchg fcomps lods xchg xchg addb or out lods adc inc pop shll jns ret mov js add or rorl sub clc jnp xor jle (bad) push out lock pop mov push stos xor push push fwait pop hlt pop mov inc push ljmp xchg insb imul mov fildl mov lcall jecxz das and fcom (bad) jb push cmc mov into int jmp xor lret nop inc inc mov bound adc rcl inc test xchg mov push rcll imul stos jp mov mov nop enter std mov add fbld xchg xorl or ret enter data16 push or xchg (bad) es add xor icebp iret push dec mov sub pop xchg (bad) sti mov (bad) pop add dec loope sub test orb sti fwait sbb cs adc jno mov sub (bad) xor imul pop pop ror xor mov adc mov sub adcb addb inc pop dec int3 xor enter test (bad) sub insl xchg adc shlb movsl pop cmp mov fnop js enter subb stos ds repnz in cmpsb pop xchg repnz dec lods les sbbb adc test sub in or fcompl and test sti inc fstl dec testl inc sbb cmpsb addl pop push mov add orb outsl mov orb adc fisubrl insl xchg fild inc or xchg dec xchg mov hlt mov inc mov or mov cmpb rorl push in mov arpl std clc add or mov addb jle and xchg faddl mov mov aaa add cld sbb dec sbb out or shlb cmpsb cmc xchg sub push mov xchg fwait addr16 lock adc in test mov cwtl pop push scas fcoml push cmpsl jg add xorb dec test mov pop cmp clc shll cmpsl test mov lahf xchg mov jns leave (bad) mov sub fcmovnb add das cmp adcb std jge jb int fsts push stos xor and movsb xchg ds nop cmpsl push insl sbbb test pusha xchg inc mov push sub dec aad jecxz leave js imul lock sub imul mov dec push pop leave sub push scas mov mov in inc dec dec scas jmp pop leave cmp cwtl sbb call addb insl lea jo xor das push nop out stc addb or andb pop and into push sub jp scas push cmpsl cmc mov iret testl andb cltd cmp xor cmp or xor xchg arpl insl xchg test (bad) ret adc lods xor and mov inc mov inc jge orb fsubs insl ret aas push enter movl inc dec cld cwtl or loop push addb into sub mov (bad) jae push jne push pushf sbb push rol add aaa in jmp lea cmp xchg (bad) mov xchg outsb movl jmp sahf inc inc push mov test push ss stc inc out xchg mov xor data16 adc icebp les test mov mov xchg (bad) mov mov mov fistpl popa ret stos insb movsb cwtl sar mov and insb inc (bad) dec and mov loopne jl addb pop sbb mov jmp adc mov sub into pop mov xchg test mov ljmp mov mov iret stos addb movsl outsb loopne and adc lea jnp or push sub add jnp out clc pusha push dec jno stc or adc jo xchg push out notl imul mov xor xor ret dec mov (bad) clc sub cmp popl dec adc jp inc mov pop das add sti dec fildll push adc add sub sbb sub jno fmull addr16 jp xchg cmp mov std mov mov aaa aas and jl adc hlt lea mov andb movsl adc mov nop push andb or les pusha aad int in adc cmpb mov inc jbe xorb nop imul push mov movsl push xor dec hlt cmp rolb pusha push movsl cmp cmp mov test es fdiv pop js wrmsr outsb idivl cltd sahf arpl mov dec jnp push sub (bad) fild aaa loope push arpl push int3 cmp pop adc sub pop sahf sub push mov movsl test sarb mov cwtl (bad) pop and (bad) mov cmp and (bad) aaa mov push mov clc and xor add mov mov dec js or jecxz push push into or push mov in inc mov add jl cld sub jmp loope or cwtl test cmp push outsb xchg jnp or movl cmp cwtl pop cmp (bad) push dec cld test sub pusha mov cwtl cwtl and sarb or mov pop mov icebp fsubr mov lds aaa (bad) fcoms mov mov cmpb cmpsl and pop mov lock andb (bad) ja (bad) lcall add push and cltd repz test add xor jo pop push sbb imul (bad) mov lods or lret iret jp mov pop sbb cmpsl cmc push test call nop dec fcoms aad pop loope mov call jg iret sub int3 xchg dec push cwtl push ret sub sub loopne inc jb into addl sahf xor jg out call pop daa push add mov jle inc into aas inc fs dec cmpsb mov enter inc push loope movsl mul xchg lods inc cli repnz loop adc inc in clc dec inc orl xor aas or xor cmp icebp icebp daa push sbb sub xchg mov test mov jb cmc orb adc cmc nop or out pop outsl xor push jmp mov rcrl add mov sub lods repz push inc dec mov xchg lret test sbbb sti or rclb loop or out daa xchg mov stc call mov adc daa sub arpl (bad) mov je sbb and outsb or sarl dec push xor xchg mov mov add inc orb adc movsl jbe andl sbb ds add testb jmp daa lock inc jns std xor mov push (bad) addr16 orl in pop mov fwait (bad) int3 test push decl and inc pop movsb jae addb dec stos (bad) or mov sub mov cmp add test scas orl cmp (bad) jbe cli jb repnz in jp test sub jbe call and iret mov ja add xorb mov ds addl data16 inc inc or cmpb jge stc repnz sbb xchg testl inc mov jne cmp adc or sub dec push (bad) cmp xorb adc xor xchg xor int mov sub rclb lods jp std mov ljmp mov (bad) out sbbb scas and lock inc mov loop sbb cs cmpsl into mov and jmp xchg data16 lret xchg sbb inc jl pop test mov pop mov add fwait bound enter sub cmp push out sbb xchg (bad) orb cmp mov sbb mov and jne addr16 push push fstpt mov jo adc fs (bad) cmp mov sarb cmpl insl dec ret add out call test jle shrb adc xchg or fcomps mov pop pushf pop stc lods dec repz inc fsts sub pop loope cmp pop test mov data16 pop mov mov adc and mov fisttpll dec roll out rcrl insb les int pop call nop sbb fwait bound dec cmp js ret test add or (bad) loop repnz adcb movsl push cmpb clc cli orl nop add and repnz andb and inc cwtl jne or mov andb jmp div add push mov add cmpl outsb pop cmp cwtl pop (bad) bound mov add pop xlat fs leave test loop mov mov popf loope pop aad and pop jecxz js or cld iret pushf cmp xchg insl xchg data16 data16 dec mov cmp nop fistl mov roll inc mov insb cmp subb xchg xchg sub stc push frstor xlat lock cmp test addb mov cli dec xor or sahf sbb imul mov sub jne sub (bad) call jl daa jb,pt aam inc nop insl mov outsl testl lcall pusha idivb fnsave fisubr test xor andb push jecxz mov add cmp incb sub push loop ss test dec test pop dec addr16 inc push mov enter mov pop fwait adc mov mov aam mov pushf cmpsb clc pop pop mov xchg enter movl adc int3 inc out push test jne adc (bad) cmp lahf sbbb lret aad pop clc sbb mov and imul fsubl xchg fwait bound jecxz jg dec pop and or inc es subb std fidivl inc sbbb pop and loope jb sub (bad) arpl sahf mov inc cmp mov xchg aad or and neg out inc test test sub add das jbe xor sub jl mov call ret popa dec sar jl int out mov adc fwait sbb dec push addb xchg dec lahf push inc test sub inc mov mov sti xchg pushf pop mov xchg addl test out sti xlat sbb (bad) xchg mov int insl push data16 imul push fadds fs arpl xchg push stos xor loop lcall fs cmpsb pop cmpsl daa imul and popf and xor cmpsb pop cmc cmpl sub xchg repz leave subb popa lcall push int sub jae in subb stos mov aam push and sub push fldcw cmp xchg aaa test pop out nop imul sub gs fsubl (bad) dec dec mov mov jno push mov ficompl (bad) mov ret cmp jp inc dec mov xchg and inc jmp nop (bad) jle test or or addl in adcl cmp pop sub pushf hlt int3 neg or xchg iret add add shll push cwtl adc fiadd xchg out and mov xor or mov jecxz daa adc js mov mov fadds cmp or sarl popf imul movsl mov jl sub inc iret daa cmpsb mov dec hlt cmpsl faddl cwtl cmp xchg inc pop xor push jecxz leave mov adc inc jl outsb mov add push (bad) lea aas push inc ret lock xor mov loope insb mov loopne aam mov les popf rol push jns mov adc and sbb js out fsubs pop cmp loopne (bad) jbe ja mov xchg in jns adc adc inc push mov jno cmp in sbbb lret xchg or or jb mov dec sub xor push insl (bad) push sub mov (bad) xchg jmp daa fwait xorb xchg mov aas andb sti sbb or and rcrb int or cmp cmpsl fisub fwait and je fisubrl int3 adc mov lods and mov ret fcoml and hlt mov mov add xor test push lcall repnz adc cmp xchg test jb sbb (bad) sub insb clc out ffree sbbb mov adc repnz loopne sbb mov push aad xorl mov imul mov enter mov popa jne mov nop or insb daa fdivrp xor test loop jbe roll jnp dec mov outsb sub push sti dec push bnd mov orb dec jle cmpsb test mov sahf adc lds inc mov pop xor xor mov xchg addb fadds dec jecxz mov mov dec stos xchg xchg xor dec xor repnz inc mov icebp es cmp (bad) mov out add adc (bad) (bad) loope adc insl sahf push push in cli jb clc stos or or movsb push jl or sbb inc mov int3 sub div xor ret xchg imul add push cmp es je sahf and cmp shrb test pop jnp nop dec incb insb xchg and sbb pop jno push push cmpsl cmp sbbb das faddl sub pop cwtl dec test adc mov (bad) in int xor hlt push mov scas xor push mov aas (bad) mov push test sub stos enter adc adc loope pop or mov nop push jae fistl sarl imul jbe sbb movb bound mov xor mov lret cltd fwait or repz and push and jne jl push mov mov jle xchg sub loope in js sub dec mov bound push sarl movsl cmp test xchg fwait loopne pop xlat pop xchg lea xor rolb in or xchg and cmp in mov cld out push mov mov repz ljmp clc add mov nop add cmp fs and and dec dec test out mov jne mov rorl add adc (bad) mov mov hlt add sti pop sub add mov mov add stc xor sbb in or andb cltd fsubp push adc jno mov fisubr test shl pop xchg adcl divl arpl sahf pop cmp and lea fstl cmp xchg cmp lahf leave adc xor mov cld pop nop pop mov sub mov cmpsl into cmp adc adcb xchg lcall xchg imul mov and sbb repz stc xor pop inc lea xchg sahf cmpsl pop jle jnp push (bad) test dec hlt cmpl sbbb cwtl or (bad) adc divl sbb lods js mov mov stos pop lock loope outsb (bad) enter out fucompp fisttpl sbbb sbb pop icebp xchg mov xchg test pop shll adc lods push outsb pop fcmovb clc jno and dec push fmuls add sub mov adc sti addb or xorb pop adc adc push mov test and lret xor mov dec cmp sbb xor out xchg data16 (bad) nop outsb in lret (bad) lahf cmp inc mov mov mov dec out pop push jb test int pop clc (bad) roll or rolb lret mov inc mov lods (bad) (bad) cli mov xchg test fwait insb sbb push or sub shl push xchg subb or stos movsb sbbb push xlat nop ja xchg push or imul loopne mov out mov int mov inc subb aad cmpsl sbbb insl pusha cmpb push sbb push xchg adcb mov nop push loopne jp test sbb jl jno mov sub cmp loop jno and ja jno push sbb mov imull in push aad lea es (bad) lahf xchg mov adc repnz cld jae scas orb lcall aaa cmp or (bad) je pop jb test jno jmp addb loop mov rclb dec mov lcall test (bad) cmc jle nop mov inc sub xchg jl add pop loopne scas jmp sub dec mov mov cwtl das xchg mov jmp push ret jns test xorl je dec mov cmpsl fnop pushf in cld lret jecxz popa sub mov insl or bound fstpl (bad) andb cs mov cwtl lcall nop bound or (bad) mov test jo idivl mov xor dec xchg divb test jge xorb mov (bad) or cmp add mov push je mov jl fcmovne add inc add popa jp test jl xchg test test mov stc xorl cmc (bad) in inc enter stc xlat push cmp dec (bad) icebp mov push mov (bad) pop pop mov jne inc out fcoml lods inc inc push xlat jmp mov fidivr loope and inc cmpl ret popa jmp in ljmp push outsb jp (bad) outsb cltd repnz pop adc cmp (bad) std ret enter lock test fmull pop push (bad) mov jle lods add int3 cli loopne sbbl in jbe dec cmp xchg jmp push mov xchg nop jnp into push cwtl add mov xchg jae sub add cmp pop mull enter imul imul sbb gs add movsb rcl std mov adcl lds lods pop (bad) rol (bad) cli mov cmp rcll test int test and dec movsl mov mov lret mov cmp in (bad) test loope sub enter clc movsb rcrl pop out jno push icebp (bad) pop mov outsl sbb outsl adc stos imul sub lret pop add insl outsl push pop or fdivrs jae enter mov (bad) jbe add loopne stos ss push (bad) in bound fsubl mov xor andl jne inc outsl inc insb pushf xchg stos sbbl movsb mov xor pop (bad) incl in sub cmp into dec dec xor mov xchg int3 push loop xchg adc enter sub inc psubb sbb rol loopne pop mov mov lret shrl dec push (bad) pop cmpsb mov iret dec clc iret or out shrb (bad) cmp xor jns add sub int3 xchg mov mov icebp mov (bad) daa lret imul sti inc aam add ljmp clc push (bad) add mov xorl sbb inc mov lock gs gs negb inc fsubr dec insb mov xchg inc or jp sub call jo fcomps xor in insl mov addb in loope fnstenv gs in add lods cwtl in mov xlat push test shrb xor cmpsl enter jae jle cmc add xorb repnz sub adc int3 sub cmp (bad) bound test jae stc cmc imul (bad) repnz adcb clc push sub mov (bad) ss dec inc sbb lods jmp out pop xrelease mov stc xlat adcl inc imul push adc fild jecxz aam bound inc sub pop push add outsb (bad) sbb pop jno aad lock push pop rcr and faddl call mov cmpb pop int outsb add orb and dec and xchg cmp push xchg fisttp xchg mov push jecxz cmp int3 and in cmp ds leave bound stos orl push pop sti xchg mov inc (bad) xor arpl cmp aam mov aas nop cwtl xchg mov leave sbb add sti sbbb jno and sbb xchg mov je mov sub leave pop jns push xor stc dec call xchg mov outsl leave icebp and add movl xor sub sub inc fwait mov mov add (bad) mov test fadds stc cmp or test iret (bad) cmp xlat add and movsb push notl mov mov jbe sbb sbb xchg add jno add adc pop pop fisubl movsb cmp sahf xchg and sbb bound dec and push cmp or ret pop insb and jmp les pop (bad) in fs adc xchg and cmp arpl cwtl xchg cltd loope test data16 sbb scas movb sub test daa cmp test rorb pop cmpsb jp dec push mov (bad) out push bound lods (bad) daa ficompl mov fisubr imul mov pop (bad) aaa fsts sub pop or pushf adc mov sub cltd mov mov or (bad) cmp addr16 jb aaa push fsubs pop (bad) dec add ret imull aas iret sub adc shrl sub call xor call int3 arpl push and sbb xchg and inc insl and mov mov push xchg ret lods fsubrs (bad) xor loope mov sbb mov ja xchg push (bad) cmp ror add enter nop jg sti fadd das decb xchg aam adc sarl jg pop xchg bound inc (bad) cmc gs push addb and outsb int fs enter fnsave inc in fucom inc cmp ja test arpl jne stc or cmpsb jb fcoms lea ss mov add ret xor and cmc insl add movsb (bad) mov gs xchg fmull ret xchg test xor push nop sub mov outsl js xabort sub mov cmpsb into mov daa jnp sub fisubl lods (bad) mov dec push xor or xchg fistpl popf (bad) jl fstpl clc fisub and jo jno test pop hlt sbbb lcall xor sub jmp test cmp push sub bound fcmovu xchg popa out add xchg dec mov leave mov xchg jge xchg cltd movsb inc mov adc add or or fisubl test nop mov div dec test jge mov xchg sbb mov adc enter popa mov dec fwait andb popf ret add dec cli mov and test jl sbb push dec and nop cs dec leave xchg adc and scas fistpll stos les lds cmp and xchg (bad) jp addb sub bound roll test jbe push fstpl push mov xchg aas mov stc xor test aam cltd subb pop je jo lods pop or lahf shlb (bad) into mov adc out arpl mov inc test aaa pop ficompl arpl js and test aam xchg outsb pop cltd push sbb js loop sbb push mov add cwtl sbbb cltd push pop pop sahf pop adc xor xor or rcr xor pop rolb push xor das pop rolb jb stc add outsb sbbb cli add fcoml mov jl in enter cmp aam jb sub test lods xchg jb lods sbbb in add add mov fiadd aaa cmc dec stc cwtl xchg frstor jnp roll pxor sub xchg cmpsl add mov out sahf pop push fnstcw xor fcoms sbbl sbb push adc fildl inc pop sbb add adc xchg cmp fs sti clc adc sub pop sahf cmpb cs outsl and jp or mov jb sub iret incb pop mov mov scas sahf or cwtl xchg mov sub sbb sub jge cmp repnz xchg fisubl xor loop pop (bad) lcall mov push jg push add pop and gs into and shlb (bad) push jle mov mov iret test and and cmpsl and addl into iret adc incb fdivl add lahf outsl inc fisubrl mov loop cs fisubr dec test nop lret and ja ds gs inc and push inc push jecxz inc sbb loope mov jmp stc lret mov lcall cmp lds sub into enter movsb iret mov fisttpll jnp push xorl push push lods xor jge iret notl test xchg cmp adc addl fisubr inc add push sub test jbe add loopne mov test jbe daa mov nop jmp mov sub dec nop fcmovb mov shl and stc dec imull icebp add rol cmpl scas in lret jle shlb mov arpl dec adcl dec jmp inc fnstcw sahf imul jbe xchg jg push mov pop xchg pushf bound jo xor sbb jle or mov aad iret outsb (bad) xchg fstpl jno sahf call out stos xchg xchg jge cmp mov cmp pop out cmpl les ret loop lds out mov in jne jb pop outsl xchg pop pushf mov nop dec mov ljmp sub jecxz sub orb stos insb jae (bad) push jbe test xchg (bad) imul pop and push sar add pop in cmp cwtl pop adc inc jg push sbbb js xchg imul rclb fildll pop popf es adc repnz adcb push shlb xchg sub pop mov das test clc cmp add lret cwtl lea push movsl jae testl jbe cltd pop loop or lock enter push orb out test inc xor inc or fs (bad) hlt or fadds call aas ret mov sbb std or sbb push dec and ljmp jp xchg xor push jge (bad) lock orl (bad) or es fbld push add inc lock iret out inc mov outsb or nop lods (bad) xor (bad) fucom add cmpsl (bad) fcoml mov test sti push (bad) xchg mov mull cmp mov xor adcb das sub loop (bad) scas mov (bad) push mov xlat inc mov xorl mov addl jno mov add lahf and mov push add inc push mov pop fdivp xchg mov inc int3 orl rorl dec subb sbb bound nop inc into je dec jecxz mov out aad insw inc add out jne adc xor js imul cmp lcall (bad) mov xorb sbb mov push jns xchg or sahf out push cmp bound outsb sbb mov push and or pop addr16 push sbb sub xchg scas sub test (bad) or jmp sub push roll xor (bad) mov lock (bad) xor or jo pop (bad) (bad) jno dec xorb negl push push sub or in fldcw outsb jmp inc jne mov cli (bad) mov ss ds orb fwait test sub mov fildll inc sub test inc jg and sub adc orb je (bad) into mov aad outsl adc lret (bad) push cld adc xor loopne adcb jecxz push jno stc or std mov adc frstor cmp dec pop movsb std xor inc stc xchg xchg daa nop test push test (bad) mov jae lds adc mov int3 pop movsb jb mov pop into push inc (bad) xorb adc xchg fs imul (bad) xor jbe jnp call out mov jae cmpsl sub lahf fldenv and cmpsb pusha adc clc std lcall lods push fstpl test mov lea and push mov push shll xor rorb int cld scas mov lret mov int sbbb das imul pop pushf lods scas jmp xchg mov and aam aas cmp cmpsl insb lcall inc adc stos cmp jb mov shll cli mov pop (bad) cmpsl xlat sub ss int pop loope enter stos mov (bad) fcomps movsl dec pop clc sbb fs jmpw (bad) adc sbb (bad) sahf push stos pusha movsb mov dec shll mov scas incl mov cmc mov rcrb cs aaa aaa push test pop fstpl les insb jno das in in mov inc mov mov dec test inc inc fstl sbb ficomp loop popa adcb xlat enter dec add lods pop arpl cmp xchg pop mov (bad) cmp fisttpl mov incb add test sub movsb xchg popa lcall fcomps adcb popa xchg incb daa mov xor xchg fistpl and jp inc ret jmp adc int3 pushf jo cmp fadds gs ljmp push enter cld es sbb dec lret test or push cmp std adc (bad) sahf loope mov (bad) mov xchg iret inc fidiv jle das mov push fistp xchg iret outsl or lods xorl sub xchg add gs test ror (bad) cmp jae iret in xchg sub lcall iret xor (bad) mov mov and nop test sub jmp mov out scas dec or hlt pusha pop fbld jo xor test fnstcw and push fcmovbe sub or jecxz and jae push in jnp out cmpb or fbstp xor mov mov mov sbb inc lods cmp lock dec mov out inc mov outsl inc cmp sbb lods adc je xchg push ret mov xor mov cmpl mov jnp push inc mov sbb jg das nop test and pushf fdiv or mov pop xchg sub mov nop loop arpl cmp imul movsl outsl mov jnp sbb ret and sbb sub ljmp mov cmp out adc mov mov mov mov jmp mov jnp test push and cmpl or (bad) notb mov cs mov lret inc mov pusha je xchg lahf sbb fsub sub jg xchg mov jl xchg dec cmp dec inc push xorb rorb (bad) mov je sub adcb pop mov or js lock imulb test subb test das sub sub pop mov inc mov dec lods mov mov adc jae mov leave test getsec lds mov push xor mov movsl aas pop out and inc cmpsl xorb daa (bad) lods pop mov mov xchg fs test xorl jmp in ds test adc imul loope and out icebp cmpsl clc scas push (bad) jge and sub hlt mov ret mov sub mov push cmp jb jno and xorb dec cmp movsl (bad) sbb or jb pusha or and aaa rcl test fsts test sahf daa aad inc cmpb or jge repz aad arpl jae sub add movsl push (bad) outsl jb sti sbb fdivrl ret into bound psubsw mov insl xchg fwait sbbb stos mov xor mov add mov and loopne cmp and jne adc sub aad xchg sbb mov stos push pop pop push (bad) jp push pushf cmp xchg pop ds cmp jg mov pop pop or and bswap jmp cmp add mov jle pop jl (bad) movsbl fsubl imul pop xor les aaa mov xchg cs iret xchg jnp sbbb sub xor sbb sbb fiaddl push neg jl cmpsl js (bad) mov xchg mov scas imul add lock push push push xchg inc jmp sub push mov pop test leave xchg push push xchg mov and (bad) lock pop add fnstenv cli in orb popf andb pop jecxz push lods outsb aaa xchg xorb pop mov out je lods dec push xor cwtl mov mov adc jg or iret das lods jl pusha andb sub and xchg jae cmpsb jl pop add orl lock pop sbb cmpl adcb add cmpb loope mov data16 test pop in cmp mov clc xor cmp adcl mov inc cltd enter jb imul enter jg add aas cmp enter jo (bad) mov xor iret inc sahf pop test loope aaa sti (bad) popa push rorb std mov xchg xchg addr16 sbb les cmpsl pop pusha in mov mov cld sti or add movsl clc std cwtl subb xchg scas cmpsl mov addl cmp arpl jo test in subl pop andb and das shrb scas mov fwait sub cs jp or pop add shll mov insb xchg inc xchg clc lret leave rcr adcl pushf mov xchg xchg popf loope mov cmp pop mov test or pop mov or sbb popf (bad) loope orb push mov mov movsb mov jnp out test fisttp (bad) out cmp data16 subb mov (bad) insb jecxz adc in pop cmc int3 aaa adc testl cs mov dec addl fist add enter xchg cmp pop sub int3 jecxz xor mov cli adc adc arpl iret aad dec xor mov or cltd lods stos sub lds xchg lcall fxch in fsts add sbb mov (bad) clc cld dec stc out fdivl movsb repz and ja push cmp adc bound rcrb enter cmp inc sbb xor push mov cmp pushf xchg fisubr sub push dec iret xor std pop daa inc sbb mov jns add pusha andb repnz xorb push test cltd nop jns push stc mov cs jle push mov adc sbb clc mov subb addr16 xor inc aad jg mov imull rorl or xchg add inc test mov subb add bound add orb in sbb lock hlt cmpsl cltd push sarb fxsave arpl xchg loope sbb rcrb out cwtl jge pop popa xchg imul (bad) xchg loope shlb and stc adc fmul iret cmp jns sbb mov mov orb in (bad) cmp fiaddl and cmp sub sub insb jl cmp ficompl loope lods adcb enter add rorl imul jl mov jb incl mov mov and xchg inc mov adcb orl and pusha nop jno cmpsl xchg out outsl pop sahf push xchg in mov add idivb xchg movsl pop loope js inc adcl imulb pop lds adc fiaddl xchg bound cmp ss xlat subb aaa add push sti or sbb fs xorb lock test stc adc sub and adcl ljmp push fadds push xorb mov mov jnp (bad) xor dec sti jno dec (bad) subb (bad) jp or cmp arpl adc test mov sbb and inc jmp xor call xor jae pop jbe jb (bad) cli adc mov testl sub data16 xchg imul out mov sbb adcb mov and ret xchg jo jns fwait mov ljmp or stos stos mov (bad) lods (bad) test imul push addr16 push addl test inc out orb (bad) cmp dec mov nop lea nop sub cs push add pop (bad) jae jb pusha mov add add add popf cmpsl jo push ret mov or das in addl mov (bad) imull cs insb lods popa or adc sbb (bad) cwtl cmp popa pusha leave (bad) popf out dec and in mov andb outsb mov roll mov adcl daa shrb in adc sub outsl mov enter or aas inc pop sbb addb adc das fcoml fwait stc or mov (bad) add fmuls ja or push xor add das test in popa sub nop inc add dec pop nop fcompl xorl sub adc cmp adc pop jle call pop jmp mov fwait mov push xor loope test push insl xlat push jl ds or mov xchg mov aaa aas xchg int enter lock (bad) mov nop push add (bad) mov add mov (bad) in mov in jmp (bad) xor mov xchg js imul add mov inc aas pop jmp add jle pop int3 movsb sbbl add stos insl daa add call ss fxch fldenv jo stos and ficomp xor lcall les ret jl rcl fdivr inc inc mov out rorb dec xchg pop xchg adc adc push adc sub inc jl std add iret xchg icebp icebp int3 xor push fmull jecxz and sti lods push pop pop fwait (bad) xchg lods cmpsl icebp test jmp div repnz scas popa jae xchg (bad) mov or idiv xchg xlat popf addr16 lock mov or fstl add push pop cmp int3 xchg scas mov mov adc mov mov cmp out push push push cltd rcll sub outsb ds mov data16 lret jle mov push bound xor jle sbbl (bad) jecxz sub mov add sbb dec inc add mov push push loope sarb test adc or divl clc cli push (bad) fs cld (bad) bound ja mov insb bound (bad) sbb stc lds negb hlt sub mov movsl mov mov sbb test push and mov mov dec rolb mov sub xchg and inc mov int jl imul push addr16 test iret mov xchg mov icebp mov and or fiaddl sbb inc iret sub cld fs push ret mov mov fbld xchg jns ret inc dec jge and (bad) push push pop lock out jno rcrl pop mov stc mov inc loop loope inc inc jge mov jno xchg ja push jecxz inc sar jnp add ret (bad) xchg add mov scas cli add xchg clc adc sti sbb xorb push lock test adc adc and imul dec dec jne fsub gs pop movsl mov lods mov xchg test xor orl aad insb nop aaa test (bad) cltd gs xor cmc loop sub test sahf mov mov ficomp mulb iret movb push dec and int dec enter push mov pop mov fildl adc cmp adc or nop imul xchg lds cli xchg cmpsl mov pop mov jl mov ljmp adc xorb xchg sbb leave mov xchg pop cld pop data16 sahf xchg pushf or push push test xor adcb mov mov test or cwtl bound out adc dec pop addb sahf and adc mov loopne mov inc sar xchg cmp test fldcw popf (bad) lret fildl cmp mov test jo mov adc (bad) xor mov jae sub frstpm(287 out fldl es mov cmp loope sub adc mov das test faddl ret adc les mov or icebp push test cmp mov xor xor sbbb lahf test popa inc mov in or movd and and out pop pushf andb sub sub xchg jecxz dec mov addb dec rcrl and loop jbe cwtl data16 jne std incl hlt mov outsl (bad) (bad) aaa rcll call inc or add leave in pop dec adc xlat pop daa iret loope sub lret mov mov repz xor sub xchg (bad) pop inc sbb mov xor stc mov aad adc psubusb mov add or push xor inc sub test hlt mov pop lahf and addl test adc je add mov xchg pop jae jbe push movsb test xor inc pushf mov xchg push pop xor jno fsubrl mov stos int adc in mov push jmp adc mov into adc sahf sti out in (bad) loopne daa cmp movsl (bad) les xchg ret push or dec fcoms repz daa or je fsts fdivl fisubl mov icebp inc notl xchg adc fidivrl movsl nop mov cmpsb push fstpl ret cmp push loope mov imul jmp jge test sbb mov adc pop insb fcoms cmp sahf mov cs (bad) push out cmp in jne adc jae clc inc mov ds loope jae (bad) arpl mov dec scas lret xor mov cmp xor addr16 stos push cmpsl push loop fildl (bad) pop mov cs push jae andb fcomi adc mov adc jmp mov xor sub aaa sub (bad) dec xchg repnz mov je jp xor outsl jp jns roll xchg or faddp jnp adc mov add in leave mov in add add pop ja mov test enter xchg mov cld (bad) jb ss cmp ret and mov in les jae xor call inc (bad) movsl addb fdivl cmpsb cmpps test push js add test adc shll push loopne mov dec mov ret mul call add sahf inc mov stc cmp adcl loope and or ret ret mov int3 ja push sbb es sub mov std sub xchg adc js sub mov call out or out shll lcall or jmp mov fldcw mulb nop cmp faddl mov (bad) rol jbe jo push shrl ret inc add out ds mov mov (bad) add fldl arpl mov mov mov cmp (bad) xor add shrb pop andb faddl into jnp sub addl es inc movsl jns push cmpsb xchg mov (bad) leave fcomps cs movsl cmp hlt js mov jnp popa inc mov xor arpl popa imul xchg jo mov inc (bad) xor movsb mov aad add push sub dec cmp and push lds stos mov sbb xor and sub jnp je adcb jg push pop mov (bad) cmpsb js mov test sub sub pusha mov arpl push sub ss push enter jge inc adc adc lods inc or pop cmp stos sbb fdivs roll push subb mov xchg addl mov or fistpll lock sbb lahf roll andl loope sarb sti fldenv cltd es push fwait cmc sbb dec std add loop mov mov mov or jbe std sarl mov inc add xor or lahf outsb out cld test jno xchg popl jg jp rorl mov iret inc cmp cmp xchg mov xor mov lcall cwtl jne mov mov xchg outsl jno push nop out sbb test dec jecxz mov std scas mov xchg mov loope cmpl mov mov pushf add dec gs add sub push cmpsb popa xchg cmp push pop jne and mov mov sar in xchg push test mov jne (bad) std sub seta cs adcb adc jbe (bad) mov add push fcoms sbb push pop (bad) aaa call in lods jae ds sub push lods inc xor xor out mov in cmp adc mov aam pop subb dec or and xor push cmpsb xor mov adc mov and (bad) push dec loop add xor rcl stos push je xchg jbe mov arpl adc fsubrs repz aaa stos lds pushf pop orb ds es jnp jo adc mov push lret mov scas pop sub test mov mov add daa call pusha fcomps icebp aas xchg dec adc subl repz cwtl dec inc cmpsl inc faddl jb push xchg mov cmp test loope mov rcrb aas add aaa cmpsl xor fimul fsub xor lret out int3 dec jl neg sbb jmp out inc cli outsb cld fdivrs iret jnp fsubrs add sahf arpl test ret loop mov movsl cmp mov adc push scas jl popw inc in mov xrelease rclb inc ss out or jmp clc insb jo cmc nop xchg insl ret das (bad) std dec push addb add imul dec out (bad) add dec and mov xchg ss mov sub adc cmp sbb sahf jbe push sub in pop (bad) shll orb sub and imul push imul enter repz aaa lds add mov add mov cmpsb jle in scas dec jae orb leave jp pop mov cli pop sub ret dec push or push xchg mov out xor pop pop jno test mov adcl push adc jbe push dec jb mov cmpb popf and sub lahf sahf shrb xor fbld add movsl xlat lret dec push mov cmp adc push inc ror jmp cmp sub repnz icebp roll cmp xor xor mov movl repnz pop insl cmp out aaa out mov pop cltd idivb xchg add inc inc or popf (bad) jae fisttpll inc fldenv cmp or gs ljmp (bad) sbb push enter push icebp test add sub and or jbe (bad) aad mov rcr ficomp push enter jae mov cmp mov fisubl xchg into imul sub jno adc mov ret or xchg jae adc test stc fldl2t adc and leave aaa (bad) fdivr iret out cmpsl xor mov adc inc push or add sbb lods popf pop and mov mov or cmc (bad) aaa gs addr16 int3 mov cmp outsb shlb (bad) adcl adc cmp sub add (bad) cmpb sub jmp out stos jno jg pop inc xorl xchg cmp (bad) cld cmp pop movl inc loop mov adc lahf and cmpsb test push xchg arpl aas lret shll or pop insb mov (bad) push sbb jne lret add loope orl cmp lret ret popa jne add sub stos stos popa and add fbld mov ds mov lret ret fsubr cmp in xchg (bad) sbb ss in popf stc dec push sub jecxz iret cmp or lds mov aam mov mov xor fisubl dec add in lahf hlt adc leave or cmc xorb lock dec iret pop scas mov push adc neg data16 mov pop data16 loopne cmpsl add push (bad) mov push sub inc fsubs mov xor pop add or jbe mov adc mov out and xchg data16 mov scas popa xchg lock adc in (bad) mov scas mov test mov ja cmp dec adc sbb daa mov incb add add and mov std xchg subb push (bad) in mov mov cmp clc lret adc mov mov fwait mov repnz adcb outsl adc test orb rcr in xchg mov dec lods shlb in mov and xchg (bad) sbb jle mov cmp fdivrs sbb insb xchg cmp xchg jmp xchg insb imul test or pop imul jae adc addb xchg cmp cmp xchg pop lahf mov fsubr (bad) xor jmp dec ljmp pusha notl (bad) stc dec jg jo adc outsl mov fxch imul pop mov xor clc pop sahf pop xor (bad) mov pusha xchg lret dec aam xlat mov std jo inc pop (bad) jmp addl fcoml inc lret outsb andl mov push pop jae fs cmp mov jne negl outsl fcomp insb or (bad) icebp addl in daa sub imul out adc or aaa or inc cmpl pusha and mov adc fstps mov rolb mov mov data16 sbb jo cmpb dec fs ret aaa push inc js add xchg xchg adc (bad) sbb mov daa enter lea push add adc in add fisttp mov movsb jge cmpsb enter addr16 scas fwait (bad) ljmp mov repz mov movsb pop andb sbbb stos hlt xorb xchg lods push dec mov fcmove test test jmp sub jne lret clc (bad) jecxz aam cmp add push cmpsl add jne jb xchg cmpl adc aad scas cwtl (bad) lret sub mov cld add jb mov les cmp inc lret ss lods (bad) jbe pop pop test pop xchg cbtw sbb adc ja (bad) pusha movsl loopne push lods xor xchg jl int jns inc jg test enter test lds xchg data16 call or aam xchg push arpl cmp jo dec mov fiadd dec orb (bad) enter insb loope daa loop jmp xchg inc cmpb lock mov cs xor cmpsb pop mov jae jb cmp popf pop inc orb or cld add xchg push shlb std sbbb into fldl mov aad insb andb enter movsl pop pop cmp subb fwait push push xchg jo jecxz xchg mov mov aad ja dec icebp in inc mov push jmp xlat pop cmp nop pop cwtl fstpt outsl sbbb jecxz,pt scas inc mov popa das cmpb mov ja mov rcrb fiadd mov sbb jae test inc pop fisubl and add xchg xchg iret sub mov xchg push mov imul mov cmp nop iret inc mov cmc mov sti dec cmpsl pop shrl clc or insb jl jbe xor es je or xchg mov clc out cmp xchg dec mov cmc pop pop inc xorb pop sbb mov fbld rclb mov or mov xchg out (bad) cwtl inc mov xchg sbb mov mov mov aas out ja cmp pop lea subl scas mov fiaddl test xorb movsl push inc mov push orb jae push add jge ret cmp cmp lods push push cmp lret mov enter imul (bad) push addb das sarb test subl sub aas mov add pop sar fistp or lret push jl mov lods test outsb pop push sbb sbb pop lcall outsl xchg mov mov mov jecxz and popf (bad) divl push adc mov sbb sbb push lock lret pusha adc mov lea (bad) (bad) mov pop add mov mov fidivrl gs std aam jg mov adc scas cwtl test fnstcw test int3 or jecxz,pn nop ret and mov sub jnp dec pop cli xchg dec xor jle cs mov xchg popa into sub sub cmp fcompl rolb nop in jle adc push xchg jne test subl ss inc sahf add cmpsl xor cmp mull (bad) out icebp cmpb push loopne sarb loop test inc xlat js add bound cmp inc jbe outsl (bad) xor jle push and push mov cmp mov xchg push out jb out test adc mov sbb pop dec fsubs sbb sbb fildll mov add test loop cltd mov fucom adc mov or xchg push and mov cmp fbld xorb mov sbb pop or jg clc pop mov jecxz sbb xchg pop xchg add mov sbb sub fldl mov adc jnp mov mov test popf out adcb movsl lret repnz pop sahf jg pop ja mov xchg movsl push fidivl (bad) sbb addb jne pusha mov mov dec icebp cmc add loop enter cmp lods cltd popa push add lods enter xchg sbb mov jl clc (bad) leave (bad) lahf add out pop fild jle stos dec in jbe in sub add je jne incb mov dec xchg push in movsl test xorl xchg push rclb pop cmpsb push sahf mul and in pusha cwtl fcomps and ret pop push xor stc xchg fldl lcall (bad) repz addb xchg out pop dec lods jge int jle xor sbb inc push and lods push jl mov mov push mov sbb gs std cwtl sub pop xor sahf pop gs pop in pushf push test sbb xor add mov xorb sub (bad) and idivl lret sbb cmpb rcl add out xorb cmp mov push push fwait orb subl scas rcrl mov fadds int je inc nop jae test xchg (bad) cmpsb pushf insl imul stos enter lds sbb xchg gs mov cmp xchg aas shlb jno and sbb fdivr pop pmaxsw js fwait out jbe pop test jbe ret push (bad) cmp loop and notl xchg loopne (bad) xor into rcrl stc addl or sbb mov sahf popa iret shr cwtl fs mov (bad) push les inc or loop pop mov insl mov cmc xchg cwtl cmovl jo xchg lock clc mov loop stos out lcall test lods xor mov inc push cmp mov mov xor adc stos xor std sbbl out popf pop bound das fwait push pusha hlt (bad) adc out enter sbb adc inc jbe sarl andb add movsb push adc clc mov sub shrd imul add or es inc roll mov mov push popa or mov push adc add push cmpb in adc cltd icebp xor inc test xor clc xchg mov xchg mov dec jp mov popa js (bad) sahf pop ficomp lret in mov test sub xchg imul pop pop cmpsl popa jmp jo xchg adc fcoms xchg push ja mov scas bound cld mov int adcb and jno (bad) sub xor fsts xchg fs lock out jns push (bad) (bad) jnp mov (bad) roll push pop cmp fs xor pop iret lock imulb mov jo xlat pop (bad) test ret mov insb push mov sub fs addr16 pop (bad) push sarb mov add push fstpl cwtl pop in ret imul xchg jmp into xor hlt (bad) icebp (bad) add sbb and xchg or aaa cmp add and call sti sub ret sbb cmpsl mov je stc mov (bad) mov mov pop ret enter dec das jns jg xchg adc or rcrb dec push lods (bad) test iret out ret fiadd enter (bad) jbe mov push mov nop lds mov test (bad) fildll orb lods in mov stos push (bad) gs test clc cld popa fdivrl test add mov or lods aad cmp xor repz jae je pusha nop outsl gs and and fcmovnb int3 movsl push add mov adc out test test jle jl and inc iret ror arpl sbb into sbb test cs sti cmpsl stos popf mov rclb push mov (bad) dec dec inc fisubr add mov enter add sub adc mov or movsl pop addl popa and aam out fmull std pusha test mov mov mov mov inc jmp sub pusha dec pop cs and mov insl nop push ror pop and loope cmc xchg int3 mov into cmpsl imul mov mov arpl pop inc jmp ficoml loopne (bad) bound fdivl iret inc and add lods fmuls mov cmpsl sbb gs insb fwait jae insl xchg sub test fs aas ficomp (bad) and or lock les or push sti insl push jnp frstor xchg clc jge stos ror pop and popf cld mull ljmp add fldl lret add (bad) lods xchg jo call inc jp inc mov pop cmpsl mov mov xor je outsl add (bad) hlt or in rol aaa out insl cmc cmp inc in cli jnp jbe repz and scas and add loop jp std inc lods test clc repnz fbld andl or xchg aam (bad) xchg mov xchg leave popa xchg xor andl lock (bad) repz rclb jns imul int3 popf test repnz adc nop inc dec sbb movsb (bad) les sbb cmp pop mov mov pop mov (bad) fs adc lahf in adc pop roll mov addr16 test pop mov rcrl leave adcb (bad) fnsave dec popa or lcall icebp cmpsl leave ja mov xchg leave jp push in gs sbbb inc int3 mov cmp pop cmp xorl cld lock pop iret mov cli pop aam mov push mov adcb dec push xor jb pop adc out push mov es idivb das mov cmp movsb adcb arpl sbb or jns mov add xor cwtl xchg jnp push xorl mov stos enter add mov adc push js xchg cmp cmp adc sbb jl clc mov ja inc xchg jb jmp and idiv das lret or mov xchg adcl and js push test je xor leave mov mov aaa lret cmp push data16 mov push stos xor sbbb stc or mov push test mov ja dec andb (bad) inc xchg add or or aad xor mov or push in mov ret cmp pushf (bad) call xchg cmp xchg andl jno andb push xchg mov dec pop rcll jno mov ret sahf lock icebp sti add or add jo cwtl subb xchg pushf push jbe clc (bad) jb popa test andb push cmp faddl mov xchg addr16 icebp inc cli subb add test out sbb xchg inc pop pop cmp jno jbe shrb insl jge ljmp xchg pop (bad) xchg sbb xor sub int inc fsubl in aad xchg dec enter int3 lods imul add and andb sub push xor icebp mull lds mov or pop aad mov in pop (bad) fs jg xchg pop xchg xorb jmp lea xchg mov icebp adc mov stos lea sub inc insb fcompl inc mov push adc cwtl das leave mov mov neg and pop or cmpsl nop xchg call jo mov rorl push sar mov jg cli (bad) pop mov test fsubrs (bad) add add mov call cmpsb inc mov fwait mov push mov or orl mov scas mov enter insl cmpsl call sub ret flds and push data16 loopne (bad) cld or jae xor xchg push cmc adc push fsubrp hlt sbb add movsl stc int3 das jp cmpsb ret in pushf mov dec cmp pusha lods test aam rolb xor insl sbb icebp int3 or mov (bad) sbb lret (bad) insl add pop (bad) testb insb xchg or push movb lret dec test xor mov pop icebp lods repz sbb aaa popa sbb inc fneni(8087 sub aas les pop or push dec movsl inc mov inc adcl mov lahf push sar mov out jl jge ficom clc and ret (bad) or aaa outsb sti xchg lods xchg and push sub cmp lret push xor push jbe sbb icebp (bad) rcll test sub repnz push ds dec cmp add into push sbb out arpl mov out insl xorb xor orl in jb xor xor xchg push mov mov mov and nop pop das add lods cmp pop nop add push mov or push clc cmpb mov mov fistpll pop mov jle in mov lock loop xor fs std mov (bad) jmp test pop clc imul int3 icebp sbb lds (bad) fisttp sbb out ds xorb and je pop int3 jns (bad) mov push pop mov jecxz xor cmp nop in fbstp mov xchg js das test cmp das or inc mov ja dec xor mov cmpsb push pop dec mov gs xor addb cld popf push dec push shlb (bad) dec test ss mov push cld xor lahf xchg roll lock arpl cltd jl lea xchg test (bad) int test (bad) push ds pop je mov stc push mov cmpsb cmp sub jl inc mov lods push xchg fwait dec data16 push aaa xchg add je push in adc jnp sbb mov inc (bad) nop outsb loop push repnz xor std sti fnop and scas jnp add mov repz ss adc mov pop push aaa out icebp inc xchg add xor fisttpl or flds adc sti fcompl jae in sub icebp xor fimul dec sti push aas pop xchg mov push jp inc and insl or push (bad) mov popa lods push ficoml in test xchg pop lods cmp int jl addb imul das cmp stos mov or push mov in adcb repz dec inc enter sub fcoms jmp stc push fnsave xorb jmp subb cwtl addr16 sarb imul aam lock test push out inc jno outsb subb xchg xchg and mov inc mov xchg popa dec fs pop je js mov outsb fmul xor xchg add sahf inc notl mov nopl test cwtl xchg fs movsb or movsb pop dec add and jecxz sbb xor movsl xchg mov fcomps cld inc shr jo repz aas push sbb mov dec enter fdivp xchg subl dec mov push nop pop popf es mov dec insb or jbe and xchg fcoms or and sbb lods mov push insb psrld andb xchg cmpsb and jecxz jmp fiadd bound push loopne inc jns in push addl imul (bad) jb leave and mov mov ret movsb mov jne jo push cmp or xchg test or mov sbb mov call mov imul fisubl movl xlat xchg jge sbb jnp xlat jnp ja les mov (bad) push loop jmp sub ret sbb stc lea inc (bad) int pop jnp mov iret mov scas jb lock adc jle test add arpl lods iret cmp ret add sub add test cmp sahf mov mov pop divl shll mov outsl iret movsl xchg loop clc dec insb mov test jne fildl iret add xlat inc xchg cmp mov popa (bad) scas faddl cmp push jge dec xchg sbb and mov add in cmp in mov cmp iret cmp mov mov dec test mov xchg jb and in cmpsb jae mov add pusha jnp dec repnz insl sahf jp popf inc out rorl data16 sub test mov in lock arpl inc mov mov pop data16 pop enter (bad) adc cwtl xor adc dec mov mov sub inc mov dec lods in pop inc sub jg lods add jns fwait cmp lret sbb inc iret lret mov das sbb cmpsl lock popf add sub fdivrs add cltd (bad) in mov and ljmp out lds cld lea test pop jg int dec xlat xorl xchg jl mov insl mov adc loope outsb xor scas orb push sub (bad) jl add loope pop stc pop fdiv xlat stos lods mov aad cmp imul sarl es cmp (bad) lods dec push push xchg xchg or jp cmpsb test (bad) mov stc push bound iret bound xor rclb xor xor sahf pop adc jge jne or loopne pop and inc xlat dec pop xchg cli jbe fdivl lcall pmaxsw fild sbbb cmp xchg mov mov andb pop pop jb xor pop xchg shrl jmp mov mov loope mov adc js push mov xchg pop jg nop add ficom adc (bad) hlt cmp (bad) leave andb icebp push cmp shrl inc mov cmpb stc cli inc icebp push and ficom dec xor popa (bad) ljmp jp jbe jmp cmp inc sbb cmpb dec test adc hlt jl cld dec adc add dec cmpsl icebp test xchg jno xchg inc mov xlat sbb and mov cmp pushf add cli dec mov cmpsl andl pop movb mov push mov subb xorl push nop fistp mov push pop pop cwtl jb sub inc nop fs les mov (bad) mov add cmp pop imul mov dec adc add bound and push sbbb xor cmp insb mov aad mov cmc nop movsb push sahf pop mov jo cmpb imul fdiv (bad) and cli or xchg mov mov add ret mov mov lret repnz adc push inc mov pop jae (bad) arpl mov xlat or icebp nop rolb (bad) lret fiaddl pop addb push sbb xlat jle mov rcrl push test nop loope adc fld cmp mov movl mov push iret mov test adc jl gs mov (bad) (bad) lock iret ret cmpl inc xchg bound xor rolb add pop gs fldt inc dec scas (bad) in jbe xorb ret sub mov push jmp push jne xor cs adc inc pop fwait xlat arpl cmc (bad) jne mov clc xor lock xchg fcompl cmc cmp cmpsl mov test mov dec movsb xchg mov scas inc movsl test xchg ror push push mov xlat rol outsb test jle or mov into ret int3 pop pop incl gs cmp add or jae add jo mov xchg les pop repnz inc push (bad) jbe adc lea aam pop inc insl cwtl xchg sar push sub and loopne cmpsl les in sbb xchg repnz mov daa fstl lea call iret and pop cmovb rol cmpsb xchg loopne imul lret and (bad) xor test orl inc dec nop in pop mov adc cmp movsb or addr16 cmp (bad) pusha out xchg (bad) rcr outsb leave sub cmpsb inc add adc add xor adc in add lods adc add mov scas dec jnp je enter mov std clc (bad) sbb jecxz xchg xor xchg pop nop sbb bnd daa adcl enter inc subl push pop push (bad) lea jne out js mov movsl sbb rclb cmp fimull gs nop out sub pop inc push repnz adc imul sahf test loope ror pop dec add sub lcall fcompl jle pop dec (bad) push mov jnp enter inc pusha iret or mov in dec fimull mov adc insl jo enter xor mov (bad) or cld aad out ret pop adc jg pop out and push sub xor add aaa jle mov inc cmp adc mov push movsb rcrl movl mov push rorl cmpsb enter ret (bad) mov push stos mov push xor aas mov lds cld pop insb lea orb and fisub ss loopne mov fsubrs adc lret push lods cwtl jecxz sbb fcomi or add sbb xor cmp out and stc xorb lea push xchg std mov shlb divb pop out testb movsl fs fidivrl cmc and fbld inc mov jp dec pop add mov leave (bad) sub test jp sbb sub push jecxz jl mov idivb pop orb push movsb pop aaa xchg movsl int mov add cmpsl psubb stos loopne cwtl fstl and push mov out adc xor movsl push pop xor movb mov test sub nop xor pop popf mov outsb or das fs in cmpsb enter jg icebp mov clc (bad) das lock test fsubs stos push cmp add adcl scas test or lods loopne icebp xchg imul leave iret sub in and clc cmp (bad) mov cmp test icebp adc bound out add dec xor imul push stc push xor cwtl cmp sbb mov mov xor adc loop xchg dec subb (bad) sbb sbb xchg jae xchg jmp cwtl and ds andb xchg pushf xor xchg mov jmp xchg mov adc testl mov nop xor mov push (bad) cltd adcb mov lret mov rorl jmp outsb js test (bad) xchg push dec shrb mov popf sbb aam addr16 pop fildl ljmp iret mov xor adc add add fdivrs pusha inc das mov sub mov adc mov or arpl push sub incb mov sub (bad) or xchg xchg (bad) stc sbb sub arpl adc cbtw mov lahf int mov popf sub aam repz jnp mov sub mov sbb sbbb into add xor mov fnstcw mov sub pop push movsl cs int xor in iret das xor sbb inc mov ss dec mov mov or in cwtl mov push mov pop ret (bad) jo cwtl mov lret jl scas nop aam or or or sbb xchg clc gs and pop loope outsl (bad) lret cmpb adcb and rorb loope adc addb jo pop cwtl cmp loop insb xchg je mov xorb pop fadds pushf lea sub lcall dec in imul movsb mov (bad) cmp pop sahf lock mov jp push clc pushf pop jecxz add test stc jno or ds gs and mov push inc shl std (bad) xchg add ficoml popf sbb cmpl xor mov into jbe sbb test scas out inc inc ret xor adc or lret mov xor es jl cwtl mov sub adc pushf add divl sub notb out andb inc movsl jmp adcb add sbb pop cltd mov cli cmp ficomp and test bound imul popa inc (bad) cltd pop out ret mov mov xchg inc jae dec lahf stc dec push dec cmp xorb sub mov test dec adc aas test arpl fisubl sbbl testl loop fiadd movsb mov pop test (bad) or cmpl pop or sbb dec xchg push lods push or adc stc and lahf inc mov lods addr16 inc addr16 add fadd mov cmpxchg or mov test call mov xlat mov popa insl pop add iret add lret push adc jnp test cmpb or call pop mov pop pop or iret jmp push push aaa rclb xor mov and mov xor jo,pn shr movsb xlat roll mov cmpl mov sub mov inc inc xor loop and mov gs icebp sub xor jb dec cld arpl test sbb pusha and scas sbb out add repnz loopne mov or jb jo sahf pop cwtl fs xchg test imul (bad) icebp pop arpl and lret stos dec fisubl dec add imul xor add lods inc push (bad) mov xchg andl lods movsb jae sub lcall pop aam mov push je xor lcall xor adc add inc xchg ret sub inc stos dec aam call std pop sub push fstl mov out inc rol mov sub cmp push out int3 xorb lcall xlat and xor pop push sub test sbb aad data16 mov sahf addr16 icebp adc xchg test mov enter xor daa clc jbe push bound mov lret insl mov shrl stos dec loope inc mov mov mov cli cmpsb in sbbb std push lods sbbb xchg mov ja fldenv dec mov mov fs insb mov dec dec icebp mov popa fiaddl mov pop mov lock cmpsl rclb test jae out cmpsb sub and repz cmp dec adcb lcall jns and nop lret xchg xor scas imul or inc xor aad clc nop xchg adc jmp ss push mov push jno popa jle fidiv in loope mov fmull xor aad mov pop in out sub test ret jle cmpsb inc xlat movsl mov aam and subb jle popf lcall adc test xor or sbb into imul or div dec enter sub loop lds xor test xor mov fisubl es xchg jg imul push andb lods mov cli cmp or mov mov inc jmp cli xor scas sbb push mov loope add sub adc pusha mov jmp add xchg outsb or loope sbbb add testl je neg bound mov sbb nop out dec cmp arpl mov mov addb mov mov jbe mov xor insl push scas inc inc or hlt pusha pop bound (bad) js enter xorl out (bad) mov jle pop ja xlat pusha xchg arpl mov in dec mov dec or jp repz js cwtl cltd fcoms stos xchg adcl (bad) dec in adc adc dec jmp icebp (bad) mov jl mov or push sbb jno push and shrb adc pop cmp xor sbb or cmpb clc add mov adc or enter les (bad) ljmp mov cs mov add sbbl fwait cmp push push aam cmc sbb outsb jo xchg cmp addr16 lret fs cld test jp and aaa pop and pop orb in lods mov and add pop push stc (bad) mov add mov (bad) call xlat pop xchg xchg jl insb add rol xor fsub in insl jmp xor jnp push sysenter mov ret faddl mov gs mov or cmpl cmpb jl cmp jno dec lods and insb xlat sbb jne lock fdivrl pop andb icebp or in add adc test ret ret fnop or rclb jo add out mov scas mov fisttp xchg mov in or mov add rclb adc jg and push dec stos (bad) test adc stc out pop inc jl add add push and test cmp mov popl mov cmpsb into add push cmp sub dec repz fisubrl (bad) cmp and rorl pop stc pusha mov push jns adcl cwtl icebp gs in jo jb xor or xor sbb push orl in int3 xchg in ss pop iret dec pop sub xchg cmp scas jnp jns loopne test fs adc xchg push outsl idivb aaa sub enter xor fmuls cmpl xor jmp lea cmp xchg dec push sub das adc mov xchg pushf mov lret gs fcomps cmc or test ss inc xchg adcb mov adc mov ficomp jle jmp sbb inc pop out mov call adc sbb push nop cmp shrl adc mov or subb mov jno mov cs dec mov sub or jno in xor (bad) pusha mov cmpl pop push jno xchg outsl xchg cmp jae sbb inc mov cwtl inc or add xor divb in and clc push adc call aaa enter aad pop mov es cmp hlt xchg xchg pop xchg pop add aas push out cmp dec stos addl nop lret pop cwtl inc test jp xchg xor fist push (bad) or cs in cs fsubrp (bad) jge mov jbe es jno mov adc or xor jns mov push jae pusha mov inc cwtl mov push jb mov xchg pop sbb or test stc cmp push inc jp test mov lds add adc mov xchg gs mov pop iret mov push rcr and rol (bad) fwait movsl jl mov xor mov fcompl out lock (bad) je (bad) int3 (bad) or xor cmp push rol mov jae inc add add inc inc mov jg mov rcl and inc add js lds add (bad) data16 hlt lret and lahf insl mov cs lea roll outsb push fisubrl int3 xor out ljmp std inc addr16 sub fcomi xor sbb in aam cmovge lods (bad) into add mov test cli jbe lret adc dec push cmpsl bound leave xchg sbb xchg addr16 int push scas xor or pop into push and testl inc sub gs pushf enter sub and pop adc ret movntq out lea scas lret lret jnp (bad) jne loop lcall lds pslld cwtl test jno jecxz inc fnstcw xor dec mulb push fwait adc pop jbe push or jp add or fadds jmp push adc loopne in jl jg xchg ljmp daa pop jg outsb xor in into inc dec jae aad (bad) int3 sub cwtl icebp out sahf (bad) pushf jns xor mov mov mov cs mov jns and pop loop sub jnp add outsb cld push jp test and inc inc inc rol push xor push mov scas sub pop pusha adc dec mov enter dec push push xchg mov rcll ds dec dec lahf cmp add ret call ljmp (bad) xor sub test lods xchg call movsb sbb mov jae sti add pusha sbb push pushf sbb daa cmp adc jnp jae,pt lret xlat sahf jg sbb inc lcall mov into loopne dec pop jae sbb rcrb ret mov mov adc adcb into cmpsl mov leave xchg test fcoms add dec adc mov and mov call in aad jmp lcall fldl2t xchg subb lods push addb jbe nop adc mov or cli add aas out lahf jmpw mov je in cmpb jg xchg int orb test movb cmpb jnp fldcw sbbb sub push sbb pop mov jno jmp sbb insl sahf rorl sub mov jae xchg nop adc aad push xor sub test (bad) cmc ret xor outsb lds push popa mov in mov pushf mov js aaa int3 push push fisub sub ret subb sub jmp test idivb call sbbb (bad) xlat push aaa into adcb fadds sub lods (bad) jns (bad) push cmpsb or add lock pop std cli addl or inc jnp inc cmp and cli pop enter xor push jmp add or ret mov xor shrl push pushf cmpsb (bad) jae jle addr16 sbb xchg or inc mov sbb rcll cmp (bad) mov adc lret stos and movsb sub out aad cmp xlat sbb and aaa xchg test (bad) pop mov subl fucomip cmp jg faddp xor iret adc in fsubrs add sub mov cwtl pop pushf inc pop inc sbb fcom inc xchg pop scas pop or subb (bad) stos ja add jg lret xchg insb aaa push sub test xchg out pop outsb inc out jl inc pop and in int sub lea mov mov dec push or shrb pminsw ja jns mov rcrb orb and rcrb jbe outsl sbb push cld adc jae andb idiv sbb pusha mov add cmpl adc ljmp stc or xor xchg cwtl cmp push leave nop out scas (bad) pop pop (bad) (bad) mov inc mov mov std or fild stos es xorb and fucomi loope and mov mov test sahf cmp cmp pop movsb enter pop lock ret fdivrs mov sub enter (bad) cmpb push mov js ss out dec aam push mov jp mov push nop sbb decl and pop fwait arpl push fistpll je sub or aaa lods or mov outsb dec xorb out mov fmull pop xchg and dec jae or and mov je push jae inc inc mov adcb push cwtl lods mov test cmp mov ficompl lock stos dec xlat add mov mov mov movl mov mov or sbbb (bad) (bad) enter inc test cmp xchg mov adcb jb les stos and cmpl jb xor xchg sub push adc inc jb jp insb jno cmp movl mov cwtl testl adcl out loopne cmp pop in (bad) xchg rcrl xor pop push arpl xor popl jmp fisttp mov stos outsb mov (bad) out add lock or rolb ja (bad) (bad) and jl cli mov sbb test sbb je xchg xor add je (bad) loop push mov push xchg mov mov add sti push test mov (bad) fcompl sbb add pop in sbb ljmp lret sub cs pop movsb incb or call ja push fisub pop sub sbb loopne (bad) cmp inc lsl lock sarb mov pop inc inc mov xor (bad) js mov sub and into jp leave jnp jp sub sbbl pop jge add bound jae push roll sbb arpl jmp mov cmc sub inc xchg xchg inc in cmp mov cmp pop js adcb adcb pop inc cmpsb mov pop fildll movsb mov outsl push mov sbb jno sarl mov dec aam aas loope jnp lds dec (bad) or test ret insl jg ret inc fisubl adc push fsubr arpl (bad) test xchg bound mov imul test sahf push orb sub imul push jnp mov mov cmp fcomp cmpsl enter sub sahf shrb cmpsb loope les mov loop sbbb out adc popa cltd and adc into push sbb test fwait xchg jnp scas mov adc mov cmp cltd rolb sbbb or adc add dec fstl mov xlat pusha fisubl and add cwtl notl in jg call push jo inc insb cmpb (bad) mov pop xchg sbbb rorb ja mov (bad) cltd fcompl add mov subb popf data16 xchg mov ret sbbb sbb jbe andb loop inc mov aad mov or xor or cmp dec mov imul aam pop inc or xor xchg mov test mov aam arpl mov lods cmp mov sbbb (bad) cmp into loop inc addl jge push sub lods mov jmp pop inc dec mov pusha xchg fistl addr16 loope imul andl and aas icebp cmpsb or lahf arpl idivl scas xchg jp and dec inc jl sub ret stc mov cmp add test sub push shrb ss (bad) jecxz dec or adcb insl stos xchg mov fcomps nop mov out xchg fcomps cmp ror xor lock daa sbb paddusw xor outsb cmp sbbb mov aaa cmpsb inc push test adc xor daa leave jle mov ljmp (bad) dec cli clc inc inc sbb loop sbb mov mov cmc (bad) (bad) mov inc mov jne cmc or mov mul cmp popf or mov sub (bad) incb mov xlat clc dec pop xchg jae jns mov fildl jb or inc or add (bad) stc jnp fs mov xorl push fdiv ret cmp cltd xchg ficom jae inc shrl dec mov addb jp sub addb or aas movsb loopne test push jecxz jns out pop pop outsb or out and mov in mov movsb dec or dec daa mov sti push lods dec test fbld insl push mov and xchg adc mov xlat bnd push fs mov xchg gs sub in mov leave xor into mov sub or sti inc lahf pop lcall lock scas jns test test mov pop jns add xchg mov sbb push inc fstp repnz mov inc ljmp or sub xor dec mov xor ret xchg arpl or hlt in andb and addl and imul xchg push xor xor sbb push mov pushf or cld incl push aad in popa jl pop mov scas sub loopne and sub fmul push pop adc lock (bad) lock adc or inc cmpsb aas mov jle push pop pop sub mov jnp sub push fadd call cli mov imul (bad) iret mov (bad) arpl shr in jle les add xchg ficomp iret arpl inc daa cmp int3 cmp lret and xor add add incl jg inc add ljmpw add mov nop stos (bad) sub cwtl jg pop inc xchg add cmpl iret (bad) lods or pop fisttpl pop test loope jns rorb leave movups cld sbb outsb fdivrl xor mov iret add dec xchg add std sti mov out stos (bad) xchg push movsl adc push pop into jo lea mov xchg daa push mov loop and xor imul xlat cld xor jg cmpb cmp aas icebp clc or pop jae leave das dec add xchg push jnp jge xchg cli (bad) das cmpb leave mov (bad) pop daa lock fsubr adcb ljmp mov dec hlt ja jb pop movsl push cmc xor cmp cmpsl fstp shrl jg aad addb jecxz cli mov xchg jmp out and or sub aad jl add in mov cmp mov ret add dec movsl aam fbstp jg adc and mov pop jecxz xor ds imul pop jl push iret add orl test cli sbb jnp and in push sbb lret into cmp bound adc test fist push movsb out xlat test std lcall lods cmp xor or cmp (bad) pushf gs leave xor adcb test pop cmp adc sbb mov lcall inc enter sbb mov push pop das into rcl ss xchg lret dec aaa hlt pop cmp mov pminsw and pop inc push sbb hlt or shrl stos sbb clc sbb dec mov in enter test jge lahf jecxz or pop movsb sub je mov incl lock leave fildl mov orl jbe int sahf dec push insb mov adc and xor loope bnd daa push dec jmp and loop movsl jns jg mov jecxz mov lret dec mov cmp sti (bad) mov add xchg (bad) sub push mov push push sbb cmpb addl pop ds testb les inc dec jnp aaa cmpb sub std dec subb dec arpl andb insb mov xor inc inc push iret jno mov test cmpsl pop out orb mov inc in sbb cmp popa dec mov mov into sub push (bad) test lea subb in in notl jl xchg mov jmp lds xor mov xchg sbb or mov std popa xchg lahf fs push stc sub pop out inc push test push into cmp sub sub add mov test inc into push or in xorb es aaa movl out outsb jmp mov lods loope mull cli ds xor xor out lock enter lds xchg mov jnp mov jns inc in mov aas arpl daa mov push push sbb adcl jg pop jnp fiadd ljmp mov cmp jns xchg or sub push sub adc adc sbbb add xor aas repnz add xor xor rolb add cmpsl pop pop sbb inc insl mov (bad) popa (bad) addb inc loop subb xor push std test jg mov ljmp adcb and sbb lds mov ret sub xchg andl xor fsubl popa pop xchg adc cwtl push xchg mov pop popw push push add jge or add enter rcrl pop sbb and mov xlat and mov mov inc sbbl test xchg fsubr xchg pop lock jns jp test fisubrl mov and ljmp roll push cmp lahf cmp es xchg xchg xor adc sti add sub rcr fwait popa fldenv das test cmp data16 sub or sbbb xorb jmp cmp cwtl mov push sub push subb pop ds xchg nop xchg in xor lret jo mov orl mov mov test add mov or inc push outsb mov push movsb and mov mov out js cmp (bad) or xorb adc mov gs fdivrp xor in rolb cwtl in pop cmp outsb pop pop inc fisubr sahf mov daa sbb push mov aaa mov (bad) mov mov pop test sbb or push sub xor sub ljmp je push cwtl data16 stc je adc lcall test outsb push pop arpl pop mov xor adc jbe ljmp cmc jb scas add jbe fild mov sub and lock cld pushl jns cmp push mov es dec js repnz xor repnz mov imul imul test pop (bad) insb push mov jp inc int3 test addr16 test movsb out jmp inc or adc test clc jmp test xchg sbb dec adc das test notb fadds das xchg sahf jecxz test inc mov inc lret outsl mov adc mov rcll hlt dec ds sbbb jns adc aaa cmc mov adc leave and mov sbb loopne inc inc jp jle rolb cpuid xchg addb cmp outsl popf cld sbb subb mov inc sbb aaa push (bad) fisttp xor mov mov or sti cmpl scas pxor (bad) pop int mov (bad) jecxz dec sbb es mov push jle pop lret push pusha pushf and sbb inc loop pop out (bad) imul insb xchg push rolb clc fwait push push cmpsb test xchg outsl cmpb jne and lods pop nop push int3 out xchg push jnp cltd and xchg cs xchg mov and push les xchg (bad) aad ror out loop enter or popa nop lods sbbb mov ss dec mov push ljmp or lea sarb es cwtl mov xchg fildll cmp cmp inc imul lock shrl aaa and cs nop punpckldq mov aas xchg pop jnp jns popl dec adc aas cmpb (bad) xor xchg mov (bad) jb enter cmp les sbb loopne mov gs lds push add xchg je inc fsubr dec test sar sub and add clc xchg xor cmpsb xchg xchg notb into push outsb loopne je push fs testb (bad) iret xor out xchg outsb mov test xchg push xchg (bad) jnp add xor jl jne das outsb dec icebp cs mov jno xchg loop mov cmp jno insb test stos mov push xorl mov daa fcoms sub ficompl lret sbb mov imul loop fwait pop iret add push nop mov (bad) ja mov or stos sti stc pushf aaa adc jno mov stos loopne int3 notl test adc xor sub mov and nop sbb cld cmp lds or (bad) jb mov arpl push fs inc or jbe pop cwtl mov mov into lds xlat dec addb dec lock add add sets lahf jecxz xor hlt sbbb movsb lret fs xor mov nop scas mov inc dec ds push outsl pushf jge inc push test fs (bad) push xchg lret push pop add dec test imul add and and push testl insb adc es jne cmovnp jge subb sbb xchg test push out icebp (bad) test andb test sub mov jne push subb sbb rcr push mov xchg push movsb cmpsl shlb push mov ret test and and dec xor lcall test test push ret mov (bad) xor dec inc sti repnz or out cmc test shll shrb repnz push pusha shlb pop mov cmp outsb add sub dec add lea xchg les dec sub cs pop in dec insb mov inc dec enter test xorb sarl push test adcb inc ss into nop push scas dec in aad mov jb xchg or fwait addl mov pop popa aas cmp xchg or lods dec lods mov xchg imul ficomp xchg sahf hlt dec mov mov popa sub popa sbb movl and xor pop lahf pop jnp adc cmp movsb xlat mov mov inc cmp and cvtps2pd mov sub frstor pop xchg fcmovnu xchg inc daa xchg xchg add rorl rcrb mov scas pop adc dec (bad) iret fidivrl xchg (bad) xor ljmp stc add scas iret dec bound and mov push out mov mov out push add mov sbb movl add xchg outsb test sub insl je repnz fucomp jb push insb mov mov mov push push dec mov fucomip mov lea (bad) mov xchg (bad) cmp jb cmpl push sar pop in stc lret mov out mov sbb (bad) (bad) lret mov add cmp cmp push cmp stos test mov add fnop pop sub cmc mov (bad) insl cwtl std mov enter mov shlb nop xor xchg fdivl push xchg ljmp inc pop mov dec mov sarl push pushf fcmovnb aaa pop mov sbb xor mov out xchg lds ret cmp ret dec cmpsl (bad) into pushf addb lret ja sub cmc punpckldq xor cmp add push test jg and ss add lods imul pop outsb mov iret fild mov enter lods mov test mov lea fdiv mov enter xlat xchg mov pop movsl test mov cmp sbb repnz mov mov ds ret sbb cli mov xchg add or (bad) pop sbb or xor roll mov xor enter mov jg jle adc stos adc jae or or cmp fist mov fdivs jns scas mov insb aad (bad) test xchg enter test leave xor (bad) dec sti loopne xor and mov cltd xchg adc push adc jb nop sahf or adc mov (bad) cmp dec test mov dec aaa fdivs sbb enter pextrw pop cli cmpl sbb sub jp and inc enter adc xlat insl add mov fsub jle sub ret xchg xchg fldcw fistp sahf jg push iret xchg xlat push pop push into imul or stos bound cmp enter (bad) mov xchg loop imul scas scas (bad) outsl scas mov outsb into sub (bad) mov adc (bad) jmp xchg xchg (bad) dec mov mov nop popl xchg inc mov fdivs fdivrs dec mov push mov (bad) cs mov repz inc icebp and xor shlb das xlat xchg push nop stos dec insb nop lcall scas fs out subb push sbb pop mov int3 cmp sbbb push and test xor bound adc xchg mov enter cwtl and bsf mov inc andb sbb insl call andb mov mov imul arpl jno sahf dec test shlb push pusha enter jecxz or pop fsqrt pusha and out and leave mov subb inc in popf pop lock dec movsb mov sub lahf (bad) mov push insb (bad) push jle adcb out orb fildl sti mov push mov jb lea mov sub (bad) cmp push adc push in mov lahf subb cmpsl inc lcall add stos or lods orb aad pop mov adc sbb lret mov jmp xchg or cmp lock xchg jmp imul sbb mov add nop inc stc add out xor add jbe sbb arpl orb loopne mov insl lret xchg loope std or pop jb adc adc addl inc cmpsb mov mov sahf jns addl mov xchg inc mov adc dec fdivrl xchg inc (bad) cmc pop and xchg adc inc xlat loope inc test ds cmpl adc mov mov add mov imul sub arpl sbb mov cmp dec pop nop mov pop hlt scas lcall std pop inc ret mov sbb push scas dec push clc dec ja add xchg xchg jo ret stc movsl xor jge lock xor push add test adc push cmp xlat icebp shr sbbb addb (bad) js in data16 imul faddl cmp sti icebp mov outsl mov adcb push fbld test fs xchg fiadd adc adc push nop ror addr16 cmp push cmp in fstps enter jae test and add movsb subb insb jle inc mov lds les fdivl roll cmpb lods sub mov xchg push xorb (bad) xor inc lock xchg pop jmp (bad) sbb sbbb bound mov cmp pop int3 (bad) jmp outsl mov inc and daa or jns adc jg adc shrl pop xor (bad) jg push or pop mov loope sar inc inc jbe mov nop pop movsb sub (bad) cmpb rorl pushf test lcall seta adc rorb pop jae xorl test out xchg and cli repz or pop mov xchg inc lods inc out mov enter fcomi and xor xor xchg mov adcb sub clc jp adc daa xor mov mov in orb pop out xchg sbb xchg jno or sbb out cld add (bad) idivb cs jp fsubs (bad) arpl subb inc mov or jl push decl mov pop into pop int3 dec cli nop fnsave je in and xorb ja jbe add sbb cld (bad) arpl dec xchg (bad) scas stos cmpb push cmpsb int int3 clc sub pop pop mov pop mov insb xchg mov icebp push js imul xorb outsb mov lock pop orl inc xchg outsb idivb mov pop (bad) out push andb out sarb dec shrl mov jno adcb sub cs pushf cbtw dec jmp sub inc (bad) loopne and adc fadd cmp into lods dec and mov adc outsl sub and inc leave cld xor cmp loop in cmpsb push ffree cmp orl mov lock (bad) ljmp cmp mov out subl ret repnz stos jbe cmp xor mov dec sbb sub je mov mov jmp and popa testb test jge test xchg or sub ja in je cwtl stc stos repnz fsubl adc add mov push movsb mov scas bound mov jle mov sbbb xchg adc inc mov cmpl mov xor out cmp lods test and outsl jp mov mov dec dec dec inc subb rorl (bad) nop test mov jg in lock xchg mov or xor lahf enter in pop jle and fsubs addr16 pusha jb outsl mov js jns xchg cmp nop std sbb or pushf xor mov js jns cmp adc jecxz insb test movsl mov mov lea add scas sbb dec jns inc orb ret arpl sti test cmc cli add xchg nop pop mov xchg xchg orb mov inc jg rorl jmp pop iret jae insl test rcrb addb mov orb pop adc (bad) int cmpsl and cmp in jle cmpsb repz movsl scas (bad) mov nop loope sarl add add and cmp test ljmp sbb cmp out inc or ficoml xor mov (bad) (bad) sbb movsb in or je lcall cmpsl xor leave xor les sahf jl or ret dec mov push dec cmp in jne inc scas icebp add stos (bad) push jge addl inc in jae rorb gs jmp cmpsl adc mov dec add andl add ljmp sbb ja stos xor inc dec lret in push xchg xlat int cmp bound xor add loope dec mov jg int3 psllq add mov xor jge popa scas stos (bad) mov mov nop jge shl outsb (bad) inc adc xor (bad) test cmc or std add cmc inc jns mov xor jnp (bad) cmp andb adc lcall subl mov loop fcoms andl mov inc out sub stos add popa je and push mov fucomip lds imul ret adc inc jbe cmp iret leave flds and mov out jo mov push sub pop cs add gs shl dec (bad) jae test pop (bad) cwtl repz aaa nop (bad) out js div jl subb icebp in fisubr scas xchg in mov leave or ja iret movsl movsb sub jnp iret icebp push (bad) repnz iret push xchg inc faddl movsl xchg ds repnz xchg pop insl dec dec jmp out outsb adc jbe fchs imul jnp mov lock stos fwait dec ljmp xor jle cmp or mov cmp outsb xchg in stos jmp push in push imul shll int rol push inc fadds ret or sub fdiv xor mov iret sub jbe xchg mov cs jp jnp or out xchg addr16 enter cmc dec in jp pop push ret cmp in add aad xchg loop inc cmp add cmpsb jg add sbb xchg gs (bad) add (bad) fmuls les add pop fwait andl jle ljmp out pop movsb lcall mov adc or cmpsl loope jp inc push in movsb ret imull mov adc fadds je cld andl (bad) stos dec jno incl test repz (bad) and pop popa mov add pop inc xchg pop in xchg outsb repnz lds jge xorb jb lret lret mov push lods dec jmp push jmp ja test adc ja popa fdivrs xchg jbe and push push icebp add nop lock cmp and pushf xorb xor movsb jae jmp sbb incb mov sbb jae xchg stc mov fcomps adc repz xor push adcb mov cmp ds aas xchg aaa add xchg (bad) clc sub add fwait xorb sti testl jno mov adc subl orb cld push mov mov (bad) (bad) rolb cmp add cmp out and cli xchg dec sub lock mov sbb jns mov mov add movsb pop test movsb mov idivl shrl jg dec add rcl jbe mov sub push lods dec pop jbe mov sub clc adc andb and mov (bad) cld negl add add aam add mov pop sahf adc mov jbe xchg mov mov das adc movsb dec scas fcmove lea push and flds inc or mov (bad) aas xchg imul mov call xor sub inc pusha adc jp aam out jae push xchg addb ds into bound add cmp pop loopne incb lock (bad) sub pusha cmp dec cmp xchg test (bad) mov jecxz and jbe lret cmp dec std xchg sbb arpl out sbb int mov idivl lret aas mov popf dec jge sub lea sti movsl dec sub js sub seta or fstps push fdivrl testl add sub repz sub sbb inc int3 xor jb shrb call sub (bad) adc stos pop mov xchg sub or or mov rorl add xchg jge pop jnp sbb jg pop or xchg outsl bound mov rcll rcll mov iret mov ds (bad) adc aas rorl movsb jl sbb xlat test repnz cmpb adc mov mov jl arpl insb xor xor xor fmuls mov xchg addr16 fcom push fildll pushf enter int add scas shrb sub inc push mov sub dec enter (bad) cmp outsb xor mov sbb xchg arpl es inc pop adcb int ss loop adc cld gs lahf lret aaa or subb jnp pop push or mov (bad) jbe push xchg mov aaa xor flds xor mov loopne test insb xchg pop subb mov enter movsb js orb aad cmp dec sar cld add in sbb fist mov cmp sub stos dec lock enter xchg iret xor test cmpl cmpsl mov mov jg sbb xlat lahf inc inc test adc dec fimull push addb or imul xchg outsb dec jne inc xchg lock or scas lds das subb fisub fs mov lcall movsb sbbb mov mov cmp mov mov (bad) jnp push add pop addr16 mov inc mov shlb lret cmpb adc pop add push out mov pop xchg or repz in enter test cmpb out dec mov scas dec xchg loope mov sbbb mov xorl add dec aam inc popf test adc sbbb and adcb fs adc and lcall cltd bound clc leave outsb nop test into mov (bad) and sbbb fbstp jbe mov sbb lret xchg jl movl or clc pusha insb int aas or lcall aaa out popf pop test pushl inc fnstsw inc fs adcl jbe andb jmp (bad) in ret mov dec inc adc jecxz jg mov ret mov mov mov xchg mov insl xchg inc xchg jb sarb je ljmp sub dec mov in xchg pop das hlt addr16 in add add jge xchg data16 ss lret lea insb setnp cli pop and xor jl add jle subl sbb cmp arpl cmp repz mov clc xchg test xor cmp (bad) cmpsl sbb jl push stc push mov out ret sbb cmpsl aas (bad) inc cmp adc add xchg popf neg fisttpl shlb push and dec nop xchg adc mov xchg clc or lock je adc add dec xchg and mov sub jge inc (bad) nop idiv add in addb imul xchg nop push xchg addr16 mov cmpb cmp jb dec jno mov je sbbl dec cmp push ja,pn hlt test mov clc and andb fmuls repnz mov or xchg test mov mov jo add and pop xchg out mov mov mov loopne (bad) incl mov jp jne aaa jno mov subl and mov popa and popf rclb jbe jno adc lcall iret push cmp fadds stos adc hlt xchg push mov lds js xor push sarl mov loope insb jnp cmp ret xor test gs lahf sub jae inc addr16 sbbb sbb jno subb lret lds sti mov dec xchg mov push push pop adc inc orb insb xor addr16 mov nop xchg sub inc push insb stos loopne mov mov test xor mov jb jge icebp outsl pop jbe mov lods clc xchg mov fiadd test (bad) in jne test adc pusha leave push fisttpl mov dec pop in iret imul inc popa mov ret push insb mov inc and gs sub dec cmp insl mulps ja push xor les pop fimul mov iret dec movsb idivb arpl clc xchg jl mov cmp (bad) ffree push fcompl repz cmc mov xor push nop shlw xchg inc mov ja xchg nop or nop push adc mov (bad) xchg mov xor enter test xor mov xchg or incl inc lds ret fsubl cltd pop call andb or xor sbb xchg leave push pop test push test xchg inc fiadd jae inc mov push push ds xchg or mov add and das jge clc add and test mov loop fsubs out sbb jge clc mov repnz lods add addl ficom cmpb pop lcall adc adc jno push sbb gs lcall mov mov or test cmp sbb sahf add dec nop cmp adc pmaxsw mov scas gs mov sbb das enter cwtl sub add sub add test dec orl out ja dec loopne sub add cmp popa pxor mov mov aaa orb sub cmpl inc jg sub mov adc xor int3 outsl ret enter pop and mov xchg adcb xchg test cmpsb cmp stos dec outsl xor cwtl xchg fildll inc addb mov inc pop test fcoms cmp imull test addb xor loope rol adc jge shlb lods sbb test lock sti lret mov sbb test lods pmovmskb cmp and clc push leave sbbb mov icebp xor dec aas mov cmp (bad) cmp xor adc or (bad) out lock pop scas cltd lds std pop cmpsb mov jp or mov dec jns jne (bad) jnp or dec fsubrs xchg outsl xchg movsl push add mov add inc aas imul or pop movsb cs pop and xchg xor cmp mov aaa in enter lea bound adc repnz orb mov lcall sbb in je adcb hlt ret orb mov xchg or mov xchg imul jbe push jns fdivrp lods dec jno mov push sbbl pop pop cli fwait test mov mov pop repz paddusb lret subb (bad) jb mov mov pop sub (bad) (bad) pop push in je lahf aam std insl sbb cli and fcompl mov orb cld arpl lahf test rcr pop cmpsb push test popf jl popa jno cld (bad) push iret jmp cmp cli mov int lods dec jmp cmp cmp mov mov mov cmp (bad) cmpsb push xchg (bad) sub or shl je outsb dec cmp js mov push add xchg rep xchg cwtl sbb fildl out cmp sub mov sbb inc xor aad addr16 pop nop xor mov mov cwtl lods mov ror loopne sahf icebp aad xchg mov mov xchg insb xor scas mov mov mov scas loop imull jmp xor fisttpll push adc sub push test stc and test jno (bad) rcrb pop cwtl ret push fidivl mov lret je test inc add sub mov mov sahf stos arpl mov or mov cmpsl leave loope clc movsb push in mov jmp negl sbbb fsubrl add mov mov sbb dec scas mov addl xchg mov jno sbbb cmp fcomps jnp inc adcb adc shrl mov pop (bad) aaa test lret stc test out mov into imul icebp mov dec push xor jne mov inc dec popl mov mov idiv roll test cmp xor xchg or sub inc push incl cltd mov (bad) nop lret (bad) and cmp pop xorb es adc push cmp lea add jno andb icebp ret sti sbbb leave gs fstps mov idivb sbb (bad) andb adc lret fcomps inc sub imul out lods pop cmp mov ret sbb add and pop (bad) mov int outsl or (bad) jne xchg fcomps dec loopne xchg dec lods dec aas loopne pop popf es xchg mov mov pop out jmp xorl incl (bad) insb sbb and orl push pop test mov test das arpl incl dec mov pusha fsubr xchg ss push mov dec int3 sub stc test or pop jb pop (bad) stc in inc add mov xchg pop loop adc adc xchg cmp cmp in (bad) xchg cmp sub pop pop pop push loopne sub orb push sbb inc rol out adc cmc push out mov gs xchg (bad) sub and test ret xchg pop dec adc out movsb lret fisttp ret faddl dec out or loopne test dec cmp idivb daa test (bad) fnstcw call dec in (bad) (bad) scas add shr repnz sbb loope push mov xor fsts popf push add dec push (bad) out jo cwtl push jns ret and xchg test sarl or inc push adc push insb sub cmp stos and jmp (bad) in icebp in sbb push inc pop xor out aas sub clc and test dec inc inc cmp or cs mov inc xchg push clc pop cmpsb sub lahf inc sarb or mov movsl imull pop pop cltd insl iret pop fcoml flds cmp add pop push repz shll mov loop pushf iret dec sbb test jo pop mov jge iret add cmp je int3 aaa push aad out pop sbb popa rcrl aam les outsl pop in (bad) in and xchg pushf mov (bad) mov mov push jae out imul xlat lds testl rcl (bad) mov cmpsb imul outsb fchs shr nop add cmp dec mov sub jmp mov and pop jbe xor dec cmp mov mov stos in sbbl push pushf lds fild test adc ja (bad) mov cmpsb sbb dec mov in mov (bad) std sub mov in loope push addb mov mov jbe inc test pop popf sbb mov xor in adcb xor adc cmp ficompl loop mov cmp push inc cmp orb jne xorb adc mov cmp (bad) mov inc clc (bad) xor xchg xchg outsb cmp xchg mov sbbb sti hlt mov xor xlat add (bad) mov andb in addl or sti cmc divb mov dec pop (bad) adc jno xchg or js negb mov xor aam pop add mov fiadd xchg insl or test dec daa and mov dec push (bad) out sbbb nop mov das aam inc add inc mov addr16 cmc lods cmp ret mov sti sub in jge add mov xor sbbb shrb fsubs rcl pop or int movsl fnop and notl dec cld add sub and fadds ds mov inc aam lcall lods andb sbb xchg push sbbb mov push xchg lds lods mov sar mov daa adcl fcmovnb xchg je adc repnz jno mov ss (bad) dec push and pushf mov mov pop xor mov mov into aam mov mov movsb pop jp movl in push test pop mov xor lock fidivr or or sub pop cmpsl mov loopne sbbb push rol xor aam and add mov fs push adc orl cmp pop push sti cwtl or movl ret int mov icebp or stos orb inc pop out (bad) xor pop push mov mov not add cmp int3 test nop adc ret mov ss xor sahf mov inc push jg sbb sub pushf imul pop or (bad) mov rolb jns (bad) sbb inc jmp ja xchg push mov ljmp sbb cltd mov nop loop call add add icebp push jae subb adc xchg scas push pop mov cmc sbb lods adc adc lods add push test cmpsl xor (bad) sub dec inc in cmpb lds push sbb push xchg add jmp pop insb adc aad pop push push shrb pop mov cmp ficompl movsl jno sbb inc or dec subb xor out and fldenv stc xchg hlt ss sub dec les xor dec test inc lock clc or roll mov out sbb mov push js cmpsb orb push testl into inc arpl rclb out mov les xlat enter mov dec rorb xchg push pusha cmpsb cmc std insb mov test add out cmp xorl push xchg jne mov (bad) or call cmp loope (bad) rorb fldcw inc xor enter xchg ss ret mov in add nop mov mov rcrb das in ljmp cmp dec add cmp cld inc int3 pop ffree inc or mov xor fadds (bad) mov in and fdivrl lcall push jno mov out inc sbb jecxz sbb sub movsl mov aam insl inc loop mov test movl or ret in xor fdivp cltd outsb cmpsb sti push mov stc (bad) ret cmp nop pop xchg les cmp inc adc mov pop mov enter mov jnp jb inc add ret cwtl out outsb pusha je or inc orl pop outsb mov or cmp mov nop jbe or insl jns xor inc mov ror xor xor cmpsl push and popa inc mov (bad) andl sbbb cld gs push jb sbb mov mov dec into ja push out (bad) or addl adc imul mov jecxz pop (bad) bound xchg push mov sarb bound popf dec xor inc sub xchg loope pop outsl nop dec or clc pop xchg mov int3 ljmp test add push push lods mov jo test sbb or pop orb xor negb mov fild adc jne nop and xchg stos lock in subb inc add imul dec popa cmp mov mov jmp inc sbb mov loopne in add subb daa xor push imul pop cld pop mov fildll outsb push scas test sub pop add inc jle test jg sbb push outsb mov mov es adcb inc and std add dec jnp xchg pop and jge add inc enter pop jnp leave pop lcall mov or fadds and jl cwtl mov jnp cld out ss pop add test jl js pop mov mov jo xor sbb (bad) jb cli sub test fadd fwait aaa leave adcb xorb shlb stc cmp jae push scas arpl scas cwtl cs imul insl lret lcall jnp mov inc adc scas dec xchg imul xorl dec fsubs mov jne lods inc mov nop push sbb je les (bad) sbbl adc jo jb add mov stos push jo fwait pop mov inc mov repz sub enter mov fdivs xor add mov push jb loope xchg mov in iret and adc xchg das scas inc or ret nop cmpsl std adc mov inc add mov mov (bad) xor in push inc xlat inc stc rcr js mov pusha nop pop (bad) iret fnstenv sub lcall lock in xchg sbb sbb jnp and xchg ret stos push pop loopne cmp pop jnp outsb mov test inc loopne push mov out rcl in mov xor notl pop (bad) cmpsl adc (bad) imul push fs ficom mov xchg nop loop imul nop loope inc lret pop (bad) cmc rorl je andb pop imull push mov (bad) hlt frstor aas movsl outsl xor jge into mov movsl hlt std test mov adcb mov addb mov add lds cmp cwtl test push stc lods mov sbb in adc pop xor subb mov mov xchg cmp xchg jle cmp mov daa roll cli ss in or inc scas in stc add (bad) jo mov inc jno push repz jge icebp sbb dec mov mov adc out xorb jae add xlat xor test rcl add (bad) roll xchg outsb adc nop mov cmp inc cltd fcomps push negb or xchg sbb sub fidivrl (bad) lret (bad) or xchg sbb push (bad) ss inc xlat cmp push xchg push sbb lret aad jbe adc xor in sub int3 frstor je sub mov xchg lods cwtl push mov (bad) hlt push fs fwait inc mov mov enter mov jge xchg push cmpb les mov cwtl sbb add mov jp pop adc testb fisttpll lret or nop mov out test addb mov cmpsl pop jns dec cmc cmpb add je jle movsb out cmc arpl in pop (bad) push test (bad) adc or fcomps and inc mov push mov jno inc mov push movsb sub jns,pn xor ret xchg fcomp and sub mov fdivrl addr16 pop enter inc add push js or pop mov push sub bnd adc gs leave jno sbb and xchg js stc cmp push stc inc sbb pop xchg jecxz inc add and clc xchg inc andl movsb cwtl aas mov adc or in xlat jg fcomip inc aaa iret pop cmp and fsubrs sahf idivb cmpsb push stc fsts orl in mov (bad) sub jp int jo mov jp inc paddsb ret out out push popa or pop mov adc sub loopne es xchg fistpl sub pop mov mov (bad) out inc cmp sbb inc pop addr16 cmpsb mov pop in daa adc adc jno rclb outsb lea ds (bad) in or shrl mov mov mov push js cmpsb cmp cmp jmp addb imul popa xchg mov xor cmp pop fwait sbb xchg fdivrs dec pop (bad) cli int lret add (bad) mov adc pop fdivs mov enter mov jno add lock mov ss pop adc test lcall cmp cmp je xor mov push add mov call add or scas push sbbb outsl jno add cmpb xchg push cmc movsl mov (bad) mov pop addb stos sub lods popa mov subl (bad) dec scas mov fs (bad) ja or mov das sub adc movsb sub js,pn sub nop sbb mov dec xchg movups add in aaa shrb into or mov mov xchg sub and sbbb push int3 subb mov pop cmpsl sbb add ljmp popa cli add add aaa pop lret lods inc dec sbb outsb mov jns add pop add loopne cwtl mov push loope ja test cltd cmp mov cwtl fcomps jecxz nop fs cmp clc push (bad) dec insb sub xorb stc stos xchg addr16 cmp xorl ljmp add test cltd ret adc xor subb mov pop enter xor cmp (bad) hlt imul jmp sbbb cmc add mov cmp jecxz andb xchg push push out dec cmpb mov test adcl dec test rorl mov (bad) out sub movsb add rolb mov mov push adc mov xor sti clc push cltd out fdiv mov imul (bad) sub cmpsb jle mov enter adc fmuls jne outsb adc enter cs mov cmp jne mov test mov sub lock sub and mov out lea xchg subl dec push iret xor pop mov cmp jnp test in lods mov adc sti push jp,pt pop dec fsubrl jl out or xchg iret push ljmp add jbe jge dec iret lods sub push scas cwtl add jo fstpl iret pop jne sbb dec ret xlat test dec push (bad) and inc dec ficoml mov jne xchg mov ret mov outsl dec fcoml mov push push sub mov fsubl pusha fcom es pop push adc outsl fs jecxz mov sub lods loopne (bad) sbb and in loop test lods cmp xchg arpl xchg xor clc test cmp shr mov dec mov sub out (bad) aas cmp xchg and sub fsubs ret cwtl nop rorl insl inc xchg popa adc mov movsb (bad) mov mov jle xchg (bad) popa iret test (bad) jno,pn stc inc mov loope lock xchg mov jne (bad) mov xor mov push aaa std xor lret (bad) push xor (bad) mov ror stos xchg movsb xchg jmp nop xchg fstpl dec lock xor stos inc cli cs arpl into adc inc add (bad) fs aaa clc jmp dec fwait push das and mov adcl adc idiv int3 mov mov mov cmp mov iret mov sub mov add ret mov (bad) pusha outsl andl sbbl jmp pop cmp mov sahf push enter inc cwtl xor jnp iret xor inc jecxz push (bad) daa rcrl leave sar jge mov mov das daa frstor in loope and (bad) sbb gs enter aad adcl sub sbb (bad) hlt mov cmp jge lock mov int3 and ja inc (bad) mov (bad) push xchg nop jp dec adc add in cli jle cwtl loope add shlb sub and enter ret stc (bad) lcall movb ret cld out jae and pop retw xor (bad) xchg fsubrs inc mov cmpsl adc aaa nop adc mov adc xchg cld xor aad fs dec mov pusha movb mov fiaddl test je push data16 in sar inc gs test cwtl pusha clc enter adc cmp (bad) fcom andb xor cmc mov pop jo test bswap mov cmpsb fisttpll fisubrl stc data16 xchg cmc test aam sbb cmpb ljmp or movsl mov fcmovne or lret or pop mov scas sbbb adcb xchg in insl mov repz bound dec orb outsb fdivrp xchg add adc or jae mov push pop stc ja inc jb cmpb enter sub dec sbb cmp lahf andb mov jns sahf xchg sub cmp jno inc cmp subb (bad) adc cmp mov cmpb (bad) pop mov and adc or mov (bad) mov dec aam roll insb subl loopne and nop scas aaa fidiv rcrl push xchg (bad) testb mov adc out jle pop popa insl imul dec mov dec mov ljmp xchg subb cmpsl mov sub shrb mov je mov lock xor (bad) faddl lea lahf shll sub sbbb (bad) out mov data16 push push lods adcb mov dec mov mov popf xchg sub jnp stc inc add cmp ret jle hlt imul adc ss jo adc fisttpll fild push scas sbb out xorb lock jp xorl xor enter outsl pop das inc mov popf mov loope cmpsl adc pop dec cmp and insl adc pop stos cmc xor std xorb mov pop mov fadd cmp sbb fldenv xchg pop andb bound (bad) testb xorb dec cmp fxch sub orb add xchg jo call andb movsl pop xlat daa scas ficom and and push mov addb fcmovnu pop xor imulb mov in push or mov rolb pop cmc fbld repz insl mov xchg sbb adcl and loop mov push xor lds dec jne mov sar inc int aas ret (bad) push sub sbb fistpll jb lea leave nop xor clc xorl repnz and mov xlat test jno fdivp jno (bad) cmp lret addr16 out loopne add das sti inc js push int3 lcall in mov fbld sahf sbbl je (bad) aad addb mov lcall push pop insl test cli push xchg outsb test dec mov repnz push xchg imul bound (bad) adc out testb cmp adc jo push repz js loope aad cmp pop dec adc fildll pop je roll sbb mov mov jge test out adc or mul adc pop mov mov and (bad) jns dec pop jnp in (bad) fidiv dec and clc pop lock mov enter mov lret (bad) fnstcw sbb push nop stos fdiv or pop pusha xor pop cmp inc (bad) bound fisub data16 and or jge pop mov xlat andb inc subl arpl bound orl shrb lret xlat subb pop push scas push scas mov push or or adc test jg pop xchg pop sahf andb dec mov shll jl dec push (bad) pop dec jo or dec aam dec jle add jb fildl jmp gs fdivr add addr16 subb aaa cmpsb insb adc sbb pop lcall pop and (bad) push cwtl in jbe xchg add test mov xor jge xor sbb fst xor xor ss jg push (bad) in imul cmp mov out dec mov add jecxz adcb inc mov push mov sub and bound mov xchg stc cld pop push enter movsb jg (bad) push mov popl inc mov sarl loop stos loope scas mov xchg cmp (bad) mov iret mov mov mov fbstp cli mov imul sub dec mov inc push push xchg mull in ret jp cmpsb adc aad shl or jb lahf sbb mov mov lret xchg arpl xchg test fstps outsl orb mov mov xor in mov jb fnstcw push fldl adc adc out sub mov lret subl stc hlt adc lea lcall push push xor sarl mov mov lods enter lcall cwtl testl insl pushl sub adc clc jl (bad) jb flds pop inc (bad) stc jne arpl mov ss stos mov dec add adc das sarb test addr16 hlt pop (bad) push push cmp test add sub sbb cmp add (bad) xor dec mov test jmp adc rol xor ret int3 sub lret dec in cwtl xor pop loopne or test cmp hlt neg test dec dec xchg mov enter orb orb addr16 mov jb dec cmp repz iret nop mov cmp mov aam jb and lahf (bad) cmp lods sti fild fnstenv (bad) pop dec push sbb push cmpsl mov xchg outsl xor aas (bad) movsl orb stos inc jno xlat cmc clc dec jo adc movsl pusha loopne cmp add stos sbb sbb cmpb movl mov test test ljmp scas cmc push add (bad) mov pop lcall cwtl mov inc jbe xorb mov test xchg popa jmp jo sahf bound adc iret icebp mov mov pop out shrb mov rolb mov neg jg xchg data16 (bad) mov pushf mov xchg pop shrl xchg fwait popf xchg das int3 (bad) ret inc sbbl outsb stos inc adcb aad fisubrl out loope inc jmp lret repz lahf sub adc ret add aaa xorl adcb mov or cmpsb sarb mov sbb (bad) int fs test jnp addb shll mov mov dec push and push sbb scas mov mov dec call es pop or jle push clc std xor sub lods (bad) fidivl repz nop stos adc popf add dec mov (bad) jecxz sub cmp mov into pop jo xchg cmpsl push (bad) or shlb dec es dec sbbb inc int dec mov std imull ds push and bound and push add and lret adc mov jl repnz outsl mov push mov mov mov mov test cli pop jp mov mov ds jp cmp xor test mov addl scas data16 pop subl pop test sahf pop es sub fadd ss pop inc xor mov ret xor mov and ljmp loopne lods into pop or dec (bad) add and gs and (bad) fsubrl rcrb push sbb or push iret xchg out jl mov inc jle and dec movl lret je cmpsb or adc push sahf (bad) out sub faddp inc dec pop loope pusha rolb int popf xor lret das cmpsl test mov leave jns pop out mov xchg jno mov dec pop cmpsl inc mov ss lock or idivb jecxz popf push push stc xchg pop jae xor xlat mov and fstl cmc mov fdiv add int3 stc insb test mov je or mov lock popa push sbbb in scas lods cmp mov imul push (bad) push adc mov mov test gs ret fsubrs std js outsl rolb adc loop jnp fsub das test sbbl xchg push adc sahf pop cs jae xchg sbb fnop push add jg mov xor mov addb push push es sbb cmp lods mov repnz mov int pop jge jg (bad) mov cmp mov jo push movsb in in std test stc add les test rcrb mov mov mov pushf pop push mov lahf xchg into xor (bad) sti push clc das xchg dec stos fldln2 test jmp pop cmp mov add or sbb cwtl jmp cmp shrl orb iret das mov push nop adc aas inc mov xchg lock push cmp in adc cmp aad xor imul adc cmp andb int pop cmp xor jnp insb xchg jl cmp or loopne outsl testl add adc add pop repnz ja (bad) sbb mov and dec mov xor roll xchg sbb scas inc mov jae andb test and jge hlt cmp push stc sub pop test push xlat mov fwait inc mov aad popf xchg sbb sub orb jnp ds call test lock and test push mov ja cmp sub mov orl mov push out add push lret sub cli lods mov add or push sti test dec xor andb cltd adc jg jae xchg add (bad) and sbb xorl mov ret jo xchg test sbb mov clc fwait aad adc mov sbb mov and dec sub test je gs mov push in stos xchg jbe fbstp push imulb test ror loop add push mov adc dec jge jmp push nop test xchg xchg data16 xchg popa jl pushw jmp xchg cmc mov push xchg mov jne mov out test cmpb aad nop (bad) or aaa sti lds xchg mov subl shrb inc (bad) jns cltd lcall xlat mov pop shll hlt movsl addr16 adc xchg jne orb aaa push cwtl popf fs data16 pop movsl ss pop mov sub mov push pop inc push or (bad) mov mov mov or sbbb cmp cmp movsb jb pop andb adc cmp notl sahf ret test mov test fisub and nop cwtl (bad) sub aad pop sub adc shrb mov and mov mov loop mov fidiv xchg lock or inc shrl mov pop adcb or jb leave gs sti add jle int3 mov jnp ss ret in push jge xchg roll inc lahf sbbb push mov dec and lods sbb stos cs cltd sbbl adc or hlt insb mov cwtl lret outsb dec lods pop add pop adc in mov mov movl loop pop sarb dec fild movl insl or subb mov adcb repnz dec mov adc jnp mov (bad) jge dec add inc incl call jmp fnop adc or pop push cld or dec or dec adc popa or sbb push and xchg sahf sbbb cmp mov sub fistl je cmpb jbe fstps pop cmpb inc and cltd push xchg xorb les xlat pusha and add leave jle cmpsb pop mov cld test jb xor cmp icebp loop xchg fdivrs scas pop pmaxsw mov das inc sbb aas mov jae cmp stc (bad) xor fidivr ss adc (bad) es pop addl in pop les cmp (bad) sbb bound mov (bad) out xlat into fs rclb jge xchg cmp adc sbb in adc adc inc int cmp push sbb test push insb bndstx loopne out out nop shrb fwait jmp gs nop lock or js sti add lcall xchg jle xlat push fcomp gs inc xchg ss iret adc clc or pop test cmpsb dec mov xor cmpsb xor popa addr16 pushf andb ret xchg mov roll mov push repnz cli cmp cmp js faddl sub sbb mov sub sub sub adc xchg enter mov scas jno out inc dec adc cmp cmpsb fcoms (bad) xchg sub mov mov popw mov in and sub orb ret mov inc and add andl mov rclb cmp xchg fildll ret adc mov push sub gs cmp mov cmpsl inc iret test mov cmp movsb iret sarl lcall xchg stos dec xchg mov add test pop inc add mov loop push jmp jbe pop dec in mov lcall xor enter repz xor add pop push into inc jae hlt or push mov iret movsl leave pop data16 sbb mov dec cwtl roll rclb add sub add sarl mov repnz mov adc or mov iret aaa dec stc mov mov (bad) in inc int3 int (bad) scas (bad) push rcll rcr cmp insb lcall push aas enter fadds mov test pop in (bad) dec push sbb aad mov out lds push out pop dec test mov or lock fsubs dec push test or andb mov adc cmc add stos ja mov sbb sub cmp mov jecxz loope lahf and fildll fsubs and rcrl dec xlat cli stc add mov int xchg pop nop add lcall adc lock adc jae sbbb pop cmp adcb inc push push iret das shlb popf es stos adcb jmp sbb nop icebp jne mov leave xor mov popf mov rolw lock rolb cli inc inc inc xchg mov jnp adc ja or insl cmc cmp mov push loope (bad) inc lods mov or dec nop dec jo loopne xor imul mov lock out popa push cld sbbb out mov stos xor jg (bad) (bad) mov and stc fild (bad) xchg andb into das pop psllq aad mov adc nop push and lcall jle jbe addl mov pop cmpsl cmp or sbb dec mov js cwtl addr16 cmp xor mov xchg mov dec in hlt or in addr16 clc mov pop andb lcall or insb sbbl lock aam cmpb jae jmp xor cmp imul (bad) pusha lahf arpl pop cmpsb enter add and jnp scas pop loop sbb inc cmc popa jbe mov sub addr16 mov and mov subb gs lcall sbb rep addr16 adc mov and xchg addb mov stc pop dec fadds jb adc mov arpl pushf xor roll adc sbbl shlb cltd nop imul sahf movsb enter and orb add sbb or push mov push push scas aaa shrb scas xchg jno dec scas sbb cwtl clc cli push frstor mov pop scas push lret mov sbbb imul pop mov fxch (bad) or test imul fcomps mov jo or hlt and xchg dec mov pop sbb add add xchg loop xor pop cmpsl xorb insb aaa fisttp mov cmpb mov add sub arpl sub xor cmp clc inc pop mov sub and xor int jno adc jle push cmp sbb aas subl bound scas das pop add adc sub inc xchg stos inc cmpb push sbb testl je shll fwait imul push push out clc mov es dec dec sti inc in or lahf xchg incl ret stc adc (bad) mov insl and out adcb mov rorb mov mov repnz xchg pop fstpl sub incb sub testb push mov andb gs inc dec mov das pop addr16 jnp mov out mov push das roll int3 cmp movsb pop adc push mov pop push mov cmc mov aas pavgw int3 aaa into push xchg sub subb test lcall stos (bad) mov cwtl push cmc or (bad) xor pop xorl mov mov movups test hlt fwait (bad) mov jns xchg frstor xor test sub lret outsl xor stc inc mov in xchg orb cmp test adc loop xchg push xchg pop jecxz adcb jbe std in leave inc cmc sub and fdivrs push mov push push cmp and movsl xchg out sbb gs js sti pop xchg outsl jno outsb addr16 inc adc adc xor and cmp jns paddd mov in popf lea pop mov aam les xchg arpl jo jp (bad) addb inc and test xchg (bad) mov dec int3 icebp cmpxchg push inc mov popf cs adc cmp push lods dec shlb pop stos icebp pop add cmpsb mov add (bad) mull subl shlb sarb sbb jnp iret mov outsb pop cmp (bad) int inc inc hlt adc inc or xchg push jno jmp mov mov loope call add pusha add repnz mov hlt bound daa std mov es clc add sbb mov pop movsb xchg ret xor paddsb jmp js push push mov push aad (bad) adc pop stos mov push cmc jle dec (bad) aaa bnd jno addb jp inc dec stos xor xor mov or in adc push mov fildll test dec mov out sbb sbb dec sbb mov pusha movsb xorb fild notl stos add aad addr16 fstpt mov inc gs pop sub ss jg pushf lcall fcom insb mov mov jno mov pop (bad) mov xor mov inc mov pop decl mov sti cld test mov lahf jb push sbb mov lret popf pop loope mov sbbb adc sbbb sarl (bad) out cltd fs lahf cmp mov in clc mov lock stc and xchg mov fstpl push or sub cmp xorb test sbb add xchg pop les xor dec mov iret mov jg (bad) imul repnz or dec mull sbb movsb mov mov jns mov orl icebp dec gs inc hlt jae rcr loop add jle dec fisttpl cmp adc mov add pop mov lret (bad) stos adc es cmp repz loope jge iret addl xor repnz movsb push pop out jp jecxz test pop in inc lret in lds fdivl xchg fsubl pop stos sub push and lea pushf in push jmp rolb stc sbb (bad) test sub lahf push out daa addb push mov nop fimul lds push push pop mov (bad) dec loopne clc xor lea cmpb iret loopne xchg cmp inc add xchg vmovhps and iret roll enter je or jl push xchg push xor shr mov insl cmpsl movsl dec sahf test fs faddl and stc dec hlt ret inc and mov cmpsl lcall sbbb fsubrl rolb (bad) cwtl in sub rolb in bound jne mov add insl ds stc fsubl dec clc rcr mov loopne xchg mov jmp jbe mov out scas xor pop in popf (bad) sbb jno (bad) jno nop inc jne add add pop stos rcll mov rcl (bad) gs aam adc xchg cmpxchg cs mov push mov adc or sbb fadds mov stos xor cmp pop xchg insl add mov (bad) lock test push mov mov push ss mov sub fisub add aam sarl cmp movl add movsb push (bad) sahf shlw mov xchg sub lret das je lret fmull test push sarl sahf icebp mov lods dec ret cmc push stos push sbb inc mov xchg sbb jae push fild sbb sub icebp pop push (bad) push in jle lea cwtl flds mov les mov add push push shrb fcoms nop pop stc test add push sbb in mov lock aad (bad) je (bad) pop out imul jecxz shll div jbe (bad) add dec test mov mov inc imul (bad) cld pop cmp and lds dec sub jns imulb push jmp cmpsb aad hlt jns test xchg sbb mov or cmpsb ret in call xchg (bad) fnstsw add ja pop mov xchg inc pusha in and sbb sub or repz mov addr16 adcb imul pop daa aad rolb aas mov xchg mov leave sub xchg fisubr cmp xor adc xchg xor adc sub inc mov pop mov pop addr16 xchg xchg xchg aas subl mov add adc enter addl mov (bad) aam scas push mov nop dec dec cmpb xchg cmpsl adc push mov inc outsl lea sub andb add jg adc int3 fcmovbe mov xchg bound and xchg mov ja cmp xchg add movsb inc stc mov outsl jno xor ss bound pop sbbb cli ficompl fdivrs add mov dec mov inc in sahf cli cmpb dec inc mov les incb dec push adc mov cmp insb dec cwtl aad popf sub std into cmp inc out cmp push and test push stos mov xchg andb mov enter out mov shll aaa addl (bad) mov repnz bnd xorl std andb iret cmp insl cs inc mov rcll xorb sub test add jg lea in push pop inc push subb mov add into cmp jle scas sub (bad) mov push dec push lahf clc ffreep sbb xchg pop and subb fdivl lret fdivr jecxz xorl or int3 inc stc pushf cmp cwtl cmp inc sti cltd mov test je into out test pop adc ljmp jns mov mov sub (bad) and adcb clc subb xchg test les imul xchg jbe (bad) mov or push fistl mov pushf jo jb adc mov mov mov or (bad) jecxz xor xorb lds sub shrb inc inc pop lock insl subw mov dec and pop jae mov mov mov ret jne dec adcl mov add mov lock (bad) jg ret pop and fdivl push sbb out push pop mov add adc cmp add sub or movsl mov call movsb jne and lods je xchg in inc jmp loopne cli xchg in xor inc repz fwait sbb pop inc ret andb ret adc (bad) leave sbb xchg or jmp pop xchg mov inc push add cs push sub arpl punpcklwd scas nop dec outsl mov cmp add addb ret sub test out ljmp push push lock sbb (bad) fstl sbb mov jb out push fildl sbbb and mov mov xor aas push stos pop pop das (bad) jmp iret jmp stos icebp pop movsl (bad) xor jnp test sub fisubl mov mov push test pop dec jno or xor jo cmp mov lea pop test mov movsb mov push insl icebp mov ret fsubrs sahf sarb (bad) sbb adc cmp stos (bad) movsb cmp jns pop lods sub xchg sti push fld jb lea clc (bad) notl xchg pop adc xor cmpsl xchg (bad) stc adc (bad) lahf jg addl mov int3 jo lock cmp popa andb orl fimul inc mov fcompl test and jae jecxz mov push jp push (bad) insb je pop sahf popa mov ljmp iret repz cld mov mov fwait (bad) jle push (bad) gs bound ljmp scas mov shl pop les outsb push sti (bad) stc pmaddwd pop push test xlat xchg xor pop fmuls sarl mov mov sub iret imul push int3 bound imul (bad) cltd je,pn mov add push xor add mov pop adc xor sahf jne xor and jge out rolb into cmpl mov and lods dec sub jo sub add jge outsb pop jmp icebp dec stc xchg mov and subb cmp test mov int3 pop aaa fiaddl cmp or gs ret (bad) shrb out add mov jge sub movsb pop daa je int3 fiaddl xchg ret push stc sbb or pop xchg mov add mov add loope lds and popa sub lret shlb adcb call stos pop shrl mov cmpsl adc pop daa inc mov add dec lods inc ss fdivrs add ja pop sbb nop mov stc cli popf sldt and stos sbb cmpb inc dec sbb fcom pop add addb adc adc dec push std push xor xchg test xor mov mov xchg adc scas add sbbb pop std arpl call incl pop cmpsl rcr test stos outsb pop cmpsb xchg outsl sbb test loope hlt dec pop nop or xor mov mov mov cli fdivs lret out mov call ss and mov pop mov mov cli push inc mov push mov test mov and fs jecxz xchg sbb mov dec inc enter xchg outsb test sahf arpl lods test mov (bad) orb popa (bad) repz stos and xorl andl mov lret add in jp andb ret enter jbe cmpsl pop mov and out add (bad) xchg jnp sub inc pusha orb ret sub mov negb pop loop mov xchg add shlb inc adc sub inc mov incl movsb pop pop subb ljmp lds jnp mov push test jbe mov inc iret inc gs inc test addb cmp mov mov imul (bad) rolb mov cmp cwtl addr16 push dec and andl add push xchg lods mov jp insb imul cmp and (bad) cld jns dec add mov es add xchg adc xorb pop lcall mov xlat divl nop faddl pop pop (bad) icebp and xchg addb add lcall dec cmp ficompl aad inc jg mov dec inc xchg push push push test inc cmpb mov sbb jb cmp fwait and loope inc dec jb pop arpl pop aam dec stos fdivl addr16 xchg out lret xchg aaa xchg mov out xchg insl sub push icebp (bad) loopne cmp sbb dec (bad) xchg jecxz insl mov pop in movsb add (bad) insb idiv adc std clc imull mov bound scas test fistpll mov sbb iret faddl cmp push adc adc daa lods (bad) fs sbb repz jle gs lock imull cmp (bad) jle movsl mov mov aam sub (bad) fs rcrb push push data16 mov out movsb cmp insl inc nop adc add xchg test add or add rcll mov add stos cs add inc loopne test loope shr test cwtl add ror imul fwait push mov daa (bad) cmp inc mov dec jmp mov test sbb sbb lods pop fdivr or jae push (bad) ss xchg adc stos add popf sub fnstsw add andb in mov clc push push popa dec adc pop rol mov push add rcl clc test push jbe xchg xor int (bad) test gs daa fdivs sbbl sub adc inc mov push sub jg mov les aas cmp cmp (bad) fsubrl sub clc xor push jbe aam xchg add pop aaa xchg sub cmp lods pop sbb dec (bad) int3 xchg mov add int3 loopne lahf lock cmp push pop pusha cmpl pusha xchg outsl orl lret push jp push inc ret adc xlat mov push icebp sub jg push test (bad) in in mov arpl js (bad) loop push in lock mov push and pop jle sbb lock jb loope inc movsb leave push jp fidiv dec cmp (bad) push sahf and aas rcll and lret call std push add jnp leave jg sbb dec mov mov mov mov iret and push in push pop lret je shlb idivl out (bad) ss cmc inc mov sub in orb and push cmp lret sub paddsb sbb push pop mov les cwtl in or jge jo jg leave lock std jle adc adc js mov sbb shrl mov sahf sbb inc xor sarb bnd lahf imul adc xor pop js push xor (bad) enter not mov sbb fsts repnz notb mov and push out dec (bad) xor fs push cmpb dec sti push jp xor cmp mov (bad) and sub flds pop lcall cmp cmp arpl dec pusha mov pop add or and loope lcall call adc add inc or pop jecxz adc orb flds insb xchg ds and mov subb xorb cwtl mov sub enter out adc loop imul test pop loopne enter cld enter rorb into bound adc mov fisttpl jo addr16 pop mov fstpl adc lcall mov adc outsb xchg mov jne fcmovb inc jge sti sbb add jmp mov xchg sbb int jle fwait aas out cmpb jo mov loopne push jge cmc adc sub pop ficompl mov lock push pop inc addr16 sbb fidivl ret push movsl cs mov out dec mov jmp xchg adc dec scas aaa dec mov pop sbb dec pop jle cmp and xor inc aad les (bad) or insl jp int3 jecxz and push mov xor negl test icebp sub and fwait dec sub lahf enter loope and cmp add data16 (bad) mov rcll jle inc jo cmp cmp cmpsl push clc fs sbb ffree dec inc orb addr16 (bad) in sub orl push mov sbb mov mov push ja sbb aad inc subb outsl mov xor in and out outsb xorb loopne xor pop or dec lods push scas cmp test insb das jno jge (bad) mov lret (bad) ret pop sbb lcall sub scas dec cmp jle lcall and lcall cmp mov jmp mov cltd bound adc (bad) sbb lods decb enter orb pushf fnop and sub fcmovne leave xor addb pop test sbbl orb xor fldenv ss iret mov sub xor aam dec mov xchg andb push lock imul subb mov xchg in push js enter jo cmp xorb xlat push jno jle test jecxz xchg movsl subb lods inc cmpb mov mov add iret out sbb xorb inc add mov std mov call (bad) xor ret cmp ret cmp les (bad) int3 xor test cli xor xorb jne (bad) mov or (bad) xor mov aad adc cmp inc and fisubl add push lods inc jo pop stos cli ret (bad) jecxz pop cmpsb test incb out dec andb scas pushf addr16 jae xchg xor fiadd and jae mov dec subb outsb mov sbb iret (bad) xchg xor adc push fs movsb push enter pushf add stos pop push pop (bad) xor sbb (bad) and cmc mov addr16 jne or or mov or pop adc orb stos push addb inc mov leave inc test and outsb js popa cmp inc jnp int andb stos sti add aam lret into xor adc stos arpl xorb repz mov xchg (bad) xchg gs mov lahf andl xlat add mov sbb or cwtl cmpsl adc adc outsl jg adc push andb aad push add xchg subb ret sub and adc push push mov loopne jns mov in jno xor cmp dec pmuludq out add mov pop arpl push jno leave test jnp mov jmp jl shrl pop jp rcll add ficomp movb lods das add jg xchg out jnp or stc hlt jno pop repz xchg andb push scas dec mov nop mov xchg xor (bad) pop mov mov xlat aad ud2 cwtl jp push cld aaa xorl shlb in stos test sbb andb test orl dec (bad) xor mov jnp pop stos dec jmp nop fwait inc les imul pop daa (bad) repz pushf and fisttpll xchg int mov daa fildll lock push and popa jno push mov adc xchg mov push arpl cmp shrb enter jnp mov and and dec out or daa test mov jp adc pop jae add jle inc rol jnp test mov or xor cmpsb (bad) insl add mov imul jb popa inc xchg test movsl mov into inc push xchg andb aam xchg bound cltd sbbb cmpsl fiadd fsubr or jp cmp mov push mov data16 test and push stos test or vpmacssdql add clc pop aaa ret dec push mov lcall icebp sub pusha fdivs test jnp std or test nop dec mov cmp cmp insl adc xor dec imul jle aas add hlt jge and xchg mov movsl push adcb push sbb aas xor mov cltd daa cwtl fmuls inc pop stos in enter (bad) and inc adc lret sub stos push shl stos push or dec jne mov dec ljmp inc sbb jmp cs sub mov mov js or int xor testl mov pop repnz mov inc sub mov movsb jl ljmp cmp aaa bound popa sahf daa and fistpl loope jae xchg fadds div push push out icebp in adc mov xchg cmp cmp mov mov out adc cmc jle push push pop cwtl pushf and mov and outsb xor test fs mov xor enter addb add ret mov bsf scas icebp sbb add jp nop out and sub adc mov and or push fsts out lahf pop sub sub stc cmp add or push mov loope add jmp test scas (bad) sbb shll adc dec add push (bad) add xor sbb xor inc iret bound jo popl fcoms sub test cmp es (bad) out push ds sub adc pusha imul xorb push xchg clc sbb jns jle scas and icebp mov lret lcall cmpb sbb xor out insl out jg add push mov iret xchg aam inc fcompl arpl (bad) mov lret cmp arpl add pop std mov in dec nop mov in fisttpll pop xchg inc orb (bad) xchg icebp (bad) ljmp aas inc pop and mov xchg loopne nop mov rorl sbb insb lcall jae or repz fdivr outsb (bad) ret push lods das sbbl in dec dec mov in loopne ljmp sahf cmovle cmpsl jnp add jg out (bad) mov and inc add mov fs test mov push std pop sub xchg add test popa scas iret (bad) loop adc mov mov mov mov jnp dec in insb outsb cmp mov adc lahf pop sbb in outsl push mov and and add inc imul pop jmp lahf stc cli add jp shlb sti ficompl mov mov shll (bad) mov push into dec cmp jb addb mov xchg insl movsb aaa sarl imul ja fs push inc jns sbb cld pop repz sub cmpsl xchg adc inc xchg pop add push and loop mov mov es pop in test test adc and jg inc dec sbb adc pushf pop push enter in mov mov jmp pusha cwtl cmp movl sbb cwtl in pop mov xlat mov pop cmpl rorl xchg lret mov dec jo xor and nop dec mov int3 push xchg test arpl les add leave aad pop jbe fisttp out adc mov mov jmp sub mov imul and add dec mov fdivr push mov xorl xor jmp test pusha (bad) out push cmp xlat andb add and mov and mov inc lock dec add mov stos nop (bad) cmp mov xor sbbb outsl insl (bad) cmc or xchg gs iret xor xchg test ljmp xor aaa (bad) mov fwait lds xlat std xchg inc fdivrp ret mov jp jmp cmp sti lds test push stos xchg fnsave rol insb mov mov add movsl pop movsb pop sti (bad) movsl inc mov dec stos sub xorb cmpl test mov sub cli pop das (bad) xor repz add daa leave nop ss cltd mov imul (bad) lea xor loope xchg ret or ret or cmp out mov xchg addr16 and pop mov jo sub test xor cmp dec dec lods sbb (bad) push loopne out cltd mov pop jb or jmp cmp sbb sti push shrl cli cmp std mov dec or std add mov jbe cmc jnp push loopne mov testl add or jp testl in das ds pop out clc or loopne xchg adc push add icebp add es mov sub sub loope push mov jne jle or daa mov ret sbb dec lods fadds int3 mov mov gs add ds lcall cltd add dec sbb imul mov loopne push in addb ljmp cli in (bad) movsl fldcw jb push mov in or cmp jle jnp mov repnz mov loop cmp lds and add aas cmpb adc lds or lea sbbb ret aaa cmp inc enter push xchg cmpsl rorb xchg cltd dec mov and inc cmp mov rolb repz jae xchg scas orb fdiv pop jg mov lods push out roll ljmp fstpt rclb stos addr16 repnz xor inc push jmp fisubl mov push test sbb and cwtl mov sub push xchg adc dec test xchg pop dec adc test fidivrl sahf test dec dec (bad) pusha push cmp cmpb cmp stos fsubs xor fwait inc popa jl (bad) stc int3 ja test ss mov jae (bad) or sarb outsl adcb arpl leave pop (bad) and je int3 pusha nop adc (bad) movsl or nop jbe mov ficomp cmp add test mov ret outsl xlat addb aam test mov pop fiaddl cmp rorl xor xchg xor scas fadds sub mov fcomp test mov or inc cmp push sub pushf jp mov xor mov pop xchg data16 gs xchg adc in lods cmp xor and ljmp sarb in mov call and subb inc stc addb ror pop dec scas cmp rcll xchg add mov movsl je adc sbbb sbb movsb or or out adc sub cmpb ja adcb add and or mov xchg push fdiv sbb jle or stc mov or lea and (bad) mov jecxz jp aas loop add cwtl xorb je mov out mov inc push sarl jae lds insl xor aaa (bad) leave sbb into cs ficompl or movsl test adc in add mov stc push push cmp imul popa das insl lret jecxz insb sub cmpb push and jbe andl dec test ret aas xor enter pushf scas movb xorb mov xor sub lcall out cmpsb push pop test movl ret adc inc orb out or adc mov fwait inc jp xchg aad cmpsb dec ss (bad) insl fcompl fstpl xchg ret or scas mov or push es xor das nop sti popa lahf insb cmp and pop fldl lock addb pop adc xorb push test push repnz loop loope sbb scas mov mov dec push cmp mov sub std cli mov into das xchg aas repnz jge repz jno push test and repnz jp adcb inc je test push sarl out sahf pop cmpsl and xchg cmp adc andb mov stos or addl mov jb (bad) les (bad) mov mov iret push jne xchg add dec mov add adc add mov es mov inc dec mov jne (bad) call lahf pusha inc pop jle cmp int3 push pop mov inc adcb popw arpl ds jg cmp sbb scas subb arpl ss push mov dec orb cmp push ret adc add (bad) mov adcl pop mov ja xchg cmp cwtl addr16 das inc jle xchg inc mov cmp cmpsb xchg movsl push enter mov ret test cmp xorb rcr xorl xchg sub and nop or fidiv adc sub sub dec out addb dec mov sbb in arpl cwtl mov xor sbb jb or mov les jnp push das jne xchg jb adc iret dec mov push or test aam add sub sub pushf add call cmp xchg or mov into lret flds andl test adc cmp iret pop test ja cmp add (bad) in rorl (bad) fistpl loopne mov enter jecxz mov loopne (bad) mov les arpl mov loopne,pt jp jb cltd jge mov stos cmp xlat add or in test nop and push xchg pushf mov dec es xor (bad) and aaa sub addl insb xchg test nop pop sbb mul lock or rclb jbe inc sti mov (bad) jo add inc sub lcall mov fidivl shlb push fildll mov mov push in sbb jbe xor lods fisttpll sub adcl popl mov mov sbb xchg xchg mov and adc jns cwtl jle pop nop lcall lret fcomps bound adc mov xor sbb inc fldl push cwtl pusha loopne or jns sub jge jns popa pop cmp jo cwtl jae dec lods mov out (bad) xchg pop je pushf push andb push data16 pushf xchg sbb mov sbb sub push aaa cmpb rcll lods mov add add enter sbbb cmpsb lret add cmp mov lods pop push cmp andb dec or and movsb mov (bad) push or mov cmp lds xlat sbb dec enter cld mov cmpsb ror das add or in fldcw xlat (bad) flds add in jbe add call mov divb lretw jg push push add popa or jp jb ret mov sub test test xchg push cs xor stc adc sbb mull adc test jns in scas scas pop negl pop and xchg add add ret fsubl pop add adc lock or in into mov mov (bad) insl sti add loopne cwtl and lods fcoms bound xchg xlat jg push adcl js xor int3 or stc outsl push xchg call add pop aas pop cmc and xchg push (bad) mov (bad) div and push or lahf leave call ja int3 sub xor cs xor stos jle mov jge ljmp mov test pop push sti ds sahf iret fdivl mov aaa mov add sub shlb aam cmp mov cwtl or (bad) cmp lcall fcomps adc lds sahf popa js and (bad) and dec daa mov lock rcl (bad) cld push xor addl lds xlat pusha xor ja or push jg popf int cwtl sti incb fimul (bad) fild or mov test arpl sub fidiv jae subb fist mov inc test or test pop cli jns adc pushf cmpsb mov test pusha nop mov add xor fsubr xchg add cli or daa push cmpsl loop xorb sbb xchg mov pop pop lods sub mov mov jg data16 clc xor push push xchg jge and test mov das rcr sub xchg fistl (bad) int outsl enter cmp cli xor jne and arpl or sub jbe ja js push mov ljmp lds scas push roll add or pop lcall xchg fsubs hlt sub loope pop imulb test push cs imul cmp fistl in inc roll daa iret incb xor or jae fdecstp fidiv cmp (bad) add ret jnp repz bound cmpb sbb fiadd inc aam pop jno mov call mov jmp or icebp popa pop push nop sbb test xchg movsl adc pop or cmp cld ljmp (bad) enter adcb or (bad) mov fstpl lods mov cld inc mov xchg cmpl adc sub dec andb mov xchg andb dec cmpsl jno dec test arpl sbb shrl stos push mov paddd mov add (bad) jg inc (bad) loope ret andb cwtl daa (bad) testl (bad) je pushf lret push test int3 push fimull xor adc fadds xchg imul sbbb aam int outsb cmp insl cmp bound frstor mov add mov cmp pop mov subb mov push (bad) je out pop jnp or lret test (bad) push adcb (bad) xor dec cs mov test push xor popa dec mov lret mov cmp aaa sub loope mov cmpb cltd or adc out inc enter inc lock or push stos les daa (bad) sub mov sub addb insb std mov jl out negb mov in push sahf loope int3 call loop mov test and cwtl jecxz cmp dec sbb ss enter lret aad pop movsb in or mov jl xchg sbb fld mov cs (bad) imul jle enter je xchg dec pop mov lock xchg xor mov adcb enter jae lods popa xchg sbb jecxz,pn and push sbb js mov push lods or inc or adc ss (bad) mov out movsb or inc add mov xor ror ret je cmpsl xor (bad) iret push test lret xor mov dec pushf repz int3 je out loopne adc fdivs iret cltd je (bad) fisubl test mov lret stc cmpsb (bad) stos cmpsl adc and in loopne jmp jae sub stc jmp rorl sub mov (bad) adc push iret aam inc lret andl (bad) xchg push xchg fcompl jle int pop xor pop aam shr hlt xor test adc xor divb sub push arpl cmp clc test mov mov arpl ror enter xchg adcl add mov pop lcall movsl pop mov repnz test and mov mov nop sbb push fdiv sub dec pop xor daa add adcb jbe loopne jmp stos into repnz (bad) and out enter sbb mov pop mov roll xorb xchg mov sbb jns test dec call test out xchg ret loope or nop bound jb enter (bad) jbe sub fwait stos xchg cmpsb sub les pop rcr sbb je or pop and mov pop adcl adc ja aam flds pop push or mov scas iret (bad) jb xor lea dec mov icebp sbb and aad gs cmc sub insb adc xor loopne ljmp cmp int3 ja loop cmp (bad) mov sbb nop jge jbe lcall mov out int3 out fcoml aad dec pop nop dec loop stos adc insb xor mov clc aam sbb jnp cltd ret pop aas cmpsb pusha ror add mov or adc xchg adc cmp imul mov mov inc sbb or es mov pop or shll arpl test aad sbbl arpl rorb lahf xchg and sub mov scas dec push xchg push mov or (bad) sbb lock lods imul sbbb fucomi or cld jmp dec imul dec mov xchg (bad) mov xchg and mov mov jne push lret imul push xor cwtl jnp and push rcll mov cmp sub xchg popa push movsl fisubr mov repz nop outsb mov cli in or jo xor fnstcw xchg xchg push cmp adc xor icebp test xchg sbb mov jb or and lods outsl out mov sbb andb frstor cmp cmp leave dec ficompl sbb xchg lret inc aam mov (bad) adc fs add mov cltd scas rorl ret add cmpsb inc imul (bad) test jbe inc cmp fidivr mov sarb test add xchg andb iret popa fbld (bad) lock bound dec insl imul xchg ficoml mov mov and stos inc mov ljmp cmp cmpsl pop mov dec xchg ret pusha add inc adc subl rcrb or push dec and mov sub xchg mov call adcb mov cwtl xchg mov mov (bad) mov inc enter mov xchg cmpb fsts add loope sub or mov fs mov lock js rcrb cmp pop test ja fcmovne (bad) outsl fisubl mov ljmp cmc inc iret pusha and mov xchg (bad) mov add add div dec mov nop cmpsl pusha loopne orb mov xor add daa cmpsb pushf loop dec scas js cmpsl adc xorb addr16 mov and addb mov clc pop stc xchg imul adc imul or test adc scas fcompl sahf loope aas inc fistl imull arpl adc and mov (bad) jb dec push loopne loope or sbbb out inc loope aas xchg movsb xchg js (bad) imul nop sub xor (bad) xor addb cmp clc lods loope mov jae sbb jbe iret xchg cwtl inc cwtl push das cmpl mulps outsb dec orb cs test inc jmp mov rcll (bad) mov bound mov test mov mov fisttpll dec mov lcall or or fidiv jne jbe fadd mov push pop push lock xchg mov int3 rcl orl jb mov ds pop jecxz cmp lahf out xchg loop xchg jno out in repz adcb adcb lcall inc pop cmpsb add test pop jl mov xchg or sub pop std or (bad) and push lods mov push (bad) int cmp (bad) push push dec xorb repnz js rolb push cmpsb push or mov add xor stc xchg or inc stos (bad) daa pop mov ret insb xor je fcmovnb fisub sub lock or gs cmp ljmp cwtl mov stc (bad) mov pop clc add xor out in jmp mov xor xchg movsb xor mov subb in sbb fsub sbb cltd popa jmp roll sub loopne rcrl dec std sub shl testl xlat and push jp loop ret or mov sbbb orb xor enter adc inc mov fcomps add mov adc pop out movsb loope sahf mov and addb ljmp leave or repz dec jp push inc in mov add push (bad) pop cmp aaa mov mov dec movsl addb (bad) pop sbb jns or add subb xchg iret mov lahf arpl andb jne cli mov lods dec ret push cli push and mov loopne addr16 cmp pop scas test sbb iret adc cmp jb add xor dec addr16 test sbb lock mov (bad) sbb out ds scas adc leave das xchg xor add sbb xchg addl inc sub and mov test xor mov int3 xorl jge xlat mov and loope inc lret mov mov jno pop incb stos std xor lods sbb iret mov and cmp mov loop mov ret ret sbb in cld jns dec ficomp int3 insb xchg lahf shlb mov icebp fbstp (bad) mov sahf lock dec sbbl cwtl jo add (bad) jecxz xchg and push test addr16 psubb inc bound cld out in xlat inc adc push adc lahf push sbb push add (bad) clc inc cwtl (bad) nop mov fild call adc je std push stos jp jb arpl fdivrs (bad) rorl popf inc out add pusha and cli jp and mov cmp xchg stc jnp test xor mov sbb sti xchg sarb out mov xor cmp push iret sub push dec cli cmc lcall (bad) fadds jmp add outsl jnp mov cmpsb sti inc xchg daa sbb mov xchg lock cmpsb mov das mov sub mov fwait (bad) xchg sti ds test jns cmp cmp xor sub pop (bad) push mov loopne and hlt or sub mov cmp sti jae xchg ja sub test push scas dec sbb mov xor cmp fsubrs xor je cmpb movsb push in out int3 test loopne insl add sbb push mov adcb orl test out dec (bad) mov mov bound push dec mov in pop in jmp ror (bad) enter lret push jbe imul iret sub (bad) mov clc movsb fidiv (bad) push mov test les fcmovne enter mov sub and and repz mov cmp or push icebp (bad) mov inc (bad) xchg das or inc out ret cmp das adc in cmp aas out add sbb gs cmp xchg cli clc pop fwait cmp sbb pop adcb lods xchg clc cmp and cmpb imul xorb and xlat jle orl xor xchg scas mov cwtl or jno xchg lea adc dec test xchg push hlt push push sbb push mov cmpsl sbb mov add fs inc out movl nop call daa sub push stc jmp xchg movsb dec jl or push in jne jbe pop sbb dec popa push loope fwait aas add subl cmc test or lret add fild shll mov fimul (bad) xor jb outsl in out movsb enter inc jae rcll push mov icebp testb mov adcb mov outsb lcall bound aad xchg jns dec mov push jae cmpb add xor jbe xor repnz jo xchg into je orb sbb fldt fcoml (bad) shlb jmp leave push ss lds add inc sub test stc test (bad) and lret xorb out and mov mov adc enter add loopne cmp sarl pop mov les fildll (bad) jb pop adc xchg jg xacquire push adc dec jo xorb sbb adc fisubr lods and in (bad) mov xchg pushf cmpsb (bad) (bad) cmp add jbe mov sti xor pushl or cmp push xchg inc sbb (bad) adcb inc jbe xor mov mov imul sub sbb icebp movsb jno ja orb xchg pop lods loop (bad) stos jbe or jg pop inc orb rcrb daa and sbbl fwait pop movsl push pop cwtl sub jns push decb das mov fs fiadd xorb pushf fcompl add pop fcmovne push clc fwait push mov cld pop lret gs dec xchg stos and pop out loope pop mov fistpll flds or imul and mov rorb loop adcb cli hlt add aas (bad) andb loopne dec mov sti add shrl cmp adcl insb nop pop sub pop inc leave sbb jp adc outsl rcll cli adc cmp cwtl leave je cmp test std cwtl jns or cs out cmp mov mov jo stc dec imul (bad) add test add pop cwtl xchg lahf addr16 je and andb mov xchg jnp lods jno (bad) cltd ficompl insl adc nop popl mov mov nop cmp mov inc jg daa and orb addl adc ljmp cmp add cld adc aad test mov dec cmp shlb mov xchg or inc test lods (bad) rcll sub sub push lods sbb xchg sbb dec jae sub scas xor add jle test pusha sub sbb mov in adc arpl sub mov lea sbb jmp inc test lcall icebp pop (bad) loope sbbb gs mov inc test pop iret adc sub in or in bts mov cld lahf cs mov nop ror xor xor sub js pop std mov out (bad) cmpl or sub lock mov cld lcall xchg xchg out and xor adcb repnz cmp fwait add (bad) push lock mov sub sbb cwtl or xchg sbb xchg push (bad) push in dec mov (bad) into aas sbbb lods push add sbb pop and xor addb mov and icebp int cld xor sbb mov jne scas mov ljmp addr16 dec sbb pop enter pop add xchg mov mov xacquire (bad) insl cmc nop inc scas les adc cmp repnz cmpb cmpsb sbb flds and mov stos dec push pop test cmp movsl fisttp test test xorl push (bad) test popf inc and sbb clc int imul xor ljmp (bad) jno fwait pop (bad) in repz push cs add (bad) sub mov xorb push cmpsl pop cmp imul rol jecxz mov pop sub ja mov push aad jecxz xor aam mov adcb js andb insl xchg outsl idiv add in fcomps test inc js jmp or push cmpsl mov dec add aaa stc xchg (bad) cwtl sbb inc mov inc insl jle fidivl ret clc inc mov pushf pop andb mov cmp and and jecxz pop sub cltd mov inc add xchg xor pop xorb out xchg rorl lock movzbl sarl add test popa (bad) push cwtl cs ja cmp test or rolb scas in adc cmp out xchg pusha fsubs sbb in mov addr16 ja in mov and stc fiadd lock call sub (bad) stos xorl mov (bad) mov iret negl lahf fsubs xchg jge or insl cmpb jns xor jne mov push test mull addb lret inc mov mov adc std add xor daa scas push xor (bad) mov push jne and sbb clc mov xorb jb movsb scas outsl out or cmpb sbb dec scas js rcrb mov and dec outsb jae enter lret stc fcomip pop fbstp or lods (bad) mov es fimull daa pop push inc inc xchg mov mov hlt pop cmc leave xor mov jle adc jle dec fisubl andb lret jmp and push enter shrl fwait out mov xor mov cmp sub push rclb call sbb mov gs movsw pushf adc dec jmp mov pop mov andb cld stc (bad) dec outsb enter popf arpl push test hlt negb jge xorb push stos mov and xorl cwtl outsb xor clc pop xor pop andb xchg sub nop movsl push push sbb mov dec popf pop test movsb pop in gs xor test lret xor adcb push xor pop bound mov into repz (bad) cmpb push xlat into sbb je daa adc pop es dec cmpb test mov ss cli add roll lahf mov mov sti cmpsb add push mov (bad) jb mov shrb inc jbe adc fildl cmp mov (bad) daa xchg inc les test repnz pop sbbb test (bad) sarb subb insl nop jae or cs sub nop dec inc mov sahf mov icebp mov push adc xchg negb dec adc fs dec cwtl and inc clc loopne ljmp pop loop subb inc pop dec adc daa jl cmp jl or nop pop and bnd ficoml mov sub sub test pop in push and pop mov push sbb jp sbbl pushf andb dec test or inc mov add aas mov cmp test dec cmp lock pop mov xchg mov sbb mov inc mov pop pop push push mov ror addr16 icebp outsl mov adcl pop hlt or push pop or cmp sbb pop in mov adcb pop gs pop mov or jmp pushf mov xor sbbb (bad) loop pop mov dec popa mov out adc mov test push and push pop mov jl jl nop push mov mov hlt stc movsb scas add push jno xchg lret fildl cmc mov push repnz arpl sahf lcall push sub dec xchg test xorb in dec ljmp mov subl mov xor push (bad) mov and sub mov mov js or mov and pop mov jp ds call sbb lea xchg jo (bad) adc add push ja jnp popf cld mov int aas out data16 mov mov js es lret les inc in dec jge pop jns out lds and xor nop loope or jns bound sbbb outsb (bad) test push ret mov hlt cmp xor ss dec jb push add inc add cli add add push rcll js lea push insl sbb testb sub cmp xchg ret cwtl fwait jns push stc inc inc sub cmpl fcompl outsl test push fnsave fcmove adcl lock clc add nop pop rcrl test loopne sub jns rcll push and xlat mov and call sub int3 pop nop xlat pop cmp xchg xchg cmp test sub adc xor data16 xchg iret push insl cmpsl and out fadd clc scas aas (bad) insl mov ret icebp add (bad) cmc mov and mov jne fsubrl jg int add inc xchg and jg pop mov pop inc (bad) inc add aas int3 mov scas roll fistl imulb inc dec subl xchg loope add aad jnp sar movntps in bt pop call cltd push repz cmpl loope xchg popa dec cmp mov mov xor lret push addr16 nop push jmp nop jp int3 (bad) xor inc xchg push jle bound inc lret cmp add mov mov lds and jmp dec pop fildl in addr16 pop scas fisttp adcb jnp clc js cs popf (bad) je xchg pop sbb pushw test out xor aam inc add mov sbb lret stos pop cli push adc mov loope sbbb xchg gs pop fistp pop fsubs rorl aas push sbb cwtl pusha mov sub test cmpsl mov inc js push pop imul test sarl mov movsl push loope in or pop cltd cmp xor arpl xorl xchg and sub js push pop sti cld pop mov daa rcr test out jo pop loop into sub adc imul (bad) das mov fs xchg insl cltd xor outsl push mov add inc fild sti bound test jecxz adc jb (bad) jg cmp pop aam mov iret fmuls push xchg testl clc (bad) aas jae xchg divl pop das rclb xchg xlat es lret fs leave lock pop andb jmp add loope mov lcall and pop leave add insb xlat sbb in arpl sbb jb loop incl sub or and in mov dec mov aam outsl xorb or and jbe sbb lret sub jge add scas nop mov int out mov (bad) xor lea mov call push jg mov aaa shl subl mov or jp cmp pop mov testb subb out test cwtl sarl mov inc cmp stos jg das sub cmc cwtl xorb push inc jle imulb pop fwait sub jge pop loope int3 subb dec pushf cs lcall (bad) out (bad) xor pop addb sub sub pop jnp add jge das xchg imul imull addl mov cmp dec dec imul stos repnz pusha xlat arpl in das add add sbb insl insl add inc xchg adc and push xchg loop push dec pop xchg ret mov call (bad) (bad) jo fadds lret pop int3 out and iret add movsb jae inc mov push js lock jmp lahf lds jp pop fsubl cmpsl pop (bad) (bad) aad loopne aaa inc subb (bad) enter and jl aam add jns lods pushf xchg loop inc out addb imul lods lds ret sbb mov pop push xchg stc pop mov sbb cmpb cmp xorl sub iret mov pop pop in jne add pusha aad pop cmpb vrcpps mov insl sbb cltd pop xchg js lea sub out jb cmp cmp daa cmpsl nop cmp sub lock pop in addb mov xor (bad) jmp test dec cld sbb in cmpl (bad) iret jecxz xor cmpsl xchg mov (bad) pop in ret add nop insb movsb repnz jle jo mov loope in sbb mov out xchg cwtl add mov insb sub in mov fiaddl push and rol gs push bound mov mov sub insb mov cltd cltd lods inc jmp js mov cmp pop shll fstpl int3 xchg dec in push gs jno std out stos pop mov sub js sbb rcr mov mov (bad) out push fcomps xchg or loope (bad) loope jno orb pusha bound adc or orb cmc dec jno ljmp adc adc in rorl clc jl cmp (bad) jne pop ffreep adc int3 xor jno xchg xorb mov cmpsb push addb les imul mov or or insb jbe dec addb add adc stc (bad) aam imul push mov jno push mov mov pop cmc orb pop push and pop fwait push dec insb sbb out mov xchg mov (bad) movsb pop (bad) clc add popf mov pop testb adc jns test out (bad) mulb scas mov push call xor mov pop jp test pusha mov push test pop (bad) mov mov cltd pop sti push inc jne mov push mov push pop popa or aaa (bad) xor jae aam fdivs sbbl push dec adc mov aam test outsl out loop addb int and push xchg pusha push cmpsb lods xchg cli adc mov and or push push outsb clc xchg xchg dec cmpl sarb pop cltd and inc dec mov aaa pop jg jno or xchg insb hlt pop faddl mov test mov test push outsl xchg xor mov in adc mov add test inc insl xchg or mov push mov xorl subb mov cld arpl stos addb adcb xchg inc dec (bad) xor lods mov jns (bad) push mov fs (bad) into dec push jnp sbb insl divb data16 rolb (bad) (bad) and pop mov mov jbe stc ds mov pop xchg inc mov sub outsl pop test daa jne pop hlt psubd enter mov push and (bad) mov ret stos std xorb out cwtl mov movsb add seta sub sbb push subb div push outsb xor ret mul or mov jecxz xor jnp jns movsb (bad) sbb xor pushf adc push iret cld add loope mov test stc jg inc jmp xchg add inc (bad) fadds push xor jecxz (bad) (bad) push mov mov adc fsubr add sub (bad) adc sbb test inc in dec clc div adc pop cmp (bad) outsb or pushf int3 mov push push leave mov fcoml jae int rol and jo pop in and js repnz xchg addr16 shll pop xchg sbb fdivrs xor adcb jbe faddl and or das shrb inc loope mov adc add xor mov (bad) lcall mov push mov cwtl cwtl mov push xor mov cmp sbb outsl test dec outsb xchg nop jno (bad) mov (bad) scas mov pushf pop dec adcb mov or xor and pop or movsl pop pop sbb sbb (bad) js ljmp jo or addr16 mov jne cmp data16 lcall push push sbb call stos dec xlat dec fwait mov adcl mov xchg lret insl sahf cli sar or insb xchg cmpb dec pop insl fadd add mov scas cmpsl (bad) cli inc data16 adcb xchg xor in scas jno aam test xor push lock mov ret nop or aas addr16 cmp in or addb jp push movsb scas pop int lods jnp or ja cmp xor andb jne dec mov mov mov dec push lods xlat addl inc in mov jl call lea enter cmp cmp aaa outsb call mov sub push fidiv mov or jl shrb rcrb adc loope and jo jl push movsb rolb adc leave xchg repnz mov adc sbbb cwtl and fistp movsb xlat and fmuls cli stos or mov inc in add enter adc inc out inc icebp orb pop xor lret adcb push sub movsl fwait fs add adc or bound mov sbb orl (bad) loop mov enter sarl sbb push lea cld cmp mov jb xchg xor out aaa jge shr or fmuls jp pop sub push movb inc cwtl jmp mov add fiaddl cmp xor mov cld lock call andl and fisub jo lret add dec test sub mov out mov sbb fidivl les pop lcall fwait popa jmp mov cmp inc lods addb movsb sub mov int3 xchg enter push mov mov cwtl and mov and inc bound (bad) nop nop push mov fcompl ret xchg subb xchg insl mov imul loop add nop insl loopne test adc cltd sub and xchg stc je popa jae or dec dec pushf andl xchg sarl add lds lret daa inc iret cmpb or cmp push test outsb ds mov aad sub or pop xchg push (bad) (bad) adc mov adcb lock mov icebp aas push inc inc andl sti mov adcb or xchg jmp mov and mov call out ja clc (bad) sub xchg ret clc xchg dec xlat pop arpl int3 xor cmp pop cmpsl mov fs imul arpl sbb fldl add js jecxz cld aas lds scas clc dec mov mov mov xchg mov fld aam enter mov leave lock mov mov mov jnp xchg mov jge mov lahf jecxz add mov rcrl lcall loope xchg loop dec sbb mov pop push push repnz cli jbe sahf fs test push mov or (bad) loopne pushf arpl sbb das push jl cli mov ret and sub and mov addl dec fs jp leave sub pusha mov insb inc lcall nop or inc cmp std mov aaa add dec mov push cmpsb cwtl test xchg push xchg shll inc pop outsb cmc mov test xchg and flds mov add xchg rclb sbb in fwait leave clc notb fcoms fisubrl sbb outsb in push xchg fmull (bad) icebp mov push insl lds (bad) dec mov inc push sbb push sub mov js mov dec xchg add (bad) push inc jbe jge or call rclb test or es insb test cmpsl stos add mov aas iret int3 sbb inc aam xchg insl rcrl push mov iret out (bad) test out insb mov out arpl ljmp adc xor cmc mov adcb mov dec xor subb std (bad) xchg popa add add test dec jmp mov or and cmpsb mov dec stos or add cld lahf nop add out xor mov adc inc insb lock sub adc xor jecxz dec aad xorb hlt or mov xlat dec xchg les add (bad) cmp lea cwtl push mov repnz inc mov sub aas adc outsl mov and sar subb int in out mov or jno sub in orl add mov aas mov ret jmp stc add pop cmpsl xor push enter leave jo ss pushf data16 add sub pop pop push stos into push inc sub icebp ja ljmp push lea leave nop lret push sbb idivb shr xor add inc mov mov pushf arpl mov int3 inc mov daa out jae (bad) mov ja shlb cmp pushf js pop mov sahf mov cmpsb inc icebp (bad) aad xchg (bad) iret syscall in subl add fisubl mov add rcll je aaa pop nop out push push jge mov cmpsl and iret mov add mov sub test mov or lret jmp jg add lret pop call cltd andl mov shrb mov daa movsb inc and lock icebp cmpl (bad) adc outsl xor icebp insb xchg add lcall in jnp inc or xchg push xchg sbb jge inc dec mov xor add mov add pop test adc cmp xor inc jle jl adcb (bad) dec popf sub nop cmp cmp dec xchg je push roll inc sub aad cmp out lock mov nop or aas lahf jmp add (bad) loop repz (bad) adc sub pop mov mov sub jp sbb imul pop fmul and sbb mov sub in mov pop fdivrl xor enter ss add mov sbbl scas repz pop addr16 test cmp stc mov psubsb sub push xor push jecxz fcmovbe aad rcr cmp inc mov clc stos mov test fdivrs sbb imul and push cwtl mov lds mov xor mov loop push push mov movsl add inc ror sub xor mov jg popa orb dec lock or push mov adcb ds jmp xor je rcll dec lret dec pop nop sbb mov mov pop mov mov push loop daa lea dec jecxz insl sbbb sbb addr16 or add shl mov push cs push loope ret xchg xchg push scas hlt js mov pop gs cmp jg (bad) out mov clc push jae icebp subl lods adc jnp mov fadds add sbb aad movsl push out (bad) dec xchg (bad) int inc inc cwtl fimull orb cld push sub aam sbb loopne andl out xchg xchg mov xor mov or jmp xchg insb xchg mov (bad) scas sub fiadd push mov jns and pop nop movsl stos push std xchg xchg cmp xchg les stc fidivr dec xchg and insb jecxz push out mov xchg jae cmpsb outsl or add sub loope xchg bound test in clc (bad) stc add add adc out enter add fcomi insb xchg mov add dec jno in test cld push loopne (bad) cmpb xchg mov cmp pop cmpsl imul mov test mov notb (bad) je adc (bad) movsb push das out jno or test add xor or mov pop test add push jo movsl jl and push mov push cmpb adc cli test clc call ljmp adc jo cmpsl inc addl mov cmc lods (bad) in ret or mov loop cmp ret push subl imul lahf mov clc inc movsl adc loop sbb sbb xchg mov (bad) ficoml and cmp lcall test xchg int jg or push cmp test aad jmp lea pop lahf add xchg mov pop hlt in icebp xlat ret test loope sbb (bad) ds jbe insl pop jb adc xor and call cmp cli idivl jecxz mov fimull hlt mov dec in mov data16 mov test es pop mov inc shr dec sub or mov sub ret cmp lods and mov faddl sbb pop les adc xchg push or pop arpl (bad) rcrb (bad) cwtl das xlat (bad) nop push mov pop cwtl and sub sbb int sub incb mov mov scas mov cmpsb std sti sbb mov xorb mov xor jne test push mov test xlat test add fildl aad inc test dec xor cwtl and jg xchg mov ret in xor add push cmpsb fs mov mov sbb add inc jae or fldenv movsb fild mov int3 mov xchg icebp mov rol pop lcall rcrb jbe jnp,pn dec pop inc out dec mov mov adc dec add mov nop cwtl cmp adc xchg jae clc jl int3 mov jecxz (bad) leave popf bnd nop rcll or mov mov cli lcall mov fucomip mov mov jl stos ret adc cmp push and roll es mov xor add cld dec std clc cmpsb pop sahf pusha sbb popf and lea arpl xchg nop (bad) hlt shrd xchg enter jb iret inc add sub ss ljmp or xchg pop sahf daa je and bnd or sub and rolb (bad) cmp movsl ja,pn inc and (bad) jbe (bad) sub jp inc sbb test pop fwait add and test cltd arpl lcall fucom mov mov inc inc mov in sub test mov add pop inc xchg adc xchg sbb adc add nop xchg sub test fstpl call imul sub cmp js mov pop mov pop andb stos addb pop cli mov mov jmp adc jge jg ja rclb xchg sbb lods addr16 add loop xchg pop add imul jno push mov int3 or fldl push test dec test sbb les sti enter insb daa xchg push iret loop xchg ret mov push addl fnstenv jae js imul jl xor xchg (bad) std add sti rolb mov leave push (bad) dec mov mov and mov aad insb (bad) add pop addr16 xorb cwtl xchg imul jmp scas out pusha cwtl lods cld mov pop jge mov stc xor test addr16 cld xor aam cmpb in ret and xorl add (bad) aam mov lret call adc pop add sub mov mov shl jmp push add cld adc testl xrelease notb and nop jns imull sub sub cmp scas xchg (bad) mov xorb loop pop mov negl cwtl ret push add int3 in int3 push add sub sub pop jnp std jp adc jg outsb cmp and mov cwtl mov aad and push dec lcall and push xor ja ja push ss xchg fcomps jo aam mov dec mov iret xchg jb cmpsb dec adc push jmp (bad) incl (bad) movsb pop test rol rcr arpl (bad) pop mov mov orl addb jmp mov inc mov xchg jo adc pushf gs das or or aad adc mov mov arpl xchg (bad) push or lods push scas int cwtl push jnp fisubl mov pop mull mov and cmp lea xchg adc mov int3 mov nop cmpsb mov (bad) sbb adc enter mov jno icebp lea std or inc dec push or adc xchg cwtl outsb dec mov icebp (bad) repz push sti inc inc incb push xor xchg (bad) call xor popf sub lret (bad) jnp,pn mov insb pop add sbb inc gs (bad) roll insl (bad) sub subl std xchg jge dec push xchg dec push (bad) js lds bound jle xlat mov sbb add lods iret inc mov xchg sbb out mov sti (bad) xor xor mov pop bound sarb fild mov mov (bad) outsb and (bad) and (bad) aad and dec out test outsb addr16 pushf adcb les adc ja hlt and mov xchg cmpl sbb lds pop jno pop lock insl fiadd or test dec pop jp xchg or lods dec cmp ljmp out cmpsb jle jp adcb mov pop sub cmp add sub cmp xchg inc test cwtl call push dec xchg (bad) xor stos dec jae push imul or (bad) mov or sub push jns sub mov cmp mov (bad) andb orl and mov and mov sarb dec jns fisub test incb pop fisubl push sub imul cmpsl pop std add sub mov sub aad push cwtl sbb bound ret jbe xchg (bad) jmp mov rolb mov add mov xorl jmp jl lods inc clc int3 loope push addl add cli add addb sub adc jmp mov jae cmc test shlb inc xor (bad) add inc insl pop pushf push push sub xor lret xchg cmc ret push ret mov adc daa pop aam push (bad) aas adc iret fwait scas fisttp lods mov out inc jns aas (bad) fsubr ret mov aam dec or cmp imul enter inc (bad) enter and push pop (bad) sub int addb dec rorb les pop lock insb sub inc mov iret pop call fstpl test and pop push pop repnz int3 push ljmp fdivrs jmp (bad) clc mov hlt adc enter or mov aas test and lock in test int3 rorb in xorb icebp xor lds sub pop mov daa sub jle ret cmpl push jo or out cmpb adc pop pop aad adc jle in and dec clc sbb adc (bad) pop pop je pop mov clc xchg sar mov push push push orl mov dec (bad) push (bad) (bad) shlb pop push nop in sbb jg (bad) insl cmp push push jle cmp add or xlat flds jo xchg inc ret inc cs shl xor adcl and rcll mov or adc stos add loopne mov inc xchg or clc roll into sub xchg addr16 rorl ret loop jl or ds aam enter imul mov xchg test jnp nop pop repnz adc sahf stc (bad) in subl pop lods push cmp cmp sbb imul add nop (bad) xor es addr16 lods test push jbe mov mov std scas jg mov test mov dec mov jle adc lret xchg xlat andb subb in orb cmpsl push sub cwtl pop incl mov and jge xchg test mov mov sub adc xchg inc jg inc xor add or and or and mov xorb loopne xchg sub sub arpl pop jecxz xlat (bad) cmc mov inc push in fsubrs lret sete enter test mov outsl push mov sbbb (bad) (bad) xor addr16 arpl repz push dec pop subb or test clc lods cmp jl and or mov sbb mov xchg mov das add clc addb xor xor enter xor cmpb lret lea cltd hlt shlb push (bad) xor movsl mov lods leave inc xorb jb popa testl dec push xor dec cmp mov repnz mov jb sbb (bad) pop or sub test dec add cs fistpl xlat decb movsb lcall cmpsl ljmp cmp pop cmp mov inc mov fbld dec mov aaa or pop xchg stos jno or push mov or xorb mov lock or lahf addr16 jmp test inc mov jp mov leave xchg mov jae cmp add push lock mov and add orb jo push lea cltd mov pop stos fsubr xor pop in addb rcll cmpsl inc cmpb sbb inc movsb add sub mov push adc mov orb call push (bad) repnz sbb inc cmc orb pusha add and lods jle mov ljmp imul (bad) push mov lods mov pusha (bad) cmp aam cwtl andb mov outsb repz mov xor mov (bad) push rclb dec dec scas imul stos dec nop xchg lcall mov (bad) insl je cmpb and add mov stos rol xchg cwtl ret xor add pusha lahf sub jb add loopne add push mov repz xchg test dec enter (bad) into push outsb mov sbb test je das iret push pop jge int3 cmp test ljmp inc jge add out add sti inc mov cli nop cld test out mov sti movl nop jb xor fadds dec jmp rcll repnz mov dec leave jp mov add sarl cmpsl icebp push daa cmp cmpsb (bad) aad outsl inc mov inc movb aad int3 movsl adcb fnsave mov jbe jmp mov cmpb or lea aam mov jb (bad) (bad) xchg pop cmp mov inc and fs sti sbb (bad) fsts mov fmul shrl xchg aas fwait lcall mov (bad) test xor adc cltd xchg mov ss mov cs cmp inc mov andl add rol pop sub mov aaa and sub xorl nop (bad) pop fcompl test dec xchg (bad) add pop ss push orb push xor test lret push daa mov repz pop ljmp int3 loope mov jae fimull mov outsb jmp mov or mov cmpl pop push cmpsl andl aad mov int3 shl fstpt rcll enter mov gs iret or imul int3 fwait cmpsl sbb fs jp sbb pop mov mov jno (bad) (bad) jb fcompl dec test push ja nop into repnz jp stc inc arpl adc lods add rorl jo adc mov xchg cvtdq2ps test dec mov iret and jmp cmp outsb add sahf test cmc dec sbb mov fidivr lret (bad) iret lods ss sbb (bad) xchg in call (bad) or sbb add xchg cmp jae mov add test addl sbb enter mov sbb outsb xchg sti (bad) fs cmpsb inc test movl xchg fsubr ret lret cli mov lods cmp fmul xchg push or gs sbb fiaddl jno adc iret outsb nop cwtl add fidivrl loop cmp iret mov jo inc xchg imul push aad mov imul cwtl ficomp or and mov lret jbe clc sub scas and outsl cwtl xchg daa aam jne push ficomp xchg addl cmp andb add and jno sub test mov test add fcompl ficom fisubl and push inc int3 nop xchg test and mov pop dec repnz subb push jno pop sub add pop add sub cmpsb push (bad) fdivp xchg or jnp nop xor or (bad) add lods icebp in cwtl push test outsl mov dec adc mov pop cmp mov inc pusha aaa pushf push fisub push push sbb imul je push out sub inc popa xchg push loope out adc leave pop mov ret sbbl adcb jo mov into imul mov (bad) sahf push nop cmp loopne adc jp (bad) push fildl fsubl fdivrp mov xchg subb or jbe addr16 enter cwtl sub jnp xor loop inc mov (bad) mov pushf jns pop jecxz jge (bad) sbb and add paddsw das jge repz aam dec test adc aam out mov sub sti mov jo mov out int3 sbb ljmp and mov inc popa sbb inc mov lret mov add into rcl push cmp orb (bad) ljmp push (bad) sub xchg rcr jmp mov fsubs aam mov rcrb (bad) or popa xchg xor stc push sbb jle movd je orb clc mov cmp fldenv test idivb mov sub pop mov cmp jns dec mov add pop fidivrl mov fidiv lcall adc lret xchg inc (bad) sti (bad) push pusha jo and lock orb inc sarb lock repnz jmp ror xorb out test cmp outsb incb adcb dec and jnp mov jae aad cltd xchg shrw ret push stos subb sbb fmul cmp add (bad) (bad) bound xor cmp cli fdivl sbbl mov dec cmp fisttp lods arpl push xor fadds fild in cmpb insl ret sbb and xor andb dec stos xchg jge cmc xor orb (bad) or mov adcb xor rcll scas jmp (bad) in fimull xchg sub pop int fildll sub jmp mov (bad) shll or in cmp mov dec mov mov push sub test mov adc fs mov xor pop pop add mov dec dec mov push xchg inc inc out nop mov (bad) pop inc xchg je scas cmp mov es scas cmp lret outsb fdivrl cmc stc enter mov in xchg dec decb or adc in xchg mull cltd xchg subb jne xorb xor dec test pop xor sub cld andb or mov bound mov ret push test push cmp cwtl lods arpl dec dec inc incb dec mov imul mov push sbb sahf dec iret stos push jmp mov or sub or sbb pop dec addb aas push push (bad) daa enter fwait sub movsb push (bad) adc subb (bad) cld loope lcall inc add hlt sbb mov lahf data16 mov scas dec add mov cmp leave sub jp rorl dec mov push add lahf xchg inc add jle ret cwtl inc and hlt or insb adc orb std add xchg icebp jns pushf andb add or cmp pop mov push sub jne sbb jmp and or orps sub enter xor push pop sti xlat and sub cwtl leave addr16 movntps xlat push sub jmp subb ret (bad) push inc pusha pop adc ds iret cmp (bad) xchg insb je lret loop lcall and adc das mov inc jae imul inc inc xchg cmp mov jg fild lret xlat xor (bad) addr16 mov push mov dec jle xchg cmp movl stc mov loop test jl js add dec add push (bad) lret jmp or stc jge xor pop push jg jge aad xchg push andb jmp mov mov xchg jo test or add push push push enter cwtl adc xchg stos cmp icebp pushf xchg (bad) frstor sti gs in cmp xorb inc mov cmp and faddl xor mov outsb add fs enter mov fadds cmpl push call lcall test pop aad dec sub daa or sbb orb jno cmpb mov push sbb jae je add adcl jnp test pop xchg mov sbb mov pop andb adc nop outsb js pop mov mov mov dec xchg cmpb fnstcw and xchg mov addb mov in jns push scas gs jne push hlt fs and sub mov push mov mov mov add jle ds movsl (bad) fs jns add pop sbb mov sbb dec cmc push inc push cmp addr16 mov jbe and xor jb mov xchg push popa sub int3 pop clc xor sub movsl xor int3 inc add add out dec nop adc push xchg push cmp adc xchg adc or jmp int3 cs mov lods adc in mov push adc push pop or xchg sarb outsb sbb cli lret ret cmp mov adc fistp cmpb push sbb fcompl xchg jno mov and adc (bad) test repnz test xor add jns aad rolb pop fwait popa cmp subb mov xor enter in jl mov std popf bnd int3 orb cltd add repz mov in ljmp sub lds dec adc xor mov jp jl stc push js int add test push dec mov or sbb shr into jb pop stc jnp loop inc mov mov push xchg mov inc sbb ret xor out pop mov movsb xchg sahf mov xchg ja ret mov leave adc iret call push jae into loope insl and xchg test sahf pop inc jp pop sbb fadds cli and (bad) sub push addl loopne cwtl sbb lcall and pushf (bad) iret push or in jne js xor cmp mov orb daa jmp mov jl aad dec js pushf pop (bad) lcall cmpb add sbb fdivrs outsb adc das test jl mov nop movsb icebp adc inc into push test dec push dec jg xor les stos sar jns (bad) xchg jp pop mov (bad) out mov (bad) out push std jge and int daa or bound push jo jmp mov sub cmpb ror xchg mov bound popf pop or (bad) sarb inc mov aaa fsubrp xchg pop push subb cld clc ficompl pop adc mov pop xchg adc movsb add xchg subb or mov in sub push mov fmuls ss xor jle pop lret mov cmpsb js fs mov or in hlt push (bad) in or std xor cmpsl inc jle (bad) mov scas push es arpl push loope popa out add cli popf stos nop mov sbb sahf pop out and icebp push bnd rolb fs into adc dec adc idiv enter (bad) js roll call cmp jns mov daa xchg and test (bad) outsl mov adc movsb mov sub ds push aaa fsubl das into push mov xchg popa aam stos xchg cmp pop nop std shrl adc das adc fwait mov std cli movsl mov pop lods jo sbbl mov mov jp dec adc lahf js icebp cmp pop cmpsl xor cmp roll test push inc xlat cmp push in mov imul sti test dec dec aaa cmpb andb pushf pop in (bad) out orb mov repnz sti xor lds cwtl mov faddl ja (bad) and mov addr16 addb mov out add add movsl pop mov shrb inc pop inc cli enter xlat adc push out add xchg inc aaa test push lret ss test jae xor pusha xchg (bad) fiaddl clc push cwtl dec orl dec mov test mov hlt pop sbb mov out inc jl or les push inc sub std hlt push or xor pusha or pop cmp fdivrs sbbl nop pushf cmpsb loopne lods cmp sti test jns push enter cmp test dec mov (bad) lea call stos ret enter and call insl cs das and pop mov int mov xor xor sub aaa pusha or movsl xor orl add aas mov push push sub repz (bad) dec cs xor mov rcll cmpb sbb add adc out sbbb push stos xor cmp sub iret dec mov mov pop xlat sahf pop mov cwtl nop jbe lret push popa das lahf xchg into addr16 add mov andb popf fsubrp mov mov rolb lahf inc inc sub imul mov cmp pop xchg lea cwtl test negb scas out lahf fdiv jb js adc or xchg repnz shrb xorb xor addb nop adc gs adc mov sbb rol pusha mov mov jne or rorl jb nop sbb (bad) mov sub in test enter in mov test test iret dec cli inc add outsb mov jg cmpl sbb imul adc cltd push jno test daa xlat aad mov outsl orb notb pusha xor sub push nop jb inc imul mov or aaa inc mov (bad) xlat add mov xor loope mov aaa imul inc sahf push push sbb or add adc pop mov dec push (bad) dec jge dec mov dec sub mov into rolb inc cmp mov test push xchg pop inc xchg mov xchg loop mov cmpsb cmp and js sbb or repz and movsb dec cwtl (bad) jns (bad) mov sub cld cmp xorb out icebp and push sub or sbb sbb fldt stc mov jge icebp add fsts mov andb outsl in nop mov clc adc addb inc mov adc mov aad jo sub fwait bound pmuludq subb pusha mov sbb sbb sub mov jne (bad) push add dec incb mov add mov mov (bad) pop popf xor xchg insl mov addb ret imul test sub jae mov fnstcw sbb sub arpl xchg stos test fs inc enter test (bad) out mov pop inc sbb negl dec mov push jnp lock mov sti mov mov fdivs loope enter xor push sub mov xchg mov mov loope push cmc adc dec (bad) daa movsb xchg ret clc lock fwait xchg fstps push (bad) cmp inc push pminub out rcrw adc pop and ret (bad) jo scas idivl mov xor popa out aas enter pop ror aam jg dec mov jne mov cmp (bad) mov addb outsb push in jl mov add (bad) jg and test nop push and shl insb (bad) call mov leave addr16 ja fbld cli jns (bad) jg sbb aas jo xchg lret orb sbb in nop (bad) pop and xor cli add fwait or adc test ja adc sbb cmp orl mov xchg and cmp in gs cmpsl pop mov xchg enter jmp addr16 pop scas cmp (bad) dec movsl popf pop clc subb leave sub jno cli pop mov aas (bad) cltd (bad) test or push rorl loope,pn sbb add rorl pop insl (bad) (bad) jb loope add lcall xor sahf dec mov mov (bad) push hlt ss imul test push fistpll (bad) in and das cmp jbe xchg (bad) out and jle mov fnstsw stos adc mov jbe mov test mov sub (bad) push cmp and arpl mov add out repnz xchg mov loop sub push addr16 and sahf xchg imul ljmp fcompl pusha nop push cmpsb outsb mov cmp rcrl mov (bad) (bad) sub mov mov mov iret flds idivl jl test jmp xor test cli cwtl mov out pop jle jae sbb sbbb lahf xchg addr16 inc xchg addb jae shlb test outsb dec inc incb xchg lock push xchg mov (bad) lcall (bad) je dec lods mov or push dec lods mov loop ret ss pop pop fcoms jno sbb in (bad) push cmp test das stos dec lret add xor clc pop or pop mov xchg pop sbbl bound sub push sahf (bad) jge sub mov push ret push icebp jp test subb push jb notl in je in sub aaa insl aas subb pop loop sub add cmp add testl arpl xchg and mov push out xlat icebp test adc mov sub push adc test subb ja mov loop push (bad) xor pop in inc popf pop push or add sbb leave addb xchg xorl sti std pop popf cmpsl mov jg icebp sbb rclb push pop xlat pop ja mov sbb xor sub mov dec incb inc push addb subb push pop out pop scas (bad) sbb ret addb sub in lcall jae xchg push popa xchg mov adcb movzwl xor mov pop mov ret cmp jns test mov enter mov xchg fdivrp add jp add mov or ds pushf inc in rcll cmpsl xor add mov lods push push lret gs mov fisub add shl pop mov push jb add pop pop xor test out (bad) icebp notl xchg cmpsb outsl xchg push pop bound mov fsubr mov lret xorb xlat and and into testl mov insl out fadds cmpb or lret sub rcll push jge orl out push inc mov mov ficom sub (bad) nop push test jno push (bad) pop sbb fisubr or clc mov orb lods xchg movsb stos dec sub nop ss mov out or push sbb repnz icebp and dec mov fwait push mov scas andl push jno sub ficom lods xlat rorb dec xor or insl mov jmp pop pusha mov pop mov (bad) jmp sar mov stos movsl push and cmpsl fistpl shll jno,pn aam aaa jb mov popf jle in in dec xchg mov pop jnp pushf (bad) push fimul dec sahf jge ss push cmpsb mov movsl out cwtl outsb lods into les sbb (bad) or push mov iret outsb fmuls int3 mov dec addl popa inc mov cltd fsubl in mov add push ljmp clc jne sub pop mov les mov xchg xchg (bad) jp cmp mov inc aad add lods sbb cwtl adc sbb cmc in scas sti iret jmp add fcompl outsl adc test in jne call dec mov cmp cli lret and lods pop and and sbb sbb rorl jge lea insl adc (bad) add je cmp and jg in push clc es sub and rcr jecxz add cwtl insb adc jmp mov ret add jmp addl inc aam mov adc lods adc mov mov xchg mov inc pushw int3 and push mov bswap mov call push out into sub outsl fbstp call add push nop mov sbb loope loop adc sbb stc scas pop xor xchg das int3 aam cmpsl pop pop ss fsubr jmp cwtl push ret mov lds pop enter fmull stc clc jmp and sbbl scas data16 xchg xor rcrb jne sbb add int fisubrl mov xchg into jl das cltd movsb cmp mov inc adc nop dec add fsts lock mov xchg mov les mov imul fs movsl outsb test and cmp shr lds shrb sti sbb test lret mov inc out sub and mov jno jb cltd adcl ds in adc out lcall gs push mov fmul xor push xchg push jo int3 pop hlt dec adc dec aas subb lods cmc push adc xor mov repz cwtl sbb jg inc push popa cwtl xchg adc movsb rcr push aas mov testb mov push sub xor (bad) pop cmpb in or pop sbbb mov leave or inc stc popa fdivs loopne push jno mov repz mov or cmp outsb adc sbb ret pushf gs leave xchg sbbb int3 mov mov xchg push mov adc nop repnz shrb test or add sbb dec sub dec pop cmpsl xor aas xor dec in inc (bad) in xchg mov xlat sub push ss sbbb ljmp or xchg hlt iret cmp ret mov mov into ss (bad) out ror mov push and test aaa mov jbe cmc sbbl loopne movsl stos add insl xorb and adc and dec cmp mov ljmp jmp push stos pop sbb into xor push andb push scas lock in adc mov repz add addl xor cmp scas jns sbb test int3 push lock (bad) cmp xchg mov xchg adc add ret mov loope inc out cmp sahf rorb xor jb addb clc repnz js roll sbb flds inc (bad) ljmp sti test sub (bad) add (bad) xchg push dec aam sub cmpb jns mov inc add scas dec inc inc subl fcmovbe mov jg das push repnz shlb loopne rcrl jg cmp xor lret add jb js,pt es dec pop mov ret repz push cmpsl test mov test mov lahf xchg adc push adc push test enter push nop mov rcl fsubr adc loope cld add (bad) and or sbb push fs and and je,pt sub xor nop cmp mov mov add out sub and dec mov pop cli popa andb sbb push push lret mov adc enter mov jo sbbb lcall jb test push or lock and inc jmp pop subl rolb (bad) xlat jae inc xorl xor xor aas mov or out fiaddl add sbb push mov gs in cmpb arpl pop push xchg popf add repnz jns xor ss cmp mov inc popa repz bnd (bad) xchg ljmp xor insl mov mov and adcb cmpsb test mov lahf cmc pushl push fwait andb ss sbb or fistp mov mov jae jmp icebp pop add inc icebp adcl xchg popf (bad) push paddusb pop out scas icebp xchg movb ja xor (bad) pop (bad) pop pop movsb sub push es das rolb fstl test je sub (bad) mov jp cmp jecxz popa (bad) jl sbb adc sub fdivl in out mulb xchg arpl adcb ds subb call adc sub adc xchg andb dec rorl push enterw fstp rcr fdivrs mov dec cmp dec std adc nop lds in mov in adc aaa mov jmp outsl mov and jb cld fldl ds xchg cmp adc addr16 cmpsl push xorl outsl push cmp fldcw movsb int iret hlt add enter add test inc adc repz mov scas dec pop xchg add repnz lods cmc or push dec xchg enter andl adc and dec mov insb xchg icebp ret enter andb frstor jecxz fwait jnp test xchg enter test sbb jle arpl dec pop fcmovb fs push mov ret test lret (bad) mov orb inc mov or insl test (bad) lock push ja subb nop out adc pop loop mov pop xchg mov jno bound inc mov xorb mov push arpl adc or inc test mov movsl mov xorb push test imul mov fistpl imul subb sub nop pop dec mov mov adc sub cmpl int3 xor out add mov xchg cs mov test push into xor xchg mov fsubrs push pop fidivr bound orb gs pop xorb mov in sub cmp test jnp mov xchg clc adc test les insb and inc jae (bad) cld test enter push not lock sti add xorb add push int xor enter data16 add movl sbbb and mov add mov scas dec mov cmp rorl lods push mov mov jp test xchg jo cmpsb inc pop mov cli ficoml mov add je xorb test ds and aas jl orb pop movsl rorl dec mov mulb leave loop stc les cmc add sbbb popa imul inc xchg addb or frstor mov sub sti in xchg test ja pop mov (bad) or lods lock in test and stos or (bad) cmpsb cmp pop push push xor (bad) sbb jne jmp test adc add xrelease repnz adc xor lahf mov jns push mov jecxz test fisub sub mov arpl xchg das (bad) int lods mov data16 loopne mov xor lcall std add mov cmp fsubl flds or sbb lds lret sbb outsl clc add mov aam (bad) in sbb or negb adc in jbe mov idivb fisttpll cmp and mov push ficompl subb ljmp dec and ss adc ja xor test jge (bad) out mov inc and xchg jg (bad) lcall mov fildl mov call test push sub fildll mov mov in xchg cwtl testl xor cmp iret cmp mov add imul jbe push test mov jo push jo aad lods xchg jp mov into das (bad) ss incb ret cwtl shrb jmp lods (bad) xchg in sbb xchg mov push jnp shll dec stos xchg ret and jno (bad) dec cmp pop add push jae push fidivrl ret nop iret mov loop clc lods inc leave (bad) pop mov jmp ja sub dec xor daa in jle or stos xchg dec lock mulb inc adc xchg out xor (bad) pop orl dec push pop cwtl fiaddl (bad) jae test ss mov stos shl divl push pop lods in popa sub xor cmpsl or popa iret adc inc or (bad) shlb pusha add (bad) mov (bad) sahf cwtl shlb iret push imul add int mov inc cmp insl or int3 lods or aad enter mov mov mov mov frstor lods add jne and jo lds lds data16 dec mov aas (bad) fcom xor adc (bad) (bad) pop jle xchg add scas mov nop daa aas ret orl add cmc jle mov jo lods mov inc lock jmp or test push inc orb rcrb andl pop sub mov out mov in push js fcoml (bad) jno xorb lock mov test push test sti cli mov int pop jbe and das add les xor push mov add cltd sbb clc ret lea inc xchg jo mov insl xchg adc adc xchg xchg push push repnz incw mov lret in ret test enter xchg (bad) sub aam cwtl adcb inc and cmp int3 dec js xchg push xor adc mov xor adcl cmp cmp add pop xchg popf xorb popa add (bad) aaa mov fisub dec in xor (bad) roll pop xchg inc rolb xor pop pop xorb in inc inc das xlat sub data16 jae pop pop cmp cmpb popf adc xor adc mov push xorb (bad) inc lea stos pop xchg pushf aam std xor push cli insl leave mov jnp inc nop lock and inc pop bound fsubl mov cli decl lods add (bad) sub out int aas sbb repz jl xchg test jle cmpb test add push cmpsb (bad) shlb ret (bad) mov mov adc mov test ljmp fistl clc (bad) jae push test inc mov sbb pop mov sub jb pop push xor into xor cmc out in loop pop and mov repnz mov mov (bad) outsb xchg test xor cld pop call xlat and ljmp int3 das add insl andb outsl incb fbld js ficoml fcomps xor popa fs add xchg fs mov add jp adc sahf mov mov dec add cwtl lret imul jecxz inc mov mov xchg push xchg cmp pop xchg cmp jno jmp xor clc stc cltd pop std test push xchg js enter cmc add scas dec mov xor sub pusha sbb cmp mov aaa inc xchg pop cmp loopne repz test jl xchg cmp ror inc mov je xchg push dec or scas (bad) pop cmp iret push outsb enter push mov call sahf lods notl push enter (bad) shrb fdivl lock (bad) jb add shlb xorb adc push addr16 mov add jae repz lcall lret (bad) out pop sbbb cmp mov ret or test nop push in movsb sub cltd pop loop or xchg cmp insl sbbl inc dec faddl mov icebp pop adc cmc test enter jmp and in cltd cmpsl adc shrl loop mov (bad) jecxz out jl jns lcall popa add in dec push cmpsl mov inc mov mov rcrl adcb jns cmp mov loopne lahf dec test jno cwtl stc fwait aaa shll sbbb inc cmpsl enter inc test out or push add pushf sub popa jne jns and lea fldl jle fiadd dec adcb push mov adc ret insl orb push in sbb cltd stc mov and pop fwait jp push int3 mov adc mov mov sbbl push mov pop incl lock out stc add loope dec mov fstl insb (bad) outsl mov and inc xchg sbb jno faddl mov xor aas jmp (bad) cltd gs outsl lock mov out mov in pop cmpsb test test sub jnp pop and popa jno dec mov clc mov stc std js mov andl iret aaa mov sub and subb imul enter hlt ficoml mov nop pop add xor mov dec loope (bad) mov jge cs push iret sub insl cmp and pop loopne addb idivl stc bnd pop xorb inc icebp loop lods dec lahf cltd pop mov fiadd pop insb clc nop std xchg inc cld xchg fsubrs mov jo arpl add in out cli mov popf push mov std inc cmpb das andb pop fisubrl xor or sbbl push sahf push rorl jecxz or mov inc mov fstps loop or jmp lea (bad) jecxz sbb push xchg jle inc mov gs add xor data16 fiaddl xchg jle fnstsw push flds (bad) lods cmc cmp cld cli nop pop xchg sbb (bad) ss mov adcb insl add cmc cwtl testb rcr dec pop sbb mov in aaa cltd (bad) daa mov push dec add inc in mov lret jo rclb adc push addb mov push test sbb out mov cwtl clc ret push imul (bad) out (bad) mov pushf popa je xchg mov fs add invd out in xchg clc and push pushf xchg imul (bad) or cmp mov mov test jp and rclb cmpsl aad insl add adc cmp loopne inc fnop ret enter or push jns add inc mov insl lds inc sahf or inc inc mov cmp add testb fidivrl jo dec push cmpsl adc out test in add call jae add dec lock jp (bad) cwtl inc fcmove mov pop jae out xchg push xor popa mov test and adc test sub xchg outsb sub imul sti clc add sub test sbb addl je and cwtl outsb enter pop (bad) hlt or xor test (bad) cli pop sbbl roll nop adc lret cmp lock mov pop xor jle sbb dec push fistp add pushf (bad) xchg mov out cmc sahf mov daa mov inc mov leave xor cmpsb in sbb add or add xchg addr16 xor call push cmp mov mov mov xchg adc and fsubrp ss push test repz pop movsb cld (bad) (bad) lea std jmp adc pop dec sbb daa lea loope pop xchg mov inc out mov and mov into mov mov test lods adc test xor push pop sub test imul enter push test cmp jo fldenv sbb xchg arpl push outsb or cmpsl xor push test inc out sbbb lret add test sbb dec shrl lea mov push scas enter fcoms jnp push adc add sub aam cmp xchg cmp std pop or pop nop lods add dec pop push xchg addl dec sti xorl ss xor loop xchg cli xchg test repnz leave mov mov xchg ljmp ja sbb jno add hlt cmpsl nop sub mov cmp test xor add addb cltd pop addr16 add mov mov test sahf (bad) je sbb mov jecxz cmp cwtl sarb push mov pop mov mov std mov loope dec push pop pop sar sbb xor mov scas cmp (bad) mov sub adc jmp xchg scas sbbb adc popf sbbb cmp int push xor scas and sub imul or pop lahf lret (bad) xor cmc xorb es xor mov popf inc mov mov les aam push xchg jg inc imul cld decb sbb imul inc cwtl cmc xchg sub ret faddl xchg lock mov and movsl mov cmp cmp and iret push pop xchg add stos mov jle or xchg xor mov xchg inc adc mov push (bad) mov int3 imul (bad) scas vpavgb movsb mov inc push enter mov mov sbb sub add jmp xchg (bad) xor subl push mov js repz (bad) adc push cmp bound iret les subb roll add lds push fistl test mov and ljmp push test push pop sahf dec push out cmpb mov mov push push adc aam xchg xorl pop fmuls scas movsb xchg inc outsl sbbb and incb jmp jne inc scas pop in xchg iret sub cmp outsb enter fdivrs mov stos mov mov pop jbe or inc iret rcll enter lea xorb and je mov push xor or cmp fldcw scas cmp sbb stos mov test mov or pop cmpb fild add iret loope jno pop mov (bad) ss lock subb dec push inc sbbb pop mov dec cld arpl xor add (bad) cli sar fs dec insb mov pop cs xchg bound xlat out jae adcb xor fldl bound test (bad) ficompl push pusha lcall subb idivl add orb push jl mov ss in inc sub xor cmpsl test pop pop xchg (bad) pop cmpb iret rorl cli stc push adc stos insl dec daa orb incl movsl mov adc flds sbb lock (bad) repz jno (bad) aaa cwtl fdivrs add loopne xor xor insb mov and clc pop cli adc into aas inc mov addb pop or (bad) ss mov push loopne sub out je outsb js cmpb sbbb mov add inc outsl enter icebp inc mov sub add pop cmc cmp mov jecxz dec ret xor mov andl daa pop aas mov mov xchg bound roll inc xlat mov add rorl xchg adc jne cmp (bad) mov xchg mov jo out xor out mov mov cmpb pop mov lods mov cmc xchg mov mov lock add sub dec jae xchg std mov sub nop faddp xor jae mov fnstenv sbb adc jae insb inc mov into orb mov xchg or jmp and mov in imul mov cmp xlat cmp aaa sbb and xchg xor pop data16 cmpsl loope pop add add push sub push scas mov mov mov jle pop mov mov (bad) cmpl addb jp sbbb mov cmc or insl test les movsb xor dec adcb sub mov cmp nopl loope jbe inc mov jns ret js push cmp dec dec test das lahf addb shrl testl fnop repnz (bad) cltd push in add pop jp (bad) mov add (bad) je or pop sbbb mov test orb fdivrs aam repz ds enter cmp pop js xchg aad imul shrb mov (bad) pusha cmp push in jo lock push test mov mul dec leave inc pusha (bad) les sbb out cmp (bad) or movsb and in test inc fadds gs test iret ljmp dec loop add sbb mov or js dec mov (bad) fsubs stos adc testl cmp xchg orb xor xor dec add and imul and add (bad) (bad) call inc aad xchg arpl jbe mov cmp adc push test stos add ret imul into stc push push mov je decl imul jle pop ficompl mov out sbb mov jb xor rcll les xchg add insb sbb sbb fsubrl mov aas add or mov lods jle pop enter insl aas fmuls ja mov pop test das mov stos push std add push cmpb add sar add (bad) mov inc jmp pop popf lds in nop xor imul jbe iret stc push add (bad) mov pop insb push cmp (bad) jecxz cltd mov adc sbb push mov or add andb jl mov jb mov ja mov sub dec shrl pop (bad) lahf out lret leave mov pushf les pusha push cmp xchg arpl sahf adcb mov movl xor or push mov fistp fimull xlat inc fsubl shrb xchg faddl (bad) iret cmp jmp aas inc sbbb js sti adcb aad aaa clc push fadds mov arpl loop inc or repz mov push sbb in lea mov inc in rorl mov hlt adc jl pop mov repz fcoms cmpsb inc or xchg cmp dec js push movsl ret add in adc jg fdivrs iret mov test pop xor xchg cs inc pop incb dec adcb and loop orb cli cmp ret scas dec jns mov jge inc add testb inc test loope fist (bad) sub mov movsb cmpsb aaa outsl mov xchg mov xor into sub xorb sbb xor pusha rol jne fild add jg mov out jo and dec jno lahf push aaa cmpsl push cmpsl and dec dec mov push mov (bad) sbb sub fcomps jge push lods out test shrb flds arpl insb jg xor inc mov push test into ret or test sti mov jne roll std pop sub add aad push and push fdivrp cmp icebp or xchg pop xchg or aas ret int cwtl inc ss orl and mov adc out mov push lea jne hlt (bad) repz adc sbb insl pop movsb sbb add ret shr inc sti mov fstl in sbb movsb icebp inc test orb push dec addb out xor js ficompl std out mov test cmp sub ds cwtl push xchg out mov adc mov adc (bad) fdiv (bad) loope aas outsb (bad) nop scas push test ss mov orb add cmpsb push addr16 sahf sbb adc in mov pusha (bad) fistpl jne test cmp mov mov lock inc xchg add in (bad) xchg iret fcom jnp cs push dec aam (bad) add popf cmc cmp aaa test fistl aad sub push into xlat pop loopne mov (bad) imul mov cld jns inc mov pusha xchg repnz shlb cmpb push movsb adc jne clc insl ja test xchg or push push enter test ds insl lret cs mov test jmp cltd cwtl gs adc jnp scas sbb stos roll cmpsb inc loopne enter (bad) add mov loope mov add fcmovnu hlt xor push gs mov inc lcall dec data16 inc outsb xchg jo xchg jge xchg mov lret jp,pn mov dec pop or push xchg dec jnp inc mov cwtl push or lods jns call in in mov xchg (bad) dec clc push cmpsb mov xor pop (bad) push test mov xchg jle push jnp adc pushf sbb or jo (bad) mov or sbb ljmp jbe int3 mov pop hlt push mov mov in aaa xchg adc add push sub inc inc inc dec leave cmp stos cmp inc add sbbb xor push cli xor addb add iret inc dec pusha inc stc mov add mov cmp inc lods (bad) xchg sahf fcoml (bad) mov addr16 mov add incb sbb and loopne (bad) sub cmp addr16 into inc movl xlat in mov sub adc cmp jae cmp std clc andl sarl xchg mov je xor arpl mov lea xchg out ja or outsl test loope pushf mov and je jecxz sbb test das or add insb bswap addr16 fmuls dec sbb add fbld lcall data16 scas jnp or jo mov seta mov pushf cmp test rcl mov inc add insl or jl test pop andb push pusha jnp out imul push test sub (bad) test inc lret (bad) mov sub in xchg cwtl decb mov mov push outsb lcall scas cmp adc sub bound cld add aaa mov or dec inc push add jp sbb push cli je (bad) stc adc push popa ficomp mov dec and aad fnop fisttpl aam call outsb test xchg pop xchg mov add adc cmpb fidivr mov sub mov inc sarl sbb jb test xchg xor fcoml incl or mov mov ds push jns imull inc insl jno enter pop inc jg sbb (bad) mov dec mov jno or xchg pop cwtl mov mov push (bad) inc and test movsb ljmp stc shll test sub rorb orl lds adc cmp xor nop xchg xor sbb insl mov sub shl cmpsb mov int pushf adc sub mov insl test (bad) std and into rolb cli addb pushf jg repz lods dec cmpb cmpsl fistpl and add mov push test in xchg or das xchg data16 push mov hlt jge out subl test sub xchg push incl pop aas iret (bad) incb inc mov lods std pop jbe push xchg pop mov and mov stos aad xor test cmp lock enter jns mov add iret jb idivl mov je rcrb mov inc sbb push add in sti mov or pop sub les cmpsl fdivrl iret xchg xchg insb xchg jno pusha xor push xchg inc push fcmovnb xor mov pusha fdivrl addr16 (bad) cli xchg iret je jo adc daa inc gs mov ret xchg dec mov jne add push and stc aaa test xor test or (bad) pop fbld loope sbb inc push and sbb mov mov xchg sub mov (bad) cltd je sub add imul outsb negb inc inc mov lock cmp mov or inc mov enter idivl push inc out orb inc out mov mov iret rcr push test insb aas push adc test enter js xlat pop shrl mov inc mov jg xorb movsb xchg add (bad) or xchg mov out mov dec sbbb (bad) test addr16 adc imul push mov and xchg insl test test inc cwtl ljmp sbb nop push jg inc pop loop pop stos or inc lahf and xchg fwait pop movsl gs inc sbb dec (bad) xchg and ret xor sarl rcl xor adc push das mov gs test ss (bad) outsb xchg std inc nop cmp or xchg test sbb inc sbb and sub pop jle in divb dec aaa dec push jb mov adc xor sti sbb in adc adc xchg xor (bad) mov in fdivrs push sti jp iret and stc jge xchg xor dec imul adc and (bad) cs dec sti out inc mov mov loopne push stos pop repnz popa pop and jp inc adc pop push push outsb mov roll sub or push xorb mov movsb push and cmpl cmp (bad) mov insl mov or sub pushf sti mov imul cltd fcomi push hlt jge mov cmp xchg or stos pop jnp test adc outsb push dec das jb mov in push test ror jno inc dec dec ret xor out xor sub fdivrl jecxz ret cmp movsl pop test int3 sub cs popf bound mov into add call jl fsubs test or ret stc lds adcb aaa cmp icebp enter sub xchg lock fistl lcall inc xchg fild inc lret xchg sti xorl lods in adc xchg cmp popa test dec fsubr cmp jbe jg pop mov cmp outsl push subl push iret fcmovb jecxz jle,pt inc std repnz xor lret outsb dec xor outsl jmp (bad) or jo dec lods fsub dec shrl mov xor seta mov test mov loope dec out jae outsb shll push sub dec cli clc mov test (bad) out or jecxz mov (bad) jbe sarl xchg jne aas xchg and add imul movsl in cmp cmpsl pop and popf es jne push add fst je xorb lret cs subb icebp xchg enter int3 jo bound out orb pop mov xchg pushf subb sub push addl add inc mov push aas mov jb cmpl jmp aam cmp dec out scas in popf test xor leave adc andb sbb add orl rcrb push cmp fs cmpsl adc test jns or insl inc dec (bad) loopne stos adc xor ret mov aaa test js xchg add dec stos jge insl or nop incl mov dec mov ret ss pop test aam jmp pushf dec leave pusha in push inc test mov jne addr16 clc cmpsb fbld les push subb sub int add adc clc test xchg popa je cmc test adc out pop loop sbb iret das mov fisub mov mov pop subl jle pop push cmpb leave out lock dec jno xchg cs enter inc aas mov sti test out orl adcb inc mov dec mov adc movsb loop pushf stos sahf pop int3 pop inc xchg adc mov cmp mov mov fildl movsb loopne dec int orb jmp pop or xchg addr16 push push cld dec xor inc nop push in lret push imul jge test popa test sbb jp pop and adc nop imul mov (bad) aam dec jmp jle jns push xchg cli pushf aaa aas xor int sbb mov into xchg lods dec lock xchg leave or xchg or xchg orb in or or xchg mov (bad) fcompl adcb jno fsubs sarl icebp push nop out loopne in inc sti cmp pop mov arpl dec push std (bad) cmp jne jno test mov rcl addl mov push mov sub push iret cmp bound sbb mov pop mov imul (bad) insl loopne jbe add pop inc adc adc out jmp xchg popa addr16 sub testl xchg gs pop cwtl stos xorb popf add add daa bound push outsb pop cmp cmp sbb add push push enter push pop rolb faddl pop je test xchg lahf mov mov xor sub push mov add inc xchg test inc shlb sbb xchg mov int3 lock jle push test test mov leave test rcll sub cmp aad inc popa xorb in xchg push stc (bad) (bad) outsl or nop and jg pusha cwtl xor imul clc xchg inc sbb rorl les xchg inc and nop das int3 (bad) ror fidivrl andb mov in adc mov or mov add push ds mov addr16 insl cmp mov jmp sub xchg test inc hlt inc lret add xlat sub xchg inc scas lret loopne mov mov inc sbb lret mov add out lcall jnp xor sar sbb cmpb sub call (bad) mov add test js subl add in mov insl xchg dec mov into enter ret sbbb and pop (bad) jne xchg cli push (bad) jns mov shll lret mov stos nop call orb jo jge mov push or mov dec movl xlat adc popf addr16 push inc mov inc mov xor mov inc mov xorl mov repnz enter push movl pop xor xor rcr rclb mov cwtl cli cmp lret jb sub xlat jg sarb std sbb jmp fistpll mov push sti aas xor add push push jl or fucom aaa hlt push lds sbb jbe pop jmp mov xor fstl xor fidivr mov popa push add push stos inc cmpsl adcb test rcl loopne add sbb push jno nop scas mov sbb sub lods pop dec cmpb loopne stc movsb jns cmpb imul int3 pop cmpsb inc mov sub inc mov jp mov xchg inc xchg mov xor movsb shrl test push jl inc mov mov (bad) xor cmpsb dec cmpsl loopne fs ficoml jl fisubr push stos pop loop and jno std test xchg jns popf pop fsubrl repz cmc mov fnstenv mov fistpl adc inc mov (bad) and or xchg insl std lahf push dec ret loop mov (bad) out addb arpl cmc xlat das lock sbb add movb dec adc mov push mov ret fild sbb push negb jne subb mov sub stos es int cmp ficompl arpl bound mov adc test cld add in addb cmpl pop stc je or aas out je mov gs leave mov mov push mov (bad) sub and loopne dec ret jge shll pop (bad) cs loopne push pop mov aaa into adc cmp addr16 movsb test add je in inc dec imul leave test les insb jbe ds push lods xor out mov push leave xorb push sbb cmp (bad) push xor test popa xchg dec test subb je mov sub icebp inc mov out aam loopne mov cmp test mov popf aaa mov adc mov enter and dec mov lods les cmc mov fstl cmp enter jge incl jo loope mov push data16 out jno adcb (bad) or pop cmp ror inc mov popa mov stc add mov jne std xor jo stos js inc ds mov xor orl dec inc inc and push in adc (bad) adc out or (bad) out sti push cmp iret or cmp inc inc loope push push sub fmul test pop push sahf sub loopne arpl lcall scas adc cwtl pop push mov gs jg mov jbe scas (bad) outsb xchg sarb adc xchg sub je aad pop xchg sbb pop (bad) das cwtl int adc push into adc mov xor jne insb bound and add adcl aas or xchg ucomiss jmp push rol movsb cmp or int3 int3 fidivl and xchg sub mov repz stc adc sbb iret inc add cwtl mov (bad) nop leave outsb add call ret gs cmp test mov stc push cmpl dec push add jle push adc jo mov jle call sbb fmul das aad add fisubl inc int3 mov fadd lods jge push int3 fmul ljmp test push push sbb push int3 stos sub mov nop shll push fldt movsb repz mov (bad) adc mov inc ja sub or mov lahf test jge outsb (bad) mov inc ret jne outsl inc lods cltd lret pusha roll mov pop into mov mov add test xchg jb xor loopne roll outsl or rorb movsl cltd daa std subb xor xor mov cmpsb scas sahf inc cmc mov fsubr cmpsl and xlat retw lret push mov xchg lock int imul mov mov push jnp jle insb mov fsubl push push roll jno outsb arpl call xchg mov jne inc lcall sarb pop cmc in shrb sub aaa mov les jmp adc cwtl loope mov dec aaa pushf push (bad) mov inc repnz add cwtl cmp icebp adc xorl lahf adc movsb xlat movsl cmp mov cmp repz (bad) loope cmp add jmp xchg push movsb mov ss inc pop mov adc out leave mov das pop cld cmc adc fldcw (bad) jo and mov (bad) fbstp adc mov sub (bad) jge inc sbb sbb add nop in jle sbb or jmp add push lea pushf cmc mov mov (bad) xor jae decl push cmp int3 push jno faddl scas loop loope aam test xchg xlat jae mov loopne cs add xor fldcw inc subl cmp sahf pop aam lret test cmp in or adc imul ret (bad) jmp adc sbb sahf lahf ret les test es jg in or sbbl jae in mov xchg add js mov push das sub (bad) mov das mov fstpt pop push popf push cld lock ret jae add cltd dec loope adc in mov testl xlat (bad) loop mov or cmpsl push into rcrb jg std push nop mov ljmp decb loopne test nop mov cmpsb sub (bad) aas (bad) or and pop push out inc jb jg jge push adcb out push adc push pop or add js pop imul lock jbe mov add fstps adc ret push lock cmc gs add jns mov (bad) and jns cwtl outsb test inc mov xchg push mov lock dec xchg sub adc cmpb mov test adc mov incb (bad) cltd lret xchg cmp shrb sub ret sahf arpl dec (bad) mov aam mov cwtl cmpb mov ficoml in lock cmp fmuls sti inc int3 xchg popa imul bound mov into enter lahf mov dec (bad) repnz into inc mov les push xor mov sahf jb out data16 or fldl mov add dec lods test popf popa xchg testl pop push sub mov xor fistpl mov movsb inc insb mov xchg pop (bad) or out or mov int3 jnp dec scas push push pop add add jo imul cmc xchg test xor xor jmp mov adc push hlt jo dec in cmpl adc push xorb clc push sbb aad mov pop fwait clc push frstpm(287 scas test pusha cltd fdiv cmp pop arpl out test or dec mov aad fs inc (bad) xorb xchg sbb test xor adcb test pop fs loope cltd xlat mov lock cmp xchg cmp and lret xchg sbbb dec shufps and adc test dec stos xlat sub or subb push stos dec loopne jp jno inc (bad) sti arpl out mov inc xor xorb lods lods lock mov xor aad cmp and push lock test stc add jl inc ret xor mov bound (bad) sub cmpb add (bad) mov sbbb inc nop fild data16 cmpsb repz add sahf addb adc cwtl psubsb xor mov les mov xor lods icebp test sbbb xchg dec xlat cmc push or inc jbe and bound cmp mov enter shrl repnz cmpb fdivs sbbb add mov add test insb sahf outsb inc mov sbb clc stos mov jmp faddl pop adc in or mov sti aad dec subl fcmovu (bad) out inc pop pop pop adc adc mov int int3 push loop pop mov ret push mov flds enter xchg jbe jge outsl std dec stos loope mov fwait js mov aam cmpb xchg inc sbbb sbb rdmsr dec orb add cmp negb mov lds clc push out xor sbb lock fimul enter add (bad) jg pop subl push push leave jmp cmp inc daa add or sbb loopne imul inc test scas cmp adc insb (bad) xchg jne repnz insl aas sbb lahf ja adc mov movsl adc inc sbbb jp clc rcll test test lcall test mov daa rcl sbb sbbb dec enter outsb push movsb insb popa out scas mov lea xchg xchg subb push stc jge jo mov fs pop mov imul jmp int3 mov push (bad) pop mov mov stos mov mov in icebp ret xchg lds movsl xchg enter push (bad) test xor add pop xchg cli gs out nop sbb jg bound hlt into and pop jge fistpl inc pop and fdivrs les ret cmpb add xor test xchg or (bad) cs mov ljmp ret int inc push or call add enter cmp fnstenv adc mov push fwait or sahf pushf ret cmp and movsl cmpb repz adc mov scas push pop aad in lret ja sti faddp jae lock leave test sbb outsb testb orb pushf dec cmp adc cwtl mov inc dec xor dec insb aad dec dec inc mov push bound adc jb push xchg stc fsubrs popa enter imul or nop mov mov xor jp mov cmp popa lahf dec aam pushf push pop fidiv jmp xchg subb outsb nop xor movsl hlt push fs sbbb cmp es loop jp mov fiaddl ficomp inc loope add andb and add pushf mov hlt rcll test jae ja test std dec xorb xchg insl nop ja popa xor je mov mov or xchg shrb (bad) jmp sub out push incl and orb js xchg cmp sub bound mov out jge popf sub inc enter (bad) and rol lods fdivrl in fsubs enter out xor movsl push xchg stc inc cli and ds scas cmc pushf add adc cmp testb sbb fsubl push fisttpll repnz fisubl mov leave faddl (bad) jmp gs je mov xchg pop popa xor stos adcb fisub sahf cmp fs mov sub mov dec push fcoms out sbb repnz adcb jae clc jmp sbb jp icebp push cli sub addb mov xor leave push test push add pushf movl or or push jbe cwtl pop pop js bound es (bad) and jge scas sbb mov data16 sbbb pop cmpsb or ja test icebp push jecxz inc scas stc loope and and inc in mov mov xchg push mov mov cmpsl stos mov ficom mov (bad) sub ret sub (bad) out mov sub mov cmp data16 cmc add test mov das fcompl and push add push lahf dec test cmp mov (bad) imul outsb jmp inc dec jecxz mov mov enter shlb mov fstps dec mov sbb mov pop jnp cmpl sarb out cmp dec mov out sub xor inc xorb out mov and dec push repnz (bad) popa je fistpll popf pop xchg addb out stc dec mov cmp add jne (bad) fbld test je cmp jl adc std mull cmp inc inc rolb cmpsb dec fmul (bad) pushf pusha idivl xchg push xor inc jl mov arpl (bad) cld adc loop inc frstor mov jle sub xchg pop mov inc push dec xlat (bad) push test sti lods fdivrs test cltd jle lock jl add dec jae stc pop sbb dec adc inc or mov in or out ret rep pop inc iret add cmp sbb arpl call andl sarb and (bad) (bad) mov pusha cmc stos jb push sub pop lock iret push pop out ss xor (bad) cmpsl sbb pop mov push incb xchg loopne cmc mov xchg mov aam pop add (bad) pop cmp lahf push pop je mov gs fwait xlat ja enter into in or in lods cmpsl push jae dec mov and mov test add faddl sbb js icebp (bad) push rol add xchg frstor es iret adc js fsubrl xchg mull call push lods in xchg cmp add dec jo mov push or mov cmp lret aad fdivrp add sub dec adc xchg bound mov mov nop xchg push ficom dec lock mov cmp xchg daa jmp xor xchg insb push lods and (bad) xor inc in jbe icebp or orb mov adcb mov pop clc fwait xchg cmp xor aaa daa int data16 mov pop loope xorl cwtl ss xor lods push pop stos imul add add data16 mov mov int xchg dec xorb or dec inc mov mov test jo jb out jge add clc fwait in scas push (bad) xor sbb shlb sbb daa dec mov stc andb test es aaa out push test push sub ficompl test mov subb mov adc mov xchg outsl add xchg and lds (bad) pop daa (bad) jb sub incl cwtl fsubs or xchg sbbb pop mov repz xorl mov inc fisubrl movsb add inc mov insl call repnz or je pop (bad) ja inc mov dec subb pop loopne insl mov or cmpb popa xchg mov or push xchg inc addb test push pushf xorl cmp sti ja xor mov inc inc jns and jnp test dec mov xchg es xorb and je aaa push mov movsb ds jae adcb sub popa callw inc popf sbb push test mov push push or jo cmpsb sbb iret sub lret gs xor nop icebp pushf scas push fmull lock ljmp int or repz loope push xor mov sahf mov inc fidivl jmp sbb subb mov pop test push or test xchg sahf jecxz jb pusha mov ja adc ljmp pop daa rcr sub mov js xchg popa jmp notb imul pop dec pop out int sub pop std add push repnz int3 aaa mov jb test hlt mov cmp jmp ret ss xchg mov push sbb add lock sub inc mov repz xchg adc push (bad) popf stos xchg cmp mov mov jge mov mov test add inc cmp jb mov lock ret andb das mov fs push and cmpb jg test rorl enter ret in mov sahf cmp xchg mov mov jae cmpb fs jle adc push in addb in scas maskmovq imull mov imul xchg movsl jo xorb pop pushf cmpb fwait inc mov jge dec add ret in nop (bad) (bad) jl clc mov loop push xor test stc or or jecxz,pt daa xchg sub sub stc sub test push les outsl ret lcall int andb dec cmp fisub aas arpl test jbe pop cmpsl loop fdivp data16 test loopne cmp sbb add roll in jne xchg mov fnstenv imul test sbb (bad) je cmpsb enter test hlt lock jge sbb fdivs mov fdivl cmp mov (bad) jg nop xchg outsl mov cmp sahf fadd in inc mov pop js push lods mov cmc mov sahf mov fwait out (bad) adc pop cli fdivr cmpl aam jno flds test (bad) and ficomp push push fstl andb in adc test lock inc scas ret subb aaa jb mov adc enter push add dec sbb add icebp pusha mov pop push test repz sbb shl leave andb push imul xchg cwtl je (bad) mov fs xchg outsl aad dec (bad) dec nop and and mov jo xchg cmp adc sub xchg or and sub mov daa lea mov dec scas mov aas inc cmp xchg iret dec call lcall in jbe pop test adc pop sbb test cmpb sbb stos add iret aad repz insb mov repnz xorl enter cmpsl pop pop mov orb repnz aas and int3 push stos cmpsb dec hlt mov imul jmp pushf icebp pop clc jbe ljmp add test mov shrl and mov mov or cmp (bad) hlt loope push nop (bad) xor sub inc fsubl arpl cwtl hlt fsubrs fs and add inc imull rolb fwait loopne xchg mov mov fildl aas movb add loope cmpsb adc std lahf stos add loop repnz insl mov outsl xor add xlat lods lret pop xchg jle dec in adc mov pop push out lock xchg scas or and mov test test and test xor fiadd cld loope addb jge adc aad xchg jo add mov sti clc std mov (bad) lock xchg cmpl out (bad) or stos push notl repz ret dec pop je andb jecxz xchg rcl sbb sub push xor bound mov orb xchg adc incl frstor pop mov popa fisttp insl daa incl or lods sbb and fisttpl jmp xor xchg push and subl loop in dec scas leave pop fstps pop scas subb or test mov cmp fisttp xor cmpl push dec jb jns int repnz test test (bad) gs mov mov test insl fcompl mov xchg sarb (bad) je jne jl movsl rolb pushf adc cmp repz stc loope pop int3 pop daa mov mov dec repz push iret sahf mov add push lcall js int3 jns cli cmpl mov test lcall pop jecxz mov push pop cltd std adc mov test or shlb sub cmpsb mov xchg mov lods xchg jnp daa and sbb clc add iret js adc loopne test jp mov sub push out jae enter or sub xchg mov lcall and stc clc xchg aaa sbbl arpl fistpl fucom stos test test fcompl xchg mov (bad) repnz cmpsl push mov or pop add inc pop popa cwtl enter pop cmp add jo rcr jmp xchg cltd cmp rcl inc nop shlb sbb jg jl jecxz xchg mov sbb ljmp ret mov jns sti or fs push divl mov and std ret cmc jmp push adc (bad) mov xorl fidivrl addb fldl adcb cmpsl pop push push fldt fwait or add xlat or cmp in add xchg mov inc and adc in ret sub cs fsubrs xchg or shr adc insb pop xor (bad) in cmp add pop subb fcomi or xor cmp jl aad add cmpsl cli mov fisttpl and cld push cmp (bad) jae popf data16 pop lock xchg mov leave mov jno lock cmpsb and xor orb ret xlat aas repz push xlat test das daa dec or in testl sub fcomip dec data16 mov clc mov cmpsb lock mov movsb (bad) cmc push mov jp xchg stc adc jb jae xorl inc xchg and orl push test push loopne mov push dec mov outsl add bound test je push jmp push mov lods dec push push out cmp jo and test xchg jmp inc mov pusha dec cmp inc std pop mov mov sub mov xor cmpb ficompl mov adc int sub adcb adc jne or dec jnp inc mov dec push pop lods jns (bad) test int3 push sbb push (bad) cmp pop (bad) stc and add xchg popa pop mov jmp lret push jo xchg cmpsl dec cmp mov pop add sub dec dec mov (bad) mov adc fist das (bad) (bad) mov or sbb jp xlat cwtd and mov push cmp mov test out adc sbb lret gs lods out loope dec sbbb and dec xchg push lret cmpsl mov push jle cs push test or sbb stc gs data16 cmp and addb ret cmp cmp xor pop aas ret pop iret mov add (bad) sub sbb (bad) cld das xchg pop dec push (bad) in inc out sbb push xor gs enter mov les xorb pop cs les jae adcl mov insb xor jae neg imul sahf ror or mov out hlt and shr adc cltd jb nop and sbb adc xor stos dec adc adcb loop sbbb ja mov das mov pop add adc js push test loope imulb inc push push xchg into jge sbb jmp fdivs xchg fwait (bad) pop adcb pop shl sbb pop xchg inc adc insl and or dec test out xchg xchg pop in cmpsb faddl enter subb inc enter mov pop cmp clc dec dec test pop repnz mov shrb xor push mov je jns pop mov dec add (bad) pop mov push push ret or xor mov imul nop in push cmp xor aas lods pop cmpsl push std movsb xor add sbb cwtl dec loope fstpt xchg inc jns bound cmp jns ds hlt fimull enter imul test fisub enter dec xor sbb int3 mov cltd xchg lock inc cwtl lock cmc into addb or loopne imul imul in mov out push mov mov and pop inc test mov cli int3 cmc aas (bad) push push xor in cwtl fdiv adc ret cmp adc cmp xor scas dec push nop add mov cli xchg or repz (bad) mov cmp clc pop mov pusha iret push aas test add test ret loopne add scas iret iret outsb push pop xor or data16 xor in sbb xchg loop add test or sbb les xchg insl enter std or mov cwtl cmp inc shrb add test sub nop dec mov daa xor add loope,pn sti cld sub xchg lock fadds fnsetpm(287 add in fmul jno push fcmovne inc fadd ljmp inc clc jg xlat ja test cs out ret fcompl sbb shrb adc xacquire pop loopne je mov iret mov js cmpsl xchg jb fld cmp mov into mov sbb test xchg xchg cmp ljmp fbstp pop repnz dec ret jnp je pop mov or lea cli dec (bad) push in dec ret xchg sbb pop adc fsubr pop nop push or iret pop cmp push dec mov add in push jg decl jp test cmp faddl mov test dec dec gs pop pop add ret sub sti int3 jns stc or and adc adc les jb daa pop test inc push iret jp shrl aad (bad) xchg xchg or lds test andb sbb loopne lds lret xlat stc cmp inc adc or jle or mov xorl call jle xchg and xchg push shr pop (bad) in (bad) fsubl les xchg stos inc or mov push lret mov xor test fmuls jmp xchg insb cs aaa pop mov or aas xchg mov add popf or sub test insb cwtl (bad) fistpl mov or mov stos cmpsl sti outsb inc mov icebp xor ja jle cltd enter jae imul and addr16 jb bound lods out (bad) xor scas roll ljmp test cmpsb hlt pop sub sub or adc bound aam andl pusha mov in or test jl mov sbb or pop sbb jp (bad) je push sub mov xor push pusha rcrl lea sti ret in xchg in test fldt adc lds mov in pop push dec out orb xchg enter leave push fcoml popa push dec xchg (bad) dec stos pop lret fadd or ja cmp and mov in adc fs cwtl cmp aam xchg pop adc and in adc scas jle push mov inc fmuls adc push jmp ss in test hlt sub mov pop dec insb sub and cmpb cmc ljmp or push das jne xchg subb mov sbb in pusha and sbb cmpsb pop arpl push cmpb fcoml hlt mov sbb sub adcb lret mov ret cld sti test lret mov int call das leave fdivl cmp stos lock sbbb sahf mov ja addb ds subb jb andb ret (bad) sbb dec mov mov lret test pop loopne push xor loop mov add xlat or stc decl xor mov pop cmpsl mov mov sub subb mov enter inc ja jb adc imul lea fidivrl fidivl cmpb popw inc mov or (bad) push mov cwtl or pop xchg addb fsubl xorb lcall or cmp xor fildll mov xlat inc mov dec cmp jae ja aam ss outsb idivb cwtl iret pop pop cld incb adcb test pushf icebp push fnsave jns andb cwtl and ljmp dec mov andb mov cmpsb adcb loopne push (bad) imul push jg (bad) mov stos pop or (bad) dec push and xor int lea test jno pop jecxz outsb mov cmp fbld inc lahf neg adc shrb push fnop cmovs push mull mov add pop xchg cwtl mov addb pusha mov mov or js outsb add out je popa mov mov add (bad) xchg xorb inc stos orb pop xlat lea mov cmc add mov sub mov daa or into sahf movsb cmpsb jno pop dec (bad) jo iret push stos shll add cld cmpl test ret lcall xchg and inc je cli nop out or adcl mov sub inc xor jl fsubl ljmp and test (bad) jne mov rorb cmpb mov mov xor or clc pop adc int3 mov test dec and outsl xchg sbb sub (bad) cli add orb sbb addb enter jp data16 xchg and leave lss loope xchg cwtl cmp xor mov xor rcr pop mov imul out nop nop lds sub mov push scas dec sbbb xchg mov jge ss jns icebp rclb sbb adc in pusha xor mov fs lock jp jne sub data16 push sbb jecxz (bad) xor je outsl mov jmp mov addr16 push nop pop lahf inc (bad) jb xchg insb (bad) jae dec inc jbe or iret inc mov cmp subb lock jns lcall xor arpl or in mov xor in jnp int cwtl push scas mov sub scas aaa push int3 icebp test jno decb cmp push mov repnz xchg popf mov sti xchg inc scas add ret or push dec lods jb iret adc adc pop pop adc (bad) es ja orl and xchg add mov inc and popf lock movsl aas and pop pop jnp repnz loop lock jl cmp cmp jmp ja sub fildl xor outsb pop push nop sub dec jmp nop fwait mov mov out call and lods and sbbb xchg pop andb sbb inc mov psraw adc inc sbb das cmpb lods xorl mov movsl xchg cmpsb push fidivrl (bad) xor push jae rcrl and xorb push lds mov xor in subb push lods jecxz cwtl and and daa adc push (bad) enter stc jo out lret xor and xchg out mov add xor (bad) jmp dec mov sahf (bad) iret in push testl sub sub aaa mov pop scas outsb mov push daa ret pop dec push imul adc inc in sub subl enter aaa fistl out daa cwtl inc add inc mov sub das add jp mov sbbl (bad) xchg out and xchg adc int clc dec jg sbb scas (bad) outsb pop cmc mov sbb pushl inc sar push fsubrs ror (bad) mov xchg (bad) xor push data16 sbb adcb adc dec mov insl adc test pushf test andb (bad) das mull cmpsb pop out sbb repnz ljmp dec iret mov pop test xor and enter adcb inc mov clc add and mov bound ficomp and into arpl or jne mov insb leave fdivr mov enter js push mov inc orb popf jnp cld jo mov xchg fldl (bad) mov cwtl adc jae xchg cltd inc adcb (bad) insl mov cmp (bad) movsb sbb jae mov xor pop jbe aas into cmp pop add mov adc aaa sti nop fs lods ss xchg jp je fwait cmpsl push addb sub xor (bad) xchg cltd adc nop and popf xchg xchg mov icebp add sub sbb fnsave mov je xor push pop js test (bad) out pop and inc imul std lret xor test dec fbld dec aas sbb or add xor push test sub sbb pop mov dec ret jmp mov movsb push ficoml jp bnd pop sbb mov adcb or jno sub mov pop add mov xchg orl adcb loopne,pt dec and mov lods dec insb add xorb shlb ret jge or cmp testb enter (bad) aaa mov adc js insl inc mov cmp add negl or fldcw enter push lock inc das imul adc cld sbb push sbb jo pop in lods adc jb lret (bad) loopne inc cmpsl inc mov or jp gs loop xchg jb test inc mov cmp stc add mov enter mov (bad) lods test (bad) std lea push mov orb mov dec arpl adcb fisubl or int3 inc push dec jp arpl andb mov xlat into jle add add sbbl push jae cmp nop mov mov lds jns xchg xor arpl and scas push cmc sub cltd jle and mov or (bad) push inc sub cmp and add pop sbb jp pop cmp nop mov movsl xchg outsl cmp ret test jmp jmp xorb (bad) enter jno and xor ja mov pop sbb jg gs stc mov (bad) mov sub pop pop xchg (bad) repz es loopne sub out sbbb loope fisubl inc cmc pop mov mov pop addb addr16 xor fild scas mov stc jbe enter addb xlat xchg push clc incl test push test lods inc rorl incb xor shll (bad) and lods cmpb adc lods popa or xor ret ja es popa adc test pop xorl adc cmp nop push cmp orl loopne imul mov sti jne loope loope popa mov pushf pop xchg adc fmul mov movsb pop (bad) std xchg sub in xchg jnp pop xor fimul bound dec (bad) mov xor add xacquire in test cld sbb xchg (bad) push inc iret out pop je pop cmp mov jcxz repnz add (bad) jle pop iret stc loop test fadd (bad) mov arpl pop loopne pop pop fiaddl jecxz into mov adc into enter sbb and ds iret dec cli fstpl add add testb adc (bad) into xchg and (bad) sbb or outsl jecxz cmpsb push xor mov cs (bad) imul repz out or test jbe push mov mov jno xor mov gs xlat sub lret adc add push push loope fcmovu in pop mov sbb or xchg dec pushw xorb pop aam xor test and loopne js dec push out jg test mov push jl incl test pop sub jge mov xlat ljmp push or idivb add cwtl mov inc sbb mov and xchg cmp and movsl mov jge scas dec mov pusha loopne js bound nop mov jge add imul std fmuls cli insb test ret fcoms mov or and lds cmp in and addb pop stos dec adc cmp sbb jmp test xor mov mov out enter and faddl (bad) jbe jae mov jne jle jmp ss cmc pop or (bad) jg mov dec pop mov sbb ficoml test loop ss jnp push idivl add jge (bad) pop and in mov add cmpsl inc xchg dec scas mov jno out xchg lahf add and xor xchg pop (bad) aas pop js xorb xchg les xor xorb fdivrs (bad) clc imul imul ljmp push sbb push aas jne or nop stc (bad) sub aam test orb jmp jl in adc or push adc pop leave clc sti sbbb inc dec test mov mov mov mov dec mov push or test out dec adc xor add inc push (bad) push movsl aaa fcmovb push add ret and and and lods xchg sbb mov cmpb hlt mov adc insb test dec mov test jns repz lea addr16 or test inc (bad) sbb scas clc lock jp clc add sub cmp aam call addl inc in sbb ljmp sbb sub mov and fbstp sbb jmp mov jno sub stc and add mov pusha mov aad pop add aad jge loopne cmpsl sub add push adc jbe mov test enter cmp adc (bad) iret imull xchg add add lods imul xorb cmp nopl rolb or aad (bad) or roll push enter cwtl adc push (bad) jbe jl leave and fcomps movsb inc gs and mov jno or in mov test outsb test lahf sbb movsb mov ret sahf lock stos mov mov leave nop scas sub dec push pop inc into aam out sbb ss icebp (bad) and (bad) aas mov jecxz inc cwtl fs mov mov push lods fldt sub adcb push dec mov insl pop sbb add or imul call mov leave xor add mov pop mov jge aaa pop cmpsb xchg daa push scas mov inc mov mov enter pop fsubl testb stos push and pusha test dec jmp lock xor mov adc call cmpsb (bad) nopl mov shll clc mov pop push movsb pop out cmp or in ljmp notl sub cltd push sti sbb bound rcr jle idivl subl sub mov sub push mov push xor (bad) lds sub or scas mov push and enter or add iret mov pusha inc inc punpcklwd in out mov dec or rol popa mov aad ja (bad) clc out faddl or inc pop in popa xor cmp ret pusha pushf fsubr xchg loopne iret cmp jge sbb cmpsb cmc cmp (bad) ljmp sahf or mov aas mov cltd adc inc (bad) pop cltd jecxz cmp iret pop pop add fnop mov ror mov xchg jnp movsl jge mov shlb popa (bad) fidivrl jmp addl or mov xor inc push jno (bad) cmpsb mov dec mul or ds cmpsb sbb popf lock shrb adc add mov testb push add dec mov or adc cmpsl dec adc xor pop test pop clc test sbb mov aas insl jnp mov jg int inc repnz pop les or mov data16 xor pop imul xchg rol xchg jb test les xchg js cmpsl loopne (bad) jmp stos mov mov mov jmp jns lret push inc xor ljmp int3 das enter cmp lret sbbb mov mov mov fmuls mov test xorb lahf push cwtl rorl mov pop roll push je fldl lahf pop fs mov ss xchg dec (bad) xorb fwait test sub mov movsb in push mov push arpl sbb test testl leave dec idivb mov cmp fwait cwtl sbb test in out sbb icebp add cmp mov mov jl mov test or dec mov popa cmp in cmpsb add (bad) xchg push and nop lret sub (bad) push (bad) xchg iret jle pop (bad) flds or pop xchg les sub xchg sahf or arpl add push jb push (bad) mov daa scas dec shrb orl jmp lods sbb icebp or and popf jne lcall lods bound ljmp mov daa mov adc test adc pop adc nop mov and add (bad) shlb lods xchg pusha xchg js push xorb push repz adc in xchg sbb clc add fstps mov lea je stc cwtl inc je xchg (bad) mov mov xchg int3 fsubs ljmp cwtl mov int3 jg dec outsb popa xor push pushf mov jnp js xor popa (bad) pop cli (bad) fnsave xor ffreep add bound or das int3 les gs sbb lcall pop (bad) mov cmpsl sub jl mov mov gs mov out dec cwtl cmp pmullw add cli cmp ja adc aaa andb aad mov push mov test jle pushf mov out sub mov inc in xorb xor (bad) cmp stos pop out push sbb test insb (bad) sbb push leave in mov jo lock cld adc and (bad) cld cmpb pop push std xchg and mov js sub fbstp call pop mov dec push dec enter xchg sbb sub imul test enter sbb and or xchg js test inc leave call test cmpsl cmp inc fs nop jle pop cwtl cmp subl mov es xor mov jecxz add inc jnp (bad) inc das lea xorb frstor rorl fwait out xchg push pushf jns pop jb mov call adcb clc movb sub pop popa movsl inc mov push dec mov subl xorb test pop stc out xchg lahf loope mov or and xchg fisubl jno nop arpl (bad) cmp iret add jns loop mov call and popa inc cmp icebp lods fdivrs sbb (bad) out push cmpsl mov test (bad) mov pop fwait pop cs test int3 outsl fild arpl es and (bad) or into xor mov test sub mov shll rcr sbbb mov scas dec inc fcomps jmp iret cmp fstl insb (bad) out imul mov nop push in daa nop add push orl sbb movsb sub pop adc test mov sbbb dec jns mov data16 cmpsb repz or lea in (bad) mov das nop add jl push add xor push test data16 inc jle lock adcb push jl lods xorb inc dec cmp (bad) cmp subb cltd push orb popa mov mov clc xor repz pop subb aad leave sub mov stc or daa mov jle xchg fsubs fldcw aad (bad) xor xor cmp xor jne cmp out icebp aad std iret pop cmc mov or lock movsb out leave pop jns xor mov cmp xchg xor mov mov repnz (bad) cmpsb cli icebp mov mov adc insl add addr16 stc ss (bad) jbe mov adc and or mov lods and add (bad) mov sti out jo xor es jmp adc out push jo andb dec or jae mov mov xchg outsl iret sub mov pushw and add xorl pop sbbb ret insb nop ret gs lahf punpcklwd scas enter shrb test adc adc cmp fwait mov dec fldenv xor or jno ret fildll jb out mov dec (bad) xor sbb and lock xor pop inc cmp inc dec pop xor ret pop adc and dec push pop mov popf xchg adc addl andb add pop (bad) aam rolb push sbb mov mov dec enter or pusha pushf andb pop lods imul xchg cmpb fildl js push mov dec or fsub mov nop jp cs pop repz orb mov mov nop outsb mov xchg (bad) push adc enter test aad loopne push pop mov subl inc adc lret xor and mov pop fsubs test test mov sub (bad) jb subb and adc andl add sbb nop or push movsb pusha xchg or rcrb push cmp int (bad) cmp sbb ss outsl mov cmp xchg push loope mov and adc push dec mov xlat daa mov and arpl stos (bad) test xchg mov fistp mov lock stos xor xchg mov insb out iret add push loope loopne jno fsubrl xchg (bad) orb jge push int3 add dec stos scas out sub and pop in jbe add push mov dec leave and mov inc add pusha mov mov adcb aad pop dec xchg mov add sahf int3 mov aam shrl hlt or inc adc pushf aas ret lods dec sub jle movsb (bad) add mov pop mov enter fstl fnsave enter ret mov test loopne cli mov jle or fs xor push dec cltd dec jle insl stc mov repz ljmp inc loop jmp gs inc iret sti hlt adc inc or lret xchg xchg fmul adc pusha cmovs and add xchg iret sarl (bad) push cmp jp pop int3 je inc ret cmpl ret iret xlat clc add inc pop push inc lock loopne jecxz sub mov inc mov jb cld sarb aam out fildll jp sarb call sahf sub jge decl cmpsb add jle aaa (bad) dec xorl mov cmp and in xor in pop pop mov push mov sbb jle movl sarl xor cmp mov inc adc lea and in mov cmp sub xchg les insl jmp pop mov jp sbbl scas cmp lahf into shl jmp jp fbld sbb jle les add js push loopne fs inc sbbl (bad) inc adc ret test int3 sahf fimul ret xchg sahf mov sbbl push (bad) enter add jbe jbe lcall shrl iret xor daa rcrb (bad) jne sarl mov mov pop or mov out aas cs pop ret push pmullw rcrl sub push lock call scas cmp dec lods cmc push fcoms in int insb xchg (bad) push and arpl mov and stos jg gs inc clc das xchg in cmp lds jo or push cmp adc iret mov add inc out mov fcmovbe out push fsubs (bad) lock cs inc fsubs adc xchg cmc andb pushf mov adc es cs out push sbb das xchg xchg rolb xchg repnz mov aas flds mov dec fsubs mov cmp lret test rcll lret daa push test (bad) (bad) mov jmp inc sbb mov fs iret aam fs ret popa lods stos mov xchg ret out adc jle jecxz fcoml adc mov test fiaddl aam cmp stos sub jnp pushf inc xchg sub imul inc frstor or movd fdivs xrstors xchg jnp inc cmpl sbb mov pushl sub movsl rolb (bad) mov aaa iret xchg testl jno xor mov shll andb cwtl stos bound mov inc jle (bad) and pushf mov sub mov (bad) loopne add pop nop (bad) sbb dec je stc push sbb mov push jg inc pop mov push int les dec jnp xchg out xor dec cltd sbb into xchg xchg xor dec or mov or sti mov pop adc test stos imulb test stc pop adc cmp add jo data16 cmc and push mov xor and xchg cmpl outsl jno xchg mov ds push test mov xchg movsb xor adc xchg jne xor out or arpl xlat sub jo loopne inc jb mov xchg or je inc or cmp bound xchg ret (bad) xor adc icebp push imul inc (bad) jb nop or xor mov dec icebp or fwait xchg jo repnz cmp popl add or (bad) int sub ds lods icebp add mov cmp arpl and cmp shrb mov imul sbb mov cltd or mov js fldenv sbb orl xchg ror mov sub add mov test shll test roll data16 fisub ffreep cmp subb dec xchg fsubrs sub dec mov pop push adc and mov ds adc xor mov sub pop xlat mov pop inc and movsb push push cmp rcrb cwtl iret out sub cmp pop jecxz mov mov mov mov or push orb add mov sbb inc cmp cmc mov mov sub jne add pop sahf push leave cmpb jmp jp inc subb cmp inc mov sub sbb lds add test test sti jne sbb sbb push add xchg mov orb add dec mov adcb sub (bad) fdivrl pusha sub pushf pop test andb sarb push arpl fstl js mov and in mov or or in mov insl ret or stc (bad) stc andb popf mov test push out add mov loope out aad inc push cmpb inc adc cmc jle enter repz rclb aad fnstcw ds cmp in or pop push mov hlt punpckhbw repnz sbb mov push movsl jnp lds mov pop test fildl mov in mov test orb (bad) dec es mov das test stos mov repz mov push pop adc repnz outsl xchg movsl pop dec add pusha das subl sub rclb adcb or dec mov rol sarb call sarl mov fildl jns push notb lahf pop add (bad) lret add test pop inc mov cmpsl add jb xor subl xchg bound adc push test mov adc movsl push xor ljmp ficoml mov fcompl out mov scas repnz testb sub push mov add jmp enter dec adc sbb mov rcll jae xorb in pop sbbb (bad) std jl or and fnstcw jl out xorb test andb out ss mov push stc sti xor pop imul notb add (bad) repnz cmpb seta jb mov pop mov movsb jno pop inc std or ss cmpsb jns xor mov pop inc mov hlt mov push clc push lock inc adcb inc iret xchg pop andb inc ret push mov stc dec int mov cmc inc push or inc gs jmp cmpsl add cmp inc outsb pop pop lods outsl mov mov (bad) stc outsl push jb mov lret movsl mov test lods jg add sub ret mov repnz sub cmpl jo test push repnz out (bad) loope add mov testl jno push pop sbbb fs xlat or lods mov mov hlt pop hlt xchg das mov sbb or out mov mov sahf ret test test mov mov (bad) in stos or iret pushf adc mov and jb and mov test inc repz ret and inc xchg pop rcr in push mov sbb fcoml sbb sarl push fmull (bad) sbb popa imul aas leave mov mov fsubs sub pop rorl inc adc pop ss gs aaa pop lds sub (bad) or adc push mov pushf iret push ret gs imul sahf iret sbb ret inc add mov push lcall xchg mov ret gs adc xor jno sub push decl push add ret bound and mov pop into iret pop sub xor or pusha sub mov cmp inc addr16 push in push icebp mov xchg pop bound jns lock pop inc xor imul test pushf out inc adc lods (bad) leave into test jnp aam subl sbb das xchg adcl repnz cltd pushf cmp jb jns adc push or jb push mov std mov dec jo movsb mov scas inc sbb xorb jge sbb nop pop clc lcall adc sbb mov sub mov js aam sub and dec cmp sar shl js fs xchg pop shll mov loopne rol int add adc jecxz fdivs outsl mov dec mov cmc repnz jno fdivr lret loop hlt pop js push cmc push arpl clc imul add mov mov cwtl add inc les adc push pushf dec xor xor mov lcall cmp lcall rcr pusha mov jne not iret inc cs xchg cmpsl mov or bound mov mov loop inc push iret cmp adc in leave push subl xchg addl movsl jnp mov (bad) and fild adc ss (bad) adc or mov je push mov mov subl cs add std jl scas test cmp pop es inc fs push lahf xchg pop ss aam push (bad) insl jae mov cmp fs out loopne mov sahf mov sbb push dec or ret cwtl xchg mov ret mov xchg divb push insb or sub je jge mov loop sub les rolb (bad) sbb xor lcall cwtl lret sub out add pop ficoml mov xorl (bad) jbe xchg push jae les xchg lret xor adc mov xchg xlat and fiaddl ret out mov loope in dec gs aas repnz pop sti jge subl xor add push mov les push mov xor inc inc inc call add pop test push or fdivrl insl loopne xchg int3 negb dec mov mov rol cwtl adc stc pop mov rolb jae or dec insb pop jne std ja imul adc pop loop jmp and in jecxz out fdivl adc cli xor test int3 mov mov dec insl popa popf pop in addb (bad) adc andb jmp sub xorl and add or (bad) ret fdivs (bad) testb jne in popl push push cmp (bad) js xor jp test mov add and je mov or inc jecxz or or das inc cmpb sbb mov pop dec push and nop mov aad xor ret loop insl xchg push pop lods xor pop mov xchg (bad) sub lods sub mov rolb call add sub push nop idivb iret inc push jo add andb mov test inc mov out imul push lds sub mov and into inc mov int3 test inc jmp jge test adc test add lahf cmp int mov test sbb adc cmc pop add ret cwtl (bad) xchg xor (bad) pop lods push imul cmpsb push adc cmp cmp xlat subb xchg inc shlb jns jae cld je addl in fsubrs and lods xchg jecxz dec cmc cmpb push dec sub cmpb adc and xchg xchg sarb subb (bad) adc nop je jge mov xchg es mov xchg jo xchg mov add push or jno ret (bad) jb mov fmuls mov sbb icebp or fsubl nop out mov add jae push mov pop (bad) inc sbb lret lods test and orb out and jae mov push cmpsb test stc (bad) mov xchg mov popf push sbb adc or jo js sbb aaa ret imul pop ja mov pop xor test push push mov jg mov shrl xchg cmp clflush in test es cmc rclb xor adc (bad) stos push inc addb pop pushf je testb sub aaa stc rorl add pop data16 add cmp add mov pop push lock popa xchg cmp (bad) jae xchg cli addb inc stc nop enter add jg mov (bad) enter test sub sbb xchg jp xchg test lcall or in fistpl add andb adc mov fist pop movb iret (bad) push jge adc (bad) shlb and push movsb stos inc add jg dec int3 add movb adc sbb mov iret and adc mov cmc arpl push divl out gs cmp or push sbb cmc push jns imul xchg xchg outsb mov sarl inc je mov lock dec lcall subb insl push sbb xlat clc insl mov iret inc jne jecxz xchg xchg sub mov xor fstps push std int3 or int sub movl shlb xchg xchg imulb sub inc jbe in iret pop xchg push in cli pop adc push inc add cmp ds dec sbb (bad) jp fs sub xchg ljmp test (bad) push aad pop mov sbb jp xor insb or outsb add test add sbb andl gs inc fadd fisttp (bad) insl test mov xchg lods fadd mov cmp jmp sbbl and push ret xor or ficompl fadds mov pop out pop stc addb cs adc mov dec mov jno stos adc and insb xorb xchg outsb orb imul ss lods cwtl xor sahf (bad) js rcrl push aad xchg mov mov or jl inc cmp sub or (bad) icebp mov fildl sbb sbb sub das mov cwtl mov negb cmpsl push xchg and mov fcoml push popa fstps arpl mov pop mov adc insb and or test ret arpl sbb enter mov xchg (bad) cmc enter dec lds (bad) sub aam ret lret add cmp test lret and data16 mov push cmpsl popa xor push cmp aad and je dec xchg and rcrb jbe and pop jmp and lret pop imul mov adc mov push (bad) hlt orb mov cwtl mov or daa ljmp push jg bound and pop hlt pop inc fadds fsubl mov or pushf fwait arpl loope mov movsb bound adc jle or jne push or xor aaa aas mov xchg mov xor sbb xor mov add and or add mov loope enter aam xor jnp or inc pop add mov (bad) lret jae ret iret loope jne mov add andb aad faddp fmul stc shrl loopne jae iret jbe add ljmp (bad) jb fidivl push es adc test push jae je mov push mov loopne out mov push fsubs sbb add lods popf call out inc jo push xchg dec mov inc push lock aas icebp test sbb shl xchg test daa sbb adc fmul sub adc flds jle pop mov std cld cmpsl rorl insl mov sarb aam es add repz sub or test adcb and push adc sbb pop or push xor orb scas andb inc and rcl xchg or adc push mov pop insl pop (bad) pusha test decl add cld test xor rcrb sub into data16 jo add (bad) loop dec outsl in or adc andb cmc push adcb rcrl shrd jae mov xor jp or es adc jl adc add push out cmpsl test mov xchg cltd and (bad) add subb ja pop cmp sub mov dec stos xor add ds inc push or lock stc lahf sbb push dec stos add lds cmp and stos mov insb iret outsb sbb pop sti sbb faddp rcrl jne insb (bad) int mov xorl outsl jg add sahf pushf inc pop mov cmp jns mov cmpsl test sti cmpsb mov add push inc mov dec test test notl loope push push xchg mov gs sub cmp popa cltd out sbb push stos sub sub jl in ret sbb mov std pop and (bad) adcb mov in inc mov std stc jae xchg mov mov call movsl lahf (bad) nop cmp int sahf push je xchg decb push mov fcmovbe and mov cmp ja xchg and lods lret mov ja jbe inc loop or in jmp icebp mov sti icebp mov imul and addps sub inc add xor jge daa pop loopne pushf ljmp jb stos bound ja jns loop in iret adc (bad) push xchg pop dec stc loope xchg xchg shrl outsb pushf mov dec mov cmp cltd out andb aam lahf stos mov int3 pop mov xor movsb enter call mov lods dec in mov pop mov addl sub flds out mov dec orb fisub loopne cli inc inc mov dec mov out mov cwtl push test pop lcall pop incl xchg xchg idivl stc xor mov clc int3 sub lret subb xorl ss (bad) int3 (bad) xor pop js test sub loopne sbb arpl jle mov (bad) lcall mov sbb movsb sbb cmp scas mov or test aam jno cld and pop out pop orb sub out imul test ret xor xchg test adc (bad) jmp xchg and add ret cmp gs sbb pop (bad) push push inc imul faddl mov outsb (bad) arpl pop ljmp lea xchg jmp addb jns gs xchg out stos imul push add aaa cmp sbb adc aad xchg push dec repz enter push imul leave xor cli add push jecxz and popa inc mov mov xor adc out push xchg mov cmpb add pusha movsb imul adc pop xor int3 xorb mov jmp fsubs lods lock test pop add add test inc js push outsb sub fbld jl lea jle stos sub rcr mov push vunpckhps xchg mov bound lock les fiadd pop sahf jno add mov inc jns xor pop das daa in mov jo or in jmp xchg subb inc in in insl ret jmp lock dec dec pushf in out xor or push insb add pop out xchg dec imul imul (bad) lcall jo adc hlt fldcw add cmp (bad) fdivr lods rclb stc jno mov popa sub push sub daa stc adc push and (bad) ds imul mov in pop ja leave jle popf jge cmp xor addr16 mov xor rol add pop cmp add xchg jl xchg xchg push clc iret adc out pop add inc fsubl dec imul push ret jp ret xchg sar jne andl rorb mov rcrb mov mov jnp adc xchg test mov rclb rorl movsl test fdivrs push std xchg loopne add clc mov cmpsl (bad) in aas iret mov xor sub pusha iret stc pop add pop in in push xchg pop pop stc fisub add cld or cmp jnp xlat cli push (bad) mov je push xchg pushf add out out pop loopne test fisttp in pop fcmovnb jecxz iret fidivrl dec add cli enter mov fcomps push dec jle cmp (bad) add jp xchg lods and test push inc ja ds add push idivl (bad) jne adc aad mov xchg fstpt out lods icebp cmc sub mov gs lea (bad) fldl push cmpsl test rcr pop out dec andb jbe sub mov out testb adc test rolb mov inc add jno xchg xorb (bad) mov sbb mov sub push or sub mov outsl (bad) xchg insb popf fildl add dec cwtl aam push loop pop pusha sub add cmp add iret (bad) jo andb movl test movsl insb test dec nop js mov rcrb sti int3 test push lods mov pop xlat mov loopne fcoms loop jnp pusha aad subb hlt pop orb cmp mov xor enter xor orl xorb xlat cmp xchg xchg push sub inc dec pop imul xchg test xchg sbb xchg inc loop ret jp sbbb adc (bad) nop jb fucomip aas test clc lock test xchg sub test test mov push dec insb sar lock (bad) inc jbe flds cmpl es pushf fs ret or jecxz out cmpsb subb (bad) mov scas pop and push mov cmpb call cmp ja jl icebp hlt adc insl mov lahf inc push lcall faddl cld into mov add jle cmpsb sti sub lds in sbb bound nop jb ret lds orb or cld ljmp push jecxz sub iret imull sbb dec mov adc mov dec mov test jnp ja sub or sub js mov fwait fs sub adc pop shrl xchg or loop pop out mov cmp (bad) pop icebp mov cmp bound xlat out mov lret add fcomi xor pop ficomp and push xorb movl rcrb jbe push std xchg orps pop cmpsl fcoms aaa jb iret fcoml push fs add addl and cld nop es shrb and pusha jno inc gs iret or jl pop shrl mov fldenv add mov les cli ds add cli out mov nop idivl dec pop ret xor loope subl or loope stos fild push pop xorl and jnp out add push incl dec inc jo cmp test pushf xchg xchg stos shll mov xchg enter sbb xor arpl sbb xchg mov mov push push daa dec jp push add xchg cmp enter pop cmp push jmp gs dec xchg jbe icebp xchg int3 mov sub cmpsb int inc leave sbb insl jne mov and jnp cmp inc int3 test in or fiadd mov add rorl jbe jge ret jl es jmp stos inc mov push dec dec xor les dec jnp add into pop clc in (bad) jns lods lcall orps lcall mov sbbb mov sub data16 test je (bad) cli outsl aaa pushf mov add jle cmpsl mov inc mov shrl mov inc and mov pop in test push jae adc cmpsl adcb add xchg data16 xor cmc nop fbld push sub fsubrl push lret es int3 xor pop stc mov xorb aam idivl mov (bad) mov or jl xchg jno nop lcall clc add pushf test mov test dec jbe ret or dec gs mov jbe jne sub sbb cmp dec inc jnp jno push xchg lods pop stc cwtl jb push flds inc adc fbld (bad) xor sbb fsubs enter dec das fdivs pop orb add loopne push xchg movb adc add scas imul mov rcrl mov gs pop or mov scas test mov rolb and mov pop cmpsl and pop fldl sub shl cli sub (bad) out xchg xor push cmpb je adc out sbbb xchg inc push icebp xor mov sbb jbe mov aaa (bad) repnz mov add orb fsubl je xchg sbbb lret sbb xor mov add and push xchg outsb sahf xor adc sarb mov loop cs enter (bad) gs rolb add cmp cmp fst xchg out imul (bad) (bad) cmp inc inc sar lret inc jno stos inc test mov xchg lret mov imul inc addr16 ds pop xor insl sub sti int3 test gs das and xchg or add sub (bad) xchg fwait dec add adc mov jecxz test mov mov (bad) lret mov mov mov push cmp cmp je push popf jns adc pop xchg jnp xchg ljmp (bad) mov jg add ret movsb jns jns addr16 or sbb lret xorb push sbb and insl repz or pop mov incb and sbb push lods push je cwtl fildl out push ds addb jecxz shrb mov push xchg or cmp fdivrl orb cwtl (bad) cltd sbb pop rol (bad) mov imul test adc adc inc push fmull mov mov lcall sarb pop cltd pusha mov cmc imul imul ja adc pusha test out sbb mov mov sbb js add test orb sub and push push in inc cmc mov rcrl hlt xor inc push pop jbe (bad) (bad) ret aaa int lahf subl outsb mov cmpsl loope fstl jle (bad) pop negl push sub cmpsb xchg xlat sub jmp imul xchg adc stc xorb in push mov stos push addr16 mov sti or xor out or test jb push cmpsb test addr16 sbb and mov or xchg repnz daa shrb jge dec xlat inc jo push stc mov lock sub add mov add jbe push adc xor loop fnstsw or imul movl dec pushf je and fcoms scas je mov ss aad sahf js dec jl and pop sbb sbb std sbb mov mov test inc (bad) stc fimull loope int and mov xchg js cwtl test out lds lods out inc (bad) lret adc and subb sub ret in sbbb int push jecxz lock cmc lcall sub mov mov pop xorb cwtl popa test arpl out nop add xor outsb cmp pop scas or rorl addb shrb mov loop cmpsl pop (bad) cmc nop xchg and subl push mov cmp or lds push fiaddl std push sub push sbb enter sbb inc adc push addb dec test xorl scas (bad) pop rclb outsl stos push cmp xchg imul sbb jmp dec fld sbbb out adc push cwtl call xor xorb sbb mov xchg add and or loop jne inc cmp dec mov scas orl add xchg add pop out push add negl fild xor cld jl inc ljmp cmp fbld roll xor dec mov std cmpsb xchg stc popa xor call push dec mov jle pop cmpsl xor cmpsb dec movsl (bad) (bad) add loope mov mov mov lret cs pop add ret imul adc sbb rcll lods mov cmc sub inc adc cmpsl fcomps negl inc enter sub outsl mov fsubrl mov movsb add pop (bad) sub faddl xchg dec push fstpt stc les int jnp fs jne mov cmp sub cmp dec pop mov rcl pop mov in pop pop aam int xor test mov (bad) test pop (bad) sub dec addl fisubrl dec outsl in sub xchg pusha mov fisttp xchg dec mov and imul incl adc pop add icebp and pop (bad) xor out mov pop push push add lods test cwtl push push jp adc (bad) call out mov into mov mov cmp clc xor inc into dec jge sbb xchg popf adc mov test fcmove in mov cli pop les mov dec cmpsl jns xchg sub fist popf (bad) imul fisubr movl and test ret pop adc jp fisub (bad) in fsubrs mov sub mov mov inc shrb clc pop push dec push inc data16 push pop add xor stos and pushf or and fmulp push cld mov lret jb pop jmp xor fadds pop lahf or gs sbb fld hlt pushf outsb push mov (bad) rol movsb daa fldl hlt xor (bad) push adcl imul and or push div cmc xor scas iret jne insb (bad) enter mov cmp mov ret and xor xchg (bad) adc push dec and or pusha mov mov aaa push aas (bad) js andnps fsub insb cwtl sbb fdivrl (bad) mov pop rolb lods movl int insl dec pusha mov adc clc sub out sbb enter (bad) and add sub (bad) fcomps inc mov iret stc call gs mov sub or ror adc ret mov (bad) into in loopne (bad) ficom mov or pusha cmp add push pop cmp ret lcall and incl and fidivr xlat (bad) ret xchg outsb mov jns inc mov test (bad) jmp adc aaa (bad) sti add mov cmp int3 jne xor xor andb cmp clc sti rorb mov inc addb fstps and test daa rcrl push xchg jb push or cmpsl js and adc adc xchg popa das add jge push xchg cmpsb push xor sbb xchg andb mov adcb scas stc subb arpl repnz pop sbbb add popf icebp push push xorb push clc std les ret and test out cmpsb pusha test sub add mov movsb adcb xchg ret ss mov js xor xor adc pop andb popa loop sbb (bad) mov mov (bad) push mov fisub (bad) xorl cmp sbb (bad) jg lds add imul cmp fisttpll sbb xchg clc jmp test pop xor andb jmp andb insl mov cld add adc mov stos es lds mov ja aas inc xchg jb cmp and pop loope mov cmpb sahf adc pop jecxz (bad) shll out and and test das xchg imul (bad) notb and fnsave out xchg cwtl jns xchg fmull stos push je test xchg xor cmpsl insb rorb mov addb jl mov int pop xor pop in adc xor sbbb mov ret lds test loope mov pop pop (bad) sbb ljmp jo xor lock dec lods test sbb into mov xor lret mov jl dec add adc (bad) cltd pop enter mov inc ret sbb fsubl orb mov iret or lret cwtl (bad) shrl ss jb test pop shll nop dec fs test push mov inc and jb push adc mov cmp notb xor subb mov jmp dec mov fiaddl cmp mov icebp andb cltd pop pop arpl loop orb pop mov sbb sbb pop fwait mov or add xchg arpl and ret push std inc mov mov (bad) sbb insb xchg sbbb xchg xor xor mov dec jno dec mov dec mov mov push fdivrl (bad) ret jmp fdivrl out inc push cmp insl ret inc mov jle dec cmp cwtl cmp add pop adc lea push lahf xchg sbb fs sub push ss sub xorb or xorl aad test test out ret nop dec fimull pusha cmp scas push sarb sub call out cmpb pop cltd andb add adcb push or (bad) insb jno adcb cmc pushl dec rclb ret jmp xor jb mov loopne sbb test lods push pop mov andb push mov into fs sbb insb cmp pop and pop scas adcl test mov (bad) sahf aad push inc mov mov aam subb call in and push in pop movsl dec or les cld nop mov sbb (bad) bound push hlt inc mov mov (bad) push pop imul push dec push or (bad) dec sbb add cmp scas fstpt xchg xor inc and ljmp movnti add idiv sub cmp dec xor outsb nop cmp stos push ljmp inc jb push mov inc push pop lahf cmp mov cmp mov mov or cmp loop jp adcb orb stc lods push cmp outsl shrl or add nop enter xchg mov mov ds sub mov dec insl push movsl mov xchg fadds and (bad) call movsl and popl push inc mov pop jo and fadds add movsb mov lods jne (bad) daa scas arpl sbb stos and imul adc sub subl cmpsl and xchg out adc fbld stc mov clc xchg adc adc arpl lahf adcb or mov in add andb mov add cmpsl sbb test nop and xchg jp pop xor ds roll cmp mov scas push jl repnz pop or cmp dec test inc sub lahf arpl mov loop mov stc push pop mov mov iret inc nop clc fsubrs test orb shl add fucomp rclb roll cmp mov adc jp daa push pushf xchg inc addb sub xchg push enter inc inc test pop pop popa mov (bad) aaa sub xor add popf gs arpl or sub push xor sbb (bad) sub mov push sub loopne jne inc add pop xlat jb xor repz sahf aas xorl push leave xlat mov push std add popa jecxz or adc push xor iret sub inc fnsave or sub fdivrs sbb pusha pushf add mov xchg andb lock icebp or dec add sbbb adc clc cld fstps cmpsb (bad) add mov pop arpl ja push addl enter negb andl into sub mov mov inc mov enter insl out add mov sbb pop pop cli stos push loopne jle cmpsb inc ljmp in cwtl cmp out xlat sbb movsl leave imul out in subb sub pop cmpb pusha repnz enter cmp and sbbb popa jge sbb arpl lods iret icebp or push cs push popa jmp (bad) push mov test push xchg cmpb jnp lea lds jns inc xorb or or addb rcrb xchg mov adc xor push sbbb scas bound sbb lods lods or repnz enter mov jnp mov jl push lods mov xrelease pop mov loop mov jns jno xchg out (bad) les and loop rorl jo addr16 mov call lods cmp mov lds lahf push sbb mov lock jge add addps pop jno push sub icebp sub xor and insl jbe jb cmp sub vorpd imul add add aam lret cmp scas sub std xlat sub inc mov andb jbe fcomp pop cmp repz sub xchg xchg movsb push jbe and xchg and jno iret test arpl lahf inc shl mov iret xor sub in cmpsl and (bad) fcmovne or shll dec ljmp insb or lds xchg sub mull sub cmp pop insl notb mov movb iret (bad) fcomps jbe mov mov fwait inc movsl push imul enter movsb call mov push xorb into mov ret icebp xchg sub aad xor mov and sbbb jp push lods push adc test fcomps orb cmp dec mov inc test pushf gs scas stos dec repnz testb inc mov lret cmpsb jnp inc cmp movsl mov mov inc sahf fmuls fldl adc scas mov aam adc jbe xchg xchg add xchg sub lock test (bad) leave mov fsubl ret jb nop outsb mov int3 sahf push enter pushf std sahf inc pop int3 push in mov insl jb mov movsl mov sbb push das in dec sbb dec jecxz orl inc jmp mov jo stc dec xchg lret pop xor in mov and mov ret push cmp iret and lock mov push mov (bad) cli jo ret sbb xchg xor adc movb nop call fild (bad) xchg dec roll das cld scas lret test pop bound shrl inc pop mov (bad) cwtl pop loop jb dec bound mov iret cmpsl sub sub xor jo iret enter cmpsb add std lds sahf in sub add iret out test inc push test outsb bound mov cmpsl fldt xchg push iret pushf pusha ror in mov or mov cmpsb and repnz dec xor test repnz (bad) test pop push dec jae rcrl out cli mov xchg xchg fsubrl inc push sbb push sahf cmp sub sub mov jecxz movsl rcr lcall jle call (bad) and mov insb jg lcall mov sbb loope cli mov mov sbb addl cltd add inc push sub test dec das jmp fildl xchg cmp insl mov test arpl jne outsl inc and jl push iret sbb jp pop cmc cmp cmc dec push dec inc lret inc sbb das fsubs pop std stc inc loope xor dec orl mov int3 mov mov xorl pop fistp fcoml negb fisttpll ss or cwtl mov pop fiaddl jnp xor insb call ss lahf sub es and testl push mov ds subl xorb pop jmp or xchg cli popf frstor test jmp (bad) cmp push xchg addr16 mov addb pop popa pop fwait jno inc push (bad) imul popf stc insb (bad) and adcb enter mov sbb arpl xchg loope xchg lock jmp jnp xchg outsb or sarb cmc addb and jne ss lahf inc mov cmpb in loopne subb mov test popa push mov adc dec mov lods and sbb cmp mov and (bad) push addb stc pushf adc into loope lcall mov (bad) fdivrp or (bad) xor repnz adc cwtl pop cltd adc mov jecxz push rorl repz adc mov push std sub mov sbb outsb nop push jae or rcll and fnstcw lods mov mov (bad) fisubl and and test fs ret adc jle xchg push fsubrs fdivl orl mov pop inc cwtl cmpsl fsts jae mov push stc mov dec data16 jge fisubrl sbb out outsb sahf or mov push and adc add dec aam sbb and mov inc mov jge insl jb shr out bound xor pusha sti fs ljmp out imul inc add jle ds add imul es and fidivrl mov (bad) mov outsb pop adc or push rcll lds pop test enter insl aaa xor inc adc ficompl enter je push icebp ffreep lret jo dec add jp jo jbe testl mov in (bad) xor xor in or leave scas dec stc push stos cmp mov xlat fild pop sti addb sbb (bad) mov sub stc cs lret incb (bad) jno pop push pop mov pop cli inc adcb adc gs addb add das rol xchg pop pop (bad) jb mov mov push ja orb add cs push lahf xchg inc add xchg inc sub mov stos add lods out add pmuludq or sub or pop push test (bad) mov jns mov (bad) test jb call out and mov fadd xor test sti in push sbb test pop lods cmp cltd xor add sub out sub cmp mov sti xor mov jbe xor hlt mov mov adc shrl add xchg push outsl xchg and jns or das mov adc cltd out mov gs in cwtl data16 aam test fisub push xor push lods sbbl adc (bad) je mov andb jb sbb sbb popf jl mov das sbbb stc clc jg dec roll add scas add mov push notl sbbb sbb pop pop pop movsb xchg imul and fwait popf mov (bad) hlt jb xchg gs addb push loope adcb and outsl xchg dec ja adc lds adc adc in ret jno push cmp mov cwtl push shrl xor push xchg add dec scas outsb test xchg mov mov insl cwtl jmp mov push sbb sbbb mov loop mov push cmpsl xor addb pop mov adcb cmpb aas jp jno mov flds addb ret inc mov imul cmpsl push add add mov out adc jbe outsb fcompl in mov push outsl subb adc aas jnp xchg cmp pop sub jecxz inc iret sub mov dec rcrl js sbb jno push lods mov test cmc or xor xor enter scas js add xchg fs fucomip pop pushf and lahf rcr sub pop xchg and fiadd mov inc inc sub mov lahf fs mov shlb scas mov addr16 in jae sti dec sbbb dec mov jae jne push xchg mov xchg xor ret data16 fisub stos xor out lea arpl fmull mov xchg mov sbb fs hlt and pop adc fimull fsubrs xlat test cmpl mov aas and stos inc loop add jns out mov sub adc mov sti jmp and dec test xor sbb jo aam push (bad) (bad) aaa and mov add aad and jae sub in sub insb testl xchg and addb sbb push mov xlat xchg add and mov insb das cmp inc ss fmul sub jae cmp xlat xor gs jbe sbb (bad) dec and inc mov xor mov dec jp adc data16 popf pop movsb mov aam insb inc je addb ds dec ret pop call xor lret or test xlat enter test popa xor xor decb adc mov cmp mov int pusha mov rcrb mov mov (bad) xor leave (bad) in push pusha xorl pop mov test cmpb (bad) cmc lcall idivb je mov dec xchg and inc or sahf push mov orb cwtl pop rolb push and xchg push xchg subl adc push scas cmp andb arpl lock lret or addr16 int sub stos mov jl cltd pop jg je sub mov cmpsl test and or in xor add notb xchg outsl das mov lock fildl (bad) js (bad) ret and xor xor jo (bad) fsubrs adc nop insl pop subl lds scas dec mov adc mov testb jle add inc stc xchg pop mov xor inc shlb and inc push enter sbb mov xor out jmp lcall test add popa iret subb shrb int3 movl mov loopne pop add add gs int3 xchg push add stos rolb xchg xchg fisubl imul mov out adc add jmp or pop nop int3 fbstp (bad) sbb pop mov aaa out inc mov shrb add loop sti fcomps sbb ret sub cmp cmp mov loop aam aas mov (bad) ds fidivl lock outsl fucomp data16 sub inc aam sub mov xchg sub dec enter jo inc imul gs cltd loope rclb push fdivr fldenv inc stc out clc (bad) cs push mov jnp incb nop les pop fdivr push xchg or cld sub dec cmp mov sub adc push gs xchg inc aaa push (bad) mov out loop fisttp xchg das pop xor jnp mov outsb fs cmp repnz loop pop push in fnsave inc pop and frstor pop xor pop gs adc fucompp (bad) cmc xor xchg in push cmp mov cmp inc es add mov enter dec movsb iret and fwait mov mov (bad) jnp imul xor sub clc mov mov cmc out repnz pop xor (bad) cmp add add stos repnz mov adc mov sub out bnd or sbb sbb mov in lds mov (bad) popf shll lds das sbb repz mov roll fwait and popf cbtw (bad) (bad) xchg push aaa ret or dec leave cmp roll in pop cmc leave sub (bad) pushl loope movsb (bad) jp mov enter imulb add sbb clc and daa fisubl sbb and mov out and orb jo cld xor jns lcall inc mov pop xchg xor test dec lret sub xchg lahf addr16 xchg mov test lret or insl cmc sahf insb lods js mov jl pop cmp inc fdivrp jae push adc (bad) xor repz sub mov sub fs addb push fcmovu mov test mov and xchg and and repnz mov dec arpl andb inc fdivs outsl add cmpb adcb cwtl xor pop pushf xchg andb fsubrs in ljmp or dec add jnp xor clc cmc jle lods mov sub or data16 push enter sub push inc test mov stos ret mov (bad) or sbb loop mov mov stos push sub aas (bad) xchg aaa popl jecxz enter jmp add cs cmp int3 lds mov mov andb pop (bad) aam outsb mov popa inc mov enter cwtl arpl test nop pushw sbbl sbbb int3 jmp xchg pop in xchg cli lock or xlat push mov ret (bad) sub fwait inc addb movsl push jle test mov mov xchg push add mov pop cltd aaa push add roll lds int orb mov and addr16 and jno lahf sahf xchg loope adc insb xor aad lfs in (bad) iret and mov and (bad) (bad) adc faddl or mov insl fcomps frstor test push loopne xchg cmpsl or xlat push mov mov into pop das int3 jge mov test sbb subb stos fdiv stc push adc or aad fsubs in addr16 xor cli orl sbbb scas out lods pop call fdivl mov daa popa mov xchg jno (bad) outsb mov addb jo xchg jbe loope pop xchg adcb in cmpb mov pop das inc cmp movsl inc pop cs adc mov test mov xorb jae fiaddl mov jb mov js sbb and leave orl pop lea push in adcb and sbb (bad) call inc cli push jae in and sbbb jl pop test lock mov xchg repnz xor out sub push (bad) or (bad) sub das mov fsubl loop sbbb roll aaa stc adc jns stos xchg mov push loope and cmpb jg pop out adc roll dec mov cmpb repz ljmp fisub mov repz inc mov lods dec mov popl sub dec lea (bad) inc mov add popf es mov add sub insl ret test and xor xor or mov incl push stc sub lea clc mov loop in outsb add push pop popf cmp adc cmpsb test ds sbb cmp stc lret lods push mov inc mov jmp ret mov mov out push or sbbb dec movsl rcrb jmp sets or dec out andb out movsb dec fistpl clc mov repnz nop mov dec (bad) mov dec icebp jle xchg pop imul and andl sub rolb mov mov adc mov outsl mov fsubrs fcompl xchg lea (bad) and adc jle dec dec lods xchg ret jmp xchg mov push rcl int3 and addb cld (bad) andb mov out data16 scas push xor enter test mov fadds cmp xchg dec jne outsb jmp mov neg pop sbbb lahf lret fsubs js gs icebp ds test push clc add jmp jnp mov loope ljmp sahf addr16 movsb pop mov insb mov mov add xchg lock (bad) fadds xchg xorl jnp gs or mov pop pop addl sbb inc dec pop mov push je (bad) icebp push pop or loopne (bad) xchg cmpb dec sbb das dec insb ljmp cmp inc sbbb jmp push or pusha fbld (bad) mov shlb test mov mov xchg in xchg cmp or scas or jecxz add mov push stos xor pop lods leave and js adc jnp jns icebp mov pop or mov jb leave or loop test lods dec imul outsb mov out adc nop mov mov aas push adc jmp push sbbl xchg mov xor mov cmp push and lcall inc out sbb dec mov mov add fistpll movsl scas cmp sbbb sarl mov jne and add sbb push lods lea mov and test in push mov cmc mov sub movsb lds or and call rol sub rcrl sbb xor jb js clc ret jg cwtl repz xorb test je mov in in sarb lds enter sbb mov jbe into mov imul div xchg data16 stc push loopne ret out sub icebp in fidiv rclb jae in mov add addb je into xor insl jl in and xlat pop sbbb dec and fstps xchg cmpsb das incb out inc mov ss outsb scas xchg sbb fbld sub sbb sbb insl fldl add add xchg mov jle ror sub xchg add rorb dec leave scas imul mov test push imul (bad) jns add sbbl xchg clc cmp lret (bad) mov or or lock faddl cmp pop ficomp inc inc mov jg mov rol mov add fs (bad) xor inc aas iret pop inc cmp outsb rolb testl mov adc int3 imul jmp push push push (bad) mov (bad) add out fadd (bad) fcmove stc push insb jecxz adc jle js (bad) pop outsb fidiv (bad) inc lods pop xor xchg dec add add mov jmp popa loop lock call sub xchg mov icebp ret mov fwait dec cs jo insl xchg outsb jl jl pop lds aad sub repz imul xchg aam iret push jnp or fadds loop cmp repnz dec (bad) and mov data16 jl mov (bad) ljmp loop adc mov jb mov repz jno xor fildl push cmpl loopne push jge sub into daa push fnop lea push movsb insb jg push pop gs std pop int3 push push dec inc push aam (bad) mov and pop sbb lock add iret jno and add mov cmp iret or out mov sbb and into mov push or insl iret cmp xchg or gs add bound lea and inc lcall lds jg pop imul xchg sub loop pop pop xchg mov sti hlt mov add out add ret ret sub sbb sahf cwtl push jo cmp fstl jmp (bad) fdivrp int pop lods mov xchg (bad) stc popa mov push aas cmpsb xor scas das nop add (bad) std insl and cmpsb ret push sbb pop cwtl clc push add add jnp jo subl (bad) adc insl ds mov push cltd fiadd stos incl cli sub cmpsl push fstl shlb les jne lcall hlt or or inc into xchg mov inc dec and in dec sbb mov pop pop je,pt sub stos push xorb sbbl cwtl es jb fst flds mov aas loop add movsb push (bad) out pop das pusha fldenv stos (bad) cmp xorb push pop jle out (bad) cwtl push mov sub lahf sbbb mov clc repnz xchg lea jecxz fnop js sub in dec sub push mov adc jg lret add mov rorb pop sbb jle push cs inc mov push xchg mov cmp cmp mov std mov stos xor mov or add mov inc mov mov test push xchg and clc popa cltd repnz ficomp pusha movsl mov and xchg mov fmull mov mov add sub popf pop pop adc ret testl mov shll pop inc cmp lods test and orb testb cwtl lea jnp mov (bad) cmc pop add lock xchg dec jb or jle addr16 xor and outsb jb add js sarl fldl icebp add and scas ja jl cwtl jne add push in or or and (bad) mov cmc lret daa mov mov incb push mov ror adc jo adc lea (bad) xor (bad) enter out jge addl jne lahf dec fisub cmp mov adc loop cltd orb xchg mov adc lcall aam ja xor xchg mov xorb or lret je adc mov test xchg inc stos fisubr lock icebp sub test and or stos sub and scas mov cwtl pop stc mov outsl addb xchg insb subb xchg and sbb mov xchg outsl jnp pusha int3 leave add int loop xor xchg push mov loopne ss enter add aad xor add mov sbb or in pop (bad) lret iret cli add mov gs repnz test shrb push pusha inc (bad) (bad) mov jae movsl inc and push ret int3 loope push incl lods lods push in ret (bad) sub shll test mov cmp adc mov (bad) mov mov jle xchg push xchg outsb in or aad fisttp inc in and push fdivs cmp dec mov (bad) xor xor data16 push roll mov cmp or nop stos push adc pop add pop fstps cmp repnz movsb mov inc iret dec mov fwait xor stc push jp mov push adc mov clc or shrb xor mov test pop test stos xor rol cwtl rolb mov notl dec loopne or (bad) shrb ffreep stos imull aaa xchg push adcb sub bound orb adc orb xchg dec stos or xor ret adcb mov insb mov sbb or add popa je int out mov cmp mov or adc xchg das jmp test add or insb cld addb icebp stc lret test test mov cmp sbb fistp test out in sbb sub adc aaa hlt dec hlt jae or movsb sub js pushf lods mov ja push je js cmp and lods aad xchg dec nop pop cmp lods out loop jbe dec xor sbb jae cmpb cmp in jne pop lock fdivl js lock push mov pusha cwtl rorb jnp add adc mov stos push lods pop sbb mov inc incl subb xor mov mov movsb cmp ret aam jge outsb nop push shll mov ja mov push mov jmp fdivrl dec lret add mov jne imul enter sti lret xor iret sbb pop xor fidivr out push dec mov inc ret pop enter pushf adc dec jp ffree add sbb lods rorl add xor cmp loope gs repnz sbb ret jae inc es ret loope and js iret or (bad) jns jae stos dec cmp cs lret jg fcmovnu je and push in outsb jae test mov dec adc cmpsl xchg add sbb (bad) or sahf push mov sub outsl inc xchg fadds (bad) sub outsl or pop push in es inc stos (bad) or out and inc xchg sub iret inc imul push xchg inc rol cmp mov lsl lcall (bad) jnp mov out mov mov cmpl jo cltd je cs aad insl push sahf cmpl std jns pop sub in int3 arpl xchg add xor lock push pop stos sub loop cmp and or pop inc sbb das push cmpb scas or jmp sub dec lods les mov xchg cmp sub ret pop jmp mov std or outsb pusha xchg test mov jle cld push mov cwtl push scas dec dec mov push fwait pop jnp xchg shrl cmp call ret out je sbb fisub pushf pop stc cmpb push pop xchg fbstp mov in jge jg jmp add aas loope push aam out jno loop adc addb mov andb lcall fldl fisttpll xor pop dec loope iret xchg or bnd sub aad lahf cmp lea cmpsb int3 sbbb fsubl mov jne out xchg ljmp mov fwait adc cmp je adc ss cmpsl push pop mov mov sbbb fwait lds outsl ss int je mov popa and cmp or iret mov push add xchg movsl andb arpl push popa test mov add push sahf orb pop out sub xchg cmp (bad) outsb mov mov bound jecxz sub mov add xchg popa imul sbb dec out insl mov cwtl and mov inc ret inc data16 dec and dec add xlat popf subb lahf repnz push jns adc lret das or cmc nop cwtl xor icebp push stos xor xor adcb out xchg dec lods lret mov mov cmpb in add xchg cmp adcb dec mov pop cwtl add sahf jns or add js push pop icebp mov pmulhw in mov add mov push push out jge aad mov (bad) or (bad) jmp je fcoms xchg lahf js fdivrs xorb xor pop fs mov mov dec jecxz scas pop int3 jb dec std mov stos xchg insb xchg mov inc pop jg cmp mov xchg jbe jo fadd (bad) mov test movsb repnz mov pop leave enter dec lods or lret flds iret rorb adcb pushf cmpsb loopne in xor test loop das add pop clc xor mov mov loopne lods sub rclb dec xorl sbb out test sub sahf (bad) lret lds jmp jno repz sub out dec scas aaa sbb sub fldcw test loop xlat sub fidivr mov mov xorl aam jnp add pop fistp popf sbb out xor jmp (bad) or add bound mov nop stos fdivp push idiv inc std outsb test popa and lods push sbb scas xor add sbb pop imul inc mov adc (bad) lret add mov xor cmpsb mov dec push xchg andb inc mov stos sbb cwtl xorb das aam imul jns in xchg sbb sbb cmpsb das test push cmpsl stos add and out repnz jmp out adcb clc lcall adc addb mov adcb stc call addb test mov popa xchg ljmp nop std aas cmpl cmpsb popa mov push testb mov adc scas push pop fs andb mov hlt outsb (bad) mov pop out daa push jmp push cmp andl lock nop add shlb jge push imul (bad) cmpb rorl xchg movsl push pop je mov mov xchg lret clc push cmp sub or stos push cmpsb das repz test adc xlat je mov nop fdivs push enter scas pop or lock test fwait pop push movsb shl ficom mov pop rcr and mov push and adc loope gs (bad) jb (bad) add xor jb fmul out js sub lods dec mov sub (bad) pop sbb bnd enter fiaddl dec or inc xchg push loop cmp out and sbb mov (bad) sub repnz test xor gs push or pop jle int pop test (bad) mov mov mov mov ja dec cmp insl insl mov fnop rorb mov aaa pop dec xchg cmp or nop out nop sbb adc shrb mov clc mov sub dec faddl les mov sub xlat pusha imul dec push pop subb aam sbb stos push cmc shlb adc in xchg ljmp or mov nop dec mov rorb test xchg cmp outsl (bad) push sub cmpsb mov outsb add and loop (bad) lock adc xor call xchg outsl out les ja mov xchg and or lahf or adc push test popf faddl xchg iret test addb or xchg mov (bad) test and pop addb ror sub nop or jae mov fwait and jp test pop cmpsl je cmp xor mov cmp add movsl (bad) in sbb out or add xchg (bad) out in or (bad) sahf popf inc cld movsl lds xlat cs ja int mov dec lds pop mov jb in hlt push adc adcl mov pop fldenv lock in add mov loope add pop jle test xor out push sub hlt or int outsl mov popa test add dec outsb inc inc sbbb sub inc sbb imul mov sub jp ret xor inc cwtl (bad) das add insb push je int3 les subb stos in inc push jge xchg aas xchg adc pop scas mov and popa and mov push or dec jo aaa pop mov xchg arpl cltd subb clc pop sbb (bad) xlat or nop add xchg pusha and addr16 je and or mov (bad) jb push dec dec das mov push pop cwtl pop pop loop (bad) (bad) ds (bad) xor fnsave inc adc testb sbbl lods movb mov pop cmpsb push pop and mov fxch icebp orb incl cmc add or mov int inc push jno sub pop incb mov enter mov adc fiaddl arpl dec sub setnp add (bad) sub add subb sbb sub and sbb pushf pop sbb pushf sbb push lds jl add push movsl cs iret mov (bad) das push ret push xchg mov leave aad mov incb add (bad) mov int3 mov mov mov jp stos or inc mov and or xchg xor pop adc xor incl sbb or dec mov enter jo addl adc pop or sub cmp adc push and or xorb scas dec ret xor les test add add push add imul jae ljmp (bad) mov sbb and stos fcoml aaa add adc outsb test loope cld lods lock ret rorb (bad) cmp adc cmp pushf aas (bad) addr16 sub sbb out aaa sarb pop mov pop cmpsl iret sub in adc outsb shlb adcb out popa addr16 cmp sbb xor lock xchg enter mov fdivrp inc mov inc fs ljmp idivb lcall insl xchg dec mov cmc jnp in mov cmp mov aam mov jmp mov nop adc and push cmpsl subl mov or outsb fimull (bad) int3 pop stos sub nop lods xchg fisubr (bad) movsl cmc xor adc xchg jle pop and pop mov add loope xor mov (bad) mov rcrl mov aaa loop dec and cmp adc inc push inc mov nop fcmovbe js aas sbb push adc sarb jo ret mov orl test xchg cmp enter push or adc mov sbb test mov test mov fidivr enterw push cmp out push mov int3 in out in cmp dec add (bad) in xor outsb ror add es jge mov push pop jp repnz popa pop jb push dec cwtl (bad) rorl mov stos out add fdivl or lret cli mov push add inc push fsubr pop inc inc rcrb in mov push jge or (bad) dec cmp xchg push pop das addr16 sbb popa dec sub in push xor fmul mov sbb jle rorl ret aad push jle movsb test jb push mov std adc pop or jp sbb xchg (bad) pushf pop lahf pop cmp lds inc mov aas movsl pusha test (bad) and mov gs (bad) lret cwtl loope and xorb lea mov outsb cli andb enter jo xchg pop jae and enter and lret push subb testl mov mov or mov inc sub lea xchg cld arpl out fcoms popa (bad) or dec cmp sbb xchg shrl add mov (bad) and sub mov cmpsl int test lret frstor push (bad) cltd (bad) cmp cwtl data16 (bad) sub xor (bad) add sbb mov (bad) (bad) and icebp scas ja iret xchg or lret ret mov iret ljmp mov mov test flds xchg and add sbb xchg push lods (bad) push repz push sbb pop das xchg add or push in jae clc (bad) mov jmp arpl dec push enter iret in dec jg lret mov adc cmp or fistp push sub sub aad roll sub or cwtl cmp gs cmp add push push insl andl js xchg sbb xor add xorb jo mov loope shll inc pop adcb sbb pop lahf and lret xor stc cli add (bad) daa lahf inc les icebp sti or push mov scas push fisttp dec mov (bad) pop call push push mov dec push imul add stos add cwtl push mov les cmp mov repnz call test or enter bound clc xchg pop aaa ret test cmp scas imull mov xchg addr16 andb clc and out push xchg mov pop jno es pop fwait and call andl jnp loop mov cld push inc mov jo lds jns test or mov ljmp add sbb lods adcb jno mov dec stos push mov lcall sbb xorb fwait test rorb cltd push les subb aas or ja xor or and cmp dec push (bad) jno out mov cmp pop cltd insl jl inc aam mov cs push and jbe mov inc mov push addr16 mov or std (bad) inc aad xor pop int flds mov sub xor in orb pop add psrlw mov es subb xchg sbb outsl sub add test stc or add push ss mov mov mov sub mov nop test lods push lcall xor das xlat pop cmpsl ds cmp movsb or inc sbb adc sub cwtl pusha and xor clc sarb jmp test adcb insb pop sbb jns ss (bad) mov ret mov add push out jle xchg pop xlat fwait mov mov add enter push fisubl scas push pop andb fnstsw push stc insb or insb test iret cmp xor (bad) sahf jnp adc (bad) sbb sub dec cmc test inc adc js xorb lods pop outsb cmp xchg int3 imul sub sub iret sub rcr xchg jge jle mov cli addr16 imul fs mov imul negb inc sbb xor ret lcall test and (bad) outsb pushf out scas aaa push push movsb jge fiaddl iret lcall mov icebp movsl insl jge loope sub hlt add xchg lods mov (bad) xchg mov inc outsl negb ljmp cmp cmpl lahf les (bad) and add mov or repnz data16 mov jnp cmpsb repz cmpb sub fisubrl loopne pop fwait or pop in mov lcall fldcw rclb mov mov cmp adc jns bound push or lret inc push sbbb aaa xor ja test push mov ljmp (bad) sub mov inc insb lods pop (bad) std lods mov (bad) mov insl pop cmc or push adc push idivl cmp les test test push cmpsl loope,pn adc lret in xor add and xor pop daa cmpb and repnz or jns idiv mov hlt fnstsw add mov in or sbb out cmpb orb scas dec test push fadds andb cmp iret (bad) rclb cmpb stc sbb jecxz ror loop loopne nop add loope lret add je test flds and cld mov add loope (bad) or incb or adc int mov cld mov mov test jl mov adcb subb imull popa or inc mov lods (bad) push pushf or or xchg add test sbb out adc pop faddl jae cmp xchg je mov in mov or (bad) (bad) xor mov inc test int3 aaa flds je in imul push cmpsb test push pusha cmp insb fidiv repz xchg pop popa (bad) test popf pop cld test lods loopne mov jo dec push cwtl insl mov (bad) fldenv adc test jno clc (bad) cmpsl inc add mov lret int3 sbb test lret ss test mov les cwtl push stos jo stc clc sub icebp sub adc (bad) aad sarb mov ret lock rclb jp shll xor data16 movb test test mov jle nop sbb xchg arpl out pop and fistpll pushf mov nop mov xorb xchg mov sti inc mov fiadd inc and or subb push mov mov xchg xchg pushf icebp (bad) xor ret xor lds data16 into enter pushf cmp addb jge popf xchg insb ss push out adc xchg stos cs outsl inc movsb andb mov adcl mov xchg lret cwtl push xor xor fldl xchg repnz and mov stos dec push repz bound add sub addb mov iret or mov jo mov xchg lahf xchg add dec and int subb mov test sti add push fstps mov jecxz int3 sub call dec mov test mov push imul inc mov mov mov nop pop out ret dec test (bad) stos test xor mov fcompl xor insl sub and bound mov sbb pop xor (bad) cmc out stos mov jo mov outsb and pop aam bound orb sbb loopne dec adc xor jbe iret mov adc add mov packuswb rcrl inc xchg insl mov dec subb mov sbb cmp or jg push sub outsb ror insb or xor gs into mov mov add test jne xchg dec mov jge rcl push xchg ret jno jns sti mov leave (bad) insl adc add mov test ja jmp addl int fscale bound leave (bad) repnz xchg (bad) jge iret pop in xchg or test lahf mov xor subb mov ror xor sbb lock test sbb (bad) jae mov mov sbb cmp nop fs add loope xchg push cmpsl arpl (bad) mov clc adc xor xor cmpsb or stc incl jnp push add hlt jns arpl push sub ret ds popf fs xchg repz or sbb jg ss and fdivrs push cmp arpl inc in adc or adc ja fnstenv cmp loop popa cltd mov orl arpl jecxz fcmovu and test loopne jmp mov je leave pop adc sbb lock pop out cmpsb addr16 cmpsb pop adc mov jge sub (bad) cmp mov pop fmuls scas jne lods mov int3 cmpb je imul orl xor add icebp movsl nop xchg or inc aad xor mov pop cmp add ret loopne das cli pop sub sbb loop adc fsubrs push stc int3 (bad) sbb loopne adc idivb ljmp mov test xchg and xchg cmp sbb sahf or in xor adc punpcklbw test mov mov sbb sub inc and push add frstor xor sbb aaa mov cmp outsb mov inc ret adc adcb and xchg mov inc mov roll add je push mov nop xor pop pop mov adc cltd cmp xor lds fdivs pop loope dec pop nop dec hlt cmpl adc push mov divl cmpsl push icebp add enter push das mov xor mov div mov jns jmp lods add fildll mov xchg cwtl outsl imul je ret sub lods fdivr mov add jo fimull xor (bad) mov in test jno pop mov stos lea push cmpsb pop mov xlat daa lods push cmpsl xor mov sbb orb ja cli xor pusha xchg jns test mov jae mov call clc fiadd add inc pop jl (bad) enter mov mov jmp sahf jbe (bad) or xchg test clc out outsb addr16 (bad) or inc adc in adc sbb incl aam out (bad) ja pop subb xor add jle sub test or imul adc mulb enter cmpsl mov xchg test sbb push ret mov fsubrl mov push outsb daa cld mov inc jl sub inc cmpsl into mov cmp xchg arpl popf push cmp cmp mov inc cwtl or enter push addl ret inc mov inc mov je sbbb jmp pushf pusha mov mov out iret repnz add sbb dec mov jnp addb push ror mov push adc jo orb push (bad) xor inc test lcall and xchg xchg data16 jle iret loop mov test inc mov sar leave repz into push subb push jns mov jp mov sbb push out loope pop lock and cs je out sbb cmpsb ja pop repnz mov daa mov repz std lcall iret das inc jmp xchg sbb mov cld add lret mov xchg dec sbb (bad) adc mov dec js xchg push mov push mov xchg jne or jg or sub xlat adc mov sub bound iret sti (bad) daa inc sub nop add adc sbb mov stos dec arpl mov or jl adc mov jb xchg jo (bad) gs test xchg (bad) into test insb mov adc add xor fimull les std call pop add lods nop movsl mov cmpl mov inc mov lret mov push xchg mov bound cmp push and nop push push jl push iret orb test jb adc cmp push xor push sbb sarb sbb out mov roll nop cmp enter (bad) mov mov mov ficomp pop cmp sub jl cmp incl cld dec mov mov rorl rcll jb mov push test fstl fidivrl ret jb or loop xor lock or sbb cmp ds mov mov outsb mov stc add shlb stos pushf mov xlat inc lock insb mov sub subl jno daa inc mov or mov jp mov push xchg sbb sub idiv add cld mov jge inc sbb lret jle xor or mov mov push fildl fwait (bad) pop push cmpsb das dec je test mov xchg mov mov xor add pusha mov stc inc mov insl and push (bad) xor inc std mov pop popa adc test pop cs xorb sub xchg inc popa jno xchg stos out xor and mov mov test movsl mov add mov sub call add mov icebp add xchg shlb imul mov fdivrs xchg mov out (bad) fimul mov xchg insb stc push jmp std (bad) lea xorb mov add lret pop and sub mov xor mull sbb imul (bad) (bad) pushl cmc xchg clc cld mov popf add sbb adc nop push lret outsb xor std (bad) aaa cwtl jo hlt rorl pop lahf sbb cmpsl mov les or xor sub mov and xchg ret jle jo sub cmpl and fldl lock pop xorb pop push push stos mov adcb int3 out insb xchg xchg pop xchg lods scas or push imul pop inc cltd (bad) iret clc ret orb faddl ficoml cwtl push aam mov push pop pop ret daa imul inc xor subb dec inc mov ja adc cmp stos dec push cmpb jns addb loop sbb dec add ja dec subb sbb (bad) cmp lods jl cmp sti mov stos iret or push repnz cmp cli mov cmc jno push pushf popa xchg (bad) popf push out and add mov repz push jg push push addb stc mov enter or mov pusha jnp xchg fdivs mov adc jnp ret dec mov data16 and mov call sbb ret inc push subb cmp je add xor cmp sbb inc dec fsubs shlb das into loope sbb mov dec pop roll and mov cmp fadds ret ficompl gs sbb pop (bad) and jb repnz add xor test rclb cmp and xchg mov in movsl out inc dec and loop es dec add pop (bad) jns test and mov and or iret hlt xchg cs mov xchg fs mov mov addb add fcoms addb dec cwtl popa xchg xorb inc mov cmp dec lcall adc xor out mov cmc data16 mov push mov cmpsl addl popa iret jno adc cmc mov xlat sub ret fldl nop aas in pop roll dec cmp fldcw lret sbb mov insl xchg nop adc adc mov and pop enter dec imul popa dec inc (bad) cld outsl clc mov enter sub in stos xchg pop bound ds insl dec scas cs into mov or daa lcall push mov fsubl pop sbb hlt lret (bad) mov out pop dec xchg adc inc out lock icebp test (bad) xlat cmp pop aam mov cmc push testl xchg ds scas jl mov subb lret cmp je adc or or pop sbb mov fbld enter pushl test ds icebp ds xchg jo xchg test add nop xorb enter mov gs loope pushf xchg inc add xchg stc adc push jbe push outsb pop negl popl mov test xchg mov mov (bad) into push pusha jb stos nop ret jecxz mov loop sub jmp mov cmc aaa imul pop cwtl daa dec mov icebp ds cld sbb jbe add lret or adc js mov hlt adc cmp in repz dec subl jecxz mov xchg cli xlat enter jle int aas into ja mov xor ror inc push xchg mov in (bad) xor cmp xchg and pushf push sbb dec and data16 add fcompl lds jae out add test test fwait in cmp test sti xchg aad cwtl popa jb hlt push jae mov push xorb jl mov mov inc dec subb ret mov sahf push xor into enter int testl sahf xchg adc pop sub rcr repz push pusha fwait mov aad cmpsb ljmp adc push jno xor pop sbbb or sbb mov and add adc addb mov enter sub fwait pop sahf mov inc loopne cltd repz mov repnz cmpsl xor inc mov std jno pop push pop test dec lock inc mov xchg dec sub sbb sub xor ja jge mov lds xlat mov (bad) imul nop mov xor fidivr jecxz push sub movsb mov in loop sbb jle lock push scas aaa cld fiaddl jge push xor or (bad) or icebp pop mov cli mov test mov testb or push fdivrs pop xchg data16 in pop lahf fwait (bad) lcall inc mov loop and and lret inc fidivl js (bad) je addb fidivrl or test or dec mov sbb ffree icebp jp (bad) mov pop adc xchg fistpl mov repz jnp dec and adc dec push lahf jl xor xor les test fsubs or addl sbb dec (bad) dec lods mov (bad) jb sub sub pop adc movsl mov das xchg sbb mov mov mov mov (bad) outsl fdivrl xor sahf rclb test stos fmul and mov mov fnstcw enter mov xlat lahf sarl pop and inc jle test bound in pop dec xchg ret fcmovu cmpsl inc inc stos cmpsb clc nop mov pop cmp lahf add pop pop sbb rcrb daa int js into outsl dec data16 add out mov incl iret mov fmul lods xchg mov and (bad) xor jae fist fadds test lock fmull dec mov outsb mov popa ret leave cmp xor fsubr repz mov int3 mov xchg arpl cmp rcll mov cmp pop fisub repz in lods xchg xor jbe dec jnp (bad) call sahf cwtl mov inc fcomps mov cmpsb addl clc inc xchg fcoms mov sbb cvttps2pi divb or jle or xor (bad) popf sbb or or ljmp nop insl lds jbe xor (bad) in es (bad) push (bad) jg aad sub pop subb insb xchg adcb loope xor iret pop xor ljmp aaa shlb test dec jge das outsb imul mov sbb mov stc adcb mov sub cmp push xchg enter jae rorl xor sub xchg icebp mov incb (bad) cmp push subb jo cmpb fistp ret enter enter ret int in decb jl das mov loopne and andb push mov push add mov push test push (bad) mov mov out (bad) mov sbb (bad) xchg cmp cs addb std mov mov ret push xchg test ret or dec jge mov add xchg jns ret pop pushf and inc mov les xchg flds orb xor outsb push lods xorb aas (bad) xchg push addr16 enter hlt das in int3 dec push stos push xor dec outsl notb sbb push cs cmc int jno jne cmpb cltd pop in push lahf pop xlat adc jnp dec inc cltd cwtl loopne cmpsb push pop das dec ljmp dec je decl test cs mov (bad) sub loope sbb movsb pushf bound jecxz jns je out add iret mov fcompl (bad) jmp xorb lock push xorb popa xchg dec pusha mov mov adc mov push push addr16 movsb sbb test xchg ds cmp (bad) negl (bad) jbe sahf xor dec lahf pop xchg cmp ja je push adc xor loope pop insl inc inc cmp adc popa imul mov fsubs loopne mov push test das leave (bad) repz shl cmp mov jno sbbb orb inc mov and lret movsl push mov mov mov push test (bad) jne mov cmp subl stc jns test jmp loope (bad) es scas mov repz enter fmul or mov in pop xchg xor arpl pop xor push movsb pop incl mov jge fstl push mov repnz xchg int inc xchg js out cmp dec lock int3 pop adc push scas dec pop loopne inc ret clc sub jnp lds and movsb pop call addl push pushf pop (bad) sub or or sub jns cs adcb jns int insl push outsb test shlb jp push pop (bad) jns inc jnp insl or mov or lock xchg dec cs or push fbstp xor adc push scas cmc dec stos mov adc mov xlat jb arpl sub shll cwtl pop sub pusha xchg mov xchg lods mov sahf in push sub and mov call cwtl jmp movsb push push sub out inc fisttpl push push xchg popf cmpsl inc repnz xorb and popf cmp xchg sub inc sbb push out jo movsb dec xor push dec cli mov scas jne xchg adc addb dec fidivr mov sub mov and (bad) cmp cmp or sub mov out sub cmpsl movb cmp jp int3 mov mov and (bad) (bad) roll dec adc xchg xor icebp out adc test mov nop xchg inc mov xchg cmp inc imul imul xchg mov aam sbbl jle dec subb (bad) divl (bad) enter mov pop stos sarb adc mov idivl push xor gs cmp add and dec mov mov (bad) lea addb adc nop and or mov sub loope repz (bad) fisubl dec repz xor div enter test popf xchg fsubr mov repnz inc mov push dec loop rolb fldenv mov lds (bad) ret std cwtl pop nop call mull (bad) stc pop nop inc (bad) ds nop adcb clc stc std cld test cs (bad) push adc add xor loop icebp inc pop enter std out test cli (bad) call das mov clc ficomp push cmpsb push in fsubrl mov js xchg jg lret int and (bad) xor out adcl aas pushf cmpsb loop out out add (bad) fdivs aam adc test call or aas gs data16 into mov xchg into xor sub jb inc mov pop mov rcr sub inc clc test and inc iret mov imul pop jmp mov jecxz cli dec or loop mov sbb ror jmp or cwtl jle imul dec ljmp test jp lods fadds ret sbb push mov addr16 test fsubrl xchg add inc pop insl (bad) ret xchg sbb xor jmp xchg mov mov xchg jge inc mov add pop sub add jne push std xor aad adc nop lcall xor aaa inc in cwtl and cltd pop jecxz inc int sbbb stos dec cmpb pop insl lcall (bad) jl and pop jae testl imul push add daa ds dec cmp or aad mov jno xor dec les and cmp sti sub pop jb adc out cmovp ss rorl (bad) xor pop jl adc jmp mov pop pop mov cmp or push mov nop ljmp icebp sub sbb ret cmp andb stos mov movsl pop movsb cld pop sbb int3 orb sub dec sbb popa roll inc and lds inc add gs daa aam xchg pop xor adc cwtl ret es push scas inc cmp xchg fidivrl cmc lods push insl mov test cmp mov in or cmpb sbb sbb cmp dec test imul xchg outsb ljmp sub frstor cmp std test pop sahf (bad) xor adc outsl and xor orl inc hlt add mov loop xchg push xchg mov fwait adcb pop push adc call orb jo cmpsl (bad) cmp (bad) sbb sub fs stc push inc stos orb std push mov or mov xchg lods push mov push and movb ja adc mov xor lds jb cmp xchg add pop pop in and cmpsl dec mov cmpsb ds jae push addb movsl push jb mov add adcb stos inc mov xor sub int3 jge imul rorb mov js adcb std add lret cmp fldenv push add push fcomi or xor movl (bad) or mov test nop sarl push aad xchg lahf pop addb cmpsb push std shrb incl fist movsl inc or cmpb loope dec mov or in push xchg pop sub nop cwtl je or dec sahf adc pop outsl inc shll outsl shrl cmp and arpl enter stos cmc push aad sub (bad) setae mov icebp jl and andb mov jne insb sbb mov adc outsl fnstsw inc in addb subb aad inc outsb rcrl mov push insb (bad) movsl inc cmpsb (bad) sti enter dec hlt and sbb es dec mov scas dec inc mov cmp mov or lds push xchg sbb testl xorb cmp imul sbb push movsl push shr jne mov dec into (bad) (bad) hlt (bad) jo popl sub or adc cmp sti data16 rorl das xchg mov cmp js adcb dec pop enter mov cld (bad) in dec cmp imul test pushf push add adc (bad) lock sbbb or notl sub icebp sar test adc test sub mov cmp adc lods sbb in std cmpsb cltd adc fdiv add jnp xchg lea mov aas xchg mov xchg movl sub pop jb cltd and enter clc jno mov test stc orl enter lcall mov push fmull xchg lds mov push and sbb (bad) ficoml dec mov aaa cmp or jmp lods jno mov fisub mov pop fbld add cmc pushf mov jg and std cli movsl pop dec out or inc mov cmpsl cmpsb fdiv mov into popa inc cmpsl (bad) jno sbb push jb inc jp mov xchg mov inc rcrb xlat sub (bad) (bad) pop subb dec cmpsb mov (bad) subb dec and mov loop jl scas adc cmpsl aas test dec dec mov xlat cli dec mov mov pop or mov addl pop bound inc popa mov bound jge dec mov mov dec jmp mov iret in jp jbe imul lret sbb xchg fildll mov xor xor out jae cmpsb mov cmp movsl cmpb pop (bad) jno mov leave dec and jnp mov pop enter repnz cmpb jno pop movsb cmpsl gs or jp addl sahf pop (bad) or je sbb lcall cld cmp add inc mov fisttpll cmc adc mov (bad) or ret pop mov inc int outsb xor adc sti pop mov loope int fisub clc rcr nop xchg (bad) or mov mov fdivs inc fidivrl mov aaa or or and cmp adcb add cmp mov inc insl jno pop lahf scas sub test add movl addb cld jnp jg js xor sbb mov jp xchg (bad) add test lock add mov push test cld mov fisttpll nop fimull arpl out jg scas sbbl ja test or add out adc lahf gs movsl and frstor xchg (bad) xor (bad) jno cmpsb lods dec jnp lds lock loope xchg clc add andb (bad) add and adc subb aad inc enter (bad) testl mov cltd pop push xor mov bound (bad) lahf xchg test pop mov test mov dec test xchg sbb nop sub or rcr xchg push add dec push scas imul xor jb pop andb jne mov stc idiv loopne sub loopne stos xor push mov lds xchg es addl sti sbbl sbb movsb add iret std stc fwait pop add jl add stc mov fdivrs mov or cld test push lods sub inc and cld mov jge xchg push pop daa (bad) test out test adc icebp gs mov stc add sub push faddl in push in push fstpl or gs insl sub pop retw mov les inc add mov ljmp repnz dec sbb iret jne test rolw inc int adc mov aaa lahf fdivrs andl lock gs add jnp int3 sbb test iret cmpsl jne enter daa mov (bad) popl mov jle pop int push cli dec mov in les stos pop xorl je and mov and push nop (bad) push jmp or cltd test xor push inc test or sub sub xor push inc dec andb pop arpl sbb mov icebp push (bad) (bad) xchg jnp add cwtl loop fwait fs (bad) add sub test add subl imul xchg pop lds cli (bad) test mov cld fcomps (bad) leave mov mov gs fsubrs xlat ja iret mov mov loop cwtl push (bad) testl mov mov test xchg hlt add adcb adc sub mov sub and test mov push aam test adcb movsb or imul mov jo outsl cmpb jb jbe sbb loopne in mov jecxz jl cmp mov in sbb cli xchg repnz mov and movsl push jnp jmp mov (bad) or nop cld loope xchg imul lock mov mov mov int cmp iret fcomi cmp pop jle addl jns leave sub mov orb jle insb xorb sti mov sarl (bad) adc enter cmp test in iret adc mov push mov mov insl test outsb js mov lret test add loop std mov sub xchg inc mov or fist icebp push int3 mov enter adc cmp es and je insl add enter push stos cmp lret std cli and idivb (bad) xor int3 adc mov test mov jge ret (bad) cwtl shr inc or push adc xorb sub cmc mov test cli cli inc fiaddl nop roll repz mov inc add jb loope (bad) mov mov dec lret sbb add sbb sub and add mov scas xchg or rcrl fisubrl xchg je cmp das ss xlat mov or xchg or fsubrl mov jbe loop mov adc sbbb or mov cwtl sub adc jae stc sbb outsb xor or aam fldcw andb outsl ljmp cmpsl mov ret add data16 jg flds cmc sub (bad) sbb jecxz mov (bad) mov dec and add loop pop loope cmp ret lods pop dec scas int3 test imul std cmp adc dec push loopne out popa sahf cmp lret xor sahf and add rorl xor sbb ret test lds adcb dec xchg bound fmul xchg shl mov test jns (bad) jbe sbb pop add and in lea mov fisub mov and sub adcb shrb rcr sbb sbb or out iret fsts fs shl test shlb inc (bad) rcr test adc mov push popa sub mov or cmp cmc jo jne xchg pusha push sbb dec push imul and jle add gs rcrl icebp jns dec cmp sub or iret adc dec loope cmp sbb jbe scas je iret lret push mov add imul fisubrl movsl push jbe mov scas movsb fidivrl adc test ss or mov clc insb ret pushf repnz xchg cmp dec idiv cmp stos jbe mov shlb psadbw repnz adc xchg mov out add (bad) dec in mov das cmpsl insb mov iret xor mov fsubl in push imul jbe repz loope and ja add cmc xchg mov mov jle cmpl mov (bad) fistpll push fcomip pop iret in mov daa cmp xchg adc les cmpsl cwtl out push jge (bad) loopne aas clc in outsb (bad) insb loopne sbb ja,pn stos addl xor ss jnp call test mov lea (bad) push mov mov bound adcl rorb loop or cmp add xchg fstp test rorl pop mov rorb ja js dec sub push jmp dec sbb xchg mov dec scas icebp or psubsw xor in cwtl sbb hlt (bad) mov imul push jns jne xchg and stc add dec test sub shrl aad rcr xorb push hlt pop and shrb rcrl popf jno inc sub pop iret mov push mov add jb test rolb es popa mov cmp lret pop movsb sub add jo decb or add mov push dec stos xor or ss or (bad) (bad) push push lds mov jo sbb test test and sub mov jns inc les call lds sub adc repnz mov inc adc ljmp (bad) (bad) dec scas cmp popa ret xor cmp push lods cmpsl inc adc andb imul push inc xlat mov xchg movsb movsl inc call adc cmpl xchg pushf mov repnz pop lahf pop icebp movsb adc addb jmp mov jge xchg popf cmpsb dec mov adcb cwtl mov inc in mov ret mov adcl lds inc lret dec inc pushl xchg pop (bad) mov jne inc in push jmp in nop xchg inc cwtl clc psrld jbe pop sub sub jno aad outsb push adc mov sub aad fdivrs negl or in incl cmc out sbb mov clc into or test (bad) insl xchg mov xchg lds pop or popf jp les and outsb mov call dec clc out test cmp lods xor lods gs pusha pop push mov fldenv cmp mov jb icebp cmp jmp clc mov xchg outsl nop mov push dec add imul mov dec (bad) imul jns xchg cli push mov nop sbb xchg cmpsl fcoms or and lret xchg jbe xchg adcb mov mov mov push push lods popf adc lret push test es push rclb daa pop sbb add sbb adcb andb xchg orb repz inc sub lret ret js subb push scas std andb jmp nop cmp icebp fildll (bad) in cltd bound adc dec or jl lea pop xor push sbb sbb mov (bad) (bad) stos sbb imul mov mov mov pop setl lret xlat sub xchg cmp lcall cmp pop xchg fbld scas push dec addb mov iret sbbb cmp inc xor addb bound pop loop flds xchg ret ljmp cld inc stos lock or jno xor lret push mov jecxz push or xor push fsubrs shrb mov and incl sbb xchg push dec mov movl cmp inc mov lahf mov cmp dec push jp dec popf sbb mov movsl subb out add xor xchg daa push loop sbb subb mov fucompp add cmpsl shll enter je xorb sbbb mov nop popa jmp lds push cmpsb test stos sub loop add lahf mov mov dec adc stc aas xchg xchg in sub cmpb push fsubl jns xor jo shlb subb jg orb fwait scas cmpb ja adc pop pop inc std lea lcall fcoml sbb jo xchg clc pop loopne test (bad) pop fsub ret push push aam (bad) mov lret cwtl leave xorb or mov frstor in or fisttpll imul push dec mov outsb test es mov inc dec mov push popf andb hlt seta sbb bound jnp bound xor pusha orb inc (bad) in xchg and cmc adc sti inc in ret test testl adc fstpl ds xchg pop addb xchg sbb lcall rclb lods (bad) pop or icebp mov inc daa aad flds sub mov jecxz cmp add (bad) dec mov sub or push test out xchg ja fsubs test (bad) (bad) add or pop add (bad) cmp xlat roll add and and loop and cmc push les cmp loope jmp xorl sub push jbe mov mov adc (bad) push (bad) push outsl test enter test inc push dec xchg sbbl xor add test jecxz mov add lods push sbb nop xor (bad) call sub mov je mov pop in jns sub jg xlat into push fldcw nop dec (bad) lcall xor jne test adc jbe adc mov sti jo jne mov sbb mov sub mov mov xchg push mov sub (bad) push test cmp push push fist test jne (bad) sub and add lock cmc pop (bad) test das jecxz fadds popa jbe cmp sub mov repnz cwtl sub aaa (bad) rolb (bad) push inc cwtl lock iret add pop insb lea pop and mov xchg and icebp nop aaa sar repz (bad) jns lds lret adc add lahf cmp (bad) dec pop insb or repnz inc sub jae lds (bad) lock xchg loopne mov add ret fwait les cli cmp mov xchg jne inc (bad) jo push loopne test xchg add jnp mov into sub (bad) xor xor (bad) (bad) adc mov adc (bad) xor sbb inc mov movb jns dec mov rcr sbb outsl or mov clc sti lock xchg and nop or jle jae popa jb sti inc inc and popa adc notb sub sub pop xor dec and roll pop popf jg cmpb adc pop clc insl nop sbb imul cwtl mov mov cmpb inc mov inc mov jne adcb in jecxz inc bswap add jmp xor push addr16 sti xchg inc pop fdivrl outsl jne out mov jb pop out iret cmp mov rep dec jg (bad) mov and push cltd adc push sbb loope or mov test pop int3 xor add mov aas or push scas push xchg andb mov (bad) mov jno (bad) scas xchg inc push dec cmp addr16 fcmovnbe call movsl sahf mov inc pop repz dec mov movb pop mov dec mov aaa ret adc sub insb stc sbb hlt xchg lds or jp cwtl push scas int sahf cmp push popa dec cwtl xchg push loop daa dec mov adcb cs sbbb push jmp xchg mov outsb gs inc inc subb daa nop mov in pop fwait movsl dec fisub mov sub pop inc stos pusha xorb mov xor aad push scas mov cmp dec fdivrl sbb stos sarl fist and test int into out adc addr16 outsb je jo (bad) pushf dec mov xchg movsl sbbb loop xor orb aaa orb inc fstpl adc lods nop fild (bad) shll icebp xchg test pop repz cmpl mov and xlat xor mov stc adc leave test addb pop (bad) cwtl pop aam loop dec cmp sbb (bad) push cmpsl xorl clc mov push sbbl sti test adc mov mov adc lock jnp cmp pop cmpsl fwait andb dec mov sbb sub repnz sbb aaa push stos mov gs jne jg dec mov and cmp mov in or (bad) jg add outsl fsubr xchg lea pop inc in enter iret jnp mov fmul lods cltd pusha jg sti xchg jle imul lds jo push (bad) out rolb loope gs iret jg adc or xchg xchg int lock fdivl jge push mov repz int3 sub daa jno push ret test adc add sub xchg (bad) popf pop or mov and loop movsb inc ret cmpb addr16 popf incl pusha cmpsl nop xor ljmp xchg push mulb dec lods mov bound inc sbb mov dec mov sahf pushf into data16 mov jmp sbbl jmp fisubrl lds repnz adc xorb sbb les xchg add add dec mov xchg xchg popl pushf test add adc lds xchg pushf inc subb cmpb and and xorb pop mov jno xchg pop mov imul jb iret lea les xchg cwtl dec test dec clc aaa inc adcb jns (bad) lds inc pop test xchg shlb push fldl xor pushf xchg test loope dec out mov xchg adc ret dec add jl das xor inc insb cmpsb pop add add ret incb pop push and nop ljmp imul cmc sub or orl addb push fs mov or sub mov xorb jp out (bad) imul sbb pop jecxz mov mov icebp sub mov push jb dec out addr16 adc adc fsubs ja xchg aad adc addb mov dec out ret push cld xchg push cmp xchg pop xchg cmp orb cmc cmp sub pushf add jb inc sahf push xchg adc jmp cmp mov (bad) gs cltd mov push or hlt or lahf sub loope jle xorb cwtl pop add push shll pop lods lock je xchg cmp lods sub add lret adc movsl or ds push inc movb xchg fs mov mov jle sbb adc jb fsubl jno or pop mov sub inc sub fnstenv jnp inc push imul jns icebp and test add mov sub lcall test adc sbbb out stos or ja inc jmp or daa fcmovbe xchg or mov jns (bad) sbb mov add and inc and cmpb push mov ret jnp mov call pushf push in xchg nop or inc adc repz iret call sub mov arpl cmc es mov sahf cld mov test xorl outsb sub jnp cmc imul jne pop shlb into fs pop stos mov mov hlt gs or gs sbb insl nop mov les inc pop mov cmpsl mov mov or jne subl add push std dec (bad) dec sub xor dec clc mov in or fsts pop mov add mov clc mov push leave sub bound mov call mov cli ret jno cmpl je or pusha dec stc sub clc dec aam mov daa or pop out cld (bad) pusha jmp sub dec ja test adc mov push cli addr16 jno subl and or loope inc icebp push push testb add mov test pop xor add dec xchg cmp xor mov mov (bad) testb or scas incb or aaa mov cwtl ret xchg push je addl xchg into inc inc inc jle lret push mov insb push ret and (bad) sub adc test enter andl sbb loope xchg test pop iret (bad) mov stos jmp repnz xlat adc rorl mov mov lret sub (bad) out jnp cmp movsl cmp iret int3 add jle lcall and daa nop hlt ret movsl icebp cmp das jecxz test out ja fdivrl inc adc push les inc outsb xchg pop add inc repnz stos cmp mov push pop mov fdivl iret or andl pop add add loop mov lahf inc hlt fld cmc adc mov cmpsb mov xor sub int3 bound imul pop movsb lret into mov (bad) int3 (bad) xor lock cltd aam outsl (bad) js pop jge dec and mov outsb fabs popf dec test sarb shll je (bad) sti mov iret repz adc or push xchg loop mov outsl cld pop data16 lods insb orl sub imul lock ss adc stos aad add sti adc scas and adc pop test cs outsb pop push movsb rorl lock std outsb mov outsb mov test stos mov or adc inc fistp fimul xchg ret add fsubrs repz mov jo jp aam inc js pop and jno lsl (bad) cmp rclb xchg mov ret cwtl cmp icebp xchg add jl pop and ja lods inc mov inc xchg cmpsb inc ret icebp sar and jnp imul iret xchg fild aad mov cmp es shll loope (bad) pushf xor jb inc dec (bad) lock imul sarb insl inc ret mov or mov mov data16 adc (bad) dec movsl or mov fdivl or scas cld popf movsb xchg xlat inc push jmp (bad) mov ret inc push mov pop movsb adc gs dec outsl pop daa xadd xor loope dec adc sbbl aaa aas push or aad adc enter cmpsl add and jg inc pop lcall sbb jmp ret mov dec test mov mov enter cmp or pop mov push repnz cmp xchg insb xor xchg out shr xchg jl cmpsl pusha push pop xor lea stc mov and pushf jnp pusha js test mov aad gs pusha add movsl sub sub push add fnop push loope mov fdivrs gs jno dec ds push ljmp (bad) xchg dec jo mulb pop jae pop mov push mov push xor sbb inc mov cmc movsl subl cmp push adc (bad) nop sub lds adc sub iret ret push mov loope add add enter test iret icebp inc cwtl adc dec cmp mov pop fiaddl sub fistp cmp fmul andl ja adc xchg aaa iret cmp jl inc inc inc stos stc xchg mov push mov scas add xlat jmp ljmp clc nop cmp mov mov xor and fcoml fildl int3 cli sbb sbb in add loope in movsl fistpll jle loope ret mov popf lock cli push nop adc pop xchg es xor mov cmpl movsb aad in sbb mov idiv insl mov pop (bad) in fldenv inc push dec mov rclb test sbb js in inc stos jae cwtl mov adc xor movsl sbb push imul arpl jno cwtl enter lcall push sets and (bad) fabs pop nop iret or jo mov andl clc hlt loopne sub sahf addl and ret inc dec adc orb mov cmp test pusha aam xchg push vpcmpgtw inc ret or popf push hlt xchg cmp and ret pop xchg or sub xor lds iret roll dec (bad) mov adc dec fdivl mov mov pop and xchg nop lock fnop inc les cmpl imul into push mov push and push clc pop sahf mov mov mov mov sbb and iret popf sub stc or mov jae mov lods test push stos decl push mov test arpl add sub sbb jmp add shll mov pop dec dec ja cs xchg or jae dec clc jno adc fs cmpsb jmp pop dec enter out hlt fistpll jno fdivs inc fadds adc (bad) cmpsb in fcomps mov jns inc hlt mov mov clc adc (bad) mov mov mov xchg cmp pop push sub push inc push (bad) push rcll push or fmul jg sahf int xchg sbb sti (bad) cld inc mov popa cwtl or aaa jl cmp test js or inc fwait add (bad) cmp nop es mov int dec xchg jne mov call enter jo std mov ficompl jecxz mov push mov inc or pop repz xchg (bad) xor aad daa xlat mov mov xor push popf xlat lock or add aaa xlat subb pop out subb push orb cmp fsubrs xor push adc xchg outsl mov das push inc sbbb std (bad) scas xchg stos nop push ljmp pop mov pop jecxz pop mov mov jno sbb cld std mov loopne lcall out xlat add sub loope or cmp aaa std mov push (bad) xchg mov clc sub xchg jmp sbb push fs jg add fisub sahf pop dec movb sbb subb sbb xor lods xchg out push xchg es mov shll out sub inc (bad) xchg jge adc push sub adc icebp test clc adcb jb mov add sahf dec (bad) xor mov xor inc or sbbb or xchg (bad) pop add insb stos sub les xchg mov nop push test cmp test pop sbb jl mov cmp idivb ficoml test dec roll sub cmp pop das aad in nop in hlt xchg loopne jg fstpl or js dec aam fdivrl ja neg sbb xchg negb addb push frstor mov cmpsl sbb and in (bad) fbld bound (bad) aaa mov ficoml jmp je sbb fnstsw divb pop push enter xchg outsl sub or addr16 pop cmp mov dec adc dec enter faddl xorb inc roll and test pop cmpsl dec pop inc adc adc xor je mov xor and hlt and sahf pop mov or and or mov jb inc shr push cmp cli nop inc mov dec push mov dec inc cwtl mov mov ds mov scas and xor xor mov arpl stc (bad) dec jo test cli (bad) andb mov out push test pushf or sbb sbb jnp xchg sbb fwait jge adc pop mov loopne and push stos cmpsl adc fwait xor or xchg adc and dec or jns mov xchg dec xorb orb mov daa or push lret test pop loop cmp pusha mov jl fdivrl nop inc push jecxz dec pop cwtl fadd add cli roll jnp inc insb sub pop or iret leave add (bad) jb add jl paddw inc mov add pop jb cmp sbb jnp sbbb add hlt pop out jle xchg test loopne int jl mov sbb mov adc jnp mov pop (bad) ds (bad) leave incl add js subb enter dec stc mov dec cmp and mov jae push pusha stos pop pushf insb xorb dec prefetchw adc inc sbbb leave xor dec jb mov jmp mov insb subb sub mov lret stos and sahf lret cmp sbbb call addb push stos lods dec roll loope es mov mov xchg adcb (bad) sbb inc lods jnp mov mov aam fistl imul add popl stc icebp orb outsb mov mov mov mov pop daa dec mov sarl enter addb arpl es xorl mov xchg enter pop push (bad) insl mov mov push adc ret out push out call loop insl xor ds xorb (bad) xchg imul xlat inc ret mov cmpsb aas pop mov (bad) mull inc lock mov add xor jo inc pop sub lret add test call in xor inc gs xor jns lods loop or cwtl mov iret inc mov dec jge mov iret test mov test dec in mov dec add iret in adc out mov (bad) dec push clc inc clc xchg test cmp add adcl and mov dec xor inc mov push loopne (bad) imulb add insl jo int3 adc cmp mov inc ret pusha push mov mov rol xchg push stos nop and jp mov mov test shrb ret xchg mov outsb push scas xor lret int push test push lea pop xchg scas xchg jg cmp sti dec pop or jge pop pop mov aaa ljmp test mov (bad) imul gs mov lret pop cwtl fmulp sub incl js fs stc sbb inc jne es or lahf pop cltd fs leave mov insl ret int mov dec sub jge sbb sbb add lods lret das xor das xchg jae pop and mov mov xchg pop push clc push cmpsb xor sbb aas (bad) and out jg mov add jo adc inc clc mov imul out in fs jle and inc testl fs imul xor mov or add sahf subb push popa clc jne int xchg push pop in push mov ja (bad) (bad) ja mov rcrb cs leave out pop jge subb testb and lds xchg cmp sub xchg js jp xlat rorl sbbb jo inc scas stos dec xchg sti mov insb jle mov xchg inc test stos test pop shll (bad) mov repnz (bad) push (bad) call xchg loope jo cmp cwtl ja ret sbbl idiv mov sub es out addr16 or andb (bad) sub adcb pop and pushf out orl inc mov addb pop push push fdivrs out xor dec cmc popa test jnp inc or jae popa movsb fsubl mov xchg mov into lcall mov stos sub jle xor (bad) add and mov push xchg adcb out push dec test adc add fsin cwtl pusha xchg add mov add jb lods inc je subb pop loopne push dec scas xorb xchg cmp pop addr16 inc faddl popf add stos andb pop movsb mov cmp insl (bad) bound js pop mov mov sub (bad) jnp ja and ret addr16 divl mov xchg aas cmc lea push (bad) in jne xor test add and sub push mov or pushf push std jp and out popw lds rorb add lea jle clc sub fild test mov mov lret xor xchg sub add dec push mov inc pop xchg jb aas xchg sub popa pop lcall int3 push sub insl mov push and xchg push mov (bad) cmp mov xchg (bad) adc aaa xorb call dec push ret jo mov sub enter cmp in stos daa cmpsl adcb scas fildll xchg jb rorl jg jb andb xchg sbb cwtl mov adc push in out lock dec inc mov ds or sbbb xchg sub cld mov adc xorb (bad) lret xchg sbb cmpsb (bad) dec lods orb mov mov (bad) xor aaa mov pop adc roll (bad) xchg cmp fadds mov jl addb pop mov repz pop fwait pop mov fs test add and fnsave mov ret addr16 add sahf pop mov (bad) xchg mov sbb adc int3 mov mov adc repz add jl and pop bound loop (bad) or adc (bad) clc fcom xor mov jl and push iret test xchg ja in test jge test arpl (bad) mov insb adc and push loope test movl in or scas bound es std push (bad) or ret pop sbb sub cmpsb loopne jbe cmp pop jle sbb dec jbe popf jl nop nop out xor mov mov orl pop out jecxz cmp pop pop add cmp lock sbb cmpb out or dec aad scas sarl mov ret sub rcrl inc jecxz xchg mov mov popa pop into inc int3 mov iret pop adc push lret sbb test sbbb aas mov cmp cmpsl sahf mov addb cmp xchg mov xor xchg push inc sub mov cmp dec shrl add jbe mov bnd sub mov pop mov ljmp out (bad) and fs adc into xor lock mov add pop mov or mov xorb jb add mov out jp cld lods insb lock jle push dec and pop push xlat test es add lret pop stc addr16 stos cltd (bad) iret (bad) aam addb push xchg add xchg bound dec dec stc push sub stos loope push (bad) or sarb sub ret xorb pop out pop xchg lea inc xor out ljmp xor adc xchg push and fldl arpl jnp pop adc icebp (bad) cli addb cld sub mov test movsb push (bad) cmp sahf fldt mov cmpsl cli iret add jno ret outsl (bad) dec outsb adc imul iret pop jno pop lcall sbb add cmpsl jbe les dec mov iret sbb aas dec cs push movsb sbb sbbl aas ret lock mov inc cmpsl dec aam fsubrl mov mov mov in addr16 fisubl pop adc loope add (bad) jns imul aad (bad) cld xor iret daa (bad) mov fadds mov flds mov adc pop mov adc imul cltd cmp shrl add mov inc call xor xchg movsl sbb clc adc pop int3 mov lods (bad) enter cmpsb push cmp push sbb xlat inc push ja adc (bad) mov jne add daa loopne int3 sbb iret icebp sbb adc push jb aaa or cmp and int sti jmp mov pop mov xchg les adc enter mov cli dec xchg jo test nop sub sub cmc rorl jae lret cmp test movsb or inc bound and cwtl shr push mov ds or shlb repnz (bad) lret lods pop mov arpl mov decb int3 mov andb iret cli add pop xor sub (bad) and gs imull popf xchg data16 mov (bad) fsub outsl fsubrs dec push es cmp sub call xchg loope jge mov xchg sbb sub fs stos mov mov cld lock jno mov mov mov test repnz xchg (bad) mov sub push fwait inc iret popf mov (bad) mov rcl mov jnp data16 aad xchg inc clc dec int3 dec jns add inc pop hlt decb iret adcl adc daa lret xor fistpll ficoml in aaa mov std test outsl jp sbb or xchg pusha js adcb cwtl jne jp dec sbb int3 cmc nop insl push nop push aas and mov xorl add lea test (bad) cmp lret mov jmp (bad) insl xchg fwait mov (bad) mov fldcw xlat fsubr pusha cmp mov subb xchg fsub les jns mov lds or adc mov xchg movsl mov test test test pop push push subb mov add lcall cmp int3 push or mov out lret imul adc repz popf das dec pop mov cmc push scas sbb daa sbbb js sbbb mov ljmp and mov inc roll xabort add cmp ds push mov icebp push push xchg std ljmp push cmp pop mov push cmp imul inc pop mov push xor jg adc (bad) sub mov push inc mov ds orb push fiaddl lds das imul cmp mov cmc loopne mov in push or jbe mov xorb mov (bad) test out fsubr and arpl imul dec jp adc and and leave jo mov repnz xor xchg loope out add subb add mov leave or sbbb out adc adc mov xchg adc mov xlat test stos mov test dec (bad) fdivrs lods pop imul outsb std sbbb test dec adcb or mov imul (bad) pop incb add adcb add scas jmp lock xchg add sbbb xor pop rol test lods outsb push adc add sbb iret mov stc xchg sarl popl and sbb sti xor test inc push hlt add pop nop subb and jp sub ret dec stos mov xor popl andb sub mov movsl or jo cli inc lods add inc les add mov push mov cmp subl inc imul jnp push xor aam adc je test out or cmp iret popa cmpl pop sub cmp orl jmp dec push and jge cmp dec mov ficom inc sub cmc sbb pop pop mov lea inc jb aad rol jg cmpb js test inc push mov jne mov push loop add test (bad) pop (bad) mov fdivrs sbb andl ss popa pushf and mov jmp repz xchg nop mov push sbb nop outsl push je and push jmp cmp sub inc andb dec out mov inc xchg test adcl cmpsb test inc orb imul sub sub xor lds addb cs loope mov xchg mov jg dec adc cmp sbb orl add jbe mov inc mov mov mov sbb add push xor or cmpsb incl jnp push data16 xchg lds loop or out or mov notl (bad) data16 cmpb jmp adc inc mov jae adc push mov xchg jbe mov cmpb jl orb pslld pop sbbb cmp cwtl rorl add mov jns mov rcrl jecxz push sbb enter fistpll push insl dec cmp test jae loopne orb xchg ss push jecxz lock xchg cmp push test mov push addb adc insl outsb cmpsl ret mov nop loope ds mov or dec mov flds outsb inc pop push fmuls icebp sti daa nop xor sub (bad) (bad) or mov out imul adcl pop or je pop movsl or ret dec mov cmp mov pop mov inc mov pop mov lds push subb add jge aaa sbb in inc popa rolb leave adc movsl xchg xchg cmp subb lcall mov jo icebp in lret jnp mov pushf or les cmp loope mov sbbb rol subb out push call inc movb mov mov fisubr push orb les fstp sbb movsl cmpb cmp pop stos sbb mov sbbb fwait arpl mov (bad) cmp loop xchg inc ds ficoml xchg loopne imul cs sti test sbb js imul cli mov jmp int3 mov inc pop push inc dec stc add iret mov add push sub fadd enter cmp add inc fwait je add mov push dec adc or jnp idivl rolb jo sub jne mov aas imull icebp es test mov jb and xchg or or sbb scas aad push pop and push in test or in sub outsb divb hlt in jg mov faddl mov (bad) cs and cmpsl rcll pop and cld (bad) mov insl dec out sarl pop (bad) repnz push sarb jnp mov jbe push mov push push push test in add test pusha adc push outsl test clc add (bad) je push (bad) xchg jg sbbl xchg in ljmp stc es or cmp insb and or xchg fisubl fsubl cmc subl loopne adc cli out dec gs mov inc xchg cli (bad) test mov xor out or (bad) out mov rolb ljmp lock push fxch push testb je and cmp movsl jle loopne aam jne int3 jae (bad) and in sahf inc jp loopne into imul or test lea mov pop enter enter icebp jg (bad) inc shrb pop xchg xor mov and xchg popf sub xchg pushf pop adc mov and (bad) je inc cli jle mov mov push je push ret xchg orb clc in mov pusha (bad) test adc cld lds add push ret mov test arpl insl jl enter roll mov sbb test lret (bad) icebp shrb rorl sub pop mov lods push xchg inc xchg mov (bad) lcall push mov test repz mov xor mov std push add (bad) mov addl enter push jo ficoml (bad) subb or imul daa int3 mov lods xchg sbb cld cwtl or pusha mov xor add fadds test or pop mov push call and sti fcoms test in adc push xchg adc nop sub stc std mov sub jl addb and jns jns scas ror add sub sub sub in rsqrtps mov xchg or xchg xor iret test and inc or push in mov push push test push xorb push shlb jnp inc cli into cmpb mov ds aad stos push rolb leave mov add mov dec gs and loope push add popfw fisubr sub jge jg mov inc js test insl sbb mov mov fs mov mov mov arpl mov fistp xchg ret int cmp xor lahf addb jns inc imul test mov ficompl mov or cmp icebp pop or fsubs and sbb pop or mov pop cmpsl sbb int3 (bad) dec loope mov add sub adc pop pusha test dec (bad) lock rclb cld cmp or adc enter and leave mov inc lods fimull pop mov (bad) roll xchg and or jno into (bad) bound pop call cli pop adc insl pop sbbb inc mov jne es cmpsl js pop add jnp and (bad) enter jo mov sub fcomi xchg in jae scas adc xor mov pop mov push mov mov sbb data16 test adcb (bad) into sbb loopne mov sub jbe dec ret jmp jae inc scas adcl loop cmp and and and sub push testb out clc icebp dec mov xchg jmp mov inc nop out aas mov js repz aaa dec add pop jbe pushf nop push in fcmovu fldl mov int3 cmp ret lea jge aam cmpsb mov movsb xor lret mov cmp lods js movsl movsl mov xchg add rcl jae xor jbe ret add push stos dec scas xor clc dec test jae dec dec xor nop js bound xchg ss test xor and aam fsubrs or sarb (bad) jg insb int3 sub lret mov (bad) es out sbb lods mov jmp in sbb movsl cmpsl into jg cmpsb xchg jo pop mov fdivp adc adc shlb push xor add add adc inc std subb ds or sbb addr16 leave orb dec mov jno mov ljmp orb cmpsb js xchg cld add mov xor and lret addr16 jo fadds pop jmp enter flds inc ljmp clc add inc adc std add mov add ds dec sub ljmp sahf mov dec je and xchg fcomps mov jl enter (bad) mov cmpsl add dec sti pop push roll repnz xor jnp and mov shrb xor or sbbb lahf adc xchg push lock (bad) scas cli ljmp jge mov inc mov dec mov nop aaa pop call xchg rcr sbb inc fadds or in adc fcomps (bad) (bad) (bad) (bad) mov and aad int3 std sbbb ss pop jne cmp je fdivrl cmpsb ljmp push mov (bad) iret loope add inc xchg in outsl xorb cli (bad) cmp pushf pop mov or stc xchg and fbstp jmp subb js mov (bad) int inc into andb ficom add inc jb nop (bad) and cmpb sbb test out jns xor dec and jge cmpsb jo in test ds or rcl fisttp cmc xor mov nop mov pop cli mov in cmpsb jo outsl cmp xchg adcb xchg add jmp sub or out adcb push subl (bad) je add test jns les into xor rorl push cmpl repnz xor add movsl movsl sbb gs loope (bad) stc sub jmp (bad) enter dec push movsl mov jno in jmp call sub push sbb in test cmc scas jae cli mov inc sub subl sarl jnp sbb xor andb call xchg push enter movsl jne lds sti aaa adc mov pusha nop into int adc sub and test mov mov mov jae rolb outsl or sbb scas dec jmp mov xor out sbbb pusha aam outsb jnp data16 or jg xchg sbb sbb add lods add mov lock test fsubp lods dec lock lret in or adc xchg push cli add icebp cmpsb popf adc test or jae cmpb sbb mov lds fnop leave das mov test jmp dec adc xchg xor sahf insl mov mov cmp jge xchg testb pop jns js insl jnp mov daa sarl aad inc xchg andb sbb xor jmp pushf cmp std cmpb push ret (bad) jle xchg lahf mov cmpsl push mov push adcb rcrb or insb inc (bad) pop mov jne (bad) ds add adcb mov (bad) aas xlat subl or in xchg xor add jo or sub addb jmp pop pop dec dec inc subb xor (bad) mov dec out adc mov subb nop clc xlat pushf in push inc and jmp je sbb push jecxz lahf adc cmp daa frstor sub test sarl dec sbbb aad mov roll idivl xchg (bad) xor dec mov xlat in jl pop dec mov xor push std cmpb enter lahf inc movsb sarb ror adc cld inc jl and jl add imul stc ja cs (bad) push movsl frstor sbb cmpb inc xchg xor leave enter inc call pop loope lock andl sub mov sbb andl scas mov scas in lds (bad) (bad) and mov gs (bad) mov in pop xchg incb push jnp xchg push fdivl popl jmp cmp add addl sbb mov fiaddl jne adcb loop mov fnstsw and or iret call xchg loop mov nop push enter movsb out or adc mov dec leave pminub jbe xor loop pop fs pusha and fcompl sbbb sbb push cmpsb cmp xchg andl fs lret mov std (bad) jns push pop addl sub fcomps push out mov dec lock jecxz (bad) (bad) outsl sbbb bound inc mov add pushl cmp xor gs rolb ja add mov dec mov scas clc stc lret sub or outsl fldcw push (bad) pop cmpsb add test xchg stos das mov movsb enter jecxz mov pop loopne clc ss into and ss outsl push jnp out inc stos outsl add push aad xor aad mov add jp ficoml scas jb xchg dec nop ret inc xor mov out (bad) mov adc jbe add adc mov cmpsl mov add fs stc outsb mov jge xor mov stc add jg inc sbbl loopne call mov sub test push scas cmp mov sbb xchg jecxz cmp jle data16 test in lret insl add ja cmpsl sub mov stc scas (bad) lock cmpsl aam xchg jmp les (bad) ljmp in ret inc xchg mov mov push lods push pop adc xchg lret jmp pop dec loope adc fsubr jb faddl mov outsb pop mov rcrb faddl flds lods inc jge dec ret mov out stc mov std jmp lods mov test inc inc mov jne jg mov cmp add push mov rorb in or or mov sarl mov shl aaa stc popa xchg dec dec add lods adcb mov mov xchg rcrl jmp stos sbbb push cmc mov test pop enter sub stc mov xor dec add stos jmp adcb inc inc inc mov jb (bad) inc or cmp push mov outsb lahf or ss jle lock fcoms cmp aas cmp shrl push inc leave inc cmp (bad) icebp in sbb xor inc jmp xchg push mov mov xchg push call fildll sub xor and decb and iret push mov out cmpb movsl rolb addb mov (bad) or ss adc sub cmp cmp mov xor fisubl or cmp dec mov cmc out je sti cmp cmp mov call andb movsb mov cmpl arpl aas nop adc push jno fsubr jg mov xor adcb mov sbbb push (bad) adc lahf add jg sbb pop ret outsl mov jbe fmulp ss lock mov push and fistpl jmp andb push lods sub mov sarl int3 aaa mov jle jnp (bad) or in or jnp lret clc out mov cwtl shll mov mov andb push sti cmp addr16 das dec mov mov jno pop jecxz xchg add in sbb les fstl nop sub dec call test aad mov fist mov mov leave jnp add iret mov xchg pushf daa (bad) xlat ss sarl cwtl xor mov add nop movsl int (bad) repnz xlat enter adc pushf add movsl lock in nop outsb scas call xor shlb popa mull test into (bad) pop imull inc and repz mov out mov ljmp push (bad) orl cmp adc data16 mov pop in mov sbb or push push leave clc or cs and mov loope dec insl xchg mov dec mov mov and sub xor pop enter mov pop orb cli inc subb out inc jae fsubs mov mov jnp mov in inc mov imul sahf mov (bad) lock cmpb cmp call xor xchg outsb js andb cmp lcall xor dec test adc jmp loope xor cmove jmp sbb arpl bts jno aas xor inc mov jns xchg add push inc cmpb fidivl (bad) mov inc jo sub flds mov imul (bad) into (bad) out lds cmp outsl adcb cli stos sbb (bad) or xor add popa outsb jmp mov jg inc jp in fcmovu jns xchg push xchg std cmp andl inc cmp notl mov in ficompl imul mov mov (bad) das nop (bad) outsb cmp icebp cs lcall stc decl sbb (bad) adcb inc out and popf data16 adc mov dec mov inc sarl fcom xor jns mov mov xchg movl scas fisubrl test jl mov das roll subb fs loopne adcb nop popa fldenv mov addb aam lret test loop test mov cmp mov lret cmpl adc (bad) xor lret loope mov jb adc stos dec lods in sbb nop push xchg mov int3 xor cmp pop pusha cmpb outsl mov repz (bad) lret sbb dec mov sahf cmp mov aad dec lods pop mov ret fdiv pop add cs aad loopne adc popa jo fiadd sub frstor lock mov mov or cli stc repnz xor sub xchg js fild and sub mov cwtl add add add pop dec jnp mov imul out jmp push incl push push test inc sub push repnz mov xchg aas adc inc popa add fdivrl push add dec ljmp lcall scas leave xchg and loope iret xchg cli jecxz xor jne scas cmp push lahf jo jp add or mov fmuls xor xchg cld mov jnp daa mov xor hlt and sub inc or loop xchg test addl sub or in lret xchg mov mov push push add lea test repnz jb in lds (bad) adc lahf sub loop adc sbb cmp adc cwtl mov lods testb xchg enter (bad) test adc aad mov je dec inc or mov or dec xchg das sbb jmp sub (bad) xor mov les shll out mov push dec stos lcall jo pop mov iret xlat outsl in sti sbbl mov cmpsl addr16 inc fmul test test pop mov add iret cmp pop lret jo inc fs loop xor xor stos pop cmpl (bad) jge insl adc lahf dec test inc dec sub gs outsb mov sub or sub sub arpl xchg (bad) rolb insb or and adc repz test adc test sub into add and mov sbb subb adc dec lods jp (bad) xor push xorl add push jmp adc pop cwtl and cmc lret xor or lds aas les push subb nop push jp pushf lods mov dec test and lds inc int3 aaa add push and daa popf ss outsl push and mov or out push pop push fcompl or enter outsb test mov cmp (bad) repnz nop xorl pop cmp (bad) cld dec subb mov testl sub push pop shlb movl mov inc dec jo or imul sti xchg sahf pop movsl int mov push testl sarl mov pusha jns aas (bad) xor imul nop test add jo ret xchg icebp dec push jb imul inc sbb add mov push ja out mov mov cs mov in (bad) cmpsb movsb inc pop or daa testb and iret inc ljmp test (bad) jno jmp add sub fcmovnbe pop mov adc inc cmpsb mov imul adcb ljmp mov xchg sub icebp add xor adc push cwtl xor (bad) sub and cmpl mov fcmovnb cmpsl das jno pop loope lcall xor (bad) out pop movntq rorb cld scas push faddl mov dec xor aas mov outsb sbb repnz cwtl push pop test cltd inc xchg push xor push sbb adc push jl mov sub or push (bad) or jle incl push pop adc (bad) dec inc jmp jl repnz test das sub enter test mov aaa ret outsb jns in inc xorb out enter sub lds xor call nop mov incl xchg imul andb ds inc ljmp sbbb outsb xchg cmp adcb add sbbb inc xchg nop popa push nop mov insb jbe aaa inc xchg or test (bad) stc sub jne add sarl and cwtl imul sbb rep xchg jp lods add fnop das cltd or addr16 pop les les js mov mov std mov (bad) cmp mov push push push inc sbb cmp (bad) ret mov les xor stos sbb sbb sub xor inc cmpsb jmp jg in std or les ss iret push int3 sub mov iret sarl lods repnz or outsl pop in xor and cwtl push adc stos mov inc xor (bad) clc test in pop xor mov inc aad outsl xor cwtl nop mov xchg in xchg jns adc xlat push add mov (bad) jg xchg push repnz xor mov test arpl pop adcb in loop sarl jns fsubrs ss mov xchg add fwait scas pop add lds push cmp sbb sbb movsl js enter mov lods cmp pop andb adc add jle push or pop mov inc push orl xlat nop cli pop fisubrl subl sub stc xchg ljmp ret mov add pop pop jl mov stos sub enter add jbe dec loop sti je ja orb les sbb inc sahf popa add pop jnp or cmp or adc addb cmc push xor dec loopne pop shll push cmpsb das repnz les xchg fcoms test push test fist clc mov movsl (bad) xchg arpl push or cmp int mov ds orb pop mov xor stos dec aad mov pop mov jbe lds cmp jnp jne inc mov into sbb mov enter jae das test (bad) jo xchg xor push testl inc dec fild inc in daa push fdivrs cwtl dec stc idiv and xchg push aas fcompl fldl pop outsb cmpb sub jge std inc icebp (bad) push dec loop xchg sub pop into jae (bad) sbb sahf cs scas xor (bad) mov push mov mov cld dec mov sub jo lods sub xchg push xchg (bad) faddp cmp xchg nop adc jnp movb and push dec sbb or jno or mov cmc pmuludq dec orb push adc (bad) jecxz loop loop in leave inc adc push ret test nop (bad) mov adcb cmp mov sub xchg xchg ja mov sbbl pop cltd je imul test mov imul mov and xchg dec mov push cmpb adc mov orl pop test pop cltd (bad) push cmp in incb xor (bad) mov adc xor fiaddl and xchg cmp movsb pop lock out imul pusha cmpl cmp dec scas push imul fldl jg xchg popa jno dec mov inc sub andb fcomps add out lds inc imul xchg xchg jb inc movsb sub call adc nop (bad) mov decb imull pop test pop inc mov jecxz mov add ficomp insb adc ss pop inc xchg xchg clc ret mov cmc jb stc out mov int (bad) mov jle dec inc pop imul mov iret shll push cs pushw cmp push jle xchg xchg in (bad) adcb cli mov jecxz dec fmull movsb test mov ss test xor lahf or cmp fcomps repz add movsl stos outsb aaa js es cli (bad) iret sbb std leave xor xchg inc es (bad) adc xor pxor mov lods dec ja mov mov add jecxz mov (bad) adc xorl push fild in sbb jne cmp xchg insb lods push cwtl testl add push stos dec push jmp xchg xchg out add test sbb add subb push daa push push fsubrs sbb pop subb xor push xchg (bad) xor inc js or xchg movsb jl mov pop xchg or jmp out mov sub arpl sbb jbe jno pop and sbb add inc int3 push add mov jns lret stc add cs test mov mov pop ljmp push in sub ret es imul mov ljmp push repnz cmp movsl jl sbbb lea mov lods pusha test sbb mov fbld les xchg push pop jo popf pop (bad) xor push mov iret sub int3 xor enter shrl shl adcb notb mov or je pop int adc (bad) mov pop mov sbb xchg fnop cmp jae lea add inc test pop cmpsb pop pop mov jge add mov ret aam rcr cmpsl push call and mov subb mov xchg mov clc aam aaa jbe shl dec jp popa pushf gs test add or incb xor cwtl pop jne mov xchg push inc mov jae rep js or ljmp movsb mov or or xchg stc mov flds cmp adc lds rolb mov mov out mov push add (bad) in adc and fild sub cmp imul (bad) cmc std mov ja lret lea sbbb pop sbb push cmp fildl les cmp mov adc js aaa xchg fnsave out imull cwtl jb lcall fs test pop mov decb xchg and insl test je sub cmpl loopne nop bound xchg gs in adc sbb sbb subl or xrelease cs dec andb fistp inc out outsb mov mov lar fdivrl fmuls sbb xor inc scas adc push push repnz or dec inc pop nop fwait xor or gs adc loopne insb daa lock subl mov inc sub iret push jb adc mov inc pushf push ret jnp add pop dec dec cmpsb std popf or orl jmp sub fmul sub cli call mov pop adc jg std orb sub je and sar push sub adc aad add (bad) outsl daa ds push (bad) in and cli incl dec jne imul add iret in mov outsb jae fwait in movsb nop test add push sar je xor jmp rolb mov mov adc jmp iret and test pop xor fcmovu lds into stos outsl mov inc iret sbb pop pop in adc cmpsb mov xchg loope popa lcall sub loopne call fmuls sahf ret sbb push shlb mov int mov ret jbe cmp scas lcall jo call rol xchg add (bad) pop clc jae,pt inc fmuls pop iret push (bad) cmpl fcomps test cmpb in (bad) dec sub fidivl mov xchg or jne dec jge mov out daa addr16 inc enter addb lcall push lock sti test cmp mov clc test mov xor pop cwtl arpl xchg ret add loope mov loope scas dec test cwtl jmp lret cmpsl push fldl (bad) mov fistp ficomp jl inc jns jg mov lds xchg nop pushl data16 icebp jl sub loope inc ret (bad) and add adc addr16 xlat mov cltd jno xlat fdivrs cmpsl pop test pushf fldl leave cmp cmpb imul sarb fwait enter das mov xor push pop add adc pushf insl mov (bad) jle lds mov mov sub mov loop sbb jle jmp push test sahf into jecxz mov fdivrs inc or sbbl pop test gs inc das mov mov mov cmp scas sub jae xchg mov int3 adc jne gs shl sub mov test ret adc mov enter fs idiv movsl jge and mov xchg mov jae enter sarl into rolb jnp sbb les push mov aad xchg jnp sbb scas lcall add jne pop mul cmpsl enter push pusha test mov mov and andb jns cwtl adc sbb add lods mov pushf pop or lret push les orb jns inc out imul xor nop outsl jle nop movsl xor mov std addb inc dec and pusha imul pop fldt push jno in test mov clc xchg lods cmp xchg dec bnd push cli popf test jge jle adc push (bad) int3 adc dec pop (bad) cmpb mov adc ljmp fwait mov sbb mov jmp (bad) mov (bad) lods jl fmul add or inc pop int3 add and jbe push mov push mov jae push test scas cmp addb ljmp leave or adc cmp pop repnz sbb jbe pop mov cmp fldz xorb test inc sub test xchg xchg nop scas mov xor imul and test cwtl xchg mov jne ds shrl adc sarl insl mov in shr ljmp jbe cmp push cmpsb mov xchg pop out jns xchg dec test jmp sub fldenv xor xchg mov and test sub xchg outsl or insb (bad) or lock scas lahf xchg pop pop inc cmp xchg jo clc into sarl or cmpb xchg push mov outsb fistl push cld push adc pushl lods out popf orb pusha loopne lret mov mov addl je xchg cmp icebp xchg fs cltd orb or sub and das nop pop pushf nop aas sub scas dec and (bad) roll fs fs sub outsl mov lods push out cmpsb jmp subb pop test js daa or enter jecxz mov cmc push popa adc out sub in cmpb cli sbbl call fsubr nop sub das cld mov add adc cmc pop xor ret test test jnp bound mov clc std sarb (bad) arpl cltd mov sahf mov sbb xchg lret aad mov inc dec sub dec xor out cmp in pusha out enter cmp std orb mov addb aam cmp cwtl inc cld inc jl xor stos (bad) movl adc hlt xor mov cbtw mov call orb xchg movsl push shrl (bad) (bad) xor xor repz cmp loope fstps nop sarl and xchg imul repz lea (bad) pop cmc enter pop addl test jns or inc push xorl push icebp cwtl jle mov icebp mov orb dec subb roll mov fstpl push rolb sbb insb lds test icebp lea nop inc sahf dec inc or in fsub add jnp push push add loopne sbbl ret aaa out pop sbb or ss push sbb out fcmovb pushfw inc jp cmp in pop arpl pop inc imul mov test mov stos xor push ja fsubrs ss into out sbb push mov cmp pop mov mov or jmp outsb andl addr16 sbb je mov mov push das jae xor cmpsl push testb mov or jnp shrl inc lds cmpsb sub fidivrl or lods xor sti aad aas lret rcrb xor in xsaves xchg xchg xchg mov push test int cmovno mov xorb leave addr16 push mov and nop insl jno jo push lret fildl pop hlt (bad) loope int3 mov sbb xrelease test aas mov (bad) (bad) cmpb mov inc dec scas (bad) xchg outsb cmpsb mov xorb loope sti clc subl leave xor fldcw push mov xor sti or lock (bad) stos addb les loopne sbb cmp cld sub in scas inc cmp sahf push movsb mov sub pop add aam cmp ja addl incl or decb les ficoml rcl mov test in cmc call subb jl stc adc (bad) cmp push test fwait sbbb lret sub into xlat mov mov pop sub mov enter iret test sbb add (bad) loope nop inc adc mov or aam sub pusha sub mov arpl dec fdivr cwtl outsl lcall add andb sbb int sahf mov pop xchg sahf inc xchg test movsl orb push jne mov imul (bad) adc addr16 mov push add sti mov or bound (bad) in popf cli int3 mov mov push in and jae test sub fs shlb test mov hlt jne movsb (bad) cs add es xchg fwait adc clc push xchg out pop loopne in sub or xor xchg cwtl add in jmp push nop shlb cmp sub mov jne pop gs jg lret push or icebp pushf add insb ficomp stos shrb add lods add xor lret jp add andb scas lahf pushl inc iret mov sub rcrb add jle shll iret pop or out dec test (bad) call or clc arpl repnz shrl and daa fistpll mov divb dec dec or push xor xchg mov cli cmpsb and inc cmpsb adc xor mov cmp add dec out inc addl inc push add xor out test rcrl (bad) nop mov push test cli sub test lcall push imul dec scas dec mov int cs roll dec jle xchg pop push mov adcb or add mov fsub cs dec popl mov inc mov pop pop add loopne hlt xchg jno xchg aam les aad mov add subb js,pt subb mov inc xrelease jmp push or fwait stc int3 test push das xchg fistpll xchg aad add sub out adc lods push pop ss mov mov push leave lods dec aam add adcb clc adcb pushf dec jno add adc sahf idivb and and arpl repz stos fmuls jns add pop loopne sbb push jae add dec sahf jb pusha cmc mov mov or cli inc adcb shll xor jl push mov dec (bad) (bad) pop lret sub icebp in jle addr16 mov mov push mov adc lds push push into pushf stos pop lcall jns andb dec scas or xor cmp adc in adc test (bad) jo jae dec ljmp lcall int3 outsl pop cltd pop mov mov dec xchg cmp mov mov fnstcw ficoml sub int gs cmpsb stos dec xlat insl mov andb add xor fdiv out pushf dec sub xchg sbbl addb mov inc cmp and inc inc test loop add imul ret sub hlt (bad) jbe dec adcl fs mov bound xor (bad) add sub das stc jmp jp xchg mov or jns sub nop dec mov mov mov in andb pop dec pop out mov push cmpsl sarb insb test dec test pop mov sub aad into sub mov clc mov ds ror xor xor (bad) loop jnp sbb push sbb dec push scas adc idivb xchg pop cmp shll nop sub clc mov mov iret aad dec lods xor dec add adc pop push sbb orb jg ret outsb dec jno add out pop sbb pusha cmpsb or or xchg data16 imul sub mov fsubs sbb aad hlt lods xchg arpl lcall sbb sbb lahf mul sahf sub jp jo adc inc cmp scas jnp std mov in mov repz ret fs ret mov lea cmpsl addr16 (bad) sti inc mov sbb push adc ja pop pushf data16 jl repz mov jp mov test movsl pop in jecxz push jp adc add xor repnz call (bad) dec test pop sahf daa pop sbbb in ss (bad) and mov es add sbbb cmp add dec xlat stc sub adc pop daa int3 out orb mov mull sarb in incb or ljmp cmpsl pop gs cld fidivrl adc popa cmc add add mov fisubrl cmc lods sub stc test out jge loopne cli inc outsl ret add cmp inc lods pop daa pushf ljmp mov out cmp cmp rorb xchg and xor lcall add rcrl iret add nop andl mov enter cmp fadds push rorl or pop leave daa mov (bad) shl outsl repnz ret xchg scas loope jle shl mov rcr xchg xchg mov aam mov inc adc cmp cmpsl std in insb jnp and in test fdiv pusha int3 (bad) loop push (bad) sbb rclb sti or inc jl xor xchg psrad orb jle pop int3 inc push jo xor mov fild fsubl out sbb movsl add dec mov ror xor icebp add test or xchg mov mov stos push jns (bad) push cmp sub push lcall testl and dec mov aas sub push cli cmpl inc jecxz aaa xchg (bad) clc cwtl xchg xor movsb dec inc pop (bad) jnp add popa incl or jne (bad) cmp imul xor add jae aas ja sub add lock aaa xchg inc cwtl mov sahf (bad) cli sub cli into (bad) orl loopne stc daa std imul add sub cmp mov lret outsl or fcoms orb inc push jecxz pop and dec lret pop push cmpsb (bad) xor out loop xchg xorb mov adc aaa jbe mov inc orb test mov enter test rolb push in mov pop fwait jg fisttpl roll sbb inc mov cmpsb cmp fcomps sbb mov adc call imul mov aaa leave mov sbb out and lods fildll jmp shrb sbb enter fsts idivl nop sub pop adc push jnp push ret sbb test test mov inc adc mov push push nop loope push xor outsl hlt or sbb sub stos or pop (bad) repnz out mov jbe jnp fild xchg loop (bad) push ret (bad) mov jle aas xorl movsb (bad) dec ficomp shrb enter loope or inc std test xor mov aad mov sbb jnp (bad) lahf adcb mov shlb cmp push subb mov in mov xchg fs movsb rolb adc push ds push xor jns pop loope lock cmpsl (bad) inc inc inc dec add ret cmp inc inc movsb or bound push adc xorl fs enter jnp in test stc add sub fadds and dec mov sub inc pop sub lock outsb rcll enter sbb movb push inc xorb daa mov movl mov repz das sub test fadds xchg and sbb adc jle repnz lock sbbl adc inc xchg mov repnz ret mov mov adc jbe,pn and (bad) jp insb push mov lret in push fsubrl cwtl test cli adcl pop mov fisub aas adc in cli add dec jle mov clc lret mov iret outsb dec addr16 pusha cs jns jp scas into xor gs hlt cmpl lret arpl add insb xchg push push scas ret jbe sbb sub jp push movsl sbbb mov push icebp xor jno daa fwait jne into sysexit std orl xchg jecxz loope or adc mull es frstor clc sbb mov inc out and xchg push xchg sbb sbb inc inc fwait subb jb cmp adcb push push cmpsl pop popa jno xchg pushf fcomps test clc add sub mov add xchg jno mov fstps and adc dec jg fwait arpl aad cltd stc bound (bad) mov add lock inc sub mov stc xor outsl pop fcoms add cmp lods js lock fistpl test cli cmc add lock push out adc jle jle outsb loope xchg mov loopne subl jne aam pop xor fstpt in loope cmp jo inc rol jne stc dec push dec cld adcb scas xorl xchg call (bad) out out inc lret and arpl mov loop scas test fildl mov pushf mov xchg orb mov imul shrl nop cs aaa xchg fiadd sbb (bad) mov push mov int jne (bad) lock push mov mov pop (bad) out cmp mov cmp ss sub pop arpl (bad) ja xchg sti or movsb bound (bad) xor xchg subl jl outsb xchg int3 xchg inc mov dec push mov stos push mov outsl lcall pusha sbb and xchg xor ds adc pop out pop idivl lock loopne scas mov test arpl aaa fbld mov pop or addb lods dec add aaa fldenv (bad) enter (bad) or pop movsb rcrl ret inc lds lret push ljmp xchg and jl int3 cmp push cmp mov in test cmpsb enter mov sbbb fistpl or jg mov fdivrs mov (bad) dec mov add sahf vandps scas imul sahf add lcall aas jmp cmp je inc ret inc mov jmp imul jmp stos pushf out (bad) lahf jl mov pop dec cvtpi2ps leave and and fdiv or push aad or push test inc out insb nop add mov pop sbb mov scas fsts addl push pushf pusha loopne (bad) aas rcrb cltd push test stos pop pop xchg divb repz and push jmp loop inc jae cmc push (bad) mov ja stos arpl mov js pusha or jbe mov or stc push fdivl test xchg sbb mov push inc mov jne stos repnz addl (bad) js xor push mov jbe loop and rcrl ficomp jmp hlt adcb lods add inc mov test jecxz ret mov jle inc out and fiaddl out adc xor adc insl mov arpl xchg cmp push mov cmpb daa leave push fwait mov adc add int3 jp shlb ficoml loop add jno push inc mov ljmp mov jnp shll je adc (bad) dec jo pop push lods sub sbb js pushf shll pop mov lea (bad) mov and jnp dec fcoml add jae fsubrs inc push loope sub pop scas add ss int mov rcll mov sub cmp repnz push inc (bad) dec iret xchg lea das add and and mov mov jnp mov add inc cmp lcall pusha jb out mov sub imul sub mov dec push repz xor imul out jmp (bad) jp mov mov xchg cmp scas jns out icebp xchg in pop lahf adc nop in jmp sbbl (bad) mov enter subb fs cltd test adc inc jne fild hlt sbb cli adcl xchg jns jno mov fstps repnz lds imul sbbb push fiaddl in pop cs mov or out pop in sbb inc scas orl mov ret sub or adc leave mov aaa idivl insl add mov popa mov pop push andb mov pop fsub sti xor sbb cmp popf js popa pop cmp xchg sbb loopne xor xor call xchg in pushf lds cmp jnp mov lods xor (bad) in fiaddl cmp push test mov mov jbe xchg push mov inc leave mov jecxz fdivrs fs sub in jnp popf mov lcall inc int3 push cli jb add push pop int3 stc enter push test out outsw push lret (bad) adcb jge mov jnp iret pop cmpl hlt add dec jle,pn ror add jl in pop dec and inc lcall and lods push test test gs (bad) or jae cmc pop (bad) hlt inc sub loopne pop nop fmulp repnz sub xor push sub jle out aas sub sbb arpl inc jb popa adc sbb add setae jmp ljmp fcompl ret je mov icebp ss (bad) inc xchg popa xchg ss loopne xchg lock mov sub jnp mov es sbb iret daa mov xor (bad) das enter cmp cwtl pop or mov lock pusha mov adc loopne xor jle mov repnz cwtl ret cmp shrl test mov jnp dec iret test sahf aad mov xchg jo rol in sub std ret jle lock scas cmp popa stos sahf adc sbb mov mov (bad) flds andl stos mov int3 outsb and popa jns jmp iret inc sub lock (bad) call rcrl shll orb push add ss xor sub cmpsl mov lret fsubrs andb nop xchg pop jno xchg sub pop inc push lds out repz adc xchg fsubrs nop xor shrl cmp in cli int xor aaa inc nop xor adc stos cmp bound repnz shll push je aad pop mov mov sub cli cmpsl dec inc pusha lcall fmul inc or inc push push xor inc lret arpl testl push sahf fimul nop in jbe movsb pushf arpl into js inc dec out orb jns clc loopne adcb incl pop mov xor mov add or mov or push jl mov jns pop cmc nop mov addb add data16 cmpb pop sub push movsb scas fdivs xchg mov pusha inc mov sub shlb lods icebp add pop jo mov add nop inc or aas test add enter (bad) fcomps and cmp pusha sahf jno aam shr jmp inc xchg mov xorl mov fdivl lods push call sahf (bad) pop les or jl adc arpl push xlat pop lock mov pushf push mov int mov xchg jl ret xchg push sub add les xorb mov lea and fildll in dec and cmp nop sbb xchg dec stos sbb (bad) cltd imul jnp subb loop lds cmp xchg das shrb sbb in or mov dec cmpsl (bad) sub enter push decl int movsl and sbb insl xchg push xor pop inc inc mov addb lcall cmp push pop iret xorb pop sahf test and or xchg xchg cmp std orb stc (bad) jno pusha xor dec popf push xorb and cmpb lret sub cltd sbb sub mov jmp mov icebp aas test adc sbb mov jle lahf (bad) pushf or cltd mov iret sub test les test js test arpl cmpsl ss daa mov scas pusha iret push sub xchg int3 sub add addl push imul mov fdivrp cld (bad) push lahf mov (bad) into rcrl push jmp std sbb sbb sub xchg mov jbe ss cmpsl push and ljmp adc test fisubl ret or (bad) cltd mov lret sub mov push mov lods xorb ds gs sub pushf std add test xor loope imul adc iret xlat push test add lock mov xor stc test mov mov jb out cwtl mov repnz push push jmp fdivrs (bad) stc or loope jo arpl xchg insl jnp cmpsb inc (bad) push and jge ret xlat mov pop fcmovne mov inc pslld popa ds jnp je test loopne (bad) pop lea test scas jge (bad) jne fistpll ret xor std cmpb sbb clc mov ja pop cmpsl test xchg dec out jge mov (bad) out fcmovnb push jmp dec int mov push lods mov mov scas push loop inc in sub mov mov mov je cmpsl inc cli mov inc jl dec fstl sub scas push sbbb cwtl (bad) mov (bad) iret idivb stos lock cmpsb xlat outsb xchg mov jmp dec fisub fild pop lods insb addl inc enter (bad) cs mov jecxz aaa jne test pop in sub fildl stc push repz out ret xor push test push mov js divb dec cwtl mov mov les and (bad) and pop jl mov js jo imul daa fldl cmp sub ret addb das imul add pop popf xor rcrb jmp mov push sub test adcb movsl pop xchg nop and cmp lret xchg loopne nop mov dec call jge (bad) xor or fsts sub mov loopnew pop lock outsl xchg sub sub mov mov out sub imul push nop adc test cmpb addr16 lahf fdivs sub sub (bad) inc mov xchg adc ds in enter ret mov test lret xor daa inc jb pop adcb aas push mov lahf add outsb jb into xor inc mov test jns test mov fstpt rol push pop mov icebp or push popa xlat mov pop int3 mov subb scas pop cmpsb xor xlat xchg insb enter add test and inc mov lock andb in inc mov sub cmp mov push xchg hlt sbb xchg lods xchg sbb add jo sub jl lea test adc jb mov loope test ss lahf stc jge add push push nop and xor rolb fisttpll movb addr16 inc inc mov jnp sbb mov lret sub lds xlat dec scas sub (bad) dec add sbb es (bad) sbb (bad) cmp lds xor xor sub in mov in int pop xor fildl mov in pop sbb or dec fcoml subb ret lea ds pop and jg pushf outsb aam ss cmp pop inc aaa adc pop (bad) (bad) mov fiaddl push xchg push adc or xor lret mov es sub dec std enter mov mov push mov push movsb adcl dec (bad) or rcll test insb xchg xor out shrl (bad) fsubrs sub test loop test lret add xor mov cmc push mov mov test mov or pushf add dec jge push addb dec (bad) outsl add stc xor ret orb inc mov fsub sbb iret mov push lods not push call dec insl mov sub cld mov pop pop sahf sarl dec mov jb lock repnz sub fnsave mov (bad) or leave mov enter nop jl roll roll (bad) sbb xor xchg out enter push loopne mov xchg and mov fisttpl (bad) gs stc (bad) mov xor nop cmp add pop inc inc xor push fistpl fildll in in mov loop testl fildl pop cmp pop loopne sahf bound out sbbb dec mov and data16 mov jbe enter jecxz aam incb iret scas dec sub int (bad) aaa rcll nop movsb and adc or inc xor xor jp cmp pop in cld and addr16 xor fstps adc add adcb in inc mov mov (bad) pop add es (bad) jo mov and and push in xchg pop xchg idivb and inc (bad) mov shll je out pop xor mov js pop push or jae cmc mov adc xchg or dec and aas xor (bad) jno push mov xchg cmpsb (bad) mull and idivb adc test cmpsl push insb movsl xor int3 jle push cmp mov (bad) in push jp cwtl pop mov sub or add push nop push inc inc aad cmp pop js shlb xchg mov xor sub mov pushf cmpsb or xchg test int3 dec mov adc js add sti mov addl push insl (bad) imul mov repz mov xor ss ljmp jmp or pop ret sbb and jne sbb xor loope mov in pop movsl (bad) xor inc cmp xlat fsubrs fs outsb sub xor addr16 pop add sub sub or fstpt cmp jae dec pop mov add leave mov int3 testb movsb lret pop (bad) leave js inc jmp int3 fldcw movsb movl js iret pop sbb or pop sbb add or and subb popf xor aaa gs add stos cli cmp test adcl bound stc xchg ss in sarl sarb out (bad) adc mov xlat test xchg xchg push mov adc stc or jecxz and add addb jge loopne outsb xorb lods sbb push inc mov jge rclb orb mov adc add fcmove push xlat xchg and inc adc dec dec jnp jl stos mov ljmp push mov sub push aam and jnp xchg jb test jecxz movsb in test sub mov push movsl scas stc and jg pop stos xchg out mov (bad) sub pop lock push es mov das mov push andl pop (bad) testb or lret pop mov cmp popa pop or or push adc mov xchg push insl lock sub jge push je fsubrs push xchg mov mov or add pushf arpl (bad) clc orl in (bad) cwtl lods (bad) mov in ret (bad) pop cltd cmp sbb xchg rolb addb inc leave push inc add (bad) daa adc adc push subb clc jae mov (bad) (bad) aam cwtl dec cltd enter test jnp lock push lods jecxz add (bad) adc pushf rol les jg test (bad) add xor xor in adc dec xor nop add and nop jnp mull jbe and sub xchg aam jne stos sub push dec pop add mov test out icebp movsl lods sub sahf mov or pop and mov mov add xor enter inc dec loope enter jmp stc add addr16 sbb xor xor inc xchg add pusha add fistpl add enter fdivrl mov out jo sbbb pop das mov jno xchg incb stos pop mov mov xor test pushf xorb mov mov sub sbbl xlat xchg movsb inc fs int3 dec sbb xor pop test sub rcll mov test jp push adcb jg out inc mov into and jae inc test cld xor lret jp imul or lcall insl mov mov inc mov xorb iret clc jle push jo insb test cwtl outsl jg sub adc xchg data16 push cmpsl orb loop cs fildl cwtl add cs mov fnstsw je sbb push mov jmp mov (bad) cmp aad and adc push daa xchg mov (bad) (bad) or and cli push or sub cmpsb lret call jnp out orb or xorb jo nop js hlt or push loopne mov jb test or sbb push pop sbb js mov subb pop fisub insb and shll shl popf (bad) ss decl js cmp (bad) jle xchg ret lea popa das push sbb add push fcmovbe sub xchg dec loopne xlat outsl lret popl xchg stos xor icebp mov pop mov les clc or inc bound lods loope popf js in xchg pusha loopne inc xorb pop ret in push jnp,pt shll inc push xor enter subl mov or (bad) int3 or clc mov adc cmp mov inc inc shrl fwait enter lcall jl adc mov mov inc cmpsb mov sarb ret cmp cli arpl cmc test mov fwait cmp add int3 imul ss (bad) sub cwtl (bad) out fist sub insl scas sahf xchg xchg repz mov bound repnz aas add (bad) jb sub bound cmc orb fdiv rorl test cwtl in je (bad) outsb bnd loopne test xor iret add cmp nop frstor mov dec repz push adc (bad) pop pop mov sti mov xchg cmp pop jge ret lock int pop add ficoml ret sub test push mov ret (bad) jp dec les aaa jge clc and mov mov rorb stc xchg xchg fsubrl jae xor in in push xor rcrb gs lahf lods mov stos xchg and flds mov xchg fdivrl mov fwait push (bad) xor xchg iret (bad) fmuls fs mov out mov sbb (bad) and or fucomi scas fbld int3 out pop scas into push cmpl dec mov popa dec xor cli into (bad) aam mov lea dec add cmpsb mov ret sub mov subb ficompl jl jp cs xor into cmove subb outsl adc out adcb rolb jle iret inc mov ds cmp iret aaa pop (bad) xor inc test and add sub dec cwtl xchg outsb inc mov xchg pop cwtl xchg cmp mov mov rorb or mov nop (bad) ljmp sbb aaa outsb xchg cltd lahf fcomp pushf scas fstl push lcall jbe orb mov shll cmp jns adc xorb inc jmp pusha pop add clc sbb jb mov es or sub (bad) inc pop orb sbb sub popa lret push and inc lcall addb add sbb and nop mov test pop pop and mov enter loopne testb sub jo pop adc xor push mov push aaa lock mov mov or xchg pop cmpsl dec jns (bad) popa push mov mov cltd bound stos xchg cmp fwait addl jecxz push ljmp xchg mov movl in dec push mov (bad) addb stc and out (bad) cmp je imul dec adc cmpsl ja adc pop xchg test mov sub lea gs xchg lods lods inc cmp mov mov jmp lret jne imul imul (bad) aad insl addr16 lret (bad) fiaddl popa adc add std push add pop (bad) xchg xor fxch dec mov cwtl ljmp push sub add fstpl mov aas push jge aaa sub xlat bound iret xor xor add dec inc loopne int3 dec test insl loopne repnz or outsb xor das fsubr jg mov pop sbb ret push test mov lds mov arpl fcomp and push dec add test push xchg inc mov pusha or add into sahf dec xor inc push xchg push iret movl and fwait outsl fistp test in into cmpsl insl push das pop leave dec dec lcall aaa mov add ja adc lock int3 in fsubr insb fildl out mov push xchg leave xor adc add xor adc maskmovq (bad) mov aaa test dec js scas xchg xlat cli loop add mov (bad) leave subl sbb cwtl ret push jae sbb gs jge pop orb adc lret rclb cld call mov (bad) mov addr16 add sbb sbbb adc jp push jns jno aaa mov (bad) jae xorb pop add (bad) loope outsb rorl mov (bad) cmp or test jmp adcb shll sub ret insl loope xchg andb lcall scas sbb (bad) adcb call lods cmp mov cwtl and test adc out std fidivl test sbb jns dec mov adc mov mov adc sbb daa out test test lds mov inc mov cmp cmpb dec loop stc cld popf cmpb aad xor push pop mov sub sub test push (bad) loopne frstpm(287 lret pop pop andb imul dec xor cmp xor rclb fwait ds (bad) fs xor sbb jp sbbl jae mov stc test es subl mov mov and test fistl push das adc jecxz andb flds je rorl push pop in cwtl subb aam sbb jmp sbbb call enter out push mov (bad) add push fild dec or js jecxz sbb jne or loopne mov int3 sub aaa lret ret (bad) and cmp bnd xlat lock mov pop xchg ds sbb mov stos mov sahf or iret (bad) mov in push data16 test and out push xchg call inc pop mov xor cmp add leave cs test or xchg jo jb jmp inc xchg push push movsl subb clc fs lret sub lcall insb (bad) or cmp inc sbb mov stos xchg mov xchg xchg sub inc mov mov nop pop sub (bad) stos mov fsubr add in pop loopne fsubrp sub shrb sub out shlb loopne in daa jbe dec insl jg fcoms inc data16 inc cld sbbb jo sbb cmp bound and ja stos loop cwtl je sub fst das or push push roll and adc push mov out andb and inc inc mov mov stc sub lea divb dec jne cwtl xchg jmp inc popa data16 jns loopne lds js sbbb jmp jle stos arpl inc (bad) xor out inc cmp and cmpsb and xorb addr16 pushf rcll dec pop cmpb mov jecxz repnz lret movsl jmp xor add mov mov xor flds sbb jns mov jo or xor or nop je int out (bad) xchg roll stos push mov notl xchg dec inc mov or pop flds cmp and jecxz enter xchg das pop aaa xorb push push add cmp cmp (bad) sub dec rcl or pop sub repz mov test dec out push lock lea movsb in xor leave push aaa int3 outsl fistp jmp jmp xlat mov jns adcb xchg push loopne outsl adc or sub mov rep xchg clc sbb mov cltd cwtl pop pop mov sbb cmpl pop mov mov pop add rcl xor jb sbb in stos cmpl mov sbb push icebp shll call or inc push jo cmp add imul add test pop sub inc in rclb add out mov das push andb add mov lret cmp enter mov jae push movsb jecxz push cmc ret call (bad) sbb pushf jae adcb into cmp imul xchg xchg xchg dec stc mov sarb sti popf mov iret lea bound mov in inc repz jne fisttp adc sbb push gs push mov xchg cmpsb push fstpt insb push mov ret xchg insl jo cmpsl leave das pop lock jns js jnp dec pop mov loope scas xor loope jno sbb push sbb mov inc push adc ja cwtl ret rcr cmp sbb jmp sub xchg adc (bad) jnp or je push or mov mov or mov (bad) pushf mov sti sub push aaa jle add dec iret das lds cmc orb dec movsb mov push hlt lea xchg insb adc adcb and adc inc mov add mov dec xor push mov xchg test (bad) jp arpl mov or pop add pushf loop mov enter dec rorl mov dec in mov adc test mov xchg mov (bad) xor xor loope inc fildl repz push aas xor pop dec jae push addb inc xchg popf and js sbb aam dec hlt sub jnp in test pop xchg icebp pop mov movsb add in and lcall cs mov out das add inc cmp adc mov mov cs test ret jmp popa sahf mov je add mov mov and push sbb dec and test cli cld xor add enter insl sbb dec in adc movsl push adc lods popf cwtl xchg xor dec mov xorb clc incl mov movsl sbbb mov enter outsb nop icebp xlat sub insl mov pop sub mov outsl xchg repnz icebp jp sbbb incl sbb mov mov or push add (bad) jns add and mov inc (bad) xor insl nop lcall (bad) enter outsl adc and adc mov dec cmp (bad) xor test pop mov jbe stos (bad) push loop fistl mov mov test dec minps cs xchg test add test mov jns in xorb call bound jecxz cmpsl mov push adc xchg mov popa aam ds dec jnp or push lods xor movl test cwtl addr16 mov jne pop movsb lods and cwtl repnz xor enter dec aas je adc cmpsl out mov add sti test pop movsl js cmpsl aaa enter out sbb sub es pop cmpsl push xlat fnop mov enter mov adc xchg scas mov mov jecxz and cmp cs sbb or or adc push mov andb push js adc movb adc mov (bad) fnop and loope jns adc xor addr16 jp test addr16 sti lods icebp inc sbbl cltd popa imul cmpl subb cmpsb pop out add fnstenv (bad) enter add repnz je inc mov jae pop (bad) inc mov sti jne push mov push lods movsl push mov add xchg and outsl dec scas dec jge aad xchg (bad) aaa xor imul inc mov push lret std test iret ss fs and mov mov or cmp xlat enter mov cmpl popa int3 das sbb stc subb jp test xorb test jae shr test movl add xor or dec sahf arpl or popf es cmpsb out pop inc pop sub push cli inc lock (bad) mov jecxz jne cmp subb inc mov stc scas (bad) and or nop push xchg out aad andl jae rclw inc mov gs xor iret cmp gs (bad) out jo out jl repnz into mov xchg adc dec inc jg fiadd aaa inc (bad) mov aas cmp sub (bad) or movsb sahf mov out ljmp js xchg aam xor inc subl ljmp mov (bad) outsl imul pop cmp ja pop jge lds cs mov pop loopne flds aam dec jo lret gs pushf mov sbb sbb insl aaa movsl sub cvtps2pi push add imul sahf or ficom push out repz shll ret into shlb push xchg or sub inc adc adc fistl cmp push lods sub cmpsl test mov xor push (bad) mov mov loope insl push sti xchg adc fcoml les test loopne sbb and lods sahf add inc call fsubrl jp lret or cltd mov adc imul (bad) faddp mov enter lret push iret pop aam imul mov fs test icebp js jge aas push les nop push nop push inc add loop cmpsl mov ss imul mov imul mov jmp push out out orb stos pop enter xor gs jmp imull mov pop jae sbb mov dec cwtl adc test mov mov push cmc lods push lret cwtl lcall rcll mov or xchg andb cmp inc (bad) pop and iret in and aam cmp sbb lock iret sub leave mov lret jg lahf andb push cmp inc ficomp sarb pop add cmp stos push std test lea jmp and xchg xor in in nop sub jne hlt xor push (bad) adc popa scas and adc xorb pop adc xlat clc cwtl cmp mov jl jb jg fs mov aas (bad) dec mov cmpb shll cmp dec or sub lods dec icebp add xchg and cmp jns fstp fstps andb jg dec imul cmp dec addb inc mov pop mov add dec cmp int data16 dec push pop lock adc or test jb mov xchg xor jns xchg mov std push jo push sbb push dec mov mov test push enter or test or xchg insl ret movsb lahf loop gs mov lods mov cmpl adc les mov mov lcall mov pop dec or iret pop xor add jnp mov mov and pop pop sbbl xor mov les jbe inc adc pusha out add lock popa clc pop mov test pop cltd imul push cmp sbb (bad) nop or js jo and in sbb jmp mov nop nop add mov dec xor pop cmpsb sbb arpl imul push xchg lock cld xor sahf ds mov ja jno jae jbe mov xor das sbb (bad) jnp or add repz add stc sbbb jp nop pop leave xor push xchg fwait and mov xchg test loopne jne cmc insl push jecxz jl incl fwait push inc mov pop jg test das imul psrld or fcoms mov out push scas insb xchg pushf fildl pop ret frstor outsb sub and ljmp fadds out dec and pop repnz and xrelease xchg out cmp and test popa xchg (bad) je mov push test clc mov jae xchg gs clc lods lock sahf mull (bad) nop and jge lock enter xchg inc test jbe cmp xlat mov gs leave fwait pop (bad) pop andb int3 mov test nop jge adc mov sub push pop test pop mov leave fild fwait mov rorl mov jg scas enter cmp loopne leave loop mov rorb notb lret je sbbl sbbb aad pusha roll mov movsl mov pop sub ss add push jecxz and cmp mov adc lods lds mov fildll sbb jmp aas ret addr16 mov cmc and test push flds adcb cmp xchg push inc add cmp nop sbb rcll inc stos inc push ret movsl loopne jne test add mov mov fst xorl jb cmp add cs faddl push pusha aad call mov add popf ret mov mov call sbb int xchg hlt push stos mov out scas push sub or arpl pop cli std das lcall cmp test lahf pop dec or icebp out or push xorl mov xchg mov pushf and test sbbl clc mov leave popf xchg xchg sub sbb add cmp sub cmp jne adc movsl jp push cmpsb push fstpt xlat enter and pusha rcrb add xchg lahf mov or jnp inc data16 push scas ss xor aaa testl lret mov mov fild xchg loop fstp xor outsb or cmc nop shll repz out mov xchg out mov adc xor loop sar push orb xlat pop subb popa cs or dec out add and push xchg jne jae enter shrl ja cmc xor mov adc (bad) push mov cltd pop mov pop add mov cli sbbb je orb (bad) inc repz int3 data16 loope cli sbb lds mov xchg xchg out into stos cltd adc gs inc pop add ljmp bound call divb xchg mov adc adcb (bad) jae daa fisubl mov xlat add repz mov xchg cmpl nop sti jbe xchg ja lret int adc xchg clc mov or (bad) jae xchg mov int3 js (bad) lahf sahf mov push xchg mov cmp mov mov mov (bad) out loope sub push or add adc pop sbb cmpl rol mov nop iret mov mov pusha repnz jnp inc mov scas ret loope lret fbstp cltd push cmc shrl inc stc incl pusha xlat movsl mov (bad) cmpsb loope or in mov push mul pop lds inc mov xchg cmp add sarl sbb push pop in lret inc mov sub ret lret and cmp std and loopne or sbb popaw lods adc push iret push xor mov dec pop test aad pusha cwtl in cmp (bad) stc (bad) popl stc inc sub ret jns movl addl aaa into xlat repnz fmuls (bad) js pushf in cs dec pop out cmpsb lahf add (bad) andb clc cmp fildl std outsb cwtl sub ret fmul cmc repz (bad) push push adc jle stos test inc test sbb jmp jnp inc rcrb inc pop lret cmpl data16 dec (bad) adc daa xchg addr16 incl (bad) hlt or mov cmc or into (bad) iret rolb jl mov fscale mov movsb test push (bad) mov inc xchg add enter adc or test cmp (bad) es xorb lods push fs sub mov xchg push loope dec (bad) jnp lds push movsb in or mov lds iret subb pop loopne jge clc sahf lock push mov and (bad) outsb mov push daa xchg xor push orl loope jne adc inc mov fadds or frstor push (bad) call inc inc test push mov add addb jb add and cs iret scas push push andb clc sbb xor pop pop jl adcb adc mov or mov mov xchg xchg dec dec lods and adc fdivs lret cmp add mov cmp add sbb aas xchg lock push mov test (bad) dec mov mov push aam xchg or test cmc cltd and sti mov (bad) and mov in mov incb cmp mov aaa pop xchg sti in loopne imul xor outsb (bad) aas idivl (bad) dec enter adc or add xchg push sbb add push (bad) stc jp mov ljmp cmp lock les adc sti test inc (bad) mov xchg jnp (bad) imul push call scas jle les sbb (bad) lea push push and pop cs pop addr16 inc mov jle mov xchg dec or out mov iret sbb sbb out mov dec mov sub nop iret lahf or jae push aas jmp cli mov push mov ja stos test std mov adc iret fstpl push or test lahf movsb ljmp push add in int3 sarb addl inc addr16 and mov call add sub int3 (bad) cwtl cli dec jno inc fild inc insb dec ja xchg fnop aad dec pop pcmpeqw or aam shrl imulb sbbl fistpl (bad) (bad) loopne ret cmpsb enter mov icebp movlhps sub adc std and mov adc test mov and aaa movsb test and pop mov shlb push jg test in int cmpsb adc and (bad) insb aaa clc addl mov dec sbbl imul out aas add xor test and sti adc out cli add inc sbb cmpsb std sahf push push pop mov (bad) mov adc mov push xchg inc xchg testb int pop and test outsb and adc lret cmc xchg (bad) jno in sahf mov (bad) daa and xlat loope out pushf pop cmpsb (bad) push fisttpl jmp pop mov xchg aas std xchg hlt jmp or adc xchg inc dec mov (bad) sbb sbb cwtl mov push pop cwtl ds add cmpsl xchg lock sub loope sub xor stc jmp sbbb mov subb push xchg clc mov inc push cli cltd jecxz adc lods outsb push int3 andb clc sti test psraw fsubl or dec pop pop pop test push test repnz sbb mov mov cmpsb andb std mov jle xchg pop (bad) jne (bad) jb xor arpl mov mov out pop stos adc in (bad) mov pop fiaddl andb decb mov imul pop and enter jae xchg jge inc jl repz xor mov cmp xchg lcall mov jecxz in jnp mov xorb xchg jo or jno ss fadd dec jmp test mov outsb stos repz fsts pop clc leave imul lahf mov xchg push xlat mov (bad) fiadd (bad) (bad) push add fcoml jecxz sbb lcall ficomp cmpsb xchg and cwtl pusha orb pop push addb add cmpsl pop mov push jl ja sub xlat pop jmp and xchg loopne fucomi femms test adc or roll lret out xor lods xchg into es add xor (bad) mov dec (bad) lock dec xchg jae dec mov in aaa xor dec xchg inc js sbb inc jbe and cmp rorb xchg push pop cltd and push cmp in adc adc lea add or bound inc (bad) cmp ror cmpsl sbbb jmp cmp cmp sbbb xor inc pop movsl jmp mov pop lret sub pop inc test push mov das push (bad) pop fprem1 pop popl mov cmp jns mov xchg xor push mov cmp jecxz lods (bad) rorl mov daa shl adc push add ret jo (bad) stc cmpsb imul inc fsts dec mov mov rorl outsl pusha cmp jb in test xchg sub add addl adc lret fldl sub jmp aas mov pushf or mov xchg andl pop loope aaa cli xor ret enter and sub scas gs inc mov jle jo shlb cmpsb cs or inc inc mov or (bad) cmp pop ret aad mov cmpsl pop jns cmpl fadd xchg push dec subb xchg lcall mov int3 (bad) jmp loopne and ss cmp test cmc (bad) push mov imul fdivr out dec or or xor dec test (bad) xor cwtl aaa arpl or push andb dec test mov mov stos dec imul mov sub mov mov insb pop xorl (bad) test fcoml je jae xchg es xchg push mov lock add or stc push addl push jmp jge cmpsb xlat and jmp es stc mov jmp lock cmp adc je leave pop aas pop mov movsb xor outsl lock mov add pop lods ss into cli mov inc cmp dec loop stc push pop or pop insb (bad) and popf test sbb sub push loope je push push jbe lods push hlt mov mov mov fildl and jl mov ror punpcklwd mov std push dec mov adc iret nop ret cmp lcall cmp cmp mov add (bad) jnp xchg loop outsb push nop mov inc scas xchg loopne (bad) stos pop mov mov fmull jno (bad) bnd scas pop pop in shlb dec scas mov sub in mov pop hlt fwait lock add push mov push dec add (bad) mov je pusha pop test andl gs cmc add dec push fcoml outsl subb push shrl xlat jle sub cmp imul pop inc cmpb outsl nop ds mov subb jge das ds jecxz jp (bad) call nop sahf sub hlt test push ret sub scas outsb je popf xchg popa or jns fsubs subb sahf orb push jp stos loopne sub movsl sbb add test cmp mov cmpsl jmp fmul cmp jnp cld test xorl inc invd sub subb push mov xchg popa shrl ljmp int3 push jge shrb dec jmp cmpsb mov adc int xor fmuls push xor out add (bad) lds cmp cltd mov icebp test pop push or ffreep inc inc push jecxz xchg fs add push push mov xchg loop mov adc popa jns sub test mov xchg pushf pop inc push sub mov mov inc sub dec repz add push stos pop dec mov cli sti lock mov in nop push mov pop addr16 rcr mov fsubs push pop (bad) cmc add pushf (bad) jle notb sbb jo jnp mov mov xchg mov into inc jae daa (bad) jnp jbe adc iret sbb xor sub ror add jle repnz pop mov sbb push movsb orl iret out in cmp mov cmc nop jmp scas ficomp cwtl inc repz push adc subl inc test popa iret ljmp mov ror sub test (bad) fptan ss mov sub sub add xor cmp inc cmp xor or add je xor arpl pop mov dec inc testb cli xchg (bad) fild adc cmp mov dec (bad) or push out loope push mov andb addr16 lods imul cmp jecxz test xchg or adc add subb jp pop push subb (bad) pop nop cwtl sbb pop scas aaa (bad) hlt lcall mov add ret mov push jae add es mov dec add and in push add leave gs popf push (bad) adc xor repnz les test test add (bad) iret sub mov scas lods mov lret mov (bad) add (bad) xor push in std in pop sahf imul fucomi xchg sub (bad) repz pop xchg movl xchg cmp lock mov xchg mov xchg cltd inc in (bad) loope inc (bad) mov inc lock negb mov xchg mov test sbb add fisubl cmpb addr16 sbb mov gs ds icebp loope cmp xorb inc mov pop mov inc inc cmc repnz imul int3 test xchg mov push mov test aad ficompl cli (bad) cmp mov cmpl outsb negb je andb dec addr16 repnz cmp (bad) fildl xchg xor cwtl mov pop push lods dec sarb xchg and ljmp inc mov hlt js das mov cmp cs dec lods not or and pop xor push les sbb imul push and sbb mov ds (bad) loopne addr16 cmpsl aam notb mov pop sub pop out push scas jp (bad) paddsb aad mov sbbb fistp and popa and jo repz cmp xor mov dec mov imul or pushl test in das stos popa test cli sub add xor adc (bad) xor xor sarb lods adc jne adc add jmp test fistpl jmp mov rolb enter adc jo jl pop push inc mov cmp lods inc into adcb mov pop iret das clc xrelease or xchg arpl add push xor push mov (bad) ljmp inc and adc sub rcr stc adc (bad) mov es sub mov sbb adc mov push or in cmc and jb cmp mov push rcrb sbb dec pop fwait and ss cld mov repz scas in push rolw sbb lcall fimul lahf test popf pop sahf push cmpsb roll sbb inc dec scas and mov jbe test cli stc add cmp xor inc mov clc dec scas mov xorps repnz dec imul bound sub pop inc or (bad) cltd mov xor inc fiaddl push dec cmp jge stos inc repz iret loope push xchg ds addl test mov add out and mov (bad) shlb aas ret lods iret (bad) pop mov add mov mov mov add repz ljmp je mov pop dec loop mov call cmp cmp imul pop and pop jno cli clc adc jnp in or push ret jae out xor mov mov jnp adc les jmp or (bad) aam push jmp sub cli inc gs sub cmp cmpb cmp fcmovbe aad inc jge jns test inc ja push sub adc jmp adcb sub mov fs mov xchg push adc ljmp ror cmp xlat sub jl add jl data16 (bad) sarl push addb jge andb inc xor jae pop mov xor test cli mov mov js mov mov int3 push aad iret adcb fimull jns adc ret xor pop cwtl jb adc sub test shlb push sbb (bad) mov cmp cmp int jb mov sti sarl xor rcrb orb push sbb xchg adcb sub insl jg mov popl test xchg inc into jg jne mov cmp mov fldt outsb mov scas je mov add sub pop (bad) cmp push loope and xchg cmc outsb mov xor lcall les stos (bad) aad xchg xchg mov pop inc inc test out arpl jns add add mov dec push dec mov pushf stos push sbb imul mov movsb pop popf or or nop jb or mov fildl pusha movsl popl sub (bad) popa dec lock imul aaa add cwtl popaw sahf cmp cli mov jae stc icebp call push xor sub mov sub out frstor mov jbe sub xchg incl mov cmp fcom and outsl test xor jl cwtl test and push xchg jbe sbb cmp lods nop test into sub xor adc adc stos arpl insb or pusha aaa pop outsl movsb mov push pop xchg sub or inc addr16 and dec test jns inc pop mov or rolb push inc mov std test inc mov mov push push sbb and mov xor adc pushf jne lea (bad) lock sbb icebp mov ds lock nop imul mov sarb sub push xchg loope enter mov addr16 icebp push jl popa xchg push test xor and jae out xorb loopne adc loop cmp sbb pop icebp or xor pushf pop and add cli idivl into bound insb mov add pop push sub xchg inc mov decb and pushf sti mov std cld test popf add pop sbb (bad) mov call cs mov (bad) or mov mov outsl mov inc mov insb js (bad) (bad) sti cli out xor adc int jmp decl mov test icebp adc mov punpckhdq mov adc (bad) fiaddl cmp or std add lds ret cwtl adc testl in inc fcmovu pusha daa (bad) test or test ss xor jl xchg icebp or mov orb inc int gs dec stos out ret cs adc aam push stc mov cmp cmc or mov sub mov dec mov mov xor pop sbb leave in xor mov ljmp add inc ffreep xor fsubl bsf (bad) ljmp icebp push mov pop push fs or mov rol xor call lods daa pop jp push add mov pop jecxz push cwtl sahf repz or es xchg and adc inc mov fisubl mov adc inc pushf pop sbb ret pusha add (bad) out nop mov and frstor mov les stos or fadd sbb xor aad or dec imul add cli movsb mov test adc pop xchg xchg jo (bad) ds lods iret pop adc cmp sub inc jnp add sub fist jg lcall sbb (bad) xor lock pop cmpsb push jnp sub fdivrs cli pop or das push lds cmp add add jnp orl xchg jg int3 fisubr mov in push inc cmp nop mov mov xchg orl ret (bad) pop cltd and mov xchg push call mov dec xchg ja cmp jp xchg mov pop xchg jo bnd (bad) stos adc push pop mov dec jae push mov sbb xchg lcall mov dec sub pop jl rclb and lods fdivrl xchg xchg das (bad) test adc mov and push lea int3 cmc addb xorl in adc fcomps jo lahf (bad) dec xor cmp cld sub arpl out xchg or orb and es add jmp xlat xor ljmp daa pop mov or addb inc adcb (bad) rcrl fstps in nop xor cmpl movsl cmp movl shlb ret sub test stos xor mov imul addl add inc mov call fstpl jl mov adcl xor gs cmc jecxz loope jmp cmp lret or into dec enter test xlat inc shl mov pop ror notl test push mov mov sub mov std push int3 push mov leave iret mov cmp mov pop pop js dec add out testl jl sahf rclb lret and sbb loopne mov xchg nop fdivl add adc jae std sbb jb cmp call sbb add sub (bad) jo iret enter add (bad) je test or repnz adc js mov and repnz dec movsl rol into roll add iret in and bound or jg test adc mov aas mov xor enter std push mov jge addl decl test pop int mov sahf fsubl and lret push mov dec cs cmc and call lods mov iret shrl jbe mov popa cmc les iret mov das aam cmc xchg mov adc xlat adc (bad) push sbb outsb and sub std mov jle (bad) sub and jmp inc mov mov and test daa test push nop stc dec jmp popa imul sbb int int3 stc (bad) lcall or mov cmp (bad) mov orb jmp sub adc adc sbb lcall test mov pop or out cmpb cmpb adc inc mov pop andb jno jl loope dec rolb movsb xor cmpsb push bound es test pop inc test ds aad (bad) testb adc in test adc in push enter jnp dec push mov fild mov mov (bad) mov test in lret xor js dec xchg cld gs jns jge sbb in inc mov fwait cmp mov mov cld xchg pusha (bad) aaa sub shlb nop stos cwtl mov (bad) cmp cmp mov imul pop stos call jns in sarb xchg cli outsl xchg fistl cmp xchg mov leave xchg sbbb cli std mov push scas add mov test das mov push sbb inc pusha movsb dec iret push dec mov insb lcall sbb rolb jno in rcrl cld subl lret cs cli jbe push movb xchg notl adcl add sbb mov or push inc or mov dec dec test call add push add rcrb (bad) testb pop fstpt sbb (bad) lea jno or add fcompl cmpsl push lds push ds cmp fcomps cmpb pop in movsb test fisubr mov jmp fistp addb cmp sbb imul push mov cli inc ss push inc stc push bound adc xchg push repnz mov dec jnp push (bad) ja xchg cmpb out adc push sub aad and add pop push subb dec mov shrb cmp jae adc (bad) cmc shrb cwtl adc pop add xor imul in in int3 outsb xchg (bad) xor fdiv or cmpsl andb dec movb lock or xchg cmpsb sub mov mov mov jno sahf leavew pop jb adc je push mov out and addr16 sbbb xchg or inc loop repnz mov div jg mov and ljmp xor jle je lods mov mov daa xor std call es and jne push mov pop sub (bad) or sub push jg pop xchg or mov mov adc les subb test popa jno insb test jbe (bad) xchg jle adc je nop and mov and outsb out mov cwtl adc or adc ret fwait xor dec cmp mov outsl scas dec notl inc das mov cli fisubl (bad) (bad) push mov es inc adc std xlat shrl test pop stc push mov mov push pushf adc lds sbb xorb out mov cs sbb xorb sbbb sti mov je repnz dec addr16 shrl cwtl dec xchg shll or iret xchg out mov dec mov pop je leave je das cmpb iret rclb movsb adc movsl xor adcl repz jge cmp addr16 or subb jle jg add subb incb add rcl sub jo (bad) fistpl mov scas andb push insb aaa inc dec enter add loop testl pop test daa shll add lahf test add or xor sarb pusha cmp aam xchg xchg push add adc push les fsubl aas clc lock cwtl fdivs pushf pop mov test ss sbb movsb daa in mov adcb mov mov ds adc pop xor data16 add lds cmpsb js jo mov les icebp pushf push out pop repnz insb lea and inc add outsl xchg or add lret mov adc xchg aad and xchg jne repnz test push repnz mov dec sbb inc mov adc es jnp sti (bad) cmp mov dec pop bound cmp dec jp push mov pop push mov sbb adc lock adc xorb mov pop pop xchg call mov cmp add jbe lock sub add lret int3 sub into dec dec pop mov fcom out sarb mov rcrl sub leave rolb lods push in les mov sub jnp stos clc ljmp cmp andb imul arpl mov push ret mov inc jae cld clc add movsl test stos aad cmp xchg jmp mov test les ss iret and movl jo push in and sahf pop mov fcompl imul xor dec stc int3 xchg pop nop xor sbb iret aaa andb gs sbb mov mov fildl popa in push (bad) or xchg pop xchg adcb push stc add cmp lds lahf rol roll push roll xchg xor bound fcomps popa scas push jl in orb pop sbb loopne mov cmc mov leave xchg lock pop sbb lds int add fcmovnu cwtl pop jae mov or inc (bad) hlt (bad) or xor add add mov cs add sub daa rcr jno jg sub push push inc in xchg pop lret in addr16 andb xchg imul xchg shlb sbb orb ret imul (bad) mov (bad) popf xor cmp cmp pusha or jl push xchg out lock fs test lea sub test fmulp adc mov (bad) pop xchg outsl xchg test imul push call sub push std (bad) pusha cltd inc and popa aad adc mov xchg inc inc adc icebp outsb xor fild or mov lahf pop push xchg sub movsb add mov dec jmp fldl pop pushf pop jecxz and nop mov dec mov or sti mov jecxz loop jae mov inc mov fist push xchg jnp int test lods orb dec roll shr les cwtl ret test dec mov inc sti mov in adc outsb adc mov pop xor fstl lds xchg pop adc xor enter adcb (bad) or cmp mov call mov (bad) and jb push sbb mov jp aad mov scas jb (bad) sbbb clc push inc xorb dec bound xchg sbbb or shll sbb mov test shlb mov adc incb insb jbe addr16 out jp cmp dec xchg cmpsb mov or mov xchg push test and sbb pop test xchg outsl addb mov fstp subb (bad) cs add loopne xlat (bad) dec and mov sub pop pop in orl fdivs into movsb push or mov cwtl add iret jb dec mov sbb or dec mov jne mov xchg sub push inc add enter pop in test xlat and icebp or sub subb cmp jns idiv xchg push sbbb add cwtl addr16 call (bad) enter and test test (bad) xor or jmp fstl and lahf dec pusha sbbb insb xchg arpl mov mov je pusha (bad) (bad) clc push scas push mov es pusha adc addr16 mov test iret outsb adc jmp outsl (bad) fisttpl add xchg enter clc cmp sbbb push sub mov xorb arpl dec cmpsl push int3 cmc adc mov dec mov (bad) stos pop repnz jg fistl jp mov push arpl add add cltd adc push mov icebp sub mov in (bad) cli ds and andb movsl scas xchg jo enter mov test mov int and insl jb (bad) clc es mov popa cld test aam fistpll es (bad) int3 notb mov adc inc cmp nop aam add test push clc pop enter fnsave movsb ja dec push push repz loop sbb lock imul and hlt addb cwtl ljmp push cmp sub adc sub test mov push adc int3 aaa cmpl aad and pushf addr16 xlat push cmp xchg leave xor das (bad) int adc lea push xchg and fstpl xorb nop std cmp subb (bad) xor insb testb sub (bad) fstpt sbb (bad) bound lret cmp and xor mov mov loop inc lods jns mov fidivrl adc test mov or jnp int enter xchg xor sbb jp (bad) push jne sbbb push jge testb ja in lods mov fwait or xorb jmp add movsb lods movsl incb mov and cmpl and jle addb add mov cmpsl xchg (bad) jno xor jns push ljmp loopne movsb sub aas adc and adc cmpb dec push pop jb xchg (bad) adc add dec xchg and inc push test pop out imul push push cltd adc sbbb clc in (bad) or insl inc sbb lcall dec (bad) xor (bad) out push jp in or mov test scas xchg rcll jne cmc ljmp lret xorl sahf sub mov push xorb pusha ss pop and push xchg lea inc notl nop test fstpt xchg lcall add pop icebp out jae sti js mov xchg or pop jg mov dec xchg cmpsl pop cmp jle nop les out mov enter std cmc lods dec fimul mov das int3 jle js sub sbb jecxz dec jns pop call shll je push jb mov mov sbb xchg pop adcl rolb adc test stos or jmp mov push pop imul mov dec pop dec mov mov mov add lret adc fmuls jge int3 mov jb (bad) popa cwtl call sti enter cmp mov lock mov xchg arpl jl xchg sbb dec xor lods dec dec lods fldenv mov xchg xchg bound test andl dec test or dec and inc mov fmul jle xor test ds lret pushf repnz xor inc andb jo sub cld stos mov inc into cwtl push sub or adc subb loopne inc sbb jbe mov push dec cli xlat cmp push pop xchg push lods pop nop xchg mov push (bad) fisttpl jecxz addb xchg lar or dec (bad) das inc add add xchg sbb leave jecxz lahf addb cltd push xchg xor jmp lock mov add sbb js mov (bad) pop jns adc (bad) mov gs add and cmpb lret sub faddl adcb dec add test and mov mov popa cwtl and jp clc adc jns fildll mov daa sarl inc mov icebp xchg sbb incl std push xorb stc fistpl pop test popf ds mov or ja stc jnp jno mov xor pop xchg loop and cwtl int cmp lret stos add dec subb and sub push push stc cli add icebp sub cmp dec cmp pop in testb popa push stos push test hlt sbb rcl and jecxz cmpsl xchg or test je adc mov mov pop xchg adc xor jl and xor outsl mov fldcw sub and int3 push cmpsb subb scas push test adc xor jae adc inc add push mov rorb popf nop fisubr aas (bad) cmpsb xchg decb loop pop mov out sar arpl or lahf test loop je cmp mov clc mov ja mov xchg cmpsl xor ret and test mul xchg push xlat cmpsl movsb pop subb lahf popa fcoms ss mov cmpb ficoml push and les mov cmp sbb movsl test movsb outsb xchg sbbb ljmp sub adcb js push subb mov jns incb mov jae xlat aad shll addr16 push mov ljmp out popa (bad) and outsl sub fdivs lea sbb mov daa rolb and xor popf inc (bad) or (bad) stos dec mov mov mov out sti data16 (bad) xchg mov add movsb dec in pop test xchg and push add scas push pop cmp cwtl sbb xchg andl add xor in stos js xor lret xchg jp sub das push mov inc cwtl iret mov sbb adc or xchg loop xchg sbb push dec pop cmp cmp xlat out xchg push sub sarl fstps out in hlt pop sub je dec adc cmp inc mov leave enter dec rcrb (bad) into adc mov (bad) jle stc push loopne arpl pusha out and mov scas icebp or pushf sbbb mov sbb enter rolb mov fsubrp push popf sub cmp sbb inc pop std lret das xchg lret mov xchg cwtl and jo xchg sub jge push xchg repnz pop mov inc mov movsl push xchg mov xlat pusha cmp gs xchg aaa insb fildl movsb lock or adc subb stc xor sbb push (bad) dec sbb jae xchg push pop insb pop sbb cwtl push stos in adc push subb int orb rcrb enter xor sarb notl out icebp scas add mov (bad) (bad) mov je pop (bad) jb cmc loope cmp adc jbe movl dec inc out lahf push (bad) pop mov xchg push sub andb and rcrl and jle add xchg insl pop arpl nop pop es aad (bad) sbb andl and popa mov jns test sub shrb adc adc fbld push sub addr16 aam jae daa pop mov dec mov shl jecxz jb int (bad) jne cmpsb push cltd lahf xorb movsb dec lods aaa into and loope jns lcall cli repz sbb imul push or in or cmp adc imul xor pop scas (bad) pusha or sahf fistpll sbbb in mov in mov mov fdivs adc cmp pusha mov pop dec out jns pop enter mov subb cmp sbb cmp daa mov ret sbb mov fld push mov adc mov nop test clc imul daa mov mov mov jp and imul add ret jo mov inc xor xor sbbb mov add movsl cltd mov pop xor imul hlt jg jg xor xorb in popa lods lock and sti jl xor es adc mov mov and pop loope mov mov dec xchg ljmp js mov enter icebp shrl bound pusha jle stc jge les outsb ret add outsl adc cmp lret inc inc jo mov push push push xor testb pop in xchg outsb adcb dec scas fdivs movsl pop test or outsl push test or push jle divl stos lock decl or cs dec jge pop fsubrs fwait pop cmp aad mov leave xor lret jmp sbb (bad) cli jno addr16 add test shll (bad) mov sbb test test jo sub xchg inc sbbb and nop outsl sbb jmp add hlt subb mov inc jb add enter xchg insl inc xor mov xorb cmpsl xor adcb xchg inc mov mov xorb sub xor inc dec pop cld xchg sbb dec dec cmp or adc testl or sbbb enter lret iret ja mov ret test (bad) push pop test andb or mov add xor or cli test pop mov pusha adc jg cmp mov clc fwait cmp inc test cltd enter dec test scas dec inc mov stc clc shlb mov in xchg xchg call xor sbb scas cmpb stos aam (bad) stc movsb loop movsb cmpb test cmp loope inc sarl cmpsl push dec lret iret mov jo les int3 aaa in mov xchg cmpsl dec mov adc pop popf pusha pop jo xchg xor mov js push mov pop jno fdivs (bad) sbb add mov pusha or cmpsl movsb imull jo sub fistp fwait pushf dec jg lret jmp enter repz hlt iret dec cli nop cmp lds jbe push cmp pop test jge mov add inc xlat cs pop test adc insb adc lea addr16 insb (bad) cs (bad) into das test xchg test or add jle pop fcoms inc stos outsl testl insb mov lret addb and scas mov xchg scas (bad) cmp mov icebp sub dec mov mov enter fdivrl jae aam leave xchg out sbb dec mov inc jg jns pop and mov lea shl cwtl jmp dec jns in test loope jnp movl cmpb inc mov outsl sahf add sbb enter jmp (bad) jb addl xor stos push mov andb push push mov and (bad) mov mov sbb das sub nop std incb mov and sbbb subb shrl dec inc fwait sub test xchg incl dec (bad) jno inc cld test outsl xchg punpcklwd (bad) xor or aaa and lcall cmpsl inc js sbbb xor push and and fwait jp or push push or sub out push addl mov aaa cmp mov push bound ret mov cmpb out sbb scas push inc insb rorb dec imul scas test outsl fcmove and mov xchg repz jl sbbb sbb lret jp idivb jae (bad) or incl nop addr16 push xchg imul iret aaa mov pop int3 test jmp sbb lcall xor stos dec adc fimull imulb andb rorb xor roll (bad) cli add lea fisubr pop xor xchg cmpb adc out push inc add jae pop jecxz sub notl repz jno roll add js outsl or lea int xorb gs imul hlt lahf mov inc dec fs sub popf adc and mov rcrb (bad) xor iret bound and cmp lock ret subl add loope test and scas push add cmp mov outsl mov jl rol test and xor lcall mov xor arpl ja int3 jbe insb loope cmp cli int3 pop imul (bad) sbb dec test pop xorl repnz push dec ljmp jge cmp cmc mov rclb cmp or rcrb (bad) ja pusha in imul test jno sahf sub xor nop ljmp inc mov xchg inc (bad) push adc rorl imul in jae test inc pushf fldenv jno jge (bad) jnp (bad) test adc xchg je,pn test jnp pushf mov mov movsl jge fcomp in fidivr xor imul insb cmpsl lods clc rcr iret loop in sub jmp lret js sub xchg inc not adc mov adc inc inc adc dec lret jb jae pop dec pop les stc gs jnp in in mov hlt movb (bad) mov sbb bsf rcl pop lock icebp ret enter jp popf rcl (bad) cmp insb and outsl (bad) push int3 or test andl mov pop mov xlat lds push add cmpl push jl insl sub sbb mov test test daa jge mov cmp mov add loopne xor ret mov dec popa nop addl push std inc pop inc cmp lods dec inc mov sub jnp cs in adc enter jg sbb dec mov into add inc jle orb int3 mov cmp push je shrl ja daa les mov xchg mov jle or nop out iret sbb jp push add xchg cmp das mov subl inc faddl imul outsb rcrl test sub ljmp xor xchg data16 jge iret inc and xchg daa xchg mov adc addb lret icebp xor pop ret jb and jbe mov mov das mov mov inc cld fiaddl sub jle pop aad lds and loopne out pop mov dec test mov sbb iret aas jb scas cmp call js in scas add movsb add aaa rclb pop loope sub push fadd pop aaa pop test or movsb xlat cmp sbb lods and ret push push jmp xchg pop lock sbb outsl rcl sub xchg movsb mov cld nop pop aad jae mov aad test daa inc xchg xor iret xchg loopne rolb enter into adc lret pop fmul insl xchg push xor into push inc sub inc cwtl ret stos push (bad) adc xor push iret mov or stc push sbb ret mov (bad) xchg adc popf lds inc in jno cmp sbb sbb dec ret aas xchg js cmp shrb lock stos sub aad push popa call inc inc loop jmp jle add mov aam ficompl push loopne pop maskmovq divl psadbw mov pop js les andb mov xchg inc (bad) stos clc jnp (bad) mov fadds dec stos xor test dec repz insl adc jle out xor sub sbb into enter inc mov loope loop add aad je shrb test lock mov std and lcall aas lds mov pop leave sub sub push push inc cmp xchg movsl movl test nop xchg (bad) xor ja cli mov scas xchg xchg iret inc sub mov in xchg aas mov push xor fnstcw mov (bad) mov incl push incb sbb push inc loopne (bad) ja (bad) lods test cmp (bad) std sub insl cmc out jecxz sbb add xchg mov push rolb or push mov call adc lret icebp sti fistp outsw subb incl pushf insb xchg or sbb out dec pop xorb inc testl addb inc mov out ss sub adc xchg mov add (bad) rcrb scas xchg clc in or and push lods das fmull dec incl (bad) hlt sbb js,pt sarl (bad) or xchg push inc mov sbb xchg adc and sbb xor (bad) sbbb rorb sbb insb jl sahf and sarb faddl int3 dec xchg ja mov mov push xchg sub hlt outsb xorl fstps push shrb mov test push jns repz scas sub pop mov out (bad) gs stos pop cltd pusha mov in jge jg jb in or mov sub mov adc je subl ja cwtl xchg lahf loopne test adc mov pop (bad) clc mov lret xor push lods and aaa mov adc sub cwtl pop in dec packsswb insl jp lock pop loop imul in adcb jge hlt adc jmp jno xchg push ret cmp les add cltd rolb repz cmpsl and test jg pop sahf add int (bad) jp test sbbb dec test les and lods andb sub mov push dec xchg dec cwtl pop xchg mov or loop xchg add cmpsb (bad) inc fistp xor jecxz in int add or jge test adc out mov js lea in (bad) lcall test out mov and mov fldl (bad) orb dec in adcb hlt rorl (bad) je outsl loopne pop out xor adcl (bad) jno repz mov xchg iret xchg lahf pusha xchg fidiv enter adc loopne add rol fild ret loope xchg test cld xor mov dec push mov sbb iret pop neg sbb fldcw fwait pushf mov gs adc jbe gs mov xchg sbb std sub test int3 cmp adc in inc scas pop push pop cmc lods push dec sbbb addr16 cli xor xchg inc (bad) or mov dec (bad) aaa hlt popf testb daa rcrb mov cmp fadds ret outsb mov fldenv cwtl xor sti mov adc test ljmp popa jne movl scas sti push cwtl and xor test lret ja adcb adcb mov cmp ret jbe out sti mov add mov out dec sub icebp shrb pop enter pop mov aad bound jge es js adc clc scas andb fistpll xorl mov mov nop subb xor add sbb add in cmp inc fistp cmpb mov sbbb xorl loop dec and adc cmp push data16 (bad) sbb dec mov mov mov xlat dec fbld neg orb js xor pop jmp std jbe push call cmp mov out adc cwtl jo ja les ret or in mov rcrb sbb xchg cmpsl into cmpl inc scas pop mov push pop addl in loope xor cmovle (bad) daa xchg mov iret (bad) loope mov and pop pop dec adc cwtl add xchg test pop and mov fxch xor or sub mov sub in das pushf add or aad mov and add fistpl (bad) ret fbld pusha cmp and inc push sub faddl shrb add jp es ljmp sub shrl clc jge test in inc imul jmp mov iret jae mov pop js xlat inc push ret xchg (bad) imul cmp push mov bnd and mov popa add pop mov mov sti call cltd gs mov add mov dec hlt cmp test and pop int3 in xchg orl jbe pop cmpsl lds lea iret or jecxz push test adc aaa scas push cmpsb (bad) sub ficomp mov cmpsb cmp jge add sbb jmp and sbb ret and mov cld enter jmp push mov mov mov int3 adcb mov ljmp ficomp fbstp lds dec xchg shrb xchg daa test andb cmp cmp sub lahf mov cmc sbb jns,pn subb and jp mov leave xor jno icebp or dec mov add lock jle ds push aam pusha test push js jle push lcall (bad) xor test (bad) jl cmp push divl and nop pop xchg and and jnp lahf imul xor mov pop fist cmp int ret loop aaa pop mov fadd adc dec jecxz arpl cmp or sbb (bad) jg mov adc sbb insl out cs jae ss pop push nop xlat int3 pop xor ljmp nop lahf or and (bad) movsl int3 dec adc mov mov adc decl scas xor add test aaa rep pushf jne inc aam lods aad (bad) xor test add jno xchg push cmpl add push (bad) pop xchg inc (bad) push dec pop cmp ret xchg inc sub xor cmpl mov push fsubs mov and addr16 cmc and jbe jne push (bad) rcrb (bad) ret push enter sbb mov je test ret arpl sahf mov cmp ret shl mov xchg jae in pop rcll jg lcall inc add adc cld jns push or inc (bad) test subl fadd dec jo pop cli incl in or into mov clc jle pop enter gs iret dec sbb xorl (bad) pop dec add mov cs popa add aam cmp leave jnp xor push cmpsb sub data16 xorl cmp and mov scas push in bound dec jns cmp pop sub iret adcl mov (bad) jle mov push clc dec xchg ret push test bnd movsl aas lcall int3 lcall ret (bad) mov iret enter addr16 ds iret scas lcall xorb jg or rolb enter sbb popa xorl adc les xchg ret pusha fadds lea (bad) sbb xchg imul inc call inc lds stos dec mov pushf or call mov int3 jmp stc xchg pop pop sbb lods test mov out add fcomi lock pop adc push cmp repnz adc aaa (bad) xor sti adcb scas push jmp enter xor sahf and push mov movl xor sbb movsl mov adc in mov xor in fldl add mov push jnp adcb xchg mov push fcoms or sbbl push jl sahf sbb mov or fs adc test or enter rolb and out mov mulb sbb outsb add rorb iret ffreep shrl mov sub jbe test cmpsl jecxz and lds pop sub mov mov jbe and xchg or sub icebp adc push jl pop push call cwtl inc outsb leave cmp lods (bad) clc adc lds cmpsb test pop add (bad) ror cmp mov addb cmpsl xchg es push xor add and mov je mov add sbb push lock rclb testb adc push pop pop es mov lret ds aaa and insl sbbb iret outsb ror in mov in je call int3 sarb pop outsb and test orb in push hlt addb into fsubs sahf cwtl mov lret lea mov mov iret sub or dec andb jnp nop push aaa hlt lret (bad) into insl or mov data16 int3 jo xor addb repz popf fldenv adc sbb mov xchg imulb enter jae jnp pop add fwait movsl xor mov iret clc cmp repnz sbb nop pop push movsl repz ffreep aas sbbb xor dec stos (bad) bnd dec mov jnp testl cmp fsubl cmpb inc jle dec mov out and in mov dec mov dec xchg test cmp int push cmp push mov sbb mov clc lcall push cmp aaa xor xor fsubl ja pop and es mov or xor je fadds (bad) pop pop cmp scas call (bad) or jle aad sbbb xor or sahf arpl test repz inc or orb add lret outsl jmp fprem1 or mov mov (bad) xor dec (bad) sub pop and mov inc push cld or in xchg sbb aam fsubs mov inc xchg sub sbb xchg jmp push cmp dec mov xor pop and and adc nop mov (bad) aam sub clc mov test mov mov repz into lds push nop cmp pop jg sub cmp lcall or cmpsl test push scas jb scas dec roll jno xorl inc jp fistl xchg call pop pop cltd mov xchg (bad) subb push pop adc mov mov nop gs das push test jecxz addb mov mov push push (bad) mov sbb sub adc das aam pop stc shll enter les pop sahf in sahf jge add (bad) shrl rol or sub int mov mov mov sahf adc fisubl sbbb add gs adcb sarl (bad) and shlb jge add sub pusha loopne ja dec enter xchg insb orb fnstenv movsb push mov enter stos xor push mov dec lods xor (bad) scas or xor imul mov jg mov xchg mov mov pop (bad) mov jle into scas subb (bad) (bad) aaa out push mov std mov lret sub sub pop out loop jmp xor push xchg adc rcrb lds mov lcall push sti cmpsb dec mov popa adcb or jns (bad) xchg subb movsl test les (bad) jo or mov imul jg cmp loope vmwrite scas loop and (bad) jp mov (bad) lods inc (bad) inc (bad) je xor movsb xor negl push stos jbe fcompl (bad) nop fs insl mov xchg rolb add or push mov inc cwtl push xor icebp lret push test cmp and xchg inc xor mov rclb iret push lret xchg in mov (bad) incl cmp jecxz jb aam sbb pusha mov (bad) test fdivs add xlat mov js addl test push pop add clc bound xchg add ljmp adc or dec pop (bad) fsubrl cmpsl popa push push je fwait movsb sti cmp adc cmc push iret orl insb xchg test adc iret adc sbb cmp sub (bad) mov popa jecxz call addb add inc sub add cmp int iret bound pop cmp cmpsl and (bad) movsl mov mulb sub imul push mov add xchg jae or jbe ret fs mov adc jp (bad) xorl pop mov mov les jne mov (bad) sub or lea pushf fsubs mov je add gs ja in and inc loope inc adc fs gs icebp je ret mov cltd mov popa sub cmp jge mov add iret xor rolb xchg call mov clflush int3 jbe xor fisttp sbb xchg std jp sbb aad in enter jbe mov repnz (bad) fisubl fsubl test xchg mov cmpsl iret xchg lock inc rcrl test mov imull dec dec shrl enter in xchg sbb ret mov pop int outsl out jbe push push add into out xchg dec and lret fwait add sub lea add add addl enter dec test dec xlat xor movsb xchg jle test lock jg cltd xchg xchg and lods jae push fsubs ret insb adc dec addb sti xor imulb adc dec mov repz inc (bad) inc cs push and nop push xchg popf fs les mov add cmp andb add cs cwtl or (bad) jns fiaddl and xor mov ret repnz mov add sub dec push subb xor mov icebp (bad) xor jge test sbb fisubrl and das sub loop fmuls mov push iret xor (bad) mov jmp inc sti cmp xchg pop inc cmp add fincstp or inc lds scas daa cmpsb mov add jmp adc dec popf cwtl (bad) iret mov bound es adc int imul sti fwait lods mov dec iret pop popa jbe scas mov mov in std mov and sbb jmp std xchg leave inc pusha pop cmp int mov cmp and sbb mov leave jns xor inc bnd daa mov mov rolb adc cmc sbb aaa (bad) vmovupd pop pop or bound cmp enter mov pop mov mov sbb mov xchg lret sub nop pop mov das enter and or subb leave and aam xchg and adc xchg fucomi mov xchg jb incl pop fs lds lahf sub jb sub push out (bad) stos ficompl dec sub enter cwtl test and pop add fnsave les loopne lahf mov cwtl mov negl lcall jmp xchg pop fldl nop sbb sub pop dec aas xchg mov xor stos dec pop movsb or jmp addb xor push mov dec test sub insb mov addb cmp cmp (bad) mov add pop in rclb bound lahf mov sbb and test cmp or mov in lods dec pop xor mov adc xchg insb int das xor test inc leave outsl xchg scas dec xor ljmp fcomps jne cmpsl and xchg and push stos dec inc subb jg in or cmpsl push fbstp je fiadd jae dec cwtl ret xor and cmp icebp loop add add adcb mov stc mov sbb orb mov sbb clc mov inc aad and cmp pushf out addb mov lcall mov cld js sub inc movsl and pusha dec or mov insl ja out or cmp stos inc mov mov fwait mov xchg mov dec push ja lds pusha fiaddl loop jmp cmpb testb sti mov mov enter es inc push (bad) cmp mov and sahf imul mov inc mov and adcb out ffreep sub nop loope lea jno outsl lods cld add (bad) leave loop xor mov scas sti mov test clc xchg pop fs pusha cmp mov push cmp inc mov xchg popa popf sbb out test jle add lods dec out fadds inc mov xchg sub adc dec outsb lret cmpsb out (bad) mov jae dec mov fnstcw push pop inc sub jl addb fwait bound fcompl (bad) push adcb jno loope mov mov xchg jp xchg lret xor cwtl inc repz mov fistp adc jmp mov or and aas ret scas nop xchg jns xchg sub js clc in arpl fcoml pop xchg cld xlat mov test and mov fwait mov movzbl iret add fs iret mov test pop jle nop fdivrl cltd mov sbb ja enter sbb mov imul subl push sbb xchg mov cwtl and or lret cmpsl testl loopne leave jge and cld or and dec and sarl stos inc fist inc repz push sbb mov pop xor (bad) and ret xlat dec pop daa (bad) icebp imul xchg jae xorb xchg pushf mov rcll lds xchg insl sub xlat dec pop pop cmp mov sbb jge or ljmp mov cmp shlb sub (bad) cmp adc mov out mov call jns push sbb int pusha sbbb lods dec jmp and xchg dec inc pxor xor adc and mov push add cs mov sbb andb fisub lods call add test aam outsb cmp in add enter adc lcall add pop fistp int xchg js mov lret xor lahf push into push test and jle jo mov outsb fsts bound lret cmc inc nop popfw cmpl xchg out ljmp sbb gs test jno pusha fwait mov dec stc xlat mov mov mov test data16 push inc scas cmp loopne xchg inc shlb loope add je subb (bad) add addb fwait cwtl insb popf mov cmp xchg or or jae pop addb enter push push cltd mov cwtl bound sub test cmp in out in dec mov jmp bound sub jp loop push adcb cmp jbe inc test mov push roll dec out inc repz ss jg xlat cwtl dec outsb lea les pusha shrb xor sahf and test sbb inc fsubrs arpl ljmp nop (bad) jns clc das orb sub clc ljmp push push pop lock cmp pop in push sahf inc xorb dec add dec insb (bad) (bad) jno sub mov xchg sti cmp add lret gs ja arpl or adc daa pop inc adcb in test mov push sahf test xorb insl xchg js imul icebp or xchg aam subb and jle xchg popa repz push xor (bad) dec cmpb adc clc repnz bnd sti mov test inc mov fwait hlt cmp inc dec dec stos inc scas nop push mov mov movsl adcb and loopne push xorl jge and xor iret jmp (bad) mov jp loope iret fiaddl sbb jae ja pop in popa subb mov es nop add dec in mov cmp les sub xchg in ss pop (bad) (bad) adc into fsubs pop and popa add push pop adc cs sub push mov lods adc push ja mov int push mov xchg sbb inc jb xor sbb sub loop or cltd push (bad) and adc addl mov cmp (bad) cmpsl mov sbb out or and jbe pop pop mov gs mov (bad) xchg out popf stos and mov push inc fs xchg adc mov fistpl out mov xchg cmpsl or cmp adc mov cmp mov push lods xchg insb outsl inc psllq pushf or adc incb jl xor rcrb xchg leave inc ror mov stos out adc arpl mov push ds (bad) loopne ret xorl fcompl xchg frstor sahf sbbb jp daa int3 sub fbstp lods in sub icebp jp jno movsb add (bad) div loopne rcll daa cmpsb stc sub xchg ja adc clc out sub or push cmpsb inc push stc jl mov daa mov mov xor pop cmc xchg xchg xchg or jns fxch scas mov enter test xlat sub mov fsubp repnz mov inc das (bad) xor (bad) push mov or cmpb dec sbb sub push xchg adcb je inc mov or or fld inc mov dec or pop cmovno (bad) leave xchg mov mov xor mul and insb fcoml das push pop inc lahf andb mov call pop or lcall mov lret int rolb in subb hlt fs inc mov aas dec scas aaa sub repnz pop adc push xchg pushf clc incb (bad) cmp rolb in push jo loopne addb jo mov stos adc xor xor cmpb cmpsb push (bad) and std cmc (bad) into sbb out pushf data16 int (bad) daa frstor (bad) mov push cli test and xchg cltd pop test jp loope ja andb stos push (bad) or ja sbb inc iret in fldenv sub fldt test jbe stc mov and adc xchg add xchg mov test dec imul xorb add data16 pop popf cmp sbb mov mov push pop mov inc inc je and and pop cmp push repz shrl jg clc dec loopne fnstcw andb nop inc loopne push cmp jmp lcall add stos sub xlat mov neg andb mov jnp ss jge add loope pusha pop lcall adc sbb ds push cmpsb pop popa fcomps jne leave sub inc push fstl pop (bad) incb jbe jb sarl inc cmp pop inc je mov lahf or orb pop scas push insl xchg arpl nop loopne fcoml push pop xorb mov adcb dec sub int subl mov test cmp lret xchg cwtl loopne or ja xor lods notl push add jle lock and pop outsl mov jcxz mov fdivs mov out mov rcr pop addr16 mov xchg (bad) cmc inc mov cwtl sub std dec sub test push dec push icebp lcall aam pop out seta scas subb bound push cmpsl test or ds lock lods je xchg push popa fwait xchg jge xchg mov xchg mov inc or andb mov js arpl fldl notl jb subl xchg arpl (bad) cmp fldenv jb in scas mov sub fnop and test mov xchg jl cmp xor andl sbb and lret andb scas pop imul ss adc or inc xchg cmc mov or or push xorl sbb xchg insb mov cmpb pop mov xchg ficomp (bad) dec insb clc enter xchg ret xchg stos (bad) out sub mov arpl adcb cmpb mov fildll cwtl xchg aaa enter cmc pop xor sti test dec sbbb and ret mov lret test sbbb pop inc jmp add (bad) mov ds enter je sbbb (bad) sbb sub sub cwtl (bad) push lahf cld push rcrb outsl test movsl push pusha fsubrs out addr16 sbb and jl shll stc aad cmp add subb pusha mov fadd xor icebp push sub (bad) movsl movsb push push out in lods imul insl std loop dec lea xchg fsubs sbb mov int3 cmp jp xor stos out lock fs push (bad) shlb mov push cmp xlat mov dec fild cmp lock fistpl fdivrs adc xor (bad) jecxz mov faddl fs (bad) xor adc mov jne testl jae jl push xor adcb cmp cli mov mov xchg mov push pop and mov sahf or test or inc mov sahf arpl cmp cmpsb sub add repnz aas or xor popf movsb faddl rcr stc mov cli add sbb (bad) xor dec dec lret es jae sti out js outsb sarl ret enter ffree mov jns mov std push adcb imul cmpsb das repnz cld (bad) mov sbb adcb int subb stos push loope cmp or gs jo xchg subps test pop add mov nop xchg inc out mov jno shlb mov fwait iret jnp mov clc and push scas sub push add fsub fmuls inc jnp ret mov xchg mov mov jge fwait arpl es hlt sbbb pushf and mov repnz aam mov (bad) in jb inc cmp test pop sbb imul inc in mov cmp push movsb pop jns (bad) mov sub stc aam cmp pop add mov das enter or pop add sbb mov lcall add fiaddl cmp adc pop sbb xchg iret es shll ret add inc das repnz mov jnp jnp jmp inc aaa inc in mov inc stos iret add mov cmp negb insl repz jmp lret subb leave push es add cmpl testl jg in inc mov or cmp lea mov push iret push cmp gs mov cli and and mov push jno cmp jge and xor push jmp jno ret mov xchg jne dec sbb negb sub and mov push cmp icebp cli and mov adc addr16 fisttpll (bad) cmc out cmp int3 and scas inc pop mov mov das or mov add stos mov clc xchg mov xchg mov mov sarb movsb xchg adc roll inc jg or cmpl ret dec mov push (bad) sub pusha stc js sahf iret jecxz cmpb ret js xor lcall jnp test roll outsl mov jns fstpt outsl mov cli lahf xor xor pop ja das mov ds fdivl andl adc ds mov pop mov int3 clc jnp aaa cmp std sbb out pop repz or nop cmpsb mov outsl mov xor insb pop xchg mov into fnstenv cltd enter (bad) jne test xchg xor pop lcall out or ret xor mov xor pop push arpl pop cmpb lock les jle inc std addl (bad) cmpsb mov add repz imul test dec movsl adc pop out adc and int mov and adc subb jbe cltd int sbbb lods inc fdivs xchg mov fistl scas dec xchg xchg lock push jo mov xor jl out mov push (bad) push mov sub adcb adc push cmp adc xlat loop les xchg inc mov test addb insb xor aad out popa pop inc add cmp mov lahf arpl jge inc in cld add pushf sub dec insl add adcb mov and and test mov cmp enter inc incl pop mov lea mov xchg and das roll xor int3 jb or mov or sti xorl mov fisttpl aaa xor jge psubd dec popa mov cmp dec stos adcl nop push mov pop xchg lret xor xchg xor mov xor mov test mov jbe or pop jl or mov test push lahf xor adcb nop fisubl sub movsb scas jl fsubrp fildl inc lret (bad) cli lahf inc inc lret push xorb arpl jecxz pop test ficom or outsb std leave adc pop add mov cmpsl xchg arpl fiaddl xor jb xor xor pop sbb push int3 ja (bad) or mov cld pop pushf cmpb popa cmpsl ret fwait push and andb dec out or sub mov roll cltd xchg out ja cld (bad) loope daa sub mov add xchg mov aas mov xor std lret inc mov mov xor std sti pop or push mov jnp add test dec mov lcall push lods imul sub mov iret sbb out fldenv dec js add je arpl jge ret fcoms pop add in cmpsl movsl pusha insl jecxz in lea xor xchg jmp nop xor mov cmp and notl push fisubl lahf fdivl lahf or test fisubr mul xchg inc inc jge dec cmp (bad) (bad) mov sbb scas jmp iret pop lock int3 cmp adc hlt (bad) pop xor mov mov jmp and dec mov cmp pop pop add jmp cmpsl enter cld inc xorb test cmpb sub pop and (bad) mov std lcall imul xorb and lods xlat sub mov inc pop adcb sahf mov into enter mov xor (bad) xor mov enter lea cmp xchg fild pop adcb lahf push imul movsl jo push hlt sbb sbb xchg mov or cmp pop cwtl or (bad) sub or ja sub xchg mov aad inc outsb adcb dec int bound mov aaa stos adc xchg cmp sub mov xchg stos dec out iret data16 fsub cwtl sarb sti int sbb (bad) adc nop mov insb and mov jo repz mov cmp add movsb fbstp daa gs jle fmull inc popw mov pop les loopne jns xchg mov or mov dec iret lods adc pop mov mov jns pop outsb xor mov cltd cli js adcl push mov out (bad) in dec shrb (bad) out xchg shr fist rclb ja fisub bound ret pop mov and (bad) pusha outsl inc and arpl xchg test sub gs loope xchg pop inc cld insl insb adc imul xchg iret add ret cmp push mov movsl cltd and in lea and xor (bad) push push jne pushf push jns push fsubrl push pop cmp repz inc call mov push mov ja adc in push or iret pop add loop aam cltd into mov inc or or test lds sub stc jecxz pop pushf pop xchg adc push inc fadd or mov fiaddl sbb gs test add fiadd add cmpsl stc cmp dec iret push add inc push aas xor fisttpl inc and popa repnz int3 cli aam enter xchg insl repnz (bad) addr16 dec dec sahf aas xor int3 jecxz int3 cmp enter sub mov je fldt push inc movl add dec cwtl orb lea xor adc pushf out fxch sbb je jnp add pusha mov push mov repnz dec or xor test or (bad) or cli jge mov fstl (bad) lcall push fadd cli cmc pop add inc inc ja int sub aaa test rolb mov pop xor insl mov push popa sub ficompl add cmp jle mov aas out out and cmp add inc bound shl iret mov jne dec bound push out cli ljmp or push xchg into mov lock addl (bad) gs cwtl mov lds jae,pt jns sbb mov iret pop or dec xchg ret mov mov push out outsb xchg mov loope nop mov jge dec xchg fsub cmp xchg in mov data16 sub loope sbb repnz cli data16 adc jne mov jnp test dec push scas enter iret inc out mov dec dec adc or push pushf movsb outsb xchg jae xchg inc addb sub scas leave xor enter mov cmpsl xchg cmp jg push mov fbld or sbbb out pop sub xchg bound mov mov xorl test xchg rclb mov xchg lock adc dec jle pop adc and pop test mov orb xor pop jmp push loopne mov mov out push sub jne cmp sbb test mov push and aas dec mov pop pop jge xor pop test sbbb pop and jnp cmpb (bad) xor test mov and dec scas mov xchg (bad) xchg add popf mov add xchg fs xchg hlt jp inc test rolb ret inc adcb mov mov ljmp sbbb in sbb mov push outsb push out clc mov fsubs xor lock ret ds (bad) (bad) fnstcw sub adc das xor stos add jb addr16 std pop cltd cmp test fistl push pop ds adc js ret cmpb loop imul xchg push sub imul mov (bad) sub jp jbe out scas fistpll xor repz paddd popf addb (bad) xchg out mov mov sub je xchg mov data16 pop xorl push testl imul xlat test mov out popf xchg cmpsl adc ret nop cltd bound ljmp jo inc mov aas out xor nop xchg dec jge mov push orb jmp dec mov jnp test je cld xchg outsb push mov dec test or mov aas sbb (bad) out or mov jns xor test pop les lds sub sbb aad jo test int cmp cmpsl sub or cmp arpl nop cli jbe sbb cmpsl xchg or xchg xchg gs je xorb cmp jle mov dec mov jl push movsb sub mov sub out adc or lahf xor adc icebp std mov (bad) mov mov pop shr xor pushf pop cld out mov movl dec pushf insb inc add ret fadds sbb add stos xor mov cmpl and test push xor out andb enter nop lret xchg push jl xchg adc dec pop (bad) mov push sbbb jge sbb mov je mov js jae pop outsb sub xchg jo sar les jne xchg pop loopne xor ret cmp iret into mull inc mov shr xchg ror jle int3 iret lods push loopne push pop adc adc push pushf pushf ds xchg xchg adc cmpsb pop popa fs imul pop cmc xor iretw test cmp xchg ljmp ds loopne movl gs add outsb cmp jge adc (bad) outsb sbbl data16 xchg nop ret inc sub std xor cmp jne mov xchg pop (bad) pop ret aad stos divb jnp jno jae xor ss inc mov mov xor (bad) iret and aam xchg push dec stos pop hlt sub clc (bad) xchg fwait (bad) (bad) sub cmpl adc aas rorb dec fs subb out mov test or popa push rolb jp icebp add lock dec test pop lcall orb jecxz mov jns mov subb hlt scas push inc sub test xchg sbb out or clc cltd cmpsl andb jnp jl subb imul fsubr pop popf repz cmp lret addr16 lahf scas pop xchg xor or inc xor dec loope and imul jmp out (bad) inc mov xchg sahf pop jb sbb ficompl andb and or js pop xchg (bad) sbb out test cmp xchg arpl and leave push testl addr16 mov mov icebp jge xchg bound xor lret in adc mov rorb aam cmpsb inc stc pop push scas xorb mov and (bad) sbb sbb mov xchg jg mov daa bswap mov (bad) mov (bad) jo sbb dec jb loopne inc ret insb lods jnp inc movsb fs add in or inc loopne mov inc mov idivb std lock mov cwtl mov dec push cmpb push arpl push push pop or addb mov cmp (bad) push imul mov cmpsl jae inc dec mov (bad) jecxz dec dec xorb imul mov jle xor lock lret push andb inc mov rcrl mov nop fsubrs push inc test imul push push mov (bad) mov add xor test jo mov fildll push lods add fwait das xorl cmp aaa int3 lcall add repnz xchg xor inc inc mov dec add jns fs mov rcll stos scas jmp cltd addl sbbl scas xorb adc roll or pushf dec out adc test jne mov mov adc mov popa dec aad xchg scas cs popa sub out addr16 inc jmp dec ret pop inc inc cltd mov insb cmpsb pusha xchg or jae mov andb xchg sub and or xor adc cmp dec aad mov xchg cwtl inc jnp add pusha pop mov mov add inc push sbb dec push scas xorb (bad) lcall dec inc dec cmp mov sbb add (bad) jns lcall addb push dec pop jl pop pop dec scas popa or sub jns inc xchg cmp adcb incl cmpsl pop es sbb cmp call (bad) test fimul add lahf push mov lods icebp test mov out addb sbb sbb out sbb test jnp and nop pop pop daa jl sbb ja cltd in push inc mov cmpsb xchg jne fsts mov cmp (bad) sbb sbb mov cmpsb das inc cmpsl (bad) lods cld xchg outsl std push mov stc mov das test jae insb add dec imul insl xor js inc (bad) sbb sbbb outsl jp (bad) push cmpb cmp lahf dec or test push lock das xlat push loopne imul arpl enter mov orl add loope imull add shl inc sbb cmpb lahf add pop andb mov (bad) jbe cmp lret sub (bad) pusha cmc or (bad) adc sub mov mov mov testl and out push jnp push mov test and add sbbb mov cs lret push sub je cmc ljmp fbld clc adc sub je mov pop lret test adcb ret mov outsb subb mov ds fildl in push test pop sbbb xor dec dec dec jb jno xlat push subb ds mov mov sbb dec fidivl cltd roll pusha mov sbb imul sbbb je inc cli jno mov test dec push popf xlat xchg pop xchg loope and sbb pop in or (bad) cmp xorb shl and lahf xor push xchg sbb fiaddl pusha mov jmp cmp test cmp xorb addb rcl fisubr mov xlat inc inc lahf jmp addb pop sahf and aaa inc or enter mov cwtl nop (bad) ljmp cmp sti cwtl ss aaa (bad) cwtl nop mov test xor bound sub lock and and push mov jle shll stc pop aad inc sub int3 push scas outsl xchg jge xor jns fwait cmp sbb xlat icebp mov mov cmp jae xor push out mov jae addl push cmp sarl push jecxz xchg sbb cmp repz cmpsb cwtl stos sub bound bound or aad pop stos push jecxz sbbb mov sbb push add insl lds dec jno cwtl stc dec lods push sbb or pop lcall sub sub call aam or ja movsl (bad) out movl test xor ret push (bad) cld (bad) (bad) negb xchg mov push cmpsl or aas adcb jo xchg scas cmp and or add daa imul mov dec sbb lret jg mov sbb push js sub and rcll mov fimul test (bad) or jno lahf sbb ja,pt inc (bad) shrl aaa adcb add test mov cmpb cli xor lcall sbb lock aad enter int3 jl enter je push das sbb push adc outsb xchg (bad) mov push cmc es fimull addr16 je leave push dec cmpl xchg popa mov pop or push pop xor cmp xor pop rcrb xchg lahf mov inc xlat lods neg ljmp int add pusha jmp addb sub sbb and mov xchg add jae out movsl xor and pop or in leave fmuls push jns je repnz addb pop cmpsb cwtl clc call (bad) sub fs enter inc icebp (bad) (bad) out add loopne mov sub test xchg jnp inc lock mov or and imul lds inc mov int3 xor jle test movsl xchg add add mov pop subl test in jbe cwtl dec stos dec fldl adc mov push mov ja xorb jmp mov test sbbl sub into cmp iret xchg pop test cmp cmp aaa pop xchg js,pn mov dec (bad) lea jp adc jo enter daa or in push pusha mov fcompl ret adc (bad) mov pop mov cmp lcall xorl and inc (bad) (bad) jb xor andb xor push cmc push addb mov sbb sub cmp cmpb jle xor sbb and jmp lods mov sub popf es test vpmaddwd imul cmp test jp roll pop popf dec mov lods subb push jg mov icebp orb mov rolb inc clc int mov cmpl or mov and (bad) je push push nop gs test or loop adc lret sub cmp negb push enter jne lea pop push jns mov hlt cmpl lds push mov push fcompl xchg lcall pop daa mov bound push sbb andl in rol cmp sbb aaa push pushf sub adc scas nop cwtl outsb (bad) lods jle fild aaa int cmp cmpsl mov sub pop cld cmpsb test inc xor sbbb mov adc clc cli add js mov dec mov shrl loopne mov shl arpl cmp or jno jae and sbb mov or sbb inc push sti test mov inc mov mov sub cwtl add push out or inc mov ret icebp dec jl enter enter jg jae pop rcll mov imul push ja pmaddwd mov mov jmp imul test cmp cld (bad) jae adc sbb pop test ja test jmp push add call push sbb movsb push fucomi (bad) movsb mov push mov mov mov subb rol adc daa fiaddl mov pop xchg cmp pop sub adc push fstl inc je in adc xor out test (bad) cmp xor inc cmpl loope aas lds lahf pusha cli lds jb inc jge xchg fistpl testb orb ljmp cmpsl pop fs mov jle mov nop cmp fstps fisttp sti add je cwtl inc inc repnz xchg shr xchg xchg (bad) insb jo sbb sub cli pushf and adc mov aas xchg mov in fimul (bad) or cli sbb icebp or mov (bad) cwtl nop sub lret push bound inc jne sbb fcoms movsl jl jle hlt arpl dec test jp mov movl adc xchg pop mov adc lods clc dec jmp cld add stos addb and jo lds mov mov js sbb push sbb jo hlt pop nop out lret stc sub mov (bad) or mov testl (bad) nop push mov mov xchg fwait (bad) std mov hlt cmp adc sbbl xor sbb mov dec sub jmp xor dec mov cli adc insl or cmp es dec nop ret or scas outsb push imul dec mov loope adc jae xchg and or or push xchg dec and nop shrb je cmp cmc out iret jmp mov stc and (bad) sub push sbb (bad) cmpsl adc ret or popf (bad) loop fmuls inc adc add mov mov into add call xor inc cmp unpcklps jp aaa add add sbb test data16 movsl int3 mov movl mov mov fsubs (bad) icebp add lock mov (bad) sbb and fcmovu dec scas sub stos out pop dec mov ficom xchg cmpb popf pop mov scas push cmp mov mov subb or xor rolb xor repnz cmp add test test js out or add cmp (bad) std mov jnp imul scas arpl jnp xorb sbb xorb xor push divl int3 lods sar test fwait (bad) xor test gs jmp add xchg outsl test xor sbbb push mov cmc cli mov fs or jbe add sub xchg lea jmp push int3 add cmpsl or push push dec mov fwait mov and mov popa iret (bad) or mov push mov cmp subb adc xor jae sbb push movsl jmp push test rcl cmp insb (bad) stos or lock sub jbe mov test sub push std mov int3 push xlat leave inc movsb into add leave roll mov shrl jecxz add cmp and push sti and enter or addl fiaddl test movsb out test ss ret iret jb nop repz adc enter in push add mov fist jae rcr inc xor cmpsl aaa sbb mov dec sbb xor jo add mov mov js lds out outsb daa lahf loopne mov int3 and sbb ret or int adc add sub jns in xor push push mov nop or or sub test pop not add jmp mov push lods test test push mov cmp xchg addr16 add ret jg shll daa mov cmp fmuls mov adc stc mov test pop cmpsl shrl out xor inc mov ss push jge mov push or adc and mov enter mov xchg and pop xorb or cmp fs dec mov adc push jge cs cmp fwait or loop cwtl gs std xor (bad) (bad) imul push xor adc outsb sbbl cwtl fsubl mov xor xchg and imul adc scas (bad) xor in pop push popf (bad) or ret cmp xorb mov xchg fnsave testl (bad) jno xchg mov cmc push xor fsub into mov or push mov add fsubr inc cltd gs jb mov jae jl pop ficompl pop lods std adc mov cmp and insb mov jno add addb lcall push hlt mov mov loope push iret jne xchg adc dec push lods cld add push cmp movsl pop sbb fstl sbb adcb jo clc fwait dec pop lods mov add and fdivr mov mov xor orb dec xchg jo ljmp int3 (bad) subb xchg popa jmp psubd add cmp fsubrl pop mov je insl movsb into out pop enter jle jl sub mov lea xor fild outsb testb test clc jne add cwtl rorb (bad) imul fs (bad) cli sbb sahf icebp add sub orb dec stos cmc or cmp push mov xchg pop aam jbe mov xchg fimull push mov repz mov xchg inc pop scas stc push lods test inc xor roll adcb inc jno fisubl and sbb or xchg out cmc test lock cli jle sbb inc xorl je (bad) jp inc ss jp incb fwait pop pop pop andb outsl xchg xchg imul movsb pop nop nop (bad) lock and std sub pop scas add mov push test shll data16 dec ret ret mov cli mov adc push fild jmp in mov lods sbb jecxz mov (bad) repnz and (bad) inc in mov shrb lret movb in test fstps xor pop loope jnp (bad) (bad) dec xlat in pop dec jnp cmpsl shrl lods loope loopne scas inc sub inc inc push adc outsb lret add push aam jo jp (bad) mov imul mov pop jmp out (bad) or test insb cs mov mov mov scas push ds add imul ret repz gs les adc iret fbld xor mov cmp inc mov pushf (bad) adc test (bad) sbb pusha inc orl gs sbbl and (bad) sub and test popa sub inc mov jg mov mov enter adc xor push popa sbb lahf loope nop (bad) (bad) loopne dec mov push in stos int3 popa in addr16 push test xlat jbe (bad) dec ds sbb dec add xchg aaa ljmp cmp mov add inc or ret gs sti adc push dec pop movl fcomps xchg jo popa lahf push ja test test movsl push mov jg ljmp popa mov fisubr cmpb and jbe jl aas push xor dec mov adc cmp jbe mov clc mov sarb xor aam sub sarb loopne,pt icebp mov push xorb movsl outsb push nop mov stc jg cmp nop cli cld js sub int int3 (bad) cwtl sbb inc jg fiaddl int3 faddl cmc add ficom ljmp jne (bad) cmc or imul enter int3 sub nop or pop stos cmp cltd (bad) pop out jp call icebp add movl int xchg enter test das inc lret dec jle add shr outsb loopne loop fidivl xor adc inc mov push ffreep sub jmp mov push in and add and xchg mov xchg jae xor lods pop ss (bad) mov adc pop xor xchg pop mov xor in jno adc clc push or mov nop iret lock jo es jl xchg and xchg xlat push push xchg data16 into xorl push stc sub js xchg fildl cmpb push clc iret sub mov aaa lret dec ret nop imul orb xor daa push std loop sahf jns or ret cmp ljmp push lods orb mov adcb jne out mov mov in or dec cltd and or adcb xor fwait fs imul or mov pop adc ja pop lcallw adcb mov sbbl scas js testl imul pop leave push dec cmpl outsb loope xorl mulb nop or out (bad) jbe outsb loop adc jo sub mov int (bad) xchg out movsb jo pop lcall mov sti and (bad) pop push or out loopne test pmaddwd fldl (bad) out shll fs sarb cmp arpl rorl mov int3 (bad) jb mov xchg and mov push sarb or cmp xor sbbb fwait ss lret push sbb ja xchg subb jb mov xchg pop addb xor push test jp movl inc dec xorb (bad) mov outsb (bad) mov je gs dec jb sub (bad) add test out ja popf mov dec and aaa fldl shl jno not mov (bad) ucomiss push mov stc pushf dec test jb xor lea push pop jg adc add xchg and mov fisub (bad) dec xlat shlb pop cwtl push jne sub dec pop stos lock fs sub sarl lock in test inc mov adc mov cs rorl sub xlat and test and rcrb enter mov subl mov jb jo mov jns fisttpl sbb sbb enter mov dec dec jne scas xchg lahf jbe xchg lea je add fwait out inc lret sbb sbbb lock shrl (bad) push push xchg (bad) push xor cwtl xlat pusha (bad) mov mov sti inc loope xchg insb push cmpsl inc jbe adc adc push test bound jns mov imul out test inc xor jnp pusha test add push and fild xor test pop add pushl dec cld xchg (bad) xor xor jp ret data16 or loop push xorb inc (bad) shrb jno insb rolb aaa mov sbb das lret inc or call in daa and sbb adc test lahf adc dec push jmp mov and add iret xchg push pop fld pop test (bad) add push shlb addl notl pusha (bad) aas (bad) adc in aam xchg orb xor jo (bad) mov jnp scas jbe cmpsl adc jno or mov push mov mov mulb ret ss leave fsubr in sub (bad) xor iret fptan lds lret hlt imul bound movsb (bad) inc cmc push ficompl mov daa jb mov xchg rcr loopne mov dec jns cld jle push jecxz cmpl pop in in movsb adcb stos dec (bad) push enter jge icebp adc add inc or mov roll or lods jbe or cmp or roll clc jo js pusha mov addb icebp xchg sub and add loope pop fs xor subb ja popa stos ljmp (bad) out aas les jb (bad) enter bound sbb sbb mov jle xorb lcall cld dec mov clc add or fsubs scas lahf push xchg xchg imul test mov icebp or cld dec inc push fsubrl loope cltd mov ficoml pop xchg or call xchg pop mov mov (bad) loopne pop (bad) cmp mov rorb jno test (bad) and xchg dec pop jmp jno subl jo sbb rorl pop out movsb push fldcw dec mov jecxz lret mov xlat out xor (bad) jge mov nop xor xchg data16 dec pop fwait mov mov stos push nop jl inc mov sbb mov lods sub (bad) jb cs in add popa push fsubrs leave xor add add scas cmp cmp test jecxz mov mov mov cmpb pop dec andb mov push or xlat fisubl sbb (bad) cmpsb adc test mov push inc add (bad) lret ja cmpb repz or inc test xor pop les fdivs stc (bad) das shlb icebp or in mov cmc test jnp fildl ret (bad) cmp adc imul (bad) ss mov xchg (bad) jo (bad) lret xor ret enter and dec pusha xchg inc jnp inc mov aad inc insl add sub outsb mov cmp inc sbb inc fist mov mov fucomi inc sub mov int mov in loope orb icebp xor inc xorb ds adc stos push and dec test js mov in adc testl pop sub sbb and (bad) xor mov iret test xchg test adc or dec js xchg out push lods push loope jae enter addl jl cwtl pop adc inc fisttp cmp in or rol or cli xchg mov lcall subb fildl xor push add fstl push cmpsl cmp ja add and mov mov lahf scas cmc seta enter or insl jnp inc add outsl ret or inc cwtl push inc inc jmp add out testl mov cmpl in mov adc in jae sbbb mov adcb (bad) je mov call rcrl rcrl lods push out orb (bad) pop cwtl mov in dec out cmc addb arpl mov popf nop inc cmp (bad) scas xchg jae stos sub sub jle mov aaa inc xchg adc mov jge inc sub mov adc lret jne sbb mov pop and loopne test cmp inc sti stos rolb add sub cli or cli in pop daa (bad) mov add js pop fiaddl mov (bad) dec stc test sub inc imul mov cmpsb xchg jbe inc lock add int insb push push mov inc xor test mov aas add sub pop hlt mov imul inc lret mov mov fwait loope cli sbb int loopne popa into push and xchg push inc cli cmp (bad) fcmovb js out or or insl cmp pop mov js (bad) push movsl nop es or mov bound aaa lods xor xor push push ss pop imul sub adc mov dec lret sub or icebp inc or arpl pop popf mov mov roll dec xor addb int adc lods out inc adc popa subb orl mov leave push pop adcb jo hlt (bad) neg mov (bad) dec loope rcrl outsl lahf fs mov xlat shll cmpb xor clc xchg add xchg aas cmpb fisttpll sbb loopne es lock dec sbb mov xchg out iret aaa or das leave (bad) cmpl bound lods xor lret into addr16 jnp scas cmc jle fwait jmp nop cmp push cltd jmp lcall adc (bad) ds mov add idiv ja imul rcl jno mov push popa add ret mov xchg push xchg fwait jge imul xchg fstpl add ret aad lcall add inc inc mov cmpb and push into fsubs lret sub orb out stos push sarb cld xor or xor fsubs (bad) aaa sbb jbe mov pop cwtl int fnstcw (bad) in xlat sbb add ja and inc mov xchg subl cwtl sbb loopne lea mov push (bad) lret lock and jge lock jne and test and mov or mov jae and cmp cmp lods dec jg (bad) mov push mov xor andb ret jge sbb add xlat subb lret cmp sbb jle out xchg loopne movsl push mov xor dec stos mov (bad) stc enter (bad) mov pusha fsubs sbb andb rcr mov mov out shll jae jmp cmpsl das aam fcomps cmp dec lods push sbb out dec jb test mov nop iret ljmp pop (bad) stc (bad) mov (bad) push and mov outsb pop sub push xchg data16 hlt xchg (bad) sub es inc sub cmpsl push mov nop stos push or mov sub cmp sbb xorl repnz dec test mov sbbl push pusha ja cmp mov ret or repnz insl enter xchg or cmpsb imul lret ret dec mov mov fsubrs xor and or cmp dec mov test and push jns pop cs adc mov ret xchg jae sub repnz jnp (bad) loope push aaa sub add mov mov out loopne cmp xchg mov fisubl inc iret mov (bad) jne sub jae lds mov outsl dec test xchg data16 cmpsl aaa jno stc add or lods lret xor sbbb clc xchg mov cwtl jnp test lcall les ret sub test loope ret outsb xlat cmpsl loop mull jl orb mov adcb xchg mov bnd mov jo movsb pop jne outsb xchg cmp xchg cmp fstps push aas inc lods and fdiv movsl insl add mov lds mov cwtl pop xlat std sub xchg in mov mov mov stos fdiv inc ret ret scas movsl sbb cld in sbb (bad) pop mov xor push xchg jbe repnz arpl mov push sbb jne stos adc (bad) mov mov sub jl push mov addr16 mov lret bound fs add fneni(8087 movsl iret xchg insl or adc (bad) int3 cmpsl cmpl jl fidivrl shlb je ljmp ret jmp test rcrb fistp mov clc in out roll add fdivl xchg jnp (bad) xchg andl int3 inc test mov sbb pop xor les std or cmp repz lcall popl loop std jge cmp cmp ljmp or xchg adc ret xor cmpsb stos pop mov mov test dec mov pusha jbe adc sub fsubs jo incb int3 es clc mov scas ja or outsl fdivs mov jno adc adc mov orb jns xlat pushf clc imul mov sub jns insb lahf push test xor and pusha jmp jmp mov cmp cmp cmp push mov inc jecxz stos clc jmp jecxz jl nop test cmc mov xchg mov pop add mov stc push jl stc jecxz dec in cmp orb shll sbbb stc fistpl cmpl push test jae xorb mov sbbl jb push sub mov xor or popa add sbb jbe mov xor inc dec scas xorb jmp pop ret mov mov mov (bad) mov adc sbbb or add scas leave xor rclb and lret cwtl or sbb inc dec jmp jmp andb jne jp xor inc inc pop cmp xor fs idivb in ljmp sbbb jo test cmp ja xor mov je add and pop subb cmpsl mov outsb mov insl jbe sbb insb mov sbb mov xor inc cmpb sbb sbb (bad) mov xchg adc (bad) test fs pushf pop pop nop lahf xchg scas dec iret jnp jle addl add loop jg (bad) stos and and sbb shrb or add in test mov jmp push cli js jno sarb fdivrl subl xlat das dec mov test cmp movsl push stc addb inc jmp div nop or pop xchg pusha jo pop roll xchg lret sub nop negl test push stos dec mov cmp out clc orb aam lods fdivs into call inc jp mov addr16 daa or xchg cmpsl test xor dec mov add (bad) jmp xchg add je xorb pop sarl adc push dec mov mov ljmp outsl and xchg addb push out mov or sub xlat xor sbb sbb push cmpl shrb xchg insb in adc xchg lahf adc pop xchg or sub andb add fmuls mov cmp mov iret ljmp loope das std sar incl jo mov stos je inc cmp (bad) sub mov push fstps and subb adcl nop lods mov inc andl push dec les lea das int3 into cs pop cltd jbe test faddl scas add xor mov sbb in mov stos dec cmpb test (bad) aaa cwtl lret loope cld lds push aas mov inc xorb aas adc sub lods lahf pushl xor lea push cmpsb pop mov mov jl scas test xor movsl pop mov cmp int3 iret xor (bad) cltd sub repz jnp jg sub repnz nop shll js test popa sahf rorb mov iret imul arpl sbb or fidivr jmp or mov mov xchg xlat outsl pushf mov push mov test pop in cmp roll xor iret std ror sarl add mov cmp aad ljmp int3 cmp sub sub aam addl dec cmp mov dec lods and mov mov ret inc pop test push sbb cmp mov je inc cmp push in leave aaa xor dec das add stc cli jae cltd and popa and push add push push rcll pop mov lods cmpsl jge fcoms push (bad) jo mov lods jbe cmp fsubl movsl jo clc sub dec fcmovbe cmpl mov sub push inc jecxz test fdivrl and xor inc scas fdiv or mov add xchg push test sub cwtl bound iret outsb add jno mov popa mov or inc xor jge rorb int3 jg gs insl pop (bad) jbe inc jmp (bad) pop inc sti push out (bad) out mov push jmp subb and inc jge je jle jg fmul add orl add mov fs sbb adc push enter das sbb mov push negb (bad) sbb dec inc sbb pop test mov or (bad) repz (bad) mov xchg jbe in push test lods xor xlat inc mov (bad) imul loop cmp loope or adc push dec lea ja sbb adc mov push cmp rcrb sub pop cmp cmc mul xor imul mov addr16 ss sar (bad) cmpsl mov and sti ret mov (bad) or sub pop shr js sub iret rolb inc inc iret fldt pop xchg jle mov stc lret mov sbb jb push out fldcw fadds mov xchg in jns mov das iret outsl mov std mov mov mov rolb mov (bad) test cmp or jne test lock push sahf fild and ljmp test push add je xor mov addb fucomip popa mov mov push inc adc popa pusha jne mov push lock xchg aad and or or mov xor or jmp mov cwtl outsl xor subb dec pop inc ljmp ret inc arpl xchg (bad) mov add inc lret ror jl adc xor jle push jecxz pop (bad) fwait arpl das test subb pop and inc mov sbb nop imul pusha mov mov add add adc and pop or sbbb cmc add leave loopne adc add mov lock or or mov or call xor loopne les push fsubrl arpl cmp cmp sub das pushl lods pop movsl cmpsl mov lock cmp es (bad) push sub inc out movsb pop inc out movsl xor xchg xchg pop xorb adc (bad) jns insb mov xor addb (bad) push test jl pop mov cli mov insl lcall enter pop fs sbb push stc movsl pop ret rcll inc cmpl iret imul mov (bad) fwait icebp sub pop iret sub fldcw inc xchg mov pushf mov (bad) pop into and cmc mov mov jp xor and pop mov int lods jle call outsl test into (bad) dec (bad) fist out lds cmp pop xchg movsl adc fist mov push xor std add lea nop pushf cmpsb xor mov stos rorb pop xor jle outsl push js push jo sub adc push adc leave pusha lret mov iret add push jae sbb jl sbb ret sub inc aad push jle into int add cmp gs leave cmp iret or xchg mov dec nop mov add inc or stos pop cmp xchg dec fidivl push push jge xchg or dec pusha mov cmp cwtl daa push mov scas xchg iret stc jnp in lods (bad) cmp test lods inc push cmpsl sub push movsb js std arpl mov (bad) mov push pop iret add mov in ds inc push dec add cmp dec mov andl shl lret adc sbb sti xchg xor mov cmp loope (bad) push inc clc cmp cmp mov jge shl iret or outsb lea std mov or jnp adc cmp (bad) mov jne and mov outsl ret mov (bad) and sti xchg (bad) mov (bad) mov fmull or imul and ljmp and or mov dec les test call hlt mov mov or test lea mov xor into ljmp pop aaa and clc (bad) push pop repnz xor mov call inc movsl dec out lret mov mov movsl mov fdivl in push jne push xor push into or fnstenv mov xchg push lock add outsb mov dec hlt aad and loop sub enter add lret cmp adc xchg pop (bad) (bad) xor loopne fsubs sar jae xchg fnstsw dec push cmpsb jnp xchg insl mov popa (bad) arpl pop mov jb sarb push inc mov cwtl adc mov push add and fidivrl mov cmp idivb mov adc jl jge and pop daa and in lret ret int popa adc popw arpl shlb sub scas dec scas mov xchg add mov repnz cmpsl test cs pop repz orb mov pop sub subb push sub rolb loopne add (bad) mov push movsl jno dec out mov or sub jp in cli pop inc mov and dec sub pop insl sub popf xorb cmp sahf inc clc mov ret pushf and popa imul push subb adc sbbb out les iret dec cmp andb sbb jp incl or mov sub mov xbegin (bad) addr16 repnz mov xchg and test cli movsl leave sub addb out enter sbb arpl add pause inc fldt sbb mov stos push orb mov ja xchg pop cltd add sti mov xor cmp sub ja and xchg sub andl mov dec stos and outsb add out cmpb pop into sub test xor sti jge (bad) enter mov dec orb lock stos pop inc push aam sbbb xchg jmp mov cwtl data16 or add orb loope sbb xchg jo pop xchg add test sub jns jge mov push clc mov sub inc mov leave adc dec test cmpb andb jns adc push in addb mov xlat sahf sbbb test mov adc pop mov fcomps mov or adcb imul sub movsl fcomps and cmpb sub or test cmp mov dec repnz and push and cmpb xor fcomps sbb mov or (bad) jne add add add push stos mov jbe cs mov (bad) mov test cwtl cmp and sbb cmp cmp ficom in ret push push mov xchg test xor xchg test cmp rolb lret xor sbb lock and jns pop out push sbbb or loopne pop roll hlt dec loopne mov test (bad) std or or (bad) outsl adc (bad) test cmp leave stc popf pusha mov loop xor jp lcall adc mov mov mov test add inc xor adcb jg mull xlat clc sbbb jmp mov outsl jo mov loopne pop xor xchg lcall xor es clc shrl imul sub xchg addl or cmp mov mov rclb ret and mov nop adc negl jmp popf imul js cmpb stc adc test call jl mov sbb shlb cli (bad) sub inc mov mov jae subb jl mov xchg test lret adc (bad) xchg fidiv sbb add clc sbb scas arpl inc sti xor mov mov mov xor into cmpl movb and xor mov sub xchg lock ret aad sub mov lods aas sahf jmp loopne imul popf inc addr16 bound std test ret out cli fidivrl mov jb adc iret stc mul insl and jnp jbe lods adc mov in inc pop sbb cmp rcrl insb and cmp inc sti xor andl cmp adc (bad) mov xchg push lea mov cwtl push lods ss xor mov into out xor fcmovb movl sbbb inc mov pop stc inc mov in scas dec sarl xor add lods inc push fstpl call or cmp sti stc jne cmpsl ret cwtl inc (bad) sbb cs arpl fxtract enter (bad) push bound into mov mov push mov popf gs mov fcomps frstor jo push mov sub mov inc stc insb fistp repz sub in cmp push test cmp sarl mov cmpsl mov test pop mov jle or ljmp mov add (bad) xchg mov push lock lods mov cli fdivrs out lret adc mov xor aas andb or dec lods test mov lea lcall xorb mov pop js inc cmpl sbb push mov loop jmp xchg fadds aam bound psubusw shl adc mov enter pushf pop lods fcoms insl (bad) xor ficomp orb sbb stos xor stc xor push jl es push sbb jnp (bad) call out ret xchg enter (bad) aas and (bad) pushf push mov popa xchg insl mov out jecxz xchg dec cltd inc ljmp sub mov xchg fadd cmp jl adc sub jnp xchg jecxz jl mov xor nop sub or or fmuls rcrb xor in sub (bad) clc mov inc call test stc pop nop inc clc inc cmp repnz movsl sub nop movsb or ds sti sub and mov popa loopne jns xchg mov subb pushf push subb pop jbe xchg xchg jo shl sbb and mov fsts mov movsb imul mov add stos xchg aaa xor cmpsb mov negl mov jbe mov mov cs call sbb bound movsb shll push test dec (bad) fsubs or jnp xchg mov dec cmp sbb add pusha les out push mov and cmc lret scas jae jnp add push call mulb jae xor mov add jbe xor int3 iret add out mov pop fcomi in loop test fldcw lods pop mov mov clc les fildll xchg add push cmp popf loop fimull jae lods je movsl push gs sbb sub cltd and sbbl xchg enter rorl movsl push enter jnp loop xor add inc pusha pop sti test das xchg clc int cmp (bad) push add mov mov movb mov inc mov jp ret sub outsl pop sbbb cmpsl and xor sub cmc sbbb subb push rcrb dec and shlb xchg mov dec adc jb push pop adc and jae push loop push cld jge out push loopne leave xor mov push and fadds loop out out (bad) (bad) (bad) inc out xor nop leave rcl mov gs cmp jmp fwait pusha bound xor call test das jecxz fs in sbb int mov adc enter pop dec movsl sbb mov cld xor xchg subb (bad) sbb inc scas add sub cmpsl mov popa call fs fsub aaa dec movl sub mov ret pop rclb iret cmpsb ljmp lret inc push ret (bad) sub (bad) xchg mov lds bound cmc out add pop add clc jne push nop xor inc cmc add in faddl rcl push les adc mov xchg (bad) sub push fild ret clc insl out cltd lret xchg cmc pop pop (bad) lret pop int mov inc jle jp enter aas jecxz add ret mov test rol clc jno mov in sbb ret jns push das mov or mov insb cmpsb pop std dec inc outsl push test or gs sti iret mov movsl cmp mov push dec addr16 (bad) sbb xor lret aaa mov ret push cmpb add and adc xchg adc popa dec jmp mov imul cmp inc mov fisubrl xor stos loopne in neg jg fstl mov movsl mov cmp fadd xor ret repnz pop pop nop inc ret xlat ljmp test mov stos bound iret sbb fcmovnb mov inc adc nop add test lret sub loope push sbb movsb (bad) repz sarl push or (bad) push jp inc add jnp clc std sbb movl sbb lds xor pop pop arpl jmp jo cmpsb inc iret xor imul outsb inc xor iret imul push inc mov mov mov lret sahf mov cmpsb pop test lret sub (bad) xor and rol ljmp or dec and xchg lahf or (bad) lock pop loop (bad) (bad) test jmp jle test lock js andb or cmpsl nop pop cmp inc fdivrl add (bad) push shrb add mov (bad) cld clc lahf pop pop adc test add inc mov cmp ja xlat das lock xchg sti test mov or in pslld fwait or xor insl adc outsb inc int3 or cs add cmovno jae adc mov gs adc add in lock xor push fidivrl jge cli xor lret cmp shr pop push add mov sbb inc or (bad) in cmp xor cmpsb jne xchg cld cwtl repz fildl notb mov lret adc (bad) xor dec fs fcmovbe iret clc add in jo and mov out xchg test adc js dec xor add cmp mov xor mov test repnz insl sub enter cwtl fmuls repnz add (bad) scas push data16 pop out (bad) xor or jg add (bad) js mov adc (bad) (bad) enter test and hlt pushf aas ret in test popf or lahf sub adc repz push mov pop sub dec scas cmp or sti rorb or adc repz xlat jle das add cmp adc xchg or cmp adc mov imul mov fs aas sbb push test push cmp movsb pop test xlat cmp je,pt mov xchg ds imul mov xlat mov sbb cmp add and adc adc jns test mov sbbb jno cli lcall imul adc jecxz or test xchg jg cmpb cwtl push cmpsb das popf push mov xor cs in rorb test add pop sbb dec jb cld push into cmpsl fsts add jle add cwtl ret sub mov cmp mov js std jp cmp inc into int3 fsubrs push dec test mov or sti mov jp ret jnp or cmp dec xchg xor cmpl dec sub adc jae mov cli lods imul and adc and (bad) clc aam jo pusha int3 push mov cwtl inc clc in out (bad) xor cmp mov dec sub pop and aaa cmp xor push sbb add les dec sti int3 jae push mov mov push sub pop xchg xor fdiv jle push xor dec daa movl out mull iret and push lods mov mov push xchg push ret int3 xchg enter dec jnp cld insb dec pop jmp inc pusha xorb aaa jp iret jnp cmp pop scas cs inc mov sub (bad) dec (bad) (bad) in push ret push jl lock xor mov jo test iret push in lcall inc cmpsl xor lds add mov sbb in (bad) int3 cmp gs mov sub int3 movsb iret insl mov add or arpl pop xchg inc sti insl inc mov int3 pushf arpl in sahf incb adc pop lret (bad) jne cmp mov push movsl test in cmp pop bound dec fcoms pop in adc add mov stos dec add testl flds mov xchg iret fnstcw orb lods push sub insl inc pop sbbb cmc add mov xchg scas push negl push mov xorl out xor mov xorb dec mov xchg mov sbb xor clc loope testl mov push imul mov mov jno loope addb inc cltd mov aam pop and int ss popa es sbbb mov mov xor xor nop (bad) test xchg mov adc pop xchg xor jp add or iret mov (bad) jl stc sbb sbb sub movsb jmp subl fsts inc lds (bad) (bad) sbb xchg sbb push pop sbb add es flds adc rorb add aad ja mov inc add mov mov fsubrs stos or add lods fmuls das mov test sbb adc aam cmc xorb mov pop adc arpl mov ja fildl push pusha test pop mov pop lcall inc jmp inc psadbw mov fmulp or or cmp call adc (bad) mov xchg adcb aam cs push xor add inc dec inc pop movsb insb lock call push fild ja sub daa and pop repnz fadds sbbb js adcl in lods popa pop push enter into add clc sbb jb dec and or ljmp outsl icebp xchg cmp and arpl jge es out orl cmp pop gs outsb lds dec clc arpl xor push out inc test pop mov add clc stos jecxz js test jle inc mov add imul cld nop fsubs das fildll cmpsl test int3 idivb cmp cli inc int stc add xor repnz subl sbb in push jo add cmp movb push into jge aaa or das sub jnp dec pop inc jnp adc jle stos mov iret cmpsb sub cmp gs sub adc mov repz or cmp mov mov fisubl popf (bad) sti inc mov xlat mov or pusha movl pop mov lret into mov (bad) pusha popf nop xchg imul and xorb bound push aaa lock or test rorl jns sub nop out test orl and psubsb insl lret lds and and sahf xor cmp sub (bad) and (bad) push mov sti (bad) jae or mov (bad) mov add mov adcb cltd (bad) imul inc loope add aad cmpsb or test sub xor addb cwtl scas mov sbb fnsave add out ret xor and xchg xor lds push popf sbb shll pop lahf mov in ds xchg into lret xorb (bad) and adc sbb add sbbl dec dec addb xor mov (bad) mov subb xchg inc mov add (bad) stc xchg lcall test je les jl jle mov sbb popf jns test daa or cs lret pusha pushf push in in mov or subb test call out or bound xchg (bad) sbb rcrb mov int mov push int andps jnp pop lret mov divb inc nop ret pop out jg mov popf jp or mov or sbb ret and pop cmp and pop and fbstp xchg insl aas (bad) lret push sub ja mov push mov fistpl (bad) icebp or pop rolb pushf push mov ror cmp adc and jno hlt pop lods dec insl xchg aas arpl xor mov mov mov mov cmp mov inc shlb inc loope mov in str jg jns ret fsubs (bad) mov dec jbe outsb lret jl dec incl xchg ret jo mov jle push and loope (bad) repnz pop xchg xlat and cmp incb test (bad) sbb mov mov cld add bound pop mov mov cmc cmp dec xor xchg push or adc push movsl pop jg pop mov shlb jp test push jns aaa pusha scas in test fildll cmp nop lods push add push xchg imul dec sub stos fistpl inc mov insb bound fidiv lock xor push pop popf mov lea lcall push cli cmp adc sub sbb test test and jl stc pop ret sub fadds clc lahf stc inc sbbl pop jns add (bad) movsb imul mov fldcw sub outsl loope (bad) add sbb jg popf fmul loop cmc push pusha sub movsb mov mov sub int3 inc stos mov mov jno scas js pop pop stc addr16 mov mov pop div popf push push mov test cmp lea pop inc mov iret xchg (bad) jmp daa aad cmp and dec mov sti (bad) sub fstpt and int mov jge adcb inc mov out xor lahf push jo lods push cmpb cmp dec push mov or fisubl frstpm(287 loop cmp adc adc mov data16 xchg or clc subb int3 ret cmp insl aam add mov pop movsl scas xor sti mov xchg sub dec sub sub mov pop lcall cmpb test pop or mov rorb adc xorb test mov loop movsl dec mov cld pop cmpb mov inc stc sbb aam fisubl or mov push mov in test and sbbb pop add dec mov je jae dec fidivl aaa mov lcall dec (bad) (bad) je cmp out add scas movl cmpb mov jmp mov pop mov jb add imul iret sub pop push aam nop fmull adc inc xchg adc mov fs xorb enter xor aad clc stos je mov xchg or dec out adcb mov pop (bad) in jno push (bad) xor and mov mov repz push mov and call pop jge xchg imul mov cmp xor orb inc jb cwtl pop andb adc mov mov fisub jbe mov ret sub push pusha test lret test (bad) out cmp pop push sbb aad adc xchg (bad) icebp and ficoml add and adc pop nop pop xchg push adc loop mov insl sbb sbb cmpsb roll xor (bad) loopne mov jecxz lds cmp (bad) sbb xchg adc movsb push mov jnp fcomps pop dec cwtl psubsb cmpl jnp nop or stos outsl xchg clc push lock or sub and cmp inc xchg fadds push fstps cmpsb cmp push mov mov iret (bad) out lods jg mov cmp fist ljmp inc pop sahf push rolb push jmp aam sub nop sbb push mov test lock test and add jecxz mov sbbl ss xchg outsl xchg mov push add repz faddl std xchg mov pop xlat pusha jo and rcrl push es or pusha lcall popf clc cld (bad) pop jno mov pop pop fs jle fmul fmuls mov out rorb pop out sub jge sub inc or iret out test rolb fs (bad) ja repz xor mov pop test cmpb pop add mov cmpb into sub shlb pop rcrb popf sbb xchg mov pop (bad) je xchg cmp dec cmpsb pusha loopne int add mov (bad) lds dec lods mov ja jb or sarl int3 in xchg xorb sub xor sbbb loope out push and sbb push movsl push sub or repz cwtl pop push push arpl outsb lock cmpsb adc mov jno sbb enter daa or jns iret ss push test ror ds or add jge adcl into icebp or ror ja (bad) int3 subb dec mov call xchg lods sbbb sub paddsb xor lods xchg in addb shrl mov insl aad or fnop pop popa xchg pop mov stos mov ds xchg arpl or add outsb xlat inc scas mov in xchg int push (bad) daa mov movb js test int3 xor lret xorb shrl sbb cmc orb mov stos andb sbb adc inc mov pop inc roll inc mov adc cmp andb lock mov addb loopne inc jp xorl cmp xor ljmp adcb (bad) cmp addr16 mov fbld movsb ja nop push fsubr lods add int3 repnz loopne xlat sub stos inc push aam scas dec insb mov xorb push lock (bad) lock sub int sbbb sti ss xchg inc jmp cmp loop sbbb xchg imul xor rcrb xorl stos addr16 in fs sti arpl loop adcb or xor push push stc push mov xchg test push (bad) int3 or fmul repnz push jle xchg pop inc (bad) int3 iret (bad) int ja push mov mov js outsb movsb hlt mov xchg in pop (bad) sub jl mov adc gs inc test js (bad) shr add sub pop iret pop xchg dec test sub mov psadbw pusha mov test incb test fs cwtl cmp (bad) push mov adcb icebp sub push mov or cld test jmp mov cmp in jb mov add mov dec mov test test inc ss xchg jle (bad) repz add cltd pop xchg mov out aaa leave xor lcall or jle jne pop cltd std fiadd xchg pushf xchg bound pop fsubs lods xchg (bad) daa rolb mov xchg and mov mov xchg add loope xor insl sbb and sarb jbe ret push jl dec popl mov mov xor lds jnp mov or andb (bad) cld stc pushf or xor sub cld or mov cmp jl ret cmpsb push (bad) dec cs adcb mov jge pop (bad) movsl enter ss test mov adc subb sbb insb stos test ret sbbb nop xchg sahf ficompl mov jbe jns adc pop repz lods mov mov outsl add jg and adcb cmp addb scas enter cmp test cwtl or test (bad) push cwtl mov inc sbb mov das lret outsb xchg sbb cmp std cwtl test movsb idivl pop repz js or mov jns or mull orb jnp inc dec and mov aam sub sti mov push scas dec cli fcoml add jnp sub or sub add stos sub adc mov or repz in std push lcall jecxz out xor aad js xchg lret cmpb ds add addb add push jno das enter xor mov ja pop fiaddl or repz cwtl mov movb sahf push jbe dec or xchg outsb negb or mov lcall clc shlb mov iret inc mov and xorl dec lods dec push aad ljmp rorb enter cld in fcomip jo jb add adc inc out test cli call add pop test sbbl fcoml (bad) xor push adc jno mulb iret pop mov ficompl popa and xchg inc (bad) jb,pn inc mov test pusha jge fadd cs push fisttpl sbb movsb pop dec in sbb sbb xchg and jg lock sahf ror mov nop add in adc sbb add pop xor sbb jl xor clc arpl and mov dec cmpl adc xor pusha sbb (bad) jbe sti mov mov stos xor mov jmp adc (bad) and mov xor sub in jbe mov lods sbb mov fmull insb mov cmp cmp mov sub enter adcl sub into add cmp push jne lahf sahf xchg and mov fcmovbe dec loope fbld (bad) int3 scas and sub lods add iret test sub aad push popa loopne sub xor and fmul leave fs cli xor push adc iret dec sbb sahf jle mov adc or stc imull sub sub pop xchg imul in mov int3 push testb nop aad push in js cmp mov sbb mov cwtl sbb rol adc mov das leave cmpsb aaa call sbb add sbb and es jae popf pop adc mov das xchg stos popf inc add xchg gs pop test and xor ss repz add ret sbb pop dec push jno push add daa jle xor pushf js cmp nop ficomp push lahf push fimull push cmp mov mov rorl icebp jns or ja stos xorl lret xor ret inc mov lret or xchg push cmpsb cld push mov aad pop movsl dec stos dec lods outsb roll xchg (bad) jae fdivrs popa sub andb adc gs sbb mov xchg push add pop iret rcl pop dec stos dec fdivp test and sbb es xor push lret mov movsl lcall mov mov cmp mov mov dec adc and jge outsb nop jns ss dec jnp xorb add addl xchg das mov leave (bad) loopne (bad) sarb stc movsb adc (bad) test vmovntps dec aaa mov aas sub sbb faddl rorl imull fst fs jns xchg icebp jp and cmpb test lock cmpsl mov inc mov sahf jmp adc inc test enter enter stc test push shrl int ds sarb negl fisubl icebp out xchg mov mov (bad) popf push in lock sbb stos xchg imul mov or lea push cli xchg xchg sbb pushf push cmp mov push add add adc cld cltd into cmpsb clc test xor dec xlat addr16 cmc or popf ja push incb mov loope push enter shll in out cwtl aaa movsl add (bad) mov xorl push andl add sbb addr16 pop scas xchg fs int loopne push mov pop (bad) cmc data16 (bad) push mov shll xor (bad) sarb lret nop sbb push lock lods push inc jns and jno cmpb movsb pop loop cmc jle add out lahf push pop repz bound mov andb outsb or ljmp cmp in adc fstpl stc lea add in outsb inc push addb arpl mov lock jle cmp push mov adc push (bad) imul adc int cwtl jmp jns add enter repz cmp subb cmp loop in subb xor (bad) enter mov mov sbb loop mov add push nop stos imul xor nop insl xchg fwait cltd bound inc pop bnd mov cs pusha cmpl xorl test dec and test push push fcmovnu les mov push push mov xor outsb jbe fcoml out cmp imul ljmp movsb cltd sbb mov mov test inc nop jo test (bad) pop mov push ret (bad) fs sub jb xor mov mov xchg stos ret xchg in andb jp pop aad fsubr sbb push pop es into cmpsb aam dec aad lds pop sub shrb mov nop ret dec lea xchg mov xlat adc lods fsubrl pop stc push jno pop (bad) dec imul inc gs arpl cmp (bad) mov rorb pop inc mov pop iret and sub jge jg (bad) js adc pop jmp loopne ret sbb push loope add xlat daa xchg popa neg xchg mov sahf cmp fdivrp pushf imul stos dec in push xchg add lahf (bad) loope sub adc ljmp stos push loope (bad) cmp jle inc mov clc mov jbe cltd loope or (bad) repnz and jl mov pop add or pop rolb mov adc xor nop cmp loop sbb cwtl and enter xchg cld int cmp cmc pop (bad) cmp push stos xor mov (bad) hlt and xor test sbb fldenv jnp push pop push test pop jecxz nop xor push loopne cld movsb add aad cmc or xor sub xchg lahf adc sbb lret xorb ljmp into xchg sub fs ds dec test xlat divl (bad) xchg sbbb inc pop lahf push and pop jmp test pusha sbb xchg int3 sub add inc inc mov cmp mov addl out push (bad) xchg sti xchg adc dec xchg lds test ficomp idivb push pop (bad) stc clc fwait mov out mov cmpsb and xchg sub cmp (bad) push inc out mov add and mov sbb mov flds cwtl jbe dec imul mov shr pop lret jbe test sub pop adc inc sub fwait ss sbb push jp dec and xchg imul jg ret or xor call fbld sbb orb out or ljmp inc or or movhlps insl dec sahf cwtl sub inc sarl and add lret mov lock mov mov lods mov sbb xor or sahf or cmp loopne cld std or mov sahf (bad) aaa add cltd jnp in orb fistpl std and fmul jecxz,pt test pop aad sbbb loope je mov popf pop roll fbld popl (bad) add imul cmpsb lods push subb imul insl lea scas test xchg scas les inc mov jno adc xchg jmp (bad) jae test aam pand push mov push adcb dec jo sub stc lock xchg push cmpl cs int3 xchg mov loope loope cmc and pop es or jo cmpsl jno cmc movsl cmp xor hlt adc mov dec xchg sbbb in sub push pop test adc leave aas sahf push gs loopne scas rolb adc ljmp and and push xor clc sahf and dec fcmovnbe int push (bad) cli fs ret in pop ret and and bnd in loopne mov mov jl and (bad) out movsl dec (bad) (bad) daa xor xchg sbb bound push (bad) mov jmp imul mov cwtl sbb (bad) adc pop movsl push push push mov jo pop test in ljmp nop clc adc xor mov mov lods cld dec jle (bad) ret xchg stc insl push xor lahf (bad) call inc push cmp or mov imul push xlat mov jno and sbb test sbb cltd fild (bad) fmull addb pop andb pop (bad) and inc inc ret cmp mov leave enter int3 or addr16 and roll lret cld dec sti (bad) sbb mov fiaddl adcl sbb and test cmp int jp jnp adc mul aaa ret gs pushf add lcall cmc inc ret clc aas dec push xchg mov fimull mov loopne mov adc sub shr adc mov cwtl pop jp and pop mov clc loopne jns lcall adc stos push jge sti lods xor and lds arpl sbb loop mov jb stc dec xor adc dec sub adc (bad) jo dec fsubs or sbb sbb dec das inc cmp xchg mov in in sarb and daa push js mov shrb mov cmp sub jecxz mov mov jp repz imul aam add scas data16 (bad) jp adc cmp enter bound mov sub fdiv shrl aaa in aas fnsave imul ret (bad) adc stc mov mov add mov jbe test mov ja xor fldl shll xchg fwait jns or (bad) lcall mov roll and mov jb dec movsb add loop jecxz adc xlat popa int cmp mov ss sub iret dec xchg sub add rolb inc mov adc (bad) cmpb adc andb cli add lods in push outsb mov lret push dec mov sub sub int3 imul dec ret mov cmpb add dec xchg rcl mov insb xchg lret mov arpl dec sbb mov movsb scas or add add dec push adc outsb pop cwtl imul jg push push mov out dec dec sbb sub dec adc add jle add into xchg rep xorl inc pop fstl push sub sahf test stos and andb lahf (bad) adc mov imul push pop xor add out pop repnz push push xchg or jl arpl jg popa jmp xchg outsl or xchg xchg sbbb lods andl jbe fadds test jle and cmc je daa inc fimull xchg jb mov neg sbb push add test mov cmp imul sbb dec int orb out ja loopne stc lcall or jl inc mov imul cmpsb scas inc jns,pn mov bound jns inc jmp mov (bad) jae clc sbb push test sub push and cwtl sub outsl cmpsl mov jl and inc lahf pop loope fcmovne pop fwait pushf pop xor mov cmp insb mov pop fdivs cs jp pushf (bad) sbb pop xor dec out sti insl jmp mov jb ds enter test addr16 mov sub inc adc gs jns in inc orl xchg cmp mov push aad lds mov xchg adc lock cli add cmp inc mov loopne sbb mov dec inc mov xor inc clc jne xor (bad) adc xchg outsb sahf lcall jle (bad) andb inc out cmovno push popa sub call add dec test das nop movsl (bad) and mov hlt inc jp je mov push add ljmp pusha mov mov adc (bad) cmp and out xor enter xchg push mov hlt cmp and aas push sbb add xchg ret fsub addr16 int3 xchg (bad) sub mov pusha mov rcll and loopne or aam (bad) cmp pop cmp mov fnstcw ror mov xor addl xchg xor int lock fwait popa mov xchg fsubs imul outsl push shrb xchg adc insl add fsubl pusha (bad) pop insb fsubs pushf sbb jno pop cmp push (bad) cmp div add nop clc inc jnp (bad) int3 orl test adc into imul popl push xchg sbb movsb int3 lock or mov adc test andl pop aas jecxz test push sbb sbb ret das and mov adcl (bad) mov stc pop pusha pop xorl pop push sbb jg xorb fcompl jmp stc add jp xchg ret push or in scas jg stos add add lods cmc jl cmp or xor dec inc xchg (bad) mov xchg test inc adc cmpsb (bad) mov cld fisttpll jmp daa dec jae or jl sti xchg mov cmpl inc leave fcompl test or mov xchg xchg jnp sbb ljmp fstpt dec jne inc cli or mov xor xchg mov mulb test int3 movl (bad) lret cmp sbb fmul orl add stos aad mov dec test xchg and lock mov fstp mov fwait sbb (bad) jl jne cmp shrb add dec pop adc (bad) jo data16 sbb into hlt mul hlt aad enter in cmpl push dec xchg clc pop lds iret cmp or pop or jo xchg jbe sarb std cmpb xor adc aad add xchg sbb fwait adc int cmp es push adc cmp pop push addr16 inc lea pusha mov int3 clc ret jecxz test cmp loopne pop scas gs xchg ret dec scas movsb add imul mov push inc arpl call inc inc sbb cmp push cmpsl loopne jp sbb in fstpt outsb xchg iret jl mov push rol pop cltd insl dec or xchg sub dec add int3 sahf inc (bad) out ret inc sbb pop in mov sub sbb inc mov inc mov pop lahf stos push adc fnstsw xchg jae sbbb enter mov mov incb addb inc lods orb push syscall adc cwtl stos bound sbb mov cmp xchg inc xor push roll lods xlat jge fdivrl xchg adcb cmp and sub xchg mov push dec ss sbb bound cs xchg sbbb loopne or mov sbb xor sub test lahf lock pusha inc outsb test addr16 shlb xchg imul push aad mov xchg sub popa jg push fist cmp pushf or cmp subb insb hlt xchg or cmp sub cmp adc inc mov xor mov push test or xchg add add addb push mov push sbb js or imul sbb jns outsl shrl idivb lock push aas push pushf mov data16 mov mov dec sbb fs xorb pop lds aaa popa adcb jne sub fidivrl setno xchg daa sbb sbb push inc sub test jne mov mov movsl dec adc test inc stos dec jmp std test pop (bad) xor dec out aaa bound and push sti cmc push imul mov jmp scas lock jbe lods adc hlt sub and xchg dec test scas add sahf adc int inc cli jl cmp mov jp lahf stos lock rcrl popa test jo dec lods sub dec hlt xorb aad and rolb stc cs xchg scas mov js or insb cli popa inc popf jp xchg lods fcmovu (bad) sti je fmuls out (bad) iret sub cltd jo mov js outsl add nop leave cmp mov in or dec loope jp movsl cwtl into sahf pusha cli inc (bad) xor ror leave das andb sub add repnz mov stos aad mov mov sbb jle lret ja insl ret andb add fisubl jbe rcrb sbb dec insb test cmp add xor cld adc fnstcw fcoml xorb aam fstl (bad) push mov (bad) xor lock dec addr16 pop dec mov dec xor outsl popl mull lahf mov subb pop mov andb adc mov shll nop js ficom push push cmp into or test subb xor xchg and seta sub and sar lea mov push mov mov cmpsl (bad) iret xor fnstcw outsl xchg or jmp fadd dec scas push test stc std mov insb je,pn (bad) mov jle nop add por sbb (bad) jge jo pop mov lret cmp cmp lcall or test add add cwtl fwait testl and imul xchg outsb cmpl psllq inc ds adc push out sbbb clc mov test push mov ret jecxz pop mov aaa pop jno pushf clc adc je popl add scas mov mov iret das lds insb mov mov mov cmp push push out fadds dec mov sbb cmpsb iret sub mov packsswb cmp roll lods imul push push adc call invd ret cmp mov pop add int3 push gs aas mov jne xor push leave sbb arpl fildll cmp xor rorb mov mov cmp into sahf push aas adc shlb add (bad) in loopne dec gs fcmovbe rcll jno mov bound adc jo movsl enter test sub std cwtl sbb push pusha ffreep xchg cmp negl mov mov adcl xlat xchg (bad) xchg ret cld sbb loopne cmpsb and jmp subl iret fs adc (bad) les mov (bad) xchg (bad) scas outsl push mov test ljmp push nop xor in popf inc in cmc push pop fisttp dec lret les jle mov sbb adc aad stos add in pusha enter jb jb or xchg jae jge push pop std test cmp mov adc push repnz jae test hlt add out ja popf mov xlat mov mov xor add (bad) (bad) cli xchg push in jle add cwtl mov aad clc les fisubrl or js xchg shll test fs dec mov clc stos pop pop pmaddwd nop test stos mov movsl stos xorb fstp dec fiaddl out push cmp or sbb jle lock rorb mov sbb lock lret into sub fsubrs xor test mov into sub and jl pop xor daa sub in jns xor cli add push int3 sub sub mov loopne adcl test sbb jno jne lods add idiv adc adc pop insb mov mov and fldcw imul out loop adc test lcall sub and bound push icebp add addr16 andl mov jl sub or imul inc mov scas xchg lret call imul push jnp mov arpl ret dec add push cwtl int cwtl pop xor adc int3 xor mov dec fwait sbb in subb scas aaa rcl inc mov jp mov adc adc scas dec cwtl mov lds nop sub pop into adc lcall pop inc out mov outsb xchg fbstp js mov cmp mov mov (bad) xor xlat sbb pop fbld pop cwtl adc jg dec sub jg dec inc mov adc daa faddl test subb rolb jae adc mov and data16 jo js cmp fisub mov andl mov pop andb test sub cmp dec cmp nop popl jp hlt add mov push lahf cmc fstl jp andl fldt mov je xor (bad) in cmpsl or rcrb push insb dec scas loop test xor push (bad) enter sarb fs (bad) pop add mov imul decl sahf pop arpl testl adc imul jge and lahf ss das and int3 or loopne mov enter sub xor xchg dec mov fcoms xchg pusha ret sti test push rorb push fstl js jbe jae add mov sar xchg repz mov popa leave xor sbbb lret ror inc stc mov fcomps sbb aad in mov lock (bad) sub sbb and shrl jle xchg imul ret pop add add hlt adcb dec repz mov xor movsb mov push lods and or xchg stc add sarb pop ficompl cmpb or js add adc fiaddl enter outsb subb sahf mov ret bound xchg loop mov jg mov xlat mov push fstp push mov test addb int push popa mov sub shll test popf inc ja subb (bad) icebp (bad) xor add xchg (bad) insl push xor mov cmp aam andb addr16 enter dec jo call inc rorl adc adcl addb sub test pop pop loope dec lea mov rep xlat test (bad) cmp in icebp aad (bad) mov das mov mov sbb cmp loopne and fnstcw and pop pop push mov xchg sbb add movsb (bad) jae mov fbld sbb dec outsb mov lds leave mov mov nop loop cmp daa dec insb or sub ljmp test stos push into inc (bad) inc movsb xor es jb xchg cmpsl dec loopne xor add xor iret cwtl cmp movl adc xchg and test loope push clc xchg jo ror mov cli movsb jle inc in adc in sahf jnp fcoms mov sub add (bad) rcrl jbe in xchg push xchg jb lcall add subb inc loopne cld adc pop andl and hlt test fimull ret nop xor and (bad) int3 loopne pop pop xor rolb movsb and jo cld mov test jnp test repz mov add xlat int3 scas fsub jle dec mov lods mov (bad) mov sub iret (bad) jo xchg je cld repnz jbe mov fcmovne inc (bad) lock addl jne sahf test mov js stos ret fstps rorl mov xchg sarl popa adc mov or sti cs mov sbb cmp outsb inc es mov mov cmp mov lds mov test sbb das cmp int3 shl push rol cltd adc ljmp dec inc gs cwtl subl fsubs aam rcrb mov pop das mov test roll xor jne inc cmpb loop andb and push jl (bad) fnsave xorb push sahf pop aam movsl in pop add mov out mov adc mov cmc add icebp jp add push subb jnp fs mov or ds mov (bad) xor adc out xchg or idiv mov push pop fsubs fs arpl sti icebp sub add or push and adc jg jge jns test lods jb icebp orb inc iret inc pop cltd mov or xor dec test cmp xchg push add mov out js mov push lock add inc pop mov outsb enter cmpsl (bad) and pop sbb mov mov xor les jecxz fsubs adc xorb pusha enter test xorb and bound aam pop (bad) out sub xor rcrl sbb ret movsb cmpb cmpsb cltd popa push out addb sub sarl fs pop add add mov imul xchg je in fcoms and lcall push (bad) or mov arpl jns mov test mov adc jg pop push add mov lods mov movsl out mov dec sub cmp xor lea dec push test adc push cmp lock or fadds sbb test lret out lahf fimul nop xchg push push andl std sti dec enter mov mov lea jb aas xchg outsl dec xchg fwait sbbb iret pop daa mov fnstenv andb xorb mov sub adcb push cmp mov add add sbbb lock orb jmp mov pushf inc inc test mov test cmp push js mov (bad) jbe dec test pop in xchg pop call cmp cltd or mov jno iret mov jp lds fsubl mov push inc adcb cmp aad jecxz xchg sub rcll lret (bad) daa mov cld push (bad) iret and adcb insl movsb jo push cmp xor icebp or jl add adc cmpb vmulsd sahf fs stc sbb inc enter iret rclb rcrb std stc je inc (bad) mov and cmc ja push ret enter push cmp inc icebp dec and push adc cli jmp xor icebp (bad) mov mov jge push inc mov dec and add jae xor out pop js movsb fadds sbbb mov sbb fisub push outsl orb pop in cld out jge fisttpl decb pop mov rol and push inc xor sub loop test stos dec in or pop outsb cld enter xchg repnz cmp cs and inc cmp (bad) ja or cmpb jo sbb xor in shrb leave sub inc lret jbe xchg ljmp push sbb xchg mov xorl ds pop testl xor mov (bad) lcall popa jo popf data16 shll insb mov xor cmp xchg fadds arpl xor cwtl mov xchg push adc cld push insl mov pop fbstp dec stos fmuls push pop cmp adc (bad) push mov notl lcall fnstsw jge jns and inc les jnp xchg lea int je subb and cltd out loop pop cmpsl push jle mov adc pop lock xlat mov cs in adc fstpl jle sub ffree cwtl popf repnz (bad) fiadd cli movl rcll std iret lahf xorl bound movsl pop push std pop jne loopne roll loope add es movl push iret hlt int3 mov icebp inc push mov xchg inc (bad) cmp sbb jle cwtl insb pop cmp cmpb ret mov fdivs (bad) and push mull (bad) jmp push jbe xchg or mov or mov (bad) popf jno adc jecxz ret jb and cmp cli add paddsw or push out pop out out orb mov or int lock sbb mov xchg push add dec sbb xor mov loopne pop out xchg imul xorl popa aam sbbl dec cmp xchg sbb clc xorb jmp xorb call loope or (bad) mov cwtl pusha xchg dec push les mov xorb popa inc xorb dec div sbb cld push push adc jg pop pushf and rol adc mov psubsb subb or addb sti mov xchg mov and jle push out test sub mov jmp xchg (bad) popl cs test push add in add jg and xchg ljmp push int3 jecxz push into mov loope cltd and outsb xchg test inc daa jmp mov mov addr16 int stos inc dec cmp jae cmp add aam cmp and enter das subps sub add mov cld mov iret jg pop (bad) test cli add (bad) mov sarl sub sahf test dec (bad) fcomps adc enter fs movsl (bad) iret push pop add lods (bad) adc or and sahf enter mov xchg push ret jge xchg (bad) adc nop jg enter clc jb or adc xchg sbb mov dec pop mov sbb sub (bad) pop or faddl ret ret add add movsb ret (bad) mov jne mov sbb int3 stos sub cmp and adc (bad) stos jae (bad) xor xchg in gs (bad) xor xor loope js cs lods jmp jno mov jmp xlat xor dec jp mov pop mov rclb sub mov ss pop nop xorl pop pop stc pusha sbb negl push out popf sbb (bad) sub cmc sbb cwtl insb dec inc mov mov (bad) xchg ja (bad) or inc mov cld mov sbb sti sahf mov and icebp xlat or lret dec mov xorb sbb push cs adc inc xchg or xorl stc incl fwait sub jo pushf test and lret and nop or testb rolb fistpl insl std cmp jge (bad) notl andb scas xor or cmpsl in bound (bad) test push pop fwait ds mov aaa jge mov dec pushf dec sub cltd dec cmc ret into cmpb fnstenv fsubs imul test dec popf inc mov jg cmp push aam outsl xor adc (bad) jge mov stos dec jo js das xorl test push pop lods sbb mov xchg es dec call in push cmp mov jg sbbb and enter mov (bad) enter outsb adcb pop imul push cmp mov imul popf push out cwtl faddl adc incl movsl push push mov mov mov inc mull call mov xchg or inc insb enter xchg (bad) cld and mov sbbb dec loop xchg push test aam mov inc and loop adc push fmulp ss daa sub rorl adc sbb sub test andb rcll aaa ret test sti cmpsl and jecxz repz rcrl mov call mov fidivl (bad) daa iret and jns insl mov xchg adcl inc sbbb sti int3 dec xor push push jbe fisubr (bad) xchg (bad) call xchg outsl (bad) leave adc xorl test jg dec (bad) sbb mov jle inc das lret push push cmpb mov xchg push lods push mov xchg aas xchg or cwtl test xor inc insb mov push stos push fldenv dec and cmp sbbl pop push mov sub insl (bad) (bad) sub or (bad) xor lods iret (bad) adc jns enter xchg aas cmpsl mov add dec add sbb scas push adc sub adc sub xchg xor cwtl lds test out push mov scas ret dec xchg mov (bad) or (bad) jae jp mov mov add jle data16 xchg mov inc das push stc add lret cmc mov jo mov mov mov mov cmpsl mov push out lret mov mov stos test add (bad) mov jge stos lcall leave lods jmp iret fst fmul addl mov std mov xchg stos loop gs jae iret stc push pop xchg mov jo dec cs fmuls mov push in sub pop je icebp jno ja ret and dec xchg add stos (bad) xor push inc pop daa sub pop mov mov and sub xorl jns andl cwtl fimul xchg push sbb call aas fistp rolb mov sub inc gs rcll roll jno or std or xchg xchg popa jl stos dec xchg (bad) out jne mov loop adc inc adc fsub int3 repz push cmpsb push and out adc int3 push lods jl jns pop repnz cmp fmuls xchg loope mov mov enter enter int3 mov pop jecxz shlb (bad) repnz (bad) int3 cli (bad) jl rolb sub or pop push adc or fldl sub dec in inc mov push fstpt js roll in nop inc dec pop mov adcl sbbb ret inc mov push cmpsb ds mov inc dec adc and cld (bad) stos push inc rorb dec xchg add push adc mov sub or xchg repz enter cmp push mov jne pop push (bad) add ja cmpsb int3 callw pop pop cmp or adc cmp icebp sbb sub rorl rolb mov pop pop and mov mov inc push push jl aad fidiv and (bad) mov out mov pop push sahf jmp push adc lds cmp pop mov sub nop cld lea adc test push mov or jl xchg mov and pop push loop aam xlat dec and out loopne mov xor sub (bad) sbbb mov lock xor pop andb sub push sbbb dec je imul iret popa cmpsb cmp add xchg (bad) pop mov aad cmc orb or fcoms mov inc xchg push mov popa jmp xchg push jp out and ret sub loope mov iret xor jae mov dec jle notl test insb xor outsb pusha cwtl subb lock repz jno test push xchg loopne (bad) jbe cmpsl xor mov jns mov mov loop jmp add cmp sub out sti std clc cwtl (bad) and (bad) iret pop arpl call orw dec inc orb hlt jge mov inc int addr16 mov jp inc lock clc sub roll (bad) mov xchg push adc test cmc pusha cltd and mov addb stc adc in jmp mov inc fdivs leave jo add jbe (bad) inc adc mov (bad) mov xor nop push es push xorb pop aas in inc jns cmp mov fldl xor fwait inc mov pop loope adc push sub out mov jl jge js add push mov addl adc in lock or fwait mov (bad) cld pop mov fstpt loope rcrb cwtl add xchg or push adcb push pop in fsubr mov (bad) sub cwtl push imul lcall push lcall xor mov cmp (bad) jne test jae out mov sbb xchg (bad) pop rcll xchg jns pushf adc xchg aas mov push fwait pop loopne cmp or scas call iret ljmp adc mov loopne jmp iret repnz (bad) xchg loope (bad) stos mov lods push lret sbb or pop xchg add rclb jecxz and mov fsubr push (bad) fld in je adc mov dec mov cmpl loopne xorb xor subb xchg pop js fild cmpsl push sub inc lds out mov mov lahf pop jb repz js xor (bad) push cmp pop dec out imul cmpb addb push xchg dec push mov dec xchg push add test fildl shll je pop and nop add mov xchg shlb pop movsl mov mov es ds add mov idiv out mov test push je sub mov or mov dec fisub jns bound mov cmp pushf popw out xor xchg nop and ret cwtl gs imulb sarb jmp push movsb sub orb inc cmpsl aaa or in icebp push mov jle leave add (bad) aaa arpl rolb ljmp mov lds aam cwtl daa mov mov pop push push frstor mov (bad) enter f2xm1 mov adc or lods mov cmp jns push jg popl test inc sbb mov int (bad) cmpsb cwtl ficomp notl in addr16 addr16 xorl (bad) xchg mov iret pop clc popa sbbb cmp mov mov call mov and fisttpll bound mov mov push jmp iret xor jbe jne fildl cmc xor orb out loop and orb mov adcb lcall mov lea mov and test push arpl inc cmp cli test pop mov enter sbb and add enter gs pop aad xchg data16 das rcrb xchg ficoml or fildll pushf sbb jno cmp aaa in repnz jle mov imulb outsb cmc add mov mov xor lods subl test in jge int3 mov out pop subl mov sbb outsl mov push adcl ja mov test in xor jne stc lret loop jo nop mov inc mov push xchg push ret inc xchg subb popa fsubrl adc lds jg jnp sbb lahf lret xchg sbb loopne test js popa testb xorb sahf pop push fneni(8087 sbb scas outsb xchg popf enter jecxz scas lcall and dec cmpsl inc dec sub jge scas lret call sbb push aad sbb jb ss pop sbbb js adcb mov clc jb xor lret aad mov stc add sub push mov subl mov inc inc jb push cmpsl pushf loop leave imul push dec stc push andb mov pop fsubs jge bound shll enter sbb test (bad) mov insb mov std cmpsl push and in pop iret cmp aam test sbbb into cs sbb cmp push (bad) cmp and aas cmp push imul cmpsl inc push fldenv jle push dec fmuls xchg ds xor adcb out pop fildl mov popa or js pop fs cli pushl mov lock movsb (bad) xchg add addb xchg inc ficompl push mulb ja mov cltd pusha sarl xor pop sub fs cmp subb fdivr bound jo ret push faddl dec lods mov mov mov lds and mov out ret cld cs or sub jb xchg xorb enter lods clc and xchg insl cmp dec and in and mov leave sub mov cmpb leave ljmp jns sbb mov (bad) mov mov mov out or xchg jne adc imul mov clc (bad) inc test outsb jecxz pop mov movsl aaa int3 (bad) ss dec xchg insb (bad) in mov dec pop adcb lahf addr16 push xchg outsb mov mov push movsl bnd mov sub flds xchg mov cmp push lods xchg (bad) cmpb cwtl add mov fsubl aad addr16 mov loopne icebp add cmp cpuid fdivs loopne jecxz push pop shrl sub or in adc xor in sbb jle pop enter adc mov push (bad) jo popa pushf cmpb add adc psraw cmp test mov lds inc cmpl rcrl add dec fnstsw stos adc out lret push jl mov inc mov es push or insb repz arpl sbb lods pop stos add cmp (bad) enter pushf adc scas test out inc jno xchg clc xor pusha sahf test cmpsl sbb adc mov xchg push xchg fist or xchg test and loope xchg out mov jbe mov and cmp add push and and cmpsl jmp ret push dec int3 add ficompl mov add inc ds outsb jne mov xchg adc in push (bad) mov dec das arpl cwtl mov sub movl out jns scas dec mov outsl xor jbe add xchg jae jge js aad rcll xchg js stos negb jae push push push outsb mov jmp cmp notb outsl sbbl cmp mov inc inc test test loopne mov pop (bad) hlt cmpsl adc fsubl sub mov dec mov sbb jb xchg mov (bad) idivb imul mov iret add mov xorb out adc sbb (bad) jno dec push sub cwtl sahf pusha loopne xor push dec mov ret mov cmpsb pop inc je ds push es jle jo daa loop cmp add nop (bad) xor mov pop xlat dec add pop cli into jo adc ljmp jb adc outsl sbb lock cmp lcall dec sub cmp fild cmp iret cli fadd fisub and pop adc mov sbb add mov mov incb cli mov xchg int imul int xchg or cmp mov sub xchg jle xchg into jno loope test jge (bad) push cmpsl xor mov mov aam xchg cwtl pop stc push mov pop jns jmp fcoms iret mov (bad) fwait bound push sub les mov mov leave adc xchg cmp out mov add imul lret xchg outsb sub xor shlb stos ret gs aas adc inc mov into pop jo pop (bad) lahf xor inc push scas stos and or into cmp testb and (bad) mov push sbb jbe jno scas sub jl mov jmp mov icebp jo xor mov xor aad push xor lcall test mov cs push decl dec (bad) mov jbe lods push push add addb jp call rcll insl in sbb fldenv mov xchg call subb inc loopne cmp daa mov fsubs dec sbb out sbb int3 (bad) xor arpl (bad) fcomp push inc movb xchg cmp mov ljmp sub ds popa xor pusha dec movsb cwtl and lret or fs push fsub lret cmp and insb xchg fadds movsl clc pop adc outsb xor pop cwtl cltd cmpsl mov pop cmpsl xor sbb lock jp das stos dec xlat ret push pop (bad) push cmpb fs dec inc mov xlat xchg pop inc add mov xchg andl loop (bad) aad xchg xchg cmpb add in cmpsb and cmp cmp mov loop insl cmc sub xorb adc sbb xor cwtl stos mov cmp fiaddl pushf andb fwait test and add cld xchg addb jnp or xchg dec pop xor and inc aad mov sbbb sub mov xor or mov inc mov je addl cld mov xchg mov lock add cmp inc (bad) push mov mov loope outsl lcall push mov mov in enter sub (bad) mov jle addb dec test and add mov dec mov imul repnz add stos jo idivl ret or (bad) lret xor cld fmull mov cwtl pop inc mov jne mov dec out add cmc xchg stos (bad) cld popa sti adc test lret (bad) sub inc mov (bad) stc bound sub adcb dec shrb pop jno inc mov (bad) xchg cmp jb mov xor adc cli add xchg sbb xchg add lea cmpsl xchg sbb push mov cwtl pop mov sahf add pop pop mov dec mov cmp insl xor aas sbb adc add or cmp (bad) and loopne or gs jne das aad pop out mov scas test xor cld add movsb adc jno cwtl mov jne cmpsb jns sub clc in push push sbb pop stc xchg sub inc insl popf movsl clc push lods mov sahf xchg mov jns test push mov mulb dec call push xchg and popa cwtl jno or add mov xorb (bad) insl mov adc mov addb pop mov outsl mov xchg pop ret fdivs cmp lret (bad) fsts inc xchg cwtl mov (bad) jnp nop lods test xor arpl cmp cmp test fwait jbe arpl cmp in out mov mov mov dec shrb (bad) scas pop pop pop roll das clc xchg stos push mov sbb xchg sbbb adc arpl adc roll jmp sbbb aam addb es int3 add in and xchg repz inc and sti cmp adc xchg jns mov jns test jmp dec push mov lods xor adc mov in or mov cli jl data16 xor pusha mov push sbb and repnz stos (bad) (bad) nop xchg add xor jmp cmpl ret ret mov gs jg insl jnp out outsb xor dec jae sbb cmpsl sub cs push enter sbb mov (bad) mov mov call push push fnstcw mulb mov mov inc iret sbb pop mov (bad) iret jmp jno int3 out arpl jbe mov add int3 rcrl aaa dec inc outsl xchg iret dec inc inc das add add pop xchg out mov (bad) cmc adc mov (bad) push lret in sti mov and pop aam outsl xlat dec adc push popf cmc nop loope aas sahf adc dec lret ds push dec pop in gs loopne or iret dec jb add and pop inc xor mov mov inc popa test jecxz push (bad) data16 add fdivrs push adc (bad) wrmsr in pop out jge loop fcmovnb dec outsb mov loop xor clc pop in or test jg ficomp adc mov imul adcb fstpt mov lcall lcall arpl subb out and xor sub aaa jmp and test mov or js mov xor shrb add (bad) mov and (bad) xor add insb test dec aad decl adc adc clc sub xchg sub ja adc xchg cmp addb jp pop ss and js les pop sbbb decb mov inc dec test xlat pop mov jl mov das popa or jle mov int jl xor xchg loop mov xchg daa lret mov aas ret (bad) int3 js mov sbb out xorl les push call cwtl and push arpl add iret int pop loop pushf into (bad) pushf (bad) mov add or sub and insl and push imul loope (bad) cmp sbb lods in shlb cmp or or and jmp lds add fdivr xor movsb ljmp aas lods movsb loop sbb mov outsl cmc lea or enter stos cli gs xlat (bad) out std push and outsb stc and enter cmp in loop mov or push jp (bad) fsubrs test test mov xor cmp notb cmc cmp mov ja imul sub mov ret xor fbld add mov rcl adcb ret fsubs jbe lcall int xor dec cmp mov mov fadds dec push movl adc lds pop fist pop cmpb bound mov sub adc xor (bad) dec (bad) adc mov sbbl (bad) dec or push push cli movups dec adcb jmp cmp jnp add cmp push stc inc lods orb jns mov adc subl dec out adcb jmp or dec sub pop add and js fdivs sub ret and ficoml fadds loope and lea push clc sbb xorb dec jmp pushf nop dec add cltd ds jne sbb xor adc push inc inc or sti clc nop popa sbb ret xchg gs test dec in jb,pt jb mov inc push adc jo aam stc in mov add (bad) pop xchg repz icebp and or je scas push arpl dec stc pop repnz xor cmp loope adc and outsb sbb lcall cmp or mov subl mov xor adc push cmp les sbb pop lahf adc loop popa jnp dec xor mov lret test lea dec shrb inc mov test cmp inc gs (bad) aam and mov sbb mov divps or gs ror addl xchg lcall and mov cmpsb inc and mov fiaddl mov mov (bad) icebp xchg sub and push negb mov xchg add fdivl mov into jb stos sub ret addr16 pop inc out mov dec addr16 and movb push stos test faddl gs sbb test inc inc sub rolb pop sbb jnp (bad) test iret sbb ret add divb pop in es sbb imul (bad) lods mov scas aam popa dec rcrl add fdivl loope rcll dec nop and push movsb sbb pusha stos outsl add mov in (bad) xchg push mov and aam dec mov jmp in in les (bad) leave jge mov sbb mov push jnp or inc dec and cmpsl push inc jae fwait xor jle or popl nop dec lods cld mov adc sbb cmc xchg mov mov stos lods and pop in cltd or (bad) (bad) mov les icebp or mov fsubl nop imul push inc xlat subb sbbb mov call into sbb mov nop and (bad) xor rclb ds aad jnp call (bad) insb lcall inc jb xchg lock pushl (bad) mov and push or xor jae cs xorb xor lods push icebp cwtl in cmpsb bound loop mov mov add cmpsb hlt mov ds insl imul test arpl pop mov sbb sub mov cmpb inc mov push loope inc xchg dec decl and inc scas cmp das jl test sbb punpckldq add and inc les arpl cmpb mov cmp mov mov in sub imul ja sub fstps mov mov dec xchg add scas push fistpl add in pop dec lret mov repnz push cltd mov and xchg lock into imul mov popa or lock cli fnstsw or (bad) rol cltd outsl hlt cmpb xorb mov sub xchg cmp scas dec test enter aaa ja pop (bad) movsb mov aad enter sbbb xlat pop sbbb cmp push xchg cmp add pop bnd or xchg notl (bad) fisttp adc sbb scas xorb loop and add data16 xadd popa fsubr adc jns push mov or xchg stos outsl fwait xor nop insb hlt and mov mov jle sbb sbb sbbb sbb xorb imul xchg push or stos sbb (bad) dec mov sbb pop push psubsw jge and cmp add mov movsb push fidivr rol fucomip orb aaa push dec (bad) mov pslld xchg cld add add leave ss repnz xchg shll mov and pop mov mov pop lods push test imul orb jp inc add nop and sbb fwait mov sbb orb adc jmp loopne pop xchg das lret loope es (bad) je jle xor out jbe popa xchg mov adc insb mov aaa mov (bad) sbb loopne adcb fist mov mov xor movsb adc sbb in cmpsl xchg mov mov cmpl pop stos mov sbb push movsl push imul inc push cltd test jne sub fadds pop mov dec jmp cmp in test cmc adc mov jmp xchg xchg insl sbb cmpsb das test stos roll adc (bad) jp mov rcrl xor xchg cli clc or or es fsub add mov lcall test jae adcb xor mov push lcall arpl pop rorb push cwtl pushf andb cmp shrb jg push in push or jne push xor sub lods jbe add (bad) fiaddl testl and subb add mov loop sub repz stc in ja andb push movsl jo orb (bad) xor clc test rcr adc push scas mov inc sbbb stc add sub push cmpb pop fdivrl subl sar fadds inc cmpsl cmpb jl ret and nop cmp xlat popf fist in arpl cmp shrb mov sub xor stc inc xor jb or mov mov sub mov shrl mov mov scas adc std ss adc fwait loopne jecxz sbb int sub jecxz pusha pusha sbb movsb fcomps or mov popa hlt (bad) in (bad) rorl push mov roll jge mov sbb out push cmc mov cmp lahf popa mov rcl (bad) sub fndisi(8087 push xor push or xchg lds out jne push jns ret pop cmp adc sbb mov mov jbe cmp jno mov insl push or sbb es pop fsubl sbb mov adc jbe sbb das jb pop (bad) adc in je sbb orb inc jne adcb out lods iret stc dec mov dec repnz test ret fadds jno inc or cs fimul dec out addr16 xchg ret inc mov push fdivrl movl iret push rorl adc cmp mov xchg inc push and push out les lahf bound lret xchg adc clc jae add ret jp add (bad) popf sarl or (bad) pusha fwait les js arpl pop leave gs fcomps loopne inc xor shrl and movl das enter out andb push in std (bad) mov push or add (bad) adc xor ljmp sub (bad) xor fsub ds xor mov je movsl icebp xchg cmp pop hlt lret ja imul cmp enter outsl jg mov scas aaa cli cs mov pop push test je sarl das xlat xchg push and sub or pop pop add sbb lock add xor (bad) lcall sub lret lock mov jle insl test xor outsb add out push inc pop fdivrs lret insb test xlat das imul xor inc clc scas cmpsl js test mov out cmp sbbb pop jne or or test inc fist repnz push (bad) jp cmp xchg xchg or fdivr addb (bad) stc pop pushf mov popa xchg push jge (bad) cmp sub rep xor ljmp xchg fs xor add mov shrl add cmp mov mov pop jbe xorl dec pop push push push js test clc test push add and mov dec add out sub inc adcb dec popf pop lock mov nop mov mov sbb jns int fbld subb adc fnstsw cmp ja sbb lock in test fldt in imul push xchg fiadd (bad) roll mov ss pop jbe repnz adc and (bad) (bad) jg mov in sbb dec mov mov or dec xchg lahf sub pop dec xorb sub daa les gs mov lods (bad) fsubs sub and jns ror frstpm(287 inc sbb ret xchg mov fs add mov adc jno push out mov idivl xchg xchg xor add into cmpsl pop fwait cmp nop scas sbb jp,pt and adc mov pop (bad) imul and add adc mov fwait pop cmp sbbb push subb mov (bad) aas fldl2t xchg mov js adcl xchg xchg pop cli mov push dec lock xchg repnz nop stos push pusha je nop pop jg popf imul cmpb mov mov adc pop dec mov cmpsb push fsubr dec insl add jae lds lret (bad) cli xor popa sbb pusha cmpb clc jp nop sbb jnp adc pop in xorb sub sub or push adc icebp pop outsl xchg fwait sarl loope add sbb icebp outsl andl gs mov ret cmp (bad) push inc cmp sbbb xchg dec mov ret stc mov mov (bad) inc lret xlat xor cmp xchg test jo mov mov daa xchg mov insl xorl xor popa dec mov and sub rcll and mov sti iret push push outsl fisttp pop push xchg rorb ret mov repnz sbb ds cmp outsl jae or add loopne andl fcoml jnp test mov iret lret outsl lea pop mov mov inc xor add push mov sti incl sbb inc mov outsb mov das push adc mov in (bad) cli stc xchg add cmp or mov xchg js fmull ss addr16 mov xchg imul fsubrl push (bad) xor jmp cwtl out add not sbbl mov add aaa mov dec js movsb stc mov mov out and (bad) mov pop xlat aad pop test scas idiv in cmp ret or fidiv pushf jmp adc cmpsl pop xor jle flds sbb xchg mov cs push cltd add fdivl inc out adc sarl lret je icebp add popa (bad) mov scas inc push jb push add fnsave inc mov mov sbb xor into cmp andl mov jno jbe push scas inc mov loopne into fsubrs push mov cmp jge jns and cwtl pop mov mov mov xchg mov fucom adc test stos imul popf inc add pop std (bad) mov sbb push jmp enter mov xchg push data16 mov push pop lods jbe push jno std cli (bad) jl fstl in inc int3 std sarb xor xor std frstor push cmp mov dec hlt inc test push test mov or mov repnz or xlat adc xor es xchg loop inc andb mov into call push fsubrp push inc sti mov stos enter jge sbb out mov aam add mov mov inc sarb rcll enter das movsl xchg data16 xor mov push addl add add inc (bad) in gs cmp dec jp rolb xor mov sbb add pop test mov cmp fisttp jecxz popf and aas add andl sub or add (bad) mov outsb mov cmpsb subb cltd psrlw leave mov out or lods dec out mov adc into xchg pop sbb xchg mov or notb inc add sbbb and xlat cld add cmpb lcall pushfw and xchg add movb bound push ja jne out push and lods or xor xlat inc xchg addr16 cmp orb push ljmp xorb dec sbb repnz sub dec mov push iret dec dec rep cwtl jmp lret adc mov xorb roll int xor (bad) daa cmc xor cmpsb fcmovu test cmp outsl mov dec jb adc inc cmp add addb insl outsl lods xor jbe push fistpl sbb sub jns xchg outsl jno push or jne fidivr push pop adcb enter adc addb lfs mov sbb fwait lods push push xchg jp nop scas push dec addb outsb idivb call stc std push xorb mov imul cmpb lods dec jge inc cmpb xchg xor (bad) cmpsb sbb dec sbbl jl add and cmp cmp test stc mov push scas (bad) xor fidivrl mov pop or clc je mov mov sub pop repnz (bad) lahf adc dec sbb sbb (bad) jbe fwait pusha scas lods scas push movsb ror das (bad) jbe andb data16 dec mov es andb cmp mov mov mov (bad) cs lcall xchg insb pop popf adc mov iret mov inc mov test adc add es stos dec call subb push out ret xor push mov hlt fidivrl js lret mov jb lret nop cmp stc cs test and fs (bad) mov (bad) (bad) repz push inc mov xlat adc pusha xor adc rolb xchg enter jne cmp ret adc inc inc adc loope xor lahf mov (bad) iret pop add (bad) add insl sub jno fsts ds pushl test add mov bound pop (bad) iret (bad) inc lcall (bad) faddl jge xchg pushf inc inc into mov test and iret aad push xor lock or push aam dec and push lahf (bad) cmp add fcmovu inc xchg scas addr16 int3 jne notb or (bad) xchg mov cli lret cmp fs repnz (bad) test test divb jl add mov stc xor mov int ja jbe subl arpl cwtl sti shrl pop pushl and sahf mov pushf pop in fisttp lahf insb mov insb mov faddl shlb ret rclb enter xor add ret stc inc test pop pop jge test push sbb xchg test ret iret mov cmpsl outsb les test es sbb push fsubr fmuls in std fwait mov iret cmp pusha test int3 (bad) test (bad) or rol hlt test and cmp dec jmp daa int3 push fsubs fmul fstps fisubl les or xchg arpl dec cli or mov adc push adc and popf mov push fsubrp adc scas dec adc enter cli loop sbb cmpl addb or mov xchg or lock xor ja fildl add dec mov lcall mov or xchg push fnstcw lahf enter jmp cwtl fs push (bad) neg andb in pop (bad) inc xorb aad push pusha dec test xlat add mov into mov inc xor pop pop jl mov dec lods push in testl jecxz inc dec mov in pop push enter insl mov call ror ds je ret cmpb push mov mov ret addb pop clc push stos clc fimul in jbe rolb subb popf mov into scas jl movsb push fcmovu sbb cmp lods es cmp mov adc popf or pop fiadd (bad) call roll cmp mov adc mov sub or cmc into and out adc orb decb andb push jge push xor mov icebp mov mov lahf adc xor aad xchg repz xchg pop movsl cmp fsubs ficompl mov scas push clc (bad) lret push scas addr16 pop adcb dec fisub sub add inc push xchg leave addr16 out repnz adcl loope add sbbb cmp dec in fisttpl aas pushf test mov mov ret xor es lods or clc ficomp dec scas cmp add test adc mov adc (bad) or and lea aaa inc pop cs sub lods mov push sbb shrb int3 sbb sub add int3 pop sub sub mov mov iret sub xchg dec test sbb jmp mov pop imul xchg jp,pn int and xorl inc out addb hlt xchg stos adc xor xchg cli sti ja cmpsl psadbw adc xchg ficompl cmc or or ljmp (bad) dec in or fcomps iret pop xchg xor sbb xor flds mov xor out stc push jmp xchg adc sub jbe dec sarl jns subb test stc orb sub in mov adc push jmp mov sbb call jp sub mov stos mov adc imul mov lods xor nop lcall push movsl cs mov fsub gs inc out jb add sub add in mov test jecxz push stc push sub test ficomp mov nop pop mov jne ret scas xchg dec push lcall mov jo repnz mov rcrl pop pop mov in push lods sbb adc inc es sub pop movsb aas lds scas inc mov (bad) push and icebp adc pop xchg subl in xchg add xchg test mov fdiv out cmp test rorl push cmp xchg fs add inc or push cmpsl movsb fadds push xchg add movsl push add std or dec clc rclb push addb fsubl lcall jl out data16 cwtl cmpsl lahf jno adc cmp lock jmp sub mov pop test daa fadd mov inc les mov outsl dec jbe adc data16 cmpb int3 fild arpl scas icebp xorb xor adc dec mov (bad) jg adc adcb std fadd xor adc sbb test sarl cmpsl andl add cmp les test xchg pop inc push xorl ja data16 call in ja jg mov aad into xor fdivl jmp xorb mov add xchg and arpl cmp (bad) sub cmp mov dec sbb mov mov xlat (bad) xchg (bad) stc jg pop sbbb push test std sub mov dec pop ret aad andl cli xor mov xchg mov xchg popa jo mov xchg fs int pop push test cld jp dec jo (bad) push dec sub fcomps pusha cli (bad) lock jb lahf jne (bad) xchg mov xchg push enter stc cmc xorb in xorb inc add lret call jg cltd mov adcb lock mov repnz xor pushf sbb ret xor pop dec pop nop into ja xchg jb int3 xor shl test or mov (bad) leave (bad) xor sbb or repz adc adc sub stos nop in (bad) imulb inc imul pushf cmpsb xchg sub mov and jb xor and mov pop addl cmp or jecxz sub sbb pop sub enter ja mov jae sti add (bad) es push jno jnp or or push inc std mov xor mov hlt xchg xchg jno and cmp dec imul push lds inc mov int3 jg pop (bad) outsl and mov and cmp sti or jle fcoms data16 iret lds divb fucomi insb je hlt sub insb lahf iret inc call add xor ret test pop loope xor sbb adc and in jbe,pn or in loopne cmc outsl out inc push or dec subl stc push (bad) mov or push inc iret ds or mov shll idivl rolb dec xchg or mov pop push loop ja test lret push (bad) and faddl xlat nop fsts out or (bad) fdivrl sub push (bad) xchg mov sub sbb loopne push and cwtl xchg sbb or insb xchg cmpsl xor jg dec outsb or addb mov cld adc hlt xchg and flds shll cmc add movsb addr16 jge test or sub sbb sub data16 in mov loope and lea mov pop fldcw sarl mov pop imul cmp fwait push scas insb xchg xorb inc hlt test mov pop xacquire pushf clc orb mov sbb push negb ret jns roll (bad) jle jg movb outsb call (bad) fsubl daa jae addb (bad) inc xchg ret dec lods fdivs iret mov push xchg jge and add mov adc or popf cmp push clc ret pusha cmpb mov push xchg jle sbb fldl out test in xor lea lret mov sub push xchg mov push fsubrs outsb js dec sbb adc cli in sbb cmp jns xchg scas jo lcall scas mov arpl addl movsb jge fadds cmp jge and fs add xor testl mov xchg movsb leave addr16 mov adc pop insl push dec pop jp cmp push andl xor mov popa inc imul xchg arpl aad imul scas test pop push int hlt or fiadd inc mov cmp sbb or and loop dec pop mov outsb scas push fldenv int3 jno cmpsb (bad) sbb jmp sbbb sub push xor (bad) dec inc pop cmpsl addb push xor push sahf mov pop sbb pop popa clc (bad) fiaddl jns std push test mov dec jbe mov lock outsl adc and pop mov das mov out inc sub lods or ljmp jns or mov dec stos jnp inc inc sub mov pushl and sbbl mov mov int3 daa imul sbb mov add xchg mov and xchg addl mov xchg mov xor cld cli icebp add or or addr16 lahf bound repnz mov leave adc out iret and repnz leave js in fdivl inc xorl fadds mov dec nop jb into jl hlt xchg lea add or fwait pop fistpll inc sarl arpl and aad subb out mov leave push adc cli mov and xchg aaa test mov cld xor testb out or cmp adc cmovg lock or ret xorb mov icebp andl not scas addb push enter in mov ljmp out mov mov cmp popf push mov subb stos stos lock or lea mov xchg cmc insb ret imul dec and or mov cmp (bad) dec cmc enter icebp push xor dec (bad) sub stos pop and adc lods push cmpsl ret cmpsb fwait clc push loope addb push out xor mov cmpsb cli or roll push pop nop mov (bad) cld js imul adcb out sbb xor scas cltd inc mov loope incl loopne test xchg mov arpl jne stc cltd pop jecxz or pop dec fiaddl add enter test mov sub cmp ss cwtl test test lods ret pop dec out repnz push pusha roll mov xchg ljmp inc js popa lods and pop ret xchg pop add das scas or out (bad) adc xor and loopne movl add rol add or jbe iret or push test fsubrs into jnp mov shrb xor cld aas jae fistpll xchg push test (bad) xor xchg sbb jecxz fwait mov xor mov ret icebp pop icebp pop and in stc and scas sub push inc cwtl add icebp pop loopne push sbbb adc mov cmp mov scas mov add xchg and pop sarb fucomp or mov or sarb cli outsl outsb mov lods (bad) jge dec (bad) adc dec in or stc adc scas test outsb divl out jnp mov push call popa and pop ljmp mov sarl in xchg push fsubl xchg ret mov xchg (bad) cmpsb sbb pop push inc addl rorb cmp inc loop push adc jbe je enter addl jmp pop in ret xorl lret mov mov mov mov (bad) xor inc xchg xchg ret ret enter add jb push or xor outsb movsb test push iret cmp scas inc ljmp stc gs sub (bad) mov pushf rorb (bad) movsb test shrb xor push jmp pop and in pop fisttpll fadds fiaddl gs std or gs imul into pusha jbe aam cmp mov sbb mov mov loopne cs loope sbb (bad) lods das out pop ret or (bad) mov int xchg lsl imul jne xor pop xor add enter pop or pop pop inc das shlb or adc (bad) in or and mov (bad) (bad) jecxz mov ljmp pop insl out push data16 push mov fisubr dec test orb mov cmp inc mov cmp rep mov and rorl loop test inc dec aas sbb xchg add jp enter mov jl and inc mov add pushf test insb push movsb dec aad es clc addb xchg std andb into dec out dec rcl cmpb outsl arpl dec xchg imul adcb xchg insb jb push enter insb cwtl sub aaa test mov icebp jno mov pop and rcr xorb and mov adc add mov or inc push xor test adc movsb test cmpsb pushf pop arpl outsb push xorb das aad sbb insb ljmp inc lret test enter dec repz stos gs insl mov adcl push cli sub pop cli sar mov lods jge cmp pop inc loopne js movsl and (bad) mov inc (bad) fwait jl insl cmp cmpsb push in mov lea int in test jo jne push mov imul ret mov dec fwait aam add jge fldenv xchg sub movb pushf scas imul pusha popf lret add mov and inc repnz xchg cltd add loope sarl xorb repz mov inc jg add xchg mov jnp cmpsl xor push cmp int fild lock xor push add inc aas test std out add lret cs subb aaa inc rcrb mov mov pop lahf aam or fisubl xchg adc add push xor pop das xlat cmpsb mov jno pop (bad) add test push sbb call dec icebp push andl daa (bad) xor sub enter fildl xchg push out gs mov movsl outsb jnp or nop xchg mov or jecxz in mov push sbb or (bad) testb mov imul sbb aad mov ret or std cmp mov lret xchg add mov das enter or orb scas xor pusha or or ss and fiadd mov ljmp test testb add popf mov rorb clc shr scas push insl aas bound mov push mov xor daa aas stos xor add ret inc mov test and in das mov imul test mov mov daa iret aaa cwtl lahf pusha loopne and jge mov stos dec nop les add (bad) icebp and movsb test lods fistpll mov sbb cmp adc or cmp and xor adc pop (bad) jae out jo repnz mov mov out ljmp lods aad pusha test inc mov test jne and movsl lds pop cmpsb iret popa in or xchg ficomp or or rcrb cmp mov cmc sub (bad) cmp sub adcb push clc scas and (bad) icebp jb xchg enter jno cmp push inc cmc out pop jno (bad) lcall (bad) je ret xor mov adc repnz jae arpl add hlt movsl mov or or jb and push (bad) lods jg arpl enter jns mov (bad) mov sub push lods xor sub jae cmpsl sub and rcl sub add push in lds mov repnz cmp and test sbb jp dec mov repz test xchg fdivrs pop data16 test lods dec (bad) arpl jmp xorl ja test fistp inc mov pop test adc cwtl js fsubrs mov xchg test fucom js sti and ds orl int cmp clc sbb leave in push and or test pop inc cmpb adc enter or jb (bad) lea lock xlat xor adc sub ret gs jle xchg inc sbb in and adc jmp xchg and mov mov mov cmp int fmul mov nop dec xacquire std jae dec add or dec faddl xorl inc cwtl or jmp iret jmp sub in jae inc lds pop pusha jne xor pushf (bad) cmp push stos push lea cmp mov xchg subb cli and (bad) cmp mov orl fidiv and das xor rolb adc fxch insl inc push imul mov xcrypt-ctr cmpsl cwtl imul sbb scas dec mov std or fsubr jmp jle (bad) (bad) push push mov dec add add inc xchg xor sub shlb cwtl fcmove out test xchg jg jp imul mov cmp sub xchg imul jmp dec gs aas (bad) push fs push cwtl cmp sub jecxz mov cmpsl adc sub mov in push jno xchg leave mov in add out loop jae adcb loop (bad) cmpb in pop add mov and sarb xlat lds subb outsb hlt adc loope mov push mov add imul clc shrl xchg mov mov push icebp (bad) sub jle add adc das push sbb xlat sub iret (bad) jb sahf es ja xlat mov cmp xchg push pop subl pushf push xchg ds sub adc xchg xchg mov insb and pusha subb sub fsubr cmp mov cmp into mov fcmovu or mov loop mov cmpb std fcomps and adcb sbb xor mov sub test sbb fisttp mov mov cltd cmpsl pusha or sbbb cs imul xor lds mov adc stc and and sbbl or arpl mov inc sub cmp mov pop xorb dec bound sbb hlt clc push incl test out ljmp xorb or loopne iret jo push pop aam jmp aad mov mov mov cli add insl imul dec push inc gs imul stos xor (bad) outsb inc mov jle dec jle pop push inc xchg mov ret xlat xchg push sub cli sbb cmpsl xor cmp cltd add sub ficompl pushf pop ss xor out sbb cmp or ficoml inc das sbb dec cmp fstpt enter sub lds fnstcw cmp mov les enter xlat inc mov mov cmp jo out in or xchg mov fwait test lock test test xchg iret add xchg loope add cmpsl repz cltd (bad) lock pusha mov jle jl daa add mov in (bad) xor rorb (bad) xchg outsb fwait lcallw fnstsw and andb scas (bad) or jge sub fldenv inc subb pop dec adc in jnp (bad) sarb (bad) hlt orb add subb jge xchg (bad) jb adc push out jp cli xor neg outsl lcall fsubs addl (bad) xchg dec push dec dec addb (bad) testl cmpb adc push cmpsl sbbb mov cmpb push in mov into or inc out test out pop sbb cmp (bad) pop sbb insl clc montmul cmpsb shrl (bad) lea popa scas push adcl sbb jae jecxz sbb jnp sub or shl (bad) subb cmc xchg fcomps or sub hlt or cmpsb push movsb inc mov lods das lock nop cmpsl test pop adc dec pop shrl cmpl sbb xchg rolb mov jae inc js adc negb test in mov fs inc das sbbl lods into fiaddl push data16 aas mov test dec call mov push stos xor or push lcall push fsubrs out movsb loope or mov bound push mov orb les cmp xchg jp push mov js in js imul xchg popf test nop aad bsf lahf into push jg enter pop push (bad) int3 push repz mov pop test sbb cmc movsl and add or repz sbbb fsubl nop pop sub sbbl les dec outsb ret jne and push scas mov and dec out jge pop sbb (bad) pop test lods push hlt push adc sti cmp je sahf or mov xor push xor andb stos xchg cwtl ss cmp xchg jae lods push xchg sbb out lods adc sbb or cmp jb cmp bound cmp xorb (bad) insb sub stc mov popa fstps jno xchg mov lods fwait pop xchg push xor mov xor mov sub imul add gs mov js cli popf adc loope pop mov add movsl adc mov ds clc mov add adc add mov cmp cmovae inc fsubl ficoml pop out stos ficompl mov xor push rolb orb dec stos push push out push push nop stos dec aam cmpsb push xchg push (bad) fisttpll bound aad xchg xor xor enter rcrb or and lock pusha xchg out clc (bad) jns adc enter push addb pop dec andb pop clc mov scas ljmp sbb pop sahf daa (bad) jns les cs lock mov xorb xorb fstl ja test jle pushf sbb add ljmp mov sub or push mov fcomps repz cmp add orl scas dec stc flds adc js jns add dec xorl adcb dec xorb cs jnp dec push loopne mov adc loope idivl pop sti test repz cmp sub jecxz mov cmpb sub and incb shrb xor xor dec nop xchg pinsrw mov (bad) ret test inc pop int xchg pusha es push xchg outsl sarl jb mov fcomps ficompl or xor push imul inc mov sbbb sub jb pop pushf fpatan push aam test jmp push test cmpl or repnz rcll mov jno dec or mov push mov mov xlat sub xchg das int3 adcb mov sbb jno test push jb imul sarb lds repnz inc nop pop repz iret arpl jne sub aad inc sub push inc clc jae mov lods sbb lods and shrb xchg ret jno add jmp decb and xor pusha pop out jge test insl mov cld add and js in jmp xor adc subb arpl add inc mov int3 test sbb stc cmp js jno push test jne mov mov mov adcb lahf sbb add inc mov cwtl jb jmp movsl push inc cmp loope sbb out xchg mov scas in pop lahf xlat orb imul xchg insb hlt pop outsl xchg cmp xor arpl stos mov adc cwtl das dec scas ljmp push imul js int hlt or mov pop lock or ret mov sub pop adc or xchg push lock cmpsb subb sbb or (bad) pusha ficoml das enter test adc jl cmp adc ret addb xchg xor fisubl add mov inc sbbb into sbb mov cwtl sbb lea (bad) std repnz fisubr adc mov mov das rclb leave xor jb mov dec enter clc inc subb jmp jmp out test lret push and subb lahf pop movsl inc mov jae nop adc mov add fiadd fs inc inc daa aad movsbl sbb std cmp addb mov repz mov fcoms xor div mov mov lds xlat dec xor lock push adc test (bad) sbb sub xchg arpl inc and cmp outsb mov jl mov xchg add xchg cmp imul cmp push aaa pop adc pop push xchg cld insl popl ret mov pop nop jno jg sbb sahf or mov movl pop mov test sbb push imul (bad) hlt (bad) icebp push cmp rolb hlt jge cmc addb xchg (bad) nop aas mov mov out fadds jecxz and enter lret pop cwtl (bad) ljmp je mov and clc xor xor aam mov fiaddl mov ss xchg sbbb cmp aam mov roll (bad) leave xorb mov push cmpl add lds pop adc incb mov fildl add or das bound jmp inc rcrl in dec lcall arpl sar or adc lock mov in jl addr16 test mov aas clc mov lcall inc dec mov xor ffreep ja in jecxz and (bad) jge adc (bad) xchg imul mov call andl cmp adc in xor jnp idivb sbb xor stos mov pop nop lret xchg mov test inc (bad) cmpl sbb push pop subl and int3 sub xchg mov xacquire pushf rcrl jge lahf cwtl pop stc and add ficomp cltd xchg push mov pushl mov js aaa ficomp jnp mov jno sahf mov cmp sarb xchg lea mov or sub roll int3 mov mov jnp imul mov mov addb fisttpll pop aad dec pushf pop push push sub mov test jbe or inc cs jp xchg jns pop cmc jecxz push sbbb cmp dec xorb (bad) loope (bad) push sbb cmp cmpb xchg mov xorb fisub xor jge jns call cmp bound push push push insb jo xor gs lahf (bad) cmp stc lret mov inc jg (bad) mov out jmp les adc add data16 inc mov sbb add dec dec nop mov jne inc into cmpl sbb push push test add pop jecxz test enter mov mov mov jns sub (bad) fmul xor xor orb repnz aas (bad) mov jecxz mov mov (bad) cmp sbb jecxz (bad) cli mov sbb test fsubl enter sub orb ret sti andb jmp dec mov out ja jecxz push adc clc xchg lock (bad) dec sti ret mov push xchg lahf adc xchg mov and jmp (bad) push lock cmp push icebp adc insb mov adcb mov pop mov xlat rorb mov inc jmp adc dec out (bad) push inc cli addb loop or data16 jb dec lods push mov decb pop ja lds cmpb push (bad) repz inc nop scas pop icebp pop or std shll xor jne jae rorl nop cwtl push and and faddl mov out fisubr jp xchg bswap mov js cmp mov sbb outsl xchg je add mov ljmp aam sub idiv cmpsl bound shrb mov add and test push or nop inc push cmp subl loop lds cmc mov out xchg add ljmp test cmp test orb test dec xor cmp pop imul (bad) mov lds pop movsb test adcb jmp sub roll test jecxz cmp inc xorb push and lcall popa or std sbb outsb ret mov inc mov loop (bad) cmp js enter or xchg mov sub mov jae xchg cmpsl pushf and sarb jmp xor xlat cmc cmpsl stos loope iret cmp xor rolb pop or push xchg sbb add jbe add ffree test test insl and fucompp push imul les js,pt fidivr mov int3 ss sub push adc fcmovnb adc test addb iret jo addr16 push push jbe and or mov addl jns jns sbb mov add subl std movsb jge fild mov and pushf and fcompl add sub nop adc sub and (bad) nop mov popf bound xlat inc sbb jl jle dec sar xchg test cltd pop adc clc and jno dec xor add cmp dec mov sti dec inc and in inc ror pop das and cmp ja (bad) xor cli xchg repnz push xchg movl push iret cld (bad) or add mov jge scas stc andl les loopne pop cmp call daa xchg ja movsl jmp and adc adc incb arpl push jecxz fs xchg jb pop mov ja jo cmpb xor cmpb sbb in xchg outsl pop or dec lods stos out scas jge fldl2t cld adcb xchg clc push nop test insl ljmp mov adc shr mov in xor scas loopne cmc or shlb and push test inc mov je shll aas std test incb jle incl loopne mov andb mov cmpsl orl pop xorb mov jmp push lods xchg stos mov js mov ljmp xchg xchg iret mov jnp test lods sbbl dec push adc jg xchg js fwait (bad) movsb and mov (bad) xor rolb test orb aas push adc les lods mov repnz inc or and jge (bad) scas and dec sub bound cmp nop outsl data16 and movsl push mov (bad) rol push adc sbb ret clc adc cmpl add push mov push outsb mov orb mov test cmp or sbb inc sub push movb les fcmovb jge add out iret or jp add cmc dec addb fcmovu sbb pop test jg clc out xchg out push pop cs rorb andb daa lock sub repnz (bad) cwtl sbbb and mov andl aam (bad) adcb rclb ds xorb subb or stc and xchg inc push jecxz dec loope ret xorb insb andb mov or mov dec test mov ljmp mov fwait and adc cwtl jle and loope scas fbld js rclb orl jmp xlat xor push dec sub inc inc test pop jnp pop adc xchg (bad) xor or arpl rclb lods jno out cmc sbb call mov push cmpsl ret sub lahf pop mulb incl in mov cmp fmull hlt fwait test (bad) je inc dec mov sbb fisttpll (bad) push xlat das mov ja dec nop bound dec in add inc in mov and inc sub mov mov or xchg add test addb idivb cmp jl mov sub mov add sbb pop fidivr sub sbbb sub xchg xchg test imul mov sub orb inc fsubr lahf adc in sbb test test adc andb shld mov push stos dec and pop in js pop xor ficompl arpl jnp lea ret inc cwtl (bad) xor mov push clc jbe sub orb inc jle ljmp jmp mov pushf xchg jge lock cmp xor in call sbb jle mov adcb aas inc stos dec add lcall adc adc xchg (bad) iret cmp dec jno xchg shll xchg jnp data16 test xor mov sub or xchg psadbw adc mov frstor sarl cs mov (bad) mov stos rol loope dec outsb xchg or inc lds xchg test xchg notb nop gs hlt jnp,pn clc sub pop sti negl popa repnz pop adc xchg jg push in push push out jns xchg xchg cmp and adc sub mov aad jl in add arpl (bad) sub sub iret movl xchg shlb scas js pop ficompl mulb push test fild outsb and jecxz xchg xor call sub test mov mov mov add in jmp jle icebp nop (bad) dec ret ficompl adc iret repz cmp jo xor dec repz imul sarb mov sub int3 cmp sbb mov push (bad) test ss jbe shll dec repz inc fsubl push add pop frstor (bad) daa cmp jae repz cwtl mov repz mov cmp jecxz push (bad) lods inc jmp lods les aad pop inc inc inc ret xchg pushf adc jbe mov adcl aas repnz hlt popf jmp decl sub arpl xchg push roll jbe (bad) out dec je lock cmp cmp xchg test mov mov shll addl push dec mov jle xchg adc pop cmpsb add sbb pop push sbb loop roll iret jnp stc (bad) loopne cmp pop int test jle mov subl add cmc sub iret cmp mov in xchg cmp jns loope in xchg adc hlt lret jne push dec sub out jp (bad) pop out sub jbe fcompl ds enter sub mov cmp cmpl stos xor ret test xchg xlat adc cli (bad) jg aad sbb iret mov push or mov mov cmpsl mov add jnp xchg in push repnz (bad) or bound pushl inc mov mov stos js rclb iret lods (bad) adc roll sbb es rol xlat inc mov adc aas mov sbb sub pop or pop adc rcl sub in cld adc int3 sub add ds push mov jno ret sbb cli cmp jbe popf lds jnp test fcompl cli clc inc jle mov inc sbbb xchg xchg data16 enter cmp xorb push shrb aam mov push scas mov mov out inc mov sahf pop insb addl cmpb clc push jle cmp xchg xor aad add popf shr ds lahf inc enter addb (bad) jb push repz mov xchg jge mov cmp xor (bad) sbb and cs (bad) out pop pcmpeqd jp mov imul push cli mov es fdivs mov xchg in or add in mov addb and mov push pop clc pop mov sbb jmp addb ljmp xchg lea sub ret ss imul andl (bad) daa int3 iret je adc mov jle xor and xor lea jle mov in sub pop (bad) js inc mov rcr push mov pop mov imul xor andl xchg push out jae (bad) or dec mov les setbe push sti lock out (bad) inc (bad) popf push rclb mov mov sub mov inc cwtl inc mov xlat jp push inc out sbbb repnz or iret subb ljmp jle mov out sbb test vmovaps xor add dec mov test inc push addb mov inc push popa ds mov mov adc cmp mov cmpsb test xor mov fdivr (bad) insb xchg adc pop je cmpb pop and orb mov in sbb push mov adc test and popa frstor (bad) sub out mov jl lock mov jmp inc scas lcall mov jle incb mov push cmp test dec rcrb push aam andb xlat jb cmpsb fisubl jno mov subl test and orb cld scas lock jl test xchg rcrb (bad) xor mov cwtl aaa cmp dec pop js fsubs test jns fist mov pop xor outsl inc fstps test cmpsl cs add cmp orb cmpsb push cmp (bad) mov aam test shrb int3 test loope mov out lock mov cmpb jg mov xchg push subb in ret nop push loopne jns aaa push push push out lock cmpb movsb dec xorb lret ss mov imul fsubrl imul js hlt xchg (bad) shll leave ss test sub jg scas inc stos xchg jbe imul cwtl out lret mov ljmp test jo and jecxz adc enter inc insb lock arpl jns sub daa mov pusha movsl mov xchg jae cmpb sbb jbe cltd test cltd adc or sbb ret stos push sti cmovs cmpb mov pop mov xchg sub out lock es xchg scas pop add inc xor popf pop (bad) js add cmp nop loop cmp add (bad) jno out xorb mov enter fldl pop sbb pop mov xchg fs fild adc out push cmpsl pop call add rolb (bad) sub stos xchg ja mov sub xor xchg xchg data16 cwtl rcr xchg pop xor subl nop popa in or lret dec stos mov push sarb xor ljmp movups orb cld andb inc insl data16 lret ret (bad) cmp frstor cmpsb jmp (bad) out pop leave fadds into je adc cmpb into sub nop (bad) in xlat movsb (bad) xchg in or and and jle cmp imul pop sahf xchg cld cli flds or jo cmp aaa std adc dec (bad) testl aas mov or call int3 cmp stc xchg jle lods (bad) jl and lock add ja adc nop cmc pop incl mov sti inc cmpl xchg and or cmp lea sbb repnz mov ret pop push test adcb or imul out mov adc xor push add ds sub fisubl xor out add sbb push lahf push cld sti push jl or jg push xor dec mov (bad) js push xor push subb jp std add sti mov mov shll pop push imul stos pop loopne push jnp sub test out push mov mov or sbb push pusha push xchg pop xchg out pop dec loopw nop jg cmp fildl popa cmp xchg sub int cmp add sbb lock cli clc mov inc adc push (bad) add test orb gs enter mov jle cwtl inc xor mov dec ficom or fildl bound inc mov adc icebp pushf push lock loop test push xchg and rorl xorb mov dec test aam lock (bad) push test punpckhdq adcb jne pop in out test addr16 pushf andb xor aaa cmp lods and dec adc push sbb inc add arpl ljmp xchg cmp or inc pop lea shlb and mov test (bad) mov sahf inc test adc mov xchg and or add add inc mov mov subb mov or adc jp inc cmpb jecxz dec mov sbb push sub mov sbb add mov sti xchg lahf cwtl daa aas loopne mov pop jne push jle cld orb push adc sub mov mov sbbb nop scas cltd pusha push (bad) andb mov mov jg mov jmp pop xor test rorb push addb pop in mov cmp test cli inc push push nop rcrl bound xchg adc inc leave and lods insb xchg and push or cmpb and cmp imul and insl pop add enter jmp addb daa xor lret enter add xchg lods js into mov lcall mov (bad) mov xchg imul mov lcall push or pop push push xchg into mov (bad) aaa ret enter or lcall sbb fsubrs and adcl mov popf andb add stc or mov in cmp aad (bad) adc test dec pop cmpb iret jmp adc (bad) cwtl clc dec mov imul bound sub lahf jle lret bound adc xchg mov mov sbb lock xchg addr16 and inc (bad) mov add sti scas stc mov addr16 mov inc (bad) gs iret loopne stc stos pop push cli cmp ss push clc jge sub testb (bad) fisttpll xchg dec loopne std dec popa mov mov sbb jmp mov xchg (bad) mov iret ficom pop flds (bad) nop in xchg loope ret aaa xor jae push stos fisubrl sbb jns adc mov inc jo fiaddl mov add insl xor sub (bad) icebp rolb not and push mov jb xor test xchg mov je or iret and sbb aaa lds sub jno sub cmp lcall add je shll mov aad int3 and xchg mov sbb outsl loop pushf dec dec (bad) (bad) mov sbbl cmp jne mov test test cmp cmp push mov add or sbb xchg sar pop iret inc ffreep fcmovne (bad) mov pop sbb ss mov int3 (bad) ss (bad) xor addb cmp mov pop std mov sbb mov scas sbb mov fidivl popf call decb (bad) iret ret xchg inc popf or mov sbb jno int (bad) jo je fdivr xchg and jle add xchg aam lahf cmp jl std fisubl jo in dec dec test aas cli adcl pop jbe or pop orl push xchg call mulb xlat insb add aam pop inc inc push adc add out and adc test jnp jle cli add mov pushf (bad) sub push dec add pop push jo je jne in xchg xor jo push (bad) das rcll mov outsb cmp mov (bad) jge iret lret jg testb mov ficom (bad) jmp push cmp mov adc lret pop ret sub call ret jle (bad) mov enter (bad) or xor add test sarb mov push cmc mov xchg in rcrb sub xchg cmpsl sarl je add push fsubl jb mov (bad) fildl xchg iret sbb xor mov fsubl les cs fcmovu (bad) int dec jl add fsubs icebp lretw sbb pop bound mov mov orb pop incl pop out cmpsl clc mov cli or mov (bad) mov stos dec shl adc pop imul cmpb mov jmp fmul das sar xchg mov lock xchg or out rolb aas mov fnstcw xchg addl mov scas and (bad) sub xchg jmp lcall and cmp clc cltd andl cmp jle enter pop jecxz fsubs clc aaa (bad) xor mov movsb jmp arpl into repnz mov in inc pusha cmp test jmp insb xchg cltd mov in xchg mov cmpsl lahf subl cmp loope and in jno xchg sbb xchg cmp daa stc incl std loop push fstps jb fnop cmp mov and mov or adc je testl in push (bad) jbe aas push cmp jmp pop sub ret (bad) xor or sbb inc dec add pop sub shlb mov addb sbb aam (bad) sbb cmp sbb xor xchg mov jo inc cmpsb pop pop test pop (bad) es cmp out add or pop int mov cmc xchg cmp (bad) lods icebp insb push pop jmp cs mov out lods xchg mov sbb xchg mov js insb shrb sub scas insl es jle add mov outsl adcl push loopne cmp and jo nop adc in into repnz pop test mov and nop xor mov test cmc call mov (bad) push test sub mov cmp mov dec and out jne pop test add sub dec es in ja mov test mov jnp test orb jne sbb je xor notb or mov push imul int mov in lds popa mov or mov pusha loopne repz dec pop test dec test mov andb fcom cmp xor dec jl jmp or addl imul pop test jp add stc push ficompl or repnz lcall push inc mov mov (bad) loopne cwtl add fwait inc xlat push adc out cmpsl push mov mov ror xchg adc fisub movsl mov jmp scas inc int cmp adc icebp lret icebp push fidivl andl inc fisttpll daa push jmp out inc add dec and lock or (bad) push cmpsl ja cmp sbb stos dec bnd in das dec test scas mov aad xor xchg inc test or or mov fnsave test iret sub or aad and lods xchg dec xorb and enter inc inc (bad) xor mov xchg or push jg sbb testl lock and sub xorl jb popa push sti incl mov adc inc inc push inc shrl pop xchg repz pop addl add add andb and fild xchg push inc jb lss clc lock xor jnp icebp inc pop cli push xchg cmp movsb inc mov daa sub outsl xchg jbe pop mov sub cs sub pop ljmp push mov scas push test adc jl or xchg leave clc pop mov (bad) sbb mov and js or push test and (bad) cmpsb pop lahf gs and andl stc push jb mov incb push rorl sbb jns dec dec test mov je push adc ret out cmpsb pop addb ret ds (bad) cmp std and sahf dec inc jmp xor xchg dec jp test test test sub dec test add or mov mov adcl bound clc hlt or mov sub jmp mov movb test fiadd les push sti data16 fild jg out cwtl std xchg lds iret into (bad) add shrl addr16 popf pop add popa push mov mov pop stos push and sbbb jge sub pop pop jle lret push movsl and in ss adc cmpb xor add stos int3 mov adc pop inc out mov cs mov lret aaa loop fwait xor stc int3 cld cli icebp test rcll data16 inc dec scas inc mov pop incb adc test mov (bad) mov xchg pop jae inc sbb mov sarl in pop addr16 (bad) mov (bad) fcoml jg cmp (bad) mov daa cmp dec mov mov jb cmpsb nop sarb inc cltd loope fcmove imul inc mov stc test inc lds rclb fadd out jecxz push test enter aam adc insl xchg cltd inc sub xchg jne or inc adc jbe mov (bad) ja jmp and adc push cmpsb out sbb ret clc andb sub enter jbe mov dec scas sti mov sub and pop xchg xchg xor sbb jg sub xchg xor mov jp and insl dec mov shll test jbe cmp lahf call sub jge repnz dec mov fist mov or bound jne (bad) mov test fucom das jmp inc adc lods sbb fdiv addr16 orb jne add fisubl push sbb dec adc push test inc in popf cmp (bad) xchg jnp inc mov push cmp enter xor rorb imul movsb cmpsl and lds lock dec jae dec mov (bad) (bad) loopne inc iret pop pusha xor bound test jle stos mov ficoml out xchg inc mov mov fnstenv push cld addr16 mov adcb fs lcall pop add sub out cld add test daa sbb lds ja push movsl cmp push ret jo outsb xchg in adcb pop xchg fsubp orb shll cld push jg xor or lea pop dec stos inc (bad) xchg addl and lods xchg push push mov cltd popa mov sub add sbbb enter (bad) mov (bad) cmpsl push fs daa xor leave mov hlt adc test int3 inc jmp imul add sub scas fdivrs (bad) lret jmp xchg adc loopne fsubs pop inc pop fcomps mov or xorb cmpsl cmp std or arpl jl jb test mov dec mov inc and (bad) adc pop movsl dec dec andl out fmull int3 mov test inc aas xchg call in sahf fdivs or fldl push cmp sub add lret pop cmp clc shlb clc fidiv push lods cmpsb (bad) mov in inc shlb pop leave pop mov mov mov iret test call aas daa test inc addr16 sbb data16 inc incl fstpl mov pop cltd mov (bad) jno (bad) int xor loope xchg mov and test scas jg push lods mov adc xor lods je cmp inc ss arpl jnp aad mov loope jnp test gs (bad) sbb push movl fwait push add inc mov or in stc add inc cmp inc loopne (bad) std adc add xor mov pop cmp (bad) mov fdivl lods (bad) incl jae cmp mov (bad) push mov xchg adc sahf not lock mov jnp adcb sbb orb stos xor mov ret xchg inc jecxz andb (bad) dec mov cwtl pop popf xchg dec cmp inc inc mov icebp jns push cwtl push pusha add sub or mov loope test aam repnz dec out pushf test inc cmpsl xor mov and imul inc hlt jbe push clc xchg movsl subb jo cmpsb dec in jno pop arpl xchg mov xchg jp or pop inc xlat hlt inc fwait fwait pop cmpsl xchg pop aas clc dec jmp in popa fcomps bound movsl outsl mov or arpl and cmp rorl push mov popf movsb rorb mov mov xchg pop or pop fstps (bad) pop and adc mov lret xchg int3 arpl mov gs push out cs lahf jae cmpb sarb mov (bad) xor pop rorl mov insl xorb aad subb cmp rorl cmc fidivrl inc pop test arpl xchg xor orl mov pusha xor cmp movsb daa mov mov mov test xchg sub push xchg aaa orb cmp outsl adc in (bad) ja push mov sub clc pusha cwtl mov jl outsl adc mov rolb push xlat pop jnp mov fsubs xchg jo sub jecxz shlb xor sub mov insl outsl xchg pop outsl nop xchg pop (bad) jo test mov ret xor ss push cmp cli arpl mov push mov xchg adc add out leave int3 xor or inc and jmp insb sub pop push xorb pop lcall jae sbb add jno mov xorb shrl fs adcb clc cli add pushf dec mov lea pop pop or xchg ret inc inc ljmp mov fsubl pushf jae jns jecxz mov mov dec mov xchg rol xor adc iret in xlat mov xchg negb adc repnz lcall push int adc enter addb cmp mov rcll test nop roll repnz nop fcomps test cmp dec shll test orl cwtl aaa pop out mov rol add cmpb cmp jae push xorb data16 outsb inc mov ret and fwait and mov cmp cld add jnp xor push sahf test xchg or inc mov movntq adc ret xor cwtl mov andl jle cmc imull orb jae test or out (bad) addr16 mov andb mov mov mov imul sbb or in xchg (bad) xor xlat mov incl xorb pop sbb test sub ror out sbbl and inc test in mov or call hlt ja mov xor adc pop xorb push icebp jp mov jge jle mov rcll mov xchg cltd pop cmp (bad) (bad) or out jl std xchg inc data16 xor mov ds inc mov test pop cli add rcr xchg imul mov pop mov mov ja add dec mov inc loop adc iret mov test and push loop out in test lcall push sub add pop or mov (bad) andb ja mov repz push adc lds enter dec push iret cwtl testb in (bad) inc mov popa xchg sbb nop andb leave xor std push imul dec addb lret or jns jmp test test pop and xor fadds nop xchg xor (bad) jno push mov or xchg lock test or fistpll test or call xchg es mov pop xchg std insb pusha roll xor (bad) xchg aad xor hlt sbbb test jge mov std mov mov ret mov andl or xor xchg xor and mov orb cwtl pop pusha xchg lock gs xlat push adc xchg arpl adc cwtl (bad) int popl push in ret add inc jae push pop mov in subb or jmp fcos or inc into out mov or jae sbb jnp or ljmp lock lahf popa fbld sbbb xchg loope adc add jnp loop arpl adcb out jg pop jno add nop dec shrb inc fiadd or test movsb pop mov sub outsl inc cmpsb dec pop ss fsubl stos or or enter mov jnp cmpl inc stc aaa mov shr cmp sub pushl fadds xchg adc in mov lcall push cmp inc ljmp mov xorb andnps mov mov cmp outsb mov cmp mov inc iret or andb adc sub scas scas frstor sbb fcoms js xchg aam jp dec dec jle xchg jl inc imul xchg mov push call pop aam fcompl shlb popf ds cvttps2pi xchg or dec cmp fcmovnbe mov andb leave cwtl or or (bad) fistp insl test arpl cwtl adc pusha mov roll sbb mov test or testl xorb les cltd ljmp xor lock mov inc pop aad mov pusha js iret dec out xchg xchg idivl push push cwtl clc popf adc xchg cmpsb push shrl int mov xor in dec ljmp loopne sti stc (bad) mov inc movsb pop movsl orb mov inc push test sub (bad) xor adc mov mov je push js push test test scas push xor (bad) int aas xchg pushf cmpsb inc jne clc (bad) mov out iretw popf lods nop loope cmp xor (bad) iret xlat pop popl (bad) lods jbe lds jns ret cmp cmp mov fs lods mov add (bad) out enter sti inc xor cs xabort nop xchg repnz and iret imul xor pusha ficom pop out mov repnz (bad) mov push (bad) jnp arpl fs iret test cld in pop and and pop stos call rol nop ficoml cltd int3 or fsubs inc mov adc sbb clc jge cmpsb inc (bad) stc adc jno (bad) aaa rcll es inc ss ret enter daa and int3 (bad) cmp inc ljmp out rol or andb lret and cmp dec pop dec and (bad) adc aas pop pop data16 (bad) mov xbegin mov jge mov stc js,pn sti sbb adc mov iret adc lock (bad) outsb movl add mov loopne std sub xor pop sub sub call leave jae test cmp sbb adc fmul jae cltd loope decl xor cld dec addl (bad) jmp insl cmpsl or or pop inc ficoml fstp xchg cmpsb fcoms cmpsl push dec sbb les or mov orl out ret test push jle je (bad) in loopne mov in lahf push fldenv fisubrl les add add dec fldl inc xchg mov push imul fmull xor int3 add sub pop (bad) xchg test fadd iret sub bound repnz dec push roll inc int3 cmc add and fnsave jge movsl push xor sub adc cmpsl lea mov dec or mov add inc mov rolb sbbb and jle fdivr (bad) aas add ljmp gs xor leave sbb std or xchg jbe mov cwtl movl sarb daa (bad) icebp or lds in sub insb sbb pop stos xchg int3 cli test push loop in sbb adc dec or ljmp lock stos push fisttp (bad) pop cmpb das or add mov inc sti cmp sbb mov xor mov xorb ja orb add inc in dec scas (bad) (bad) push cmc jo pop test hlt xorb pop nop test mov jo jnp sub mov push movsb jb sahf inc mov push hlt xchg dec pop scas and jmp cmp (bad) fdivrs test test sbbb sbb orb cmp push imul push addr16 loope cmp jno xor rcrb sahf mov cmp incl push inc shlb daa xlat imul xchg rolb test clc add jl loopne sarb subb popa lds sbb (bad) loopne mov icebp mov mov cmpsl bound scas pop stc xchg push (bad) xchg mov pop orl out jle mov sub mov std (bad) fcoml (bad) push and in lods loopne sbb in mov popa sahf sub lahf pop xchg stos push inc dec mov arpl fildll jle mov int cmp add cmpsb mov rorl sbb push (bad) in xchg cwtl jb mov pusha jp mov popf pop ret cmp jle dec aad mov popa or faddl mov adcb xchg push adc lcall push mov enter inc sub sbb ds fs (bad) outsb cmp std xchg pop pop sbb rolb adc mov jo jae je test adc or mov cltd mov sbbl mov dec fcmovb lahf cmp add aad mov dec mov (bad) int3 fild bswap test icebp cmp fwait insl loopne fisub xchg test dec addr16 int rep and xchg jl (bad) xor fsub sub nop cltd cmp test ret inc insl mov cmc adc adc xchg mov bound ret jg jge jl jnp,pn arpl hlt mov daa cmc nop ret and ja das ret jns pop xor pop jo pushf iret js push xchg movsl ret notl mov and push ret mov leave xor push enter lret and loope and sub push das cmp sbb jmp popa fwait mov adc xor test test aam (bad) fwait inc add inc sbb adcl push and push push xlat mov and jle xchg xor adc aad jns outsl rcl sahf mov xlat ret mov fcomps add lcall les setge test jle xchg sub arpl add sbb cmp xor ret push clc xor test cmpsb push mov mov add add cmpb fbld les out adcb mov orb movsb push lahf pop xorb aaa mov nop pop or push cmp cmpsb inc mov push ret test mov inc adc out cltd xchg nop mov stos mov jb leave xorb xchg xchg addr16 mov inc xchg or mov lret pushf sbb mov jge xor inc nop imul push xchg fs fldenv dec icebp cmpsl sbb xor dec xorb mov loopne or fistpl out pop nop fsubl enter push adc je and add popa jb clc imul xor jo sbb test les push sbbb xor cmp push in negl imul xorb xor pop and xor dec jno popa cmp ret sbbb xchg pop add or cmc push cmp or mov and loope (bad) lock bound xchg sub add nop xchg fwait xchg adc jbe imul push fdivrl ret sub test ds pop lods lea cmp xchg xchg jnp ret sbb mov stos popa push imull mov arpl push insl inc push and outsl js jb into dec pop xchg lea dec pushf mov (bad) ja cmpb xchg movsl pop add add cwtl mov or scas jns in faddl fwait xchg push xor jbe cld or pop xor cltd xchg mov insb test xlat pop loope push sbb sahf adc mov sahf fisubl mov ljmp push jae xor or pop mov add orb mov mov adc and inc movsl push loopne repz ror orb xchg push jecxz imul or and cs (bad) stc add cmpb add push xor stc xorb sbbb mov xor pop pushf jle push xchg jecxz cmp cli imul add loopne aad jg stos shlb pop test popf inc pop pop xchg pushf ficom cmpb ds enter xor imul orb or js inc xor (bad) jno xchg adc push sbb push adc cmpb jle sub lods rclb out stos push fcomip push test mov jo loop push lock in out movsb sar xchg sub (bad) cmp lock movsl adc sti cli popf or inc inc push sub scas cmp fimull (bad) cmpsl test sbb pop lahf cmp and jae mov (bad) mov test inc cmp sub xchg movsb dec in add orb jge,pn enter mov pop dec mov mov imul imul (bad) fild and ret mov (bad) sti xlat and fisub lock jge xchg mov fisttp mov jl adc je xchg pusha dec icebp xchg dec xor fist dec cmpl mov lds je addr16 or sahf pusha popf addb and loope int inc mov xor addb mov fwait pop dec mov sbb ret lock mov bound jbe lods dec inc lock xchg rolb in jmp jae or mov mov popf pusha out ret inc ret sub enter stos imul test sbb jle or cmp das cli sbb test dec hlt push je xchg pop jo jg dec lock push les push mov test adc (bad) fiaddl andl arpl enter adcb sub or sbb faddl mov xchg nop pusha cli add and mov div or xor mov enter mov adc xchg xchg js lret rorl test (bad) sbb jae inc fnsave (bad) icebp test or (bad) (bad) out sahf shr pushf xchg push sub shll das or mov popf iret test jp (bad) push out arpl addl sub and pop aas xchg (bad) sub sub insb pop add shrb jecxz js mov inc push pop nop add iret cmp add gs aaa jae ret out loope test imul cmpsb or add sub fs add imul push scas mov iret sti adc aaa push es add in andb out push les loope pop mov lahf cli enter in movb js jmp cmp scas bound incl cli inc adcb sbb shll push mov cmp mov (bad) mov xchg in fstl (bad) jp test repz xor mov pushl insl andl jns dec rolb movsl pop mov sub mov test sub repnz incl jp mov xchg add cmp subb pop and cli sti bound or ss dec adcb into cld push adc sbb lods mov xchg leave sbb and aaa inc inc jg lea adc jp sbbb subb mov push jo mov sub mov in lods loope mov inc andb mov add iret push or bound outsl adc inc jecxz ds in test and mov gs cmp push leave xorb sub test in and je mov mov fwait sbb loope mov push das rcrb imul mov and pop xchg cmpb fnsave sbb pop clc sub fsub mov orb ljmp aaa shll lahf adc mov and ss xchg mov stos outsl mov jge sub inc xor adc (bad) mov (bad) jae push adc cmpsl popa movsl xlat jmp subb cmp pop bound inc iret jecxz cltd mov insb ja and sub addb jo test xchg add test add cmp xlat xchg bound or (bad) xor sub pop ds jne add addb and out xor cmpl push xchg aaa cmp jle bound in mov cli lea or mov rcr sub push jbe cmp in or and pop xchg sbb cs and subb pop cli jb jg xor push adc repnz sahf rolb and imul dec test mov inc cmp ss ja loope dec int3 pop orb dec fs aad icebp and sti sub mov xchg fadds cwtl lods pop add popa pushf xchg push sbb mov not mull lods lret jmp pushf (bad) fdivp aas push jbe daa test cwtl sarb lods mov adc data16 fmul dec cmp mov loopne pop test and ds jnp sbb push stos cmp (bad) lret inc out push mov mov lret mov mov (bad) sub add dec adc and dec sbb popa nop popa xchg mov jecxz inc js sbb cmp aas rclb or fs push jae test mov adc sbbl or mov inc mov inc iret dec mov (bad) pop nop scas mov fwait and lcall cmpsb stos pop sbb daa imul mov push fisttp inc sbb andb bnd jg mov cmc jbe (bad) or mov or or inc loopne mov mov pop mov lock scas xor das dec add addb test out lcall xor popa les inc movsb andb dec aad adc sti gs mov in mov mov pop and mov xlat adc jp push push mov inc pop je lret and aas icebp jno mov (bad) push clc mov test lea loop sub cmp testl test or pusha sahf pop add pusha push lcall cmpb inc sub into xor std stc ds out inc sbb das mov lock (bad) or stos gs cltd mov inc or je andb xor orb imul lcall and (bad) push pop bound jnp and adc jp mov mov xchg sbb cs (bad) stos rcrl dec es mov sbbb sbb loop fs test mov idivb pusha je xchg cmpsl jb stc sbbb in outsb test xchg pop push or or push inc movl std xor cmp sub subb jmp lods cmpsl lret xor sub push jno rolb repz add or mov out jmp xchg aam sub inc gs cmp out imul jne push js adc enter jo or mov enter inc subl lretw sub inc mov mov adc std add add sub cmpb pushf data16 cmpsb aad lret push dec adc movsl or mov sub xor test je rolb xchg add jmp hlt sub mov push inc mov dec dec add sub cltd add sbb dec nop push pop fldl sbb pusha add in push aam mov dec das mov in inc mov mov cmpb dec fcompl insb cmpsb jp ja or mov and add mov imul js xor and orb or mov in push lret mov push mov mov arpl sbb inc push ljmp dec mov cmp cwtl fiadd lds les sub insl push aad scas push fisttpl mov mov sub add jp insl and test ret mov sbb jle xchg pusha dec jb fs xchg sbbb and pop mov enter mov lock inc scas sbb push and bound inc out andb xor std sbb call xor sarb and mov out (bad) xor cltd loop faddl sub sub xor fldt pop xor cld push outsb fsubrs mov call cs cmp jb inc ret jecxz addb xchg imul mov jp mov ret bound icebp mov insb les into imul mov xor call inc mov mov lods and or adc mov or test enter test xlat (bad) adc inc nop xor cs rolb dec mov (bad) dec push daa add push ljmp pop dec inc cmpb lahf xor test add mov shlb bound dec fidivl push test add ja cwtl sub fisubl mov mov mov xchg add je sbb ret pop xor ds mov daa mov dec std mov or aam popa sub jno test sbb push out test ficoml addl xchg fistl or rolb mov movsb pop aaa std adc fadds movsl mov pop in and enter pop test xor test jns dec and in je cmp or (bad) fdivrp xorb ret fimull sahf xchg (bad) fildl push mov and imul dec stos loope in pop mov jecxz inc mov inc mov icebp jbe mov dec je jmp push mov in cmp add mov xchg test scas lahf lock mov imul outsb xor xlat test out push cmpsl pop mov and xchg mov sub mov idivb pop push enter sarl enter mov aaa int3 fnstcw pop add rclb push aaa outsl add faddl xchg xchg or andb mov stos push and js mov xchg fs mov loop xor fisubl jae push ret xchg clc push mov cmp pop cmpsl cltd data16 jne cmc jge aam daa icebp movsb aad or push scas loopne jmp icebp or movsb pop pop or jne mov mov out sub bound cmp pushf mov (bad) arpl push lcall loopne add adc into adcb push push iret pop lds loop mov pusha cmpsl or push lcall adc test cwtl add sahf mov (bad) jnp (bad) andb pushl enter fildll adc sbb push rol xor mov push sub dec inc push hlt inc insl xchg mov xchg insb jno cs mov jno sub mov dec mov and adcb cwtl (bad) fsub adc cmpxchg add xorb sub xchg movsl repz adcb xchg mov push into cmpl inc xor pop cmpsl sbb or xchg aaa mov dec nop push int3 xor and inc jne or fadds and addb loope (bad) insb icebp inc sbb clc ret fldt addb loopne mov mov sub repnz test inc push mov adc outsb mov aad fcmovnu insl mov loopne mov leave jnp movsb inc in popf imul mull mov or jb adcl jg push sbb dec mov mov mov fwait adc mov and lds adc sub mov pop mov scas xchg lds sbb je xor and test adc (bad) or mov ljmp loope mov cmp stos mov inc pop cmc (bad) cltd and xchg sbbb mov loope rclb push adc andb cmp daa pop (bad) clc fwait xchg mov pop std and (bad) aaa jecxz int3 stos ret stos orb fildl lods jnp enter stc mov ja adc add bnd dec aam lock int (bad) inc ljmp xchg popf popa aad andnps sbb (bad) jns idivl mov aad sbb add cmpsl jb scas pop or cmp mov sbb xlat fadds lcall in cmpb cmpsl (bad) scas mov repz mov int3 mov nop push push cmp mov sbbl cmp mov lds andb negb andb sbb dec and inc sub jecxz rolb inc push adc add or or mov test xchg fcomps pop xor inc out cmpb mov mov orb sbb in (bad) jno leave mov xchg stos push jmp adc xor xchg sbbb fsubr inc adc xor xor push sbb loopne and mov cmpsb xchg lods sarl (bad) (bad) js mov jns stos clc shrl aaa xchg inc out xor nop scas push in mov repnz mull and test fmuls push cmp xor jmp adcb xchg fistp xor test das and mov nop xor fwait test shrb ret stc loope dec push sub movsb xchg add das mov mov add std lock push es nop inc fcoml dec nop jge mov sbbb mov rol mov pop cmpsb cmp cmp test add hlt adc mov inc pushf lock icebp and sub mov add push jge ss lds pop popf repnz je sbb push test scas addr16 test jecxz mov pop sbb lahf mov add cli in rclb cli push dec mov pop pop jmp loope orb xchg ret ss mov aad test jno pop hlt add inc cmp imul dec ds fistpl add insl outsl cmc sbb sub jne xchg rolb sbb addl jmp or test int3 mov inc (bad) and sti jo dec inc nop dec pop cmc fsubl cwtl push jb clc add aas xchg ljmp mov int xor outsl cld jle stos out in xor pusha push lret ret nop mov add adc pusha fidivl dec shll push call mov mov push bnd adc cmp pop and aas int3 xorb xchg pusha sub jnp mov outsb adc std test icebp xlat subl xor leave in sbb xlat mov cmp shrb adc pop notl shrb adc jmp stc fs loope or add xor lea (bad) jb xor loopne les dec push dec in or in or js sbb cs dec jecxz movsb pop mov imul pop jns aam les xchg mov data16 fisttpll inc xchg mov out xor cmc add jmp fcomp test adc and (bad) rep es outsb jnp or inc addl jecxz add loope and xchg (bad) clc mov jl lea sbb (bad) mov adc lret pop neg data16 ret fldl push cmp jae std stos pop add jbe mov mov stos cld imul ret push sbb pop jl pushf mov pop aas jmp add inc pusha inc pop xchg xchg pop sbbb mov lock stc and loope add xchg outsb xchg dec xor pop push push xor (bad) or js psubb ds xchg cmp int sahf add jbe sti pop xchg outsl sub mov enter dec cmc or xor pushf addr16 aad xor dec jp sti addb jo lret test push cld clc (bad) pop icebp or mov mov jns cld push mov notb xor adc mov xchg mov (bad) out daa sbb mov cmpb sbb add pusha test and add (bad) mov mov sbb negl xchg and rcrl push mov in xchg or jo in fiadd test mov sub addb push adcb sarb lret lods push xchg fcoml adc (bad) lcall les fcompl and imul lret mov sbbb lahf pop gs xlat xchg cmp cmp mov mov mov cmpsb test xchg xchg mov call or lea js clc dec pop mov adc sbb daa dec mov repnz nop cmp aam sub vpunpckhwd and adc or out iret xlat sub cltd ret (bad) mov mov cmp inc add bound insb fcoml iret lods out pushf add mov jo loop mov or inc cmp mov divb data16 enter fwait jb pop xor mov mov adc push js mov loopne cmp jb je je cwtl or push icebp xor lds int3 cmp gs fs sub insl test push sti cld repnz es add lods mov dec mov repz or mov mov push pop mov add loope in adc icebp mov xor sti xchg pop in loop,pn (bad) cmpsl inc (bad) push nop mov mov mov sbb stos xchg pop fcmove cmp enter mov int sbb push shrl dec cli int mov test cmp add push fdivl gs pop pop sbbl adc push movsb ret mov inc push js and cmp into stos push lds pop mov fnop mov dec and fwait andl mov lock divb push jne ss adc dec gs jle pop ror stos inc or adc cmpl mov aad fs rol inc jle lahf inc gs gs in mov jle xchg adc in sub jg push sbb push fildl lret adc jmp add lahf jbe aad push mov sbb xchg mov out or ret enter repnz xor ret pop (bad) push mov sub fcompl ja cli repz adc (bad) icebp sub add add and pop add jl dec fcmovnb add mov outsb push test (bad) adc lods push dec adc mov in mov xchg xchg cmp mov jmp fnstsw stos icebp mov (bad) mov xchg rorl mov in outsb jae (bad) inc cwtl add push mov sbb xlat pop adc inc lcall push or enter push jnp nop (bad) adc fcomps mov mov or jbe and movb sub shr test inc cmp add pop and or sub inc cmp fs jp sbb sub aaa xchg xor (bad) out sbb in leave and xchg arpl mov stc fwait mov mov dec shlb (bad) aad sub mov (bad) mov pushf insl or jae pushl mov pop mov mov xor inc hlt or hlt ret mov test pop mov mov push jne imul fs rol aas inc mov adc push popa cmp mov add dec lret in (bad) dec adc and sarb mov push scas enter fcoml test sbb mov js push loope adcl xor sub lret mov and xlat insl (bad) ja lahf xchg andl (bad) bound mov in test fistl xlat inc or pop outsb jnp and andl jl cltd loopne lret sub mov add (bad) dec mov inc jl add out stc iret jae fmul pop stos (bad) or xor mov call mov add sti outsb or and test aas (bad) enter jns xor out int sub dec loope pop out sbb fiadd pushf (bad) jo mov test jo jno mov xchg dec sbb cwtl loopne push popa fild cmp ficomp mov push jne outsb cmc pop mov push push js inc jmp mov xlat je mov push jmp stc add sub jbe xchg cmpb mov cmp mov into mov xchg cmp jns lods mov inc add push (bad) rcrb xchg movntq xchg push cmp aas (bad) stos cmp jnp (bad) xchg ja orl pop pop inc or insb sahf ljmp xor adc push ds cmpsl addb mov sub bound pop data16 ds pop test icebp dec gs adc sbb sub sti jns or sarl cmp loopne cs fmull mov xor lock in push mov ljmp loopne dec stos inc nop jae adc test add jno (bad) (bad) rorb imul hlt rorl in adc clc cmpl lock xchg in dec je inc mov mov pop loope xchg cmp dec shll mov mov cwtl or adcb cmpsb dec inc ret test inc dec sub inc xchg or ja jnp out or ds nop lcall mov lcall insb mov nop loopne sbbb lds inc adc push icebp mov js push fcmovb aaa stos out cmc add in clc inc (bad) mov sbb dec jno hlt adc xchg cmp aam popa cs xchg dec pop xor stos call js sub int3 sub mov jecxz pop cld pop jbe lea cmc or lods lahf pop push add pop popa outsl xchg out (bad) push and add cltd cmpb repz or and adc lds mov sbb xchg mov inc push cmpsb repz pop loopne nop addr16 clc mov cmp stc cli fsubs popf inc test xchg test out cltd movsb inc inc pop mov (bad) mov or mov insl xchg sbb add sbb jge scas mov mov mov mov xor dec mov insb dec (bad) fcomps orb jecxz cwtl mov push repnz pop mov (bad) lcall aas mov bound fiaddl ljmp add test push incb js dec mov (bad) xor adc loop mov push fs ds add ljmp outsb pop jne mov clc dec daa scas push jae (bad) leave xor fadds mov sbb or enter int3 inc xchg mov mov xor mov cwtl mov dec enter mov out orb adc mov adc nop rcr (bad) (bad) rclw aaa push pop adc test jg mov sbb mov loopne pop add (bad) rclb rcrb mov cmp lods testl or ret cmp and nop (bad) xchg inc pushf scas xchg inc mov test push inc mov sbb mov jl icebp or mov sub ljmp pop and push sub imul push neg std scas mov and sbb jmp aad (bad) xlat add sub cmpsb sub add and icebp jo cltd fwait out pop fdivrs xabort push (bad) test adcb mov outsb mov dec inc std xor jb sbb pushf std pop subb pop cmpsl test call sbbl xchg cmpsl (bad) mov inc or cwtl arpl xchg xor cs test (bad) ja sbb cwtl pop push jecxz addr16 imul adc push dec sbbb js inc xchg dec pop ja mov mov jo (bad) aas lods fildll xor xor (bad) cli add (bad) or orb inc fwait popa imul inc mov andb (bad) sub les and mov insl and aad enter incl aaa test sahf fmul lahf popf (bad) mov test jns jle xchg pop jnp loopne sub repnz test (bad) pop cmp mov sub push xor sbbb sbb mov rcrb and mov cmpsb pop sub roll xchg and nop ret sub cmpsb adc (bad) cld pop push cwtl lahf dec fmuls outsl add stc subb bound fildl and jno nop dec pop mov cmp or and sub cmp aam and and in cwtl in std or mov push dec pusha sbbb pushf or adc arpl cmp xchg bound ret push mov adc add mov add bnd mov sti addb push subl push scas cli fimull cmp sbb mov mov xchg mov addb mov xlat xchg bound adc xchg cmp idiv push cmpsb pop cmpb sub push mov out fmuls (bad) mov pushf push repz fsubrp sub dec test add sub daa orb ret aas psrlq inc sarb out jge mov pop xor mov sub adc pop out sbb sub test push int xchg cmp scas inc enter add mov mov scas push nop sbb mov sub orb fbld mov mov repz jb call icebp push xchg ret mov test cwtl sbb aaa jns rcll and fdivrl or xchg cwtl insb sbb jmp xchg dec sahf inc dec or mov idivl fadds in jbe mov arpl xor pusha adc out icebp push xchg mov push xor shrb addr16 insl sahf mov mov cmpsb dec inc ljmp int pop dec inc mov aaa ljmp loope or jae clc and popaw enter cld mov mov je test and andb dec mov jmp mov (bad) dec mov imul pushf fwait test repz sub clc cld jg xchg jo insb into push je sub sbbb push lods jecxz ficom lods xor sub insb hlt xchg (bad) lock jp (bad) frstor arpl addr16 scas cmp mov call es push mov sti test pop adc aad fcom and xorl cmp push fistp addl leave cmp push movsl jo or sahf stos add in and out cmp in mov fdivrl test adc pop pushf js push out add xchg adcb mov mov or sbb mov orb iret sub mov sub sub (bad) jmp mov dec push pop lock int ret sbb daa (bad) dec push sti fdivrs mov orb mov pop mov or xchg mov test out cmp lds sub dec inc or xor lea jne jp nop push jnp orl xor inc xlat sub pop inc add xor mov mov das or pop and cs adc outsb addb jo mov andb cli neg xlat inc jno mov subl in push (bad) js test (bad) cli addb popa cwtl cmpb ret das sbb out adc and bound insb les or fbld (bad) jmp addb das mov ss mov lret pop and inc shlb sbb jl test test nop mov insb in dec mov out add mov ja mov add sbbb imul (bad) cmp sbb or into jnp lcall sbb test inc jno cwtl imul jb sbb lock jnp sbbb push jbe sub sbb mov (bad) mov fwait cmpsb add inc inc clc jnp pop mov icebp dec mov dec addr16 movl das mov sarb imul sub les out sbb mov sti out data16 insb cwtl lret imulb (bad) and stc dec cmp mov (bad) adc out add cmp stc xlat inc pop add insb sub mov mov (bad) pusha add insb push (bad) insl andb cmp fidivl inc iret xorb adc outsb das roll cltd add addb xchg sbb (bad) dec lret sbb fadds jo lods ficoml sbb cmpsb pop nop xor xchg movl cmpb out inc xchg adcb or pop (bad) cmpsb shll divb lret aad std mov imul push add (bad) repz mov xchg add xor mov rcr jbe je sbbb push fstpl add or nop int mov test and fild mov fist jb mov mov cmp xor lds or cmp and test pusha lock sbb mov mov sbb push jnp pop cltd and bound lds (bad) pop test jp add test dec outsl add (bad) cli popf lods enter cmp (bad) xor xchg stos repnz jno test cwtl fisubr jne mov cmp sbb xor inc pop shlb mov jl test mov adc (bad) fcmovnb pop addr16 pop call jae pop mov testl mov adc roll inc mov xor xlat jae mov std push cli sub mov clc pop jp inc (bad) mov sub test loope nop dec stos sbb adcb aam fnstcw xor or cltd imull std jbe cmp push inc mov push add jb xchg ss push xchg push movsl push and cmp add ljmp jnp jo xchg into jbe ds test lret add sbb and mov fcmove lock inc sti sbb cwtl inc dec jnp pop cmpsb mov (bad) fadds mov (bad) cmpb jns shrb xchg push mov test call js out loopne push outsb mov addl mov rclb addr16 jbe sbbl fist xchg fldenv sub nop call jne jp dec nop scas fimull dec aaa add (bad) shll inc or push dec popa clc cmovbe cmp jl addb and dec mov mov xchg and cmp sbb ds push das scas mov inc decb andb ficompl sbb movsb push xor cwtl inc mov popf sub jle pop cmpb leave rcl pop or nop aad out push mov fs fmull enter test imul aam movsl push and in call xor or lea dec dec cwtl or das iret jno ss mov mov mov out push lock sub push or pop clc out or out leave xor jl lods push pusha adcb adc lods jno into orb lock lea jo cmp cwtl sbb sub fiadd bound mov ja (bad) xchg (bad) rolb es scas or in jae xchg stc test cmpsl dec cmp sbb les and (bad) jmp jmp std int3 fiaddl sbb bound pop fcomps test rcrb cmc imul cmpsb lock sbbb mov fwait pop repz imulb iret sti in pop push sbb test xchg adc enter je mov push test andb insb jg fwait arpl sbb subb pop xlat lea jnp adcb cmc mov mov test shll andb ret dec cltd outsl mov and pop int sub cmp jle nop pop insb mov in stos sbb adc (bad) mov test (bad) mull sbb bound inc adc jg lret mov fbstp (bad) push or mov jno sub push mov test gs mov pop dec and push mov test fadds (bad) movsb (bad) mov pop lret sub dec cs (bad) jns and pop jno sbb test sub dec in pop or enter mov testl add lds lods pop js dec roll jl stos push push jb inc lods dec scas cmpb mov inc mov mov ds mov mull sbb sahf arpl std pushf bound ret add or test icebp add in mov add pop sub or xchg int push jecxz cmp pop test adc sub xchg xorb imul mov repz mov push adc orb hlt fiadd mov out xsavec jae lods xchg ret xchg or push and out repnz nop jae adc mov or lods lods fcompp jp rolb jbe (bad) lock adc addb jle mov fild addb xor xchg iret and (bad) xchg ficompl mov xchg pop int iret jne mov lock cmp dec addb movsl lret subb out push ds sbb rcll test mov pop mov (bad) mov inc stos dec aam fs test iret cmp (bad) mov mov aas xchg xor pxor and loop (bad) dec mov add ret shll sub bound sbb mov sbb (bad) dec scas push enter js in jne out clc dec movsl pop add jg add push pop xchg jmp seta pop adcb pop les jae dec int3 out sbb test pop popf pop push mov out in repnz add xchg adc adcb or out addr16 icebp imul mov mov mov popa inc mov ja or dec adc subb xor js jns adc insb adcb loop test sbb cmpsb (bad) cmpb inc in xchg sbb iret test ljmp inc mov add mov test mov add mull sbb inc or sbb (bad) cmp jmp test mov xchg imul cmpsl xor push xor ror xlat rorl jl jns lea xchg lods push (bad) pop and mov imul sarl jp outsb fstps mov jmp or push fsubrs dec (bad) std xor loop mov popf xor mov jmp mov push mov movsl aam div xchg loope xchg jb pop insb cmpsl fsubr add inc cmp sub clc incl jge cmp nop repz cs pushf in mov sub cwtl mov frstor mov pop iret repz mov sbb (bad) sahf enter jge ret add nop or add (bad) sub mov dec pop mov (bad) or and fidivrl outsb jge add imulb outsb test mov mov hlt push fdivl mov mov loopne (bad) sarl push ljmp loop add push in dec fmull js data16 inc jnp pop testb mov push nop ret mov out js pushf scas pop clc das iret or out icebp xrelease jbe mov orb repz cmp or and push lahf add inc cmpb fidivr ret xor loopne (bad) insl mov and push lret jnp xchg fs in addb leave pop loope sub cli addb xlat sub addr16 cmpsl loopne sbb inc mov int3 sub mov pop adc insl mov stos orb fldenv sub mov jge je test mov sti rorl mov jno dec lods (bad) je divl int3 push repnz aas call lahf mov cs shr aad lret jmp loopne fcomi xor js xor xor pop icebp pop adc andb pop shrl loopne mov cli inc jns pop xor out inc sbb sbb loopne es jb in hlt mov sub jecxz pusha orb xor xchg xor lock je ljmp xchg dec lods enter popa aaa add mov lods lcall xchg mov loope mov sbb push pop cmp mov rcrb push pop imul insl sti pop cli int3 inc push add arpl sub mov aaa mov faddp push movsl inc push daa xor pop insb (bad) out rcrl daa scas (bad) les sbb mov fdivs test in not and push subl enter xchg adc adc lcall push movsl insb pop in inc dec cmpl pushl and sbb fnstsw push jmp cmp test aam pop xchg cmpsl sahf mov adc fildl mov and jnp jl jle jb mov out mov xor mov ss ds jo sub mov push sbb jns inc dec (bad) lock sub sbb pop shl sbb (bad) ds sti lock call sub cmp mov ljmp jbe mov loope jl addb jge pop jle cmp icebp repnz test cs sbb mov jecxz cmc add mov test dec (bad) mov xlat imul inc fimull mov jge inc je aas push (bad) cli lahf bound jo rcrl mov inc movsl mov out push cmp add cmc dec nop cmp (bad) cli nop sbb sahf pop imul lds mov addr16 data16 dec sbb fisubl dec notl jge jg cli and dec or mov xchg mov add adc pop jge pop cmpsl test add stc (bad) xchg mov test adc lods movsl rcr or int3 cs adc add rcll setns sub inc xchg ss xor test aas stos addb imul fwait aad sub je jge icebp jge push mov add add popa (bad) enter or sbb pop dec nop test iret pop mov jne adc jnp sahf adc sub jne cwtl pop andb xor fisub nop (bad) clc aam (bad) xchg lds sbb and sub push jnp mov js mov xor nop bound mov add xchg dec in lcall sub int3 (bad) (bad) mov mov fnstsw popa (bad) inc xorl dec xchg push mov mov push (bad) and xor pop stc inc fdivs lret cwtl lods add xchg jmp cmpsb cmp mov cmpsl and fistp and loop adc pop mov jle pop out sub out sqrtps pop add add cmc add xorb mov add movsb lret jnp movsb test test rorl dec inc bound mov xchg out (bad) xchg orb mov imul mov nop sub inc xchg mov and add sub test xchg adc mov sub dec adc jmp mov orb faddl jle jmp pop sub sbb (bad) scas xchg jnp mov push push addb dec stos cmpsl leave sahf ret dec lds cltd mov cmp in mov mov jmp fs repz insl and xchg sub (bad) rcrb testb xchg fsubs (bad) aaa imul popa jo or fsubrs jbe inc mov sbb out imul out (bad) cmp xchg xor or aaa xchg nop push testb or cmp sti or clc ret xorb pop mov dec test popf data16 int adc icebp sbb ss int3 ja xchg outsb insb aas cwtl jg jb fild mov xchg test inc clc mov leave xchg outsb lret or sbb rcll (bad) push in mov lret fsubrs xor lret fcompl pop std enter fcmovnb push jo lret sub ljmp mov iret xor das shrb pop cwtl loopne pushf addr16 popa add test scas ljmp xor xor cmpsb lahf add testl adc add loope fdivrl or icebp add or stc adc subb pop cmpsb nop das clc stc daa push std xchg scas mov call cmpsb push mov or pop dec adc aam scas push jbe in pusha sbb fstpl aas xchg outsl into flds cmp lahf cltd mov fldt leave (bad) jo dec dec popl imul sbb (bad) push scas pop (bad) cmp fimull out or dec call inc mov sub dec or (bad) mov ret ss sbb into xorb sbb nop int push push fsubp (bad) cli lea and push pop js mov andb fwait adcb repz mov xor sub add dec ds movsb push call jmp pop repnz inc xchg addb fnstsw pop xor xor jae dec xor mov inc rcll repz nop add adc mov sbb ja sub arpl jno adc push test cwtl imul int3 ds jecxz je nop mov adc jl (bad) mov sbbb cld mov (bad) pop stos faddl xchg sub pop push es cmp push cmp cli (bad) aas outsl mov mov (bad) daa ror dec pop push xchg jno mov dec scas inc aam adc scas and int sbb mov push jp mov add sub dec dec dec aam daa mov jno lahf shrl inc mov xlat adc jb xchg bound or fmul push jg adc cmp pop test loop or mov incl mov mov je lds insb jno mov and in jl xchg inc cmp add lahf and sub fbstp xor sub popl stc add rorl (bad) fimull add mov test mov notl push mov loop imul rorb fisub mov push cwtl sub push and inc add daa mov stc cwtl nop inc jns push mov (bad) nop add or jecxz jg lret jb jp dec mov shrb in insl mov inc in jne idivl push (bad) pop jnp ljmp xor sbb testb push shrb inc mov mov push into (bad) jge mov add and inc sar sub sub (bad) mov xlat movsl insb fdivrl (bad) push sti adc push out mov cmp adc lods mov lods push sub sbb js test and push cmpsl mov jns jge lcall rcr daa inc mov xchg subb insb idiv stos dec mov add xor int3 aaa mov test mov fldl out addb test xor lret mov movhlps cwtl jg mov iret add xor and (bad) fnop xor into dec test cmc ljmp mov sbb sub js xor mov orb outsb cmpsl dec mov lods xor xchg push scas fimul pop loopne cmpsb adc jb insb mov aas fcompl and sub mov jge push inc mov mov divl ret cmp add into andb and mov xor pop sbb push loope mov fcmovu sbb sub int test test jns sbb cwtl (bad) xor dec mov sti cld cmpsl icebp sbb imul or das (bad) dec in push xchg jmp loope test push test (bad) aad mov cmp daa cmp gs mov mov cmc subb sbb out jp cmp shlb icebp xlat stos imul fadds xchg mov pop outsb xchg xor enter fwait xor and insl push xchg mov iret cmpsb mov roll mov and cli push vprotb popa cmpb push (bad) sti xchg jne orl loope pop xchg lods (bad) (bad) mov sub loopne test scas (bad) xor pop lcall mov test idivb mov movsb dec mov pop ret inc loopne stc cmpb int3 js add fimull mulb jl and repz inc fisubrl or lret pop and in inc push in out shrl stos jno test sub (bad) cmpsl pop shrl add xor and jno cmpsb or arpl cmc gs adc adc inc loope mov out jnp mov jl fisubl ljmp xlat push test xor or (bad) or or daa xchg andb add push leave loop ret adcb lret addb jp cmpsl push ficoml loope stos xchg aam mov or je xorb adc push aad mov out adc cmc roll jns (bad) jl mov or xchg mov mov xchg mov jecxz jle adc pop lcall adc and push in test mov (bad) testb popf lock out jle or mulb xor les inc insb (bad) xchg repnz scas mov cmp sbb sbb or arpl sbb push and arpl jle jns jmp test push fbld jb cmpsl ds mov jne sbb inc (bad) (bad) (bad) adc (bad) adc add mov (bad) lds or (bad) fsubs rorl int3 mov test pushf mov push cmp pop dec fisttp rcl test push testl pop fistpll xlat hlt mov jo push sbb mov addr16 lods push icebp mov pop andl cltd int3 inc enter daa test dec out ret xchg pop cmc pop andl mov sbb add mov out or mov cmpb xchg xor jno fldcw test add std or push mov cld xor orl (bad) jae lods (bad) repnz mov movsb repz cld loope into stos ja insb mov mov sbb push jo pop adc outsl mov xor out test (bad) lret aad clc frstpm(287 ljmp xchg subb inc adc testl sub xchg int3 test stos cltd testb mov pop js jmp dec dec sub gs xchg jne,pn add xor sbb in mov daa fldl and or jge popa popf inc mov rcll (bad) dec test (bad) inc dec add or js jns push cmp mov into popf inc pop lea sbb loopne mov hlt mov inc sbb mov mov lret loopne jae dec mov je lds dec add insl orb inc cmc cli (bad) sbb mov inc gs xor scas dec cwtl out movups xchg jo xlat sub push bound lret jle push xor mov jne mov mov sahf ja in mov pop jbe lcall push shrb push adc sub incb movsl ds int3 push mov add insb stc movsb addb je mov mov test movsb xor jg dec movsl lret xor mov cs push (bad) dec inc sub and add mov fs in popa xlat and (bad) ds dec mov mov mov cld lahf adc ret movsb negl cs mov mov addl adcb pop push cwtl scas jecxz into das dec outsl sbb (bad) repz (bad) push sbb fcoms dec adc lds mov adc gs xorb dec mov popa in sub push int3 pop sbb mov (bad) icebp xchg inc mov (bad) push sahf out mov mov (bad) or inc adc mov lds push pop xorb stos push pop in adc adc xor and lods inc inc js sbbb xor mov incl mov push test daa mov jle dec icebp or loopne add xor and add js in in xchg mov loop ret gs push inc out xchg sub aaa dec insb test mov iret scas pop push js dec cmp sti mov (bad) out mov ret xor cmpsl push add out test test lds sub pop pushf xrelease or outsl mov sub mov cs insl jmp adc push add sub jb add jle mov dec fldl add mov ljmp pop adc lahf pop and nop lods addr16 imul jecxz dec arpl adc les ss mov or (bad) loope addl cmp add pop cmpb scas push ret mov and push das and mov je ja adcl sub cwtl sbb dec and add fimul fcoms repnz xchg lret enter pop std jmp test ret jo jmp xchg adc sahf test xchg iret mov dec adc mov jp cmp icebp push and movsb jne jo outsb xchg popa mov dec iret in addl jl lds gs or xchg xchg add ret test out xchg gs xchg cmpsw rol sbb ja pop jle lcall lds cwtl jp adc inc in mov (bad) pop xor dec lods fs repnz js xchg pushf test scas frstor mov int inc arpl test fidivrl iret stc imul add mov cli jmp lock stos in cwtl jno data16 (bad) out int3 xchg pop dec and add sbb lret mov subl int3 mov inc xor mov mov (bad) repz mov rolb jecxz (bad) int3 pop (bad) mull adc pop mov jns inc sub mov sub xchg mov js add jge rorl mov out movsb mov stc add or push repz mov pop push out push dec (bad) mov shrl mov inc and lret jl cmp lds or (bad) bound xchg lret sub cli les (bad) sbb mov lret add pop ret xor xor cmpb cmpsb je inc sbb cmc mov scas mov pop xor cmp js test cli movsl add jo push sti stc stos jnp jae pop dec xchg add je inc callw shll pop scas insl inc pop cwtl (bad) cmp (bad) aas test lods push sbb dec ror sub or mov mov dec (bad) dec xchg adc mov daa int3 sti sbb popf adcb push call jno pop cli incl cmp sbb add xorb rorl popa pop jle mov jb adc pop push (bad) notl fcmovnb dec jae xor (bad) jl outsl cwtl mov sarb je xchg imul pushf mov dec jo leave add xchg jp sahf and (bad) fstpt jne jle sub insl jo push mov stc les adc gs sub adc test cmc es mov inc in mov mov (bad) jns push lret xor mov je sbb nop loope mov stos cmp arpl pop loop push test in popf lret dec push mov adc push rcrb ljmp enter nop je shll roll (bad) sbb (bad) ret aam mov adc mov insl or les jmp sub xchg movl pop jbe loop lods sbb mov adc adcl pop int3 or cmp inc push movsb mov out loop subl pop adc pusha gs sbb xor dec mov fidivrl lods aaa push (bad) pushf test and sti lcall dec (bad) push sarb jle lock mov mov mov fistp data16 jge inc mov lods add pop jno adc add dec inc sbb xchg clc dec pop push jne add aaa pop clc sbb test (bad) fcompl iret out cmp mov push mov inc pop ret mov adc push iret fistpll rcll imul stc das sahf jae loopnew mov cli mov movsb adc sahf (bad) xchg xchg imul mov jb,pn popf (bad) sub dec test dec mov in or sub pop shrb push call xor push fstps mov add push repnz sahf pop pop fcomps subb cmpsl adc mov cli add pop and inc mov in push fildll mov hlt or or mov into (bad) bound sbb ret xor hlt subb (bad) xchg dec scas mov ret add sbbb shl pop sbb mov clc iret sub andb push xchg jno push xor outsb xchg xor fstpl adc out lcall mov int3 xor pop daa (bad) cwtl insb out jp fadds sbb cmpsl lcall xor mov cwtl xchg arpl mov scas mov mov mov mov fs out lcall hlt xchg xor push les ljmp sbb subb add push inc subb or cmpb cmpsb jno popa dec cmc pop push sub mov pop xchg jmp dec adc dec scas lods push pop or aas subb clc andl outsb lds std mov (bad) addr16 aam (bad) xor xchg js mov testb fmuls test push fldcw mov mov push (bad) pop pop cwtl adc push je sbb mov push add jae roll or sub fcoml xchg jbe data16 adc icebp das pop rcrl push pop jp cmp jmp in sti sbb mov jp pop sub mov jo je rcrl in pop cs leave clc sub jmp (bad) test jl outsl stc mov xchg addr16 xchg iret pop shrl out mov lret sub clc addb jl pushf aas push pop subb test incl cli add pmaddwd sbb jp cltd cmpb cmpsl ret push pop outsb test cmc popa or pop shll sbb (bad) not addb repnz sub ret mov adc pop test and sti orb mov sbb cmp xor outsl jno in enter xchg xor pop mov xchg pop popf xchg fisubl bound push test adc jle pop mov testb mov push sub shrb (bad) cmpsl movsb stc cld pop jns mov jge test (bad) shll dec or ja inc adc insl xchg data16 nop mov jae imul cli ss mov (bad) (bad) lock mov sbb cmp andb pop outsl pop fadds mov aad xchg xor mov sbbb push push enter pushf aaa lret andb subl sub (bad) mov lock xchg outsb mov xor test mov mov inc mov jecxz adc nop in jbe pop mov pop pop cmp rolb cmc jmp mov jle icebp and sbb aam push or sub divl inc dec repz ss ss aaa hlt or test rcr mov adc inc mov addr16 dec test xchg jp outsb cmp cs pop movsb nop push fcomip or mov adcb cmp lock xor or std lds mov jns pushf xorl mov jp add jae dec test fist mov cwtl sbb sbb sti inc inc sti adc cli mov add enter aas (bad) xor xchg imul insl aas cmpb add nop cltd inc jae popa push cmp push gs sub roll add dec xchg jb in adc mov stos mov lea mov cli test (bad) push jmp push subb (bad) dec mov lods cltd scas aad sub adc cmp xchg aad and pop fs int3 xor jg mov scas insl and lds cmp sbb cmpsl cmp add repnz stos nop (bad) push cmpsl enter addb xchg (bad) pop ret or adc orb mov mov lea push rorb loope mov sub into rolb mov movsb scas inc js jno aaa (bad) icebp adc push mov inc das mov or mov enter out jl lea cmpb jae mov pop jp mov cmp push mov sarl cmp pushf mov lock adc dec xchg xor sub subb xor stc adc mov ret (bad) iret inc xchg jnp add dec mov int push adc in add adc stos dec rclb popa push mov xor jl cmpl or mov push mov inc mov lock bnd mov divb mov jb inc testl push mov add sub je jge test dec scas and test (bad) repnz xor out or inc fildll js fisubrl test and (bad) fmuls out add sub (bad) push sub adc xchg mov add test xchg (bad) xchg rolb push jle mov ror pop dec ss nop fcompl pop mov (bad) mov adc mov out sarb fbstp mov adc addb incb add add roll mov lahf mov stc (bad) loopne sti insl inc or mov ret sahf or push out loope push xchg pop fsubrl pop adc in scas and outsb inc jb test add mov rcrl jb sbb testl test iret and test jno mov mov ljmp jp and loop les (bad) call outsb or jo inc dec mov adc (bad) fdiv aam ss xchg insl jae sub nop push sub lods push sbb mov adc into add and aam sbb arpl xor fwait orb outsb jb clc jge ret cmp imul jl ret (bad) mov out jge addr16 cmc xor sub enter mov dec lods mov gs popa imul sbb sub and inc mov adc sub and sbb lds mov mov dec addr16 inc andb out dec cs daa add sbb pushf arpl nop (bad) mov (bad) into pop addb jg test mov enter jo sahf fs pop mov fcomps movsl cmpsl int3 mov xchg xorl xchg pusha decl xchg cld pop push push arpl sbb jne push test out js (bad) push inc mov popa loop orl pop mov fistl sbb out mov mov lcall mov jbe nop popa (bad) packssdw xcrypt-ctr cmpsl pop (bad) stc (bad) mov mov andl jnp ficompl rol dec jbe test dec mov mov and xorb push stos or mov xchg fwait add inc add adc cmpsl adc scas push pop test (bad) int3 mov insl dec pop fsubs or movsl lret xor hlt sub (bad) insb cmpsb fs mov ljmp jnp add xchg or push shlb in xor jae std mov xor dec or addl mov testb je dec in and ret fldcw test test mov and sbb enter cmp jp addr16 aam iret mul (bad) je jge mov mov mov imul (bad) fdivrl push scas enter sub iret aam iret addl inc ret sbbl jns sbb xor xchg xchg or mov fwait lods cmp (bad) lock add jle enter in insb fisubl call mov shll cmp addr16 mov dec (bad) data16 imulb or adc ficom xchg pop mov (bad) call sub mov cs jp sub lock sti addb push fisubl adc mov cmpb sub ljmp movsb orl data16 mov pop (bad) lcall push jae fdivs mov dec in cltd pop jg jle mov adc insb adc in add and push (bad) cwtl xchg adc jbe mov ds movsl lahf pusha testl ds fisttpll imulb push les or sti or or push xchg pushf lods enter leave mov fs loope adcl popf in or sub mov scas mov push dec sahf pusha stc pushf jo sbb movsb pop fsubr cld std sbbb fiaddl xchg push pop xchg pusha sbbb cmpsl pop cwtl xchg enter std inc or jp and mov movb cmp test mov test iret (bad) cmpsl adc cmpsb pop jle xor shrb ret mov add sub popa xchg movb bound jmp push repnz dec test scas fistpl addr16 out aaa test push in ret lods jb xchg arpl notl in lods cwtl dec int xchg or mov xchg jecxz movsl js andl mov aad pop (bad) xor addb jl fwait pop cld popa add stc movsb mov gs popf popa stc pushf (bad) aaa dec jno xchg std push jg dec fwait arpl mov flds adc shll mov mov jbe xor mov add in inc cmpl pop pushf cmpb int sarb push fs (bad) imul iret add js out adc clc in xchg jle pop sbb insb add shlb stc pushw (bad) out cli or fxsave xor imul and mov fadds nop or iret xchg stos push das add (bad) mov js lock mov adc inc aam jg jg andl adc lret andl dec into add daa inc cmp pop xchg push test sbb sbb (bad) jb adc push push fcomp int dec fildll cmpsl xor mov mov xchg cmp fiadd outsb mov loope je rolb pop and (bad) loope mov cmp testb and movsb (bad) and scas mov insb js cmp je sbb cmp mov pusha test sbb add lret jg mov fstps lahf xchg sti dec loop sbb or movsb pop push mov fdivs enter int or or dec adcb popf dec add adcb pusha and in mov (bad) fisub jo or add shrb sub rcr adcb or xlat int3 push testb mov clc lock std xchg test pushf and push loop jno push (bad) mov loopne pop pushf sub or mov or (bad) incl leave pusha orb cwtl xor add sbbl call ds mov push insb test adc rclb or sbbb xor inc jmp pop jo lret pop xor sub jmp mov fidivrl cmpl inc mov aam mov ss xor cmp xchg fs lods mov into aaa mov cmpsl in in inc out fldl out jmp adc adc sbb pop mov nop xlat add inc iret add and js sbb or or sub fsubrs xchg std jnp cwtl movsb lcall fisttpll pusha sbb push pop lods and dec mov iret lds inc cli dec stos jae xchg enter mov test fsubr sub (bad) imul hlt fadds leave cmpl out lock jg imul mov pop mov jbe and popf and xchg xor addl mov out insl xor mov aad cmpsl xor cmpl int fsubl xor mov rolb repnz in cmp in aam mov mov or cmpsl insl jg cld imul inc inc mov sub test push (bad) jbe sbb mov insb xchg adc data16 mov shll sbb outsb ret addb sub dec imul cmp nop xchg pop daa insb dec rcrl pop jns sahf (bad) jns xchg (bad) mov (bad) cwtl lods movsb subb xchg ret imul adc data16 inc sti xchg out enter cwtl add por sub fisttpl lock push das sbb jbe add fsubl xchg dec xchg sub dec fadds test int int3 pop add dec sar ds cmovg mov loope push std jno mov cmpsb repnz dec cmpl and pop cwtl repz mov xchg ret inc xchg mov dec scas mov mov xor mov pop and xchg addl das mov jle out adc pushf je pop xor mov add dec adc lcall (bad) sub nop jbe inc inc das imul lods pop cmpl pop and test adc sub arpl sti imul aad fwait rcl pusha or negb mov arpl adc pop add stc or add inc jmp enter pop xor lret in pop mov (bad) xor xor jne insl test mov cmp xor ss or mov fsubr cli aad lods xchg mov ret sbbb xchg jo adc sahf xorb add pop mov and xor jecxz pusha xchg lcall popf push (bad) xor push movl mov sub insl (bad) (bad) sbb cmp out or pop mov int pop fisttpl and or mov push stc imul xchg dec fildll inc (bad) cmp loop or sub subb add rcrb enter fidiv push xorb fildl xor test jne sub negl mov mov loop cld add fs sti subl fistp arpl stos pop push mov and (bad) sarl xchg mov jb dec sbb xchg outsl pushf adc cmp sbb in cmpl mov sti lds ja das lret mov xchg ret add inc mov data16 and mov adcb cs or out orb xlat pop add push cmpb pop cwtl (bad) or sbbb pop (bad) pop mov orb sar add cmc (bad) push cmpsl out xlat test or push icebp movsb adc test inc adc sub mov xchg add xorb leave xor adc mov xchg add push andb push cmpsb push stc mov xchg movsb xor jnp add (bad) (bad) jl dec xchg mov bswap pop aaa imul ljmp ret mov pop xchg loope movsb inc sub jnp jo movsl nop loopne push iret mov add and push cmpsb and jl addr16 push test fdivl sbb gs lock scas mov sub adc jo test movsb (bad) sarl gs aad xor iret xlat pusha xor push stc nop ret sbb xchg call int cld int3 pop push mov movsl mov ja rol movsb pop xchg cli test push xchg test gs xor in cmpsb pop jp bound ja fisub add pop ljmp sub add xchg repnz test ss dec nop (bad) aad mov adc into je (bad) stc add mov or sbbb popa xchg scas out je adc adc jle cmpb or push mov xor imul loopne js mul and inc mov bound cld incb cmpl test mov sub mov mov bound and std xchg mov loopne mov scas bound push pop jns (bad) in add mov (bad) leave cmpsl fisubl subb cmc aaa pop jmp add xchg pop mov arpl pop pop cwtl orb sahf adcb jnp dec test xchg addr16 test push dec xor jnp or cwtl repz cmp dec and xor cld (bad) cmp and mov and push pop sti dec icebp test xor cs mov mov and sub hlt inc mov lret jno cwtl xchg add adc or push add insb xchg subb rorl in enter pop outsl xorb frstor xchg add pop gs mov push push mov loopne sarl inc mov pop addr16 pusha movsb mov jo cmpb xchg cwtl xlat jecxz dec int mov dec out xchg add jae mov das in or mov loopne push jo test mov and jae cmp loope inc clc cli fwait sbb out lods subb xor stos test ret cmpsl and sbb cmp imul pop inc mov cmp and mov loope xor pop test lods pop pop xchg dec leave mov (bad) call mov imul push fild mov add stos xor mov lods loope mov nop lock mov ss mov jmp loopne inc pop clc dec into sub fdivs adc jo push imul xor (bad) inc xor stos ja pop (bad) (bad) aaa popa or adcb inc dec cmp faddl push cmpsb lock call adc fwait (bad) out or mov cld jae cmpb inc inc xorb mov jle lods jb or add outsl insl (bad) xchg jg rorl arpl cmp add xchg jne (bad) iret adc xchg mov fidiv mov cmp mov cltd fwait pop mov jl add inc dec push bound and (bad) pop and gs adc cwtl xchg inc mov sub push jge pop fcoms scas test (bad) jns loop add jecxz mov insb mov xchg xchg or mov or in out and call pop cmp imul test or out inc sti or mov lock scas xorb aad and adcb cltd push js test cmp outsb mov and and xor xchg dec pop mov jecxz mov cmp xchg mov sbbb outsl mov testl add or repz addr16 jno cmp add subb xor mov inc mov imul xchg push roll push iret sarl ror into stc inc push incb in dec xchg nop data16 push push inc or (bad) jns test cltd pop mov (bad) inc xlat dec jl aad (bad) sbbb and int3 xchg push dec jg fiaddl movsb pop stc aad fdivr sub mov and cmpb popf fbld fisub or inc shrb push lock icebp cmp cltd ja in pop lret inc or pop mov std xchg push imul or add jge mov aas cmpb mov push pusha or push dec push dec adc aaa pop lahf sub or inc addl clc insl fiaddl cltd inc add cs mov movsb (bad) out and iret mov dec xchg cld mov das imul cmpl inc mov cmp pop cmp jnp fcomps sub hlt outsl or outsb pop imul and and ss into lahf (bad) jo fldcw fcoms jno insb or or shrb mov je (bad) or fadd outsl scas dec test sub lret xchg ret sub ficomp and dec push xchg clc sahf sbb xor add and in bound out push jns rolb inc mov dec dec loop clc or out cli js nop fs push fstpl push pop in data16 xbegin dec xor int3 faddl scas xchg shrl test js nop jnp inc mov mov mov lahf pop jg jge outsb lock dec mov sub (bad) mov mov test and popl mov jmp sbbl xorl mov dec mov mov pop test mov jb mov loop test cwtl jmp push lods test dec push lret push pusha mov (bad) cli aaa (bad) xor inc movsb sbb or jle (bad) push gs bound add push scas mov arpl incb cmp mov cld bound aad mov jno and call jns sbb shlb jg ret clc out adc jmp in lret addb jae push or xor enter xor push xchg sbb mov push sti stc (bad) push mov roll test sub jl subb andb cmpsl push addb aad nop or push test and sub sbb inc mov scas push push and in ret popf xchg adc addb iret rolb add test and cmp loopne cwtl repnz sbb mov outsb (bad) mov (bad) mov addb arpl jns inc nop stos scas mov lea xchg out nop cld add adc pushf hlt add inc dec ret xlat sub cmc cld ss stc testb (bad) inc rolb jmp out pop repnz out nop shll jne cmp data16 (bad) ja into cmc lds repz aaa mov dec pusha cmpsb js nop popl pop xchg addr16 inc scas dec push sbb jae nop insb xchg pushf push mov idiv test dec push mov xorb mov inc nop pop test and mov stos xlat test out xchg push lds stc clc (bad) int3 lret orb mov test call inc and cs pop (bad) ss std cmp pop xor mov stc jmp add cmp dec loope cmp sbb mov add mov xor inc insl imul adcb xor push fadds (bad) stc iret int inc lea andb sarb iret test and in adc fsub insl paddsw mov pop bswap in out or jo lea clc ret mov (bad) rol sub push ja mov pushf xchg sbb and inc jo pusha and sub jbe out sbb sarl fiaddl clc mov rcr xor inc int jb xor sub xchg dec incl jle adc lods push data16 daa aad mov add aas inc dec cmpb mov mov test test cmc dec (bad) pushf test int3 mov loope (bad) test sarl jmp test (bad) arpl enter dec sub add or sub adc hlt orb lods lahf addr16 add push movsb sub (bad) mov inc std jle (bad) adc dec je xor ret jecxz mov pop repnz sbb mov ficomp shll into (bad) (bad) dec xchg rolb (bad) test or hlt test push in addb cmp add inc test loope sahf pusha fadds sub popf lds in mov sti push stc cmpsb fild mov sahf jbe fild jle jns sti jb popa popf push and or mov and (bad) lock and scas mov data16 cwtl inc bound ret int enter push ficom inc andb (bad) or cli orb cltd cmp xor cmp push cmpsl mov adc (bad) and jns add ljmp pop shl jg adc inc outsb add aad loopne mov test pushf aas dec cmp adc jnp leave (bad) mov rcrl movsb dec xorb addr16 xorb push cmc add jp mov add fistpl int3 cmp dec or sti jne push je sub add ret push cwtl sbb xor ret call push sahf popa fidiv fdivs cwtl sti mov mov push adc shrl pop call jo and cli or jnp xchg add arpl test (bad) push pop imul and outsb ret xor fbstp mov notl cmp mov jmp pusha and sub mov adc sbb push sbb js mov (bad) cmp fistpl cwtl adc notl imul test inc xlat sub add jnp xchg cltd pushf and rcrb mov push stc test (bad) mov data16 out mov imul xchg sbb and inc aas lods imul pop add dec jmp push rorl mov dec mov mov mov aas icebp add pop nop push and ret aas call movsl nop lods lret aaa cltd xchg mov adc adc movsb mov movsl pop clc pop adc (bad) jae or jle push lahf arpl pop mov xchg xchg out jg add sub cltd dec cld (bad) nop dec nop xchg jo mov fwait ds mov push movsl repnz gs push sbb jbe or inc adc dec inc cmp nop sub jmp loope out push addb add call or (bad) sub adc mov sbb pop fistpll jge mov je jno add out jb push shrl sbb xchg cmpsl nop ret mov jne sub push test les sbb xchg push int3 xor loope inc addr16 repz adc and cmpsb fldl dec and mov rolb pop pusha or nop mov jmp jo loop imul sti jmp mov aad cmp movsb pusha test sbb aas (bad) lock bound mov mov scas subb loope hlt xchg jp aaa in xchg sbbb test add mov cli add adc aam movsb out mov pop test add mov mov daa mov sbb (bad) mov loope mov adc out test push xchg or mov dec pusha jno push mov jmp sahf pop test stc aaa pop or insb mov mov ds test add xchg orb xchg (bad) xor or add andb (bad) add push cmp mov inc mov sub mov lret imul cmpsl test sarb mov movsl pop (bad) dec fildll lods mov cmc xchg cwtl (bad) dec and (bad) test popfw push xchg add (bad) insb rclb lea push fsub sbb adc adcb cmp fsts mov divl mov adc movsb in adc or add xchg sbb cmp jge adc sbb push mov mov push inc pushf adc das jae (bad) fnop pop push pop mov xchg cmp popa jae andb enter xchg push imul (bad) dec js sbb daa test shrb stc mov iret xor xor mov adc and sbb (bad) nop jae or pop mov xchg pop cmp test dec mov mov and jae xchg xchg je clc mov sub fild stos and mov lea sti cmpsb mov pop jmp and pop xchg sub mov xchg dec push mov sub cmpsl jge mov fcomps stos add cmp jo test xor inc mov mov mov jmp stc idivl out mov dec mov mov incb mov js or sbb call sahf enter jne (bad) jnp sub stos sbb mov xchg push sahf jbe inc or imul or test mov mov sub int3 adc js xor xor cmpsl inc push push stos adc sbb pop cmp nop loop aaa mov das test xor push or sbbb cmp jo sub mov loope push out cltd aad mov and xor ret adc out sbb sti lcall and addb xorb sub iret xor orb aad jmp fwait pop decl xchg popf inc lahf push inc fcomps mov test enter mov xor fiadd fimul fsubr xchg mov data16 fs nop cmc sub stc mov sbb pop sbb fsub pop add scas sbb push jecxz xorb dec imul nop pop cmpsl xorl sub push xchg enter jmp inc mov (bad) add mov xor das stos sti mov fcmovu mov lcall imul sbb (bad) xor mov sbb popa fisubl mov push out icebp jl sub xchg movsl loopne leave rcl inc arpl jp lds sub mov mov lea cmp sub adc (bad) call mov or faddl jb mov sbb outsl scas xchg lock push jp xchg inc mov push fucomip mov push int test daa bound cmpb sub xchg std out push fiaddl dec sub (bad) sbb out jp sub xchg cmp sbb (bad) cmp push test insb popf push fldt andb mov cmpsb test sbbb adc jno dec xorb popa aad cs mov inc mov in insl dec sbbb outsl or imul sub add xor repnz cmpsb pop test or imul cwtl xorb pop dec mov testl test jbe addb push clc shrb subb adc ja and push sub adc mov lds inc mov pop fisubl sub repz test dec xor testb dec cwtl rcll test andl jl aas mov jb jg lahf movsb cwtl stos in mov xchg (bad) xor or cli or push push mov fstpl sti test clc cs mov jbe sahf sbb mov (bad) pop roll mov out scas push mov adc pusha cmp add jbe xchg stos loopne (bad) clc sbb adcb ret fcmovb testl or push xor sbb cli orl lcall das outsb or fdivl popa (bad) lock xor frstor mov (bad) sbb outsb sar test sub add add (bad) mov ret (bad) ss push adc (bad) jmp pop pusha cmpsl xchg and dec rol iret ja jo or outsb in daa push les dec shrl movsl add int nop push js (bad) and xor cmp cmp fidivrl mov mov adc xchg mov test xor test or ljmp or insb inc sub sub inc pop dec cmp iret fdivs push aam add daa or xchg sahf mov push mov (bad) jo icebp stc loopne cmpb loope stos add test inc iret cmpb xchg xor xchg or aam cmp loopne andb xchg fcompl icebp add lret jg inc push mov (bad) movsl pop xor lret addl xorb in pop fisub scas mov adc adc mov into sub add idivb mov mov mov lods sbb rol xorb mov rorb mov js mov clc xorl (bad) sbb push repz orb or push mov bound pop xchg mov sub pop inc insb cmpb (bad) or es movsl cmc andl jl mov out bound std ret and jae xlat add push mov ret mov xchg add jbe addb and in sbb imul (bad) push adc arpl out cmc jmp pop adc sbb add cwtl dec adc xchg (bad) mov sub cltd inc adc mov xchg data16 fdivrs shll mov fs js ljmp cmp aaa sbb adc adcl addr16 xorb mov movsb cli pop cmc mov mov add xchg clc nop ds dec test sub fsubl mov data16 andb jecxz push leave inc push (bad) clc inc fdivrl mov cmp std adc adc xchg sbb andb sahf pop and les repz cltd adcl adc loope mov xchg xchg inc mov ja push cmpsb inc dec mov fabs bnd xorb fwait cmc movsb jae mov andl add dec cltd pop mov xchg popa pop aaa enter pop int3 cld add pusha out bndldx std or and pop mov xor popa icebp ret fwait and xor or jmp (bad) dec lea hlt shrl xor movsb (bad) inc sti xchg mov jle and loopne (bad) mov xorl add pop dec ret cwtl and jp bound or fdivrs push mov popa insb mov cs (bad) pushf mov jae and enter pop mov pop add (bad) mov mov push faddl xchg sarb scas mov cli (bad) popa lds iret fs push push dec in jge (bad) cmpsl fdivrl push fild loope xor orb push fldl mov cmpl jnp scas add or cld fistp insb psrld insl lds movsb pop cmp lcall nop (bad) mov xor insb cmp inc xor sub sub stc inc mov fwait xorl xor and xchg out test xor xor cmp sub clc fisubl sti nop pop push lds shll sbb lds mov enter sbb cmpsl mov sub subb jb repnz jmp addb pop pop push and mov cmpsl daa xlat jmp push std insb pop andb or mov add nop mov popf in dec scas aaa xor adc xorl inc out xchg lds addr16 mov sbbb imul mov push aas jl repz ror sub pop and adc sahf inc push sbb dec clc adc test jne sbb jmp dec mov adcb jo jbe fs scas in xchg mov xor (bad) mov test xchg shll pop xorl cmpb add fnstsw jl or (bad) inc (bad) std test (bad) xor jmp push jle je mov pop push mov (bad) jnp jg aam lods cmp mov fsubr push mov xor cmp cltd and sub or sub imull adc jge mov daa dec mov mov mov lock xchg fistpl mov and test xchg mov sbb rorl mov pushf (bad) mov cmpb push iret (bad) sub jno cltd adcb cmp xchg mov popa int3 sahf inc or and jb jge mov fisubl dec outsl js push (bad) push adc ja sbb xlat xor and sub shrb (bad) in and pop subb repz dec sbbb sub sbb jmp in sahf jp mov and in sub mov stc test pop xor xor sbb jge (bad) cmp (bad) enter dec sub sbb cmpsb xor outsb cmp xchg add (bad) jb mov dec inc iret sbb subl cld dec test std pushf pop mov jns dec mov fsubs or jp xchg xchg gs xchg hlt mov xor aam lret in dec dec push push js out sub in dec loop (bad) cmp or pop into push add cmpb cli aad fwait addr16 cmp xor pop xchg jae popf sub mov mov mov mov jle mov aas and sbb pop in das enter xchg fadds arpl fmuls inc xchg add imul pop xor (bad) data16 adc adc or aam cmp fs sbbb dec inc ss mov popa mov loope jmp notl or xchg push repz arpl fbld and movsb stc out pop push mov mov clc adc xchg incl pushf and bound add xorb pop mov mov pop jecxz loope adcb fadds jnp or jbe (bad) push rolb sbb (bad) test inc enter fmul sbb xchg mov push jnp fsubs test mov push lds jbe pop test jp (bad) addb or xor mov or mov and and lret iret sub xchg dec jne sbb rolb repz fsubp push mov push dec test push jecxz (bad) enter gs push aad sbb ficomp insb mov jmp pop mov push pop push lahf jge and aam and flds xor add jb clc mov add sbb xchg scas add out jns sarl (bad) popf rclb cmp and jle sbb jecxz add mov xchg push or and das icebp lcall jmp call imul enter in jne or mov paddusw test or and fadds repnz lods andb add sub call xorb mov clc dec mov roll mov lock sub fbld jge cltd jmp lock lea adc xchg ja adc fisubl sbb sub sbb testl popa cbtw pop mov (bad) xlat xchg inc in (bad) push rorb push in push mov dec subl cmp cld addb enter mov mov jecxz add fcomps lds inc mov add jge add (bad) popa jno popa es test in out and int sbbb scas pusha inc push cmp push jnp (bad) das adc jbe lret pusha orb into jg or mov hlt addb out adc and leave enter movsl popw cmc jo sarl insb adcl xchg movsb xchg addl xor mov or idivb test insl push rclb mov pop dec pop (bad) and jge leave sub repz jl cmp rol in aad popf loopne and or fdivl and sahf movl sti adc push rcll jg jb mov cwtl repnz pop decl xchg add les mov xchg clc dec jno sbb es pop xlat lret jl fldenv lcall jmp sbb cs jnp sbb ret adcb aaa fs mov cmp push sub add lea insl inc les andl jns das test fimul scas xor cmp int dec enter jmp add push dec jo (bad) adc jp data16 sub lret inc loopne jae (bad) jne test or pusha addr16 cmp inc and mov jns shlb loop cmp roll outsb cmpsb mov fcoml scas dec into add inc and mov addb mov in cmp in inc mov adc push addr16 pop xlat sbb mov jnp pop mov dec cli adc outsl stc xor (bad) fdivrl adc jo pop pop dec mov shrb and fdivl nop imul (bad) nop pop add xor data16 aas xchg jbe je (bad) xor (bad) iret sbb (bad) in push ja lods dec add add xchg pop xchg push push aad test sub mov inc fcompl cmp (bad) mov out lods shl cmc mov xor test xchg fsubrl test add scas loopne int3 mov push mov ret movsl inc nop rcrb ja push sbbl popf test sha1msg1 rclb ljmp push test mov rol pusha jp sub xchg sub iret mov mov push movsb pop lea int3 subl outsl arpl pusha sbb rol xchg fisubrl or push mull mov rcr or pusha push push daa in cmp (bad) bound dec inc (bad) jg and aas jecxz shrb jno mov int3 stos pop into mov mov aam rol iret cld mov out xchg cmpl add lods add mov mov loop rolb shrl xor in lods rorl jmp mov and test or mov xorb js mov mov push dec xchg pop (bad) int sub sbb stc in dec inc and insb ss test sar or negl fadd push lahf insb xor xchg in inc jp hlt in xchg incb clc movsb cltd mov pop sub pop insb inc aam (bad) shrb cld test cmp xchg cmpsb mov mov (bad) fisub add pop hlt cwtl sbb mov push mov movsl mov in inc push dec jns add aam lcall mov shrl adc or sub mov fwait or xchg inc (bad) jne sub lods xchg test sahf cmp inc popa push push xchg aad or addr16 adc jno pusha out and cmp inc xor aas mov or xor shrl xchg fildll add jl push jle pop std icebp fstpl mov xchg ret fsubp mov ret sbb mov sub stos mov insl jl hlt adc inc or mov xor in test in sahf int clc push fdivr daa mov mov pop and ret hlt popa loopne add aad lcall jno fildll xor mov inc js and add dec inc inc cmpl or cs xchg pushf (bad) mov push add pop mov or lahf movb mov push into or popf fdivr fcoml add and ljmp mov sbb (bad) aaa rorl stc aad popf iret out jb push sub push sbb cwtl ret popf mov xor jb les push gs cmp imul and add iret pop or and clc shlb push addb inc js fildl out push cmp sbb mov rcll mov sub jge inc sti int3 inc mov xor ret imul lahf push fisubr enter int3 js xchg movsb xchg in adc or xchg add mov movsb mov iret sub lods push sub mov lret addl mov mov js xor add dec popa xor cli push xchg mov dec dec test test jbe jne push xchg mov int3 xor mov dec iret test mov mov outsl test in lods cld jbe inc test (bad) adc sbb xchg movsb jle ror mov nop mov andl or mov jp sub cwtl repz add (bad) cmc daa add jle scas and nop scas (bad) lahf out mov jge scas or mov sub cmp movl test xor xchg mov aas test clc aam mov jle lcall faddl bound (bad) or mov cmc push jne ret dec in out iret add xchg and nop mov or mov es insl movsb (bad) std stos aam fmuls arpl cwtl push sbb mov dec add pop pop sbb add sbb outsb orb jl sbb std add cs test mov ds (bad) cmpsl test mov mov jno push adc iret ja or and addr16 loope jg movsl adc lock iret (bad) mov jp cmp cmp test mov (bad) daa mov call out dec enter or imul mov lea cmp loopne adc (bad) sub fcomps call incl js mov movsl dec fidivl (bad) jae xchg sbb xchg dec dec (bad) pop mov sbb sub les pop out ret movl or mov imul and into sbb sbb in mov enter cmpsb cltd sbb lret fisub inc mov sti inc insl fsubr adc sti test mov and jb xor pop xchg or fs loopne dec mov sbb call cmp xor mov test cs sub add jno lret cmp adc int bound fcompl nop ror cwtl (bad) scas inc (bad) jo insl shrb xchg adc inc dec cltd sbb inc rolb xlat fwait pop push out cmc cmp setne icebp pop and aad sahf lds dec jae push fstl adc decl test push test movsb mov push cmp add pop push in call (bad) pop xchg cltd dec shrb repz or xchg jg fdivrl xorb addb push sub pusha lahf jp jns mov out sbb push test or arpl dec lods mov mov js in dec in mov adc sbbb and jbe rorb xorb gs int jbe (bad) and cmpsb pop test test sub sbb push jmp jmp sbbb test push int3 pop push shrl inc pop loopne (bad) and aam mov adc nop cmp push push in sub lods iret (bad) int3 jno sti addr16 repnz invd test adc jp movsb fldcw dec push imul jle adc jl pop mov cmp xchg push mov jecxz jne mov or sbb and inc inc and (bad) movsb inc das outsb xor outsb mov cmp mov mov dec test lea xorb inc mov incl mov mov cmp mov pop sub sbbb leave negb cmp call lods push pusha push enter jo xchg (bad) jne (bad) mov fisubl cmp pop and xchg data16 aaa stc jbe cli addb mov mov push insb dec push mov repnz movsb pop ds jp int3 fnop push lds cwtl mov dec push aad xchg stc or clc adcb arpl sbb pop cmpsl xor mov aam sbbb ret mov push incl xor inc sbb lds push addr16 inc imul jnp push xlat fmul jo clc mov js dec scas pmuludq aas inc jb repnz icebp push inc loope mov loop jecxz mov cmp cs mov nop sbb (bad) (bad) adc cmp mov add cmp mov (bad) xlat mov fsubl out (bad) iret inc mov pop inc aaa push cli inc mov xchg xchg testb jbe jae addr16 mov andl mov rorl add decl in cmp xor adc mov test adc cmpsb mov inc insl inc sarl shrb mov xchg insl sbb in test mov je xchg repz stc mov imul dec (bad) jae cwtl aas leave jle dec and daa add test push fistp jecxz push mov dec js add (bad) popa nop iret leave test data16 lods or xchg inc out mov (bad) push mov adc aaa ret ss (bad) enter enter (bad) testl in roll into mov add push dec lods jnp in or adc xor (bad) xchg xorl mov xlat inc add es dec mov jg cmp sbbb pop mov fucomp js lods insb push add icebp jmp cmp test dec xchg xchg jne cmpb fcompl lds jl add sbb jne icebp aam mov (bad) cmp dec fisttpl (bad) hlt pushf xchg add mov adc dec mov add add push loopne pop xchg fincstp xor xor out ret sti (bad) or (bad) xor add xchg inc andb jl fsubrs inc push lret ss cmp push xchg add sub sub or jns adc stos sub test sub inc mov hlt jmp mov sub in pop lock in jbe dec mov fwait lds lods push fcoml pmovmskb cmp imul lock enter shr clc movsb pop sbbb or je sub sbb lods repz adc sbb addl mov js fs pop inc aad xchg jle mov sbb cld add cli call and inc out inc test fsub adc popa imul (bad) jo nop mov pop lahf lods hlt icebp push xchg xchg inc cwtl mov idivl mov jbe jmp add push or scas (bad) xor lds xlat jb mov (bad) sub pop xchg sbb shlb scas test out mov js lds stos mov mov lahf loope loope adc int sarl mov leave addb inc call imul je lods add (bad) and xchg pop mov dec call stos outsb ret adcb (bad) pushf pusha arpl (bad) lods push mov sti cs test repnz inc repnz sti jge jle imul adc and nop sbb insb mov test cmp sub add repnz das cltd data16 roll adcb mov inc mov stos rol stc (bad) dec adc and stos dec push cmp lea xchg jo cmp enter sub lret xchg subb push inc loop (bad) mov inc enter jmp mov mov (bad) out loop pop loope mov lock or insb xchg stos push xor ja xlat push mov jge fwait insl subl stos mov icebp mov popf mov (bad) sbb out adc ds mov mov cmpsb lret mov ljmp mov or mov movsl iret mov sbb pushf pop push inc sbb fisub push cmpsb aas lds dec stos add loope dec sub into dec sub xchg sbb xchg inc stos inc stc push inc subl aad scas jg (bad) insb xchg jg fcomp inc movsb test mov stos dec add sub cmp out loop inc mov clc add ss loope xchg outsb or sub andb jge mov xor scas iret add pop sti mov sbbl mov mul sbb imul cld xor dec jle das nop pop xchg mov ds test enter test loope pop movsl or repnz popf orb mov mov cmp shll (bad) jbe jmp int3 fcoms add out xor aaa lds mov add andb ret sub fldl scas xlat out push inc jg jecxz or sahf lock mov out fdivr and icebp pop mov (bad) enter rorl push loopne aad outsl pop incb or xchg das inc pop arpl cwtl out fnstsw adc or push sub iret bound and xchg mov jg cmp lock dec fldl jecxz mov jmp (bad) xchg (bad) nop or sbb ss loope and outsl mov in xchg push cmpsb das cmp sbbl add mov repnz mov mov (bad) iret mov mulb std jmp jne (bad) sub pop mov add sahf jge mov ds je push push adc adc adc lcall sub push inc jmp (bad) pop adc imul (bad) mov (bad) fidivrl fadds gs imul pop xor sahf faddl shl jbe mov xlat xchg cmpw test loop mov pushf sbbb cld jno mov ret jmp mov inc aad and adcb int3 push mov mov mov sub inc add mov pop cmpb mull or push dec sbb push push bound jg or push xchg push or xchg pop sub lret hlt sti orb shll orb (bad) dec mov repz pop cmp pop test scas (bad) imul test lock jp aas mov xor into ss out sarl loope (bad) ja fnstenv or outsl cmpsl iret inc mov pop cwtl dec outsb cmpl sub pop sub xchg inc nop popa push clc pushf (bad) fcom push xchg lock idiv jns pusha cli lods aad jnp add iret daa jae xchg sub (bad) repz jnp gs cli enter dec in les jge lock loope cmpl andb pushf pop (bad) xor push and push inc dec push cmpsl adcb outsb data16 or mov jecxz mov cltd gs cmpb nop clc cmp sahf loop lcall jl cld imul mov jmp mov dec push pop insb xchg (bad) (bad) cwtl fscale sbb push jne sub adc mov mov pop add lahf cmp cmp andb rcll cs add and in jne addb icebp imul aaa loope mov dec pop mov push lahf pop push add xchg jno jnp outsl mov jecxz push lret or adcb mov int3 xor jle sub mov push lea dec sub mov or mov push xor jecxz jns mov jb leave sarl dec jo add addb aaa cwtl or mul andb (bad) xor sub fcomps dec push out adc jbe add jp int3 cmp jmp and push add (bad) clc adcb adc xor pop mov je popf loope pushf or mov imul fstl jne,pt xchg fs xor and or mov pushf sbb fdivs push jg (bad) fwait xchg lds repz or shlb inc xchg ds bound and mov mov add stc xor sub jns dec test rorl sub mov push xor pop into add inc inc (bad) cmp xlat adc test adc xor pop aad les push (bad) clc pop mov adcb mov (bad) stc fnstcw push nop lock add clc cmp andb inc pop fwait pop or xor sub sbb adc and ret (bad) dec andb sbbb jbe push jne mov or adc sbb roll scas add stc pop loop dec xlat mov inc mov jb pop jp test jno (bad) loope xor repnz test imul or sub loop cmp out (bad) push mov bswap xchg int3 push or mov popa pop pop loope mov leave loop mov pop shrb push insb incb add xorl or fcomip push lods mov popf push into adc or mov pop cmpsb test mov (bad) ja sbb subb insl mov mov ficomp and inc xchg test cmp or xor mov push imul push xchg sbb jl movl pop out andl sbb push mov and dec dec mov sbb mov lea sbbb cmp cltd pop sbb fadds (bad) clc jno mov sbbb adc add mov and sbb pop test mov sbb repz rol xor test mov lods fwait test sahf daa or stos push mov jp adcb xor dec and clc into pop adc mov lea fdivr daa sbb or mov ret sub jbe jno mov aam lock xchg cltd (bad) ljmp (bad) push enter popl addb idiv pop clc add adc sub out mov out das lret shr xorb mov dec adc cli add lock insb pop cmp aam (bad) xchg xor sbb nop sahf (bad) incl jg jae inc xchg sbb insb (bad) mov dec popa mov repnz lods push ss and xchg sti test imul repnz add xchg data16 sub adcb xchg test inc repnz push add sbb pop push out adc fcoml (bad) or icebp push mov sub lods sti xchg push mov cmp test dec sbb pop movsb inc xchg faddl out xchg xchg lods or mov add add icebp insb mov lock lcall sbb or out mov add icebp xor push mov insl lods sbbb xchg (bad) dec arpl xchg jo pusha (bad) imulb shr push mov ss popf dec jp push sub lret mov testl inc xchg gs xorb (bad) xor enter dec mov xor xor outsl std (bad) cltd fcmovu ds jmp jl das fwait in xchg and jbe fwait jno test xor xor int test popa in test cs xchg int cmc xchg push sub sbb push shll enter add lods in xor ljmp xchg scas dec aam call aas ret es adc clc lods test cmpb add sub (bad) imul test push cmp addl inc lds repnz pop test jne enter or mov cwtl ret xchg mov xchg pop and in bound inc std push jbe xorl repz popf (bad) cltd es push faddl and add xchg jno pop mov and mov push push inc jp pop add lds int3 outsb push dec fild cmp clc cmp out test cmp mov add fldt mov (bad) add cld cmp fldcw out lret push int3 adc hlt xchg loope iret mov jo out repnz mov (bad) mov sarl clc fidiv inc test dec add mov pop jp mov idivl inc dec jae,pn out adc pop loopne sub loop push xchg popa sahf sub and sub jle xchg pusha xchg xor cmp jo adc shll jle inc imul push sbb movsb mov lahf jle mov in and lret das stos jo (bad) push aaa pop inc loop and in loope cmc les jp cmp pop push cs cmp andl xchg xor sub sub mov xchg push loopne cltd push loop seta cmp sub aaa jb clc andb (bad) add adc add insl xor shl jecxz or mov dec jmp lds cld add shrl xorb iret sbb mov popa fwait movsl mov and aas mov das jp push aaa dec fistl fadds frstor jae test test fmul jnp jb inc (bad) cld in jle data16 subb cmpb sub loope stos subb adc (bad) (bad) imul sbb test jp jno jno add xor roll mov arpl or add sub push mov movl sub repnz orb shl jecxz setbe in pop rorl insl fdivs or push adcb mov lahf sbb bound pop ret hlt subb push push test fist mov push mov (bad) scas les xor inc inc push dec inc mov sbb jecxz addr16 adc sarl or (bad) nop out inc ljmp cmpb xchg xchg mov cmc pop out pop xor test arpl sbb loopne cmpsl fadds push mov pop xchg xchg or xorb push andb loop sub mov mov enter pop popa stos in xor and js pusha xlat ficompl jp jne pusha xorb fsubrl test mov xor ficoml into adc hlt addb dec shlb lods jle cmp inc loop mov insb and test xor pusha xchg mull test std push mov jae jle mov pop adc cmc nop mov jg test push mov mov inc ljmp xchg add mov (bad) hlt sbb jb or mov inc (bad) xor repz pusha icebp popf xchg ret subb test shl cmp fisubl jl mov xchg cs cmc mov mov iret lret mov jbe xchg add (bad) aaa inc fcoml mov test outsb stc lea mov outsb or (bad) xor mov mov cmp sub push gs js mov fist xchg cld pop lahf inc or mov pop sbb push cwtl dec pop out test mov and sahf aad xorb out adc out adcb and jge ficoml ss mov nop and push nop (bad) pop out cs rolb (bad) notl fucomi and pop adc aas aam xor dec test cmc xchg pop dec (bad) std add lock push sbb jne lret loope arpl test (bad) popa test add mov ret adc fwait nop jns mov add nop cmpsb push push mov pop add inc mov fsubl cmp aad or or mov cmp jl add jnp in jbe cwtl fdivrl pusha add add or jle call lahf lock std adc dec mov cmc inc push xorb imul (bad) cmp (bad) insl cmc into ss push je in insl xchg xor lcall or imul mov mov icebp jae orl movsl pusha add xchg leave gs push clc cwtl ret push xor jae loope xorb mov jno adc sbbl pop jp push (bad) or inc fnsave jo aad rolb je ja sub jnp out ret lock sbbb adc push ds xorb outsl push aam enter stc sti cmpsb mov adcb pmaddwd xchg imul mov mov pop fisubr clc aad mov jmp xchg iret adc (bad) shll inc jne push xorb mov inc mov push lods imul popa and jnp add jb sbb mov dec fcompl cmpsb xor hlt xchg or cltd out imul push (bad) shl ljmp (bad) popa (bad) xor mov ja sti adc bound cli aaa push mov lea jle imul addb icebp inc mov stc push jl ljmp pop dec arpl mov lock ds (bad) xor insl andb dec dec imul repz popf nop (bad) or aas lahf and pop fcmovbe nop jo gs movsl add in int3 mov cmpsl xchg or icebp lret xor paddsw mov push mov inc xor insb inc xorl loopne ficompl dec push icebp jle sbb pop outsb test fiadd dec pop addl sub adc sub cltd and mov adc jb push sub mov out pop stos sbb into mov mov mov in sub lret xchg (bad) cmp (bad) xor mov xor (bad) ds adc in xchg push (bad) jae ret repnz dec pusha cmp lcall repz es test sarb popa fwait pop test das int cmp sub movsb lahf out pop imul jo add dec xorb loopne push sbb lods mov fdivrl cmpsb adc pop sahf inc jb sti (bad) jle mov pop insb mov inc jle mov or jmp enter fcomps pop mov jb sti (bad) fstps cwtl inc icebp je or push xchg popf add sti std xchg mov insb mov add xlat subb lods jno mov (bad) divl jmp out cmpb cld xorb adc sarl arpl mov push sbb add jo test (bad) gs pop testl je cwtl sbb mov aas mov fcom pop pop sbb add (bad) pop movsl sti sub popa mov test adc call ret push cmpsb cs nop outsl add mov fstpt fisubl add aad es jl (bad) cwtl jne rcll mov movsl enter bound lods mov sub sub test mov sbb mov dec xor adc dec es js test cmp xchg and push add ret xor daa frstpm(287 lret subb sbb mov dec jns fs jb movsb inc or lods je popl jne nopl out mov lods lret dec scas in xor cmpsb sub sahf test mov flds inc jge or xchg and cwtl mov adc sahf push mov fild sub cltd mov xchg pop cmc push (bad) sarl cmp fldl push and aaa shrl mov cmp stc adc xorb fsubr pop gs mov rcrl mov fs cmp lretw sub push and fstpl mov je fdivrs mov xchg imul pop fwait cmp movsl fistpll outsl fcompl inc mov enter das pushf adc mov mov push fadd mov mov shl add jbe xor clc mov fcoms pushf pop sub fsubl cmp ror ds outsb pop negl (bad) dec int3 in rcr adc add or nop mov pop add dec cmp push mov ret xor imul inc fsubs (bad) lea sub daa test adc mov jl add push movsl inc fnsave rclb ja test mulb dec and jae or or cwtl sub in (bad) into das add (bad) outsb dec push addb cmp inc inc enter iret insb movsb aas mov inc xchg fisttp int3 add pusha fisub loope inc bound arpl loope add addr16 adcb xor (bad) mov outsl insb xchg int bound jmp inc mov xor fs test cli fbld (bad) test dec mov xorb or adc push lock mov cmp nop inc push orb ss mov mov push bnd xor add loope add xchg xchg lret andb jge jnp out fldt mov dec test dec pop push outsb xchg push sub inc cli clc xor andb sub jns pop imul lret pop or adcb shlb adc into (bad) push xor jecxz cmp bnd inc orb sbb dec fmull jne cld pop pushf aaa test addr16 repz fcomps pop mov test cmp orl jo into lods iret das (bad) pusha outsl lea out pushf insl cli mov mov jo imul mov lea rolb (bad) sub in jbe movsl mov aam mov lret out mov jae mov (bad) push sub inc in sub imul in jge xchg clc pop jl cmpb mov (bad) or rclb push mov sub movsl inc mov sbb cmpl cmpl cwtl push ljmp jo stc xor pop (bad) mov cmp jecxz inc js push add enter jnp sbb push sbb (bad) movsb push xchg mov inc out sbb mov or shll push (bad) shlb lahf cmp ds jnp mov call or xchg pop clc ljmp mov (bad) xchg movsb push xchg (bad) aam and mov hlt adc or test pop push testl mov imul adcl pop sbbb sbb icebp jp test inc pop test cli std sub scas imul xchg xchg mov std out sbb jmp mov mov sbb nop dec mov pop decl mov mov movsl mov andb enter mov pop es push data16 pop mov test sbb pop xchg jnp dec enter jns stc xchg jl mov sti push mov pop bound push push hlt pcmpgtb nop cmp fwait xchg mov movsb dec push cld addb mov mov andl xchg in outsb pop movl add push push push jo lea insb (bad) js add les arpl enter (bad) lea adc or dec call adc push cmp lcall xchg jmp es sbb rorl pop rcr cmp aad pop or push sbbb in into pop sahf mov insb fisub aad iret add add int3 xchg sbb test ja addr16 clc xchg cli xchg inc nop pop pop leave xor movsb movsl lock xor ficoml inc push adc mov lods cmpb cmp mov xor adc inc add movl add outsb movsb push (bad) shlb jg and ss repz cli nop popa fwait mov lea mov xchg jmp push call test iret pop arpl jl pop dec push ljmp jb cs data16 into fisubrl andb xchg pop out mov jg or dec or in nop adc fstl lods jae pop insl mov iret fwait pop popa lcall mov push subb stc clc pop adc icebp aam leave jge ret mov js in addb outsb inc adc loop xlat out adc pop cwtl inc inc jb (bad) mov lret aad cmpsb das enter mov cmpb xor roll mov push xchg mov and mov and adc stos adcb mov or enter je jae mov lds push cmp mov inc xchg insl or cmpb subb sahf pop cwtl fs stc (bad) loop inc into (bad) push addr16 xlat lock sbb lcall push cmp xor scas dec jle into addb inc and les outsb js adc add adc pop enter test or mov xchg push cltd nop add push and adc roll subb inc ja and add test rcrb icebp or ret int xchg cltd pop add pop xchg adcb cmp out add iret je lock xchg outsb cmp bound or push adc clc (bad) aad fcoms xlat or (bad) or inc fdivs int3 push test pop jmp (bad) shlb test push inc insl nop jb cwtl mov stos sbb insb popf cmpsl pop loop mov dec mov int3 ds idivb outsl (bad) mov stc or test push pop sub dec and (bad) push repz xorb fcomps mov subb inc loope fwait pushf mov icebp push test rolb test in std inc pop pushf out (bad) stos dec xor add add mov shll aam je ljmp leave sub shll fsub or xchg mov in cmpsl fxch jmp xchg imul divl and pop ficomp out test dec mov test jmp mov insb xchg pop adc out sbb mov jnp jo bound cltd arpl pop mov repz xchg jne popa pop loop test into mov xlat pop (bad) rcl and das lock mov jne xorb sti and pusha xchg loop or push mov mov outsb stc push mov adc or lods xor lds test mov dec aam lea dec xchg test sub mov and test sti sbb dec push popa enter cltd mov movsl pop adcl scas scas add clc addb inc and jns (bad) aas js (bad) xchg loop jl push ret mov push addr16 daa pop cmpsb repz movsb push clc push nop sub ss jg (bad) psadbw out subb mov xchg insl ja mov sub mov push das adc dec cld or loop ljmp jle fldenv cmpsb xchg and dec sub add or mov sbb xchg loop hlt add dec cwtl jne daa inc xchg outsl mov dec xorb mov addb jp cs repnz mov clc in (bad) aas xchg lret adcb inc loop imul aaa mov sti push in pushf aam lea or xchg mov sub or jp cwtl and lods (bad) mov lret aaa cmpsl stos mov insb adcb push test mov jp mov push pop sbb sub std inc jl aaa inc dec inc mov scas pusha dec and adc jmp adc xchg insb mov push movsb movsl fdivl and test push in push clc xor jns cmp out adc ret out jns dec cmc cmc push or dec mov jecxz insl lret std nop in pusha cltd fstpl mov xlat push movsl shll pop dec decb or test enter out (bad) clc jnp daa fistpl popf cmpsl imul vmovhps scas dec flds scas cwtl insl mov (bad) pop mov pop cwtl shrb sub fldenv cmp sbbl enter mov leave cli fadd cmp adc inc (bad) mov mov (bad) rorl mov mov hlt add add mov int (bad) into loopne xchg push in loopne std xchg adc xchg dec test in adc add arpl dec cmpb sti xorb jo repnz clc sahf repz aas sbb movsl enter sbb shll idivl cmp mov dec pop mov mov cmp cld dec mov fldl jge xor xor mov cmp js cld stc xchg movsb mov lcall and icebp push and jae lds dec jl xchg clc (bad) xor add sub cmp mov (bad) xchg rol dec test push mov and sub lock cmp in mov cmp ror aas inc ret subl push mov lea inc loope add push movsb lods or push jno xchg and dec xor les cwtl (bad) lret xor mov inc mov sub jae ret and outsl add dec fsubrs jne mov stc (bad) inc stos xor sbb daa scas or or hlt divl inc pop push repnz shrb push (bad) jp xchg sbb lahf dec lock test fcompl pushf rcrb jg add or dec fwait cmp xchg je mov mov dec into cmp out andb call cmp loop mov jbe xchg enter aas test dec push test cmp push addr16 adc dec mov orl push cmp jle xchg les (bad) mov xor push lret cs xchg bound ret adc fwait pop (bad) sbb xor jg dec out ss jnp lahf pop or xchg add shlb cmpsb inc orb push insb sub stc cmp or rol or aad cmp or mov cmp fstl test nop lea jb das sbb mov xchg lcall jne popa pop and xor pop push push daa das lret gs sbb orb popa xchg test (bad) loopne pop cmp pop adc jmp cmc push xchg sub call mov enter inc test jbe adc in stc add mov and test stos dec push rol ret or jo je (bad) fbld enter mov lret pop pop mov movsb scas lea test outsb imul clc sbb mov int3 (bad) jecxz xlat fldl or jae nop xchg xchg outsl adc xorb push mov in mov add cmp mov jp imul sbb fmull mov cmpsl adc in das int3 out dec mov push orl sub adc sbb jb xchg mov test sub test std cld adcb push stc adcb push mov mov pusha pop and in mov add adc add add scas cmp enter pop cmp (bad) push popf insl push cld jmp enter iret push stos dec loop test aad mov sbb xchg loope dec insb add das std push loope adc xchg jmp in mov jge xchg rol jp pusha ds testl adc incb out xor and xor (bad) enter imul js,pn jle pop sub (bad) enter jl in es dec xchg repnz fidivr notl outsl adc andb cmp push pop mov fnstenv ret xchg or push push lcall shrl (bad) nop (bad) cmc sbb in add pop imul jno pop push mov and ret test movsb jns,pt jne xchg in cmpsl mov add out adc arpl rcl iret xor enter mov cltd pop and inc cwtl cmp cwtl inc shrl jo pop loop daa aam imulb push cmpsl dec push inc or enter mov xor int push (bad) divb adcb hlt cmpsl and orb inc mov enter jge mov pop test lahf add sub jae mov jg icebp insl aad adc outsl arpl add nop cmp cmpl andb test nop jmp subb xor sub aam int orb cmp pop add sti std cmpb mov (bad) xchg fidivr dec sbb mov into xchg mov enter inc test aad push fstps and orb or sbb movsl mov dec push xchg mov lods rol fwait stos roll inc mov scas es stos imul and test mov lahf pop incb in push imul or mov scas dec (bad) ss or push test out sbbb push int jl and das xchg sbb xchg adc lcall mov jns mov and push sub mov test cmp pop fwait pop cmp jbe xchg mov mov cmpsb sbb out pop push mov xor cmp ds idivl ret adc and sahf test ret mov adc in inc mov cmp mov xchg (bad) repz mov in push dec sahf add jmp push aad sti add push bound shlb das test lods fwait push fmuls jmp push adc rcrb (bad) lock or ja into mov testl lock popf xchg (bad) pxor jne mov or push (bad) les or orb mov fs scas js push cmp jle je frstor leave lods dec dec scas mov xorb insb or ja mov mov shll mov inc xlat cs andb fcmovnbe js mov mov es mov xchg test inc mov xchg (bad) xor sbb inc nop mov sub sbb sub loop insb test sahf inc stos xor push test lret xchg das inc sbb test and add lods loope bound mov cmp leave push ret inc in jmp sahf xchg xchg (bad) jg jg cmpsb outsl add cld mov fldcw rorl xor iret dec inc js clc xchg jno pop fs adc int adc ret in sbb test fs js leave cmp sbb movsl pushl dec fiadd inc stos ja arpl jge add (bad) dec mov xchg shl sub mov test mov jns add mov in out add cmp push mov sbb aad mov cmp or stos dec jle xchg cmp test insb pop jge inc cmp or mov test test push or jp mov ss mov in outsb and popf cmp bound outsb sahf (bad) xor dec outsb addr16 adc mov in or popf sbb or lods xor scas cmp lahf sbb add adc ret aaa sbb inc mov out inc push xchg mov out outsb jge inc pop fisttpll roll pop xor jmp xchg int3 test test mov inc lahf gs data16 cmp adc mov mov mov and fs xorl cmp ret ret lea or shll in mov lods jno push xchg push jge dec loop addl inc inc xorb gs lods (bad) mov sbb cmp out sbb xchg andb pushf pop enter add sub xor rcrl adc lret icebp test push es dec aad push add jae test mov in push and fsubp jmp mov xchg sti ret subb mov (bad) or clc sub data16 push jnp loope ds leave jge test nop (bad) clc adc rolb pop push (bad) cmp sbb movsb test insb cwtl jbe and rol in fisttp jno or idivb mov mov loope sbb bound stc mov push dec test clc adcl ret js xor and outsl popl dec mov hlt test pushf popf gs incl xor subb fisubr sub and fbld adcb jmp xor xchg jge dec mov loope xchg (bad) xchg cmp rcrl pop and pop xor jecxz inc adc xor je icebp xorb lock mov mov inc stos nop pushf scas out mov cwtl lock pop mov sub or pushf push mov das nop jp sarb mov test lahf jae xchg add out and ljmp mov dec enter lahf test mov test subb pop sbb and lret sub mov iret cmpsb cltd cmpb fist into cmpsb rol jg loop xchg nop xor xchg pop push inc sarb test push cmp or mov subl js cmp sub jo enter cmpsb or out pop test addr16 jp or pusha pusha outsb jnp cs add pop cmp push and dec xor jns sbb pushf (bad) mov xor inc mov jae outsl (bad) cmc dec cs test push pushf movsb sub (bad) sub inc push and mov pusha mov rol adc test out shld pop jle dec ror arpl xor pop cmp int3 adc (bad) lods loop and mov jge inc ret out sahf jnp mov test jb popa stos sti je iret add cmp jne inc (bad) cld outsb xchg daa inc cmp lahf mov xchg test push cwtl popf leave pop mov clc sub frstor or aad push loopne push out sub mov sahf stos lock iret xor call or aaa cmpsb push mov idivl fldt mov add fs inc loopne xchg pop pop xchg jge jno mov dec adc xor pop clc subl ret xor and test adc sub mov push pop adc lds pop (bad) mov adc push xor add jno int3 cmovle sarl les mov cwtl iret fmul xchg sbb sbb mov add call hlt sti push rclb push sub insl sbb roll push fwait jmp adc jns mov int3 inc lret scas insl pop add ret xchg adc inc jae ss imul loop arpl sub pop jle (bad) sub in stc inc pop jmp adc mov ret pop hlt mov mov popa sbb fidivl mov loopne test fildl iret sbb sbbb insb cmp enter add clc in test adc pop mov aaa pop push xor cmp stc arpl inc ja mov test mov scas mov cmp enter xchg imul (bad) push out fcompl pop sub push xorl les pop (bad) or inc push (bad) xor inc fwait dec sti aad adc lds push stos inc js mov inc cwtl in mov sub dec aaa pop (bad) in sub inc cmpsl xchg push (bad) iret (bad) cld xlat mov mov adc in repnz mov dec iret test dec sub sub jmp inc cmpsl mov cmc inc xor xchg push pop das mov (bad) fdivl test (bad) jb iret leave jge test scas cwtl xor xchg scas popl nop leave pop inc mov sub aas jle stc daa repz mov inc inc sub loopne or mov adcl push add (bad) mov add add mov sbb xlat jl cmp xor in outsb lret dec mov lods into jg pop adcl aas mov dec popa inc fdivl cmpl vmovups xorb iret sub inc mov loope add stos sub aad enter or mov es jg shrb or out adc pop push negl jne rol sahf rcrl jbe or jp cld inc int push int lcall loope pusha cmp xchg cmp jo pop jnp gs or les inc loope aad test and jne mov jbe fistpl cltd stc adc call pop cmp test add scas pop cmp shlb sbb pop nop enter loopne orb outsb mov cs mov stos and jo dec (bad) hlt (bad) arpl and test (bad) into test jbe mov jnp and in adc xor aas cwtl xor sbb xorb add mov xchg nop cmp hlt in mov js lret jp lods test mov sub gs push (bad) lods and xor pusha cmp push mov iret mov out sahf aam push test push rolb xor in jmp and movsb push ljmp aam xorb xchg cs jge pop mov test lret or mov xchg cmp sbb popf pop fs out lahf ljmp loopne adc adc push push lret subb sbb testl les jmp (bad) push pop stos dec icebp nop mov stc cmp inc jmp xchg andb sub stos lods or push add dec inc sbb test push jb repnz (bad) cltd inc or sahf push js inc stos test fcomps je mov in dec mov mov cmpb adc in sub jp inc push xor lcall sti push imul add push aad inc pushf data16 jnp pop or aaa sub push test sbb in xorb xchg pop fmuls punpckhwd xchg out sub in sbb push rep (bad) addb divl iret test scas ror push or cs sarb popa or mov fnop jle dec push outsb xchg fistpll test andb movsl sbb add xchg mov cltd enter add data16 sbb test or pop addb jecxz pusha and sbb popf pop addl cwtl dec push repnz mov clc rolb inc test cmp mov mov in hlt call test icebp mov mov je xchg loopne xor mov or jle ds xlat or mov scas or rcrb xchg (bad) xor mov xorl mov pop addl enter shrl or or fs test subl cmp fnstenv mov stc shll cmp (bad) divl (bad) imul xchg in loope test add (bad) xchg stos cmp movsb clc xchg xchg pop jle (bad) iret adc test ret (bad) icebp and ja stc cmp xchg insb aam push out pop cmc xchg ficomp scas or push or stos jno sub (bad) repz test mov push fsubp adc (bad) outsl data16 ret push rorb adcl add sbb movsl (bad) sub add inc int data16 and sub xor inc (bad) cli clc orb inc andb pop sahf daa adc mov pop lds lahf xchg outsl rorl shll jp call out adc out xchg jbe push xchg push enter clc jae test repz add fcomps adc dec leave jbe scas push out ja cmpb xchg orb push stos out sar mov or arpl xchg leave sub pusha mov or js orb sub add enter fidivr insl inc push mov rolb cmp std adcb inc mov dec test popa add jo pop mov repz push incl ror cmpsb xchg xor cs pop enter xor inc jnp cli popl test imul nop int3 std or mov ja test outsb xor pop int and flds mov nop outsl orb mov psadbw pushf push pop cmpsb test fsubrs adc lods fs nop mov adc jmp (bad) stc push out das dec sub mov add inc lret dec mov rclb jbe mulb orl in sbb sbb push shll sub fadds dec das mov fsubp (bad) pop shll mov imul rcr repz or cs sbb jbe test insl inc mov sbbb or cmpsb cmp daa cltd imul dec call ljmp out xchg ret fwait inc push push xchg xchg push or das inc jo icebp cmp add push cmp and and out jae mov sbb enter pop jg cmp add ret adcb pop shlb jmp mov sbb andl add dec mov push call loopne mov xchg mov div xchg subb lock xchg sbb popf in xor mov fiadd sub cmp jo and push mov mov inc nop dec xorb mov xor xchg in sahf or notb test arpl xor jne and cs pop pop mov mov dec pop pop (bad) stc jbe push mov jecxz (bad) xor pushf xchg jo push adc test in (bad) pop pusha xchg (bad) loope xlat adc inc mov stc adcl (bad) je enter into xchg and jbe,pn adc mov inc int3 mov sub mov in sbb adc jmp inc mov lea jnp subb pop mov subb stc (bad) addr16 arpl rcrb cld dec lods imul xchg mov inc mov test sub das sbbb or jb mov repz enter je lods pminsw push arpl and mov push fdivr iret insb mov stc xlat mov dec cmp daa shrl push hlt gs xor popa add popa iret lock cmc xor mov adc cmpl add mov push aaa lock xor ja jno or jg je ss sbb mov cmp lods push (bad) test xor outsb (bad) dec mov add xchg xor mov popf add mov sub pop pop mov ljmp jle aas dec mov iret mov or das pop notb mov lea loop sarb inc enter push jbe add enter or out pushf xor (bad) mov add mov sbb inc xor push arpl sbb mov or xchg iret sahf fldcw xchg lock lret (bad) hlt cld adc cmp cmc xchg jmp cld dec inc pusha int3 arpl (bad) fisubr clc insb dec and fs sub sbb mov nop mov jge (bad) mov jg xor je fcomps lock or js xchg push mov push and dec mov stos push push mov lahf sub push lock cld or adc stc jge push scas dec cmp dec fs icebp in adc and aaa push adcb mov scas scas sti testl push jnp lds lcall clc fldcw roll sbb dec add xorb mov inc lret hlt xor rcl cmpb pop idiv mov dec push sbb mov popf inc inc ret jo je or jnp imul dec insl subl adc leave in adc icebp jo fiaddl or mov adc int out icebp mov imul rorl (bad) add lock mov movsb pop push mov scas ss xor fldcw xchg imul fmuls mov cmp mov push test sub icebp mov pop mov outsl (bad) sub mov shlb add cwtl or test xchg mov jl (bad) mov insb lahf xchg test (bad) push cltd in (bad) dec inc push adc fild or mov scas dec mov (bad) loope xchg push cmp adc repnz idivl pop lret xchg sti xchg lock fwait add mov inc std and cmpsb das ficompl inc xor xorb jno jnp mov cmp in test mov mov cmp (bad) mov lret fcompl sub stos xchg push lock ret xchg jg stc popa leave mov push stc test ret fwait or cmp clc ss adc enter addl jg lock popf shlb jb mov outsl xor imul xchg fcoml sbbl lods (bad) arpl rolb fist ja lods loopne iret xor jns cmp pop xchg loopne xor inc (bad) shlb in mov and ret mov push (bad) jg test lret sub lcall fisubrl negl dec mov mov xchg subb call ljmp or clc ja test adc xchg lcall cmp subb sbbb stos out scas xchg or popf xchg cmpsl leave (bad) (bad) movb mov fs ficompl or lods jmp daa bound rcrl idivb push xor sarb adc icebp loop dec rcr loopne iret dec aas jo add hlt add ret (bad) out jns xchg stos mov pusha adc lcall inc (bad) aas fs fdivl add test pushf mov pop cld xchg push xlat pushf mov aam add loop pop in lea pop jbe mov push xor outsb or push lret push jae push inc movsb sti (bad) imul mov je pop jmp test fcmovnu jno repnz jbe fidivr mov or xchg jae scas xchg iret sub out pop shr cmp mov roll mov rol lcall inc jb add and jne push in xchg mov or enter or fldl pop (bad) cmp sub fildl int add or jl stos jg lea popf pop cmp arpl jge test xor inc cmpsb xchg lods sub clc jns ret hlt es sub xor add test insb mov sub mov cltd fs movsb fcoms les pop push das mov cmp enter lret pop jp mov adc mov sbbl sbbb aad and fcoml nop fidiv xchg inc scas addb inc push or leave push cli mov insl add addb push in insl jl ds out add mov (bad) std mov mov sub add fimull loopne xchg in arpl push rorb sbb dec and inc (bad) lock mov lea cli mov mov xchg test lret mov test test or or enter outsl jae fwait test xchg xchg inc adc mov adc int mov add call scas (bad) gs (bad) lea (bad) testl jbe or fadd sbb cmpsb cmp (bad) sbb ret enter fsubs (bad) mov lock push movsb ret and (bad) mov (bad) cli cmp jnp mov pop inc ss inc call subl cmp jge push icebp and test gs scas in mov sub repnz outsb icebp jb int mov mov mov (bad) mov xchg xchg (bad) orl (bad) jo adc fisub adc or jbe mov sbb mov cmp gs mov and lea (bad) mov outsl adc nop fwait inc xchg jnp push (bad) out rorb imul loop outsb add adc insb jb dec les mov out je test cmc mov (bad) adc adcb sbb int3 xor in aas mov jnp xchg inc cmpb pop scas nop lret cmp fsubl les cmpsl test mov cmp push mov mov not add rolb out inc in shrl imul xor jmp loopne pushf pop imul andb lcall pop imul lds pop test xor popa cwtl pop mov jmp sbb lods xlat (bad) push movsl orb cwtl rcrl jae lcall mov jl push nop repnz movsb pop cmpsb jl mov push mov in jns (bad) or repz cmp movsb ss push fcmovne xor in insb xor mov cmp fnop dec pushf dec jle cs and gs nop pop adcb mov pop sbbb test inc or xlat jle jns (bad) repz xor xchg push xorb add jp jbe cwtl sbb lods jmp fstp dec movsl push aas mov adcb loope inc addb aad pop dec outsl xchg or cmpsb jae movsb mov mov in rorl pop jle inc lret push addr16 repz out mov and rcrl test cltd mov in sbb cwtl (bad) mov adc (bad) insb or scas dec cmc pop xorl adc fidivrl jo and cmpsb push inc inc mov adc cltd mov cmp lods xorl das cmp cmpsb push idivl les mov dec cmc xchg push scas push insl push out adc stos sub cmp cmp adc pop jecxz nop xchg sub adc aad inc (bad) hlt (bad) jne xchg inc xchg std jg ljmp mov pop fiadd subl lea pop jecxz add xchg sbb inc dec add orb xchg cmpsl ja pop cli je add mov icebp jp loope xor add orb mov nop addl mov xchg insl mov sbb or insb xor js sub push cmp jl mov sbb (bad) xlat sub xor dec jo jno xchg fwait inc lds xchg data16 nop packsswb fadd jmp inc xchg subl mov test out stos pop mov mov aaa orb push mov mov call sbbb fs push and lds add xchg lcall cltd xor cmpl pop inc inc loope jle cwtl xchg adc cmp mov adc cmpsb push mov in out push sbb insl adcl jno pop popf (bad) je inc cli shlb sbbb enter test clc shll (bad) lea subl fisub lahf sub das mov fldl imul mov mov lcall aam lods cmpl aaa jo (bad) jnp pop mov les inc stos (bad) jge inc mov xchg imul mov inc push scas pop test sbb mov dec addr16 dec sub sbb add (bad) dec nop in mov test dec push cmp popa imul icebp fnop and (bad) dec mov mov dec push nop inc mov xor imul negl lods mov inc dec cwtl add xor test (bad) rcll addr16 rolb lds mov xchg cmp mov and repnz addr16 xorl mov cmpb jmp xchg mov lret jbe ror (bad) add sbbb jl pop frstor pop lret xchg (bad) ss fidiv enter pop lahf (bad) shll shlb cltd nop pop adc imul push loope out or and mov jmp fstpl push flds outsl mov mov cmp adc in pop ret xor xchg xchg arpl imul test clc lret mov aas dec (bad) lock push mov insb test nop rcrb cwtl xorb hlt fiadd fisttpll subb and mov out das shlb test xor jo push outsl and sbb mov fisubr aam pop sbb push mov mov fstl loopne mov sub push cld (bad) fisubrl icebp pop jmp addb xchg (bad) stos xor lds test adc test jecxz std arpl cmpb out into movsb pop cmpsl inc jp aam fiadd dec mov orb xchg jmp sbb inc xchg jmp mov xchg jo scas call in imul sbb orb (bad) cmp leave xor in mov jne sti andb pop loop lods pop pushf mov (bad) pop mov cmp addr16 mov xorb jle in rol xor mov pop pop adcb mov rorb pushf (bad) inc addr16 stos or fimull sahf js test out sbb inc mov mov stos push add repnz orb lahf stos jmp sbb inc sub outsb xchg dec mov rolb out stos dec js jns ss push out test mov insb xchg inc flds inc mov lock and push xorb push pop adc cmp fwait (bad) scas mov bound mov push and movsb dec sahf fsubrl inc mov popa mov aad pop mov jecxz cmp mov pop or jmp mov mov mov adc addr16 add ret rolb repz and xchg push sti arpl enter pop or rolb add mov jbe fsubs pop clc add adc sub paddsw aas test dec mov repz addb ret cmp push cwtl std push jnp cmpsl sub add and add jecxz cmp shlb loope ret test stos mov popa fild fistpll shl xchg mov cmpsl pop outsl pop cmpsb jp and inc sbb pop (bad) adc jmp jecxz xor sbb lret stos and into mov in fistp setg sub in rcl aam sbb xchg lods loopne enter sub add arpl lcall mov inc mov add clc imul loopne inc mov (bad) aaa sub mov push pop cmp popa out mov daa adc or mov sub mov clc (bad) ljmp xchg loopne push xchg test ja xchg loop or cmp testl in mov ret xchg push cld adc cwtl sbb out insb adc xchg sbb scas outsl jl subl sbb ret xor xor inc test rcrl ret push mov lock pop pushf test mov lods es inc jnp movsl iret leave cmp test rolb cmp mov push (bad) sbb xor fcmovu int3 pcmpeqd rorl ss sbb inc aad xor push fbld ficoml xor mov outsb jl rcrl or flds cs cmc or xchg insb inc cwtl add push push add lods aam mov adc dec in push andl inc pop jbe (bad) push js mov sub push pop inc jbe shlb enter mov cli insb sahf mov push out and lahf jp stos push incb push mov push adc xor (bad) test inc sub or loopne jge push dec (bad) cwtl and testl and out (bad) pop test fsubs sub xor adc cld mov or (bad) xlat stos adc rorb pop lahf sub icebp adcb pop bound imull outsl (bad) cwtl add in shr insb out cmpsl test fisttpl mov xchg xor mov jns imul jl stc outsb adc and test repnz sbbb lret cmp xchg jae (bad) mov stc adc push mov xchg pushl mov test jbe imul and mov inc (bad) xchg fldcw xor sub out xchg insl mov mov das aam mov fnstcw pop scas dec jns mov lds mov ja pop fdivr stc addb lods or sub lahf jg push testb inc int adcb xchg adc push test pusha xchg add adcl xorb jp push mov adc mov jo int xor dec mov ss imul fs ret rolb in in push shrl psllq adc xchg cwtl mov lds lea in xchg add addb sbb lea adc mov mov test (bad) jg inc iret outsl add out sbb sbb xchg cmp out mov inc cmp cli in pop push sub pop pushf aas mov pop je addb out clc outsl cs sti or jne mov fildl cwtl jp add mov cli sub pop sahf (bad) sub into imul fwait push lods xor nop push and and adc nop sub daa (bad) pop iret (bad) (bad) xchg std enter lcall mov movsb test adc movsl push jp sbbb mov sub pop cltd cmp or in add xor mov cwtl adc cmc mov cmpb fwait ds and jae out sub and mov jnp fistp xorb adc dec test jp jmp mov add test sbb jecxz dec pop sub (bad) push sub adc test int3 sub or orb daa ror xor pop jp movsb adc mov ljmp sbb sub xor loop hlt popf xchg insl add lret mov sbb insb out popa imul addb js adcb jbe fisub sub dec jl pop push sbb mov (bad) ja jp (bad) sub xchg loopne mov pop jb mov jns or test fiaddl icebp adcl loopne sbb lods sahf call clc gs (bad) clc shl mov push inc sbb bound cmp mov clc (bad) aaa leave inc rol jmp sbb jmp mov jnp test and test js and inc pop xor ret adc sub push sbb adc mov push inc fstps insl mov mov in stc or pop push insb lea mov andb cwtl nop lcall stos cmovne lods sub sub push cmp xor icebp add push xor pop cmc push sbb outsb mov popf jl adc mov fidivl lock inc leave cmpb inc mov movsb adc bound push inc mov pmulhuw adc leave rorl addb scas incl clc in inc add xchg int (bad) adc xor lret movsl push (bad) fimull inc xor xchg inc push cbtw mov in je sbb pop inc dec orl lock cmp xlat subl add push int3 stos cmc add add je mov push mov xchg cmp fldenv iret rorb add lea outsb mov vpshufd test fwait inc clc push jne cmp repnz pop (bad) decl pusha lods xchg jnp jo ja xor add pusha jbe add movsl jno push nop ljmp mov jno aad imul jb adc rcll mov fcmove inc dec int3 dec scas sbbl iret stos lods xor add xchg mov mov dec mov push sub inc lret test das mov xor mov or cmc jle lea cld mov jbe call mov lods dec mov lret xor cmp xor mov rorl mov cli inc xor test test or xchg inc ljmp sub leave xorb xor or and (bad) loopne push add or xchg mov leave dec andb out pop mov mov sbb lock add xorb adc out inc fs dec dec orb and cmp nop mov push out adc mov push iret mov arpl pop andb imul int3 enter mov xchg push stc add pop fwait and js mov cmp nop add fisttpll mov (bad) (bad) jbe pop mov add andb jmp out pop sbb mov mov fscale xor xorb insl inc inc mov and (bad) clc xor addb cmpl jle test xchg push jge dec (bad) popa scas rolb cmpsl xor sbb xchg sbb insb jno xlat test pop dec add fcompl jecxz or or cmpsl sbb hlt adc pop xor pop pop pop cmc pop xchg mov lret push sbb incl jecxz popf iret (bad) xor ret pop incl add dec fiadd fcomp inc and ret stos or stos mov repnz jp push push mov adc fsts enter in lret fwait mov push repnz loop in fbstp or xchg push mov inc mov dec xchg push push mov sub clc lds addb mov inc mov mov jmp rolb push in out inc mov cmp jnp ds push subb (bad) and pop xor fimul lret adc fidivrl jb push mov and sbb test shlb mov push mov jbe xor or (bad) push dec fldl inc mov jno adc or jnp lcall repnz and stc push test sbb fdiv out fdivrs repnz push mov popa inc xchg outsb aam loope xorb js orb jle out sbb cmp fsubs adc js popf pop push test mov add lret inc (bad) jae dec mov mov loop test jge adcb xor outsl nop cmpb and in sub cmpsl push jb mov cs jge (bad) ret out (bad) xchg jle mov xchg add or inc mov fistpl lahf pop inc mov loope stos aaa inc rcr scas cwtl mov subb xor inc xchg cmp push mov mulb (bad) dec push lods xorb add adc pop mov mov lcall ror pop outsl imul lret cltd outsl cwtl inc (bad) into cmpsb xlat cwtl mov (bad) (bad) int and cmp icebp rol cs pop hlt lret jge xchg lods push mov xchg mov cmpsl in inc vmovupd jno jns into cs dec dec cwtl or or imul jo cs xor add push mov jl sbb sbb mov int pop popa test adc test ficomp inc stos (bad) jb int3 mov (bad) subb inc sub pushf sbb dec cmp in lea cwtl imul fisubl sbb adc pop mov (bad) jne sub lahf xor daa mov pop fbld push popf pop cmp mov outsb push mov xorb movss cmpsb test lea aam and cwtl sbb mov iret mov or rorl loope (bad) pop mov mov leave int3 cmp push push mov das loop cs ds xchg sbb push pop sub jnp fldl (bad) addr16 mov cmp xchg out dec sub in xchg in sbbb xchg jbe fsubl mov in jns mov out mov mov pop test dec iret insl cwtl mov cmp mov cmpsb pop shl outsb jle push pop ret loopne adc test (bad) mov sub push ror mov cld push (bad) cmp inc sub jmp leave mov or fldt sub mov cmp popa inc push add push sub mov ret (bad) nop shrl clc mov sub jb sbb or ret xchg mov std or pop test movsl and and mov iret mov mov xor cltd add aas pop rcll enter push in lods xchg mov mov pusha fdivl xor iret mov mov or call iret jno add fcompl sti jmp movsb aaa push sub adc iret add movsl addr16 mov lcall outsl adcl popf xor cs andb fcoms xor sub inc mov dec mov cmc sub cmp lods pop pushf nop subb sarb jle jo add cmc add or mov into cmp sub enter or icebp stos dec adc jo sbbb icebp sti int3 sub out or stos inc or and jecxz loopne out add sbb pushf test add es pop (bad) adc xorb mov mov add xchg aas lods xor pop bound divb roll mov sub andl mov adc and test inc inc push out lret sub mov in xchg adc insl ret mov pop loopne push cmpsb mov stos pop mov sbbl daa ret clc fidivr sbb aam or sub call adc adc in std sub mov fstl adc xorl icebp iret xorl cli lods ret and aas jmp inc xchg mov mov imul shlb sub pop mov cwtl xchg loopne (bad) adc pop fcomps push ljmp pop addb and loop mov imul sbb cmp (bad) jnp mov adc ret mov movl or xor adc add or sbb iret sub ljmp xchg adc and insl jle push xchg sarb inc mov andb (bad) adc cwtl and fadds sbb mov in (bad) rcll push mov test fsub subb push cmp inc lea adc mov push inc jnp add addb fwait movsl test sbb sbb and jb fwait push pusha xchg out add pusha mov testb subb js ret xchg cmc scas adc cli sbb pusha cwtl data16 mov and and push test xchg sbbl cltd xchg stc scas mov adcb data16 lock flds xor call or incb xor es sahf std add addl lods sbb lret rcll add roll (bad) mov mov or mov movb ja mov inc sub and xor mov int cmpb in and loopne gs xorb mov push in mov mov pop scas addb mov std add mul mov ret int fldenv mov jecxz mov cli inc insb jp push pop push sub daa xor xchg pushf out int3 push insl pop (bad) sarl pop jo push cmp jno les pusha test loopne rorl sbbb (bad) fiaddl lcall add sbb lret jmp mov mov test and scas mov in ret rolb xchg xchg addb out cmp push lods fldcw xor pop mov andb arpl xchg (bad) dec insl nop lods dec mov in hlt cmp inc mov ss enter lods orb xlat pop lock outsl imul adc sarl loopne flds test (bad) loope adc xchg aad pop int3 xchg cmp rorb mov inc mov test andb mov ljmp enter dec scas outsl xchg pop mov xor lret lods inc mov xor aas pop mov jle rolb and sbb test push xacquire ret xor out add daa movsb xchg aad (bad) dec sub (bad) cs add notl jb dec out sub and leave jmp cmp add andl pushl in sbb js cmp out lcall push jl or or pushf mov adc inc pop xor xor fadd add test push pop or insl jg adc inc rol or dec cmp stos inc iret btc std movb fnstsw ficoml mov push fild icebp fisubl adc int3 arpl cmpsb sub push xlat test mov aam fisub in jbe xchg pushf jnp inc clc rclb mov int add mov rcl and and xchg xchg in mov nop decl jne or sbb outsb test xchg fcompl or mov scas sub cmp push (bad) in popa sbbb mov pop mov loope cwtl push hlt rol push push or repnz andb pusha movsb sub hlt mov jp (bad) jmp adc stc cmp sub outsb decb cmp jge push or nop push or xchg lret sbb fwait mov jne retw in or das cli (bad) incl jmp add jg mov push mov gs enter push mov jne popa aaa imul add dec add xchg data16 dec int3 mov cmp adc imul pop pushl xchg mov sub std test (bad) pop (bad) mov xchg (bad) ljmp lock jge dec xchg jne sbb sbbb enter mov cmpb push scas mov or cltd movsb sub cmp xchg repz or mov fisubrl sbb push sbb add adcb scas roll inc jno mov stos push xrelease subb std xchg and mov and test jl and pop inc and subl dec push cwtl (bad) cmp cld add add jo xor or fist js in call push imul sahf push mov (bad) data16 test cmpl mov mov mov (bad) imul loopne mov call dec push lcall mov es divl scas orb in addl mov sbb mov notl out js mov pop push pop or sub daa and enter xor gs fadds mov mov loop cmc lods push or dec xlat mov fcomps test outsl (bad) xor (bad) fdiv or enter mov cmpsb mov (bad) mov insl xchg lcall add sti jo mov rolb pusha mov adc jbe cld cmp dec sbb aam iret test jle adc imul lock enter clc (bad) iret int mov out jle (bad) mov pop jns in loope pop test dec push (bad) les add cmp (bad) das xchg (bad) sbb add lock (bad) or push inc or mov (bad) push xchg imul mov gs and (bad) or ret dec inc outsb ss (bad) scas dec jb push test sarb subb sbb and sti pusha addb data16 mov cli or roll sub inc stos dec addr16 xchg sub dec bound subb inc mov dec stos push stos mov fisubrl subb out or movsb out ret mov or cmp lret xor loope or fwait jno add pop sub lahf xchg jg test call mov push jecxz test xchg pop sahf add sbbl cmp push xor jg outsl pop mov push lock (bad) repnz pop push dec cwtl add inc mov js cltd add rolb mov mov adc out rorb jno in test adc xchg push push clc shrl xor ljmp int3 or rorl push outsb loope and inc jnp out xor and fiaddl nop popa stos imul cld and insb mov nop stos dec in mov push adcb iret mov jmp or imul frstor sbb and aad jmp insl add cwtl or testl push inc fs cltd push add adc add out idiv mov arpl mov mov pusha xchg outsl mov sbb push xor add bound (bad) and popf inc pop lock adc inc sbb dec in adc orb arpl out or xor cmp push xchg xor dec dec (bad) adc inc cmp vmptrld inc inc push jle or mov rolb pushf xor mov jmp mov xor clc insl (bad) mov add push pop scas mov mov fbld pop repz cmp incl mov data16 dec or arpl in push clc test dec mov in or dec mov testb shll ret fisttpl popf insb decl pop lods adc enter xchg mov (bad) out popa addr16 andb aaa stc adc add pop push popf xor cli (bad) push xor (bad) mov out xor shlb addb xor insl (bad) and in xor push aad cmp push fsts orb push in adc sbb add dec lock dec xchg jb loop out mov dec pop out sub adc dec or (bad) lods lahf fnsave mov jmp and movsl cmp jnp dec and cmp dec mov and inc mov jge out gs add popa popa xchg (bad) cld sbb stos xchg and adc std addb sub xchg andb popa or aaa cmp or mov popf in add vzeroall add mov in or in clc mov dec test sbb pop or imul fmuls or push push fsub ja cmp adc and loope ret into insb imul xor push dec ret mov mov mov inc push clc out (bad) clc ljmp ret add sub in pop and arpl test pop and xorb cmp mov xchg les icebp pop shll cmp test iret (bad) xchg arpl add adc and lock mov cmp pop repz mov inc sub mov push daa adc lea add pcmpeqd rclb pop movsb jb and or sbb cmc aas add fxtract sbbb push pop adc je fwait or lret ficoml xchg js mov pop bound shll or jle stos pop js mov xor mov push test bound gs dec cmpsl mov stos add pusha mulb add repnz pop test inc ljmp pusha xchg mov jl mulb out fwait cmp je ret popf xchg js int3 daa adc std or (bad) cld les dec mov pop fldl adc into (bad) lods xchg xchg bound insb inc test cmp nop inc mov and fldcw mov leave sub addb outsb les icebp fstpl test orl adc aad data16 lcall mov cmp std cld in stos adc mov repnz mov xchg dec scas xorb rcrl cwtl sti enter mov sbb jno pushf roll inc push rcrb int cmp jnp test dec jo push cmpsb sbb inc inc pop aas test add test push out sbb addl xor jle add cli pop or dec mov jecxz fimul cmp subb insl dec subb hlt jecxz xor xor adcb ret lea sahf mov nop mov sub rcrb or xchg pop add dec (bad) cmp sub mov mov cld test ret inc rorb pop rorl cmp xorl (bad) (bad) enter int3 adcb xorb ja add popa xchg and lock jns xchg or cmpsb lds les movsb pop and fdivp jmp (bad) aaa lret cmp lock adc push add mov push or fstpl add ljmp imul inc stos mov dec roll lcall or pop sarb aad adc sarl enter addb jle push test data16 pop aad mov mov adc fimul and es loopne sbb mov sbbb push scas cmpsl push ret xor rcl cmp inc push ret dec ds subb mov inc repz mov add cli add jae js add fistp movsb xchg sub (bad) jno les xchg jae fwait pop and (bad) and add cmpsb incl icebp scas pop cwtl mov fs push inc dec sbbb (bad) xor mov jb xor push icebp cmp mov insl mov or movb rolb fstpl or cwtl ja (bad) inc mov push scas cwtl adc mov sarl in ret sbb aas lret fsts fwait jns xchg out or cld repnz jnp test mov stos xor sub shlb addb sbb sbb lahf add lcall into or mov arpl mov mov xor jbe jbe (bad) shll nop arpl fldlg2 mov sti fnsave cmpl pop test xchg (bad) xchg pop adc cmpsb mov mov sbb fnop cmpl sub (bad) pusha fisubl sbb and push dec pop lds (bad) stos sarb cmp mov popa lret out lock xor cs mov jge mov sub lcall pusha js or popa pusha mov adc (bad) jp repz test mov mov xor lret xchg pushf cmpsb cli stc or push movsl (bad) adc push test ljmp push faddl enter mov jg stc pop add rolb loopne (bad) xor das (bad) xchg fistp div clc fst sbb jno (bad) mov leave xchg mov jo cli adcb sbb stos push loope das xchg sbb xor xchg cmp inc inc call push dec xor push inc movsb dec mov jle push mov sbb imul test add (bad) xchg push mov in jne add lock repz xchg sub adc in fmulp or out push adcl (bad) in mov (bad) mov adc dec daa and loop push sbb outsl jp mov cmp pushf test rorl sbb aam cs andb daa sarl fcmovb in insb cmp mov add adc orl mov fmul aad mov add mov sbb or into and add mov lock add dec xor lret inc in pop jb mov add ret xor rolb sti (bad) jecxz cmc loop les rorl sbb sub int3 stc add repnz xor mov (bad) mov enter push mov mov xor inc mov jae aas pop mov adc in dec icebp test insb adc test ret xchg insb lods xchg sub jae add scas xor in fstl jb and ljmp mov test out and sub jnp (bad) ja push (bad) repz adc dec adc and and mov je test bnd in fcomps test insl lea cmp gs jmp xor mov fildll sub xchg mov sbb gs movsb mov xchg (bad) cmpsb (bad) mov test jb test incb adc mov cmp mov (bad) push aam mov into add sbb aad lds je jno mov mov ss sbb add or cwtl addb push sbb scas pop sbb out push orb inc dec mov ds jae push inc dec adc cmc ja mov sbb scas add fsubp inc cmpsl lahf dec cmp cmpb xchg popa jmp dec dec enter movsl out push mov or arpl adc jge adcl fadd cmp xchg xor mov push out push (bad) into test adc fcom and mov mov cwtl jmp sub hlt cmp jae in sbb scas inc ljmp mov into clc or orl xchg cld cmp push mov mov jle cwtl repnz dec aam jo push outsb (bad) ja xor mov sbb es push pop xchg pop (bad) stc andb or xorb and jmp jb mov aad push aaa mov lcall xor push (bad) adc orb push pusha xor sub lds test imul addr16 sbbb dec sbb adc shrl (bad) xor jne mov idiv scas (bad) cmp outsl test test or orb into (bad) seta pop mov sub mov dec cmp (bad) fbld inc jecxz xchg roll mov test and mov shufps add inc inc cmp mov (bad) clc xchg lock jnp ficoml in icebp in nop fdivrs test add insb aas xbegin cwtl (bad) sub subb shl cli adc adc mov sbb dec pop mov das (bad) clc cmp or sti xor sahf loop cmp je xchg outsb mov icebp (bad) xchg test icebp test push (bad) ss or jno jnp imul pop push sub scas nop mov cmp in mov clc scas fsubp cmp xchg lds imul add dec jns mov pop shrb pop sub fs cwtl cli (bad) jp subl push data16 insl add andb adc ret xorb push sti or incl xor jno xorb mov cmpxchg sub cli add nop fs pop pop push (bad) inc out add lcall pop push jbe nop mov dec (bad) or xor shrb adcb out adc mov inc in test mov add sub or push mov xchg arpl add clc mov xchg sahf cmp scas xor pop lcall push sbb cmp addb xchg pop xchg insl test push adc jb mov adc movsl repz insl ja loope inc test shr pop jb dec stos push pop xor pop jbe fnstsw sbbb add inc push daa lods adc in adcb test xor pop int3 sub (bad) adc pusha (bad) jmp sets out lahf cld jne xchg mov pop orb addb cmc cmpsb jle xlat add pushf pusha xor dec push subb out cli mov pushf push adc decb lea adc mov (bad) sbb mov loope and sahf sbb jns add mov das es in mov enter adc nop rcrl int3 test fdivrs mov in fwait out lcall dec out repz scas sarl inc int3 cmpb dec mov loope fyl2xp1 or (bad) je dec test clc loop rclb sahf add repnz ljmp xchg and movl clc inc xchg fdivl loopne scas jl jle or pop xor adc xor loopne subl (bad) push pop popf les jnp lea sub sbb outsb inc ds or in cmp (bad) add push jns adc rep mov push es push in fwait in stos cmpsl aad rcr jnp or and sub iret adc sub push (bad) addps shrb into dec nop jge add xor jo or clc outsl mov add inc jmp iret popa ljmp fimull (bad) mull push stc pusha inc ja stos mov adc add xchg into cmp jo ret sbb gs movl add inc mov push and bound pop test adc or pop and add aam sti adc jnp mov xor cmp mov push ficompl lock mov mov xchg stc in sbb adc mov insl cmc pop (bad) je push arpl cmp mov push cmp roll lods outsl loope or pop lcall dec add (bad) (bad) lock data16 (bad) push cmpb mov mov pushf (bad) push ficom out outsb xchg sbbb rcr (bad) and mov lock sbb es add sub ss pop pop lret pop jnp les jp fdivrs cmp in hlt add fistpll subb xchg dec jg xor cld push cmp dec mov and mov add (bad) xor sbb cltd push stc jnp test imul inc and xchg or xchg fnstsw sbb pop pop dec faddl popa nop movsl push fdivr jnp and inc iret mov pop cmpsl aam dec je mov imul or adc xorb push daa bnd pop cmpsl (bad) movsl or lock jae pop cmpb repnz pop loop enter js xchg push stos cmc add push mov mov movsb cmpsb jmp xor dec add seta test sbbb orl js js mov es dec cmp pop cwtl int3 std xor lods test les pusha jo dec xchg orb and cmp mov mov subb push loope sub repnz rcrb mov std cmpsb (bad) ja fcoms test (bad) mov jb jl imul call imull aas movl int3 in push sbb add lds sbbb rcl in fidivrl push sbb outsb xorb cmp pusha xchg jne jns add cmp jmp add or insl cwtl xchg sbb or jmp imul sbb ret inc jp inc roll fcoms xor fist aad rcr movl lods mov mov lock std lea inc push mov aas (bad) je cmp fidivrl inc mov cld addr16 pop les add call cs inc mov daa adc scas pusha cmpsb andb aaa jns sbb push mov insb add adc notl rcrl mov imul mov jae call jp cmpl (bad) in mov (bad) add pop jl and mov push or xorb jge (bad) aas pushf cmc pop push std add mov stc add cli fild jno stos into lcall hlt jl pushf mov lret xchg sub mov mov push rolb mov mov outsb sub fmull jp and iret add mov mov daa push ret es jge test inc inc inc sbb outsb xchg hlt xchg cli test mov push ss add sub mov push dec js sbb inc (bad) notb xchg and test je test mov inc int mov jns sbb in pop enter das or jb mov int (bad) popa test mov push xchg mov rol sbb aaa data16 inc ror mov aam mov or inc daa sbb test xlat out xor pop mov mov add cmpsb lods dec fsubrl cmp test test (bad) imul mov or xor in xchg (bad) fstp packuswb push (bad) fcompl cmp outsb pop notl mov dec sbb adc xchg fldl mov and inc fldt (bad) cmp stos add mov or mov imul push lret cli mov xchg subb mov mov xor mov xchg outsl scas pop mov xor dec psubsw or jmp add mov push jge push (bad) je js inc pop out nop insl lea xor arpl movsl test lret xchg shlb test fs cwtl and (bad) push mov push cwtl sub push cmpsl xor repz ret outsb lcall ret in xchg adc push jns mov mov cmp test and mov add enter inc bound adc shrb push clc sub dec or (bad) jns jle arpl push mov xorb popa stos andl mov iret jnp lds mov les adc nop psllq test addb inc pusha rorl test or xchg int3 imulb xorb or (bad) inc (bad) jb xor arpl cmc push js sbbb arpl repz and mov (bad) sub xchg sbb xor into push inc jbe sub lock out (bad) xrelease (bad) mov clc cwtl lcall je,pt push and popa jp popf lcall add std jnp loop lahf mov inc mov and imul pop sbb clc (bad) es sbbb push inc mov cmp mov push out mov popf into movsl sbbb mov inc cmc xorb ja lcall mov push iret test xchg fimul jb ret sub sar and in loope xchg add adc cmp subb mov outsb test stos push push stc test bound xor testb pop push pop cmp sbb xor sbb addl call sbb xlat cmc outsl sbb push xchg sbb add mov mov subb xor imul test adcb iret stc rorb or push mov stc push sub or outsb test push les pop insl arpl je in sub sub test ljmp test enter test iret jl jge dec fstpl (bad) xor inc in jle cwtl inc jbe (bad) cmpsb sbb data16 aad test xor lret loop stos pop and jp jle fnsave lods js cmp (bad) xor cwtl dec flds test pop add jle dec int test mov jge push and lds decb into sub (bad) repz andb mov shrb push add subb mov add fcoms stos leave sub add loope or cmp fistpl dec lret cwtl adc in jae nop arpl cli add aas mov rcrb mov fstpl mov dec scas cmp sbbl push mov jmp outsb mov dec jb xor sub dec pop xorb mov inc or out (bad) insb jns pop pusha movsb (bad) adc test fnstsw movb add clc mov add inc (bad) mov fisub jmp or lds cmp in orb test mov (bad) enter push ret sub jge sub mov xor add lea xor push enter or sarl or bound in sti andb lods flds sbb pop movntq lret cmc mov mov dec idivb fstl int and lahf add fisttpll aad lea mov xchg aaa mov arpl mov imul sarb fidivl (bad) push fimul orb mov cli add and jge mov (bad) sub inc add imul jno dec in pusha roll or jg sub jbe daa stos and aam gs (bad) jmp dec and dec pop leave cwtl inc pop xchg inc mov (bad) icebp mov jle mov mov cmc jbe inc fldl or mov and mov leave push test sbb insb in push cmpb das xor mov pop fwait movsl iret sub scas orb adc xlat dec fdivs pushf mov imul scas mov insb add dec lods out stc inc mov pop cmpsb fiadd (bad) iret jbe jbe pop in dec rcrb andb and (bad) jp pop inc fwait jae inc add jb mov enter pop sub sub mov (bad) push or scas cmp xor bound add sbbb and or sbb cmpb xchg cmp daa (bad) enter xlat xchg sub (bad) (bad) (bad) lcall cmpb dec mov sahf jge sub imul adcl push push mov mov nop inc fsubr cmpxchg mov aam pop mov xchg add adc cmp pop mov enter pop inc add pop and out jl arpl cmpsb push sar inc nop pusha cltd cmp pop stos sbb fs js adc sbb mov mov mov lock mov jle pop test addr16 cmp xchg sub scas dec insb (bad) sbb push mov inc xchg lea sub sti lods sbbb pop xor nop mov mov subb sarb mov mov add mov xchg jns mov icebp test pop orb cmpl dec sbb push dec popf test xor dec mov mov push adc inc or (bad) clc xor jl xorl sub pop inc out mov mov orl add pop out cmp adc cmp icebp add loope popa sbb fwait jno jg adc xor frstor sub sub sub push je cwtl movsl test adc xchg dec pushf sub (bad) imul nop in icebp or sub cmpb popa xchg clc imul push adcb jb in add and or inc mov mov xchg les js pop (bad) int3 pop inc jno jg mov and sub dec in aad and lock adc mov add jge xchg jb dec inc jae jnp cs sub inc lret fdiv idiv xchg inc nop mov xchg in xchg cwtl (bad) js sbb lock arpl enter imul mov cmp call sub (bad) xor sbb outsb xchg enter dec and and cmp shll stos mov xor lds sbb add ljmp sub jne lahf push in andb jp outsb fmuls out cwtl push or mov shrb xor sbb push in jns (bad) movsl fistpll loopne mov cmp test or add inc push xchg xor pop push mov cmp inc mov test imul testl sub or sbb enter les lods loop loope mov jne incl bound in (bad) test idiv test (bad) cmp mov jbe test mov (bad) nop xchg jecxz ss jnp xchg mov add jmp or push and bswap lea popf imul mov xchg jnp (bad) adc fisubr andb ret xor pop jmp icebp fs bound rol mov jp popf daa fadds sbb push call mov cmc aam orb fadds sarl push push scas bound mov xor pop fidivl subb adc mov nop (bad) addb test mov xchg cmp sbb xor mov mov daa (bad) cmc dec add inc popa xchg movsb and out popa push jnp mov test cli nop mov add pop jnp or fadds cmc xor fcoms clc and call jo fstps and sub mov lahf repnz xorb dec adc adc stos mov cmp push (bad) adcl mov or mov dec fcomps sub test loope gs movsb push hlt mov and adc inc mov loop sub xchg cmp mov and jge std incb int3 insb mov xor in inc jns ret or int scas push push mov xchg lret cwtl aas xor mov cmp dec push mov iret cmp inc insb mov sub inc ds leave das movl lods push sbb push movsb push inc out mov or dec pop ret sub mov or mov push scas pushl mov fwait arpl arpl push les andb aas mov sbb test pop mov imul jbe addr16 sub movb enter test push pop (bad) imul jg push add xchg pop iret xor pop mov ret sbb in jns or xchg dec or mov insb mov push push jmp nop mov jae cmp sbb inc cmpb dec mov stc sub ds adc ret dec ds inc lahf mov ljmp dec xor dec mov out sbb (bad) sbb mov mov arpl popa out add dec pop ljmp sbb loope mov scas and inc jge into mov les mov push add mov pop iret add (bad) pop outsl in (bad) ret pusha sbb aam addr16 nop ret mov xchg push xor xor sahf xchg ret mov pop mull pop rcl sub out mov aas xlat mov xchg or aaa out pushf pop addr16 dec mov popf sbb insb mov add sbb inc in nop lods addb inc ss mov xchg in or push fdivrs je cmpsb jp mov jmp mov adc jl scas ja in and inc mov jbe lods pop nop loop jne xor out push and or xor into imul adcb pop imul push jl test xchg cmp inc iret jae push mov dec and (bad) mov xchg pop fistl shrl mov mov pop cmpsb dec sbb pusha and clc (bad) gs dec mov sub js xor cli add fnop or cmp add daa aad mov outsl rcll inc xor or dec subb out inc stc popa sub das xchg pop stos in test dec test or bound cmpsb insb cwtl loop mov stos nop add das repnz pop xchg push jecxz cmpb mov movb jno mov fcom xchg lcall fildl push sbb mov test testl aam mov pusha xchg ret mov sti bound mov cmp fldenv inc data16 out pop sahf mov outsl and xorb and iret imul inc sbb dec lods das lds dec lahf sti xor mov sub push (bad) mov dec orb mov push sbb addb das jmp fwait ja in xchg in enter test loope sbb lret and shlb and mov std jne jmp xchg subl aas sbb pop push (bad) xchg (bad) sti fild (bad) (bad) xchg mov fs sbbb subl push mov fwait out fist mov xchg xor sahf bound int scas dec adc (bad) mov mov addr16 push adc popa xchg mov push mov jp mov adc pushf data16 addr16 arpl iret sub dec mov push xchg fsubp xorb mov sarl sbb sbbb dec scas addr16 (bad) fildl mov (bad) cmpsb sbb add adc (bad) sbb mov in jne cmpsl movsb cmp lret aaa or int3 adc inc jbe pop mov enter loop jecxz add shlb sbb xchg fnop pop imul mov loope inc das stc test add lds das mov and jns arpl inc mov push xor fsubrl enter xchg jo dec imul mov ja (bad) mov lods test call orb mov push cmc mov sbb push cmpsb push lods subb pushf pop cmc push cmp mov jle mov mov mov cmpl rcrb in test xchg popa xchg arpl jae (bad) cs out outsl add es loopne sub xchg xchg mov mov pop mov loope add cli addl jbe inc test mov addb loope aaa int3 push cld inc push mov xchg imul xchg movb adc cmp lret mov or adc imul in scas dec pop mov sbbl subb mov cs stc or xorb pop lods dec (bad) sbb ss test mov cmpl aas push sbb dec pushf mov push and pop andl sbb mov sbb pusha push lahf (bad) sar pop cmp addl mov in add xchg xchg cmp (bad) push mov dec (bad) jmp xchg add loopne imul xchg or mov cmp mov jb lods mov iret (bad) sar scas (bad) lahf xor scas mov ret adc xlat sbb lock outsb cmp jl pop adc nop and imul std inc mov test mov cmp jl sub or xchg (bad) dec inc andl (bad) pop into add ret mul int out pop imul xchg lret aaa movsb push push repz mov sbb cmp sub xor sbb fldl test enter xchg xor incl adc int3 xchg shrb int imul mov cld popf add xchg bound test mov and aam outsb cmp (bad) fidiv subb push popf fdiv and mov jg outsl xchg mov pop cmpsl xchg pop andb cmp sbbb fsubl mov xchg push or cmp (bad) cmp outsb mov pop out cmp lcall shrb ljmp nop gs (bad) or mov stc sti sahf dec aaa mov shrb test (bad) icebp test mov and rorb push jb outsb rcll cmp out imulb inc mov cld outsl or test nop jmp loope fcomp aad cs pop insl mov cmpl sti xor (bad) mov cmp cmp add xchg pop adc mov mov (bad) xor adc adc jae test sub mov jge mov dec clc add rclb or jecxz add adc pushf jle aas add insl mov xorl cmp out lods data16 inc aaa mov push mov loop ret cmp out lret sub lret xor add jb call test xchg sahf dec dec imul sub cmpb push mov sbbb adc sub sbb cmpsl test aaa into ret adcb jno adc dec jl or dec push aad mov cli add js sbbb fist sub lea jb fucomi sahf add ret push cmp nop int iret inc ljmp pop cld cli pop dec sub sbb test aaa mov push jno xchg mov xchg add dec in imul repnz push popf jo xchg and inc mov fisub sbb arpl mov lcall pop xor lock cmp fwait xchg sbb push scas mov lods add out mov nop xchg cwtl inc mov pusha rorl pop popf aam push mov cltd shrb sbb xchg mov sub dec std outsb and rolb leave xor jmp dec bound lds test pop andb jge inc push cmc nop fucomp mov pop dec and dec mov cwtl jl out rorl add (bad) insl mov mov sbb inc mov loope cwtl pop cli lods jae push les jbe test addr16 negl lcall out test jp roll lea dec cmc repnz lahf push push push cs cld (bad) fsubrs xor shll pop loope mov je xorb out push dec imul pushf mov dec xchg inc add xchg lds rcl inc or cmpb ret es rorb nop cli cmpsb in enter cmpb and cmc adcb push xor das in movsb xchg outsl lcall inc arpl dec jns loop mov dec adc lea (bad) xchg sub sub mov dec push adc dec mov jnp add cmp xor adcb push sti hlt orb (bad) repz and xorl in xor fs push jns cmc fsubrs test jmp fcomps movsb aaa mov jnp xchg movsl jge aaa xorb je subb jl xchg mov xchg xchg cmp dec xchg data16 (bad) dec jle pop mov mov xor sbb popa loope jmp shrl add adc pop stos out adc das test cli imul insl and or pop push adcb xor xchg lods (bad) test (bad) test and (bad) out jmp repnz fucomi movsl ret jae push movsb jnp cmpsl sub into xchg xchg popf sub fwait scas sub mov fisubrl dec imul cmp adc mov (bad) pop mov (bad) push out roll dec pusha jp repnz out call js sahf pop fstpl mov ss cmp shlb gs add inc test subb mov xchg add push mov andb cs jmp cli dec xchg into xor mov mov mov sub mov fwait push mov push (bad) test or add call xchg outsb ja outsl or xchg (bad) mov adc mov test outsl subb sbb lea inc pop repnz push jns icebp pop mov adcb inc pushf jmp je or fnstcw xchg add xchg mov fdivrs or addb xlat nop insl dec nop mov pop ds cmp and push enter fsubrs pop bound inc pusha inc sub mov push aas inc mov xlat pusha fildll mov in dec aad jmp cmp fisubrl fistl jl incl std (bad) xor inc inc (bad) mov aad add pop mov push xchg xchg in movsl cld fidivr or dec mov stos test (bad) aaa xchg dec fbld rcl jge cmp jb stos xchg xchg mov bound insb mov iret daa mov cld aam and pop (bad) (bad) andl jle jo sbb je loope add jb xchg or outsl inc arpl pop je dec cmp mov mov leave scas dec xchg test and mov or repz mov jno test pusha cmpsb stos ds dec dec cs inc xchg mov xor inc push ret clc insb push cmp test mov jno sub stc pop cmp (bad) ret out out cmpsb nop dec (bad) or dec xchg rolb addb add hlt push movsb sub fiadd test and or jo dec scas sbbb push cltd push pop inc addr16 movsl push add xchg pop fcomps mov mov aam inc xchg cmpsb jmp add xor rcr cwtl mov outsl dec (bad) xor icebp push adc orl add andb xor out cmpsl rcrb add std int3 sarl cmp imul inc mov cmp mov dec repz shrl lret into xor fisubl shrb int adc clc cld pop or mov jecxz outsl nop mov push sbb mov and (bad) hlt in jle jns fsubs mov ja xchg leave or xchg into cmp jns mov push adc sbb out movb jp adc movsb ss mov add subl and mov adcb sub or adc sub jbe adc inc mov (bad) dec and popa jge cli test ret inc and inc mov aam sub popl js into sti mov xor out xor dec push mov mov bound push test lds test sbbb jns mov std sub orb stos pushf repnz pop imul sarb xchg sub rclb testl stos sub outsl jae sahf push insl test scas dec adc xor xchg sbb mov jp iret cs mov add xor mov lds insb cmpsl mov popf pop nop ficomp cmp outsl fs xchg cmp pop out xchg jns test adc mov cmpsl xor xor lea icebp test lea push xchg or cltd pop push cmc xorb xchg cmp js inc adcb jnp cli das mov mov lds jno push xchg rorl pop mov test cmp ja push arpl sbb push mov xchg stc xor repz scas fdiv jge jb and pop lret push addb mov jbe mov fildll jle mov mov dec inc add aad jle pop loope or or or lret fwait (bad) mov (bad) out es sahf or cmpsb pushl frstor das or xchg push test jle pushf and mov xchg inc in add cwtl cmp pop xor xchg inc mov push bsf xchg stos push adcl cmp inc inc mov fldl lock adcl fs cmp je jmp adc inc xorb aam sbbb cmp add pop sub mov insb vfrczps insb out cmp pop add test scas int inc cmpsl xchg xor mov subb xlat test sarl sbbb shl out imul xor dec int3 pop cmp adc loop mov clc xchg imul inc adc incl iret xor xor inc mov test adc mov adc nop dec pop inc cwtl add fdivr int3 pop inc mov or sahf dec (bad) and lea push xchg xorl sbb nop nop jb jnp mov test popa (bad) jmp cmp out popa mov imul pop jmp xchg lods pop icebp and aaa int3 mov mov or in std pop xchg ficoml clc cmpb insb mov jmp outsb stos mov sahf inc xchg xchg or (bad) mov xchg xor mov (bad) mov add nop adc dec push loope out inc cmp js push mov loopne mov inc test imul ffree xchg js dec inc jns cmp sbb mov cmpb fwait and dec mov cmp mov inc or les aas adc scas xchg addr16 test frstpm(287 loop add orb push clc mov leave sbb out ss das push push adcb pop pop incl imul jno sub mov test rcrl shrl pushf ljmp push in adc jns jecxz xor ficomp les push mov push test jns and mov andb push inc sbb popa sbbb or mov mov sbb clc add cmp pusha adcb xchg outsl xchg test (bad) popf push inc pop mov je pop adc (bad) imul cltd cli jl imul mov pop push lret fs scas add cld adc cwtl cwtl add pusha xchg std fs add fist cmp ret mov test jne and sahf pop push add push mov aad into sub pop mov (bad) fcomps dec push addl fcomps cwtl push jge stos push xchg test std pop sbb inc mov jae and bound fistp (bad) adc and mov mov mov mov shlb jle xor pop mov popf test aam add loop fistp jle popf clc cmpsb ja (bad) sbb mov dec xchg adc jo jmp or push mov out jmp ret xor jl push lahf or sub in popa cs push out mov add test lcall out jp sbb add into outsl pushf xchg pop dec xorb jge pop mov push mov xor lds arpl cld shlb sub lahf push imul push xchg adc jnp or xchg sbbb mov jne jle subb dec loop dec mov adcb mov inc sub pop mov dec stc lods adc subb sahf sub (bad) jb into cmp mov pop imull es pop adcb aas cltd mov mov cwtl xor and pop es inc xlat adcb pushl lods push sbb mov stc push adc adc std loop lods ret test dec mov adc jmp fsubl (bad) (bad) mov lret jnp into sbb out pop shrb js jo xchg popa and mov mov sbb scas repz sbb int3 pop imul mov dec addr16 jo pop xor (bad) sub sbbb int3 xlat out jp mov pushf mov push xor outsl popa cmp ret fdivs inc mov test cmp pushl add mov mov lea mov cmpsl push cli cmp lods push fimul cmc sub divb ret out cmp jb mov icebp jp daa test les adc push pop push add jle insb sbb push dec and mov push (bad) jbe stc sti lahf mov jnp and test orl xchg pushf (bad) fisub lcall (bad) xor adc call iret mov add push nop sub decb pop js lods push push jne xchg or xchg push call in test mov test add lret inc shlb push inc js inc scas jb jbe inc pop lds fisub xor mov frstor xchg mov lahf mov sub addl adcb cltd js dec pop xor mov mov arpl sbb shll mov cltd mov mov pop cmc pop lahf imul movl mov xchg imul mov or andb cwtl aam pop add fsubr popa rorl mov movsl test pushf hlt lods dec and pop addl sbb pop pusha mov mov cmp add gs mov push sub or pop nop outsl and fs sti cmpl fidivrl iret int3 aas insb outsl mov dec pop dec jp mov bound adc je icebp cmp fstpl rcrl out xor shld and jne jg stos daa stc pushf jae lock and dec mov add mov sub inc andl sahf jno jo push subl loopne outsb fisttp int3 int3 enter fwait ror adc push push enter call pop xchg add movsl xor pop test mov pusha jns imul data16 scas xchg ret jp rcrl inc outsl lock (bad) (bad) pop inc mov leave mov sbb gs fsincos mov jb mov xor nop bound loopne dec fs mov out jl popl popa lds adc popf std sbbb repnz mov mov out imul movsb shrl hlt addr16 sbb push (bad) mov lahf lock cmpl and ficomp and sbb cli sub negl pop adc pop push mov adc pop clc push fs push mov xor scas sub pop test out sbb dec (bad) mov loopne cmp dec pop subl insl lret mov adc in sub enter fisttpll test movsl in cs jl aaa xor negb stos rorb cmp rorl (bad) mov xor mov lock xchg pop mov daa testl dec lods arpl sarb pop inc mov test inc mov pop and mov add (bad) clc xchg pop cltd and fildl xorb lock pop fadds cmp adc adc add dec xorb imul jne mov jmp mov test sub adc (bad) testl andb into leave (bad) in (bad) subb sbb inc sbb add cwtl mov cmp xchg push and sbb push rcl addb cli test or je dec aad mov clc test es or lds mov pop mov fidivrl out dec mov nop gs out xchg push mov fwait cmc or jo sarb cmp push (bad) ds sbb mull enter xchg (bad) andl in dec jle inc and fidivr orb addr16 popa mov dec xchg test add movsb lods push es or nop xlat cltd and (bad) int3 (bad) cmp (bad) or cmpsl ss dec jmp sub cwtl inc loopne sbb mov into xorb mov dec sbb sarl paddd stos bound (bad) jp xor stos xor push and mov mov dec (bad) shrb (bad) mov cmp pop int andb loopne cwtl test fnstcw xchg cmpsl cli mov orb incl xchg add (bad) ljmp jbe jns add out movsl mov stc add mov (bad) call jno inc pop adc mov repz xor je ret fnstcw cmp fbld sub lock add in pushf sbb call xchg mov jo je adc pop pop enter jmp mov mov loopew adcb hlt adc fstps adc loopne dec dec pop scas jb out fadds insl mov enter xor push fimull pop or (bad) sahf out addr16 adc (bad) mov out scas mov sbb xchg inc sub mov add iret and cmp sub rcrl push inc push std mov mov jnp (bad) cli jecxz and dec dec pop adcl (bad) scas enter cmp xchg sbb stos mov mov and (bad) lods xlat (bad) mov insl xchg insb cmpsb push lods test inc mov push enter lea aam and mov jecxz mov (bad) or push imul les or hlt clc (bad) into aaa (bad) cmc nop es fdivs push test xchg push xor push cmp jge push stos cmp popa je jb mov out sub cmp aas adc fs adc mov push cmp pusha cmpsb inc or test push in insb push mov pop xchg mov push mov cmp adc subb and (bad) incl sub inc leave and sbb push mov and pop adc das mov fs mov rorl pop adc lahf lds mov lods sti xchg sbb cmp (bad) cltd jae fmul or es add scas test add data16 pop fldenv adcb lea or cwtl es scas sub cmc or dec mov imul sbb jge stos dec cmpb mov lret mov and scas mov sbb cmpsb sarb fwait (bad) enter lods loope xchg jle insb (bad) sbb addb xor popa mov fstps inc mov cmp mov movsb dec inc in and enter pop sahf insl add xlat nop mov jnp aaa cmp xorb out enter xor fsub jae adc add pop adc mov arpl bound mov pop push test mov jne pop inc lock in cmp hlt mov push pop and nop jne xchg por jl push fwait hlt cmp sbb rolb jno cld addb int3 jg les testl notl ljmp mov mov sbbb imul push cli jo xor cmp sbb sub les mov dec insl inc mov nop popa imul push andb cmp adc push stos jne mov or nop mov inc dec lods xlat xchg pop mov inc notb xchg imul flds lahf and mov cmp (bad) lret xchg add gs sub or mov xchg sub in dec push mov loopne xchg adc add outsl test imul mov push push loope add ror sub nop mov jo daa fild jle fwait loope jge fadds in push jl jmp add (bad) jbe jecxz cli orl ficomp sar mov (bad) call bound clc testl sbb sbb push cmp (bad) repnz sub ds stc inc (bad) sti stc add mov js leave in add fdiv add sbb pop sahf enter loope add shl adc rcrb mov lods or mov lods clc and mov shrl xchg dec mov test push cmpb mov adc test jge mov cmp xchg mov lds inc jns jmp adcb mov push bound jp bnd test push add pushf push les cmp repz mov and add mov jno and rorb push jne pop in adc into out adc push test test imul andb xor into and mov fwait xchg in pop test cmp pop push scas aaa sbb cmpb and add (bad) popa dec jo rolb rolb dec jl subb test xchg stos lret test pop mov sbb out dec push adc mov xor xlat scas dec push mov cmpsl test test out xor ret mov (bad) fdivs push xorl inc pop nop jno lods dec cs ret adc ret sub push gs mov aaa std jo xchg dec pop lea pop mov cmc sbb out mov iret jp inc inc mov (bad) xchg cmc repz rclb and movsl xchg mov mov cmp (bad) mov lahf push pop xchg iret jmp insb dec nop pushf inc popa outsl test popf stos les xchg fs punpckhwd js clc popf cmpsl pushf mov xchg ret cs neg lea je xchg ds cwtl mov popf sub movl int3 xor adc orb dec push test sbb icebp inc jge add hlt inc int3 ret cmp aad orb dec mov and xorb ret push lret mov adc xor pop dec outsl mov and and jnp inc loope hlt orb into push sub mov loopne dec sub repnz xchg test fnstcw repnz (bad) icebp or test (bad) enter jne xor add inc jmp hlt add subb test bound ds iret adcb bound xchg xor lock adc lods fdivs lret test xor mov jmp in cmpsb pop sbb subb push loop cmc nop popa push adc jns xchg jl mov cmp jae orb jmp into ss mov adc xchg add jge inc jp sub (bad) imul xchg xchg ror xchg mov sbb cmp roll push cld sti test jp sbb aaa loopne fstpl xchg inc movsb push roll jle push lds sub jg add mov rolb add dec xor fldl pslld sarl cmpsb clc push inc dec (bad) lret push mov jne incl mov in cmp icebp pop fcomp push mov (bad) or xchg in jl sub iret (bad) xor ja cmp add jl orb shrb cmpsb dec repnz cwtl push movsb lds sub inc dec xor (bad) cli addl js dec loop outsl loop (bad) es cmp push mov lods pop mov xchg xchg out andb mov ss xchg pop shr xor mov hlt sbb dec cmp (bad) std push push mov daa in gs andb xor cmp mov and js inc pop roll xor xchg orb cmpsb push (bad) outsl leave sub add lret sub aas ret fimull fs inc jo insb andb cmpsl sub jnp xchg cmp jno sbbl mov loop repnz adc cwtl sbbb mov clc ret sbb fsubs shll push mov dec nop repnz cmp ja add repz mov loop xchg jo test adc ljmp jbe lock sub mov in (bad) sbb mov jns mov or xor jle push subb sub push mov nop jae jp inc in cmp adc pop mov or andb sbb fildl cli sbb (bad) leave ficoml and aas shrl cs data16 or loopne ret dec xor sub add xor test xlat fs inc andb test outsl and mov mov pop ljmp inc movsb add sub xorb fiadd mov jo daa or sti scas adcb or enter mov pop call ret bound mov mov add cmp loope xchg sub dec test or jg test movsl std push sarl push cmpb bound mov lock (bad) scas fdivrl or sbb or mov movb cld mov adcb jmp or inc mov adcb adcl sbb aad pop orb jnp dec lods mov jns je test cmpl adcb mov fs outsb sub push cmp lods and mov cs pop mov (bad) cwtl and mov lods cmp adc mov or or xchg mov inc push lods or enter adc mov or scas aad pop add fdivs xor and jg jg jl xchg out and pushf add mov mov pusha mov cmp push or push xchg test xchg loope mov addr16 stc mov nop cmp lock jge rcrb imul xchg fs mov mov or mov outsb push js pop jecxz xchg jmp fs repz jae mov cmpsl ss sti add xor jo std add js xlat pop xchg stc and les jl mov push (bad) out fcoml pop push push mov lret dec insb inc adc adc xor adc jb fmul test (bad) sub aad inc mov cmp xchg pop dec jno cmpsl inc sahf out int3 ret add or fcoml out xchg (bad) xor loope nop push inc out inc mov iret fisubrl aam inc out push xor (bad) adc mov lahf pusha push dec inc xchg mov adc push sub (bad) cmp or js ret inc rclb loopne lods ljmp jmp out lock adc cmpsb icebp add popa movsl fadd jo repz mov cmp loope sti cmpsl push jns stos fwait test mov sbb and xlat xchg frstor jmp lock in popf mov lods test cmc (bad) outsb imulb sbb or in cwtl in or test clc movsl mov push icebp jp subb call inc sahf sbb arpl insl inc push mov stc push mov or aam sbb out mov arpl (bad) loope ja sub cmp push jae addb jb adc sbb (bad) adc pop xchg or cwtl push fsubp lods inc push ficoml mov aas xchg adc pop cmp addr16 cmp mov cltd or (bad) xor mov cmp sub test xor nop pop test scas inc pop add gs mov xchg lods mov cmpsb popa loop xorb push scas xorb sbb xchg test (bad) imul jl clc mov loop jmp push (bad) and fadds ja jno mov pop xchg xchg addb cmp sub cmp jle xchg fs flds (bad) lock aam sub cli push xor xorb gs fcomp add or xorb push dec cmp sbb mov movsb pop cmp movsl push mov xchg mov cmpsb repz fsubl push pop addb cmp xchg pop xchg int mov test stos dec lods inc adc mov test enter dec add ja nop loope push pop lcall (bad) cld popf andb mov insl dec or and stos inc xchg movsl dec mov sbb cmpsl gs mov rcr pop mov and jno dec repz dec pop mov test jmp leave sub pop push pop or add andb xchg ret stc jne test add test test sbb fimul inc test push mov repnz aad in int mov movsb cmp sti sbb add lock in imul (bad) cmp lods mov add cli mov lock mov adc mov (bad) sbb push mov mov pushf lock and xchg add cmpl adc mov add mov fwait popa sahf dec (bad) sub jbe ret sbb gs dec xchg cs or cmpsb push pop jae or clc jge push sub add mulb orb xchg cmpsb out xchg sub mov cmp lods ss insl mov js stos mov dec in sti adc fwait scas cmpsl ret or add or sbbb adc data16 add clc mov nop inc mov dec adc or sub lods push test sbb xchg push popa mov fmul gs jno test cmpsb push in enter test pop popf cltd mov mov inc fistp hlt imul mov add dec xchg xorb and mov jb bndldx (bad) adc enter pop orb (bad) mov add xor jae andb ret cmp pushf nop push jmp (bad) jae cwtl insb test subb push add gs addl fidivrl dec push test add mov (bad) cmc sbbb and pusha movb adc xchg lock push ja dec scas mov lods orb xor fwait enter xorl in or xchg addr16 mov mov mov xor mov fwait jp adcb gs add clc or in test pop aad rcl aam jmp lods add (bad) xor xchg sub ret pop mov and mov mov gs test test and inc lock mov es das insl dec pop mov frstpm(287 imul push movsl xchg pop push addl xor push sub xchg jno sub push and sbbb jne xchg fisubl cmp pop jp sti mov iret sub insb ret cmp xchg dec xchg lret vandnps xchg dec mov cmc pusha (bad) js fs subb aaa ret dec sbb inc mov mov push scas xorb pop lcall push pop daa push mov popf push mov scas cmpl mov shrl mov data16 popa mov jecxz outsb mov mov test test xchg insl enter pushf and sub (bad) std cwtl dec test xor mov addb mov daa or imul icebp lods pop test cwtl in mov inc push in (bad) xchg lock sub (bad) cld pop fisub push sub (bad) les add in pop xor into inc jmp mov (bad) (bad) sub lods dec mov hlt or std push xchg cmp pop cmc add mov in push test popf (bad) xor xchg cltd test fs add add outsb mov push in outsl xchg sub lret out inc mov outsb xchg jmp mov or and test dec scas popa jnp (bad) cmc (bad) mov nop xchg xchg arpl orb iret adc push lods push lods mov mov mov cmp cmp ret lcall ja in mov shlb in xchg fs push es inc adc orb outsl not mov pusha lahf dec mov orb push pop das shl adc clc adc outsb sbbb pop mov idivl sbb lcall cmp movsb cmp clc call (bad) das mov (bad) fiaddl popf sbbb jns lods (bad) xor subl imul in adc iret pop cli dec ds xchg mov fadds push insb (bad) xor mov or and xchg push cmpl add adc repnz inc lret add out jno mov push xchg aas rcrb out stc loop push imul insl jbe inc aaa ret mov jne scas call iret inc and and iret fidivl fcomps mov inc mov (bad) mov mov jnp (bad) nop in push aad je mov ret push test in bound cli jb xchg movsb xchg lods xchg and jmp mov dec push cmp in in mov pusha ret leave repnz or lods call jo shlb inc dec add rcll movsb adc fldl dec (bad) or mov (bad) sub int3 push fildl mov sub outsb xor push fdivr add inc xchg (bad) in jo call ss xchg mov ljmp push pop sbb sbb sarl push out popa gs pop test fdivrp xlat les lock test xchg push or and lahf sub dec jb cmp outsl ja xchg data16 xchg iret jl jns test xor mov xor loopne (bad) icebp flds inc pop (bad) and mov inc pop xlat jnp test (bad) movsb pop xchg lock mov in jne xchg pop sbb nop lret inc or sahf and and in (bad) xor pop add xchg push inc mov daa fstp out adc fiaddl jae lea xchg imul stc out out test xchg (bad) clc addr16 cmp pop cltd dec nop add fs in mov shrb into (bad) out test mov and add cli mov jno mov pop jnp inc dec add inc jge out data16 sbb mov adc pop jb sbb jg jge add mov je push pop jl (bad) or dec sarl outsl jg xchg fisubr (bad) jno orb adcb or or mov loope push cmp inc mov push fiadd loopne adc mov or flds xor inc xchg cmp enter mov push adc and mov xchg daa and arpl sbbb scas sahf pop in inc lock mov mov push pushl fwait pop scas add andl addl ja mov ret xorl aas enter incb and add aaa inc iret adc cld cmp mov lret jns (bad) dec aad daa int3 sbb lret bound inc mov fnsave lock aam rorb roll mov adcb mul adc stc pop pop fwait adc sub pusha cmp inc inc andb and enter jge rolb addr16 clc sahf inc add cmpb and rorl addl pop in lsl iret jnp (bad) mov xor mov sbb mov xchg sar sub cmc mov cwtl test test or jae mov push test dec sbb popf cmp sbb nop xchg dec mov inc or cmpb adc mov mov xchg and mov dec ljmp fisubl dec stc fstpt push xchg jo repnz pop nop push loop dec dec mov pop xchg mov sbb push mov aad in xchg ret fadds es jg imul lods mov fsubrl shlb jecxz xchg xor or mov jge adc test clc or loope mov mov jnp frstor fbld jmp movl sbbl sub jge and mov in pop xchg and xor sahf jmp inc cwtl test mov add push (bad) mov add insb xor add push add xchg mov arpl adcb je push cmp enter adc fdivr mov mov xor dec cmpsl add jno test mov dec mov int cwtl shll in jl cmp lret (bad) repz or lcall imul cwtl out add ret jle cwtl push dec mov fdiv add sbb add rcll mov sub or inc cwtl cmpb (bad) movsb lds cli les pop imul xchg imul mov dec jo subb nop sti stc (bad) lea in sbb mov add dec push mov sbb rcl sbbb pop jo fs pslld mov or cmpsl (bad) std adc cwtl jb xchg lret aaa push lds sbbb jnp mov push cmpsb mov xor mov adc push mov cmpsl xor cmp mov push cwtl xchg outsl nop es cmc nop insl mov xor mov inc popf mov push fcoms repnz imul jle jo fnstsw push mov mov out test shll fild adc fcom andb add jno xchg dec loope mov mov rcrb mov xchg in xchg ss pop xor pop cmc scas push mov mov andl jle pop pop nop cli stc shlb xor cs or out jp int inc leave iret jecxz hlt inc test adc je mov jo add mov aam add into sub out adc sub add cmp (bad) mov xchg or mov jb movsb fsubp pop sbb nop mov or mov dec mov and jns jae cmpb sbb mov sahf lods jbe mov ds mov cmp (bad) cmc lahf pop fwait shll fild pop fcoms jmp adcb fidivr mov mov or xchg cs addb or subb dec or jp sbbb cmp rcrb addr16 pop sbb xchg popf pop sti add or sub inc idivb ret andl and xchg inc push repz mov insb adc cld cmp inc in sub cmp cmpl xchg and sahf xchg ret test (bad) mov enter and jl data16 mov jb and iret dec aam or ljmp jbe (bad) cmp pop jnp xchg nop ret mov jl add mov int3 daa adc movsb adc cmc mov int3 ja or xor iret mov fistpll lea ret jnp test add xchg bound and or pop daa push dec xor sub in test (bad) mov loopne movsb out mov jnp sub ds int pop outsb jnp mov aam inc mov aas (bad) push call sub add and adc lds out in jo sbb mov jge stc pop jnp in dec sbb cmpb push inc sub ljmp jl test lret jbe xchg cmpb or pop xchg or addb cmp adcb call adcb xor inc jmp (bad) clc les cs pop adc cwtl aam add jno xchg pop lahf js fbld inc pop pushf adc xor loope daa (bad) xchg push add (bad) pop pop testl pop std add cmp stc pop jle xchg mov push xchg icebp pushl push and xor fsubs imul xchg xor test and data16 jne mov out or incb cmpb sub cmc push jmp aas ret aas enter lods jp (bad) cs push or ror nop xor ja xor cs daa dec bound sahf sbb xchg mov push pop inc aam push enter or cmpsl rorb test stos cmp xchg mov addr16 test aaa mov sub fdivr lds enter les lods loopne inc push mov mov subb xchg int inc cmp pushf mov cmpsb pusha inc pop xchg adc cmpsl mov aad std fiadd (bad) lret xchg cld aaa mov cmpsl pop fdivs sar (bad) lock sub enter push in nop add mov lcall xor push test roll xor cmpb push xorb lcall mov xchg movsb addb addr16 jge pop or pop jo pop cmp int3 outsl lea cmp mov xchg push mov bound or cs cmp xor sbb xor lods jae out fwait (bad) jmp lods push outsb push or aas and jle xor ret xor inc int3 subb adc sbb data16 cmc ja xchg mov xor aad xchg push fldl cmp js pop or andb mov enter add xor dec in call cmc decl mov jne subb sub adc stc and push mov mov and jnp addb das leave jecxz sbb hlt (bad) repnz test cmp inc push pushl pop negl jge mov jo cld add jge int3 jg rcrb lds pop xorb cmpsl jnp ss div mov adc lods (bad) int test inc stos mov movsl scas incl ret mov cli sbb mov enter mov in lds dec mov adc ja push sbb (bad) imul aas fiadd test rclb addl movsl mov sti add flds mov xchg les orb push (bad) dec (bad) nop add jmp or xchg lret push mov in mov mov add lock shrl add or cld jl roll scas test orb out je dec addb cmpl sub clc dec add push dec push mov lahf add lods cli pop loopne fsubrs int out cwtl pop (bad) add jle pop mov jg jl sbbb (bad) mov nop (bad) jae push movsl idivl (bad) lea (bad) adcb lret push int jp in xchg xorb sub xchg imul mov mov test fucomp mov bound xchg xchg inc nop pop lea subl cmpsl (bad) jbe inc push and mov ja mov imul add pop in add mov ficomp pushf jp jl pop lds in adc xor (bad) sub lods ss addr16 mov cli addb psubw adc test mov pop lahf sub imul andb negb add pusha loopne xor sub cmpsb sbb pop mov adc xor sub cmp inc data16 icebp rolb sbbb jne xchg fldl testb mov sbb mov lcall movsb clc pop movsb mov fldl cmp or lds push movsb pop jmp call test fucomi enter and mov repz test insb clc imul or sub push dec cmp push sbb in pop faddp cmp push pusha jbe lcall xor adc jmp xor adc fmulp out xor pop ficom inc mov add inc pop mov ror and mov sub mov sub mov cld mov adcl mov dec mov pusha pushw mov iret mov repnz sbb xchg xor enter jno fcompl in or rolb jle repz cli push sub pop mov xor andb in jb mov add ja imul mov push fsubs fstpt dec bound pop mov xor andb jb push pop pop mov mov ud1 stos mov mov stos inc shll cmp jbe lret adc insl jge shrb rcll xor and popa mov mov add adc mov orb repnz mov cli xchg fldcw outsl dec xchg aaa add test fadds and or test fs and clc test (bad) ficompl sbb xchg cwtl int3 iret fisttpl push sahf (bad) (bad) leave push jns mov xchg es adc sbb mov add cwtl ljmp pop movsb in dec lahf mov jle test jmp je stos je xor mov mov mov aam and add and mov add jmp jmp je push test (bad) cmp insl sbb repnz sahf mov mov fwait mov fldenv cmpsb movsl pop jo adc inc addb or in sub or sub sub dec or mov xchg aad fmuls in movsb mov cmpsb push mov inc mov push subb loop inc mov pop mov mov lret cs (bad) sti xchg jl cmp mov pop mov push idivb push out xchg scas nop adc sub (bad) mov test inc or sub and mov (bad) das inc bound xor stc add fstps jbe xor mov jno xorb jp addb pop bound xchg outsl or mov popa jl sub aam rcll cmp jae xor test push dec (bad) sbb clc pushf and inc das cmp hlt repnz and notb pop inc mov push into mov mov mov fstps mov (bad) (bad) mov addr16 notl push jae pop sbb add adc in fistpll jb add in mov into cwtl add mov adc sub push int mov cmpsl dec fildll mov int3 jg dec push mov ret adc jmp ja movsl enter lcall sub sti cmp sti nop jns faddl or inc into cli addl ljmp sbb mov inc add rorb test xchg iret jns jle sti jae mov std sbb imul ret out loope inc mov inc push xchg add imul and cmp sarb enter lcall mov lods add les mov nop add pop jb (bad) sub bound dec adc bound sbbb add pop jle dec scas pmuludq repz fsubl pop (bad) cli or or cltd pop shrb outsb (bad) mov cmpsb mov jecxz int subb mov xchg xchg mov out sbbb jne jmp in mov lahf mov pop (bad) adc ds dec mov ffree loope in mov je shrb (bad) loopne fistp pusha bound push movsl cmp lcall xor mov cmpsl pop jmp jb scas sub fcom lahf inc push xchg adc enter mov fldl cmp xlat andb sahf push cmpsb rolb mov (bad) dec clc outsl into xor lods test sub cmp add icebp jp add rorl ret jbe adc cs movsb jle jl adc lcall repz iret stc xor iret jle and jle fldl movsb ret mov addr16 aad push out add inc push cmp adc mov loop and fbld clc add fisubrl (bad) scas add faddl sbbb inc sahf dec dec (bad) sbb add jnp fnstenv inc add ss jbe fsubrl test and std aas adc popf jae movsb dec sahf sbb out addl sbb fs hlt pop lods aad mov sti daa lock ret arpl nop add (bad) push cmp stc jle shlb insb negb or addl sbb sbb loopne (bad) mov inc ret sbb in sti iret add lods adc adc xchg or (bad) mov pop sbb in jp pop cs xchg cmp testb mov mov (bad) mov sub int3 inc mov fimull mov (bad) (bad) xlat lretw mov adcl inc aam out (bad) cmp pop decl xor (bad) xchg inc divb call push (bad) ds or mov mov imul inc test cmp test (bad) xchg aam int3 and jae fs pop test xlat add es dec loopne int adc pop cmp movl flds ret cmpsl sbb mov (bad) mov sbb fstl aas vpsraw fidivrl dec xchg ret jl inc sub (bad) enter std lock jge cmpsl cmpsb call bound popa sub daa cwtl movsb xchg shrb lahf nop int3 inc add add or xor mov orl jo jnp mov in nop and sbb cmpsb push (bad) xor sub adc pop lahf lods inc aas push inc cld xchg subb mov aam mov jbe and push pop jns fcomps scas and clc inc mov insb xchg dec mov je adc jle dec or xchg insl or aad cmc fildll inc in dec icebp adc cmp mov xor jmp cltd lods and data16 add adcb jge das rcr in mov clc fild adc lret idivl rorl jl mov add andb aaa ret mov out rcrb iret int xchg inc mov dec aaa mov fsubs push ret xlat lods mov mov mov rcrl ljmp lahf (bad) fucom adc clc add orb rcll mov sbb aam mov xchg lahf lock popf lock cltd in mov test ds lock and or add andb insb fwait xchg sub out or fs pop push testl jmp std (bad) xor xchg add outsl iret xlat push inc or test arpl out xchg clc addr16 out repz xor mov inc (bad) or mov loope mov xor insb adc call mov test int add outsb and dec js jge xor and add pusha jle (bad) add xor ja outsb adcb and and int3 faddl aaa adc dec inc mov clc sbb in xor addl xchg mov sbb cmp sub pop test ret jno dec inc lcall (bad) and xchg and imull inc add inc pop repnz rol int sub xchg mov inc xchg dec (bad) xor sbb or inc ds and fisubrl sbb dec xchg andb les push cmp and dec xchg mov daa pop cmpsl or inc sbb fstpt cmp push (bad) cmp lret jnp stos sahf ret out lods jg jnp fsubs fs sbb push cmc loope mov js imul stc xchg roll ds jmp test inc jge inc cltd mov add nop pop mov push icebp insl loop sbbl leave jnp adcl mov rolb incl add orl iret xor daa pushf lret adc and mov pop cmp inc (bad) repnz aaa inc (bad) in into jp pushf push inc or or mov and pop pusha fsubrl loopne dec xchg cwtl les sahf clc in inc fdiv fwait shrb pushf jnp xchg xor pusha in cli jb sub lods aad pop popf push scas fcmovbe mov enter adc xor xlat cmp fldl (bad) nop mov sbb stos les jbe sub gs sub (bad) adc ret cmp or loop stc shlb in fidivrl lea iret push mov xchg loop adc adc xchg pop pop and insb nop xchg xor test ret in push icebp or mov inc sarl add inc repnz jno aas add inc icebp push incl fwait jle jle xchg popa aad stos loopne movsl (bad) mov sbb xor arpl iret and orb sbb aam jne mov imul add cmp out shrb outsl jb adc pop adc cmp jae,pt push mov sbbb jo (bad) xchg into sbb or and imul xorl (bad) push mov dec popa mov jecxz push decl mov xchg pop adc stos nop dec out sub jae cmpb inc mov xchg sbbb out jno sbb ret jb pop pop (bad) loop jb jg pop jae mov int3 cmp rorl decb movsb push sbbb push scas in lret jno xorl mov sbb jp andb mov out lods xchg dec mov das inc mov push add jle out imull push in xchg inc mov mov xor dec lea clc lahf and xlat xorl shll inc mov pop addr16 cs xchg out cmp daa rolb or xlat sub mov xchg andb hlt stos mov repnz xor (bad) in inc mov (bad) jns sti les pop pop inc mov jle clc sub out pop mov pusha cwtl mov and cmp add push cmpsb xchg mov xchg imul roll sub adc fdivr popa (bad) les in mov and cmp cmpsb das repnz shll push pop bound jo addl jle and jns add add sbbb or sub cmp pushf sub jae or cmp mov push pop jne,pt xchg mov jl movb xor mov and (bad) std test or and mov std adc pusha lock test sbb or mov adc icebp addb xor dec aad psubsw aaa mov addb stc jne addl clc insb cmp sarl loopne adc sti push add cmp (bad) stos sbb movsb fsubs lods and adcb jns lcall outsl mov (bad) push mull xchg arpl jb popa cmpsl push stos das int push mov cmp sar rsqrtps mov test or daa push test mov fildll fiadd bound dec add (bad) call add push mov sub xchg cmp mov push rorb pop sbb sahf (bad) mov jae pop cmp fs (bad) aaa xorl aas inc mov pop andb jle nop lods dec mov and test mov out orb pusha movsl add push int3 sub test loopne push mov ljmp (bad) and cmpb sbb scas push xor icebp out roll adcl out int3 (bad) push jp or (bad) ljmp push cmpsl push cmpb xchg insl add or data16 lods push movsl mov pop sub cmpsl sub sub dec mov bswap test iret pop sbb rcr jp mov push (bad) adc into das stc out (bad) in stos cmp xor daa idivl loope or dec mov hlt pop lcall push test xor nop cmp mov mov fwait stc pop out sub xor imul orb inc and lahf andb shlb sub add ja addb ss ret jns jle xchg hlt cmp popf (bad) rorb pop xorb add inc mov lret paddsw pop lds addb stos add pop movsl cmpsb imul pop mov mov int3 or (bad) push mov mov aam and xor nop or xchg imul stos scas dec inc mov pusha enter (bad) lods aaa mov xchg add sbbl fiaddl mov imul popf mov mov mov jle je andb es gs and pop xchg jl mov sub adcb ljmp test mov xor les ret fdivs xor push lret sub adc sub cld test inc int3 cmc cmpsl aaa (bad) repnz mov or dec sbb mov mov sub ss stc jo shl mov xor xchg orl out imul mov sub stc addr16 cmp or testl (bad) pop jnp inc xchg je jge adc je daa dec push out ljmp nop add dec adc sub clc loopne add les loop push cwtl cmp jle das lods mov addl lret cmpsb es gs and jns mov inc push lcall andl lcall das xchg cwtl pusha popa imul cmp add push cmp dec xorl push cmp bound std dec pop mov iret ljmp fidivrl inc lds xchg dec add mov (bad) les sbb ret lods add cmp les out jae or sbb jno dec adc cmp mov cmc subl adc iret aaa and test cmc jg loop jno push pusha out int3 sbb cmp lcall iret add xchg outsl test push out push adc sbb divb mov inc cmp dec mov xchg sub (bad) fadds imulb (bad) cmp fs (bad) mov addb xchg cwtl shlb in inc mov test inc test pop xor cwtl (bad) incb mov dec (bad) mov and adc movsl enter push xchg cmp mov adcb dec lret sub js icebp or fs mov repnz adc fs mov cmp jne outsl xor ret push sbb add jle stos jne into hlt daa jb je adc dec sub sbb mov ljmp sbb jle push mov mov mov push cltd out adc stos int pop icebp inc mov insb ret popf mov pusha sbbb mov sub aaa mov insl in (bad) sub or pusha mov mov out xor pop push (bad) inc lods rcrb cli dec inc in std lret andl dec jnp (bad) outsb inc add pop fs cmp dec mov sbbb out (bad) imul sbb mov je cld xchg push add cwtl mov mov fcoml mov in (bad) dec (bad) arpl orb jbe lods mov mov and andb popf nop push pop or std xchg fstpl fdivrs enter and test ljmp scas and popa in inc fdivrs in cmp test and aad and (bad) jae jnp and jne cwtl mull outsl hlt cmpsb dec push jg dec push push imul sbbb mov cwtl and rcrl test and cmp xor mov lahf addr16 cmpsl mov (bad) cs test or (bad) vpunpckhbw nop mov mov jno and sub pop enter mov inc pop inc cmp ss dec adcb mov imul mov insl add sarl insb inc inc or mov cmp mov xchg adc out mov cmp into or mov rolb inc mov jb pushf xorb out push ja cmp in adcb and push nop mov (bad) cmp inc mov xchg leave mov and mov adc nop test dec xchg subb sbb and sub pop pop add loop arpl loope push push push test movsl enter mov mov pop pop xor enter stc je nop jecxz lcall js push sbb xor mov mov repz outsl loop bound xchg mov out xchg cmp pop lock add fstl loope in orb icebp dec mov repnz mov mov add push fild out out icebp out addb fs sti (bad) out loope inc test in icebp push inc xchg stc test sub and addb out lock adc jge jmp jno popa sarb arpl mov call jb mov cmp mov dec cwtl rcrl jmp inc (bad) and xchg test xchg sbb cmp mov pop mov sbbl sar xor ret movsb add xor add lock andb or and faddl mov in test and lret add mov inc pop jbe (bad) jg sbb mov aaa inc cli inc call out aam add ja jl (bad) jb dec lods cmc inc or xlat mov xor jge push loope xchg fs xorb pop xor leave push movl fistpl xor or ds adc out lahf and cmc xchg mov test ret mov xchg or ret and inc jns in push add mov mov add push bound imul test sub in and sti mov jbe dec mov or mov mov dec imul mov clc mov lds test mov enter push mov inc (bad) clc dec sbb pop mov iret imul out jge xchg mov jbe push mov scas dec xor scas xchg mov push repnz int3 sub jne out push mov jae test int shll sarb mov frndint cwtl fs xchg int (bad) inc inc testl loope mov daa inc xchg ss aas sbb xor std imul repnz xchg in insb fcmovne popl movsl adc adc inc sahf out mov jecxz jge (bad) cmp popa (bad) out cmp xchg mov dec sub fsubs add mov jo jecxz push int3 out loopne das imul popa cmp jg inc sub fcmovne inc lock adcb cs jo test insl ja mov int xchg inc xchg insb scas sbbb push mov enter pop lods mov into orb mov ret pop cwtl mov lds lret addb stc push lock push push ret sarl sbb push arpl and jns sub add sbb mov fiadd xchg dec dec jo sub jbe (bad) testb dec mov (bad) in outsl cmc mov push pushf mov jne adcl fldl mov movsl mov in dec push adc mov adcb pusha sar icebp xchg fldenv cmp test scas xor inc popl push test add cmp into sub nop sub sbbb loope scas dec mov test sub push adc or popl (bad) les arpl and lret mov xchg sbb pop xchg jne mov sbb jno pop mov inc icebp xchg ljmp xchg dec mov sarl or add adc (bad) cmp xor stos or aad mov int pusha xchg or cmp test scas sbbb push pop xlat pusha ret jge lods jne test xchg push pushf adc push inc fs adcb cltd dec sbbl gs in jne loopne ljmp repz xchg dec test inc lods mov push add notb enter movsb sub test (bad) mov ret int out push fadds adcb inc mov cmc jns stc aad inc pushf stc out addr16 and fwait insl in mov rolb maskmovq testl je addr16 add daa xchg and shlb mov nop insl nop xchg bound (bad) gs addb stos dec push out sbb js mov test xchg faddl andb loope xorb fisttpll adc mov xorb adc sub xchg fwait xchg loope mov pop roll sub test xor addb mov in cwtl pop fdiv insl cwtl addr16 cmp fwait xorb push pop xor orb inc add add lods jo sbb and test push (bad) shl sahf stc clc test cmpsb push inc adc and pop movsl pop rcrb push and es and push and adcb stc add arpl adc add popa inc push jle or push hlt inc sbb inc ja xor mov out push xor in insl pop xchg mov pushf outsb dec push hlt add cmp lahf addr16 xchg pusha push js notl mov sub jns fsubrs push ret mov sub mov insb mov mov or xchg push lods mov (bad) xchg stc or or jge test jp dec stos pop mov pop cmp jle lods std xor pushf (bad) jne movsl push rorb push pop sbbb and icebp add xor movsb push repnz mov pop fistl sbb in push inc xorb aas ret test sbb and push subb and shrb ja cwtl repz rol (bad) sbb enter aaa inc sub sarl icebp js stos xchg and or adc enter mov mov jecxz out insb imull aaa cmp test or xchg pop sbb bnd mov push es cmpsb mov ret stc or mov sub lods (bad) stc pop addb inc rclb out mov or in ss fidivrl cmp imul cmpb inc iret stc push lahf mov pop push dec pop outsb add add push lahf or mov hlt push push data16 cmpsb pop xchg cld jae pusha mov jbe loope mov jno movb nop add cs lods push fdivrs call jle jge mov mov fisubrl aaa (bad) jno sub mov jp add jp out iret mov xor loopne shll push pushf add (bad) aaa xorb cmpb mov xor and pop xchg addr16 outsb idivb push cld inc mov add inc imul aas icebp out pop data16 mov pusha adc nop sbb xor fisttp xor mov xchg or popa loope push mov (bad) je pop orl add out int3 cmp test fdiv push in sbb pop movsb sub jb xor andb in (bad) out test (bad) xchg cmp ds enter addb faddl aas sbb lret (bad) add push movsl mov outsb ret fcoms leave sub fwait inc dec push push mov test xchg xchg lock jp and insb jbe andb xchg jo (bad) xor adc pop push in add fdivrs and aas pop cmpsb fdivrs or movsl mov lock repz fcmovne push (bad) lods not push daa and pop mov nop clc ficompl movsb jge mov sti push sub repz std sti mov les mov jno adc xchg fs js sahf or fs sbb sahf cmp pop incl stos push add (bad) xor (bad) push sti sbbb inc stc subb popa jbe xor mov jns hlt push mov test and or out lock cmp into pop enter test scas dec jne loope stos mov sbb gs cmp lock mov (bad) mov push outsb fild and test test insl mov add lock lret xor dec orb call mov fsubs cmc lar cmp jno (bad) out push pusha lds movsb xor xor xchg enter test nop mov fadd xchg xor mov cmpsl es icebp (bad) movl dec and mov gs mov lock inc push add gs shlb jg outsb int3 jl (bad) enter xchg rorb xor adc inc xor pop cmpsl push es or addl aas fnstcw lcall xorb jp dec lds dec iret or inc repz ljmp stos push cmpsb enter mov jo cmp push mov sbb or mov aas inc or jg jmp dec nop fs mov mov stos insb orb sub xor lcall hlt cmc dec push jne dec (bad) (bad) xchg xchg mov push xchg (bad) fadd shll (bad) out loope xchg lret xor (bad) popf das mov or mov enter add sbb in mul jnp cmp push out sbb dec andb mov push jmp sbbb aas mov cmp fistp pop cmp mov insb je or mov leave adc lret cmpsb addb pop push jg das mov inc sub inc adc pop jmp pop popa mov imul insl loop (bad) mov jns inc inc mov xchg clc sbb xorl inc pop sbb test cld jns xchg loopne dec lods andb aam popf cmc cmp (bad) cltd push cltd andb clc jb in pop or mov or ficomp mov fnop insb test rorl movsl lret dec xor hlt or das rcrl sub mov addl movsb lock jg sbb lret push xchg test mov (bad) xlat xchg mov push add ret aad pop push inc push cmpsl ds shrb movsb lret pop addb mov xorb sar sub (bad) jnp jle or push mov and jmp jb xor add xchg pop pop xchg fs inc push sbbb mov andb mov and out jo das test test push test cmpsb cwtl xchg xlat je imul inc mov lahf enter dec daa pop jge xchg jecxz stc lcall daa cltd pop movsl xor add orb xchg pop sub test adc adc mov push add mov int adc and lcall stc ss cmp mov xchg sbb andb nop imul insb adc mov pop mov orl stos cmpsl push bound xchg cmp js sub cmc mov pop aaa mov xlat jp pop addb popf test int3 xor int (bad) mov mov xchg cmp fadds push imul popl in cmp xchg sub mov mov clc mov push test ljmp push dec out add (bad) xchg movsb cmp push lods (bad) repnz imul inc xchg imul mov add stc aad jge fs cld pop pushf and xchg ds fldt push std nop add xchg hlt (bad) sub (bad) decl sbb push sbb pop nop sub adc pop imul jbe inc loopne mov mov addr16 push sbb jnp mov pop mov push or push mov test (bad) (bad) add sub and inc add inc mov cmp sti daa fbstp loop pop sbbb test sbb jl adcb jl push or mov add add push xor orb xchg jge negl adc in jl mov cli shlb sub loop leave jmp xchg data16 add leave mov pop xchg js jo inc sbb (bad) push in mov xchg out mov jge add loopne jno add add xchg nop popf (bad) or xor orb jmp mov leave dec imul mov ljmp sub adcl jle ret mov pop mov cmp subb ficom mov xchg arpl jg test push pop rorl adc jecxz xchg clc cwtl cmp adc and or sbb fsubrs outsl xchg sti cmpb mov imul enterw inc cmp mov out xor nop das jne (bad) cltd bound mov subl mov call add add roll in mov xlat jbe add xchg and popa xchg cmp fildl jb test adc shll dec jno cmp lds xor rcl rcrl cmp sub xor or cmp add add cmpb (bad) mov adc jp sbb pop orb orb loopne mov sbb pop mov cmc mov aad aam adc les mov jl popa int3 dec or cmp push ljmp addr16 mov dec in jle lret iret pop flds ret push jbe lahf push sbb pop shll fdivrp enter jo mov pop lods xchg xchg arpl inc das or cmp cli movl mov out test sbbb popa test cmpb mov push dec arpl js scas and aaa int mov test shll adc inc adc addb xor cmp and std test fiadd andb cli xlat xchg lock sub jo cmpsl dec outsl ret mov or andl inc (bad) enter subb jle cmpb rolb or ljmp (bad) nop adc fsubs jmp jge dec lods (bad) loopne addr16 sarl adc mov sub adc pop mov (bad) mov fcomps cwtl mov add jae sbb inc sub dec cld jp mov and mov test popf gs xchg and sub ljmp mov (bad) cmp xor psadbw fistpl fwait imul (bad) stc cs sub push mov lods mov xchg mov cmp sbb mov xorl xchg subb inc cmp xchg fs test lcall xchg popf ja bound fwait pop push hlt xchg mov mov mov aam ret test lret or add mov sub fiadd dec adc fisubl pop mov mov push js mov add out js test out ljmp xchg mov sub rclb imul push rcrb insl in inc mov inc push out rcr sub inc ret std cmp mov add lcall cmp (bad) dec enter jge scas gs lret jecxz sbb scas push mov jb adc cld cli stc out sti jno sbb lahf xchg push lods dec rol jo or cmp mov cmp nop or (bad) adc cs (bad) jmp mov insb jbe dec or mov push mov movsl inc arpl sbb adc dec cs out sbb imul sub clc lcall dec push sub push mov orl fsubs pop icebp test xor sub inc jae push fcompl pop repz adc inc or or mov xchg shrb pop push fsubrs sbb insl cmp xchg insl adc mov push inc mov xor shrb xchg xlat test (bad) inc lret ret (bad) subb negb incb mov (bad) dec loope jb add dec insb je add lea movb test arpl push add mov lock pop mov (bad) mov inc mov lods ds cli addl fsubs aas (bad) stos test sbb test add fisubrl inc add xchg push jnp pop cmp int pop lods jno xchg leave sub nop dec jmp adcl and add jmp inc sbb leave insb mov cmp adc add aaa int3 mov pop add cmp mov push cmpsl out andb mov ficompl les in xorb xchg jne faddl dec roll pushf push mov mov rorb imul or aaa rorl enter inc sub mov mov push popa lret (bad) daa pushl std jl rolb les bound mov jp in xlat test popa imull (bad) mov jo push stos cmp add iret xor mov push xchg inc ljmp scas ds xor sahf shll cmp aas popa sub ret xor adc or test dec test les mov push ds jns ja test test sbb fisubl mov popf xlat sbb jmp add xchg call pusha shlb fsubr fild jg pop test (bad) mov dec cmpb loop push addr16 mov xor lret mov jg xchg sub orb imul pop fsubr sbb mov fiadd orb mov adc leave das orb add cmpsl add iret pusha jl or mov mov and enter lock sub sbb jecxz ret fwait and shl sahf xchg in xchg xchg fstpt inc mov mov sub cmpl addl xor sbb adc insb mov mov and leave outsb nop sbb (bad) mov popf inc inc test adcb and xor cmpsb sub xchg repz cmpsb ficompl sahf out (bad) ficompl cmpsl jge jo test addb (bad) lds inc fist mov nop mov rolb jg jo jmp pop lods dec jmp or mov sub xlat sbb mov or inc mov orb (bad) cmp jge pushf pop mov rcr sbb movsl mov inc xchg outsb loope and shr pop fs xorb es loope xor mov sub loopne add jg xchg test out imul rcl clc xor fdivrs jge (bad) cmp int scas clc dec jmp mov xchg adc or pop adc sbb sub inc push sbb iret xor nop push mov mov and cmp int3 fisttp push mov inc or rep push movb cmp xlat or scas push repnz jp dec fdivl or addr16 ret dec std mov popa jmp rcrb jmp ret sarl dec push xor xchg xorb cs sbb decl pop pushf cmpsb in and push mov jb pop nop adc pop ljmp adc test outsl mov jmp mov and dec fdivs cmp int out test cmc arpl mov inc push repnz adc test out mov cli fwait push mov sbbb movsl rolb call dec lods xor and xchg addr16 cmp in jbe xchg loope xchg shrl bound jge or fwait xor shrb sub mov xor andb inc aas cmpb mov cmpsl mov cwtl or lock push pusha insl nop or imul adc scas lods dec orb loop push mov fcomps pop sub inc inc xor (bad) sbb push push lock xchg xorb add mov dec pop cmpb imul imul mov lock xchg data16 xorl lods sbb xchg aam and dec cmp nop add dec aaa loope std and and sub add cmp incb xchg mov pop adc cwtl std mov push jb sub repz std push mov add cwtl pop mov sbb (bad) clc xchg ret push xor (bad) aas adcb sub sbb push movsb mov cwtl inc out inc jecxz mov sbbb push push inc outsl jl sbb push jb push mov cmpl adc mov xor nop outsb insl mov xorl jle mov (bad) push ja adc and xor fbld push mov test mov push inc or cmpsb lds pop xor fisubr cmpsl test jle gs xlat sbb mov imul add lods insb test mov adcb mov mov jg roll in push fidivl mov out adc xlat rclb in (bad) lea cltd ret ja xor rorb iret jmp test mov xchg mov and lods rclb mov xchg push jl stc dec jb jg stos aas mov enter je cltd fidivl adc (bad) ja in mov addl rcl into xchg pop sub mov add mov fmul cld lahf scas repnz adc push mov ret mov iret aaa in xlat lea outsl test test scas pusha ja pop int3 xlat adc xchg jle jmp cmp mov push addr16 sbb ret sar or clc cli inc es (bad) jne popl (bad) mov mov sarb inc enter add es into cwtl ret push cli dec fwait gs inc mov ret enter dec arpl lahf (bad) jle test cs push lret or repnz aad xchg ljmp add inc xor sub divb das nop (bad) sub jo push loope dec fldcw pop adc inc (bad) dec and xor mov loop inc pop dec pop or sub inc out push aaa lock movsb insl daa mov inc xor dec call sbb in (bad) cmp scas jbe pop adc add xchg (bad) cli gs aas add adc cmp jae sub test call orl mov and pushf ds out frndint daa xor outsb pushf (bad) icebp mov mov mov add in ss jmp test ss xchg aad iret jbe adc rolb out insl (bad) fdivs cmp (bad) loop mov mov (bad) xor or sbb (bad) jg mov xchg pop out sbb mov int mov out js stos mov add nop pop nop ror mov inc mov loopne lcall jae push jle in add subb sub cltd pop lock in xorb fcoms xor scas test stc xchg cli in sub icebp inc repnz adcb mov jnp jle out out or sbbb (bad) dec push add arpl lret adc pushf mov clc mov xchg popf dec mov stc xchg add fldenv dec fs dec mov repnz insl subb mov add mov jae out jmp cmpb cmp pop daa add (bad) out enter nop lock and int3 xor and insl add rcrb push movsb in mov add inc jb addb es mov addr16 test push fisubl xchg push sbb mov add xor dec jl dec mov pop xchg sarl pop mov (bad) push mov out in adc fist es popf scas dec mov shrb std add sarl repnz xor xchg stc cmp xor xchg pop add xchg data16 in mov jo push test int pop push rcl std das dec in cwtl ret or out xchg (bad) cwtl xchg jp mull repnz enter dec dec aam push cwtl mov or sar jp cmp push mov inc mov stos insb mov jmp out and jne push or sahf xor jmp aad mov cltd pusha jle fistl dec cmpsl jo popf outsl push lea ljmp xchg test mov fwait mov mov (bad) insb loop cmp test lds mov cs loope cmpb xorl sarl or fwait cmpl cmp mov adc and ss sbb in and subb inc test ficoml je xchg out lods dec jns fwait leave ret lds adcl sub or (bad) test push mov mov dec mov lcall mov pop stc call arpl test cmpsl jnp xor sub rolb fcom adc xchg cmpsb push cmc (bad) add mov incb pop andb adc rol cld mov icebp push xchg sub je dec scas mov jecxz xor nop lcall sbb clc xor pushf ret movsb fsts mov jl push test addr16 pushf aas adc inc out mov fimull mov cmp xchg xchg aam fdivs mov addl aaa sub dec inc xor pop xor mov jns or adc subb call outsl mov inc mov aam adc in test dec clc addl je and xchg roll jle xchg push xchg pusha push jle shlb sub rcl (bad) mov sub dec sbb test pop iret xchg pop push fisubrl (bad) mov xor push call or sti xchg in add sti jns cmpsl mov dec push in mov or xor xchg adc pop iret push inc mov adc sahf jb outsl add aam int pop insl (bad) push inc jae (bad) js test sub fildl fs and cmp cmovl inc cmc loope ret loopne mov lock mov sbb gs das dec rcll add jmp mov or cmpl sub stc add (bad) mov mov in xchg mov push cli nop (bad) leave push add das das or icebp add add ret rcrb adc test cmp pop pop push inc inc imul js mov cmp fildll orb mov sbb mov les (bad) pop cmp mov or cmp loope add (bad) pop out loope in add dec push outsb test xor jge dec cmp mov xchg lcall ja xchg in pop inc mov sbb cmp push dec add inc or test iret xor sbb js lahf enter mov xor outsb push xor adc inc pop movsb xor ja (bad) popa jle movsl sub (bad) (bad) (bad) jge mov clc or xor out and test add and lcall lods cld adc inc xchg pushf shlb jecxz loope clc test loop push test dec mov add sub adc xlat adc rcr xchg add loope insb dec xchg (bad) jge into pop insl xchg or das xor test sub cli test scas and jno sub (bad) ror jnp or testb dec arpl rorb popa fcmovnb mov add inc lods sbb mov nop in mov cmp adc fild add rolb lcall inc enter and mov sahf cmp add jo test push scas mov cwtl mov pop xor (bad) cld xchg adc cmpl cltd add sti rorb fcompl jns bound (bad) mov mov xchg xchg bound and test lods push xor pushf pop xchg movsl dec stos and inc pop nop jg xchg out lods cmp leave fidivl data16 adc push call pop pop xor inc stc test cltd pop fiadd pop fsubrl inc sbbb push fisttp cmp daa scas jae cwtl mov shlb mov pop inc mov data16 in in mov mov or fildll test xchg cmpsl scas fistl dec stos bound cld and xor (bad) xchg cmp imul sbb mov stos outsl sti or pop or cld jnp push jmp test sbb fnsave dec or popa scas push test mov cmpsl jmp pushf inc mov jle mov dec loop sbbb call ds or cmpsb push fwait mov test icebp stos testl mov cmp inc test xchg insl ja orb or icebp imul int test inc mov add dec popf mov mov or cmp jo sub and lret pop jmp mov xchg cwtl roll mov add (bad) ss sbb push or xor jmp mov lahf mov mov aaa pusha subb sub andb rcrl and or repz mov cs call mov push dec movsb mov mov xchg jns call mov fiadd add jno test mov push adc dec mov cmp mov sbb jg jle sub inc sub add fdivs pop lcall pop and xchg jp dec int dec test dec push scas pop (bad) out outsb mov lea repnz cmp sub mov dec pushf lcall lds stc adc sbbb lret jg or fcomi (bad) scas fsubr daa fistp inc ret scas sub xchg insl iret dec test sub (bad) xor dec push push inc aam push adc jmp popa and (bad) mov sbb test adc push push and jge xor ficoml mov push cmp daa movb iret add xchg add inc repnz xor sub je insb shll rcrb (bad) xor das pushf pushf mov popa cmpb (bad) jg xchg dec adc call pop mov push cmpsb stos subl mov das out je lahf mov sub xchg jmp mov adc out mov je test sti add cmpsb cli adc and add rolb jmp int lock xor ret subb mov jae psrld xchg pop mov (bad) stc adc xchg xor push sbb xchg lret jg ret dec sub or mov inc xor fstpl mov movb (bad) pop aam les and mov cmp call pop imul adc dec addb add push sbb lods jnp mov mov cltd jb dec cmpb push fdivrl (bad) lret loope mov fmull call enter cmp outsb dec adcb adc mov sub lret xorb fimul sbb (bad) cwtl or sbb cwtl or xchg sbb mov inc stc mov xorb inc lret or cmpsl xchg iret movsb cmc (bad) adc stos (bad) incl jo inc mov dec adcb repz flds push dec out or out cmpsb inc pushf cltd pop lock jns adc add andb mov dec push xchg movsl jo lret lock loopne jo pusha (bad) lret pop inc imul out leave jae ret mov push xchg mov movsb pushf arpl inc hlt cmp js inc inc in sub inc jl stc dec jl (bad) iret push mov push dec mov in mov and das (bad) jno cwtl shll jge mov xor cmp mov jp and jo (bad) mov cmp push (bad) mov dec sbb push xchg cwtl push test gs mov loop sbb mov subb inc xor push cwtl in add inc inc xchg iret mov (bad) pop pop xchg sub adc mov and xorb push ficomp in inc dec stc push sub push mov push (bad) xchg xor or mov incb test mov cld adc mov icebp cs popa pushf movsb and cmp mov subb imul mov fcompl in test es pushw mov aas (bad) fldl mov xorb ficomp (bad) push push sahf lock lock insl adcb cli add test loope stos dec mov mov hlt outsb add jl (bad) lds fmull test adc leave jbe adc xorb stos daa aad (bad) or xorl mov add addb dec lods sub sub outsl nop add popa leave xor int3 cmp (bad) fwait cld sti mov pop ret aaa mov bound sub jo lret cmp cmp sbb leave sub jns les mov repnz mov test das inc lret pop je,pn fmull xchg imul cwtl cmp mov lock mov insl js mov sbb pop pop roll test subl daa and rorl imul test ret cmp inc (bad) inc mov cmpsb leave mov mov dec imul mov roll das shrl inc gs loope arpl sbbb dec xor add xor movsl add lods in int faddp fdivrl cmp jmp inc shr jns scas arpl out add mov adc call sbb adc push fdivr rolb iret push cmp pop dec test aas push movsl add hlt data16 sub cmp subb cld and add aam add (bad) insb or mov iret mov scas imul dec shrl outsl cmp dec pusha sar and enter and test and iret cmp pop inc outsb bound (bad) dec sub test ss popa mov lahf pop adc sbb and jp dec ret push xor (bad) jne movsb add add mov bound icebp xchg pusha mov and fmull fldenv stc xorb ljmp movsb adc bound mov sbb pop mov dec mov ret or mov xlat mov clc jge mov ror sti aam into push cmpsb cmp and cmp add out testb sti and test aaa lahf lods add jo lret xchg add fs into xorb xchg adc ficomp and ret mov mov lahf xlat xchg push jg bound inc mov xchg fwait inc xchg pop mov in jl enter cmp test inc xchg mov repnz out aad mov mov insl ja cwtl and inc jmp jp jne xchg cmpsl pop or push mov mull sar and sbb out cmpb mov subl out jo adc mov inc and je push pop mov pop adc orl jnp nop push lds xchg pusha sahf inc jo mov fs mov push jg fsubs je das mov stos sub insb xchg nop mov jecxz xchg ljmp cmp pusha xchg lahf enter sub stos outsb push test (bad) fiadd jmp icebp sbbb push loopne mov mov sbb je popl sbbb lret xor fs mov je cwtl cltd push scas push fmuls (bad) aaa lret cli fcoml fisttp xor std stc clc cmpsb inc adc enter jge lea cmp dec bound mov fsubrl iret nop outsb mov mov lea outsl push sbb subb int push push fstps mov or mov jle lret inc dec mov ljmp adc fdivrl xor dec stos repnz test movsb push and fbld jno mov xchg xor orb cmc nop jae lret ljmp jmp andb cmpb in or push es shrl test mov out xor mov test fstpl jae cmc mov les adc outsb add incb jns fwait popa pushf out xor les sbb test pop mov jmp cmp xchg dec shrl push or loope push push nop pop mov push fsubrl xchg bound mov lret (bad) cwtl cmc mov adc jl add mov movsl push out pop out imul (bad) or pop jecxz scas jns scas sbb dec jo inc mov nop enter cmpl lock cmpb outsb aam or sub xchg ret andb xor xchg data16 int xchg cmp dec cmpsb incl gs push cltd out cmp or (bad) cltd xor das pop mov in cld loopne add mov outsb nop out mov ret sub mov ja mov in iret inc jb in jle in mov sarl and fs mov test (bad) cld les cltd jbe push jb and js sbb sbbl pop (bad) clc xor test mov xchg mov cmp lea loop sahf (bad) fistl cmp push stc ficomp inc imul add loope jmp sub outsl mov mov movsl inc cmpb cltd and jmp inc rcrl adc push cmpsb sarl add sarl test push lods jb xchg cltd lods jg (bad) or das push mov mov push into push test arpl outsl cltd sbbb inc lret sub in enter jl push movd inc adcl mov divb ja fdivrs sub jge sbb and mov xchg mov rolb rep dec cmp mov test (bad) pusha scas adc pop (bad) cwtl jne dec rcrb adc xchg mov (bad) jge mov ja jge xchg sbb call stc add mul icebp in jnp subb lock dec jbe subb cmpsb push and jnp enter mov out push cs sub (bad) mov dec andb dec sbb pop inc scas (bad) jbe xchg or sub sub mov or cmpsl pop sti fdivr sub xor cmc out pop lahf icebp jge sarb xlat xor in sahf pop js xorb rol movsl xchg jns cmp cmp std cwtl leave int cmpsb mov les mov aad push sbb cwtl fsubrs enter repnz aad test or popf push add insb movsb pop sub sub ljmp lock nop add add lcall or cmpsb pop out sbb xlat dec xlat push loope insb out cmp and int3 cli mov xlat orb addr16 xor lds inc je push xor inc mov je in jbe mov outsl in and xor jno (bad) adc nop ljmp adc cmp lea mov sar mov aam loope stos push add cmp mov xor or std inc test subl cmp pop mov or jl movsl push in test fmul inc jecxz ja sbb cmp sahf xchg add test ret loope lret fisubl push and mov push cmp inc outsb sbb xlat mov adc pop sahf mov jmp mov adc jb inc pusha add or outsb movsb insb int3 test test pushf inc add clc cmpsb mov dec ja (bad) jo repz xchg int3 dec fnstenv mov pop add ss mov add add jmp (bad) nop mov inc add mov fwait jbe xchg sbb pushf cmp cmp or cs add (bad) movsl (bad) sti dec idivb std scas mov movsb adc les call aas push mov mov add ffree sbb sub inc mov mov fldenv pop lret jecxz fwait xor mov (bad) icebp enter (bad) pop testb pop incb add jle sub xor movsl dec lods push inc mov and add and test fcmovnbe push aas pushf sub in enter pop xorb mov pop andb jnp scas jmp testl out mov aaa (bad) dec pop or jo mov xor addr16 cmp mov xlat and ret (bad) cmpb mov xor pop das enter xchg ds lods out test xchg cmp cmp pop movsb inc or scas leave xchg inc fdivp push fstps mov sub test orb jae sbb popf enter push adc sub sarl mov in pop cmpb imul mov jge (bad) sbb cmp out test pop sbb jne jno sub xlat cs into or jno cwtl mov bound fcompl test fbld lods inc (bad) jno movsb loope andb mov xchg (bad) xor addr16 adc addb jne,pt into in mov icebp and pop test dec push inc (bad) pop jns stos cmc or lcall aas add decb sub sbbb mov dec xlat les enter push xchg pop clc adcb mov adc lea (bad) mov and xor je test cmpsb xchg push jecxz stos mov in ss test fdivrs or push fwait xorl andb and fistl cmp dec pushf loopne pop jnp add fidivrl lods mov imul sub xchg dec (bad) xor enter loop jmp mov jb mov or (bad) sub mov mov fistl xlat pop or mov push cld lret mov fnstcw or lahf test je daa and push dec stos xor (bad) popa cmp fisttpl fnstsw jbe mov clc imul push enter mov test int3 ss mov mov jbe sub lods jg push xor mov shrb (bad) idivl int pop sbb sub jmp incb clc mov pop test xor mov addb sub or push bound push (bad) xor push aad sahf enter (bad) xchg fcomps jo (bad) sbb test cmc cmp test lcall roll shrl (bad) xor sub enter out jnp lods nop leave sub cld cli mov subb lcall subb dec ljmp movsb push mov cmpsl mov jo addr16 test mov inc add mov lds dec dec scas sbbl sub or jno jb mov lcall inc int rolb or sbbl addl push sub and sub ja and cmpl or ret mov sbbb cmpsb push fildl repz sub sbb mov add mov or fwait pop jecxz mov lret fs cmpsl and popf mov mov adc repnz fcoms sbbb std inc (bad) sbbb add test lods enter ljmp andb xchg scas out sbb mov movswl ret cwtl push mov clc xor out jmp inc inc in inc out (bad) xchg stc std clc push cmp cltd or orb xchg or jl pop nop mov add jb push fldt aad jbe idivb orb lods pop movsl cs subb push out sbb mov aad negl add bnd dec xor aad pop ret (bad) test and mov adcl js mov lea in xchg gs andb sti cli jae mov cmpb sbb cmp in add test inc cmpb aam out mov mov and push mov cmp jmp test aaa jno cmp add sub test and das repnz sbb pop outsl nop movsb test sub adc or mov lcall xchg xor rcrl fistpl mov dec stos dec jl xchg or inc pop scas fimull mov inc jbe add mov mov push jno shrl orl sbb or and popa fistl jno adc out add xlat xor enter idivl enter bound inc mov add loope or xchg jo rolb fdivl pop jae dec jnp or cltd and xor loopnew sub enter xchg xor adc insl insb mov int3 jns mov xchg aad psraw outsl pop xchg outsl lahf scas mov enter movsl outsl adc repz into repnz in in lea int3 lods cmp push mov (bad) xor jp jmp dec ret cld movsb sbb mov les adc in iret jns ret enter lock lods imul out lcall or sbb xor cmpsb sar xchg mov mov mov or nop fdivrl call shlb sarl iret sbb in jle rcl pusha aas push lods sub fistp int3 and jbe and mov sub faddl mov jae mov or in fwait pop leave or (bad) cs cmp cmpl jge cmp stos and xchg insl fcomps movlps notl iret pop push incl mov dec and adc dec adc stc (bad) sbb mov in addr16 add mov xchg gs xchg bound dec pop imul sub movsb sub test imul cmc nop and push cmpsl test fsub adc (bad) loopne pop andb in inc test imull lea xchg enter add mov xlat fiaddl sbb and mov out mov push lods sbb fdivrs sub mov sub idivb mov cmc xchg out xor icebp dec and ficompl add xchg lahf enter jge rorb int xchg mov inc cmpb and and sub out in pop (bad) rol push fdivrs adcb movsb inc in pop repnz sti xchg cld push xor pop jg push lods repnz out sub xchg inc (bad) push inc dec cmpsb fdiv add orb outsb xchg xor xorb dec jecxz adc rcl mov xor mov cs aad subl (bad) push and lods add inc mov or push mov cld incl sbb mov imul cmp shlb out or push fmulp ret cmp push adc sub xchg in ds pmaxsw xchg fisub cmc orb mov ljmp mov out repz repz call addr16 test pop mov orb jecxz dec push vpunpckldq mov xchg popa (bad) add in xchg lock mov nop (bad) mov add mov cmp mov adc jle insl add fidiv fsubrl orl rolb dec enter outsl dec jnp mov xor or lcall add stc inc or fadds mov dec mov out orl or lea sub popf add mov fwait loop hlt cmp add add andb mov subl mov pusha sahf sub add icebp or mov xchg xchg cs lods in addl sbb pop jle stc (bad) push mov mov sub inc mov lea add jmp push lret xorb test adcb add jp inc pop cmpb flds call (bad) sub leave inc ljmp adc cmp mov mov mov mov ret jecxz int mov xchg (bad) xrelease adcb push pop enter sub or add cmp ds mov adcb out and sti push mov inc push cmp mov mov ret sub mov mov push movsb cmc or xor sub ja arpl jbe clc inc (bad) fsub sbb xor lods fcoms mov push mov (bad) rorl ss stos xor adc arpl test hlt lods pop jo xor std inc cmp (bad) pop jnp enter add jae int in pop sar sbb jbe cmp out mov test mov dec jl jo cmpsb fisttpl cwtl xchg in pop push mov sub bound add xchg ret xchg shlw outsl rorl (bad) mov shl push les xchg xchg pop movb mov or jo pop jns xchg or test ds stos int3 adcb sbb cmp xor daa stc ret nop je sbb sahf imul jbe cmp lret aad jge sub sub movsl lcall cmp and (bad) in cmpsl mov ret mov sbb fs xchg rorb into enter xor sub insb mov andl xor insb mov xchg dec cmp mov sbb test sub out test sub (bad) pusha lods pop js fdiv int3 addb lods gs xor mov (bad) xchg xor test xchg add sarl and xor lret push lret (bad) in addl in dec test xchg outsl or xchg dec test mov imul js cmp in push inc out movl xchg cwtl pusha mov xchg sbb (bad) ficomp inc outsl xchg jle loope cmp movsl mov xchg fadds sbb push fcompl (bad) (bad) jbe adcl fsubrp adc scas mov outsl mov gs int3 out adc xchg (bad) cmc push test sub mov cmp outsl push scas cmpl subb rcrl mov nop cli clc xlat sub inc std jae sub jb gs sahf cmpb fs fadds (bad) js aam ret test jo xor adcb enter dec popa scas xchg ret bound push std mov test jbe xor test arpl mov jno dec (bad) lock xor enter fsubr or loop jb jg ljmp out push fsubs sahf adc clc xchg sbb jo jns sti aas and mov ja cwtl adc pop fs mov ja (bad) daa add mov (bad) jo leave xchg loopne std add mov pop lea xchg stc fs popa in xchg test adcb jne add xlat mov sub xchg add adcl jecxz into sbb fwait push fisubrl lock xchg xchg mov inc adc mov movsl ljmp addr16 push idivl push mov mov rol inc cs pop cmp enter adc pop inc nop (bad) iret mulb cmp adc inc nop pusha gs (bad) fsubrp xchg adc addb js jmp sub test mov cmc xchg push mov mov in pop bound cmpl and xor inc mov test dec sbb stos movsb dec mov cmp movsb lods jae mov xchg (bad) lods mov pop sahf lahf push dec adcb fwait (bad) call xchg and movsl cltd dec mov fdivr dec xchg xchg sub bound loope inc sbb sub inc or rolb fnop jmp scas dec roll jge in cs andb outsb jns lret mov aas jno jp subb fcoms loopne cs (bad) sub adc sub orb popa xchg addr16 sahf xor pop adc jbe sbb js shlb aam pop outsl xchg and sub lahf inc leave outsb pop mov js jns cmpsb addl popa and cmp scas int mov push js inc mov and xchg pop cltd cwtl bound pop push insb mov mov jge pop test mov out mov sbb scas pop js xlat sub test pop std sahf add inc push sbb js and xor cmp mov push mov add xchg std stc roll xor fistpl aas lds fmul xorl pop mov xrelease daa test cltd (bad) into xor (bad) sub xor push cmpsl xor scas (bad) js inc mov add xchg jl mov mov xchg ret xchg cmp inc push sti das scas in jecxz arpl xchg cmp xchg (bad) or jno adc pmuludq xchg in adc cmc arpl orb jns std pop (bad) repnz inc fstps sub cmc xchg gs es ds loope adc cmpsl push scas fisttp xchg sbb or and sbb jg lahf pop out mov gs stc inc cmp insl jg loop out jne iret outsb inc pusha add inc xor xchg jle stc xchg dec ret fsubrs fmull mov (bad) mov push push xchg inc pushf or faddl pop insl clc (bad) je sti pop cmp jnp loopne xchg mov add in mov enter xchg push daa ja inc jle mov inc iret das push mov insl aas icebp xchg loop aam (bad) mov jne cmpsl jae into popa add adc push aas jne fs sub xchg stc (bad) stos cmc js sub mov mov add stos rcrb xor test iret jo mov or push add clc hlt roll or push out mov cmp ficomp insb aaa outsb fwait sbb add jnp loopne or mov lds push cmpsl call xorb scas sbbl push std add xchg mov pop sbb and test jmp jp loope sbb aas mov (bad) in pusha push outsb jnp mov pop mov xchg sub xchg clc cltd jnp (bad) fcoml jp stos or cmpsb push movsb mov movsl push shlb push mov sub mov mov inc xchg les dec fsubrl ret enter test push andl iret dec xchg test into loope sbb popa xchg adc push pop mov pop fld jl pop cli cmp mov stos dec push push (bad) aam sbbb imulb cmc pop lock cmpsl dec add sbb movsl in mov xchg cld or mov lods xor ss repz xchg fbstp fnstcw cli pop xor adc (bad) (bad) mov enter cmp sbb aaa cli jbe enter popf dec and sub mov bound jge push movsl push xchg scas dec cmpb (bad) push (bad) jbe ficoml call (bad) test sarl cli nop popf sub into rolb mov outsb and sbb pop leave inc loop daa (bad) negb sti push xor push sbb out cmp adc jo xchg ja ss addb (bad) outsb adc pop vxorps push enter stc push mov adc iret aaa aad cmpb loop xchg lods jno mov shlb fmuls icebp xor andl adc and shll and push mov dec fidiv add int3 mov dec mov xchg fcomp push gs outsl enter mov dec push subb push leave xchg es inc cmpb ss cwtl add (bad) enter hlt push scas movsb mov test adc test mov pop (bad) lret cwtl pop faddl add movsb sub int3 push lds sbb test fbld pop scas cmpb fwait pop mov or adc mov (bad) mov jl aad pop sti test lea fwait incb movsl insl mov sarl or aaa sbbb mov inc mov mov sub and mov push jl mov sbb mov adc pusha test cmp mov in sbb loop pop xor enter and mov mov aad movsb mov dec xchg test xchg mov sub jmp mov inc orb fcmovbe sub loope mov das leave xchg lds push add and in mov (bad) cmc or subb movsb jmp cmp insl out sub mov cmpsl test in push insb ss testl lds enter stos xorl push enter and adc push adc out shrb subb subb xchg out cmc call jle arpl andb fdivs ret or or fcmovnbe fisubl add call mov and js inc fild push test sti push sbb fisttp inc pop xchg jnp test insb (bad) xor int3 enter mov pop jmp movb and xor jecxz and cli in daa cmp into mov lcall (bad) dec sub mov add jno jno repnz mov mov xor xchg idivb add jnp cwtl pusha cld inc ret add adc or sti or mov and mov xchg insb jno jae imul out or fprem1 addb sbb inc dec addb ret lret jno movsb jb xor fistl addl call sub subb xchg repnz fldenv mov int sub mov jae adc jle pop pop xor xchg mov cld xlat xorb push gs sahf test pop test cwtl popa sbb cmpl push inc inc xchg or mov paddsb sub pop xor mov dec nop out sbb sbb cmp sub test leave mov das lods dec jmp push call jne jns jmp mov pusha xchg in mov insl roll jnp les and call mov mov jl pop mov pop inc popf bound (bad) (bad) in push stos setno pop rolb (bad) iret push inc or mov movsb pop xlat sub out add cmpsl repnz (bad) jmp loop pop sbbb cmp mov mov pop add pushf ret cmp jnp mov or cld test push dec addb dec sub subb xor or push cwtl sbb jae push jl cmp xor mov cmp cli arpl cmp aad pop cltd popa jmp repnz dec cmp pop lret xchg (bad) mov mov inc roll mov arpl popf sub push push dec test ljmp popf dec sbb in inc mov push clc adc mov jle add cmc gs push sbb test push cmpsb mov in cmpb sbb add movsl push (bad) jno fbstp test je test in mov mov enter int fldenv fnstsw adc call inc test aas lahf and aad scas lods in mov addb out repz xchg xchg nop mov aaa cltd andb and (bad) xor stos sbbb in dec jp mov xor inc mov js pop addb lret arpl mov push sbb or inc loopne xor call cmpsb insb pop mov cld and fdivr nop fst out push movsb jo ret loope scas jb xchg clc or xor cmp inc and stos clc xlat fildl arpl add add jae push cmpsl jae push ss subb popf or subb or sbb pop lcall mov jne sbb cmp decl stos cli mov xchg data16 lods out hlt push or mov mov pop xchg jle cmp push loopne add sbb or jg loope xchg pop fsubr pop cwtl fistp out and cmpsl pop mov and iret lea ds enter roll in xor fbld adc idivb ret sbbb sarb jecxz loopne xchg scas test fstpl subb subb cmc andl adcb mov dec inc sub inc jns cmpb xor sub inc arpl cmp and sbb addl pop mov adc xchg sub jnp inc push sbbb dec mov inc das jmp enter jmp fimul mov inc push add push data16 popa mov push xchg push js ret jge mov loop in mov shlb sub add fildll dec add or xchg cmp int xchg or iret sahf mov xor mov adc std fwait pusha cmp inc pushf addr16 enter insb xchg out adc out sub subb fcoml out lea pop pushf inc push cmpsl adc pop pop pop stc mov loopne pop daa in cmc or push xor adc sbbb scas dec dec mov dec rolb adc dec pop or mov outsb or ja jp rcr dec and mov lods cmp je xor mov jmp sbb dec add pop add cmp (bad) push add testl dec rcrl popa lcall or jecxz imul lea xorl cmp mov pop cwtl pop (bad) das xchg mov cmp cmp stos rorb inc nop nop jnp mov push movsb sub dec cmp xor and fsubs insb int3 test sti push or mov pop pop into xor mov pop test xchg or push inc stc mov sbb jge mov adc xor mov faddl fsub pop lcall inc subl (bad) dec sbb cmp adc movsb (bad) jno pop pop pusha and ret mov int3 imull (bad) clc push ss pop mov fdivl out into mov (bad) das (bad) icebp mov cmp mov cmp push int3 negb ffreep inc jl nop addb fdivrp in and iret shlb cltd sarl sub mov psrlw loopne cmc add dec pop xor test or out mov xchg stos mov lods enter push and ret int3 jl and cmpsb out enter dec and mov (bad) jnp ss xor push nop decl (bad) clc (bad) mov add popf add mov adc push mov lods popa xchg inc jecxz adc pop int sbb or mov (bad) inc (bad) jb pop lsl test (bad) movsb jmp popl lcall mov (bad) ss mov pop cmp lahf fs lcall or clc (bad) movb fcoms popa mov lret fnstcw int3 fs cmp adc loopne enter test iret sub pushf mov and leave add inc out mov or mov and pop xor or cmc xchg mov mov cld loop cmp xchg mov aad dec loop mov fsts pop jo (bad) out ss sbb mov test add dec cmp enter aas sbb aam lods xor mov enter test xchg mov lret dec cmpl movsl and subb xor inc test cmp bound bnd xchg dec icebp dec shr mov test xchg loopne pop testb imulb sbb xchg mov adc mov adcb push push jae addb or std jl loope dec subl xchg arpl jmp lock ret or lret test sarb hlt ret insb mov ret inc mov mov xor and fwait stos push out mov outsl mov int3 (bad) adc test outsl dec jl addb lret ficompl clc pop fwait movsl imul push add cmc cmpsb in aas addr16 jb dec cmp ret data16 enter jnp add and dec add bound xorl jns loop ja mov fistp ds insb mov in or push pushf popf orb repnz jecxz icebp mov imul int3 iret mov xor leave frndint xor mov sbbb push out ret aaa xchg jg cmpsl sbb add iret jo sti xchg mov or sub dec decl rcll loope fcmovu jo add fs adc iret cmp pusha test (bad) clc xlat sbb dec xchg fimul imull mov shl mov jmp test stos inc lea adc out aas movsl hlt cmpl mov sbb cmp pop mov imul pop test sbb repnz xchg mov xlat mov and dec and cltd xchg insl cmp nop cmp xchg ljmp int repnz lock (bad) cwtl inc lods push jle lret iret das mov inc test stc lret push fcmovnb mov cwtl hlt ret mov jb sbb gs cmp test int3 jg mov aam sub loop into sbb mov jmp (bad) sbb adc repnz in faddl je or loopne movl add ret xchg inc iret add sub jb pusha sub add adc insb mov dec and std test addb sub mov jnp push (bad) xor push inc in sbb add lea incb jo test add gs or loop sub add mov test push mov insb add jno or mov fildll leave insl cli cmc and popa push test arpl lds push int3 iret push adc sti ret lret dec adc dec add pop cmp and orl aas out pop (bad) cs mov call lahf rcrl cwtl cltd mov movl sbb jo mov cltd pop imul pushf ret test (bad) cli sub jno gs add mov insb aaa (bad) xchg leave test rclb add and dec jmp subl add stos xor scas adc gs push mov int ret enter ljmp mov adc fisttp adc cmp mov nop jle pop xchg xchg jg cmp inc mov int pop and xchg push add (bad) cmp lea sub cmp dec inc or lds add mov iret or scas enter test mov sub int sbb push jecxz loopne pop adc movsl js ss mov jle rol mov test ficom push scas rorl fcompl jp mov (bad) jge lods and or add test or loopne pop push add or loope or int3 js dec stos sub xor mov and outsb sahf sahf pushf adc sbb imul scas or (bad) adc test (bad) lock ret mov mov test xchg and add mov xor cmp pop cmp nop mov outsb pushf (bad) push sti ljmp push jns mov mov mov (bad) pop jle sub sahf and pop xchg push pop xchg mov jb sbb jno add push icebp movsb xchg mov (bad) push or mov cmpsb dec jge inc push es hlt les outsl mov enter arpl inc or and int3 cmpsb jae js test mov mov imul lock std repnz iret int3 adcl call xlat push aad dec (bad) jp sub aam xlat push sti sub (bad) daa adc inc jns test dec adcb xchg orb mov test mov fs sbbl lret daa push andb mov sub movsb jp call mull outsl mov mov xor jno std andb mov push (bad) add popa dec pop and adc xchg lahf cwtl xchg dec out jp jmp cwtl cmp push add insl insb cmpb inc repnz mov jae xlat aaa icebp sub add inc push or xor cwtl ljmp and pushf in adc adc pop andb lcall push es jl xchg (bad) scas inc imul movsb inc mov call mov repnz push daa arpl xchg mov inc mov movsb clc je push mov andl and lods xchg mov push mov jno ljmp mov test mov stc in xchg mov mov addl add scas mov jp sbb mulb pop xchg subb or out xorb or jbe sbb adc xchg ret xor mov and int nop loop inc add mov es in enter aas adc out mov test cmp aaa jns out insb mov int lea cld arpl addr16 and xor ljmp mov sub mov imul cmpsb inc and adc mov mov mov lock lcall mov mov test les mov addr16 lret mov imul adc shrl (bad) gs movsb add jo lea jbe and outsl mov movsb stos or mov nop test adc xchg repz xor or std jmp lret or mov mov add in dec nop scas push ret repnz incb sub mov addb and sub stos pop nop mov popf xorl sbb cld out (bad) or (bad) xchg jno lret addr16 es lcall jo fwait push popl jns add int3 imul and sbb add cltd addr16 cmp add test mov add lcall and popf mov dec rorb xor test mov arpl push cs cmp or sbbb jb mov std scas lock mov xor and xorl add inc lahf sub (bad) and orb cmp inc jmp cmpsb outsb cld andb push dec xchg leave cmp jp addr16 lods cmp xchg (bad) dec sbb lcall addb xlat sahf orb mov adcb daa int jo adcl movsb xor sbb js pop stos sbbb xchg test clc sub out in into mov mov mov jecxz out cmp jbe sbb dec jl or addb outsl test dec sbb das lahf mov ds jae and jl xchg arpl repnz pop or adcb push leave jb mov (bad) icebp push xor lods adc jge jns xor add pusha sbb gs xor (bad) sahf sarl es sbb add cld andb dec sbb mov shrb lret icebp daa bnd mov push push xchg jmp or nop mov (bad) sahf lret loopne mov test mov aad mov jp pop sub add ror insb jno dec xchg mov andb cmpl pusha xchg clc dec adc mov mov sub popf or (bad) adcb out rcll insb pop mov cli das sahf sub lcall cmp mov xchg mov shll inc idivb or cmp lods adc pop subb inc movsb pusha pop rorb and xorb sub imul sbb sbb cld call testl mov leave or mov js push sub aas cwtl outsb out orb enter mov fincstp jo jle cmpl orb push pop sub in incb clc popf push insb add pop cmpb or push bound arpl addb adc cs shrb dec das scas xchg sbb cmp imul test mov mov xchg nop fnstenv mov roll mov (bad) fimull dec ret sub xchg dec andb mov mov xchg lret sbbb mov bound and test test div lret jb push inc xchg push adc sub lcall dec mov xchg ret jnp push test hlt iret andb incb clc jl outsl dec iret add mov clc orb add mov xor test paddusw xchg sbb xchg icebp xchg cmp jno or add xchg mov mov mov bound fnstenv enter divb dec xlat cmp or loop xchg pop addl test sub loopne mov cmpb inc subl cmpsl test ds aaa mov mov push inc lods mov xor mov (bad) imul scas xor lret xchg cwtl gs or cld (bad) inc pop int int3 sbb jno or repnz call leave cmpsb in sbb mov or iret lsl pusha dec (bad) insl outsl lock pop cmc lods iret xchg mov adc xchg mov xchg sub sbbl (bad) jo mov xor push negb mov rclb repz mov fisubr stos test xchg (bad) sub sub inc and cli daa mov fsubs mov mov sarl mov xor xchg push pop jae xchg fcmovbe cmc adcb imul enter dec icebp (bad) notb sbb mov xchg adc insl and pop nop lods subl or outsb imul mov cmp adcb jmp pushw pusha adcb add shll outsl scas add or adcb leave jnp mov push pushf rcrb cmp test mov push data16 mov test mov arpl fs icebp sub inc mov pusha js pop out clc xchg cmpl popf test and popw roll add jg inc xchg (bad) adc popa aaa jno lret repz aas add xadd mov xorb add pop add roll mull pop scas stos lcall clc repz outsb jno lret mov add add ret subb and bound add mov push sub lcall adc or sarb mov in fadds sub mov ficompl roll aas dec pushf jne add mov xor push nop adc lock inc push test sub mov mov cmp dec clc mov pop xchg push push mov lds testb cmp aad push roll andb fldt imul cmpsl scas popf (bad) pushf cwtl test mov mov sti xchg mov nop in orb mov cmp inc ljmp mov in add enter or xchg jle adc push cmpsl mov push xchg and cmpsl pop add (bad) imulb and pop scas xchg cmp rorb (bad) not jmp cwtl xlat dec xor repnz sbb and lock pushf bound mov xchg adc sbb cmc adc pop (bad) xor cwtl aad in jb arpl dec xor push pop jg mov jp int3 inc (bad) dec pop fistp loope mov test jnp push in test mov int3 xchg jmp adc fiadd jmp repnz add push mov push push fcmovnb ds decb (bad) dec jns aaa jno pop (bad) leave das mov mov bswap xor icebp add in add push and rcll fistpl das scas rorb les movsl mov (bad) popa shrl lods inc rorl jge (bad) or out xor jecxz cmp xor lret add fidivrl pop cmovg xor and xor mov pop and inc incl mov push lea xor cmp cmp pop push aad push dec movb push movsbw movsbl lahf mov movzbw lea movb movl pusha pushf push call movsb icebp scas cltd out ss or lods jecxz out jbe stos xchg push lea gs insl mov mov out cld and cmp lock fnop push sbb and push inc cmp mov ret fildl mov mov data16 fstpl or ds sarl mov xchg sub push or lcall push into adc dec push xchg mov cmp pop test lods sbb addr16 jnp dec push mov jno push push cmp pusha push push mov movl jmp dec sub cwtl cmpsl mov aas fild add inc pop xlat mov dec cltd inc lock mov iret pop cmp jbe inc cltd ficompl repnz (bad) xor sti xor sbb jmp out inc mov out pop mov jno add cmp outsb push repz cmp hlt or aad std loop sub xor push pop jno adc sbb loopne iret xor (bad) shrb jb sahf inc jp mov cltd aas mov imul cmpsb mov scas loop into aaa xchg imul push mov xor pop sti inc jbe cmp pop cmp cmp dec hlt dec shrl lock mov stc lock mov push lock inc leave push and jmp pusha call js (bad) ret sti push outsl push xchg sub dec call xor jg nop jno adc and inc sbb push dec push xchg mov sub popf jbe (bad) jne add mov fidivl into test add sbb sub inc fbld loope dec mov aas das (bad) hlt sub and data16 push lods mov scas pusha ficom inc fucomi sub sbb sbb cmpsb sbb cmp dec insl scas jecxz cli xor or and std jb cmp out ret add push mov inc pop inc movsl inc jge lods add fadds shll rcr push shr scas rorb out inc clc sbb insb adc pop adc cli xchg or test iret lea call mov inc not mov inc mov jmp lea jne call add dec outsl arpl inc jb add and cmp push (bad) mov xchg in adc mov inc push or push push inc cmp imul dec xchg in (bad) fstp push jb jmp andb mov and pushf mov push out das out push in mull cmp or push push sub push jbe fbld sub push fcmovnb jp call call or mov (bad) pop mov rcl sub jle pop xor and add aas pop push imul rcll jns mov out pop add adc inc addl cwtl jge ret add jno adc fs dec lea je stc clc cmp add pusha pusha lea jmp seta pushf pushl popl pop lea pop mov push cwtl pusha lahf movl mov call repz jmp mov movl push movl push pushf lea jmp add clc push adc (bad) stos adc add add adc add add add add add add add push adc add add pop mov add add add add addb add je adc add add jle adc add add stos pop adc add add mov add add add add add or add add add pop adc add add call add add adc add add add add add iret sbb mov sbb add add add cli lahf fcompl cmp add aam push bound sub orl lcall or push xor fsubl cmpsb add dec ss and xor mov jbe sbb lret xchg cmp neg sub js pushf cmpsl popa arpl (bad) arpl cltd xor mov or shrb repnz push leave dec cmp fidiv aaa push out mov fadds fwait (bad) mov fisubr testl nop push popf pop outsl jg fbld icebp sub mov sbb xlat dec sbb sti jo push sub loop addr16 roll gs scas fisttpl std push fcmovb xchg jno mov into test sbb xchg push mov sti insb xor sbb sub push jae loope cwtl mov or xchg push out push bound or lret push dec mov aad inc xchg imul fimul push dec decl lods imul mov movsl gs mov arpl lods rolb out fistpl cmp in mov call inc test ds andb in lret mov cmpsl lahf mulb pop jge jmp xchg cmp and add insb sti mov and (bad) mov lcall cmp push mov mov sub in fcmovb xor (bad) mov gs out mov divb (bad) jnp fidivrl jnp pop lret pop xor jmp push fsubrs add or addr16 loopne stos iret mov jl jecxz push push cld in outsb in xor aas fildl or add mov inc jns push mov ljmp fimull lds pop dec popf jg jbe jb (bad) dec push sbb push add adc inc int3 loope mov pop lock jne xor sbb xchg inc imull sbb add xchg in pop mov movsb mov std arpl ljmp lahf pop int (bad) lock jb repz cli sarb pop iret andb into (bad) push cmpsb mov or es xchg and cmp js sub (bad) out pop jns mov mov dec imul cmc sub les ret cld sub jno into xchg xchg (bad) mov xchg orl dec lcall sub inc mov mov lods call cmp into push lods xor jge mov and rorl or ss mov aam insl (bad) mov test mov sbb pop data16 cs xchg aas add xchg push enter mov das int3 sahf mov pop jno cmc pop std adc mov xor arpl imul daa jae ficomp (bad) loopne sub bound adc lahf xchg and mov cmp popf push xchg cmp js mov imul ret add jns (bad) mov lods (bad) out mov out fadd int3 xor push repnz push call pop push jge xor clc test add add movsl fidivl inc mov pop dec adcl mov lods inc movb cmpsl (bad) jecxz nop push cmp or jo fimull aaa stc xchg push pop and dec mov loopne xor adc or orl lret cmp mov xor aam dec pmullw ret sbb or sbb push js mov scas idivl push inc xchg mov mov repz push out mov pop jnp cmp push add lret or lods xchg xchg (bad) and or fsubrs cli testb stos sahf icebp push mov in cmp inc mov xlat push add xchg mov stos or mov (bad) sbb ss or mov shr (bad) or pop xor inc xor (bad) push sub xor cmp pushf mov cmp cmpsb inc mov cmpsb movsb outsb add add lock fwait push jb daa (bad) sbb mov lea int stos outsl add xlat daa ss stc js lahf rorl adc sahf add lahf test xor add push sub out negl mov jp idivb sub loopne xor in xor cmp sarb test lcall mov mov stos pop add movsb cmp call jno inc ds xor loop xor pop scas mov neg dec js push and push and xor xchg fidivl into or ds fdivrl mov and dec cmc stos xchg lret iret jno,pt xor mov bound lods insb pusha roll cmpsb cmp fwait jl cmpsl and bound cmpsl dec test out push call jns mov dec lds fcomi and mov adc sbb test pop sub scas pop and jmp pop jne loop rcrb mov push movsl lret dec cmp add add ljmp fidivrl cmp push sbb sbb test mov (bad) mov push xchg in jns js es aaa test icebp xor movsl xor cli cs or and cwtl out adc mov inc mov into repnz scas add pop jmp or imul rcl loopne mov mov push scas jmp fsts sbb or loope mov pop divl sub shrl jns out fsubrs or (bad) cmp jbe mov loope ja mov arpl out fstpt data16 shrl mov sti sahf imul push pop out stos push movsb xchg mov sub or gs push and (bad) imul clc lahf pop xchg adc xchg mov iret out adc sub les loop mov lret pop push jbe jp aaa cltd jbe xchg jo mov or mov dec data16 jg jne cmpsb dec sub lods xchg (bad) mov or cmp fnstsw inc cmp stc ljmp cmpsl ss mov mov cld iret fisttpll pop pop cmpsb mov pop vmptrst test iret mov ss or fsubr jnp mov or int3 dec push dec mov cltd fisubr repnz xchg dec jbe mov or mov in hlt mov imul or pop sbb (bad) ss pop or sub push cmp imul jge mov push fidivrl in popa cmp lcall xor ret xchg mov rcll xor lea outsb (bad) ss jns fstp leave jecxz idivb sbb shr stc push adc mov fstl push pop push jp gs push stos loope pop fs or push xchg mov outsb mov in or enter sub movsl pop hlt in inc hlt fildll xchg xchg adc (bad) bts push fsubs repnz insl imul rol cwtl add out jns mov mov hlt popf stc leavew mov xchg xor inc loopne lret xor xorps xchg jb sub scas xor int insl pop icebp es andb pop adc lods iret pop rclb pop clc repnz subl add ret repnz sub (bad) sub fsubs mov lahf adc lahf adc cmp movsl cmp stos fbstp jne adc sahf dec push xchg xor mov inc cmpsl (bad) or ror adc xchg xchg or fmul mov mov pop ja lahf adc icebp jl sbb test push mov nop mov sarb outsl jmp xor xor inc fsub js pushf and inc out rolb sti mov out fstpl emms fs jbe cld (bad) loop xorl or jns ret test (bad) mov stos inc scas out inc add or adc or mov iret add mov div insl aam adc cs mov dec cmc addb sub inc (bad) movsb and lds push aam pushf mov jnp sbb call repz test mov ret sbb and inc jecxz mov or imul lods mov lods lret stos pop jne lret dec mov in sbb or cmpsd adc adc and pushf es pushf xor ds dec sub in aas data16 mov mov aaa mov push stc cltd jmp loop cmp mov add xchg mov mov push mov cld sub movsl add inc and xchg mov (bad) pop inc fs fs add out gs xchg out jns jno insb xor pop enter pop sbb leave jl out addr16 repz cmpsb jmp fs (bad) ss mov jge sahf xchg test movsb gs popf xlat mov sbb cmp imul adc push in ret lock mov or sbb xchg adc xor leave stc push (bad) call and movsl dec xchg dec inc fndisi(8087 sbb inc orl or xchg mov and mov lock loop push push (bad) sbb or xor cmp add push lcall add fdivrs dec (bad) cmp incl (bad) lds out out mov lods cmp ret insb orb push add mov std adc xor sahf test scas in push pop xor js push loope jle pushf test mov jns ds mov stos xchg (bad) jp (bad) jbe subl dec jns cli pop pop xor dec push xchg xchg pop int3 jne push xchg (bad) repz lds lock out xchg (bad) faddl mov cmp add ficomp push adc inc and test xchg (bad) jbe lret push aaa jg mov mov xchg push mov lahf pop ret dec mov cmc lds in sti or push ja sbb and in mov add stos mov es mov add mov movsl inc lret pop jl jb decl and sbbl add scas jp push shl jmp mov xchg les or (bad) xchg push xor cmp test test sbb inc cmpsl aas pop push mov lea rcll (bad) dec cmp fidivr pop inc ja (bad) mov push dec mov mov aaa sub int3 xchg data16 xchg cmc push lock enter rorl test pop pop arpl jnp (bad) jmp (bad) cltd test ret pop movsb fwait sub movsl sub xor in test cs mov jl xor pop jns add mov sbb imul outsl es fs pop pop mov ss dec in cmpsb jnp jl dec sbb pusha enter and mov nop sub ljmp jge sahf pop mov sti jb cli cmpsl and and xor inc add xorl int movsb mov pop rorl inc out ficom pop mov sbb icebp adc cmp lods add popf and inc xchg cmp dec fdivr adc or pushf leave xor lods add push mov mov outsb and or bound sbb sahf cmc push cmpsb jbe icebp loop daa popf mov xchg mov jg rcr push adc sbb mov pop cmp shrl jge rclb test and push (bad) mov insb push (bad) mov rclb jne sub mov cld cli in jmp insb iret adc sbb sbb insl and add push jle rcll and bswap mov xchg (bad) cli jle roll adc push pop xchg sub pop pusha jp out popf mov comiss add add leave cmc mov xchg pop jmp cwtl test das inc add iret cmp dec sub shrl mov pop ret fsub pop aas arpl stos sbb mov ds jno pop jo je add gs ret arpl movsb fucomi xor xchg repnz (bad) cli and (bad) push mov or inc add jae mov sub xchg addr16 jae lret jns fldl aaa into lods pop in sub (bad) jl xor mov lds sti into xor lahf fildl outsl ljmp jno icebp (bad) or pop (bad) xor or arpl cmp push sti adc movsb jnp pop scas outsl xor sub pop cmp inc xor mov lds xchg sub adc test leave aad jp push stos inc inc cmp nop sub iret decl pop lcall mov les js xchg out les insb sarb (bad) or jno icebp jbe sbb jmp js jp cmpsb sbb imulb out push loope pop sarl cmp and xor dec aad lods hlt stos jmp int mov push jns gs sar jl push dec mov test icebp mov cmp pushf jle mov mov rcrb sbb lret xchg mov xchg dec scas in (bad) jge loopne cli adc and aas cld dec pop mov lods repnz or pop jg pushf outsl mov imul adc in jecxz out and jmp clc or mov xchg stos rolb insb push jo popa jb mov push out lock insl mov xor ja ret test faddl inc jno lock lret pushf mov jmp xchg mov push mov fildl fstl enter aam adc sub cmp sub adc mov lahf aas push icebp cs inc fwait add ja inc test xchg orl xor gs add test xor mov lods ror mov lcall push xor mov inc cmp or js cli sbb push jns (bad) mov pop xor stc xchg aaa adc push sub adc and sub repnz movsl push mov (bad) fimull (bad) cwtl sub cmp dec push inc fldz icebp inc cli or out repnz cli fs sar loop sub adc les mov clc and mov sbb push push fadds inc dec orl ds or sahf mov ffreep in mov mov mov lahf mov jmp mov mov negl iret push movsb scas shl or lds fcoml adc mov addr16 inc cmp popa sbb repnz test (bad) mov rorl je outsb shll loop movq fiaddl cmp sbb pop out clc xchg inc cmp outsb adc push pop mov pusha mov and fninit mov xor mov xor push inc push push loop pop fcmove iret xor nop pushf or sbb dec xor pop or (bad) xlat xor cmp inc cld cmc adc in adc sbb jo adcb mul clc mov (bad) daa ja call mov mov cltd and (bad) cli in sbb pusha aas xchg adc pushf adc pop and and push push push cmp out mov jno xchg dec aad mov int adc mov and dec jbe inc xor arpl outsl lahf jg xchg outsl mov xchg jmp rclb or decb bound cwtl pop pop sarl cmp (bad) or mov out mov push sbb addr16 lret inc mov rcrl pop and aam lods push scas inc ret (bad) sti stos push dec mov mov iret (bad) divl or aaa mov add sbb sti and and inc sti stc or cmc push cmp in out icebp push adc jmp lea and xchg mov (bad) out xor mov xchg lods mov and mov dec xchg aad outsl fwait mov mov xor outsb xor xchg out cs jge inc ret arpl cmpsb jno in outsb and clc test pusha call xchg xor adc xor insl sub pop clc es ret insb mov fistpl xor outsl dec mov ret popf faddp xor fldt imul cmpsb mov lods adc sbb call adcl aam add cmp lahf xor adc fist dec jp push call or pop insb or xchg xor adc loopne in adc mov lcall push stos imul dec mov inc sti push or in mov loope xchg int movsl out stos add push mov mov add xor mov or push adc xor inc xchg jne push lret push stc and in sub roll jnp and xor je icebp add sub imul dec jbe jnp rorl jp std and aas fbld aas jmp sbb jge imul push in stos (bad) pop sub fs and js pop dec std dec sbb cmp fbstp jne (bad) sbb loop popf push mov sub insb xchg jg mov cmc mov test and pop jmp lahf mov or mov lea je not lea pushf pop movzbw pusha movzwl mov lea lea not mov pushf pusha lea call jmp psubw inc ret dec inc xchg inc dec adc push insb push sub jle rcrb cmp xlat movl je jae jl nop jg push jmp pop inc fcomp push add dec dec (bad) sub or out cmp (bad) (bad) dec xor insb push lahf lahf mov inc push je sbbl or xor pop jmp add mov cmp clc call bound mov (bad) loopne movsb sbb push sub and jno sub jns popa jge add aam ret and fucom repnz xchg outsb (bad) in lret ret addb je test pop and add or inc cmp addr16 ss pop ja xchg or and insb mov inc gs xlat mov lahf data16 in sbb mov insb sbb or xorl xor xchg in mov inc sbb out adc mov ds xchg dec mov ljmp push cmc jmp pushf movl pusha call cmp scas (bad) jecxz mov add inc sub fisub jnp cmp sub cmp js pop mov jo test leave or cmp and scas pushf bound test xchg aas jg mov lods adc mov jp push xchg add or dec imull jns aaa in pop xchg mov jb mov pop cmp into xor icebp inc call faddl mov leave and mov dec cmc inc (bad) cmp dec nop jb shrb pop jmp push push dec jo mov cmp inc pop scas xor arpl cld dec mov sarl jecxz leave sbb mov pop push dec pusha pop daa cmp data16 sahf ds std dec lret (bad) rcll pusha out push adc cmc stos push idivb xchg jmp jbe stos gs or addr16 and test or inc out loope jecxz les xchg (bad) fxch adc sbb repnz pop (bad) pop xchg lea jnp hlt xbegin inc mov sbb and push mov jb mov fisttp fwait clc sub cmpsb cmp pop sbb adcl rolb push fild inc (bad) dec aas bound sub out dec xor pop ret movsl jns outsb fistp test dec pop jno call cli out cmp fsubr or aad daa sbb cmp ret sbb in aaa inc sbb or inc xor jns push dec aam (bad) dec xchg mov jo add ret mov xchg pop pop loope mov loopnew jo push xor jmp lret xor dec adc mov mov push test dec mov orl cmpsb pop imul jns rcl xchg jnp and and repz mov or cltd inc pop pop mov rolb fildll sbb and and faddl pop sbb push rep pop mov ja pop cmpsb pop incb inc stos xchg call jp xchg pushf loop adcl adc mov fcmovbe xor and flds sub pop push lret mov pop mov in inc mov or sbb fwait les imul in (bad) or mov mov lahf aas xchg cmp (bad) std loope (bad) cmp in pusha mov and sbb js pop pop ljmp sub xchg stos jg lea jl,pn addr16 lods adc (bad) aas push mov js pop xchg out call push xor or fs dec sahf inc iret jo insl jle out bound sub cmp rcl pop mov fcmovnb xor imul jp lods xchg sub ror mov hlt fisttpl std mov add loopne mov cwtl xor inc push or mov daa lods adc out cmpb daa xor push dec jg xchg jno fcomps aaa (bad) pop mov leave adc xlat mov push inc push dec xor cs insb add add movzwl lea lea mov mov jmp lea ja setbe pop jmp movb movl pushf lea jmp rcrb xchg ljmp sub in jle jle mov sbb xchg or dec lahf dec stc mov test lcall jnp fisttp add (bad) dec (bad) mov push aad or xchg cs push test cs adcl mov int and and cld mov jge or lock jne sbb ljmp out jmp mov xor cmpsb xchg lea push dec and xchg out pop stos mov dec push jo popa jmp mov add scas mov cld push sbb jno in mov inc jge xor adc ds lcall jno xor sbb aad xor ss sbb push imul xlat lods xor push xor pop insl scas dec push pop loop or (bad) push mov cbtw push lea jno in jns xchg in xchg pop cmpsb out xor (bad) adc add das mov mov pop push in repnz lcall push (bad) add movsl fxam dec icebp lods icebp gs cmp ss ja lret mov es or outsl shrb adc dec ret insl add (bad) iret adc scas repz xlat call jg or inc mov xchg lods mov notl xchg test xor or sti sub stc cmp (bad) jecxz cmp aam fildl xor jno in bnd inc out pop inc (bad) cmp jmp mov (bad) mov mov inc leave push loope xchg test mov test stos pop xor mov mov pop mov cs jo test out aas das cmp adc outsb dec xchg andb add rolb hlt dec aad cmp stc cmpsb jbe push repz lcall pop or or movl (bad) mov mov push (bad) pop mov mul mov dec dec push fild xor ret and (bad) xchg or sbb xchg outsb jno jecxz add lea je lea lea push movl mov pushf bswap lea lea pushf pushf xchg not call fldt cmc adc jne push xchg mov push push inc push (bad) dec add bound mov lret fnstenv into dec add sarl xor (bad) mov add pop inc cmp adc add sti or stos aad loope je imull mov xor add (bad) xchg lret xchg (bad) dec fs inc add and xor loope mov push das scas (bad) sbbl cmp adc and pop repz cli lds movsb cli lret repz loopne cmc popa fsubp pop push dec pop jno loop fmuls hlt test or movb pushf lea je push pushf mov call pushf movb lea jne not lea mov push pushl push pushf lea jmp pusha jmp call pop mov mov loope mov cwtl dec dec sti in pop push fucom ffree lods jae imul fbstp adc mov add cmp xchg pop xor sbb stc cmp fwait push shrb sub sbb or or movsl xor sub cmp sarl xor cli imul lods inc lock push fs lea fisubr cmp dec xor mov jae mov sub mov adc inc jle enter addr16 dec das sub jno loope pop lods adc sarl add fwait stc xor jmp seta cmp mov pushf clc cmp repnz movl lea jne pusha movb jmp sti jbe inc mov inc jnp jl pushf cs lock cmp xor test rolb mov push leave or dec sahf pop pop add int repnz (bad) std sub add dec pop mov xor mov aaa addr16 push inc lds lcall lret icebp xor loopne lods xor inc and cmp pushl jmp mov jbe std cmp ret jmp push push cmpsb fyl2x sub add cmp dec js adc xor popf push add in ljmp fldl2e mov xchg push popa xchg mov mov mov into jns fs pop xchg (bad) sbb jns fs rcrl dec xchg mov fwait sub cmpsl mov movsl mov pop pop rolb loope xchg leave fiaddl cltd xchg mov insl dec imul (bad) sbb inc test lods adc or adc xchg dec ljmp jno loopne subl into jno dec mov jg pop ljmp and rcr mov stc es jb (bad) imul mov hlt adc adc cltd mov sarl pushf adc sti jecxz sub lea scas sbb pop ljmp nop stc jmp lods sarb rolb inc sub xchg cmp push jne pop xchg jmp pop push xchg mov leave mov pop push mov xchg lea inc decb aas fistp push xchg sbb (bad) dec dec push sbb imul xchg sub (bad) mov arpl jno ficomp adc mov mov add adc popa mov pushf aad popa mov mov lret test cli and and and out lds sub pop (bad) insl push jo jae sub cmp or push lret xor push fs jg push cs test ja (bad) leave hlt stc popf dec (bad) inc mov jl dec dec fwait (bad) mov add jmp dec pop inc xchg pop rorl inc insb push push sub fistp jl cmpl lea dec lds lods adc jmp jno fidivr (bad) cmc push lea sub jmp mov shrb inc pop test repnz mov ja adc push push mov mov insl adc adcl cli or inc int3 cmp movsl mov lock sub mov imul repz lret mov test mov inc pushf pop mov aam jp (bad) mov pop fstp mov mov movb jmp loope mov adc jo mov clc (bad) xor jmp jb or lcall sbb lahf repz sub imul mov xor xchg mov and adc test sbb cmpl dec mov xor mov pop mov mov imulb inc mov adc push lods rcrl xor cmp out mov sub mov jecxz bound lds cli mov cmpl xlat clc inc dec sarb sbb mov hlt inc sbb pop mov jbe rcrb cmc fs cmp (bad) mov push mov and das sbb stos jns fs pslld pop test cwtl add fcomps mov stos mov cwtl leave call pop pusha icebp inc and aam jmp imul xlat fmuls fs fidiv insb sbbb push pushf jp adc lods add pop jmp pop jmp cli sbb int (bad) cwtl mov mov mov aas push xor xor outsl dec das mov lahf cmp xchg lret push lea sub sbb cmpsl mov cmpsb mov repz imul push movl pusha lea jmp or inc pop mov clc inc or pop inc cmp sub push pop xorb ror adc lods add jb (bad) enter add (bad) mov inc incl aas cmp sar add sub mov lahf add jmp mov in fdivrs sarl sub adc sbbl jnp stos xchg movsb jae xor insl repnz push or insb push xchg push ja imul call mov stos pop in sbb (bad) sbb neg (bad) divl and sbb jne rorb sub mov adc andl mov pop fisttpl adc mov sbb movl call pop rcl pushf mov bt setg cmc add neg movl btr mov movb cmp mov jmp call ss mov in adc mov xchg mov mov rcl or push outsl lock push outsb mov lock cmp jns xchg mov sub mov cmp xor pop lea sub sub cmp and dec shll mov aad sub call jl cwtl mov out jmp ror lods mov mov pop fiaddl shrl leave fldl sub lcall adc push mov (bad) lock pop outsb lret sarl ja adc or jle and dec xchg jnp adc ret mov arpl push sub jns sbb fldl jbe inc adc aad cmp pop das ja (bad) mov mov shl and sub and scas jl and ja mov outsb xchg mov mov inc pop cmpsb cwtl mov out pop fsts jns nop out add pop push lods mov jecxz fwait lods xchg jb jb movb hlt dec push cs xor popa push sub mov dec shrl jmp mov adc mov fcomp out push (bad) ss out jmp or pop mov and ja dec mov (bad) shl mov cmp enter xchg hlt lcall fistp mov idivl xor (bad) enter out daa xor xor imul sub test rclb fldl2t cmpsb adc sub mov (bad) adc mov and jb dec mov add pop mov outsl mov jp mov cmpb jmp cmc popf (bad) push pop xchg sti xor mov sbb cmp cs fs jmp mov jp lea jno (bad) (bad) sti leave sbb in das gs adc cmp push call orl lcall aas pop rcrl and mov int and xchg jb jae jl mov movsb jno fcomps push sub mov insb sub out lret gs insb mov mov jno mov push movsb ficoml out cmpb cs pop insb push mov call cmpsb ja ds outsl add mov xchg insb mov lods adc cmp fs cmpsl (bad) adc fsubr and sar add xchg dec pop (bad) cmp inc push cld arpl xor into movsb (bad) pop cld dec pop mov outsb aaa ds jmp inc or pop rorl out f2xm1 lret sub ljmp inc xchg cwtl xchg nop dec mov mov mov loopne or sbb inc int mov xlat inc dec xchg jmp shrl lds mov popa roll adc pushf and fmull in fiadd push or rorb push addr16 cmp jle movsb sbb cmp pop sbb adc adc jp mov cld cmp (bad) xchg adc adc lds sub push mov adc popf inc push inc pop imul mov fidivl mov push sub jbe mov scas xor fsubrl sub adc adc stos cmc ss xchg test pop xlat mov bound iret test mov scas hlt xchg dec push xchg aaa mov cmc mov add aas cmc (bad) xor dec pop pop xor mov xchg mov fstpt jno push xlat (bad) pop test or xchg lcall pushf fiaddl or call jnp mov push (bad) aad lahf ss add fcomps or jnp ja xor mov ficompl jge adc sbb pusha mov in fadd aam sbb in repz cmp and add xor push adc sub cmc je jbe mov sub std loope repnz cmp push sbb lea andl not pop imull es cmp pop mov inc lds dec pop aaa js cmp xlat not clc push mov push xor faddp xchg push mov mov push clc push fdivrs jbe rcl adc out pushl inc scas das inc pusha jg lds es cmp cmp cmp shl lds add out sbb cwtl mov (bad) pop mov pop rcrb push pop test in jp hlt cmp mov sbb sarl mov int3 mov mov xor cmp shl mov jo cmp std mov sbb inc cltd cmp sbb cmp sbb xlat es sbb cmp add xor mov pop pop inc fisub pop pop xchg or aas fadd sbb dec (bad) std sub add cmp data16 push data16 popf and fsub mov pop (bad) jno out movsl xchg insb push or dec push push jb mov pop jo mov add mov pop pop movsl cli dec push gs dec aaa fistpll mov sbb cmc dec lahf aas cmpsl sbb aam popf inc (bad) ja lods popa mov imull and adc aas push push test jg push jp les (bad) out jg mov lock rorl outsl (bad) mov mov lea ret mov (bad) fildl mov inc (bad) call cld cmp (bad) pop je je mov movl pop aas push push test jecxz scas dec arpl mov xchg mov lret push (bad) cltd dec testl ret jecxz fildl xlat sbb jmp ja sub loope push scas lods shlb jmp sbbb cmp mov fucomi dec xor or jnp data16 mov mov test pop sbb jno rcrl jno test aas push outsl subb cmc adc mov jbe add mov jbe ret pop inc les aad loop xchg gs scas cmp lahf pop ja mov xchg sub xor inc ret loop aas idivl jae (bad) out mov daa xchg movsb mov pop cmc inc or xor push hlt mov dec mov dec in sbb and test xchg les fsub sub xor dec pop xlat (bad) dec testl fbstp jns mov loop (bad) and jbe dec icebp sbb fcmovnb dec shlb pop mov lahf rorb jno rclb or cs xor jnp and ret test out nop mov lods adc mov add rcrl and insb inc ds mov cmc or mov lods leave in inc mov cmp ss pushf mov into lock mov sbb fs mov and adc and fldl xor imul fadd cli push push and aas mov inc int3 xchg dec xchg data16 mov int fcomps inc pop jl push sahf rclb mov mov adc xor in inc loop (bad) pop push xlat insb fistp dec mov sub or pop sub out inc cmp dec pushl out mov xlat aam aad mov out notl int3 fnsave jb imul lock jge pop pop out and jo mov cltd (bad) mov mov fucomp (bad) mov push pop (bad) sbb cwtl ljmp xchg ljmp add inc push ss imul (bad) pop cld dec pop sub or andb mov mov or cmp jo sahf push ret aaa into clc push add das das jo in je movsl fimull sbb adc jl leave int xlat inc sub push stos jbe jmp jmp aad mov xchg outsb shlb xchg xor and (bad) xor push lret out sbbl mov jo sub adc xor and into loop fbstp mov xchg test push sbb mov dec loope scas mov push jmp imul push mov push insb in jno mov out xor shl stos sbb and jae pusha mov pusha jmp subl out movsb addl ja mov fcmovnb fisttpl mov xchg push out aaa inc xor add aam (bad) xchg ret xor das xor es mov inc jo adc jnp es shrb cltd xchg popf loope xchg xchg test lret lea mov dec das xor jg mov aam lods mov mov std loope ljmp sbbb dec jbe jge xchg jno shlb mov pushf rol mov pushf pushl pushf not push call or js dec cs add inc lahf aas pusha pop cmp pop xchg out ror jmp dec jae subl xor or out cmc sub inc cmpl inc xchg hlt dec call daa movb sahf xor (bad) sti movntq out pop cmp xor jo das dec mov jmp pop push sub arpl dec pop jae xor xchg mov out imul xor aas addb dec sub inc lds faddl pop (bad) cwtl out (bad) and sub scas dec pusha jno iret popf repnz mov pushf push pushl pushl ret call mov xchg jnp fcoms in cmp dec jg sbb (bad) jbe test stc dec nop decl adc stos repz daa and adc sbb xchg add add lods mov out jno nop push insb lods enter and push xchg fcomi mov add push sbb fdiv xor daa pop addr16 mov jbe insl icebp add inc insb cmpsl push mov ret ffree push mov mov adc dec adc xchg jbe pop inc fldenv das jno into into roll cmpsl (bad) out add inc das mov pop cmp xchg pop dec (bad) pop ret pop lods xor es (bad) xchg cmpsb clc out push add xchg cltd scas into lods nop rorl push in xchg outsb push dec or (bad) push int stos mov loop xchg push or repnz xchg push ret dec push pop xchg sbb fwait jnp jge cmp adc add pop (bad) sbb mov cmp mov int3 int aas inc or stc es (bad) dec lods pop mov mov pushf add mov lods push lret pop int mov inc cmp insb test repnz insb jmp outsl lock lock mov or mov (bad) sbb dec or addl mov mov add pop add xchg xchg sbb jns lods adc sti dec jl xorl lret push sti (bad) lcall cltd jne push or adc mov push xlat aad fldl sub xor push test jne and (bad) sti out movsl pop nop dec movsb lcall sbb repnz xor add pop int xor imull add and inc and fadds in push push push lea jmp jo jb into mov pop xlat sub jne gs xlat add sub test cmpsl div inc add lret mov rorb stos xor (bad) aas subb nop test ljmp pop mov sub (bad) repz out sbbl ffreep iret inc mov in leave ficompl mov fisttpl outsl nop ret insb lock (bad) push sbb loopne push mov adc sbb jmp push mov iret aas push inc inc add mov mov notb mov and push lret shlb adc mov dec jnp adc add inc hlt in mov jo pop flds movsl stc xchg jp bound jne scas rep iret nop in xchg mov sbb inc and movb fs jmp sub dec ss xor pop fildll jge xor mov stos xchg mov fsubl in data16 push push push daa mov (bad) (bad) inc sahf sbb mov (bad) aam adc rep mov jge scas outsb pop xchg (bad) loope xlat fbld inc jns loop push mov dec (bad) push je fbstp mov xor icebp adc jb add inc enter psllq fisubl int3 jb adc xor fwait or enter push dec push lods movsl fnstenv xor jl or mov pop outsl ss and mov test outsb shlb gs inc mov adc and lret fnsave in jmp mov aaa jle cmc or lea ja push lea je pushf stc pusha stc cmp pusha call cmp pushf pushf lea ja push pusha cmc add add jp bt bt cmc or jmp test pop hlt stos (bad) sbb repnz xor call adc mov std push jmp fnsave cmpsl cmp xchg setb mov dec pop outsl iret adc dec cltd scas mov and test jle inc jl add pusha in insb lods xor jbe mov in cmp push test jnp mov (bad) push pop fs ficompl or int3 cmp cltd add gs sarl test (bad) mov mov mov lret enter scas push movb movb lea jne jmp sub stos push fs xor test movsb mov mov mov (bad) dec push push xor in xchg jg cs mov loopne pop movsl pusha mov sub iret jbe push hlt cli pop clc mov mov test ds pusha hlt xchg inc popf scas sbb sub testl cld sub call jbe daa and cmp xlat daa cmp loop out mov sbb fldl sti sub inc in js and and adc dec ja iret loopne and mov int3 leave xchg sbb sub push dec ret inc fisub ret dec mov xor push dec push xor inc xchg dec pop jno leave mov xchg imul mov cmp imul in (bad) sbb mov dec aad mov jmp shll test test movsl js cmp pop idivl sbbl in mov jne lcall imul sub aaa mov insb fist jbe cli repnz sarl stc push cmpsb ds repnz inc popf fldl cmp mov mov pop (bad) and mov dec jae fdivrs nop outsb lahf pop xchg or sbb xchg dec test lret and pop in jno enter popf inc push pusha inc pushl lea jmp shlb push data16 dec (bad) cwtl test enter popf push out incl push mov nop out mov fmull inc inc jbe mov inc and xchg inc dec cld cmpsb imul xor xchg imul negl inc dec lock rcl or push sbb repnz leave xchg or sub sbb clc add pop and sahf dec bts sahf scas mov cmp add inc call cmp inc mov rolb out mov xchg loope mov mov add push or in sarb xor jae add enter mov sbb (bad) in pop out cwtl pmuludq pushl pushf lea jne add not or shrd xor clc mov or shr bt bt add mov call lea jne lahf cwtl lahf movsbw mov pushf pusha pusha lea jmp dec loopne jae sarl jmp or js test adc into (bad) (bad) or sbb imul stc cmp and stc cmp jae push out push xchg sbb sbb push jmp cmpsl pop xchg push int3 xchg sbbb (bad) (bad) hlt mov jbe fiadd and daa mov and shll ds mov pop xchg xchg cmpb inc jle xchg push nop popa fnstsw xlat jno (bad) imul call pusha pusha lea jne push mov pushf stos pusha push pushl pushf lea jmp inc push jo aam hlt add sub push int3 jp popf (bad) mov cmp jbe push jo testb xchg lea pop insb in lods mov mov decb and mov push lods lahf or test push jno (bad) movsb js ja lret scas adc (bad) daa sbb lds lds leave testb pop dec cmp pop push in lret popa lret mov add mov mov and pusha cmc mov mov out decl popf cmpsb inc inc imul mov push into and push rcl push shrb and das dec mov imul sets pop xchg jnp ret xor mov (bad) xchg daa popa pop std (bad) incb addl adc mov lea je test push add pushf movb lea jmp push movb lea call cmc cmp call xor outsb in mov scas mov pop loope sub outsb or jb lret in cmp outsb jno mov arpl mov sub mov lret mov test mov mov push jmp cli sub cmp adc mov add jecxz xor sub jnp test push mov jle cmp ljmp cmp inc sub dec jl lock insb jge lret xchg xor mov sub movsl pop in rclb test loopne jno mov popa push xchg pop (bad) outsl iret mov test dec xchg mov xchg in (bad) leave test dec jno les lea je bswap movsbw not lea bswap mov push call add sbbb (bad) dec xchg imul je cmp mov aaa test in orl add movsb pop fmull mov cmp outsl push mov jns enter inc cmp cmp pusha movsl or scas pop mov mov dec pop ret sub test cmc jnp fldln2 push lret sub in shll mov dec stc inc std pop mov push xchg jecxz addb add cmp adc arpl js mov push lods rcrl (bad) mov xor fisttpll hlt fwait add cmp js jns bound mov stos scas shl jno ret xor inc xor push inc cmp or add adc flds gs lods (bad) popf cltd in inc pop inc hlt dec pop test test cmpsb adc popf fisubr jnp and pop xor add ja xlat mov jmp cmpb pop enter int xor das (bad) pop jmp es and mov jnp push push call sete lahf pop out nop mov push push out dec mov sbb xchg pop leave popf dec mov (bad) cli adc dec xchg out jo lods pop (bad) sbbb outsb mov or inc and dec outsb adc movb mov push pushl ret pushf movzwl sar movw adc test mov cmp bt add call cmc pushf mov cmc test add ja shl jmp mov lea push lea call pushf pushf movw adc push jmp add add cmp add bound je xchg xor xor xchg mov cwtl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or sbb es cmp inc ss mov ss aaa dec aaa pop aaa popa aaa insl aaa js jge mov xchg aaa cltd aaa sahf aaa stos aaa mov aaa into aaa hlt aaa pop cmp cmp lcall cmp cmp cmp cmp cmp cmp cmp cmp jne xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp fwait cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp test xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp stos cmp sbb lret or ds dec aas ja lret aas sarl add add add test add add pop xor xor xor xor xor xor mov mov loopne or xor jnp xlat xor xor hlt xor xor xor xor jb xlat xor inc ss ss sbb aaa xchg aaa cmpsl aaa inc cmp arpl jne add cmp cmp cmp cmp fstpt lock pop cmp cmp cmp cmp cmp fnstcw xchg ds ds adc inc aas data16 jl mov (bad) aas stc aas add add or add cmp inc xor mov fdivl add xor xor xor xor jnp mov (bad) xor xor xor xor gs xor xor xor xor xor test (bad) xor js cmpsb ss mov fidiv jmp aaa adc inc aaa push aaa data16 fbstp adc and cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp cmp jo jne jp jg test mov mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg (bad) cmp sbb and sub push ds ds ds ds aas pop aas pusha aas popf aas stos aas mov add inc add jl add add xor xor xor xor xor xor stos xor xor adc sbb stc xor xor mov fwait xor xor xor jne mov cmp cmp cmp jg mov stos cmp cmp cmp cmp cmp cmp pop cmp cmpsb cmp cmp cmp cmp cmp cmp cmp addr16 cld aas add add or xor test loop in xor xor xor xor xor xor xor sub jp test mov mov xor jns (bad) xor xor xor xor xor xor xor xor xor xor adc sbb arpl jne xchg stc aaa or sub das cmp sarl scas cmp cmp cmp out cmp xchg ds lods jecxz,pt icebp ds aas add add xor xchg xor xor xor repz xor dec ss test jo xorl aaa (bad) aaa push cmp mov add sbb jb nop cmp cmp cmp cmp cmp cmp push cmp or push arpl push movsl lods ds les lret fdivrs add or adc and aas aas inc aas dec aas push aas xchg mov mov aas sarb add add add add add xor xor mov mov xor xor xor xor xor xor xor xor xor inc xor xor xchg xor xor xor xor xor xor xor xor xor xor xor popa xor sahf xor xor xor xor xor or xor xor xor xor xor xor xor xor xor xor xor xor xor xor addr16 jmp lock xchg cmpsb ss aaa sbb and xor cmpsb aaa lods aaa mov push cmp cmp cmp cmp push cmp cmpb cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp pop cmp cmp cmp mov xlat cmp out cmp adc and sub xor cmp lds cli ds xchg aas mov addb pop add add xor xor je xorl fwait xor xor xor xor xor xor xor xor pop cmp cmp cmp cmp cmp cmp pushf cmp cmp cmp fdivrl mov aas add add add pop xor xor xor xor xor xor insb xor mov xor xor xchg xor adc mov cwtl aaa cmpsb aaa fidivrl add pop cmp cmp test fnstsw arpl cmp cmp cmp cmp jmp add add or sub jp add nop xor xor icebp xor xor xor xor xor xor and xor cmp cmp add add test xor or xor xor jae xchg cmp fdivrs cmp sahf cmp cmpl cmp clc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp les ljmp add add or adc push xor xor xor mov movsl xor xor cmp inc xor pusha xor imul xor xor xor xor gs xor xor xor xor xor ss ss ss ss ss bound imul ss ss mov (bad) ss cs cmp aaa dec aaa push aaa jns fidiv in jmp cmp cmp cmp cmp cmp dec cmp cmp cmp cmp cmp cmp cmp cmp and sub cmp sarb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub cmp int3 ds aas sbb xor ds inc aas jb mov xchg aas mov aas idivl add add sbb add and xor cmpsl xor xor xor xor outsb xor xor xor xor push xor xor xor xor xor scas xor xor call xor xor xor xor push xor mov clc xor add or or adc daa ss imul ss ret aaa pop aaa addr16 mov movsl aaa les jecxz (bad) aaa and cmp dec cmp popa cmp cmp cmp cmp cmp cmp cmp inc cmp pop cmp jb xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc and xor cmp cmp cmp scas cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp mov inc js,pt lods ds aaa aas inc aas dec aas mov aas out aas add add add mov xor mov xor xchg xor xor xor xor xor xorb xor xor xor xor xor xor xor mov ss ss arpl xchg aaa mov aaa and xor cmp cmp jbe cmpb cmp cmp cmp cmp cmp cmp imul cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lahf cmp idivl add or adc push aas mov mov add lock in add pop xor ja mov xor xor xor xor xor xor xor xor xor xor xor xor je lcall xor xor xor xor xor xor xor xor xor xorl mov popf ss ss aaa daa cmp cmp cmp mov cmp (bad) cmp cmp cmp cmp sarb in cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp mov ds cmpsb ds aas sbb and sub inc aas dec aas mov add add movsb add add xor xor xor xor xor repz xor add dec xor xor xor xor xor xor xor xor (bad) xor jge mov add and inc aaa push aaa mov cmp cmp push cmp cmp cmp cmp cmp cmp jae (bad) cmp jecxz idivb mov jecxz,pt or xor inc aas push aas enter hlt aas add add sub add add xor xor add adc push xor xor jb test mov movsb xor xor xor mov ret xor xor xor xor xor xor movsb xor xor xor xor xor xor xor xor xor xor xor pusha xor sahf xor lock xor dec ss arpl jo jne lods ss ss ss ss aaa add aaa cmp lods cmp dec cmp test clc cmp cmp xchg xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and cmp gs mov mov cmp jno scas sarb ds sarb in stc ds aas or sbb xor jbe jg scas aas mov mov and add add xor xor xor xor xor je xchg xchg xor xor pop xor push xor xor xor xor in mov cmp add push cmp mov cmp imul lret cmp cmp cmp cwtl ds aas push aas pop aas insl aas add add add hlt add add ja mov mov xor xor xor xor jnp mov ret xor xor xor xor xor xor xor xor xor xor xor xor xor iret xor std xor pop ss ss fidiv jmp sbb xor dec aaa data16 imul aaa mov iret aaa sti aaa add and cmp push cmp cmp cmp cmp cmp cmp je cwtl cmp cmp cmp cmp cmp cmp cmp stos cmp cmp and pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg cmp dec ds mov aas aaa aas popa aas addr16 fidivrl loope jmp add add xor xor xor push xor mov xchg xor xor xor xor xor xor lcall xor xor xor xor xor xor push xor push xor xor xor xor xor xor xor xor xor xor xor push xor xorb xor xor xor xor xor xor xor xor xor out divl push jge xchg lods ss ss dec aaa bound mov nop aaa mov aaa jmp repnz add cmp push cmp je sahf cmp cmp cmp lea mov cmp cmp cmp xlat cmp cmp cmp cmp jnp cmpl sarb cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp popf cmp xor pop outsl jne,pt lea xchg ds ds int3 loope,pt daa aas jns mov xchg aas stos aas mov mov aas add add add add add adc cmp ja mov xor xor xor xor xor pusha xor outsb xor xorl add sbb and cmp inc xor xor (bad) xor xor xchg nop cmp cmp cmp cmp cli cmp cmp cmp pusha cmp jo mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub xor xchg cmp lret cmp or sbb ss ds ds jl,pt mov ds ds fidivrl loopne cmc add pop aas or adc sbb and sub das aas cmp push aas pop aas imul jle test mov xchg aas xchg aas pushf aas mov aas fstpt in aas add add add dec xor xor xor mov xchg xor xor xor xor xor xor xor xor mov mov xor xor xor xor xor xor xor aaa movsl cmp cmp outsb cmp cmp cmp cmp cmp lret cmp cmp lahf cmp or and insb jg,pt mov ds aas push aas jnp add add add jbe xchg mov cmp dec imul ss push aaa adc cmp cmp cmp mov addb jo add sbb aaa xor dec cmp inc cmp cmp cmp cmp cmp cmp pop cmp mov cmp dec ds ds sarb jecxz repz adc and xor cmp dec aas popa aas addr16 insl aas jae jns (bad) aas mov (bad) aas xchg aas fwait aas mov aas ret aas aad out cld aas add add adc push xor xor xor xor xor xor xor xor xor xor xor cmp dec xor xor xor xor xor jbe pushf xor xor (bad) ss aaa lods aaa mov aaa add adc xor inc cmp cmpsb cmp cmp cmp outsb cmp cmp ds aas pusha aas fs push aas je js jl mov add add or pop xor xor xor xor xor xor nop xor xor xor xor xor xor xor mov popf xor xor xor xor xor xor xor daa xor repz cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cld cmp cmp cmp cmp cmpsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jae xchg sbb inc jnp,pt cmpl fidivrl add sbb daa aas xor inc aas dec aas push aas push aas fstpt add add add or xor xor xor xor xor xor or cmp dec xor xor mov (bad) xor lods xor xor xor xor xor push xor xor xor xor xor xor xor xor ljmp aaa sbb cmp cmp outsb cmp cmp cmp push cmp cmpl adc cmp sarb loope add add add and add and fnsave pop xor xor cmp cmp add add dec add add xor xor xor xor fdivrl sbb jle or push cmp cmp cmp cmp cmp cmp cmp mov aas ret loopne add add out jo je js jl xorb xor xor pop xor xor xor (bad) ss ss cltd aaa mov clc aaa daa cmp cmp cmp insb cmp je js jl cmpb cmp cmp add add xor add add push xor xor xor xor outsl xor xor xor xor xchg aas test add add add add xor ss aaa pop aaa cmc aaa or (bad) cmp ret cmp movsb idivb sbb aas fnstcw add add add pusha add add xor xor xor outsb xor xor xor xor xor insb xor xor mov xor sbb aam xor bound push cmp cmp cmp cmp cmp lret cmp cld ds aas stos aas int3 aas add add add movsb add add xor xor xor xor ret xor xor xor xor xor xor xor xor fdivl xor mov xor adc push ss inc ss bound jo jne mov mov lds fidiv lock cmp aas aaa popa aaa push jb jnp (bad) aaa xchg lea jns push cmp outsl cmp lret cmp in cmp adc popa aas jge mov aas clc aas add add add mov xor xor xor xor xor xor add or adc sbb sbb and dec xor lea xchg xor xor mov cli xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor xchg xor movsb xor sbb xor fnstenv daa cmp cmp cmp ds ds adc inc aas push aas add add add xor xor xor xor loop xor je call aaa sbb in aaa test cmp cmp cmp cmp cmp (bad) cmp cmp pop cmp cmp cmp cmp cmp jbe jl (bad) cmp xchg cmp lods cmp ret cmp loopne in jmp cmc cmp sbb das cmp bound imul add inc add add xor dec xor jb xchg aaa mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ja add add add add add xor xor pusha xor ja mov (bad) xor xor xor pop xor xor xor call xor xor xor xor xor xor xor cmp inc xor mov ss cld ss cmp nop cmp cmp adc push cmp cmp push cmp cmp jnp test xchg cmp cmp cmp push cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp aaa cmp dec cmp pop cmp cmpb add jo add sbb fnsave in lahf xor cmp dec xor xor xor xor xor xor xor xor jno xorl cmp dec ss ss ss ss jl cwtl mov fnsave call aaa pop aaa push aaa pop aaa xorb aaa mov aaa popa cmp sarb lods cmp cmp gs cmp cmp cmp cmp cmp ja,pt mov addb dec add add xor xor xor xor xor xorb xor xor ss ss ss lcall cmp cmp cmp cmpb cmp cmp cmp adc add scas xor xor insb xor add add add mov (bad) xor xor xor xor pop xor jns lods xor xor xor ret xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor fnstenv call xor cld xor push ss ss mov ss fidiv ljmp aaa sbb sub dec aaa pop aaa insl aaa (bad) aaa mov hlt aaa std aaa xchg cmp mov sarb xlat cmp cmp cmp cmp jo mov hlt cmp add add add out inc xor xor xor xor xor xor xor xor xor xor xor xor cmp xorb ss aaa inc cmp hlt cmp cmp cmp cmp cmp mov aas mov mov rolb push xor xor xor inc xor test mov xor xor xor xor xor xor xor xor xor xor xor imul aaa test (bad) aaa out pushl sbb cmp cmp xchg cmp cmp out add sub int3 cmp sub add in (bad) scas xor xor xor xor push cmp pop cmp arpl cmp add add add dec add add xor mov xor dec aaa push aaa pop aaa gs hlt aaa push cmp cmp cmp dec cmp jb test xchg cmp cmp cmp cmp aas stc aas add jo add add das xor xor dec xor push xor xchg xor sub das xor xor xor inc xor xor pop xor xor xor xor xor xor xor xor pop cmp xchg cmp cmp cmp cmp lcall cmp add add add sbb add xor xor xor add add mov add mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter (bad) aaa aam fdivs fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or aam loopne pop cmp cmp cmp cmp pop cmp aas cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push aas pop aas arpl add add nop add add xor xor out cli xor xor xor xor jne xchg xor xor cmc xor xor xor xor xor xor xor xor xor cmp enter stc cmp cmp push cmp std cmp cmp cmp cmp jp mov movsl cmp sbb ds inc aas push aas push jp mov aas out aas add add insb add add xor xor xor xorb xor out adc arpl in xor daa xor push jbe jge xchg cmpsb xor inc cmp push cmp imul xchg jmp cmp cmp cmp cmp cmp cmp cmp cmp add add add add xor jno js jg xchg xchg xor xor sarb xlat aas fidivr in in aas repz cli aas add add add add add xor xor xor xor divl xor mov cmp cmp cmp cmp cmp cmp cmp sbb add sysenter xor xor xor cmp cmp cmp cmp inc add add xor xor xor aaa inc cmp clc cmp cmp ds mov aas push aas data16 mov mov aas (bad) aas fdivrl in cld aas add add adc sbb xor cmp dec xor pop xor xor xor xor pop cmp cmp cmp cmp cmp cmp cmp aas mov add add add enter cmp dec cmp (bad) cmp cmp outsb jg,pt out in jno,pt js sarl aas sarb aam fdivrs fdivrl loopne in call aas add add add test mov xchg cmp or mov add add enter mov aaa daa aaa cmp inc cmp cmp cmp cmpl cmp cmp cmp cmp cmp cmp add add pop add add xor xor test mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jl aad push cmp dec cmp cmp ds aas xchg add add add sbb add out test cmp mov cmp add pop add add xorl pop xor xor xor xor xor mov inc xor xor xor push aaa out aaa hlt aaa xchg cmp cmp cmp cmp cmp cmp cli cmp out push add add xor add daa xor xor xor sahf xor stos xor mov ret xor mov aaa dec aaa add add add push xor xor enter and pusha aaa mov cmp movsl cmp cmp cmp nop cmp cmp cmp cmpl cmp cmp cmp mov sarb pop cmp cmp cmp cmp cmp cmp cmp iret cmp push popf ds sbb pusha aas stos aas jecxz add add les add adc xor push xor pop xor xor xor (bad) xor push xor mov xor push xchg (bad) ss fdivl icebp add or adc sbb es inc aaa dec aaa popa aaa insb aaa xorl mov mov aaa loope in aaa stc aaa add (bad) cmp cmp cmp jo (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and js add mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor adc sbb dec xor fs test nop xor mov cmp cmp cmp cmp cmp cmp cmp cmp add xor add movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor inc add aam add fdivs fdivl loopne in call xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor pop xor js cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb call cmp cld cmp or or adc adc sbb sbb and and sub sub cmp cmp inc ds ds ds ds ds ds je,pt js test mov mov nop ds ds ds sarb ds add add add add sbb and sub xor cmp inc xor push xor pop xor push xor jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add mov cmp add add dec ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in lock ss ss add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb push add add call ss sbb and xor cmp dec ss ss add or add jo je add add add xor xor xor xor xor loopne in in xor adc sbb sub sub xor cmp push xor xor xor xor xor int3 xor xor xor xor xor adc sbb and cmp dec xor xor xor xor lods xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and dec xor fs xchg xor lods xor (bad) xor hlt xor add add or and xor cmp dec ss ss ss ss ss test mov cwtl ss mov les aam fdivs fdivl in cld ss adc and and sub inc aaa push aaa pop aaa push aaa js nop aaa mov aaa mov aaa les enter call aaa or adc adc sbb xor inc cmp pop cmp cmp cmp mov mov movsb cmp cmp cmp cmp cmp cmp or and xor cmp dec cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp inc cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp cwtl cmp in add or sbb cmp pop js,pt cwtl ds ds ds sbb cmp push aas pop aas js cwtl aas mov aas les int3 aas sarb aam fdivrl lock clc aas add add add add xor xor adc sbb sub xor inc xor push xor xor xor xor adc sbb dec xor push xor xor mov xor add or adc and sub inc xor dec xor xor xor xor mov xor xor xor xor xor xor xor adc sbb and sub xor cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor mov aam loopne sbb sub cmp inc ss ss ss test movsb ss (bad) fdivl cld or sub xor push aaa mov mov aaa or adc xor cmp inc cmp cmp test movsb cmp cmp xor dec cmp cmp mov xchg cmp call cmp cmp pop cmp cmp cmp sbb sub cmp inc cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp jo mov cmp call ds and xor push ds jl,pt mov test mov mov and xor inc aas dec aas pusha aas push aas test movsb aas mov sarb fdivrs loopne call and add sbb xor inc xor xor xor mov xor xor xor sbb sub inc xor xor xor mov xor xor xor xor adc xor cmp inc xor xor xor mov xor xor xor xor xor xor xor xor xor nop xor xor add jo cwtl xor test lods xor xor (bad) xor xor xor xor xor xor xor xor xor sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter (bad) aaa loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp clc cmp cmp cmp cmp cmp cmp cmp cmp cmp je js jl cmpb mov mov nop ds mov add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add xor xor enter (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sub pushf xor sbb add les enter sarb aam fdivrs fdivrl loopne in add add add int3 cmp cmp cmp cmpb cmp cmp cmp movsb cmp cmp cmp push cmp cmp cmp or loopne add add add sub dec xor xorl jle int3 xor xor xor xor inc cmp cmp lock add xor xor xor add push add add stos xor xor cmp cmp cmp cmp in add adc add add mov stc xor add sub pop xor xor xor xor or and sbb cltd aaa data16 cmp cmp cmp cmp aas cld aas add push add add arpl out cmp xor ret xor xor aaa stos cmp cmp cmp test add add push add add add cmp push add add add xor and mov repz pop cmp cmp xchg cmp cmp cmp cmp cmp cmpb aas add add add push xor xor aaa iret cmp cmp cmp cmp add add add add test lcall xor je sbb push aaa and inc cmp cmp add add add int3 xor add addb sbb add push xor aaa jp mov sarl add nop push add add add xor stos xor xor loopne cmp lret cmp cmp cmp cmp cmp aas loopne add add add adc and push mov xor xor push xor cli aaa daa cmp data16 cmpl cmp cmp cmp cmp cmp mov aas add add sbb and cmp dec xor xor xor xor and and dec xor xchg xor xor mov mov (bad) xor or xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor dec xor mov xor cmp jo mov nop ss fdivl loop sub aaa mov loope inc cmp cmpsl cmp cmp cmp cmp pop cmp jae mov mov cmp cmp cmp cmp loopne (bad) cmp sarb sarb out add sbb and aas dec aas outsl aas cwtl aas test add rolb faddl add xchg xor xor data16 mov loope out repnz xor xor xor xor jns mov test xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor xor mov ss movsb ss push aaa adc sbb sub cs inc aaa push aaa pop aaa xorl aaa xchg aaa cwtl aaa sahf aaa movsl aaa stos aaa mov mov aaa (bad) aaa fdivl loope out in aaa lock divb sti aaa push cmp cmp cmp dec cmp pop cmp jbe jl mov test cmp cmp inc cmp test mov sti cmp cmp test xchg ds aas add push add add xor xor xor xor ja (bad) xor xor xor sub push xor mov xor xor xor adc xor xor xor xor xor xor popf xor sbb imul (bad) xlat ss xor gs movsb cmp cmp cmp cmp ds aas add push add divl sbb xor cmp inc xor push cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp xchg ds fstpt in es addr16 sti aas add add push add add add xor mov (bad) xor xor xor xor cmc xor xor xor xor xor xor xor xor xor xor xor xor dec xor imul lods xor in pop arpl jl (bad) ss aaa push ret cmp sub inc cmp sarl cmp cmp cmp cmp sub dec cmp imul cmp cmp mov lea sarb add adc sbb sub xor inc ds arpl imul jge lcall ds ds jecxz,pt ljmp aas adc and es push aas push aas push add xor test into xor xor xor sub xor jo (bad) fdivl hlt ss aaa push aaa enter lea lahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc pushf cmp lods cmp sti cmp cmp cmp inc ds ds ds ds ds lods fnstcw add pop add add xor (bad) xor xor sub pop xor mov mov cli xor xor xor xor xor xor xor cmp xor xor xor xor xor xor xor xor xor xor xor xor cltd xor loope in xor pop aaa popf aaa sub dec cmp cmp cmp and add xor xor xor fnsave or sbb xor xor jne jl mov xchg xor call xor js or sub xor xor xor pop ss cmp xchg int3 cmp cmp cmp cmp sahf cmp cmp cmp mov loope repz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp into ds fidivrl loopne out out ds ds add or adc sbb and sub xor aas dec aas push aas pop aas addr16 js lea cltd aas clc aas add pop add add imul add xor popa xor xor xor xor xor xor xor xor xor xor jno mov xor xor xor xor xor xor xor sahf xor pusha cmp jno mov pop cmp cmp cmp cmp cmp ds movsb js,pt jge (bad) aas add add add xor aas xor mov les int3 xor xor xor xor xor xor xor xor xor xor jge mov xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor push pop add add add xor xor xor xor xor xor xor xor xor or les enter add add add call cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp xor cmp inc cmp dec cmp pop ds ds sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add add add add xor or or adc adc sbb sbb and and aam fdivs fdivl lods xor xor xor xor xor xor xor adc sbb xor xor dec xor xor xor xor xor xor xor xor xor xor xor sbb and xor xor cmp inc xor push xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor test mov xor pop ss ss enter add or sub inc aaa dec aaa push aaa enter or sub inc cmp cmp test mov test enter hlt cmp cmp cmp pop cmp insb cmp js jl xchg cmp nop pop add add add add sbb and cmp mov xor or sbb sub dec ss ss ss ss ss aaa add or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les dec cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb sbb and and sub sub xor xor inc cmp pop cmp cmp fdivrl call cmp cld cmp cmp pop aas jl movsb aas les enter add add sub dec xor xor or adc add js jge and add sbb add jle dec ss ss ss aaa mov cmp and add add add xor xor xor xor xor cmp cmp sarb add add or adc add jp xor sub lcall add add xor push cmp cmp cmp cmp jne add add add add int3 xor push ss adc sub xor lahf cmp cmpl pusha or and add sbb (bad) xor xor xor ret cmp add add add add jae pushf aaa pop cmp mov popf cmp cmp js mov in xor sub add xchg xor xor xor xor mov (bad) xor sbb stos cmp cmp cmp add nop or adc add or xor mov aas add add add push xor (bad) xor xor std cmp into cmp add mov add add add xor xor xor xor add or sbb add mov cmp cmp cmp cmpl aas dec aas add or sub add or mov cmp sub cmp sub mov in jb,pt scas aas add add or xor add popa xor xor xor sbb xorb xor xor xor xor xor xor xor mov cmp ds jno,pt add add or adc add jns push clc cmp aas add or and add push xor xor aaa or pop cmp out cmp add adc add add add xor xor xor aaa loope push cmp or and add jecxz pop xor xor cmp cmp cmp dec aas lea add or and add jno fbstp sbb ss cmp nop ds aas xchg aas in add add add add adc jg dec cmp cmp cmp add push or sbb add out fwait aaa mov push cmp dec cmp cmp cmp add add add add xor enter pop test mov pop cmp cmp cmp ja aad add add add add add lds fwait xor jp idivl sbb inc cmp clc add add cmp lret cmp cmp cmp jmp nop or xor add data16 xor xor xor je inc xor pop adc std cmp cmp test cmp cmp mov add add pop xor xor xor xor xor xor cmp add mov add add add xor xor xor mov cmp dec cmp cmp cmp cmp rorb or add out add inc add add xor adc xor xor xor xor cmc xor clc ss cmp cmp cmp cmp bound test in pop cmp cmp cmp cmp or sbb add test aam jge repz imul data16 add add or sbb add jnp (bad) xor xor xor dec ss ss add add ret xor dec ss add or xor add jge pushf aaa cmpsb aaa push cmp cmp cmp cmp in cmp or cmp add pop aas add or adc add movsb xor add or and add pop cmp cmp cmp mov xchg inc aas jne add add add je popf cmp cmp ret add push or sbb add outsb xor cmp fnstsw sbb pusha or sbb add in aaa xor cmp cmp mov pop cmp cmp pop add add add inc xor xor xorl imul stc cmp cmp cmp mov orb sub add fbstp dec xor outsb xor xor xor in dec cmp cmp fdivrl in aas add add add xchg xor xor ds add mov add xchg xor xor xor aaa fwait aaa lods aaa push cmp cmp ds add mov add add add ss cmp push add or and add lds es xor xor cwtl xor ret xor (bad) cmp rorb add add add xor cmp cmp cmp cmp cmp add or and add adc fidivl test sub cmp cmp cmp cmp movsl cmp cmp cmp and add sub gs cmp cmp cmp fstpt sub jl test push aas cltd aas add or and add or ljmp cmp cmp mov cmp cmp add adc add add xor stos xor xor cmp cmp cmp cmp cmp add and add add add add add or sbb add fidivl in xor ss imul aas add add add add adc push push or and add in leave xor popf aaa in aaa cmp cmp ds add add add add xor xor ds fistpll add add add add cli xor pushl cmpl sub add push xor xor ret xor out ds cmp cmp cmp sarl mov sarl add add repz cmp cmp or mov add and pop xor xor mov xor or adc add jle mov xor xor add or adc add ret aaa dec aaa lret cmp add add add xor xor sarb add das cmp add or and add mov xor jo cmpsb aaa daa cmp cmp cmp add add or and add or adc ret xor xor cmp cmp aas out aas add add or adc add ja nop xor cmp add add iret xor xor dec xor add or adc add ds xor xor or sbb add fs xor repz (bad) xor cmp add add add add bound cmp cmp cmp ds aas cwtl aas add add add call cmp cmp add pusha or sbb add aam or jg movsl cmp add add add add into xor xor mov lods cmp cmp cmp add add add push xor xor xor ss dec aaa and cmp cmp add add leave xor xor xor sub push mov add push xor xor icebp xor cmp cmp add add add (bad) aaa pop cmp jbe cmpb cmp cmp pop add or sbb add das xor cmp cmp cmp cmp mov enter lea adc add push ss movsb aaa cmpl loopne add add add xor cld cmp test lock adc add push xor pusha cmp cmp cmp sub add in lahf xor xor insb xor cmp cmp idivb (bad) aas add add or add (bad) xor xor xor xor xor xor xor cmp add and add xor xor xor cmp cmp cmp cmp cmp or add xor mov or push cmp ds pop aas addr16 add add add add movsb xor xor xor cmp cmp inc cmp cmp cmp xor pop aas nop aas add add add add xor js les idivb xchg cmp cmp cmp ds sbb add add add add cmp mov push cmp cmp cmp cmp sub add sub xor push (bad) xor lds or xor cmp cmp xchg cmp or add xor fnstsw ljmp nop or add xor xor aaa jne xchg cmp add add dec xor cmp cmp cmp mov cmp cmp push aas add or add call xor xor aaa hlt aaa add cmp sbb (bad) cmp add or add xor xor xor out adc imul aas aaa xchg aaa add inc ds ds add or add mov xor pop cmp add add or add aaa adc xchg cmp cmp cmp cmp cmp aas hlt aas add add push add add and jnp fnsave (bad) cmp jns add push add add add lea xor xor add add push add add add xor xchg xor js jnp movsl cmp cmp cmp push add add add xor jle fnsave aad and nop aaa adc push cmp insb cmp push add add scas xor xor xor aaa fbstp stc aaa mov add add add add inc xor mov mov or insl cmp pusha push add add fdivs (bad) xor mov cmp aas add add add add add xor xor xor xor xor add lcall add orb sbb add and sahf xor xor xor pop add add add jne jb in mov cmp cmp cmp sbb add test cmp cmp cmp aas add add add xor xchg cmp push aas add push add add add xor add sbb add sahf ss fs ret cmp ds push add add inc xor cmp cmp cmp cmp adc add es cmp cmp add add add xchg xor xor xor xor xor jle out ss push cmp add ltr add add xor cmp cmp cmp ltr add sbb xor pop xor xor add add lldt add add xor xor scas aas add add add add lret aaa idivb push sub push aas popa aas add add add add add and pop xor cmp in cmp add add add add xor xor add add add (bad) xor add add jne inc xor divl mov pop cmp xchg cmp cmp cmp cmp sub push aas xchg aas lds add add add sub gs and aas out add add je lods cmp cmp cmp mov add add jo jns cmp aas add verw add mov xor movsb xor xor xor xor xor xor xor push cmp rorb add add add xor xor hlt xor cmp add add str add mov lock add add mov or xor imul adc sbb add cli xor xor dec cmp add adc add add sub aas aaa cmp push cmp and add add add mov in xor inc aas cmpb xor add add add xor mov aas jns sarl add add add cmc aaa and (bad) cmp pop add add add data16 xlat cmp cmp cmp cmp add add add add add xor xor xor xor xor xor aaa push cmp aas add add add add add xor add add add leave aaa fnstenv mov cmp cmp cmp aas add add add or fdivs mov das cmp cmp add add jno mov cmp cmp adc sbb add pop xor scas xor xor xor add mov jecxz add adc sbb add jmp sub mov xor xchg xor rcl add cmp mov push cmp push xchg shld test rcr push pusha mov bts shrd and mov and btr mov or mov bt call (bad) cmpsl cwtl xchg mov enter shl or dec sbb rcrb cmp lret into and dec sbb xor cmp outsb lock cld and dec xlat into nop outsl faddl add and imul pop add inc jp jge popa pop stos xor out int subl stos mov pop dec xor fwait xor aam add js nop iret test mov sahf pop int jnp (bad) into icebp cmpsb fsubr or fsubr inc arpl mov xor imul mov add cli hlt lahf fsubrl (bad) mov inc mov add (bad) out adc and out mov sub movw lea ja push jmp fild movsb int (bad) (bad) insb sub loop popa fsubrp test bound mov sarb dec je push popf push pop sbb add pop mov cmp mov fadds pop outsl dec jne jno dec ds ljmp xchg mov jecxz sub movsb (bad) mov and movsb jl cmp xlat mov fcompl mov loop (bad) rorb pushf inc repz pop (bad) inc mov push adc pop fwait inc (bad) cmp andb add (bad) (bad) sub jg pop jp hlt or lahf sub push sbb push imul jne push lret dec les das pop and dec xchg in cwtl push cmp in jle ljmp cs mov fiadd dec mov roll std xor fwait mull push and ss ss leave icebp mov mov inc stc (bad) int3 xor aas aad dec cmp inc das das inc or jnp sub pop push lds mov jge (bad) jbe xor cmp mull ror inc fistpl jp push xchg sub jno jns iret movsb fisttpl mov clc clc popfw pusha push pusha inc pushl jmp add dec outsl arpl inc insb insb outsl arpl pushf push movl pushf mov pusha pushf lea jmp stos pop lds jp (bad) jp (bad) movsb sub xchg sub cmpsb out outsl xor sub xchg cld ret insb mov mov imul adc inc push mov mov mov nop mov push pushf jo jne int icebp in cs lret in mov xchg aas cld sub or mov (bad) leave adc xor jae push inc rorl sub jecxz popa popf xchg mov sub push pop jno js (bad) push jmp mov pushf pushf push mov mov jmp cmp jp jns out dec sbb jmp adc push leave imulb fldenv data16 push cwtl mov push push outsb mov xor lods imul or icebp add pop mov loop in or in fs outsl ret mov mov dec pop repnz (bad) add push test movsl (bad) pop out push arpl cmp sbb cmp xor or mov imul out int3 xlat cli (bad) fcomip sbb sti cmpsb sbb fs les push lahf data16 loopne or or jns cmpb inc mov mov rep bound imul ja or pop test rclb fld1 xchg mov leave cmpb scas scas in xchg jnp mov sbb aaa adc hlt sbb out and adc sbbl lea add imul out add call fsub daa jl stos cltd jmp or jno fwait (bad) mov lock mov mov fisub fbstp mov sbb mov jl xor xlat addr16 outsb in jo xchg lds fild in cld ret xchg lods mov pop xor jbe stos dec xchg clc les pusha push mov out in dec outsl cwtl inc js lret dec out mov and adc stos hlt sbb add push out mov xchg sarb out loope sbb adc inc ret or popf aad sub imulb pop leave lods in (bad) hlt sub out xor pop jno sbb lods rolb inc stos adc ds call mov popa hlt pop push stc sub push mov cmp test cmp test mov sahf push loopne xchg xchg xor jno xchg fcmovnb dec rolb ljmp mov es pop jbe cmc pop and test add lods lea jge pushf mov bt rol call sbb pop and data16 inc fidiv adc mov ss leave xchg ljmp push xchg sahf xchg scas sbb inc push mov push or adc sbb adc popf inc adc call push mov dec scas adc mov lds push xlat std rcl mov xchg stos or das (bad) sub in aad fdivs stc cmp mov xlat xlat addl mov jnp lahf fildl mov xchg (bad) faddp mov or mov and or jns mov aam adc xchg dec mov out outsl outsb nop in xchg sub dec inc outsb xor jne mov and pop out adc dec push test xor cli (bad) push sbb scas popa fiadd jae test out push in mov push ljmp adc cmp pop clc cmpsb mov xchg leave jno out pop daa out into icebp gs mov add cs sub popf lret loopne mov arpl mov cs je insl and outsb adc adc cmp movzwl xor and iret das jo nop out daa cwtl lea es dec pop test lcall movsl out outsl push cmpsb cmp test sbb je adc inc pop rorl cmc pop loope int3 adc dec lahf and dec hlt xor lahf (bad) pop out mov popf jbe sub adc push rorb lret rorb cs scas nop add xchg (bad) jg fldcw jae mov xorb xchg jb shrb jp push pop loope push nop je rorb push xor sbb lock (bad) js dec mov out or or repnz push data16 adcl mov cli or cltd lods insl jb ret pushf lock mov mov in add pushf frstor lock add add (bad) sbb (bad) dec movsb fwait add call mov daa mov sub inc mov dec divb shll sub (bad) int3 aam mov bound imul push or sahf mov add mov cmc icebp inc mov (bad) push (bad) mov sarl ret push adcl iret ja jecxz (bad) jno sbb push cmpsb and ret jl nop push int jge or mov ret fsubrl fsubrs or jno pop mov testl dec gs stos mov loopne adc fistpl cwtl btc mov lret rorl adc icebp mov adc subl adc inc pop and shl leave jp pop cmp (bad) xchg or (bad) imul imulb or jle jbe insb call add pop xchg enter pushf adc add xor fwait or mov xor push mov dec adc cmp (bad) js fadd clc pop in mov loop adc inc fcmovu jecxz aaa repnz mov out mov mov sbb cmp stos movsl jns mov frstor xchg jno jb shld mov seta lea pusha pushl call call cmp or push lea jne or pusha mov movl or lea jge je pushf bswap jmp pushf lea call pushf lea jb push pusha pushf mov pushl ret mov mov pop faddl inc push pop inc push scas push addr16 (bad) mov lods xor cmp fsubrl out js test inc pop push jo push cs ss lods sbb jmp pop push mov sub jbe popa mov nop xlat dec insb sbbl es inc out jno inc jecxz out push daa pop test test loopne sbb aaa pop xchg add pop ljmp xchg and mov int3 adc cmp jecxz pop mov pop lods mov mov pop cli outsb icebp xchg mov cmp scas mov loope loop out (bad) mov xor outsl mov pop jo sub clc pushl popl pusha cmp pushf lea ja mov shr sete sub test add pusha cmc mov jmp push pushl popl pushl pushl ret mov lea je cmp jmp mov pusha mov lea call call sub cmp sub cmp xchg dec mov mov dec xchg mov dec ja out (bad) pusha xor shrb mov push add xchg (bad) lret sub out ljmp data16 or roll push dec pop (bad) dec cli test sbb mov insb scas add popa data16 mov call xor outsl inc repz mov pop lcall jge mov jg ret cmc mov fisubl clc mov (bad) xor cmp adc call inc gs mov (bad) jnp scas nop mov push out cmp or push mov jno outsl fwait hlt mov adc int3 mov (bad) xor cmp test call dec mov incb cltd nop into fbld into fwait in jl cltd test dec xchg and cmp push das insb adc mov fstps int3 sbbl hlt sbb aas jge ret mov inc xchg mov mov jns int (bad) jae xchg push into (bad) cmp sub insb dec jo inc mov imul aaa rcrl fstpl sahf pusha imul lahf fisubl repnz add nop iret and push sub jg mov stc lds ror imull jae ret mov sub les outsb cmp push call arpl vrcpss add xchg ret mov aas out cmpsl sbb lock lock mov inc xchg cld ret insb bound gs adc fs sti ret mov cmp sahf and dec ss push test jecxz icebp nop push inc cltd iret popl fnstenv add in mov sbb and mulb (bad) jl int3 sbb pop movsb xchg mov ss cmp hlt fist int3 rclb sub movsb sbb arpl cmpsl dec hlt rorl dec leave xchg push dec mov inc pop inc js sub jnp mov dec jne imul pop jo daa cmp ss mov sbb dec mov insl mov ret inc mov movsbw movsbw pushl popl movb movzbw lahf setg mov cwtl mov movl push pusha lea movzbw lea movb pushl movl push push call adc js fadd or sbb push cmpsl push cmp cmpsl cwtl dec nop xor and sub sub xor (bad) in push sub mov out icebp push xor iret (bad) (bad) stc push int3 and sbb cmc out xor enter xchg cmpl fldt lock jle mov jo aas mov cmc sub pop cmpl inc repz pop and andl imul push call xor pop fdivrs (bad) jno insb sub clc mov mov push cmp jmp and mov xchg or mov inc fcoml hlt sub inc enter cmpb cs inc push mov xchg mov pop jmp pop arpl arpl test jecxz mov test xchg pop fs int3 (bad) andb pop dec rcrb aaa cmc pop sti les and cmp or mov xchg or mov outsb icebp ror and pop add int3 adc and adc cmp mov dec lea and cmp int arpl (bad) cli ret mov (bad) pusha je call mov or jnp inc and cmpsb cli pop cmpsl aaa iret dec fsub scas bswap and sub (bad) sub sbbl xchg pop test pushl sarl ja adcb or jl aam mov and fucomp sbb xchg fildll ljmp je lret das shrl xchg js dec xchg mov sub cwtl mov jno inc cli adc cmpsl clc scas iret sbb sbb gs bound repz add bound xchg jno imul pop mov lock cltd mov mov jne lea mov in iret jmp push leave repnz mov mov inc dec cmpsl sbb or dec lods jae add lds scas jo or adc pop and dec dec push dec jbe cmpsb cmp aas sbbl in adc sub insb rcrb fistl ja fbstp sub rcrb outsl and rcll cmpl rcrl and dec xor fistp mov dec out push loopne icebp xor and je fsubp xlat pop les loop pop push je test adc add mov fsubrs loope push or pop pop movsb mov stos mov mov nop mov in adc mov cs pushf andl lods loop int jmp pushf push xchg or cmp push lea xchg cmpsb pop adcl lahf js xchg test cmp out xlat lock sub mov sbb leave insl adc push in ret (bad) popf (bad) dec jnp mov aam sub and fcoms inc jle (bad) xor aas add stc shrb pop aaa scas adc add or pop into jno jno imul arpl cli lds scas movzwl dec xchg test add dec sahf pop or xchg adc mov adc (bad) sbb ret pop fistp das ljmp pop jge arpl repz push hlt push sbb punpckhbw adc and ja jecxz or mov inc add jge bound in xchg lea mov scas shlb fiaddl scas pop call loope mov cmp adc add and ja fcom push int3 and jo les pop stos sbb adc outsl mov jnp rorb das test pushf jmp mov movl pushf pusha push lea jmp std mov xor mov inc (bad) dec ljmp (bad) sub adc int3 in dec dec fldcw xor pop sbb or out daa jae clc push scas and scas arpl mov xchg pop stos xor adc xor cmp inc cltd push mov sti fild mov pop pop popf popa mov frstor jle dec jmp rcrl sub pop test les inc push les or negb adc jne js imul jno,pn pop pop (bad) cmpl inc mov inc pop outsl jno push add call fldl fist push sbb loop je cmp sahf scas pop and and cmpsl or (bad) imul shll pop sbbb lods push bound cld and pop inc adc cli test jo dec inc js push mov popl cmc sbb inc dec xor sbb (bad) bound push fs push add out stos (bad) push dec loop je inc sbb jno jmp loopne aad (bad) lods nop pop fs cmpsw sbb out lods aad in movsl outsb shl (bad) adc jle push cmp and and daa pop push faddl push outsl xor pop addr16 and xchg rcrb mov neg movw cmc not pusha jmp (bad) jecxz xor lcall and xchg cmp mov add insl lds add in test push popf sarl sub mov sub cmp (bad) insl fmulp xchg mov movsl xchg mov adc sahf push dec gs push aad imulb out mov add push nop das jo pop jecxz daa dec dec aad fisttpl or adc call mov aam aad jb jp push fs ficom adc or fwait addl pusha mov mov mov imul dec iret ljmp pushw jno sbb fs jae movzbw movzbw movzbw mov mov push mov setno or rcr shld mov push xor call movw movl movl pusha mov pushf pushf lea jmp movsl and inc cmp ja shrb lea fildl jnp lret push fistp mov fidivrl es cltd fiaddl sbb inc fbld addl pop cmpsb inc push dec mov or xor inc sbb lcall outsl das and sub jns mov push push es cvtpi2ps stos xor (bad) pop push lods outsb lea jbe add pop pop cmp mov push test xor mov test lret hlt inc std rorl and idivb inc sbb jno mov dec das push aas and xor inc push fstl and out push repz sti add dec (bad) dec das test movsl mov adc lcall nop mov fwait xchg cmpsl addr16 mov push cs mov push sub stc gs cmp inc rclb pop jo data16 call mov out lods fldl xchg out pushf lods mov adc outsl movsb jns jmp xchg leave dec inc jns pop add clc subl push mov out jne push lds rcrl ljmp sbb lock pop out jno fs int3 push out not mov call pusha pusha lea je bswap lea mov pusha mov bswap lea jmp add inc gs outsl fs gs imul add xchg sbb pop and les fs inc add fistpll pusha pop mov cmp adc inc (bad) cmp sbb push lret and sub sbb adcl xchg dec push sub cmpsl inc and xor into mov sti or xor mov cli cmp dec mov (bad) xchg ljmp lea adcb dec je rcrb repnz cwtl cmpsl (bad) test mov pusha incb cld jne mov arpl movsl and mov lahf movl lea not cwtl lahf lea jmp outsl add xor mov mov jne sub pop push mov outsb adc mov add je jno cmp and mov (bad) jno xor aas orb (bad) icebp es cli lods iret aam push add pop ja pop imul dec repnz or pop pusha pushf sub fsubs mov lret and in (bad) xor push xor fdivl push inc sbb cmp nop pop roll or imulb xor popa cs adc cmp movsl fisttp sbb pop (bad) pop sbb cmpsl ja pop mov jmp sub push and pop cltd ror or cwtl or push inc outsb repnz mov adc pusha mov cmp cmpsl insb and aad sbb pop sbb mov mov in push out jne add pushf push sbb xchg cmp rcll lcall imul pop imul fcomip fiaddl mov enter push pop loopne jmp bound mov pop pop (bad) dec (bad) cmc ljmp and add hlt or jno popa mov stos xor ja xchg fsubrs notl je enter dec (bad) mov leave (bad) shll in add jp pop imul test mov mov test fadd aaa or test adcl out cmp cmc adc pop stos xor pusha inc arpl inc push test push leave push fsubl int lcall cltd test jecxz in xchg scas push jb cmpsl (bad) cmp cmp push push mov cmpb aam sbb adc jne adc jg test rcrl out and or mov ss mov sub pusha inc and mov adc or push mov mov pushf outsb nop movsb stos xchg aam add or loopnew fstpl mov and (bad) ss push cli movsl inc add adc sub adc and fistpll pop sub push mov cmp mov repnz pop mov scas xlat fbld lahf adc sti call ds inc cmp push das push popa popf jle mov push data16 dec sub pushf push call imull pop fs pusha xchg clc dec mov pusha mov test jmp movl movw lea jmp scas sbb out xor jo jle das (bad) dec mov sub (bad) dec cmpsb cwtl daa js mov je inc in xchg outsb pop mov out add pop outsl lahf data16 iret and outsb xchg mov xor (bad) (bad) or test out jb sti sub cmpsl imul test mov dec add inc test and (bad) das sub in mov movsb cmp push test xchg (bad) push sub test pop shl rol add mov (bad) sub inc fdivrp fucom insb adc (bad) aaa js daa pop push mov push inc fcoms jle ljmp xchg push insl adc mov jno pop pop mov sbb mov sbb scas repnz aaa cmpsl addr16 mov push es mov push dec movsl pusha imulb dec ret dec jg mov and stos xchg jns mov sub and fimul cld or out push fdiv jmp loope cmpsb mov sub js jnp cmc push mov pop xchg xor sub lods or in mull out pop inc fistpll mov ret sbb aaa outsb nop mov add push fbld push and lahf aam jge xchg inc jb xor mov dec mov sbb out inc mull lret push mov pop mov lock std std mov mov dec dec add shrb push cltd adc lret and pop jl jge dec in cwtl dec dec jmp iret aam push int3 add call xchg cmpsb movl add add xchg push inc movsl and sub imul adc jmp adc stc or lea jne pusha lea je not pushf lea sets mov pushf pusha mov mov lea call xor dec dec adc and mov sbb movsl sbbl sbbl or cwtl xchg test push stc sbb jne jnp mov test push mov add jg xlat cld and dec add sub push fadds pop cmp xor test (bad) jl xchg add adc movsb jns jg,pt pop ss adc movsb sub or add push lods mov xchg (bad) hlt dec push dec es test xor imul mov insl push dec dec jae dec lea pop xchg cmp pushf movl push push lea jmp jae cmp add sbb jnp mov test and inc jp into popa mov and mov mov clc or xchg dec rorl pop cli es mov mov popa mov inc xor push mov lods rcll pusha pop mov inc pop xchg outsl mov push jle leave add cmpsb out outsl cmpsb jae pop add ret call out test pop xlat aam daa push enter stc jg and sub pop pop inc jno jmp fwait inc fadds xlat push or arpl insb add pop push mov out xchg jbe (bad) pop push xchg push fimul lock inc sbb push iret iret lods repz fild xlat jg ja sti inc fsubr and mov pop decl fiaddl daa lods and cmc xchg mov in sbb mov leave lret loopne (bad) insl roll xchg mov xchg out call inc movsl adc out push fmull adc mov jg daa inc cli sub aas insl lahf cmp xchg ljmp bound cmp ucomiss je pop outsb xor pop cwtl sarb jmp xchg addr16 push add dec push mov lods xchg mov jno pop cld xchg gs xchg or lock and add sub sbb jp push sub cmp mov sbb pop adc lret clc or lods push int3 fstp lret push cmpsl or pop shlb cmp int dec shrb pushf jns mov add inc arpl push test dec mov in test ret shrl mov test fnstcw dec loop push nop mov dec pop es loope daa and in or ret fisubrl fild out pop loop shr mov aad mov jge sub (bad) aas push jno pop (bad) lret sarl xchg cmp (bad) push add jns mov (bad) subl dec jnp dec adcl rcrl fsubl sbbl jno fisttpl in and lock movsl push jnp sahf out jbe ret loopne mov jg aaa int3 mov scas aad imul sbb jne mov mov ret dec mov sub ds inc clc and sahf (bad) cmp mov pop clc fdivl mov fadds or xchg adc dec repz mov dec sbb and inc add popa add (bad) or pushf xlat mov lods mov or insb loopne jno dec mov (bad) push or (bad) ss mov add mov int3 movsb mov stos in pop inc enter add (bad) xchg or or or push enter int cmp out nop out mov cmpsl xor xor test in in inc out or int3 adc movsl (bad) inc int push add daa nop inc inc insl (bad) mov loopne out lods push adc test and faddl ret or xor iret iretw add sub out (bad) lods pop sub ret ret ret or call in pop roll ljmp arpl mov and mov sub mov iret xchg xchg mov pop mov repz int3 rorb push and mov cmp xor add xchg mov cmp mov shlb jle test jecxz nop xchg inc ret shll mov mov and jb ret (bad) mov or and sub iret mov popa (bad) sub pop add lea pop mov mov mov imul call mov hlt (bad) mov pop hlt mov movsl and adc sub test dec or add push sbbl gs clc dec add pop loope cmp sbb lods rcrl mov roll mov add lods cmp aad pushf fidivr xor in scas fdivrl dec and jno mov add mov (bad) mov sbb jge mov or lock test bound jecxz rol mov dec hlt pushf adc ret into or inc inc adc popa adc lcall les add adcl (bad) mov dec lret xchg push sbb inc cmp and adc or inc test lods mov inc sub fdivl fisttp scas sub ljmp and add and add leave nop mov lret sbb mov inc rcr mov mov stos pop lea les fcoml int cmp adc inc add mov mov ret mov xor fcoml movsl aas add adc dec or mov inc in xor xor jns xchg add loopne sbb adc call rolb push (bad) pop (bad) push xchg rorb rol push pop sub shl pushf cmpsl dec shlb clts sbb enter roll test sbb cmp fldcw and (bad) mov clc xor hlt movb and push test data16 ja ret notb xor lret mov mov lret jae mov and rcrl ljmp clc pushf loope inc int3 add adc mov add or inc ja jl loopne pop xchg nop rorb mov arpl dec mov lods push scas cltd ret xchg (bad) mov popf mov fsubr mov push repnz dec add pop push mov sbb xor cmc shlb dec add mov or ss clc xchg in data16 stc xlat add sbb cmpsb jecxz out sbb fistp loope in bound in ret mov fnstcw repz les add les or sbb add push mov (bad) movsl aam stos mov or mov push dec mov (bad) mov (bad) add (bad) adc jecxz sub xor adcl mov pop rcll ret inc das aas inc sub mov add mov movsb ret mov test xchg and into popa jb mov mov lods gs sbb lcall inc inc lds sbb pop sti (bad) xchg fsubrp imul mov or jecxz cli mov (bad) (bad) xchg pop movsl pop mov in or inc lods pop loop or popa sub jae cmpsb push loopne sbb mov nop or loopne xchg xchg dec shrb lds es jle sahf and insb out movl pusha aad mov pop lods clc rcrb add fsub sub out faddl and cmc (bad) jne mov rol inc mov imul mov xchg aas pop enter rolb cmpsb mov add ret inc ret push fiadd xor loope sbb jp mov xchg sbb fsubrl ficomp ret insl adcl movsb mov xor (bad) jecxz dec cltd xor mov mov inc mov xor push in lods mov jle mov push sarb xchg and mov add adc and cld lret or jmp adc xchg add inc pop repnz test mov stc push and mov idiv imul cmp (bad) xchg arpl int and cmp rcrl cwtl fmulp test rol jb (bad) movsb into sub xor scas (bad) out sub subl nop clc ss cmp (bad) pop pop into adc pushf iret push or add mov sub jnp push loopne sbb and jno loopne xor or (bad) xchg mov aam sahf jno pop and sbb (bad) enter cmp jnp pop xchg nop or faddl mov ret je mov jbe lahf int3 ret xchg ret cmpsb jge test adc jne rcr mov dec lock test mov sbbl nop add pop (bad) iret pushf sbb inc gs call ret mov lret xchg mov xchg adc call mov xchg mov mov popa (bad) cmpsb fimul inc mov pushf fsts push add js mov movsb mov int (bad) xchg ss sbb xchg push loope cld orl lods xor (bad) fprem1 pop fsts xor in inc jp sub mov add and cwtl out or or fwait adc pop dec add inc mov xchg push jnp (bad) (bad) fadd cmpsl adcl xchg jno cmp xor xchg aam iret adc cmpsb or sub adc scas lcall (bad) mov rcll adc les xchg loope sysret sbb inc add call gs movsb push inc shll mov lock mov mov sti and rcll movsb dec add into cmp lods inc shrl ja mov sub mov rol dec lods aam pop repnz or adc sbb into mov add (bad) jge adc icebp movsl ljmp int mov jecxz mov mov idivl push (bad) outsb test sti lret dec add add sbb lret ret add fiadd ljmp xor fimul cmp xchg rcr fstl test mov mov loop bound push and jb (bad) xor xchg leave fbld mov adc iret xchg or test fs xchg mov enter lret arpl mov loope addl mov adc loope (bad) cmp gs cmpsl add or fwait icebp inc int3 and cmpsl adc clc sbb repnz leave ret (bad) cmpsl and xchg stos out pop loopne fs fmul (bad) xor xchg in mov inc dec push lret inc cwtl add cmp and loope mov adc and and pushf movb mov inc cmp cmp (bad) dec sbb add add in add lret fsts cmpsl inc push pop jp popa and or lods (bad) mov insl add int3 or test lea or adc mov mov push add iret xchg movsb fist jmp aam rcrb mov je xlat out or sbb (bad) into clc and popa xchg add adcb lret sti rorl (bad) ja movsl mov out insl inc (bad) sbb (bad) sub xlat adc shlb mov mov dec inc sub das inc sbb mov mov les int3 fnop mov mov rcrb mov popa fadd mov lcall test adc fisubr push jle ret pop sub mov data16 mov lcall lret movsl int3 fadd mov xor fadd inc ja movsb lea mov mov and clc arpl sub mov lock mov test push mov repnz fnop push test test or jge dec popa out adc dec adc pop xchg outsb cmp adc clc pop (bad) and pop lahf adc fnop and mov js ret (bad) iret dec jbe loop add loope mov mov stc sbb (bad) mov out cmp dec lock test push push cltd dec and (bad) flds orb and mov loope cmp sbb lods lahf mov sbb bound je lcall loope cmp les add cwtl fcompl test xor fidiv and lret (bad) cmc int3 (bad) jae pop and subl adc gs adc (bad) mov orl dec add (bad) and std xor and popa mov mov rorb ret adc cltd inc mov fadds dec add and pop ret rorb xchg dec icebp enter xchg and popa rol insl fucomip loope and les push and (bad) lods popa fistl call (bad) int int das movsb test ss mov xchg adc les push sbb (bad) and int popa mov xchg add (bad) and movsb mov mov and or popa nop and aas out adcl push sbb push jae cmp loope pop cmp inc hlt push inc adc test and loope outsb xlat sbb stos xor pop imul or ret adc push fildll mov jo adc gs lods xchg jge leave inc in into popf lock and or call out lret repz leave (bad) imul repnz shlb leave loop jbe and add mov mov mov (bad) repnz stc ret les mov jo flds insb (bad) or adc push inc push int mov mov sub and sub mov js and sub xor fcmovnb cltd sar (bad) mov lods sub and push xchg add sbb jbe pop mov xchg xchg rcl shll nop push sahf stos jns jmp in or mov sub rorl add adc pusha xchg pmuludq jmp push and adc js fbld dec xchg and adc leave nop add mov addl ficom shll cltd xchg and popa and sbb mov fwait popf push popa pop subl mov and test or dec inc cwtl jnp mov movsb icebp adc xchg rol mov jmp push out xor xchg jecxz push or or dec cwtl (bad) cld adc mov loope fnstcw or xlat add (bad) mov arpl add (bad) or movsb add sahf mov rcll lret pop jne lea push fadds daa jp (bad) ficomp push js sbb stc es sbb push test nop pop jmp enter andb ret cli add inc push push push scas scas and xchg mov ss mov sarb inc iret icebp fcmove nop out jl jb cmpsb ret fiadd loop loopne cmp js sar fildll mov repz or sbb enter (bad) les or dec jae or test sbb andl jl jg outsb mov sbb dec jmp out das les enter pop fistpll xchg pop sbb enter dec fs scas rcll aaa outsb cli ds sub add clc sbb sbb inc and xchg out and enter aam jecxz push pop aas inc movsb xchg xchg add xchg mov adc leave aam lahf xchg test xor sub dec in scas (bad) mov idiv jno jmp cmp loope pusha xchg (bad) push push (bad) hlt mov and jne inc std int3 jmp les or jmp nop pop inc repnz mov in push mov xchg dec cmp js aam lret adcb (bad) shrb jecxz test sub pop add inc (bad) fldt insl fwait mov jae push pop lock add sarb ret popa jo xchg push mov xchg pushf lock mov xchg mov stc lret repnz cmp out push test (bad) icebp mov dec xlat cmpsb js fsubl and add dec out push and adc inc cmp scas cltd add inc xor andl or shr std mov sub ds mov xlat sbb js repz mov fwait sahf dec ret lret enter xchg (bad) mov adc fdivrl and repz xor pop push push add inc mov lock dec sub dec dec mov xlat mov ret xor fcomps push notb lods in xchg inc movsl xor cltd (bad) out mov mov adc movsl mov repz test enter push loop add lods or subl clc (bad) fcompl mov mov dec mov shrl push push jg in scas or lods lret adc sub int3 cmc xor or xchg nop test movsl jae mov inc mov dec inc mov bound add mov sub arpl shll movsl rolb xor push loope add and adc mov loop xor lods ja cli (bad) sbb into xlat xchg aam and xchg push xlat mov push es enter mov or rol push outsl mov lods mov call in dec mov call out adc sbb inc enter sbb das scas sbb or dec js lds adc xchg push xor add add and mov cmpsb sub xchg xchg fist rorb mov test mov mov cmp jl xchg and and mov inc and gs sub aas loope std arpl ja and cmp cmp rorb mov xchg adc stos repz xchg pop clc xor jne inc in push and jle ret jne (bad) mov cltd add scas add arpl (bad) pop cmp fisttpl mov in movsl sbb cwtl icebp fimul aam mov xchg dec mov les and rcll fcomps lods sbb jbe mov (bad) aam fstpl mov insl adc nop dec pop in cwtl (bad) or ss fadd add jo rcll in stc enter int3 sub jns stos sahf inc push mov jb and jecxz inc sbb roll mov outsl repnz les mov xor sub push add inc ret scas mov aad sbb mov add sbb xchg jp push xchg shll mov or xchg or mov mov xchg addb cld ret into mov or outsb push nop mov enter (bad) sub outsb mov mov or movsb pop or and add ja xlat or stos xchg or mov adc in enter cmc fist fnstenv mov rol cmp rolb mov ret or out (bad) xor adc enter adc mov pop loop arpl test mov loope and push stos les or jb test dec dec mov sbb add xor lret ljmp jo mov mov test (bad) jno shl sub fdivs nop or stos test push mov and dec mov sbb sarl scas xor scas or fs imul or pop or mov cmp test call loopne cmpsb dec int3 frstor and test mov mov xchg inc ret gs jno les shl xchg add and inc les xchg movsb or adc movsl mov xchg mov add dec nop sub inc jbe (bad) pop xchg subl sbb cmp cwtl sub jbe cmp dec es mov add xchg (bad) mov sub push (bad) adc xchg fs test test add imul loopne movsl mov xor or xlat xchg mov inc add inc xor inc push and dec lock mov lods xor mov rol and test loope mov cltd loop out sbb imul hlt and icebp bound xchg fidiv out sub fstl mov inc sub flds mov mov (bad) sbb je and les pop fadd (bad) ret loope xor sub icebp and enter rorl adc test lods cmpsb jle pop fild add and add mov jb push add (bad) jl cmp out aam pop mov and push inc pop cmpl (bad) in sub push mov ljmp int3 jmp or add loope out sub inc fdivs adc mov xlat (bad) out xor in or (bad) divb fstl push push push cltd add xchg test cmpsb and ret subl iret pop jl and (bad) stc stos pminub inc sbb mov and ja and dec dec mov aaa pusha mov sbb out fxch popa movsb or lods out rorb dec xor adc cli push adc loopne cs test bound xchg cmpsb push mov and (bad) movsb jmp icebp into jnp or mov xor adc pop and inc mov jb add subl or divl into mov lcall repnz (bad) cwtl jne xchg fild mov ljmp sbb add mov and psraw (bad) xor dec sub in repnz add js inc clc mov push loopne mov (bad) xchg mov outsb insb xchg jl popa mov mov inc fnstsw iret je mov mov lcall dec popf and fadds shll cmp add ljmp and or stos xchg and cmp mov mov cs lods (bad) aam lret loopne push cmp mov in je mov insb cmpsb mov (bad) fsts mov iret les mov fwait iret iret imul jp cmpsl into or or repnz (bad) iret (bad) mov cmc xchg mov push nop mov add mov mov mov or or xchg and repnz call jmp cmp fsubp (bad) arpl mov aas das leave dec mov pop loopne inc mov int stos popf mov fiaddl lock or mov shll mov mov mov push (bad) cmpsl add mov and and mov lcall add and jno mov test mov test xor das cmp push xchg hlt adc and inc addl jae mov adc out bound pop pop cli cld adc jbe cwtl mov and mov (bad) mov push inc sbb mov inc pop xor test jp shr ret mov icebp daa mov hlt shrl mov movl (bad) cmc sahf fisttp or movsb sbb xchg add jnp push (bad) pop outsl bound or leave add mov xor shlb xor mov ja je xchg mov add inc xor fnstenv andl (bad) ss mov jae push fnstsw and shlb sbb mov cltd test cltd les in add or or lcall adc mov sahf mov enter sbb sbb push movsb outsl add or push inc sub inc int3 flds aaa sbb push push and outsb imul and adc into and fs adc adc ret dec stos test test fnop mov push stos movsl (bad) out test cmp in xchg lahf movsb push xor imul loop rclb lahf sub push and in mov mov inc xchg sbbl lock rclb xor ficoml adc pop test add ja cmpsb mov mov jae int3 test (bad) mov sub dec nop adc mov mov sub pop imul lret fnsave pusha gs pop (bad) push test fstps jge mov xlat ds adc jns je mov loop xchg ret cmp (bad) cmpsb popa xchg dec (bad) shll ret pushf fiaddl ret cli in loop xchg test jmp cwtl ja fldpi xchg mov jo push xor pop mov test mov shll mov rcr (bad) movsb int3 int3 dec add adc lahf or adc fildl scas in push mov loopne mov pop adc jae sti lret mov dec mov push push adcl aam imul pop mov fmull mov add mov mov inc fsubl mov cs xchg add popa and js or mov cwtl xbegin lret nop dec mov add push repz xor mov mov gs jge call (bad) sbb mov fnstenv push es shlb aad cmp inc adc iret xchg (bad) aas and sub in aas or loop cwtl (bad) (bad) data16 insb dec dec stos ficom push xor cwtl xchg call aam fcmovnbe into inc pop je les outsl bound pop (bad) roll cmpsl aaa xchg and popf loop leave (bad) dec dec push loope xor int xchg or cmp popl pop add mov sub insl and sti cmp pop imul mov enter insl sarb add inc mov and and mov (bad) jmp ljmp (bad) jl jbe lret xor ja cli scas mov xchg loopne and mov out adc (bad) lahf mov fnstsw loopew (bad) clc test das sub xor jno mov pop inc in xor mov in cltd lds and inc sbb and adc add movsb pop pushf sbbl sub (bad) jmp pop popa mov gs and (bad) jl push cmp pop arpl inc add xor sbb add and push cmpsb xchg mov cmc mov inc mov fdivl fmuls stc stos and xchg dec xor cmp jge lret (bad) sub bound mov out (bad) ja (bad) pop inc adc (bad) pop shlb sub and jno sub and jae sub sub dec adc jg loopne xor dec or icebp aam movsb add mov mov mov mov mov imul fadds lods ss dec cmp mov xlat xor and in or mov inc imul shlb lods add movsb mov shll fiaddl insb sub adc loopne pop aam lock les into fsubl nop add (bad) call mov je iret lods into add loopne mov sbb mov xchg mov leave test add (bad) mov ret push bound ljmp push or jl mov lret xor rcrl mov test lock fdivl xchg (bad) subl xor fstps add sub or dec scas push mov inc clc mov inc (bad) mov xor inc fmull in pop add fnstcw dec sbb push call cld dec fcoml (bad) pop lods clc cmp ds loopne int3 sar popa mov negl (bad) icebp pop mov add inc movsl adc ret test test scas pop add insl out fist mov loopne mov fsubl sbb fmull xchg mov and and jle adc es mov jg out push mov lcall ss popa lods movsb imul dec (bad) cmpsl scas xchg scas dec jnp lret nop mov ret mov rorb enter pop or xor mov and sbb mov aaa mov sub movsl pop call imul outsb mulb out mov cmp hlt test mov jmp jbe fcmovne sahf sub in inc mov fnstenv adc mov jne cmp mov add push and imul repnz clc push add nop lods xchg inc and jbe cltd or outsl mov (bad) mov (bad) or jmp idivb sarb or imul out int3 cwtl (bad) movb mov dec test sti inc pushf int sub fisubl outsb mov mov cwtl add mov pop lea call je jp sahf jbe lcall mov cltd inc mov push scas hlt out aaa jmp cmpsl cmp ret jecxz jb aas adc icebp faddl cmpb jmp sbb cli aam push mov mov iret sub sbb lods pop mov popa or lods pushf (bad) cwtl (bad) inc and (bad) mov add push fs sbb repnz das pop fcmovb adc mov mov mov cmp fstpt cli ss push and sub mov ret pop dec rol sar jecxz push pop add pop ja adc pop inc inc xor adc frstor xchg adc enter jnp cmpsl and es andl movsl xchg pop (bad) rol add cltd add xchg test xor sub xchg xor cli test jnp out or and lock stos cmc mov or ljmp out or jbe lahf in jbe mov test xor sub pushf scas sub mov mov les jnp pushf pop lcall popa sub call clc sbb jae mov ss xchg (bad) cmpsb xchg ret push das gs and push addl iret mov cmp fcmovbe stos pop iret fs pusha mov mov mov dec lock xor aaa subl mov ret adc daa cmp ret loopne mov sub lds cwtl dec adc dec xor das in and out aad stos call add pop mov and stos add jnp ljmp adc adc pop mov sbb adc cmp orl cmp call nop rorl or cwtl jg leave std sbb test or test dec or mov pop sbb clc out (bad) push xor inc in aam adc pop popa or mov cmp adc add lret sub out loope sub (bad) pop inc fdivr add or xchg loope add int3 and and in xor outsl mov jle add hlt enter sbb or popf movsb lret mov sbb shlb cltd or addr16 dec and adc les mov dec push bound pop mov insl sbb mov cwtl mov rcl inc lea sbb jl jmp clc (bad) mov mov in mov lret add shll jno mulb data16 je lret mov or add mov cwtl lret add lcall addl fsubs data16 mov add shrd add mov pop pusha sub fmull mov fwait xor mov xchg loopne shr divb fdivl xchg mov jb jno xchg divb test arpl les inc bswap cmp popa inc ffreep (bad) pop xor pop sub enter jbe mov sbb sub (bad) cmc lock cwtl or dec or ret pop mov out rcr mov and inc cmpsb pop cli shlb inc gs fisubrl adc jmp rorb add xorl imul mov fwait dec jns add cmp pop add sahf and stc in es or icebp iret mov inc add and xor (bad) outsl lret sbb call inc mov or iret cmp xchg or orl call into xchg xor xor mov dec add sub and inc sbb test xchg sbb add sbb mov push mov ss push adcb and fmul add movsb push mov and clc loope call (bad) clc fsubrl jo gs repz sbb jne pop adc iret jecxz inc fidiv lock test dec sub xor inc push nop add and cwtl in pop ret add imul adc lea push mov inc gs out out into icebp xchg hlt mov xor xor lock or and push cmp push pop pop add pop adc scas out subl es int3 jne xor mov fstl sub test ret push mov pusha adc lea (bad) outsb aad fsubrs jp bound rclb xlat negb (bad) push pop test fsubl ret sub int3 rol push push addl stos lea inc mov clc push push (bad) iret andl pop hlt loopne push pop shrb dec sub inc dec cwtl pop inc aas jnp add repnz xchg mov popf repz gs mov add les (bad) icebp adc pop loopne xor int3 mull int3 adc mov inc lods push xor mov push dec pushf mov adcl (bad) jmp pop idivl mov mov jo (bad) jle pop aaa data16 pop add loop mov xor inc and enter aad cmp dec loop shlb xor xchg mov xchg stos iret rcr sub adc clc (bad) cltd jbe and inc push xor hlt xchg test test ret xchg popa imul jecxz daa adc cwtl scas xor sarb loopne outsb push xor push dec xchg dec pushf mov and jge jmp add test int (bad) loopne gs pop dec (bad) cmp int3 (bad) ret add sarl push orl lret xchg pop (bad) rcl jecxz mov mov ret push fldenv (bad) dec nop sarl (bad) fistp into adc mov popa push call fwait nop mov insl sbb xor iret imul repz jno adc insl test adc loope add in or out mov and jl mov jle iret inc lds and loope movb lea loope push sbb test mov rorb int iret sub fsubrs stc lea sub (bad) jno pop jmp or xor or fwait jecxz mov pop jp rorb les push xor mov mov pop scas sbb icebp cwtl cwtl out (bad) and sbb popa inc into adc into adc mov mov mov (bad) enter mov loopne xor fnstsw jno dec jge into pop imul lret xchg sbb and mov push movsb pop cmp push and roll (bad) cmp jae cs sub mov adc loopne xchg pop push sahf cmp fadd adcl scas mov cmp jb out daa push lret aas pop add sbb jb jg popa movsl rclb xor mov imul ficomp shl rolb and push test test fucompp aam push lret or pop jmp repnz stc aad add mov shlb pop jae mov or push adc in loopne inc popa xor (bad) (bad) nop mov adc mov fidiv loopne adc and and loopne popf or dec mov jb dec out cli les loopne xor aam sub xchg loopne jb or jnp xchg rolb pop (bad) mov (bad) int3 xor fidivl jae add mov add loopne cmpsb movsb repnz sub int3 imul pop cmp push mov add mov xor into jne js sub (bad) or xor xor mov mov scas shrl pop jae xchg jno cmpb cmc inc push aas insl mov pop and nop fistp xor cmp xorb cmovno int3 (bad) jnp adc (bad) sbb dec sbb cwtl xor addr16 (bad) mov cmp add xchg lret jne stc jo or add pop mov daa or push out (bad) cltd add rcrb sub rcr or jnp and out cmpsb and dec fwait mov adc insl mov (bad) dec add xchg jge and gs (bad) xor mov xchg push pop lock xor ss jne test and dec imul (bad) pmaxub pop and clc pop (bad) pop and rcll inc xor shrl pop popa xchg data16 sbb pop mov repnz sub xor cmp xor push or sub push and outsb sarb jbe jg mov lods xchg inc sbb repz mov fldenv fs cs or xchg inc movsb popf add adc stc jns jo clc lods push mov xchg shlb mov pushf mov (bad) idivl imul pop (bad) aad and rolb neg pop add cli and subl dec rorb cmp ss lret xor sub dec ret out loopne cltd mov mov rcl fwait adc aaa outsl push cvttps2pi mov and (bad) (bad) (bad) adc inc insb cltd add notb mov loop sub dec adc aam addr16 shrl xchg inc rol lcall call push adc jle jnp imul jmp pushf cmc dec test lret sbb movsb movl movsb mov and into dec loopne addb cltd add or enter loope and inc fwait pop ficom adc xchg paddq fwait or loopne loop pop int3 mov adc mov cmp adc loopne cmpsl sub dec and sbb adc repnz mov pushf push push cmp inc int3 mov or clc movsb ja aam insb (bad) and mov nop lock aad cmc test mov xchg popf jae cs int3 inc fldenv and mov or sub or inc cmp callw pop xchg (bad) scas enter leave (bad) and repz mov (bad) lods movsb (bad) rorb cmpsl rclb add jp lods cmp cmpsl test ret mov int3 cmp adc fidiv aam sub mov sbb adc add add movsl imul xchg popa xorl inc scas mov mov inc dec pop inc and cmc movb insl mov aaa movsb into (bad) xor ds add add sahf xcrypt-cbc adc add rclb (bad) jg (bad) mov mov (bad) cli lods jnp xor mov mov sub (bad) xor sbb int3 or sahf fsubrs cmp pop scas lock mov ss sub xchg sub pop sbb and adc push xorl xchg test ljmp fistpll movb xchg (bad) movsl popa scas faddl andl jae inc dec pop lods and lea mov popa clc and lods popf lods shr pop inc test add cwtl jno sub pop testl jno lret xchg lcall xchg mov pop inc xchg mov addl cwtl xor adc lret cmc jns test insb and jl pop inc cmp sub pop mov push jl pop roll jae aam sub mov aas lret add lods pop mov cmp popa adc and mov add (bad) pop je aaa or loopne dec cmp test xchg xchg (bad) lret fstpt mov cmpsl loopne out (bad) lock outsl rol mov mov or mov and xor pushf stc jle scas (bad) and inc lds push stos mov add push lods js sbb xor int lock adcb dec or inc and xor es push dec push in cmp lret jns cmpsb mov inc movsb cmp lahf inc jmp or or dec pop (bad) mov psubsb aas pop scas andl mov add lods movsb add gs pop bound pushf imul pop stc ret mov call inc sub inc loopne sahf jns xor adc add insb xchg or sub xchg cmp dec and cmpl pop add jne jecxz lret cmp ss sub pushf dec inc nop sub mov mov pop js not dec mov popa and xchg imul pop jns movsl je ret jecxz sti sbb jno movsl cmpsl jae adc mov push inc mov movsl push mov cwtl (bad) add add jle movsl enter fwait adc shrl dec jno fsubs pushf mov arpl sti dec mov mov pop inc cmp adc and popa hlt mov pop pop push xchg jb pop mov (bad) and xchg xchg cld add subl rep and lcall ret cld and les (bad) mov shr xchg fldenv sarl inc pop mov adc xchg arpl or ret lods orl in repnz sarl jge fdivl push dec jns add or jle jne jbe and test xchg loope repz sbb inc push sbb inc loop pop xchg and sbb mov jnp sub stos stc mov or gs sub test nop subl push pop add (bad) (bad) pop lock pxor adc push sbb fwait mov adc loope,pn sbb scas lcall add jnp push sbb or fcomip (bad) mov mov cmpsb lock push aad inc movsl sahf (bad) jmp xchg mov or push rorl test xchg lods sbb int3 loop das loopne fs cwtl (bad) mov movsl scas inc (bad) icebp adc xchg fbld lcall test cli and sbb xchg scas jmp test and cmpsl scas mov les push push fsubs jns dec fsts jp sub jmp cwtl mov out or dec mov enter pushf push mull pop fadd or cli out negl add push (bad) cmp sub mov outsl pop pop insb sbb bound mov mov jge jb jp mov rol mov mov cmp adc adc adc jae dec fs jg out (bad) shll xchg or add push or adc adc mov shlb pop push mov mov and xchg and adc cmpsl adc movsb push (bad) or aam iret test or inc jnp xchg xchg adc add sub in dec mov adc and (bad) inc mov xchg or mov mov icebp leave popa jae add jmp popa pushf and rorb sub xchg (bad) sbb push mov jecxz cmpsb imul aaa and push test cmp jo push lret sar jp loope xlat dec mov aam loopne mov (bad) and stc jmp jmp jnp xchg mov les popa adc or mov adcl les nop adc xchg mov lea mov or xchg stos call or ljmp inc jl sub (bad) stc out cmpsb ljmp jle outsb clc mov inc je mov ret roll adc sub cli (bad) loope mov nop or pushf and push push adc or mov test rcl adc lret inc loopne sub xchg xchg cmp or push inc shrl cmp adc imul adc stos mov xchg lds int3 sub mov cwtl loop xchg adc xlat cmp cmp mov lods out loopne add and inc and int3 call arpl and inc and popf dec adc or push fildl cmpsb mov jp cmp cltd jbe dec ret xchg xchg sbbl in repz andl mov sbb mov jb clc jbe and cltd (bad) adc jbe add (bad) mov leave (bad) aaa jo add sbb pop mov xchg push push mov js mov in sbb mov nop jae jo imul mov xchg movaps add or (bad) popa add (bad) in shr mov inc xchg xor repnz jle in mov xchg scas insb shl inc test enter cmp xchg in mov adc into fiaddl daa rorl adc jae or mov jmp ror xlat mov cmp adc cmp sbb push pop adc loope and enter dec xchg nop add hlt lods std or mov xchg shl adc rcr jl subl and fdivrl inc xor or neg add mul fmull or fiadd into cwtl pop lods nop xor mov lock adc lret add dec mov loope mov lods decb lea mov pop sub xchg sub sub in out int3 leave aam imul lds fsts fwait lea push add mov call (bad) negl cmp ret jno pop (bad) jg mov or add mov inc dec movsl sub aam iret push xchg fisubl dec fldl int3 insb jmp dec jp fucomi test or mul inc sub addr16 or mov and push pop mov mov fisubr push mov movsb mov jb ret (bad) lret pop fnop or adc push cmp aad or mov jns or or ljmp out mov mov mov mov inc sub mov pop cmpsb les xchg xchg cmp push inc sub cmp and add add add mov xor mov xchg or mov fadd sahf mov jnp inc sub push lods movsb sbb fildll sub icebp jmp out aaa sbb mov jmp mov movsb int3 push sahf mov aaa mov fnstsw pop iret jae lret repnz lods mov (bad) and mov ja repnz repz cwtl xor and push mov or dec les inc fimul int3 add sub cmp inc adc fdivrl ja fadds mov and iret xor push lods mov (bad) icebp cmp aas rolb and add popa ret and mov dec jae sub insl shlb mov sarl stos or adc iretw les std push lret arpl add (bad) fwait int test jecxz gs inc clc iret int3 es sbb dec and popa pop int mov mov (bad) sbb mov insl mov push xchg xchg movl out fsubr ret stos add sbb loope pop rol rcll sub sarl mov xchg sbbl xlat pop imul dec push repz push in lret imul add fdivrs loope sti or (bad) dec std xchg fsts and and mov nop push push les mov insb sbbl or xor sbb xchg repz cltd gs or push mov cmp dec data16 adc pop mov mov jae push idivb fstl test sub pop mov call sbb sarl (bad) mov push xor add mov repnz dec ret fimul jmp es out shrb ret xchg lods (bad) xor fnop call loop mov lds mov mov ds and notb add pop fs imul xor and fcmovb add or cmp loopne and and (bad) jg add nop jge sahf push into xlat popa add mov gs fldenv mov xor or mov shl fucomip rcll les lock movsl add cmpsb xchg js sbb mov pushf mov rclb insb int shlb daa arpl daa clc cmp loope sub push repz cmpsb outsb jge xchg imul iret sub les fwait push fcmovu push xchg mov loopne cmpsb cmp test xor das and push pop enter stos test jge cmpsb pop jge rorb fmuls arpl jmp sbb mov xor adc pop fnop mov loopne or aas (bad) inc jns lea push test and shrb add adc cld test sti daa popf fsubrl ja pop aam dec andl lret fcom xor mov mov movsb in mov popa mov add dec xor imul mov lret inc iret sbb inc ret fcomps (bad) out mov loop or mov (bad) outsl inc sbb inc arpl adc pop inc (bad) ret arpl push (bad) cmp aad call imul imul mov roll inc mov ret daa sbb fwait shl and mov cmp shr inc aad cmp out mov sub mov jl lock scas xchg cmp and xchg roll jmp sub test (bad) mov repnz add or mov sbbb dec pop jno leave jae lcall and sahf adc clc mov inc fwait dec dec aad out cmp jge xchg (bad) je andl scas mov int3 stos or xchg cmp or add insb (bad) mov test pop (bad) and cmpsb add dec add xchg push dec fsubs sub sub bound pop mov lds loopne and nop (bad) ljmp xchg shl fisubr test ret sbb mov bound (bad) dec imul add ljmp cli jb,pn repnz imul lahf out jge (bad) in xchg push les andl (bad) sbb xchg popf sbb cmp cmp sub test (bad) mov jecxz out inc push fistp and int3 cwtl movb lods pop in push mov hlt mov xchg pop inc jmp idivb insl loopne pop sbb test and insl mov stc adc into mov add sub les scas imul out pop pop lcall mov xchg cmp mov jae in imul outsl cwtl shr cwtl iret mov adc or mov mov jp cmp int3 pop insb ljmp fbld daa in add and addl dec sbb ds addl pop dec sub clc popl rcrl inc push movsb or xchg pop popf xchg cmp (bad) in int3 imul test add pop pop and orl das test cmp inc mov xor push xchg mov je mov mov and test add inc jle sub inc jp cmp adc fnstsw (bad) cs out lods loope pop imul andl add mov sub sbb lret adc jnp cmp push lods mov inc int (bad) rorl enter cmp ret int3 xor mov push arpl xor test insb push (bad) and dec clc in sbb inc (bad) stc mov pop mov (bad) cmp sbb in fs mov loopne test sub sbb fmull lds add xor jge pop adcl sub add or mov xchg push imul das rolb fisttp (bad) cmpsb cmp popa (bad) aad mov loopne and pop pushf dec xchg jg sbb aaa jns (bad) lock bound in cmpl push inc clc rcrb repnz cmc mov sbb faddl sub add lea fcom push loop leave into les lret int pop clc mov pop cmpsl xchg and cs dec adc xchg ja or movsb out rorb pusha (bad) jnp sbb push mov insl (bad) sub call mov dec push loopne add jnp add mov jb xor sub cmp jl adc dec lock jl addb sbb inc or and pop or mov clc pop clc cmp in lret add cmpsl or sub cwtl (bad) vmread inc scas (bad) xor sarb cmpsl stos fdiv xchg repnz jle mov sbb push andl sbb xchg cmp cmp xor rolb jl mov jg popa enter sti inc nop movb push popf ss (bad) sti adcl mov movsb movl int3 sub or cwtl pop dec adc or push rcrb popa and mov jmp sahf pop popa mov lahf cmc out jns sbb daa add cwtl inc shll (bad) stc repz jnp xchg dec jae push flds pop sub jne into cwtl adc sub push sub jo add or or pop mov pushf jmp (bad) into lcall popa ja dec and sarb xchg add shll sarb dec sahf stc inc add sti add mov mov lods mov or bnd inc lret xor xorl and and jnp push bound sub cmp (bad) mov loopne mov mov cmp jbe cli (bad) xor bound mov xor jp or (bad) jbe imul adc sub shrb jle mov stos jg or cmpb popa push pop pop sbb jb enter lock jo rcrl jnp test icebp jg and test mov sub sub daa roll mov cwtl or leave (bad) pushl fimull mov ret fbstp xlat mov sbb push sub adc ljmp iret xchg rclb push pop sbb in loop scas or rcr mov mov int3 dec je ds add inc add fsubs enter fsubs dec insb adc loope bt ror out out mov adc mov andl fimul push sahf xchg cli int3 xor push shl mov add (bad) cmp test enter mov and (bad) cwtl inc loop test and aad xchg pushf repnz sti movsb pop popa sarl add add lcall insl jb fidiv repnz movsl inc mov pop or in aas (bad) pop nop xor mov lea ret fwait loopne js mov mov push add js or lret test add ds movsl fstl and push xor addl mov sahf std mov jns and push call icebp movsb sahf mov hlt lret xor imul sbb int3 rorb xchg adc mov cmp sbb xchg ja in xchg lds or fs cld inc int mov mov dec lcall and mov ja adc lret aaa pop push or out xlat and push ds add jns mov in pop sub xor jae mov add fnstenv clc cld iret fldenv test mov fldenv vmread mov xorl mov addr16 repz add dec and cwtl xchg sbb sahf cld nop sbb fmuls lds pop divl pop pop (bad) mov insl sbb push std cmpsb xchg jl mov leave mov mov mov mov push adc mov cmc into dec ret push imul pop add cmp dec stos subl ret sbb push sbb add fsubrl (bad) jnp pop sub loopne imul mov dec das mov adc pop loop mov xchg cmc orl add and adc jnp fistl mov rcrl add mov loope ret sbb xchg mov and imul mov lahf pop sbb cli pop das xor lcall sbb int3 or imul xor shl and cld xor test dec out fdivrl push jae dec bound aaa mov jns mov inc jnp mov mov sbb dec repz or and xchg test rcr push or notl jne dec push cmpsb popf or mov and push xor pop jo in js in cmpl mov adc (bad) jne push add hlt inc push or push out add or in (bad) xor add inc and fisub push dec sbb mov mov xchg les dec rcr clc bound out xor pop iret out std fs rol push and test adc mov dec xchg push into sub (bad) xor cmp add mov jo and arpl (bad) or inc rcrb loop jle daa std out int3 mov sub rolb cli jge stc ret pop clc loope cmp and ficom pop stos inc popf add or movl pop movsb or cwtl fsts pop mov std or xorb loopne ds or clc sbb dec gs movsl sbb pusha stos lods adc ljmp ficom xor test (bad) std stos jae adcb std stos clc fdivr ja mov lret les and fstpl jae shlb mov pop inc inc ficompl add and mov inc test or test ret inc neg gs gs mov adc add pop xlat inc testl into sbb adc daa stc (bad) adc mov sub fwait bswap dec push xor or movsb shll (bad) cmp and and dec adc jle movl out cmp sub js sbb into arpl jo je stos cli jae out test push call push aaa lret (bad) clc xchg test stos iret push hlt and xor mov dec and outsl enter adc push or test nop jecxz popa int3 add loope iret (bad) lods popa nop int3 fistpll test into mov cmp mov loope push xchg pop inc nop mov and cmpsl out (bad) sub jns insl sbb xchg inc adc push ja mov push xor mov insb gs adc repnz sub and out pop insb daa lods sub xchg mov xorl clc ds add imul inc rolb (bad) popf jmp (bad) lock in clc ss popa mov loope dec sbb loopne xor inc iret mov bnd sahf (bad) lods mulb int jle inc aas and shl mov stos sub sbb rorl mov xor pop xor cli adc (bad) mov adc add rorl inc inc stos xor and inc out dec mov mov push add mov call or and cwtl (bad) repnz stc out mov (bad) sub add fs jnp test rcll int3 punpckhbw xchg rclb test mov and test cmpsl repz sub cmp push mov push sub cmp cmp mov lds jnp lods mov xor cld hlt xor pop addl add sbb stos imul add mov adc rcrb les insl or gs mov notb jmp rol cmp mov test sub mov xchg push adc adc and roll imul and add sbb mov in inc aad xor mov test dec and mov adc in in or ror (bad) ja sarb movsb xchg cs push cmp sub add inc shlb mov test mov repz add push in in imul sub arpl mov or movsb lahf fisubrl mov (bad) icebp cmp cli mov jbe mov xchg xor (bad) (bad) bound jl pushf js mov and int3 xlat stos add fcoml dec (bad) pop (bad) (bad) xchg test out dec push mov cmp inc mov mov jg cmp in push clc mov fsub into sahf hlt stc mov aam mov mov (bad) xor push mov dec fild les pop dec pushf sbb (bad) mov pop add pop xchg outsl xor (bad) test (bad) lods into fs jb aam add mov add push loope (bad) inc (bad) in (bad) mov mov loopne das push test xor lock and xchg test and imul out je inc and mov cwtl icebp rcll mov jp push and imul pop mov in dec add cmp stos xchg mov or outsl popa mov addr16 loop fsubl add jecxz or add fnsave pop mov sub outsb loop inc sti enter pop lret (bad) dec pop ret sbb push aam xchg add pop subl enter sub sub push js call pop xchg iret cld psubw lods or adc pop call std mov nop loop adc adc dec int3 lods add mov xchg in imul rol hlt inc popf adc int dec lods add mov or negb (bad) fsubrl sub sbb mov sbb mov and pop lods fiadd fsubrs aam stc sbb rorb gs push add mov inc leave mov nop cwtl pop pop pop xor movsb and push and in repnz jnp imul inc mov mov mov mov adc dec movsl inc xchg inc nop rolb out sbb mov or test fnstsw jo xchg add add cmp inc std mov fwait cmp adc call bnd ficomp std xchg xor and mov mov mov mov stc xchg addl lods jbe loopne cli mov sbb add sti mov jp fs or fist jg stos loope mov pop jae mov lock imul fistpll ljmp add fcom and cmpsl loopne out (bad) (bad) lret jnp jge mov inc rclb out loopne lock mov add jge adc ds add das int3 (bad) lahf xchg jnp out movsb ja lcall cmp xchg js and sahf inc ja mov pop mov lods fnstsw stc insl pop xchg jmp push nop cli jl cmc mov sti outsb addr16 rcll ffree mov rcrl add inc in push int3 mov das adc mov ljmp data16 sbb pop add mov inc pop pop orl shl mov nop shll push fdivs xchg add xor movsl test push test cmp add loopne mov and mov xchg jecxz push ja or nop aaa fnstcw fisttp mov lock or (bad) mov es test lcall arpl mov add lods hlt test pushf add lock outsb and mov mov aam xchg aad inc mov fimul iret enter lods jne add fsubr and xor add lock xchg fwait pop (bad) xor cmp push rcrl out mov sbb sbb in sub adc ljmp cmp icebp and push pop push shll (bad) or insl mov out es push add inc mov ss cs ret fisubl push dec and divl xor sbb adc (bad) lods and cmp das cli adc pusha movsb add sub sarb hlt repnz jl fs pop out mov push andl xchg (bad) in popa test lods sbb (bad) jge pop (bad) push sub fisubl xchg sbb cs repnz adc mov xchg mov inc (bad) test fldenv adc fildll sbb cli ds push (bad) (bad) xor and jbe xor or or in dec xor pop xchg sub and clc es push add sbb (bad) mov push jecxz,pn jle ficompl arpl or xor into nop (bad) dec mov add ret shlb push and mov (bad) xchg in or rcrb stos sub (bad) divb pusha test jbe xor adc push sub fistl add int3 mov das pop imul and out (bad) mov movl push movsb mov mov hlt sub stos add rcrb inc cs shrl sarb fmul enter sbb or sub imul lahf popa scas jmp call jno (bad) and push mov add sbb leave pop fsub fiaddl fld xor sub pop and cmp adc xchg sub inc arpl inc add mov dec movsb ljmp inc and lods je lret adc test mov add jl stc movsb xchg pop mov push pop xchg sbb push (bad) mov fwait add xchg je stos stos jae sub mov add jecxz sub pop int xchg out fs cmp popa sbbl pop fs mov insl mov ffree (bad) loop fxch test (bad) push mov mov je (bad) push imul sub xchg (bad) loop inc mov add cmp in mov mov jno mov xor xor (bad) loopnew and bound cmpsb hlt jp stos shll adc arpl es mov adc outsb negb (bad) jl movsl rol and sub mov lahf movsb out mov pop inc mov bound and daa mov jl mov cs lock mov mov push sti mov jae sbb cld jle mov pop mov sub popl push cmpsb inc adc in pop sbb ret adc loopne inc add (bad) cltd out sahf cwtl call lcall (bad) je cmpsl in or sbb in add arpl loopne add in xchg frstor adc xor imul add fstpl call jecxz sub or dec add imul rol pop lret loop arpl mov ljmp xor leave or (bad) aad les fmuls xor (bad) jne adc enter or ljmp and movsb mov repz cmp mov jle push lret jnp dec xor dec xlat add or arpl push movsl hlt dec xor arpl xor sti xchg lahf in (bad) inc les outsl jp xchg lods aad ja test cmpsb mov xchg and mov test mov daa rol dec cltd mov aam xor fs push aas cwtl mov mov xor cwtl mov xchg lock mov sub push sti jae or es sahf (bad) mov aam xor nop pop lcall mov cmp push inc test xchg call and inc inc sbb decb stos mov loope dec popa mov incb xchg aaa arpl sbb stos test xor pop negl (bad) push xchg sbb dec xchg hlt xor xchg (bad) xchg enter mov (bad) arpl cwtl xor add or jp sub mov inc jns ja scas (bad) adc nop movsb pop lock mov mov xchg and and inc cwtl je xor mov add and sbb imul or fstps sbb js js ret push movsl cmp push outsb mov (bad) sub xor xor test icebp aam test fcmovu cli (bad) mov and fstpl nop mov mov mov pop dec pop fistl cmpsb mov mov (bad) pop fs loope mov scas movsb fdivl orl push loope in sbb idivl add xor add mov mov loope sbb jae xchg push sbb movsb pop mov or push loope (bad) lods rcrl mov (bad) sti lcall sahf lods sbb add cmp addr16 aam sti lret push mov adc mov pop sub dec ret xchg inc xchg call cltd jnp mov and dec out adc xor jecxz arpl sbb pop jp mov sub mov fcom xchg aas int3 or cli lahf imul sub test adc ljmp icebp adc (bad) and inc add movsb dec add jg dec adc jecxz lods add addl dec jmp xor mov mov ds stos sub imul add lock mov and sub lock (bad) test scas xor push rcrb aaa aad ret and divl adc rorl cmpsl mov (bad) cmp in dec dec nop aad cmp xor lods inc xor sub popa imul aaa pop cltd lea js lret sbb mov jl mov repnz mov mov out dec jl repnz loop dec inc repz (bad) cmpsl aad pop inc xor mov dec fld sbb leave test lcall xor imull lahf jmp sarb mov bound adc cmp cmp insl xchg sub mov and int3 rcl mov insl and push enter test sbb and cmpsl clc dec imul test outsb sub push pop nop sbb xchg sub cltd inc jl mov jmp nop pushf pusha mov dec inc mov fbld jb mov ret enter add adc push int sti mov cwtl mov (bad) (bad) notl (bad) std and into or pop (bad) mov mov pop pusha cmp cmc loope adc pusha and repnz mov fist (bad) sbb hlt loopne xlat adc jp adc xchg mov (bad) and pusha icebp inc and movsb movsl test out dec sub mov incl and mov out mov sbb bound adc repnz ret loopne addr16 testl or jbe fidivrl xchg dec xlat out xchg stos or xchg inc or js sbb (bad) cld push out lcall dec xor iret int3 xor and and cltd cmp sidtl insb push (bad) jne cwtl clc push fidiv push jp jae test stc out cmp orl cmp pushf xchg sbb sbb cmp shll xor mov mov ror (bad) arpl ljmp and cmp sub out mov clc enter flds lock in inc xchg pop lret fistpll loope cmpsl xor sub ret es mov mov rorl xor lret or jns add (bad) mov and mov jo mov sub add xchg addr16 rolb cwtl jg fcos pop test push xor or subl jmp mov aad dec int3 mov pop mov faddl sbb adc insl (bad) pop rolb std sbb fisubr cmp les jge ret mov inc movsb arpl in mov out rcrl add mov enter cmp push test dec lods jbe aam mov std aam or loope xlat inc dec call repnz adc leave shlb add adc xor inc lret lcall lcall jo ljmp or xchg call xchg sbb imul or outsb jp mov (bad) xchg adc fwait sbb push inc pop shr (bad) or mov push cs push sub adc inc and test ljmp (bad) mov les movsl fstpl cmpsl cs jp push mov out mov ret je gs lea loopne add add and (bad) mov lods idiv je (bad) out xchg pop lock outsl cmp rcll movsl jnp inc and pop loop sbb loopne mov call jp aas mov jb sbb or rcrb mov lods js add (bad) mov xchg (bad) cmpsl inc cs and dec loop daa imul mov jbe mov lea mov lea cmpsb stos mov sub fidivrl xchg daa ret sub mov (bad) mov xor dec add test push stc fbstp cmpsl inc sub (bad) xor and fwait pop loope cmp mov push imul jo test popa sbb or mov mov and sub xchg (bad) xor stos xlat ret leave pop xor add jae scas inc cltd or and adc lock dec test sbb stc adcl jae sub int3 imul inc and inc movsl fistpl lods xchg leave inc cld push aaa pushf push inc cmp js addr16 (bad) push cwtl fucom mov mov jl fs or push (bad) fnop sbb bound ljmp mov xchg inc in lret imul fs in or ja mov (bad) cmp cltd jno xor xchg inc jno cs jnp jbe push sahf mov adc hlt arpl iret cmp cmp mov cmp sub sub gs adc pop in sbb mov dec pop scas lods (bad) das pop pop pop mov lcall mov inc jo popa mov out movsb shl cmp repz mov cltd xchg xchg jb jo xchg cltd (bad) or fidivr or loop inc jle imul loopne jmp adc xlat dec daa mov push (bad) dec add mov cmc loop jno add aam add sub jno mov stos loopne adc scas add nop push sbb mov lcall movsl (bad) mov xor rorl add shl or fnstenv hlt (bad) (bad) pop add lret icebp push (bad) cmp in mov movsb in adc sub jae xchg in sub in xchg mov mov (bad) cmp inc cltd add les ss repz repz (bad) std repz ret pop rcrl dec jle fs add pop inc xchg dec jns add xchg or ds xor out and cmpsb sub nop sysenter pop das out cs cmp mov es sbb pop jmp and mov insb jmp and (bad) and cltd add and insb xchg dec rorl xchg ret ret (bad) into cs je xchg or push pop stos xchg mov inc ret or pop mull (bad) roll into add (bad) inc pop andl dec (bad) fstps adc rorl sbb shlb cmp mov xchg xorl jle sti hlt and bound movsb mov adc dec imul ljmp fisttp cmp out les cmp mov gs fs jb insl add ljmp inc jns pop hlt add fsubrl sub cmp inc aam inc cmp cli sahf xchg (bad) xlat shlb adc add pushf inc mov inc xchg sub pop mov xchg pop inc and sub pop fistpl aam aaa xor rolb xor or add add lock mov pushf xlat clc ljmp jl and dec and mov icebp mov fnstenv inc xchg into stos or dec and sti das (bad) xor loope mov pop (bad) int ljmp aam or jns mov cmc mov or std adcb adc out popf stos sbb sbb push sti cltd push mov in nop xor inc xor sub and je popa push cltd inc adc ret dec daa mov or push mov sub inc imul rcrl lahf test mov ret stc je jno push push lods fcomps adc jae stos call jae jg aaa add mov sbb mov push and xchg xchg js pop das adc jle mov mov sub ds cmp xor ret inc jno loope cli push mov stos popa mov call lcall clc xchg dec in (bad) in push xchg push xor mov into jns inc cmp cwtl pushf sahf mov or jmp jecxz inc in lcall in inc jbe sbb mov ret in adc cmp mov in enter movsb leave (bad) mov es xor mov xchg add inc jp push cmp jl das mov stos (bad) pop test sub push jne pop call fdivr outsl xchg pop push lock mov test pop cmp mov in iret adc iret or (bad) fucomip insl dec and add mov test inc sub fdivrp pop test lock out mul (bad) ja shlb pshufw rcrb fadd sbb pop js fistp mov (bad) jne (bad) pop sar jno cwtl (bad) mov (bad) push (bad) and mov inc pushf mov in dec xchg mov xchg scas (bad) imul jo xlat jae bound loopne push mov adc popa sub sbb loopne or xor (bad) sbb bound scas repz scas in bound scas call dec mov bt std call (bad) mov mov push aaa call add (bad) daa loopne mov (bad) mov ret fsubrl and dec int3 adc xchg inc xchg rcl sub mov int3 xor cmp sbb cmc pop sub leave push mov dec cmp xor lods xor scas jmp aam mov orl push fiaddl sub ds test fsubr mov notl xchg sub adc dec jb popf fdivs fs loopne aam jecxz or jbe sub xchg push xchg mov iret pop and movsl push cmpsb mov xor adc sbb fldl or mov faddl movsl fidivr nop lahf or pop pop or xor insb push xor int3 lcall js (bad) xlat dec dec popf mov fldcw xor fisttp ret ret aam sahf and xor cmp rolb in mov sub adc mov mov mov mov aam shrl mov (bad) enter jg and dec or std sbb xchg sbb test pop adc (bad) loopne (bad) xor movsl pop js dec and cwtl rorb ret mov cwtl xor (bad) jo loop jbe sar xor sbb aas loop mov les mov test (bad) mov mov add xchg mov xchg push ljmp (bad) (bad) jmp and les popa mov inc push pop and xor sbb ss fisttpll push sbb pusha sbb xchg mov mov insl mov lcall shr (bad) ljmp xor rclb rolb cltd lcall or fnsave inc mov fdivs jno mov sub outsl jmp mov adc sub cmpsl clc rol (bad) fdecstp lock fisubl mov fist and pop mov loopne jmp mov test dec inc dec or cmp inc inc or nop insl mov nop loope (bad) jp call in ret cmpsb es xchg mov stos pop iret xchg rcll mov pusha pop or xchg xchg xor (bad) mov push sub iret cmovb rcrb adc cmp sub aas add sub cmp dec sbb js dec push in (bad) imul (bad) xlat push or add test (bad) out push xlat dec inc sahf clc jmp pop fnstcw add out push inc in push fiaddl popa adc lret adc outsl dec repz ret (bad) add push enter push push in js (bad) xor jbe loopne (bad) ret cs int xchg mov fs add pop or int3 movsb xchg or nop sbb sub scas and add jge adc ret add (bad) xor mov xor (bad) cmp mov jbe adc and rorb lea popf and lea dec and pusha cltd testb addr16 les adc push inc test adc cmp movsl imul push jbe adc add push cwtl cmp add cmpsb out bound sahf ret aad mov and cltd xor sub and aam ret sbb sub xchg jl inc mov push ret dec xchg adcl jnp inc sbb sub mov sti imul insb push dec (bad) and movsl jnp xor jne je jbe xchg sub fmuls sbb insl ja lret xchg mov test shrb aam cmp add subl daa fldenv cmp adc jb (bad) repnz and push lock mov add push adc addl out popa (bad) repnz mov js push es data16 pop icebp xlat ss sahf pop sbb movsl daa dec pop add inc mov addl int3 cltd dec popa xchg xchg std ret (bad) push repnz cmp into inc mov ret mov pushf in and xchg loope cmpsb xchg and out and fnsave add out lods rorb rcr push push inc xor popa push pop mov and dec pop bound movsl add das test popa (bad) faddl push add aas rcll addr16 inc dec xchg fnop push dec cmc push jl clc mov mov pop mov sub xchg adc pop (bad) sbb xchg cmovb pop xchg fdivrs inc lds cwtl insb cmp add jmp xor scas push xor outsb mov aad cmpsl repnz add mov xor add sub jo jns jge jecxz icebp out jmp add dec test sub mov subps loope out push pop loopne sub sti and popf aam mov adc decb adc pop sub dec jno test popa mov jge mov popa shlb nop mov inc int3 mov fwait clc cmp out or jno pop ret sub stos cmpsl add cmp fstpt or or test es and adc add rcll stos jmp mov add stc adc push jmp stc mov xchg ljmp int adc cmp leave shll js dec push es (bad) lret sub or adc cwtl les mov add aaa inc inc int3 cmc cmpsb imul das sub aam jno cmp or pop in dec arpl int lods mov cltd mov ret xorb imull (bad) or stc daa movsb mov mov icebp push and mov inc sahf roll test jnp and pop cli dec mov lret rcrb pop mov xchg inc rol iret movsb popa lret (bad) lret data16 lret stos stos adc and adc xor xor sbb dec xchg enter repz sub fnstenv test fisttp inc mov sbb ret add out cmpxchg aas cld int adc flds cmc test sub sbb stos (bad) and adc bound (bad) hlt add cwtl int jno push cli mov lret adc test cli mov ret xchg dec cli in and inc bound icebp push or adc sub cli cmp xchg mov jge insl aad jecxz mov nop les and cmp test or or in sbb aad dec sub jmp xor and add movl das (bad) xor lods push inc mov lcall sub es (bad) fwait repz xchg fmull sahf movsb or loopne fisub xchg aas mov dec sub aad pop mov movsl jns xchg arpl xor loopne dec mov add les push out add fldl pop jnp xchg mov and mov pop sbb mov movsb fsub sahf inc jns fildll and or leave pop fs imul dec hlt jns shrb xchg cmp ljmp and mov (bad) sbb fsubr hlt ret movsb sub or or or scas daa rcl (bad) daa xor cli fcmovbe xor (bad) stos (bad) popf lcall mov rclb sbb add jl stos bound ror loopne or adc pop pop bound aas push and adcl cmpsl cmp jns or mov imul adc add xchg scas repnz and test arpl (bad) (bad) ror inc xor in or insl repnz sub dec and leave adc das dec adc dec adc or add fadds mov andl in (bad) lret mov mov jecxz jno sbb out fnstcw adc clc fist sbb inc add repnz loope and cwtl data16 xchg ljmp dec loop lods repnz pop sti sub mov add test xor test jge mov int3 dec loop hlt sub (bad) jns cltd shr or sbb dec cmp movsb pop loope daa mov rorl call sbb orl popa ljmp inc sbb mov xor mov loop lcall add add or test in int cmpsb int (bad) pop aas lea enter jne ljmp adc (bad) aad dec jp and or stc flds test pop dec push jle mov sbb daa cmp mov jno or xchg repz sub add lret scas xchg mov mov jl inc arpl jbe cmpsb insl (bad) xor sarl loop iret cld jnp ret mov or mov lock lock dec stc fcoml cwtl jb cwtl mov fistp mov cmpsl xchg xor mov rep test or fwait xchg push nop xor fsubrl movsb sbb mov add (bad) cmc cli cmp add jg mov or mov pop add shlb faddl (bad) dec adc xor adc dec (bad) in adc push imul (bad) lods xchg lret (bad) cltd nop lret push add sbb xchg in (bad) xor sub cwtl inc scas rcr push cmovle dec outsl jmp popa repz jb dec xor fisttpll nop movsl or adc mov loop xchg loop jbe add xchg call ret pusha sub es xchg (bad) loope and xchg sub or cmp nop or loopne shr inc or ret ss sub xor add dec pop sbb push jnp (bad) lock and popf sbb lods imul cli mov inc dec repz iret movsl push adcl outsl scas xchg jl adc lods std enter (bad) ljmp dec inc int3 mov jbe cmpsb shll push fbld cmp mov or jb cmp sub inc sbb mov (bad) mov gs adc clc sbb (bad) rcrb adc enter pushf imull dec jne lret xchg loop xor and daa mov bound stc sbb mov xchg subl dec mov xchg mov xchg and add mov jl (bad) lods inc inc add shrb fdivs adc (bad) lock cmp cmpl xchg mov lds fistp mov inc push test fisubr mov push add push ret arpl sahf dec out mov out push pop stos fisubrl mov cmpsb add sar vpsrlw dec mov push (bad) push stos jge loope or adc cltd loopne rclb or movsb enter xor cmpsb dec dec or out push movsb add lods add push mov jl push xor (bad) (bad) xor xchg (bad) jae mulps mov push aaa mov cmp outsb aad movsb insb pop mov in sbb lcall fisubl popa (bad) divl mov lcall inc xor or add cmp testl xchg ret fisub lods adc imul mov lret adc mov sbb jns ret push popa mov xchg stos adc add call mov loope insl loop (bad) in jge fcomps mov mov inc inc inc pop add or mov xchg dec xor and (bad) clc pop jecxz push daa push mov repz push sbb shll jmp cltd rcl add add movsb (bad) nop loope pop add mov and inc cs cmc roll add ret push xchg popa dec dec popa ret icebp cmpsl hlt xchg mov push and (bad) aaa add iret pop mov scas add stos test nop rcll cmpsb sbb loope mov repnz cmpsb mov (bad) mov loope test add test subl pop jb dec movl (bad) dec les shlb adc popf cmp (bad) (bad) out hlt jecxz std cmp jle dec push cmp loope (bad) lcall add nop cmpsb addl xchg (bad) jno cmp xchg xchg adc sub fisttpll loope mov xchg xchg cltd adc pushf sbb les cltd or fistpl bswap xchg xchg test pop lcall jo xchg xchg jge sahf arpl ljmp mov popa les jbe (bad) ret movb stos push add hlt or mov hlt xor (bad) in sub mov sub loope lods mov ret (bad) xchg aaa xchg out mov inc dec xchg ret dec leave cmpsl rclb mov sbb xchg cwtl pop mov lcall inc js add adc in js sub inc fist shrb add inc cld or dec cmp cmp lods ret addr16 dec ficoml rcr int das scas push xor inc mov inc imull scas popa xchg subl sbb lds mov jmp jno cmpsl mov fcmovu sub les stc lods popa add fldpi repz les aaa sbb pop xchg mov loop or loopne lea add daa pop or sub subl ds loope mov jp lds clc lcall jns push push data16 xchg mov push outsb and lds fxch mov xchg ret shlb shlb lods mov aam mov imul or xchg dec fisubl mov inc sbb push xchg sbb jge,pt ret lds nop mov jo adc push and imul sahf rol (bad) pop jl popa push cmp ds leave lods mov jmp adc fildl push add aam movsb xchg mov jecxz std mov movsb (bad) xor jae xchg add jae in or push movsl add dec lcall xlat (bad) xchg test inc clc movsb sub inc (bad) test push mov add (bad) ja (bad) xor out cmp nop push mov mov push in lret and test cwtl out iret out jne orl ja das dec sbb int nop (bad) int (bad) sub add or in cmc jmp ret adc mov xchg lods inc ffreep push insl daa iret jae rclb movsb fcmovbe push mov clc jbe ret stos or enter inc rcr push out cmp lock test in and mov mov fcmovnb push in andl pop sub movsl mov aaa js inc loope test or sub sub fadds cmp dec and mov popa inc adcl jecxz loop adc adc int3 ret les pop int3 outsb pushl out inc int3 xchg cltd or push mov call dec bound test outsb dec add je add les jne packsswb popf mov sub ret (bad) adc and pusha inc adc scas loopne cmp (bad) stos mov (bad) mov call sub sbb inc xchg add xchg jo movsb push pusha test lahf add push cmpsb inc mov inc out sub inc loope push mov arpl lods cltd fildl shll jmp enter stos fimull xchg popa jae push add push loope sbb arpl leave adc mov xor and (bad) (bad) imul icebp dec scas mov sar sbb pop add mov movsb repz popw mov scas mov lock sbb fisttpll mov test xchg cltd sbb sbb xor jecxz stos jl cltd nop xchg sub sbb add arpl jp xor test fistp (bad) mov stos (bad) addl jge repz (bad) jmp fsubs (bad) les pop fdivl dec xor movsb fisubl cld mov fmull sahf ret sbbl hlt je fcmovbe cmpsb push jbe or and xor addb fsubrs gs adc test xor and aad and mov push dec sub add addl xchg fisubr xchg or cmpsl xchg pop or mov xchg loope and ret jns outsl das xchg lcall jb js fsubrl (bad) jb fadd sub faddl adc add cltd pushf aam sti mov and cmpsb sub dec sbb (bad) sbbl mov mov cmp xchg xchg js imul cwtl cmp pop inc mov daa dec enter push fildll iret enter int3 cmp sahf (bad) cmp push mov or and cmp (bad) dec int3 cmp and adc xchg bnd call xor ret lods loopne shl mov mov mov adc mov mov mov mov sub hlt (bad) es dec jnp or cli xchg push inc popf mov ja cmpb mov movsb data16 or int3 sub jecxz ret xadd or and aas or push leave lret jbe xor lcall fdivl dec pop xchg and adc mov xor cltd and pop inc out xor add addr16 scas mov lods ljmp or arpl pop pop loopne into sbb mov (bad) mov icebp (bad) pop mov roll lret ficom or rclb and insl mov ror outsb add jnp out jge cmp and (bad) jle jae cmpsl rol jge ficompl rcl js pop jg lea adc cmovae loopne rol jbe mov insl mov lods jnp repnz cmp cmp in lahf nop movsb lret jne sbb rcrl movsl test les movsl pushf (bad) jp push outsl pop sbb (bad) leave lods (bad) push xchg cli pop cmp pop jnp lret aaa jno inc pop add mov add loope mov sbb movsb mov and adc fcoml cmpl push popa add adc popa sahf pushf lds lret mov icebp mov mov xor push xor mov add jle sbb pop dec ja adcl cwtl in inc mov lock dec xchg in adc sahf pop les cmp in or addl mov mov xchg jmp or scas fldt sub in and xchg (bad) add and mov fs xchg mov cli inc ss (bad) (bad) fadds or imul cmp mov xor xchg sbb test rolb jns sbb mov dec jl push push leave shrl sub push xchg lret test xor push and (bad) js xchg arpl adc leave enter xor push inc (bad) cmpsl popa test add cmp js int3 (bad) lss (bad) call dec jl lea iret mov xor mov loopne add aam fcomi sub jno in xchg xchg and insl inc aaa push in adc sub cmp std shr mov ret jl jp fnstenv shrb push jne xchg mov lods mov fnstenv push loop es lret or fildl shlb mov sbb ret cltd add pop mov into sbb sub mov xchg aam or lret xchg or jecxz and shrl sub (bad) sbb or jl dec pop adc dec shl add add mov out dec inc mov aam mov jae outsl adc stc xor and sub daa push jbe add and jo cmpsb cmp pusha sbb mov inc add loopne add daa lret pop mov loop adc adc sub or cwtl enter sbb pop fbld ret out xlat pop movsb adc push mov sbb sbb xchg out loopne hlt mov leave add and mov popa popa loop fmul cld push pusha and xor imul sti aaa add aam push enter test (bad) imul repnz mov xchg ret (bad) shlb sbb test push loopne dec inc aam loope les jb cli call sbb adc (bad) into xchg movsb dec mov xchg rol int rcl sarb test sahf and subl pop fcomp xchg into loopne loopne mov imul pop test push sub aas cli rcll push or pop cmp mov test add pop scas xchg jns je xor sbb jb cmpsl out mov ror xor fiadd mov mov lcall insb movsb movsb adc (bad) test sub xchg icebp shlb leave test sarb test (bad) xchg loope bound jmp jecxz outsb movsl (bad) and incb xchg arpl dec xchg mov xor push das fucomp pop out andl dec (bad) cmp std mov mov inc (bad) lods jb test les jecxz and insl setne (bad) mov nop cli and lcall addl bound in cmp inc aad or fistp lret xchg nop fwait cmp sub sbb gs mov js sbb push pop das imul inc pop insb inc adc lret rcrb and rclb or popf (bad) hlt js ljmp jb fucomp jecxz leave or inc in test pop test enter sub jle inc arpl push and loop inc imul inc mov test pop rolb jns lea cwtl cld xchg out leave jp scas xchg int3 or cwtd or icebp add or out rorb sub adc popf push loop pop imul or push test popa dec (bad) pop cmp jo sub jmp addr16 jle xor jne cwtl jb push in rorw adc adc and test mov jb neg or cli push jle pusha pop clc (bad) int3 mov outsb mov adc jae or repnz es in mov and mov cmpl aad lret jae dec cmp mov xor push mov push mov (bad) testb sub xchg lcall lea movsl sub into jmp add cmp pushf data16 jecxz inc test aam mov sub cltd jge test xchg inc mov cld inc xchg xchg aaa sbb int3 cmp jge imulb inc test cwtl xor xchg mov pop pop sahf pop stc test icebp imul mov or push sub or sbb (bad) in insb (bad) ret ret mov les lret fidivl pop aad xor sahf cmp mov sbb leave lret pop lret inc inc mov into push test loop jno call push mov xor lods xchg stc lock shrl push cltd add stos loopne mov adc and sub mov adc stc scas shrb in xchg sar int xchg lret jg jbe subl mov dec mov andb dec jbe sbb aaa subb push and dec test mov mov or xor fcomp les or fucomi mov subl push ss ret push or subl and jbe in loopne pop js mov rorb jmp dec test mov lret mov dec cwtl add sbb aam nop xchg and sbb loopne mov enter call mov add jge fistp bound mov sub repz rclb jecxz (bad) mov and xchg ret movsl xchg sub mov lods daa cld (bad) cmp into les jbe imul push aaa dec xchg xchg cwtl addr16 test mov adc dec iret inc cwtl or inc rcr mov (bad) fisubl mov stos sub inc mov pop les push mov lods inc mov jmp xchg nop push and inc mov (bad) jge xchg or mov nop xor add iret push into mov adc push (bad) add dec imul mov imul fstpt out xchg mov leave test mov mov roll mov scas cmp and stos (bad) dec cmp test ds stos (bad) cltd inc test out mov std rcll pop sbb cmp roll out and rcll adc inc lret adc mov add addr16 fwait in and mov cmpsl mov xor xchg xchg mov xchg jge clc push ret add fsubrs push lods das or sbb mov inc sub sbb adc or (bad) arpl xchg mov adcl rclb jns or push add aas mov fwait repz (bad) sbb jo mov lcall (bad) in or iret sbb and les les fsubl inc sti add mov xor inc cltd dec pop pop adc adc rcl jge or rorl loopne rcll sbb adc inc pop bound enter mov cmpsb mov ja sbb mov jo mov popf adc cwtl dec sub and jmp and arpl cmp mov andl aas enter xlat xchg subl and sub pop insb jns or movb nop mov insb jb mov test or add aas imulb and orl inc fmuls daa sub inc xor jae les clc in lret xchg loope (bad) repnz push lea je dec or add push testb pushf (bad) fwait mov lods xchg dec data16 test lods and (bad) and movsb data16 jge fs sub inc clc mov (bad) jge movsb lods xchg stos sub jae movsl adc std mov rcl sub ret jl cmpsl xchg (bad) xor fadds push or add insb out data16 inc push xlat adc inc sbb mov sub std (bad) test adc push (bad) or sub into xchg test shrl dec insl js rolb jmp stc outsl push mov xor ja loop cli add jge insb (bad) xor iret dec push add shrl pusha cmc push mov ljmp inc subl mov loop or add (bad) mov test push or addr16 jae call cmpl cwtl (bad) cmp sbb movsb cwtl jae sahf mov adc mov push ffree xchg cmpl in sbb and adc xchg adc dec or fdivr push in sbb mov cmp int rclb jp mov xchg xor (bad) sahf sbb or mov repnz and mov sub fldcw rorl cmp jp fild jge xchg adc popf enter pusha mov add test or les mov or (bad) pop xchg jne cli push push mov or incb push notl mov jns lcall insl andb loope dec xor rcll sbb lea (bad) pop mov mov scas xlat push mov (bad) icebp pop ret xchg jge nop xor loope clc movsb mov or je lods clc sub push out nop mov loopne or pop rclb testb xchg es dec popa loopne lods mov fistl lods int3 push mov leave cltd in xchg dec cmp mov inc int3 movsb leave (bad) mov mov jbe fcmovb lods or loopne lods test loopne (bad) lcall fs and cs adc scas lock rol sbb xchg inc jo dec (bad) loopne lods mov xchg or iret loopne lods mov push lcall mov add (bad) dec xor data16 mov mov add ja (bad) xchg pusha lret push mov int3 out test add (bad) mov iret fisubr fildl jecxz imul aam inc add push shll inc mov (bad) out int or add aaa dec sub iret (bad) enter loopne xor mov dec nop fistp lods xchg int in lret stos mov sub or sbb jns xchg xchg and pop pop daa out jl or mov xchg or rorl mov xor add (bad) into in push mov sbb ret push in or (bad) movsl cli lret es scas int3 sti dec es inc adc jae add add jb sbb and rorb aad sub inc pop test mov add fstpl mov (bad) repz insl out or ret mov add bound jne shrl mov push je cwtl movsb jge lods fistpll ret mov fstl rcr mov outsb nop sub fsubrs repnz pusha xchg rorl das dec xor adc and stos dec ret inc mov fsubl iret addr16 rcll xor adc push in das inc cmp dec or jge xchg sbb cmpsl lods push add xchg movl dec mov or xor inc mov jle pushf fimull push lahf mov xor outsb imul adc stc add in loop sbb jbe mov into (bad) jmp in jno mov xchg fs movsl pop es movsl out cmpl push fsts loop dec ja pop cmpsb adc xor ret test (bad) xchg sbb lods sbb iret cmpsb es pusha mov negl jb ds push adc push pop mov push inc andb insb xchg ret test sub and test mov pop push mov andb loopne and sbbl xor mov adc and mov push and mov mov add xor and cmp scas sub push push js insl add jbe push mov stc jne sub mov push push dec mov (bad) xchg cmp xchg into (bad) notb cmpsb cli jp lock and and test mov mov add aam cmpsb or add jae and int3 or lods outsb add sarb mov xorl int3 sub loopne lock iret adc movsb sbb into inc subl adc ret inc (bad) cmp pop jno inc add rol arpl lcall dec xchg add popa ret sub jno xor insb adc andl mov nop jnp fsubr popa popf mov mov push cmp add call fidivl inc pop inc (bad) or add aam pushf push fistl mov mov dec inc out mov pop ljmp inc les cmp loopne push adc mov jmp adc incb outsb cmp cld jno enter sub ret or push insl orl ret popf loopne fwait aaa push mov and bound clc movsb adc (bad) stos out jae inc mov jge test lret mov nop xor fiaddl jle addb or bound xchg add sub das nop aaa sarb push cmpsl or insb popf cmpsl pop inc push cmp sar jb rorl subl mov dec cmpl pushf out xor insl jg xchg lods mov mov sbb cwtl (bad) xor in sub (bad) icebp in stos add mov xchg movsl and sub mov movsb inc les jp and adc test mov ret sub mov jne movsl fist add sbb cltd in push add xlat cwtl sti test add mov xchg ja inc adc incl push and pop pop mov push or cmpl loope int3 arpl mov insb rolb lea and mov ret loop sbb inc lods push lock stos inc std addr16 adc lock and stos stos sub out idivb cmp lods (bad) jmp es mov push or xor xor sbb lock lea fs mov push push int popf sub pop sub pop cmpsl jnp lret fdivl add mov xchg movl lahf mov repnz push mov (bad) sub call jo popa (bad) stc inc aaa mov mov lret add pop std mov push pop (bad) loop sbb jle xor adc sbb adc shr mov xlat mov (bad) leave inc add loope or jnp jecxz cmp ret inc lret push dec (bad) (bad) jl dec shll mov movsb jne jmp in adc sub movsl aam mov (bad) sbb cmp out test cli shrb in mov repz dec mov fs cwtl cwtl clc mov ret add cwtl flds bswap xor pushf push sbb test mov loop adc inc sub and pop daa fisttp cmp int3 in add and jecxz mov inc outsl push leave and enter mov scas (bad) mov jns arpl xlat (bad) ja xlat pop mov sbb xchg fmul or (bad) les cmp add rolb xchg mov test add xchg mov enter stc sbb test dec stc sahf cmp sahf sub fdivp adc negb jnp aam dec and or sbb push or roll pop lods xchg sarb lock ror cmp scas sub enter fwait (bad) mov sub xor fdivrs repnz cmpsl les scas inc sub dec or roll lds adc push xor inc inc in mov mov adc clc and mov aam pop push loope xadd add push xchg pushf int3 lds (bad) pop imul pop outsl shrb mov andb mov add mov jb xor clc adc mov inc in pop and popa int3 stos or pop xchg stc adc or push pop jne jo sbb mov add xchg mov adc andl fnstcw or dec push pop push ffreep mov mov inc in (bad) addr16 cs in jecxz pusha push and push cld inc (bad) sbb or add inc popa mov sbb sbb jb lods pusha xor popa popa sbb fmull inc xor push and mov jae jmp mov mov xor (bad) aas icebp int insb les shrb sub and mov sbb cs std lret aas div mov jnp or lds test data16 add pushf push scas mov pop imul nop pop (bad) mov pusha ret sub fisttpl fs nop loopne inc mov jo imul iret add rcll aas adcl icebp lds stos loopne out popf (bad) mov add (bad) cmp pushf mov popa and shrb pop sbb (bad) or sub movsl jb xchg ret lock (bad) xor or add xchg fsubl sbb int3 in rclb popf in jnp push sub mov (bad) mov movl int3 sub pop cmpsb fisubr mov int mov rorb fild and lods fistl cmp cmp lahf sub adc aam pop insb dec sbb push test aaa xchg or enter sbb xchg adc scas xchg (bad) aad cmp adc int fildll rcll ret fmull sbb aaa js in roll in mov roll and and js stos add add (bad) xor push add add roll mov test push pusha inc dec push (bad) mov popa fcomp xchg (bad) repnz pop jp divl sub or sti and push pop nop loopne inc int3 sub mov rol (bad) into adc xlat out add xor pop ret or loopne add inc lock popa fnstcw popa inc jno or xchg imul fsubl add arpl (bad) sbb inc mov adc sahf enter mov or mov lahf inc inc (bad) mov (bad) js pop jns or sar (bad) shrl fsubr mov xlat xor outsl ret inc or popa pop xchg jl aam mov std mov fist inc inc stos movsb int3 add adc enter add rcr fcmove and xchg dec jbe fcmovu and fdivs inc cld test adc xchg rcll ficom and and fmull mov fnstcw sahf add xchg mov addl rcll (bad) jns jo pop or xchg (bad) or mov pop jo mov sbb lock pop sahf in xchg (bad) ljmp push fadd mov rcrl add aas movsb pop mov fs test adc imul jno sbb daa cmp nop movsb idivl mov dec (bad) push flds or fsubrs sarb clc stos pop add inc jb roll mov negb je adc mov (bad) ljmp pop test mov and mov js repnz mov shl test mov cltd insb or les dec je stc int3 aas (bad) jno sub rcr jns and ljmp sbb (bad) and fisttpll inc and ficom pop clc jmp mov rorl jnp add mov leave inc mov int3 cmp les sbb add mov add dec call cwtl xchg mov out and aas inc xor out push fadd shlb mov lds xchg pushf jb outsl out leave stos js fdivrl jae (bad) out mov (bad) adcb pop imul adc xor xor add jae lock jns mov cltd mov or (bad) sti lea xorl movsb add mov (bad) js jl jg fdivrl repnz sub add es mov mov out icebp (bad) sbb rcrb je dec add les in mov cmp xor xchg incb (bad) ljmp adc add (bad) fst fstl decl xlat pop prefetchw movsb psubb (bad) dec divl nop and push out jae loope cwtl ret stos in mov pop stc push sub adc fidivrl xorb movsl mov (bad) push add cs aaa xor in popf xor icebp sub fdivrs les and pop add xchg add adc addr16 push test outsb cmpsb cmp cmpsl xor sub gs sub add in add pop cmpl jo stos cmpsl stc push scas outsb (bad) and or mov (bad) xchg daa fwait xchg out pop mov adc adc loopne mov xlat mov sbb stc not pop (bad) cmpsl push inc mov adc inc sub pop (bad) pop (bad) rclb test xor lods nop (bad) cs sti test sub xor sub sbb loopne pop scas cmp cmp stos xor daa lea adc lock jecxz jge jmp ja mov jecxz adc add pop test int3 outsb sub inc sti inc push out cs push sti int3 jnp je sub aas ljmp jecxz adc out sti or or or xchg je cmp jns adc (bad) cmpsl (bad) jmp in stos and pop sbb jno jle into enter idivb shl sub jle test sbb mov mov and adc bound xchg mov jno pop sarb cmp push cmp jnp pop push fsubr cltd and add out test in enter aaa out or sbb sub pop bound call cmovno das mov add in ret sar aam popa inc xor mov and inc loope jae jle push sti adc imul dec in adc cltd sub movsb ret xor nop cmp xor cmc and xchg add sub adc enter and sbb sbb int3 inc adc add jns dec loop (bad) and jge push out jecxz out cmpl int3 jle jmp mov or pop cltd rclb test xor add add (bad) call into orl cmp std fiaddl add clc mov fdivrl sbb push ljmp add mov (bad) jp jg out imul or push ret dec cli lock add in xor xlat mov sub rcrb iret fwait (bad) mov sub popa push sub cmp fisttpl pop lock ja out mov or test or adc pop movsb rcrl adc xchg add mov lods adc pop or nop pop movl inc ljmp mov xchg (bad) repz pop inc or shll and (bad) fcomip in pop xor adc sub lods loop pop popa pop add jne lock test (bad) jno out fwait xchg (bad) les jp push mov outsl (bad) cmc orl adcl sub adc adc loope popa sbb in jle popf adc lret cmp mov outsb frstor (bad) adc add mov inc in jecxz mov adc dec out mov adc and ret movsb into les je mov ret das mov push lret adc enter sti xchg push jecxz adcl (bad) lret push outsb lods sub icebp or rolb movsb mov loopne fbstp ficom clc and pusha xchg mov leave fdivl daa ljmp jnp or movsl sar add insl sbb mov (bad) sub enter and add inc rcr sbb pop jbe ljmp sbb xorl pop add icebp enter mov jmp stc and mov imul jl fsubrl dec mov pusha add scas fisubrl out push mov popa iret xor (bad) or into imul out xchg sbb lea or xchg add mov mov (bad) adc xor pop mov rolb cmc stc add les in cld adc (bad) mov (bad) in and mov xchg mov and fadd cmpsb add arpl and jne dec mov (bad) jge (bad) fisttp sub add push out mov pop xchg add test in and and inc data16 mov nop incb icebp lret (bad) cmp fmuls (bad) std ja cmp mov test add push imul adc jecxz fs lret call fisttp mov sahf jge (bad) lock push cmpsb movsl bound add faddl fmul pop out enter rolb andl in push xor xchg inc push mov jmp mov (bad) jb cs lods pop js push (bad) xchg xchg push enter int3 inc sbb xchg push leave loop stc xchg and into (bad) hlt int3 adc ljmp lods push aas mov pop psubusb test dec (bad) dec mov sar movsb lret inc mov (bad) add push enter mov rolb inc ret xor xor cmpl xchg cmp repnz daa add in out push pop or nop popa xchg (bad) xor lods test lahf adc int3 insl inc and cmpsb push enter pop mov cmpsb mov add xchg and es cld (bad) imul jo aaa dec mov adcb add (bad) jnp inc loopne mov pop outsb jge mov sahf (bad) (bad) aaa test insb push insb sub aam in insl dec xchg sub ds cltd in cmp or xchg jo inc pop ja sbb (bad) sarl sbb adc fsubrs aas iret (bad) rclb js std (bad) cmp xchg mov es add adc xchg adc xchg arpl shl jb movsb mov (bad) mov data16 fiaddl xor pushf mov push (bad) xor and ror enter adc scas add inc insl out (bad) pushl dec gs add pop daa pop mov popf out xchg sub add jno fbld cmp loop cld stos iret icebp mov imul jp aad sbb popa loope jmp or dec imul in cmp (bad) sub pop pushf mov xorl loop sub mov dec rol subl lea out sarl push in adc xor out into and fistp imul dec sub push pop dec jnp aas mov push add test add loopne jo out jnp dec and in iret cli sub movsl mov xor or enter mov mov cmp add add (bad) lahf popa arpl mov cmp les push mov (bad) bound jae xchg add adc subl sbb aaa and ret rcl xchg xchg mov pop in out ret xorl mov lret mov inc int3 int3 adc les mov add dec ficoml (bad) adc call inc or movsb sbb mov add mov or xchg and (bad) mov (bad) jecxz mov mov pop sbb push add add inc popa jge push js outsb xchg mov xchg call fcomps std mov sbb lds in fucomip or sub sar les cmpsl es movsl (bad) es aas int3 aam ret mov bound rclb jl data16 jo (bad) lds cmp aad inc stc out inc cmp lods repz aad cld cs cmp cld add (bad) (bad) jns mov bound inc push out sbb and inc lret xchg dec loop mov flds pop add xchg inc adc xchg cli lods sbb rcr ja (bad) adc adc xlat std kmovb dec xchg cmpsl hlt xchg mov mov cmpsl push lret mov mov mov cmpsb sub pop add add sarl mov sbb mov call rcrb xchg loopne pop xchg xchg jl adc mov outsl dec sub arpl aam add mov inc paddb incb and dec mov sbb pop sub mov mov and bound inc add push jb loope (bad) jae push rcll and rorl mov jbe cli lret int sbb orl addl ret loopne clc ds xchg fdivrl in adc add outsb es rol arpl cmpsl lods fwait jl cmpl and mov cmp mov mov enter xor dec mov les mov jle sarb jle rol stos mov mov fimull push push testl adc flds jl ljmp jmp jmp push (bad) mov and ret or repz ljmp inc or lock loope sahf and hlt aad and lcall xchg xchg dec jl rol mov unpckhps aad fmull lcall ficompl in jnp pushf stos (bad) leave lret add in mov cmp xor cmp xchg cmpsl jnp mov outsl xchg mov jl lcall test inc les cmpl cltd sbb loopne xor pop pop repnz dec adc cmpsb ret cmpsl cmc les ficompl popa dec xor nop inc mov test and into sbb leave test mov add xchg dec movl iret or sti int stc add mov fdivs mov xchg pushf (bad) mov mov addr16 xchg add cmp mov pop mov scas (bad) mov das jns xchg test inc push mov pop xchg int ds xchg fimull aas ljmp cmp inc mov fdivrl mov push in jle imul lea insb (bad) out imul les or or push add int3 cmp xchg ret or sub jo fcmovnb (bad) cmp fisubrl ret (bad) cwtl loopne test mov pop inc pop mov (bad) cmp mov xlat lock pop sub lretw push inc pop ljmp mov cmp and jns sub test xor leave inc xor mov arpl fld leave loope out popa mov sahf adc arpl pop aad sbb dec mov mov insl out (bad) ret xor xchg bound dec mov jecxz inc movsl jns inc or les fstps adc fs cmpsl test scas cmp jnp xbegin push adc inc pop and jmp adc sub ficom sub dec rcrb xchg mov loopne adc test xor ret daa pop aad sbb mov mov or imull lcall stc clc mov (bad) fidivl sub inc daa sti iret aaa xchg jmp adc jae subb add (bad) icebp loope or xchg clc (bad) ja fcmove lret (bad) loope jl scas fwait mov xchg cmc into or sub jmp sub loope and popa idivl xchg adc xor enter aaa xchg ret dec inc mov outsl xchg lret cmpsl out outsb mov rcr xchg aas push ret sbb add dec push mov or xor pop roll sti mov push fisub mov leave mov shlb pop mov jae cwtl mov jnp les adc in cmpsl xchg sub dec pushf lds (bad) xlat idivb inc cmp sub movsl lcall loopne jmp outsl xchg es jg mov (bad) add rorb xor enter sub daa mov push (bad) (bad) jb lds lds es lahf out xchg addl jns js rcr xor sub out call aaa shrb test cmpsb jb or pop in icebp aas (bad) in lea pop jmp sbb (bad) bound add insb sub loop (bad) xor xchg aaa mov lea mov xchg into pop xchg sub pop insl pop sahf jbe add adc pop and dec divb add mov dec sub out dec test add sub (bad) leave inc es ret fild add adc and mov push jbe mov dec cmp xchg loope mov icebp adc inc dec mov daa out clc dec (bad) sbb mov fdivrs xor lock sub jge dec and aad cltd mov nop aam mov xor pop (bad) mov nop movsb mov push xchg cmp imul jbe inc shr test jge mov xchg mov jle inc inc mov movsb inc adc dec cmp scas sti sbb inc int push sub nop (bad) bound enter and adc clc movl into mov dec movsb pop fcoml cwtl lret mov jbe out dec sub js bound add lret clc jg pop gs sbb xor and mov add push fsubrp jle in xor (bad) push pop cltd mov fdivrl jmp mov xchg sub sbb xchg adc nop in mov push das test imul popa lret addl fmull xchg enter add sbb fmul add jmp cmp (bad) and shlb xchg pop aas xor leave mov pop ret cltd shlb xchg xchg jge push dec add movsb adc fstpt fdivl lret les stos adc in pop mov je mov ret test fs popl (bad) sbb enter mov ror mov sbb shl inc lods mov je hlt dec subl cmp and adc mov sub jo loop mov stos clc movsl test test pop sbb pop es (bad) (bad) iret ret insb adc cmp sub clc (bad) mov cmp pop (bad) xor into in stos loope adc jbe loope ljmp es mov adc lret outsl mov int3 cmc xor rorb jae scas js and mov mov push adc add mov scas mov and clc jae dec pop jge sub jb cmpsb aam adc je sub xor bound or push cmp inc inc adc mov stc popf adc daa cmp mov movsb cmp lahf adc enter ret fmuls in add add rcrb cli ljmp jae insl xchg addr16 into add add repz aam jae movsb pop out rcrb inc add movsl and adc inc jbe or nop cwtl negb lea mov lret int3 cli jge sbb ret adc not stc jb or lds xor push or cwtl movsb pop and daa mov mov jne mov clc test jg inc lods popf cmpsl les mov pop fsubrl add pop enter sbb insb mov fstpt out jnp sub popa jae addl push (bad) xor fsts (bad) clc je int inc icebp adc adc jns xor (bad) in enter shll test add fstps pushf or scas push lret xor jnp lods mov and sahf pop jp fs popa test mov ja fcmovb sbb xor add lahf mov mov xor mov mov jnp gs or sub push stc xor and mov mov test add jnp not shr inc sbb lods or lods fdivs sub ljmp leave rorb sub cmp xchg ljmp jns push dec aam cmpb repnz stos add adc (bad) repz mov mov sahf loop (bad) or fsubrs mov imul (bad) pop mov adc and sbb shrb cmp mov rol mov jo stos adc sbb test imul xchg roll push add movl sbb popf imul mov stc pop call bound nop add fdivl flds fiaddl arpl sbb mov hlt lret lret leave inc (bad) into (bad) ret aas (bad) lret add fdivl scas stc bound and aas jmp nop sub cmp fsubs fldl2e mov push push int3 pop mov mov push and sub js (bad) sub fadds pop mov mov rorb and inc repnz imulb xor sbb fcomps lock mov mov icebp xchg test data16 adc dec andl adc fcomps cmp push test sub push fild dec test jae orl push inc add xchg and mov add leave inc pop test mov adc inc outsb and fdivl mov add jmp incb mov add scas in shlb mov jo push mov jp jmp es (bad) pop (bad) leave ret mov inc inc (bad) mov pushf push aam sbb inc push mov and or pop pop dec (bad) insl lret ret mov mov leave add sub adc jnp and aas dec push adcl movsb mov ret add and inc sbb push (bad) insb nop inc sub or add loope push add into cmp adc loopne test mov cmp subl iret (bad) (bad) mov test mov icebp mov dec imul push sub xchg push mov jb int3 mov test stos (bad) mov aam dec loope dec mov adc or jmp sbb pop cli xor inc sbbl rol inc bound sbb inc aam mov rcr xchg inc jecxz popf jle cmpsl add nop push stos (bad) xor and (bad) ljmp aad mov adc cltd sub mov loop leave loope iret stos (bad) in pop cmp test out add dec sbb cli out int3 inc push dec and xchg jmp ss data16 adcl dec lret jae adc cmc sub shufps leave push sarl (bad) sbb bound stc mov mov fs cmp cmp xchg sub (bad) int3 fist in fimull shll add mov xor adc test aas and roll mov or push adc sbb jo and cmpsl mov cmp mov (bad) and add jl adc divl aad lods ds dec sub xor pushl inc cmc fdivs xchg mov mov in and je jge pop xor pop xor lods fs sbb test mov popf mov arpl aaa das lock popf movsb inc push xor push sub clc es sub test adc lock (bad) dec mov mov test data16 jmp in sub js adc aaa mov jo jge push push movsl (bad) loopne push sub fsubr imul or icebp mov jbe add (bad) cltd mov lea gs and add or jge bnd pop je movsl xor (bad) (bad) je imul xor dec or enter (bad) push lds leave xor stc sub jl cmp adc sub (bad) dec icebp mov int3 dec push pusha je cmp sub xchg jl pop xchg popa jl xchg pop xor mov nopl xor shr stos cwtl pushf cmp (bad) add repnz int xchg sahf sbb lods rcl sbb pop cmp add pop mov pop cmp jle inc pop in imul xchg cltd nop mov repnz in mov call add adc aad popf sbb out in (bad) bound add lcall and scas or ret inc leave nop adc into mov leave sahf test call jo xor mov xrelease xchg xor sub jecxz add enter fidivr das (bad) mov rcrl add inc mov push xchg push inc fnsave cmp add inc or (bad) clc loopne enter mov sbb push add xor pop mov inc mov js,pt mov dec sahf sub daa shr add pusha jle or adc pmullw jg push cmpsl dec adc (bad) (bad) pop in and enter test loope rolb imulb xchg rcrl adc iret pop insb and lods sub xlat lods or cmp jmp jnp sbb rol jp xchg mov jo and push push je mov mov pushf test pop into (bad) icebp in mov outsb int mov loopne inc dec xchg (bad) xor adc pop lret bound mov adc inc push movsb flds xlat dec add pop cs sub movsl adc mov scas fcoms xchg clc in and sbb jns popf adc ficompl (bad) xor adc mov inc icebp and mov mov ret add ret test mov loope loop adc mov push ss push inc mov jmp xchg sub mov xchg and or aaa pop push mov xchg lds je xchg adc int push xlat pop rclb aas ds dec xor ret mov pop fisttp and (bad) sahf push ret mov sbb sub mov (bad) mov jle inc ret popa stc addr16 jo and mov ret out pop cmp lcall cmpsb xchg xor add xchg jno jnp pusha cmp repnz imul pop mov loopne add add mov cmp pop mov test mov outsl imul xor out popa xchg dec out mov mov iret and bound mov cmp rorb iret pop loop incb les rclb lods cwtl dec rclb inc pop push dec mov sub dec and dec imul insb pop mov mov pop mov sbb enter push js jmp mov rol pusha outsl mov push and xor cmp adc or sbb (bad) mov lods shll xor test mov fs mov jmp add ja mov (bad) pop mov jae push scas cmp int3 mov and dec ret aam pop jns xchg imul or add in je pop cmp sar adc mov add sbb inc nop add push test lock push call scas or xchg mov cmp add cmp mov mov xchg xor pop jnp xchg jnp xchg add sub adc dec jmp add fdivrs aaa lods pop je int3 movb jmp mov lcall fstpl mov sahf int3 adc insb or and mov rorl jnp xchg jns jg lds or mov mov cli test mov int3 das cs hlt sub jnp incb mov imul push sar nop xchg mov cmp std adc mov lahf (bad) dec jecxz sti repnz sub sbb repnz aas sahf bnd or jnp ljmp and (bad) mov xor inc arpl xor repnz fiadd adc jmp dec push or and cmpl int push popf not xor fsubs repz stc stos push pusha cmp add popf rclb adcl (bad) xchg imul testl cmp inc imul sub mov leave pop int3 icebp or adc mov daa xchg lock into cmp mov jle cmp test mov pushf sahf test std inc (bad) push iret hlt int fidivl dec add cmpsb and pop xchg jge cmpsl aam pop je dec and mov or inc xchg movsb push test pmaxsw add jo xor enter faddl cld fildl push daa imul sub and mov cli mov mov xchg movsb loope movsb fs fidivl mov (bad) icebp scas rorb push xchg (bad) dec or int sahf and ret lods mov std test bound jecxz mov xchg cmpsl jp ficoml xchg sarl push sub mov pop mov sub inc inc pop leave pushf pusha fcmovbe inc mov sbb cmp int3 cli inc (bad) push jo scas add mov push rolb fmul cmp (bad) sbb cltd lods add icebp inc inc das cs sub and or rorb lds in xor push adc push xchg inc or or rcrb scas sbb jp imul mov repz mov cmp out mov cmp repz mov (bad) jae movsb or cmpsl jnp push inc add in inc fstps add add rclb cmp test test ret inc pop mov jns push int3 and ja mov dec push pop cmp push add hlt es push xor les add add xchg sbb xor or out mov sbb into shlb xchg add fistpll xor movsl (bad) test mov aam cmpsl fistpll mov xchg and xor add mov nop push mulb sbbl lods into or push push pop jae loopne xchg pop movaps jmp jne jbe into (bad) enter ret adc movsb sub movsl inc mov mov enter cmpl fsts andl mov (bad) mov pop add (bad) fsubl mov imul (bad) rorb repnz mov xchg mov sar std push xchg or push dec mov shll jmpw mov movsl cli inc sub jl in adcl inc aam sahf rcll pop nop pop jo test call stc loop sbb pop mov int mov xor and jae adc and insb out cmpsb test iret dec test cmpsl mov or dec jbe push and inc push or mov mov in dec mov or bound mov loopne xorl push jge fimul mov nop iret push insl ja or pop add adc xchg mov (bad) sahf mov clc cmpsb mov xchg lret push addr16 mov lcall xor popf dec mov loop (bad) jp movsl dec dec repnz call cltd aaa pushf xchg fsin sub adc mov fistp out seto imull loop adc jno add jp push push push and push inc add xchg and sti jnp mov popf arpl sub inc mov in xor pop insl outsl xor jb addr16 out inc test inc sahf mov jbe stos dec xor inc sti stc loopne (bad) cwtl and push or ljmp sbb cmp vprotb dec pop ja and pusha sbb xchg pmovmskb xor mov pushf mov add add add lcall mov pop fild lahf clc fistpl into xlat loopne mov incl cwtl add xchg pop rclb fmull pop (bad) sbb mov add ljmp ret cmp test or sub imul test ds mov xlat mov add fisttp lahf enter and nop inc xlat push inc cmp nop mov mov and add lret dec test or loopne imul iret fistpll pop bswap out push push dec jge pop cmpsb lea dec mov fcoms mov lea pop roll push andb inc shrb stos and or mov insb loopne cmpsl in push dec and popl jmp enter cmp mov ljmp sub dec add mov (bad) mov rclb rcrb or add imul mov bswap fmul and add push jne add mov add add loopne inc int3 cmp cli nop test pop dec mov loopne dec mov test mov (bad) iret ret add xchg xchg mov jo inc popf sbb std cmp mov fsts dec cmp lock push add sbb jae xchg lcall push add lods push repnz mov cli insl mov dec mov clc nop push mov and mov or loopne bound mov nop xor cli fisubrl inc (bad) sub or scas and sbb xor shlb mov and sub add push xchg js pushf movl inc jae adc sub (bad) sarb xor sub movsl loopne nop dec (bad) aas or mov dec jle cmpsl std bswap sbb hlt loopne jb sub adc xor dec into pop ret movsl out stc xchg cld sub pop mov sub add add repz and mov stc out cli ret add inc add sub xor in pop mov int mov xchg lock dec add shr and out xchg sub aas andl push sbb sbb lea repnz (bad) rclb mov jo jp adc leave mov xchg jp cmpsb mov inc add (bad) and lods lea xor mov push dec adc dec jae fmull fnstenv adc mov movsl or fld pop pop data16 sbb sbb inc adc lcall lret test push lods (bad) xor add fisttp sti test pop xchg add fstpl and outsb daa dec mov mov push lock jmp pop xchg push mov insb adc inc mov cwtl add mov mov add les mov sarb (bad) xchg add push scas jl aam loop in and mov xchg je xchg xor lahf (bad) and mov pop xchg push inc nop pop clc mov add mov (bad) xor adc rclb loopne loop test xor nop mov mov addr16 popa inc add add movb out ja lcall cwtl dec pop cmp (bad) adc pop sub int3 in cwtl inc push and add inc inc jne popa or inc stc arpl mov mov mov nop and (bad) imul cmp mov pop cmp lods rcl mov pushf mov (bad) (bad) gs push enter jae lret ret pop aaa or sub jnp xor pushf je and ja inc xor movsb mov out stos mov jb cmpsb push rol (bad) loope mov sub popa cltd sar imul xchg push add dec fstps and ljmp push loop neg roll xchg add les mov ret aam movsl mov jns (bad) mov sub adc fs pushf inc aam out flds ret xchg jecxz dec clc leave in (bad) xor scas test shr movsl in xor cld xchg rol jg fmuls faddl pop pushf or insb andl sub pop cli add (bad) fist lahf xchg mov ret mov mov cmp daa mov mov or inc int3 inc repz dec inc imul popa dec mov clc lods jle push mov iret movsb xor mov jb int3 pop fs or sbb and sub (bad) fmull pop mov adc fstpl sahf mov adc mov cmp xor inc pop cmp xchg int or mov in mov xchg in jb rolb jge push inc or dec push jle xor xor popf mov add inc pop (bad) and fimul xchg dec push jbe adc xor (bad) jbe add dec push push xor xchg mov fildl aam and mov or or mov sbb xor cmpsl imulb movb bound xor mov lods lods adc js ret cwtl and mov mov sbb lods jp adc int3 dec mov mov clc movsl sub jl or test movsb xchg mov bound sbb fs xchg in push and adc xor andl mov mov test mov out adc (bad) fcoml inc fstpt test push addl int shll test mov ja adc inc in mov and cmpl dec cli subl cmp (bad) loopne add mov mov cmp jnp sub out (bad) sarb clts adc xchg lds jno xor ficoml mov ficomp pop mov inc outsb outsb push outsb outsl lds fnop pushf mov mov insl lods xchg popa sbb or pandn movsl shll and js jo xor adc push push and add dec mov (bad) fildl sub test xor xchg mov fist lcall pop test and ds insb pop push push loop jae nop jb dec loopne xor mov push add cwtl jno sub fdiv jae (bad) rclb push int3 inc inc dec add ja call sbb repnz mov dec xchg xor enter add xor imulb cmp dec mov xor mov mov push mov and push fildl dec jne jno mov push in mov cmpsl (bad) stos fildll lahf fistpll and stos and jb xchg lret jns arpl cmp and mov (bad) sbb popa shrl loop ss dec mov mov loope sbbb and ror stc adc arpl adc mov sub mov add push (bad) lea es test and sahf cmp rdtsc leave fsubrs dec mov jnp imul enter das cmpsb andl mulps rcl les adc push adc add mov pop xlat out xchg lods xchg loop insl pop lret daa movsl bswap sub mov call nop lcall test dec int3 mov mov dec rorb stos sbb adc mov iret and jne lcall notl les les add (bad) (bad) add mov and (bad) xchg adc jp jle and iret inc fdivl iret (bad) repnz (bad) pop ja pop mov sub sub dec mov ret aam lret or sub test pop xor sub sub hlt xchg mov nop fild test enter aam leave fbld les fisttp out ja push mov push ret sbb mov inc lock dec pushf xor lds dec and loopne push insb mov adc push ret rolb fyl2xp1 push sub aam or mov (bad) das sub or add and lcall sbb push adc adc loope cmp into xchg jp data16 daa adc lock insl mov pusha dec dec mov add push (bad) jl xlat cmp movsb into adc or mov xchg arpl xchg (bad) maskmovq notl push repnz adcl dec faddl and add ret leave lock jns int movsb scas pop (bad) xchg iret mov and and mov xchg aas add pop dec adc or dec and test notl add clc adc lock xchg sub lahf pop push push mov std (bad) push fadd add shr xor (bad) add mov test movsl aas test outsb push add cmp mov mov scas jae xor mov or sti addl (bad) sbb ja ret fdivl popa into loopne push mov test fdivl adc and fldt mov push or xchg adc dec dec lods roll mov repnz pop insb je (bad) je scas loopne jmp sbb sub (bad) dec add pop loopne inc rcr adc mov aas cmpsl pusha iret aaa movsb rcrl jno jae cli imul loopne add lret loop clc or scas or push in aas adc sahf pop lods mov xchg fldenv and sbb test mov xchg out stos mov mov inc xchg clc jne push dec jg and and jle cltd loope mov mov in sub stos jmp adc dec dec ret bound test aad aas mov lock and and loope out sub std mov fs shr shl cmp outsb xchg dec mov mov shrb cmpl movsb push cwtl stc mov mov (bad) or sub in or jno insl shl add ret iret push rorl mov ret add and popf xchg pop dec imul mov mov in pop cmp cmp dec cli mov sar into std and imul aam outsb jns and jne cmp xor push sub gs push bound rcl xchg mov cli mov je pushf push inc mov int3 cmp lret aam loopne (bad) das mov fdivl rcl rol pop xchg mov repnz fistpll scas addr16 xchg or pop rcl loopne push xchg mov and (bad) in mov test xor (bad) lret mov (bad) mov mov ret dec pop pop (bad) sub insl loop stc and add mov adc outsb aas stos (bad) mov std mov (bad) loopne popa nop movsl mov cwtl nop cmp (bad) sub push das test pop nop lods (bad) sub and loope mov rol hlt jle ret adc (bad) roll js insl (bad) repnz jns (bad) dec inc push mov insl aas mov xlat add mov int sti sbb lds orb pop pop sbb cmpsb aad adc pop jmp mov or jne mov mov push jmp jnp jbe inc xchg sbb push add rorb cmp loope mov inc enter xchg xor mov je movsb loopne and test xlat mov clc in sti nop sarb mov jmp mov push test repz add in cmp add lods add adc lret popa icebp inc fldcw mov fcomp ljmp lods insb test inc mov mov adc (bad) ret sbb ds mov cwtl mov mov stos mov ffreep jg pop inc push adc cmp dec adc cld push pusha in inc dec xor data16 in cmp jl insl int3 (bad) jecxz lret (bad) mov jae into lret or dec je loope icebp sub xor cmp sub orb mov fsub jae pop repnz pand lock mov loope fcmovb orb sbb sub fsubs clc mov mov sub mov mov mov jge and jge dec call lahf (bad) adc add xchg ds das nop sahf (bad) xor add repnz sahf int fisttpl mov pop push fs mov fdiv ret or frstor out sbb fistpl fs inc xor dec cmpsb mov push sbb lock sahf cmp adc add sub jo or repnz (bad) cmp rcr lds pop inc aam fcomp xor inc test cmp sbb inc jb jae jbe std inc xor pop dec pop into push push int3 xchg loopne fadd adc mov fs or roll cmp pop sar xlat dec push rorl jp jmp and aad push aad imul adc rcll aaa das rol loop jle add pop jge loop dec ret (bad) stc xor mov sbb inc dec and enter push sub and sub cs orb mov pop (bad) std xor mov adc fwait add cmp fsub ret inc mov xor mov adc mov out jns pop sub push mov add pop arpl dec iret xchg inc xchg inc mov jns sub sbb leave jbe cli repnz xchg add and repnz faddp mov and adc add add mov or cld pop out jp ss sub dec mov dec bound xor icebp mov fcmovnb enter and sbb aaa fsubl icebp jecxz push and (bad) mov popf subl or add jg pop hlt sarl xorl frstor mov call sub mov ret cmp adc rcll sub lea loopne (bad) jnp pop icebp (bad) inc fcoms sub bnd inc test outsl nop rolb fcoml sub and add gs sbb mov fildll les popa in das mov sbb sbb cmp pop adc mov stc cmc mov adc mov les xchg or sbb or in sub int3 pop lahf movsl ja leave inc cwtl repnz mov pop dec xlat add bound and loop inc (bad) push jb sub add cmp (bad) sub add test adcl lret test icebp and xchg loopne pushf (bad) cwtl out pop mov cmp xor jne sub enter inc imulb ds repnz aam sub mov popa popf fst dec lcall lret aad jo popa nop sarb (bad) fidiv ljmp (bad) pop test cmp insl adc cmp movsl push dec jno insb jns mov pop fcompl ficomp mov xor pop xor pop mov mul inc out xlat movl movsl ret rorl (bad) or fiaddl ret (bad) fcomip ficomp sub mov xor popa cmp pop mov je add ret cwtl mov xchg sarl repnz in ficoml pop or xor lcall cmp insb enter inc jge lods mov pop cmc dec adc lret mov js adc (bad) gs in cmp cwtl dec sbb xlat (bad) das jnp popf (bad) mov add (bad) jo popa pushf js adc xor loop cmpsb mov lods jl daa aad xchg nop mov rclb xchg lods jnp mov jae inc daa lods in lods mov das jl or jl es insl push test in mov add xor mov sub sbb dec shrb std xchg out cmp lds lahf adc and adc mov jns shll or les inc nop mov in loope jge inc rcrb ret add or int3 inc xchg loop mov xchg push sbb sub inc or cmpsb add jo push adc mov ds int rcrl out dec in into pop mov push add xchg push notl lret imul test ja test fisubr wrmsr mov cltd inc mov in xor dec scas stc sbb rcr movswl cmp gs fcos xor xor test adc clc xchg fimull imul aas retw stos js adc mov dec or mov stc xor add mov inc jo adc sbb aad push fmuls notl sahf jecxz or out stos clc push fstl mov mov lock jnp inc mov mov shll add jae xchg cmpsl fild aaa test arpl push jae adc stos test jae and inc mov cmp lods ss or (bad) pop jge cli xchg loopne or iret andl imul cld pop clc es enter fmull adc add sub (bad) or xchg rol xchg jns inc add ret mov xor fcoml xchg mov and jnp dec fstp mov rcrb fcmovb mov mov sub mov mov loopne push enter and leave jl sbb and les xor iret lcall or loop int jecxz xor mull or (bad) test cmp jne add addb out push pop inc lock roll mov and lds je pop ret nop adc gs push test mov lock loopne mov or cmp push sbbl std dec into fucom xor aas ret mov test jo test mov push mov ss mov dec or shll imul add mov test push push xor mov push pop daa lret pop fsubl sub sub mov adc inc jle pusha int3 (bad) enter dec mov inc sub out jecxz,pt sbb mov jmp scas push push dec add xor lret push call dec rorl sbb mov or push fisub test jp js daa cwtl cmp or sub or cmp (bad) sub inc sub bound shll loop cmp jns cmp lods out and arpl inc jmp out pop add pop cmc movsl test jg test pop out inc jge (bad) xchg mov push out sub mov cmp repnz out lret push popa in add add sbb and imul cltd pop push (bad) pushf xchg add fdivl fwait adc sub call movsl popa push sbb inc dec cmp push and jle fiaddl scas loope xchg xchg sbb add lahf stos fs test je mov mov (bad) inc aaa cmp cmp xor mov xor (bad) repnz push mov ret es add int3 adc mov dec lret imul xor push sub inc xchg xchg and and (bad) fldt fdivrs arpl add mov add lock aas (bad) stc ret mov out jns lods fs enter xor xchg and fstl adc sar xor adc jae mov jo push insl stos sti mov (bad) ljmp bswap cmp rcr mov daa dec mov or cmp test nop cli aaa xor movsb pusha repnz rclb subl ljmp push js xchg movsl sbb loopne xchg push xchg cltd int lret shrl xchg iret cli xchg enter xor add cmp xchg ret sub sub ret sub mov mov lea and add movsb (bad) jmp pushf jb push enter add sub cmp push stos arpl jmp sub insb sahf popf and andl mov in add mov movl lock mov lcall dec adc jno test rol inc dec (bad) hlt adc jmp daa inc fnop push xchg add aad xchg (bad) aad mov cmp arpl adc popf scas ret jle in mov js shrb in push (bad) lods jno lea dec pop popa jo inc jbe test mov cmp xor add cltd fild dec push rol push xchg cmpl xor cwtl jle add (bad) loopne inc push pop mov adcl rorl mov outsb or cmpsl fs test sbb add inc mov test jns and cmpl hlt inc cmp inc add jle enter xchg daa mov adc push addl movsb pop mov loopne fidivl or movsb push mov lcall cltd mov mov lock push ficoml int3 fsubrp mov insl inc dec cmp hlt dec lret cmp out mov lds adc dec rcrb cmp inc xchg int3 xor test push dec jnp add cmp (bad) leave and (bad) ds call sbb pusha call or stos loopne cltd shl mov ret add cmp fdivl out enter push xor inc cmp dec pop sbb dec inc sbb les in push nop fildll shr mov fildll mov (bad) aam insb pop clc and add mov les (bad) jnp adc push dec sbb xor jg sub test test sub int3 push or nop dec mov dec mov pop pop stc add fstp vunpckhps js (bad) inc (bad) les mov mov inc nopl pop add and data16 lock jge pushf mov mov (bad) add (bad) add loope stc inc ja adc add jno and dec inc mov je sbb jnp movb movsl cli jmp and lods mov push inc push mov pusha icebp (bad) cli sub adc aad xchg adc cmp add test mov and (bad) je fwait pop xchg sbb loope dec sub mov inc mov inc lods push ret pop out ret adc or icebp and mov add mov push sub and mov mov pop pop ljmp out xor orl push fdivl movb adc clc mov sub mov arpl out aas dec inc test cli cmp ret movsb popa lock adc cwtl mov xlat jne cwtl or mov xor int3 (bad) dec test jmp inc fcomps in inc repnz xchg xchg ljmp imul jmp inc mov inc jae push dec fistpll adc cli or movsl jmp mov mov (bad) cli add ret repz ror jmp arpl outsb mov pop mov fildl jmp (bad) repnz cld lret nop out mov or popa cwtl adc and ja or (bad) mull pusha mov adc lock test adc lods out insl daa mov sbb (bad) hlt mov jns lcall mov jnp ds outsl push enter xchg add xchg repnz adc mov (bad) loopne enter (bad) push stos xchg sbbl jnp sbb sub push sbbl adc push inc mov xlat pop mov fidivrl xchg adc mov in rorb inc aam inc xchg fwait rolb add faddp adc repz or mov or adc pop mov add arpl test cmp add pushf jge jp sbb xor add adc pop pop dec rorb lahf sbbl push cmp test out xchg out fwait pop test mov mov es test test sbb sarb or fsubl int3 dec cmp stc mov lds cs mov fisttp lods int jnp push cmp cmpl (bad) test xor push or add fs nop clc or insl popa test gs ficompl out ja stos inc int3 push out adc shlb mov or (bad) icebp push mulb push xor (bad) mov dec pop adc js mov cs rclb and and inc movsl leave into aam add push rcr mov mov je sti repnz loop,pn ret add (bad) add adc cmpl fstl test mov mov adc pop int3 and pop pop out dec cmp add mov mov pop sbb sbb jmp push xchg pop (bad) xor mov push xchg loop or pop into je sbb out and add cmpsb xchg inc push into lods shll sbb in adc imul sub xor xor (bad) push popf add xlat int jno xchg pop les mov cld adc push sub and mov test cmp test pop push insb inc addl mov jo scas mov cmp arpl xchg xor loopne jb fsubrl add iret or adc sarb jl das mov push sub inc jp in in mov add inc dec jno sbb xor sarl adc inc stos aaa cltd (bad) and add cmp iret lret inc mov mov (bad) jmp movsb xchg sbb jge jbe xor jae xchg rorl dec mov lock dec mov into repnz mov rorl add mov jecxz adcl and or nop cmc adc sarb mov cmp xchg pop inc mov les arpl sarl lock stos dec jns outsl ljmp loopne push dec or xchg mov mov xchg or jecxz jno mov dec inc loop add lods push cwtl xchg imul lods adc cmc repz xchg lds outsl (bad) push nop jae mov or mov adc aad adc cli adc sbb pop es popf lods ret shrl gs (bad) cmp sub pop mov popf popf pop xor inc add pop xlat mov lods call mov add loopne mov hlt insb pop jae imul sub mov rol xor out fcoms pop fdivrp lds pop mov nop pushf or inc jmp dec pusha mov popa (bad) jno adc adc shll movsb cmpl gs cmp lret mov lds std mov lds iret jns mov add xchg xor insl mov sarb add hlt sbb mov aad pop iret add sbb (bad) xchg (bad) lcall ds (bad) xor push mov fucomi dec cwtl mov add push fsubl add push push and or out sub inc push pop pop shlb (bad) and test inc arpl add stc (bad) adc mov lock and test add cwtl aas mov subl pushf clc ret and sub mov out rol lds xor or xor aam pop dec pop mov xchg xchg cwtd sbb push shrb pop (bad) and call (bad) dec jo adc xchg xchg and sbb or mov daa xchg pop push outsb in lock cmpsb sahf cli push (bad) dec shrl lret and xor out push push into mov stos push pop sub pop lahf test fisubl inc les adc lock (bad) mov jno pop mov jg shl xchg popa rol mov sub vmovntps out fdivrs mov adc repz mov mov adc (bad) xchg nop in dec rcrb fist fs add les ret (bad) and lds movsb push and (bad) inc sub xor jb aaa xchg inc mov lret push mov inc aam (bad) outsb fisttpll and test lods pop xchg (bad) out sbb lods xor rcr clc call mov jle fidiv pop fwait jns arpl sub jecxz mov lea and rol mov or cltd ret loopne adc js in ret rdtsc mov nop mov inc cmp aam subl lds or dec fdivr adc pop jbe popf xor fs cli push in cmp sub ret loope and add mov add ret and jno popa imul loopne mov cmpsl test sbb adc xor and loopne dec in pushl loope movsl sub push enter dec iret imul sub shll or add and mov (bad) (bad) and or movsl not addb xor add xchg rcll popa test insl push data16 sbb add xor cmpsb sub and adc stc fnop insb push je fldt sbb pop sbb or loopne push ret dec ja inc mov pop (bad) loope hlt icebp mov mov mov movsl or stc adc cmp and aam sti mov imul mov icebp push pop add cli rcrb mov xchg inc rorl ss lods xor and lock xchg movsl jecxz cmpsb adc inc je and mov fistp pop loope xor and js leave dec mov xor lret scas mov adc xchg cmpsl not fdivs cmp jl leave sarb shll loopne ficom aad (bad) sbb (bad) jae in gs js adc cli negl dec jae sub test sub das rorl iret aas adc out or dec stc pop adc aad hlt aad push (bad) cmc xchg pop subl add mov repnz dec mov jle xor loopne test adc lods cmp (bad) or jle mov jnp inc adc add adc cmp out push push sub loopne aam mov or mov repz cltd adc xchg out ds sahf adc xchg or loopne sahf std jnp xchg mov xlat pusha fsubrs sub cmp int pop xlat sub pop jae xor out sub ds je xchg pop or notb adc jnp stos cmpsb jmp fs xor ja jl jae sub mov cmp mov xor mov adc xchg xor pop sti enter inc (bad) push clc lcall cmp outsl xchg rorl lock xorl xor arpl push aaa data16 pop test xorl out mov add sub loopne and inc mov pop js sbb imul push nop fsts rclb xchg test or inc add addl stc dec sub std add mov (bad) and cmp mov movl dec mov cmp add xor jge mov outsl add fstp sbb cltd nop imul mov rcr lock jge hlt push jg lret xor je popa pusha fdivs jb or and inc mov mov sbb roll pop push mov push add push inc out and mov xchg out shlb stc xchg (bad) repnz mov pusha mov push fstpl iret xchg xor jg inc pop leave repnz pop stc dec jle loopne pusha sub test pop out movsb fwait outsl and jnp arpl sub addr16 leave dec jmp stos push xchg sbb and pop aad mov mov push aas roll or mov ret mov test jge pop data16 (bad) inc outsl pop or into repz xlat stos sbb nop pop sbb push push and ret inc ret xchg fbld cltd sahf jae cli push mov inc in inc add ret mov inc inc adc fidivrl mov pop das push jmp cmp cwtl adc or (bad) or sub call push sub (bad) adc add dec icebp enter ret js cmc pop mov fbstp stos sbb xor inc pop icebp loope andl and sub lret xchg add (bad) jnp pop jae mov out cmpsl mov sub cmp and mov (bad) jo xor or cltd pop inc out inc roll rolb call fsubl daa out out mov iret pop add lret test adc mov xor lods imul mov sbb daa push pusha dec jnp dec sbb cmp icebp ficoml pop add into sbb das pop jge cmpsl push push pop cmp xor cmpsb fcoml mov nop and fadd f2xm1 jae test ds jns (bad) jbe out xchg scas paddusb and mov int lods sbb push mov and nop inc dec in loopne out cltd sub clc fadds cmc rclb push jle mov std lods fs jmp mov add jnp loopne sahf jo adc std add test test mov sub mov mov pop mov mov imull add clc ss in (bad) repz and nop hlt add hlt mov mov adc dec fsubs hlt mov xchg add mov shrb stc cmp cmpsb movsb (bad) lock add mov adc sub inc or adc outsb pop test cld ret add mov mov enter fcoml in jnp divb shl (bad) adc lock loop je ret inc arpl or ljmp add xchg mov hlt cmpsl dec lds test (bad) cld nop xchg cmp in jne cmpl push jl cmp sahf pop lock xor add into jae adc movsl enter inc js pop sahf int3 sub dec mov mov (bad) fcoms cmp subl outsb cmpsl cli fisttp pop pop fs orl xchg cmpl cmpsb sbb pop loopne pusha add cmpsl mov int3 je dec fstps stos push js dec inc add jb sarl roll loope ret clc loop mov test ds xchg subl xchg xchg flds adc cmp adc jno mov fadds adc repz aam fcoml mov out mov jnp add rolb out (bad) fisubl sahf addr16 (bad) mov ret mov (bad) mov (bad) fs jle cmp test cmp iret mov xchg sahf pop xchg sbb fmulp adc sbb jg mov pop cmovbe dec ret mov loop movsl mov xchg mov (bad) loope sub mov shrb hlt add inc insb cwtl sub ja test mov mov mov andl mov fisttp fnstsw ret adc adc and ret cmp sti jb cmp iret mov mov add loopne sbb (bad) aad jo pop repnz jo lret push sub (bad) mov mov inc add loopne leave push jns scas xor (bad) idivl jo (bad) roll inc (bad) mulb fdivrl push mov (bad) and mov push pop rol hlt lods lods fs or pop push stos mov mov inc push jns sbb fiadd sbb mov addr16 sbb cwtl xor jnp aad stos dec mov (bad) mov mov push into addl sbbb sahf imul fadd repz test (bad) push sti xchg lds (bad) pop (bad) icebp add adc add sbb daa xchg and daa xor jg stos movsl cwtl outsb sahf jae mov in sub ret out mov dec cli lods push jmp jecxz mov push ret movsb mov push jg xchg nop and sbb shrl mov fisttpl push sub and inc jmp movsb mov or sahf sbb inc dec mov pop jbe cltd dec pop mov jecxz adc push repnz test test (bad) xor push push or clc mov pop sub hlt (bad) sub out call pop les xor and mov or add sbbl jo pusha jae add mov bound aas adc rcl adc adc in and fsts pop (bad) outsb mov jg xchg mov lea mov repnz push add xor les add cmpsl mov adc rolb ja into mov aas pop or leave cli and cmp mov xchg repz add fmull add jne js repnz xor fnstenv call stos sarl cwtl inc leave add and in push nop pop lcall adc test jecxz nop pop mov dec shll mov add arpl movsb int in jge,pn lock insb jae (bad) mov dec add mov dec dec push pop std dec push aam jno push loope adc bound cld mov and inc or in rcrb pop notb cmpsb les hlt and xchg pop das je xchg ret fmull mov rolb iret lahf xchg (bad) lds ret loope pop adc add pop jo jle and mov (bad) (bad) scas jae jle and xchg fdiv mov mov adc adc dec (bad) push js adc dec inc jnp sub shlb out jge jmp mov and pop xchg adc add loopne inc in movsb outsl dec xor ret mov test inc sub mov hlt nop pop lock adc fnstenv aam jmp out das add adc cmp jb push jecxz cwtl in stos mov outsl dec cs cs push add (bad) fsubs or int3 jb push or push add sbb jae out cmp jecxz cmp sbb (bad) push mov jns jnp enter andb cwtl adc jle mov mov push (bad) and mov xchg xchg cltd cmp pop imul sbb adc inc adc lret cli aad push repnz scas std add loopne outsb sbb leave sarl enter (bad) xor push mov cmp (bad) sbb pushf pop les sbb xlat addr16 repnz fildl pop clc repnz cli fcmovu xor add adc sbbl and sub mov jb std test cmp outsb pop dec ficompl repnz ret cmp sbb sahf cmp dec pop ret pusha inc lret add cld imul xor mov mov add (bad) and mov pop mov int repnz (bad) xchg into or pop (bad) xor cli sub cmp xchg inc in data16 xchg int3 jnp aad adc xchg xlat add cmpsb (bad) mov pushf jo add sbb mov push mov jo orl mov rclb add int3 clc in jp jnp ja xchg adc jmp and sbbl lea jne (bad) les jb mov bound cltd mov push not push or sbb adc ds mov mov fcomps xor arpl push andl mov mov enter pushf jo lods nop jp and sub inc pushf je cwtl mov cltd mov xchg pop aam (bad) jbe dec out into lods cmp loope es popa loope les outsb mov add mov repz or in movsb mov addr16 lods test pop (bad) mov dec xchg adc cli inc loopne mov lds test enter lds lahf push dec xchg cmp mov cli pop pop mov pushf xlat lcall mov jae cltd dec sbbl inc loope lahf adc hlt int mov mov mov mov inc sub in addl sbb push mov pop and mov xchg movsl (bad) mov mov into xor adc add mov jg in inc mov leave call dec and and mov mov movaps test out dec push inc adc sbb adc and int3 add jle dec inc dec (bad) sti add xor out (bad) adc mov push movsb sbb adc inc sub cmp xchg and xor daa add fistl addr16 mov or push inc ret xchg (bad) lds (bad) into xchg inc sbb dec xor int leave dec in xor pop leave pop outsb mov jae pop out pop lock xchg inc sbb mov (bad) loope xlat pop adc cmp jne and mov or sub cmc push jmp mov push (bad) xor push fldl xchg gs scas xor (bad) jne arpl fs jo or mov cltd sbb mov xchg int3 es mov addl pushf xchg mov aas cmp mov xor sbbl add pop mov adc push xchg pop and aaa cltd lock and lods mov dec dec roll pop dec repnz in push mov inc fcomi add fucom cwtl int shll mov cmpsb hlt push fimul mov out fist aaa mov daa ja add adc sar iret cs clc int3 out push mull mov (bad) mov pop (bad) out mov push push cmpsl inc sahf push lcall (bad) xchg or (bad) out pusha pop lcall pop dec andb test sbb rcr mov lret sub sarl mov sub sbb mov mov mov popa mov or pop lret adc mov xchg mov (bad) sub and mov jmp rol adc and xchg push push and pop xor adc jnp jmp mov daa imul cli ror lret sub rcrl shlb (bad) push movb rolb sbb pop lock and mov jns xor inc in pop add ja fild xor dec sahf jmp call sbb fstps jle push pop or xor cmp js call mov inc sahf fnstcw dec inc ss cmp sub fimull fwait add in add cmp in cmc sub movsb mov mov xchg sbb test test and add adc aas leave dec shlb lock mov iret mov clc xor pop out cwtl xchg jno mov xor enter (bad) xor mov test sub shll enter fistpll mov or pushf (bad) and and nop sbb inc xchg xchg sub rclb test jo xor andl shr lods pop cmp es sbb pop (bad) and fimull xchg lock inc jae js sub into in cltd push aam adc sub cmpsb loope or mov add pop xchg daa cwtl sbb (bad) shlb adc sbb inc ljmp mov push dec int cmp fiaddl (bad) mov fucomip adc dec pop pop dec or stos xchg aam and add in add aam ret test movsb cmc scas mov jg popa loopne pop (bad) xor adc pusha mov imul call in and imul cwtl inc sub ret repz jge or bound add push lock sbb loop push loope hlt gs xchg pop and sbb sti andl (bad) out in sub push mov dec mov mov call and xchg shll mov rcrb sbb jmp sarb ds mov inc mov mov cmpsl or push ljmp cmc lret inc movsl dec xor sbb test in test out ret add loopne push sbb mov adc inc call pop js add mov (bad) mov xchg add xchg ret jecxz subl rol in in or jl clc adc pop vcmpss iret sbb jo mov add xor fsub int3 jmp and fisubr mov iret mov sbb dec iret sub cs or adc stos loope pop pop mov push sbb or lcall mov dec jns xor dec and lds push test out sbb (bad) pop jecxz and test hlt (bad) call mov push mov rorl pop sbb movsb nop cmp inc ss mov add mov mov scas movsb mov subl repnz mov (bad) mov and adc push mov or lret icebp push and int3 cmp xchg mov cmp mov cmp repnz xchg sahf and fucom enter mov (bad) addr16 nop leave mov test add mov xchg pop (bad) cmp loop adc or jo fisttpll xor repz das mov lret loope rol and in out jb into cmp pop imul pop fnstcw and mov or pop divb (bad) jmp aad sub aam push out push scas add fldenv or (bad) push shl adc inc pop sub push inc inc js test loope ds out adc lods xor mov fs iret cwtl std addr16 (bad) sub flds cmpsl iret push data16 repnz pop (bad) adc cmpl adc and push jg (bad) ror (bad) mov mov mov movb xchg flds jo lcall imul fs loop paddusb mov xchg int pop xlat cmp iret roll leave sbb ljmp jbe push xchg or inc xlat (bad) inc pushf inc pusha jae dec sarl dec int xchg cmp push sbb mov sbb ds push repnz aam in fsub bnd mov loopne jne repnz (bad) jne daa call enter arpl dec cs jge mov fwait cmp daa mov das aam cmp add xor adc outsl mov nop mov push sbb adc dec mov sbb mov gs hlt cmp sub mov lea add add pop shlb daa test test test mov inc xchg ds jo sub cmp cli lock dec cmp mov cmp dec or lahf enter push fisttpl nop mov clc insb (bad) (bad) inc mov xor sub add icebp push add jmp fwait std cmp ret or repz dec inc cmc jae sbb xorl mov inc and aad pop imul cltd xchg data16 enter jp jmp add mov int clc xchg xor (bad) xor out stos add scas fyl2xp1 mov enter je cmp adc sub or shrb add int3 stc (bad) (bad) fistpll int rol push inc jne es fistpll jbe pop setne jno mov inc lock dec mov jle lahf mov popa iret cmp jl cmp cltd mov sahf sbb inc sbb inc stos test push mov cmpsl dec fdivrp pop xchg pusha fldenv enter loop adc syscall mov movsb sbb pop mov jecxz daa xchg movsb je mov flds pop push inc les mov (bad) (bad) cwtl lds push xchg or inc repnz and cmp ret (bad) mov (bad) and mov enter lcall lret in dec xchg rorb shll dec popf xor or add cmpsb rcrb iret adc dec mulb cwtl mov mov nop lods jae rcrb mov mov lds pop pop js jb movsl xchg jmp or mov dec or rolb (bad) sarl sbbl das dec pop repnz or jno es shl loopne pop (bad) adc xor (bad) aaa dec mov arpl imul icebp inc imul mov iret popf push cmp adc das or lret loope or xor adc call xchg lret cmpsb sub enter rclb ret enter movb mov les xchg mov mov les sarb adc or xchg enter adc sarl test pop and sbb sbb add test popa test sub mov out or (bad) adc aad leave push adc add push fs popf clc pushf pusha mov inc and push ljmp (bad) and pop fldenv fwait add aas rcl mov ret xchg lea incl jp std mov mov mov ja pop test xchg add jg add lahf loope xchg dec shlb jb sarl cmp out xchg xchg lock xchg fist aas ror jecxz push mov clc push cmp sahf shrl mov test pop xchg pushf xchg adc jl pop gs cltd not test mov xor clc lcall popf xor mov sahf add rolb and inc negb xchg xor fidiv mov mov sahf int3 ret pop inc int3 leave clc test clc fcoms fwait popa jle mov rcrb dec enter cld jmp mov sub fiadd adc pop and pop push leave pop adc sub scas cld fdivs dec das stos cltd fwait clc xchg adc aad lret cwtl fildl jp aaa test loopne out lcall pop movsb loope add fs pop jmp lret mov jno jl (bad) loopne (bad) das xor xchg (bad) aam dec les mov sub fldl aam mov shrb mov fild xchg lcall adc xlat pop fbld pop ret test lcall adc cmp fs mov or adc add mov pop cmp pushf fisubr inc mov nop stos aaa sbb fsubr and adc lock mov fmulp xchg aas ret inc movsb movsb cmpsb in daa pushf jl aas fnop xchg ffreep cmp inc jp add enter aaa andl pop mov push in pop lret jnp ret (bad) xor jge and dec xchg sbb cmp jecxz (bad) (bad) int3 sbb xchg das xor or fsubrl out jae mov xchg mov popa fmull pop insb (bad) jp push add push pop or xor adc add adc adc add rorl xchg jae add push jecxz (bad) pop push cli xchg leave stc pushf jl push (bad) xor test (bad) jns aaa push and xchg jge adc fcompl add cwtl test mov push dec dec negb lock jg roll test mov mov dec jo (bad) or clc (bad) add repnz sbb inc adc test mov sub fdivrp fs popf and mov xchg add hlt inc push stc into lods adc jle cmpl into sbb dec adc sbb iret outsb pusha mov popf nop call mov addl adc test icebp inc outsb jae dec sub (bad) adc int3 or mov shl rcrb jge (bad) cli cmp mov mov xor dec aam mov mov shll inc (bad) pop hlt test addb jbe mov inc cmp les loope mov leave fxch test and cli mov adc cmc aas sbb sbb outsb stc inc jo sub fbld mov or push fdivs adc (bad) jo jo in xor adc jmp (bad) in mov dec cmc pushf pusha fdivs (bad) iret mov data16 sbb xchg adc (bad) xor mov lret jb shlb mov lods or pop aam cld or xchg push mov js test rorb mov sub dec fisubrl pop fsubrl mov (bad) test cwtl add idiv (bad) (bad) or out in movl clc lds outsb mov test push mov icebp push call jns sbb add frstor mov mov mov add and pop push xor add sarl iret mov mov mov pop mov adc out xor aaa rcr pusha (bad) cmp or popa ds lcall fs in adc gs aam mov inc stc (bad) mov or cmpsb in push or inc inc in cwtd xchg cmpsb (bad) (bad) cmpsb out pop or inc inc (bad) (bad) stc fnop das or mov and mov xlat xchg dec dec in dec xchg pop inc (bad) shll (bad) and inc add subl stc mov cwtl mov xor fmull push cli xchg jl cmp mov adc sub pushf divl sti or aam jle sbbb pop negb insl push test fldenv mov les add adc cmp loopne inc jnp jb in jns (bad) fldl rorb inc rolb in dec test into bnd cld and sbb add repnz fsubl aaa xor add lock cld leave in fisubrl mov fistpl inc in aad lock bound mov or mov adc out pop pop in int3 mov inc inc pop cmp stos loope addr16 int xor imul loop sbb clc cld xor data16 pop int3 fisttp inc jne je adc and xchg rorl (bad) fnop mov into dec bound mov mov hlt jo pusha mov xchg mov inc push dec add inc lret add dec add lret pop add pop mov and fiadd imul xor fwait test pushf incb flds pop (bad) insb sbb mov sbb insb mov cwtl xchg ftst or in ret cmc push mov and pop test fsubl in popf scas mov inc add add lock mov popa bound ret int3 mov les jmp or jns clc lret xor adc inc mov jb cwtl hlt or and adc sub int fstpt adc dec icebp repnz cld push inc inc or mov rcrl (bad) mov loopne clc test mov mov fist out sbb sub mov into test loop or mov mov ret loopne (bad) xor adc mov jmp rcrb (bad) mov pop scas or ret test (bad) mov scas loope out adc jecxz sarb lret mov lock cmovae dec fisttpll sub xchg add loope cltd adc pop and icebp outsb xchg fsts rcrb push jp sub adc add ds and outsb inc loope xchg mov and xchg inc sub fwait mov dec test pcmpeqd jno xchg (bad) adc lcall mov mov sbb test shr mov push cld lahf cpuid shr fwait repz (bad) sbb scas mov stos add (bad) fstpl into jge data16 enter inc jecxz pop fistpll mov sub or mov dec sub and mov dec xchg pop test add fisttp loope lret pop rorb push cmp sub std xchg push mov adc outsl pop es loopne or xchg ljmp loop fdivrs or fimull popa add imul mov rol jo fnstcw iret xchg sbb mov xor stos push dec add pusha sub mov push or xchg dec inc inc cltd test sbb inc xchg or sub hlt daa rcrl ss lea jae jp and (bad) popf rcrb cwtl out jno loope and das (bad) lea push mov insl repz sahf cmp pop add fsubrs sbb dec out mov repz or mov mov cwtl fildll pop (bad) sub pop mov mov xchg inc push mov xor pop int shr add inc and fstps adc push mov int3 cmp fsubr cmpsb popa mov into and mov push mov ds push addl mov add dec es lcall iret cmpsb les lods popf xchg cmp mov xor call mov int3 cli pop add repnz xchg negl jns sub or and add add fmuls loopne sub (bad) pop (bad) clc cld xorl pop les cmp movsb popa clc and shlb sbbb adc aam sbb roll push loopne fldenv jmp (bad) adc xor dec inc shlb add (bad) arpl sbb movsl adc lahf call add adc pop into orl repz int fmuls in test and das or dec inc (bad) dec shrl cmp std lahf les mov bound loopne mov ret or imul and or sbb and mov push push mov dec mov fsin or push and sbb out jb test in sub mov mov rcrl mov jge out mov movsb ret mov aas add inc jmp adc inc std (bad) mov sub sub sarl xchg add adcl xchg add mov fmul or popa icebp scas or es or sub mov mov test lret mov test cld mov xor mov lock out nop int3 data16 insb dec jb sti int3 add ds xor sbb in clc movsb fsubr push mov sbb jmp rcrl outsl pop push inc push lcall mov test or sbb popa outsl mov lahf out sbbl scas jmp cmp add xorl cmpsb out flds add adc adc mov cmp jl push je sub add sub adc nop pop sar adc (bad) mov or adc pop iret mov setg xchg jl inc (bad) bound and sbb or sahf push xchg xor mov inc repz cmc movsb dec nop gs pushf out add mov imull fdivs push mov lret fidiv or test and add hlt int3 movsb sbb repnz rol add inc mov test add or dec insb or jo shrb lea stos cmp mov add int3 cmp sahf and fsubs xchg sbb or fs lret xchg sbb loop adcl mov (bad) xor ljmp cs icebp incb out fdivp add and mov and cmp (bad) loope xor mov test pop sbb stos sahf add std xchg dec add in rolb mov ror js and in sub push fdivr in and in adc fsubl lret stos jecxz and nop movsbl or pusha aam xlat loopne xor mov dec jae inc out push push ficomp xor fcomp dec cmp addr16 sarb fadd dec insb fcmovu (bad) cwtl outsb fwait addl inc push mov jg push xchg mov jns pushf xchg lcall sbb cmpsb fadds (bad) cmp jno xor lret ret cmp icebp gs mov shlb pop adc push lods dec sub or (bad) imul adc (bad) fbstp push movsl imul rcrb clc lods pop lcall aas jle adc mov std outsl stc mov (bad) push out lods shrb ficompl rcrl mov xchg pop es cwtl fisubrl int3 inc sub scas mov push out sti lea test movsl cmp fist xchg (bad) fadd adc cli pop stos mov imul es and leave popa aaa jmp enter ret inc mov or ret sti and push loopne fcoml add inc add (bad) and in adc push or jge pop push aad cltd sbb gs lahf cmc add cwtl (bad) fsts in movsb mov cwtl das mov jnp fcmove and lock xchg imul and jp inc in shlb rorb int3 inc popf mov inc lods fist outsb mov mov pop jae mov mov fcmovb aad xor mov mov les xchg inc pop cmp lods es gs xchg jge sbb mov or sub lcall xor je ret rcrl or sbb xchg lret add nop push pop xchg jo push adc add iret call cmp cld pusha or adc clc mov pop daa fisttpl (bad) mov xchg cwtl iret js pusha jbe xchg popa mov jnp popa dec pop pushf adc fdivrl sub xor les (bad) mov mov mov repnz dec jmp mov test inc enter hlt push and into (bad) pop push xor hlt adcl into fildl fwait add outsb shll mov adc jae mov and xrelease mov mov xor xor add xchg dec cwtl mov push xor (bad) adc sahf ret xchg nop in clc or jns pop cmp lods fmul out fdivs sbb (bad) out xchg mov or mov subl fwait xor cmpsl test mov popa repnz pushf dec int3 mov push mov inc sub xchg data16 leave and sbb test sub inc in sbb je mov lret hlt add lods les inc cmp sbb dec add dec and mov and mov sub loope repnz orl pop inc lods add mov fnstenv cmp subl and push jb (bad) aas cs mov loopne and neg leave pop inc xchg (bad) test stc sahf and cli push push aam xchg sbb loopne mov jne insl add stos xor cmp dec or push shr mov faddl inc out and or dec jae push mov xor xor test iret rcrb test (bad) mov fsubrl loope mov cmp ds stos sbb arpl sub das js jmp mov les in mov adc pop stos repnz or loopne movsb pop mov mov aaa mov rclb push (bad) or mov sbb sti xchg leave lahf add pop cmc jge push add shlb movsl (bad) in cmp mov adc cld or add rcl sahf or xor jmp rcll scas imul (bad) add adc and ret ret inc in push fld or int aaa sub (bad) in cld sub mov sbb rol test adc loopne lods (bad) hlt ret sbb pop je dec shrl fstps pop mov dec stc mov sbb cmp inc (bad) ja fstpt out cmpsb loope mov and cmp add mov xor xchg pop outsb pextrw mov push and test and add fcmovbe pop xchg mov ja iret std orl and sub stos stc jbe sub lret and lret push (bad) rcr je jle in mov mov sbb (bad) adc stc add ror lret stos jno (bad) gs (bad) lret out (bad) add popa add and shrb fld and push and into pop inc mov inc push test popf popf rcrb lahf push ljmp fisubrl loopne cmpl xchg ljmp enter out adc loopne push test aaa fidiv bound pop xchg pushl cli fistp dec add xchg adc stos dec adc stc jne add xchg or pushf aad inc or lret mov enter das sarb ret nop dec dec ror or add mov push jp mov ljmp pushf sbb dec xor lea dec jns inc xor das das adc imul mov fwait xor (bad) rolb cmc (bad) xchg and movsl shl xor dec popa push jnp in lods pop jns cmp add shrl mov outsl std xchg repnz sahf xor les and shrl (bad) push test add xchg mov nop jnp pop divb xor popa xor mov cmp repz out add push adc add and and mov test rcr movsl push add mov (bad) loopne test pusha xchg mov inc or bswap cmp add xchg inc sbb cltd test imul xor (bad) cwtl (bad) fsin stc sub leave popf or adc mov sub and dec ficompl xchg shl sbb lea mov mov test les inc pushf js cmpsb (bad) xor cmp int sbb outsl pop mov (bad) sahf dec cmc mov (bad) pop cmp js mov in and jl push clc push movsb out int mov mov lods aas xchg sbb adc into inc cmpsb insb mov clc fcmove add inc lret in sub cli inc aaa or fs adc push nop jl xor out cmpsb push mov cmp sarl pop es xor add xor add add push sub out xchg les push insb or sti inc insl je adc cli outsb jle push and and scas or xor push (bad) bnd sti mov sbb jbe push (bad) sbb fs jno mov sbb dec xorl out mov insb jnp lret push push inc jg xor cmpsb enter add pop pop shr (bad) jmp cmp jg cmpsl ds test (bad) mov inc outsb dec fdivrl or insl js xchg sub test fmull or insl adc xor mov shll xor add and (bad) mov lcall dec jle mov pop sub ret lahf inc or addr16 fdivr jge (bad) cmc dec test enter adc add bound sbb inc inc fsubrl pushf bound cltd test mov rcrb mov sub insb add (bad) fdivl mov arpl mov mov int cmp sbb popa ret push leave cli push xlat inc fdivp and ja mov or jle add cltd lcall in loope ret jae sub shrl inc iret dec sar push rorb mov mov jae xlat mov enter std mov fild mov stc popa (bad) js xchg xchg shrl rcll push (bad) pop shlb push data16 xor sbb test sahf roll cmc mov jge lock jecxz mov lock mov shlb lock addr16 sbb lret inc adc add pop dec mov call mov inc mov mov jge into fistl (bad) aad mov cltd loope loop xor mov mov or inc stc mov popa cmp pop lods adc sub dec push dec sub outsl xchg ret inc scas call add fadd mov and mov mov stos in lret mov sbbl out fwait (bad) mov dec jecxz popa fcomp inc test adc fsubrs data16 adc aad fist sbb push fs push jmp imulb cwtl aas xchg clc and jl adc and sub enter out jge icebp push cmp fsubrl sub movsl mov cmp inc adc push jp mov xor fwait lock orl add nop jl xor je cmp sub lret cmp push cmp sbbb sub sbb iret scas pop (bad) jge fimull jnp arpl mov push lds stc jo adcl into add loope dec lret daa push xchg jnp imul xor push and das out push lea (bad) std outsb rorb imul test inc fld xchg add out jl hlt add loop cld inc fisttp in mov les cmp insb mov in mov (bad) jnp enter fsub mov sub rorl lods ss pusha inc add iret xorl cmp movsl pop nop lods out je fsubl or scas adc and pop aad das cmpsl lret jbe out decb mov sahf pop mov jb mov jbe (bad) or and xchg fs imull xchg inc add movsb mov pop adc fmull insb push das (bad) xor les into movsl dec mov mov lods mov int3 cmp xchg (bad) inc cmp dec es xchg insb jmp adc xchg sbb xor cmp jbe iret and mov mov (bad) cmp mov mov fistp pop rcrb rcrl push pop scas sbb sbb xor add push or xchg insb or out js call pop aaa and add or js aas xchg push sbb sahf movsl adc lahf jp jae leave or call dec or aaa cltd xchg lock mov aam push push xor adc pop stos cli aam dec mov pop clc sahf je xchg inc repnz je clc mull add mov icebp and pop enter lods or mov cmp scas fs cltd mov incl rcll pop xor push push shll cmp pop fnstcw mov mov shrb test cmpsb sub inc inc test sbb add pop dec push enter mov aam (bad) mov pop pop (bad) sar sahf out into mov nop dec rcll popa shlb pop mov sub js jp rorb mov enter (bad) mov (bad) mov add std sub in (bad) rclb in ret jecxz push mov icebp hlt dec aad das adc jnp adc daa sub rcrb mov xchg dec test je dec frstor fcos aam (bad) gs push cs mov icebp mov mov jb fs jae enter ret dec and es mov lret dec (bad) je cltd fmuls test cmpsl mov mov sbb shr movb (bad) jmp mov popl xor (bad) dec movsl and shlb enter stos sbb icebp xchg (bad) inc add mov cmp lock dec cmpsb add loope and cltd jbe aas leave inc or cltd mov testl ljmp pop dec in cmc mov mov lcall jae inc adc adc outsb add xchg icebp cmp movsb test sbb mov in mov sub sub or andl addl (bad) idivl push (bad) mov pop in and and xor add (bad) pusha pop push ficomp ja lret jbe inc (bad) mov pop rcr mov xchg adcl sub sub lret jmp inc inc in ficoml mov or test push mov lds pushf les add popa (bad) and xor incl adc xor mov pop sbb fs xchg pop and movsb fsts aad cwtl mov and pmaxub sub inc adc lods xor jle mov outsb mov mov (bad) into add xchg mov ss mov shlb (bad) and rolb dec add inc and mov movsl das int3 pop push (bad) inc movsl fistp push mov cwtl sarb int in test insb mov bound and mov out movsb or fsts rclb enter test or xchg iret int adc ror cmpsb cmp xor test sub sbb dec mov es jne pop xchg and pop in fdivr das push mov cltd mov jne jecxz into fisub push gs inc loop les jecxz jnp adc xor jle jae pavgb repnz outsb adc ds scas cmp cmp dec orl mov adc add lahf out adc jbe dec fsubp mov dec jl andb cmpsl test cmpsl xor int inc leave inc adc add cmp movsl loopne pop pop ss pop fldl mov xchg mov lret fs daa sti xor or pop and cmp mov push movsb data16 mov mov and pop fldcw add adc ficompl jle int3 add add and jg outsl popa jl les inc loope mov mov jae test xor sbb push inc pop (bad) test or mov jl pop movsl add fdivl (bad) cmp fucom jle fcoms outsb lret jl out jae xor fldl jo sarb push icebp fisubrl inc outsl sbb iret and in into inc shlb out or fcoml mov (bad) in cmp sub sub push mov out sbb mov dec daa jns pop outsb xchg pusha clc in cmc sbb cld jp int3 xchg adc xabort push sbb iret leave sbb mov sbb test cltd mov mov inc push out jo mov add ss sub out sahf mov cwtl mov add jae xchg mov inc enter lock sti add lahf icebp dec jmp adcl arpl cmp or jl add clc inc mov sbb mov lods mov mov mov jl mov cmp xor (bad) fcoms mov loopne adc (bad) jbe cwtl bound data16 add jl xor int int3 sbb and inc pusha shll in sub mov paddd repz stos and mov cmp sub popf sahf dec out pop or sbb adc cs inc sbb imul sub jbe xor loope pop mov ja sub jle or adc cmpsb nop enter fnsave ficoml add mov cmp and or or icebp fbld lods pop nop sbb ss cmp enter ret notl fstps push sub shrb xor aas or inc mov mov clc xor sbb sub gs (bad) and and sub scas imul sbb mov loop xchg sbb xchg movsl repnz movsl cmp jge ja push jo and outsb mov xchg push lcall (bad) fst dec call stos test jle add repz into sub sahf jmp addl xor jl (bad) out imul adc mov and aam mov dec sti leave sub or pop and aam mov push fimul cmp fsts clc ror push movsl movsb sarb or ss adc jnp cs popa xchg (bad) add pop xchg jmp orb adc fcomp inc jle leave (bad) push repnz xor mov bound add mov clc adc mov les rcll rol xchg cmc clc ret jnp xlat lods repnz cltd sbb push (bad) mov aam (bad) sti leave xor jae jecxz inc mov jne pop mov repnz cmp xchg lret fimul dec ja add pop sbb cmp mov lea or sub sarb fsubrs aad pop loope lea adc push adc jae jae imul add stc dec cmp test call xchg fstpt stc pop test shr sub jo cmc inc cli (bad) ds ficoml leave call add dec lock xchg push xor (bad) mov xchg or cmp addr16 mov inc and idivl jne mov sar aam dec test xor and xor mov push xchg cmp insl pop pop cwtl mov add cs sti mov lock orl mov dec stos xor sub sub out xchg xlat inc or jne sbb into std icebp pop adc pop xor sbb rcr and dec sbb and faddl mov (bad) adc or push (bad) pop fsubl mov je arpl dec fdivs in add call cmp lcall mov jae mov sbb cwtl mov adc sub xor adc sub int3 fidivrl cmp xor inc mov inc inc mov push loopne movsl (bad) cmpsb int3 dec jns inc add outsb call sub mov mov ret fucomp add add mov (bad) sub mov in imul dec inc shlb cmc adc and loope xchg sub rcrb stos fnsave shr icebp pop mov call and int3 sub shr cmp lret int adc enter (bad) mov fadds stc rol xlat add jo or mov adc (bad) fdivrs mov mov cwtl rol in ljmp loopne cmp (bad) jmp rolb fwait roll pop sub ret mov into (bad) out fnsave leave dec sbb mov xchg ds outsb (bad) sub imul inc shrl enter jmp xchg adc nop lods lcall sub jl push cmp jae xlat add mov hlt xor mov aam jmp cli or test sar stc (bad) lret sub shll js lcall dec stos lods mov lcall mov push das pop xchg xor xorl pop gs or push mov fbld movsl jne jle out sahf jmp sub and iret pop stos mov je in xor xor xchg insb mov fisttpll loopne adc (bad) out repnz mov pop and movsl movb fucomip fsubrl xor (bad) mov in sub pop sub sahf mov jl lock adc clc mov ljmp repz inc fild rorl mov enter into sahf movsb push add fbld mov rol sub and ljmp les fwait push (bad) stos mov ret aaa ret lock rol stc adc or mov and ret mov or (bad) cmc pop int rcl xchg (bad) sbb mov mov add int3 and fnop add repz pushf repnz clc jp adc leave add icebp in sarb ret fcoml orl inc imul sub adcl adc mov jle sub scas lahf movsb jbe xchg andb mov stc lcall mov xor xchg push cmp dec stos loopne dec mov and data16 cmp sub mov hlt rcll adc mov or rcl mov loope mov iret jg ljmp mov (bad) out lods les adc (bad) or and mov lret hlt inc add lahf jl sahf sbb xchg mov dec cltd jp int3 cmp mov movsb (bad) mov dec xor cli lret cltd ret pop push nop out sbb or xchg insb push gs mov dec addl and mov mov adc dec and cwtl mov rcl aaa lods nop (bad) push movsl and mov mov mov push sub movsl js mov aam (bad) push sub push test fild add push pushf fwait sti cwtl mov popa and inc jno jae jbe pushf jle jmp mov mov stc cmp shrb aas je mov jo daa mov loope mov vpunpcklbw popa ret inc clc mov int add and xor mov loopne lea and jg mov jp iret mov fcompl fwait in shlb push mov (bad) pop pushf and fldenv inc sub xor mov mov rcrl bound xor insl sbb out jge sbb or dec and popa cmpsb adcl ds (bad) ror mov (bad) xor add (bad) loopne mov lods mov mov dec xchg icebp sbb pop test cltd rol xor pop pop dec and adc jae add les call loop add call mov fdivrs test in add jbe test push call mov xor sahf or cltd cwtl loopne ret in dec and add jmp fdivrl (bad) punpckhdq mov inc data16 xchg inc in cmp add cmp daa adc dec or int jbe sub arpl clc lods inc jns mov push imul (bad) iret sbb or scas add (bad) mov lahf and stos cmp lret xor inc mov push stos jnp mov xor sub stos stos and imul (bad) mov int3 cmp popa push add je mov pop push or sbb mov mov and loope cmp jno inc xchg xor rclb lret cmpsb inc xchg test ffreep and inc lcall stos addl mov fucomip sbb loope mov out mov fs sub adc ret add cmp pop call inc stos push adc xchg imul (bad) mov sahf mov or mov inc ret clc mov je jecxz loopne ret xor rclb pop pop xchg inc cmp call mov (bad) lea sub dec outsl push dec aaa add and stos push das xchg sub sub js pusha in mov adc mov ret inc mov enter daa outsb push sbb mov int (bad) icebp mov pushf xor lcall daa or xchg nop add and mov popf insb adc inc test aas int3 mov add fist xor pop addl repz sub sub pop jno lods roll std fdivrs mov sbb (bad) ljmp mov jo stos push sbb enter notl enter call (bad) xor cltd (bad) loope pop lcall adc mov dec mov xor ret and cli data16 sbb sub jmp lret shl shrb xchg fisubrl and pop sub fwait mov xlat mov cwtl sub jge test inc mov mov mov jae dec mov mov pop add cltd push push leave or and (bad) mov int3 sub and fbstp test cmp in add sbb mov inc sub xchg xchg movsb je (bad) sbb mov lods (bad) dec jmp js in or stos shrb and (bad) dec cmp pop (bad) (bad) test cwtl mov pop xor xchg dec sbbl mov sub cwtl ja pop arpl clc dec mov (bad) repnz andl xchg inc adc rclb lods add nop aad push mov lahf loopne repz (bad) xchg add iret dec jp or add rdtsc popf imul ss adc (bad) mov int out pop or pushf es add mov mov sub cmpsl enter ret cmpsb xchg data16 es push cmpsl int3 push cld mov stos out mov sub mov push push imul push sub xor inc movsl rol ret adc js adc movsl xor das clc mov loopne and pop fs sbb call add sub outsl sub shll test cmpsb gs push dec daa (bad) enter cwtl lcall jb mov push pop push lea mov sub jmp mov adc push ret sub clc inc enter ret inc xchg test icebp dec or ret and add ret and sarb or (bad) mov es int ret inc xchg ss les scas cmc in mov sub inc mov xor int3 fmull imul enter loop or icebp and imul sub pop mov mov or mov jl inc jae pop mov lods sbb movsb sbb nop jg push cmpsb iret mov shr adc sbb (bad) cmpsl add xchg adc ja (bad) push arpl adc cmc or push lahf jo adc in pop and adc loopne jle cmp add lods push mov or test stc push cld loope or inc and jg test mov xchg rclb pushf xor fildll adc mov mov lods pop and repnz or mov aaa xorl sahf nop (bad) pop or or test mov push (bad) mov mov mov jae stc push jle jl cmc push or inc test addr16 leave int pop xchg cld test pop (bad) add into shlb fsts outsb or add adc or adc xchg nop fild and add (bad) jae aas jno xor popf add or sbb aam jno xchg es sti cmp adc icebp adc movl sub push mov adc lahf rcrb fistp nop fsubl (bad) add pop add rcrb fidivr inc jl icebp adc adc lods mov mov (bad) push fild fist add loopne nop xchg jnp xchg jecxz sarb xchg mov dec push ds mov rcrl jp mov mov mov adc xor mov jle ret movsb aam add adc vpsubb enter adc adc test mov and sbbb cli mov es push jo ret inc or mov dec inc xchg xor clc clc mov adc adc pop push jnp movsb dec orb rolb lea fidivrl aad mov xchg and jo fist addr16 sub fdivs sbb hlt dec mov or ja in mov cs fsubrl dec outsb sar aam (bad) mov imul dec lea fsts inc mov dec sbb mov jle mov cmp push pop mov sub stc mov cmp js inc and push fist and sub int (bad) shr xchg mov stos adc pop pop lods mov cmp push loope pop sub adc pop iret les cwtl aaa mov out sbb inc dec in xchg dec insb mov mov ror pop dec cmp lret clc xor xchg cmp int3 dec call xchg (bad) dec cmp ret clc rorl stc push rclb cmp popa loopne mov jp insl lret pushf mov xor push inc sbb (bad) jno (bad) dec dec pop mov std mov cwtl lock stos ret mov mov in loopne cmp push push jg or sbb fsubs mov lcall test or fbld daa mov icebp xor stos insl insb dec (bad) xor cmp sub cmpsl (bad) lret adc adc stos lret leave add xchg inc nop ret inc gs adc cmp das inc mov jg sbb pop shlb test adc ret pop inc out loope into mov xorl loop lret lret lock lods mov mov mov cltd aam loopne and outsb pop mov pop stos add adc iret (bad) and jl test lret repnz mov psubw dec mov dec ljmp inc loope or mov xchg ds cmpsb cmp and jo scas pop ja sub push adc scas inc rorb stc (bad) into push bound hlt adc and (bad) (bad) adc cmp imul ret cvtsi2sd ret inc aam xor ret jecxz icebp xchg xlat je push jecxz jo jmp (bad) aam mov (bad) and imul push test adc fmul dec mov or xchg inc lret adc loope mov mov adc add shrb (bad) xor and add add mov cmp (bad) xor scas jmp inc inc (bad) jae (bad) (bad) jno (bad) push and fs add fcompl sahf fistp jb add das repnz sbb test shl jae jbe xor out lcall int mov and pop xchg adc and (bad) leave dec loopne lods and add add aam or sti adc adc cwtl cs jb and mov xchg sub pop test call jae pop jnp sahf sbb in je dec mov sarl sbb dec sub fimull (bad) mov iret stc insl rcrb add push xchg mov mov (bad) out out xor add ret call fmul xchg dec enter mov and test outsl es sbb pop mov sbb lods daa mov xchg aam das mov inc mov xor leave roll xchg pop scas (bad) aaa push mov stc cmp pop pusha and cmp push outsb shrb out sbb popa fmul enter xchg adc pushf loop hlt add dec jnp pusha lcall dec mov lock mov add inc jle dec mov xor mov cmpsb pop loopne inc imul push movsb test cmc cmp and sar mov xor outsl mov adc test push in jns xor mov cmovs sbb dec inc call mov (bad) mov sahf (bad) ss test bound add aam shrl enter pop in test repz ret movsb ret daa neg clc pop es fist int3 sar and fsubrs inc or sub test addr16 sahf out int3 sub xchg push inc sbb pop ret jmp roll pop sbb jno addr16 into loopne daa (bad) je inc add push fisub (bad) out cwtl mov push pop adc fs adc mov add lods fist inc je mov aaa fisttp jbe dec test cmp (bad) pushf pop xchg loopne rolb call push dec loop sbb jbe sbb (bad) dec sub mov movsl jae jae out pop (bad) lods lret scas mov add and cld xchg inc mov shl add push mov ret dec test jnp mov adc mov mov adc mov xchg mov imul mov mov (bad) ljmp pop mov dec mov fist mov (bad) dec sbbl sbb repnz sub sti stc leave mov mov scas loopne xor stos pop or loopne mov add fisub (bad) sbb jge pop mov and ljmp or pop lods mov xchg test lods lods xor lods iret jno xchg mov rclb and sub loopne lahf push push sub clc xchg shrb test call stc (bad) enter into insl xchg inc xchg push mov mov out test push jl mov and loope add jb mov loope pmullw mov fnstsw (bad) jmp lret mov clc mov jl xchg jno fistpll push fiadd jnp and lods xchg inc mov pop sbb shrb stc adc or mov inc add mov jmp adc lcall dec or fist and shll xor xchg xchg jnp loope push lock sub dec cltd je pushf call xor mov and add cmp mov fcoml xchg push aas and fcoml xchg dec sub sub or cmpsb sahf push dec es and pop pop and (bad) nop inc adc stc inc sub inc enter mov movsb pop dec punpckhbw dec adc push (bad) iret dec sahf adc adc lcall adc repz jns ret add int3 imul pusha (bad) and iret xor mov sub fsubs cmpl push (bad) sub adcl sub xchg pop mov adc mov sti loopne dec (bad) fucomip dec psrad sub (bad) (bad) and aas repz adc loopne mov sti lods adc cld imul sub insl faddl out imul or setb cmpl pop mov xchg iret sub cmp mov aaa lods inc inc dec xor dec add nop mov mov add test fdivr mov sub push xor ret movsl lret sbb dec mov flds cmpsb roll and mov (bad) mov or hlt inc (bad) and lcall sub push xor test jecxz std xor adc (bad) or push in ret sub xor and das pshufw inc aas sbb push out icebp and fiadd mov cmc fxch adc xchg push dec push nop (bad) cmp mov outsb bound sahf stc call sar test inc sbb cwtl or ficoml and mov mov sub test lret popa mov inc test push lahf (bad) mov xchg push and jno xor out (bad) mov mov daa fbstp adc cli xchg mov insb shrb loopne jl rolb stc mov mov cmp xor mov lock ret lret stos into (bad) nop (bad) js subl xchg xor xor jecxz addl jno je mov fist (bad) mov cltd outsb xor pop (bad) inc push popf xor scas cmp cmpsb repz shrl xchg in adcb sub aam jo mov xchg cmp push add mov dec jg adc fbstp add and sub push mov movsl adc push repz rcr insl aam clc or and (bad) mov fcomps adc (bad) jbe sbb into mov inc or ret add jmp push push sub jle mov fiadd xchg lods rorb fistpll loope push inc mov call dec pop mov (bad) in rorl add dec in mov jmp sarl gs shr or lret iret pop add mov inc inc test sub dec push inc je das call adc xor or jge loope fsqrt xor fstpt cmpsb fcomp add shll iret xchg push fcoms push sub and cmp cld mov sbb ret and stc mov jp push int3 mov sub and pop int3 pop lds mov and jecxz imul ret aaa pushf repnz mov shll dec faddl cmp inc xchg test (bad) pusha scas lret or xchg loopne out add in jns adc rcrb mov push sbb sub push add lea test sbb popf xchg loop sbb or (bad) lcall pushf pop sbb int3 jb addl in cmp jmp sbb cmp fistpl (bad) mov fisubl push mov lret movsb sub test stos dec mov fildll out xchg sub cmp xchg cli (bad) stos and fnstenv inc xor fucomi ficoml out outsb test sub dec adc popf inc in test call add xchg ret mov add mov (bad) call test and pop ret mov lods sub mov cmpsb shl add dec and adc push imul ja shll and loop pop int3 lods inc mov addr16 (bad) and popf lret test xchg stos ret dec leave cltd pop (bad) add frstor (bad) test movl arpl inc loopne int3 aam push cmp mov sarl imul xchg fs rolb enter loope sar and (bad) jo movsb pop xchg (bad) fistp lds mov outsb cmp push xchg inc xlat or inc nop es stos xchg int mov sub (bad) scas cmp xchg dec loopne (bad) sub fdivl push adc fdivr xor sbb ja jb ret xchg inc (bad) lret pop sbb imul fwait into dec (bad) mov fucomip out sub jle push cmc push push int3 mov jl or mov imul inc xor int3 or les fbstp push jg mov xchg (bad) pop (bad) jnp and adc fisttp fdivs jnp add mov lods push dec (bad) pop stc mov fcomp or nop sbb loopne jbe sub pop jns sahf and mov adc iret pop insb sarl dec int3 cs test lods es (bad) adc dec data16 (bad) (bad) out inc fsubrs jg add pushl loopne call xchg inc cs sbb in iret cmp cmp dec sub add ret sbb das clc das mov test push lcall cltd pop lret push test aas sbb loop mov clc lods or out clc into pop dec fisubl int3 in addr16 insl sub or sub mov lcall dec cs leave clc in xchg in xchg xchg fs mov test dec insb xchg push popa movsb mov imul dec rolb mov push outsl pop nop pushf in mov enter adc enter adc enter iret in xor (bad) pop dec rcl cwtl das xor mov (bad) push jp mov ror arpl mov mov mov mov pop mov test jnp icebp mov fdivrl (bad) or jl rcll add iret mov push inc mov pop inc loopne ret jp cs aam cmp lcall or daa or ret lds add leave aaa rolb jno add sub lcall iret in and test jb xchg and xor test and inc xchg lds test xchg add bound xchg mov mov hlt xchg repnz cltd and jb sti xchg xor inc xchg mov inc stos jno mov mov inc lods xchg faddl fcomp and fsubs bound aam mov in in pop mov mov push cmp ja push push cltd jno cmpl mov mov mov movsb inc nop sub jno ror loop adc mov mov xchg cmpl iret xor or (bad) stos add es (bad) adc cld sbb sub rcrl aaa cmc lock or mov add rcrb xchg jge js jmp push rcr mov or out inc (bad) jb xchg cwtl les fsts adc adc lds lret xor mov clc mov sub sbb dec loopne jns data16 dec fistp aam les leave sarl gs fs mov daa pop jmp jge loope dec lods nop loopne jle in xchg xchg and lret rorb dec fimul mov leave lea ret adc dec iret sub push push nop sub arpl dec mov enter fs repz enter mov jl and les sbb sbbl mov (bad) leave div les xchg ficompl (bad) jmp leave rcr and iret mov test shrb mov mov hlt loope cmp loopne pop xor insl sub inc dec ret xchg mov cmp sbb shrl pushf xor lds mov rorl push fmull sbb push cmp loop pop aas enter push push adc les rorb push jp std push sbb dec push rolb adc ljmp push loope (bad) loop sbb mov and adc mov mov lods or cli mov dec int3 test lds mov lods fsubs lret add iret jge rcl cmpsb and mov rcll mov push xchg (bad) icebp movsb pop mov les xchg stos (bad) ffree or mov mov or inc mov or iret lock out cltd lods and add xor (bad) cmpsb xchg (bad) lods dec push arpl push xor lret xchg test mov lods inc enter nop lock aam xchg adc and int sub jge mov xor inc inc fdivr sahf fdivrs sbb and stos pop pop lea ja mov imul adc cmp mov pop (bad) mov dec push ret xchg lock stos shlb fnstenv int3 aad mov xchg and sub or jno dec add notl mov add mov mov (bad) (bad) dec pushf in fcomp rcrl fs mov test dec xor adc mov inc mov sub sbb xchg enter jmp lock loopne nop cmpsl or dec mov (bad) loopne fsubl fmull or cmp xchg add test jg cltd pop ret and mov inc (bad) and or xchg rclb mov and dec pop jge fiadd add sub lahf push cmpsb fsubl xchg or cs xor mov mov push shufps (bad) lcall dec xor cmp mov outsb fsub xchg sub jb cltd int (bad) lds aad dec icebp jge repnz xchg das or daa xor arpl and push pop cmc mov (bad) rcll lcall xchg aam cwtl les sbb add nop aam iret adc mov int and mov addb mov mov pop xchg (bad) lret cmovp popf and or imul mov data16 (bad) pusha lods push fwait xchg ret cmp mov xchg lret into inc add lret or cmc or mov lcall xchg out mov sub out insl movb mov lods xchg in data16 gs push adc pop lock ljmp push mov push ljmp add call test adc mov xchg imul pop fistl xor jae (bad) les dec shlb mov in lret add out sbb arpl fs push add test mov out mov outsb xor out dec sbb mov pop sti or and rorb xchg adc add sub ss cs fcomi (bad) and test inc mov pop aas xor rolb inc xor fs out xchg or imul fstp add fnop adc fsubs insl fdivrs pop adc nop xchg add into fsubrs xor and and rorl fisttp mov mov ret cmp (bad) jge les insl enter icebp test sub jb (bad) jmp xchg mov push call insb or (bad) loopne sti (bad) sarb add outsb or mov mov xchg lcall dec int3 je mov cwtl loopne popl fsubrs jo frstor dec clc xchg test inc inc pop fdecstp add aam and sub in mov imul xor xchg popa test loop fs pop cli adc lods xchg jle inc pop xor les jae cwtl sub lods negl mov or in insl lcall mov jg cmpsb xor mov call je adc lcall aaa push lret push ret test add dec cmp push scas lods adc sbb jmp jns add out jmp mov lahf push pop mov mov or lock mov add shl cmp sub mov into je mov enter into adc mov cld jge push ror loopne fsubrl lock cwtl pop ficoml mov dec cmp push movsl xchg add or fucomip jo add add sbb mov adc (bad) mov xchg mov add pushf aad xor repnz fnstsw inc cmp test rcr fdivr cmpsl jnp mov or ret cmp and jmp xchg push xor (bad) push jp adc xchg js mov fildl daa test movsb jae icebp sti xor (bad) inc stc loopne push (bad) xor xlat enter pop push int aaa pop sub imul jno and sub rcrb stos outsb neg repz mov (bad) js xchg push shrb fbld iret jmp fstps adc repnz lods xor pop (bad) (bad) lock iret lea inc sub cmpsl xorl push cmp adc mov jmp sub inc iret mov mov test test push int3 or mov insb aaa aam and xor nop ljmp mov mov dec dec mov loopne insb idivl sub jnp or push mov cltd dec mov insb inc iret int mov adc cmpsl cld fcmovne add adc push (bad) mov (bad) aad ss sar jb ljmp pushf pop shlb mov push in clc mov jecxz popa xchg insb out mov mov fwait xor pusha mov loopne add sbb push xor or inc clc shrb sahf and aas sbb iret es nop xchg mov cmp xor jno adc inc rcrb mov (bad) or rcl rclb aaa xchg fstpl mov ljmp add (bad) xor mov ljmp call fidivr (bad) ret test in push sub cmpsl add popf ljmp iret mov loop cmp pusha lock rorl into xor aaa out push jmp fdivs enter fdivl test imul pop int3 jae sbb fmuls (bad) mov add nop repz jae test jne inc mov push xchg loope or in add or mov loopne add pushf dec jae movsl ret call loopne lods stc (bad) ffreep lret add aam inc popa les andl inc into xchg les stos xchg mov mov or insl mov (bad) adc sbb movsl pop stos imul pop or sahf cli fdivr cs mov fisubrl int3 call mov fadd rcrb lret lods push pop sbb (bad) xor xchg jecxz xchg aad inc ja (bad) xor loop pop or mov jecxz add es sahf in jnp enter jmp mov andl pop push add sahf and loopne sub daa int3 test sbb add movsb mov dec add jle fdivrs int xor mov mov movsb sub pop cmp mov dec int roll cltd bnd push push (bad) popa inc cmpsb cmp sbb (bad) xor std test mov in mov je push push or cmp dec xchg cmpsb (bad) jmp ret lcall adc lods sbb adc mov (bad) fldcw and rol pop leave dec inc and es ss pop jg xor in je stos mov loop sarl imull sub mov pushf mov xor mov pop cmpsl and (bad) adc sti inc xchg cmp inc movl pop or idivl pushf jb sub push stos pop lods adc mov add or mov or (bad) mov xchg pushf je popa (bad) mov cmp add movsb inc loopne mov mov jmp mov lods or cmpsl nop cltd jbe imul lods lret and sbb xor mov clc jge jae movsb mov sub imul in pop mov popa vaddsubpd push mov and clc lea and xor push (bad) vpandn pop call inc add fistl sbb xchg ret add pavgw outsb push adc test mov xchg fdivrl (bad) and movsb mov mov add (bad) lcall ret test loop cmp ret sub mov jb and jnp inc mov lea js ficompl push dec adc cld and xlat fcmovbe ret stos test enter and aad lret in cmpsb pop adc adc repnz mov dec shlb and arpl sbb add inc pop hlt jnp enter adc sahf adc loope pop fidivr aam pop iret test mov sub and jl aam loopne adc push and ficompl (bad) jne mov fisub cltd popa loope mov and sbb mov (bad) inc aaa in mov les arpl mov or stc inc shr or adcl pop hlt jecxz jge or jg mov jl dec fnsave cltd test pop scas sbb pop cltd push and test lea (bad) pusha sbb andl pop loopne sub lret loopne fs (bad) (bad) int3 mov or cmpsl sbb aaa flds (bad) fstps rcr fsubr pop or and push jmp shrl add aas cmp pop mov sarl xor lcall popf and add les xchg (bad) xchg lea je roll call pusha rorb inc fs mov ret nop xlat int3 mov (bad) lds test hlt sub in xor add int3 and (bad) and (bad) xor adc mov push in push or out hlt in les mov fwait jnp or add pushf enter addl into mov add pushf stc loope pop push xchg jbe dec repz std test fistpll loopne data16 popa je test ljmp adc jp loopne nop jmp (bad) xor xchg xor out xor rcrl ja loopne nop fs les inc movsl sbb test jp dec in jle cmp mov mov jle sbb fistpll xchg or outsb addl add cmpb pushf ljmp fstps mov and cli lcall adc cltd pushf (bad) mov add jecxz fbstp aam bound movl (bad) sbb mov repz jl mov pushf push push sub mov fcoml push dec xor sub rcr mov jno and push jbe xchg add call (bad) mov pusha dec jmp out into test ljmp sub adc sub xchg orl lahf aam cmpsb push cli (bad) xor rcll fwait clc std test cwtl movq jbe mov mov mov push ja scas mov stos cmp adc insl (bad) xor cmp cmp inc adc and and mov call xchg pop inc cmp inc cwtl mov and or movsb mov imul mov push add jmp out lods jle insb std xchg mov xchg fisubr test adc bound xor fsubl pop pop mov mov fdivs mov pop and and je iret cli cmpsl aad ljmp lea out mov (bad) ljmp pop imul xchg cmpsb xlat add rolb es jae popf and jnp mov js lea (bad) (bad) or (bad) dec pop mov lret jns mov leave lcall test cmp movsb mov and loop add loopne mov cltd pop dec adc sbb roll (bad) mov dec arpl out ljmp aam aaa test mov repz adc jmp add mov push jecxz mov insb addl sti push addr16 adc or xor dec loope fwait dec xor sub cs xor xchg cmp xchg addr16 loope pop sub add jge cld mov mov pop xchg in adc mov sub cmpsb sub mov mov jb (bad) pop nop sbb orl jne xor aam ds xor mov or test cs cs cmp cli adc out or dec jb or (bad) or sub mov or xchg xor mov idivl popf dec fisubr out fistp fimull lods mov mov lock insl ljmp adc stos (bad) punpckhdq add ss sub subl sub in adc pop int3 roll data16 loopne inc es mov jmp or (bad) dec rcll lcall inc (bad) fcmovnb fcomps (bad) popf movsl repz call mov cmp test jmp rcr inc and mov es pop nop in insb xchg lods xchg dec ret jnp add rclb (bad) dec jae xor mov mov jb into (bad) lahf xor in sbb dec mov push adc lds xor in mov xchg lock sbb test jp and stos rcl pop sbb cmp loop or daa ljmp test fsts je jmp lods add mov cmpsl sbb sub bound nop jns jmp iret jge mov popa dec adc cmpsl fldcw mov and daa daa clc mov test mov dec (bad) sbb sbb out fsubl scas adc mov push stc pop and jmp loopne mov or aam fs stos push mov jae stos les aas add nop add imul adc jg push lret mov ret rcrb shrb int3 (bad) repnz inc pop ret popa test jo (bad) mov int and fadd xchg scas add and mov lcall clc pop mov pushf mov pop fimull dec nop cmp ret mov (bad) xor loopne ja ljmp add and sub jbe addr16 mov aam daa sub pop jmp (bad) ficompl fiadd jl sub movsb xchg pop in jns cltd mov loopne jl mov adc (bad) jae or out pop jb cmp mov cmp xorl sub xchg inc and popf ret rdtsc xor xor fstpl or out clc sbb or dec lret xor xchg pop push and dec notl mov lods leave mov and ljmp jo pop ja jmp insb or mov std aad (bad) mov and test mov push add lds sarl leavew into jbe movsl js,pt cli imull adc in mov in enter lds stos (bad) in movsl jbe pop dec push pop add jle loop pop sbb or inc aaa pop lret or sub cmp (bad) mov in xchg lret mov dec mov into adc push or fdivr sbb inc lods lods std cmp mov add xchg inc inc jmp mov pushf iret sbb pop loopne xor xchg jnp lret mov and jnp pop or lds aas (bad) cmpsl xor test (bad) jl lea sub inc inc insl xchg push rorb lcall xchg sub ja mov (bad) or mov sbb jmp inc push loope test adc mov sbb ss push jp lods jmp mov loopne rol movsb add inc xchg and ret loop adc and (bad) mov adc (bad) xor and (bad) push adc sbb push xor cli sbb mov (bad) or cmp dec cmp leave or flds loop sbb jmp and push adc nop ds adc (bad) shll cmp sub movsb mov mov fldenv xor (bad) inc pop mov mov or ljmp mov mov mov lods cmpl xchg fmull in cmpsl hlt lods mov clc loop push mov pop mov (bad) (bad) jo push insb fcomps adc push rorb (bad) dec jl xlat inc test mov sti fild repnz xor jl out enter cmp cmpsl jnp sti in fdiv mov je add mov ret pusha rolb test lret mov sub mov ret cmp jg sbb scas ret or aam lahf in xor repnz lock jl lret jl xor cmpsb add jae fdiv outsl dec jecxz (bad) (bad) or fcoml cmp mov cli lcall xchg cwtl rcl (bad) push and and jnp fwait test push lods xchg push fsubrs push cwtl adc enter add push inc add and test lods (bad) pop xchg sub lock sub pop lcall stc (bad) (bad) in sbb fcomp les and or sub idivl adc icebp dec and test pop rorl in jb pop fildll mov jmp sub pushf nop push mov icebp (bad) jne mov mov test sti or dec add js adc xor scas add pushf (bad) mov mov sbb (bad) add pop sbb mulb scas lret outsb loop stos (bad) in leave fprem1 jnp pusha adc mov xchg or jle into repnz pop sbb push jge or fcmovb les pop or jp jno lods or and outsl xchg pop and test mov (bad) push sarb aam fwait cli inc push movsb leave adc call sub lret int3 cmp (bad) ds mov jns cmp xor orl mov jl xchg in (bad) (bad) in or xor lock fdivrs popf decl xor or sub sbb and push push jecxz cmp sbb xor test cmc xchg sub sub and ret addl call int3 mov (bad) cmpsl or jae jbe out outsl sahf jb adc lock loopne and fidivrl icebp je xchg xor mov mov out inc cmpsb adc push push es pop insb add icebp lods rcrb cwtl mov sbb inc out cmpl pusha ret add xchg mov push mov or xchg dec insl inc mov mov and jno clc add xchg adc les pop fist notb rcr cmp int3 imul insl mov in or jp or add jns cmp in jl mov test and fstpt daa inc (bad) pop stos mov xor sbb adc fwait jnp push inc inc aas pushf fcomp jno dec lahf add inc add loopne pop and (bad) loope lcall add dec aas mov add popf cmp mov loop dec sub fcmovu popf pop pop int3 (bad) icebp inc pop iret fisubrl and shll xchg aaa push jnp push mov lock xorl (bad) rcll shlb in mov ljmp jmp stos stos rcl xchg addr16 ret es dec lods test (bad) adc call adc mov fidiv inc mov pop or fcmovb and subl shrl lret daa xchg mov sub loopne push dec sub inc lret inc pop call xor inc or mov pusha mov jnp xchg mov jmp loopne jbe cli push xchg stc xchg push lret jle sub fs xchg jne jae mov add push mov enter cwtl pop fidivl and push or and jmp inc stos cmp sbb pop je xchg mov repnz pop stc cld pop call jnp jle rcrl xchg (bad) lret sbbl xchg movsl cmp int3 jae mov mov pop or (bad) sbb sbb or js adc pop mov sbb add cmp loopne les add inc sbb cmp inc icebp stos ret xchg rorb movsl leave pushf outsb mov xchg mov mov sub xlat je push ljmp mov cwtl rol pop inc mov repz mov xchg nop enter mov jbe popf push iret lcall add jle outsb cli xchg add loope movb xchg jg sub aad in lods pushf lods loop push push lods jecxz clc xor xchg sbb cmp xchg sbb fisubrl shlb sbb and mov outsb push aaa adc and and jbe adc (bad) adc cmp xor ja lods mov adc adcl sbb adc mov add (bad) jmp xor rcr mov mov mov test lcall (bad) mov push ss push cmp insl add xor mov sahf sbb lock pushf or js rcl stc and jecxz dec popf test sbb ret (bad) popa dec pop add test lcall scas xor and jns mov push jecxz mov aad xchg je dec inc push scas lods iret inc in sub (bad) rol adc dec cwtl mov ret mov lcall in loopne or and stos loop lea mov or sub jge jno subl cwtl leave andb add enter push and nop insb lea and cli push jns mov or inc lea ficompl cmp push inc loop in imul jb sbb test adcb fsubl outsb push repnz sub std adc imul sub inc sub repnz mov les (bad) adc (bad) (bad) loopne add sarl mov int and mov inc cmp fs cmc (bad) int3 mov sarl scas stos inc or notl jge movups mov or fadd daa mov mov iret int adc mov mov ret dec mov icebp fsubl cwtl loopne sub dec (bad) stc mov pop dec insl pop sbb sub loop or ret into insl cmp (bad) int3 mov push and das push xchg push dec push or iret pop outsl sbb xchg rcrl fstl nop dec iret sbb mov cmp push (bad) mov and stc sahf cmp mov add lcall popa and ret pop mov xor fnstcw popa adc pop adc (bad) loope jecxz bnd mov or dec cs (bad) cmpsb mov jmp sbb mov pushf mov mov les lcall pop add sbb add adc test mov loope fisttpl insb cli or jne (bad) jnp add inc push les movsb and std in mov (bad) enter test mov call leave dec daa lods ret lcall (bad) xor movsb mov adc pusha dec in fiadd movsb arpl je ret jp cmp and cwtl leave pop adc mov adc mov mov icebp mov je das (bad) adcl daa sbb popa imulb jge subl stos jo jno adc or xor sbb sub movsl mov cmp inc dec (bad) icebp adc sbb pop inc frstor adc xlat dec push dec push push pop pop xchg mov data16 pop adc xchg fisubl and pop dec mov test sbb lock push pop dec adc and xchg and aas repnz cltd mov jmp fwait and cmp shlb call push mov call lret movsl cmpb xor push pop fadds dec daa jg enter popf lea mov add push fsubrs mov adc add sub fstps mov (bad) rcrb xor or aad rcll sahf movsb jae mov add (bad) mov adc mov in stc fst dec mov pop xor xchg jg aaa push shl ret aas sub insl jecxz sbb inc mov ret scas iret cmpl fdivr les mov repnz xor (bad) cmp fbld dec fisttp inc cmp fs xchg and loopne mov loopne adc or loopne xlat mov cltd test adc sbb sbb (bad) cld mov add outsl and addr16 and dec cmpl call inc js repnz lea es lods test xchg or mov inc inc and (bad) and pop add (bad) push sub adc rcl inc popa push ss push (bad) cmpb add and sub cwtl adc into push push push aad scas nop frstor or ss mov push imul sub cmovge das pop xchg gs hlt pop es or push jp scas test data16 test mov hlt ja (bad) cmp mov xchg push xchg dec jnp bnd adc into (bad) lret test cmp xorl dec insb mov dec sbb pop mov fdivrs popa jns jae in fdiv xchg xchg icebp rcr int3 rolb pop push add pmulhuw push adc xchg pop inc or test adc outsb fsubs test lret icebp cmpsb addr16 add fisttp inc or push mov sbb sub cwtl lea mov and cmp les int push xchg dec mov and loopne push and and (bad) sbb ljmp xorl xchg dec popa gs or hlt (bad) insb lods fs je bound movsb insl add push sub push mov test fist outsb (bad) push fsubr jl lods cmp jp mov mov or fbld and mov mov sub pusha cmovno cltd mov sbb test stos cmpsl int ret sbb (bad) jno js into pushl xor stos jg stos inc cmc jmp aas mov jle dec xchg mov loopne and in rclb test or inc pop mov mov clc test loopne fyl2xp1 test sarl or add popf stc adc jle dec clc pop or and scas xchg cmpxchg lcall les or dec sub xchg jo mov test enter mov or (bad) pop fidivrl inc (bad) mov (bad) push test add loop cmpsb hlt dec int3 cmc in (bad) cmp add jne pop ljmp cs arpl in cld insl pop stc or mov mov and xor and fild mov jg ret xchg aas mov cmpsl stc (bad) sub adc inc rclb movsb push or mov mov pop lcall leave cmp inc les mov pop int3 scas jecxz dec loopne and or mull sahf outsl test rol dec imul repnz into lods aas mov adc xchg (bad) lock mov pop mov fildll jnp add repnz inc mov sbb les stc mov xchg and mov int inc adc sbb lcall sbb sbb xor mov repnz and fsubl aad sub leave inc pop jae cmp test repnz mov clc dec shll (bad) mov popa (bad) movb loop out xchg mov iret sbb test mov inc and inc aam (bad) cwtl cs sbb fucomip (bad) mov sub mov sbb xchg mov xlat adc pop ret sub (bad) mov data16 ret and not jecxz call js fist sarl mov imul rolb adc fwait loop stos mov inc dec add xchg or movsl mov cs cltd ret mov add sbb add mov pop fmul (bad) cmpsb jns test or pusha repz sbb add and fsubrl loope and in pop in movsb popa loopne fdivl sbb lods lods into stos push outsb mov xchg jl sti gs test jnp mov adc mov repz div shrl mov and mov mov inc jecxz int ror lret pop fcomps add pusha jmp loop xchg sahf mov jl dec sbb dec xchg jmp leave mov out fist enter sub push push sbb pusha loope ret (bad) mov mov lods and or xchg lea movsl mov xchg les or add cmp mov mov popf mov push les pushf fwait sub xchg out out fbstp add shll add mov mov mov inc lods in inc or or adcl xchg loopne push xor jnp adc push jecxz loop xchg add jnp int sbb int3 stos nop ror cmp sub cwtl stos pop adc rorl test loope adc and (bad) jbe mov js adc stc std pop stc les lret inc cmp pusha leave jecxz and rorl push jecxz test jns outsb jge pop lods repnz rcr (bad) (bad) mov (bad) hlt xchg xor scas mov mov aam lods cld or inc stos insl dec sbb jbe and mov jnp mov (bad) sbb iret dec inc inc inc jb add and mov fwait dec (bad) je sahf rorl mov fdiv jbe mov das mov cwtl cwtl dec xchg inc pop das xchg or loop sbb sbb shr inc lea dec inc dec subl flds inc mov mov add loop addr16 cmpsl xchg mov setne xchg call aam out xchg insb movsb sti cmp pop inc sbb adc mov imul cld mov pop mov push in loopne adcl (bad) call stos loopne iret stos (bad) fsubrl pop andb cwtl cwtl test stos outsb jo scas or lds sbb push mov xor rolb iret mov dec test subl mov adc mov sub clc ret (bad) add xlat push (bad) mov mov mov inc mov mov push jmp or andb lock inc pusha nop mov nop les dec fild sub push cld sbb ret rcll adc fdivr imul lahf mov test rolb sub loop setb push mov xchg mov imul pop lea push fisubrl test imul fwait xor jnp lds int3 cs mov xchg scas jne xchg aad jecxz or gs mov fdivs cmpsb jmp int3 ss addl dec iret sub inc and insl rolb push rorb loop loope jno and stos out lock mov sbb mov mov xor leave mov cmc mov roll pop iret mov push inc and adcl ret dec inc (bad) mov fadd mov dec fdivrl inc mov fcomi repz pop lds pop add xchg and adc (bad) xor add lods shll les jns sub adc imul adc test sbb outsb dec shrl dec stc imull inc mov add and shrb mov sub mov and rol lods clc movsl inc add xor jp bound inc add cli imulb or and mov pop jb mov int movsl std or rcr in lcall pop insl push lret out cmp and mov sub stc or movsb popf test popf fmull cmp cmp insb fcompl es lods pop jmp ret sbb and jg or jb les mov add mov popa fcmovbe sbb mov hlt push pop sub adc (bad) and inc jg sub lods and xor inc das pop fdiv lret and inc mov bound add jb push cwtl mov dec mov les fbld jbe push sbb pop jle invd cmp (bad) stc fidivl sub cmp mov or mov ds pop (bad) sub gs dec sbb xorl xchg mov mov (bad) (bad) fbld mov sbb push scas xchg lahf dec adc dec (bad) cltd (bad) fimul add xchg xor mov inc push and fcomp inc ljmp add pop outsb or loopne lds or sub push pop mov test pop loopne dec test mov enter dec push jp scas movsl mov scas mov push cmp xchg outsb mov jecxz adc push xchg sbb or jle mov sbb xchg mov xor fcmovb and and jle or js sbb flds xorb add popf test inc stc mov insb ret jns ret in test movl shlb mov bound or mov fadd fdecstp popf cwtl movmskps movsl pop pushf adc sub cltd mov in or gs jbe and sbb sub xchg mov loope in xchg or movsl in add mov jae (bad) mov dec add lock es mov push or (bad) loopne rorb dec popa (bad) cmpsb xchg pop iret (bad) enter out (bad) lock inc or or test jb pop xchg jo adc pop adc pop std adc xor xchg adc (bad) test pop shrl pop js pop loop dec mov mov xchg loopne mov jnp jae outsb mov call or fcomps adc int3 fisub ja loopne (bad) cmp push cmp lods sarb loopne cmpl and rcl dec sahf jnp call xchg arpl inc cmp lahf push adc movsl clc movsb cmpsb popf or shlb leave sti sbb sti jae jnp push movsl imul movsl sub enter int3 adc jecxz mov xchg push movsl adc xor or outsb sbb sub loop pop pop lods sub add orl enter push push add mov or mov lcall sbb rcll push pop xor xchg enter push xchg push push cmp (bad) loopne (bad) shrl sub cmp and jns das add fbstp imul roll xchg add into sub mov int3 add popa (bad) sbb outsl fcmovbe push xor inc fistp lea mov push add push insl (bad) stos test and in mov xor data16 dec mov mov push mov sbb int3 or jl push mov adc jg imul jge test daa cld jl cmpsb out inc jns sub pop sub aad pusha lcall mov fimull (bad) sbb mov (bad) xchg repnz mov fnop adcl mov stos push mov and xchg lcall ret ss sub adc adc push or mov aam mov xchg lret call xor cld ljmp push and cld push stc add cmc (bad) aaa (bad) and dec cwtl push jbe xchg cmp scas and xchg clc (bad) pop movsl add and sbb sub cmp lods subl jle lcall enter (bad) lock mov mov loopne inc xchg test fdivrl lret jo dec jno adc or fadds dec lds pop aas inc insb add notb movsb dec imull inc push cmp cmc and repnz ds mov roll adc or sub xchg clc nop cwtl in add dec adc pop xchg rcrl jo ret add int3 adc mov pop dec sbb aam fsubrl add enter pusha mov adc addl xor xor mov jbe sarl and ja lock dec imul mov adcl test popa sub scas xor and pushf movsl test sbb test call stc daa clc clc lods cwtl (bad) mov sti movsb jge fwait fs icebp movsb and rcrb fnsave aas inc mov xor dec cmp enter stc pusha inc rol sub fsubrs lock mov faddl mov das mov mov and cmp pop jge mov and xchg inc dec fldt cltd ret or repnz pusha fs jbe or lcall fmul movl mov inc orl lcall aam (bad) (bad) test jl ret xchg jb (bad) iret gs pop jnp and mov in nop sub (bad) (bad) lahf out cwtl pushl pop jns jns int sub add mov pushf mov cwtl clc in sub sub test js mov fldenv mov int3 sbb je sbb add pop cmp xlat (bad) test jno repnz (bad) adc xchg mov mov xchg movsb dec jnp fisttpll push mov pushf fmuls in push scas faddl cmpsl push sbb xor cs xchg lods and ret std xor cmp jle int3 inc insb mov fcoml test sbb popa sbb rcl and mov int3 cmp sahf int in jp call test mov mov das mov std out andl imul enter dec pop mov sub repnz adc inc ss add jecxz repnz in (bad) (bad) outsb inc mov addl ret xorl add xchg mov and loopne mov arpl js mov movb out fadd insl sbb push pop mov xor mov pusha (bad) pop jns or insb (bad) jae (bad) je fcomp mov (bad) ja popa aam imul add les sbb loope xor and out outsb inc test fnop jbe cmp inc lods push fsubr nop and ficomp (bad) pusha or mov or out xchg repz adc int3 test movsb test cmp inc shrl or ds mov aas push jb clc mov jae mov fwait add sbb mull add movsl cld fsubl pop enter movsb sub stos mov add cwtl mov mov int3 dec lods sarb sbb push out xchg xor sub dec imul push dec cwtl rorl popf clc xorl stc iret xlat mov xchg nop mov sbb (bad) xor loop cmp xchg in push mov jl aad mov and mov pop test ret shrb nop lds sub int3 andl popa adc into xor clc xchg push jo cmp lock mov and popa int3 mov (bad) mov lea outsb jp mov scas mov dec ljmp ficomp cmp mov lea ret inc adc push lcall rcrb sub les push mov add (bad) cmpsb sub mov add pop xchg xchg lcall cmpsb pop mov sub and sahf fsts jg mov pop ja cs pushf lods adc shll rcrb stos jae outsb lcall xor xchg cs int3 inc fcompl rcrl xchg mov adc mov sbb xchg dec rorb push jno lahf cmpsl mov push out rcrb shrl in clc imul sbb sub mov test das mov push lds xor ret sub insl (bad) sub (bad) (bad) lock cli mov add (bad) iret jo (bad) cmp sahf jmp dec inc pop ja pop cmp dec lods push mov sub dec popa mov mov cs mov (bad) rcr and dec pop aam arpl iret stos fsts inc stos clc or sub jp mov das adc xchg cmc inc inc sub sub movsb movsb (bad) in adcl into mov adc fs in pushf sti test xor fnstcw int3 add xchg lcall and loop xor and lahf fs mov lret cmp loopne int3 test stos add push inc xchg sub roll ret xor scas std testl pop std movsl bound and cld iret out lods enter pop cmpsl dec rclb mov out aad adc mov adc (bad) out and or add mov mov repz cmpb dec mov es out fildll sbb pop pop fildll aaa jge cmpsl lahf sbb std outsb or test xchg (bad) add push sbb (bad) pop push out lea jns cld sbb mov negb dec or mov cmp push outsl cmpsl iret in fsubr push jecxz mov insb shr dec (bad) cli pop mov pop adc lods dec cmpsl cltd loope (bad) out xchg pop test jle cmpsl adc xor loop test push mov inc ret lods xor inc push xor add mov mov (bad) mov fist and scas push fcom xor stc xor je mov (bad) mov test mov loopne js ljmp outsb mov sub cwtl add xchg or shlb scas jmp cmp movsb xor push aad aad mov fcomps imul sub jle lret fnstsw lret xchg add int leave and fmull xor mov mov cmp nop rolb xor stc fild pop fcmovnu inc cmp loope subl loopne cmp inc sub lea cltd sbb xchg pop sub adc lods inc cmp fs lret lret in insb mov fimull xor push movsb pushf jb movb cli add pop adc or fwait mov (bad) jnp pusha jae ss ds sub jnp ret pop sub in push shlb add jb dec pop lock js and int3 dec and sbb mov push lds mov mov fcompl mov call ret mov jp or into orl sbb test (bad) mov ret inc jmp add test shll or pop sub add mov enter leave stos xchg (bad) hlt sub mov sbb cld in add pop sub mov adc jecxz jno into mov mov popa inc rcll nop arpl sbb cmc sbb nop adc xchg cmp dec cmpl fsubrs (bad) sbb add inc lods and loopne pushf clc cmp cmpsb adcb mov icebp iret inc nop mov cmp dec loopne dec incl or test add roll popf (bad) in mov ror xchg (bad) mov outsb je stos fdivl bound cmp cmp or jmp in mov rclb xchg fcomip idivl xor andb push into mov roll and int mov push icebp add mov fnstenvs fbld jnp sbb inc je outsl and popa mov shrl mov pop (bad) daa xor bound (bad) clc insb mov and sub adc aad int3 mov movsl push pinsrw cmpsl cmp mov add adc push sbb movsl xor repnz jle loop mov inc (bad) (bad) jo outsb pop outsb andb mov fiaddl inc sub js dec add mov jb push jmp lods pushf xchg js scas pop mov xchg or push ret and cwtl sar iret sbb enter fbld cmpsb dec outsb into rcrl lret xor je fcomps or fisubl fadd mov adc std or cld call (bad) lock cmp mov push cwtl idivb sbbl push aam add inc rcl adc bound js (bad) fcoms cmp jae mov test roll mov (bad) lds jp (bad) mov movsl adc shrb mov sbb rolb lods push es scas jno pop or inc cwtl xor cmp cmp fucomi cmp cld mov out in xor mov sub push jp shlb pop cmp cwtl movl enter xchg std inc clc js cmpl bound std pop cli push mov shrl sub nop pop (bad) sbb in mov out xor cmp cwtl jbe lret and add xor in pop loopne mov jle arpl shrl jno (bad) ficoml sbb les adc loopne dec hlt call add test xchg movsl dec test lds cmp or mov sub (bad) movsl scas cmp fldcw mov xchg scas add cltd xchg add or aam or mov mov addl mov mov adc fiaddl dec daa dec cwtl in (bad) aam mov (bad) push and clc fiaddl mov xor arpl add fmul mov jno cwtl inc adc or test test nop xor shr push lock cld mov fldenv push add adc add call dec add sbb ss jmp popa std sbb in repnz pop xor loopne (bad) cltd dec xor out mov (bad) cltd push jb pop sarb negl xchg mov xor fbstp mov sub mov into ds push insl je ljmp int3 fsubs and mov cs into sub in adc nop in mov jno in dec inc mov pushf mov (bad) dec hlt pop pop out mov mov pop loopne lods inc (bad) mov dec add xchg cmp cwtl sarl or mov add enter push scas xchg jmp js in pop inc jge stos xchg xchg dec (bad) daa and inc mov mov fsubl pop iret adc jmp jne (bad) xor cmp add jg (bad) fsubr clc cmp ja iret cs pop stos test test cltd test mov add lahf add into jne lods (bad) incl (bad) jp repnz ds lods fistpll sbb lods xchg push in adc fs xchg add stc cwtl fwait cmpsl push jo sbb or mov mov enter inc sbb fsubs and (bad) mov popa (bad) jbe push insb mov xor enter ljmp xor bound jmp sub jle test fdivrp xor (bad) nop push out popa adc mov inc les movsb rcl jecxz mov insl sub mov shrl icebp inc int (bad) scas rep sbb xchg movsb popf mov cli mov and bound mov and mov inc pusha mov sti arpl (bad) test ret xchg sbb or clc std ljmp movsb add sbb sahf mov (bad) xchg adc aad stc cmp dec fsts pop popf repz mov pop mov mov cmpsl add sbb popa mov (bad) jnp in cmp lods dec lret rolb or sbb fs sbb andl mov mov int3 push sub rclb xchg mov fistp les jb ret ret stc xchg adc dec push pop ja and xor cmp iret jne mov and int3 (bad) mov dec test jecxz sbb cmpsl push sahf loop or push std mov (bad) mov inc scas mov pusha adc or xor lcall scas sub jle int lea fs mov add je xchg shrl push push pushf stc mov mov test and mov les test mov jmp sbb push mov xchg incb push enter insl sahf lods jg scas push adc (bad) sbb pop cli pop enter mov mov ret clc movsb iret dec mov mov fbld repnz int pop sub sbb adcb pop popa mov mov mov arpl cmc fdivl mov bound or mov bswap adc insb sub leave sub out xchg cmp mov and pushf ficompl push fadds mov std fwait scas call outsl lea pop (bad) sbb cltd xor fmul xor add ret or (bad) int3 jae cmp (bad) fsubr fs push (bad) lret dec loop pushf adc adc in cmpsb test mov out cmc pop mov lret out xlat pop ret sahf cmpsb addr16 inc inc sub jle pusha sbb outsb sbb (bad) rorb mov jp repnz loopne je dec mov mov inc xchg stos xor inc into shlb and jp cwtl js xor nop ret cld movsb adc sbb dec push xor rcrl mov mov mov ja sbb dec xchg mov popa or test loopne xor cmovs pop add jle (bad) mov xor fsubrs dec add pop imul xor sub cmp push xchg loop lcall sbb add call mov ffree jbe repnz into iret xchg add fiadd mov cs int3 adc cmp arpl mov mov sbb and add sub mov inc sbb pop cmp sub scas enter xor rcrb add outsl iret cmpsl adc mov loopne adc lock int3 repnz adc mov shll js repz mov push (bad) andl arpl inc xchg jle cmp test je add add push xchg movsb add xchg sbb push rorb cld add mov icebp push rorb cs dec in (bad) lock or xor enter pop dec rcr mov call fimull inc push lods and call je push stos loopne dec je pop dec dec jns sbb jle mov or addr16 nop jecxz lods inc test inc pop popf sub mov insb inc fsubs jg jg (bad) dec xchg sti or into enter adc mov data16 adc xor push and jbe fild shrl or fmuls inc mov aaa add mov and sub popf inc or jge xchg push ret mov sub into incb adc jl fbstp mov push cmc and or cmp xor sub pop sbb dec pop add movsb lret dec (bad) sbb push in add call pop add es movsb and xchg ficom sub jle xchg or js popa (bad) jmp inc add adc cmp xchg stos dec rcl pop or sub iret xor in bound clc test or or daa jmp mov xchg dec xchg push mov xchg pop test mov in sahf mov lcall jle xchg fstpl ret dec mov lcall addr16 fisttp pop jb in gs (bad) sbb nop and fimull or test leave (bad) popa in nop and pop leave xchg loopne or mov (bad) imul sub push ds adc mov mov xchg add adc xchg jb daa lods cmp stc sbb mov idivl mov pop pusha xor call int3 inc and lods cwtl pushf pushf (bad) mov sbb or mov call push sarb (bad) cmpsb dec inc cli and ljmp sbb jbe clc mov cmp sbb mov stos outsl xor pop adc fwait icebp (bad) pop aas dec adc mov cmp movl stos nop nop shrl fld mov pop jg int3 lret mov and xchg mov loopne mov dec shll adc jp outsb repz out or and cmpl movsb and mov dec fld pop push add sbb or or movsb in aas or pop mov jp js mov out mov add rcll dec pushf int3 loopne pop add inc or je mov mov cwtl pandn and iret push pop pop xlat addb sub inc and ljmp mov adc pop cld or adc dec xor sbb fstps pop repnz and inc push das lock fsubrs ret mov (bad) cmp pushf push dec adc inc in sbb lea ret add mov sub pushf xor data16 (bad) lock roll test mov jne test jl dec roll imul push lds movsl (bad) aam or xchg shlb cmpsl (bad) fwait (bad) add xchg es mov jb (bad) lods jl xchg les repz jg data16 mov (bad) push fiaddl xor test sub faddl in stos fisttpl enter rolb or imul mulb dec jle push xchg fiaddl adc mov adc (bad) mov iret mov ret fnstenv and cmpsl into push cs stc add push dec lods popf push lea add pop (bad) inc and pop cmpsb (bad) repz push das jno mov fnop mov sbb or push sub popa test xchg sbb lods in (bad) imul outsb mov pop jl mov pop clc mov or or xchg sbb adc sbb and (bad) sti mov push movsl imul and pusha dec sarl lahf scas lds inc add xchg xor rorb add xchg rorl (bad) xor push movsb decb shrb cmpsb movsl rol outsl mov out push jle push roll mov test fs add (bad) rorb inc in mov sub in leave cmpsb (bad) lea xor pop mov cmpsb sub lds or cmp pop ret or pushf gs js cmp jb adc push lock aaa xor adc xchg (bad) mov enter add sbb movsl jns inc jno inc dec jp gs push test push inc sub pop inc cmp add (bad) jno and (bad) jmp aad jl push (bad) sbb pop stc add gs stos jnp dec push out mov add add addr16 clc push xchg sbb add pop dec call fdivr in sub stc push movsb xchg pop (bad) call rorb jae aad ss add add pop cltd popa cli ds adc pusha xchg pop orl add pop pusha push bound and mov sub sbb mov stc sub lods push push cli jp nop inc (bad) push into and cmp or aam mov mov add jmp shrb fdivp adc inc es adc out mov movsb lcall js popa mov inc pop xchg mov lock ret xchg inc mov push mov lds sbb dec add add fadds arpl ret fadd cmp or outsl xchg xor sub adc loopne test js cmc add lahf cmp (bad) (bad) cmp mov out loop loope jmp add sbb mov inc cmp mov (bad) popa add add nop stos and adc les cmpsl mov popa ret rcrl (bad) loop lods rolb pop out rcrb aam or nop fisubl sbb and xchg in sbb sub or cltd jmp jecxz dec mov push rcrb pop mov (bad) push hlt (bad) fs add add sub icebp mov adc jp mov (bad) xchg jbe in mov add cmpsl and xor inc add gs lods add xchg test sti add mov dec mov ret cwtl xchg push and inc and push (bad) enter pop lret inc ficompl mov mov cmpsl nop rolb mov cltd cmp (bad) (bad) cmpsb mov lcall das (bad) out sub pop loopne lods and cmp fxtract lcall jnp mov fldenv loope leave lahf cmp out mov icebp rclb out stc mov add cltd movsb add jmp cmp rorb mov bound mov mov mov mov inc adc add mov rolb outsl adc mov mov ficoml loopne lods or (bad) and jnp inc (bad) repnz mov push ds leave (bad) mov inc icebp decb mov push jnp shl lods or loope pop xchg cmp dec add bound adc stos push loopne inc mov jb xchg mov sbb cmp adc and pop jnp ret rorl mov rol hlt lcall sub adc les pop icebp dec cmp add mov addl sub xor mov movsb pop stos out bound mov jnp ljmp cmp sarl inc loopne cmp mov jne add sarb daa clc cmpl jne rol sarb add mov popa popl mov bound sbb cmp outsb adc ret mov and jne shlb insl dec inc (bad) sub mov sbbl jne add jecxz jne jne add mov fs ljmp cmp shll mov jno add and xchg jo or sbb movsl les lds mov xchg xchg push mov out push aam push pop shl dec inc rorb xchg addr16 add cmpsl xchg sub xchg rorb sarb daa mov add sub sbb xchg mov les mov push stos loopne lock dec add add inc xchg inc dec popa shr xchg orl in loope mov and (bad) (bad) shrb xchg (bad) mov add ret and mov add pop mov inc shrb add cmpl jae mov adcl mov push cld xor cld (bad) std mov inc adc push adc cmp jecxz insl ret ja sub pop or mov mov add jmp jbe jge popf mov and mov pop test mov ja xchg adc sbb cltd push rcrb or (bad) dec lret mov sub or xor notb fdivs inc repnz or popa push in push push test iret stos xchg pusha add inc mov sub or xchg xor shll insl mulb mov in call or pushf mov fisttp out int3 inc aaa jle out cmpsl or (bad) mov and sbb mov adc lods add push sbbb mov jb (bad) lock int add clc inc and add xchg mov mov jmp or lcall mov mov idiv iret jnp ja fist pop mov mov iret mov jnp fbld sbb (bad) lock mov xor scas (bad) les int3 cmp or mov rol (bad) mov add jnp mov mov out xor pop stos pop sbb add test pusha aas lods mov dec stc jns popf add sub lods jne (bad) std xchg add xchg clc mov dec rolb cs add adc cld mov mov (bad) and hlt mov addl popa cltd es inc (bad) cmp cmpsl lods xchg inc mov bound (bad) mov cli in mov add int3 xor movsb mull daa pushf ret inc or or nop cmpsb mov inc clc loop data16 xlat aam gs es loop xchg inc mov aam adc mov leave or adc pop mov iret add movsb pop rolb mov rorb data16 add xchg lds inc nop cmp stos and xor leave insb flds lret and mov dec rcll sbb leave mov rcrl sbb flds ror xor add nop adc mov mov cmp xchg aas mov icebp nop adc mov sbb std cmpsl inc aam adcl cmp movsb (bad) xchg fidiv push and fnop fidivr and insb in push rcrb rclb or xchg test push inc das es push add and int3 repz mov adc sbb push nop rcrl sub int3 fcom cmpsb lret lcall xchg les dec push dec fcmove jnp cmc mov icebp test adcl std in mov movl cltd cltd jge push stos aaa add pop jae data16 (bad) xchg push or divl mov push (bad) mov (bad) mov push hlt jge mov jno ficomp shrb scas adc pushf shlb cmp out rcr mov cmp xchg (bad) fsts sub fildll xchg bound xchg pop push rorb jl push mov or pop and out stos orl sbb testl cmp test add (bad) call mov mov mov ret or fistpl xor adcl or dec adc sub pop imul inc cs dec test les sti lcall enter (bad) fs mov sub scas mov (bad) out iret and imul jge int3 dec sbb and pop out outsl dec (bad) mov adc push sbbl and orl sbb add (bad) negl enter pop outsl or cwtl jmp inc mov arpl xchg clc ss (bad) sub test imul mov mov or test xlat test adc fs jecxz (bad) xchg movsb cmp dec gs rcrb add pop movsl xchg push inc sub cwtl jmp (bad) jle xchg xchg mov fistpll lods mov fs or jno sahf lcall mov adc sbb and mov push jae outsb bnd popf jmp add mov leave adc dec test ret adc jno jmp imul or test cwtl jg fildl xor jecxz mov daa xlat push scas lret (bad) inc lret imul pop fisttp push xor dec cli shrl sbb iret es dec dec fisttpl sub or inc mov add fsub ret inc aad nop xor cmp shll mov imul enter cmp xchg call xor aaa ja mov fstpt loopne inc mov mov out into push insb ljmp jns pop and add jnp (bad) adc clc push insl inc shrb stos inc std and inc cld mov scas xchg or sub (bad) sbb dec adc push and lea add xor aad sub jge mov mov adc inc dec icebp ret adc rorl dec jbe and xor sbb jns leave fbstp test shll cmc popa call jmp mov dec int3 jno mov mov push inc cmpsl sub stos cmpsb push ret int3 out test rclb pop inc adc pop fdivr xorl bound jb mov pop cs nop adc mov xchg shll cwtl clc add fnop cmp cmpl int3 mov stos test outsl movl sub mov sbb ffreep xor enter adc add dec aad bound and nop mov int popa test test lahf mov or xor xchg inc int3 jg pop push mov (bad) sti (bad) cmpsb sbb cmp imul insl mov fimul push and insb sbb jo cltd lock xor mov shrl xor lods cli fidivrl pmullw xor mov ja push ret push int3 rcr and pop sbb and mov xor lret int3 jo xchg cli nop scas mov int3 sbb aad xchg aam dec bound repnz sti sbb mov shlb mov cmp inc loop nop sub jae (bad) int3 fsubrs dec jmp aaa outsb or fdiv mov and or push add aaa pop ds pop cmp (bad) fcmove dec enter aam js and inc (bad) cmp and or mov loopne bound aam mov mov pop (bad) movsl mov mov fdivs inc sbb mov stos cmp sub nop mov fmuls sub add dec and clc mov mov loopne or ret cmp insb inc and es subl ror in jno dec jae fcmovbe xchg mov movsb (bad) dec clc aam add sarl ret (bad) clc jle nop (bad) (bad) je int3 es shlb ret enter adc mov jmp push ja rolb faddl jns pop jg xchg push fnstcw jbe sahf pop outsb dec (bad) into mov dec test xchg cmp pop (bad) or in xchg and cmp rcrb mov stc or fidivl fstl sbb addl mov clc sbb xchg mov shlb mov xchg lret inc shlb fsubs loope andb (bad) repnz fild dec imul mov addl inc dec jae mov mov fwait jp add add pop sbb daa sbb pop movsl cmp (bad) out pop mov jle xor lds cltd pop mov pop cmpsl cltd jo jne pop sbb fnsave stos lahf inc hlt mov mov adc into (bad) repz xchg or xchg int3 inc add les mov fs sbb mov mov mov scas mov sub jp (bad) mov pop daa (bad) dec orb icebp inc imul and cmp shlb (bad) data16 enter fdivrs mov loop cmp rclb inc inc loopne push cmpsl or (bad) cs test loope inc xchg cmp xchg ss xchg jle cmc cmp leave (bad) inc in and mov stos jae leave cmp xchg insb jmp cmpsb xchg adc and js movsb pushf xorb mov or ljmp les dec push mov movsb xchg data16 aam adc adc pushl clc aam push pop mov cmp addb in in ret fistp lock cs addr16 shll je cmp and inc xchg jle ret adc fisubrl xchg clc push aad sarl mov push mov xlat jns push test aam or xchg pop insl test fiaddl adc test lods aas rorb in jns lea sbb push add mov mov movb out (bad) movb out je xor test bound int3 push sahf (bad) push mov es add add jg xchg movb outsl lcall mov mov sbb loopne jmp xchg add sahf or mov inc pop sub sub push sub jmp push mov insl into dec or fiaddl rep xchg in add sbb inc adc pop je aam add mov loopne mov ret xor arpl shlb xchg into movsb mov fwait mov movsb sbb push add aaa cmpsl xchg test mov inc arpl aam lds sub mov inc inc in das stc or imul xchg sbb subl mov dec outsl (bad) sbb vcvtps2pd int dec fs (bad) es rorl les rol loopne sub xchg les adc lock dec mov cmp cli dec dec mov mov fsubl clc xchg add arpl into inc iret cmpsb adc inc (bad) stos and xchg jp sbb aad mov rorl cwtl sahf insb call vmread inc bound add and in test mov inc push (bad) aaa push outsb cmp dec cwtl push dec mov dec sub xorl mov je xchg out jae fwait pop fsubl or enter inc fcmovb stc (bad) ljmp jle ret and leave hlt stc sub (bad) out enter fadds inc cmp mov fsub loopne adc sbb leave ret fs std movsb sbb cmc push insb rcll xchg test or mov pop add push fadd pop sub rcrl pop adc xor js mov mov bound insb dec mov push jle (bad) cwtl push insl inc lahf idivl js mov movsb into (bad) cmp xchg test mov push je sub mov add adc fs (bad) dec jmp xchg aas lcall roll inc xchg movsb fiaddl out neg cmpsl mov icebp mov sbb test mov loop mov dec push stc arpl sbb je inc pushf or leave xchg and loopne test (bad) nop dec xor (bad) imul pop or das test or das movsb or subl leave pop imull and dec xchg add loopne add mov add bswap and or and or jae cmp xor shr push (bad) jbe jg and and xchg shrb cmp inc mov mov fwait mov enter sbb stos or xchg nop mov sub (bad) jnp and xchg dec je lret adc fs nop sub inc loopne sub add xchg dec sarl dec popa dec arpl (bad) fs loop sub mov nop fdivl sarb mov mov mov mov loope dec fdivl cltd (bad) pop test (bad) mov cmpsb xor mov xor rcrb repz dec jae push rcl call fistpll bound in and inc pop sti ljmp mov mov fdivrl insb (bad) clc push xor jle sbb (bad) scas mov cmp sbb pop stc pop adc loop aas sub mov daa popf mov daa add or push mov dec ret xlat or je call rcl mov xor mov jp (bad) rcrb jns ret cmp mov subl ja push adc push add (bad) mov aad and and xchg inc fistpll in xor push jo lret add adc fmul jge sbb or lds sahf and (bad) mov dec mov rorl vfnmadd132pd bswap push (bad) jae push (bad) mov add sahf mov push in jnp sbb mov adc add nop inc (bad) stc pop and jecxz mov pop jns xor sti lock fmul fildl jl or dec sub jl xchg bound xchg rcr int3 fildll outsl (bad) (bad) pop dec pop or mov aad imul scas dec pop push inc aam or and mov add dec cmp (bad) fbstp mov inc add mov mov movsb or mov test adc stc push addr16 inc or sbb int iret loopne fcoml jo,pt ret mov xchg mov push call (bad) pop movsb sbb in lret sbb int3 mov ret mov cmp push sub sarb add ret mov test cmp adc mov mov das insl cmpsl sbb xchg push ss nop and sarb pushf fild test push nop and pop je movsl pop adcl ret sarb dec sbb sbb push inc iret adc or imul and loope sahf in (bad) pop add pop fnstcw rorb jns loopne nop push xchg adc cwtl call mov cltd (bad) mov or and ja xchg pusha rcl (bad) popf cmpsb test leave jns movsb inc mov movsl stc cltd stos or xchg adc lock xchg pusha fsubrs or and xchg push ret outsl jns fmul cli (bad) (bad) push add loopne sahf dec fsub stc leave sbb lods jns adc lock xchg sbb sbb jnp les loopne pushf gs dec idivb rcl (bad) fsubs inc out mov adc cmp sbb adc mov and lret rorb inc sub lods fnstcw mov cmpsl stos xchg cmp and mov pop out mov dec dec cmp jae addr16 push iret fadd outsb decb and les popa (bad) and data16 cmp fnstenv stos imul jno fadd mov xchg cwtl xchg cmpsl (bad) popa fstps movsb clc pushf mov mov mov cmpl mov add es imul inc sbb jge or aas ljmp xchg mov fadd lea test test decb cmp mov add push jp sbb xlat cmp jae jno (bad) repnz pop xor mov stc add js out push xchg sbb or jae cmp mov sbb jb sbb or cmp jae stc mov cmp sbb pushf insl int3 sub loopne push (bad) xor and jns mov sbb or rol je stos orl dec jp lret lods fnstcw orl mov push pushf mov dec sbb sti and stos jo sub js bnd pop pop adc fistp jae sahf (bad) jge in mov push subl iret pop loopne jne lahf sbb and jb out sub cmpsl push outsb popf jns xor movsb inc pusha and scas and sarb cmp jns (bad) cld pusha cmp mov lock (bad) jae mov cltd shlb pop in lea push and (bad) test stos or out cmpsb mov or mov and jb sbb sub ret pop push out cltd pop push ret mov add dec sub cmp and jns les cmp and add jge dec rol lret out popf jns fisttp stos setns out (bad) das lcall in (bad) dec push loope inc insb mov inc iret rorl xchg sbb mov or adc dec jmp mov mov inc sbb fidivr inc cmp and pop inc add sbb jb sbb or fwait adc xor cmpsb cmp lock (bad) dec xchg jge dec idivb sbb ret std dec xor popf add (bad) jmp sbb cli add and push enter mov xchg pop dec fsub stc add sbb jns dec and cmpsl mov push imulb inc xor lods (bad) sbb push les push imul int3 jp movsb inc arpl fidivr push xchg pop or test (bad) mov jnp dec push inc test sub xchg bound xor subl pop mov dec mov lea and mov iret pushf gs sbb or scas ljmp jmp mov popa (bad) cli add push (bad) mov pop rorb sbb push mov adc imul sbb cmp push jns pop lcall pushf gs lods xchg aaa adc sysret ds popf jns inc mov xchg sub push mov cltd cli jmp adc les adc mov loopne pop xchg sub movsb nop jge (bad) iret fwait adc xor or jecxz rcr xchg add xchg jae mov push xor nop push xchg sbb movsl sub mov pushf mov xor sub insb ret pop dec lret repnz fistpll movsl mov pop js lret pop ljmp jnp addr16 mov cwtl add rolb repz mov add or movaps (bad) add call dec int3 mov xchg and loopne adc push fadds sbb mov mov into mov out aad xchg dec loopne fcoms in mov das mov popa rcr sahf mov mov fcomps mov shll rcr dec pop push dec out out sarb mov shll pop push jle pop cli xchg test jmp xchg rcrl lods xchg adc test es std ss jl push bound (bad) and xchg mov (bad) test and stc (bad) mov je and rol lcall jbe,pn mov movl shlb ja cmp repnz and cmp test xchg insb adc orb dec lds dec mov pushf je push push test jnp aam mov enter into (bad) cs scas adc aad loope xor cltd fbld les test push out js sahf rol dec fcomip pop iret imul or rolb fcoms cmpsb (bad) insl dec stos rol loopne jae xchg sub adc lock fidivr inc mov adc rep sbb les mov out cmp or mov sub or sti loop pop jnp js dec imul sub adc inc jae sub push mov dec ja outsb fcomip (bad) ja aaa pusha outsl (bad) lock cli movsl (bad) pop dec repnz shl add and rorl fucomp mov fcmovu push sti iret test das xor popf mov dec lock inc push loop ja jns or mov sub ret jae pushf xor (bad) push add jge sub arpl push in out movsb pop cmpsl adc roll test dec popf popf stos (bad) bound in xchg mov iret sub sub leave ret inc adc xchg test mov cmpb mov dec call adc add fcomp cli dec xchg fwait jl and mov ror mov (bad) iret addr16 push cmp loopne jnp dec lea lods enter mov addl in pop xchg and sbb pop mul lea push dec push clc dec and ja mov push mov add (bad) xor add rorb outsb mov cmp mov or cli push stos cli in ja out jp outsl test aas add sub mov inc mov shrb jge dec sbb notl jge fwait (bad) fisttpll cmp ja ret push inc and sbb cmp sub fdivr repnz inc outsb add in add mov pop xor iret sub subl in (bad) lock mov gs loopne or lds fisubrl popf pop pushf and cmpsb mov add int3 xchg pop pusha lcall faddp popl fcmovbe (bad) iret cli push xchg cld mov sub testl ret je test xchg mov xchg mov pop mov test sub mov fiaddl inc cs ljmp je icebp rcrb in or mov mov jo lock jge mov incl mov ret lret aas mov jle jbe js scas enter test mov add andl ret adc movsb shrl mov lock and push cmp popa xor add int3 orl shrb into or mov mov inc add add out adc (bad) mov rol mov and fimull daa xchg xchg movsb cmpl cmp xchg mov sub push insb xchg js je and inc jl mov and lahf mov add (bad) jmp scas cwtl aad jno and pusha stos aad (bad) lret xor jmp adc sti int3 hlt std fbstp pusha fs xchg cmp out push ljmp fs mov sbb lret neg cmp cmp das cmpl xor fldl pusha outsl lret pop adcb inc adc inc adc cmp jnp in xchg cmpsb mov mov add or lock ficomp arpl call push inc lods rclb xor mov add fadd pusha ficomp pop mov adc pavgb test test imul mov cs xchg add inc push adc and dec xor (bad) cli cwtl sbb xchg mov mov jo mov inc lods add cmp enter int3 adc fsubrl (bad) adc or pop xchg inc mov dec sarb jl mov mov mov (bad) (bad) call cli sbb mov leave (bad) xor movsb ret pop mov jmp in mov xchg cltd out inc cmpsb test enter pusha dec and mov arpl mov ss mov cwtl das (bad) into imul imul cmpsb sti mov and movsl mov add adc and sub and sar jmp mov mov sub add xchg inc mov popa xchg rcrl ret push jle push loope mov xlat nop xor xor std outsb pop sbb jb das test cmp inc jge shll lret mov ds (bad) hlt sti and test mov dec mov or mov mov out add mov or sbb enter inc ficoml lcall or lock xor (bad) jo sbb cli out int3 sbb or sahf fdivs pop cmp add or (bad) xor fsubs rclb mov leave sar mov seto fcom in push test xor xor andl fstl aas cld arpl jmp lods je xlat mov dec mov stc cmp movsl arpl pop ja das mov mov mov inc int3 pop inc sbb cmpsb sub es xor inc mov aaa cmp fistp cmp push or mov in stos int and inc mov fimull xchg js push pop xchg (bad) out push jmp jns dec int3 loopne daa sub sbb frstor push iret repz sbb jmp xor iret ss xchg add xchg pop mov fldt add imul cwtl std jl stc mov (bad) jae mov mov pop test pop jle or xor mov (bad) inc xchg mov loope fcomp imul jae xlat xchg fadd ficom mov fild ja sbb pushf jecxz add bound jns add xor lahf repnz enter jbe adc (bad) cmp js stos mov scas imul sub std inc push pop and or sub mov les cmp jp popa mov fild sbb and les out bound (bad) popa movsb xor dec dec js push jne into inc (bad) lret xchg xchg repnz inc inc fcoml lahf aad xchg pop enter xchg cmp fistp es or (bad) jmp lret pop repz aaa mov sbb into sti iret int3 sbb mov dec mov adc fildll pushf jge mov push xor (bad) sub xor imul (bad) clc or add loop mov xchg pop mov xor ljmp or and dec pop out mov mov pop and enter push int3 and pushf fadds xchg adc int3 imul inc mov push ret movsb fist mov cmp jle pop mov adc flds pop enter push (bad) mov cmp sub cmp pushf mov lock fist jnp pop outsb (bad) add scas adc xchg and rcrl cmc sub adc dec mov inc std fstpt cmp psllq addr16 xchg sahf addr16 and loopne sub sahf fist sbb cmp into and ret loopne mov push andl mov push cltd dec dec mov mov lahf cmp scas mov imull mov ds loopne iret mov mov add fmull mov bound mov imul lods int rclb test mov dec sub es in rcll and scas insb add mov loopne lods or jecxz pop je out mov dec xor lea pusha mov inc out lods fcmovbe xor or int add xor or adc dec inc mov adc loopne or cmp and (bad) fimull stos shlb mov mov adc cmc mov fdivp jle (bad) adc lea enter inc cli mov cli ja cmpsl hlt mov leave lcall mov test inc fadd lret stos loopne pusha dec cmpsl adc fnstenv cwtl dec add (bad) jl pop add xchg adc add or cmpsl push jb enter dec iret and push jbe mov or dec jp dec adc inc mov cmc fnop into xchg shrb pop andl rclb and mov inc or mov dec repnz add dec sbb dec add mov mov or ror (bad) pop lcall add pushf sub cmp (bad) clc adc aad and mov out jnp jo ret mov out clc movsl mov xlat sub inc cmpsb sub les adc loope inc mov xor (bad) out loope jnp aaa pop push and in xor addl lcall popa fdiv (bad) xor negl sbb outsl dec and iret mov adc mov loopne mov daa adc jge (bad) pushf cs mov call lret mov xchg jle xchg push add push mov (bad) mov pop addl pushf test (bad) and mov push lea push imul (bad) mov mov xchg adc xchg outsl popf inc test inc les cmp and movsl mov xchg inc push cs jns mov enter and popf rol adc jge mov add in rcrl imul inc andl lods or fcoml cld testb inc fistpll adc xchg movsl or and rolb xchg (bad) movl aas leave xor rclb jbe ret adc cmp mov (bad) ficompl fnstcw sbb inc inc movsb je add fcomps cmp xor lret arpl dec enter jg sub inc js or and xchg jl lcall popa addl lods (bad) aam jp rol xchg xor mov push mov push xchg jnp loopne sub mov fsubs in ljmp cmp repnz dec (bad) mov dec pop xchg inc mov mov xchg dec cmpsb and push jmp xchg push push mov push add push in cwtl imul xchg repz xor xor pop push add inc in add aam dec and cmp jo popl xchg jp mov and movsl negb sub iret and and popf and and lds mov ret loope inc push mov adc or xor pop imul and rol mov inc mov mov jae jnp test (bad) in mov xchg movb inc rclb js dec es clc fildl pop pop (bad) mov imul roll ret outsl pop add in xchg in mov clc sbb jno outsb icebp or push sbb loopne inc jmp mov int3 mov jae aad pop (bad) and add jmp into mov jmp jle outsl inc pop fwait shl mov cmp out push adc dec cmp push sbb icebp lret adc push ret mov aam divb add icebp add push xchg popa stos jle orl into stos cmp xor ds icebp sub pop cmp repnz adc push lret add js and test jb pop dec inc loop xchg inc test sub loopne inc xlat jg negb cltd repz and rcrb sub push fwait clc shl (bad) in lods or dec popa popl cld (bad) (bad) fstpt cltd ja das sbb mov push in mov adc rcr mov fwait repnz popa add add inc xchg rcr xchg push add pop int3 and sub sub int aaa sbb cmp sub pop xchg nop mov inc jns sbbb push js (bad) (bad) (bad) pop mov (bad) cwtl pop push icebp rcrb pop xchg sahf jbe xor int cmp icebp or mov and mov mov test or sbb adc adc and (bad) jle mov adc pushf ljmp aam sbb mov scas dec pop jne je adc nop ds rclb jg mov addl es (bad) movsb add jmp test lcall fcomip popa mov loopne mov pop mov pop xor add mov sarl jecxz xor jns add ret add add movsb adc out pop dec clc push lret lret test or xlat ja mov or push shlb xchg iret jmp mov pop std fisttpll inc push outsb iret test jae popf inc mov stos stc push stos sbb test add sbb adc sub jb cmpsl into or xor icebp fnstenv enter iret dec lret add je fcoml mov imul sub mov popf rcrb lret mov (bad) scas push enter (bad) mov add xchg add addl and cltd gs stc dec jae (bad) repnz rclb aad mov cmp leave adc mov lock push and or out add mov data16 mov jae mov or xchg ret std xchg andl pop js fs loope mov mov adc ret pop mov fbld jge hlt in int3 mov inc push (bad) mov cli fimull jo xchg mov fwait cmpb or sbb test xchg aas cwtl push outsl mov fsubrl add mov test outsl and ret xor jne imul fmul lcall xor test add in push insl cmp ret or leave xchg mov xlat ret cmp repnz insb clc cli int3 mov and or incb inc les arpl mov ret jns je push stos imul fisubrl test insb or into stos push sub xor mov and and push or xchg or sub push or repnz pushf stos mov (bad) xor jg repnz fimull test sbb mov adc cmc add push nop ror adc add idiv cmp dec ja or inc add push jns cld pusha pop add in (bad) xor mov pop dec xor sbbl pop add sbb (bad) or shlb sub mov pusha sti xchg jae jno xchg ret cmpsl push push add cmpsb loopne inc pop sub and mov leave bnd pop pop int3 inc enter arpl push jecxz dec out sbb push repz sahf roll jae jg push pop std mov (bad) leave xor dec repz adc loopne out test or movsl bound les cltd int3 jae (bad) fdivl cmp je and (bad) mov ret sahf andl pop mov cli adc out inc add adc test inc dec dec icebp arpl and (bad) ret jecxz jle jne adc es xchg mov hlt inc adc stc and mov inc push nop mov loopne sub mov mov and or loopne sub push jb adc dec mov lcall add scas sbb test dec (bad) int3 inc fnsave les cmp ret mov bound loopne add loopne lcall add xchg mov lods gs cmpsl cmp dec mov ror jnp pop mov mov test xor je push loopne adc repnz sbb test dec je into xchg mov mov pmaxub push div xchg xchg and test mov (bad) cmp dec shrb nop int3 mov jle push adc fsubrl in loope mov push cwtl (bad) push ss mov test lods inc (bad) cld lods add mov jle imul push dec xchg mov in add in loop dec push out in mov xchg ret lret lret repz dec (bad) xor pusha xorl frstor push inc sub jmp push test adcl push add (bad) pop lret xlat ret inc in dec lds xchg bound xchg je xchg xor sbbl rclb js je sbb test movl call or add mov and inc jb call popa mov cmc add lods jmp rol arpl loopne jb dec mov adc mov jb nop loopne jae (bad) mov mov nop ret std dec and loopne mov nop arpl add mov add sub dec and pop outsl fmulp aas sarl aam loopne xchg push les loop or push mov xchg pushf xchg (bad) jbe xor and loopne xchg fsubs fs sub xchg lret (bad) mov popa mov push fistpll leave pop xor lcall mov xchg or pop mov inc call sbb pop inc out scas adc dec jbe cmpsb mov push ljmp push inc (bad) call into stos add xor jecxz leave (bad) movsb xchg (bad) xchg pop dec and mov push fdiv les out push les jnp pop xchg loop lods loopne pop addl mov loopne imul jnp mov or push sbb (bad) inc xor dec les sub and enter adc inc xor pop mov popf stos int3 xchg data16 cld test stos out fiaddl adc (bad) pop cmpsb or add add ror ret mov loopne dec bound shrl add xlat lcall inc (bad) out or sub adc aaa sub or push sub cmpsb stc adc pop mov pushf in sub adc fmull lahf mov or push mov mov stc leave and fimull jl or xorl int or sahf aas (bad) jecxz in cmp shrl lcall lret xchg jne adc outsl (bad) lea mov cmp inc pushf cs lock pop (bad) repz les mov ret fstps (bad) jbe inc enter jne mov aaa jle aaa loopne mov push (bad) push sub adc xor outsl cmpsl out adc ror adc outsb dec add testb js roll fiadd mov scas inc add xor (bad) cmp xchg or add jb jecxz into jnp popa mov xchg mov mov rolb add mov addl and out inc divb xchg (bad) xor inc sub mov test shlb mov mov xchg cmc push xchg and pop mov jmp jnp push xchg xchg in rcll mov sbb adc adc aaa xchg int3 rolb sub mov pop (bad) fcomps (bad) mov or sub nop fcompl ja mov mov (bad) pop fld1 (bad) cwtl push int3 and roll iret and push adc out pushf mov mov mov add aaa pushf shll cs cmovs mov inc rcl dec fnstcw shr loopne lds ljmp je in nop add loopne and xor or xchg mov loop sub rolb mov pop pusha and push loop std add and nop push inc ret and stos cmc xor xchg push imul jae int3 stc (bad) jb movsb mov add lods xor ror add inc lods jo test cli add mov std and jmp jo repnz leave bound push (bad) in cmp sbb loop insl (bad) fstpt shl and cmpl scas xchg pop sbb sub xchg (bad) sbb inc add aas xchg sarb or mov fdiv test pop dec imul ja xchg cmp xchg push push xor stos add and mov mov adcl or std fimul lods jae jg inc int daa pop xlat fiaddl sub int3 push mov sahf arpl orl nop add push mov lds jp test add (bad) jno loopne push push jo ja les inc mov dec cmpsb roll (bad) pop pop push jno loope and arpl mov out loopne (bad) loopne mov xchg and adc ja stos out sbb jo and (bad) xor pop sub mov push cmpsl sbb pushf inc rclb mov add jl or cmp sub cmp loope ret xorl or mov (bad) idivb or adc test test lock inc js (bad) (bad) jl stos pop in cmp jecxz ficoml clc push fdivl (bad) fldlg2 mov (bad) mov mov loope sbb mov aas adc nop ror add pop push lods mov loopne mov mov adc mov fimul mov xchg add lods sbb xchg pandn decl pop xor loop hlt sbb fdivrl mov pop test adc xor jae leave je push xchg cli add jo fcoml inc xor je fisubl stc (bad) test xor jl add sub sub movsb lods dec out (bad) and inc add insb jmp popa xchg (bad) sub icebp inc popf fcomps mov fiadd jne push inc gs loope push add mov adc rclb adc xchg fisttp add jnp xchg das lods dec and xchg cwtl inc cmp fnsave pop inc jge (bad) cmp movsl mov jns in mov inc roll insl adc fisttpl test ljmp push hlt xchg stos push adc adc rol ljmp xor cmp sahf fsts scas jae rcr stc (bad) rcll (bad) les sub sbb pop loop jno cs xor rcll cmpsb movsb aam inc notl andl lret mov inc pop pusha sbb cmp mov mov pop clc xchg jecxz mov adc iret inc mov fnop enter in mov jne (bad) mov xor inc repnz xchg adc rcll sbb dec dec add sbb ret lds jecxz,pn pop lods jbe sbb jge (bad) jge icebp mov jo je cwtl mov mov sar xlat dec cwtl (bad) bnd adc repnz mov aam add enter pop jecxz movsl cmp int3 out fistpll adc movsb nop sbb lea shrb jbe dec mov int3 dec mov push mov mov mov imul cwtl rcr add cli xchg sbb lock sub xchg adc mov cltd add add psubb jne mov push xchg mov add nop inc in arpl pop and xchg xchg getsec xor sarb jmp icebp or dec sub rol hlt aam inc push sbb aaa mov lcall or dec and and adc outsl lods jge jmp neg (bad) out mov xchg mov call jp (bad) xor sub loopne pop and and adc clc adc (bad) cmp movsb inc cmp mov mov xor xlat add adcl xchg inc push inc popa add xchg mov mov xor cmpsb loopne inc mov mov nop bound jecxz loop and daa cmp jmp jg xchg repnz sub push adc dec add cmp pop add je aam andl sub subb ds jnp push loope push mov lret inc xor adc or or sahf and cmpsb (bad) loopne mov idiv adc inc xor or (bad) stc push paddsb xchg jl or faddl scas (bad) and mov mov test test inc jae fs ret mov and xchg cmp mov rorb pop mov xchg lret sbb scas leave pop sbb inc js push adc rolb enter push test sub inc cmp fs and imul jle dec addl cmpsb mov push gs add sbb dec dec xor adc sub lret add or adc xchg lock jl int xchg in cmp cmp sbb push and ret fadd jmp rcr jo jo mov inc mov jg dec sbb fmuls xchg frstor shll push mov aaa sub clc add sbb (bad) inc cmp nop nop dec cmp fsubr xor rcrb js test jo mov test in fpatan lcall mov xchg dec loop cmp and pop mov xlat cmc loopne cmp data16 outsl dec and out js mov xchg call add or xlat add in mov xchg xor fmull jl,pn sbb popa je mov add pop add adc popa sub bound je jp das rolb push arpl add cmp mov xchg loope adc xchg or push les mov daa aad pop add ret rol adc jg xchg xor sbb jbe xchg idivb cmp jne sahf lods jle push leave pop aam xor mov push or xor mov cmpsb cmpsl pushf dec dec pop and and inc push enter mov xchg mov cmp push (bad) sbb push int3 (bad) and xchg fs lret and xchg cltd inc mov dec in loopne mov mov sbb cmp dec jl xchg xchg push lret loop fwait mov cmpl sbb or sbb push adc cmp push rol call pop imul xchg inc sti or movsl rorb int and fsubs and lock clc push mov sti rcll je xchg fnstsw shll mov mov sbb pop sarl cwtl sbb rclb sti adc fwait loopne mov cmp and adc mov aaa lds xchg sub jnp mov jno push cmpsl jae iret xchg orl sti sarb arpl xchg nop add aaa sub ret inc or dec mov enter mov mov movb sbb jbe or push or mov icebp js mov psubusb inc add add cwtl add cmp mov fistpl mov je mov jle (bad) pop jne mov loopne cmp outsl xor jne push inc je nop adc and test and movsb pusha xchg popa mov lcall or adcl adcl xchg add es not lahf mov aam adc or ret clc and (bad) mov hlt mov dec sbb daa mov xor sar (bad) adc stos mov iret aaa in push nop (bad) stc insb xchg and scas cmp mov mov xchg jp add (bad) mov jmp inc inc or rol ficompl cli popa add loop mov int3 cmp xchg ja sbbb fadd dec lcall pop (bad) cld pop sbbl fisub jnp cmp xor mov test dec lret into inc js lret inc sbb pop or call iret (bad) rclb mov aas dec inc bound xchg cld or jnp ret mov push roll int3 xchg add scas (bad) mov js and loopne (bad) call and and lods outsb leave popa or inc stos xchg xchg push add cmpsb mov dec push nop orl mov and pop mov fildll adc mov test cs aad xchg shrb movsl adc xchg push add fistp je add pop enter or push nop inc ret inc cmp adc push enter js out adcl ret into or sbbb sbbl add arpl add sub xchg jbe inc in shl xchg mov (bad) or xchg xor int test and mov add arpl popa movl sbb adc pop mov cmp stc add add movl outsb frstor es clc loope jl xchg jae cmpl sbb test mov mov inc adc sub pop adc test cli sub fdivrl mov inc cmp rol enter xchg dec icebp cwtl test cmp and mov lods adc rorb mov dec push cltd xlat or add lods pop and sbb nop cmp lods shlb mov pop add test jl lcall and xchg bound jb (bad) pushf mov popa dec inc inc addl popa rcrb add or pop je dec xchg mov mov xchg mov mov fidivr stos pop test enter add push push bound int3 ret sbb sbb fimull andb sahf jno and adc loope (bad) hlt mov xor add push jae xor outsb inc sub popa dec pop push add add ljmp lds bound dec mov pop push clc mov es dec xorl sbb inc addl jae push movsl das mov sbb mov mov stc mov dec in loopne mov mov cli out cmp sub push and je test mov mov je pop xorl mov xchg movsl jecxz bound inc (bad) (bad) and jbe push mov adc mov notb xlat mov sub in mov sbb mov aad es mov add movsb pop add iret pop inc insb stos fldpi sahf add (bad) and loop inc mov shrb insb mov xor rol sub adc cmp xchg sub and lock repnz dec mov out adc mov adcl clc in sub cmc inc outsb aad sti xor notb stc in movsl push sbb inc mov arpl jle jge arpl jmp lcall mov leave or notb jg movsb add lahf sar pop mov int3 mov scas mov sub (bad) rclb sbb out leave inc sbb and xor inc lret pop (bad) cmp fisttpll adc mov push mov pop dec outsl pop add shufps into mov mov xchg scas (bad) pop xchg ljmp push dec mov stos out cmpsl orl dec jne (bad) dec call int add sub push addr16 and mov arpl ss mov movsl fsts loop fldt sub inc mov cwtl add pop ret xchg mov leave (bad) and inc int3 xchg mov xchg lcall pcmpgtb sbb inc mov call sbb mov (bad) lret sub in shll mov sbb in sub cmp xchg (bad) xchg repnz in add in addr16 push push cmp inc loopne jg or dec test jns mov dec lret lret (bad) cmc int3 in roll enter add mov add lret xchg xor fdivrl dec or dec fsubrs sbb pop sbb (bad) aad (bad) adc mov dec mov sti add push (bad) mov sahf scas inc hlt jns mov cwtl pop push dec sub shlb sahf jmp inc jno mov jae data16 aam cmpsl fdivs inc out and pop xchg mov mov mov stos loopne jb stc xor mov popa cmp adc cwtl or enter call jl (bad) in rol xchg xchg lock testl lcall fs mov gs xchg sub icebp mov adc pushf das push dec daa mov test les popa inc mov xor cli and xor xchg loope bound loop mov mov mov lret inc test ljmp and lret push pop cwtl add cmpsl mov aaa fs jo lret or push (bad) and bound into in cmp mov xchg fs jae xchg aam cmp mov out and adc jb enter neg jbe adc inc test fldcw inc mov mov addl add or ret pusha mov adc xchg dec jge scas mov arpl lods test arpl adc in add dec shrb fdiv jnp lret dec psrlw cmp mov cmp mov mov and rorl std or lret lcall notl roll xlat add dec hlt ret lock adc jle outsl dec inc popa sbb fiaddl inc mov mov cwtl and inc (bad) mov inc lea nop inc cwtl bound lret mov data16 mov sub mov xchg int3 inc mov dec push cmpsl aaa sbb gs inc loop jbe sbb xchg pop sub sub push inc jp popa repnz movsb pop sub adc loopne leave mov inc pusha add movsl std test mov jmp in push shlb xchg ljmp (bad) jae cwtl into lcall inc and lods mov in and (bad) cmp mov push and sbb pop inc pop and (bad) fdivp mov push inc movsb sub jp test (bad) pop mov cs add outsb xchg dec sub setbe movsb inc shrb lods push xchg mov sbb pop (bad) out and es dec pop pop enter jl das sahf sahf jbe icebp dec sub mov jp clc xchg or fisubl jecxz faddl popf xchg xchg and jge and and int3 jns inc (bad) aad xchg pop in in xchg push mov out mov mov fildl nop jae adc dec cmp mov sbb (bad) test jnp ljmp movsb daa inc jge mov cwtl ja orl sbb fiadd cltd push sbb xchg in enter cmc push dec (bad) mov enter aad mov (bad) inc sub fdivl imul in mov int3 sbb insb push dec push cmc xchg xchg or mov mov sub and lret cmp jmp push ret imull fdivr jle fnstenv fdivl repnz dec loope add pusha xchg je jno sub insl stos sub test pushf inc xchg mov and in mov inc or fs jp js and mov out xor popf shll inc and loop add sub loopne bound mov xorl js je add (bad) (bad) inc les or mov and mov add mov mov btr sbb ljmp rol insb (bad) add xchg popf jecxz lods and das mov push mov clc mov jne ficoml dec (bad) icebp pop or enter aaa lods xchg xor clc and jno mov adc add sub js inc stc aam sub xor cvtpi2ps dec push add (bad) jle imul loop stos enter adc inc (bad) cmp cmp inc je stc scas xchg mov (bad) fstl mov leave fistpll adc into push xchg int ds sarb mov jg inc xor cli lods and inc mov (bad) fadds inc sub loope mov mov shrl inc mov mov or test nop mov cld jecxz or dec xor mov and ss hlt loope xchg mov lods movl sahf fwait aaa in cmp xchg out dec stos pop add into xorl lcall lds xor mov and add enterw ss dec inc pushf daa jo ss loope dec sarl and add mulb movsl scas and lds dec xor sub xor icebp pop jnp mov adc xchg xchg pop xor and fildll xchg stos xchg lret adc (bad) adc cli rolb lret adc mov sub or dec inc hlt (bad) mov call bound inc int3 jle daa cmpsl xchg aaa pop xchg mov dec (bad) aaa cli xchg loopne cmp lods mov jg sub jo fs sub fmuls jns das pop sbb cmp stos push or xor aaa out xchg add into sub mov xchg xchg outsl loop loope fidivr pushf rolb inc mov sub inc push and dec (bad) inc jle mov mov rcl loop in negl lret in mov pop pop mov mov jae and push add xchg fwait xor mov xchg arpl and pushf jl (bad) fsts nop and xchg mov lcall (bad) mov les mov in hlt xor xchg rcrb adc (bad) in mov stos cmp es push into dec out cmp je jmp xorl sub scas cli (bad) ljmp dec notb or repnz mov rorl push nop jle insl push mov cwtl dec (bad) fdivs in lods inc add and imul cmovle in outsb daa cs and mov mov pop subb sbb xchg cmp inc xor in (bad) rcrb fsubl clc mov inc jl inc (bad) mov (bad) add test repnz mov sbb lret in sarb push fmull mov add jb or push fs mov jge int3 iret mov outsb les std pop je jbe mov sub enter scas out dec orl mov pop divl mov sub sbb test xchg and out add in pop adc loop push lds cmpb pushf push add or mov dec in sbb or lea (bad) aaa cmp rcl and les adcl or sub les jle fmul xlat mov cmp or icebp pop andb arpl adc adc xchg clc hlt lods jae adc dec enter push roll push insb inc inc pop bound mov xor mov lret mov loop jae or or and cli jo or ret fwait xchg imul jmp (bad) rcrb arpl arpl or add add cmp dec adc and fcmovnb shrl xchg into imul sbb add push add fcomip ja add addr16 pop (bad) xor lret in mov mov or es sub clc xchg outsb xor xchg lods pop dec and pusha fnsetpm(287 daa adc outsb jmp push mov inc add jge loop ds jo push fwait add mov shlb mov dec cmp arpl arpl (bad) or or xchg in mov jge adc or (bad) jbe add bound add pop in or mov or adcl jl pop sbb scas sub out or mov sbb jecxz arpl mov dec or (bad) mov addl and xchg loope clc dec mov fcmovnb cmpsl inc outsb jno into push cmpl mov ss mov jbe jp in cli test repnz jnp jmp adc insl loopne insb mov clc sbb bound lods hlt dec jg cwtl jg mov cmp cmp fdivs dec nop mov cwtl arpl mov je ljmp xor pop and ljmp faddl movsb mov addl in mov inc insl xor mov cmp je lret roll adc or (bad) adc mov lahf lea xor jbe pop or mov jbe xchg test mov adc adc adcb sahf test out dec (bad) xchg push arpl mov addr16 jns pop mov je cmp mov mov in jae mov and and add mov jae mov (bad) in dec fiaddl (bad) jae jnp xchg sbbl cs lds or loopne push int ret mov (bad) mov sub aad pop lret and rolb in repnz arpl int3 xor (bad) mov mov push inc in fldl cltd int3 cli push add push pushf cli pop cltd std and adc lock inc mov pop mov xor push lea in jle aaa in pushf (bad) cld sub mov sub xor pop int mov push loopne les inc aam jno pop xchg xchg fldenv enter add inc cmp andb mov stos cmp aaa dec int3 es int je or push in je cli sub xor stos xor ficoml dec fcomps dec pop cmpsb inc mov add adc add push arpl adc bound push mov xchg add jg stos ret leave lret adc mov ret and stos adc adc push loopne xchg clc mov lods push sub xor or inc enter outsb inc sub inc jg negb and adc mov xor cltd mov dec xor les push pop clc je push push or sbb inc push ljmp test push jecxz mov xorl and inc jb cwtl pop (bad) insb icebp aad or or pusha fsts (bad) jl adc loop and xchg pop mov iret inc mov sub int3 sti fisubrl jge popa xor add jae test aas xchg xor loop sub rorl xor ret sbb fdivrl mov mov jle adc les sbb stos int3 rcrb and or mov and ret pop add cs push xchg rclb (bad) in fcoml mov inc dec sbb enter dec daa jbe jmp in add push sub enter xchg enter movsb mov jne adc add and push xchg push test add out and push adc adc pop pop js es aaa enter add je sbb mov movsb (bad) (bad) fnop sub fwait int3 pop mov repz add push or fs (bad) repnz iret jge jnp lods mov push add sub jl aad and cli mov push aas jmp lods les popa aaa aaa push lds push mov mov jno (bad) stos sbb pop (bad) push int3 lret les (bad) aad movnti aaa mov mov xchg jb (bad) adc xchg mov in jnp fimul hlt jb inc or mov mov cld in push pop pop iret and or sub mov stc push rcll adc xchg test rcrb or imul fcmove xorb or dec rcrl xlat lods aad cli adc jnp sbb cli (bad) add pop adc aas mov inc jae mov cmpsl stos xchg dec cmp stc inc jecxz lock arpl push xlat inc data16 add push mov dec jge jne repnz fsubrl mov mov inc arpl dec sbb inc adc lret out ss fs push adc adc daa jne inc jns lcall adc lds xchg sub and or lcall cmp cmpl ljmp dec sbb xor jp lcall repnz mov mov mov insb sub gs in lcall (bad) mov cld or test int3 dec and adc push dec jne fbstp and jae ds test addl (bad) mov stc fs adc push ss or loopne mov pop and adc stc mov dec in xchg push loop cmp rcrb mov dec daa sbb push add add bound mov sbb mov adc or inc cmp and fadds push xor ficoml clc test outsb or inc out (bad) nop outsl loopne add mov xchg dec cli xor arpl mov inc xor and xor out xchg add mov jmp xor mov (bad) and daa xor lret dec sub mov (bad) mov repnz imul push sbb inc adc ret jl xchg mov or aaa lods adcl pop xchg andl aad mov lcall call xchg stc add lret ret xchg sbb cltd shlb inc mov or dec loope sub or int3 lock movsb aam mov jae shl push lock jge cli addb jle js mov insb mov adc mov out sbb push cltd jmp mov data16 lea dec (bad) xor ds nop push and xchg inc (bad) jne mov stos mov hlt int3 aam mov pop sbb into lea dec pushf dec xor xchg imul cmp test jae push cld jge adc mov cli ret xor mov subl test xor add call cltd flds loope inc mov (bad) into imul ljmp jbe xchg mov dec cwtl ljmp sahf test inc add mov inc mov shlb adc mov mov dec inc lret mov ret lds inc andl push loope xchg add and fcom (bad) fnop and fmuls loop add inc fsubr arpl lock fmuls jecxz add xchg inc into arpl mov add clc lods lea and xor inc arpl in movsb insl xor rcrb cltd mov adc enter icebp movb sbb call mov mov int3 mov or add js or mov inc mov add insb insl mov mov mov pusha xchg fsub adc call mov call (bad) or popa dec dec shlb les std dec jne inc rolb ljmp divb cltd xchg jg repz std add cwtl arpl insl dec js mov adc push lcall inc dec rolb or adc shrb xor dec dec lods flds popa add movb cmp loope add and adc and bound or fadd loop pusha xchg push xchg loopne and movb arpl inc ret lods cmpsb jecxz leave add sbb inc inc lods mov imul or std or dec and xor les cltd test or mov inc fs or mov pop pop cltd popa add fsubr xchg test addr16 cmpl mov and mov mov xor sbb sub sub outsl test ss fildl dec movsb outsb jns inc loopne bound xchg ret (bad) (bad) mov lock add cwtl mov iret fs jmp jno outsl inc pop mov push nop dec pusha xor scas test xchg or adc mov add in pop pop cwtl loopne sahf and ret test mov addl movsb movsb add es mov rolb fs inc adc add push xorl rcll push inc xchg sbb lahf mov xchg push mov inc mov cwtl into ja repnz test ja nop pop and xchg mov in addr16 adc loopne test (bad) fs fs shr sub or nop pop ljmp sbb popa dec mov test xor sbb mov and jnp out pop xor nop push adc test je cli (bad) xor ja xchg test mov jecxz lret dec leave test sub pop mov stos insb lret push sbb sbb enter fs dec in (bad) lret lods push dec dec jae cs roll pop pop (bad) mov or movsl cmp test hlt and dec movsb adc add adc push mov mov jl cmpsl sub add adc sub or mov movl jne or nop lret loopne inc sub sbb and cmp sbb std mov jle mov ret test (bad) repz ds add es xchg sub sub (bad) sysret push loope xchg or dec xor insb or sub push xchg in test scas or pop in mov xchg jnp (bad) imul xchg sbb out movsl sbb (bad) cmp sub add subl inc jns cli mov test bound scas cwtl fdiv bnd into nop push cmp fisttpl mov lcall add dec mov repnz xchg inc sub fildll adc ds xchg jns or stos add mov adc add adc pop lret into sub js fbstp mov adc popa lret mov adc mov mov sub nop add dec fdivl adc sbb mov (bad) data16 stos lret ret pushf js rolb mov jb jge ret ds mov mov cwtl pop mov pop sub test sub xchg (bad) icebp cmpsl (bad) and ficompl popa xchg (bad) (bad) sub and mov mov dec mov dec ret dec iret movsb sub xorl je xchg jl icebp cmp mov xchg enter sahf adc adc test jge pop adc mov out (bad) rorb sub scas sub fwait and push cwtl xlat xchg out enter mov mov adc test outsb test xor dec jl mov in aam sub stos xchg test and sahf add and loope insl fbstp add lret pop fimull sbb push nop xchg xor dec or lods inc and jmp test sbb adc (bad) jb (bad) int rcrb lods or push xchg mov fild sub cwtl sub mov cltd cmpsl in fadds aam inc xchg sbb mov or xor jae lahf test pop and jnp leave mov test mov xlat movsb fmull stos lods negb ss ss (bad) xchg dec fnstenv jns and cli loopne ss mov into subl push cmp mov pop mov xor push pushf stc hlt xorl add mov inc fidivl adc das insl cmpsl pushf ret imul inc pop or jle xchg mov push mov icebp pop popa jmp add (bad) js add test xchg test hlt mov xchg jge xchg adc cmpsl ds movl sub test or sub adc addl clc ss cwtl aas loope inc ret sbb sub sub push hlt test out test adc mov pop std shrl mov ret lods push ljmp xor push les sub stc out lds push in adc rolb in add test cmp fsubl xchg arpl mov push roll fs into xor (bad) imul mov inc add add or xor jge negb jmp loopne cwtl jbe xchg jnp mov mov mov xor push (bad) lahf add jl inc loopne jnp cmp add push test rolb xchg push punpcklbw push pushf cmp mov mov push loop ljmp in pop mov sub cltd pop (bad) add aaa imul sbb push ror dec jae inc mov xor adc inc mov shlb dec xchg cmp inc js sbb leave rorb aad sub jge iret pop push je sub (bad) jno cmc mov in daa or loopne in xchg aad aam pop inc in adc dec add push loope lret mov push popa test jnp cmp and fmuls xor xor mov (bad) enter xlat sub jo dec xchg je (bad) add bound int xchg mov xchg ret fsubrs mov mov mov aam xor nop mov ss loopne or sbb dec in add and add mov add dec xchg scas mov pop je cmp aas rorl or add pop add loopne ss xor adc mov pop std cld push fcmovbe lods adc and cmc or test pop add xor xchg (bad) sub adc adc pusha loopne dec add inc (bad) push or xchg fmul push xchg call cmp je cltd das mov pop and test stos std sub sbb add mov sbb iret ljmp or cld aam mov in push lock sub out and scas jecxz cltd imull or gs stos push loopne mov fidivrl daa mov push inc and test rolb nop mov push test mov and aaa std add or inc in js or jle push lret mov test addr16 mov (bad) jecxz dec iret test enter inc mov push movsb jmp cmp clc xchg xchg (bad) mov aam lret ret es or push mov pop pusha cli sahf cmp aaa stos iret call cmpsb mov mov xchg fisttpl fs pushf scas xlat movsl jmp add fsubr xor mov (bad) mov inc push out pop adc or enter xchg xchg enter int mov jp xor dec insl (bad) xchg xor lock and cmp movl push add add sarl adc lea jbe sub insl lret lock jbe test lods dec and out fmull xchg pop pop inc push pop jae fsubl or cmp pop fcmove std jo out pop (bad) stc sub fdiv mov pushf jbe jmp push xchg adc xor iret dec (bad) xchg jno adc and pop mov pop lret or movsl das loopne push mov push pop loope les clc mov xchg mov enter outsb mov inc in dec push pop add les xchg add add mov and fistl and pop xchg ljmp pop and inc out xchg mov jnp jp data16 mov sbb sub add pop cmpl movsb repnz (bad) repz daa cmp out xchg or adc dec orl and in subl xchg loopne dec (bad) adc fisttpl shrb add popa add push mov call subl mov imul mov xor fld1 push or or xchg inc fwait aad es mov incb les sub repz mov test add push popa push jle fdivrl cmp and jae jns (bad) jle push shl xchg xor adc int fsubrl out push sbb icebp mov (bad) int3 dec js pop fsubl test cwtl sbb in inc repz mov bound adc adc xchg cltd add xchg mov stos mov test or inc loope out jmp lcall scas sub dec notb (bad) sbb pop shrl ja fidivl lcall push inc jecxz shll ja mov dec fistp or xor dec into jmp adc inc fnop pop and jnp arpl cmp xor js jbe shl mov pusha cwtl cmp adc inc xchg pusha dec jge push movzwl jno clc sbb outsb add cwtl into sarl mov adc dec dec cmpb in rol pop xor cmp jb bound ficoml xchg cmpsl mov sub jnp scas mov mov rol mov nop pop cmp jg stos sub mov adc js pusha pop sbb mov push rorb push out jmp mov and mov fsub js push push adcl and pop push fwait jg mov xchg mov pop and loop popa in inc mov or mov lods jg test daa fidivrl pop in jae xchg lret cmp push addr16 dec adc and xchg shlb jmp xchg lret sub add dec adc add and dec dec out daa sarb add (bad) in mov dec in test xchg (bad) xor mov pop je adcl fcompl daa and cwtl (bad) mov mov (bad) cwtl fisubr pop fs or mov mov jnp adcb adc push add or push xor ret lcall jle call or sub xchg or bound jl pop add mov (bad) in ret fdivrp mov xor fistl dec out popa rclb jns push jge mov lock icebp into sub les adc loop std or mov pop pop shll js cltd and lods call add adc mov sub add add and repnz pop cld xor aas mov and (bad) insl lret inc pop cmp rclb les jge add push cmp adc (bad) popa loopne xor mov jl les push insb and test add pop xabort repnz dec (bad) aam inc mov sub lcall rclb xor inc mov and xchg hlt xor cwtl lret les inc loopne add les lahf mov mov cltd adc stos in sub nop call and adc clc and inc (bad) movsl pop aas dec jno clc hlt ss cmpsl int3 jnp xchg mov inc adc xor nop stc mov fdivrl or mov orl adc xchg cli cmpsl subl or jmp stc rcll push popf andl (bad) mov mov rorb add push xchg dec pop lods and and pop sahf fs shlb adc loop sbb pop push cmpsb adc stc pop addr16 mov mov (bad) mov loope outsl (bad) aad in sub arpl jl push dec and pop cmp lock mov int xor xor nop xor lret adc mov iret push and pop repnz xchg jo and cmp cmovle rcrb lret xor cs mov pop das sbbl xor push push mov lds jbe subb mov sbb call xchg (bad) add cmp mov jp lock shrb cmp xor ljmp fs mov cmpsb sub imul and xlat or (bad) imul or adc ret fld sbb push jno (bad) mov lahf shr imul insb pop cld daa xchg lret dec cld out pop jno pop xchg dec mov xchg jb dec fildll clc mov dec rolb inc test fsub je rcll movsl add ficoml clc lods int sbb add loopne sub adc cmp mov cli outsb and movsb sbb cmpsb pop sbb cs test call dec mov push (bad) enter sub push pop sub or sub cmp and push movsl inc sub (bad) fimull jmp sahf push movsl xchg pop and movsb test add fimull pop fnstcw push push push fcomps and jnp je mov and mov int3 hlt cmpsl jp inc xor inc loop in jbe add push fistpl cwtl jae mov test pop shlb mov xor mov add dec dec mov iret enter jle (bad) mov leave jmp ret pop jae sbb in sbb movsb insl mov sub int3 inc sub cmp xor and stos data16 push loopne call ret pop insb into and cmp xchg push (bad) push sahf arpl (bad) hlt arpl mov mov dec enter (bad) xor loopne std in dec mov bound rolb pusha sbb ret fisub (bad) aaa sbb (bad) xchg mov push (bad) xor ljmp sub mov jb test mov pop mov pushf add add lret sbb outsb sbb mov gs ror ficom and int3 scas stos out inc inc inc adc std jg push ja bound xchg adc inc test mov and mov sub leave pinsrw (bad) outsl popa add mov cli int3 movsb mull or (bad) out add movsb xchg fwait pop into adc add push add lods and mov cmp add (bad) int3 mov mov inc ret mov sbb outsb fldenv cmp iret jp sub sbb jae js push mov and outsl inc pop mov add rorb pop push sub inc movq rep nop pop in jmp push clc fisubr pop sbb (bad) neg adc push push dec adc arpl xchg (bad) rorb mov (bad) (bad) mov gs mov push jae loop and mov movsb mov xchg inc sbb or rolb mov xchg push imul xchg adc cwtl iret js fdivr loopne mov imul jmp (bad) cmp loopne xchg xor mov jnp lahf pop aaa adc mov xchg iret es or jae or xchg fcoml arpl (bad) pusha xchg andl imul sub push add mov sub add nop ds xchg (bad) fldpi (bad) dec test xorl movsl jecxz mov aam int rol mov jnp (bad) xchg ror dec adc sub push fcomip jo push xchg mov add and dec (bad) mov mov loope cltd ret xchg fnstsw jnp mov mov ret push hlt fdivrs hlt add pop xor sbbb pop test mov jle mov dec in and or out jnp mov add dec (bad) lock jnp jge adc adc ds rcr push lock cwtl dec jo stos subl imul mov enter pop mov into int3 inc subl or lret pop je push xor into or jb ds mov sub (bad) mov mov push xchg loopne ret dec rcrl aad jecxz jb pop jmp xor sbb rclb or in (bad) push cmp dec mov enter (bad) sub push popf pop fadds inc fldcw and test in in dec mov and in icebp lock push or lcall repnz fcoml add jb clc lods jne mov add (bad) aad add test add xchg test dec sbbl add in arpl nop lcall insl shlb pushf mov add ds dec pushf insb test mov int3 mov insl lahf jp sub lret test pushf mov cmp dec (bad) pop and das enter nop sbb add int add in enter sub or (bad) into and cwtl adc cmp xlat mov add (bad) lods loopne xor aaa faddl and mov mov or push mov fimul arpl xchg rolb add mov add pop loop pop push add mov fcmovne xchg sbb js mov or mov popa insl notb pop sbb out fcom and cmc xchg pop add mov pushf jmp loope xchg mov push outsl adc idivl add rorl or scas add rcrl xchg outsb add popa cmc sahf (bad) bound hlt lcall mov mov and push bound sahf inc xchg les lods mov and mov cs mov xchg clc sahf add and xorl ret (bad) mov addl hlt or ret mov mov or push push and js xchg clc lods xlat fisubrl aas inc outsb adc xchg push push cmpsl imul fiadd (bad) mov sbbl sub sbb lea and testl lock mov ja out cmpsl mov dec mulb or nop mov testb lods (bad) and into out (bad) stos (bad) mov movsl lock sbb ret shufps les rcrb ja ret jmp push in inc fmuls out or xchg inc push mov loop loope (bad) xor out ds loopne cmc (bad) loope inc stos in scas out cmc mov push push xchg shrb jl lret mov in cwtl xchg rorb inc pop and imul andl mov nop (bad) mov dec pushl mov movsb enter in loopne (bad) shrb ja out into sub mov stos dec xchg xor and xor dec mov cmp cli push loope mov hlt (bad) leave inc (bad) or sahf popa inc ja mov mov fxch out push inc (bad) movsb lret push arpl or ret jno lret call loope ret or mov stos (bad) jo ret pop lock dec sub xor clc fildl out add inc inc test sub mov pop cmpsl (bad) dec hlt test inc or inc inc mov cltd mov aad xchg xorl xchg inc jb mov sbb out mov popa pop inc gs int3 int3 pop xchg jmp inc mov lock std aad enter fldt call repnz jl inc mov inc into inc mov mov and dec sbb aas cli cmp mov inc add mov and jb cmc mov mov mov out fidivl mov loopne jmp xor into add mov dec ss mov sub fcmovb cmp push inc cwtl add dec lahf jg pop jno mov pushf xchg ljmp ss sti mov pushf jmp and outsb mov aad xor and dec out mov imul repnz mov mov xor mov cmp (bad) and add rcrb cmp test or loop in (bad) packuswb sahf or shr ljmp mov adc icebp (bad) loopne insl cmpsb (bad) int3 or stc outsl push stos js mov inc shrl inc xor das mov inc test mov cmp loope (bad) mov adc popa daa mov out push add lea mov insb mov xchg cmp int3 fwait in aaa mov xchg shr or fdiv call int jl mov or pop mov mov sarl mov mov mov sbb fadds pop lock cltd adc fdivrs dec aas cld push nop xor rol lea dec jae adc fwait adc orl fisub out cmp or mov (bad) pushf ret sub sub add mov test dec ret test (bad) (bad) je mov jne imul push xor mov add mov loopne mov mov ret jnp dec std outsl inc jb (bad) mov inc mov or movsb sub push cmc cltd jp (bad) hlt rcrb and mov sub pop adc fistl rcl pop (bad) xchg movl mov (bad) or jo outsl iret add inc jb movsb shll add cmpsb adc pop addr16 inc jle les add or test jb out imul (bad) mov inc or inc imulb sub dec (bad) xor (bad) mov adc pusha out in clc mov rolb (bad) scas push mov push sub jp mov cmpsl in repnz jg pop jbe dec inc cmp (bad) lahf or pop jno fs mov pop nop mov cmp mov xchg fimull xlat xchg imul fist sub outsb push aad push mov pusha inc jp rcrb jae mov add add sti fimul inc ljmp (bad) mov (bad) adc and std cmp adc pop jecxz,pt movsl and push jno jp and pop mov call leave lds sub mov nop sub loop xchg test lds out dec cmp pop stos cmp (bad) xor adc imul mov das sbb adc (bad) test sub lret insl adc in inc inc je push les ret inc notb sbb ret jl mov clc jbe pusha pop push mov and xor xor lret fwait repz xchg ljmp cmpsl cli test xchg jge pushf fs and int3 movsb ret mov mov mov mov jle add mov pop into lret mov mov iret fisttp out insl xchg mov sbb push faddl mov sahf aad test sub jg lods ds nop mov and adc xor ficoml xchg mov clc test dec and add or xor (bad) fldl loopne xchg xchg lock inc int3 mov add insl sub pop xchg repz loope sbb xlat and test inc mov xor inc inc dec imul adc out loop out mov leave lea pop sbb rcrb insb lods insl mov dec inc mov sbb stos lcall pop dec cs inc roll mov fsubs stos dec pusha mov fucomp pop and popa inc mov inc in arpl roll xorl mov rcr or pop addr16 sbb (bad) or pop mov fcmovnbe rcrl mov sub cs out aad add and xchg sbb enter ds xchg test mov push call xor loope mov popa inc adc fcomi mov stos out and add arpl mov sbb inc pop xor jle (bad) lock sarl or push in movsl mov jbe jae in jl dec sbb in std and int3 stos cmpsl dec mov mov jo or int dec or nop (bad) cmp je fsubs jae pop js sar mov pop xor push daa imul cld sarb scas pop cmpsl or popf inc add push or push lock mov ret sbb inc sbb loop xchg shll lds sbb loop scas sbb xchg addr16 rcl test xchg mov in xchg pushf je xchg bound loop (bad) div and xchg add in adc xchg (bad) jb cmp cs test dec dec jo imul rolb dec int3 sub outsl xor movsb sub inc adc rclb addr16 rcr jno sahf test clc fucompp in xchg mov or fcomps mov ja (bad) xor sbb lods inc sub (bad) xor test push test and test movsb jns ret ja cmp aad stos out adc dec jmp adc sti mov and lret adc cmp gs cmovno (bad) sbb sbb test mov lret dec in add fisttp xor in or lods and aam lock cmp jecxz pushf mov add push fsubr cltd lock test inc out aaa and mov and loop cli mov in out pop (bad) imul lret xor int3 adc mov add and mov jge scas inc inc (bad) movsb fmul push pusha dec aad sbb incb sub test aam add cmovge sub xor sbb pop jns cwtl xor (bad) pop sbb lds sarl cs cli or mov rol (bad) mov cmp adc je mov js inc pusha dec or or add (bad) ret ficoml cwtl rorl adc cli push fadd inc mov xor enter imul (bad) fsubrs dec int3 test fldl2e jle mov mov sbb inc jge cmp add jl fadd outsb adc jge ja sub add mov (bad) lods test movsb adc dec mov cmp jbe push ds fcoms mov sti imul std sbb aam lret shlb mov inc test fwait shrl dec or (bad) jnp adc call xor pop fstp mov call xor (bad) fisub lcall test jge lods push insb cmp ljmp leave mov sbb repz rcll fisubl int3 xchg xchg repnz adc lcall push adc mov out in fdivrs imul jnp add stc idiv pushf stc cmp and jb insl call pop aad xchg mov sti fiadd xchg insb out add push or and or rol lds (bad) cmpsb lods mov lds out stos ljmp dec or mov xchg lds pop inc loop,pn rorl mov rolb aam pop cli mov std jae mov xchg addr16 fsts mov insl cmp je dec xor cwtl out sub xor push outsb sarb mov outsl outsb cmpsl gs (bad) lcall dec aam xchg inc out stos out addr16 xchg adc xchg (bad) cmp pop push shlb sbbl add clc icebp xchg add ret test mov (bad) out cmp xchg cwtl cmc dec push test popa jae adc insl sub adc inc sub movsb add xchg pushf aad movsb test adc xor cmp inc mov inc mov nop mov jne rorl mov mov loop xor adc dec jnp adc mov push out lcall loop adc enter cli lea loope mov xlat xchg jl repz js lds in push cmp add jbe jns pop xchg daa stos orb aas and mov mov pop adc pop nop adc cmp sbb mov inc xor fildll ss xchg ja inc repz gs mov pop adc ss mov sub pop dec orl sub and adc adc pop test lea loop popa xchg add fild movsl inc aad xor jp sbb fiaddl aas cwtl add mov (bad) notb inc or shlb test orl movsb adc les ret add and push or rclb pop xchg repnz push push dec adc enter loope add fwait cmp mov dec sub stc (bad) pop sbb sub xchg or and adc push cmpsb iret add js fmull mov fcomps xor js mov cmp lcall and push (bad) dec call in (bad) or mov sub enter adcl mov nop shr popa sbb jp cmc adc into xchg pop push push xchg mov pop in andb mov test xchg jno rcrl sbb pop inc clc fwait in adc push mov bnd dec outsl popa mov mov mov adc cmpsl bound xchg pop and int adcl sidtl jecxz popf fsubl mov iret inc jno dec jno push fsub mov cli adc cmp pop mov cmp add leave (bad) jno inc or push push pop enter xor inc dec arpl test into incl mov fmuls adc sub cmp mov repz jbe sub leave fidiv sub mov xchg jp je mov adc mov jg test xchg adc cmc popf inc int3 xor xlat test insb xchg or (bad) or loopne (bad) or nop sub adc bound inc mov fsubl int3 sti data16 mov lock jge adc arpl jae cli ljmp add aam sbb cmp adc (bad) push (bad) out repz add xor (bad) dec cwtl xor fadds shrb pop ret add (bad) hlt inc xchg sbb pop sub ret and cmp (bad) jae xchg dec dec neg cmpl mov std mov jecxz adc in movsl pop sbb fadds pop test push icebp fimull xchg jo nop loopne out push mov test pop inc scas dec add xchg pushf or inc adc (bad) repnz mov cwtl inc jno jne (bad) jns jae dec mov push std dec rcrb in mov xor jbe inc (bad) sub mov xchg push cmp jno cld std cmp push in add xor dec shl je and jbe mov add mov sahf cmp sti cmpsb sbb int pop clc jge ss push jmp cmp xor push and jp (bad) and pop mov int3 in sbb pop enter aam dec aad mov stc inc pop mov mov fs addr16 or cmp fbld fnstenv imul push (bad) dec fstpl xchg and repnz aam xor cwtl mov lret add test stc add ret mov jmp imul cmp xchg mov cwtl cmpsb shlb adc test sub clc rcrl ret fwait mov iret lret mov cld inc in push aas out repnz pop out jae inc pusha and imul xor cmpsl or daa pop add mov push mov and jnp int3 inc notl fucomip (bad) xchg xor insb add icebp mov mov fcmovu scas int3 xor lret mov add popa cwtl mov fcmovbe jae mov push xor xchg outsb addl mov mov and lods ss adc inc adc xchg mov jp das notl rolb loop jne dec add int3 rolb cltd sbb dec jae jnp xchg in mov cmpsl pop iret pop mov mov iret sbb mov mov (bad) fs (bad) mov and add jp fwait mov lods adc add rcr add or test in jae add sbb (bad) mov or ljmp sbb lcall hlt sub jmp mov andl (bad) mov les push mov adcl or popl cmp pop into sub fadd and or sbb xor std mov pushf lahf xchg or pop fcomps mov mov nop add xchg cmp mov clc testb jmp fild mov mov faddl xchg pop loopne xchg cmp push les fistpll mov sub xchg repnz pop iret fwait stos xor lds inc pushf mov fdivrl mov xor jle lock adc pop pop stos mov ret sbbb xor cwtl imul daa mov cltd arpl (bad) out hlt fisubr push and xchg jno mov dec dec and call xchg les add or in adc fwait jnp and mov add fcomip pop xchg ficom sub daa sahf push nop les enter mov add into or les decb xor add or or and aad arpl mov cltd mov sbb cmove nop jl pop sahf adc iret pop fldenv mov sbb push fmul js pop or mov subl adc sbb (bad) jno add into enter outsl fsubrs test adcl dec xor ljmp add inc icebp setns daa xor pop jns sub cld mov loop add push rorb mov (bad) stc sub mov pop adc dec push dec fwait mov aas andl push adc and dec push sbbb add and mov mov mov cmp (bad) leave (bad) sbb int3 and movsb add xchg mov or push sbb or ror lds dec mov jg test fs xchg in mov mov cmp out cmp lods sub dec icebp orl arpl jae (bad) push mov or mov les sbb xor push or xorl test fcomps clc and inc cwtl negb mov add add xor add cmc gs ret adc loopne lock mov jb sbb pop dec pop inc or (bad) inc fildl and mov inc lea push add push push fld sub cmpsl inc or sbb subl gs in clc push and cltd rclb aam mov (bad) fidivrl (bad) mov mov push or (bad) test xor mov or test dec stos and ja push test mov dec ds rorb mov loopne mov rorb xor in mov dec push sti push adc imul lret sti pop add xor insb lock subl arpl mov inc mov movl adc dec mov or mov jp fimull jmp lahf jns (bad) cmp lahf cld dec (bad) jb push aam fxam inc test xor add xor (bad) adc sub cmc in jp sub dec inc sarb mov inc cmpsb fbstp daa adc enter fdivr add xlat adc andl add sub jnp jl lcall ret push pop jnp mov clc stos (bad) rol adc in repz pop imul sbb xchg cltd (bad) out push cltd lcall or mov add adc push lcall lds adc jmp or repz popa jno cmp inc (bad) mov fs dec clc sbb loope sbb (bad) mov (bad) jo pop stc lods lock or add inc cli inc inc stos push aaa jnp pop inc cmp inc (bad) xor out dec jge mov mov cmp imul rcrl pop xor mov xlat dec call js and lds mov mov clc xor pop jo dec xlat out pop xor enter sub and mov stos ret sub mov pop je fildl (bad) sub cli js adc pop xchg (bad) je inc ret cs mov push aam sbb roll dec call icebp or jg andb adc inc cmp and add divl or adc fidivrl dec lds jb lcall clc and mov inc mov push jp cltd push cmp in add out enter jbe cmc test sub jl mov fildll inc mov xchg sub int3 (bad) aas lret inc mov push int3 add repnz mov push orl testb fidivl (bad) addr16 cmpsb aas loopne dec pop jns cwtl pop push pop fmul mov pop loopne aaa and cld fadds (bad) std mov xchg mov lahf mov (bad) inc xor sbb xchg pop jg jbe lds push add add fsubrl cmp je mov in stos xchg negl push mov add mov int3 sbb loopne mov loop and les imul cmp xor insb sub inc inc cmpsl push cmp iret icebp fistp mov popa fsubrl (bad) fidivl xchg and add imul xchg mov xchg pop lcall and inc inc int3 popa loopne les ljmp aam sub xchg jnp add cwtl out push (bad) sbb push rolb pop pop xlat xchg jl cld mov (bad) jns (bad) xor iret and cltd (bad) sbb push insl movsb out call add (bad) mov adc call fist add cs and dec jmp gs push push xchg jae std (bad) lds jp lods (bad) imul shl iret shl jecxz (bad) pushf fwait push je push test cltd arpl or (bad) fist aaa xor mov sub pop enter or adc add add nop inc sub pop jnp add push in imul lret pop dec popf inc shrb mov fcoms and xchg mov test and mov pop sub adc (bad) enter and adc xor pop xor push int and or sub clc mov sub nop add xchg cmp pop jae pop dec sarb inc addr16 push (bad) push jle sbb lods pop cmp in (bad) jp add and pop mov stc dec (bad) fmull cmpsb push rcl inc mov stc jnp cmp push imul pop add sahf js jns mov fbstp adc cltd jp cmp in int3 and inc push lcall cmp (bad) icebp cmc test sbb push arpl sub cmp loopne rolb push gs cmp fdivp cli sbb xchg ds shrb arpl push ret mov cmp ficoml pop outsb repnz ss or rol ds js lods les (bad) aaa and xchg (bad) pop cli jmp sub push js inc fistpll add test cmp lret test or cld pop aam adc scas fcomps cmp (bad) jecxz jb add call mov imul test or lds push sbb mov dec incb add and and ja loop push push test gs push pop sbb mov xor mov inc xchg mov jle js or cmp jg cs xor and gs and inc mov shrb xchg ljmp cmp fcomip aas and cmp shl push push fisttpl insb cli out adc movl jnp leave (bad) fimul (bad) (bad) test cmp mov mov xor aad dec rcrb clc cmc sbb add or adc add cmp (bad) and setp inc (bad) adc call je aad or int sbb in or adc enter and rcrl scas shl xchg jns movsl dec inc jbe outsb pop movsb mov clc or adc jp (bad) jne cmp imul cmpsb iret std mov and fcomip (bad) or jbe enter int3 cwtl xchg ds in cs sbb clc add fidivl sub mov or pop dec scas shll stc fistpl sub add sbb xor fdivrl jbe out fnstenv inc (bad) fadds pop into sub orl lcall (bad) ficompl nop xchg push or loop mov xchg imul inc sub insl sub pop aaa jp lock (bad) xor mov add sub lds clc ds sbb dec mov (bad) js (bad) loopne pop nop adc xor cmpl xchg cmp adc enter xchg dec arpl lods or mov sub scas in insb inc or insl rcll mov stos addr16 xchg loope mov sti enter mov jns sub mov out adc rcrb mov sarl jb fnstcw pop and pop pop mov and (bad) nop (bad) add lods and fildll or dec dec xchg repz cltd setne mov rcrb (bad) in loop fdivl dec cwtl pop call jns adc jae int3 fistp cmp fnstenv push mov push add out in add fsubl mov (bad) jo dec (bad) add fadds dec mov cld inc andb adc and insb pushf xchg mov fadd leave fld1 push int3 pop mov rorb or stos daa pushf mov lods dec imul (bad) adc and adc (bad) pop mov leave sub xchg shll dec sbb dec daa mov add fsubrs pusha push mov pop mov xchg or adc cmp add mov in faddl pop fs clc enter sub lock iret mov mov mov in (bad) xor stos pop cmc adc cmp sbb cmp mov mov mov repnz and xchg and bound enter mov inc mov dec push mov std jno (bad) imul add mov inc dec ja ret into mov lods popw and aad test aad (bad) fldlg2 mov add sti fist xchg sbb addl test call jmp out lods imul fsubrl int cwtl ljmp das and mov mov jno aaa in pop and sar cltd imulb fsubrs sub lds aas mov cli or mov pop lahf test push dec mov add pushf push cli (bad) test ljmp xorl sub cmp dec pop jo lods out popf or rorl movl test mov inc imul mov mov pop dec bound jmp xor mov add in repnz loopne mov lds mov or fildl repz mov cmpsl push in aam lock clc sar mov xchg fist add mov jge pop xor ret push sarb ja rcr in mov and xchg dec roll jbe pushf mov ret call fs mov in orb and pop (bad) lods push lds cli mov bound xchg loope mov push sahf clc pop mov pop cwtl stos je loope inc aad inc mov mov (bad) shrb sub scas and inc leave xor adc iret add sub fist push dec jl cmpsl mov mov les and xor fldcw cmpsl ret or iret fistpl dec lret movsl mov ljmp add adc jno cmpsl xor pop xchg mov repz imul in stos mov xor mov or iret or mov or add clc shl mov movsb enter bound mov sbb rcll movsl adc mov jnp cmpsb dec mov and mov int3 add movsb addl dec dec jns test pop js cli adc sbb mov outsl stos fisttp rcl enter pop sub jbe pusha jne aad pop bound or loop or mov inc inc sub fcompl lret push mov adc cld imul xchg pop adc (bad) dec lcall jp xor iret xchg insb jmp (bad) fdivp or sub sub lods push add test (bad) movsl (bad) popa or sub mov in cmp stos push add pop or insb call sbb push leave sub test mov into xor jg sub fbstp xor xlat popa in insb pop cwtl add jp push scas mov fildl mov (bad) mov cwtl adc lock jns mov push jae mov dec divb xchg or push repz (bad) pusha lcall cli dec mov mov movsb in loopne dec add xor xor cmp jle scas xchg lock xchg rcll jl add test call push iret aaa stc inc or aaa sub jns inc stos out mov jo jne cmpsb and or add mov mov dec sbb notl es xorl into inc nop ffree test mov cwtl mov cwtl adc mov movsl out loopne rcr mov adc std xchg fdivrl enter nop mov ret mov cmpl cwtl jns add jmp pop mov xor ss lds mov aad jnp outsl cmp stc insb addr16 stos imul daa dec bts mov jns aaa cwtl cmp or xlat and lea cmpsb inc ret inc stos jl lea cmp dec shlb cmp xchg mov aas and sub mov dec pop sub repnz insb cmp inc push and mov imul inc sarl jg scas pop pop pushf nopl shl sub pop jp cmp into pop and pop add push adcl fcomip sub dec rcl adc jmp mov inc sti adc push add inc (bad) adc jle aaa rolb test fcomps add xchg lcall sub aas (bad) lock ret shrl ret adc jo ret jecxz sbb xchg sub fs nop lcall mov cld adc stc nop sar sbb rol add or clc mov rclb nop movsb cmp xchg adc dec push cwtl repz test mov adc ret or lock pop test sub sub fdivrl test popa mov in mov xor pop jbe mov jne jecxz cwtl lock in inc pusha (bad) jp movsl push andb lcall sbb mov iret stos (bad) sti in mov dec ljmp jbe cmp mov push mov and mov iret fadd xchg mov fstps inc pop repnz mov inc mov (bad) xchg sbb popa jmp test sbb lret mov dec lret test mov iret push shlb ret add xchg add imul sbb xor pushf in rcl movsb sbbb lods imul mov mov test rolb bound mov mov cmp movsb and lret ret clc add mov cmpsb shl xlat dec sbb inc pop (bad) mov inc movsl or std xchg pop sbb fimul mov push sub xor mov fs andl sub (bad) inc mov mov nop dec xor idivl es rclb popa xchg cltd aaa cmp xchg js jbe fdivl movsb push mov jne jbe nop add into cmp xchg cmpsl nop xchg pop mov test mov rolb into mul push ret sarb imul in js lods xchg xchg inc ljmp push jae in loop xchg (bad) xor xchg cltd clc in xor jnp sbb test std (bad) pushf sub movsb test xchg push inc xchg mov nop mov mov add dec scas xor jb in xchg mov je inc pop adc (bad) out pop inc push cwtl xchg leave (bad) xor sub ljmp movsb mov mov inc sbb sub stos mov xchg neg adc jle js adc imul push js adc js pop daa push jno test sbb jns dec add pop outsl add cmp sbb nop loopne mov lds test lods insb dec scas and js push outsb mov jge push cltd stos push push es test dec xchg dec cltd (bad) mov mov rolb and (bad) test loop dec dec scas lcall mov out repnz pop cmpsl mov add sub insb lds mov xchg mov insb jae fisttpll (bad) mov (bad) les jo jno inc (bad) mov xchg sbb adc and push mov lcall cwtl movsl movsb xor cltd shlb mov lods movsb xchg (bad) mov and lds and mov adc mov (bad) shlb mov data16 jnp les add jle mov mov repnz mov test int3 push cmp fist mov addr16 int3 cmpsb or push movsb lcall xchg insb les cmp and mov movsl icebp sbb in pop mov cmpsl les inc mov loopne and inc cwtl cltd bnd ret sti popa aaa or fs sbb cmpsb hlt iret sbb push sub sub shl jnp mov mov js movsl dec out adc (bad) mov mov xor mov xchg test pop fmuls mov push mov int3 adc inc mov pop mov adc adc frstor sub dec dec push mov jl inc cs adc (bad) icebp lock sub int3 or mov outsl sbb je call (bad) lds (bad) movsl jo push xchg mov cmp cmpsb daa lcall fadds bound stc pop clc fimull mov xchg push ds ret test (bad) in and test pop aaa mov pop sbb pop cwtl ljmp aad lea mov dec inc cwtl cmp cmp fmuls (bad) fistpl xchg cmpsl mov fisttp jnp dec xchg loope or lock stos mov enter add add stos sbb mov mov js roll test les mov mov mov push cli (bad) shl add sub xor push cmp push lock gs cmp sub mov test out xchg js popa test addl fmul lea adc sahf or xchg loope shl pushf (bad) mov mov mov rolb nop cmp fiadd cwtl cltd (bad) xor pop adc cmpsb mov pop notb fmuls (bad) add call (bad) push fwait lock mov mov and pop mov mov mov mov fnsave inc mov sbb dec mov andl dec push and loop and push stos jle xchg inc jo movsl push sarb ret or ret jbe cltd orl les jnp cltd (bad) pop mov cmp xchg cvttps2pi daa dec imul test dec insb push lods jmp cltd roll push sbb fsubl rclb sbb fadds mov aad and push insl outsl cmp inc jp sub aas or std jnp pusha cmp add push lea sub push mov xchg sahf int ror mov shlb pop cltd xchg jecxz jno loopne leave testl fstp orl into in jno ffree addr16 sahf pop rorl pop inc loopne xor cli (bad) (bad) test in cmpsb mov andl les or xor scas cmc imul movsb xchg jae mov test (bad) xor clc push cld nop arpl add mov das jnp add pop clc int3 cltd lods popa shl hlt sbbl xchg or sbb mov (bad) sahf arpl xchg call stos icebp test setne (bad) mov rolb aaa fdivs xchg lock sbb xchg pop add sbb lods clc (bad) push test movsb into addl setge popf xor (bad) xor daa hlt leave jbe enter adc mov (bad) aas xchg (bad) shrb mov pushf iret mov imul loopne add loop mov cmc jecxz test xchg and and mov stos sarb int3 xchg loope orb pop fs or xor xorb and ret pop sti stos jge std fildll clc ss adc lods push mov pop je adc test pop mov popl inc ret dec mov mov (bad) int3 adc mov std push lret lock jo or ss (bad) loopne sar push xchg mov test ja sbb (bad) test inc cmpsl inc mov movl add arpl xchg addr16 adc mov movsb sub pop and dec mov sub pop into pop ret (bad) pop push dec xor inc (bad) (bad) cwtl cmp or int3 add inc int3 retw sbb push add or and mov int pop js add adc jecxz jl out enter jg gs mov inc mov dec das lret (bad) ljmp ja push xor adc fildll fstl xchg pop (bad) (bad) popf mulb sub mov pop adc mov fcoml repnz rcr stos xchg aas std pop aas js fistpl xor stos out pop int mov or cmpps dec xchg inc ds orl adc dec push xchg mov lods xor pushf add addr16 xchg mov mov sti sub inc (bad) fildl mov sahf into mov cli js jecxz mov xchg and mov fstps rcl and or ds xor pop andl ret and int dec test sub fcomip int3 pop inc mov push (bad) and xlat addr16 rcrb add ret sarb and loopne cmp or mov adc mov pop (bad) mov mov cmp xor in mov and add mov push outsb (bad) pop cmp lret test jb sar outsl adc sbb (bad) ja test inc inc add std iret xor sub push inc mov clts shl xchg push lcall or aam jp cld xor jo fsubrs rcll mov add ret in cs test out ret sti out mov (bad) call and adc inc xchg out push imul cwtl lods jle xor mov add jmp leave jo push xor out dec push or out shrb (bad) in pop xchg xchg orl and adc jno xchg arpl inc sahf jp push add xchg mov movsb stos cmp (bad) xchg cmpsl sbb cltd mov adc sbb andb xchg mov push xchg (bad) leave mov xchg mov push shll aam pop popa js inc push dec lods sarb rol sub in cmp push inc or add les sbb mov dec mov xchg test jo xchg test cmpsb or xchg cmpsb xor loopne inc inc add bound mov cld pop or out (bad) or lds inc rcl mov dec (bad) adc (bad) leave xchg add daa mov insb cmp push xchg (bad) mov leave arpl adc movsb test je xor aam xchg mov inc sbb imul in mov inc xchg jge mov daa rolb das nop sbbl mov sbb popf mov cmp lods dec test mov add imul mov js lods push add jno rcll addl add andl lods lret xchg jo push cli test lds lock movsb jle mov sahf cmpsb xor pushf std out cli xor test js in ljmp push and insl mov nop xchg mov push in icebp push icebp fs sahf es nop or add add jmp mov pop rolb fstl loope daa int3 mov roll inc sub mov add movsb sbb into fsts push rcll movsb stc xchg pusha mov (bad) cltd cmc xchg and xor test mov aad xchg pop les shr adc mov adc gs int ret add mov or iret ret push add xchg inc push ret adc in mov xchg pop mov add int3 xor inc and sti and lock and sbbl push pop dec adc add in test push popa sub or rolb jp fcom inc and popf inc push rorl js imul sarb add add xor loope dec add and push popa pop test iret xor mov rorb push inc popf pop cld out push rol fsin lds ljmp xchg dec rcrb sub cmp (bad) stos movsb js int3 mov (bad) xchg mov orl jno xchg (bad) xor stos out or inc sbbl cmp push movsb add mov ret and push in jecxz clc test mov cmp add mov push rol (bad) jno fs inc cltd cli push and cmpsb stos add mov xchg test adc inc popf xor movl xor test movsb fisubr sub addb sub add loope loopne lcall (bad) aad pop nop ret clc mov xchg inc jns les ljmp add rolb inc rorb mov and mov loope xor addb pop dec add stos push dec insl add jg js add xchg inc (bad) mov jns inc mov lret mov mov roll aaa or jbe or and orl (bad) bound push cmp loop xchg lods ret pop movsb xchg daa cltd mov loop push inc std (bad) add gs mov mov movsl test and inc lea leave pop mov iret lods or data16 std jmp (bad) out lea xchg les bound scas inc dec lods dec pop mov lods sub dec add daa dec push pop das jae push lcall mov shll add inc call ret inc and inc clc jp add scas sbb pop jb cmpsb shlb sbb and sbb cmpsb or les lock cmp aam jnp xchg gs dec test adc xchg add sbb sub mov add aam orl jmp in lcall mov add push imul add xchg test leave cs add stos les xor cmp lret mov xchg enter movsb add in inc in lea lods int add lret mov or or adc mov leave cmpsb ret xchg test xor or or insb adc ret mov and cmp lods cmp es mov or add and add add xchg cmp std mov (bad) out inc pop mov (bad) xor sub rolb test inc xorl test sbb pusha cmc mov ret xchg pop dec jo adc and or outsb jmp movsb mov inc ret addl (bad) sbb rolb addl mov movsb (bad) lea add pop imul add aam loopne (bad) (bad) out add out mov mov xchg cmovae nop rol xor xlat inc rcrb enter xchg shlb test cmc push mov aas xchg jne in lock cltd lea mov xchg nop inc lea pop rcr popf sub pop sub mov cmpsl jnp pushf enter jae enter orl push sub sbb test dec jecxz cmp and int3 call xor sahf ret mov enter pop out mov push lea add pop xchg js adc (bad) jnp jecxz lea inc jns in push xor or mov inc dec shrb iret xchg mov inc lea (bad) mov adc xchg mov sbb mov lods fwait int push test cmp add dec or add inc emms jl xchg lea dec push (bad) xchg in jb (bad) in stos test iret push xor cli sbb pushf leave jp fsubs and mov arpl mov or pop adc pop xchg jle sub orb cmp adc movb push pushl mov push mov movb push pushl ret jmp lret add pop popf imul dec je js je sub xchg out adc push iret nop fisub (bad) and rcll icebp gs negl sbb dec xchg sbb mov out cmp adcl mov jo daa push or outsl xchg sub test push mov repnz movsl cmp aas mov incl aam adc pop sub add push daa out aad jo and lea (bad) cmp mov out and sub outsb jg inc push mov fwait mov jg,pt fldenv sub mov mov push in add pop scas nop stos pushf push lods or imul jl outsl roll inc cwtl and cli in sbb jbe out ds cmc mov push jbe xor addr16 loopne inc jge push popa cmpl mov push jmp mov js mov lods add (bad) push inc pushf imul out mov ss incb xor fiaddl pushf inc test sub cs xor mov push movb pushl ret call inc lds outsb cltd inc mov sub push jnp and sti fs mov gs popf inc jle xor cmpsb jns pop outsl je rorb dec rclb xlat sbb jmp mov adc push dec dec jecxz dec sub mov lret fsubrl or lods jb jmp fwait and xor fsubrs mov sbb or and cld push cltd fwait mov lahf xor cmp comiss rorb and jecxz mov mov out outsb push sub mov xchg test xchg mov inc lahf repz push xor xchg and aas pusha leave xchg mov xchg ss repnz call dec pop jno daa mov dec mov rcl dec lods cmp inc sbb and rorb daa mov jl dec pusha movsl scas mov mov mov ret data16 push std pop xorl cmp dec lds mov mov push push sub and lods mov pop pop jo xor nop lcall test jno push dec or ret pop out shll (bad) std push outsb push pop pop add push or xchg (bad) xlat sbb stos adc mov fdivr cltd insb (bad) fmuls test xabort push fistp inc test dec (bad) push inc cmp pop es hlt push cmpsl jnp jge repnz (bad) and dec mov stos adc rclb cwtl inc adc rorl outsb stos xor arpl loope mov cld or jbe stos jmp sub mov xchg out fld mov pop (bad) ret hlt push sahf loope aaa fwait lea xorl arpl xor pop inc stc sbb xlat cs mov mov cmp mov shl pop in inc fsubs in and loope scas mov dec dec bound pushf ret fsubs xchg mov je mov hlt sub cmp push insb jge ret in xchg jo xor or mov ljmp pop and and jg xor inc mov out xor xchg push rorb jg,pt ret out xchg int lret out das push cmp inc loopne shr lea and pusha pop pop sbb sbb stc push sub sbb jl fistpll lret adc adc es inc pop mov loop pop nop ja push dec pop cltd inc sub mov ret pop out imulb cmp popa aam dec (bad) mov and lea jno pushf lea je mov mov dec add bswap shld xor rol mov pushf movb call pushf jmp push mov pop rolb in inc nop (bad) jbe jge push (bad) (bad) xor mov fmulp ss repz or jp insb jge ja fmuls nop in (bad) xor loop,pt jle out push stos mov lock testb mov xchg in push fmuls cmpsl mov mov mov sbb ror mov pusha mov fdiv adc sub jle sub leave mov (bad) (bad) mov movsb mov scas adc test ret dec mov and and aas pushl popl pushf pushf movw pushl ret push call xor in mov sti imul std vminpd leave push fldt xor and in ljmp and pop inc sub push and jle fdivs pop dec (bad) js test lods sbb push sbb dec jns jmp mov push insl test or cmp mov sbb or inc fsubs push in mov mov sub sub and push cmp les sbb shlb jecxz scas mov imul fsub mov pop addb pop and jge sbb aam repz (bad) or test sub pushf stc pushl popl clc jmp lea ja push push push add cmp bt or pusha lea je call je push call jmp lea je bt clc test pusha add cmc cmp pusha movb lea jb pusha cmp jmp add fldenv data16 int3 mov sbb fildl push sub aam pushf inc pop jo das jo int sbb xchg adc xor push (bad) (bad) ds sahf dec clc mul ret jge (bad) sbb pusha jle add int sarl jno xchg test outsl inc pop outsb dec pop xchg and mov fsub hlt jno rorl jp jecxz out cmpsl pop pop dec cs pop mov cwtl (bad) xlat adc mov imul test xor dec pop fdivr popf sbbl stos pop jecxz sti adc cmc sub outsb push dec dec je pop imul jno and (bad) dec stc stc cmp push or pusha pushf call lods sbb cmp fcompl aaa xchg mov out faddp fiadd shl enter push sub xor cmpb cmp aam addr16 xor sarb mov sahf push into and mov cwtd test fucomp movsl and outsb jg mov ret add mov push repnz imulb rcrl pop lahf mov sbb adc cmp xchg xchg data16 in fsub clc push or mov dec adc adc xchg or adc mov inc cld dec adc jno and mov movl and add add pop cwtl cwtl lea call (bad) xor push addr16 cmp fwait jecxz nop xor es mov inc push cmpsb dec negb xchg lods push and int3 pop loopne inc jbe fnsave add bound jp aaa dec adc cwtl lcall pop imulb xchg leave movsl sbb pushl push pop or and dec nop (bad) popf dec cwtl push data16 aaa pop sbb gs push mov fsubp cmp pusha sbb stc xor (bad) or loope cli or cli les jmp in test clc es add dec fwait inc jae dec xchg cmpsl jno and inc sbb lea jmp add or scas pop xchg dec xor scas sbb popf push dec push mov pusha mov fmuls mov mov aaa mov lea and sbb push enter out inc mov xchg xlat fldenv sub inc push fnstcw cld push rcl sbb and lahf test pop xchg mov adc lret lock ds (bad) jb mov xor mov mov cmp xlat fadd insb mov jb adc leave fisubl add push popa jo cs jo ret pop inc pop insb cltd and lcall faddl xchg insb jno pop xchg decb xlat (bad) dec adc imul mov push loop outsb nop or rorl push pusha mov cmp cmc bound add pop sub jecxz xchg push hlt push ljmp xor jg push xchg test add aas pop pusha mov (bad) flds cltd inc mov or lods insb int aas mov mov jae xchg popf jmp sbb fs fist bound sbb pop in mov insb popa mov lret (bad) test ja lcall pop test lcall pop cmp scas icebp cmc lret pop push and xchg not call sub inc rcrl pop outsl iret xor cmp sbb jbe mov popa popf sbb cmp pop and outsb daa xchg es sbb testl repz fiadd mov les cmp mov leave lret xor sub cmp push pop push inc dec lods xor rolb and pusha test cmp pop pop pushl lea pop pop movzbl mov push jmp jmp sub (bad) xor decb mov sbb inc mov das (bad) jge dec mov cmpsb (bad) rolb les jmp mulb das jb sub pop inc xchg adc xchg push int3 and hlt js sbb mov sub aam jmp mov add mov jp sub inc cmpsb cmp je mov psadbw incl sub nop out inc jno sbb pushf lea jne mov mov pusha mov pushf lea jmp call call jmp jmp cmp pushf push push lea je cmp cmp jmp mov movl call fldcw (bad) push mov scas add repnz out mov nop push nop push insb dec adc sub fwait mov fisub loopne xor shl add loope add out xchg or or or js mov sbb xor pop or leave cmp mov test push cmp incl jns inc lret xor jg mov cmp lar cmp inc jno sbb fsts lea jbe test popfw push inc lea jge push adc lea pushf call in sbb or and imul (bad) outsl (bad) subl roll inc decl repz pop pop and mov push (bad) mov pop dec mov mov add inc push xchg in push pusha inc les or bound push in cmpsl test push icebp add sbb inc mov dec (bad) cmp xchg mov push or inc add in pop int adc xor xchg repz mov lahf mov test add xor out pop shlb or and sbb add xchg or or adc jno sbb mov and movb lea ja call jo (bad) clc xchg mov incl int3 xor adc inc mov cmpsl negl xor test dec (bad) jne push cmpsl jbe jne pushf ret pop lods jae pop lds arpl in sbb pop inc loop insl pop test (bad) data16 bnd xchg mov shll jmp dec push mov dec push lods sahf add je mov fwait mov std mov xchg xchg frstor ds inc add (bad) sbb xchg pop test mov ret lock ds inc sbb lea cs jmp lock cmc adc pop imul addr16 aas jno sbb mov in or cld jmp lahf aad jle sar dec push jnp cmpsl cmpsb mov sahf and insl ret dec pop (bad) cmp test (bad) or int3 and or aad iret ret out pop pop xchg inc add call push jo mov addr16 addr16 aad jno mov jecxz movsb in rclb (bad) pushf and xor mov or es ljmp xchg inc dec dec jb imul jg ret xor inc sbb or push out je std pop loopne mov lods (bad) call fcmovb inc lcall pop pusha clc adc ret inc or pop mov out xor leave xchg push jbe fsubrp push push and sub sahf xchg call aas or fnstcw lods clc lcall xchg dec nop cmpxchg test loopne mov jge add call xor xlat dec repnz cmp lods sar and jmp int3 andl out mov mov aaa mull addr16 fldl xor jle pop xchg pop inc (bad) in mov add add or cwtl push mov mov add pop sbb ds test ficompl rcl push push ret jno fsubs js in jb scas lock icebp into call and mov cmp mov or sub and inc dec xor xlat sbb cli mov popf cmpsb dec loop aad inc push rcr (bad) mov lods rorl repz and xor xlat das enter mov adc ret stos sub cmpsl sbb inc xor jbe rcrl cltd cltd xchg sbb fadd imul mov xchg in mov mov sbb in ss cmp push push push add test xchg fisubl gs pop sbb push sub push dec repnz ficom aad aaa pop push sub pop out pop js jmp dec push pop and scas xchg push mov mov cs lock fsubs push popa or cld jae outsb (bad) mov push and push jmp aam push push cli gs mov adcl imul and mov mov pusha mov pushf lea jmp scas (bad) rcr sub fisttpl push sbb dec jne in mov aam add mov (bad) or jnp out push out add jne ret popf outsl dec and add aad or cmp mov aam lock mov sbb cmpl and lods and loopne dec dec adc sbb push outsl xchg div pop (bad) dec sahf scas shlb push (bad) cmpsl push (bad) dec pop xchg jp pop cltd push jmp inc pop jae shrb imul in xor jno push lret les xchg add scas add xor cmp sub std and ljmp lea push (bad) sbb or sbb mov sub pop ljmp mov jb pushf mov jg fldt movsl mov enter inc dec pusha ja ror fbld mov push insl push sub cmp mov (bad) sbb cwtl xchg clc dec popf loop lret mov flds push mov push cmpsb push jo mov jmp movsl mov icebp adc add and icebp enter pop jno push mov add mov (bad) std or ds in in xor stos mov mov sbb std push sbb dec imul mov es and pushf sarl sbb mov daa mov push dec mov imul out xchg daa and dec bound out or gs outsb jge nop (bad) jle int lock pop cmpsl mov cmp xchg imul push inc ja imul mov sbb dec sub and hlt sub sarb test sbb or ret enter mov jl adc pop xchg add in icebp push inc (bad) push jae jno mov fcmovnu jecxz mov xchg movsl add push mov leave aad aad leave jl fmull xchg ret in xchg push nop mov add outsl xor adc aaa scas adc push imul mov and lahf scas rclb fld cmp comiss mov scas and (bad) pop adc xchg mov ror rclb cmc imul in push jmp ret stc out stos jp dec mov pshufw sbb pop (bad) jmp gs adc add mov mov mov out loope mov icebp fiaddl fwait ret xlat jne mov daa js mov mov add xchg mov lea mov pusha aas hlt and mov push in ret fiadd push fsts dec inc jns lods xchg sub xor sti ret mov push push scas push arpl mov push mov adc pushf movl push pusha movl pusha mov movw push lea jmp sar into nop xor loop xor sub add stc popa cmp xor add jl les mov xor fisubrl pop add jmp inc push cmp ffreep sbb movsl std test dec mov cmpl push les dec leave cmp xchg xchg les mov sahf je sub mov aaa divl mov xorl jno mov cmc cwtl insl shlb adc mov aaa aas mov insb lods adc js cmpsl aaa scas das ja test lcall sti stos xor movsl mov out (bad) loopne,pt adc mov sub adc inc and add and pushf movb pushf lea jmp pusha push xchg jmp pusha mov pusha call pushf lea jne mov push pushfw popw bt rcl mov movb pushf pusha pushf rol cmp call mov mov mov dec push inc sbb mov std dec cld bound xchg jmp pop cmovg jne mov push jnp pop out lods jmp js out lods aaa or xchg jns sbbb out out mov (bad) das sahf mov inc inc jb test lret mov sub xor add add out cmpsb jns push imul repz adc lock sbb add pop popa push push mov scas or pop fsubr mov jmp jne mov jno adc dec jb pop rorl xchg test push outsb or ds and sbb outsb (bad) lahf jg repnz scas lods repz nop out inc jno,pn jns adc faddp sbb xor mov mov or clc cmp xlat inc aam andl enter sub loopne leave rol mov (bad) dec mov cmpb aaa js bound xor xor inc test xor push stos sbb daa xlat imul popf jmp stos sub repz jle insl out insl pop fisubr cmp in nop out inc cmp mul int jmp or mov mov and clc popf and adc stc or adc pushf push cmp cli lea mov jmp stc bt pushl test pushf lea je clc test test call call add inc gs outsl fs gs popa outsb fs gs add push adc (bad) stos adc add add adc add add add add add add add push adc add add pop mov add add add add addb add je adc add add jle adc add add stos pop adc add add mov add add add add add or add add add pop adc add add call add add adc add add add add add iret sbb mov sbb add add add push nop dec inc jle xchg inc or out dec ret fwait scas push dec push jp (bad) fdivrs xchg int3 in xchg adc push test jmp call sub dec jmp mov sbb mov fs insb insb xchg pop and fmuls imul aaa mov lds bsf jmp daa lods scas (bad) hlt lret movsl sub jecxz mov std stc (bad) xlat sbb mov mov jae movsb rorb lods mov pop sub push pop xchg sahf mov xchg mov mov cmpsl nop iret mov dec jno bswap (bad) mul xchg loop adc mov xor cmpsl xchg mov enter cs lahf subb shl in aad pop jg sbb subl mov mov jno mov inc jns ror and mov jle xchg imul clc pop loope xor fild xchg or je pop push out mull pusha pusha push pushf movl call push call pushl popl pushl pushf pushl ret movb push lea je sbb jmp push push sub dec das xor or ss cmp sub mov in dec xor dec or sbb mov sub (bad) xor out pop dec dec fsubl xor mov mov int push mov lods in hlt out pop popa sbb push mov mov pop pushf jns icebp adc add sbb enter mov lds jg das (bad) sbb or inc fildl pop movsl pusha inc pop insl xchg mov add scas adc dec or mov cltd insb jge pop push xchg clc out test fisubrl or movsb cli pop and (bad) cwtl inc clc pop sub cmp mov or shl jmp add pop pop adcb fnstcw and lea mov ret mov test arpl sbb sbb lret out leave ficom and ljmp sub incb xchg mov push mov sti ret dec mov push lods repnz jge popa pop mov (bad) mov lcall imul insl and or sub in push rorl aad xlat jno fs je jo push fild pusha imulb rorb or inc sbb lds mov cmp inc repz dec xchg add mov fistp sub clc xor mov sub jae add dec nop sbb xchg mov pop arpl inc stos add (bad) movsl sbb in push and (bad) nop inc (bad) test outsl (bad) aaa adc mov cli dec and sub xlat nop xchg push loopne mov pop cmp mov aaa je adc ja jp push sbb mov mov (bad) fmull jecxz jmp and pop or lahf mov sub inc inc rcrb lea in lods shlb rcr add mov int3 fnstsw fcomps xchg repnz push (bad) in xchg xor scas out push int cld and hlt hlt pop and sbb stos push gs push and lds sub ror sbb incl sbb inc lock mov xchg insb leave jne mov icebp (bad) xor arpl sub and in movsbw pop pushf pusha movb pushl pushl ret enter js push std loopne push dec push fldl cs xchg call cmp adc insl adc pop fs ja imul xchg rorb mov and lods add push dec mov js push stos stc outsb imul call imul test ret sbb push dec xchg or xor add dec fstps lds mov mov xorl imul and adc pop inc aas cmpsl sbb adc repz cmpsb cmp pop arpl jno or sbb inc and ret and jne movzbl push jmp test mov sarl xor lret cmp int3 xchg call adc push nop dec rcrb add mov jl lods (bad) inc xor repz fstl inc das dec scas add jnp or lret push jno fld xlat std inc pop stos mov dec out adc lock pop dec rcrb add push cmp inc (bad) mov pop jmp add js loopne mov out lock mov jmp movsl sbb les and imull idivb lcall inc rorb outsb cmp sbb or stos pop fisttp test xchg ret add and decl es push nop push arpl ficompl cli les sub xchg sub loopne adc cmpsb add pop cltd push repz add (bad) negb sub cmp fnsave pop mov dec mulb in xor enter scas (bad) icebp cwtl fadds je push fnsave decb push xchg aad mov stc adc in arpl push bound in jl jae imul lea adc cmp lods jbe pop inc push in fwait movsb insl mov mov xchg sub popa fisttpll add pop or sub and add out push cli xlat jno mov loopne push sub sbb dec jae mov mov js cmp push stos fimull xchg pop in xor cld insl mov aas orb aas jg outsl seto mov ret daa imull pop jb,pn push sti fs mov add je js jge sbb and inc scas push dec push fs push xchg movsl pushf popa ds pusha adc xchg push into jo rcrb mov jmp scas lock xor jecxz jl pop or ret inc jmp xchg pop pop adc out sub mov jmp stos hlt adc (bad) jns mov lret cmovp out xchg mov and xchg inc sbbl inc sahf xchg scas scas dec addr16 fdivr add sbbb ret sti pop aas cmp xchg and push dec outsl subl add popa pop into outsl iret xchg cmp pop inc xor arpl pop out out fmuls add jge adc jae outsb icebp (bad) aaa and jno or mov popl push movb pushl pushl ret mov pushf mov pushl mov push pop pusha bswap mov pusha push mov pushf pushl ret pushl popl push pushl ret inc pushf inc xor (bad) enter xor pop aas pop jg loop jecxz xchg test pop std mov (bad) std (bad) sbb repnz cmp (bad) divb fs push (bad) (bad) mov mov imul loope repnz cli fs arpl cmc xchg jno cmpsl aad pop out fstl repz (bad) shll aam cmp imul xor mov data16 cld or out fidiv std negl (bad) cld (bad) sbb cli movsb (bad) pop xorl sbb ret inc sarb pop pop push cmp xor divl or call mov das dec pusha (bad) test movsb mov lcall sub cmp jne adc imul rcrb test push (bad) mov cli pop xchg stos test subb push mov rorl jge (bad) pop outsb xchg jle ret sbb gs ficompl pop add and int cmpsl (bad) mov xor mov pop pop add mov jno cmc sbb clc pop xchg push push sbb insl insl jb outsl push push or xor shrb dec das jecxz mov loope and mov or cmpsb cmpsl mov loope bound push sub sub cltd xchg xchg mov mov push jo (bad) xchg mov sub inc js sbb xchg mov divb pop outsb push out inc leave aad es es into add jg loope icebp lcall add or fs pop outsb mov cwtl inc in jb xchg imul pop push inc xlat std ret inc xchg mov adc xor sbb sbb push icebp cmp cmp shr jo clc inc push js mov xchg icebp int (bad) sbb mov lret sbb jno add (bad) lcall mov and rcr icebp push leave sbb aad mov jbe dec popa ret aaa xchg lods cmp inc mov push mov repnz dec xor xor adc sub sti lock bound pop bound cmp (bad) dec xchg pop inc in jle add ret test dec jnp dec in lods dec xchg xor and or fisub jle std mov fbld test sbb rclb test sub mov lea je xchg rcl bts xor movzbw mov mov mov inc rol shr movsbl test adc mov pusha or mov jmp lea jno push not pushl movw jmp movb pushf push movl call mov jecxz fildll shl and push add push dec xchg sub cmp cwtl dec nop lahf xorb cld dec xchg outsl (bad) jo and mov test aam aaa out aaa addr16 lods adc (bad) cmp push or int3 push mov decb push push (bad) mov jl test test and test fsubr lahf data16 repnz lods imul (bad) fxch xchg push js mov mov or adc xor es fsubr (bad) pop (bad) mov (bad) adc sbb enter push mov jno add (bad) in rcr in sbb mov fiadd add jnp pop inc aas enter out cmove (bad) xcrypt-ctr cmpsl sbb mov lahf adc pusha (bad) add call in sub pop (bad) cmpsb cwtl mov and sub imul stos hlt add xlat insb and mov scas mov and out stos mov imul (bad) xor sub lds sbb inc stc xchg stos mov dec xor daa pop js mov add mov popa imul bound mov (bad) and push aam dec adc xchg shrl hlt jmp int3 xchg or stc call inc push cmp sub and xchg in jg lcall mov cli pop jecxz clc cmpsb fstps jno add xchg inc pushf mov mov xchg pop jmp xchg outsl pop ret sub stos xor fsubs mov cmp sub cltd sti imul test dec mov and push movsl pop repnz pop push xchg sbb je (bad) cld jp sti and out sar add mov mov cld jl or jmp popf popa jne pop outsl scas push dec fidivl fidivr and lret and pop aaa xchg xchg mov mov mov jge pop (bad) into lock and or icebp add cmp push js repnz lret jae mov fsubs fwait jecxz sub dec mov cmp push dec cs dec dec add test dec stc neg add rcl sub rcr btc shr movsbw or mov shld shr add bts clc inc add clc mov cmc push stc pusha shr call jp mov pushf shr std push dec (bad) lret lcall scas jno test push ja or jo jo mov repz cwtl daa cmp loope pop mov ret enter add inc add hlt repnz jns test sbbb out out mov inc pop sbbb (bad) jl jge sub lods and sbb sbb or shrl mov (bad) fmuls cmpsl sarb dec pop cmp and inc push push aaa dec out int3 lcall scas shrb xor stos je jns cmpsb jo das jno add shll vmovd jge jmp pop jl inc push fadds mov icebp or mov sub jg,pt rcl arpl xor rcll adc pop test icebp mov (bad) sbb sub jo gs je int3 adc push cmp xor test cld lock jae push out pop outsl pusha pop xor pop xor repz pop fs testl cmp mov xchg inc loopne jge cld in insb mov xchg push mov nop jge inc jp mov mov jg jae mov or inc sahf addr16 xchg loopne jge mov push adc xchg inc fisubrl jno jmp stos dec xchg outsl loope inc jns mov push sub adc push int3 loopne lods mov std add dec aad mov out push sbb imulb inc es push ret inc adc add lret adc push inc push and lret xor in addr16 mov loopne scas incb jnp ja out fidivrl imul cmpsl xchg fcomps adc xchg adc and sub fstl clc xor cltd fist push inc mov movsl mov stos mov lahf ret fldenv inc push mov mov sti jmp push add insl jg xor and cld (bad) les pusha inc pop cmp jns outsl xchg das (bad) in pop (bad) sbb jp lea jne lahf bt movsbl sub mov mov pusha push pushl lea jmp pushf xchg pop pushf mov xchg pusha mov mov mov mov lea mov push pushf pushf pushl ret ret (bad) icebp xchg cwtl cmpsb mov sbb adc lcall add aaa mov sbb mov movsl enter imul aas mov cli and cmp movsb sbb and shll jne xchg sub jmp inc aaa incb lret mov dec fstl fbld jbe or int cwtl (bad) lock dec sahf inc pop push jne push dec xchg mov sbb mov fist out inc cli cmp add icebp sbbb pop lcall jo popa xor mov add std adc stc not call xchg faddp (bad) adc fadds out movb mov and out scas out (bad) call mov adc sub fidivl loopne call cmp js xor arpl faddl mov imul adc cmc rorl outsl (bad) popa jb push popf roll sbb je mov xchg in mov push out das out push movsl and push jg mov xorl and daa and cs and cmp xor addb push jge in adc inc outsl push cli gs adc ret es lock lret pop pop aas pop mov dec outsl outsl addb and and push call add call lret inc mov lret incl push lea jne mov shl movsbw btr mov bt add cmp movzwl xor cmp call lea jne pusha mov pushl mov mov lea jns push lea call pusha mov pushf pushl mov push lea jmp jmp push pushl mov push mov movsbw movzbw lea movl bswap lea pushf movl jmp movb cmp push lea ja neg rcr cmc and sub pushf shl test lea add pusha pusha dec mov rcl test mov clc repnz pushl push jmp std das das jle adc lods jns push push cmc add dec xor add icebp pop cmpsb rorl jmp xchg faddl dec (bad) pop lods sub mov imul inc xchg dec out fwait mov stc xchg cs jo xor lock cmp mov or arpl mov adc in stc gs xor lret popf cmp xor dec adc leave in or xor sub fcomi pop sub mov insb aad or jae pushf sub jmp call or sbb aad pop cli sub cmp and ljmp mov push insl ret idivb into mov lock ret cmp sub rcll xchg arpl adc cmp mov inc pop xchg push dec mov data16 push push popa mov in std inc (bad) mov scas xchg mov push ja fldl dec out out dec lahf lahf xchg movsb mov dec jmp xor imul xchg lret jmp sbb or cmp roll cmp push mov into (bad) sbb mov xor imul mov (bad) loop fbstp inc push dec or aam push jno cli negb (bad) adc and lret jmp cmpsl cmpsb mov cmc push xchg cmp jp,pt inc int sbb sub xchg fnop jbe jb mov fs push cmpl lds xchg xchg mov mov je fldl js sub les outsl lods push leave jns out lods mov jp int3 clc push adc xchg cli mov pop je mov adc stc cld lock lods rclb (bad) jno push adc popa cmp xchg mov in aad in (bad) and dec pop pop mov ss jns xchg sbb dec movsl pusha stc gs add mov pop cmp cmp jno stc xchg clc xchg jmp dec das daa aaa jg icebp mov cmc push cmp cmp mov mov push flds out repz dec incb cs aad jecxz pop and adc into in data16 test cmp insl sub xchg cs out shl mov sbb inc add pop (bad) mov xchg mov aam mov cmp les jle xchg pop sub rcll jecxz mov lahf and (bad) in xor or mov mov fnstcw mov mov or pop jg pop addr16 cmp mov push lea sbb or pop outsl rorl mov mov mov dec fisubl negl pop pop inc pop (bad) adc lret inc movl scas sbb frndint cmpsl cmp mov aas leave pop jnp insb (bad) mov clc push sub outsb ret addr16 pop mov int3 mov loopne stos and dec stos adc xlat pop testl jnp sarb xor cwtl insl orl sub and popa sub xor sti cmp mov jo or push lock sbb push xchg jae cmp mov dec mov out ss fcomps inc mov out mov and cmp das mov int (bad) push out ror leave cmc in xor inc jb jp sub fwait arpl testl cltd vpextrw lds out bound pop fsub sbb ret sbb ja mov push out aaa incb stc movsl stc or dec dec dec mov test fucomp mov int jmp das add out sti inc pop inc hlt dec pop (bad) push and push test (bad) leave sbb mov add sbbl jp dec inc inc call inc fisubrl (bad) mov push sub out cli in jmp out cmpsl pop data16 jno not mov clc jmp lea jne lahf pusha movb lea mov pop mov call mov xchg pusha movl movb lea pushf movl call pusha movb mov push lea call test sub pushf call mov call call clc pushf jmp push push loop addr16 lods or cmp in repz fisttp das aas loopne xor (bad) adc lds adc sarl inc lcall sub cmp sub fcomi dec pusha in sbb out mov pop adc (bad) pop leave jne jge movsl pusha in and bound (bad) shl jbe mov nop sub loope pop inc sti add scas xchg out pop mov inc sbb xchg sub sbbl out cmp imul add jle push dec cwtl daa das adc sub cli test jno cmc cmp fildl fnstsw fucom ss pop xchg push fucom or xchg outsb xor push in ror sbb add sub push pop mov cmc sub or in mov sub sub push jne cmp movsl fildl outsl les hlt test mov out add mov jmp add inc and jns in cmp lods jb sub test xchg pop test ret jp cmpsb sub inc cli cmp inc cmp das cmp in xchg mov mov mov repnz and pop call mov repnz aad stos popf mov shrb sub jnp pop daa jmp pop and push cwtl loop mov push jbe fs outsl stc mov adc lret adc inc sahf jp lock push push and add lea dec pop insl or call in or add xor ret mov jnp mov lea fwait stos or lock (bad) mov dec mov push mov mov jle inc jge mov lahf push mov mov dec jo das sub ror sbb dec nop mov pop push icebp icebp or pop inc push xor jmp jb dec aas adc in (bad) jl mov dec and jns stos aam int (bad) enter xchg pusha sbb inc push js adc adc mulb je sbbl fildl scas lock cmp or adc or lahf inc xchg or sahf (bad) xor rcr es iret lock outsl jo scas sbbl daa push mov jb mov pushf loop ss sti add cmpsl pop outsl fist aam add xor cld push rol cli cmp mov dec imul sbb add jo cmp or scas lock andl pop xrelease test test repz iret xor les sti arpl jnp nop sbb (bad) rcll or mov mov mov call and aad or add push sub pushf stos xor aas add pop aam push mov (bad) cmp add popa cmc dec daa cwtl sahf shl adc dec pop jnp (bad) fcomip xchg ljmp adc das lock fisub adc bnd or imul jo cli xor decb out popa ror bound les stos sti aas lcall or or adc and mov mov adc sub sar mov inc rcl jmp lods and cmpl call or push and movsl mov test cs mov sbb adcb xchg pop adc mov push mov clc sbb sbb pop xchg daa and and push mov (bad) adc rorb adc and imull jo pop cmp jns (bad) aam iret scas lock icebp and dec jbe fs jb je jmp sub pop cltd insb adc dec inc pop cmpsb stc rorl cmp scas ret adc rolb das xchg lea adc lret sub push leave in mov nop mov pop fidiv inc cmpl mov xchg push (bad) leave xchg jmp inc stc test (bad) mov (bad) push sbb sar mov in stos lods insb mov mov sub and in leave (bad) dec aam add arpl fist xor clc adc adc imul cmp sub scas scas mul and mov cld ret pop lock mov addb add outsb mov pushf and pop inc sub fild or in repnz lahf mov bound stos jae enter cld out sub xor jg insl (bad) sbb mov cltd sbb loopne jp sub clc es stos xor inc pop es dec stc data16 pushf dec sbb jge or ss sbb lret sbb cmp or mov fldl push test lock movsb sbb add jo pushl popl pusha push pushl ret mov movsbw lea pop lea pusha call mov sub test xchg loope dec mov push xor sub mov pop mov dec cli lea or add mov repz daa les andl (bad) fbld sbb pop inc push sub insb fsubs lock call push mov sbb inc add cmp popa ficompl inc and aaa or mov cmp mov repnz cmp xor mov aaa mov scas test test lock mov dec repnz inc sbb lret imul push lea (bad) jno out inc dec ret mov call xor sbb and mov andl mov cltd inc jge dec jno jge jg,pt jecxz insl inc pop imul xor add out dec hlt (bad) or adc and xor adc dec mov push lahf jp aas pusha das outsl mov mov xor xchg addr16 adc ret dec push data16 jns inc fsubrs or inc sub mov stc sbb inc fsubr cmp push subl push clc push sarb cmp cli sub inc clc bound (bad) inc jnp pop scas xor out imull pop out xchg cld lret fs je pushf btr jmp arpl jmp popa stos adc movsb fistpl shrl push dec jne imul mov mov jb mov addr16 scas in dec cwtl ds sti cmp push cmp popa ret inc (bad) aad dec scas sahf push outsb mov dec clc ret pop pop add sti dec sub pop jecxz xor fmull fbld jmp roll shl add and cmp in fldenv pop call inc fdiv sub jne outsb add pushf loop ret xchg enter jno in sub sub dec xor int jne xchg lret jne sub mov pop loop adc sbb std xor xor mov add test jb gs mov rcll in mov imul xor test fisubl loope dec shrb aas jb dec bound in xor inc sar cmpsl mov lret rcrl mov sub push sub xor pop xchg and fyl2x or cmp sub jno int3 sub adc or data16 jno in je jno mov push call xchg adc xchg lcall pop outsl scas out scas repz pop lock hlt lret clc out daa inc pop and mov dec push mov cld or test mov ds mov jge aad aaa push sub mov jg js mov push sub iret cmpb outsl out pop repz xor xchg cmpsb pop sbb (bad) ss (bad) pop and jg sbb and xchg movsl mov cltd scas mov cld shll scas cmp (bad) ret adc push jbe (bad) mov das inc sti test scas es cltd jl jg mov repz inc sub lcall ret roll lret mov mov mov imulb enter or pop add (bad) dec sahf and push outsb xor pop ret cmp push gs in cwtl idivl cmp repnz rolb bt cmp bswap lea lea jmp enter (bad) or arpl sub pop xlat call inc push sub fistl popa add les adc nop dec sub imul out jecxz adc pop aam sub imul adc mov xchg dec mov out and aas loop lret push mov pop fsubrs aad xchg cmp mov movsb (bad) mov fidiv jmp push lods mov xor mov jnp clc pop hlt mov lds lock pop inc sbbl jno jmp xor aaa adc nop dec nop (bad) xorl sbb add adc push inc pushf push add adc cli inc adc leave fidivl push sbb out jo xchg lret jecxz add xchg je sarb aaa mov mov icebp mov mov fcmove mov xor cmp cmpsb out pop xor outsl aad jp pop data16 loope,pn aaa pop sbb cmp adc xor and dec je enter fcmovb cmp roll adc ja jbe iret jbe fwait push aas sbb xchg mov out push dec xor inc pop ja test mov js bound data16 pop ljmp push gs jo outsb dec gs add clc fldenv xchg pusha pop jmp dec mov data16 les cmpsl push dec mov stc push cmp push mov mov lcall fnstcw insl roll mov popf or inc jnp idivl loop icebp add push mov pop add fwait cmpsb inc sbb inc sbb mov xchg inc add cwtl stos or xchg add dec lds dec pop mov cmp cmp mov clc xor xchg (bad) fldl test cmp cltd in into aaa pop adc pop jmp mov call test sub call call add inc gs gs dec bound arpl pusha pushf mov pushf movb lea jmp bound jo test mov hlt mov outsl das outsl or cmp scas nop xchg call jle (bad) cmp push cltd stos mov jmp adc mov aad add mov in jae imull into fbld push arpl bound mov std popa dec inc std test cmp xchg jns scas aaa mov imul nop inc movsb addr16 dec clc out hlt add and test imul rcrl xchg stos arpl mov cmp test sbb lcall mov dec cli mov and sub cmp jge pop lret pop fisttpl cmp push repz pop insl xchg outsl sbbb inc imul lds push jl,pt orl sub mov push pop test adc cwtl mov xor sarb jl test mov lahf loopne adc sarl rcrb push or sbb nop rclb popf out test leave cmp imul mov aas mov add out jl jg push push inc push dec xor cs insb add pop jg (bad) fstpl or (bad) cld or sbb hlt repnz mov scas lock aam fsubs cmp push xchg xchg or jmp mov mov adc mov (bad) mov push pop (bad) push out mov lock imul fisubrl stos mov cmp (bad) repz pop push je outsb call loop ss loope inc ja jno out dec (bad) loope cmp pusha movb sub push cmp repnz jmp and dec pusha insl rcrl (bad) jl (bad) cld cmpsb cmp fs pusha push adc add ret jne jno test dec cmp jne imul loop xchg dec call jp dec xor xchg mov push adc mov repnz mov xchg xchg adc xor xlat (bad) imul testb das cmp lea test adc stos out cmp mov push (bad) loope scas (bad) or push in arpl jnp adc ss dec cmpsl pop cld and jg ja inc mov repnz cmp out in repz pop out scas push into push push pushf movl lea jne push pushf pushf pusha push lea jmp lea je push mov call call adc push fcomp adcl inc test mov mov loop jb xor ds popf cli cmpsb pop cltd sbb jecxz xor (bad) testl std adc xchg out or inc test mov es dec adc fist js loopne push sub insl jle xchg (bad) fnop or js push cmc lret mov loop jno ja popa imul mov sti or (bad) push addr16 (bad) cmp push jecxz push inc fldl sbb fidivrl int add and les sub bound in (bad) in fs jae call clc mov cmc jmp je stos inc mov push mov repnz and or adc add sub sub sub in adc xlat sub pop insl sahf adc mov cld or inc pop fiaddl or xchg mov xor push pop pop mov cmp push mov fcmovbe call xchg mov mov lods add sbb lds sub fisubl loope sub mov pop movsb mov stc xchg bound test mov icebp fsubs daa push mov or sub test xor in xchg add (bad) clc es int (bad) fisttpl jge clc data16 inc xorl pop dec add xchg hlt jo fninit add xchg or adc dec cmc out cmp and cs lods mov (bad) pop ret aam inc xor mov fildl dec xor adc shr iret nop mov lds repnz call lock (bad) (bad) inc lret into jne cmp leave leave pushf ja sub cmp mov mov mov je (bad) popa xor repz lods xor and jle mov mov out inc sbb jno jecxz xchg fisubl and je add mov sbb mov sbb mov bswap not mov pusha call movzbw clc cmc stc mov btc pusha mov lea stc mov jmp imul outsl addb fwait jae rcr ret and add ret fldt iret lock addl adc movsb gs les addr16 dec xchg sbb insb mov enter repz pusha jno jo shrb flds mov pop dec xor imul pop mov adc adc int and mov out scas add lods add and cmp stc or scas rcl addl adc lea pop jo dec repz cli mov cwtl push out mov and outsb (bad) ja (bad) icebp add leave adc test out pop faddp fild js mov test sub in add dec xor (bad) mov lret shrl outsb aad repnz into xor sub dec cmp insl mov cmp sub pusha cmp push mov adc dec xlat jmp mov lahf jb add out ffreep sbb push mov dec dec arpl (bad) cwtl test test icebp les pusha or testl and mov cltd xor lods es scas mov and pop in sub sbb xcrypt-ctr cmpsl sbb sub xor cli or loope popf pop test inc and pushf pushf lods stc lea jne rol call pusha ror clc call inc pusha call jmp aam add pusha rorl push in pop imul or aam mov mov gs sbb ljmp mov pop ljmp dec lds clc data16 xchg jp (bad) jmp dec mov sub mov test ret aaa add sarl cmp test in bound sub inc lahf repz pop xchg jb mov or data16 cmp adc lcall mov lds inc mov rcrl mov xchg sbb pop enter loopne push cmp mull aas hlt imul add cwtl addr16 adc dec jo push and dec pop mov sbb pop (bad) lock add xchg sub xchg push pop pop lods call inc (bad) push xchg nop imul pushf cli sahf repnz mov pusha xor mov jp and lret lret fs push sti dec adc pop cmpl dec nop xchg adc int3 fist jl mov xor shrb nop push insb jge lds jnp movsb (bad) mov mov scas inc sti mov call loopne (bad) jbe lea mov cwtl push pushf cwtl not lea pushf xchg pop lea cwtl push movl mov lea call push push inc push inc dec push cs insb add test add jmp mulb into add mov pushf sub neg sub clc pop mov pushf sub call call jmp (bad) dec fadds mov (bad) int3 jl jnp xchg pop and sbb mov mov and daa mov nop sub leave push cmpb mov xchg sub enter or lea mov inc cmpl inc push pop jl inc loop adc cltd lret cld cmp hlt out pop pop popf and decb xor pop outsl nop jbe loope sbb dec mov xlat mov pop xchg adc pop pop jg andl mov lret xchg sbb mov add add icebp add ficom jge popf lea jb pusha cmc cmp call inc pushl mov lea jmp cmp outsb push push cmpsb cli dec pop gs pop push dec jge lea lret (bad) mov mov idivl and aad sub addl cld and xlat cs mov sbb bound xor cmp stos push xor in dec ret sarl dec call sbb xor enter enter xchg adc lret jge add cmp call test mov mov ljmp pusha cmp popf or sub and lds lret xchg mov pop nop dec fsubs je xchg xor add pop fnstsw push pop popa lea jmp call imul popa sbb xchg xchg xchg in inc faddl int3 pop mov and imul xchg push jb mov cmp cmp stos imul inc mov psubsw cmpsl cmp sbb sub mov in cmp (bad) mov xchg addr16 outsb mov dec adc sub or mov pop scas push stos adc inc cld adc fchs inc adcl lds push and mov mov scas jnp (bad) adc call outsb push lods js test pop pusha jno fdiv add jne mov add arpl movsb insl mov mov mov fidivl fsubl insb push dec jno or ds adc ret movl cmp loopne sbb ret xchg pop cmp push jmp xchg mov outsb cmp fisubl cmp cltd lds sarl movsl cmp inc adc in lahf inc push add jl (bad) sub xor and mov sbb push nop dec cwtl inc mov rcrb sub sub jp pop sub mov xor sbb cmpsb jle rol cli test sbb loop mov cmpsb fldenv (bad) into lock adc (bad) push loopne imul push je stos xchg lret ror mov clc int3 cmp es dec (bad) pop cmp test pop js arpl clc jmp fstps mov dec std daa cwtl lea test xchg mov push xor push je shrb mov sbb adc jb mov mov mov (bad) mov in out xchg mov lret mov cwtl incl push (bad) jb inc ss pop (bad) push out sbb into and call mov mov mov and cltd stos lods rcll mov mov sbb not sbb clc cmpsb sbb xchg xchg push rcrl cmp push int3 mov sbb jns pop popa jne inc adcl fsubrs inc fisub pop sub xchg daa sub std cmp sub test lods jb or jbe jns test es mov xchg or in xchg mov test loope push lret stc or jbe fsubrl repz pop and (bad) and loopne call jl js inc pop loop push roll xlat (bad) mov stc (bad) mov in jno fistl jle scas ds fcompl jmp push xchg mov push add mov inc sbb (bad) and add sub mov push dec out popa inc test lcall pop xchg pushaw sahf mov adc in jb jp ret sbb enter jg add xor jbe push pushl push xchg stc shl outsl dec or aaa dec pshufw push arpl repnz jno pop mov mov mov xchg push negl mov (bad) ret dec adc orb xchg jae stos shrb ror outsl iret scas rolb in icebp adc insb repz ljmp ljmp pop fldcw inc movl push call push inc jns xchg lea inc movsl pop adcb dec adc inc push iret loop int sbb pop add mov push cmp fldln2 cmp xor cmp pop pop and pushf or movsb inc and push hlt mov inc adc in adc mov push dec push cmp loop or (bad) jecxz idivl call rorb outsb and pmulhw xor or mov pop lret out lods repnz fildll leave cmp fcmovnu add xor shr inc aad cmp inc push sub mov push sub insb leave jne popw repnz adc les stos in jno fldcw addr16 call fadds dec cmp hlt adc add inc pop js pusha bound scas nop sbb sbb aas jg idivl (bad) mov rolb out adc scas xchg or pop repz (bad) loope loope jne push jecxz add popf dec cli fsubrl mov mov pop insl xor jnp in repz (bad) out xchg ljmp inc inc std inc adc sub pop dec xchg xchg (bad) (bad) rcll sbb mov cmp xchg cmc or fisub mov jno fmul roll dec (bad) jns xchg in imul pop lea xchg mov icebp shr adc test cmp lahf jne pop jle insl ret mov xchg jbe lds (bad) or push mov lahf ret pop insb cmpsb mov mov insl jle lret in rcrl and (bad) fdivs xor enter pusha mov icebp das lock dec repnz lcall inc wrmsr inc lahf jg add lret loopne,pn (bad) mov mov pushf dec xchg (bad) push push test shlb ret mov pop xlat (bad) mov cmp jl or fs jno and imul xchg daa push out (bad) lds loopne (bad) xor sbb dec push shll cltd jge pushf mov inc pop fildll les cmp pushf loope mov mov mov ss mov dec xchg sahf inc jecxz incb push inc fist cli movsb cli pop decl imul fld inc fwait lods (bad) push xor cli and fistp mov (bad) jno (bad) push jns cmp adc push in adc (bad) or cmp mov or leave inc fldcw xchg je jge pusha pop mov jge nop (bad) shr shl cwtl (bad) fwait outsb scas add and pusha pop outsl xchg cmpsl sub push push cmpsb mov mov pop hlt (bad) lcall and addr16 push cmc mov cmp jg add cmp xchg mov xor and cmp cwtl es popa mov cwtl mov dec xchg pushf mov jge xchg cmp or outsl cmp xchg adc jecxz sbb dec sahf inc lret and stos push dec xor (bad) pusha stos xor sahf icebp xor add push inc jb gs gs outsl jb add or xchg lock sub mov sti add inc jg arpl jae cmpsl ljmp lret orb cld loop mov nop mov pop pushf and push sbb pop or jo dec iret inc pushf in add lea pushf lock or sub inc ds push aas loope mov pop (bad) insb xlat loop (bad) mov add jmp repz (bad) push mov adc xchg dec inc insb xor fist scas fs rorl insb rcr fildll mov xchg and xor xor aad scas xor sub xchg out xchg jo xor (bad) fistp inc lahf aas enter cmp fwait and hlt inc cmp inc pop inc lret push adc (bad) dec outsl adc mov xor lods cmp fildl nop cmp mov mov cli or inc or or jae daa aaa js dec out xchg in jne jp dec cmc rcl lods arpl insb fisttpl jecxz jbe inc push jp adc leave pop lret mov dec movsb (bad) dec adc dec pop (bad) loop sbb cwtl aas mov test mov cld push pop and aas lahf imul scas push lret sbb inc cmp (bad) (bad) push push fwait hlt jmp inc cs fiadd popa mov xchg out pop dec negl daa or dec jae sub js inc push or dec pop sub or imul into (bad) inc sbb and inc fildl mov and test xor nop bound pop inc test sub nop push mov pop (bad) lods xchg test inc mov inc fbstp pop mov sbb lods adc or shll mov mov fwait lock pusha stos inc popf push mov mov xchg lea daa jno rcl mov out mov shr jecxz dec sbb jne popa popf xchg test test and mov arpl addr16 mov call idiv dec (bad) dec mov in shl call arpl xchg lods mov mov outsb cmp sbb sub bound add bound sahf mov ds push pop cli inc push mov fadds test movsl lods fdivs push jmp push adc out lret push fcoms or adc cmpsl addr16 (bad) sbb push and int and shlb cs aaa inc cmp xchg inc dec mov jno rclb lcall mov mov push xor push cmc loope xchg dec jne sub adc cmp lea mov push clc es iret sub push ljmp aam fbstp xor aaa or movsb cmpsb je shrb (bad) push dec inc ret jns add jmp mov xchg imul mov lds gs dec xchg jne mov int sqrtps popa fstl or pusha in push add or sbb xchg jae mov adc pop rolb arpl ds jns les pop sar stc lea sbb cmp adc pop cli test fstpl sahf xor (bad) jns addr16 dec pop mov pop fsubrs xor jp mov push outsb pop pushf mov push sbb inc mov push imul scas popa lret push shrb xor pop inc xor sub add xchg add or inc cmp adc pop sahf fwait add pop sub cld (bad) pushl or pop add or aas bound mov jno (bad) xor pusha mov cmp inc add test xchg test or sbbl (bad) cmp insl push pop stos inc mov jbe out movsl pop push fs inc pop pop mov mov fcmovnu add sbb es std xor aam and (bad) hlt ljmp mov subb mov js stos out aad cli hlt sub lds cwtl lock and adc out xchg dec mov rolb in xchg or cmp bound xchg lea mov mov icebp sahf int in or pop inc aas andb loopne sarb or adc in jmp mov mov ss dec jno inc jecxz or dec pop outsb cmp shr inc mov or and xchg jecxz repz and xchg mov popf push sti dec aad xchg xor test jae jne pop aad sub add js cmpsl lds cmpsb jnp shlb add jle sbbl pop cmpsl push inc fsubr clc cli (bad) data16 stc in rorb psllq xor mov lahf aas pop and or push add jno iret fidivl inc and movl jmp adc pop add push faddl int xchg dec jbe or shll leave (bad) sarl add xlat call push idivl lods xor jge adc push cmpsl cmpsl xchg call pop jmp iret jge xchg out cmp add sub and stos test sub push (bad) sbb cltd xchg fildll mov popf repnz push mov std adc and mov push lds outsl jo mov add mov imul pushf subl fild xlat pop mov into sarb inc fstps nop mov xchg mov dec adc cld in lcall adc xor push xor pop out and test pop adc and pop cmp popa cmp add addr16 loope repnz mov stos pop daa ja mov xlat add jbe adc cmpsl push (bad) idivl cmp pop shrb adc push sub mov dec das fdivs das adcl pop mov push inc push fldt add sbb imul pop lea mov mov mov jae lds adc mov lret pop mov xchg dec xor lods and lahf mov cld lock into mov je fsubrl push mov repnz or adc pop ds jb mov jo lods popa popf rcr adc sbb push loope inc jp xchg push xchg sub inc and push mov (bad) pop push daa shr or subl out mov xchg jmp jmp (bad) nop out lret push stos hlt scas xor add xor icebp insl scas mulb jno jge sbb add pop sbb or fwait push push mov xor mov lods shl or stos xor pusha xchg pop and xor xchg adc inc lods ds jns mov push cmp aas push arpl ljmp outsl dec pusha mov push dec push or cmp std (bad) div iret jnp adc sbb pushf jecxz mov in pop out adc jno int mov push test mov add ds push mov rcrb cmpsb push outsl (bad) fiadd dec add aas add xchg mov mov adc dec pushf sbb inc es inc in js xor stos arpl push out mov jp jge stc movb xorl lcall cmc (bad) fsubr bound addb repnz adc pop lods sbb inc addr16 push pop js push mov int or mov arpl jp pop addl aas or mov ret fsub mov jb sbb cmpsb pop xchg sbb sbbl jno int3 adc es pusha pushf jmp call pop into jno push add xor sub psubq sub test push out out jecxz out fistpll aam out jo pop call xor and fucomi pop test xor xchg int in xor aas and test outsb ret js xchg mov cmpl pop ret xorl test mov sbb pop arpl cmpsb pop or push hlt sub js dec jne sbbb jbe push imul xlat arpl jp cmpl scas loope jmp inc aaa xchg lret jo dec popl mov pop rcr xchg lods rclb cmp or push adc jmp push das and mov ja inc jmp fcomip cltd out or pop in adc xchg and jmp pop test or mov ret mov mov lcall xchg call or push add and jno lret or sbb sti ret dec repz lods insl xor sub sbb add mov push and dec out nop push insb xchg or lahf repz push jecxz aad inc adc and insb adc mov mov pop popf int3 stos push pushf cmp test clc (bad) call mov push inc jnp pop adcl mov sub (bad) mov gs into adc (bad) xor adc outsl add and push int3 adc fsubrl call lret icebp int nop dec sbb sarl rcrb daa mov sub sbb and cwtl push cwtl cli in (bad) scas sarb mov sub mov mov fldcw daa adc pop jne pop movsb or daa xchg test (bad) out pop push sub xor sbb and clc push jge fs xchg inc rcrb or test push daa mov in add sti push sub and cmp inc popf orl das mov sarl jno leave into shr stc cmc add call in clc mov pop loopne push nopl inc cmp sbb lods jae adc sbb pusha push mov jg or or cmp dec mov rcl packsswb das adc mov test pop add pop push and pop gs js test xor lea adc mov data16 inc test in sub push scas sbb int3 ror mov lods test in jno leave adc (bad) pusha jmp xchg jb les mov fldcw (bad) mov push pop sbb push sub sbb adc push push cmp arpl mov push movsb in xlat in jmp jno mov call push mov and mov clc or mov sbb sub pusha pop rorb leave xchg xlat pop aam sti fs subl pop (bad) fildll aaa dec dec or fwait jb rclb repnz mov push enter sbb stc sbb push (bad) fildl cmpsb mov inc (bad) test push pop int3 push cwtl xchg fs dec imul inc adc pop and push cmp fxtract imul mov dec mov mov insl jle mov lret inc cmp shll push mov loope (bad) (bad) mov aam xor loop and jno fbld pop lods scas adc jl mov out rcrl jns jge pop pushf mov pop js leave push xchg xor cmp jg test adc movsl pusha je xor loop sbb std loope adc mov in loopne sbbl stos je xchg cmp jmp and mov lahf je or pop enter mov gs iret xor stos sahf popa mov pop inc rcrb add pop mov mov cmp sub rcrl sbb lahf mov sbb jb ret fwait pop mov and int3 adc and daa cmp mov xor pop pop pop mov jl mov mov add in out pop test push test cs dec adc mov out pop test arpl sarb sub xor sub sub push or jno (bad) loopne loopne jmp lea jae pushf lea jae not jmp inc jecxz inc jl push (bad) sti ret xor mov jg and push cmp mov mov jle scas pop lahf mov call jns adc cmp or push mov pop clc inc (bad) cmp xor lods mov xor jg test push jb leave out pop add mov cmpsl call imul sbb xchg lods lods mov hlt or jb iret loopne sbb in push and xor into fistpll push mov xchg pushf mov sti les xor jnp sbb icebp lods int pop ret dec ror mov xchg xlat mov mov mov aaa dec xchg cmpsb xchg cmp or mov test addr16 dec jno (bad) clc movl gs ret adcl stc adc inc stc mov adc jle icebp cltd movb or (bad) or cmp mov ss aas or sbb shrb pop inc fstps sub xchg mov imul outsb adc adc daa repz xor inc cwtl scas (bad) and test nop (bad) notl addr16 push fbld jbe cmp add xchg sti xor sub cmp out mov inc mov push sub bound cs xchg test pop lds adcb cmp push movb lea je stc cmp bt stc cmp jmp fstpt (bad) sbb dec std mov incb cmc lahf rclb insb jb jae mov pushf jmp jp roll xchg mov in adc sbb mov out mov pop test adc std ds adc lock es or fldt cmp lret call imul xor pop fstp push mov jl pop jl push xchg pusha mov data16 xor lock bound dec xor cmc adc js iret cltd (bad) loopne (bad) notl hlt leave push dec aaa out push je movsb lcall pop ret jo dec xor mov lock addr16 mov ret add inc loop outsb or push mov xchg pop sub sub loop popf jmp std sbb jne enter cltd add lods jno dec popf inc sub push dec fistpll out test nop jle jp pop ror mov sarb jb enter jmp mov xchg (bad) (bad) mov cltd stos lcall je pop inc mov addr16 addr16 daa ja mov push in inc pop clc data16 mov mov add and stos cmc adc or jno ret mov aam push call pusha movl movb pushf call pushf pushf push lea jne sar bswap bts mov cmc test clc pusha or call push cmc or pushf lea jo jne and mov pushf or pusha pusha pushf movl lea je jmp fsub (bad) xor popa ds ljmp frstor test insb jae jnp xor mov xchg aad mov inc xlat stos sub in shll mov inc sbb ret mov sbb insb push rcr cmp sub mov xchg mov test (bad) fistpl inc lcall dec les popf (bad) idivb lock push aaa adc cmc (bad) stc sub orb test push popf mov fdivrs lret xchg or in jno ret add sbb adc out addr16 mov pusha ds push out jbe mov (bad) loope cs jmp xor xor in mov push fwait hlt lret mov and ljmp leave (bad) dec jae cmp fwait jnp call or cmp pop push fcoml scas lock sub push pushf int3 xchg fbld fild cmp inc aam pop ret fwait inc push mov fist xchg or cmp pop mov add fs inc int3 xor dec mov xor fadds rorb ds xchg sbb enter or sahf and stos pop cltd es loop loop idivl add xchg xor sub or lret fmull mov push mov pop inc aas rorb imulb jno rclb dec call adc push sub pop rol test sbb mov push in jne daa ficomp cmpsl (bad) cmp pop xchg sbb jmp sub repz ljmp lea xchg or jp pop iret pop push enter dec lret stos pop (bad) xor mov push gs cs arpl inc iret dec cs jb push fs push mov jg pop rclb rol add mov test cmpsl movb pushl ret movb pushf cmp pushf push lea jb pushf cmp bt cmc cmp jmp or incl iret imul rorl mov scas xchg mov lock cli inc add sbb sub sub pop inc lock push or dec mulb xchg dec mov or cltd in jmp incl or cmp adc pushf (bad) push or inc pop xorb lea insb (bad) fiaddl test pop test cmp inc rcrb mul cld or cmp xor scas adc pop pop out iret sbb dec shrl pop fisubl pop mov shl jmp cmp dec jb sub cltd cmp mov scas pusha fist xchg sub mov sub xchg movsl cmp xor (bad) mov mov sbb and ret fldenv mov lods shrl add dec int sub pop add test xor test orps cld inc xchg (bad) sub mov push cmpl sti out pop in mov fisub movsl out aaa adc out and sbb (bad) dec icebp in push mov add xor (bad) (bad) mov jecxz fiaddl out and stc or sbb (bad) jno mov sbb dec (bad) mull mov sbb adcl mov in cs (bad) xchg in outsl stc and fadds in movb ljmp cwtl (bad) lock xlat or adc and xor xchg dec xor fsubrs cmpsl mov leave sti and fstpl cmp mov je push pop xor cmp jg inc mov roll mov sbb xchg adc sub dec aaa cmp mov scas mov mov inc testl jmp xor xor mov dec xlat jmp setg jmp movl bswap movzbw lea pushf movl pushf pushf call call mov sbb or mov daa cwtl pop (bad) enter gs inc scas push add jp mov xchg adcl add and (bad) dec jg gs enter jo cmpsb ja mov or jecxz cmp ret cwtl pusha jg in add xor jle (bad) lcall jg jno mov ds mov (bad) aad push inc fs repz cmpsb pop cmp mov in cltd add jns cltd push jmp pop insb and add mov or repz comiss inc pop push pusha imulb mov or pusha sbb jb insl iret lcall adc imulb jl push cmp movsl call loope (bad) adc jae pop mov ja xchg jno lret std mov mov jg mov jmp imul and lds lods pop imul xor adc xchg addr16 mov rorb sahf mov nop scas add mov push cwtl mov fidivr push inc stc push scas inc ret loope js dec (bad) adc hlt lret movsb mov adc push dec pop xchg ret push mov push adcl jge cmpsb test out shrb rcl mov push mov rorl scas dec test stos pop (bad) mov stos hlt dec inc ret push push xchg push leave pushf adc outsl fdivs jo pop push int3 or mov lods sub xchg fidiv add dec add dec sbb addr16 cs push aaa or cwtl insl movsb jp push mov xchg mov pushf mov and js adc jp test test hlt dec add adc lods pop xchg lea mov test dec mov jne mov fsubr dec inc imul stc and mov fisttp jbe out dec xor add loop cmp fmull mov or repnz dec pop dec mov out (bad) fbld std sub cltd inc add sbb aam fisttp lcall sahf mov lods popf ret or arpl sbb test pushf (bad) insb shl dec xchg fwait in cmp dec arpl loopne sbb jno mov mov pusha pushf mov movl lea jmp pusha lea je pusha call pop pop mov inc sbb imul and sahf flds adc jb dec enter xor sbb jns gs cmpl hlt (bad) xor repz push jo mov lret cmp push lock cmpsl jbe frstor fisubr xor add sub out call shrl fisubl cmp dec es mov mov xor dec add adc add push mov int3 xor aas cmpl inc push sbb add lahf (bad) enter lret js push or jmp aaa repnz inc rolb pop mov sub lods add mov out cmpsb jns test pop xchg outsb pushf bound pop inc in push dec jb push pop into rorl dec pushf cltd test jno push movsb sub test mov push movsb lock sbb lret dec cld push stc lahf adc mov jg or mov push call pop inc sarl dec lea js pop jo into pop xchg sbb ja inc adc jbe lcall jg and in cli lds push mov mov pop mov shr add lea lea xchg xchg sub rcl bsr cmc shr rol push setp mov bswap sar adc btc add cmc sar seta movsbw add add shr btr or mov push shr cmp call movb call call push dec dec push inc push dec cs insb add fs je pushf push mov cmp setb mov push add shld not mov clc bt test pushl call shld stc push rol mov (bad) repnz shld ror and push ror sub push sbb push lea add push bsf add or add push pusha bsr neg sub mov cmc mov bsr mov cmp bt cmp or pushf lea jp je cmc cmc or pusha call pushf lea je pusha lea jmp js (bad) lods jb mov xor fbstp ljmp sbb lcall ror add pop leave add dec lods mov out rcrb fisubrl xor ljmp mov xchg jge cmc fadd aam (bad) push pushf sub ja negb out clc es pop gs mov pop and and mov addb int decl inc out ror icebp lock xor and dec push mov and aad jne xchg pop inc cmp push mov jno mov imul bsr mov rcr not pusha mov pushf stc mov mov add jmp shld push mov mov jmp pushf popl pushf pushf mov pushl popl mov lea jmp bts mov pushf call jmp mov movsbw mov mov movw call cmc pusha ror cmp cmc xor call movzbl btr not not call stc add bt shrd push call inc sub mov test pushf push test sub cmc clc push shl pusha push call cmp xor test lea pusha bt not pusha xor mov bt push sub call push sub jne bswap cmp clc cmp pushf add cmc cmp cmp push add cmp sub call pusha pusha not mov movb mov pushf lea jmp mov movb pusha lea jmp push pushf lea ja sub mov cwtl shrd shrd lea lea jmp mov pushf lea jmp pushl popl mov mov pusha pushl lea jmp shrd dec mov cmp clc cmc jmp pushl pushl jmp rol shr test dec mov bt add push lea jmp mov pushl jmp lea aad mov jmp push mov mov lea jmp mov call cld push push jmp pushf pushf mov push push mov push pushf push pushf popl pushf jmp lea jne clc (bad) repz xorb pusha setbe movsbw bswap mov push push pushl movb lea jmp mov mov pushf pushf lea jmp call aas xor mov test add call lea jne bswap ror xorb movsbw movsbw pop push push push lea jmp bts sub call push call mov pusha movb lea jmp mov push pushf pushf lea jmp mov pushl popl mov pushf pushl lea jmp stc clc ror stc sub jae xor test pusha stc lea mov not stc clc bt xor pushf call pushf pushf pushl popl pushl lea jmp call sub call pushl popl mov mov lea jmp pushf pushl jmp pusha jmp bswap not ror xor (bad) icebp shl add shld sar shr shr movzbl mov lea jmp call imul pushf pusha mov mov jmp clc mov pusha call pusha call dec cmc pushf stc add pushf add jne clc stc mov clc sub jo mov push pushf pushf lea jmp add add rol mov xor bt ror mov cmp sub pusha movb cmc shr pusha pushl call ror neg sub shl adc xor (bad) (bad) mov pusha test dec jmp pushl popl mov movw lea jmp bt lea mov pushf mov pusha stc clc add pushf jmp pushl popl pushf pushl lea jmp rol mov seto stc jmp add movsbw push inc dec jmp lea jbe pushf call mov inc pushf pushf decl push pusha call pushf mov push pusha movb pushf lea jmp mov pushf popl mov pushl popl pushl pushf mov lea jmp pop pushf pushl ret pushf jmp lea jg push pushl popl pusha lea jmp cmc mov cmp xor pusha mov bt cmp pusha sub pushf mov shr jmp lea lea jo rol sub call call call call mov cmp cmc sub pushf pushf mov pushf lea jmp (bad) lock jg add shl setb jmp jmp mov pusha push pushf mov lea jmp test add mov movb pushl lea jmp lea jne movsbw clc mov call push test sub stc mul call jmp jmp pushl mov push mov jmp call pushf pusha call pushf mov mov lea jmp clc rdtsc stc sub push mov jmp cmp xor push jmp pushl test call adc mov pushf stc clc cmc sub call pushf pusha mov movb pushf popl mov pushf push movb pushl popl push lea jmp bswap bswap neg call clc pusha jmp mov pusha mov pushf pushf pushl lea jmp dec mov jmp mov dec call jmp bt mov cmc pushf not cmp pushf cmp not pushf sub pushl mov jmp movb pushl mov movl mov mov push pushl pusha pushf pushl ret jmp stc cmp mov add clc call pushf mov mov jmp mov call call not jmp dec rol mov call bts mov push test pusha call add lea jle mov push lea jmp pushf rep bswap rol neg cld mov pop shl std pop mov stc movb call pushf mov mov pushl push lea jmp movw stc lea pushf jmp cmc neg mov stc clc add pusha add jmp movzbw add sbb mov pusha jmp push mov pusha pushf popl movb push push pushl pushl popl push push movw push lea jmp pushl popl push mov push lea jmp stc add clc cmp stc add jmp pusha mov mov jmp add jmp inc neg mov and or stc mov push bt add call push push mov push movb pushf lea jmp call jmp push jmp mov mov movw mov lea jmp call jmp xchg pushf clc bt xor jmp lea push pushf lea jmp call movzbl bt test add pushf jmp mov movw mov call pusha mov movw jmp bt clc or call lahf shrd shld mov cmp sub push pusha pusha call xor clc add clc cmp mov sub push mov mov lea jmp pushf mov pusha movl pushf pushl ret cmp add movb pushf jmp push pushf movw idivl call pushl popl push movb movw push lea jmp mov pushl mov push pushl pushf popl push call pushf pushf mov pushl push pushf lea jmp dec shr inc add not dec add rcl (bad) mulb push add add pusha mov pushf movb push lea jmp pushl popl movl movw lea jmp push pushl mov lea lea movzbw bswap push repz popl bts push rcr call pusha mov mov pushf lea jmp stc clc clc sub stc bt xchg pusha mov cmc jmp pusha mov test pushf call bt mov cmc stc bt neg mov clc cmc not pushf not stc pusha clc cmp and push jmp stc xor call jmp pushf bt add pushf call pushf bswap movsbl bswap mov pushf movsbw lahf movsbw mov jmp clc sub mov pushf jmp shr jmp jmp pushf mov push lea jmp mov cmc shrd call pop inc or and add adc btc pushf mov cmc cmp sub call shl lahf not mov (bad) repnz xor mov (bad) icebp shl test or mov stc jmp pushf mov pushf push lea jmp add jmp sub jmp mov pushf mov pushf push pushl ret push lea pusha jmp lea jnp pushf push pushl push pushl pushl popl pushl lea jmp push btr push btr mov movzbw push jmp mov pushf pushl jmp sar pushf or mov add bsr add push sete inc ror xor mov jmp pushf push pusha mov inc jmp shld notl shl mov bt cmp cmc sub push cmp mov pushf and call sub add mov (bad) repnz mov jmp xchg pushf xor pusha ror stc bt pushf lea cmc push clc cmc xor call cwtl cmc sub jmp jmp pushf pushf popl call movw jmp test shl cmp cmp bt shr bt clc bt cmc or cmc jmp movzbl test add pushf dec pushf pushf ror cmp bt clc neg pusha jmp pushl popl movw pushf lea jmp push bt add pushf jmp div mov mov pushf movl mov pusha pushf popl jmp mov push call bswap cmc bt popf pushf pop jmp shl jmp mov movw mov pushf lea jmp rdtsc mov sar and or mov cmc jle bt pushf sub jmp add xchg or mov push add incb add sbb add incb add add add in pop add roll add jge add jns add and or aas or jbe add cld or or mov add dec pop add sbb add push or in or jbe add clc push add sbb add and push add and add cld or roll add pop push add fimull add and push add sbb add xchg push add jbe add insl push add in or lods or addb loop or inc push add mov add xchg or sbb add dec pop add sbb add jbe add xor add cld or or cld or lret or insb push add cld or lock add fisttpl add xchg or insb push add xchg push add enter roll ret add mov add lock add movsl or aaa push add movsl or lock add fimull add jecxz add push push add mov or mov add inc push add in pop add lods or mov or testl add mov add mov add mov pop add push or lret or mov push add jns add or add add or add inc push add clc push add movl add and add lret or and or lret or sbb add jns add enter dec pop add and or push push add movsl or clc push add lea add pop push add and or or push add movl add testl add roll add aaa push add sbb add mov add in pop add or or orl add or lcall (bad) cld or aaa or or push pop add and add lcall and or addb inc pop or push push add rorb (bad) inc push add sbb add and or inc or or aas or jbe add mov or jbe add and or sbb add rorb inc addb loop push add lret or sbb add push push add lret or mov add add add incb add inc or fisttpl add orl ret add push push add insl push add mov push add mov push add jge add jns add mov pop add lcall mov in or push pop add enter in pop add aaa push add xchg push add lods or mov push add clc push add jns add orl loop or clc push add in or cld or in pop add or add roll add xchg push add rorb and or fimull add dec pop add jecxz add inc push add inc push add rorb add pop add aaa or lea add lea add xor add inc or aaa push add fildl add inc push add mov add enter fimull add fimull add mov or in or xchg or jns add insb push add inc push add and add pushw add incb add and add and push add mov or lret or clc push add lods or jns add clc push add lock pushf jmp setns movzbl pusha mov bt rol test add pusha mov mov mov mov push pushl ret jmp mov jmp pushl pushf pushl popl push push push lea jmp pushf mov pushf pusha lea jmp clc and jmp movsbw shrd pusha or mov sar test inc mov bt mov sub cmc pushf call inc stc clc call movb stc sub call jmp bts mov sub daa sbb aam mov cmp sub push cmc pusha stc imul call mov mov pushf mov pushf pushf lea jmp pushl pusha pushl pushf popl jmp bswap mov pushf mov mov pushl call lea pushl pushf mov mov std bswap bswap mov movb jmp mov dec push movb push push lea jmp adc mov call mov sbb bsr add add shrd cmp bswap shl mov pusha shrd sub bswap not adc ror shl bts neg pushl cmp shrd xor call pushl call call call call mov pushf movb pushf mov lea jmp pusha jmp add pusha call pushf lea jne pusha call mov mov movb pushf push mov lea jmp jmp setbe shl mov cmp jmp push mov mov push pushl pusha pushf pushl ret and movw pushf mov jmp pushf popl jmp jmp cmc stc mov stc stc sub pushf mov pusha pusha push lea jmp movb push jmp not and not stc dec dec sub jmp jmp pusha pusha pushl popl mov lea jmp call pusha mov movb lea jmp pusha mov push pusha lea jmp pushf call sbb lea cmp cmp jmp jmp xor pusha pushl push xchg push movl mov call movsbw pushf mov jmp xor rol sbb clc mov mov setns add pushf ror cmc ror shr call call pusha lea cpuid pushf sub pusha cmpl movb pushf call stc rcr das movzww stc clc bt jmp mov push pushf popl pushf mov jmp movb mov pushf pushf popl movb call pusha mov pushl movb pusha lea jmp rol movzbl setle btr mov push cmc rol cmp sub jg push add jmp mov pushl popl movb pushf pushf movb lea jmp daa daa mov call pushl popl pushf pushf pushf lea jmp pushf pushf jmp jmp cmp sub pushf pushf pushf pushf mov mov lea jmp jmp pushl popf movb movb mov lea jmp sub pusha lea jne jmp push mov movb lea jmp mov pusha jmp daa pop rol xadd pop bsr rdtsc pop xadd not pop bsf dec pop shl jmp call mov shr clc shl mov call adc mov bt push bt sub clc pushf add movl call pushf push add mov call pusha movb pushf popl call call mov push pushl lea jmp cmc mov btr movsbw mov stc pusha push add call mov pusha pusha lea jmp mov pushl lea jmp mov push mov jmp movsbw mov jmp call pushf mov pusha push push pushf lea jmp pushl popl mov lea jmp mov pusha push mov pushf lea jmp movb not stc cmp add stc test movb call rcr ror mov pusha push pushl stc sub stc add push pushf popl push jmp movb movb pushf popl movb call pusha pushf cmp pusha pushf jmp mov pushf jmp rol neg mov shl inc stc pushf add call pushf lea jnp push pusha pushl push lea jmp imul jmp sub btr jl mov push adc mov stc add movw jmp shrd bts pusha movzbl movb bt add not sub bts ror inc inc adc and pusha add pop movsbw inc movsbw mov jmp push pushf jmp cmc sub bt push shr movw mov push mov jmp rcl rcl mov rcl pop das not jmp mov pushf popl call pusha mov mov movl lea jmp pusha pushf popl call movsbw push call jmp jmp rcr setns sar mov add ror mov add jmp add pushf pushf popl pushf pushl popl pushf pushl lea jmp test not jmp movzbw pop sbb movzbl cmp clc and xor add pusha adc sub movsbw movsbw rcl ror lea jmp bts call cmp aad mov adc adc daa mov jmp dec push movb lea js inc push pushf call mov pushl pusha jmp movb mov movw movl pushl pushl lea jmp jmp jmp mov mov pusha push push lea jmp push jmp bswap mov pushf pop mov pushf mov jmp pusha lea jne pusha sar xorb lea not movzbw call mov jmp call mov pushf clc call call mov call pusha mov jmp das cwtl sub bsr and clc ror lea jmp call jmp pushf mov bt rol xchg push movsbw bswap push pushl popl btr xchg stc push not rcr rcr rcl mov mov call cmp pushf call mov pushl jmp mov pushf jmp not cmp add clc lea jno add jmp bt not mov stc xor stc test clc cwtl pushl jmp jmp bt push mov stc cmc cmc mov sub pushf pushl pushl call pushf popl call push mov movb pushf lea jmp push mov call inc btr cmp mov jmp add add dec shl mov push pusha mov add pushf jmp mov push pushf add call pushl popl pushl lea jmp add mov clc call jmp push ror lea pop dec pusha rol xor or bswap lea shr call pushl mov movb lea jmp call push pushl popl mov pushl lea jmp pushf sub push push call pushf pushf mov mov jmp bt sub pusha shl pushf call (bad) icebp add cltd rorb adc (bad) lcall sar cmp add imul decl test test sub pusha push call (bad) testb mov cmp setp movzbw mov test add pusha pushl mov pushf mov movb push lea jmp cmp add cmc call mov pushl push pusha mov pushl pushf movb lea jmp jmp pushf lea jmp mov pusha pushf popl bswap mov bswap pusha mov lea lea jmp mov pusha lea jmp pushf not bt add test clc push test sub jmp push pusha pushf pushl popl mov stc cmc add cld bt stc pushl popf pushf push lea jmp stc cmp jmp pushl mov pushf pushf pushf popl push push pushf pushl popl push lea jmp pusha push push movb sub pushf call call jmp clc lea jno and stc jne cmp jmp mov pusha pushf push pushf lea jmp mov push pusha mov lea jmp jmp mov jmp jmp pusha mul call mov mov push pushf movb pushf lea jmp push pushf mov pushf pushl call mov mov cwtl setbe mov pushf push divl call rcl mov clc not btr dec add bsf btc sub or mov call mov jmp jmp mov call jmp mov call pusha mov pushf push pushf lea jmp shrd rol pop sub neg and popf bswap pushf mov pushf mov pushl ret push bswap clc add cmp add cmc bt sub stc ror jmp jmp pushf popl jmp bt btr cmp mov sar rol clc rcl mov bsf or bsf or mov bt sub push mov call neg inc movb not push dec (bad) repnz ret bswap call pushf mov sar mov pushf neg sub js cld pop jmp pushf push lea je jmp cbtw call push push mov pushf pushf pusha lea jmp add add add lock add adc add js add mov add and add mov add mov add roll add adc add cmp add jnp add in add and add dec or orb add or sub add imul add or xor add pop or cwtl or lret or or add dec or js add stos or or or add add cwtl or add or add or add or add imul add or add pop push add mov add mov push add cmp add xchg add rorl add add add and add inc adc (bad) adc fsts add sbb add dec adc adcb add adc and add pop adc mov add cli adc inc adc jp add iret adc cmp add adc add adc add rcll add push push add ds .byte .byte sub 