movl jmp int3 int3 int3 int3 push mov push mov movl call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov mov mov movb pop ret push mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret call test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor cmpl setg ret int3 int3 int3 int3 int3 int3 push mov mov push call neg sbb inc pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call neg sbb inc pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call mov ret int3 int3 int3 int3 int3 int3 int3 call mov ret int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov push call add mov movl test je mov mov push push mov call jmp xor push lea movl call lea push mov movl call lea movl call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov push call add mov movl test je mov push push mov call jmp xor push lea movl call lea push mov movl call lea movl call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push mov call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 call xor cmp sete ret int3 int3 push mov mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret cmpl lea jb mov ret int3 int3 int3 int3 push mov push mov mov mov push cmp jae push call mov sub cmp jae mov test je mov push cmp jb mov jmp mov cmp jb mov jmp mov sub add push add add push push call mov add sub cmpl mov pop jb mov movb pop mov pop pop ret mov movb pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov mov or cmp jbe mov jmp mov mov mul mov shr shr cmp jbe mov sub lea cmp jbe mov xor lea mov cmp jbe cmp ja push call add test je mov jmp lea push lea movl call push lea push movl call mov mov mov inc mov push add movb call mov mov ret mov mov mov test je cmpl jb mov jmp mov push push mov push call add cmpl jb mov push call add mov movb mov mov mov cmp jb mov movb mov mov pop pop pop pop mov pop ret mov cmpl jb mov push call add push movl movl push movb call int3 int3 int3 int3 int3 int3 push mov cmpl jb mov push call add movl movl movb pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov cmp jbe push call mov cmp jae mov push push call xor cmp sbb pop neg pop pop ret cmpb je cmp jae push mov cmp jae mov cmp jb mov test je push push push call add push call mov add mov movl xor movb cmp pop sbb pop neg pop pop ret test jne mov cmp jb mov movb xor cmp sbb pop neg pop pop ret int3 int3 int3 int3 push mov push mov push mov mov push mov cmp jae push call mov sub cmp jae mov cmp jne push add push mov call push push mov call pop mov pop pop pop ret cmp jbe push call mov cmp jae mov push push mov call mov test je mov cmp jb mov cmp jb mov jmp test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov push add push push call add cmpl mov jb mov movb pop mov pop pop pop ret mov movb pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov test je mov cmp jb mov jmp mov cmp jb cmp jb mov jmp mov mov add cmp jbe cmp jb mov mov push sub push push mov call pop pop pop ret mov mov push sub push push mov call pop pop pop ret push mov cmp jbe push call mov cmp jae mov push push mov call test je cmpl jb mov jmp test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov push push push call add cmpl mov jb mov movb pop mov pop pop pop ret mov movb pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push mov push movl movl push movb call mov pop pop ret int3 int3 int3 int3 int3 push mov push push mov xor push add push push movl mov mov mov mov call mov pop mov pop ret push mov push push mov push push push push mov xor push lea mov mov mov mov push call movl mov xor mov push lea push add movl mov push mov mov call mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov push movl movl movb lea mov inc test jne sub push push mov call pop mov pop pop ret int3 int3 int3 int3 int3 int3 push mov mov push push mov push add push lea call mov pop pop ret push mov push push mov push mov call mov push push add push lea mov call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov mov movl mov mov lea push movl call push lea movb call push lea movb call test lea sete movb call test je sub mov mov push push lea mov mov movl push movb call sub mov mov push mov movl push movb movb call push movb call mov movb call lea movl movb call cmpl jb mov push jmp lea push mov call lea movl movb call cmpl jb mov push call add mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov lea mov push push push call add pop ret int3 int3 int3 push mov mov mov push mov push cmp jb mov cmp jne sub add add cmp jae test je movzbl movzbl sub jne cmp jbe movzbl movzbl sub jne cmp jbe movzbl movzbl sub jne cmp jbe movzbl movzbl sub sar pop or pop pop ret pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je call test je mov mov mov push call ret int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov mov mov mov mov pop ret movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov mov mov call lea movl call lea movb call mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov mov mov lea movl call lea movb call mov movl call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov mov mov push call lea push lea movl call add push lea movb call mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov call lea push lea call add push lea call pop mov pop pop ret push mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov movzwl mov mov push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov incl mov mov call cmp jle mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov add mov mov mov call cmp jle mov mov mov call mov mov pop pop ret int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov call mov mov mov mov pop pop ret int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 mov movl ret int3 int3 int3 int3 int3 push mov push mov push mov test je mov push push lea push push push call test je push call add mov pop pop pop pop ret movl test je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov movl mov push mov movl call mov push mov movl movl call mov push mov call mov push mov call mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov movl lea movl xor call cmp jbe push lea call cmpw jne push lea call mov mov push lea call cmpw jne push lea call mov mov push lea call cmpw jne push lea call mov mov push lea call cmpw jne push lea call mov mov lea inc call cmp jb mov lea push mov call lea movl movb call mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 mov cmpl jb mov ret int3 int3 int3 int3 int3 mov lea cmp jne mov push mov mov mov mov mov sub mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov cmpb jne nop mov mov cmpb je pop ret int3 int3 int3 push mov mov mov cmpb jne mov mov mov cmpb je pop ret int3 int3 int3 int3 push mov mov mov cmpb jne nop mov mov cmpb je pop ret int3 int3 int3 mov mov cmpb jne mov cmpb jne mov cmpb jne jmp lea mov mov cmpb je mov ret mov cmpb jne mov cmp jne mov mov cmpb je mov ret int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov push lea call mov mov mov cmpl movl jne push lea call cmpl jne mov incl mov mov mov lea call mov mov mov cmp jae mov mov test jne cmpb je call cmp jae mov mov test jne mov test jne lea push push call add cmp jne push lea call push lea push call xor jmp mov mov mov mov call push call add lea movl call mov mov mov pop pop pop pop mov pop ret push mov push push mov push sub push push push mov xor push lea mov mov push lea call mov mov mov cmpl movl jne push lea call cmpl jne mov incl mov mov mov lea call mov mov mov cmp jae mov mov test jne cmpb je call cmp jae mov mov test jne mov test jne lea push push call add cmp jne push lea call push lea push call xor jmp mov mov mov mov call push call add lea movl call mov mov mov pop pop pop pop mov pop ret push mov mov push push push mov cmp jae push call mov sub cmp jae mov mov mov cmp jb mov cmpl jb mov jmp mov mov push push add push call add test jne cmp jae pop pop or pop pop ret xor cmp setne pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov test jne mov cmp jae pop mov pop mov pop ret push cmp ja mov sub cmp jae mov cmpl jb mov jmp mov lea mov movzwl mov mov cmp jne mov mov mov test je lea mov cmp jne add add dec jne mov cmpl jb mov mov pop sub pop sar pop mov pop ret sbb and inc je mov mov call cmp je sub jmp mov mov pop sub pop sar pop mov pop ret or pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor cmpl mov jb mov mov pop ret int3 int3 int3 int3 int3 mov push call pop ret int3 int3 int3 int3 int3 push mov mov movsbl push push call xor add cmp setne pop ret int3 mov test je push call pop ret mov test je push call pop ret push mov mov mov test je mov mov mov add cmp jae movzbl pop ret mov mov push mov call mov cmp jne pop or pop ret mov mov push mov call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl je mov mov push call cmp je mov push call add test jns or pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea cmp je mov mov mov push mov add pop mov mov mov mov mov sub mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov mov test je mov cmp jae cmp je movzbl cmp jne mov incl mov decl lea neg sbb pop and pop pop ret mov test je cmp je cmpl jne push movzbl push call add cmp jne mov lea cmp je mov mov call pop mov pop pop ret pop or pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push test je mov mov test jne mov or jne mov jmp xor push push push push call add test jne mov mov movb mov call test je lea mov mov lea mov mov mov mov mov mov pop mov movl mov pop pop ret pop xor pop pop ret int3 int3 int3 int3 int3 int3 push mov mov push push push mov call mov add mov call test je pop movl pop pop ret mov mov call pop pop pop ret int3 push mov push push mov push push push push mov xor push lea mov mov xor cmp jne mov mov mov push push push call mov add cmp je mov movb mov call lea mov mov lea lea mov mov mov mov mov mov push mov mov mov call push mov call mov add mov call test je mov jmp mov mov call mov movl cmp je call cmp je mov mov mov push call mov mov mov pop pop pop pop mov pop ret xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov cmp jne cmpl jb mov mov mov mov pop ret cmpl jb mov add push movsbl push push call add pop ret int3 int3 push mov mov mov push mov mov mov cmpb jne mov mov mov mov pop cmp jne mov mov mov pop ret mov cmp jne mov mov mov pop ret mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov cmpb jne mov mov mov mov pop cmp jne mov mov mov pop ret mov cmp jne mov mov mov pop ret mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov cmpb jne mov mov mov mov pop cmp jne mov mov mov pop ret mov cmp jne mov mov mov pop ret mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmpl mov jb mov push mov push mov push push call xor test sets pop ret int3 int3 int3 int3 push mov sub mov push mov cmpb mov jne mov mov push mov push mov jmp mov cmpl lea jb mov mov mov cmp jae mov cmp jb mov cmpl jb mov push push push call add test jne cmp jb cmp setne test jns mov jmp mov mov cmpb je mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmpl movl jb mov push mov push push call add mov pop mov pop ret int3 int3 int3 int3 push mov cmpl jb mov push call add xor movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl jb mov push call add movl movl movb cmpl jb mov push call add movl movl movb pop ret int3 int3 int3 int3 int3 push mov push mov push mov mov or sub cmp ja push call test je push lea cmp jbe push call mov cmp jae push push mov call test je mov mov push push push mov call cmpl mov jb mov movb pop mov pop pop pop ret test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov movb pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov mov xor mov movb mov cmp je mov mov call push mov mov call mov mov mov test je mov lea push mov add call push movb call mov add mov mov cmp je call cmp je mov mov mov push call mov push push call mov mov mov mov movb cmp jl jg cmp jbe mov cmp jae mov mov jmp mov mov call nop test je cmp jne or mov jmp mov mov movzbl testb jne mov push push call mov mov mov mov sub call jmp mov mov mov mov push push add call mov mov ret mov xor cmpb mov mov mov mov jne orl mov mov push push mov add call mov mov mov mov movl cmp je mov mov call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov xor mov mov lea cmp je mov movb cmp je push mov call add mov mov add jmp mov mov cmp je mov call add cmp jne xor push push call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov xor cmp je mov mov mov mov add cmp jae mov decl mov mov lea mov movzbl jmp cmp je mov mov lea cmp jne mov mov push push push mov call cmp jne mov push call add cmp je movzbl jmp movl mov movb mov mov push mov call add cmp je lea push push lea call mov mov mov cmp jae lea mov add lea push lea push lea push lea push push mov push push call test js cmp jle cmp jne cmpl jb cmpl mov jae lea push push lea push push call movzbl add lea call mov jmp lea cmp jne cmpl mov jae lea mov sub push push lea call mov push call add cmp jne lea call or mov mov pop pop pop pop mov xor call mov pop ret cmpl mov jae lea sub add test jle mov mov mov movsbl dec push push call add test jg movzbl lea call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov cmpl je cmpb je mov mov push call cmp je mov xor movb mov mov mov movl cmp jae lea movb movl lea mov mov mov cmp jae lea mov add lea push push mov push push call sub je dec je sub lea jne jmp movb mov mov mov cmp jae lea mov sub je cmp jae lea mov push push push push call add cmp jne mov mov cmpb je test jne push push lea call jmp lea call xor jmp lea call mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov xor mov movl mov mov mov push push push mov call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov cmp jne xor jmp mov mov test je mov mov add cmp jae decl mov mov lea mov mov mov jmp cmpl je mov lea cmp jne mov mov push push push mov call cmpl jne mov movsbl push push call add cmp je mov jmp mov xor movb mov mov mov mov movl cmp jae lea movb movl lea mov mov mov cmp jae lea mov add lea push push push lea push lea push mov lea push push call test js cmp jg mov mov mov cmp jae lea mov sub je cmp jae lea mov push push push push call add cmp jne mov mov lea movb cmp jne test jne cmpl lea jae push push call jmp in inc mov mov call ja (bad) incl je mov lea call mov jmp lea or call mov jmp lea call mov jmp lea call or mov mov pop pop pop pop mov xor call mov pop ret int3 inc mov dec xor push add add nop mov sub mov mov and or or mov mov mov jmp cmpl je mov call test je mov or jne cmpl je mov mov push push push push call add test jne mov lea push push call add add dec adc jne mov mov mov mov mov mov sub mov mov mov mov pop mov mov pop movl movl mov mov pop pop ret mov mov mov mov pop mov xor pop mov mov mov mov pop pop add jmp push mov sub mov push mov push mov mov xor push mov mov mov cmp je mov call test je mov lea push push call add test jne mov or je mov push push push push add add call mov lea push push call add test jne mov mov mov call add dec jmp or add add add inc add add add mov inc and mov sub pop xor call xor xor dec add push or or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je cmpl jb mov push call add movl movl movb cmpl jae mov inc push push push call add jmp mov mov movl mov mov call adc inc adc add add inc adc add add (bad) pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov mov cmp je cmpl jb mov push call add xor movl lret call add push cmpl jae mov lea push push push call add jmp mov mov movl mov mov mov mov movl movl pop mov pop pop ret add add int3 int3 int3 push push mov xor push mov cmp je call test jne xor mov push call add test je xor mov mov mov xor adc lock pop mov mov pop pop ret int3 push mov push mov push mov cmp je nop mov call add cmp jne call add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmpl jb mov push call add movl movl movb pop pop ret int3 jmp in push push mov push push push mov xor push lea mov mov xor mov mov mov push mov mov xor push dec mov xor mov mov call call cmpl jb mov push call add mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push inc jmp jb mov cmpl jb mov push call add xor movl mov push mov call add push call mov inc mov mov mov mov xor cmp jne mov mov mov mov mov jmp cmp je mov mov cmp jne mov jmp mov mov cmp jne push dec cmp call sub test fs mov mov cmp jne mov cmp jne movb movb mov mov mov mov mov jmp cmp jne mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov push cmp inc cmp sub or xor mov and xor mov push mov inc push mov mov inc dec jmp or lret add add or mov mov jmp mov mov jmp mov cmp jne movb movb mov mov test add add add add mov mov mov mov mov cmp jne mov mov mov mov pop jmp push add jnp or mov jmp mov mov mov mov movb mov mov mov mov mov mov mov mov mov cmp jne mov mov mov push dec or dec push mov or mov jmp mov mov mov mov mov cmp je mov mov mov mov pop pop movb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl push push call lea call test jne xor mov push call add test je xor lea movb movb call xor mov mov mov mov cmp jne mov mov push push add call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push call add push mov xor push lea mov mov mov movl cmpl movl je mov lea cmp jne mov mov mov mov mov mov sub mov cmpb adc add call mov movl call add add mov add inc mov dec pop jmp push mov push push mov push push push mov xor push lea mov mov mov mov mov lea movl movl movb mov movl test je push push call mov mov add imul sbb add (bad) je movl mov mov pop pop mov pop add call mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov mov mov movl cmpl movl je mov lea cmp jne mov mov mov mov mov mov sub push add add je mov call mov movl call testb je push call add mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push or push mov push cmp dec inc mov push inc mov mov add xor add push jmp adc adc mov sub sar cmp jae lea push mov call mov mov push push mov mov push push push push mov movl js int add inc push call rol add cld (bad) (bad) (bad) decl je mov cmp je mov call add cmp jne mov push call mov mov add mov lea lea mov mov mov mov mov pop pop pop pop mov pop ret mov mov mov mov call add int3 int3 int3 int3 int3 int3 push mov sub push mov cmpb push push mov je push call lea mov call mov cmpb je mov jmp mov push call mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp push call mov add mov mov add mov mov inc inc or call mov jmp push call mov add mov jmp mov mov mov xor mov inc sub cmp add inc xor call or cld mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov mov cmp jne mov mov cmp je jmp lea cmp jne mov cmp jne mov cmpb jne mov push movb call mov xchg add push cmp add mov call pop sub push or pop sub mov mov bound add add sub add mov mov mov mov mov mov push mov call jmp cmpb jne mov push movb call mov mov cmpb jne mov cmp jne mov cmp jne movb mov mov mov cmp jne inc add call adc pop sub inc sub call mov mov mov jp add pop sub sub cwtl int3 add mov mov cmpl pop pop pop jb mov push call add mov movl movl push movb call mov mov add test je dec mov mov mov mov mov pop ret int3 int3 int3 push mov push push mov cmpb push mov mov jne mov mov mov dec cmp jmp mov push call add movl movl push movb call add cmpb mov je pop pop pop pop ret int3 int3 int3 add add and xor inc dec mov dec call add cmp jb mov push call add mov mov movl movb cmp jb mov push call add mov movl push movb call add push call mov jmp mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov cmpb mov mov jne mov mov jmp add add inc add test inc or mov mov mov mov mov cmpb jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov movb mov mov mov mov mov mov cmpb jne mov or dec call add push add or or int add mov cmp jne mov dec mov or mov mov dec xor mov sub jmp pop inc mov mov movb mov mov jmp cmp jne mov mov mov mov mov cmpb jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov pop dec mov dec mov add pop add call add jb mov mov mov cmpb jne mov mov mov mov cmp jmp jmp mov cmp jne mov jmp mov mov mov mov mov cmpb je mov mov push add add pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov mov mov push push (bad) jb add xchg add add call cmp je lea sub jmp mov xor xor cmp jl test jle push push lea push mov call mov push movl call mov movl cmp jb push push jmp add add dec push push lea push mov call mov push movl call cmp jb mov push call add mov jmp mov call inc adc add add mov xor mov mov mov mov xor mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je push mov cmp je mov call add cmp jne mov push call add pop xor pop mov out mov add out sbb or add add push call je push mov cmp je lea push mov call add mov dec jmp mov mov mov cmp je mov mov call add cmp jne mov mov pop pop pop or inc mov dec add cmp call adc add add in or mov xor push lea mov mov mov xor mov cmp je movl mov add inc mov inc inc mov mov dec call adc iret call mov mov movl mov movl mov call xor mov movb movl mov mov call or mov call mov movl clc sub call push or push push mov movb call into shr adc add mov push add call mov mov cmp mov add mov add nop dec call push mov push push mov push sub push mov xor push lea mov mov mov mov movl lea movl mov movl cmpl movb je mov lea xor daa add add add add mov mov sub mov cmpb je mov call mov movb call mov mov dec push add add call mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov mov mov push mov push sub mov sar sub cmp jae push call pop call (bad) sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push call add and add int3 int3 push mov push push push push mov cmpb mov je push call lea call mov push nop xor and dec xor sub push call mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp push call mov add mov mov mov cmp jne cmpb je mov mov mov jmp push call mov mov inc dec inc or xor push push dec inc mov add or sub mov sub inc cmp call mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov cmpb jne mov cmp je cmpb jne mov cmp jne mov jmp adc inc inc add inc inc add ret loopne decl cld cmpb jne mov cmpb jne mov cmpb je mov cmpb jne mov movb push movb call mov mov mov mov movb dec jmp inc add insb loopne (bad) jmp cmpb jne movb push movb call mov mov cmpb jne mov cmpb call jp add movb mov mov mov cmp jne jmp mov cmpb jne mov movb push movb call mov mov mov mov movb mov push movb call movb cmpl jb mov push call add xor mov mov mov movb cmpl jb mov jmp add add mov mov push movb call mov mov add pop cmp pop pop jbe dec mov mov mov mov mov pop ret int3 int3 int3 int3 push mov push push push mov xor push mov mov cmp jne mov mov push call cmpl dec nop add mov mov mov call cmp add add sub or push or call add movl mov push mov call add mov cmp je pop pop pop mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov push mov cmpb push push mov mov mov mov jne mov mov mov mov mov add add mov inc call adc mov jmp add mov mov cmp jae mov mov cmp jb mov cmpl jb mov push push push call add test jne cmp jae or test setns jmp xor cmp (bad) mov add add and mov call mov mov cmp jae mov mov cmp jb mov cmpl mov jb mov jmp add push push push call add test jne cmp jae or jmp xor cmp setne test sets mov test je mov jmp mov cmpb mov je mov mov mov mov test je mov cmp or add jmp jbe (bad) decl pop pop mov movb pop mov pop ret lea call mov mov cmpl lea mov lea jb mov jmp pop add add push push push call test jns mov mov push push push mov jmp mov add push push call mov push call mov add pop mov pop movb pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov add push mov xor push lea mov mov mov push call mov xor add mov cmp je mov mov mov mov mov mov lea mov mov mov dec cmp push add dec nop add add call sldt add add popf (bad) (bad) decl mov pop pop pop pop mov pop ret mov push call add xor push push call lea inc add add cld push add push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea mov call mov mov mov push jmp push add add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push lea lea mov call mov mov mov push mov call add testb je push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov jmp jne cmp sbb add call add inc add inc add add or or inc or add add mov pop ret cmp je cmpb mov jne mov cmpb jne mov mov cmpb jne jmp lea mov mov cmpb je mov xor add add push mov push mov push push xor test je mov mov sub mov cmp jb cmp ja cmp jbe cmp jb mov cmp jae cmp je movzbl movzbl add cmp jmp cmp je movzbl movzbl sub cmp jmp cmp jne inc inc cmp jb pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov mov xor cmp je lea inc cmpb jne inc push mov push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov mov mov mov mov mov movl mov mov mov mov mov test je cmpl je lea mov xor cmp je lea inc cmpw jne lea push push push call add test jne mov cmp jne pop pop mov pop ret pop mov pop mov pop ret mov test je mov test je mov cmp je mov mov test jne pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push call add test je mov pop ret xor pop ret int3 int3 push mov sub push mov test je mov test jne cmp jne xor pop mov pop ret mov mov cmp jne cmpl jne mov mov test je push push mov mov mov add add mov mov add mov mov add shr mov test je xor cmp jbe jmp mov mov mov add push push call add test jne inc cmp jb pop pop pop mov pop ret mov movzwl mov mov add cmp jbe add cmp jae xor pop pop pop mov pop ret int3 push mov sub push xor mov mov mov mov mov lea push mov push movl mov movl movl movl movl call push push lea push push lea push movl movl movl movl movl movw movb call add mov call lea push push lea mov push lea push push movl call pop xor pop mov pop ret int3 int3 int3 push mov call pop mov pop ret add add in sub call mov add mov mov add xor inc loopne add push pushf sub cmc les call das dec mov mov jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add lods cmp dec pop jl cmp scas mov inc in xchg add mov cld ss push loopne test (bad) je pop cli add and (bad) adc fsubrl in dec movsl fst add xchg out ficoml inc jg test sub int iret cmp jbe outsl cmp sub dec aad sbb call scas cmp pop out add push in add push loop decl adc outsb cld mov cmpsb xor mov outsb sti adcl xor sub push xchg xor test mov out (bad) adc repnz mov jle lcall jl cwtl cmpsb mov rcrb or sbb js test mov int3 pop call mov je sbbb cmp push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add and stos cwtl movsb push loop out mov test (bad) push loopne cld mov cmpsb xor push fisubr push movsb xor dec fmull clc xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc mov ds ljmp clc adc int3 xchg pushf test fstp in pop sbb or insl fidivrl push addr16 adc xlat cld scas cmp sbb sub std lea in cmp push and cwtl push mov mov adc test or dec push daa sbb inc dec nop fimull jmp mov fldpi mov aaa sub fs add ljmp in jle ds out dec xchg mov call in test push cs jb (bad) lock push or jne adc mov sub imul into push loop mov jl loopne cld aam inc imul fstpl mov lea fldcw add dec xlat loope adcl stos insb jns (bad) fwait sub into lcallw pusha out sub (bad) pop js fmull push popa push jne leave and fist and mov lock add pop lods mov (bad) ljmp mov dec fucomp ret loopne jns pop and ret push fsubp add xchg dec fsubrl enter (bad) ja sbb fisttpl out loop cmp xchg mov cmp aad lock or rcrb ds cwtl push cmpsb adc or outsl sub lea jae int fnstcw enter mulb repz xchg push lods mov outsb out jb add loopne out lods mov (bad) dec daa sbb mov cli or lods add lret sub mov xor cwtl in mov mov adc or pop xchg (bad) xlat (bad) lock ret js insl fwait jp les mov fstpl xlat mov mov or jg mov pop ljmp int3 push movsb dec push push scas outsl in test mov (bad) fisttp mov loopne ja adc aas inc xchg shr add jbe push pop sub jb or test xor (bad) adc sub mov mov xchg push (bad) mov push jl daa cmp aas cmpsl lea add (bad) notb js lods fs das xchg and sbb scas cmp pushf loop pop mov or repnz mov insb jmp out je adc dec dec push enter orb add push (bad) movsl inc xchg pop pop lret outsb push dec (bad) adc sub in mov lea out out scas cmc jmp ljmp mov push data16 cmp push mov js pop out popa xchg imul insl mov (bad) imul push add in fbstp mov in je,pt mov insb cli or mov pop sti sqrtps test push and mov ret in mov mov (bad) xor and and mov fwait mov push out or test comiss xchg mov popf jae test pop fiaddl mov in push fxtract pop ds push popa mov roll mov into incl sub insb lods fadds jmp dec fsubr cmp dec stc outsb xor mov mov in jnp sbb mov push pushf test scas cmc jmp push out jl (bad) lods push pop adc and jae jno (bad) scas cmp imul std call mov insl ret ficoml inc les or xlat sbb jl jae arpl or iret in xor (bad) decb inc bound clc xchg fidivrl jnp xchg les mov adc repnz push cmpsb cld std hlt cwtl pop mov xchg push and gs sbb adc (bad) ja enter xrelease enter jno cmp mov xchg les cmp push loop movsl roll cltd xchg cltd dec movsb or cmp pop dec fstpl aad clc aad xchg lock mov push or mov aaa xchg or ds stos orl aam gs repnz faddl imul mov inc pop in jp push dec mov into pop mov dec rcrl fist mov inc jbe cmp push mov test cmpsl test mov test dec mov cmc insl ret push push sbb add push out jl pop popa call mov mov xor cld lods add (bad) dec shrb adcl push movsb (bad) stc lret ljmp add mov jne and repz fist and pop imul (bad) mov cs fcoml or movsb mov icebp fsub or insb jno into sub clc (bad) jle pop scas sbb cli enter mov jns cld int3 jnp mov add fsubrl lock addl xchg cwtl mov xchg inc rcrb jp jle out inc into fildll je xchg scas std ret add push inc int mov outsl je push js sub push and sahf add pop or wrmsr pop lret cmp dec xchg mov aas mov push xchg daa add and stos mov pop sahf jmp jo fwait or jg call lcall jl cltd dec mov test (bad) pop jb or pop pop push fisubl ja js call push jg sub insb lods dec enter mov incl mov in (bad) mov iret aam xor push sbb sub push lret (bad) cltd mov xor or mov cmpsb push les jg dec mov xor shrl cmp bound push jp cltd es xchg pop sub test xchg loopne dec jl xchg (bad) lret int gs inc nop (bad) push ret dec pushf loop ljmp int3 (bad) pushl bound scas ljmp xchg rcrl cmpsb aaa add (bad) outsb clc mov and ret mov mov push jle mov jecxz idivb popa bound pop sub call lret inc inc or repz xchg enter jo mov (bad) lea repz pop je xchg sbb pop es jp idivl (bad) hlt push lods mov test sbb push popl add pop jno,pt xor cmp mov daa not ret dec inc push jns lock inc push and dec push loopne mov sahf inc mov fs ja xor xchg adc sub js cwtl push mov mov cld and test or js nop dec mov int3 pop xorb and cmp shll or push in les push loop ja mov fdivrp mov and int jbe cli mov fdivrl adc sbb push or jmp add sub mov lea cmp and jle pop stos push scas test cli push xchg es loopne (bad) ljmp jp (bad) mov inc popa std sub and je sbb mov push data16 cmp xlat es bndldx outsb cld bound adc dec or cmp mov test and lods adc adc repnz mov and mov mov sbb cs pop sbb push mov mov dec movsl out mov and test ja les mov cs push loop inc mov test les in cld mov sub insb test rorb clc xchg es loopne push push mov add call (bad) push iret ret aad lcall (bad) xor mov adc outsl les and dec mov test mov int3 pop call scas cmp into decb add fildll adc je jo mov pusha sub out outsl cld or mov popf push subl test loope pop adc pop or or data16 adc pusha rolb lds sarb lcall jl sbb mov fcompl gs add and jae add nop ds pop call stos sbb pop out add xchg outsl cld and sbb imul dec aam dec cld mov and loop fisubr push arpl xchg mov (bad) mov rcl insb mov pop enter jae push sub sub inc shr mov popl xor rcrl sub movsl in mov mov mov mov orl lods mov add imul mov jo mov in (bad) ljmp fidiv push mov sahf rorl clc test and cli cwtl jge dec push repz push push mov ljmp out insb xor jns test push add and pop in jne inc cmpsl jbe pushf shrl clc imul (bad) and jmp xor xor (bad) notb leave push mov fucomi clc mov enter fdiv xchg popa lds and loopne int3 das dec lds add dec jle push jp xor cwtl iret sbb clc fisttpll sub gs pop inc clc lret xchg ret pop jb in rclb sub aad in test mov loop sahf or cmp mov mov repz insb fist mov jo lods cmp xchg mov stos rclb dec pop pop out fist inc and mov rorb sbb cmc pop test pop mov mov sahf (bad) jp jp adc repnz test (bad) aaa fwait sub inc mov xchg es xchg dec mov fisttpll mov mov or sub popa nop jae repnz inc ret popf fisttpll repz (bad) push stos cmp jp sub les out add rcll cli mov xor dec push out inc jnp pop pop mov jns pop cs jg addr16 or jp lds movq into ret aad lcall (bad) cmpsl stos test inc fiaddl cs dec pushf pop ljmp and mov add push cmpsb mov loopne test xchg push in fnstsw loop,pt test addr16 ss shll jns insb mov ret push cli add mov out jle enter jmp std in and inc jle and cli fistp dec lret jns daa xor lret test mov or pop mov mov mov addr16 and xchg dec xchg push sub dec cli rol mov lahf outsb or xchg xchg mov inc mov mov stos push fisubr fsubr jb repz (bad) mov jge xchg dec dec mov or pop popa jae imul pushf sub jg insl je or sub cs in stos fstpl scas jmp jnp sbb sub or and dec (bad) xlat mov mov and out rcll add lcall cmp push insl cld mov and fildl mov pop outsb (bad) repnz test mov pop or sbb push jnp arpl scas divb icebp jle pop and adc in imul (bad) push aam in sub sub js sbb mov decl test adc pop push jp xchg or call in jb mov std mov stos add mov cli fbld enter inc das jle sbb outsl push (bad) push fsubs inc add imul cmp mov sub or cwtl es rcrb notl popf mov sbb xchg mov adc out scas cmp cmp es push lods cmp nop jns mov cli jo mov add subl xor negb fwait icebp ret cltd mov mulps mov leave sbb js pop jmp mov cmpsl mov aad mov mov and ja cwtl push adc (bad) out jp xchg jp movsl xchg lahf adc inc mov and cs inc ret lods cmp push imul imul mov add pop push and add sub aam (bad) xor or clc notb pop testb pop mov bound mov std stos mov lock xchg inc pop adc arpl xchg gs fcomps mov mov sub popf lods mov xchg and je nop fldl2t lret lea lret call and fidivl mov dec inc cmpsb xor push push cmp ficompl and adc ret testb data16 (bad) inc sbb add sbb test lcall cld pop repnz pop xchg xchg dec mov into sarl sti imul push int3 movsl cmp loope jecxz cld inc mov xchg mov and sti adc cmp mov push call inc jecxz push ljmp add push setb mov (bad) adc data16 adc sub scas inc mov fiadd push xchg (bad) jmp cmp js cwtl jne pop fmull imul push and aaa inc dec test lret stc xchg push (bad) mov inc jp stos inc (bad) xchg cmpsl mov dec pop sbb jne hlt pop lret cmp mov fsubrl or mov jg negb inc mov fwait jmp rorb pusha jg loop aad push (bad) mov daa or inc mov (bad) in arpl adc icebp mov or mov mov cmc (bad) mov nop pop call stos pop inc aam cwtl ljmp inc pop cltd push in mov lahf outsb jl fldenv add clc fimul sbb pop dec leave cmp fsin jle rorl jne loopne mov or cli mov data16 cltd popf adc inc mov xor and jne lcall mov gs lret or lds mov lret int3 pop arpl fcoml push and cmp push in pop mov or das int inc and cltd xchg data16 cmp mov popa movsl fstpl test enter repnz testb data16 (bad) jp jnp mov test cmp cmp insl cmpsb rcll lret push or cmp adc rol or pop ljmp int3 xor and cmp lret push push (bad) mulb leave push addr16 roll cmp push loop mov sub sbb fstl fsubrp add xchg outsb fsubrl repz sub movsl in pop test add rcrb sbb inc test test lcall pop or mov add inc sahf ss xchg pop sub repz mov sbb popf fisttpll icebp in (bad) lahf xlat xor pop sub mov sub push out ljmp fldt into xor hlt pusha clc xchg fsub cmpsl fisubrl test jns roll cmpsb imul (bad) push repnz xchg (bad) push adc mov ss lret fiadd push mov mov dec cwtl mov out and add adc mov icebp ftst push ljmp scas jae or in out decb imul add pop ret cmp dec push cld aam adc fsubs fisubrl inc add and rolb (bad) out sub je inc aam lock rorb out pop jo pop inc (bad) xor testl pop mov loopne cltd mov sti dec cmp insb mov rorb lahf push mov inc bound push stc mov adcb adc cmpsl xor xchg mov cmp adc addr16 aaa (bad) jge pusha test call test add (bad) xlat push cmp orb addr16 sub xor mov (bad) ss stos aas cltd es xchg add mov inc mov and mov sarb xchg mov and or (bad) popa popa popf fisttpll repz push sbb js fs leave cmp pop loop,pn movsl xor arpl or ljmp jge out pop iret out mov mov addw xchg mov cmpb std xchg movsl bound inc cmpsb pusha sub (bad) std es pop sbb es and add push push addr16 push int3 xor mov push scas dec lret clc pop nop push lods std (bad) (bad) stos jb mov out lods mov mov (bad) ss push daa sub sbb xor adc push ret ljmp insb mov call dec stos xor pusha popa roll (bad) add inc mov aad mov lret pop push dec mov or enter mov xchg jecxz sarb cmpsb fistpll mov into and cmp sbb push imul in add push dec (bad) cmp mov xor test les dec cmpsb xrelease shl mulb (bad) xor dec mov sub sbb pop lahf sub dec mov addr16 pop (bad) mov mov xchg dec mov or mov jecxz (bad) xor jge ljmp mov pop out ljmp mov or cmp cwtl add sbb outsb jno mov mov add rorl jne clc repnz or cli cmp dec push repz jns popa jle mov fs cmpsl std cmpsb test jge mull out stos sub jl or or xchg inc popa fisttpl dec xor xchg cld fidiv pop dec xchg and cmp pop imul imul imul lahf outsb je push outsl and pop aas lods pop ds push cmpsl xor push push and fwait xor mov cmp movsl pop mov xchg or test mov popf ror jmp inc or jg into ret aad jge fs xlat dec adc mov mov stos cmp sub and adc ljmp stos movsb mov enter pop imul imul mov pop les popa mov cli dec incl mov dec add jle int push mov jmp add push aas cs or and fwait or inc mov sbb std inc shr jnp icebp addr16 adc adc test adc flds dec cmp cs scas mov add je adc movsb mov xorl xor decl loopne cmp dec sub test fucom xor int jp xchg push add stos add data16 (bad) popf lret cld call jg int3 ret aad jge fs xlat dec adc cmc addr16 shll mov pop jb inc mov mov mov sti xor push mov jg sub ljmp fcoml and inc xchg rcrb pop mov xchg testl sub lcall clc or and jbe aaa sub loop adcl adc inc push add orb je xchg sbb fimul jge jl sbb fidiv (bad) adc xchg xor push jl idivb int3 fldcw xchg sub jbe imul mov mov adc dec cmp outsl mov stc daa push add fmull out push fsubrp test (bad) jmp mov iret scas addr16 cmpsl and sub data16 imul sub enter stc xor and lock inc xchg lods lock shlb sub shlb jne mov sub cld sub push insb pop sti insl fist mov outsl and dec aaa sbb mov ret sub cmp pushf out lret cmp or pop int jb gs jmp iret (bad) mov in (bad) jnp pop adc xlat (bad) fdivrl popa lods inc lds jmp data16 xor test mov or sub inc dec jg mov into fcoml fnstenv mov push les pushf femms xchg push das inc aad ja dec sbb inc mov lcall cld mov aaa insb cli mov loopne lea addr16 test (bad) xor ljmp fwait or ret popf sbb arpl mov xorl push scas sub or mov or mov mov cli insl fist jo (bad) test leave push addr16 or push popa mov gs leave cmp popa jns out lret test mov adc push movsl xor shr cmp mov xorl or adc push ret aad jae add sub movsl xchg pop mov mov mov or rclb lcall inc sbb pop mov jo in add xchg dec gs cmp push leave dec pop call mov mov mov into fsubrl aad cmc mov jg out imul xor push jp xorl xor or repz jp out jnp out jl pop sub (bad) movsb push sub hlt xchg and inc and fwait cmpsb and int3 pop arpl or popa out cmp add imul push xchg (bad) ficoml lea sub enter cmc dec pop pop aaa ret xchg mov mov push or or push inc test xchg out cmpsl rcl fcmovnbe mov lds xchg sub xchg or sub sbb jmp out cmp stos adc cmp fistpl outsl stc mov imul and push mov inc out mov scas mov movsb leave mov add mov push mov mov ret push push sub loop sub gs cmp nop and mov push sub das mov minps aaa sbb xchg jge sub lods jbe push leave out jl adc sub sarl xchg inc adc sub stc fiaddl scas cli mov mov push sbb mov (bad) mov call dec push popa mov mov fdivl clc mov xchg sub in pop adc fistpll cmpsb sbb cli cwtl insb mov imul mov cli int3 inc clc cs lock leave rorb push sbb adc test in pop es test push pop outsl inc mov scas mov scas cmp or out xchg push das (bad) call imul sti mov out std mov scas add mov lock cli lds and rorb inc push pop mov (bad) jbe adc data16 add sub int3 adc (bad) out mov jle int3 mov test into into push mov sbb in jns pop addr16 cmpsb pop je push aad outsb sub xchg and std test adc add mov sbb out jmp sub outsb cld or mov add pop and jl gs cmpsb mov data16 mov in sahf out sbb aad adcl mov lcall xchg jns clc adc int pushf mov cmp (bad) dec xchg and test mov add sti dec bound imul dec ljmp add je cmp or imul and (bad) rcrb sub popf dec popa xchg lds movsl xor mov (bad) jmp (bad) xor in test rcrb sub inc xchg nop scas mov movsl dec outsl les mov mov sbb mov fimul sub jp sarl (bad) jo push jp cmp outsl mov cmc and jns into xchg xchg test les sbb xor cmpsb xor fstps scas xor sbb mov xchg or (bad) test jecxz pop sbb subb push sub in pushf sub aas popf paddw sahf ja pop (bad) mov cmp inc sbb clc pop sbb pop ljmp les fldt cmp aad push ljmp lahf call rolb push incw mov push out es sti orb or jbe int cmpsb lcall xor push cmp mov inc mov (bad) sbb jp test gs mov lcall dec shlb adc (bad) xor orl add shl xchg xchg pop (bad) js sar enter das xor (bad) and cmp sbb push imul in add inc pop (bad) sub mov pusha jg les fwait bound stc xchg stos imul mull sahf mov jne jo iret inc pop mov mov or and out mov mov outsl js xchg cmpsb jns les (bad) mov or pop test rcl faddl pop sub ret shrl scas cmp aad mov (bad) aaa test sbb jmp mov imul in inc xor rcrl push movsl mov rclb xchg ret xchg (bad) test inc mov cmp out (bad) push push or iret jg cwtl mov jns push pop je xchg push jge test sub mov lods bound repz (bad) js out fidivrl pushf shrl imul negb xchg xchg insb test mov (bad) sbb das jmp je jae jns xchg pop mov push adc cmp push sbb jae mov push ret dec (bad) mov xchg cmc movsl jo popl das stc mov loopne inc into sub das out push xor sub jbe lret cli add jp cmp cld test ss loop rolb push pop mov inc xchg dec rorl push sub add push mov cld jbe in aam mov cmpsb insb sbb jbe mov push mov xor cli hlt inc pop mov test jmp je lods stos bnd or xor ret sub xchg mov in pop push outsb std pop jo data16 dec push sub popf fisttpll and pop (bad) and sub and or mov shll insb ljmp sub cmp (bad) (bad) sbb add inc out jge shll iret inc bound adc push int jle pop and sub and in bts mov add jnp test or jo test xchg ja loopne sub sahf and sti jo pushf push (bad) mov imul mov frstor std and sbb mov scas inc leave imul pop loopne xchg pop jbe pop aam xor or lret popf xchg or in incl sahf pop mov jns call adc cli icebp xchg leave (bad) fcoml jo xchg stos sarb mov push cmpsb mov mov adc add push xchg dec into and dec mov push pusha xchg ja sbb add test data16 imul cmp loope mov nop pop scas jae bound iret inc out adc (bad) inc mov cmc xlat pop mov loop pop add inc push cmpsl outsl push or push mov jnp in mov mov out xchg dec ret dec jb adc and test pushf push xor jne fdivl add mov pop xchg idiv adc in pop jmp cmpsb inc mov stos pusha orl cmp shrl cmp ds pushf xor jmp jbe arpl inc pop adc inc cmp xor loop js push mov cld mov fisttpll sbbl jno and loop sti xchg mov pop fldl popf and fildl idiv adc out jne sub lret pusha mov insl test jno adc leave lret cmp loope mov push push clc mov cmp adc mov jg outsb (bad) cli inc xlat dec into popf imul jb cmpsl test or push mov aaa jg jnp in xor mov sahf sbb jo sahf daa fdivl mov sbbl jecxz inc (bad) fcmovnbe out add mov pop xchg xchg cld adc and sarb jl jnp hlt push aad test rclb std mov xchg sub stos inc sbb pusha jns mov ret adc cld repz push mov mov loop cmp ret or dec ret jle fwait sbb xor faddl std outsl xchg jecxz dec scas or add sub rol loope mov stos in mov push popl lret pop jns insb inc mov pusha orl mov push pop lcall in es xchg pop mov jne call mov xor xor aad je inc push mov js loop (bad) xchg sub sub lcall mov lods inc lret mov aam xchg add cltd cmp jecxz insl adc sbb icebp sbb pop mov rcrl mov sbb inc mov cmp push pushf sub sbb inc scas test popf jge test and sub dec jecxz insb sbbl cmp movsl jmp nopl mov push popa or or add ret jle mov push fwait xchg push and fcomi out add xchg push push cmp add or cmp push test popa test out inc scas insl iret aam aam ss out fbld stos enter mov fsubr mov mov jbe enter jmp sbb mov aaa push sahf jp test popa add jo mov push fbld daa cld ds sti adc pushw add and rcrb cmp cmp gs adc rclw scas iretw aam aad test aam jo out popa (bad) xor shl or jp mov test lret mov pop nop cmpsb dec dec movsb pop sub xor push (bad) or or dec lds jp push cs ret xor imul mov pop and aam sbb std inc xchg jge ficompl cmp add sbb mov test inc xchg and mov pop scas push xchg xchg pop pop enter lock mov roll adc inc mov out and (bad) hlt fnstcw ficom mov jnp les xor mov lcall and test push loopne push mov mov jl or leave cmp scas addr16 xchg (bad) ss inc pop xchg xchg cld adc and repnz mov sbb or aas lret pop movsb xchg adc lret rolb xchg scas (bad) mov push sbb cmc xor jmp push mov sbbb pusha loop cmp (bad) fcoml jo xchg stos loopne cmc dec popf gs repz add test push sbb mov ja lcall clc or sub (bad) (bad) xor rclb repz fwait pusha mov mov pop in inc xlat loop jg popa cmpsb hlt inc push popf jns or cmp mov pop xchg mov std inc pop pushf push mov jae (bad) sub xchg enter add or add dec movsb dec shrl (bad) pusha push (bad) cmp pushf jle clc push and das push fnstcw cltd and xor std pop popf (bad) int3 inc pop xor mov and (bad) sbbb adc mov jno insb xchg ret jno mov sbb fbstp ss mov mov xchg mov cmpsb sbb ss popf movsb mov mov xor sbbl and ds fnstcw lock insl cli mov cli outsl add ja test push popf mov push jmp movsl outsb jns loopne jl or push je mov loope jbe pop pop mov pop test out mov icebp js daa inc jae fnstenv or sbb push pushf test out fs jo jae mov insb icebp push imul cmpl mov xchg pusha cmp test (bad) repz dec fsts js mov mov or cmc cmp mov leave xor fwait pop nop cld shll jl int3 adc aas in pop popa pop leave mov jb loope movsl pop cmc rcrb fisttpll (bad) xchg or fildll sti mov dec mov lods and and fstpl (bad) rcrl fsubrp dec sbb mov aaa sbb lock sarl mov cmp push pop test lock xchg jg dec fisubl dec pushf jns cmpsl lea scas cmc pusha popf xlat mov push pop push movsb mov push pushf jnp lds std push cwtl xchg outsb mov add aad sub sbb outsb scas fimull mov push fsubrp test fsubrl mov lret dec fidivrl jnp dec pop roll pop and dec adc cmp jg je lea jmp pushf mov jo (bad) in pop push adc push xor test gs ret push outsl pop out vcvttpd2dqy aaa cld mov out enter add dec pop pop or xchg movsl cwtl cld bound ret xor ja cmc mov jl adc lahf nop cmpsb sar cwtl push mov mov sahf cmpsl testl lahf in call jle in cmp jl (bad) out rcrl sub int3 jnp into pop imul dec mov or ljmp xchg inc fcoms jge sbb xchg std mov es mov mov inc xchg lds xor insb sti cmpsb das mov (bad) adc adc sbb sbb sahf stos mov push dec xchg sbb ljmp dec and jns mov mov xor lcall lret cmc sti nop or or sbb push mov cltd insb es adc jmp mov mov in add (bad) das xor xchg pusha mov mov xchg jp jl or mov mov mov test and sub push jecxz insb sbbb cmp adc icebp dec pushf mov popa or push fistpll daa in mov sti or dec mov outsl mov imul inc sti (bad) dec pop fucomip add bound outsb js inc (bad) xor add call cmpsl hlt inc push cs pop mov mov lock mov out and inc inc mov enter cmp and dec inc adc clc cld pop push mov test mov sub je shrl xchg xor sti add jo and dec mov outsl cmpsb jl ret mov scas and enter jecxz subps imul and aaa ds mov xor ret cmc adc pop mov decb outsb xlat xor in das lea les dec imull cmp lret jb,pt stos mov mov out daa je fcomps ss push hlt repnz push push fstpt xchg and xor decl lahf jl and arpl out adc pop mov fdiv pop sub xor xchg repnz push sahf add pop adc jb sbb sub or mov movsb jbe cwtl sbb (bad) xor fwait cmpsb push (bad) xor fisubrl std dec xchg sahf push aas mov pop push mov js xchg and xor decl lahf jl and arpl out xchg js pop mov stc lock es lods adc or cmpsl stos jae adc mov jg push insl xor jmp decb add imul notl pop mov jo nop sbb shll jb mov out mov in xchg jb and dec dec lcall cli test mov imul rdpmc and arpl ror xlat xchg sbb and outsb fisubl or lods inc les sbb mov jbe imul lcall rcll loopne push scas insb mov insb or (bad) mov int3 sarb fidivrl inc adc hlt clc xchg push mov pop insl cmp pop push mov dec mov outsl mov mov jge ret cmp sbb sbb mov mov inc clc (bad) or scas mov (bad) scas outsb jg push sub lret addb mov jmp pop jecxz inc xchg pop mov jne (bad) xor jp shrl mov push adc in dec lret jp fidivl cs dec sub std dec test movsb dec aad lods jbe xchg and fstpt repnz adc jle daa jmp and push fsubp lods xchg push bound cld (bad) xor add call cmpsl hlt inc push cs and sub cmc push movsl bound jb xchg adc push cmpsl imul mov rcrb sub xor aad je outsb sub clc dec cmc out xchg je sub imul cmp or xor sbb jg inc sbb out push test mov xchg (bad) cld adc es mov mov push aad test rclb out pop xchg pop mov sahf je mov aam mov inc (bad) lock int ss inc nop cmpsb dec dec movsb pop xor adc or dec ret arpl out mov in es fcmovbe push lcall fist and jmp sbb and sbb sbb mov test lret jp subl aas in call nop bound ljmp cmc adc pop mov decb jo xor in sub ljmp nop in js xchg jge std add int3 (bad) push sub dec cld std lea hlt outsl adc push popa mov or fnsave lcall push mov (bad) movsb adc xchg xchg jge pusha les adc call push or das push push test adc add sub xor loop inc or pushf leave sahf pop jmp xchg repnz lea jns leave xchg mov jg (bad) adc sub cld mov xchg in xchg lret mov aad hlt mov or jae add pop sbb mov rolb fstpl (bad) push out mov xchg add lret mov add sahf les inc add mov inc aam or or (bad) in arpl sarb mov ljmp inc fist cmp jo jno or ss nop push and add jnp mov jne fldenv test les or leave mov and xor fstpl fisubr aad xchg jmp dec fldt or mov jl call jge repz mov xor jnp int3 dec xchg adc inc (bad) mov pop or jg js les loop dec scas adc cltd bswap pop imul insl loope imul lret jae ficom sbb and xchg lods bound fs sub test mov inc sbb (bad) lret data16 sbb in into bound (bad) ljmp (bad) lock into ret (bad) adc std int3 lret inc xchg cmpsl jbe nop pop popa popf pop push scas and and ljmp test sbb icebp les fist out and push loopne adc inc cmpsl xor in jmp bound dec adc mov inc mov lods js pop cmpsb adcb adc out push pushf sub andl (bad) pop movsl dec mov jo into (bad) (bad) rcrb mov (bad) into pop imul adc mov pushf xchg (bad) pop lods roll sbb push (bad) cmp mov lods fs addr16 shll lods bound fs bound jle rolb xor test dec aaa inc mov xor adc fs mov repnz sub xchg pop push es adc imul stc clc aaa and rolb and mov cmpsb sbb testl xchg or cmp popa nop pop mov cmpsb inc sbb mov lock push out add pop pusha xor and hlt test push hlt inc xchg push mov and add adc jb loopne shl jle,pn sbb out rcrb xchg je and ret or es pop (bad) in std inc das in jp lret jns mov pushf push lods cmp popf sub hlt or (bad) std mov sti mov lock rorb inc xchg or cmp inc aad lods jecxz fsub jnp ficom mov dec js pop icebp inc sbb sbb call out scas dec pop mov fwait mov and divb dec ss or jl cmp out outsl xor mov dec jp aam mov shll sbb int3 fs mov push add push out pop pushf dec xchg mov mov mov xlat mov lock aaa aaa jle mov dec pop into std int lcall and in pop sbb shr pop daa in push ficom lret push pop sub cmp xor cltd andl (bad) cmc out adc shll cltd stc adc jge je push pop in xchg out insl mov sbb aaa stos fisttp shlb movups dec mov cli mov and pop loope inc cmp adc fstl cmc mov dec fcom sub sahf dec xor mov dec jecxz fsubrl adc call mov jnp xchg addr16 jnp sbb mov sarl mov mov push adc add mov cltd xchg or adc sbb (bad) repnz pop sub sbb jb scas roll push jbe sbb pop cmp xchg div inc cmovno std jecxz addr16 push dec in mov (bad) xchg pushw jno inc or lret push jp (bad) shl sub popa add xchg (bad) ja movsb das cwtl test cwtl addr16 repz push and sbb push xor adcb loope fist or ret (bad) or and pushf mov into pop dec sbb xchg push sbb jbe ss xor dec and jo adc mov in inc outsb pop mov and pushf adc jle mov ja and cmp adc aam push lods jo andb xor dec inc stos ljmp sbb sub and cmp dec xchg cmp int adc shrb ret jo cmpsl mov movsb ljmp cmp nop push lock push dec repnz adc (bad) jg xchg xorl loopne icebp pop pop inc push hlt mov add jbe cmp movl and cmp subb imul mov push push test std movsb dec sub or pop pop int3 cld xchg scas jbe insl inc sub arpl stos mov and stos icebp addr16 dec call cmc jl jae movsl test insb or cmp xchg jae mov addl mov jmp call sub sahf push sub dec aad lcall lcall imulb xor aad addl mov pop rcrw cmp jo mov sub jns mov loop aad ds je sbb lods imul push lods ja mov xchg sbb outsb push pop leave or (bad) mov and scas cmp adc inc pusha int arpl or cmp movsl int3 ljmp dec cltd add dec cmp sbb test stos sarl or sub mov cmpsl mov push je cli pop add or nop mov lods popa popa (bad) lods stc in rcll clc clc (bad) and popf lock (bad) jno xchg xor dec fsubl pop mov daa ja sub sub mov movsl and xor ret imul xor (bad) lods cmpsb popf lods (bad) push das mov pop lds loop sub pop pop ret scas xor lods jge and adc (bad) sub xorl jns call fmull data16 das mov addr16 pop jae jnp cmp push pop jecxz mov int3 push xor and jbe inc stc pop in stc int3 xchg sbb jmp and jle or test mov leave push in dec (bad) dec daa add add pop ds or mov shr fisttpll inc mov stos outsb (bad) xchg mov dec and mov or cmpsl xor fisubl mov push mov mov lcall jl cwtl loope (bad) xchg pop cmpb loopne inc mov mulb fistpll or and add and sbb je notb xor inc push jp jge stos xor push xchg lods xor add outsb lods pop add push ljmp lret sbb shr add jne sbb scas mov inc mov (bad) lahf (bad) jle jmp mov leave fld (bad) inc aam sbb fwait sub icebp inc pop ja test (bad) in jp jle xchg inc into ss xchg jae jbe xchg ja aam jno je nop xchg jmp cmp (bad) sbb jne loop,pt test daa xorl fisttpl rcrl sub dec inc sub push xor mov mov aad adcl call rolb inc mov cmc jmp xor pop cmp out (bad) ds sbb push popa (bad) mov or cltd cmc mov lret idivl and stos cmp and les lods in inc inc adc xor and push cli ja and mov push in cmp inc and pop pop pushf rcll (bad) adc shrl push adc rcrb das inc mov add aaa adc inc rolb mov divl out add js sbb mov mov cmpsb mov inc adc cmp push loop iret or test mov pusha push rorb jg sbb or xor popa mov (bad) jle sbb add xchg cs dec pusha addr16 (bad) adc out mov test js cmp xchg cmp test mov or cli out jp sbb cmpb cmpsl call jbe xchg enter pop insl add sbb mov sbb shlb out enter test lcall (bad) bound pusha shrl movsb fidivrl into cmp xor dec mov push (bad) mov mov jnp mov orl inc mov aam je inc shl sub pop push (bad) adc or pushf sahf push (bad) sarl mov scas cmp pushf ljmp mov dec push (bad) sbb retw push mov mov dec mov scas fstpl shr push repz aas jge sbb sub dec enter adc xor mov jle lcall mov (bad) movsb add test movsb pop mov pop jno pop call stos cmp cwtl xchg aaa mov push imul outsl cs jno pop pop movsb pop rclb std mov and push mov cli (bad) mov jecxz mov add mov or loop push xor dec pop test in push sbb mov sub rcrb pusha insl mov inc rcrb dec enter lret enter (bad) shrb out mov pop push ja xchg and popa or push xor popf fisttpll icebp in lcall sbb mov test add or cld fstps popa jno sub pop cli dec push push inc shrb lods mov mov insb sti subl (bad) dec xlat cwtl add test fsubr mov cmp push adc aad cmp out xlat mov mov mov stos cltd test lret (bad) cli mulb sbb mov ss jno pmaxub jne data16 imul insb cli (bad) popf inc outsl add xchg xchg mov or jle mov xor xor fdiv orb je mov stos (bad) jge test and jo aaa fmull sub in jb push js xchg lret int das jo xchg and je nop xchg sti push inc add stc inc scas xchg in xor sbb stc mov xchg incl inc xchg call loope dec push (bad) xor push movsb xor jb cmc dec jb out jge cltd cmc and cwtl lods jns (bad) sbb in into push pop insb mov mov add dec mov push pop adc jle pop sbb fnstcw or pop addr16 std dec sahf stos cmpsl mov dec pushf fldlg2 xor push in mov adc push add fisub xor into (bad) xor addr16 mov fs cmp out push repnz jge leave adc cmovae lock push leave jl xor xor mov mov xchg mov xor comiss enter xlat loop (bad) loope out int3 (bad) jbe in and push or mov xchg push das (bad) fcoml sbb inc push loop (bad) rolb daa adc xchg mov fstpl fisubr aad (bad) cmp xchg aad sbb adc imul xor fcomps xor or in adc cmc addr16 mov xlat imul sub out mov dec sahf clc repz out and mov push stos (bad) loope icebp cli shrb pop dec inc in ss sbb outsb xchg (bad) dec sub add push das lret int3 out pop bnd fcoms inc inc sub cltd or inc jbe movsl dec (bad) xor mov xor shll mov pop pop shrb aam testl inc cmp dec mov jno,pt lods sub aaa cmpsl sbb jo lods cmp hlt jno ficom sbb mov (bad) shll mov dec mov scas leave dec dec das xlat popf lea (bad) adc sbb cmp ss dec fs lods inc jnp push (bad) hlt pop pop outsl mov aam xor iret test push test iret (bad) stos sti jmp xchg add jp xchg mov popa pop xchg mov add mov add frstor popf fisttpll stc inc xchg lcall repnz mov stos loopne sub cmp cmp int movsb fimull push (bad) lret aam xor movsb daa inc testl or (bad) (bad) outsl (bad) fs mov cmpsl ljmp cmp aad jbe xchg dec mov fistp js imul (bad) mov clc and call push popf push mov out sub movb cmpsb mov pop jnp ret lods ds mov push fstpl fisubr aad cmc add jle testb xor jge adc mov mov lock sub sub lods (bad) push lcall lret pop mov js sbb call scas cmp mov stc cltd nop push lods cmp fxtract scas push (bad) push imul pop les dec insb cld mov and flds imul fsubr cmp popf and mov cld and lods add and xchg or add jle pushf stos lret (bad) rclb cmp fstl jp scas out mov xor xchg cltd arpl adc mov ljmp (bad) push push in add mov (bad) xlat es add stos les mov mov pop mov dec popf xor mov loope xchg lahf das dec inc mov loope nop cltd ss mov push sahf sub rcr mov addl mov mov lahf or or (bad) hlt jns xchg lods cmp int ljmp inc aam jne xchg test out xchg outsb push lods or aad mov shrb jb in leave dec pop pusha jecxz push cmpsb xor fsts stc mov sub push or mov dec cmc test sub jg add inc mov orb jge (bad) xor jle cltd xor lods or pop add notb aad movsb add and mov insl stos sti xor div les lods cmc jae fidiv rcl inc jecxz jne xchg jmp xchg mov xchg cmc sbb sbb outsb stos fiaddl sti fisttpl add in push das mov mov xchg cmpsb sar js mov fisttpll cmpsl pop adc in insb pop mov outsb js jge test mov or xacquire jle scas inc into xlat scas je fdivl cmp xor sti push cmp outsl inc adc push lods mov mov (bad) push loop mov aam insb cld mov fadd stos and dec sbb out cmpsb xchg mov cwtl fisubl rclb mov jecxz lea sbb addb adc data16 push lcall jle cwtl lods stc mov hlt repz test lea and mov call loop push inc fcoml stc mov jg adc mov xchg cli dec daa repz insb adc movsb xor xchg adc push out xchg mov data16 dec (bad) in mov out push or int3 cwtl js lods fldt fidivr or or dec mov test pop call scas cmp cwtl in inc push xchg adc add push leave cmp sub or mov (bad) pop push sub add mov adc push push mov (bad) lret push mov lcall aaa sbb (bad) int3 jmp mov test adc xchg xchg test sub (bad) jno xor pop call sub enter ret daa ja frstor dec gs xlat xchg dec imul test jne push (bad) mov xchg cmpsb cli fstpl fisubrl aad sub rcrl (bad) pop mov sbb in mov pop data16 sub pop jbe pop sahf sub movsl jo pop cmp jp adc out jns xchg jb xchg aad call push ret fwait aad enter (bad) shlb jb or mov adc push loopne cmp push fsubrl push mov cmp out daa xchg add repnz lahf sub xor rolb ds jmp push pop mov jge movsb lret nop sub aam mov or pop push mov in js xchg in ljmp clc daa popa sub mov and loop mov rol scas loop jge cmp jae imul cmpsb xor push ret add popa stos dec push out cmp pop pusha aam mov push dec out mov pop imul pop xor ljmp xor mov popf jl mov lret popf lret pop adc mov into and mov pop add (bad) fbstp and push sbb test hlt outsl les stos popa mov pop ret lds jecxz xor jno add xchg or add push aas dec aam dec push (bad) xor rcrl sub cli imul cmpsb jae jle cwtl sub icebp lahf pop fimull roll out add push les ss call scas push inc aad mov outsl xchg in inc add sbb fmull jge add cwtl mov add scas mov push fisubr popf icebp (bad) dec ret sbb xor push sub roll xor push (bad) adc fwait jns mov mov lret lods sub xchg fiadd or xchg jle dec inc into xlat scas enter nop aas int arpl adc adc mov movsb sbb rclb lea sub stc or xchg lods fdiv in cmp or ret dec xchg pop jns das gs push xor add and mov sbb and popa (bad) aaa or sbb inc lds push and (bad) mov lds cmpsb pop sbb push mov cmp xor and enter cmpsl gs adc dec mov push data16 cmp es mov movsl int out push lahf xor out popf dec mov inc push daa lock cmc mov mov adc push hlt (bad) inc hlt sub mov test cmp inc pop cmc mov or mov mov mov rcrl icebp cmp addr16 dec cwtl lret pushf stos (bad) xchg lds sbb mov jae jo aam scas mov pop outsl std inc mov mov push xor test les (bad) sbb and jb or imul xlat jle je clc data16 addr16 clc je push add adc jo push xchg xor pop lods dec push out mov loop lcall pop adc sti leave xor mov lahf or mov mov in aas xor xchg mov (bad) xlat fsub nop push push fistpll adc jne jp nop sub daa repnz mov cli or outsb (bad) mov clc add cmp sub ja inc mov push adcl jg sbb gs fwait pushf jno add loop inc dec out bound jl lock jg stos lock insl sbb xor add jns cwtl sbb push into das out dec pop mov arpl push out push movsb mov add dec cli (bad) jne loop jne out and shll pushl enter das pop xchg pushf mov mov lea addr16 loopne fsts clc mov dec out cmp cmpl xorl sbb adc pusha mov test mov ret repz mov scas idivl mov jo imul xchg sub aam adc pop fisubrl mov push cwtl (bad) sbb int3 and fistl mov cmp xchg or jmp mov pop movsl leave mov pop or inc mov cmp or test loopne inc xchg inc mov xorl pop clc cwtl es xchg add jno jecxz fwait inc (bad) popf mov mov lret pushl dec cli shlb je cmp push outsl cmc out jo push popa xchg fistpl add dec out push fsubp ja ljmp jno insb test (bad) xchg fs adc fs (bad) push pushf sub jb xlat in adc addr16 push (bad) push repz jp push sub add push jns xchg jno or push and push aam dec out (bad) frstor popa jle jno cli outsb dec ficompl movsb lret cmp cmpsb mov rcr mov sub imul pop stos popa jmp insb lret test mov (bad) inc adc fs lods scas js push xor jle or push mov xchg fldt inc inc (bad) cmp cmp add imulb sub stc cltd nop push lods cmp push mov jno scas cmp push mov jno sbb xchg add xchg sub adc movsl xor int3 jmp xor xor pop shr and sahf sub mov xor push (bad) fsub xor jle sub add arpl push (bad) pop lret or imull aas add jne and cmp inc aad mov outsl dec sti insb and fsubs jo pmaxub jecxz add jno add divb arpl cmp pop jns das jne sbb sbb adc out push adc pop lock xor das or xchg adc (bad) (bad) repnz imul fnsave cli les push imul rol xor jb dec adc xchg push loop (bad) clc adc ss mov fwait bound sub insb cmc or pop int adc dec popa imul cmpb mov aad pop inc mov or mov hlt xlat dec lods dec jb jl in ficom lret adc imull in jmp or mov sti cld outsl fist stc cwtl mov mov mov lahf outsb sbb xchg xchg and icebp les outsb stos add faddl inc fildll adc gs adc ja testl add push or pop addl jmp loop shrl sahf sahf jecxz dec mov pop movsb pop xchg (bad) je and pop call scas push jl je cli pop cli mov mov lahf outsb sub xchg bound adc loopne jp adc insb xchg mov movsb xor xchg mov rcrb mov addr16 ljmp loop mov pushf ret aad mov mov dec or or push add ss inc push call scas cmp pushf cmpsb std test adc xchg push push fdiv das jns push mov push xchg and cmp in lret inc xchg fidivl movsb rcrl faddl out ds mov jo sbb insl hlt (bad) clc push pushf mov mov pushf mov lock enter xor jecxz mov cwtl es fistpll outsl inc or sub ljmp xor and bound popl faddp sahf mov xchg pop mov decb or push enter bound ror insl cli (bad) and dec fsubrl xchg xchg push sahf cli mov jbe inc negb out nop stc inc xor adc adc xor test mov or shrl je jbe add push xchg and jbe ret lods cmp cmpsl sbb sbb or adc rcrl add sbb mov popa jno jge insb cli dec xchg fmul aas mov (bad) mov cmp lock lret data16 sbb mov mov push mov (bad) lock enter pop fsubs stc lret aas adc insl cmp (bad) out (bad) sahf or push sahf and jbe push sub mov fwait aam aaa test test cmp insb cmp in outsb mov xchg shll cmpsb stos pop ja outsb pop int pop xor ljmp and movsl lahf xor xor mov or data16 inc mov add aas fnstsw cmp call or movsb jl js ret lret int imul inc aad mov outsl dec inc out push in xchg lret fs (bad) cmp es fs aaa (bad) fldcw repnz sub add fidivrl pop (bad) inc or gs push push in mov pop jle out leave addr16 setl push inc mov out test pop lods inc aam movsl xchg lods into mov loop jl inc push lcall mov (bad) adc les or insl cld xchg and jne nop push repnz or out pop ss mov negl or decb cmp insl cli mov mov test inc mov orb mov fistpl inc gs fs dec and push in arpl repz es mov jge adc iret xchg loop testl pop ljmp (bad) pop call and stc xchg push lds test shlb dec adc xchg scas pop popf sbb cmp add cmpsb cli js xchg (bad) push cmp arpl inc sbb (bad) loop push pop out mov pop orl xor cli sbb pop mov dec mov or imul insl cmp lcall jp fisttpll and sti adc rolb dec push sub outsl cld mov inc and xchg fs clc in adc xor movsb (bad) xchg or and mov jecxz (bad) adc fs cwtl scas js push xor cs shlb test in sub stos loopne in jp jle xchg inc into mov sti (bad) xchg push mov jbe (bad) enter pop or fnstenv mov dec inc or push loop mov loop inc lret cltd mov adc insb adc inc mov push (bad) cli push out enter (bad) icebp push enter (bad) movsb push lods (bad) out or int3 rorb scas mov push outsl (bad) rclb pop add and std mov and add push xchg pop mov pop mov movb add sbb outsb cld loop mov aaa cmp push cli fsts mov data16 dec and arpl cltd and sti xchg adc or or jg lcall push or loopne mov loopne sub insb add and push int3 mov je xchg stos out fwait aad mov outsl loope shl inc in lea loopne (bad) cmp (bad) lock and shll jg pop rclb mov inc and test xchg mov inc adcl lock aad add jle jb sbb sub jne inc rcr sub push push mov mov ds (bad) mov mov dec adcl cmp pushf mov imul xchg aaa jecxz mov decb nop mov clc mov hlt mov pop xlat es aaa leave ds or sbb cld jne test mov pop scas jecxz adcl xchg pusha mov cli inc xchg pop sub lock inc test cmpsl test out mov dec sahf lock mov push ret fwait xor push popa cli ja rolb adc (bad) cmc inc jecxz jge or outsb cld mov and nop cmpb sbb push xchg hlt mov xor adc ljmp adc cltd or shrb mov aaa sub xchg out mov mov adc imul pushf sti imul push les nop sbb (bad) enter pop gs (bad) notb cs push addr16 or fist roll add ret xor or rcrl fs pusha lea jp inc popa in cmp js inc lret and sahf sub mov xor clc sbb out or pop movsl push mov add pop fisubr or mov insb pop xchg mov pushf jnp les stos push pop out mov cmc stos mov add hlt adc mov jl loopne cld rcll imul popa xchg sbb mov sbb ljmp xchg gs dec pop and shlb in mov sbb sbb push lcall fldt inc inc adc sub in push scas or lods test and mov xchg push das (bad) fcom and test stos cmp lret test pop mov mov and bnd ror sbb jge adc xor lea inc fstps cmc pop (bad) adc push loope push pop out test adc jne or sub je les cmp inc jp adc or jns pop out mov push mov add adc add enter push data16 pusha jnp outsl out mov repnz int3 pop xchg mov xchg pusha cmp xchg scas dec jge sub ss fstpl dec mov fisub push insb xchg mov push les mov leave adc jae (bad) call pop sahf add out jl add das lahf lsl jnp mov out mov add xlat inc cli dec pop pop std mov hlt or mov test pop movsb mov dec out mov mov iret mov lods outsl aas mov pop cmp in in in adc pushf je test and cmpb ljmp lods push fbld dec dec inc jmp push cld xchg mov int3 shrl daa jns shll and vphaddubw jge frstor and xor sub xchg push sub push sbb cmp or in jns pop shr sbb adc dec push movsb out pop stc push jle arpl pushf dec aad jae add cmp fwait loopne out dec lcall xchg ret nop and pop mov inc fidivl out (bad) pushf jbe cmp push or xor add cmc add push data16 pop outsb cld pop xchg pop lret popl (bad) ret dec add jns lock int adc jmp data16 jle xor fs or or das in daa mov push movsb fiaddl mov and add sti jne push lds loopne out ret add cmc xchg push jp cmpsl cmp ljmp hlt lret sbb cwtd punpckhwd mov decl and inc repnz cmpsb sub cmp mov inc jae (bad) push fimull jge iret mov sbb arpl repz lcall adc cltd es cmp ljmp xor fmull sahf mov jp xchg mov out add rorl pushl std outsb cs dec jo pmaxub outsb cld or scas mov and ja out sub and mov (bad) xor dec imul inc sbb sbb clc add inc mov mov cs mov lret jle dec xor adc into nop jns cltd movsl dec jecxz cmp jp pushl icebp inc push pop call and sti cmpsb es mov push in mov imul push xchg std mov decb arpl add mov movsb bound dec xchg pop jns les or das mov push and aaa fsubrl fwait or jmp sub fbstp cmp xchg mull movsl pop popa add mov sub fnstcw or sbb add and xor out add adc enter inc xor dec (bad) xchg cmpsl mov mov icebp adcl push (bad) insb cmp mov sbb sub adc xor push or imul hlt inc push inc dec mov pusha insl pushf jbe adcl mov (bad) movl xchg and inc inc sbb mov mov (bad) xor add cmp dec imul insl loope push add jecxz,pt jnp out leave xchg add cltd pop mov and jmp jmp jne mov push shlb xchg or aad jns pop inc xor push xchg sub mov lods scas push data16 jle pop and sbb out jl ret lods push pop adc cmpsl jbe xchg add mov std add or (bad) cmp and or inc xchg (bad) push mov inc sub test sub pop outsb cld or stos imul fstpl push das lock (bad) scas mov mov jl mov scas jle mov push jns lret xor mov cmp testl stc in jp jle dec inc into fildll je push js loop scas mov and or sbb fstpt push cmp frstor mov (bad) mov adc jecxz xor push fidivrl ja inc testb sbb adc fadd mov push ljmp or xor xchg mov inc jge test jmp je pop and das mov and leave mov fcoml scas jle push push stos push or mov push vorpd jb addl cmpsl push les or lock aad sbb add add fsubrs inc push xchg xor movsb xlat nop testb jecxz imulb sub orl and cmpsb dec in aam mov cmc addr16 add mov rorl cwtl mov cmpsl stc imul push cmp pop mov insl or add mov popf fisttpll and sti adc rolb dec push sub mov mov jne cmp pusha insl jmp dec xchg rep sub cmc es sahf sub ret pop movsl adc inc pop stc lock lcall dec mov rcrb xor js mov dec sahf out aaa jae jge arpl xchg mov scas cmp pop mov (bad) xchg push lods mov push sbb incl push popl mov test sub loop cld pop xchg cmpsb enter test jmp pop scas call dec cmp jecxz mov cwtl xchg adc lods pop mov fs out xchg sbb aam jno sbb (bad) sub (bad) icebp js sbb outsl and dec subb mov xchg add pop or pop icebp imul cmp cwtl dec pop cmpsb dec xchg data16 pushf ljmp jne jl mul out inc fwait mov popf dec mov add push aad sub sbb mov cwtl in mov ror inc repnz daa insl inc pusha sbb inc in xchg and bound repnz dec fs cmc sahf adc push pop sub push (bad) mov add push sarb add cmpsb aaa sbb sbb sbb ficomp imul pop xor imul dec repnz lret arpl sub xchg pop mov shlb mov insl and stos fisubr or sub xor pop cmp es fnstcw movl fsubs xor cmpsl push mov mov sub pushf mov repnz lock mov repnz or inc cmpsb jl loopne (bad) or in cmp sub mov cmp pop aad jecxz cltd or sub lds mov sub or cmpsl int3 pop pop cmp or in std mov xchg inc mov inc sbb leave popf lods dec popa sub icebp jne daa insb inc push loope xchg imul out jge jp popa xor ljmp mov in inc (bad) arpl (bad) js adc jno loop cmpsb (bad) xlat movsl call sti mov leave ljmp jge in mov cmp or jmp inc xlat mov ljmp and mov mov jae int3 xlat sbb jae jns jge sbb mov mov fsubrs (bad) incl inc pop mov pop jnp jl xchg in dec pop sbb mov push sbb jg xchg jecxz sbb sub dec sub cmp pop roll popf xchg jg call scas out or jmp inc push movsl cmc cmc rclb jne int pushf insl sbbl stos inc mov or xlat xor cmpsl cli mov iret out push ret fbld jbe (bad) mov (bad) bts inc push mov lods and out and push lret push cmp add xchg mov xor xchg pushf jge ljmp xchg dec das cs push or jns (bad) out je lods jno fmul xchg imul cmpsb sub orl cmp sti insl stos jecxz or mov mov and fbstp inc stos jo outsb xor and (bad) movsl push lret push cmp add xchg mov mov jg fsub cmpl mov lcall rclb inc or xchg jnp pop bound dec iret or ja adc inc insb ret pop test imul frstor xor popf mov push and ss mov daa loop mov mov lods pop in sbb add stos mov out xchg push mov add sbb cmp or jecxz cmpsl shrl fimull jge adc jb cmp adc jno pop daa add dec bound in sub loope adc dec arpl push sbb dec (bad) xor ss rcl insl and sbb mov (bad) push sbb loop out sub pushl test cmp dec shlb aas or mov push jecxz xorps jne push adc rcrl lahf into popl imul or push dec test cld xchg mov fimull inc and mov or (bad) iret fsubs imul push sbb inc sarb in sbb add stos mov sahf inc xchg push pop add xchg cwtl jno out xchg repz lret push jns sub lea insl cmc shl sub mov fs add fadds std scas fisttpl mov add mov sarb jl push inc js pmullw cmp shll and mov xchg imul push js les push mov int fcmovne cld dec pop adc mov dec add lahf fxch inc mov gs jmp iret xor xchg sub dec sub mov adc std inc pop and or insl mov xchg jb cmp adc aas xor jmp jp inc rcrb and sbb xor mov sbbb mov and sub pop pushf es jmp sbb aad mov test outsb into push and rcr mov xchg cs xor arpl xor jnp sbb mov xchg (bad) jo gs and mov and ret stos std ljmp cmpsl jo shll scas inc mov popa ds scas jecxz int3 ret in cmpsb insl or mov jl (bad) cld dec les sbb mov (bad) mov (bad) mov lret in jnp faddl (bad) xchg inc mov mov dec sbb pop mov dec test lods (bad) rclb xor (bad) loope pop mov inc aad jnp add pop mov mov inc jmp lcall into mov daa pop leave loope int3 lret std call and jne sbb mov pop jmp enter mov mov add sub mov dec rcrl aad adc in xor and (bad) (bad) cmp outsb aaa pop enter inc enter sub in std xchg fucomip repz shrl pop sbb aaa inc fnstenv push or imul inc dec jns pop test mov lret mov sbb fucomi fsubrl leave repnz stc insb roll adc insb arpl jle pop lret inc push pop add jp scas mov sub sbb mov inc in and js add mov jge jp jne aam pop jle inc sub fistpl in xor push pop and nop mov loopne fsts loopne rolb js in jb outsb and and lods mov ficoml hlt mov addr16 jne pop mov jg fsub stos mov jno adc lea aad cmp pop push ljmp xor mov lret daa aaa mov leave jns mov insl (bad) sbb mov jb fnstenv jae mov cld push xchg popf insb cmp push fnstenv (bad) mov jge or cmc arpl adc push mov mov (bad) fstpl rcrb add (bad) sbb xchg xchg pop add in sti mov test ret (bad) mov sub sahf cmp movsl push (bad) outsl xor stc pop sbb pop ljmp ljmp enter daa mov sbb insl rcl push incl pop push push fbstp pop cs push xchg mov add and cmp out movsb xor dec mov cmp mov or pop roll xlat shlb ljmp (bad) xchg (bad) jp mov xor sub (bad) fmuls pop lret imulb cmp lret cmpsb adc stc aam cmp movsb pop mov xchg and mov pop fsubrs ret ss adc inc dec sub and cmp pop xchg jbe and dec frstor xchg add iret clc inc pop add pop aas or and cmpsb xor cmpsb add inc mov fwait std ss adc psadbw daa add cld fildl hlt lea mov adc push cmc inc (bad) in cli insl fistp cmp adc stos xchg or push out mov fdivrp mov hlt or xor push in lods movsb aad daa dec mov outsb (bad) pop iret inc iret push insb xor jb cs (bad) adc jno sbb push pushf pop loope pop pop clc std jb sub adc jg jne leave lods push push jnp xchg and sbb push loope cmp shl decb cmp bound sbb dec rclb jne xchg hlt pop inc lods mov movsb sarb arpl dec rclb test rorl icebp pop or cld insl jge push cmp or daa imul xor mov cmp loope jg mov bnd in mov pushf push cwtl pop cltd lea inc fwait addr16 sbb bound add mov rorb adc sbb mov sar mov fdivs out inc xor xchg push cmp scas add jns mov out pushf sbb adc mov pop mov cmp loope jg mov bnd in mov mov cwtl pop cltd lea inc fwait addr16 sbb bound add mov rorb xchg stos sbb mov sar mov fdivs out inc xor xchg push cmp xchg jns mov cmp in or shr sbb sbb outsb mov xor push cltd es pop sbb xchg xchg xchg and outsl mov arpl shrl cmpsb cmp xchg mov jb data16 js (bad) cli (bad) mov sbb jno aad sbb add mov mov out fiaddl idivb sub sarl jbe sbb add jl xor jmp sarb push stos out ror popf mov jo mov inc pusha or pop int3 popf lods mov dec scas pop dec (bad) movb adc aad push jne lahf inc cmp mov jp dec inc fxam mov cmp add xchg cmp cli add (bad) fildl pop mov gs mov mov out sarb jge cld mov (bad) negl mov sub in fdivl cmc adc mov xchg addl call mov nop popf push sti push roll mov or jns call movsl bound or hlt mov push mov rorb mov mov xchg xchg and mov sub lds lahf sub sub enter (bad) or sub inc jecxz outsl mov (bad) xlat sub jecxz loope jnp xor sti push push les mov mov mov (bad) frstor stc dec mov mov and mov jg or mov ja out fnop dec (bad) roll bound or cmp scas adc jmp jp adc sbb sub push mov das test in jae (bad) mov sbb pop ljmp int3 pop mov push ret fwait outsl icebp ljmp in mov adc cmp push loop jae ljmp xchg mov cmpsb xor fnsave xchg add cmp (bad) xchg gs lahf nop cmpsb or jg dec mov scas jle push movsb mov scas (bad) xchg lock iret aam or bound sbb je stos shrb or pop ljmp inc mov (bad) sbb in clc ljmp repz cs jmp incb lahf leave sarb mov dec popf mov scas fiadd add mov icebp xchg sub dec (bad) xchg mov movsl push cmp ret fwait je inc add scas fdivs js popa mov insb or sarb psubusb push pop in inc into pop mov out add push mov inc pushf dec cld shlb add mov or mov mov icebp mov into stos lret push fsubp jg in int dec mov mov test imul jne test jnp out aad scas jbe lock pop xor (bad) pusha out xchg jnp daa mov adc (bad) (bad) (bad) dec mov push xchg test in adc xchg xchg jnp xchg xchg in sbbl stos dec xor pusha lods pop inc mov (bad) sti mov idivl adc enter inc and mov jno mov push sar xor mov fist mov jge icebp xlat out sti cltd out jl pop xor or pop ljmp xor rclb mov xchg nop jbe cmp push imul imul sbb outsb cld pop popf inc iret cmp jo dec mov dec fsub lods jle das jne sbb cmp pop shll xor pop adc jle orb addr16 andb dec data16 adc or loop sbb push push test adc mov inc pmulhuw inc xchg and mov mov mov rorl push in les mov mov fs std mov decb inc mov leave dec jle xor dec mov jne jmp sarl icebp out (bad) cmpsl cmp and insb sub ret xchg insb cwtl andb lret cvttps2pi dec mov pop jo pop mov test dec adc jle out (bad) fisttpl inc pop jl in mov push ret inc or xchg push lds add mov jnp outsb repz jo out mov mov xchg cmpsb sbb xor mov (bad) das mov push addr16 lret adc inc jp dec xor daa loopne test (bad) aad js lods loope pop sbb and leave ret repz loope imul and bound sub bound pop test or in (bad) push stos cmp in stos les insl jecxz ja pop movsb fstps pop ja dec jnp dec fsub lea rorl jnp bnd pop and (bad) mov or sub aam jae or movsb repz lahf adc mov cmc imul ljmp pushf pop push sahf outsb jl push push aad mov outsl dec and add dec clc jno daa jge add jo jae and sti insb ja pop bound ja stc and in pop pop add (bad) imul out pop (bad) aaa test cmpsl jge add gs push lds data16 jns movsl mov mov call pop shrl pop in stc int3 xchg mov popa outsb (bad) (bad) xor mov push cmc ret push dec add mov pop mov pop mov imul xor dec jno jle gs dec mov fcom lahf xlat cmp fiaddl cmc rolb jns mov xor loop sub xor dec shrb inc cmp add sbb scas inc adc mov mov pop pop stos stc int3 xchg je enter repz andb sub push out fsubl aad lret cmp push and call add push sbb mov and (bad) das jno shll outsb popl dec mov dec add add ds mov add push jbe dec dec (bad) push repnz scas push xchg lock pop xor sbb mov in dec nop xorl enter pop ljmp lahf or lods (bad) xlat mov mov and out lret test jge frstor aam cmp in imul aad sub push pop jns dec adc (bad) xor fldenv shr lret mov add stos into inc mov (bad) je sub pop pushf call daa cs push popa push in sbb in int3 popf lods rol xchg jbe inc sub sarb faddl (bad) pop dec or stos sub push outsb cld add mov stos xor movsb xor sub cmp imul out (bad) sub aaa aaa adc mov add sub pop lods (bad) add stos mov shr mov aas jo push in jp lock testl (bad) sub cmp pop data16 pop outsl cmp sbb push dec (bad) jecxz mov test js shr fmull dec pop or lods add lret adc fwait add bound mov inc pushf pop adc movsl stc cmpsb push outsb jg sbb shrl xchg nop jns test and mov xchg lahf cmp dec pusha lods mov test movsl in push xchg xlat (bad) lds or fcompl gs mov mov xor nop sbb mov mov jo pop or and add mov cmp jae jp int lds dec and test (bad) cmpsl jmp or adc pusha dec xchg or movsl scas test and sarl je aas xchg addr16 js fisttpl sahf pop popa sub mov and mov sbb mov fs rclb fucomp stc push xchg andl and fld1 in (bad) dec pop out adc popf lods mov sub mov sbb shrl popf sahf jge in adc xor push xchg rolb dec insl inc cmp lds iret aaa cmp daa xchg shrb enter pop ljmp dec aam jbe scas test mov push (bad) testl inc and and mov cmp push and les outsb cld bound lret cmp popf jl mov hlt xchg xor shll adc (bad) ljmp jbe xor andb scas xchg bnd sarl ds pusha out dec fdivs inc mov mov cmp jns sbb inc jmp lods aam ljmp fs or mov xor popa push in and sub or scas fmull or outsl push cli fcmovbe loope mov ret loopne xor dec sbb lds jnp and hlt (bad) adc or dec push orb outsl or lcall sub in rorl sarb xchg dec outsb pop adc xchg jae out in jp xchg ja popa ret sti add popf push add jbe push movb cwtl addl shll jns insl mov adc pop int xchg mov scas cmovns push cs sbb adc loope hlt arpl outsl mov mov lcall or adc sub shll lret mov pop imul add and jge add loope jae pop insb test sbb out inc mov push loopne cmp dec sub stos fildl lret data16 jmp add dec (bad) xor scas test pop sbb or inc into adc push xor adc (bad) or mov into imull outsb pop adc insb test call and ljmp cld stc fsubs mov (bad) fstl test jmp incb int3 xor in push daa bnd cld nop push adc (bad) jmp jnp and movsb iret add ljmp lret gs sahf jp sarb jle leave jle push je adc into xorb pusha pop in stc int3 xchg jnp push xchg lahf push sbb mov push iret cmc iret mov (bad) outsl pushf jl (bad) cmp data16 cmp fldcw inc lods xor in (bad) jb bound loopne xchg add xchg (bad) mov pop iret xor add scas stos ljmp mov je add jno add xor push addr16 or sub pmuludq xchg test call inc stos inc pop out dec (bad) xchg jmp jb fidiv push movb cwtl addl add sub bound sub xchg sbb jne adc ja lds mov or roll bound dec (bad) out (bad) jl pop sbb shlb jle gs xor shlb notl mov in jp adc mov js idivb mov inc sub sahf push mov xchg push (bad) cmp pop mov (bad) xlat and add cmp cmp mov call inc push repnz not inc test out daa cltd jg in call in ljmp arpl std int3 cwtl js lret out jl iret jo xorl int3 mov sahf data16 xchg dec mov into inc jmp (bad) mov mov je ret rclb lea adc dec push imull flds add push push fwait push inc fstpl (bad) aad xchg lock shr imul sahf jl movsb adc sbb into sbb sub xor mov xor or dec mov pop pop jns test mov push cmp dec sbbl ljmp aaa test pop mov add out (bad) mov cld bound insb nop mov fisubrl (bad) xchg iret inc sub movsb (bad) jecxz test cs dec (bad) xor sub jo lcall cs mov or lcall inc dec xchg pop loope pop call scas mov fsubr je ret dec inc mov push in les xchg clc jno add dec loope ja in das inc rcl sbb sbb cltd jmp xor out adc cmpsb dec fsub xor inc adc mov sbb data16 inc mov stos jp jl pop and iret push mov jp (bad) ja test call cmp fist add clc and cmp ds jne adc scas push fmuls outsb cs inc popl pmaxub jno,pt sub push sub add mov pop outsb push inc xor jnp lret mov popf adc inc mov xor sub xor xchg push fnstcw lcall aas fmuls cwtl mov icebp push xchg jb cmpsb pop mov scas cmp pushf cli (bad) fidivrl daa addr16 cltd jp cli add jae mov xchg std ds cmp add fmuls inc dec push fsubrp ds lahf loope sub mov add out adc movsl dec fsub xor inc adc mov sbb xchg aam lahf cmpsb jle jl cltd into push pop rcrl mov test pop ljmp xor sti les inc int mov outsl dec (bad) mov and (bad) jmp dec cmp fldenv add ret mov jb mov add xor and xor fldcw xchg or movsl jl aas sub call test ds int pop out xor cmp xor cld push mov xchg stc imul jge jp add xor dec xchg cmp fcoml loop,pt test (bad) shll ja lock sub stc pusha add imul fadds lods jl mov jb nop sahf sub sbb arpl test lcall jl pop and iret pop mov jp (bad) jae test std adc out mov push and bound jg push cmc popf fisttpll icebp in fimull clc nop add inc mov add pop push mov push add or push or pop mov test sub and (bad) xor push xchg ret sub (bad) xor cmpsb lret (bad) fcompl sub dec leave dec mov inc pushf test xchg sbb les out rcll push lods push push mov (bad) das mov push mov test pop push fidivr loopne lods loopne int3 xor add add push int3 fcomp out dec add in adc arpl or subb push mov jnp (bad) hlt sub dec xorl outsl xor or pop ds pusha out sub cwtl dec mov xorl out dec dec cwtl (bad) andb mov dec sbbl and nop je mov shr jb fisttpll cmp push loop cmp imul cld add faddl clc adc fsub movsl jle (bad) xor xchg aad push adc imul mulb repnz scas cmp add pop xlat ret popa test xor sub into push mov dec rorl sbb clc and fcompl decl popf insb cmp mov imul scas push mov popa push cmpsl xor nop fdivrl push jle xor sbb cmp cmc mov cmp out adc stos dec fsubr mov ljmp int3 jnp scas xchg jno cmp in or fiadd (bad) jnp adc lret push xchg jo push sti adc mov dec enter clc ret fnstsw sbb ficom loop push jb test dec fdivl cld mov out ds nop mov fisubrl enter inc cmp enter imul sub jge adc ror push mov sbb inc push mov inc xor mov dec mov loopne mov daa pop iret test mov fidivr lret and dec jbe cmp push imul imul in in es loopne pop mov cmpsb mov add xorb mov push (bad) inc mov mov rcl fcmovnu xor divb mov (bad) push mov push ljmp xor testl imulb sub sarl cld insl fild adc and js je enter push add mov push repnz inc xchg movsb jmp test stc bound pop pusha xchg cmpsb ficoml clc xchg aad movl adcb sub push shr addr16 arpl ljmp pusha xlat dec lods fistpl out jl pop xor or mov fmuls pushf or sbb clc ret jnp jbe lods cmp movsb (bad) pushl daa mov scas add mov adc rcrb inc xchg into in shr pop int (bad) shr inc xchg pusha push mov xchg roll push jmp jge popa jg sbb jb mov xlat inc mov and mov pop xor stos xor test aam adc leave rcrb loop call outsb dec (bad) arpl outsl loope insb and fsubs sub leave cmp sbb mov stos add popa xchg sbb jmp (bad) out sbb adc cltd or aam test movsb push lds push and iret pop xor xor mov in call pushf mov cmpsl push xchg test pop cmc les aad pushf push sbb push mov dec data16 iret fadd push imul mov inc mov in mull mov cli mov lcall out mov xchg movsb (bad) sub jmp jg popa jge push ds fild ret adc je repz cmp and fnstcw movl cs ljmp popf or lods fistl movsl sbb lds add and (bad) stos cmp (bad) popl jae call and sub scas and test cmp xlat inc dec sarb (bad) xor xchg pusha push xchg rorl jge adc fwait jns loop jp scas jbe lock cmovl sub pop in inc orl aaa ret xchg and test add cwtl pushl adc mov inc add dec daa inc fcomp arpl add fstl and (bad) (bad) xor fcomps int3 loopne movsb xor fmull xchg arpl inc mov cwtl jne sbb inc inc fsubs (bad) popf cli or (bad) push pushf pop dec int xchg jge cmp pop xor and inc adc jb push test loope push jl cmp xlat lods (bad) push ret jae cli out out (bad) mov test stos push (bad) fnstenv ret push mov iret loopne mov test ror inc jge insl cmpl or fsubr mov inc int testl xchg adc ja jmp stc cld in cmp fnop pop in jp jle push inc into aam addr16 pop out add inc outsb stos shrl xlat cmpsb jbe nop xchg stc cs and add cli mov test adc mov sub enter cli (bad) cmp fs fsin dec cmc rorb add inc push aas ljmp sbb mov cmp iret inc pop push rcrl mov movsl mov rorb mov pop sub mov xorl mov popa or adc int3 cmpsb mov dec mov nop je mov scas mov add sbb cmp dec and fldcw sti mov mull and push arpl dec pushf idiv outsb mulb mov inc imul aaa or scas inc jp insb jns add push or jns mov repnz lret aas cvttps2pi in or add (bad) xor mov mov pushf imul mov push les xor out fmull or mov dec pop adc mov sub dec mov add push daa hlt or pusha out movsb aaa aam jnp fs cld int3 jg mov lea cmp xor adc mov mov es mov or lret sub sbb mov xchg rorl jmp mulb xor sahf popf fisttpll icebp in xchg dec and and jne adc pop (bad) movsl (bad) jne call fwait xchg jae ljmp scas rcl out mov dec shlb in mov rorb mov jle aam xor aas push lods jbe dec mov lods push pop adc enter pop ljmp incl daa scas cmp push mov (bad) mov lods mov adc pop mov push jb push leave inc xchg call xor loope xchg sbb xor xchg hlt mov inc sbb test aam aas aaa les add sub lret stos js cmc add stos mov sub shll sub jle cwtl stos and pop jle outsb inc into xlat in cmc dec jl cmp xor cli sbb jl (bad) xchg icebp (bad) psrlq mov jno stos cmp xchg cmpsl mov mov and inc jle lahf mov xor pusha std sbb ror dec jge sbb xor sub xor (bad) fwait lret and and jmp xor adc dec jle sbb scas jge cwtl loope stos cwtl es lods inc aad sbb pop imul dec lcall insl and cli sbb push leave (bad) jbe (bad) push mov lods add addr16 add jecxz ret insb adc (bad) movsb xor lock cmp sbb ja ja sbb maxps rorl call out or mov cld sub adc cmp or loop shrl jecxz inc xchg and lret dec jl js les jo pop cmc rcrb mov loope fwait pop insb das nop data16 cmp fbld std cmpsb xchg add pop mov dec out push enter pushf inc adc mov inc test lods maskmovq in aaa paddq mov push sub scas js add lea add mov rclb push cmp or hlt imul cmpsl test xor mov scas cmp psrad xor cwtl (bad) pushl mov fs mov mov adc loop lret inc xchg (bad) in hlt jmp int lea das movsl jp and dec sub dec fsubr mov xchg pop and js call pop out cmc mov aad mov leave in aaa aas cvttps2pi jb sub ljmp lahf or scas mov push mov ljmp sbb push lcallw popf jl dec push xchg int push daa imul ficompl ljmp mov in pop iret cmp fistp (bad) mov jmp sbb xchg pop clc std mov and les cwtl es pop mov pop jb enter push sbb mov push ret xor nop je mov aam jb data16 jae (bad) fistpll adc push loopne lods in xchg jecxz sub add rolb adc dec (bad) arpl out pop rcl dec fldenv sar (bad) cmc mov or mov jmp pop sub pop dec mov aad and inc movsb dec addr16 jle fisttpll fwait mov (bad) xchg mov xchg jns adc stos dec or imul (bad) ds test (bad) shll or mov xor dec addr16 or add int mov cmp jb dec fdivs mov mov or pop mov jne cmc xlat pop pop or dec fdiv and ljmp test jg sti imul rcll inc (bad) clc push (bad) mov divb lods sbb xchg mov stos incl mov in (bad) jmp mov lcall fisubr push movsb xor cmovno fdivs nop and scas cwtl jl fnstenv jns mov xor sub or stos jb sub rcrb and mov mov es or ficompl and xor sti adc mov jne sbb lea jb or adc test addr16 leave cmp and jg and push jmp into ss dec xor and jmp hlt mov insb mov stos sbb clc ror inc mov sub out lock repz lcall icebp xchg dec mov or mov es mov call cmpsb mov cld pop mov rorb sub sbb jge dec inc insb sbb loop cmp inc xchg add neg orl add aas mov scas cld aam jecxz mov aam mov mov adc xchg addr16 arpl ljmp push insl adc push enter rcrb imull stos xor pop out cmp mov inc fldl std outsl dec inc out push in mov mov es fs jle (bad) fbstp jg ret jl dec inc sub push push out jg pop popa push loop push mov daa in xchg (bad) insb dec (bad) jmp aad scas inc mov sub cmc addr16 test push in jp jle fs into fildll fs lret arpl xchg mov mov inc ret stos cmp push imul imul mov into mov add jo ret fs fwait icebp into xchg and cmp mov cmp mov cmpsb lea lods mov addr16 pop mov pop mov mov pop add in stc int3 mov jg icebp imul jae or scas cmp sbb (bad) lods cmp sbb push (bad) pop push xchg push or jae add cmpsb mov je insl cli mov cli mov inc dec mov aad jge xchg dec push mov inc js das mov (bad) cmc arpl jmp test shrb sbb into ss mov mov out push divl jbe pop movsl dec (bad) xor jo inc out push in dec lcall sbb add dec pop call repz sarb fcmovu dec fsubrl ret clc mov sub jnp,pn and (bad) adc inc dec (bad) fs jne loope mov das test in in adc jp pop sbb pop ljmp xor jbe pop lods push (bad) xor adc mov xchg out sub ljmp sarb loopne cld mov popa cmp ss sbb movsl mov dec and and mov fwait or leave (bad) imull fs ret sub in xchg push pop in xor pop pop in testl jl push ds xor ja xchg lods cmp aaa cmpsl sbb (bad) aad cld rclb in orl dec rolb or sub and ja dec int3 xor add inc repz hlt fsubrl inc xor stc cmp sub aaa scas test mov jae add xor sub test addr16 mov outsb pop mov add rclb call push ret stc mov pop (bad) aaa test sbb jne fistp shrb push loopne iret dec xchg jecxz dec lds xchg add test shl enter imul aas mov jecxz lea imul into inc mov sti clc popa xlat dec adc popa mov push inc rcr sub push push fldcw push xchg and lret cld imul sbb aas cmp sbb adc push loop scas fs dec ss shll jns insl in mov add rcrb (bad) mov mov pushf cmpsl in adc xchg (bad) out int3 inc mov pop mov sub (bad) lock or cmp push jl sbb mov and rorl mov or or xchg push fdivs add mov lahf outsb sub xchg das cwtl pop lahf lods lret xchg mov ds and mov movsb inc xlat push push out jp pop popa xor cs or dec cltd outsb dec fsub xor fnstcw xor dec cmp cmp sbb mov push cmpsb repnz sub mov push lcall push inc adc sub out pusha je call dec popa or out es inc inc outsb popf fisttpll repz rcrb stos cmp cmp test sub xor mov push ficomp fstps and aas ret in xor or mov and adc rorb icebp je push aam test lcall xor jo adc pop in icebp dec lcall cmc push cmp cmpsb pop xorb sub cmp push sbb test hlt jg (bad) push popa mov or fnsave lcall push pop ret lods pusha insl sbb jp xchg xor (bad) aas xor and and mov rcrb push cwtl sub orb sub leave pop bound xor inc cmp test popf divb sti ret into push int3 xor add clc and push (bad) mulb mov gs (bad) xor add (bad) fidivr (bad) pop xchg jno sbb cmp mov push outsb rorb jno push mov in idivb pop jle outsl or hlt setl sub mov xor aad lds inc jne add fwait mov (bad) xor mov loopne divl cmc (bad) shll dec (bad) xor mov push push (bad) xor pushf inc inc loope mov aad push cmp sarb fnstenv add cli fimul and sub add sbb xchg xchg pop cmp inc pop xchg test enter fsubr jns in popa shr lds jp inc mov int3 xchg lods sbb shlb cmp enter push in stc int3 sahf dec mov inc pop push xchg (bad) loope,pn mov push and test pop sbb aaa adc mov stos mov push push popl fcoml or push jne sub test xor movsb mov data16 jne adc iret inc sarb push scas shll js adc inc sbb arpl inc (bad) bound or xlat dec push pop and jne mov pop cld and adc cmc outsb fisttpll mov and or fisubr mov outsl push leave fldt cld jno (bad) xor mov movsl addb out bound and xchg add fisttp jne adc iret inc sbb and flds daa in mov aaa or cltd data16 lds inc jae pop xchg sub icebp or adc and jp xchg in lret dec or js sbb mov scas cmp pushf idiv dec cwtl dec cli rol out in orl mov or rcr mov mov clc mov lock nop mov decb mov jb mov mov xchg push frstor or call mov fwait mov inc mov in cli mov push movsb into jg enter sub fisub into shll imulb dec mov (bad) pop and mov ret jmp push imul push jbe jo fidivrl andl rcrl je (bad) popf inc outsl add stos mov inc mov xchg cmp cs inc js das mov (bad) repnz jmp (bad) repz add loop shrl mov xorb and or push mov add test dec jnp (bad) xlat es or lret mov adc ret dec fstp nop add adc add or and dec stc data16 or jne test mov pop lret mov cmp call out jl adc (bad) xchg xchg and sbbb and mov enter pop gs iret cmpsb lods cmp push mov (bad) xor add (bad) fidivr pop sbb cmp mov push outsb rorb jno push mov in idivb pop jle out or setl sub mov xor aad lds inc jne add or gs push pop dec mov fisttpl mov dec sub pop call dec (bad) xor and jbe mov mov insb xor add mov cltd insb ds push insl jecxz jbe pop pop into add push sub ret dec das clc jp pop (bad) call jnp mov jecxz jle popa jl add imul mov mov push movsb (bad) push or mov fidivr into fildll jl sbb ret mov push ret mov sbb test dec cld shl mov cmp ss fnstsw xchg add sub add pop mov pop pop stos mov mov cmp frstor insl hlt (bad) adc aaa (bad) or sbb aam jae sbb nop mov shlb imul (bad) (bad) clc push in jp ror mov push lret lcall loope jecxz inc lods ljmp mov fisttpll and sti adc xchg loop (bad) clc jg mov outsb cld incb sub leave insb cli add pop shlb scas rsqrtps push jns mov xchg pop or mov ljmp adc lock adc pop (bad) jl repnz add fs and test aad pop or and xchg pop call popf cld xchg add sub repz sahf push stos cmp mov test xchg fildll add div xchg shl into rorb sahf setno inc mov push cmp enter in popa shr push fisubr jg scas ljmp repz movsl or (bad) scas xor mov fisttpl or push and jbe xchg ja aam xor je push push (bad) cmp adc pushl daa xchg pop loop test cmp cmpsb lret push ficomp hlt loop into and xchg hlt scas es jo adc fsubrp mov dec (bad) mov inc inc xchg (bad) lock loop sub mov leave xor mov mov es es pop out or xchg push test out pop sbb daa fist inc lret cmp jecxz std mov decb cmp outsb cli mov mov test inc mov or adc data16 push dec sub ret mov adc bound xchg in lcall jae out mov in (bad) repnz mov ss pop call scas cmp mov cmp enter add sbb outsl cs mov out (bad) mov cld bound ljmp and cmp mov add dec or (bad) fwait adc rcrb rolb xor sub loopne cwtl es push mul jp cltd mov imul ds fimul je xchg movsl outsb xor in add je mov cmpsb mov xchg fwait stos cmp mov icebp andl push fisubr fbld sbb cltd xor cmp cmp (bad) idiv cs dec pop and adc sub or push je jno aam cld repz inc js lret out jl pop arpl or mov and fwait scas cwtl pop xchg and jbe (bad) lods jecxz fwait aad lods test out mov out test leave fcmove ss daa sub xlat sbb insb cli loop sub sbb in or adc adc idivb fsubs hlt inc push dec dec mov push push pushf sub jle mov adc mov bound mov mov aas int3 imul cmp and push imul or pop in repnz test incb pop nop mov sub insb stos loop into xor xchg or movl mov data16 sarb inc mov in push pushf inc test pop daa clc xchg repnz sub (bad) mov mov mov ror sub pop addb addr16 (bad) adc call mov je nop dec sti rolb jb into dec and mov xchg mov xchg mov xchg mov xchg pusha jle jp add dec mov jo push mov data16 aad roll dec push mov scas arpl push push mov jge cwtl movsl leave mov or fsts mov and aaa jbe clc and cmp sub pushf icebp imul mov mov popf stos cmp or push mov dec mov mov jae ret lods clc fcomps xor clc xchg push mov (bad) mov mov out mov movsb lock aam mov dec mov or es loop pop in stc enter (bad) es js ret je xchg dec movsl pop std pop mov out cld add sarl push push add and test mov arpl xchg cmpsb ss mov nop mov ret dec pop stos cli (bad) cltd sub cmp movsl sar enter pop mov sub add sahf jp sarb jle push push lahf adc into cmpb pop mov enter bsf jae test call and shll push cmp push in add fnstcw decb test jg sbb rorl aad mov movsb bound dec adc mov ja adc hlt (bad) adc out (bad) sbb mov xchg rclb mov cltd inc sbbl lret inc into pop and mov xor aas int3 or jg jo dec or out mov lods cmp call int3 mov pop loopne inc lea test lcall sti idivl fisubr adc push dec dec xor pop jns and mov pusha imul xor (bad) sbb out je je sub jle pop scas es shll xor enter rorb add into xchg and (bad) es sub data16 and mov adc es or add nop cli inc aaa ljmp outsl cld mov clc push dec inc test pop aad dec mov or fdivl dec push out roll clc mov inc push pushf sub int mov mov or dec jle icebp test sbb repz lods divl (bad) rcr (bad) mov jp cwtl scas cmp pop xchg fs dec xchg nop jne call mov sbb push dec pop or xor sbb imul jno dec xchg lock aas xor imul fwait lret ret pop mov orb ljmp pop int ror xchg fimul or pop jle ja into xlat cmpsl jo xchg dec mov jbe sub scas cmp or daa (bad) iret push in or sbb mov movsl pop push cmc jno jg xor aam pop cmp dec mov call call or (bad) out mov fwait jmp in and aaa movsb push int loope bound sub out and inc nop pop in xchg or cmc xlat fs xchg and push iret xlat outsb data16 mov or nop dec (bad) ss add mov scas fiadd jo out (bad) mov cld fimull es mov movsb pop rcrl adc mov pop test lods (bad) pop (bad) dec outsb or int3 cmpsb sbb popf sbb cmp pop cld (bad) dec inc mov or dec jo icebp mov sbb sbb rcr cmp push pop jo jb mov dec scas push lret movsb sub je std lea fucomi loopne push loop cmp imul je pop xchg fcoml xchg fisubr push repnz int mov mov push push sub stos add leavew (bad) adc and orb sub push lcall inc sub xor or mov cmc mov fwait mov mov xchg lods sub push or lahf outsl lahf inc xor and add nop or aas jg adc mov mov rorb hlt sarb (bad) call test mov sbb rcrl out enter jmp mulb xor insb pop repnz xchg scas iret dec dec cwtl lret xchg dec mov adc sub push insl xchg pop push cld mov popf fisttpll repz cmpsb pop stos cmp sbb or xchg stc cmp add in outsl cltd or ds in jge in pop cmpsl mov ror push (bad) dec cltd adc add cwtl bound adc sub xchg xchg push mov pop mov aad pop xchg push and movsl dec idiv add mov fstl cmp int3 rcll inc inc add sub lea mov and xchg sahf in lds (bad) and jnp imul xchg pop jb test sbb arpl movd or push das enter push xor pop xor push (bad) push push xchg mov lret jnp cmpsl (bad) adc adc lods add inc (bad) pop std jle pusha or fldlg2 mov pushf fdivl add jbe jb (bad) pop cli or adc pop and xchg sub dec push outsb call jg fnstenv dec mov add pop sti iret mov push mov (bad) loopne hlt jo jecxz sub dec xor mov inc push and out in adc xchg or call push xchg jns shrb scas ja dec cmp icebp mov cs lods lock lcall data16 notl cmpsb dec fiadd mov into cltd mov dec or repz mov sbb push add jecxz xor jle dec les mov or imul add and sub int3 in push outsl dec pusha xchg (bad) jecxz insb adc sbb lods and cld std mov test or inc push and push jno ret fcomp popf dec mov lock iret cmp packuswb xchg jae adc mov repnz cmp mov pop or shr push aaa xchg xor negl pushf shll push out and jbe jp outsb cmp (bad) jnp push scas push lret sub jno sub rcr and sub leave daa cmc in (bad) jb mov cli fcomps fdivrl adc push push sub data16 setbe mov inc push pushf in ds lods arpl jnp lcall or (bad) (bad) ljmp dec xchg jns (bad) lret int3 pop das lock jmp scas cmp pop out push outsl loope mov mov adc xor rorb decl loope lods (bad) int3 sbb xchg pop test rorb pop jns and cs and add roll pusha addr16 (bad) adc jno sbb add mov test xchg xchg into dec pop out jo cwtl dec mov jp imul ljmp or clc incb xor nop push lret xor stos sbb sub mov sub test scas inc pop mov xor aad sbb or in (bad) xor les xchg sbb (bad) dec fsubs adc xchg sub and fwait and pop mov xchg pop int cmpsb sub pusha test (bad) ficom sahf mov mov inc (bad) add xchg jb insl xor and mov mov fisttpll icebp in sahf lahf xlat sub pop imul in (bad) xchg and lds loope cwtl insl movsl xor cmp addr16 sbb test jnp and test sbb movsl adc mov jle arpl lock enter dec pop outsb out jl repnz int3 fsubs hlt push mov ljmp inc faddl xchg mov out adcl lcall xchg stos xor jo push test xchg lods xor add out inc int3 arpl jae push and rol sub mov pop inc mov lret je repz lcall mov repz inc adc or or sub insb pusha out dec xchg cltd mov rcrb jle (bad) test ljmp int3 fldcw adcl mov test popf lods cmp lahf mov (bad) lret call and mov xchg adc movsl cmpsb xor pop push cmp ficompl fdivrl adc mov and push and fldenv push and and out xchg xchg mov aad sbb cli xlat xor daa cmpl add (bad) imul mov lea jae and mov (bad) dec out js nop sbb sub hlt and mov (bad) cmp es rcr and fldenv fwait xor push ficomp std mov movsl xor cmp out xor push sub sbb cmpsl insb pop pop roll sbb stos (bad) mov adc mov xor out or adc adc ss dec rcll daa lret add cmc pop pop loope (bad) (bad) iret dec clc xchg push mov cmpsb mov add push outsl jecxz mov add fmull and ja sbb fs dec pushf orl mov pop in (bad) mov aam sub jg adc sub sarb repz mov orl lahf imul lods pop sbb or push ret je rorl call push ret stc cwtl mov push adc inc bound push stc mov dec aam gs mov mov stos dec push inc xor dec fsubrl xor test pop cltd adcb mov and out scas xchg jno test push pop sbb data16 cli insl pop sbb pop ljmp lret jbe pop lods push (bad) xor adc mov lahf outsb xor jns jo pop ljmp js sbb in add and rorb inc mov xor test dec dec or (bad) xor repnz or xrelease dec mov rcrb xchg adc mov mov mov aas int3 imul and cmpsl sbb and fmuls sbb (bad) outsb std mov cmpsb mov cli pusha mov push in insb mov pop mov insb dec ljmp mov add xchg sub int adc or mov lock inc xorl dec push cwtl es mov mul xor inc movsb pop mov mov or mov push jmp loopne je nop inc daa fist rclb inc sbb xchg std mov hlt add pop lods mov xchg sbb leave dec fsubrl mov cmp add aam in in sbb in jge sbb adc or push lcall dec shlb cmp adc add loopne (bad) test fist xchg and sbb pop mov ss and add dec xchg hlt sti xchg or xor mov decb arpl add mov movsb bound push xchg pop jns xchg jmp lds or dec cltd push dec fsubr orl or mov mov sbbl cmp int movb mov sbb push push std and mov mov popf mov inc pop fldenv push out movsb cmp push imul imul pmaxub add test xchg mov cmp shlb in or mov push pop dec mov jecxz divb clc scas (bad) stos out adc out fxch add (bad) lock mov stos sahf mov (bad) decb lret out add push xchg push mov mov jbe xchg dec scas mov test je (bad) dec and jb or cmp repnz js sbb xchg sub xchg mov xchg pusha and test xchg xchg mov or inc dec jns dec fmuls call mov fwait mov mov cmc (bad) jp mov xorl mov fadds mov xorl sub push adc cmp (bad) aaa enter std call inc fidivr jae nop je push fstp push or aam push decb sbb cld mov stos data16 fdivrp into int3 aas mov scas lock sub jge xchg dec push mov fistp adc fs push sbb mov js lock and inc shlb clc xchg cwtl es xchg adc xchg and adc xor mov (bad) adc push cmp aad test nop push cli rclb das push cmpl pop mov mov xchg fstl pop ja xchg loopne pop sbb sbb adc xor ds imul adc push and pmuludq cltd lret rclb fs out scas icebp xlat out lret fsubr jl cwtl dec cmpsb iret pop xchg test (bad) ja push push pushf mov push and and das mov outsl negb xchg stos cmp pop lods jo les cwtl mov fwait sbb loop fisubr and fsubrl or mov jg ljmp hlt (bad) popf or inc mov movsl inc mov (bad) lock mull mov push movsb cli stc lret cmp sub int3 sbb pop imul call inc fistpll jae nop popf adc call mov ret push loop cmp mov les outsb cld bound xor fldt out adcb cmp outsb xchg mov mov test lret data16 mov ficom jmp jae xchg mov test jmp je jo incl or aas xchg and test inc ljmp loope call scas cmp mov push add push in add sbb cmp mov lods gs mov sarb cli mov shlb inc lock popa clc xchg sub testb popa hlt (bad) xchg push push rolb inc mov xor pop jge test jmp je pop mov in jp xchg int3 sub add pop insl mov fwait jbe sbb xchg jbe sub push mov sbb sbb mov cli xchg test add repnz inc out cmpsb xor and cmp movsb jmp fdivs lds inc sub leave data16 (bad) adc arpl cmpb pop or (bad) lock fdivrs ret out jl cwtl es and or inc into or nop xchg jge dec push int3 xor sti mov scas cmp push push push nop push (bad) cmp xchg push mov cltd insb sbb mov mov rolb mov xchg pusha ss dec enter push repnz adc xchg or (bad) test add inc adc loope hlt pop lret mov or shrb push into into push mov les dec ret or pop loope xor add dec or je xchg push lods cmp sub fsubrs popl pmaxub add fsubl mov mov sbb repnz jg mov fsubr mov rorb jmp ret sub aam cs xor mov adc imul aam (bad) and (bad) adc call sub mov cli push (bad) cmp fdivl push decl loop cld mov in ret test add arpl xchg aas xor jno sbb or xor xlat (bad) and add mov jge lock adc or cmpsb call lret fcmovne pop imul loope jecxz jno packssdw cli ret mov mov dec inc lods pop push loop stos jo (bad) mov cld mov pop xchg cmc adc sti insb mov sahf jae dec popa jmp xor push dec fdivs pop inc jnp pop sub mov repz sbb and outsb xchg lahf sub mov movsl push xchg test out pushf or fadd imul cmp pop call and or push rclb mov mov jne add fucomp out fcoml outsb jne les popa and push movsb mov adc push cmp mov test xor (bad) adc and xor adc mov fs sub mov je rcrb repz pop jecxz mov ljmp sbb stos jecxz fwait push insl mov addb inc rorb stos cmp adc in rolb mov cld sahf or popa push sbb sub fisubr shlb bound dec fisubrl or mov sub cs loope jge arpl sbb aam jnp add cmp shll popf adc subl popa aas hlt (bad) test adc dec (bad) xor sub adcl arpl inc lret orl cmp push loop jne inc imul xchg sarl xchg push add push daa (bad) enter jae dec popa push adc xchg dec and inc js cs jbe arpl jmp jle lcall and xchg mov pop sub adc sbb mov dec roll mov aam ret xor outsb loope mov mov loopne and xchg jp (bad) push lods les stos hlt xor cmpsb xor push push mov ror mov repnz xchg inc push sbb test pop sbb push pop outsl movsb adc lock jl sbb mov (bad) adc jl scas call add fnstenv cmp dec cwtl mov les loop add out daa inc fcomp mov stos cmp pop mov mov lods dec loopne cld fisttpll xchg push push fsubrp ds fs leave adc inc insl jge (bad) jo rcrl inc mov jp adc fs sbbb scas push hlt lock pop add xchg push mov js leave adc or lret jmp and sarb mov stc mov dec mov push js sbb pushw dec inc lods ja loop mov sub push outsb cld add pop ret push cli loop int3 rorb clc in adc xor dec mov cs aaa rorb aad xorl sub stos and adc faddl mov pop arpl in stc int3 mov mov cmp cmpsb pop (bad) jb adc cmpsb insb fwait femms jbe nop push das (bad) shlb test cwtl punpckhwd mov ja or mov jno sbb jg pop push aas sbb daa push pop movsb sbb or fwait aad xor bound sahf sub shll pop push iret mov jb and shl sub pop pop test sub sbb cwtl out (bad) in aaa cmp popf or insl sahf xchg and inc ret dec or mov stos arpl mov std mov ja adc std dec sbb arpl das add adc mov pop sbb pop (bad) xor cmpsb adc pushf mov jmp jle dec stos jb out mov mov iret xchg mov and movsl xchg lahf mov rolb mov cmpsb mov int3 in je clc cmp push outsb cmp sbb fistp jecxz decb xchg imul dec iret rorb sbb push xor cmp ds inc js cs jb arpl jmp xor shrb add push jecxz mov cld and clc imul mov movsl pop and (bad) mov cmpsl gs negb sbb mov push dec mov mov add push leave cmp mov mov ret fdivrp mov fsub insb ret in iret inc lds pop movsb jg and xchg mov ljmp cmc inc bound add and mov movsl push outsl mov popa inc fstps test imul jge call pushl std ret xlat push in les insl mov ret xlat adc fdivl push fisubr xchg pusha and test jae add js sbb adc fs (bad) inc adc add mov lahf jno test in mov (bad) pop pop dec inc lret ja rcr dec roll sub call push repz or sub mov or test mov mov cld mov lock pusha int xor lds xchg popa xor insb jecxz (bad) fwait pop cmp cs sahf insl mov addb xor pusha mov or sbb jo cmp fisub fldl sbb or and add push push addr16 inc int3 push call sub mov into xchg dec addr16 mov stos sub push mov jns adc outsb cld loop aad ret jmp (bad) push movsb fidivrl jbe data16 mov push stos cs call mov fwait cwtl sbbb aam sub sub xor es and jp sbb mov push les pop mov sbb cld outsl popf shl pushf and push lods mov adc push loop sbbb loopne jg add insb cli or xor lret clc xchg pop xchg testb loop (bad) adc imul pushf sub cmp (bad) (bad) cli in lcall jae dec es push and jp adc mov into ss cmpl mov push ret lret flds nop xchg and aaa test hlt jo (bad) jae push fs or scas pop lret inc xchg ret xchg mov test aam mov push pop inc mov out mov xchg pop pop enter ja jp mov aaa cmp mov push stos cli or xchg and enter cmc cltd add mov lahf mov flds and inc iret push jl nop dec (bad) shlb pop inc push decb loopne ja sbb xor add movsb mov jbe xor xor (bad) aas xor out loop cmp rolb sbb into sahf sub orb and xor inc cmp test sbb pushf orb scas cli (bad) xor fist in xorl push lds cs add xchg das jo stos sbb test or fisttp (bad) insb mov test ret pushf (bad) xor dec sbb fsubrs fcmovb xchg negb mov ficom shlb sub sub pop insl jbe rclb out mov and jp inc mov mov in out mov jbe xlat hlt ret pop and (bad) push lods cmp cmp inc outsb xchg out fmull or mov dec pop adc mov sub rclb sub out movsb test sub (bad) popf or iret jp test or cmp out xor js jge,pt out push or fldt inc into pop mov pop popa arpl sbb pop lods out ret xor shl push lds mov push rcr xor jae clc pusha sub stos outsb cld or loop add xlat cli mov sub nop push adc xor movsb aaa ret lahf in push push data16 (bad) jbe jns mov adc mov sub pop outsb dec mov mov enter test (bad) movsb dec mov mov or loop rcr push ret cwtl push push data16 loope cmp and cmp sbb ss pop pusha jno,pt pop pop lret cmp mov mov push xchg xor fstps sub cltd movsb push xor and push out sbb inc mov inc lcall or (bad) lods push pop adc cltd jbe pusha push xchg int sbb xchg (bad) lret int3 pop xor jo mov movsl sbb xchg enter adc sbb imul inc stc mov cmc (bad) mov sub stos (bad) popf aas je mov or adc data16 int3 roll xchg outsl pop hlt arpl push gs lock jns mov out adc (bad) xor adc pop (bad) jecxz int3 mov rcl cmp cltd shrl xor jle scas cmp sarl lods cmp enter daa imul (bad) fistl loop stos bound ret jl or jne gs pop mov iret testb add jge into mov mov jmp xorl xchg add sub mov inc rcl imul int inc loopne push lds ja call push ret inc int mov outsl xchg and test out (bad) dec sarl sub in push pop cmpsb xor lds xchg add inc mov jecxz data16 pop iret aaa fldenv xchg or arpl cmp data16 or pop cmp mov lret lock cltd (bad) xlat dec mov inc push or test gs jae test call loop push mov je in (bad) pop inc fildl cli outsb cs mov add dec dec (bad) push push fsubp jl sbb movsb popa clc xchg mov adc pop roll mov sbb nop sahf sub mov out ja repz call jle sbb mov cltd push pop dec mov pop pop adc (bad) mov mov mov insl dec mov std ret (bad) xor sbb (bad) cmp es lds sub lds out shl pop lret sti into or mov mov clc in es mov mov xchg cmpsb aad dec cltd jne daa in xchg fwait or dec (bad) out lock mov cmovl sub push (bad) adc addr16 pop lods fistpll js shll pop mov xor outsl loope imul sbb mov or popl pop (bad) hlt lret cmp mov mov ja cli hlt mov repnz popf (bad) push jb push roll pop mov jns sbb pushf sub (bad) fdivl sbb lcall xor lods mov popf fidivrl dec mov aad fisttpll or mov push loope cmp shll push lds fnsave std jno cli imul lods pop ds bound xor ja das cmpsl movsb mov xchg test xor arpl in pop rcl or sbb xchg jns lret mov js lods imul jl pop push (bad) test imul mov cmp xchg cltd arpl push outsl fist int3 or lods cmp mov outsb cs imul fidiv mov cmp fstpl das mov mov xchg test cld adcl fisttpl pop pop sbb jns out popa shr sbb xor or xchg subl cmpl dec insb pop sbb pop ljmp int3 pop gs outsl fist lret icebp (bad) insl loope cmp cmp and jne loop,pt cmp lcall jno cwtl int3 xor mov jl mov pop in adc idivl dec and mov data16 andnps jl (bad) or adc aam test iret and inc ret icebp xchg lock mov pop sbb lock loop cmp push ja aam lock mov adc jle push mov mov xchg add adc sbb arpl cmp jecxz loop cmpsb xor imul cli fildl mov clc xchg add mov xor push and jmp aad adc or movsl dec mov loop lea imull aas pop rorb add imul cli mov cmpsb jp xchg movsl outsb dec loope pop lods add mov sti (bad) mov decl imul imul addr16 adc insb mov jmp xchg adc lret int3 data16 mov pushf push call bound xor nop push or out cmp pop cwtl rorb fist add sub ret cld lret rolb nop xchg loope mov ds mov xchg mov push and cld out xchg and fisubrl fsubrl or fidivrl movsl insb dec call jp dec xchg pop and mov (bad) mov xor test mov das pop iret lods leave push pop jmp dec mov into pop mov mov int3 mov rolb stos repz cwtl gs rorb pandn and frstor and fisubl mulb push lea cmp push or push adc add repz sbb add pop repnz and (bad) sbb int3 cmp rclb lock mov (bad) pop push (bad) popf mov lods divl rol cmp shll inc ret sbb and push imul popf scas outsl aaa hlt fmull movsl mul jo shl ss pop and stos dec sbb xor add cli add das jg push mov xchg xchg fadds fisubrl roll repz sbb stos fsubrl (bad) out pop (bad) imulb xor xchg adc jmp je repnz or mov xchg and test add arpl xchg mov lcall cwtl sub loopne inc inc xchg out jmp mov dec pop add mov sub fwait xchg nop sbb sbb scas mov adc adc adc fwait or cmp jle xchg test or or xchg xchg cmp dec lret mov shr loopne jb mov fstps sub test cltd push iret or imul mov xchg mov cwtl pop nop ja sub ds cmp stos leave sbb movsl ljmp lcall orb cmpsl push fsubl repz lcall push or fldenv test bound test (bad) cmp xor daa (bad) xlat rclb inc sbb dec inc xchg stc dec lcall sar mov mov adc mov push sub fadds sti gs fsub testb mov mov mov sar loope mov lds int3 jge in (bad) lock add inc mov (bad) aaa mov mov test jb adc cmp xchg pop outsl lods mov dec and and (bad) test enter push in sarb pop or mov and fnstenv cmc fdiv lods and jl push and enter je jnp pushl dec fsubs fstps pop mov sahf pushf sub add scas fimul pusha mov mov xchg sub hlt fwait je,pn xor repnz fstps pop adc sbb out push add add rclb adc cld ret aaa xchg test test xchg mov sub push inc pop push enter pop scas cmp jp pop fisttpl push jge stc stos push and or movsl jmp xchg fnstcw pusha or push mov (bad) sbb fstpl push repz push lods testl jnp das negl clc and or push push int3 cmp incl dec stc (bad) mov sbb fwait imulb pop push lea int (bad) pop sbb jns sub jg imul ret pop sbb jge pop imul lds pop daa jg and xlat dec ja or push adc cwtl test and mov arpl mov sti popa xor inc sbb notb aaa test dec stc rol adc jo dec sub jae xlat and negb cmpsb xor sbb pop pop xor lds cmp xchg jns cmp fldt or jl iret jp hlt minps mov mov pushf in bound sbb lock xchg popf out xchg outsl cmp mov adc outsb pop ror (bad) pop popa xor push add and imul xor lods mov (bad) sarb add sbb repnz jne add hlt mov scas lea sbb pop sbb jns repnz leave (bad) sub ss add sbb out cmpsl cwtl test add lods lcall sub jo sub aad icebp pop sahf jne inc movsb pop mov mov inc pop clc std dec sahf stos sti xor movzwl ljmp lods incl dec sub cmp or pop mov and mov das mov sub mov dec or (bad) mov data16 lahf je inc push pop cs iret jns hlt or insb ljmp pushf mov mov loopne cmp in or imul (bad) jae adc cmp xchg pop out mov mov inc lret out ficoml fisubl (bad) jno and fbld xchg test push arpl xor jno dec addr16 frstor pop mov xchg dec pop out roll inc mov xor in std stos fldcw sub fnop cli jle pusha sub (bad) movb cmp add push push insb pop int3 sub mov jb scas push lret nop insb nop ja pop inc adc inc ds out mov push stc mov dec pop and mov movsb fstps dec jmp mov pop cmp adc and sbb movsl inc push xor xor pop cltd (bad) mov xchg (bad) xor jge jns mov jnp adc inc mov (bad) ja push ret mov inc (bad) ja xorl test mov and push mov mov sbb out int3 jb jbe push (bad) cmpsb mov movsb push dec sbb enter xor push test lret pop or mov mov orb ret pop daa or mov inc mov mov enter pop pop in icebp pop lcall repz cwtl adc inc push test call or lods mov mov sbb mov out pop in arpl cmp jecxz pop dec hlt xrelease jle rorb hlt add lods mov dec fisubrl leave add inc mov add xlat sub sbb jnp scas out lock sbb incl sub sbb fwait ss aad ljmp mov and mov jno stos sti rolb sbb push adc sti inc jb and dec rorb clc ficomp loopne ja in jno add lret movsb xor xchg (bad) xor pop pop hlt testl (bad) mov mov std jno sub xor mov outsb mov andb jb lock jnp or or insl ds inc or dec inc xlat xor push sbb sbb std stos sbb and aas scas bound je dec push pop loopne or cmp xor add in lds and mov or and test fwait or jecxz xor xor or jge test mov jge cwtl jne (bad) xchg fildll xchg inc sbb icebp inc dec stos cmc jecxz shrl cld mov mov mov rcr ljmp push stos incl mov in (bad) stos push loopne cmp enter adc sbb dec xchg jo aas mov push xchg daa call imul adc pusha mov cltd addb sub sub xor mov push mov xor fiaddl xlat jns imulb pop enter adc scas (bad) xor movsl inc xor nop fldcw outsb aaa test sbb mov lahf mov icebp inc push pop xchg add sbb xchg add rorb (bad) xor dec sbb pop dec mov out out popa rcl dec movsb fs inc aas aam lock adc sub xor in or rcrb sub mov and arpl rcll mov mov (bad) js jg mov lahf outsb adc push mov fs xor push ficomp xchg mov popf loope stos dec mov and movsb div testb jmp jle fstpt pop ds ss pop out mov adc je or cs mov mov rcl outsl adc and sub shrl pop adc cmc rorb out add (bad) fdivrs enter jo sbb mov cmp jo ficomp pusha addr16 mov xchg repz adc add add dec jl clc in adc gs push mov movsl stc mov xor xchg sahf sub lds dec js or pusha loop lcall icebp mov and or int3 or into pop cmp les mov xor xor push imul pop dec je cmp push mov mov pop xchg pop xchg jg or hlt int or popf loope dec add cmp call jo lock das cmpsl data16 add (bad) test mov jl aam jnp add outsb mov icebp mov and or scas adc xor jbe xchg stos jecxz cltd or push mov mov popf fild sub fs mov fwait bound mov (bad) mov mov loope fisubrl inc sbb jo dec fsubs fstps test imulb out scas cmpsb mov orl rcrb sub stc xor lret xchg and decl xchg push pop jne nop push divl adc xor xchg mov std mov stos (bad) outsl pop hlt add pusha fcmovbe loope nop dec popf push ret xor (bad) dec mov sbb cld mov lods in sarb fld incb bound cmp call and es sub in es lods out or cmp cld and sbb call jbe lret mov dec insb lods pop enter imul mov sub push push mov inc pop lcall adc cmp out roll mov (bad) adc mov sbb (bad) int3 loope jb out xor push test push stos add pop in sub jle mov pusha test sub push sub and mov enter cmpb je sbb outsb cs jne (bad) out and test xor add cli ficomp xor add and sahf iret movsb fs mov sbb mov sahf pop (bad) movsb xlat out and std jb sub push pop out xchg ja pop inc or xchg movsb aaa fisttpl or das out jbe mov dec sahf loopne mov xchg roll sub dec idivb mov in add scas xor xchg std mov clc mov lock nop mov stc mov hlt mov pop xlat jb mov mov xchg push mov aas rorb push mov fwait mov std mov lret (bad) xchg inc shlb cmp mov sbb leave subl cmp or and and adc add mov adc mov jae insb xor mov loope cli mov mov mov push mov xchg cmpsl insb cmp cs jns popa scas jle test lds mov out lcall icebp (bad) je dec mov nop xchg and int3 mov out outsl and jge add jne outsb and mov aaa in ficom sbb test inc xchg in push cmp mov sub test cld repz mov lods loop dec sub loope jo xor sbb jnp jge cmp or adc int3 jg jle lahf adc into mov jl sub adc cld daa in es xchg pop out push int mulb in sti mov loop push (bad) dec sti rol hlt sbb inc (bad) push xchg xchg mov pusha xchg mov fwait bound nop stos push insl js fsubrl fmuls push pop pop or mov dec fdivs mov mov cmp sub (bad) dec lcall les cwtl es pop sbb dec enter mov adc js repnz cmc xchg je call jmp jb out add xchg jmp jb call xor xchg in xchg xchg xchg mov dec adc lahf loope dec or sarb aaa or rcrb xor (bad) adc fcompl xor sbb popf jle lcall jl cwtl inc cmp adc (bad) test adc dec xor pushf lods mov test xor inc dec xchg jmp adc lret cli insl jge pop call push jp jb out loop pop lret sub or aas mov insb stos outsb push add mov add roll push sub sar loope inc mov adc add andb sti int3 out cs mov stos xor in jp (bad) test add and mov insb inc or push cld shlb hlt sti rclb fcomps stos fs pop or jno cmp fcoml ret fisubr push daa div int jl sahf cltd idiv in movsb ja testb sub popf enter lret pop (bad) nop push pushf pop cmpsb lret xchg lret (bad) or mov sahf pusha in sub iret xchg push mov mov or insb subl ffreep cmp nop push lods push pushl scas push (bad) and decb jg add fcoml insb cli (bad) popf inc outsl add scas xchg add pop mov jge xchg dec xchg ljmp jmp jnp iret push cmp and push xor stos and mov inc dec mov push repnz cmp sahf jle and xor sbb mov movsb insl aaa testb push pop dec adc mov add add in sbb es add pop shlb jmp mov dec fisubrl or leave and orl (bad) in pop pushf push aam test cmc sub sahf pop into lods rorl jb add leave ljmp dec sahf in idiv ljmp jne nop xchg mov sub jno stc push (bad) out and cli sbb mov and sbb pop cmpsb adc xor jle mul adc adc fcoms hlt inc push xor cmp mov daa mov jle lcall cmc dec pop scas icebp xchg and dec pop lods notl inc dec stos cmc loop pop clc jns and scas cmp and lcall adc cmp sub jmp test push cli incb ret push or jns repz dec push and dec mov mov mov shl or hlt je lcall jle adc mov out or pop ljmp pushf mov out xchg stos and rcrb ljmp mov sbb cmp loope test pushf mov sbb mov and aam mov movsb imul sbb lock jecxz sbbb cs mov fwait adc mov (bad) xor sub inc mov xlat dec push shll sub inc cmp jp adc in js xchg jns fistl push jnp fsts out or popf fisttpll repz push push stos cmp xchg mov addl mov cmp mov fs jae lods sub test jne lds sub mov fstpt cmp jne mov sub push mov cwtl dec mov xchg ljmp adc pop xchg test pushf popa (bad) (bad) and shlb nop push lods cmp in adc push (bad) lods push outsl xor insl push push loopne mov inc nop stos popa jno push hlt arpl imul insb and push test stos xchg mov cltd movsb in or mov mov push pushf sbb out xor cmp dec adc cmc sub cmp cmp fisttpl dec int3 ljmp inc pop add inc jl jmp lods shll lahf call inc push outsb stos pop (bad) xchg cmpsl lods rorb mov mov popa shll pop popl dec mov (bad) mov sub mov mov cmp dec mov pushf sub iret cmpl pusha mov mov and stos (bad) mov (bad) cmp pop ljmp inc push fisub mov or xor pop push lods push (bad) (bad) fistp cmp xchg test notl popf (bad) lret cmp mov and mov psubb adc mov mov xchg cltd test cmp daa cltd or adc sub or push pop outsl cmp aam lock dec adc jle dec or icebp ficompl jo dec lods mul inc sbb inc cmp popf jle add movsb cmp lfs dec push out jb fdivp jg (bad) push mov cwtl xchg and aas decl das mov pop fisubr cmp mov mov inc js mov sbb (bad) sahf sub or pop imulb rolb xor and xlat xor and aam adc loope cltd xlat xchg push (bad) (bad) lret call and push mov cmp and jp cmp loop,pt test inc cmp (bad) fnstcw cmc pop ret cmp aas ret pop ljmp fstp push jle int data16 (bad) inc enter (bad) fs push imulb ljmp lock adc js jl adc adc (bad) int3 jnp xor lret int3 pop test push (bad) enter pop insl or adc in mov fxtract cmpps imul aas scas fimull fsubl lods and insb fwait adc fwait dec adc inc int3 jb lahf cmp cs fdivs mov mov or pop mov jne cmc xlat pop pop pop pusha out (bad) dec mov in int3 lcall js xchg dec mov int jge std insl (bad) imul jl std adc mov mov jno fildll push mov or push leave cmp mov or out mov inc mov ja push pop int and cmp mov mov in rcrl roll (bad) mov sbb popa inc mov mov arpl call jle sbb xchg mov jnp mov adc cwtl ja sub inc into pop lahf jl bound popa lcall jecxz sbb pop out daa cli push and push fxtract pop sub push popa mov add push gs mov sbb lret push fisubr xchg fidivrl rcrb sbb mov (bad) adc add into dec xor (bad) xchg or mov jle pop movsl mov jl pop mov in xchg add and sub sarl jbe jl add jns xor and mov push mov add cwtl add pop xchg add xchg and scas and add movsb xor aam pop jns data16 movsb xlat out test mov icebp mov popa shl sbb cli jge arpl gs (bad) lock jo and adcl cmpsl loop stos int call push ret xor outsl loope mov popw cltd mov cmp in mov add fisub cmp and lcall jne sbb push lea lods js pop cmpsb sti push sti lahf sub ret xchg je rcrl jg inc aam mov mov pop sub dec mov pop or sub cmp cwtl ret lods and js push insb rolb pop jmp lods mov test in hlt lea test mov sbb cmpsb xor cs insb cmc or movsl xor int pop clc mov push xor bound daa ss cmpl push movsb and scas js (bad) jecxz pop sbb sub push mov es rcrb and jae jno or ljmp int3 add jecxz cmp pop imul ret dec inc mov test xchg xchg cmp xchg test xchg fbstp add sub xchg lods lret aas mov cmp test repnz jl sub cltd cmpsb jge sbb imul pushf sub int lcall je lahf arpl cmpsb data16 andb jb dec shr js pop ja mov jbe mov adc stos mov jmp inc sbb stc push mov xchg lret pop mov lods jne sub out mov cmpsb pusha aas sahf push daa add inc sahf pop mov jnp and pushf lret subb xchg xor jp add xor dec mov bound mov xor inc adc repz mov sahf in cmc cld notb mov ret nop imul add or decb and xor push fisubr scas movsl xor dec (bad) loope fcmovnbe stc outsl lea cmp fistp das jno int inc stc sbb push cwtl sub push repnz sub xchg addr16 lret push scas pop test jle cmp xlat mov (bad) jmp fsts pusha or cmpsb scas cmp xor push add test mov inc nop repnz jge ljmp xchg mov mov add push mov jmp mov or or (bad) lcall adc or sub adc pop lods inc mov loop lfs lcall cwtl inc (bad) mov jbe xchg push xchg arpl cwtl mov sub jb mov movsb sbb fnop push loopne cmp push fsubrp cmp pop daa lea fsubrl repnz add push lea push out test or sbb adc ljmp (bad) fisttpll push movsb cli stc lret xor jp mov xchg jecxz push xchg and jbe adc cmpsb bound jne outsl insb lahf xchg arpl mov cmp push or jbe sbb repnz or pop cmp xchg inc imul add dec (bad) cmp iret aam push cs inc dec mov jns loopne roll orl cvtps2pi je inc shr js or shrl inc mov aam loop mov pop sar mov movsb mov test lods cmp mov imul push imul add (bad) xchg sub out sarb or (bad) mov cltd cs mov shr dec cmpsl out mov gs cli pop lods js aam mov dec iret inc movsb out jl repnz leave or and adc inc push mov add or mov mov scas mov mov call lods js add cmp loopne lret inc xchg cli out je sub pop push xchg pop push lret aas push sahf xchg mov out mov sub cmp repnz sub and jmp and (bad) loope inc ficompl jnp xchg and clc iret pop ljmp add int3 mov (bad) or sbb push enter xor stos imul inc push mov ja loopne jnp fisttpll int3 ss dec fdivrl pop push lahf xlat cmp sbb les adc and mov jmp (bad) adc xor push mov call (bad) lock inc data16 adc xor push adc pop mov mov into mov cmpsb cmp add sti popf ret inc adc xchg mov pop cmp push jge dec xchg jp into xchg or sub add mov pop pop xchg lock adc pop divl fisubr xchg or mov in xchg insb daa cmpsb jns es push (bad) mov fsubl sbb adc cmpsb push dec hlt push insb addl and jmp shll enter cmp ret movb and pop xchg out rorb sbb fsub jns lcall xlat cltd push fstpl push das hlt or (bad) cmpsl js dec cltd cmpsl icebp cmpsb pop and sbb jmp and xchg add mov outsl mov aas test adc mov cmp or and jbe shl in (bad) pop in je aad and lods mov dec mov mov xor add insb add mov popa jno pop fisubr push xor fs push sbb aas fisubrl pop mov (bad) sbb in mov xchg loopne iret xchg lods aaa cmp and es js in jae lock (bad) in inc sbb es cmp popf outsb jle xchg and push xchg pop in push xchg out call jp sbb mov pop loopne xchg mov ss jae push sub pop xor jg adc cmpsb mov test pusha das cmp data16 aad jbe xor xor sbb shrb jle pop sub dec fsubs push or mov repnz cwtl stos sub out mov iret lcall ss xor rclb jb mov stos push ficom test and add das arpl lds jb jmp aad fild pop (bad) jg adc in mov mov ss aad lock ret mov xchg insb gs adcl pop adc or popa or lahf mov lock xchg scas in sahf mov lock and dec push in je sbb mov fdivp out mov push mov xor sbb outsb cld loopne sub add lods sti push push scas xor sbb dec jo adc jne sbb les adc mov testl (bad) out mov inc pop das push das pop jb xor stos fcompl movsl xor aad jle xchg and test xchg movsb mov daa in dec cmpsl scas cmp mov repnz pop out jb add push mov fxch cli data16 outsb cld pop push jbe sub pop insb cli mov movsl mov inc fsubrl add test mov push inc lock jg xor jae adc popa push jle,pt orb ljmp (bad) pop sbb ret test fnstcw cvttps2pi cmpsb mov inc or adc (bad) ss and lret jbe adc mov xchg roll sub out mov add mov stos cmp in test jecxz je pop gs scas mov pop int or clc or inc pop sahf (bad) jecxz cltd adc sub clc imul inc fs icebp hlt sub mov lcall je adc mov scas dec mov push sbb mov inc mov (bad) mov insb dec ljmp and fstps (bad) mov push xchg ret add arpl aaa jno dec addr16 loopne inc mov out (bad) xchg pusha jnp push mov pop cmp push outsb repnz mov enter jge test mov movsb leave xchg inc mov out mov mov fsubp mov jle xor ret outsl inc adc lret ljmp aaa fsubrs sub adc iret orl sub dec pop inc and mov rorl adc idiv mov in jb jl push call imul pop int3 mov jne je mov arpl dec stos loope (bad) xor sub dec pushf lahf xor mov jp sub (bad) jl push push or xor mov lods clc rclb shrl jecxz mov sub movsb mov pop push push iret xchg ficompl push mov mov jge adc cwtl jns test and mov repz ja cld shll jl adc jmp dec pop sbb pop ljmp mov (bad) jbe push gs sub je sbb pop or mov fnstenv mov sub push add shlb cld (bad) dec das xlat popf lea iret pop mov insb lret test mov jle arpl rorb mov jl aam cwtl imulb mov fbld pop repz pop in adc fadds sub ss push jle jbe push jo mov add push ljmp call stos push mov jo gs (bad) cmpsb xor outsl push sub add push sbb cmp dec push and (bad) dec rcr jns ror jp xor fwait or cld ret (bad) je or sub sub in add in adc lds push cmp scas icebp (bad) xor addr16 dec sbb mov nop test enter inc jno push push les or jne sbb xchg lods fdiv test jns cs iret lret clc xchg into or test imul dec cmp mov push test (bad) lock mov pusha jle rorb out das pop adc stos pusha jge jp push sbb jg aad pop jb mov (bad) cmc jnp and or ljmp enter jg sbb sbb cli jo nop cltd xlat sub es subl stos pusha movsl (bad) scas movsl xor dec xchg sbb lea rolb out sbb aad jge add sbb into xchg sub dec xlat repnz shr arpl mull out pop ret mov aaa adc mov fisttpll inc fbstp pop xor hlt loope lds mov push cmp in leave dec xlat xchg xchg add das mov lods and xor or jmp sub sbb outsl sahf sub js xor rcrl sarb lcall or std es push sub adc push popa ss inc sbb mov int3 popf lods cli jl push scas sti (bad) mov fldl2t scas mov lret test cmp lds (bad) add inc sbb out sbb data16 add dec push or rorb lods mov mov test jmp cmpsl (bad) xlat fistl lds adc xor or sub push push out jl jo lret aad jb xchg dec mov xchg les inc movsl pop sti mov fstl fwait mov hlt add push (bad) sti xchg lret push push (bad) cmp cmp jae clc fimul shl outsb jno pop out leave cmp les cwtl out cmp adc imul adc cltd sahf lea mov dec (bad) out test sub mov cmpsb xor push pop in dec fnop lods es push sbb mov push ret fwait mov cmc add push imul push adc and cmp and jns pop and push fiadd mov movsb mov pop xlat inc dec mov dec (bad) xor dec fldenv jne test sbb (bad) fsub xor jne mov mov adc mov lods out mov imull pop inc mov call scas push cld cwtl je sbb das (bad) fsubrl pop push add mov cltd insb ds or scas cmpsl add sti (bad) dec aad xchg add sub es pop or mov add mov mov cltd or jp inc mov jecxz pushf test test xchg cmp or or (bad) (bad) (bad) aad mov ljmp cmp mov scas cmp sbb (bad) jle push daa ja (bad) mov xor jae clc pop lds mov adc jnp xor xchg out cmp mov mov addr16 test pusha addr16 (bad) adc cmpsl pop adc pop lret and bound add jbe test js and aam sbb xor push jno movsl pop cmc rcrb mov pop sbb push sbb cmp pop addr16 cmp cmp cmp pop jl arpl or leave adc jne cmp or pop mov push xor hlt popf subb std shlb fbstp sub xchg std es xor add push push sbb jp mov jae,pt dec lret les jl std (bad) loop jb mov out sbbb cmpsb (bad) mov jecxz enter sbb push arpl das fcompl clc inc push outsb push mov call mov out aam adc dec push mov sub pop mov int lea pusha insl mov inc popl addr16 push push jnp inc into pop ljmp icebp mov sahf (bad) push insl add push pop pop cmp adc out shll in mov add mov and push inc mov adc popf out cmp adc sahf div cs fwait in pop pop adc or dec mov xchg mov push or mov into lret js xchg scas cmc out pushf or lods jp and imul push sbb stc jne xchg out enter sbb fstl push jecxz xchg fstl and rol outsb xacquire xor sbb cmp mov push jecxz mov inc bndldx mov aam jnp push pop stos dec inc cmpsl dec sub iret lods leave dec pop fld1 jo xchg dec mov sahf mov push push xchg test add add mov out or fldl das ret or xor sti in cmp or cld mov xchg hlt icebp (bad) push sub push dec mov or popf out aaa or mov fwait in fcmovb popf enter pop imul lds pop daa sbb add stos cmpsb insb adc leave xchg dec fbstp inc les push jo cmc cmpsb test jbe xlat mov cmp xor jmp jb lret cwtl fidivr cld push and test add push ds jmp popa jno and pop cli dec push sbb rolb jno test jne add or inc push insb inc mov push sub imul pushf sub adc clc sub lret cmc dec pusha stos adc pop in jp sbb mov jl xchg jae mov add and je push sbb call dec cli shlb or and jg pop test insb jno adc out dec inc lock rcr (bad) sbb fsubs inc adc and dec (bad) out mov sbb sub sub pushf pop enter rcrb aaa call into pop jmp mov jb xchg and cmp or rcl cmp fldt sarl (bad) push and test test dec inc mov adc in lret dec (bad) data16 mov push das sbb inc dec nop ret in fs dec or dec fsubr jp sbb loop mov pushf inc mov das in push mov pop xor pop mov rcrl and lret lea cs xchg fisttp inc int3 in jl xchg dec scas mov mov bound call lds mov sub mov cmpsb xor inc push das push add dec mov stos or pop xor movsb jnp mov xchg (bad) adc mov jmp jle iret cwtl in pop sbb jl pop daa xor pop in icebp dec push cli pop lahf or cld cli imul mov outsb xchg lods sti fcompl nop push and pop or jp sbb clc inc nop lret test test sub or scas cmp fildll cwtl mov push ret fdiv popa push shlb push data16 adc (bad) fs repnz jl sub and xor leave je xor jbe pop mov nop nop sub cmp push in je ret inc enter cwtl fdivp jg (bad) push loope decl adc aas stos (bad) int3 pop lret cmp mov daa testb inc repnz leave repnz (bad) sbb fsubs inc adc and dec (bad) out je add sub inc pop aaa jo pop jb int3 inc shr mov int rcrb jnp sahf cs inc or sub mov data16 xchg and cmp sbb rcl cmp (bad) sarl (bad) push and cmp loopne mov ret fs fwait loope nop lds mov cmpsb or jg mov inc jno gs cmpsl xor fsubl sbb call jle pop jge push cmp jl fwait out (bad) fcoms adc cmp rorb fisttpll dec pop loop add and imul ljmp lcall xlat es decl adc jp dec insb mov out nop jl pop aam mov mov pop pop stos ret cwtl (bad) icebp mov jecxz jle popa jae adc loop icebp leave push xor pop out cmp jle cwtl jne adc cltd cld and xchg loop mov or sbb cmp sarl (bad) mov dec mov mov xlat es jnp adc loopne inc or cmpsb xor pop pop stos sti mov int3 int push std add in adc push adc push xchg pushf and or aad pop imul data16 add bound repz pop idivl leave xchg inc and in adc (bad) jb add push xchg mov addl popf push outsl xor js mov enter sbb jbe push movb stc mov les mov pop adc xor push mov jae ret fmuls add push pop sbb fidivrl mov push fsubs inc inc testb enter ljmp mov fidiv jae xchg daa mov jmp xchg and sbb outsl and jns pusha and jnp jns lods cmp and jge outsb sbb cmp and jg pop sbb popa js sbb insb cli add mov stos scas xlat popf xlat in aaa cmp push jg lcall hlt (bad) fwait jecxz rcrb fs mov or lret jae adc sbb test fsub push xor adc mov xlat enter or lds leave xchg out dec add and xabort les outsb lods jne inc mov and popf loope dec add test push jle xor or pop shr rorl les sub outsl inc push sub sbb (bad) pop cmp testl add mov inc mov adc inc mov js mov mov mov or (bad) lahf inc push jnp sbb cmp mov nop mov cmp cltd xchg ds movsb mov push sub mov fwait ret and add adc ret sub xor mov pop jo mov jp xchg jae test dec ljmp mov rorb lret push add push and pop sbb jge fildll inc in mov loopne test jae fisubr add insb fwait lds aaa cmp inc push adc push dec fcoms call cmp fwait or lret bound cmp adc icebp es xchg repnz cmpsb pop popa add mov arpl orb mov ss adc outsl loope cmp jno push outsb (bad) xor in leave mov mov punpckhbw cmp pusha fst xor and out mov pop iret aam mov (bad) mov shlb pop xor roll (bad) add inc mov cmpb add mov or test or pop fnstcw jnp shrl daa jns outsl xor sbb or aad push lret fsubl xor add sub cld out popa jno aas fiadd cli dec push je shrb mov mov test jmp xchg (bad) xlat fcmovne enter xor mov mov mov mov cmpsl inc arpl push (bad) cmpsb pop in jp lock out sub loopne inc cmp mov ret lods sti cld cwtl mov dec sub fldt pushl adc push loop cwtl add es decl sub test push bound or mov call jne mov jns ror jle cmpsl fs inc (bad) movsl ja push lcall jp cwtl es lcall sbb inc into pop popf xor inc das in in imul mov ret xor or jo sbb cmp or jmp incl negb push mov add xorl adc xor (bad) aas xor out out cmp fs add pop mov jbe ljmp jns mov mov icebp lret pop sbb dec pop lods not inc sbb inc or lods rorl shll and scas mov cli and frstor into mov inc add mov mov cmpsb (bad) xchg mov lock fldcw (bad) aaa rcr hlt (bad) cltd fcmovnbe aaa paddq in std mov (bad) lock fnop mov cmp pop sbb or and add push push addr16 int3 ds sub pushf repz lods mov push out jb in daa insl push test stc ficomp cmp or xor inc mov adc xor hlt jmp add or jle push movsw cmovae fs scas out lock jb les push dec mov aad (bad) bound push add rcr add sbb mov movsb mov push js push lds add jb sbb cld (bad) push and mov notl repz insb cli add cmp jge pusha stos (bad) jg and sbb mov mov pop jl or or pop push inc int outsb jnp or xor push cwtl es rcl push in jp push cmc pop sub shll repnz and xchg sbb push lret and mov pop out jb data16 pop mov les in xlat fistpl or and sub popf dec mov shrb shlb push pop inc dec fisubrl or sbb movsl or movsl iret mov cmc arpl push gs mov out jle cwtl stos xor sub scas (bad) dec lahf or mov and cli in sub enter inc or or mov pop imul rcr jo mov and ja cld and stc dec jae pop pusha nop cmpsb lcall mov jo test shlb cltd ja or in mov sbb pop inc inc inc aam mov repz cmc addr16 jns ljmp pop enter dec iret cld fdivl jecxz popa fist lods shrl icebp outsl loope push cmpsb push in call jg loop (bad) ljmp sub dec adc inc int3 xor dec fsub jne jecxz iret out push mov mov lcall sbb mov call xchg cmpsl sbb aam lock mov adc pop js je adc lret fninit adc fiaddl mov int3 or jbe mov sbb (bad) mov in add test sbb mov test push repnz pop cmp je movsb xor shr repz dec xor add mov roll mov mov or mov adc mov adc cwtl and imull fadds push mov mov or mov adc or movsb rcr xor push in add pop loop (bad) ljmp outsb cld add mov ja mov pusha sub adc and sbb mov test sub sbb sahf cmpsl movl cmpsl xor push or sub jl adc iret test dec mov into pop addr16 cmpsb arpl dec outsb cmpsb pop mov cld cmp (bad) push xchg sub ss dec cld rol add jo dec adc sub insl into pop jne into xor push fidivr xor xor lods outsb inc sub and push test daa ss (bad) inc int3 jp aam fs mov mov jae inc shlb and mov negb enter pop ljmp xor jbe pop lods push (bad) xor notb sbb or in decb pop xchg lods in xchg xor cmp push movsb mov xchg mov and fcom inc (bad) dec lcall es fs repnz decl cld mov adc inc pop fisubrl loop es jg stc pop out mov pop sbb repz insb in lds loopne stos mov mov xchg add cltd mov and loope je pop int pop mov mov dec push in pop jmp xor mov mov mov jl lcall sub aad in cmp jns notl sub adc and mov (bad) jbe or cmpsl sbb (bad) pushf fwait insb xor add rcll mov jae stc mov add dec sbb test jae pop mov pop push (bad) test out pop iret (bad) ret not cli dec inc mov xchg inc enter sub aad push cmp popf jle repnz icebp addr16 iret test int3 jnp xor loop add popf outsl insb les scas cmp fstl (bad) std outsl dec cli shlb lea mov imul aas scas pop popf pop iret cmp mov movsb xor cmp xchg pop add and push test daa add insl (bad) xlat inc mov jmp sbb inc aam xchg negl sub movsl jo push sahf cwtl cmp cwtl pop ljmp xor mov push mov ja inc repnz or xchg out xchg fldenv pop jae clc addr16 (bad) sbb add lock stos and insb js fsubrl fstpl push cmp outsb out roll repnz inc mov fildl xchg mov dec mov pop sub es pop sbb repz inc psllq loop inc pop test call jp ret je in lret mov movsb (bad) mov jg add test xchg fstps in ret push fnop xor push inc add jne jne mov ret or lock inc adc sbb pushf mov out inc jp cmp cmp mov xchg rcrb aas in imul (bad) pushf mov add jno push outsb mov mov push lods push lret aaa fsubs sarl (bad) addr16 in ret cmp lods test es mov dec scas push adc dec (bad) mov aaa pop shlb add xchg sub xor sbb mov (bad) push insl mov inc mov rcrl iret cwtl mov (bad) lret int3 pop arpl or and mov mov or ss mov jecxz or (bad) jo mov and xor push in (bad) int push loope test and xchg data16 sbb popa push adc and xlat sbb cs orb daa add repz push cmp jo and mov mov and aas or negb push mov scas cmp (bad) js insb jle aaa fistp movsl mov jae sbb and push ficom jno stos mov dec fsubrl sbbb addr16 icebp (bad) sub dec imul cmp out cmpl scas mov pop fidiv push aad (bad) or push imul push out (bad) mov mov inc push scas push in push jle sbb mov mov into mov in fwait bound movsb push into xchg or cmpsl inc rol cltd lcall mov and movsl stc stos xlat shll inc or or out or sbb sub xchg movsb xchg int3 sbb push addr16 jbe mov push add lods jmp lcall and pop mov cmp sbb mov mov es mov pop adc stos bound xor rcrl inc movsl (bad) scas movsl xor dec xchg sbb ljmp mov jge inc sub lea sahf les into or jmp ds lcall and or adc fildl loope xchg push popa imul mov or pop out (bad) ficom std push pushl outsb and xchg jne rolb cmc dec adc in mov and lds repz cmc dec inc dec sbb dec fsub xor dec (bad) fs ffree stc aaa outsl adc jge test mov rcll test cmp (bad) rol cmp shrl daa jns shll and mov lret fsubs jge frstor and (bad) roll dec sbb popf mov mov scas cltd out out sbb pop mov xor pop sahf sub or push pop lret pop xchg mov jl sbb mov jp adc jae js pop ja mov push arpl out sub cmp rorl or fdivs sti cmc fisttpll int push loopne cmp push push mov mov push jns sar inc jle dec push sub jne adc subl push push sbb subb imul (bad) ja aas fnstsw push mov fidivl pushf xchg mov int3 or scas mov (bad) adc lods dec int sbb lds push sbb add fs pop lock dec hlt pop ret push cli fadds fisttpl scas sub js (bad) js inc mov into adc movsb mov scas xchg sub jle pop and sbb mov in inc orb push inc xchg and test fist jb mov arpl clc (bad) ja sbb sbb inc ja push in les or mov lahf or fldt pusha jno popf stc cmp lret mov xor adc ljmp xchg sar mov mov test cld std repnz pop mov xchg mov jl cwtl lods loope pop pop xchg mov push mov mov inc push mov cmp pop gs lret sub jmp rcl dec gs inc jne mov stos add arpl shl std fdivrs xor dec mov xchg xchg pop mov xchg xchg cmpsl rcl in mov (bad) in sub dec adc push jg arpl push xor enter cmp pop jo stc inc rcr sub movsl in lret sub sub adc (bad) fidivrl cmpsb pop gs ret shlb xchg loope cltd add and or dec pop mov push jb test dec pop sbb stos (bad) in ljmp dec sub insb dec stos subl cmp and setne inc mov insb lock ret aam jnp sbb push mov je xchg dec mov idiv imul adc and mov xchg jne add gs mov imul pop rclb stos (bad) fadd xor fldt loope jo pop int cmpsb push clc xchg bound shll or test sub data16 xor cmpsl jl pop subl sbb and jge test mov das add push fistpll lret (bad) ss adc sbb cmpsb popa xor sbb mov mov xor sbb mov mov dec sti outsb cs test (bad) mov imul hlt bound mov shrb jae dec popa mov loop adc cs (bad) fs scas inc inc mov pushf sub add or shlb out cs cmp sub addr16 loopne and inc pop or jo insb popf or mov sub add cmp aam fcomi andb sub jo (bad) repnz push mov gs pop stos sub clc iret lret pop jns sub rorl scas jge push addr16 roll sub dec mov pop pusha mov sub cmpsl arpl dec test ljmp outsl sub js insl sub mov xchg fildl inc (bad) add nop dec and push outsl hlt loopne sbb imul dec stc pusha dec pop sbb mov pop ret mov jle xor xchg xor (bad) aas xor pop add outsb incb lds sbb mov aam mov in xorl lcall or loopne outsb mov dec cwtl fisubl xor ret ret sub mov mov (bad) stos cmp insl jge,pn adc push (bad) dec adc and loop mov cld ficompl fidivr sub lea mov jge cmp sahf pop or push pop ljmp mov cmp sub or mov xchg das mov inc sbb sub movsb in xor cld jnp push ret xor adc (bad) or push mov js adc xchg jne pop mov loop les xchg jae int3 movsl xor imul fsubrs hlt sbb sub inc (bad) in mov lea xor jle pushf movsl cmp pop push out push or aad stc leave fwait jne sub ss test std or jbe stos sbbl inc js push stc in fist pusha sbb mov stos add pop adc arpl adc lret gs pop mov sbb cs (bad) cltd fcmovnbe jge ficompl mov mov insb lcall jl cwtl sbb dec jp xchg int inc into pop imul cmc cli mov xor xchg sbb dec test push bound xlat sbb mov push or jg pop sarb scas aad mov call cltd xchg inc unpckhps xchg (bad) icebp pop sub mov gs movsl out mov dec jno push jmp data16 jno xor cmc inc fs mov pop in jp pop and arpl sub or stc mov push mov push js stc (bad) and fdivrs pop cld mov fwait (bad) dec pop add xor fstps arpl push fsubrl sqrtps sti nop pop xchg in cvtps2pi sbb sahf pop jae adc add cmp cmp sbbb aas pop sub mov mov inc sbb sub inc pmulhuw jp call incl dec sti rolb lahf outsb add (bad) in cld pop lea test sbbl cmp xchg in cld mov pop xor xchg into mov pop maskmovq testl adc xor orb aam dec push cs jle sbb lods dec push and jl sbb scas dec push fs jp adc insl jmp push pop fsubrl jbe adc mov je adc mov jb or pop jecxz decb in inc cmpsb rcrl jg xlat fwait pop and or stc std add jg pop mov mov inc test test aas mov adc cmovne aaa or imul scas and xchg call mov xchg mov mov (bad) stc imul std loope jecxz ds dec pop jl sub decb jl cmp mov dec add mov cmp pop pusha mov je pop xor outsb or ljmp movsl mul pop sub or ljmp lcall sub stos icebp lret mov pop js pop ljmp fwait mov xor mov arpl cli xchg fldl das ret fimul mov cmp loopne mov dec sbb inc dec pusha dec or cmp inc iret push jl fisttp lret loope xchg leave out in lods or shr and bound test and lods and xchg pop in jp and jo nop jb imul and sti insl stos jmp dec pushf ljmp popf fisttpll stc inc xchg push sti negb test xchg fbld das popa lret or inc mov aaa cmp jmp pop cmp sub setne inc mov pusha repz ret aam jnp add rcrb pusha mov dec mov loopne inc mov inc leave push xchg imul add mov icebp sbb fcomip mov fldl das ret xchg jecxz negb xchg repnz mov stos add mov and out cwtl xchg jbe int3 ja jb andl xchg arpl dec fadds int gs xchg and cmpb hlt jle jmp (bad) mov outsb pop test lcall pop sbb pop or jge andl icebp dec daa lock xlat sub jno sub inc fldcw gs pop rcll jns decb hlt divb add bound enter cmc lds cld sub lods test test aaa pop and xchg dec adc hlt icebp inc xor mov sub je (bad) cmp pop addr16 xor fwait mov lret lods daa pop arpl or jne mov shl push ret push enter or (bad) xor mov repz loopne add push and add and gs jmp iret mov mov push sub sar mov in pop (bad) enter scas push push push jno add jmp std or jb push jl test xchg push dec jnp push imul cltd dec mov cmpsb insb and add fidivrl xchg pop dec pop loopne sbb push add sub or decl push fildll xchg jns aas mov push inc xchg jle inc mov orb mov dec cmpsl inc push jle mov fimul pushf add arpl (bad) dec mov push cwtl es or adc int mov xchg cld es int3 or repnz push ret lret pushf ljmp or call inc nop (bad) cmc ds add jae add sbb lock test or adc inc das gs fnstcw push push jno (bad) aaa wrmsr ss int3 pusha roll mov mov inc mov js scas mov adc inc jo aas mov loope jp adc movsb outsl mov adc mov add lret mov adc lods xor add daa mov inc pop jecxz incb pop mov sub outsl ret and or test lea mov or add mov clc lret in movsb (bad) adc push mov pop pusha scas push in mov adc pop and pop or (bad) lret test std mov int sub mov stos insl lods jo adc xchg inc xchg js push inc repz inc mov mov lret lock fildll stc fimul loopne jg adc hlt mov popf push movsl nop fs insb lahf adc lahf test jge loop sub hlt rcrb pop dec or jnp adc mov out jmp out jl pop xor sbb lret lods imul xchg pop jecxz jns shr hlt pop push sbb dec pop fwait mov push adc inc aaa test dec and add test (bad) shll mov lahf xchg pop mov or pop int lds mov addr16 in pop sarl (bad) adc fwait jns loopne,pt cmc mov and scas push xchg testl jle test pop lods pushl xchg in lock bound xchg sbb lea jb mov sub cmp in jae fldcw movsl loop add adc lret sbb in or or push mov pusha jnp jecxz sbb cmpsl (bad) mov mov cmp hlt out subps jno push lds xor pop dec jns push outsl loopne imul adc mov mov xor sbb sarl (bad) (bad) int3 inc shlb or (bad) std mov ja or adc fadds fisubrl mov xchg jnp sbb jne leave sbb adc mov jecxz lea and xchg (bad) xor in sbb pop xor cmp lret popf cmpsb add push xchg and leave mov out jg shll sbb mov cli push (bad) cmp pushw cmp xlat es fcomi push int3 cmp fcom pop movsb aad sbb add sbb add or popa in mov jecxz js jmp mov jmp mov pop outsl inc sbb push jge test ss iret dec les xor mov jmp aam fidivrl cmpsb pop mov push ret inc mov loope ja fdivs mov loop jae out xor inc pop lret dec sbb jl arpl fnstcw addr16 insb or cs cmp sahf sub push pop subl clc and pop jbe mov lahf xor sub test dec pop sbb or adc and mov dec and stos test jo (bad) testb push addr16 or push mov std mov stos add mov ljmp fildll lock adc pusha push repnz adc pop pusha icebp fisttpll out jbe pop mov add mov cmpsl cmc jno movsl loop shr jmp mov xorb mov or jle lret jl std add stos fldt inc pop in push (bad) xchg shrl inc pop out or sbb mov (bad) jae sub enter mov mov dec mov inc out stos jno call lahf pusha mov nop shrl cmp xor or sub hlt sub jb jecxz shl jmp aaa inc (bad) add mov popa or imul xchg bound lds js xchg dec std shlb in decl push loopne mov clc push xchg inc ja add out pushf fwait call imul testb in xchg cmpsl pop adc mov iret pop pop aaa call sti push sub jo leave je ret mov jnp lret sub sub or dec aam out std dec (bad) stos shrl inc or jne xchg sbb mov call cmp mov nopl xor mov shrl dec sbb popf loope xchg lds dec push inc mov jmp xchg dec (bad) movsl pop pop sbb negl bound jnp test ss push leave xchg push mov dec mov pop lret arpl data16 add sbb mov dec insl xor rcll lcall inc mov imul daa (bad) in xchg xchg jecxz dec sbb sbb arpl jns data16 adc stos inc lahf call imul push mov pop lods int jb cmc dec xchg jns adc mov xor loop sbb lret stos cmp xchg iret push outsb sub insl fist mov outsl and stos xorb mov ret sbb jmp jne sub and cmc push cmp aas jb gs jmp iret (bad) jns in xchg jnp pop mov (bad) lea ljmp inc jp insl je repnz in mov sahf idivl lods mov lea push adc sub ja fdivrs mov lret pop lods jp nop lods sti rcrb icebp (bad) cmp aad jo dec adc ds cli mov sbb iret lods es out add (bad) xorps add stc icebp dec pop fistpll hlt in push das jl dec mov push ds mov in mov mov pop (bad) mov pop call cmpsb iret scas je sub cltd lods mov xchg push xchg (bad) int3 cmp into pop imul lret sub (bad) divb xchg xor inc and stc pop sahf xchg lods cmp fadds stos fs mov fwait mov push int into xor lds cld jecxz mov pop (bad) mov cmp xchg mov pop cmp inc cmp fwait mov xchg je cwtl (bad) pop sbb icebp jge scas movsb inc fwait push cmpb loope and mov stos mov add inc repnz or dec imul and (bad) jae pushf xchg frstor lret in push cmp fcoms and cmp adc mov dec push outsb pushf xchg sbb sbb inc sahf sub dec aam ss lea jmp test push pop adc and insb add xchg push xchg lret rcrl insb nop mov add cmp (bad) js xchg sbb gs fldl das ret add jecxz,pt mov ficomp lea fnsave movsl (bad) popf inc outsl add gs push mov sub or and pop enter add mov mov jns mov test fstp in cmp jp adc push imul sub sub push out mov insl xor sbb mov inc mov inc (bad) dec clc push add fidivr mov inc mov insb cli mov stos mov dec fsubrl push sbb mov in pop sub in or cmpsl out pop xchg mov pop into jp test popf paddw mov sbb mov xchg jp mov pop mov cli sub sahf mov mov insl mov mov nop xchg mov add fistp test bound xchg add insb add inc dec fidiv cmpsl fcomps jae fisttpl addr16 jbe incl push icebp int imulb call jle sbb mov push insb insl jp ret jns leave xor shlb push pop outsl movsb mov dec mov cld insb and mov adc mov xchg pop dec xchg loop inc lods in loope dec mov addl repz jb pop mov pop xchg repz call movsl jmp or jle sbb out roll push cmpsb loopne push les or adc leave (bad) aad push jmp aas adc pop popa jg shrl fidivrl sahf or or cmp (bad) js xchg sbb gs fldl das ret mov fist lock dec mov sub mov mov stos fsin out jge dec pop insl cld add dec xorl in orb adc out (bad) xchg adc mov jb cwtl jns lods lret das out jl lahf and xchg fucomp jns leave jp movsl xchg lahf (bad) mov es pop arpl adc pop stos js xchg dec std shlb in decl push mov cmc cmc clc (bad) xchg inc ja add out pushf fwait call imul testb in test jb lods mov mov jnp sbb push mov (bad) or aam mov mov leave pop imul pop push sbb dec into sidtl sbb mov pop add mov add ss or or and popf stos mov call mov fstpt movsb insb sub cs mov cwtl ja push pop subl jnp xchg cmp je adc mov fdivl cld inc into mov mov mov loope jecxz lret mov sbb daa outsl fcomp cltd data16 lret mov push scas jl mov ficomp pop loopne jg sbb lock rcr push xlat dec das xlat popf (bad) loopne lea or imul push sbb push push adc or popf popa mov shl xor or bound or in mov and jmp pop pop sbb fild je (bad) lret xor and add xchg xchg (bad) fnstsw sub (bad) mov out inc aam mov mov xchg mov sub add push stos jb xchg xor sbb push mov js daa and or (bad) lahf cmpsb pop std (bad) or outsl inc inc aas jnp cmp pop gs adc pop lret jbe andl adc jge cmpsl jbe cmc sub or xchg rorl icebp mov add xchg or popf fisttpll icebp in into dec std mov pop imul mov push xchg inc xchg mov jecxz test mov jnp dec fsub mov jle popa push xor pusha jl or inc popa sarl mov in hlt add sub imul xchg mov es test outsb ljmp sbb outsl and mov mov mov or (bad) insb jge push or jae cmp ds inc cmpsb xor sbb or ficompl and jbe iret movsb fs or sub sbb push sti call lds insb aad lds jbe cmp sbb inc cmpsl jl sub lock sbb or test iret mov imul cmc jp and and loop sbb mov and lds and rcrl sub testb push into xor outsb (bad) dec iret inc iret push jl ret push mov aam negb or push into cmpsl lcall mov xchg rep jb pop repnz rcrl call jp into ss push mov mov ljmp daa cmp and sarb fldcw inc leave cmp and jne cmp dec ljmp int3 imul movsb add in adc mov lods imul lods js push and add sub push pop sub call sub or das or (bad) adc add fstl cmp (bad) xor out (bad) dec mov int3 or sbb enter cmpsl gs sbb mov sbb dec mov movsb xchg mov fs adc negb inc xchg lret mov cmp loope mov lret push jns sbb mov jge sbb pop jno xor cwtl lock icebp inc test repz lods hlt jl and out movsb xorl cwtl aad push lds aad mov pop sub push xchg insb jne adc fs jbe add loopne divl xchg jmpw add push sub (bad) aad (bad) push cmp es roll daa mov or mov mov mov mov pop es inc int mov popa aaa lock test cmp inc insb sbb dec int3 call inc lcall fisubl add fildll jmp lods xor mov pop inc loope sbbl push lea mov inc pop test fwait push and lock lcall sbb out mov mov mov and iret lahf jo mov push call sbb pop popa sub sbb push popa aaa or insl cmpsb imul popf push sub add or add xchg dec imul (bad) cltd fmul xor xlat (bad) fstpl fildll aad (bad) cmp (bad) imul inc sarb jmp ds popa shr sbb loope jle arpl sub movsl jne repnz xlat inc mov sub mov (bad) jno mov mov rcll dec (bad) xor pop out lret stc (bad) scas loope (bad) mov (bad) or sbb leave cmp fbld add scas and cli cmpsl push arpl xchg xchg cmp or adc cs pop pop or jbe repz (bad) out cwtl leave fsts jns mov push jbe scas movsb aad add rorb fstpt push ret jl push sub call sub enter jl adc sbb push in jle adc and push loop subb push (bad) scas pop and push ficom mov dec fcoml stos sbb (bad) mov nop sbb fcomps mov sbb mov mov sbb mov inc add cli mov rcrb inc add rorb adc leave mov fimull ja xchg stos (bad) xor idiv xchg loopne lds adc (bad) cli sbb jecxz dec imul leave cmp in pop out test sub loop pop loop xchg push daa add inc mov sbb loop out mov xchg addr16 (bad) fwait (bad) xor ret xchg pushf mov lods inc mov out add sbb lods repnz stos sbb cmp adc and ds or cld ret sbb xchg stc ret hlt sbb in sti imul in add cld mov mov test lahf sub cmp adc add push fs fcmove rorl and lods adc sub or push pop outsl insb and (bad) lock dec inc mov push cmc dec jl icebp push movsb push push or xchg and leave fwait xchg popa cs and cmp ret fistpll push addr16 cwtl push lods imul add xlat es cli sbb (bad) fistl and test fucom xor and out dec inc das mov or cli sbb dec push and pop mov xor shlb inc xchg pop daa add inc xchg movsl jecxz xorb xchg pop (bad) popf mov mov adc sbb mov jmp inc push shlb inc adc and pop xchg out dec add and pop xchg in lret clc ds mov ja pushf call dec das xlat popf lea sub jecxz push cmp sbb or fs cmp aam jmp stc fdivl aaa and dec ret ds inc lods fdivp and lds mov shlb jbe jge and xchg add lret jl and (bad) mov mov mov jl mov jns inc or mov cmp mov (bad) adc cli inc lret jne mov add mov sub stos push ficompl rcl stc adc leave mov or sub loop arpl or stc jl test push gs add insl js (bad) inc inc and jecxz xchg xchg adc cltd pop lahf out test pop sbb push add mov pop mov shlb xchg pop (bad) dec pop lret rcll mov insl test sbb inc addr16 adc jmp pop outsb lea cmp clts dec in pop mov fistpll out aas bound js scas cld imul add pop push cmp es inc adc in nop push push jle xchg ret xchg xchg add push push dec dec xor mov push pop dec push jg out ds in xchg mov out arpl je mov jne sti imul ja mov fadds mov insl jnp or inc or lods cld lods dec fmull aas xor cli fsubr xor imul icebp dec dec leave notb arpl pusha jecxz xchg cmp ds sub mov ret ja imul pop mull call je cmpsl adc leave jle pop xlat lcall lods (bad) ja cwtl xchg std fs sbb (bad) jb aas push mov mov cmpsb mov (bad) out xchg xchg bound cltd sti lret (bad) out mov ss xchg jg int add ror popf jmp rorl test in lock push bound loope or add sti dec es cwtl sbb lea sbb gs lret iret cmpsl pop sarb (bad) inc cmpsl push sbbl pop cmp daa mov gs clc aaa ja fucomp xchg cs loope fs inc pop repnz dec add rclb ja jge pop insb je mov cmp mov scas sbb fincstp mov push fisttp (bad) push jge aam xor clc fimul rcr fidiv scas lret push ljmp cld xchg les cwtl dec adcl sbb pop push in push inc mov imul pop push inc loopne cmpsl aad sarl int shll dec ret mov xchg pushf je sub pop cmp scas pop bound movsb push mov sbb jl popa loope xor sub inc dec into mov jbe aam xor inc ss dec mov movsb in mov gs fwait sarl adc leave mov and dec sahf rcll jno add inc adc sub out xor or push ret sbb inc pop pop mov cmc mov mov cmpsl mov outsl dec jg in ja fnstsw pop leave data16 mov daa jecxz daa sub je out sbb mov mov cli push scas fcoml imul nop (bad) sti ds xchg xchg add fwait out repz repnz ret (bad) adc xchg test idivb stos add push push mov clc mov sub repz mov (bad) pushf mull inc or nop add stos pop sbb mov iret stc add aad mov in xchg push fwait ret or adc int3 stos sub sub sbb xchg fcompp addl js cmp sub mov fisub stos ja mov xor and popa adc imul shlb cmc incl inc or jnp lock push and ror and dec and mov and pop cmpl push xor mov pop gs out pop add push or xor inc mov mov into adc sbb mov loopne add jae dec sbbl push fimul add adc into mov cmp lahf adc mov dec popf fistpl mov fs push shrb out loopne in lret enter xor (bad) int3 push mov xchg pusha lods fimull xor fwait mov sbb stos dec cmc cmp mov stc negb popf je stos loop mov mov push pop sarb cltd push push jb pop cmp jnp sti mov out fidivl and ljmp into ljmp inc cmc add add adc cmp mov dec dec push fs mov cmc aam stos lret loop jp push jmp addr16 push imul loopne jg push aas rcl rcrb and xchg pop data16 out (bad) shrl and and shr sti insl ja andl orl inc into mov pop mov adc sub mov push lods xor das cwtl dec lahf mov fdivp sbb jp mov pushf xor jbe mov sahf ret xor push jge jb scas cmpsb cmp pop popf and (bad) cmp lods mov mov jns xor mov gs data16 xor adc subl sbb push iret mov jge sbb sub jl adc popa shll mov mov cmc shlb inc stos and and inc xchg pop mov or dec inc push xlat bnd mov insl sti push loopne cmp push xor sarb push int addr16 xchg jo dec fiaddl icebp or jle lea xchg ljmp inc repz int3 and daa add sub insl inc inc cmp jl into stos aaa push fstpl sub leave arpl js xchg scas in sahf or and mov incl xchg loope cwtl pop imul fdivr push loop jge or ds mov mov adc pop int mov mov lea mov shl mov sbb push pop (bad) mov cltd jmp sub add in jl cmpsl lods cld inc push cmpsl in push or in (bad) jae ljmp ds cmp fxch popf xchg fidivr lods pop sub pop xchg fnsave rep mov mov and shll mov add inc push mov dec adc cmp repz mov or lahf daa lods lds cmpsl push fsubrs lret adc inc jp jne (bad) aad lock (bad) jmp leave pop call jne push xchg pop in stc int3 lcall out mov and xor mov xchg mov inc leave push mov call inc nop out cmc ds lods (bad) mov cld fisttpl out push fsubrp test push std pop call addr16 and mov xor dec xorl sub (bad) fcoms jbe pushf mov or xlat insb enter sbb fild insb test cmp lcall mov test inc std mov xchg mov fdivr andl ret fimull iret loopne mov and out add pop int3 ret shrb inc dec bound lcall jl (bad) and jno jl in push aas jns push pop mov clc repz out jge cwtl es push sahf cwtl cmp fs js mov xor mov int3 pop arpl adc sub out add insl xchg mov xchg and xlat push loop aaa aam test (bad) popf cmpsl out xchg mov ficoml test repnz xorl adc xor (bad) aas xor cmp xchg and inc sbb add imul ret jge addr16 aas test loop pop fs rcrb mov aaa loop sub decb mov mov ljmp adc out add mov xor ret scas fistpll mov icebp mov sbb mov rcrl inc xchg push sub dec jo push xor or jge cltd xchg (bad) ret clc scas bound iret add or std data16 ljmp jb popf enter jle arpl andl xchg jnp cmp push sbb sbb dec adc shl or xchg dec hlt jge jbe daa push leave mov lahf enter xlat inc dec and and push popa mov xor (bad) int3 dec sub xor arpl adcl dec jae cli sbb pop push cwtl add cmp ljmp or ret mov and pop sub aad fsubrp add test imul call jne xrelease mov out das xor ret mov lahf xchg mov in sbb push fcoms mov (bad) outsb cmp add out xchg (bad) adc addl (bad) mov js (bad) (bad) mov rorl clc fbstp sub dec aaa pop inc and iret xlat fsubl int3 in and cmpsl mov jbe jmp xor jmp jne ret mov or arpl dec add ljmp fisubr aad or lahf mov ja inc xor push cmpsl std mov push adc xchg outsb out add mov je insl or scas jmp cmp arpl (bad) cmp pushf pop jle js xor (bad) outsl jmp lcall mov int call cltd jb fdivrp xlat in push dec cmp rorl cmpsb dec (bad) rolb jl test sub mov cs (bad) fidivrl pop je call cltd std movsl add aam xor ja clc pop or add cmp xchg fsubrs or adc dec or add in push pop fdivs test mov push jecxz data16 add sub jmp mov aad cltd xor test movsl inc push test outsl fwait xchg lds push xchg xchg (bad) mov or pusha cmp and fidivl lret xchg sbbb mov jecxz mov scas and adc or aas add enter pop ljmp pop lret mov cmc popf aam cmc inc sti push jo and pop sub mov (bad) notl cmc mov inc jecxz leave das (bad) jae add inc aad sbb push stc addr16 dec add or pop imul jl dec mov sbb mov sub cmp sbb mov push jl jbe xchg jecxz mov movsl rcrl lcall inc or imul outsb or imul out outsb cmp clc clc inc sub inc sub repnz in jb jg push (bad) adc inc or jp (bad) bound inc aam clc jg les sarb test push je cmp mov mul xchg lock adc fmull (bad) lret jmp add fisubl and dec dec hlt loope inc shlb enter insb into cli (bad) outsb pop (bad) imul xlat pop cmp fnop ds shrb mov pop sbb or repnz rorb fcoml lea inc int loop fs in sub aam cmp pop pop sub dec std mov sub mov out cmpb inc incb mov lds adc sti cld or iret rsqrtps mov sti dec in ret (bad) js sti push inc movsl jmp sti fadds popf sbb mov xchg popf dec sti scas push dec xchg cmp push sbb in into or mov out cmpsb jns inc sbb popf aad sub ljmp mov push sbb add fs pop dec dec hlt mov pop in sub inc stos inc pop xchg mov push adc cld cs push jle jae push (bad) jno push int3 push lahf pusha push cs ljmp lock aam ljmp push dec xor adc mov ljmp and sarb mov js arpl sahf sbb push mov push loope popf dec dec xlat and movsl pop lcall xor mov pop in pop idivb push adc push shl in dec insl pusha push sub ds xor shrb lret jp mov aas sub data16 jae das sbb mov jp aas adc stc xlat mov mov outsl mov shlb pop push aad in sub pusha (bad) sti (bad) sbb bound cmp mov or imul (bad) dec pop xchg sbb ret sbb test (bad) jg add (bad) or aas data16 out mov test or inc cmpsb fnop pop dec fnsave jle add or push dec sti out out inc sbb push sub pop lret pop cmc outsl jb imul in test (bad) push out xchg push lea jne ucomiss adc in (bad) jb imul addl inc out mov fistpll fs in mov mov setl aad popf (bad) dec push xorl lret fdivrl pop out lcall inc adc pop pop daa cmc mov ss and xchg rclb mov pop push push add imul aam mov ds xor std dec out or jo ror addl (bad) fmull inc add mov out notb jg shr push ljmp popf ret loop in lea scas rcr icebp jecxz,pt in dec leave pop leave loope inc ret cmpsl sti cs dec push in aaa outsl pop xor (bad) cli (bad) sbb pop jmp fcmovbe les scas add (bad) (bad) ret or addl scas (bad) jbe and int test andl int3 fsubrp ret mov les adc xor xchg mov or arpl call dec jbe adc pop mov out loopne mov jecxz arpl pop out in fsubl pop cmp mov push std icebp dec imul mov jle cmp sub lahf pushf dec add xor xchg jnp mov xor dec push push pop pop repnz test fistpll dec xchg pop lods mov push pop fcoml mov dec (bad) adc push sub inc sbb iret or ds test enter repz aaa push fistpll xor mov jne xor insb enter or push sti xor fist into insl xlat cmp pop (bad) add stos int3 cld pop loope and in sahf lcall clc (bad) inc and ljmp sbb flds enter inc cmp pop idivl mov xchg test pop jno mov fist push data16 mov add leave pop addb mull cli add inc cmp lock mov sbb call mov lahf add cmp mov mov rcll jmp mov imul cmp inc lds fnstsw and push mov adc imul pop cs stc neg call xor shrl sarl jns and cld int3 add imul dec or cli and xor mov adc push cmp pop sbbb adc jae mov mov push daa cs adc cltd sbb pop sub cli scas xchg inc push repnz push dec push xchg fdivrl pusha (bad) mov sub pop (bad) jae mov jecxz lret sub inc jecxz out in xchg aaa cmpsb inc adc repz loope sahf dec cmp pop pop mov or mov jecxz cmovp pop push rclb cmp dec test ds lock mov inc sti mov lahf in iret in (bad) cmc adc aad enter push ja xchg test test js pop orb inc or push and shr inc cmp rcll dec test in sbb cmp pop xchg pop xchg call popa adcl in or sub mov cmc jmp int push and movsl adc xor enter or push ret test pusha xor fdivl jns or fistp xor aaa cld scas sbb jge and add in daa sub insl rcrb fwait sbb shl shrb push inc pop sahf movsb addr16 testb insl stos cmp sahf sub push pop subl push inc or stos jb push mov jae adc xchg cmpsl jbe dec pushf lahf test outsb fwait mov dec add mov std mov addr16 repnz or aas ret jle dec gs lock bound fldenv cmc pop sbb arpl push movsb xor or xor aaa adc jmp jb fs mov and pushf sub push orl jb push mov es pop jmp dec mov into pop mov mov mov xlat enter and out idivb lret adc xor cmpsb mov adc sub adc mov mulb call out out sbb aam test test jns data16 add mov inc sbb loope lcall jl lds in rorl into dec mov pop iret test mov cmpsb mov inc arpl sahf fistl int3 (bad) sbb (bad) cwtl and sti mov cltd push es mov cmpsb dec leave add pop int mov aaa cmp test xchg dec push mov fdivs pop jp or cli mov adc fdivl mov xchg dec mov aam popa push or loop or jg stc mov inc imul data16 ret addl add push and fiaddl pop or mov fadds or lock fsub xchg mov in ret xchg mov loop adcb mov mov add xor aam xlat dec adc or adc negl jbe dec popf or mov bswap pop imul dec movsb out add dec mov inc sarl or push loop jb ret cmp and lods bound cmp ficompl and adc daa mov cwtl cmpsl or mov jg or (bad) imul pop cmp ret jle leave movsl jecxz sub movsb std addr16 stos shrb pop sbb adc xor sar call push icebp fwait xchg push push sbb test sbb mov push cmp xor mov mov xchg jl aas mov (bad) cmp adc arpl add cmp lret inc sbb aad (bad) adc jl inc jp jp ret or jno inc shr bound outsl (bad) adc mov mov or push pushf jo mov push jnp scas cmp shrl cmp aas test cs cmp add mov stos mov add into push int push xor lret icebp mov arpl shr mov inc adc sbb sub arpl gs lock leave push mov into cmpsb jo pop addr16 adc sub sub scas push sahf (bad) mov push mov push cwtl dec and push data16 fwait cmp pop outsl cmp out xor sub out ds sub mov jge jecxz iret out movsb addr16 testb outsb movsl jne test cmp std enter loop,pn out negl cmp or int3 fwait mov push lret jl mov pop sub cld dec xlat pop daa mov adc push popf fisttpll and add insl xchg insb mov xlat and lret or ret out js pop and xchg sub je hlt fidivr lds jle mov lea (bad) jge jle mov or repz (bad) adc enter xlat mov xchg imul and and sbb sub mov mov stos cmp and lods fcomi aam cmp inc sti imull sti lods xchg popf dec gs xor or stc or jo test mov data16 (bad) push ljmp icebp push pop arpl adc jle (bad) call sbb mov xchg push sbb repnz fisubrl add fsts jae mov loope inc leave sahf adc mov add adc mov pop mov push jb push leave inc xchg in xor pusha or shlb popf dec mov xor dec push sbb stos cmpsb dec fsubs test xlat repnz or fdivrl jecxz out cmp xor pop dec xlat sbb repz xchg scas mov into or nop and ret iret pop int scas push lret std inc cwtl mulb fs lods push mov fistl das xchg add fdiv pop je mov nop mov mov test cld inc incl push data16 mov ficompl movsl aad fdivrs push test fwait or xchg lret xor lock enter lret mov addr16 sbbb xchg sarb cmp pop mov dec roll mov cli fstpt jecxz out add dec and mov push (bad) jle mov mov fs adc cmp xlat pop lret stos add adc push sub add (bad) inc dec push jno and das xchg mov fmuls roll push mov lea xor in dec jg lcall and pop or test mov lods mov popa or cmp lcall imul push cld cld lea sbb mov xchg mov xchg scas scas pop mov jo xchg add fmul pop gs adc scas push add sbb fidivl addb xor add jp push inc lahf adc mov push sub xor sub mov add enter or and sbb sbb insl repnz push lods push enter mov push mov in jo in jnp in cmp add fisttpl mov push fisubr fcomps dec fsubrs xchg lock xor adc cs sbb adc fwait lcall pop in jg lcall push or jno jae mov and lds (bad) and ds or and mov fbld add stos sbb test inc xchg movsb ds mov xchg mov xchg pusha es lock xchg mov dec fisubrl mov dec fsubs mov and xchg lds icebp jle lcall jl cwtl push cmpsb shrl jp xchg push mov lea jae lahf mov pop add mov aad pop sbb icebp stc popf fisttpll icebp in xchg sbb xchg mov pop rclb in jb bound dec mov scas fstpl (bad) aad cmc pop or jnp repz roll fdivs xor lock roll ds fildl cs (bad) lock idivl inc push mov (bad) dec mov shrl cmp outsb int3 and jb xchg enter pop gs rorb adc jbe mov in in (bad) fs clc ss shll insb lods fnop in cmp (bad) push adc mov fnop xchg mov mov xchg cmpsb or jg iret call push jle add fwait or and push mov jnp fdivrp pusha out das (bad) shlb dec imull (bad) fcomps imul cltd ret in fistl push ret inc sbb dec inc aaa clc test dec ret push loop push and push leave dec pop js adc ds lret stos or insb cli add cmpsb lret jns out test movsb pop inc or cmc mov and xor and cmp jns jnp outsb gs xor test aaa xchg cwtl es pushf lahf pop in icebp jge cmpsl jb sahf shrl (bad) xor (bad) insl ffreep dec pushf mov push std outsl dec daa ret (bad) (bad) jmp push cld mov push or xor les loopne xchg mov push (bad) cmp add mov jbe lods cmpsl fmuls dec push xchg mov dec xor roll inc cmp cltd mov mov xchg test les add jmp fidivr or dec dec cwtl loop (bad) loopne cmp sahf cs fist push push insl add adc cmp shlb add and faddl adc jmp (bad) push popa xor inc iret jge fisub das ja lds in add subps leave jge sahf sub insb push sbb cmpb (bad) (bad) aam lret mov stc pop pop push popa xchg lret rcl mov cmp pop mov push pop loop mov push arpl or and insl adc fildll or fild sub mov ja adc xor add stos dec mov (bad) outsb ss aas jg push dec cmp daa or aad fsubs inc sbb or decb arpl xor xchg jo mov addr16 inc xchg stos outsb loopne in dec mov inc mov push divl movsl imul mov lret outsl loope aaa lahf fbld push (bad) lods pop mov mov cmp pop mov jae and je cmpsb jp pop jns mov aaa or subb pop inc scas sbb adcb and xor xor mov data16 add addr16 scas adc fs fisttpl aad lods and jl jns xor hlt and add xchg ljmp in std mov cmp xor jae ret (bad) pop lret test mov mov aas mov scas mov clc xor je jnp lret ret sahf sbb fldenv shlb je push pushf sub sbb int xor shlb xchg call dec sub or adcb adc cmp in dec call mov test push lods cmp popf sub jmp cs mov shl (bad) cmpsl pusha leave cmp and xchg mov push fisubr ficomp stos ja jecxz sbb xor adc cmpsl cmp fsubs push push roll in xor stos pushf sub andl pusha out jl in out dec mov mov and inc cmp xchg sbb pop (bad) dec push jp retw xor push stos lods cmp mov lahf outsb js push mov js sbb xchg add pop icebp mov cli pusha cmp cwtl cmp xor jnp es adc fild std dec pop stc lock lcall addl (bad) cmp push xchg and fsubl push fist (bad) movq cmp xchg sbb mov push xor push leave scas sbb cmpsb xor loopne xchg add inc or push outsb mov iret inc es mov mov jnp into lcall inc mov mov sub xor loop sub xchg and test fwait adc ss pop call scas cmp ficom jbe nop dec cld std dec or jb cwtl sbb cmp rolb test les sbb xor push sbb xchg mov movsb pop rorb jle push mov push cs mov push imul inc or stos jle xlat (bad) lock xchg decb push movsb loop push ret jnp adc sbb pop ljmp int3 xlat insl aas sti insl ffreep cmp sahf arpl and in orl (bad) (bad) push loop push ret sbb jecxz ret lret xchg mov fwait xor mov cmp cmc loope iret xor test mov cltd or inc jbe cltd dec (bad) out pushf fs jo aam jae push lret icebp shlb sub mov sbb or inc into fildll jp sbb sahf outsb inc fist push push mov jp lods cmp out lea shrl sub sub enter pop les cmpsb mov push mov je push movsb xor jns data16 pop xor test and mov adcl jle push add inc lods scas ret sub jle pop sub leave push jns jl enter das mov xor sbbl xchg jb clc loope call jp xor sbb icebp stc popf fisttpll icebp in cmpsb dec and add test sub les add lock and jmp fisubr sarb arpl leave xchg or dec dec jo fmuls cmpsl iret pop sub jo pop mov jge mov imul pop adc sub into xchg inc into fildll jo lret fistl xchg cltd scas sub pop xchg ja (bad) daa outsl (bad) frstor add mov sub les loopne xchg mov cmpsb xor fstps into xor xchg rolb mov adc data16 or les (bad) sbb inc aam jnp adc js fdivp pusha out negl stc mov sbb mov pop push xchg test adc nop lcall jl push pop (bad) push lea (bad) jmp mov (bad) fildll insl in loopne test dec sub push movsb pusha ret mov mov decb xchg xor push arpl inc lret adc flds jp das in add push movsb loop loop cmp inc pop or sub jle mov out cmp sub mov push outsl and sbb or in je mov or lds sub ffree mov stos decl stos arpl shld jno lock or and outsb inc pop or (bad) adc xor imul and jle or outsl inc lcall in jp sbb dec out dec or adc addr16 mov (bad) xchg stc cs inc and add mov fwait push daa aad icebp sbb add mov repz in movsb xor iret es xchg add (bad) shlb dec enter out xchg add xor mov aam lock mov cmpsl push cmpsl outsb gs adc cmp (bad) or dec sti imul push jmp scas cmp mov imul push mov push arpl inc enter jne sbb insb jnp push mov sarl aad lods bound mov or add sbb imul jne mov stos inc sbb lea cmpsl push ret adc das cmp sti repnz push addr16 popf stos out daa jne mov xorl dec fcom mov lds xchg loopne nop push mov rcl sbb popf or cmp hlt push xor mov inc jmp xor mov cmovg dec jns sbb inc cli and (bad) sub mov mov adc es xchg add jno lret movsb push sbb mov dec mov scas cmp (bad) mov ljmp imul ds mov jo mov mov dec pusha jae mov push das addr16 mov mov imul mov scas dec (bad) ja lods mov test push and out xor pop and jo inc mov es mov cwtl or dec push xchg and imul lods bound fimul insl and rclb sub dec and stos lret push mov ja or pop lret cmp xor sbb mov out pop lods lods js mov loop inc popa (bad) in adc mov popf je jecxz jge test and jo dec mov cs mov cwtl or int3 or lods data16 fildll bound loope fs xchg jmp xchg arpl cwtl mov popa inc std mov ja or pop iret cmp cmp xor sbb mov loop pop mov js mov mov jmp sub stos add sbb jge test and jo dec mov pop das mov cwtl or dec or lods bound fimul insl and rclb sub dec jmp call jns mov mov ja or pop int fidivr xor sbb mov cli nopl ljmp dec pop loopne sbb push pop bound jle pop cwtl bound pusha mov mov pop or icebp dec lcall sub inc jl std add cmpsb mov dec mov adc push std mov mov jb fmuls enter stos pushf xchg in cmp arpl in or popf dec mov call mov (bad) adc push cmp or lret call mov test and jo push mov jbe mov cwtl or dec or lods outsb (bad) fbstp and rclb and int gs insb gs mov ja or pop (bad) cmp cmp xor sbb mov cli nopl ljmp dec pop loopne sbb push pop bound jle pop cwtl pop dec shlb sub pop sub dec (bad) scas call cwtl (bad) sub lret mov int3 jge divps pop aas sbb std cmp popf fisttpll stc inc xchg hlt sbb fstl loopne lods bound jo int das jg int jle or or cmp inc lock test dec cmp pop mov push pop bound jle pop cwtl inc dec shlb sub fsubrl mov pop or icebp dec xchg (bad) sub push add mov imul std push ficoml push in popf fisttpll stc inc xchg cli sbb fstl loopne lods bound xor fisttpl das jg int jle or dec mov or in and daa icebp ja sbb push pop bound jle pop cwtl dec dec shlb sub pop sub dec mov lcall (bad) sub mov std dec (bad) jb imul ret fs xchg pop mov mov test enter std mov ja or pop fnstcw fidivr xor sbb mov fimull pop mov mov lcall leave xor int jbe cmc inc mov adc xor pop lret sbb popf and add push (bad) fidivrl popf xlat pop jb xchg and insb and add dec mov jl dec or push cmp sub movsl data16 or pop fistpll fidivr xor sbb mov (bad) maxps mov scas sbb loop test es sbb push out stos pop mov jns sbb xlat mov fidivrl popf xlat pop jp xchg and insb and in je sbb mov dec outsl aas sbb add and or mov ljmp sbb dec mov call mov mov mov insl hlt (bad) fwait lret or or lea ljmp mov or xor pop leave fldenv lea enter xlat mov fidivrl popf xlat pop bound xchg and insb and add dec mov sbb add and or mov ljmp sbb dec mov call mov mov mov insb hlt (bad) fwait lret or or lea ljmp mov or xor pop leave fldenv lea enter xlat mov fidivrl popf xlat pop push xchg and insb and in je sbb mov inc outsl aas or fdivrs and pop inc cmc cmc cmp and movsl jmp mov popf dec mov call mov mov mov insb hlt (bad) fwait lret xor or lea ljmp xchg jns dec xorb lods push vpsrld dec inc rcrl cmp push incb fidivrl popf xlat pop push or jl je sbb mov dec outsl aas sbb add and or mov ljmp sbb dec mov call mov mov mov outsl hlt (bad) fwait lret cmp or lea ljmp les push adc or jae (bad) pop enter pop sbb xlat mov fidivrl popf xlat pop pop or cld out je sbb mov dec outsl aas adc fdivrs and push stc mov sub sub mov dec mov call mov mov mov outsl hlt (bad) fwait lret xor or lea ljmp xchg jns dec xorb lods push (bad) or pop sbb xlat mov fidivrl popf xlat pop inc or jl je sbb mov outsw aas sub fdivrs and ds mov test fiaddl push and ficompl cltd test lock inc popf test cmp (bad) jne mov add pop mov push pop bound jle pop cwtl mov pusha mov mov pop or icebp dec mov cwtl (bad) sub mov std dec mov imul rcll and into hlt gs xchg cwtl std mov ja or pop call cmp test rcrb (bad) mov pusha push sub lods js mov mov cmpsb sbb ljmp xchg jb cmc inc xchg jp push (bad) xor scas push vpshufd mov mov enter xlat mov fidivrl popf xlat pop or jl je sbb mov aad push jno hlt gs cs sub movsl data16 or pop out cmp cmp xor sbb mov jne push repnz movsl xchg sub loop,pn sbb push pop bound jle pop cwtl decb pusha mov mov pop or icebp dec mov (bad) sub mov std dec sahf jb sub int pusha negb xchg int3 sbb fstl loopne lods bound jo int das jg int jle or or cmp inc lock test fwait test push pop bound jle pop cwtl out shlb sub fsubl mov pop or icebp dec mov (bad) sub mov std dec sahf jb sub int pusha negb xchg rcrb (bad) fstl loopne lods bound xor fisttpl das jg int jle or or cmp inc lock test enter mov push pop bound jle pop cwtl out dec shlb sub pop and dec (bad) scas call cwtl (bad) sub lret mov int3 jge or fstpl popf fisttpll stc inc xchg rcrb (bad) fstl loopne lods bound jl int das cmp mov cmp jge push cmp es add xor aaa clc mov repnz in inc aam jnp sbb insl cmpsb iret lahf insb insl mov adc push movsl sub pop call mov cmpsb mov dec mov ss push std mov xor jb fmuls rclb cwtl xchg in es pop in in cmp add mov sub fucomp call mov out jge cltd in aaa ret hlt (bad) inc hlt sbb dec xchg inc in add cmc jle adc iret aam sub addr16 pop adc mov pop sbb xlat bound and push cli xor daa mov push mov pushf mov popf outsb outsl aaa xor push lcall mov add fcomp xchg repz fistpl mov cmp add mov loopne inc pop cld loop sbb lret xchg mov push pop mov cmpsb adc lock leave bound jl into jbe add pop in icebp pop (bad) scas notl adc sti ret cmp pushf or movsb pop iret jecxz dec mov ja and inc xchg loop xchg mov test dec loop (bad) cld mov fadd push fisubr ss ja lds lock mov inc sub sbb movsb shr dec jb mov mov or jge test and sub inc xchg adc (bad) test ljmp int3 sarl and pusha push sbb cld imul mov cmc in fwait out dec cltd cwtl jae std mov ja add nop mov (bad) inc inc fsubrl (bad) cld (bad) xor dec push cmp movsl mov sbb cmpsb shr dec jb mov xchg cmp sub test and jo inc adc and adc cli out js pop ja mov fldcw push insl lock or cmp mov fisttpll stc inc xchg loope jae sahf adc add xchg xchg inc push sub add mov pop mov out (bad) inc pop loop adc cmp es add xor ss movsb shl fisubrl mov cmc dec xchg mov mov jmp in pop sbb xlat mov loope jl push je les sub pop out push mov hlt icebp les add jbe fsubp js cltd xchg jbe sub adc (bad) fstpl push and sarb popa xor push (bad) hlt test push fsubs xlat add imul scas push test jge test and jo dec adc and adc cli jmp mov push insl lock or in jle fisttpll icebp in scas dec cld mov pop mov mov xchg fstpt cmpsb xor sbb inc repz and arpl rcll ficoml cltd or call sub pushw pushf sub add dec mov ffreep cmp pop or loope pop push enter repnz (bad) mov sub popf pop sbb mov push insl jo sbb cmp push mov test jecxz mov mov pop or jne adc jbe and xchg add mov in into lahf out xor adc outsb cmpsl icebp mov pop jns daa sbb emms pop jp mov in jle loop ret pop mov sub dec adc ror hlt xor and push pop sbb fnsave push lods cmp in (bad) icebp xchg popa dec ret pop fldcw ss lods lahf sbb pop pop mov xchg mov into in lea loop lods adc push xchg sub ffree xor out push add jnp jge cmp or sub test sub jo dec mov pop jle dec mov push jl dec (bad) xor out push jp push ret xor js push lds aad cmp dec std (bad) mov sbb (bad) fisubr cltd dec icebp fsubl pushf inc repz xchg inc cmc fdiv mov xchg pushf xchg inc test ja pop hlt cmp pop ds or icebp divb out adc push xor cmp xor cmp adc idiv aas in es adc stc (bad) ds and push mov adc out xlat push mov add push push (bad) add push push flds mov adc push pop in mov sbb pop pop jecxz mov loop mov mov add dec mov inc mov inc mov inc mov inc movsb xlat out xlat inc mov in aad mov loop fisttpl mov or cwtl mov pop mov movsl pop sbb les mov cs dec inc inc xor fmuls dec cmp dec inc pop cmp dec dec push aas scas and sarb cmpsb mov jmpw xchg or fs fldenv (bad) dec ret out jbe pop mov adc jl add or cs es cmp ljmp pop adc sub inc push cmpb and xor mov push ret inc sbb sub pop jns mov add dec xchg jmp out mov gs lcall shr ret xchg inc mov repnz pushf inc sub jns jbe aam adc out pop imulb xor xchg xor xlat dec (bad) push jl jg adc jno pop aad sbb aas xor rcrb test pop ror pop call clc aam pop out adcl or clc xor fs jbe mov lock cmpsb inc loope fwait js add bound jns out and fiaddl not inc dec stc or sahf cltd cltd jb adc lds pushw sahf in xor test jge test sub xchg mov xchg into dec fidivrl test int3 xchg pop sub outsl mov inc or sbb fisttpll icebp in (bad) dec and fldenv adc les stos hlt psubusb pusha dec add push movsb xor mov loopne add (bad) xorps jbe test push or loopne js pushf sub push fsubr mov pop pop cmp push shrl es xchg cmpsb jecxz inc nop arpl test fildll cmp xchg add pop push jmp std lods xlat mov fisttpll icebp in cmpsb dec and add pusha dec stos or (bad) mov and cmpb mov aaa cmp or fs fcmove mov gs push inc fisubl (bad) pop outsl test test in pop adc int js ljmp xor sub int3 jnp xor loop sbb psubb inc mov insb and je sbb push lret add mov (bad) cmc ds adc imul xlat fldt sub fdivr push cmp dec push daa sbb aaa fldcw es jp fcmovne rorb fs inc dec je jnp test dec add xchg sub fnop pop in jp fcmovnu cmp add mov lds rcrl inc pusha xchg loope leave or add pop imul jl aad mov mov lret pop mov push push sub or cmpsb lret jns data16 or in ss pop sub jnp (bad) lock adc xchg dec pop and or jp scas out jno adc or mov xchg dec popa hlt nop popf and sub pop ljmp bound jbe xchg dec lods mov movsb mov and notb stc inc jb outsb adc xchg xchg jnp push push loopne pop mov data16 jp sbb mov add cmp dec dec mov ret jno sarl inc cwtl sbb pop pop pop mov mov data16 jp addr16 inc cmp jp cld and mov add je and pop std fcoml in mov pop mov or stc dec xchg dec sti outsb cmpsb pop popl pmaxub stos sahf sub xor inc addr16 mov xor dec mov scas xchg cld push cmp test mov repz xchg push mov out mov lea addl xor (bad) test fsubl mov inc mov push ljmp je call dec popa or xchg and stos cmp fbld and flds jg mov popf dec arpl popf out xor movsb cltd inc jae adc repnz cmp mov mov cmc dec xchg mov addr16 lret mov xor sbb inc ljmp mov and (bad) mov insb lea fs add cmp fbld and fldenv or (bad) notl sub mov xor shr imul push iret call (bad) repnz mov or jno mov lcall xchg shll in es js pop out mov xor pop mov repz or pop dec xchg out inc popf xchg fs add scas mov mov (bad) jnp xchg repnz lds aaa cmp dec sbbl mov dec es sahf cmpsl cli js and or mov or inc shr stos test sub xchg jb jecxz aaa mov push xchg push stos mov pop arpl xor jb ljmp fwait insb dec (bad) fst dec inc xchg imul sbb fldenv jo or fstpt dec test fstpl mov xor shr imul push iret call (bad) repnz mov or jno mov lcall lret shll in es js pop out mov xor pop aad pop sbb icebp stc inc adc sub sti mov jle jbe mov mov ja adc gs and mov cmp jmp add sbb inc mov adcl mov or cmp jle pop and push pop leave stos and mov sub inc inc sbb out data16 dec roll sbb ret lods sti movsb cwtl mov jnp outsl xchg jmp jge jno out xchg fnstenv add ret mov xchg jmp dec aad xchg add fcomps xchg jnp push sub jecxz push cmp es shlb ficomp or test xor sub mov or sub cmp adc leave test aas hlt movsl in aaa xchg mov xchg push mov int3 sbb mov popa or icebp fstl popf fisttpll repz (bad) sbb mov mov and xchg xchg mov mov scas and xor int pushfw daa or xor shr arpl mov xlat call (bad) repnz mov or jns stos enter fcomi ja stos adc pop in jp rclb int test xchg (bad) xor pop gs insb fist popf mov fdivrp outsl popf push jge mov cmpl cmpsb jbe aam inc imul pusha push movsb xor push pop add pushf sub push fldcw in lods es cmpsb cld imul repnz xor pop ljmp and sbb fsubl fcomps enter mov mov scas je mov gs lods inc sbb frstor popf fisttpll and lret loopne cmp push jb outsb xor or (bad) (bad) pop mov fstpl and xchg mov testb lcall sbb dec pusha sub aaa inc and stos sbbb add mov sbb bsf (bad) jmp data16 jbe ret aaa lret add adc test add and adc jae lds sub cmc adc es repz sbb mov xchg aaa mov push cs subl push cmp into repz cli lods es ja adc in iret dec mov test xor icebp pcmpgtw faddl sub mov adc test push adc std cmpsb popf or lods in jmp scas cmp pushf (bad) stc jns xchg in fwait mov xchg jb fisubl repz push loopne adc ret aaa jno dec addr16 dec fildl dec fcompl leave jg cmp stos mov (bad) call xchg and mov or xchg sarb add mov leave mov andl int and inc cmp movsl (bad) jb (bad) fdivr mov and mov (bad) notb ss test jecxz imul pmaxub add hlt jp mov xchg pusha ds mov sub jecxz (bad) jecxz mov mov lock or out cs xor int3 jns fbld icebp pop jl jecxz xor test mov sbb push xchg jp sub cmp arpl pusha negb or stos cmp add mov dec popf fcmovb cmp mov outsb rorb test pop popa push add xchg or (bad) mov jl (bad) (bad) jecxz shr mov sbbl dec mov in (bad) dec mov lret jmp mov sbb push ljmp inc fildll sti insl dec scas insb or outsl push lods cmp mov xchg daa inc xor bound push leave inc xchg lock push fsubp outsl hlt in int (bad) pop push add into mov xchg push (bad) jecxz sarl mov jmp (bad) jecxz rcl dec xchg jl out jnp push pop rcrb jle jbe arpl mov pop jb xchg jns,pn mov mov push ds and dec jbe cmp push imul imul in in (bad) push loopne cmp scas push pushf sarl cmpsb rorb xchg hlt mov push stos cmp fsubs xchg popf rcr jmp orb insb sub mov sub jl cwtl scas jmp jp adc pop and inc (bad) jno (bad) xchg scas pop mov enter cmpsl aad push sbb test je (bad) cmp mov js adc xchg add fmull cmp pusha mov je clc xchg and mov jb fsubl pop ja lods mov push stos fsubr cli loop out lcall stc lret xchg push xchg and jns sub repz test mov pushf pop call sti xor shl pushl sbb outsl ds pop bound decb subl in fstpl push pop hlt add (bad) daa push add cmpsl pop mov xchg pop xchg movsl jl dec (bad) adc fistpll mov insl mov xchg iret fwait es fwait push mov int3 mov pop popa sub jne (bad) xor jbe inc adc push inc outsl and mulb insl daa or push cltd ljmp xchg sub cmp loopne ja or cmp add or cmp cmp add jo dec or dec and sbb aaa jg add jecxz dec add sbb setl xor sub xor insb xchg jecxz jo fstp popl push leave jg movsl xchg lahf movsbl jecxz xchg das pop lock cmpsb mov dec lret pop icebp push xchg jle iret and add add jo clc push fwait negb cmpsb sbb add push in adc popf dec mov mov dec mov sub lret in movsb (bad) adc cmp or jp test or inc lds test sub xor mov sbb xchg push mov inc push les ds push mov xchg orl ret mov xor std mov jns insb mov (bad) pushf mov sarl dec push loopne les cmp pop ss sub bound xorb and mov adc dec pop fucomp inc addr16 in cmp testl xlat test loop mov push sbb outsl inc push (bad) jbe (bad) sub insl lcall jle or popa mov push fisub jp ja jl dec (bad) std mov ja add in cwtl fwait loope nop lds out cmp push mov lods js pop cmpsb lea jnp loope (bad) lcall fsubl test and cs or xor sub scas pop mov pop push inc sbb std call (bad) push arpl dec sarb adc xchg mov ud2 rolb frstor sti rorb cs neg mov sbb or popf dec mov mov fidivrl push mov mov cmp pop xchg jno sbb push pop addr16 push sbb sub push mov (bad) or scas mov xchg fstpt add push xchg lahf popa cmp out mov insl mov jnp aad (bad) push in push fcoms xor lds sub sbb dec xchg xorb dec popf loope popf lea cmp out mov jge xchg dec adc sbb adc or cmpsl (bad) jnp xor push adc pop pop insl repz dec sub jo fstp in xchg mov and mov out add (bad) test arpl add iret inc lahf cli xchg fldl das ret mov xor xor jmp jnp popa cmp mov jmp add dec faddl test enter iret movsb or icebp jle dec daa cltd or push dec cmpsl testl xchg jmp mov lahf xchg arpl cli leave je stos lock test mov fnstenv incl insl mov sbb sbb ficompl das push les icebp ret cmpsb xchg out (bad) std xchg nop clc mov les in xlat fldt adc fstpl push and rolb dec mov mov cmpsl aam fadd inc mov xchg ja add fcmove pop push fwait xchg scas jbe jno (bad) lea mov dec sub sbb pop sbb xlat mov int iret movsl mov inc or cmpsl sbb repnz mov idiv cli adc push movb adc jae sub enter mov cmpsl rcr xchg fstpl xchg popa adc loop iret (bad) test adc cs rcrl roll adc jp mov in xchg cmp iret xchg cmc dec mov sub lret cs sub push out cs les xchg jno push inc icebp stc mov ljmpw inc sbb js test les imul fnop aad cmp or add cmp cmp mov cltd jg sub mov push scas ljmp sub pusha fwait test and es adc pop sbb outsl sub aas xchg push mov adc xor or push popf fisttpll and cmc stos stos mov xchg in dec daa in inc or mov loop lea jb sbb or lods or aas lret push xor xor mov inc xor cmpsb xchg lock loope pop aaa pop ret mov (bad) outsb fwait insb dec fstps mov or lahf mov xor add insl cmpsb mov inc pushf fwait insb dec xchg add push jmp fwait leave inc push sbb int lcall jle jg rcll sbbl dec popa mov mov cltd in es push (bad) cli sar mov mov and jge adc and jne iret lahf push jns pop adc daa lret xchg lahf mov sarl lcall jne mov dec mov hlt adc insl mov cwtl sbb rorl cmc aaa stc pop fwait (bad) cld pop xchg imul jg bound jbe push or popf jge sbb sub repnz dec ret out mov xchg push shr inc xchg rol mov test sub jo jno cmp inc jl arpl ret repnz push mov inc (bad) hlt sbb idivl (bad) push fld inc xchg mov pop push mov lcall xchg in fwait addr16 xchg lods popf jno push pushl cmp or (bad) insl std outsb jecxz push cmp es pop aam xor sbb push mov mov fsub sub dec inc mov jnp xchg dec push lods cs sbb push pop jo shrl mov mov sbb rcll cmp adc scas pop dec lahf xchg lahf (bad) adc or dec push mov lahf mov or inc movsl xlat dec sbb sub fisubr add inc pop icebp testb imul pop in lcall pop cwtl or insl and push xor das mov sub jns sub cmp ds dec xor pop mov (bad) xor loopne push lds flds ds push xchg divl (bad) insb mov sub stc add pop jno mov bound xor lahf inc lock jg cltd or aam pop jp pop pusha int3 fild xor xor les push mov in repnz scas pop sbb mov and inc push hlt jbe in sbb shll daa sti or imulb push add test es shrl negl aad int xchg sub mov push mov cmpsl cs pop pop scas js xchg pop mov adcl in xor fnop pop in jp lock mov into sub mov arpl shr inc pop iret jecxz sti arpl cltd jae mov and sti adc ds fistp mov or das xor clc or rol repz insb mov dec fisubrl jbe and add push (bad) jb mov mov or (bad) sbb and jge test jmp je inc push lret leave test test out pop jb inc and inc add call mov fcmovnb dec cmpsl xchg jnp pop cmpsb dec iret pop fs adc outsl sbb clc shrl push test cmp push fisubr pop cli insl repz xchg mov mov mov ss popa scas jle push movsb xchg xor cmp and cld shll jl (bad) (bad) mov das mov sbb push outsl xchg test pushf inc (bad) fbstp popf cld inc adc push stos mov addr16 inc mov cmp shrl add inc int3 adc ror rcrl (bad) aaa repz arpl cmp mov cmp jns subl push int out scas out jno test lcall and clc iret pop ljmp mov ret mov xchg adc mov or fisub addr16 lds (bad) outsb mov push inc lret lods mov jmp mov mov mov rcrl mov sbb ljmp xor add adc mov aas pop jae mov mov es mov or lret movsl in lret sub sub insb lea je push stos mov jmp lods fistpl sub js ret int3 adc jbe (bad) mov mov test repnz inc fdivs movsb shll or lret fcomps fcmovnbe sbb mov shll les and loopne sbb push sbb int3 pop pop das cld cmc pop xchg jle xchg pop nop fs fstps jle and jle push and es xchg cltd mov cmpsb ds pushl fwait pop dec iret gs mov imul or push leave cmp loopne cmp in lret cmp ja xchg loopne mov push out repnz xor and mov popf popf and inc mov out cmp lock fdivs inc call rclb bnd push pop adc cld inc shl jg mov (bad) arpl ds pop bound or cmpsl sbb mov aaa and call dec daa mov scas fs pop leave cmp insl jecxz ja pop arpl ja loope dec (bad) pop jns repnz and and pop adcl gs pop jno (bad) aad lock adc jmp mov ss movsb pushf inc mov push pop sbb outsl and aas sahf push mov adc xor mov daa xlat cli test push mov lcall negb (bad) out xor ss adc cmpsb ja and repz std aas or ljmp lds scas inc sbb or pop in cli out das test lock imul test imul (bad) xor ss adc push fsubr cli mov adc repz and pop cmp popf je into fnstsw daa push xchg xchg jae sbb movsl inc mov xchg movsb cmova cwtl or adc sbb (bad) les fwait push pop jge test mov loop rcrl jp adc ljmp xor or jno rcll (bad) aaa inc add ss add mov and push mov cmp pop pop rcl sbb mov pusha sub and push adc xchg or pop cmp fisttp jge xchg jle mov lcall mov enter xor ljmp mov outsb push data16 iret (bad) call jo cmp out out mov std outsl push fxch sti lahf (bad) sti or das push sbb test call nop add push pop adc push js (bad) fwait out fwait lds aaa cmp subb jge xchg dec push mov negl imul pushf sub adc mov or dec jno icebp scas pop sbb idivl mov fnstsw mov sub sbb fwait dec (bad) aaa test fldt fdivrl mov outsl mov test (bad) push inc mov adc rolb lret sub pop jns test test in cmpsl sub inc pop jecxz jns popa (bad) xorb ja cmc arpl mov jecxz aaa sti or xlat dec es test dec mov iret adc mov arpl mov xchg or out sub cmpsl sbb test add fsubrl sti mov popl scas ret add cld xchg add mov dec push ja lods adc sbb fdivrl pop fidivr xchg scas jae out pop shrl pop cmp roll inc int3 jle mov cmpsl aas lret pop sbb mov xchg pop mov das out xor mov push ja mov pop (bad) sti dec sbb mov add jnp shrl outsl movsl xchg addr16 jae and lods jbe pop dec outsb pop sub int lods jno aas add inc mov or rolb aas pusha leave dec xlat sbb sub scas fdivrl lock xor lahf adc iret mov popf xlat dec mov xorl dec lods pushf jl popf xchg cmpsb mov push out hlt sbb push imul (bad) jne sbb int cltd insb cmp push xchg imul enter sub cs pop add int3 loope (bad) adcl mov je jecxz mov cld cmp mov pop pop gs leave (bad) jg sub cld aam mov dec loop pop into in js xchg jns mov pop sub xchg sub or popf fisttpll and sti or into mov bound clc pop sti mov addl ja das jge sbb pop add push js (bad) cmpsw outsb cmp call mov rorl jno inc aam lock sbb (bad) mov xlat inc mov add ja sbb cmp push pop outsl mov inc les push pop repz xchg popa jmp mov addr16 inc mov mov push test hlt rcr stos mulb pop pop or fwait lahf aas aam popf dec mov rolb fisubrl jbe sbb in mov inc iret les inc add jmp xor test sub pop mov fcmovnbe movsl jp lock mov into sub repz cwtl scas hlt ds or push ret dec pushf ljmp popf fisttpll repz mov mov mov and xchg xchg mov mov scas and int lds xchg jmp mov adc imul out push pusha jp adc inc mov xor adc inc xor and and sbb xor pusha nop bswap xlat sbb push imul and (bad) movsb sbb aaa hlt or jnp scas xchg cs mov dec (bad) sbb add sarl (bad) stos jbe or lds cmp push aaa jne jmp xchg xchg push ret sub push fdiv jl arpl mov sbb pop test cmp icebp in lret out inc iret jb in mov xchg mov stos cmp push pop lods cmp sbb add push mov jae inc insl xor pop in xchg pop lcall or cmp xor and jmp sbbb cltd enter adc repnz mov and mov mov aas inc jo jmp jns sub dec rcll (bad) pop inc fsub test imul pop mov aam jnp or mov push sbb hlt mov jo push mov pop data16 lret pop in fnstsw mov ss push mov clc dec test es push dec sub pop pop rolb fcoms add push mov jns push pop sbb pop jbe and int xchg adc ja xchg cltd jle sbb fild insb cmp (bad) mov lods insl xor clc push mov aaa clc mov cmp adc jo mov outsl jae push loopne cld bound loope fs hlt mov push jns sub iret push jl inc push sub loope sahf jns adcb mov jns add and adc loope push enter sub (bad) mov pop inc add enter fldcw or ds sbb sub jmp (bad) icebp xor rcrb rcll cld mov fbld cltd mov fsubs cmp mov rolb (bad) roll (bad) pop movsl daa cltd jg add and js lret ret sub pop cmp cs jo pop mov mov cmp sub daa (bad) shrb cmp shll lods das lcall push mov add inc idiv sahf cmpsb add lret pop fdivr mov add mov sub popf dec mov pop mov lea mov ds ljmp or adc sub rorl pop outsl dec imul lock mov push insb imul scas mov dec mov (bad) loope out mov pop sub add inc mov call or xor stos mov pop imul int3 (bad) (bad) cmpsb out incb dec (bad) out mov (bad) mov cltd stos movsl jmp roll adc sub mov push mov pop push cltd push pop stos mov pop add or out push mov cmpsl push loopne rsqrtps roll movsl outsb dec xchg aas or dec test lea jno fmull sub lahf push jp jl adc inc push sub test test repnz repnz or and mov adc jge dec lds ret xor xor pop pusha jp add popa daa sub jb pop mov (bad) pop push or popf dec stos stc lret xchg xorl pop mov lea jae xchg sbb shrl lret jl aad fdivrs xchg in sti inc jb and add pop repnz cmpsl mov push loopne scas pop inc mov pop push fisubr push mov xchg test (bad) bound xor lods stos jl enter or aas lods fiadd rcrb sub scas je clc mov es or jle adc sub mov int3 pop arpl push push in test and sbb imul mov call inc nop out cmc ds pop and fucomip cmc ja xchg mov out test mov scas outsb (bad) dec iret inc iret push fs imul jne ret aam stos fcompl cltd cwtl jns add sub xchg stos jb push mov xor rcll xlat and test (bad) lds movsb mov shll mov mov daa dec rolb and jmp mov enter sub xor stc movsl insb test sub fisubr shlb imul fisubrl or mov jl (bad) xchg cwtl mov xor and jno mov into xchg mov add in (bad) mov imul outsb and add aam mov es add and inc rcl dec gs pop dec lods pop int3 fildll inc fnstcw or cmpsl bound (bad) cltd daa rolb cmp inc mov popf or inc mov mov inc lds jb jge jb inc mov push and mov rolb addr16 push push add lcall jb es push inc (bad) aam in sbb bound loopne nop push dec and cmpsb add add in repnz xor movsb xchg fistpl or pusha in adc aas int outsb cltd ficom dec cmp jb (bad) dec repz cltd ja adc je mov cmpsl bound pop pop out fcoms cmp pop xor in mov mov sub or mov dec ret or and pop or fs xchg xor gs icebp inc das dec xchg je push add ss popl pmaxub aas sbb push test fdivr mov cld out and mov test mov (bad) rcl clc mov mov cmp pushf or xorb fnstenv xchg aas mov int3 xchg out rclb js loopne mov incl and js dec outsl xor cwtl xchg call push or pop mov dec adc pusha jne ds xorb mov out push sub sbbb push xchg (bad) insb scas paddsw movsl push sbb mulb mov loope cmc maxps mov pop adc pop and js faddl movsb lret xchg jp icebp dec mov cmp push popa cmp mov lods push sbb mov inc sbb push mov cmp inc stos cmp jl pop imul repnz scas incb pop (bad) xor fs addr16 fsubrl (bad) lret les push mov leave sbb aaa push sahf sub adc adc jnp or sbb lcall jge xchg ds and hlt out or jb,pn pop imul xchg sbb push js mov (bad) push sti ror divb and xor je adc imul ret jns outsb adc jo push rol adc xchg mov fldl aaa cmp js cmpsl stc jb cmp sti fcoms das dec addb aas push int add inc pop fldenv mov test mov fnsave mov fbld sub adc (bad) sub ret in (bad) fild adc icebp mulps cmp outsb dec dec inc divl pop imul mov mov cld lahf aas xor dec ret pop jnp frstor fldz std jg arpl or lret pop test stos sub push mov fild inc fcmovnbe and out lret ja mov cmp aas pop popa xlat aaa inc imul mov sbb jge or mov mov add test xchg xchg xchg push inc push inc cmp test mov jp push sub jns rolb ret leave out (bad) fildl shlb arpl std xor mov sub xor sbb push jnp sub xchg emms adc std outsl xchg test repz sub (bad) popa mov lock xlat and sbb out xchg sti popf lcall int lea aas dec mov sarl xor sbb inc mov movl bound cld lea fwait pop lock das sbb fimul fimull aad (bad) xor (bad) popa mov adc fsubrl push cmpsb mov and adcl jle stc add sbb jne sub subb fldcw insl inc bound push jnp stos jmp inc xlat ljmp xor insl or push pushf sub (bad) das mov or dec nop adc cmc pop insl push out adc dec mov (bad) add cltd lds mov add lock scas push shlb push cmp js cmp jg pop add in or xchg je jecxz push push mov or sub addr16 jo push cmp sub lock cmp cmp mov lea fidivr icebp mov xor dec pop push aam mov mov dec cmc jmp add mov mov push mov jae gs jp loopne dec in sbb add in jno mov mov loope mov mov xchg sbb adc jle icebp fwait push xlat hlt or repz xor pusha sbb repnz sti subl dec jo jl xchg cmovne ja lcall int3 fnstcw pop les add mov ja sub flds inc sub in (bad) lret mov jp ljmp lea out leave je pop sbb cmp and in js pop inc test pushf push sahf sub mov imul popf push lock push repz out int3 add sti (bad) fs xchg movl pop bound mov jne loope jg aas mull add inc (bad) aam pop sbb lret test jbe adc pop dec sar test inc stos pusha inc call pusha loopne (bad) push jge pop mov dec mov mov js mov in fld pop xchg test jns jg ja ret test xor data16 icebp iret lods (bad) push mov mov cmpsb dec xchg pop push movb sub add fiaddl push mov push inc xchg sub (bad) mov mov dec adc dec shrl test packsswb push or outsl jns in aam cld int insl inc cmp or push mov (bad) ret mov imull push jae cmp jp scas xlat sbb loopne js test iret dec or cmp test faddl xor push sbb aad mov leave mov clc push pop insl pop push jmp cmp xor cmp ss push imul insl or sub jl xchg imul cmp gs out pop iret aas xchg lods daa (bad) call mov (bad) dec loope adc push inc sbb jae mov imul sub fcoms or imul movsl cmp das fiadd lea jp mov jno aaa mov jle gs ret out movl inc cmc roll fisubl sub jb pop adc andl leave lahf repz nop jno and push and daa std aas push stos sbb pop inc xchg es test lcall cmp (bad) cmp std push and pusha popf xlat sbb mov stos (bad) cmp lret xchg outsl data16 mov ret in outsl test sti ret sub andl jmp inc out xchg inc cwtl ds and adc sbb cwtl mov imul fidivr movsl push lods inc add mov sub into push pop and mov and (bad) (bad) pop add mov lcall sub cli pop lock and xchg jmp or in push xchg ja jg mov rcll gs (bad) xor popf mov and pop cmp iret inc mov sbb incl jg mov fcomps mov (bad) popf or pop sbb ds dec mov iret sbb lock pop stos adc idiv adc cmp push xchg mov test inc or pushf sbb in sahf das repnz rorl bound or fsubrs add fsubrl in pop iret xor adc pusha cmp out scas in cmpsl mov sub sub push push sbb push dec mov lahf leave les jne jae rcll ljmp cmpsb std cmp jp inc gs pop hlt daa adc and mulb cs mov out out (bad) jb pop mov fneni(8087 sub pop pop push rcll je sub mov add jns cmp add mov test mov repz mov inc dec pop sahf sbb inc lods pop and xchg movsl insl ja push pop clc faddl popf fcmove popf pop insl adc adc jmp sub cltd aad pop cltd fs and jnp lahf fnsave jns jns sub aas dec stos adc xor dec je in jae pop inc xchg aaa cmpsl movsl adc xchg jge mov mov mov add jp cmp or pop inc outsb icebp xor pop icebp push cmpsl lea pusha inc or outsb sbb in pop xlat push and repnz into mov addl ret sub jne jge iret ljmp scas gs jecxz iret aas lods stos test pop fsubl movsl xor das fwait test test clc fs lock cmp gs es test stos push cmp test cmpsl mov jbe sub into pop mov xor xor jmp cltd loopne (bad) in and daa sbbl out dec jle pop mov cmp or addr16 in rcl pop movsl ret push add mov xor pop daa jb,pn aaa in mov xor orb or mov xor mov mov int sub call test pop xchg mov mov inc enter cmpsl push (bad) leave pushf mov and aad lods (bad) jle push lret leave jl jmp pop sbb mov pop inc sbb pop push cmp movsl out sbb push gs xor (bad) ljmp push cld dec outsb push lea (bad) mov xor addr16 cmp test ja lret xchg or jmp add dec dec pop mov add test fnstenv das jo clc adc mov pop (bad) dec xor lds int3 add lods fs mov xor imul or cs or (bad) mov (bad) mov jge lret adc shr sub (bad) and and sub inc jge js outsb sahf inc cs inc xor or mov mov xchg in mov popf (bad) lahf inc mov or loopne ljmp sarb js cmp iret mov pusha mov jo (bad) xchg add xchg push lret out mov gs imulb xchg jne push pop push mov push xor stc ret mov ja test jne push adc pop mov lar xor stos out xor lea stos imul pxor pop and std in mulb sub pop and xchg cltd lret es dec lret jne out xchg xor xor mov popf packsswb adc mov movsb xor jecxz mov imul jecxz and repnz mov inc out xchg ret xchg xchg or dec xor dec mov sub or mov mov test pop dec orl out scas lods add outsl xchg pop fistl sbb std push lret out lret aas cmpsl rol sbb jmp push popf add stc jb fnstenv pop in adc jp xchg mov jl or push push (bad) or ficoml cmp fnstenv test in lds inc pushf and or sub or les ss xlat dec pusha in add scas xchg cmpsl adc inc push push rcll inc add inc jl mov inc (bad) lahf les es ja push out xor cld push test dec mov xor ficoml or imul lea mov mov jecxz sbb ficom cmp mov cs popa mov push stc cmp (bad) mov jmp icebp inc sbb (bad) pop inc fldt xor push in mov pop mov xlat loope sarb fnstcw add pop push push imul repz (bad) movsl inc and icebp les test xchg xor pop popa in dec xchg ret movl dec fwait push lods xor ljmp or cmc cmp push mov push jmp sub sub in (bad) lea add sub lock push jbe pop out cltd cmp sahf or xchg mull scas stos pop stos mov jbe mov jns imul aas push push movsb or cmp jmp cmpsb adc shrb mov scas repz xor sbb in sub in imul in in jmp gs push add adc jp out mov pop add in adc mov fdivrs mov je mov (bad) scas popa dec push mov or stos mov loopne int inc or sbb sub push shrl or fdivrl leave jle test or (bad) (bad) dec fisubrl fldt lock cwtl inc insl arpl push pop pop cmp das xchg add push jne mov xchg rclb sub and rcrl loopne fildl cmp inc mov inc into pop enter pop in out icebp push add clc fild icebp xchg fmuls mov mov dec imul mov lea arpl sbb adc inc adc sbb imul jmp idivl outsb cmpsb pop test xor jnp jb sbb call in jge inc or imulb in aam push adc nop pushl sbb jg lea sbb mov or push test mov fstpl aad add dec lock nop mov hlt ja push fnstsw mov je pop lods fstl adc mov inc stc and pop stc mov lds movsb fs push mov adc inc pop aaa adc pop jo xchg stos push clc and jp or frstor dec rorl std cmp es mov out ret jo push incb inc or mov daa lods mov (bad) aam cmp aaa dec sbb popl or cmp shll in fisubl je fstps rcrl iret and pop (bad) fldl out mov ret in cld rcrb pop add fnstenv aas (bad) mov test mov data16 int pop push mov mov scas push cli mov mov fwait std outsl xchg cltd ror mov mov (bad) fsts aad icebp xchg ficom push jbe or mov (bad) notl xor mov int xor mov mov push adc inc jg pushf cmp (bad) jbe mov aad jo (bad) icebp and arpl imull mov lcall xor arpl sub dec outsb call xor adc push xchg mov inc bound fs roll mov rolb pop out push adc pop xor daa shrb movsl xchg cmp lret lcall mov pop lret dec cs and lahf test mov insb pop mov jo mov xor ss jp (bad) mov adc dec cmp iret test add ss hlt mov fisttpl ret vpand out xchg xor les add arpl pop dec inc leave insl enter or or sbb cmp mov jp push leave idivl ds stos cltd (bad) xlat mov hlt jmp mov leave jb sub sbb pop fucomp and enter mov and jb mov xor pop or sub test and xchg incb das jno imul cltd (bad) dec sahf sub js sbb imul xchg sub (bad) and xor nop out lret (bad) das cmp stos jo fldcw mov add or in sub dec fimul adc sarb std xchg jnp or jno outsb mov xchg inc cli (bad) dec push popf lds push scas stos outsl sub pusha mov push mov andl and daa xor inc outsb lock mov cmpsl test rcrl lods enter lcall pop xchg stos cmp and dec sar pop cmc lret push xchg sbb mov mov movsl add cmp cmp push sbb adc insl cmc or fiaddl idivb mov imul xchg push push rcr cmpsb data16 (bad) aaa test xchg mov push jle psubusw adc push imul inc push jl adc add fildl insb into cmp jo shrl imul xor in sub pop fimul and inc out and or mov jae and iret inc xchg mov mov cmp push xor adc push jge fwait roll push adc adc aad xchg add mov dec push jbe iret dec mov xor seta xchg rcl inc push ss loopne jne roll xchg lahf dec movsb scas enter inc sbb adc jecxz aaa movsb mov lea xchg xchg cmpsl gs mov mov or (bad) lcall repnz sub lds or adc sub cmp fsubrs hlt dec sti out clc sub push dec pushf mov sahf mov out stos (bad) lret insl roll sbb dec fsubs inc inc adc push mov mov adc pop aaa (bad) xor mov lahf icebp rcr sti sub es ljmp and fs mov adc js or mov add mov pop (bad) mov rcr inc les ss fist ret test or int stos sub adc sbb inc pop movsl pop dec dec in (bad) jbe mov aad jo inc xchg push int push scas mov dec pop mov jnp outsl xlat mov mov inc jl mov int3 add and mov ss and fnstenv jecxz sbb jnp jmp or mov (bad) notl inc push xlat nop aaa mov fisubr pop imul adc dec mov push xlat mov mov push pop jg stos std dec xchg xchg cmp mov stos movsb jne testb cmpsl inc dec fcomps xor adc xchg inc neg or loope lret inc xorl mov jg mov xor (bad) pop push sub dec push mov jne mov loop mov push push jo and cmp test rcrb inc jnp cmpsl adc mov jp xchg loop pop mov or push (bad) int3 xchg mov inc adc adc fildl xor inc add fsts sbb jmp push pop mov repz (bad) mov into cltd mov test lods outsl push dec arpl jmp lods push xchg insb lods add cmpl sbb rorl bound sub fnstenv sbb cld daa cld in mov mov xchg push lods xchg aaa sbb je push lods inc std and call sti mov dec fstpt adc sub mov inc xchg sub sarb mov mov inc dec sbb sub jmp int jne dec mov adc iret jmp push xchg (bad) lock (bad) jne jg mov test add lods ds pop cmp cltd sbb iret mov push mov cltd std or xchg in fbld incl pop lea inc ds fldt inc jl pop pop pop mov lcall or jae mov aas mov in lcall stos add sub lods fnop into mov int pop lea push daa test mov or fidivr (bad) fnstenv sbb loope mov repz movsb (bad) jle insl lret jg push adc iret ss rsm mov pop popa cwtl add sub std cmp stos scas scas dec test cltd dec adc jecxz ds andl addr16 cmc cmp flds and jp out mov cmp test jle int mov int3 dec ficoml cwtl sbb imul add daa ret (bad) mov sbb xchg (bad) out ret pop aas iret subl cmp inc lods data16 pop ljmp pop repz inc pop lret cmp xchg sub stos sub in leave in scas cltd inc push pop or stos push scas or jg jns ja addb sbb imul adc pusha and inc jae test sti pop je pop popa mov sub jge sub pop insb cmp jecxz in mov dec pop xchg shlb insl je mov (bad) mov and mov add cli mov fisubrl inc aaa cs lcall arpl inc int pop xor outsb xchg xchg dec mov icebp xlat mov mov shrb fldt out cmp test nop fwait int insb add data16 fcmovbe dec sub in cmc aas dec jno inc movsl mov aas mov sub inc gs ret arpl fisttp push adc cmp mov cmp xor daa xchg or das ficomp or hlt (bad) xchg jno push dec pop push out leave or xchg insb test pop test mov jne imul cmp arpl mov popf out test xchg mov icebp xor sub movsb sbb xor movsb and xchg adc inc out jae xor insb jmp add add inc add add mov fadd push inc loope je mov add sbb test jg cmp and dec push mov mov ja imul and pusha dec movsb add jae daa dec and lods pop cmpsl test mov or mov xchg insl xchg dec loop movsl mov movl enter lcall lock adc and xchg jl mov int or add push leave jae sub mov pop sub push into push inc dec jle add mov into dec outsb flds js xor (bad) mov aas xor repz pop and lods dec outsb lahf cwtl pop (bad) aaa test inc cltd clc jecxz dec in push loope test stc mov jle add and xor sahf pop sarb jns aas inc xlat push in cli out or adc jns ja rcl mov rorl mov mov lock unpcklps jbe cltd std out mov repnz fistpll mov iret aad cmpsb fnstenv mov inc mov imul jp and add xor xchg add (bad) push jno jecxz ss leave push jecxz cmpsl mov jge shll jno out (bad) lds mov and mov jbe jno shrb (bad) jg (bad) loopne add fstpt das sub cmp xor clc xchg fbld jbe je mov push stc cltd imul insb cmp xchg inc pop add xor fmuls xchg fadds shl mov adc xor mov mov mov in ret loope and outsb jns cs pusha or xchg mov in jno in dec enter push insl xlat or mov cmp in mov cwtl hlt xor popl outsl int lods cs in sbb inc jns inc setle movsl in ret lret lods repnz fisttpl dec cli out add popf dec mov sub xor sub jecxz xor test clc in push dec fsubs fcmovbe jbe jb sub sub test pop (bad) mov shlb mov lret push test push int3 mov into pop mov outsb sbb cmp sti push enter pop mov and and (bad) decl stos cmp push mov and add cmpsb xor push xchg mov pop inc cld mov stos sahf or sub or sahf sub dec mov mov bsr lcall hlt (bad) adc adc inc xchg lahf (bad) lock pop sbb movsl pop mov xchg and adc outsl loope ror push in pop dec cmc add cwtl decb push xchg (bad) cmp mov movsb push cmpsl lcall mov insl sub inc mov data16 (bad) adc out push push fstps sub pop sbb ret jno in lcall jl or jae jo push das xchg call insb adc mov movsb sti pop mov sar in xchg xchg xor add fnsave xchg or mov insb insb xchg lock iret and popf mov xchg lock lock dec mov mov test clc xchg fistp mov jbe mov (bad) fadd add les mov std (bad) cld test ror jno int3 sub pop mov inc mov cs repz iret pop aam fucomi fsubrl pop dec lret insb push movsb sbb mov cs push pop and and popf and sub sbb insl mov jp (bad) jecxz dec push in bound call pushl add ror pop bound jmp movl (bad) (bad) pop loope inc mov loopne je mov ret out movsb ret jae ljmp add and lock jns out xor pushf cmp (bad) and push jnp push je lods pop dec jle dec and mov pop test insb nop or lds ret int3 pop cmc ja push pusha aas pop cmp or dec das push jnp fadds pop inc xchg jne test outsl mov out mov mov in adc dec out cmp pop pop scas jge jecxz test fcoms add jmp bound int das sub jp push insl fistl pop mov pushf jmp xor mov sti mov out add loop add xchg enter inc xchg pop and sbb jno sub mov push jo mov add stc add in sub jl ss xor outsl ret call popa dec xchg lea xor bound add jae stos outsb inc and cwtl or dec fisttpl lods pop call aam xchg cmp sbb daa or daa out mov push dec xchg push xor inc imul popf mov insl (bad) es cmp dec scas enter add push lret imul lea adc dec in sti enter into inc xor shrb xchg xchg cltd sub cmp cmp fmuls dec dec ret fucom dec cli into inc aad sahf push bound mov adc jge (bad) mov xchg dec jle pop jle push adc mov stos sub lahf incb add stos pop repnz push aam aas loope xchg inc bsr jge inc loopne aam push xchg inc pop movsl lock cmp cld (bad) push sub dec outsb or mov out mov cmp push mov xchg or sub in (bad) sub inc mov mov lods lret mov sbb xchg xor mov lock sahf clc add ja ja aas sub rcl out sub push stos lcall movsb js xlat mov lret ja das mov adc pop add lret pop lds xor push (bad) jb fmul push mov ficomp push add cmp adc dec mov lods dec and push jmp inc mov mov les out js xchg jae andb arpl inc data16 cmp and sub mov stos ret cmpsl popa cmp sahf sbb jmp ja ds je inc inc mov mov add sub adc outsl xor lock mov cmp add in std adc cwtl inc in lahf or addb and notb xchg sbb outsl js add cltd add dec sub jb jmp mov lods xor inc push movsl cmp or jl cli cmp jnp stc daa fs lock and mov sbb or inc ljmp into cmp lahf mov fadds jge jbe or cmp or push xor mov mov aaa xlat and jo xor fsubr (bad) add xor loopne push les popa outsb lea dec and xchg mov into mov sahf cmp lcall inc loop jl in psllw (bad) sub int3 cmp orb lods cmp cmc addr16 or push xchg insl (bad) xchg mov inc std rcl in ffree std jbe mov push (bad) (bad) imul xor in cmpsb icebp ror bound addb xchg inc in jle cld mov lea xchg pop cmp or ja,pn dec jnp jle inc mov sub hlt daa das scas leave out pusha mov cmp in (bad) dec ss ss dec jae mov stc pop pushf sub sbb incb into daa mov mov mov (bad) sti loopne out movsl (bad) leave call mov addr16 lods add adc dec stos sbb dec pop xchg test cmp pop jge dec or mov or cmc jne cmp or aaa sbb mov test jp jp cmc fisub sub adc sbb ds push sbb sbb shlb clc fcmovb test mov fwait xchg push jbe sbb jl inc push xor dec daa repnz inc xchg mov pushl mul lock in call pop scas mov jle mov mov xchg shrl dec lock ret ds or push push fwait idivl mov push fs push lods mov fbld test scas dec nop nop inc pop movsb out push or fadds xor hlt popf rcll and add repz mov outsl jb stc shrl pop stc and push icebp or loope sub inc xor in iret ret dec je push adc out xchg mov fisubrl mov (bad) adc outsb imul daa and sbb xchg daa test sti arpl xchg sub dec cltd subl (bad) in inc xchg sbb dec push cmc inc or xchg push aam mov mov addr16 inc jge in xchg jl jae hlt aas push (bad) xchg push imul jg cmp mov xor insl sbb pop movsb les cmc mov loopne jbe fnstenv stos pop push movsb clc inc add ds (bad) ljmp adc dec jp sub xor cmp dec adcl adc add cmp sub sub popa cmp xchg mov arpl aas xor rol adc and cmp inc sbb push fisub xchg and mov imul mov jo cs lea loop xlat inc out jne jge push mov push sbb mov adc pushf inc lock sbb out inc or out jmp ds ret bound pop sbbl mov rep int mov negl xchg adc sahf imul add mov lcallw adc and sti jb int3 jge lret cwtl call dec jae mov mov (bad) lock mov es inc stos pop jnp (bad) (bad) ja out repz pop cmc xchg fmul xor or sbb push loope xor and sarl ret push movsb imul (bad) mov inc pop dec mov jmp shrb (bad) or adc (bad) sbb iret fcoml xchg shr jns sbb fcomps int3 int3 (bad) shll mov fs fsts or xor cmpsb jmp mov pop xchg fidivrl mov jnp scas lock movsb push push cmp add mov jb pop cmp cmp fild cli dec xor (bad) inc xchg dec shll incb stc cmp fisttpl dec aas movl (bad) and jmp push xchg jp es push fxch aam data16 mov adc mov mov adc stos sub jnp xchg in ret ret lret rorb push mov lods ljmp push scas lods cltd imul or dec sub aam push jae pop jge ja inc outsw mov fmul hlt imul jmp icebp add pusha mov (bad) inc out cltd sbb xchg push cmc and dec enter mov dec and test adc mov push ret mov (bad) mov xchg les pop rcrl repz mov shl mov lea adc icebp das mov fisub movsb sub mov xchg mov pop pop rorb out dec mov mov xchg xor les into icebp jno shll (bad) push out int3 dec mov mov push add imul cld lods fnstenv push mov aad ljmp xchg adcl insl sub or sarb outsl iret fdivrs mov or mov jb mov into (bad) cwtl into jb hlt sub popa add xchg mov pop jno in and dec inc jge xchg mov pop gs adc adc lock (bad) sbb aam mov hlt xchg lods ja cltd push (bad) xor jnp inc bound rorb inc lahf jmp fisubl xchg pop sub xchg mov scas (bad) and or imul dec leave jmp pop jecxz imul mov sti adc js lods shl (bad) pushf pop sbb das cmp sar sub aaa cmp sti jecxz adc ja pop stos cmpsl fisubl (bad) and andl mov pop loopne gs fwait nop test sbb faddl push es les or stos cmp repz call ret xchg jnp outsl adc pusha jo movsb and mov xchg data16 mov push add jnp cwtl mov aaa fistp fmuls dec repnz movsl es pop and push stc daa ja xchg pop push in je aas and fldpi loop dec mov xor inc jb cs inc adc in push jp mov pop das sarl sbb jnp add test xor (bad) js mov (bad) jg std lods adc inc repz push sub add call sar cmp mov cmp sub cmp dec dec pop push std add es adc subl scas mov pushf inc test ret cwtl xor push out adc cmp lds (bad) jbe mov dec dec cmpsb mov hlt in jno loopne hlt dec bound pop dec fs out stos (bad) imul jne test fist cmc push pop pop mov bound mov rcr xchg fdivs pop jg pop les inc stc pop pop mov ret mov adc ss pop rclb mov or or xor notb mov test pop les shl popf iret test xacquire sub bound mov test mov out add test mov mov pop (bad) fiadd xchg loop push loopne mov push mov jmp jp sbb ljmp cmp stos (bad) enter int3 adc ss xor adc ret mov sub outsl fdivs xchg ret in inc js fdiv fs (bad) ja jbe mov inc repnz (bad) push jmp (bad) (bad) or lods pop push sahf sbbl xor jo stc les and int3 cmp push ret mov mov ljmp sub mov (bad) movsl outsl addr16 and ljmp or (bad) addr16 insb les icebp mov hlt rolb mov insl adc imul or dec sub movsl out xorl stc insb int3 repz dec sti mov ds jl or mov faddl (bad) jecxz cmp xor scas xorb mov xchg mov inc ss push addl jo setne mov mov daa sar fistpl xor ret leave cmpsl push pop mov dec mov stc mov push out xlat (bad) repz sub int3 mov pop push mov loopne add imull arpl fdivs aas xor sarb add xchg push inc popa cltd pop sub fsub push and mov scas mov pop mov jns in insb outsb jns pop xor xor mov mov in jp cli add cs inc xchg mov xchg adc add ret out cmp aaa stc insl ret mov add inc into adc lret fmull xchg mov lret cmc rcl mov addl lret aam or jge jmp out sub pop pop add sti nop fwait les fimul sub faddl and fstpt and test sub cld clc fcmovnbe inc aaa sbbb (bad) push mov mov mov sbbl sbb gs push mov add shrb xor das out mov in ds movsl pop adc inc (bad) mov mov aam lods aaa xor dec mov adc inc mov inc mov mov enter push and lret cwtl jae and ss dec jbe adc aad xor jae lahf aad fisub xor fdiv mov sub stos xchg adc pop dec pusha xchg xlat mov jne les movb lret mov (bad) or mov into scas clc sub cmc fidiv pop (bad) jno pop lcall fildl sar lahf (bad) addr16 sub push ret in iret cmp mov push push lret or or xchg ja es rorb xor (bad) aad jnp inc mov imul clc rorl arpl push push inc sti pop dec or or sub je in das les out in cmpsl mov daa xor cli cmp in or aas (bad) fiadd mov adc (bad) mov pop leave dec and cmp fist sub xchg and mov lahf adc aas enter repnz dec loopne divb cmpsb popa loop out into clc or mov subl into (bad) fild notb cld jno and xor les data16 inc push lcall je push xchg or lret jns cmp aas push adc xchg pop js clc and xor stos fsubr lods int3 iret jl xchg xchg dec (bad) push xchg fstpl xor mov mov lret pop inc cmp jge decb mov lret rol (bad) mov lds inc int3 mov fistpll inc jmp xchg fcompl fs cmp ljmp rcr pop mov xchg mov pop xor sbb adc cmp push dec pop inc lds int or out sub aaa icebp xchg push es arpl adc inc mov jno arpl sahf out fs pop stos xchg jmp push jle popf dec pop sti (bad) test sbb pusha sub inc (bad) icebp in jbe xchg mov lods fsubl add xlat push pop mov inc adc push aad int movsb jno jb arpl call enter mov jle int fs jle adc or sbb (bad) cmc inc jno test inc pop cmpsb ss jg add pop and loope adc sbb push cmpsl jmp jb xor mov cmp sbb (bad) ja pop cmp jl movsl xchg punpcklbw hlt fmul mov test add lock fdivrs cmp (bad) cmpsl lds cmp push daa cmp pop xchg pop jmp mov xlat int3 inc xchg add cmpsb ja aam mov mov (bad) in leave inc out dec mov pmullw xor push sub cmc outsl pusha inc dec lahf pushl push adc sbb and sub and dec mov jmp cld aas dec push xchg fstp mov out push and movsb jle jns cmp loopne jecxz mov xchg dec mov test mov inc or cmp aaa xchg sbb std mov in dec nop repnz add or ret xchg add cmpps dec daa pop sub xchg push push push mov movsl shll rcrl in cmp mov dec push xlat jecxz xchg sub pop xchg out enter jno xor mov pop add mov sub (bad) andl xchg insb cmc repz dec dec shl in test arpl jb or mov ss xchg outsl inc sub loope (bad) adc aaa sub lock in mov jecxz js add in sub cmp and jae dec std imul fs or ret (bad) aad xchg dec pop mov int3 xchg outsb scas sti out dec push ljmp mov int3 or jne ss daa inc pop das call mov sub cmp sbb fistpll ret push adc mov lret cmpsl addr16 cld xchg sbb mov push mov daa pop mov repz les test sbb sbb xchg ja shl pop out cmp jno int3 jmp in mov push dec (bad) aaa cld imul inc insl (bad) fsubp (bad) lock popa jl bswap xor lods mov and popf aaa pusha xchg mov or sub xor inc popa (bad) jb mov sub and hlt clc sbb addr16 rcrb pop stc fimul lods xor ljmp mov dec test jae sar jno sbb push in dec mov dec cwtl loope roll cmp jo out sahf push std clc movsb dec enter sbbl push sbb and loopne adc cmp js sbb dec outsl shll xchg clc xchg mov cmc out dec cmpsl (bad) dec or (bad) repnz (bad) pop mov jle test mov js cmc cmp sbb add cmp in cld pop pop in mov xchg cmp je sbb cmp lret sbb popf cwtl loopne jnp test (bad) ss xchg or xchg stos out xor call sbb pcmpeqd sti sub xchg inc push repz mov mov enter lcall push mov sub dec es mov push (bad) stos dec pop sub lcall jp mov adc dec outsb xor mov hlt jne pop sub js mov inc mov stos or dec push push cs popa xchg fsubs testl rcrl sbb (bad) and fsubs inc mov lock inc dec or insb inc mov repnz jmp xor adc (bad) daa addb lahf pop add dec mov sbbl lahf pop lods enter inc add out in out mov push imul lfs jge push add ret add inc inc loop add dec dec dec fcmovb lods repz icebp dec pusha mov lods add rcll fstps sbb mov repnz dec ret adc mov inc in cmp mov jb push jmp xchg mov test insl adc aam mov inc (bad) mov lods idivl add shll outsb xor lea (bad) xchg mov or push in push negb push sbb loope mov jno inc xor fs push (bad) scas adc mov dec pop mov dec das xchg fwait pop dec adc int data16 repz imul jb xchg test bound in pop cmp inc push adc mov cmp sti out imulb mov jecxz enter in mov cmp rcrb fimull int movsb jmp loopne mov daa out cmp leave imul inc inc ljmp adc push hlt lods ret jbe stos pop into lock add sbb adc das sbb (bad) cmpsb out sbb subl mov push out push dec xor scas mov xor fsts repnz sbb aam push jno push scas xchg pushf shrb repz jge lods cmp movsb mov in jge stos add jbe mov adc test movd push movsl into mov test inc mov add pop mov stos push mov mov and dec rcrb xor mov aaa cmp rcrl pushf pop mov jne jge int3 xchg inc out adc xlat hlt in xchg jno ja imul icebp fwait call mov adc lcall xchg cmp pop mov pop ljmp inc mov lret sub xchg fcoms jnp out stos stc inc test mov (bad) xchg lea fdivs sarb rcl mov pop or arpl xor ds cmpsl les adc xchg stos or lcall das jae in and cmp sub or cmp push push mov inc dec ljmp cmpb xor dec cltd mov push jmp jno cmp stos mov shll sbb mov cwtl adc or addr16 mov ljmp sbb dec test dec out mov push lds insb test lock jmp push inc adc inc sbb pop or repz fldcw lods shld mov les jle sbbb push (bad) js jle and cs inc addr16 and inc xchg cmpsb inc repnz subl push test cli sub push mov adc pop adc lds outsb xor push ja pop lahf and or jg push sti outsb add mov cmp call xchg lcall pusha aas iret sbb xor lret pop stos pop mov sbb cmp movsl inc mov pop (bad) mov add in cmp movsb inc imulb out scas icebp std lock push jle mov jg add xor or ss enter and adc arpl mov call jmp sub loopne push xchg xlat pop xchg or xor (bad) jmp xchg jns lods shrb pop pop outsl ljmp pop inc inc in js lret nop jnp ds mov mov adc cld push push das lcall arpl sbb inc lret je xchg jo sub sahf adc fs cmp xor cli or or testl outsb jge fistp inc jne andl js fidivr adc pop aad or ja mov addr16 pop ss jmp lods aas cmp add cvtps2pd pusha mov mov jne mov fsubrl popf xor adc pop push sarl dec ljmp es sub gs add std lcall cmpsb xor cwtl jnp sbb into xchg movntq mov data16 and cmp push mov jp jmp pop push push adc les xor imul clc xchg sbb mov inc mov dec jecxz and fs mov ffreep popa push cmc ret xchg sbb (bad) ljmp or test pop sub push ret jle push pushf loop push call mov add not movsb out aad adc dec test jo sub dec nop mov outsl add (bad) xlat divb aad fnop dec sbb sbb xchg jecxz dec call mov or pop inc lret adc mov (bad) rdseed clc insl xchg cmp mov es in cs mov js cmp mov scas adc ss add int3 rolb pushf and adc sub stc leave sub lds lret test xchg aas adc push outsb mov push sbb out push gs ljmp sar cs jnp push std fstps cmpsl mov jne ficom cld sti cwtl cmp movhps lds mov jge pushf and sub imul bound dec adcl adc mov push out rolb fwait mov out mov pop mov lret lock mov adc pop jg ss rcrl lcall loopne decb loope mov repz cltd xchg stos pop rcrb xorl add (bad) cmp lods subb or aas lret icebp or loopne popa (bad) xor pop jecxz das lock xchg push or jnp (bad) mov mov fnstenv xor arpl clc push cld jg mov cmp into pop push lock mov mov cmp push (bad) lahf ljmp mov cmp scas (bad) notb mov inc xor leave jmp or mov push lods or push loopne inc pop in in imul ljmp cld fwait repnz call pop fsin cmp mov xchg lods or (bad) jecxz pop cmp addr16 ficom push jl jno in xor jmp loop mov jo dec cmpsl rcrb mov cmpsl cmp nop fwait pop cmovs jnp jo push pushf (bad) testl cmpl xchg mov icebp mov movsl addr16 arpl lods gs add cmp lods outsl (bad) lock stos test dec fwait mov out xchg mov xchg scas xor mov push and xchg fisub out push push jle test push es adc repz lret jmp cmp outsl addr16 mov jbe xchg or xchg idivb sub (bad) movsb and outsb or in pop jge sbb or (bad) stos sbb mov stc pop pushf out dec test out flds mov mov add adc jmp loop ja js frstor test scas in push xchg lods xchg loop stc xor push out negl inc mov sbb mov ljmp add aam iret sbb inc dec sbb adc scas cmp sub cltd xchg dec (bad) mov add daa pop add jns xor mov sahf es scas int popa scas loop (bad) or std jge insb cmpl int3 jg xor mov xchg fcompl shl jmp pusha push pop das daa sub and cmp dec push and push fldl xchg mov push icebp out pop xchg scas adc mov xchg mov (bad) xor fbld mov mov xchg outsb inc dec js mov pop iret xchg add pop jb arpl inc gs dec jmp pushf js scas inc dec mov xorl aad mov sub scas fcoms fimull lds (bad) lock sub pop cmp cmpsl out inc mov (bad) dec ret cmp sbb mov gs outsb inc movsl mov ficoml repnz xchg arpl jae pop (bad) in cli jl popf mov sbb jno shlb adc and inc xor insl sbb pop stos rol inc inc ja lods cltd dec in xchg roll fs pop stos or adc cmpl (bad) mov pusha iret and mov ror stos aas adc push xchg phaddudq jp adc jo mov rcrb les mov pusha ja and stos add pop mov rorb cmp pushf dec scas movsb cli insb mov jecxz lods and je add xchg repz inc xchg jnp push or mov std sbb jno pop pushf and (bad) xor frstor push inc scas cli mov cmp dec addl es icebp pop cli and cld in cmpsb pushf mov lock arpl sbb (bad) fsub inc dec stc clc pop sbb mov xor ret mov aad push fs mov add nop push inc sbb add jae outsb pop inc dec pop js xor lret cs dec pop lods (bad) add mov mov clc pop sar cld mov adc and pop jae je cmp es imul pop sbb into scas jb in rolb cwtl xor (bad) pop mov mov mov and ljmp ds push jbe push mov imul outsb xor into into dec mov cmp cmp pop daa and sahf in testb mov dec xor adc popf int3 inc pop pop into loope adc dec adc push fbld dec div je call jae data16 cltd add cli aad shll jecxz xor and (bad) mull ss xchg pop jecxz mov je cmc test and pop dec lcall xchg cmp cld cli out push in (bad) dec push (bad) icebp insb out loopne push arpl push jae das stos ss xchg push stos xor sbb adc mov push cmp sti push inc mov pop jmp push adc cmp mov pop outsl push mulb dec jo sbb js mov mov (bad) pop xchg lea jle shll lds or add lods mov shr sbb rclb mov movsl jae loope mov xor mov push fadd lods xchg xor dec jecxz push faddl sub push jmp adc test xchg pop mov dec in gs fistpl mov std out hlt cmc sbb sbb xor mov in inc dec sar push inc ret mov dec pop int3 mov inc adc jnp and push (bad) popf xchg pop dec xor sbb mov lea lds jmp sbbl mov xchg cmp fildll cs jae pop int3 sub cmp dec js je (bad) jne shrb xor insb inc out xchg inc dec popf push add les push jecxz loop cmp imul (bad) sbb or sub jae push or pop inc cmp push cltd adc inc push cs and sub push push loop xor orb inc into xchg into pop pop inc cwtl daa mov pop test jl adc or mov push xchg lahf add pop cmp jmp jnp pop addb push les xor mov or mov mov scas lret lock lods lods mov mov (bad) lahf lds movsl add mov sti roll fistp xchg aam xor loope rorb cmp lea and loopne jne pop repz mov push mov outsl dec xchg enter ds dec in sub fwait lret adc mov (bad) cmp jns mov or in repnz (bad) dec fs aad popa ror jp adc lret sbb sbbb ljmp xor dec and push imul ss mov jle imul cmpsl in and sub test test pop xchg out out jecxz xchg aam test pop addr16 sbb es test es aam pop jb mov jb push sbb mov icebp or mov ja and add int xchg xchg outsl adc jp aam outsb inc sbb js jmp int fs and pop scas test sub push cltd in repz and cld pusha ja scas dec (bad) sbb (bad) inc pop rcrb js inc lock loopw jecxz les push gs loope stos out iret (bad) and sar or scas add daa imull sub les push sarb (bad) mov repnz mov pop fmull jbe (bad) xor pop nop dec sbb or (bad) jo xchg mov jns push cld int mov orb addr16 outsl (bad) push adc pusha dec inc dec jnp in stos mov sar and pop fstpl mov mov jg (bad) ja push (bad) (bad) mov adc inc idivb mov jle mov add daa lcall mov push mov and dec inc iret jecxz mov movb dec (bad) mov in sbb sbb in cmp inc sbb sti adc push xchg cmp and scas sub pop jbe dec adcl test fadd jae push (bad) push imul pop lcall fsubs sbb mov (bad) cli mov jle mov cmp xchg mov (bad) sahf mov insl dec jge popa cmp dec gs mov loopne push jno mov jmp xchg push jb mov leave shl dec leave rcrl inc jl dec in xchg xor sub mov (bad) and jge aad lret ror pop jnp ss xchg sbb mov mov call notl jb repnz cmpsl (bad) mov inc sti push dec xchg sbb push jmp mov nop mov cmp lcall add rcl mov insl cltd out pop lods dec jl jp jecxz xchg mov jmp insl sbb xor pushf sar mov je loopne (bad) pushf jg adc cltd mov popf lea repz daa dec xor aaa cltd repnz pop (bad) dec cmpl inc lret jns enter push aad adc mov loope xchg push mov mov xlat xor xchg ds (bad) nop xor insb out sbb dec nop dec pushl outsb lcall mov mov push mov in icebp mov mov adc ds or jl sub pop fstps mov dec lret mov insl mov lea mov inc sub in pushf sbb fs cltd ss add scas jae mov cmc inc sub into pop and add call sub fnstsw test cmc inc ss mov repnz inc repnz stos rorl repz imul jmp iretw test mov jo int mov mov pop mov inc sbb push pop push loop dec movl outsb adc and icebp or xor mov inc jno das xor jo stos cmp lret roll jns hlt mov cmp cmp or jecxz dec std addr16 inc addr16 sub int3 test push repnz push lods xor hlt adc pop fist push leave jae adc dec push js aad mov xchg scas mov dec das cltd sti cmp inc sub ss test ret xor call inc pop dec repz mov push mov pop (bad) in inc ljmp cli mov mov movsl dec insb ret lret sarl roll jecxz push adc decb fildll and jge jne cmp rclb xor test lret mov outsb and stc inc imul adc in (bad) sub xlat pop mov sub mov popa push iret leave pushf and (bad) ljmp outsl add xor dec pop into cmpsb fbld mov bound mov jmp jle push mov sub or fs dec xchg cmp test out insl popa jp inc mov aas repz in pop outsl sbb arpl fmul dec jns out into lods jnp iret (bad) fldl jge xchg and fs negb cmp mov js pop push in fidivr xor mov adc daa pop xchg and nop and test dec loopne push scas inc pop outsl jne movsl jno cmpsl add mov insl push xlat mov sub cmp movsl xor sub test pop sub push dec loope push ljmpw mov inc mov mov cld (bad) mov mov cli dec stc scas push (bad) imulb push in sbb cmpsl push pusha aaa cmpsl sbb into jno insb inc aaa sub sbb fisubr test sub fnstcw mov pop cmp xchg adc or dec jb add addr16 inc cmp repz mov stc stos in insl push (bad) jecxz push ss xchg cmp adc pop in jge xchg jno push fldl or pop mov bound aaa ror pop inc jmp cmc dec push adc push jae (bad) pop shl fsubl daa mov cs ja mov and and sub mov insb rorl mov pop mov gs adc xor (bad) xor fcmovu mov rol aas clc adc bound jo mov sbb sub cmp stos jne jl sub cmpsl pushf xlat pop movsl inc push fcmovb jne add pop cmpsb jle daa ss adc cltd xchg fldl jl mov jns jge loope mov push popf sbb (bad) or orl loop or mov pop (bad) insb repnz dec adc cmp sarb popa ret popf xchg sub adcl cmp jno xchg in sahf pop jmp movsl sti ljmp sub mov inc ret enter xchg xchg dec adc pop jne lcall clc xchg decb lcall icebp in fwait sub hlt js subb mov into out sub stc out pop jae lods fildll pusha push out in add mov mov scas gs (bad) jo push les mov je mov dec dec divl jno test aaa or lahf sub mov inc adc xor ret xor fucom test dec jne jb cld rorl mov in punpcklwd nop adc mov cmp cltd movsl lods xor dec cltd and in and test sub ja test rclb icebp data16 add push popa imul add inc cmp add dec ret icebp (bad) xor sub push jl out fildll (bad) stc pop call mov dec (bad) (bad) adc and outsl push lret lret pop aad insl xchg push repnz adc sub inc or (bad) repnz push movsl and lock iret sbb xorl fwait xor gs pop mov mov lret out fistpll repnz clc adc jle lcall sbb dec inc testl jbe inc jecxz insb dec mov xor jecxz (bad) js into adc jmp xchg mov and mov pop push jbe lods popf lret mov xor and (bad) fneni(8087 js enter lods jbe aas (bad) into xchg pop ret lds rcrb and into ret dec or push ss mov fdivp dec xchg jl imul insb and into adc pop add rolb xlat cltd out jp repz enter sarl mov inc cmp test xorl mov je int3 xchg add inc push orl jne inc dec xor (bad) mov (bad) rorl dec popf imul sbb loope adc imulb adc lds sbb mov sbb in movsl popa cmpsl inc xchg aas xchg mov (bad) js cmpsb cmp (bad) xor sbb mov test ss incb in sbb mov insb or fstps ss cmpsb lods and jmp fmul sub dec shl and mov arpl mov pusha sub push inc inc lahf or (bad) push lock mov or fldl out sub xchg push cmpsl jno negl icebp dec cmp int sbb and jnp add sbb sahf push scas xor push inc ja out (bad) stc fidivl adc (bad) cld mov mov xchg lods push icebp lock in das arpl or (bad) ficomp push fs mov clc pop ret movsb mov and mov mov scas hlt dec bswap jl xchg xchg jbe leave (bad) in or (bad) mov jae pop ret jp popf add hlt sahf int3 mov dec adcb mov mov mov jne popa cmp cmp fwait daa push add pop imul mov dec lock mov gs mov icebp jl xchg loop cmp adc das sub push repz outsb insb dec cwtl fiadd mov jge jae into std adc (bad) jecxz pop movsl or push enter lods arpl js stos mov cmpsl xchg mov pop rolb pop (bad) and sti add mov cmp pop hlt push jne lds xor inc add int3 jb cmc lcall inc and daa jo loop pop cs int3 mov enter push es pop sub dec stos inc test test or pop loop push int3 into gs mov lods (bad) shll addr16 sti mov cmp nop push inc cmp test out mov and test push push xor rol mov push lret or iret push aam dec pushf cmpsw push lahf dec popf or mov mov mov cli push out in pop fwait push mov js add addl insb add fnstcw dec lods cmpsb sbb inc xchg test cmp xor push push shlb push dec inc lds dec xchg daa outsb ret mov dec xlat inc repz shl sti movb testl push xchg push dec aaa mov push xchg or pxor cmpsb fisttpl sahf and jmp adc mov cwtl inc (bad) mov fdivrs jbe out cwtl lret repz negb pop std cmp mov and imul loope cs es (bad) cmc or mov outsl push enter mov shl insl mov mov push cld lahf jge ret es into jne sub jmp cld xchg lods lds pop dec (bad) (bad) dec xchg adc aad imul add pop arpl in loope fldt pop sub sbb cs push push xchg hlt mov lahf gs loop pop xor (bad) dec fldenv sahf adc xorl push cmp mov mov iret mov mov inc xchg je xlat xorl mov sti xchg jmp les jmp (bad) mov xor push pop xor push fmuls or lahf add add js movl movsb mov sub jmp loop adc in popf movsl mov gs mov cld or pop jno mov addr16 in cmpsl es popf sti call loop repz jge into xchg and fstpt xor jl cmp sahf iret or push insl pushf cld (bad) call dec (bad) mov push enter cmp cmp ljmp xchg lcall cmp push mov test movsl jnp adc cmpsb (bad) rol adc jns std inc push repnz cmc shrb stc xchg (bad) dec dec sbb sarl jp xchg test xlat sbb sbb xor adc scas dec push loopne les sub jnp push test and xor sbb mov xor pop fwait jnp into stc (bad) xorl adc add das mov shrl cli add xchg sbb jge jg cmpsb dec jg jbe cmc jmp int3 decb nop sbb divb mov adc cmc fistp inc jo cmp jl out dec mov fnsave inc jg mov js scas iret out jne out outsl sub dec inc push (bad) fdivrl fmuls pusha adc cld sbb cs enter cli cmp cmc pop xor pop loope jecxz xchg dec (bad) loop iret addr16 gs dec notb cmc jmp (bad) mov cmpsb push ja mov movsb mov repz cld mov pusha rorl xchg sbb xorl adc inc push lahf dec rolb mov call outsl les out insl sub xlat flds mov cmp adcb dec mov lods iret pop ret mov inc or pop cmp mov sarl sub ret lret leave pop inc xchg clc push jl (bad) (bad) jbe xchg inc jns sahf sub stc out jmp adc (bad) gs xchg in add loopne pop jecxz gs test xchg mov es push jmp push (bad) xchg lds inc dec shrl shrb andl or inc mov xchg add popl (bad) idivb dec jno negb sahf add mov loop push xlat and dec pop rorb xchg dec stc sub xor jg out outsb mov fdivs pop cwtl (bad) mov popa sub push loope adc js jnp push pop icebp hlt jg pushf sbb mov push daa arpl or lods pushf out push test mov das adc xchg (bad) or pushf dec in jle add and mov test test sbb add fmull subb test and jb sbb test and mov mov int out int3 enter sarb pop adc int push ljmp adc nop lcall xlat das add iret jb pusha lret mov into iret and repz xchg pop xor fimull add lret or mov jl push and sahf jmp sbb push push cltd push jge inc fwait shrb aas fnstenv dec pop lret pop repnz cmpsb add adc enter dec sub xchg paddsb aaa pop mov outsb jecxz mov add dec dec les out ljmp mov jo push inc xchg adc push imul add push fucomi imul inc subl inc es pop push mov adc cli push rcrb shll ss xchg mov adc jle pop fcmovnb fist sbb adc pop sahf andb xchg adc (bad) push in pushf sbb xlat mov add (bad) out cmp and mov push sbb cmp push in rcll shr pop sbb (bad) xor adc or daa mov mov xchg mov stos lret (bad) sarl dec pop sub ljmp test jo mov rorl xor imul mov adc xchg pop ss stos cmpsb push xor mov sar bound out out xchg xchg or jecxz aam inc jl fdiv jnp in stos jns add loop ja sti stos xor lret mov inc inc dec xor inc or out sahf cmp sbb in popf mov dec mov int sub imul gs enter push aam into lcall jg subl add bound pop loop add repz loopne and jecxz mov add or rcll mov fildll xchg ficom ret outsl jno jae cmp xchg insl dec mov sub or fimull imul lods repz mov fwait shr loope loopne fcoms loopne mov arpl loopne xchg les inc fldt pushf pop lods push mov mov adc sbb lea scas mov test imul xor in and xchg les dec repz bound xchg mov inc xchg mov cmp pop data16 push xchg mov cmp fs push pop sar aaa push (bad) xor jp dec cmpsb jl pushf push cmp neg jb sti jl mov cmp mov popf jmp xchg cmp xchg or xchg cwtl mov mov nop sahf and cmpsb jg in aam cmp cmpsb pop lods aas aam jmp mov mov adc lock pop fnstcw ds sub cmpsb divl insb mov (bad) jp cs mov sarl popf adc outsl scas (bad) dec pop xchg sbb (bad) cmpsl daa dec jnp and mov mov jae test bnd faddp in xor imul sub add dec sub mov sub sub sbb xchg sbb ret adc and inc xchg sar push mov into (bad) adc xchg ljmp movsl inc loope (bad) repz fldenv inc test xchg fildll sbb add cmp ja (bad) sar cmpsl push test xor cmc mov sbb or mov or lret lods inc push xchg xchg add fdivrs popa xor ljmp sbb push mov js stos xchg add mov andl imul mov xchg mov xchg sti xchg push fmull add adc or push adc out push call test fwait xchg xchg mov rolb dec mov push rcpps in cmp (bad) shlb dec push (bad) push jmp ret push push cmp in xchg imul jnp lret add aam inc pop dec aaa outsb daa and nop clc xlat lea or push add cs push leave rcr rol mov testb ss cmp iret sbb ret in test fwait into fs cmp loop jle pop shlb ret and mov or pop das jbe push rcrl (bad) insb (bad) loop sub js fs sbb lds jns sbb mov xor outsb sahf xor mov jno out push arpl push push mov mov mov xlat out fstps lcall cmp sbb ss (bad) scas mov ss das and jl xchg cmp cmp fistpll cmc jp mov pusha jns cmp xor fstps dec loope jae pop repnz subl int3 xchg mov jmp loop repnz lods cwtl pushf push fcompl imul sub cmp out push jle inc test push out stos enter fcomps aaa mov loope adc into add outsb iret scas jmp mov mov inc mov cvtdq2ps push das lret repz call xor sbb (bad) pop mov jecxz xchg fist out in lods popa addr16 xor std insb bnd xchg cmp sbb push ja inc cmpsl cmp cmp cltd jnp cmp mov mov or loop mov enter adc cltd push cmc push adc inc or sbb out inc xor dec mov inc jmp repz sbb xor cmc andl jbe roll mov inc inc mov js or fldcw pusha xchg fs int mov adc mov pop mov into jge ss clc loope imul inc mov or push repnz les ss ljmp idivl insl (bad) adc inc pmaddwd pop cmp push addr16 pop pop mov lret push mov xchg shll mov cmp jae lods (bad) jl jp push and repnz (bad) dec div sbb mov sbb rorb jmp frstor and mov dec push pop pause cmp inc bound and out add adc cmp ljmp sbbb mov mov arpl dec cmp mov push dec ss xor lea repnz jne push adc aam andb xchg jmp inc inc or inc insb jns pop aad jge pop sbb xchg ds dec push push fwait (bad) call cli mov add lahf aam add and insb loopne mov cmc cmpsl adc ret scas inc push mov xor sub sbb add lea into lret dec inc jmp fwait dec jno sbb jmp mov sti aam mov les and aad cmc xchg adc xlat and sbb inc lret orl jge push int3 jae mov fsub dec dec enter cli xor sbb hlt cmc sub push dec aaa aam and push mov or mov stc mov push (bad) cmc in dec mov cwtl push movsb gs xchg pop push jmp pop sbb fwait sub cmp loopne aam xor in xchg mov int3 add mulb xchg inc fidiv or iret sbb repnz cmpsl inc add xorb stc jle and xchg repz int cmpsl daa in (bad) push (bad) rcrl cmp jge pop jb add push jns cmpl sub cwtl cs cmc ss sub cwtl movsl jne xor addb das and mov mov rol icebp movsl push mov and pop mov lret pusha clc xchg enter cltd testb pop rolb pop fld inc lcall mov inc push rolb xor rcl call into mov and rcrb jno jge mov (bad) js fidivrl mov sub sahf push test xchg (bad) cs insl mov lods in push decl add push hlt mov scas lods add mov nop xor add cmp push pop rclb rcrb adc inc xchg ds adc push jge xorb scas jecxz push jge dec pop adc rorl push adc pop xor ffreep mov sbb push mov lods test inc push pushf inc jmp adc xlat jno sub ret in arpl imul mov pop int push and lret (bad) iret loopne lock pop or push test xchg stos dec ja dec push (bad) mov xchg xchg scas pop lret xchg xor jp sahf ljmp frstor cmp icebp and (bad) popf aas decl data16 cmpsl (bad) and or das fiadd (bad) push cmp push xor mov fildl push add or sbb clc cmp mov pop repnz popa add addb sbb or gs jns mov scas sub pop jle in sbb fdivr test add xchg popa rolb mov rcr imul push outsl js popa (bad) adc in push sahf je xchg cmp mov insl in xchg pop pop adc call mov out mov push jb push cmp incl (bad) jp xor test push sub (bad) js imul stos out loop mov dec in lea inc sub and pushf xor xchg push mov cltd imul and daa inc data16 iret fwait or push movsl and sbb fbstp jl lods adc or cmp mov sbb outsb rolb out fwait nop int sub ret and inc pop loop xchg sub nop les push cmp bound mov inc pop add adc mov leave add jo (bad) mov sbb sub dec (bad) testb ja adc mov jno (bad) imul push pop jno out ljmp jge sub addr16 pop sub jl jae pop stc in add scas cmp pop sub inc xchg jnp sbb jnp sbb and inc out out push daa and (bad) jne or js lods popa dec clc test pop imul mov push data16 cmp push cmp push insb mov adc pusha push jb inc inc or sbb les adc pop or cs out imul repnz jbe dec mov cmp fwait icebp insl test inc pop negb fistpll or shl mov test movsb mov and sub lds push lahf push dec les push sub ret cmp mov push rcl outsb stos idivl or lods std mov insb std cmp fistp mov outsl cmpsl mov inc or adc sahf mov jg jge mov pop ret scas aad sub or sbb or pusha push or sub les cmp mov mov mov mov and popa jmp push fdivrs in mov inc popa mov mov jl mov pushf inc jb js shr pop inc daa loope pop xchg call (bad) leave lods add fbld add (bad) push and cmp lahf pop pop out push aas ljmp pop fs jae adc pop cmpsb mov push cmp cld push mov aaa push test dec dec mov je add xchg jns sub jecxz fs jle sub lret sbb push sbb ret pop mov xacquire dec rorl call or inc push ret jecxz call push das vmovaps aad or imul xor adc jmp and sbb jns repnz loop in inc pushf lret jmp dec test out insl movsl int3 sbb jmp jp arpl stos mov jbe push outsb sbb gs (bad) xchg cmp aad xchg inc or jns mov cmpsl (bad) ret adc scas jnp xchg mov cltd add pop (bad) ss jae xchg das sub movsl mov cmp xchg mov fistpll xchg inc ret xchg xor fisttpll in push jne pop lds mov cmp hlt int ds mov shrb addr16 pop cmpsl sub pop into js adc ret mov das loopne aad mov mov and aam int xchg add sub xchg sub neg pop pop jo das jb gs mov ljmp mov xchg sub mov imul out lods lods (bad) and push scas pop adc inc cltd cltd jge,pt jle mov and inc push clc lahf ljmp pop and cs aad mov cmp fidivrl inc mov sbb cmp mov pop in rcll int3 mov es into and loopne xor (bad) and lea adc pop ss lods cmp mov (bad) insl inc cmp cmpsl cmc popf cmp push ds in clc in xor pushf aam out pop in jnp repnz cltd pusha xor cmc (bad) dec std xchg push or pop mov mov jmp jge adc xor popf pop popa sub mov mov or jl mov lahf sub in pusha jecxz or (bad) (bad) into sub push xchg fmuls xchg jbe (bad) (bad) out jl and aas in jge mov fcoms pop sub jmp add repnz js xor std dec push out sub pop and aad (bad) xchg rorl sub jecxz sub fisubrl xchg stos test insb das mov xor aad pop mov aas je or lret jae hlt mov ljmp and je mov cmp pop add fmul dec pop (bad) outsl inc (bad) jp push mov xor popa (bad) pop push cld arpl aam jge inc inc repz ficomp mov (bad) xor aam xor js in fstl pop push add scas inc (bad) aad adc outsb push (bad) sbb out movsb scas xor pusha pop ss ljmp std in nop push mov je loopne sbb ret push mov and fwait pop pop into aam inc sbb ss xchg (bad) int fdivs cmc loopne fisubr (bad) cmp loop pop popa outsl jecxz jo aas xchg orl push xchg rol aam push cmpsb loope xlat addr16 or imul sbbl xor stc jmp dec jg sbb add cmp mov mov mov (bad) push pusha gs pop mov or xor cld ficoml es push sarl xchg mov xchg insl fs je clc ds (bad) jb data16 insl into sub icebp ds mov push test lods mov in les (bad) mov cmp pop push loope push add sbb dec in mov push sub jge add pop add aad mov xor (bad) sub cltd fisttpll cli in jae loop dec push fbld push xor rorb mov nop sbb (bad) sbb xchg xchg pop (bad) jae pop insb adc xchg add pop pushf or mov aam sarl loopne push scas enter xchg pop push inc cltd gs setl fidiv loop popa lret sarl mov in aad xor adc xchg push (bad) lret cli cmp dec push pop fldt cltd xor jbe scas hlt lds xlat or pop dec inc jo mov mov and data16 lods fcmovb sar jo xor mov pop adc jns cmp inc inc adc cmpsb pop int sahf aaa and mov cltd (bad) es xor aam sub fimul sbb cwtl pop loope cmp jns sub mov xchg std add repz xchg inc jb sbb adc pop cltd insb mov pushf push incb test inc sbb pavgb ja jno xchg outsl inc mov pop fsubs pop ret in loope ljmp fcomp xchg paddw (bad) or into testb xchg inc mov loope xchg xor int3 inc jno loop cltd sub or sub jecxz sbb push scas pushf (bad) arpl negl loop mov xor lods xor adc jo xchg int repnz (bad) sub push test mov pop mov pop cltd aad call les lods push push enter sub (bad) xor mov inc clc popf scas mov ret push jecxz in add aaa pop mov mov pushw mov call scas jp (bad) xor mov sti mov adc ficom cmp ljmp insb frstor lds cld mov or lods std mov xchg or cmp jo fs data16 and xchg lods xor negb dec hlt out adc ds jb add (bad) inc push (bad) sbb jmp mov cmc inc mov cmp xor iret xchg call stc and (bad) xor mov repz xchg pop sbb jne xor nop inc loope jo mov and mov sub or int xlat loope repnz lds out out es dec push cmpsl imul cmp or bound flds and clc pop shrl sub push stos sarb cmp nop lcall push mov xchg inc cld das out xchg dec xchg mov mov in add dec pop pop pop sbb fisub stos call lcall clc xor inc lret sbb stos enter push mov push jnp sbb dec xor test jmp loop jbe daa and pop cmp add xor insl repnz test arpl dec dec cmp lds movsl add lret aam sbb test adc out arpl int3 xchg mov jl outsb roll aaa loop sub pop lock loop mov pushf cmpsb and ljmp inc adc adc aaa inc out xorl movsl fiadd push xor mov pop cmc lods out and mov ja imulb (bad) insb xor mov jl lcall lods in adc imul jae mov ljmp xchg mov pop mov les pop popa mov ret pushf add fprem1 ja cmp mov fistl push xchg enter pop lcall (bad) mov pop and outsb jns mov cmp adc repnz cld rcrb fnop xor mov in dec rcrb pushf adc or mov int xchg test xor cmp xchg xchg dec inc popf js push loop jp pop fisub rcrl mov mov scas lock xor pop ds adc push out mov dec stc loope push or jne xchg xor sti sub movsl mov lret rclb insb (bad) stos int3 mov pop mov sbb cli and pop test scas stos popf jnp in gs ds inc xchg add movsb and push cmc in xor jno jo lahf nop cmp std mov imul pop dec mov push jecxz adc push test (bad) mov jbe sti repnz lds push fwait movsl clc imul fsubrl test sarw mov adc cwtl cmp mov (bad) mov pop out adc pop shll addr16 push jecxz cmp inc push mov clc les inc loopne out dec into or (bad) int3 out rcrb int jb xor lods (bad) incl add inc fadds lds loope sbb mov scas stos jecxz mov int3 daa dec imul mov in xor insl push or loope push xchg mov adc cmp fwait xchg mov lret sub sub xorb mov pop imul push aad mov aam pop and cli movsb sbb xchg mov jge mov jae xchg mov pop mov scas popa out or and popf lahf test orb ja fs push jmp sbb sbb ljmp (bad) std push or imul dec jle int3 push arpl rorl lods stos enter jmp adc xor xchg in fistpll mov imul je jae lret mov pop adc sbbl and test ljmp fidivr gs popf adc jp add testl sub stos jae aaa jb test int3 dec les pop inc mov ja or cltd in test jae sub pushf loop pop mov fist in xlat mov es inc jle sbb mov xchg push call cmpsl jne pop adc in dec sahf andl std aam pop add mov sahf push iret std fbld pop mov cmp sub mov and dec push or sti mov aaa adc mov mov popf das and or jne pop mov negb mov fwait adc fwait decl decl inc push xchg rorl push pop ss jae adc add in xor (bad) scas adc jl lock loope enter sbb cs mov mov mov mov loope cld add pop out fnsave (bad) ja or cmp insl lea ss cmp dec call jg scas cmp xchg push inc pushl int3 push (bad) mov mov lret and mov push ss mov test ret xchg sbbl adc jae ret mov call fisubl ds mov jge insl lds pusha shlb jecxz dec cmp (bad) jmp pop bswap and mov push sub xlat pop pop mov iret clc daa jl int adc cld add mov std and into mov sub and or push sub insb sub adc jbe and dec or cltd dec push mov int3 ficoml icebp (bad) imul jbe in fdivl pop jmp sbb sti in clc lret clc loopne xor sub sbb lret (bad) mov push (bad) jne cld mov mov cmp xchg je int push xchg sbb popf loopne jge cmp into icebp out es mov ficompl cmp and mov or dec adc in mov cmp mov jp std adc mov push sarb push or adc mov pop jbe scas inc xchg inc cmpsl (bad) lods int and rcrl mov jp jecxz push xchg pusha sub add push mov movsb out mov enter cmp scas sti test fcmovnu mov or mov mov outsl cmc scas add push int xchg (bad) sbb xor push adc addr16 daa popf rcrl popf mov popf pop pop ja jbe aam xchg xor cmpsb loop push sbb orl cmpsb stos popf sbb pop sub fcoml cltd jnp push mov (bad) mov mov les aad test mov (bad) lock add and in push (bad) shr sbb mov cmp dec dec pop add push js (bad) xchg inc add mov fcompl (bad) mov (bad) add xor sbb cmpsl ret addr16 ja cmp jle cmp mov in mov nop sub cmc fld stc add scas pop inc push fnstsw adc fcmovbe jmp int jle xor jge pop push sbb aas daa loop lretw dec into mov dec scas ljmp push ljmp xchg xchg ds arpl and pop sbb rcr int pop fnstenv imul call jbe div cmp mov xchg nop data16 and ret mov idivb lahf std (bad) pop push in pop add lods xchg mov sbb push (bad) xor sub aas (bad) pop int3 ret or popf mov pop dec inc push addr16 or ret adc out jns fsub push dec inc jb add push add dec xchg add sub (bad) hlt lret add lret mov lret jl lock insl gs cld mov ss inc data16 dec js jb ljmp scas push scas push stos in fcomps adc rcll mov xchg stc dec dec mov adc aam pop (bad) jge or pop rcl xchg daa sarl xor clc (bad) jb xor ret sub add dec jno sub out popa cltd sbb dec dec mov push mov bound mov test dec test xchg cmp hlt pop xchg aad pop addr16 cmp sbb ljmp xchg rclb mov and jnp push (bad) (bad) jecxz sarl ret test jge rol adc (bad) lea mov xchg sub or cmpsl sub inc ja xchg jnp sub mov adc fs cmp xor clc out mov add adc lcall (bad) insb xchg sbb js decl jecxz and ud2 sti aad ret xor fmulp pop call mov movl or dec mov mov cmp inc loopne dec adc jo dec das jnp in lcall fisubr pushf sub and cmpsl (bad) insl sbb fisttpl mov movsb popf mov ljmp mul adc lret mulb inc out xchg scas fildll gs or push fidivl popf mov add cs pop nop fbstp lods push mov inc pop mov rcrb add mov aam xlat inc ja notb cmp xor (bad) and push lahf dec fadd jp hlt mov pusha push mov ds mov sub xchg mov cmp out mov inc add mov sbb sub cmp loopne in pop fcmovnbe xchg stos in popf into fdivl inc rcrb notl (bad) aas jle jmp inc xchg rorl cli call dec lret dec mov pop cmpsb mov push dec push jge cmp fisub adc mov cltd push mov test pop mov shr push in or mov into lods fcomps inc pop lea (bad) out push mov sahf ljmp xor inc cs gs push pop ss xchg add sbb out or les push push dec add jb out mov or (bad) sub aas cmp movhps jmp push mov cs dec out or xchg sbb fs lret bswap inc mov call sbb mov int add push imul xchg add mov sbb stos cmp pusha dec pop mov (bad) adc add mov fsub xchg push scas sbb in lahf inc cwtl sahf insl (bad) das ret add and cmp add mov xor mov push add aam (bad) fild je cli xchg sbb sbb hlt mov push jmp and xor cld test cmp sub ret mov or mov mov mov enter aam fwait insl ficomp push push daa jns sti rclb mov sub or xor pushl iret aam mov pop lock pushl test xchg sbb imul clc mov fimul push adc cld (bad) xchg out loopne sbb imul fcmovb push add xor int es or das (bad) push test sbb dec std div mov sahf mov shl dec push jb pop xor mov test int adc pop fnsave insb jb xor es adcb inc (bad) fsts push xchg xchg pop (bad) jg cmp fdivs (bad) pop in cmp int3 inc mov push add add mov jmp scas pop xor jmp xlat stos (bad) jmp sub in lahf ret lea (bad) (bad) mov jge xor pop cmp inc mov out (bad) jle lock push cmp enter xchg stc aaa dec jl adc mov xor mov (bad) into sbb xchg jmp jg std dec push imul pushf lcall or xchg clc xchg (bad) inc cmp fnsave inc cmp xlat dec push (bad) in xchg ret mov int3 mov stos dec in test jne rorb movsl dec jb insl rcll pop xor sub pop fucomi imul je es mov (bad) out sbb hlt gs jb stos mov stc mov dec pop arpl hlt xor pop mov jmp hlt scas cs pop jno daa mov jle inc stos insb and xlat (bad) xchg dec or in pop xlat cmp test xor loope sti xchg cmpsl push inc in jg or std jbe mov stos mov lcall pop lret cmp (bad) cmp ss jo adc imul mov lds sbb movb std mov ret mov (bad) mov fcmovbe iret lret rolb aas les stc mov mov pop adc dec xchg inc dec lock loopne cmp mov xor pop gs bound dec or cmp or or fcom icebp test dec ret cmp (bad) in jne mov stc inc les lock sub sub jnp mov sbb mov mov add push lock enter rorl enter cmp mov pop stos imul dec es mov lahf jne (bad) pop and int3 and push mov mov or out ret shlb inc jbe push xchg add sbb sbb cmp fisub mov mov add rol pop sub les stos leave push and jge sti (bad) xor and cli iret sub test outsb (bad) aaa mov sbb scas push ss adc mov cmpsl mov or mov pop shrl sub dec roll mov rcrb fsubl in add ss fwait shlb push cmp mov roll loop cs popa ret mov paddb lahf (bad) lock or stos mov mov cs jns mov ds (bad) outsl cld outsb sub inc push cmp jecxz sub jnp fcoms adc cmpsb cs outsl xchg jnp mov pop mov (bad) movsl xchg fdivrs jmp (bad) clc leave add pop es rolb hlt daa push xor xchg bound and and push sub (bad) xor inc or out (bad) (bad) lret lock jmp cwtl in call imul in cmp pop scas mov sub cmp sarl dec popa dec adc ja mov rcr dec sub in mov mov in mov stos sbb cltd dec ret mov pusha jne,pt lock cmc lock push xchg push xor push inc das cmpsb add or pop je test sbb cltd shlb into mov lods push pop lret nop and cmp stos mov adc push jno and and lahf inc mov xchg and sbb jns fldln2 imul pop repz cmp cli or mov mov call iret xchg enter movsb cmpsl sub pop sbb les or lods sub sub adc fbstp add fbld clc mov xchg jle in hlt or push sbb stos cmp or neg jmp sub repnz inc cmp or mov jg shrb movsb dec mov roll rcr sub pop dec (bad) push pop adc pop pushf and test xchg adc sub fistpl int popa push stos fldl cli fdivs add mov notb stos mov push fcmovnb jno and addb mov test jecxz mov data16 sub and lcall push cld leave (bad) int pop sbb or inc push pusha mov movsl fiaddl loopne sti jb aam leave rorl cmp scas stos fimull push nop dec mov dec xchg adc pop hlt mov push sub inc fmull std icebp dec rcrb jne fidiv pop adc nop dec imul lods pop cmp jne shr dec (bad) sub inc out aad xor jl jo arpl std aad lods sbb lahf pop inc pop add xchg mov push mov dec test pop sub or lods mov fsubrs imul pop insb xchg pushf (bad) xor out jge mov lds movsb xchg arpl push or add mov mov fwait iret fcomps jno jbe push pop outsl dec icebp data16 mov aad lds fnstsw fiaddl push loopne int aad xor enter arpl cmp adc lds mov (bad) cmpsl sti out cmp ljmpw pop mov jo inc jl (bad) and mov lcall cld or cmp aad xor fnstsw hlt bound std push inc inc pop jns popf pop call cmpsl aam lret rorb push jecxz cwtl dec mov scas lret mull popf dec inc mov sahf mul jbe bound popf cmpsb into and (bad) lock loope cmpsb ds gs subl adc mov mov mov push pop xor in jb cld mul fwait pop rcrl xchg jbe test aam addb je ds adc push and hlt push jecxz ss or out fadds jle xchg push sahf mov int mov test sahf cmp iretw loopne (bad) repz sbb mov push mov into xchg lods jne mov mov adc dec ljmp xor and pushf jge cmp addr16 (bad) pop xchg enter shrl inc push in push jns stc pop jmp scas inc inc sti push cltd cli cmp iret mov hlt lahf adc add mov rorw outsb and fs push or in xchg test or (bad) pushf add push inc divps pop add sub sub dec or fs pop xchg (bad) in call adc push mov lret clc insb pop addr16 pop sbb mov add xchg test into mov ret push rcll je lret movsb test imul nop mov jne mov loope fnstenv adc jmp inc std jb dec or inc dec jo sub jg lea test test mov sbbb arpl mov (bad) pop enter inc mov in xchg jae push sbb mov xchg push enter cmpsb jnp or in iret lock inc iret rclb inc cld sub ret pop fidiv xor lcall adc setae (bad) flds inc sbb sbb mov jmp ss xor fcomi adc jmp out aas adc cmpsb sub and pop jmp mov add lea and mov js pushf cmp mov shlb adc sub lock add or cltd cmp pop add leave fwait jecxz mov jne sbb sub stos int push mov test pop sub cltd fwait mov jl add sub aas push sbb fs jae pop mov or mov int3 testb outsl sbb fstp idivb sbb out dec aam mov dec push add jnp or clc push sbb daa dec jmp fnstenv xchg ret mov inc pop and xchg add movsl jg (bad) and loope insb int in js test jmp push sbb stos mov fdivrl add (bad) jae jge leave inc roll sbb xorl cld pop sbb push aad (bad) jp mov stos dec test push shll jb out sbb iret jb movsb jmp cltd pusha frstor jns test cmpl jb inc sub test dec sti cwtl push push rclb dec add mov xchg mov leave inc pop adc dec inc (bad) icebp mov pop sub lret stos fsubp add (bad) loope inc add add sbb insb mov dec mov call pop cmpsl mov rorl (bad) jge inc dec in xor lret add aad int push and inc imul (bad) mov mov nop/reserved xchg mov mov scas dec dec dec xorl jnp xchg mov mov xor jl jp dec dec sub leave xor stc pop out repnz push test (bad) icebp sahf cmc fxch sahf pop xor xor (bad) push mov push xchg aaa rorl imul mov cmpsl dec xor dec xor dec imul pop push sub int3 or (bad) xchg fs xor inc pop fildll push notl mov dec sbb mov out orl mov xchg mov lcall push jmp (bad) das cli decb ljmp stc jb test loope push lock in or adc lcall mov cmpsl cmp mov adc ds ss or pop repz fdiv inc out mov fprem jp sbb (bad) dec flds xchg fs push testb cmpsb xchg push mov push xchg loop jg xor aad sahf into imul adc cli xor lret scas xchg fiadd stos or add repnz cmp xor sub js cmpsl push and cmp fwait cmp js pop out push inc and (bad) xor cmc pop cs inc scas lods loope mov sub jne (bad) inc xchg int3 push rol imul push imul lods mov jns fcmovne jb pop pop pop sbb pop or mov int (bad) pop ficomp cli (bad) mov lcall push mov inc mov cmpsb lea xchg imul cmp les pushf mov cmp fadd testb pop pusha popa cmpsl outsb in adc xchg cltd nop jnp data16 push fwait jne divl and insb adc out pop clc push (bad) mov lret iret (bad) push dec push mov incb and jbe jp test arpl je sub fiaddl inc jle or sbb cs pop frstor cmp pop jnp (bad) fbld mov inc dec xor iret shr (bad) ljmp iret pop mov je jle cmp imul popf sub ljmp stos popf jg pop pop sbb mov mov push (bad) dec xchg adc or pop cwtl (bad) mov mov js push add or lods hlt mov repz (bad) cmp cltd dec pop icebp xor jnp sub fisttp (bad) xor dec push das sbb outsb inc rcr xor inc lods dec divb in xor shr es adc add mov in xchg xchg mulb jmp inc or jecxz xor dec dec cli sbb lods hlt mov test xor jnp jae xlat and aaa or push inc sub movsb jmp inc pop jp insb aam out and jne pop add pop lea mov cld xor cmp ret ret pushf addr16 pop in pop pusha pop mov out (bad) dec xorl mov pop pushf push lret push in pop mov ljmp jo sahf add pusha mov fwait icebp mov aas jmp dec cvtpi2ps lds jno ja jmp aad leave cmp (bad) mov fcompl mov movsb es nop jge rorl enter jl dec lahf mov mov data16 jge push cmpl (bad) cmp jo jnp aas add dec mov mov pushf mov dec xor add and mov jbe cmp cmp cmpsl add adc pop inc pop add push or gs pop fwait gs and and ret loopne neg and ret lods or adc pushf sub loopne xlat out int sbb inc jae scas cld out push hlt pusha sti negb xor jl xchg cltd cmp push int3 pop push sahf cmp jge out jmp jns sbb dec stc jbe fs add jge mov mov inc clc bound dec ds js aam imul dec push les add add mov xor (bad) mov adcw push dec (bad) movsb dec cmp lret movsb or xlat scas lret je mov leave nop ds jecxz (bad) inc cli cmp push enter std pop add out cmp movb cmc test out test mov add add xchg fiaddl ss sbb push psubusw jle popa pushf xchg cmp sub mov mov pop pop js dec add mov push inc mov addr16 icebp mov mov js pushf je lods out inc inc scas cmp mov mov scas adc push or pop or jne cld sbb cmpsl cld pop pop mov cmp or xchg outsb mov inc cmpb or jecxz dec aam rcrb mov cmp adc push movl adc dec mov out gs add fiaddl sub (bad) cmc outsl out sti adc fmul cmp fbld fucomi aas sbb adc add ret xchg movsb push rcl xor and sub sarb mov call push mov lea shll hlt dec int add inc shl mov push jno,pn xchg or loopne add (bad) pop (bad) fs xor push scas out fadd mov sbbl dec cmp sbb test push inc mov dec push mov xchg flds inc push xchg test daa aaa outsb push ficompl pop pop xor int3 jbe add mov fiaddl push lret pop loop push das fs or sbb lods mov int3 pop mov cmp lods jmp jge (bad) jbe xor mov loopne div repnz push and mov outsl mov fcoml cmovb pop ljmp sarl jnp xor mov jp push xor (bad) test cmp loope test mov mov add xor test leave test jl pop test sbb mov mov adc pop pop ret movl and ja lods fistl or (bad) mov pop mov jo mov pop aas mov fcoml adc xchg in (bad) mov test sbb mov pushf cs repnz mov mov inc dec icebp jg ja loope scas iret adc jne movsb mov mov xchg mov jne in pusha (bad) and xor and lahf mov sub aas xchg ficomp push add std adc stos cli (bad) (bad) (bad) or insl out mov mov ja pop outsb mov sbb push adc mov adc inc sti (bad) xor push xor cli test icebp jb adcb stos andl ljmp mov imulb popa sbb dec push adc into in (bad) jge addr16 repnz ds or jne xlat mov test inc ret dec jb sub cmpsl jg add int3 sbb push and xchg and jle rcll cmp in sbb out hlt dec jae les bound icebp xchg jle fadds push int and push and daa add inc fmuls (bad) cmp clc xchg lds je pop data16 push nop lcall arpl jg test mov (bad) shrl adc (bad) sbb push shrl xchg cmpsb loopne (bad) pushf clc ljmp test and sar decl push cli mov mov pop cmc add fisubl fisub cli popf sub pop xchg pop ljmp aas call mov xlat ret in addl adc ret mov aaa jp mov popf add fcoml dec xlat cmc outsb adc loope into fisttpl and and test pop add movsb or (bad) lcall inc push movsl mov test xchg hlt jb (bad) mov lea sub mov movsb inc pop outsb or sbb out movl mov mov sub mov dec push divb mov stos sbb mov aam pop xor loope jecxz push push xor dec dec mov (bad) fs pusha imul dec das scas mov call fisubr iret idiv lret and daa js js stos out and xor sar ret xor cmp sbb push es cmp or xor (bad) jmp dec adc ja or bound out rcrl jle pop mov mov push fs inc push push test sub cmpsl mov mov push cmpsl sub sbb sub or testl or adcl sbb pop adc (bad) decb xchg mov adc mov test pop in jmp inc mov lret out fisubr adc mov dec stc sbb inc mov lret and sbb pop pop dec mov pop sub insb imul mov cld dec sti mov scas imul fcmovu pop jmp lcall mov outsl jg mov jle repnz out sbb arpl adc cmp jecxz out cwtl mov aaa push (bad) cmp push mov mov and add (bad) dec xor mov xchg (bad) imul push dec add dec divl push pushf scas popf scas outsb loopne aam push or ret push xchg sti push and cmp hlt call rclb push xor xor addr16 xchg sarb lods ljmp adc push cmp ficomp jle (bad) std jno (bad) push cmc dec leave cli insl xor loop xchg iret bound push into and dec (bad) es shll das mov inc std push push dec cmpsb dec pop cld aaa sub push sbb call aam mov and sbb xchg jmp rcrl adc pushf dec cld repz sti fnstsw stc arpl cmpl (bad) pop js pushf je popa (bad) shll push (bad) pop pop mov lods daa xor push adc int push sbb adc fistp cld call mov push and stc mov icebp inc rcr test incb jno lret xor jae inc pop daa mov jl xchg and cld in inc aaa add sub push adc ror test or xor ret jo (bad) iret int3 loop mov mov inc ljmp jp ss xor jp cmp into pop scas mov inc std and movsl pop sub outsl leave xchg xlat stos mov in shr negb lret mov nop jl cmpsl outsl jns mov hlt jp xchg sbb sarb mov push cmc sub mov loop push jg mov sub imull dec pop ds add (bad) mov mov (bad) in pop xchg cmp in sub stc mov add push scas or gs xchg and repz dec adc in dec stos xchg or hlt add sub mov jecxz and cmpsl js pop jp sbb xchg pop bound in nop or popf mov sahf sbb sbb sub mov ret jecxz cmc cs jp add clc pop inc mov sub cmp dec or cld jge cs lahf jo xlat jns push aaa mov fdivrs push or mov add lahf test adc pop push jg or int3 jbe loopne dec inc cmp sub lea add (bad) insl imul lcall scas push jns dec int3 sub pop dec xchg mov daa mov add lahf mov sub xor mov inc gs push adc add popa fs rcrb pop mov mov adc iret out mov lret sub icebp in arpl sarb add push movsb cmp out ljmp mov sahf mov pop ret push jge xchg movsl sarl add popf xlat add outsl test pop (bad) clc xchg loopne out or cmc icebp lcall aas cltd pushf loope outsl lods cmp repz sbb divl and in sbb out out mov stc xchg jns dec pop and rcl dec pushf dec imul mov orl jp xor outsl mov sub add lods clc fidivr out mov pushf dec imul fldenv xchg cmp rolb jno push inc push adc fcom out dec je (bad) ja int pop mov incl (bad) xor push jmp fistpl pushl sbb jne insb loope dec cmp in sub insl sbb in (bad) stos or rcrb jno cmpsb cmpsl clc adc nop cmp repnz (bad) jmp notw stos push fbld std mov mov xor test out dec mov (bad) fiaddl xchg fldt mov cs xor mov cmp (bad) mov mov ja sbb shll nop lock mov mov insl (bad) pusha xchg stos (bad) loopne jmp pop dec add mov mov lds into inc nop jecxz ss xchg jmp xchg jp xchg clc popf push add lods add (bad) add jmp stc dec sub mov mov dec sub lds push stc testb (bad) adc (bad) jmp adc shlb jbe sub in xchg out jae xchg jl pop in movsb icebp insb sub or loopne es je les pop repnz imul inc mov pop gs pusha add ja xor mov movsb je inc cmc adc push mov clc (bad) mov subl les dec xor xchg sub xor mov into pusha jmp aam in ret and ret test jecxz xchg hlt xchg jl pop cli inc repnz mov mov cmc cmp leave jle mov inc mov sbb sti and or aaa mov pop push xor pop repz dec sub mov xor mov mov cmp jle stos jmp dec push or ljmp sbb pushf ja sub sub jbe stos shlb mov ret inc mov icebp push adc orl js cmpsl or inc inc inc (bad) lcall or inc gs jge leave aaa stos cmp cmp lock std xor scas sbb cmpsb (bad) fwait mov gs (bad) cs test add lret push sahf hlt and push mov scas or jle xchg push push repz fisubl mov ljmp out (bad) mov jne xchg clc stos insl lret (bad) jecxz pop fldenv (bad) aaa stc (bad) fcmovne inc lock mov fistp sub pop mov or (bad) (bad) scas packssdw leave and and dec push outsl mov jb mov rorb push and cs loop jnp fidivrl loopne or movsb and xchg sub push dec scas mov xchg imul daa dec loope rcrb je je rorb aam jg call xor (bad) and mull xchg data16 (bad) js loop mov loop scas das (bad) arpl (bad) icebp fcomps arpl das mov sti (bad) out repnz das jle xlat sbb stc jmp inc mov insl xor xchg cmpsl mov cli ret or pop (bad) gs insb add push cmp xchg pop idivl mov iret es jge cmpsl mov mov (bad) jno jbe ret lret jp loopne fcompl pop dec test lea jmp int3 mul jge adc mov jmp add in lret push (bad) out ss or mov xchg fcomi insb aam jg (bad) cli lret or jno into imul gs push adc lcall test cmp adc jmp xor das idivl xchg push pop cmp xchg imul mov xchg imul xor sarb lret jg push mov pop pushf xchg push sarb mov test outsb daa in cmp lods nop daa sub (bad) daa pop xor cwtl fmulp (bad) fcmovne loop jns push mov dec iret out (bad) je sub xor das mov (bad) pop sti push out in fwait xchg dec (bad) int3 lea cmp ficomp sbb rcll jmp pusha stos adc movsl std in sbb pop outsl mov jns cs popf cmp push push and andl mov or push xchg cmpsb jecxz jge sti jb popf in pop inc pop lahf jle mov in dec in sub push movb mov loopne jg jl xchg inc movsb adc fdivs (bad) arpl (bad) mov add popf fisubrl fxch (bad) mov sub adc imul aad movsl testb fsubr sahf adc (bad) mov std out pop mov loopne mov xor inc mov outsb je test dec loopne xor mov fucom inc jp jmp roll jae push pop out loop dec pop in adc dec scas sbb stos (bad) xchg ret cmp add inc mov or sub in pop and jmp test das mov push inc mov negl sub mov jmp rcll std jae adc insl bswap scas and mov stc stos ljmp insb cmc fstps push cmp les into std push cld sbb (bad) ret xchg std jg adc or pop daa sub push lea cmp adc or in dec ljmp lock test ja pop pop xchg movsl fcmovbe movsl (bad) push push jle lcall pop rep xor xor xor jl dec icebp in lods or idiv scas addr16 loope ja ljmp mov cmp mov push mov push mov fidivrl rolb out mov pop cmc mov push jmp mov loop lock pop mov out test enter push (bad) jg add mov repnz push loop bound lahf push pop mov and push fidivrl adc decb repnz mov std (bad) icebp inc sub mov (bad) sub stos push daa mov movsl andl push push adc jb fnstsw xchg inc jo adc sbb xor xchg fisttp repz stos scas stc jp jno xchg mov pop stos in ror sbb loop mov inc jne in ja fiadd cmp call xchg or lds (bad) fstps mov sti push xchg lods icebp inc (bad) cmp mov push jns mov mov mov mov stos push and xor sbbb (bad) test push iret jno (bad) or jne mov sbbl fs lea popa pusha hlt outsl addr16 dec xchg ss rol bound out popf les dec ficompl xchg ret popf test mov cwtl mov negb add ficom aas aaa mov mov je inc pop shrb sti push sub pop sbb das or or aam das daa xchg lds (bad) fsubl pop sbb mov lret or (bad) mov out jb test cmc cmc mov and pop mov ret jg mulb or mov outsl pop shrb leave jg jecxz xor (bad) popa xor mov je imul push pushf push int sub inc mov push sbb mov out cwtl sbb aam std push fstpt and (bad) mov pop push xchg push mov add adc push das rolb test mov and jp int call inc mov mov mov psrad lock enter lret fbld stos in (bad) dec cwtl shrb out or push mov lea pop dec jbe mov sbb ss cmp sahf or stc je or sub or pushf inc sbb xchg sub jl inc sub push push in xchg sahf repz insb (bad) mul or inc addr16 mov popf pop jge aaa popf pop cmp mov leave pop fwait imul cltd std mov mov out in insb dec (bad) in cmp cmp adc arpl rcll inc mov pop xlat pmaddwd pop in idivb ds adc and fsubrl xor or push jbe sub pop mov pop daa lcall test test mov in mov fistpll lea or adc xchg or das ds out lea call dec push insl subl cli es lea add and jb aas add leave or lahf outsb xchg and pop pusha push xchg sbb adc jecxz daa mov mov (bad) push push lods repz repz sbb movsl into jo mov jno pop movb test xor dec enter push dec pop and je mov es xor push lods pushf mov lahf fld in decl jns loop xchg shld hlt leave push and pusha mov xchg adc mov cmp lea sbb pop pop add inc shlb incb shlb push mov jnp incb inc fild imul movsb jg cmc mov clc nop popa test jnp jmp fdivr mov inc das xor add add dec pop (bad) pop aas addr16 pop inc dec push pop jnp sbb xchg adc mov lahf pop add mov push rcll lret clc pop dec xor cwtl stos mov pop dec cmp or adc sbb adc adc aam inc adc add jns sub mov shrl and (bad) testl (bad) mov jecxz insl mov or sbb das mov out shl fstpt cmp insb in cmp testb lcall dec movsb nop cmp mov push xorw mov loope je ret ja pop loopne test icebp (bad) fdivr inc xchg fucomip movsb icebp pop movsl jle pop dec mov pop push jns jae jns sub dec fadd cmp pop mov mov add pop mov inc test mov inc jnp js sub sub (bad) mov or jmp in xchg stc cmp push shlb stos push ret push arpl (bad) stc jmp dec xchg fisubl mov repz mov mov or in rcr test pop loop push mov std mov sub in dec movsb rol imul jb xor lea iret fsubrs cmp inc cmp add mov lahf je sbb popa mov les add (bad) fimul push mov push and add fadd hlt inc test mov jne add stc outsb (bad) inc ss mov push cmp inc loopne xor pop mov sub jecxz adc mov pop jle push cli or pusha cmp orl mov dec lcall cmp out mov imul inc adc cmp stc sbb add or jnp sarb lods adc or leave divb scas rcl push mov xor stos pop mov and jmp enter lds cs stos sbb mov neg push rorl es popf adc add xchg es lret rorl push data16 xchg nop pop push push or test ja dec cmpsb gs mov shll adc mov aam insb test mov mov scas insl mov push adc mov fcmove mov mov es fildll jae cmp sub or push and or push jnp mov mov mov loope xor sbb (bad) in (bad) or scas mov int3 xor pop mov mov adc aaa ljmpw fisttpl dec xchg mov dec in push inc into loop jo insl or mov movsb mov (bad) in xor cltd mov das fxch bound cmpsl push mov (bad) (bad) mov pop mov int add jge movsb rcrl mov sbb dec (bad) cmc sti xor add inc inc mov adc push ret gs xchg cmp adc (bad) dec sbb add mov icebp inc dec add in sbb jb nop cmp jp das (bad) scas mov (bad) xor and mov cmp jmp imul stc inc mov add (bad) ss aas int3 int pop nop cmp xchg lcall xor rcr das or int jmp mov sbb mov les and add xchg jbe xorl (bad) xor xchg cld pavgb cmp and xlat xor add mov outsb (bad) cmp inc out pop inc movsb mov pop cs in add aam insl gs lods pop add cltd mov cmp icebp aam sub mov std scas sub stc fcoms xchg (bad) mov mov ffreep xchg add das rcl and flds (bad) jns adcl sub push cmp stos stos cmpsb testl sub sub popa out add add and xor movsb sub push cmp fwait mov cltd dec adc ja push inc sbb inc insl inc mov push (bad) mov mov insb fstps add insl out sub ljmp fsubrl fisub movsb push cs sub cli orl sub ljmp insl pop xor pop push mov mov dec out sbb inc or or call repnz or xor lea cmp outsl clc dec imul lock in push or add ret pop cmc inc xchg daa cmp cltd cmpsb cltd outsl std push rcl jbe ds jbe cs or ljmp and icebp ret push pop aam lahf (bad) leave dec (bad) jecxz xorl sbb (bad) (bad) repnz and push insl cmp js inc lcall int imul jge sbb xor pop arpl test mov pusha repnz mov shll pop jne adc sbb lds incb jl cmp push flds lret push test shrl inc andb cmp stc inc fcomip jbe lock fildl xchg shll imulb add test mov inc hlt pop jp sub stos repnz neg push fwait xor xor mov fwait add mov or ss in cmp fidivrl mov push xchg add cld jmp fcomp inc mov mov iret (bad) pop clc addr16 popf mov int3 xchg cmp mov xchg aas mov scas mov mov imul lret sub mov jns dec add pop adc push xchg mov sub cmp cwtl push bnd addr16 add mov cmpsb adc jl or pusha mov mov jmp pop gs dec sub ja popf mov aaa xchg push lock xor jb push (bad) sbb outsb jmp out mov push add sbb or arpl push mov fbstp and or mov stos fwait mov fstl jnp pop mov nop daa (bad) repnz adc jnp push aas jns out iret bound (bad) lret adc lret inc add out jb popf xor mov xchg loop sahf jo aad cmp push stos fldenv (bad) mov cli and lret ljmp shl push pop clc adc sub or inc add jae es sbb add jo out adc push push push lock push dec dec test repz loop lcall and ljmp add out pusha xor das popa test mov fdivr lods call xchg jae popa lds sbbl dec inc dec jl cmp popa in or dec adc xchg push mov cs mov psrld mov sub (bad) mov call jo pop (bad) cmp dec test icebp sub sarb adc rcrb scas in fiadd or pop push popa add popf scas xchg jno jno and bound cmp sub mov mov xchg and and mov mov or jno lods (bad) ljmp (bad) jbe lods enter add mov imul push pop xchg mov bound sub ror jmp xor das jl sbbl inc xchg push pop cmpsb in insl stos jge and jb outsb shrb dec enter aam sub adc hlt xchg bound into push popa rclb pop mov xchg mov jb mov dec push outsl jl test mov push sub outsb mov dec cli fs push iret xchg pop popa mov cmp xor insb imul or lods (bad) ror pop jns mov jle (bad) sbb adc ja mov loope inc jnp das sbb (bad) repz mov aaa xchg push adc (bad) or addr16 xorl xlat mov inc les dec fs lds jbe mov add lods shrb xlat (bad) das mov inc mov mov sub fadds insb rorl add xchg push in call insb cs sub test test sahf adc repz jbe insl mov pop xor ds dec (bad) mov mov jae mov add test in popaw js push cltd adc jl push or pop imul jae outsl push stc xor scas ret add cltd or jo (bad) add push mov jl jg adc fs jae push ret scas push pop push sub cmp pop lret fdivrl dec insl push or aad (bad) popf add cmp xor arpl cwtl push movsb sub push and stos jno iret xor fnstsw jnp mov xchg sbb cmp enter inc push std push (bad) jo jl adc or xchg and andl mov mov mov sar jno cmp pop cmp push into pop mov ja (bad) repnz lahf dec pop mov lds cwtl dec xor jae int js stos cld cmp push xchg sbb pop dec out stos lcall mov int sub and xor enter test add rol xor dec adc (bad) imul adc (bad) sbb mov sbb jmp push scas sub movsb outsb mov int3 testb (bad) cmp pop outsb stos mov dec mov test insb mov loop lret and push stos mov (bad) loopne out adc mov or jbe es iret dec jecxz hlt jo daa adc sub mov imul in movsb into xchg pop xor insb mov int3 jo xchg idivl lcall jl insb ret adc mov jecxz call (bad) stc sbb ljmp arpl stos push movsb push test rclb imul xchg xchg cmpsb push repnz call xor lods mov (bad) jbe xchg xor loopne ret mov fcmovu pop mov cmp pop pop lcall test mov push fcomps jnp xorl add cmp sub add cmpsl test jle,pt sti in xor bnd inc (bad) xor mov push jns jo mov les and addr16 jge mov push lods mov xor sub lods roll cmp hlt cmp negl ficomp sub xlat pusha sbb inc negl pop out rol dec (bad) adc inc add cmpsl mov icebp xchg add bound std mov push (bad) int jmp mov cmc pushf mov cmp jo push or jae push scas or dec (bad) jb sub lods or int mov nop jl notb out jge (bad) (bad) icebp adc test fcoml or mov mov sbb jno cmp icebp dec jmp ds dec movsb mov int3 and mov jns sahf (bad) push push hlt aam mov cmp xor out pusha xchg mov in rcrb mov rorl scas push add ljmp jns and push jg adc mov add sub inc fisttpl pushl stos fwait popf sub outsb jp das push stos imul add enter or jl sbb mov in sub mov mov into dec fiadd sti jne rol clc jo sti push daa sbb mov repz int3 adcb test pusha fsubr in test fs mov dec xor lock sbb in popa lret push inc popa or mov dec rorb dec inc or rclb flds push inc mov pushf je cmp outsb cmp (bad) xchg (bad) add push das imul movsl pusha sub add in mull leave sbb mov xchg (bad) outsb mov (bad) sub in popa add mov aas xchg test jl ljmp or jle,pt test ss outsl jp insb into add mov outsl sub jbe xchg dec cmp cwtl lahf popf idivb out cmp sub mov repz jb gs lods inc xchg mov sbb popa fdivrs inc mov pop mov out cmpsb outsl imul pop push adc add pop adc mov xor or in push fildll and in sub cltd xchg sbb pop add push mov sub movl and mov inc je mov mov cwtl mov pushf mov push call jb adc inc dec (bad) in jnp jb (bad) lock cmp rolb jge pop out mov cwtl xor push imul sbb hlt mov cmp movsb imul test test and jle dec mull cli pop cs sub jns sub ljmp adc dec xchg xor cltd sahf inc or push lcall sub repz jns bound (bad) and add outsl dec roll adc push pop int3 daa mov (bad) hlt popa ljmp cld not in jl,pn mov ds std cltd jnp cli outsl call in or pop xchg and cld sbb mov cmp mov dec jb mov sbb cli or scas mov and fcompl or scas movsb cmp fwait jbe dec mov arpl out sbb dec clc and cld test mov jne jp test imul pop mov nop fisubrl cmpl mov add or scas pop stc aam jb inc push jbe pop mov adc xchg cmp xor les jecxz xlat popa lea jp push dec out out hlt rcrl daa (bad) je int3 not dec adcl mov adc pop insb dec stos dec lock das mov and mov pushf scas test xor sar add cmp fnstenv push lret add arpl sub pop jbe mov stos and (bad) lret sub push inc stc daa test sbb pop ss jle imul mov lcall jno push cmp notl iret movsl mov and aad mov out stos and decb cmp fidivl mov or es aas in xchg add adc leave mov jecxz stos push fiaddl sahf mov pusha daa dec test repnz ja mov xor and mov xchg cmp stc xchg cltd inc sbb js pop ja jl std sub sbb jecxz cli mov movsl imul ljmp jnp (bad) fucomip movb add ficom fnstsw les fbld lret cmp mov int3 (bad) mov xor ljmp inc outsl mov clc movsb mov (bad) (bad) sbb call lcall jnp hlt adc insl js mov xchg push outsb int loopne add inc pop movsb cmp in cli cmp inc cmp cmc pop sub cltd outsl push cmp sub leave dec sbb popf push dec ret scas jmp mov mov adc movsb pop mov jnp mov sub add jno out xchg pushf andnps idiv test inc pop cwtl jne dec imul mov movsb rep incl daa in adc adc pop hlt or dec mov neg sti or out mull std imul xchg cmp (bad) jno adc out outsb cmp pop jle push das fstpt pop and pop inc lods jbe dec add test xor pop fsub sub add es jle out mov dec cmpl fwait std mov ret xchg insb sbb pushf loopne cwtl mull repz and adc push mov (bad) pop push mov add arpl mov test push sbb loopne ret adc xchg dec xchg fsubrl push pusha push popa sub lods pop out sbb xor data16 repnz xor push add (bad) sub or in mov pop int xchg inc int int3 or insb cli test sar rorb fisubrl into sub mov stos xor xchg or ds fimul jp sub fsubrl mov mov movsb lret (bad) ror ja test add jb xchg imul push sarb add arpl bound pushf sbb xchg ffreep enter test test jb sbb in fnstsw adc push enter mov movsl and add jo lea into pop test fisubr sbb test jecxz push cld sub inc xor pop pop jp cmc dec push jno mov clc data16 push (bad) je push and xlat idivb jg pop push cmp xor adc jo adcl inc inc ja lret add lock out xor dec pop add mov sub xorb push das icebp mov iret jecxz in or mov jns cmp lods addr16 pop lret imul ja dec pusha jle das push aaa les dec mov add movsl rorb jecxz jne,pt jge (bad) fild cmpsl sti jnp lret mov jb pop std fiaddl cwtl shufps movsl mov enter sbb sahf jp sub insl sahf fwait push test aas fbld or cmp mov add mov sti mov jae movsl mov imul pushf int cmp adc cli jbe cmp les add dec sbb jge clc shrb lods lret cmp outsl arpl dec push mov add mull xchg xchg pop popa lret (bad) roll repnz fidiv loopne sub mov pop std pusha mov imul pop mov mov push mov push dec inc lret jg push sbb outsb pop mov mov lods xlat (bad) negl outsl ds cmc mov sti fadds mov lahf adc lcall fmul push add mov sahf fwait cli lds mov (bad) aaa imul lock xchg jno push lods loopne jbe pop pop jl xlat xor mov imull or inc jns push cmp loope push and out shrb (bad) test jp xor iret aas rolb test push pop mov mov jle sbb stos pushf adc dec test test lret jo cmpsb popa (bad) pop (bad) cs xchg lret sahf pop dec add push push lahf sbbb add movsb roll or ja xlat insl xor or jle outsl outsb mov add cmp int3 fcoml cmp push xor or mov dec adc cmp dec ret or lds adc test std lods lds jbe push inc mov stos push xchg add push dec (bad) sbb xchg ds jns lods icebp fiaddl popa popf sub mov repnz pop push fisttpl scas es fadds lcall andb cmp cmp or (bad) xor in dec andb popl mov add push jge fdivrs or (bad) mov in mov pushf and dec and adc jns xchg (bad) mov sub dec adc mov xchg shr inc clc cmp jbe lahf add adc cs adc fwait mov dec mov push in hlt pop lods (bad) sub aam mov add push in pop xchg int xchg in ret fwait add dec push popf inc mov in (bad) sub sbb sbb loop div inc xchg push mov jmp (bad) gs test fcmovnb jns (bad) cli lret or (bad) jae enter or loop jg mov pop xchg notb scas (bad) push stos aaa lods or adc cmp mov push std div insb loope lds data16 movsl push mov inc test mov jbe jle jo jp ret ds inc cltd das dec cmpsl xor inc cwtl dec sbb push scas adc gs sarl sub insb inc (bad) cmp mov mov rol push dec cld int inc pop jmp iret add test icebp mov mov lcall add add mov leave (bad) (bad) fimul fstpt int3 push push call leave push xor xchg mov fdivrs or or xchg push aaa xor stos inc mov lahf ret lock xor push (bad) hlt enter mov sbb data16 dec outsb dec pop pop popf adc pop scas xor lods inc fbstp jp push push fwait mov cmpsb lock lcall push test add sub sub out (bad) inc ror add insl cmp cmc and fbld rcr pop pop cmp insl and icebp repnz fs daa sub dec pop adc inc test bound pusha and jl movsl add mov adc jge inc js into adc add pop lock jbe das out dec js add push push repz inc adc cltd dec xchg push sub xor outsl push sbb es fistl xchg jb pop push or mov pop and dec mov daa int3 add (bad) iret sbb insb mov std pop jne sub adcl out add and jbe fiadd mov cmp jae adc xchg push sbbl mov and (bad) cli jnp movsl shrl fstpl les sub mov inc mov or popa xor xchg js lock fbstp pop jb clc rorb pop test mov adc cmp add and mov lock ret mov mov cmp lahf add aas add imul push jmp lods out xchg mov pop rorb enter gs negb ja test inc pop dec stos adc fcom jnp mov mov andl pop sbb stos xchg dec lods and cmpsl adc inc inc mov lcall xor push sbb xchg sar xchg hlt xchg mov inc out fadds fstpt add fs xchg xlat mov jnp add jl cmp and (bad) mov movsl es adc cltd jmp or cmc dec lret into jns inc pop or push cmp (bad) pushf in mov outsb int (bad) mov jnp pop dec std xor outsl dec loopne fwait insb rol aaa flds loop loope jae std test (bad) movsb sub lds in lret nop scas mov les and insb cmpsb mov mov fadds punpcklbw outsl pop dec add cmp into jg out jp ja out rcrb dec sub imul loopne or jae push pop cld xchg xor int or pop adc iret adc lcall mov cmp and mov scas and (bad) (bad) mov push xchg (bad) shlb rcll or inc inc mov cmp ret mov pop xor je pop pushf push rolb nop popa leave add pop cmp and or dec cmp mov xchg fs jae sbb and push fsubs mov dec jno (bad) clc and dec add xor push pop mov pop jg ret mov xchg sub fbstp xchg fstps pop pop xchg push xchg xchg scas addr16 lahf add std adc sub cmp insl pushf mov sub aaa lret sub call and sbb out push xor inc mov or sbbb pxor (bad) adc fidivr out outsb sarb xchg or adc push stos stos sub addl pop xchg ja pop inc jb or test push faddl jmp je pop push pop movsb jne mov sub xchg jge js lret cmp iret mov shlb ja push stos shll xchg lods rcl or push pop fsubrs fbld ljmp daa fucomp movsb add push outsb fcoms jmp aas mov mov push pop xor push outsl clc bound mov mov adc lock push dec mov mov pop push fdivrs pop jecxz add push mov aad xor push xor push ss dec mov aam cmp rcrb adc inc fcomps adc hlt mov out sbb ret and inc add insb cmpb ds push pop and test jmp adc aas pop das mov in pop sahf inc fistl adc sbb idivb imul adc notl xchg mov cmpsl push cmp shlb cmpsb xchg scas lods lock cmpl aas xorl popf mov daa jb jne xor cmp icebp mov data16 xchg mov je add inc push mov dec push dec sahf shrl fimul in sub pop in js ficomp mov (bad) mov bound xchg xor fistl cmp dec (bad) adc call sub das add call dec sarl xor (bad) icebp sbb dec fs mov out sti icebp xor lods dec mov pop pop pop xor sbb imul or ret das mov daa push mov mov iret js mov or bound arpl mov inc mov lret pop imul or lret mov jne in stc pop mov jae jne and negl adc int ficoml ficompl ret or test sbb xor mov mov and mov mov inc inc adc jecxz daa stos mov ja shl add jge or pushf fnstsw ret insl je sbbl call fwait dec fwait add in xor and mov sti mov movsb and es jb pop cmp enter test and and mov pop sbb leave imul jl mov sbb mov sbb adc xor xchg pop fwait cmp pushf mov sub jae fisttpl mov jl xchg xchg sbb jo stos or (bad) pop mov pushf cltd ret pop pop push nop xor outsb sbb or icebp pop sbb sbb dec dec ja mov and dec mov cmp mov dec xor push je lret or pop inc iret (bad) les add dec sub cwtl pop andl je cld (bad) xchg imul mov leave bound xchg in inc push rcll daa incb jecxz popl adc xchg gs out jnp mov cwtl ret mov dec rcll out loope mov dec or xchg jle jno jns andl mov push loopne gs sbb xchg dec sbb dec rcr shrb mov fildll aad inc fnsave frstor push into (bad) hlt dec loop xor push notb (bad) sbb pop (bad) cmp jo arpl mov fsubl inc cmpsl iret mov mov (bad) push mov mov pop dec sub xchg test aad insl xchg lock push imul sbb push sub repnz shlb aad loopne inc jno js pop fbstp add sub add rol out jp lret mov xor and outsl pop xor mov sbb mov push idivl cmp sbb push cmp push lods xchg scas fwait out outsl pop push test mov fist or mov sbb sub les mov or dec ret in popf int3 fildll sbb and inc rorb jg lds out sbb push inc data16 aam cmp jb xor pop leave scas cmp xor fisttp sub ds lods pop and (bad) jg jnp test out movsl cli ljmp and fwait (bad) jmp jae mov pop lret adc mov inc add cli jb cmp stos cs and or (bad) lea dec aas lret aad mov or insl xor mov push bound cli xor dec jg je decb and pop mov mov push enter push jo cs push and jmp (bad) jns sub add dec jno push insb test or xor or daa push jg loop push mov repnz dec or hlt push sbb sub imul pop fild mov jle out leave insl sub cmp cmpsb arpl (bad) fwait iret sub in xor mov sub xchg fwait cmp mov xchg sbb sub out jmp out outsl loope pop lahf mov dec lea fwait inc mov hlt flds xor push insb hlt std xchg lods lods cli mov mov jb xchg ret std jg and adc lret jg fsubrl xor jge mov rorb mov sub ret pop push push or pop push xor stos test inc aas or je pop inc outsb mov call sbb inc es jae inc dec lcall xchg ds (bad) mov ret lahf aad out cld jge das mov test xchg and jo or sub push xchg jb cpuid mov xorb stos rcll sbb iret sbb imul mov xor adc popa cmpsl rol jl sbb xor xchg adcb mov ljmp insb ja or pop dec test idivl fstpt jb mov dec dec mov dec sarl ljmp sub sub cld pusha jbe jbe jo gs jp rcl movsb xor cmp (bad) out pop rcr mov pop cwtl lds fwait mov shlb lret sub js pop outsl and push hlt call call movsl mov std pushl in dec mov ljmp mov (bad) stc jbe roll add cmp add sbb fnstsw jge insl or mov inc sbbl jo gs data16 dec stos sbb call pop push jle mov sahf pop (bad) leave iret enter xchg (bad) cmp aad leave jle in mov movups add jmp jmp sahf jns and sub rorl mov jecxz cmp sbb js andl mov mov shl mov inc ror push push mov call xor lds sbb xchg mov mov adc push bound stos les imul js outsb adc sbb dec mov ds mov ret cmp inc mov test jns cmp (bad) loopne jns vpsubb daa sub mov subl push test scas sti addr16 push popa out xchg repnz mov jp hlt sbb mov dec fsubrs mov stos scas scas sub or jmp add fs imul and rclb aaa jae hlt roll pmullw test cmp xlat push mov out sti or cld jae mov sbb pop in ficompl or cltd lret or xchg popa inc out loopne shrl pop pop mov inc pop push add test lahf int fisubl adc sbb pushf imul incb xchg push scas jno lret xchg mov jno jne movsl jecxz dec and cmpsb hlt jo pop fsts enter imul (bad) stc mov popf xchg add popa mov cs adc cs or xorl cli nop daa loopne imul pop in test int3 dec and fistpl pop aaa and mov (bad) ret push inc sahf pop push mov mov subl mov sti jno cmp pop jno icebp dec add push mov push mov cmp add sbb xor fisub add les sbb orb lock fsubrl mov insb in pop sub xchg popf repnz inc test pop and mov lods mov inc jae sbb xor mov stos pop shrb add adc pop cmc or mov in mov in sub xor (bad) mov jl sub ss sub mov fimul negb pop pop push sub cmp jnp cltd mov sti inc scas (bad) mov pop or and mov sbb sahf inc or mov dec dec push jge dec lcall pop cld cmp and adc addr16 dec mov sbb inc dec mov std movsl nop adc or push scas scas mov add jecxz ficomp movb inc jns test dec push or jp cltd cmp lret leave pop fnstcw into and push add or adc xor push or xchg in mov in mov push push jnp (bad) jae rcrb mov lret test mov stos repz rcll ret push or movsb fsubrl jmp popf repnz rcl mul out mov cli sub adc xchg aam shrb sbb push xchg imul mov or push and jle mov xchg sbb lcall pushf sub mov jnp jb mov cmpl xor test or xchg (bad) xor leavew sahf pop test inc out jmp jno pop cmp fstl es insb add xchg ds cmp movsb popf rclb (bad) mov mov lahf or cs add cmp adc (bad) loop sbb ljmp clc aad add mov nop sub or cltd cmp add push fstpl out fmuls pop repnz mov inc mov lret ljmp imul (bad) jge jo xchg mov lds lret xchg popfw (bad) jnp data16 hlt mov data16 les cmpsb arpl add rcr mov sbbl ljmp jns adc cli xchg test and sar orl push bound dec push cwtl or cmpsl lods pop xchg mov pop outsb dec cmp mov jp aaa or arpl (bad) (bad) sti xchg dec sbb push add jmp stos add mov jp test xchg out cli xlat pushf and loop push popa popf dec xchg xchg (bad) leave aam int push mov pop jmp dec loop adc cwtl add jl popa jge jnp popa xlat mov mov push and leave mov test sub dec xor scas jmp sahf mov bound movsl dec mov pop lods sbb (bad) sub or imull xchg aas in sbb inc loop and push daa lret lea cs es pop sbb addl cmpb and dec pushl xchg mov push jae lock mov ret (bad) xchg add cld imul lods scas jle jecxz inc jle jns dec and sub xor sub add mov out sub (bad) aad sub mov test mov adc xor sub dec xchg and out lods popf movsl pop xor mov push popa cmp popa sub stc ja fbld inc push std push sub or pusha or inc xlat mov and adc mov les lds mov aaa dec xlat cltd mov bound das add test shl xchg cli sti fnstsw nop and clc and (bad) pusha out mov and in xor rorb insb xchg test push nop xchg nop mov cli jl inc xchg lods lcall rorl mov and (bad) mov mov cmp xchg out cmp push int3 cmp int cwtl scas lods enter mov (bad) jg push stos and inc jo gs inc sbb adc cltd fwait sub add sbb sbb sbb das repz mov movsl jae and lret nop xor pop mov add out ss ja sub cmpsb dec test ljmp mov call sbb jns arpl jb std xor in xchg arpl loopne jnp aas fcoml adc (bad) cmp jg jno,pn adc (bad) and mov nop repz sti movsb stc pop xchg fldcw sub jae pop ja lds mov pop mov mov push sub mov enter scas clc sub aam in mov pushf or out or fdivp add (bad) sub (bad) cli lret cmp cwtl pop sbbb inc stos jle inc stos bound xor pop lods xchg mov cmp imul vpunpckhqdq and test aam mov das dec scas out dec push pop jno mov add dec inc push jb fnstcw inc sti or mov dec lahf jle xchg fdivs fs lods mov lret cli pop je push imul cwtl icebp xchg inc mov test cmpsb mov fldcw sbb out mov xor xor sbb fsubs pushl add xchg sub insl rorb movsl ja popa cmp pop mov icebp lea dec repnz nop jae imul pop inc mov (bad) repnz cmp rolb dec inc bound cmp xor sub fwait enter (bad) sbb push frstor jnp bound push mov or jg lea lods data16 xchg xchg cwtl lahf mov jb gs aad fs add xchg das pop out adc fwait add push push shrb mov xlat out xor lret fwait jl,pn cmpsb sbb and daa dec loopne jecxz rcll jl mov jle cwtl mov push clc clc push mov xor mov xchg sbb cltd mov mov cmp imul fadd call ja mov lds add or out out jb loope es aas cmpsl push icebp cmp fist mov lds rorb mov ljmp cmp mov leave inc inc lock dec nop push mov das inc sahf jno push xchg mov cld (bad) cltd leave clc call mov or mov adc pop (bad) dec xchg and pop pop xlat std pop push lock rcll ljmp leave mov lret adc lods add xchg push xor fistpl and adc inc cmp sub lea ficompl push lret mov mov insb pusha mov mov and cmpsb and aas mov imul popa mov icebp or dec (bad) imul test adc mov pop jno and dec les popf popa lock sub bnd and pop fisubrl pusha icebp aaa mov mov icebp and mov add cmp pop cs jge xchg inc fbstp xor xchg xorl (bad) xlat mov sub push mov (bad) lret mov inc push adc (bad) mov mov push jbe (bad) xor dec push sti leave fwait cmp push inc inc sub push popf mov mov data16 cmc nop adc and ljmp xor xor lods sub out pushf pop sahf das into data16 adc movsb and sbb cmp aad addr16 dec push shr loope int fidivl xchg cld inc or add pop and insb jns mov fimull xchg or or out cs add push mov jb adc mov lcall icebp aas xchg sarb jb pop pop aam mov adc mov lods jnp inc mov leave mov movsb lock adc mov cld cmp adc or nop fcoml in mov jp pop sbb lock (bad) fucomp and negb adc lock cli ffree mov iret scas andb out gs in sbb lcall cmp jp mov sarb xchg test jno repnz and pop scas push shl sbbb dec mov call shll sbb js adc imul cmp push push xor mov cmp mov xor lods fnsave sub adc pushf fwait sub inc sbb inc xchg push fsubr sbb cmp adc orl mov push add push sub sub lret mov xor les mov (bad) lds scas bound roll cwtl pushf ficoml into loop imul push scas add ljmp lahf nop hlt push pop aaa in mov and arpl scas add push sub insb or outsb sub cwtl xchg sbb xchg ljmp sahf or adc jmp aas sbb mov into or dec dec jg cmpsb into and mov cmpsl push into xorl andl mov test jle hlt xor pop lds jbe fistpl sbb add cltd pop push call jb fist pop or js jg lcall clc int3 mov repnz push aad les lcall inc jbe pop sub fnstcw push add test into inc popa jle sbb data16 in push daa sti sub rclb lahf xchg cmpsb mov adc aas (bad) and and xchg cmp dec sbb jnp fwait inc jle add mov mov mov and inc scas xor aad mov sbb xchg jmp negb xor push xlat andl pop sub inc xchg cmpsb popf push jnp fwait pop lcall mov xorl or mov repz xchg test test loop xor push push scas (bad) (bad) fcomps adc mov into dec or insl stos call test lea flds (bad) push dec mov push je les call adc push std or add pop dec cltd das and fs mov popf bound xchg in rclb add fdiv sarb cli mov or repz arpl int3 out sti out mov stos ss add mov ja push scas stos repz xchg xlat enter mov sbb addl lret rol in and mov push inc outsb pop push or mov decl cmpsl sti mov repz fcmovb loope andl cwtl push or sbb pop cli jno push lea mov cmpsb mov jmp (bad) ljmp xchg (bad) dec dec xor adc pop outsl push aam loop xchg in mov popa sub ds push adc adc lahf cmp adc xor lock movsl or out aad setg not mov cltd (bad) popa push rcr shrl xchg scas mov lcall cwtl cs xchg add lea jo loop ss adc inc outsl fldcw mov jno rol add dec or lahf adc sti push adc inc arpl cmp jp push dec fsts pusha imul hlt add (bad) push push ret addr16 out sub fs in out push out divb fisub mov dec xchg sub cld rcll mov nop cmpsl orl push sub clc sub shll cmpsb xchg in mov mov xchg clc jbe jmp fstpt enter mov xchg mov loope loop dec xor xor mov sbb (bad) in int3 test pop cmc jbe outsb adc or cmp mov add lea sub lret cli cmp adc push and inc imul sbbl mov dec push enter lods xor inc pop push aad push xor in mov je mov inc sahf sbb insb lret mov gs inc arpl add xor or addr16 cli popa adc cmp mov outsb mov xor mov (bad) in fstps out mov fdivs jl add push jecxz dec sub dec add lret jecxz addr16 xchg loope push inc xor stos mov outsb ljmp cmp jnp pop leave and and jp mov inc rolb pop fs nop add insl sub push ret add and fcos icebp (bad) xchg ret call or mov lcall add testb push bound lods (bad) data16 fiaddl jmp mov or jmp addr16 hlt adc xor inc out adc fucomp into mov in scas or push pop mov mov xchg xchg adc and les cmpsl mov mov ret mov test mov lea xchg orl jne enter jl sbb loopne sub push lods (bad) and mov jae pop clc imul enter popf add pop pop into sub mov sbb add addr16 gs cmc add (bad) stos push inc in fcoml sub ja or inc sub adc dec push mov in das jnp sub (bad) adc xchg xor jns (bad) testb outsb mov popa xor lds dec xchg les std repz fdivs pusha xchg lcall jmp pop test pop (bad) mov mov lock js jbe adc jnp add jle push push jmp in push pop mov out lret inc outsb mov inc lret aam nop jns ds jmp xchg push pop (bad) mov dec pop mov hlt adc hlt adcb fcmove jmp fcmovnb outsb call push call or movsl fdivrs or ja jmp add pop mov add push pop jecxz xchg adc mov mov repnz (bad) in pop ss and flds sti jge xor (bad) mov jb xor (bad) sub fwait outsb pop cmp xor jge shl mov mov xchg pop or (bad) mov inc es adc and cld iret jbe ret es ljmp or jae mov xor inc mov dec scas mov cmp add mov pop and add clc movsl sub mov jno das mov jnp dec sbb jno mov xor es pop mov stos out sub mov insl mov push fnop xchg xchg pop mov sub jo icebp mov pop fs xor (bad) fldenv lahf insl inc xchg adc test lods rclb insb (bad) rcll inc repz sbb test js jge cmp outsl xchg mov hlt stos cwtl adc jmp or dec int3 jno add sbb lret std test aaa gs dec dec into mov or leave inc mov mov push push mov inc cwtl bound pushf fcmovne or dec add int adc ds (bad) adc dec aad mov mov inc inc mov and jbe adc ss jb ret mov mov loop mov cmp or movnti repnz push es orl fsts lods jl sbb sub and (bad) arpl cmpsb sub add sub (bad) lahf xor mov movsb mov cmp loope pop cmc inc popa xchg cltd (bad) cmp cmpsb and cmp sub jge scas ds fldl cmp pop test jbe sbb adc ds in dec fistpll test push mov outsb testb pushf jmp add addr16 lock adc (bad) js sub push gs lea rorl adc mov incl repz inc sub cli xchg hlt insl out and outsl or pop leave mov ss and sbb in cmovp popl les aad cmp jne pusha cmpsl jnp adc ljmp add aas and and iret sub adc mov iret sbb ja sbb rcrb xlat addr16 push fstpl shl out inc inc xchg aas fcmovb incb dec or add iret fadd in sbb push fadds inc cwtl sbb xchg mov lcall pusha jbe mov lcall stc mov outsl jg bound mov cld rcll aad mov sbb pop cwtl loope add in dec or or mov je dec push fbstp es loope out mov subb ds lahf les test sbb jae fs jnp fld dec stos lea iret bound and insl mov int3 jo jge cmc pop sahf and mov fadds jl (bad) fidivr mov mov sub xchg mov ret dec and (bad) test inc test lock ss xchg (bad) popa out jmp mov cmp xchg (bad) ljmp in pop sbb mov and pop sub cwtl sub pop sbb fcoml push jbe in lret adc push aaa mov lahf jns in pop jo xor xor shlb push xchg sub out cmpsb jle (bad) pop add daa add mov mov add pop stc iret (bad) mov stos jb mov int (bad) loop sbbb push jl mov mov std cli sarb sbb adc je je dec sahf sub sub and insb add push inc cmp mov jp dec fmuls mov mov and punpckhdq scas xchg (bad) lock sub in mov iret mov sbb iret adc push les insb pop aam mov adc scas and int cmp jno and pop adc daa sub stos (bad) cltd movsl (bad) xor jg jge cmp mov cmp inc pusha cmp push fnsave cmc jg mov cwtl call dec xlat int3 (bad) cld lret push jge scas mov adc iret mov lock jb dec mov addr16 xor inc out rcrb jne lahf sbb rcll ret cltd jae in adc repz add cmp mov mov fsubs sahf xor ficompl int3 out jge nop std mov call push fs fs sbb cmc (bad) sti or adc bnd mov cs adc sbb cmp mov std jp mov movb or popf pushaw (bad) enter or xor js push push pop adc ffreep or mov jb lcall mov inc xchg or push mov and test ss in mov cmpsb outsl xchg lods xchg movsl in jl cmp aas subl adc incb stos cmc stos ret call mov mov stos mov daa pop pop and leave pop mov xchg xchg xor mov pop mov pop int xchg or xchg mov mov gs js es or rol add cmpsl mov push cmp call jbe mov lods add xchg pop (bad) add cli or fs jmp (bad) xor clc push arpl pop data16 ss inc or lcall xchg (bad) dec sbb lcall in fdivrp sbb mov and repz test outsb push sti inc cmpb js add xchg arpl add inc test loopne decb in gs jbe repz ret popf pop addr16 (bad) imul pushf in repnz pusha fs mov jmp (bad) mov mov or int nop into lahf aad xchg ja outsb pop test pop call or xchg popa cmp (bad) movsb lcall push pop flds pusha push in pop cld push jbe les xor jp (bad) std mov fbstp adc xor lret lods addb stos jmp int3 call cmp je cs imul fwait popa out jns insb push mov xor add cli aam push jmp cmpsb sub dec xlat xor shrl (bad) das (bad) xchg fwait sbb pop das lret mov lret nop inc cmp or stc sub and pop clc test stos add pusha inc push call sbb fs cltd add mov mov and fcmovu test bound sbb movsl das jle inc sbb aad mov dec pop xorl xchg jge push adc lds jae je lods add jle mov es add xor jecxz push aam inc out mov cld mov bound jp iret push cmp pop pop (bad) xor ds das mov aas aaa aas pop and dec jns shrb cmpsb dec imul mov xor out adc in inc inc aad and clc std int3 sbb dec hlt outsl add nop mov and fwait mov pop mov xchg sbb into sub ljmp neg push xchg outsl cmp (bad) or jns cmpsl lea mov das pushf xchg lcall pop dec mov in mov out pusha iret jle dec mov dec cwtl dec pop test inc cmc xor sub sbb lods push cmpsb mov leave dec jle imul xchg mov pusha mov lock pop hlt out pop jns mov cwtl push adc xchg jnp jp jge jb xor add xor add xchg imul lcall mov aaa xor and cmp jl inc ja stos dec dec in jo ficom mov xor shll rcll je xchg cmp dec test xchg (bad) dec xchg (bad) mov sbb lea aad mov pop iret popf fisub lock popf xchg xchg dec add pop scas cmp inc inc dec rep mov jb and push and lret mov add adc and imul or mov rcrb nop cmp les jle or sub in xor pop push or fildl jno fidivl lcall adcl mov dec add jg imul sbb test (bad) push int mov lods pop pop push jp cwtl and or lods std inc or (bad) rorb or outsl push fs popf movsl aas sbb (bad) mov mov push test xor inc pop (bad) adc cld dec and push cmp pop inc imull mov cmp sub pop add stc jne imul ljmp rcrb xorb pop js sti mul xchg test gs sub aad mov inc or jns mov pop inc andl mov jns aas (bad) jne push dec inc std int sub rorl inc xchg xchg cmp sub dec andl (bad) (bad) loop cltd xchg adc pop jg jnp add jae fidivrl pop out sub or adcl sub xor jae (bad) cmpsl fwait hlt popa push fnstcw xor cmpsb mov cltd xor jne mov push xchg adc pop cmpsl leave xchg (bad) jp loopne scas icebp clc pop jg mov mov iret jb fdivs pusha lods in inc jno inc aaa dec sbb sub push aad mov movsl fsubs inc cmpsl (bad) xchg xchg inc fild jl xchg xchg xlat test fs ss mov xchg in adc push pop cmp (bad) into jmp jb cld mov imul inc mov repnz lock mov test insb pop ret and mov subb jecxz movsl shr test jle adc ret adc lret push dec or loop sbb jbe pop outsb dec push inc sub dec sbb lahf rolb mov jae xchg add outsb movsl mov insb shll lret push pop pop (bad) jecxz push ss cmp pop sbb rcrl (bad) adc jns adc stc add jmp mov sbb scas jmp jbe lds inc push add push xlat jo mov stos fidivr iret sbb cli inc cmp imulb gs inc xchg pop lcall push test pop sti adc test loopne jl jmp leave aad jecxz ss mov adc xlat loop cmp mov jg and or push push inc dec lea push sub push (bad) push pop movsb scas popf jmp das mov pop aad xor or dec scas jl pop scas mov les cmp scas test jp leave mov in add test lds or popf add mov out sti in mov cmpsb jo cs cmpsl xchg div mov in push adc add mov mov hlt adc mov dec int3 or push adc mov dec ret xor and xchg inc or add adc mulb outsl fcmovnbe jmp (bad) mov insb in cwtl and stc cmp sbb in pop inc mov or push test test add lcall stc adc jne js aaa sti mov jno into pop sub ror insb jle stc or mov (bad) mov pushf addr16 in xor adc sub cmc jle jne xchg mov cmc push outsb push xor pop enter mov mov or adc cmpsb stos pop cmp repnz arpl sub ja stc cmc into dec xorl adc call xor xchg js lock sti outsl jno pop nop adc cld cmp jns lods mov insl dec dec je sub mov ds adc fs xchg xchg aas sti lahf rorl xchg inc das call sbb mov push addr16 mov cmp sbb cmp pop mov (bad) test xlat das push movsl int3 xchg ret adc add sub cmp jns push fcomps cmp (bad) push sbb mov xchg push push xor add es fnclex jno imulb adc and and aaa imul or imul cli sub ljmp mov (bad) push pushf push mov sti fwait jno jge push repnz call dec dec jb into repnz and nop push ljmp fidivrl add dec (bad) and inc xor dec in mov add pop jl,pt dec ror imul cmp repz das nop pop and icebp popa jo inc xchg dec jno xchg lods call imul mov insl jmp push test jge cmc mov push rcl fnsaves dec outsb xor sub inc sub sbb fldt insb pop out sbb popa dec mov push ja les (bad) mov jecxz shlb add mov sbb clc cmp xorb fcmovbe aam aam (bad) mov pop xor pop cmp loop mov pop hlt ljmp xor fldt xor pusha lret stc xchg dec pop xchg cmpsb push sub divl in push sarb mov fiadd and inc mov into gs std (bad) and sbb (bad) jb cmc xlat jmp aaa mov out out das pop cmp incl in sub imul je sub dec clc push sbb loop pop and adc xchg and mov adc stos gs setge test mov add jecxz (bad) aad gs iret and mull mov dec icebp dec xlat mov sahf (bad) in xchg cmpsb insl sbb jle inc sub sub and mov popa clc push cmpsl mov push inc mov mov aam pop cmc add daa mov pop add add cmp xchg int addr16 or test mov xchg adc inc call inc (bad) sub sbb jmp cmc or xchg les dec mov push mov sub out rorb dec adc mov out mov mov push xor stos pushf mov hlt negb push cmc xchg push mov and clc stos imul inc scas cmp loope dec and aam xor sbb push loop test mov dec or mov rcrb (bad) lahf push aam xchg add or cmp xchg das loopne neg xchg imul lret push inc push pop fld mov (bad) lret dec mov daa outsb sub repnz dec push mov mov or xchg sub scas pop repz and mov add in and out xchg push or cmp aaa mov xlat mov xchg (bad) stos enter inc repz rorb in jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc repnz sub jle lcall jl cwtl es rcrb jp xchg and inc into pop ljmp int3 pop call scas cmp pop out add push in add push loop decb loopne cld mov cmpsb xor push fisubr push movsb xor dec fsubrl xchg xor test mov data16 (bad) adc call (bad) xor decl dec in gs decl inc cld add add call lea mov call mov mov push call mov push call mov mov mov pop pop pop pop mov pop ret int3 int3 push mov mov mov mov cmp je push test je mov mov mov mov mov mov add add cmp jne pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov cmp jbe push call mov sub mov imul sar mov shr add cmp jae lea push mov call mov mov mov push push push push push push mov movl call mov mov sub mov imul sar mov shr add add test je push call add mov lea mov lea lea mov lea mov mov mov mov pop pop pop pop mov pop ret mov push call add push push call int3 push mov mov push push mov sub mov imul mov sar mov shr add mov sub cmp jae push call mov add sub mov imul sar mov shr add cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub mov imul sar mov shr add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push mov push mov mov cmp jae mov cmp ja sub mov imul sar mov shr add cmp jne push mov call mov lea lea mov test je mov mov mov mov mov mov addl pop pop pop ret cmp jne push mov call mov test je mov mov mov mov mov mov addl pop pop pop ret int3 push mov push push mov push push push push mov xor push lea mov mov mov movl lea movl call mov xor cmp je push call add mov mov mov mov mov cmp je push call add testb movl je push call add mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov cmp je push lea movzbl movzwl mov mov mov movzbl lea push mov mov mov call add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov mov mov mov movl movl mov test je push call add movl movl movl mov push lea movb call mov push mov movb call mov movl test je push call add mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl je push call mov mov push call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov cmpl je push call xor pop mov pop ret mov xor mov mov mov mov mov mov mov mov lea push movl mov mov movl call mov cmp jne movl xor pop mov pop ret mov pop mov pop ret int3 int3 int3 int3 push mov cmpl je push call mov mov push push call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov mov push call movl ret int3 int3 int3 push mov mov mov cmpb jne nop mov mov cmpb je pop ret int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov push mov cmpb push mov jne mov push lea call test je mov jmp mov mov cmpb je mov cmp je mov add push call test jne lea mov mov pop pop mov pop mov pop ret mov lea pop mov mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov push push push cmp jb mov lea call push call add push call mov inc mov mov mov mov xor cmp jne mov mov mov mov jmp cmp je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov cmp jne mov mov cmp jne mov cmp jne movb movb mov mov mov mov mov jmp cmp jne mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov movb mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov mov jmp mov cmp jne mov mov jmp mov mov jmp mov cmp jne movb movb mov mov mov mov mov jmp cmp jne mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov movb mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov cmp je mov mov mov mov pop pop movb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov cmpb push push mov je push call lea mov call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp push call mov add mov mov mov mov cmp jne cmpb je mov mov jmp push call mov add mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov mov cmp jne mov mov cmp je jmp lea cmp jne mov cmp jne mov cmpb jne mov push movb call mov mov cmpb jne mov cmp jne mov cmp je mov cmp jne mov mov push movb call mov mov mov mov mov mov push mov call jmp cmpb jne mov push movb call mov mov cmpb jne mov cmp jne mov cmp jne movb mov mov mov cmp jne jmp mov cmp jne mov mov push movb call mov mov mov mov mov mov push mov call mov mov add call mov push call mov mov add pop pop pop test je dec mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov cmpb mov mov jne mov push mov call mov lea call push call add cmpb mov je pop pop pop pop ret push mov sub mov push mov push mov push mov add cmpb mov mov mov jne cmpb mov je push lea call test sete jmp lea push mov call mov test je mov jmp mov cmpb je mov mov mov test je mov cmp jne mov push push push lea push call mov mov pop pop mov movb pop mov pop ret lea call mov push lea call test je mov mov push push push lea push mov call mov mov pop pop mov movb pop mov pop ret mov call mov push call mov add pop mov pop movb pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov push call mov xor add mov cmp je mov mov mov mov mov lea mov mov mov mov mov movb cmp je mov push mov call mov mov mov mov mov pop pop pop pop mov pop ret mov push call add xor push push call lea push lea mov call push lea push movl call int3 int3 int3 int3 push mov push push mov xor push add push push movl mov mov mov mov call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov push mov cmpb mov jne mov push mov call mov lea call push call add cmpb mov je mov mov mov mov mov pop mov pop movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov cmpl mov push mov lea jne push mov push push push call mov pop pop pop mov pop ret mov cmp jne add push mov call test je mov push mov push push push mov call mov pop pop pop mov pop ret cmp jne mov add push call test je mov mov push mov push push push mov call mov pop pop pop mov pop ret add push mov call test je mov mov lea call mov push add call test je mov mov cmpb push mov mov je push push push call mov pop pop pop mov pop ret mov push push push call mov pop pop pop mov pop ret mov push add call test je mov mov lea call mov cmp je add push mov call test je mov mov mov cmpb push mov je push push push mov call mov pop pop pop mov pop ret push push push mov call mov pop pop pop mov pop ret push push lea push mov call mov mov pop pop mov pop mov pop ret int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov push call add mov xor mov cmp je push mov call mov jmp xor push lea movl call push push lea movl movl mov mov call cmpl mov movb jae lea push push lea push call add push lea movb call mov cmp jb mov push call add xor cmpl movl mov mov movb jb mov push call add movl mov mov call mov mov mov mov cmp jae lea mov push push push push call add cmp jne mov mov mov call lea movl call mov jmp cmp je mov mov push mov call lea movl call xor mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov mov cmp jne cmp jne mov call mov mov mov mov pop mov pop ret cmp je cmpb mov jne mov cmpb jne mov mov cmpb jne nop mov mov cmpb je mov jmp mov cmpb jne cmp jne mov mov mov cmpb je mov push lea push mov call mov cmp jne mov mov pop mov pop ret int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov cmpb mov jne mov push lea call test je mov jmp mov mov cmpb je cmp je lea push mov call test je mov push lea call xor mov mov lea push mov call push push lea push mov call mov lea movl call lea mov mov pop pop pop pop mov pop ret lea mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov mov movl push mov movl call add test je mov mov mov mov mov mov mov movb mov movb push movl call test je cmp je push push lea call push lea push call mov mov mov pop pop mov xor call mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov movl call lea mov mov mov push push lea push mov movl call mov push call add testb je push call add mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov test jne push call add mov movl test je mov call mov mov mov pop mov pop ret xor mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov mov mov mov push push lea push mov movl call mov push call add mov mov pop pop mov pop ret push mov push push mov push sub mov xor mov push push push push lea mov mov xor push mov mov call add cmp je mov mov mov mov mov mov mov movb mov movb mov mov mov cmp je mov mov mov lea push mov call push lea movb call lea mov movb call mov cmp jne mov mov mov cmp je mov mov push push push push push call mov add cmpb je lea push mov call lea push lea movb call lea push lea push lea movb call mov mov push push push push push call lea add mov mov mov lea push push push mov mov call mov mov sub cmp jb inc mov mov mov mov mov call lea movb call cmpl movb jb mov push call add mov mov mov mov cmp jne mov mov push push lea push lea movl call mov push call add mov mov pop pop pop pop mov xor call mov pop ret push call lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov mov call lea push mov call xor lea mov call cmpb movb lea lea jne mov push push push call add movb jmp mov push push push call add movb push push push lea call lea movb call lea push lea call xor movl mov mov push movb mov call add cmp je mov mov mov mov push lea push lea movb call push push push lea movb call mov movb cmp jb mov push call add jmp lea lea call test jne cmp je mov cmp jae lea cmpw je lea push lea movb call lea push lea movb call mov mov mov movb cmp jae lea push push lea call mov cmp jne push call jmp cmp je push call jmp lea push push call cmp jne mov mov lea push call mov cmp je push push push push push call mov add cmp je cmpb jne lea push mov call mov lea push push push lea call mov sub cmp jae push call incl mov mov mov push lea call mov mov lea push mov movb call lea push mov movb call cmp lea sete movb call lea movb call test je mov lea push call push push push push push mov call mov add cmp je cmpb jne mov lea push call mov mov lea push push push lea call mov sub cmp jae push call incl mov mov mov push lea call lea lea push movb call lea movb call mov mov push mov call mov lea push call mov call mov mov mov mov cmp je push push call mov cmp je push call cmp je call mov push push mov call push call lea movb call movl jmp movl mov ret mov xor mov lea push lea call push push push lea movb call movb cmp jb mov push jmp cmp je lea push mov call mov mov mov mov cmp je mov push call add mov cmp jne mov push call add cmp jb mov push call add xor lea movl mov mov movb call lea movb call lea movl call mov mov pop pop pop pop mov xor call mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov call movl mov mov pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub push lea test jne push push push push call mov test jne lea call push lea push call mov xor lock mov test je push call mov pop mov pop ret mov pop mov pop ret int3 int3 int3 int3 int3 int3 xor add xchg test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov add push mov movl call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movzwl add lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movzwl add lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov push push push push call mov call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call pop ret int3 int3 push mov cmpl jne cmpl jne mov pop ret xor pop ret int3 int3 int3 push mov mov mov cmpb jne nop mov mov cmpb je pop ret int3 int3 int3 push mov push push mov push movzwl mov mov sub mov imul sar mov shr add mov movzwl sub mov add movzwl lea lea movzwl imul add mov imul sar mov shr add mov imul sar add mov mov imul sar shr add mov shr add movzwl sub mov imul add add pop shr pop lea pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movzwl mov and jns dec or inc jne mov push cltd mov idiv pop test jne mov cltd mov idiv test jne mov pop ret xor pop ret mov mov cmpb je mov mov ret mov cmpb jne mov cmpb jne mov mov cmpb je mov ret mov cmpb jne mov cmp jne mov mov cmpb je mov cmpb jne mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call test je lea pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov call movl mov mov pop movl mov pop pop ret int3 int3 int3 int3 int3 cmpb je mov mov mov lock test jne cmp jle mov lock jb call push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp ja jmp mov movl movl pop ret mov movl movl pop ret mov movl movl pop ret mov movl movl pop ret mov movl movl pop ret push add and add xor add pop in add inc in add push mov mov push mov push push mov test js cmpl jl cmpl jl test jl jg test jb cltd mov mov shld shl sub mov sbb shld cltd add add add adc mov mov shld shl sub sbb shld add mov mov lea cltd push add push adc push push call add pop pop adc pop pop ret cltd xor sub cltd mov mov shld shl sub mov sbb cltd xor sub shld cltd add add add adc mov mov shld shl sub sbb shld mov mov add lea cltd xor sub cltd push add push adc push push call mov mov mov cltd xor xor sub sbb mov mov neg adc neg sub pop sbb pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov cmpb jne mov mov mov mov pop cmp jne mov mov mov pop ret mov cmp jne mov mov mov pop ret mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push push mov push mov test jne cmp je cmp jne cmp je cmp jne cmp je mov mov test jne cmp je cmp jne cmp je cmp jne cmp jne cmp jne cmp je mov mov cmp jne cmp je cmp jne cmp jne cmp jne cmp je test jne cmp jne test jne cmp jne mov pop pop movl movl pop mov pop ret cmp jne cmp jne mov mov pop mov pop mov mov pop mov pop ret cmp jne cmp jne mov pop pop movl movl pop mov pop ret push push call add test je mov pop pop movl movl pop mov pop ret mov mov sub pop sbb mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov test jne cmp je cmp jne cmp je cmp jne cmp je mov test je cmp je cmp jne cmp jne cmp je mov cmp je cmp jne cmp jne test je test jne cmp jne cmp jne mov pop movl movl pop pop ret cmp jne cmp jne mov mov mov pop mov mov pop pop ret cmp jne mov pop mov movl pop pop ret test jne mov pop mov movl pop pop ret xor add mov adc pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je call push call add pop pop ret int3 push mov push mov mov mov push mov call push push call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push push mov lea push mov cmp jge lea mov cmp jae dec mov mov mov lea cmp jl jne mov mov lea lea cltd sub sar cmp jge mov jmp lea movzwl cmp jae mov mov dec cltd sub sar cmp jl mov pop mov pop pop pop ret mov mov pop mov pop pop pop ret mov pop mov pop pop pop ret push mov push push mov push push push push push mov xor push lea mov mov mov push movl movl call add test je mov mov mov mov movl mov jmp xor mov mov mov mov pop pop pop pop mov pop ret mov test je mov mov push call push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push mov mov mov mov mov cmp jne pop xor pop pop ret cmp jbe push call push lea call lea sub lea mov mov pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push mov mov mov mov mov cmp jne pop xor pop pop ret cmp jbe push call push lea call mov mov lea mov pop mov pop pop ret int3 push mov mov sub push mov movl movl mov mov push test je cmp je cmp je mov mov test jne cmp je cmp jne cmp je cmp jne cmp je push mov push push push push mov call add adc pop mov pop mov mov pop mov pop ret mov mov mov mov lea push lea push lea mov call mov mov mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push call push call test jne push lea push lea movl call push lea push movl call movl mov pop ret push mov mov mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 push mov push mov mov push cmp jb mov mov mov cmp jb mov sub cmp jae mov or sub cmp ja push call test je push lea mov cmp jbe push call mov cmp jae push push mov call test je mov cmp jb mov jmp test jne mov cmp jb mov mov pop pop mov pop pop ret pop mov pop movb pop pop ret mov cmp jb mov jmp mov mov sub mov push add add push add push call mov add cmp jne mov lea cmp jb mov mov cmp jb mov jmp mov cmp jb mov push add push add push call jmp push add mov push add push call jmp mov cmp jb mov jmp mov cmp jb mov jmp mov add push push add push call mov add cmpl mov jb mov pop movb pop mov pop pop ret mov movb pop pop mov pop pop ret push call int3 int3 int3 int3 int3 push mov push push mov push push push push push mov xor push lea mov mov mov push movl movl call add test je mov mov mov mov movl mov jmp xor mov mov mov mov pop pop pop pop mov pop ret mov push lea call push push call int3 int3 push mov push mov push mov sub sar mov cltd sub push mov sar mov test jle push lea jmp jmp lea mov movzwl sub dec mov mov mov cmp jge jmp lea mov cmp jae dec mov mov mov lea cmp jl jne mov mov lea lea cltd sub sar cmp jge jmp lea movzwl cmp jae mov mov dec cltd sub sar cmp jl mov mov mov test jg pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov cmp je push lea cmp je mov sub push mov jmp mov movzwl mov cmp jae lea sar add push mov sub add push push call add mov jmp movzwl lea cmp jae lea mov movzwl mov sub cmp jb mov add cmp jne pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov movzwl movzwl push lea push mov call mov call mov push push mov mov movl call cmpl mov jb mov push call add mov mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov movzwl movzwl push lea push mov call mov call mov push push mov mov movl call cmpl mov jb mov push call add mov mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmpb push mov jne push movzwl cmp jae mov jmp mov mov cmpb je pop mov mov cmp je mov cmp jb lea mov mov mov pop mov pop ret mov lea mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov sub push mov test jne cmp je cmp jne cmp je cmp jne cmp je mov mov test jne cmp je cmp jne cmp je cmp jne cmp je mov mov mov mov sub sbb push push push push push call mov add mov mov mov pop mov pop ret mov mov mov mov mov mov mov lea push lea push lea mov call mov mov cmp jne cmp jne mov xor push push call add mov pop mov pop ret test jne cmp jne mov mov push push call add mov pop mov pop ret cmp jne cmp lea je mov mov push push call add mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push movzwl push mov mov sub sar cmp jle inc cltd and add sar lea add movzwl mov cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov mov movzwl mov sub push movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov mov mov sub sub movzwl mov movzwl cmp jae mov mov mov mov movzwl movzwl cmp jae mov mov mov mov mov mov movzwl movzwl cmp jae mov mov mov movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl movzwl pop cmp jae mov pop mov pop mov pop ret mov movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov lea push lea push lea call mov cmp je mov pop mov xor call mov pop ret lea push lea push lea call mov cmp je mov xor xor pop call mov pop ret push lea call push lea push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov mov sub sar push mov jne mov mov cmp je mov sub sar lea push push push call add add mov pop pop mov pop pop ret mov mov sub sar cmp ja sub sar add push push push call mov sub mov add sar pop lea pop mov mov pop pop ret mov sub sar cmp ja lea mov sub sar add push push mov push call mov mov sub sar lea push push push call add add pop mov pop mov pop pop ret mov test je push call add mov sub mov sar push call test je mov mov mov sub sar add push push push call add add mov pop pop mov pop pop ret int3 int3 int3 push mov push mov mov cmpb push mov jne push movzwl cmp jae mov jmp mov mov cmpb je pop mov mov cmp je mov cmp jb lea mov mov mov pop mov pop ret mov lea mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub push push push mov mov sub sar cltd sub sar add push lea push push call add mov lea cmp jae movzwl movzwl cmp ja jb add cmp jb mov cmp jae movzwl movzwl cmp ja jb add cmp jb mov mov cmp jae lea movzwl movzwl cmp ja jb mov add mov movzwl mov mov mov add cmp jb cmp jbe mov movzwl movzwl cmp ja jb movzwl mov sub mov mov add cmp jb cmp jne cmp je cmp je movzwl mov mov mov mov movzwl mov mov mov mov mov mov mov add add add mov jmp sub cmp jne sub cmp je movzwl mov mov mov movzwl mov sub mov mov jmp movzwl mov mov mov add jmp mov pop pop mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov sub mov and cmp jle push jmp lea movzwl mov lea mov mov lea push mov sar push push push call mov mov and add cmp jg pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movzwl add lea push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov mov mov cmp je mov cmp je add cmp jne push push lea call push lea push call lea push lea push lea call mov cmp jne push push lea call push lea push call mov mov xor pop call mov pop ret int3 push mov push mov push mov cmp je mov mov mov sub sar push mov mov test jne mov cmp je mov sub sar lea push push push call add add pop mov mov pop pop pop ret mov sub sar cmp ja sub sar add add push push push call mov sub mov add sar lea pop mov mov pop pop pop ret mov sub sar cmp ja lea mov sub sar add add push push mov push call mov mov sub sar lea push push push call add add mov pop mov pop pop pop ret mov test je push call add mov sub mov sar push call test je mov mov mov push push push mov call mov pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp je push push push mov lea xor lea cmp je cmpl jb mov push call add movl mov mov cmpl jae mov inc push lea push push call add jmp mov mov mov mov mov mov mov mov mov add lea add cmp jne mov pop pop pop pop ret mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov push mov push lea movl movl movb call cmpl movl jb mov mov jmp lea mov lea push mov call cmpl movl jb mov push call add mov movl mov mov pop pop mov xor call mov pop ret int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov push mov push lea movl movl movb call cmpl movl jb mov mov jmp lea mov lea push mov call cmpl movl jb mov push call add mov movl mov mov pop pop mov xor call mov pop ret int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov push mov push lea movl movl movb call cmpl movl jb mov mov jmp lea mov lea push mov call cmpl movl jb mov push call add mov movl mov mov pop pop mov xor call mov pop ret int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov mov lea push mov mov mov call mov movzwl add add cmp ja movzbl jmp mov push call xor add test setne lea jmp mov jmp mov cmp jae push xor push lea movl mov mov call cmpl mov jb mov mov jmp lea mov lea push lea call push lea push movl call mov mov mov pop pop pop pop mov xor call mov pop ret in add adc add add add add add add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov mov push mov push lea push call mov push movl call mov test je push call add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov push xor push lea movl mov mov call lea push push mov call mov call cmp sete cmpl jb mov push call add mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov push call mov call mov mov mov movzwl mov push mov call push lea call movl cmp jne mov mov mov push mov call push lea call mov mov mov cmp je cmp je add cmp jne test jne push jmp test je push call add mov mov mov pop pop pop pop mov pop ret cmp jne push mov mov mov call push lea call mov mov mov cmp je mov cmp je add cmp jne test je push call add xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov push call mov call mov movzwl mov push mov call push lea call mov mov mov push mov movl call push lea call mov mov mov cmp je lea cmp je add cmp jne mov cmp je jmp lea nop mov cmp je add cmp jne movl test je push call add push push call mov call mov test je mov push push push push mov call test jne call mov call mov test je mov push push push push mov call test jne call mov call mov mov pop pop pop pop mov pop ret test je push call add mov mov mov pop pop pop pop mov pop ret mov mov mov pop pop pop pop mov pop ret int3 int3 push mov push push mov push sub mov xor mov push push push lea mov movzwl push lea push mov call mov call push movl call mov call mov movzwl mov push mov call push lea call mov mov mov cmp je cmp je add cmp jne mov cmp je lea mov cmp je add cmp jne test je push call add cmpl movl jb mov push call add push push lea call push lea push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov cmp je push mov push lea mov mov lea push push push mov call mov mov sub cmp jb mov inc mov mov mov mov mov cmp jne pop pop pop mov pop ret push call int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 push mov push mov mov mov push mov push mov sub movl cmp jbe mov sub cmp jb push push push push call jmp push push push mov call mov movl movl push mov movb call pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov cmp je push push push mov call add add cmp jne mov pop pop pop pop ret push mov sub push mov push push mov mov sub sar cmp jle mov lea test jle push lea push push call mov cltd sub sar mov cltd sub mov sar add mov mov sub sub add and and push cmp jge mov push push call mov jmp push push call mov mov sub sar add cmp jg cmp jle push push push call add pop pop pop mov pop ret cmp jle mov sub and cmp jle push push push push call add push push call add pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov cmp je push push mov mov lea mov mov cmp jae mov cmp ja mov sub sar cmp jne sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push call mov mov test je mov mov mov mov mov jmp mov cmp jne mov sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push call mov mov test je mov mov addl add mov cmp jne pop pop mov mov mov pop mov pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov xor mov mov lea cmp je mov movb cmp je push push movl mov push mov mov call add mov mov add jmp mov mov cmp je mov push push call add add cmp jne xor push push call mov mov mov pop pop pop pop mov pop ret push mov push push mov push sub mov xor mov push push push push lea mov mov movzwl mov xor mov mov mov mov mov mov mov mov mov mov mov mov movl cmp je cmp je add cmp jne push push lea call push lea push call mov mov cmp jne mov mov mov pop pop pop pop mov xor call mov pop ret lea mov mov movzwl mov push push mov mov call mov mov lea mov cmp jae mov cmp ja mov mov sub sar cmp jne sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push mov call mov mov mov lea test je mov mov jmp mov cmp jne mov sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push mov call mov mov test je mov mov mov addl add mov cmp jne jmp push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push push call mov mov cmp je mov mov push push lea push mov call push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov push call mov xor add mov cmp je mov mov mov mov mov mov lea mov mov mov mov movb cmp je mov mov mov mov lea push mov mov call push push push call add mov mov mov pop pop pop pop mov pop ret mov push call add xor push push call mov lea push lea call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov add push mov push push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push push mov mov mov cmpb mov mov mov jne movzwl cmpb mov je cmp setae jmp cmp setb mov test je mov jmp mov cmpb je mov mov test je mov lea cmp jne push push push push mov call mov mov pop pop mov movb pop mov pop ret call mov mov mov cmp jae mov push push push lea push mov call mov mov pop pop mov movb pop mov pop ret mov test je lea or lock jne mov mov mov call lea or lock jne mov mov mov call mov push call mov add pop pop mov movb pop mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov mov push push push mov mov mov mov xor xor add adc push add push adc push push call push push mov push push mov call push sub push sbb push push call cmpl mov mov mov mov jne lea push call jmp lea push call mov movzwl add lea push mov cmp jge lea call push lea push call cmp jbe lea call push lea push call mov mov inc movzwl lea push mov cmp jge lea call push lea push call cmp jbe lea call push lea push call mov mov add push movzwl lea mov cmp jge lea call push lea push call mov cmp jbe lea call push lea push call mov lea call mov mov mov push push push push push call mov mov add mov lea mov push lea mov push mov call mov pop mov pop xor pop call mov pop ret int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov cmpb je xor mov mov mov mov mov mov mov lea push call mov mov mov mov cmp je lea movzwl xor mov mov mov mov mov mov mov mov mov mov mov mov mov push lea push movb call mov mov mov push shl add lea push push push lea push call mov mov push mov lea push push push lea push call mov mov mov sub sar push push push call add add push lea call mov sub movl sar mov je mov mov mov mov sub sar test jle mov movzwl mov cltd sub sar cmp jae or sub lea add jmp mov test jg cmp je mov mov cmp jae mov cmp jae mov cmp ja mov mov sub sar cmp jne sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push mov call mov mov lea test je mov jmp mov cmp jne mov sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push mov call mov test je mov mov mov addl mov addl inc mov cmp jb mov mov cmp je mov nop push call add mov movb test je movzwl push mov call jmp xor mov push lea mov push lea movb mov call push lea push lea call add cmp jne mov xor cmp je push call add mov mov mov mov cmp je push call add mov mov mov mov movb cmp je push call add mov add mov mov mov mov cmp jne mov mov mov push lea push push push lea push call mov add mov cmp je mov mov mov cmp je movzwl lea cmp je add cmp jne mov cmp jae mov cmp ja mov mov sub sar cmp jne sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp push call add cmp jae mov push mov call mov mov mov lea test je mov mov jmp mov cmp jne mov sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push mov call mov test je mov mov addl mov add mov cmp jne mov mov mov cmp je jmp lea mov mov cmpb jne movzwl cmp jae mov jmp mov mov cmpb je mov mov cmp je mov cmp jb lea jmp mov lea mov cmp jne push call add mov movb test je movzwl push mov call jmp xor mov mov push lea push lea movb mov call push lea push lea call cmpb jne mov cmpb jne mov cmpb jne mov mov cmpb je mov jmp mov cmpb jne cmp jne mov mov cmpb je mov cmp jne mov test je push call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov sub mov imul add sar mov shr add mov jne mov mov cmp je mov push push push push call mov mov mov push lea push push push call add mov pop mov pop mov pop ret mov push mov sub mov imul add sar mov shr add cmp ja mov push push mov push call mov push mov lea push push push call mov sub mov imul add sar mov shr add add lea sub mov pop lea pop mov mov pop mov pop ret mov sub mov mov imul add sar mov shr add cmp ja mov lea sub lea push push push mov call mov mov mov push lea push push mov push push call add pop mov pop mov pop mov pop ret test je mov push push mov call mov push call add mov sub mov imul add sar mov shr add push mov call test je mov mov mov push push push mov call mov pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov mov cmp jne cmp jne mov push mov call mov mov mov mov mov mov mov mov movl mov mov pop mov pop ret cmp je cmpb mov jne mov cmpb jne mov mov cmpb jne jmp lea mov mov cmpb je mov jmp mov cmpb jne cmp jne mov mov mov cmpb je mov push lea push mov call mov cmp jne mov mov pop mov pop ret int3 int3 push mov sub push mov cmpl jne cmpl jne or pop mov pop ret lea push call push lea push lea push call mov mov add cmp jl jg cmp jb xor pop mov pop ret lea push lea push push call mov mov add push push push push call inc pop mov pop ret int3 push mov push mov mov lock jb mov pop pop ret push mov lea test jns lea jmp mov or mov mov mov lock cmp je mov jmp push test jns mov call mov mov push call add push push call test jne lea and or lea test jns mov jmp lea or and mov mov mov lock cmp je mov jmp test jns mov push call add push push call test je or lock pop pop xor pop pop ret pop pop mov pop pop ret int3 int3 int3 int3 push mov add push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov mov mov mov push push lea push mov movl call mov push call add mov mov pop pop mov pop ret push mov push push mov push sub mov xor mov push push push push lea mov mov mov movl lea push movl call add xor test jne push call add mov movb cmp je push call cmp je cmp je push push lea call push lea push call mov mov jmp mov push movb call mov add cmp je mov push push sub mov mov mov mov mov cmp je add mov lock push call add push call add cmp je mov push push sub mov mov mov mov mov cmp je add mov lock push call add push call add push push sub mov mov mov push mov call mov add cmp je mov push mov call mov xor lea xchg cmp je push call mov mov mov mov mov mov cmp je lea mov push call add mov cmp jne mov push call lea add mov mov mov push push lea push mov movb call mov push call lea add mov mov mov push push lea push mov movb call mov push call add push push push lea push movb call mov cmp je mov mov push lea push push push call mov push call add push push push lea push mov mov mov movb call mov cmp je push call add mov mov mov cmpl jb mov push call add mov mov mov mov cmpl jb mov push call add mov lea mov mov mov mov mov push push lea push mov movb call mov push call lea add mov mov mov push push lea push mov movb call mov push call lea add mov mov mov push push lea push mov movb call mov push call add lea movb call lea movb call lea mov mov mov push push lea push mov movb call mov push call mov add cmp je mov mov push lea push push push call mov push call add push push push lea push mov mov mov movb call push push push lea push movb call mov cmp je push call add lea mov mov mov mov mov mov push push lea push mov movb call mov push call lea add mov mov mov push push lea push mov movb call mov push call add lea movb call lea mov call movl mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 push mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov call mov mov push lea call mov cmp je mov add cmpl jb mov push push mov push push mov call test js lea jmp mov mov lea mov cmp jne push mov call movzwl jmp movzwl movzwl mov add lea push lea mov call mov mov movl mov cmp je lea cmp je add cmp jne jmp cmp jne cmp jne cmpw je lea push mov call mov cmpw jne movzwl mov lea add push lea call mov jmp mov mov push lea call push call add mov movb test je push mov call jmp xor push lea push lea movb mov mov call push lea push lea call test je push call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov movzwl mov mov mov call lea push mov mov call mov cmp je mov add cmpl jb mov push mov push push push mov call test js lea jmp mov mov lea mov cmp jne mov push call movzwl mov jmp movzwl mov movzwl lea add push lea call push lea call lea push lea push push call add push push lea movl call push lea push lea call or cmpl mov jb mov push call add push call add mov mov movl test je push mov call jmp xor push lea push lea mov mov mov call push lea push lea call mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov xor lea mov movl call movb mov call mov mov push lea push mov call push lea push push call push movb mov call add cmp je mov mov mov mov mov mov mov movb mov movb push movb mov call add cmp je mov mov mov mov mov mov mov movb mov movb mov mov mov push push push push lea push movb call push push push push lea push movb call mov mov mov push movb mov call add cmp je mov mov mov mov mov mov mov movb mov movb lea movb call lea movb call push movb mov call add cmp je mov mov mov mov mov mov mov movb mov movb push movb mov call add cmp je mov mov mov mov mov mov mov movb mov movb push movb mov call add cmp je mov mov mov mov mov mov mov movb mov movb lea mov mov mov mov mov mov mov mov mov mov push push push push lea push movb call mov mov mov push push push push lea push movb call push movb mov call add cmp je mov mov mov mov mov mov mov movb mov movb push movb mov call add cmp je mov mov mov mov mov mov mov movb mov movb push movb mov call add cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov push mov mov push push lea movb mov call mov mov cmp jb mov lea mov mov cmp jb mov mov mov mov mov mov mov mov pop pop pop pop mov pop ret lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov lea push call add test jne push call mov add mov movl test je push call test je cmp je push push lea call push lea push call xor push movl call add cmp je mov push push sub mov mov mov mov mov test je add mov lock push call add lea push lea or lea push lea mov mov movl mov call lea push mov call movb cmpl lea movl jne lea push push mov call add add push push test je push call jmp push push push call mov test jns push lea call mov lea push push movb call add mov push lea movb call mov mov push lea push movb call add mov push lea movb call mov lea push lea push movb call add mov push lea movb call mov push lea movb call mov push push lea push movb call mov push push lea push movb call mov push push lea push movb call mov movb push push lea push call push push lea push movb call push push lea push movb call add push push lea push movb call add lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea movb call lea push push lea call push lea push call or mov lea mov call mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov cmpb jne mov cmp je xor cmp je add cmp jne jmp mov call mov mov test je mov mov push call mov mov movl mov cmp je lea lea movl cmpl jb mov mov lea push push mov push call test js cmpl je push push lea push lea call lea call mov cmp jne movb movl test je mov mov push call lea mov mov pop pop pop pop mov xor call mov pop ret push push lea call push lea push call int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov cmpb jne mov mov call mov mov mov push mov call test jne mov mov cmp je lea xor cmp je add cmp jne jmp lea push lea push lea call mov cmp je mov call mov mov test je mov mov push call cmpl lea movl jb mov mov mov push push push call test jns push push lea call push lea push call push lea push lea call push lea push lea call mov mov push movl call mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov cmpb jne mov mov call mov mov mov push mov call test je mov mov cmp je lea xor cmp je add cmp jne jmp lea push lea push lea call mov cmp je mov call mov mov test je mov mov push call cmpl lea movl jb mov mov mov push push push call test jns push push lea call push lea push call mov mov mov cmp je lea mov cmp je lea call mov cmp jne jmp push lea push lea call mov mov push movl call mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov movzwl push push mov push push mov call test je push push mov call push push lea push call mov call mov movl call mov mov lea push push push call test jns push push lea call push lea push call mov mov test je push call add push movb call mov add mov test je mov push mov sub mov mov mov mov mov mov test je add mov lock push push mov movb mov mov test je push call mov add push movb call mov jmp xor movb test je push call add mov movl test je lea or lock jne mov mov mov call lea or lock jne mov mov mov call mov mov mov pop pop pop pop mov xor call mov pop ret push push jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov movzwl mov push mov mov call mov call mov movzwl mov push mov call push lea call mov mov movl mov cmp je mov cmp je add cmp jne mov mov push mov call push lea call mov mov mov cmp je lea mov cmp je add cmp jne movl test je push call add push push lea call push lea push call movl test je push call add push push mov call push push lea push call mov call cmpb movl je push lea push lea call mov cmp jne mov test jne mov test jns push push lea call push lea push call mov call mov lea push push push mov call jmp mov mov test je push call add push movb call mov add mov test je mov push mov sub mov mov mov mov mov mov test je add mov lock push push mov movb mov mov test je push call mov add push movb call mov jmp xor movb test je push call add mov movl test je lea or lock jne mov mov mov call lea or lock jne mov mov mov call mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov movl mov mov mov mov mov mov call movzwl push lea push call mov call lea push movl call mov call mov movzwl mov mov push mov call push lea call mov mov push mov movb call push lea call mov mov mov cmp je mov cmp je add cmp jne mov mov cmp je mov cmp je add cmp jne mov test je push call add cmpl movl movl jb mov push call add mov mov mov pop pop pop pop mov xor call mov pop ret movb test je push call add push call mov add mov movb test je mov lea push push push mov call push push mov call mov jmp mov jmp xor push lea movb mov call push lea push push call mov mov mov add mov mov test je lea mov lock movl test je lea or lock jne mov mov mov call lea or lock jne mov mov mov call cmpl jb mov push call add mov jmp int3 int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov mov mov movl mov mov mov mov mov movl movb mov test je mov mov push call mov movb mov test je mov mov push call mov lea movb mov call lea movb call mov movb test je mov mov push call mov movl test je mov mov push call mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push mov xor push lea mov mov mov movl cmpb movl je lea push call lea push call add lea movb call lea movb call mov movb test je mov push mov call mov movb test je mov mov push call movl mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov mov test je mov mov push call mov movl call mov mov call mov mov push push mov push call test jns push push lea call push lea push call mov mov push movl call mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov movl mov sub movl je dec je push push lea call push lea push call mov test je mov mov push call jmp mov test je mov mov push call mov mov call mov mov push mov push call test jns push push lea call push lea push call mov mov push movl call mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov movl mov sub movl je dec je push push lea call push lea push call mov test je mov mov push call jmp mov test je mov mov push call mov mov call mov mov push mov push call test jns push push lea call push lea push call mov mov push movl call mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov movl mov sub movl je dec je push push lea call push lea push call mov test je mov mov push call jmp mov test je mov mov push call mov mov push mov call test jns push push lea call push lea push call mov mov push movl call mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov sub mov sar test je xor mov mov mul seto neg or push call mov add mov cmp je mov lea mov call mov mov mov add add mov cmp jne xor mov mov sub mov je dec je push push lea call push lea push call mov mov jmp mov mov cmp je mov mov push call mov mov mov push push push mov call mov mov push call add cmp jge push push lea call push lea push call mov mov push movl call mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov push lea push call add push push lea lea push movl call cmpl mov mov mov mov jae lea push lea push call add mov mov cmp jb mov mov cmp jb mov mov push mov push push call mov movb cmp jb mov push call add test jns push push lea call push lea push call mov push lea push call add push push lea lea push movb call cmpl mov mov jae lea push lea push call add movb cmp jb mov jmp mov mov cmp jb mov mov push push mov push call mov movb cmp jb mov push call add test js lea movb call lea movl call mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov xor xor xor mov mov mov mov mov mov mov cmp jne mov mov mov push lea push mov call mov movl test je mov cmp je mov call add cmp jne mov push call add mov mov pop pop pop pop mov pop ret nop mov lea cmp jae cmp ja sub sar cmp jne mov sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push lea call mov mov lea mov mov movb test je push jmp cmp jne mov sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push lea call mov mov mov mov movb test je push call mov mov add mov cmpb movb jne mov cmpb jne mov cmpb jne mov mov cmpb je mov jmp mov cmpb jne lea cmp jne mov mov cmpb je mov mov cmp jne mov jmp push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movb mov mov mov push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov cmp pop jne mov mov movzwl push push mov call pop ret int3 int3 int3 int3 int3 push mov mov mov mov push push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmpl push mov jne mov cmp je mov mov call mov mov mov call pop pop ret int3 int3 int3 int3 int3 push mov sub push mov push mov push mov push mov call add test je pop pop mov pop mov pop ret movzwl cmp je cmp jne test je mov cmp je mov mov mov push call cmp je test je mov cmp je cmpw je mov mov call mov mov call mov mov mov lea push push push push call test jne mov mov test je mov mov movzwl cmp je cmp jne test je mov cmp je mov mov mov push mov call pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 push mov sub push push mov mov mov xor mov mov mul seto push mov neg or push call mov mov mov add mov cmp je mov nop mov mov mov add cmp jne mov mov xor mov mov mul seto neg or push call mov mov add cmp je mov lea mov mov mov add cmp jne mov mov mov mov push push mov push push push mov call pop pop pop mov pop ret int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov movl mov xor movl cmp je mov mov push call push mov push lea mov mov mov call mov mov lea push push lea push movb call mov call cmpl movb jb mov push call add mov mov mov push mov mov mov call mov movb cmp je mov add or lock jne mov mov mov call lea or lock jne mov mov mov call mov cmp je mov mov push call mov cmp je mov mov push call mov mov mov push call mov movb cmp je lea or lock jne mov mov mov call lea or lock jne mov mov mov call mov mov cmp je mov mov push call movl mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov mov xor mov mov mov movl movl mov movl movb mov cmp je mov mov push call mov mov mov mov cmp je add mov lock mov mov mov mov movb mov cmpl movb jb mov jmp mov mov push push mov call cmp jge push push lea call push lea push call mov mov test je mov mov call mov mov mov push call mov mov cmp jne movzwl mov mov push push mov call test jns push jmp lea push lea push mov call jmp push push push call mov call mov test je mov mov push mov call lea call mov mov lea push lea push mov movb call movb mov lea movb call mov push movb call add mov mov push push push call mov call mov test je mov mov push mov call lea call mov mov lea push lea push mov movb call movb mov lea movb call mov push movb call add push mov push lea mov movl movb call mov lea push lea push push movb call mov call cmpl movb jb mov push call add mov mov mov push mov movl movb call mov movb test je mov add or lock jne mov mov mov call lea or lock jne mov mov mov call mov movb test je mov mov push call mov movl test je lea or lock jne mov mov mov call lea or lock jne mov mov mov call mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov xor cmp je mov cmp jne cmpb je mov mov lea push add push mov call mov mov pop pop pop pop mov pop ret cmp je push mov call add cmp je mov mov mov mov mov mov mov lea push lea push mov call lea movl call mov push movl call add cmp je push mov call add cmp je mov mov mov mov mov mov mov lea push add push movl call lea movl call mov push call add mov mov pop pop pop pop mov pop ret lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov push call add mov xor mov cmp je movzwl push mov call mov jmp mov mov movl cmp jne xor mov mov pop pop pop pop mov pop ret mov push call mov mov cmp je mov cmp je cmpw je mov mov call mov mov call mov mov lea push push push mov push call test js mov mov test je push call add movl movl mov mov lea push lea push push mov call xor mov cmp jbe mov push lea call mov push movb call lea movb call inc cmp jb cmpl je movl test je push call add mov xor movzwl cmp je cmp jne cmp je mov cmp je mov mov mov mov push call mov cmp je mov mov mov call cmp jle mov mov mov lea movl call mov mov lea push mov call mov mov mov lea push mov call cmp je lea push lea call mov mov lea push mov add call cmp jne mov mov mov cmp je lea mov lea push call mov cmp jne movl test je mov cmp je mov call add cmp jne push call add mov mov push mov call mov mov mov pop pop pop pop mov pop ret int3 int3 push mov push push push mov lea push mov movl call lea push mov call lea push mov call lea push mov call mov mov mov test jne test jne cmp jne test jne push push push mov call pop mov pop mov pop ret cmp jne cmp jne cmpb jne cmpb jne push push push mov call pop mov pop mov pop ret cmp jne cmp jne cmp jne push push push mov call pop mov pop mov pop ret cmp jne cmp jne push push push mov call pop mov pop mov pop ret push push push mov call pop mov pop mov pop ret mov or jne mov or je push push push mov call pop mov pop mov pop ret mov test je or jne push push push mov call pop mov pop mov pop ret test jne test je push push push mov call pop mov pop mov pop ret test jne push push push mov call pop mov pop mov pop ret push push push mov call pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov cmp jne cmpl jb mov mov mov mov pop ret cmpl jb mov mov push lea test je mov movzwl mov shl or shr rep adc rep pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov cmpb je mov mov ret mov cmpb jne mov cmpb jne mov mov cmpb je mov ret mov cmpb jne mov cmp jne mov mov cmpb je mov cmpb jne mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl jb mov push call add movl movl xor mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov cmpl jb mov push call add xor movl movl mov cmpl jb mov push call add movl movl movb pop ret int3 int3 int3 push mov push mov push mov mov or sub cmp ja push call test je push lea cmp jbe push call mov cmp jae push push mov call test je mov mov push push push mov call cmpl mov jb mov xor mov pop mov pop pop pop ret test jne mov cmp jb mov xor pop mov mov pop pop pop ret pop mov xor pop mov pop pop ret mov xor mov pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov testb je mov pop mov pop ret push mov push mov lea push mov call lea push mov call test jne movzwl jmp mov mov mov movzwl mov movzwl mov mov testb jne cmp je cmp je push push mov call jmp lea push mov call lea push mov call mov mov testb je push push push mov call mov mov push push add call pop pop xor pop mov pop ret test je mov mov mov movzwl movzwl mov cmp je cmp jne cmp jne push push push mov call pop pop xor pop mov pop ret int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov xor mov mov mov movl mov mov push push mov call add cmp je sub jmp mov lea mov inc test jne sub push push lea call lea push mov call mov mov cmp je mov add mov cmp jb mov mov mov cmp jb mov cmp mov jae lea push push push call add test jne cmp jae or jmp xor cmp setne test sets test jne lea jmp mov lea mov cmp jne mov push mov call cmpl jb mov push jmp lea call push push add push lea movb call mov lea push mov call cmpl jb mov push call add xor cmpl movl movl mov jb mov push call add mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov cmpl jb mov push call add xor movl movl mov cmpl jb mov push call add movl movl movb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push cmp jb mov lea push add push call push call add push call mov inc mov mov mov mov xor cmp jne mov mov mov mov mov jmp cmp je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov cmp jne mov mov cmp jne mov cmp jne movb movb mov mov mov mov mov jmp cmp jne mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov movb mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov mov jmp mov cmp jne mov mov jmp mov mov jmp mov cmp jne movb movb mov mov mov mov mov jmp cmp jne mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov movb mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov cmp je mov mov mov mov pop pop movb pop pop ret int3 int3 int3 push mov push push mov push push push push push mov xor push lea mov xor mov mov movl mov mov mov cmpl mov mov movl jb mov cmp jbe mov mov mov push push mov call add dec jne mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpb push mov je push call push lea call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp push call mov add mov mov mov cmp jne cmpb je mov mov mov jmp push call mov mov add mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov cmpb jne mov cmp je cmpb jne mov cmp jne mov cmpb jne movb push movb call mov mov cmpb jne mov cmpb jne mov cmpb je mov cmpb jne mov movb push movb call mov mov mov mov movb mov push movb call jmp cmpb jne movb push movb call mov mov cmpb jne mov cmpb jne mov cmpb jne movb mov mov mov cmp jne jmp mov cmpb jne mov movb push movb call mov mov mov mov movb mov push movb call movb cmpl pop jb mov push call add xor xor movl mov mov cmpl jb mov push call add movl mov push movb call mov mov add cmp pop pop jbe dec mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov xor push mov mov cmp jne mov mov push call cmpl mov jb mov push call add xor movl mov mov cmpl jb mov push call add movl mov push mov call add mov cmp je pop pop pop mov pop ret int3 int3 push mov sub mov mov push mov cmpb push push mov mov mov mov jne mov mov mov mov jmp mov cmpb mov lea je cmpl jb mov jmp add mov mov cmp jae mov mov cmp jb mov cmpl jb mov push push push call add test jne cmp jae or test setns jmp xor cmp setne test setns jmp cmpl mov jb mov mov mov cmp jae mov mov cmp jb mov cmpl mov jb mov jmp add push push push call add test jne cmp jae or jmp xor cmp setne test sets mov test je mov jmp mov cmpb mov je mov mov mov mov test je mov cmp jne push push push lea push call mov mov pop pop mov movb pop mov pop ret lea call mov mov cmpl lea mov lea jb mov jmp mov push mov push push push call test jns mov mov push push push mov jmp mov add push push call mov push call mov add pop mov pop movb pop mov pop ret int3 int3 int3 int3 int3 push mov push mov push mov mov mov cmp jne cmp jne mov push mov call mov mov mov mov mov mov mov mov movl mov mov pop mov pop ret cmp je cmpb mov jne mov cmpb jne mov mov cmpb jne jmp lea mov mov cmpb je mov jmp mov cmpb jne cmp jne mov mov mov cmpb je mov push lea push mov call mov cmp jne mov mov pop mov pop ret int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov push call mov xor add mov cmp je mov mov mov mov mov lea mov mov mov mov mov movb cmp je mov push push movl mov push mov mov call mov lea add xor movl mov push movb mov call mov mov mov pop pop pop pop mov pop ret mov push call add xor push push call lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov mov mov mov push push lea push mov movl call mov push call add mov mov pop pop mov pop ret push mov sub push mov push movl call add test je mov mov mov mov mov mov mov mov mov mov mov mov pop mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov xor push push mov push lea movl mov mov call push push xor push lea mov movl mov mov call push lea push mov movl call push lea push mov call cmpl jb mov push call add xor cmpl movl mov mov jb mov push call add mov mov pop pop pop pop mov xor call mov pop ret int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov push mov mov call add cmp je cmp je movl lea push lea call push lea movl push call cmp jne movb jmp movb mov mov testb jne mov lea mov xor xor mov mov mov lea push push push mov call mov mov add testb jne mov mov cmp jb cmp jbe mov mov mov cmp jae lea cmpw jne lea cmp jbe mov cmp jae lea cmpw jne movl test je mov mov cmp jb cmp jae lea mov mov test je cmpw je add dec jne lea push lea movl call push lea movl push jmp test je mov lea mov jmp lea mov cmp jne add add dec jne mov mov cmp jae lea sub sar mov cmp je lea push push lea push lea call mov sub sub push inc push lea push lea movb call lea push lea push movb call add mov lea push push movb call cmpl jb mov push call add cmp jb mov push call add xor xor mov mov mov mov cmp jb mov push call add xor mov mov mov movl cmp jb mov push call add mov mov mov testb je mov mov pop pop pop pop mov xor call mov pop ret sbb and inc je mov sub sar or sub mov add mov lea jmp cmp jb mov push call add jmp movl lea jmp push call lea push lea movl call push lea movl push jmp int3 push mov push push mov push push push push push mov xor push lea mov mov mov mov xor movl cmp je mov call push call add mov cmp je mov call push call add mov cmp je mov call push call add call cmpl jb mov push call add mov mov mov mov cmpl jb mov push call add mov mov mov cmpl jb mov push call add mov mov mov mov movl call mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push movl lea mov inc test jne mov sub push push call mov movl movl push mov movb call mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov xor push mov push lea mov movl mov mov call mov mov lea nop mov inc cmp jne sub push push lea call push push lea call push lea call mov mov movb cmp jae lea push push lea push call add push lea movb call mov movb cmp jb mov push call add mov cmp jae lea push push push push lea call movb cmp je push call add mov movb cmp je mov call jmp xor mov lea mov push mov movb call jmp mov mov lea movb call mov lea push mov call add lea mov call cmp jb mov push call add mov mov pop pop pop pop mov xor call mov pop ret push mov push push mov push push push push push mov xor push lea mov mov mov mov push call xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb call mov cmp je mov cmp je lea mov cmp jne cmp je mov cmp jne add add cmp jne xor jmp sbb sbb cmp je mov push lea push mov call cmp je mov lea mov inc cmp jne mov sub push push lea call mov cmp je push lea push mov call cmp je mov mov lea mov inc cmp jne sub push push lea call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov xor mov mov mov mov mov cmp je mov lea mov inc cmp jne mov sub mov push add push push push call test je mov mov add mov cmp je call mov push call add mov push push call cmp je mov lea mov inc cmp jne mov sub push push add call mov push mov push lea mov mov mov call push lea push lea push movl call push push lea push movb call add cmpl jb mov push call add mov mov mov cmpl movb jb mov push call add mov sub mov mov mov je dec jne push push lea mov mov mov call push lea push lea push movb call push push lea push movb call add push lea movb call cmpl jb mov push call add cmpl mov mov mov jb mov push call add cmpl mov mov mov movb jb mov jmp push push lea mov mov mov call push lea push lea push movb call push push lea push movb call add push lea movb call cmpl jb mov push call add cmpl mov mov mov jb mov push call add cmpl mov mov mov movb jb mov push call add lea call mov xor movl mov movb mov mov mov movl cmp je cmpl mov jae lea push lea push call push lea movb call cmpl movb jb mov push call add cmp je lea call test jne cmpl mov jae lea push lea push mov call push lea movb call cmpl movb jb mov push call add cmp je lea call test jne cmpl mov jae lea mov push lea push call push lea movb call cmpl movb jb mov push call add lea call test jne mov cmp je mov lea mov movsbw movzwl push push call mov inc cmp jne jmp lea call mov mov shr xor mov mov mul seto neg or push call add mov mov push push push lea call mov push push call push call add cmpl jb mov push call add xor cmpl movl mov mov jb mov push call add mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 mov add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl mov jb mov add push push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor movl movl mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov xor push push push movl movl mov mov call mov pop pop ret int3 int3 push mov mov push push push push mov call mov pop pop ret int3 int3 int3 int3 int3 int3 test je mov mov push call ret int3 int3 push mov sub mov xor mov push mov push mov mov push mov movl test je push call add lea push mov cltd push push push push call add cmpl mov jle push push lea call push lea push call mov mov lea push push mov call cmpl jle push jmp mov mov mov call mov mov pop mov pop xor pop call mov pop ret int3 int3 push mov mov mov mov call mov movl pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov push mov push lea push mov movl call mov pop mov pop ret int3 push mov push mov mov mov push mov mov call cmpb je movb mov mov mov call cltd push push mov push call mov push call add cmp je push call add cmp je pop xor pop pop ret pop mov pop pop ret cmp jl mov mov mov call mov cltd push push push call mov push push call add test jne push push call add test je cmp je cmp je cmp jne movb pop xor pop pop ret pop mov pop pop ret int3 int3 push mov push push mov push push push mov xor push lea mov mov mov movl mov movl test je mov mov push call mov test je push call add mov test je mov mov push call lea movb call testb movl je push call add mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov jmp lea mov mov mov mov mov call cmp je mov mov mov mov mov push mov push call test jne mov mov mov call cmp jne mov cmp je mov mov sub mov mov mov mov cmpl jne mov mov movzwl push call add test jne push call add test jne pop pop mov pop pop ret pop pop xor pop pop ret pop pop mov pop pop ret push mov push mov push mov push movl call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl cmpl jb mov push call add xor testb movl mov mov je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov xor lea push mov movl mov mov mov mov mov call cmpl movb jb mov push push push lea push mov call cmpl movb jb mov push call add lea push push movl mov mov mov call add mov cmp jle push push lea call push lea push call mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov mov mov mov cmp jb mov cmpl jb mov jmp mov push push push call xor add cmp jne cmp jae or jmp xor cmp setne cmp sete cmp je push call mov add mov mov cmp je push lea movl push movl mov push mov call movl jmp push call mov add mov movl cmp je push lea movl push movl mov push mov call movl mov jmp xor push movl call add mov movl cmp je push mov call mov mov pop pop pop pop mov pop ret xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je cmpl je mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl je cmpl je mov push call add mov test je push call mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov cmpl movl movl je mov test je mov push push lea push push push push push call add lea call mov push lea push call add mov movb cmp jb mov mov mov push mov push push push call add movb cmp jb mov push call add lea call mov push lea push call add movb cmp jb mov mov mov push mov push push push call add movb cmp jb mov push call add lea call mov push lea push call add movb cmp jb mov mov mov push mov push push push call add cmp jb mov push call add movl movl movb lea movb call lea movb call lea movl call mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov cmpl movl movl mov je mov test je push push lea push push push push push mov call add lea call mov push lea push call add movb cmp jb mov mov mov push mov push push push call add movb cmp jb mov push call add mov cmp jae lea mov mov push mov push push push call mov add cmp jae lea mov mov push mov push push push call add lea movb call cmp jb mov push call add movb movl movl cmp jb mov push call add mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov xor mov cmp je lea mov call cmpl jb mov push call add movl mov push mov call add mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov xor xor mov cmp je push lea call mov mov mov movl mov mov lea mov inc cmp jne sub push push lea call cmpl mov movb jae lea push push lea push call add push lea movb call mov cmp jb mov push call add xor cmpl movl mov mov jb mov push call add mov movl mov mov cmp jae lea push call mov cmp je mov push push call mov push push mov call mov push push mov call mov mov push push call mov push push mov call mov push push mov call mov mov push push call mov push push mov call mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je movb jmp mov push call mov lea movl call mov jmp mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov xor cmp je cmp jne push push lea movl mov mov call lea push lea mov call cmpl movb jb mov jmp mov mov lea nop mov inc cmp jne sub push push lea call mov mov cmp jb mov push call add cmp je mov cmp jae lea cmp lea jb mov mov push push push call mov push push push push push push call add cmp jb mov push call add mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov xor cmp jne push call mov add mov mov cmp je movl mov mov lea movb call mov mov mov mov mov mov mov mov jmp xor mov mov mov push push lea movl mov movl mov mov call mov lea add push movl call mov movl cmp jb mov push call add push push lea movl mov mov call mov movl cmp jae lea push push lea push call add mov push push lea add push movb call lea movb call cmp jb mov push call add mov mov mov pop pop pop mov xor call mov pop ret int3 int3 push mov sub mov xor mov push push mov mov mov push mov movl lea mov inc test jne sub push push lea call push push push lea call cmpl jne push push lea call push lea push call push call add test jne push push lea call push lea push call push mov call test jne push push lea call push lea push call mov call cmpl pop pop pop mov jne mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl push push push mov push lea movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov push call mov xor add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 mov push mov cmp je push call add test jne mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov mov mov test je mov mov jmp mov mov mov mov decl testb je push call add mov pop pop ret int3 int3 int3 int3 push mov push cmpl movl je cmpl je mov lea push push push call add mov pop ret xor mov pop ret int3 int3 int3 int3 jmp mov jmp push push push push call pop pop jmp mov jmp jmp mov jmp jmp mov jmp jmp mov jmp jmp mov jmp jmp mov jmp jmp mov jmp jmp mov jmp mov jmp mov jmp push push push push call pop pop jmp jmp mov jmp jmp mov jmp push push push push call pop pop jmp jmp mov jmp jmp jmp mov push mov sub push mov push mov mov mov mov add push mov add add mov mov add add mov mov mov mov xor mov mov xor testl lea movl mov mov stos mov mov mov jne lea mov lea push push push push call xor jmp mov mov mov sub and mov mov mov shr not and mov lea jne movzwl mov mov xor cmp je lea push push call mov test jne test jne mov test je lea push push call mov test jne pushl call mov test jne call mov mov test je lea push push call mov test jne lea mov lea push push push push call mov jmp push pushl call cmp je cmpl je push push call test je mov mov mov mov jmp push call mov mov test je lea push push call mov test jne cmp je cmp je mov cmpl jne mov cmp jne cmp jne mov mov mov test jne pushl push call mov test jne call mov mov test je lea push push call mov test jne lea mov lea push push push push call mov mov mov mov test je andl lea push push mov mov call mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov push nop mov cmp jne sub add add cmp jae xor xor test sete pop mov pop ret movzbl movzbl sub jne movzbl movzbl sub jne movzbl movzbl sub jne movzbl movzbl sub sar or xor test sete pop mov pop ret push mov cmpl push mov movl je mov pop pop ret push push call add test je mov call mov test jne pop mov pop pop ret mov mov push call mov mov mov push push push call mov mov mov push call pop mov pop pop ret int3 int3 int3 int3 int3 int3 push mov mov test jne or mov call push call add mov push push call add test je push mov push push mov push push push call push movl call add test je mov call mov test jne pop pop mov pop pop ret mov mov push call mov mov push push push call mov mov mov push call mov pop pop pop pop ret mov movl mov pop ret int3 int3 int3 int3 int3 int3 push xor mov mov lea mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test je inc cmp jl xor pop ret mov pop ret int3 int3 int3 push mov push mov push push call add test je push call add test je mov push mov call jmp xor jmp push push call add test je push call add test je mov push mov call jmp push push call add test je push call add test je mov push mov call jmp push push call add test jne push push call add test jne mov mov mov pop pop ret mov mov mov test je mov mov push call xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push mov mov call test je mov movl movl movb lea mov inc test jne push sub push push lea call mov lea mov push lea call mov mov cmp je mov add cmpl jb mov mov mov cmp jb mov cmpl mov jae lea push push push call add test jne cmp jb cmp setne test js lea jmp mov lea mov cmp setne cmpl jb mov push call add mov xor test setne pop pop pop mov xor mov xor call mov pop ret mov pop xor mov pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov push call mov xor add mov cmp je mov mov mov mov mov lea mov mov mov mov mov movb cmp je mov mov mov lea movl mov mov mov mov inc cmp jne sub push push call mov mov mov pop pop pop pop mov pop ret mov push call add xor push push call lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov mov movl lea movl mov mov mov push push lea push mov movb call mov push call add add mov mov mov push push lea push mov movl call mov push call add mov mov pop pop pop mov pop ret int3 int3 int3 push mov push mov push lea push call test jne test je mov mov push mov call pop xor pop pop ret mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push mov push mov xor mov mov mov call test je mov movl mov mov lea mov inc test jne sub push push lea call mov lea add push mov mov mov call mov mov cmp je mov add mov cmp jb mov mov cmp jb mov cmp mov jae lea push push push call add test jne mov cmp jb xor cmp setne mov test js lea jmp mov lea mov cmp mov sete cmp jb mov push call add test je mov movl movl movb lea lea mov inc test jne sub push push lea call mov mov lea push lea push lea call cmp je cmpl je mov jmp xor cmpl jb mov push call add test je mov push lea push mov call push lea push mov call pop pop xor pop mov xor call mov pop ret cmpl jne mov movl movl movb lea mov inc test jne sub push push lea call mov lea push call cmp jb mov push call add pop pop xor pop mov xor call mov pop ret mov pop pop xor mov pop call mov pop ret int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov xor movl mov push mov call add cmp je mov mov mov mov mov mov mov mov mov mov mov push mov mov call add cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop pop pop mov pop ret lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push movl call test jns push push push call add ret int3 int3 int3 int3 int3 push mov push mov push push call add test jne push push call add test jne mov movl mov pop pop ret mov mov mov test je mov push mov call xor pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov add push call test jne pop pop ret mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl je push call xor pop ret cmpl jge push push push call add push call xor pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl call test jns push push push call add testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl movl call cmpl jne push call mov pop ret push mov push mov push push call add test jne push push call add test jne mov movl mov pop pop ret mov mov mov test je mov push mov call xor pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov xor cmp jge push push mov push mov movzwl lea mov mov push mov push call add dec jne pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov cmpb jne nop mov mov cmpb je pop ret int3 int3 int3 mov mov cmpb jne mov cmpb jne mov cmpb jne jmp lea mov mov cmpb je mov ret mov cmpb jne mov cmp jne mov mov cmpb je mov ret int3 int3 int3 int3 int3 push mov push mov push push push mov push mov call mov mov cmp je mov push call cmp jne mov mov mov cmp jb lea mov cmp jne sub add add cmp jae test je mov cmp jne cmp jbe mov cmp jne cmp jbe mov cmp je mov add cmp jne mov mov pop pop mov pop mov pop ret mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push mov push push lea push mov call mov cmp je mov push call mov lea sub sar add add push push push call add addl lea push push call mov mov add cmp jae lea mov push call cmp pop pop pop jb mov push call add mov xor xor call mov pop ret push mov sub mov xor mov push push mov push mov cmp je mov mov push lea push call mov add cmpl jae lea mov push call mov push call cmpl jb mov push call add add cmp jne mov mov cmp je mov sub sar lea push push push call add add mov mov pop pop xor xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push mov mov push mov push lea push mov call cmp jne push call lea push lea mov call lea push push call mov mov add cmp jae lea mov push call cmp pop pop pop jb mov push call add mov xor xor call mov pop ret int3 int3 push mov sub mov xor mov mov push mov push mov movl movl movb lea nop mov inc test jne sub push push lea call push push lea push lea movb call cmp je mov push push lea call push push lea push lea call push call add test je mov call jmp xor cmpl mov pop pop jb mov push call add mov xor xor call mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov mov push push mov push mov push lea push call lea push push call push call add mov lea push push lea push lea push xor movw call add push lea push call add cmpl jb mov push call add push call mov add cmpl jae lea push push lea push call add cmpl jb mov push call cmpl mov jb mov push call add mov mov push xor push movl mov mov call push call mov cmp jb mov push call add mov mov mov mov cmp jb mov push call add cmp mov pop pop mov mov pop jb mov push call add mov xor xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov movl mov movl cmp je mov mov push call add cmp jne mov mov cmp je mov sub sar lea push push push call add add mov mov xor cmp je mov call push call add mov cmp je push call add mov mov mov cmpl jb mov push call add movl mov mov add mov mov mov push push lea push mov movl call mov push call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 push mov push mov push lea push call test jne test je mov mov push mov call pop xor pop pop ret mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov xor movl mov push mov call add cmp je mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov pop pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add test jne push push call add test jne mov movl mov pop pop ret mov mov mov test je mov push mov call xor pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp ja mov test je cmp jae mov mov movl push movl mov test js xor inc lea mov mul seto push mov neg or push call mov lea push push push mov call mov add push push push call add xor push mov call mov sub mov mov push push push movzwl call add movswl add push push push call add xor push mov call mov push mov call add pop pop xor pop pop ret mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl xor ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov sub movl sar movl cmp jae push mov push mov cmp jae mov incl lea mov mov mov mov mov mov mov incl add cmp jb pop pop mov cmp pop sbb neg mov pop ret int3 int3 int3 int3 int3 int3 push mov mov add mov sub sar cmp jb dec mov mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 mov push call pop ret int3 int3 int3 int3 int3 int3 push mov mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl cmp je push lea mov push call add mov cmp jne pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp je push test je mov mov mov mov add add mov cmp jne pop pop ret int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov mov movl lea cmp je mov add lea push mov push push mov call mov mov sub cmp jae push call inc mov mov mov mov mov mov mov jmp mov cmp je mov mov mov push lea push mov call mov cmp jne push push call mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov push lea mov mov mov push movl cmp je mov push call add mov cmp jne mov mov lea mov mov mov movl cmp je mov mov push call add mov cmp jne cmpl movl jbe mov mov mov mov push push push mov call mov mov sub cmp jb addl inc mov mov mov mov mov inc mov cmp jb cmpl movl jbe mov lea mov mov push push push mov call mov mov sub cmp jb inc mov mov mov mov mov inc add mov cmp jb pop pop xor pop pop ret push call int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov cmp jbe push call mov sub sar cmp jae lea push mov call mov mov push push mov mov push push push push mov movl call mov mov sub add sar test je push call add mov lea lea mov mov mov mov mov pop pop pop pop mov pop ret mov push call add push push call int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov xor mov mov mov mov sub mov sar mov mov cmp je cmp jbe push call lea push call mov push lea lea push mov mov mov mov mov push push push movl call add mov mov mov mov pop pop pop pop mov pop ret mov call push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov push sub mov sar sub cmp jae push call add mov sub sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push call pop pop pop ret int3 int3 int3 push mov mov add push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov mov push cmp je mov cmp je lea mov mov mov mov add add cmp jne mov mov xor cmp je push call add mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov cmp jae mov cmp ja sub sar cmp jne push mov call mov test je mov mov mov mov mov addl pop pop pop ret cmp jne push mov call mov test je mov mov mov mov addl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov cmpl mov mov mov jbe mov mov xor call mov pop ret push push push push lea push xor xor call mov mov add cmp je cmp jne add push lea call mov mov cmp je lea cmpl mov mov mov jae lea push call mov mov cmp jne mov cmp jne mov mov mov mov mov mov cmp je jmp lea mov push call mov add mov cmp jne push call add xor mov mov mov cmp je mov lea mov inc test jne sub je mov lea lea mov inc test jne sub inc push xor mov call mov push mov push push call xor add mov mov cmp je mov sub mov nop mov cmp jl cmp jg push lea sub push push movb call mov add add mov jne movl jmp dec mov movsbw xor lea sub mov push lea mov call mov push push push call mov add add cmpl jb mov push call add jmp sub mov mov inc inc cmpb mov jne push call mov add push call mov xor add cmp je lea push lea movl mov call mov jmp xor mov mov cmp je push call add cmpl pop pop pop jb mov push call add mov xor xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov movl mov mov mov mov mov movl cmp je mov push call add mov cmp jne mov push call mov mov mov mov mov add movl cmp je nop mov push call add mov cmp jne mov push call add add mov mov mov push push lea push mov movl call mov push call add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push lea push call test jne test je mov mov push mov call pop xor pop pop ret mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov mov xor movl mov push mov call add cmp je mov mov mov mov mov mov mov movb mov movb movl push mov mov call add cmp je mov mov mov mov push movb mov call add cmp je mov mov mov mov mov mov mov mov mov pop pop pop mov pop ret lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add test jne push push call add test jne mov movl mov pop pop ret mov mov mov test je mov push mov call xor pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push call add test je mov mov mov test je mov mov push call xor pop ret mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub push push mov sar movl xor cmp jae push nop cmp jae mov lea mov mov mov mov mov incl inc cmp jb pop mov cmp pop sbb neg pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add mov sub sar cmp jb dec mov mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov xor cmp je push mov mov mov push call test jne mov cmp jne pop pop pop pop ret pop pop mov pop pop ret pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push push mov push mov push lea push call mov add mov cmp je cmp jne mov cmp jae lea push lea push mov call test jne mov cmp je cmp jne mov cmp jae lea push lea push mov call test je movl cmp jb mov push jmp movl cmp jb mov push call add mov pop pop xor xor pop call mov pop ret int3 int3 int3 int3 int3 push mov push mov push lea push call test jne test je mov mov push mov call pop xor pop pop ret mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov movl cmp je push mov lea mov push call add cmp jne pop mov xor cmp je push call add mov mov mov pop pop ret int3 int3 int3 int3 push mov push mov mov mov push lea mov mov mov push movl cmp je mov push call add mov cmp jne mov mov lea mov mov mov movl cmp je mov mov push call add mov cmp jne cmpl movl jbe mov mov mov mov push push push mov call mov mov sub cmp jb addl inc mov mov mov mov mov inc mov cmp jb cmpl movl jbe mov lea mov mov push push push mov call mov mov sub cmp jb inc mov mov mov mov mov inc add mov cmp jb pop pop xor pop pop ret push call int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push push mov push lea push mov mov call push call xor add cmp je movl mov mov mov mov mov mov jmp mov mov cmp je cmp jne mov push mov mov cmp je lea cmpl mov mov mov jae lea push call cmp je push push lea push call mov add cmp jb mov push call mov cmp jb mov push call add mov mov lea mov cmp jae mov cmp ja mov mov sub sar cmp jne sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push lea call mov mov test je mov mov mov jmp mov cmp jne mov sub sar cmp ja sub inc sar cmp jbe mov shr mov sub cmp jae xor jmp add cmp jae mov push lea call mov mov test je mov addl xor mov mov mov cmp jne pop cmpl mov mov pop mov pop jb mov push call add mov xor xor call mov pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push mov push xor mov mov mov mov mov lea jmp lea mov inc cmp jne sub push push lea call push push lea mov mov mov call push push lea push lea movb call mov cmp je mov push lea push lea push lea mov mov mov call push push lea push lea call mov push push lea call mov cmp jb mov push call add jmp mov cmp jb mov push call add cmp mov pop pop mov mov pop jb mov push call add mov xor xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov movl mov mov mov mov mov xor mov cmp je mov push call add mov cmp jne mov mov mov mov mov mov cmp je mov mov push call add mov cmp jne mov mov mov mov mov mov cmp je mov push call add mov cmp jne mov push call mov mov mov mov mov add mov cmp je lea mov push call add mov cmp jne mov push call add add mov mov mov push push lea push mov mov call mov push call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push lea push call test jne test je mov mov push mov call pop xor pop pop ret mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov xor movl mov push mov call add cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov mov call add cmp je mov mov mov mov push mov mov call add cmp je mov mov mov mov mov mov mov mov mov mov mov pop pop pop pop mov pop ret lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl call add mov test jne mov mov pop ret xor jmp lea nop mov movl inc cmp jl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov cmpl mov je xor push mov mov cmp jle push mov mov test je lea mov mov test je push call add mov test je push call add mov test je push call add push call add mov test jne mov mov inc mov cmp jl pop mov push call add pop movl pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov test jne or pop ret cmpb mov mov je jmp lea mov cmp jl cmp jle mov inc inc cmpb jne movb xor pop ret int3 int3 int3 int3 push mov mov test jne or pop ret mov mov mov push mov mov test je cmp je inc mov mov inc test jne cmpb jne inc movb mov test je inc mov mov inc test jne movb xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea lea mov inc test jne sub xor test jle nop mov cmp jl cmp jle inc cmp jl xor pop pop ret mov pop pop ret push mov push push push mov mov mov lea mov inc test jne sub xor test jle nop cmpb je inc cmp jl push call test mov jne mov pop pop pop pop ret pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov movsbl xor test je imul inc add movsbl test jne xor divl pop mov pop ret int3 int3 int3 int3 int3 push mov push mov push push test je mov movsbl xor mov test je nop imul inc add movsbl test jne xor divl mov test je mov cmp je cmp je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne cmp jmp cmpb jne cmp jne mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test je mov test jne xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov lea mov inc test jne push mov push sub lea push push call push push mov call mov mov add movb lea mov inc test jne sub xor test jle cmpb je inc cmp jl mov push mov call test je push lea push mov movb call mov mov push push mov call test je cmpb jne movb mov test je push call add mov pop pop test je push call add mov pop mov pop ret push lea push lea push mov movb call mov jmp lea mov mov mov sub lea mov mov inc test jne jmp int3 int3 int3 int3 push mov sub push push mov mov push mov lea mov inc test jne mov sub lea push push call push push mov call push push mov call mov mov add mov test je cmpl je test je push push call mov mov add mov mov sub mov mov inc test jne mov push mov call mov cmp je cmp je mov mov sub cmp mov je mov mov inc test jne mov mov sub mov mov inc test jne jmp mov mov inc test jne mov mov sub mov mov inc test jne jmp mov mov push lea mov push lea mov push mov call jmp mov push lea mov push mov call mov mov sub mov mov inc test jne mov push mov call movl movb mov mov lea test jne mov pop pop mov pop mov pop ret mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test je nop mov test je mov mov mov nop mov cmp jne test je mov cmp jne add add test jne xor jmp sbb sbb test jne mov movb mov push call mov push call mov push call push call add pop pop mov pop mov pop ret mov pop pop mov pop mov pop ret mov push call add jmp mov mov test je push call add test je push call add pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov push push call test je mov pop ret xor pop ret int3 push mov mov push push call test setne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push call test je mov pop ret xor pop ret mov call test je mov push mov call ret mov push mov push call pop test je mov mov mov mov jmp xor mov pop ret push mov call push lea call andl jmp mov mov mov mov call push call pop mov test jne orl lea call call ret int3 jmp jmp jmp mov push mov pop jmp int3 int3 int3 push push mov push push push push mov xor push lea mov mov mov movl mov mov movl test je cmp je push call mov movl test je cmp je push call testb je push call add mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 call call mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push sub push push mov xor push lea mov mov mov xor movl mov movl push push push push mov call cmp jne lea call push lea push call mov incl mov mov mov movl mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call test je mov test je mov nop cmp je mov test jne xor ret mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call movl ret int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov push push call push call mov test jne push lea push lea movl call push lea push movl call mov movl mov mov movb call mov mov pop pop pop pop mov pop ret mov push call add push push call int3 int3 int3 mov push push mov mov mov mov cmp je test je lea mov lock push mov test je lea or lock jne mov mov mov call lea or lock jne mov mov mov call mov pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je lea or lock jne mov mov push mov call push push call push call pop ret int3 mov push mov mov mov mov mov mov test je add mov lock mov mov mov mov mov test je push mov add or lock jne mov mov mov call lea or lock jne mov mov mov call pop mov pop ret mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov test je push call test jne push call push push mov call mov add push push call mov pop test jne pop ret push call pop ret int3 push mov push push mov push sub push push push mov xor push lea mov mov push push call push call mov test jne push lea push lea movl call push lea push movl call mov movl mov mov mov mov push mov mov push mov sub mov mov mov movb mov mov test je add mov lock mov mov push mov call mov mov pop pop pop pop mov pop ret mov push call add push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push push push push push push mov xor push lea mov mov test jne xor jmp push call mov mov mov movl test je cmpl jne cmpl jne push push call mov add push push call movl test je lea or lock jne mov mov push mov call push push call push call mov mov pop pop pop pop pop add ret cmpl je mov mov mov mov test je mov mov call mov mov mov push mov call push push call push call push push call push call cmpl jne cmpl je mov mov mov mov test je mov mov mov push call mov test je lea or lock jne mov mov mov call lea or lock jne mov mov mov call push push call push call cmpl jne jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push push mov xor push lea mov mov movl test je push call test je mov test je mov cmp je mov test jne call lea push lea push lea push lea push call add mov mov movl test je lea or lock jne mov mov mov call lea or lock jne mov mov mov call mov mov pop pop add ret cmpb je mov test je mov mov mov push call lea push lea call mov mov jmp int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call movl movl mov pop ret int3 int3 int3 int3 int3 int3 movl jmp int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor pop ret int3 int3 int3 push call add call xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call xor ret int3 int3 int3 int3 int3 int3 int3 int3 cmpl jne call ret int3 mov test je cmp jne call mov ret call mov ret mov push mov testb push mov je push push lea pushl push push call testb je push call pop mov pop jmp call testb je push call pop mov pop pop ret int3 jmp jmp jmp jmp push push call andl decl js mov sub mov call jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push push call andl mov mov imul add andl decl js sub mov call jmp movl movl call call ret cmpl jne pushl pushl pushl pushl call ret int3 jmp jmp cmp jne repz jmp int3 jmp jmp jmp jmp jmp jmp push push call pushl mov call mov cmp jne pushl call pop jmp push call pop andl pushl call mov pushl call mov lea push lea push pushl mov call push call add mov pushl call mov pushl call mov movl call mov call ret push call pop ret mov push mov pushl call neg sbb neg pop dec pop ret push push call xor mov mov mov mov cmp jge mov mov call add mov incl jmp movl movl call call ret cmpl jne pushl pushl pushl pushl call ret int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret mov push push call pop mov push call mov mov test jne xor inc pop ret andl call push call movl call pop xor pop ret mov push mov push push push xor push push cmp jne cmp jle mov decl mov andl mov mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp cmp je push call push push push call test jne jmp movl mov cmp je push call pop jmp pushl mov call mov test je pushl call mov mov mov mov sub cmp jb cmpl je call cmp je pushl call mov call mov call pushl call pushl mov call mov cmp jne cmp je mov mov mov mov jmp pushl call pop call mov mov xor mov cmp jne push push call xor inc pop pop pop leave ret push push call mov mov mov xor inc mov xor mov mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je push push push call mov cmpl je push push push call mov test je push push push call mov cmp jne test jne push push push call push push push call mov test je push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov jmp mov mov mov mov push push call pop pop ret mov andl andl movl call mov call ret movl ret mov push mov cmpl jne call pushl mov mov call pop pop ret push pushl lea sub push push push mov mov mov xor push pushl movl lea mov ret mov mov pop pop pop pop pop mov pop push ret push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret jmp int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret jmp jmp jmp push call pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test je mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret jmp jmp jmp jmp mov push mov cmpl jne cmpl jne pushl call xor inc pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov or shl or mov not mov pop pop pop leave ret int3 jmp jmp jmp jmp int3 int3 int3 int3 mov push call pop ret lea jmp mov lea mov xor call mov jmp int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov jmp mov jmp mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov add jmp mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov sub jmp mov jmp mov lea mov xor call mov jmp mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov push mov push call add ret mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp mov push call pop ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov push call pop ret mov push call pop ret lea jmp lea jmp lea jmp mov push call pop ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov push call pop ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov push call pop ret mov lea mov xor call mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov push call pop ret mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov push call pop ret mov and je andl mov jmp ret mov push call pop ret mov and je andl lea jmp ret lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov and je andl mov jmp ret lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov push call pop ret mov push call pop ret mov jmp mov lea mov xor call mov jmp lea jmp lea jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov push call pop ret mov and je andl lea jmp ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov add jmp mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov push call pop ret lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov push mov push call add ret mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov push call pop ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 push push push lea push call ret lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp push push push mov add push call ret push push push mov add push call ret push push push mov add push call ret mov jmp mov jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 mov and mov ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp push push push mov add push call ret push push push mov add push call ret push push push mov add push call ret lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov and je andl lea jmp ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov and je andl lea jmp ret mov and je andl lea jmp ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov and je andl lea jmp ret lea jmp lea jmp lea jmp mov push call pop ret lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov and je andl lea jmp ret lea jmp lea jmp mov push call pop ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov push call pop ret lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov xor call mov jmp int3 int3 mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov jmp mov add jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov and je andl lea jmp ret lea jmp mov jmp mov jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov and je andl lea jmp ret lea jmp mov jmp mov jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov push mov push call add ret mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp lea jmp mov add jmp mov add jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov push call pop ret mov and je andl lea jmp ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov add jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov add jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov push call pop ret mov push call pop ret lea jmp lea jmp lea jmp mov push call pop ret mov push call pop ret mov push call pop ret mov push call pop ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov push call pop ret mov push call pop ret mov push call pop ret lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp lea jmp mov push call pop ret mov push call pop ret lea jmp mov push call pop ret mov push call pop ret mov push call pop ret mov push call pop ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 mov jmp lea jmp mov push call pop ret mov push call pop ret mov push call pop ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov jmp ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 mov and je andl mov jmp ret lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov and je andl mov jmp ret lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 mov and je andl mov jmp ret lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 mov jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov jmp ret lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov jmp mov lea mov xor call mov jmp int3 int3 mov push call pop ret mov jmp mov lea mov xor call mov jmp int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov jmp mov push call pop ret mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov jmp mov push call pop ret mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov jmp mov push call pop ret mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov push call pop ret mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov push call pop ret mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov jmp mov push call pop ret mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov and je andl lea jmp ret mov push call pop ret mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 mov jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov add jmp mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov sub jmp mov jmp mov lea mov xor call mov jmp mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret lea jmp mov lea mov xor call mov jmp int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp lea jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 lea jmp lea jmp lea jmp mov push call pop ret mov push call pop ret mov jmp mov push call pop ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov push call pop ret mov push call pop ret mov jmp mov push call pop ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov and je andl lea jmp ret mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov push call pop ret mov jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp mov add jmp mov add jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov push call pop ret mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov push call pop ret lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov xor call mov jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov and je andl mov jmp ret mov lea mov xor call mov xor call mov jmp int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov push call pop ret mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp push push push mov add push call ret push push push mov add push call ret mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp push push push mov add push call ret mov add jmp push push push mov add push call ret mov add jmp mov add jmp mov add jmp mov add jmp mov push call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov lea mov xor call mov xor call mov jmp int3 lea jmp mov push call pop ret mov lea mov xor call mov jmp int3 int3 lea jmp mov push call pop ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp push push push mov add push call ret push push push mov add push call ret mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp push push push mov add push call ret mov add jmp push push push mov add push call ret mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 mov push call pop ret lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp mov push call pop ret mov jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov push call pop ret mov jmp mov lea mov xor call mov xor call mov jmp lea jmp lea jmp mov push call pop ret mov and je andl mov jmp ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov push mov push call add ret mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp mov add jmp mov add jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov push call pop ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov lea mov xor call mov jmp int3 mov jmp lea jmp mov add jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov push call pop ret mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov add jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov add jmp mov jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov add jmp mov add jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov add jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test je mov mov mov mov mov mov mov mov mov mov push mov call add mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test je mov mov mov mov mov mov mov mov mov mov push mov call add mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 push mov sub push call add test je mov mov mov mov mov mov mov mov mov mov push mov call add mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push mov sub mov xor mov push push push call mov test jne call cmpl jne push push lea call push lea push call push call mov xor add call mov pop ret int3 int3 int3 int3 push mov sub push call add test je mov mov mov mov mov mov mov mov mov mov push mov call add mov pop ret lea push lea movl call push lea push movl call int3 int3 int3 int3 int3 int3 int3 xor mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push lea push push call add mov lea mov rep pop pop mov pop ret int3 int3 int3 push call pop ret int3 int3 int3 int3 push mov sub xor push push mov lea mov mov mov mov mov mov mov mov mov rep pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call push movl movl call pop ret int3 int3 int3 int3 int3 mov call push movl movl call pop ret int3 int3 int3 int3 int3 mov mov mov ret xor mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push lea push push call add mov lea mov rep pop pop mov pop ret int3 int3 int3 movl ret int3 int3 int3 int3 int3 xor mov mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 mov mov test je movl mov movl movl mov mov add push mov movl movl call pop ret int3 int3 int3 mov mov test je movl mov movl movl mov mov add push mov movl movl call pop ret int3 int3 int3 mov mov test je movl mov movl movl mov incl push movl movl movl call pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 mov mov test je movl mov movl movl mov incl push movl call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 mov mov test je movl mov movl movl mov incl push movl call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 mov mov test je movl mov movl movl mov incl push movl call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 mov mov test je movl mov movl movl mov incl push movl call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test je mov mov mov mov mov mov mov mov mov mov push mov call add mov pop ret lea push lea movl call push lea push movl call int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov push push lea push mov movl call mov push call add mov mov pop mov pop ret int3 push mov push push mov push push mov xor push lea mov mov mov push push lea push mov movl call mov push call add mov mov pop mov pop ret int3 push mov push push mov push push mov xor push lea mov mov mov push push lea push mov movl call mov push call add mov mov pop mov pop ret int3 push mov push push mov push push mov xor push lea mov mov mov push push lea push mov movl call mov push call add mov mov pop mov pop ret int3 cmpl jb mov push call add xor movl movl mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl test je push call ret int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov push push lea push mov movl call mov push call add mov mov pop mov pop ret int3 mov test je push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl test je mov mov mov mov test je mov mov decl ret mov mov mov decl ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl test je mov mov mov mov test je mov mov decl ret mov mov mov decl ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl test je mov mov mov mov test je mov mov decl ret mov mov mov decl ret int3 int3 int3 int3 int3 int3 int3 int3 mov push movl call add mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push movl call add mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl test je mov mov mov mov test je mov mov decl ret mov mov mov decl ret int3 int3 int3 int3 int3 int3 int3 int3 mov movl test je mov mov mov mov test je mov mov decl ret mov mov mov decl ret int3 int3 int3 int3 int3 int3 int3 int3 mov movl test je mov mov mov mov test je mov mov decl ret mov mov mov decl ret int3 int3 int3 int3 int3 int3 int3 int3 cmpl jb mov push call add xor movl mov mov ret int3 int3 cmpl jb mov push call add xor movl movl mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movl test je mov mov mov mov test je mov mov decl ret mov mov mov decl ret int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov push push lea push mov movl call mov push call add mov mov pop mov pop ret mov jmp 