inc cwtl adc xchg pcmpgtd or data16 push xor sub push data16 int3 or data16 adc add xchg dec push imul or data16 or je or data16 add popfw dec push data16 lahf or pushw add data16 xchg pcmpgtd outsl push data16 jo ljmpw fwait or adc or data16 or and xchg pcmpgtd inc push data16 mov pcmpgtd jne dec sbb sub data16 pcmpgtd add dec insb push mov data16 add test data16 or data16 dec push data16 ja data16 mov adc insl push data16 in out push inc xchg pcmpgtd fisttpll data16 imul scas lahf or add add add add add add scas test mov add add add mov add add add adc xor add dec test push test arpl dec add test cltd test mov test lods test mov test dec xchg push xchg das xchg inc xchg push xchg bound dec add dec add xchg enter flds dec add xchg or dec add mov aas mov push mov popa mov jb dec add mov movsl mov mov dec add mov fmuls dec add mov or dec add mov dec mov pusha mov jno dec add mov movsb mov mov dec add mov xlat mov call mov or dec add dec add mov pop mov jo dec add mov mov mov lds dec add mov clc mov or dec add mov cmp dec add dec add dec add dec add mov mov mov les dec add mov (bad) mov or add mov cmp add dec add dec add dec add mov mov dec add mov aam dec add mov (bad) mov pop lea sbb dec add lea dec lea pop lea insl lea jle dec add lea mov dec add lea rorl dec add lea push mov pop mov sub dec add dec add dec add add dec add mov mov dec add mov rorb dec add mov add (bad) add (bad) add (bad) add dec add dec add dec add add (bad) add (bad) add (bad) add (bad) add (bad) add dec add nop dec add nop dec add dec add dec add dec add dec add dec add nop dec add nop dec add nop dec add nop dec add xchg dec add dec add xchg dec add dec add dec add dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add cwtl dec add cltd dec add cltd dec add lcall test lcall mov fwait dec add fwait dec add pushf dec add pushf dec add pushf dec add pushf dec add popf dec add popf dec add popf dec add popf dec add sahf dec add sahf dec add sahf dec add lahf dec add mov dec add mov dec add mov dec add mov dec add mov dec add mov dec add dec add dec add dec add dec add dec add add add dec add dec add dec add dec add dec add dec add dec add dec add cmpsl dec add cmpsl dec add test add test add dec add test dec add stos dec add stos dec add stos dec add stos dec add stos dec add stos dec add stos dec add stos dec add lods dec add lods dec add lods dec add lods dec add lods dec add lods dec add lods dec add lods dec add scas dec add scas dec add scas dec add scas dec add scas dec add dec add dec add mov add mov add mov add mov add dec add dec add dec add mov add mov add mov add dec add add mov add add aas jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add cmp add add add stc movsb dec jmp std outsl inc test sbb addb add add add dec popa jb push add add add add add sub inc add add add and add add add add xor inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and xor dec add add sub inc add inc add add add xor push inc xor add or or add add add test lods sbb push lock add (bad) decl add add add add add add add add sbb int3 pop inc add add add add mov add mov add push jne outsl jb push outsb je outsb fs add dec popa jb push push add add out inc xchg jnp push xor add add lods add add add add sub dec add add add rcrb test jmp aam add add (bad) push or add add mov inc add add and add add add (bad) incl add add and sbb dec add add add add add add sbb add add mov add add sbb add add lock add add in sbb add add lock add mov push sbb sbb dec add add add addr16 and fsubs inc add pop add add and (bad) (bad) (bad) incl add add add add sbb mov and (bad) (bad) (bad) incl add add sbb jo inc add add inc add inc add add add add add add mov add adc add rorb push inc add rorb add add pop inc add add add add add add orl add add mov rorb add add sub add add add inc add add add add add inc add add add inc add add add add add add inc add add add lret dec add add add add add add add add mov add add and enter add add inc add add add add inc add add add push inc add and push add add pop add add and (bad) (bad) (bad) incl add add add add inc add and (bad) (bad) (bad) incl adc inc add add add add pop inc add and add add inc add add add add add and andb add add inc add add add mov add add add add add add adc dec add add add add and andb add add add add push sbb add add inc add inc add sbb add add inc add inc add sbb add add inc add inc add sbb inc add add inc add inc add push inc add sbb add add inc add inc add push inc add sbb add add inc add inc add inc add sbb add add inc add inc add (bad) dec add (bad) (bad) incl add add dec add cmp and dec xchg mov sub add add add add add add inc add add add add add add add add add sbb add (bad) (bad) lcall add dec and add add clc sub incl add add add inc add (bad) (bad) (bad) call add add add add add sub incl add add add pop inc add (bad) (bad) jmp inc add add add rorb add add inc add add add add add incl add addb add add dec popa arpl addr16 jb add inc outsl jb outsl outsb add add push push arpl insb jns add add dec popa jb push aas lods adcl repnz ss mov push xor movsl shlb jne mov test inc xchg jnp push xor fdivs mov inc sahf addr16 lret add xor or stos add xchg dec jo imul sti cld cli mov or sub jno inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add shlb inc add add add add add add add and sbb inc add ret dec add fs dec lods xor or stos add xchg inc outsl insl insl popa outsb xor add add dec lods xor or stos add xchg inc outsl jb add add dec jo imul je outsl outsb xor dec jo imul je outsl outsb xor add (bad) mov mov movsl aad xchg cmp lea dec fwait push lds rcrb test jmp aam scas pop lock lret inc xchg cwtl stos ret or inc add or add add or add or adc add add adc add or add jae gs insb xor cs insb add add add inc insl jo jns arpl insb gs imul inc add and add add fadd dec add or je jmp push mov call jmp add add add add push jo popa je push arpl insb gs imul add and add add add in dec add or je jmp push mov call jmp add add add add push jne jb push arpl insb gs imul inc add add lock dec add or je jmp push mov call jmp add add add add imul insb add add add add jne inc outsl outsb je popa insl imul add and inc add add cld ret dec add or je jmp push mov call jmp add add inc add add add add add add add add add add add add add sub add adc add push add add jne jbe imul add adc add push add imul jo outsl add add add add push add add add insl add outsb add add add add add outsl add outsb add add jae xor add and push add xor and push add xor add add add inc add inc add add add lods xor or stos add xchg mov dec sbb mov cmp jns lods xor or stos add xchg push inc inc ss dec dec add add pop pop jbe popa dec outsb push popa jb pop pop jbe popa push popa jb imul pop jbe popa push popa jb jae inc je add pop pop jbe popa dec bound outsb add jbe popa push popa jb fs inc add les pop pop jbe popa inc outsb gs je inc outsl jne fs jb outsl jb add add jbe popa inc jo xor add pop pop jbe popa dec bound gs pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec xor popa jb add jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push je push outsl inc outsb jae add pop pop jbe popa inc jb gs je add add pop pop jbe popa push je push popa jb popa insb add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa inc jb gs popa jb add add jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa push cmp outsb add pop pop jbe popa push popa jb outsl jbe add add dec xor push mov cmpsb jbe out inc xchg jnp push xor sahf aas lods adcl repnz ss cmp xor or stos add xchg push add add add add add push jb add popa jae popa jb imul add inc add add (bad) (bad) (bad) jmp add jae popa jb imul jecxz add (bad) adc add or add add inc add add add add pop add je outsl outsb add add add je outsl outsb add pop or add add add add pop add je outsl outsb xor push add add je outsl outsb xor add xchg adc add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add scas or adc add add add add je outsl outsb xor push add add je outsl outsb xor add lods add add add incl sub add add je outsl outsb xor add je outsl outsb xor rclb adc adc add add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add adc adc incl add int3 xor add cltd cmp jmp aam push or inc mov movsl aad xchg cmp cmp xor or stos add xchg movsl push or mov or inc outsl jb outsl outsb add outsl insb jns fs aaa add add inc add adc add add inc or add or add add add add add add add add roll add add and add add aam or test xlat or pop pop jae outsb push mov aas cmp mov js insl ret sub mov pop inc arpl xchg lahf add mov sub bnd cmp pop xor lods ret sub jbe or pop inc pop cmpsl inc jno mov cmc xor iret sub hlt fbld sub xsaveopt lret lret mov add jmp cld sahf cmp loopne js sbb mov adc push subb test fmull divl jbe inc les pop jge sbb push (bad) (bad) enter imul jmp xor leave (bad) lcall mov data16 ret dec outsb and mov xchg jmp inc add push xchg ds xchg sub movsb push pop sbb in mov xor pop cld shr dec out (bad) loope pushf mov xor rolb mov push lock jecxz push sub jle xchg out sbb call pop sub push push cltd push inc scas lods dec cs aam daa and test and rolb jno inc pop adc xor cmc sub cmpsb fbld iret cmp cvtps2pi lret lret scas dec add jmp sbb cld js dec aas mov inc sbb adc sbb gs roll inc xchg (bad) mov jl inc xor inc sbb push inc enter imul jmp xor out (bad) lcall dec bound rol mov and mov lods jmp xchg add inc xchg ds into xchg push mov sub sub in movsb mov mov dec or sarl loope add push mov ret lock cmp (bad) sbb and sbb push mov scas push dec mov cmp cmp test lret adc or das and pop adc jno mov cmc xor iret sub cvtps2pi lret lret scas ss mov xchg bound pop in shll mov lea ljmp jno cmp push and mov jnp repz js xchg ja push jge lret inc fs leave (bad) addr16 inc ds push fstpl fwait and shl sbb sbb popa push int3 lret inc mov jge push mov gs rclb push mov cli rorl arpl ss das sub test imul push push sbb nop notb push pusha icebp adcl jb test cmpsb push mov mov scas xchg lahf addr16 data16 mov jle shll mov mov scas pop mov dec mov movsb mov shl xchg lods inc push inc sub jp bound or pop mov and xchg mov lea ljmp jno cmp leave and (bad) std mov repz mov xchg and push js lret inc jge leave jecxz add inc ds push cmp frstor dec cmp out sbb sbb lret dec mov inc lea mov inc push xor enter sbb cli (bad) je arpl pop inc dec pop ss dec jp test imul push cmp push notb push pusha lcall sbb repnz test loop mov mov dec xchg lahf pushf inc scas cmp cltd xchg stc jle shll mov test add sub pop pop pop popf dec mov insb loopne movsb lods inc (bad) xor jp bound or pop mov and (bad) mov out mov fmuls jno dec aam and (bad) cmp std imul mov xchg and push js lret inc jge leave jecxz add adc cmp in fcmovu sahf dec cmp out and jae sbb lret dec or inc mov jge or dec pop inc and out jnp jo aad das adc (bad) mov or lock sbb adc in call push in es and sbb fcom push (bad) mov dec mov push sbb subps sub lret popf xchg jae inc andb pop ficomp outsl and mov std inc repnz bound mov ja inc je imul add loop std sbb mov and mov sub or lea ja addr16 or add outsl popa dec or inc inc cltd out mov lret cwtl push ss out repnz xor gs xor out jbe in mov repz in fcmovbe inc clc fidivr in and enter mov push adc add sbb inc inc mov sbb lahf mov sbb fistl and jb,pt (bad) mov mov mov inc scas pop test paddq notb or adc jle lret testl nop push pop push call jge ret adc (bad) daa push push fnstsw push adc (bad) jo xor xor jp add and xchg sub into adc pop std popf and mov stos int out jmp sub pushf iret pop or ret das popa dec add inc outsl cltd out mov inc cwtl push cmp repnz and xor insb jbe lcall in repz fidivr in and mov scas adc push xchg (bad) mov pop adc sbb inc inc lds repz mov mov mov sbb (bad) xchg aas push or fistl and jmp fnstcw aad (bad) mov icebp scas pop movsb loope inc fisttp test rcl inc sbb or xlat adc pop lods dec sbb push push call jge sahf fwait cmp sub mov fstl (bad) scas jo push dec xchg (bad) pusha cli xor xor jp mov into adc pop std sbb mov cmp loopne stos mov sub pushf iret jmp cmp ja ret das or add outsl popa out rorl cmp bnd out adc xor dec insb xor out jbe in mov repz in fcmovbe and fidiv mov push adc adc add xor inc sbb mov xchg (bad) pop aas push sbb fistl and jb,pt (bad) mov cmpsb and mov int inc scas pop loope mov rcl sub xchg xchg or insl xlat adc pop lods lret notl dec call push xor pop fwait push adc fsubl push jae mov push adc ja jae sarb popf repnz push lahf mov xchg ficompl jne mov push pushf imul adcl push fsubrl cmpsb andl movl adc lods in stos pop lock loop lods cwtl fucom lods sub and addr16 (bad) sub add dec mov gs sub sub (bad) imull sbb mov cmp aad adc ds push inc mov movsl cs std jl jno ss (bad) pop jge je or or inc movsb mov ret push add xor sbb sbb cmp mov push xchg or xchg jg test dec fbstp loope (bad) pop or ror pusha pop je xchg hlt cmpsl cmp mov mov push xor outsl ljmp stos rorb xlat jae mov push lahf sbb xchg dec pop inc mov jne pushf xor xor mov adcl push mov (bad) andl (bad) js mov sub mov stos inc lock loop pop cwtl fldl (bad) in (bad) adc pop das insb dec mov gs jno sub (bad) not sbb int3 (bad) mov mov jp push popa mov inc cs xor cld movsl sbb std (bad) pop jno je or or inc movsb lcall dec xor sbb lcall pop mov push xchg mov dec mov cli dec cmc jg dec mov and into loope pusha pop je (bad) hlt cmpsl pop adc mov ljmp xchg rorb xlat jae mov repnz sbb dec push inc mov mov xchg pushf xor and push mov pop push and clc push adc fs scas movsl out (bad) cmp add jl out pop test ret mov stos inc adc in pop pop lock (bad) in (bad) adc inc addr16 mov add dec cltd jno sub xor aam leave int3 lea sub dec add icebp mov fsts mov jne cmpsb lods jbe xchg jmp das cmc or lret sbbl cmp mov mov popf jnp xchg adc scas loope adc cltd shl mov or negl add negb pop cmp dec inc and jg mov add int3 pop std arpl stos out lahf out push add cmp and push xchg aam ret test add mov cmp lea xchg sub stc enter rcr push sub push lock push inc sti mov xor mov and push and push pop and fisub frstor aad lret call adc mov nop inc add icebp mov jae mov jecxz cmpsb or (bad) lods mov xchg cmc or lret subl clc icebp adc bound mov leave jnp lods adc popf loope xchg xchg mov cltd shrb mov out test jb or pop cld add outsb pushf mov pop cmp dec inc fmuls and jg std push int int3 lahf out push add out pusha in cmp aaa repnz push test xchg scas or sarl cmp lea xchg sub stc enter (bad) jge sub push addr16 push inc lock pop mov sti mov sub loop pop rcl adc and pop data16 mov aad in xor imul adc test jns mov nop inc inc xchg mov jae fnstenv mov jecxz cmpsb or (bad) lods jbe xchg jmp das cmc clc icebp lret (bad) fwait daa mov (bad) mov popf jnp xchg adc xchg shrb ss (bad) cltd sbb mov or idivl pushf cmp sarl shl pop add jle and pop fiaddl popw fcomps mov addr16 arpl (bad) loop or cmp aaa jl nop lret orl mov or pop jno xchg ss push iret int3 mov xchg jae push push je mov add add fmull loopne ja sbb mov adc push (bad) repnz dec jecxz cmp push xor and les sbb lds clc push mov push or xor xchg pop es insb punpckldq fs jg outsb subl xchg mov mov xor cmpsb fldenv ds mov sub xchg ja dec pop sbb cmp (bad) cld sti jne lods in aad jns outsl adc mov imul sarl in sub jle xchg inc mov inc and pop pop xchg fsubs mov cwtl (bad) (bad) loop or cmp (bad) jl (bad) lret adcl lea adc or ss mov xchg jae push mov sub sbb fcompl rorb mov aam sbb adc sbb ret inc cmp push mov and les sbb mov mov push or xor xchg pop test insb in bound es jg outsb andl mov adc xor cmpsb fnstenv ds or or xchg dec mov xchg pop cld sti cmp lods (bad) outsl aad jns in xor shlb (bad) mov dec idivl fs test xchg sub movsb jnp (bad) mov inc and pop fiaddl pop fwait mov cwtl (bad) arpl scas imul std (bad) daa (bad) cmp jl nop lret gs lea dec adc or ss mov int3 jae fildll leave mov sub sbb fcompl rorb mov ja sbb adc sbb push push xlat adc popa jp fwait cli or test call (bad) jno mov rcrb xor mov in adc (bad) cmp and cmpsb aaa (bad) sbb sbb mov sub sti mov push jmp inc xchg push loop pop cmc fsub lock stos ret in fist int les pop add leave dec push (bad) mov hlt cmp daa ljmp cmp or cmpsl jns push mov scas loop ss cld inc pop xchg std xor iret nop adc sbbb and inc lcall out xor dec (bad) add cmp imul add lret adc lods dec in mov pop dec xchg jle dec sub and popl pusha mov ljmp cwtl test mov push inc outsb mov mov bound aam adc popa jp fwait cli icebp inc sbb aad or jl jno xor xor and mov fistl dec (bad) frstor sbb aaa pop cmp sti mov push sub push jmp pop xchg fsub loop stos cmc lds fist ret in pop gs leave add roll repnz dec cmp daa (bad) divb cmc daa int3 ljmp or cmpsl jns push mov scas loop xor inc cs std fstps iret pop adc nop sbb and inc lcall inc xor cmp dec fsubrs fidivrl lret adc clc dec in mov pop mov sub and popl pusha mov ljmp cwtl adc mov push inc test setne push aam adc bound xlat cli icebp popa sbb fwait test inc iret xlat aad pop call (bad) jno mov or and mov fistl dec (bad) cmp and out (bad) cmp mov push sub inc mov or dec pop xchg push loop stos cmc faddl int3 adc (bad) fbld aas leave add add hlt dec push mov repnz sub ljmp cmp jbe jb mov (bad) pop xor stos ret movsl scas jne je (bad) or (bad) lret enter fistp mov jnp lods mov cli loopne xchg ss cmp mov xchg idiv sti mov (bad) stc out pop fiadd xor dec jecxz xor aad lret mov add mov cmpsl int int3 inc out push mov and xchg mov bnd jae mov shlb lods sbb cmp in das pop dec (bad) hlt stos xor cltd sbb fcmovnu pop leave mov mov pushf sbb scas aas xchg mov pop sub popf mov into fs mov jb insl push pop push mov mov jp fnsave inc rorl mov push movsb sbb lahf bound nop sahf inc in add out add cmpb icebp adc mov daa pop movsl scas stos push je (bad) or xchg inc or notl mov jge imul lods push sar out xchg mov push loopne push rorl sbb xor test sti iret lds negb out pushf fiadd stc jg pop jecxz xor aad lret mov or cmpsl add mov add pusha xchg flds fdiv jle jae mov test push sbb shr in lods pop dec cmp stos das sub jo cmp popa (bad) push push pushf aas xchg aaa xchg pop scas (bad) popf mov jae inc into mov andl push pop pop inc and ds mov gs inc cmpsb inc jp dec ja insb (bad) mov sub sbb push lahf push outsl test scas add jnp and jmp mov daa pop xor movsl or xchg inc (bad) lea xchg lret enter fistpll jge imul lods push mov jnp xchg mov push loopne push ss cmp xchg push xor idiv (bad) mov pop stc out pop (bad) xor dec jecxz xor int lret mov std add out push mov and bnd jae fcoms xor fsubs pop mov and adc xchg out push push lret inc add (bad) sub scas int daa mov sub mov xor dec (bad) pop aam jmp loopne add push mov shr in push movsb mov pop jge and mov jp sub mov scas or shrb ss es lret pop subl (bad) jo inc jo mov hlt xor movsl aaa mov sub repnz cmp addr16 lods xor mov add call sti popf cmp fildll je xchg aas jno adc push jg negl pop push test dec test mov inc aaa lods mov xor add je cmp data16 add or mov push pop xchg jl dec sub arpl pop mov pop int movsb mov setno mov rclb imul (bad) xchg pop or aam cmpsl pop ja cwtl imul ds mov movsl or push outsb jb cltd mov pop adc jle sahf mov fmuls dec rcll js jecxz pop and push mov enter sti imul negb fabs fild test shr (bad) lret sub (bad) adc cld out icebp inc rep mov lahf popa fwait loopne repz scas and out test mov dec mov push add inc sub iret adc cs lea or and jge xchg fs inc xor aaa jg jmp cmp aad je mov add or popf in les jl dec sub sbb insb sub arpl add mov setno xchg adc xchg push clc (bad) mov das andl lea mov (bad) jae (bad) (bad) dec dec xor pop dec jns cmpsl sub ret int xchg xor cmp pop mov sbb push (bad) cmc pop cltd pop mov lahf out sbb aam insb sbb loope mov test movsl add fwait mov scas xchg cli gs xchg jg cmpsb cwtl pop xchg (bad) mov lods add sub pop push scas pushf inc mov mov inc lods jns xor sub js popa mov or adc out mov mov mov xlat xchg dec into enter cmp push and mov jp repnz mov jbe xchg jbe push jl leave loop aas arpl andl inc cmp popf or sub lcall and dec or push lret lret jnp movsb push mov lahf das lea mov xor mov stc rorl bound jns cs dec int cmpsl xor cmp pop mov sbb mov pop push xor pop out orb (bad) aad and inc pop rclb popa ds xor mov jns int3 sbb push and push cwtl lahf lods out fildl sub daa mov push add mov out mov xchg in test repnz ret sbb sar dec cld jbe out fs call sub push cmp lds cmp (bad) fisub pop jno jge cmp add and fcomps inc ss outsb sub test pop insl mov cmp and fwait sub jg pop ret test das mov int inc pop rcrl push xor sub mov arpl sbb enter nop push pop add mov rcrb aad orb add scas adc cltd xchg ds stos jp popa xchg (bad) xor jns int3 sbb inc jo gs adc andps push pop fs mov cli fnstsw and ljmp push fistl sub movsb ja mov add dec popl xchg mov jb xlat xor and mov je mov das mov cs divb sbbb cmp hlt enter idivl push add loopne push (bad) shrb js inc fcompl sub (bad) push ret xor sbbl insl cmc std lds fistpll push jg pop inc sbb jmp dec insb (bad) mov or jle cld add in adc xor pop jecxz jnp in dec jmp adc pop aam dec ret inc lods pop push push inc in or cmp iret (bad) cltd xchg outsl fidivr pop mov push imul ds aaa xor mov jae inc jo gs adc addr16 (bad) pop mov push frstor out loop xor push rclb int ja mov cmpsb outsb dec insl inc inc add mov cmp jecxz lods inc (bad) xchg push xor loop out or fdivl sbb push dec ljmp xchg push loope (bad) int hlt fidivl call pop les jnp pushf dec push xchg mov cwtl (bad) in mov jg lds aas mov out sub cmc fwait mov adc xor pop lea outsb inc sarb int3 test leave mov fnsave lods fisttpl shlb jle push add push sarl (bad) shlb gs adc mov dec in clc sbbl sub xchg cmp daa mov or fnstenv sbb das inc xchg sub divb (bad) loopne and iret fmulp adc and inc push stc cltd and in add jmp mov xor lret pop arpl sub mov mov or jo (bad) je xor loop popa or scas xor mov ljmp int push fidivl call test les dec push xchg mov cwtl (bad) in mov cmp jmp jae cmp into pop mov mov dec idivb arpl test fisubrl add je mov pop pop flds pop lcall scas push mov cmp leave scas mov dec mov mov xor aam inc jnp int jb fisubr sub dec mov mov (bad) mov fistp rorl fistp fwait adc pop jb icebp test nop bound cmpsl roll push mov das pop jl ret mov ret jns notl hlt imul sub (bad) and xlat push and rcll cmpsb cs movsl insb outsl lods inc clc adc mov insl inc movsb subb adc or adc lock mov cli jge stos cmp in jne mov jle idivb arpl shl dec add je jp inc lea mov pop xlat pop test std data16 popa lcall rorb idivb test and mov insb lret pop pop add int mov lock jp and imul or outsb cmpsl mov in mov or push inc jno pushf sub cwtl fs sbb pop lods arpl sahf inc hlt inc pusha add stos adc rcr mov cmp aad xorb and test sbb test fchs test (bad) jmp push sub mov push out cld popa xchg and sub scas cmp mov daa adc xchg xor lods (bad) jbe add (bad) dec cmp addr16 stc js insl adc cmp dec pop mov jl xchg push pop pop inc lahf mov mov dec xor sbb inc xor scas es (bad) dec popf push or mov test and dec fldt rorb pop adc xchg lock sahf add push and xchg test jecxz cmpsl mov in mov or adc inc dec pop xchg jns sub xlat ljmp std mov sbb pop push xchg cmp xor pop xchg jg lock leave sbb jnp enter (bad) cli test lcallw aas gs fdivrs movsl cmp in pop mov and jo push stos or mov scas mov addl sbb mov jae cmc popa and out jmp mov iret in mov (bad) sub test cmp or (bad) pop push mov outsb push in hlt add mov out and dec aam imul fstps loope add cmp cli pop inc sub fdivrl mov adc mov lods pop into lret pop mov jmp push inc fisub das (bad) sub xor push stos push rcll inc out pop xchg adc jns cmpsb mov fmul les jns mov push and arpl sbb cmp out xor (bad) imull sub pusha int3 shlb push lahf and pop and xchg mov inc shll mov jne mov movsb imul inc add jge and aad das mov fbstp jno mov in out add icebp add and sbb jge xlat mov mov cltd ja xchg push mov nop mov xchg int popf lret mov jg outsb xor pop ret std (bad) repnz mov push jecxz push cmp iret jl inc ds call scas xchg (bad) pop enter leave cmpsb ljmp ljmp dec adc (bad) rclb mov push dec into mov xor fmul xchg xchg (bad) es les mov push and arpl sbb sbb out scas pop dec cmp lods xor mov inc and shlb push int3 and pop and popa cmc xchg pop outsl pushf xor add mov enter add jo mov mov add dec ss sub fstps lods sub mov cmpl fidiv xchg je in icebp insl push xor gs js cltd dec dec dec jne in push (bad) push mov pop xchg cmp sub ret mov jle push jb adc mov incb stc nop inc movsb xor and mov mov sahf sbb mov (bad) fmuls mov lret int iret dec sarw mov add dec arpl cwtl mov push jbe xchg xchg xor pop (bad) mov pop stos insb (bad) or test in pop inc (bad) mov repz sti in fidivl lcall mov pop fistl adc outsl xchg xor xchg lea jns add mov jo mov cld aas push inc cmp adcb jno les aam gs outsb cmp lods mov cmpl fidiv (bad) push in (bad) data16 jns imul arpl fsubrp xorl jbe call es stos outsb jnp fwait stos push lock cmc mov roll ffreep into xor mov lcall cltd shr mov cmpsb rol leave push lret inc mov (bad) lret pop xchg mov dec pop inc fstl xchg lods xor jno jae or fcmovnbe sbb push cmpsl jmp gs jecxz mul push (bad) outsl cmp fstps test push xlat ret icebp adc lods ds imul cwtl cs mov jle les push pop and fdivp clc mov mov xor inc jl dec out daa xchg insl out pop aad rcrb sub push loop mov fisubrl jo loope pusha imul je xchg inc ret fsubrp push mov xchg int3 mov call mov stos push outsb mov lock roll ffreep and and jbe mov insl sarb push jle negb pop xchg test nop mov inc xorl xchg ret pop jnp sbb push inc or add loopne,pn dec in les mov pusha fs shrl inc popf adc aam inc fcoms lret jg int3 xchg adc or adc mov mov dec adcb adc jne adc mov mulb dec cwtl mov add sub mov jl fs (bad) sbb js cmp sahf xchg push dec sub popf shrl xor push add add pop movsl push jg inc fwait adc outsb xor push hlt repz movsb jp int jno fisttpll aaa (bad) pop leavew lods ja out mov mov (bad) pop out fmull mov xchg cmp sarb pop pop iret push xchg test nop mov inc addl xor je mov test pop std test inc or add jmp inc push mov jp andb xchg and dec jge sbb bound addr16 mov pop nop dec out push push xchg add sub push les xchg es jecxz cmpsb pop or rcll in pop jbe xchg (bad) or push in xor mov into push jns mov push lahf repz pmulhw cmp and xor push xor and out lea (bad) pop lock in enter ds mov sub inc adc scas out out pusha ss sub repnz xor stos jb outsb add cwtl dec mov stos fisubr xor aad inc adc mov cmp jnp dec arpl dec aas inc xchg inc mov ljmp sbb inc aam ret (bad) mov (bad) mov inc jmp adcb fisttp imul mov sub addr16 mov pop int3 dec out push push nop sti add cmp mov mov jecxz xchg pop or rcll cmpsb pop jbe push mov clc (bad) mov popa les adc sub xor adc je sarb lret mov pop add jle ja sahf out pop fnop fdivs add imul dec xchg pushf lcall xchg leave jp jl adc int mov lods add insb imul sbb fiadd jmp out inc iret cs and xor or adc push addr16 in mov (bad) xchg int3 cmc call or fimull cmp push pop jns sti stos insl (bad) jmp icebp cmp nop and xchg jne enter jnp (bad) loope add cmp je aaa aas pop loop xlat fistpl cltd push sbb adc sub dec or mov or (bad) dec loope mov mov (bad) mov popa (bad) clc xchg sub sub outsl cwtl jle lock xor pop insb pop xlat (bad) dec lds cwtl sbb cmp ror pushf xchg mov aas jg mov push insl and mov inc test cmp popa push flds cmp mov sub fsubrs push inc pop imul lcall in in xor push das shlb test mov mov xchg xchg add (bad) fldt (bad) repz ficoml mov ja test mov xor aaa int popf insb bound lret xor negl ret xchg push flds sub shrl rorl (bad) pop or leave (bad) je mov mov loop or push aad jns mov in jb outsb xorl out xor call lock xor pop insb jge (bad) pop lds cwtl sbb xor stos cmp rcrb aas lret mov fnstsw insl shrl pop fs and cmp mov xor jns add and push mov push sbb popa dec push sti pushf addr16 cmpsb mov xlat test mov ficom pop data16 sub inc ret dec inc inc outsb cwtl out scas dec adcl ja xor vmread je cwtl (bad) or mov sub repnz fdivrl jmp cmp mov jge scas adc pop lahf push push xchg mov fwait nop call sbb inc test xor enter add jo mov sbb lds ficoml and cs or stos mov lock (bad) out cmp cmp xchg push roll xchg insb or aam push or out dec pop addr16 push push xchg jb cltd cmp (bad) rorl cmc jb adc outsl repz stc xor das and push jecxz rclb es sti sbb dec cmpsb mov xlat test mov ficom ljmp ret dec incb sub or push (bad) imul push lods lock mov outsb out fimull daa xor push arpl test mov inc sti adc fcomi cltd jo cmpsl subl pop cmp iret jnp pop sbb push dec movsl repz mov inc cmpb test sbb inc sub js mov adcl xchg dec data16 ret out dec add sub inc aam and mov push test hlt mov rorl (bad) cmp xchg adc and sahf dec inc adc das popf mov xlat cmp push ror in loope fdivrl fmul push mov mov add adc push loope mov adc and fwait bound hlt stos or cmpsb dec pop aaa lcall mov or jl aas push mov push (bad) xor mov fucomip fisubl daa xor push arpl test (bad) scas inc cld adc sti negl push jo cmp pop or push jnp repz or add mov out xlat cld jnp jo xor shll (bad) mov or or cmpsb inc mov xchg dec xor aad mov dec and dec int3 dec int jmp dec lahf dec jecxz mov dec decb dec mov dec fisttpl dec daa dec repz mov dec test dec cmp dec xchg dec loopne mov rorl dec decl dec xchg dec in dec (bad) dec in scas dec mov dec test dec ss hlt dec (bad) dec test dec call dec cli dec mov dec cmc dec xor dec clc dec rorb in dec in dec mov dec rorb dec orl nop dec out sahf dec mov dec rorb dec sti dec into dec (bad) dec xchg dec in dec mov dec mov dec fmuls dec stos dec orb repz daa dec lahf dec rorl dec lea dec mov dec xor dec xlat dec jecxz (bad) dec xchg dec decl dec lret dec xor dec rorl loop mov dec fmull dec test fimul dec mov dec ds fimull dec and dec test dec loopne ss out dec fisttpl dec fisttpl dec les dec mov dec mov dec lods dec mov dec mov lock lods dec mov dec fmull dec xchg dec test dec out dec lea dec lods dec xchg dec test lcall dec in enter mov dec mov dec (bad) dec mov dec mov cmpsb dec (bad) dec orl dec ret dec icebp dec aad xchg dec jmp dec mov decl dec nop dec mov dec in fwait dec hlt dec jmp decb dec mov dec std dec fimull dec mov dec cwtl dec lea dec aas dec fisttpll dec xchg dec xchg dec xchg dec (bad) dec mov stos dec popf dec out dec cmpsb dec mov dec lahf dec cmpsl dec out dec test dec mov dec loope test dec (bad) dec rorl dec pushf dec mov dec ret dec loop cmp dec and dec out orl dec (bad) dec xor dec xor iret dec mov dec lret dec mov hlt dec mov dec call dec xchg dec mov dec in loope rorl dec xchg dec test dec (bad) dec test dec call dec cli dec mov dec cmc dec xor dec clc dec rorb in dec in dec mov dec rorb dec orl nop dec out sahf dec mov dec rorb dec sti dec into dec (bad) dec xchg dec in dec mov dec mov dec fmuls dec stos dec orb repz daa dec lahf dec rorl dec lea dec mov dec xor dec xlat dec jecxz (bad) dec xchg dec decl dec lret dec xor dec rorl loop mov dec fmull dec test fimul dec mov dec ds fimull dec and dec test dec loopne ss out dec fisttpl dec fisttpl dec les dec mov dec mov dec lods dec mov dec mov lock lods dec mov dec fmull dec xchg dec test dec out dec lea dec lods dec xchg dec test lcall dec in enter mov dec mov dec (bad) dec mov dec mov cmpsb dec (bad) dec orl dec ret dec icebp dec aad xchg dec jmp dec mov decl dec nop dec mov dec in fwait dec hlt dec jmp decb dec mov dec std dec fimull dec mov dec cwtl dec lea dec aas dec fisttpll dec xchg dec xchg dec xchg dec (bad) dec mov stos dec popf dec out dec cmpsb dec mov dec lahf dec cmpsl dec out dec test dec mov dec loope test dec (bad) dec rorl dec pushf dec mov dec ret dec loop cmp dec and dec out orl dec (bad) dec xor dec xor iret dec mov dec lret dec mov hlt dec mov dec call dec xchg dec mov dec in loope rorl dec xchg dec test dec (bad) dec test dec call dec cli dec mov dec cmc dec xor dec clc dec rorb in dec in dec mov dec rorb dec orl nop dec out sahf dec mov dec rorb dec sti dec into dec (bad) dec xchg dec in dec mov dec mov dec fmuls dec xor dec xchg dec movsl dec (bad) dec mov dec cmpsl dec mov leave dec repz jmp dec (bad) dec mov dec mov dec xchg dec xchg dec std dec jmp rorl dec and dec mov dec decl dec lock jecxz lret dec mov mov dec mov dec aad mov dec lcall dec cmp dec in dec decb dec lret dec xlat dec cmpsb dec daa dec cmp dec cmc dec ret dec stos dec cmp dec out (bad) dec mov mov dec test orb fmull dec cmp dec daa dec icebp dec out (bad) dec loop cld dec into dec xor cmp lret dec cltd dec in repz mov dec xchg dec rorl mov dec and dec hlt dec es stos dec (bad) dec ds orl mov dec xchg dec fisttpll dec iret dec scas dec xor dec and dec popf dec nop dec (bad) dec (bad) dec mov dec mov dec (bad) dec xchg dec mov mov dec (bad) dec mov dec ds mov ret dec mov orb int movsb dec cmp mov int3 dec orl dec mov dec mov dec mov dec mov lds dec pushf dec hlt dec fmuls dec in dec xchg dec fimull dec cltd dec mov dec nop dec test out dec sahf dec decl dec loope rorb mov dec fmull dec iret dec mov dec (bad) dec lock leave dec and dec mov dec lahf dec fwait dec test dec aas dec mov dec ss lods dec lcall dec lods dec les dec mov dec in (bad) dec xchg dec cli dec aam xchg dec mov dec les dec pushf dec cmp dec mov dec orl loopne stc dec cmp dec enter xor dec movsb dec repnz int3 dec xor dec xchg dec movsl dec (bad) dec mov dec cmpsl dec mov leave dec repz jmp dec (bad) dec mov dec mov dec xchg dec xchg dec std dec jmp rorl dec and dec mov dec decl dec lock jecxz lret dec mov mov dec mov dec aad mov dec lcall dec cmp dec in dec decb dec lret dec xlat dec cmpsb dec daa dec cmp dec cmc dec ret dec stos dec cmp dec out (bad) dec mov mov dec test orb fmull dec cmp dec daa dec icebp dec out (bad) dec loop cld dec into dec xor cmp lret dec cltd dec in repz mov dec xchg dec rorl mov dec and dec hlt dec es stos dec (bad) dec ds orl mov dec xchg dec fisttpll dec iret dec scas dec xor dec and dec popf dec nop dec (bad) dec (bad) dec mov dec mov dec (bad) dec xchg dec mov mov dec (bad) dec mov dec ds mov ret dec mov orb int movsb dec cmp mov int3 dec orl dec mov dec mov dec mov dec mov lds dec pushf dec hlt dec fmuls dec in dec xchg dec fimull dec cltd dec mov dec nop dec test out dec sahf dec decl dec loope rorb mov dec fmull dec iret dec mov dec (bad) dec lock leave dec and dec mov dec lahf dec fwait dec test dec aas dec mov dec ss lods dec lcall dec lods dec les dec mov dec in (bad) dec xchg dec cli dec aam xchg dec mov dec les dec pushf dec cmp dec mov dec orl loopne stc dec cmp dec enter xor dec movsb dec repnz int3 dec xor dec xchg dec movsl dec (bad) dec mov dec cmpsl dec mov leave dec repz jmp dec (bad) dec mov dec mov dec xchg dec xchg dec std dec jmp rorl dec and dec mov dec decl dec lock jecxz lret dec mov mov dec mov dec aad mov dec fisttpll dec lret dec aaa dec mov dec mov dec cltd dec fmuls dec call dec call dec in dec mov dec mov cmp dec jecxz stos dec loope rorb dec jmp dec (bad) dec test dec cmp dec test rorl es popf dec mov dec fwait dec ret dec mov xor dec lahf dec aad nop dec orl std dec scas dec lock aas dec ds cmc dec in dec xor dec lds dec xor dec fisttpl dec mov dec rorl dec rorb rorb dec fimull dec xchg dec jecxz aad (bad) dec xchg dec leave dec int3 dec hlt dec ljmp dec cld dec repnz lock lea dec xchg dec xchg dec lret dec pushf dec out dec repz sti dec orl test dec cmp dec orb loope mov dec into dec decl dec xchg dec xchg dec (bad) dec ds scas dec fimul dec (bad) dec decb dec std dec cmc dec xchg dec rorb dec rorb mov dec out jmp es mov lods dec rorb dec xor dec lds dec cwtl dec icebp dec xchg dec int ret dec fimul dec loop mov dec mov dec xlat dec fmull dec in dec mov dec cmp xor dec mov dec cmp stos dec enter in popf dec iret dec xchg dec clc dec (bad) dec mov dec cli dec out mov dec xlat dec mov and dec enter mov dec loopne out dec xor pushf dec xchg dec fmuls dec test sti dec int nop dec jmp dec xor dec mov dec fisttp dec icebp dec fisttpl dec daa dec mov dec repnz fisttp dec cltd dec cmp dec test dec mov lcall dec ss in dec movsb dec in loopne mov dec lret dec aaa dec mov dec mov dec cltd dec fmuls dec call dec call dec in dec mov dec mov cmp dec jecxz stos dec loope rorb dec jmp dec (bad) dec test dec cmp dec test rorl es popf dec mov dec fwait dec ret dec mov xor dec lahf dec aad nop dec orl std dec scas dec lock aas dec ds cmc dec in dec xor dec lds dec xor dec fisttpl dec mov dec rorl dec rorb rorb dec fimull dec xchg dec jecxz aad (bad) dec xchg dec leave dec int3 dec hlt dec ljmp dec cld dec repnz lock lea dec xchg dec xchg dec lret dec pushf dec out dec repz sti dec orl test dec cmp dec orb loope mov dec into dec decl dec xchg dec xchg dec (bad) dec ds scas dec fimul dec (bad) dec decb dec std dec cmc dec xchg dec rorb dec rorb mov dec out jmp es mov lods dec rorb dec xor dec lds dec cwtl dec icebp dec xchg dec int ret dec fimul dec loop mov dec mov dec xlat dec fmull dec in dec mov dec cmp xor dec mov dec cmp stos dec enter in popf dec iret dec xchg dec clc dec (bad) dec mov dec cli dec out mov dec xlat dec mov and dec enter mov dec loopne out dec xor pushf dec xchg dec fmuls dec test sti dec int nop dec jmp dec xor dec mov dec fisttp dec icebp dec fisttpl dec daa dec mov dec repnz fisttp dec cltd dec cmp dec test dec mov lcall dec ss in dec movsb dec in loopne mov dec lret dec aaa dec mov dec mov dec cltd dec fmuls dec call dec call dec in dec mov dec mov cmp dec jecxz stos dec loope rorb dec jmp dec (bad) dec test dec cmp dec test rorl es popf dec mov dec fwait dec ret dec mov xor dec ret dec fimull dec mov dec cmp dec lea dec mov dec xchg dec xor dec xlat dec stos dec xlat dec ss rorb les dec cmp dec xchg dec test dec mov movsb dec test test dec fmuls dec orl mov dec mov dec xor cmp dec and dec enter cltd dec les dec mov dec lds dec iret dec mov dec mov lret dec mov int mov dec and dec fimul dec lea dec lods dec in test rorl dec xchg dec and dec enter mov dec lock out cli dec (bad) dec mov dec (bad) dec cmpsl dec rorb in dec xchg dec mov dec cmp dec pushf dec xchg dec nop dec lods dec sahf dec mov xor dec ljmp dec xchg dec fwait dec mov dec fisttpll dec xchg dec std dec orl dec lahf dec cwtl dec mov (bad) dec sahf dec fimul dec xchg dec ss xchg dec cmp mov jecxz popf dec xchg dec cmpsb dec cli dec repnz xor dec rorl lret dec mov mov dec lret dec scas dec mov dec pushf dec fisttpl dec cmp ret dec loop loope decb dec (bad) dec scas dec (bad) dec cmp dec movsl dec (bad) dec cld dec in mov dec scas dec mov dec icebp dec into dec mov dec fmull dec xchg dec test dec out dec mov mov out lods dec loop lcall dec out (bad) dec lret dec ret dec scas dec call dec int3 dec mov dec mov dec clc dec (bad) dec and dec in dec mov mov dec aad xor dec into dec cmp dec decl dec xchg dec sti dec (bad) dec (bad) dec int xor dec decl dec mov dec movsb dec fimull dec mov dec cmp dec lea dec mov dec xchg dec xor dec xlat dec stos dec xlat dec ss rorb les dec cmp dec xchg dec test dec mov movsb dec test test dec fmuls dec orl mov dec mov dec xor cmp dec and dec enter cltd dec les dec mov dec lds dec iret dec mov dec mov lret dec mov int mov dec and dec fimul dec lea dec lods dec in test rorl dec xchg dec and dec enter mov dec lock out cli dec (bad) dec mov dec (bad) dec cmpsl dec rorb in dec xchg dec mov dec cmp dec pushf dec xchg dec nop dec lods dec sahf dec mov xor dec ljmp dec xchg dec fwait dec mov dec fisttpll dec xchg dec std dec orl dec lahf dec cwtl dec mov (bad) dec sahf dec fimul dec xchg dec ss xchg dec cmp mov jecxz popf dec xchg dec cmpsb dec cli dec repnz xor dec rorl lret dec mov mov dec lret dec scas dec mov dec pushf dec fisttpl dec cmp ret dec loop loope decb dec (bad) dec scas dec (bad) dec cmp dec movsl dec (bad) dec cld dec in mov dec scas dec mov dec icebp dec into dec mov dec fmull dec xchg dec test dec out dec mov mov out lods dec loop lcall dec out (bad) dec lret dec ret dec scas dec call dec int3 dec mov dec mov dec clc dec (bad) dec and dec in dec mov mov dec aad xor dec into dec cmp dec decl dec xchg dec sti dec (bad) dec (bad) dec int xor dec decl dec mov dec movsb dec fimull dec mov dec cmp dec lea dec mov dec xchg dec xor dec xlat dec stos dec xlat dec ss rorb les dec cmp dec xchg dec test dec mov movsb dec test test dec fmuls dec orl mov dec mov dec xor cmp dec and dec enter ret dec fwait dec xchg dec out test dec xchg dec fisttpll dec ss int3 dec clc dec cltd dec (bad) dec cli dec pushf dec in (bad) dec lock icebp dec scas dec lods dec fisttp dec mov dec rorl dec (bad) dec aad (bad) dec mov dec rorl dec mov (bad) dec mov cmp test decl dec aas dec and dec jmp dec mov dec xchg dec mov dec (bad) dec aam fimull dec rorl orb mov dec call dec in mov dec xor dec daa dec lret dec in dec xor dec ret dec xchg dec rorb icebp dec fmuls dec fisttpl dec clc dec es rorb call dec orb nop dec xchg dec stc dec loopne int xchg dec cltd dec (bad) dec rorl dec mov dec stos dec jecxz repz xchg dec into dec mov mov and dec les dec les dec in dec out dec cmp dec mov dec rorb dec xchg dec xor dec popf dec xor dec xchg dec mov dec mov dec mov dec mov (bad) dec mov fmull dec orl mov cmp dec xchg dec rorl dec loope mov dec loope xor dec out orl dec repnz (bad) dec mov dec fimul dec cmpsl dec popf dec orl mov dec cmp mov dec cmp dec sahf dec xchg dec xlat dec and dec decb dec xchg dec call dec decl dec mov dec xor dec loope lds dec (bad) dec (bad) dec mov dec orb in xchg dec aam mov dec fisttpl dec int test and cmp int xchg mov pop lods aad jg mov jne jbe test ret xor es xchg insb out or arpl icebp pop lcall xor pop pushf imul sbb cld xlat cld pop call jbe and mov mov push in lret adc push mov push int inc fs jae inc fcoml sub inc or adc ja jmp shlb fiadd add jae pop clc addr16 jle xlat pop loope adc pop in in jno pop push pop leave sar das adc adc ret lea outsl es xchg insl out jl jno,pn arpl icebp pop lcall aas mov fistpl je (bad) xor data16 int andb mov scas lret (bad) out bound (bad) fsub mov mov daa mov divps sbb inc fcoml push jecxz bswap add add gs daa ds (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov and add int3 xchg sbb out sbb mov sbb sub add cs (bad) mov push repnz add call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fldl add andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor inc pop fstps je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or add add jp icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret add pop mov push ljmp out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp add ret loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call sti mov (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb add inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub add add mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov add inc adc pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je add add (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl add mov sbb mov fstps je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea xor es xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 add pop in lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs roll add add jo fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml add sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov ret lret paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fildl add aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor add ficoml mov fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall add add sahf or nop xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne add add or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc add push mov test mov push ljmp out or arpl icebp pop lcall xor pop (bad) jmp xchg mov daa cwtl pop lret and add jne out mov xor int cmpl push inc dec iret mov xchg pop ficom push pop in sub cmpsb int popf aad push aas sub jl js add loop mov movsb test hlt aas jle xor adc add add sub fmul pop push cwtl mov iret pop adc and rep in dec roll xchg scas cli adc mov or ja mov dec mov clc lods cmp test dec add mov xor shl pop aam mov daa xchg add and in cmp add arpl in xor cmp lods shr push and xchg stos cmpsl loope xchg dec and test mov out bound inc add add jo xchg jmp aas mov mov adc fimul and (bad) (bad) sub mov movsl push pop adc dec mov xchg inc push mov ret sub out or mov lcall repnz cmpsb jmp inc fadd inc xchg loop adc testl (bad) out pusha aam mov jg outsl ds cmp cmp inc pop pop fistpll nop movsb out xchg sbb push int push ljmp jbe or mov sbb jg (bad) (bad) dec decl lcall lods pusha pop cmpsb ret mov das xchg pop mov std push (bad) aam add inc pop stos adc pop arpl xor repnz xor sub out out fldcw pop xchg ret hlt orl repz fstps ja xchg adc pushf push and outsl iret pop push xchg inc dec lock fbld js not fs sbbl int fmul paddd add mov ja inc negl xchg pop int gs orb cs arpl push repnz xor fcmovne sbb mov aad addr16 push push fabs icebp or dec lods in pop rol call rcl mov fidivr push daa js xchg push mov xor mov xchg rolb lret jne add dec sbb ss fs push push rcrb dec or sti inc lcall and pop mov cmp stc ret mov (bad) lods daa mov add insl out nop fsubrl int pop stos sub jp punpckhwd jecxz imul dec mov out push fcmovnbe movsb lds in rolb pop outsl mov xchg fwait aad mov mov (bad) jbe imul movlps push ljmp xchg dec pop push pop (bad) (bad) arpl jp pop les lds mov jecxz lret xor sub outsl out popa xchg xor xchg stos add (bad) xlat cmpsb test inc mov out xchg lahf mov sbb dec mov sahf arpl (bad) dec mov sub movsb mov les in cmp xlat pop popl repnz dec fisub mov sahf jmp pop push clc dec int3 dec shl lods xchg jbe js mov jae fbstp loop and mov psubq mov xchg es inc push scas sbb xor jno arpl int fcompl push fnstcw sbb add add pop sub sub bound cwtl rcrl mov push icebp push mull scas fistpl loop fdivr mov sub jne adc mov jo pusha and mov cld ret lds dec stc loopne pusha jo pop pop in movsl jecxz fldenv jnp lods gs or int3 dec shr jbe xor repnz aam ret mov push (bad) push fnop (bad) lods shrl adc xchg (bad) add mov pop call jp xor adc aad pop fstps das inc and sbbl xor sti push xor lock out mov dec xor jnp sub insb sbb jg movsb dec in push int jmp mov ss pop lcall xor fs gs lahf mov movsb lds push out cltd lods lods dec jl push int3 xlat ror xchg fwait lds sub mov add add push int ljmp out (bad) out jno call lcall bound js pop adc xor ficoml mov xchg adc pushf pop inc dec and cli bnd cwtl outsb lock inc xor mov orl test dec dec enter in sbb test and (bad) fcmovnu push sbb cmc mov sub mov and xlat cmc loopne add jmp sub (bad) idivb mov adc and add add movsb ss push lcall or pop mov or and stos adc xchg insb out imul add pushf test xor add cs mov ljmp fs mov and (bad) (bad) inc or sahf insb mov in pop les (bad) jl cltd xor sub adc repnz pop mov mov outsb mov cmp repnz repnz xor lea add in enter inc inc inc mov mov xchg pop popf mov gs or xor mov mov jge xchg or ljmp sbb mov xlat mov pop lcall sbb mov push jne lcall xchg sub daa xchg xor adc (bad) scas in out fldl2e push and cmpsl sub pop int add push sub add add lds lods loop mov imul sbb (bad) mov push in lret dec jl pop mov mov mov fwait adcl jp hlt cmp lahf jae mov add adc or mov sub xor cli xchg push scas push dec js lods lcall mov push fisubr xor pop fwait jo sbb and add loopne in fcmovu nop aad in pop les mov cmpsl daa mov out (bad) add jae add pop insb xlat lods cmpsb push aad rorb or add gs lahf jp lea jo cmp (bad) xor repz cmp lea pop push xchg cs adc (bad) cltd ret jmp rorb testb out mov xchg mov or sbb pop sbb into ss movsb ret and dec pop fwait adc (bad) mov or les push sbb jge push lods stos (bad) xor movsb jo pop push jae imul and jp in jecxz pop lahf pop gs xchg inc pop (bad) mov xor push in lock ljmp mov inc pop jge pushf lods xor mov gs cmp movsb inc ds push mov (bad) dec (bad) jbe bound pop push addr16 jp or in lret lret mov pop and popa repz sti mov pushf cld lods xor and xor repz add and sub xchg rolb jl inc pop sbb lret mov mov out mov xor pop aad pusha add dec inc lock daa inc pop movsl mov pop add pushf jmp adc or (bad) mull pop fisttp fsub cmpsl pop inc mov mov pushf push adcl stos pop into xchg test push (bad) sub mov or fldl icebp pop lcall cmp jg fstps mov add roll in mov or enter imul cmp adc pusha (bad) sub in rolb adc paddd mov test stos lods aas stos sub cmpsl lds ja gs iret inc xor cwtl ja adc sbb mov aaa inc in lret pop adcl rclb adc xchg or popf xchg mov adc fstps stc insb and mov or add out repz or xlat push pop (bad) mov jmp out mov data16 jmp scas fcmovnu pop imul shl mov daa leave daa mov (bad) mov sbb ss (bad) add insl push adc cmp gs adc dec push jno jl arpl call (bad) (bad) dec inc dec outsl mov scas cmp pop je mov push or dec xchg cs adc inc lcall outsb in jmp es push mov mov call add out dec hlt (bad) push xchg loope aam (bad) jmp xchg mov stos mov jg jae mov mov movsb xchg test (bad) fsub mov or adc paddd sbb (bad) stos sub and sbb cmp gs and fnstcw push cwtl fs gs lahf mov movsb lds push out cltd lods inc dec jl mov dec push adc pop add add cmpsl hlt (bad) ja jne add cmp xchg cmp pusha (bad) arpl sub lcall mov pop add icebp adc push fmull add inc test sti push xor push jo fsubs dec mov xchg scas loop mov mov mov push pop inc cld push stos sub clc inc mov ds push xor xor push (bad) sbb enter jno stos mov add (bad) inc inc and pop dec jecxz int push pop leave jecxz jno gs xchg xor ret gs and out mov jp icebp lahf sbb cmp mov pop fstps sub movsl or imul into push xor call mov loop pop jle jmp inc xchg fucomi mov push ret xchg in sbb test sub add pop push cmp int mov jno fldcw pop roll add out movl dec sub je leave pop (bad) xor movsl mov push pop push xchg add (bad) mov cmp flds sub clc ret scas xchg imulb aas pop inc mov out pop sbb decl xchg fsubrs xor mov ds ret dec push dec inc ss push int3 add lock sti in iret adc lahf ja out mov int and paddd sahf pusha add jae insb xlat test push add (bad) mov lods cmpsl cmp fwait inc (bad) ja dec mov pushf cmp lahf sbb dec sbbl (bad) sti mov outsl fild and cmove shr pop movsl mov rcrl enter into xlat cs fnstsw insl out or out (bad) lret gs test pop nop pop mov push into out xor (bad) int jae pop addr16 arpl mov jmp nop push pop adc cmpl fdivrs jp dec mov ret jmp scas push test mov lods jecxz xchg mov cmpsb lock cld fcom push cmp cmc in fwait add and dec int3 inc lcall mov xchg pop jle lcall out inc adc cli sub pop mov inc movsl (bad) icebp and inc sub xchg insb push stc inc cltd mov dec add nop xor cwtl int lret fwait dec data16 dec movsb push int sbb (bad) hlt jae push sti push add xor mov push repz sbbl test fmulp pop push jnp push jmp faddl std ret les cmpsl cmp dec mov daa jg cmp dec push repnz mov fdivr call adc or sarb xchg out xor shl push popf sub push or xchg cmp push mov or pop mov push ljmp bound (bad) xor sbb arpl (bad) pop loope cmp scas jo mov loop (bad) add ret pop mov adc ret ja add test lds cmpsb jg test dec out mov sbb ret lds movsl loopne jmp inc rolb ja mov mov push jno cmp loop mov test jo sbb enter add or adc (bad) mov add jno add xor insb mov dec jg cltd mov jnp jl pop xor iret in pushl int rcl (bad) mov dec inc xchg es mov cmc aad adc adc loop (bad) gs add incb outsl imul ret (bad) mov mov cltd pop push xchg andl daa push cwtl fcompl std push out inc jle push or pop (bad) mov add mov inc mov imulb cmc xlat sbb lret jne push push punpckldq and popf cs adc mov mov inc mov cmovbe sbb or or nop mov pusha popa add in push cltd lds and inc xor mov dec mov pusha aad (bad) push jbe (bad) ds xchg arpl mov daa ret hlt pop jae dec xchg xchg adc or push mov add and pop cmpl mov push xchg fwait fs call mov cs test insb scas cmp sbb hlt xor pop popf mov adc add js mov add jno fistp repz sahf insb out ds push xchg or adc pusha mov pop xchg je add adc loope adc in adc mov stos fildll out scas cmp (bad) fsub out mov inc sbb jnp test pop scas fadd test stos sub orl mov xlat (bad) jo mov adc in (bad) xor lahf pop cmp sahf cwtl pop inc dec shrl xchg popf mov mov sub xlat sbb mov xchg and sbb xor mov in mov pop mov push loop rcrb loop pop xchg je dec aad xlat jmp lods push mov jl and lahf inc adc sahf andl sbb sarb cltd xor dec xor aad ljmp sub add mov test mov rcr dec xchg mov add add push mov and mov (bad) add sbb dec sub mov jecxz fdecstp fidivr mov or lods into add addr16 and inc cmp ja mov aas ds lcall pop mov adc pop jne jge test add dec and cmc add add add adc cld push pop push adc adc fsubrs mov imul ret jmp ljmp push stos test or add dec cmpsb xor arpl sbb cmp jnp repnz call pop arpl xor call xchg test xor add pop aad stos xor jmp sub (bad) test fsubl cmp sub mov or in mov pop adc push xchg or sbb rclb (bad) jae dec ficoml je or (bad) mov lret add ss outsb lock inc xor mov ljmp add add fs fs lods jecxz sub push ljmp leave shll xor test sub add roll sbb (bad) nop aaa aad loope xor aaa iret sar das inc sub dec in or data16 into mov or lea addr16 test push jb jl or nop pop (bad) lret xlat cmp xchg fadd jo ficompl hlt rorb cmpsb sbb scas (bad) add add sbb fcomps mov dec lods and test mov cmpsb sub xor outsl in jp mov es sbb je add mov mulb int3 mov mov push aam jmp pop lahf loope (bad) das std pop push push mov xor fisttpl mov adc jns sbb pop jmp jp jg popf pop sbb mov pop fstps je sahf outsl test mov icebp cmp out add add fucomi adc decb xor lock xchg mov xor xor (bad) stos or add cmpl cmp in cmp mov push repnz xlat xor repnz repz std dec int3 inc xchg leave clc lret inc xchg and mov push inc mov sub das xchg (bad) aam in push inc xchg or in jmp es enter xchg cli mov sbbb (bad) push jp pop xchg add fiaddl call test ljmp pop inc inc shlb aad jmp ljmp sbb jmp ja lret (bad) test mov rcrl inc lods mov loopne data16 arpl and pop cwtl movsl or pop lcall stos arpl arpl (bad) (bad) dec dec mov in dec xchg inc and mov lret leave subl mov notb bound mov test or mov cld data16 push insb imul xor mov push pop js ja leave add inc adc inc (bad) movsl cmp (bad) mov xor xchg jno imulb test in insb xlat inc lods push aad or jge cmp lea daa cs addr16 xchg ret adc mov into mov dec inc pop push jge xor cmp int push rorb or aas mov fsts jne ret fdivp mov outsl jmp (bad) data16 (bad) mov movsb insl (bad) or mov popa negl adc cmp add rclb dec push (bad) aad cmp inc mov aam clc sub pop jp dec stos sub lock mov push loope pop jg sub outsl in scas movsl int3 dec dec outsb roll pop lds fldt mov cld xor mov mov aas (bad) sbb add add mov pushf jecxz fdecstp idivb mov enter test popf pop (bad) mov jmp mov je in cmpsl mov cmpsb out pop pushf push (bad) pop fstps das inc and scas push xor repnz andl adc scas (bad) imul mov mov pop inc xor test or loopne pop xchg (bad) jne pop (bad) pop int mov (bad) add push adc adc add add inc and or inc inc jne sbb sbb popf xor jmp inc jmp hlt push sbb dec sbb or outsl inc fisttpll rclb sub es (bad) icebp das lcall in inc sub pushf xlat mov shrl sbb dec pop add add scas cwtl ficom stos nop in movsl push jnp subl dec cmpsl daa (bad) lret enter push jno fdivl stos in jmp cmp add xlat add imul mov push xor mov lea adc aaa call xchg mov mov das add cmpsb xchg push je (bad) cmp jmp aad mov mov cltd mov push jp icebp lahf (bad) imul sub pop push xor xor adc lahf mov int3 (bad) add add add sub ja popf pop loope aam xlat repnz movsl (bad) in das or sbbb nop movsb mov push shrl aam push cmpb mov push jg sbb add (bad) mulb int3 inc inc or (bad) nop (bad) mov fwait shlb lock inc in or loop jnp cmp push ljmp out or or mov rorl icebp (bad) sub push push cmp jmp mov popf out sbb popa sub in icebp mov (bad) cmp mov pop cmp out outsb imul inc dec push stc in adc test stos adc jbe in ret (bad) out inc (bad) stos stos xor dec mov push adc xor xchg mov sti fcmovnbe pushf dec inc inc jg or adc lret (bad) xor dec inc and insl push rcrb imul inc add jl mov push mov jle addr16 out inc push cmpsl lret call mov pop cmp pop loope cmp fs add xchg pop arpl or add add dec mov push push push mov (bad) js (bad) mov mov mov mov xor add mov push insb (bad) mov push aad daa lea xchg mov ds mov test jnp mov add adc scas pop cmpl mov (bad) xor dec dec insl movsl cld jmp fnop pop or inc jnp ss jnp fidivr loope jnp (bad) push mov addl imul adc mov imul add add test cwtl adc mov sbb push ds add outsb scas sti mov pop (bad) shll lahf out out mov push sbb pop jae adcl sbb push sub mov sarl (bad) jbe cmp and sbbl dec sbbl xchg leave pop push fsubrl aaa sbb decb das add cltd adc dec or rcrl sbb mov (bad) push mov add sbb stos inc pop mov sub xor sbb inc mov sbb fcoms xor xchg inc jb out pusha divb xor xor sbb mov mov nop mov sbb and std aaa icebp rclb (bad) int3 cmp fs int into ss adc xor sub mov sub xchg and inc sbb loop xchg dec ret xchg fstl (bad) push push mov adc adc push or pushf lahf das add add fnsave icebp addr16 in mov scas push roll push rclb fcoms shrl xor popa add pop shr jns lods add push sti shrb aad movsb xchg sub jae add sbbl lds mov pop mulb insl mov out sbb xor push mov lds ds insl sbbl jne cwtl fs icebp (bad) repz dec mov out mov mov imul leave jmp int scas fildl loop test pop pop int xchg insb out dec mov jp cmpsb push adc jo or js addb lahf lcall movsl ficoml mov out add scas pop sbb insl pop lcall sbb fwait or lret out inc adc ljmp lods cmc jno and mov xor or leave cmp out loop ret mov out jns in loop xor addl add pop in xchg sbb dec ret loopne call (bad) das inc into mov ret fisttpll adc cmp adc xchg insb insb lret jb sub addr16 xor pop nop mov inc or pop outsl and in flds ret mov test mov insl sub mov jno push cmp pop in arpl xchg adc pop loop xchg scas dec (bad) jmp das inc fs push iret dec or add add fisttp mov popa push in (bad) into dec cmpsl or mov sub cmp aam adc ret out xchg ror and jne in pop push inc daa xlat arpl jp fistpl fwait pop push test or jne sarb cwtl dec lcall aam jne inc stc xor out pusha add clc mov pop and js fidiv mov outsl pushw loope xor add add lods arpl ret and sub push mov je std xchg ds fs mov (bad) dec lock sbb lret inc inc pop or jl loopne cmp push dec mov in aaa ja cmp sbb into stos adc rclb cmc fwait pushf test mov fistp repz lods les dec cmp mov jmp and lock jg lret sti scas cmpb in push out mov les mov (bad) arpl iret xor adc push stos stos push outsb mov icebp js mov sub clc xchg push dec lock (bad) out mov pop aad dec int3 dec shr jo inc ret in sbb add clc jmp stos mov pop int arpl mov repnz loopne pop push mov xlat arpl jp fistpl fwait pop or movsb movsb scas xor inc pop gs xor out in mov cwtl or popf and jns lea add add movsl mov loopne incb pop dec xor ret jb jmp add rorb inc fmul mov popa push pop (bad) mov in out (bad) addr16 cld mov (bad) (bad) lret or xchg es addl insb ss pop xor add ljmp test fcmovu insb movsl pop xor sub (bad) xchg insb out inc inc push mov stos push stos jp xchg shrb pmullw mov pushf (bad) xor add lahf test ret cmp push cmpl inc adc mov fistpll daa sbb insl mov push mov in gs movsb movsl and add pop mov xchg dec lcall in loopne mov xor xchg je add out popa add cmpsb ret les jle movsl pop jae (bad) mov arpl or push mov out sti add xor cs aad out or outsl stc inc repz add adc (bad) addr16 or pop adc sbb mov fucom xchg pop stos sbb adc and movsb cmp cmc sbb out bound (bad) test sbb test jecxz inc or xor sbb ds (bad) in mov jbe jbe or ljmp lods lds outsl push aaa aas imul xchg sub inc jnp lahf or iret fidivl leave je add or sub movsb fcompl mov int3 test fldl pop (bad) xlat mov pusha (bad) or cmp mov std pop sti pushf subl sbb push inc pusha (bad) movsl mov outsl lods fsubrl rcl rcll stos sti into pop ja add or mov in call sti ljmp iret pop push (bad) mov push jno push xlat or inc mov outsb xchg and xchg mov (bad) ss dec push (bad) pushf enter das add ret subl ja clc ret lea mov sub or adcl int and pop and xchg addr16 mov out push dec je cmpsb imul out pusha add and popf push add sti push mov aas adc test out sbb adc cmp popf sti test ljmp dec add stc sub jecxz scas and pop in and add and pop leave pop cld dec fcompl fisttpl cltd jns loop or sbb into stos adc xchg insb push pop inc cltd mov fwait pop xchg or lret mov or adc pop aam xor fmull orb int adc mov movsl push addr16 pop test mov ds xlat mov sbb xchg push shrl mov cltd cmp in and xchg xchg mov cmp and xchg mov add xchg jmp jp mov pushf dec pushf lahf incl lret outsb jne sbb stos mov leave mov jb mov jp test inc mov jne xchg insb mov mov jno xor fstps dec loop shlb popf pushf mov and neg clc mov outsl cltd ja or (bad) in dec iret inc out fwait or cld ds popf add inc scas dec sbb mov mov mov stos loope aaa or xchg out (bad) das mov and add jne dec idivl inc addr16 push repnz cwtl out xor call and in pushf lods and mov mov xchg adc push cmc mov add jno fistp repz insb out ds or sub data16 enter sarl pop loop int3 xor ljmp or and push cwtl jmp push lds sub test sbb (bad) push popf cli cmp inc psllq add adc push outsl arpl sub and (bad) xlat sarl movsl inc and jp sahf jmp inc inc cltd inc mov sbb add inc test inc dec call add jmp sbb in xchg push xor mov ret sub loope jb fldcw jp sbb ret mov bound mov (bad) xor out mov (bad) notw mov mov pop imul add xchg lods mov out dec (bad) shrl pushf out sti ljmp mov decb (bad) push int3 cmp lcall mov push repnz fidivrl mov pop jp xor call inc and stos sti dec add ss test push mov jb cmpsb ja jnp xchg xor je push lcall ds or jl movsb out repz xor lahf (bad) arpl pop ficoml je sub rcrl pop inc int3 div sbb ret int inc nop jns (bad) aad ss sahf pusha ljmp add scas mov adcl es mov imul loop xor inc int3 enter sub rcr inc ret loopne or movsb push pop test test dec lahf push xor fldl2e dec jae xchg insb mov adcb sub sbb je movsb out mov (bad) xchg pop xchg daa fldenv adc sbb mulb hlt jg movsl jmp sahf sub and adc push imul test mov cld ret lods xchg pop xchg xchg adc mov inc fnop outsl push scas and faddp js push (bad) ja pop pop xor sbb mov sarl and lock jge sbb loopne xchg cli mov loope jb mov pop add jno into stos mov xchg (bad) mov add mov jp mov jb stc outsl (bad) push pop fnop push jl add xchg add jmp jecxz xor mov push pop sbb mov jnp (bad) mov xor nop jno cs test fstps clc fstl mov (bad) out test cmp fimul dec mov jg xchg arpl outsb push sub mov push in inc ret jge (bad) mov adc sub add lahf adc add add push xor sarb xchg out and jg,pt ja ljmp pop xchg repz jo push rcrl sahf je dec mov inc or push mov add outsb aam in pusha (bad) jle,pn cld into push mov push xchg pop xchg cmpsl xchg fsubs inc push clc data16 test leave pop push cmpsb sub adc sarl test pop pop pop cli mov jg mov fs mov (bad) mulb int3 inc (bad) add xor ljmp call dec inc (bad) mov xchg clc adc xchg aad jno push push leave add inc loopne insb ja xor cli xchg sub rcr cmpsl popf pop js sbb movsb inc decl in sbb loope (bad) hlt push in mov sub push sbb and pop imul xchg out mov mov dec cmp ja scas xchg fstl jbe jecxz dec stos mov fs lcall xor pop icebp shll adc sbb add int lcall (bad) stos fistpl sub leave mov or sbb test push pop inc imul cmp xchg cmp jno cmpsl push cmp sub add or int test outsb adc mov dec push jo push out frstor test aam add xor fwait inc xor ljmp ljmp add call stos jns jl push int jecxz out add mov fidiv xchg adc out jmp outsl daa sti mov mov in fist pop lret iret mov dec inc and (bad) (bad) sub mov std ret lret add es ficoml outsb hlt push push gs out pop cwtl mov xor add mov xor cmp incl imul fcmovnu push sub gs and outsl (bad) mov cld ret daa aas pop xchg cmc test sbb add add rolb pop push out js jae insl jns mov fwait xchg sbb repnz push (bad) push fwait inc pop adc jno cmp push inc mov push cmpsb hlt push call dec fiadd cmp lret popf jmp and mov sahf dec sbb or push fstps cmc push (bad) xor in jp or in dec mov push pop sbb mov dec imul add mov cmp incl fisubl lods push sbb xchg xchg nop in gs repnz and daa cs pop ljmp enter imul xor cmovo negb xlat (bad) mov mov fwait mov jns mov mov adc sub insb insb mov mov jno or or jb (bad) repnz xchg push fnstcw xchg mov sbb fs sbb mov inc and jae add add adcb fdivrp out cmpsl (bad) dec pop jnp (bad) pop mov adc iret mov mov mov xchg sbb adc outsb push jnp ret insb ret scas icebp add mov lods mov btcl mov shrl (bad) les nop and ret loopne rclb rclb ds testb push push (bad) xchg insb mov dec imul pop add add or push lods addb lock arpl scas cld addr16 sbb fistp jne push xchg or adc and mov in dec cmp mov sub and push mov jmp inc jo stos outsl aas loopne jne movsl sbb addb cwtl jo call cmpl lcall mov cvttps2pi fdivs or push jge push fldl cld sbb sub cmp jns xor ja inc jb (bad) dec sbb push xor mov mov mov pusha cli push push xchg (bad) cmc into or push dec adc xor (bad) insl movsb xchg cli and add (bad) aad loopne pop mov push enter push xchg dec mov inc fcmovne bound lods add cs loopne and adc mov lods (bad) and push push fs adc cld jne in or lds lret ret (bad) testl jbe popa es (bad) shll push std xor jne arpl in mov sahf pop xorb inc stos fwait int3 sub push push repnz sub inc push xor (bad) lcall fdivrs inc sbb push sub add hlt sub shrb xchg mov adc mov repz int jno sub xor mov push ret jp shl dec int3 mov jbe cmpsb scas sbb (bad) mov dec cmp sldt add out xchg shl popf add dec notl push sub lods xor or in (bad) cmp out sbb test or daa inc popf cmp scas dec (bad) adc mov fidivrl inc cmp dec adc fcmovu aad in pop les rolb mov test sbb lods mov fidivr cmpsb mov js push pop pop push jg fild mov jne hlt fs and in mov inc int3 pop popa cmp pop jle sub int3 hlt push in mov mov imul dec jne xchg cmp xorl mov cld subl fcomps pop adc sarb sub adc inc adc imul call (bad) (bad) mov popa (bad) jnp,pn daa dec push cmp jl clc jbe es lret out and cmpb pushf mov mov and dec mov jae in mov das pop (bad) out fbld mov lods pop mov enter inc push jbe cmp lds cwtl mov das adc rolb pmullw mov sub mov outsb cmp cmp jg fcmovnb push xor pop sbb outsb pop es (bad) lahf mov pop aad xlat in mov xchg push and xlat addr16 add je test cmp ds xor lock sub hlt jnp push fiadd add add xchg xchg int movb dec sub jae pop clc dec rorb fs in iret push pop xchg pushf xchg lock xor stos dec dec nop sarl sub jmp int mov xchg inc pop sbb aam cmp push movsl in push cmp out add jecxz lret test sub push cmc push in add push loopne out divl stos sbb mov lods pop hlt idivb mov lods push out push pop jecxz cmpsb mov jae and leave cmp sbb add cmp ror mov and in shrb and ljmp rcl xor scas movsl pushf ret dec fcmovnb xchg mov adc popa fwait out dec push (bad) dec inc mov xor or repz ja sub jmp int mov jne push rclb lods loop and mov xchg ret inc push ss jne lcall cwtl add mov orl popf shlb mov add orl pop mov xchg push and add add add stos xlat addr16 add je test cmp ds (bad) sti jp nop fwait insb sbb and jmp mov ret cmp cmpsl insb pop (bad) dec rorb push add in (bad) in rorb mov mov pusha pop ret xor repnz pop das (bad) rorb (bad) rcl mov es push arpl cmc jle sbb mov mov sub jns test xchg movsl insl mov sbb xchg add and hlt gs movsl test lods push scas (bad) not cmp pop lret enter adc int3 push (bad) nop fwait imul push mov push hlt mov inc or xor scas movsl mov sbb popa insb mov bound pop cmc mov xor scas inc int3 fs jmp scas in cld adcb jbe pop decb lods fs and push fidivrl out add pop dec lret loop ljmp add nop xor jg aad push (bad) xor iret adc pop in pop sbb lahf hlt jne lea cwtl mov jmp mov loope mov mov mov lock imul and xor and adc sub mov (bad) mov xchg repz fcmove cmp (bad) xchg movsb push xor in stos dec dec nop sarl fucompp mov pusha test and xchg stos push aaa sub add repz in (bad) test mov adc add ret movsb insl hlt mov imul arpl push repz cmp loop fabs in pop les cmp add sub sti jle pop jne pusha sub in enter stos push mov sbb outsl pop xor scas movsl rol dec (bad) xabort test xlat addl pop nop stc repz pop adc and pop fbstp pop mov pushf mov add mov movnti mov xchg fisubl sarl push jp lds cmp outsb add pop sub sbb cmc pop in add and out inc nop xor in in scas adc loopne push pop mov je cmp loop fstpl (bad) dec xchg in rorl dec (bad) jnp and and lret mov jp fcmovbe push add and or cmpl in imul vmovdqa xor lock adc inc mov dec mov mov lock mov xorl aad dec nop in push mov push lcall cwtl addr16 xchg mov push out inc nop cmp add leave sub xor outsb (bad) or push and test push idivb ds and sub outsl loopne xchg inc push add es cmp int push jle fidiv mov (bad) arpl sti xchg stc cmp jbe inc mov lds sbb (bad) jb cwtd aam and cld and push push sbb lods mov and xchg in mov loop jb xor or add imul push stos fs cwtl aam aaa mov push test cli loopne cltd loopne pop sub adc sub sti mov lods in push mov cmp sahf sbb dec pop fcoms inc xchg jp xchg lret es add imul jb xor data16 imul (bad) sbb dec out lea std xchg xlat shrb das dec mov sar imul fiaddl stos adc insb inc xchg xor jns mov ljmp mov pop sbb stc and pop aam adc mov outsl into push lods or push fwait loop jnp dec jns (bad) pop pop inc dec adc mov fidiv add stc jecxz jns or inc test xchg int3 es xor movsl mov imul push jnp lock in mov bound pop cmc cwtl adc push je popl fs scas in (bad) adcb jbe push decb inc lahf cmp and bound outsl jne fbld add ror fldt mov aam popa je dec fnstcw pop cmpsl or or pop fldt adc add sub mov add in popl sub fsubr jns es adc insl in aaa adc mov jecxz add in scas in shrb mov (bad) cs mov pusha pop clc aas pop xor std cmpsb inc mov iret xchg pop incl pop sarl jp pop nop sbb mov data16 cmp mov jae or cld mov (bad) jmp inc fdivrl outsl out cwtl testl and sub movsl cmp xor mov adc sub or divb fsubrl daa xchg jmp insl sub gs mov push (bad) call lcall (bad) jae lods and out hlt loope das fwait or shrl out bnd mov push fnstsw push fs add (bad) jno arpl sti stc pop popa pusha loopne int3 (bad) aad aad sbb push mov mov pusha das xor ljmp add and loop fbld cmp cli cmpl xor arpl dec push dec jp inc push adc lahf xchg adc mov in lds inc mov sub out cmc pop adc jecxz ret and pop or jb push pop loop jge mov inc (bad) cmovo jge pop fwait stos cs jbe (bad) (bad) cmc pop outsl ljmp leave add add mov es scas add mov sbb int and and ja fs enter xor call mov out int mov out dec lea clc ss fmuls lret cli mulb xor lcall pop mov cmp mov in in fildll xor adc fstpt xchg (bad) cmp inc inc stc js push lret cmp roll or sar mov inc add ret add push or bound ret xchg jg cmc pop arpl ret aad sahf or sbb or and xor aas dec in jecxz pop testb push sbb adcl movsb mov jle daa dec push mov jp xchg fsubs iret mov pusha pop insl test fisubl xchg jecxz dec or sub outsl jle fldt fwait xchg inc add and ror and inc rcrl pop lock pop push fsubrl mov xchg or pop pop mov mulb ret dec mov loop scas xor outsl and pop pop jo call ret sahf xchg loopew pop sbb les es fwait adc push push cmp inc push out frstor jp in and mov in outsb lock dec popf out fstpt inc movsb mov pcmpeqw repz popa movsb rclb lods jecxz imul (bad) adc cs movsl mov jno out in mov cmp fwait ljmp into jbe cmpsb mov mov pop sub nop jge sbb lock pop lret sbb dec push jmp add adcl xor insl sub jp cmp arpl sahf or cmpb shlb push lret fwait adc push add out inc push pop mov adc and sti push xor push movsl mov insl cld and cmpsb add aad mov paddd sti add xchg push in mov inc fcmovnu pusha das in bnd add push mov or inc fsub and jecxz repz xchg pop mov jno xchg pop dec test ds sub jmp int mov xchg mov outsb popa repnz pop daa insl push jl xlat jecxz xor xchg (bad) or rcll mov adc pop ja push leave xor add sub shrl (bad) xor (bad) lods jecxz jo sub xor mov add xlat sbb test and arpl dec mov mov cmp ret mov mov sahf icebp ret addl pop nop cli repz and xchg movsl aas movsb sti cmpsb sbb call lds mov jl jp xchg lret pop xor adc pop aas fdivrs decb xchg dec out (bad) mov nop fisub (bad) sub movhps and mov mov outsl add cmc xor push add cmp ror mov shlb repnz in les and lock push rorl jbe adc push pop mov or add mov xor xchg lock or stos inc dec test mov inc cwtl ljmp push sbb ret mov pop lahf and cmp jp mov xlat sub mov cwtl mov pop out inc mov pop std push pop jae adc je add loop fstps push jle nop repnz jmp jo dec cmc icebp fucomp loope outsl jecxz xchg inc push sbb push add and or gs mov pusha in insl (bad) mov sub pop popa xchg int3 dec enter aas fcompp test arpl cwtl negb lahf mov mov test loopne (bad) enter clc sahf addr16 shll add sub dec stos cmp ret mov pop clc push rorb sub (bad) jmp cmpsb add pcmpeqb out xchg testb (bad) push lods repnz neg clc push and insb pop fmuls int3 mov fwait cmp jl cmp cwtl pop pop pop incl or in stos jmp fwait loop cmp into xor xor test jb add sub loopne aaa movsb test sbb mov jl enter clc sahf ja add add inc mov aas fdivrs push out (bad) mov out sbb xor fmull sub or (bad) ja adc rcrl mov test ja mov inc mov (bad) push mov out sbb xchg push in cmpsl pop mov xor imul daa cs xchg jb insb jg add enter jecxz (bad) dec enter out jno xchg sarb pop pop mov shl imul ret xchg push add in daa je xchg out cmp aad xor sbb inc push stos (bad) (bad) pop arpl mov out pop aam sbb mov outsl into dec mov fwait mov scas fistl loopne stos dec js mov inc dec negl dec cmpsl dec dec jnp and dec fmuls fsubs mov in mov hlt jne push xor sub adc mov jo xor push pop mov xchg lock or (bad) jae in adc pop add add movsl icebp push pop stos sbbl mov nop jmp stos fcompl mov xor jb sub shll add mov push lods push stos cmp mov mov pop clc push test sbbl fistp in adc sub outsl dec aaa lods stc test sub mov mov sahf js cmpsl or ljmp rolb cltd aas sub pop jp nop sbb std pop into out mov cmpsw pop out xor add add pop in and jb jge sbb and lea sbb mov imul lods outsl jecxz adc sbb out xor push xor out fs loop add inc mov es sbb incl movsl adc scas ds and pop lret into dec jbe orl cmp (bad) fwait xor arpl jl xchg jae mov in imul cltd scas lock push sbb inc (bad) pop add add xchg lods test and stos arpl arpl movsl fdecstp dec movsb pusha push in inc shrb es jmp mov and sahf gs mov push imul adcb repnz mov arpl movsb ror pop mov push clc xchg (bad) inc pop push fidivr xor pusha push pop jne cld test movsl jmp cwtl jecxz push nop jbe ljmp mov aam dec ret pop jne push gs sbb adc mov add lods jecxz xchg dec les faddp js xor and adc fwait gs call sub sbb xor outsb fbld inc or daa aam adc lahf jae mov add push ljmp mov jbe addr16 out out dec or rcrb pop mov mov mov sub cmp aaa popf jns in push xchg adc mov cmp add arpl test add ljmp jns loope sbb sti stos push rcrl imul sub lds jo pop push adc data16 add aad dec int3 dec shr mov jge sbb and mov notb adc in mov lods adc fldenv out mov sub mov adcl int aad xchg adc xor cmp jmp lcall dec sub jl out pusha add sub mov mov aas mov jge,pn sbb stos mov stos sub cmp xor lcall gs push jno js mov cmp loop jne jae mov mov push dec ret or pop pop pop and add ljmp jl mov stos adc jge xor jns mov insb icebp pop sbb adc lahf sbb mov xor add mov push xchg or lock dec scas out jg ficom push ja pop and icebp inc fstps paddd xor cmp xchg and rcrl stc cmpsl sub cmp xor scas mulb gs lea mov fs jmp xor shr cltd fisubr pop mov mov roll mov (bad) cli popf add push popa rclb popa insb inc out ds jge arpl cmp add lret inc mov and fwait adc fiaddl and xor test (bad) cmp scas and cmp mov mov sarl insl movsl sub push xor push sub dec inc fdivrs jbe xlat xor enter sbb fcomi mov es and into insl sbb repnz jge xor inc stc push adc addr16 sbb pusha xchg lds (bad) adc add scas out mov fucom push add insl dec mov and rcr add cltd es mov dec daa mov lods (bad) push push fsts icebp mov loope in adc sbb mov jno mov or or stos jge mov jno or adc inc (bad) cmpsl faddl mov fcomp push aaa cmp test in lds mov push xchg (bad) cld call mov xor adc mov or mov (bad) dec add and daa (bad) jbe mov pop std jl and xchg pop or sub ret sbb and mov movsl xor mov sbb or test rcrl scas jne out addr16 push imul clc repnz mov xchg sbb stos sub mov add lret repnz mov jb xor pop dec movsl mov iret mov aad xor movsl or add iret in es pop outsb mov jb cwtl xchg dec decb xchg and sbb (bad) loopne lds addl or and cmp adc pop ss mov daa sti mov sub fmull push cmp adc or dec mov adc push in pop push cli sti mov jp fnop xchg cmp mov (bad) jne mov icebp leave int dec sbb test test mov xchg mov inc add mov xchg pop mov pcmpgtb repz sbb mov cmp push out inc pop push add add and mov cmc mov call sbb xchg push lods sub jg mov mov pop int lret in icebp scas or sbb leave inc scas std hlt cmp (bad) cld push negl (bad) xchg add lods lds in push outsb test push mov add cmp int and loope pop mov in push (bad) mov sub pushf loop in stc fidivr clc dec es mov movb (bad) lret adc loope pop scas mov stc fiaddl push pop adc push and int push loope subb dec icebp push daa mov and fidivr and jo rcll and aam loopne inc or dec fistpll mov addr16 or dec add add jmp bound cltd scas leave or mov (bad) std leave mov add adc push insb rclb cmp int scas dec xchg jb jae out jecxz loopne cs insl out into xchg in fsubrs imul mov (bad) xor xchg ds sbb dec (bad) cs inc sub call mov arpl inc mov jmp jb cmp mov jecxz les loop and dec adc add sti mov push or push out push mov cs inc jg (bad) jno sub sub das jp sbb lahf sbb push jl mov mov jne enter repz inc jl fistp xchg imul (bad) das pushf sti or push mov (bad) sub inc mov clc xor mov bound xor sbb pop nop xor or pushf int3 out xor scas sbb add add andl int3 popf sbb (bad) arpl mov cmp add pop xlat repnz sub sbb fldt imul out out mov add dec push bnd fnsave mov adc (bad) outsb gs inc and mov scas pop js or xchg ss loopne or mov add sti insb and aam pop (bad) movsb aas push sahf pop in pop (bad) loopne nop xor add scas add or pop (bad) cltd mov scas std or add mov xchg jnp (bad) (bad) mov lods mov adc ret cmp inc bound out xchg sbb sub add ret les fwait aad adc sub (bad) ljmp popa push cwtl fs sbb jecxz mov cmpsb lds aaa in pushf pop test leave pop lock ljmp adc cltd adc inc jb call lret mov push xor mov push lcall mov out dec jle xchg adc fisubl xor jne xchg fisub ss (bad) lods mov xchg ja sbb dec add test out push pop lods fisttp daa insl aad int mov int3 adc mov dec mov jns fs ljmp ljmp lds in xchg sbb rol dec pop jo sbb xchg mov negb jbe ja clc (bad) sbb pop cmpsb or mov xchg data16 jecxz xchg icebp sub or mov repz rolb jmp adc adc sbb push fcmovu aad cmp mov frstor push lods ror cmp pop jne push shr push mov mov movaps adc push sub mov repnz inc mov jmp ljmp and repnz aaa or dec add loopne pop dec add xor mov ret lea xor push pop xchg outsl mov in mov cmp insb leave pop out jnp mov dec add xor (bad) aam mov sbb add push (bad) dec aas scas fistpl out inc rcll lock test push jmp repnz ljmp stos mov mov out test and std or incb popl pop test arpl mov add add fbstp mov xchg xchg test addr16 stos loopne pop push aaa leave sar das jg mov ret enter xor or xchg test mov mov test jb pop push cli xor scas and or or popa and sbb (bad) mov or inc stc xor aaa adc fsub mov mov ja lret pop cmp nop adc stos cmp daa in xchg lret mov push add jp fsts into push in jo jmp out stos out mov in push push push in outsl fisttp rorl (bad) jne sbb mov in fwait mov test dec stos mov xchg popf ret lret std imul pushf or (bad) repnz stos add or fwait addr16 sbb mov insb mov sti daa ss les jle,pn inc nop xchg cmp lods in xchg push add add adc (bad) ds mov xchg fwait and xor mov xchg cli sub stos fiaddl (bad) (bad) dec fwait inc out or aaa inc test cmp out mov enter sbb arpl jg and xor ret sub or int jo out outsb (bad) mov sbb cli outsl pop fnop push fs xor cmp bswap xchg xor inc bswap pop cmpsb lea loop inc inc cmp pop add add pop mov mov enter push loope fcoml jge push pop inc jp test daa out imull loopne (bad) ss into jo scas shrl test enter or les pushf into mov cli aam fdivrl popa mov ss add pop ljmp setle inc cltd repnz jge cwtl (bad) cwtl cmpsb int3 xor flds adc mov pop inc test push aam clc lahf das mov adc add add or pop sbb and cmp sbb cld mov roll mov fwait adc push mov fisub sub in negl xor movsl sbb addl jmp fistpl dec xor call pop jle pop pop adc and loopne jno dec mov fcomi sbb or clc mov cmp aam sub mov in je (bad) loopne stos ss lcall xor push push lods add add notl jnp (bad) std xchg jnp xor jl and pop inc adc in stos mov cmpb adcl ret dec jb test sbb adc scas jecxz dec inc mov fadd aam mov inc cmpsl fldcw dec mov sbb cltd lods add cli mov xor or jle mov adc cmp mov fdivl mov pop cmc xchg aaa shlb push mov jge and or jae add inc test int ja or lret into lods mov bound lret xor repnz stc loopne inc inc nop hlt aam jecxz mov push push into jle out roll call (bad) loope insb lock test rclb cmp sbb xor pop dec mov or fsubr jmp aas mov xchg pushf add (bad) mov dec jecxz sbb cs sub test jmp mov fstps adc mov mov mov inc or or lds nop cmp mov push fcompp xorb and scas lret (bad) mov dec imul jmp mov daa in dec ds sbb lods (bad) mov cli ret les inc dec in imul cmp cmp jl dec push lcall and (bad) int3 enter push jne aad pop mov mov pop add icebp or push loopne out pushf mov sub inc push test mov mov pcmpgtw int mov xchg rcl mov push xor (bad) lahf mov divb andb divb fildll mov fcmovnu test jle mov imul jle out out push xchg lret fdivr jecxz out sbb leave mov xlat cmp xor jp add fildll jo ljmpw scas idiv mov mulb add add in lret mov sub mov and das adc adc ret fnstcw lods popa pop mov xchg insb imulb arpl xor test sti outsl lret inc pop out mov aas xor sbb push jg in andl cli jecxz cmpsl dec in fwait and (bad) in dec ret test out sbb je and pop int add sbb gs sub add cwtl cs call or sbb loop mov pop inc push add pop add das adc adc xchg xlat (bad) push rorl es loop,pt movswl andl push nop mov pop sbb rol xor addr16 push and add inc and sbb addr16 cmpsl cmp pop xlat push (bad) jl fwait loop stos xor or out sbb lret push jae sub in test pcmpgtd (bad) mov fnstcw jle iret loopne mov mov in or outsl sbb adc int or leave rclb (bad) adc jg (bad) mov fcompl aam mov pusha insb inc sbb arpl mov hlt or repz mov add rcrl sub cmp xor jmp jns mov pop imul les and inc pop mov call add lcall std dec cmpsl mov push xorl jl shl mov adc repz pushf dec inc popf mov or xchg fimul arpl sbb stos imul dec adc xor into fs xchg testb (bad) loopne pop lcall popa mov push push dec icebp push iret mov adc js rorb sub push add add pop push lock push mov mov aad mov push jne jmp imul int3 shrb pop dec aas in leave xchg aaa fs (bad) mov push add (bad) mov (bad) data16 loopne mov xchg dec (bad) out lret xor ret or xchg push movsb xchg jle push mov xor pop mov push ljmp lods xor mov push mov sahf xchg mov or xor iret sbb cmc add add xchg andb mov inc nop outsb fsts push jmp pop les call loopne je inc repz mov cmc lret xchg pop and push sti inc js test (bad) in std icebp scas imul xchg fs mov xor popf cmc lret inc ret out xchg shl (bad) (bad) daa cld pop mov sahf xor push mov pushf ret add mov mov loop je outsl fisubl xor mov pop and add aam add iret mov sahf add data16 dec movsb cmp call jmp mov xor test lods out xor push inc test iret inc cmp pusha in das push shrl fcoml cmpsl and loopne insb popa je jns push stc fcom xlat lods mov adc fs push sbb mov inc or scas lock mov mov xchg stos movsb ss lods (bad) dec mov push ds dec cmp cmp jne add int loop aam jp mov sbb xchg xor jae je dec mov inc cmp pop sti addb and arpl mov push mov jb cltd pop cmp xchg xchg adc push loopne sbb jg lods jecxz xchg nop in jl mov lret pop (bad) pop bound je fs stos call (bad) rorl int3 inc and adcl or aam stos aad add add scas jecxz in xchg or sbbl xchg xchg data16 jbe (bad) xor or nop mov dec sbb push dec jge das cs pop mov fnsave dec imul pop inc mov (bad) in pop xor push arpl jl inc out jno push repz lods jno sarl jg mov pop and das (bad) aam xor roll sbb addr16 sarl cwtl inc or add inc mov ret loopne out aam enter adc push jnp lcall adc sub cld ret mov cltd or mov sbb xchg rcll stos xor inc pusha lahf mov xor sbb aaa push out pusha (bad) mov and imul mov loop dec push jbe xchg adc mov and inc jo dec ds rolb movsb out pop and jno add add loop out mov and adc icebp jae xchg push push xor jmp inc mov jnp xchg jge xor xor jg sbb mov sub sub jb movsb fwait pop add dec inc nop lret xlat dec mov gs add cltd sbb add stc loopne sahf jmp mov (bad) clc mov xchg cmc ljmp add jmp push (bad) fdiv cmp push mov sub jmp iret or loop mov inc xchg cmc mov or jbe xor sub mov adc pop leave push cmp dec clc scas or inc into in movsl push and imulb out cmp xor stos outsl icebp cmp lcall xor or rol xor dec std push pop in daa pop fisttp sub adc push dec scas (bad) mov ficomp arpl ret jns or pop mov test xlat jl inc push pop mov xchg inc jge and test mov push jecxz mov push std xchg fistpl or cmp (bad) enter push mov xchg lret sti jo xchg pop sub xchg add xchg mov fs sub movsl outsb xchg xor jecxz jb data16 add jle push xchg (bad) (bad) xor mov (bad) or rol xor push sbb lahf xor rorl jle (bad) std and and data16 out jle lret rolb jns xor fst dec test inc and rcrb call (bad) xor in insb push fstps in push fildll ljmp sub daa jg sbbl fstl aas mov xor fxch mov or mov int3 jecxz mov mov incl and adc test imul jg pop lcall sub sbb ss hlt xchg pop adc fwait xor jecxz dec cmc sub cmp xchg (bad) or in push lcall addr16 mov fsubp or pop mov or cmc fldt ljmp out sub cmp out add movsl sbb aad fwait lcall xchg orl lock xchg jle cmp jns jo sbb sub call clc push pop mov mov daa xor rcr push xchg or fs jno xor lcall cmp add mov dec aaa iret mov ljmp cwtl add push jmp aad xchg or (bad) (bad) pop cmp add mov dec je cmp xchg lds in jno add pop mov xchg xchg mov ja mov jne dec push jg pusha fs add das or repz enter nop push fwait xchg mov mov leave rclb add jae push push test sub int3 test add add mov test pop pop or outsl lret jmp pop adc nop push fistl jecxz jmp push sub scas cmpsb mov ficomp fmuls je div lret inc push leave daa mov add push adc insl mov fcoml je loop xchg lret xor sub cmc or or inc mov mov ljmp ror data16 cli rolb ret jo push out lahf cmp fucomip pop ja mov add orb aad and fidivl cmpsl jb not add sahf or add mov xchg je xchg fcoms ficompl hlt shr jp pop sti loopne sti (bad) stc (bad) insl movsb xchg test jl fsub leave jp lret movsb dec cmp test stos shrb lcall sub cwtl push push das call rcr dec mov mov add mov mov in push pop stos insb ret dec ret insl inc mov mov std pop dec push mov xor push (bad) fistpll popf push mov loop out movsb sbb outsl pusha cmp and jbe push cmpsl lret (bad) lea stc outsl addr16 add clc (bad) xor (bad) cmc popf xchg cwtl arpl fisttpll not ja mov and daa sub xor lock sub mov int stos xor add cwtl cmp and outsl and arpl sbb imul dec and add cs cmp push repnz mov out cmp loop add sti mov std and sahf lcall out out movsb dec ret out dec lods call jno inc test out or popa add ljmp loope or cltd xchg or rcrb fstl pop fnop out movsb sarb jmp out lcall push pop inc inc and sub lahf rcll pop out inc (bad) jl push ret movntps sahf cmp es ficom jge sahf int int3 and and add add fidiv add adc jo jecxz jmp scas mov movsb pop lahf and cld repnz xor push or out (bad) rolb iret ljmp sahf jmp cmp popl bound inc mov cmp add cltd jmp pushf xchg xor enter xor shrb push mov lret les pop lret (bad) jecxz add movsl fcmovnu aam pusha (bad) int imul push mov (bad) pop js shlb mov xchg loopne imul add mov mov cltd xchg ss and aas jle add push aas inc push repnz cmpsl scas incl test and mov sub cmp dec jmp pop (bad) xchg jge (bad) lods shl jge and test jne movsl into add es fidiv or mov inc push cmpsl sbb sbb (bad) test fnstenv test iret (bad) xor or push cld add scas push pop icebp in (bad) cs add add push sahf fs inc cltd inc ret test and dec mov inc fcmovne imul aam cmp and mov hlt dec test dec pop push lret jb add repz inc adc push or ljmp inc popa jb cmpsb adc lds lea lods into stos adc xchg cmp sbb arpl clc stc fistpl out inc pop (bad) mov aad int sahf (bad) jmp inc fcoml push in fiaddl fisubl notl inc cmpsl inc sti push (bad) (bad) ja push jae lds rorl int3 lock jo out jae insb xlat movsl lods push aad jecxz fmuls sub pop (bad) jno sub jnp ljmp xor popa inc and sbb (bad) dec cwtl xor jmp js mov push mov xor xlat or mov xor push jne cltd mov push lcall mov dec imul add xchg mov jmp (bad) xchg push xchg jge or mov push pop test pusha mul mov addr16 cs mov cmp ljmp loope xchg arpl rcl push sbb imull gs sub mov movsb stc das (bad) ljmp repnz (bad) adc or scas sub lea jecxz int inc mov leave ljmp xchg (bad) loopne imulb jo bound (bad) sub clc adc adc int cmp jne mov add mov sbb or sbb stc xor (bad) adc cmp jecxz cld pop sti dec scas divb and hlt add mov in sahf pop adc xchg (bad) inc mov mov fnop outsl sub lret ret mov popf cmp xchg push repz pop insb mov mov jge xchg or pop vcmppd cmp fisub lock nop fucomi test and add stos mov push test div dec xor sub gs jp fadd xor inc push mov xor sub or mov (bad) cmp mov (bad) mov sbb ret fldcw outsb aam adc pop mov dec dec mov es outsl in sbb pop xor scas or jb push sbb dec int3 dec shr jo dec inc push inc in pop inc push mov add add inc dec cs mov jne pop or ljmp mov jge pushl or xor xor movsb dec enter xor lds inc and add movsl outsb lret dec xor (bad) inc sbb sub jecxz mov hlt out cmp mov push cmp jnp in jb sbb inc mov std ret cmp dec stc loopne (bad) and mov cmp sbb xchg mov loope out pop sti mov jge insb les in xor sub fwait out insb jl rclb lods adc adc (bad) popf push addr16 insb cli out pop xor xor cmpsl mov jns sahf out adc (bad) xor ss into shlb into ficoml stc cltd and jmp inc inc push popf aad ss sbb nop xor add jl aam sub sub pop sbb dec mov std ret lds es xor fs xchg add add jp adc pop insb jl xor sti mov (bad) add sbb xor xchg (bad) loopne out inc push enter push xchg push (bad) aas jge push stos lea sub decb or addr16 mov icebp or popf add in and mov sahf lds xchg mov lahf outsb (bad) xlat cli mov ss xor call mov movsl mov mov daa sbb cmp cwtl xchg dec cmp dec lret out mov icebp adc inc faddl roll add add inc mov movsb adc lock (bad) fcom push cmp push push repnz cmc fs (bad) test rclb pop pop push iret add fldl shr pop addb ds add nop lods fnstsw je insl fs sbb sub sub pop sbb in and or jl xor shl pop aam mov movsl movb lock out pusha (bad) and push jo pop (bad) mov in dec ret jne adc (bad) aad stc add pop mov xchg dec (bad) std test cmp gs cs sbb ja sbb or mov rcrb jno sub sbb sub shrb adc sbb test push notb adc xor in jo (bad) loopne cmpsb jl jle out pop insb xchg pop call jle into (bad) mov sbb xor jp sbb nop jecxz push and pop inc adc dec cmp adc add mov push std xor xor das in xchg jecxz jmp lods lcall stos sub and xor mov shrb mov mov (bad) sbb jo loop jmp aas mov inc pop in inc enter nop mov lret mov cmpsl dec das adc cli mov inc (bad) (bad) icebp and push mov or add ljmp pop out mov sbb xchg add mov ljmp inc nop push mov mov xchg sahf mov mov faddp gs fwait ds sbb ret les dec stc cld movsb (bad) pop push lret dec push inc adc out loop inc shrl sbb lret jge outsb fisttp mov stos fisttpl add inc pushf ret gs push xor lahf and fs adc arpl jp mov jb xchg pop cli push (bad) (bad) or pusha jae icebp fistl je pop lret (bad) jecxz add pushl out roll mov (bad) mov stos ret daa aaa nopl in cmpsb out sbb adc (bad) mov mov jl ja jb mov (bad) ss pop imul loop cmp mov adc outsl (bad) pop call enter add xchg test add lods int3 cmp ds inc and outsl lcall and test icebp fistpl popf pop jns sbb adc (bad) xor push cmpsb xchg fdivs ficoml int testl push cltd std mov adc nop xor adc sbb mov push (bad) sub js das insb jo jge adc and xor gs add (bad) xchg cwtl mov repnz inc (bad) cmp jmp sti ljmp imul inc nop jl add ficoml inc sub sbb mov inc (bad) mov xchg mov jne xchg out outsl into subl jp int3 shrb (bad) rorb mov into inc hlt lahf daa and aam mov push xor or shrl push inc sti mov fsub mov inc mov inc sahf pop jne push insl out sbb adc ja add ds sub mov cs pop repnz (bad) jbe sbb inc pop mov inc (bad) ljmp add hlt sub ret xchg inc inc lret cmp pop cmpsl push inc jge push fwait mov xlat iret xor das dec scas xor sub mov mov xor lods mov push mov test mov fs (bad) mov sbb sbb mov cmpsl mov enter adc ficom insb call (bad) fsubs cmp roll nop iret xor (bad) sub add push loope fsubrl sub and dec inc mov xor pop pop cmp add add add jo es adc in cmp pushf mov aaa inc push dec jb ffreep mov inc mov cltd test cmp mov fldcw in testb mov clc mov in sub jmp mov or das (bad) nop cwtl sub mov pop cmp or add test imul mov cmp das cmp mov or test rcrl cs fdivs inc (bad) fdivrs test mov out loopne or cmp test and sbb inc inc and aaa movsl int int fwait mov cwtl xor dec in movsb sub lahf mov sub jne icebp dec out mov mov xor pop sbb xor pop fnop push jl add push outsb and (bad) or (bad) (bad) aad pop inc mov adc fwait xchg xor (bad) jl aam inc out iret mov (bad) and dec add mov push dec clc nop/reserved adc or popf call mov mov enter jb inc and push scas sahf and mov jle ret fcmovnbe scas xchg pop push call sbb sbb repnz add push testl jae push pop jne push (bad) push mov aas push adc mov int cli (bad) mov cltd xchg add stos leave or add xchg repnz mov addr16 daa jae sti nop test loope loope fcoml pop or pop ds gs out pop mov (bad) pop ss stos cmp (bad) xor repz sbb lea pop push xchg es adc into xchg ret dec sarl or in arpl cmc dec push adc sti sbb jbe push nop xor jecxz stc inc push int jmp xor add ljmp mov jge pusha call (bad) push arpl lds loope mov lret (bad) insl scas jecxz push and inc lods outsb mov ret cmp aaa jns test sbb sbb cltd fs repz xor (bad) pop and sbb repz orl ret loopne mov add cmp adc ja mov roll popa rclb xchg push dec xor xchg xchg jmp mov push adc fiaddl nop xor add and mov lcall sbb in sub int3 push cmpsb mov fsubs stos hlt mov jne mov and mov mov daa aaa lsl pop sub sub imul dec repz js stos jae xor pop shl mov sbb (bad) sbb sbb js dec push scas add or mov mov lcall (bad) sub test pop lret ror fsts leave xchg cmp pop in push mov sti pop lcall jnp lds inc dec sub cmp pop xor dec sbb andl repz jge cmp sbb pusha pop adc dec popa movsb and sbb jmp lods out adc (bad) sbb scas sbb fsubl push gs adc cmp push inc jo push call xlat (bad) dec dec or pusha xor pop push out loopne rcll xchg adc push jg add dec lock lahf scas adc xchg insb call daa jecxz inc inc push cmpsl int3 mov push lret es iret int sbb cwtl xor leave push frstor and mov js lock nop push xchg mov imul iret mov fsubr ss dec mov rcll or in fwait fs in nop repz mov xor and mov retw or ret and hlt fisttp add loopne (bad) outsl push lret cwtl or mov sub fnop repz movsl pop repz enter xchg popf (bad) addr16 cmpsl xor sbb je xor or into cmp fs ficoml mov jmp std pop sti dec scas sahf push and pop fwait insb add clc mov sbb or loopne xchg mov aas inc repz cmpsb outsb clc test inc fcoml dec pop xor adc pop xchg div jo xor mov jmp arpl imul add test sahf lods jmp or cld shld add outsl sbb aad into sub mov movsb or in iret cmc in push push jl adc cmp jp sbb ret arpl xor push aas sub pop jno aad push imul sbb push lods xor lods push ljmp or dec jecxz mov cmpl mov sbb in jmp rorb mov lods std cmpsl and xor mov rcrb jl dec loop addr16 int3 push mov lahf lret inc insb add ljmp lret (bad) xor pop lock and jp in bound rolb out mov lcall fwait dec (bad) andl jmp sbb fisttpll or pop xor adc out push fisubl mov add xchg sub negl pop nop add pop (bad) jno pop sub mov (bad) jno cli cmpsb mov adc lea dec add adc popf pop imul (bad) rcrb and mov push pop leave (bad) jne sahf push add pop add pop (bad) fist or push int3 repnz in add out into lea sbb xchg ret hlt (bad) pop aaa add scas push mov in adc adc std out ret mov dec jecxz loope outsl arpl lahf jge outsb (bad) cli push into jg add mov or in jecxz sbb je lret subl mov mov insl dec mov jns test pusha mov mov inc mov cmc pop pushf push pop aas ret pop or aam and push addr16 mov cmc inc jecxz jae (bad) fisubrl sahf cs (bad) pop ss jg xor lea test iret cmpsl xchg jmp icebp inc push pop gs sbb outsl pop push fldenv hlt or add cld xchg repz gs hlt add insl arpl movsb dec fild jb adc push loope sbb rcrb adc xchg roll fsubs push jnp test cmp mov inc xchg jb dec mov jo call fistpl lret cwtl add nop mov lea jge jb pusha out add movsb xchg fnop (bad) pop aaa push ret mov sbb add add enter push pop fwait cmp lret jl xchg dec jecxz aam call push sbb stos inc stc dec pop popf add xchg popa jne pop loope adc pusha (bad) (bad) insl and push and fsubs dec push cli test pusha cmpsl add hlt sarl leave data16 enter sahf pmullw pop loope mov cmp push pop mov ja jbe or sbb bnd jae xlat dec add bound adc jae hlt dec inc pop lods scas sbb xor xchg xor repnz pop sti loopne fsubrl cltd sub insl lock dec or sti stos mov fsubl popa sbb jle loope ret ret scas fstpl dec (bad) jbe pop imul inc popf out and iret inc adc notb into mov lahf aaa das add frstor (bad) add js push (bad) mov addr16 adc xor and push loop mov push lret je rorl inc outsl popf mov (bad) popa adc in daa mov cld fimul push sub clc mov xlat push (bad) jl scas mov daa mov jb push in fdivrl jno pusha jae xor loope ret ret mov adc (bad) fldcw jbe adc cmp inc sbb sahf lds iret mov pop adc cmp dec adc inc sahf xlat mov adc frndint shrb and clc mov aad dec into pop outsb int3 sbb int ljmp pop ljmp sbb mov lock repz mov mov mov cmpsb cltd ret insb clc aad outsl out imul mov fisub push aad pusha add inc mov idiv dec scas xor sbb jbe push jnp mov adc popa xchg push js cmp jmp add add call lret mov cmp push push lret push mov jg push add xchg sahf push vpmaddwd jl jne mov and jp (bad) cwtl mov add xchg mov and push push cmp fcompl add repnz es es jp aaa (bad) fsub (bad) jecxz lahf insl movsl dec inc nop lret xchg mov adc jl (bad) aas loopne test and sub jl push pusha add lcall js xchg mov mov scas pop mov repz pop outsb pop add mov inc pop es enter push cli iret xchg iret loopne je xchg (bad) xor dec loop,pt xor test jle xor xchg in pop mov dec push or and pushf stos sbbl xchg push (bad) pop xchg inc dec lock test mov pop (bad) aad loope dec mov jmp test jecxz jecxz and dec push sub add test or push and jp jb es call add stos arpl mov pop aad dec int3 inc (bad) jmp lret jno sbb (bad) fisttpl jno mov fcos das decb push out shll fbstp add mov mov out and call loopne sub inc push je add xor and fstpl push inc iret push inc std (bad) sbb arpl pop inc sbb aam add push into addl sub cs insb outsl inc mov int pop adc (bad) (bad) fisubr test in test sbb test rorl in mov (bad) mov ret push or cld and add jl test xlat or out adcl fidiv repnz lock and push lahf add mov int xor ds xor imul sub insl add add cmpsb mov loop idiv rcrb push icebp pop xlat pop test sbb mov xor and mov lods jp adc sbb push jb (bad) shl push (bad) lret mov dec cmc out sub int3 jns or mov (bad) sahf bswap fild and ja mov dec add push sub sbb ja loopne xor outsl out jne inc mov inc push (bad) adc (bad) jmp xchg mov add add xchg xchg les mov jecxz and xor add pop aaa out xchg pop mov pop and shrl ss jae cltd mov ret inc ds clc push mov mov sbb scas mov jp js pop cmp pop cmp sti enter sub mov into scas cmp addr16 push cmp aaa sub dec or ljmp or pushf test jne bound popa dec xchg mov movsl xchg mov fwait adc aad jmp loop hlt jg inc xchg movsb (bad) loope in lods adc fs cmp mov andl into cmc add loop (bad) test scas rclb cmp mov fcmovnb aam test es lods add rcr sbb loop hlt fild mov int lret scas test cmc stc xlat xlat inc sub shr test push movsb je jnp in lods adc fnstenv add add push int3 repnz imul push cmpsl xchg in rcll orb lret je rolb lods scas out adc and xchg (bad) loope in lods ret pop stos or orl mov mov sub outsl cmpl shll les cltd sub and rorl add add push xor ja repz and fist and sar dec lock add add mov (bad) faddl jecxz xor mov cltd xlat out or loopne (bad) sub xchg sbb pop pop xchg adc fcmove mov adc (bad) fiadd je loope push adc push and insl movsb xchg fcoms dec je popa ror paddd aad push cmpl push sbb out push push lods pop push xchg out dec jb fcompl ljmp sbb loopne lods mov ret sbb roll sar das lahf div js push mov xchg int mov (bad) int3 or inc cld xchg push test mov mov dec flds lds dec jle sahf mov push test fistpll stos ret movsl dec push push rcll (bad) fsubrl outsb lock nop push xchg mov or sbb es mov adc sbb pop pop pusha cmp mov gs cmp xor add adc arpl push adc aaa call mov push hlt push inc dec jmp aas pop out andl shrl xor insb push jl ss ljmp or push sbb or incl adc in arpl pop mov aad movsb mov sti push jae cmp mov mov mov lods outsb test loope sbb sub add mov xor lea adc xchg mov jae mov cmpl inc pop sbb and imul aad insb icebp lods push inc sub movsl xchg aad test fistl add add je push adc add (bad) cmp out jbe jl mov rcl movsl inc fstps fwait jb loopne adc add jno (bad) stc lods xchg stos and (bad) xchg jmp insl sti cmp sbb dec lock (bad) lea mov add icebp push bound lods or pushf xor cwtl es int3 cmp adc cwtl cs call adc nop faddl inc dec ja xchg mov push pop leave pop mov cwtl mov (bad) ja movsb sub ja test adc es push test xor (bad) ja cmp pop jecxz (bad) push pop mov icebp push mov adc mov jl mov fstpl and push dec xor inc adc insb pop add dec dec pop (bad) enter push adc out xor jecxz cmp dec fisubl inc out pop int and js mov lods rdtsc lcall sbb das push pop in add test clc scas rcl add mov add ja sub sbb negb jne dec faddl icebp mov ja aas sahf insl out pop scas xor pop es out sbb xchg pop sbb jae xlat mov fmul lret daa scas xor cmc add decl sbb inc xor add xor mov ffreep and and xchg xchg adc push aad out cmp int mov mov and mov lock (bad) call or mov jge mov movsl xor adcl push dec cld mov ret xchg repz es mov sahf or push and add fstps xchg xchg add pop lahf or or in mov (bad) xchg sti push xor mov fsub xor test in mov pop je loope pop xchg cmpsl inc or lds and test mov daa dec mov sbb movsl sti popa aas mov aaa call or jg push shl mov fisttp inc daa xor xchg sar mov lret mov jo out imul add jge xor fcomp (bad) push lea dec push inc jecxz (bad) jmp inc fcoml in fidivrl sbb xchg outsb pop pop aad out sub adc js jnp cmc adc inc cmp dec xor lods iret (bad) in adc test andb stos test les fs pop xor out and push call push xor and or rorb mov test mov cs push sti out inc jge add push (bad) or jmp push ljmp ucomiss inc cltd cli stos ja jp push sbb enter mov xlat js nop fcoms ficoml push or idivl jl popa (bad) pushl cmp arpl gs and outsb mov lret dec mov aad or in cmp gs cs pop add (bad) insl (bad) call sarl sub call mov dec add add insl cwtl incl and mov cmovge aam jl mov xchg out ds jae es mov sahf or push and mov fsubs adc fldl mov inc and mov jnp inc sbb loop fcom cmc ljmp inc push sbb leave addl sbb cmp jmp (bad) fsubs daa push ja sbb or add stos dec (bad) test sarb lret scas adcb stc jmp jle aad scas dec inc jnp (bad) ja jnp fidiv ret js loope cmpsb pop push jg sub ficom arpl movsb adc iret cltd sbbl mov fmulp push mov mov cmpsl cmp add arpl xchg rcll movsb es mov imul aam inc pop xchg ffreep lret xchg mov and add (bad) and ret pop push lcall test shrl outsb cmpsb (bad) jbe jl out pop popf mov and pop in inc sub cmc ret fcmovnbe cmc push xor sar add xchg sbb pop out mov inc icebp mov mov clc xor pop cli xor iret leave jb push cwtl fwait dec in inc jns (bad) mov or inc sahf sub sub xor dec push xchg mov mov out dec xchg jo out add in std adc add imul ljmp aad inc inc mov cld addr16 (bad) xor mov pop repnz fwait sbb xchg fisttp mov cmp inc dec xchg test adc (bad) jbe jnp mov stos and push pushf mov sti push outsl lahf sub movsb out orl movsb pop and fdivs adc push xchg or notl mov push and mov jecxz xchg or add add jge shll inc (bad) imul fs push inc mov inc fcmovne mov imul xor jno out in outsb and inc test cmpl push mov mov inc inc sbb cli add or imull fldt es or xor imul push jmp mov push adc decb mov clc ja nop fcomps shl or sbb push data16 add adc pusha (bad) jmp push mov adc lret cli stc add sahf out sbb lods push pop xchg cmpsl scas gs lcall sub mov rcrl sbb push xchg mov test cmp mov mov xchg les cwtl cmpsb pop inc mov ret aaa fcomps dec scas popa sarl xor subl sbb popa pop sbb add aaa add add mov lahf mov (bad) dec or aaa fist outsb jmp decl push jge xlat push and sub dec bound scas enter sub mov icebp pop dec inc cmp xor shrl add cmp dec int3 enter push enter loop out xchg mov push fwait sbb xchg adc cmpsb (bad) push cs dec shll arpl and sub and add push cwtl (bad) stos sar jae repnz in xchg enter mov fiadd mov mov imul cwtl sti and arpl ja fadds insl jae push dec jecxz and loope fs push and scas adc test daa lcall xor and pusha rolb (bad) (bad) dec stos inc push and or cmpsb shrl mov aam sbb adc mov nop aad test add into xchg (bad) (bad) lods xor inc xor xor frstor aaa vmovaps dec xlat mov sub les lock push dec insb in decl shll shrl popf sbb xor (bad) out cmc aas mov jne pusha cmp out rolb dec mov mov pusha mov rcrl je cmp (bad) xor mov push lret aas and pop pop add leave rcrb scas dec cltd mov aad push push jmp sbb and pop push mov mov push sahf or sarb sahf lcall iret fs ss je int adc lea cwtl sti das push popf out paddusw test jle or addr16 out mov jne pusha cmp push ret movsb mov andl testl lcall pop ret pop jns js fwait sub in daa jge inc add into add hlt xor ror pushf cmovbe ljmp popf add push popa rclb mov mov push mov bound mov pop fwait pop sbb into rclb popf lock (bad) xor outsl out test push mov mov (bad) out pusha (bad) dec out pushf mov mov mov cmp lods xor (bad) test cmpsl fucomi inc faddl mov test out lods sub imul pop (bad) add add add loopne shlb jo cs mov xor pushf mov adc mov lahf das lret or mov out mov or lods sub call jmp mov mov int push cli or adc mov (bad) mov xor in sbb stos or (bad) mov push test (bad) adc fsub xor xor out test lret pcmpeqw jecxz pop mov and and add adc aaa xor sub mov outsl cmp inc stc lds jns sti fistpl pop in mov cmp cmc push loopne mov fmull mov add sub jle jnp mov mov dec std out pop aad sbb xor pop xchg inc pop mov push xor push push lcall in ficoml jg in cmpsl sub add or decl (bad) pushl push lods in jp and mov add daa mov out (bad) lahf sbb and pushw imul in dec aas ret ss add lods pushf shl (bad) or xor mov sub mov sahf call out xor les fiadd sbb cmp test fsubl jnp into xlat and out or mov xchg mov push xchg je shlb popa (bad) adc loope adc mov mov add pop sahf arpl push jp dec test cmp testl sbb ljmp xchg shr fcoml jge or xorl scas mov rcrl ja adc pop scas gs outsb loop shll jnp xor xchg ret adc xchg mov (bad) mov xor add jno bound mov and out lret cli (bad) jno push mov jb pop out pop enter lods push clc add adc push in or jl mov pop sti xchg lahf nop push pop push loope aam cmp cmp or xor mov pop push or xchg xchg insb fstpl pop and inc or sbb jne imul cmpsb (bad) daa dec push jns mov push incl add pop mov (bad) mov sub outsl fistp test or outsl outsb das adc push or stos add jne subb jne ret mov sub inc sbb add into pushw cli xor lret xchg je mov push xchg fstpt jae mov push pop add movsl cmp mov pop inc mov xchg ret daa cmp iret imul clc push stos inc lods mov xchg mov sub shll push repnz daa into mov je sbb dec cmpsb enter lret inc ret aas push int3 dec (bad) int inc or cmp ljmp fcmovu jne lcall add add xchg lods in xorb data16 arpl jmp out pop mov das mov into stos xor into fistl jo lea mov repnz and insl movsb lcall gs faddl dec cmp jp sub push aad push pop mov xchg dec (bad) std mov std std scas imul movsl std fst scas add mov or test addr16 xchg or jmp pop inc das test cmp push stos mov lahf xor popa mov lea push xchg fildl or push dec cmp adc scas lcall data16 inc adc xchg mov push mov ja mov xlat cmp or mov inc test scas nop subl lods mov dec sahf aad scas ds in movsb ljmp adc inc adc (bad) mov (bad) dec pushf mov lret int jge mov sub or dec data16 adc pop bound cmpsb pushf push mov jbe push stos mov mov push lcall pop mov (bad) push ret (bad) loope adc loop mov xchg std or and pop sub pushf int3 popa (bad) es jns dec pop push cmp shrb xor jge repz adc shrl aad push int sub outsb cmpsb jmp push daa cs push add sbb (bad) jge aaa call enter pop jle pop xor add leave (bad) jae and scas fsts cmpsb sub jo test fiadd clc cmp pusha out pop push (bad) sahf sub push lock stc outsl mov fimul aad jl cld enter loopne frstor xor pop inc nop push push or ret clc or fcoms clc mov daa mov pop idiv subl lock push stos test xor add add push add sub enter sub fisttpll repz fistpll loopne cmp cli push int3 enter and faddl mov xlat mov jle mov jne pop fiaddl or dec xor jo ja xchg sbb mov cmpsl movsb dec int3 test mov mov je inc inc fs mov aaa pop shlb orb sub loope in std mov sbb cltd (bad) fsubrs int3 jge out ffree jne outsb idiv add test xor push mov insb xchg in xchg dec dec adc sarl cwtl leave shll xor jmp stos out jae xor xchg and dec test popf insl pop xor mov fcmovne jmp dec loopne out popf add push cmpsb es push js lret inc jo ljmp sbb jl adc fdivs nop pushf or xor ljmp movsb push dec sbb mov push adc iret add cmp ja insb (bad) mov out test clc mov test rcrl std ret lds dec stc call pop pop in out inc loop mov push aas mov pop mov inc (bad) out insb mov int3 add hlt sub ret inc inc mov das adc push cmpsl sub jb test cmp lahf jl inc addr16 insb ljmp xchg lcall xchg adc mov sar dec cmp adc xor iret mov mov sub lcall arpl push test push out push xchg je push test test pop scas or (bad) jecxz pop lcall shr ds lret mov inc stc fstpl sti xor mov and lret je out mov push xor in dec fidivl loopne ror mov lods sub mov push (bad) out lret rorl nop gs add add (bad) sbb ret enter lahf addr16 sbb or sbb test push inc lcall (bad) sub js jmp fisub outsl les ljmp push stos sub pop jns int in cs lods push test dec cmp cwtl adc cwtl mov imul loop jno cmpsb lds add repz push pop lret psubb mov and insl pop xor adc jg dec xchg rorb or mov add jl and push notb add add addr16 mov mov sbb adcl inc pop aas iret sbb cmc mov or andl inc inc and leave out pusha (bad) hlt insl xchg gs daa sbb cld fwait aad pop inc fadd aad inc jmp cmp sbb (bad) fiadd es lahf push leave sarl xlat push das inc push bnd test sti loope dec (bad) ror mov hlt iret inc and loope inc ret loopne test arpl mull ret fisttpll pcmpgtw scas add xor pushf push mov lock nop mov inc or imul add cltd sbb (bad) mov add adcl test imul mov test dec adc paddd hlt xchg adc add lret inc lret push aad or int test mov mov outsl push lea pop jnp loop (bad) hlt dec int3 inc xchg ja xor aas sbb add add imul popf cwtl mov adc adc out nop dec lret sbb bound lods add popf inc cltd mov cmpsl gs xor je mov test je in ficompl xchg sahf or lock imull push and adc xor fsubrs mov xchg iret repnz (bad) sub pusha in das push rcl inc fcoml out loop cmpsb iret cmp popa xor cs xchg movsb cwtl cmc add test dec xlat ljmp ljmp mov jle popf pop push mov xor fisttpl add xor data16 ds xchg inc cltd mov cmpsl or leave iret outsl lret dec push fmulp mov aas or imul mov data16 mov loop in and lahf (bad) cmc imul jmp out iret pop sbb (bad) cli cmp xchg inc insb movl mov pushf outsl mov in iret popa insl (bad) mov xchg (bad) xchg mov jb insl mov add andl jo dec pop js mov clc jmp inc adc jns dec in or into add aad cmp data16 mulb inc push cmpsl sbb andb or or outsb rcrb dec and jg jb pop sti loopne xchg and sub jnp dec push jle (bad) jl (bad) mov out fmulp (bad) stos inc mov add mov inc ret lds inc mov out adc inc sbb mov ljmp ljmp fwait lcall idivb cmovae ss scas jge dec mov adc jp dec mov je stos adc add int xor and pushf test mov sahf or sbb mov xor cmpl cltd movsl push imul or mov lahf jge jnp sbb add add dec cmp jae mov pop mov xor sub push dec std xchg push mov mov fnstcw mov jns pushf lret add arpl aaa call vhsubpd sbb in push pop push fmull inc test adc add jno (bad) fbstp ret and arpl lret or jmp (bad) in add stos pop mov lret popf popa (bad) mov mov add add loopne cwtl pop pop sbb sbb add push (bad) cltd cmp test mov clc jne sbb std ficomp push jmp mov int addr16 sub xlat fidivrl sbb jo mov pop xchg (bad) dec sar jbe xor xor or or (bad) jne jg sahf push fsts jnp cmpsb fiaddl shrl pop add test mov movb lahf icebp lods mov push or sbb push or push inc je add into inc hlt (bad) dec mov aam cmp or and xor mov dec out pusha (bad) movsl imul cmp sbb mov jecxz call push and loop out sub mov enter mov insb push scas push jo (bad) in inc adc mov imul sub jge push add add sub (bad) shlb mov jbe data16 fs add add pop fbld jne dec stc jmp jg and cmp je dec (bad) lahf mov not adc popf add sahf jmp mov or dec xchg sbb push dec sti mov imul sub xchg out sbb test jecxz mov cli pop loopne js sbb xchg jns sbb mov ret xchg sbb jbe in push inc and pop notb cmp stos add and pop jo push daa mov mov mov int in or or mov movsl int out pop dec loop jo iret pop xor test adc push push fwait pop push or rclb pop mov xor xchg clc idivl loop jne pushf out xchg push and (bad) fsub (bad) and cmp gs mov repnz xchg mov enter lods xchg or mov and pop xchg cmp cli faddl and stos (bad) nop in mov push loopne or sbb xchg outsb ja xor cltd xchg jp cmpsb lahf fbstp js inc inc pop push push xchg fwait sarb inc xor cmc test add shrb fisubrl sbb dec das aas fsubrl cli lock fwait sbb daa (bad) aad ss pusha sbb fcomp or stos sub ljmp mov aaa movsl sbb xor pop mov add push stc int add pop in inc lret pop sub mov jne pop push fmull lods hlt push (bad) sbb inc mov push imul addr16 jmp pushf xchg xor pushf or sbb es pushf xchg and fwait lahf ljmp fcmovnbe out mov leave cmp inc adc sahf (bad) test (bad) mov daa sbb repnz mov emms hlt aas loope xor mov ja or int outsl in scas movsl mov daa sub roll ds xchg loopne call (bad) sbb jne push sbb arpl pop das add fistpll adc or popf dec test dec pushf push xor xchg or sub xor mov (bad) arpl cmpb xor jnp rcrl xchg je xchg arpl cltd mov dec push push je mov mov (bad) adc aad movsb scas and add lahf cli xchg negl cli ss mov mov push push rcr add daa scas aad cwtl xor out jmp xor jb ljmp loop aaa repz dec int3 cwtl inc or mov cwtl imul aad negb mov and shlb mov rcll je sarl sbb repnz insl out ds push dec enter xor add das inc and (bad) cltd xor pop push xchg dec xchg outsb scas or js cmp jl (bad) lods not or or in add add lods jns push stos insb (bad) sbb xchg notl in and dec movsl sbb cmp pmaxsw pusha cmpsl out fcmovnbe movsb sbb pop mov and sbb gs jmp insb sahf jecxz frstor (bad) or jne cmc push ljmp fdiv jns in aad jg or xchg sbb outsl lret pop loop out inc (bad) int3 enter inc xor sbb and sbb push jecxz inc clc xor add xor out pusha or xor and mov in out iret repnz (bad) and sbb ficoml pushf mov call cwtl or cs xchg call insb mov in adc ss pop xorb xchg out xor shl push popf sub push inc fistp hlt push (bad) sbb pop mov xchg mov xchg insb out xorb lea pushf sub js loop out in jno mov push into adc inc add add addr16 mov (bad) pop outsb pop pop sti or (bad) push cmp movsl cmp dec or dec cmp fs (bad) loope out out push test jecxz pop dec push in inc ds and jae dec pop push repnz repnz jo and jmp sti jbe bound jp (bad) (bad) push cwtl xor jmp jg dec out dec in jnp (bad) gs xchg movsl mov xchg lods mov cwtl (bad) lcall mov add add adcl sbb fcomps je dec aad xlat xchg jle cmp cltd cmpsl push dec add mov sub lahf aad rcr xchg (bad) fsubrs cmp loopne iret ret add jmp in out out push adc rcl push sbb idivl and sub cmpl sub out (bad) mov jmp xchg mov jecxz inc mov sbb adc leave pop test fisttp jno inc test jo cs nop mov add imul pop call jns icebp or (bad) (bad) data16 rcll mov movsb and fwait daa aas mov gs popl pop push jns xchg and push das bound cmpsb mov mov mov icebp xor sub cmp inc sbb inc or ret and add inc rol inc xor jo out int3 lea pop sub repnz inc xor jle (bad) and mov out mov int3 add cmc add lahf sbb jne (bad) jne shrb insb mov out pop push push pop stos sub fdivp pusha repz rcr test fnop push movsb enter mov jmp mov outsb cmpsb mov loope in cld xor aaa out pusha mov xchg mov daa gs (bad) mov pop ret inc jecxz push adc adcl fstp push inc mov bound ret adc insb jge ret shrl (bad) add imulb data16 or or adc add jge pop cmp xor cmp pop jnp ljmp add bound xor ljmp mov popa mov jp icebp adc pushf jbe fsts and dec pop fs mov push sti and or sti dec scas dec fcmovnu insb mov (bad) movsl push and jge mov outsb xor jae sete adc in ret lds cmpsl xor fscale in shll or add add cmp mov or repz cwtd xchg and inc and (bad) mov dec inc push iret mov pop mov clc adc sbb pop xor xchg sub pop sbb addb je fstps sbb mov ljmp mov mov cmp mov mov mov xchg ja jle (bad) test loope push rcrl cli ret lds inc add jae mov mov (bad) ja fbstp sbb adc stos pop push push dec int3 inc andl mov cmp sub dec sahf mov adc dec mov adc aad adc jno sbb pop push aaa xchg (bad) arpl cmp enter ficompl cwtl lahf sub jnp in pop (bad) ja fimull mov out in (bad) xor xor jle (bad) cmp gs (bad) mov push daa cmp add add cmp iret cwtl push test jecxz ret clc add add mov ss mov sbb sbb inc inc inc jne scas mov (bad) loopne push fwait sarb daa add inc popa mov mov test add jo lods into mov or fs xor ljmp ss or sbb mov sbb movl dec movsb cmp xchg xchg cmpsb imul adc call imul mov mov or in pop dec add stos sub cmpsb cmp and mov and out add inc lods cwtl fs pop mov pop add rol dec lret inc inc and in pop add int3 fwait cmp rcrl bnd mov push ljmp sbb ss sub test push js push inc pop ficompl lret fs mov xchg imul add arpl cmp push cwtl push xor sarl dec xchg repnz cmp pop jp test cmp pusha in stc fidiv (bad) mov pop and in and cs push repnz pop and call xchg or enter or adc ret add jne dec lods outsb fidivr popa add ljmp out xorb mov pushf sub js bound dec xor int leave fcoms dec add in fistl loopne mov rorb pushf sbbl lahf mov test lock test cld mov popf cmp fimull pop push mov lea sbb test sub dec sub mov sbb mov push call test fcomps inc inc jecxz in inc dec call leave pop stos xlat inc sub push ja mov je ljmp mov add movsl andl or ret arpl jne mov xchg je dec mov daa cmpsl jecxz push push je jle push std loopne sti mov sahf andl push or inc xor add mov out xchg sbb leave mov mov sbb (bad) mov fisubl jnp mov in stos adc cmpsl add shr sbb subl ret loopne mov rcrb hlt push ds add mov add add out xchg test mov lret fsubr ficomp xchg xlat or sub fcom pop mov call outsl leave xchg dec std add inc fcmovnu push sub gs xor inc sub inc (bad) jmp adc or jmp outsb bound sub push stos sub jbe in ret aas js out jmp xor jbe roll out clc mov (bad) (bad) lret or dec mov (bad) and add xchg mov and pop leave push cmp xchg fneni(8087 push (bad) fs dec loop xchg ret js out and mov cs (bad) mov xchg fcomi lea in xchg je mov lret cltd pusha shr cwtl dec dec push sahf je or repz pop sahf adc cmp popf stos adc fmuls clc jbe daa mov lret cli stc push jecxz inc fnop outsl sub mov inc sub (bad) jp inc sarl in mov push test sub mov pop mov xor inc and or pop das push (bad) mov push (bad) ss (bad) sbb into repnz mov lds sysret sbb pusha lods into push sub xchg insb outsb ja and mov ficomp sahf push sbb xor je dec inc xchg jle mov ljmp mov inc cwtl jmp mov arpl fistl pop adc sete in push adc daa lds dec stc mov (bad) pop pusha add mov jae pop loop cmp jnp lret adc xor out int pop in inc mov mov mov lret sbb pop adc ret mov push ljmp sbb ss sub pop xchg jmp test cmp xor push sub dec xor (bad) gs or push pop aad lahf jge insl xchg sbb mov mov jp paddd mov imul add add jne fsubrl (bad) ret mov gs sub stc mov fwait add ret fdivl int pop mov lret enter nop and int3 mov mov pop leave push cmp cwtl and xchg or pop bound aam push insl ljmp adc in repz js push inc pop pop lahf xchg stc dec test addr16 mov imul out pop cmove inc fcmovnu aad jg cmpsl cmp cli (bad) and add add inc imul iret mov lock das js das push rorl fcoml outsl movsb mov idivl and stos mov cmp inc cwtl mov push mov xor call lcall loopne (bad) push mov pop scas movsl push pop movsl or mov add testb out mov jo sbb inc pop sbb into inc cmpsb movsb ret and stc jmp jmp lds gs dec or push sub add inc pop pop inc inc test sub jmp test (bad) out out outsb imul cmp test repnz out lcall jmp int adc push and pusha (bad) cs push jae fbld sahf arpl sbb or or jg icebp enter jge and inc or movl loope (bad) dec sbb lret stos adc sub in xor out jp push cmpsl lret mov inc or xchg cmc fcmovne fmull inc push xor adc fisttpll add dec adc and insl movsb mov mov sub (bad) aad ss mov push (bad) fsubrs loope push ficomp push sbb jns mov (bad) repnz daa xlat movsb mov std or mov pop in mov inc push movsb and cltd and sbb and das add dec jle mov jnp sbb jnp (bad) cmc push mov xchg loope ret cltd and or add mov jecxz repz sub mov (bad) cmp lret fs mov sbb fistpll jl cld (bad) xchg adc xchg cmpsb jecxz cmp fwait inc xor mov ja fnstenv pushw adc push xchg pop push push aad or int addr16 ss mov pop push pop mov adc push icebp gs pop dec sub push and into sbb adcl ret sbb clc jl fwait cmp clc adc lahf jb pop jbe jnp add add fnstenv xor fprem or push scas cmpsb (bad) arpl mov in rep lcall insl push into dec movsl fwait call cmc adc (bad) pop xchg jae outsb aam push out pusha (bad) sub mov mov pop adc cmc test in push adc inc fcmovnu bound sub mov jae mov in (bad) addr16 add cmp pop jnp xor call inc and xor dec ret xchg pop add add cmpsb or mov xor outsl rcrb inc hlt push insb lcall xchg jnp (bad) loope or xor pop test out ficompl hlt shr mov xchg in and adc in stos mov insl clc xor or ss mov lret test in out in push sub add jp lds sub mov outsl mov lcall jmp add cmpl add mov lea fnsave push fmull and lods dec in pushf enter push popf push mov out cmpsl stos xor pop push outsl test repz lcall addr16 add or iret sbb int adc cmp aaa jp test push and push sub gs dec cli inc fcomps inc (bad) (bad) mov popa ret pop pop cmc test xchg (bad) mov inc xlat push pop int sub popa xchg fs xor add ljmp fs mov sub mov xchg scas in lret test xor cmp cmc jmp jge mov sbb cmp inc loopne xchg xchg mov xchg jmp jp mov jb pop push sbb scas add into stos aaa int3 inc add cltd sbb add push divl jmp out (bad) iret xor loopne,pn mov mov popa (bad) test lahf jae inc fmull add sub (bad) pusha jbe mov adc orl std pusha lcall (bad) hlt dec int3 cwtl lcall mov loopne rclb sar das jae jno dec in or xchg pop lea cmpsl mov jp xchg mov in mov out jl push out pop mov lds std dec ror jmp cmpsb into cwtl dec cltd sbb add fwait or (bad) (bad) push jnp inc sbb xlat cmp lret loopne cmp push mov icebp sbb mov das pop test push xor rclb jo mov fimull jno pusha repnz jb xor sti mov jge inc test mov pop cltd inc and (bad) sbb movsl xor cmp xor stos xchg ss aad vmread repnz or jne jge xor or stos (bad) jle int rcrb push int push mov cmp addr16 xor imul in and inc inc adc add add adc cmp cli dec jle inc (bad) sarb cltd xor dec xor xor push push loope xor jl lods push cld test xchg add hlt mov mov adc xchg mov loopne jmp loop cmp rol arpl repz sbb out xchg (bad) loopne mov mov test pop mov out popf cmp push mov xchg push cmpsl test ret arpl or xor or pushf lods mov fwait jle add or cwtl add scas fistpl scas xor movsl push jnp xchg xor int sbb mov paddd sbb (bad) das push stos sub pop insl adc cmp addr16 push imul jmp jge repz dec pushf rsqrtps in fwait lods dec mov add sar (bad) dec jbe push fstps jnp mov jae push mov xchg sub or arpl pop sbb add (bad) nop xor add inc movsb adc mov inc and pusha mov dec xchg aad mov push stos add xchg ret daa out dec inc bnd imul test insb outsl insb xchg insl int test mov rcr pop fbld imul loop jbe ds hlt pop and jge lcall sbb dec inc lahf mov pushf rcl pop sub lods pusha add mov js test pop or jecxz sub dec sbb in iret iret insl cmpsb insl mov and fs xor mov pop iret xchg in or adc push in movsl cmp stc pop aam mov mov jo cs (bad) test sarl mov popf push in dec jns,pt push enter mov sbb push jo ror (bad) repz (bad) mov ret mov push lahf sbb cmpsb jg das push test loopne out popf add inc es aam outsb ja push cmpsl sbb arpl sub lcall fsubrl pop xchg (bad) or mov or in jno lods add sub (bad) push das in movsl cmp mov push mov xchg mov jb test sbb aas and scas pop jecxz pop inc inc pop movsb shll add cs push dec push cwtl adc cwtl in (bad) jmp popa stc mov jne into cwtl lcall add add cmp lds inc mov ret notb xchg rorb enter mov and int cmp imul pop cli adc mov xlat push push mov (bad) int mov faddp popa orb xchg push push inc nop outsb (bad) movsl cmp and jl dec sbb lods or push mov push fs test and data16 aad and sub enter cld fnsave sbb cwtl push incl sbb ss pushf inc cltd imul sub dec ret push xor int cmc push xor hlt xchg rcrl lcall in or push and push loopne cli xor mov mov int (bad) in add (bad) ficomp adc xor push adc lahf out cwtl testl fcmove push dec out pusha (bad) movsl mov cmpb (bad) sub cmp (bad) test icebp adc inc fnop push test int add in and lods mov add lods mov sbb std add imul xchg inc inc jp sarl dec mov inc mov out sub mov into testb sub out leave mov mov movsl adc push nop imul dec (bad) (bad) ja or in mov xor xchg fsubp mov or and pop sbb mov or sbb cmp setnp jb mov (bad) repnz add xchg data16 mov fstl movsb mov push mov mov mov (bad) mov pop cli adc clc jecxz loope mov gs lret movsl icebp jge dec shlb sbb wbinvd adc ret jmp mov mov lea mov xor imul xchg push dec jg or inc cmc fwait adc mov or out mov sub into push dec push fwait aas addr16 add jle incb in push dec movsb movsb mov pop jae jmp push xchg push aaa push arpl mov mov loopne (bad) stc cmpsl push ljmp out dec (bad) test leave pop in xchg and xor dec add test adc cmp cmp add popf push mov adc arpl push cmp arpl xor icebp xor push js inc inc pop push push lcall sbb sbb add or push xchg int3 ljmp pop (bad) movsl mov mov pop mov repz mov inc jg push push push mov dec inc inc loopne cmp in dec fistpll jl push jns js push repz (bad) (bad) lret or xchg and arpl test pop push mov push push arpl roll test loopne aam lds and in out mov cli push add icebp arpl or or add dec fstps je (bad) mov sbb or or outsb or inc inc mov inc mov and ss outsl pop leave xchg inc xor pop jne push add outsl dec push sti inc js test (bad) in std imull or bnd mov xchg push sbb (bad) (bad) mov cmpsl inc xchg inc fbld ret daa mov pop lods sarb push (bad) hlt push mov mov sbb (bad) leave sti xchg je lods sub adc xchg insb insb inc add add add or xorl enter test rcr xchg cmc xor xor addr16 fucom test or push dec int3 lea (bad) imul xchg sub sbb jno in scas icebp (bad) in arpl push loope mov sti stos outsl lret int add imull xor cmp inc mov repnz lods (bad) dec dec or mov and pop adc loopne jb cwtl dec test das adc xchg push int add sub push cmp inc xor aaa inc cltd push out push out xor jb mov adc mov (bad) jmp inc fdivl xor mov int3 and unpckhps add mov outsl pusha jnp orl add imull popf mov cmp sub jns mov pop and lahf cmp out fbld or das or (bad) nop pop jg and push and ficompl push add enter cmpsb push pop mov outsl fstps xor (bad) pop jb jle call nop pop adcb and pop lahf mov in (bad) cmc jmp mov mov push lock rol test negl test sahf stc movsl aam mov and jmp lock addl mov mov jns mov pop fdivl inc pop rcr sbb jo inc inc mov hlt cld and cs inc mov flds or xchg pop mov or lea popf cmp or mov loope (bad) and repnz sbb and aas push push cmp mov (bad) leave sub jae mov shr shll inc cmp sub and pop out pop cwtl inc inc lret fwait xor dec pop out sub add adc and aas ror mov mov adc test subl push add lahf adc xlat stos inc pop push es push leave jae add divl fistpl mov xchg sbb cwtl push fucomi pop repnz or (bad) (bad) mov sbb or or mov jl mov lahf mov out cmpsl pop and mov lds cmp lcall mov xor fsubr stos fs push jmp aad cmp sub mov test fcoms add add mov cmp insl push aas int3 cmp jbe add or mov xchg je bound loop aaa pop in int3 dec shr cltd into enter outsb fistp dec insb mov inc cs aad ret add call push negb xor mov mov dec xchg jmp insb cmpb ret je lcall adc imul fisttpl cmp lahf pop push out add add mov and nop jb fcoml cwtl ret les pushf mov xchg sub xchg call fsubp adc fs call sub mov mov das dec scas sti and dec ret mov mov (bad) xchg pusha hlt push je jp pop mov jge aad testb pop and sub pop inc ret iret push sbb add push mov lret dec inc xchg inc loop insb imul popfw adc jecxz inc adc enter pop jbe add jge xchg (bad) xchg jg es fiadd push xchg sub xlat push int push xor rclb fdivr in aaa dec push xchg xchg mov ja adc lods orb and lret inc mov (bad) shl int popf leave popa fdivr das jg or pop or fbld jne ljmp aad jbe push xor cmp dec fwait pop xchg sbb adc mov repnz inc (bad) xor movsb in loopne cwtl mov jl and pinsrw lea jo cs ja mov insl (bad) xor fcomp mov daa cmp in test add mov faddl jl (bad) xor push es xchg push mov out jns stc jecxz xor cli int (bad) cltd jmp lret daa lock pop ret mov das inc dec (bad) xchg mov jge ljmp inc jmp and inc cltd add xor jnp add xchg add nop gs shll fsubrs mov fs mov jno (bad) ret test das sub xchg jnp (bad) pop mov adc (bad) lret js outsb scas xchg pop out sbb mov push stos test int in lods cmp pop shl sbb out in and pushf inc xchg (bad) lret inc jb cs sbb aaa in int push cwtl mov repz pop cmpsb xchg fsin out push inc lcall add cmpsl mov mov jle data16 addr16 add mov arpl sahf fstps jo pop ss push push data16 jb jg je lea sbb dec xchg cmp test data16 cmc ljmp inc mov jmp scas pop mov imul aam cmp das jo adc adc not out jecxz mov icebp jne leave pop in fadd mov in pop xchg mov push (bad) push add add das add das test mov pop xor insb ja out xor xchg sbb cmp jle mov adc arpl mov mov pop aad clc jle add out push inc and movsl add imul iret andb jne repz jnp push loope xchg push and push sbb in stos jbe out call ret mov fnstenv ja stc jecxz loopne pushf dec and add jp sbb adcl imul faddl ss sub mov (bad) jne inc stos adc xchg insb mov mov mov pushf or dec out sbb iret pop sub xlat addb adc push xchg (bad) mov call dec adcb (bad) out cmpsl (bad) dec sub (bad) xor call xor out (bad) xchg mov adc and aad mov in ret cli daa mov jns mov add je sar xor stos and add mov mov xchg or enter sub (bad) pop inc rolb shr notl cmp popf push mov out or mov (bad) cmpsb mov nop push test pop fnop sub fwait sbb adc mov fidivl in pop inc sbb data16 out jmp cmpsb mov jg enter jle out out scas and or test out loopne dec stos push add add push mov mov or scas mov mov xor adc loop xor (bad) lret xor gs cltd mov xchg ret pop fwait loope fdivr das std sbb jge ret test push pop push mov xchg insb notb ss fisubl cmp sub rclb pop les pusha xor jae mov adc dec cltd sbb add add inc inc inc xor aad jecxz cmpsl imul lods fcomps push cmp mov add jns cs cmp fs or pop inc imul dec shl and sub xor xlat outsl outsl dec push repnz (bad) xchg loopne jmp scas sahf dec int3 enter lret inc inc test dec aad ret mov push incb fmul repnz mov cmpsl dec lret jo jnp add ror and jne xchg insb out test sahf mov pushf xchg sbb pop lcall pop mov xlat xchg push ret and xchg (bad) fs fidivrl cmp cltd movsl push dec test mov add sub lahf rorb mov mov cmp (bad) sets addr16 mov pop stos push aad mov sub mov cwtl inc (bad) movsb ljmp adc les lea hlt sub mov mov sub and pop xor pop or (bad) mov mov bnd pop mov insb pop xchg xor dec jbe ret test div inc jmp cs test aad lahf jno or repz mov popf pop nop and dec enter add add fisttpll rorl xchg adc lods mov (bad) push movsl push out mov mov (bad) test dec pop loope pop xchg fildll pop xor push add addb sbb shl lds cli inc es sbb adc aas mov inc xchg mov lret (bad) enter movl ja inc lods hlt push pop mov dec mov in adc add cmpb jnp arpl call sbb sbb scas dec pop flds ljmp popf repz jp (bad) lahf mov div or aaa fildll adc arpl pop pop les mov sub je pcmpeqw jecxz test pop cs fsubl js lods mov adc or repnz repnz and (bad) jmp sti jbe push es mov test ffreep cmp cmp dec and das adc out or popf push mov mulb add push push xor xchg test push (bad) lcall mov mov pushf fs cmpsl les mov test je (bad) loopne repz jmp aad push or fsts pop mov popf jns inc ljmp pop dec loope stos push adc jecxz jne push in lods sbb mov push push dec push repnz daa ret imul jb xor dec int3 dec xlat xchg mov inc sub sub aaa jne loopne test dec dec adc add add aas mov je push ljmp aas iret repnz ss jne,pt mov xchg adc add (bad) in je add les push icebp cmp pop xlat and inc or sti push xor mov mov inc lret lcall out sbb inc xor repnz cwtl sub (bad) sar fcom fist imul pop cltd (bad) (bad) dec lahf inc dec in js popf add jge lcall pop leave sarb popa xchg push mov jb pop mov cmp sub jne sbb cmp pop pop out inc push cmpsl jb cmpsb sahf or and addl mov mov sarb mov pop das (bad) lds xchg add and loope arpl pop pop les jge cmp icebp das and shr sub ja mov (bad) movb int loop imul xor cs sbb add cwtl push incl or stos lret jbe in sbb daa dec jae pop leave sar das adc dec xor add ljmp push ljmp sub sbb jecxz pop fstps stc inc cmp fs mov and push mov mov cmp (bad) fsub push inc mov xor xor or and nop xchg adc pop mov gs stos sub daa int xchg add out push push lods push push pop xor and jmp (bad) mov pop mov dec jge and fisttp or and sbb js xchg or lods popf push pop jo sub and jge into xor fistpll jb mov xor icebp lret iret jl xor mov pop sub sbb add in test adc aas scas movsl cmp mov mov jno xchg dec incb test jae mov mov daa cmc pushf jae out sub mov cltd cs (bad) mov es into shrb call insl or enter inc repz and outsl pop mov and sar das adc xor sbb push cmp sub xchg insl out or pushf stc jp rcrl pop sahf or push inc (bad) adc dec add repz ficoml pop bound and or (bad) sbb scas pop push mov add jnp (bad) lods out jmp scas mov mov push cmp (bad) movsb add mov fisub das pop test push mov fildll push fucompp jno loope sti loopne xor mov lret lret pop xchg mov loopne add das inc lock in imulb sbb jo pop ret insb out in cwtl mov loopne xchg jb notb sahf or in arpl mov movsb adc adc lods push aaa out (bad) add add jg je test scas fcmovnu (bad) gs mov jg out xor and and add jmp jmp mov std ret cmp dec stc in (bad) je lea jno cs lret xchg notb call rcrl repz lret das cmp dec inc and mov jns movsl cmpsl scas dec xchg xor add dec insb stos pop mov cmp stos jo xchg popf (bad) xor lret xor sbb add lcall xchg inc ljmp dec (bad) pop (bad) push mov lcall clc sti adc cmp ds sbb ljmp in dec ds gs shl push xchg mov jno ljmp scas sbb mov mulb jo pop lret mov xchg fwait rorl stc jle mov (bad) mov inc jne and mov cmp add xor cld xchg lahf sub stc or pushf pop bound nop xor pop xchg je jns fwait adc push add jo fidivrl inc cmp (bad) xchg or stc push mov jle daa lods int3 mov rclb adc pop jne add out sbb and aad jnp inc xchg jne fs in pop adc jae lock fs mov loopne jnp repz inc inc and add lcall lret hlt fcmovnb sbb xor add sbb xchg (bad) xor cs out sbb pop sbb dec faddp pop test (bad) fistpll dec arpl lahf int3 jg sbb (bad) std mov pop mov pop xchg mov fcom xchg and cmp pop adc xchg xlat out out outsb jmp loop adc fdivrp ljmp cld dec aas sub push stos arpl adc in mov sub aaa xor (bad) dec inc mov insb mov lods or pop add mov mov mov jb das xchg (bad) call ret int or ret sub ret into mov jle mov mov mov pushf or movb cs fistpl and dec (bad) data16 mov and or stc loopne sti pop arpl aad adc loop and mov or scas and pushf xchg adc push mov sbb daa loope or xor js sub jmp nop fdivr call add movsl cmp stos mov arpl jo dec inc push ja mov xchg fwait shl jno inc test fimul add jno xor adc out pop xor xchg pushf test ss or sbb mov int3 into sarb repnz out hlt (bad) xor ret pop sti loopne push push mov sbb lahf mull sbb inc jp ja bound pop jnp lahf bound mov fnop outsl and lds int les loopne add add aaa lods and mov pop mov (bad) call adc ret aaa mov in xor movsl rcll push xchg add adc adc ret (bad) lock ror push sahf sub jge cmp loop mov dec data16 (bad) xchg inc mov stos push es call in ficoml out cwtl repz imul out pusha add (bad) mov sarl fwait push lahf in sahf pop jne out add jae add push insb (bad) add and cmpsl cmp lea adc sarl cmpsb mov cmp stos mov movsb popa sbb cmc push cli rcl scas mov lahf xchg add std inc ret clc nop testl jne enter pop push mov sti std xor insb nop pop xchg (bad) xor icebp adc sbb fldl imul inc in scas pop sbb fs jle lea fstp je lret pop test out lcall mov leave mov dec ds popa ljmp mov sbb cmp xchg pushf daa scas or xor movsl fstl roll sbb mov dec data16 insl in into lret imul mov jns sbb iret das sub (bad) mov add insb jp sbb cmp mov add sbbl sbb not and (bad) fsubs xor add ja lods push xchg int3 mov out sbb cmpsl adcl in jnp push jno push fildll dec cmp pop and call ret xor call mov dec ret loopne inc out sets daa inc dec (bad) leave mov lds fisttpll mov in in lds daa xor mov rcr dec push push push sbb add push push rorl jg add rcrb fnstcw ficompl mov pusha push pop inc nop push pop adc mov aad gs hlt std test in bound add pop mov xchg sub push ljmp aad mov ja lea pop sbbl cmp pushl xor xchg loope loopne inc rcrb shr hlt movsb pop pop movsl jp mov rorb repnz pop daa insl xchg mov out mov add add cmpsl leave or fcomi push nop xor pop xchg call pusha dec push xchg dec in (bad) aad mov test outsb fwait stos (bad) aaa adc fisttpl sub lret xor dec jns cmp pop mov cmpsl test mov (bad) lcall mov push repnz adc sbb cld int3 enter dec sahf xor inc xor ds cmpsl add add inc icebp sbb cld adc dec scas or sbb add popa outsl xor iret cmpl repnz repz lcall xor or pushf in cmp ret lds mov inc add pop pop mov movsl xor xor daa sbb (bad) fldl ja push inc test push mov ljmp dec leave gs push or pop (bad) mov add leave pop ret inc loop cmp and das out pop leave loopne rclb add cltd sarb add pop mulb loopne push fprem movsl mov push sub je (bad) data16 xchg or in clc or nop repnz mov adc int3 push loop rorb jo push out frstor fldcw adc out scas cmp pop insb out push imull xor add fucomp sbb adc sbb fnop sub leave aaa in and pop (bad) imul sarl and xchg pop adc sti pop mov add add mov xchg cmc ret loopne mov ss jae or movsb fucomp push push aas in jne jnp sub adc xchg insb mulb insb (bad) cwtl lock lcall sub mov and jnp adc testl aad push cmpsb movsl xor add out inc stos pop pop xor daa mov mov nopl shll lds int xchg adc add cs cmp jg out (bad) repnz outsb into add sub mov jle imul pop push rcrb shr hlt jns scas inc push xchg in jne pop pop dec mov in stos jne xchg add arpl arpl in sbb lret pop sbb iret ret lcall lock adc mov testw xchg add mov jnp add cmp shll daa out mov test xchg rclb fcoml add add pop je int popa sarb push and cs xchg mov adc sti loop loop out mov int3 enter xchg sbb and fist add cli adc pop pusha xor or popa add ljmp out pop xor xor pushf test xchg rcrl sbb popa repz dec test movsb and dec jp jmp mov loop in hlt scas xchg add pop mov mov push or jae mov xor cmp add in jbe sahf popf lods outsb scas call es pop cmp xchg test mov stc outsb jmp cmp fdivrs out mov fsubs stos fcmovnbe jnp mov (bad) add sub movsl or cmp pop mov push je cmp fadds loope push stc insb (bad) xor cli mov aaa mov adc clc pop dec loop jo iret pop xor test adc push push fwait pop cmp jg xor push push and add add mov mov inc sbb xor jbe and dec push adc imul adc push mov aad cmp xor push stos stos sbb dec mov scas adc xor popa cmpsb bound push addr16 dec cmpsb enter xor cli lahf mov pop lahf out mov leave rclb repz or (bad) push xor outsb mov out or pushf test jno lcall xor jnp je nop push adc xor aad sbb andb les xchg call mov jnp add mov cmp cmp sub scas push aad mov pop jns adc cmpsb and push stos mov add add cwtl fs call pop jnp xor call inc jb out lret jle push xor ljmp aas mov loopne push subb pusha or sub int out xor jb (bad) fadds add add or rcl test lods push pop (bad) mov adc outsl or push xchg lret and test jnp add pop mov cmp jp pop pop jne push inc ljmp ret mov jne faddp js xor ret std repnz mov (bad) call sub sbb xor outsl ffreep mov inc xchg mov xchg fmuls cmp loopne mov or dec rcll xor arpl add or cmp inc mov lods movsb jb push sahf or push sbb add cwtl popf lock xor xor sbb add sub inc stos mov mov add dec bound inc mov bound adc mov dec sahf imul sub lds stos pushf fidiv scas push repnz sbb mov aas iret cld dec int3 cltd inc or test pop and jmp inc ljmp add or ss cmp pusha lods into (bad) fmull xor ds test or test rorl mov sti repz nop xchg fcoms cmp jle push cmp push (bad) out jmp rol mov jae jp nop jno push sahf (bad) test inc cmpsl xchg sub aad and mov mov mov lds or test dec push xor pop jae or pop add pop lret dec clc fisttp data16 push pop inc pop xchg adc xchg sysret sbb into push mov xchg insb imulb pushf test cmpsl mov negb sahf pop cwtl push sbb push icebp dec mov inc cmp pop rorl pop int3 xchg lret sub mov mov out dec dec mov sub je sub roll fcoml scas hlt push cmp hlt mov adc (bad) mov pusha jg adc add add adc mov or outsb gs inc and insl push les pop cltd xorl loope push push fwait jne pop pop inc mov jp mov cli loop pop aas xchg rorl add popa repz sbb or and sub cltd aas dec in adcb dec scas (bad) add or dec xchg sbb xlat mov cltd lret cmp (bad) and xchg adc aam outsb mov es mov dec and add add mov lock mov fbstp lea scas arpl outsl mov (bad) jnp pushf xor adc leave pop les sbb or (bad) das sahf jecxz fstpt dec or pusha lods into add js inc sub inc cltd mov pop lcall mov movsb ret es sub adc push addl (bad) xor fwait pop cwtl sub (bad) divb sbb push or dec push daa mov lret mov add adc xchg xor mov stc jmp inc xchg mov jl mov rcl xlat in add xor cwtl fs sbbl and cltd in dec sbbl sahf and jb ss lods rolb jg out out or ss xor and fcompl mov mov pushf sub push or icebp stc outsl (bad) pop xchg (bad) or outsl lds aas dec movsb (bad) xor call mov movsl mov mov daa sbb cmp cwtl xchg dec aas fmuls out add push pusha sub add sub sub lods imul jmp mov jg,pn je fwait add rorl mov xchg pop in and ljmp insl inc add push lret hlt fcmovnb push jge push loop xchg popf push mov jne shll bound mov jp fstpl push rclb push out aas je dec jne cltd test movsb mov add andb dec mov inc adc in sbb aas jnp jg out cmp or dec jno ret paddd (bad) imul push adc (bad) mov ret ss gs cs mov jmp add (bad) push dec jge pop push fsubrl loop push nop or jmp mov rolb sbbl movsl dec mov jg mov lahf data16 arpl jp sahf rcrb push add (bad) (bad) ja or mov sbb mov mov mov mov push lcall out ljmp aaa mov (bad) (bad) and shll mov mov scas dec adc xchg jbe push mov pop stos inc loop cmp ss cltd (bad) cmp jbe cmp xor xchg fwait aad mov aam in or cmc sbb push mov xchg push out pop add add cmp arpl jp imul xchg cltd (bad) iret mov rclb sub (bad) lahf mov mul pop (bad) xor mov mov ljmp (bad) fsub mov mov jp clc iret jge jecxz cmp nop push in cmpsb push xchg mov gs and (bad) int xchg dec sbb adc (bad) mov cmp das arpl in test ret aas mov xchg fmul sar movsb inc (bad) or sub push ret mov jns movsl add pusha (bad) js in cmp xor jmp rcr scas xchg fcomi push sbb xor dec inc jae cmp shrb fisubrl mov lock pop inc inc push iret pop push jnp xchg sbb jmp xchg pop bound and cmp push and fldcw repz lahf das pop (bad) mov fsts dec mov fs das mov pop mov sbb ret and outsl mov sub or scas fistl xor add ljmp mov addr16 aas outsl js dec rcrb test mov mov mov cltd and insl inc and or ret adc adc push xchg sub adc mov mov in mov push adc imul mov (bad) aaa and loope ret (bad) out inc (bad) lods pop dec mov inc std es call add add jbe (bad) dec inc sahf aas push fsubrl and adc (bad) (bad) pushf ret jno push adc stos mov pusha repnz in ret lret sub xlat cmpsl xchg enter out (bad) pop pop mov xor outsl mov push inc sub std sub sub pop mov lock mov out (bad) push aad dec dec jno mov cwtl xchg cmp cltd inc sti ret lds inc jo popa outsb jp add add subb pop loop cmp inc daa jo push call xchg push sbb lret mov ret mov push inc mov fdivrp das sahf repz add pop ret fisttpll fmuls add flds mov or mov mov pop adc in adc fistl mov sub shlb sbb adc mov repz idiv mov fistl mov sub cs call loopne xchg sub popf pop lods inc ficoml add add sbb aad pusha add dec lds inc (bad) js in mov push test stos arpl arpl and (bad) dec lahf sahf inc outsb mov enter outsl fistp dec push movsl movhps mov push stos (bad) xchg imul testb aaa notl adc into dec sub aad sbb xor lcall mov pop xchg and jmp jmp pop xor mov insb xor jmp mov addl addl add clc (bad) sbb ds cmp scas cltd loope ljmp pop imul inc stc outsb (bad) add mov mov stc (bad) jb add repz xchg adc fidiv cmp leave insl add mov std add xor insl dec out (bad) dec mov mov (bad) stos bound inc cltd jno out inc push cmpsl adc insl popa repz sbb rclb or aas iret adc push push loop pop push insl or jp in add add and adc mov out mov clc test xlat push es bound inc dec and stos mov push add push seta lcall pop mov repnz pop push jbe pop cmp dec int3 enter fwait adc ffreep sbb setae cmpsb jns addr16 push pop stc mov adc sub push sarb movsl mov icebp mov jbe mov rcrl sbb or dec into testl out cld lea adc pusha (bad) cs cmp mov pop loop mov mov loope std sbb out mov pop lods clc ret lds inc in movsb dec aam inc push iret jno (bad) mov pop bound bound dec int3 inc inc std js pop xchg outsl aaa jne loopne inc inc aam enter lds mov stc dec or xor mov xchg out and imul add mov popa repz add mov push mov in push pop mul xchg add add jmp push lods fmuls scas fdivl push ds push (bad) hlt aas daa pop push test jne dec push mov and hlt dec pop lds and call sarl adc idivl mov mov dec shrl mov test pop popf xchg imulb dec in or cmp rcll add popa mov add fs jno cmp pop lods fwait addr16 sti stos push xor xor (bad) jmp inc fsubr inc xchg sbb popa test mov mov adc jmp rcr mov aaa dec out and call add cwtl test sbb loope cltd (bad) into sub jecxz pop sub in and inc pop mov or adc dec popa scas push jb push or jp or mov push femms push add add lahf mov rorl arpl push (bad) cmc outsb ja ss pop fbstp mov cld rcrb test fstl movsl es movsb rcrb xchg mov xor inc jp jg xor and sub mov mov jnp add imul jmp inc pop cli orb cmp sbb mov mov fwait bound gs mov adc iret mov dec jmp xchg mov mov add add inc push lret pop lret inc or push lahf sbb pop js jle hlt cmp fldenv adc fistpll xor inc mov mov psrlq ret fnstsw dec pop (bad) xlat addb lock pop shrb cmp cmpb adc or sbb cmp ds (bad) fcmovnbe mov pcmpeqw sti aas add sbb iret pop aas loop lods mov pop inc jnp jno js lret rcll add fildl push repnz mov add xchg in cmp cs icebp pop xchg std xor insl mov iret arpl xchg lock sbb mov fucom cmpsl mov mov in into jno call bound xchg adc fdivs repz je inc push (bad) ja fisubrl add adc leave jnp fcmovnu test jnp add gs sub xchg aaa cmp mov jmp xchg cmp sbb xchg add test aam test mov push or movsb inc and pop pop adc in cmp inc sbb sbb pop pop int3 xchg aas mov nop or jmp lods sarl out mov sub outsb addr16 push push out xor insb pushl cmpsl gs lods int3 pop sbb (bad) test cmp jmp inc fsubrl push jo mov push or mov aad add daa sahf pop pop stos mov incl insl mov add cmp add mov mov cmpsb xor out sti fwait inc (bad) fs jo xchg (bad) call sub sub jbe mov mov gs rorb dec in test aaa mov jne into stos test dec jne sbb or repnz mov lods aad das out rep nop fs ret or movsb insl cmp xchg mov sbb (bad) pop sti jle jg sbb add adc ja pop xchg jl adc ret scas lock push mov fsub add push sub mov cs xor adc data16 dec sub ret push jo in lret jbe or xor pop inc (bad) out movsb push sbb mov mov lret adc ret js out and addr16 out icebp pop sbb clc fsubrl movsb insl decl mov add add out mov mov std (bad) testl adc push xchg sub xchg hlt insb xchg cmp cld mov sarb pcmpeqw pop in or loope fcoml test popf push in lods jnp xor (bad) mov xchg out xchg mov loope jmp cmpsl repnz int3 inc pushf xchg (bad) lret mov xchg jecxz push inc mov jae das sahf repz testl aad in push ljmp mov data16 jno es cmpsb mov rcrl add je rorl or cmp sub cmp pop sub mov scas mov fdivl (bad) sub daa dec xchg ss mov inc inc pop mov jmp inc or inc mov (bad) pop fwait mov (bad) (bad) ret rcr adc xchg cmpsb cwtl jmp push jbe aaa cmpsl and lret movsl mov cmp dec pop push fmull ljmp pop add fildll inc vpcmpgtb mov in icebp or mov insb repz adc xchg ret lcall mov inc popl loopne hlt add push inc adc mov and pusha popa mov call paddd pusha lea xchg adc lods lods jecxz fcmovnb bound mov adc dec repnz repnz cltd push add push xor or js popf inc and and (bad) xor ret cmpsb add push mov jge pop add les xchg daa jne xchg aaa insb xlat push jl or pop pop and or jge push sbb or mov inc ja shll and dec andb inc jne xchg inc cmp mov jg or jge imull icebp daa dec inc jmp sub imul sbb pop dec lods mov fmuls sub xor sbb jecxz cmp (bad) xor jmp mov int3 rsqrtps or inc in (bad) mov mov or cmp mov dec pushf jecxz mov aad push inc mov (bad) and jne (bad) (bad) enter add out and mov sahf or xchg test inc or push jle cltd sub addr16 pop sarb rorl hlt jle pop notl xchg sbb pusha (bad) rep xchg mov cld (bad) ret inc mov bound adc push pusha add movsl dec lahf and jge pop popf daa cs sbb add add or (bad) negb inc (bad) (bad) mov and mov push sahf roll sub mov xchg adc ror mov movsl mov push adc xor jmp mov aad lret dec leave in push lret sahf aad lds sub dec fbstp in adc test aad mov incl xchg pop ljmp xor fsubrs loope push fiadd push sbb jns add lea popf daa xlat movsb mov std or mov js xor repz outsl fisttp ss push xchg push add pop add or jb push cs jne push test xor out jmp cmp jb xchg addr16 jo sub inc lahf loop push xchg andb mov fist sahf jmp mov mov les lahf mov pop sbb dec cmp lods add repz xor xor bswap std mov inc (bad) jo mov sub jg xor push mov mov cwtl lods jne jge pop mov jecxz push fwait sbb pop or pop mov inc cltd fisub mov jge jl or pushf test cmpsl mov cltd out pop test int test enter (bad) lahf mov xchg test xlat in mov lret add inc inc stc xor add sub mov xorl xchg iret loop lock das js out jae mov gs stos sub daa rcll pop cli inc (bad) movsb ljmp pop sbb or xchg (bad) lret or xchg and jle xor ret loopne pop dec pushf xchg stc mov inc sub test (bad) cmp push xor arpl xor and icebp adc hlt es iret pop aaa push shlb in ficoml cmp mov testw pop in stos lret fcmovnu aad jmp ja fadds jno ret inc dec dec lcall movsb notb adc or push cmpsl sbb mov repnz adc xor mov jg add in lret data16 mov ret loopne mov jno (bad) das adc and test fiaddl or lods into stos mov cwtl and mov repz daa rcr adcl add pop aas pushf xlat add gs shrl sbb call and inc adc dec mov adc lds out inc mov xchg fistpll mov mov test aaa rcl outsl ss cmp cmp mov jae pop loop add and cwtl fs loope push sbb enter ds cmp outsl fisttp xchg insl cwtl repz rorb aas hlt push ds push xchg mov adc js xor loope adc add call loope pop imul fimul je dec je push mov xchg mov (bad) ljmp mov fwait jge mov jnp mov in mov testb addr16 shll jmp lods pushl mov sbb jle xor xchg andl mov repnz xchg imull pop mov negb fwait and test and fimul loopne mov add rolb rcll dec or popa add ljmp out xorb mov pushf sub js ret popa in or popa ret stc pop cmpsb iret fs sbb and subb mov in push xor pop repnz push mov cltd repnz icebp xor in adc xchg stc test jecxz pop sub in dec ds and daa inc pop push dec jp stc test cwtl decl repz test sbb xchg inc inc inc hlt cmp rcr jmp flds adc push adc or clc mov fisubr outsl push mul xor loopne mov sbb mov int sar cwtl int jmp mov aad sbb popa mov mov cmp and xchg call inc sbb jp and in loopne outsl push lret sub jbe xchg inc sbb pop dec lods xchg (bad) lea std mov cs sarl or adc aas popa scas add add add sbb add xor movsw out xchg cli movsl fisttpll xchg out leave sar movsb push xchg push ret fucomp mov mov pop aad and xor mov lcall xor cmp xor ficoml ss xlat or in inc fcoml scas push xchg jne mov jnp dec fsubr mov cmp mov and push mov pop dec stc call mov (bad) jmp xor mov lcall sub aaa jge loopne test jg mov adc imull add add popa lods and xchg cmp inc nop mov jo icebp or sbbl cmpsb insl mov rcrb addr16 xor andb mov scas fcmovnu mov fbld and pop gs mov stc pop jne push mov sbb add add (bad) mov (bad) es int mov jnp push pop pop repnz jbe sub mov inc (bad) les sbb outsl push (bad) arpl setae adc inc mov out popf cmp ds out dec (bad) and lret dec adc loopne cli jb mov jo stc push xor data16 popf inc cmc xchg popf add cmpsl pop inc inc jo aad jmp pop mov xchg add out push and (bad) insl jecxz mov inc mov add cmp mov or aam push clc mov pop loop and pushf std scas fwait add mov or xchg inc (bad) jne (bad) nop aaa popf push loopne xor (bad) mov ja ljmp mov cmp movsb xlat iret jnp fmuls xchg ds dec push out or arpl mov sbb or sbb lds test xor mov insl dec jne add and roll cmp jle mov mov insl dec jp dec int3 push mov int3 shl push mov add lock in and and add daa cs sbbl addr16 lods mov rcrl jle xor (bad) nop mov and call dec xor nop pop dec or bound mov in xchg sbb bound push inc push cmpsl lcall sahf lret inc adc pop push push push jle into (bad) xor push gs push jmp pop dec (bad) vmovq pop fistpl dec jmp fildl xchg test (bad) sub inc (bad) imul fcoml ret lds cmpsl cmp dec inc (bad) fdivrs adc rcl sbb mov jmp js iret test je pop in xchg into movsb jle add lahf push (bad) pop push sar movsb push mov pushf ret fcmovbe jne lret test xor jl xchg in inc add add jp leave or sbb inc int je nop data16 mov movsl and fldl icebp push div test ss lods jnp dec test ss or loop out push adc in cltd push loope mov inc fisttpl stos gs lods and push jns push add dec fwait sahf decl data16 mov test xchg xor add test ret fcmovbe jne add add jge push and pop or mov inc push cmpsl adc cmp scas adc and and fs push cmp out inc or hlt jbe inc mov or add movsl cmp inc cmp sub iret (bad) in popa push out or dec push stos mov (bad) mov sub xor fstps dec push cwtl adc cltd jmp add test or aaa call ret xchg and push xor add lret daa in pop or in rclb jne inc lea xor addr16 mov jb fimull cmpsl jle gs pop push js sbb movsl mov clc popa inc inc cmp adc fisttpll add fbstp fsubrp pusha imulb fsub mov ret xchg push jne mov push lret or aaa stc cmp loopne insb mov mov push incl repnz mov mov push pop jmp mov sbb add sbb clc aam dec ret rcrl outsl adc shrb dec inc nop dec lret mov bound dec jbe xchg insb push add cltd mov movsb out in add push and into xchg neg movsb in xor mov push dec xor push dec in inc adc (bad) les (bad) jl test (bad) jnp push xchg xchg mov (bad) and cmp mov mov jno push cli in (bad) cmp ljmp pop pop in inc dec mov sbb test pushf movsl jno mov mov push ljmp sbb sub ljmp xchg sbb ret inc daa movsb insl stc dec fmul fs sbb imul or add and sub lahf (bad) repnz cmpl push sahf pop xor es test pop mov loope mov cld add add adc lds inc jo jno sub mov sbbl repnz pop dec jl shl jb xchg stc int3 jp pop in mov inc sub ret fimul arpl jb das adc mov ret repz pop mov jmp es movsl insb call jno sbb out sbb push ret push daa movsb insl and rcrl add cltd sbb add (bad) cmp scas scas iret mov out lods cmp (bad) fsub loop or add add (bad) test inc or adcl mov inc imul sar dec mov mov (bad) call sub mov lahf call cmpsb jne and sbbb mov add xchg cmp (bad) cmc insb outsl ljmp bound lahf sub xchg or push movsl or push pusha dec add push cwtl in ficoml in push dec lods xor shll rcrb jmp scas add movsl ds in lret movsl mov mov rcl cmp mov cmp pop add out push and jae ljmp stos jae out out cmp repnz mov lret jo ret jge mov adc mov dec jne stc jmp inc sbb cli mov mov fdivrs jl and inc out and mov add aad lcall leave (bad) inc pop fcomps je js fwait adc add add int3 pop data16 add icebp arpl aad pusha fsubrl fisub mov xchg jge or leave dec inc ret jno out add pop mov xchg dec (bad) std test cmp stos fsubl jnp andb add stos inc inc mov data16 mov xor ret loopne pop jl inc inc push aam pop cmpsb pop pop and dec xchg sti rorb repnz jecxz sub mov enter add popa pop sbbb xlat sub popa jae jl adc je push lahf lds dec scas out and mov mov mov (bad) ja adc xlat in sbb loopne push pop loope test sub int sarl jmp xor jp (bad) xchg pop push repnz bnd sbb add (bad) mov in push dec enter fisttp and fsin das adc shrb ror add mov sub incb add add ja test mov lret sub pop xor lock dec jbe rep lret dec pop fwait out dec cmp adc scas or out pop (bad) mov add and ficom push sub cmp cltd xchg mov daa mov paddd sbb and ljmp in dec cmp jbe,pn out sbb mov push inc (bad) dec lahf inc lcall xchg es insl pop imul mov sbb add add push cmp inc lods fidiv cmpsl stos test mov fistpll cmpsb jle fidivr icebp ror stos dec adc sarb clc mov cwtl fwait adc mov pusha lahf sbb add cmp aad xor mov pusha mov xchg ret lret test out sbb inc mov push inc js stos mov jne mov mov fs cwtl fs ljmp movb in (bad) mov add add addw push sub pop stos and adc push push lds mov vshufpd and cmpsl sbb sbb or dec cmp mov sbb mov jl and inc adc int adc mov fdivrs adc dec ret push cmp jmp imul sub sub das in bnd push (bad) lret push ja lcall add enter sbb inc sbb fwait dec movsl xor test jge cmc pushf push xor notb xchg add push movsb es lcall jae es cmpsl or popf pop add rcll bound inc loope push xchg jo pop inc and adc shrl rcll pusha (bad) movsl mov addr16 add inc mov arpl cmp (bad) ret fisubr xorl sub pushf or fisub add cmp stos test fcmovnb dec push ret pushf push lock and dec popa mov inc stos inc inc out dec addl jnp repz and imull inc cmp aad xchg pop push jbe outsb popa mov push mov (bad) in sbb jle bound popa jle jp mov xchg cmp ret andl outsl loope jo mov pop pop in jg orb fprem adc test aad xor pop aas mov jne add loope ds loop push xchg and and (bad) int in and and mov xchg mov jecxz cmp jnp int3 lret jp mov icebp sbb mov push pop cli sbb add iret pop orb xor mov xor ss icebp lahf (bad) je ss push jo dec pop fstps xor jne popf test shll or js mov insl inc aam sbb aad pusha in add add incb in push jns bound setg sbb test jecxz xchg adcb or imul xor repnz incl cltd push dec (bad) enter inc add rol inc adcl das cwtl repz jecxz mov add adc sub (bad) adc mov jb icebp pop int lock (bad) fstps cli lret fwait pop sub sbb popa sub (bad) icebp push idivl scas fistl jecxz,pt in xchg mov fsub mov mov das mov adc loop or cmp xchg test (bad) ljmp adc adc aad je pusha mov cmp (bad) fsubl jl ffreep xchg hlt into rol lret mov mov lcall add lods xor or adc dec jbe mov add add loop mov clc into (bad) xor imul addr16 pop jp push dec scas xchg fcmovnu (bad) push jg movsl cmp loope shl mov addr16 and lret mov insb (bad) inc push push jnp inc pop dec pop int jp xor gs (bad) jae push pop loopne push add enter push test rorl pop push fmull data16 (bad) mov (bad) adc add cltd lods jne xchg lods out add add mov jno in mov pop lock xchg lret fcoml (bad) lret pop (bad) fbld in (bad) data16 or add sub xchg cwtl sti (bad) fsubrs call ret or js loope imul rclb cmp ret pop xor daa movsl or fisttpll out es fsubr jmp aas test xchg aam and xchg out xor loopne push inc or adc add lahf hlt cmp mov xor (bad) xor outsl decl aas cld bound ljmp xlat nop pop pop loope ds fs fistl loop ret data16 mov and sub lahf (bad) repz popf cmp (bad) pop jae (bad) cmp rcrl cs in and and shl int xchg divb cmpsb mov mov lods xchg or test jg sbb dec lods lds scas (bad) jno or add mov ja aaa jmp rclb push in (bad) xor add aas ffree mov movsb inc stc fwait cmp adc push push and fcompl sub push inc lret pop pop cltd out nop test push mov mov mov popa pop or sbb pop mov insb outsl inc pusha fistp or dec cmp stos pushf fidivr (bad) push repnz fstpl add add cmpl aaa (bad) pusha xor in (bad) xchg adc mov fwait mov clc scas arpl enter inc outsb adcb out leave mov mov dec ja rcll out xor sbb ret push adc mov mov (bad) jecxz loopne add rorb outsl cltd ficompl out rorb and mov push inc dec adc pusha pusha loop adc push nop push adc fwait cmpsl int3 cmp addb add in inc call mov fs mov xchg ja int3 cwtl shll movsl jge push pop inc mov push incb pop sar movsb pusha scas jns xor add fsubl sbb imul push xor sub xor int3 mov hlt or (bad) fstl arpl shr js cmp data16 dec push or loop add jmp xor sub jg mov out push mov xor test fmulp pop test lods pusha xorl add add rcrl ret mov sbb push in jb mov or push mov mov cwtl push (bad) mov cmp insl int3 enter lea mov sbb dec dec sar mov loop push push pop mov rcrl addr16 or out and fs jp xchg xor in mov mov xor xor mov ljmp notl inc pop adcl cmp push cwtl sbb add add jmp mov lret (bad) jnp adc xchg mov and lcall sarb pop sbb inc cwtl push inc (bad) call ret cmpsb enter lea mov jnp test jl mov loope mov fisttpll pop mov pop data16 xchg insb xchg or push stc sar out jne loope push in or dec fldcw mov mov xor or or or je adcw add add imul arpl aad pusha fldcw fisub mov xchg jge or xchg popf js (bad) push lock lret scas pop mov xchg sub imul push sub mov add add bound dec sub rorl sbb rcrb mov fisubrl and xor jnp (bad) inc stos adc push sbb mov pushf xchg and lcall mov mov daa add push and fisttpll ljmp adcb pusha in movsl cld decb cmp sbb cmp pop xlat repnz push mov (bad) in outsl or movsb lret out sub dec addr16 in out mov jmp aaa repnz xor jmp mov int3 rsqrtps lret in lret mov scas loopne inc mov call rcll xchg out negl sub inc rcl xchg xor mov fcomip lahf fistp push jo je fstps xchg dec (bad) xor popa in adc inc jge or in rol in push push push popf adc icebp (bad) fcomps sbbl push (bad) cld lock and pop push stos cmpsl and mov inc (bad) movsb ljmp dec sti jge cmp and mov mov rolb stos fcmovnb inc movsl test jmp inc xchg pop or ds or sbb add xor dec scas loope mov jecxz sub cmpsb out pop out mov mov rcrb inc push js jmp mov jecxz rorb and das ret pop (bad) aam pusha ljmp cmpsb inc (bad) jl inc pop inc sub movsl outsb test imul loope push (bad) sti aad sbb dec and test mov out fdivrs mov push lcall test sbb inc rolb (bad) nop aaa test int push sbb add add shrb push cmp jne dec mov icebp mov fs jl mov xchg insb testb icebp pop lods fwait pop fimul repz shlb std and (bad) in mov sbb rclb sub dec xchg call push lods mov (bad) push roll cmp mov mov and loopne mov popa iret aam rolb and pop xor mov sub gs decb add inc xchg movsl add cmp sbb movsl movsl pop push fmull or dec inc mov test add testb mov jno call fbld sti xor add inc push fwait mov sbbl xor inc pop das aaa mov das jo (bad) clc mov pusha out cmp pop (bad) aam jne push jmp leave test jmp pop cmpsl ds inc decb rcrl add and (bad) xor jmp mov int3 rsqrtps lret in jecxz dec nop loopne inc xchg leave mov call les xor popf xchg je (bad) inc ror test jge mov int3 icebp lahf fcomip jns sub push jo adc xor xor adc lahf mov int3 (bad) add add add sub ja popf and repnz mov or sbb roll add add and xor sub cmp jnp into xor adc loop xor out or adc loopne xlat fimul loopne mov add inc xlat imul lds or clc mov rcll cld ret mov mov test js dec rcrb test mov test xor jne popf test jb cmc hlt pop std (bad) loop add sub outsl xor into push stos dec imul add push mov push mov mov lds inc mov sub sub mov sbbb repnz int lods add cmpsb ret (bad) fcomps jae addr16 xchg insl fwait sbb push (bad) das cwtl jecxz add pop es mov or sub pop xchg cmp pusha pop push (bad) repnz arpl repz jb lcall xchg push cwtl je sahf mov in pusha lds push pop nop xor (bad) cwtl inc sbb add mov imul sarb jecxz enter jecxz imul adcl inc jmp or pop (bad) mov xchg rol fldl mov stos inc push adc out data16 lcall sbb mov fdecstp lods jg pushf in add pop xor arpl mov ret jns mov push (bad) add nop pop divb lods mov add fidivl std mov divl pop ret scas loope adc jnp subl pop sbbl lret enter push mov sbb arpl (bad) icebp andl rcrl mov push mov pop mov (bad) movd add dec ret loopne mov push leave rclb add enter test sub incb xchg out addr16 sub es add mov dec pop mov xor insl mov mov or in jo adc mov jnp push fldenv xor jbe and out jmp push loope (bad) dec (bad) mov pop dec cmp xor enter (bad) ja aam sbb out jns loope sti fcmovnbe jnp push lcall scas xor mov adc and loope push xchg mov push cmp loop in xchg loope rcrb mov movsb mov or sbb pop push jne enter xchg cltd and dec mov dec out add lahf adc aad mov ja push movsl mov dec cmp hlt test push mov adc sub lods outsb cmp aad mov (bad) jecxz pop push mov xor jmp call xorl adc mov pushf push jmp and add push mov js push mov add ret xchg push mov jle ficom inc insb mov mov mov aas mov adc mov mov (bad) ss and add lret mov jl pusha (bad) cmpsb sti clc mov fldenv xor daa mov div cmpsb outsb out out sbb outsl inc (bad) push stos inc lods outsb adc insb add mov out jl movsb enter (bad) jno insb cmc call andl js inc add dec and ffreep mov pushf push (bad) sahf dec sar mov sti insl test sbb mov addr16 popa cmp mov cli mov dec jbe jns xor push cwtl je dec aas lret push out cwtl dec xchg pop jp inc jne sahf sti cmp cmp cmp mov dec inc sbbl ret mov and arpl sbb stc jp scas inc pop int mov movb sub pop repnz add pusha lods mov sub (bad) enter cltd lret ret sub loopne mov fwait cmp adc (bad) into ret fadds je ljmp insb and pop and aam xor or mov movsb (bad) push dec add lahf arpl push addr16 push dec xor cmpsb jmp sahf sti imul mov mov cmp cmp popf out push adc loop sbb push es mov imull add add add add and (bad) pop (bad) mov (bad) cmp insb cmc call push ss cwtl call pop dec jge lret sbb pop dec adc lods (bad) xchg ja mov mov js lods outsb or push ret mov lods cmp jmp mov mov pushf or ret arpl sub push push add into nop neg test xor mov push inc adc push dec in cltd inc adc lock dec and inc (bad) or dec les add cltd pop loope fcompl lods jecxz ja in add mov lret mov cmp incl xchg add fwait mov mov xchg mov inc out xor (bad) das jge aad inc js test fstp or repz testb adc dec or mov sbb or clc outsl aaa pop (bad) mov clc je xchg mov or cmc push push add add adc mull int add jmp out cmp or rorb (bad) sub cmp shlb stos jge push in and sbb push push mov add ljmp dec xor in repz dec ret fnstcw sar das sub sbb repnz mov push xchg xlat out ljmp sub or arpl jl movsb out int3 push sarl std dec dec int jmp fisubr mov mov add add call mov mov cmp mov pop es push pop adc (bad) mov mov xchg xchg sub mov xchg mov popa je jns mov loop,pn xlat xor sub gs sub movsb enter fwait mov stos bound cmp jge sub mov jns lods arpl mov ret lret repnz in imul aas inc mov sbb ja xor push push jp xor fistl mov push out frstor inc int3 div sbb or ds pop (bad) aad cmp sub daa pop jle jmp push loope xchg inc clc jl mov xchg cwtl mov xor sbb stc jg jmp push xchg mov push in dec enter ret xchg sub lods push xchg or jmp jmp and and js xchg mov lcall sub outsl jb out mov add add hlt push pop dec xor or nop pop mov push push push xor mov loopne std push (bad) pop rorl xchg adc cld mov aam pusha (bad) ljmp cwtl subl inc or push out mov push mov sbb (bad) mov sti cmpsl cmp sub fildl loopne clc pushl fdiv fs call pop mov inc lea add sbb lcall mov shlb nop scas dec in test add add mov cmc lods into stos mov adc sbb repnz (bad) movsb dec push cmpsl gs sbb mov cmc (bad) pop inc xor iret icebp adc sbb and subb and mov aad in pop les mov scas daa fcmovne enter xchg xchg popf sbb stos add and mov iret mov xchg xor sbb rol pop or xor das cli cmp adc dec (bad) enter test and ret mov rclb rclb cmp pop fild dec sbb or orl mov push cld xchg or nop push add mov dec xchg je mov push xchg lea fisttpll xorb mov cmpsb testl (bad) mov push daa mov and and xchg xchg adc add mov mov in and jnp sub cmpl xchg mov ljmp repnz add test test les loope lret or and sbb pop inc addr16 daa adc sbb ret lea sub negb arpl or jns (bad) ffree xor xor push mov inc (bad) or popfw adc push idiv add in shlb sub xchg xchg pop adc aaa jmp mov test cld or sbb daa push cwtl fmull (bad) mov jle push (bad) lret push outsl adc ret psubd in push xor pop mov lea add hlt sub xchg inc mov mov cmpsb push add fwait mov xlat iret pop or xor mov out and js insb rcrb test mov push push decl or pop andl int3 cwtl stos rcr aad and add xchg sbb out repz mov pop loope fcoml pop or push ds gs xchg pop pop mov roll cwtl pause outsb (bad) call sarl enter cltd into enter orb cmp leave (bad) jne add inc movsl sub lcall xchg and mov adc mov xchg pop aam or or in out mov pop push or pushf sub xor addr16 sub (bad) dec imul inc xor dec lahf pop ja pop and add cmp sub mov adcb jne stos sub daa aad or pop imul imul mov xchg nop int mov mov pushw loopne popa lahf push mov jg pop adc mov (bad) xor and jge xchg xor arpl aaa mov push adc sarl out into dec jge jle mov ss fstps aad or add add sbbl aas fcompl subl inc mov movsb jecxz jne push or sbb jno cmp lods jecxz xchg outsl (bad) adc or push ret pop (bad) mov pop fwait lahf loop cmp inc (bad) repz clc iret and cmp fwait push popf sub subl inc sahf test ficomp xor fiaddl xor pop es push not add sahf or sbb push push jbe add cmpps pop and cwtl loop xor imul mov test add arpl pop xchg adc icebp std test loope movsb mov push sbb int pop gs fcompl pop roll cwtl xor add adcl xor jge aaa insl mov int dec pop leave rcrb (bad) ds mov cmp popf or push jp jne xchg insb push lods dec cltd mov xor lock push push nop mov jle sbb iret (bad) xor pusha jle addr16 fldl push sti loopne inc dec pop push xlat mov test dec sbbl shlb mov test rcrl cs addr16 cmpsb sub cs (bad) mov (bad) push loop addr16 jmp test je enter (bad) rolb mov sahf mov jle dec jbe dec in jnp (bad) jns jnp push add xor popf daa out out pop dec jmp sub adc xchg ds stc outsl fs or xchg (bad) xor rcr pop aam or punpcklwd push fadd sbb (bad) bound jp shl (bad) mov mov cltd cli mov xchg sbb mov scas pop cmpsl sub mov and jo sbb imul add sub insb aas call inc and (bad) cmp loopne dec out rolb add pushf sub movsb inc push pushf push mov (bad) dec fldt jp bound pop push mov int out leave fwait jecxz (bad) mov push cmpsl adc in into pop out shrl inc fstps dec mov jl mov fstpl stos xchg mov sti xor cmp dec pop inc inc (bad) jl jp xchg jne and test lret pushf xchg out (bad) sbb mov in jg into cmp dec dec cs ret mov fs mov sub add add mov mov clc jmp das es push mov notb bound mov test or or cld aad xchg popa repz (bad) fldl xor xor add add jg dec pop mov daa push fwait or or push (bad) clc in mov push pop lock das push in das insb push mov jmp inc loope faddp inc push jmp add xor push jg xor mov or repnz rcrb xchg or push pop dec adc mov dec in cmpsl xchg mov clc jnp fisub outsl repnz out xchg push je popa movsb out orl dec movsb insl (bad) or mov pusha (bad) mov gs push sahf push lahf or repz divl push and adc in stos mov insl lock aam xchg arpl fmuls pop jae aaa xchg xchg adc pop inc fcoml ret cmp dec stc clc lods (bad) push sub fadds (bad) mov add fs jmp cmp pusha das xor lods dec ret mov add and ljmp xchg aad gs cs mov cmp adc xor arpl cmp enter lret sahf aad push jnp xlat xor xor cltd cmpsb push sub ret mov outsb out pusha (bad) movsl rorl mov daa gs mov js add add and push adc pcmpgtd lods sti cmpsl loope xchg movsl sti cmp in sub test mov or jp lahf mov and pop xchg mov mov xchg fwait lds and cltd mov push lods into add cmpsl mov jl xchg mov mov data16 mov lahf or int3 xor xchg cmp fs test popf and cwtl stc or add inc in sahf sub add add loopne and hlt fsubs clc fdivs bound cpuid test icebp arpl sub (bad) adc outsl cmpsb xor (bad) rolb mov ss insl xor dec int3 inc xchg xor xor (bad) sub xchg lahf mov scas fistl xor inc cwtl add fnstcw rcr mov (bad) loope out testb orb lahf or push mov add iret mov sti notb add (bad) lahf mov negb push xchg repnz data16 test adc clc divb push mov adc jecxz pop stos (bad) test nop add imul mov and sub mov in mov push jnp test in mov (bad) xor xor repz ja inc inc and in inc xchg mov inc imul jecxz mov fisttpll or cmp bnd mov cmpb out cmpsb mov and add sahf xchg mov mov (bad) int3 popf test cld push xor fldl pop pop imul sbb push sub loopne inc add stos xor or (bad) mov test cmp loope and outsl es in jno pushf and (bad) xlat test jmp adc data16 mov test and and movsl cmp mov scas (bad) das sbb mov cmp inc cwtl mov nop lods (bad) cmc pop sarl jno add inc out ds test test add sahf or fnstsw mov xor shl jmp pop hlt hlt push jp test inc adc fs cli xchg jnp outsl xor or repnz stc movl add xchg cmpsl adc adc ret jle add lods cwtl flds addr16 arpl xchg xor pop in jmp loop inc xchg insl cwtl negl daa inc testb add int3 adc test dec cmpl mov fdivrl jp inc or lret inc jo mov loop imul pushf fwait adc xor ljmp inc je (bad) pop mov shr push pop gs or fsts pop jnp stos loope pop push xchg xchg fs cmpsl out cmc fcoms addr16 loopne out mov sub add ss xor push xchg and scas pop loopne sti and enter (bad) add add mulb daa dec (bad) sbb xchg out xchg (bad) clc ss sbb icebp (bad) fdivs popf and xchg xchg insb jg mov lcall repz jl dec inc pop or xlat xchg cmc xchg leave lahf sbb jmp dec pop out pop imul push push xchg lds mov outsb andl iret and mov bound push jmp push mov xor (bad) sub add inc sub inc xlat jle cmp mov add mov mov mov jge xchg or in add adc xchg in inc sahf and add mov mov cmp add popf push fyl2xp1 mov es xchg outsl das mov xchg popa jp dec pop lcall mov inc jmp xchg mov inc in lds mov jmp adc mov mov insb (bad) imull or cld fcmovnbe ret ljmp loop sbb add (bad) jecxz xchg addl add xor ss add dec lcall imul movsb out imul int3 enter xchg add adc pushf xchg cwtl mov fsubl sub mov xlat iret jns fsubrs arpl ja and mov adc mov jo iret pop sbb test adc push push mov pop add xor dec bswap data16 push cli subl aam cmp ret int test add cmp xchg adc test sub jb aad mov data16 pop (bad) xor pop std xchg dec cltd ljmp jmp xor inc inc cmc js dec lret adc and mov mov cwtl (bad) scas js jge push mov xor fisttpl xchg push pop pusha add push jne xchg test imul daa jge cmpsb (bad) cs adc ljmp dec add rorb icebp cmp and cmc jge jl add dec adc pusha or add (bad) or jge or mov or jmp mov sbb stos sub mov and cli and std std movsb rcrb mov lods lock and arpl mov cmc mov pop outsl mov test ss sar lods rorl divb popf cmp add xchg jg fs jo jmp sbb mov iret mov ret pusha int3 cld inc mov xor aad add and pop xor mov cmp xchg push push push in pop adc aaa out xchg test mull xor xchg adc iret icebp and fnsave out in dec sub stc cmp lret mov jmp js lret jne (bad) mov inc stos xor xchg xlat aas lds rcll mov push add pusha mov test add xchg push push pop push addb cmp les mov in ss call push bswap or adc stos sbb sub pop lock mov xor call rorl mov fsub xlat sub pop jp test cmp sub loope cltd cmpsl stos sub adc rol hlt add lods cwtl icebp xor lret pop mov (bad) pop decl dec outsb push xchg xchg xor test cmovb hlt cmp fcomp (bad) jne jl ljmp mov or add xor lea lcall push int test fdiv jmp xor rorl andb sub out in push mov xlat out pusha rorb sbb (bad) push mov mov push fwait mov push mov jmp mov stc jp or in scas movsl rcll pop add adc pop insb mov push mov or dec jns fisttp or and in pop or add pop mov lods pop aad and jge xorb cmp push mov mov cwtl cmpsb xchg add mov inc fdivrl xor outsl aad inc xor (bad) adc nop push jmp xchg dec popf add dec bound or mov mov xchg push stos sbb add idiv xchg xor cmp out jmp xor pop lods dec inc pop aas je mov jo cmp fdiv pop movsl repz mov add ret jae out nop (bad) das pushf jecxz rorl orl push arpl scas shrb popa fimull mov icebp mov or or pop out fstpt inc ror or call sub lret adc pop rclb shll mov icebp test scas cmp inc mov aam cld mov inc sub mov sti bound mov push push sub sbb les pushf outsb xchg push sub mov sahf mov fscale inc es mov jmp mov xchg xchg dec outsb push xchg xchg fidivl pop jnp loopne test push (bad) push (bad) cs addr16 shrb test jp repz insb out xchg sub cmpsl ror mov nop mov fnsave hlt stos dec mov adc andb (bad) pop adc cwtl and aam out jmp (bad) xchg mov cmp pop adc xchg lods mov mov push loope lret add mov int outsl in je add cld jo dec ja fsts dec mov popf in popf int jne aam dec testl mov (bad) movl jg mov adc lahf call and jne rclb jp arpl jmp mov fsub (bad) jns sbb (bad) xlat mov ficoml in xor jg or cwtl and (bad) pop imul mov pop xchg fmuls mov mov in dec adc add test int3 dec pop stos sub cmpsb cmp lods xor ffreep insl cs mov cmpsl jmp cmp data16 ret pop adc in dec xchg dec cmpsl nop xchg and push sub push jge pop xchg bswap roll test push addr16 test push out pop inc xor pop fs jg or xor hlt or nop (bad) inc xchg data16 mov repnz iret mov test test jno and jle gs outsb lock dec popf ljmp add aam or dec stc loopne dec cs test push sar inc fcoml jl xchg aad into cmp gs (bad) mov pop or xor adc jb (bad) (bad) (bad) cmp repz xlat inc sahf stos inc js int push mov sar das xchg pop in lds push jp daa pop xlat adc push adc jbe push mov add test sbb sbb inc mov fsubrs mov xchg cltd cmpsb outsl fadds and add cli pop xor daa sahf sub (bad) jl dec jle mov jge gs paddd sbb stos insb outsl pop ret int insl and sub out mov push jns jl xor aaa mov int3 aaa jg and push mov jge pop mov gs sar sbb sub ficompl lea es arpl mov push loopne lods test push fmul pop out xor inc imul add aas add sbb out xchg cmp in mov pop inc cld push mov mov jnp xchg push mov aam xchg stos loope pop test out xchg (bad) pop cmp cld ret lds (bad) hlt outsl in adc sarl xchg loopne jmp lds xchg push dec mov fimul arpl or fldt pop lcall dec test xchg xlat fs ljmp stos xor insb incb std lock lcall xor inc fldenv dec popf lock xor jecxz sbb or cwtl cli push and sub jbe movsl cmp mov xlat bound dec (bad) push (bad) dec icebp out fnsave punpckldq pop xchg dec and test mov jl xlat xor mov or add mov mov sbb dec pop js in pop add add fstpt (bad) das inc sub ds gs lods into xlat cmp fcomps mov jno pop daa push (bad) fstpl pop sbb notb xor rcr cwtl inc (bad) rclb inc push pop xlat cmp (bad) int jle sbb jecxz push cwtl jmpw mov out xchg jb jne xlat pop sub adc inc pop and push insb pop cmp sti jge outsl mov int mov out imul sbb lds push inc and mov jmp jo pop mov pushf lahf (bad) std mov inc pop pop iret xor lahf add xchg pop sbb mulb ret test (bad) jmp push ljmp insb jg out xor addl or xor outsl mov push add add xchg xchg add daa sub fldz lret fucomip adc jp sbb push xor push jecxz pushf loop cmp ja mov xchg lods mov imul das daa leave inc push pop mov cmp push mov xlat pushf mov jo fs inc out loop loope mov cmpsb add add inc insb cmpsb ret inc (bad) nop push bswap arpl or addb inc sub test sbb and cmp (bad) insl mov sub pop xchg outsb pop mov mov jp movsb (bad) xor adcl dec xor (bad) gs mov jmp sbb cli lock fwait sbb dec aaa mov mov push sub (bad) and cmpsl mov mov pop bound mov add into test ret mov in mov lret lea in sub or mov sub movsb (bad) push sahf ljmp pop jge dec adc leave fbld out lcall cs xchg imul xchg mov push mov xor imul inc add hlt (bad) repz (bad) dec in push and adc in (bad) cmp xchg pop data16 fwait push lahf in xchg icebp push pushl loop in fsub rcr xchg nop add add ficompl push push sub mov mov push out (bad) adc mov and test xchg cmc xchg setae inc lret in pop dec in push add push fwait cmp adc xchg ss leave mov test rorb mov lods nop ficoml mov add bound pop mov and add je pop lods cmpsl test fs push pop ja icebp repnz jb (bad) fwait sti loopne xchg jl pop out lahf jge stc push xor push loop cmp mov add inc add fcoml push scas loopne inc push mov mov js jno aas mov ljmp dec mov push sub push inc repz (bad) inc inc jo pop fmull loopne (bad) lret mov inc pusha jno dec in or mov rolb add mov jne out or arpl (bad) out bound lret mov add in gs mov fistpll imul add add or lahf jge mov lahf sub clc in and lret (bad) insl fucomi test push mov out std or in scas movsl int js xlat xor mov inc xchg repnz add mov mov or cmpsl or dec dec movsl lds add dec scas cmovl jge mov push je sbb push ljmp (bad) les cmp jno arpl loop pop leave mov decb adc pop mov iret (bad) xor das into add add add aad push lds push inc push pop adc inc mov iret inc mov ljmp (bad) popf stc xchg paddd sarb stos cwtl imul cltd push stos pop xchg push mov mov jecxz jbe push inc mov imul adc lock stos xor sub ret xchg adc bound cli or jo sar arpl test inc push push fstp out mov cmp in or loopne mov cwtl out push pop add aad add iret mov xchg les inc xchg (bad) xlat les out xchg sbb insb gs (bad) nop mov clc mov daa mov lret ljmp xchg fimull gs push xchg or stos xor sbb sub scas leave (bad) jg push add adc scas mov sahf inc mov and sbb mov or and cltd mov out xlat test scas arpl add js in fildl pop cli data16 out inc push cmpsl adc sub test mov dec fdivp movsb insl mov add lahf mov sub cmp (bad) or adc scas inc dec sub xor push stos push mov mov repnz lahf mov scas mov inc jo stos sub (bad) xor sbb pop adc arpl cli jae shlb lods xchg jbe js mov mov (bad) addr16 add sbb mov cmc add dec (bad) add lods into stos jmp lcall cwtl or mov repnz outsl mov dec ficomp insl mov sbb add fiadd (bad) dec stos cmp insl enter sti push xor insb or sub cmp (bad) insl (bad) xor cmova fisttpl mov movsl bound fs fcoml mov ret and sub std testl add ret mov je push lea inc push ss cltd sahf test and add and push getsec imul cwtl cmpsb pop push pop push mov mov pop push (bad) enter jge mov or xor inc or mov in in ret lods lods inc pop and xchg mov cltd sub hlt push in mov lcall mov shll hlt insl adc daa ss add daa jp pop pop jne mov add fs sbb jne aad jae sub clc add out mov add addr16 pop imul jle cmpsl mov in inc sar and outsl (bad) movl cmp or (bad) out mov aad aam push ljmp daa inc push push iret sub arpl jp pop and sahf or sbb (bad) test dec add les sub fldenv aas or insl pop in pop inc sar push xor insb aam dec outsl cld rorb sbb pop xchg lods mov push loope fistl out mov add loop jle push mov or pop fxtract inc sti in jb jecxz jo (bad) mov cmpsb int3 inc mov test inc and push dec add add sub mov (bad) lret inc addr16 je xchg outsl mov and jge mov fcoml aad cltd adc xchg mov pop and clc add or inc inc pushl sub out pusha jge mov mov dec pop outsl in aam jne add add test (bad) movsb mov jmp ds or pop lods arpl pop fbld cld lods out jmp sbbl xchg enter into movb popf imul aad int aad pusha mov out and mov pop xchg cmp mov loopne mov pop cwtl add adc mov jbe cs fmuls mov mov push sbb xor imul fcmovnu push jmp add add clc jno xchg popf (bad) cmp and fsubrl cld mov (bad) dec ret adc mov lods lret add mov lcall bnd (bad) jnp (bad) leave pushf loop (bad) sub das aas aaa mov adc or stc stos fistl xor (bad) dec mov gs push and pusha pop out mov sub add lods cmp dec rcrl outsb adc mov cltd aaa inc lcall add add idivl inc mov sti lret mov insb (bad) imull lea daa sbb cld xchg add daa jp negl mov dec inc push int3 add addr16 dec and test test jns mov xchg sti int je ljmp mov cwtl inc mov sub mov adc aad cmpl jb dec in or inc call sbb mov sub arpl mov xor jnp lds add push sahf and dec cwtl dec in das (bad) loop (bad) pop sti and cmp or mov ficoml mov lock cmp xchg in push ror mov mov ret xor mov push std xchg stc data16 add xlat in jg sub mov cmc sbb xor mov cmp aad adc xchg sarb cmpsl sahf fcmovne push and cmp pushf lahf fdivs push scas es ja rclb repnz cltd test pop cwtl fcomp xchg popl xchg mov pop adc in push scas push cmp inc push or bound mov pop mov xchg cmp aas sbb mov push mov (bad) jno int3 leave test scas aad mov popa jne sub mov aad sbb out in push repz or push cmp mov jb aam (bad) jne push jecxz cmp add insb jne xor and mov push ja aad cld (bad) jp in mov sahf popl xchg mov pop (bad) push leave sub (bad) mov daa cmp adcb pop inc adc sahf and sbb cmp inc mov dec fwait mov or pop cmp pop xchg add inc pop push scas test iret data16 mov cmp dec pop adc lret cmc adc in mov pop loopne xchg les jo inc adc scas cmp add cmp cltd push push pop dec (bad) cli movsb adc neg (bad) ljmp lret push xor in sub loopne push loope xchg mov adc add add dec pop and xchg pop mov fcmovu pop rorl pushf inc pop sub addr16 gs fwait sbb cmp push jp inc out fwait pop push inc mov aam dec pop push test repz shlb add adc movsb test adc out out cmpsb ljmp outsb in dec mov and mov inc or mov pop lea sbbb cmp sub push mov icebp sub or rclb xchg add push mov ret cmp fs sub dec cmp xchg cmp pop jp and xchg push rcll popa (bad) movsl pop jmp inc arpl mov aaa cmp aam mov fs inc mov cltd pop cli js or in ret jo,pn add add mov jae pop call or pop xchg stos lock cmpsl out cmp sbb flds mov xchg adc xchg jg stos cltd lock adc gs jmp and cltd push out pop push xchg jb xchg fcomps pushf push pop into mov repnz inc mov adc popw int push dec xchg addr16 mov decb (bad) es hlt add gs cmp jp inc pop test adc lock add adc leave xchg inc and mov pop shrl pop lahf inc (bad) movsb ljmp dec mov sub push pop mov outsb mov jno mov sub aaa clc jmp jo sub mov repz fsubs outsl xor lret insb addr16 aaa and movsl addl pop dec inc rcll push jbe add dec adc push imul popa hlt inc lods outsb sbb aad jecxz mov fsubp add add addr16 cmc ljmp fdiv jecxz fs inc push enter scas push xchg push daa cs mov xchg (bad) xchg jbe aas mov jb xor loope (bad) std js into add notb lret (bad) (bad) loop mov pop pushf fcoml loopne testb push inc xchg (bad) aaa push mov js (bad) enter js in add call cltd push or loope or ror xchg sub jmp jmp addl jno int3 data16 enter or das idivb (bad) fisubrl cmp push jp xchg jne xchg push pop bound hlt je push cwtl fdiv in cltd or pop jge pop lods arpl pop fbld cld lods out jmp sbbl lahf enter into movb pushf mov cmc cmp pop cmp inc pop (bad) (bad) fcmovnb fcom or push int mov sub mov mov lahf jecxz fs push sbb add dec ficoml (bad) incl add add ret gs jle mov jns fisttpll jg je lods sti sbb lock cmp pop lock push loopne jne aad mov test stos scas fs dec pop or mov aad pusha add dec cmp jp jne pop pop in stos movsb lcall xor arpl hlt ret ret lret pop jmp lret pop cmp leave test push dec (bad) clc je clc jg out ror cmp test je jmp mov stos in jg jbe,pn add cmc fistpl dec iret in ret lds push js (bad) rorb icebp cmp (bad) cmc sub jl sub (bad) jmp xchg mov hlt add data16 insl mulb nop enter mov ds sbb stos and fidivl insb ret addl cmp xchg jb outsl out jl jmp sbbl popf enter push dec mov mov (bad) sub (bad) jge jmp push add jbe or stos arpl mov push insb inc cmc cmp gs push push pop push adc int mov iret mov mov (bad) lahf mov negb or mov dec adc dec call lods fdivs clc outsb xchg daa mov inc ds call push loope mov xchg idivl jns pop movsb push pop rol addr16 pushf cmp sub push sbb enter mov xor dec dec movsl or add aad push adc or ja jg pop or mov cmpsl jae in xchg and mov jp mov lock dec jbe pop nop xor (bad) lds sub leave jmp pop sarb pop aad (bad) push je (bad) sbb inc xchg jmp mov mov imul fst mov jno test sbb mov sub jecxz xchg mov mov inc (bad) jecxz aad cmpsl lret sub adc cmp adc add add inc push and hlt inc inc add mov (bad) pop push sub insb cmp out int jle mov push and test jle test jp in ror pop jo mov sub mov aad sahf sub je adc jae pop rorl (bad) push inc jnp shr test movsl push and mov and jl xchg jae scas bnd orb aas xchg adc cmpsl shrl jecxz xchg (bad) and inc (bad) jecxz aad add add add cmpl cmpsb enter (bad) adc and pop hlt inc inc fdivl sub out dec loopnew out popf add push sbb and sbb adc add inc xor or cmp xchg fmuls movsb xchg fwait cmp sbb add sbb jg or add mov cmp shrl repz sbb sub fcmovnu add jecxz pop pushf mov cmp (bad) fsubrs push outsl dec cwtl adc arpl sarb inc or xchg fidiv mov arpl adc outsl adc sbb out popf cmp push insl cmp int jnp clc nop and (bad) mov out inc xchg rolb ret xchg xor xor int3 cld xorb xor leave (bad) (bad) and test sti push xor push and outsb mov orl dec add dec inc jb nop xchg sub scas push loope push adc inc mov cmp xor push fstpt cmp stos leave (bad) jg repnz call in dec int3 inc out data16 ret sub in fisttp imul test inc mulb sti sub cmpsl adc les sub mov cmp data16 jle inc fnop fcmovnbe aaa jae inc outsl int rorl pushf aam xor cmp cmp in adc cmpl add push rcl inc sub lock ret mov out lods hlt movl add fcoml out movsb mov les cmp (bad) out roll pop push adc sbb xchg (bad) cwtl adc sbb stos leave inc inc jo xor sbb push inc or pop sahf mov jns dec in or arpl mov cmp add out inc push cmpsl lcall sahf lret andl mov mov js fs add adc pop adc mov loopne in popf sbb pop les mov mov jnp adc xchg mov js test push aad mov outsl int imul add cmp je or (bad) call xchg dec dec int3 enter jbe cmp hlt adc jno out dec dec adc leave adcl out pop or cmc push jne pop mov mov xor pop mov inc in or out mov add xchg mov xor push push gs (bad) xor outsl mov fnsave decb test pop inc sub not push sbb movsl add mov xchg mov nop xchg pop imul loope in xchg and int xchg sbb add jns add jp cwtl xor scas sbb jbe jb int pop outsb mov into sbb lock loop movsb cli stos into shr frstpm(287 ss jbe jb notl sbb aad incb add sub pop or mov push call mov dec iret repz jo ret lcall mov push lahf loopne or std jb imul test ja lock mov inc call xchg (bad) inc dec ljmp add aad or xchg add je mov inc pop and cmp jnp lret (bad) mov inc pop mov daa stos lock and push pop cli adc sbb add mov ficoml fwait ret inc stos popf cmp xchg scas cli push jne xchg stos mov jno mov push clc pop dec loop jo xor sub into fisub and mov cwtl mov jmp in lock int dec cmpsb pop sbb not adc (bad) fsubrs mov test ret (bad) fimul fidivl lods push jns or xor stos push cld sub pop cmp imul cltd lret mov rorl cltd adcl (bad) cli jne push loopne or sti arpl mov imul icebp lock mov adc push push cwtl loopne fs data16 call popa sbbb inc adc mov sub cmp aad xor sbb mov fimul and movb (bad) (bad) cmp fisubrl data16 test pop mov (bad) lods test add add and faddl mov leave push fs mov call mov bound aad push (bad) (bad) in cmp mov mov fstl das imul or sub adc (bad) pop jg aas mov xor pushf jns test sub (bad) push push mov add inc cmpsl or pop jbe repnz push pop das push (bad) xchg inc es lcall pushf jmp pop sbb mov push and push xchg es sbb add dec lds aaa sahf mov ss dec scas jl cmp cmp cmp xchg pushf push negl pop xchg xchg push xor jno (bad) xchg movsb (bad) xlat pop add das xchg add xchg dec inc lock (bad) pop mov int cmp insl roll lds fstl jae sahf add fdivs mov xlat (bad) imul jg mov add sbb pop xor rol mov add mov fsubs fidivr je cs lret push (bad) cmpsl arpl in mov add pop xor rcll (bad) adc std or icebp outsl andl jp mov xchg adc andl mov jno xlat lcall jl (bad) fisttp jo inc (bad) (bad) push push push insb mov fidivr adc mov movsb jns bound movsl or xor ret inc into es lret fxam pushf xor cmp push lcall pop ret out lods sbb sbb xchg adc inc adc or hlt xor pop pop cs lock (bad) push mov rclb jmp mov out jb pop xchg add loopne shl out std icebp test ja ret es enter sub (bad) jnp mov push xor push mov scas inc out cmp add (bad) lods pop mov (bad) repz inc xchg in adc inc or mov mov lret daa fsubs imul pop (bad) lods and mov pop sub jge gs stos mov and rcrb xchg inc xchg or arpl jecxz or rcrl outsb mov je sub fdiv repnz push shrb xchg mov jae ja xorl rcl add bound lods nop gs cld jecxz inc add pushl pop cmp push cmpsb and pop je push push cmp inc jmp fwait push ss add daa mov mov fstpt cltd es adc imul xchg or aam les (bad) mov jno scas fnstsw fstl in jne fs sbb imul in jecxz into cmpl test cltd hlt outsb pop xchg movb mov int3 icebp stos test add jo mov ss and fs lcall jmp (bad) lods lcall dec inc push fcomps xor xchg icebp jle mov push (bad) in sbb std stos add lahf mov jo int pop mov xchg shlb and mov and fiaddl adc stos pop ljmp test (bad) jae xchg div arpl aaa xor dec add add shl mov dec push daa mov xlat mov (bad) les imul mov scas push iret xlat xchg sub cmp (bad) repz cmp sub les std pop jle sarl mov loopne cmp cmc cmpsb lret lcall stos movsl mov xor jns fcomi xchg mov dec or scas sbb or push push push stos dec fildll jnp aam fisttpll bound mov pop pop add add imul jmp outsl jge xchg add mov mov push rcr ljmp pop adc es dec repz jmp repz leave push cwtl out xor sti dec mov inc or fs arpl pusha fwait push gs add push cmp fs ficom xchg arpl cmp in fisubrl mov jl int pop mov inc xor icebp aam pop add add int push pop jo imul std pop xor sti cmp xchg sahf les testb pop pushf add scas sti mov in daa shrb add scas dec shrl and xchg adc clc xor fildll sar jge sti push jge or inc or xchg gs sahf add dec inc inc mov lods or stos adc gs dec faddl aas cwtl shlb pop (bad) mov inc xlat pop fiaddl add add js jg or mov fnsave xor cmp orb or fdivrl lods mov jb jbe icebp outsl and sub mov jo pop sub inc daa and call mov lock cs dec inc sti cmpsl nop xchg xchg add cs iret pop movsb rcll push cmp dec cmpsb (bad) icebp ret mov push adc cmc mov out xor mov scas (bad) shlb pop dec shr mov add add add add or fsubrs jmp roll into addr16 cli loop add cmp adc jg mov adc loope xchg pop or lret mov push dec sti jg dec jae,pn call mov xchg rorl sbb les call and ret mov pop xchg push test pop mov mov cs xor sub das test aam xor mov ss adc xchg lods cmp pop mov add orl inc das inc fisub lods ret inc cld (bad) js cmp dec push test mov dec mov xchg fs pop xchg cmpl test dec andb xor and arpl pop lea pop jmp mov xchg scas push jle cmp xchg pop sub mov and pop pop xor adc push push repnz ljmp add (bad) mov jae jnp icebp pop mov out dec dec std push jge jbe mull in mov mov sbb inc mov lcall mov add shll ja clc stc clc in cmovp imul mov scas daa mov cmp js or sbb mov jmp int jno ss leave xchg push mov mov int pop cwtl arpl lret flds cmpsb (bad) xor sarl imul ret pop scas inc (bad) mov adc jnp push push insl adc pop inc dec adc andl roll out pop int outsl in xchg bound push dec or xlat repz call (bad) mulb lret inc push adc (bad) rolb movsl xor rcrl cmp xor sbb jne xor movsl sub inc mov jp add loopne pop rcl lea pop push xchg je test adc mov in xlat pop push (bad) pushf pop add xor cmpsl mov jns mov out dec inc jecxz xchg push inc test push mov rep ja push mov cmpsb inc pop jle push mov fildll mov jl pop lcall roll gs xor mov in inc jne int3 push test enter sbb cmp (bad) hlt movsb pop inc (bad) xor add add rcr js xchg push cmp arpl mov inc push cmpsl sbb push push ffree jmp xchg mov popa ja xchg mov push sub cmp scas mov movsl mov xchg mov fucom adc int3 test fs jnp sbb mov popf sbb lcall push stos add jl cmp mov loope popf daa mov ss inc or mov mov fwait mov fcmovnbe (bad) jle dec negb mov jne push cmovge aas add daa jne movb (bad) mov pushf dec mov sahf adc pop adc cvtps2pi xor lret sbb sti push xor jo dec sub (bad) (bad) xlat pusha (bad) pop fwait cli lret popl test sbb adc adc test in jb pop fwait xchg inc adc xchg pushf rol cmp out add jmp das lock sbb cmp sar lods shrl mov sub add push and mov xchg push lcall sbb mov lret scas jns in fs ficoml lods sbb xor jbe adc dec pop iret xchg mov daa or pop es test ret nop test hlt sub fs or ja jg sub mov repz shl jb mov and add fldenv xchg imul cld pop lods jb inc jle in pop ret xor fcompl lods call mov mov fisttp xchg jge push push (bad) (bad) imul (bad) jb iret pop arpl push nop lret scas lcall cltd inc in inc xor xchg ds xor je outsl jb and pop push sub add sub pop inc call mov jo push add jo out and add cltd lods adc lret test cwtl mov pop and (bad) das sbb mov jo mov outsb mull dec dec sahf push inc mov sbb mov jb insb xlat push loop,pn stos mov cmpsb sub addr16 cmp cmp fildl xchg outsl xchg push inc imul movsb (bad) daa mov mov cmpl ljmp inc mov and jno cmpsl xor mov lds and add pop test mov sub sub stos std or lret jg loopne jb test rcll inc ficompl adc pop sub imul mov xchg add pop iret pop push inc dec daa mov inc and cmp xchg scas jmp pop leave dec jg nop es (bad) cmpsl pop push add add sbb cld push arpl les jne sbb sbb test sub daa test add mov outsb pop pop push (bad) hlt push xchg xor pop jge push sub adc aam push mov sbb sbb call xchg sahf fild es test sti jmp xorl hlt push xor daa inc pop ret mov mov (bad) into imul fistl (bad) lahf (bad) push cld insb das lods add cmpsb gs or ja cmp lock insl or ret fwait xor mov stos push mov pop movsb pusha jge and cmp lods nop adcb js inc dec cmp cmp cli fldt pop mov out and or adc fnsave pop xor inc iret xorb cmp sub push rcrl xor lret (bad) dec out incb nop jo jno das repnz ja insb push cmpsl aaa xchg lret in fldl xchg mov imul std hlt cld iret sti shrl hlt lods call pop in icebp movsb mov add repz stos jne or add ljmp xor jnp push repnz inc mov mov pushf adc jmp ss cmp into lahf adc xchg (bad) push sub repz pushf mov (bad) lret or loop pop (bad) ja add sbb lret inc inc in mov cmp xor jecxz cmp aam and dec enter fs sub add add add add mov fadds pop mov js pop lock push nop mov xchg cmc or adc xor pop dec in or adc pop inc inc mov call xor inc pop inc sbb scas cmp sbb mov pop int les cmp mov push dec pop das sub loop cmc sbb dec inc inc jo cmp mov inc adc add add aad out or popf push add xchg loope enter and cmpsl gs movsl or sbb lret fildll xchg fdivs and push xchg or lock xchg lahf sti xor and arpl jp les cmp daa mov push xchg ljmp mov xor xchg aad pusha add test fadd aam xor shl mov repnz lods add or lcall add mov pop pushf push dec hlt sar mov mov jne pop fsubs fcoml xlat and (bad) (bad) icebp inc cltd and or pop (bad) in (bad) stc sarl rcrb lret ficompl mov or sti dec adc pop in sub jp les cmp daa mov lret out ljmp mov popa fnstsw loopne mov fadd aam xor shl mov add repnz mov sub sbb xor ljmp (bad) mov sar mov mov jne pop (bad) fstl ds insl clc adc sbb pop jmp test je movsb out cmpl je stos xor pop pusha push in lcall leave (bad) pop xchg ja cmp and adc aad scas inc ja push bound xor and and test inc or int3 divb out add mov out push or pop (bad) mov add push loopne hlt mov aam fadds xchg mov add add pop push out and mov (bad) rcr aaa cmp push outsl inc clc dec scas jne outsb sub imul xor imul and push mov pop imul xor sbb inc repnz stos mov sub xchg (bad) pusha or pop dec aaa dec ss negb je outsb or in inc repnz leave and insb ja sarb cmc sbb add add ficomp push shll sub cmpsb sub mov mov fcomps adc mov mov jmp dec fisubrl scas rcrb mov xor cld (bad) xorl mov mov sbb xorl cwtl fistp cli cmp xchg push pop add sbb mov add mov stos in divl subl (bad) dec ret js es jae push out stos fdivl (bad) xor pop add add add fnsave sbb jb inc cltd xor iret and orl call cmpsb push fs xor fcmovnu and xor (bad) rorb sbb mov popa push das fnsave mov ficom add jbe,pt mov insl lods roll mov sbb ss test or stos iret cmp adc add sub nop test enter and dec sbb (bad) (bad) into scas mov cmp nop psubsb fdivs push rorb sti jle (bad) push push daa jnp mov mov subl push and scas inc cwtd ljmp xor xor repz add fdivp (bad) or popf mov push mov jmp adc inc jbe popf inc sbb arpl (bad) out and mov cltd rclb (bad) pop mov push push jmp adc xor mov ficom inc and pop ret mov rorb push inc pusha cmpsb dec gs push testl and push sub inc fisttp jae into mov sahf xchg lahf mov adc (bad) fwait xchg je mov out aas in jb (bad) lods xchg xlat jns popl (bad) fnstsw push mov xchg lahf rolb sub dec test vpmullw sahf (bad) test sub or jmp leave mov inc int3 mov add add add add in or push sub xchg dec imull (bad) repz rcll xchg xlat imul out in roll test sti ror loope decl aaa movsl (bad) es sti jl mov (bad) add ret sub pusha in mov sbb xchg js push jmp xor dec dec mov call shll lahf and cmp add adc pop iret sbb cmpsb ret xchg enter mov ds sub shr xchg hlt popf jle lea mov sahf sbb out jae sbb sbb xchg (bad) pop push or cmc xor (bad) sar cmpsl mov or jmp lods aas adc fcompl jp dec mov dec jo push int sti xchg scas (bad) xchg enter sbb (bad) xor xor stos test scas (bad) (bad) mov jecxz mov add pop xor or mov sarb fs shrl (bad) mov ror xchg push xlat add rcrl cltd ja jle imul dec outsb je xchg inc push fwait adc pop aad cs jnp and jmp mov push sub rcl jne xchg out arpl and sub out dec push idivb xchg mov cmp pop stos inc inc lods jb push cvttps2pi fs pop pusha lret test stos pop xchg mov icebp in data16 add add push cmp ja test fnstenv fdivs jmp sub dec and stos mov jb test repz into mov data16 mov ja push daa jp add mov (bad) ret dec jb mov out sbb fimull cs sti ret push jbe mov (bad) xor mov nop les push dec repnz movsb stos mov mov xchg bound (bad) repnz mov push arpl adc mov add sbb (bad) mov rcrl xor add enter sub mov jo lods test sbb sub mov hlt ror lds push pop lods imul sbb imul inc call inc cwtl mov out pop cmpsl aas mov sub (bad) jp sbb xor sbb out xor movsb add mov pop and mov stos push stc lods jp outsb mov push inc mov adc add ja stos clc push addl rcrb cmp or leave clc mov in mov cmp or cwtl lds inc loopne aaa xchg out xchg aad test aas sbb aad stc cmp lcall or rclb aad mov subl add stos pop mov out and cmp jmp mov scas xor rcr popa sub inc (bad) jo xchg xchg inc inc add add test aam mov test dec jo sub xchg sub pop je (bad) xor dec dec pop lea mov and jno push jg or xor dec or out (bad) adc movsl inc rcll jbe cmp adc imul arpl mov and mov (bad) xor inc sbb sbb cmp push jno mov xchg xchg test and inc mov add add fs push lcall pop mov mov push and shll mov sbb push and mov pop jle fiadd sbb repnz dec add adc xchg popa incb call mov mov test fstps cs movsb inc dec movsb mov xchg popf divb adc adc int3 mov rol adc pushf mov add add test out mov cmc out or pop jno ja and jmp (bad) aad and pop mov sbbl mov push dec pop xor loope pop xchg cmpsl scas insb xchg into inc jne in and jne pop pop in rcrl dec cwtl fs out cmp xor mov xor inc and stos ror add sub hlt push xor cli xor push outsl fisttp ja jl mov inc fidivl cltd flds cmp jmp mov push adc loopne ret push push jge (bad) fist shlb in fwait rcl sbb xor jae mov mov lcall jns mov pop rcr dec xor cmp xchg push loope mov sbb xchg jecxz ja aas in and and sub mov mov and or popf xchg mov (bad) cmp leave ret int3 sbb xchg dec out dec ret mov mov cwtl xchg lret hlt add test (bad) jne add xor cmp (bad) cmp dec mov xchg lret add in fxch fsubp push lods je nop fdivs in ficompl or pop dec adc cmp adc inc cmc gs dec cmp aad cmp das aas mov jnp lahf inc loop sbb aaa stos sub mov cmp adc dec das stc inc and mov push adc js fildll jns test xchg out xor loopne push inc aam add mov jge fdecstp iret nop dec sbb sarl adc inc fnstenv xchg loope jmp inc cltd and sbb add lcall ret mov pop push sbb sbb dec js test pop mov adc or iret add mov inc mov imul sbb shll cmp loope add roll jo xor lods lss or mov add cltd decl lret xchg cmp cwtl fildl subl jae test dec test rcll sub jne ret je mov sub xchg cli ret pop lcall lret pop mov arpl inc in cltd loop in and rorb dec lret mov ss jge imul inc cmp inc xor scas inc ficompl out dec fidivl pop sbb dec and js cmc stc jbe leave or inc mov mov jmp ret xchg int mov adc pop jnp loopne mov xchg das add daa test dec test adc cmp scas incb out mov (bad) out jl inc lods out pop out push pop mov lahf jg mov sti repz xor push xchg mov push mov and rorl dec ja pop and in mov stc add scas pop popl add mov lahf aad adc sub xor pop outsl mov (bad) push (bad) call cmpl mov jge push pop pop mov xchg into test das lods (bad) push xchg hlt push loopne mov push pop add into add xchg loope lret jecxz and pop sbb ret jge lods dec shll call cld insl (bad) sbb mov mov or lret sub sub jnp dec xchg push in mov xchg dec add add (bad) test fisttpll subl ret repz (bad) jecxz subps inc add test fwait add sarl adc call adc pop pop fisttp mov push fwait rclb daa add inc hlt sbb dec in or lcall sub cmp movsb add push cmpsb inc sbb jp int3 or jecxz xor sub lret sbb (bad) inc lock and in mov testl adc add add cmpsb cmc jmp mov mov mov lock jbe fwait out push adc ljmp and repnz stos jl mov test not adc loop mov sub mov pop mov push in sbb inc test jae mov fwait sbb cmpsb sbbl mov jnp xchg cmp and sahf jp xchg cli stos imul adc mov lods add jo inc data16 add add aad leave (bad) (bad) and imul fistp out adc in mov dec roll adc dec jno test inc loop lcall cs jb in cmp gs cmpl data16 add push stos mov ja adc xchg in inc xchg gs xchg jp sar movsb pusha stos jno mov mov (bad) sbb es std std and xchg aad sbb out add roll add popa rep jmp push lea (bad) aam inc (bad) pop fwait inc mov in add (bad) outsb pop sub xchg out or les rcrb adc ret inc dec repnz xchg mov mov push std mov jecxz pop fnsave xor in shll in imul fs call (bad) push add aaa call insl scas cltd add lcall shr into rorb ret xchg setnp xor add out mov out push mov xor es inc mov dec in cmc icebp adc fiaddl idivb mov jne or leave push (bad) cmp (bad) jmp iret cmp and cmp (bad) or loop lcall aas loopne xor lods sub cld push das xchg test and sub in adc add jp ret stos arpl popa pop icebp test les nop hlt stc test test xor xchg mov mov mov data16 hlt mov rol dec out xchg add pop (bad) es rclb push adc mov pushf test popf inc add xor cs je sub adc push in je pop std (bad) loop add and cs imul hlt ffree dec mov pop ja pop imul and lahf xlat add and sub ds cs mov sbb pop jecxz mov or in lret add push stos sti xlat fimul or into jmp cs jp call notl add lcall repnz push and sbb aam rcrl sbb mov mov ret jno fs push movsb data16 mov pand imul pop sbb out pusha push repnz jne xlat xchg jg daa mov lret ss adc incl push loope sbb sti inc lods mov dec lcall jl movsb nop cwtl (bad) mov push jnp mov add popa inc jns (bad) dec int3 mov inc inc and (bad) iret add sar das popa mov test (bad) lahf pop and push jl into out insb xchg mov xor fcomp xchg push pop mov test fcoml and mov rorl xchg add sub cmp fwait inc xor mov loopne xchg mov (bad) sub xchg xchg adc mov pop mov aad jecxz movsl in add add or mov loop push jno jb jmp add cmp sahf xor pushf mov dec and dec push mov push pop and das adc inc push pop mov pop pop pop pop inc addr16 sahf jb xchg test bound xor movsb xchg lret xchg push js xchg mov je dec mov ljmp mov cmc dec or sub xchg sub testb mov lahf ret mov add test xor cli ret cmp cmpsl sub cmpsb jl push cmp shll ss and fcoms adc mov (bad) sahf adc enter push insl mov sbb (bad) jmp das cwtl jecxz push jecxz lock fstps rorb push pop pop sub add in cmp jmp xchg addr16 ficoml xchg dec fisttpll or incl push ljmp repz add add rorb outsb imul dec cmp movsl mov xchg add dec fisub aad mov pop cmpsl cmp push jg fsubs push jno dec stos mov cmc jle ret sbb out cltd into sbb sub stos pusha ret or xchg sbb adc cli jg mov enter (bad) shrb xchg int xor jge cmpsl jb xor (bad) push jp push js jne movsl pop lahf lcall in aad out sbb add add fiaddl scas push xchg into in sarl imull fisubr movsl pop loop adc lock xchg jg jg push and ret dec (bad) (bad) sub pop sbb leave insb push xchg sti fimul cmpsl repz test ret mov sahf out test je out mov xchg lahf lret pop mov scas arpl xchg xchg mov sbb mov insb mov sub scas mov jp leave or cli xor add (bad) mov fs lds and xor movsl in mov (bad) mov mov ljmp fmuls or cltd fsubrl and scas fidivl ret imul mov cwtl sbb adc jecxz mov sti pop inc mov or dec jae push or or ret mov mov jbe or lods mov dec rcrb rcr push add mov jb frstor insb andl xor mov inc hlt fstpt lea iret jg popf sbb lea sti inc pop and test jecxz sub daa sbb inc push lahf or (bad) add int loopne jge sub sti push jae std sub roll mov mov jae lods cwtl cmp adc mov inc es push xor cmpsb loop insb mov lods fucom (bad) nop mov xchg imul icebp jge xor test mov dec jnp cmp add mov xchg div inc or sub lcall add iret fcoml xchg je cltd hlt fs call fisttpll orb je daa pop dec aad pusha push incl or ret and cmp add nop sarl fcoml xor sbb jne push cmpsl sahf sub jmp fnsave xchg aam incl jmp lret pop inc dec mov mov (bad) nop mov add add leave cmp in ljmp ret fisubrl into stos subb add insb out in movsl mov loopne (bad) fwait sbb rcrb fnsave test inc inc mov movsb dec in dec xlat out jno mov insl and pop push div push fsub mov iret ret inc dec mulb push mov movsl nop push aad scas int int3 jle loopne test mov push (bad) fs push repnz repnz add add add mov das out lret loopne nop mov xchg imul shr pop sahf sbb fwait jo pop mov stos andb add outsb out in movsl mov or jmp sbb je das mov adc int3 (bad) xor cs push (bad) shlb dec cld fnstsw mov outsl jns (bad) xor jg jl add inc jg lret movq outsl imul fcoml jp gs sbb sub add ds and dec push xor lcall loop jbe lcall lret dec jg fisttp int fdivrl jge add push pop mov push mov pop push popa aad cmp push repnz in fidivrl in fwait in sub sahf mov sbb or and pusha pop pop cwtl dec in or mov loopne sti push clc (bad) insl movsb mov mov (bad) xor repnz stos cmp adcb test xlat xchg lods push aad or repnz addr16 xor mov cltd dec mov mov (bad) call (bad) push inc xchg pop xor adc fisttp or (bad) jmp inc add pop mov jne pop fiaddl adc push mov push and stos mov arpl xor (bad) sahf inc or nop arpl mov stos and fldenv sbb add push and adc or (bad) pop add add add mov daa out xchg cs adc lods jecxz inc or xchg push stos test dec and and jnp cmp fcom fist in cmp jmp (bad) dec int3 sahf decl out xor and clc lods movsb dec scas mov ret gs mov jl cld repnz mov lock stc outsl repnz stos pop fsts pushf sbb xor out cmc ljmp dec xor mov adc in shrb xor push stos mov (bad) mov xchg ret sysret mov mov aam push (bad) stos cmp add inc and mov pusha jmp sti mov idivb enter cmp add pop outsl (bad) mov popf adc pop stos daa jg pushf push adcl xchg xor fisttp lret sub cld roll ss nop jnp out sbb mov push sbb inc mov (bad) add add into shlb js adc cmp int jp test and and cmc shll fwait and ja lcall mov push cs inc mov sub jg mov pop repnz fbld jo fs mov sub lret or inc or test ja sbb mov or mov loop or (bad) movsl bound outsl xchg cmpsl in aaa ret add add inc push push nop xor jg fwait add xor pop in pop sub jb pop cmc jae jge or dec sahf cli ret mov cs dec lea cld add int or test push push shll and (bad) scas addr16 daa fcomps std xchg dec cltd jmp push jnp ret ret dec daa in lret xor lret cmp fistpl cmp bnd fs pushf push xor adc aaa fs loopne insb addr16 ss (bad) bound or pop cltd fs pop andl fwait std cwtl lock in ficoml sbb push push mov inc or aad loope mov push mov insl call jecxz cs ja (bad) test or dec push add int3 mulb in and ss push pop jecxz pop jnp inc jno (bad) call ret mov inc adc xchg out fisttp popa aaa pop pop dec add movsl mull sbb xchg mov push arpl in xchg std and adc pop jnp js mov lods andl xchg jge xchg sbb insb and add push cmp pushl mov cs add jbe test cltd adc push mov add jmp adc decb and shll xchg push les push push movsl mov mov jmp pusha mov cmp add add in mov sub popf fucom int rorb adc add cli lock push inc xchg or punpcklwd jnp in xchg loope out pop xor jo xor out ss or vpacksswb fstps jo xchg call inc popl fisttpll ljmp or lcall pop mov and (bad) les mov loopne fisttpl (bad) test sbb xchg or jno push cwtl fdivl sbbl cmp inc clc push loop mov sub mov (bad) jnp js pop in lcall pop fldt adc cmp mov xchg or pop fcmovb nop movsb shlb mov xchg xor call xchg xor iret xorl fs sarb in std push pop iret xchg xor pop icebp push loopne dec repz lcall jmp cmp das aas sbbl ret loop imul jp daa lret mov xor dec sub inc mov mov cmp xchg lret and stos imul in inc dec test push jl mov push push mov cmpsb sub test fildll push test pusha xchg push pop gs push mov push fcomi mov pop push rol jmp dec jne lahf movsl lret mov (bad) daa or ljmp jle,pn cld mov gs rcl inc mov add add add xor incl int ja mov repz js stos jbe xor push dec cs repnz enter jmp jo ret jge rolb aaa ficom adc lods xor mov aam fdivs add adc test and jne sarb xor repnz out push mov push fistl push sbb add push push adc fwait inc pusha push insb mov mov ret mov jmp add add insl movsb xchg imull cmpsb cwtl test cld cmp das aas sbbl ret stc add xchg out dec fcoml jp xchg lret pop int mov xor movsb ljmp dec mov test arpl imul repz enter outsl fistp or test movsb push mov xor or fcoms mov mov jecxz out enter adc adc lahf sub mov and add add add sbb xchg mov or sti mov (bad) and mov lock dec popf out ss or test in mov aas mov fnop (bad) xor cmpsb rcll jns in or in (bad) lods dec mov push mov xlat je adc pop sbb sti inc or mov xchg insl jge sbb movl xchg push leave mov cmc inc mov push sub arpl mov jecxz dec imul add add push push adc fwait inc pusha push insb mov mov xor add jmp push cwtl loop inc mov lock xchg mov outsl data16 loope sti or roll scas push push mov jne push in jo fwait popf mov daa js cmp and pusha scas jmp pop loop inc popf sbb fsubrl adc lcall inc sub jge dec fsub sahf notl fstps sub xchg cmp out mov icebp sti rcl xlat inc fwait pop sbb xchg push rcrl bound inc loope lahf popa loope and fidivr xor xor (bad) (bad) fildl lcall dec popf out ss or test in mov aas mov fnop (bad) sbb cmpsb jmp in jns in and out pop out inc sti int scas arpl out inc popf sbb fsubrl sub mov aam fdivs add add add dec out (bad) addl sarb xor repnz out push mov push fistl push sbb add push push adc fwait inc pusha push imul sti add jmp push cwtl repnz mov lock mov sub aad cmpsl nop lods loope pop jne mov or pushf or push std int mov out push mov xlat cltd cmpsl push cmp jnp leave jmp sti out push cld (bad) enter ljmp add mulb (bad) leave pop hlt lahf mov cltd pop mov pop loope loopne pcmpeqw rclb inc popf out and jns (bad) xor push in lcall xor rcl push sar mov dec nop aaa jl lods push xchg push inc jmp mov lock dec popf out ss or test in mov aas mov fnop decb daa cmpsb fsts jns in adc out pop incb add mov pop cmp inc and mov jne dec mov xchg insl jge sbb xchg push cmp dec sbb cmc inc mov push sub arpl jne out push mov push fistl push sbb add push push adc fwait inc pusha push imul std add jmp push cwtl loop inc mov lock xchg mov outsl data16 jbe fs leave xchg sbb add push push mov jne push in jo fwait inc mov daa js cmp inc push repnz scas out xor loop inc popf pop mov (bad) adc adc cmp sbb negb jge dec fsub mov pop add jne ret cmp push pop mov icebp sti in rcl inc fwait pop sbb lahf push rcrl bound add inc push (bad) dec xor inc pop int3 pop mov pusha shrl mov (bad) fdivs adc dec out add and add push clc repnz sahf push inc jle lods dec adc pushf loop mov sub mov (bad) jnp cld les in lcall pop fildll pop popf adc push cmp inc sub mov sgdtl or (bad) cmpsb shlb push in xor call mov mov cmp out into sarb in std push pop iret xchg xor push mov xchg add call xchg add add pop add (bad) aad cmp das aas sbbl ret ret add xchg out dec fcoml jp xlat int3 pop int mov xor cwtl (bad) pop fiaddl fldl arpl ljmp xchg test jg roll cltd das das jno shll (bad) data16 xchg nop iret adc popf out and dec sbb xor push int lcall xor rcl pop inc lea sar mov add add dec pushf aaa jl mov (bad) push fwait lds lock xchg mov outsl data16 mov pusha sub mov idivb stos jnp push test int mov mov pop repnz fnstcw lods arpl ljmp lahf push adc mov lahf mov sets sub dec gs scas pop decb add fcomps sbb jl pop in xchg cmp data16 xor rorb xchg adc lahf add adc or aam outsl jmp lahf mov pop aad enter lea push sahf push xchg rcl out rorb jae (bad) push mov mov fst mov push cmp xchg push mov jne push in jo fwait xor or arpl repnz scas jecxz pop loop inc popf add test arpl clc les xchg adc jecxz sub jge dec fsub stos notl fstps sub ret cmp cmpsb or add add icebp sti jmp pop sbb fwait push rcrl pusha lds pop sub mov inc pop int3 pop mov pusha shrl mov jnp fdivs adc dec loop cmpsb jo sub add outsl mov outsl addr16 outsb jp push jp nop sbb push js sub mov (bad) jnp nop les in lcall pop fildll pop popf adc push cmp inc sub mov add sgdtl or pop add push in xor call test sbb xorl jb sarb in std or xchg xor push lods push xchg inc inc cld and mov jle enter mov xchg aas sbbl ret fadds imul inc ja pop int mov xor movsb ljmp dec mov test arpl imul repz enter outsl fistp add add pop inc test movsb push mov sbb or fwait aam lods jecxz mov loopne rorl inc cmp xchg jmp mov push adc mov and ret int add xchg mov or out in or test mov inc cli mov xor pop jne pusha sub jmp faddl xchg xchg jge loopne jge,pt push loopne cs pop loop fxtract xchg mov add mov add add mov and mov sub mov hlt mov push fwait out mov (bad) das inc negb mov (bad) dec or jl imul inc mov dec xchg aaa cli fwait inc sub pop (bad) pop (bad) (bad) or xor xchg mov add loope andnps movsl sbb iret sti push xor push ja mov pop mov scas inc mov add leave cltd inc and pusha add lahf mov jno aam add pop in mov mov and push stos arpl imul cltd repz inc jb fistp ret loopne push decb sar movsb inc xchg scas cltd mov (bad) push push and and fsubs mov add daa jge stc inc add and pop test jne lahf gs mov mov ljmp inc adc mov adc pusha (bad) outsb outsl cld or lock lcall lock mov push and stos lods mov repz js stos mov outsl mov mov cltd jl fs mov jge faddl jmp aaa das aas and leave jmp mov or clc mov inc and sbb fcomps sbb jl ja sbb mov or aad mov xchg cwtl pop andb add cwtl inc jne or lahf mov pop aad enter mov cmpsl fcmovnu cmpl cld xchg int3 insl add clc sub adc push aaa out sbb mov add push push mov jne insb popa xchg bound gs aad dec fldenv je push or inc lahf mov lcall pop cwtl pop dec addr16 hlt push jecxz rol pop mov roll testb insb addr16 in ja xor xchg mov aad jbe ljmp lahf movsl (bad) inc or fsubrs add add add adc jmp mov ss sbb out mov push inc dec adc or inc pusha sub mov aam es add cmp sub add arpl nop sbb rcrl cmp and xchg sub ljmp jge push fcmovnu insb mov into stos popa jge and cs out out xor mov mov outsl cmp mov xor add jmp sbbl xchg xchg sub (bad) dec arpl pusha fmuls pop mov repnz loope movsl dec iret mov cmp fistpll sahf add jp and sbb sbb push pusha add dec std cltd xor iret outsb aad mov movsl jae je sbb mov inc push or aad daa in insb adc mov aas fwait inc (bad) push cmpl rcrb dec sbb mov pop mov test sbb or add cmpsb mov jmp popa xchg mov fcoms std or inc addr16 xor ljmp int3 add fcmovu popf out adc add cmp pop cltd cmpsb inc pop dec mov sub xlat out push test dec cli nop (bad) test in fs and push loop mov xor mov out push in aaa call test and mov out mov inc icebp sbb dec in or adc add stos cmpb and xchg sbb mov sbb xor movsb jb pop push js jne movsl mov les mov into inc xor and jg loop imul push mov cmpl hlt add mov dec cmp test adc mov xor push aad mov dec lcall mov das dec mov out inc daa jo add adc aas stc mov push sbb xchg mov pop cmpsl sbb add and add ljmp aas mov add mov aad pop movsl ret cmp out inc cltd repnz adc in rep mov fsubrl push jmp addr16 adc mov sub and sti or and test repnz mov daa gs jmp test xor xchg cmpl push sub add cmp cmpsl adc inc decb or out sbb pop add push xor cmpsb clc inc mov pushf mov mov jmp (bad) push pop or out lea dec dec mov xchg popf lret xor rorl xor pop clc je fdivrl in cmc adc ljmp mov in push lahf jge jle cld xchg in mov test lods ss repz sub adc popa sbb push (bad) int3 aaa push mov lods jae push mov jns js dec je repz iret xlat lds or mov (bad) sbb or pop ja scas fwait cmc popf aad cltd mov push or cli pop cmp xchg daa mov cltd cmp mov dec jbe add pop xchg iret mov cmpsl dec dec push or add popf out push cli xor (bad) bound xchg fldt repz jg mov jnp jl fwait cli (bad) ja lret gs clc mov test xchg fisubrl add add push adc xorl and xor ret mov out mov fsubs jbe div enter xor fidiv mov popf mov jb pop clc outsb mov js or popa pop jno (bad) fbstp (bad) cmp mov mov (bad) jle or push loopne mov nop xor pusha fdivs (bad) and ficoml cmc out push inc mov sbb push pop int3 push pusha (bad) movsl mov jnp popf ljmp or fiadd (bad) test scas pop out pop xchg cmpsl test mov mov les fwait inc mov cwtl stos arpl popa pop cltd test fcompl inc inc jne xchg aaa std enter rclb xchg adc in cltd adc into cmp out and out push jbe sbb xor lcall gs push popa mov int3 pusha inc xchg sub loope adc decb mov (bad) aaa mov mov add pop adc sub xor (bad) mov (bad) notl mov imul test xchg (bad) imul lcall call mov clc sti adc sub arpl cmc mov aaa xchg and inc add (bad) mov pop push cmp xchg push das (bad) lahf mov pop add insl fisubr add stos out xchg inc in xor call xchg or mov push xchg je test adc add dec lahf cmp or je lods lea sub aaa lods sbb test add outsl sti and sahf fs xchg iret mov das insb loopne cmp and rcr std ds jne sbb cmp out std or out pusha or (bad) adc jmp mov or mov and out lret (bad) jge mov ret loopne push lahf sbb cmp adc adc mov mov inc inc imul adc xchg mov sbb jne xor mov ds and lcall (bad) dec jl mov inc sbb ja iret nop outsb lock xchg mov jp xchg loopne aaa paddd out mov fdivrl scas pop inc lds push inc addr16 cs ret mov push sbb mov lods xchg or lret (bad) xchg and (bad) sub test lock loop test cmp test lea mov xchg fwait pop enter loop outsl mov jnp jb push icebp pop fstpl in pop mov mov pop or adc icebp lea cmp mov xchg adc dec ret or mov add lea or lods jecxz xchg lea and jae lods xchg cs mov je stos arpl mov adc (bad) dec int3 inc push sbb mov cmp add fcom xchg outsb insb jl xor sbb xlat mov ret add popa fdivs and daa xor mov lret aas mov mov cmpsl sbb push (bad) xor sub les clc xor pusha mov push xchg fsubrp (bad) pop mov mov out ss popf mov mov (bad) mov inc push xor fcoml mov xor imul sub lcall cmpsl pop cmp xchg sbb aas cmp fwait (bad) mov inc push or cmpsb ja mov add mov ficoml insb hlt push xor sub call out dec xchg fcoms push inc xchg lods mov sub aam sub jo push out frstor es sti push xor push outsl (bad) fsub ss xlat push dec dec bound inc repnz push loope fnop out shlb mov addr16 mov pop jge leave push push xchg std add add fs (bad) dec int3 dec shr jbe xor dec push cltd push mov xchg xor add mov paddsw jb outsl sti xchg adc mov cmp jno call data16 xchg mov cmpsl xchg je sarb out cmc out jbe in (bad) std and imul ret fisub mov inc xchg mov jnp sbbl lret mov jno,pn icebp or (bad) (bad) fmuls outsl push add add les mov mov ret mov sub mov sub lret or xchg and pop and mov fisub into notl adc lret je jnp push popa xchg outsl mov test or or jl push movsl out pop out fwait cmp ret ret cmp lret loope mov pop sti xchg add adc cli push dec sbb jmp das dec xor mov add add out mov xor mov pop inc fdivs push (bad) lret cmp dec push repnz cmpsl pop cmp shlb and sub roll pushf fdivs jmp data16 inc es (bad) lock xchg xor adc cld (bad) or mov mov lahf or (bad) (bad) pop pop icebp cmp iret fs mov loop in hlt orb sbbl jp aad pusha or add repnz push stos inc mov push cltd loop loopne aaa paddd xchg pop in lret cltd scas and pusha mov stos inc and sbb daa cs sarl bound add mov test cmp sbb adc leave pop lock (bad) arpl out imul xlat dec pand or jnp nop insl addr16 jno mov adc lock nop push dec in jnp clc adc arpl xor mov test enter mov negl scas fstpt jl sub gs adc aad out bound paddd sbb jecxz push push push mov sub in bnd push push loopne mov bound jmp inc jge xor mov test sbb aas loopne pop push iret pop inc inc jge cmpsb hlt fdecstp out dec sbb popa rclb and rclb xor rclb rcrb pushf (bad) aad mov jmp inc fdiv inc mov sub jecxz pop testl adc movsb xchg push mov cwtl pop shrl stos sub cmpsl insb inc popa ds push adc fistl test sbb add cs nop mov into incb pop push orl dec outsb push xchg xchg in aaa adc adc test scas mov repz or jne xor adc or add add je arpl jp aad dec xchg xlat or js addb sbbl stc xchg adc mov scas loop cmp mov dec xchg (bad) xchg xor scas inc cwtl mov (bad) aad ss outsb scas nop imul xchg sbb mov mov jl jnp in std std iret js (bad) mov das push cltd clc adc je lahf test mov cltd jmp daa lock sbb mov jmp sub pop jns iret in or punpckldq andb nop incb clc adc xchg sbb pop icebp xor jb xchg (bad) ljmp pop sbb or dec jbe pop rorl test or push notl (bad) arpl pop enter insl addr16 pop add outsb test and push stos sub aam aas pop lret imul aam nop sbb std cld xchg incl pop jae aas aaa call les nop and add loopne out fcompl (bad) jae popa push or mov xlat icebp and cmpsl mov je xchg mov (bad) cmpsb cltd mov push dec push cmpsl lock dec jbe jmp push ljmp adc out lahf mov notb andb lods add lret sub sub test daa out cmp daa cmp or push loope push rcrl das ljmp in lods stos pop xchg inc (bad) jne fnstenv xchg sbb add rorl add inc dec arpl or das inc jae xor and in std dec push scas dec xchg ss fisubl jo into xlat cs cmp gs jmp mov mov pushf or ret arpl xchg je inc jl jmp mov push and jg sub mov inc js sub jmp sahf enter fsub mov mov jo jne jle jmp in outsl sbb sub fsubp (bad) outsb xchg aaa lahf cli test add (bad) mov xchg mov jno jmp push adc dec aaa loopne lret cmp mov inc or cmpsl or ljmp aas mov (bad) pop test push adc xor pushf stc jp arpl add pop out cmp mov jno xchg je inc js jmp mov or fisttpll add fistp dec xchg adc xchg sbb aad cmp sub or lcall add mov and jno sub out jnp xchg dec flds (bad) in pusha scas cli leave sarb roll inc pop jle pop std xchg jmp mov mov add inc jge push pslld jmp push ljmp insb insl xor mov sub lea dec int mov xlat jl (bad) (bad) lret cld sub adc cmp xorb jmp cwtl std (bad) mov cmp adc add add add cld lahf xlat inc dec movsb sbb int mov in sub out and out cmp pop jb and or cmp pop leave fildl xchg ss ljmp mov push inc push incb dec jb daa lret dec or into roll sar das sahf jecxz pop add lock sbb cmp mov cmp and in xchg mov sti das jns mov or xchg out jbe push adc jecxz adc call add add xor popf sbb mov mov sbb (bad) aad cmp das xor jnp adc outsb jmp push sub cmp movsl in lods push sub aas or arpl imul repz and arpl popa icebp cmovbe leave rorb xchg xor mov fstps fildll cs lcall repnz jp adc adc int3 jb mov sbb fnstcw mov insb out aaa cmc sbb jg push aaa pop bound sbb clc clc cmp stos dec jmp pop mov jp pop jne pusha sub push les and push test xor (bad) dec fbld pop pop add mov dec xlat ljmp sub pop add mov aam (bad) jne or inc jg dec pop enter je popa cmp mov mov cltd mov bound add xor sahf push pop mov dec into sbb push sub or rcrl and mov or inc inc (bad) xor sub mov jno out and (bad) aaa aas mov jnp xchg jp fs pop lret inc loop mov inc sbb call and (bad) notl fisubl xchg inc sbb mov cwtl pushf mov lret inc outsl fisttp and pop aad (bad) je push inc sub jge push maxps xchg data16 fs js mov add add cwtl push int jmp dec jge xchg and xor pop shll testb push dec int3 data16 mov das mov dec adc cmp dec cmp jns xchg int3 jne jecxz stos and lcall dec rcl jb mov adc xchg test sub mov mov inc insb mov enter ds sahf or jb mov add add outsl ja stos sub mov pop pop movsl xchg sar push jl lret pop daa imul mov (bad) fnstsw mov sbb ret push sbb push cwtl push dec sbb or sub ret push bound push les jne pop (bad) cmp xchg jmp pop mov es mov dec and test pushf test push leave loop int std test lahf push in jge xor add (bad) mov dec or movsl xor sub adc hlt push call addr16 mov out cmp in or xor mov icebp popa repz dec push fildll das xor mov int3 jle mov lds and (bad) pop inc test out mov lock dec popf out ss or mov xchg test lock leave sub outsl cmp adc cwtl das imul mov add xor pop jns das (bad) cmp rorl inc and pop jmp mov leave lahf jl mov scas movsb mov fisttpll add daa fbld (bad) out and xor xor pop sub lds xor inc pop test adc lahf mov xchg test add les rol cmp fwait in je les push xorl dec bound xchg ljmp fsub add cmp mov dec xor imul add add test add arpl imul xchg out inc add cmp stos xchg pop loopne sub lds cmp js stos dec movsl dec (bad) xchg sbb outsl into ret in loope push leave rolb pop push mov xchg rcr jl mov mov fldt es jno push lret pop xlat add es xchg fcmovnbe cmp mov mov jge xor loop jbe sbb imul push nop pop mov (bad) and jns pop inc jae jno imul fldt mov sbb sti dec mov iret add leave mov push es setne or adc and insb cmp les cmp jle add or aad add push mov pop jo nop fsubs mov and repnz inc sbb sbb push cwtl out xchg sbb jge inc mov xchg shrl (bad) cwtl or jo and push push push mov sub mov (bad) incb dec ret das (bad) xchg mov shr (bad) mov jbe cmc enter or mov insb or dec cld cmc (bad) jmp pop loopne mov call mov push sbb jno lret xor adc jne in in jp adc adc mov out mov scas in in lds pop fprem1 ja rol sbb sbb mov negl stos inc push pop xor and push imul imul pop aam inc out (bad) daa scas int into (bad) (bad) pop mov jae sbb push js sub insl sub inc jb sub xchg add iret sbb cmp int lret fucomp dec sti aaa xor sub psubusb jecxz mov movsl xchg and or mov adc add add dec in rorl mov push xlat cmpsb stc xlat cmp (bad) pop in xlat inc les push xor andb mov mov dec push mov gs rolb lods mov xchg aaa rclb outsl sbb mov or (bad) stos movsb jl out ret icebp or xor jge sub dec mov pop xor mov sub rcrb in or jb jnp (bad) cmc pop shr push insb loope push mov jae testb (bad) loopne xchg mov inc shll pusha int3 cld fsubs jmp xor sarl inc add lahf pop xchg test push cmp mov sub dec ss lcall mov xchg push dec or inc mov push pushf (bad) aad shrl xor in mov loop mov sbb loop into pop sti push int3 ss lret loop dec dec and add sbb adc es add add xchg in or pop dec outsl xchg scas xchg lock dec dec je outsl into cmp pop inc jp lock cmpsl mov dec xchg mov adc push lret in jo cmc inc and lock gs sbb push xor sbb mov xchg das aam loope lahf mov push push push cmpsl sbb push pop aad dec cmp jb cmpsb push loope cs push jo push cmp ljmp repz add push popf dec mov or es xchg lea or xchg fsts incb dec mov loopne insl xor xor jns mov adc xor inc fstps pop push mov xor pop sub scas add sub fisttpll andb cmp and push fldcw dec movsl mov fldl rcll jmp jne mov mov scas jle mov pop adc or enter add add popa loope popf in xor dec sub repz xchg test pop dec pushf loop mov out mov test fwait rcr scas xchg push sub insb out pop mov and fs sbb popa movsb out enter decb loop lcall test mov fisttpll fstpt xor popa pop inc test sti push xor les dec dec (bad) ljmp rclb inc inc (bad) iret shrb out pop xchg loopne stos pop push loopne lcall add add inc pop and mov inc lods pusha fwait mov stos icebp fdivr aad les popf out jno stos mov enter ret outsl fisttp xchg rcrb or clc (bad) sbb jle lods mov out out mov out and ss adc mov and jecxz sahf or iret push lcall sbb mov cmp mov test in lcall outsb pop (bad) shrl cmp enter mov je test add sub mov fcoml sub clc dec pop lds sub pusha fst mov xor pop (bad) adc pop movsb out loopne adc dec lods xchg std inc and test es inc xor imul jne or popa loop push cmp imul out pop pop jns add cs push mov cbtw push push pop mov mov jne fdivl dec pusha mov ret pop inc adc sbb cmpsb add sbb in jg aad in lods leave (bad) cmp sub sbb mov lahf push and mov fnsave ret push and jl scas sub call add pop iret lcall or into jns push test movsl cmp fs xchg (bad) movsl jb scas in cld jmp sub flds push mov test daa inc adc jge ss fimull xor xor mov lret aad add push inc xor call lea cli in sarb mov push add sti jmp adc icebp add push pop mov pop sbb sub mov adc cmc enter add lahf std jbe das or or inc mov add icebp outsb pop rcrl add dec out test (bad) mov js fnstsw xchg insb out inc mov std jecxz test aad outsb in repz in push adc mov aas iret lret cld and jmp jecxz push repz or in nop mov push push frstor jp les (bad) jl aam inc out les fdivr push (bad) mov jmp int in jg into cmp push and hlt sbb mov mov (bad) dec lcall inc adc and pop jnp jmp or mov xor je jnp mov sub xchg push test add add jecxz mov push adc sbb jne lds pop pop js mov test mov adc xchg (bad) popf inc pop xor and pushf jl les cld xchg shlb cmp ret fistpl sti add xchg adc aam push (bad) fmuls outsl mov repz roll out imul (bad) or (bad) repnz outsb jbe dec sub mov js dec lret add inc test sbb pop or pop insl add add mov dec gs inc push xchg jmp test sbb (bad) clc outsl mov into push mov aas pop xchg inc add nop inc lahf jle or sub add xor sub (bad) in push rorl ds mov stos outsl test push sub jmp adc push loope ret lret sbb adc xchg es pushf adc fs dec sub cmp jp add scas aas outsb test add es (bad) out inc sub inc pop faddl icebp xchg pusha icebp xlat adc sub mov pop xlat adc ss adc std pop dec out sbb iret pop sub xlat addl daa pushf and pop data16 or repz push les mov call jnp sbb xchg inc fmuls pop aad fld pop das cli imul daa cmc adc push inc mov (bad) adc add add lock sbb sub iret ret sbb clc je sub pop or cltd jne mov dec loope mov sbb mov mov jae inc push out call push ds push icebp (bad) cmp fs xor push and mov jmp and notl enter orl inc fstpt dec cmp adc inc xchg adc lds push xchg sbb cmp push out pop popf inc (bad) cs dec jo push out (bad) pop stc (bad) addr16 dec sub pop (bad) shll mov mov (bad) jmp outsb shlb mov fwait or dec add stos into stos pusha lahf int3 push int (bad) lret movsb (bad) ljmp jg adc pop inc not or arpl adc pop imul lds lret sub push jle cld (bad) pop ds sbb (bad) aas cwtl cmp push pop adc ljmp add add mov pop xchg iret push ret lods jp fs stos pop pop fiadd dec fbld pop fistpl sbb (bad) adc (bad) lock and sahf call and (bad) ljmp stc pop decb push lahf rcll out add cmpl (bad) enter mov mov xchg aas mov sbb sub fnsave cli pop xchg mov lret pop jle mov pop ss add add (bad) aad loope push movsb dec stc mov imul pop add pop rolb push movsb push add iret aam xor js cmp mov or out shr xchg cld icebp push lret mov and jl or pushf mov leave mov or insl inc test inc mov popf or xor jge ljmp sbb xor inc xlat nop pop rclb dec cld jno popa adc xchg xlat push inc gs sub add add inc test dec scas xlat adc dec add fwait dec xchg out mov mov inc nop lret dec jle jecxz sbb pop pop push rolb cli ret cmp dec stc loopne std or mov call pop js movsb cltd shr xchg lock (bad) or mov loop dec (bad) mov push (bad) idivb das add add fwait or popa add ljmp out mov mov or aaa frstor out or jnp je shrl add repz loop in and xchg cwtl add mov sbb pop ficompl jge pop les adc mov mov jns xchg stos sbb jle and (bad) xchg or sahf jecxz loop dec jne movsb fcomp dec mov or ret mov jmp xchg pop jb xor call xor idiv and fistpl movsb in nop pop or cmp or jmp cmc mov jg,pt mov (bad) jno lahf cmpsl out repz in mov aam xchg dec aad xlat fimul jb movsb pop adcl stos ret int inc push inc sbb lock inc xor mov ffreep es (bad) jnp adc pop daa (bad) and ds addr16 xor stos stos movsl mov adc cltd xor push sbb lret or lahf popa out ss stos push dec mov xor push arpl lret mov add or dec pop out aam mov insb pop out inc xcrypt-cfb cmpsl gs add ljmp lahf mov aas iret fisubrl and and jg (bad) or sub and adc dec repnz je (bad) mov lahf adc cli daa sarl int outsl mov popa (bad) fldcw mov (bad) hlt mov mov jae loop cs push cs out sbb es pop push push xor adc xchg in inc inc or cmp dec add leave rorb mov sarl stos add mov push and loope jg jl xor cli xchg jno arpl mov fwait pop sbb je dec push push jle sahf dec jne cld mov cwtl cmp mov (bad) mov cli sbb inc fbstp xchg outsb lock dec popf ljmp sub in out inc adc ljmp lock mov repz js movsb (bad) pop addr16 lods xlat xchg inc adc pusha jle pop js in addr16 ret and outsb scas (bad) adc adc sub rorl dec push adc sbb dec mov repnz addr16 adc ret jl ja call xchg inc push rcl dec push xchg mov mov cltd xor mov lahf je lock pop rorb xchg add sub in repnz fs push mov mov dec pop sbb and fwait pop lods inc jp xchg adc push cmc jno and jns inc push int3 aas jle push pop into dec mov add add dec int dec mov stos arpl popa pop mov mov pop pop in xchg sahf dec xchg loopne inc ljmp push mov xchg mov movsl mov adc xor xor lret movsb fwait pop add sarl push int3 iret (bad) xor movsb stos jge mov lock adc pushf mulb popf sbb outsl or add js jmp imul add add lods push addr16 jnp ja jne (bad) ds mov ss scas push repnz xchg dec mov scas jns push push inc lock fcomps sbb lahf (bad) es xor loop xchg inc sbb popf insl jge (bad) push cmpsb test xchg sub cmpsl gs xchg mov in add dec fisubrl and push pop (bad) cltd adc push jle xor negl call (bad) insl movsb mov xchg dec je add dec fwait test mov and outsl sub mov inc jo addr16 push movsb pop mov ret mov ror add arpl mov int3 (bad) test rcrb jecxz out mov imul andb and push mov movsl dec add xor and mov cmp bound jno and lea popf pop jns xlat mov pop popa cmpsl push loopne xchg lahf outsb adc mov cltd arpl xchg mov mov adc ret stos scas fildl add add out pop frstor fsub call daa mov test sub sbb push fcomp out es loopne dec popf aad iret rcl jl mov sbb adc jne data16 jno pop mov iret push pushf nop sti popf adc and stc insb add stos push cmp stos add lds enter and je xlat jnp sbb mov sbb pushf or push add mov mov and add push push fwait xchg jmp xchg test cmpsb mov pop les mov in add cltd js inc ljmp rolb push pop mov xchg sub push ljmp aad mov or enter pop stos sti pushf rcll sbb js faddl and (bad) loopne rolb or inc jnp scas ja jnp add leave add fdecstp inc test add loopne mov inc add add add push push or push (bad) dec jge inc mov in iret mov leave add push insl push cwtl loope push push push popf jge imul jmp sbb xchg aad mov mov ss mov test xchg cmp loope mov fs xor mov dec mov dec pop in pushf inc roll fldl mov pop inc scas movsb rol movsb mov fisttpll in (bad) cmc push sub add add or fcmovbe adc fildll push pushf push sbb jmp mov loop mov xor dec outsb push adc push cmpsl jmp nop push mov stos jmp dec sbb in shrb jecxz stos push jge out stos stc jg fsubl mov inc fcmovne pop mov cli das cmpsb sub out mov mov aas mov data16 and and dec fmull dec add add push mov scas add mov stos adc push test mov mov ljmp sbb stc outsl mov inc cmp push mov xchg mov push inc test xchg add mov jmp subl insl stc sbb xlat push xchg shrb iret jl stos cmp dec and jmp pop jmp sub shll (bad) cmp jnp mov int xlat nop repnz add add (bad) and xor imul cli movsb push (bad) in divl decb scas cltd or scas push ds ret mov insb jbe mov icebp cli aad adc cmp xchg xor add rcl push (bad) dec je or cltd sbb add cwtl inc mov movsl cmp mov push outsb xor xchg cmp imulb push and push (bad) mov ja in and sub popf hlt mov push popf sub out pop sbb xchg rorl push out rolb cmp jno pop aam xor cmp fdivs shrb xchg adc stos mov adc outsb idivb add xchg xchg out js pop pop pop test aad mov jg push mov dec cmp lret roll xchg icebp dec jns pop cli jae lret or es test (bad) movsl mov mov fbstp jmp fiaddl fdivrp cmp jp adc pop mov fsubrl jns add add cld jmp mov sbb mov dec stc inc call sbb (bad) popa sarl cmpsb cs sar imul cltd jl sbb or test or xrelease mov lods ret mov scas sub bound xor add mov dec adc lret ss fs lods xor (bad) fcmovnb sahf jno scas mov mov das pop popf loop es aam hlt fdivs int3 push loope pop test add add inc adc sti pusha mov js ljmp jecxz (bad) aad inc push mov dec repnz loop sbb arpl or pop pop mov adc test add mov jb mov xlat dec mov xchg mov test sbb mov ljmp lahf cmp les add adc adc cmp fs xlat pusha xor add imul xor fistl int cs xor mov sbb (bad) imul out push push leave mov loopne sbb sbb mov push js pop jns lea pop xchg fucomi cmpb jge jecxz (bad) enter icebp fisubrl cmp test or and inc mov test fbstp aam test lock lods jo loop aaa imul sbb push in mov xor insl inc dec adc (bad) xor cmp lea (bad) xchg dec dec xchg jb loope sub arpl jl sbb icebp adc daa in pop cli (bad) pop fwait js test dec sbb stos out sub xchg pusha inc popf or stc fldenv arpl rol mov in and sub dec out inc pushf imul sbb push dec les mov lods enter jb (bad) push sbb jle mov dec addr16 or push sub daa mov add add loop imul fsubs mov sbb hlt cmpsl scas test mov movsl ljmp xor and cld jo and push cltd imul pop in (bad) int3 cmp sbb xor ret shll xchg repnz hlt xor add fs imul push fiadd (bad) jmp lret sub clc jmp (bad) mov icebp out repz mov insl jae int sar xchg pop arpl iret add add mov aas sub roll (bad) test mov xlat inc loop inc fwait dec in call (bad) ljmp in jl pop scas mov xchg out in jne sbb dec dec ret int fist xchg xorl pop adc shll jo dec cmp xor mov mov fmulp adc aas jnp mov or xor clc or adc scas jg hlt iret adc xchg or push add fwait pop dec mov cmp insb ss mov push sbb mov es loop outsl test out and sti fiadd test andb ds mov sbb into cltd nop ret cwtl jbe ljmp mov jmp or gs out pop inc pushf pop pop ret push xchg bound out xor mov xor sbb cmpsl adc stos divl inc hlt mov test shll arpl cmpsl inc add dec mov in test jg dec in or and jle mov je cld mov adc arpl xchg and and add fcmovb fs dec sbb pop shrb and cmp cmp mov pop or call adc int3 (bad) data16 into (bad) xor adc fs pusha cmp scas mov rclb mov pop fs pop mov xchg rclb cmpb fcomp out or icebp mov adc jns push inc das or icebp dec or add cmc rcll xchg jmp push (bad) ja add push outsb jmp (bad) push ret lods fnstenv cmpsb (bad) push fcom cltd xchg mov sub sub lods or pop cmp aaa push scas push mov popa cwtl lods jmp inc loop std and insl (bad) dec jae out ret sti test mov loopne sub add out stos add mov mov cld cmc xchg fmuls cli adc inc pusha sahf inc shll clc (bad) lock ret rcl xchg loope or sbb xchg mov cli clc daa xor xchg adc jbe rorl mov dec mov or cmc jb movsl outsb call pop add (bad) push add mov pushf outsb and sub (bad) cli std (bad) adc (bad) xor fbstp (bad) (bad) add add add sbb imul rcrl loopne decl fildll xchg fldl add cs jle inc cmp cmp dec pushw enter (bad) sbb sbb jle inc fistpll ljmp xchg adc in or xor sti mov mov mov dec xchg cltd sbb outsl lret and pop ret faddl and push mov shrb jg pop (bad) push imul add add jl mov loopne fistpl inc inc int mov push push sbb fdivp fdivr sbb lds or dec dec mov xchg cmpl or call or xor mov and lods sbb cmc add cld (bad) dec mov scas or (bad) iret dec pop mov stos mov mov insb mov push (bad) aam sbb push data16 sub push stos xor xchg sarl lods add add push mov inc clc (bad) mov rcll popa data16 into jmp popf jp add xchg loop (bad) xchg push imul fsts mov je sbb xor lock fistp jmp dec ljmp cld xchg leave lahf mov pop dec rcrb xchg roll push pop sub push adc inc out scas jmp mov or inc test fcomps dec inc inc mov jg add int loop mov in bound fist mov lahf cmp jecxz adc lahf add (bad) cmpsl dec (bad) pop in jge dec dec lds lock or enter addr16 inc dec push mov cmp cli cmp jne ds popf inc sub jns mov pusha cs mov cmp and xchg xchg xchg call movb pop daa mov js lods fcmovu mov ret add and mov imul mov or shlb orl inc shlb repz jp mov les xchg and jbe or mov inc sub sbb lods cli (bad) jbe and stc add xor adc or sahf jnp stos jecxz in jo xor xor jl xchg dec (bad) sahf push add add ds dec cmc es lock loop sub sti lods push inc jp and add outsl inc push icebp lcall loope sub adc mov push lods and mov jo cmc mov sbb (bad) pop out arpl enter push jmp fistl stos jo dec clc push (bad) jb add scas mov lods iret insb sti pop mov in push mov (bad) xor movsb xor fs lds jno mov stos loopne mov sbb loope or pop xor hlt mov push push fiaddl xor add inc test adc cmp test aad in cwtl cmp add fidiv adc push cmc mov inc mov pop stc cltd jbe fsubrs mov jo (bad) mov cmp mov inc or mov sbbl mov mov push movsb push xchg enter popa xchg ss pusha ret test jne push pop cwtl adc and cmp lock xor add insl cmp mov cmp and outsb out bound sub jae mov iret stos dec add lcall add sbb cwtl jge es (bad) fwait or add fcmovnu lods inc mov adcb pop shl adc push sub stos jecxz cs bound pop add insb add insb pop cmpsl mov orl xor mov cltd fdivrl dec push mov (bad) data16 push outsb dec fs out movsl (bad) adc mov jnp fwait (bad) mov cltd cmp lea cld add inc mov lret add pusha popf pop fsubrl sarb jbe add xor ret mov shl arpl and iret popa xor xchg loop sub sub dec xor pop lret sbb mov ss adc or (bad) not stos inc (bad) xchg jl dec mov cmpsb loop sub sbb or mov mov call pop pop fcoms ja pop cmpsb dec push mov into dec insl jge (bad) cmp test pusha sub xor add mov sbb mov add lret bound test adc inc fistl ds lcall dec outsl push sbb mov (bad) lret dec jae dec sub adc out jg mov adcb sbb mov mov sbb push dec into push fstps popa mov call mov cld mov mov hlt data16 call xor (bad) xor cmc (bad) testb loope je pop imull mov stos hlt pop mov mov and jl call jno xchg fisttp and pop pushf dec or out cmc and mov add cmp repnz in lock or sub daa sti movsl dec inc dec mov ja sbb push int3 (bad) into aas sbb jp in inc mov adc dec jecxz mov xor fmuls mov cmp cld fwait stos jl js adc add add and xlat out (bad) fmul cwtl push dec fucomi cmp repz xchg in xlat movsb mov movsl jne jb mov cmpl popa (bad) lcall add (bad) shlb xchg movsb lock push sub arpl sub into cmp enter cmpsb push cmp sbb inc mov and xor sub mov aam int3 cmp pop ret dec add add push pop call xchg ja add aaa dec gs adc mov sub ficom jle lods es push fcomip jbe inc cwtl into arpl bnd arpl mov cmp js xor lcall (bad) arpl mov add mov or xor call (bad) loopne cmp scas lret rclb (bad) repz (bad) dec push xchg mov cmp mov add xchg dec mov pop add adc imull cwtl push and icebp roll and int rolb pusha sub pop mov daa pop jae outsb int3 push int in fcmovbe cmp or data16 or fildll jae adc push bnd lock fldl iret jb mov jg out pop adc fmulp cmpsb lds mov (bad) nop mov mov sub (bad) icebp scas ja or dec inc or leave pop loope add xchg leave dec ret insb adc ja fnstcw std push subl cld mov cmp and sar jmp cmp (bad) sbb nop popl movsl (bad) cmc mov push fsincos pop xchg and push mov lods adc cmp or mov xchg inc decb and std pop lds std inc sti mov fsubp sbb insb nop lock stos dec cmpl arpl inc adc (bad) dec (bad) add mov xchg add mov inc sbb dec mov jne pop push push xchg jle inc scas xchg fwait cmp xor pop xchg leave adc int3 (bad) fisttp push or jmp js adc lods add ret movsl and sub xor jnp add mov insb leave mov cmp clc movsl or mov gs popf lret xchg iret cld push jbe mov pushf inc aad lods sarb add add cmp and popa pop add inc pop sub rcll cmp cmp adc shrb sub test pop jle pop in nop xor sarb jmp inc (bad) aad out and lahf sub dec out int3 xor sti insb push jb imul fsub mov pop dec or cmp insl imul mov mov mov addr16 aas add fcmovu cmc in and (bad) int3 movsb insb pop outsl xchg inc loopne lock in mov inc push loopne cmp loop sub or (bad) arpl or mov fisttp in lcall jae fnstcw out pop test sahf fild xchg je cmp push dec and or loop arpl cmc adc push ss xlat push add fbstp imul and xchg sarb xchg and add sub add lods icebp mov jne out pushf inc fildll push lahf adcl das arpl lret sahf mov sbb add fdivrl lock mov int3 fbld (bad) cwtl mov loopne fbld add int xchg or mov lahf in dec inc (bad) in xchg lods shl les (bad) lahf ss mov nop stos add xor cwtl dec pop out mov or cmp int3 pusha hlt repz push jo stos mov mov mov clc cmp fwait mov and decl cmp pop push push lods fild leave lea je (bad) sub xchg enter mov sub xor out ljmp add dec (bad) dec adcl lods hlt fcmovbe pop jl sub jb popa add hlt inc popl cwtl fsub (bad) icebp stos cmp lcall aas imulb scas jg mov inc jge ja pop out es fadds xchg faddl call mov lret ja add sub repz js js pop ret add insl pusha sbb jns popa xchg scas fistpll lcall cmp xor xchg dec mov and dec adc sub imul inc inc push aad ja xchg shr add cmp adc push mov xchg addb inc test int3 lea push out mov and mov int xchg scas (bad) sti pop rclb loope mov inc fcmovb xchg enter popf divb ret out xlat mov push ret xor aaa or xchg (bad) sbb lea jmp dec add es mov jno sub mov cs adc push lahf mov inc aam cmp imul add dec xchg cmp in jl mov lret xchg (bad) (bad) testl jns fimul jge cmp pop cltd (bad) stos xchg call push add psubd dec test pmullw mov xor bound adc cs lret adc push dec pop pop dec les or add cmpsb popa mov lods jmp rcll dec lret sub addr16 ss pop sub test cld movsb cmpsl jno or cmp testl sbb inc and xchg in js popf push pop in daa sbb ret (bad) sbb add call add push data16 arpl jge (bad) jbe add clc dec imul xor jb movsl addl sti scas fcmovnu aad mov push jno jmp je xchg push or jb mov pop sbb bound mov cmp xor in or in ffreep sub imul dec add pop xchg call xchg dec ret loopne les and xor (bad) jno fbstp add add gs push ss outsl mov movsb mov icebp pop lcall sub mov lcall adc sub dec add pop pop insb add sbb addr16 je mov sbb fs aam rolb std jo or loopne movsl lds cmp out jns xchg lret orb insl add pusha ss ss sahf lret rcr sub mov lcall add sbb out push jge movl in cmp js jno add out mov mov push (bad) push out pop stos dec test stos push sbb repnz inc fisttpll nop imul dec fldt rcrb mov sti mov gs add sarl dec sbb inc in shr popl push out mov push xchg imul es rcrl cltd sbb shrl lods cmp dec add jle mov sub dec and or adc and pop jg adc jmp xor repnz stos push cmp repnz fist insb fimul cmp es xchg addr16 aaa mov inc adc xchg xchg dec hlt lods jecxz cmpsl loop jmp inc bound mov pop inc sbb shrl inc pusha test faddp fstpl push fwait into pop jno rcrl mov lock push mov add add cmp cli mov dec add ficomp roll mov aas aaa xor ret (bad) ror mov xchg (bad) repnz adc push mov ret dec stc ja push cmp or pop adc (bad) sbb mov and dec lea (bad) and mov adc out and andb mov fucom (bad) mov orl cld fisubr jb sbb mov std xchg mov lret fdivrs loop cmp vminsd xchg cld jl cs mov mov xor xlat cmc sbb xor jg jno jo bnd dec xchg add cmp movsl cmp incb addr16 nop std add out ret push jmp pop add xchg adc cltd das xlat mov xchg xchg sar cmpb mov cmpsl in or pop imul aas icebp mov mov divps add or into aas adc das cmp (bad) cwtl sbbb add sbb add add jmp imull sub xchg in adc mov std jne fidivrl ljmp jne mov daa (bad) fstl add jmp loopne cmc fildll jno add testb xchg iret add push pop (bad) jg sbb and cli sahf fldenv les push mov mov (bad) in fs lock test push or jns jecxz mov in jge lds jns es add add mov rorb outsb mov daa sbb inc xor insb adc sbb cwtl push cmpsb lret lret cs (bad) (bad) dec sbb inc gs les stos ret sub mov out fdivs xlat in cmp adc movsb mov das movsb add (bad) cmp es test mov les loopne and fsubr test add inc push rorw popf stos mov and dec jo jns push and aad or xor inc mov xor loopne enter pop pop adc icebp adc jae xchg push add out arpl mov pop inc imul sub pop ss or pop inc jb push loope sbb in ret in lret (bad) cmp dec in movsb xor insb lds fldenv cs xlat jp lods mov in inc mov inc cwtl xor inc cmp sub imul test add add in repz xchg inc aas xchg popf xor push repz jbe iret popf pop mov jno (bad) cmpsb fcmovb cld fnstsw popa and imul jecxz lahf adc mov jmp or aam mov imul fsts dec inc mov idiv cmp (bad) and stos and xchg mov push enter jmp pop cwtl sbb dec adc sub cmp out push sub gs (bad) out aam or add add dec cmp cmp iret out cmpsb fs fldl and test (bad) icebp mov cwtl iret daa jbe popf (bad) lods mov jbe es imul xchg inc lahf in in (bad) jmp ss fmull push inc sub fwait out lds push aad out mov pop cs sahf inc decb and rcl mov popa push mov pop cmc sti out fmull loop test out ljmp push rolb int3 sbb jae ficompl add test stos sti pop push mov dec in ss dec jns jno inc inc int3 lret adc push mov aad iret sti popa movsb add adc lods mov cli clc pop push (bad) stc jle in dec cltd and jecxz cmp xchg movsb and xor mov and insl in bound sub std leave adc loopne out and mov lahf push lret outsb sub outsb sbb add fcomp xor add decl mov cmp test das add sarb jl jae pusha jno cld scas push adc pop jae shr cwtl pop push shl bound xlat inc mov call out ljmp lahf arpl inc mov mov push cld xor repz or test cmc cmp insb pop data16 push (bad) aaa mov cld xor inc pop sahf movl sub push loope fmull push pop xchg incb not lcall add add mov cmpsl pop call adc or sub fisttp mov inc pop pop pop negl xchg pop adc ret dec in adc pop les xor jmp ss loop out iret out nop xor xor cld inc dec fchs notb and fisttpll fsubs xchg scas insl dec and push push pusha (bad) movsl cmp mov push outsb xor dec cmp (bad) test xchg fildll pop mov add aad or pop int mov push mov test mov cmp add push dec int3 enter and faddl loopne pop aad inc pop jbe cld xor scas dec rcrl ret (bad) fcompl daa jmp aad popf xchg push outsl into sub pop inc pop in cwtl lret mov pop xchg je add adc adc fisttpll fsubs push das mov jle adc sbb icebp mov int add add fidivr xor or lcall je daa je repz stos mov mov ds mov aaa mov mov pop mov mov adc inc cmpsl ret jno stos push mov (bad) or js sahf mov pop dec popa push fwait dec ds icebp and data16 jnp repz and adc push mov (bad) pushf push shlb push xchg mov sub out aaa xor add add add xor inc adcb mov loop sbb or stc add jecxz and add enter fwait movsl pop jecxz out in mov imul addr16 lret cmp dec popf jg add shl jno iret and shrb repz xchg repnz push cwtl dec xorl mov fsubrl jb stos out push or leave je negl inc xor test push mov sub push cmp (bad) sub (bad) push out ss xor add addr16 sti and imul cmc std jnp outsl xchg jl lret push and outsl sub popa callw mov imul jmp addr16 inc stos cmp lock cld rorl adc jge sub pop dec out in mov loope fsubrs les loop,pn jl loopne and push test (bad) mov and cmpsb mov test shrl push jl data16 and (bad) sub xchg shr jns jbe in add cs add pusha loop jl push sbb adc test dec loope or into das pop cwtl arpl std mov mov dec leave sub adc jmp nop or dec loope push fbld (bad) fdivrs out mov pop mov dec out mov mov or aaa int (bad) je sahf mov jg mov cmp fbld jg cmp push data16 mov std mov xor insb into cs xchg gs rcll xchg xor jne pop in adc add adc lods aam push ljmp mov lods (bad) mov push int3 out cmp jb cmp cmp movsl pushf pop lcall jae and aad inc stos mov into fsubrs lods sbb sahf lret jmp lock cmp std sbb stos outsl sbb fidivr cmpl and and outsl js movsb jno fimul outsb xor loop mov mov cmp loopne mov repz enter add add add add loopne and push fldt (bad) test sub sahf imul xchg xor lea popa repz notl add push out (bad) mov lret outsl aaa in mov pop mov out fmull xor movsl or or push pop cmp jle test arpl push icebp mov movsb loope adc add mov stc cmp dec mov out push dec inc cmpsb and pop popa add mov sbb mov xlat test loopne push inc xchg into test lods jge fldt fstpl pop xchg pop pop dec addr16 xchg xor and cmp pushf adc xchg and jno ffree inc out add loope or xor int inc (bad) rcr aam (bad) out mov into dec stc ret test mov inc iret cmp jae lock inc jo xor (bad) mull popf in push test add orl pusha (bad) cmp and xchg sub pop push mov mov clc mov or add mov cld js adc adc push test add mov xor out leave sti (bad) pop inc adc das roll mov aaa and bound push jne jno jg (bad) icebp adcb push fstpt sbb mov ret adc adc xor sbb xor pop push add add xchg stos xor sbb repnz mov xchg popa dec add and pushf jge insb pop cmp and mov mov sub dec add imul andb push out push fcompl mov adc adc mov rolb jge cld add nop cltd les scas jno pop jg out or insb push out orb dec adc int3 jno sub (bad) pushf sub pop nop ja xor scas movq sub push das add add cmp stos and mov adc js (bad) insl ljmp test jb pop pop push sbb and jo rcl sub pop xchg xlat test pushf (bad) jne or sbb imul mov je inc imul jb cmovle mov jo xor inc jg mov repnz outsb push pop lds movsb xor mov testb inc sbb (bad) lods out test addr16 in movsb dec mov add jecxz enter insl fcmove in cli mov fisubrl push movsb xchg sbb adc jge jne andb sub jge sbb or rorb and repnz mov dec mov add fwait xor fildll xchg sub xchg int3 ljmp stc add lods sbb fcoml in lahf xchg cld push add dec test mov dec cmp push ljmp jmp std stos pop push je roll add sbb aam add dec push mov add mov pop pop mov out rol fisttp mov mov dec pushf cltd pop push xchg js cld jno mov sbb adc pop addr16 ss pop lds leave inc mov push sbb add xor outsb xchg repz push (bad) pop (bad) add lods fldenv jg inc aam lahf jno out push inc test cmp xchg xor push cmc mov push mov add xor push mov daa mov push int3 and gs insb js ficoml ret movsb (bad) adc std jl test jns inc lock xor jnp pop xor push fldt jmp pushf movsb cli adcl xchg mov cmp stos loope mov sub xor imul or lcall je (bad) mov cmc outsb lds clc gs movsb sub sbb scas add add cmp sbb mov sbb rorb pop scas addr16 pop dec stc dec or mov push xchg int3 and lret cwtl test es sub pop in adc fiaddl ret pop shlb cmp popf or jge outsb rcll jp cli (bad) flds stc push fdivrl icebp roll cwtl push push xchg jbe mov mov ficoml cmpsl pop add add lcall repz (bad) ds xchg ds imul es mov jg popa push lahf push sub mov lret xor fyl2x push and fiadd cmp mov xchg push mov dec (bad) cmpsb int inc add xchg inc gs add mov pop aam rcrl push mov mov inc xor push test repz ret inc sub cmpl mov add mov lcall xchg xor negl cmp cmp add mov bound xchg push jnp adc sbb jae mov mov xchg (bad) xchg hlt fstl pop mov aad jbe dec movsb movsb icebp imul and pusha popa int mov fisttpll (bad) mov pop arpl dec or push push sbb call ja popf out dec mov add cld (bad) cld unpckhps out or clc jp inc and mov mov and mov inc fisttp xor sub pop fcomps out rcrl out sbb out mov test add pusha sbb arpl pop rcrb add jmp loopne adc push pusha xor sahf outsl cmp add mov clc and mov xorb and sbb call or arpl dec outsb xchg push mov mov inc inc scas add and data16 xlat pushf pusha sbb xor adc xor aaa (bad) mov aas push jnp pop and and push int fs or in push repz dec imull sbb bound push sub xchg test dec ss xor jle jmp scas xchg inc subl sbb lret jae std sub pop imul push data16 fbld mov mov outsb xchg fistp enter cmp in and or lods data16 push fiadd aaa mov clc outsb mov jbe mov or ljmp test ret pop rcr stos out mov mov ja mov lret pop pop lcall mov or add xchg iret mov icebp icebp in cli dec pop cwtl mov (bad) xchg sub pop subb repz mov out (bad) xchg mov repz add mov sub sbb pop (bad) int3 xor sbb add test pop or repnz in xor movsb pop sub into mov push xchg or scas (bad) outsb (bad) cmpsb pop sub popa pop shll stos popf icebp sbb xchg daa mov push add mov call pusha add xchg add call mov add cli mov cmpsb add addl cmp pop xchg fcoml push (bad) sbb dec jnp add inc mov and insl push pop movsb jnp jle (bad) sbb imul pusha sub icebp mov ficompl ret std pop jo fisubrl fdivs aas or adc dec pop cmp repz jne aas cmpsl (bad) xor mov (bad) mov push mov lret mov mov out fdiv cmp sub jno inc test adc fmuls push mov pop dec addl add add call repnz sub sub xlat lahf lret jmp lods popf fdivrl jo ret sub add (bad) movswl shr or and xor inc (bad) dec xor popa jg add add fidivrl jl sub movsb (bad) daa xchg mov jmp repz iret pop adc sub or cltd lahf in fwait and insl cld mov in rorb cwtl ret xor dec fstps push imul mov (bad) push loope pop sti fcomp out adc inc lcall or fxch lret lods sub int mov mov into sbb xor inc fs mov arpl add cmpsl pop bound push jb mov pop cld rolb add pop rcll aam nop fwait sbb or (bad) shrl gs push notl (bad) jle rorb dec pop bnd mov mov jmp add pop mov sub js fs decb cmp mov adc push adc into mov out mov mov subl sub sbb cmp lock mov adc ficompl lods int or pop fsubrs fdivr pop push test sub xchg xor imul shlb imul pop cltd cmp inc and popf sub inc rcll jb jno std push jg add add gs jae pushf (bad) push adc pop mov cli mov cmp je sahf out nop hlt fbld lahf popa xorb mov push mov les inc push mov cmp pop out and lret or lods sbb pop hlt int3 xchg inc sbb ds enter mov addr16 dec mov aam es inc push out mov int3 mov xor popf mov cmp add add inc (bad) pusha dec mov js mov mov cs (bad) jg decb das or and (bad) push xchg push stos xchg sbb scas fdivl outsb jae mov das shrb xchg adc (bad) jge mov fimull clc mov ss or jle cmp into push pusha (bad) enter lahf cmp fs pop or bound ficom test popa int int3 push leave and jns in pop push pop js cmpsb sarl lods or daa fld dec and xchg mov das xchg jb cmp stc dec and xchg lods adc sub dec dec jg adc test xchg jecxz mov cmp xchg (bad) cld mulb sbb adc add mov or hlt test fs loopne inc jno sarl mov xlat jle push ret mov popa dec xchg pusha pop data16 ljmp loopne ss cmp add add add xor outsb push out stos je push xchg add or jl xor clc out div imul and and mov test and pop mov xchg mov sub dec add jne aaa in ds (bad) pop jl enter inc fwait cltd cmp mov clc mov jp xor pushf out pop ret adc bound add jge nop aad and inc push insb xchg mov ds jno (bad) mov adc fdivrl add insw leave in mov insl mov fcmove in mov sbb fimul iret orl xrelease mov dec cmpsb adc stos sbb add out idiv cmp aam xchg push rorb call xor mov (bad) mov push or adc jnp sti loope push (bad) push pop mov sbb lcall outsl movsb push push or push adc xchg daa outsb and icebp sbb add sub cmp aad xchg cmp dec xor and loopne xchg imul fistp pop xor jmp mov sub dec lods outsb xor push jbe xchg push insb (bad) inc pop lods lcall inc push shll mov jnp xor les movsb inc xchg pop and cli ret dec xor xchg stc ljmp dec mov add lods ror push arpl cmpsl xor add sub pop insl out mov dec rcrl or sbb popf pop inc pop jae mov mov cltd lods mov xchg cmpsl mov (bad) nop pusha inc jge or insl (bad) bound rorl push jbe sub cmp (bad) jb pusha and test mov xor aad mov jmp sub push out jae outsb push mov inc lods ret xor in xchg dec rorl mov incb add dec xchg jns js (bad) adc lret jno sbb and add push dec repz mov lds dec inc in jecxz push and or lcall and pop lea inc xchg lcall push insb xor mov (bad) out sbb in mov (bad) add les adc xlat into ja push test sbb pop icebp sub push push cli outsb into or mov stos lret notb mov mov in popa lds push mov ficom orb dec jl loope sbb mov jb stos mov outsl and cltd out das jns leave stos mov adc imul sub gs pop enter push iret pop lret enter jg sbb cmp pop movsb inc shll dec cmp push jne fs lahf ds sub inc mov jbe cmpsb dec fstp cli cli in and ljmp fnop xchg lahf dec pusha push repnz int pop out add add and jl xorl dec jns and cmpsb or push insl cmpsb ret mov js ljmp jmp and sub cmp outsl shrl pusha test loopne repnz sahf xchg xchg (bad) lock adc pop jae dec test sbb and pushf lret push je add cmp add rol adc inc dec cmp (bad) mov pop and or fldt data16 js dec add add dec sti sub test sti stc jle pcmpgtb aam add lldt jo pop (bad) cmp movsb movsl pop or xchg jmp sub cmpsl sahf lcall jl add push cmp dec sti test movsb xchg addb aaa add dec add or lods sti dec jmp enter jp stos mov sti pop inc add cmpsl outsl cmp push xlat inc mov cmpsl das repz mov es add or repnz or fidiv mov xor sub scas push (bad) jae mov and push add cmc mov adc mov aas xor inc in insb xchg jg push sahf xor inc loope ss add inc fnstenv loopne add insb and aas cwtl sbb (bad) call inc int3 adc xchg andl push (bad) cmp icebp aam lar and fildll add add mov lods lds in cmpsb inc or lods jmp cmp adc in xchg sbb push mov mov ss in repnz cmp icebp mov mov sub das xchg sub aas cli mov sub sbb push (bad) pop add jno and cmp std mov jp or sbb xchg sarl icebp imul inc jnp mov (bad) and stc add xchg and stos jecxz mov add mov xchg push ja rcr pop outsl xchg cmp stc jb lods mov xchg xor mov xchg fldt out mov imul fs jnp aad xorl int3 cmc sbbl leave in dec ret mov fisubrl pushl cmpsl adc mov loop std mov sarl add sbb mov push sbb cld fimul popa cmpsb shrb xor mull sbb rcrb aaa add add add add std cld mov sbb mov push pop lretw pop jne sub dec es je mov (bad) or adc out push int xchg test test dec fdecstp gs mov fcoml or call mov pushf sub sub push push iret xchg mov pop mov out jg test mov adc test sbb icebp call or fidiv enter xchg adc out inc testb add arpl xchg xor test mov mov cmp mov gs add jne push pop jecxz out cli lahf dec dec fistp (bad) iret test sbb std cwtl xchg cmpsl mov cmp adc scas mov mov cmpsb push jge lea mov and xor enter ja test movsb ret stos popa inc add xchg ficom jecxz test pop insl scas stos push clc pop enter lahf movsb aad test loopne mov js roll or movsl add std mov adc sub adc out dec xor jecxz mov std leave mov sbb or loopne jg pop mov adc les ja lea inc xor cmc sbb ds pop andl cwtl and inc push jg stos mov jl cmp sbb xlat loopne lds es lret ss and fimull mov add dec cmp mov push fldenv xlat pushf mov mov pop cmpsb inc pop xor mov add mov pop pop shlb fcomps push mov jg test jge gs xchg out add loopne lea pop bound mov iret inc xchg icebp dec xchg stos pop and addl push mov mov (bad) push pop jg nop xor (bad) sub sub test in jne cmp dec iret mov add sub fistpl cmp mov inc adc popf fldcw jne and cmpsb adc rcrl adc data16 inc pushf push ds mov lea adc stos aad add cmp sbb or cmp lcall rcrb lods inc lret jmp sub pop into bound adc jle insb ja xchg xchg out xor arpl js xor sub (bad) push lock add ljmp insl add mov mov fmuls rolb sub jno lret enter fsubrp push in xchg add push mov sbb xchg add sub push push cmp and cmp sarl cmp lret sahf aad xor in mov or sub mov pop and repz fild push mov or mov test add add jecxz adc js adc fs cmp and push std mov dec jbe rorl mov mov mov jecxz popf xor gs (bad) lods mov add push inc add mov rclb fisttp cmpl dec jno mov les test imul jg mov fbstp xor ss push in or pop test (bad) jp in xor add inc mov xchg push adc mov (bad) jmp push lret pop sub stos cmp mov xlat daa rcll lahf push dec jne sub mov (bad) int mulb fbld iret push xor dec xor pop imul cmp jb rorl mov push push add pop pop xchg jnp es inc jno sbb adc insb (bad) jg pop or inc jge scas cli flds add mov ja imul sti sub push jb movsl popa into jge inc imul jne mov std mov xchg xor nop pop push stos stos cmpsl test push daa mov add ret (bad) rolb les movsl xchg pusha dec pusha ret xor gs (bad) push pop cld pop inc inc mov test pop push or push and pushf pop pop jo push scas leave mov test test and mov adc call inc fsubr repnz aam adc fisubl sub loope xor jl xor lcall outsl mov loopne and fnsave lods into les xchg or imul cmpsb in popf jno adc lret fistpll mov ffreep int3 sub sbb (bad) xchg inc (bad) xchg sub test adc ret stc mov insb sub shr bnd pop repz and sbb mov sahf xor push sbb shrb adc push mov and cmpsb mov leave or inc inc outsb repnz test inc outsb dec xor inc jae ss (bad) xor stos push fucomp and rorb scas outsl and test in and fs add cmp imul int3 shr mov sub addr16 add sti xchg and imul pusha sbb les aam fisubl aam mov pop int3 mov rorl sub dec ret or (bad) cmpsl in imul mov cltd pop insb cmp cmc inc mov xor push pop icebp dec mov adcl and sbb inc cltd sbb stos jmp and cld addl daa mov pusha push push cwtl jnp pop ret xor push je mov dec lock push xor and xor push sbb push inc popf inc xchg setnp hlt cmpsb dec add (bad) sti mov sub ss push inc fs and push xor sub dec xchg adc cmp roll cmp enter or shrl pop pop pop adc mov sub imul push push popa cmpsl jmp sub ret sbb in cmpsl jnp sbb aad inc jb mov inc clc (bad) fldt jg ja out add add add test or cltd cmp jle je mov daa dec (bad) scas aam icebp (bad) xlat mov in mov mov add (bad) or pop push aaa push xlat (bad) das ret push pop or (bad) dec cli sub lods std push mov adc lock mov daa icebp push arpl movl xchg push rcll push sub dec insb fwait sbb inc mov scas mov std cmp leave sbb cs adc in and add add cli push xor jp inc mov arpl xor andl jno xchg and xchg movsb push push dec jbe sub shr jb inc pop loopne sbb cmpsb push ret mov (bad) pop dec mov jecxz outsb mov insb roll cmc rolb sub in cmp sub fs sti cmp insb shlb mov fstl daa and addl adc xchg rolb add sub loop fstpl mov and imul xchg mov sarb cmpsl outsb sub sbb mov fist pop add fcomps mov into repz xor insl fcomi sub das adc dec pop out sub mov dec shr or test mov push and enter movsb mov mov add push mov xchg jecxz les arpl insb mov fisttpll cs mov repz mov rcll mov add call pop pop pusha mov mov jmp out and mov dec mov sbb lcall push cmpsl decb mov lock sub pop pop mov mov (bad) dec mov mov (bad) out cli loope dec pop xlat call test adc lods ljmp mov pop add in mov xchg xchg push insl xchg xchg lret and add add adc leave push push adc adc jge inc mov fdivrs push nop dec cwtl ja in inc lods jg or loopne arpl add and or xchg cwtl (bad) aas mov repnz mov push cli cltd adc mov ret iret jp insb test adc sub aad in repz add inc mov rol push das loop in adc iret out inc lahf daa inc xor or int mov bound xchg in inc into mov negb adc outsb loop jbe (bad) into pop sub in xchg xchg mov popf mov pop int pop mov mov jg ss jmp gs mov or jg mov test push cmp retw iret mov cmpsl jle dec ret (bad) cmp loope jge adcl cmpsb rcrb pop cmp in inc das mov stc mov xor mov lock mov jno (bad) sti popf adc cli dec jbe add and hlt pop xchg scas add rcrl outsb js sbb sub outsl jge xor cmp xchg xor iret (bad) aaa dec adc adc push add sbb test stc jnp dec inc xchg push pop adc out mov sub dec or lret inc sahf adcl and (bad) xchg sub lock stc xchg xchg push push in mov sub cli sbb mov subl add sub jl loop imul sbb int pop and or imul pop sub lcall sbb add aam mov fistp xchg imul arpl mov mov loopne int loop pop out sbbl pop je mov cmp mov jae jno aam add insl sub pop in sub push lret add jbe jl or cmp arpl and jp mov mov lock pop cmpsb hlt and xor cmc sbb xchg jle fistpll xchg mov xchg int3 push je and mov jmp idiv lret sbbl mov or dec fild lret or mov lods mov pop (bad) mov cmp fiadd test outsl ret popf xchg sahf repnz sbb in sub ror add and cld xor int sbb (bad) inc ss insl xor notb adc ret data16 jge pop mov scas mov mov pop push xor push gs push sub cmp test add leave popf adc add and pop xchg fsub stos mov push cmp mov lea pop xor mov push xchg std pop pop adc fcoml cwtl cmp gs roll les cmp bound add push js mov pop movsl scas sub jns sub push or cmp ficom add xor and sub inc add fcmovne mov lods stc sarl jb pop sarl sbb in arpl push fidivl bound imul jg loopne adc fwait sbb iret pop addr16 leave lcall pop jg ljmp adc out push push jmp loop lods sarb mov ljmp outsb inc add mov es ja mov ficompl (bad) inc inc inc ds cld iret dec pop fild mov add inc push jp jge or outsb pushf inc xor cmpsl push lret xchg out mov jo jae les int sbb stc lcall popa pushf dec or movsl scas push imul inc mov (bad) int3 inc int pop test pop les std aaa punpckhdq shr jo adc leave andl lret imul mov add jbe scas add les (bad) mov xchg xchg packssdw inc cmpb mov mov jge push jge inc out mov jecxz loop add jb lods lods xchg loopne or sbb xchg cmpsl in js idiv mov sahf ret bound cmp iret push fist push ret in add inc (bad) cld ds movsb int xor and sub pusha cmc push jp xor adc into into dec mov lret out mov aad jnp mov jns into and cmp push adc push add cmpsl add pop push fsubrp sub fsubr lods pushf stos xchg jnp sti stc flds mov dec push pop dec mov adc or stc cmp and stc pmaxub std popf dec push dec nop sbb mov aad xchg sti daa pop xchg rorl or dec ja hlt ret cs testb adc jbe mov popa adc cmp add test sub xchg jmp scas int3 mov xchg repnz orb cmc pop mov cli cltd insl ret jecxz xchg popf arpl jle jmp nop and lret jmp jmp lcall ljmp out test jno sub cmp loope or xchg aam call dec out mov inc fwait cmovp ljmp outsb dec cmp cmc jns cltd js jle jbe popf mov sbb lea add add xor movsb ja add add test es test sbbl add test or jp mov gs or stos mov addr16 push lods gs push pop rcrl insb dec inc pop xor ljmp dec push lcall (bad) jns mov repnz mov mov nop lret outsl add popa enter pop mov pop mov cmpsb mov xchg xlat (bad) pop inc aam add fbld cwtl add jo xchg inc int xchg loop sbb pop outsl xor add sbb sub js xchg jge je ljmp lret fdivl or into lret pop movsl jle imul popf cmp lret sbb in popa ljmp icebp pusha (bad) ficompl pusha push xor lock aad daa cld push sbb or adc cmp insb ljmp cmp aam js shrb inc addr16 pop inc or mov xor les loopne sarb mov paddd mov cwtl repz mov icebp les test lods cmp cmp pop aaa push adc adc daa test cmpsl mov mov leave in and pop push lock popf scas cmp xchg jno test cmp jae pop push out jo or (bad) int3 ret test adc mov in jb fnstcw mov dec inc bound rolb add adc test and add clc and adc (bad) bound mov aas mov (bad) dec in lcall aam adc mov sbb into push mov mov add das stc push ret adc shrl mov icebp xchg cmp lock sub das shrb mov push aas out pop jbe fs aas inc dec pop mov add pop fsubs add push sbb jg fidivrl arpl mov call sub pop jl xchg jmp mov loope imul xlat mov pop pop mov sub and nop mov xor cmpsb int3 ds rcrb nop rorb xchg inc xchg inc dec subl out ds sub xor bound or sub jnp xor (bad) repz das (bad) mov insl jbe int3 cwtl inc fisttpll imul hlt mov add (bad) lahf pushf in lret stc adc ja inc in fistpl sub outsl daa sti pop push dec aad mov mov ljmp dec push inc xor pop xor popf push inc fiadd xor loope dec pop push je xchg fistpll aam mov lds jo mov test mov mov mov and adc xchg repnz and sbb mov pop call lea jecxz pop jnp daa or pop jecxz aaa add out jne adc icebp mov inc dec int3 loopne arpl sub imul shrl lock mov or push js cli adc clc aaa in pop es pusha adc fbld jmp and pop push fcomps out icebp mov int mov fcom (bad) jle mov addl ljmp ds idivb dec push jp movsb add dec sbb aam mov mov in cltd inc ljmp inc js mov arpl xor mov stos iret je sub ret push notb lcall fs icebp addl dec mov fwait pop xchg push outsb ror pop outsl cmc mov mov ja fistpll push dec or sbb mov add cmpsl mov fmulp mov xchg and lods loop outsb mov mov mov add daa (bad) dec jns inc push (bad) xor (bad) sub fldl2e push jb and cmp insb aaa nop mov rdpmc mov jbe fsts ret bound jae mov push decb cli aam and out iret repnz dec adc sbb dec popa cmpsw stos push dec adc mov jle sbb sbb xor cmpsb mov xor gs jns bound mov pop aad loop dec adc sbb mov pop xor imul dec jbe xor add (bad) xchg mov es or mov decl add addl in jae mov insl cmp int shlb mov mov fidivrl push mov ljmp ds xchg push dec les subl pop imul sub jmp lock ljmp lret pop ret add sbb xor shlb add int3 mov add add push jnp hlt das xchg lods jns lock xchg hlt pop xchg and cmp fistp rorb test push mov sub das xorb adc in in lea and sbb repnz rolb in fmull push xor cmp lea add ss lods addr16 mov movsb jp jl pop pop lahf push xor jno dec (bad) js adc mov inc iret mov and jb jne sarb hlt and imul push stos pop out xlat jnp loope lds (bad) idivb xlat insl ljmp (bad) in pop adc push jge arpl divb and xor inc lcall rolb sub sbb mov xchg repnz push stc push leave push xchg sub and adc cs cs gs xchg leave xchg add clc inc inc enter add add cmp lret pushf mov dec (bad) fild add lea jmp test aas outsl lcall mov jo and mov sbb adc notb out push and cmp mov fstpl fs and pop mov into in bound movsl cltd loop out mov adc inc enter xchg vmovapd mov xchg fcompl xor push fbld mov dec lods mov insb inc pop fs int mov pop adc ret jmp pop test stos (bad) lret sbb cs movsl insl dec jns pop cwtl out (bad) fnstcw xor into jg cmp push fimull add sub xchg inc mov or scas pop ud1 mov jbe cmp cld sti or cltd mov xchg test or (bad) arpl pop lea sbb add lcall fadds outsb xchg iret xlat lods mov in das cli stos enter push rcll addl scas mov push sbb inc gs mov cltd xchg xor sbb sti scas fstl add dec and (bad) jno dec jb rcrl dec cmp adcl push iret xchg mov lcall lret mov push lds and (bad) dec mov gs mov inc roll ficom dec ja sbb add add inc adc lcall pusha or add call sbb mov fcoml lods rcrb inc sbb dec adc out and cmc xchg pop mov ja xor xor loop jp mov pop adc mov movsb pop loope stc jle add leave jge cwtl or mov jg xchg fstpt dec push pushf outsb or mov mov xchg shlb xchg movsl push dec push mov je out incb add sub jae mov adc pop sbb add ljmp lcall in mov jno or xor push cmp adc inc xchg mov mov pop or dec xchg xchg or or mov inc pop mov (bad) rcr xlat add add fimull mov mov mov cli mov push push jl cmp in and push sahf icebp mov sbb inc (bad) test js rorl jne dec mov enter fwait repnz (bad) jno fist aas rcrl jmp xchg orl fsubrl in fsubr jbe lahf sub (bad) mov aad pop hlt xchg icebp push jbe dec mov push push minps push aam fucom je jge xchg ljmp mov cmp cmp cmc push add add and jge adc dec push movsb loop rolb cwtl dec mov pushf and (bad) lcall sbb aad cwtl adc dec je push jnp imul pop pop jmp sbb fistpl (bad) rclb addr16 (bad) imul fwait decl push add fs push cltd inc cmp jmp adc xor add sub pushf xchg jle xchg movsl dec pop fdivrl mov ljmp jl call fdivs leave movsb push pushf ror rcll cmpsl mov js push jp fmuls xor fsts push hlt cmc pop push ret push xchg out scas mov cmp fs (bad) or into push pop lods aam inc in mov inc xchg inc cmc ficomp pause (bad) xor dec leave mov mov or cmp dec mov or adc dec je fldcw pop mov mov andb (bad) aad imul fdivl test mov add push pop sub dec das lods xor jg mov dec and pop rorl test jno mov adc inc cmc movsl iret mov push hlt loop mov test xor mov dec xchg and jle mov sub sub outsb push jne (bad) push pop push mov jae sbb imulb or out jbe add cmpsl jl loope fdivrl pop mov adc lods cli fisubr adc dec jge dec mov stos outsb sbb pop xchg loopne fwait lea sub lret sub clc movb mov jbe subl mov or outsb cs fiadd push std add clc shrb ret arpl inc sti testl dec adc jb lea mov xchg inc jle mov push mov sbb adc pop sbb cmp cli push push or in jmp lods dec aas adc int3 jp stos or add and dec mov int3 jmp jl stc ss fbstp add or out jmp (bad) dec jg out outsb inc loop inc adc stc ret mov mov xchg arpl push in mov cs decb push mov jae or mov jae adc into push push ss in iret mov lds in ret xchg in loopne mov sahf pusha insb orl pushl and add mov or lcall rcrl movsl pop loope lea adc xchg jle out int sti js mov iret in pusha cmp sbb test and mov mov push loop xchg jg pop mov sub pop fld hlt sub push out lcall adc xor or adc sub scas xor push sbb mov push call add add jg push push and outsb cmc shll jg addr16 popf sbb in mov ds es cmp jbe ljmp sub xor lds dec cmc mov jecxz lods popa loop push cmp lahf pop pop xchg lods lret mov mov mov jge jg mov rcll adc lock push jae int3 jne rclb pop jp stos fildll xchg mov into or sbb rep xchg add sarl sti std pop aad mov mov test push data16 sub fistpl xor in ja jne adc dec andl jno or jb sub ss leave insb mov inc fist faddl mov pop xchg and cmc lea repnz movsl stos jb mov mov in sub (bad) mov lcall iret pop pop push xor jecxz dec mov out or mov sub add add iret (bad) sbb test call pop sti pop in xor mov dec cmpb outsb push cltd andl jge xlat add adc adc dec fcoml add pop movl (bad) cmp fnsave lods ret mov mov dec inc sbb (bad) mov xbegin mov push pop (bad) nop in ja,pt mov movsb xor xorl imul pop push ss add add stos fldcw jp fs sbb and data16 push push mov fnstcw xor in movsb test push sub jnp lret ret add adcb cmc xchg test gs push cmpsb fildll mov adc xchg fsubl pop inc test sbb sbb jmp fisttpll int ss sbb mov pop sub sahf (bad) in jmp jb jns add in cmp aas cmp outsb popw xchg nop add aas les inc add repnz ror rclb pop xchg push repz jmp pop or mov sub sub mov jl cmp fmul cmp xor jl out enter sti (bad) lcall ret fist test aam add js fadd dec shl sbb jecxz or clc das fxch mov addr16 mov pop push cmpsl mov sbb stos dec cmc mov int lcall xchg in sbb add in pusha mov test enter in in decl sahf pop inc push into cmp imul sub (bad) repnz mov or pop mov sahf sets mov mov out push mov stc xchg aaa mov icebp enter adc adc jecxz ret push cld imul inc xor mov xchg sbb fs ds sbb mov icebp lock add add pop push outsb fstps add lahf cmpsb xchg iret scas fstps ja mov mov or jb jne mull push (bad) stos sahf lea sahf mov enter mov out jge jp je hlt clc mov inc pop movsb scas jb push xchg test jecxz sub or jmp mov xchg push mov mov cmpsl lods pop xor test inc sbb mov mov aas push push inc in subl add add add subl ds pop int scas dec iret in out jmp test (bad) xor out (bad) test mov cwtl lock jne popf sub outsl stos sbb sbb sahf hlt add leave cmp mov in push adc pop aaa inc inc fsubl not fisubrl fidivrl icebp push mov adc nop add (bad) notb pop addr16 cmp cs ret or mov xchg sbb lock adc lds iret imul add adc cltd stc mov mov loop aad push jbe add movsb in repnz mov adc inc adc insl and inc push jp je mov je fcmovnu mov and adc movsb inc sbb fiadd or in sbb pop out xchg dec fwait (bad) ficomp ja aad sub adc jb lahf mov (bad) mov popf and addr16 mov fistpll push shlb fistpl ss cmp add fmuls stc loope call arpl mov stc cmp rclb aad popa call or jno daa std push pushf mov xchg insl and stos mov call sbb and inc push ja aad pop sbb ljmp inc repz cs pushf mov data16 lea push or inc iret subl push cmp fisubrl mov pop fwait adc inc into push xchg pop push imul add cs jle cmc repnz outsl sarb lret lods mov pop std fist neg adc add inc imul mov cmp pop ret push xchg fisubrl adc push jge cmc mov mov push fndisi(8087 stc outsb cmpsb sub add shl cmp push loope or push push inc movsl je mov inc jo jg in in pusha ja shll or add loopne sbb out (bad) decl mov in arpl pop add xchg xor (bad) in push jb outsb mov call adc xor leave fiadd or push fcomps cmpsl jno and test (bad) rcll sub gs hlt push and cmp stc out push mov inc dec mov or xchg adc popa jp mov popf cltd iret les sub or sahf enter and add push sti jmp into loope xchg stc (bad) pop and mov scas mov mov xchg push add sub xchg mov rorl and pushl and xchg int mov mov mov pop out pop mov sbb icebp mov jg push sbb mov dec pusha sbb add test xor divb push das cmpsl inc daa into fs fild add pop cmpsb in xorl inc jmp ja or and xchg sub arpl fisubr dec rcrb push mov jb adc jnp ret push or mov xchg ss (bad) sub adc popa aas fnstcw pop mov push add xchg (bad) mov aas jne xchg addr16 push enter loopne xchg dec mov insb mov inc outsb es fnsave call jp jmp add dec cwtl fimul dec insl pop mov adc sub add das and cwtl in mov sbb out add mov jmp cmp addr16 inc inc xor sub repz fs sbb mov pop lds nop hlt (bad) sbb shlb mov shrb int fwait cmpsl push lret lret inc std sarl inc aam and jbe jae xchg cmpsl gs rolb ja or stos mov adc push add add ret or jns pop cmpl mov out pop pop fs add add sbb cwtl add (bad) jmp gs xor sub cli mov inc push mov test shll icebp ret das das push ds enter imul lcall pusha add add inc add xchg out lods gs push mov aaa mov fwait pop pop (bad) (bad) dec lock jecxz add xchg cmp cmp enter mov fs cmp jno les call aas inc imul sbb jmp push popf cmp pop jae and lods shrb push mov dec inc inc pop outsb cmp cltd stc push pop mov mov sbb std mov inc aaa sbb jne add inc xor jmp xor rorb xor xlat xchg jle inc imul jmp add dec jbe cli lods (bad) out xor (bad) subl ds mov lods cwtl fnsave and push jle mov or dec mov sub or notl mov jne sbb loopne adc mov dec (bad) (bad) sub xchg cmp (bad) je (bad) adc push shrb lahf (bad) jo mov add cli (bad) ja test jp mov aaa ret mov jge push add adc pop fs xchg dec test sarl out xor outsb arpl fs pop (bad) sub inc mov mov int3 hlt scas sbb push ret inc and cmp popf out mov out sbb jo mov mov and popf ret ss and movsb scas inc inc sub mov stos add lret insl xor mov (bad) (bad) push push gs pop pushf or test dec cmpsl sub add outsb and (bad) enter icebp pop cmp jmp adc stc mov xchg xchg loope or pop int3 pushf sub inc pop (bad) enter add js imul lcall aad jmp mov loope xor aam sbb xchg jo mov inc mov loop push push dec lret into fucompp add cmpsl adc mov (bad) jp data16 (bad) mov lahf push inc imul jmp add sbb inc push std imul ds loop fwait (bad) fldt loope cmp jo and repnz sbb mov mov hlt cli popa cmp and mov rcr lcall clc jl mov lods in lods bound in stc xchg jg cmc mov inc fs push lret ficoml cli addr16 shll mov and dec cmc sub jnp imul push and sbb stos je inc push jne cmp adc xor arpl add adc or sbb les cmpsl and in int andl cmc scas dec sbb (bad) push cmp cmp pop sbb in xlat scas mov adc xchg aas push test xchg (bad) loop push xchg les xor xor jno mov insb pushf roll (bad) push dec jecxz or sub test push mov imul and (bad) mov jmp jbe loope movsb cli inc in in int3 rcr pusha cmp rcrb scas mov sub fwait xor xlat push xchg pop cmpl jecxz inc std ficomp sbb inc gs jns mov cltd fmull ror int push or add pop pushl gs sbb or adc adc sbb or adc loop inc inc sub ss inc movsl dec loop cmp popl pop fnstenv pop sub enter sbb xchg dec aam sbb jb (bad) xor stc mov jle adc stc inc cwtl dec jecxz je cmpsl push sub sbb gs hlt add mov mov insb fldt cltd mov sub mov addr16 mov arpl dec cmp icebp jg inc push mov ja xchg loopne push cltd mov lret and aas add mov int3 ja pop call lea (bad) fxch xchg pop lret lods jecxz and repz mov test push pop pop sahf cli cltd cmp add (bad) fisubrl cmp cmp sub bound pop mov popa and jb add dec stos pop jns arpl ja inc ss sbb insl sahf mov repz push les sbb push lock lcall daa icebp test push in xor lods xchg mov mov out mov scas leave add mov or and fisubl push mov sti cltd dec sub add mov dec inc xchg into xchg add jp inc inc cld icebp loopne push outsl scas push sbb xor dec pusha in pop add xchg xchg mov cmp fstl loop enter adc addr16 add lahf pop xchg or in lcall jo sub cmp lahf push (bad) cmp adc mov add andl or pop mul push adcl add aaa xchg or fidivr outsl cmp adc add sbb pusha and xlat iret mov cltd lcall cmp xor into dec iret test ljmp cmp scas shrl or rorl sub push test gs ja iret sub scas ja and or jp sahf stos out mov dec lahf cwtl (bad) jb mov lcall mov loopne xchg xchg je add mov icebp push and add add sub dec cwtl lret stc arpl inc cmp subb out enter scas pandn lret ss leave lods jmp xchg (bad) call jbe or cmp xchg mov mov xchg movsl cs enter sbb std inc xchg push cmp aaa and adc (bad) cmpsb mov and or mov mov inc mov cltd xchg push and and pop inc into xchg mov sarb leave push (bad) movsl adc jne (bad) pop dec mov jg or sbb add dec jecxz out jne adc mov xchg repz fsincos orb adc pop pushf jmp mov js (bad) out sbb adc int3 jge stos sub scas push jo inc dec push stos fisttp aam (bad) dec lock outsl push xchg xchg cmp dec xchg push mov data16 iret push bound xchg fnstenv ja jle into xlat cmp lcall mov cmpb add hlt ss cli or imul fist mov pop movsl sti leave pusha push jge stos jne in lret into or push addr16 outsb insl inc pop sub movsl clc jl or jl inc outsb addb mov int3 lock mov pop jle sub cmp ds jnp lock rcrl mov clc push fidivr sbb push (bad) mov inc mov insl mov add push add dec cmp je push clc xchg loop fidivr mov mov cmpsl or pop jp push dec mov loope pusha (bad) pop leave add add scas mov (bad) sbb ja,pt fcoml decb jle fcoml sti jne movsb and loop mov xor xchg lods lods mov decl dec fs xchg mov adc ja daa dec je mov cmpsb inc pop mov (bad) jbe iret add pusha nop fwait sar (bad) popf and jmp sub mov add or mov or or push add cld sbb pop push dec add pop aas mov cld int3 sahf std fstpl xchg lahf mov mov ret xor sbbb sub jmp lods clc pushf adc pop std xor xor in mov sub call insl loope dec jnp ljmp sti pushl add pop aaa mov out aas popa mov (bad) stos jns in pop nop hlt mov add fs rcl xor mov popa and shrb lret int3 movsb xchg xor ret inc outsb xor pushf fbld jp push pop push je sub (bad) mov fbld pop or pop jno divb out arpl (bad) mov add repz mov mov imul sbbl testb jno push mov mov mov ret xlat js imul inc pop jmp add loop,pt cmp loopne cwtl push cmc jbe add flds (bad) push scas je mov xchg lods jmp mov mov mov bound out subl push imul les cld sub push mov pusha loop outsl mov call sub rol (bad) fiadd (bad) cmp inc adc jo mov mov roll mov xor sahf cwtl dec in add xchg push sbb xchg fidivl or dec fldcw and out cld lret out pop rcr lahf pop sub add xchg popf xchg sbb lea inc in or jg jmp out jno icebp (bad) in mov jo in dec inc roll cli pop in repnz xchg and cmp jnp in add fnop scas push inc dec xlat and sub insb and test mov std daa (bad) out repz stos out loopne fldenv push add mov into lret imul lret and popa jg push test ljmp fcomps pop sub mov hlt sub jge das or add push pop inc jmp xchg cmp dec sub cwtl bswap mov xchg cmpsl daa stos lret push out mov inc push jae (bad) insl arpl sbb cwtl lret lret fdivp jecxz mov in and (bad) mov sbb xor push repz out pushf xchg dec push out lahf ss mov push fs in push jne cmp add add js mov test repnz add push hlt mov lret xchg pop xor cmp cmp mov push (bad) std cmpsb aam cltd inc loop jns in sbb xlat test xchg pop jmp (bad) loopne mov push mov scas aad jno stc xor fcoms in adc cwtl jmp sti add or dec push fdivs cmpsb aas xchg mov sarb je mov mov add sub dec xchg inc sub xchg mov test push bnd test inc int3 out jge adc dec (bad) mov add mov outsl add adc push mov sub rcrl fwait dec dec enter je add hlt enter es shrb clc jl xor out imul jae (bad) sub ret mov in insb or out add lcall adc cmp add add outsl or xchg sbb and mov mov dec es mov mov or (bad) sub jp cmp push jns lods out hlt test sub cmpsl push mov divl push pop and sti jae xlat lahf or test push stos cli (bad) push xor cmc insb fs lock lret das lock cmpsl fisub pop imulb ret cli jmp decl rcrl scas pop dec add dec or add ret sub pop (bad) pop ret jae mov cmc push add ss test sbb xchg shrb pop movsb push cmp push adc sbb test mov sub test jl pop aad dec bswap ss inc call dec adc add pop or int xor xchg mov xor push bound mov out imul addb xchg xor cmp into lcall add test sub jp sub sbb or std add pop jle mov sbb outsl xor sbb push ja sbbl pop mov jge ds fsubrp inc jns jecxz or jnp imul xor iret adc insl test jno xor dec (bad) popa jns sbb jns jmp dec cmp leave dec jge jl outsl movl add push pop jnp jb adc push lret js xor ja adc xchg xchg (bad) loope xchg test mov imul lods ljmp aam mov fidiv mov add addr16 stc scas or jnp or adc jo push inc mov mov sbbb or aam cmpsb scas in les ljmp std sub xchg adc pop push out push ss iret cmpsl mov xchg xchg jle out sar pop add add stc dec dec pop add and xchg push jg outsb dec idivb movsl in je jge and dec mov add inc rorl (bad) push dec jmp add orl xchg es xchg push fistpll loop fs repnz jl outsb popa jae pop loop rorb aad (bad) or out xor std mov dec sub xchg jmp and push add jl lcall cwtl pop cltd add nop (bad) iret pushw cld and xor xchg movsl sbb mov pusha icebp pop push movsl inc add mov es lock ror fmul xchg fld sti dec pop stos pop mov ffree arpl push or pop popa xor sub insl dec aad lret sbb push xchg jne loop rcl dec fadds inc sub push int mov popf xchg push lock (bad) xor pushf jg popf or clc sub xchg int3 add dec rol fildl add fwait or fucomip push out loop fs push aad push lds inc pop inc mov jns lods pop das add jnp add jl fstpt pop push stos mov jge mov shlb mov jnp test sbb fstpl mov std cmpsb and xchg xchg cmp rclb cmp test or xlat retw adc test aad and push or xchg xchg pop xchg les sbb push cmp add or pop sbb jmp testl fcmovne mov mov stos stos jg iret sub pop cli in xchg jmp jnp mov nop pop inc dec mov xchg stc or cmp out (bad) sub xchg fistpll popa add xor cmp cmp pcmpeqd inc jnp data16 fildll or add fimull add popf sub icebp jl bound ljmp push jl pop sbb add add inc or jmp xchg rol testl inc mov rol leave test jb pop sbb mov in movups std (bad) push (bad) fsub mov adc dec xor (bad) sbb lds mov bound xor test adc add jb andl push stc rolb inc and dec int3 mov xchg outsl cmc pop sti inc imul inc clc cld pop dec sbbl enter dec xlat dec add aam (bad) out jb mov sbbl adc int in or pop sbb aad (bad) jg mov lods or push xchg jl fstpt jne jbe mov icebp (bad) cmp adc add rorb bound ficom test call stos scas lahf or lea scas push (bad) mov dec imul xor cmp dec add sahf ljmp in cmc mov mov mov pop jbe add iret mov aas test push scas jns jl add and xor pop jns rcrl popa imul xchg dec or pop pop int3 jl and (bad) xor jnp mov pop xchg pusha or flds add test or mov int or bound dec xchg or insl pop iret or lds repnz push mov (bad) stos xor sti mov adc stos (bad) pop shll push xchg adc sbb mov adc iret test out inc (bad) loope ficompl and pop xchg push inc dec pop test pop mov xor sub rcrl sti psubd push mov das (bad) and mov idiv push xor das test stc adc jne loope inc sbb fs or mov (bad) and sbb or inc pop cmp push cmp and aaa and shll add aad pushf cli fistpll sub out mov lahf push cmp sbb jbe lret fwait sub repnz push xchg mov xchg fmuls insb sbb fcoms or mov shr inc inc mov mov insb mov pop in (bad) push jb out dec repz ds loop out cmpsb mov and insl ret lahf loop sub add dec cvtps2pd loopne cwtl daa pop pop aaa jo xchg ret pop sbb ficomp dec xchg cmp stc (bad) fdivrs inc test insb sbb pop loopne out jmp jmp data16 fnstenv stc ret adc add jle pop out jl lea xchg pop sbb mov hlt (bad) mov fs je mov mov xchg out and shl out push (bad) stc int adc (bad) test jecxz adc mov sbb enter xor and rol call mov add push mov sbb xchg mov pop call scas in negb mov in scas ja orl movsl sub cmp sbb addr16 or in test divb dec in subl mov sub scas lods inc loopne adc jmp (bad) jae xor pop (bad) mov aad sbb mov imul mov imul cltd popa sbb bound cmp add push scas xor xchg cmp and mov dec (bad) rdpmc insl test add mov out or jge popa mov inc pop sub lcall xchg sbb jg or data16 ss imul loop and cmp inc notl test add inc pop mov enter fdivp cmp or into (bad) fisttp enter jns xchg adc mov pop mov cmp adcl add add dec movsb (bad) mov pop sbb cmpl pop mul repnz mov data16 fisub sub (bad) (bad) sub sub sbb int3 or mov sbb sub rorb lock pop jns repnz jbe and mov cmp jne mov sahf std loope xchg mov add fldl cmp xchg push jge xchg aaa int3 shrb add add fsub adc push sbbl fs loop out inc mov or dec mov sub xchg adc std decb or out cld ficom push add mov push (bad) push (bad) insb je mov icebp sbb push aad cwtl icebp test mov mov and std out cmpsl ret xlat jg push jbe mov cmc pop sub lods xchg mov sbb cs adc fldcw fist inc or mov adc cmp jg ljmp subl fwait add xchg inc ss cmpl inc pop add inc inc loopne jbe xor add lcall lret int inc mov add (bad) xor cltd jno xchg push pop loop adc xor jae pop and mov xor mov shrb fmuls and scas mov jg stc mov jnp sub sbb xlat mov sbb es add add mov cs mov lods insl add in ud2 pushf mov sub sbb ja rcrl jecxz scas (bad) lock mov adc addr16 sbbl mov movsb jg inc mov hlt enter popa loop in xor pop xor mov cli inc (bad) fsubl cmp cs cmp lock mov outsb out xchg enter xchg fistl dec insb inc push fwait lret aad or inc mov xchg xchg nopl mov ficomp out cwtl aas fsubrs jbe repz sub leave (bad) cmp or sbb inc aam movsb (bad) xlat pop (bad) fisub adc sub add adc jmp mov push ja test je inc pop stos xchg ficompl aaa jecxz fwait xor dec add jnp (bad) jo (bad) loopne rolb or jg (bad) out pop jle pop mov cld mov int sbb xchg xchg sbb outsl ljmp loopne enter in lock loopne mov pop aam push mov sub cmp mov pop jmp mov sbb add repz pop mov je xchg mov leave pop mov or sub ss mov cmp lcall jns inc out cmp add jb pop out or out sub (bad) fdiv xor sub push add jno jp loope or cmc adc notb fwait cmp xorl inc nop movsb int and mov popa add int3 adc call cs jns inc mov ss sub scas jne push xchg mov mov adc fstl mov pop scas sbb andl pop jo sub pop jge add add (bad) in les aam cmpsl add mov mov mov jge jp inc push loop pop std hlt rcrl repnz xchg adc shll add jge icebp push lcall mov insl push and push push and and fadds jbe fs test adc pop hlt lds arpl cmp in or addr16 movsb and (bad) sub pop je dec mov xchg push (bad) (bad) in sbb iret pop push xchg jg mov out inc iret add and mov in mov pop in lcall fiadd jns in mov push push pop test mov add scas ficom out test scas mov jmp inc cwtl negb sbb loope adc aam inc (bad) in ljmp arpl or (bad) frstor lods popaw roll popf aas jg rcrb xor fwait xorl jecxz (bad) cltd dec xchg add ljmp gs inc jne mov cwtl fsubrl cmc pop movsb (bad) loopne les xor mov sbb xor sbb adcl pop lcall (bad) daa and inc jecxz fistpll decl mov bound int3 cmp dec jnp push jge rcl xlat inc sub fwait jnp push cmc sub jns fdivrp pop ja ds jae xor fsubs clc adc or dec jge imul mov inc fdivl xchg aaa push arpl emms inc int3 add fs adc cmp out jb cmp loope or mov add (bad) in lock jns in movl stos mov push jg inc xor sti sub mov xorl jle es les ljmp dec cmc jmp push xor pop add pusha and pop lahf arpl cmp or ficomp loope mov popa mov inc (bad) fninit imul inc sbb (bad) out add (bad) push add lahf (bad) jbe jg add std mov mov mov (bad) test xchg xchg clc xor sbb into movsl lea aam mov inc jmp mov dec lock pop push sub aaa inc dec push dec scas push stos imul add push scas xchg in (bad) mov in sbb addr16 adc inc push inc repz aam xor push xor ret clc clc push pop xchg add scas je xor out mov cld dec sbb cmp push mov inc adc mov sbb dec push repz or sbb sub addl xor inc cmpl add inc sbb (bad) push (bad) mov fist inc (bad) inc js,pn xchg fnop aam mov mov add add scas jmp mov (bad) sub mov adc jg pop (bad) movsl cld fimul adcl push adc add jo frstor push repz xlat pop ret movsb es jbe js (bad) pop rcll gs xor rol sahf mov (bad) and shl sti inc sbb scas fimull xor and add xchg mov fnstcw push or inc je int aam sub mov sbb neg ljmp addr16 sub (bad) (bad) std push adc and shlb aad and and push enter rcrl add push mov xchg cmpsl pushf cmp ljmp icebp stos aas push rcrb insl jb cmpsl jl pop dec mov xor lcall push jbe push movsl mov sbb sub jbe cmc mov add add add adc inc mov mov in mov nop sub dec stos fstpt das mov jo loope xchg cmp clc pop inc cli mov outsl lods stos jmp lahf mov sbb outsl xchg push out movsb push cld fcomps jle int3 mov mov lret repnz gs mov in sbb add scas daa inc cli dec (bad) mull out outsl push jne int cltd popa mov sub cmp fldcw xor bound (bad) test adc push xchg jg ljmp incl loopne pop xor sub mov out pop dec push lcall les pushf mov loop cwtl out mov jg pop andb pop outsb lock enter lahf sbb leave (bad) lahf mov test sub imul xchg sbb leave js mov ret or decl enter pop (bad) iret pop (bad) xchg or xchg pop cltd cs add push add cld xor and inc ret movsl lods (bad) not mov (bad) mov loope push int3 jle mov mov add ret push movsb and push adc cmp pop jp jne sarl out mov sub and cltd inc jae xchg lock popa push inc adc or adc mov push pop out jbe mov out xchg dec jae sbb add mov cli or fidiv aam push loop jbe aaa ljmp mov fwait cmp iret or js mov xor sbb aaa js aaa out jno jno dec mov in ljmp inc mov pop dec mov or (bad) ljmp adc adc adc pop mov mov dec scas (bad) xor lcallw je (bad) fwait pop insb inc mov mov mov loop orl sub mov popf test xchg or bound xchg hlt ret sbb mov or mov iret dec mov les pop xor adc call dec sub insl outsl jb mov dec bound push cmp in ja inc fisttpll test fstpl mov in popa popf mov dec outsb sub ss mov mov cmp dec inc jl dec add add movsb adc sub add cmp movsl les mov xlat adc pop into cmp (bad) call dec pop jl xor jp andb in add lods fwait pop mov jne cli add or sahf inc int3 into xor xor dec pop xchg les push add jb (bad) jg inc repnz sbb int push test xchg subb or inc xlat jge push shr mov dec dec jno add in mov sbb adc enter add jnp add jecxz pop std push jae sub xor (bad) xlat int jge das jg arpl ror cmp stos ret lea in (bad) inc mov in repnz clc sbb mov repnz incl xchg leave pop loope mov arpl cmp xchg clc add xchg mov rolb (bad) xchg push fst inc add mov pusha out test dec movsb mov enter push sub stc cmp and pop cmp or aas and lret xchg into divl jp ds add mov ret dec lods dec popa mov sti mov sbb fs hlt sti xor inc mov test movsl or les xor mov inc mov sub movsb xor in rolb ljmp mov inc lret dec inc xchg (bad) out in pop (bad) xchg out xchg xchg dec or inc jmp aam arpl hlt cli mov xchg jne ds sti rorl jp push cld ds or mov xchg xchg clc int fimull mov xor test das and flds mov pop xchg mov xchg (bad) mov push dec icebp jmp or std lret insb aaa adc or stos lods jecxz stc adc sbb xor data16 cs js mov inc mov decb adc lahf dec pusha mov orl xchg jle fsubrs mov out cltd in xor roll mov cwtl inc or jmp xchg clc push dec xchg negb mov stos mov cmp or adc fwait adc aam pop in dec cmpsb jne and adc jae loop jg rcl ja xchg jne loope test test nop mov scas sbb cmp xor and xchg stos add add add jmp sarl test loopne (bad) mov add mov leave jbe in cmpl sbb mov push mov fisubrl mov push lock into int int imul jae inc sbb insl icebp insb pop das mov sbb mov jno jle fwait jne fstl call aaa ret and aas sub add addb adc call sub mov in jno (bad) pop das push pop jno out xor pop enter push sub in add jge (bad) mov movsl cmpsl mov insl mov (bad) mov movsb pop popaw call out fmuls mov jns push jae je pop xchg sbb movsb push add mov clc adc fstpl icebp adc cmc sarl scas xchg pop aad fwait push and mov (bad) jp mov aad xchg les push jnp rcll push dec sahf idivl mov mov sti push add adc fldl insb ljmp and adcl sbb jns insl js lea icebp pop into popa jle push mov mov into push outsb jg cld xchg adc mov mov dec sbb out ja add jbe fisub mov jae sbb xchg loopne out sub lcall mov jnp dec lcall into je gs sbb inc hlt rclb arpl fidivl mov out (bad) and fsubrl dec movsb rcll ljmp test outsl jmp out ja roll lret inc and nop mov out lea outsb and pop sbb in mov in xchg out inc mov test inc push sarl xor mov leave pop leave pusha jg mov cmp loope or add and mov cltd lods mov dec cmpsb inc (bad) in or inc mov add dec scas push jg adc and cli push xor addr16 rcr mov sub sub and stos cmp inc add gs stos push cmp mov cmp jo loop das jg es push adc jb push rcrl scas add repnz out mov sbb dec sahf outsl mov inc dec xchg add sub call push push movsl inc sbb bound stos lret add pop sub outsl scas sub pusha push clc fidivrl in out out aaa movsb jb loope adc xchg mov js jle xor or adc jge or or shrb arpl sbb ret dec pop cld push dec mov xchg jno cmpsb push cmc loope call sub mov repz pusha mov ret xchg jmp int jl sbb fimul popa push shrl add orl push sub xchg jl cwtl adc xor xchg insb add (bad) ds dec dec xchg mov std pop pusha jg ljmp fldcw dec sti das sub sbb add stos add push pop cmp fstl mov mov add jl imul test dec cmc cmpsb lcall push sub cmp add mov dec pusha mov loope cmp je divl inc imul inc sbbl out or dec and xor mov aas adc add lret leave loope inc cwtl jnp add dec stc pop sti repz jne stos scas out (bad) out insl push or outsl jmp sahf pop mov push xor cltd loop cmp dec fildl add ds or mov fidivr test or aaa sub dec add or inc pop cltd int3 or add mov lahf popa ret cmc push jnp aad mov jg push push loopne xor aas mov adc rcrl shll push inc incb inc jne mov lods push sbb gs add ret pop jp in mov xlat xor int pushf jl push rcrb mov mov fidivl mov mov xor insl sbb not sti das nop and xchg or xor nop test lods cmpsb dec ret push fdivs cmp jb sbb dec sub mov sbb push fsub jbe dec dec mov xor xor add les test and imul das test sub xchg mov adc rcll (bad) pushf jp inc push mov outsb xchg push cmpsl and fisubrl sbb test leave outsb xchg loopne cmp or pop stc pop jns clc mov stc adc mov xchg ss sub ret rcr push rol cmpsl mov jmp call sbb pushf pop jae add imul les add mov push xchg lods pushf xchg (bad) sbb lds and pop sahf sti movsb adc pop sbb and xor stc fadds mov rcrb push fild test mov icebp lods xor fnstsw and mov icebp cs mov dec pop xor in jmp pop inc mov cwtl or lock xchg insl int rcrb inc dec and or dec (bad) stos jb popf rorb mov in xor divb imul rcl sub (bad) mov sub pop loopne inc lret and fnstenv dec mov mov xor cmp fldl (bad) fidivr fildll adc push mov mov repnz jno call push and rcl or pop rcrb lods (bad) fs sbb out cmpsb pop lahf test rorl mov jae jl jle pop aaa pop fsubl lahf xor inc cmpsb outsb int push cmp in mov cmp inc repz add add lods push loopne inc xor mov fldl add mov mov testb cmp enter xor sarl xchg negb enter popa mov push xor out loope (bad) sahf stos test dec mov (bad) aad hlt sub jbe sbb add jne pop xchg (bad) pop cmpw add and sub int3 shrl loop push out mov xlat or jle add inc out mov mov pop cmp mov stos arpl test and scas mov and push push adc jge fucomp cmpsb sar dec sbb cmpsl mov (bad) xor (bad) decb lock mov dec mov int3 cmp mov sbb sbb xchg aam es push cmp (bad) bound jo lret test out lods pusha ret pop jo ret add sub or and xor add fidiv pop fnsave insl imul addr16 cmp push or or xor loopne (bad) loopne cli push sahf adc inc mov add arpl imul arpl xor dec mov mov ret cltd (bad) mov jo adc and dec cltd fdivr shlb inc inc (bad) int push jl (bad) (bad) or pop pop sbb cmpsl lcall loope fnsave testl pop or mov and mov inc jae repnz es jnp xor fstpl dec sub mov outsb fs rcrl pusha lds cmp push inc je stos adc mov sbb sahf or scas and mov inc xchg dec dec in pop sub into pop fistp mov shll mov or push aam and add or cmp scas inc loopne (bad) jle dec aas push xchg push sub and mov xchg xchg sbb stc cmp scas add mov (bad) xchg push xor sti cltd into sbb push dec out dec cmpsl imul jle pop mov movsb fmuls data16 add cmpsb inc mov rcl outsl adc cli (bad) stc out or jno xor movsb rcrb scas jg mov in add loope add xor add add int mov xor mov jecxz rcll push xor nop cmc adc cld lds sub pop outsl sub aad add cmp push push push push imul in sub xchg mov loopne inc pop test aad lcall dec je pushf fstl xchg inc xchg insb push xor int bound push adc (bad) fmul movsl jg aaa jmp sbb or sub sub test in loope xchg lret inc add xor adc ret mov or mov repnz push push fs mov mov gs int mov adc mov js sub out push ljmp adc call lods arpl xchg sub cmp xchg jle ja test and mov ds lds xchg push (bad) mov inc mov adc stc in (bad) (bad) xchg add add push insb es (bad) js xchg mov pop cmp out fsubl call jl sarb stos and pop cmp repnz ret out mov lods sbbl push pop xchg add xchg sahf jle add aaa mov or ss add mov xchg pop test rcr dec aam ficoml lcall lds stc or pop mov xor cwtl jge jecxz sub arpl add add mov or imul push xor push daa repz loopne jl mov cmpsl repnz and movsb sbb dec and jns ficom inc adc jnp ja pop or movsb loopne daa cmp roll jmp mov mov fcomps mov notl add aad cmpsl adc stos dec daa adc xor cmp and add pop test in imul fldenv mov xor add pop ljmp in mov xchg outsl in das cmp cmp mov popf adc and shr dec pop inc ja shrb sbbl or je out ljmp aam sbb les xchg push dec mov mov loop mov insb or nop mov fcomp cmp incb inc inc or negl xchg mov mov adcb test cltd mov push or insl inc popa js push sub (bad) jne addr16 daa testb leave ljmp movsb into sub and dec (bad) cmpsb cmp xchg mov jp xchg popf popa mov ret cli cwtl out test xchg xchg cltd js nop pushf test add inc sub push out push rorb push pop adc lds sub sub popf adc mov mov adc push dec aas test outsb (bad) cld xchg or inc cmp fidivrl fild cld insl imul in lods dec sbb cmc cmpsb nop xchg pop cmp test test or ss mov cmp (bad) pop cld les or sarb notl push xchg nop pop daa call nop push jle xor mov je fwait or and inc xor mov adc inc mov int3 shrl out jne ja (bad) xchg insb (bad) mov xchg pusha ror dec sbb mov jp push testb aad mov push fs loope and (bad) add test mov rclb popa in push xor mov or fwait push inc dec rcrl jno lret ret sbb imul lahf cmp mov jns icebp dec jo out mov mov test dec sub mov inc jnp dec pop mov xchg xlat and lea test les (bad) cmc mov dec (bad) jmp dec mov dec cmp mov xor movsb inc stos les lock sahf mov or std xor add or fist ja das mov xchg add mov mov sahf dec and cmp jecxz xchg mov xchg mov sbbl loopne shlb sbb mov dec or cmc pop ret hlt dec idiv sbb adc btc mov adc jmp out aad mov repz xor push inc dec or in lea xor popa xchg add jle stos and add cmc xchg mov and stc cwtl push ja out jb xor mov lods int push lods jecxz stc and lods bound inc fstpl mov jge cs and adc xlat lock ljmp mov cmc inc lcall adc test lock push cmp sub xor dec adc push xor test insl sbb stc cmp insb popf sbbl stos addr16 and pusha xchg popf mov add add pushf mov sti addr16 stc adc push mov int3 mov cltd popf sahf insb test mull add mov sub sub push dec lock mov lock out push cmp pop mov daa adc dec insl and push addl pop pop pop mov fisubl daa dec dec popa sub std jns js mov adc xor lret lea add sarl int or cwtl add pop fist add add sub popf pop jno jo mov lahf add adc sti sub fstps xchg std fild lea icebp jne (bad) mov adc shlb inc xor xchg xor xchg xchg jmp jmp adc imul data16 push call mov sti dec lahf adc fdivl (bad) test mov lret cmp xlat movsbl sbb mov cmp jns and fistpl dec or push stc pop and pop test add pop xchg mov iret push cmp in les cmp je or fs fdivrl mov int3 inc mov mov les movsl pop xchg in (bad) mov adc mov mov shlb adc stos jo mov (bad) push cmp xorl loop popf sub les xchg ficoml push xor jnp adc int pop int dec ret push adc inc pop add icebp push sbb sbb cld daa inc (bad) pop mov les gs sbb subl shlb imul inc imulb daa das fisttpll mov mov pop dec mov jmp push pop scas movsl and leave mov sub iret adc pusha sub scas dec add sbb or xor push loop dec incl loopne cmp mov mov cmpsb enter mov outsl xor push pop add adc and fimul push test aaa pop xor adc sub je adc sahf aad test and jbe lods sarl std shlb cmp fsubp fidivl push jl pop rorb (bad) push shrb lea inc push xor add icebp lea scas fisttpl jb cmpsl cmp pushf clc add jo repnz int iret and add je adc xor cltd jne add add jne mov scas (bad) jb xchg orl rcrb lret push sub dec ja ret rcl adc (bad) (bad) jbe or lahf inc push dec and and dec xor nop adc (bad) pop xchg inc cltd repz jne lods fs pop fcoml paddusb lock sub mov sbb imull pushf jl jb cwtl fmuls imul enter lds test lods lods cmp sub inc xor mov insl inc scas lods test std mov jne nop inc xor sbb jge and repnz ds jmp movsb xor loop or pop fisub sbb js or pop jmp adc mov sbb insb add dec outsl pop add sub roll loope movsl push fnstsw jecxz (bad) and (bad) or cmp cmc int3 adc lods in mov or push icebp mov add call lock test and cwtl and jb inc xor ret pop aas repnz jg test lds lods stos (bad) adc pop jbe ja aaa loopne cmc test xchg xchg lea dec movsb mov adc push icebp mov jg fistp outsl mov fist aaa jl jl push xor dec cmpsb inc mov sub into jns movsl jecxz jno push xor or and rolb fmull add xchg scas and or in push popa fisttpll cmp aam cwtl or imul test lea (bad) movsl stos cmp push lahf lea sub outsl pop xor mov pop and push bound movsl xchg jnp xor outsb pop inc fidiv nop fsubrs arpl push add push jo insb lods pushf frstor mov cmp add cmp lahf cmp jle jb mov daa nop pusha add add lret sub adc loope pop adc push xor incl pop mov pop pop cmp pop push dec mov xchg popf das xchg fstpl or push bound push cmpsb mov pop (bad) push pop mov bound xchg aaa jg ljmp mov mov cmp mov stos arpl je lcall sbb push ficomp into sub std push ret arpl lock cli add add cmc repnz jmp fildl sbb test sahf dec cs (bad) cmp pop leave fstpt jnp mov in (bad) fimul mov (bad) int inc les cmp rcll pop dec roll rcll testl mov lock adc inc lret in jnp popf lods add jns negb push mov ds push lret cmc push out mov xchg movsb pop add mov aam sarb and (bad) in xor add add shl pop mov leave lea pop rorb jae imul lret rorb sbb cs mov jecxz inc sbb sti je jp imul (bad) std cmp sub pop andb sub test dec xor aas int dec push dec xor cmp ret xor inc out xor (bad) call pop push roll mov (bad) in pop and dec dec lods ljmp add mov xor inc cmp (bad) inc add push rolb sbb xor inc pop cli sbb jle cwtd leave scas cmp inc push or clc add add decb lods jo fdivl ja in sub cmp add (bad) jne shrl gs adc mov int arpl push mov aam mov sbb stos outsb add mov cli mov pop xor sub mov xor fmul fimul jge in je cwtl push mov push push outsl in mov xchg cmp mov push cmp jl sahf test or repnz and pop and mov sub sbb roll dec inc test lret out xchg (bad) int push pusha call das leave ja sub dec and sub add add pop je mov cs popf mov std addr16 mov test jbe push mov xor enter iret mov cli mov push test movsb xor in ret insl push xchg push pop dec out mov subl mov xcrypt-ecb cmpsl mov mov int pop dec lock sub mov cmp lcall cs xlat jne inc or inc pop xlat nop fldcw add rol or mov sbb mov mov xor mov sbb dec (bad) or enter xlat scas lds and inc ja mov hlt daa mov or shrl cld clc outsl imul outsb cmc inc dec inc pop sti scas fcom or mov dec adc push xchg inc and call dec or je sub pop test adc sub and cmp out sub adc push pop lahf loopne xchg jb lcall add addr16 sub jno sarb cwtl incl arpl fsincos popa xchg pusha xor lock xchg cmpsb sbb cmc arpl in shlb fcoms adc xchg sub (bad) or cmp in push add dec mov test jnp xor xchg adc push mov or dec sub repnz addr16 aas sbb sbb imul cmp cmp out add add cmp rolb sarl inc jge enter push aam xor xor mov dec mov (bad) xchg mov sbb lea xor lret jae rcr sbb and mov xchg outsb pop (bad) scas fcomps sbb pop push (bad) adc cli xor ja mov aam and jp dec aad sbb and je push lods popf fwait inc jb sbb xchg sub (bad) fidiv add add xlat mov jg cwtl cmpsl fwait cld dec aam je int3 aaa pop repnz cmp in dec or push mov push xor mov arpl test addr16 push push (bad) and push div repnz outsb gs pop mov dec cli mov call add das lods lock lods cmp lahf xor imul pop add and repz pop aas (bad) xor lods sahf jl mov mov cmp add mov lds inc push insb dec mov fiaddl sub push test roll notb jle addl pop xor mov ja pop ret daa sbb (bad) aam xchg cmp dec push and clc inc push push xor push jae ss ret adc nop xor sub dec xlat imull adc xchg mov (bad) jno aas loope pushf add dec adc call dec sub inc push or mov aam daa pushf out lods jns jnp jecxz add les nop push xchg mov stc popf fistpll jp and push (bad) sub ret ficoml mov dec aam sub sbb inc divb inc cwtl insb mov imul push in xor pop push jno dec pop dec lock inc test fwait insb inc rorl mov std add xor negl lret pusha mov jne cmpl sbb imul mov lods movsb cmp add adc push push inc xlat cmp adc jne sti mov bswap pop scas add popf out mov mov xchg ds mov lock shr popa add aam add into sahf mov push invlpg aas outsb ficomp pop incl orb dec sbb lahf or sub jg (bad) arpl call cs mov jecxz adc mov sti jnp pop in pushf push dec pushf (bad) xchg ljmp mov lcall jle out push mov dec inc gs (bad) mov loop push js popa rcrb mov pop xlat test inc xchg or cmp mov adc cld cltd stos icebp xor xlat fmull sbb fidiv scas sbb push cmc fwait insb jnp mov int stos or inc jle outsb or iret scas dec je sub jg pop mov sti add lock es fs or or cli cmp dec jnp jge add add lcall out loopne cmp cmp dec adc (bad) sub xchg push dec arpl and fistpl addr16 aam ss or adc mov aaa jge push dec mov neg out mov xor adc xchg pusha movsb mov jno rcrl test scas icebp jns xchg sub lret cmp xor rcll sub inc imul stos or cmpsb arpl sub inc lods aaa sub dec sahf add xor add sub stos ror mov push imul xchg sti inc cmc sub outsl adc ljmp orb mov imul mov (bad) add jg sarb adc cmp inc lods or daa ret ret adc mov pop daa push add inc test in hlt mov out xchg hlt add test test std mov jno (bad) mov pop cltd popf dec jb icebp pop add mov sti out fwait jno cmp adc enter scas or lret jno ja inc mov (bad) adc inc aas jle,pn cmp imull sahf xchg mov leave adc push jnp adc int3 mov xchg jmp int mov pop mov mov add cmp clc dec xchg in movl psubb in rcll scas xchg inc loopne fs cmpsl push or pop int3 xchg int3 jnp mov decb add add sti cmp push push jge out mov rcrb imul mov arpl pop xor xor leave jo inc add dec cmp pop aam jo enter mov jecxz dec add push out pop jecxz in (bad) or stc inc inc call fsubrl leave imul lret push jmp repz pop movsl psllw inc lock sbb mov dec add inc setns test lods jmp fs mov add add add adc sbb adc mov andb inc lock in test cld mov dec mov mov pushf hlt dec cli pop add mov icebp or fmul lds movsb int push mov pop or and jno inc (bad) sbb int3 mov sbb cmp mov shr incl sub cli jno mov imull mov dec incl add add pop pop mov aaa aas push repz sub stos add jp jecxz add push cwtl or inc pusha lahf adcl pop cli stos add fcmovbe sub shll push mov out inc xor enter icebp rcrl jnp jmp dec xchg xlat mov ljmp push or cwtl int3 mov mov jle shll push push (bad) adc and adc lds push ss sbb out loope fwait adc and push push adc mov dec stos pop jp cmp xchg stc imul gs dec xchg test and je jno sbb jg (bad) sbb fs test jns movsb xor fdivl shr adc xor mov mov addl sbb cmp xor in scas sbb cld (bad) repz fnstenv call subl inc or ja xlat or sub cwtl cmp (bad) imulb push dec xor (bad) stc cmpsb dec mov int insl sub cmpl and dec jnp and jbe jb sahf ret xor xlat jne inc push stos movsb sbb pop loopne pop and or lret and rcrb adc sub sarb ret aad loopne outsb mov enter xchg (bad) leave lds (bad) dec ds mul pop jbe inc add add add cmp lcall cli adc lock mov pop test out and daa dec push popa rolb fidivrl and sbb ret mov imul arpl push and sbb add xor lds xchg mov pushf mov insb ljmp imul jmp lahf pushf or cli add out dec dec sbb ficoml fiadd call add add pop rcrb js popl lds jmp aas leave fscale out mov cltd jbe cmp cmp mov inc jge or scas pop scas testb cmp dec sbb (bad) xchg mov (bad) dec and pop scas std and push mov lea in cmp dec int cmpsb mov scas and push call pop and sarl sbb (bad) pushf or das inc lret push push icebp pop arpl add xchg fs pop sbb shlb cmc push pop lds sahf in and add push push (bad) xor (bad) pop sahf cmp icebp mov jmp (bad) pop or nop (bad) jae mov xor fistpl fs xchg test mov xchg mov bound ljmp and mov pop add clc sub aam xchg xor inc or es popf xchg popa je or (bad) pop add fldenv mov cs idivl lret jle and (bad) jnp scas loop cli mov or mov insl push or xor (bad) out mov and adc mov dec hlt xor xor or fadd enter addr16 imul lcall pop cmp and pop xchg sub lock jmp push sub push mov repnz jae iret scas add or add mov call mov xchg hlt ss add or add (bad) mov test (bad) gs pcmpgtw (bad) sbb jl mov xor dec (bad) xor mov xor pop cltd lods add test sub leave add adc sbbl push xor js insb movsb pop xchg sub jbe sbb push or (bad) xor rsqrtps in scas add out aas dec xchg inc xor add mov out xchg mov (bad) pop iret das lret out lea xchg xchg pop in test dec lock lret dec xchg or xor mov insb lods xchg (bad) sbb test in (bad) lock lock sbb sbb lcall fisttpll outsb jo dec mov cmpsl xchg mov dec cli ret fwait loopne add les add sbb out adc xchg inc stc insb test xchg xchg push inc aad movsb mov mov push and xchg push sti mov xchg imull xchg fs xchg cld rorb (bad) shr lods inc sub mov subl aam mov mov cmp push gs ficompl fmulp insl aam adc and iret cwtl mov push mov jns mov pop rorl (bad) popf (bad) insl pop popf lcall in ds movsb mov add or sbb push psllw rorb daa aaa mov leave jmp aas loop pop xchg loop cmp mov imul or nop cli jp ss xchg imul jmp mov js decl aaa mov mov xor pop sub push (bad) mov push ja popa inc int lcall scas inc xchg and scas mov xchg and popa push shr mov lods inc mov inc pop pop push and outsl and xor and das push fwait call mov mov or jno bound or and jnp negb cwtl cmp (bad) fstpl lret pop test jmp (bad) jae (bad) or and adc push cmpl jbe pop push scas jmp (bad) sbb cmc push mov xor insl adc cld ljmp dec jmp cmc insl insl jecxz mov ret mov mov inc outsl sub push inc push add adc leave pop notb sbb pushf lds subl sbb pop sub pop xor test daa push mov dec out mov mov sbb push sbb ja sub addb popa cmp rolb push cld xrelease (bad) sbb mov (bad) sbb (bad) lret pop mov mov adc jge stc cmp dec xchg retw push scas xchg sub push rclb and sbb cmp cli xchg adc inc lret es loop stos cmpsl cltd ffree mov test pop push aam push cwtl cli jl jmp adc ficomp repz (bad) mov das bound lret cmp xor and mov push iret mov (bad) frstor pop push push fstpt mov mov (bad) xor hlt add das xor aaa testb cmp jp pushl lods int3 nop mov lods test bound inc mov add add inc cmpsb push cmp imul lret (bad) adc stc stc roll cli fsub adc out pop idivl xor shrb sarb fisttpll mov jae sub adc and js mov jg pushf mov sub jmp mov mov mov adc stc lret loopne lds mov inc mov pop push push bound les lret mov ds add inc or jle mov mov jb jp aas incb test mov inc mov pusha aad inc popf push jne jle leave mov push push add dec in inc (bad) cmp out fstps sbbb sub jp ret pop dec inc mov sbb xchg (bad) outsl push imul js notl and loopne pop mov les add xlat pop adc cvtdq2ps mov jge lret shrb arpl scas lcall cmp cmp loopne jle js and (bad) aad push add sub test mov std cwtl out ret xchg test idivb jb dec or in dec out aad xor push das jmp cmpsl adc repnz add lret jne cmp mov xchg cmc imul xchg (bad) aaa or add mov mov (bad) dec repnz sub pop xchg add add push sbb fsubs (bad) int3 jge adc iret loope inc shrb xchg sti pop push sbb in sbb imul jbe add mov xor subl pop inc adc pop jae fs push (bad) mov dec adc add mov mov mov mov and and sbb sarb inc mov inc mov test bound mov lcall xchg out push xlat bound or outsl push adc adc mov inc sbb jmp xor ljmp andl xor mov xor aaa fwait sbb xchg movsb inc mov fldl vpmacsdql enter pop xchg leave icebp push xchg add sbb jne mov sub jno adc mov pusha insl mov pop movsb repz cmpsb jbe enter mov mov push add or out test sub mov dec cmp mov daa fsubr push jnp mov dec xor mov ffree jno mov jge mov lods lock sbb mov mov cli arpl incl lcall sub mov mov mov aad (bad) push orl inc stos es in lods (bad) (bad) dec ljmp movl pop xor add add add push inc xchg pushf loopne mov pop cmc jl div (bad) mov inc mov insb in jge gs loopnew je arpl (bad) mov and jp fwait js lods add mov clc dec sub cmp adc lods leave push cmpsb scas and aad rorb lret cwtl inc xor pop adc ja lahf and aaa jae xor rclb push mov in scas out lret pop (bad) jbe sub popf (bad) mov add fnstsw sbb (bad) insl insb sarl mov or add sub adc cltd test lock mov dec dec pop pop call call mov imul ja or mov loope xchg xor dec ret lds and adc dec sbb icebp sub adc (bad) mov addr16 lret adc fcmovnb jnp sub in das fild jecxz or ret mov push pop scas pop movsl mov mov clc jo jg cs or pop test xor popf ds xchg jo lahf int pop sbb aas and mov (bad) movsl call lret pop mov call dec (bad) jae jge mov pop hlt xor sbb push or adc test ljmp mov lods mov addr16 mov adc add add lods pop fadd outsb xor jno (bad) hlt jb leave mov cmp adc jbe inc scas out stc aam sub jmp xor shld repz ss sub push pop movsl pop leave in pop rcr in scas sbb adc jae clc sub jg push pop mov pushf mov dec mov lods xchg outsb icebp dec jl xor mov and jnp mov loopne lret ss mov (bad) or add lahf jmp lret push dec and mov sub pop mov mov sub dec aam out push mov inc (bad) fnop push sbb or movsb stos pop sub add inc je push mov mull and lret jmp scas nop outsl and dec ljmp push les jp mov out sub fiaddl add xchg xor push cwtl or dec gs pop fcmovnb mov add xor stc and push outsl lahf inc shlb fcmove icebp sbb lea lds jo movsl inc mov mov lcall stos sbb das out cs jns lock adc insb or pop out lcall xchg and div cmp icebp enter xor repz int3 jle xchg xchg adc sbb sarl fwait inc inc loope xor (bad) fsub fisttp leave popf mov fmuls push xchg lods popf int3 das out icebp and js hlt mov sbb mov cltd in push ss fistl cmp sub or sbb add in stc fs and mov mov (bad) sbb shr and inc fadds enter mov movb xor data16 lahf loop jl out sub clc pop dec inc in pop and jno add dec jne test mov in (bad) cwtl mov lahf xor addr16 jnp mov or rorb ja js arpl aam call adc or js push lret mov dec in test ret xor pop sahf jl xor ficomp jecxz out jns jecxz pop sbb xlat in scas xor popa push ret sub mov pop rcr mov push bnd outsb jae jne mov push sti ds aaa sbb sub dec lcall in sti add lahf addl add push sti in push mov cmp jns scas cmpsl xchg jp int push mov lds stos jo clc adc aam jecxz xchg shrl mov int test push or mov xchg mov xor test pushf push out inc and push sbb xchg pop xlat loopne aaa push inc push and xchg xor and scas inc movsb sub adc add sub and rclb loopne jae lret and add add and mov cld aaa push mov decl (bad) fcoml fldl jmp leave cmpsb xorl adcl jo rclb and in ficompl xor pop fsts sub push jns ljmp (bad) (bad) pop add hlt inc rorl iret bound inc loopne daa stos push inc testl sbb call jne dec sub aam dec adc push mov stos fwait js xchg pop mov out push cmp fnstsw sti sub and push pop fistpl or (bad) mov das pop mov dec push repz aaa adc sahf jle aaa xchg xchg sti mov sbb faddp pop (bad) (bad) adc hlt cmp stos xchg test cmp sub popf jno jp fcoms push mov pop or mov pop out arpl jb cmpsb ljmp xlat (bad) aad inc ja icebp fsubrs adc mov daa or jle add cmp or push dec xlat insb ds xchg (bad) in mov add popa loop sbb cltd xor cmp rcl xchg adc lahf loop call jo stc pop sub stc ja jne pop mov add jbe movl adc lcall inc rclb es pushf inc xor out mov push xchg (bad) xor jae sahf push outsl push mov fwait and add mov das movl add add push (bad) mov cmp pop les xchg sub push fistpll repz jns test mov pop cmp roll sbb push movsb inc divb hlt push cwtl xchg call out scas into jo int jge xchg shr sbb cmp mov addr16 imul rcll sbb cmp fistpll movb cmp into fsubl jo add and jne sbb nop add cmpsl adc push je sub mov or popf lods jnp push or add xor inc push js out ds rcll mov cmpsl dec cs (bad) sbb fidivrl sahf xchg xchg ret enter pop mov mov push popa (bad) ficoml pusha add imul mov cld and adc testb and xchg mov jmp jbe fwait in sti shlb ja int3 movsl or push jb push xchg add insl rcrl bound jg pusha stos jae jne jb jae sbbl xor cmp insl add in fldenv jb push sbb pop lds out jnp xor xor ficomp ja sbb mov (bad) repnz testl (bad) jg (bad) dec mov sbb into push outsl jg les cmp sarb xchg mov dec repnz sar mov mov hlt insl hlt cli lahf out dec add xchg rorb and (bad) out and in test arpl hlt ret mov inc pop add shr sbb dec lret insb (bad) aam xchg insb das inc lret clc jo mov xchg aad fsub push lock ds jp paddsb jl aas xor mov es sub sub sub loop cltd sub shl jnp xchg insl call and nop adc sbb dec faddp arpl lret jl mov mov jb add xchg push sbb ret mov aam xchg fistp nop cmp add jnp jbe call loopne aas fs pop ds xchg (bad) ss dec aam enter push ret lret movsb and (bad) add pop jl cwtl inc sbb gs daa xor out add (bad) scas adc xchg adc rcrl jl sar push sbb lahf imul xchg inc cltd cmp mov mov sub out (bad) or adc fwait roll add add add das mov pop pop ret imul lret sub xlat jno loope inc jl popa movsb popa mov jnp sub dec and (bad) jo push aaa popf cwtl xchg cmp xorb sbb je pop cmp (bad) mov imul clc mov inc ds push movsl (bad) fnstcw lods stos pop fs (bad) cmc inc and je sbb fwait lea push lods pop repz adc subl xor add cmc fmull int3 inc iret or mov push hlt adc jg lret xor dec int3 mov popf jle push and lods mov mov jnp outsb gs hlt (bad) das stc mov lods mov fmull sti jecxz cmp std jns adc jge pop sub cmpsl sbb mov mov or sub xchg add xor enter or pusha adc std sub out gs imul xor mov lods mov mov movsb rcl ja mov push test bound out rcl sub xchg pop sarb inc out imul pushf or lock hlt sbb (bad) out cmpsb jo popl (bad) xor mov test jge adc push pop jge popf (bad) push movsl add and insb mov mov or stos and dec xchg mov dec loope fmulp in adc cltd inc cmp insl mov add add push xchg inc jae stc ret jecxz xchg xor cmp add (bad) lcall movsl test call mov or dec inc mov inc sbb inc test mov ss mov inc mov test mov cmpl or iret xlat mov sub sub push aad nop or imul fsubrl dec sub dec cmc int3 movsl cmp push or movl add leave in push jae daa and push call vandnpd dec shrb dec mov in pop dec cmp jns lcall pop call std neg (bad) pop lahf ja call inc pop jae aas inc pushf inc fsubrl mov out pop mov stc popa call popa insl daa inc inc xchg add pusha test lods test inc pop and adc dec add push cld (bad) xchg popf push dec test nop mov add jg fmull or pop call mov add adc ret adc aad mov insb xchg cmp (bad) dec cmp pop les aad ret pop push adc sbb push stos add mov mov stos pusha outsb std aam push cwtl call adc shrl and add scas fsubrp insb dec adc (bad) loopne cld lock aam sahf fldenv je mov add add ja sub cli xchg (bad) je inc inc inc lock cmp mov jnp sub fdivl push out addr16 cmp loop aad xor or loope shll inc lods stc mov mov mov pop jge nop test dec gs addr16 add arpl pop cltd add pop pop xchg or mov andl xchg int3 mov xchg add mov cmc addr16 mov sarb mov outsb sbb add sub dec ret pop rolb inc (bad) ljmp xchg jmp mov sub test inc mov mov xchg in jmp fisttp xchg cs xor or add adc scas movsb xchg loopne sbb (bad) test inc outsb jb shll and ficoml sbb add lds add insb add out daa scas xor jae dec sub repz push int3 outsb fmull mov (bad) lret add add popf mov (bad) lods sub mov ret std ret lods clc jle bound mov bound andb mov inc cld and shrl mov and mov fidivr nop push mov mov jne test lods push xchg jmp imul rolb add psraw mov sbb mov (bad) sbb clc dec sar fstpt (bad) test out add inc outsb cmpsb inc mov mov stos pusha or mov mov inc add xor ficoml push int3 mov push dec std test dec cwtl dec or pop iret pop mov fxch dec fisttp xlat repnz jb inc mov test mov out std xchg jl insb hlt mov mov xor sbb mov call xor adc add cli cltd lret and sbb add push insb and jmp mov add sub mov arpl inc inc xchg sbb xchg xlat je add sub out fcoml out dec push adc (bad) lahf or loop add loope aas fisubl scas push or repnz arpl pushf sahf push popf mov pop std cli lret jecxz js xor gs negb sub gs imul nop mov add (bad) xor mov pop mov push xor mov (bad) mov sbb add cmp adc and cli and rolb xchg mov pop cli cs mull cltd ljmp movsb cmp push int lahf jns fwait shlb aaa lds aas push sub dec pushf mov jge stos sti out push out jbe push push test icebp xchg mov mov or mov loop mov out adc pop and aas cli fcom pop mov xlat out mov shrb add mov repz cli mov xchg iret sti ret adc cmp inc lret xchg cmpsb ja (bad) cld fs (bad) cmp addr16 sbb ds frstor hlt stc pop add adc lods idivb call pop mov jg ds out clc pop sub push test das sbb int3 jmp cltd adc outsb push and mov adc jb loopne push cld ret push stos xor insl pop lret fiaddl add add (bad) les pop mov pop mov int inc dec clc incb ss popa cmpl push add int sahf loope and cwtl pop lcall adc pop sub (bad) stos mov out push out mov cltd add pop dec cltd les xchg mov lods movsb add mov cmpsl dec idivb xchg in mov push inc rsm loope stc aam in push nop mov and clc sub shll pop mov testb xchg mov fstpt pop push sbb inc outsb mov ljmp cmpsb push into xor rcl mov repz test dec xor and sub loope mov and jp inc lret mov (bad) mov push adc int pop xor or outsb pop (bad) mov add dec fistl jecxz iret int3 mov cld sub test mov jb test shll pop mov lock stc xchg data16 add or push cs fisub add lds sbb xchg xchg cld std adc mov mov rclb (bad) gs sbb sbb and jb roll mov adc or jb pop mov ds xor cmpsl jmp lcall mov out and adc dec inc test cmp cmpsb shrl jae jno scas fucom adc sti jae adc mov lret addl or add insl sub out jp fwait xor jae sbb mov mov in add pop (bad) cmp dec sbb cmp sub mov sbb (bad) popa and mov test fwait push push and xchg enter mov push loopne push and (bad) imul adc jnp loop jl mov mov negb jmp aas ljmp xlat mov psubb dec xchg or push inc gs xor jmp outsl push xchg popa dec jo stos fcomip push mov clc out sbb ret inc test test sub repz sub adc or bound enter mov sub lahf mov lcall pop lcall add std (bad) rolb push fisubrl jb jne jo fistpll inc add xorb std and jbe popa shll enter (bad) fwait movb push cwtl cld pop adc mov add in and push mov int3 stos mov loope add inc mov pop sbb push xor dec (bad) loopne pop sub pop cmp arpl arpl arpl xchg pop enter push outsb xchg xchg mov inc lcall test in test into push cmp test cmpsb xor sub sub lock xchg lods xchg orl inc pop xor jle popa lret mov xchg les pop push mov call add add push push outsl (bad) repnz sub insl pop push pop enter rorb js jns pop adc jae xor fistl push stos cld ljmp pop (bad) fdiv andl aad dec inc or mov push cmp jl pop jmp fisttp jle mov mov sahf push das or mov mov (bad) verw pop dec adc loopne and hlt jne rorb test inc imul imul sub sbb adc sbb outsl cmpsl in inc add lods ficompl les mov and js sub mov mov lea js lret xchg xor mov enter adcl push int3 lret sbb insl push in mov outsl pop mov pop jo repz stos loopne fisttpl inc cli scas ss adc and push stos rorb fdivr test jbe movsl das das dec adc (bad) jg addr16 pop fcmovnu push lock xor add add sti ljmp shl hlt aas mov in ja sub fidivr pop push iret lret in hlt push and stos dec pop or stos mov dec gs mov push out adc xor mov out lds pushf inc cmp pop pop inc cmpsb mov fstp push adcl insb repz push jl or add repz in aaa lret fsts popf pop in arpl mov outsb mov mov add add insb adc cmp cmp xor jge jp sub out icebp push cmpsl push les xchg mov or out ljmp cmp lds jg rcrl mov push sub rcrb cmp data16 mov orl push sbb rorb scas stos add fdivrl and mov or xchg test repnz or push insl mov les xor (bad) aaa mov add add add fcomps jl pop rcr cs xchg mov les out daa sahf jp cwtl ja mov dec int mov add scas and jge pusha xchg mov mov imul mov mov xchg cli or andl fadds repz popf mov jno mov push jae cld xor nop loop (bad) popa push jle add cwtl lods xchg sbb lea fisubrl jle add cmpsl ror inc (bad) xor ljmp fstl cmp sub fmull pop dec daa jecxz mov (bad) repz int3 add dec mov mov out fistp jbe lods outsb mov scas fwait and leave out stos ret cmp and aam int out lcall or add jo xchg add push mov test mov adc jnp xor push jae outsl mov data16 and mov xorb addl or out push push push jmp push sbb dec inc inc aam mov push dec push jg out push push lcall gs mov and mov icebp out adc sbb sub out je leave dec loop xor aam mov sub leave jo bound jae dec jbe jp test (bad) je and (bad) int xchg add fwait out pop test xor and data16 adc lods popf call add stc ret xchg adc mov imul int scas mov aas dec and push and inc int arpl repz mov clc (bad) and adc pandn push cmpsl inc lcall cmp xor std shrb int inc mov sti pop repz mov mov fwait and xchg fyl2x dec lock enter (bad) faddl add rorb test mov inc lock insb loope sub mov fistpl xchg das inc ds cmp sub rcrl or dec out outsb add ret and aaa and mov negl inc dec pop mov sarb sub xchg jg loopne out add cltd mov mov in cld fisttpll test add cmp or mov add add stos lret mov cs or js inc repnz iret mov or cwtl cmpsl je test ds stos xor mov or fsubl inc lret pop jl sahf repz mov jbe add mov call add cltd xchg fs imul dec mov mov or jl loopne sbb mov sub jecxz lods adc bound xchg insl loop out test and roll add int3 je xchg jns cmp jne jns aas mov cmp fwait jns sbb (bad) ret mov ss inc add xchg cmp mov enter out sub enter inc popa faddl inc cli dec mov in repz cmp leave sbb js rol and (bad) mov push ljmp dec sbb push cmc ret pop cwtl out shld dec adcl ja sbb bound (bad) pusha das push test mov cmp add and gs mov push sbb xor out or imulb lahf aas add cmc mov test repnz mov lahf cmpsb sbb test into xchg sub ss add xchg nop mov xchg inc mov je jg sarl and pop xor (bad) outsl in push inc fnsave jnp out ret xor icebp movb (bad) imul sbb das arpl shll xor add add dec fcompl pushf repnz ret inc and xchg push dec or xor dec inc in stos stos sbb mov icebp xchg rcll ss cmp aad outsl jbe ret inc or mov test mov inc push rcrb out xchg sub xlat fisttpl sbb inc loope ret sbb dec add xor lods or in ja cmp lret out cmp and mov popf stos cwtl jne adc add add xor sbb and inc ss jle add add jo out ret pop or push in fucomip mov xlat pop enter cwtl mov in cmpsb or sub and xlat mov bound or mov dec out jl mov lock mov das mov add subl ds sbb sub lods mov mov inc inc push mov xlat rcll jo stos les add add add add add subb adc dec jecxz or lahf in cli leave leave or aas scas cs inc scas ret push jge (bad) int mov (bad) jne out push push and (bad) add lret or sbb (bad) ljmp bound push mov movsl mov cli jmp cmp push enter jmp repnz cmpsl popl jne mov cmpsl xchg push adc mov jp mov movsl aaa scas clc sub cmc add (bad) add test xchg pop (bad) jb mov or mov sub fisub sub fcmove fidivrl mov adc pop fidivr js pop dec and xchg jl inc xchg int3 lret loop movsb das mov enter sti mov out push cmp pop (bad) icebp mov adc movsl push mov lea fcomip pop nop into enter cmp or js cmp icebp repz xor lds inc cli and add add add dec sub push pop iret imul xchg popf scas xchg xchg fimull mov xchg jl repnz adc movsb xor sti in or adc sub (bad) dec ja lret clc push clc rorl xor jmp sbbl push dec dec fs nop mov or mov (bad) add rcll adc xor xor sahf pop mov jg jge insl shld pop aaa push lret xor add dec pop cmpsl popf lods jl sub jmp daa ret or mov loopne dec fwait push inc js pop add shrl mov add imul iret cmpsl outsb cmp sahf jae push pop ficom int3 push ficomp (bad) push notb pop (bad) fdivrl adc xchg mov sub xor mov in dec pushf int3 xor das test jmp (bad) mov add test call shr pop adc popf and adcl add jo jnp dec adc pop enter mov xchg rorb xchg cmp stos xor dec cs sub hlt shll fisubr jb popf cld push pop (bad) cltd sbb lret test sub push test (bad) adc xorb xor xor cwtl jo hlt mov dec adc sub jecxz int sub test pop dec rcrb jl (bad) rcrb lods jl cmpsb push mov cmpsb cmp mov pop push mov add add es jle test jg mov (bad) inc stos insb sbb sub ds aad inc jle mov addr16 notl add call test xor das roll mov dec ljmp cld jge loop or sbb xchg mov test decl movsl and mov cmpsb shl and pop movl out mov cmp sti push mov cmp and lret add sub adc pop mov cmc ret xchg in push mov add roll jg sbbb clc lret pop scas push (bad) insl cmpsb pop mov fdivrl jge jle pusha mov sbb sbb stc inc orb mov mov mov (bad) call jg rcrl imul xchg or js cwtl mov aas out pop insl sbb mov in pop lock adc push and jecxz scas inc stos dec add int3 lret push fildl add add or jmp lcall mov sub cmp (bad) xchg adc xorl cltd daa int xchg add cmpsl insl xchg sbb sbb add std and lea mov addr16 mov push inc xchg mov and (bad) dec adc inc dec adc add or sbb clc shrb negb imull outsl inc out sub lods sbb sub and mov (bad) mov enter arpl test and and ds (bad) add or or clc mul mov push (bad) jle dec dec ret mov inc adc cli ljmp pop mov movsl (bad) fnstcw adc sbb mov push jo ja pop mov dec adc push decl or pop popa int3 push jmp xor xor test outsb sbb sbb adc inc xchg repnz fisubl lock add or mov mov jl popf pop adc sub mov mov or jnp ss jbe push (bad) aad pop dec xchg lods adc mov mov dec lret add mov scas movntq outsb mov push mov inc and jnp js data16 fcoml idivl lret (bad) fcoms pusha xchg pop std loopne scas and jae outsl (bad) sti lret sbb movsl jmp or je cmc dec sbb sub cmpsl js sbb lcall add shr cmpsl and cmp lds ljmp mov popa ret push into mov push dec stc lds sbb sub outsl xor repz mov jnp push loop loopne fisttp jge imul dec dec mov pushf orb ret xor leave (bad) dec fwait or jne inc rol fwait jl and call cld mov push jmp stos stos cmp add lcall push pop std jecxz psrlq loope jns loope je outsb or int cmp push lret mov ss js sbb push nop fmull push cmp daa sbb mov mov negl cmp sahf pop sbb cmp ljmp cli add jge mov or outsb loop dec call mov mov das lahf sub fnsetpm(287 push repz in inc jg jns test xchg jmp pop add add pop daa sub jbe sub xor mov mov out xchg xchg add sti mov repnz pop inc in cwtl sysexit addb jno (bad) adc xchg stc mov (bad) loopne sub lods xor sub sub jge scas mov aaa or cmpsb into mov adc sbb mov pop cmpsl pushf mov push insb je adc fcomp lret or cmp jmp push jle inc rorb mov (bad) xchg xchg add sbb fadds popf xchg inc jg xor cmp in fs adc or pop dec push cmpsl pushf mov int sbb imul jg (bad) aaa push add out aam pushf mov lahf outsb dec lcall pop cli sbb push jo vmaxsd addr16 cmp lock or jno and or outsb jne push roll xchg adc cld xchg mov push mov jge adc xchg rcll inc sub add xorb adc jecxz pusha nop in push enter and push xchg icebp cmpsb in incb ret aad xor cmc (bad) insb sub push clc xchg cmp dec les fucomip (bad) jbe jns lahf sbb bound pop dec movsl xchg cmp adc nop loopne faddp adc pusha das dec clc and test mov imul or in (bad) mov rclb lock les push shr and mov addl jge loope dec add add inc cmpsb fisubl jge lahf cmpsb (bad) js inc test pop jge adc hlt mov inc push push xchg scas mov push std fwait in jns roll mov scas pop xchg aaa sti aas cmpl lods movsl push and jmp pop inc nop cld and test pop cli jmp ss sbb mov in push mov push sbb repnz dec into out mov sbb pop in cltd mov lea mov call repnz jbe popa (bad) aas and jo and roll lds dec pop rorb das es call call ffree fwait lcall xor mov fstl pop je and daa or xchg and add mov or jne sub push xchg xor lret pop (bad) push mov out arpl lret cwtl loop test add mov adc jnp scas sahf sarb add frstor leave adc or dec adc loope (bad) cmp push incb push mov xchg ljmp mov stos or out popf loope mov jmp rcrb outsb cmc adc pushf (bad) rolb and shlb fdivrl jae push leave add mov cmp mov cmp pop sub and cld clc mov icebp pusha xor icebp mov push punpckhwd mov pop xor jb ljmp (bad) sbb xor sbb add lock inc imul les outsl imul sti push outsl adc cmp mov dec push and fidivl leave test jg sbb inc add and ret mov mov pusha (bad) aad jmp ficompl in cs movsb clc cmp inc lret stos shlb jl push int3 mov rorb pop inc movsb fs mov imul sbb sbb dec pop sub xchg pop cmc add mov pop mov in mov addr16 adc shlb scas cltd jg popa mov mov xor pop mov inc pop hlt popf xchg inc jbe push sub xchg mov push loop mov cmp inc inc out ds pop shlb pushf addr16 or lds mov xchg jae es or lods mov jmp sbb outsl imul add jbe (bad) je dec mov orb mov nop repnz inc sbb mov imul mov stos inc jmp sbbl dec jb mov dec leave jo (bad) loopne adc sub mov mov and cmp sub or push inc or lahf out hlt popa jl jne je (bad) fucom adc addr16 (bad) mov jmp pop push dec jp jmp andps jmp stc mov add add pop mov dec test mov mov mov outsl outsb xchg mov or addl mov and xor mov mov pop inc adc sub dec dec cmp pop ljmp aam xchg or fidivrl xchg test popa dec fs xchg nop dec cmp or adc add add and leave imul das sbb jecxz xor push xchg add cli sahf mov arpl sbb xchg int3 nop lahf (bad) clc or xchg sub movsb bound jmp testb rolb cs fsubr adc add or imul xor test xchg push or mov test xor out daa out jge xchg js imul push mov mov test xchg leave mov xchg mulb add xchg pusha cmp lahf hlt xchg add add and sub sub sbbl popf mov sbb iret mov ret push (bad) stos into cwtl cmp std repz inc push pop push cmp stos or inc imul jle mov aaa imul test rolb jecxz jns int3 cmp bound cmp adc insl add adc or push clc lea jo jb add cmp xchg mov adc mov jbe push dec or pusha shr pop jle inc outsb aas dec lcall testb neg adc pusha add xchg mov push jmp (bad) iret mov call xlat push jmp dec stos dec push push push std ret shll nop jmp dec cltd sbb mov cmp jb sar or xor add push and in lret adc aaa pop inc outsb cmc pop movsl mov add sti ret dec inc ja sbb sub in out das sbb sub mov loopne int jl xor mov sbb dec mov cltd or mov shlb jg (bad) and xchg movsl push jb jg jo in pop in push add jl cmp bound repnz movsl dec cmp mov push xchg xchg push push daa pop bound cmc lea pop pop js addr16 mov test inc popa leave out rcrl fwait add add stc fild dec xchg pushf ret jo or shrl insb shrl int cmp dec xlat xor ja imul pop aad or or dec call lea lahf or lahf fdivrp mov iret mov loopne mov jnp and lret jae cmp inc dec inc lea add add inc or add or data16 ret add add inc sarl mov add outsl pop unpckhps add es add jp movsl daa cmp pop dec movsl push clc dec mov insb inc mov negb sub idivb or adc mov lcall sbb mov xor push iret (bad) sbb push sti pop inc cmp (bad) pop loopne neg (bad) pop jbe dec fs pop cmpsl pop ljmp dec and jns int3 cmpsl xlat in outsb adc inc sbb inc push out mov sbb (bad) repz aam add fstp add xchg jp lock sahf cs sub or sub xor mov addr16 hlt pop mov inc stc ds sub faddl lret adc pusha das cmp leave into xchg jmp std xchg fcompl adc rol cltd xor push push mov jmp inc add inc mov jl out aad cs xor xchg test or aad in add xchg shrb cmp inc lods daa repz xor lahf cmp imul shrl or adcl jge (bad) out sbb adc cld enter and enter and clc add frstpm(287 jle shrl notb adc and vpmadcsswd call icebp fnsave and cmp cmp sbb mov popa stos xchg cli mov iret clc scas fdivl inc lea lahf mov mov add xchg cltd xchg out dec outsl xlat sbb lock mov mov testl cmp int bound sub imul mov outsl push movsb loop sbb inc cmpsb and xlat mov andl dec xchg decl pushf xchg dec clc std outsb movsl adc jmp sbb loopne push aam cli out repnz mov dec das outsb xchg nop (bad) mov inc aaa pop rolb add adc mov jg push aas jl scas frstor enter (bad) pop cmc mov adc shll mov (bad) clc (bad) je loop inc jmp xchg push or inc or insb pop jbe lods loop test fiaddl jne pop (bad) adc sub mov in aas sub inc imul imul xor mov stc push mov loopne xor pop lret scas aad fadd fwait into xor add inc sbb fildll aaa scas add out lds popa jmp dec repnz cmpsl xor aad (bad) mov lock (bad) fldcw mov adc ret sbb imul inc cld mov dec js fsubs mov fisttpll shll pop lds sbb and pusha fcomip mov cli jmp sub sbbl cmp mov loop (bad) outsl adc imul and add add repnz jle jg push mull pop shl sti (bad) test jns (bad) outsb lods jnp bound xchg pop adc (bad) fcomps test movsb push cmpsl imul jno (bad) mov rcrl fisttpl mov push pop adc mov xchg xchg or sahf push push jnp lds data16 lahf addr16 lret call xor mov aam mov push aaa pushf push (bad) jg mov sbb adc adc sbb out jbe into cmpsb (bad) clc (bad) adc and inc dec mov add bound push dec lahf shlb popf xchg lcall ja fcmovne fstl aaa das mov stos xchg inc xchg xor mov fistl bound adc loop add mov mov xchg popf mov push incl mov scas push je in mov mov daa test xlat dec sarl add add jle pop xchg sbb xchg lds ljmp mov fcoml pop jnp cwtl jb adc fbstp in ja jle,pt nop cmp xchg scas (bad) rolb fldl repnz mov fwait sbb bound sbb inc and test xchg cltd daa mov pop js push or mov int3 mov iret sti mov jle jle or cltd fdivrp xchg xchg es ss scas inc push pop inc testl add xor sub (bad) in fnstsw cli clc data16 fcoms mov dec xchg xchg inc sub shrb mov pop dec rorl icebp js pop (bad) push pop dec jge and lds test xor out xchg mov xchg cmpsl ss mov fstpl jecxz negl (bad) sub fstps inc cmpsb cmpsl cltd imul aas xor adc adc in in hlt aas (bad) fistp jg sub insb jle daa add lock pop mov outsl call cmpsl dec sub sbb jb imul xor cmp ja sub aad add xchg icebp sub (bad) hlt mov hlt pusha clc lcall out cld push push xchg sbb mov cmp jnp jbe sub lods cwtl js jmp jne int3 lahf scas dec pop ds xchg cmp mov fnsave mov and and mov add cmp jl popa ss add add scas pop pop mov sbb mov (bad) xor xlat insl cwtl mov pop xchg ljmp push sub call (bad) push mov fidivr subl in or aas iret adc cs sbb outsb and test rorb jl inc xchg pop sub push jae push push mov jns je jns leave xchg pop mov add lret push ret movsb push loopne xor incb push mov iret repnz mov jne popf pop lock xchg loope sbb stc mov subl pop pop sbb outsl loopne out dec cmc cwtl sbb arpl xchg (bad) sahf in loopne pop aaa sub jecxz stos call mov test outsl jg fwait sbb sahf bound or clc sub push mov xor and push push sub adc (bad) fiadd imul sbb loope (bad) cmpsl icebp fcomps mov push in adc mov jmp adc orb movsb gs mov int3 mov fst outsb adc mov pop adc xor add push mov pop lahf jbe mov scas ret pop out cmp out and xchg push cltd movsl sbb pusha dec jno cmp cli push imul loop fsubs ja clc sub sbb xor mov pop sbb cs mov scas and xor mov jb push mov (bad) (bad) lahf dec cmpb add fldt mov push push (bad) jecxz sbb pop loopne xlat push xchg and sub sub sbb data16 jae adc and pop into mov mov mov into negl mov bound pop pop cmpsl mov sahf pusha in mov cmp inc lcall fimull cwtl es pop fistl add clc jno mov nop mov std adc lods aaa pop fnsave xor add push data16 cmp fidivr jecxz xor mov inc sub (bad) xlat cs icebp xor pop aaa fild lods xchg test out (bad) mov das push insb or sbb jg dec xor xor xchg lret sahf lea push jg scas test outsl mov scas xor sbb fisubr sarl sub pop and cmp sub adc lret cmpsb mov dec cmp add add std aas mov or aam rcr and xchg (bad) ljmp outsb aaa push push int3 ss mov stos dec fucomi test pop loop or out mov lret add pop sbb xor sarl js xchg pop mov (bad) xor mov and sub pop sbb pop mov dec dec test (bad) push test jp adc mov (bad) out mov insl cmc dec aas or out adc xchg pop add aas call imul add hlt fwait add cmpsb fwait inc pushf mov mov mov cmp mov mov test mov stos mov rorl (bad) pushf dec dec add push jecxz out cmp daa push mov dec (bad) xchg mov insb pop aaa test xchg mov loop mulb jmp test dec mov jnp mov sub push cmp mov pop mov jecxz call adc je lods xor or add push ret in cltd loopne in sub fdiv enter (bad) ljmp negb or scas addr16 imul cwtl imul jle or (bad) out cwtl mov jmp cmp hlt inc jecxz add lret inc bound jp out ret mov ds push xor das xor mov (bad) cmp mov xchg pop rclb (bad) cmp pop mov into add xchg aas lret or cs push mov mov sub add imulb add out jp pop mov mov es mov rol scas sbb cltd pop jo push aaa fstpt adc mov or stos jmp pop clc imull sub and and mov jae lds es xchg xor inc xor sbb outsl and mul sub enter push sahf mov dec repnz xchg and idivl push stc (bad) pop js and push and xor adc int3 fsts (bad) rorb (bad) aad ret jg les or fisub das jp in sub (bad) cmp (bad) hlt scas repz mov xchg adc addr16 push daa ss and mov mov inc fsub mov shlb jae adc fisubr xor push movsb or imul cmp xor add add xchg inc stc ljmp std mov (bad) cli rolb rcrl cmpsb adc push push (bad) xchg bound (bad) push es les test jle jae add cltd dec dec xor leave cli cld fwait pop popf add pushf cmpsl mov (bad) inc inc dec xchg leave pop ficom mov add push ret xchg xchg mov push lods sub ret push iret ret dec sub and loope push sub pop out test sub flds add add or repnz push lcall xchg out stos push dec icebp negl repz jo push flds xchg fildl ficomp jl push add imul xor push stos push out int popa dec sub imul sbb add (bad) xor jge cwtl cs sub mov mov jbe movsb scas add ror xor xchg inc mov mov in inc scas shrl cmp test lea (bad) adc shl jbe xlat loopne mov lcall cmp mov add shlb add sbb jnp (bad) xchg jne daa fldl push addr16 data16 jo and mov push mov aaa sbb inc mov arpl jo dec mov pop sub push push cltd xchg lds sbb cmp aas or sub jb pop push dec xchg add xchg mov (bad) mov mov dec mov push adc sbb sahf jne cli xor mov pusha (bad) in fstps mov push imul outsl pop inc es dec push adc inc sbb xlat xchg jnp cli shll sarb push jns loop in sarl sbbb movsb dec sarb jmp into and or mov js push (bad) xor mov fidivl (bad) push cmpsb fstp sub mov add add inc (bad) bound or test pop movsb cmpsb adc mov cmpsl xor push bound ret mov out rclb scas scas mov and divl inc jns jae jb ds arpl inc daa xchg adc (bad) mov cmp hlt rorb bound stos cmp xchg mov (bad) fs push fidivr fisubrl adc sub test adc (bad) shll lcall pop mov push add adc scas jmp mov add je arpl in daa fcmovu repz pop aas dec mov fidivr out dec lods fucom jp mov push fxch jb (bad) sti xor mov (bad) adc mov int3 sbb test movsl insl repz outsl and daa ret sub lock and mov (bad) aas xor and inc sub negl mov leave andnps cmpsl hlt sarl jb mov add add push rclb aad jno into pop push push mov scas insl mov mov into add aam scas mov (bad) js iret sbb or jl jle addl add movsb scas rolb mov xor out push inc xchg out pop and and cmp fsubl mov push lock and or out (bad) popf xchg push imul mov leave jg pop mov out xchg or mov in out daa das sub aam test test or inc fbld cmp and pop xor push add bound rcll popf aam xlat mov xlat inc fs cs lods jns cmp push outsb aaa jb leave sahf inc mov inc mov mov pop ss fldl2t jb and stc jmp push xchg insl dec xor xchg and mov add adc pop lock shr adc lods popa rcll and mov xchg rcll incl or out ds adc popfw xchg push push or jp add ja dec ficom jl push loopne or mov mov inc jecxz mov mov adc aam adc (bad) jne jl scas lods mov inc leave push mov xor imul xor push stc rorb sub push scas daa push mov jno mov rcrl sti lods data16 sub fidiv push bnd outsb cmc mov jne pop in iret sub cmp mov xchg ret aas jl mov (bad) xchg xchg inc sub or push aad shrl inc (bad) and jmp mov nop sub fsubrs repnz fs mov int3 jge out and clc lods cmp clc xchg mov pop out jae hlt push cltd pop xor add add rcll incb iret push jae jl cmp jb pop sub inc pop call leave pop testb mov icebp or sub stos test movb dec pop pop mov cwtl addr16 aam pop adc cmpsb outsl mov adc xchg cmp bound (bad) (bad) repz xchg mov fildl pop outsl mov sbb mov sbb xchg cmp mov scas ficomp data16 add add add int3 pop lret fcomps mov lcall sub cmpl dec daa jb mov sti lds jbe insl rol mulb scas gs rol les adc call popf xchg test add cmp in xchg push test (bad) repnz (bad) or aad out pop dec dec mov jns inc (bad) pop mov scas aad push imul push imul sbb daa add add arpl cmp cld les or pop mov repnz cmp stc aam cmp xchg mov adc mov xchg loopne mov faddl or push xchg inc jns mov jno jp push leave jmp icebp pop or jecxz mov mov (bad) adc stos cmp cwtl add jp adc inc test int3 ss jecxz stos push cmc pop inc lods mov mov xor mov add ja enter (bad) xor mov push jnp (bad) lock mov jne inc mov clc jb inc (bad) mov ja adc mov loop test cltd cmp aam andnps ljmp jmp jo mov jne fisubr test pop (bad) into add push xchg aaa repnz sub lahf adc dec imul xor xchg xor loopne jno add cs jmp (bad) pop stos or es addl add mov ds mov mov xchg sub in in xchg scas arpl lcall mov popf jb cmp ficoml cmc cmp fistpll jbe cmp mov ljmp inc inc movsb das rcll cs repz cmp xor and aad call hlt jle scas insl jbe stc xchg xchg es std popf (bad) xor dec (bad) (bad) mov movsl movsl add and cs jb sub neg xchg insl incl push xchg lods dec cmpsl clc push jl jnp sub outsl data16 incb push add and clc (bad) idiv lods xor dec cmp sbb ljmp sbb cwtd inc and jp dec mov jnp jmp rcl adc xchg jecxz jns,pn fistpll fwait int3 aam sahf clc or mov add arpl es jecxz (bad) stos xor out xchg sub aaa sarb and loop outsb cmpsb insl xor ja add add or das add sbb inc sbb notb xorl jmp cwtl jo out inc addr16 scas mov jecxz push outsl ret ss inc movsl or sub add loope mov ret xchg adc clc ror lock xorl lahf ret xchg imul jg imul or lret int3 aam int jge jo ljmp jecxz notb mov scas int and imul insl imul icebp push icebp repz push jmp movsl out cmpsb mov mov push sub push stos das sub insl mov jmp je mov and test dec xor and loop xchg dec nop insl outsb sbb add das std insb xor loop jno xchg div xchg lods stos or cld sbb scas call scas jae sahf xlat fcoms outsb stos jp xchg rclb lock mov add add jae pushf bound xchg mov mov sahf sub cmp lods dec mov enter xchg or fidivl popl jecxz inc fld gs movsb popf and pop sahf jnp les imul add sbb movsl test loop mov in lret lahf or cmp imul int xchg fmuls lret push arpl jg iret inc push mov jns ret cmp xor push adc (bad) aam loopne push jp inc or mov aas sub shrl leave inc xchg xor rorb fwait das or std sarb pop dec dec or hlt pop push mov dec fwait (bad) out xor dec popa scas jg nop xchg add or mov insb mov je mov xchg adc insl mov dec outsb adc iret es or push rcrb cmp dec test add cmp push mov sub mov dec out pushw adc inc icebp mov loop lods das or dec cmpl in dec (bad) jne cmp sub mov insb loop mov rcr cwtl xchg jae xor xchg mov das negl pop in or xabort fs push xchg xor mov pop lock lahf or pop mov inc int3 jp test xchg push xchg leave or nop ret int3 leave aam cli out add adc popf notb mov dec adc cld (bad) xchg push fs or lods ret add fdivs (bad) movsb stc sub inc sub pop das fdivrl jb lahf adc sbb jo push xlat icebp xor xchg sarl clc outsl jle repz mov jne mov aad stos inc mov in out cwtl push aas ret jo cmp lcall std dec leave fsts or lret sub bound negl jecxz sahf inc adc add out cmpsl lock xor insb xchg hlt add push popa repz jne ja jle (bad) aam lcall shrl add jne pop pushf fsubrl adc push leave das or call repnz pop jle xchg les scas aad sub push rcll cwtl cmp sbb imul xor jae insl test sbb cmp mov (bad) faddl fstps popa lea ret adc add add lods outsl imul sbb xor loopne daa add cld cmp jb xor inc mov repz icebp mov cltd (bad) ret inc jbe sbb bound or push or mov fldenv inc imul in dec insl xor fcmove stos xor cmp pop push (bad) jbe dec push sbb pop add jmp jne cld jg mov pop int3 add bound stc adc and adc xlat add mov xor pop xorps adc int3 dec jge lods outsl inc cmc adc and sahf dec cmp pusha jg stos push mov pop (bad) out jg frstor add je push dec xlat jmp push movsb push push or fidiv xchg jmp and sbb inc pop outsl pop pusha push mov test mov stos (bad) incb imulb xchg ljmp sub and add neg jbe mov pop xchg andl adc and or push shrb out inc or inc jae cmp mov rcl sar and xor pop adcb outsb test scas lcall sbb dec ljmp add jne mov and add jmp xchg inc mov out fstl loope push push lods arpl add add in mov pop jo (bad) sbb aam nop sub es test and cltd fcmovu pushf scas leave (bad) cmp or jmp cmp pop (bad) pop mov push out decl sub jno cmp or mov add xlat dec add ficomp jmp inc rcrl repz lret leave push mov xchg lret sbb fnsave or push sub int3 cli call in sub ja jbe cli iret or jecxz mov push aam adc mov (bad) push (bad) lock pusha cmp mov mov cli cmp repnz icebp mov adc mov inc movsb shrb popa loop lret pop dec arpl dec mov pop cmp mov xor add mov movl mov test jnp out flds add stos mov iret jb outsb stos outsl leave pop adc xor aam xchg push add pusha es inc neg sub cwtl aam mov popf xor push mov pop jne sub mov add mov pop xor fxam mov negl sub popa pop fsubs ret cs push rclb popa mov in pushf into mov inc add lds in in lods xchg mov popa push add add mov mov mov inc scas lea xchg nop out fsubrl sbb mov push (bad) das and push lcall jle add movsl stos xor xor rcrb mov push fisttpll jbe pusha dec mov pushl jecxz fcompl push pop aam adc outsb repnz inc xchg mull test mov adc hlt xor jae out dec inc sub add std out (bad) xor fldt lea icebp scas jae dec and jb jmp addb xchg mov ret shrb loopne cmp mov repz (bad) stc daa xchg cltd mov mov mov sarb add push (bad) lds nop push outsl repz shll xor loope in and fildl jecxz push insl add popf jns jg and push cmp stos das and adc sbb xchg in in (bad) mov fdivs add dec imul add push mov inc jae push pop xchg cmp sub loopne jmp cmpsb inc and mov mov mov lret std jo push call sbb repz fcompl push pop ret sbb push leave out lods aad sub pop pop add xchg add sbb adc (bad) rcl imulb inc outsl imul in xor inc aad mov pop addl sub shr int mov scas push push out das mov idivb fs pop adc outsl jo mov subl pop test or mov mov xor std xchg adc xchg cmpsb mov (bad) pop dec outsl mov jae mov sbb (bad) repnz out and mov add add les in test enter leave (bad) ret and jae (bad) repz and add add add add sub xchg add ret sub push shl dec cli ja push pop ljmp aaa (bad) (bad) je jno or mov or arpl xor push cli sahf mov jnp dec enter fsts dec pop movsb cwtl sbb pop xchg (bad) jo leave iret out push inc (bad) sbb sbb test into jae std out adcb ss js push js jb roll scas test or add adc add pop xchg cmc xchg (bad) pop push dec add shr jmp push in je,pn cmp lods cmp sbb jno lock inc mov sub xchg outsb inc push dec pop es adc add in nop and xlat movsb dec ficom idivl or cmp mov cmp mov sbb fs add js dec or pop adc repz push mov or sti in in je mov sahf lcall add add xchg (bad) fwait fwait in adc mov fldenv loop aad (bad) loop cmp (bad) xchg inc sub lds push xlat and pop popa dec nop fstpt adc maskmovq (bad) dec int les cmpsl loopne (bad) pop (bad) push mov gs push dec pusha rolb or ret icebp psubb fisubr dec push xor cmp jns mov loope rcr xchg and fstl les out cmpsl popa ret xchg leave nop push add imul xchg or cmp mov adc out sub jl mov repz cwtl sbb in cld fwait dec repnz sub xor xchg js dec push jp loopne clc jnp fistp xor sti mov add jmp sbb andl pop mov test aam rcr jl jb loop idivb xor or xchg xchg inc or xor add add ds test cmpsb repz mov pop mov call (bad) push (bad) or ja xlat pusha sub idiv dec loopne mov outsb inc mov fdivr jecxz xchg push out mov lods int std sahf stos mov add jmp lcall out les sbb lods pop or daa push jns mov jno sbb or inc in adc push pop (bad) aad dec adc or je pop pop xchg mov ljmp fstpl out cmp xor dec push movsb shrl ljmp lds stos stos jle cmpsl or neg push cld pop mov add and out (bad) pop rcr test (bad) mov test daa pop pop dec push adc mov out imul push dec fsts xlat mov rclb add fstps jnp push or pop (bad) push jnp jno cld addl add inc repz pop adc ficoml xor mov mov imul loop das push xchg add subb leave (bad) in mov jl xchg push xor pop add add jecxz jle in fidivl fbstp xchg lret inc push sub sub addr16 cli (bad) xchg jmp push ljmp pop or mov test sahf jp dec ljmp adc (bad) dec test adc sub rcl fs test sbb fildl jl inc fstl test in lods xchg cmp push cli push dec push mov inc mov into push xor out push out pop mov es sbb mov adc mov iret orl andl sbb out fldl xchg pop (bad) push and push xor mov jmp imull sti pusha sbb (bad) adc pop xor inc in push lock add das les fisubl add add pop int mov adc inc add pop xchg mov pushf add mov adc cwtl mov and adc lret outsl sub test mov in ds arpl call (bad) mov jle imul xlat (bad) mov scas cmpsb loop push inc and repz push ds jp fwait notb add (bad) lret gs sub inc sub add fwait jno add add into mov sti mov mov movl lcall adc jo mov mov jg jg xchg std pop mov aad inc cwtl loopne (bad) cmp lret lock mov add jnp ret rol rcr rolb mov inc fistl mov pop lock push push rol sahf and add dec (bad) add jmp shll inc or icebp (bad) xchg inc pop mov inc shll lcall add xor ret lcall push sub pop stos sbb ss lahf xchg push lret pop popf xchg pop inc jecxz add cmp or cmp outsl inc scas xor (bad) fsts imul in pushf pop push push inc mov outsb xlat ss add insb jl repz and jno adc ljmp int ret es dec ret loopne jne mov mov stc outsb sub xor ljmp push and jns mov xor mov mov pop adc sbb lret (bad) (bad) or sbb inc mov xchg incb jecxz jns xchg xor fs xchg rolb ja jb fimull mov push shll gs dec mov and inc mov cmp call sub repz out bnd lea xchg aas ret mulb jne,pt and xchg mov mov in out cld fidivl (bad) mov add add sub xchg xor and mov jb pop mov addr16 inc lcall jne inc jnp (bad) adc xor add lock push mov cmp adc pop (bad) mov mov in movsb mov xor push (bad) out stc adc xor sti jb outsl jo pop pop insl mov jne and test sbb in out dec aad sub push pusha fild and fisttp loopne pop push pop add add sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 add pop in lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs roll add jo fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml add sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov add ret lret paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret and fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fildl add aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec pop popa push mov mov mov loope out cmc cld add adc push and xor push pop popa push mov mov mov (bad) in repz add or cs push pop arpl ja add mov mov ret (bad) fucom ljmp sbb es dec push pop bound jbe test int3 rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov add fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 add in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add add add adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec add pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock sti add and sub xor push push pop pusha imul add pushf mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf add rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add mov aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb and sub dec dec push pop pop arpl jae jge mov test mov mov rcr fsubp call add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl add loopne jmp idiv add or push sbb es ss add push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add add sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz in repz std add or adc sbb cmp pop pop arpl jae jle mov test mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc add xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 add in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or adc sbb cmp dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop popa data16 add imul addl mov rol rcl fsub out repnz add or sub inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in lock sti add and sub cmp dec push push pop popa add jb jge mov test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl lods mov xlat dec outsl jbe test mov rol rcl fsub call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop popa data16 jno jl xchg mov lods mov mov fcomp add jmp add unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl add mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp push pop pop imul (bad) xchg lcall mov add aad loopne jmp cmc sti add or push sbb sub ss inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul nop xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add es ss inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub add push pop pop bound jae jge mov test mov mov (bad) in out hlt stc add add and inc inc dec push push pop popa imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in lock sti add and sub cmp dec push push pop popa data16 add add jl xchg lods mov mov xlat fucom out repnz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop add push jne addb add add stos mov mov (bad) fndisi(8087 out icebp idiv add or sbb sub cmp dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test add fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add add fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub inc dec push push pop bound jb jge xchg xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb add add (bad) mov test mov mov xlat fucom out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lea lods mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov xchg cwtl popf mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods add lret rcl add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov add int xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or daa add xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno add mov test mov mov fcomp jecxz in repz incb or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or add and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and add aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret add iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push add add bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp lldt sbb sub cmp dec push push pop pusha imul add add jnp test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jge xchg add mov lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop add insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pusha gs jne addb add mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add ret enter fucom call add or daa sub inc dec push push pop bound jb jl xchg cmpsl add enter fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad add fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock add add cld add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add add pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop add add aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub cmp add add pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov movsb test (bad) aad loopne ljmp adc sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl add jp xchg mov mov (bad) in repz add push adc and cs inc dec push pop pop bound jb jge mov test mov mov xlat fucom in hlt sti add adc pop and dec push pop pop insw je orl (bad) int3 aam loop out idiv add adc and sub dec push pop gs jae orl (bad) int fndisi(8087 call or sbb sub ss dec add add add push js mov stos scas mov mov (bad) fneni(8087 out lock add or adc xor push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pusha imul add add fwait mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne addb movsl stos mov mov aad loopne ljmp lldt sbb sub cmp dec push push pop pusha imul addl add mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall add add aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop add je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret add add fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in add repz std add or sub xor cmp pop pop arpl jae jge mov test add aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out hlt stc incb add adc pop and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc pop and sub xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub add dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec add imul mov mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jge add popf mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov add stos mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol add lret rcl fndisi(8087 out lock add pop or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp add jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub xor ds dec add pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps add add add pop and aas inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs add cmp inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push add push pop bound jb jl xchg lods mov mov xlat fsub out in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound add jb jge mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and cmp dec push push pop pusha imul addb mov stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov add cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl pushf mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rol rcl fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov push sbb xor inc dec sbb sub cmp push pop pop outsb je jle mov loop lock add and das ss pusha outsb je orl mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cwtl lahf cmpsb lods mov ret xlat fsubp in cmc cld add adc and xor inc dec push pop popa push mov mov (bad) int3 rcr loopne idiv push or xor inc dec dec push add insb je (bad) mov mov vpmullw in repz add adc and das ss dec push pop fs je orl mov (bad) into (bad) fucom jmp cli add adc and cs pop fs je test mov loope pop outsb jbe test mov ret leave into aam fsubp jmp add push adc push and xor ds dec dec push pop add push je jg mov stos scas mov mov fcmovu in out cmc cli incl cmp pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov roll add add add (bad) fsub out icebp idiv add or pop sbb es aaa cmp inc dec push pop pop imul mov mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha data16 jl xchg lods mov mov xlat fsub out icebp add idiv add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop add cmp pop pop arpl jae jg mov stos mov mov aad loopne jmp cmc sti add add add sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub add cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl outsl je jg mov lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add add sub dec dec push pop pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb es ss inc dec push push pop popa data16 add jno jl xchg lods mov mov rcr loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jl xchg add mov lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add lldt xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test add into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov add iret aad (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop bound imul mov mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in add out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl push or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock add push or push sbb sub cmp dec push push pop pusha gs jb jge mov cmpsl lods mov mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push add add cs ds dec dec add pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock sti add and sub xor push push pop pusha imul addb cmpsl lods mov mov fcomp jecxz in repz std add or adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov scas mov rol rcl fneni(8087 in lock cli add and inc inc dec push push add imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov call add push adc push and xor ds dec dec push pop pop arpl push jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb add movsl stos mov mov aad loopne ljmp adc xor cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add pop or pop sbb cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jle mov add test mov mov fcomp jecxz out repz add or daa sub dec dec push pop pop arpl jae jge mov test mov add (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push add insl jb jge xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) add jmp add add adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov xlat fucom out repnz add add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop add imul mov mov mov (bad) in out hlt stc incl unpcklps add add and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out cmc add add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es add add cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add enter fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push add pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc push and xor ds add push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc add add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg add test mov mov fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub add push pop pop imul (bad) xchg cltd lahf movsb add add (bad) leave iret aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fild in lock cli add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz add out repz incb or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 in lock sti add or push sbb sub add inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fneni(8087 in lock sti add add or adc xor cmp dec push push pop popa imul addl mov rol rcl fsub out add stc incb push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or sub add sub dec dec push pop pop arpl jae jge mov movsb stos scas mov rol rcl fsub out icebp idiv add or sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp in out hlt cli incl and sub dec dec push pop pop gs jbe (bad) mov stos scas mov rol rcl fneni(8087 out lock add or push sbb es aaa cmp inc dec push push add push orl test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc add add and inc inc dec push push pop popa data16 jno jl add addl mov ret rcr fucom call add or sub xor ds dec dec push pop pop arpl je rcr fucom call add push adc push and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add add sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub inc dec add pop arpl jae jge mov test mov mov fcomp jecxz in repz std add push adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or add daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out in repz std add or sub xor cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp add inc inc dec push push pop bound jb jl xchg test mov mov fcomp loop in repnz add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub add cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub add in repnz std add or sub inc dec push push pop bound add jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl (bad) xchg test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg add lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es xor cmp pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jae jle mov add ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov ret enter fsubp jmp add push adc push and xor cmp pop pop arpl jae add mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fadds fucom call add or and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov rcr fsubp call add add clc std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es aaa cmp inc dec push push pop add insl jb jge mov test mov mov xlat fucom out repnz add add add pop sbb daa sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or add add sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add enter fucom call add or daa sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out add clc std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 add add jl xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub inc dec dec push pop pop imul mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp or adc xor push push pop pusha imul addb add add rol rcl fneni(8087 in lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add (bad) int3 rcl fsub out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jle mov test mov mov fadds add fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into roll fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt add cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg add cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or add sbb add sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into roll fcmovu in out cmc cli incl pop and add add xor dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha gs add addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc add pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov xlat fsub out icebp idiv add or push sbb add sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound add jb jge mov cmpsl lods mov mov xlat fucom call add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul add add movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb mov mov aad loopne jmp cmc cli add sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov add add fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop add imul mov mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into rcr fsubp jmp add add adc das xor dec push pop pop fs je addb movsl stos mov mov aad (bad) ljmp add out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es ss inc dec push push add push (bad) xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor add add inc dec dec push pop pop arpl jae jle mov add (bad) leave into aam fsubp jmp add unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sub inc dec dec push add pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out add clc incb or adc push and xor ds dec dec push pop pop arpl add jae jle mov test mov mov fcomp jecxz in repz std add or sub xor cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop bound jb jge mov mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor add inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov lods mov ret leave rcl fsub jmp or sbb daa cs arpl jns mov mov ret enter fsubp call add or sub dec dec push pop pop arpl add test movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl add add adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec dec push pop pop gs jne addb movsl stos mov mov aad (bad) jmp cmc cli add and inc inc dec dec push pop pusha gs jne addb rcr fucom call add or sub xor ds dec dec push pop add hlt sti add adc and inc inc dec push push pop pusha imul addb mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb add and sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out add sti add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock add or push sbb es ss inc dec push push add imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov add add mov aam fsubp jmp add unpckhps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos mov mov add lret rcl fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test add lret rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop popa insb jno jl xchg lods mov mov (bad) jecxz out add add stc incb unpcklps pop and das xor push push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov stos scas mov mov fnop in lock add or push sbb add add dec dec push pop pop arpl jae jle mov stos scas mov mov fcmovu in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incl unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub xor ds add add push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp pop pop arpl jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jb jl xchg mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa data16 add jl xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul nop xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jae jle mov add add mov aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg test mov mov (bad) jecxz out hlt add incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor push push pop pusha imul addb cmpsb lods mov mov add int xlat fucom call add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov fcmovu in out add cli add and inc inc dec push push pop add insl jb jge mov test mov mov (bad) in out cmc cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) jecxz out hlt stc incl unpckhps pop and inc inc dec push push pop popa data16 jno jl mov test mov mov fcmovu in out cmc cli incl and sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock sti add or push sbb daa sub cmp inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor aas inc dec push push pop pusha imul addl mov add fnop in lock sti add or push sbb es aaa cmp inc dec add push pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pusha gs jbe add addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop fs je addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp ds dec dec push pop pop imul nop xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov add (bad) aad loopne jmp cmc sti add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov fcmovu in out cmc cli incl and inc inc dec push push pop popa insb jb jge xchg test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb add ret rcr fsubp call add push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add add or pop sbb cmp pop pop arpl jae jle mov stos scas mov mov fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) jecxz out hlt stc incb add adc add xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push add imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jae jle mov test (bad) lret fcmovu in lock cli add and sub cmp dec push push pop popa insb jb js orl test (bad) lret fcmovu in lock cli add and sub cmp dec push push pop popa insb jb jl (bad) mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa imul addl mov rcr fsubp call add push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall add scas mov rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop arpl jae jle mov test (bad) aad add out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop popa imul addl mov ret rolb xlat fucom call add push adc push and cs aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb sub cmp dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out repz incb add add unpcklps pop and das xor aas add push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add and add sub ss inc dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall mov xlat fsub out repnz add or sub dec dec add push pop pop arpl je jg mov stos mov mov aad loopne jmp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jae jle mov test (bad) lret fcmovu in lock cli add and sub ss inc dec push push pop popa insb jb jge mov test mov mov (bad) in out hlt stc incl unpckhps pop and inc inc dec push push pop popa imul add add popf mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fucom call add or and das xor push push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and cs aas inc dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov add fsubp jmp add and inc inc dec push push pop popa data16 jno add mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb sub dec dec push pop pop arpl jae jle mov test (bad) aad loopne ljmp adc sbb sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addb cmpsb lods mov mov xlat faddl jecxz out repz incb or adc push and sub xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl je jle mov stos scas mov mov fnop in lock add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push add add push rcl fsub out repz incb or adc push and das xor aas inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test rol rcl fneni(8087 in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) in out add add stc incb push adc pop and das xor dec push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or add cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps add sub cmp dec push push pop popa insb jb jl xchg lods mov mov fcomp loop in repnz std add push adc push and xor ds dec dec push pop pop fs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc inc dec push push pop bound jae jge mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha add add add jne add popf mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov rol rcl fnop in lock sti add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul add stos scas mov mov fneni(8087 in lock add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fildl loope in repnz add or sub dec dec push pop pop arpl jae jle mov test add add aam (bad) ljmp adc xor push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and sub cmp inc inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc pop and das xor dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add add pop or pop sbb daa sub aaa cmp dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and add cs aas inc dec dec push pop pop fs jne addb mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out icebp testl adc push and xor ds dec dec push pop pop arpl add jns test movsb test (bad) aad (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha gs jne addb add xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop out repz incb or adc push and xor ds dec dec push add gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov add rcr fsubp call add push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam add in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov ret rcl fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop addr16 dec addr16 jle mov mov ret lret (bad) in hlt sti add adc pop es push push pop fs js test mov (bad) lret rcr (bad) in repz add movhps push es push pop imul xchg mov ror (bad) fucom jmp stc add movhps cmp push pop pop outsb jne orl mov ret fsub add out cmc cld add adc and xor inc inc dec push pop bound ja test mov fsubp in hlt sti add adc and xor aas inc ja xchg cwtl fnsetpm(287 jmp clc incl or insb jb orl lret loopne in icebp idiv add or sub dec dec push pop pop arpl jae jle mov stos scas mov rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push add popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add push adc push and xor ds add push pop add imul addl mov rol rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop popa imul add add addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov add mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jge mov test mov mov (bad) out idiv add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov fucom in repz std add push adc push and xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov add add fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or add sub ss inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov xlat fucom out add repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or add sbb cmp pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop add jbe add popf mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das add add aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push add add arpl jae jle mov test mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp loop in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop pusha imul add addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 in lock sti add or add sbb sub xor ds dec dec push pop pop imul popl add mov mov aad loopne jmp idiv add or push sbb sub ss inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addl mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop fs jo jnp add mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam add add (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repz std add add or sub xor ds dec dec push pop pop arpl je jle mov test lds lret rcl fildl loop in repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or add and sub dec dec push pop pop arpl jae jle mov test (bad) lret fnop in lock sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add and sub add add inc inc dec push pop pop bound jae jge mov test mov mov (bad) jecxz out repz incb unpcklps pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop fs add add add add jp test movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop imul mov cmpsl lods mov mov fcomp jecxz out hlt stc incl unpcklps pop and inc inc dec push push pop popa insb jb jge xchg add add mov mov (bad) in out cmc cli add and sub cmp dec push push pop popa insb jb jge mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa insb jb jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp inc dec push push pop bound jae jle mov stos mov mov add rcl fucom call add unpcklps and inc inc dec push push pop bound jb jle mov lods mov mov fcomp in out hlt stc add add sbb cmp inc dec dec push pop pop gs jbe addl mov (bad) fsub out repnz add unpckhps pop and inc inc dec push push pop popa imul addl mov ret rcr fsubp jmp add add push adc pop and das xor aas inc dec dec push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repz std add push adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb add add cmp pop pop arpl outsl je jg test cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push add add popa insb jno jl xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop fs jne jg mov stos mov mov rcl fucom add out hlt stc incb unpcklps pop and das xor push push pop popa data16 jno add jl xchg lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb lods mov mov xlat fsub out repnz std add or sub xor ds dec dec push pop pop imul nop xchg fwait mov add add (bad) lret rcl fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov rol rcl fneni(8087 out icebp idiv add or push sbb daa sub add ds dec add pop pop gs jne addb cmpsb lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol add rcl fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov stos scas mov mov fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fnop in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) in out cmc cli incl and inc inc dec push push pop popa data16 jno jl xchg test rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) lret fnop in lock sti add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc add sub ss inc dec push push pop popa insb jb jge xchg test mov mov (bad) jecxz out hlt stc incb unpcklps pop and xor push push pop popa imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add push or add sbb cmp dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs add add jp test movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push add imul jbe addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop imul add add stos scas mov mov fnop in lock cli add and inc inc dec push push pop popa imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl add rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov add fneni(8087 in icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp jecxz in repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz add add add adc sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add or push sbb sub ss inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov fcomp jecxz in repz incb or adc add push and xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub ss inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop add jbe add pushf mov mov xlat fucom call add or sub add add inc dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop popa add jno jnp xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov (bad) add loop in repnz add or daa sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addb add test cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg add add int3 rcl fsub out repnz std add or and add dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov add lret fneni(8087 in lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb js orl movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or add adc sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov (bad) fsub add in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and add xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push add bound jb jl xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and sub xor dec push push pop popa imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul jne addb cmpsb stos mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor dec push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge orl add mov rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl mov mov xlat fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl pop and inc inc dec push push pop pusha imul addl mov rol rcl add loop in add stc incb unpcklps pop and das xor aas inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) add add loopne jmp idiv add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb add add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb lods mov mov xlat fsub out repnz std add or sub xor cmp inc dec add pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pusha imul addb cmpsl lods mov mov fcomp jecxz out repz incb or adc pop and add add das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add and sub cmp dec push add add popa insb jno jl xchg test mov fneni(8087 in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out cmc cli add and inc inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out hlt stc incl unpckhps pop and inc inc dec push push pop pusha imul add jnp xchg lods mov mov fcomp loop in repz std add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz std add or sub xor ds dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or adc sbb and inc inc dec push push pop popa insb jno jl xchg add mov mov fcomp jecxz out repz incb unpcklps pop and das xor inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or daa sub dec dec push pop pop imul (bad) xchg lcall rol add add aad loopne jmp idiv add or push sbb es ss inc dec push push pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa add jb add mov stos scas mov rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov stos scas mov mov fnop in lock add idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) lret fcmovu in lock sti add and sub ss inc dec push push pop bound jb jge xchg test mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa imul addl mov rcr fsubp jmp add unpcklps pop add and das xor push push pop pusha imul addl mov ret into aam fiadd in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov fcmovu in out cmc cli add and sub cmp dec push push pop popa insb jb jge xchg test mov mov (bad) in out hlt cli incl and inc inc add add push pop popa data16 jno jl mov inc dec push pop pusha insl xchg mov enter in repz add movhps and dec push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add (bad) mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov movsl stos mov mov aad loopne ljmp adc xor cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg add add mov ret rcr fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret add fnop in lock cli add and inc inc dec push push pop pusha imul addl mov add mov (bad) fsub out add idiv add or sub dec dec push pop pop bound jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad add loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub aaa cmp push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor add push pop pop fs je jg mov stos scas mov rol rcl fnop in lock add sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc add add push and cs ds dec dec push pop pop imul mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and add add add add xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpckhps pop and imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jge mov test mov mov (bad) in out add cli incl and inc inc dec push push pop pusha imul add xchg cmpsb lods mov mov xlat fsub out repnz add or and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov add popf mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and inc inc add pop popa insb jno jl xchg cmpsl lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop add jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop popa imul addl mov ret rcl faddl loop in repnz add or pop sbb aaa cmp inc dec push push pop bound jb jge xchg mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add add unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp testl adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl pop and inc add push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and das xor aas inc dec dec add pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound add add add jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov stos scas mov rol rcl fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg add enter fsubp call add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov fcomp jecxz in repz std add push adc push and insb jb jge mov test mov mov (bad) in out idiv add sub cmp dec push pop imul xchg mov ror xlat (bad) in hlt sti add adc and das ss dec push pop fs jae (bad) mov scas mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl add jae jg mov add (bad) aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or add pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in out cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov rolb add lret fcmovu in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp adc xor dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub cmp dec push push pop add insb jb jl xchg lods mov mov xlat add fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add std add or sub dec dec push pop pop bound jb jge xchg mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add add add xor push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov (bad) faddl loop in repnz std add or sub add add aaa cmp pop pop bound jae jge mov test mov mov fcomp loop in repnz add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec add pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add and cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc add je jle test movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jge mov add ret enter fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov add fcomp jecxz in repz std add push adc push and cs ds dec dec push pop pop imul mov mov mov add add leave iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp loop add call incb or adc push and xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb add add or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss add push pop pop bound jb jle mov test mov mov (bad) jecxz out repz incb or adc push add sub xor ds dec dec push pop pop add outsl jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repz std add or sub add dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop add add imul (bad) xchg lcall mov fnop in lock sti add and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repz std add or sub dec dec push pop pop arpl jae jle add orl test mov mov (bad) jecxz add hlt cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add add daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov add mov aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fnop in lock sti add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repz std add or sub inc dec dec push pop pop fs jne jg mov stos scas mov add add fnop in out cmc cli add and inc inc dec push push pop add insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fiaddl add in out hlt cli incl unpcklps pop and das xor dec push pop pop imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov fcmovu in out cmc add add incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in in icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out cmc cli incl pop and add dec push push add imul addl mov rol rcl fsub out icebp idiv add or daa sub dec dec push pop add imul mov scas mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul add add xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub cmp pop pop arpl jb jge mov movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor inc inc dec push push pop pusha gs jne addb add lcall mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov add mov aad loopne ljmp adc xor push push pop pusha imul addl mov rol rcl fsub add in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add pop and inc inc dec push push pop pusha gs jne jg mov stos mov mov add add fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop fs addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add add or push sbb sub cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop add je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loope jmp idiv add or push sbb add and sub ss inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov movsb stos scas mov mov fcmovu in out cmc cli incl and add dec push push pop pusha gs jne addb movsl stos mov mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop add add imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or sub dec dec push pop pop arpl jae js orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul xchg lret adc push and xor inc inc dec push pop bound js xchg mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli add and add sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add add sub dec dec push pop pop arpl jae jle mov movsl stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul lahf movsb stos mov mov fcomp loop out repz incb unpckhps and sub cmp dec push push pop add add outsb jae jg mov stos mov mov (bad) in lock add adc and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov mov add add scas mov mov (bad) jecxz out repz incb or add das xor dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp adc das xor dec push pop pop gs jne jg mov stos add lret fcmovu in out cmc cli add and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov (bad) add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop add insl jae jge mov test mov mov leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) add add out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb add aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods add into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl add pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or add add add sub dec dec push pop pop arpl jae add mov test (bad) leave iret aam (bad) jmp add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub xor add push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov add (bad) ljmp unpcklps pop and aas inc dec dec push pop add add jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp adc sub ss inc dec push push pop popa data16 jno jl xchg lods add int fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add add mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov add (bad) aad (bad) ljmp adc xor push push pop pusha gs jne jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add pop or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fadds fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc pop and das xor aas inc dec dec push pop pop imul mov mov mov aad (bad) ljmp add incl pop and inc inc dec add pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add sbb aaa cmp push pop bound jae jge mov movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec add dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop add outsl jne jg mov stos mov mov aad (bad) add lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add mov mov rol rcl fsub out repnz add or pop sbb daa sub add cmp pop pop bound jb jge mov test mov mov xlat fucom call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or daa sub inc dec push push pop bound jb jge xchg add add mov ret rcl fucom jmp idiv add or push sbb sub cmp inc dec push pop pop arpl jae jle mov stos mov mov (bad) in out hlt cli add and sub aaa aas inc dec push push pop bound je jg mov lods mov mov fcmovu in lock add or pop sbb ss inc dec push pop pop arpl je jg mov stos add int3 rcl faddl add add out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add add add add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl je jp test movsl stos scas mov mov fcmovu in out cmc cli add push or adc xor push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add add sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor add aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov aad loopne ljmp adc xor dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor add push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add sbb sub cmp dec push push pop popa data16 add add jbe addl mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push add insb jb jl xchg lods mov mov xlat faddl loop in repnz std add or sub dec dec push pop pop bound jb jge mov add popf mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov mov fcomp loop in repnz std add or daa add xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov add add (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add cmc cli add and aas inc dec dec push pop pusha gs jne jnp xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add add add add add push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec dec push pop pop arpl jae jge mov test mov mov aam fsubp jmp add unpcklps pop add and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs add add add push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt cli incl lldt xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb sub xor push push add imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) add loop in repnz add or pop sbb daa sub aaa cmp push pop add outsb jae jle mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp dec dec push pop pop bound jb jge xchg add xchg cwtl popf mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add sub dec dec push pop pop bound jae jge mov test add add leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul ja (bad) xchg test mov mov xlat fucom out repnz incb or adc sbb cmp pop pop arpl jae jge mov test mov mov fadds add add jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add add or daa sub aaa cmp inc dec push push pop bound jb jl xchg mov mov rcr fucom call add or daa sub add push pop pop arpl jae jge mov test mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or add sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add sbb daa sub add xor cmp inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push add popa insb jno jl xchg lods mov mov (bad) add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop add insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul add addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne addb mov mov (bad) fndisi(8087 out lock add or push sbb add sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl xchg pushf mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov add rcl fneni(8087 in in icebp idiv add or push sbb es ss inc dec push push pop popa imul ja (bad) xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or sub dec dec push pop pop bound jae jge mov test mov mov int fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es add cmp push pop bound jb jl xchg lods mov add fcomp add loop in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov cs push pop fs add add (bad) mov iret jecxz icebp stc incl push adc xor inc inc dec push pop imul mov mov mov xlat fucom out repnz incb or adc push and xor ds dec dec push pop pop arpl jae add mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp testb add sti add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov movsb test (bad) leave into aam fsubp jmp add unpcklps add pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp pop pop bound jb jge mov into rcr fsubp jmp add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out icebp idiv add or add sbb cmp inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb es aaa cmp inc add pop pop arpl jae add jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop popa imul addl mov rcr fucom call add push adc push and cs aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jge mov add add ret leave into aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop imul mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha gs jne addb add rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov add (bad) lret rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov rcr add fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp incl unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt add cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp add push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or add add sbb sub cmp inc inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz add or sub dec dec push push pop bound jae jge mov test mov mov fcomp jecxz in repz std add or sub xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop add imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul add stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp add add push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha data16 add imul addb movsl add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat add jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add push adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd add lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and sub xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov add mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz idiv add or daa sub inc dec push push pop bound jb jge mov mov mov (bad) jecxz out hlt stc incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test les lret fnop in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad loopne jmp cmc sti add add add adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop jmp add push adc push and add xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incb or adc push and cs ds dec dec push pop pop add push jne jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and sub cmp dec push push pop popa imul addl add mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov aam (bad) ljmp unpcklps pop and das xor dec push pop pop gs jne jg mov add (bad) int fcomp loop in repnz std add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs jne addb cmpsb stos mov mov add add fndisi(8087 out in repnz aaa ds dec dec push pop pop imul (bad) xchg lcall rol rcr loopne out idiv add sub cmp dec push pop arpl jp add scas mov ret lret rcr loope out idiv add sub cmp push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub ss inc dec push push pop popa insb jno jl xchg add mov mov xlat fsub out repnz add or pop sbb aaa cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fild in lock sti add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or add sbb cmp pop pop bound jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rolb add aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl imul (bad) xchg cltd lahf movsl stos scas mov mov fcmovu in add cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or add add sbb cmp pop pop arpl jae jge add movsb test (bad) leave into aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa add inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov add loopne jmp cmc sti add and sub cmp add add push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add add sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pusha add push jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb add inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop add push je jg test movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg add ret rcl fsub out repnz add or daa sub inc dec push push pop bound jb add mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos add lret rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov add (bad) int3 rcl fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) fildl add out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli add add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb and sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc add and xor ds dec dec add fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub cmp add cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl add test movsl stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb add rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push add bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop gs jne add add test movsl stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov xchg lcall rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov repnz add or sub inc dec dec push pop pop fs jne addb movsl stos mov mov add add (bad) fsub out repnz add or sub xor ds dec dec push pop pop add jne addb cmpsb lods mov mov xlat fsub out repz std add push adc push and cs ds dec dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp testl add add add or sbb cmp pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul (bad) xchg lcall rol add xlat fsub out repnz add or add sub dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov stos scas mov mov fnop in lock sti add or push sbb es aaa cmp inc dec add push push pop bound jae jle mov test (bad) leave iret aam (bad) ljmp or push sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test (bad) lret fcmovu in lock sti add or push sbb sub add cmp pop pop arpl jae jle mov stos scas mov mov fnop in lock add or push sbb es aaa cmp inc dec push push pop bound jb add add orl test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jno jl xchg test mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out hlt stc incl unpcklps pop and das xor push push pop pusha add jno jl xchg add add mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov mov fcomp in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov add rcl fsub out repnz std add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol int3 rcl fsub out repnz add or sub xor ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fsub out icebp add idiv add or adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl je jg mov stos scas mov rol rcl fneni(8087 out lock add or push sbb add daa sub aaa cmp inc dec push push pop bound jae jle mov test (bad) leave iret aam jecxz mov ljmp push es push push pop gs je orl mov ret lret loop lock in cli add adc and cs jae (bad) mov mov rol aam loope out cmc sti add unpckhps inc dec push pop pusha outsl ja xchg mov ror xlat fsubp in cmc std add adc sub cmp dec push pop gs jae (bad) mov mov fsub ljmp sbb cmp dec push pop popa push mov mov fsubp out idiv add sub cmp dec push pop fs jae (bad) mov mov rol (bad) fucom in hlt sti add adc push es push pop pusha push lea mov fsubp in hlt cld add adc and cs add cmp popa push mov mov loop icebp stc add adc pop daa das ss dec push pop imul mov mov loope lock incl push adc cmp push pop pop data16 jne test mov fucom jmp stc add movhps inc dec push pop pop outsb jne orl mov (bad) int fsub jmp stc add adc pop es pop bound js orl add cwtl lahf scas mov ret aad loop out cmc cld add adc and xor ds dec push pop popa push nop cwtl lahf cmpsl scas mov (bad) int3 rcr jecxz repnz add movhps es iret xlat (bad) out cmc std add adc and xor inc dec dec push pop insw jne test add fcomp out idiv add sub cmp push push pop data16 jne test mov loop out cmc cld add unpckhps sub cmp push pop pop outsb jne test scas mov (bad) int3 rcr loop lock add movhps and dec push pop popa imul popf movsb lods mov ret fsub out idiv add sub cmp inc dec push pop pusha push lea mov loopne out idiv add sub aaa aas inc dec push pop imul jl mov mov fsubp in hlt sti add adc and cs pop popa imul sahf movsl lods mov (bad) lret add add (bad) jmp or xor inc inc dec push pop gs je (bad) mov mov (bad) int3 rcr loop icebp stc incl or adc cmp push pop pop data16 jbe test mov fsubp in hlt cld add adc and das ss dec push pop imul mov mov ret lret loopne lock push or xor pop popa push mov mov fsub jmp cli add adc add pop daa cs pop popa imul pushf movsb stos mov ror (bad) fsubp in hlt cld add adc and xor inc inc dec push pop fs jae orl add aad in repz add adc and das aaa aas inc dec push pop arpl jp mov mov (bad) int3 rcr loop icebp clc add movhps inc dec push pop popa push mov mov loopne out cmc cld add adc and das aaa ds dec push pop add add outsl jbe xchg mov rol aad jecxz lock add sub cmp inc dec push pop bound jns mov mov (bad) int3 rcr loop icebp stc add adc push es push pop popa push lea ret fcomp out cmc cld add adc and xor aas inc dec push pop gs je orl mov vpaddq in repz add adc pop daa das ss bound js xchg mov add leave rcr (bad) out cmc cld add adc and sub cmp push pop pop insw ja test mov ror xlat (bad) out idiv add adc and xor aas inc dec push pop arpl jp mov mov ret fabs call or xor inc dec push pop pusha push mov mov xlat fsubp in hlt sti add adc and das ss dec push pop arpl jns mov mov ret fsub out idiv add or sbb sub cmp push push pop gs je orl mov fsub jmp cli add adc and das ss dec push pop data16 jbe test mov fucom in hlt sti add adc and xor ds dec push pop bound js xchg mov ror (bad) fucom in repz add adc pop daa cs dec push pop arpl jns add scas mov (bad) lret rcr loope icebp clc incl push adc cmp push pop pop outsb jbe test mov fsub jmp cli add adc and das ss bound jns xchg mov ret lret loope out idiv add and dec push pop pusha outsl jbe test mov (bad) int3 rcr loop lock add sub cmp push pop pop insw jne orl mov vpaddq jecxz repnz add push adc aaa ds dec push pop pusha push mov add add (bad) fsubp in cmc std add sub push pop bound js xchg mov jecxz repnz add adc and cs pop arpl jns xchg mov ret fabs call or sbb sub xor push pop popa push lea mov in hlt sti add adc and xor inc inc dec push pop insw jne test mov rol rcr loopne out idiv push or xor inc dec push pop pusha insl je add stos mov ror fcomp in hlt cld add adc and xor inc dec push push pop data16 jbe test mov (bad) out cmc cld pop unpckhps sub xor push pop outsb jne test scas mov fsubp in hlt cld add adc pop daa cs pop popa imul fwait mov leave rcr (bad) out idiv add sub cmp push pop add pusha outsb jbe xchg mov ror fcomp out cmc std add sub cmp add pusha push mov mov fsubp in hlt cld add adc and xor inc dec dec push pop insw jne test mov ror fsub out idiv push push push sbb dec dec push pop bound jbe orl mov (bad) into (bad) fucom add idiv push or xor inc dec push push pop outsl ja xchg mov add in repz add adc and xor inc dec push pop pop imul test mov ret lret loop icebp stc add adc sbb inc dec push pop bound jns mov mov (bad) int3 aam jecxz icebp stc add adc and das aaa cmp popa push mov ret lret fucom ljmp and xor inc dec pusha push mov mov add clc add movhps es add inc dec push pop arpl jp mov mov (bad) into (bad) fucom in hlt cld add adc and xor inc dec push pop arpl js test lods mov ret fchs out idiv add adc and das aaa ds dec push pop bound ja add scas mov (bad) int fsub jmp cli add adc push es push pop popa imul xchg sahf movsl lods mov ret lret rcr loop icebp clc add movhps sub aaa aas inc dec push pop outsl ja xchg add (bad) fchs call movhps daa cs inc push pop pop gs jne addb movsl stos mov mov (bad) in out hlt stc incl or xor inc dec push pop gs test mov out cmc cld add push adc sbb and das xor aas inc dec push pop pop arpl jae jge mov mov jecxz cmc std add adc cmp inc dec dec push pop pop arpl jne add addb test (bad) leave iret aam (bad) out idiv pop movhps daa cs dec push pop add js mov mov (bad) lret rcr loop icebp clc add adc pop daa das ss dec push pop imul mov mov (bad) call or pop push and inc dec push pop arpl js xchg mov (bad) lret rcr loope out idiv push or xor push pop pop imul add xchg xchg popf mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov movsl stos scas mov mov fnop in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae add mov test add leave iret aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov add add aad (bad) ljmp or adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub add in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz out repz std add or sub inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad loopne ljmp add add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fsub out icebp idiv add or push add daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or add and sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jb jge mov mov scas mov mov (bad) jecxz out repz incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor add ds dec dec push pop pop arpl push je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push add pop popa imul addl mov rol rcl add loope in icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec push push pop pusha gs add add addb movsl stos mov mov aad loope in repz incl unpcklps and sub cmp inc dec dec push pop popa insl jae jg mov lods mov mov fcmovu repz incb push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec add pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incl unpckhps pop and cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov add add rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad loopne add add jmp cmc sti add and aas inc dec dec push pop pop gs jo jnp test movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz std add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov add aam (bad) jmp add add add unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps add add add sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz incb or adc sbb cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add add inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc sbb cmp pop pop add je jle mov test ret enter fucom call add or daa sub inc dec add pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop add add add je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov add ret leave into rcr fsubp jmp add or sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg scas mov mov fsub out repz add or pop sbb sub dec push push pop imul nop pushf movsb test (bad) aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov add aad loopne jmp cmc sti add sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call incb push adc push and cs ds dec dec push pop pop imul mov scas mov mov add add (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop add imul addb movsl stos mov mov aad loopne jmp add lock sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor add inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add add or pop sbb daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jge mov test scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and add aas inc dec dec push pop pop fs jne jg mov test (bad) leave into aam fsubp jmp incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp add push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and cmp inc dec push push pop add popa imul addl mov rol rcl fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov rol rcl fnop in lock cli add pop and aas inc dec dec push pop pop gs jne jp test movsb stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov xchg lcall mov fcmovu in lock cli add and inc inc dec push add popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos add lret rcl fndisi(8087 out lock add or push sbb es ss inc dec push push pop popa imul addl mov roll int xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jb jge xchg mov mov add enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz call add or and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz add hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop add imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc add add push and cs ds dec dec push pop pop arpl je jle mov test (bad) leave into aam (bad) jmp add push adc push and cs cmp dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor add push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl add (bad) int3 rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl add mov mov dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp add add call add push adc push and xor ds dec dec push pop pop arpl outsl je jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc add push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos mov add fsub out icebp idiv add or add add sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa repnz push push sbb sub ss inc dec push pop arpl js xchg mov mov jecxz icebp clc add movhps inc inc dec push push pop popa insb jno jl xchg test mov mov (bad) in out hlt cli incl unpckhps add sub add cmp add push pop bound jb jge mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add and inc inc dec push push pop add imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov test mov mov (bad) in add cmc cli add and sub cmp dec push push pop popa data16 jno js (bad) mov movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and inc inc dec push push pop popa imul add add mov lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp dec dec push pop pop bound jb jge mov add mov mov fcomp jecxz out repz incb or adc push and xor add dec push pop pusha imul addl mov ret into rcr fsubp jmp add and sub ss inc dec push push pop bound jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb sub cmp dec push push pop popa insb jno jge xchg test mov mov add add leave into rcr fsubp jmp add unpcklps pop and inc inc dec push push pop pusha imul addb cmpsl lods mov mov xlat fucom call add push adc push and xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl je jle mov cmpsb stos mov mov xlat fsub out add repnz add or sub cs aas inc dec dec push add imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz std add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out icebp idiv add or add add adc sbb cmp inc dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add pop or pop sbb daa sub aaa cmp pop pop arpl jae jle mov (bad) xchg lcall mov xlat fsub out repnz add or sub add xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock sti add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor push push pop add add imul addl mov ret rcl fucom call add or sub xor aas inc dec dec push pop pusha add jno jl xchg lods mov mov fcomp jecxz add hlt stc incl unpcklps sbb sub cmp dec push push pop bound jb jge mov test mov mov (bad) in out cmc cli incl and inc inc dec push push pop popa insb jb jge add (bad) xchg test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov rcr fucom call add push adc push and das xor aas inc dec add pop pusha imul jl xchg lods mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop popa imul addl mov rcr fsubp call add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov add aad loopne jmp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) ljmp unpckhps add sub cmp dec push push pop popa data16 jno jl xchg test mov mov aam (bad) add ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl add add adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb sub dec dec push pop pop bound add test movsb test (bad) leave iret aam (bad) ljmp or push sbb add sub cmp pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb push adc push and add das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc add pop pop bound jae jns test movsl stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub cmp pop pop fs add outsl jbe addb test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fsub out repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcmovu in out cmc cli incl and sub cmp dec push push pop popa data16 jno jl xchg cwtl popf mov mov aad fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov add add rcl fnop in lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jns orl test (bad) leave iret aam (bad) jmp add or push sbb add aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add rcl fucom out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop popa imul addl mov rol rcl fsub out add idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test ret add iret aam (bad) ljmp unpckhps pop and inc inc dec add pop popa insb jno add mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp or adc pop and das xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps sbb add add add xor cmp dec push push pop popa imul addl mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub add dec dec push pop pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha add jl xchg lods mov mov fcomp loop in add stc incb push adc add and aas inc dec push push pop add push jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in lock cli add and inc inc dec push push pop pusha imul addb add add mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov add (bad) in out hlt stc incb unpcklps pop and das xor aas add push push pop pusha imul ja (bad) xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov add sahf mov mov (bad) in out hlt stc incl unpcklps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp push pop bound jb jge mov test mov mov enter fucom call add add adc push and cs ds dec dec push pop pop fs je jg mov cmpsb stos mov mov rcl fsub out repnz add or pop sbb daa sub inc dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad add add loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop add push je jg mov stos mov mov aad loopne out icebp idiv add or adc sbb cmp pop pop arpl jae jge mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addl mov rol rcl fsub out repnz add or add add sbb daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test rol rcl fneni(8087 out lock add or push sbb sub add cmp inc dec push push pop add outsb jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or pop sbb daa sub aaa cmp add bound jae jge mov test (bad) leave into aam (bad) jmp add and sub ss inc dec push push pop bound jb jge mov mov mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fneni(8087 out icebp idiv add or pop sbb daa sub cmp pop pop arpl jae add orl test (bad) lret fcmovu in lock cli add and sub cmp dec push push pop bound jb jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and aas inc dec push push pop pusha imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop add jo jnp xchg add mov xlat fucom out out repz incb push adc sbb and inc inc dec push push pop pusha imul addl mov rcr fsubp call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb lods mov mov xlat fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb lods mov mov add (bad) int3 rcl fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos mov mov aad loopne jmp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov aad loopne jmp cmc sti add or push sbb sub ss inc add pop pop bound jae jns test movsb stos scas mov rol rcl fneni(8087 add add jmp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam loopne in icebp idiv add or pop sbb cmp pop pop arpl jae jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add or add add sbb es ss inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incl unpcklps pop add sub cmp dec push push pop popa insb jb jl xchg add leave into aam fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpckhps and add cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock sti add or push sbb es aaa cmp inc dec push push pop add add insl jb jge orl test (bad) lret fcmovu in out cmc cli add sbb es add cmp pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl add (bad) xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov fcomp jecxz out cmc sti add push adc pop and xor cmp dec push push pop push jp mov mov (bad) fsub ljmp and add cmp push pop popa push lea ret fsub in add std add sub xor add push pop data16 orb mov loope icebp stc add adc and xor inc dec push pop gs jbe xchg mov vpaddq in idiv pop movhps daa das aaa ds dec push pop data16 jbe xchg mov jecxz repz add sbb cs dec push pop bound jp mov mov fsubp lock pop movhps daa sub dec dec push pop pop gs je test mov ror aad add add jmp sti add adc and xor aas inc dec push pop fs je orl scas mov mov (bad) jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop imul mov stos mov mov xlat fsub call or add das xor add dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out repnz add adc and xor aas inc dec push pop data16 jbe xchg mov ror aad jecxz repz add adc pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov in cmc std add sub cmp push push pop gs jae orl (bad) into aad jecxz lock push or xor ds dec push pop data16 jae jle mov test (bad) leave into push push pop bound je addb scas add mov in testl sub push pop fs je addl xchg pushf movsb stos mov ror fcomp out idiv push or xor inc add pop popa push jp add mov ror xlat fsubp out cmc std add adc and aad push daa push jb (bad) and xor inc dec push pop popa push ror (bad) jmp adc pop and das xor aas inc dec dec push pop pop imul xchg sahf cmpsl scas mov (bad) fnclex jmp add add hlt stc incb addr16 adc sbb sub cmp push mov repnz add and insb jne test mov fsub arpl jle mov lods mov mov fneni(8087 in lock sti add daa cs push pop popa imul lahf cmpsl scas mov (bad) fabs call or popa jno (bad) lea xchg lahf cmpsl scas mov (bad) into (bad) fucom in cmc cld add adc and add xor inc dec push add data16 jno jl add mov ror fabs sub cmp push pop popa imul lahf cmpsb lods mov (bad) int3 aam jecxz repnz add adc pop and inc inc dec push pop pusha push (bad) xchg lcall int3 rcl fsub call push push push daa xor inc dec push push pop add jbe xchg test (bad) leave into aam (bad) jmp add unpcklps and xor inc inc dec push pop add add add (bad) mov mov ret fcomp out hlt sti add adc push and cs ds dec dec push pop popa imul test mov (bad) rcr in idiv push or xor cmp pop pop bound jb jl mov mov loope ljmp push pop arpl jp mov mov aad (bad) ljmp adc and cmp outsl jbe xchg stos mov mov (bad) lret rcl fneni(8087 out lock add push push push and dec push pop popa imul lahf cmpsb scas mov (bad) int3 rcr loop repnz add adc pop daa cs arpl jp add mov mov in hlt cld add adc and xor inc dec dec push pop insw jne test lods mov mov xlat fsub jmp idiv add or push sbb sub cmp push pop bound jae jle mov test mov add mov fcomp in hlt cld add adc push and cs ds dec dec push pop pop imul xchg pushf mov mov add jmp sti add push adc push and xor inc dec push push pop popa data16 jno jl xchg lods mov mov xlat (bad) out idiv push push adc pop and das xor aas inc dec dec push pop pop gs jne addb lods mov mov in lock sti add and add add dec push push pop outsl ja test movsb stos scas add (bad) fsubp in cmc std add unpckhps pop es push pop bound jns mov mov mov xlat (bad) out cmc std add sub dec push pop pusha push mov stos mov mov loop out cmc cld add adc and sub aaa cmp dec push pop bound js xchg mov rol xlat fsubp in hlt stc incl push adc and das add add ds dec push add data16 jbe test lods mov ret lret fsub jmp sti add push adc push and xor inc dec push push pop gs jae orl mov ret enter in repz add adc pop and dec push pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor dec add pusha imul addl mov rol roll add add add add fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repz std add push adc push and xor ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb add sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp add cli incl and inc inc dec push push pop popa imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl je jg mov stos add lret rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge test movsb stos scas mov mov fnop in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and cs add add inc dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add add sub dec dec push pop pop arpl jae jle mov test (bad) aad loopne ljmp adc sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop add add add je jg mov stos scas mov mov fiaddl loope in icebp idiv add or pop sbb cmp pop pop arpl jae jge mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl push je jg add mov stos mov mov aad loopne jmp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub inc dec dec push pop pop imul (bad) xchg lcall add lret fnop in lock sti add or push sbb sub ss inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop gs jne jg mov stos mov mov rcl fsub out repnz add or sub dec dec push pop pop arpl je jle mov test (bad) lret aad (bad) ljmp adc xor cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and cs aas inc dec dec push pop pop fs jne addb mov mov xlat fucom out repnz std add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add sti add or push sbb es ss inc dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop add sub cmp dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb and sub aaa cmp pop pop bound jb jge mov test mov mov (bad) in out hlt add add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb es ss add push push pop bound jb jl orl test mov mov (bad) in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push add bound add jb jge mov test mov mov fcomp jecxz out repz incb unpcklps pop and xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fiaddl loope in icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov mov scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov rcr fsubp jmp add unpcklps pop and das xor push push pop pusha imul addl add rcr fucom call add unpcklps pop and das xor push push pop pusha imul addl mov aam (bad) ljmp adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov xlat fucom out repnz add or sub add push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu add add ljmp adc xor push push pop pusha imul addl mov ret rcl fucom out repnz std add or and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl add unpcklps pop and das xor push push pop pusha imul addb add ret rcr fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul jl xchg lods mov mov xlat fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz std add unpcklps pop and aas inc dec add pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov add fsub out repnz add or sub dec dec push pop pop imul add je jg mov stos scas mov rol rcl fnop in lock sti add and sub ss inc dec push push pop bound jb jge xchg test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor dec push pop add insb jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop gs jne addb add add mov rol rcl fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) aad loopne ljmp adc sbb sub add cmp inc dec push pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor push push pop popa imul addl mov add enter fucom call add push adc push and xor ds dec dec push pop pop fs fucom call add lldt xor cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp adc xor add inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub add in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb cmp pop add add push jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor add dec push push pop popa data16 jno add add mov lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop bound jae jle mov test mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov add sahf mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop fs jne jg mov cmpsl lods mov mov xlat fucom call add push adc push and xor ds dec dec push pop pop fs je jg mov stos mov mov add (bad) lret rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) lret fnop in lock sti add and daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fnop in lock sti add or push sbb sub ss inc dec push push pop bound jb jge mov test mov mov (bad) in add out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom call incl unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom call add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or add add sbb daa sub aaa cmp inc dec push push pop bound jae jge add movsb stos scas mov mov fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor add add inc dec dec push pop add imul addl mov rol rcl fsub out repnz std add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in ljmp adc xor cmp dec push push pop add add insb jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb cmp pop pop arpl jae jle mov stos scas mov add (bad) lret rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jge add add movsb test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs ds add push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pusha data16 jb jge mov test add mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov rol rcl fucom out repnz std add or and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) aad add fcmovu in lock sti add or push sbb es ss inc dec push push pop popa insb jb jl xchg test scas mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub inc dec push pop pop bound jae jge test movsb stos scas mov mov fnop in lock sti add and sub ss inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add add adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl faddl jecxz out repz incb or adc push and das xor aas inc add push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock sti add or push sbb sub ss inc dec push push pop popa add js orl test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jge mov add mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov ret int fcomp jecxz out hlt stc incl unpcklps pop and das xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test add mov fcmovu in out cmc cli add and sub cmp dec push push pop popa insb jno jl xchg test mov mov (bad) in out hlt stc incl adc xor push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 add add jmp idiv add or pop sbb daa add xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add or push sbb sub ss inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock add or push sbb sub ss inc dec push push pop popa insl jb jge mov test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb mov mov xlat fucom call add or sub add sub dec dec push pop pop arpl je jle mov stos scas mov rol rcl fneni(8087 in lock add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop add imul addb cmpsl lods mov mov xlat fucom call add or sub xor ds dec dec add imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcmovu in jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop gs jne add jp test cmpsb stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) ljmp adc xor push push pop popa imul addl add cmp push push pop insw je sbbl ror aad loop out cmc sti add unpckhps cmp inc dec dec push pop pop gs jne addb movsl stos scas mov mov fnop in lock sti add and es ss inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc push and sub dec dec push pop pop arpl jae jge mov add add ret rcr fucom call add or sub dec dec push pop pop bound add jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov add add fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov xlat fucom out add add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add add add sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat faddl jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or add daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec add pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp add add inc inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add inc dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push add add insb jno jl xchg mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul add addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub add out repz incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl add stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jae jge mov test mov mov add add int fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push add xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 add jmp idiv add or adc xor cmp dec push push pop pusha imul addb mov lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb aaa cmp push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop add outsb jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor dec push pop pop fs je jg mov stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push add sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods add into rcr fsubp jmp add push adc push and cs add add ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc pop add inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps and inc inc dec push add push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp or push sbb sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 add jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push push pop arpl jae jge mov add lea lods mov mov fcomp loop in repnz std add or sub dec add pop pop arpl je jg mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov add mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov cmpsb stos mov mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add add sub dec dec push pop pop bound jb jge mov test mov mov fadds add add add jecxz in repz std add adc das xor push push pop pusha imul addl mov rcr fucom call add unpckhps and inc inc dec push push pop bound je jle mov stos scas mov mov fucom jmp add and sub cmp pop pop arpl je jle mov test (bad) lret fcmovu in lock cli add adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul ja addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa add sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc add pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub add dec dec push pop pop arpl jae jle mov test mov add (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add outsl jne jg mov cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add sbb es ss inc dec push push pop popa imul add xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fucom add out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push add imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test mov fnop in lock sti add or push sbb es ss inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov movsl stos mov mov aad loopne jmp idiv add or push sbb sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or add add add add das xor push push pop pusha imul addl mov ret rcl fucom out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa data16 jb jl xchg test mov mov fcomp jecxz out repz incl unpcklps pop and inc inc add dec push push pop pusha imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop popa data16 add jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul jo jnp xchg cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov test (bad) aad loopne jmp cmc sti add or push sbb sub cmp dec push add bound jae jge mov test mov mov fcmovu in out hlt cli incl and inc inc dec push push pop pusha imul addl add mov mov xlat fucom call add or sub dec dec push pop pop arpl je jle mov test (bad) rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov add fcomp jecxz in repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov fcmovu in lock cli add and sub ss inc dec push pop pop arpl je jg mov stos mov mov xlat fsub add add in repnz add push adc pop and xor ss pop pop imul xchg xchg mov ret leave into rcr fsubp jmp add and sub cmp dec push pop pop imul orl lods mov mov (bad) in lock add or sub xor push push pop arpl je jg mov mov (bad) in out hlt stc incb unpckhps and inc inc dec push pop add add je jg mov lods mov mov fnclex in repz add adc pop daa das ss dec std or imul mov leave rcl fucom in cmc cld add ss inc dec push pop insw jne test int and push pop pusha outsl jbe test scas mov ret lret loopne out cmc cld add adc pop add ss pusha outsb jne test mov ror rcr fsubp call add add clc incb or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or das aaa aas inc adc pusha insl jb jge mov stos mov mov (bad) fneni(8087 in lock add or push sbb sub cmp add pop popa insb jno jl xchg cmpsl lods mov mov xlat fucom out repnz jno jl xchg add add xchg xchg popf mov mov (bad) in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub cs ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push jne addb cmpsb stos mov mov add int3 rcl fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and daa sub aaa cmp pop pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out add add idiv add or pop sbb cmp pop pop arpl jae jle mov movsb stos scas mov mov fnop in lock cli add and sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul nop xchg lcall rol rcl fneni(8087 out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop bound jb jge orl test (bad) lret fcmovu in out cmc cli incl and jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg pushf mov mov xlat fucom call add or sub xor add inc dec dec push pop pop gs jne jp test cmpsb stos mov mov (bad) fsub out repnz add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa imul addl mov ret rcl fucom call add push adc push add das xor aas inc dec dec push pop pop gs jne addb add mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) ljmp unpckhps pop and inc inc dec push push pop popa imul addl mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov add lret rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp dec dec push pop pop bound jae jge mov test (bad) leave into aam fsubp jmp add unpcklps pop and aas inc dec push push pop pusha imul add pushf mov mov out repnz add or sub dec dec push pop pop arpl je jg mov stos scas mov mov fnop in lock add add add and sub ss inc dec push push pop popa insb jno jl mov test mov mov fcomp jecxz out repz incb add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop add add daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz jmp add unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl sti add or push sbb es aaa cmp inc dec push push pop popa insb jno jl add add pushf mov mov (bad) fsub out icebp idiv add or add push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul mov mov mov flds (bad) ljmp unpcklps pop and das xor dec push pop pop gs jne jg mov lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push pop pop add je jle mov test add rcr fsubp jmp add push adc push and xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add xor ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jae jge mov test mov mov add int fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg add enter fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound add jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fucom out repnz add pop or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp add std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov add fcomp jecxz in repz std add or add sbb cmp pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jb jge mov test mov mov xlat fucom call add or daa sub add aaa cmp push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec add add pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sub dec dec push pop pop bound jb jge mov mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add imul mov scas mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec add pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor pop pop fs je jg mov add (bad) xchg cltd lahf movsb test (bad) lret fcmovu in lock add or push sbb sub ss inc dec push push pop bound jb jl xchg scas mov mov in out add sti add or sub dec dec push pop pop arpl je jg (bad) xchg pushf mov mov fcomp jecxz out repz incb sub cmp inc dec push pop gs je test mov mov jecxz repnz dec add pop pop imul push pop gs jae xchg mov ret fabs jmp push adc cmp imul test movsl stos scas mov (bad) lret rcr (bad) out idiv push push push sbb daa sub inc dec push push pop gs jne stos mov vaddsubps fneni(8087 in lock add adc and xor cmp dec push fisub jne jg mov stos scas mov mov fsub jmp or add sbb sub cmp push pop pop imul pushf movsb add fcomp out cmc cld add adc pop es push pop arpl jns test test (bad) leave into aam (bad) out idiv add sub aaa cmp inc dec push push pop bound jb jge xchg mov mov fabs call adc and das aaa aas inc dec push push pop popa data16 jno jl mov sbb outsl mov fsub jmp sti add add cmp push pop pusha outsb jne orl mov ret rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub add in repz std add or sub xor ds dec dec push pop pop add je jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos add int3 rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec push push pop pusha imul addl add mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and cs add dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add test mov mov fcomp jecxz in repz std add or adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol add add rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop add insl jae jge mov test mov mov (bad) in jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp add add adc sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test mov fcmovu in lock cli add and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or daa add add dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss add push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor add dec push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or adc sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and inc inc dec push push pop pusha gs jbe addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound add jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop arpl push je jg mov add (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in lock cli add and inc inc dec push push pop pusha imul addb cmpsb lods mov add rcl fsub out repnz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push pop popa imul addl mov add enter fucom call add push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb daa sub aaa cmp inc dec push pop pop arpl jae jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop imul addl mov rol rcl fsub out icebp idiv add or pop sbb aaa cmp add arpl jae jle mov test (bad) leave iret aam (bad) jmp incl unpcklps pop and xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb add daa sub aaa cmp pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos add int3 rcl fsub out repnz add or pop sbb aaa cmp pop pop bound jae jle mov test (bad) leave iret aam (bad) jmp add unpckhps pop and inc add push push pop pusha gs jne jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl push orl test (bad) leave iret aam (bad) ljmp or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa insb jno jl add xchg lods mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 in lock add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop add je jg mov add (bad) aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov add rcl fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov rol rcl fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov add (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out add idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge add movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl add adc xor push push pop pusha imul addl mov ret rcl fucom call add or and das xor aas inc dec dec push pop pop fs je addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test ret leave into aam fiadd in out cmc cli add and cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl add test movsl stos scas mov rol rcl fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and cs add inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or pop sbb aaa cmp pop pop arpl jae add add mov test (bad) leave into aam fsubp jmp add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov stos mov mov rcl fsub out icebp idiv add or sub xor ds dec dec push pop pop fs je jg mov add add rol rcl fneni(8087 in lock add or push sbb daa sub dec push pop pop gs jbe (bad) mov add leave into aam loope in repnz std add push adc push and das xor popa imul addl mov ret rcl fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov ror fsub call add push push push and inc dec dec push pop popa push mov test lret rcr loop icebp clc add push adc xor inc dec dec push pop pop imul nop xchg fwait mov mov aam (bad) jmp add unpckhps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out hlt stc incb push adc pop and das xor dec push pop pusha add add add addl mov ret rcr fucom call add push adc pop and das xor aas inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov add mov mov fnop in lock sti add sbb cmp pop pop arpl jae jle mov test (bad) lret fnop in lock sti add and sub aaa cmp inc dec push push pop bound jb jge mov test mov mov add loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jae jge mov test mov aam (bad) ljmp adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop fs jno jl xchg lods mov mov fcomp add jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor add inc dec dec push pop pop gs jne addb cmpsb lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov dec push pop pop arpl jae jle mov test (bad) aad loopne jmp idiv add or push sbb daa sub aaa cmp add push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl add add rol rcl fsub out repnz add or adc push and cs aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol add add rcl fnop in lock sti add and sub cmp dec push push pop popa insb jb jge xchg mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa add js orl test mov mov (bad) in add add out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out icebp testb add add add sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov rcr fucom call add push adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in lock cli add and add xor push push pop pusha imul addl mov rol rcl fsub call push sbb sub sub push pop popa outsb jne orl cmc incl sub ss pop insw je (bad) mov mov (bad) int fcomp jecxz out repz std add or sub inc dec push push pop popa insb jno jl (bad) xchg mov mov (bad) in out hlt cli add add add add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add pop and inc inc dec push push pop pusha imul addb cmpsl lods mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addl mov rcr fucom jmp add unpcklps pop and sub xor dec push pop pusha imul addl mov ret rcr fucom call add push adc pop and das xor imul (bad) xchg lcall rol rcl fsub out repz incl add push sbb daa sub xor ds dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp in out hlt cli incl and sub ss inc dec push push pop bound je mov add xchg lcall enter (bad) ljmp unpckhps and sub cmp dec push push pop popa insb jae jge mov test (bad) leave iret aad loopne in repnz incb unpckhps and xor inc inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test ret leave into roll add (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fcoml stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb xchg lods mov add rcl fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test rol rcl add fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpcklps pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc add incb push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov fcomp jecxz in repz incb or add pop and das add cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl je jle mov movsb stos scas mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp add or sub dec dec push pop pop bound jb jge mov xchg cwtl popf mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test scas mov mov fcomp jecxz jmp add or adc pop and das xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov add rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and add xor add pop pusha imul addb movsl stos mov mov add aad loopne jmp idiv add or adc xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out add repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out add and inc inc dec push push pop pusha imul addb mov mov rcr fsubp call add push adc push and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb add sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp add add push pop pop arpl jae jle mov test (bad) leave iret aam fild in lock sti add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test mov mov (bad) jecxz out repz incb push adc push and cs aas inc dec dec push pop pop fs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa add add jb jl xchg test mov mov fcomp jecxz in repz std add or push pop pop imul (bad) xchg lcall mov fnop in lock cli add and sub cmp dec push push ja addl mov rcr fsubp jmp add push adc push and das xor inc inc dec push push pop pusha imul add sahf add rol add add rcl fucom out repz std add push adc pop and push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add add push or push sbb sub ss pop pop arpl jae jge mov test mov mov in repz add push adc push and xor ds dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push add aaa add inc dec dec push pop pusha push (bad) xchg popf movsl scas mov mov fcomp jecxz out repz incb or adc push and xor aas inc dec dec push pop pop add add push jne jg mov stos mov mov aad loopne ljmp adc xor push push insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb xchg lcall mov fnop in lock cli incl pop and aas inc dec dec push pop pop fs je jg mov nop xchg fwait mov mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor cmp pop pop arpl jb jge mov mov mov add rcr fiadd in out hlt cli incl push or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp add cli incl unpckhps pop and inc inc dec push push pop popa imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add or push sbb sub ss inc inc dec push pop pop add je jg mov stos scas mov mov fnop in lock sti add or add push sbb sub cmp dec push push pop popa insl jb jge mov test mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jge mov test into aam (bad) jmp add unpcklps pop and das xor aas inc add add push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov mov aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp adc xor push jne addb add add rol rcl fsub out icebp idiv add or add sbb add ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp testl and sub dec dec push pop pop imul mov adc xor add dec push push pop popa insb jno jge mov mov (bad) fnclex ljmp sbb sub cmp dec push pop bound js xchg mov rol aad jecxz repnz add or xor inc inc dec push pop arpl jns mov mov ret lret rcr loop in repz incb or adc sbb cmp inc dec dec push pop pop imul mov add (bad) lret rcl fndisi(8087 out icebp testb add add add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jge xchg lods mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb add daa sub aaa cmp pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc aas inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fucom call incb lldt xor push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec add add add push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and xor ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov mov fnop in icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge orl test (bad) leave iret aam (bad) jmp add and inc inc dec push add bound jb jns test movsb test (bad) aad loopne ljmp adc sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa data16 jno jl xchg add ret rcr fucom call add push adc sub xor aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push pop pop bound jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addb cmpsb stos mov mov rolb add fldl in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop imul nop xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jle mov test (bad) lret fnop in lock sti add add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fsub out repnz add or and das xor aas add push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs ds dec dec push fs jne jg mov stos mov mov (bad) fsub out repnz add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fnop in lock add or push sbb es ss inc dec push push pop popa insb jb jge xchg test mov mov fcomp jecxz out hlt stc incl unpcklps pop and das xor push push add add imul addb cmpsb stos mov mov xlat fsub out repnz std add or sub xor ds dec dec push pop pop imul add stos add int fcomp loop in repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or sbb cmp pop pop arpl jae add jle mov test (bad) aad loopne jmp cmc sti add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom call add push adc push and xor ds dec dec push pop pop fs jne jg mov add add rcl fndisi(8087 out icebp testl adc add and das xor aas inc dec push push pop pusha imul addl ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop fs jne addl leave into aam loopne jmp idiv add or sub xor push push pop bound jae (bad) xchg lcall mov fnop in out cmc cli add adc xor push push pop data16 jne test mov rol rcl fucom out repnz add or pop sbb cmp inc dec dec push pop pop gs pushf out stc incl unpckhps pop and dec push push pop outsl jbe xchg scas mov rol rcl fnop in lock cld add adc and cs aas inc dec dec push pop add imul add popf mov (bad) iret (bad) fucom ljmp add daa cs outsl jbe (bad) xchg test mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl and sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add pop or add xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa insb jno jl xchg add add lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test add add aam (bad) ljmp unpckhps pop and inc inc dec push push pop add insb jno jl orl test mov mov (bad) jecxz out repz incb push adc push and das xor aas inc dec dec pop pop fs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jb jge mov test (bad) leave into aam add add in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop popa imul addl mov add enter fiadd in out cmc cli add add and inc inc dec push push pop pusha imul addl mov rol rcl fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repz incb or adc push and add sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock add or push sbb es aaa cmp inc dec push push pop bound jb jl mov lods mov mov xlat fsub out icebp idiv add or pop sbb xor add dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp dec push pop pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp dec dec push pop pop arpl jae jge mov call adc pop and cmp inc dec push push pop popa data16 jno jl xchg lods mov mov add (bad) int xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incb push add xor push push add data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jae jge mov test mov mov flds add jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) ljmp unpcklps pop and aas inc dec dec push pop pusha gs jne addb mov lods mov mov (bad) fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge xchg test mov mov fcomp loop in repz incb add add push adc push and xor ds dec dec push pop pop arpl push je jg mov stos add lret rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp push or push sbb add es ss inc dec push push pop popa data16 jno jl xchg lods mov mov add fucom call add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov add fsub out icebp idiv add or sub add cmp inc dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl pop and cmp dec push push add data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add add adc xor push add popa insb jb jl xchg test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae add add test movsb stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and inc inc dec push push pop pusha imul addl add mov xlat fsub out add clc std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl unpckhps pop and inc inc dec push push pop add insb jno jl xchg lods mov mov xlat fucom out hlt cld add or sub dec dec push pop pop arpl jae jle mov stos mov mov add lret rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb and inc inc add pop popa data16 jno jl xchg lods mov mov (bad) fildl add add out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop arpl jae jle mov test mov rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge xchg mov mov fcomp jecxz out repz incb or adc and sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp add adc add sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp add inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop add jo jnp test cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb cmp inc dec dec push pop pop add arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and inc inc dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop pop arpl jae jle add add popf mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb add fwait mov mov aad loopne jmp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop imul mov xchg lcall mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jge mov test add add int3 rcl fsub out icebp testl adc sbb cmp pop pop bound jb jle mov test (bad) leave into rcr fsubp jmp add or sub xor cmp pop pop bound jb jge mov lods mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addl mov rol add rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov flds loopne ljmp unpckhps pop and das xor dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor aas inc add push pop pop gs jne jg mov lods mov mov (bad) fsub add out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp add add and cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg test mov mov out cmc cld add adc and xor inc dec dec push pop gs jae (bad) mov mov ret fabs call push push push es push pop bound jp mov add add aam jecxz repnz add adc pop daa das ss dec push pop arpl jns (bad) xchg popf mov ret leave rcr loopne out idiv push push push push es insl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop add imul (bad) xchg lcall mov fcmovu in out cmc cli incl sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb sub cmp inc dec push push pop pusha imul addb add xchg movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop add imul addb add mov rol iret aad (bad) ljmp unpcklps pop and aas inc dec dec push pop arpl je jg mov test (bad) leave iret aam (bad) jmp add push adc push and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov add add add mov xlat fsub out icebp idiv add or push sbb es ss inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov add add aad loopne ljmp unpckhps pop and aas inc dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push mov aam fsubp jmp add and inc inc dec push push pop popa insb jb jge mov test mov mov (bad) in out hlt stc incl unpckhps and cmp inc dec push push pop bound jb jge mov lea scas mov mov (bad) in out hlt stc incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom call add push adc push and xor ds dec dec push pop pop gs jne addb cmpsb stos mov mov rol rcl fsub out icebp idiv add or pop sbb cmp pop pop arpl je jle mov stos scas mov mov fnop in lock sti add or push sbb sub ss inc dec push push pop bound jb jge mov mov mov mov fcmovu in lock sti add and sub cmp dec push push pop popa insb jb jge mov lods mov mov xlat faddl loope in icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt add incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov flds (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add push adc push and xor ds add push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add add adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg scas mov rol rcl fsub out icebp idiv add or pop sbb daa add add dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov movsb stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc sti add and inc inc add add push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul jl xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound add add insl jb jge mov test mov mov fcomp jecxz jmp add unpcklps pop and xor push push pop pusha data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out cmc std add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov add fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec dec push pop pop arpl je jle mov add test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov int xlat fucom out repnz add or add xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov cmpsb lods mov mov (bad) fsub out icebp idiv add or sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out in repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul add pushf mov mov xlat fsub out repnz add add daa sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz add hlt cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa add inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret aad loopne jmp cmc sti add and sub cmp dec push pop pusha imul addb movsl stos scas mov rol iret aad (bad) ljmp unpcklps pop and das xor add dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop arpl jae jge add mov mov fcomp jecxz out repz std add or sub dec dec push push pop bound jb add (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop add je jg mov add (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor push push pop pop gs je jg mov add add (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb add rol rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test add mov aam (bad) jmp add add adc pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov add add aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom add out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec add pop popa insb jno jl xchg stos mov mov (bad) fildl add add out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add incl unpckhps pop and sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov movsb test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add add adc sbb sub cmp dec push push pop pusha gs jne test test mov mov fcomp loop in repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add mov test leave iret (bad) fndisi(8087 out repz incb unpckhps and inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp testb add or pop sub cmp dec push push pop bound jb jge mov stos scas mov rol rcl fucom call add and sub cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpckhps pop and inc dec dec push pop pusha imul xchg add add scas mov rol rcl fsub call add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul mov stos mov mov rol rcl fsub out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or sub dec dec push pop pop arpl je jg mov stos scas mov rol rcl fneni(8087 out lock add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu add ljmp adc sbb es aaa cmp inc dec push push pop bound jb jns test movsb stos scas mov mov fnop in lock sti add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) add lock add or push sbb es aaa cmp inc dec push pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp add adc xor cmp dec push push pop bound jb jge xchg test mov mov (bad) in out hlt stc incl unpckhps pop and inc inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor push push pop pusha imul addl mov ret rcr add in out hlt stc incl unpcklps pop and add push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec add pop pusha imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop arpl jae jle mov stos scas mov rol rcl fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push pop pop bound jae jge mov test (bad) lret fnop in lock sti add or push sbb sub ss inc dec dec push pop pop arpl jae jle mov test (bad) aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge add add mov mov aad loopne ljmp adc sbb sub ss inc dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repz std add push adc push and cs ds dec dec push pop pop fs je jg mov stos add add lret rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov stos scas mov mov fnop in lock add or add sbb cmp pop pop arpl je jle mov stos scas mov rol rolb aad loopne jmp idiv add or push sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add and sub ss inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb add add or adc xor push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec push push pop pusha imul jl xchg test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and sub xor aas inc dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl outsl je jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp add pop arpl jae jle mov stos scas mov rol rcl fildl loope in icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aad (bad) ljmp adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa imul jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov rcr fucom call add push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out repnz add or sub xor add push pop pop gs jne addb add add mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fneni(8087 in lock add or push sbb es aaa cmp inc dec push push pop bound jae jge mov test (bad) leave add aam (bad) ljmp adc xor aaa cmp inc dec push pop pop bound jae jle mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop bound jb jge mov add (bad) lret fnop in lock sti add or push sbb sub ss inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp cmc cli incl and inc inc dec push push pop popa insb jno jge mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa imul addl mov rcr fsubp call add push adc pop and das xor aas inc dec dec push pop pusha imul addb mov mov (bad) jecxz out hlt stc incb unpcklps add and das xor push push pop pusha imul addl mov ret rcr fucom call add add adc pop and inc inc dec push push pop pusha imul addl mov ret rcr fsubp call add push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc sbb sub cmp dec push push pop popa insb add jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor push push pop pusha imul addb pushf mov mov xlat fucom call add push adc push and xor aas inc dec dec push pop pop add jo jnp xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop imul (bad) xchg lcall rol rolb xlat fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jae jle mov test (bad) lret fcmovu in lock cli add and sub ss inc dec push push pop bound jb jge mov test (bad) leave into aam (bad) ljmp adc xor push push pop pusha imul addl mov ret into aam fsubp add add out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl cmp insw je addb mov rol rcr loopne out cmc sti add push adc cmp pop popa push mov scas mov ret leave iret (bad) fsub jmp or sub xor ds dec dec push pop pop fs jne jg mov scas mov mov (bad) in lock cli add and sub aaa add inc dec push push pop popa insb jno jl xchg test rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jae jle mov stos and out hlt stc incb push adc push and dec dec push pop pop arpl jns xchg cmpsb stos mov mov aad loopne ljmp adc cmp push pop popa push add add js orl test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or sbb es pop pop arpl jae jle mov add (bad) fucom call test mov fcmovu in out hlt cli add or daa sub dec add add pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos mov leave into rcr fsubp jmp add unpcklps pop and das xor dec push pop pusha gs jne add lcall rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out icebp idiv add or adc sbb cmp pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov add add add mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg fwait test (bad) lret fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov vaddsubps fneni(8087 in lock sti add add es ss inc dec push push pop popa data16 js (bad) mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs jo jnp test movsl stos mov add fsub out repnz idiv add or pop sbb daa sub aaa cmp inc dec push pop imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or adc sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb add cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push add add popa insb jno jl mov mov mov xlat fsub out repnz add or pop add cmp pop pop arpl imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb add ja (bad) xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb or adc push and xor cmp pop pop add jae jle mov mov scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jbe test lods mov mov fsubp jmp stc incb or add pop and das xor aas inc dec dec push pop arpl js xchg mov ror xlat fsubp in repz add add movhps and xor inc dec push pop pop data16 jae orl (bad) into aad jecxz repnz add adc push and dec push pop pusha outsl jbe test test mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb add nop xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb add (bad) int xlat fucom out repnz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov add stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov add lret rcl fndisi(8087 out lock add or pop sbb daa sub aaa cmp add push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fiadd add add add in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb push adc push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc add push pop pusha imul addb mov mov (bad) fndisi(8087 out icebp testb add sti add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and add add das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add push adc push and xor cmp pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp jmp incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor add add inc dec dec push pop pop arpl je jle mov stos mov ror xlat fucom call add or sub dec dec push pop pop bound jb jge mov mov mov xlat fsub out repnz add or sub xor ds dec dec push pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je add mov stos scas mov mov fcmovu in out idiv or push add cmp pop pop arpl imul (bad) xchg cltd lahf movsb test (bad) aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov add ret enter fsubp call add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in lock cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound add jge mov test mov add add lret fcmovu in out hlt cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in add ljmp unpckhps pop and dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov aad loopne ljmp unpckhps sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp or adc pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp lldt xor dec push pop add imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor add add ds dec dec push pop pop data16 mov stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov (bad) in out hlt cli incl adc sbb sub cmp dec push push pop bound jb mov scas mov mov fcmovu in lock cli incl pop and xor inc inc dec push push pop popa data16 jno jnp xchg xchg add mov mov fcomp add jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add or push sbb es ss inc dec push push pop bound jb jl xchg mov mov (bad) jecxz out repz incb or adc push and xor inc dec push pop popa imul or push sbb sub ss inc dec push push pop bound jb jge add movsb stos scas mov ret aad fsub out repnz add or pop sbb daa sub dec dec push pop pop arpl add add js orl test (bad) leave into aam loopne jmp idiv add or sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb xchg fwait scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp add std add or sub inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov rol rcl fneni(8087 in lock insl jae jge mov test (bad) aad loopne ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add push adc push and cs ds dec dec pop fs jne addb movsl stos mov mov (bad) fsub out icebp idiv add and inc inc dec push push pop bound jb jge add (bad) xchg test mov mov (bad) jecxz ljmp adc xor aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and sub cmp dec push push pop pusha imul addl add add mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec dec push pop pop arpl jae jle mov (bad) xchg cltd lahf movsb test add add fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out add clc incb or adc push and cs aas inc dec dec push pop pop fs je addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jae jge mov add vaddsubps fneni(8087 out lock cld add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add add xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and add add dec push push pop pusha imul addl mov rol rcl fucom out repnz add or adc push and cmp inc dec dec push pop add imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl imul mov mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop add jne addb add mov stos mov mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop popa data16 jno jl xchg add add int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec pop bound jb jge mov test mov mov fcomp in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs jne mov stos mov mov add fsub out repnz add or and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fiaddl add add in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcl fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add add add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov in out hlt stc incl unpcklps pop and das xor dec push push pop popa imul addl popf mov mov (bad) jecxz out repz incb push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add or push sbb sub xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repz std add or sub xor ds dec dec push pop pop arpl je mov stos scas mov mov fnop in lock add adc and xor inc dec push pop popa imul lahf cmpsl scas mov (bad) int fcomp jecxz out repz incb or adc sbb cmp dec dec push pop pusha imul addb add movsl stos scas mov mov fiaddl loope jmp idiv add or push sbb add aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc pop pop bound jb jge mov test mov mov fcomp jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs test movsl stos scas mov rol rcl add add loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec add pop pop gs jne addb mov mov xlat fsub out icebp add idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in sti add or push sbb add sub ss inc dec push push pop popa data16 jne add std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov add add fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov add fcomp jecxz icebp stc add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test ret leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc das xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt cli incl lldt xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps and ss inc dec push push pop popa imul addl cmp imul mov mov add (bad) xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock cli add push or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fldl loop in repnz std add or and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test in out cmc cli add and inc dec push pop pusha push enter in cmc std add sub ds dec push pop pop fs je jg mov stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop gs jne jg mov add movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt add add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add pop or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fiadd add add jmp add push adc push and xor ds dec add pop pop imul mov mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push add gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor inc dec push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add push or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov scas mov mov fcmovu in out hlt cli incl unpcklps add pop and das xor aas inc dec dec push pop pop gs jne jg lea mov mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add pop or pop sbb cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp pop lldt sbb daa sub ss inc dec push push pop popa data16 add add jl mov mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push pop fs jne addb mov mov xlat (bad) out idiv add or daa sub inc dec push push pop bound jb jl xchg mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul orl scas mov rol add add rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pusha push (bad) xchg sahf movsl stos add lret rcl fneni(8087 out hlt sti add or pop sbb daa sub cmp jp xchg lahf into jns mov fucom call add push adc sbb and inc inc dec push push pop popa data16 jne test mov fchs call adc pop es dec push pop bound jns test mov mov add (bad) int fsub ljmp sbb sub cmp inc dec push pop arpl ja test mov mov loope out idiv add adc and sub push pop pop insw je orl enter in repnz add push adc cmp push pop pusha push mov lods mov mov fndisi(8087 out lock add or push sbb sub cmp dec push push pop arpl jp xchg mov add lret rcl fsub jmp sti add push adc and xor aas inc dec push pop arpl jns mov scas mov (bad) int fldl out cmc cld add push push and inc dec push push pop popa data16 jno jl xchg scas mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and add cs ds dec dec push pop pop imul leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl orl test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addb cltd add mov pushf mov mov fcomp in repnz add or xor aas inc dec push pop bound ja test mov ret fchs out hlt sti add adc pop es dec push pop arpl js xchg scas mov (bad) (bad) call or sbb daa cs dec push pop pusha push mov mov mov (bad) jecxz out repz incb or adc push and add add xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec add gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpckhps pop and das xor aas inc dec dec push pop add imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and add add dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp adc das xor dec push pop add pop gs jne jg mov cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl add int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno add jbe addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg xchg xchg pushf mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jl xchg add add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub add cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub inc dec dec push pop pop imul mov mov mov add leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp add jecxz out repz std add or sub dec dec push pop pop arpl jae jge test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul add stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt add incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave add aam (bad) ljmp sldt add adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov add loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jg mov stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and add add xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 adc sbb sub ss inc dec add pop arpl add jle mov test (bad) leave into aam (bad) jmp add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop pusha imul addl pushf mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb daa sub dec dec push pop pop arpl jae jle mov test rol rcl fneni(8087 in lock add or push sbb es aaa cmp pop pop bound jae jle mov test add (bad) in out hlt stc incl unpcklps pop and aas inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push pop popa insb jb jge xchg test mov mov fcomp jecxz add add out repz add add and inc inc dec push push pop pusha imul addl mov ret rcl fucom call add add adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp add or adc xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push add push orl test (bad) lret fnop in lock cli add and sub add xor cmp dec push push pop popa data16 js (bad) mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov add fucom out repnz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae add js orl test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov add add mov (bad) in out hlt stc incl unpcklps sbb and inc inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and sub xor push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl je jg mov stos scas mov mov (bad) aad loopne ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jns test movsl stos scas mov mov fnop in add add lock sti add or push sbb sub cmp dec push push pop popa insb jno jl add mov mov (bad) in out hlt cli incl pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 out lock add or adc sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov add fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fndisi(8087 add in repz std add push adc push and add add xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub xor ds dec dec push pop add imul (bad) xchg lcall mov fnop in lock sti add or push sbb es add cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc add push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec push push pop pusha imul add add fwait mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs jne addb mov add add ret rcl fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addb cmpsl lods mov mov add rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) aad loopne ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out add cli incl unpcklps pop and aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or add pop sbb cmp pop pop arpl jae jle mov test (bad) fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop add jb orl into aad in hlt cld add adc ds dec dec push pop pop fs je jg mov mov mov (bad) jecxz out hlt stc incb unpckhps and inc inc dec push pop pop arpl jae orl add add mov (bad) jecxz out repz incb or adc xor aas inc dec push pop pop imul mov mov mov fcmovu in out or adc push and das xor aas inc dec push pop pusha push (bad) xchg fwait mov mov (bad) fsub out icebp idiv add or sbb sub cmp push pop pusha push mov lods mov mov xlat fsub call or adc xor inc dec dec push pop pop gs je orl cmpsl lods mov mov xlat fsub out repnz add adc sub rolb push push push and test ror aad jecxz repnz add sub cmp push pop pusha push mov mov (bad) int3 aam loop out testb movhps daa das ss push pop arpl jne orl mov ror fcomp in repnz add movhps es aaa cmp add add arpl jnp mov mov ror fadds xor push pop bound jns mov mov mov in repz add stos mov mov add out cmc sti add or push sbb and inc dec push pop arpl ja mov add adc and cs dec push pop gs je jg mov stos scas mov mov fnop in lock cld add or cmp push fwait mov add mov and xor mov lret in cmc incb push push push daa das lcall dec xchg fimul xor pop fs je orl ss dec push pop gs jne mov (bad) or arpl (bad) fsubrp out idiv add sub cmp enter gs rcr loopne in cmpsl mov rol fabs call nopl sub cmp push push pop data16 jne test push and dec push pop bound jns mov mov incb add insb jbe mov mov pop iret fabs jmp popa imul xchg fwait movsl lods mov enter in cmc std push push adc inc dec push pop pusha push sbb mov in out idiv push adc pop es dec dec push pusha push xchg cwtl mov enter out pop (bad) sar add adc imul and ss dec add mov (bad) (bad) out clc incl movhps mov ret lret rcr in repz add adc and xor inc dec push pop bound js xchg mov (bad) int fsub in repz add adc and xor inc dec push pop pop outsb jbe test mov loopne lock pop movhps es pop pop push mov lret fsubp in add incb sub aaa aas inc dec mov lret rcr jecxz add add sti push or xor inc dec push pop popa imul sahf cmpsb lods mov (bad) lret rcr loop icebp idiv add or pop sbb daa sub add cmp pop pop arpl jae jle mov test ret enter fsubp call add push adc cmp dec push pop bound jns xchg lods mov mov xlat fsub out repnz add push push sbb inc dec push pop arpl jp mov add add fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) lret rcl fndisi(8087 out repnz add adc and imul mov mov ret fabs call pop or daa sub inc dec push push pop bound jae orl (bad) int3 rcr loopne out idiv add adc and cs pop pop gs je (bad) mov movsl stos add loope lock push or push sbb daa das xor dec push pop pop insw je test mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jl xchg mov mov fnop in lock cli add add and sub cmp push pop popa imul nop xchg fwait mov mov xlat faddl in repz add adc sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add outsb jae jge mov test mov mov fcomp jecxz in repz std add or sub add pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop arpl jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc das xor dec push push pop add pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul add add xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg add mov mov xlat fucom out repnz add or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test add add add add into aam fsubp jmp add pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fldl jecxz out repz incb push adc pop and das xor push push pop popa data16 jno jl mov test mov mov fcomp loop in repz std add push adc push and xor ds dec dec push add imul (bad) xchg cltd lahf movsb test (bad) leave iret add (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out repz add adc and xor inc dec push push pop pusha imul addl (bad) into (bad) (bad) out testl sub cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec add pop pop arpl jae jle mov (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add push or push sbb sub cmp dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop arpl add jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam add in lock cli incl pop and aas inc dec dec push pop pop gs jne jg test movsl stos scas mov mov fnop in lock cli add and inc inc dec add pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add mov (bad) fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa add dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or cs push push pop pusha gs jne addb add add (bad) int3 rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock cld add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret add fneni(8087 in lock sti add add add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) in out hlt stc incb push adc and cmp push pop bound jns mov mov xlat fucom call add or xor inc dec push pop pusha insb je jg mov add add mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl (bad) xchg cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test add into rcr fsubp jmp incl pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop arpl jae jge mov test mov mov add fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into add fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and inc add push push pop popa imul addl mov rol rcl fsub out add in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or add sbb xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es add ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb add mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec add dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and das xor add dec push push pop pusha imul addb xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addl mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov ret rcl fucom out repnz add or sub dec dec push pop pop bound jae jle mov test mov mov fcomp in repz add adc and das aaa aas inc dec push push pop pusha imul addb mov ret lret rcr loop icebp idiv add movhps and sub cmp dec push pop imul mov mov aad loopne lock add sqrtps ja xchg add add aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov add fcomp loop in repz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock add or push sbb sub ss inc dec push push pop popa insb jb jge mov test mov mov flds fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp inc dec dec push pop pop arpl je jle mov movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub inc dec push pop pop bound jb jge mov test mov mov (bad) in out hlt cli add add add or push sbb xor ds dec dec push pop pop fs je orl mov mov fcmovu in repz incb push adc pop and xor inc inc dec push pop gs je (bad) xchg test mov mov (bad) jmp cli add or xor inc inc dec push push pop popa insb jno jl xchg mov fsubp jmp add push adc push and cs pop bound jae jge mov mov ror fsub call push adc and xor inc dec xchg popf movsl lods mov (bad) int3 rcr loope lock incl add sbb sub cmp rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add add fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu add jmp add add sti add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push add arpl jae jle mov test (bad) leave into aam (bad) ljmp unpckhps pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 call or adc add pop and das xor aas inc dec push pop popa push mov mov (bad) int3 aam jecxz out hlt cli incl push adc cmp push pop pop outsl jbe mov stos mov mov aad (bad) ljmp adc xor push push pop pusha imul addb mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov add lods mov cmp push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov rol rcl fnop in lock cli incl and aas inc dec push pop bound jb jge mov test add aam (bad) ljmp adc xor add cmp dec push push pop popa insb jno add mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 in lock add or push sbb sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call adc xor dec push pop pusha add imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl lldt xor push push pop pusha imul addb movsl stos mov mov aad fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov add add mov fcomp jecxz in repz std add or sub dec dec push push pop add outsb jae jle mov test ret leave into rcr fsubp jmp add push adc push and sub xor dec push pop pop fs jp xchg lods mov mov xlat fsub out repz std add or sub xor ds dec dec push pop pop fs jne test mov loope add clc add adc pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out add idiv add or add pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add and das add xor aas inc dec dec push pop pop gs jne jg mov mov loopne out idiv outsb mov mov fcomp loop in repnz add or sub dec dec push pop pop bound jbe addl mov ret rcr fucom call incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg test mov mov aam (bad) ljmp add adc xor cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc and das xor aas add inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop pusha add jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push add pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs add add addb movsl add (bad) lret rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul add add mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out add stc add or daa sub inc dec push push pop bound jb jge xchg add add mov (bad) in repz add movhps sub xor aas inc dec push pop lcall cmp push (bad) fwait adc dec push pop cltd mov int3 aad in idiv or sbb sub cmp push push pop gs je orl mov (bad) (bad) jmp xchg lahf cmpsb scas mov ret lret loopne out idiv add sub cmp inc dec push pop outsb jbe test mov (bad) int3 rcr in repz add sub add add cmp push pop pop outsb jbe test mov fnclex ljmp pop daa sub inc dec push push pop bound jb jge mov lods mov mov gs jne addb mov mov xlat fucom jmp push or push sbb sub cmp dec push add bound jb jle mov lods mov mov xlat fsub ljmp adc add add xor push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp pop or sub inc dec push push pop imul addl mov vaddsubps fneni(8087 in lock sti add and cs ds dec dec push pop pop arpl jae jle mov lods mov mov fcomp jecxz lock add or pop sbb es ss inc dec push pop pop fs add add jp test movsl stos mov mov (bad) in out hlt stc incb or sbb and xor ds dec dec push pop pop arpl ja (bad) xchg cmpsl lods mov mov add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl mov stos mov mov (bad) fsub out icebp idiv add and sub cmp dec push push pop bound jne jg mov add movsl stos scas mov mov fucom call add push adc push and xor cmp push pop bound jb jge xchg stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov xlat fsubp jmp add push adc pop and das xor push push pop pusha imul add sahf movsb test (bad) leave iret add aam (bad) ljmp adc pop es ss inc dec add pop arpl jae jle mov mov mov in repnz incb or adc push and xor aas inc dec dec push pop pop fs je addl out stc add adc and sub dec push push pop popa imul addl mov aam fsubp jmp pop or pop sbb sub xor ds dec dec push pop pop bound add jb jge xchg cmpsl lods mov mov fnclex out repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc sbb cmp push pop pop imul mov mov mov (bad) in out hlt sti add adc add sub cmp push pop pusha push mov mov add add int3 rcr loop idiv push push adc cmp push pop popa push mov stos mov mov fcomp jecxz out hlt sti add or sub cmp dec push pop pop bound js test cmpsl lods mov mov (bad) in lock add or push sbb es cmp inc dec dec push pop pop gs ja addl mov (bad) fsub out idiv push or xor pop imul add jb (bad) mov enter out clc add adc and xor aas dec push push pusha outsb jbe xchg cmp movsl add fldenv sub mov ljmp inc dec push pop outsb jbe xchg mov (bad) out stc add adc and xor inc dec push pop imul lea mov out clc add adc and xor inc dec push pop gs jne test mov (bad) int3 aam in add add cld add adc and aaa aas inc push pop popa imul movsl lods mov (bad) iret xlat fucomip lock add adc and xor inc dec push pop arpl jge lea jecxz hlt cli add adc and sub push pop arpl jns mov scas mov mov in icebp clc add unpcklps and xor inc dec dec push pop gs je xchg lcall into rcr fsubp jmp add push adc push and cs inc dec push pop pusha push add jg add test mov into adc je test mov fsubp call add push adc sbb and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc pop es dec push pop gs je test mov fucom call add push adc push and xor ds dec dec push pop pop arpl jbe xchg lods mov (bad) int3 aam in repz add adc and sub cmp dec push push pop popa insb jno jl xchg lods mov mov in hlt cld add adc and xor inc dec push pop popa insb jb jl xchg cmpsl lods mov mov fcomp loop in repnz incl movhps daa das aaa aas inc dec push pop data16 jge mov mov (bad) fnsetpm(287 in hlt cld add adc and xor cmp pop pop arpl jno jl add popf mov mov fcomp jecxz out repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) out idiv push or xor pop imul mov mov mov fndisi(8087 out repnz incl adc sbb cmp dec push pop bound jp mov mov (bad) into (bad) fucom call add push adc push add add add and cs outsl jbe orl mov xlat fucom out hlt cli incl unpcklps pop and inc inc dec push push pop bound jb jge mov mov les into aam call or xor inc dec push pop pop outsl jbe test mov in lock add adc and cs pop insb jb jg mov stos scas mov mov fsubp call pop push push add inc dec push pop popa push lea ror fsub out idiv add sub cmp dec push pop pop imul (bad) xchg lcall ret enter in repnz add adc and xor aas inc dec push pop insw jne orl mov (bad) out cmc std add adc and xor inc dec push push pop data16 jbe test mov ret lret loop icebp stc add adc and das aaa ds dec push pop add imul mov mov fsubp in cmc add add sub cmp push pop popa imul sahf cmpsb lods mov (bad) lret rcr loop repnz add push add pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fninit ljmp or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub ss inc dec push push pop bound jb jge mov test add aad loopne ljmp adc add xor push push pop pusha imul jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc xor push push pop pusha imul addb cmpsb stos mov mov rcl fsub out repnz add or sub dec dec push pop pop arpl add outsb jae jle mov test (bad) leave into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jb jge mov add xchg cwtl popf mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop add push jne jg mov stos mov mov aad loopne ljmp adc sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push pop pop arpl jae jge mov test add scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods add add add rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz add repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add push or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov aam (bad) jmp add add add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push add insb jb jl xchg lods mov mov fcomp jecxz in repz std add push adc push add das xor dec push pop pusha push cmp dec push push pop pusha imul addb sub aaa ds dec push pop popa push mov add add cld add or pop sbb daa add dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incb or adc das xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz add add add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp add ljmp unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock sti add and inc inc dec push push pop pusha imul jl mov stos scas mov mov fcmovu in out cmc cli add sbb and inc inc dec push push add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push pop pop bound js test movsb test (bad) leave into aam fsubp jmp add push adc push and das xor dec push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out repnz incb unpcklps pop and inc inc dec push push pop popa insl jae jg mov lods mov mov xlat fldl jecxz out repz incb or adc push and xor ds dec dec push pop pop fs jne jg mov lods mov mov rcr fsubp jmp add unpckhps and inc inc dec push push pop bound add ja (bad) xchg lods mov mov (bad) in out cmc sti add or sbb and inc dec dec push pop pop imul test cmpsb lods mov mov fcomp in out repz incb unpcklps pop and das xor push push pop bound jb jge mov test rol rcl fucom call push or pop sbb aaa cmp pop pop imul (bad) xchg fwait mov add add int3 rcl fsub out repnz add or sub xor ds dec dec push pop add push jne addb cmpsb lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec dec push pop pop imul (bad) xchg lcall rol rcl fsub out repz incl unpcklps pop and inc inc dec push push pop pusha imul addl mov rcr add (bad) ljmp adc sbb cmp pop pop arpl jae jle mov stos mov mov aad loopne jmp idiv add or pop sbb daa add dec dec push pop pop imul mov mov mov fneni(8087 out lock add or daa sub dec dec push pop pop arpl jb jge mov test mov mov fnop in lock cli add add add adc sbb daa sub dec dec push pop pop arpl jae jle mov stos add xor ds dec dec push pop pop arpl je jg mov stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop arpl jae jle mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jge mov test mov enter out cmc std add adc and sub cmp dec push pop gs jae (bad) mov stos scas mov mov fcmovu in out hlt cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) add loop in repnz add or sub cmp dec push push pop popa data16 jno jnp xchg lods mov mov rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp clc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov add (bad) aad (bad) ljmp adc xor xor push push pop insl jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub add push pop pop arpl je jg mov stos mov mov fsub out icebp idiv add or pop sbb daa add xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl daa sub aaa cmp inc dec push push pop bound add add jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul xchg fwait mov mov (bad) fsub out icebp idiv add or add sbb cmp pop pop bound jae jge mov test mov mov fsubp jmp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg add mov mov aam fsubp jmp add unpcklps pop and das xor inc dec push push pop popa imul addl mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov ret rcl fucom out repnz add adc pop and aas inc dec dec push pop pop gs jne jg xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop gs jae jle mov test mov mov fcomp loop out hlt stc incb or adc push add xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov test (bad) leave add aad (bad) ljmp cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop add jo jnp test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor add dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jge xchg lods mov mov xlat fsub out icebp idiv add or adc sbb aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add and inc inc dec push push pop pusha gs jne jg mov cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add pushf mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and add inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec add pusha imul addb movsl stos scas mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp in out repz incb or adc push and xor ds dec dec push pop pop arpl add add jae jle mov movsb test (bad) leave iret aam (bad) jmp add pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and add xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp or push sbb es ss inc dec push push pop popa insb jno add add mov lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fiadd in out cmc cli incl and inc inc dec push push pop pusha imul addb fwait mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno add mov test mov mov fcomp jecxz in repz incb or sub dec dec push add fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov add rcl fneni(8087 in lock sti add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov add add aad loopne ljmp adc xor push push pop pusha gs jne addb add rol rcl fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov xlat fsub out add add repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out add clc std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne jnp xchg cmpsb lods mov mov xlat fsub out repnz add or sbb cmp add imul (bad) xchg lcall mov fnop in lock sti add xchg test mov add add (bad) in out cmc cli add push adc and xor aas inc dec push pop imul mov mov ror xlat fsubp in hlt sti add adc pop daa das ss dec push push pop gs je (bad) mov mov ror (bad) fucom jmp stc add movhps cmp dec push pop bound jns orl test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne add add add addb movsl stos mov mov add fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test add aam (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg add mov xlat fucom out repnz add or sub dec dec push pop pop bound jae jge mov (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub dec dec push pop pop bound jb jge mov test add add aam fsubp jmp add pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov add add in out hlt cli incl unpcklps pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno js (bad) mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec add fs je jg mov stos scas mov mov fcmovu in add cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or daa sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add push adc push and add xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli add add adc xor push push pop pusha imul addb cmpsb stos mov mov rcl fsub out repnz add or pop sbb cmp pop pop bound jb jge mov mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub dec dec push pop pop arpl jae add mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or add sbb daa sub aaa cmp add inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in add stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad (bad) ljmp adc xor push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa add add jno jl xchg lods mov mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop add jo jnp xchg cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec dec push pop pop arpl jae add add add mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop add cmp inc dec dec push pop pop arpl jae jle mov add sahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov rol rcl fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov movsb test (bad) leave iret aam (bad) ljmp adc push push pop pusha imul addb movsl stos mov mov aad add loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lea lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz clc incb or adc push add das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add push or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or add sbb cmp pop pop arpl jae jle mov add or push sbb sub cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fadds (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg add mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne jg mov xchg xchg fwait mov add add lret rcl fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov add add int xlat fucom out repnz add or daa sub cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov add fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl outsl je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds add push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out hlt add cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne addb movsl stos mov mov rol rcl fsub out icebp idiv add or add adc sbb es ss inc dec push push pop popa imul addl mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa add jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add (bad) ljmp unpcklps pop and das xor add add aas inc dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add jp in std add adc pop es push pop pop arpl jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu add ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov xlat fucom out repnz add add add or daa sub add push pop pop arpl jae jle mov test mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb add sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov clc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop add imul mov mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae add mov test (bad) leave into aam fsubp jmp or adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add add pop sbb daa sub aaa cmp pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb add add mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fnop in lock cli add and inc dec push push pop pusha gs jne addb cmpsb stos mov mov add (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa add jb jge xchg test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub inc dec dec push pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov aam (bad) ljmp add adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out cmc cli incl and sub cmp dec push push pop popa insb jno jl xchg test mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor add add inc inc dec push push pop pusha imul addl mov rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and cmp inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge add add mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push add arpl je jle mov test add lret fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov add mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne out cmc sti add and sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov add enter fucom call add or sub dec dec push pop pop arpl jae jge mov add (bad) lret fcmovu in out hlt cli incl lldt sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out in repnz add or sub dec dec push pop pop bound jb jge mov test mov mov add add fsubp call add push adc and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc add sti add or push sbb sub cmp dec push push pop pusha add jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa add pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or add add push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc add pop pop arpl jae jle mov test mov fnop in lock cli add and add add cmp dec push push pop popa data16 jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs je test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov movsl stos scas mov mov fcmovu in out cmc cli incl or adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fildl loope in icebp idiv add or push sbb es ss inc dec push push pop popa data16 add add jl xchg mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov xchg cltd lahf movsb test (bad) lret fcmovu in add cmc sti add and inc inc dec push push add insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub xor cmp pop pop arpl jae jge mov test mov mov (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos add lret rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or daa sub add push pop pop imul (bad) xchg cltd lahf movsb test rol rcl fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg mov scas mov mov (bad) in out hlt stc incb unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov movsl stos scas mov rol rcl fneni(8087 out icebp idiv add add sub dec dec push pop pop fs je jg mov stos mov mov (bad) fsub add in repnz std add or add adc push and cs ds dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul nop xchg lcall rol rcl fsub out icebp idiv add or sub dec dec push pop pop imul nop xchg lcall rol rcl fsub out repnz add or sub xor add add inc dec dec push pop pop fs je jg mov stos mov mov xlat fsub out repnz add or adc push and das xor aas inc dec dec push pop pop gs jno jl xchg lods mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpckhps pop and inc inc dec push push pop pusha add add jno jl xchg lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repz incb or adc push and das xor aas inc dec dec push pop pusha add jno jl xchg add xchg xchg popf mov mov aam (bad) ljmp adc sbb sub ss inc dec push push pop bound jb jge mov test rol rcl fneni(8087 in lock add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) lret fnop in lock sti add and sub aaa cmp inc dec push push pop bound jb jge mov test mov add mov aam (bad) jmp add and inc inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addl mov ret into rcr fsubp jmp add unpcklps pop and cmp inc dec push push pop bound jb jge mov test mov mov flds add (bad) jmp add add push sbb sub ss inc dec push push pop bound jae jge mov test (bad) lret fcmovu in lock sti add or push sbb es ss inc dec push push pop bound jae jle mov test (bad) lret fcmovu in lock cli add and sub ss inc dec push push pop bound jb jge mov test (bad) lret fcmovu in out cmc cli add add adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpckhps pop and cmp inc dec push push pop popa insb jb jge xchg movsb stos scas mov mov fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound add jle mov test vaddsubps fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp in out hlt stc incl unpckhps pop and inc inc dec push push add add insb jb jge mov (bad) xchg lcall rol rcl fsub out icebp testl adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov add fucom call add unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov rol rcl fneni(8087 in add idiv add or pop sbb cmp pop add push jne addb add cmpsb stos mov mov xlat fsub out repnz add or sub inc dec dec push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and cs ds dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jg mov stos scas mov rol add aad loopne jmp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add and sub ss inc dec add pop arpl jae jle mov test rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov movsl stos mov mov (bad) fndisi(8087 out add icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov rol rcl fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test (bad) lret fnop in lock sti add or push sbb sub ss inc dec push push pop bound jb jge mov test mov mov (bad) in out cmc cli incl add add and inc inc dec push push pop popa data16 jno jl xchg test add aam (bad) ljmp adc sbb and sub aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock add add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock add or push sbb daa sub aaa cmp add inc inc dec push pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa insb jno jl xchg test mov mov (bad) jecxz out hlt stc incb lldt xor cmp inc dec push push pop bound insb jb jge orl test (bad) lret fcmovu in lock sti add and sub ss inc dec push push add push orl test (bad) lret fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jb jl xchg xchg cwtl popf mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pop gs add addl mov rcr fiadd in out hlt cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov add iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl and sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcmovu in out cmc cli add and sub cmp dec push push pop popa insb jno jl xchg test mov mov (bad) add in out hlt cli incl unpckhps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov add (bad) ljmp adc xor cmp inc dec push push pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc sbb and sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz std add or sub xor cmp inc dec push push pop pusha imul addl mov mov fcomp jecxz out repz incb unpcklps pop and das xor inc inc dec push push pop pusha imul add popf mov mov fcomp jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec add add add add gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul nop xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop fs jne add add test cmpsb lods mov mov xlat fldl jecxz out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov rcr fsubp jmp add unpckhps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa data16 jno jl xchg add add ret enter fsubp jmp add unpcklps pop and das xor push push pop pusha imul addl mov ret rcr fucom call incl unpcklps pop and inc inc dec push push pop popa data16 jge xchg test mov mov (bad) in out hlt cli incl and inc add push push pop bound jb jge mov test mov mov leave into aam (bad) jmp add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add add std add or sub xor ds dec dec push pop add imul addb cmpsb lods mov mov rcr fsubp call add push adc pop and das xor push push pop pusha imul addl mov mov (bad) jecxz out hlt stc incl unpcklps pop and inc inc dec push push pop popa imul addl mov ret rcr fucom call add push adc sbb and das xor aas inc dec dec push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl je jle mov stos scas mov add (bad) lret rcl fsub out icebp idiv add or pop sbb daa add xor add inc dec dec push pop pop imul nop xchg lcall rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop imul (bad) xchg fwait mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov stos mov mov aad loopne jmp idiv add or push sbb daa sub aaa cmp inc dec push pop pop bound add push orl test (bad) lret fnop in lock sti add and sub ss inc dec push push pop bound jb jge xchg test mov mov (bad) in out hlt cli incl add es ss inc dec push push pop bound jb jge mov mov mov mov fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound imul mov stos scas mov mov fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb sub ss inc dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpckhps and inc inc dec push push pop popa imul addl add rcr fucom call add push adc pop and das xor push push pop pusha imul add pushf mov mov fcomp jecxz add hlt cli incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov aam (bad) ljmp adc xor cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pusha imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) faddl loop in repz std add push adc push and cs aas inc dec add pop pusha imul addl mov rcr fsubp jmp add unpcklps pop and sub cmp dec push push pop popa insb jb jl mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop pusha imul addl mov rcr fsubp jmp add unpcklps pop and add add das xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fucom call add or sub xor add dec push pop pusha imul addb cmpsb stos add into rcr fsubp jmp add unpcklps pop and das xor push push pop pusha imul addb mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) aad loopne jmp idiv add or push sbb daa sub aaa cmp inc dec push pop pop bound jae add js orl test (bad) lret fnop in lock sti add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov movsl stos mov mov (bad) fsub out icebp idiv add or and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out out repz incb or adc pop and das xor push push pop pusha imul addl add add add add mov fcomp jecxz out repz incb or adc pop and das xor inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pusha imul addb cmpsb lods mov mov add rcl fucom call add or adc pop and inc inc dec push push pop pusha data16 jno js orl test (bad) leave iret aam (bad) ljmp adc xor cmp dec add pop arpl jae jle mov stos scas mov mov fnop in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) lret fcmovu in add add cmc sti add or push sbb es ss inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop bound jb jge mov test mov mov (bad) in out cmc cli incl and inc inc dec push push pop popa data16 js orl test (bad) lret add loopne jmp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas add rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in icebp idiv add or push sbb daa sub aaa cmp inc inc dec push pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc sbb sub ss inc dec push push pop popa insb jb jge xchg test mov mov aam (bad) ljmp adc xor add inc dec push push pop bound jb jge mov test (bad) leave into aam (bad) ljmp adc push sbb daa sub aaa cmp inc dec push pop pop add add insl jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp inc dec push push pop popa insb jb jge xchg test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop popa imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec push push pop pusha imul addl xchg xchg pushf mov mov xlat fucom call add push adc push and add xor push push pop pusha imul addl mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa data16 jno js orl test (bad) leave iret aam (bad) ljmp adc xor push push pop popa data16 jno jl xchg test add into rcr fsubp jmp add unpcklps pop and inc inc dec push push pop pusha imul addl mov rcr fsubp jmp add push adc pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop fs jne addb mov mov fadds add add add fucom call incl unpcklps pop and inc inc dec push push pop popa imul addl mov ret enter (bad) in out cmc cli incl and inc inc dec push push pop popa insb jno jl xchg test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out hlt stc incl add add unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call incl and inc inc dec push push pop add insl jb jge mov test (bad) leave iret aam (bad) ljmp adc sbb add add sub add pop pop arpl jae jle mov stos scas mov rol rcl fneni(8087 out lock add or push sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) lret fnop in lock sti add and sub aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push add arpl jae jle mov test add lret rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl je jg mov cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop fs jne jnp xchg std add and sub aaa ds dec push pop pop imul test stos mov mov fucom call add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop add jo jp test cmpsb stos mov mov (bad) fsub out icebp idiv add or add sbb cmp inc dec dec push pop pop imul (bad) xchg lcall rol rcl fsub out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul (bad) xchg lcall rol rcl fsub out icebp idiv add or pop sbb cmp dec dec push pop pop imul nop xchg lcall rol rcl fsub out icebp idiv add or sub dec dec push pop pop imul (bad) xchg lcall rol add xlat fsub out repnz std add push adc push and cs aas inc dec dec push pop pop imul addb cmpsb lods mov mov xlat fucom call add push adc push and das xor aas inc dec dec push pop pop gs add jnp xchg cmpsb lods mov mov fcomp loop in repz incb or adc push and das xor aas inc dec dec push pop pusha imul addb cmpsl lods mov mov fcomp jecxz in repz incb or adc pop and das xor aas inc dec dec push pop pusha imul addb cmpsl lods mov mov fcomp jecxz out repz incb push adc pop and das xor push push pop pusha imul addb mov mov fcomp loop in repz std add push adc push and cs add dec push push pop popa imul addl mov ret enter fsubp jmp add unpcklps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov add rcr fsubp jmp add and inc inc dec push push pop popa insb jb jl xchg test mov mov (bad) in out cmc cli incl and inc inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli add and sub cmp dec push push pop bound jb jge mov test scas mov mov fneni(8087 in lock sti add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock add or push sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock add or push sbb es aaa cmp inc dec push pop pop arpl jae jle mov test (bad) aad loopne jmp idiv add or push sbb add add sub aaa cmp inc dec push pop pop bound jae jle mov test (bad) lret fcmovu in lock sti add or push sbb es aaa cmp inc dec push pop pop bound jae jle mov test (bad) lret fcmovu in lock sti add sbb daa sub dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push add arpl je jg mov stos mov mov (bad) fsub out repnz add or sub xor ds dec dec push pop pop imul nop xchg fwait mov mov (bad) fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle add movsl stos scas mov rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle add movsl stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall add rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) aad loopne jmp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jle mov test (bad) leave iret aam fild add add ljmp or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add and sub aaa cmp inc dec push push pop bound jb jge mov test (bad) leave into aam (bad) ljmp adc xor cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor push push pop add insl jb jge mov test (bad) leave iret aam (bad) ljmp adc sbb es add add add inc dec push push pop bound jb jge mov test mov mov fcmovu in out cmc cli incl and inc inc dec push push pop popa data16 jno jge xchg test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop popa imul addl mov aam (bad) ljmp adc xor cmp dec push push pop bound add js orl stos mov mov xlat fsub out repnz incb or adc pop and inc dec dec push pop pop imul nop xchg fwait mov mov add fucom call add unpcklps pop and das xor push push pop pusha imul addl mov ret rcr fsubp call add push adc pop and das xor push push pop pusha imul addl mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec push push pop pusha imul addl mov ret rcl fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz std add push adc push and cs ds dec dec push pop pop fs jne addb movsl stos mov mov rcl fsub out icebp idiv add or sub xor add push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov fcomp jecxz in repz incb or adc push and das xor aas inc dec push push pop pusha imul addl mov ret rcl fucom call add add add push adc push and das xor aas inc dec dec push pop pusha imul addb cmpsb lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz std add push adc push and cs ds dec dec push pop pop gs jne addb cmpsb stos add int fcomp jecxz out repz incb unpcklps pop and add das xor push push pop pusha imul addl mov ret rcr fucom call add push adc pop and das xor aas inc dec dec push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsl lods mov mov fcomp loop in repz std add push adc push and cs aas inc dec dec push add pop pop gs jne addb cmpsb lods mov mov xlat fucom out repnz std add push adc push and cs ds dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fsub out repnz add or and das xor aas inc dec push push pop pusha imul addl mov rcr fsubp jmp add unpcklps pop and das xor push push pop pusha imul addl add mov mov fcomp jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addb cmpsb lods mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pusha imul addl mov ret rcl fucom call add push adc pop and das xor push push pop pusha imul addl add rcr fucom call add unpcklps pop and das xor push push pop pusha imul addl mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg lods mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp inc dec push push pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc sbb sub cmp dec push push pop bound jb jge mov test mov mov fcmovu in out cmc cli add and sub ss inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp or add add sbb daa sub aaa cmp pop pop arpl jae jle mov stos scas mov rol rcl fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push pop pop bound jae jle mov stos scas mov mov fneni(8087 out lock add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov stos scas mov mov fneni(8087 in lock add or push sbb daa sub aaa cmp add inc dec push push pop bound jae jge mov test (bad) lret fcmovu in lock sti add or push sbb es aaa cmp inc dec push push pop bound jae jge mov test (bad) lret fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound outsb jae jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop imul add je jg mov stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov xlat fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out repnz add or sub dec dec push pop pop imul nop xchg lcall movsl stos mov mov (bad) fsub out repnz add or sub xor ds dec dec push pop pop imul nop xchg lcall rol rcl add loop in repnz std add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz std add or sub xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov add rcl fsub out repnz std add or sub xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fucom call add push adc push and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add or adc pop and das xor aas inc add push pop popa insb jb jge mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa data16 jno jl xchg test mov mov (bad) in out cmc cli add and sub ss inc dec push push pop bound jb jle mov test (bad) lret fnop in lock add or push sbb daa sub add aaa cmp pop pop arpl jae jle mov stos scas mov rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov xlat fsub out repnz std add or sub xor ds dec dec push pop add push jne addb cmpsb stos mov mov xlat fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb cmp pop pop arpl je jg mov stos scas mov rol rcl fneni(8087 in lock add or pop sbb add xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or sbb cmp inc dec dec push pop pop imul (bad) xchg lcall add mov (bad) fsub out repnz add or sub xor ds dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz std add or sub xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop fs jne addb movsl stos mov mov (bad) fsub out in repnz add or sub xor ds dec dec push pop pop fs jne jg mov cmpsl lods mov mov fcomp loop in repz incb or adc push and cs aas inc dec dec push pop pop imul addl mov ret rcr fucom call add push adc pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc sbb and das xor aas inc dec push push pop pusha imul addl mov ret rcr fsubp call add push adc pop and das xor push push pop pusha imul addb cmpsl lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addl mov rcr fucom call add and sub cmp add push push pop bound jb jge mov test mov mov fcmovu in out cmc cli add and sub ss inc dec push push pop bound jb jge mov test (bad) lret fcmovu in lock cli add and sub cmp dec push push pop popa insb jb jge mov test mov mov fcmovu in lock sti add or push sbb es ss inc dec push push pop bound jb add add (bad) mov test mov mov (bad) in out cmc cli add and sub ss inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc sbb sub ss inc dec push push pop bound add jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop imul (bad) xchg lcall add movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop fs je jg mov stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop fs jne addb cmpsb lods mov mov add add fucom out repnz std add push adc push and cs ds dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fldl jecxz out hlt stc incl unpckhps and inc inc dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt cli incl and inc inc dec push push pop bound jb jge mov test (bad) lret fnop in lock add add add or push sbb daa sub aaa cmp pop pop arpl jae jle mov stos mov mov (bad) fndisi(8087 out icebp idiv add or sub dec dec push pop pop imul (bad) xchg fwait mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop imul nop xchg fwait mov mov xlat fsub out repnz add or sub xor add cmp inc dec dec add pusha imul addl mov rcr fsubp jmp add unpcklps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out hlt stc incl unpcklps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa insb jno jl xchg test mov mov (bad) in out hlt cli add and sub ss inc dec push push pop bound jb jge mov test add lret fneni(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl je jg mov xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop fs jne jg mov stos mov mov xlat fsub out repnz add or sub xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fucom call add push adc push and das xor aas inc dec push push pop pusha imul addl mov ret add enter fucom call add unpcklps pop and das xor push push pop pusha imul addl mov rcr fsubp jmp add unpcklps pop and cmp inc dec push push pop bound jae jge mov test (bad) lret fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound jae jle mov stos scas mov mov fneni(8087 out icebp add cld add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl je jg mov stos mov mov (bad) fsub out repnz add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov xlat fsub out repnz std add or sub xor aas inc dec dec push pop pop gs jne addb add ret enter fsubp jmp add unpckhps and inc inc dec push push pop popa insb jb jge xchg test mov mov fcmovu in out cmc cli add and sub ss inc dec push push pop bound jb jge mov test (bad) leave iret aam loopne jmp cmc sti add or push sbb es aaa cmp inc dec push add arpl jae jle mov test (bad) aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or and das xor aas inc dec dec push pop pusha gs jne addb add mov mov xlat fucom call add push adc pop and das xor aas inc dec push push pop popa data16 jno jl xchg test mov mov (bad) in out hlt stc incl unpckhps pop and inc inc dec push push pop popa insb jb jge mov test mov mov (bad) in out cmc cli add and sub ss inc dec push push pop bound jae jle mov test add aad loopne ljmp adc sbb es aaa cmp inc dec push pop pop arpl jae jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp pop pop fs je jg add cmpsb lods mov mov fcomp loop in repz incb or adc push and das xor aas inc dec push push pop pusha imul addl mov rcr fsubp add add out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov rcr fsubp jmp add unpckhps and inc inc dec push push pop popa insb jb jl xchg test (bad) leave iret aam (bad) ljmp adc sbb es ss inc dec push push pop bound jb jge mov test (bad) aad loopne jmp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov stos scas mov rol rcl fndisi(8087 out icebp testb add or sub xor add and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add sub cmp dec push pop imul jns mov test (bad) lret fcmovu in lock cli add add and inc inc dec push push pop pusha imul test lods mov ret fsub out idiv add adc and xor inc dec add imul mov ret fabs jmp push adc cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insl jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc add pop pop arpl jae jle mov test (bad) leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fcmovu in jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz idiv add or daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out hlt stc incb or adc push and xor cmp inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add adc xor push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne add icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz std add or daa sub dec dec push pop pop bound jb jge add movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc add push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa add add jno jl xchg lods mov mov add fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle add orl test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb add sub inc dec push push pop bound jb jge mov popf mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov add mov add loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul jl xchg lods mov mov xlat fucom out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov add add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb add xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam (bad) jmp add add stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or add add push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb js orl test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push add pop and add xor dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp add dec push push pop popa insb jno jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or dec push push pop popa insb jno jl xchg mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb add add mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop mov aam fsubp jmp add unpckhps pop and inc dec push pop pop insl je orl mov ret add rcr loopne out cmc cld add adc and cs add outsb jne orl mov ret xlat fsubp in hlt sti add adc and das aaa ds dec push pop popa imul addl mov into aam (bad) jmp add and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall add rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov test ret leave into aam (bad) ljmp adc xor push push pop popa imul addl mov mov (bad) jecxz out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub add in repnz std add or sub das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov mov mov mov fcmovu in lock cli add and add xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add and sub cmp add push pop bound jb jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl mov ret rcr fucom call incl unpcklps pop and das xor push push pop pusha imul addb cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl je add jg mov stos scas mov rol rcl fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov xlat fsub out icebp idiv add or pop sbb cmp push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov rol add int3 rcl fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add add pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and sub cmp dec push push pop popa data16 jno jl xchg add leave into rcr fsubp jmp out hlt stc incl unpcklps pop and xor push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add or push sbb sub ss inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc add add pop and das xor aas inc dec dec push pop pusha add jl xchg lods mov mov fcomp loop in repz incb or adc push and cs ds dec dec push pop pop fs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add add sub dec dec push pop pop arpl jae jg mov stos scas mov rol rcl fneni(8087 in lock add or push sbb es add add cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pusha imul mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 add in repnz add or sub dec dec push pop pop arpl jae add mov test (bad) leave iret aam (bad) ljmp adc xor push push pop pusha imul addl popf mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg add add mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) int3 rcl faddl loop in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in add jmp cmc sti add or push sbb sub cmp dec push push pop popa insb jb jl xchg test ret leave into aam fsubp jmp add unpcklps pop and das xor push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add add add adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incl unpcklps pop and add das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov movsb test (bad) aad loopne ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec add pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop arpl jae js orl test (bad) leave into aam (bad) jmp add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov lcall mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb add int3 rcl fsub out repnz add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out hlt cli incl unpckhps pop and inc inc add pop popa insb jb jl xchg lods mov add mov rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam add (bad) jmp add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl mov test mov mov fcomp jecxz out repz add add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcl fucom call add or sub dec dec push pop add push jne jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb and sub aaa cmp push pop bound jb jge mov test mov mov (bad) in out hlt stc add add and inc inc dec push push pop popa imul addl mov rol rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) ljmp unpckhps pop and inc add add push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub inc dec push pop pop bound jae jge mov test mov mov aam (bad) ljmp adc xor cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push add add imul (bad) xchg lcall rol rcl fnop in lock sti add and sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop popa imul addl mov lods mov mov xlat fucom out repnz add or and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test add into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pusha imul addb cmpsb add add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub inc dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound outsb jae jg mov stos scas mov mov iret aad (bad) ljmp adc xor push push pop pusha imul addl mov ret rcl fucom out repnz std add add adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 in lock add or add push sbb sub cmp dec push push pop popa add jb jge xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb and sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov add (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and inc dec dec (bad) lea scas mov mov add loopne jmp idiv add or push sbb sub ss inc dec push push pop imul test mov mov fsubp jmp clc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push add bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub add push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fnop in lock cli add add add add add pop and inc inc dec push push pop pop gs jne addb movsl stos scas mov mov fcmovu in lock sti add and inc inc dec push push pop pusha imul addb add rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg mov mov (bad) jecxz out repz incb push adc add add push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub add add cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp add cld add or pop sbb daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp add push pop pop bound add jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb xchg xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle add movsb add (bad) aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol add lret rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub add out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add (bad) ljmp unpckhps pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne add add ljmp adc sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add add pop or sbb add ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb add add es ss inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push pop pop arpl jae jge add movsb test (bad) leave into aam (bad) jmp add unpcklps push and cs add aas inc dec dec push pop pop fs je jnp test cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push add insb jno jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov add fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov aad loopne ljmp adc xor push push pop pusha gs add add add addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg xchg popf mov mov fcomp loop in repnz std add or add xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps sbb and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl add mov aad loopne ljmp adc sbb sub cmp dec push push pop popa imul addl mov ret rcr fucom call add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl pushf mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop arpl jae jp test movsl stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge xchg test mov mov fcomp loop in repz add std add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) add loop in repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave add aad loopne jmp cmc sti add add add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fnclex jmp or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl (bad) into aad in repz add adc pop daa cs popa imul fwait mov leave rcr loopne out idiv add push adc push and xor ds dec dec push pop pop arpl jae jle mov test add mov aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add (bad) lret rcl fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret add aam (bad) ljmp unpcklps pop and das xor dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz clc add add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add sldt add adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec add imul mov mov mov fcmovu in out cmc cli incl and add xor dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp adc xor push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg add mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb add jl xchg lods mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg add add mov mov xlat fsub out repnz adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp or adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub dec dec push pop pop bound jb jge mov test add int fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov rol iret aad loopne ljmp adc xor add pop bound jb jl xchg lods mov mov rcl fucom out repnz add bndldx sub dec dec add imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov stos scas mov mov fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push pop pop bound jae jle mov stos scas mov mov fnop in lock add add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop popa insb jb jl xchg test mov mov aad loopne ljmp adc sbb sub ss inc dec push push pop bound jb jge mov test mov mov aad loopne jmp idiv add or push sbb daa sub xor cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jno jl xchg test mov mov fcomp in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom call add push adc push and cs ds dec dec push pop add add push je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb add xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push add cmp pop pop arpl jae jle mov test (bad) lret fnop in lock sti add and sub ss inc dec push push pop bound jb jge (bad) xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop popa imul addl popf mov test mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop fs jne jnp xchg cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov test (bad) aad loopne ljmp adc sbb es aaa cmp inc dec push push pop bound jae jge mov test (bad) leave add iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jb jl mov test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fsub add in repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov mov add loope in icebp idiv add or pop sbb daa sub aaa cmp push pop bound jae jge mov test mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push add add es aaa cmp inc dec push push pop bound jb jge xchg test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas add push push pop popa imul addl mov ret rcl fucom call add push adc push and cs cmp inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or sub add cmp pop pop arpl je jle mov stos scas mov mov fnop in lock sti add or push sbb sub ss inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz in repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub inc dec push pop pop bound add jae jge mov movsb test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle add add mov mov (bad) in out hlt stc incl unpckhps and inc inc dec push push pop popa imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add pop or sub dec dec push pop pop arpl jae jle mov test add lret fcmovu in lock sti add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and aas inc dec push push pop pusha imul addb cmpsl lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rolb add aad loopne jmp idiv add or push sbb es ss inc dec push push pop data16 jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha add jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push add popa insb jno jl xchg lods mov mov xlat fsub out repnz idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repz std add or add add sbb cmp pop pop bound jb jge mov test add aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov aad loopne jmp cmc sti add and sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc add xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli add add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop add add imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec add pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps pop and das xor add dec push push pop pusha gs jne add add fwait mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall lahf movsb stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos mov mov aad in sbb dec push pop popa push mov mov (bad) fucom in hlt cld add adc and xor inc dec add push pop arpl jns mov mov ret or xor inc inc dec push pop fs je orl mov fldl in repz add adc push and dec push pop arpl jp mov mov fsubp in cmc std add sub cmp push pop popa imul popf mov (bad) into (bad) fsubp jmp idiv add or push sbb es ss inc dec push push pop popa pop or pop sbb daa sub aaa add dec dec push pop pop bound jae jle mov test mov mov flds (bad) jmp idiv add or push sbb es aaa cmp inc dec push pop pusha push xchg stos scas mov mov fneni(8087 out repnz add or sub xor ds dec dec push pop pop arpl je jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or push sbb cmp inc dec push pop pop imul jp test (bad) xchg pushf mov mov fcomp jecxz out repz incl unpckhps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov xlat fsub out repnz incb or adc and sub aaa cmp pop popa insb jb jle mov stos mov mov (bad) jecxz out repz incb push adc pop and aas inc dec push push pop pusha add jl xchg test mov mov fnop in lock add or pop push and xor push pop pop arpl jne mov (bad) lret fcmovu in out cmc cli incl sub aaa cmp inc dec push push pop outsl jbe addl mov ret rcl fdivp cli add or push sbb es ss dec push pop pop arpl add addb stos mov mov fnclex jmp add push adc pop and das xor inc inc dec push push add pop arpl jg mov stos mov mov (bad) fsub out repnz add or daa sub inc dec push push pop bound jae jle mov test ret leave into rcr fsubp jmp add unpckhps pop and inc inc dec push add arpl jae jle mov stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop bound je jg mov add lods mov mov fcomp in lock cli add or xor push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa data16 jb jge mov lret rcl fsubr clc incl unpcklps add pop and cs aas inc dec dec push pop pop gs jl xchg lods mov mov (bad) fsub jmp idiv add or daa add xor pop pop imul (bad) xchg lcall vaddsubps fneni(8087 out hlt sti add and das aaa inc inc dec push push pop pusha imul addb mov ret rcl fsub call adc sbb sub cmp dec push data16 mov mov add loop repnz add adc push and xor inc dec push add imul xchg lcall (bad) int3 rcl fsub out repz add or sub dec push pop pusha push mov lods mov mov xlat fucom jmp cli add adc and das aaa ds dec push pop imul mov mov ret rcr fucom call add and inc inc dec push push pop pusha gs jne jnp pushf lods add aad loopne jmp cmc sti add or push sbb sub ss inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz out repz incb or adc pop and das xor push push pop popa insb jb jge mov test mov mov (bad) in out cmc cli incl pop and inc inc add push pop popa insb jb jl mov test (bad) lret fnop in lock sti add or pop sbb daa sub push pop pusha push mov ret fabs call or xor inc dec push pop pusha addr16 addb lods mov mov fucom jmp idiv add adc pop and inc dec push pop gs je (bad) mov add fucom jmp add unpcklps and xor cmp pop pop fs jp xchg add ret rcr fsubp jmp add adc xor aas inc dec dec push jb addb mov (bad) int3 rcr loop lock cli add and cs push pop pop imul mov mov fabs jmp add and sub cmp dec push pop pusha outsl je jg mov mov mov fsub call pop movhps es push pop popa imul add jnp xchg lods mov mov (bad) ljmp adc cmp push push pop bound jb jge mov mov mov fucom call or add pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz add out repz incb or adc push and cs ds dec dec push pop pop add jo jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in add stc incl add or adc pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jg mov stos scas mov rol rcl fneni(8087 in lock add or push sbb es ss inc dec push push pop popa insb jb jl mov test mov add fcmovu in out hlt cli incl and add add xor push push pop popa imul addl mov rcr fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec add pop arpl je jle mov test (bad) aad loopne ljmp adc sbb sub ss inc dec push push pop popa insb jb jl xchg test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or and cs aas inc dec dec push pop pop fs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb sub cmp dec push push pop popa insb jno jl xchg lods add into aam (bad) jmp add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf add add (bad) aad loopne jmp cmc sti add or push sbb es ss inc dec push push pop bound jb add mov test (bad) leave iret aam (bad) ljmp adc xor cmp inc dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov add add rcl fsub out icebp idiv add or adc sbb cmp inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub ss inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat add loop add add repz std add push adc push and xor ds dec dec push pop pop imul nop xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul ja addl mov rcr fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor add inc dec push push pop bound jb jge xchg stos scas mov rol rcl fsub call add unpcklps and add add dec push push pop arpl je jg mov lods mov mov fcmovu in lock add or sub xor aas inc dec push push pop popa data16 jno jl xchg stos scas mov rol rcl fucom add out cmc cli add or push sbb es aaa cmp pop pop fs jne addl mov ret rcr fucom call add push adc xor ds dec dec push pop pop gs jne addb add mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb aaa cmp pop pop arpl jae jle mov test mov add fcmovu in out cmc cli add and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov add add (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec add pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop bound jb jge mov test mov mov add rcr fsubp jmp add push adc sbb and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor push push pop pusha imul addb cmpsb add (bad) int fcomp loop add repz std add or sub xor ds dec dec push pop pop arpl je jle mov stos scas mov mov fneni(8087 in lock add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov stos mov mov (bad) fsub out icebp idiv add or add adc sbb daa sub inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) ljmp unpckhps pop and add xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave add aad loopne ljmp adc sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push add arpl je jle mov stos scas mov mov fcmovu in out cmc cli incl and sub cmp dec push push pop add insb jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb daa sub aaa cmp push pop bound jb add jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and sub xor push push pop popa imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pusha imul addb add mov add fcomp loop in repnz std add or sub xor ds dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop imul mov stos mov mov add rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out lock add or add sbb aaa cmp pop pop bound jb jge mov test mov mov (bad) add in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fadds fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jo jnp xchg cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add and add xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or sub inc dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec add dec push pop pop arpl jae jle mov test les lret fnop in lock sti add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop popa imul add jnp xchg mov mov fcomp loop in repnz std add or sub dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb xor ds dec dec push pop pop imul add (bad) xchg lcall rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addl mov pop pop fs je jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne add fwait mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp add inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add add pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno add mov lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push add bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg xchg popf mov mov xlat fucom out repnz add or add sbb cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov movsb test scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop add je jg mov test les add into aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz add hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fiadd jecxz out repz incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp incb push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor cmp inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc add sbb and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das add add ds dec dec push pop pop fs je jg test movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and sahf mov (bad) lret loopne out idiv add sub cmp push pop pusha push xchg mov mov xlat fsub out repnz add or adc sbb aaa cmp pop pop arpl jae jle test movsl stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop popa imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop imul mov mov mov fcmovu in out cmc cli add and add push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor add inc dec dec push pop pusha gs jne addb cmpsb lods mov mov add fucom call add push adc push and cs ds dec dec push pop pop imul nop xchg lcall rol rcl add loope in repnz add or sub dec dec add add pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov rol rcl fneni(8087 in lock add or push sbb es ss inc dec push push pop bound jb add add lea test (bad) leave iret aam (bad) ljmp adc add aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das add push push pop popa imul addl mov ret rcl fucom call add push adc push and xor ds dec dec push pop pop fs je jg mov add lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out add cli incl adc xor push push pop popa imul addl mov add mov fcomp jecxz out hlt stc incb unpcklps pop and inc inc dec push push pop pusha imul addl mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push pop pop bound jae jle mov test (bad) leave iret aam (bad) ljmp adc xor add pop bound jb jge mov test mov mov (bad) in ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz add hlt cli incl add unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp pop pop bound jae jle mov test (bad) lret fcmovu in out cmc cli add and add xor cmp dec push push pop popa data16 jno jl xchg add leave into aam (bad) jmp add unpcklps pop and das xor dec push push pop popa imul addl mov ret rcl fucom call add or sub xor ds add push pop pusha imul addb cmpsb lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repz std add or adc pop and das xor dec push pop pusha imul add add addb mov mov fcomp jecxz in repz std add push adc push and cs aas inc dec dec push pop pop fs jne addb add ret rcl fucom out repnz std add or sub xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb sub dec dec push pop pop arpl jae jle mov add mov mov fnop in lock sti add and sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha add jb jge xchg test mov mov fcomp jecxz out repz add add and inc inc dec push push pop popa insb jno jl xchg test mov add add fcomp jecxz out repz incb add unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jle mov test (bad) lret fcmovu add in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg test mov mov aam (bad) jmp add and inc inc dec push push add insb jb jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop add insb jno jl xchg lods mov mov fcomp jecxz out repz incb add add or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add sbb add sub aaa cmp inc dec push push pop bound jb jge mov test add aam (bad) ljmp adc sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov aam fsubp jmp add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop imul mov stos mov mov (bad) fndisi(8087 out icebp idiv add add sub xor ds dec dec push pop pop add imul (bad) xchg lcall mov fnop in lock sti add sbb daa sub aaa cmp pop pop arpl jae jge mov test (bad) leave into aam fsubp jmp add unpcklps pop and aas inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb cmp pop pop arpl jae jle mov add add test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addl mov rol int fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop add jo jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound imul (bad) xchg lcall add (bad) aad loopne jmp cmc sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg test mov mov add add fcomp jecxz out repz incb push adc push add inc inc dec push push pop pusha imul addl mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test rol rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz add repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno js orl test mov mov fcomp jecxz out repz incb add unpckhps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or adc sbb cmp pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and add add xor cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub cmp pop pop bound jb jge mov test mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop add imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp add add push pop pop add outsb jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl add add jae jle mov test (bad) leave into aam fsubp jmp add unpcklps sbb and inc inc dec push push pop pusha imul addl mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa imul add pushf mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jae jge mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jge xchg mov mov fcomp jecxz out repz incb add unpcklps pop and das xor aas inc dec dec push pop popa insb jb jl xchg lods mov mov fcomp jecxz out repz incb or adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add add int xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov rcl fsub out icebp idiv add or pop sbb aaa cmp pop add imul mov mov mov (bad) add add add jmp add unpcklps and inc inc dec push push pop add insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or and xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test add into rcr fsubp jmp add push adc add pop and cs aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpckhps pop and inc add add push push pop pusha add jl xchg lods mov mov xlat fucom out repnz std add or adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add push or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop add pop imul mov mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov add fcmovu in out cmc cli incl and inc inc dec push add popa insb jno jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push add fs je jg mov stos scas mov mov fcmovu in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall add mov aad loopne jmp cmc sti add and sub ss inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov fcomp jecxz in repz incb or add and inc inc dec push push pop pusha imul addb cmpsb add enter fucom call add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos add add add (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl je jg mov stos scas mov mov fnop add in lock sti add and sub cmp dec push push pop popa add js (bad) mov test mov mov (bad) jecxz out hlt stc incb add and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz add or adc push and cs aas inc dec dec push pop pop fs je addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add push or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov aam (bad) jmp add unpcklps pop add aas inc dec push push add data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc pop and das xor aas inc dec dec push pop add imul addl mov rol rcl fucom call add or sub xor ds dec dec push pop pop arpl je jg mov stos scas mov mov fneni(8087 in lock sti add and sub cmp add push push pop popa data16 jno jl xchg lods mov mov xlat fsub call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock sti add sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test add into aam fsubp jmp add unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov ret rcl fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop fs je jg add mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound add jle mov test (bad) leave iret aam (bad) ljmp or push sbb sub cmp dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or unpcklps pop and das xor push push pop pusha imul addb add add rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov add lret fcmovu in out cmc cli incl and inc inc dec push push pop add insb jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop add jo jnp test cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz add out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incl unpcklps add and inc inc dec push push pop popa imul addl add rcr fsubp call add add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs add addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add add sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp add push sbb es ss add push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop imul add jns test movsb stos scas mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop add insl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop add jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle add movsb test (bad) lret fcmovu in lock cli add and inc inc dec push push pop popa imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop arpl je jle mov stos scas mov rol rcl sub ds dec push pop imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push add daa sub aaa cmp inc dec push push add push (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa add sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push and cs aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub dec add push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa add jb jge xchg add ret enter fucom call add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push pop pop bound jae jge mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos add lret rcl fndisi(8087 out add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov rol rcl fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz add add unpcklps pop and das xor add dec dec push pop pop gs jne jg mov stos add scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg mov test (bad) leave into aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov add add rcr fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp inc dec push push pop bound jb jl add mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov fcomp add add call add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add add unpcklps pop and aas inc dec dec push pop pop fs je jg mov nop xchg lcall mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or add push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add (bad) jmp add push adc sbb and sub xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds add add push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop add insl jb jge xchg test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push add push orl test ret enter fsubp call add or sub dec dec push pop pop bound jb jge xchg lods mov mov rcr fucom call add or sub dec dec push pop pop add outsb jae jle mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov add mov scas mov mov fcomp jecxz out repz incb or add pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb add (bad) aad (bad) ljmp adc xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf add add (bad) leave iret aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov rol rcl add loop in repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop add imul mov scas mov add mov fcomp jecxz out add stc incl push adc push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov add add fucom out hlt stc incb push adc push add das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul (bad) xchg cltd lahf add mov fcmovu in out hlt cli incl unpcklps pop and das xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne add lock cli add pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add sub cmp dec push push pop popa data16 add jge mov test mov mov fcomp jecxz in repz std add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp incl pop and aas inc dec dec push pop pop gs jne jg add cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc push push pop pusha imul addl mov add enter fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam (bad) jmp add push adc push and das xor aas add inc dec push push pop pusha gs jne addb movsl stos mov mov aad fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop add outsb jae jle mov test (bad) leave into aam fsubp jmp add add adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb mov mov xlat fsub out icebp idiv add or pop sbb add sub dec dec push pop pop arpl jae add add orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor inc inc dec push push add imul addl add xchg fwait mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fadds fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov add ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov add add aam (bad) ljmp unpcklps pop and sub xor push push pop pusha imul addb cmpsb stos mov mov rcl fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul jl xchg lods mov mov xlat fsub out repnz add add sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incb push adc add add and cs add inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out repnz add or sub inc dec push add arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock add or push sbb daa sub aaa cmp pop pop imul add lods mov mov fcomp jecxz out repz incb or adc pop and inc inc dec push push add imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or add sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add enter fsubp call add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam add in lock cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop add insb jno jl xchg add lods mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add (bad) leave into aam fsubp jmp add push adc push and sub xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock cli add and aas inc dec dec push pop pop gs jne addb movsl add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add test movsb stos scas mov mov add (bad) ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lea lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in add clc std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov add (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl add unpcklps pop and das xor add dec push push pop pusha imul addb cmpsb stos mov mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge add mov mov (bad) jecxz out repz incb or adc add and das xor add aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg fwait mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec add add popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop bound imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add js orl test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov movsb test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add add movsb test (bad) leave iret aam (bad) ljmp unpcklps sbb and inc inc dec push push pop pusha imul addb movsl stos add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg add add mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fldl jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop add je jg mov stos scas mov add aam (bad) jmp add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc das xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add enter fucom call add push adc push and xor add push pop pop fs jne jg mov stos scas mov mov fcmovu in add ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs add addl mov rol rcl fsub out icebp idiv add add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jge mov (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl add and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor dec push pop pop fs je jg mov stos scas mov add (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es add cmp inc inc dec push push pop bound jb jge xchg cmpsl lods mov mov add fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec add push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add or adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb mov mov xlat fsub out icebp idiv add or pop sbb xor ds dec dec push pop pop arpl add push orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec add pusha imul addb add test movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol roll xlat fucom out repnz add or daa sub inc dec push pop pop bound outsb jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov add mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb and sub dec dec push pop pop bound jb jge mov test mov mov aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 ja (bad) xchg cmpsl lods mov mov fcomp loop add in repnz std add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl add or adc das add cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 cmp sub dec sub mov jge fisttp loopne pop push pop leave sar das adc adc ret lea sub jne xchg insb out or arpl icebp pop lcall xor pop xchg je (bad) xor addr16 fisttpll andb mov scas fcmovnu aad pusha (bad) movsl cmp (bad) fsub mov mov daa mov paddd sbb inc fcoml sub in and sub add cs (bad) mov push repnz fs call (bad) (bad) dec int3 enter lret mov ja jnp push cmp test nop test cmp mov cmp test cmp cmp mov cmp cmp cmp test cmp mov test cmp cmp test test jmp call cmp cmp test cmp mov cmp cmp cmp cmp test mov cmp test cmp cmp test inc test cmp cmp test mov cmp cmp cmp cmp cmp mov test cmp test cmp cmp ret pop test test cmp cmp clc adc test cmp cmp cmp cmp call dec hlt add or out cmpsb cmpsl sub sbb add jp jl mov lcall (bad) (bad) incl aad (bad) lock test cmp jmp cmp test test cmp pop cmp test cmp cmp cmp add cmp cmp test cmp test mov cmp cmp test test cmp mov inc cmp test cmp cmp cmp cmp cmp test cmp dec test cmp cmp test test cmp cmp test cmp dec cmp cmp cmp cmp test cmp test cmp cmp test dec test cmp cmp test cmp cmp cmp cmp cmp dec test cmp test cmp cmp test test cmp cmp mov test cmp test cmp test test cmp cmp cmp call test cmp cmp test nop test cmp cmp test push test test cmp cmp cmp test cmp cmp test nop test jne mov test cmp cmp test add test test cmp cmp cmp mov test cmp cmp test nop add test cmp cmp test call test test cmp cmp cmp jmp test cmp cmp test nop pop test cmp cmp test push test test cmp cmp cmp push test cmp cmp test nop push test cmp cmp test mov test test cmp cmp cmp call test cmp cmp test nop pop test cmp cmp test cmp jl test test cmp cmp cmp mov test cmp cmp test nop sub test cmp cmp test mov test test cmp cmp cmp sub test cmp cmp test nop call test cmp cmp test mov test test cmp cmp cmp push test cmp cmp test nop mov test cmp cmp test push test test cmp cmp cmp push test cmp cmp test nop push test cmp cmp cmp test call test test test cmp test jmp test test test cmp cmp pop test test test test cmp inc cmp test test cmp cmp push test test test test test pop cmp cmp cmp cmp cmp inc cmp cmp cmp test test or cmp test test test test xor cmp cmp test test test mov test cmp cmp test test cmp jne cmp cmp test test test mov test test cmp cmp cmp cmp cmp cmp cmp cmp dec test test cmp test test dec test test cmp cmp test dec test test test cmp cmp dec test test cmp cmp test pushl test test test test cmp cmp cmp cmp cmp cmp cmp cmp test test cmp test test test test cmp cmp test test test test cmp cmp test test cmp cmp test test test test pop test cmp cmp cmp cmp cmp cmp cmp cmp test test cmp test test test test cmp cmp test test test test cmp cmp test test cmp cmp test cmp test cmp test test cmp test test cmp cmp cmp xor test test cmp test test cmp cmp cmp test test cmp test test cmp cmp cmp test test cmp test push test cmp cmp cmp test test cmp test test cmp cmp cmp test test cmp test test cmp cmp cmp test test cmp test test cmp cmp cmp test test pop cmp test test cmp cmp cmp test test cmp test test cmp cmp cmp test test cmp test test cmp cmp cmp test test cmp test test cmp cmp cmp or test test cmp test test test jne cmp cmp cmp test test jmp cmp test test cmp cmp dec lods aad cmp out adc or jb push pop mov ss jle in shrl jne adc lret jnp int repz dec mov jmp add daa repnz jno inc push inc (bad) cmp test test cmp test test cmp cmp cmp test xor test cmp test test cmp cmp cmp test test cmp ret adc (bad) pop shll stos xchg pop ret xchg data16 fisttpll aaa jge js inc mov mov push or popf pop push cmp push in (bad) lock xor fwait (bad) lret xchg outsb sub mov shrb mov sti das xchg fcomps into enter cwtl (bad) mov std insl fsts sbb in pop sbb movsb fiadd test sbb sub mov push and jbe pushf dec hlt add or out cmpsb cmpsl sub lods pop aad ret cld or sub add add ret fcmovb test cmp test test pushl cmp cmp cmp test test pop cmp test test cmp cmp mov cmp cmp test cmp cmp mov test test cmp cmp cmp push test cmp cmp test cmp mov test cmp test test cmp mov cmp test test test cmp mov cmp cmp cmp cmp cmp inc cmp test cmp test test cmp jne cmp test cmp cmp test mov test cmp cmp cmp test inc cmp cmp test cmp test inc cmp test test cmp cmp cmp jne test test test cmp cmp pop cmp cmp cmp cmp cmp mov test cmp test test cmp mov test cmp cmp test test mov cmp cmp cmp test cmp add cmp test cmp test cmp mov test test cmp cmp test mov test test cmp cmp cmp add cmp cmp cmp cmp test mov cmp test test cmp test add cmp cmp test test cmp lods cmp cmp test cmp cmp test je test cmp test cmp test add test cmp cmp test test mov test cmp cmp cmp cmp cmp jne cmp cmp cmp test cmp mov test test cmp test cmp cmp jne cmp test test cmp cmp mov cmp test cmp cmp test push cmp test cmp cmp test pop cmp cmp test cmp cmp push cmp cmp cmp test test push test test cmp cmp cmp push cmp test cmp test test push test cmp cmp cmp cmp push test cmp test test test push cmp cmp cmp cmp test push cmp test test test cmp push cmp cmp cmp test cmp call test test test cmp cmp add cmp cmp test cmp test ret and jmp jp pop jl mov lcall aad cmp out adc or jb push pop mov ss jle in shrl jne adc lret jnp int repz dec mov jmp add daa repnz jno inc push inc (bad) adc (bad) pop shll stos xchg pop ret xchg data16 fisttpll aaa jge js inc call test sbb sub mov add and jbe mov mov in pop add outsb fwait cli xlat cwtl fldcw add pusha int mov (bad) outsb in mov (bad) insl xchg das fisub or (bad) jg sbb ds outsb mull add gs or jnp outsb icebp jle shufps fsubrl sbb je outsb loope xchg sbb gs or jnp outsb loope mov outsb push stos adc test xor sub jg mov push or popf pop push cmp push in (bad) lock xor fwait (bad) lret xchg outsb sub mov shrb mov sti das xchg fcomps into enter cwtl (bad) mov std insl fsts sbb in pop sbb movsb fiadd test sbb sub mov push and jbe pushf dec hlt add or out cmpsb cmpsl sub nop call pop or pop jl mov lcall aad cmp out adc (bad) call dec lock sub mulb test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test arpl test rolb mov aam fimull (bad) dec sub rolb out aam stc (bad) rolb dec out dec sub rolb aaa aam sub rolb aaa inc inc sub rolb mov js cmpsl rolb and inc sub rolb loop lds rorl pop loope sub popf inc ret inc sub cmp mov inc sub rorb mov rolb mov rolb mov push cmpsb sub cmp mov fadds enter (bad) jno sub ffreep jmp xor inc sub adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp adcl icebp or cmpsb cmp add fadds sub sub mov sub inc mov push test pop add xchg adc outsb idivb lods push mov faddl cmp mov xlat inc sub push dec sub rolb imulb xchg test rorb sti loopne sub sarl sub das shlb mov rorb lahf loopne sub cmpsb lea sbb shlb rolb mov (bad) mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov push and mov (bad) pop pop sbb mov mov add sar sub pop xchg ljmp mov add (bad) je sub sub cmp add (bad) inc sub xchg adc sub pop or dec jne sub rolb out into data16 cmp mov (bad) inc sub xchg or sub inc sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov ret add aad sub xchg or daa mov inc jno outsb inc sub popf inc ret inc sub cmp mov rolb sub inc sub cmp mov roll sub inc sub cmp mov roll sub inc sub cmp mov roll sub inc sub cmp mov roll sub inc sub cmp mov roll dec mov mov xchg jns mov inc sub (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp (bad) push cmp cmp mov rolb and inc pop scas cmp ret dec movl xchg sbb stos pop rolb mov rolb sub inc sub subb rolb ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl ss sarl pop rorb push roll xchg adc xchg adc xchg iret inc sub inc sub das mov dec lcall sub dec scas lods roll dec inc outsb sub lret inc sub xchg sbb scas push rolb sub adc dec into inc sub lods dec stos gs xchg aam les mov (bad) in mov push stos sub inc pop sub rolb and inc sub out inc pop pop xchg pop jp test pusha push inc sub cmp mov pop int sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov and jp pop cltd (bad) shlb enter xchg lds popf movsl mov mov pop add cmpsl push inc sub lret sub dec sub roll enter enter mov test in xchg pop inc test aam sub pop sbb icebp pop sbb and inc pop movsl push inc fs inc jno cmpb pop out jle cmp es fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll scas fisttpll enter enter mov xchg into outsb notb sub das je sub xchg loopne sub nop push mov and or icebp (bad) xor and inc pop dec pop xor pop sub popa sub push sub popa sub subl movsb mov adc pop test push cmpsb cmp jge movsl mov js test jns test call mov pop add daa sub inc in out gs pop or sub inc sub sub ljmp add mov or and xchg sub cmp mov fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls stos fmuls sub inc sub cmp das mov ret cmp mov ret inc sub pop mov sub fxch and dec aam fsubrl sub shrb das enter enter mov xor pop inc inc sub ffreep inc pop das mov sub pop or dec ret mov das mov data16 cmp mov sub pop jnp out sub adc mov cmp mov mov jbe aam subb pop rolb je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je xchg std je or dec sub mov das mov sub rcrb xchg mov (bad) xor popf dec ret inc sub cmp xlat pop das mov and mov sub push test mov xchg icebp pop adc pop loop jle push mov and sub (bad) call icebp mov inc sub lahf dec aam das rolb loop inc sbb roll enter pop inc fldcw mov rolb enter pop sub mov rolb pop cmpsl inc mov pop xchg out subl push add sub lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor lret pop xor mov xor pop movsl popa aam aam jl das ja cmc enter ffreep jo rolb out subl mov xor pop cmpsl inc mov pop xchg pop rorb cwtl fldl sub and les (bad) jmp les sub fucomip repnz rcrl jno rcrl psllw daa mov xchg nop das adc and inc and sub mov mov shlb rolb and sub jmp or dec aad sub das mov jl das aaa das pop add shll rolb in lods test and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and fistl mov push and inc cmpsb pop mov mov push rolb and dec jp xchg nop das xchg test rorb js inc sub (bad) push stos popa pusha inc sub movl out fsubrs dec push mov cmp xchg rcl mov and jne sub shrb imul jne mov shrb sub xchg nop das (bad) mov rolb daa pusha inc sub rolb loop adc jmp pop push jae adc mov sub inc sub cmp rcrb das sub fmul shlb std sub fs sub loop sti dec and mov in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns sahf in jns mov push xchg sub sub roll icebp pop adc pop loop jl mov or sub inc popa mov mov push xchg sub sub rolb icebp pop adc pop loop jl mov scas stos popa push into mov rolb and inc sub fdivrs ret inc sub pop fcomps cli shrl sub fcoms sub loop jl cmp mov mov cmc sub das ja cmc enter rolb out aam fistpll jb aam pop shrb rolb mov enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter aam outsl mov jp aam pop shrb aam aam pop add popf inc ret inc sub cmp fstpl lods iret mov pop or das xchg test (bad) xor sub inc inc mov mov sbb pop jecxz mov and and rolb negl das dec fs sub das mov je push xchg pop jecxz sti sub inc sub cmp pop das das sub int3 shlb adc sub mov mov and mov sub inc and ror data16 cmp ret push and inc sub jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge xchg jge jnp cmp cmp pop adc pop mov mov sub cmpsb cmp cmp rcrb ret jge mov sub adc mov pop add xchg pop xlat inc sub push push pop das (bad) xchg pop fild cmpsb ffreep inc mov aam aaa mov dec mov pop subb cmc fdivrs data16 cmp xor and aam push cmp data16 cmp mov and aam push cmp mov aad cmp roll sub sub rolb and cmp rclb pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg pushl xchg inc pop das inc sub sub mov inc cmp xchg xor inc sub rolb and in mov scas sbb inc sub ffreep test rolb lods push out mov rolb es inc sub rorb das roll lahf int sub shrl rolb (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push push (bad) std push jmp push lret sarb mov push inc sub adc push lahf aam sub movsb xor mov inc jmp mov movsl pop lret pop iret xor dec lahf roll and (bad) mov rolb loopne inc jmp lahf js mov jb sub push dec scas (bad) inc sub (bad) xchg xor inc sub das sarb mov (bad) mov roll pop inc cmp mov das mov aam call inc sub roll pop shrl mov roll dec or aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs aas dec fdivs cmpsb rolb (bad) mov roll pop inc cmp mov das mov sub (bad) mov roll pop inc cmp mov das mov sub push (bad) aad das (bad) shll das mov pop mov aam sub aam je das jbe aaa jl sub movsb inc sub shrl sarb sub (bad) dec aam das rolb mov (bad) mov roll pop inc cmp mov rolb and inc pop pop mov inc sub sarb xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub xlat pop sub mov mov sarl sub lds mov das jbe aaa jl sub das das sub xchg nop das adc dec push stos aam pop add and inc and aaa inc sub rolb loop into imul push test shrb sbb inc sub pop pop and pop push and dec cltd movsl (bad) adc imul les and push into push scas push (bad) sub pop cmp and inc das mov rolb rolb xchg les das (bad) xor fadd in mov adc cmp ret jmp sbb dec rolb cmp (bad) xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor movsb xor sub inc sub pop inc sub push push sub rolb dec movb pop lea pop mov roll dec das mov dec sub dec dec fwait add and xor sub add and inc pop push pop or dec cmp sub das mov call enter mov cmp aam shrb sub shrl sub shrl jnp test daa sub (bad) jmp adcb aaa int3 inc sub add mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov into pop xor mov inc jnp cmpsl or adc mov sub das adc xchg outsb scas aad push ror jae rcrl outsb scas pop or sub xor mov (bad) int3 aad push inc sub shrb sub shrb sub rolb loop mov mov enter aad inc cltd jecxz inc jnp das adc das adc rolb setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall setp jge lcall rol in mov sbb xor adc mov mov adc aam dec and imul (bad) das lods rolb dec shrb dec gs pop mov pop inc and rol ljmp inc test shlb in cmpsb fild sub subl rolb mov mov inc sub cwtl int3 lods pop aad sub push sub rolb dec ficom mov fiaddl dec inc inc sub rolb imul sub dec push in dec sub and mov lods pop mov lods dec mov mov sbb aaa lods push mov xor sub insb and inc rorb aam push add rclb (bad) aam sbb mov roll cmc pop cmp sub (bad) in mov loope mov mov xchg (bad) ljmp lods mov sub pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop lret pop into push scas pop mov sub rolb mov das repnz pushf mov sub adc sub push jge xlat lret into data16 cmp mov aaa mov in mov rclb aam pop mov sub mov das sub add scas cmp and rcrb sub das sub das mov mov in jge xlat and xchg mov lods push add rolb test rol shlb insl popa sub sub sub rcrb mov mov rolb cmc xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl xchg jl mov sub dec insl sub (bad) jne mov rolb mov dec inc sub rolb daa in inc sub rcrb mov (bad) jno sub loope push int3 dec pop pop push test sbb push sub fcmove pop stos pop jno jecxz scas fisubl cmp mov loope mov mov xchg jle stos movsl mov pop push jmp dec xchg mov xchg sbb sub adc dec out sub dec jne mov roll sub sub fsubs sbb loopne sub movsb dec dec sub push test rol jmp arpl (bad) jmp mov pop insl sub roll sbb and adc fmuls mov inc sub int3 dec mov ret sub (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) pop jns (bad) (bad) mov add sub cld inc sub (bad) xor sub sub pop pop test ror scas xchg inc sub dec jno mov in sub or aam push scas sub rolb div int3 shll adc mov push int3 outsb cli adc lods cmpsl into jle pop or mov lea pop aad cmp push mov sub lods pop mov icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp or icebp mov lods mov dec les dec push arpl jb and call pop pop inc and adc fbstp call sub jns xlat xchg (bad) call and dec xchg xlat sub push test xchg into aas test aam mov mov nop sub jnp das mov sub pop sbb cmpsb push inc xchg loope push jmp dec das mov jnp mov or mov jg pop das (bad) sub cmp xor roll sub int3 in cwtl dec mov sub mov test aad ret mov mov pop xchg loop ret inc sub repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz or repnz fiadd mov inc mov das push dec (bad) xchg aaa pop int or inc ret les mov inc (bad) mov inc enter pop lock dec hlt mov sub mov lods lock mov dec shll sub popf aam xchg and movsl aaa pop int adc mov mov inc (bad) mov inc shlb inc int cmp dec ficoml pop idivb xor shrb push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es push es (bad) xor inc iret mov jge mov les sub cmp pop das or mov inc lret mov sub sub movsb aam sahf xor mov pop movl sub mov dec int3 xchg xor movsb inc ret dec xor inc into mov adc movsb xor popf and mov inc sub xchg push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope push push loope lods aam das mov pop xlat mov and shrb gs xchg and mov xor mov lods fildl mov pop loope sub test jg mov lods pop jge mov inc iret mov sub movl xor mov add subb lret mov sub lods aam xchg and test pop loope and mov sub xchg aam xchg aaa dec ret movsb and mov adc dec mull dec xlat mov dec (bad) xorb (bad) mov pop jmp mov inc ret inc sub mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec (bad) mov dec sarb int das add movsl and movsb sub movl (bad) std pop das adc movsb xor xorb (bad) mov pop out inc ret adc mov daa pop ret mov or inc shlb inc int add cmp push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf push fs lahf dec in mov inc (bad) xchg sub mov pop lds inc ret movsl xor aam mov pop dec iret mov aaa dec ret mov ret cmpsb xor xor mov aaa dec shll mov jnp mov cmp into mov pop mov das push inc (bad) mov sub mov inc (bad) mov and mov pop (bad) mov nop aam xchg aaa dec ret movsb and mov cmp lret movsb and mov xchg aam xchg sub or dec mov das push arpl mov add mov pop int cmp fiaddl inc sub lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp js lahf icebp dec out aam test mov in inc ret and mov inc into jecxz sub mov pop andl in sub movsb xor mov pop (bad) mov xchg aam (bad) and xchg sub (bad) shrb js mov inc out and movsb and pop lcall add pushf sub andb sahf and movl aaa inc lret mov aaa inc (bad) mov pop mov das add xchg sub movl mov dec iret mov adc dec jne sub jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz sbb jecxz mov das mov ret dec aas mov outsb shlb and mov cmp dec (bad) lock subl (bad) xchg aaa dec ret movsb and and clc addr16 mov inc shlb inc cmp and test js sbbb inc les lretw mov inc sarl sub (bad) mov xor mov pop hlt mov pop lret mov sub and cmp les addr16 ss icebp mov pop dec lds gs fistpl inc ret add mov jns xchg sbb repnz and mov sub (bad) xor repnz ret jbe mov sub mov pop rolb mov das inc sub das mov ret adc aam rolb dec ficom push dec das mov dec int3 mov dec mov jge pop das sbb mov inc into mov pop mov das pop dec lds gs (bad) test and dec ja aam in or aam lods push push das mov sub xchg aam mov lods mov mov ret les mov sub mov pop arpl sub inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and inc and add add dec or stc xchg mov pushf xchg cmp adc cld jge xchg mov setle adc rorl sbb imul mov enter popf pushf les fnstenv test in mov (bad) gs ret out (bad) popa inc adc xchg dec loopne repz je mov xchg push push aad aam out push or imulb sub sub jb cli fcompl adc fcmovb or and dec hlt xchg sbb lcall js jecxz and xchg (bad) push pop pop add pop inc idivl jl mov in cmp bound aam movsb and jp and pop cli mov push daa fs mov dec ljmp clc stos cmp test lret adc les xor test (bad) or jno dec pop mov xor mov hlt pushf cvtps2pi xchg imul add cmpsb cmp xchg loope pop xor inc sub adc xchg cmp adc stos mov jle cltd data16 inc mov add jl inc in ja inc andl add fld pop push insb (bad) leave in lahf ud2 lods lea subl xchg data16 subb mov mov xchg jmp inc add rclb insl mov test adc pop jns lcall cmpsl popf out xor jnp jo mov rcll xor and in push out jg and jp sbb pop in pop and fs mov push ljmp clc pop cmp sub lret stos rol xor adc (bad) pop add std jno dec pop adc cmp pushf es packssdw xchg add cmpsb js xchg add loope xor push xchg inc das popa adc push jle push data16 inc cltd mov jl mov ja inc addl addr16 fnstcw rcrl (bad) xor test loop sub data16 mov xchg jmp inc add rclb insl mov push xchg pusha push pop sbb test ds pop cld shll sahf jnp jo xor sarl or and in push out jg push mov and sbb and fs mov push daa dec inc mov dec ljmp lret stos cmp test and rolb jno add std xor mov mov cmc je imul jne imul cmpsb js xchg add pop cmp lods loope xor sub adc adc das mov (bad) sbb and inc cltd data16 inc icebp mov ja jl mov push fucomip push xor lret js inc cmp xchg outsl add and adc cmc std lds push clc out pop fcompl xor dec loop das ljmp cmpsb add adc aas in or mov fdiv rclb adc xorl pop jmp pop dec aaa out cs or cmpb push push enter negl push pop icebp sbbl sub arpl aam loopne popf jo mov cld addr16 mov cmp inc stc test mov imul (bad) insl adc mov add scas jp in out call mov or shrb lods mov or leave and fstpl add push gs mov stc fucomip xchg xor push js push cmp lret jecxz inc sbb ja cmc std cli mov (bad) xchg pop faddl xor dec loop das ljmp int3 add adc aas in or test fmul rclb adc dec and repnz out cs dec iret repz and ficompl pop enter notl sbb ss sbb (bad) pop sub pushf lahf (bad) inc int ret loopne popf jo mov lahf addr16 and cmp inc stc jg shll jbe test imul sub sbb sahf movsl outsb in mov xchg scas (bad) daa in add ret jp pop and and adc add add adc add add add add and add add add add add adc add add add add into or add add add add add add add sbb add add orb cmp adc push and daa and and and and and and sbb sbb pop sbb sbb adc or push or push or sbb and aaa xor pop push lahf nop jge test ror into in in in in in in repz ror into in jecxz mov xorl mov xorl sub xor aaa xor xor xor sub and and pop sbb adc or push or xorl nop jge lret (bad) fstp fcmovu fcmovnu loope fucom (bad) in jecxz out in in in repnz repz cld cld cld cld cld cld cld cld cld cld cld cld mov xchg (bad) mov mov lea scas fwait andl xorl pop push push dec ds push dec lods movsb pushf mov (bad) int mov mov int mov aam fstp (bad) (bad) in jecxz in in out out out repz div clc div clc cld cld cld cld cld cld mov mov popf xchg jge xorl pop push pop push dec push inc xor lods cmpsb mov mov mov movsb mov mov mov into lret int3 lret rcr fcmovnu loope fucom jecxz in in in repz repz hlt cld cld cld cld cld cld cld cld cld cld cld cld scas fwait xorl (bad) jns xorl pop push push dec ds dec cmp jb mov stos scas test mov movsb mov mov mov int mov iret into fcom rcr fcmovnu in jecxz in in in in in repz repz repz cld cld cld cld cld cld cld cld cld cmpsb xchg jl xchg jl jb xorl pop dec push inc xor push mov movsb mov cmpsb lods cmpsb mov lods movsb mov mov mov les int mov aam fstp (bad) jecxz in jecxz in in repz repz repz cld cld cld cld cld cld cld cld cld cld cld cld mov jae addr16 outsb pop dec push inc cs nop jge mov lods cmpsb mov test mov movsb mov mov mov into int3 lret into (bad) aam (bad) aam fstp (bad) (bad) in jecxz in in div clc cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld sahf mov andl lods cmpsb mov cmpsb mov cmpsb mov test mov mov lods movsb mov pushf (bad) mov (bad) mov lret (bad) mov lds lds (bad) mov lds (bad) repz cld cld cld cld cld cld fwait andl bound sub movsb lods cmpsb mov cmpsb mov mov mov movsb mov lea lea mov xchg mov lea xchg jge xorl pop dec inc cmp inc cmp fcom ror (bad) mov (bad) mov aad gs dec push dec inc xchg jge subl andl pop lods cmpsb mov mov mov push xorl jb xorl pop push gs dec pop push inc dec inc cmp xor cmp inc cmp inc cmp dec inc cmp ds cmp lods movsb pushf int mov lds jb sub pop (bad) jns mov mov cmpsb mov mov lahf nop jge pop dec push dec cmp dec inc push dec inc push dec inc dec inc cmp cmp cmp inc cmp inc cmp inc cmp cmp cmp cmp inc cmp inc cmp push dec inc lret (bad) mov mov lret (bad) mov (bad) mov aad xorl xor mov lods movsb pushf scas test mov pop outsb pop inc outsb pop dec outsb pop inc push dec inc inc cmp cmp aaa xor xor cmp inc cmp dec inc cmp dec imul movsb pushf int mov cld cld cld cld cld mov (bad) (bad) mov (bad) mov (bad) mov into lret pop dec pop push inc mov mov mov test je sub push sub imul jae pushf test mov lods movsb pushf mov movsb mov lret jecxz cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld lahf nop jge mov mov movsb (bad) mov mov cs lret jne mov mov mov gs sbb mov lret rcr fcmovnu in jecxz in in out out out repz cld cld cld div clc div clc repz repz repz repz in in in in in in div clc popf xchg scas pushf mov pushf mov pushf mov mov aam sahf mov mov je sub push sub addr16 subl xchg jl lods movsb ror into in jecxz jecxz in jecxz jecxz in in in pop in in repnz in in in repz repz in in in in in in in in in repz into lret pushf test mov xchg mov mov pop sbb pushf gs sbb xor pop xor pop xor pop xor pop xor push sub arpl les repz in in in in in in in in in repz out out out repnz in in in in in in in jecxz repz lahf nop jge cwtl jg mov mov mov (bad) mov pop push sbb xchg jnp gs sbb jp xor pusha cmp cmp addr16 xchg xchg jp xor imul cld cld cld cld repnz in in in in in in in in in in in in in jecxz jecxz jmp jae xchg jl fwait subl mov (bad) (bad) mov xorl sbb mov gs pop je sub push sub push xor pop xor push xor push xor xor inc ss aam cld cld cld repz in in in jmp jecxz (bad) in jecxz mov fwait andl jl xchg jl xchg jl fwait xorl imul arpl mov inc adc inc sbb and sbb xor xor xor and and and and sbb pop pop (bad) aam cld cld cld in jecxz jecxz loope fstp fcmovnu in in in lahf nop jge andl jae mov xchg jl xchg jl fwait cmpl pop sbb jp xor imul adc inc sbb sbb sbb sbb or sbb dec sub dec sub push dec inc inc and xor repz jmp fstp fcmovnu fstp fcmove int3 lret pop fwait pop gs mov mov mov xchg jl xchg jl mov pop sbb jp xor addr16 fs adc push sub push sub push sub imul jg mov into lret jecxz cld cld cld int mov popa cmp pop xor cld cld fstp fcmovbe aam fcom (bad) mov mov insl dec fwait andl gs xchg mov mov mov mov pop sbb jp xor jne subl pop jl mov in jecxz jecxz in jecxz jecxz in in in in in in in in in cld cld cld outsb pop dec popa inc and sub mov in jecxz iret into (bad) aam lahf nop jge insl dec xchg jge xchg jnp fwait andl gs xchg mov fwait andl pop sbb jle cmp add cmp jp xor mov fstp (bad) (bad) in jecxz out pop jecxz dec sub jle cmp xor imul (bad) (bad) aam xchg xchg mov xchg jnp xchg jge fwait andl gs xchg xchg jl pop dec sbb cmp add cmp pop xor dec sub xchg jnp cld cld cld in jecxz (bad) in in in mov push jp xor pop xor pop xor push sub mov ror into mov sub insl dec subl jne mov xchg jnp xchg jnp fwait andl jae push inc sbb cmp or gs sbb fs adc push jp xor repz in jecxz repz subl sub je sub pop xor push sub mov fcmovnu xorl pusha cmp dec xchg subl jne mov xchg jnp mov inc sbb andl aaa or fs adc fs adc dec sub popf xchg repz fstp fimull or je sub push sub push sub push sub jnp in jecxz push sub popa cmp arpl andl imul push mov mov fwait andl inc and andl aaa or fs adc fs adc pop aaa or cld cld cld mov pop gs sbb sbb sbb gs sbb mov push sub pop xor popa cmp arpl andl imul dec subl andl sbb andb xor fs adc fs adc fs adc dec sub into int3 lret outsb pop xor fs adc inc sbb sbb sbb sbb imul pop sub pop xor pop xor popa cmp arpl andl imul pop push inc xor adc andb xor fs adc fs adc fs adc push sub je sub aaa or popa cmp fs adc inc adc arpl jp xor inc sbb je sub pop xor pop xor pusha cmp cmp addr16 xchg mov push inc xor adc jp xor sub pop xor pop xor pop xor pop xor pop xor pop xor push sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor popa cmp gs sbb sbb sbb je sub push sub push sub arpl inc and pop mov test gs andl gs andl gs andl gs jnp fwait andl gs andl gs andl gs andl gs xchg xchg mov mov mov mov xchg jl xchg jl xchg jl xchg jl mov adc or xchg cmpsb xchg jl xchg jl xchg jl fwait subl scas fwait subl scas fwait subl scas fwait subl scas fwait subl scas fwait subl mov test mov mov xchg mov xchg jp xor add add add sub add adc add and add add sbb add add inc add add pop push dec push dec dec dec inc inc inc inc cmp aas pop push xchg mov shr call out in in loopne fnstcw jb jnp jb push pop dec cmpb lcall mov mov rcl loope fucomp call stc stc cli cld cld cld mov mov jp gs xchg (bad) mov cmpsb mov test mov ret mov xlat aam loop loopne in in hlt hlt cmc stc stc cli cld cld cld movsl xchg jns push lods cmpsb mov lods cmpsl mov lods ret enter lds int3 (bad) loope fucomp in in in jmp popf mov mov cmpsb mov cltd lea jbe jg xorl jo je pop push push jl push mov mov lods movsb sahf mov arpl push pusha push dec pop push dec pop push dec fs push outsl addr16 xchg lcall mov test movsb cltd popf xchg adcl lods mov sarl loopne out out in in call popf mov popf test mov inc test subl lea lret (bad) in jmp icebp lock icebp lock lock out in jmp ror enter mov xchg mov js jg jno sub push xor jne cmp dec fwait popl out out jmp loopne scas mov pushf test pop lea imul inc and and inc sub xor cmp (bad) loopne aam int3 mov jno xchg pop cmpsb xchg subl jge ds andb lea enter jae cmp aam mov xchg jle cltd (bad) data16 mov mov popa push mov push push jbe xor in loope xchg push sub mov mov mov xchg jle xchg subl push mov inc push fs adc sbb enter jo sub xor je andl insl dec mov js pop push dec mov inc push fs adc jno sub pushf mov sbb dec es jp jge cmp andl outsl push pop push inc mov addr16 sbb push inc push imul arpl inc push addr16 sbb sbb push sub pop xor andl dec inc mov xchg mov jbe nop jbe nop jbe xchg jns nop jbe nop jbe nop jbe nop jbe xchg jnp xchg subb mov mov add and add insb jns fs aaa add pop or add nop or inc add add add orl dec out add add add sbb add (bad) (bad) incl add add add mov dec add dec add add add add add add jo inc add (bad) (bad) incl add add add mov dec add dec add add add add add add and (bad) (bad) (bad) incl add add add (bad) (bad) (bad) incl add add and mov les and inc add inc add les and inc add add dec add int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl xor push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea push push lea push call lea lea call push push call mov mov lea call push lea push lea lea push mov movl call lea push call mov mov lea call mov lea call mov lea call lea push lea push lea mov push lea push movl movl movl call lea push call mov lea call lea push lea push push call add lea push lea push call push call lea lea mov movl call lea call lea push movl movl call mov lea call lea call mov lea call mov lea push push push movl movl call mov lea call lea call fwait push jmp lea call lea push lea push push call add ret mov lea call mov lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl movl movl movl lea push push lea push call push call call lea call movl movl movl cmpl jne movl call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push mov push lea push call add push call mov lea call lea call movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl push call movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea call movl fildl fstpl fldl faddl fnstsw test jne call mov movl mov mov cmpl jae movl jmp call mov mov cltd idivl mov xor mov mov mov movl cmpl je jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov lea call lea call movl push push push call mov movl movl movl lea mov call movl or test je movl movl movl movl lea push lea push lea push call mov lea call movl push push call cmp jne movl call movl movl movl lea push lea push call movswl test je jmp jmp movl movl movl push lea push lea push call mov mov call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push call push push mov push call mov call mov mov movl lea lea call movl push lea push call mov lea call movl call fwait push jmp lea call lea call lea call ret lea call lea call lea call ret mov mov pop pop pop mov pop ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf sbb or (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov add adc add mov add mov add or dec mov add or outsb mov add addb or movsb mov add add (bad) mov add mov add mov add or sub or cmp or pop mov add add push mov add mov add mov add mov add mov add mov add mov add or movl or dec mov add or outsb mov add mov add mov add add or or fdivl add ljmp add mov add mov add add cs add mov add or push mov add add add add add push inc push dec xor inc dec dec add xchg add jbe popa push popa jb jae inc je push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound jb gs popa jb imul pop pop jbe popa push popa jb imul popa fs imul xor sbb pop pop jbe popa push cmp outsb add mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb test pop popa fs imul xor add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa dec bound gs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 popa inc outsb gs je inc outsl jne fs jb outsl jb add add inc jne arpl outsb inc popa insb insb add add jbe popa dec bound outsb add push data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push je push popa jb popa insb add push add dec insb outsl add testl popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add lods add fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs pop jbe popa push je push outsl inc outsb jae add test bound jo xor push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound 