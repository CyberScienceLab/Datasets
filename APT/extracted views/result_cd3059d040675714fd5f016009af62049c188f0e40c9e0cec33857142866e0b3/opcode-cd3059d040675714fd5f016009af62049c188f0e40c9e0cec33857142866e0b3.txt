xchg pcmpgtd push xor bound orw mov or data16 or data16 lahf or pushw add pushw add data16 xchg pcmpgtd bound data16 or (bad) or xchg pcmpgtd inc push mov pcmpgtd jne adc sub data16 pcmpgtd add data16 add test data16 or data16 data16 inc xchg pcmpgtd fisttpll scas lahf or data16 add test or mov add add add add add pop add add mov dec add mov cmp inc add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add cmp add add add shr lcall dec (bad) hlt dec mov cmp add add add add add sub dec imul add add add int3 xor add fwait icebp (bad) iret mov xchg (bad) sti mov insl fildll je mov mov daa jb cmp xor or stos add xchg jnp add dec or add or bound insb bound fs or outsl jb gs imul inc add add decb add insb je add or add add add add adc add add add add add add adc add add add add mov add adc add and add add or add add add add push int leave add scas sbb lea push add mov add lods inc add call cltd add lea add or call (bad) push add je sbb loopne lods inc add (bad) xor sub push add mov add insl add mov pop fnsave mov cmp std sbbl imul add test add pushf out add pop add mov jns pop aam add sbb push add mov stos jo jp add cld (bad) stc add pop add iret push add jnp add dec add test add sar add mov cltd add jl add cltd cmp ss jno sub testl and xchg sub add add outsb add rorl js mov and leave pop add (bad) add jb add add lret (bad) in add jno add popa add test add test or push testb xor xor pop test add xchg sbb adc add addl mov bound pop lods data16 pop add mov fldl sbb in add stc sub add lea inc les xor add outsb or insl (bad) fwait add (bad) and xchg pushf add mov and xchg into jo aas mov mov adc rcr int3 add pop add add mov add pushf xor add aaa cmp sete add (bad) incl clc (bad) clc add mov add popa add mov add jl add lea add jle sub dec add push add insl add imul test add imul rorb hlt lret add cltd sub movnti add adc imul add xchg add (bad) and or add inc add mov add add xor add scas add cmp or add add repnz add add add loope add add flds add add std cmp add xor jo add dec dec dec xor xor xor in sub or xchg jno dec dec xor xor xor jbe adc imul xor dec (bad) (bad) push pop pop dec adc add xor dec js push movups xor pop and dec push dec daa sbb dec push cmpl xchg and dec jo add es js daa jnp inc aas push sbb ja xor add sub jne dec xor pop jb sub and dec sbb sbb pusha sbb test insb pop push pop arpl adc jl or xor and push or orl xor xor dec xor aaa ds pop pop xorb xor xor push insl add adc sbbb xor xor push xor inc push push push xor xor clc pop add loopne add rolb add add add add je add add std add add add addb add add add pop add clc pop add sub add adc add and add add and add imul fwait add add pop add add add add add add adc jl jecxz mov pushl xchg xor and jae incl push add add add cmp add jge popf sub push call pop pushl jae js jp outsb into insl call push ljmp mov decl insb or add faddl add add jmp data16 jg (bad) (bad) jle (bad) (bad) jnp jge sbb incl shrb arpl stc incl ret pop jmpw xchg sub lcall decl push decl push call pop decl push lcall pusha (bad) js jp data16 sub add add pop adc push daa stos aaa incl or cmp dec call mov cmp clc out insb pushf loop test and inc mov incl inc call jnp incl popa add add add push (bad) and cmp push pushl aad decl scas daa call (bad) std (bad) cld inc hlt lds adc inc decl dec lcall nop sbb add faddl add add add add xchg adc dec fisttpll scas xor ljmp out (bad) fdivr fcos outsb aam (bad) cmp inc jmp mov (bad) cmp sbb add add add inc add add add sbb call jae sub dec incl dec jmp in loop clc (bad) clc ljmp jmp fdivr fcos cmp dec push adc sbb and daa call xchg adc add cli add sub ja xchg add outsb pushl fisubl dec mov jecxz in (bad) in jmp jb adc pop call stos sbb or push mov add add add pop cmpsl lods icebp mov orl arpl mov sahf jmp inc lcall mov call stos sbb push orl add push add add add movsl sub xlat xchg (bad) call ljmp cwtl incl jns aaa jecxz cmp int3 inc pushl lds (bad) dec decl fwait sbb push js mov add add jno add or ficom add lock jmp jmp jne test imul lcall test push add add add add add push add lods sbb cmp xlat lea xchg fbld call push lcall mov sbb push jge push add push add cwtl adc jge lahf es add and and inc add add add mov add add add add pop xor lock pop dec xor add xor add or add xor add imul add lock (bad) push clc jp adc incl xor add jb gs imul add add add hlt add add add add add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add sbb ja add incl add add add or mov inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add add xchg add add add xor add or or add lock add (bad) decl add add add add add add add add inc add adc js add xchg add mov add popl add dec imul gs xor outsb jb outsb outsb add dec imul add add pop add add shrb add (bad) (bad) incl add add xor movsb mov add add add sub add inc add add add xor add xor inc add add add inc add add add push inc add add add inc add add add add add add xchg add xor inc add pop add add test inc add (bad) (bad) incl add add add add add nop add (bad) (bad) incl add add inc add inc add inc add add add add adc (bad) (bad) (bad) incl add add inc add add add add sub add inc add add add inc add add add inc add add add inc add add add add add add inc add add add (bad) add add mov add inc add inc add pop add add test inc add (bad) (bad) incl add add add add cs add (bad) (bad) incl add add inc add push inc add adc mov add add add add add push insb dec add (bad) (bad) incl add add inc add dec add add add popl lods and add add adc add add add add mov inc add add add add add mov push and pushf loopne add add add xchg add xor add xor add pop add add test inc add (bad) (bad) incl add add add add and push cs add (bad) (bad) incl add add inc add adc mov add add add mov inc add add add imul (bad) (bad) incl add add mov add add add add add and add add xor add add call add add and add add in and add add lock add mov push and xchg rorb add add fcoml add add inc add pop add add test inc add (bad) (bad) incl add add add add and push cs add (bad) (bad) incl add add and jo inc add adc mov add add add add add nop insb dec add (bad) (bad) incl add add das inc add dec add add add sub add inc add add add xor add add and inc add add add inc add add add and add add sub inc add add add add add add push xchg add xor in inc add pop add add test inc add (bad) (bad) incl add add add add add nop add (bad) (bad) incl add add inc add inc add inc add add add add add dec add (bad) (bad) incl add add das inc add add add add add add inc add add add add add inc add add add inc add add add add add add inc add add add lret dec add add add inc add xor add pop add add test inc add (bad) (bad) incl add add add add cs add (bad) (bad) incl add add inc add and scas adc mov inc add add add add add add nop imul (bad) (bad) incl add add inc add add add xlat xchg add add add add pusha xor add pushf and add movsb and add mov add add mov push and dec add add add add inc add add add add test inc add (bad) (bad) incl add add add add and nop add (bad) (bad) incl add add inc add adc mov add add add add add adc add (bad) (bad) incl add add xor nop mov add add add sub add es add add add xor add add add es add add add es add add add es add add add es add add add daa inc add add fsubrl add xor add xor pop add add test inc add (bad) (bad) incl add add add add daa inc add nop add (bad) (bad) incl add add es add inc add adc mov add add add add add shrb (bad) (bad) (bad) incl add add cs add mov add add add xchg add add add inc add add add inc add add add inc add add add inc add add add sub add add sbb inc add add add add add or nop add xor inc add add add test inc add (bad) (bad) incl add add add add add nop add (bad) (bad) incl adc cmp add cmp inc add add add sub pusha cs add inc add add add add inc add add add inc add inc add inc add inc add add add inc add inc add add add jecxz or subl jmp add hlt add add add push insl dec add dec add mov add adc add add in inc add add add add jp fwait icebp (bad) iret mov xchg (bad) sti mov insl add add nop add add or add add add adc dec add add add xchg jp into mov bound fsubs push add add xor add add add inc add add xchg sbbl dec mov cmp add add add add add inc add add add add inc imul or xchg loope add add add add add add add add add adc xchg imul leave dec popl inc int add add add scas add add add add ss add add cmp inc xor pushf dec fwait xchg testl add add add add add ss add add add add (bad) cltd push es cmp mov inc push add add add add add add add stos in jge movsb add mov ret pop add add add add cmp jl add push add add jbe dec lcall inc or add test add add add nop xor add add add fdivl dec add (bad) (bad) incl add add mov add adc stos jne inc mov out inc or or or or loopne inc add xor or add add add add add add add (bad) call add xor add add (bad) xor (bad) incl add add add (bad) push xor loopne inc add add add incl add add add inc add (bad) (bad) push xor clc xor add add clc sub add add add push inc add (bad) (bad) push xor or inc add add add sub add add add inc add (bad) (bad) push xor sbb inc add add add popl (bad) incl add add add and (bad) (bad) (bad) push xor sub inc add add add incl add add add inc add (bad) (bad) push xor xor inc add add add sub add add add (bad) push xor inc xor add add sbb popl (bad) incl add add add (bad) push xor dec xor add add mov incl add add add sbb add (bad) (bad) dec xor add add and dec add add add inc add add add add add incl add addb dec imul add insb insb bound fs add push je fs imul imul jb jb xor je jb jae outsl insl jb popa fs add dec jbe insb je imul popa jbe gs gs jb outsb add add outsb gs add jae imul gs gs add gs imul push jb jae popa je xor add inc jne je jb insb outsl imul scas mov dec mov mov daa jb mov inc test jg xchg xor icebp (bad) iret mov xchg (bad) sti mov insl xlat cmpsb rcrl cltd popf jle cmpsl mov mov cmpsl or cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add (bad) xor add add push add add add add xor or inc add add nop add dec lods xor or stos add xchg inc outsl insl insl popa outsb xor add add inc add cmp push add xor and push add xor add add pusha xor jo inc add add add lods xor or stos add xchg mov dec sbb mov cmp push add add outsb add add jbe add add add add or push inc inc ss dec dec add add pop pop jbe popa inc jb gs popa jb add add jbe popa inc jb gs je add add pop pop jbe popa push popa jb outsl jbe add add adc rorb mov cltd das cmp pop jbe popa inc jb gs popa jb imul pop pop jbe popa push popa jb jne add jbe popa dec bound gs pop pop jbe popa inc jb gs bound add add ljmp xchg mov jg adc xchg imul leave dec popl inc int add add jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add inc add dec add mov outsl pushf mov mov out cwtl push xchg inc fwait enter inc shr out jp into mov bound fsubs push inc add dec cwtl xchg inc lahf mov sub or inc add mov add push adc jecxz (bad) inc mov pushf lock lret mov cmp into inc sbb jp daa popa mov orl sahf in lock cwtl ficoml push or dec xchg cltd add adc xchg mov inc mov mov push sub lods dec popf adc sub sbb or outsl mov cs mov jl and lret mov (bad) cmp imul pushf dec (bad) lcall cmp inc xor pushf dec fwait xchg testl (bad) dec and add in xor sub popa (bad) (bad) cmc insl test fsubl clc pop stc inc push nop (bad) cltd push es cmp mov inc das or inc mov (bad) cmp push or dec mov negb rclb mov leave pop lds pushf mov sbb movsb add mov ret add aam (bad) icebp sbb cmp xchg mov pop lcall je dec cmpsb rcrl (bad) jns xchg and jbe dec lcall inc fistl aaa lahf push cmp scas push je test push dec xor add jbe dec lcall inc cmp xchg mov pop lcall iretw adc pusha rcll dec add add add add add outsl jae popa je xor or imul add add inc add (bad) (bad) (bad) jmp add bound outsb arpl xor add add sldt xor add add add int3 xor add xchg imul leave dec popl inc int popa cmp mov cs mov dec lods xor or stos add xchg push add add add add insb gs gs jb outsb add jb outsb outsb outsb xor sbb add and (bad) (bad) jmp add outsb outsb outsb xor xor add add cli add add add incl add int3 xor add pop or out pushf dec fwait xchg testl push lret mov (bad) cmp cmp xor or stos add xchg push add add add add gs or jbe jb jb jne insb imul inc add (bad) (bad) (bad) jmp jb jb jne insb imul add add add mov add add add add add int3 xor add mov inc mov mov dec scas sbb scas inc sahf in lock cwtl ficoml cltd iretw adc pusha rcll push add add add add add imul jb or outsl insb gs insb gs sbb add and (bad) (bad) jmp add gs insb gs xor add add mov or add add add add int3 xor add lret mov cmp sub mov add push adc cltd iretw adc pusha rcll push add add add add add je jb jae outsl insl jb popa fs or popa jb jae outsb jae sbb add and (bad) (bad) jmp add jb jae outsb jae xor add add adc add inc add incl int3 xor add movsb add mov ret inc push or dec mov negb sarb dec lods xor or stos add xchg push add add add add add gs imul add outsl push gs add add inc add (bad) (bad) (bad) jmp add outsl push gs add add add sub or add add add dec xor add cltd push es cmp mov inc scas lock mov popa (bad) (bad) cmc insl test cltd iretw adc pusha rcll pop add add add add add imul gs gs or popa jb imul je sbb add and (bad) (bad) jmp add jb imul je xor add add aad add sbb add inc add incl add dec xor add mov bound fsubs push test mov outsl pushf mov mov dec lods xor or stos add xchg in or loopne or add add popa fs imul imul jb jb xor add outsb fs xor sbb add and or insb je add or call das or add add add add add add add add add add add add add add or sbbl fs clc ret jecxz cwtl push fiaddl shrl or pop jp xchg mov cs pop aad jp xlat fwait cli icebp or aad jl (bad) jno xor les adc arpl cmp (bad) sbb mov lret push sub dec inc pop xchg push in lock adc (bad) aas (bad) in add roll das repnz dec cmp negb daa int3 inc sub les stc pop or lahf ja icebp out mov rorb (bad) jb or jno jge lcall fsts mov stos pop js enter or or fistp ret xor lea cmpsl mov lcall inc push divb push xor xchg add xchg leave mov add dec stc cld mov loopne ss outsb sub fwait jno pop les sub mov push fidiv sbb gs push push xor pop jp std roll xlat xor push fdivl out xchg ljmp loopne sbb push xchg dec pop imul adc jns inc (bad) fcom hlt int3 outsl in js mov incb rcr add cli sub pop outsl xchg aaa aas inc mov jns out adc pop aad leave jns pop pusha (bad) nop add pusha jo push dec cmpsl and sbb icebp push fs fisubl aas sbb das mov cmp les hlt mov xchg iret push jb xor add add add into lods inc (bad) mull pop and aas mov push mov leave cmp cmpsl shlb nop or rcrl rcl jnp es jge cmp xchg adc stos insl leave jecxz ret stos xchg jb sub out in lods dec mov das loopne cmp call dec lea mov inc (bad) cmc fldl push or lret test je mov pop jle (bad) xor jo (bad) add mov fucom push (bad) sbb lret fldenv cld jg cmpsb stc iret or dec add add add roll and mov inc popa gs mov add add mov push shrl mov jmp pusha (bad) (bad) cmc sub adc leave ss punpcklbw stos aad mov out popa fdivp and lock subl add popa icebp or xchg add je sub out mov and fcompl pop insl sahf lahf pop sti and (bad) rcl push sahf jno xchg pop fisubr fwait in es leave (bad) push xor cld mov daa jo mov ljmp jmp mov aad jmp (bad) mov cmp (bad) dec into mov andl sub jmp pushf pop mov data16 subl push imul rcll frstor jge mov push nop cmp popa push js pop or ss jecxz inc cmpsb mov les out hlt bound mov data16 dec adc xchg cmp mov daa sub cs (bad) mov int loope pop add add add add mov (bad) dec dec enter repnz dec mov mov inc jp es dec movsl or jmp je or movsl in sub mov std xor ror into pop clc jmp mov cmpsl hlt ret mov mov insl lock lcall jb test xchg stos pop cmpsl pushf and repnz push icebp je or test and push mov push mov movnti cmp dec movsl dec jge in jnp push test (bad) (bad) pop sbb mov sbb fxch sub add push mov int3 cld mov cmpl nop jge push xchg push pop test (bad) xchg xchg cmc jl lret dec cmp leave loope add push out inc mov jo add cmc pop inc jge mov jae shrl shlb jns mov dec jl or inc ljmp sti (bad) pop ret aam data16 fwait aam repnz (bad) scas lcall xor inc add add add xchg (bad) sti cld fistpll dec push lock addb inc dec or dec xor (bad) pusha sub cmp adc pop ss jl lea jl lds lea cwtl push jge fsubrs testb lahf hlt fistpll sbb mov cltd pushf lahf push mov je dec (bad) cmp jbe jo pushf (bad) adc stc mov inc dec inc sbb mov (bad) cmp mov sub or pop loopne push inc lods xor cld push lods mov in je jno add add add add adc js outsb xchg jg test and ss cli imul jmp js stos mov into sub fwait push lret leave xchg sbb sbb aam bound ds movsl ret (bad) xchg fsubl push imul aam pop fistl sub loop mov jmp out jmp push cmp adc cmc cmc mov pop jns xchg cwtl xchg js add xchg icebp adc repnz sahf mov (bad) flds pop xlat and add lahf inc add sub jl sbb mov or daa stos jmp pop mov jns aas adc ds inc lret or insl xlat mov or mov mov int rcll push mov test jg mov jae push inc or imul adc hlt inc mov xchg test fistl mov and les pop out fnstsw xor push repz sbb adc jg cmp pop xchg ljmp cmpsb fmull in ret decl sbb mov test push add (bad) xchg movsl call pop in cmpsb pop (bad) cmp inc int out pop in sub xlat and mov stc jne push pop je fcomip mov mov dec add dec pop aaa ret jo fmul insb in push (bad) xlat repnz pusha and clc (bad) bound mov mov mov pusha jge (bad) mov mov inc jecxz mov popf sub stc cmpsb push repnz (bad) daa jl lret mov jb fdivs sub add add lods xchg sub (bad) or xchg push inc fsubr sbb mov loop mov sbb jp,pn add dec iret pop sbb shl jo inc loop outsl mov sub mov push imul or dec outsb dec jle aaa jle or xor inc cmp in (bad) cmp in lock mov jl xchg loop push xor jo das jo dec and pop shr aad mov ja push icebp in dec mov mov lods fs imulb aaa repz or push push int shrb lods inc push popa mov add arpl xchg xchg mov dec mov cmp add cmp ss or lret call xlat aam stc mov mov sub mov stos xchg adc adc imul cmp dec pop dec dec xor cmp sbb jae cmp idivl adc dec int ljmp mov cltd (bad) mov dec xor xchg fsubl push mov aad lahf jo int imul mov pushl adc push sbb add add add add or push push jp mov pop xchg push popa xor lds add data16 and repz repnz xchg addr16 sub and push xor mov adc xchg and jbe and mov pop xchg stc shlb fistl cmpsb mov test mov xor push nop icebp leave mov call cltd sub sbb es test sbb sbb sub (bad) stc cmp adc loope add (bad) movlps xlat fwait jge push sbb sub cmpsl push scas fldenv fsts adc in into out mov jecxz dec jmp movsl dec xor std mov sub (bad) (bad) push xchg cmpsl std dec rcrl in add iret ret xchg mov ret loop push pop inc lahf jecxz jno xor stos mov in inc jnp mov adc nop push or xchg frstor insl pop push stos jmp or inc cwtl jnp sbbl mov pop xor bound add add add pop addr16 lret sub push and adcl rorb mov fwait cld xor sub nop cmpsb or xchg scas add xchg mov or imul add scas pop jge adc movl push jecxz test mov sbb mov inc jmp dec xchg iret dec and jnp in cmp sbb sbb pop fiadd mov sbb fcompl cmpsb mov and sbb loopne enter sbb mov add add add cmp sbb insb fxsave inc push jp dec fs jge insb jmp lds mov pop push (bad) adc inc push mov mov push fdiv dec cli xor jbe out push adc sbb pop div sub cmpsb push movsl scas jmp popa push jnp test jl sub cli stc repz nop xchg mov cmp fs jb in cmp fistp fwait jmp adc hlt dec cmp into cmpsb out scas scas mov lds stos xor jno and in movsb (bad) mov rclb fmull or add add fld inc (bad) push hlt outsb mov inc pop repz aaa and (bad) je fwait adcl fisttpl mov xchg test pop cmp repnz imul pop enter jbe inc ljmp in icebp and insb jle mov push outsb jge sbbl push ror push sbb outsb jb fwait jo and popf pop pushf mov fistpl mov adc cltd mov gs pop hlt cmp iret or outsl jnp scas rorl roll add add add mov inc test xchg fld test sar lahf lods sbb fneni(8087 jle lds sbb enter gs pop movsb ficoml mov rclb das bound data16 mov dec inc jmp clc mov sahf fstps mov shrb lahf lret loopne fmull add dec (bad) xor fisub mov mov aad es mov cwtl jnp (bad) lret cmp scas in mov jp ret sub fcoml rolb add add add add (bad) fimull mov xor adc push lahf add pop push jb orb mov outsb dec push (bad) insb jb enter mov and mov mov mov push mov insl fstpl fmul fidivr clc and js fwait sub fsubr mov fwait push add call jne jbe adc inc push add mov or sub aas add or adc test cmp idiv cmpb mov push stos mov lods add mov int rcr xor xor out jl lods stc cmp push push pop sbb (bad) enter lahf xor (bad) xor and push xchg sbb fidivrl adc int icebp test jno sbb data16 push push std jae ffree or mov aam es sar addr16 and jle mov dec test outsl xor rcrl (bad) mov fcmovu fistpll add inc (bad) shrb xchg jne rorb push push or sub mov clc cmpsb jne ret bound add add shlb xchg add and test and imul fbld mov push dec mov mov mov lret sub fs fisubr xchg mov bound add lea or cmp arpl or dec out mov cmp pop xor in mov ret jns push insb sub pop (bad) in repnz cli dec pop cltd std jo pop (bad) inc hlt mov in jl xor movsl cmp sbb mov rcrb popf mov inc push mov ficomp adc nop add add add das sub sub cmp jmp mov inc shlb or pop xchg loopne xchg mov xchg push sbb cmpsb mov jg push jo outsb xor das adc clc jne loope sarl stos sub pop (bad) adc mov and and out jle out cmp (bad) push and popf lret dec mov cmpsb ja push push imul xchg popa rclb add ret push ret or (bad) imul cmp movsb add jge add cmpsb sub add add add fistpll push cmc pop lock mov xor adc push orl dec pavgb gs ds inc pop or out sahf lds popa mov or js dec cmp xchg jnp xor push add mov mov stos cmp movsb lea imul mov test mov jp add jge shrl int ja sbb cmp inc (bad) jns nop (bad) jno sti pop icebp cwtl (bad) add add add add call rolb dec mov jo mov aam push pop mov xor aaa xchg pop test jns enter push xchg lods xchg jge push sbb cltd ja aas scas cwtl imul dec mov xchg rclb push jp arpl (bad) ror add xchg pop jno sti nop xchg push lea scas leave dec js mov fldl dec and mov mov test and sub int mov test adc call je repnz sahf jnp adcl (bad) fwait movsl mov movl cmp sbb stos mov or ret fistp dec lods cmp push add repnz sub push push scas pop stos movsb stc movsb dec stos fwait push xchg pop mov pop mov int mov or iret inc sbb loop aam addr16 ja icebp mov cmpl insl push ljmp xchg jecxz ds (bad) pop pushf dec add repz fistl jbe add add add pop ds fstpt push stos sbb rcrl dec fisubrl ds mov pop aaa rolb es cwtl cmpsb sarl adc in sbbb (bad) icebp stos aad push in cltd imul adc cli mov sahf xchg aad sub ret jne lahf psadbw das aad jb scas or fadd adc movsb sbb out jbe jno push js into or inc cmpsb std lret xor dec push cmpl testl xor cmp test push mov add add add sbb push sub or (bad) xor adc scas cmpsb (bad) mov adc inc mov push adc mov pop pusha xlat nop fldenv loop and ja bound add adc cwtl cli scas lcall int3 lods push xchg faddl call sub mov outsl mov jg out lds (bad) aam in test arpl jge mov push sbb push jle jns stos and dec pop stos out ss in sub mov jp sub add add add fwait push call ja sti inc cwtl jno imul pusha jbe dec out insl outsb xchg xor int3 lahf js mov outsb mov push fidiv adc iret loope (bad) jno cwtl push cmp sti inc pop xchg pushf push push pmulhuw dec pushf dec dec test dec lret add pop in mov adc shll (bad) enter (bad) mov jl or lock rorl mov lock push push daa idivb daa out mov add add add daa xchg leave dec cmp scas not xchg xchg les addr16 jns mov in push (bad) loopne mull mov adc add js or int pop addr16 cmc dec inc push xchg inc ret and loopne in sarl jb hlt inc aam add xchg push jne cmpsb pop (bad) push ja and push jb clc pop mov pop inc imul test inc jne outsb js cmp xchg jl push shrb movsl enter fwait mov clc xor inc lock jle cmp add add fcompl add or add xchg aaa inc pop and cmpsb cs movsl dec nop icebp pushf xor dec daa push aas adc das xchg imul test mov fwait push mov xchg mov rclb aad imul pop push push loop mov repnz fisttp lret shlb punpckldq icebp pop loope fsubr leave sub cmp movsb inc cs addr16 ret jmp je jl mov ss xchg sub mov bound and add add add jmp loope,pt push jnp stos ja cmp stos js dec cmp mov push push fdivl in loop lret lret repnz es roll call and cwtl in out xchg mov mov mov xchg xchg test std mov jno fdivs popf mov out iret cs sub or or call or mov nop imul push daa gs sub dec (bad) push fisttp or (bad) or push sbb push xor inc (bad) add add add pushf xchg push sub adcl roll adc (bad) mov pusha jge jne pop adc xor dec cld cmp (bad) lods stc bnd loop inc push push ficoml push test xchg pop xchg rorl frstor clc cmp in dec cwtl pop fnstcw or loope or cli xchg int3 sbb mov mov daa add push fwait lcall mov aam dec nop adc ds mov cli sti cwtl mov add cmpsb lods clc push or (bad) out data16 imul or orb cmp adc stc pop dec subl and lret mov sbb sub dec sbb mov pop movsl cmp mov (bad) ffreep mov mov fadds (bad) fsubs xor rcr jecxz push fistpl sbb (bad) imul popf xchg in mov aam clc lcall dec jge xor test mov (bad) fwait sar push jae inc inc jl and jae inc faddl add add mov mov mov test cltd push ljmp pop int mov std (bad) stc inc fcoms call push or aam test test mov or mov xor jno (bad) aaa fmulp sub adc sbb sbb dec cld or cmp mov adc dec sbbl xchg out les inc pop cmpsl les ja mov inc outsl pop fisubl out pop mov lea daa inc cmp insb pop xchg iret movl add add mov mov std push in xchg fdivl out mov xchg xor or or mov mov xchg test js dec xorl (bad) clc popf movsl cmpsb ss sahf xor adc out cmpsb fsubr pop cltd cmp fs mulb hlt push and mov add sti adc xchg orb lcall adc je ljmp pushf mov sahf std jge mov jae push push cltd push outsl lcall outsl xchg ljmp add jge add push adc aas adc testb mov push add stos std cmp bound fwait mov mov nop xor or aad data16 divl ja fs inc mov jne mov (bad) mul dec aad aas fiaddl pop lret mov pop dec pusha sbb pop mov mov and sub push in pop cmpsl daa cmc test adc or test jmp (bad) or push mov add add xor flds jo roll jmp lret xchg in xor sbb mov rorl xchg (bad) cmp test cmp adc popf jl pop mov jne pusha cld arpl test hlt int dec inc (bad) adc xor mov ja lods (bad) mov xchg dec scas addr16 loope arpl jnp mov iret pop xchg lret aam push inc dec bound stos fidivr sbb sbb cmp cmc aaa stos clc daa adc leave sbb push cli loop add add add add ja sbb sbb nop xchg lds cmpsb into dec rcrl nop push lcall insl dec dec inc data16 mov pop fistp sbb scas pop clc in or pusha and inc rcrb dec ljmp xchg jmp in lcall roll lahf add jbe out out loopne cltd push je xchg decb mov dec rcr pop loop xchg ret repz mull mov mov andb pop fadds xchg stos pop push rcll pusha dec movsb push sahf rcll mov add add add add add dec divb dec jne inc push sbb in mov mov xchg popa xor lcall fnop and (bad) pushf xchg (bad) repz add ret push mov lcall inc add or mov or and or inc mov fiaddl sbb push inc std mov or pushf dec dec or loopne mov addr16 jl add push push mov push xor mov aad mov add mov add add add add add (bad) fistpll outsl (bad) jle mov mov jg lcall daa cmpsb xchg testb dec jns cmp lds add aad add call sub cmp fcompl push imul push movsl sahf loopne mov sti adc stc mov lods test aam mov push scas les adc pusha out jnp and hlt jle out adc cmp sbb and inc mov pusha loopne (bad) add ret add add add add test test cltd or cmp ret in sub mov je ret insl out out sahf xchg insb sbb imul aam adc sub jbe sbb inc cwtl mov lret and je (bad) and dec mov cmpsb mov (bad) jbe shr jl cmc push dec dec lock imul jle push jbe adc mov xchg test clc jns les shrl int3 mov rcll sub add pop subl jecxz and ret sub mov std xchg pop fmuls ja aam loope mov into daa push aam inc daa les mov inc jno xor adc aaa pop sub sbb out mov adc mov std out out nop scas lcall mov scas mov add (bad) xor sahf mov cld jno adc les pop sub in outsb mov nop cmp outsl mov jb insb lock bsf ret mov in cmpsl sbb (bad) je or in (bad) xor pop jns xchg push dec push jmp jmp imul sahf adc and jb,pt loope pusha arpl push cli divl xlat imul icebp loop mov stos sbb int mov inc cltd pop mov inc jae inc sub jno sub push xchg (bad) fs aaa rcl dec lret enter int3 jecxz jmp aam iret cli pop pusha dec loop into bound mov lods push cmp add add add out mov mov cmp imul or aad dec mov popf fistp mov test xchg sbb xchg sub jne dec in movsb ljmp lock push std xor hlt push ljmp dec sahf pop xlat or inc push mov bnd fistl push loop jnp int3 jae adc add repz imul cmc push jae js add sbb dec and ffree rolb add add add fstl lock cwtl imul stos push and and inc inc sarb (bad) in aam cli pop adc inc xchg mov enter or out hlt cld std loope rorl (bad) ffreep shr push sub test imul adc jmp out dec mov add imul sbb xchg push aaa add insl iret imul fistpll add or test insl cli mov aaa jb aaa popf lret into pop repnz int add decb dec sbb mov add add add jp popa (bad) fwait add push pop push ret test pop call xchg test mov test (bad) lea daa int jp ret popa sub sti add sub inc test xchg jge (bad) pop jg gs xor mov scas stos repnz xchg addl insb sti inc inc push es cmp arpl mov adc mov xchg insl mov cmpsl pop fmul test pop insl cmp aas sbb pushf pop inc pop ljmp add add add (bad) lock adc push or movsb (bad) (bad) repz dec xchg adc pop es inc pusha shlb aam jmp mov xchg lret add add jae mov iret movsb test ret fsubr ljmp sub add pop out pop jb mov pushf fldt mov out outsb cmpsl or imul mov popa test jl xchg test aad mov fprem1 popf mov xchg bound jp pop adc add add add shrb cmp out and cwtl sbb aas ds jnp sbb add cmp mov fs loop adc test and pop xchg (bad) push mov aaa pop fstpl (bad) out jmp bound sbb outsb or mov cmp (bad) mov cmpsl shrl pop inc fwait sbb pusha add dec mov push aam leave ss dec imul mul add xchg (bad) jno inc inc push inc push inc adc xchg xchg sbb sbb add add add add ja cltd or or jb repnz mov lods dec sub sarl out pop stc addr16 inc or pushf outsb aam xchg sub popa mov fistl scas pusha ljmp fwait pop dec push incb scas out das sub cmp mov mov cltd inc sub xchg dec xlat sub and push mov mov leave sbb sub iret lds lds imul or and out jl lcall cmpsb call jl or or mov adc fldl add add add add lods out flds jecxz xchg add stos out mov jmp mov mov xor test xchg test push and lds mov (bad) cmp mov mov popl jb stc push and sub sub push int subl mov dec loopw (bad) sub mov inc xchg imul ss fist mov jbe mov lret xor popf and lss bound int dec adc or push jns insb inc cmp push mov add add (bad) (bad) stc (bad) mov loopne movsl mov or stos popa lcall gs or (bad) lods jo xchg jbe fsubp adc out cmpsb lods dec add lcall mov xor jecxz mov int out mov dec mov mov idivb add push dec mov pop jl lea mov pop imul xor xchg or jp dec xchg pop or xchg inc pop addr16 cmp int3 mov pop and push and insb fildl xchg cmpsl hlt mov sub loop daa or insb cmp sbb mov sub push (bad) mov sarl loope mov push lahf and xchg xor jp mov jmp jp repz push xchg cs or pop leave movsb sub jb mov les loopne sbb sub decl int3 andb push mov xchg popf in dec push push mov aad jecxz inc lcall cmc push cltd inc adc jo sbbb popf pusha (bad) std mov add add cmp addr16 jge lea pop pop lret push ret cmc sub inc pop insb movsl pushf push push shrb pop mov stos inc rolb imul mov fs popa popl mov ret aad jne sub sbb imul in clc addr16 and xchg mov lret ss pop mov mov xlat xor jae and and outsl or mov fstps pop sbb xor fidiv pop sub pop jae inc jb imul (bad) push fadd add add add add test add xchg mov inc cmp addr16 or sti push cwtl dec inc jns add sbb jbe push sub push sbb aad and cltd pop cmp xchg cltd stos jno imul xchg es aad hlt cmp leave lock xor jg inc ja mov hlt and es aad (bad) cmc pushf ret mov incb and push mov in push (bad) (bad) stos int3 push data16 jbe ret lretw scas divb add sub cmc sahf lods mov add test scas ja jecxz pop shrl push gs sbb adc repz mov fdivrl xchg mov add mov icebp je mov rcr je mov cmc test jecxz fldcw lcall sub imul lret jnp fcomps add pop (bad) rorb in jge in sbb pop lcall inc mov ss xchg sbb pop mov in pop cs sbb cmpsb (bad) jge lods mov add add and sbb fisub outsb pushf or pushf jae cmc jnp sub dec inc dec xchg push and push ds gs jle sbb call and stc lcall xchg jge inc dec or stc in outsl cld cmp popa mov lahf jae pusha push test or inc sarl aam pop das dec and jae in hlt out mov add mov add lcall dec or into outsl pop push cmpsb adc mov mov add add cmp jnp add daa stc mov arpl lds sub adc es in jne sbbl in sbb jl mov sub (bad) jb jl jo xor jb imul xchg lods xchg insl icebp xor into add sub out movsl push sbb push mov jl movsl icebp sub add mov aas adc dec jg mov imul xchg scas sbb push outsl push push dec push xor loope test adc sarl add add fistpl daa ret xchg inc mov dec sub (bad) sub rcll sbb pushf pop mov adc (bad) shr in push inc xlat push jge jno lea xchg sub sub push fbstp sbb js cmp or outsl fdivs jne cmp pop dec daa xchg les mov adc mov ret loop mov nop incl push cmp loope (bad) rclb mov adc jns mov jae out and ficom dec mov shrb sub mov xchg add add add add fidivl bound mov repnz pop fmuls subl xchg xor inc fucomip loop (bad) xor and loopne lahf lods xchg popl inc pop frstor cmpsl lret clc jnp xchg ret test jno lahf hlt jp mov push xchg mov xorl xor icebp (bad) adc in push sub leave mov sbb movsb pop popa lods xor dec aaa mov and add insb int3 jnp pause mov and ficom cmp add add ja fidivl call aaa adc mov stc mov daa les cmpsb in mov push popa mov insb sub inc sub push push pop pop push jg int stos sahf inc inc out in dec jns xchg mov das pop subl fimull addr16 xchg xchg and adc imul dec xor sbb jae idivl jo adc loopne cltd fndisi(8087 (bad) sbb lret jno rorl pop xlat and xor and add add add add sti push pop or push cmp or sbb mov sub inc divl mov (bad) fbstp (bad) loop aaa add icebp lret mov or in arpl push bound pop leave out ficomp xchg leave shll insb xchg cli lock xor xchg mov imul or mov cmp je adc dec incb fmull push aaa lcall data16 stc mov add add dec pop pop add mov adc (bad) in pop xchg xor push fmul jbe test inc pop pop pusha (bad) lret lret nop stos dec cmp mov jp fcompl sbb jmp sbb inc cmp call es add dec cltd adc mov sbb data16 aam cmp jo in push rorl dec xchg js xor insb push sbb sbb and xchg push cli mov ret lea decb cld xchg sbb add add push lods mov lock mov insb jecxz dec aad inc sbb sub adc icebp inc jge pop adc or lock fisubl cltd ret xchg movsb or mov add ret test pop cmp xor xor sbb (bad) mov loopne fisub dec icebp jp mov xchg test pop xor test mov push mov xlat es out je or faddl iret cmpsl cmp xor mov xchg ds cs fcmovb je aas insl imul add add add sub outsl insb inc push mov pop faddp cmp testb fadds sub jae pop (bad) adc add daa xchg xchg fiaddl ljmp outsb fcmovu mov out mov mov xchg adc or jp mov xlat or rcr xchg mov jns or jp xor push inc (bad) and cmp pop jno cwtl out ljmp cmp (bad) frstor mov out mov ds push or cmp push sub jbe ret sub (bad) mov add jnp ja xchg mov jbe push loopw mov mov aas aad add addr16 bound rorb fs mov aaa or arpl xchg pop test mov xlat ret push inc loop inc test in (bad) fmuls push out xchg out xor stc roll arpl repnz push mov mov sub mov mov xchg ret nop roll jno adc add add push inc cbtw dec and or add adc xchg loop subb mov hlt adc or aas ret mov ja cmpsl push mov mov jo insb sti in jno cmc adc test sbbl inc dec jns (bad) aaa fiadd rclb or fildll jge repz or in call lods roll (bad) cld or dec xchg lock lahf inc (bad) stos and pop pop mov pop xor add add add add add mov je cltd jno aas pop jp and rorb mov sub shrl xchg mov mov or stos movzwl andl incb or xchg repnz inc lods push jne enter fimul push or mov ret dec push ja (bad) fiadd es mov mov mov out jno cld jge (bad) (bad) gs stos pusha xor cmp stos enter xchg sub scas ljmp add add add add push (bad) mov and stos dec popa mov ret or jnp mov jnp inc pop scas add idivl lcall in inc lret movsl and ds lea add or mov not iret pop call ds push lcall sub das jne cmp ret xor mov cmpsl xchg mov paddusw pop aas push mov test addr16 daa stc test sub jbe fcmovbe sahf std cmp insb dec fistl enter (bad) cmp push pusha mov add add add add add (bad) and repz add pop call or add cmpsb int iret fsubrl stos sub sub (bad) fisubl loopne sbbb test outsl add nop pop mov lock ss mov iret out inc scas push (bad) cmp loope inc xchg test ret repz sbb adc out mov bound pop dec push sub cmp xor leave fsubrs stos mov je sub mov insl push lcall (bad) into in adc in imul add loop push sbb not (bad) push xchg out aad outsb jno and cmp and sbb xor int roll ucomiss (bad) adc pop sbb dec xor jne adc icebp mov push test jbe inc out loop hlt out fisubrl int3 add mov push into mov into es cwtl repnz push or fwait pop mov jmp shrb clc aad pop mov add pop push pop mov cld lds inc inc add add add add stc push lea pop mov cmp pop and pop xlat sub rolb test movl jae jo cmp push xchg xor pusha fs frstor inc mov cwtl push cmc iret fdivrs fist xchg inc icebp lahf dec xchg icebp ss sub jp out pop push jo (bad) into rcr mov sbb stos inc imul add (bad) rcl inc fld rcll or push (bad) daa mov xchg push cmpsl movsb jle mov nop loope xlat subl add add add add mov imul inc mov mov mov xor arpl lahf scas out mov (bad) pop inc dec ljmp repz inc arpl es dec cmp mov jo (bad) dec and xchg inc movsl mov imul insl loope loopne les xchg adc pop mov insb loop lock jge (bad) push stos addl (bad) repz outsl xchg and xor lret sub xchg call add add pop jmp xchg mov dec scas mov pop inc popa push dec jns outsb dec pop xor cmp pushf xchg es addb push popf cmpsb stos aam (bad) push add iret xchg add sub jbe jbe sbb xchg lods je movsb dec lock int3 aam nop loope mov jg pop cmc lds pop nop andb push jecxz iret and mov mov pop callw dec and popa adc inc fistl xchg push jp in roll push test xlat scas pusha lahf repz xor add add add cmp int3 bound jecxz or fisub in cmp fbld mov movsb dec sbb jmp jg enter sbb mov shll ss inc sahf dec xorl xor les (bad) mov insb clc cmc push add add fucom dec sub in jns sub pop mov xchg popf cltd and jle in orl sub push shll dec jmp cmp leave je xchg rcrl add add mov enter mov add mov (bad) lahf mov sbb icebp sub les push jne xchg xchg fwait xor xchg push sahf jnp cmpl or inc mov cmp sub inc (bad) leave inc (bad) mov aaa mov loope mov int3 outsl push push pop icebp inc dec inc jecxz pushf leave in sbb mov scas jmp adc inc dec insb xchg adc push push in (bad) (bad) repz int add mov add nop mov addl inc lcall pushf pop repz imul rolb roll inc leave pop (bad) cltd add insl inc int lcall loope mov inc pop mov adc stos lea sub out nop incb sub push arpl aaa fwait add imul mov out (bad) (bad) in dec push and rcrl inc cmc mov rorl push lods in jbe and aaa dec push mov jl (bad) pop cmp repz in and (bad) (bad) rolb add add add (bad) pusha and sbbl xor mov ffreep jmp (bad) repnz incb jmp pop cld outsl mov dec jp jnp add push (bad) jmp fwait (bad) in xchg dec and sub mov cltd push imulb ja fdivrp int3 or mov push lds and cmpsb divl push cltd sti jge jne fist imul test dec adc push dec push mov out clc jmp es (bad) fsts mov into cmp add add iret inc xchg cmp bound mov shll lcall ret cmpb imul pop and pop xchg ss pushf mul dec iret fdivl inc test aas xor xor inc jp mov into outsl mov push mov cmp (bad) push mov sar lahf sbb cli icebp repnz cmc aam xor ja push aad or cmp dec mov sub pusha arpl je jp mov aam not dec test data16 cmpsl xor add add add add icebp lea lahf add sub stos dec dec add bound dec roll jge sahf dec xor push pop add rolb or loopne mov enter push dec int3 out aad adc xor push mov mov lock enter push ljmp inc and movsb mov pop daa mov int3 cmpsl inc je (bad) in cwtl out dec dec cld mov std les push add fiadd sbb or and mov add add add add insb je loope lahf out mov sbbl mov push cmpsb mov mov fcoms mov outsb dec mov inc jb mov mov jp insb ret mov push (bad) repz or or leave lcall cli sub (bad) xor inc inc add fistp and shll (bad) in xchg je pop imul outsl jno fdivl jb xor in add cli shlb dec pop mov add add jmp lea sahf cwtl push std xor mov push and cmp fdivs push add mov inc add mov xor inc pop fistpl xor sbb inc or mov push (bad) nop dec add pop and popa mov lods lcall rorl test dec fcomp and inc daa test adc popa or sbb std xchg faddp les xchg outsb and je std push cmp pop dec xor add mov add add add out popf mov push call pop je pop dec insl add hlt stc adc mov or and inc sarb cltd and pop jp jno sub cmp and stos std push mov lret pop nop pop pop add outsb mov stos push out jnp sub in mov or sbb mov arpl int aaa push out inc inc ficom (bad) mov adc out icebp jge fsub aas aas mov addr16 jae add mov jmp pop pusha cld mov or test into sahf ret enter out fistp inc xchg rcrl mov repz sub ds (bad) rcpps es push mov lock jle std cmp cmp jle pusha (bad) mov pop in or xor out cmp arpl xchg repz lods xor mov loopne popa add and xchg fidivr aam push adc (bad) and (bad) push and adc test and cmp scas lock add add xor adc popl dec adc out push scas push xor leave out into xor add mov lea sub fisttpll mov push mov push int loop push in mov cli jge in lds mov xor mov xchg push sub shll sbb cmpsl and sbb fcompl fmul popf cwtl andl jns call in (bad) adc fiaddl xor mov stos push aaa cltd jo rol add add add add negl dec ss mov sarb push pop pop mov cmpsb mov add adc mov insb mov dec mov jne shrl sbb (bad) adc les jbe imul bswap pop sahf mov cld fwait bound rolb xor sub jbe xor cmp cli inc inc cmpsl xchg mov lds ret cmp add sbb mov mov or and ret or bound (bad) loope stos push fisttpl lock cmp add add add push sarb inc dec std jle shlb rclb (bad) lret jns mov push out loope insb rcrb or jg testb loope popa push jmp std push sub jecxz xorb dec rep mov jb out mov mov jp insb js adc lods sti inc shrl jmp aad jl xchg (bad) int3 sub aaa xchg aad push in or imul xchg std or cwtl fwait adc in pop jp out adc hlt mov mov xor cmp push mov cs push in and icebp pop and mov (bad) push mov and pop jns (bad) or sbb mov fidivr push rcll xchg insb inc xor rcll imul das mov (bad) jae mov inc outsb cmp imul cli or rol ss mov stos outsl loop adc xchg sbb cmp into add mov add outsl ljmp dec ret add add out jmpw xor sub addr16 stc mov sbb ljmp sbb xor push xor in roll or jo xor mov or movsl inc cwtl add add pop lcall inc (bad) jecxz jo ljmp imul scas and xor adc popf or push mov adc movswl test mov xor dec inc loope add rolb (bad) loopne je mov adc aas xchg and add pop and aaa xor sarl lret stc cmp mov imul or ret cld das fstp jmp xchg stos push cli test cs stos jae movb pop mov cmp lahf xchg out sbb (bad) das (bad) test mov push adcb mov notb cmpsl mov daa push (bad) cltd mov inc clc stos (bad) jle aaa (bad) push addr16 jg or xchg pop (bad) aad pushf inc ljmp add add add or sub push mov add js shlb lods inc pop jg xchg mov pop jnp push aad call jns bsf jp je fsubs popf cltd stc jmp (bad) je lahf and add rorl gs out cltd fcompl scas repz xadd add dec (bad) jnp out repz sub mov lret inc push cltd cmp mov xlat jg xor push lock mov ret add add add add add aad jle sbb out imul fsubrs fbld push iret sbb push loop shl push out aad test into loopne dec in imul ljmp repz iret sbb aam inc cld sbb push cmp jmp jo pop adc test in fucomip rorl dec sub push dec fisttpl mov jbe scas mov ss imul ror pop js push adc mov cld add add add adc repz in nop fdivrp hlt stos sub dec fisub or es stos pop scas and rolb push mov add inc popf scas fidivl add xor fabs dec leave cmpsb arpl mov jge lea and dec outsb mov xchg add stos movsl nop sub add jae int xlat mov divl pop sbbb test xchg ja xchg jge stos loop lcall push ror dec lret (bad) sbb stos jmp add add add jle xchg sub dec mov xor in xchg inc (bad) pop sub mov push nop push push jo lock addr16 movsl call adc insb outsb loop jl inc cmp outsb xor sbb xorl xor jl jbe (bad) es ss cmp inc hlt sbb pop mov pop lcall or push mulb lret stos lahf sbb fadds aad ljmp fnstenv movsl adc jl adc cwtl and in jns add bound adc pop divl insl ds lea xor adc or stos out rcll push scas dec fwait pop int3 in (bad) sbb lret out xchg (bad) xchg lea mov popf (bad) adc scas sub insb or jecxz popa addr16 adc arpl cmpsl sbb js repz xchg cmpsb dec (bad) mov std mov push aam xchg add pop add mov imul fwait out sub sbb inc xor test inc mov dec int3 mov (bad) mov mov test cmp jge arpl pop (bad) cmc fnsetpm(287 xor mov testl sub sub test mov jne mov inc push and dec or push sahf jg sbb test mov jg dec int (bad) jmp ljmp (bad) movb imul out mov mov add add add add add mov fsubrp inc cmp push mov out mov dec push loop inc out pop stos xchg lret cmp mov dec adcb imul orl mov sti pop pushf xchg cltd fnop sub pop stc loopne mov jbe mov sub sub adc adc and (bad) lret jno dec int xor andl loopne cmpsl mov lods jmp adc xor outsl jmp (bad) fimull add add add in dec jno,pt nop inc xor aad xchg cmpsl push jp fsts outsb adc call push push int and and dec loopne lds xor mov or push inc pop xchg into stos adc idivb jae lods (bad) outsb in clc insb jl mov (bad) arpl rcl cltd push push mov jp xchg adcl mov (bad) fistpll inc ss mov fistp sub (bad) xchg jle jmp mov mov inc insb cmp add add mov sub mov or cmpsl call rcr fwait das pop jb test clc fstps stc lods mov jbe aaa testl or arpl cwtl int3 pusha arpl adc xchg sub movsl outsl pop mov pop daa dec xchg decl cltd pop loope fwait das nop enter ljmp cmp xchg addr16 cmp pop xchg sbb inc sarl imul leave sbb or mov hlt iret (bad) lea xchg (bad) ljmp jbe add add add dec ljmp dec scas leave xor mov pop ljmp pop ret pop pop sbb std (bad) pop mov sar sub xor sub pop movsb outsb arpl pop mov loop xchg push adc clc mov push les mov sub sbb inc lahf push (bad) sbb cmp push push mov sar mov jp test sbb (bad) cli in (bad) jb push or fxch jo dec inc or mov add and lcall pop jae int and aas mov jb (bad) pop and mov outsb mov and add sub sub xlat mov test xchg sub add pushf jne mov sbb das and fsubrs cld out pop xor arpl jns aas push imul cmpsl shrl xor jbe imul sub or cmp dec shr hlt mov mov and (bad) push lods cmp and sub and add add add negl push incl lock ret fwait push inc dec pop jle mov clc xchg out ja sub mov or mov mov lret repnz jbe loop lret inc decb fwait mov jecxz dec rol in jmp mov adc push sbb add test mov cwtl xor sbb adc popf test add push jbe pop popf pop pop ret xchg fninit cwtl andl insb out jle rcrb ret in std sbb sub and mov or push sahf mov outsl cs push pop cld push dec push ljmp sbb and fimul sbb in inc cmp (bad) pop jl inc jnp stos jle xchg pop cmp (bad) lcall or aad in fwait lods loopne sbb punpckhbw push xor rorb fldt sub dec sub inc add mov sbb (bad) mov int3 mov or inc add xchg xor xchg aam lock xchg in mov pop daa mov into insb xchg mov add xchg mov test movsl ja js mov lret ss mov ds jne lahf pop mov pop jecxz nop daa or jnp adc add jns fwait pop jnp and sbb scas push aaa mov dec scas in or push cld loope (bad) lock insb cs mov imul (bad) stos mov scas fwait add dec lock push xchg inc mov sub add add add add mov pop loope in xor or pop add ret mov cld add ret sarl leave xchg jp cltd movsl stos scas scas movsl fsubrl mov pop cmc xchg das (bad) scas data16 sub jae lret aaa aaa (bad) movsb jnp and movb pushf xor lcall push pop sub rclb xchg sbb mov cmp test push ljmp push lds mov adc add add add dec mov into icebp fcompl xor jecxz (bad) jnp (bad) mov and sub cld adc insb aaa jge cld adc xchg ds (bad) dec push notb mov ljmp fsts js std das or enter repnz xor es add int mov movsb or inc adc mov cltd xchg mov inc test (bad) clc xor add loop mov lods out mov into dec les add add add inc cmp adc add ljmp outsl fdivs cli pusha xchg mov jo movsl or dec jae cmc (bad) push lods (bad) push pop js cmp mov lret jecxz or cmpsb push jno add ret inc daa cltd repz in je push cmp movsl aam mov aad int lahf jg jb das add pop mov sahf cmc adc sub xor jbe sbb sbb fisubrl lock cli mov repz mov fcomps push xchg das sbb add add add add (bad) dec mov or xchg xor (bad) add cli insb fs mov lcall dec jge out call mov int3 data16 mov and fimull enter push push lret adc dec push movsb jno push jb bound and add xor pushf insl add mov sub push mov pop and or adc into mov mov xchg pop movsb iret jae xchg lock imul jl mov test and adc add jmp scas mov mov xor pop adc sti dec lcall push outsb pop sahf lods imul fidiv lods xlat lods dec add cs dec adc fs ja xchg jne mov dec mov fimul outsl xorb and mov sbb or push sbb cmc je sub xor sbb lret inc jl rcr push push adc rclb in out jl lods xchg jmp je jg or test dec mov ficoml dec jmp call push fistpll aaa loope dec (bad) dec add mov fsubs cli out ja fdivl bound insl jns dec dec sarl gs xor mov mov jg lcall or adc or inc xlat (bad) and imul lret sub lods mov inc imul or mov iret jno mov dec fwait sub inc aam lret add popl (bad) (bad) inc sub push sahf sub fild (bad) add jecxz and out ret push mov in int3 add jecxz sbb mov push arpl sub lods mov aas pop scas loopne test or ds outsb daa addl sahf out cmp jnp pushf (bad) icebp xorb popf (bad) jne jb cwtl xchg push (bad) rcll mov (bad) std jmp loope stc push jno adc lock jecxz dec mov (bad) iret pop mov daa subb lret std dec dec mov cmpl cmp data16 ss clc push lea push push dec and pusha int add add add add xchg in lret pushw and outsl into fcompl stos imul pop add or mov xchg pop insb adc xor jge jmp jbe jg pushf mov cmp outsb pop or enter cbtw inc leave add (bad) lret stos ret xor or mov movsl jno pop add out push jns sarl and cli dec rolb div push es xorps pop xor cmpsb int lods mov mov loop dec xor inc ror sahf and xor add add dec lock jo cmpsb inc std dec dec jnp fistp aaa adc jp gs dec in jp movsl sub mulb jge out xlat jp pushf xor sar and adc inc jmp push adc js adc xchg mov adc mov fxch pusha lods lds fsts jne xor fs push sub lods sbb mov popa div (bad) cmc and rcr outsb sub push aaa cld inc (bad) loope ds clc cmp aad ss mov mov (bad) mov and add add add add aas xchg adc xchg hlt clc add jbe fsub add data16 in hlt xor cmp mov jge rcl ja mov inc xor dec inc cmp jmp xchg push subl or stos sahf push mov ret adc fidivrl gs push inc xchg jne xchg cs decb xor mov cmp pop int lea dec nop fnstsw hlt (bad) sbb jo mov jl pop pop push dec or push shrl add add add add dec push std adc mov mov addr16 fcompl fisttpl (bad) push out xchg dec test pop setae in imul lret fdiv sub bound js jo outsb cmpsb push in in add repz out mov and movsl xchg mov ljmp sub mov test mov push jbe incl das jg (bad) jmp cld push pop rol inc mov jp push lret or jbe dec imul add push xlat fs add lcall jnp sub and pop jne in sbb push cmp int3 pop push call dec repz lahf sbb push jo hlt mov (bad) movsb shrb xchg insb out repz in jns sub mov cmpsl sbb mov cmp add inc out popa adc (bad) outsb xor icebp pop pop add sbb xchg stc push cmp push sbb jle shrl xchg lcall adc mov mov dec std out add add scas adc in xor push sti mov stos push fildll dec xlat out out lcall clc pop jae jb movsb insl das xor nop enter jbe stos jae jns cltd ss jecxz in sbb int les test pop ljmp cmp inc add sub mov decl mov pop jp sub mov xor mov cmp jbe,pn mov push cld jp sub inc in outsl into sbb ja inc mov xchg ror add loopne adc das lcall mov sub jl (bad) jl nop loope adcl inc xor mov in dec scas fld jbe push or cltd push jg es outsl add push mov (bad) aam inc inc or jecxz jno jg cmp imul sbb daa lods std out loopne or mov cld xchg test lds jno pushf loop inc fdivl mov jmp in push cmp daa or mov lret out scas adc addr16 out add add add adc test pop fdivr movsl xor mov push jp jmp adc or cmp pop outsl cmp cmp fisttp hlt jbe clc aad icebp mov gs jae sbb clc insb or into sti sbb mov flds call sti testb cmc stos xchg sarl pop lods cmpsb xor jge icebp in add cmp js pusha mov lahf in ja stos cmp dec pop ds lods inc insb (bad) mov int pop push mov adc jnp out out push add ja mov add add add or dec or lret mov cmp push mov fstps mov lods nop pop xor push pop xchg inc lcall and (bad) or es lret jle loope xor out mov pop aas ds cmp mull and mov xchg fimul add push pushf loope,pt pop xor xor xchg ljmp ljmp rclb cmpsl mov gs jo ret xor test jp stos out sub add jns test fs popl sub push or jmp pop mov add es push mov mov test cwtl outsl jo rorl inc (bad) in das mov mov les orl sub or lret mov fcoms xchg ja cmp mov xor jns icebp repnz jp jmp add cmpsl pusha xor sbb test rolb lods inc mov call ret add add cmpsl add push xchg scas jb fstpl in aam hlt fs and mov loop int3 imul popa sub icebp pop test sub jae repnz jbe mov mov aad shl loop ret ret pushf push mov push xor jmp pop ljmp aaa and jb mov cmp out jns sbb faddl outsb orl mov jbe jecxz aaa or bound imul nop js xor icebp mov ja jecxz sar add add add popa popf mov sbb (bad) ss push xchg jg inc dec sbb jp dec add pop jge sub add xchg aam sbb aaa out pusha push jb push in (bad) jle dec jmp or (bad) push lock in nop iret dec ror lret or stc xchg add out mov jecxz cmp int jnp scas lret add inc stc xchg cli sub (bad) popa sub sbb gs int mov inc dec (bad) xlat adc add add add add xchg mov mov inc cmp push movsl inc popa aad (bad) ja ja std hlt and mov (bad) int adc pop jno mov dec xor cmp lret cmp ljmp icebp or and push push inc mov dec loop test mov lds and bound add mov mov aaa lret test rcl cmp (bad) lock jo xchg test mov mov xor jo or (bad) xor arpl add add add inc jo dec (bad) scas fdiv xor popf popl fstps sub and gs movsl push sub cld repnz loope dec mov in ret lods pop sub xlat nop mov mov jnp dec data16 insb lret push mov std repz jb add (bad) jmp mov sub mov cs aad add aad dec dec sbb arpl sbb sub pop sbb mov adc inc fisttpl push (bad) shll xchg sahf sti jno mov rcr test add add add add int (bad) ja push sub nop scas insb adc je hlt pop inc mov cmp ljmp subl leave pop jge in inc aam pop cmp jnp fcompl add add sbb rcll dec not or xchg cli lret jmp jne outsl divl lcall mov in jp pop pop sub push push cmpsl fwait pop out and inc (bad) xchg cmp cltd (bad) xor push aaa pop mov jns xchg negb add dec sub jo add add add add lods mov xor stos sub pop sbb lock imul jp aaa inc shr imul sub inc adc mov add sbbl add mov cmp mov les sub (bad) lahf mov jns and cmpsb mov jne ror dec std jno lcall xchg inc imul xchg test (bad) aaa cmp push pop push adc mov mov xor mov adc bound out aad pop mov add cld jnp (bad) fs movsb pop add inc inc and aad scas int mov fbstp test sub (bad) scas jnp rorl (bad) in daa inc stc out mov mov cmpsl push (bad) aas jl xchg rcl loop cmp push ljmp adc (bad) sbbl jge out xchg xchg imul add dec jle stc and dec test xchg and pop les sahf (bad) cmp leave add add add add shr ficom push cmp movsb arpl pusha and lods sti lods fldenv ja ljmp rorb lds jp dec (bad) push repnz stos das xchg dec or loop mov ret mov inc pop or jbe ficoml ret push cwtl lahf lcall arpl repz mov and mov in mov cmc push mov xchg or pop jb push sahf xchg jnp repz add add add stos nop inc sarb dec das es mov mov negl in test push (bad) cmp mov add mov (bad) imul aaa push sbb and dec cmp clc xchg xor pop sti cs xchg dec jp lret mov and add out test mov xchg out ss fimull adc adc stc pop adc ds mov jge cmp fdivrl mov sti jbe cs jno arpl pop test xor sarl loope inc (bad) jno cltd mov std add add add (bad) adc movsb repnz jb jp sub xorl vaddsubps xchg (bad) ss sub (bad) mov jge daa movsl fmuls enter repz xchg adc ja push jns scas (bad) arpl jp xor nop cmp xchg inc loop out xchg xchg jmp cmp out scas adc std lret stc jle enter sub stos push add aam and sbb cld add jl cmpsb (bad) inc lcall cld xor add add add add dec add pop xor fnstcw (bad) pop les mov xor sub out jnp imul sub adc inc pop add addr16 jno imul mov nop cmp mov lea jmp xchg lds pop adc sub in and aam mov aam and mov stc push es mov fdiv repnz icebp lock fs jne imul sbb push sbb pop add jp jne mov add add outsb cltd (bad) push sar insb xchg lcall out mov call or aad dec movsb jo jnp les jg fs cld repz jb lds mov push push ljmp pop dec out sub mov lcall mov push lods dec xchg decl fmull stc mov hlt int xor push cmp popa (bad) mov or lret mov and inc enter push cmp roll jae xchg movsb ret push or lret and sti test push mov mov or dec inc aad stos cmp jae lcall lods mov mov in mov or lds pop xchg (bad) enter out xchg mov movsl cmp pushf cmp mov aad inc sahf test arpl (bad) inc movsl lahf dec xchg xorl jmp test lds vpsrlq data16 jl cmp sbb out repz into push push loopne insl daa add jg mul add rcll test push sub cmp lea jg adc popa gs jo cmp pop repnz mov (bad) pop call popf (bad) xchg fs jbe inc xor mov xor jo pop add jmp lods (bad) push ret push insl push sahf mov sbb sub mov mov leave fsubrs loopne,pt mov xchg pushf out addr16 mov push or mov ror jmp jno mov in or add test lahf outsb ret add add add sub inc into js repz int3 shll movsb (bad) pop pop pop popf add dec pop pop cmp sahf dec decb pop dec call aam ret imul push mov sub and mov dec xchg cld fwait cmp xchg mov out pop mov lods test (bad) dec and sti mov xor (bad) xchg (bad) or sub dec push sti in fstpt sub rorb iret clc lret sbb fs je add std cld xchg and test cmp or cmc inc inc lds sbb pop ja leave loope add dec ja push and outsb fwait mov popl fcoml sub mov nop pop mov push cmc fs pop add ret sbb xchg mov xlat outsb imul push femms insb enter repz fcoml test xor and xchg mov pop mov in int pusha mov mov jbe mov (bad) sub cmp or sbb enter fbstp adc and sbb lret pop pop cmp push insl push and bnd cmpsb lods xchg dec push addl cmp fs call cltd push jge dec lods int insl push sbb sahf scas xchg and pop mov jne xchg xor das sbb dec adc pop xchg je shll out jmp lods in xlat sarl (bad) mov loopne mov sbb bnd lods std add leave add aaa test dec add (bad) int imul in mov mov jg cmp sub out stc cltd mov pop stos sbb cli out dec and mov int3 jb pop mov shl cmpsb jae mov out cmp pop and mov xchg xor nop adc mov ret lods jns push mov out rcll jns add xor fdivl xchg mov fldenv rorb stc ljmp out (bad) pop push mov add mov push pop mov jns sub and aaa add inc push call pop sub js and pop xchg rcl stc cltd xchg or loopne repnz sahf fdivp popf imul push ficompl daa mov inc jge dec jnp mov jbe xor xor dec cmpw (bad) fcomi (bad) xchg xchg addr16 and mov sahf inc mov add fidivl push in jecxz outsb iret cwtl add mov mov mov or add add add add clc (bad) mov std sbb lret adc mov jp push and aad enter xchg pushf mov ret test cli shrl pop je enter lcall addr16 inc xchg mov out cltd adc lods je or cmpsb cli push or (bad) xor cmc mov fildll into mov dec popf push pop jge adc fnsave out pop (bad) or push fisttpll push bound popa sahf daa push pop lock add add add in sbb adc aam mov dec or iret cmp daa cmp adc aam test cmp add jle imul lods fs iret test or push and adc jg (bad) push mov mov ret addl mov js repz xor aad pop sbb add push sub inc jecxz xor (bad) mov test push das test and dec dec mull cmc push jae int cs ljmp cmp xlat and push sti ja mov add add mov movsl add adc data16 dec scas mov cltd imul push push arpl lods loop cmp cmp mov shrb cmp adc or (bad) lahf inc inc pushf xor and popf (bad) sbb lcall ret shrl stos cwtl movsb inc xchg jp ss jge (bad) in or inc pop jb rorl (bad) xor movsb fsts jle subl call pop lods sarl dec (bad) nop adc mov push push ja cld sbb add add add add lods mov xchg push out ljmp lret pop inc dec sarb xchg es cmp daa lods imul push and xor imull ret cmp stos popl cmpsl popf inc (bad) (bad) fsubrs out cld pop (bad) hlt xor lret repz dec enter dec roll pushf cmpsl mov sub mov stc push mov or js rcrb sbb mov fmuls jb bound mov popa jbe push daa es in lret push xchg xor xchg cmpsb jbe add add add aaa (bad) mov lods aas xlat pop stc jno inc lea fwait loopne mov aas dec (bad) cmp iret pusha (bad) loope loopne lret cmpsb xchg insb lods shll rcrl xchg ss lret push stos xor je nop scas dec pop dec popf std pushf xchg pop pop pushf loop and stos clc or inc cmp call add pop (bad) jb mov pop mov dec out add push (bad) test mov int xor repnz hlt hlt in loopne inc adcl sbb mov sbb sbb (bad) cmp add add add pop outsl mov add sbb (bad) push lea mov and sub xchg outsb inc (bad) mov shrl fimul lock inc cmp and push push cwtl insb loop jl mov mov into enter or jmp ret cmc clc jmp mov sti mov (bad) and xchg insl sub mov loop or mov (bad) sbb xor negl outsl rcrb test pop stos fldt in fdivrs inc sub iret sub inc loop fisubrl ret mov cmp (bad) lret ficompl xor inc mov jecxz sub xor subl lds repnz xor or add ret mov (bad) negl or dec bound pusha int push dec xchg in xchg mov ljmp cmp popa ljmp int3 mov mov sti psraw mov out arpl mov pop fwait leave rclb movsl mov negl add add cmp div test sti fwait mov stos jmp and subb add xchg aas cmovnp loope pushf mov lea pop stc lods pop and (bad) imul mov and sub loop xor mov jns or lock (bad) imul mov sahf push mov add or dec lock je sbb cmp push jecxz mov inc xor jne out pop jecxz jmp (bad) sub add mov jp xor fbstp aam push je int3 leave cltd push pushl in fcmovnu scas xor cwtl in fidivl inc das xchg jecxz (bad) mov and cmp mov gs mov movsl (bad) mov repz mov mov dec scas out mov pop hlt loopne rclw pop mov movb and cltd mov sbb ss stc mov mov cmp xor test adc dec sar popa add or cmpsl lock mov and pop mov lock add add add add out inc cli rcr lods mov mov push mov notl mov cmp (bad) xchg cmp pop shll mov add fwait xchg mov adc aad mov mov aad dec pop lods xchg in cld cmp push cli sti jbe loope out popa xchg jnp mov pop adc jg jno cmp and pop dec iret inc mov mov mov aas push add fdivrl mov and push cmpsl or jmp xchg jo out out add add add into xchg hlt test je push mov and std fisttp ror popa add lock decb xchg cwtl mov lret out ja sub (bad) fstpt mov cmpsb adc pop je aaa dec ljmp sbb sbb sbb out repnz repz outsl call pusha mov push mov cs into jmp lods sub test dec pop dec pop and (bad) jl jge push enter gs fisub outsb fisttp int arpl add add mov pop mov cld addb inc dec pop test push rorl ljmp (bad) mov adc bound cmp inc jno in xchg inc sbb push jbe inc push mov mov fistpll scas adc mov inc (bad) sub jnp (bad) scas xor mov (bad) or pusha jbe sti pop mov dec jb daa jo mov dec lods mov xlat ja sbb add pop rclb es insl roll lds or xor gs mov mov imul inc mov inc pop insb push ds mov jb mov jne pop sbb cmp lret inc lds xchg xor (bad) xor xchg outsl pop in cs sbb inc subl das mov pop push stos test xor sub fcomp (bad) ret and roll sub add shrl lea pop push out imul rorl pop popa adc push lret xor xchg push push int3 cmp pop dec loopne adc push popa ds repnz negl (bad) xlat cmp cmpsb xorl sarl imul pusha xchg pop lds icebp stos adc mov imul sbb addr16 jecxz jno shll sbb mov xor jno addb dec mov jbe out dec push sub not lret call pop jmp outsl mov loopne cmc and add into push (bad) or mov dec insl xsha256 cmpsb shlb push into sub into adc add add add add mov mov or cmp clc int cmp jo std std mov icebp pop cmp mov mov pop lods insl and push popa mov mov fs jo (bad) mov sti add cltd jg sbb sbb jno scas add andl lret xchg outsl movsb cmpsl rcr and inc dec aam out popa mov sub outsb jl mov jmp cmp and xor sbb cs add fnclex jnp mov xchg sub les or in movsl jge add add add add push and mov pusha mov sub dec std and fisubr ss mov cmp movsb out adc cmp mov adc lock ret inc mov std fsubrl ret jb sbb inc lods xor adcl call ret mull lods test sbb sub push jbe andl mov (bad) jns int xor lds das adc xor mov (bad) aam (bad) cmp inc mov add add add jns repz dec push loop or mov mov leave aaa sub xlat das sar inc fsubrl mov and dec xor insl jle push jecxz aad and iret popf outsb aaa insl jnp insb js push sbbb jne (bad) jge cmp xlat xchg movsl add xchg inc in (bad) push int3 test sub arpl push mov lea xor inc nop cmp dec nop sbb cmp jo cwtl pop inc call cmc adc mov xor add add add xor pop bound outsl mov (bad) repz mov jecxz sbb (bad) int sub jg stos mov lods nop (bad) outsb outsb repnz into mov sub repz mov sbb sti xor mov out ret into push aam je jecxz int3 adc (bad) and xorps and clc loopne lahf inc sbb lahf test dec sbb out pop and daa pop push pop out push aad ds ret jp inc sarb lods ror sub push push and call sbb cwtl sub out and fadds iret cmp mov repz jecxz jnp in jmp and mov xorb mov push sbb jecxz jle iret aam (bad) pushf repz dec dec pop sbb (bad) mov mov add and pushf mov insb aas adc insb push push mov inc in clc in cmp mov mov imul add add lods in sbb mov sbb pop stos adc std mov into dec mov push fist push and mull cltd in mov or push in push jno into out inc nop lahf lret add fiadd fsubs pop iret out xchg mov inc in mov cmp sti push fstl fildll add js and in loopne mov insb mov jno shrb xchg push fbld push and cmpsb insl xchg les inc mov cmp add add add add and jbe pushf sbb xchg or pop addl outsl lds imul pop scas out pusha cmp adc mov mov pop imul inc mov xorb faddl xchg ljmp adc sub out es add pop rolb xchg int3 xchg lds mov arpl hlt test xor adc mov lahf cli mov into push aas adc inc fidivl (bad) out cmp int3 cmc mov cld add add add xchg roll lea loop mov pop fadd mov aaa mov mov lods add enter push lock push dec andl movsb and (bad) push test test movsb add push xor jae jge push pop test cmp add xchg dec orl iret pop or mov hlt scas fwait pop jne hlt cmc cmc rolb mov push popw fwait cmpsl movsb xchg imul iret stc lods faddl dec inc mov xlat add into sbb loop add add add push pop arpl push test push cmpsb xchg imul cwtl mov andl sbb addr16 ljmp hlt pop xor lea sub and das std xchg int ja out jae or sbb icebp push iret sbb inc out adc xchg (bad) into push fisubr das mov (bad) in jmp daa mov in movsl and xchg data16 (bad) nop movsl or pop cmp add add add lds jle lds mov and loope inc add es mov rorl addr16 pushf mov dec dec dec xchg xor jl cs lods sub mov lcall push adcl movsl stos dec js jne pop xlat xor mov imul enter and adc xor jge in pop out pop and mov clc (bad) push mov inc loopne sarb fldenv xor js inc cmp pop sbb and xor cld add add add sub cmp das add mov les js add loopne sarl stc sub fsubrl stos dec xor mov sub sub mov xchg mov aam push push push (bad) fiaddl jg movsl dec sub ficompl jnp cli (bad) js insl jecxz mov inc mov dec jb jnp xor hlt (bad) add sbb jnp stc cmpsl add sub inc pop jnp xchg test icebp push mov xorl lock or pushf outsl add add add cltd mov hlt pop shll (bad) loope jl push cld pop dec cwtl pop stos rolb scas push rcll pop ds jl sbb ja mov xchg lds jo cld and add imul mov mov stos lods cmpsl jecxz ja (bad) and xchg test sub mov cli xor mov dec mov subb inc push adc ljmp lods jnp aad pop bound (bad) movsl jl imul sub mov inc sub add jno rcll xchg sub jp jns cs and push add cltd and add add or jns and push inc jb adc loope xor (bad) mov push inc xor lods dec xchg dec mov and dec mov push lds dec int3 pushf cmc (bad) jg addr16 stos jnp mov adc in jo push clc xchg rol out in push stc dec paddq or inc fnstsw jne test in int (bad) clc aas sahf jmp pop adc xchg andb in add xchg xor jo lret mov fdivrp in jns stc inc test stos cmpsl rclb adc fdivr mov js cli xor xchg mov into mov lods mov cmp out jne jo sbb push leave lahf (bad) jae fs cs cmp xchg test push jle push inc mov rolb imul (bad) je popa mov outsl rorl cmpxchg xor test jecxz stc dec mov subb dec rcll jns enter push push stos jl pusha ss add add add aam repz and xchg call cmpsl or les gs stos pop mov and int loope mov mov loopne pop stos jmp or mov movsb sbb mov jnp das jo scas sbbl aas jo push pusha push (bad) loop sub nop js inc mov jl into jno mov cmc popa lahf push (bad) add mov cmp sbb dec (bad) dec clc push jecxz call jmp test jns inc jb cmp sbb ds add add out in dec movsl push pop pop (bad) (bad) addr16 jge push (bad) lods push out pop xor sbb dec sbb jmp aaa mov ss mov repnz (bad) dec mov jp test push lcall dec outsl push mov std jae sti mov lret scas or ret xchg mov mov movsb scas aad test xor inc xchg fidivrl hlt sub sar mov ret sti add stos mov jns add mov mov add add add out fimul xchg sti mov mov imulb pop ret jno pop jb and jno pusha imul mov mov sti mov push pop xchg repz push icebp push xchg lret je adc add sahf add les rcll insb sbb jo cmp push js movsl sub shrb stos xchg (bad) jecxz out mov adc pushf addr16 sysenter int3 test fisttpl xor xchg out insb (bad) jp test das lea pop add mov popf and add lock push and scas xabort sbb jae xchg dec sub sarl push lods jg mov mov stc xor outsb shl outsb push pop or lcall fidivl imul mov mov adc shrb mov cmp fsubrs xor mov test dec pop test js adc mov iret aas (bad) push int sub outsb jns ficompl fistp lods xchg cltd pop dec ret std dec adc movsb (bad) xchg sub add add xor sti fmul repz inc push fsubp push jmp xchg sbb push fsub inc jg aas leave ljmp sub inc test repz push data16 leave and fldl push mov and int popa dec push sahf cwtl xchg push dec das add add cmp adc arpl js mov inc and mov xor roll sbb pushl mov xchg stos outsb (bad) jge sbb (bad) aam add add add cmp cmpsl cmp cwtl jbe add repnz bound imul jae pushf xor lret jae or inc jecxz loopne ja or stc xchg ja stc jbe mov mulb xchg movsb pop rorl add mov push imul push jo notl pop cmp daa loop cmpsl fidiv mov adc adc testl in pop mov push fstpl movsl nop pop xchg cmpb and jl mov add add add leave fmulp cmp (bad) jb lahf mov dec orl mov mov ret addr16 pushf cmp dec mov xchg ja in pop sbb scas mov push loope jp pop icebp and (bad) clc dec test cmovs jmp int3 ud1 push stos xchg sub lods es xchg inc inc mov cmp push cmc in jae (bad) arpl mov pop adc jmp (bad) and sbb into divb imul int3 cltd repnz hlt pop jnp loope stc mov add add cmp ljmp je (bad) mov fcompl sub out xorl aam repnz iret addr16 or pop jne outsb cld aas cmp xchg pop inc test cli or fisub xlat xorb dec cmp jns out js pop sti fnstsw jge mov and add js mov adc test in icebp xchg adc (bad) jb loope scas test js lock xchg pusha pushw cmp adc lret rorb pushf fsubrs (bad) jmp in add add add lods sbb imul ljmp inc cli fsub outsl outsl xchg inc (bad) dec mov cmp pop xchg mov or in std pop xchg add push dec cmp cmp pop jnp xchg push into jo addr16 mov cmp (bad) fdivrp loop sub roll pusha push leave mov outsb jbe mov lods sub dec stos paddw sbb std insb and fsubrl aam add out (bad) mov xchg les lahf inc adc cmp sti in add add add add jmp ljmp sub mov and repz xlat mov stos push aad out xor dec mov or sbb pop dec sbb cwtl test or or mov pop sahf pop add loopne xchg fs xor icebp vdivss inc je sahf faddl fdivr cmp xchg ljmp mov adc cmp pop loop xchg xor push xor dec iret sbb js push scas add ja fwait jnp int and lret xchg clc xchg sbb mov outsb and add scas neg ret in sti jne das push pushf xor call into mov mov fsts xchg cld out repz pop out and les adc xlat das mov mov stc stos out stc cs push or sbb and mov add ret shlb mov jmp ljmp lahf and leave bnd adc repnz jbe sahf test ret ja add add add add aam pop mov out sahf and sar jp sbb pop (bad) or mov shrb jb mov mov add mov je (bad) into and hlt mov fcoms hlt jge lock sarl and outsl sbb aad jmp loope and es cvtps2pi addb push test mov insl mov lds xor lods lods (bad) mov cmp pushf rcl pop inc push ror pop dec cmp es push mov push jae les add test xchg pop and les stos enter mov jo mov push repnz ds dec fbstp mov mov out movsb (bad) (bad) imul xlat (bad) push in inc and je mov pop jl imull xor push repnz mov sahf stos xor sub add hlt hlt pop cmp pop adc addr16 inc aas lahf je or jl mov sbb xor inc ret dec (bad) out cmpb dec jmp cmp nop int3 ljmp sbb js push sbb add or out (bad) dec repnz pushf and mov xchg push mov mov arpl test movsl outsl sub mov div xor xchg lahf rol add sub cmp fisub jp push mov mov cmp clc mov (bad) pop icebp inc daa lahf jmpw dec loope mov mov mov lods bound out add mov mov jbe cs inc int mov xchg mov sbbb add add add add adc mov xor xchg out cltd or pop (bad) pop adc push iret (bad) mov cmp rol dec jns push push js mov mov jge rclb pop mov addl or inc insl std out lcall push mov mov mov mov jmp fsubrs idivb incb adc pop xor and scas cmp mov cli leave jp mov pusha (bad) in in shlb in push fisttpl add add add loope xor or dec and adc or mov xchg int3 sub je push lahf iret pop adc mov outsl or cmp sbb out adc leave inc push dec inc inc ret jp add cltd insb or push push lock and jp jae pop adc imul push xor cmp cmc mov mov jae adc ret inc bound and or fwait shll and pop mov inc jle fmull jge data16 dec cs add add nop or dec mov xor xchg cmp test push inc sarl dec (bad) jne cltd je ljmp dec adc inc inc and pop adc mov fsts jae or lock adc fldt push fdiv push xor dec mov lock or dec jns sub push xlat pop sbb insl mov stos push pop add movsb jmp sbb mov xchg bound mov out sarl xchg js add jns add add add add aad or jge ss (bad) cld and add data16 jl jmp mov and ljmp inc test imul mov mov adc cltd (bad) es in pop mov inc mov jbe test pusha (bad) dec rcl push dec iret sbb and mov cmp push test ret lea mov pop ja mov scas dec cld cmpb repnz pop movsl mov inc rorb out daa and push pop xchg xchg fwait cmp add add add add bound mov into aas in cwtl sbb inc adc jmp push jae inc mov shr aad rol ds ret js mov (bad) stos pusha cld or insl jno dec inc bound mov or pop cmp lds lds movsl ja sbb adc outsb adc cltd ret and sbb (bad) lret movsb insl sahf stc xlat hlt js add cld fistp and rclb aam pop gs xor jae rolb add add add inc pop cwtl cmp jmp xchg out fsub inc shlb mov imul scas fmull xor add dec ss out sbb fildll out or cltd lahf jne repnz mov insl push ficom xor mov cli cmovne fildl test sbb push sub int3 js bound mov fbld daa scas jnp es or cltd mov xor dec fisttpll add add add leave xchg stc aas das data16 jb mov cmp jns push dec jge cmp fs imull sbb test jnp not push mov (bad) nop and cltd push xchg dec in int adc mov fiadd lods ret push push xor mov dec out mov rcrb xchg fbstp movsb lea and das aas mov fistl sbb cmp jmp inc push pop iretw add mov xor or dec fsubrl outsb lods test mov imul add add jbe push jge in push sub xchg sarl mov mov (bad) out ss lods fwait clc fcom add and int pop cli sub or aas sub mov mov push mov mov push rcl hlt je add lds movl scas adc mov hlt ret mov rcrl pop mov sbb or jl jge cmp jno ja inc test inc mov mov or fs insl mov add add cltd insl or dec add lea outsb rcrl xchg loopne push sbb sub out or push sub cld sbb pop es pop stos jmp or call scas jmp mov cmp jno dec inc and inc movsb enter cmp dec adc (bad) jbe cmp jge sub bound jecxz jo xlat pop push adc lods jns into addr16 push jg repnz mov jl push dec ss adc fwait xor aam and adc movl cmp pop clc aam and ret jns out add xchg pop pop cmc addr16 stc xchg loop mov mov lds js orl pop sbb push cmpsl icebp and aaa cld clc add cwtl rcrl iret es sub movsl sbb insl sahf lret mov inc inc nop jg out or clc xchg push add (bad) (bad) aad js (bad) mov cs or jle sahf push dec mov (bad) lahf popf fistl sahf mov push add mov ds mov fstl into das push jbe aaa pop jae int3 out adc mov leave and xchg push repz or and outsb cmp (bad) jge icebp cli out sub lahf pop inc dec hlt xchg sbb jp mov in mov xor lods aam mov xor rcll test cmp sbb cmpsb mov repnz cmp ljmp scas adc decb pop mov bound push dec movsb dec and sbb ja (bad) pop out je xchg adc add add add (bad) mov (bad) imulb mov jns adc xor mov sbb cwtl inc mov aas push je adc mov push adc sahf aaa sub sbb lret pop and mov mov repnz jae or xchg movsl fstpl (bad) aas push jnp jg es mov sbb rcll lahf ret lock sub add and call pop in cmp sub aam push addr16 or lcallw push push add cmp jns xor out mov lds pop decb (bad) aad push mov cs xchg xor lret jo,pn in js and pop movb inc clc mov cmc mul sti sahf in cmp into pop xchg loopne int popf imul add lret outsl push int3 mov xorb or push std movsl popf repnz lea jns dec jne inc xor shrl insb arpl adc pop je mov cmp sbb mov add add add add arpl (bad) pusha and push pop sbb repnz test addl aas mov mov jae sbb dec or (bad) xor ja jmp sub cmp loop sub jno mov shrb push outsl pop pop mov mov cmp clc push dec xchg dec or cs pop (bad) mov push js call xchg fmull int sbb mov hlt pop imul add lret cmp scas data16 pop inc lahf fildl push add add push fldcw pop and jbe jmp int3 pop and push cmp cmp mov lods mov or sub cmp sar cmp jge sub call (bad) mov fwait xchg decb pop mov rcll pop and aad ret xor pop inc sti lods testl mov add pop stos orl dec mov cmpsb mov cmpsb fmul orl mov lods loop jl jle add das in add add add sbb dec es fnstenv (bad) dec dec daa lds popaw sbb nop (bad) aaa inc mov sahf adc mov fwait and or cmp jb jge aad popf lock push add push mov inc pop (bad) cmp pop push sbb sub push pushf mov icebp iret jle enter icebp adc data16 xor repnz pop ss jg dec inc call es orl add mov icebp add xor std cmp pop insb insb add add add add mov jo std insb loope out popa cwtl aas and cmp push dec sub and jb push movb stos movsl or lret int3 xor inc or cld ret lods sbb jecxz sub out push (bad) frstor add mov popa xor or sbb push mov in into and (bad) xlat mov xor add pusha jecxz or sti jl (bad) scas ficom xor dec rorl fs shrb test add add daa iret sbb cld icebp outsb int3 and sub inc sbb and inc xor push out test pop xchg xor fidivl pop xchg sbb cmpsl je fwait sarb lahf mov sub out test xchg addl and popa push cmp jnp mov dec in fwait insb stc mov cwtl lods (bad) repnz fyl2xp1 sbb stos mov cmc pop mov (bad) jmp repz add push pop and les ret cmpsb into and or movsb mov int mov roll cwtl adc int3 mov mov dec mov push or jnp,pn ss div or aas stos cmp or xchg lods mov xor pop adcl cmp sub (bad) sub scas mov addr16 rcr sub popf xchg and push xchg sbb push data16 fstpl insl mov fmull jmp (bad) mov mov test ds push and in aas push sti dec jmp ret mov dec mov xchg (bad) xlat jl movsl push sbb xor roll add sub and mov pcmpgtb les outsl mov mov (bad) mov pop pop cli mov sbb sbb decb mov jle (bad) sub pop cmp jbe out and jmp addr16 mov les sbb sti adc add cmpsb mov xchg dec mov push lock mov add jbe cmc fldt pop add and sbb mov loopne cmpsl insl mov dec rclb pop sub cmp (bad) stos (bad) mov icebp sbb adc pop enter xchg add (bad) mov and lahf mov outsb fs (bad) repz push push out repz dec xchg (bad) lods xor icebp or ja adc ret in or aas adcb inc and mov gs arpl inc fmul jl roll add add lahf mov sbb lret das (bad) mov js stos scas fstps cmp adc xchg cs xchg movsl lret test xor mov imul pop scas or sbb (bad) in imul out aaa jecxz pop jno (bad) jecxz mov xor repnz stos pushf push sbb pop xchg loop or push fldl and inc inc scas lcall je mov mov enter out movsb insl add lock inc jbe pop inc int3 mov pop stos xchg mov add add add add mov xchg insl xchg (bad) mov cmpl push pop cmpsl addr16 sub (bad) addr16 call sbb scas cmp cmp inc mov mov test lds dec icebp cmpsl ret lret sub sub enter cmpsl mov insl ret out test scas clc push rcrl push out repnz int3 mov pshufw fnstenv xlat loope icebp or push xor mov pop mov lretw lds xchg popl add add add add test mov xor dec test test or pop notl add mul dec push (bad) daa mov iret sub loopne sbb pop push sbb mov mov (bad) fsubrs ret out xchg insl pop push sbbw dec std pushf rcrl nop push mov cmp cmp lret test push inc cmpl adc xor lret roll pop fdivs push in gs jle addr16 push aaa repz inc pop (bad) idiv jno lret inc out push jmp add insl jbe inc fdivr sbb add xchg and rorl mov scas mov lret (bad) rorb arpl test cltd push push add out fiadd xor orb lods dec (bad) fidivrl insb addr16 hlt push (bad) push fldt faddl jns lea inc and jl inc scas mov lret inc pop aas movsb mov stc ds adc aam aad mov jmp clc sarb test repz ret sub push inc incl pusha add add add xlat and add jl mov stos ljmp xor and cmp insb fstps adc xorps inc dec test (bad) bound cmpsb adc mov ja lcall shrb enter xchg adc push inc outsb cmpsb nop lods jbe ret add push aas push rcrb mov xor add or adc add xchg arpl push int3 imul popf cwtl push sarb jno sub sbb cmp pusha cmc jne push mov loope add add add add add gs mov clc je out adc or cmc jb fwait hlt pop sbb fisub or pop sub or dec sahf push xor insl jg iret mov ljmp pop xor in or mov loope in xchg fnsave push push (bad) mov int3 mov arpl pushf scas mov push cmp sub sbb add cmp out push in faddl pop jp mov add (bad) push and or xchg fldl add add add outsb xlat mov dec sbb icebp jns push or push stc jo pop sub dec inc insl push icebp aas fsubp incb aas mov loope fcompl andb and mov xchg fldcw sbb cs fstpl jmp xor aas lds ss lods popf cmc mov mov cltd add dec adc inc movq dec dec mov movsb jg add test sub jp pop sbb cwtl push adcb add add add add cld inc cmp mov sbb jno mov (bad) mov es (bad) jmp mull insb sbb lods xchg mov jge mov (bad) lret sbb cmp inc and in dec xor jmp xchg jns jp pop cmp push insb and mov jp adc jmp pop js test addl push pop pop dec cmp fs mov add and aam jecxz sbb fs mov lods aad aas lea lret pop mov add add add shlb cmpb out nop loop (bad) or dec rolb mov or das test rcrb loop js add gs hlt cmp sbb rorb in in mov sahf xchg inc pop add into leave (bad) repz js clc pop push test icebp xchg insl sbb xor xlat sub add mov cwtl cwtl add lock scas lahf sbb jns inc cli push or xor in popf sub arpl dec pop ret xor out add in push ds cmpsb (bad) jg push mov push jo pusha pop cmpsb add cmp test and pop jns out insl dec xor sub sub daa pop nop add lds pop cwtl cmpl cmp imul loopne mov sbb sbb dec in mov int sarl jne shl daa std je mov clc idivl hlt and adc adc loop arpl xor scas aaa add repnz jbe or cmp add add push push mov xor lock hlt pop rol scas push ret adc fldenv lret pop mov fisub dec les cmp dec cs xlat repz loopne mov push push fdivr xor or push dec and pop test inc push out aas pop cld or ret inc push mov aad push adc sbb (bad) jecxz call ljmp aad cmp jo jnp jmp push lcall mov scas adc push and dec xchg xor add add add daa mov insb inc stc mov pop bswap fisttpll enter sbbb movsl push mov jne aam fdivl mov jl imul lods scas adc xchg iret inc mov dec ljmp cld dec mov mov sbb into frstor cs iret daa loopne scas jae (bad) (bad) dec dec cmc and cmc inc int3 ja sub repz mov xor les fcomip popf cmp inc mov loope frstor jne add add add add or fcom (bad) mov cmc test stos shll scas add xchg sbb aas or pop lcall cmp fsubrs pusha mov test sti test push xchg mov pop (bad) adcl xchg cmpsb inc fsts leave cmp popf dec adc ret cmc repz (bad) hlt sti inc cltd out jl jns ja aad xchg dec mov mov sub aad outsb jmp adc mov inc lret (bad) pop xchg inc inc leave jmp out fcomps in mov pop aad mov add add add add push iret dec sub fdiv mov push test mov mov imul mov inc inc arpl adc add mov lock xor jae push push mov shlb ficomp sub adc mov add mov stc aaa ret (bad) dec test andb xlat cli enter sub iret test xorb scas dec inc call adc mov xor nop dec lret pop je lods nop add mov mov jae xor lahf inc ljmp outsb repnz mov jnp pop loope in (bad) jno cs mov xchg jmp dec xor mov xchg push push jp popa add andb lea mov lods inc dec test mov sqrtps call les xchg mov in stos sub jl push enter movsl push push cmp cmpsb push test dec aaa mov fnclex lret test imull ret aam movsl cmpsl mov add add add dec sub pushf rclb push cmp imul inc sbb xor cmp clc rolb cmp int int xor inc cli and pop pushl outsl ljmp sub test dec pusha and jecxz dec and or icebp mov add mov push lahf push sbb lods and add jp rorb push out inc push sahf sti mov fisttpll inc in cmp nop hlt pop mov xor test add add add jg xor popf loope pop push lret mov subb or jnp fistpll jo sub not sub icebp mov sub xchg mov jns sub das add inc dec mov jge add and dec mov mov decb sbb jno mov mov aam mov xchg cmp xor sub pop aas in cltd fisttpl jecxz in or mov mov das lcall inc pop js outsb out bound pop out add dec pop or xor cwtl mov cmpsb mov stc mov bound std aam popl sub push ljmp fldenv add jmp or dec sub xor mov sbb xchg mov mov inc jnp cmpsb mov inc fcomps lahf cmp jmp or cmp lret bound xchg movsb cmp lahf and inc nop bound in enter add rolb pop je inc test add add add mov test repz cltd rcrb in int push roll mov cmp mov sub sub cs je pop mov (bad) pop imul pop (bad) ja sub stos (bad) and sub gs mov add adcl add sub shlb out cmp jne jb jb and xor jg jbe xchg xor pop out aad cmp cmp sbb addl push pop mov sbb add add not cmpsl jmp push mov sbb inc lods orl xchg mov inc mov ret jae mov or sbb das rcll les mov or cltd inc rorl imul into or enter mov pop loope jne add xchg mov or sub in in test add lcall not (bad) dec pushf mov fdiv ret (bad) fistpl sub fimul mov fidivl jno arpl add add bound int3 popf icebp fisttpl xor cmpsl push insb pop inc dec loop mov leave xor das xchg call push je sti xchg cli loop dec out aad cli (bad) jg scas ret mov fistpl iret xor ljmp cltd or fs or mov jg scas dec daa adc dec aam push add aam pop adc ret push ror xchg xchg mov inc or or (bad) jb cmpsl cmpsb movsl pop pop jg mov fwait in jbe xchg jns pop hlt push outsl cli xchg fnstenv pop into sbb add add add jno adc cli repnz (bad) sbb (bad) lahf ds sbb outsl aas cmp sub pop lret push into fmull xchg jle xor jb mov jg pop xchg aas xchg push aad jle inc outsb addl xchg jg cmp dec jo repnz xchg push jns mov fwait or cmp xlat pusha xchg iret fisttp stc into jns fcmovne mov mov insl jle xchg aas push dec push popa pop jo push inc xlat and sbb loopne sub repz xor scas mov sub and ss test pushf arpl out sbb call add add add add (bad) div div mov ja loope mov adcl jae int3 mov (bad) sbb lock sbb fldl rcl scas xchg dec sbb and sub jmp pop add mov fistl mov sbb scas jns test jae (bad) jnp je mov sbb jns movsb cltd dec test pop out ret cmp adc push pop xchg repnz mov fdivl ljmp cmpsl sti push in sub xor fldl add add out adc fwait icebp push push sub ret push mov push ljmp add sti xchg cmp aaa movsb dec push pop popf popf push mov sub xchg adc movsl sub flds fldl movsl repnz inc inc rclb and fcmovne cmp mov and jae insl xchg mov out or gs cld or out push mov mov mov jmp imul xor int les call inc sbb (bad) insl sbb add inc std dec je mov jnp pop repz dec lods sub call das pusha push mov (bad) mov in add cmp cmp push xchg sub scas mov lahf mov inc call mov and rcr fwait ljmp pop sub cs pushf in xchg lds xor enter (bad) (bad) lea sti mov lea and ljmp lods ret adc pop test sub lahf cmp repz (bad) dec inc push xchg mov add mov push (bad) stos and std fildll mov or sub jg jge je sbb enter pop cwtl scas or stos mov sub (bad) out xchg test xor roll or xchg jne cltd data16 fcmovb loopne and cmp jp js sub xchg pop add adc test xor jl mov aas sahf cmp cmpsl ret adc js or xor sarl adc add add add add (bad) test dec adcb sub (bad) aam stos rcr cmp rsm and insb cmp out adc fwait pop (bad) or cs ret sbb and cltd jne,pt push xor inc pop ret in das call sbb lret sahf add jmp fsubrs adc xorl push xor stc mov cs shl (bad) out jne popf and xor test adc outsl cld fwait add push ret stc dec cmp ficom addr16 jnp inc and cmpsl movsl cmpsl add adcb faddl mov dec clc xor repnz iret (bad) shrd repnz stos popf loop js inc clc adc dec arpl sub dec mov (bad) scas ds in cmp (bad) mov or jbe fwait mov (bad) fiadd adc not mov add xchg enter xor test fidivr in cmp (bad) stc adc insb dec test add add add lahf fmull jge incb out (bad) popf fprem mov mov mov pusha jp loopne in test mov jno ljmp add movsb test push fisubr ss adc shlb cli xchg mov hlt adcb cmp movsb adc loop jmp cli in add dec sahf popf mov mov push jne add lahf jp xchg push repnz cmpsb movsl sbb xchg ss or ret pop sti pop mov lock mov arpl popf jbe xchg incb cld inc mov fucomp lret aas mov insl (bad) jbe insl lods aam insl ja imul or pop jg jp,pt jp or mov cmp push aam mov cmp out sbb jnp sub arpl dec mov mov pusha sub movb lods fcompl jb add inc out cmpsl aaa bound je daa mov sub mov jns mov pop (bad) and lea add add add sub adc xor and lock pusha xchg xor mov push cmp call dec in out sbb xchg xchg pop lock xlat pop lcall outsl push addr16 test or xchg repnz ss int xor movsl arpl mov mov or adc ficomp xor (bad) icebp fisubrl jne jg push jo in test jl arpl xchg hlt push mov dec mov divl mov leave sbbl add add push mov add pop jg or lahf fnstsw mov push shlb (bad) jo out adc push mov cmc jo call flds inc aam lods jge pop inc jle pop out test fucomp pushf adc loop cmova fs test dec out xor pop xor cld pop sub and (bad) mull jno ljmp gs sub daa or scas sahf iret ficomp mov repnz push dec sub jp lahf mov pop mov (bad) lock aad mov add add add add dec call inc cmpsb in mov cmp inc lea into sti jge das jl and fcomi mov das arpl or adc frstor pop adcl bound shl cmpsb mov mov sbb test xchg cmp (bad) in pusha and inc outsl es (bad) dec pusha (bad) cmp (bad) jmp aad and cmp adc and inc pop pop in dec sbb cmp arpl stc and addr16 clc outsl add add add push jecxz mov popf das loope scas std lcall pop mov pop or rorl (bad) fs stc and out fdivs sub fnstcw pop lahf mov jnp ds scas xor bound sub xchg sbb push mov mov sub inc repnz lds idivb outsb mov xor int3 dec xchg test mov test xchg inc sbb fiadd or adc xchg mov out xor mov cmp add add aas jmp fs or sti mov popf mov jl dec pop xor inc mov lret xchg jb lods inc cmc fistp out pop gs js mov mov fwait les push pop shlb xor xchg decl mov out pusha or (bad) sbb cld jnp mov das (bad) push or mov mov mov outsb jo mov add xchg popf arpl scas inc cmp inc sbb sub addr16 sbb dec das pop std iret add jne bound ljmp add iret dec in fwait pop clc cmpsl inc push sub aas mov out inc int3 mov and lea shr lret cmp xor adc andl shl jg inc imul (bad) or xor cmp js jnp sbb mov cs sub rclb ja rcrb sub out into push hlt push adc (bad) shlb push fs ss imul cmp mov lods or push aad out xchg xor cli pusha mov stos lahf lret mov and dec or add ja imul leave cmpsl popf fldl xor popf icebp mov and std (bad) push dec cli jne jmp push repnz (bad) insl inc in jecxz mov and mov mov or les adc inc jecxz fimull and outsl sub (bad) repnz dec dec push pushf mov orl or push ss pop xor lods mov movsl push les ljmp icebp rcr ss dec nop hlt add add add add sub mov jl ss hlt pop outsl cs pop jge jecxz dec add in and jge mov cmp in loop dec push popf ss cmp das int3 fbstp lcall sub in call xor movsb dec fcmovne inc (bad) inc xorl xor (bad) cltd jg fucomip xor dec (bad) hlt sub ss xchg or roll mov movsl int3 repz pop add or test jne jne jmp leave lock add xchg mov add add add add loop lods fstpt int3 divl sbb jmp mov dec mov push loope push stc (bad) icebp inc mov js pop and fwait mov or push int3 sbb jno mov cmpb push xor push sbb jle xchg dec test add lock pop cmpsl fs add sub cmp cld loope push aad dec negb push fcmovbe cld movl add mov (bad) or pushf jmp std bound sub movsb dec mov test xchg adc push lret mov push roll es mov add (bad) push push (bad) rolb or push enter aam push adc fsubs (bad) mull daa jne je (bad) std xchg add cmp test pop fstpl lea lea cmpsl sbb clc nop pop mov cltd or call or fidivl arpl lcall testb jmp sbb pop cmp adc jo ss dec daa adc gs hlt js lcall fwait xor add add add mov cwtl push popa xchg jmp les (bad) ret add or sbb je and in outsb xor dec jno pushf dec ficomp leave pusha or pop clc ja testb insb ljmp mov movsl xchg jg pop jmp cmp dec push addl fwait stos cmp lret adc int3 mov aam pop push movsb lret cmp lahf cltd jbe mov in pop (bad) lock leave in movsb fidivrl stos mov fldl outsb dec pop movsb cmp lods xor mov popf push mov mov and inc test sub pop in movsl rcrl negb loopne icebp mov sbb popf mov cmp push lods push pusha ror xchg adc test mov (bad) jbe sub lret pop push mov xor jl jle,pn jno lretw pushf and test nop mov mov xlat stos rclb cmpsl add pop sub xor pop dec scas or and add sub mov pop push (bad) je add push sub cmp mov fldl mov sahf jg sub scas push dec mov loopne mov sbb adcl arpl cli jl movsl push mov dec mov mov adc sbb mov xchg inc jmp adc sub fimull ret sub pushw sarb call andl fscale xchg xchg shrl dec cmpsl add (bad) add aad outsb cmp or pop sbb jb les add add cwtl daa push je push test add out or aaa add cld jle aas dec shrl ja and sbb add (bad) es cli fcmove addl cmpsl push jne bound in fistpll pop aaa mov ret mov jmp outsl jnp repz xor sarl cltd mov lds and dec dec outsb jno jo mov ja into mov pop roll jge js mov icebp loop sbbb mov cwtl and dec fwait (bad) scas push add add aam addr16 hlt mov push fildl jbe int3 mov pop mov cwtl out xchg sarb or jb popf leave dec in adc dec in add pop mov adc scas dec inc iret or sbb push popa int mov adc jo out mov outsb cwtl mov loopne cmc out loope ret idivl aam lahf inc sub das jns mov mov jp lock adc cmp imul repnz push xor loopne or sti add add add mov push lcall inc lahf cmpsl popf shrb jo dec adcb int pop sub lods fs call js lahf jae cmp ja jo lods arpl (bad) repnz sub clc idiv lcall popf ret xchg les lods leave enter mov pop loopne mov mov (bad) mov les in xchg inc (bad) cmpsl bound or push out and syscall sti dec cmp enter icebp or xchg data16 cli mov add fstpl adc sbb hlt push (bad) mov test xchg xchg jne or ds dec mov or mov jle add jbe (bad) scas movaps incl sahf dec xchg and fldenv and xor test jno inc mov gs inc mov sbb loop add add ja xchg pop stc loopne ret jl add xchg xchg in push mov jp,pn jge,pn ds cmp jne (bad) mov add add xor xor repz lods mov std popa push add or repz notb sub andl sub mov (bad) xor imull cmpsb sub (bad) and ja (bad) popf sarl ljmp xchg inc out jl sti vmwrite call sbb mov xchg sahf xor jmp rorl (bad) or cmp adc call fisubl imul mov fistp mov push out out sub lods movsb repz xlat andl dec movsb push lock push xchg insl push xlat jecxz mov sti (bad) xlat mov or iret sbb push out sub movsb and fild jmp mov stc push and adc mov movb sbb xchg (bad) xor mov rcrl xchg and pop pop xor push daa jnp repnz pop cmp sub fnop mov (bad) and fiaddl fistp or adc pop mov inc dec sahf push (bad) hlt ss call jne lret add add add dec inc aas sbb mov ret adc add jnp fistpll sbb out into bound ds repnz jb mov mov iret fsubrl leave (bad) imul aam ret and jmp xchg ficomp add mov roll pusha sub push stos xor (bad) xor lock shrb mov lods int3 inc ja int3 mov and (bad) xchg dec fcoml jg pop add jb adc pop sub or jbe repz inc xor add add add bound popf xchg push jne sbb roll je imul jno mov xchg mov adc mov push cmp daa add or aad adc pop leave or adc pushf leave (bad) adc (bad) shrb or and enter rcll mov mov addr16 lahf in jle push fwait xor lods push push mov rorb push test jnp out push dec add pop ds add or loope jmp sub jmp add add add add iret adc push popa mov jb imul lds jge imul data16 and mov sbb in ret add inc mov mov adc call insl dec aad adc inc in ds out push push jns (bad) int3 push fs mov adc lds inc dec lret pusha jae xchg fcompl adc jno nop push cmpsl push data16 xchg sub jno mov add and clc inc adc add add add imul int push push icebp sub xchg xchg xchg aad inc add sbb adc or push xchg pop lods sub lea ja dec push mov fsts movsb insl xchg movsb xchg std pop push data16 and and mov loop dec or jmp pop jb cmpsl mov sbb test jmp mov aas mov dec nop mov add es add lret xchg in jo gs (bad) inc es lds or add add pop add enter (bad) je mov aad mov ret lock and adc inc sub mov xchg or push fisubl lea push cmp gs dec xchg jge pop ss dec (bad) stc pop (bad) push xor mov jne mov add jmp dec cmp jnp pop push mov out in mov mov push (bad) mov add out inc imull pop fisubrl sbb inc or cmp add add add add ret pop cwtl pop sub push gs out jle push or xor cmc adc jae mov in push dec test add movsb adc lods or inc sbb icebp loop pop push inc lret int3 aaa mov jecxz or mov aas push addb or andb rcrl xchg popa outsl cli fstpl ss arpl fwait pop sub adc jb ja push (bad) mov (bad) or out shll mov test mov mov add add add xchg xor or fdivs (bad) loope mov push aad out xchg movsl loope jb sub add in daa ficom jle cwtl jo and or cmp add in out mov sbb popf xor xor add fadd adc fstpl push xchg aas xor leave or in pop cmpsl and or stos push lret mov mov cs mov out into imul adc addr16 push mov lods pop arpl and iret or sbb cltd ret lds jnp aad adc push push xchg inc pop fstl insl lds pop (bad) xor daa mov call les mov mov jne test xor das ficomp js je xchg ljmp pop pushf mov flds mov iret (bad) xor xchg adc adc and cmp push add cwtl xor xchg mov pop mov or push mov (bad) test (bad) cmp add js ja push and pop push shrb jl push clc push jle enter out outsb jns jb addr16 jo lret cltd (bad) sub fdivrs mov fild (bad) mov inc loope mov sqrtps aad or notb sub adc mov sbb sti inc mov (bad) aam (bad) shl fs out not xchg cwtl pop push xchg movb inc jns (bad) and mov adc inc push jg pop std mov add aad cmp pop mov mov (bad) stc outsb jbe mov or shrl mov pop jl push rorb dec push cmpsb mov pushf cmp inc sahf mov insl jo hlt data16 mov xchg push je push add aas adc xor vpsubsb aas mov dec push mov cmp imulb sbb test bound jl mov push cli insb xchg in in jo popa sub dec dec aad adc sti mov jo pop add (bad) in pop xchg inc pop push sbb add dec pop rorl mov lock mov repnz and rolb movsb js cli ja rcrb iret dec dec jns scas fwait movl push mov popa int3 iret call stos nop nop xchg lods xor leave jmp jae imul scas pop fnstcw pushf mov cld jmp imul dec ret out fstps pushf mov ja pop mov iret test je cwtl outsl lods add add add add push call call xor scas mov adc jecxz mov xor in adc nop push insb xchg sub xchg cmp pop xor out cmc repz and js nop mov test and push or sub and je inc push jecxz pop pop mov shlb int3 mov push mov fisttpl sbb out xchg sbb mov pop ja sbb dec icebp dec andl mov jle mov stc jae es aaa sub lahf in dec das pop jge jo rorl push popf and inc data16 cli inc push dec xchg (bad) sbb and arpl pop mov imul into ret adc cmp or cs mov lcall push sbb push push (bad) cmp jbe gs aad test mov mov jns xchg loopne adc xchg xor dec test test mov ljmp push pop mov add add add jecxz inc mov sbb out jle cmpsb sbb jne out (bad) mov aas in add dec notb in out (bad) inc jecxz inc or std mov add sub es dec add bnd fcmovbe mov mov pop sti (bad) imul mov pop in or data16 xchg out pushf mov ljmp or sahf mov sbb sub dec lock mov push mov aas add add add or mov mov bound push mov and in xchg push cli adc repnz sub xchg xchg cs movsl ret xchg cld lock into cli cltd in fwait imul mov leave gs aam cli or popf push mov out (bad) jp into bnd dec mov idivb or mov or int3 mov ja mov (bad) cmpsb or sub daa sarl (bad) mov pop jno call or add add add pop outsl xchg leave and (bad) mov mov push push aam inc dec ljmp btr aad pop pop in pop mov mov jle pop test and inc adc dec jne xchg fmul mov loopne test cli xlat sbb push sub test scas je mov fldcw or and lds xchg jmp repnz mov add mov mov out add jp mov cmp inc mov cltd sbb push daa pop stc xor ss push pop inc fcoms add add add mov and jnp repnz shl lea and mov into movsb movsb in xor test movsl dec inc dec pushf pop adc push cltd pop or andb lcall pop int3 mull xchg bound lcall push outsl push xlat jae pop mov mov push and xchg mov (bad) (bad) cmpsb fisubl xchg (bad) jno int3 fcomps xchg pop jge out sub adc call mov and add add add add mov mov out add ret jne movsl mov pop sarb add mov pop jne jg imulb cmpsb and (bad) (bad) or adc aam stos syscall (bad) call into push sbb mov pop sbb pop into (bad) iret shlb jnp inc sbb or and scas push mov mov pushf xchg (bad) push ret jmp imul adc stos aas xor mov flds or lret fiaddl repnz sahf push jl mov add push sarl test rcrb into cmp into in (bad) cmp roll mov test pop pop dec rorl mov inc jecxz fstpt shll sbb pusha cmp outsb popf dec jne (bad) or outsb gs clc hlt cli cmpsl sahf es mov notb fs icebp (bad) ds stos lds mov sub movsl out in xor pop call adc add jge aam push js jl inc xor add add add add fxch cmp jbe stos cmc adc add xor pop stos jl roll roll adc pop addr16 ret std rcl aas call pop movsb dec ficom loopne jae xchg cmp mov popf sbb (bad) out add in lea shrl mov push (bad) iret inc in jne push (bad) push jne out cltd lods (bad) jns cmc pop stos lods fucom push lods sbb lods loop mov sub mov push cmp dec shrb lods jp loope and dec (bad) loope mov add add add add xor push jnp ljmp aam or aas shll stos mov in and jns jo sub (bad) into sbb xchg mov jle cwtl and add add pop movsb addl xchg fwait cmp idivb jge shrl aad sti inc adc mov push jg lock xchg and add popf imul xor mov push stos pop and push outsb fwait mov mov mov cmc adc add add add add test sub ljmp mov jecxz jbe adc mov popf jo movsl cli imul xor lea mov xor sbb shrl and out insb jne xchg jne pop sti adc mov and lret inc and loop xor outsb inc push (bad) lods mov and inc cmpsb into sbb js repnz cs add cmc (bad) aam push in and gs outsb cmp jle repnz push call adc pusha jns bound cs cmp push mov adc dec xlat ror incb lock fsubl aad pushf inc in arpl mov mov pop into or mov adc insl sbb sub inc pop xor sarl and jnp dec mov or fs (bad) dec (bad) (bad) std je and (bad) (bad) and lahf das in popf das push mov sub and inc sub sbb stos das jnp jo add ficompl arpl in add fisubrl add fiaddl aam aad sbbl jae in fsts (bad) into pop out mov adc aaa and fidivrl xchg or shlb adc dec push xchg sahf and inc xchg push fdivrl or dec nop jp mov add pop scas aam and mov jl mov stos (bad) dec sub ret push and or jmp fdivrl sub and xor mov scas popf fmuls subl sti cmc cwtd xchg mov and cs out add add add mov cs xlat cmpsl add imul imul pop sbb inc insb xchg out icebp mov dec ljmp push mov sbbl aas pop jbe xor xor jp add mov sub int lret mov neg ret lahf out push ljmp jb sbb ret std aaa js jecxz jge cltd pusha jnp jbe and or (bad) jge push xchg xchg sahf sub and or incl add cmp mov nop addb add add add testb or sahf lret fmuls (bad) mov jns cmp push inc xor stos lcall out xorl dec repz xchg inc or xchg call popf outsb fcompl bound (bad) fldt or pop out in dec pop xchg pop ja pop addb adc pop cwtl cltd xchg xlat push mov sysret ret jle and scas decb iret cli repnz (bad) stos fcmovnb ss xor adc add add add add aam jp cmpb pop push aad lods xchg mov xchg cmpsb fdivl in jnp in xor stos pop mov loop pop rorl out sub cmp sbb sbb sub (bad) (bad) jbe xlat mov sbb (bad) imul cld (bad) test xchg faddl cwtl stos insb and call or cmp or inc mull adc imul (bad) mov jmp mov in jns jmp add add add add sbb mov iret pop sti adc jnp test jno pop (bad) push insb stos in pop ljmp cmc add scas xchg or fidiv push jle cmp push call fcomip inc cs push cwtl repz xchg adc sahf nop xchg inc jmp pop test dec and popf fldcw data16 scas out jmp sbb cltd push aam in cmp daa mov outsb ficomp lds les push cld dec dec xor scas cmpsb inc ljmp add xchg add pusha cli in or and inc push sti (bad) icebp jmp fpatan mov lret sarb sbb lods andl repz stos cli outsb mov jg scas mov mov pop movsl fnstsw test or call mov jns imul sarb pop aas jecxz xchg jno push in mov xor push adc adc mov and and in jle daa in add jg lock mov dec mov arpl dec or adc mov add add add adcl ret das mov aam cld dec cld imul loop icebp xor lods aad aas rorl push pop and lods mov ljmp pop add cld fwait or xor inc cmc and cld xor jne aam and inc mov mov cli popf lods cmpsl mov loope mov ljmp add nop mov roll aad into pmaxub inc insl fnstsw sbb bswap int xor dec jae cld add add add mov shll std jmp and insl and mov (bad) mov mov sbb cmp jmp fildll test insb pop inc push fisubr scas dec sbb xor mov outsb jne ja pusha les loope xor jns scas lret lahf test xchg pop pop add dec leave aaa inc test jmp pop je stos clc sbb add adc and movsl ret int jg pop xor push add hlt rorb or jno push sarl add add add dec add push jge push aad push enter xorl jo cmpsb (bad) or test mov push xchg shll add (bad) out mov imul mov iret dec jmp movsb sahf rcl pop mov sarb sub inc fstps and adc out push pushf xchg sbb repz xor xchg lods xchg xor lahf shll jmp and add jno dec push decb aas scas jmp popf mov push loope int3 mov add add add (bad) es dec js dec or movsb loopne test int (bad) mov mov xchg fmul test ljmp add enter dec xor pop pop cmpsb pop cmp imul sbb (bad) ret lret mov test or jo test outsb and add push loop sbb cmpsb nop push fdivl in ds jg call jg mov push loope cmp subl add add add push and or mov loopne fucomip aad jno mov or lcall pop inc aaa pop int3 sti and fcompl fstpl (bad) aaa fwait rorb pushf clc out (bad) xor jne pop pop out push cmc or hlt cmp sahf in rcll cmpsl das pop add mov fbld cwtl cmp push inc xchg push outsb hlt fildl inc push out and add in mov xchg and fucom aad arpl insb fcmovnb arpl orl dec stos pop lcall add add add insl mov and outsb sub pop sahf cld or aaa push xchg add in cmp ja mov or mov cli int3 mov xlat sbb jae neg mov lock in mov loopne mov or clc mov andl jg jle,pt cmpsl push insl sbb popa repnz dec dec mov rcll sbb stos cltd cli jmp xor clc xor dec dec js jg dec push orl xor or pop jp xchg push add repz add add add sbb fstl dec ret mov mov mov (bad) cmp xor push imul sub int3 xor dec popa stc cmp push inc lea xchg (bad) sub push sti sarb xor and int3 andb je pop mov in and lock pop sub test mov mov sub hlt pushf int cwtl into lds cmp mov mov fldt mov lcall aad pop inc pop jae adc add sbb xchg jnp mov addr16 push mov mov xchg repz aad jl mov outsb loop mov imul jl sub mov repz leave xchg inc sub push pop cmp insl arpl in or dec pop xlat movsl sbb loope cmp jecxz movsl scas clc call movsb bound inc cmp push sub jp faddp lret pop aad cs fisttpll adc xor mov pop adc xchg out (bad) je sbb mov pop addr16 add in (bad) hlt xor or cltd in scas mov popf dec test gs xchg jg xchg sbb mov mov lea test jo dec les dec call rorb mov push cwtl in cmpsb pop mov cmp out loope rolb cmp xchg (bad) xchg xor rolb inc push dec shr sbb adc xor lods fdiv stc sub pop adc push (bad) mov pop dec clc leave jle in xlat push pop push fwait adc pop jg xor add add add dec dec jno mov in jno xor test mov or in push leave adc dec cwtl lods cs fimull repnz (bad) enter inc fwait pushf pusha in pop pop push xchg mov stc mov out mov (bad) outsb jb cld push stc cwtl mov aaa jns stos push pop pop pop rcr adc push mov pop jge pop rdmsr mov addl xor rcrb or rolb (bad) pop enter mov or into lcall jp add add aad sarb mov cmp mov fstpt or pop or xor jecxz or xchg movsl xchg inc xchg rolb or out sub jo inc and scas mov jp sub fcmovb jmp mov push leave stos fwait in pop xchg sbb and jns push xor int movsl and dec mov and lcall into jo das fst xchg dec push movsb insb popf mov jne dec orl jle push jge loope in pusha adc or xor add add sarl ja xorb pop mov mov addr16 xor adc cmp addr16 mov rorb fs jo sbbb lahf stos dec insb fimul rclb and push xchg pop scas in lds inc mov (bad) fnop sti dec xchg add and repz lahf sbb lock xor out notl pop dec mov jg mov es lahf call mov fbstp jle das pop ret mov add add add sub les dec je mov and insb mov outsl mov aad lcall ss inc aam mov jae add (bad) sub inc cmpsl out xor sarl lret xchg mov sbb hlt call fxam and or (bad) into (bad) into xlat enter in adc adc dec jo dec jb fsub mov dec pop jne sbb jmp (bad) iret loope cmp shr sbb mov sub add add add add out fsubs add (bad) jmp xor popa xlat jle cmp scas lret cmp and ret push mov jp sbb pop mov mov out mov adc iret and shlb pop fs aas sub movsb into mov rcrb xor jecxz stos pop push jl das fcmovnb negl dec es cmp jecxz mov inc add xchg cmp jp inc mov lea push fnstcw std popa pop cmp xchg fwait push mov jle add add add add add jae das jae imul in loop shrb adc in ljmp mov jae leave push shrl mov lods push (bad) testb test sub push xchg idivl addr16 jo xchg in sub push (bad) int3 pop fcomi jg jmp xor enter pop das lret pop push iret movsl adc (bad) xchg adc push push mov pop (bad) xchg pop pop out jne imul test dec into int3 stos shrb cmovle xorb jl sbb sbb js add sbbb lahf sub add pop xchg mov sbb les popa je mov test or jle incb out outsl pop dec jmp fwait call popl dec repnz cltd xor mov cmpl inc lret push hlt repnz shrl loop pushf xor movsb jmp lcall ja fs into (bad) leave sub and jp das mov and repz xor jge inc dec andl jae cltd insb ret sarb xchg sbb add add add add shrl loopne fsubrs fdivs fwait sub push cmp push in or cmc repz test ljmp repz out (bad) dec out add int or pop sti mov out xchg and sbb push sahf xlat pop sbb push add daa mov cmpsl psrlq or and test in lods dec mov cli sti jl pextrw je pop push pushl jle pop scas mov faddl shrb add add add add lea pusha lock sub push pushl leave cmpsl add pop rclb rolb inc imul call mov ss or mov lret imul sbb sbb scas sarl dec cmp stc stos cmc jmp subl cltd fadds xor sarb nop push ret fsubl cmp cs push jno cmp nop and xor pop add dec fwait or jmp push mov cmpsl je incb adc shrl cmp rolb sbb (bad) mov pop pop test mov test inc push outsb ljmp sbb loope inc ret fmuls inc mov cs ffree enter add xor (bad) pushf or clc adc jmp icebp sbb cs cltd or leave aam pop fdiv mov jo fucomp adc mov lds in inc and mov push addr16 insl stos test popl loop sbb dec pop jl add add insb lds pop popf test (bad) xchg into fwait repnz fcmovnu fcoms pop add mov in pop rolb push hlt pop xchg cmp scas mov stos (bad) inc movsl jbe insl ja lock and pushf fprem or jp lahf nop dec (bad) cs mov int3 cmc mov pop cld outsb inc sub push push push adc cmp xchg hlt ds mov inc nop movsl dec mov rorl popf pushf mov or inc test and jl mov fs mov (bad) add add add out fldl js and or data16 push or push mov mov sub and sbb clc sub inc lods adc ja adc (bad) sbb (bad) imul pop popa rcll dec popf sub mov js (bad) mov in bound mov mov adc xchg pop aas mov repz push xor fisttpl jo mov push mov push cmp lret dec (bad) icebp pusha repnz adc mov or ds pop add add add mov gs mov xchg pop rcrb xor lret cmp or mov and in push add nop aas adcl xchg shll fwait lahf cmp out in or xlat fwait sub int3 lods jb mov stos int dec adc adc (bad) dec mov cmp lahf jmp or mulb (bad) fwait or and int3 mov cwtl orb je mov loop push rcl outsb dec (bad) stos sub add add add push pop mov adcb mulb cmp addr16 fist pop mov dec hlt imul xchg sub pop dec cmp or (bad) ret cmp xor pop pop push and test push hlt mov (bad) add gs stc out dec es or xchg mov jbe daa cld clc ret fnstsw pop repz adc and insl jge pushf xor movsb mov cmpsl test js imul sbb ret ret clc sti push dec sbb add add add out cmp dec addr16 iret data16 pmullw mov test fsubrs js aaa jb xor xchg xchg mov push test mov dec pop or pop dec push mov mov clc adc test inc test into xchg mov mov mov lea sub jle jne orl xchg xchg or cmp jge lods xor add test pusha push xor mov push mov pop (bad) lds pop push (bad) jmp in fistpll inc cmp lock mov push push movsl dec mov out nop jg jbe into aas jbe enter mov out lods adc imul (bad) test mov and or cld pop inc scas movsl push push jmp insl xlat adc fimul nop aaa dec mov mov js add lret (bad) or sub scas mov (bad) enter jb ljmp mov aas (bad) jle dec xchg insb stos ja loop push sbb scas push movsb negb ss xchg xor pop inc or xor gs cmp push clc dec mov xor pop mov adc fcoml pusha pop icebp push push jne or outsl mov rorl sub inc std js sub add fstp movsl mov bound push lds pop dec pop push jo vfmaddpd ret cmc imul dec xchg rcl test xchg sahf notb mov pop pushf into jge push clts adc add stc loop xchg ret je xchg ljmp pop inc add add add popf cmp xchg addr16 sahf push and clc pop (bad) jbe (bad) sub (bad) fdivrs arpl sub (bad) outsb fsts mov ret xchg sbb and lock pusha rorl mov jnp xor xchg (bad) jno push lock ds rcrl sub ja loope push jl jg shlb cmpsl pop loop fldt jge es pop and xchg pop cmp test cmp lea fiaddl add add outsb jns,pt lods in mov or cwtl loopne movsl push add aad sub setnp or cmp bound js fisubr add (bad) sub or xor test or icebp push or push scas jmp je and and cmp sub jg and jne sbb add test sbb rorb outsl mov jbe push pop cld lea adc dec jno add add inc movsb push fmul xchg push mov mov xchg mov pop into cmp pop ret jbe add xor pop inc ja popa inc fwait mov rcrb aam xor data16 add hlt sub mov je dec push jns daa ret fwait sub iret xchg adc sarl test inc in inc push mov rol and jae je mov out jne jo insb (bad) push sub rcr (bad) jo rcrl (bad) and ss xchg mov pop lods fldl add add add xor ss (bad) pop jno mov inc xchg (bad) sbb lcall lea (bad) fimul (bad) xor hlt jl (bad) pop inc sub add and (bad) pop push leave das mov rcll mov jne jae cmp xlat fdiv test jp push fwait or sbb into cmp or cmp aam lret sbb lret hlt sub mov push jo xlat add inc xchg cs rolb jmp into into jne sbb leave cmp call jb inc in add aas lahf repnz div lods dec or iret cmp les push fwait sar pop jle fnstcw jg fsts je (bad) mov jge or pushaw cs data16 mov inc scas push or nop lods js fs sahf lcall sbb cld in lods inc jns or and and mov out in jp pop jl push pop std (bad) clc adc xchg inc or fadds dec mov jae clc (bad) cmp mov adcb sub and dec mov add dec cmp paddd push jbe shrl mov xor adc push lods sub mov js out inc in dec aaa cmpsb xchg cmp les pop pop in push add movsl cmpsb mov ret lock pop movsl mov xchg push jbe loope lds and jno aas sarl mov pushf ss test rolb sarl mov lret and mov jp xor push out push or fimul std mov mov sub inc mov sbb add add add adc pop pop pop lret pop arpl je icebp mov inc inc divb and xor inc in ja call sub int cld mov cmpsl adc push daa xchg dec in xchg faddp loop lea outsb insb dec push add popf push jmp push (bad) loopne and inc jnp loope mov add jge fbstp dec pop jp sahf fldl sub hlt hlt push dec and mov xlat inc pop repnz and mov mov and add add add lock sub sbbb mov pop pop sbb sbb xor and stos push fucomip mov (bad) imul mov icebp jp (bad) jb and cmp dec inc nop out jecxz mov loopne data16 push mov jnp out hlt in sbb adc sub mov (bad) lock adc or test shll xor lahf xchg orb insl mov jp xchg mov push sbb pop jne js mov add add add mov cld pop adc and scas lret adc rcrl sbb js and pop enter ss mov jmp aad lds cmpsb mov or pop xor adc cs sub mov int3 nop mov (bad) das ljmp ja mov xchg dec sti mov je lcall inc ffree cmp sbb loope addr16 popa pushf leave push lods and lret ffree xchg mov test add test (bad) leave lock das ret inc adc add add add shll jnp sub cmpsb fisubrl repnz in mov mov pop outsl fadds sbbl pop mov xchg cmc jnp push mov cmpsb jbe jp leave loop imul scas fwait mov fcmovb pop adc push arpl jp,pn in dec in or (bad) aad test or leave ret insl dec mov div das addr16 xchg pop lea cmp sti out dec jmp and mov mov std pusha cmpsl test leave sub js sti sub cmc jb rcl dec ljmp in and xchg int3 mov push (bad) fwait in cmc in gs lahf subl lcall push add fsubl xchg mov mov mov pop mov daa dec insb in out fcoml loope push fstp sub or push push jmp pusha push or (bad) jno out insb les scas mov ss and lcall dec scas fcoms je es mov sbb test or jnp add mov nop aad push outsb push or push xchg pop out fildll mov ds rcll fsts divl fldt mov push icebp test and stos or scas mov mov or xor cmpsb xchg shlb (bad) jmp jmp ret stos pop dec arpl push mov lret ljmp add jno (bad) jmp fsubrs add in dec or add mov lods add add add lods jnp cmpsb mov arpl insl data16 sbb inc sarb cmp xor shlb adc mov pushf adc xchg popa sbb xor fildl insl xchg in stos mov cmpsl gs in xchg (bad) jb mov in pusha pop add hlt pushl test aas lret jg pop imul adc push fild dec sub int jne icebp mov or gs (bad) (bad) mov pop pushf outsl fldenv fistp out add add add dec xchg aad dec xchg dec or dec (bad) fdivs outsl xchg lock mov xor add mov scas cmovp adc cmpsb and out push adc cltd sub mov rolb add (bad) mov cwtl loopne or outsl in mov inc movsl dec repnz outsb push fistl xor and sbb dec xchg push (bad) fldcw test add in insb std inc jge add sahf inc or or xchg shll sti arpl jb mul out outsb dec imul add fs add add cmpb lea add loope push dec popf mov cwtl xchg mov mov lret sarl into jbe jns mov xchg sti push fs (bad) push pop inc addl adc sub scas fcmovu pop sbb mov lea jp sbb mov mov and inc sbb fldl ss imul out xor push nop lds inc je ret repz fiaddl add add mov adc enter jmp adc insb movl dec insl inc sbb pop arpl push jbe mov test jne jae sbb out sub fistp xor pop fs dec and add fisubr (bad) mov (bad) adc enter xchg mov pop mov jno push sub pop fbstp xchg (bad) in inc add jnp enter (bad) (bad) fisub push xor stos and lea push xchg mov popa pop test es scas jmp cmp add add add lret fwait or add jge inc scas inc pop insl mov jl and xchg (bad) pop jle sti sbb popf and leave and movsb push lea out js imul mov loope sbb xchg aam movsl je ret mov push sbb mov rcr nop add push test clc leave fdivs or or cmp outsb cmc xchg ficomp dec iret inc push adc inc test (bad) jno or add loopne fcoms aam jl hlt icebp xchg gs sbb arpl mov (bad) test adc in and cmpsb xchg dec pop jno hlt andb test test (bad) or movsb mov and jle cmp rol jne fs cmp jle push and rol lret stos lock scas adc test imul jo or rcll or jge cmc cli cmpsb cld pop xchg rolb fs loope in mov add add add sti cmpsl rdtsc repnz pop xchg and out hlt fs call dec mov inc adc cltd mov push adc inc (bad) out mov rol mov call adc mov aad movsl into or jle mov jne pop cmpsb push scas xchg out pushf lcall sub cmp xor mov jb push inc aam daa xorl mov jmp push fcoms (bad) jecxz into cli xorl jg dec dec xor shr scas divb push push insb xchg mov lcall xor inc sbb xlat adc cli (bad) jne jp movsl push xchg jae mov test repz das inc cld jp ss pop inc ljmp add inc pop loop imul push loop xor cwtl mov lds inc (bad) xchg stos pop mov mov adc hlt pushf out pop mov shl jae loope int sub mov push cmp cmp pop arpl jbe add add add add dec dec lcall sahf les push sbb inc xchg shrl lahf ret push in mov xor sub jbe cmpsl mov dec clc int3 test adc push jno and addl mov push inc nop jecxz repz cmp in cwtl jno pop jge adc xor nop cmpsl and pop in mov add mov stc pop cmp jns cwtl loope test mov push popa push stos insb xor dec fldl sahf jp and mov mov lret mov inc adc xchg push sbb jns ficom push lcall cmp or rol les (bad) sahf (bad) xor ljmp adc outsl sub mov iret cmp dec cmc mov xchg shrb cs inc test sbb gs cmp jo cwtl fwait movsb adc imul fnstcw mov fstps int dec nop lret clc or lcall mov add jnp lea inc aam rclb dec add popf (bad) pop inc jno fwait ds mov popf xchg add cltd idivl jb outsl out scas je lret inc call sbb das pop fisttp xor aaa inc mov shll add std push int inc dec cmp inc movsl (bad) jp dec inc out pushf fistpl aas arpl hlt out (bad) and sub int or lea inc jle push sbb jecxz xchg inc push mov out dec fisubl rcrb add jmp sub ret or mov divl cmp and xor sub sub cmc sbb xchg ja inc scas rcl movsl push and je lock mov or mov pop fwait jl outsl mov fwait inc pop jecxz mov stos jle popf inc jl xor xchg lret add xchg inc jmp or ja mov fdiv adc or add lea cmpsl jbe inc and ret inc xor adc add add add cs in addr16 push in stos add inc adc addr16 jb movb jbe pop popf es fldenv cltd mov fist arpl sub push in cmc enter in xor daa fisttpll mov jae add jp (bad) sbb ljmp jae dec js into fdivrs adc enter cmpsl sbb fnstsw pop adc mul out std xchg ljmp aas out dec sahf aad sbb gs sbb jae mov xchg das add (bad) negb pop push mov data16 mov pop icebp enter pop xchg push test call loop pop or dec test ss push adc mov (bad) ffree jecxz pop xor push cmc cmp pop test sub mov jecxz jno add pop imul loop push jbe std sub or stc (bad) jp popf dec les fwait in ds fucomp sub ja dec or test mov dec pop sldt add add jge lds sbb cmp pop repz mov fs bound addb mov popf add pop es dec adc repz inc (bad) jb pop insb mov sbb jle or (bad) adc sub cmp test jo lock xor adc testb insl cmc sub fs dec xchg int mov (bad) mov (bad) in pop addr16 ja test sub sahf fxch push add lds mov mov add add pop arpl mov dec nop inc outsb mov data16 aaa pop inc adc je inc mov or fmuls sbb pop adc cmp jae lcall mov mov mov jge pop cmp vmread add xchg inc xchg roll mull movsl add (bad) inc clc jne and orl jno dec arpl mov and push adc inc aad test push jle mov insl sbb into mov jne add add add clc roll add arpl or data16 sub mov (bad) and lcall scas xchg psubq fs jns inc ljmp mov cmpsl mov dec loop xchg iret inc fcmovnbe stos gs sti rclb sub imul push addr16 mov pop pop sub pop add leave jb xlat sub mov shll jns jge dec adc sbb rorb (bad) sbb dec add add add cli scas stos addl shlb test mov ret adc push popf aad dec push (bad) cmpsl cmc lret dec mov scas rolb in push cli mov stos sbb cmp mov dec xor xchg push add push enter movsb shll js inc mov jo outsl xorb das sarl loopne js call jo mov leave pusha mov insl das flds push rclb push jmp divb mov (bad) mov ljmp add add push pop push and sub or xchg mov adc dec (bad) and jne fistpll push das add jg popf xor push pop jmp gs pop jne xchg add pop and bound dec ret inc cmpl ret outsb xchg in push nop dec inc imul call xchg aaa pop aaa icebp (bad) frstor mov aaa jmp lods mov imul daa mov push fstps in ljmp imul add cld xchg movsl addl mov add lcall testb shl jge and bound out xlat xchg xchg cli aad cli mov in lret add fnstcw push mov fs push cmp int3 inc sub lods (bad) (bad) xor push pop mov in and adc xor cwtl mov dec repz dec sub das fsubl arpl movsl cmp (bad) jo inc sbb jbe call adc mov xor add call lds mov cmp cmp (bad) in orl lcall mov aad pop lods (bad) ja out inc das adc lock scas adc sub (bad) ss repnz imul jecxz xchg lahf jnp sub (bad) mov not or lahf push push xchg outsl pop sub iret loopne mov cmp mov aad lret fsubs pop inc lret xchg jecxz leave inc sti inc in sub and sahf mov jp add add add xchg add inc mov aaa mov out ret sbb cmp inc pop ja mov je in idiv cmp inc cwtl xchg dec (bad) mov and mov out imul and ret push mov nop or and ljmp ficom je cmp icebp inc icebp dec inc push inc lcall and in adc lods leave insl mov dec out jns jno pop adc add aas cmp add add add push fdivl or ficoml jmp xor cmp mov or push dec std es pop xchg or fwait xchg (bad) fisub and xlat push sub pop cmp daa ljmp pop cs cltd aad arpl clc and or sarl stos in jno mov and inc cltd cwtl cwtl fwait sti add mov iret jp sti cmpsb sub aam aaa sub dec dec mov mov xlat lea jl pop ss shl and mov lahf (bad) and lahf add add add stos call dec jl aas scas push lret aas pushf mov jle cli jle pop dec loop aam or aaa inc out icebp mov das fwait in ret or iret jbe push popa xchg jmp cmp pop loope orb inc inc pop cmp test push dec in mov pop dec add shl inc push je lcall fldenv dec fldt push adc pop imulb or test gs fldt mov adc xor out and xor or add add add add das sbb popa sbbb adc cmp sar lahf mov inc (bad) or (bad) adc gs cmp adc jno mov jbe mov (bad) push rcll add (bad) xor bt lcall and sbb mov lock push mov cmp dec mov fwait loop pop jne adc mov sub in add test shrl jnp sub stc mov int3 cmp push in add movsl fxtract test cvtps2pd and xchg mov cmpsl stos std jle push jle mov xor mov (bad) sbb ljmp mov lea fild add pop sub adc fidiv aaa sbb test fnstenv sbb inc mov in add in shlb shl dec fildll dec aas (bad) (bad) leave mov in outsl dec and dec xchg clc inc push jb or adc inc xchg push js inc add push xlat popf jge repnz in push call push outsl imul pop xor sbb xchg insl jae enter mov xlat cmp inc push push xchg insl scas xchg loope mov xchg sub (bad) (bad) dec mov or xor push std mov (bad) repnz xor movsl in divb sub mov jo jb std inc lret mov add cwtl mov xchg sub adcb rcll add inc push xor cltd (bad) loopne fwait push xor adc lret add add add pop add jl add mov (bad) mov xor dec mov pop sbb jns xchg ficom jg pusha mov insb stc push jl sub sarl fbld and pop jmp xchg mov arpl pushf femms jg mov sbb push lret (bad) jbe sub push imul cmc push sbb xchg pop sbbb test pop insl inc add pop shrb (bad) idivl mov lods push mov repz jne mov rolb add add add ljmp xchg adc ja in in std push pop xchg adc jne jnp outsl idivl aam cwtl jne test pop add lods out das pop add dec add mov stos lea mov ds mov int3 add lds mov lods ret into push inc jl shrl sbb loope lret lahf push insb test loope cwtl jno out adc jle test in xor lfs icebp mov jnp pop lock push std mov add icebp rcrb mov lret loope mov push lret in pop cmp mov fldlg2 add mov pop push adc sub jns loopne xchg jo insb add adc mov xchg mov xchg (bad) int3 je lods mov aas inc add mov aas and call pusha test jp les and (bad) rolb xor cli call repz loope add outsb or insb loope outsb dec sti arpl jmp or hlt lods cmp or insl jle pop cmp adc es add add (bad) ja xor rcrb pusha sub jp sbb mov jbe imul cmp clc xlat pop out inc (bad) mov and xchg mov cltd imulb je lea jno pop add lods dec loop add mov cmp lods icebp xor pop lock xchg pop fdivp fidivr ja faddp push push les dec fldl fs cmpsb push lret cli and rcl icebp push dec cmp bnd add add add add xchg xor (bad) lods cld xchg out lods cmp aas inc mov loop lds xchg jp mov sti dec fstps stos xor lret arpl xchg cmpsl and sbb int3 jns sti out cmc cmp int pop mov flds mov and inc ljmp lahf clc leave pop mov xchg pop gs rcll mov cwtl pop inc pop in aam lods into pop add mov jge or arpl mov in in mov xchg aam adc cld inc dec push lods dec inc inc sbb enter mov sti cmc leave sub in mov int3 (bad) adc pushf loope xchg cltd push in xchg jo push aas mov lahf call xchg cmp xchg cmc cld repnz jg insb push mov jbe cmp out push stos in lds sub sbbb nop aam leave (bad) dec adcb mov int sub or fimul ljmp sahf or loopne lods mov gs mov adc mov pop mov cmc mov (bad) ss cmp sahf mov add add add rorl insl bound int3 push xchg lea mov dec clc aaa (bad) jge rol movsl jns ja clc mov jl xchg sub sub sbb mov sti mov jl loopne sar rcll mov and jb notb cmpsb popf cmp mov sub lcall mov outsb xchg add (bad) fiaddl xchg repz sbb xchg jmp mov lods test sub sbb popf arpl iret add add add movsl push cmpsl mov mov mov inc mov xor mov (bad) jno push jmp cltd andl or negb add leave mov hlt sbb or fidivr sub jo xor lea test cltd add xchg fsts fwait pop mov dec jle mov outsl cmp fld decb stos test sub in movsl sbb lock or pop xchg adc imul cmp movsl cs repz mov mov or jmp (bad) fld mov xor and push hlt (bad) (bad) icebp mov and (bad) mov xlat fst sub mov mov imul mov pop and aad xor sub rcrb divb mov xlat pop jl dec push dec mov sub sbb sbb pusha mov (bad) fidivl or pop mov test leave je sub fwait sub dec (bad) jbe test out push xchg cmp add add add and cld adc inc int jno pop push and jg pop stos into mov adc push (bad) or insb push and mov pop mov stos push cmp and cs ss mov mov cli dec mov sub inc gs lret popa push stc sub xchg mov and daa enter and add jge mov and pop iret out lret jmp push jne ja cmpl mov dec xor jo hlt ja insl test add add add add and call push (bad) lret aaa stc add or scas add xchg int adc jl (bad) repz adc fistpl hlt sub bound pushf jno (bad) popa out and js cmp push in cmpsb scas out cmc cmpsl xor (bad) icebp gs push stos xchg (bad) xor xchg and dec addl push repnz std cmp clc push or mov loop mov cs adc xlat sbb or (bad) or shrl mov add add subb shrl mov ret xchg mov jns in inc inc popa sub clc xor mov and pop cmp cmpsb fldt ljmp xchg fwait test xor inc mov out fldcw stos sub lds mov movsb push insl cmp outsl mov pop push cmp and sub jg jecxz lods fidiv imul fwait sbb xor arpl lret in fstpl ja popa pop test pusha mov add add add dec pop fldcw mov sub push mov jg stc mov cmpsl movsb out jp lret pushf adc outsl xor lahf in inc das sbb and fwait and cmpsl rcll mov pop js fstpl popa cmpl les jg pop testb push xor or pop and xchg add aad (bad) jle shrb push push leave sbb mov lods (bad) mov subl aam add add add add add jnp jmp inc or hlt mov sbb mov leave test jbe (bad) adc push stos (bad) cld push mov mov mov add rol repz adc mov push jmp mov mov and daa cmpsb mov cmp stos cld lcall xchg jge sbb leave lret imul out mov or lock jge subl cmp mov pcmpeqw fiaddl enter add add add test inc or test jl lds or xchg dec adc jae inc push int lock mov js xor int3 (bad) jae stc pop push loope pop sbb push jmp inc ja sbb ds mov rorb enter scas push outsl push push dec je mov dec test xchg popf xor xor mov inc dec insl ret dec xchg and dec pushf decb mov repz lock jl inc test rclb push out pop mov sar mov sbb add add sar jmp xor in xor inc into jnp popf test adc test cmc push popf ficom xlat daa cmpsl dec outsb mov js test ds lods dec xor add aas inc sti imul fwait push pusha xor aad in pushf push jp fwait rorl lcall xchg imul fstpl call mov (bad) add xor arpl jne push cmp inc ret pushf inc insl (bad) test push std inc pop pushf xchg sbb in and add push adc adc xchg into lock repnz repz and mov (bad) xchg in inc hlt xorl cmp and (bad) jb decl sbb (bad) xchg (bad) mov out adc mov cld test xchg mov mov mov jl add cltd cltd (bad) pop add sbb das popfw inc dec inc jne mov mov aas shrb sbb push (bad) mov scas sahf cmc lods jmp mov inc fildll jecxz pop ss and push adc int cmp std and test sbb je (bad) cmp and repnz imul aas ds icebp pushf stos pop test addr16 inc in xchg add pop sbb lret jmp in lds push (bad) pop cmp jo js mov cmc (bad) bound inc add add add jl dec es test jae adc in jb (bad) insb xchg popw jmp pop adc leave das sbb dec xchg or add cmpb lods push mov test push loope out fcompl inc popf sarb lock inc adc lods inc cmp jae lods je lret add fcompl outsl lret pop data16 inc mov movsb add cmc loope dec inc stos das pop dec fcmovb rorb test cmp in pop push pop add add add add add out dec and pop leave in sub inc jge sbb push or add sbb out mov cmp xchg in rcrl xor cmpsb inc lods inc sub (bad) jge add leave mov popaw add test fcmovnbe das and xlat sbb data16 xchg fisubr test xchg mov in push push lock push mov add sbb stos scas scas jl test dec ss addr16 jecxz mov or test (bad) cmp sbb dec push add add add movsb mov xchg addr16 mov enter in mov mov add popa and xor (bad) fidiv jl repnz pop enter mov (bad) enter arpl and movsl jl into lock sbb mov dec push or fistl (bad) push iret lods mov inc ljmp dec and stos mov je mov test sub cld jle leave arpl mov (bad) adc insl jne loop test (bad) fwait add push clc (bad) fstps inc mov mov cmp mov pop enter lods sub sub loop fisubr add cltd dec jae mov xchg mov cvtps2pi mov sub cs enter xor dec pusha jmp cli jbe decb adc cld inc sti (bad) movl fwait outsl clc jmp cs jae pushf pop and mov andb cwtl lret jbe sub outsl inc or fwait jno inc mov adc fild mov sub xchg inc outsb das in test in lock mov push enter loop test in cmp std aas cmpsl inc arpl push and sar pop push inc repz adc adc or mov xchg cmp xchg xor test cld aaa inc (bad) clc stos pop jp addl out push int jp mov clc in mov adc ljmp pop notl loopne xchg das add sahf xchg xor add pop shrb popa add add rclb jno push inc pop sbb je adc sbb sbb push (bad) pushf clc incl or push adc xor xchg repnz fldl mov and stos (bad) pop (bad) fild ret push jge dec aam mov js,pt imul mov cmp cmp dec push imul pop (bad) and dec xor add jns jae fisubl mov cmp lret and add add add add xchg jle push jle (bad) je mov add or pop mov sbb and sub rclb or sub mov push test pushf jl loop call adc sbb test int3 push sub mov (bad) mov sub aam notl and or (bad) daa xor stc lea arpl insl sbb mov add sbb clc mov fisub cmp lret and sub add add add add in imul mov fnstenv adcl mov and into es xchg outsb mov scas icebp (bad) repnz pop cmp data16 fdivs test into push pop xchg cmp ds adc xchg cmpsb hlt lock xchg adc jp fdivrl jnp test mov fxch test or repz pop pop push stos stc fdiv fildll cwtl insl aaa mov in mov cmp and nop repnz pop sbb add add add sbb (bad) fsubs cmp jge mov inc notl pop sbb lods aad ljmp (bad) into pop push pushf lret inc fmull push and inc mov sbb mov mov mov jg bsf je and cmp or lret lock cmp pop or daa or cmp pop mov movsb xchg stc movsl cmp sub and stos and push or mov setae aad mov fnsave leave pusha (bad) pop jns out and adc push inc xchg add mov jg jg les add dec adcb jnp jle fwait push popa lods fucomip (bad) jmp out xor mov xor aaa shlb fnstsw xchg jno (bad) movsl iret sub xor fdiv cltd daa movsb lret (bad) pop bound stos mov mov enter icebp jno lods hlt sbb in out lret fwait ret iret (bad) hlt rol ds jle cld sbb out add add add add add sbb in fmuls mov xchg xchg pop ror mov or pop push insl mov (bad) dec fs xor movsl in inc nop sub and or or add jecxz mov dec inc inc pop add loopne test or or or xchg mov aad xchg imul int3 push mov sub inc test in mov lock dec jo cmc push scas sub cmp lea fist (bad) sbb jne push mov das or add xchg ror jo lock push lock stos jbe xchg or imul iret lahf mov fidiv xor mov xchg push stc sbb cmp push adc fs jecxz jecxz das out or push and sub xchg jno loop mov and cmpl lods aad mov (bad) (bad) cmp cmpsb dec mov sahf int3 or sbb je ds jle sbb (bad) mov mov fidivr rcrb andl aas add out adc enter jns icebp mov and dec mov sub sub xor jae push mov xor push hlt in aaa repnz mov sbb or in fldcw jb nop cld lret add jnp das test test and fldenv or insl icebp mov adc mov xchg xchg cmp aam lret cmp imul add bound cmp ljmp stos add add add cld daa test inc in leave into jmp xor mov xchg xor push fucomp addr16 setbe bound decb mov xchg mov inc cmpsl (bad) fcmovnu mov pushf mov loope xor or (bad) fwait jmp cmp jbe,pt cmpsl jb clc std aam cmp pop in push and jle fwait jmp sub popf dec xor in je in jle shl lret lods push int cmpsl xchg inc (bad) int3 sub dec divl sarl inc test cli imulb fisubrl ss stos mov add add add out pop and or xchg cvtps2pd xchg cmp or (bad) mov jge pop mov fldt lods sbb mov sub subl imulb cmpsb mov bound cmp ja aaa fidivr repnz mov imul shlb popf ljmp out lods adc insl pop popa add mov iret jl sub mov xlat lods int xor out in out inc dec cli xchg in stc popf xchg jbe sub add add jg push cwtl std test mov inc push mov jbe into vpunpckhdq jp cmc mov pop es push jecxz sbb lock out pop out mov lods icebp mov cli adc addl and in test or cwtl je jns outsb lahf bound xor xor fucomp mov das test scas and sub nop pop ss adc mov fstpl out jae test sbb push and iret fildl add add (bad) (bad) lock dec call ja outsl xor ficom adc lods sbb daa out and mov push fistp bound dec xchg mov pusha mov cwtl outsb aaa xor xor dec xchg std sub repz pop das stos sub lahf adc lret lret cmp mul ds enter js xor cmp mov je or and or int3 popa ljmp fidiv mov cmp add jno jmp fld add jns inc jno xchg push in mov cmp negl adc lret mov xor or xor lods pop adc jmp arpl or mov mov jb,pt push pop fadds int3 (bad) xor or movsb out stos fxam out or sub les clc (bad) rorl pop in cmc lret movsb dec call call mov sarb fwait cmp cli push das iret cld jne scas push add arpl dec mov cltd nop lret add add add add in push mov push in test jnp mov mov sbb pop push add inc cmp xor in jnp imul mov push outsb push sub adc fs in lahf dec sub idivl imul (bad) and pushf push jns or mov out pop adc and out (bad) dec mov jmp mov stos and or stmxcsr clc mov or jmp xchg add sub shll loop push lret sbb cli jg lea loope sub repz aas add add add or xchg inc cltd mov fisubrl mov out ret aam fcoms adc ret xchg cld popa lods daa idivb fdivs fmul gs push mov cmc lea lods mov xchg mov addr16 in (bad) mov adc mov mov push addl adcl mov sti jae stc cmp or lds pop icebp fwait push repnz (bad) mov inc mov jl cmp aam push push inc pop mov pop adc jle hlt in or dec add add add add push inc and mov dec or cs stc ljmp or adc xlat mov sub fstpl sarl adcl inc mov loope imul out mov test loopne pop cmp inc arpl std inc dec and xor and xchg and fidivr pop daa sti out jge (bad) jp add push popa dec stos sbb jp inc push inc lea sti xor inc adc push lds imul stos and xor add add (bad) fstps inc adc xlat mov arpl iret xchg stos pop add pop inc push test imull and mov je add xor aas scas pusha jl mov mov in mov sbb sub jb and fwait lods ss xor das das mov ss jmp mov outsl icebp popf in inc pop push dec rcrl jae xchg out repnz and loope mov and or out and and dec mov hlt xchg subl add add add dec cmpsb loop (bad) xchg and jp pop inc mov fwait or mov insl fst aam out (bad) repnz test push inc or mov xor addr16 inc pop adc (bad) out jle jmp aad call sarb in mov mov ror movsb cmp adc mov cs lds push js sbb cmp inc inc js jg add mov sub or push push out movl mov ret inc pop push xor fwait sti (bad) enter add add add add addr16 out sub in aaa cmp andl loopne call pushf jmp int stos add ficom jbe sti push push frstor inc push xchg pop pusha cmp sub xor daa xor add mov jae mov int3 clc lock xchg and lock loope cmpsb cmp push int jno pop mov sarb (bad) and inc insb mov imul loopne or movsl dec jle (bad) pop mov faddl xchg mov int pop xlat sbb add add add pop aad scas mov sub jecxz adc xor sti adc pop call jnp orl inc imul adc ds jmp jb lcall arpl jnp or mov pushf pushf sbb shrl mov xchg scas xchg add fimull xchg dec sarl leave addb cmpsl xchg clc (bad) addr16 fisub pop push jle imul ja (bad) mov sahf (bad) clc pop popf mov push sahf jecxz sub add add add add imul sbb outsb adcl cmc sbb (bad) aaa xchg sti xorb addl mov jle mov out adc cltd cs insb jmp mov rcll sbb dec lahf pop call pop jp jae push fdivr cmp test dec fcomps int3 inc adc testl mov icebp push push add cmp pop lods (bad) xor jne repz add pushf repz stos add add add push sahf adc pop leave mov ret scas and imulb inc test movsb aas in jne ljmp pop out sbb in imull or xchg mul into xor jle call shlb leave loopne inc int3 call mov inc adc xchg jmp lods push gs and mov cmp das stos test popa aaa xchg pop cmc mov sti and loop cmpl xor mov adc cltd xchg push lds outsl (bad) mov add add add iret pop imul sub xchg pop idivb fimull xchg xor mov loop inc jg mov in ja ljmp frstor add jle stos push ss push pop (bad) scas js sub das cmpsl adc jns add into loopw test cmp add mov gs icebp mov mov adc stos bound xchg data16 dec mov fiadd (bad) out and add add add add dec lock pop inc mov mov and inc jg es dec subl cltd dec std stos pusha pop adc or mov repz inc pop sbb sub ljmp and xchg imul jb gs repnz xchg mov jnp inc cmp push push mov jae fiadd pusha or sbb addr16 cltd orl fsubrl les mov or push movsl and add adcl pop sbb xchg popa clc ret lock data16 fadd and inc xor loope adc mov cltd dec fsubrp dec loop,pt jl push insb sub dec mov mov cmc dec xor mov pop push shrb jnp push (bad) jle repnz dec push push call adc cs in cs inc loop mov jge mov add sahf mov xchg adc fadd call dec cmpl push pusha push mov push aas or dec add arpl dec adc pop insl mov imul dec scas in in fidiv push dec lcall jbe test xor mov xchg (bad) leave adc imul pop adc adc adc fiaddl jns and pop mov adc dec shrb ss sbb sub sti pop jnp loopne and in mov stos cmp jle xor jle jbe and mov cmp outsl sbb fildl add add add push stc pop nop lret outsl out mov iret mov inc movsl xor adc xor aam sbb inc add push test fs mov les or push sub xor stos xor sbb fisubrl and pop add insl mov cmp inc xchg ret or xlat cmp sti std iret ljmp mov sahf popf fsubrl sub adc add ljmp add add add cs out pop popf xchg int3 xchg in sbb notb xor test mov sub mov mov push jae scas pushf mov cli or xor scas xor test and fwait pop dec testb jb lret std lahf push inc pop sbb inc xchg shll pop push bound push jmp push jp pop jnp movsb mov es mov mov mov imul cmp jb jb outsb sbb ds jnp dec push (bad) int3 cmp add ljmp add add add scas out cmpsb call clc cmpsl mov mov mov dec fildl xchg in fsubr adc inc (bad) push mov xchg jl add movsb lea jb lahf mov cmp inc in fcmove push das mov loop jl push pop jg data16 jbe dec jns xor push mov in (bad) loopne pop or leave stc int3 push daa adc loope mov cmp mov pop cltd daa or adc dec jecxz mov shrb fcompl sub push mov adc xchg insb (bad) push pop mov add add pop mov push lods pop shl lods or repz aaa ret lods adc sub out in call into les pminsw shll xlat inc scas sub push or test fldl ret jne ss mov aas mov (bad) cmc mov fadds rolb and mov (bad) push xor fs mov push dec mov (bad) (bad) cltd pop inc ja lods std mov (bad) and pop mov xlat lahf jle lcall push mov mov add add add push xchg mov fsubs cmp scas push push icebp pop pusha pop cmp movsl push sbb inc outsl cmp pop fisubr fs mov daa movsb cmpsl dec scas test push daa pop aaa outsb fisubrl or roll int3 dec cmp and les mov adc dec sbb sub xchg pop (bad) jb scas push mov push xchg in test gs sarb cld js mov ret sbb sbb lods jl movsb mov add add add add daa jp shlb arpl in js in mov mov cli je out scas xchg repnz in lcall push movsb xor mov adc mov mov xchg push into repnz das push scas popa inc sub jns inc cmp push jae int3 (bad) mov stos jle fdivrp out jle jmp adc test aas out scas fs nop repnz or test mov dec jnp mov insl and loop mov das jp ret add inc int3 xor test add add pop aaa inc mov jg jo loop push addb sbb inc popa push out dec sub jbe xchg xchg pop push int3 in imul icebp testl add pushf dec dec jmp in or or jb ret sbb jg adc nop xchg inc bound aam or fwait imul mov push push push cld push jp jge insl sbb scas xchg adc sub and aas jno imul movsl mov lea jnp jge mov add add add test in in dec (bad) (bad) lcall fiadd in mov cmp imul (bad) (bad) adc jmp or xor outsb (bad) xchg (bad) or (bad) fs int3 cwtl mov xor in jmp jnp sti or arpl mov testb inc cli push or dec lret add movsl inc decb cli jle sbb inc (bad) pop fs fild push pop sbb enter cmp push or add add add push cmpsb (bad) pusha adc stos jo repz or js repnz mov cmp sub sub cmp lods lcall mov movsb (bad) std (bad) fadds xchg lcall add loope or cmpsl aas push fmul xchg and daa sahf xchg (bad) idivl insb inc ss cli enter stos dec bound jge aaa lods mov sbb mov jb jne arpl mov orb mov mov shlb dec cs push xchg dec int add add add push ss cmc cld cmc pop data16 xchg lret in inc mov xchg push mov jbe mov mov dec lahf adc xchg push outsb sbb push pop mov dec pop mov (bad) fiadd pushf lcall jge cmp fs ficompl lret fldcw push jae cs jns iret insb xor pushf mov cmp push fsubrp ljmp or xlat jp stos (bad) repz aaa stc push (bad) aad jmp adc das (bad) mov mov and pop fsubs (bad) dec add add add add in stos iret cld (bad) not push push leave mov jnp push bound aad cmp inc jae dec jge,pn xor mov cmpsb arpl insb xchg mov push mov adc dec sti repnz out push mov scas add mul sub sar cli popa loop mov cmp ror pop ja insl lock rcll push mov cli scas out dec cmp and jmp js adc leave daa enter mov add or sarl and add add arpl or xchg and pop push jg mov out pop mov mov sbb push stos jp leave mov call iret cmpsb xchg adc push rcrl loope outsb or inc inc push cmp lds cltd (bad) mov in sub and jne jle movsb sarl lds rcrl rorb mov cmp gs sub cmp push out dec mov lcall push pop xor imul fsubl pushf gs ljmp (bad) pop cmpsl lret pop dec bound daa and xor push hlt inc test cli rorl and clc sub and inc xchg jmp iret mov push aad inc mov out hlt leave ficom lahf jb or jae xor inc push hlt add pop dec and pop (bad) add dec (bad) int inc and addr16 stos out negl fist addl dec addr16 sub cmp decb pusha mov mov clc or add add add loope push jge inc adc hlt or sahf fnstenv out lock or push (bad) (bad) xor pusha aaa test out adc test xor xlat js fist xor das add outsb cmc inc outsl inc ss outsl jo xchg jnp xor jp push test xchg xchg stos lods in adc cmp jle aas or jno mov loope or jecxz push mov pop lods (bad) outsl adc popl cltd xchg das inc lea mov jns mov sbb mov repz or mov sahf add rcrb dec lahf imul and std add iret cmpsb push mov mov out (bad) cld jp mov add jb,pt xor inc xlat jmp cmp ja mov out (bad) dec xchg sbb cld mov xlat bnd push jmp or mov sbb sub icebp lcall sbb pop nop push mov adc cmpsl hlt test jnp dec lcall inc mov xlat jns dec push test and std mov insl fwait mov cmc add add add add cmc scas je addl mov cmp add inc aas loope lods cmp test jge or je add mov fldenv xchg jnp sbb jecxz or popa scas mov xchg jle pop repz outsb push call or pop mov in orl mov inc inc (bad) dec lea test sbbb add (bad) mov scas dec decl add add add add lock rolb and and dec sarl test fnop cmpsb repz mov jl xor std faddp sub sub xor (bad) (bad) and fs imul push sub sub and sub add ret ret bound repz fnstenv ljmp xchg and pop inc aam push popa clc loopne stos jae popa das jp arpl mov xchg xor scas test lret push in ljmp add or adc add add add cmp cmp mov jl rcrb loope ret insl int3 inc push in call repnz sbb scas xchg out mov andl out push fcoml pusha dec push inc sbb pusha addr16 bound addr16 cli nop adc cmpl mov push movsb jne mov sub jp adc cli lods jmp jge mov cmp add adc hlt insl mov movsl pop enter adc (bad) jle sub pop roll or pushf cmp add add add or je mov call pop int3 (bad) and inc pop mov and push insb (bad) stos jo call out push lods jmp test sbb (bad) mov shrl lods adc and mov psrad maskmovq notl mov aad stos mov adc in sbb int3 imul mov adc mov lods add (bad) btc inc add or scas dec fcomp adc inc pop std cmpsb leave add test ds add xor inc add jno push outsl fist inc or jns xor xchg mov mov jp aas fdivs inc mov push mov iret jge cwtl xchg (bad) xchg or fwait push mov (bad) mov xchg subl fdivrs ja pop fldenv bound fstpl fildl jmp mov mov or gs jb mov pop sbb repz push xor jmp out add ret xchg mov (bad) dec rorl push out loop or xor sub or (bad) mov cmpl or ja les jl cmp push clc or xchg mov aad loope ljmp sahf xlat fisubr call push ja stos aaa fdivl pop dec das xchg pop scas xor ljmp mov cmp loop sti lds fs or cmp fsub jne scas cmpsl pop imul mov mov loope or adc mov insb imul add dec xchg aam out dec mov mov fsubs sub push jp jae push ficom inc add cmc inc stc lock sub jns aas cmp xchg mov inc sbb repz test and ss pop loope mov adc push dec and mov pop lret mov ds sbb add cltd lret loop pop sbb outsb stc and add add add dec sub xor out sbb dec xor adc hlt inc pop cmpsl cwtl fsubl call jno lods scas add mov jge add jle inc aam mov dec inc loopne add add test in mov adc jp bound enter inc pop mov test inc (bad) push inc xor in push rcrb dec push rep jle nop xor sbb and les pop sahf dec imull incl jbe dec adc inc shrl aad adc pop movb add add push add jae cmp push xor push or inc pop loope outsl stos (bad) (bad) xchg lods js push insb xor adc clc fiaddl mov push sub jae shr adc push hlt xor fnop add sar scas jle stos mov mov jecxz fnstcw mov scas orb loop xor or fdivrs outsl lcall and loopne xchg outsl push aam push sub push movsb and pop lods add add add fnstenv jg mov push daa (bad) std in pop pop adc out pop popl daa xor xchg sub pop pop aaa adc das mov in sub inc or in fistpl clc dec cmpsb cmp daa and pop add jbe adc leave dec jo adc (bad) insb cmp and sti sbb lret subl mov (bad) mov test int3 mov in sbb add jns push inc mov adc mov sar call cld es sub inc add add add int pop repz jmp inc lret push jp insl jnp dec aaa inc dec ljmp test mov xor pop jp addr16 dec (bad) int outsl cwtl pop daa test jmp xchg sub repz push adc ret jle fidiv pusha movsb cld xchg cmpsb test adc or xchg pop ljmp ljmp lahf mov sbb cmpsb mov xchg add xchg mov fidivrl out fdivrs mov mov mov add cmc push and xabort sbb imul mov outsl or jo cltd fnstcw popf jb inc cli xor dec sbb push rcll daa daa pop add dec repnz cltd sub xor jg or movsb xlat pop cmp lcall daa sbb lods jb lds les popf popa out mov add mov in ret inc clc pop es ret out add jp out decl (bad) or shrl pop test loopne (bad) jbe mov add add out jl dec sti sahf lods inc (bad) and mov add fsubr and xchg push popa mov or in mov fnstcw and xor in inc (bad) aaa lcall aad mov pop xchg les inc outsl std sti popf icebp lods xor cmpsb mov xor mov gs and sbb sbb loop cli imul inc adc lret aas push inc and push xor fdivrl lcall dec xor std xor das fbstp popa pop sub sbb int js pop dec mov and pop imul mov in bound fidivr lds add repz mov dec (bad) dec rcrl dec cld into repnz scas mov cs xorl ffreep sbb out daa lret xchg sub push (bad) cmp dec in pop mov or dec xchg out cli dec or sub dec adc sbb mov daa inc sub outsb mov push sbb xor add add add jg mov mov fldcw and xor or movsb popl popa incl (bad) mov sahf sub iret loop mov jnp mov in sub popl cli dec ret je xchg mov shl jbe jg sub mov inc je stc insl xchg and (bad) ret into and lods or push fnstcw mov ret leave mov mov subb cli lods and adc fs add add add add into sub pop outsb mov test pop sub cltd dec push push pushf push in sbb cltd mov xor mov in inc or pop mov inc ljmp xor dec leave jns adc call push mov popf fcomip lods xchg cmp aaa cld fisttp loopne and (bad) pop add nop or jp addr16 inc adc fwait pop hlt rcr test ret ss out cmp cmp aaa movsb (bad) pop or jl pop add add lods les jns fnop mov repnz xor mov clc jnp fiaddl push mov sbb pop push cwtl loopne pop add das xor loope push std pop cltd push pushl aas fwait and sbbl loopne test jb xchg adc stos cwtl mov inc das insl xchg icebp mov cmp bnd orl jle out or jl push lret jp xor mov ljmp rorb ljmp jmp subl add add xchg test push or lcall xor je ljmp mov loope dec cmc fcomps fistp insl push les aaa mov sbb fcoms imulb cwtl mov lock stc jmp pop or pushf inc fwait hlt (bad) outsl mov aaa out push or mov dec dec xabort sub mov lret xchg mov sub test ljmp imul roll mov std loop inc jmp mov pmulhuw jnp jns push enter aam ljmp sbb inc push jae ss mov pop push fdivrl ds sar add mov dec cld cs call enter aam jecxz (bad) inc cmp ds cmp sub inc sbb xor dec push fnstenv dec xor mov cltd sub sub push in imul xchg and adc or (bad) jge jnp inc les adc cmp and mov fsubrl pop mov push xor sahf add add add pop adc test adc mov popa aam dec push jae push in shll lock dec mov mov jae jle inc ljmp ffreep cli mov lahf shrl xlat out daa aaa test imulb loope sub nop gs popl test and cmp outsl inc popa (bad) int3 jg divl out sahf (bad) (bad) push stos fidivl leave repnz and insl mov movsb jno insb cmc xchg sbb xorl loope cwtl xchg sbb fldl add add icebp dec (bad) jae push pop adcl or cmc pusha add test fs pop mov loopne sbb inc mov (bad) pop dec mov jnp lods aam and enter jge imul push dec out call out mov jae divl mov jae mov dec (bad) mov rcrb es stos or jns out int sarl mov sbb push outsb xchg sub insb sub (bad) rcpps add add add add mov push mov push call aad in adc nop sti mov push out dec mov push in enter xchg je mov mov or jmp bound ret mov cmp xchg nop add iret jle jns add int3 enter or mov push push leave pop mov scas sub loopne pop jne sub jp fdivrs xor jnp lcall sqrtps out sbb push mov add add add stos stc sbb cmpsb addr16 push add lds movsl stc cmp pop out sbb xchg cltd lea clc xchg xor dec cmp dec pop movsb and sbbl jp aad fisubr or (bad) adc jp notb (bad) cmc (bad) pop jle push std (bad) and enter sbb call (bad) je xchg in and mov xor je mov stos shrl mov xchg sahf or pop push stc mov cmp cmp aaa fistp xchg mov mov add add add aad adc sbb loop fnstcw out mov or cld cmovne mov lahf (bad) sarl push pop or xor cltd sbb (bad) jno flds adc and icebp fdivrl mov jb push push sbb arpl pop cmp xor cltd xlat lds lea fs cmpsl mov pop dec ss adc mov fsub and jge fdiv or imul mov ja fwait in subps mov cli cwtl xchg sbb mov cltd xor aam add add add addr16 in or sti jmp xchg mov sub jne push fdivrs xlat pop adcl pop dec push je in inc add fistpl or and adc clc jbe or ret push xor inc sahf aad push mov sub xor push test into ja sub in mov pop xor mov sub js test cmp int3 (bad) xor mov jnp pop cmpsb rcrb mov add add out cmp mov mov lds cltd and decl arpl in or mov or test fildl lods enter cwtl cmp ror mov add rcrb jmp stc add into dec mov and icebp sbb sub push std adc and test fs lods (bad) icebp jmp (bad) (bad) cld inc dec cmp add jmp ja adcb in pop inc inc jp sub arpl jmp insb mov add add add xor pop and stc imul flds xor ss in mov mov adc outsl push xor push mov inc or or mov push adc shl hlt sbb scas sbbl stc and xchg test jl pop xor sti outsb inc jo in in mov sub insl outsl scas bound adc lods pop lods imul dec push lods inc inc out mov rorb rcrl idivb loopne sub ja xor inc xor std add ja mov insl int or leave fbld nop sbb cltd bound insl cmp sub add xlat dec push sarl mov xor mov push jo mov cmp inc std dec jnp mov inc dec jl,pn and mov mov adcl and xor ret int mov jl mov and icebp or jno push push notl mov cwtl and mov mov mov mov xchg mov add add add ficom sbb push dec rorb fidiv sbb in fsubrs mov jno fldl2t and sbb aaa ss lods mov divb jne out cli inc cltd dec and mov mov ret icebp call out negb jg jbe mov ret mov add dec dec pusha inc jbe mov dec adc bound fwait rorb inc (bad) je cmp (bad) or outsl push xor cmp je cmp rcll lea add add fnstsw loopne vmovddup cwtl lret push mov int3 mov cmp aam bndldx lock outsb jg jg or pop hlt andl mov xor mov lret fldenv dec xchg cmp push stos je loop sub cld fmuls or out subl mov mov mov imul xor sbb push push adc inc jnp xchg jne fistl inc cltd add cwtl in mov jecxz mov les dec push into dec add fwait cmp add jo mov stc (bad) adc lea push sbb (bad) dec imul stos mov js adc in xchg jmp arpl inc xor cmp mov popa adc inc jae push sbbb mov pop mov in into ljmp xchg loopne out in xor jns mov cli scas xchg fidivr mov mov sbb fiaddl adc mov mov sub add add add pushf cmp fbld sbb inc adc mov jecxz cmp cwtl push dec movsl sbb add fisubrl aam lea mov push push in rol int3 mov movsl scas js dec rcll push xchg or scas sbb mov hlt lods mov mov lahf push outsl out jb loopne pop mov adc test mov aaa sbb jne cmp push orb hlt pop mov push orl imul insb addr16 addr16 out add add add add ja call popf pushf int3 pop out enter xchg mov outsl popf xor rcrb mov mov inc pop cmpsl jbe pop cli cli (bad) mov inc pop push adc fwait mov xchg loopne (bad) jo daa imul aam or in cmp pop dec xchg je and mov mov je mov add xlat int3 popa inc in fldl jp adc xchg cmp cmp icebp xchg mov jno or cli xor call add mov pop inc push test pop cmp dec fdiv hlt dec aaa cmpsb jno sbb cld lcall loopne sbb mov cmp or push iret negb jmp movsl push sti pop test pop cmc stos mov sub inc sti pop push mov pop loope adc push mov stos dec push leave enter or pusha or stos out mov sahf jmp adc xchg mov fwait popa pop enter and test push dec xor dec push test inc out add add add jmp ret (bad) fildl cmp push pop xchg pop repz and and cmc mov and ja inc and hlt std hlt cmpsl mov cmp jg push cld push sbb push ffree push std icebp inc ds push outsl xor fmulp fmulp mov fwait sub shrb or outsb pop fcoml jo mov pusha insb cli js fucom insb das int inc fimull jecxz jno cmp (bad) mov mov sbb movsb cmpsl jp imul add add imul loope cmp xor cmp cmpsb push test cmp fnstsw aad fwait adc xor ficomp (bad) and push pusha sub mov in cmp test inc xchg add loope adc xchg inc std cmp cmovo int3 movsb mov xor (bad) arpl popa cld rorl rclb inc scas mov in je fs sub mov lock je xor add push sbb popf outsb test fstl add add add add int push test ds or jns adc add sub mov mov mov and lods push fbld (bad) mov notb enter lret popa xor jae inc mov imul pop test not jmp push (bad) popa and ljmp mov ret mov adc movsb adc lock lock mov xlat das gs lret movb add add xchg fist mov xchg cli lds mov popf mov mov push outsl pusha vrcpps mov or dec mov mov jbe pusha (bad) mov (bad) lods mov fs mov cmp ret imul out mov insl out mov test fnstsw out push sub dec dec push hlt push push xchg aam std hlt adc add push mov pop pop lock push adc push cmc in ret xchg in lcall xchg inc sub add add add mov test dec scas es (bad) out sbb out loope adc addr16 out loop add jge sbb cmc mov cmc pushf call pop shrl ret xchg es adc xlat mov inc dec std sub sub loop or ja lea cmpsb push pop mov xchg mov sbb sub mov mov xchg popf mov rclb cmp shll mov leave mov sti pop push lea call add xchg das lcall xor out aas movsb out inc pop out jecxz or in sub xor pop sbbl loopne stos dec push xlat add mov fnsave cmp push imul inc dec lock xchg mov jnp pop add mov add ret adc iret jbe outsl into loope xor dec adc loop sub fnstsw clc fs (bad) xorb pop enter js lret in ljmp jmp sbb dec cmp mov add add xchg fwait inc roll inc adc fldcw (bad) inc or inc inc jge push jne adc adc adc xor sahf add enter jl push inc hlt mov cltd mov loop cs call or sbb adcb mov lcall push sub cld test cmp sbb cmp stos dec and test in cmp inc xchg imull mov mov sbb and xor scas jl les out jle faddl push jmp leave sub push mov push mov fcompl mov test insl stos mov mov sub jnp pushf xor add xor inc sub push rolb lcall mov jg lods jne xlat mov cwtl push (bad) insb push dec adc push xchg sti jb xchg mov lods mov adc xchg cwtl addr16 push adc in ljmp popf scas or fnstenv or add push push add daa add add add cmpsl fldt fsubs jp xchg (bad) pop (bad) fisubl dec test pushf aas lods arpl mov cmp sbb dec fadd jle cld (bad) xchg and and sahf or xchg pop xchg insl pop pop pop xorb test push dec movsb push cltd add add faddl mov lea adc dec mov mov addr16 dec and jge sub lahf scas call jbe test (bad) adc inc and ds pop and fcomps pop jl in int3 daa mov and ss inc or fldl andb js stos adc jns dec pop in push cmpsl dec xchg lahf xchg mov xchg sub daa cmc das mov (bad) push pop (bad) rclb xor pop jae mov (bad) loope xor xchg in stc or rcl or test sub (bad) dec jle ret jnp imul popf in outsb js inc jb fcmovbe mov test stos icebp lahf out in adc lods pop push fwait cmpsb cmp pop push cmp jmp (bad) outsb pushf adc sbb sub sbb add add add add push push mov xor imul repz dec pop sti outsb mov popf cmp ss (bad) fidivr mov xor rcl xor in out (bad) ss in sarl cltd movsb fnstenv (bad) dec sbb jb dec fisubl fimul sub xchg sahf cmp jb (bad) (bad) repz lea aas push pop stc inc ret or in add or fistl jp cmp dec test mov popf mov push aas clc jmp out js mov insl ret add add add ljmp inc sub in jno or xchg popa leave xor imul idiv xchg xchg shr stos hlt movsl testl inc pop dec fdivrl push stos and lahf jno jmp xlat sahf ret imul pop (bad) xchg repnz hlt mov mov xor ficompl adc lahf cld sub fs js lea sub mov (bad) fnop pop mov add dec es outsb (bad) jb sub lods mov jbe jmp mov stos add flds add add mov loop sub test jmp sarl inc xchg orl stos xlat loop out imul add imul js mov pop and xchg idivl xlat xor and fiadd fcomi out lea (bad) iret movsb loopne ss rorl mov aas je cmpsb fistpl cmc push sub hlt bound or scas adc int3 icebp add push repnz mov add dec mov (bad) test sub stos add add add cmc and or xor mov cld loopne shrl jnp cmpsl or xchg pop xor mov faddl aad clc add dec dec fidivr fwait dec inc insl cli cmpl or pop xor inc cmp adc push sub inc (bad) mull jp fisub or jo sbb xor lods cmp fsub mov movsb bnd xor scas mov idivl push sub repz in jecxz mov in stos cmp sub jo adc cwtl mov jne jg js sbb rclb out mov jp ja hlt idiv cmpsb insb icebp cmp jnp inc stos std cmp adc jo dec mov mov jae adc mov loop ja imul sub inc mov sbb and xchg icebp jo push out push sti sbb mov lds clc cmc pop push sbb sbb pop repz fcoml sub add add je (bad) xor int (bad) icebp dec or stc pop xchg repz gs jmp inc movsl (bad) mov mov push out mov mov and aad movsl lock aas popa (bad) aas jne dec shlb rolb into pop or xchg (bad) out notl mov (bad) popa lods fdivs push sub add cmp cmpsl mov inc inc xor sar ljmp dec fbstp push or test test adc dec sarb call fsubrl dec add add add (bad) scas mov addl scas inc int3 and mov (bad) mov push out fldenv adc int incb push out push mov pop inc and mov dec dec int3 xor loopne push scas cld repz jnp daa and or or xor (bad) add cmpsl mov sbb in movsb and push xor sub dec xchg adc je inc cmpsb loop xchg ficompl or inc les stos outsb jg pop movsl das sub dec popa sub add add loopne add out addr16 fist aam cwtl sub les dec add jle adcb shlb flds cmp push jno dec into lret mov jne cwtl insl fisubl neg jae fdivrs rcr dec leave fbstp subl loop sub cmpsl dec jns int and xor jle pop (bad) jae jmp movsb inc (bad) out xor aam pushf hlt pushf test push gs lds cmpsl ljmp lret add add rorl sti xchg jb loope mov and jmp imulb lret mov outsl imul adcl and mov jb add icebp xchg orl mov fwait cmp xchg insl dec push xlat cmp fiadd out movups stc xchg repnz mov push mov cli ljmp and bound lcall inc and push movsl or outsl mov jmp call stc loope js add addb add add add and cwtl or cwtl movsb loope cli mov lahf dec jne push insl lret xor addl jl out mov sbb sbb jecxz mov mov hlt and into loop cmp nop and mov adc ljmp jge cwtl pop repnz rolb aas mull xchg xchg cmpl maskmovq testl int3 test and jbe jl dec xchg arpl fimull and (bad) xor jmp mov cmc out div push mov daa clc pushaw sbb xor sub call rol xor or lods (bad) pop sub pop cmp es adc pop jecxz or mov into std cltd insb (bad) push pop lret (bad) pop pop loop jge xchg out adc aaa sbb mov push les cmpsb fiadd sub inc jge ficompl sbb jne and push jp dec and sbb xchg adc pop dec sub jne mov push xchg (bad) (bad) sbb add add add add addr16 xchg js add jl ret fcompl aam jb in mov add pop scas mov daa syscall sub adc push pop js fdivl sub push das adc inc xor cmp pop popf iret push adc jp mov cwtl adc fucomip dec leave or mov mov inc sbb or leave fist inc scas push dec cmp sub and cmc rcll out mov in pop mov loope (bad) fldenv call add add add mov add addb insl sbb sbb rorl sub sbb addr16 and mov adc add jmp test jo int3 mov sub push test decb pop push aaa jnp in mov fs rcrb xor mov test xchg movsb jp jb shrb jmp mov xchg mov push sub pushf cltd ret push (bad) in insb mov xchg icebp add out cmp sbbb (bad) rclb jp push jge dec sbb loopne test xor lods in pop es and shrl mov imul jmp sbb lea aad mov shlb call inc int3 sbb inc jecxz test jno outsl into movd or dec xlat aam inc ja sbb mov mov fstpl in or xchg add aas add xor out or mov xchg dec cmc pop iret push je inc mov mov add sub mov xor int addr16 inc jno (bad) (bad) xor mov xlat outsl push inc pop jge enter mov outsl test xchg insl push fistpll or lods sub daa in and repz (bad) jb push mov pop cmp sbb push mov sub cmp stos dec enter aaa test xorb popa pop in cmpsl adc ss add je (bad) mov lods cmpsl ds (bad) jmp scas push aas mov sbb xchg add add add add dec stos mov dec ds inc xchg adc iret into pmulhuw rcrb mov mov in aam cmpsl mov mov xchg or in data16 pop (bad) push lret cwtl push stos int loop das jne mov (bad) (bad) push mov xchg jmp jl mov push mov cltd xor jno in pop hlt lds lds mov xor not (bad) mov push loop outsl jecxz xor fnstenv jecxz xchg (bad) add mov add add add lds icebp cs or sbb ss lds (bad) int mov xchg xchg cmpsl and xchg lcall rcr (bad) pop lds xchg and rclb fsubrs sub clc sbb adc adc in xchg sbb rcrb (bad) bnd push shlb repz (bad) stos lret add hlt pop mov test push mov push nop mov out sbb cld adc fsts jnp sbb jle xchg dec mov mov pop (bad) fadd outsl lods in call imul add add cwtl sub std or cs mov jmp mov das rcrl imul push and mov jmp daa andb (bad) cwtl push lret sub jmp cmc mov cld mov popa inc jmp addr16 jns loope loopne mov mov and das outsl push and cmpsb call popf xchg mov xchg cmpsl jo ds push push in sub imul mov or cmpsb mov xchg outsl sub add pop pop sbb mov cli jle loopne cmp into lods sub sbb aaa mov add mov popf add jmp cltd push mov ljmp (bad) fadds outsl test adc je gs mov leave pop add (bad) jns fs int3 sahf out ss add scas lock (bad) js sbb jmp jne pop mov push rolb out ds jbe or and iret (bad) cmc int pop xchg lock lods stos add jns out and out sbb daa mov mov cmp lods cmpsb sub out sarb xor pop cltd xor sahf push adc add (bad) and sbb push and in jecxz jns pop inc std xchg mov add loopne loopne xor lret into (bad) xchg mov scas rcll cmp aaa inc jl adc push jge out clc repnz and daa jae loopne xorl jno push ffreep xor push scas (bad) xlat push (bad) les pop cltd pop mov add add add sbb mov das test sub jecxz pusha enter pop out cmp pop bound pop sbb mov jecxz jns sbb stos pop rcll inc sbb iret adc push inc mov stos or sbb mov sti shll int3 push sub push pop push loop pushl push and mov jns shll popa dec fistp mov mov jmp cmp mov test xchg es xchg je ret mov cmpsb and mov inc test cli cmp add add add and sub mov push mov cmp mov movsl mov pop cmp jmp xor lock pop mov mov dec addb jno and or xor cmp loope cmp test inc hlt in mov lahf or aaa call cmc dec cmpl hlt cli or pusha inc sbb cwtl into mov cs imul or int cmp add int mov les sbb push inc sub add add dec add or imul push movsl ret mov dec loop imul jb insb rorl or and (bad) ffree ja or addl inc icebp xchg adc sub cmc repnz jge pop fnop add jg pop cmp ja (bad) orl loope push scas push mov jae test ds push or insb stc or movsb loopne cmp subl fisubr int3 lds adc or dec sbb sti add add add add pusha test mov cmp ljmp icebp pop mov sub fist cld jle sub jo hlt imul fcomps aam adc dec sub cmp fcompl leave decb fisubr in divb bound jmp add add mov out ja sub clc push sar roll cltd and and call ss aad xchg and pushf mov insl or mov push in mov sbb mov xchg xchg adc mov and adc aam int3 inc scas cwtl jle (bad) movsb mov mov mov in data16 ds cmpsl add (bad) push iret sub pop inc dec mov mov or int3 rcrl mov jnp mov xchg in jae push cli lret fstps xchg jae cwtl xchg sbb adc out mov pop sahf test ret enter push or dec rcll add xchg punpckhbw add lds insl xor sbb sub mov add add add mov insb or add inc xchg pop mov test mull sarl mov inc sub shlb mov lea inc push sbb pop xor or and inc std mov cmp xchg xor imul mov and (bad) inc sub pop arpl in and fst cmp jl icebp leave inc push and mov xor add shr ret fs push push adc pushf dec cmp loopne xor out (bad) faddl add add dec sahf or cmp fs cmp mov mov adc xlat pminsw lret (bad) sub enter push xlat testb outsl mov lods data16 cltd je cmp xchg sarb sti push call jp xor xor push arpl int sub insb int in sbb adc sbb es icebp shl js loope mov cmp jns (bad) cmp (bad) sti popf andl mov push or and mov dec iret lcall sbb add add nop adc out mov sahf repz sbb mov std mov jg dec (bad) fild repz inc lret sbb data16 mov add cmp inc push cmp cmova clc pusha jns rcl in push inc inc scas insb mov test pop lods mov xchg cmpsl jp loopne mov or inc leave cmc rcrl or cmp mov icebp lcall subl ret pushf fdivrs js or inc orl popf loop cmp jge lods add add add cmp lret jge mov sbb pushf mov add cmpl bound fsubrl and out (bad) xor mov lret xchg and jp loopne pop or idivb and scas sbb push rcl lcall and jne jb pop add jae push orl adc arpl or cwtl std inc data16 (bad) fdivl cmp pop and lock (bad) int sbb add add add mov adc mov adc cmp xor ljmp fcmovnb fcmovu enter and pop out push mov insl xor sbb fmull and and and inc lods loopne jle loop mov test icebp mov mov mov xor xor lods loope xchg cmovnp bound cli sub mov pop cmp jmp ret xor movsl fmuls (bad) mov addr16 out add add add mov xor inc gs mul repnz lods cmp xor or jecxz sbbl lea lods inc or pop pop les inc into (bad) into push ret rolb mov add adc mov push xchg (bad) out cmp mov xchg test push adc inc pop sbb pop rorb scas jno das adc popf cmpsb xor push lahf cmpsb push rorl or cmp jge das cmp or pop cmpsl (bad) ret cmpsl fs add add add add pop in mov gs ret nop jae sub adc (bad) push leave pop dec push mov push sbb test fsubs mov fsubs outsb sbb sbb xlat mov lock pop cmpsb xchg icebp or and sub xor push sbb xchg cmp mov mov mov aaa lods sbb in (bad) inc xchg pop add xchg push les repz xchg mov dec in inc mov jmp or dec add add add rclb mov aaa cli leave lret int push aaa jg jmp cli add scas sbb mov mov push ja stos icebp stos jne cmp pop xchg jmp jmp repz adc xchg hlt ret adc pop sub xchg out mov rolb outsb stc enter addr16 cmp pusha mov and inc addr16 add pop and pop ja mov push pusha jns inc (bad) lods stc mov aaa fwait xor sbb jg fnop mov add add fiadd into push cmpsb sub jg sub aas pushf jle shr pop movsl pop xorb daa ret hlt sbb pop inc mov jno div inc (bad) cmp mov mov insl or pop loope test and push and sbb enter xor clc je jp jl mov inc jnp or imul shrb orl mov fwait in and mov mov (bad) pop xor cmpsb cmp repz in add add xchg sbb and and scas ror jp push or push ljmp outsl xchg push aam cltd out push and adc lods adc js std and cmp icebp xor enter jmp imul jbe imul negl and mov or in sbb scas xor fsts push ljmp push ret push test popa cmp add push and pop in add add add add adc mov xchg sub mov scas daa lahf sbb inc fldenv sbb (bad) scas lds fnstcw stc lds fidiv adc ljmp mov add es hlt sbb outsb push clc loopne sahf cmpsl mov lock jb ja ror lock stos dec cwtl xlat ds pop jne and add scas stos lods pop adc jge mov pop (bad) je jno in jb sahf roll std (bad) loope mov add lea inc push (bad) cs sub push xor ret mov sbb cmp xlat pop inc jb es out sub jg mov mov outsl lahf inc mov pusha shr mov outsb mov pop les pusha push in cld mov int3 xchg lock add gs in dec call sbb (bad) sub mov xlat fcmovu jp or lcall cld add bound mov (bad) or decb jmp add imul es insl (bad) dec int3 test push mov sub arpl gs dec loop mov loop lret add mov sub imul std call sub jne outsl insl lahf mov sahf adc sub shrl je call ret mov inc sbb cmpsl xor (bad) jp or out iret mov sbb mov inc lods or lahf add push mov pop inc and sub push xor sub std sub mov mov add add add es lret (bad) or jmp loope adc mov inc cmp popf call leave inc push repz je out mov mov scas cltd inc mov dec pop ja cmpsb fidiv xor or lods or jnp lds nop mov mov lret push or ret lcall push icebp jae mov jae in xor jmp lret stos dec les adc mov adc pop inc adc sub jo cmpsb ffreep adc mov add cmp out mov push ljmp cmp stc jne inc inc dec push adc call movsl mov cltd fs push push xchg dec add inc clc mov cmc roll inc cld das (bad) pop inc cmp (bad) push xchg insb insb ja pop addr16 cmp (bad) test mov addr16 cmp mov add pop mov stc repnz mov aaa xchg ss pop arpl and scas dec in loopne enter add add or popa pop ljmp in xchg stos dec cmp adc push in xor jmp repnz test rcrb cmc xor imul daa sub rorl nop mov sbb insb repnz cmp sub sbb mov cmp das insb insb lcall add mov lahf xor cmp loope pop ds add pop je inc lods rcrl mov aaa stos sub sarl adc sub daa das mov inc cmp push cmc add add add mov cmp adc psrlw repnz jecxz sahf int3 push mov data16 xchg add xchg std or call (bad) lcall add jns cmp mov rclb aam jne adc dec adc cmc rorl mov rorb xlat fldt insl (bad) xor sub add rcrl push ror mov add mov scas outsl jbe push fmuls sbb sbb xor das or aad aas and add add add add cmp jno addl xor repnz mov in leave pop lods mov test (bad) popf out scas es pop leave fsubrs pop mov imul add add ljmp jl xchg in imul add mov mov int3 gs push adc mov xchg pop pop pop xor inc dec iret subb mov loope enter les loopne out out mov ret or push mov pop cmp mov mov in pop lds mov (bad) lret add xchg cmpsl pop or and push pop cld adc lret xor adc out xor leave jae jns fdivl je stc jmp (bad) out in cmpsl dec xchg lods push jne punpckldq scas mov leave fucom aad int js call xchg mov inc std push lcall pop adc inc xchg arpl and or cmpsl inc in in (bad) dec xor cmpsb jge or lds push shll push inc xchg cld dec test mov jecxz push push xchg push lret mov jge fstpl cmp push (bad) scas lods pop pop xchg addr16 daa in jnp int3 ds in adc or sub lods ret mov cmpsl pop negb fsubr mov inc mov fs mov stos cmp sbbl outsl pop rolb mov mov xor sti fbstp (bad) add ss outsl cmp idivb insb or ret add ljmp mov outsb gs pop cmp add add add add dec repnz dec xchg jbe mov or sbb or dec sub nop mov mov out mov ss mov lds dec je pop xchg add cmp push jge or push or mov (bad) cmpsl xor push jbe pop mov and loope push adc (bad) pop lret movsb pop in test mov xorl jecxz pop lods rorl sbbb pop fadds stc out fs clc (bad) pusha cs add add les flds jl push mov push jno into imul js test xchg xchg mov or (bad) xchg ror insl sar sub and dec (bad) inc movsb lea leave repnz (bad) loopne mov lcall pop inc pop add adc clc fistp pop jge ds cmp inc lret inc inc enter mov in pop cs scas xor scas or cmp pop cmp in popa push pop aaa add add add add or jmp jg jecxz jno adc and jg (bad) lea ret clc out cmp bound xor out dec xchg pop les fcompl loopne and adc adc mov xor cmpsl add je (bad) mov in jo xchg cmp pusha inc enter cmp test inc sbb sbb mov or into or (bad) cmc dec popf xchg imul adc aaa and jmp lahf adc and add add cmp outsb popa out xchg jns imul icebp (bad) mov cmp jne,pn popa int3 mov pop cmp nop adc pop or je mov or and lahf push push leave (bad) insl cmp push imul out and adc ljmp ffreep jp cmp push andb (bad) xor push mov and mov push mov inc popf ret movsl xor mov lods cmp ljmp or pop add lret inc cmpl xor mov cmpsb or mov loopne xchg test mov adc jp lret (bad) mov and fisttpl out stc xchg or and sub xor addr16 je dec pop pop fisttp test icebp mov add sub mov loope xchg nop imul sbb rcr jno xlat cltd add sub jmp movsb dec dec cmp mov pop jg sub out jg xor sahf inc (bad) mov mov lret xchg add add out xor mov mov xor in fidiv or fwait cmp push (bad) imul in cmp fldenv cmpsb daa lods gs mov add cwtl outsl sbb jecxz jb mov out xor sbb push xchg iret or jmp std ds inc mov lahf repz loopne mov xchg push hlt pop jne lods adc pop sub xchg pop aas adc popa cmp scas or mov mov add push pop add or in xchg mov add add xchg mov push (bad) mov mov ds lods (bad) xchg test (bad) fincstp add outsb ss cs dec imul lods mov nop and jg ss mov mov fidiv sti mov scas and bts les xor nop push fidivr jbe sarl stc or push aad mov and push dec or jno into inc xchg ja shrb mov adc cwtl add dec aas lods adc cmp push and pop adc aaa add add add add xchg lret loopne fistpll add xor ljmp fistp int3 lock lret movsl hlt xchg shlb pop pop sub adc add cmp enter cs pop or ljmp cwtl push lea cmp fldenv cmp out mov aam push sub insb sub adc sub insl xor xor push xor pop lcall loop movsl loop je sub pop inc clc rcl mov and add loope movsb add jae pop sbb mov fbld and aam or lods sar sbb scas stos mov (bad) mov popa sbb std cli adc sbb cmp cmp adc add sbb popf lret jnp push stos lcall (bad) dec sub or xchg fsubrl ds or out cli cmp push adc fwait cmpl lcall jp ss add sbb mov add add add ret lock mov xor adc mov loope push push cmp stos setl std jp rcll cltd mov sarb pop test mov imul jge mov push xor inc mov push inc fmuls loope movsb mov subl cwtl fwait jg test dec mov and and push mov xor mov inc cmp repz push movsb inc sub add fwait xlat sarl dec roll add jnp xchg cld imul js loop add fwait out add sahf mov sub jnp adc repnz rolb xchg cltd jmp pushf xor xor je or add xor int pop mov fistl sbbl mov jp pop (bad) cmc (bad) sbb cmpsl mov repz lea fdivrs ds push xchg xor and aas pop xor mov and cmp inc arpl outsl cltd dec sub call iret out aaa push mov adc mov mov cmp pop test mov add mov inc (bad) pop iret hlt cmp and jg stc mov in push sahf adc fs sbb popf dec pop pop adc iret je dec jecxz cmp cmp cmpsb sarl sbb int mov fstl add adc sub in dec ret insb mov jl lock pop ret or ss push mov arpl add add aad jne div dec movsl add gs in lret mov mov in pop aad mov andl jecxz push push xchg xor sarl outsb add pusha icebp or pop loopne and fiadd les jnp popa icebp adc std push xchg shlb popf or xchg test movsb xor add adcb sbb lods sbb mov movsb bnd stc push add push mov jne sbb jnp out push hlt cwtl ret xchg shll jno sbb (bad) jae rolb jge and pop scas fstpl mov (bad) xchg xorb es jno and push sub out mov (bad) cmp push repz sbb test xchg jge push (bad) jmp lods rcll hlt rorl pop insl je out sbb cmp xor or push jg adcl addr16 cli lea mov orl popf pop add std mov inc mov mov xchg xchg into (bad) ljmp popa orb adc (bad) data16 lcall mov inc (bad) pop mov xchg xchg mulb inc push mov adc enter cmpsl int3 out add inc mov (bad) sbb or adc xchg sub (bad) sub push insl xchg cmp movb or mov gs xor lret jecxz out sub into fs inc and orl add repnz mov js mov lret lods int3 mov add fistpl add mov mov and xchg jl ljmp sahf inc push mov push mov xor or mov pop add jmp insb mov add int (bad) test sarl stos lds pop sub jle pop push add lods mulb push fsts ret call mov sbb cmp fdivrl mov rcl int in jmp pop mov sbb xlat out xchg add pop sub jae push push fbld and push sbb xor stos push lock mov sbb jg stc jg mov pop (bad) mov jo ss pop cltd pop daa cmc cld mov out xor mov push add dec cs cmp fisttp adc shll jne (bad) cmc std not das dec test cwtl pusha inc cltd testb jo and xor push cmp xchg xor pop js mov or loop add sub mov add add mov inc scas sub mov mov ret fstps sub sub pop inc adc stc xchg pop cmp roll dec into stc cmp xor lods mov lds add push rorl add jmp mov daa cmp mov inc jge test out sbb mov int3 xchg lods cmpsb jle pusha jnp mov je push in jge cli lcall pop mov cmpl mov jnp repz rcrl xchg jno xor in popf repnz imul (bad) icebp fistpll mov sti movsl sarl in psllq mov mov add pop dec sub adc pushf inc stos mov mov or mov fstpt ficompl add cmc movsl dec rcrl mov enter sub add dec adc mov loopne adc and (bad) div clc daa int hlt pusha pushf rorb push fdecstp loop gs cmp in call leave push add lret sbb sbb out push inc sbb icebp jge push mov push pop das stc dec sub xlat mov shr ja dec hlt cmp jl sbb in jno (bad) notl or adc or fwait dec leave mov mov rcl ds out jo lret xchg in mov fistp dec ljmp fadd or inc cmp push pop int3 ret inc stos movl icebp sbb dec lock xor out in mov push xorb dec gs push pop and add add add cmc rorb ss (bad) xor push pop cmp cmpsb sbb push insl jb outsb mov jmp xlat jp add sub push push mov sub sub dec push std lea and push jecxz xchg sbb cmp sub add nop mov xchg outsb aad mov movsl lcall shll stos mov inc shl push movsb ja mov cmpsb js loop jno jae stc lret shrl push jg dec mov clc shrl inc xor outsl out addl in pop add or add and dec add and (bad) adc mov jae push or mov lret das popf mov rorl dec sahf add mov out out xchg pop movsb (bad) sub pop push mov inc xchg das test jno cmp in subl xor sbb fisubl popa sub je aaa inc cmp sbb xchg push and xor mov (bad) mov aam popa jle inc test std pop arpl rcl ret in add add xor loopne sahf (bad) sbb movsl add fnop dec nop and popf jle xchg push and outsb jnp adc in mov pushf mov fwait jbe fidivrl mov xchg mov mov mov cmp nop in jge push jns insb sbb out (bad) sarl ficoml jecxz test cld and cli rolb adc inc dec push decl push sub lea aad inc aad mov push ss shr dec push or mov add add add mov sarl test je outsb movsb cmp adc bound test mov xor aas pop push lret jae repz and in mov mov mov stos je dec fild push pop clc push aam cmp pop sbb xor fnstcw shrl test mov add or inc inc cli pop and test mov xor mov mov inc icebp sbb outsb jecxz push cmp add add add add pop ja xlat fistpl xchg (bad) add sub imul jmp mov inc sbb mov js js (bad) pop xor daa outsb out clc pop dec xchg bound or mov dec mull or cmp icebp inc push xor push cli pop iret roll ret fwait pop inc mov adc jl cmp enter (bad) fwait popa jnp repnz ret aam xchg push loop adc jb inc mov pop jle in (bad) pop sbb movsl mov add add add in das inc stos insl push lock xor xor sbb inc das push insl stos addr16 adc push stos sub idivl and xchg and adc test outsb dec (bad) jp cmp mov xor (bad) sub jnp movsb mov dec mov inc jle (bad) or xor out pop add xorl stos ret js fisttpll and pop sahf mov out or or scas xchg xor enter jl inc cmp sbb dec ret add add add add sarl mov int dec sbb and pop push mov xchg fadd leave inc mov pop jnp mov mov push cmp lret mov nop push xor enter sbb mov dec pushf jecxz repz pop outsl (bad) dec xchg jae and int and in stos inc leave pusha fdiv aam cltd pop fmuls lcall mov stc or pop mov insb aam xlat clc pop and sbb xchg lea or out dec popf daa lahf sbb (bad) fsubr cmp add add add neg xchg lods bound push mov adc js outsb xchg pop fs or mov sarl add mov in mov xchg pop hlt and insl mov movsb js das mov inc (bad) lahf cmpsb (bad) (bad) ret or xchg lock pmuludq lea xchg inc int3 js popa cli xor xor mov shl cmpl jo lods inc xchg ljmp ljmp cli pushf inc dec mov adc adc imul push xor mov ja in and cmp xor rclb inc loop mov xlat pop mov stos imul out cmc mov add push cld rcr fstp xor lods pop sub sub cmpsl push inc and out jg cmp das inc andl (bad) mov punpcklwd out cmp push rcll out out fisubr jmp js and outsl sbb mov test jo xor mov add notb sbb pop movsl outsb push ss out hlt add add add add add add jb cmp xchg mov dec sbb and cwtl mov arpl repz xor pushf gs and loope and mov cmp and add or bound add (bad) (bad) cmp jne (bad) fwait das out xchg pop movsl inc jnp out dec jae inc out pusha loope pop push push mov int3 push cltd jnp adc push imul gs push popf test cmp dec dec push sbb mov (bad) mov fwait xlat push imul add add add call sub mov into or lods xchg add mov mov mov lds xchg push mov jae imul jne dec adc push adc mov cmpsw daa adc dec jge push fldcw (bad) clc cmp pop cmp pop loope mov jbe inc fisttpl sub pushf insb adc pop jge lods adc insl and (bad) sarl in sub loope mov push ret push int3 pushf nop arpl outsb jns jecxz in stos sub and adc repnz xor cwtl lods repnz mov (bad) icebp popa scas jle icebp (bad) jge xrelease xor cmp int out inc test ficom movsl (bad) insb pop inc or push sbb xchg mov sbb scas aaa imul test jge xchg xor test sbb ret and mov mov xor and lcall ret push sbb xchg repz dec jp roll outsl lock les in je sbb jns inc add add add fdivs lret adc fwait xor jge xor cmp stos aam cmpsb pop movsl repnz or adc push lret or cmp icebp gs push xor into mov mov das fs hlt jae out nop sahf es pushf inc (bad) mov les insl ljmp pusha in push mov dec or add lret cmp push and xor (bad) push out cmp shll ljmp pushf xor sbb pop or mov add add arpl shr fisttp xchg jo mov sbb stc addl sahf (bad) mov push xchg push mov into xor mov iret cmp es (bad) pop or jbe or (bad) pop inc xchg inc out xchg push push int3 and into cmp notl ret rclb fildll lea push cmpsl ret or jno sub jg addb add jns cli cld daa xchg rcll pop or cpuid push pop shll cmp add ret cwtl push xchg clc push test dec pop arpl data16 hlt push lcall sbb in not mov sahf xchg adc arpl dec pop decl inc int adc push cmpsl sub inc call xlat fistp daa jbe inc stos pop mov test pop scas inc xchg xor leave hlt xchg pop jb in fcmovnb std push or cmpsl push sbb (bad) jb and in jle sarb dec ss mov xchg mov cltd mov pop xor imul out add add add add xlat adc sbb andb es lcall push cmp fmuls fldcw nop cmp call pop pop pusha insl add inc pop jmp xor push mov mov (bad) lods es shlb aam subl and imul mov aas jb gs dec push xor sti add or cmpsb and ljmp dec rolb xchg lcall push add mov (bad) sub mov into push xchg clc (bad) lock add add add adc sub jg mov adc or lds loopne ret pop xchg cwtl loopne xlat jnp xchg rdtsc dec xor lods mov adc cltd movsb lcall dec pop les sub test inc xchg dec fs fisubl sbb aad xor stos jo nop and in (bad) xor out (bad) mov xchg mov sbb push lods inc insl adc cmc push aas pushf cmp cmpsb decl cmpsl sbb out sub stos jo cmp sub push add add add shlb call and xor mov cmp lods roll jg test mov cmp (bad) sub cmp jb fs gs or inc jnp pop out sub xor subl adc sub lods leave arpl pop int3 cmp cwtl jl (bad) icebp pusha shlb lcall lods call imul mov loope or (bad) repz pop lret rclb lahf adc cwtl mov sahf cld in rcrl mov aas push inc mov add add dec daa cmc je sub jmp cld pop fnop pushf clc (bad) negb or out xchg xchg mov mov push mov xor std xchg xchg mov ss mov ficoml mov sub mov (bad) loopne pop shr cmp pop lret lods push shl insl into sbb fidivl jmp mov push jbe imul movsl je mov sub or in pop jbe mov xchg loope aad mov pop xchg inc iret pop jb pop jl add add add add out xlat or fmull sub add enter dec mov mov in pop adc jg pop mov lcall push movsl je aam clc mov pop mov inc repnz cmpb and pusha iret push scas rclb subb test push and mov push outsl jle insb or in fwait xchg imul stos cltd xchg adc inc fldenv std in inc adc add add add add xor xor push push enter jnp jbe add pop aaa jb mov stos jnp push cwtl int3 outsb insb mov add cmp les stos adc mov and push cs negl addr16 add lret sbb sarl leave frstor dec data16 jle xor gs push push arpl xchg and subb aad dec push xchg push pop mov aam imul pop cmp into jmp (bad) adc loope jmp pop gs add add add inc pop and iret mov xchg popf enter nop dec mov fs mov imul cli mov mov mov or xchg xor fs ret add dec inc jo dec xor dec dec mov jg out repnz pop pop lret dec inc push test (bad) xor adc (bad) jo sub pushf clc lret lret jbe int3 in sub xchg mov jne imul or aaa mov arpl sub (bad) xor arpl mov js test add add pop cmpsl adc inc push arpl fistp mov cmp push push add sub daa xor jmp jl imul adc addr16 nop addr16 cli mov rclb mov mov js lret jae lret js in fadd test jl (bad) js adc inc adc xor mov (bad) (bad) mov (bad) mov cmp vaddsubps popf (bad) repnz pop fs aaa mov loop jle scas push xor adc push daa lcall add add add aaa loope mov jle sub aas mov push sbb enter inc mov mov pop pop dec in push lock sbb imul push inc cmc adc jecxz adc aaa mov ret out (bad) out (bad) scas push ja or add inc add fistpll mov loope out jo mov imul les jle mov jae fild loop lahf ds cmp std sbb ret pop mov add stos movsb mov jge jnp sub (bad) enter and ficom adc mov and lods lock add dec push (bad) mov xchg sysexit lret scas mov inc jnp adc inc data16 je pop fisttpl fstp lods test sbb fs mov subb mov clc int3 push sbb stc int3 mov and jle das cltd cmp ret pop and xor mov sbb pop scas pop xchg cmpsl mov push fstp mov outsb add pop adc test ret adc sbb pop arpl inc je jno sarb mov pop jne jo mov loope out pop mov pop fiadd repnz in std xlat and add out ret or cmpsb gs and mov aaa int push jle pop cmpsb add imul popa adcl (bad) xor mov lret pop loopne pop add popf cmpsb int sbb jbe mov jae lahf or pop add add add cmp xor mov nop out xchg out xchg xchg cmp gs xor loope push lret aas push push mov mov adc fidivrl in inc (bad) in mov xchg xchg jmp mov jb and cmc daa mov pop out aam pop aad data16 cmpsl lock inc pop aad add (bad) pushf lea popf aas enter mov das (bad) shl aad pop fs cwtl dec jae cmc mov mov enter pushf pop clc fistp add add add fdivrs mov fdivs movsb xchg jp xchg mov mov mov mov pop clc pop add (bad) pop aas lds and xchg jecxz leave mov popf enter pop push xor cmp xchg cmp pop cmp in hlt popa (bad) push inc mov jne (bad) xchg aas inc cmp in mov xor sub sbb cmc popa inc xor cmp std jae push inc (bad) pop jge and push mov and dec jnp in data16 add repnz (bad) xor rcr push sub inc sub dec rol cs jp ret fidiv testl xlat sub shrl addl loope adc jnp into jmp cmpsl xchg les scas shlb fmuls loope mov test test inc mov mov cs clc sbb xor inc pop pop mov and cs (bad) arpl mov push inc (bad) aad pop cltd push aaa fcmove push add add dec pusha jbe cmc pusha lcall add sub inc (bad) mov stos sarl (bad) push unpcklps cwtl lods jnp mov adc cwtl jno mov dec dec push jae dec push dec jle pop repnz cwtl lahf enter adc sbb imul add ljmp pop sub lret xor dec cli or pusha cld push mov sub lret repnz or rorb pop out cmpsb in cltd imul add mov inc dec cmc xlat sbb add add add add pop jle mov push xor mov cwtl sahf shlb sbb jle,pt cmp or push jg and or xchg bound sbb jl push dec dec orb std and in cltd inc xchg sub test xor mov push mov mov in outsl test mov sbb iret mov lahf das jmp jae mov int ss or in push mov ljmp pop push lret inc adc pop int faddp (bad) enter push xlat test iret fsubrs jbe cmpsl adc adc ret pop (bad) repnz pop test mov daa lods mov rcrb mov test je mov mov sti pushf xor pop mov mov in jmp push or pop sysenter add adc dec ficompl aad jp push imul lods adc in xor pusha inc pop lock or mov or jbe push std aad dec mov pusha hlt punpcklwd ja mov negb ja sub jbe pop or add add scas and cmp jns js jge clc push cmp push icebp lret push cltd stos int3 adc das mov popf insb in dec bound lret test and fucom push les js jmp jp dec in lods ss add xchg or insb jae stos fwait movsl inc mov sub rcrl fs mov jae mov mov push or in or dec push shrl mov ljmp mov hlt lahf outsl push (bad) push imul sahf lea neg add add add shll (bad) cmp xchg lret mov cmp jge sahf mov push lock sbb mov sti jnp mov pop adc mov cmc sbb push jnp popf and inc pop outsb fnsave inc push shll adc cmpsb jne (bad) jle push xor mov fistl rcrb ja or mov je lret sub call movsb (bad) cltd mov outsl jg mov mov mov add fstl cs cmp pop cmp lds jne mov sbb shlb cmp pop icebp mov inc and (bad) mov loope cs stos scas sub inc dec add (bad) jno mov jmp aaa sahf gs xor (bad) xlat mov add xchg test inc out into inc ja sub mov push dec sahf sbb xchg inc ret cltd pop mov cmpsl push testb add pop lahf (bad) sbb cmp jl add add xor xchg dec je lods cmpl lret xchg inc cmpsl pop fistp add cmpsb push sbb cmpb jg in pop sbb rcr xchg cli add sub movl (bad) clc ja push xor lods add repz push push pop cltd fbld mov lea jnp lahf (bad) fidivrl movsl inc jne lods iret addb xor int3 scas incl les in pop imul xchg pop adc mov pop test add add add imul aas das out ret adc jnp push insb cmc sahf testl iret inc imul jl in xor jle jno sub (bad) mov push imul push daa jno sbb and aad and xchg pop scas fnstenv push ret pop jns push aam mov xchg mov cli inc mov lcall cltd push xchg sbb xor sbb jle xchg fisubrl push jns pop popf leave push test hlt jnp cwtl ret push sbb pop xor push mov jb add add inc out loopne enter in repz or lods sti dec jg pop cmpsl outsb push ret int lds and fbld in pop ret mov mov pop lcall jp and fmuls dec movsl lret aaa dec nop push ret xor add pop in fnop in daa or xor sub mov xor push iret cmp daa jb je iret xor push mov or add cmp imul mov mov fcomip mov or and and lea add add add add add out aad sbb call or jmp mov imul pop scas iret ficoml fldt push xor ljmp xor in out gs pop rorl call mov fcoms add xchg mov and ret sahf push ja sub js std adc sub test push lods dec movb (bad) xor inc inc pop dec pop test xchg sti pop sub pop mov xchg pop and adc xchg jnp or add add add sarl loopne out push pop (bad) adc clc mov hlt cmc loop sarb xor and inc push xor mov (bad) xor jae and dec jnp movsl xor sub shll jmp or das repnz sbbl fsubs ss adc sbb cmpsl pop std jno pop iret fwait push hlt push pop sub stos mov or dec cmp fisubrl addr16 and lcall nop mov je add add add push mov adc sub sar pop jecxz jp test sub or sub mov adc mov lret inc cmpsb add or dec ret xchg jl or push cs sbb push into movsb stos loopne loop ret stos mov call lea adc mov imul stos jg sub insl cltd xchg test stc mov call loopne loop fwait mulb inc imul lret dec (bad) or add fwait jmp fildll sbb gs sahf mov ds (bad) hlt or out mov into je sub cwtl pushf daa xchg xchg jns jb dec je sbb aam (bad) les push test jnp (bad) pop cwtl xchg idivb cmp or push xor or fild int cli sbbl xchg (bad) jmp test js pop pop add fsubl cmpb sarl mov mov nop cmp cmp test cmp out adc inc xor add add ljmp dec shr js rorl je lods cs xor dec jp inc mov jb inc test mov dec ljmp imul or add lahf jl mov movsb popf push (bad) cltd (bad) or and jnp lds cmp jmp lret mov test lret push subb jmp or push icebp lock sub je xor and mov inc xchg fdivrs mov in mov and daa es ret bound add add add and sahf sahf rcr lods js jae loope mov pushf (bad) int add hlt pusha fildl pusha jecxz rorb and mov mov (bad) out push add std out or (bad) fnstcw jo mov pop fildl cmp sbb jb aas (bad) adc pop push in lock nop or inc add (bad) fldcw lcall xchg icebp movsl xor push fs xacquire and adc jne push movsl fisubr sub jne outsb inc (bad) push (bad) mov push mov pop push popf lcall fwait dec xchg inc je dec cmp fcomps (bad) popa gs sbb mov cmpsl divl ja pop sub and dec (bad) fistpl (bad) into adc or mov and ljmp data16 dec pop dec out (bad) inc mov loop outsl mov sbb mov fldt test push out inc lods add js jns (bad) aad test mov push push clc stos push add sti xchg sub lret sahf inc mov mov scas inc xchg jg xorb xorb int3 repz or lods into cmpsl cmp mov pop xchg xchg cmp repz lea push mov pop outsl push lcall loope es push test xchg mov dec cmp push push jle jmp les sub dec loope pop hlt es lahf (bad) cmp dec mov cmpsl ds das nop adcl outsb xchg ljmp push push fistl pop cwtl sbb aad adc mov add add add out dec jae lahf sahf sbb pushf lret xor adc ds mov daa push inc daa or pushf imul mov daa movsl sahf sub andb lea xchg cmp fs or push mov in cs or nop loopne add iret push pop cmp dec in in sbb imul mov mov fmuls xor mov pop lret dec xchg lea cs (bad) dec (bad) outsb idivl sub mov cwtl jb pop mov dec mov dec sbb sbb ds cmp mov and sub ficom jl pop push outsl (bad) cmpsb or (bad) mov (bad) fistpl into jne dec xchg into jmp sbb fsubrp fwait cld jnp xor mov sbb movsb and (bad) xchg addr16 cmc mov in enter jb xor call push (bad) cld add js rorl loopne pop pusha sbb xchg inc add add add mov sbb rolb sbb xorb add dec mov cmp ret add dec push pop rcr push xchg std pop imul push popa out sbb setl stos (bad) push mov mov inc (bad) lods inc ljmp mov push push popf test les into ret xor add ja fbld add dec add stos mov xchg jg loope or pop jmp cwtl xor inc dec mov and enter (bad) ljmp adc add add pushf jmp and fbld inc int xor push cmp insl ja daa dec and cmpsl sbb gs sub mov jg repnz fisttp movsb sbb pop (bad) lret popf push sbb xor cmp xchg scas (bad) insb mov loop pop mov adc (bad) rcl xchg arpl xlat xor pop cmp cmp aas fisubl cmp pop mov jo xchg lret inc inc out jne adc cmpl and add add add add xor orl fldcw xchg pop rol movsl mov cmp cmp mov mov (bad) je movsl ret xchg sbb call or lcall push mov sbb lcall movl out pop vpunpckhwd pop jge adc mov popa xor fdivrl pop or (bad) lret (bad) cmc (bad) push sub xor cmpsl jge push sbb xorb sarl cmp jg mov pop push push ds add add bnd push dec fnop mov iret jns inc jp pusha popa cmpsl cmp mov push dec or and inc cltd repnz idivb push in adc subl cs adc jno (bad) pop sbb adc pushf pop jg stos jge lea mov ja or int out lods loope jle jb stos (bad) fxtract push leave cmp (bad) jbe cwtl test push and cmpsb mov cmp test mov xor cmp mov add inc push outsl stc cwtl scas pushf mov cmp add add add push add pop imulb jmp das jge addr16 pop push pop adc notl xor add outsl xchg jbe popf movsl inc jmp xor ds stos nop pop jl daa or sub stc xor js cld arpl add adc adc cmp in jno push mov add pushf sbb into test sbb ljmp das mov and test (bad) xor ljmp mov sbb daa cli cmp xchg mov push imul jle jle add jns push adc mov dec ja scas cmp dec cwtl sbb scas (bad) mov push shrb js xor out and mov and fwait push cmp movsb outsl push clc stos mov xchg bound iret paddq pop imul push mov (bad) mov shrl xchg test xlat shll dec push adc xor enter jae mov jecxz sbb jno icebp and jbe sar sub shlb enter jp add add add mov sbb mov xlat mov nop in loope aaa mov mov sbb test xor mov add lret lret jge inc dec pop fbld dec cmp enter ret std inc dec inc xorl je lock lods pop xchg xchg hlt sub jnp mov adc cmp adc int3 xlat push test inc int jbe popa mov xchg pop ret add mov iret cld inc or sub addb xchg lahf adc push cmpl add lock cwtl cwtl cmpsb fsubl mov pop out jne insl cmpsb sarl (bad) xor and pop jmp hlt xor notb les bswap xor push sti (bad) xchg mov ljmp xor xor mov and lea jnp pop loopne push mov test cmp dec dec outsb jge mov dec lods sbb divl int ljmp jbe xlat mov cmp xor and bound pop mov fcom cmp add add add add rdmsr out aas (bad) sub in sahf aam xchg test cmpsl sahf or dec xchg lret fistpll test jle jmpw ss mov jb adc xchg scas jne sub sbb out hlt addr16 add imul outsb xchg ja leave jae jl js lods in push jnp inc pop mov dec mov into sbb pop lahf pop cmp in stos mov lea (bad) out (bad) in mov dec inc ret test mov add add popa push fwait lcall xchg push jbe sahf cmc lods mov cmc mov mov in data16 lods mov add aaa imul pop in xor mov inc loopne test pop subb cwtl xlat arpl inc rol call (bad) je xchg push jl das jp mov rcrl add mov scas aas loope mov jle pop leave shr (bad) add scas adc test jle mov icebp push jmp jnp xchg scas xchg pop jmp mov sub add add add xchg (bad) (bad) movsl mov out iret movsb cli inc lods gs int outsb lret xchg inc lods xor loop mov adc lret loop loop pop pop mov es xchg cwtl xchg sarb insl and push out lods test dec sbb aad add sub or pop inc cmp xchg adc adc lods dec cli push aad lret fdivrl pop clc int3 movsl xorb xchg test imul in dec pop jno daa in ja xchg add add add add pop xor movsl fwait push lds pop jmp js push sbb xchg imul push pop add and add and mov sub and adc cmpsb addl clc pushf adcl and mov and pop inc in mov bound xor (bad) loope lea sbbb mov push bound fs imul add or lea mov nop push arpl rolb push add add add add (bad) sub in js mov fldln2 and rclb xchg add adc lods push roll xchg ss cmp sahf mov jge mov sti loopne subb es adc cmpsb aaa inc lea add lret imul popa jbe rclb inc jno aam jne mov outsl mov add xor movsl jne pop bound movsl cld push loopne sub dec aas xor lcall sub subl add add add add jns and (bad) xlat in dec lods gs mov scas mov or ret jge mull dec test and inc mov mov adc xchg jbe (bad) int3 cs pop push inc push in push in loope insb dec enter or or inc inc loope mov dec mov loope scas jp xor ja mov ja xlat std scas pop add insb mov lds fildll add test les xchg insl push and loope add aaa sbb stos jae adc jl push aas fcoml outsl cmp pop sbb push testl scas (bad) lods lock mov mov adc mov mov das inc pop add cmc pop daa into ja pop sub aad (bad) pusha lcall hlt mov inc jecxz pop inc cmc cmp mov and pop xchg pop xchg xor cmc movsb jnp sti loopne push (bad) repnz outsb cli dec lret cltd mov pop stos pusha push aas add cmp sarb pop adc xchg sub cmp popa test dec or stc adc repnz pop mov jle outsb xlat inc enter mov sub adc popl popf (bad) mov and out loope dec adc fidivrl or ficoml inc push jns ljmp jbe lret push les cmp icebp or lds jl xchg stc inc lods inc lock sti lcall mov mov xchg mov jmp mov cli inc aaa cs dec adc ficoml xor lcall lret push sub mov mov imul pop fs jle push loope xchg xor push or mov mov int3 movsb pop out ss mov dec cmpsl lcall and sahf adc outsb or jg push jg xchg xor ret jb addr16 xchg sbb rcrb (bad) scas cmp add repnz lea mov mov fdivl fwait sub jae push stos and add xchg fdivrl adc cs add aad mov popa enter sub sbb mov ja add out out sbb leave mov call rorb pop mov dec out sub repnz jnp and insb imul test ret sub pop sub ret lods or out rorb sbb outsb mov adc (bad) fnstsw (bad) outsl xchg out lea loope xchg dec mov and pop shr leave movsb jmp in das pop sub dec enter cmp data16 mov test dec mov add add add add sbb inc loope jbe jne push addl xor fneni(8087 mov aas cmp cs fdivl and jmp pop mov fisttpl (bad) (bad) mov push push mov or dec movsl jg sbbl jne jecxz sbb jmp mov mov pusha inc icebp and jo and dec pop jg pop out and lea les sub cmp add pop mov jge cld nop push in roll mov cli push xchg dec and inc push add add add sub cmp mov (bad) cmpsb inc lods popf mov dec xor sub pop mov and sub jb sbb aad dec dec add jb sub lds lds jae aas popf iret (bad) shlb pop insb jmp es testb adc leave inc mov add in jp inc adc mov jp pop pop xchg lea out lahf or in (bad) mov sub cmp dec cwtl mov add add add add jle cld xor and insl lock cmp (bad) rolb jae dec cmovl cmpsb mov mov xor test fldcw ss mov and mov in cmpsb mov scas out popf xor xchg pop vpminsw pusha push pusha fisubl mov pushw cmp cs inc fs push xchg inc pop sbb fisttpl stc rorl loope lea sub daa (bad) fmull fist repz jp cmp add add add add push xor mov loop fcoms xor push fdivr test jmp push and dec fwait repz pop nop sbb pop jecxz aaa sbb pop pop mov or cs cmp daa gs mov scas sbb cmpsb addr16 mov add aaa mov daa add add sbb xor fsubp shrl inc mov mov xchg mov insl pusha mov inc inc mov adc ss test call mov mov lods mov movsl push cmp ficoml mov aam dec mov enter lods xchg hlt sbb pushl loopne je imul pop jl mov adc das call imul lcall hlt sbb dec adc sub push xor mov arpl test imull aaa adc (bad) xor shll enter mov dec and pop xlat fnop popa xchg ss test add add add mov mov cli (bad) jg into icebp nop je mov adc adc and sahf orl pop gs int into mov inc fstpt lods out xchg jecxz in pop imul and mov cmp adc mov mov fstpt xchg push pop sbb fsubl jae xchg loopne mov pushf and divb popf jbe mov (bad) mov pushl mov or sub xchg lock add add add or popf (bad) mov mov mov add lret jp sub je in cmpsl mov lds sbb add add inc aas pop xor mov pop gs mov in stos cmp out pop inc or and ror call push mov jecxz sbb or rorb (bad) dec or fsubrs clc insb scas push sbb adc repz ret je inc in add cld sbb dec lret popa or cmp sub pop inc sub add add xchg cmp adc movsb repnz xchg fsts dec sbbl enter enter add (bad) jo sbb je dec push jle divb dec sbb fwait mov fcmovbe movsb inc (bad) mov push out sub xor pop mov xor insb inc nop mov or cmp push and and mov les lret or jl div enter inc jne jp nop pop in dec sbb push xorl add dec (bad) mov clc dec inc je insl sub pop imul popf std add (bad) sub jp lret push enter cmp mov dec out sbb inc sub ljmp dec sub les gs jmp (bad) scas xor inc jg jno cmc pop iret enter (bad) loopne lret pop pop pop fdivl cmc push mov mov subl dec push xor loop test cmpsl shlb icebp dec lcall stc and js stos pusha insb pop push dec daa into les es adc pop sbb out mov fdivs pop lret enter or jne adc (bad) push pushf test mov mov jae xor inc add inc iret push repnz pop xlat sub add push xor aad jp pop adc dec (bad) xor int daa jecxz pop movsl arpl jg push mov scas adc pop outsb repz outsl jp pop jl cltd shll enter xchg das dec inc roll loop pop and mov lds add insl xchg arpl pop inc iret addl sbb (bad) xchg inc fidivrl dec push cli loope jno mov mov stos adc and jecxz mov inc and out movsb xor pop inc pop enter popf xchg cmp add and push sub call adc fdivrl mov loope cmpsb adc leave xchg negl mov cmp addr16 inc loop jmp test add jge pop cmp mov push insb add add add add aad popf mov mov cmc jb jo mov lods cltd xlat mov inc fnstsw leave dec jge push in addl mov mov ret jl repz das mov mov fisttp pop cmc xchg push vshufps and pop aas icebp repnz inc clc sub test pop push xor mov loope mov mov push notb and xchg mov jl xchg mov pop imul outsb pop add add add add sbb add pop gs jecxz adc cmp mov cmc stos pusha adc aas loopne mul add lcall mov in adc loope ljmp push (bad) (bad) mov pop adcl xchg mov dec xchg xor cmp sub pop sbb lahf push mov gs rcrl and pop fs add lcall jnp enter bound pop imul mov xchg sbb mov dec add add add add sti adc ficom add pop or fsts arpl pop out mov cmc (bad) dec ja mov icebp lcall int3 push pop dec or mov sub pop mov aam cmp pushf lahf mov ja ret repz popf les fwait minps loop xor movsl rorb add mov jns lock inc push aas lret imul xor out cld mov outsl movsb cmp dec jp repz rcl dec inc adc add add add adc jo adcb jmp mov cmp cmp ss add scas orl mov pop enter and pushf pop or dec pop lret sbb out inc ficoml jnp pop xor push decl xor data16 cli mov pushl push mov imul out (bad) in sbb mov adc movsl adc mov jmp mov mov push dec xor add call sub je stc jg add int3 inc cwtl addr16 push mov ljmp mov fwait mov ret aad jbe testb pop dec ss mov or (bad) je (bad) mov loope cwtl rcrl cmp mov and mov aad xlat insb xchg xchg fwait or fnstenv test jl mov inc add sub fsubl pushf inc cmp and sub xor sub xor cmp xchg test add add xchg dec and daa xchg pop inc xor jns pop lock fwait inc mov movsb jmp push ficompl jmp and nop jo mov pop and dec add in mov fcom adc or xchg lds fmull pop mov xchg pushf sub lcall or sub and pop mov je xchg insl jge mov gs sub sub xor push xlat enter in imul stos add jle loope ds aad mov jno sbb add add add add loop inc add jl mov mov sub in outsb xorl cmp sbb jb inc fisubr das das jl out test ljmp andb jbe test push ja icebp movsb lret push pop and (bad) and sub dec scas jle loope movsl mov pop lods push xchg (bad) dec push lods dec mov and adc (bad) or sbb (bad) push lea out dec inc adc xchg dec add jle sbb je icebp popf call mov int out shlb lcall xor mov sbbl sub scas fwait cmpsl ss nop xchg dec mov or dec jge shrl jbe lea inc (bad) test fiadd or dec mov mov inc adc push sbb popl push pop mov xor loopne cmpsl xor dec (bad) lods xchg repnz push rcr dec cmc idiv cmp fcomi (bad) add imul test pop xchg outsl push inc enter cmp fistp int3 add push cs jge in xchg leave jnp add daa scas adc mov mov dec std add mov jno (bad) cmp dec mov jecxz push dec out push ja movsl or or out ret mov add mov cwtl sbb shlb mov add popa repz sub lcall mov rclb aam stos lret outsb rorl mov jp add add add ror sbb dec icebp inc cmpxchg (bad) xor jp lret in test push xchg stos sbb scas xor scas enter popa dec testl push mov (bad) fiaddl jnp iret (bad) mov push imul (bad) sti and adc bound add stos mov fcmovnb inc xlat and popf leave push repz or les enter xchg xor dec jno add es test in sub nop hlt icebp cmp sub fiadd xchg icebp push outsb jo lret (bad) cmp fimul insl pusha in add aas cmc ljmp cs enter mov push icebp outsb aas jecxz lds inc or out push in jle (bad) push mov add mov (bad) movsb scas cli pop iret jle or pop push mov xchg xor add cmpsb lret xor push into cmp mov addl aaa insb lods ds cmpl sbb jp fistpll repnz movsb adc aad add xor add dec dec jmp sahf jnp aad ret frndint or and mov (bad) into cmpsb scas cs pop lock adc xchg aam int3 mov jl scas push and dec inc cld das jecxz cwtl inc mov push incl fistpll inc push shrl push dec jno pop dec or push insb mov inc lods std xor jp int insl fisub fisubl sbbl pop add and cwtl outsl jle cmp test scas fcmovnbe sub dec ss sbb push push add add add add rorb pop cmp shlb cmpsl cmpsl xchg loop shrb add jns adcl fs jne xor cmp test pop imul mov cs fs cmp xchg or cmp in adc lcall pop adc mov pop in stos sub adc fsubrs icebp scas push addr16 xlat cwtl sub frstor mov push sub dec dec das scas jmp lea shl orl cmc adc cmp mov add push mov or (bad) mov clc (bad) mov movsl xchg add jbe lds mov xor shrl (bad) xchg stc das mov dec cmovs mov (bad) lret fildll adc pusha repz push pushf lods jnp sbb mov (bad) adc dec push xor into int mov arpl push or or mov inc push popf jns test popa flds pop repnz mov stos (bad) out xchg (bad) mov add add jecxz fiaddl insl (bad) dec inc repnz add dec cmp cld adc (bad) jge lret mov xchg aad stos (bad) adc dec imul or adc mov (bad) pop and jl outsb sti mov leave sub pop dec in adc xchg imul dec and mov add data16 adc lret insb xor out jb pop roll fadd in in push ljmp mov mov adc add add add int3 repz or mov stos cmp cmp outsl mov and xchg xor push daa mov test mov mov (bad) nop rcr bound jmp xor fwait daa js push cmp cmpsl sbb add insb test ret and push inc or mov je push pop inc leave (bad) cmp into jmp or (bad) icebp in les cmp pushf inc daa loopne sub roll push jge fcmovb jno fisubl push sbb add add add pop xor cmp das in pop dec testl xchg mov fmull ret fnstcw (bad) mov movsb xchg shll out or daa lahf daa mov xor push inc sub mul jg int3 lret enter pop lcall sbb mov jle add fistl sub ret mov lea sarb shrb enter rclb jp hlt sbb mov pop dec push cmp out xchg inc mov into dec leave xor add add add xor nop cs test mov jecxz dec insl cmp imul jne push out cwtl and fidivl aad dec addl add gs ret dec and and in ss int insb fs subps cmp sub enter mov push add test mov pop cld test inc es push lret push iret jmp (bad) jmp pop push xchg leave mov mov mov add (bad) call mov and jecxz pop sbb and add add add xlat or data16 fdivr add out mov mov mov out ret dec fbstp pop (bad) or mov loop fs cmp add pop aad or negb std sub fidivl inc cmp and sarl push adc adc adc pop push xchg outsb mov popf mov xor adc adc cli call repnz iret (bad) mov outsb or mov scas mov xchg dec mov testb add add pop and add mov add loop ret jmp mov dec out inc jb sbb repnz jb and mov insb cwtl or jmp jg and add push jno sbb or iret inc push arpl xchg cmp lods (bad) sbb loope push sub daa mov cld enter icebp aad pop stc mov and (bad) sbb cmp fidivl jnp shlb in sub add add add xchg push sbb lret nop or jge out mov insb xchg nop shll xlat xchg scas and xchg ftst aas mov sub xor stos (bad) adc (bad) sub xchg add sbb mov adc sbbl stos jle push pop in mov mov or sti icebp or test dec jbe mov mov sbbb mov pop (bad) dec xchg hlt add insl lods rorl sbb add test cli clc ds mov lcall add add add add inc stos das mov je xlat ja inc cld lods add rolb js add leave jmp xor inc cmc js es stos mov and fidiv sub adc rcll jecxz mov fs cmc fisub int3 push inc in daa cmc lret mov push outsl cld or or fwait pop out lds jmp fbld outsb pop adc clc repnz mov imul fiadd pop dec sub jmp jb xor add add add jl mov dec inc push fildll jnp jbe ds cmpsb pop js insb gs and mov push mov das popa cmp sarl aaa mov xchg in mov inc jmp push jecxz insl mov push stos jp (bad) mov inc cmp pop dec orl sub int imul sti or adc inc test dec sbb add xchg lret ljmp lds push mov fisubrl (bad) fcompp outsl jg jge pushf sti pop mov and xchg add add xor js add loop movsb adc xor mov cmpsl outsl pop add mov pop data16 dec out fld icebp jge pushf nop outsb ds mov cwtl pop and popf sbb sbb mov (bad) cmp jmp shlb xlat out fwait nop out mov loope lcall (bad) popa ja in mov data16 jno,pt jmp aas aam mov pop lret sbb mov adc xor leave dec negl jbe cs cmp mov and add add add add pop mov xor (bad) repz out and hlt cbtw cwtl push and fild push ja idivl pop ja daa and or push sub nop cmp div or or mov cmp sbb xchg aaa add fcom aas outsb cmp mov or dec mov or jne lret std sbb call jmp loop popf ljmp xor xor pop mov (bad) test int3 rep mov pop (bad) sti daa mov add add add adc push cmc iret pop cmp jnp sub mov clc cmp bound call and pop adc add enter adc in jle sub shrb push movl xor mov cmpsb sub dec nop leave mov mulb ror or iret xchg adc test pop push sub push mov (bad) je jl and push xchg jp mov or lds dec fwait jbe pop cmp add add repz aad and je outsl daa inc and and mov dec lcall jg push icebp jae out mov sbb pop mov (bad) or mov adcb cld mov int3 pop adc fucomip mov dec sub xchg int3 and jl stos push stos insb mul sbb (bad) sbb mov aaa mov test int addr16 pop dec sbb sbb sub pop jecxz push lds vunpckhps push mov cmp jo hlt (bad) fldcw add jno dec cmpsl sbb gs ret mov cwtl stos out sub push adc bound repz cmovno dec jmp adc sub inc inc (bad) aas mov or ljmp mov xchg sbb push test or aam fidivl outsl nop movsl out fisttpll pop dec mov mov into popl or dec mov lea mov or loope sahf gs cmpsl xchg movsl leave or xchg push xchg sti clc xchg fist js dec js pop iret lea sub sti cmc jp pop test mov bound jmp pushf dec pop jge iret pop lea popa cmp cmp icebp cmpsl mov jge lds leave mov cltd dec lods rcll les pusha (bad) xorl and sbb adc es mov mov insb popf xor lods dec mov fstp inc sub shl lds nop popf dec stos xchg in insb mov jg test fwait push fwait mov sbb (bad) aam mov cmpsl (bad) out popa add sub mov repnz sbb add mov jno sub add add add or bound mov cltd add mov sub add mov pushf inc arpl dec lods pop js xor cwtl (bad) mov xor pop inc jle mov fdivs jo jl dec mov push cmc dec fdivl ja out mov jne lea movsl in ljmp negb and sub lea popf or jo (bad) (bad) ds enter add bound adc mov fdivrl das mov sti ja pop inc flds add add add add inc mov sahf jg and leave (bad) adc test or mov (bad) and stos mov jg orl lret loopne out lret nop outsl fsub mov outsb push out xor ficoml cmpsl lds leave std xchg xchg xor lret das (bad) sbb add push jo insb dec push xor (bad) stos sub add push movsb and pop gs sub scas fsub pop test jge in pop jmp aam rcrb (bad) (bad) neg idivl jge fs inc jbe inc xor scas cwtl adc popa and jecxz into stos ret xchg mov cwtl pop fwait jnp pop call and push xor movsl (bad) mov lahf adc mov pop mov sbb scas (bad) popf mov pop (bad) mov lds test mov fadds (bad) sub jmp aas jo inc add rcll mov hlt mov adc ljmp xchg repnz mov add sbb or add add add sti (bad) mov pop jle mov repz lcall and insb add pop test lcall icebp mov insl cmpsb xchg inc inc cmp pop sub dec inc add in xchg bound cwtl xor mov je aad cmp push (bad) (bad) and dec push int ja xchg lods sbb popf sbb and sbb mov stos xchg lods mov imul dec decb add sti mov push test mov outsb int3 mov and add add add lds fisttp push sbb ds add in repnz xchg loop mov out push sub adc cmc push pushf push or inc icebp mov insl pop stos inc xor cmp or (bad) and repz lcall fwait and push mov adc sti inc fdivrl sub mov push loope mov xor dec sbb mov mov pop pop adc or xchg mov cld test xchg dec cmp mov xchg and add add push leave aad cmp mov pop mov mov movsl push xchg rclb mov test mov popa cmpsl insb shrb ja pop mov push stos (bad) es rclb cli outsb (bad) addr16 xchg loope adc pop aad icebp imul cwtl sbb jp and fsubp lret lock cwtl in adc jl lds outsb cmp pop aaa lret int3 add add or mov xchg adc pop movsb add add add adc or mov push rcrl mov bound cld ds dec insb (bad) std sbb or enter sub gs push mov arpl (bad) add jns dec ret sub inc mov fld xor dec fs jmp mov inc outsb hlt clc scas pop scas mov xor xor sbb (bad) icebp adc jge xchg into fcomps (bad) fmuls roll mov aaa mov or (bad) or xchg push int mov decl add add add pop mov mov jo and int jne insl sar (bad) xor (bad) xorb sbb inc pop test pop test in or ss (bad) repz clc dec out popa ljmp push jge aam arpl ret dec addr16 cmpl inc mov xor sbb aad mov mov jae adc pop inc ds imul es dec jns pop mov inc mov xchg add add add add subb test mov jae cmpsb lock scas xor mov cmp inc in mov lods xchg enter inc xor jle fs cmp xor hlt iret ljmp jo and iret fucomp stos (bad) bound cmp iret out je cmp mov aas stc in pop or mov sub pop or enter lds and mov pop pop negl outsl ss das cmp inc inc (bad) mov jmp mov inc sub pop sub ss sbb push adc jo fs pop loopne cli jle jecxz sahf jo fmuls cmp pusha cs jo mov je nop movsl jb cmpsb and sbb jle mov jl xchg imulb push xchg mov sub or mov dec rcl and test movsl push jns jle and cltd or mov lret adc mov add sub inc xchg movsb fldcw sarl pop xchg lock jmp cmp or dec add stos add add add add xor mov movsl lahf pop cmp push sub cwtl int3 out mov lret (bad) aas lds adc lods xlat mov or cld adc rol or sub xor int popa cli imul (bad) mov scas xchg mov sbb nop sarb shrl popa push gs jb subb jp stos jecxz sti ficoml mov flds popf outsb (bad) sub test mov out arpl movsb leave jns,pn add add add std icebp sahf cli mov cmp pop nop push repz (bad) mov jbe iret push aaa and popf pop inc rcr fstpt cwtl and aas add sub sub loope pop inc pop mov loope sub and xor lods (bad) mov rcll repnz xor fmull test mov or call add pop mov push movsb mov scas repnz xor push cmp outsl add add add mov jo lahf jg (bad) sbb outsb or movsl insb cld (bad) scas aas dec dec inc push cmp popf lock mov mull cltd arpl lret inc jno call mov nop and xor xchg (bad) loopne js adc mov mov push xchg rorb shrl scas mov ss daa add divl pop xchg (bad) js xchg adc iret in ja push push xor repz lods aam pop out mov (bad) jb ret mov push jp mov add add cmp shlb and shl test dec sbb mov cmp fnsave std fadd test sbb xor insb inc out or out jae into mov jecxz cld (bad) cmpsb insb fnstenv repnz outsb aad imul out ret push stos or push jnp mov fs int cmp xlat scas pop inc lret mov mov cmpsl or sahf adc fs scas add cmp adc in gs inc loopne insb adc mov push add add add add dec mov (bad) loope fnsave mov fdivl or dec mov test pusha sub pop mov dec inc add in pop leave or cmp push dec xor mov rolb movl inc push pop cmp push rcl push (bad) shll andb arpl cmp jle cmc xchg mov sub and mov dec pushf and pop ja ret jo lods xchg stc jae cmpsl sub add add add add leave xchg int3 dec mov icebp push sub jae and dec mov lods jp adc frstor mov xor (bad) mov popa pop push repz outsl inc sbb sub stos dec jg cmp je push push mov push cltd push stc jb sbb jbe mov ficoml xchg mov sbb sahf repnz jle add mov mov imul cmpl and out scas jbe xchg mov dec or clc add add add mov not arpl stos aam jge rcr cmpsb fidivr rcrl or add call sub or inc (bad) iret js sub add fisubr subb fcmovb insb jge out sarb aam les and jnp pusha sbb (bad) loope hlt xchg popf dec pop das stos stos mov cmp orl pop jmp cli xchg mov insl sbb out out adc sarl movsb mov movsb (bad) push adc fcmovne push sub dec add add add add jp scas xlat push mov sbb mov mov push adcl outsl pop inc scas fidiv mov ljmp jge jae pop or sbb imul lea mov cmp mov mov push or lds jmp inc mov mov stc pop jle loopne sbb sub insb push jns rcr mov jb and push push add xlat adc sbb jno mov or sub mov aas loop push jge,pt lahf data16 fdivrl stos int3 jmp xor leave mov mov test xchg into loopne dec cmpsb push sub mov xor dec cmc fsts out leave jl push scas mov lock insb push xchg test lret push jno and pop fmull das lds pop add and nop out (bad) add inc sub popa hlt jecxz (bad) mov rorb inc or push int3 jnp push fs and mov imul cmp add add add add inc xchg mov add push dec in xchg cmp cmp push arpl fldt cmp cmpsl inc arpl cld push pop imul insl push mov inc ljmp aad add rcrb pop xor xchg nop cmpsl inc pushf test mov cmp aas nop decb xor repz xchg das pop lret adc clc mov out jns (bad) jbe es and aaa test jbe pop cs jnp lret add (bad) jecxz dec push js adc sbb jae push or cmp or sarb xchg jnp push sub jo or jbe lret adc and mov mov aam xor cmp popa and vshufps arpl mov lds (bad) inc xchg repz jg mov stos aam ret fwait ret out sub lret mov js xchg roll cmpsl (bad) in imul sub xchg xor sub in scas rorb sbb lret add add add adc lahf dec xor out push mov xlat dec mov insl lods pop insl jo cmpsl mov addr16 gs mov cmp outsb pop cmp repz mov xchg jno sarl mov mov insb pop fsubr push call sbb cmpsb test int3 loop fistp xor push movlps or push mov cmp dec rcr xchg (bad) mull add pop sbbl jns mov cmc pop dec dec sti mov and mov and jge push or dec int cmpsb leave jmp add add add inc aad xor or mov dec sub es data16 cmpsl xlat shl xchg sarl mov (bad) nop repz inc mov in and sti add or jae xchg test data16 mov dec mov lahf adc xchg lcall clc ds daa cmp adc mov jp cmpsb xorb sub (bad) mov xchg cli jp xorl test lea pop inc or adc xor xlat xor add add add and loop loop subb into adc lds sbb cmp in cli js adc mov (bad) in dec test fcmovnbe jle xor mov pop pop lea test outsl repz fsubrl das stos mov adc add mov sbb bound xor ret sti dec sbb in loop sbb lods lret dec in mov out adc cmp lret cmp jns daa (bad) clc xchg decl adc inc push pop dec push add add add mov jbe or ret jecxz stos (bad) sub notb (bad) lock mov pop xchg cltd add mov movsl movsb outsl xor xchg out push or jg test dec aad mov fcompl (bad) jmp rol push pop push sub insl mov lret and test pop rol cmpsl sub movsb jmp push test pop pop mov mov adc push mov push adc and jg (bad) mov xor add add add cmpsb push adc gs les xchg rclb fbld xchg sbb mov pop mov fmull stos (bad) xchg loopne ret aam jo dec push inc pop pushf add out xor lods test inc rolb sahf push bound or imul mov push mov (bad) dec lcall or adc mov imul push iret mov push ds inc xor int3 push test clc loopne add data16 xor (bad) clc and inc adc add add add outsl inc notb mov (bad) (bad) in pop aas sbbl sbb pop or popl movsl sub es subb out lcall jecxz gs lret adc (bad) mov pop xor fsubrs sub mov or imul call adc mov insb inc push and leave lcall mov (bad) push sbb dec in add into mov (bad) bound lahf jl add sti stos in addr16 bound xor pop roll add add add enter loopne mov popf or and in cmp lods push cmp jmp mov inc hlt dec cmp sub inc stos mov enter adc ss push (bad) mov (bad) lret insl sub sbb inc jnp data16 mov or frstor in and mov pop call cmp dec out mov outsb hlt push and lock aas inc push pusha fcmovbe fsubr dec and mov sbb jne pop pop jnp cs cld sbb outsb jb cmc clc push pop pop inc add adc sahf add daa mov jp pushf outsl pop mov stos in jno daa mov imull sub cmp lods or lahf aad ret (bad) pop jp mov push lods adc mov cs addr16 inc xlat mov push mov ja pop mov xor push lds enter fistp or push andl dec pop push incb pushf leave lock sarb jg arpl xlat ffree bound inc add add add add push xchg xchg cmc lea lods pop aad fwait or jmp stos pop mov outsb fistpl mov mov inc add mov inc in movsb mov inc mov or pushf cld and pop xchg sti push loop aad inc outsl or jae cmp cltd and mov or adc sub inc push fmuls fadds js int mov fcomp movsb aad xchg je and push ss sbb adc mov add add add xchg push mov int mov out mov push cmp ljmp dec aaa sub pop adc jp adc out dec dec fcmovnbe mov push shl sbb dec pop fsubr xchg add or popl push fidiv and cli ret data16 push sub notb test mov iret outsb sahf adc sub inc je pop js ds xor loopne xor inc mov (bad) fwait ds call int3 xchg mov add outsb mov adc xchg je dec dec addb aad cmpl cmpsb jl in push adc dec xor and addr16 sub mov bound mov xchg xchg clc jnp push xchg jne shlb add add movsb out out add lahf mov dec pop or stc lock inc or push test xchg cmp or jne in sbb and mov and mov xor iret fstpl and cltd push (bad) pop add aaa pop stos or pop aad rorl popa movsb cmpsb loopne add (bad) mov sbbb (bad) xchg es cmp mov enter inc cmc cmc push adc jl xor ds mov arpl mov enter push xor movl mov and add sbb std (bad) (bad) ljmp out push bound std sbb (bad) jmp push iret or jbe and (bad) dec adc cli sbb (bad) (bad) dec inc or dec mov add add add cli out sarl jmp fcompl pop into mov fnop sub aam inc (bad) xchg mov cli pop or jne or out sub les mov vrcpss pop push mov jae loop (bad) loope movsl in or (bad) xchg sbb xchg les inc lcall add add insl inc pop nop cmpsb pop nop mov enter mov lahf cli ljmp pop hlt pusha insl (bad) (bad) xchg into int3 jg xchg mov adc push jo and inc dec (bad) ljmp add add sahf dec mov and testb test das dec fs (bad) insb cmp lahf jns and xchg cmp (bad) aaa lret fcoml cmp dec lret data16 mov inc pusha mov dec push push mov pop cmp jb mov lcall mov subl mov (bad) mov int mov (bad) test leave fwait fwait inc push xchg repnz mov pop mov fcomi dec xchg push mov rcrb mov mov add add add add push xchg aam lret push jle mov dec jmp pop fidivl out fucomi stc jmp aas cmp out pushf testl jnp jecxz sarb (bad) js mov in jb pop arpl enter add cmpsl test stos addr16 loop aaa pushf notl movsl jmp push jno sub in pop aas jne (bad) adc mov jne adc inc or fwait mov icebp icebp cmp adc fwait dec fdivrs mov sub xor add bound (bad) jo lods or xchg pop daa fcomps sbb jg repz imul pop inc (bad) cmp cld sbb jp add cmpsl dec inc test ds jecxz lock test adc (bad) cmpsl dec inc scas jb push adcl pop xchg ja mov sub and sbb xor mov outsb cmpsb lcall stos mov test push sbb push and inc in (bad) into out and add push pop popa jl mov test xor cmp mov aas push pop xchg dec push out movb pusha (bad) stos (bad) push in add int3 cld out fcomp and or pop inc outsl lock repz mov out inc arpl incb lds adc mov mov pop scas jae dec stc outsl or (bad) jecxz clc push jmp into pop outsb jmp addr16 push mov in inc dec mov les popa jle mov adc push scas sub add mov popf movsl inc ja or aad mov fcoms ficompl cmp (bad) xor mov lahf fwait (bad) pop in imul imul pop jne sbb or (bad) jecxz inc push and mov xchg dec clc mov or push dec dec push dec jbe cmpl sub push mov and or clc inc pop pop scas xor ljmp jp addr16 mov lea mov stos cmp add add add jno into xchg in cmp add xchg and insl add push xorl inc fwait pop jb fisubr ds adcl (bad) adc jl add cmpsl cmp scas dec mov mov cmp mov (bad) das xor sub lfs inc add cmc fstpl xchg fstps cwtl test shll mov sbb sbb adc cmp popf rcll mov push cmpl pop add add add (bad) leave lods mov mov inc sub enter jg xor pop mov cld dec jb xor rcl xacquire fisub stc popf std dec jmp fisttpl bound in popf cld push adc xchg xor xor cli leave jns sub in lahf mov roll enter sbb imulb push stos inc and dec fisttpl inc ret or pop nop insl cwtl pusha jnp int3 loopne es je inc and and xchg push movsb (bad) push das mov add add sub rorb mov pop test inc std xor pop sub ljmp and ljmp idivl (bad) lock jns test fcompl push nop call fisub sbb ja push lret jns add push sbb out es adc mov sti loope mov cmp push cmp xchg jg cmovge je fisttpll sahf cmp jnp ret inc pop sbb cld xchg addr16 xchg lods nop dec sbb or mov rcrb xor sarb loop mov pop xor mov jl add aaa pop es add and ficompl mov in inc aaa and jg xchg sti push fbld xor jae jmp nop cmp dec and sbb push aas jbe addl ss fidivr adc mov sbb scas inc ret adc aam dec dec lock add movb fadd or add test fnop mov or fidivr test jne add add add add std xorl xor jg mov stos xor mov mov xchg lret or testl fadd mul and and add hlt (bad) mov sahf and pop xor iret xor pop sub outsl notb test push test mov add adc pop add pop jbe nop mov cwtl mov ljmp adc and add push inc mov lods mov loopne sub mov add add add add ret add aad iret ret nop in psubusb or ficompl (bad) (bad) out loopne lret inc cmp xlat insl clc push inc dec xor rorb std inc enter dec aaa movsl (bad) or jle sub cmp pop std scas adc popf gs mov or inc mov pop jns lret mov nop sbb pop push insl push push and adc or in or das outsl mov repz out inc idivl lret and mov mov fisubl push das fildl add add dec repnz adc and (bad) push mov orb mov (bad) mov scas pop jecxz pop push xacquire jae pop scas push jns cmp cltd imul jae nop data16 cmp stos shlb dec hlt jne pusha jb inc data16 fdivs push rcrb stos dec cwtl dec cmc std test (bad) fdivrl pop (bad) aas lea jo (bad) cwtl sub sub dec dec pop xchg test pop ret lcall push in sub add add add jnp test jo sbb scas sub jnp insb mov jge iret add out add cli sub add push cwtl adc js shrl stos jae mov mov pop mov insb fiadd jnp dec rcrb jo cli jb dec and std push ret loopne lahf cmp or lods jmp or jb inc push xchg inc addl sbb mov pop fwait push jno fsts cmp xor cwtl (bad) test ret in call mov int xchg push stos pushw jnp jl add add inc lcall fstl push (bad) sahf jns subl fwait popf in fstpt xchg inc sbb dec push jno lea lahf imul test rclb add mov cmpsl loop or sub cltd sbb adc rorb test or dec test jb stos cmp pop inc and or cmp movsb (bad) arpl xchg xor or mov and sub dec addr16 bound nop sub incb (bad) (bad) push jno test test js cs or lods mov in pushf loope sbb add mov lods iret xor and ds lcall fidivl int3 cmp mov data16 and xchg clc xchg test fnstcw jmp or cmpsb je mov idivb pop popf jl sbb cmp xchg lret mov lret lds adc jecxz repnz hlt jge faddl jb jp push aam test add add add sbb push dec sub add mov or mov and xchg movsb xorl and xchg mov ja idiv ds and imul sahf mov int3 xchg (bad) arpl mov aam mov in mov cld stos lahf cltd sarl pusha or mov (bad) push imul inc outsb xor ret adc fst mov push popa mov cmp movsb mov fisubl shll xlat stos mov and mov gs xlat repz add add add movsb movsb jle outsl jp xor sbb push mov inc jae clc and mov mulb or xor stos roll insb imul mov cmp lret and gs ja cmp inc int cmp pushf dec out lret dec repz stos and mov pop lods cld lock js lahf ret rcrl call cmpsb and cmp jmp adc lds stos pop mov lret xchg mov cmp add add add adc push (bad) adc dec and iret cmpsb pop xchg pop jo int clc push dec mov sahf xchg cmp or dec xor ljmp mov (bad) arpl mov xor pusha pop (bad) sub in xchg lcall xchg xchg mov (bad) cmp mov rolb sub xchg mov das rcrl jns jle lcall push arpl sti and pop sbb iret cmp (bad) mov jo outsb xchg or jnp mov pop repnz add add add scas (bad) dec cmp push shl dec aas mov dec or dec addr16 dec or enter fidivl flds lods pusha lahf negl sub cmc adc scas mov leave cld hlt repz fld es lods xchg cmc jg outsb jns rcr clc shll adc ficomp mov cwtl lds jl or pop jo inc jbe std dec xchg test xchg test push jo mov xchg out jb (bad) outsl stos imul push pop fnstsw jns fild add add mov imul fildl dec jne clc adc jns vmread std mov add out movsb loope shlb mov test xor xchg es mov lret bound addr16 mov lahf push vmovlps fs andb sbb incb out call aaa shrb xor mov repz add xchg inc push dec daa cmc fildl mov dec mov push xor ljmp mov push int3 jb sti lcall add add inc push jb (bad) adc arpl ret lds ret addr16 pand test pop insl js outsb add (bad) sbbl stos repz shll jbe dec repz mov nop sub movsl rorl pop mov lahf inc clc (bad) jp and sub icebp jbe jl jecxz cli daa in xchg add pop scas fwait pop pop jne dec test jbe jae loopne sbb stos ret sub icebp int3 xchg into les lds mov xchg mov adc mov add add ljmp xor sub adc pop mov fmuls cmp dec cltd sbb test pop ret bound fldenv pop xor cmpsl mov sbbl push xchg lcall fildll jg cwtl push fnsave cmpsw xchg xchg xchg es aam je stos movsl jmp jecxz movsb jno fcoms pop sbb ja scas loop std push mov stos sbb push jge inc jb push std push jne push cli fxam pusha lods cwtl aad cwtl jno add push adc enter add add add add fldcw jle pop call mov pop adc sbb fldt das push and xchg inc fiadd daa mov mov jno xor shrl or ficompl push repz jae dec sarl adc xor clc xchg push push xor ds loope jle cmp xchg hlt ljmp fucomi xor fnsave into mov lahf scas dec in cwtl jl push fstpl and inc (bad) js mov mov lcall add add add lods sbb xchg or iret sbb xchg aam push pop insb or dec into and sbb fmull push jbe cmp in clc xor lret jbe aam loope mov pop jbe cli cmpsl xchg jg negb das push enter sbb (bad) push out (bad) sarb jno xor pushf out mov jae dec hlt mov push das xchg and mov mov jg (bad) daa inc mov enter repz das jo outsb testl outsl fwait insb mov add decb stos stos arpl lcall ja dec push (bad) outsb js mov ret sub push (bad) mov jne inc xchg xor ds insl outsb icebp arpl mov xchg fnstsw stc mov mov pusha fsubp lret inc sub test sahf movsl in dec sub jp mov mov inc sub adc das jo add or dec pop ss push popa pop popfw fsubrs movsl sbb cmp cmpsl bsf dec iret cmp ret cld mov add mov jecxz xor push sbb jb add sub shlb fcmovb inc mov cld ret ret or inc mov xchg rolb add ret std adc addr16 inc cmp setns mov inc iret cmp or push and jno pop inc add and mov lret xor in mov lcall test inc aas and arpl mov into popa adc or inc outsb and bound les psubusw insl dec cmp xchg stc add add add mov lret sahf clc ret fst cs sbb jp daa test loop jle cmpsl insl jmp enter push add sub fildl je jns dec sbbl mov pop cmc aaa cld xchg out xchg test pop neg mov popa popa add lds insl xor xlat movsb inc (bad) imul push xchg roll sbb addr16 hlt imul mov in xchg pop sbb test sarb cmp pusha pop rclb add add push pop adc xchg jnp sbb int3 pop aas xor lds xchg or mov rcll jecxz pop sbb outsl fwait push lret xchg xchg lea mov lods rclb and nop fcmovbe test inc loopne mov rol dec xchg scas pushl mov fcmovbe and (bad) jns,pt cwtl cli fstl int cmp mov cmp out int mov inc das mov push cmc pop xchg lcall (bad) jecxz pusha insb pop cmpsb xchg inc add add add jge,pt add cmp les out or jbe adc push orl jl repnz dec xchg dec add mov jbe cwtl xlat push add cmpsl aas xchg dec jp stos ss cmc inc mov and and cmpsb push xchg xchg jl in jmp aad mov jle (bad) into test jns cmp add xor lret jle adc fcomps mov lret and mov adc dec lock mov xchg mov inc int mov xchg jb insb or (bad) jnp orb lret aas mov lods sbb js fistl xchg stos sbb cmpb inc mov mov jmp or xchg or pusha mov fucompp jb loopne fstpt das popf lock jnp pop ret cld in cmpsl pushf xchg mov inc movsb and ljmp push (bad) or xchg stc (bad) adc mov aad inc pop xchg std xor pop (bad) lods fwait lods pop cmpsb mov inc cwtl lods xchg add xorl daa (bad) cld jmp not mov add add add pop pop push and rcrl mov dec in into loopne out outsb push or (bad) rolb out mov mov imull mov in roll xchg aam dec jp sbb or in push adc repz and mov stc mov aad dec mov out xchg push mov repz (bad) leave mov mov mov xchg mov adc sbb inc cld ljmp mov lret test std cmp jb sbb lock xchg sbb dec enter ss sarb stc lret pop adc scas out inc or aad mov lds inc aam movsl pusha xlat insb dec dec lret popf inc fs stos test push sbb inc out js cmp and mov lods dec test pusha imul adc add mov mov push aam xchg aaa fcmovbe xchg sahf push dec mov ret and jno inc and adc int cld xor inc dec add add add add leave mov lock (bad) xorl cmpsb mov fsubrp and (bad) jmp aad mov shrl repnz pop jg push cwtl sub cmpsb xchg (bad) and cmp jge inc (bad) leave arpl (bad) xor jge pop cmp ds es jne cmp fsubr inc in inc cmp jl popf shlb in jb jb sbb jno dec cs div test sub in pop push or inc fnsave push xchg mov pop pop pushf xlat aaa dec mov aas xchg fcmovb add add add add pusha dec and fwait adc std cmp and add mov (bad) cmp sbb mov insb cmp lods adc xchg inc push cld icebp movsl cltd mov div aam sub sbb jmp stos pop ljmp pop arpl stc leave sbb fdiv xor dec in mov inc inc icebp out push ret inc sarb lea rolb xchg ret pop lret lods mov fldt mov pop inc repz cmp add add add sub add inc sub xchg xchg xchg ds into test cwtl sub outsl adc out mov add jmp popf ror xlat (bad) js bound or (bad) jne inc push lahf leave punpcklwd in dec dec out loop in fldcw orl adc (bad) xor pop cmp hlt std xor scas jp addr16 into jg sbb sub add jae push les aaa and push mov stos (bad) popf cmp test cmp daa ss push jo mov cmpsb mov cli inc jle dec mov aaa cmp xor xchg test les movsl xor (bad) lock jno sub js aam cmp dec push mov (bad) sub shlb sbb push ret (bad) jne mov sbb imul inc jmp imul adc push add mov fistpll or (bad) (bad) daa add or outsl lret outsl lock in (bad) std int xchg cmpb push xchg outsb dec aas mov mov cld cmpsl ss dec xor mov or dec mov add add add lds (bad) out pop or sbb icebp xchg add sbb push mov mov push mov negl xor or imul cmp test outsb mov fdivr cld and fucomp pop addr16 mov jle inc fwait add mov jns push add xor jne cwtl icebp addr16 or jbe cwtl dec loop pop sbb fmulp loop cmp cmpsl xchg xor mov sub cs loope push mov mov aaa pop subl add add add sub test push xchg fs sub dec sub pushf insb sbb movsl xor mov pop jns sbb jle insb dec jnp loop mov sbb ljmp add out inc jae fs push jmp push stos inc jp aam mov push sub pusha xor lcall lahf or lcall jge lcall cmpsb adc pop push add in cmp push xor or popf pushf pop mov cmp xor add add add add aad pop hlt adc mov repz test jmp push fldenv ja inc addl movsb push pop cmp lahf (bad) pop dec jl ja dec adc sub mov push mov xchg in out gs stos (bad) xor xor test mov aas jle mov pop or xchg mov adc imul adc cmp push sarl shll lahf xchg mov jge,pt in (bad) adc lds sti jne xchg or xor add add add add push inc adc repnz or mov (bad) fisubl clc out push jbe sbb inc fldpi mov mov hlt cltd inc mov jl adc sub jb ret rcrb inc fnstcw xchg sbb push and push xlat insl stc add lret cmp sub ret loop sub xor or movsb adc sbb lret lret xchg in add stc pushf imul add add add fisub sahf pop mov (bad) add (bad) in and sbb popf jns xchg adc clc cmpsb ret jns hlt lahf in and fmuls adc mov push mov pop mov adc es jno xor xchg decl (bad) (bad) push lahf push xchg ds pop shll cld aam imul cmp adc stos add push sub pushf mov (bad) pushl sub dec fpatan leave pop push mov jecxz lods addr16 hlt sbb add add add test dec fildll and jne idivl pop xchg push out stos ss xchg dec ret push repnz enter pusha adc clc sub or sub xor popf lret xor inc sub sti jle lahf and cltd xchg int3 into outsb out repz add add mov ljmp push (bad) xchg inc ds mov inc xorl add gs adc lret lods mov cmp cs dec mov cli es add add add or add cmpsb sbb add xor mov inc test lcall add jnp insl fsubs jle movsb mov and adc cmc adc cmp xchg pushf (bad) ja shl nop outsb sbb inc int3 scas push frstor sub cmp in push adc fcompl and icebp stos mov jae in push leave fsubs mov jge mov mov mov movsb mov stos arpl cmpsb cltd or mov push test xchg jle ret push mov fs je sbb lock and inc dec (bad) xor movsb inc in pop jge pop sbb aam mov loopne mov xchg jbe mov insb mov pop (bad) loopne negl popf addr16 push ficom inc mov ljmp bound sbb sbb sbbl mov scas jnp fdivrl adc mov sbb sbbl inc mov push cltd leave and xchg pop add add add add jmp sub sub jg outsl adc inc hlt sbb daa pusha aam or jae in (bad) mov mov bound fsubrp mov fwait inc mov js dec test add ret inc lds pop inc push out xor mov (bad) mov (bad) jecxz mov es pusha add (bad) pop pusha aam daa sbbb sub loop add jo subl rcl and adc roll js ljmp xchg push cltd sbb xlat mov add add add add mov dec fstpt mov iret bound test cmp adc outsl mov mov pop pop cmpsl push or fimul mov fadds std and or sti test pusha jl loope dec xchg inc je adc jb xchg add (bad) insb xchg pop mov adc push inc sbb xchg stc jno mov repz faddl iret adc (bad) jne cwtl or out push pop dec negl repz or fnsave or add add negl add xchg out or sub push stos data16 fwait xchg lock pop cmc pusha cmp and test call hlt xor cwtl inc add (bad) pop add and dec push or repz cld mov sbb fwait dec lds mov and cltd loopne stos or mov or push (bad) stos pushf imul sub push outsl or xchg fxch scas mov gs mov cmp xor add add add (bad) mov adc scas scas mov outsl cmp loop mov lock cmp sti jecxz scas sbb (bad) cmpsb (bad) jg and out lods xchg rcll sbb rorl in and cmp mov add dec jb inc test cltd (bad) jno mov mov in xchg xor (bad) jbe jl xchg jecxz imul jmp scas push inc sub mov dec std mov es in jl or mov add add std mov dec mov and inc xor movsb sbb scas ret loopne outsl adc in add in xor xchg sub out adc inc mov data16 (bad) ss jecxz fidiv cmpsb outsl into rclb or imul aaa adc pusha scas mov adc loopne loope fwait shrd inc incl push ja dec test lods clc lea scas dec sahf sahf call mov bound pop addr16 dec rcrl add add add das inc insb incb cli bound mov lret stos push sub fcomp scas repz sub lcall stc loopne repnz test jg fdivrs cmpsl fild lock push pop cli std lret adc jmp jmp dec xor cli mov fcomps in test sub ret (bad) inc jecxz inc cmp jmp cltd and mov sahf iret ret sbb (bad) test lods int jnp fnstsw in (bad) adc mov dec pop icebp push sti incb add add iret dec jbe ja jp mov iret add in xchg add aaa mov test and ror xrelease dec xchg aaa pop sub rol in leave repz ja int lahf jns test scas psllq aam inc das xchg scas movsl out adc repz das sub ljmp test lods pop fidivl xchg mov inc and popa mov lods inc dec daa aam cmc add jbe adc (bad) or imul sahf mov jb cld pop imul add add popa jbe jp inc ret test or aas gs or xor out sbb sbb cli stos mov mov sbb pop scas pop push push dec jle push sbb dec mov push xchg fnstenv and stc or and cmp cmp jo jns mov pop test mov jb sahf cmc push adc inc cmp push cmp xor push mov cmpsl xchg sub (bad) stos (bad) sbb enter push repnz sub add add add icebp jge mov ficoml into xor fisubr js (bad) mov out lock fistl and pop or jmp shrb jg and inc jns (bad) repz cmpsl push cmc loopne cmpsb mov aas sbb pop xchg (bad) in inc fwait jg adc jp rorl mov rolb mov sbb dec pushf xchg jb xor jo jae sbb leave in fwait arpl lods imul fdivs xchg mul (bad) sub add ds add add add (bad) divb fsubrl mov add dec cs std push xchg aad or aas ret sahf add mov gs push js mov int3 mov icebp loopne push cli movq scas leave mov test das stos sbb nop mov mov mov jb mov sbb (bad) fdivr pop jne xor or int3 ja imul ficompl fldl shld cltd cmp arpl cmp leave fwait arpl pop pop add add add add push mov imul popa stc jl ret cmpsb jae lret mov xchg or xor int jp mov pop adc push or xchg inc adc outsb mov inc cmpsb or mov scas mov fisttpl mov or out lahf fcmovb test fisttp cltd imul adc repz cmc sub btr jmp push cmpsb push enter add out sub or cli cli lock xor ja sub lret pop pop loop incl sub aas jnp add add add test push ljmp or loope mov aas xchg add pop outsb sub jnp addl test in es ja je cld xchg pop jns jg into mov sbb in bound movsb test jmp dec movsb test cmp sub jae pushf mov jb shrb mov cmc ss add push inc adc inc and lds sahf mov pop jge roll gs fimul mov cmc and cmp (bad) mov add movsl clc mov jb stc outsl int3 aas test lret clc xor xor (bad) popa sti jl imul pop pusha and cld and push jb pushf push cld mov fistl and xor subb jns push xchg pop ret pop push push dec and xor sbb jo clc cmp mov push xchg jp push mov bound add es inc adc fbstp data16 sub sbb xchg or or sub inc mov loop pop and add add dec xchg leave nop dec inc nop fldt stos inc lods mov mov sbb xor sub pusha into inc repz sti push sub mov rcr add sub das lea sbb jge push mov add mov cmpsb sub mov pusha jnp ss sbb sbb dec and sub jns xor ret imull pop jnp jecxz daa sub adc or sar pop and or incb in pop or add add lock gs pop cs lds xor aad mov out xchg rcll cmp sbb scas insb jnp lods rcll popf inc movsl push jp pop cmp stos ss xor mov int or cmp push and loopne mov pop jo push gs pusha iret lahf mov cwtl push pushf shrb adc or popf cmpsl mov in test std mov pop mov jns cld je clc loop dec test mov or sbb imul mov add add pop jnp outsb push push rorb sub sub lds cs pop pop les inc test popl sub push scas push scas dec outsb into in icebp inc sbb push (bad) ds pop aam dec xchg xor xchg xor lods mov shl sub mov leave dec add lea (bad) int3 or jg dec ljmp fmulp mov aad adc in inc sbb pop xchg and scas call lds pop inc cmc out adc test pusha (bad) adc mov es outsl cmp fildll cmpsl rcrb out scas adcb imul hlt sbbl insb and jb dec jmp mov test in fisttpll cmp inc mov mov out cmpsl idivl out (bad) adc xchg sub push mov cmpsl (bad) neg mov fwait cmp xchg lret sarb clc push jns fwait pop mov rcll mov sbb movsb xor std repnz cltd leave jnp adc pop mov add add or mov insb arpl mov mov loop xlat (bad) sarl nop subb js fcom fldt push cwtl cld jo pop flds ret dec inc das xor or push xlat inc (bad) sahf lods adc xchg shl sarl dec mov adc mov pop jnp stc pop push sar movsb mov sub pop cwtl idivb pop loope popa pop fsubrs jno loope shl inc mov sarb cmp pop cmpsb cmp xor dec inc loope xor adc jae and sub loop pop or (bad) sahf dec mov push and int and inc add stos jmp sub or fistpl mov fist ljmp mov lcall in xor mov cli mov aas pusha and mov int or cwtl or or cs ret and jmp xchg add mov in aad sub orl pusha outsb add add add icebp lret bound jo fidivrl jo push ret loop xlat inc push ljmp jno mov test in jbe lods pop cmp mov inc jecxz (bad) hlt add ret adc test mov loopne imul and dec dec and rorb repnz push push mov cld outsl repz pop (bad) hlt out mov cmp clc pop and adc mov mov pop and jmp or aam call cltd fbstp add add fisubrl push (bad) incb sub jg sub lods rcr out dec addl dec mov sub pop adc notb ljmp sbb xchg ljmp or mov xor mov test mov push jp pop xchg and or int mov clc fwait popf movb add inc inc cmp fsubs ss mov inc sub dec cmovbe mov insl lret gs jae aad cmp add add add jne mov push icebp test pop xchg hlt out jnp sub es nop xchg push pop ror daa push and cmp pop sti mov push mov pop and lea scas add mov cwtl pop pop (bad) loop xchg adc fucomi fnsave mov popa (bad) idiv cmc dec pop in xchg mov test andl adc test mov insl push inc rorb and mov pusha orb aam into shrl das aam adc add pop jno sub xchg push jae sub xor inc addr16 (bad) fiaddl jo (bad) outsl out les mov or sub xchg dec cmp shr mov mov imul mov pop jl mov imulb mov lea lea dec iret imul fs dec (bad) xlat inc inc xchg add jnp xor ds jnp mov mov push inc idiv xorl add add add sbb xor insb inc inc (bad) mov nop test insl push outsb addr16 test popa cld adc ret in inc pop push nop repnz push pop sbb xchg pop inc scas cwtl cmp scas mov cmp push or scas inc cmp imul inc imul mov push xchg fdivr jl hlt push lock ret iret jne add sub pop jo into mov mov aas imul aaa jecxz rcl jae mov int in jp sti push add dec push push push out inc add add add pop lret jmp fdivs sub lods jle (bad) js push pop shlb mov lods cmp adc fcmovnb outsl and mov cmc dec mov and xchg lahf lret cmp add sub aad out movsl inc icebp test push jp (bad) fcmovb insl push in pop lods loop jge or or sub test or in xchg xor sbb xlat sahf sbb pop setge mov fisttpl test lret insb pop adc jo jg mov inc iret add add add ss arpl xchg mov lea jns pop push sub pop fsubrs push fdivp iret or xchg adc pop in cmp dec mov hlt cs sub nop dec dec xor shr sub mov inc xor lret pmulhuw jnp jns xlat add push sub and fwait mov clc rcll insb cmpsl insb movsb jno xor movsb or pop pop add dec out stc sub mov xchg sbb lret js cmp clc sub mov jo pop add add add les mov clc cmpsb sub mov pushf add lds mov sub jp jb jne into mov sub jae jmp in mov or lahf jecxz or push fildll or es nop xor ja xchg cmp fiaddl adc out js fstpt stos aas mov dec push jns jecxz and movsl cmp jns ljmp scas mov push xchg lret scas loope xchg iret iret jg lret add xchg cmpsb mov xchg fs into fidivrl fstps sub xor pop jg icebp hlt sbb xchg fwait xor and pop clc arpl mov and inc dec addl out push ds pop mov mov jae cmp in mov ret clc mov (bad) leave lods pop (bad) jae or or mov cmc add jl into (bad) fxch jnp or dec or pop popa mov mov mov jg mov add add in scas cmpsl lods pop mov xchg push cmp shll pop test mov aam leave inc sahf ret test hlt movsb sbb xor push cltd jmp inc cmpl (bad) in test bound int3 fucomp cmc inc or push fisubl cmp insb sub xor cmpsb inc inc push mov xchg dec lods mov sbb jb aas adc and cld cmpsl fwait lock and lahf jge (bad) enter js xchg adc and in jns push mov add add add add leave aas fld mov cmp inc sub adc ja ja adc notl push ds cmp add stc in cmpps and rep mov adc xchg mov nop test add mov jle mov adc dec dec ret sbb and dec mov inc ss orb mov scas (bad) outsb push add fnsave nop xchg roll roll sbb negl andb rorl dec pop xchg out jl adc pop inc in push jnp mov or sbb cltd and adcl mov mov aas adcl pop xor sub cmp inc push cmp in daa lds or repnz add push imul pop fwait es ficomp add push ds enter in pushl inc xor xor daa add daa jmp inc rclb inc mov add and mov and or (bad) notb aas mov fcmovne andl mov ljmp add sub fmuls inc lret popf ljmp repnz clc inc sbb bound call js mov add cmpsl fstpl repz enter add outsb adc inc dec sbb outsb xor xchg repnz aas test adc insl add jl (bad) xlat insl ja ljmp adc add add dec add inc mov sub lods pop iret sbb or sbbl jb loope push loop sub sbb mov ret and jmp xchg bound pop pop add mov add adc cs jbe inc fldl dec insl dec ss cli sub (bad) ss pop shr cli imul mov into lock mov insb sbb repnz dec pop (bad) jmp test add add add fistpl std sub mov dec pop (bad) mov xchg add ljmp in lods in jg insb imul xchg mov sbb (bad) cmp pop in cmc inc and out adc bound mov mov mov cmp cmpsb loop repnz push sarb pop xorl dec imul jmp adc xchg jne loope sar mov ret push je lret xchg clc pop pop scas sbb xchg rorl (bad) xor pusha outsl out dec pop gs or shrl and add add add push rorl loop mov sub (bad) out cmp ljmp dec test push jmp shr xchg dec addr16 mov fisttp pop adc popf push mov mov pop stos out mov loope adc push fst dec mov dec lcall (bad) lret lcall (bad) pusha movsl sub mov pop and imul out iret jg push xchg stos out jle mov pop or fidiv jne lcall fnstcw dec pop hlt mov adc inc aaa imull fnstenv ret add (bad) daa fxch mov loopne scas (bad) mov sbb sbb mov mov je mov stc cs rorl mov jns pop sub iret mov jne jl loop xchg subl mov outsb movb sbb ja jb mov pop call jg pop fadds fcoms stos inc jl mov mov jno loopnew sbb jp cmpsb sbb adc add std scas xor cmp test mov add add add add (bad) out or in or push xchg test adc lods mov dec add xchg lock jnp mov xchg dec xchg fistpll sub sbb jg or dec mov push in rcr mov insl and insb add je fldl sti add mov call xchg roll lcall pusha cmc mov (bad) mov not xor xor xchg pop xor (bad) jg push insl stos fst mov test pop or xchg mov or pop push je sub jp and mov pop out pop dec xchg int add cmp in sub mov cmp daa cli dec inc xchg sbb mov sub imul ret insb std inc sub insb lds insb std leave lret sub pop (bad) xor nop xor and es sub xor adc dec push jbe sahf cwtl popf push fdivs add fwait aas sub pop pop cmp pushf mov inc je mov ror outsl mov add add mov jns cmp jecxz les mov xchg push or add sub pop test mov mov ret fisubl xchg fdivrp add pop push jg cmpsb lret dec mov or inc rcll mov pop gs dec pop inc dec mov (bad) jle sbb inc jo xchg (bad) mov sub inc dec orb js inc xchg pop (bad) testl loopne les orl xlat aas sbb pop jp stos or add add add xchg cmp outsl mov das (bad) add xchg ja (bad) mov mov lret sub adc xchg std (bad) push push mov int (bad) push adc popa or sub adc xchg sbb lret sub pop cmc jp pop fs iret xor lea inc push inc nop mov jb imul push ret mov dec and std shrb cld push int ja and pop loopne mov stc xchg loopne (bad) sbb or fimul add add add jo and xchg or (bad) cmpsb in out in dec lahf fs shrb (bad) test (bad) fdivl clc imul mov lock lret test pop pop insb lret hlt mov iret inc repnz out sub push (bad) fistl or ret adc sub ds push hlt adc pop movsb push mov (bad) push jle xchg loopne jg jecxz,pt in daa and mov (bad) (bad) leave dec imul add add add and dec mov mov arpl mov jo xchg jmp mov mov fwait pop sbbl mov pop add jmp pop (bad) mov movsl xchg cmpsl sub fwait xchg ljmp imul jle movsb jg loop fldenv xchg sbb jno movsl dec fidivl les push sub out sub cmp inc xchg inc fisubr mov add push or fnstcw lret push clc enter xor mov scas bnd fldl add add rorb sub jb jmp jbe mov insb ss lcall cltd xchg pop cmc push add imul dec dec (bad) lret xchg xchg (bad) (bad) lahf stc sbb sbb mov stos sub cmp pushf subl lock mov lret test and jle and and fist icebp and mov dec adc outsb out roll inc jbe add in bound pop and add add add rorl mov lods insl push add inc and daa adc pop inc inc push jmp xchg or xchg call cmpsb stc stos ret pop sub scas mov dec jg mov icebp pop push dec ja cmp xchg jbe push xor pop (bad) or jge pop push call inc movsb or sub mov (bad) arpl inc xchg xor mov xchg fcmovnu inc lock rorb mov imul stos cmp xchg call mov push add add add jg or popf shrb fldl2e xor (bad) data16 insb (bad) (bad) or subl mov shrb je xchg data16 inc rorl enter mov loopne das stos xchg and dec and repnz outsl orl inc loope iret call icebp das ss or push xchg push jmp jmp cltd insl or cmpsl pop dec fnsave call sbb in lret sbb jae xor push inc pop test jge xor push xlat fbstp iret sub xchg pop jnp stc dec (bad) mov sar add mov or xor push or (bad) fcoms fcomp pop stos mov das push in cwtl ret jmp adcl aas bound xor repnz inc pop daa out in add daa lea fs (bad) cmp fisubrl stos iret (bad) push clc lahf xchg imul mov in out pop loop (bad) popa dec cmpl jle (bad) mov xlat int ret push inc sar lret add add add clc mov les pop pop mov xor jns gs pop mov movsl mov rorl in push pop gs sti iret loope imul xor inc jns ljmp jp xchg mov mov mov imul in ficoml lock or xor pop in (bad) adc dec addr16 shrb inc imul stc call lret push fnstsw in ror mov (bad) fisubr jecxz and mov js int3 cld jae popf popf ja dec mov out inc seta and int3 cwtl xchg xor test push stos push test imul inc imul jp cmp (bad) scas sub sbb icebp pop xor add ljmp jmp std sbb js (bad) hlt mov addr16 outsb bound cs movsl cmp jmp mov and push jne out xchg lock mov mov xchg mov pop mov repnz scas jmp inc pop cwtl sub sub xor add add add ljmp aad call mov fidiv mov imul inc repz test sarl lret rorl pop shll rorb or lds fisttpll jmp test out adc loope push jp lahf mov adc call stc push cmp sbb aas pop stos mov jge mov mov push adc leave sbb sub adc loope cltd xor push or mov or inc add add add dec dec sbb or movsl adc stos adc fisub call andl bound mov jae push sahf pop test or das jne fstp mov leave xor lods clc rorb mov push mov scas mov out and enter xchg loope push xor add lds inc iret mov lahf stos dec mov aam movl aam mov test push add mov shrl cmp add add pusha ljmp iret leave dec data16 sbb pop aad push push je sarb lret sbb (bad) dec mov and insb xchg lahf insb icebp push ffree adc or mov jae or fsubs fistp mov inc pop add test repz popa push cwtl pushf push or ret ret mov leave aas pop mov into dec pop into and dec push pusha data16 sub aaa jne,pt xor (bad) and sub xchg jp enter mov je out mov iret aad adc mov add and mov popf or (bad) mov mov outsl popa les push js mov jmp test xor shlb pushf insb jno cli jl lock adc dec inc add aad and loope lahf inc inc mov sbb rcl mov cs int js push aas push rorl daa mov rcll insb gs cmp (bad) mov (bad) mov xchg inc mov cmp push xchg cmp clc vmread pushl pop inc adc mov xchg mov xchg (bad) xlat jae add sub push (bad) (bad) in test mov in call jb inc cmp jns out mov xor ficom dec push (bad) out popf push popf mov xchg sti sub or int3 data16 andl lods jns pop inc movsb jno dec jl movb shrb lds sbb fwait xchg (bad) pop xor fstl mov add cmpsl xchg pusha enter repnz cmpsl xor mov add add dec or out adc push cld xchg lods inc mov ret xchg mov sbb mov movsl inc push (bad) or or scas rclb sbb ljmp stc ret pop addr16 push pop push pop rol adc jl cmp cmp adc pushf or jnp inc aad inc push test out aas lds sub or xlat daa pop inc jns sti push xor mov aad mov loope cltd sti push fs mov or add add add mov mov in shrb test scas sahf or or dec (bad) pusha test rcl mov xchg pushf loope sub repz (bad) dec loopne out les sbb push hlt mov fistpll jle mov pop aaa push xchg or cs mov inc xorb div pop daa fucom lret push dec lahf push aaa pop mov inc xor fwait jae lods sbb pmulhuw mov sub ds dec xchg insl test (bad) sbb sahf jmp repz adc jmp stc data16 add add cmp aaa add xor into jecxz test daa (bad) (bad) sbb fstp mov sahf cwtl add and out je fisttp push mov clc (bad) jns clc xor call push pushf mov inc xchg pop xor or jns mov es movsb push insb add ret movsl push gs fiaddl pop push pop cmp addr16 or popf addr16 jp (bad) je pushf jl xor iret or fld1 repz hlt insb mov lret popa loopne mov jle lods or aad mov add add add push leave test stos stos push cmc shlb add sub mov jns cmp shrl out in lcall adc xchg std xor (bad) out orl push xor leave mov jl repnz int mov scas inc add icebp ret pop sbbl adc ret sub cmpsb hlt push insl aaa repnz call jb push arpl jb lret fninit dec mov xor repz dec fsub shrb add add add xor push xlat mov aad or add arpl gs lods mov inc (bad) jmp mov (bad) sbb push inc push cmp mov (bad) xor mov addb and and divl push push xor aaa push ds fwait push mov mov lods pop cmp push push ds xor in movsl repz xor in es out mov sbb ffreep call mov inc aaa xor (bad) sbb idivb subb lret add add add add cmp mov sub subb enter addr16 es adc adc and (bad) daa sbb mov jg cmp aam fldenv xchg mov dec (bad) mov pop dec pop adc fcomi jge std cltd sbb lods iret mov leave mov inc pop lret mov mov add movl in das mov and xchg jg ret stos fisubr xchg imul mov aaa aam inc ss pusha imulb in mov adc add add mov test sbb mov out cmp (bad) incb xchg and inc andl xchg sbb int adc mov xor inc lock xchg add cltd xor add and dec (bad) rcrl rcrb call push and jno in loop lahf in popf jmp push jmp outsl push aad push insb out in ljmp pop pop gs popf sbb or add add add add test inc insb inc add sub adc loop or jle xchg cmp ja aas mov loope jle andb imul cltd add stos fisub cmpsl xchg testl and js pop inc push or inc flds ret nop jns ret xchg stc orl fstps lock xchg das jbe and mov mov fwait mov cwtl stc pushf mov dec jns in jnp ret jno decb js mov pop xorl sti add push pop out test jno loope lods mov nop cwtl cmpl sbb cmc jge xor fistpll or das inc push cli in xor lret sbb jge,pn loope andb cmp stc sbb aaa stos sbb xchg jb or pop fwait xor and xchg or dec jo inc pop gs bnd stos mov stos adc sysenter (bad) fild jns add mov stos lret js fild mov rcll gs mov add add add add sti std adc dec push mov push int pop push sbb mov lcall fstl pushf ret es sbb push push sub pop enter lock xchg mov repnz lods adc in mov test mov aas mov mov mov xor mov xor or fsts mov push dec xor je dec dec or cld push pop fwait xchg jecxz push ss add adc jp xchg test add add add scas in sbb sub test sbb (bad) cmp repz sar mov mov imul pop mov outsl adc cmp mov lahf aam int3 jle es scas adc call xor movsb pop add call push imul sub (bad) js mov loop stc pop sub sbbl das das dec sub call icebp inc (bad) enter (bad) rorb test mov cmpsl mov movsb mov fbld clc push test or cmp cmpsl pop lcall xchg bound pop addl lret in aas sub jl insl xor hlt push sub arpl je add push inc cwtl inc shll mov aad xchg popa aaa mov mov add inc lret push data16 push out scas bound xchg scas cmp adc xor xor pop addr16 push cmp lock sbb inc into sub notl and mov rclb add arpl lds mov inc pop jmp mov lcall insb ljmp push dec pop add mov xchg icebp sub xlat xchg add xchg xor addr16 dec jb add jle js sub movsl jae mov std jl rcr mov (bad) pop out xor mov xchg sar loop add adc movsb mov out test ss lcall incl push fsub xor xchg jl out mov jo xor add add push (bad) andb sub xchg insl dec stos fdivs movsb sbb stos add mov mov mov mov push gs sbb push repnz push movsl popf (bad) jge pop mov cmp jmp das insb or xlat data16 lea mov (bad) add push jmp adc and outsb xchg popa testb dec (bad) jae sub shlb mov add dec pop scas imul xchg and fucom lea ret inc stos cmp add add add add pop add jle xchg popf int pop aas leave pop sbb pop insb lods mov ret sbb pushf lea sbb rcrb mov push movb cld xlat (bad) loop xor mov add pop xorl (bad) arpl pop out mov cmc test jge xor push cmp inc sbb jnp mov or adc aad das rorb flds dec lock stos dec pushl sub dec (bad) aam add add add cmp mov sbb xchg xchg fnstsw jmp cmp xchg faddl mov (bad) jno icebp cmp push jbe sahf je arpl cmp cltd (bad) clc push xchg sub ljmp ss mov pop or sbbl cli add sbb fs and jge jne push call jnp xor dec mov adc in adc ds es stc or xlat int mov sub imul add add add jecxz repz sub ljmp shr icebp push lods (bad) enter xchg pop divl movsb cmc stos mov mov or sbb loopne xchg xchg ror insb dec push daa es andl jno mov pop or add (bad) call xchg aad add sbb inc cltd mov inc mov sub call mov cmp lods mov (bad) in push std sbb aad mov bound test sub mov scas xor repnz (bad) push aam (bad) xlat and add add add fs xchg cmpsl clc xor mov out sub imul dec inc cmp adc test dec sti add push in cs loopne mov add xchg pop movsl inc inc push les push jmp imul pop int3 sbb (bad) and in adc faddl cmc sarb mov pop movsl push fldt (bad) loopne and les mov cmp stc popf fwait aam sahf cli xor sahf nop push scas arpl lea dec xchg push pop cmp add add add mov lock adc mov mov test adc (bad) sbb mov cli cmc cli ret test (bad) rcrl sub jbe inc and fisub lret mov cmp or inc into mulb insb dec adc out pop xchg jl pop jno cld loope xchg aad cmc add fidiv push xchg cmp dec inc je add or pop cmpsl and (bad) loop jge outsb lcall lcall or xchg loopne mov push inc rcr fsubrs enter inc mov rclb pop ret stos scas in inc xchg cwtl clc mov aaa adc nop (bad) das adc lods in xchg in into push mov add (bad) repz dec xor outsb loopne adc mov pushf cmpsl or and pop adc aaa jo hlt or mov pop test jbe sbb push adc push cltd mull mov popl popl fsubrl sub int3 pop stos lods inc scas mov add add add dec repnz add jl into mov pop sub xchg fs jbe aaa jg aad ss adc lods fidivrl or xchg inc add in mov popf mov (bad) mov mov pop xchg cld inc (bad) xchg into scas or mov (bad) data16 dec pop dec nop cs xor push cmp sbb out add xor cmpsl popa sub call push in xchg cmp sbb sbb sahf ss sbb mov in add add add add enter hlt add cmp leave jae sub mov or pop imul dec in lea std outsl push sarl mov lret jg xlat lret cmc jne imul aas loop std cwtl pop push in cwtl xchg int3 mov lods cmp mov mov je movsb scas mov xlat cmp pop test and mov insl xchg xchg daa mov rol xchg cmp dec push ds mov movsb push sbb dec or lahf aad xor mov mov sbb stos adc push add add add shl in call add push in in dec (bad) jae sbb lret lahf shll cmp mov scas test cmp cwtl sub xor out sub bound aaa (bad) jb xor mov dec shr jl pop or cmp pop mov push mov popa sbb (bad) lret call pop push mov mov cld push (bad) cmp push push out xor sbb cmc in push insb (bad) bound adc cld dec loope adcl es lahf mov add add add push sbb dec gs sub icebp aas add in ret divb fistpl int3 daa lods data16 adc (bad) insb mov lods adc fstl dec xchg xlat and sbb mov xchg dec cltd cmp test or dec popa les mov cmp adc sub xchg cmpsl (bad) ror cmpsl mov loope shll push add icebp lock push push out test pop rcrb fidivr add (bad) rclb jl jbe cltd in iret (bad) xchg add sbb pop adc pop in or leave daa xlat popf jo,pn and jmp mov jno fbstp mov sbb mov dec push sahf pop cltd mov or call or outsl ss sbb and loop or sub push xchg jnp int3 pop push sub jbe inc pop adc subl in push movsb ret fistpll ret int pop mov add aad cmp dec insb (bad) bnd idivl push iret mov jge enter add pop adc addr16 fcomp xchg sbb mov insl sarb jmp and jnp aam repz dec stc xchg nop push (bad) pop stos push pop imul lock repz dec mov lock pop inc xor cmp jno xorl iret out add imul adc pusha addb mov call fnstsw adc cmp js fcoml rcrl inc popf mov jle push cmp add and js jl add add add mov mov cmp inc je push and push imul or jo inc ret mov xor sbb xchg iret sarb das aas mov xchg lahf add aam lods ret subb dec (bad) jno sbb (bad) dec mov add ds sti mov std pop sbb mov inc adc or cmp push insl aaa stos pop testl int push test insl sub insb mov (bad) cs imul test add les cs mov js inc push das icebp push push mov movhlps pop lods xor mov mov sahf mov jge jb xor xchg cmp xchg jae lea cli sbb stos push push inc push imul fdivl pop aam jnp jp pop mov xor and mov pop pop into loopne into clc lahf loope push push out xchg add rolb mov adc dec cmp lods xchg in sub push into or lcall inc out jae mov aam inc add adc pop mov xchg dec xor adc cmp in and xchg mov fisubr sbb cmpsl mov fdivs cmp xor mov push scas adc movb inc dec ja mov in and jp ljmp add ficompl and test adcl adc mov mov lock mov pusha mov jnp ret or push push xor mov cltd mov icebp fcmovnb or mov stc jae xchg push lock xor add add add movsb loop inc dec andb xchg arpl adc sbb push or rclb push add inc inc push rorl cli jno jg mov aam mov dec cmp pop imulb (bad) sbb pop push adc ficoml adcl ja pop ficomp jl or sbb repnz lahf ret sub icebp xlat in pop cltd sub sub or inc jmp sub or push sbb mov cwtl and das (bad) dec scas cmp lahf xchg xor stos add mov cld dec imull in dec fs (bad) shl dec add imul pushf leave mov int3 fidiv (bad) pop mov pusha std aam inc jmp fildll cli gs jle inc andl sub sub std mov jno ljmp lods enter int3 mov loop out xchg or cmp mov xchg cmp fs mov outsl leave cmp mov cmc lds sbb pop movsl aad mov loope (bad) cmc ja decb test xor add add sti inc pop pop and inc sub int3 and jecxz ret and fisubr cmpl das cltd xchg pop loope mov addl pop xor mov loopne push fsubrl ret push fwait bound push push push mov mov push sbb lea mov push rcrl jne cmp imulb imul ret roll ljmp in fwait enter push fs and and push add add xchg cmc push adc xor xchg adc sbb ja int jno sub add in dec movl (bad) mov (bad) cmp popa and push insb cmc adc fcmovbe loope jmp pop add lret adc gs jbe xchg loope popf adc lcall xchg mov mov mov fsts or fstps outsb sti out fsts arpl add mov fsqrt inc divl loope out loopne push inc and add pusha int3 xor xchg repnz mov scas jmp inc pop dec pop test popa jne sbb (bad) cmp out pushf sub or (bad) adc mov pop mov ljmp inc pusha push sub scas mov jg test push aas add jecxz mov mov xchg imul int3 dec imul nop ljmp mov pop idivl aad pusha pop sub ret stos shll or dec mov testb cmp inc mov addr16 movsl or add add add test pop mov push shlb pop jnp mov sub lea addr16 cmp inc add dec aaa jp mov add (bad) push cmpsb inc imul ja dec mov ds aaa inc cmp push sbb (bad) jne (bad) idivl pop adc sbb jne cmpsl xchg pusha sbb cmp and mov out push xchg out cmp fcoml or xchg jns adc mov jno push (bad) movsl out jg les in lret fdiv pop add jmp xchg lods or fcmovnbe push add dec pop jle cmpl mov push mull sar fmul rorl cmpsl sbb call imul fcomi repnz imul sub (bad) ss jb movups je repz call jbe out (bad) lcall mov test ret lds mov inc out mov std mov sti jae and pop outsb jecxz add add add pop push inc xchg loopne fwait enter div (bad) in loope (bad) jbe ljmp xchg rcll adc xchg lret sub add push mov or xchg mov out mov inc add jno popa or push sahf pop push jp jns (bad) daa adc sbb paddw inc push mov repz dec jbe sub pusha btc jnp mov pop fsubs in outsb pop adc cmp inc mov add add add repnz push sahf mov cmp sbbl sbb inc add cwtl movsl inc (bad) out dec xchg in and data16 insb mov test push inc stos push (bad) mov (bad) repz push es jae fistl js sbb and add jae sbb in pop mov and mov fs xchg out int3 fisub sbb rorb inc test cmp xor mov jns (bad) and xchg xor popf adc jge ficoml add add add jecxz xor cmp lahf mov push add push cmp aas rcr int3 cmp or aam lock repz xor lea (bad) and cmp int3 pop addr16 int3 lahf pop adc push insl fwait dec jg (bad) mul mov mov dec aad fcoms jae outsl sub ja inc cmp fwait xor sysret cmc mov cld lods out dec sbb mov loop pop ljmp sbb pop jbe add das cmc daa xchg outsb cwtl pushf sbb add mov and lcall fisttpl (bad) stc cmc mov jbe roll push inc fs push lahf and pushl fdivs sbb cmc pop in fwait mov add push xchg push movsb stos bswap arpl and fmuls mov sbb orl sub jnp push cmp jmp xchg andl (bad) nop push test pop lcall pop loopne addr16 pcmpgtw push aas orb xor add add mov inc mov popf addr16 add xchg xor cs mov mov lret divl movsb mov cltd nop cli or mov dec aas clc (bad) outsb jnp mov cmp inc in mov push push je jne or fisttp mov push lret lea shrl jmp int3 das dec movsl jecxz dec cmp sbb les xchg jae cmc iret rcr or in scas (bad) movsl in jge jnp rolb add add add ljmp lods ds and iret fcmovnu mov mov push sar (bad) aaa add imulb out hlt pop lock adc (bad) scas das fnstcw push inc test les pop leave pusha mov in add jmp scas sahf sbb mov mov popa sbb jo cmp es dec push jmp cmpsb cmpsl test sbb (bad) scas cmp sub push insl bound fs (bad) cld xchg mov scas call lcall insb outsb add pop and add add jp gs inc popa push mov inc scas jp sti sub xchg leave fcomi xlat sub fucom (bad) loop mov add pop aad add daa or mov or adc lret inc arpl into sub in in mov push sahf add pop test dec (bad) test in outsb push repnz xlat inc or mov lock jae data16 and pop leave (bad) lret mov add jb out inc lea sub pop stos in jns in add add lcall mov inc call call mov pop inc out sub nop (bad) insl lds int clc mull ljmp loop je and data16 in xchg dec mov inc ljmp int3 (bad) je lret xchg dec iret sti std aam adc and pop scas loope push dec cmp popf aad push mov ljmp sbb test inc hlt lret js addl sti (bad) xor add add add mov leave repz jbe jp fildl push push lods in push std mov mov shll dec dec add lcall mov les lret mov in pusha (bad) dec lar sub cwtl push lods inc mov insb push (bad) insb mov pop xchg mov subl icebp push jae cmp pop sbb out popa aam pusha inc push mov ljmp add sarb dec hlt das pop lods push dec cmp adc jmp lret adc ja jg pop inc out add add add add lock or mov pop in push outsl ficompl cmpsl and jp aad dec add ret add jb mov mov out out sub rcrl (bad) repnz add repz cmp push adc mov sti push adc popa dec rcll sub pusha fstpt mov dec loope,pn lret (bad) repnz inc mov fiadd or pop fisttp (bad) or fwait cltd in stos jge mov mov and cwtl divb or out jae mov dec jno inc mov adc nop pop pop lret jecxz xchg loope inc jbe fidiv push dec and ds ja lea insb adc icebp in aad mov add jmp pop jg push (bad) sbb cltd es adc test cwtl repz jp nop adc fcmovu clc push notb jmp and mov pop mov xor arpl mov icebp addr16 je test inc inc out sar xor cltd push dec adc fwait mov insl aam or push jge dec pushf jo fldcw mov sbb xchg and jae loope jl sbb fdivrl inc inc fidivr fsubr mov mov hlt push xchg push dec adc jg add je in fsubl mov xchg js lods dec cltd sub test mov mov jns (bad) mov push adc addr16 lcall inc popa xchg rcl ret fwait dec inc add stc test jnp mov push add add add loop xchg inc es aam fstpl mov xor cmp mov and lret into in cmp push popf sbb cmpl loope or out repz dec imul adc sbb push sbb push into inc iret xchg mov jmp push (bad) in ret (bad) addr16 add xor scas xchg sub push pop mov pop sub xchg ret push sub leave cwtl (bad) out mov sub mov popf lcall add or call insl aaa stos test add test dec xor mulb mov ljmp jno lods cmp push push cmp popf pop pop push fistl mov adc mov mov xchg dec mov push jle dec sahf mov cs push int3 push scas sbb and loopne push dec jmp jle xor xor (bad) mov sbb push and nop int pop scas sbb aam aas cmp mov icebp add add add xor pop es mov fldt movsl mov sub jecxz sahf dec pop loop es xchg sub stos out mov aas fcoml cmc adc mov sbb pop xor inc ret pop (bad) addr16 ja jb int (bad) js cs mov mov fildl xchg dec jmp dec dec in jge xchg inc icebp mov (bad) sti xlat mov mov int xor outsl loop jae int3 cmp push aad adc test pop clc or adc inc roll mov add add jmp or test jbe jmp jbe jmp aaa and fmul imul sub call jp add lcall lods sub sub xchg xor xor xchg mov dec fxch mov adc pop adc pop inc adc in ret movsb xor leave mov or imul dec rcll dec xchg jle or mov xor adc hlt mov ja iret dec ret in and add add add in inc gs mov sub test lds ljmp mov cmp xchg aam push cmp inc jle aam xchg push jecxz xchg bound mov cmp arpl push (bad) or fstpl pop pop fmuls push xchg jmp mov pop shll loop push push fadds fsts push mov or xor sub pop jl repnz dec in bound (bad) cs and in jp pop repz (bad) ja jne in and enter push scas cltd cmp out and mov cmpsl (bad) mov add add sti cmp push or or gs fdivrp and jne mov test jmp movsb or pop sbb int3 xchg lgs int3 mov cmc movsb cld dec jns or fwait xchg mov dec jge sti paddb and jb cld mov add or cmpsb jp inc repz fisubl fsub vfmsubadd213ps jmp or sbb cmp jbe pop xor cmp sbb adc pop loopne add add add xor es mov mov cmp mov jmp pop mov ds inc or push cmc inc cmpsl ret ret xchg aas (bad) mov push sbbl xorb fdivp nop mov es mov cmpsl loope xchg mov sbb mov add pop push push push xchg leave or lret (bad) add mov pop and add add jbe cmp adc jg dec cmp addr16 dec xchg mov outsb orl stos ljmp jecxz sub add add add shrl mov ret sub lods mov fwait mov mov pop (bad) aas test cmp lret movsl add sub rcrb xchg or in dec sahf int3 xor (bad) test adc les and or mov arpl sbb ret inc aaa mov daa dec xor cli pop dec (bad) mov lcall int rorl int3 enter dec lcall cmc (bad) xchg idivb cmpl push push into int3 enter adc int push popf arpl add add add add pop fiadd out or cmpsb xchg dec daa pop hlt pcmpeqw loope pop mov mov cwtl movsl xorb jno bound rolb mov incl loop adc pop es push and shl (bad) shrb push iret (bad) out outsl bnd pop in adc call push pusha popf push jb fnsave push adc das sub out or sub test xchg or pop cltd jmp mov lods es rolb mov jnp adc imul inc dec mov add add add add test iret je xor sub add int3 cmp lcall jbe fsubrl out mov bound loopne jnp mov in mov adc clc repnz cmp (bad) in sbb add rcll test sbbl (bad) aaa dec lcall fcomps in je xchg int popf outsl jle sbb mov sub sub shll push jmp and and cmc leave gs or imul xchg loope andb jge stos mov push insb jl bound cmpsb and jae cmp (bad) dec sbb adc faddl mov scas sbb inc sahf push (bad) cld add js mov mov out decl jge jg ficoml loope stos mov xor pop dec mov popa mov jo icebp test sub xor aad rclb scas cmp push test add xor mov scas mov add add add pop scas ret xchg sarb mov xchg insl dec pop clc push sti adc es (bad) shll dec and mov mov mov pushf aas bound sub xor pop mov sub mov mov push imul jle dec add add add shll dec dec lcall pusha pop xchg lods jo out js adc jno adc imul dec sub imul xchg mov sub jl mov sbb jmp xchg pusha adc lds add add std push insl xor push push fildll in int3 sbb inc push lea ret inc cmp dec cmpsb stc jge scas aas or call and (bad) ficoml pop mov cli inc fnop out xor aam sub xchg and (bad) add icebp inc jg jg mov pop test sub jp stc and in fsubrl inc pop push push dec xor push test int3 (bad) mov dec loop mov cmpsb stos inc and in jo fildl fwait aad sahf (bad) mov add add add test in pop mov cwtl xchg push adc push dec sub std inc lret addb cmpsb dec test test and jae jbe sbb lods stc add insb jge gs xlat pop inc jb or pop mov jns pop xor mov sub push sbb mov ret sub cmp loopne dec mov mov movsb cmpsl imul xchg loope pop pop lea shrb mov mov out outsb fs add add out cmp add ret stos loope (bad) ljmp sbb in mov xchg addr16 fimull mov stos sub shll addr16 lahf jmp or inc jne int dec lods dec sbb mov mov call repz ja inc pushf adc lds pop cltd stos (bad) div push sbb mov pusha adc int3 push lods ret xchg repnz bound jae cmp fidiv xchg cwtl pop sub or ds loope jecxz mov leave add shr jge shl dec mov jno mov mov insl mov insl push lcall cltd (bad) jmp push out mov mov mov fildll insl leave aaa mov into push and add out adc popa cmc mov sbb ret adc fdivrs test push scas sarb into add or aam inc dec sbb (bad) (bad) jle inc cmp adc out test aam pop mov loopne in mov (bad) mov add add add adc (bad) sub outsl pop scas sarl mov adc nop mov xchg stc lock push aas test out lods add repz rcrl orl ja rorl cmpsb divb cmpsb imull fwait rcl out dec into leave call lods fdivrs and or ljmp (bad) adc sbb lret lret fnstsw (bad) aad movsb aad notb dec push setge or push or jb int jbe repz jo nop movl add add mov mov icebp mov push pusha adc add xchg pusha (bad) pop inc push jg jo bound adc mov je pop adc dec test xchg psrlw ljmp jae pop lods (bad) adc ljmp push aas and mov pop pop js imul nop es jo in jbe (bad) js insb push mov sub lock cmp mov sbb mov push inc jo,pt jp adc adc add xchg repnz bound add add sarl mov outsl xchg push or cs mov imul xor test dec mov sahf iret pop aas test mov push adc lock ja push arpl mov dec push sub xor (bad) or (bad) push loope bound or not outsb arpl ds arpl mov call std push je jbe adc loop pop mov cmp out faddl fild xor push inc scas xchg add add add movsl jne pop mov mov adc repnz rolb pop xor cmp (bad) fsubp (bad) push sbb xchg cwtl fistpl fistpl roll dec adc lret pop adc ss mov sub adc cmp aas push jp pushf inc aad stos call (bad) dec sbb clc shl cmp sub xlat inc jle jb pop mov out mov sbb push dec cmp enter addr16 je psubusw fildl cltd iret jg in out mov sbb mov inc popf xor out lcall mov xor loop xchg inc xchg jmp xor mov ss pop cs adc cmc and fstpl mov adcl jle call insb mov aam mov das push dec test test jmp (bad) flds or mov dec ja adc push cli sub (bad) mov (bad) mov xor pop mov int3 cmp test xchg sbb arpl adc out mov imul jecxz mov add sar faddp sub mov jnp mov cmp jns pop dec fisubr out mov mov mov data16 rclb rol in and clc push pop inc mov fisttpll inc xchg xchg lods mov push scas pop pop sbb adc scas sbb out mov aas jmp call (bad) mov int or rcrl aam cld add gs iret jmp xchg mov mov pop pop push jbe sub xor xchg adc add ffree out imul sbb test cld mov (bad) aas xor cmp sbb xor pop aad jb,pn or pop cmove daa dec xor mov sub andl imul lcall mov cs fsubrp add and test setge std cmp add pushf lods notb mov mov push jg popa pop sbb bound (bad) repz cmp arpl and add add fnstenv lret push test lds (bad) push loopne add sbb adc adc jno imul and inc adc call test scas call sti xchg sub in stos add decl sbbb nop mov fs icebp iret out (bad) mov jmp scas mov adc lret pop gs jo lods movsl push sub cmc call popf xor and std inc mov in xchg (bad) in call je push (bad) pop insl or in pop xchg test lret daa loop mov sub and mov xor in loope dec mov mov enter or pop loopne (bad) mov mov gs in fwait gs aaa push mov sbb mov test movsl pop stc pop sub cmc sbb xchg jns sahf lahf xchg push or lret jo js mov xchg popf cmp xchg add add add jb rorl nop xor mov xchg sbb cmp mov inc jl xchg std clc les rcrl out (bad) pushf cmp dec cld xor and mov in xor pop cwtl cld adc mov outsl jecxz scas outsb popa imul push pop push inc idiv mov xchg clc test and fdivl leave dec dec shrb add inc cmpb cmp cli pop mov in xor jbe cmp (bad) aad xor push and jns add add add jno cmp mov and int mov lahf rcrl jecxz and adc cmp popl nop test and adc cmpsl xchg jp mov jbe insb psubw jecxz in out fsub cmp in (bad) mov loopne je pushf arpl cld test movsb sbb push cmc cmc and or pop dec cmp xchg push js in or repnz ja pavgw mov loopne push int3 dec ljmp std popf mov adc adc or lret (bad) (bad) xor push cs and std pop add dec std dec cwtl jecxz (bad) xlat mov enter mov call and and pop out dec mov clc inc dec push pop int3 dec mov pop dec iret in cmpsb add cli scas lahf or adc je add push sbb xor fidivr fwait jl addr16 inc aaa bound jne (bad) jne push mov clc or outsb iret xchg js je imul in inc pushf add cmpsl xor (bad) shll mov pushw cltd jmp add or and jmp fwait inc daa adc lds stos pushf lcall push push fimul ja sub addl jns adc mov insl test pop pop insl add and and xor cmp lods (bad) ficomp into cwtl pop jbe in inc mov bound cli jle mov or and pushf mov push insb push addr16 mov ds and add add add mov add std jae test imul inc mov jg ja loop lcall and mov inc mov leave adc add sbb loope out push inc mov mov lahf ss popa out int (bad) sub ret jae cmp test jno pop mov jne mov in arpl and sbb es push mov out jne inc mov movsl das lcall popf sbb sub inc adcl imul add add add sarb (bad) pop gs inc xchg mov push jg fs cmp jp add repz jae add fdivrs dec sub sbb mov jo sub sub cmp push cmp arpl test daa ds call mov aam xorb negl loop or adc mov or lods or in fs in stc and hlt mov icebp or pop jnp lods xor push jg es outsl stc jne xchg add add add std dec inc mov push or mov add outsl push cmp inc inc mov hlt and lcall dec push int3 push dec jo cmp dec pop cli (bad) (bad) ss inc ret shrl adc scas sahf popa mov dec xchg add aaa (bad) mov or push jp ret (bad) addr16 jge or cmp xor test lcall jb sub jo int cmpsl jns pop mov xchg stos sbb add in or cmp arpl sbb add add add lcall inc loopne or mov arpl pop xor ds mov ljmp out dec aas xor aam cmp (bad) sub push dec in adc add loope adc in sub cwtl xor inc lret xchg or sub sti mov lods bound icebp xor imulb adc (bad) xlat in add mov mov in pop loop jmp testb dec inc jmp fcmovb aas push (bad) xchg add add add cmpsl fcoml push pop dec sub cmpsb out leave arpl ljmp sbb sub and icebp push data16 dec push sbb sub push and mov xlat bound int3 (bad) mov icebp xchg pop jmp push push shlb lret shll push sbb or lds sbb pop push out mov arpl pop mov xor dec idiv mov sub mov adc shrl add jle cmpsl jb ficomp pop push cmc push cwtl push hlt sub outsb mov add add add add aam cmp sub inc jb adc or push sahf dec std mov (bad) (bad) push push bound xor mov mov xor xorl fisubrl icebp mov add roll sub fcmovnb sbb leave (bad) add cmpsl ja inc push insb push xor lods popf cltd es xchg pop leave scas fildl xlat in xchg je mov movsb add jmp aas aaa imul jle mov (bad) mov pop ret (bad) add add sub cwtl sub sbb out fisub xor stos mov in out insl lods leave cmp mov mov loop es das and nop xchg cli mov dec lcall outsl pop mov cmp fist (bad) or ret test rorb fistpl hlt mov push push xchg les (bad) out js mov pop sbb mov xor ficompl push lea dec (bad) sar mov xchg fadds add add add add out sbb mov xchg mov icebp icebp xor push sbb imulb pop lcall cwtl gs outsl enter xor sbb lcall outsl out lods sub sbb aaa sbb cmp stc mov jns,pt adc jo,pt scas (bad) mov sahf and pusha jo ret and xlat sbb stos fistpl push jo inc dec and pop cltd dec lds xchg scas imul aaa in nop pushf fwait lock sbb adc hlt fwait inc mov insl adc add add xor push pop mov pushf andb lods daa (bad) popf test mov popw mov andl das inc fwait or inc jmp psubsb out push gs or scas adc das (bad) sub movsl mov rorb shl push (bad) mov inc inc push jmp push push fs cmpb daa mov aaa or xchg out ret push and push sti and jno push adc ss fdivrl inc in push add std push lock cmp add add add add loop mov add out sub xor (bad) aad (bad) cli dec mov push sbb push sbb mov sub pusha lahf neg xor xchg jo andl sub insb mov sarb (bad) pusha xor repnz cwtl dec jg adc add dec std jne jl mov sub sbb cli test fcomps cltd mov mov ret test mov or mov sbb lret add dec into jns ss dec enter mov fisttp add add add sahf push scas daa jge adc pop sub call mov adc inc xor addr16 xchg add mov cltd adc lea ss shl cs or mov sub out shlb xor lret mov cwtl and mov push lods gs bound xor adc test test and sub and pop mov sahf or rol shrl or mov loope mov push add movl cs jnp lds dec nop cmpsb int3 dec or call lock call xor imul xchg call xlat scas sbb mov jb pop fisttp aaa out frstor inc pop popf xor lret mov lret mov arpl cmp (bad) std mov push jecxz aaa std adc movsb pop cld (bad) jl out cli lods jmp (bad) sub add movl lcall adc cmp mov push dec cmpsb push in movsb lods sub ret xchg ret inc sbb sbb inc cmp out das inc ss dec cld push mov leave mov cmp push jnp or mov movsb sub add mull daa xor aam inc das std fwait insl aam push shr pop xchg dec xor mov inc mov jns dec dec mov sub jb (bad) adc sbb pushf xchg out xor lock jae adc imul add add cmc test fdivrl loopne mov pusha inc psllq cs jae sub daa add adc pop and addr16 test push or sbb mov ds jnp roll arpl roll xor movsl (bad) das mov (bad) in (bad) mov mulb mov inc repnz lods fisttpl xchg test pop adc (bad) mov mov sbb mov imul or dec jge repz ss test add add sub flds jb dec iret push jl xchg xchg push addr16 pusha icebp jne add std jno nop fistpl push pop cli shr mov push mov inc mov jmp aam add cmp out adc cmp mov out out iret cmp jl cmp xlat cmpsl cmp loope,pn jecxz xor pusha cmp sub pop fcoml iret pop sar inc shlb addr16 idivl push dec (bad) add mov add mov inc push sbb add add jbe push les sub pop mov outsl adc movsb std nop sbb ss aad dec (bad) xor or aad inc xchg add sbb outsl enter inc cmp sub js popf in std idivb iret mov out dec mull xchg pop (bad) loope out mov repnz loope loopne popa lds loope push xchg pop nopl (bad) mov cmp jecxz rorb adc outsl test sub (bad) sbb test daa pushf dec add add add mov int3 insb sbb pop fisttp dec jmp mov pop scas test les adc jno jae lcall push lea fcompl sbb lods cwtl jnp ja mov mov push cltd sarb bound pop mov outsb lahf cmp nop adc cmc das mov add xor clc jl lods push xlat push sub fwait aas mov mov dec jmp jle sbb scas shrl jmp xor adc add add add xchg pop sbb add clc cmpsb pusha movsb or pop xchg jg lahf les sub jl pop xor insb pushf jno popf (bad) nop decb add jne mov addr16 xor push pop push xchg out mov clc push sbb sub lea adc outsl xchg push pop pop dec popf mov outsl les cmp cmc aad call mov add cmp jle dec lds rol mov jmp or int xorl sub imul shll (bad) sub pop fistpll bound fs inc movsl jmp push ja pop mov mov xchg rcll std out pop xchg jno cltd and cmp repz out insl inc shrb shrl push adc xor jmp aam stos sbb mov icebp mov add or js loopne pop mov lods dec add dec shlb xchg test sbb add inc ja mov add mov or loope mov add xchg push xor adc and pop jmp (bad) sub cmp or pop mov sub imul push int or (bad) fnstsw mov cld xchg add jo pop hlt xor inc dec cmc pop enter mulb fs push or (bad) mov jp push sbb pop incb mov mov int3 (bad) out mov sub lea mov sbb in lea shrl adc push outsl mull stos inc sbb pop cld fmul jno out jne cmp imul inc cmp mov mov or inc xchg movsl mov rcrb xchg mov cmp leave cmpl dec mov ds cmp pop popa nop and xchg cmp mov pusha xchg or fsubr jbe rorb push nop cmp push sarl popa idivl fidiv leave (bad) adc lcall add jae add in jp add lcall out ret add push test mov hlt cmp int lea sub xor orb mov lods enter pop pop cld packuswb dec pop sub inc pop xlat sarb and ljmp inc lds xlat into jecxz jge lods add push in xchg mov pop pop roll xor jne insb dec into mov dec mov repz mov movsb xor push cmp dec in and popf add add add add sub xor lret xchg fdivs mov iret ds rcll inc mov aas xchg lods pusha inc int pop (bad) cmp xor clc cmpsl repz pusha cs pop pop in ljmp add jmp ss mov lahf sub xchg sahf dec dec xchg lret dec insb shlb fldl (bad) stos xlat sarb rolb call loopne repz mov xor lds ds rcrl repnz sub aaa push push mov add add add add pop mov push clc mov add js roll rcl mov xchg inc xchg fcompl or in ret (bad) xchg add add push cmpsl xlat dec jns sbb inc ja gs les dec or xchg pusha mov push jae push sti int3 clc scas push mov (bad) data16 pop (bad) mov adc cwtl xor push cwtl out sbb mov xchg and out ss in jo mov andb add popa lret shr addr16 xchg inc or pushf hlt pop add add add add fsubl inc aam jne into cli mov cli movsb jge shrl lcall adc xchg inc sbb out je jno xchg aad scas loopne xor shrb sbb mov and mov and xor jbe pop cmpsl push dec and imul cmpsl pushf out cli add add outsb mov int rorl push sbb jmp sbb icebp ret pop insl fsin or sbb in repz add add cmp or dec pop frstor ja pushf cmp rorl lahf pop adc jg jge cmp jmp (bad) dec xchg leave out push xor sbbb pop cltd cmc pushf rorl adc mov jns popf mov inc (bad) sub fsqrt std stos and sub pop dec (bad) xor or std loope xor jmp outsb push fldenv outsl mov mov sub repz mov dec push dec sahf add and mov mov loopne inc add jno dec and adc add push pop dec fild pop jecxz push dec sub out mov scas xchg and sbb fidivrl and pop adc push outsl icebp or cwtl xlat mov ja sub cmc in ret dec dec (bad) ds mov jl (bad) jmp lret cld pop fs push stos loop mov jmp and dec fstpt pop outsb xchg in adc rorb sub push dec loope mov push repnz repnz dec stos (bad) jg pop add pmaxub add add add jge xor mov out or xchg cwtl xchg sbb test mov cmp aam or jl fsubl xor lcall adc test jmp or push xor or jno jge jmp ss dec push pop std jmp xor dec js fildll lock out xchg cmp xchg test stos or call (bad) sbb rolb notl jl (bad) xor shl mov jne les lods add xorb mov pop jne jbe stos js mov (bad) mov out jl (bad) xchg mov mov into fwait sub xchg fist ss push aam leave ret in (bad) popa xchg push sub push in ja or ljmp jmp mov jecxz push push add xchg jno mov lret (bad) loopne fwait xchg add imul in mov cmp jl jae punpcklbw mov cwtl rolb stos inc test pop dec and add add xor sub mov jns mov je rorb xor jl push cmc fdivrl add add stc aaa or loop stos imul scas sbb fbld movsl adc mov sub pop and loopne sub addb jns scas icebp rcl or lock imul out gs scas lahf hlt xchg adc adc lcall pop xlat and in dec int3 adc in pop cmp mov cmp adc adc jge push sahf xor add add add inc jp dec xchg ret jns (bad) mov or mov pop iret dec (bad) mov xchg jge mov fldenv pop xchg cmp hlt or sub mov stc outsb dec leave jecxz arpl mov popf cmp push push lds arpl sub push scas bound cmp and clc lret xor aam mov pop jp fldt (bad) cli inc mov inc mov lock xchg ljmp mov stc inc push ret xchg and sub cmp lods nop jl push jns sbb or push jl lods mov mov arpl or xchg fs fidivr jecxz xor xchg out inc pop cmpb sbb add (bad) scas imul in dec aad rcrb sub leave movsl xchg dec mov xor push popf jmp jp xchg pop (bad) fstpl or xchg bound cmpsl testb inc mov mov repnz or fistl dec cmp icebp or fucomp in push xchg pop fisubr dec das jno std enter dec add add add add popa lahf lcall push mov scas subb mov add bound and bound mov xor pop cmp xchg mov jns adc cmp dec idiv xlat int3 mov shl push inc dec leave adc data16 jecxz scas in lods cmpsl xchg fwait add test insb insb add pop aam add sti in insl mov mov inc (bad) push and mov and add push push cmc mov orl pushw nop xchg insb add add ljmp sub test clc scas push push xchg je jb test mov outsl popf scas xor push cmc (bad) dec addr16 daa ret sub jge cmc into daa mov pop int3 and inc inc (bad) (bad) mov pop adc lahf pop imul mov cmp lea mov mov dec mov fcom popa cmc and rcrb and test sub adc inc cld mov pop lock push sub lahf mov mov daa fdivl dec add add add jns xor fisttpll jb aaa jno cmp mov mov cld testb mov cld adc imul arpl jne mov mov mov pop loopne lods inc xchg sbb icebp mov clc xor loop or popf cs pop mov call ss fadds push into or mov imul push repz jmp sbb es sub sbb popf xor and je cld inc push imul mov pusha pop sbb int aad jmp sub xchg sbb xchg jmp cmpsb cmp repnz mov dec arpl jg (bad) fadds mov test pop cmp pop outsb or xor dec (bad) and cwtl add jo xor call xlat arpl (bad) (bad) xor mov and cmp pop mov ja mov mov xchg cmp ficomp dec cmp scas inc call cmc jae lods inc lds push sub stos sub cmp jno add add add push rcl clc jl js arpl fsub (bad) jbe js (bad) xor lds cmpsb pop adc hlt sub shrb jmp jo dec adc bswap or xor mov mov pop in stos mov dec jl dec push push into loop mov aad pop sbb call pusha and pop lea cmc ror xchg mov lods stos aas mov outsl daa adc in stos movsb and or loop jae mov pushf rol adc xchg in jns sub movsl cmp mov sbb ret add add add xor mov lods iret inc xchg dec xchg mov pop and popa std das cmpsb mov dec sub xor xchg lock mov movsb dec jno imul les fcmovnu xor leave jns cmp xor dec xor mov cmp mov cmp cld mov jecxz xor lea clc rorl dec pop jo cmpsb add mov (bad) push clc pop xchg inc push mov js test in mov inc cmp xor (bad) lods jecxz jle aaa movsb jb pop gs (bad) test add add add icebp and mov sahf pop xchg in push fsubl sbb out std roll test data16 and pop mov inc ja mov inc push mov push aam sbb cmp dec push (bad) out out iret outsl pushf sahf cmp add ret mov cltd out scas mov pop and stos sub fs jo out sub orl mov xor adc repnz push in push push jnp,pt xlat pop mov add mov sub icebp jne addb add add sub xor sbb lcall clc xchg gs ret and lret ss loop lahf inc adc (bad) clc jnp push (bad) jmp test fwait test aaa fimul test lods add loop cmp rolb rcrb lahf test cs jg xchg test adc bound aam jbe mov adc enter push cmp mov pushf lea push std cmp xchg jo mov neg add adc cmp cmp incb add add add add adc cmp push arpl inc out aas mov push jne outsl (bad) insb aad nop mov je sbb dec bound inc test (bad) repnz push stos loopne mov (bad) jno fisttp dec and mov (bad) dec loop sahf xchg stos pop ja int fs pusha cvtps2pd xor in inc jmp (bad) mov (bad) and in push scas mov inc (bad) ja push ljmp mov ret xchg mov add add add lods (bad) scas leave lods insb sub mov test fstl cmc pop cs xor sbb push xor cmp dec inc mov or lock stos dec pop cmpsb mov inc cld fidivrl jmp addl push pop jne push out icebp mov outsb clc inc xor in out xlat dec nop mov xor out out pop sbb jge fisub mov in lret adc jecxz push test cmp icebp push mov pop xlat mov cs loopne add add add and ja test out imul fdivl and xor bound hlt and cltd fcomps into (bad) call in pushf xchg xor test sub lock fdivrs repnz dec mov jl fnop cmpsl sbb jg (bad) pop movsl push stos mov bound movsb fidivr pop jl dec jmp fwait movsb adc mov loope xchg js js dec out push sub leave in jmp arpl inc xor add add add loope and xlat clc hlt mov out mov xchg js test mov cmc rol dec ja sbbb cmp rcrb iret sub fist stc push adc mov cmp sbb jb dec test mov inc and pop dec mov xor mov and jnp repz and add popa add ficoml test sub pop scas mov inc cmp clc loope sti mov dec jge add add add add push popa sbb pop push in adc lcall (bad) das mov pop jno aaa push daa rolb fisub adc cmp or inc test adc mov mov inc insl xlat hlt enter jecxz stos sbb sbb mov inc fnsave jmp call sbb lods (bad) mov dec mov out cwtl jl cmp sub ret clc sbb rcl and pusha inc pop pop lret dec orl imul add jl sub push movsb call dec cltd inc dec idivb stos cmp dec mov xor ds stos jp lds cmp mov pop jmp lret mov xchg push repnz mov fsubs add incl jp sbb xor std add pop loope shrl arpl imul add mov xchg cli (bad) lock loopne cmp xchg mov inc fnstsw rcll sbb xor out add add add mov loope cmp cmpsl cmp xchg add iret push sbb ljmp stos aam pop mov push jle test fwait pop ljmp jbe or pop xchg adcl add pop insl ficomp and inc mov dec xchg or ljmp dec mov sbb inc sbb jmp ja jb xor fyl2x into test mov jle es gs and movsl repnz dec cs or imulb mov inc push or mov (bad) (bad) imul cmc inc add sbb xor xchg push push sub dec mov push xor pushf ds cwtl mov xlat (bad) pop mov add push daa xchg dec enter push dec cmpsb sarl dec or movsl push mov inc xor loopne xchg pop jl ret mov ds sub push push xor xlat sbb sub sub and push adc lea and sbb and subl add add add addl movsl dec cmp cmpsl icebp mov loop sti mov dec imul push sbb insl (bad) xchg dec mov outsb lahf stc jnp js adc push cmp icebp pop nop inc mov xchg mov aas or test pop sbb into xor mov mov daa pop out idivb or sub xchg andb adc lock and mov jae test or outsb or xchg shrl push xchg mov and subl add add add add jns loopne out pop lahf pop adc iret jnp cmc inc (bad) lret mov mov sbb sub dec xlat ja mov push and das (bad) jle add cmp rcr loope xor jg xor and in jmp fs aam ljmp adc (bad) and xchg lods fs fwait xchg adc repnz aas cmpsl or xchg cld rorb fbld aaa fdivs idivl adc int3 mov nop pop ja mov int3 add cmp repnz adc insb and das mov jl push fisubrl and sub jge jno xchg mov gs sub sbb addr16 out lods lcall pop rcl adc stos jae inc cmp std adc mov dec es mov loope nop adc mov outsl ds and pop ljmp and xor and cmp mov xchg stos inc pop insb pop add add add add clc cwtl fsts pushf push inc sub add lcall xchg mov imul addr16 aaa adc mov test lret adc stos mov out push imul popa enter sbb cmp xchg iret sti pop push xor xchg pop pop sub and insl mov jae ficom mov fildl or cmpl sarl leave outsb cmpl mov mov and (bad) imulb cmp push cmp dec pop add add add ds mov (bad) push (bad) mov cli pushf jmp (bad) outsb out xchg xchg dec cmp lcall int and cmp inc sbb jae or fs pop into inc inc sbb push mov aas sbb divb lds sub fldl2e hlt add rcl hlt pop popf adc lcall stos cli push aam cmp jge add mov out sbb inc cmpsl popa xor dec cmp add insl lret xorl add add js testl fs stos mov push mov leave inc jmp and adc int and dec test push xorl mov cmp nop mov add movsl fwait rolb adc fwait test inc add fimul cmp lds shl lret xchg (bad) arpl stos or test sbb xchg pusha or dec stc push (bad) (bad) int dec xchg out mov push pop xchg xor out test orl xchg movsl inc mov das out sub jb lahf add add add add cmpl mov aad add pop jmp out aad push mov xchg xchg xorl add sub fbld cwtl mov cwtl fs out xor aaa sbb cmp into mov sub bound xor add xor fbstp nop mov icebp jg jb or les popf fstpt movsb ljmp pop push (bad) inc scas jle mov into xlat std stc ret jae ret data16 add add add jno mov mov rcrl cwtl add cmp xor cmp addr16 in xor shrb lds imul test popa out cmp popf jno stos pop orl push mov adc icebp fmul inc push jno nop (bad) fstps jbe fimul jns lock rorl fmuls mov sub jp lds lods push add imul addr16 loope in (bad) jno (bad) mov imul xchg fs push (bad) sub jbe pusha shl add add add paddd inc dec test (bad) dec punpckldq push fcomi mov sbb jae and insb out jp or call ss jae in or lahf fimull (bad) pop cmpsl loope jns popf jno sbb rol std lahf popl mov addl mov inc movsb or adc cmp mov (bad) jp iret inc mov jg add jp adc lcall sub mov jno or add movsl aaa std fildll sbb add add add xor addb in ds and insl dec and sub outsb fldcw fmul jmp push sub xor aam mov add add loope outsl push dec jbe mov dec imul cmpsl push inc and pop nop movsl mov icebp stc push pusha xor rorl and xor inc fs cmp fs ret cmp fsubl or or inc xchg std rep fisub add push mov roll sub cli daa dec out inc push xor push lret arpl out lahf sub add add add mov stc in (bad) push roll faddp mov ss push jno or pop fwait dec hlt pop lds or (bad) ljmp sarl call jle adc in jp cmp cmp mov insl mov cli leave aas lds adc cltd (bad) ljmp bound cmp cmp xchg sub adc push fcmovne fwait adc inc jbe mov and mov insb xchg stc push add add add std sarl loop jmp popf dec fmull jp mov or test adc bnd fisub and mov pop sti loopne in fidivl mov cwtl sub pop adc test in mov les movsl mov mov sub sbb push mov xor test sub pop add (bad) jnp cmp fwait gs mov or pop cli insl in sbb push les cmp add or sahf adc fs mov add add sbb and mov and loope sti pop lea testb and xchg jmp adc or inc stos lcall nop enter mov clc imul and xchg dec cmp mov mov sti dec adc inc out cmpsb dec add sbb inc cmpsb adc (bad) xor xchg or js fsubrl fcoms stos ljmp ljmp fpatan xchg pop or xlat (bad) enter test je idivb add sti mov or push repz xchg adc xchg fsub mov or int3 cmc ret mov xor aas xchg les clc ja jne push ret std mov stc lods sahf into cmpsl lret cmc inc pop in xchg lods cmpsl out mov sti aas dec clc inc xor outsb cmc mov pop xchg mov push int3 sbb mov fadds push jnp movsl sbb fwait mulb (bad) lock ja adc cmpl push mov das mov ud2 rol nop loop test dec sbb sbb sbb or cmpsb and (bad) insl cmp dec sub aaa xchg (bad) mov push sbb push push leave add mov or mov xor ret (bad) push sbb xrelease or pop pop lock das shrl push rolb or add js mov jg adc in aad pop add sub jecxz or mov test and mov add add add mov scas pop adc inc jmp fisubr cmp cmp dec inc lret dec fidivl xor (bad) (bad) mov pop mov jge int lods mov je dec sub sbb add mov inc icebp push inc mov xor sbb adc jecxz sbb ror mov loopne mov add fnop daa sarb (bad) in outsb call mov jo fistpl inc sub hlt out dec (bad) icebp ss xchg adc mov jo mov or cmp cmp mov xor add add push add repz testl and loop leave or arpl icebp repnz cmpsl and fwait or mov dec sbb push jg dec xor dec inc addr16 std cmpsb cwtl scas sub (bad) adc pop mov dec mov xchg mov leave cmp (bad) xor xchg out pop aad add add or test test mov push pop mov cmp cmp das out fidiv lods and (bad) out mov add add add int3 adc mov xchg aam das adc pop out xchg sbb sub and movsb pop scas jmp lock dec fadds pop pop pop sbb mov ret xchg mov insl int3 inc lea cs gs (bad) les cmp adc sbb dec popf pop push xchg xor (bad) out ror xchg jl push add out mov pushf push adc dec leave dec jbe xor inc push out (bad) mov in inc aas test sarl jmp gs shl pop mov add add or xchg pop ljmp push out mov and jg cmp (bad) out gs xchg fildl jecxz ljmp xchg or cmp pusha das push xchg push pop imul (bad) test push (bad) inc push adc sbb mov jnp or xor mov pop fnop sub cmpsb mov mov cwtd push in fs mov lahf fistpll add mov cmc lods and mov add add add add mov sahf mov insb imul push in xchg inc mov leave nop adc popa jg lret xchg rorb je cmp pushf jns or cmp jb fsts add (bad) mov mov cmc ret movl inc xlat push lcall loopne push or pop stos mov inc lret frstor enter inc cs stos xor iret adc flds jle pop jmp dec sub sbb shll mov add xchg movsb das cmpsb movsb add add add lret sbb sub jns mov mov mov fldl repnz pop pop mov cmp bound jg outsl out rcrl xchg cwtl mov js mov out lret jmp and or sub dec xor out mov jno push addr16 jp adc ja mov fstpt add (bad) sti jecxz jbe push int3 mov adc cmp push je jmp push cwtl push adc add add add jb rcl add jp lahf out lock mov nop jge sub cmpsl lock (bad) inc xchg adc fildll ret sbb outsl jle aam mov mov nop sahf add xor inc mov repnz add lds inc sti xchg xchg xor adc sub mov cmpsb ds idivb icebp pop sbb orb or cmpsb push jecxz mov scas cmpsl fstpt pop sub aas test (bad) lock in xor (bad) in adc pushl loopne int3 mov add add add add stos mov loop das jns in xchg test fildl and sub leave das shll cltd div scas pop sub ds movb xchg jno (bad) clc dec and and xchg xchg add and (bad) loopne pop rol mov fs mov mov aam mov mov aaa gs loop pop pop xor or shlb xchg mov out sbb sahf sbb jno or sbb aad mov xor add pop div jne mov add add add add push or jae aad cmpsb xchg mov lcall mov or sub rcrb popf daa test mov je repnz xchg xor xchg jl xor adc (bad) push dec mov insb sbb sub (bad) or test loopne test xchg pusha stc fcoms aad sub mov jo mov in ret dec call mov jne (bad) sub xor aas inc in pop test mov repnz sbb add add add dec in xchg xchg loopne add sarb push loope sub loopne mov stc xchg fs sub repnz and orl scas call out pushf and (bad) (bad) in (bad) xchg xchg dec lret dec in inc cltd cld cmc push in (bad) cli push fucomip mov (bad) in sbb xchg xchg jl aaa iret lahf or mov in cmpl mov sub jbe scas mov mov jg jle aam int aaa cwtl loope mov inc jmp outsb adc jo dec add add add mov jbe sbb mov in and imull insb inc xchg jle xlat adc dec mov stos sub adc mov loop cli cld mov in ret data16 scas (bad) fist popa pop out (bad) repz mov call mov mov stos inc or sbb mov repz jne jo mov outsb (bad) inc mov mov jno out xchg cmpsl sbb xor sti das mov inc mov push shrl (bad) (bad) daa xchg push jns add add add add mov inc xchg in jno inc cmp jecxz sub add (bad) adc cltd testl mov sbb dec jmp push push dec mov mov jmp pop fldl icebp jns push sub pop xor dec daa mov xchg jmp xchg sub ret lods xor jb icebp jecxz fiadd adc dec cmp pop (bad) roll sub jmp outsl gs mov or add movsb (bad) mov dec sub mov test add add add cmc or mov mov push pop xchg shll outsb mov or into aas pop aad mov xchg cwtl cmp outsl lock scas stos push lds push adc or les adc leave loope jmp add push ret xor xchg call or clc cmp jbe xchg mov push daa fisubrl daa jg dec fsts mov (bad) bound sbb in fcmove test xchg clc pop cld jle addr16 test mov push or add add add add in jl iret fsubrp mov adc clc pop mov add test repz cmp sarl or push out fldenv push or add in das hlt jo push in push fidivl xor scas test aam xor rcll xchg and outsl or lret fbstp into xchg sub add mov add lds cmp pop sbb in push push out adc inc xchg out dec lahf pop (bad) and jecxz xor ret add add add add xchg popa push outsb fsubl cld leave mov int sub sti movsl sub add pop imul dec fs es std dec negl nop aad fisub aad dec negb sbb or dec jmp xchg das adc pushf (bad) popa dec lret jecxz mov outsl push pop or pop in adc xchg popw push bound shl sbb cli cmp imul insl push bound cs mov hlt sti fisttpll fsubs push arpl loope popa and movsb inc mov xchg cmp adc sti cmp add mov insl or xchg push mov mov mov dec mov or test jp pop sbb cwtl ljmp popf pop xchg xor pop and dec jns sub hlt xchg jecxz scas jge xor push cmc iret adc imul cwtl dec mov ja push and and pop iret jecxz sarb stos mov aas mov out loope push hlt add add cmp cmp subb je addr16 clc mov add fadds popf es movsl xor mov sub mov lahf push jae jecxz insl pop subl loope push xor add jnp lds (bad) sbb sti notl insl and ljmp (bad) cmp movd into insl mov jl insb imulb cmp mov xchg jne jecxz sbb dec bound daa push mov daa (bad) cli iret arpl jg adc mov xchg push orb aas mov shrl add add add (bad) hlt jbe imul add mull sahf jp cmp ret mov jl pop mov call sbb out aam mov xor std inc ja sub fcmovnb rcr push sbb xor dec dec scas icebp pop mulb icebp mov mov adc lahf (bad) push mov mov dec (bad) and xor fdivs arpl and and roll arpl jmp jb mov fcomi lahf dec insb mov add add rorb mov push adc sbb in mov adc mov inc ret mov outsl mov jnp mov (bad) or pop sbb and fimull push movsb enter andl (bad) or loope jmp cltd inc xlat dec lock shrb cmp sub adc sbb or xor or in cmp mov adc lods mov push leave icebp mov cmp mov inc mov aam and or (bad) add add add add add ror adc adc dec push mov loopne push cli js (bad) xor jecxz mov xchg leave inc fdivrs xlat daa xchg lea inc repz cmpsb in inc je test lret iret pop repz stos mov pop push dec sbbb mov lret xor mov sahf data16 push movsl sub xchg fbstp outsb xor mov xor fisttpll rolb xchg adc test loope int3 or out sub popa sbb fisttpl test dec testl add add mov push pop ds push sahf pushl add std pop mov push pusha push xchg pop loop adc fsts inc jne loopne mov aam dec ljmp adc outsl gs imul (bad) or pop neg into fisttpll sbb or jne sub pop and in inc test inc xchg ffree (bad) out divb push insl jo pop add daa sub outsl xchg fwait (bad) lods mov adc insl cmp add fmulp out cmpsl inc or out fcoms fmul movsb xor mov test pop dec mov jnp sbb in jp cmp aas mov scas add stos pop out and and pop ljmp aad mov lds in (bad) test mov pop mov daa outsb push inc pop cli adc mov or adc lahf adc inc jl cmpsb fsubl push out imul add nop xchg cltd push loope test mov push add push mov inc lods cmpsb sub stos dec dec test mov stos sbb int3 es mov cs pop push adc lea cmp or cmp adc add xchg jg mov dec movsb dec iret mov pop daa jmp outsb mov aad out jo test data16 cmpsb mov xchg imul (bad) out call aaa in lock inc adcl xor add sbb jl xor mov pushl loop add push dec ret xchg push adc jge xchg out cmc jb add add add ret xchg push cmp stos repnz xchg cmp fidivl inc scas or hlt pop pop (bad) push icebp dec mov adc (bad) clc cmp inc imul push movsb (bad) sahf inc and pop out fdivrs mov jle cwtl dec shr out mov frstor stos mov aad (bad) std lret test xchg dec bound mov xor into jmp enter int3 sub lret jecxz popf mov inc xor in std shll add add add pop push xchg in test fadds loopne lds cmp int3 jge mov lock loope pusha dec xor add mov (bad) mov fstpt push adc adc popa les daa fs pop loopne ds into in aaa out (bad) js iret mov fldenv loope xchg jnp pop dec ja mov mov pop cmpsl sub test pop shrl jo adc clc sub enter ss ret push fwait pop fsubp pop pop sub add add mov inc add clc in ret and aad ret lcall subl push jo ja fwait mov dec aad stos jbe mov stos dec mov mov in sbb sub int sbb sar divb data16 push xchg in add repz and push lods dec fs mov movsb dec notl out cltd sub iret mov mov mov or add cmp jnp xlat insl inc cltd aas mov imul lock add add add mov cmp test jle or cmc adc ds jne les xor iret aaa les add (bad) aam mov addr16 and (bad) cmp xchg lret mov adc pop jno adc test xor mov xchg dec int or mov inc adc pop (bad) repnz lods daa and fs mov addb nop popf and and fldl2t fidivl sbb sbb xchg jo cmp add add add jp bound stc cld mov mov cld jb mov push clc add push stos mov ja sarb jbe mov (bad) (bad) pop lcall inc insl sbb dec xchg rolb rolb loope aam std mov mov mov data16 inc lds rclb inc push stos adc inc add mov shl inc outsl sub add mov jb out (bad) out clc inc add or nop mov aas daa jb push (bad) fadds aaa loopne push sub xchg cs add add add add in sbb sub push push inc push add (bad) jg (bad) xchg xchg push dec cli mov pop std testl jecxz xchg mov push std xor jge jge leave adc mov scas orb mov jo cmp xor add pop mov out xor inc mov adc test pop xlat lds mov enter mov (bad) shrl lret stos in adc push or fwait out cmp nop roll dec adc arpl test jge sub test ret arpl popf inc push cmpsb or jnp push cmp push xchg xor cmp pop fstl push mov jmp popa fistpll lods mov aaa pop inc xchg pop mov ret sub das adc stos fstpt dec mov mov into pop pop xchg sti mov out xchg pop sub test mov cmpsb out inc or or jge fwait add pop sahf js dec pop jge cmp pop mov leave xchg add add add aas inc xorl inc sbb mov fs add sbb mov adc add jg scas (bad) jne scas add mov jmp and fucomp loopne add and movsb scas pusha test call ret xor jno aas mov mov dec sub xchg in xchg and mov (bad) lcall das xor pop call cmpsl cmp jle inc push cmp addr16 mov or mov add add add in mov iret out cmp jp jp addr16 pushf inc and rcrl nop xchg out clc mov jne scas jecxz outsb imul jne test adc aad popf dec pop xorb sbb jle cs cwtl dec xor mov leave pop lcall pushl test ljmp mov icebp mov (bad) push jmp mov sbb loope rorl push mov lods push and dec push sbb fs add add add stc add popf inc cltd jae outsb mov push adc ja cmp pop mov add push ds (bad) dec je pop hlt pop xchg out xchg (bad) jle or andps shrl mov jo add push das cld std fbstp sbb jg jle dec pop jg mov js lcall sbb hlt jmp pop fldt scas cmpsb push stos int (bad) jmp pop sbb pop cltd out adc scas mov jno xchg (bad) mov and add add add sahf movsb pop lock pop sbb lret cld and jp bound mov sbb adc gs sub mov ror jp data16 jmp cmp mov pop sub add int3 test xor jnp dec loop adc jne cmp xor lods cli cwtl mov push into cmp push mov mov das imul hlt incb outsl bound data16 push jnp jo hlt xorb (bad) jne xor jle shl aad aam add add add add mov (bad) out dec jmp sub outsb outsb sbb sub (bad) dec ja inc inc das stc out pushf mov inc out popf test out std and sbb or jo and fs add int sub sahf xor jo add vrsqrtss (bad) push movsb pop daa movsl mov sub and add sbb outsb sub pop sti push or sub add cli arpl xchg dec sub insl pop cwtl negl adc pop aaa outsl lahf xor into cmp scas sub or fwait push xchg cmp mov out push push cmc (bad) es fwait mov ds gs aad (bad) fnstenv push inc sbbb shrb jnp (bad) icebp scas call jb leave mov mov enter sub add inc xor nop sti pop addb movsb mov in repnz mov dec in cmp in jnp rcll xor out cmp repz shr jnp xor incb add add add add adc outsl mov sarb rorb jns mov push sub lds inc adc jmp insb lret pop sbb imul pop loop dec popf cmpsl adc adc mov ds int das (bad) rorb xor aad and dec ret movl mov pop pop ret xor mov shll aaa iret pushf sbb jl jae addb inc fdivr (bad) add int3 jge mov daa popa out sbb mov setno pop sbb (bad) jp cmpsl orl jmp shr sbb imul adc xor dec sti (bad) cmovnp push pusha sbb mov rcl jp in lcall std fistpl inc adc lret idivl out jne cmpsl cmp push inc mov mov aaa pop dec rcrl clc (bad) jge or adc jns daa pop inc dec inc icebp mov frstor adc sbb mov (bad) leave add add add add cmpsl into daa push push xor dec iret pop push sti lods outsb sub aaa or out pushw (bad) push jno adc push jle mov (bad) ljmp stc insl cmpsb dec xchg aas in mov jnp (bad) popf sti gs mov cmp outsl or sub nop jne aaa mov pushf incb sub popa test add (bad) daa test cmp inc inc ficomp dec fbld pop mov push jmp insl xor jl shll fwait mov add add cld jnp and aas cli lods sahf rcrb rcrb pop xor jbe lods jb fistpl sub inc repnz in cmp push mov add int3 jae shlb popf lret mov sub cmp push pop xchg lock lret sub push aad mov sub push dec add lret fiadd jp sub das mov pop mov (bad) or cmp faddp adc cmpsb and and xchg fcom loop mov jns push and adc or sub xchg mov ds add add cltd xchg ljmp sub fsubr xchg or mov lods scas cltd cwtl push jbe daa (bad) icebp xchg es sbb outsb stos cwtl or insb dec nop jae mov outsb test in pop or cs test repnz lea push out roll or add fs je cmp lret adc mov jg mov xchg outsb mov leave push fidivrl iret sbb and add mov sbb inc xchg addr16 cltd lret or and lcall add add mov test outsb fisubl push test jno stos push shll in jmp dec movsl lcall add mov aas mov pop stos and jge decl jg adcb adcb js sbb pop adc sbb test in test pop jb mov out add lods inc aam xor pop sti cmc insb pop mov pop in ljmp add sbb cmpb ljmp outsb jge rorb aas (bad) in add add add add adc push call inc nop inc mov fildll std mov icebp or adc sbb adc inc add add addr16 icebp cltd rclb mov add dec push xchg lahf mov lods stc pop fldenv arpl jns pop xor mov rolb shll (bad) mov inc repnz movb inc pop inc jne jecxz dec test in cli push mov and je dec sub push inc orb inc cmpsb int or add add add mov add mov divl scas cmp or jns push cwtl hlt mov dec ja mov add fsubrl dec push mov enter add and (bad) aaa imul xchg pop fxch lcall ret or cli test insb add jae cmpsb push dec mov pop or hlt in rcrl ljmp js in (bad) jmp insb test hlt dec push sub and sti jmp or add sbb add add add add mov mov and lcall pop mov rcr test movsl cli imul cmp mov dec xchg and xchg out push mov std ficoml pop cmp cmp xorl imul ds fidivl push lock mov sbb sub out sbb mov jecxz shrb sub dec pop insb (bad) and jmp and sarl in fisubrl in sub (bad) adc test rcr cmp int (bad) js sbb loope or sub add loope,pt rol into sub jle fwait xlat inc mov into pop push aam pop sarl inc inc out mov push lahf xchg pushfw xchg jns rorl sub rorb (bad) int ja mov push cld sub xor cmp mov out aad jmp stos inc mov cmpl jmp or mov dec jecxz add scas lea popa or add add add add (bad) addr16 push pop es cwtl stc xchg inc rclb inc insl push or dec lea and cmp popa in mov in inc xchg pop test push cmp scas movntq out pop insl rcl js dec pusha push or mov adc pop stc negl lahf ja lods mov repnz clc sub or into pop repz pop push ja dec sbb push scas mov aam stc lcall inc fwait dec pop xor jns icebp pop adc xchg ja stos lahf stos pop pop sbb mov sbb jg add add add add aas mov jno push shr scas xorl cli jns pushl cmp outsl xor and jb add andl dec ljmp push fistl outsl sub cmp es sub sahf ds or mov out dec sbb mov (bad) shrl leave call iret (bad) sub frstor nop mov jae test cmp les int3 addr16 cs mov frstor pop stc xor cmp adc or jbe test add add add fnstcw adc rolb movsb dec jo repz dec out mov das mov icebp lahf fcmovb lock inc test adc (bad) xchg stos int out inc and inc pop mov or cltd and or insl push enter leave cld pushf xchg mov mov cmpsl out aad push je sbb leave repz push cmp cmp stos add arpl aas cmpsb cmc push sbb pop ljmp cmp (bad) in js jb mov std mov push stc jge add add add add add mov popf inc cmpsb scas rolb dec enter fidivrl xor cmpb jb jl lock jo les jp push add jo lds ds roll xor stos add inc mov cmp jmp mov hlt aad enter cli xor mov addl or ret adc xchg adc pop cmpsl mov inc movb lcall mov cmpsb add sbb rolb xchg arpl adc dec add add add jle jo jle pushw stc sub popa cmp sbb jno std xor add mov imul push mov push rcr (bad) mov stos xlat or mov mov jecxz jle push mov insb cld jno ficomp cltd pop es mov (bad) ja cli out mov cmpxchg (bad) adc aaa movsl scas je jl cmp lret adc mov push jmp call popa lret mov int add mov lahf dec push imul or cmp add movsl popf mov mov mov ret cmp outsl pop hlt (bad) mov loope jno add add jns es cld or sub sub scas (bad) (bad) mov adc das lea repnz lahf pop mov xor sbb cmp dec out lcall push jmp (bad) jne jg fwait xchg adc mov and enter imul dec imul dec or sub add add add add push xchg and (bad) cmp push lahf imul ljmp fadds mov jmp adcl out push iret pop mov dec popf sbbl and mov mov sbb js,pt mov ret rcrb pop js mov adc aad lret imull pop push fcomps push xchg add mov dec jl cld inc jmp movsl push or in mov jl inc loop adc or add add add cmp jle lret fs pop mov adc adc cltd mov jp ljmp andl mov test adc cltd jb sub xchg popf or inc fs js sbb sbb pusha bound push imul xor lock faddp mov inc lds fwait inc rcrb rclb mov shrl xchg cmp sub xchg sbb pop adc aaa pop lret movsl int3 and push aad rorb add sbb fsubl pop popa dec and inc jmp mov mov movsl aas (bad) jnp in jge flds jnp (bad) mov in sub fist lret lods push pop (bad) in aam cmp jnp xchg dec pusha or dec mov in lock (bad) and out pop xor dec mov jl push add mov jo pop aaa imul leave pop xchg daa psraw out imul ret add add add add pop pushf push cmp and int3 bound imul inc xchg xor (bad) jno pushf mov mov jmp ficoml ret js cmp fild out push fs dec lcall xor aas cmpsb fwait add pop mov sub mov jge cmp hlt daa jmp and addr16 (bad) fmuls repnz push and xlat mov jae mov aas mov xor mov mov mov mov add add add add add fldl jo stos add mov and add ljmp mov mov push inc add sub push daa loopne ret add jo fildl dec push dec test cld dec popf fisubr imul push mov test xlat das dec in adc and or xchg incb cmp or sub leave dec sbb jge and dec out xchg mov push negb call incl adc mov cltd inc push in adc mov (bad) in movsb (bad) lods pop or icebp mov fildll xor xchg xor in jg dec test xor xchg mov leave mov dec out imul gs arpl mov add jbe repz mov and pop lcall push stos xor aaa mov cld push jns jnp movsl sbb ja or mov add arpl push inc imul ljmp lock and mov data16 and add add movsb lcall prefetch or xchg shrl pop test repnz jp or das xlat popf out mov cwtl xor pop lret sbb inc mov dec sub rolb fwait mov out or pop inc or inc push stc push sub clc xchg cmp jecxz xor add in xchg push (bad) pop std cwtl xchg arpl pop rclb rclb add stc rcrb test divb jl xor lods ja mov ss mov inc mov xor add add outsl cwtl xor xchg cmp xor mov pop outsb rol adc mov imul sbb sub bound lods mov ja dec push (bad) lret cmpl lock sub cmp mov rcll fiaddl lock sub (bad) mov cmc pop jmp pop inc cmp icebp pop out aam mov push or cmpsb mov adc sbb popf mov es fisubr xchg sub push adc pusha sbb ljmp pop add add add add clc or add ljmp jl movsl adc in push sbb jne lahf in imul mov mov insl out pop adc dec fbld js jmp into push out jg dec adc push mov dec mov movsb fs mov pop sub xchg add movsl push lods cmp sahf and cmpsb jae popa lret sub or je cmp pop and rolb sbb xor add add add (bad) loope aad sti dec and mov stos pop rcll inc outsb pop jno iret mov inc js aaa (bad) movsb mov jo adc mov lahf les pop scas add dec push mov arpl popa lock aas sti fdivs cld inc inc dec mov mov (bad) jp push lret mov pop sub lret mov insb repz adc and mov sub cmpsl adc sub adc add add add add mov inc sbb push jge sti stos xorb inc sar outsl cld sub stos pop test pop xor adc xor movsl fisubr addr16 shll xchg sbb xor fisubr jge fisttpll push push mov xrelease aaa js (bad) dec out mov loopne cwtl inc add insl push cmp xchg inc cmpsl dec jmp mov jae jne mov stos xchg sbb stos popf mov xor out (bad) in cli clc es cmp pop mov add out inc lret lea add fdivrs jge loope sbb stc jge mov and sbb xchg jecxz,pt (bad) fcomps lret mov test icebp mov cld dec pop fbld icebp cmpb out pop imul rcll and aam mov out bound jecxz leave out or je lods sub and push int3 add mov lods jnp jg or int3 jo xor scas das jmp jnp popa mov sti dec adc inc test ret stos sbb arpl push popf lret or xor rol inc lahf (bad) jb pushf scas jb add es (bad) gs jle inc adc xlat mov pop mov lret add mov mov xor xor sub adc mov push mov les pop fdivrl pop xchg repnz out in repnz sub pop and push scas out or inc push mov xor lods or in shrl fdivrs inc lret das push push sbb xchg (bad) push and icebp add add add xor mov cmp dec and fcomps (bad) movsb out mov popa mov inc popa push adc mov mov xchg es mov adc call inc push imul mov fwait loope add das (bad) jge jp inc je subl push cmpsb (bad) leave push stc lahf (bad) push adc adc mov push pop test (bad) pop lods pop sub inc addr16 adc sub addl pop iret stos xor (bad) push jl cli xchg add add add add adc loope scas dec mov sbb sbb jecxz jne adc pop (bad) leave sbb xor arpl ja inc scas in lret iret je sbbl lahf stos nop adc pop mov imul leave sarl rorb and pop sbb leave cmp xchg movsb mov or and sub sbb mov mov cmp mov mov pop (bad) aas sti stc pushf xchg jnp xchg jbe sbb cmpsl pop (bad) jmp call cmpsl push mov add add add aad dec adc dec mov je cmpl lcall mov roll pop pop mov mov sbb pusha add aaa pop mov mov loopne push and mov cwtl aam ds mov mov push cmp jnp imul dec lahf xchg add clc sarb (bad) pushf add or pop or imul mov stos xor imul pusha cli jge data16 add add mov fwait mov cmp cmp mov in mov lcall jb xor add push mov xor xor in nop mov mov ss popa out clc in cmp inc and fcompl push ret out repz ds jmp (bad) inc imull and test mov outsb es xchg ficompl pushf cmp xor stos lock (bad) jae in ficoml scas cwtl insb push push pop test xchg add add add add dec pop cs mov int3 mov pause add cmp test xor popa and push shrl nop and mov repz cltd sbb fldenv dec push mov cmpl adc lea xor cmc in dec loop inc pusha pop out xchg jecxz sub ja sub in mov dec ljmp sbb fwait push les xor mov cmp fwait add add add sub cmpsl rorl subw or scas fs mov xor mov imul shlb jb xchg push (bad) push scas inc int3 or pop sti cltd pop sbb sbbb and ja xchg lahf mov or enter sub xchg (bad) rcrl aad mov or inc mov inc pusha fisubrl lret cmpsl shlb popa inc dec jge rorl mov add add add pop les mov jg pop add push lcall mov es cld and xchg mov lret xor or xchg sbb (bad) mov add lcall pop stc push xchg jmp loop in ret inc xlat dec jmp int3 or sub push cmp je arpl mov jns fcmovu xor lcall popf call mov jp popa jg daa or cmpsb out or int3 ss push cmp (bad) repnz lahf arpl imul add add (bad) repz jecxz mov inc out (bad) mov inc scas adc cmp sbb mov jp iret mov into mov add out mov loopne pop ja or mov adc or shll (bad) fidiv push sbb into mov out sbb dec fnop stc jb jmp pusha insl rcll mov mov mov cld call cltd push cmpsb cwtl jo call jae daa cs das mov int3 dec mov (bad) mov add add imul mov xor out adc rorl addl movsb xor das aam in add sbb push xor mov inc pop outsb fdivrs and repz lods mov xor pop jecxz mov aaa and cmp sub jnp mov lcall xchg (bad) cmpsb jp pop mov mov outsl stc std add sti cmp sbb dec inc fstp incb cmp inc cmp pop enter or je jnp jp test mov lods dec mov add or shll inc imul inc mov cmp xchg add add pop add push dec lret xlat insb jbe popa scas jne push sbb or lret sbb inc sbb in outsb (bad) icebp fcoms insb clc scas dec adc ret outsl je pop dec in mov cmc lea pop xor mov cmp or movsl mov inc bound daa sub inc out out inc xchg jecxz adc in pop in in stos out mov mov ds fs jp movsb mov add add (bad) dec scas xor fcomps lea imul jo int pop push xor roll mov jbe cmp mov inc pop cltd sub jge xchg insb ljmp hlt push inc inc xor cmp mov inc sub xchg sbb cwtl test stos xchg or jle adc sub (bad) sub inc xor add test hlt adc mov mov pop cmp cmp pushf fidivl hlt hlt push dec and (bad) pop push rcrb add lahf inc dec dec shrb cmpsb stos nop sbb sub into mov repnz jge or arpl jbe fldenv mov mov es mov stc xor pusha sbb xchg pop leave mov dec inc imul sub cwtl lcall sub mov sbb and xchg lods les out push pop mov lea adc dec stc sbb movsb outsb cmpsb dec pop lret mov xchg iret ret repz lock add add push lods and lods adc sub xlat out jg fistp add fwait mov mov inc cmp jo add cmp cmpsb cmc or push or movsb inc pop imul push or adc sbb icebp mov hlt sbb call jne pop (bad) mov push addr16 in xchg insb mov idiv sub mov loopne jo add and sub adc out arpl jo pop out jmp fld fs mov mov add add add aas ret aas adc aam xor jge je sub mov fcmovnb inc decl mov cmp and loop xchg mov dec iret xchg add mov ss mov xchg scas movsl fistp mov jo pop sub sarb xchg jle js scas mov cmp outsb push mov mov lods xor cltd cmp negl les inc scas jecxz push push (bad) mov mov cmp jnp add push adc andl insl xchg pop adc mov outsb mov inc inc mov push push xor movsl rcll jmp and inc xchg or mov fwait mov data16 add sub mov into cld jmp fcoms push lock jge outsb andl out inc dec xor push push lcall or inc mov popl cmp sbb xor mov push push (bad) pop (bad) out push push movsb lods jns imulb arpl adc add add add (bad) xchg dec iret mov rcrb sub inc sbb icebp mov out xchg mov jne repz push add test inc pushf cmp xor push jle lea out dec xchg mov push push call aaa dec out pop xchg mov cmp aam movsl xorb ret shrl lea xor ljmp cmpsl insl enter out ja inc in and xor sbb push notb aad xlat cli and test mov push lret out jbe add (bad) nop xor lahf (bad) mov mov xchg mov push mov outsb ds and fmuls sub andb adc cmc adc or and sbb push popf cmp repnz pop jbe pop lock (bad) push loopne addr16 dec cld ficomp daa xchg iret pop movsb add mov mov xor out push test pop fucomip stc pop ja inc fstl (bad) mov add and iret ljmp cmp adc xchg cmp pusha lahf mov add in test push scas les or xlat mov sbb popf pop add fs imul xor sub rorl inc add xor add mov or dec pop jb,pn push xchg sahf sbb (bad) das adc pop stos mov addl xor or bound sbb push lock mov test mov int imul into in cwtl push scas add jmp push or push add cmp cmp add add pusha mov jp add add add and mov and (bad) je out in mov xchg cmpb lock sub xchg ds push cli imul icebp ss add adc out xchg sub fldcw sub adc sbb dec gs sbb sbb inc iret in pop mov xchg add ret lock ret adc adc pop add pop jmp sahf sar into insb pop pushf xchg fsubs mov sub dec jnp gs push sbb add add add (bad) dec repz (bad) mov xchg and cmp xor inc sbb mov outsb insb (bad) cmp or scas scas pusha push add xor xchg inc push je outsl jb mov mov pop lea in js or or sub mov xchg adc cmpl and adc sub lea dec popl cwtl inc les jp (bad) sar cmp cmp adc call adcb add add add add jno scas jl (bad) in (bad) or aaa std mov dec xor (bad) mov pop mov add pop mov mov or pushf mov and mov mov xchg push call dec loope leave add negb mov aas ret jbe push call daa dec push test rolb mov sbb push out lock leave das clc jecxz cmp push les mov shl out ja cwtl fcmovb sbb scas imul cmpsl dec jnp loope out les jno pop lds scas dec inc and testl add (bad) xor aad stos dec sbb stos in jp bnd mov pushf sarl imul mov lock mov add sti or les or pop jo xchg std or cmp sahf das (bad) cmpsl jmp and clc mov ret sub sahf (bad) out mov aas sbb (bad) out or fmulp mov mov add add add idivl xchg in sbb mov mov mov into inc lds ror out movsl fdivrl out pop jl sbb sbb aam dec xchg rcrb out negl mov cmpsl mov dec clc out adc out or dec popa jne shr push inc fcompl mov and mov or ja inc xchg out add sbbb ljmp cmp push dec inc cs sar cmpsb jge pop add ljmp add add (bad) cmp fist or lock lahf xchg or dec lcall popl sbb (bad) hlt inc das pop cmovb cli push inc push pop in sub xor iret aad jecxz loope cmp (bad) jae loop mov fsubl pop adc push sbb mov jb je pushf mov cmpsl jns push movsb add xchg pop sbb outsb xchg cmp divl push lret add fisubl aam pop inc in loope add add add or push jmp out push decb idivb repz add dec jge (bad) daa cld dec dec and xor lock addr16 push leave pushf sbb daa inc adc lds push cmp and inc cmp mov negl cmp sbb push cmpsb aad mov aam leave add ret cmp mov push dec in cld je add stos ret pop les je inc ret mov test cvtps2pd inc faddp pop call (bad) pop arpl ret xor ljmp xchg movsb insb cmc lret cmp pop xchg (bad) pop (bad) cmp and sub mov or dec pop xchg shrl and xchg fsubrl mov and jle push xor loop push fisubr js push push aad lea and das and js rcrl dec hlt int sub inc and clc popf out pop scas xchg mov jg int3 (bad) movsl jle scas clc push (bad) mov fucomp fbld sar xchg sub je pushf xchg pop test add add add mov imul fwait add xchg fdivrl lret rcll inc js ja fnstenv aam pop push loop inc dec std mov cmpsl mov push pop cmp lods and dec jnp fdivrp xchg ror dec stc mov mov cmp mov subb sahf inc dec adc add sub inc mov lret mov in jnp movsb jns adc outsl sbb push ficoml popf mov mov (bad) mov mov mov mov clc ja sub mov jle movsb pop or add add jge cmp push and fs xor cli popa pop fiaddl enter cld loop xchg adc inc inc lock dec push cwtl inc test imull dec push stc cmp sbb cli inc das sti fdivrl sub push lods pop jge pop loopne adc pop pop xor push xchg rorl test jbe inc divb pop cmp addr16 mov mov xchg jp xor mov xchg dec scas int ds add fldl mov int jmp mov add jo pop movsb cvtdq2ps in iret popa jmp jp xchg pop mov or test adc ja sbbb pop xchg cmp jnp cmpsb aaa add int and cld mov mov sbb subl xchg inc in jne cld dec mov js push in jo jp cwtl cmp mov (bad) pusha js ljmp pop cmpsb inc mov or sub sbb icebp iret fld lods inc nop mov mov popf lahf mov call push cmp add add lods dec sbb int sarb jbe ret mov push arpl xor or mov push sub add lds in adc repnz das test lcall (bad) xor dec mov lret fildll push aam fnstcw je fldt dec xor jl repz or pop cwtl cltd inc add adc popf and popf jp mov test dec stos popa dec xchg xchg lret popl das pop lods push pop subl push add add out or adc pop inc and scas test test push xor mov lds into imul sbb ss jp aas xchg fidivl test stos daa fiadd cmpsb out stos fstl sbb or add adc inc add out jp stos pushf xor and xor fist sbb js mov jo fcmovnbe repnz (bad) xchg insl std xchg cli pop popf in mov test sbb mov add pop mov adc push nop cmpl ret push dec mov push dec iret push cmp inc cmc mov sar sub or adc and (bad) fbstp jae mov notl mul repz dec (bad) xor out sub (bad) out (bad) (bad) stc mov sub dec fnstsw outsb push cltd je outsl popf cmp mov addr16 xor and fcomps or xchg call into daa jnp mul adc movsl imul in add add add add push (bad) repz dec fldt shl out imul inc test mov sbb sti outsl out and and jl leave sbb or bound cmp pop inc sbb bnd push xchg mov push mov jl loop xor mov (bad) cmc and adc aaa int3 mov or sahf lret scas jbe daa js or xchg dec ret ljmp leave dec stos or jmp add jbe (bad) xor cs in mov das jp aaa imul inc movsb fucomip pop ret add add add mov mov ret jo stos addr16 arpl leave dec sbb ds pop jmp add xor and adc mov inc int3 sub movsl or xchg xchg pop add pop repnz insb out pop inc push int3 mov and movsb inc in pop sbb push sub rcr sub dec adc cmp push outsl cmc xor xchg out push or dec sbb cld sahf xchg sbb pop rcrl cmc or add add add add xchg ss int mov loope mov pop xchg clc xchg sub xchg (bad) hlt sub stos (bad) push xchg sub insl lcall out repz jle test push aaa pop and pop cli dec stos xchg outsl in pop clc ds mov mov test rcrl fs repnz dec jno scas inc add cmp xchg int3 xor rcrb add ret jp scas sub xor add fdivl pop or js inc fnsave add add add jg bnd lock sbb cmc mov (bad) subb pop xchg dec fwait jns cli cmpsl ljmp xor xor lock fnstsw cmp or jg inc pop pop push fsubr and out dec (bad) lock out cld lea mov mov push scas sbb dec xchg cwtl ret dec movsb adc jnp fcoml jecxz add push inc mov shll and jmp or movsb mov jmp jg cld jecxz sti inc xor cmp mov fcmovnb test aaa lcall jg sub cmp stc or leave into sbb int (bad) mov mov (bad) add cmpl or insl aaa out out dec push xchg lcall jmp ds xor pop daa add or xchg and xchg (bad) clc mov dec mov mov sub repnz mov mov mov mov sarl or fcomi xchg lret jmp movsb rclb adc enter pop int3 mov fwait popf sub add add add js sbb mul cmp decl jb mov nop adc out (bad) jmp gs add cmc in xchg stos mov jns pop xchg inc adc mov mov and pop pop faddl popf cwtd push dec (bad) xlat and daa xchg leave cmp sub cmp sbb xor add nop mov pop jb cmpsb or fsts inc lret fdivrl loopne aaa inc lods xchg xchg daa cltd lahf adc subl lea popf mov add add icebp jecxz push jne inc add jl out fs jp mov addr16 and js jle cld ja (bad) scas adc cltd iret fsts fwait call push arpl mov (bad) push mov rcll jl cmpsb adc mov gs cmpsb out lret xchg mov mov cmpsb icebp push dec out insb stos sub mov cmp lret repnz out add adcb in fnstsw das in dec or movsb mov mov inc fstpl xchg rorl inc mov add add add jl or fwait lea test nop jge xchg (bad) sbb jno sbb jge sahf loop jecxz sbb fcompl cld sub in mov shl daa icebp inc add pop sbbl dec scas es enter sub jno xor aas jns popf into xchg mov or sbb push xchg jp dec out cltd in cltd dec pop ljmp ss loope lcall jae test jb lret pop lods sub cmp xchg add add add sar xor mov ljmp fstpl push (bad) jb outsb out icebp fs mov (bad) movsl daa insl or adc loope jl int3 gs push mulb fdivs into add lahf mov loop xor mov jl and or daa fs add lret mov ret xchg pop (bad) sub xor xlat ficoml arpl shll cmp pop mov stos xlat push aaa xor popf movsb push or add add add xchg ss popa push cld xor push in lds xchg jge xchg adc pop and sbb (bad) xchg push orl inc dec dec or jmp sbb les cmpl xlat loopne fsubrs jl dec js jge push popa inc mov mov push div (bad) je mov or push add mov xor xchg mov aaa mov push or mov pop in inc ficoml imul add push sarl movsb sub mov push (bad) arpl sbb (bad) arpl push pop xlat cld adc mov pop repz lret or mov or out and in jns add test negl push jmp cmp mov jmp sub mov aam push mov ljmp (bad) mov into aam leave out repnz ja push or mov jnp lret xchg lods cmpb adcb std ds or cmp adc xlat sbb inc sub in sub loope push fbld pop xchg scas xor stc mov fisttpl stc in xlat repnz add sarb dec das clc (bad) dec jne inc dec hlt out jecxz,pt ss pop mov cmp xchg into cmp fcomp aaa in jb aaa pushf (bad) jg xchg mov xchg cmpsl sub loopne ljmp ret test inc ret inc pusha daa fcmovnb xchg mov fs stos outsb call cmp fdivs in inc inc pop or repnz add add add popf add push outsb dec xchg aaa ja dec inc arpl mov mov sti pop inc fs pop push lods inc (bad) xchg pop jno fstpl lds dec pop movsl xor dec popf xor into cmp xchg jb adc stos fmuls pop fs gs lods or fcmove sbb in xchg out repnz xchg out pushf dec jb in jo add adc call ret xor pop xchg pop lahf xchg jo out pop mov out insb add push cld mov xchg cwtl popf xchg insb add call add add add adc gs lret sub outsl mulb adc lods fwait lock popa rclb xchg lea push sbb pop mov add cltd dec addr16 sub sbb mov mov aam push mov push cs insl (bad) lahf fcoms pop leave inc cmp sahf test mov int sub lods test fwait cmp inc mov (bad) das xchg xor (bad) mov int3 test add mov pop andl mov add add add xchg das test in jg push mov xchg in push out sti pop cmp cmp lea cmp (bad) dec cmp xchg sbb (bad) pusha sub test dec out pop add sbb in mov xchg inc and notb cmc mov aaa pop subps add push das jne mov adc mov pop xor xor push or xchg or cmp mov jle movsl inc xchg adc xor sldt add add pop pop iret jno inc add jmp or jle mulb adc push mov mov or sti and jecxz dec test sub fbld and mov sbb insb lret and call mov inc fcmovnb pushf push add hlt jl and dec lcall test mov mov xchg sahf loope xor dec sub cmpsb inc call jg jnp xchg insb cli mov add add add push fcmovnu std mov push and fwait movb ja add mov lret xchg cmp adc iret sub insl movsl dec cmpsl insb push movsb test sbb insl rcr mov xchg sahf rcr push gs cli mov push or cmc xchg and or mov push rcrb stc fdivl fcompl dec out xchg aas lret and vmwrite inc mov outsb xor shll or push leave test fs add mov add add add mov enter rcrl inc mulb jge inc adc jmp xor daa jnp jl jno addr16 cmc sub (bad) jae push and jno popf out xchg pop xlat aad cli jno rolb or mov cltd mov stc (bad) push dec sub and outsl xchg popf inc (bad) mov out int3 ficompl (bad) (bad) ljmp mov shrb sbb adcb jne add inc in cs stos bound pop jo mov add push add aam test mov push loope js cwtl sbb inc or push dec mov aas mov outsl ss sbb sub sbb lcall fisubrl rcr pop rolb mov fcmovb test js xchg ret inc in iret dec (bad) sub xlat jmp scas mov dec fs sbb cli cmp sbbl cmpsl loopne (bad) xchg iret loope out dec fcompl mov push int3 lock scas or fnstsw and xor in jmp fisub add fimul add add add sub ret call and por js push inc insl mov sti cmp cld lods xchg jb aas jne push lods stos das adc addb jge outsl frstor (bad) sub jno pop es mov and sti int3 int fs jge pop inc or push cmpsl (bad) sbb fwait push cmpsb pop mov test sbb push mov adc jns fcomps mov lahf imul push pop in fwait in sub or and add add add mov lods (bad) dec enter pop mov dec or sub insb jns jge aaa pop cld in popf or sti mov int3 or jge ja xor xor push mov cmpsb jns mov ljmp test sub dec es add sbb fistpll int3 xchg jb fs test je sbb ss dec (bad) sti sbbl roll pop pushf sbb rcll mov stos cmc cmpsl pop xchg mul sub sbb add add add scas jecxz inc pop sarl cltd mov mov aaa xlat icebp inc cmp adc xchg jmp mov fisubr push add jp pushf lahf inc push fidivr xchg or xor jo fwait sbb fwait jno push or push movsl inc test pushf xor movsb out xlat mov mov imul push xor mov xor insl mov pop in mov mov std sbb aad adc inc and gs jno icebp loope hlt aas push xchg or mov call inc insb dec push add add and pop mov xor mov jne sub xorl int cs (bad) enter and mov mov in xor repnz inc jae (bad) enter inc mov sti lock mov mov add repz jae adc add push push sub hlt pop movsl (bad) (bad) cmp out or adc inc push adc and and cmp loope lea jae cltd (bad) icebp mov add add add jno xchg mov adc adc bound xor scas jae jns push ret xchg test push dec (bad) jp mov pusha call inc mov mov push roll and imul cmc addr16 push jns add (bad) mov cwtl inc and push sub daa nop pop or mov push dec pusha dec cmpsl cmpsl std scas out daa xchg in pushf fsubrs shlb pop pop imul fldz mov jecxz ret mov adc add add add into mov insb push lcall mov (bad) mov js mov xor lds cmp and sahf fisttpll jbe,pt jle lock mov das icebp (bad) dec repz mov repz jns lahf fs pop mov (bad) and (bad) jns outsb mov sbb sahf adc or test push outsl ret cltd dec or rcl or ret inc outsl fldenv sub stos aad add add add adc rorl cli dec mov inc sbb fnstenv (bad) enter arpl xchg shrb and xchg iret loopne int aam ljmp inc movsb outsl arpl aas (bad) cli sarb dec (bad) lahf in fs orl inc dec cmp loope fbstp inc xlat adc xchg es and hlt pop jbe into xor inc fpatan enter stos in adc inc pop mov jb mov or cli aad inc test jg sub add add lock fstpt mov xor stos fs test fst aad inc bound ret clc ds or mov add or les dec fbstp cli cmp aaa ret sti dec (bad) mov in inc or mov fild imul es mov pop xor js (bad) jp hlt int3 inc stc mov or test fcoms rolb neg push fadds cmpl arpl cmpsb xchg aas adc mov mov fdivs cs mov add add add movsb sub pop test insb movsl push in xor shlb cmp clc mov add xor inc flds sbb fisubl icebp inc ret xor pushf scas imul cmp in sub ror mov rcrl mov cmp and sbb inc add imul mov mov out (bad) sub xchg movsb mov movsb insl push add add cmp in das jne cmpsb push cmp (bad) stc push insb mov mov add add (bad) mov shl dec sarl mov cmpsl insl jno cmc adc jge psrlw dec les xchg ss pushf mov iret cmc mov std sbb jmp push and dec inc mov or pop cmp mov sub cltd loop sub adc push into outsl in push popa and mov mov sbb or fidivr lahf stos mov xor xor daa xor lds fdivrl jge lea fbstp add add add addr16 or xchg cmp lods xor mov scas jae lret hlt sar scas divb fimull fsubp addr16 lods iret inc pop mov add mov cmp dec mov data16 mov xor cmp repnz arpl mov inc inc add cmpsb insl dec dec jg xlat addr16 outsb scas push jb xchg pmuludq out rcrb (bad) sub ret and popaw sub jne sahf sbb adc aas dec push cs xor mov add add add add hlt mov cli loopne pop adc inc cmp cs test pop cmp push movsl in lods outsl sbb mov mov cmp loop dec push xor push sbb dec fstl imul test mov inc scas outsb bound (bad) xor and push mov mov int3 push aad sbb aam mov add pusha mov (bad) mov mov loopne das push push enter inc add fs inc gs or or fcoms add add add aaa and pop and jns fdiv jecxz fdivr add fistp sti cmpb test inc or mov lods ljmp test push test pusha and repz inc cmc xorb pop dec inc fldl adc jo imul or sub pop sbb mov inc cmp add int es daa mov ljmp sub xchg sbb lret and das mov lods rclb pop popa fdivp fdivrl adc xchg add add add loopne push jne inc out loope add jnp dec fmuls test inc (bad) int3 cmp xor and lcall push push repnz outsl insb mov mov or jp add xor xchg and mov std xchg insl mov movsl cld add loope sbb icebp cmpsb push lret jno jnp lock lods or lods call cmp pop in std loope cli pop jbe stos ja push xchg sub add cmpsb push (bad) mov fmul fcoms dec pop push xchg xor mov pop and add add add add imul aam jnp mov xchg push sbb outsb iret movsl insb es mov pop out test mov mov outsb pop cmp outsl js lret rcr pop push add or inc lret and push js xchg (bad) mov cltd cmpsl mov sub jae adc xchg mov cmp mov lea popf inc cwtl aad idiv es addr16 movsl int data16 cltd (bad) orps pop push mov dec jnp xchg jae add add add inc jo hlt jbe (bad) aaa cmpl sub lods cmp out dec mov test mov dec sub and mov iret aad push imul dec inc jne test xchg leave pop add loope mov clc dec jo push push gs popa sbb lds sbb jl (bad) js mov (bad) in ljmp push lea mov mov ret xchg rorb (bad) or (bad) std pop pop out notb pop shlb add push inc sub mov das hlt lea aaa jl sub mov jo ficoml adc fs stc pushf sar mov addr16 dec xor xchg or outsl inc sbb (bad) xor sbb sarb and fisub out std outsb outsl pop shlb jp clc jmp lock inc xchg scas popf add jmp or movsb arpl or jmp inc fnsave rcrl loop cmpsb jge xor out add add add test mov sar leave ret fwait mov sbb fsubrs dec data16 jg movsb jecxz mov inc mov fstpt mov pop or adc jl out adc and iret inc mov ljmp fs or fs push dec sbb pushf lret nop lods push pop inc dec test dec push aaa pop cld or mov addr16 fisubr pop adc mov daa xchg sbb daa (bad) jae or add add add add push (bad) cmp mov addl fdivl dec mov pop pop das mov mov fstps ret (bad) jp and scas cld inc push jae loope enter loop aas mov sti dec fwait iret in push pop adc or xchg dec jecxz mov test or inc mov dec imul pusha bound ja fcomp sbb (bad) pop sbb inc push sahf fldenv sbb rorl out out sub jbe push or xlat pop xchg mov push xchg inc lahf mov (bad) add add add daa cmp fildll dec mov push jae add mov jmp dec or inc jmp or xlat push fwait inc pop lret addr16 inc push fcmovnbe push inc jnp xor push jns in fidivl sbb mov lods adc xor adc xchg push push push sub in pop sbb mov outsl fmul das mov nop or lret imul push fdivrs mov iret mov cmp rclb dec mov add add add add add mov dec pop inc movsb pop test popf xor into in test int3 push mov sub add ljmp dec lods imul daa mov arpl enter cmp push popa jno mov mov les mov lahf mov incb mov nop xor pop mov repz sub mov in sbb (bad) mov push or mov xor sbb mov add add add je out add mov (bad) jl push mov cs ret stc or or xor sti lea xchg adc mov jb push inc add push aad add cmpsl xchg int pop xor adc js xchg mov jge mov rorb sbb (bad) add arpl fcomp mov rcl jge and xor cmpsb xor sbb data16 fstps mov mov loope mov add add add add sbb push aad arpl movsb (bad) into cmpsl push (bad) pop cmp call mov jne jle xchg ss adc ret mov mov test inc push mov imul dec stos mov test push inc xor popa lds xchg adc or pop les inc fldt xchg repnz mov imul adc repz lahf js aad xchg mov cmc cmp sbb fsubrp ficom leave inc stos push xchg sub add add add xchg adc mov outsb (bad) inc push fwait push aaa dec add scas sahf sub mov jp push add add lahf and insb add dec sub (bad) jno push jbe jb jo in or lahf fnop mov adc addl fdivrs push inc xchg jbe jl push mov test or pop sbb mov dec xor adc shrl stos mov fisubl cld or fisttp adc add jno ja pop lcall lret or in jne jp outsl bnd lcall mov mov xchg sub stos and lret jp lock jbe inc fimull sbb cs cld fldl mov sub sub cs push or pop pop mov cmpsl lods inc aas cmp insb dec das lods out ljmp in in pushf jmp loop sbb scas or mov sbb (bad) aas sahf mov cmpsl (bad) sbb or fwait cmp add add add push inc xacquire ljmp pop addb mov iret (bad) dec pop aam xor xchg inc (bad) insl cs dec sub pop ror ds and pop mov cmpb cmpsl mov xchg int3 into frstor aad adc iret xchg xchg mov clc add or inc mov rorb or shr pop int out pop cmp inc push dec addr16 flds cmp inc sti and jge ljmp add rdtsc mov push jbe xlat adc aam aaa cmp add add add in (bad) or popa pop and jo jle jg andnpd jp rol pop push jp adc fs mulb lret pop fbld nop dec cmp arpl xchg or test pop repnz jmp jg sub dec xor in mov jns cmp and (bad) xor nop mov repnz mov jb in mull lods adc push or jb orl jns ret addr16 xor call xchg out dec or jo ret push cmpsb (bad) leave cld cltd stos je dec js add add add clc mov enter sbb gs lcall clc ljmp dec adc fisubr sub adc call ret jae sbb jo push cs add sbb xor jge out sbb push cmp lods xchg push cmp push mov mov push mov outsl mov adc cmp sbb sbb js adc js mov add mov adcl xchg loopne repnz jmp lahf adc jmp push add js cs leave int3 cmp out xchg inc sub jg sub push and xchg cld add inc xchg push xor push fnstenv mov xchg inc mov cmpsl xchg inc (bad) lock ret std test rsqrtps setge pop (bad) and xor das dec and xor je pop and jae cmp dec subl sti lods inc int3 mov adc jg jae sarl out out aaa call mov mov (bad) call fsub sub hlt xor mov std divb (bad) addr16 jecxz and push inc (bad) aam xor mov push pop mov xlat aad adc mov shrb mov (bad) aaa inc hlt stos imul pcmpgtw push test nop dec xchg or rcrb (bad) enter and insl mov icebp jne lods xor ret fwait out stc xchg push outsb mov fcomps inc xchg adc adc push or dec add add add cs outsb jp pop cwtl mov or pop jo (bad) test arpl dec mov jl lret push cmc roll adc mov pop adc fmull xor pop subl cwtl test cmp dec hlt push cmpsb or add and in (bad) mov mov shr je pop xchg gs test pop and scas jns xor stos dec (bad) inc xchg and adc dec jle cli iret or outsb (bad) inc mov cmpsb jle mov add add mov dec mov out mov scas add (bad) mov mov shlb adc mulb dec cmpl clc xchg adc xchg scas lea mov (bad) sbb aam inc sti inc insb and lods lahf test push aam fldl push jns mov xor adc shll popf in mov fist cmc dec adc scas ljmp incl dec mov es push pop bound rcrb jo adc xchg sub add add add ret mov or rcl sbb mov sbb ss xlat push xchg adc mov pop incb (bad) mov cltd dec xchg addr16 loopne bound adc int popf xor xchg or adc sub sbb aad (bad) in insb in inc xor pusha or inc mov out mov mov sub lea jge xor out inc test inc mov mov lods je ja add add mov icebp push or outsl sub mov into loope stc fldl inc (bad) adc fidivr mov xor (bad) xchg in in push pop inc or xchg out pop dec push ficompl cmp push aam cmp aam fidivl push xor stos sub mov in shrb dec mov popf fs popf (bad) lret imul add outsl fcoml mov call hlt and outsb mov add add add add fcoms fucomp mov movsb pop mov or ret inc xchg xor bound imul sub jns ja jmp and mov push iret mov loope cmpxchg xchg loope push mov adc pop shll (bad) push loopne fs xor mov lods pop fdivrp test add stos repz push cmpsb jmp movsl mov fidiv inc fisttpl loop or popf and or iret push inc cmp pop sarb ljmp add aad cs mov hlt xchg cld gs sbb outsl and aaa inc mov fisubl or or mov mov xchg inc mov pshufw jnp adc xor and loop or pop push loopne sbb jne jae push mov mov ljmp mov jge inc fsubl gs or (bad) push nop out xchg lds xor jnp dec add lcall sbbl dec inc mov pop je add add add add dec jno mov xor pusha mov jno rcl (bad) jne imul js sti loope cs push scas cmp fxch push (bad) add push test rcr or (bad) fisttp ffree cmp mov adc or int3 pop cmc xchg mulb mov fs xor (bad) add or mov cwtl cmp scas add sub sarb lcall inc loopne pop jp xchg lahf jns pop pmuludq or mov add add add xor xchg xchg je xchg fsubs mov ljmp fcomps or mov das mov gs iret add inc rolb fdivs loopne into hlt sti or pop scas cmpsl hlt imul jl adc pop adc mov cmp dec jnp mov nop xchg (bad) inc inc xor xor call cmp push push xorb lea xchg jecxz dec inc jnp ret lret add fs push xor inc pop mulb add nop roll ds mov test cs lret into call mov or push test mov push xchg fiaddl mov cmc lahf jmp es out loope inc cmp pop pop push jnp pop mov (bad) and notl lret stc mov cmpsl aam sarb or (bad) out xchg out xor jb stos mov xor or dec xor repnz outsb mov xor xlat mov ret imulb setge sub mov mov mov (bad) out xor cwtl mov mov pop jp fs stos data16 (bad) fsubl add sbb aaa dec loope pushf loopne popf xor xchg push icebp pop (bad) loopne test mov cld stc int (bad) and pop stc test dec cmp insl push pop mov sar mov inc aaa mov aad adc mov and jae nop pop clc out add xchg nop and xchg scas rorl sub movsl adc inc jg in xchg test xchg outsl jp xchg dec nop mov adc stos ja add add add xor int pop mov lods xchg and mov int3 (bad) jo fcoms (bad) aam pop and mov stos adc mov xchg pop leave push (bad) ret mov rolb pop mov sbb jbe cmpsb enter mov fsubr pusha sbb jbe mov pop cli lock rorb or fst pop mov pop repz sub xchg imul cltd pop lods mov ss xchg lea in les xor es xchg cltd xor sub fs in test fsubl sahf ret jmp adc cltd jne jecxz call mov (bad) fsubrs pop jle fwait push mov lods fs xchg or mov and (bad) rorl lock cmp imul xchg mov push seto in jbe les insl xchg flds pop daa pop lock pusha js push sbb mov andl in push inc mov lock pop mov add xchg das and in jle ja addr16 or cld sub stos pop (bad) jnp out lret xchg dec or enter xchg sbb fildl push xchg add fxch dec sub shll jmp mov arpl and roll cmp fwait adc int jne and xor dec test popa ja add add hlt cwtl mov cmp lock mov push sbb sahf mov (bad) into out sub add add cmp fbld cmpsb imul pop push or (bad) (bad) ss push bswap inc mov xor in sahf xor mov adc push fwait into leave add pop (bad) or or lret call xor es mov and xchg mov push inc mov (bad) hlt fucomi lods mov stos jge add mov sub jno rcrb loope mov mov push and sbb pop xor cmpsb scas mov out lock mov insb nop scas adc add loopw cwtl repnz push dec aam fnstsw imul pop jl ds js in nop xchg aam gs sbb add pop pop aaa test andb dec mov scas (bad) dec rclb aas in mov sti loope jg mov setnp and xchg in lods cmp cmp outsl imul rcrl mov mov push xchg jae in sar xchg je sub js repz adc sub mov inc lds xchg push fwait loop fldenv add add scas cmp (bad) pop imul movsb inc pop add jnp xchg lods mov aaa push mov cmp cld pop sbb popf inc jno mov popf or insl mov mov xchg xchg jl mov aaa jmp push loopne mov stc inc mov pop cmp mov mov rcrb or push fild and inc pusha mov mov cmp (bad) enter leave repnz mov jae loopne pop or jg mov sbb ficompl dec sub fiaddl aas add push push jne inc sub jmp xor imul fwait cs mov cwtl adc fsubl icebp in js jecxz ds sub cltd mov mov or sub dec mov xchg cmp out jge les sbb mov xchg push xor dec mov jg mov sub addr16 rcl jle cmpsl cld scas inc dec mov int and pop dec push mov les or mov popf (bad) jmp inc xor add xlat (bad) rcrl (bad) sarl jae insb das ja rcl adc in jae add (bad) out lahf (bad) repz pop cmpsb xchg pop dec or or pushf jge mov cmp cs mov push sub adc mov dec add xchg lds aad xchg stc mov dec loopne rcr or xchg lea notl sub inc cmp add aas add mov xor nop dec or loop mov jne inc bound add add add add and xorl xor xchg test mov (bad) mov cmp out mov dec cld adc daa es iret enter insl jge or das lds sbb mov fcomp push inc out dec lret pop adc sub loop push add push inc xchg imul loop inc xchg cltd mov inc test sbb mov push movsl gs nop sub sub mov xchg sub and sti int3 (bad) int3 jo loopne pop adc add add add jo xchg test or addr16 outsl imul xchg pop xchg add aas ficom mov sub fwait lea aad mov nop mov icebp outsl push out xor out out out movsb pop jmp jl add outsb dec push mov dec cmp popf jecxz sti int jmp fsubs adc xchg push mov xchg std pop xchg test mov mov lret sub (bad) mov sub dec fsts out add add add in add (bad) mov xor out cld loopne xchg push je xor dec mov cmc inc lcall lods mov adc push fs (bad) jno lret adc loope sbb adc gs cmp xchg iret repnz daa sub (bad) negl mov adc sbb cs inc ret sbb inc loope jno sub fucomi jno jp (bad) and xor jmp addr16 mov xchg loope data16 ss (bad) cmpsl cmpb pop ret testb add add add ljmp fimul cmp dec incb sti mov and sub mov xor add mov outsl sahf jge lret fucomip push mov (bad) jno mov cld mov xor cmp dec fsubl push int3 or orl and mov out and jns sub sahf out mov xchg test dec (bad) cmc pop fwait outsl enter lret and inc add mov popf sbb fwait mov or add add add add fsubrp cmpsb mov leave data16 in xorb call sbb daa push mov out popa dec aad adc je push xchg jp mov inc lods sbb leave jnp add mov aam inc das fidivl jns jge aaa inc push sub adc das xchg dec push mov cmpsl jns add outsb out test add sub dec or jbe dec (bad) jl mov rclb jp sbb inc push pusha xchg push outsb pop jmp in push dec sahf xchg fcoms push mov std repz add add lcall roll jge jmp push sub cmp sub (bad) ss dec pop call iret inc loope jg sbb je pop movsl (bad) repz sub loop adc popl jo insb xor xor ljmp xor js ret daa or das movsb aam push stc sub lds sub mov data16 adc xchg cltd popf fsubs jne fadds pop jae hlt cmp mov popa add add add add inc pop push cld into add sbb es aad and push outsb lret xchg adc imul cwtl (bad) adc cwtl adc mov ss dec pop or push mov pusha bound mov cwtl andps cwtl xlat adc out push fwait xlat sbb and dec in aaa pop test mov sbb and lea add push pop sti dec out ror test jno fcoml sub mov adc push mov adc add add add leave imul test sub push cmp pop sub clc xor fwait decl xlat dec mov jns sbb pop fiaddl dec rcr scas sub jecxz sub xchg shl mov push dec (bad) adc and cmp mov mov int3 lahf clc ret scas fwait xchg mov fdivrs sbb (bad) out push xchg jo push daa push jnp push mov mov mov cs in call jae push rcll gs cli xchg cmp test add add add push gs sti xor mov xchg or sbb cmovg xchg mov xchg add and sub dec fdivrs xchg outsl mov xor sbb cmp (bad) and xor jbe cmp add sub leave jge mov testl dec mov icebp fsub out repz cmp cmp call lock inc out cmp enter xchg mul paddusw or lods (bad) lock add add add add add into fwait pop fnop ds xlat sbb mov rolb jg pop out insl jmp mov sbb roll cmp cwtl cmc or (bad) mov lea push pop mov int3 ds pop fisttpll sub pop mov dec loope cmpsb mov call fdivrl jp push mov dec sbb xchg push xchg into js pop adc adc jp xor and push movsl add mov sbb out cli sub jno,pn inc or mov add add add pop xchg adcl (bad) outsb (bad) cld into xlat in subl in jne sbb mov gs push fdivrp jnp in sub cs (bad) and cmp and xchg aaa mov das push lds gs inc stc adc dec mov push inc (bad) jge sub xor testl dec stos inc popf jnp push in or mov cs lret cltd gs fs mov push stos scas mov fs (bad) in fildl mov add add add add (bad) testb imul out loopne adc in sub enter in xor mov add and xchg push sbb pusha jecxz stc xor mov popf das cmp fnstsw xorl push rclb (bad) out and loopne mov bound and call or jns push sub (bad) mov sbb xchg daa cmp push mov fstpl (bad) dec jnp insl mov mov test (bad) rorl mov mov daa add add add push mov pop lret movsb stos out mov adc clc movsb scas int3 mov std dec les les ret cmp in shrb jne push pushf jne xchg leave dec add fwait (bad) cmp adc ja and pop jne ret mov xchg push rcrl jne insl mov or or popf jb fnsave xchg or icebp fbstp xor cmp test cld cmp or in bound or aam gs in movsb mov arpl add add add lods push sti ret or rorb ja jbe ret push lret loopne test jecxz pop movsb movsl cmp cli pop fildl push mov nop xchg iret ret ficom popf and repz pop sub xchg dec push jmp fadds inc xlat lahf scas mov add xchg in shrl add daa (bad) or lock mov jae mov das mov lcall stos imul mov and dec aaa cmp sub sub dec jecxz mov mov inc inc cmp sbb add add add push int3 adc adc in jne mov push stc xchg dec test ret jge xchg jl int popa repz mov ret inc pushf add adc stc mov mov icebp sbb (bad) xchg fcmovne and jns mov xor xchg std pusha aad mov sbb mov arpl lret xchg lock mov xchg xchg push cwtl test incb aad cmpsb sub loope or ret add bound push addb add add mov popf and je mov mov dec push int stos pop test sbb jo add pop (bad) sbb aad pop sub push pushf pusha popf push cmp push mov fcmovnu mov lock fidiv inc imul (bad) push mov inc jle inc pop movsb mov enter loopne lds mov xchg jbe out jnp dec loope in xor fsubrs cwtl mov add out adc decl je rcll push (bad) xor lret jg ljmp pop int3 jg clc add test mov mov push in inc mov js or aad int data16 aam adc aas es ljmp addr16 imul out xlat dec sub add inc dec xorl addr16 fisubr out mov out jbe add push call adcl cmp dec scas ss in dec jle fsubrp mov mov dec (bad) or jp mov add add add add add addl mov inc (bad) xchg or pop out mov clc adc shl dec lret sbb and pop leave test stc cld fsubrl xchg cltd je lds push sub cmp xchg xor or neg sub push or fwait jo pushf xchg pushf and dec dec popa add push fldt clc xchg mov int bound mov cmp push mov jmp subl stos cli push fild add stos das ja add add rcrb push inc jno std leave mov shr ficom int3 gs or ss fwait add je jo cmp pop cmc dec mov sub ror dec push imul in es push add xchg xchg aad add push sub cmpsb xchg daa das pop pop out notb (bad) dec xchg xor xchg pop or aad inc clc aad fwait aam push xor add cmpsl mov mov inc test int fbstp adc loope aad add add add add xchg dec mov push lcall lods sub lods xchg lret ret imul sbb dec lock xchg mov adc push inc jbe ja push fsubs int3 jbe mov dec les sti mov dec add inc bound cwtl mov push out rcrb shll xor out or pop scas (bad) push stc addr16 adc enter js fwait iret imul mov mov xor mov scas imul and arpl inc mov add add add add test test cmp repz sbb mov mov loop sub jp mov mov cmpsb cmp addr16 mov js cwtl std fnsave cli mov addr16 jl pop add pushf sub add rolb and push fist ja xchg mov popa or jb mov gs punpckhdq dec inc mov je je call pop sub cwtl leave pop mov fs pusha sbb and xchg sbb add add (bad) lea stos cmp push pop sbb sub sbb mov hlt mov loope jnp adc xor mov (bad) test fs pop test mov int and cltd sti dec ret jo or xchg cmp movsl mov lret mov cmp lcall (bad) stos jmp cs movsl repnz nop mov cmpsl daa inc add xlat adc incb ficoml sahf repnz cs push stos adc add or loop into pop ss sub xlat bound xlat jp xor repnz fwait cmp lahf xchg lret clc mov sub cmp cli dec push test sarb (bad) loope rcrb cmp sbb lcall xor xor ror xchg (bad) dec sahf inc cmp xor adc addr16 dec adc cmc movsb mov push sub jo mov sti imul add or divb lds stos fwait adc imul dec cmp add add add add xlat loopew adc lea leave aas sbb pushf mov mov mov xchg xor (bad) ljmp dec (bad) or outsb push inc xor jb xchg ret repz scas stos dec sbbl repz fwait test cwtl iret push fisttpll mov enter jbe in xchg mov xor (bad) jbe sub cltd mov int3 hlt and repz (bad) add les lahf clc cmp jae xor add ret mov push loope loop mov and mov aad sbb stc and lret mov cli adc rcl xor mov mov dec js push in jnp stos xchg jg ds sbb pop scas pushf push lock enter mov addr16 sbb xchg insb icebp push sbb add adc xchg mov add xchg notb aas clc cmp dec mov xor and test int sysenter pop repz movsb add add add adc lds sub scas jmp add fisubr roll idivl das xchg cs jge das js sub mov sbbb push inc movsl xor jl loop cmpsb cltd in pop sbb out rcrb mov es jno sub xor nop pop idivl or ja add mov jge xor xor xchg mov cli fwait lcall jo mov push adc inc jo cmp jmp subl iret psubusw sub mov add test mov sbb push inc insl or (bad) xchg sub pop insb xchg lahf mov ret mov mov or aaa or mov pushf pushl push lcall subl test pop arpl fmulp sub sti cld int3 mov aaa sub pop bound push lock inc mov inc popa cltd dec jno lea out lret or pop or into adc fstpl mov or ret xchg in adc mov add dec fs mov stos stos test stos jecxz push (bad) int3 push adc cmp mov push cmp add (bad) sti sub xor loopne jb movsl mov sti lret sbb mov add movsl cmp rorl mov cmp out inc sarl cmpsl sti xor pop mov mov scas fildll adc mov mov jg xchg repz xor sub sahf xchg dec mov cmpsb pushf xor icebp enter cmp mov or add add ds jb lret aas mov mov mov insb dec add or pusha insb mov icebp outsb ss add cmp add and (bad) (bad) fs dec bound add inc lock loop lcall jp out xchg movsb jp in xchg out lea mov or int push movsb xor or aaa lret das and xor aad mov mov (bad) iret fisttpl inc (bad) in sbb or sbb inc punpcklwd adcl add add add or shll lahf mov jmp (bad) outsl xchg xchg (bad) (bad) xchg jo cmp xor insb jbe cmp xor pushf mov lcall mov push test add xchg adc popa es aas cmp ja je sbb cld adc movsl fst sub arpl push mov dec hlt call add je andps mov std je adc sub xor leave rcrl leave clc cwtl lahf (bad) clc pop in mov mov sarb scas jbe jl dec mov and shl cmp lds aaa sub mov (bad) enter mov dec add sti xchg les lahf repnz xchg cmp xchg loope hlt xor jae xlat adc xor ret cmp fildl int3 sbb fsubrp or imul sbb in add mov adc ljmp aaa mov lods xor jle dec fst pushf les inc inc movsl adc xchg rcll and mov add add cmp and out lahf cmp les push pop stc sbb call loopne ror push adc sub ss xchg sub data16 or cmp dec sub pop cmp jno sbb sub lods stc inc das and pop cmp aaa adc dec addr16 aam jb add jmp inc xor iret jecxz rcrb mov mov ss stos pop iret (bad) jecxz jno (bad) out xor add add add add (bad) xor push outsb cmp dec (bad) xchg insb (bad) pop push nop pop jmp in stc cmpsl push ljmp jmp mov mov cmpsb lods or xchg add dec insl aaa fmulp cmp addl jbe in ret insl mov out sbb outsb lcall rcl push xchg add dec pusha (bad) sub push lods repz stc adc or jbe mov lret insl xlat call loopne jg sbb adc mov push and (bad) clc pop cmp insl xchg xor je out add add add xor (bad) ficom ret xchg nop sub mov (bad) mov lods adc fdivrs lods jmp daa out sbb xlat inc jo pop cs jle test gs std fdivl cli cmp lret fstpl mov bound cmp ret or cmp das jae mov pop push in lods sbbl dec lock dec enter cld (bad) popf fs push lds inc sti fs stos aad jge jno pusha jp xchg and adc enter or das pop dec popa jge imul es popa inc pop ss mov jo scas mov xchg aam sub or out pop sub mov (bad) xchg leave out jbe cmp jmp stos mov daa add cmp shll aaa cmp cld arpl adc in (bad) mov cmp sub push cmp and adc lcall pushf (bad) xchg lock sbb sbb xor add adc adc or sub es pop inc enter fistpl test add add add insb addr16 mov stc (bad) dec js rolb dec das call call in xor cmp pop mov fcmovne inc lods int3 dec mov leave lret inc ljmp xor pop adc push lcall leave cmp sbb push mov (bad) movsl ljmp rorl sti fistpl stos outsl sbb out insl cmpsl adc sub push dec xchg sahf push mov es sub adc outsb jmp add add add add idiv cmp sub rorb std pop pop andl or push cld ficompl fmull js out lcall jb mov mov in test iret gs fimul in xchg sub mov ror cltd xchg insb in movsl insl jge mov push repnz push cmp push ds pop nop jns lods sbb pusha movsl daa movb mov lret adc sbb pop mov push mov test mov sub pop std jnp fldenv mov xor push pop pop pop sub xor sbb mov aad popf mov shrb sub rcrb mov bound xorl and mov stc sub xchg xchg (bad) mov stos add pop pop dec mov iret dec adc loop sbb rcll push mov or les push lret push jge lods scas add mov mov pop cmp fisttpl adc imul push les dec test mov jl push add leave add (bad) out out or sub pop push add jo test nop and pop lcall push enter sub test test lea cmpsb les jmp or notb int3 rcl insb out push xor int lods (bad) sub dec repnz pop xlat fst inc scas add dec pop sbb inc sbb aas lock and xchg jl mov mov (bad) pop xchg xor push mov xor pop add bound add add lock pop orl mov jae xchg mov fwait sarl mul lea cmp insl mov repnz and lahf pop push push outsl pop out hlt mov pop icebp testb inc jnp push inc mov inc inc orl jecxz stos mov (bad) cvtps2pi in (bad) jne loope clc adc sbb pop xchg popf lret sub xchg pop iret inc push arpl dec mov mov ficomp mov in (bad) jecxz and scas jae fidivr pop imul add add add and pusha pop shl test repz ljmp (bad) jbe dec xchg das movsl insl add jb sarl inc pop stos jo lds sub fsubs hlt sub fistp or das push insl fidivl dec add push push jae jp dec pop popf jns push clc sti repnz push xor (bad) je mov je pop cmpsl dec sbb inc or mov out pop pop out cld push fcmovnu cmpsb loope or call (bad) mov fadd movsl add pop mov fwait pop inc cli out bound xchg cmp add add add in aaa mov or dec mov daa mov mov in and outsl sbb cmp xchg push and xchg push or sub fcom fistp loopne nop arpl and jno dec add push movsl mov jne,pt outsl adc adc in inc cwtl dec and mov pop or inc xlat mov mov sub mov jbe mov out repnz sub sub inc ret inc push mov adcl (bad) hlt add mov xchg fild cmp mov jno xor ja dec push mov sub or (bad) fs mov lods (bad) (bad) lret and mov call mov adc xchg pop movsl or xor xor inc inc ljmp mov xor jge movsl fwait out ljmp mov jnp mov movsb data16 outsl push push test pop and mov decb (bad) pusha hlt repz mov lret loope imul inc or mov pop add add add out ret rcr or (bad) pop mov xor mov (bad) cmc xchg lahf cmp push jmp jmp lsl push int3 insl xchg test cmp jbe jnp xchg push outsl or es test fcomps mov hlt repz insl and lods add jecxz addr16 add mulb inc cs ss ret mov mov dec jo ljmp sbb dec std fildll jns stc push lcall movsl in mov lret add add add sbb dec insb jbe push jmp mov push aaa xchg jge fs mov mov fs jno aas lock xor outsl mov gs aas js jl loop and jmp mov add xor inc cli fdivrs aam aas lods repz adc shrb add sbb bound pop adc xchg mov daa dec jbe pop das int or movsb mov cwtl cmc pushf scas add addr16 lcall (bad) repnz out mov xchg cltd add add add sub mov pop jae pop pop js push stos repnz sahf enter lahf push and mov rorb pop lods jmp popf adc pop pop dec cmpsl (bad) pop bound jmp addr16 stos inc fbstp or push add mov push push jbe cmp outsb fisubr push dec pop and (bad) aaa mov cmp sarb lcall mov pop jnp popf pop aam jg (bad) fiaddl int3 (bad) mov add add add sbb inc cmc punpckldq and xor jge mov and cmp and aam pusha cmp insb jo shr mov (bad) loopne repz pop (bad) xor cld pop jmp jns sahf jb dec (bad) jecxz xchg push sub cld call mov loop mov inc mov jne or push push aaa pop push pushw (bad) rorb pop fstpt mov ret xchg mov stos adc mov sbb icebp out test les aaa xchg lods and add add add (bad) mov inc popl jmp pop nop fsubrl lahf sahf insb xchg inc scas push test cld push xor movsl cmp mov push inc (bad) fstp push mov (bad) mov xchg std rclb mov or adc into int3 rorl (bad) or and nop add xor pmovmskb cwtl movsb (bad) dec mov nop push xchg dec and dec jmp fisttpl push outsb push xchg ds ds inc and (bad) imulb push outsb or push xchg jmp pop std sbb pop sbb enter imul add mov fwait or inc dec sub lods add inc stc sbbl xchg mov ja mov adc scas rclb cld addb div push cltd dec xor adc sbb loopne jns scas push mov inc inc jae subl enter out xchg mov es add push cmp test addr16 adc int and xchg not pop cmp add add add lcall (bad) pop inc sub sahf inc repz adc ja in rcll gs mov (bad) xlat out (bad) or fsub lret xor mov xchg mov enter adc hlt test arpl inc out dec xchg scas outsb cld push mov in (bad) outsl movsb push int add push sahf cmp jo mov outsb test popf aaa lret jb ljmp test sbb idivb push loopne aad sarl jg hlt xchg dec iret jge scas add add add rcr (bad) mov mov jbe icebp scas es push or lcall sti mov add xor xchg std in xor mov cld test cld inc (bad) cmp mov and fcoms dec sbb (bad) mov jne add sub push dec or push push mov aad jp stos imull mov stc add ret xor sahf lcall nop arpl pop movsb or jg test xor (bad) daa movsl and add add add subb adcl sub sub jbe cmp aaa mov repnz addl push pusha adc scas mov loope rorl out incb cmp push dec add sbb cs cmc adc push jge push sbb adc xor cmp adc mov fsubp cmpsl or ficoml cld mov mov cmp or std sbb pop add sbb lds fistl add lea (bad) inc adc push in mov pop pop mov add inc call mov xor gs lahf mov call nop aam sbb dec rorb jg icebp jle mov jno pop add mov fwait jbe ljmp sub inc pop (bad) add sahf sahf out mov jne xchg sbb pop sti sub iret jno mov sub int3 addr16 les loop dec xchg sbb loopne dec push xchg pop push mov fildl dec arpl jb pop xor sbb sysexit mov add add add outsl sbbb sub mov mov sbbl adc ja mov lods out lret loop test mov inc lds add pop aas lock mov push sbb clc pop sub ss cmc xor add jmp xchg sbb test loopne jno fcmovnbe insl lret sbb pop push stc ljmp jmp and or (bad) sbb dec cmpsl pop (bad) loope adc ja and fxtract sub pop jbe cmpsb cltd das lcall lcall push loopne call or add add add gs negl jg (bad) call dec js add and aad test fs push cmp cwtl or mov cmpsl fdivrl aas jl outsl dec repz xchg xchg jecxz bound push pop adc sub pop shr lock lret push fcomip jg insb in cmp mov fnstsw cmp dec and daa bound mov inc adc mov mov jmp inc sub sub rclb cmp pushf jg cmp inc je inc pop pop jp in fistpll mov add add bound stos lret inc mov add mov test call call or dec xchg scas (bad) int3 xor sar imul orb jge mov inc or mov or or repz sti cli mov inc insl leave adc (bad) cmp cwtl dec ss mov inc cmpl out (bad) (bad) rcl jl imul pop push mov jnp outsb fwait mov gs outsl sbb stos lret jbe add xchg add add add add add mov push cli cmpsb xchg aas jmp aas push mov fsubrl jno and mov xor dec pop and cmp ja adc and cwtl jmp jno mov daa mov repz call inc adc pop jl hlt sub in and push repnz inc inc rcrb fistl loope xorl add mov mov add or mov popa xor insb push movsl or push cmp in sub mov int3 loop out std rorb add cld ret xchg ljmp mov jmp jp push push dec fdivl neg cs aas mov cmpl mov leave out push jg adc mov sbb adc rcrb lahf push enter (bad) and sarb cmp lds in out insl insb mov in sub jl cmp dec xor jl test popa int mov dec mov mov push clc or ret sbb (bad) xchg jmp mov vcvtdq2ps adc add add add sub das xor push mov adc jno ffree (bad) shrb ret insl jns (bad) repz sub leave orb lods jmp subb cs fmul jbe xchg movsl pop dec adc mov inc pop cwtl aas dec jo mov adc pop sbb inc movsl pusha xlat xlat add dec (bad) (bad) scas pop xchg in xchg dec stos sti mov sub addl repz dec push push pop dec scas dec ret inc adc lret popa fidivr cmp int3 nop dec test cmp ret add add add add sahf mov lret outsl stc mov jns or pop mov repz mov xchg inc push jbe sub push inc dec cmp mov loope cld or loop jnp and dec cwtl sbbb add jp mov inc mov ja mov cmpsl adc push sbb (bad) fidivr mull call cli (bad) lds dec mov rcrb push pushf ss mov pop fisubrl lahf and push outsl add add add add lret xor sbb sub ljmp data16 and xchg inc pop cmc adcl aaa into (bad) and lret inc and sbb loope mov adc mov sub or dec lds (bad) push or add xor sub scas xchg jecxz mov or je and fstl inc push enter loop sarb sub popf jmp dec mov ljmp add inc idiv data16 out mov cmp scas mov dec loopne and mov and int3 xchg iret xchg (bad) fsubl jno mov lea cmc in lahf pop mov aad adc mov dec (bad) jno inc outsl lods (bad) lret push cmp xchg dec insl adc out fisubl lea cmp adc fdivs adcl pop xor (bad) mov jnp cmpsl cwtl fwait and test test dec mov aaa xchg push insl dec ficom push jg into dec lea xor jnp bound jge gs mov xor and int3 add movsb pop cmc inc inc pop call aas mov ss jecxz cltd cltd mov out call sbb in (bad) insl inc ja lahf stc divb sarl mov pop mov push imul repz icebp or jle inc lahf xchg mov mov gs fwait dec (bad) sarl push mov insb leave out inc (bad) dec mov and push popf and and fdivl mov jb push jns test fwait mov loop movsb xchg sbb push lds ja xchg iret popa pop bt push mov (bad) out lods mov push dec (bad) loopne iret jae push mov lahf das popf sarl adc lock mov mov push cmc js aaa outsb cmpsb add push cmc call push adc je jmp xor inc inc dec aam sub fwait push cvtdq2ps in mov jl and mov aas imul (bad) mov sub push adc lret (bad) dec rcll ljmp sub xchg and push add push mov cmc xchg loope sarl movsb das add stc mov aaa dec (bad) mov xor jl test fwait xor clc clc cld mov sbb or jge dec jo xchg sbb cwtl xchg push mov mov sarl hlt pop push pop dec sbb jo stos loopne fwait or gs adc in mov pop ss nop adc mov dec (bad) mov cmp enter push repnz movsb push fimul iret int in fcmovbe add add sub xchg in push jno push into movsl je or in andl push movsl or mov jne mov movsl aaa dec loope fildll or pop push mov movsb adc les mov push hlt push sbb je inc fidiv push sub iret jmp mov sarb negb sbb adc sbb dec mov dec jg popa movsl xchg mov imul add aam imul mov insl mov sub or add add add add mov scas pop fwait insb mov sub xchg mov fstps sub xchg ss push xlat jg xor and ljmp mov or mov movsb in jno sbb into push pop aaa je sar stos xchg push xor jg push scas les push jecxz sub or in test push pop mov inc std and adc jg std pop and daa pop lods cwtl cmpsl test (bad) mov add ret test aad aaa inc push pop ja test mov mov call mov pop pop xchg cs lock ljmp inc pop jp js scas xchg sub ja jne les cmp push mov cmp mov push push dec pop cmp mov inc loopne dec push xchg push insl je sub dec shrl or xchg push dec fsts stc lret jb pop inc notl sub cwtl ficom inc negb push repz adc inc scas outsb push add mov gs push outsl outsb mov push or inc push dec es loop push in xlat sbb scas out popw jle push and sbb dec push jmp pop push lahf dec sbb dec (bad) int3 sarb inc jle push jnp aad es sub adc movsb sbb inc add cmp pop iret lods (bad) mov mov xor popf and inc insl pop in imul rolb in xchg fidiv pop fwait pushf aad out inc rorl imul test mov add add insb inc pop jbe push fild int jmp jae add xor fwait sub xor pusha jae daa mov xchg fdivl dec add pop mov arpl add push dec call sub scas cltd jns out outsb sbb (bad) mov sbb adc push add add in int mov and popf and pop mov push push pushf and (bad) xor lret inc or popa cwtl cltd loope inc es lods push jge fisub push rolb add add add add jb cli fstps sbb testl mov xchg cmpsb repnz push cltd xor adc and (bad) mov mov jo imul push addr16 jl (bad) ss add loope in (bad) push pop and idivb and jnp,pn dec cmpsb push push imul and cmp test arpl lret cmpsb sub outsb icebp insl cmpsb xlat fwait outsb cmc xchg pop xchg ret jb (bad) push insl rcr inc out cmp and sub cmp dec inc adc in add add add add ljmp repnz push mov push jecxz jge in jbe cmp push sub enter or sahf inc inc push pop out jnp ljmp lret adc repnz jbe int mov push lret cmpsl mov idivb mov mov stos jae sub dec dec push jg xchg scas mov push xchg fstpl push or push pop or loop mov xchg sbb cmpsl add push or rorb inc adc sbb add add add mov pop es push test cmp mov sub pop in (bad) jmp cmpsb aaa mov jecxz cs mov inc das push in inc clc sub lods adc test xlat jl,pt mov lret sbb and aaa dec sub mov push shl lahf aaa call stc mov in pop lea mov scas lret mov sub sub hlt movsl loope inc inc in fcomi mov imul xchg cmpsb enter pusha out xor je divb sub add add add (bad) sti mov shrb in xchg xor insb dec inc scas ret vmovaps mov pop cld add xchg rorl xor (bad) mov xor loop adc pop mov jmp test mov call arpl out and inc jne lcall adc push lea cwtl lods jae dec inc pop das test jp jle xor cltd test iret pop adc cwtl and rolb nop xchg das push pop mov test jbe and push pop cmpsb mov xchg mov (bad) daa mov push dec int3 notb cmp cmp xor jo or pop and ds clc xchg int3 lods fdiv leave cwtl push inc outsb dec sbb cwtl mov imul inc and (bad) aad loop mov inc lahf mov sbb mov (bad) rclb jmp cli jmp in test in inc jecxz mov cs (bad) mov mov mov (bad) xor add add cwtl mov inc in cmp mov sub mov adc xor insl inc add dec cltd or adc jge jns add lahf mov add mov sub hlt fisub or loop or cmpsl and loopne sub xchg jb (bad) insb cmp outsb repnz stc lcall das mov xor jecxz push jl xchg mov pop and xchg jge cmp add mov jno add push das or mov js call add lods sbb fmull scas mov sbb lcall (bad) repnz mov sbb out mov mov sbb sbb and dec das cwtl das and mov jno ret mov mov jge out mov mov les pop inc aad push lret jp xor push sbb mov addl mov pop fwait sbb loop cmp rcrl push mov lock repz or and xor push pop adc mov add add add add fs or mov outsb js add stos cwtl stos dec imul mov pop mov inc adc sbb sbb (bad) sub adc imul xchg int3 inc or clc push daa fwait lods jp ja pushf pushf cwtl inc (bad) mov ja and ljmp mov loope pop mov out jp jo inc add pop movsb dec sbb dec jg insb lea mov xchg xchg repz mov pop or adc fbld push sbb arpl fsubrl add add add inc in imul leave fcomip sbb mov xor xor ljmp cli (bad) notb mov movsb stos push mov iret dec xchg ja movsl mov push xchg xor inc cmp fisttpl ds fsub mov inc and cs mov pop jns out idivb xchg stos in sahf xchg mov push xor gs push dec fiaddl int3 int3 inc push inc in mov sbb cmp sub sbb add mov pop mov mov cmpsl and scas fs je jo xlat jo cmp mulb jle xor nopl outsl mov lock lret jb loopne dec sub ret repz outsl mov test and rcrl or mov add lahf xlat std js sbb mov out jmp cwtl hlt dec jbe push ja xor push call ret dec xchg lahf jmp loop adc pop pusha lea adc or fstpl leave addb add add add ficom lods push out fxch jmp mov sub imul out std xor pop adc je ret loop ficomp adc repnz xlat fnsave and adc push lret int sub pop dec call jo inc push lcall mov xlat or jbe add loop int3 adc scas stos aam aaa adc je fidivr xchg (bad) movsl inc push adc push (bad) xchg cs push fisubrl pusha ffree cmc cmp adc out fwait and dec mov add add add loope shrl push scas (bad) shlb ds loop fidivr jg rcl test out add sub gs cmpsl mov or fadd loope push pushf pop stc sub mov lock inc inc cmp ljmp in repnz test cld jnp lret mov or inc pop test data16 push add sti push cwtl pop aas (bad) xor xorps ja push pop xor fstl inc add push and ficom les mov imul mov pop and sbb rorl adc lock movsb mov adc inc (bad) enter push inc notb dec cmp cmpsb data16 and inc ja inc sbb inc mov (bad) and mov rorl ljmp cmc mov dec movsl mov jge push lahf push aas xlat xchg rol adc stc into test movsb jmp xor dec ljmp loope mov mov loopne push mov jge inc jp add add add add xor pop mov jnp js xor in xchg push jae lds je outsb std andb imul add lock mulb iret lds shr inc roll inc push les (bad) out xchg sar notl and hlt or out dec stos and cmpsb sarl cmpsb sub out and cmc jge jne insl inc mov push jne pop movsl (bad) lahf jne adc stos jb add add add add nop mov in dec lods enter movaps sub inc lea xchg outsb jae add scas mov addl mov test push mov xchg xchg pushf jb daa mov sbb mov js in imul std jg mov movsb push mov sub mov jne cmc (bad) iret mov mov fcompl mov push fimull sbb fbld notl ja add jmp sbb jecxz fwait loopne bound add sub mov xlat adc pop dec push adc inc sub (bad) sub add fisttp dec call push insl cmpsb mov enter lcall push int3 jl add fs mov mov jg sbb sub data16 addr16 jbe ret sub jns mov adc adc inc push lods and inc aaa into icebp (bad) jb hlt out mov into test pop movb mov lcall add add cmpsb shrb pop jge mov iret jne sub and into scas aas inc sub xchg (bad) mov mov add pop leave jae cmpsl ret xchg cmc mov dec xchg and test jbe mull or jb rcr push dec aaa ds mov (bad) mov dec js mov pop fstps adc bound pop mov popa cmc cli jo mov dec in dec clc (bad) mov pop into or xchg fdivrp das ret pop add add xchg sbb cs fbld dec inc movsl and gs sbb fldl fidiv stc jmp adc dec pop ret rorl js jb xor pop jg sbb loope jg push add mov push movsb daa idiv ja test (bad) mov xor insl and lahf push (bad) hlt jl jg mov sti or xor repnz push mov jo xorl arpl xor mov jno inc mov idiv loop lahf jo data16 mov rol pop sub cwtl dec jp mov add add add ds sbb xor push xlat jmp mov das xchg into mov pop jbe inc pshufw jns insb iret outsb mov and mov xchg jns pop in jno inc mov fcomps insb addr16 mov aam ror js loop jnp xor repz fdivrs je add cmpsb insl sub sub add mov adc and (bad) (bad) mul imul push (bad) push dec or inc mov xchg pushf bndldx mov shrb pop clc mov add add add push daa loop pop sbb out addb and add jb push test jne dec adc jle loopne movsl not fistpll outsl into daa dec lcall lods lock int3 mov scas push in repnz and lcall cmp cmp dec ds rorl icebp push pop popf pop aad je pusha xor outsb xchg sub pop pop aaa aad aas ret cmpsl adc enter outsl push scas getsec sub ja push lcall mov mov push cltd scas sti aad lds add add pop fbld pop pop cli scas add mov cmc xchg mov xor adc (bad) ret cld into out test leave enter add ds jae pop sbb jne jne push fiaddl shlb (bad) and pop xor add mov leave out cmp mov xor pop insl insb out pop dec test addr16 adc lds testl inc icebp test fild fwait cmp rorb adc or xchg sarb sbb das cs (bad) jl xchg xchg mov add cs es or mov jg popf clc dec jmp push sbb int pop adc repnz inc mov mov xchg xor mov imul or pop lret and inc dec cmp ljmp shlb mov aaa xchg divl mov popf adc stos mov aas dec push sbb inc ret lret mov jae lds scas mov out lods leave daa or mov js adc (bad) sub (bad) xchg push push sub mov sbb add sub call icebp shl push xchg xchg mov mov fwait ljmp movsl rorb push aad cltd xchg add push ljmp stc sbb cli jmp jge cs pop dec push push ds gs ret jg mov inc fsubs inc inc (bad) jb mov into mov inc test (bad) out add aaa xor pop jl and int3 cmp mov push rclb jle pop jecxz push mov xor insb stos xor mov (bad) lods and add add add lods push jnp frstor sarb inc xchg fcmovbe js test cmp pop jno adc leave lods fwait je aas ret or adc fstpt in inc addl daa push push dec mov xor rorl pop in fwait rcrl push test loope xor adc mov mov dec mov mov mov pop cmp sub jns into push fistl dec jg inc sub add loop iret ror jge cmp loop sbb sub fistpl stc inc outsl jbe,pn les inc addr16 pop in (bad) rclb sub loop pop cltd js or mov mov call and popf bound (bad) call popa jg movsl dec lret (bad) in popf mov dec jge mov fistp mov aad cwtl jl add lock fmuls push dec imul adc lods (bad) jmp imul sti je popa hlt (bad) out add jnp mov leave aad adc cmp add add add in push jbe (bad) push icebp inc xor and dec inc xchg mov mov sub pusha fcoml add shrb push inc inc int3 xchg hlt lret cmc mov into lods adc mov sub ljmp inc cmpsl movntps pop lea fwait add jp aas fisttpll push outsl hlt xor cmpl sbb push or sub sbb push and and mov push and mov mov outsb and out repz dec hlt (bad) jp add jns xor fldt xor and data16 or (bad) sub pushf xor jp pop and xchg adc (bad) push test adc add mov stos xchg mov data16 js ficomp sbb pushf xchg dec pop popf cli icebp inc loopne mov sub sub flds js mov xchg jle lods xor xor fistpl ret dec mov xor pop cwtl dec mov call sbb sbb mov add add sbb or push fnstenv loopne jbe mov stc loopne imul push jns xor and inc aam xor ss pop cmp and icebp in lcall mov mov in fcoml push mov (bad) or in pop shlb jns mov pusha dec out mov aad nop mov mov jecxz or dec and iret push adc mov mov pop and inc dec cmpl pop (bad) insb push rolb add add add in loop mov cmp or inc xchg lret lock sar dec mov mov pop gs movsl push and int xor cltd and mov and aas js (bad) push mov xchg sub push pop xchg push adc aam sbb aam out pop aad cmc bound aam movq aas mov push mov mov es fwait loope inc add rcrl inc scas gs shlb int inc or popa call jo mov daa jno sub enter adc jmp iret inc popa int3 xlat fnstcw inc adc adc add int dec push repnz xor and jne adc add push and sar mov inc push imul or mov dec ficoml mov jl mov out add pushl into icebp popa (bad) xchg sti or xchg (bad) pusha imul je inc mov and out inc loopne add outsl cli push lahf mov add add add add sbb sub mov mov aad sub fistp lcall or or cs jp xor scas aam xchg mov clc outsl rcll mov dec xor mov (bad) xor push pop imul out test dec adc sti mov xchg sub jo dec sar out popa mov push sub je add lods add mov repz mov and insb cmp outsb outsl mov outsb xor inc push dec cmpsl dec pushl stos jecxz jp sub aad bound enter loop or and xor sahf clc pop into call xor lahf out lret push rcrb sbb clc and fs (bad) cmp xor fwait pop fcom enter lahf gs shr mov andb push arpl mov gs js call cmp fadds test stos adc ljmp inc add mov in sbb imul clc add add add add das mov fldt imul clc or inc shr addr16 ljmp or adc cld push dec xor push jne popl sbb inc sub in daa xor sti mov sbb xchg sbb ds fwait or flds in insl js leave loopne cwtl and add jns test (bad) cmpsb jg pop xor cmp (bad) pop mov cwtl js mov and (bad) jmp inc cwtl sar mov mov (bad) add popf aaa stos jno cmc imul fmull shrb mov xchg jae repnz mov cmpsb rclb pop mov aas dec mov lds push cmp aad add bound int3 dec add (bad) jp int sarl sub sub pop adc gs dec xlat and ficoml leave push icebp lods xchg jns xchg jb data16 xchg lcall mov enter xchg add lahf mov icebp in insl push adc mov mov sbbl adc adc cli fs xchg pushf into loopne outsl insl ljmp mov jmp add sahf sti out push push adc or and and dec add sub or je mov add pop out jne xchg sbb in (bad) fsts sarb xchg and test lret xor loope sbb mov into mov cs cmp add cmc jno aaa dec xor pop int mov push dec xchg lret pop call (bad) sbb mov and mov add inc mov sti and xchg lea cmp enter es xor mov mov divb mov mov jmp jae mov mov or ret add je,pn ret mov (bad) xor jns jo xchg add xor lcall sbb dec es sub (bad) repz xchg cld out movsb add repnz adcb scas cmpsb (bad) sbb jp mov adc add ljmp scas push in into ljmp push sub mov imul jge aaa or jae add xchg inc rcrl mov leave pop lock jg mov fnstenv into subb (bad) push (bad) clc sub pop or jns lock daa das sub jns sub cmp sbb cld lock std sbb mov lcall sbb test int pop push pop mov xor xchg ret sub sub repnz add pop pop dec es lahf dec mov add mov mov repnz in lds in fistpl test popa push inc mov insl stos xchg add push push sub mov movsl outsb jb jns,pt push imul lret imulb xor push insb adc mov add push xor sahf sub in shl pop or mov and fs sbb add add bound (bad) and test xchg ret cld xlat loop xchg sbb into adc or fwait push insb jmp dec xchg sbb and and lahf sub ljmp shll orl lea lods dec pop adcl mov outsb outsl sbb mov mov sbb leave add stc pop inc das inc int rcrb adc cs or xor pop and push and sbb lds sub pop lods add hlt or andb out sahf dec in add add add pop or dec jmp mov push and cmpsb pop mov dec dec xchg stos int3 jns push pop jmp dec rclb pop addl pop xchg add cli or loopne mov stos mov je push or xchg inc pop fs cmp push lret cltd loope jbe loope fisubrl out ljmp mov push push xor jge xor out jp jmp aad imul loopne inc cmp mov xor jns jecxz fisttpll mov add add add sar cmpsl adc xor (bad) push xor adc adc stos inc sub sti pop add xchg xchg mov aam adc sub inc ljmp ds jle cld pop pop mov sub mov inc sbb jmp out add int3 jbe rolb inc xor add fisubl jp out mov xor push stos xor inc insl xchg jmp test jnp push test cmp jl loopne cmp lock cmpsl cmp fmuls push mov add add sub cmp iret cmpl out mov out test movswl mov out in inc scas movb pop int test jns pushf xchg (bad) cmp aas xchg pop dec inc pushf movsl insb cmpsb jno das mov mov and mov and xchg pop fs inc stc in xchg pop or mov cmpsl push ds leave cmp cmc cltd dec aad inc mov cmp clc jne shrb popa xchg mov pop test mov add add add dec jp xchg ret or fsubs mov outsb into cmpsb cmp nop sbb rcrb sbb popa mov push (bad) jne pusha sbb dec adc js mov jle or pop adc sbb addr16 xchg inc test push ljmp push lret or mov xchg sbb clc mov lds out clc bound push cli out mov or stos (bad) mov cmp xor xor and dec sbb roll pusha cmp add add add leave enter xchg dec movsb aaa push cmp das inc aas jo mov xor es adc cmc adc xchg loope orl je sbb cmpsb scas mov arpl kmovd push mov rolb dec icebp lods sti pop sbb or inc gs fdivs adc clc add inc repz fs (bad) push xor in mov sub lock sub gs fisub cmp pop mov cs and add add add mov and into push jbe xchg cltd sub push inc les sbb dec je xchg inc dec push or xlat aam inc mov fwait mov rcll sbb andl add bound or xor add fsubs pop rolb cmp outsb cltd insb sub insl cmpsl mov mov jo and lret lret bound inc push lods (bad) xor jnp mov dec fs out stc xchg jecxz and sub cs xchg add add add lods out jmp adc hlt xor mov jns (bad) xor xchg push jne cmpsb add movsb les (bad) jle jmp sub imul mov xchg dec insl jo adc js imul lret in cld mov clc push sbb jbe or dec add and mov jae xor cmp jne xor (bad) (bad) push je pusha int3 fsub xor xor out js jp pop xchg aas sub push lds aaa popf into (bad) mov mov add cmc xchg repnz or cwtl cmc xchg mov rcl xchg mov mov jge inc in mov movsb test mov mov repz dec mov xor xor push fs nop xlat lss pop push gs push fstpl mov and aas scas cmc mov inc clc cmp sti and int3 insb inc mov jg cmp je mov pop sbb bound push jne pushf ret fldenv jl sbb add add add or cs cmpsb out sbb and lods dec cmp scas push lret outsb lock rolb lds mov (bad) cmpsl out rorl mov and fistp popf jbe hlt in mov xlat mov insb mov xchg inc les xor insl bound jo cld mov xor xchg mov sbb pop jp sbb lods and mov pop mov sub dec stos gs xor add imul call push (bad) pop xchg xlat mov hlt sub inc aad fnstsw and push add lret insb mov (bad) jl out mov arpl into ret outsl inc mov adc xchg lahf fisub fidivr stos fidivl inc aam in insb test add cs mov dec lahf add ljmp push sahf push push push in mov xchg sti cmpsl push inc ljmp dec push xchg adc data16 (bad) repz leave dec push jb std pop add add add mov cmp jo sti sti fnsave cmpsb push mov push jp jo sub lods imul lods sbb xchg inc in jns push int cmp sub jp sub sbb fs rorb mov pop aas pop pushf (bad) mov scas adc popf xlat fdivr add fwait xchg insb inc mov mov push cmp xchg mov outsb std push sub fs xchg pop adc dec (bad) enter repz aas push cltd stos push std fild inc les jge push add mov push outsb pop movsb lods xchg adcl ja fstps icebp sub ljmp mov nop ficoml daa push xlat sbb push scas pop rorb aaa hlt pop sbb repnz sbb fidivl pop push fcomip pop lods cwtl divb shr sub mov inc out movsl out cwtl and pop imul xchg xor push xchg lea pushl test cwtl mov dec adc xchg pop test sub ljmp fucomp aad adc cs addl cmp add add push sbb push xchg jb stos std or inc (bad) movsb gs mov test int mov loop mov sub stc xor sub aad push insb mov pop out pop cmp lods push or xchg repnz inc xchg fbld scas xchg addb pop dec aad fcoms push sbb scas push (bad) jl mov mov cmp xor loop in mov lds jb addl mov das mov arpl add adcl lods stc data16 adc lods sbb arpl sahf xchg call scas jp sahf mov mov push sbb or jo and movsl mov adc popa cmp sbb popa pop add jmp bound test ja adc iret out jecxz push push push mov sarl fdivrs (bad) addr16 incb mov pop mov aas scas cwtl repnz mov scas pop sbb test mov push es or add fisttp pop xlat xor fnstsw inc mov stos dec (bad) gs pushl inc cmp mov xor lret clc dec (bad) addr16 std pusha push (bad) cld imul aaa push adc or jp and sub popa stos cld add cmc cmp (bad) jmp in pop cmp cmp lods xor push dec adc mov pop pop or ds xchg sbb (bad) aad push (bad) testb add add test dec mov or mov inc dec or mov xchg or pop sbb xchg sbb sahf (bad) repnz xchg sub mov xchg or add fisubrl lods movsb insl (bad) insb push dec xchg xchg aaa jle (bad) add and pop inc adc cmp mov and mov xlat pop je addr16 inc movsl popl add xor sbb scas xlat ss add mov aad sub mov xchg ficom mov add add add inc xchg lcall std mov jnp and (bad) int push aad lock mov or mov out pop mov xchg pop (bad) (bad) rcl add fistl (bad) mov adc inc push xchg rcr repnz pop stos sub adc inc mov out sbb js jecxz pusha or push rolb and dec xor sub out mov mov cmp cli cmp sub jne jb js jge push std test imul fwait (bad) mov test scas inc fstps pushl aad loop cwtl xor (bad) lahf cmc sar jns cwtl adc fiaddl (bad) sbb idivl jb ja stos mov sub ja cli or fsubrs sub cmp mov mov in inc cld stos pushf (bad) jmp sbbb mov outsl dec add into imulb pop mov fsubrs hlt scas dec jle (bad) xchg push js fisub jo pop xchg hlt sbb dec mov lret pcmpgtw stos jmp imul cltd inc std add insl std cmp lock ds ss cmp mov jae (bad) jns int3 mov cmp add mov js inc mov pop sub aaa cmp xchg mov fimul and or negb mov mov sbb cmp daa mov mov es jb sbb (bad) je jno sub je mov ljmp ja and cmp mov orl cmp sbb adc popf adc ljmp add cld popa fcmovnbe nop insb enter sub push push push mov inc iret mov adc mov sbb cmp xor (bad) dec sahf dec cmp and scas jg aas bound add lret xor dec sub ja je xor scas cwtl sarb xchg ss (bad) or cld mov out leave cmpsb mov cmp out movsl out jb adc lods in sub or cmp push out mov fist ret sub mov add add add add scas movsb fidivrl int3 (bad) movsb pop popa repz push (bad) js push jmp loopne mov jb ljmp lcall into daa mov not mov add xor out sub lcall roll jno insl pusha (bad) aas xor inc fcomps mov xor out sbb xor movsl push cltd xchg std mov test sub (bad) xor xor xor mov cmp ss in jb add jmp add add add add mov cwtl scas sub mov mov repz push jo xor dec fildl dec add fsubrl icebp enter cmp loope pusha ljmp outsl mov xor xor ljmp loopne adc into pop cwtl mov add add xor std cmpsb cld or xchg pop jle hlt mov int3 add inc addb or jg ss cmp jbe fldcw (bad) popf pop cmp and mov xchg and push add add add add fisttp test cmp cmc inc sub (bad) les pop pop out leave jae pop mov sbb adc xor ja dec sbb int3 cs pop aas jae in push mov lock or mov mov push jp add pop test call xor std (bad) addr16 dec shrb test fsubl rclb cmp jnp jp mov add fmull jae shlb push int das call idivl pop repz lock jle rcl movsb pop cmpl (bad) add aad xchg roll and or insb push std adc (bad) sbb adc push lea std mov xor repz dec imul stos pop cmp pop dec inc dec lods mov push les ret xchg fwait icebp repnz inc sti stos (bad) out loope adc imul mov and dec popa shld das mov movsb push sub pop jo popf and cmp shrl add add add cmpsb (bad) fidivl lret push pop test rol icebp es (bad) out sbb data16 mov adcl dec mov add push mov imul fsubrs inc out and xor mov les in rcrl push pop in xchg adc sbb xchg sbb ret sbb jbe fsts loop cwtl iret push xor xchg mov insl ss test in sbb push mov push mov add xchg sub and jl lret xor inc inc jmp andl icebp pop mov arpl inc mov mov fisttpll pop push mov inc subl (bad) shl pop imul push test cmpl push int mov jmp lock jg cmp push sub pop loopne mov mov sbbl adc lea ds add das mov lcall (bad) jg xchg xchg call loop xor ds test pop or or add add add dec cmp pop push stos xor sti dec cmc jb,pn xchg (bad) or aam mov add pushl int3 xor push cmc enter incb cmpsb push roll push push in push jge jae outsb stos jle js add pop ficomp and aas jb stos (bad) xchg mov or and dec push xchg ljmp out xor cmp push cli or or (bad) cld jne aam mov pop (bad) and mov mov les std ficom cmpsl add add cmp outsl imul jle cmp push xchg movsb mov push or mov or push xlat push inc mov jp and cmp xchg push aaa iret cld pop sti std les aas push lcall add out les mov cmp out jge adc cmp xor fisttp cli call (bad) pusha jp adc popf cmp adc pushf adc mov test nop cmp popf cmp dec mov popa add jl dec pop push mov iret and mov js fisttpl scas shll fcompl lea into jne pop div push cs cmp mov mov xchg xchg xchg push rcl mov push shll mov pop xor roll mov sub sub adc adc and pusha pmulhw (bad) fstl add repnz adc cmp push cmp adc out scas ja shr sahf xor ficoml jne out sub and imulb rolb jle out fs and call stos add add sbb lock mov cmp lret mov enter xor lds or loope (bad) lock push sbb movsb xor push push adc fidivr pop and pushf outsl push mull sbb (bad) fidiv dec cmp jg mov nop pushf fbld rclb dec mov stc jmp ljmp bswap dec je fisub mov xor es lods or and pop xlat pop lea mov add add add add jp sub dec cmpsl cmp mov dec jno clc (bad) movsb jg mov pop cltd jne adc pop pop fidivrl inc adc into cltd cmp test movsl cwtl xor lea jl ret jae hlt and mov fsub popf cmp pop in mov inc fbld push jecxz shll cwtl movsb pop sub scas xchg in mov xor and ficomp sti cmp push aas push fild cwtl adc dec or mov insl (bad) mov add add add xchg (bad) cmp sbb aas movsl mov sbb sub adc iret cli cmp lcall js xorb in cld jno xchg push and cmp jne ljmp mov adc dec jl cmpsl dec push icebp mov out pop js mov sub imul jecxz sti lds push xchg int3 xor rorb mov cwtl or das dec mov jb jae (bad) mov push test int3 cmp and jl pop xchg dec enter dec sahf mov leave fsubl iret hlt push push ljmp add sbb mov cmp mov xchg jo jnp or pushf loope (bad) jge mov (bad) fdivrl aaa sbb test mov and out sub pop out gs aas cli cmpsl (bad) loop mov dec in xor mov stos push xchg push je or fnstenv daa sbb cmc adc push cs cmp pushf in add add add add sti inc push ljmp sub fs test sarl pop sbb cltd push roll or jle cld xlat push pop cld movsl neg in add xor out mov jns sbb ret loope stos jo jmp dec leave iret adc mov sbb mov test inc xor (bad) jecxz cmp icebp or mov jle int xchg cmp jae mov jb cli sbb mov push jg je or or mov lods mov in adc aam add add (bad) mov pop pop xor jl clc jge out gs cld pop pusha mov mov and pop hlt popf imul mov out dec (bad) loop mov sbb sbb lock push jno ret adcl mov pop ret aaa cmp outsl xor and shr mov cmc int3 fcompp push imul lock inc jbe pop sbb stos lcall xchg jns sbb loop pop mov pushf mov fcom pop xchg inc cld add add add out les cltd pop jecxz push cwtl arpl xor or jg dec inc and fcmovnbe jle or xchg jbe dec and mov in adc jp pushf jb movsl sarb inc in mov jp cmpsl dec mov out test aad or cltd sub inc shlb pop xor add stos fwait push (bad) push sahf adc mov sub ret push xor jecxz or loope add inc cmp adc mov add mov pop or imul push rcrl jne mov pop push xlat js adc dec adc pop push pop lahf sbb repz rorb mov sub out bound mov mov (bad) lds dec sarl addb pop mov inc mov (bad) in cmp xor cmp repnz dec mulb enter subb (bad) cwtl mov sbb pop sbb inc sahf add arpl ficompl push (bad) adc pop dec rcll test add ss in stos cmp xor cmp jno pop ror lock fs addr16 (bad) rcrb repnz (bad) int fnstsw aas call (bad) je data16 clc fs imul cmp mov fstl mov or adc add cmp add ret lock xchg add pop call mov mov roll fwait or fisubr adc lds pop xchg adc push repz cld and and addl push adc jo push jmp and push push outsb or inc loopne xor xor sub mov dec aas paddq std in sbb scas lds inc and jae sub mov dec inc dec jno mov jae lods cmp sub push dec pop xor dec mov loope pop mov dec bnd add pusha jmp add ljmp dec xchg mov mov inc test mov out and jns shl sar test push add add dec mov inc dec jle shr sub sub jne dec pop or js adc xor add pop cmpsb inc int jecxz test stos jns cltd mov push mov pop cwtl and sahf mov (bad) push bnd insl fstps into stos and xor sti push loopne xchg ret stc (bad) int3 mov mov fiadd push int3 adc sahf popf adc xchg push int daa xchg pop insb mov scas sbb add add notb dec (bad) add or add and sbb and sub cmpsb (bad) mov cwtl mov add xor mov test push lret xchg sbb dec cmpsl jecxz iret and mov mov insb and scas add shrl jl mov mov jmp mov aas inc data16 fmuls jo xor xor int3 out popf or js fwait cltd (bad) je repnz xor (bad) fnstenv xlat dec sarl xor mov mov add add jne cltd xchg movb mov int xlat inc jo and jmp mov clc repz mov jecxz inc fiaddl pop xchg insb xor scas imul push (bad) xchg sub leave bound or rolb sub and ljmp mov jge add int loop test jmp fcmovu xchg cmp (bad) mov inc cmc je mov lahf push test mov mov shrl rolb sbb out data16 popa adcl mov add add add sub (bad) rcrl dec out daa (bad) jecxz mov mov dec test xchg lock (bad) sub sbb (bad) inc push push add mov mov mov outsb adc jb adc xchg nopl xchg adc lods ret negb sbb in mov aad or outsl push push mov add cmovno sub faddl test cmc push loope out sbb repz add pop mov xor mov cltd daa aas mov sbb xchg jp or add cs dec push sbb sbb in jmp out adc (bad) daa mov aas rclb cmp xor daa sbb pushf gs sub stos daa cmpsl inc popf in jns pop (bad) push pop and mov fwait push pop inc fs adc lods xor push adc add lods je or jmp sti popa and out aad fdivr popf daa mov in xorl or cld mov pop (bad) jne cmpsl cld sub mov add add add mov adc or je push fcmovnbe rcll add ss loope fwait cmp out rcll mov mov les adc cmpsb cltd das adc mov xor subl cmpsb or mov jnp jl (bad) sub hlt clc es int push popl xchg jae mov mov mov pop cmp lcall sub xor clc adc xchg test (bad) lret mov cs sti xor adc cmp add add add add jnp stos mov push inc sbb push mov jle test push jge (bad) mov xchg pop push mov add mov xchg sbb sarb xchg pop fwait adc test cmpsl or es xchg adc cmpsb aad mov imul lahf (bad) or iret and mov add and jne cmp sub aam pop aaa add mov imul ds mov cmp mov pop or mov aam testl pop jno imul cmpsb pop iret scas sbb cmp mov clc jno jge sub aaa inc adc cli shrb (bad) stos les imul mov mov stos mov mov outsb push xor int3 cmc lods out ss cmpsl push loop out or fwait adc xor jge das and loope mov outsb add arpl sahf stos gs scas xchg into jo cli (bad) sub nop mov adc aaa sub add add jnp pop in (bad) cmpsl loop fs cmp out or stc push mov (bad) js pop lret sbb lds pop cmc leave in mov xchg stos test fimul mov inc ljmp clc lret mov repnz rcll push cld mov sahf sub ds popa rorl scas mul pusha pop outsb cmp movsb fwait add jne cmp add lods int mov imul int3 dec popa mov nop add push ljmp ror dec mov add add add add sub arpl sbb xor mov push bound mov sarb mov nop add gs pusha xchg adc xchg jl stos xorb aas mov scas mov daa jge inc test cltd es arpl jge stc out and jge (bad) push xor lock xchg test ret xlat xchg xor pop dec adc mov in and dec push mov loope sub or push cmp test mov pop sti inc mov popa pop loop jae les outsl inc out subl adc xor insl push (bad) dec mov add cmp or xor mov insb mov xchg sbb (bad) and xor les dec mov xor push aaa pop sbb jecxz (bad) in movl rorb pop xor push pop or outsl lret mov ficoml (bad) sbb dec push inc test xchg pop jp ljmp test or push (bad) mov add add add cmc push pop cli lret cmp mov cmp stos adc adc xor fwait dec in push xchg and popaw data16 fimull mov sbb out sarl lds adc pop pop xor ficomp daa mov lret dec lods aam push pop push enter or jbe sbb sub addr16 ss repz adc js sbb cmpsl mov pop cmp stos xor add cli push clc mov daa js push out adc hlt ss add lcall cltd cltd aaa mov test mov or mov movsb (bad) int3 flds cmpsl push je inc lret pop aaa out cmpb push and xchg mov push mov out push push sarb mov push rorl fwait mov aas movsl ljmp cs dec popf jmp mov and aad loope jecxz dec inc pushf in xor mov scas ret fdivl mov popa scas nop movl outsb mov daa ja es sub call lret mov cmp fwait jmp jae xchg mov dec fisubr sbb testb je das test sub (bad) (bad) aaa jp lcall pop and (bad) ja sbb fcoms add mov in (bad) (bad) mov (bad) out test jp jo stos lret aad sub xor in cmp clc out sub mov lcall sub cmp mov dec hlt push ret add add add add sarb add dec je loop sbb cmpsl aas cmc out pop das stos inc repz jge jo adc (bad) and add (bad) cmp cld cli pop scas mov movsb mov lahf test add xlat repz cld std cmp cwtl pusha adc jl push mov cmc mov dec sub out movsb inc loope pusha add adc mov lea mov in sbb shrb xor dec rclb ret rolb ret pop outsb sbb mov add add add cld jbe or in cmp sub and sarl mov (bad) jl call das or lds leave mov ja inc fs sahf mov pop mov cmp push mov pusha test stos push ss lds mov test or dec mov jne fldt adc mov fiadd movsl dec je cmp rorl imul mov sbb mov dec outsl and stos adc fist and adc add iret lahf mov in leave enter dec rcrl mov and lods cld or insb jbe sbb adc in movsb push aam sbb jb repnz pop inc loope mov pop jle lods hlt aaa xlat push scas cli stos or jecxz out inc (bad) cmp jl or mov test daa (bad) mulb roll popf xlat mov inc dec mov or sarb sbb mov stos sbb daa adc xor mov out inc aaa js jns cmc into inc fs add scas sub inc or call aam push insb lock inc push cmpsl add mov fs les pop mov jno int fwait jnp cmp dec xchg and add or fiaddl sub lcall push test pop (bad) nop push jns pop nop cmp mov (bad) idivb mov sub shrb xchg mov je,pn es jp int3 mov dec movsl ja sbb sub pop sbb xchg mov xchg jg mov call das mov (bad) jbe (bad) nop add add add add xorl cmp scas cmp jo mov movsb xchg push adc aad hlt daa jae adc xchg sub cmp push mov push xor imul lahf or xor loope ffree pop shlb icebp out les fildl adcl cli xchg rolb inc (bad) push inc cmp roll outsl dec imul cmpsb mov cltd stos cmp jp fnop push sbb add jbe out das mov mov fwait and (bad) testl dec cld clc and jo push test ja adc dec ss xchg sbb xor push cmp cli pop inc mov js jge jnp add or adc sbb pop jge xchg xchg and mov hlt xor clc pop mov pop inc jns pop push aam arpl xchg hlt lods mov cmc or xchg dec sub (bad) ss mov aad ds xchg nop adc aas bts push jbe in jl cmp mov cwtl aam push mov into and push fstpl add add dec and xlat cmp push mov push xchg mov pop ja dec out xor mov int3 jo cwtd out push insb fwait adc push mov xchg jno es mov fs add and loop mov mov mov loope xor sarl push jl sub cmp xchg sub adc and das dec mov cmp repnz mov dec decb pop pushf shlb sbb xchg or inc ss add add add add jno and jge rorl or cmp aas xchg jmp lret pop mov push cmpsb pop or xchg mov jle jl shlb add add lea daa add jnp repz adc jae shld sub xor xchg and aaa addl int3 out ss inc out sarb inc popf mov push lcall cmp lods cmp pop gs pop mov xchg mov push das add xor cli mov out push jns cmp insl ljmp incb sti inc mov cmp and repnz in test ja jbe pop data16 xchg mov jns add dec sahf and lret es sahf inc test lret and pop iret or inc adc divb cltd in sbb jae pop xchg xchg push fwait dec lahf jmp inc push int pop test es mov mov gs shlb inc adc adc loope sahf cmp xchg into pop pop mov add add add dec mov cltd shll (bad) (bad) or test xor cli leave xorl int ret nop (bad) fadds push and insb add inc mov into sub mov mov (bad) xor (bad) push rcrl bound cli cwtl cmp cmp (bad) xor pop xor gs stos cs (bad) jne xor cmp std fidivrl (bad) mov out cmp lock fildl jae add add add add inc sub ja dec add mov dec jmp cmpsb fwait sub mov or daa leave inc mov fisttpl cmp sarb xchg out sub fdivrs ret sbb adc fnstenv je push cs (bad) lock and popa mov or push jne fs mov sub or popf adc lcall icebp test mull iret xchg mov pop and sub dec test sub sub add add add push test dec or mov push test fadds loopne mov jle mov shrl and mov pop ffree push jnp mov lock dec hlt fsincos mov addr16 call ror cld adc push jnp jo (bad) ja cmc iret test into jge xchg (bad) jnp and and nop pop aaa cmc dec jae ja add in aaa cmpsb cltd dec adc sarl out into insl sbb lods add sarl arpl mov insb jns mov mov add add add psubusw in xchg cltd data16 mov daa inc addr16 mov pop outsb rcll test jecxz push out dec insl lret enter in test mov lcall cmp push fidivl add icebp pop das mov xorb fwait cmpsb mov add jp jecxz addr16 adc lcall inc loope pop dec js jb int3 jae in adc jns mov (bad) frstor mov iret adc jl or popa jecxz sbb test leave add add add add pop (bad) jmp xlat mov scas add aas mov call cs js pusha jb or jno jbe pop movsb mov push cltd inc mov scas mov cmpsl mov mov inc jg and cmp jl fwait inc inc inc mov (bad) mov adc push insl flds adc push enter mov and dec js ficompl push test dec cmpsl mov clc sub movsb hlt adc pminub stos xchg data16 add add add add cmp xchg lret jmp jb fistl icebp lret cmp jmp inc loop fidivrl push loop mov out nop int3 inc in (bad) repz mov popf sub (bad) out loope xor mov out adc test pop outsb test ja mov sbbl outsl cld push and pop cmc fisubr insb lds aam addr16 sbb jne arpl pusha les aaa sahf and mov mov icebp jg pop dec pop jo pop pop and lods add add add test fidivrl jnp push mov push mov jl cwtl ds out inc mov sub test sbb shl repnz inc nop cltd out (bad) into lahf aaa movsl jne push (bad) sbb xchg outsl out rol or sbb fisub cmp jbe mov jle mov sub mov fcmovbe push mov ret das xor jmp insb xor nop insb mov stos bound fdivrs mov in or mov xchg sarb popf push push xchg mov in (bad) or add add add push pop pop mov stos andps arpl lret xchg push lods and mov xor mov imul pushf (bad) mov sub lcall (bad) mov inc pop loop imul add jnp daa scas mov lahf sahf mov mov mov decl jae sub sbb xlat mov faddp mov pop repnz (bad) hlt cwtl shll movsb jbe mov push xchg xchg stos push push movsl mov (bad) aaa shr jmp int add add add add dec (bad) mulb popf inc pop cmp (bad) sbb and dec inc int stos rcrl cmp sahf inc stc ljmp icebp enter and jae stos mov sbb push out xchg add add jp pop out outsb push into jo ret mov mov test push pop jb jge (bad) (bad) stc arpl test adcl call mov jo ficom pop neg xor dec fs add add add pop jmp into or dec add cwtl loopne rcl jmp sub iret lock aaa ficom inc xchg dec adc sbb gs sbb mov loop ds inc cmpsb adc adc lcall lds sub inc or inc xchg add repnz aaa mov push push mov (bad) sarl fwait stos punpckhwd pop dec test aam out (bad) adc pop push sub shll cmpsb cmc or push jns cmpsl or fstpt add add add mov adc bound in mov es pop inc inc (bad) push fbstp jns sub xor fcmove inc mov mov push dec pop sbb test lea add ja insl hlt cltd (bad) clc cmc (bad) call dec sub test in and dec shl or pop movsb cs adc addr16 push xor aas lret jg push enter jmp add insb fs dec mov sahf dec test fistl ja mov pop jp sbb xchg sub add add add rcr es lods jne sbb test pop xchg leave sub idivl iret jecxz pushf or mov out fnsave pop gs mov enter or (bad) stc mov std jp fwait popw jno lahf inc ror shr or jo pop insb iret and add push mov jge jg shrb jge xor dec add outsl xchg push scas xorl pop js enter and or ja add aam push pop xchg jmp add add add dec cmp lcall arpl sub into sar test sub adc (bad) lock js cmpsl mov pop adc jge jl daa aam inc sahf add cmpl lret test lret nop mov push popf jl jae (bad) jmp xchg imul daa in stos fiadd xchg lock icebp xor stos xchg (bad) cld orl dec xor outsb lds add scas mov (bad) fildll (bad) jecxz dec cmp add add add jo inc mov mov jp aam imul mov fnstcw pop dec or (bad) and inc loopne and jnp mov lea fwait pop enter (bad) jmp dec clc loopne pop mov or pop xchg and pusha mov lods orl adc lahf das pushf arpl lret lcall insl add push pushf out jecxz inc daa inc test arpl xchg adcb je andl outsb lods add adc add stos pusha arpl enter enter sub cmovp fiadd daa mov loope and arpl push ss imul push ss stos pop dec push dec jp popa cmp push fcmove sub out adc mov outsb stos pop mov sub test inc js dec cld xor or or mov mov dec test fisub out aaa mov mov js mov adc xlat jmp jns movsb jno push popa stos mov stc mov add add add fs cmp popf movsb cmpps push xor aas add cmp add cltd dec dec mov das fwait mov and int3 jg ds push popf xchg jb,pn push pop shll lock mov pusha hlt int3 aaa push dec repnz popa lea callw jo inc and adc and push iret pop addr16 (bad) imul imul jbe loope cmpl jns,pn push pop adc mov (bad) lock icebp out lock or add add add add sbb and aam insl lret popf push xor sbb cmp push push movb (bad) ds (bad) fiadd xchg xchg cld sbb sub fs push clc pop jle fisttpl call push add jbe or andl push inc sub inc icebp cmpsl loopne dec pop jns jae sub mov test xchg jbe je in shrl push xchg or and out jmp mov sbb jo xor inc ds or addl add add clc and fistpll gs sbb ss sub fnstsw cmc pop in xchg idivl jge je mov cltd xchg js sub adc andl push add mov pop lret push addr16 out xchg fmuls cmp push jae pop lret xor pushf inc pop add and lret ljmp adc mov fwait jg xor xor xorb cltd lcall cmp mov iret inc jge xchg mov clc test xor jnp xchg xchg push sar pop xor jle insb pop daa movsb leave push jge mov aam dec mov dec jmp ds mov rorl xchg aas icebp jb xor sbb mov popa test xlat shlb mov ret mov xchg xchg aam test scas cld jg lods sbb jb inc in adc adc adc lods fs pop xchg mull arpl jecxz push fimul lods jns test mov outsb pop xchg pop lcall add add out mov mov mov add mov rcrb xchg je test test inc jl gs js cli sbb xchg mov add mov and mov push leave mov pop push mov fstpt add pop cmp jmp frstor (bad) std pop jae push xchg leave cmpsl jl push lret decb je stc insl rcr dec enter mov sti pop inc inc cwtl cli push test pushf mov das outsl jecxz jp mov sub scas push mov add aas (bad) fxch lods negb cmp jae pop lods jg mov mov sub movsb inc cltd jmp pop jb pop mov adc cs das out cwtl mov fs test hlt jae push daa jle or lods xorl adc jge add out sbb dec fbstp fstps std std xor loope push add fs fidivr inc sahf jp mov cmpsl mov rolb sub (bad) mov xchg (bad) test push and test test add add fstpl in jns fwait aad sahf mov popf cwtl mov or sbb icebp xchg cmpsb push add sti fwait (bad) mov adc adc push pop add mov cltd push mov mov std sahf push dec outsl xor push cmpsl insb (bad) cs mov in mov cmpsl in leave xchg and mov (bad) add sbb jno add (bad) divl (bad) ds fcmovnbe xchg jno icebp xchg push adc push dec cs test add cld nop aas ficoml add add inc or push cld loopne je cld push add imulb mov daa pop xchg inc nop xor cmp add dec push clc mov or in sbb hlt adc jp add inc jge fwait in inc js,pn add cmpsl add push mov loop fist mov cwtl stc push negl gs iret fstl jecxz int dec xor jns stc pop aaa push mul jo mov out jmp outsl mov js add incl shll pushf dec lret lea sub lds out or xchg testb loope,pt jge pop (bad) pop mov sbb mov data16 icebp xchg push sti enter jnp scas xchg aaa pop sbb jle mov push (bad) xor add cmp out mov fnstenv out xor or mov sub insl popf fistl xlat sbb test sub adc mov aaa push and aaa fs and mov movsl xor jmp inc jae pop sub cmp scas push ret and fisub fisub mulb add jge mov les xchg xchg (bad) mov mov adc ds add inc pop push movl ffree fucomip or (bad) aas sub pop stos cmpsl popa adc push xchg jns or aaa dec dec sub sub dec xor mov (bad) cmp out dec sahf fs imul js je pop into add (bad) daa in aam add push pusha or (bad) in mov or jo lea mov add movsb outsb call inc jnp pop test lods xchg pop sbb lcall movsb test push and cmp jno popa gs jbe hlt sahf ror call aam inc mov lods xorl sub push in and sbb jmp mov mov adc aam dec mov fisttp xchg mov add add add lea mov xchg sub (bad) mov lea stos jo xor lcall sub xor movsl mov fnsave pop xchg add mov dec cli ljmp rcl sub dec dec mov inc (bad) popa pop mov popl test scas cmc sti pop iret mov xchg imul cld sti sub movsl push push shll xchg inc fisubl es insb add cmp mov sti add mov bound cmc dec ficom mov push lcall fmull (bad) xchg push ret ret cmc and xchg add aaa (bad) daa lock fdivrs inc and outsl and xchg (bad) mov push mov int cltd sahf rcrb sbb aas stc mov mov movsl lock add or push fmul fild cltd mov stos cmp (bad) (bad) push xchg frstor movsb inc cwtl jne xor mov jp fdivrs (bad) cli xor repnz movsl flds or sbb push les add add dec sub ja push mov push mov movsb jbe lock bound pop jle mov stc out aam xor or out push movsl or insb fcompl mov aaa pop mov cmp fisttpll push pop push or faddl dec int3 xlat (bad) stc jb fwait repnz pop (bad) outsb add or test push jno mov push sbb push cmp out pop sti pop in stos test add pusha jne add sub push fisubl push or xrelease cli pop gs in xchg lcall in sbb mov in inc mov push jmp or ljmp push xlat lock push je repz jmp cmp xchg and pop imul xchg jp xor mov push das xchg push dec push mov ret dec lods lret mov lods xchg movsb push les jb xchg inc imul inc pusha lret jle add add dec mov (bad) adc xor imul cmp cmc mov pop or jp mov mov mov cmp mov stos xchg rolb je (bad) movsb jae and into aaa (bad) (bad) mov es dec in sbb mov test inc (bad) icebp jge xchg mov and xchg jg fidivl (bad) (bad) insl aad addr16 sahf cli je pusha imul pop lahf (bad) adc jbe cmp xchg add cmpsb loop out pusha scas dec dec pop call pop pusha add add add out adc fldt scas mov leave cmc push lahf pop cmp xchg leave xchg movsb inc (bad) fcmovnbe adc mov test push sbb push daa pop repnz adc repnz jmp gs xchg add xor cmc insl stc and push (bad) gs sbb sbb enter stc push in lds and out inc mov dec and xchg out das cld pop sarl ret imul push dec or dec push mov mov pop add fnstsw pop fxch and jnp jno add mov gs add pop test dec test (bad) test cmp inc dec inc or push (bad) sub es ss in dec sbb mov (bad) in xchg popa sbb (bad) mov nop sar push push jmp xorl mov scas (bad) ss lret js mov dec cld xor int xchg out rcll stos cwtl addr16 clc dec in data16 xchg into int test xchg mov dec adc add lea inc jle sub add add add mov js mov (bad) mov les sbb ret lods mov repz push sahf mov xchg mov mov cmp (bad) lock jo nop ret dec pop push test push cs enter call in sbb fistpll pop fdivr sbb addr16 icebp jmp mov dec sub lcall maxps test shrl hlt inc test or dec cmc cmc in movsl inc sub inc mov fldl add add add add lcall imul jle inc cli cmp mov jne in repnz adc pop gs push stos std setl push mov shrl shlb mov nop sub (bad) icebp mov mov mov test sub incl lret fbstp stc enter cli sbb cmpb dec ret cmpsb (bad) fisttp jno test or fist mov loope dec or add add add and in cmp inc in jl cmp ret sub mov sbb aas dec stos imul inc sub sbb jge adc int add sti int mov jbe or adc push adc mov pop fwait aas int cmp adc fwait mov xor cmc mov sub add lret lahf pop out scas pop ret mov divb lea frndint mov test push int3 in leave jne cld pop out ja add add add and hlt leave sbb bnd jp mov ss dec sbb in iret fstps mov xor cmp (bad) fidivl jge mov jo (bad) mov (bad) mov jno hlt xchg dec mov ds adc pushf arpl jno dec adc sar lock push push iret xchg dec xchg fnsave gs xchg aaa pop std adc cmp orl dec stc xor movsb cmc dec pop xor jl sbb mov movsl add mov rcll jns adc cmp mov jmp fist pop inc jns repnz xlat mov cwtl (bad) jecxz cmp or scas add mov rorb out in pusha mov fcmovb dec add out mov loope sarb call dec jg sbb mul jmp mov popa pop daa mov pushf aam daa push sbbl (bad) mov gs jmp adc rcr adc pop scas loop out cmpsb pop dec xor jbe ret add insl sub sub mov fwait cmp jle cmp ljmp push sbb ret scas dec fs in loop (bad) enter insb and push sbb cmpsl lods movsl inc and sub roll jbe stos mov push dec lods dec pushf imul lcall push std mov xchg adc sarb push es jg sar movl fbld xor push sarb leave adc lea insl ret xor mov add add or adc in fmull movsl xchg lea xor mov xchg xor sbb cmp sqrtps shrl push sbb clflush push jmp push aaa pop fbld push inc outsl imul imul in sbb xor pop call xor (bad) or imul pop in cmp sub push add aam mov lods xchg shrl fwait cmpsb out in lock (bad) jns insb xor gs add push lock push xor cli cmpsb and cmp movsl cld test sbb inc int3 push repz or pop int3 popl pop adc pop or dec shrl fyl2x ret xor bound mov pop add jbe mov in pop sahf hlt dec and dec scas out jns dec mov mov or push sbb out pusha mov push fyl2x mov jno xchg push (bad) cmc cmpsl test push pop mull pop inc pop enter inc fidiv jle mov adc xor incb jl imul push mov imull icebp or leave xor sbb (bad) decb mov cmpsl adc je gs outsb jp inc in xchg dec jle cmpsl or xlat dec ja in stos cmpb mov mov dec subl cli mov pusha (bad) mov add nop adc jbe bnd push and (bad) push lahf arpl sub (bad) lods aas pop imul inc addr16 add add add mov mov pop repnz jnp scas out out mov add je and dec ret add mov lea and cmp mov cmp add test dec add cmp adc push repnz and inc pop sbb or repz mov daa lahf into in fwait jmp and popf xchg insl cwtl jo jg iret mov sbb fidivrl mov jns,pn pop lret sahf into push daa stc mov int and dec add jne sub hlt jg pop xor add add mov in emms std push out cmc movsl in add push sub mov int3 cmp les (bad) test mov cltd sub xlat mov jp movsl cwtl xor mov inc rorb ja scas loop xchg cli ja mov push pop rolb or or sub imul jmp aaa xor jb movsb movsl add adc rcl mov loopne push xlat out fnstcw dec inc cmc xchg cld push cmp inc notb daa jbe fwait mov clc sub push scas sub sbb out mov push xor mov cmp jp xchg nop cmp jno xchg stc iret iret jge les aaa decb pop iret and lods jge rolb das movsl or nop popf add jns cli div (bad) lahf mov jo fwait sbb shrl mov lcall pop aad xchg xchg mov mov popf cs pop repz xor sub push sbb and inc aad adc mov test pop or add jne pop jno xchg add add add jbe sarl scas stos in cmp repz pop mov push lcall sti frstor fcoms mov mov mov and mov pop cmp ljmp and in push jecxz fdivr cmpsl sub in or negl into xor mov dec mov testb (bad) in les int dec pop test mov fisttpl out jmp insb or xchg jne loope push (bad) icebp push pop insb arpl enter add sbbl add add add pop int3 cmpsl (bad) and das pop pop pop ss cmp lahf xchg cwtl add mov sbb shlb cmp imul (bad) jne nop pushf js push mov enter (bad) out and mov loope mov stos dec cltd pop lea xchg lock mov ds aad ret mov sbb sti dec cld add test pop test mov aad clc lods cmp ds out lahf loopne sbb out jge mov xchg cmpsl cwtl rorl js sub pop pop push (bad) jb out add add add add add pop inc or ret insl push inc mov mov cwtl xchg popa js loopne pushf xchg sbb jp add rcrl inc push jne cli test cmp scas mov pop lea cmc fdivrl dec mov lods scas or mov xchg jo cmpsl lock ss cmp out js lods sbb sub sbb lahf sub inc pop testb sbb cmp loope shlb jo testl pusha cltd dec idivb out aam loopne movsb dec lcall jle add add stc imul add test mov mov out mov pop sub pop sub outsb jbe ss in push (bad) out push (bad) cmpsl pop xchg inc mov sub (bad) popa cmp xchg mov test negb scas loop adc shrl clc lcall pop xor (bad) pop jp bound cmp in push mov mov lcall mov cmp aam out (bad) sub pop cltd xchg xor mov add add add leave (bad) mov push pop xor stos lods repz xchg movsl call nop push negl cmp xchg and adc and icebp pushl mov and pusha sti sbb jmp add mov xchg lods cs icebp daa cmp loop sub sub lds jo push gs cwtl xor roll pop mov inc xor daa pop shlb inc cmp insb daa in jl dec (bad) adc lcall add pop in inc mov dec cld scas push imul mov leave jg mov not or add mov iret dec dec mov roll add ficompl scas rcrl xchg push or xchg mov js fidivr (bad) xchg adc dec sub lea cld mov pusha jno mov (bad) dec (bad) and mov lea (bad) ljmp out or pop push aad xchg adc imul ds sub add add add incl repnz scas sbb xchg shr loopne push sahf pushf cmpsb insl jae push inc rol lds roll arpl cmp mov mov mov shrb divl cli fimull push jbe mov lcall fs stc repz adc sti xor or dec jp mov test pop lret hlt (bad) cld push cwtl pop les cld mov cwtl sub popa ret (bad) pushf in lds out or xchg outsl sub or adc add add add shlb jnp in pop int3 loopne pop pop mov dec inc repnz sub and xor in stc push adc mov mov stos or adc add data16 mov mov add ds sub or dec pop or ds mov fsubl (bad) cmp (bad) or test inc and jbe mov cmpsl mov movl imul lods insb push pop loop dec pop add dec pop push dec push icebp nop xorl and and jmp sub mov push sbb test hlt or imul and int3 inc clc adc cmpsl popl test leave mov push mov in les mov and ja pusha es ja (bad) mov cmp or mov (bad) push fdivr insb inc pop (bad) jbe mov inc cmpsb imul add (bad) lock pop (bad) push pusha iret lret std mov ss das (bad) add add add add sbb jge jae loop cmp jecxz les in shlb jle rorb mov push sbb in cmp xchg (bad) lcall ret sub sbb bnd push in push in mov arpl dec ja pusha out sbb mov inc cld inc bound out in push xor sub pusha or inc jo push add repnz add repnz lcall lcall cld pop imul xor sbb ljmp add cmc ja pop movsl (bad) inc icebp or adc dec jl dec dec xchg (bad) hlt xor jb rorl and out or push cld adcl idivb pop add cmpsl sbb dec jecxz add (bad) cmp into fwait cmp das ja fs ss and out sub int inc movb jge xchg add aas add scas mov lods adc xor push lcall pop dec push (bad) cmpsb pop jmp add in (bad) sahf (bad) out mov sub stc dec pop cmpsl add add add mov mov mov sub je gs leave jg mov push fucom mov inc mov mov divl jmp cmp xor jno (bad) out in sub cmp or push dec (bad) arpl movsl scas adc bound es adc xchg mov jecxz mov cmpsb (bad) mov ret ds adc subl sbb xchg jl testb add add add add inc test nop js loope pop xor push mov aas in gs loop fildl repz out xchg fistpll das clc movsb inc je push imul push jmp int shll mov loope ds pop inc mov inc add mov insl aas fidivrl or sub or sub mov lret movsl inc xor jmp int mov sbb shll cmp pushf mov rclb xchg inc sbb mov and add add (bad) fwait mov leave lret mov add mov mov lock insb movl jl ret daa mov jle ret jle int3 or sub imul xor dec xchg push add push sbb or orl arpl dec lock outsb sti mov out xchg push cli movb xchg xor or cmp (bad) into cwtl pop jg lret xor and mov mov sub popa lods dec and xchg mov cld jecxz lea add inc mov lods cmp ljmp pushf inc inc xlat cmp mov mov mov xchg (bad) std dec (bad) rorl cmp sub xchg jb icebp xchg push ljmp mov mov mov jns and arpl push dec pop mov call pushf imul insl cmp push es lods pusha in push (bad) cmp pop cmp aam shrb test add add add pushf xor fwait es jns out inc das das mov repz (bad) dec jno std (bad) mov mov test xor xchg or aas mov sub adc mov mov sub nop push adc push les push lret repnz sub mov mov aad insb insl jp xchg cltd dec push out bound lds std dec cmp ja daa ja inc pop in sub fstl mov or loope adc add add mov aad nop mov xor roll lret pop rcl push dec ljmp fistp pop aaa enter enter mov icebp sahf fiadd out or xchg (bad) fcomps test sbb nop cmpsb into mov push jle jg addl mov sbb xchg mov movsl pushf xchg jnp loope lea (bad) repnz mov cmp scas dec inc jnp mov rolb roll jbe lret lods mov out cmpsb mov testl cwtl loop add add add add js sub mov sub aam mov sub mov xchg or adc cmpsl cmp and stc adcl (bad) nop inc enter out in mov push arpl inc (bad) fs loope jg jge out sub bound or xor mov inc xor and lds loop testb or and mov fistl (bad) pop (bad) sub add ljmp stc add mov add add add inc xchg mov pop in scas and sbb adc sub in dec xchg mov inc jns and adc call sub mov sar sub daa or mov pop mov pop and rorb and aam add jl add ljmp xchg stos or mov out int out hlt insl pushw sbb rcll dec mov out xor cmc add pop add or cmp sar sti insl inc shlb add add add jno sbb cmp loop lods out in dec mov mov js aam adc pop mov push mov mov cmp mov rol mov push (bad) iret stos repz xor icebp pop inc rorl out lock in add scas pop cmp mov push mov mov mov sbb add aaa mov shr popa mov xorl xchg shrb (bad) dec pop lret inc or addb push push mov lock xchg mov (bad) fcoml add add add dec sub js sarl jle mov xchg mov sub cmp mov sbb test xchg (bad) scas std xor fiaddl jmp les cmp jge jns inc or xor movsl lret or inc jecxz add adc sub ret xor out inc push mov xchg outsb cmc fucomip inc push sub cli mov test or push stc rorl sub and xor push cld inc outsl push test mov sahf test icebp jns je add add add aam dec cmp mov (bad) dec adc adc inc mov ret scas aad and test dec lds ja xor xchg mov jbe jp push orb push push or cs add mov icebp jp roll or cmc int3 jnp mov aad (bad) cmp mov test leave popa mov cmpsl inc sti pop add inc shrb push mov jne lods or pop (bad) mov push in fstl add adc adc mov lahf sbbl sbb add add add adc ret push fs jl sub push mov xor mov cmp xor dec cmp xor and and mov or (bad) lret push fdivr mov xchg xchg add out adc out loopne rorl lods mov dec jne cmp lcall inc and lods pop cmp int fstpt out (bad) fsubrp sub aam mov jmp or aam xchg das add rorb adc or add clc fistpll and and push jns fcomip pop test lret pop mov jnp inc nop nop mov or xchg jae push mov and lods mov mov jg mov mov mov rcl jle sbb xchg jb mov call and jae stos stos jle jb mov xchg mov sbb mov jl out (bad) or dec mov stos inc mov fcmovbe cmp clc scas in pop cwtl fstps jno in add add pop cmp into addr16 pop jge or or icebp call add lea and adc pop rcll push loopne push (bad) ss xorb mov shrb pop faddp xchg outsb lock or xor fadds mov add out add cmpsl repz dec out sahf notl jmp pop xchg mov mov pusha into sub (bad) jb xchg pop push in jb je scas es jo mov jg fcomps mov xchg rcrl popl add mov and sbb cmp add add add xchg insb (bad) leave in cmp push pop sub daa jle mov push sub xor dec jne aaa pop loopne cmpsb loop repnz test aas or rolb push xchg in jl and ja mov xchg and sub sub lcall mov rcrb mov push mov in push pop pop add or or mov cmpsl jg cmp inc jecxz add dec lods pop mov and fidiv xchg jecxz fwait dec or add add cli push and push imul movsl cmc pop stc mov xor sub mov cmp sbb push pop je ljmp adc mov push into or in xor aaa jae fmuls int aad mov pusha sub fldt loop and rcr jmp faddl adc pop dec fwait pop (bad) mov or mov mov enter mov mov mov and subl mov cmp add add add mov mov stos outsb sub scas inc test mov fwait sahf scas sub mov push ret cmc out jge std (bad) ljmp fnstsw fild fwait es outsb scas jg fldl mov loop inc add mov push xor cmp or outsl test dec sub sbb out icebp mov jge fisub push and outsb call inc adc jp fdiv add roll and xchg roll cmp sbb lds nop movsb and jnp jge mov mov cs or mov or inc (bad) xchg xchg pop push call push fwait xchg mov sbb ljmp sbb aad sbb sbb sbb xlat add lret cvtps2pd jp inc rcll mov push xor insl add lds (bad) mov lods adc repz stos jle mov jbe pop inc pop in out pop test cmp and jecxz jb sbb aad fcoms add dec jne jp mov pop cli sti jno xchg pop jbe mov iret inc int3 insl loope adc cmp sbb sbb add xchg clc cmp mov movsb lret lcall hlt loop popa push xor dec addr16 in movsl loope dec sahf jno pop mov daa icebp or sub mov ss xor mov data16 jge add popl adc cmp iret sub jmp cmp inc xorl xor add add add or mov mov pusha jne push cmp pop pop dec outsb inc fld rolb rcl ret or inc imul xchg das mov add adc daa pop int3 adc and xchg inc add xchg shll je mov rcrb lret (bad) pushf or dec add scas rol pop addr16 dec mov dec int pop pop imul pop in nop repz loop dec adc test mul xchg or push push aas inc mov inc xchg xchg jmp jae add add add add xchg test dec or into das jmp adcl repnz lods lret pop sbb mov fstpt and or cmp push sbb js mov addl addr16 xor iret pushf rorl mov sahf push jno push lahf fwait sbb outsb dec mov xor repnz inc dec fistpll push (bad) ss cld pop clc dec fnstenv cltd insb ja arpl rorb mov movsb daa lea ror addl es add add add ret sbb mov jecxz jbe push and xor lods test and (bad) repz adc cmp adc pop icebp pop pushf mov xor mov mov lock adcb es sub adc rolb mov or ja sub (bad) cmp dec mov aad test sbb dec jbe mov adc mov push cmp idivb cltd out or add add add jo pushf xor stos (bad) ds jbe inc insl ds mov leave jge push test pop adc push (bad) jne,pt loop (bad) call test lret icebp in cmc jge mov jecxz xor les mov loopne es or cmp int fwait mov outsb stos push lods and push int3 stc jle std sbb (bad) jmp insb inc out dec cmc xor pop cld jle icebp ljmp mov fwait push cmc dec out outsb xlat pop jo (bad) aam cwtl das movsl addr16 inc sub mov mov xor lods icebp data16 shrb mov inc mulps push addr16 add out mov out xor hlt sbbl pop mov lds add add adc add outsl ljmp arpl (bad) mov xchg cmpsl daa mov cmp inc jmp cmp or and sub test jp pushf dec imul xor shl mov mov xchg icebp lds lods dec mov jg movsl sti sub mov sbb ss mov jo cmpsb and std jne (bad) pop aas jp (bad) outsb lret mov xlat mov dec test adc ljmp int lock pop daa sub int3 lods adc pop dec xor mov in mov inc idivl dec pop push and adc mul adcl mov insl mov movsl call and mov inc (bad) sahf jbe fsubl mov add add int adc jmp mov xchg daa dec repnz adc sbb xchg stos and fwait out movsl ja sub aad fnstsw mov xor jle stc inc (bad) jne (bad) sti shrl cmp mov and lea add xchg pop es leave push mov roll das fnstsw imul jmp xchg xchg sbb add xchg push rorb (bad) loopne and in out sahf sub popa mov lea pop hlt cmp sti xchg shll add cmp sub add inc adc sarl icebp fstps pop movsb inc mov and xchg fldcw roll xchg or (bad) insb fcoms jb ret adc inc adc (bad) (bad) ja nop inc cltd notl mov sub scas sub jge inc mov adc and jno std sub cmp and lea lods mov insl jmp dec sti stos mov cwtl mov movsl in dec sbb mov xchg mov jecxz add add add add insl movsb pop xchg jno fnop mov sbbb sbb mov jns add (bad) pop scas jl arpl jb aaa mov adc aaa lahf daa jp outsl sbb aaa imul lods mov pop aam xlat stc adc adc mov call gs jne inc pop mov xchg push sbb mov clc rolb jns xchg inc outsl sbb test mov and cmpsl adc xchg inc lock mov cmp inc ror xlat aad outsl add add add sub xor sar fsub ja or enter fldenv pop loop,pt cmp lret scas pop icebp and jae in lahf mov jecxz cld bound fwait push jae pop pop add xchg sbb and loope mov movsb outsl mov ss lret popa (bad) sbb enter pop jnp push jle lcall (bad) sub mov add call push shll adc andl aad sbb imul mov int dec xor or fiaddl add add add mov mov mov push sbb mov cmp push and mov fsts jmp dec jecxz addr16 movlps xchg and dec gs push inc test pop and add adc jecxz repz mov aam cmp pop mov fisttpll test mov int3 loop mov decb repnz pop test lahf jbe (bad) and or bswap js aam vsqrtss pop and mov aad add add add lea lods enter sbb scas ret pop dec fstp repnz jmp fstps iret popf inc add or xor lret mov sbb inc adc mov xchg int (bad) mov sub jecxz sti ror out scas jae arpl pushf icebp jb fsubrs dec scas lods or out add (bad) pop xchg out fistp pop loopne sarl scas mov fstpl cmp dec mov mov lods lods sub (bad) inc push rcll int3 sti test (bad) icebp icebp push mov scas out jno xlat enter cmpsl xchg dec cwtl fadds cmp cmp fdivrl arpl sub mov je xchg int3 add push push outsl fiadd je jg (bad) aaa cmove sub mov jle inc inc fidivrl xchg mov inc int3 push movsl mov inc or xlat xor pop pushf imul push int jg mov sbbb stos or je idivl lret add add add add lods in scas cmpsb fwait xlat pop movsb fadds and data16 negb fistpll dec cmpsb push jnp push jb pop inc mov adc cmp sbb aas dec es mov adc mov das mov pop mov mov adc mov je mov dec add fdivs cmp js gs pop mov out adc into movsl inc push iret clc add xor sub stc fxch cs negb mov jnp jo int3 push cld jnp repz mov add mov or inc cli mov icebp xchg jne xlat dec mov add mov or ret rcr sub mov adc loope lds ja loopne adc enter dec inc jne cmp fisttp rclb test enter cmp lea push popf ja adc cmpsb or xlat fwait and leave popa dec mov mov add lahf or fwait in leave movsl dec rorb push adc lcall mov inc hlt push jg cmp xchg lds je add pop adc xchg lret les fcmovb icebp xchg lahf fdivrp dec sub setle mov shlb or lahf push jae repnz enter fwait inc cwtl sbb pop jae lret sbb mov mov int3 jne out clc or mov (bad) push or mov ja lret mov adc aam iret dec mull sahf dec ficomp adc jne mov aas jge sub add add add add mov and loop popa cmpb in rclb pusha nop or push call lods add outsl cmp jmp popa pop stos das (bad) aaa (bad) push xchg push push rcrb mov test ss out xchg and push adc jl and (bad) (bad) jmp jns mov jmp cpuid test (bad) aaa xor or mov mov pushf xor pop (bad) dec icebp mov xor test lock sahf add stc inc mov xor mov testl sti sub jl or or popa shll add cli pop loope and jl stos clc rcl cld add mov sbb cmpsb jo inc pop push sub cwtl lcall fwait test cs xchg xchg into pop insb rorb sahf into imul pop lret adc sub mov rol jb push mov xchg add pop push dec or addb (bad) in mull jno add add add pusha dec push jg enter inc sahf dec std push call in xor pop add mov fs sti xchg cmp lods iret jmp mov dec enter loopne xchg mov (bad) jg std pop sub jmp and les inc ljmp hlt (bad) xor repnz inc mov pop and out fnstsw push fwait xchg jp shl sub test xor arpl sbb (bad) mov loopne stos mov xchg sahf xor add add add roll (bad) pop fistpl dec call in sub mov jne lcall popa mov cmpsl mov into lret mov adc aaa je pusha sbbb lock aam add cmp jg lods push (bad) jns add sbb in loopne mov ljmp fwait pop stos adc js ds jle sbbb or cmp sarb cmp outsl mov aaa inc jbe lcall lcall add add add test jb jb loope pop jecxz orl sbb mov fnstcw or inc pop push jl inc mov sbb (bad) ficom push rorl int3 inc clc fiadd in cli leave mov xor pop add mov add rep sub xchg enter mov aam sub iret test pop push mov sti and (bad) addb adc into mov or cmp mov mov (bad) dec into xchg fsubrl std mov or (bad) jne pop mov add add add or push es arpl add jmp push xor int3 jmp adc push out push mov (bad) mov push push mov fwait mov data16 ss jbe pop shrb dec int sbb sbb jo jge xlat mov fsts int3 sub lret adc in hlt lods hlt movd xchg mov sbb sub mov mov push clc dec (bad) aaa imul repnz mov les rorb and lahf cmp incb add add add add por pusha loope (bad) cmpsb in cmp cli inc pop mov ss int pop cwtl push stc fwait out pop and cmpsb mov or push push leave pop dec cwtl push popa add mull xor loop fptan mov sbb pop adc or inc fsubrs xchg insl sub push data16 sbb fsub inc in jnp sub push lods fstpl aas jns imul and std jnp or aam jb dec popf or dec addl adc cmp stos push ja mov mov dec dec xor pop cli sub ja add sbb pop ud1 or adc enter test sbb xor (bad) into xor push mov mov push test add mov jle push jp fisubr in sti add fdivr and mov shlb inc inc outsb in mov push inc cmp xchg (bad) mov fs loopne dec add xor dec (bad) mov fldenv repnz jecxz mov (bad) sti lods test xlat inc mov pop add addl xlat push mov xor mov jp ds xor lods or sbb das mov dec jno dec sar fmull dec fsubrs jge add std mov push aas and popf mov xchg into xchg insl sbb sub fcomip faddp sbb pushf lahf icebp push dec pusha shrl adc scas leave push nop jle (bad) int jl pop add add add add mul lret inc in fsubrp sbb xchg scas sbb int3 xor inc out lret add push sbb dec in out xchg and xor xchg cmpsl in xchg dec je int scas xchg sbb pushf sbb push sbb cmp push in jg inc lahf xchg xchg xor outsl (bad) or ljmp mov (bad) dec pop sub (bad) mov add aad xor (bad) popa or inc sub sub add iret inc clc loope xchg pop cli test sub add add add add mov inc cmpsb je imul (bad) xchg fwait movsl stc les stos outsb ret adc test cld jbe hlt and xchg idivl call mov popa sbb xor stos icebp push cli nop lods or or out dec mov ja js sbb fdivrl xchg ror (bad) fisubrl mov repz push pushf xchg (bad) int3 leave xor cs dec int xchg scas fidivr xor push stc dec aad pop jnp das loope ja mov add add fptan mov xor jmp push test cmc mov loop lds in jmp and sub fwait scas xor iret ds sub ja je loope pop aam mov es mov sbb addr16 in cmc cmc lea mov cltd cmp divl xchg push pop popa lret mov xchg mov std test push mov add adc in pushf int3 and fs scas mov mov popf clc mov xor mov or mov sub dec lods dec mov cld sbb mov fwait pop inc dec mov lods popf fadds xchg and or movsl mov dec sbb incl shrl test pop loopne add bnd sbb xchg scas addr16 in cmc adc in ja repz dec jns pop lds out idivb adc ret fidiv test scas sub push xlat sti ja bound xor or (bad) add add mov dec push ret mov daa int test in aaa or daa ja sbb not addr16 inc inc dec lock shrl in xchg jne subb cmp in jnp fsqrt out cmp sbb frstor cmp cmpl je repz mov movsl mov push mov into icebp sub lock dec mov xor cld jnp loope adc hlt dec mov add out sub cmp add add jbe (bad) xchg insl sub and mov jmp inc or in and test pop jmp bound or scas sti mov mov test clc in dec scas mov lods icebp ret mov jne pushf (bad) push sbb pop arpl cmp rcrb xchg cmp ret sbb dec inc (bad) jp cmpsb sahf sbb pop pop fs cs mov sti rcrl daa xchg aam or jbe add jbe mov add add add loope pop fcomps push mov xchg cld inc aas clc test or sahf add add pop (bad) ja lods pop insb stos push fistpll fisttp scas jne pushf les les lods mov xchg inc mov cltd outsb mov or mov lds or aaa fwait sub cmpsl pop adcl test sahf push (bad) out xor movsb roll mov ds iret les push jns das aad cmp scas sbb dec dec pop sub mov ficoml xor mov cli sarb orl int add add add add mov jo mov insl jb mov insb mov push xchg lods fwait lods fwait sti cli lods ds scas xchg sbb jl add jnp adc xor and pushf xchg ss jge jno push scas jb bound mov int (bad) mov in xchg inc mov xchg push int xchg (bad) jg ja mov mov lods pop das cwtl sahf in jl je daa xor jnp cmpsb mov jnp mov jecxz sub sub sbb lods add add add push mov lahf xchg inc pop lret or jae (bad) cmp inc or mov insl movsb test xchg mov mov or xchg xor sbb rorl xchg popa rcrb pop cmp leave scas pop mov out jecxz out out pop inc add push ficom mov sub dec pusha into push out ret mov test mov popa fbstp outsb js data16 daa ja lods call nop nop xchg inc clc or mov add add add add repz adc lret lcall ret out xchg or sbb jp cltd adc xor ret mov fs mov cld sub mov fsubrl pop icebp push hlt jmp rclb pop cmp adc pop incl test into popf or sahf mov mov or cli mov pop or xlat mov jns test cmp adc in dec push xor addr16 cld loope mov std inc call inc or xchg sbb pushf add push mov inc adc std cli lock jmp fwait add add mov jl mov (bad) icebp push test or inc into subb cld adc loop jnp xor or test cmp notb mov stc cmp (bad) jns outsl in jnp jnp pop push rorb outsl dec mulb pop ret sub pop mov jno stc xchg cmp int3 jns add jle pop push orl mov sahf adc bound movsb add cmp cmp insb in pop popa ljmp aad mov test and jecxz and dec scas pop test xchg xchg scas xchg xor in sti xchg mov nop mov xor (bad) push int sub fadds fcmovnu bound imul and adc cmc lods cmp cmp in lcall icebp lods jnp into or adc call jmp pop fcomip or and pop int3 rclb jns add add add out push mov lret mov inc xchg in jns mov fdivrs pop push ret or dec int3 jmp lds sub fbstp and (bad) dec mov mov mov nop adc xor fstpl xorb mov inc push jbe pop push ds or inc fldcw roll xchg (bad) mov xchg cmp xor mov lcall loop lods jg or leave and stos mov imul push dec inc and add add add add bound clc insb (bad) (bad) in push inc fdivp (bad) loopne sti cs dec or jne shrb dec mov ds (bad) nop jp popf jl (bad) adc ja mov sbb xchg stos imul into mov jo cwtl lahf aas cmp icebp sub inc add aad mov mov pop cmp or sarl pop (bad) movsb xchg pusha push mov test je aas jmp xor out push and adc testb add add add add ljmp cs cli pop jmp test pop mov or sbb xchg xchg xlat pop cwtl nop fwait pop adc xor push popa or mov pop (bad) pop mov stos xor int3 das in push cpuid loopne push pop sub push push repnz mov xor aad mov out mov inc stc xor mov cltd jmp dec inc lods outsl popa shrb dec push icebp xor adc fld push xor mov fiadd add add add jbe dec add paddq scas mov jne stos popf pusha lret call adc pusha mov or xlat stos cmpsb jmp repz and mov add jecxz adc sbb je or loop (bad) ret adc outsl ljmp je jne,pn in scas stos test aam and jnp cmpsl sbb lods xlat test inc cltd mov incb test mov dec lret pop aas and mov lds insb cmpl add add mov adc imul pop jg repz add xchg movsb jecxz and movsl lea dec bound fisub mov mov outsb lods cmp incl inc loopne out outsb jp and dec jmp push mov imul dec mov orl inc loope adc cmc stos jg repnz jl std mov pop (bad) xchg mov xor push js out adc dec mov cmp sahf out fcomp adc dec cwtl mov add add add sti int3 pop ja pop imul inc enter sub (bad) ror push dec push jnp mov push test inc ja xchg mov xor pop push mov adc and loope pop or xchg mov pushf inc ja and hlt pop mov adc mov mov push push cmc icebp push adc mov jl cmc dec sarb loop mov jg jle (bad) mov scas mov dec push movsl ds jl lock lods iret mov sbb pop or add add add lret in mov cmp (bad) cmpsb add push ja popf or inc jb loope mov jnp cmp push add fidiv xchg sbb icebp (bad) in push out adc push sbb xor sahf ds mov out jne jg je in mov repz mov negb dec xor mov aas outsl call sub or test jle xchg test mov jl lret and push push shl lods les lea nop xor sub in add loope xor in dec out rorb add mov adc je or xlat xor mov dec sti inc sub pop mov mov and lret insl testb stos xor in or sub sar popa ja push lea jne call bound pop int3 adc cmpsb dec and mov testb jbe cmc mov mov push (bad) cli ss mov sub jae adc test jmp mov movsb jbe lcall add add add push jp fwait add mov stc sub jno mov sub or nop js push pop jno call jno imul adc incl or jg aam clc (bad) not xor jne xchg shrl out mov mov xchg jbe or sub lds xchg dec mov pop ret mov mov xor ss data16 testl push pop insl push (bad) sub jp mov fisubr pop pusha or xchg xchg or add add add push scas pop cmpsl data16 mov mov adc adc or lahf in (bad) stos dec mov sbb xor popa or add das mov mov lea test cltd aad push adc scas or std sub imul push inc lds (bad) jns fdivrs add pop mov je dec imul xchg scas scas add inc sbb es or push fsubl push xchg add add mov shl bound inc cltd idivb push sti inc adc mov push (bad) mov or arpl mov pop sub adc sub rorb imul movsl cmp pop sbb jb mov sbb lods sub xlat and add push ss pop push add sahf pushf or or jmp push add sahf push pushl xor iret outsl pop mov and and adc jb jne jnp push int into cmpsl mov bound sbb in add xchg xor xor data16 fidivl test add jl adc cmpsb insl xchg mov cmp je sbb inc (bad) or test and lea popa jge and ret push std pop lds push insl sub xchg and cs push dec jns (bad) shl (bad) lcall mov mov in pop clc push bound or push xor mov lds nop rolb pop mov mov loopne pop pop mov xor add add add and imul mov dec fst push mov pop mov lds lret mov pop inc cmp lcall mov jb sbb call cmp ja scas movsl int3 iret pop imul scas popa pushf adc mov loopne pop mov scas pushf movsl cld xor push xchg mov iret repz (bad) fisubrl mov dec pop sub mov int3 movsb hlt push into out inc push xchg rcrb roll add add shrb jb icebp mov out ret mov decb push and add std mov add sub sub mov hlt inc das or add and out outsb stc pop or in fdecstp jmp dec cltd jo lds push push fsubrl roll push mov inc js roll lret js ret push add or mov add daa (bad) iret psadbw add xor pop mov sbb pop or adc add add add sbb pop jl clc add int ret lock pusha cs in mov cmc ret mov rcrb mov mov xchg jbe dec mov ret fildl xchg sbb sbb popf push jo scas cmp jmp aas mov ss mov test or loopne orps or int3 mov inc xchg fwait xchg jns jnp repz mov pop fnstcw andl aaa imul lret in mov add negb pop aam mov in add add dec sti outsb mov sub lahf movl es adc xchg mov adc cmp mov jl pop xchg xchg clc xchg rolb lds int dec out mov mov mov push and (bad) lea fdivrp or push and mov xchg mov popa or or repz out and xchg adc adc mov jb sub dec mov push push xor dec out push push das and (bad) inc mov mov add add add mov jp adc and ret stos (bad) fcomps mov jns std hlt pop into xchg std imul (bad) mov (bad) (bad) pop mov addr16 mov rcl lret gs dec popf repz push sbb dec aas repz lret mov add sub data16 jl adc out push cli jne call cmp out daa jnp jecxz (bad) daa mov hlt es daa push loop dec pop icebp pop aaa xchg push push (bad) sbb add add ret dec mov pmullw lahf shll push cwtl jns nop aaa jmp test cmp scas jmp xchg mov daa add (bad) jnp mov jo sbb mov in fisttpll daa imul push xor mov cld jb imul or scas (bad) xchg xor ret out mov aas jp lods sub enter jns mov inc jne in pop cld sbb push sbb in xor xchg pushf popa rol jl mov add add aas mov leave movsl shl add mov loope or or and fld push xor push pusha bound or in test scas pop xchg dec arpl mov roll sbb in mov cmpxchg mov sub roll sub fisubrl pop pop push jno icebp scas push data16 add sarb out out (bad) scas cmp jo jmp (bad) dec nop and push or mov mov push aam in mov in mov bsr lret sub add and mov mov lea jp dec xchg dec jnp cmp mov mov adc cmp int sti in mov lds in das mov sub daa fisubrl aaa into push sti decb push hlt adc jecxz pusha sub adc xchg testb xchg jns fdivs mov (bad) je (bad) imul rcr mov and call or addl add add js popf push movsl imul popa orl push jl jl inc outsl and push mov push and lods outsl add jp push out pusha adc ficoml or pop push data16 jmp clc sbb sbb shll fs cmp lods inc shll add cli loop jb or (bad) and insb dec dec dec fild cltd in mov and or stc push sar add ret xor cmp and call dec dec test add add add mov (bad) fbld (bad) pop fbld and insb or out push fnop imul inc mov jno (bad) mov cs xorl popf dec insb fisttpl fxch stos mov cmp cmp add xor sbb mov in imul bts insb push mov fadds iret adcl cmp icebp dec test push mov xchg pop inc dec push and inc or fstl xor pop mov add add add (bad) mov repz lcall mov lods mov sbb cmc rcl dec mov aam lahf outsb js xchg (bad) repz jmp (bad) in adc sar imull les mov ss xchg cld mov outsb sbb jge repz aam dec insb xor adc cmp das jno das imul or cwtl fucomi jbe mov jne mov push pop cmp dec in push pop fdivrs xor dec sbb add add add or push adc cmpsl bound sti add jp fwait jmp xchg adc sub pop jge xchg out notl cmp adc push test leave (bad) adc push (bad) cmp js popa xchg mov fucomip push mov mov mov lret in int3 jg sbb in dec imul leave cld rclb sub mov clc (bad) adc cs in cmp push mov mov or mov loopne sub scas push push gs in roll add add add aad gs adc (bad) mov loopne in and nop test or lods dec push mov imul pushf iret lcall dec call push fldl in pop rol mov lods adc dec xchg lcall sub sbb bound popf imul jge sbb xchg sbb outsl mov xchg dec xchg push call xchg adc cmp pop fsin mov lahf out add (bad) icebp mov add add add mov out push loop mov pop lock xchg sahf movsb sbb or dec movsl test sbb jg xor sub out xchg repnz push mov add sbb mov xchg mov js add fstpl mov test push in mov test in push rolb lea or dec cmp pop (bad) or adc scas mov test mov mov imul clc push sbbb ret jl push fs push pop push into push stc jbe push cmp fwait inc cld push dec (bad) lret mov mov nop pusha rclb push sbb (bad) mov sbb (bad) jae pop cmp stos sarl push out adc into jo fidivr jg,pt push (bad) and jecxz test pop scas mov pop cwtl push in cmp jl dec mov imul ss cmp dec insl adc mov jecxz in (bad) hlt jbe add mov jae leave add add add add roll idivb mov cmpsb out (bad) pop imul or pop out fs mov lret cltd lods cmp or sub dec jg cmp push add push fld cmc lahf adc movsl lahf jecxz mov dec cmp cli lret (bad) pop sahf aam lods jno push ja cwtl in xor push sub (bad) js push aas (bad) and pop jge mov lods (bad) and xlat add jp adc mov adcl add add add push xchg adc cmp add xchg out js xchg cmp insl mov xchg je mov pop cli jge mov or aad outsl rol mov leave enter mov int aad push (bad) arpl in xor add and dec inc loopne xor cmp loopne inc cmp pop mulb mov sub mov pop and push out imul push mov test testl mov (bad) cwtl xchg pop loop add add add xor loopne jne cmp arpl ret mov mov push jns lods push pop xor jg pusha lea js mov mov adc fucomi cmp in mov sbb mov out pop loope pop sbb les push std xchg icebp imul push cltd jbe aad in or into (bad) pop aad xor or mov and rorb lods sub mov jb or int3 (bad) jge (bad) xchg popa jne jnp hlt push xor insb pop jl or or scas test add add add inc pop pop cltd or int (bad) mov xchg insl mov jbe pop sbb sub jle push ror pop adc and mov inc lret xchg sbb push cs jnp sub lea dec and push shlb ficomp daa mov xor shr imul add pop out adcb add int3 add data16 cmp fldt arpl sub and and xchg mov add mov daa mov daa mov mov aad cmpb jae xor xor inc mov push daa jns xchg and xor pop dec loope sarb mov pop push test sbb sub sub sub inc inc fwait pop ljmp mov push shlb mov pusha (bad) mov fcomp xchg sub ljmp xchg out add lock sub inc dec xor sbb push xchg mov sbb inc mulb dec int ja in fcmovu inc mov mov add pop outsl dec test std fwait loope push pop arpl ret dec push stos insb push scas push or and enter push inc adc sbb and rcrl lea fcmovbe lds mov aas jnp pop jecxz pop jp mov add cs mov mov ja or fildl jo divb bound push and pop stos push outsl or aaa mov push or les push faddl ljmp xchg bound sbb add rorb mov add add add imul add mov fs xor xor cs cmpsb stos jnp fs pop cmp jp pop mov push add mov je mov sbb xchg add and pop add repz notl popa inc dec push or mov xor and mov mov out inc sub jle mov dec mov jb push cmp push mov cmp adc and das add add add fcmovnb aaa push add lret out jle inc mov or add sub add repnz xchg and outsb sti sbb cli xchg xchg xor xor cmp (bad) mov add js fcomps add movsl mov bound jae dec fisubrl jns pop std jae mov jo mov stos dec cmp push jbe mov dec pop dec pop adc sub outsl push into clc (bad) in stos daa movsl add mov stos test cld sbb mov add add add repz jle data16 xchg clc jge mov mov sub mov mov lahf ljmp jmp mov sub popa jp loope les lcall je mov adc or rcll fwait sub or ret sub sub test mov repnz and mov stos pop add into loop cmp ficoml fwait pop call rorl fild sub cmp push add add (bad) cmp jb imul imul nop loope fwait jae mov mov jno std inc and pop add cli pop imul outsl das add adc and xor (bad) xchg out fbstp in cmpsl mov jne rcrl pusha inc mov movsl push ficom repz sar icebp int jp pushf das sbb (bad) xlat add push ds mov dec cmp (bad) jg sub xchg repz pop loop and jl lods adc mov cmp add add call push imul pusha fucomip shll fdiv push and push arpl mov aaa jge and and mov std dec (bad) repnz mov dec or mov dec or add loop xchg pushf adc mov mov xchg mov sub pusha sub rcll jae std push incb out movsb (bad) flds notb cld push and sub pop add in js or repnz repnz daa lret and inc pop push add xor dec mov add add add iret cmpsb or movsl popa sbb sub push ljmp mov dec in xor outsb jmp and loopne mov fbstp int3 sahf addr16 pusha mov pop (bad) pop add dec hlt add jno shrb push jmp and and loopne pop cmc xchg jg movsl inc ljmp pushf cmc scas cld mov ret and jge xor mov mov dec adc adc ja add pop into pop sbb daa (bad) icebp ret and lahf mov (bad) adc add pop nop out adc mov divl push pop out jno (bad) xchg pop pop adc (bad) (bad) jmp into movsl dec sar mov daa cwtl xchg decl sti jbe mov pop mov test shrb jnp (bad) sbb notb inc mov insl int std mov mov aaa das push pop and test xchg aaa and pusha xor jp inc (bad) jae inc jge adc pop rclb push stos inc add add (bad) int shrb imul lea pop xchg jmp out fmuls add add add stos scas jb mov mov push xchg addl mov adc les push dec xchg pop pop or clc mov mov insb sbb or sbb test dec jmp (bad) dec cmp mov fs jnp sarb iret call push and cmpsl or or icebp push push mov xor xchg ljmp movsb dec int xor xor cltd sub dec push outsb andl add add add mov xchg inc mov les mov jne mov xor adc arpl inc jnp xchg adc in test mov (bad) fiaddl xchg cmp pop loop push mov or sbb inc jns lds iret lret mov jp push mov and enter push and adc xchg sbb push pop pop loop push jns xchg and dec dec mov scas jnp sar xchg jecxz test xor add add add push sbb dec cli cmp shl fimul repz pop or dec inc jecxz loop inc insl cmpsb push xchg es sub and adc test repnz sub sub fwait mov bnd notb lret add jae jne dec xorb pop push fdivrs mov inc test aaa dec in cmp xchg imul mov out adc lock sbb mov xor (bad) test ljmp adc cmp mov push mov add add and scas inc enter (bad) shrl popa mov jmp mov mov and xor addr16 out nop outsb sbb sub mov (bad) fwait add fdivr add leave loope pop or lock sti pushf push repz loope nop and jecxz ret sbb push cli xor loop cmp pushf fsubrl fiadd push mov (bad) addr16 fcoms cwtl push pop enter lahf pop push jno addr16 popa mov mov insb adc add add add ja inc stos xchg xchg lods sub addr16 pop rep and nop/reserved popa lcall dec movsb push fldl mov daa inc stc mov xchg dec jnp test dec js pop sbb xor ds sahf repnz or xor mov mov pop and xchg xor jecxz jmp or pop fsubrs jb ret mov cmp inc int3 push insl bound lock imul or fstpt pop mov sub loope sub add inc push xchg dec or out mov cmp (bad) scas push xor or rorl pop les scas pop stos pop adc dec stos loope scas lcall dec xchg dec ja lods js popf bound xchg xchg ja dec cwtl in testb jmp inc stos push loope iret xor xchg decl movsb jne jns inc hlt jne xchg rolb push imul in (bad) xchg stc nop mov fistpl out jecxz movb add add jl (bad) clc fisttpll incb jb mov les mov lahf rorb test dec fbstp mov mov ja mov add jl xchg aaa lahf mov pop icebp sbb push cmp aas in jo rorb or test pop jl mov movsl int aad test out clc hlt cmp jle enter call fldt sbb insl stc addb xor movsb xchg dec int (bad) gs sahf pushf fmul sub add add push cli pop pushf imul add popa dec inc scas fmul xor divl test mov in cmc in stos leave lods mov out mov mov nop addr16 sub sub push push jbe inc adc xchg popa aaa sti mov js into mov out mov cli push push or jge test insb (bad) and mov sbb pusha rcll xchg pop ljmp sub jae sub jp (bad) gs mov jmp hlt xchg adc repnz add add addr16 pop std mov pushw test pop inc xchg mov jnp jbe lahf pop push xchg cmc jno pop aaa xchg pop ret nop xor and pop inc push jnp out loope add ja bound daa test add and dec mov in out out mov sarl mov jae aad dec ja imulb testb jae fcomp test xchg cli cmpsl outsb cwtl lret scas mov cmp sub int3 mov in dec push mov and in jmp outsl cmp bnd (bad) call add add add fistpll cmpl test push and int3 loope xchg mov scas sbb ss cli mov or testb mov jecxz mov sbb lods mov in out dec (bad) into sbb mov fcoms push or add lcall mov sub cmpsb in (bad) sbb add xchg popf nop mov cmp sub jecxz xchg jp jmp andl add add xchg or jno jg js out push sbb cs xchg dec jp iret xlat ret out or add sbb out pop stos and and inc stos mov bound dec fldenv push fcomps xlat adc pop popa fcompl sarb scas les or jne and or hlt add add pop mov lahf outsl insl addr16 jbe ja jnp test or inc add outsb or xor mov mov adc and dec xor add add add test movsl incb pop lods cld movsl xor adc or and dec int3 or pop fcoml xor adc cmpsb dec int aas iret (bad) push jge (bad) mov xchg xlat je xor add (bad) stc aaa pop jns or sbb push adc xchg mov jne mov adc mov lret cmp add jne popa outsl stos ljmp ficompl mov notb mov fwait push adc pop scas jno mov test aaa rcl movsl rolb add add add sbb movsb leave xor jne and adc pop fld adc or mov push mov pop xchg jbe in mov lret inc call andb mov cld adc and add cmp dec dec jo mov fistpl dec aas jge lods jl and adc xchg and mov jo pop mov stos sub push mov push push push push cmp jne jae shll lcall (bad) push add add add cmp add xor test sti mov pop data16 mul aad xchg xchg or das xlat inc jo clc sahf scas xchg and das dec clc in aas lcall (bad) and jmp cmpsl call add cmp push xor stos push jo test (bad) movsl mov xchg (bad) dec jmp xor ret xor cmpsb les rcrl jmp fisub cmp rcrl je or mov out push stos cmpl sub adc add pop adc push sbb mov movsb cmpsl (bad) mov mov push push and mov mov jl pop insl imul (bad) ss sub or inc inc cld imul es cmpsl cmp cld call movsl and fmull ja sbb dec xchg jae adc sbb fidivrl push push pop dec in enter cmp dec pop aaa adc mov repnz lea mov insl push and lea mov loopne push stos outsl dec xchg in add add add jo mov cmp mov inc bound stos mov (bad) mov push sbb mov in test lods inc cld loope push inc scas mov inc inc fisubr and mov pop inc aam mov cmpsb dec std cmpsb xor mov outsb pop push lcall nop ret orl icebp or (bad) je (bad) mov xchg fildll pop mov arpl xlat pushl cmp loope and lret xchg movsb sbb add add add inc and mov scas icebp pop repz mov mov fisub sahf xlat mov aaa mov lret addr16 int push adc fs insl sar (bad) pop mov (bad) pop sbb push out push mov fyl2xp1 mov repz hlt nop (bad) repz adc add pushf jo fs jnp inc arpl sub int3 add les adc cli xchg jl pop inc xchg aas adcl dec jge dec and mov and (bad) xor mov cmp fstps add add add inc lret push or jno push mov push popf or lods dec xchg stos arpl push stos out scas mov lret xchg lock enter pop lock mov ret daa add xchg mov clc out inc data16 sub push xchg fcompl mov rcrw mov pop add sbb cmp push or ja add and dec add repnz xor fwait mov lret cmp sub add add cmp mov fildl dec ja sub mov pop out ror shrl je sbb in jbe out push test flds insl rorb mov ffreep sub lret (bad) push mov nop jb sub loope dec dec (bad) lea data16 cltd idivb dec loope sub fs mov mov scas and aaa fidivl mov shrl insb outsl and mov sbb int3 ret cmpsl push lods enter lock add add add push test jmp inc fwait and addb hlt cwtl insl loop nop push std imul inc test xlat adc popa xor push popa pop adc jle inc jo cmp sarl pop cmp mov sbb dec outsl ss fcomps mov mov (bad) mov push push mov lcall aad ret or mov in xchg xchg mov in bound mov int rep aam xchg cmpsl outsl movsb pop lods pop loop cmp imul adc js or add add add pop inc sbb lahf in data16 cltd sbb (bad) cmp mov pop sub pop mov (bad) dec pop cld push fistpl popf adc fwait js (bad) xchg stc add push decb das xor test adc cmpsb mov cmp push pusha iret lock xchg outsb popf and popa dec sub cli add or out (bad) dec sbb cli les mov xchg adc dec cmp dec cmpsb pop inc push lods xor mov push ret clc jg (bad) mov paddw jmp mov outsl js mov push xor add ret scas aas fildl jle or popa rorl sbb outsl movsb ret xor inc cli and inc insl push sub loopne mov jmp aad jg jp and mov rorb incl pop test inc mov (bad) jnp int3 (bad) call and mov push mov jae or push mov add jnp push pop lods sbb addr16 mov sbb jg clc movsl imul add les cmpsb (bad) outsl test add sti mov add dec push repz jae mov dec or xor mov and outsb call int dec jge jne jb enter rcrb push pop adc loopne int3 mov pushf mov cmpsl sub or dec in or push fdivr (bad) and outsb insl test push sbb mov jne pop fmul sub cmc jecxz adc (bad) aam inc js lret shrl ror outsb mov cmp cs fldenv push push (bad) xor jne enter scas neg push imul fisub inc xor rorl mov idivb test fwait adc mov xorl clc adc inc xor test add test lods cmc push cmpsb daa fwait or loopne add add push mov xor cmpsb or jecxz adc mov xchg mov mov push ret mov jnp lock daa cmpsb jns mov divb rcl cwtl leave fistpll fidivr or ja data16 add add add pop sbb or inc movsb loope sbb ds push jl loop int and pusha int jge pop stos xchg stos sbb (bad) gs and add xor inc sbbl mov sub call out inc mov movsl test imul aas int mov mov in pop pusha (bad) pop mov adc testl push mov inc mov jae jp adcb notb sahf andb sbbl fs movsl test aas test push pushf movlps jmp lret pop mov nop dec (bad) pushl pop and pop icebp popa pop sar jmp jno std dec jne lret mov out jl repz push add sub lret out popf lret data16 pop dec fisubr call ret mov cmp imul outsl inc inc or sbb outsb add pop sbb lds xor push and (bad) das push out push movsb push mov subb mov sbb lea pop push int3 push push add out mov out mulb lret jb out jns and call cli cmp jl test pop mov arpl pusha repnz xor jno mov shll rcrb mov iret mov mov std cmp xchg and push popa fwait push xor inc and xlat cltd inc (bad) aaa rclb mov and imulb sub pop mov lods (bad) lret mov pop addr16 shrl fmul fsub dec and sbb data16 into xor sub insl xor mov add add pop je sub scas cmp (bad) (bad) scas shlb cmpsl mov fnstcw sahf sbb lcall cltd leave sub jbe push push nop dec add insb pushf sub jae nop mov aas hlt adc pop push pop movsb xchg popf nop add mov mov mov (bad) repz adc or popl test inc movmskps pushl push inc icebp xor in cmpsl fisttpl dec popf add pop cli out popf add ret (bad) cwtl jecxz or inc int3 call add add add lahf (bad) mov (bad) aaa and cmp fwait pop iret es xor fildll cwtl mov out movsb and ja push fdiv push lods lds addr16 loopne adc fimull fimul fstpt sub cmp frstor dec xor jg and sub jb pushl js icebp dec enter pusha imul mov mov outsb push xchg test fnstcw push push xor in jno dec xchg lcall gs mov out cwtl inc add mov sbb add add lds or mov test dec aam jecxz push xchg (bad) bound cwtl sarl jnp mov (bad) dec xchg jns mov in push stos ret cltd iret mov pushf (bad) es mov xchg ret jnp and subl jbe pop lret sub xor fbstp cld jns addr16 mov roll fbstp mov sub outsb jno pop mov push push hlt aaa cwtl sub pop lods add mov inc imul cmpsl aam fimul outsl inc fisubr scas mov or mov xchg stc scas push (bad) lret lahf jmp lods out lods inc fidivl jge cmp jecxz mov pop int3 sub dec xchg pop push adc inc data16 sub or dec (bad) les iret xchg push popf fisttpll pop mov ret pop push push (bad) dec pushw out aad or loop xchg imul sbb mov out in mov test add cmp lds add add add pop inc adc ss lcall loop or lds rcrb cli and dec sub mov jmp lahf cmp jg xor je data16 mov cmp (bad) mov mov inc jns stc (bad) mov pop insb clc aam sub mov mov xor pop mov push cwtl out sbb std push push xlat call dec clc jae test jae dec fwait int3 test pushf mov cld cmp add into in int shrb mov add add add add pop dec sub cltd push (bad) or es jbe xor mov adc aaa dec jecxz bound mov (bad) adc fwait in test add lahf inc or cmp pop fcoml add iret test loop mov stos mov cmpsl scas cwtl xchg sahf mov mov adc in xchg inc inc cmp cmp xlat and aas nop aam iret mov (bad) (bad) jo and aam leave nop mov xchg push rcrl inc btc lret dec jecxz jg (bad) xchg add add aam push cmp (bad) jle imull cmp bound mov loopne stos pop push addl (bad) and mov popf push imul pushf xchg rorb sub decb ror sub cmpsb stos imul add lods movsl adc add int inc lods dec push nop imul xchg in pop stc mov and jecxz fisubl sbb pop cmp (bad) leave das push popa sbb rcll (bad) mov fldpi icebp cmp test (bad) jbe xlat adc add add add pop cmp cmp fsubs loope jns sub mov xor ljmp stos pop aas push rorb jge cs jnp and mov or and out dec clc push bound cmp dec sbb sbb xor out mov xchg ds lds out cs push (bad) jmp (bad) xchg imul pop xor inc (bad) aam loop int jno xor shrl es mov movsl add add add mov or add js mov push mov inc adc inc cwtl jne mov es inc aam push insl loope cltd xchg pop push mov mov out cli aas sub mov jp fadds xorl inc add sti xchg push jo loopne xchg clc mov push xorl mov sbb inc push add pop mov adc int3 data16 and pop movsl push loopne (bad) incl mov pop xchg les add add add or adc fwait mov jns aaa sbb pop jl cmp dec xor and adc loope xor add sub or xchg and ljmp sarl test lds xor xchg jge jmp lea ljmp push popa xchg lret push sbb sub dec pushf mov in sbb pop clc leave and ret mov jae jns fs fs xchg mov mov rolb mov ds mov mov inc inc aas inc add add add scas cmp imul mov xchg rcrb pop jb jecxz gs fsubp xor dec jo xor popa mov mov sub and pop (bad) xlat cmpsl xchg add adc mov iret inc cld xor cs xchg test jl test push or xchg cld lds (bad) xchg imul cwtl pop sbb dec push adc ds mov fwait (bad) aad out and mov lea arpl sbb js inc sub nop movsl incb sar add subl xchg inc in jns pop jo out sarb sti push mov jns pop and nop loopne rclb xchg inc lock mov and in sets xchg xor test cmp imul sbb fstpl rcll xor stos xchg adc push loope xor ror jmp mov in push xlat lock push cld inc sbb and pop inc jb sub mov xchg dec push sub mov add add add mov xor adc sbb imul out (bad) rorb mov mov push (bad) pop je or ret (bad) lock push ret sbb mov and jae sbb lahf and out mov jp les or sbb pop push in xchg pusha (bad) lock push sbb xor rcrl mov adc sbb aaa sub addr16 (bad) jne pop add rolb add xor mov pop mov lcall add pop push in (bad) lret jae cmp add ja fmull aaa cmpsl adc addr16 lcall jp iret cmp xor mov cmp dec jbe clc js mov jmp js xorl in mov dec xchg or fidiv dec gs pop out nop or lods aas out ret pop mov fcoml pop rcr or mov ret in xor cld inc or cmp std jmp jl insb inc jb add add add add push fisubrl pop jle and xchg cmp mov adc movsl iret movsl cwtl inc cwtl inc xor or daa pop or fcoml fwait shr jmp test in mov cld subb inc dec mov (bad) jno and ret fprem1 aaa fcmovnu (bad) loopne jp outsl mov mov push hlt jbe mov add out (bad) mov pop mov cmpsl mov aaa and xor out mov sub sbb fisubrl and or (bad) clc inc fldl add add add add cmpsb ret icebp adc ret cwtl outsl sbb pop stos cmp lock adc mov leave lods add test xlat repnz cmp inc nop ja sahf push add dec cmp sbb popa dec fs fwait jp mov in lea (bad) xor sub outsl sarb int3 lods mov jnp out (bad) lret (bad) mov jge mov or mov gs xchg insb mov cli fs (bad) or jb and jae add sarl pop es lock push pop sub push push fs fadds jno xor lea loopne xchg dec out xchg xchg leave inc sub aaa fidivr insl popf fadds mov dec and jp aaa icebp push push add test push dec mov or and cwtl lret sub cltd int3 pmulhuw daa movsb sub jae cmp mov sarl mov movsb gs push cmpps mov pop out fildl popf add or pop lret sbb mov sub add add fsubr sbbb bound pop pop cltd popf in pop pop adc xchg xchg jnp add cld movsb sti mov jne dec jae (bad) aam xlat test andl sub sub cmp and popa jp jmp xor and cmc xchg fwait je sub fmuls add sbb mov cld fs jecxz loope stos aad ss inc pop pusha xor sub ljmp cwtl cmp roll mov add add add jno mov and movl gs scas out jne outsl sbb mov push rcrl aas fild je add dec jno mov int3 or adc cmpsb and jb pop mov cmpb dec lock push nop push xchg push popf add sti iret fdiv pop cmp dec xor push outsb mov push push cmp test iret xchg adc ret insb addr16 add push aam adc mov dec loope push jmp jb mov pushf dec sub inc test mov add add add add adc ror push pop ret repz cltd push pop pop and lds inc xchg push push adc rcrb add popl pop mov in std hlt loop jnp hlt lock lret fldcw push dec aaa xchg subl lret (bad) push add mov fidiv les (bad) mov ja mov call repnz out daa fsts shlb rorl lret enter pop mov mov in sahf sbb jle fildll arpl mov ss std xrelease popa dec cmpb lahf push testb insb sub adc sbb add mov xor in cmp xlat add loop push int3 sub inc test jmp (bad) movl loop ret push sarb jns jl ja subl dec xchg xor sub test cmpsl pop test add ss out xlat outsb rcr mov pop out mov mov daa fstps (bad) (bad) (bad) pop sub pop add lahf jp pop in jecxz push mov xor push jne insb negl jmp push push xor mov and shl pushf mov pop jg mov sbb (bad) leave loope cmp lods ja add call and in cli int3 mov cmp sub sbb sub cld sbb adc and dec aad lock loopne je pop jb or out and push jge mov popf popf enter push add add add pop ffreep lods aas outsb and cmpsl push adc pop cltd xchg cmp mov mov fdivs push sub outsl pop fsubp out pop jns fildll lods xor aaa arpl mov sti js jne movl xchg or mov fsubp mov xchg jo mov imul shl test dec push xor cmp dec add stos mov jp stos call sbbl xchg stc inc pop lods dec lret fucomp mulb addr16 xor mov pop popf ret gs xor push pop icebp fdivrl popf cmp push addl mov imul ss test xchg ljmp fwait push sbb pusha cltd outsl repz push scas cmp jle sahf sbb stos test in dec lds xchg cmp inc xlat sbb lahf inc pop lahf imul fistl fbstp rcr mov cmpsb stos xor inc push clc push imul sub jae mov add add add or dec loopne int3 xchg pop pop inc pop insb lea aam mov in mov push xor movsl jmp scas fcoml jno jne ljmp push and pop xor in inc push inc add lret iret mov je cmp pop nop mov jg mov (bad) xor inc (bad) xor stos pop fs (bad) test mov mov mov adc jg aas in push loop js dec pop stos loop andl cmp adc xlat dec out pop stos mov in ds and (bad) mov mov mov addr16 fstl sbbb icebp ret (bad) outsb dec pop roll cmp adc xor or aad pcmpgtw stos lret inc test sbb jecxz jle je rcll cmp repnz insl daa icebp lahf push fidivrl bound ja push cmp out push pop aad mov sarl gs sub or push and lock push aas jo push pop adc ds pop pop ljmp add xchg fisubrl out mov lret pop mov mov push call (bad) jmp je jne and jae mov inc lcall pop xchg and dec push cld cmp test adc imul (bad) fadds adc es mov sahf ffree dec adc and outsl inc roll jle ja push push add push mov sahf ret cmpsl or jmp bound dec lret icebp mov sti mov adc pop push add add add add call cld push call movb lcall xchg std sbb inc nop jl sahf cld sub mov xchg pop (bad) sti aaa sti adc fidivr aas insl mov and leave aam rcrb push test mov pusha xchg pop pusha stc xlat jmp pop jecxz inc mov movsb sar jp insl push mov xor js,pt aad and int3 xor repnz in mov push inc mov xor fadd scas push adc add add add add and cs add (bad) xchg sub call movsb loop popf push mov inc dec mov icebp or pop mov cmpsl mov pusha int inc pusha nop push and es mov jb (bad) xchg mov pop jle xchg packsswb push aad hlt cli test dec repz rorl test sbbl cmp ds sti xchg ret add xchg cmp cmp sub or call mov cmpl add add add add roll in loope push xchg call adc mov scas jmp rorb out arpl popa sbb mov or and xchg or or icebp jl sbb (bad) and cmp xchg lea cmp inc or push in sti cmpsl pop aaa outsb add mov popf cs push mov sub addr16 mov pshufw or cwtl add (bad) jle mov xlat mov ljmp add add jno mov dec mov cmpsl cmp ficom mov mov lret arpl ret inc add mov dec cmp negb mov push and mov or insb je arpl xchg inc rolb jbe mov call insl inc (bad) (bad) ja test es mov jns pop pusha adc push or and (bad) arpl adc pop jge xor xlat bswap repz dec mov cmpsb xchg cmp xchg into mov add add add jg ljmp add push jne adc repz inc rcll fsubl push jne pop stc mov mov jno xchg add jmp and pop pop cmpsb jb jge pop inc jno mov rcl dec mov lret sub cmp push jle std mov push (bad) pop lock daa leave lods outsl adc aas sbb xchg mov jne jmp dec mov mov cmpsl jnp outsl into pushf (bad) stc sti cmp push jbe jo stos add mov jmp out fimul (bad) pusha mov add add add and fcmove mov mov lods mov lahf mov xor sub mov pushf dec scas outsl repz inc inc mov in xor out push pop add xor dec imul sbb jge andb jne addr16 shlb add inc cmc pop or ljmp dec shll pop ficompl icebp adc je js ss sahf adc adc imul cmc mov push shrb push push cwtl adc add add outsl pop aam pop and (bad) mov (bad) sub mov sub test sbb and lcall pop mov (bad) jns fwait adc ret cld ja xor in mov stos pop outsb jne fstl adc clc lds lea cmp and icebp pop cmp imul push dec das or js cmp shrb push add test rcll sub push bound sbb mov jmp data16 and mov add add add in xorl inc and outsb fdivrl decb test lahf lgs cmp mov cmp outsb je imul jne (bad) stc jmp data16 sahf xor fstpt dec adc ja pop loop dec dec mulb stc mov or in xrelease (bad) pop lcall (bad) dec push pop xchg outsb ret push leave mov jp and push (bad) sbb mov in xchg sub sub (bad) jbe cltd dec nop jae add add add add and les lret mov mov lods pop out push lods mov js xchg jns test xor dec xchg cs in into addr16 fdivrp mov imul inc or stc push sub aad push aas test stos dec jg cs dec dec test pop insl push jp adc testb cli push xchg and jp enter ret inc add imul fmull int sub or jo push push inc add daa cld dec fiadd jecxz subl add add cmp es fdivr aaa mov mov lea jecxz pop jl inc cmp ja lcall int3 decb xlat repz or dec bound icebp movsl mov adc adc xchg fwait mov (bad) fisttp aas hlt add lods or fwait inc dec cmp scas dec in push pop call fwait ret repz gs and cmp (bad) mov cld jmp scas sub mov cwtd hlt add daa pop sub add add add pushf shlb fld mull shll pop (bad) pop lock stos push (bad) iret bound ljmp add repnz mov mov (bad) cwtl dec cmc loope stc test push decb arpl xor movsl pushf cmp jae and fwait das dec sarb pop push sub lods das int3 lock adc pop out push ds mov adc into mov add das xor push cmp addr16 addr16 and pop inc dec lds fist add fnstsw or in mov outsb pop scas xchg stc mov in cli test xor adc dec or lret mov cmp push dec in xlat fnstcw add mov pop adc pop rcll inc test cmp stos adc (bad) (bad) leave call pushf stc pushf sarl (bad) aam out roll test (bad) enter xchg adc subb leave sbb cmp cmc mov imul loope mov mov repz sub dec push lock loope das lcall push pop out std cs xlat push enter stc and clc mov jg lods cli xor cmp inc test pop test adc lcall sub mov pop (bad) (bad) nop lock leave add mov xchg lock sahf jo repnz sub adc xor adc xchg xchg mov cwtl enter adc inc dec (bad) negl mov adc push xchg xlat sbb mov add xchg (bad) aad lods test ret jmp sub pop call popf xchg popa mov xor inc jl jno leave jae pop aaa repnz mov cmpsl int mov mov cmp bnd push mov cmp icebp loopne mov jbe lds ror call lods xchg mov sbb and inc mov or popa sbb das out inc pop add ljmp out mov jno xchg xchg iret imul mov js lret add jmp dec cmpsb push mov push sarb stos lahf or push andl (bad) lods mov fcompl cmp cmp fwait iret mov push push call cli roll aas loopne cwtl popf mov loop daa rcrl outsl mov aaa push icebp mov out ljmp xlat lret push aad cmpsl inc mov movsl xchg pop xor fs aad add ss mov lret dec notb add add xor (bad) pop xlat je or push fwait jp shrb stos fstpl shrb sub xchg cwtl mov pushf sbb mov adc mov jg daa add and jg daa in loope mov icebp lock ret repnz negl mov stos jae sbb shrl sub jbe enter sbb sbb sub sbb hlt (bad) mov mov imul push repnz adc add add repnz (bad) pop push xchg nop fiaddl mov shl sbb jle pop out xchg xor sub inc roll xor lods push cwtl sbb inc sarl stc sub lea pop fadds in (bad) iret stos xlat in ficompl or aas je das in icebp out jge inc mov scas mov shlb sbb hlt stc pop inc mov dec aaa sbb mov bound cmp (bad) aam std xor xchg mov pop sub sahf mov add add add xacquire rcl subl xor lods popl xor push sbb bound mov push jg lahf push int cmp (bad) mov add add push pop (bad) sbb cmp or mov fdivp scas and or and je push mov imul pop lret push cmp gs nop xchg xor add dec inc xor sub xchg (bad) hlt (bad) rcr add push mov pop xchg push or add in or and (bad) mov addr16 push push xor fsubrl xchg hlt jne frstor in mov shl dec push xchg cmp adc xchg cmp jmp (bad) dec aaa push xchg rolb int add push ljmp jne dec inc out outsl andl pop lods inc nop cli mov cltd call push pop xchg xchg addr16 fldenv inc addr16 push and popaw adc loopne push push das repnz dec jge pop (bad) push fs loopne cmp xorl (bad) movsb std iret push faddl dec push stos out jg das faddl jmp cmp jle jnp (bad) cltd sbb cmpsl sti lahf adc pop (bad) sbb add pushf gs xchg iret xchg mov mov movb cmpsl push gs sub xchg xchg push jge dec rclb sbb inc adc out push int3 mov divl push mov jnp xorl sbb mov sub push push sarl fldt push rol xor es and jae mov (bad) jge push inc lods icebp add add add jbe mov jmp out rorb jb dec sub xchg fbstp add dec test inc xor add ja gs xchg mov std adc jle jb inc add (bad) mov push lcall arpl cmp sbb mov cmp out mov push mov sbb jns mov sub outsb dec subl sti mov sbb xchg mov push aaa mov sub cmp sub mov xchg add (bad) xor fbld cmpsb xlat or insb or icebp ret fwait cmpsb cmp jae push add (bad) xor xchg sub in in pop pop es sub fsubs scas lcall in pop mov cltd ss jl push mov xor sahf adcl fidivr mov scas sbb fadds fnstsw dec outsl and (bad) divl mov xor xchg jecxz inc rcrl add add add add test adc inc jne push out lcall sbb mov xchg enter out jae daa lods mov ret ret (bad) in (bad) mov fdivs and movsl stc call movl lods jne ss push and adc loop testl in ror mov mov aas pop push out pushf ret or mov cmp das sahf inc je inc dec sbb andl mov jbe dec add aam lret stos arpl add add add mov out stos cmp mov cs cmp add xchg jp movsb cmp push sbb insl push and pop jmp dec enter outsl dec inc and mov adc or fisubr xchg mov and movsb arpl in repnz adc divb mov (bad) loopne dec popf mov aaa mov lods and push lret loop mov and cmpsb sbb inc mov enter xchg add lret cltd add sbb cli jb mov mov cmp xchg and mov repnz mov adc pop out dec in shrb leave shl mov mov addr16 out mov add mov inc push add popa (bad) xchg ja adc dec clc cwtl push (bad) cmp sub fcompl in ret scas or test push cmpsb mov jno ret pushf push pop into daa fidivrl xchg decb adc jne jnp loop xor add add add mov or and push ja out mov mov out mov stos (bad) sahf push cmp jne hlt mov jg popf out xor cmc add leave subl sub es mov lock sub jb ljmp sbb sbb pusha icebp clc push pusha cmp jge sbb mov and in test pop dec mov (bad) push push in js ret lods mov inc cmp dec sub bound (bad) fs pop je jmp add add add mov int and ret or test and jp inc pushf inc stc jmp push stos jge push jge addr16 fbstp mov adc mov ss test jle xlat sub les pop js scas ret jo test pop (bad) stos cltd pop sub into and fsubr jns std xor rolb js mov sbbb inc fildll shrl arpl cli mov cmp lret std adc leave jle out sub pop xchg cmp add add mov js jg stc push and inc call test dec mov dec add loope aam ficom and sbb ret out xor jnp push clc dec inc shrb dec lock sub dec sub add fidiv mov gs dec les (bad) push repz in movsb mov test in pushf add add repnz int3 cmp mov (bad) je jae das mov xchg lahf xchg cmpsl lods lea test pop lret sbb push jmp divl bound or add add add add pushf adc das mov inc push outsb add cmp test scas lods mov mov jb or fwait (bad) mov inc pop stc fs sbb sub fwait aam es outsb xor add adc and sbb mov add jno cmp cmpsl hlt push pusha jbe pop or jmp mov daa loope inc aad insl repz add pop pop and arpl outsl xor lcallw test lea inc jecxz sarl add add int outsb jge or sbb cli inc mov aaa pop jmp push idivl cmpsl out sbb iret jle int pop push pusha data16 sbb lds incb rcrb dec adc jl cmp (bad) scas xor jecxz xchg jo push outsb fcmovnb fcomp popf jb out leave loopne xchg mov and xchg cmp dec xlat ljmp jg lret adc leave (bad) jae push outsl dec or rcrl dec dec push hlt insb dec pop sub fs xor add add add imul sbb inc inc ds movsb sbb test outsl (bad) icebp out pop (bad) pop outsb (bad) stc (bad) rcrl and jbe lret iret in push mov or lcall jmp mov push fildl out (bad) fsubs inc repz pop vmovupd mov push cmp xor in mov in cmpsb pop xchg sub in shlb dec mov andl fbstp idivl inc or add add add cmp push aas dec cld movsb xchg iret orb dec hlt and incl jb xchg pop aaa sub mov shrb je cli lret les mov dec ror gs mov and ds xor decb fcmovu pop jnp loope mov (bad) xor sbb scas or sub push and (bad) incl sub push pushf lds push add jg sarb ret (bad) jno (bad) push psubd xchg jmp in sbb mov jne xchg add mov or dec sbb aad fldt jg rolb or out daa loopne jle inc mov add cs lds pop mov test fs ljmp add adc push xor and enter sub movl aam scas loop cmpsb jb dec sar mov int3 sbb (bad) (bad) into sbb sbbb sbb nop xchg adc mov and push jns fwait add daa lcall mov pusha clc dec lret arpl mov int cmc sar mov sub std dec hlt lock rolb jl stc daa inc cmp push pop xlat nop mov mov out mov insb jnp je subl adc loope ljmp pop icebp inc cltd not popa rcrb idiv sbb adc adc mov lcall pop cmp ds (bad) and ja and gs mov int3 add roll cmpsb sub sub loope mov int adc mov je mov xchg add add add jl in popf dec xor cmp enter or jb inc mov xchg popa push test or dec (bad) xor (bad) mov inc adc mov add sbb mov ljmp adc pusha pop xor arpl cmc pop pop (bad) sbb sbb mov mov inc jg loope imul lods dec sbb push pop dec arpl stos sub mov aaa pop sbb addl xchg mov test out je add stos lods xchg mov add add add add out mov push pop inc (bad) and (bad) lds push add dec adc xlat stc mov into dec cmp data16 jge dec and sub (bad) mov and mov leave mov xor jmp cmpsb (bad) push lcall test jno std out pop das mov fisttp mov dec stos fidivr fs jg mov ja shrb or pop cmpl ljmp pop jb mov xor enter ret add aas bound jecxz fadd jge dec pop es xor mov mov mov adc aas sbb test mov in xchg jmp mull loop push jmp mov jne mov xor popa nop xchg jns je rol push movsl ffree inc push rclb std js ja mov scas mov in test enter dec rol push push out imul pop dec (bad) mov xor cmpsb jmp inc cmpsb aad aaa sub bnd (bad) enter adc dec push in sbb add push adc fwait rolb add jg and cmp or xchg (bad) sbb shrl sbb arpl xchg mov (bad) cs std inc mov mov push xor pop (bad) fdivrl jne jmp inc daa lret jbe aad and aam xchg cmpsb imul data16 mov rolb scas mov pop fcmovu ljmp jnp dec and lea jmp idiv movb add bnd push push iret test xor dec lret jae aaa popl loop (bad) adc mov jo rcll xchg pand movsb xchg pushf xchg cmp or sbb and add jns adcl mov xor movsb es pop dec mov les fildl in mov mov arpl mov mov inc rclb sub cmp push pop dec and stc xchg (bad) adc cwtl xor jle or jmp xor jnp mov nop mov mov fdivp xor loope xchg les add add in in fldpi push not push lret sbb xor (bad) xor jae xchg sbb bound dec (bad) out test jle sub pmaddwd inc xchg mov fsubl je scas int jne push add in or fdivrl cmc dec into xchg cmpsb xlat outsb mov mov loope xchg mov ja out xor and (bad) in pop gs loop fs pop fdivl jo inc mov adc sub mov add add add add fldenv mov inc pop xlat ret or jle in scas xchg mov ljmp mov enter ucomiss stos mov ror mov jp das dec fnsetpm(287 cmpb ss in xor imul inc imul xchg stc out add sbb lods push shll cwtl mov pop cmpsl or test sbb popf lea lret and gs rclb mov inc fadds insl push cli popf in loope jb pop xchg add add jmp fs lock mov mov sub add xchg xor push pop sahf cld or xchg adc aaa xor dec jecxz xor mov sub loop js lahf jnp inc fidivr cmpsl or test cmp out mov insb xor lds fnstenv cmpsb in (bad) scas pop cmpsl pop jmp (bad) out aam mov jnp add dec (bad) fcompl or dec repz mov mov push jmp test bound pop pop jmp or push add add add inc add loop inc sbb out cmp js stos test sti mov (bad) ret enter jne adc cmp int add mov push cmpsb (bad) push in inc inc inc mov punpckhwd jmp es es jge (bad) pop aad insl dec sub bound mov and stos add jnp pop mov and fs mov or enter pop or pop imul subl clc jns mov testl jnp xor add add loop test pop ror or sbb loop shlb or sub rcrb sbb mov inc imul aaa test bound aaa mov lock pusha lcall int3 add test dec cmp mov pop mov inc push xchg cmpsb in test scas popa jp pop mov add xchg add pop imul (bad) jnp cmpsl cmp subb push sbb add daa ds stos shl cmp pop sub mov sbbl adc in jne pop outsl pop fnstenv cmp pop les adc std adc shrl sub jae mov (bad) test aam stos jns scas xor out pop mov in imul fadds stos sub fidivr out sbb sbb mov add loopne jge popf arpl out sub mov add mov imul insb push leave mov xchg (bad) roll sbb add add (bad) (bad) les (bad) test jle jl push (bad) in lcall inc dec pop lcall popa cmpsb fimul or pop pop (bad) lea orb inc sar loopne gs sarl lea clc push idiv insb cmp sbb push outsl imul movsl cmp test outsl inc addr16 pop pusha inc push mov xchg daa or mov pop adc inc fs jmp sub jmp movsb mov std push add add add add add xchg or pop aam lock jle arpl cli inc cmp sbb pop sub cs je (bad) shrb es push (bad) lret ja sbb cmpsb cmp dec into fdivrl scas bound js imul negb push std fldl cmc pushf jg stos call pusha pop cmc and jg xchg or pusha insl arpl cli mov push inc test cmc or lcall pop int3 adc ds pop push insb inc add daa adc add add pop and (bad) iret sbb add ds inc imul andl pop inc adc push fmuls stos gs add stos xor inc jns dec daa lea rorb add call mov jb (bad) pop inc fmulp std add mov xor (bad) lock mov bound addr16 jns xchg cli xchg aaa stc mov push mov jg adc jmp mov mov or xor sub movsb pop or push jge inc psadbw push pushf xor test push insb arpl jb and outsb pop xor sbb (bad) dec mov popf hlt mov push hlt sub ficomp xchg out in or out lock dec sbbl mov enter mov test adc punpckhdq xchg add cmpsb icebp out lds popf mov loop inc movsb imul test insl fsubrp lods adc cmp imul jmp jae,pn sbb lcall and in xchg jmp sub inc sahf call cld out mov push and sub pop cmc sub lods ret pop iret idivl sub and adc loop stos jno push daa test cmp xchg dec stos (bad) negb pop out jns ret adc repnz adc fucomip dec lret fist fistpll jl push jns fmul ficom mov fiaddl div xorb gs or ret iret sbb adc stos adc push scas mov dec sub lret loop aam (bad) dec andnps xor stos out push jmp stc dec mov fdivl sub mov data16 loop,pt mov jle mov (bad) rcrb pop lds pop xlat stc xchg sbb in addr16 cmpsb inc gs not xchg add cli loop add or sub ja sbb or (bad) clc (bad) mov in fadds dec or inc nop jb fimul pusha insl sbb add or (bad) adc dec jmp pop mov jecxz in rcrb out cmpsb enter std ja aad add mov icebp cmpl mov jno repnz jp sub push push aad clc in dec je mov push jle xor fld sbbl mulb sub add mov hlt mov mov xor push daa jmp mov sbb (bad) ret dec or push inc stos movsl mov divb cmp add add add mov jp into mov pop inc orl add nop pop mov dec (bad) (bad) mov jg mov cli outsb scas test stos pop adc cmp jo (bad) test inc gs nop bound dec test push test mov fstl cmpsl cli test pop jae stos xchg add mov jmp ret xchg mov jne xor out or mov imul mov or add cmp pop ss sti movb mov push add sub and sbb (bad) fildll lock sar rolb pop mulb in inc push adc push cmp sub inc xchg (bad) cmc inc pop push push iret jb (bad) mov mov mov mov and repz fidiv lret bound mov fdivp sti pop mov push lahf in sub movq movsb imul or push xchg inc sub or flds add add and leave or pop aaa ret push add mov push xor aas jl mov xchg pop test frstor shr inc (bad) mov movq rol divl ret lahf into push lret call popf adc outsb sub cmpsb jecxz lock jg jg insb cmp mov pop push jbe or sbb lahf (bad) hlt pop sbb or inc movsl fs arpl xchg pop or (bad) std xor pusha adc add add add testb call in mov cmp ds pop loope jle lahf scas (bad) cwtl adc fs pop inc loop fwait out std (bad) imul data16 dec xchg or jp ret outsl inc xor imul and dec mov push pop int das or data16 pop add das pop xchg inc and or xchg or cltd sbb dec dec dec dec mov mov push jge (bad) dec pop mov add mov fistpll push scas addr16 outsb inc xchg mov add add add push adc (bad) and pop out out pop stos insl sbb adc cmp mov push cmp sub notb aad add mov sub (bad) adc mov cli push mov ret aad arpl lea (bad) or mov repnz jecxz push mov jg call out lahf jge dec out xchg aam pop or addr16 jge fstpt loop stos lock notb repz jo cltd or mov sub out mov hlt (bad) add inc push xor enter imul inc push xor inc fdivl inc gs jecxz xchg dec out cmp sarl je popf dec aad cmc dec decl mov ret jmp xchg inc loope rorl lahf ljmp pop (bad) cmpsb ljmp cmp pop sub lret into xchg mov (bad) mov pushl push push je add movsb into sbb (bad) sub dec lret mov out cmp dec jno cmp adc lods mov lret scas mov sub lret aaa xchg add scas push add add add insl daa in cli pop sahf ds mov sbb mov (bad) push push mov push sbb mov xor jns std cmp scas sbb stos (bad) fnop mov popf sahf xor cmpsl jne mov xchg pushf jmp notl add sub mov mov push xchg cmp xor fwait cmp lock into cmpsb dec push into mov jmp adc cwtl fwait xchg mov xchg dec negl jl gs (bad) add (bad) lahf pop and out cmpl scas insl pop add add add sbb dec mov lea push mov test sub das setae jo (bad) subl rorb adc pusha dec loope or cmp add nop jp add dec out jl xchg cmovae or imul mov xchg or repnz das mov mov cmp push and insl push and mov pop mov add fnsave shrb push jmp pop stc push xor fdivrl pop sete add add add push sub pop pop jg popf cmp sub ss push xor xchg jge mov mov repz xchg jmp inc xorl push or aaa and pushf adc push fist testl dec mov out mov mov dec cmp xor ficom add dec pusha xchg or and lea sbb jb mov fsubs jp mov dec xchg test and test cmp insb dec subb les mov mov aam inc or mov int3 xor (bad) xor pop dec nop xor mov int test loopne xchg out cmp cmc adc outsb mov rclb enter mov jp xor out or fdiv jg lahf ror cld sti in mov lods jg cli cwtl (bad) push out psubw mov addr16 mov xor pop cli orl mov inc add test jo lret push jns fistp mov aas push sub stc xor adc pop cli xchg inc pmaddwd cmp rcl test and iret cmpsl cwtl push das or jae cld loopne in and (bad) jne mov addl xchg mull and sbb shrb shrl cmp frstor add ret cmc arpl sbbl dec xchg or cmp inc jecxz add add add push lret mov test enter loop jbe push xchg je clc adc in aas pop imul sbb xlat cwtl xor mov bound les and les pop mov or lods clc adc adc addr16 fmul mov inc add pop in and pop out test in pop jmp mov or daa sub inc or push scas or push lcall int3 jle (bad) nop jae cli adc push test inc (bad) jp sbbb xchg repnz mov out fmuls mov or push lea lods (bad) cmpsb sti or push pusha repnz popf fwait out or pop add push les out les or sbb mov sahf and sarb lahf loope push mov pop popf jns js (bad) scas movsb fstps testb rcll jp jno xor dec mov fdivl xlat mov aas fsubl cltd sbb sbb (bad) sti inc lods dec add add add out popa movsb dec ja pop mov lods or idivl push mov (bad) mov sub sbb imul sbb es push nop jnp mov scas loope xor fildll les mov jbe cs leave xchg iret (bad) insl ja and mov scas negb rorl test stc mov lock push dec inc fidivr lods sub cmp adc subl lock mov lret lock or mov (bad) adc fldl add add add (bad) jo inc into repnz fidivrl pop mov js adcl movsb sahf cmp pop or lock aam andl ja xchg das sub in es adc imul imul push push and (bad) push sar es mov aas mov ficompl mov rclb push jnp jle add popa (bad) call adc sarb jle out xor sub add add pop mov daa icebp xchg push movsl pop inc mov mov div imul cmp imul aad inc ljmp cmp pop (bad) xor es cmp sbb scas loop or mov mov aad leave mov cmp mov fidivrl cmp inc mov jnp mov leave scas dec inc pop repnz jmp xchg add fs ljmp add pop and lgdtl pop jnp dec int cwtl (bad) sti adc (bad) fisubrl add add out xor hlt xchg rep in in scas push dec and (bad) adc out sidtl movsl mov jae and jge aam mov sbb inc cmp (bad) call mov mov push ljmp and test call sbb leave inc adc and clc jmp cmp mov fisub mov icebp out aaa pushf jo mov and enter jg pop loopne add add add inc gs jg mov (bad) sub push stos fwait inc jecxz rcrl idivl ret dec add cmp jae mov sbb pop out jne imul sub test lods (bad) dec das xor cld insb and repz and aad sbb ja cmpsl sbb outsl adc or lahf cmp mov cmp sbb ja cltd repnz mov or sub cwtl dec imul xchg push add out add add add add cmpsb adc rol insb mov or gs adc sub divl imul (bad) data16 out rcrl xor fwait dec sbb push leave aas dec and jge aad out mov out in popf sbbb lret sub mov mov in test lret inc in pop test repnz dec imul icebp mov lret dec mov pop (bad) out (bad) sub push js jae addr16 mov adc int add imul in add add add aaa out or dec xor outsb test out push dec int nop jno int3 mov lods (bad) jge mov iret push ljmp daa lahf repnz xlat out idivl mov adc and in and sbb lds cltd xchg adc xchg jne adc loopne int3 xorl rclb and xor push jne out cs mov test aam pushf dec jg stc xlat popf xchg mov arpl loopne push (bad) sub cwtl mov mov add add and jns jge repnz push inc jnp mov je mov pop mov mov scas aas pop int3 fistl out (bad) sub mov pop mov or mov fsubs mov (bad) pop inc xchg jb mov add adc cmp sbb (bad) test xchg pop xor addr16 mov xlat inc mov pop imul push ret mov ret aad sub popf xor cli mov lods (bad) sti fldl cmc add add add pusha xor mov cmp inc (bad) cmpsl or das or movsb sbb cmpsl movl sub icebp cltd add mov mov arpl dec scas push call gs push clc imul jbe fsubr aad mov (bad) lret push outsb out shrl test mov js call ja nop clc mov imul or cwtl mov push or es sub lods movsb rolb int mov testl add add pop and add repnz mov (bad) jbe add jnp sub mov add or or sbb (bad) xor add loop jmp pop insl cmp push (bad) xlat or cmpsb (bad) cwtl pop mov popa outsb add loope clc jge int3 lea pop lds rclb clc and mov cwtl fdivl ret and (bad) fiadd xchg hlt mov jp (bad) pop mov cld (bad) adc sbb push pop insb push add add add dec nop and es dec inc xor push add js dec cmovle add (bad) cli cltd ss cs mov pop inc ss pop test jmp push sbb in jmp and inc dec test mov mov xchg mov mov fsts pop cmp cmp repnz xchg mov clc jge scas cmp pop xchg mov sub cmpsl roll jle adcb stos (bad) jbe ljmp enter repnz jbe iret xchg imul cwtd add fsubrs mov jae lahf iret flds or sahf imul mov cmp cld and iret mov push (bad) mov jno daa sbb in movsl sbb scas add lock xchg pop mov fisttpl lock aas test bnd mov loopne jo sbb sub fist push push adc xchg mov adc inc lcall push or mov lock jl add xor jo push ja push dec sahf cmp imul fmul or jmp add popa mov out mov (bad) sbb int (bad) aas push out push inc loopne in lret xor shr pop aaa cld adc mov add shl into sahf insb out outsb pop mov cmp das pop insl push mov adc xchg lret out push les pushf adc pop ret xor test xor sbb adc hlt ljmp je (bad) cwtl lret xor dec jbe insb (bad) cmp or in or (bad) dec or clc in mov or icebp pop lahf xor add add mov push ja incl pop lods js ret mov xchg (bad) in cmp mov adc daa adc insl mov sbb cwtl pop daa enter sahf mov push add lcall (bad) (bad) mov ret in bound (bad) jae ss add repnz lret dec push loop cltd sahf inc scas lea cs adc cmp push dec jns xor jae inc add in lea lahf out and repz psubsb jo or and (bad) (bad) gs sub add add add add stos inc aad daa sub adc in xorb push lods (bad) loop jns add mov (bad) aam orl dec push or stos scas lret lods pop pop adc je (bad) mov and aad pop repnz jns jbe sbb imul or dec inc das add sahf leave outsb push fsubs xor or inc xchg dec cli (bad) mov mov inc cmp push cmp sbb jl lods xchg loop dec and jecxz cmp mov xor add add cli fmul cmp sub scas sahf (bad) pop repnz hlt int3 dec push push out mov inc notb mov enter sahf add cltd sub fdivrs jmp xchg in mov (bad) pop dec movsl in outsb pop movl add fdivr shrb add lret cmp insb aad inc cld sub inc daa pop mov push inc pop mov fdivrs cs lods push pop sub cwtl aas jno (bad) jg rclb dec iret xor lret insb fsubs dec inc ret dec iret popa xor data16 mov pop nop xchg jns fildll stc fwait rcrb sbb (bad) sub push jne clc pop je fcompl idivb xorb pop dec jne arpl orl sub insb push ret aaa insl fnsave mov fstpl dec movsb fld push add xchg not and jo push mov mov lock cli cmp push pop scas mov mov icebp pusha (bad) mov adc add add jmp mov out sarb pop sub cmp cmp notb sarb fistpll cmpl push or mov in fs push xchg lahf mov dec cmpsb jbe int3 pusha push or jne out daa push inc mov pop repnz cs adc (bad) sub jle imul int3 int3 adcl sub push imul push test xchg mov and mov mov cmpsb and ficoml mov jb adc add lret fsubrs fsubrp push (bad) outsl insl inc daa and test hlt rclb (bad) ror test rol les mov stos sbb scas xor push pop daa je data16 gs xchg mov dec cmp lea gs jle mov cmc jle test test sub dec jl xor xchg dec aaa lret decl mov data16 in sti jae sbb add push out lock xchg js add add add out xchg outsl (bad) das (bad) cmp (bad) mov sbb repnz inc mov lahf mov cld cmpsl mov pushf das mov mov jb xchg ret jbe lret (bad) mov jle jmp jge dec stc mov testb mov jo push fs jle and jns (bad) lods add xor inc xor cmc sub dec nop and notl mov stc adc inc testb mov add add add push repz add push inc mov out push je,pt adc jmp sti sub pop insb incl imul dec or icebp je loopne push fwait inc sbb pop inc xchg imul or mov mov push jbe icebp push lods pop aam xor test in sbb pop mov sub (bad) dec arpl movsb fiaddl lahf dec add add stos mov push or pop imul add add add ljmp adc dec sbb nop push std test movsl insl bound lcall jmp xor or and sbb popf and cld pusha xchg adc sub (bad) test int insl pop orl jl sbb or ret movsb push jno,pt lds mov call inc mov jo iret mov icebp and imul stc push (bad) mov loop sbb in sahf xor and rcll jle shrl cmpsl add add add add pop icebp mov dec stos adc faddl mov es mov mov dec sub ljmp loope fxch cmpsl sarb icebp dec call cwtl fisttp int3 inc sub mov test roll fdivr call mov fdivrl inc jne sub cltd cltd dec ret xchg cwtl xor cmpsb push imul cli push mov mov push js mov (bad) mov fstpt decl loope (bad) or scas shrb and mov (bad) pop movsb (bad) roll add add push pop test into sbb (bad) out out imul insb push dec push push push mov lds shll adc jbe not imulb or xlat pusha xlat cltd nop fcmovu pop inc out stc or pop divl lcall cs xchg jmp adc lret pushf ja test dec (bad) adc add xchg adc or jmp push test outsl or push inc cmp and mov jnp push stos push pop sbbl push xor in add add add je add movsb dec andl fcompl push inc mov push mov or popf push sub dec in push push das xchg cmp mov ljmp mov pop inc repnz cs insw cmp pop push mov push cmp mov mov rep mov dec aas mov and xchg inc dec (bad) pop mov fsts dec addr16 jecxz or mov dec enter scas mov data16 cmp pop inc sub mov add add push fld mov mov adc (bad) jp imul push subl inc cmp fwait mov insl lret cmpsl or pushl dec scas aad in inc lods mov je inc jbe xor fistp adc push mull pop xor fsubrl insl cmc jnp mov sub fsts adc xchg inc mov repz sbb jnp mov cmp std bound sbb test imul push insl dec int add add add aaa into or in cmp (bad) mov and in call fiadd xor mov lock lea cmc iret cmp inc pop xchg pop (bad) lret hlt cmpsl cli mov roll cwtl imul pop sub pop insb mov outsl pop add sub out fnsave cwtl mov mov pop and mov outsl les sbb notl push in in lods lahf jle adc cld mov loopne push outsb pop popa test lods mov cs sbb dec cmpsb add add add add jge loopne in out add xlat push in aam ja,pt js push imul jns mov lcall imul push mov popa jg aaa fimull or int3 add cmp xchg cwtl sbb mov jle aas add xchg fnstenv sbb jno hlt icebp xor inc imulb hlt icebp mov fistpll inc mov ss fcmovb fldcw insl pop lock std xor cs dec lods dec out int iret jb jecxz jae pop out sub and data16 leave cmp cmc push stos and pushf std out call stos push adcl pop idiv mov dec push inc push out lret in or mov push sub sbb fnstenv enter aam mov jne test pop sub add aas mov inc push leave sub mov xor cmp sarb jne jne inc data16 sbbl cmpsl stos pop mov dec ja and out ss sbb out cmp mov and xor inc iret jnp cmpsl mov mov pop mov mov add xlat sub fiaddl fidivrl mov arpl bound pop aam aam jb fstl sub or jecxz cld stos mov fstl mov rolb in push fimull pop lods stos or and and push pop dec lods pop mov (bad) and dec pusha rorb fcomp (bad) add (bad) idivl push pop outsb jge lahf push jb movsb imul or lds sar pop mov jbe jmp pop mov (bad) inc sub sahf add add add (bad) or xlat sbbb scas and mov test mov ja in inc popa or xchg insl sbb icebp push pop dec dec cmpsl pop fmull inc jecxz repnz mov (bad) mov lods push sbb push cmp dec push inc mov ja sub das xor int3 sbb repz fisubl mov add mov aad scas notb dec ljmp inc test adc pop push aad xor mov adc add into repz and cmc call lcall add mov mov cmp add and sub cltd add std dec lea push add cmp push ljmp movsl add cmp inc xor jnp add popa addr16 mov pop loop outsl divb cmpsl adc mov popf pop aam rolb jnp add std adc frstor repz enter jmp in sbb popf add pusha inc rcrb push sub in add add add add add popa push adc pop ret sbb bound (bad) out js mov inc inc (bad) cld lret xor (bad) jb pusha lods (bad) (bad) jae js aaa or aas xchg jecxz lods sahf jbe pop or jnp inc out and out scas ljmp jg movsl (bad) out or jmp sbb (bad) mov mov inc xlat int3 pop mov rorl test jns sub arpl mov into out inc movsl in cmp repz aam sahf pop add inc fdivrl addl pusha inc add add add jecxz test cltd addr16 jns outsb mov sar icebp or fxch icebp or test push scas mov lcall fstpl gs das std push pusha les lahf packssdw (bad) loope daa push aaa and hlt dec xlat outsb lcall push bound lahf mov loopne out cs lea pop mov pop in push inc mov sub pop test rcr sub shl mov or outsl mov lods nop test orb leave add sub push dec clc (bad) notl ret push mov mov mov dec cmp sbbb test xchg cmpsb pop mov mov cld pushf fs insl repz add mov cmp jne mov jno scas cmp mov mov push pop cmp push pusha gs iret leave cmp pop mov sbb out cmc push inc xchg jns push xchg test out inc scas nop jb leave mov cltd xchg cld adc iret test xor add cmp sahf add in scas jae sbb push adc and push call cmp (bad) xor inc in xor mov jb fs pop adc jnp and and or movsl push push mov popa inc add xchg push out test stos inc adc lock push dec mov xchg pop xlat imul add lds pop push out jb lea daa adc inc into cmpsb dec inc dec mov sbb jl push imul (bad) mov xchg add add add push adc popa mov cmp out aas mov ds scas sbb test xchg cmp pop mov cmp int (bad) cmp mov cltd insb out mov fcoms sbb cmc and mov add addb or dec xchg (bad) leave pop dec (bad) cmp lret push or dec and cltd mov outsl shll and xchg out imul lret pop push xchg popf jl xor pop pusha dec clc lahf test or add sbb mov js and and push push pop leave and pushf add jp jp dec mov pop inc enter scas push jmp pop or test mov std out dec mov add mov in in sarb insb add add ja pushf push (bad) and subl cmp jg sub in add adc ds rorl ja adc popa cmpsb adc xor sbb fs data16 mov fcomps add add add push int3 xor push push pushf test sub adc mov test dec cli dec mov insb cld lahf push int arpl jle dec lcall sub mov aaa scas out cwtl outsb sub inc pminsw mov xlat pop pushf lea cli movsb data16 add (bad) sbb stos cmp insb sub js pop or or xchg addr16 cld inc mov mov mov cmp (bad) rcrb cmpsb adc adc pop push inc adc sub loop xor out push leave iret lods ds mov add add add negl mov lods (bad) out xchg xchg add test mov in ja inc adc clc lds cmc cli ja (bad) hlt (bad) mov imul sub mov fwait popl xchg shlb pop test inc ja push hlt and pop outsl mov loope xchg sbb rorb lret mov aaa icebp lret call mov rcl pop notl (bad) push ljmp inc stos push and lods cltd popf lods xlat addr16 xor jp cmp cmpsb shr rcrb add insb ds xchg sub insl inc icebp jge xchg insl imul mov add or push xchg sub xchg pop xchg xor rol imul jmp pop mov push or mov sbb jge fdivl add mov data16 mov in inc in dec jp fistp mov inc push push mov std cld out cmpsl push push sbbl mov lds add hlt clc adc cmp push xchg mov xor sub (bad) in add add add add push or xor xor xchg imul mov and inc push jae xorb mov jmp aaa jb out dec cmpsb mov movsb fcoms into inc mov jge jb in stos mov adcl cmp add xchg mov repnz out add cld andl mov pusha mov sub push addr16 mulb pop sahf outsl test adc cmp fdivr cmp and pop out adc add add test pop fisttpl mov xor std adc adc xor pop mov dec sub pop push dec insl xchg lcall bnd or push add mov int push clc fnstenv ret ficompl cmp sub or inc cmp int3 inc add and std shrl mov mov cmpsw ds dec mov nop nop (bad) fldl jnp in and xchg jge or pop and int3 inc dec jnp or pop es adc add add add cli adc int3 cmp jecxz mov mov aaa popl pusha (bad) jmp mov andb scas scas aam movsl sbb jno in (bad) dec fidivl jecxz mov insl xor pop jb fwait jnp mov dec mov add (bad) pop add hlt push arpl sbb sbb sbb sub mov and cmc add dec arpl std pop divb pop add adc cmp adc xchg xchg mov das loopne div add lock or or add enter adc jl xchg mov aaa sbb xchg push sarb push loop push pop mov or ret or pusha (bad) mov (bad) cmp and or push mov ret jl dec aad xor movsb lcall add fsub fidiv mov (bad) mov or push addl scas mov pop fnstenv push inc jae test ss loopne add push gs leave mov call daa (bad) int add add add add lret dec cmp sub call cmpsb pop cs out inc and inc int mov shrl xchg mov inc orl dec dec sahf push ljmp dec loopne xchg pop insb or fdivr stos fcomps and sub in and rcll in fwait sarb (bad) push in out add inc push lcall jb addl idiv mov in fwait test pop pop xchg lea jns dec test in test add add add fisubl das inc sub xor mov jg xor popa jb jg adc ficomp sub cs data16 mov hlt aam ret cld stos inc jle push mov ret mov mov jb sti add (bad) in xlat idiv inc and imul push mov cmc pop mov jns (bad) xchg test push add nop shrb addr16 (bad) test (bad) dec or or jl loopne jns pushf mov jp das stos mov test mov mov add add add lods fsts xor les dec jb xchg adc loopne dec (bad) fimull daa dec cltd sahf or inc sub push adc xchg or rcrb (bad) jbe pop sarb xor sub inc imul xor pop rcrl push sarl fs dec sti fsubr scas repz loope inc cmp sti pop pop xor mov or inc adc testl push jge mov jno cld add cltd dec clc sub pusha (bad) push and popa fs maxps push add add add or adc loope and fcmovu mov test loope xorb add daa or pop ss xchg jge lret cmp ret inc push xor (bad) mov or adc in jp and sub fcmovu in push fsubrs negl nop dec jno sbb outsb cmc pop and outsb insb repz or jne ljmp or mov fucomip push sbb imul out jmp scas cli push in mov jmp add add add ret push sarl test cmpsl pop jmp loopne,pt rcll jmp das dec fdivrl xor mov in (bad) leave mov dec pop adc insl in (bad) mov lods out mov test cmp rorl cli sub scas daa mov jge lahf push and jmp adcb mov add (bad) and and cltd dec jmp mov (bad) movsb xchg into int3 jp xchg mov mov add add add mov and ds leave lock dec push out mov push xchg add sbb inc int aaa mov and inc lds adc cmpsl jae (bad) mov dec push adc clc aas push rcl test sub mov daa (bad) fistpll sbb out jle xor imul sbb sti lea lahf adc into and je push inc adc push jl sub push mov mov ja xchg sbb add add add mov add xchg aaa dec outsl push jmp adc movsb out xchg in stos movsb jmp addr16 push jns pop jmp pop daa and int3 mov enter push psubb sub and jge mov add xchg loope inc jge outsb data16 stc in cmp fs xor fwait jns push xor cmpsl in pusha adc push jno and (bad) cmp add xor cs mov clc or sbbl leave aam pop in or lods call add add add add or sbb repz les jmp push mov mov inc ret sub nop pop mov pop or sub push loopne mov insl movsb inc dec and cmp jg (bad) repnz (bad) mov seta das mov loop sub and jge aad and mov roll mov fistp jb das loop cmp lock push test out jne add movsb push das cltd mov xlat cmpl les add add (bad) mov xor nop mov and ljmp leave (bad) (bad) fldt push fs xor fsts xorl arpl add dec mov std in ret popa aas loope gs pop sub jg push aam int js es daa notb push push pop int3 mov jnp in jne call ljmp ds je dec jge push ja out mov mov repz xlat movzwl dec les or stc push add add add add cli jge dec (bad) fstp lods gs mov sbb jne ficompl pop iret movsb fsub inc dec xchg and je in push fisttp or xchg outsl jno aas sbb push in insl mov mov ss test mull mov sarl das push enter jp push loope lock arpl inc roll (bad) fs push sbb mov bound push add (bad) sahf leave pop lods (bad) int push lods mov cli mov shrb mov (bad) adc xchg xorl add add jb pop cli fadd sub mov mov ja xor dec dec sub lock jns call fcompl orb mov inc cltd mov dec iret mov xchg or test ret jmp inc frstor lret fsubrl cmpsl add xchg sbb jo or cltd jle mov mov frstor xor or jmp cs add pop (bad) pop sbb cltd in leave out xor in adcl mov add add add mov sub push outsb sub lret insl mov ret mov ret adc cs and test testl nop into push jno fwait dec cmp jnp sub adc sbb mov aam mov mov stc sahf fs dec or cmp push xor push xor dec sub insb jp mov divb in jno mov jmp lods adc inc push sarb cmpsl push cmp jle int stos in mov sub xchg mov dec das into and cmp and push and icebp sahf adc ds in arpl sahf sbb add in xchg sbb insb dec out js dec add fisubrl add mov pop neg fdivrl push fidivr push xor xor jmp cmp inc xchg adc sub les dec stos mov adc inc fidivrl push pop pop pop repz rolb xchg push ds (bad) mov jmp repz leave add (bad) jecxz in xor xor in cmp inc (bad) (bad) add add add pushf loope pop movsb pop fstpt mov xchg cmp aas push shll xorb mov mov inc jbe ja xor lds cld les inc sbb pop ret sub test xor shr bound push mov push (bad) out aas xchg and or (bad) pusha inc pop mov mov ds cld (bad) mov sbb mov push cmp lahf test shrl pop in mov jecxz mov jbe adc jbe mov push daa add add add jl push mov jg inc out cmpsl inc or pop push xchg sbb aam scas inc adc pop jno test push rep test loopne inc mov test je mov xchg push push sub repz inc dec push push lods xor insl mov sbb inc inc cwtl stos cld test sub in xchg aad and inc lock rolb pushf or and lcall mov int das jmp cmpsl mov jbe jne int sub mov arpl sub dec rcrl lds add add add add inc shl xor aad add outsl aam jnp xor js daa sti (bad) jmp sbb push test xchg xor imul movsb adcl mov out dec repz (bad) jns pop std xor sbb cmp loope fs cmp push mov (bad) adc addr16 mov jp sbb fdivp add jecxz jecxz (bad) arpl pop cmp loope data16 xchg das shrl imull lcall das in add add add add add cltd jb enter sti cwtl pop push inc cwtl cwtl mov out enter pop pop pop cltd notl sub cltd dec push sub std mov xor jbe sub sub mov cmc loop add fwait mov aam cld aad les ljmp rorl lretw dec jne mov (bad) xchg push scas mov add pop stos lds in bound scas mov out mulb sbb pop cs and in ljmp add mov es push movsb cmp lock popl lock jecxz (bad) andl pop jno xchg (bad) lret sbb jns stos (bad) lods sub int3 lds sub adc (bad) lret int3 lret xchg pop dec pop jg jmp popf jae or dec push xor push (bad) push adc je jmp add adc adc mov cmpsb dec dec inc aaa mov and mov (bad) dec and add adc mov add add cmp ffreep dec jmp push sbb gs sbb call icebp or sbb or push adc pop lock push scas les xor cmp or jge push jp mov (bad) test adc adc xor pushf sbb cmpsl les cmp jecxz cmp test out pop movsb adc ljmp outsb add sub rcrl in arpl repnz inc mov dec or push jne sub movl inc or stos aas mov add add add add and add adc movsl pop cmpsb xor jge mov aaa mov (bad) pop sub add inc stos dec mov xor mov sbb dec inc lods mov fadds jb mov and cwtl mov pushf sahf push push std loopne shrb xchg outsb out mov lahf pop mov or sbb add aaa fs js adc outsl les xor add cltd jl ja (bad) and jb xorl lret pop inc pop push std sarl repnz jecxz mov add mov adc pop or sbb push jge and adc cmp call sbb dec orb adc and pop in pushf lds mov negl inc fwait xchg das or sbb pop push sub or lods dec je sahf sarb jae mov xchg je mov push leave jo stos mov xchg aas nop mov orb sti or roll movsb cld (bad) xchg imul (bad) lcall iret mov add add add xlat lds push sbb fistpl fistpll lods sbb inc dec (bad) mov hlt mov cmp test sarb andb fucomp repnz imul scas in stc in and (bad) in sbb jp mov test in in lods push push in sub fdivrs std test mov test jmp (bad) mov jnp push and xchg stos mov mov mov sbb push loope push ffree jmp add add add cmpsl lock fisttpl int3 xchg mov inc push sbbb test andl (bad) mov lea add cmpsl push mov add mov dec shrl push ds xlat dec jb gs jae sbb icebp andl fldcw sub cltd sarb les repnz xchg lea ja fiaddl stos mov cmpsb sub sbb sub dec scas mov inc and aas imul jge xor cmp loope mov xchg iret pop push popa jmp das (bad) fidivrl push arpl adc mov xor inc mov shrl iret and mov lret addl nop mov or jg xchg jbe pop scas jbe add es dec lret sahf or sbb int3 push int jb das clc sbb scas in cmp xchg les pop mov sti sbb sahf (bad) sub lret mov xchg sub add or (bad) aaa dec lods xchg pop mov insl xor xchg decl inc fincstp sbb mov ljmp cmpsb sbb pop andl hlt arpl add mov push cmp (bad) cld pop push and sub xor popf adc xlat mov popf lods push ljmp mov jae (bad) cltd inc rolb frstor add add add add iret test jmp jge inc cmpsl (bad) mov bound icebp shll pop std test and lahf jge (bad) fstpt jl push bound lods sbb inc cmp int arpl data16 test imul jp andl jae insl lcall ds je js lcall lret (bad) mov and fistpll mov mov cld dec clc jl xchg xor fadds pop imul movsl jne outsl out loopne ret scas insb cmp arpl sub fldcw test cmpsb incb sub sahf jge push inc sbb sti mov fldln2 or insb mov out rcpps in repnz dec pushf aaa (bad) xor mov push fistpll dec inc fmuls xchg fisub sahf ror mov mov cli xor inc test cwtl outsl cmpsl popf xlat mov sarb or add cmp sub lods lret cld cs test jno popf push adc repnz xchg iret inc nop cmpsl dec loope aaa out (bad) data16 add add ds sub cld pop sti inc lret dec pop dec pop mov add fnsave int3 push sbb sub (bad) push sub sbb aas out popf cmp movsl (bad) lret mov outsl stos jg pop pop add or (bad) or cmc fs cmp and lods jecxz jge xor loope das xchg lahf xor stos imul hlt push jge dec cs push test cmp cltd or cmp out loop in popf pop (bad) or jae aas inc ret add add add sub adc mov push mov (bad) xor xor xchg roll xchg mov incl mov int nop cmp scas bound scas iret iret repz add movsb lea insl pop sub cmpsb xchg lods cmp enter sbb repnz lds stos and cmc xor push or ret jo or mov xchg subl stos sub cmpsb mov inc icebp sbb adc fdivrs xor out push or popf mov push push add add roll xchg ffreep loop xor out loope ret push dec out data16 out xchg adc rdpmc and imul lahf rcl cwtl idivb int and xlat jbe cli jle out (bad) jp jmp push icebp je cmp lret cmc or sbb pop dec or aam and mov cwtl mov in mov cmp or aam mov add divb jecxz adc rclb out ss add inc imul add add add add mov pop push xchg call pop push das adc shll or or call and sub add xchg sub lock mov inc arpl dec iret mov and xor shll xchg pop lods inc daa and std dec pop xor (bad) push flds mov push addr16 or adc sub lea cmp pop or jae push cli inc push pop or mov mov in sbbb add inc jg add add add push pop add and std in pop inc sub push cli jb hlt or lea xor (bad) stc cmp ret movsb jge movsb in sahf pop mov add pop inc mov pop sub ja fcoms add mov xlat sub jnp in hlt mov push fwait jne cld inc ret cmp jbe clc arpl mov insb add xchg jo test jmp mov ja data16 inc out jmp int3 pop int inc leave and dec xor inc add add add cmp sub pop add sbb pop cmp stos and lcall shrl pop pop lock and inc jo sahf int3 and adc bound pop in lahf inc fnstenv adc pushf and sub std test out and inc or add test mov in xor stc add adc repnz inc fistpll xor lcallw jecxz inc adc ds dec jg dec adc mov add add add jl test push mov sub sbb sbb jb jb pop mov cwtl mov notl mov sbb fldcw mov mov out call sarl nop out mov lret mov pop dec popf jns ja cmp mov fildl aaa pop adc sbb xor mov loop ja adc add (bad) xchg loop lods mov fwait cmpsl dec jge add jnp and add add add add and cmpsl sub andb out push sbb sub push mov xor icebp push and pop pop mov lret mov or jge dec dec cld insl pop mov inc inc push xchg xchg das xor jmp cmp push cmp xor inc sub scas (bad) scas fsubrl lahf es fwait cwtl mov add test ret jecxz xor mov sar mov inc jbe rcl mov fldz stc fild push imul cltd and in (bad) xor (bad) push push pop xchg sbb jnp adc data16 ja push sbb pop fidivrl mov movsl insb push fnop dec pop (bad) enter pop mov or pop pop insl mov jmp cs pop out outsb and call jne stos pop adc inc dec lock lret dec pop (bad) xor out mov aad iret jmp jns adc cmp out xchg mov mov cmp push jmp out sarb iret ret mov das or cmp cmp fildll mov add add add add cmpsb inc ja push jno jns pusha push push je push push xchg es roll arpl cmp cmpsb shl js cmpsl ret push xchg pop enter imul jnp popf fwait outsl test std push and pop mov lahf cmc lods jg movsb out mov or hlt inc jge insl bound call lea stos bound loop pushf pop jge cmpsb cmp push adc xchg push pop lret xchg mov in repz pop stos lods or inc xorl dec shrl dec loope pop add js nop xchg movsb sbb sbb push sub mov int hlt stc or cmpsl inc push sub add jp cmp inc ss fwait je out sub insb mov (bad) insb test mov and mov cmpsl mulb mov rolb mov adc sbb jmp das jecxz lea cmp mov add inc aaa iret movsl push sbb xchg pushf insb mov jb pusha pop mov and insb mov daa rcll add add add jbe jns test mov add clc pop int (bad) pop mov loopne xchg pusha rcll divl mov loope xor sub mov adc xlat imul cmp nop xor out lea (bad) jecxz call inc xor test lock inc or rol mov repnz and fwait repz std fdivs adc cs inc jg insb rorl push nop jnp cmpsb test adc dec dec jns xchg dec inc js data16 mov add add pop aam cmpb mov push mov je stos (bad) jns pop push insb xlat (bad) stos dec dec mov out push add clc movsl fnstenv lahf and xchg sar testb mov pop popf dec mov push (bad) cmpsb cltd mov jmp dec (bad) fwait leave in sbb sub sbb subl and dec test insl push push and in xchg fwait add mov (bad) jp call cltd cmp inc jbe add (bad) and stc imul add add not jb lret xor into loopne (bad) push pop sbb pop mov stos sub cltd cwtl sub mov lahf sbb (bad) jp inc imul mov fwait stos nop je inc loop (bad) mov sbb xor rclb imul pop mov push jo lds ret jp stos jb lcall cmp imul inc pop mov inc xchg mov pushf pop cmc mov inc xchg pop xor jnp inc add notb fdivrs cwtl adc mov aaa mov add add add add enter push inc std fninit jle xchg xchg out (bad) outsl mov lods xor push pusha pop imulb repz xchg jmp aas jge dec add add mov xor mov je pop jl and mov imul ss lcall stc jle js push push scas xor das inc mov in xchg out inc gs add hlt xchg stc sbb (bad) jae (bad) pop and (bad) imul push jl pushf ja cld add add add add dec and imul fmulp movsl stos lret incl pop xor inc xor xor cmpsb in fsts adc xchg test dec imulb bound jg or cmc pusha ret inc (bad) cmp add xor scas sub push int3 and test loopne cmp mov in xchg mov in cmp iret int mov and test pop and fimull add out (bad) push sti insl daa push mov (bad) mov add xchg mov sbbb rolb mov jnp mov cmp xor cld out (bad) mov jo push add push inc xchg inc mov pop push mov loope pop ja pop ficompl inc pop sbb or sbb xchg add aam sbb (bad) sti or out sbb adc dec xchg in push xor mov cmp mov xor mov sbb mov pop out in xchg push es fiadd movsb jbe mov add add add add cltd add jg mov cmpsb fwait xchg xchg mov jnp dec stos leave push pop ret adc aas clc sub mov xchg repnz mov mov scas jle push in or loopne addr16 and xlat negl cmpsb and adc cwtl in mov das push out mov repnz sub repnz in loope sbb mov pop mov xor cmp mov dec (bad) sti outsb dec mov popa fs cmp jp push pop adc pop inc jmp cmc add add add add into pop mov imul cmpsb mov push inc jle push dec sarl dec jle divb push mov lock ret push inc mov jnp dec clc jge (bad) sbb gs pop jb (bad) ss pusha dec test iret daa loopne call icebp mov lods into sbb gs dec xor adc fwait pushf and dec mov mov xor cmp sub clc clc sub mov lods movsl push add add add or clc js dec imul aas aas xlat incl ss in das cli (bad) jae aam adc jae data16 loope mov xchg std (bad) sti (bad) sub add out aas mov xor sub and jge dec inc test push xchg je cmc lods sbb daa aas dec jne xchg push mov sub sub mov add je push aam rcl movb jmp xor rorb push mov cmc repnz jne int pusha add jbe add add add add pop and call pop nop jne add leave arpl xorl (bad) fldl adc mov push sub cld adc xor add mov (bad) imul ljmp sbb jge xor xor push imull lds mov bound loopne pop pop add cli xorl cmp and inc es adc pop arpl inc pushf loop mov jp sub mov add add add mov aas xchg sub dec dec imul cwtl lods lahf in push fcomp (bad) incb sti mov push clc or jo stos jmp xchg (bad) ja mov cmp jb jns jmp sti adc (bad) into out rclb dec scas sub out sti (bad) cmc dec xor shr aad jecxz inc xor sub push or test jo imul jl mov mov cld subl mov jno stos insb push leave sti sbb test add add add add jmp mov add lock in scas lods xor lret pushf xor pop inc ss add cmp pop pop inc mov call imul xlat jae push or xor pop mov pop mov or bound out xchg (bad) mov cmp xlat out dec (bad) xchg adc int3 test jno lahf sti xor cmp aas in js (bad) pop mov jecxz fisub into sbb push jge loopne push xor mov fild add add arpl jl hlt and (bad) loope sub cli sub mov xor adc mov notb adc and xchg stos das fptan sbbl bound jbe cltd test cltd push (bad) and inc push xor push jo sub pop ss jne std xor push dec gs shl and mov add rcrb iret movsb mov dec ja push aam xchg out loop xchg mov loope pop or arpl addl add add jg out or jbe mov xor aaa roll cli daa xchg rolb pushf sar adc cmpsl jg icebp call das (bad) fs insb scas jmp jo lret mov test (bad) mov add sbb out out jecxz jle pop ds add aad enter or outsb (bad) sbb cmpb jl jne mov mov (bad) out fs jl cmp fwait push pop ret ror xchg rolb or dec lret icebp mov dec push dec data16 adc cwtl push fist les xchg iret jns lock (bad) ret cmpsl stc jbe push xchg or pop xor fucomp rcl rcll shll mov dec push rorb ljmp cmp xchg inc xlat cmc imul xor jae loope fdivl cmp pop lcall add jp mov cs clc loopne push outsl xlat nop cmp mov fsubl jmp pusha in cmpsb mov pop jae pop rcrl cmpsb add jge mov inc inc inc or add cmp loopne in push psubsw js in push xor fs push (bad) int mov xchg ss or scas mov cli push push iret pushl dec mov inc add cmc call dec and cmovno or clc in pop inc and inc lock push lock and mov push mov push sbb leave pop xchg adc jo aam cmp add (bad) xchg cmpsb fldt push test mov jg sub xlat xchg mov dec xchg add add add aad mov fsubrl es jbe int mov enter ljmp lea js mov or aam mov xchg rorl ljmp mov push jae pop mov out repz jg cli jp add cmpsb loopne (bad) notb jo fcom std and jnp popf lret (bad) xor cld sub into js ret rclb loop das popa lea popf das clc xchg js std inc push cmpsb cmpsl push sar je stos mov xchg mov add add add add sub inc cmc lcall push and mov sub mov scas jbe test dec test push lods arpl in pop sub out cli add mov and jg ret fiadd pop inc dec inc test mov dec in jb cwtl mov (bad) mov adc jmp iret push test ret dec or mov push fmull mov cwtl mov popl xor pop pop dec pop mov pop mov push jno mov add add add ljmp adc mov mov (bad) jno fwait fwait xchg pop mov int3 gs jl (bad) repz adc sbb (bad) push mov xchg flds push jecxz cltd es incb xor mov sbb inc imul inc jne or inc mov ret push fmull push fwait cmpsb sub push cmp lds mov lret push inc sub std cmpsb mov dec ret jb sub mov or ficom xchg bnd int data16 inc sub xor mov adc xorl in pop mov jbe mov ljmp inc or (bad) repnz pop and dec insl (bad) jo sbb movsw mov lods cs mov and xchg pushf mov adc cmp cmc mov sbb roll push lods cmp arpl mov out xor call or repz fdivs add nop movsl cmp adc ficompl mov inc push add add add mov inc je inc mov ret mov and dec mov mov lret popa sbb fldl mov pop adc bound mov add (bad) shl (bad) jo pop stc data16 push sub scas and int3 pop fldcw into leave pop xchg pop js repz out dec popa dec sub mov movsl cwtl mov (bad) or mov push xchg dec ficoml ja and enter mov cmc mov lret push arpl mul jmp add add add add stc jbe imul mov js mov popf mov pop cltd xchg inc dec lea cmpb dec pop jb jl mov sbb push push fs stc cld push in sti aas mov jle jl adc (bad) jo adc xchg jae aas imul icebp test hlt cmp and cli xor add sub sub jp std loope jnp in or imul dec jecxz aas mov lods daa mov adc bound ljmp mov mov arpl push mov xchg stos fisubl aaa inc add movsb mov pop addr16 dec pop mov or bound xor mov cmp push xchg gs (bad) stc xor or push je dec push sbb xchg adc lret xor or mov pop nop mov ljmp jmp stos fisttp xor inc fdivl add dec jge call pop lea mov fstps add add mov jbe jmp aad fcoml mov arpl jne mov adc sub add test cmc test xchg pop ds (bad) xor sub xor or dec and jnp inc dec cld adc adcb cltd mov dec jae xlat clc jae lcall loop dec cli adcb ja iret outsl sbb add idivl add sti mov into lods scas or mov cmp cmp flds mov aaa jg jbe jmp repz add add add inc aaa aas dec add pop (bad) push fs mov cmp adc popa out mov repnz mov pusha inc fcmovnb mov dec clc pushl das sarl and xor repz and or sahf inc mov jmp cmp mov and (bad) mov push and inc push fs mov sub adc lods mov lods sbb and outsb push fstpt lds (bad) lret adc inc pop add pop scas mov add add add add adc insb xchg mov jb mov sbbl push frstor cmp jns call clc out ljmp dec push sar lea (bad) scas sub inc hlt sahf mov sarl sub inc je andl mov or js inc pop sbb rolb fcompl stc xchg xor (bad) inc (bad) scas mov cmp dec cli sahf jae mov aam in imul std mov sub push sub gs or (bad) clc sub pop add pop aam and cmp imulb in pop sti out in jg mov sub pop or fdivp cwtl mov add cmp rol push mov add js,pn cmp ss push pop idivl jecxz ss in (bad) int in push mov sub dec popf andb jne fistpll repnz orl jecxz mov sbb pop out inc xchg sub and jbe pop pop mov inc lock leave sbb pop arpl sub push call out mov in ds add add add add sbb insb fcoml mov sub out jbe add xchg mov out (bad) loop mov push add dec jmp push (bad) cli daa pusha or gs int cmp stos push jno mov frstor or loop push mov jae jp mov pop ljmp addr16 stos repnz test cmp fwait add push in daa inc fs jns mov fisttpll or push fldl imul add inc mov aaa int3 push lahf or mov sub push xor hlt lds cs out outsl aam pop mov sub xor das inc inc or (bad) std pop das inc int3 jmp mov movsl push std data16 test jns pop push adc (bad) popa in inc mov (bad) and sahf aad addr16 xchg lret cwtl mov mov lods lods std or dec repz std (bad) neg dec cld hlt mov sbb add add pop movsb (bad) inc int add add add add loope pop int3 mov bnd pusha iret mov pop arpl fcoml out inc mov call push cmp data16 out enter test ret cmpsl packssdw roll test jmp sbb sbb lret mov lret (bad) hlt (bad) mov add add mov clc mov jg je negb add inc cltd (bad) and and dec out xchg idivl and mov js push cs cmp (bad) jae dec add mov ja inc xchg sti js fst out aam mov out in push inc pop into ret sbb es imul inc jbe xchg xor push adc dec mov out pop adc sbb repz insb sbb or mov sti into lods lds fcompl aam jb frstor insb pop jle fidivr add mov mov fadds ja cld or cld cmp data16 test (bad) lret mov mov in mov sbbl add add loop (bad) mov repnz sarl sub test outsb pop push scas push mov add iret or xor bound and fdivs add je cmp (bad) ss js (bad) fnstcw add lret lea rclb pop insl sbb clc xchg movsl mov ljmp (bad) inc inc cmp xchg jns or and imul std push push sub dec daa cltd dec ret repnz (bad) xchg jmp inc arpl and xchg call add popa xor repz insb jmp negb or fiadd inc mov xor pop (bad) movsl js ja xchg cli pop push dec push sub and inc mov (bad) cmp cmp dec andb mov call sub sbb push fldt nop and xor adc dec or pop stos sbb stc mov imul jmp rorl in nop push sahf cmc sub gs xlat push (bad) sbb pushf mov add inc pop jle adc sbb call or js mov jl aad push mov int mov gs int3 (bad) mov adc push in inc mov ljmp mov in push cmp and (bad) sub ljmp iret mov jns pop jecxz roll lock xchg mov test pop iret sub ret enter (bad) (bad) cld mov mov sbb cs repz (bad) mov in dec add add add add gs xchg sbb leave jecxz add push mov ret mov sub lock xlat test call test cmc fisubl in mov or out sahf cmp gs dec in add movsl jo jne pop xchg repnz fistp sbb cmp in (bad) cmp pop outsb in int3 fmul js stos mov std add pop and fsubs jno xchg xchg cmpb adc loop sub or cltd or add add add add mov loope add scas test pop outsl pop lock adc sbb cmp push es pop inc dec js inc lea cmpsl and rcll ret fcoml mov out shll lcall xchg enter leave cmc push dec mov pop jo in push icebp push pop xchg enter xlat dec sub fstps adc jbe xchg xor fs hlt dec (bad) incl nop mov sbb scas mov flds fstp (bad) stos cmp ja and mov jbe int3 jnp mov lahf popf fisttpl mov cmp loopne xor shrl pop jb push xor dec xchg jns nop lock sub in xor loopne mov jae adc daa popf arpl cld cltd sub inc rcll sahf inc les aad rolb inc pop roll mov in out dec xor sahf adcl js pop xlat cmp enter scas jno fcmovu cmpsb aaa iret loope mov sub add ljmp cmp decl xorb inc inc cmpsl push cs pop pop enter push dec into call mov fstpl or jae fcompl insl jecxz mov loope push xchg insb mov sbb rcrb int3 aad inc lods xor scas push inc insb lahf lods mov daa or mov out adc mov cmc call in scas adc les dec insb mov mov dec jmp ljmp or outsb sub fldt outsl push mov popa and test (bad) dec cli ljmp loop xor jae cmp mov loop scas sub mov out lret jnp cmc cmc dec sbb out adc add pop rcr pusha loopne mov dec in jnp sbb ss mov mov pop sbb mov ja (bad) (bad) cmp adc pop lods mov ja sub ret es outsb pusha mov mov jo lahf inc and xor cmp (bad) mov cmpsb push jae lahf sahf ja leave ret frstor cmp jno je add add add add cmpsl imul jl outsb ret aas and in jns jg rcl sub repz adc cmpsl or ror xlat cmp (bad) addb dec lcall inc or inc and mov jno pop pop pop sti push sbb int and fisubrl nop sar inc mov or or (bad) pop xor (bad) pop mov lods sahf lods or mov fisubl fstl mov paddusb push cmpsb inc leave xchg dec (bad) xor ds dec addr16 xchg pop add add add push shrl (bad) ss dec sub inc imul ss aas jp or push inc pop ffreep xchg idiv rcl push sub sub aam and fs pop out push (bad) push sti les cmp mov roll push push push cmc insl sub loopne lret push mov dec dec pop fildl cmpl push shlb int sbb pop iret mov xchg jo ss jle pop insb insb jp mov repnz xor cmpsb and stos repnz adc ret into mov pop mov imul mov cmpsl jns push es inc popa xlat decl push ret sbb mov rcll (bad) xor sbb lock jne test adc mov xchg shll jne inc or daa out xor mov adc daa cmc adc insb sub fs push into shrb xorb fwait lcall or enter cmpsb push push xor cmc xor out cmp inc adc add add add add xchg in jb fsubl in push insb sub adc movsl sbb or add aaa mov jp xchg mov daa lret jno xor fcoml repz leave jl dec ret test jno (bad) cmpsl fs xchg sub add ficoml movsl in js adc xchg and fs lret sub lahf mov adcb push mov xor push repnz and repz ret mov in outsl scas lock ret mov pop xchg xchg rorl mov sub insl add add add fdivs shrl test nop pop inc cmp mov xchg mov into jo sarl push or jnp outsb cmpl cmp sub cmpsl sbb cs cld push xor popf out xchg inc (bad) addr16 adc cs or dec pop add xchg push sub ss movsl push jg fs push xlat jb lods jmp repnz mov loope adcl stos int push lds dec cltd push aaa xor add add add loopne or adc fsubr pop sahf mov frstor or leave lock pop mov subl adc mov into push roll out mov mov fwait clc push test mov pop or std test (bad) mov dec dec inc cmp sti lahf aad ficomp js movsb push out call cmpsb push aaa jno or les enter sbb js lret push or into gs mov ror jl add add add add push and mov insb sbb mov enter fldenv pop dec inc pop (bad) add push or mov xchg fimull pop lea inc cmp aaa push insb push nop dec outsl mov jb movsl inc data16 or sub and pushf mov and xor daa and push and adc mov aam or jmp outsb fmull jle fcmovnbe dec sbb outsb sub lcall pop das dec leave cmpl incl es outsb or rclb cmp jecxz cmpsl insl imul jb sub add mov (bad) ret out sbb jae aas cmp dec push fsubrs mov fisttp adc push jle xor scas jge cmp fs test popa jnp (bad) (bad) push dec int3 cmp in or clc dec cmp int test daa cmc pop lds or dec out jo fdivrp fwait dec sub or enter fisubl out inc arpl aam pop pop and pop fidivr out lea lods push mov dec xlat mov pop loopne inc fwait in or inc push cmp (bad) out xchg pop sti popf test pop into arpl sub aas inc adc mov jmp jmp inc hlt cmpl mov and aam ljmp xor leave stos insl xor js test xchg stos sbb in rcrl sar stos mov push dec pop ljmp notb hlt movsl xchg xchg dec aas add xchg mov cmpsb inc sub add add add js cltd pushf cmpsl fistl (bad) mov cmp and adcl rorl stc test repz and jno inc cwtl inc mov mov movsb push scas inc or add cs lock cmp dec add fs stos pcmpgtd and sub (bad) js pop outsl jle loopne ja jp je in or or mov lods xchg dec imul xor imul mov orl add pusha push xchg pop test cmp cmc test in sub pusha push in dec and je fldl lcall jno es jecxz pop movsb int3 sbb repz fidiv out fs in sbb add fcmovbe int (bad) sahf aam pop cli push cmp mov data16 inc negl enter out adc (bad) mov (bad) repz or cmc popa inc pop mov clc inc jle xchg xor imul insb adc sbb add add add (bad) imul (bad) js sub fimul sub add ds adc mov sub jge not (bad) cmp push cltd sti jecxz xchg add out xchg pop cli adc jbe sahf insl jge imul ret das loopne aad imul and stc mov jmp jns or xor dec mov (bad) dec ss jne dec lret ret cld ficomp loop jp icebp xchg dec sub mov add add add xchg stos inc dec dec xchg sbbl enter xlat xor and fs push pop mov fsubr mov mov jb mov scas in rorb dec or jo fmuls jmp test ja lods jae xlat ja adcb sbb sbb jecxz xor shrb jno repz out mov mov inc popl mov test pop insb loopne icebp iret aas pop ds imul sbb mov sbb jecxz add and xlat push add add add dec and cmp adc outsl xor lahf mov xchg mov stc jbe or aam cmp pop cld ljmp int3 clc or ret push mov add dec jae imul push xchg outsl mov jp insl ret xchg jmp insb enter jns xchg push or dec clc imul stos xchg mov push and enter push sbb jp ret adc es xor add (bad) or test cs mov ficoml jl lods push add add add movsl fldt rorl fldcw pop cmp pop (bad) loopne dec mov gs pop sub and decb (bad) push jae insb pushf xchg push push addr16 push or imul mov pop lods mov testl enter lock add insl in inc sub dec adc dec std leave mov mov adc ror ficoml adc xchg and sbb rorb es adc loope xchg es mov ja jbe and popa add add add std popa repz out sbb imul pop popf xchg addl scas jo aas loop ret pop cmpsl jg push mov in mov sub sub popa mov cmp (bad) lock nop in int3 mov push insb adc popa pushf lods add adc movsb lret loopne test dec jno cmc xor cmpsl lods inc dec inc xor (bad) sub jmp xchg xor (bad) mov mov repnz imul cmp add add add sub add mov pop sbb stc arpl outsb (bad) cltd and int jnp sub jle iret jae call jle ficoml sbb xchg xor xchg cs faddp jb iret lret int cmp sub pop sub test into add xlat mov les and xchg sbb push in test (bad) jb push mov fidivrl jg testb push mov push add ss imul and sub inc call daa arpl and add add add (bad) mov add xlat jnp (bad) mov jne adc sbb push jl fstpt jo cltd add paddusb rol mov dec xor pop push mov mov fucomp sub cmpsl push cli add nop cmpsb inc mov xchg lea xor popf cltd aad sbb (bad) repz rcr mov negb pushf js jnp and xor cmp mov xchg jno int3 mov lahf aaa call test repnz or sub cli jne mov or loopne add add xor cmp cwtl sahf mov stc xchg sarl and call lret gs mov (bad) and cmp ret negb mov inc jbe (bad) jl sub cs fs jg orb sub scas or ja push push ljmp inc dec xor cmc outsb mov adc lea jbe mov loopne push fldenv out jnp loopne pop ljmp cmp das cmpsb cmp pop das les add add inc mov in or mov push push sbb lods fldt dec adc fidivl pop orb jle and xlat (bad) sub xor or lret jp (bad) int3 fsubl inc xchg sub mov xorl mov in jno popf mov in xor xchg test or pop clc shrb ja (bad) movsl mov mov sahf push sub movsl xor fdivrl or mov push jno push lret loop add add add pop cmpsb xlat popa outsl xchg aaa shlb icebp push sbb dec (bad) insl xlat jae mov and mov outsl or (bad) fnstenv imul jg fstpt mov rclb and test xor jae or and sbb subl xchg fidiv xor fs cmp push and xchg sbb loope bound aam push mov pop hlt addr16 sbb mov mov aas cmp sti lcall add add add loope and mov pop movsb outsl dec push dec jb loopne jg addl xchg sbb inc or popa sub out push fimul lret ret jecxz std call aad mov inc and sub test divl lcall call movsb pushf stos mov xlat repz dec sarb es push cmp insl repnz repnz jge (bad) cmp sbb loope lahf dec pop push out clc jo mov dec nop jmp pushf xchg hlt add add add dec dec inc movsl lea inc sub dec fiaddl sbb inc je inc pop pop xchg sti into inc sub fcompl xor mov or lret fucomi mov xor out or lds pop fs push xor cmp inc dec dec ja daa push and mov push or mov adc xchg mov cli rcll lahf inc cmp ss cmp (bad) test nop gs icebp jb mov aas out push mov push cmp jae enter stos xchg test lock mov add add xchg sub push les mov mov sub in sub loope outsl mov stos fstl orb add lock mov aad mov mov cmp and xor scas jno jo adc fwait dec rclb or add pop mov sub adcb sbb adc test push aas or and lods sub test mov inc outsb dec ret pop sbb mov stc out cltd (bad) xor aaa pushf add add add add into mov int3 mov (bad) cwtl mov mov loop dec push in push daa push or test (bad) adc popa adc adc stos jns jno mov pop nop push adcl add push es sbb pushf mov mov outsb inc orl push cs fnstcw in imul je out mov push bound insb xchg lcall xchg inc xchg out cltd add mov and cmp or imul arpl cltd add add add stos cld pop (bad) mov ror fmull fisubrl outsl imull lcall mov int3 jecxz in mov push or cmp inc es mov jae fisubrl jno movsb jns loop dec cmp les fwait nop dec ss stc (bad) cmc js or add arpl stos dec ret mov cmpsb lods out adc mov mov cmp add pop popf (bad) dec mov addb push out and jnp pop xchg aaa xor xor les inc fisub jecxz jle mov jl jno stos mov adcl data16 stos test xor idivb cmp jb call insl jae (bad) add aam add pop pop mov imul mov xchg jecxz xchg jae jo aas insl mov mov pop cmc in fst mov ret pop inc shl lret add or mov dec out loopne cmp jecxz icebp repnz dec and cmp fnstenv pop fs into incl add add add add mov jnp popa push inc push adc notb fdivrs gs push xchg repz mov je rorl cmp and outsl lahf in xchg ret scas mov xor fidivrl fstl mov int3 jns jb outsl mov scas lock (bad) jge mov xchg loope push inc sbb dec cmp shlb repz shll (bad) xor jae lcall mov or idivb insl scas sbb push mov add add add sbb pop popf jmp insb xor inc cmpsl xor outsl cmp pusha out inc js mov inc mov in insl lahf push sub sti (bad) cmc cmp push jle enter xchg cmp iret jo or pop cwtl push adc or (bad) xor jnp mov (bad) xor repnz xchg ja dec xchg enter or dec adc js push hlt xchg xchg adc popf cmp xchg push lods lods std xlat lret cli cld mov and pop and jle add add add or in xchg (bad) add adc loop popf sbb sti xor fiaddl pop add sub dec xor cwtl mov cmp jnp lcall jns mov dec pop call fidivl cmp ss int test adc dec jecxz aas scas dec ss push ljmp sti rcr orb sub out sbb pop aad xor ss sbb lock jecxz (bad) xor lcall and xor nop add add add add icebp leave dec adc mov xchg hlt fsubs ret imul add sbb pushf jmp outsl dec sub jno inc push in mov inc jecxz fidivrl (bad) lods popf sbb adc jg or jno fnstcw jo sub lods lock xlat and mov std push dec xchg rcll mov (bad) ja mov (bad) mov xchg into sub cli nop arpl inc jl sbb adc xor sbb fwait shrl sbb add add add add outsb fsubr hlt outsb daa sbb fld cmp dec add jae iret inc fdivl or xchg int3 sub stos xor or sti in sbb pop adcl xlat iret cmp enter jp loop scas scas xor push push test rcl int3 inc mov push movsb mov adc stos cmp xchg inc cli into add mov dec test push push pop popa repz lds insb lahf (bad) sbb mov rorb mov stc add add add insl mov mov cld int3 repz ljmp into cwtl cmpsb jb pop mov push push pop pop or les jl cmc jl dec (bad) fcos gs xor cmovbe out pop cmp out in ds sbb mov dec cld mov out js (bad) xlat inc je test cli add cmpsl gs adc (bad) stc cmp inc dec or ss sbb mov xor sub cmc adc adc outsl sbb add add add rcll adc andl push lret gs xor std rcrl shrl mov inc dec adc add jne repz (bad) ljmp out push sbb dec stos cmp xchg inc inc call push mov ds adc adc cs adc xor and aas sti or movsb or mov jae mov imul cmp scas inc inc scas push xor dec mov daa jo jp jecxz cmp addr16 jecxz nop sbb jne mov fucom fstpt xchg enter cmp xor les mov clc (bad) out repz popl stos jp push clc adc movsl in jmp push push mov lea push fsubp pushf out xor lods test std ror nop cmp loop push in add and out xor or push sub pop clc inc cmpsl push mov insb jecxz xchg add jge mov push in scas and (bad) lods push inc xchg fcompl outsb pop mov add adc ficoml and (bad) call inc push add jg in add jp mov clc fistpl inc ljmp adc mov jmp pop dec icebp sub popf ljmp push std pushf push xor shrb in imul push into cli lods in sbb and dec fucomip rorl hlt or and xor xor mov jnp mov mov mov cmpb out push and out cs ds sbb sub adc mov arpl adc cmp add add add outsl xor es int3 test push es clc jecxz add bound inc aad mov pushl inc push stos out dec cwtl mov adc xor outsl cmpsb inc jno adc test push and mov mov lcall sbb test pop lret jno xchg lahf lcall lods pusha push push xor lcall xchg adc cltd sbb sahf push fwait adc subps or inc lds pop lods or jns xchg call loope mov add add add test xchg push mov xchg popf test ret pop adc inc jnp sub sahf lcall push mov ja dec mov pop inc adc (bad) leave inc jl mov dec xchg or les pusha sbb add add lea sub test add dec push scas int3 insl dec clc ljmp jb fimull push dec stos xor mov ficom cltd mov nop bound popa pop and std out xchg push repz or iret adc test add movsb enter andl jmp subb sti pop bound mov mov dec xchg dec mov add dec dec jbe fdivrl (bad) mov jbe or or inc daa cli outsl imul push xor test and push lods sbbl inc negb mov mov sub gs jecxz xor xor and pop fmuls sti pusha stc movsb lret jp pop rorl jbe repnz aam lret add cwtl fild add add add add jecxz orb in sub cmp mov sbb fmull xbegin inc push and (bad) dec aam popa lret mov dec jb stos daa push xchg (bad) sahf popa sbb sub inc ss push mov cmpsb and jmp int3 and adc cld ret addr16 fsub jb fs lahf int3 rclb aaa add clc cltd adc imul inc fwait test sub lret icebp xchg mov or ficoml add add pushf movsl sub cmp arpl jne push dec lds pusha sub test movups xor shlb sub or loopne (bad) mov cmpl iret movsl dec fsubp xchg xchg xor inc mov pop fldenv inc (bad) pop xor popf inc out mov xor movsl test sub sti push lcall xchg sbb inc xchg adc clc add mov lods jecxz rol sub mov fistpl and lods pop and add imul in dec adc mov andl mov xor push (bad) xlat and mov ds (bad) rorb jmp mov mov enter shrl fstpl inc mov jge aad stos (bad) out mov into jae ds mov (bad) mov mov add xor gs mov mov lods add adcl imul pusha dec and cmp cmp test add inc sbb stos addl add sub or or test add jl out mov cmp or and adc mov bsr and sbb jmp sub imul fiadd pushf js sub adc mov pop stos pmullw stos pop mov xchg sbb jo movl push popa push jge es ficompl fcmovb and out arpl test sbb pop mov insl and mov add (bad) testb ljmp nop mov lret inc and les rcrl sbb enter (bad) int mov mov push sahf cmpsb imul mov xchg and shrb pop inc or clc clc leave push in sbb push pop outsb cmp or cld ja sbb cmpsl cltd test mov outsl sbb add and loope in and dec aaa dec outsb mov popa push dec loope xor pop push mov add add das jnp push mov inc (bad) or aas mov mov mov popf cmc lds in nop addr16 aad lahf rep mov fsub cwtl andw sti add add add leave and lea push jb cs fldcw push xor xchg or and clc push push mov mov and lods inc dec add in sub xchg add sbb addr16 fdivl cs daa inc sbb add dec lea pop xchg pop adc icebp arpl leave movb scas adc and sahf mov (bad) call enter shrl icebp xor sub xor mov jo setno dec mov sub ss and (bad) sti test scas adc mov hlt int or fldenv subb sbb cmp movsb and (bad) xor jl push test daa movsl iret mov imul push push lods popa inc and mov je add add add bound add and mov dec mov daa sub shld mull scas fwait rorl sub iret stos mov push sti lahf loopne mov jno dec hlt push faddp mov (bad) scas ljmp sbb es outsb test test test fsubrp test in jae clc clc (bad) in stos and movsb pop das sub nop pop enter mov or jne fcmovbe shll cmp clc js pop lods int scas lret add add add add push ret dec dec adc mov cmp lods add mov and sub mov cmp push outsl mov enter fs add adc pop insb adc sbb fiadd icebp jae js xor push pop pushf (bad) xchg fwait mov push xchg add pop out (bad) mov scas inc dec push mov push clc fistp imul clc sub and rcrb add sbb imul scas out sarl (bad) (bad) insl dec xchg add add add xchg adc or repz push test mov leave pop mov pop fadds inc lret and xor mov into mov pop fiadd sbb mov push insl mov (bad) scas lcall scas jg mov jo pop mov xor (bad) in in inc xor (bad) jmp add add iret icebp rcrb fs aas incl imull lds adc push cmp xchg insb mov dec dec iret push adc jg add outsb or sbb movsl and add add add sub mov call (bad) mov int xor push es fdivrs jns and repnz dec jb and pop jne or fwait pop aaa outsb out (bad) jp push (bad) shrl das adc mov cmp mov push mov std mov mov cmp js add aad mov adc pop and xor insl out les sbb pop dec rol sub sub xchg sahf mov mov mov xchg lea cmp add add call jo jns cltd jg jl adc push mov xchg es xchg and mov bnd jne jo out mov popf sub sub icebp or mov lcall ret mov jecxz,pn pop mov das sti test int3 roll adc inc mov and loopne mov dec xchg movsb mov das inc pop lahf push and repnz sti sbb pop pop inc cld in jge cmp ror lock icebp das jp mov and dec fidivr add add add add xchg bound push inc fstpl arpl xor imul mov xor push mov cmp test sub xor adc nop (bad) mov jno call xor push jae or mov dec xchg mov inc mov adc add mov inc cmc imul es pop arpl cs aam pop loope mov in mov in sbb mov or add pop outsl mov dec jp dec dec outsb jp ds iret or add add add test dec jnp push pop scas movsb add cmp loopne outsb je lods cmpsb mov or (bad) ja jge lea xchg sbb mov push out cmp cmpsb loopne stos cmc aam mov popf mov mov mov outsl jle mov loope imul in mov jg test add push cwtl movsl add data16 jg or aad ret in mov push gs out loope mov ja cmpsl aas sbbb xchg in cmc sbb (bad) mov (bad) push lock jbe xchg mov add add add sbb xor sub outsl loopne sub jl (bad) add sarl movsb cmp inc sub cmp bound pop out out (bad) cli imul jb or out movntps loop lret dec (bad) cmp sub es movsb repnz push lret and mov pop cwtl js lock fsts cli jmp int adc cwtl mov mov adc lret sbb pop fcmovne cmc or dec dec scas fisttpll fisubl push lahf or jns popf add aam stos lds ljmp add add push or push inc cmp ljmp jge fild int cmp adc sbb in pop and daa cli les into push cmpsb add dec mov gs lcall inc add xchg mov std push and imul repnz sub in loopne rcrl dec xchg pop sbb dec aaa scas imul inc (bad) ja pop hlt hlt lret adc cmpl pop sahf pop daa (bad) mov (bad) out fwait dec clc and xor push popf cltd lods mov push cld (bad) xor decb in inc dec (bad) imul sub jae sbb jbe fwait xor cmp ret fstpt mov jne or inc lcall xchg cmpl aad (bad) (bad) inc mov popa inc punpckhbw inc mov (bad) es imul xchg in inc lock xchg mov inc mov xlat addr16 xlat sub adc push push arpl (bad) lret jne adc sbb add add add loope pushf cmp scas push pop fiaddl aad fstp mov loopw xchg stos jb sbb push jge (bad) and negl daa aam iret insb xor push mov popf ss out and mov out adc cltd cltd mov cld test dec rorb aaa mov or aas int shrb inc movsl mov xchg (bad) cmpsb add jl insl scas rcrl jecxz (bad) cld (bad) push push fistpl push xor jo ffree or jecxz cmp add add add out sub pusha mov (bad) inc and inc push insl mov jl pop push push ds je jno mov fmull adc clc (bad) sub sub dec lock enter xor data16 sbb xor mov insb adc inc sub add insl xchg mov icebp iret or lods adc pop cmp sub ficompl loop dec fbstp or inc xchg cmpsb shrb sbb inc gs and sbb std mov mov pop push add add add js cli adcb stc out lea int3 aas in xor xchg push pop sub sahf les and out adc out push mov out (bad) aad cmp jns mov and mov sbb xor out insb sbbb pop lret ret xchg cmpsl outsb stos cmpsl cmp sahf mov shll shlb push cmp inc jo fwait call cmp inc jg xor mov jno jae pop lret pop dec (bad) and icebp sahf lret pushl sarb mov inc mov jns add add add mov cmpsl dec jbe imul (bad) lahf pop addl xchg mov sbb push das shll (bad) es insl call enter jno fwait bound mov in dec pop es mov push dec xchg outsl fisttpll gs mov lods mov and add mov orb stos xor push fistl scas and adc loop lods (bad) les ljmp jle pop push mov sbb mov cmp add add mov adc inc dec fsubrl jb cld ja lahf inc mov (bad) xor push call jo push int3 sti sub fisttpl sub pop jno repz add es sbb (bad) sub cmovge xchg repz mov pop (bad) dec mov mov xchg push (bad) mov pop stos ljmp inc cmpsl mov jp shrb sbb pop test outsl push inc shl loope out lret mov clc inc mov cli bswap add add add add add dec or jg pop cmp mov pop pminub inc xor mov fwait jb mov movsl and xlat int3 imul or adc lret mov int3 lahf ret lret ret cmp dec push jle aas fmuls mov outsl adc (bad) (bad) xchg cmpsb pusha insb mov movb stos into mov lds xchg jno add and stc outsl adc loopne add push and bound pop es jnp subl add out cmp aaa jl repnz push repnz hlt addr16 (bad) xor (bad) fwait movsl call sbb adc or insb aad dec clc in inc push mov std pop mov jmp roll mov out call cli bound std sti test arpl movsl fildll not mov jmp icebp sahf push cmp xchg mov push (bad) lods xchg rorb and rorl dec mov scas push sbb in dec xchg outsl jb fsubl pop ss mov repnz add add add add fcomps jp xchg cltd jae repnz mov mov out xchg push lcall shrl mov and cmp jns fldt jg mov enter test mov mov test dec pop inc pop in cli xor jne mov (bad) ss lock ss outsb cltd sub dec dec sahf imul roll leave addl inc insb lss xchg adc pop cmc dec xor cwtl cli scas or testl sub add add add das or sbb mov inc lea pusha jno sbb (bad) imul dec lods xlat lret lahf xor aam insb mov stos push roll daa push fsubrs mov cmpsl add jle xchg (bad) mov pop add lret (bad) daa lds enter xchg fisttpll iret fiaddl mov jmp fsubp (bad) rolb jnp jle cmp (bad) (bad) or out popa sbb xchg mov incl mov into or lds add add jae addb pop sub adc cmp or mov push shlb and add out jae (bad) jo and (bad) or xor ret mov push loope sti or xchg daa jle dec ret mov jle fidivr jb out stc jb cmp subl cltd jle cmp push and je scas jmp jnp dec neg push sbb test lds mov add sub mov cmp fstpl mov add add add add sbb pop jmp imul xor stos cwtl pop insl dec test cld aad xchg pop dec pop sub sbbl dec rclb (bad) stc aam mov pusha aam sub outsl push add scas das jns and aas cld out xor int loopne aad push fcmovnu mov adc sbb mov lods or ss in or lahf (bad) jne inc push add adc outsb sub push xchg inc out fistpl xchg frstor out inc push push gs mov or jl (bad) fisubrl mov je test nop fbstp test push movsb xor sub outsb ret lock sti sub cmpb notl inc and add clc jle push and and dec (bad) daa adcb push daa xchg push pop adc mov xor outsl pop xchg lret inc pop es out jle xchg inc das add fsubrl xchg mov inc add orl ja fsubrl push adc les insb mov push sbb shl push nop pop les repz adc xor add add add jbe mov pop add pop hlt jo mov or mov jno (bad) mov cld lea push or dec in ss push jecxz in sub sub jae mov lret adc dec xor xchg jge out pop xchg pop aam int3 bound push fwait jecxz push bound enter int fstl inc pop inc fild mov fnsave mov pusha faddl sbb pop not pop pop cmp sub les mov insl jg imul loopne xchg loop sbb in rcrb jns sub or sbb jnp mov in leave daa pop jl adc call or xorl icebp fidivl sbb xor (bad) jbe cs xchg xor scas imul stc and pop repnz mov adc int3 lods push jns fs xchg inc (bad) int sahf and sub mov out (bad) lock jns adc movsb xchg add add add enter out pop cmp mov fs xchg pop mov flds jno pop jg xor stos fimull fcmove decb adc mov stos xor inc sbb lods lret inc das idivb inc sarb inc stc xorl out daa mov pushf xchg negb add xor sbb jmp int3 ficom les or jmp data16 dec test lret arpl jge push in aas dec in add add add add ss int jmp mov (bad) mov or in jne aad movsl mov xchg xchg mov jl push nop fcomps sbb cmp jns fmuls sbb adc js mov lahf mov lret jecxz mulb sub push aas clc xor fmuls mov sti push mov pop lods inc mov sub les hlt cmp jp sti push jl mov ret negl mov add add add int fildl adc mov insb data16 mov aad pop js lret mov add test andl add ds in (bad) cltd scas loop ret cmp fldt aaa mov xchg jb scas ret imul push nop inc push es inc (bad) cmp inc jnp xchg inc test xor jmp stos movsb dec jne or movsb and subl inc daa mov ds mov pop dec ror lcall add aam stos push cmp nop cld movl pop xchg repz jb fnstcw mov mov jo mov jne cmp loop (bad) in fwait aas repnz sbb add mull push add jp mov stc adc cld sub mov mov sub clc imul int3 cld aas mov pop lods fnop cmc cmp (bad) outsb and xchg or dec xor push mov and mov cmp stc or add add pop and popf hlt outsl in daa lock inc call inc xor or jae xchg sti cmpsl mov imul test icebp repnz bound inc mov jmp push sbb stos or xor mov lea push loop sub adc lods dec push xor mov mov push push or xchg jo fs pop fbld add imulb xlat mov push pop push in sbb dec sub pop not js,pn cmp cmp mov rol sbb add add add mov dec test data16 fisub cld test lods xchg inc mov loopne pop push inc ds push add pop adc inc popf ljmp pop insl push dec jp lea cli xorl cmc add jns iret sbbb sahf pop cld xor cltd sub rcr mov rcrl cmpsb outsb mov jg cwtl movsb xchg mov and pop xchg and jl (bad) jmp (bad) push xchg out mov test enter fwait push sub fldcw sti or push jecxz sub lcall add inc or pop into mov insb pop xchg sub mov dec enter pop mov inc (bad) cld mov xchg push rorl stos (bad) jb and sub fnop lcall ds lods add mulb push outsl (bad) cld movsb es cmp jge iret rorb jp sub int adc cwtl popa cmp sub push idivb xchg leave fucomip movsl imul fisubl and leave decb (bad) lock ret subl dec jns movsb negb loopne dec cld inc inc mov das aad sub and add and sub int rol insl fistpll inc cmp imul fs inc jecxz into adc and or inc mov mov cmpsl aas out xor jle repnz rorb in js add adc or cmp sbb stc xchg add ficom push outsb outsb enter imul mov or dec out fistl jno cmp (bad) (bad) lret push cmpsb sbb outsl xchg sbb add add add ss xlat out dec jp add add and cmp jmp push push xor push fdivs int rorb lahf or mov ljmp inc pop cmpsl jecxz xor jbe into leave rcrl hlt movq pop subl cmp icebp sub mov xor jbe push mov ror add out push stc inc in loopne pop mov lcall rorb stc ret je pop outsb xchg testb add add daa and inc cmp adc sbb xlat or lcall lret ret imul sbb xor or xchg outsb sbb je test jl rol inc or sbb add sbb scas stc jmp in jge lret cmpsl and arpl addr16 and fstpl xor mov mov mov fs pop add repz adc push jecxz or cld lahf jp out out jle jns add add add and or fcom test mov movsl cltd into xor jecxz out addl lods or xchg ret jp call lea fldl pop movsb aaa enter push lods and test inc jmp jg mov ja jno jb (bad) out sbb out iret rclb mov add aad adc mov jae xchg mov data16 sub add mov pusha mov inc and rcll add add sbb inc mov pop mov repnz fstps rclb js inc dec ret cmc add das pop inc pushf add and inc push lcall lock loope sti mov in scas sub repz rol in push mov jecxz imul lock scas icebp inc jp pop out pop jnp cmpl popa fcompl and clc lretw adc xchg mov rep jo push adc pop cmp frstor or hlt in and cmp loop xor add add add add jno hlt clc enter dec inc fistpl push or or pop cld jl in jns pushf sbb inc mov dec and push or mov mov repnz sub dec mov cmpsb lcall int3 (bad) push push iret inc and jnp push sti cmpsb push mov adc lea pop ret xchg push add mov mov sub outsb pushf jp test xlat xor sub jb cwtl les mov jo lret pop sub outsb xchg add add mov jo call pop js sbbl (bad) push (bad) jmp fdiv mov inc dec mov xor pop xchg xor mov push scas loope add sbb or xacquire rcrb jo mov icebp sbb add mov dec sbb dec rol and decb cli stos mov imul out in push cltd scas adc push popf (bad) gs dec movsb iret leave outsb fchs pop cwtl add add add add dec adc rcrb or sbb (bad) in inc jp lret addr16 jae add mov cltd enter cmp mov cld aad (bad) xor sbb fdivl push aas jno imull cmpsl pop mov repnz dec pop xor sub jbe daa push dec mov push add dec lea add cli jecxz out adc dec adc ss popa mov xor in std fnop nop pop jno xchg add push cs mov rcll inc (bad) aad add add add mov adc scas adc mov aad adc jg (bad) ss pop dec ficoml notb add inc rorb (bad) jbe mov or lret push fs xchg xchg jns mov pop scas dec mov jmp sbb jmp int3 adc stos (bad) cs inc cmp ficompl push add push in es xchg test cld mov lret xchg mov pop inc fisttpll (bad) ja fadd jle push cwtl xlat dec and pop insl xlat mov or jmp xchg and (bad) xor jecxz add add add add rclb dec pop xlat and icebp jge outsb lods mov arpl inc arpl jmp cmp xlat popa mov push sub popa pop push mov jge adc dec xlat dec (bad) cmp jecxz sub mov cmp in mov ds pushf push icebp mov jne bound loopne add repz adc stos jecxz bts push iret test decl out xlat xor je std in (bad) out jnp adc jb aaa mov mov sbb iret jp insl js cltd add add add add mov sarl ss js in cmp out rorb or or lods jae xchg pushf mov stos adc bound xchg xor stos enter sbb cli mov and inc push fcmovu enter ds mov mov and clc out insl (bad) pop mov xchg mov das (bad) push jl sti or out mov rorb (bad) and cmc push (bad) lock inc xlat mov lcall hlt add add inc mull xor loop pop rcll sahf js xchg hlt insl outsl stc mov scas mov inc pop and inc mov (bad) mov push ja repz mov stos pushf dec scas std jns pop int3 xor scas out cmpl adc enter xor sub mov cmp push jno xchg popf test fsubrs xor fstpl push sub repz aas mov or dec daa dec push push psraw scas je rcl xchg clc adc idivb sbb add add and add or jae insb mov or imul (bad) mov inc ss mov jmp cltd add xchg out cmp mov lock sbb lea push mov push lods or jo cltd inc fwait add cli es fcmove jbe xchg out aam psubb icebp dec dec jl,pn repz pop std and rcl imulb mov loopne mov sbb xchg jmp scas adc mov test add adc xor or mov arpl outsb cs sbb push dec mov lcall and add sbb sarl or fldl rcl pop add and sahf mov sbb std xor into mov pop incl jo movsl insb jecxz and dec outsl mov in fild outsl loope and testl fisttpl rol dec movsb stos lea mov icebp mov mov add cmp push es or add add add add dec in mov cmp jne mov mov mov and sarl rolb inc jbe and adc xchg mov in push cmpsb mov dec xlat test ret sub pop pop jp daa adc test lods faddl sti fiaddl sub call (bad) iret int repz nop mov jmp dec push inc fisttpll repnz fsubrs js lret cmp nop xlat cmpsl and leave inc aad test je loope sub add add add mov xchg mov out xchg cmp xchg dec xor xor (bad) (bad) cmp or fidivl fucomp sub jnp mov dec push adc xor popa popa loop sbb xor ss push mov icebp mov and (bad) aad test inc mulb (bad) sub mov iret dec xor xchg test std inc xor pop inc jnp inc jo mov pushf fnstcw adc add dec test int3 outsb adc fadds test add add add xor adc inc int pop js arpl loope pop pop push lcall mov jp jge dec inc dec and mov xchg push popf loopne xchg ret (bad) xchg and dec jle cwtl or pop repnz loopne mov mov inc aaa sub (bad) idivl pusha xor lahf je lahf mov pop xchg and (bad) jl adc push pop push clc into inc (bad) pop lds out addr16 insl dec mov pop mov mov in rolb out mov mov cmc lcall imull mov insb xchg or mov jmp cmpsb fcmovnb xchg ret push divb adc rolb lret add sub jb pop pop fldl2e inc (bad) in or push mov shll jecxz cmp mov (bad) out lcall jmp (bad) dec mov or cmp add sbb jmp (bad) push jo in ljmp std testb xor push mov pop fisttp add add decb dec mov pop loopne loop mov cltd or adc mov lahf cmpsb jno dec inc gs sub cmpb pushf adc xchg cmp mov pop mov repnz mov jmp and lret xchg sub jg pop push inc out outsl (bad) cmpsl push inc ret xchg test and dec add scas sbbl or sub (bad) cld insl sbb (bad) mov sbb mov dec mov cmp add add add xor add inc andl std or pop or and inc out subl out and out repz mov cmc int3 ret mov xchg in (bad) mov fimull add lahf (bad) faddl add in mov fldenv jmp mov and cmp mov mov test jecxz lock daa test bound jae imul mov lods mov adc dec popf adc add add add mov loop push xchg fsts dec data16 push adc out cmp (bad) hlt sahf dec lods xlat adc pop lea lock adc pop pop ja mov fwait mov bound sbb jp inc into jle lahf out xchg ja (bad) inc xor add dec iret adc popf sbb test push xchg stc mov push (bad) xchg insb mov (bad) xor ss cld test dec jnp (bad) lea xor test cmp popf push cmpsl (bad) cmp inc xchg insb aaa inc ret cli loopne ficoml ja outsb sub dec push movsl or mov mov and or adc mov mov mov add stc add mov mov fwait jg jp dec jg nop faddl jae sub incb mov dec fs data16 enter or out sub sub lods mov mov lods adc or inc cs dec jno xchg ljmp add add add int3 or idivl lahf outsl jecxz lds mov mov pop push test or fcmovbe dec (bad) jae mov negl push (bad) sbb test mov mov fiaddl int inc nop stos jne inc xchg rclb xchg and repz jno loopne inc lahf out xchg std xor mov int3 xchg push fcmovnb ds rorl add pop (bad) lret push push outsb fadds ret and aas and inc xchg sti xchg fisubl dec fsubrp mov add add add scas pop sbb push dec xchg mull adcl rcrl or movsl scas pushf inc xchg aaa pop add aaa ret imul mov aaa lock mov lock jge scas cli imul test das mov xchg xor and int inc push fcmovnbe mov xor push inc sbb inc xor js xorl and das imul cmp jecxz ss (bad) lock jne fwait test iret lahf out int push add add fstpl lret idivl push and aam lods movsl mov insl mov pop push or stos jge addr16 xlat inc in mov fnstsw xchg dec mov scas imul out xchg cmp fnstcw leave add outsb push cmp imul cmp inc jle cwtl and imul das out loopne push adc add das dec inc xchg adc enter mov sbb sbb mov jl inc inc in aam cmp or in repnz add std cmp into mov fs cmp cmp out hlt fucomp dec cld pop and movsl sub lods testb mov or popf ds das adc testl cmp sti or pop mov pop mov mov jle (bad) idivl xchg (bad) (bad) mov add (bad) jg xchg jp out test lcall inc fnstsw out and inc fsub xor pop out insb inc pop mov mov fs jne add sarb in outsb add add add pop sbb xchg cmpsb adc cmp xchg xor or fwait dec mov mov lret aad aaa cwtl sarl js or push pop rolb xchg iret jmp mov cmpsb cld sti xchg push enter jbe cmp shl pop or adc push mov xor outsl popf add imul push loope mov test cltd mov out jmp mov jmp jge mov dec out sub and add add add mov adc mov pop jmp cmpsl es fs mov mov sub push in out (bad) mov repnz pop (bad) mov xlat loope notl pop ficom push mov pushf arpl jo inc out ds bound cmpsl (bad) mov dec add fstpt testl popl neg pop scas and cmpsl or lea mov es pop add fdivrl inc mov sbb xchg popf fldenv push push mov repz jae mov add add add xor into fildl pop cmp addr16 nop mov jg (bad) movsb roll add cmp test repz or jmp sub aam pusha xor add rcrl mull adc jp pushf dec jns inc and ret adcl movsb jb in xchg mov int mov add adc push loopne (bad) pop das dec jecxz jns mov jo cli aam into ss shlb push sbb data16 add add mov mov ljmp push dec rcl hlt (bad) or cmp sbb outsl jnp dec lahf xor xchg test lahf pop dec ja lret mov cld xor add inc pop fsubr hlt push jp (bad) int xchg cmpl jmp mov sub xchg cmp testl xor stc mov xor push in pop test cmp xchg aaa mov gs mov out lret dec mov jmp sbb add add mov sti std es push nop ret and mov push push inc jns mov insb gs jno ja sbb xor cld sbb rol addr16 les pushl xor mov fsubl or jno movsl jl mov or fnop jg jns sbb fwait (bad) rclb ds (bad) jecxz adc jmp lods fcomps movsl stos imul (bad) and mov scas arpl push outsb sbb (bad) hlt or rcl addl add inc test sbb rorl in and or xor mov add push nop arpl pop loop popf lods cld push cli jp rcrb sbb push inc fldcw leave jns rep push pop sar push cmp stos xor add jmp loop cltd mov jae sub push mov ret mov pusha arpl lea pop ss xor cmpsb push jnp arpl (bad) mov movb cmpl fmuls add add add lret inc nop adc inc xchg pop bound or ret nop xchg mov rcrb xlat push dec mov mov out jecxz lret xchg cs xlat icebp adc sub movsb mov inc xlat pop f2xm1 push outsb aam imul cmpb lea push es or sbb jae das out mov into add jo outsl js jl xchg add xchg dec test outsb ljmp xchg in int dec xor add fsubs into dec into add sub dec stos inc and xchg push lea push mov jp sarl lock shl pop jns cwtl inc lcall ds lock rcr and fldcw (bad) jge lods pop movsl add xorb mov aam inc fsubrl lea inc xchg fstpt xor adc adc xchg jl mov mov mov stc out out mov sbb and je jle ret sub std and adc push add add add add clc jecxz ret or mov aad (bad) scas add nop push pusha nop test ror cmpl rolb pop loope fisubr iret daa sbb jae arpl inc adc mov sarb enter sub push sti inc or cld sti adc mov or xchg gs mov mov dec mov repnz ret jnp repnz pop ret je fdivl jne push mov in jne sbb nop cmp lea ljmp add add add mov pushf mov clc or push jg loope push or add movq mov xchg pop pop jle loope jecxz add repz xchg inc pop pop mov add sub testl in add push fist cmp data16 mov xchg push cmpsl loop mov (bad) cmp mov jle mov pop enter sbb scas cs gs sarb or sahf lds loop cmp dec sub sbb jge jno or add add add cmp xor aam pop and pop lea mov lcall loope arpl sub sbb add outsb bound gs jecxz lret fstpt ss ss daa leave aam xchg out icebp push aad add mov das leave dec scas pop inc jb fimull gs xor imul test or push loope jmp out es scas aas jbe (bad) lahf push out divb (bad) and pusha repnz sub add jno popf icebp add in inc mov add addr16 enter int in add addr16 inc dec jmp stc std repz (bad) dec adc adc sbb push movsl xchg in cmp push push jne out dec cmp imul lock jmp or cmpl in les test (bad) test ljmp push clc fldcw xchg cli ljmp push xchg js mov inc add ret lock movsb adc add add add mov icebp test repnz cvtpi2ps cmp or and inc mov mov repnz data16 loopne xlat sbb scas add sbb sti aam xor jbe adc dec mov mov out push xchg dec repz and sub pop popf test xchg stos ss icebp mov mov (bad) (bad) (bad) add mov cmp movsb jl mov xchg fcoml sbb and mov add add add cvtps2pd xchg divb sbb add rolb jg xchg adc or inc icebp ja icebp inc cmp pop inc xor lock xor jae push daa mov aad fsubrl js xlat cld push das jg int mov adc xchg sbb cmpsl push mov fcmovne xchg pop push (bad) dec outsl add mov ret and cli sub mov stos add push add loopne ljmp jp cmpsb and es lds jbe addr16 pop add sbb adcb stos rcrl (bad) out pop xchg js jbe sbb and inc or repz in xchg xchg mov and and adc add aam pop jmp xchg cmp cmp mov out adc and mov jbe js sub add lods jp les pop mov xchg mov setle aaa push sbb cmp push push jbe adc ret xchg sbb or outsl pop hlt cmp and add add add pop mov xchg add sub mov push or (bad) push jp mov sbb jmp push insb inc ret cli stos adc add nop fldt add mov dec (bad) cmpsb adc stos call inc pop pop rcl (bad) sub lahf movsl in jae mov push arpl or into movq push ss cmp xchg mov or jne rolb pop loopne xchg ret xor aas push mov inc (bad) or ret fistpl (bad) iret outsl cwtl cmpsb pop sti or call cmp fdivs std lret test shlb xchg inc test dec decl test push (bad) cvtdq2pd negl xlat mov movsl jmp in add cwtl push pop daa outsb mov loop add push inc lret and fildll imul enter repz and scas push or xor mov das aam testb stos mov push mov repnz mov dec and xor loopne dec hlt clc jl shll hlt aad jmp add add add pop jns inc idivb es xchg ret cld js inc push xchg sub dec jne cmp sbb cmc cmp xchg mov sbb push ret jb (bad) gs pop push inc scas pop pop lock xchg aad add (bad) repz fbstp idivb in sbb mov xor sbb sub adc jge inc mov popl inc outsl xchg cld push stc psllq iret pop lcall cwtl in cmp lea dec orl mov popa in loopne pusha sbbl mov xor sti mov js mov add test int3 sub cmp mov into cmp fidivl (bad) fcoml popa addr16 fdivs or cld out je xor and push es jmp inc test call outsl and scas adc push pop popa test cmp jg data16 pop adc mov and and stos mov mov gs vmwrite enter (bad) mov cmp xchg push gs jae fldcw (bad) add xchg or xor add add mov or jnp out or add sub les bound iret scas xor lods das scas stos pop xchg fldl pop (bad) int and mov and pop data16 in lods les movsb or in mov cld push cmpsl add (bad) in xor pop ss loope xchg and data16 ret push ljmp in push cwtl mov nop lret adcb scas dec jns je mov cmp pusha testl fcmovne (bad) test sub or (bad) cwtl imul fsts mov shll stos and sbb jle adc (bad) xor xchg insb je pop scas mov sbb xor push ds mov and jmp iret mov add xchg mull cmp into js pop outsl popf ja mov stc xchg inc sbb or repz jne pop push lcall inc mov vrsqrtss mov fs stos add xchg insl add add add add jbe icebp fs pop add push push sbb icebp cmc sti arpl mov mov jg mov out xchg pop xchg push addr16 and sbb inc jg jb adc xor insb pusha xor pop add das popa (bad) push mov loopne (bad) jno sahf fcmovnu imull fwait push sbb les cmp (bad) jb outsl pop jb or mov push out push fcomip jg insl jno popf push stos ds imul cli push iret mov add lods jno and jg mov adc cmp push nop sti mov push xor xchg outsl xor xor dec jp inc sbbl dec dec loope clc mov xchg (bad) mov lds iret sbb xlat call lea mov mov and dec sub jnp push jg or jo mov sarb push jnp cwtl js mov dec inc jb adc (bad) sub repz mov fdivs mov xchg xchg pop push push enter add add add add adc adc enter mov push and test pusha dec push xchg xchg mov dec daa jbe stos in jp stos jmp cmp (bad) out xchg xchg in and xchg aad scas vpslld rorl mov push int3 ret loop shlb sbb sti pop call add adc aam jb jle adc mov mov sub pop or mov xor add outsl cli jbe cmp fcmove (bad) sahf out gs add in test cmc pop imul inc dec jmp xchg jo lret pop loope stc (bad) outsl incl arpl dec aaa dec dec adc hlt jbe push sti fnstsw push add movsb pop and or mov out mov inc mov fmuls jecxz (bad) mov or aas ficompl out ljmp jb cmpsb push and adc add icebp rorl sbb in push or div inc pop movsl dec bnd mov js ret inc daa pop adc add add add cmp push pop push dec xchg push jge pop pmaxub popf jle dec popf aad push cmc mov dec aad movl enter (bad) lret and xchg lea push dec imul inc xchg scas add cmp stc jno sbb fsincos xchg insl xchg push sbb sub fsubr and enter inc and out in repnz push loopne fs push add (bad) call in rcll push arpl adc addl jne or push outsb ret (bad) xor js add add add (bad) mov inc push mov outsl hlt xor push cmp xor pop add ret and cs aaa mov dec fimul mov loopne cmp aas push mov mov jg outsb jmp cmp movsb adc loope lock adc dec jmp out in jnp (bad) icebp bound mov xor push mov sub aam cltd inc or lcall test pop iret pop loope sub cli xchg or testb add add add or sub adc mov addl adc jle ret repnz dec (bad) pop pop push (bad) arpl mov lds jb push ja cmp incl je jg jns pop les (bad) es iret sti inc jge lret movsl outsl jbe jnp fchs mov lret out push in mov out leave push lret dec inc out call sbb and lock mov clc stos loop jle data16 shll jbe jnp xchg orl jbe push jnp push shrl fsubl leave loop push (bad) stos pusha cmpsb adc (bad) mov divl and inc adc sub into xchg pop mov inc add sbb ja adc cltd out pushfw sub aas ja test negl fdiv lock pusha mov nop test sbb adc arpl cmpsb lcall ljmp and mov adc imul ljmp inc pop mov push jmp out xchg clc push out add add add adc push inc (bad) addl push push test dec and test adc or push adc adc sti enter adc outsb (bad) fs sbb xor mov pushf jp jno and sbb add jl lret mov sub xor cmp mov popl repnz add pop sbb or inc jge in jae out jb jmp jecxz or (bad) (bad) push fsubs or mov sub clc mov sbb fwait jnp dec adc notl fbstp sbb add movsl jmp xlat (bad) and jle xchg or pop jg imul xor (bad) sbb push push inc mov lods mov jp push or dec imul or ret in insb jae and push add sahf sbb mov dec dec sbb inc cmp and jo shlb mov add popf xchg cmpsl mov mov add add ds fwait mov sub mov pop sar xchg dec pop out jmp adc or cmp lds fbld lock stc xor pop hlt pop inc out xchg mov jg cmp mov int in movsl lock mov or cltd sahf scas iret clc std ret gs add mov push test jp pop stc dec cmpsl stos aam jb lea js not cltd sub mov sbb lahf mov std mov add add add ss mov mov fsubrl stos orl shrl rol inc pop stos inc sub sbb cld sahf jo test lret inc mov out pop out scas cltd jnp stos (bad) test repz in sub mov icebp std mov xchg mov cmc cltd rorl adc mov into cmpsb jae mov mov jo adc adc add loopne jmp cli sbb das test repz xchg jmp add xchg add push mov mov lds sbb cmp test sahf cmc pop push fs mov mov rcl sbb (bad) fcmovnu nop sub xor out daa jl inc popf xchg xchg mov xor jnp adc int cwtl shrb push aam insb int3 adc or movsl adc (bad) mov dec call hlt call or adc push push lea ja test adc add add add add lods inc push scas iret in xchg div sbb sahf mov jne fsubp or pop stos adc insl or clc fs or pusha lret ficomp cli cmp push mov incl out cmp sub out pop pop outsb aaa lcall es dec (bad) adc push mov sar lea (bad) push push out (bad) push cli fucomi adc push sub sahf push mov sbb jmp icebp and mov aaa addr16 out or and ljmp sbb (bad) aas add add add add (bad) mov test xor mov pop xchg pop in add pop sbb stos mov scas cmp cwtl or jp cmc or inc jle xchg pop out dec lds lock (bad) stc lea sbb push sbb push int leave mov (bad) je mov aaa (bad) xor stos out xchg mov imul call jg xor loop or xor lea lock pop add fbstp inc sti test mov iret mov mov test ret add add add add mov inc mov inc loopne test add push jmp sbb inc out jge scas pop (bad) mov or test mov inc xorb sti in in out pop in and imul adc fsubrl jmp mov pop xor mov test lock pop repnz in sub mov hlt xchg or mov scas or and mov mov inc jg repz bnd add add add add and cwtl xchg xchg xchg mov sub cmpsl cs sbb cmp xor sbb add dec jmp pop add test iret mov add jl adc mov mov int3 adc imul push insl xorl fimul adc xchg mov aam cmp cmp mov mov (bad) hlt in xchg pop (bad) int3 mov push inc jl,pt pop (bad) fisubl ljmp (bad) adc add leave lahf cmpsb inc add sub add add add add adc pop sbb dec (bad) popf das (bad) push fcoms stc xlat jg fisubr sar enter pop lret cmpsl ret frstor mov aas cmpsb dec enter lods xchg ret adc negb mov push or lret clc xchg push xchg test lea hlt xor lds sbb lods das rclb in rorl adc adc mov and push (bad) mov mov xchg add dec mov pop ret pop cmp add add add mov and loopne scas addr16 jecxz xor subb pusha (bad) data16 int lahf loope,pt push mov jo outsb loop mov scas cmp dec test stos and xlat jae gs pop cmp into ret ja pop test lds iret adc into add shll push cli pusha xchg xchg cmc jl int3 cmp pmulhw mov adc daa dec sarl dec mov xchg xor imul inc push popa scas adcl scas lods xchg popf jmp dec movsb or sbb (bad) add add add pop popa lret ds xchg mov test adc or aas xchg in mov push or clc test movsb xor push push sbb loope jno std mov popa ja (bad) arpl int pop ficomp aas (bad) notb push jne mov (bad) imul ja loopne popf lret aam adc popa insl push std rdtsc test jae fdivl jmp xchg pop or jge sarl add (bad) mov add (bad) dec jg mov daa test flds add add add add or sti and clc jecxz and mov or xchg mov arpl dec arpl sbb push cmp lods or lea ss std mov or push cmc inc and push jno cmp aad add xchg push push xor test daa adc inc sbb cwtl mov (bad) ss and sbb jne push leave cld cmp xor aaa int mov cmp dec es xchg adc call mov (bad) ja aaa and imul pop inc aam mov mov enter sti fdivl test sbb dec into popa jno cmpsl sbb (bad) push call mull pop xor xchg xlat je jbe imul fisub shll insb pop sarl (bad) pop push push mov je fucomi jp jle ficom sub jno jbe jecxz idivb loop out lock and jmp adcl add add add stos dec pusha pop sarl sbb out lds sub popa push xchg push cmp jmp add or sbb lahf mov xchg cmp mov lea lock push jne push aam pop pop mov in cmp rcrl imul xor outsb xor and enter xchg shlb popf push lea mov (bad) rcll or jecxz fstpl dec rol or (bad) repnz pop jl outsl imul mov add add cmp cli ja fwait aas and cmp adcl loop sub loope (bad) sub ret inc mov lahf jp stos outsl sub adc xchg sub cs stos movsb inc loopne jb mov adc lods out sar loop insb test repz and mov fsubl test adc push cmp xchg lea sub int jl cltd rcrl cltd or sub cmp mov pop pop pushf in jae mov push jmp add add add add or nop iret out xchg mov (bad) lods dec cwtl (bad) lock (bad) into add inc adc inc mov cmp outsb jae push sbb inc loop mov and mov icebp in xchg jl or or cli pop ljmp jp hlt push push pushf sub lar add shrb fs cmpsl mov inc jmp inc mov jbe pop out xor arpl push dec shrl cmp aaa roll add add add push mov pop aaa xor cld push in xchg cs int3 inc fndisi(8087 push mov and movsl rorl fsts mov push stos iret mov push push fdivs adc out test cmc (bad) cmc fistpll stc jl xor mov cmp (bad) hlt jno xor sub or inc cmp cmpsl xlat push (bad) cli add subb ss cmp sub js cmpsl adc mov xlat sarb xchg fwait cli mov push jmp pop jle in mov adc jo jne and dec repnz pop mov roll xor mov aas push ret jg sub push in mov jg push cmp dec (bad) mov push dec nop bswap mov or mov push cmp pop or stc mov or in (bad) mov inc push or push add sbb jns add pop mov xchg xlat dec stos push xor fisttpll test aam add add add mov mov outsb mov sbb ret push ja or jmp iret push loopne sub repz cmp std sbb (bad) jle cmp jge fs in div outsb pop inc (bad) ja xchg sub xor icebp inc adc je (bad) xor mov out jbe rcl jbe and sbb or and jns push (bad) mov xchg push or lret out jns push movsl pop xchg jle sbb stc add push xchg loope pop and in xchg inc das add xchg adc cli out lcall and mov jp dec pushf int js inc pusha cltd fnop les and mov xor aad adc sar cmp test mov mov (bad) mov inc or cmp out add setp add cwtl inc push pop add mov xchg orl mov push js push jae call dec jo popa out gs pop ja or outsl rcrb add add test and dec jne mov cwtl rorl sbb xor rcrl adc imul mov mov rclb ss sbb and sbb jbe dec sub jg xchg subl mov hlt into (bad) push push cli dec stos xchg cltd jmp outsl mov xchg test scas pop mov outsl jecxz enter ljmp cmc aam sub fadds xor or mov or pop dec nop cs test hlt test inc roll add add loope in in jno mov ficoml sbb and sbb inc pop cmovg mov jp cli insb sub xchg repz mov sbb insl add movsl adc pop inc shrd scas pop and in dec xchg push shlb mov jmp call stos cmp jge dec jmp adcl or cltd cmp push jno nop jl insb leave repz pop cmp adc push mov xor adc push mov arpl jns xor mov stc sub xchg add inc loope sahf push mov and xchg js fsubl push jae mov add loopne pop mov (bad) or push ljmp cmp or add and xchg inc rorl das lods cld mov aad inc and push jle mov outsb cli cmc int3 inc jnp (bad) sbb lock or add lea jp fimull push pop fs ret repz mov push pop pusha sbb outsb sbb loope das add add add add mov inc scas mov xlat pop in (bad) imul stos jb xor pop pushf push push xchg adc xchg sbb push stc mov in xlat push (bad) icebp lds jbe movsb jae adc fbstp enter push mov repz mov and mov or or dec dec cld jne pusha fsubs and push or adc cmp int imulb push in ret and sub lods and sbb (bad) jae fild sub add add add sub pusha imul outsl das fcoml imull cmp mov ror sub or das xchg jmp movsl ja idivb out and lcall add push in loop pushf scas mov ret (bad) hlt xor and in fwait sub sbb rcr push jmp push cmp fldenv push rolb ret xchg loope cmpsb or aam cli jecxz daa pop mov mov inc inc sbb fadds sbb and xchg mov jno dec mov cmp push mov add add add mov and push pusha xchg xor sub aad cmp jg xchg mov in mov aam loopne daa fst mov or pop scas ret pop add jne sbb lea movsb xchg (bad) movsl cmc aaa (bad) movsb and loop dec call (bad) int push dec inc xchg pop loopne cmpsb inc shll sbb sbb leave jbe sahf sti cwtl sub fwait cmc cmp repnz lock mov inc cmp xor (bad) (bad) ljmp add add mov stos xor mov lea push out xchg rcl xchg dec outsb rcl or push jbe call add pop and inc push jl es mov xor bound lds aad stos fmuls add adc mov mov sbb push xchg jb add push push push jl rolb out dec jb (bad) cmp mov mov cwtl insb xchg call test pop pop repz jno adc push dec arpl mov add add add add (bad) pop mov ljmp test or fdivl mov xchg mov jge dec cmp daa mov jns and imul mov out mov inc pop and gs sti dec dec aas lahf clc xchg cmp xchg lahf mov arpl es push mov (bad) mov in int3 sub pushf push mov sbb loopne xchg mov push push sub lret cmpsb jl fdivl std and push movntps loop add add add add mov lahf leave adc rcll xchg div stos adc dec inc mov cmp pop enter mov and (bad) jbe mov push testb dec xchg ljmp adc fwait sarl out out mov andl das mov (bad) mov sbb add xchg movsl mov cmc (bad) rol negl add (bad) cmp dec out push dec push outsb pop jl push cmp and and pop mov cmp inc enter test (bad) int3 add inc addr16 xchg (bad) fdivs lods cmp std sub (bad) mov scas cltd sbb fstpl push ret movsb mov or sahf mov cmp shrl mov xchg push in mov aas inc test inc cmpb push and int mov adc jmp shlb mov (bad) mov aad mov mov push push cmp xchg add pop or cmp xor pushf push les std xchg shlb insb popf mov (bad) dec xchg cmpsb and aas clc mov lods add add add (bad) pop fdivr pushf lea idivl jmp movsb pop pop lock or inc mov sub scas adc jno das xlat lods cwtl mov push ss lods mov xchg push dec cmc jb int3 push gs jns test jo lea mov adc ficoml divl dec lcall jle xlat sub and adc and pop mov (bad) js cmc in pop scas mov mov mov mov js in pop lock mov fisubl aad xor inc not jg inc pop andb outsb xor sbb push out push push lea and mov cmc leave out stos jge and lahf pop mov pop shr mov inc mov inc jl cld cmp fistpl jge and leave sub sbb mov fist hlt xor mov push adc pop push or ret popa (bad) lods mov dec bound bound nop out add mov mov cmp popa cmp mov int dec mov (bad) sub mov daa pop push cmp enter add add add add jnp mov adc addl stc repz sub or into fstpl mov sub or rcrb or inc xchg ror out fmull xchg popa or fstpl insb mov shrb sbb in dec sbb adc repz xlat push test cmp sbb pop inc push out pusha call test in (bad) cmp imul jmp (bad) cld int sub (bad) or fldcw clc out in jnp mov xor add and lods xchg or jno sbb dec fldl sbb push push negl aam pop xlat inc cmp mov pop sbb mov jle dec xor dec adc sarb mov call mov js pushf dec pop stos inc push sbb cld loope or xchg lods lret pop mov cmp add mov inc add je enter jle cmp test stos arpl mov mov or test mov add add add inc lcall and fbld sbb lods pusha rcrl xor jbe cli ret loopne sbb jg push insb cmp jg cmp lods fild daa pop cmp xlat mov push fisttpl pop push xchg sbb rclb in jne xchg (bad) xor rorl out popf mov sbb xchg out jl stos and ret adc and jns or mov mov jno sti mov add rcll xchg add add add xchg mov xchg (bad) jae jae mov jbe leave leave popf cmp mov xor loopne imul lcall mov mov dec push mov fnstenv push fadds push sahf mov adc inc and adc (bad) imul pop inc mov rol add les enter jae sub ficompl push jns (bad) popa adc pop pop lea fsubrl pop dec fdivp aaa inc and xchg std cmp lock pop imul rolb add add orl out jbe aam push and dec adc mov call jno push pop neg pop sbb mov mov popf xor pop cmp push and xchg or bound lds sbbl pop in jae xchg sarl sub std fistp jge out loopne fisttp jl nop mov xlat mov jno lret xchg xchg and inc jp xchg xor les out js pop out and push mov xor lods test dec mov add add add sarb es mov (bad) push insl mov push cmp out lods int3 ds aas adc mov mov pop iret sbb das lods jnp rcrb int popf clc fdivrl or add push gs dec inc inc iret and push mov loopne les sub mov mov lock mov xor imul and jnp sub mov jo,pn fldl (bad) aad (bad) push data16 pop sarl mov add add and adc xor lds dec notb iret pop cltd sahf test or (bad) mov sahf push sub lds pop std jno lret lret fldcw xchg loope dec pop add jmp inc cmpsl sbb jecxz enter stos cwtl push lahf inc mov mov or (bad) arpl inc xor pop flds leave and lea stc cld inc stos daa jnp sbb mov sub add cmp pop movsb es jmp pop xchg xchg add add add pop sbb insb clc or adc fs fs les movsl subl sub test aad hlt jle and push dec ret repz ljmp sbb aad adc fnstsw (bad) std mov sbb cmp mov mov ffree rclb aam jg jns pushf imul pop jns xchg dec daa or inc inc xchg stos pusha (bad) xor daa push (bad) js jo (bad) push out mov ret add add add shl js insl xchg xchg (bad) lret mov sbb pop ss test mov sbb inc out mov xorl mov mov inc addr16 (bad) int mov mov and mov jbe ja and and pusha shlb mov in test jp,pn fs jl and jmp cmp mov (bad) out mov cmp fxch mov outsl out pop sti xchg jmp aam inc jnp shll pop (bad) flds add add add fadds push inc in test (bad) les loope sub stc fldt push arpl sarb arpl pop mov dec adc mov jp sub das nop out push enter adc or enter lahf rorl outsl sub mov jbe ljmp cmp jp lods dec add (bad) xor mov jl and loope sbb sbb adc inc sahf sub cmpsb mov push xor (bad) pushf aaa js jns dec sar add dec (bad) push pop shrb ljmp insb fisubrl shrb cs mov das jne (bad) mov out sti lods sub pop addl inc stos dec jb or cltd push pop add jg xchg subb (bad) insl adcl mov sub jp and rolb mov repz xlat mov ja cwtl pop mov stos inc dec push fcmovbe cltd pop jge pop dec or pushf lea push add dec inc xor addb cmpsl mov add add xor xor mov add popf mov (bad) add mov lds jmp test (bad) fisttpl sub adc clc sbb sub and out jb mov dec out dec pop mov mov mov faddp or arpl pop shl out repnz jne cmp add and sub les xchg adc roll sub mov and notl addr16 fwait dec mov jl stos cs sub add add add scas insl addr16 xchg adc aas sub repnz nop in add push dec iret ss or dec test pop (bad) and fpatan outsl push icebp inc int3 mov test in push daa (bad) das sub mov push cmp dec fidivr fwait add and add xchg subl sbbl adc jae lods push in and scas sub sbb aaa ret bound fcompl scas addr16 cwtl jg in jge xchg jbe int3 sbb add add inc and mov dec hlt das inc inc scas (bad) movsl adc xchg js in push popf jecxz out call loopne fdivrs rolb into rcl mov mov std das dec sub aaa cltd inc xchg xor pop sub popf adcl fwait shll cld rcl out pop dec jae push jg ss sahf std sub sub (bad) lock sbb xor cltd mov daa (bad) or cs les inc arpl jb gs push inc xchg (bad) push or jbe fstp xchg bound add add add in repz stos and cmp loopne sub sub jae clc aas jl inc or sarb lea adc popf mov mov mov loope xchg jbe (bad) jge inc push and cs adc push push scas hlt test enter adc inc bound or add jne xchg push repnz jns fnstcw inc in add ja and pop into or aad inc mov inc inc inc xor add add pop add bound outsl inc movb aad shlb xor mov ljmp imul aad loope pusha js mov mov lods jnp sbb cmpsb shll mov add and fwait pop aad add xor lea js shl mov sub xchg mov sarb pop cwtl sub aam cmp jge lea aad mov lods sub adc loop sbb pop ret stos sarb add add add inc xchg inc test scas or ds shrl (bad) cwtl lcall mov popf jns data16 adc loop stc dec mov pop lea cmp imul rorb inc repnz push scas jl dec (bad) push iret es sbb pushf push mov push loopne xchg aaa andb cwtl stos popa pop xor outsl jbe inc mov mov dec (bad) ja sbb inc aad std or stos xchg mov cmpsl fisub dec mov cmpsl movl add add insb mov rolb mov popa stc jo adc adc sti mov fxch mov mov je xor push mov cmpsl sub jmp push jl imul cltd adcl ficompl or inc in and sub je jae cs int3 loope outsl cli sub pop call push xchg inc jmp repz ja je pop push rcll sub adc es jns idivl jmp mov add add cli aad sub push adc movsl xlat mov mov sbb inc insl cld adc (bad) pop mov mov mulb es in mov mov imul fstpl lods imul push cmp mov xchg call jmp and cmp jecxz add test std dec dec pop mov les push push xor pop dec test adc xchg adc imul in mov aam dec iret jns and lock add add add add sub or mov out pusha xchg clc sbb rclb int3 lahf hlt inc cmp shl xor cld mov and dec sub push or or mov addb pop jg sub mov outsl notb mov mov hlt xchg dec fcoml add cmp adc mov xor out jo mov icebp inc mov jae push sbb xor push push in fs popf les push xlat cltd lea sbb dec repz aaa mov cmp jp fdivs sti in cld add add cmpb jns jmp ja cmp fcoml jno (bad) decb jns add imul scas jp adc xchg clc add mov inc add jg adc and repz mov xor mov jbe mov insb (bad) lret popf or rorb xlat mov push mov jne push pop shl inc movsl fdivs fwait mov mov test lret sub mov push (bad) popa sub or aaa hlt lock dec mov add cwtl lock and arpl testl push add xchg mov mov leave adc out psadbw fistpll push jecxz insb sbb ds in cld pop lcall dec pusha inc mov sahf dec jge aas push fidivrl mov or xchg mov sub ret xchg cwtl inc dec or sahf test mov das dec mull mov xor lock addl insb jo subl mov add add add es outsl lcall inc pop sbb xchg out ret fistp (bad) xchg sub pushf (bad) iret push push dec test pop jns push fwait andl in add adc jns adc sbbb jo loopne sti outsb enter add push sarl ret pushf jbe std stc aad cli fnstsw mov mov andnps mov cltd add jnp cmpsb in or call pop push jne xchg add out (bad) les or add add add add sbb movsl jb lret inc inc pop mov mov imul add call js in out push nop pop ljmp adc cmp xchg jne fs pusha mov arpl sbb dec sbb mov inc inc data16 loop dec mov dec or mov push cmpsl xorb xchg popa aas mov xchg and sti pop jne mov insb (bad) pushf mov or dec dec push adc add dec inc sbb imul add add (bad) mov test fidiv faddl pop mov inc int3 insb rcrl sub imul mov les mov adc hlt ficompl inc loop loope xchg dec std sbb mov fidivrl lds movsl loope fimull or mov mov mov dec (bad) (bad) xchg mov sarb test aaa fidivrl mov lock (bad) jmp in cs cmpsl adc stos dec fcmovu pop es pop out fld1 dec push push xchg push je add add add add out mov xor fisubl jnp ss adc pop jmp dec shl jl mov loop pop popf fwait pop popf add fdivrs enter inc lret popa mov cmp jecxz popf inc push push (bad) icebp imul arpl ljmp mov es xor jno xlat add (bad) fwait push frstor add iret inc stos orl push mov dec mov add inc and fwait dec orl ficom inc sahf cwtl sub add and jae pop xor aam mov test ficompl pop out and dec cwtl cmp sbb ret es jne mov popf push adc ds xchg mov dec mov jbe arpl push mov sub in mov mov mov mov xor and outsl (bad) mov and outsb test cs adc xchg in sahf int3 jne dec (bad) push pop shrl cli pop add mov xor add add add iret js mov sbb lret (bad) or inc cmc lahf sti aad sti loope (bad) rolb push or cld outsb das imul rolb xor mov aas and sub ret push movsl sbb test fstpt pop in nop ret bound aas popa pop dec push push xor pusha gs jo sbb hlt rcrl push sub leave mov cmpsb stc cmp jecxz add jp inc jle or mov add add jne or sbb push leave mov rclb in xor pushf push jecxz sub repz mov in and or jp imul imul into inc in int3 popa arpl xchg sub jecxz,pn lahf sbb out lods pop pop xchg cmc (bad) repnz sub fcoml stc out cmp sbb (bad) pop jae mov jb addr16 sub mov loop xchg subl push sarl es sub xchg add imul repnz les push fimull in (bad) and push outsb jmp insl add add jl or mov mov push pop (bad) pushf mov idivb lds sbb aam push xchg adc cmp push mov sahf in jns pop pop movsb add stos and sbb jae add xchg mov lret cltd lock dec fldenv test cmp sub adc jecxz xchg cli mov mov enter add ret ficoml xlat pop ljmp imul jb hlt dec jns mov imul dec loope test mov nop push mov les jmp adc dec outsl jle lret out xchg xor arpl mov aam mov cmpsb inc jp (bad) movsb or or mov int movb mov int3 ja inc inc int dec push jl pop pop dec popf mov push inc out call lds lds es add add add std hlt jne dec insl adc stos mov fldt inc sbbl stos movsb lds pop cmp jl sahf jle aaa and inc test imul cmp xchg mov pop loope or push or mov jo adc pop cltd in xchg xor pop dec rolb jno jecxz push pop cmp push xchg fnsave xchg or out dec imul and sbb cmp inc sub enter fcmovb fscale mov add ljmp in cs cmovl dec pop outsl lcall inc xor data16 dec je outsl dec rcrl sahf fistp cmp inc (bad) stos movsb insb movlps dec push cmp mov cltd in test cmp testl sub outsb outsl jge out and lret in inc and stc xor int3 fldl fnstcw mov mov add push jns icebp stos imul ficoml cmpsl xor add aad icebp stos sbb pushf xchg adc lret insb cmp pop test js or push xchg inc mov jl jo outsb sbb xchg pop das loop mov movsl mov pop mov lea mov lahf js testb sbb cltd ds xchg (bad) aaa ds inc je ss (bad) pop sub push test xor jae pushf cmp mov pop int3 sbb lods mov jb mov push jae fldl js cmpsb ljmp xor mov enter jg add add add cmp lods mov adc int or xor test scas sbb xchg mov cli sbbl xor std lea push cmpsb xchg pop xor cmpsl adc hlt scas cli test and lea sahf mov mov mov dec (bad) mov les xchg sbb fdivl aam mov jmp sub outsb inc jp jo mov into dec jge mov popf addr16 test js loopne lds mov jp adc xor add add add dec psllw fwait subb mov jns jbe (bad) clc pop jnp mov cmpps sub lock pop pop mov pop mov nop lcall lods dec jno mov fimull mov int3 fimul dec (bad) mov fld pop push fist push out hlt repnz test mov push sbb lods ljmp pop and sbb xchg xchg sbb hlt aad inc repnz add imul out fstpt addr16 outsb add in xchg flds add add add ds xchg scas push addr16 fimul lahf mov xchg sub test add loopne test lock or xor mov inc test push jle leave mov ds or mov mov aad in mov (bad) aad outsb xchg xor hlt pop sub sahf adc mov push (bad) scas sti xchg dec inc xlat cltd sti and push (bad) scas sti mov mov jecxz aad inc mov sbb dec push and arpl (bad) jbe repnz add add add adc into (bad) sbb js out pop sub int3 dec jge mov cwtl or sbb push fdivrs push mov iret test lahf shlb mov push movsb (bad) ja call dec pop pop fnstenv add stc mov (bad) pushf mov push stc pop icebp repz mov xchg xchg clc mov mov mov repz faddl (bad) cmc movsb dec sub push pop add fcmovnb (bad) pop test jns enter xchg mov push inc adc xor inc cli jo mov adc mov jbe dec sbb push test out xchg insl out jae pop inc cmc hlt test lret pop sarl cmpsl insl and popa sub dec xor dec jb mov add and std (bad) rorl inc push (bad) iret mov inc inc andl cmp or jg inc test mov rcrb sti jmp mov xchg mov orl push jb test cltd sub add add add add fcoml imul faddl push std jb or dec and fmuls in out setae js mov or stc das enter dec xor xchg iret je mov js jns div and lret aaa cmp fisttpll jno and xor xchg scas xchg dec test test mov xchg pushf popf ljmp jle shr fcmovnb adc push pop lret sub dec js cmp (bad) adc rcll cwtl (bad) adc dec rep xor rcll or adc add jge fs inc iret mov sub inc fstpl scas scas adc push cmp sub mov push lock (bad) rorl stos jmp and das xor daa xor aaa popa or adc and pop dec rep imul xor popa icebp jge cli add inc (bad) ja adc push cmp lock fsubs cmp leave sub mov push fistp test or add add add mov jns and gs ljmp test sti mov ss xchg mov mov pop add xor push cmp fistl inc out aas fnstenv les pop in xchg pop push test dec out adc jl lods jae es push ficomp adc sub js lds fs mov in das xor add push push jge inc pushf lret xchg adc add lahf sbb repnz mov repz in daa jne sbb add add add jae inc enter sub (bad) mov aas jae test scas dec sub loopne rorl in adc rorl lods sbb andl add push pop mov ret mov lret mov xchg cli mov jp pop jno cmpb pop add sub sub sahf out push mov mov jmp pop jno daa pop int3 jg jle push mov sahf xor adc scas jne test add iret jo cmp xchg mov push lds add add add addr16 push or (bad) cmp pop jae inc fsub hlt dec sub sub mov mov cmp lock or push adc cmp sbb cmp sbb cmpsl lret bound (bad) mov push push (bad) sbb mov jmp mov divl test lcall mov xor out mov cmp int3 ljmp push jmp stos mov and cmpl push in add add lea lea xchg jo movsl fisubrl test pop lods inc and sub mov es pop fsubrs repnz int adc jge sub andb mov cmpb leave shrb es mov pop push mov dec mov bound and out or arpl dec mov jb and sub adc lahf lcall test enter mov push arpl and fs fistpll add add add dec inc mov sbb and pop cwtl repz mov imul cmp mov mov mov mov call cmpl dec sub mov pop lods push subl (bad) mov stos sub push sahf or shrl test push out loop and cmp ljmp mov xchg mov adc mov sbb sbb iret and add add add (bad) movsb fildll je inc insl push fsubrl jg movsb int cmp fistl pop cltd lcall mov xor (bad) inc xchg (bad) ljmp inc mov roll mov lahf cli add test addr16 sub int3 aaa loop and das push jmp stos leave mov xchg pop ret mov push mov (bad) repz pop mov shll push add xchg xchg (bad) mov imul rcrb mov popf stos aad pop xchg in xchg or push xor fimull mov pop cmp arpl mov sub mov mov cmp push in fwait or push sub mov fdivrs pop pop xchg (bad) mov subl imul fnstenv fmull icebp jnp lea jae ss mov nop adc xor ja out xchg inc add mov sub xchg mov pop mov fwait ss pop mov push leave mov mov add add add add shll push cmpl cli faddl (bad) dec lods stos cmpsb push jecxz mov add mov mov inc dec fucomp add (bad) or pushw clc jp iret faddl loope (bad) push mov sub scas inc ret adc mov mov inc fimul mov test fsubrs inc sbb fistpl cli inc lcall orl lods fucom jg jbe push pop cmp mov jle jg push adc mov mov sti mov add add add ja lds roll int3 inc pop dec xchg sub push mov inc (bad) dec mov sub jnp insl mov cmp sub cltd out jp dec mov jp cmp mov mov sar and and scas or xlat (bad) push xor call nopl shrl adcl push ljmp pop (bad) pop outsl sub cld arpl adc cltd sahf pusha test rcl les mov jmp push enter cs add add add add pop mov mov inc sti pop ret and xchg in or jp or or sub push ds cmp shl pop and je dec adc enter out das fistl mov push (bad) xor push push jl out out mov ret daa bound pop xchg je jne mov pusha inc fmull xor lock jge mov movsb gs sub lcall xchg mov (bad) idivb leave fnstcw adc pop dec push and jle mov add sbb lahf mov push test and xor xor stc jne sarb out cld cmp clc add es test cld sbbl push gs repnz popf test test adc and adc repnz int3 fcmovne push adc fdivrl mov mov test lds jo lea xor lea sti push shrl sbb scas and in jmp out and push and or add repz mov sbb add add add nop outsl mov test not cmpsb pop dec out vcvtps2dq cltd jg sahf jg cld scas pop fidiv and mov in dec jecxz push push mov (bad) inc (bad) jnp xchg sub or xchg jns push ret das faddl jae loopne pushf les pop or push xor (bad) hlt jmp lods sub shr push xor ljmp xor nop adc xor xor bsr mov out mov stos adc xchg clc in xchg dec xchg xorl add add add ficoml jb xorl and mov inc jb mov jmp in mov mov or js or dec insl cwtl das adc and andl xchg (bad) jo pop dec or pop int3 shl mov inc ja (bad) adc dec mov cwtl cmp jg test push add mov pushf lcall dec cwtl push jge add jl mov sub jge fnstsw and test in cmp test cwtl or fist imul adc frstor mov sub push out sbb push mov daa leave or cli or jno daa dec dec inc rcrl jp sbb lahf jmp roll mov inc dec add das pop xchg sbb add addr16 loopne lds add ja pop aad (bad) std js pop mov pop mov mov or mov pusha gs push jne xor les mov pushf mov fisubr xchg adc pop xchg js add add add add out jnp inc (bad) lds cs adc mov adc mov jb pop dec add not xchg in sub js clc repnz and popa inc mov sub aam roll (bad) cmc adc cmpsb ds lds (bad) mul test mov stos lods inc pop or lods jp stos pusha jl jl les sub cmp (bad) lock mov add out lcall xchg lret jle add add xchg jb mov add add add add cltd sub jmp push cs (bad) leave mov movsl movsl cmp (bad) xor push add arpl and jbe dec sahf jg in (bad) or int ljmp push std or cmp ds or push or enter pop cmp mov js rol cs mov ficomp xchg xlat stc clc push ds loope or movsl xchg arpl dec in cmp shll call pop sub fildl mov ljmp mov or add add add rolb cmc insb stos push mov stos add test mov inc mov in cmpsl fmuls cmp mov out jge inc test jbe addl mov sbb rcr jmp leave mov clc xchg xlat jno das gs jno cmp push jp loop mov hlt or pop push jne js testb push cld add mov ror in sti aam in and jae enter jb xchg adc mov and mov mov cli dec xor cmp xchg std jle inc push add add add add mov and aam push sub mov jo dec sub insl xchg xorl rorb inc decl pusha outsl inc mov xchg sub (bad) xchg std scas add sbb mov push ja jge push movsl adc lcall inc mov push cmp jnp jae outsl leave test (bad) aam (bad) pop pop inc es call jae mov daa jno cmpsl daa test out dec aas repz xchg popa sub (bad) cmpsl cmp push into (bad) pop sbb cli mov loopne loopne sbb adc xchg leave mov ds and pusha dec and xchg and mov subl test xchg orl lds lock dec cwtl or cltd aam or je cmpsl les adc fildl pop gs push jge dec mov dec pop cmp stc and jge test xor insl mov pop repz jmp lret add mov mov add inc into fmuls ljmp int3 imul add add add (bad) je xchg ja mov insb pop fldt leave or repnz adc leave jmp ret ret cmp into rol push clc pushf dec cmp aad fiaddl jmp mov inc mov arpl test lock mov bound mov ss rcr (bad) mov popf sbbl cmpsl mov aas shlb mov (bad) out adc cmp mov xchg jb stc adc or aaa movsl in in mov mov (bad) je pop stos jo test lret add fldl push cmpsl out mov mov mov movsl adc aad mov in push hlt or lcall xchg pop fstl and loop out mov sbb jno (bad) fcoms (bad) int3 fsubrs aam fcmovnu popf add jbe push notb inc rep in cmp mov dec add int3 mov (bad) push enter dec jmp add add add add mov sub push dec cmp data16 addr16 push jb movsl mov das dec lret adc test mov fisub push push outsl pop out inc addr16 repnz sbb sub dec fdivs scas xchg mov sbb imul push jp insl mov xchg xor aas jg rorl and cmc arpl dec stc cmp fsubr add dec test es sarl shrb push sahf mov xlat pop jnp jg dec push es loope arpl sbb and push js or inc lret sbb mov stos faddl xor fildll addr16 sti movb mov xchg ljmp lods or push or or out xchg cmp fwait inc sbb mov mov sbb sahf aas (bad) or mov cmc xchg mov (bad) or cmp cmp aas sti lahf (bad) ja lahf lds inc jb loop sub fstp cltd adc jle scas push push sbb mov pop pop sbb pop fdivrs add add add push jg fxch fistpll xor divl mov inc xor aas aam cmp add mov xchg jge pop mov dec mov lret pop jmp sbb fwait push xchg cltd std cwtl addr16 jle push jno push inc sbb pusha xlat and out lds (bad) mov cld push imul lcall jmp adc (bad) cmp out outsb mov ljmp xor std in sbb jl (bad) rorb mov fistpl adc in add add add pop shlb pop (bad) push dec fnstsw mov movsb loopne cmpsb sub mov aad push push ret lods subl fnstsw roll (bad) clc popf jmp mov or cmp jge jge and dec jae fwait push sbb ss test lret movntps sub arpl xor scas out add (bad) test lods xchg and (bad) and pop jle mov js sub (bad) loop aas (bad) mov inc jne outsl xchg loope and clc and or xor add add add add fild or mov pop shlb int inc pop lds (bad) mov inc pop pushfw xchg mulb push into rcrb jnp ja int inc sub mov push mov cmpsl pop jnp xor int mov push rcrl rorb mov int3 fwait daa pop mov xchg fadds mov or mov cmc les popf cltd daa and out mov leave call mov stos inc lea jb aam scas add cmp sub sets or jae mov adc mov inc cmpsb pop clc es popf pop xor aam jns cli dec sbb (bad) ss lcall cwtl ror out jnp in lods js mov dec out inc fisttp ret movb adc dec jne mov xchg xor mov pop pop xchg in push dec xchg insl or and mov fsubrl jae pop push loop icebp push and jnp,pt lret add add loope int3 push jae nop (bad) xor movsb or lock push sbb and inc sbb jns jb es lret xchg into movsl (bad) std out pop cld adc lods sub aam or mov nop ret nop mov xchg pop fiadd je push xor out or rorb lahf xor cmpl mov insb dec dec inc daa (bad) in sbb (bad) pusha enter cmp xlat xor test fsubrs mov rorl dec xchg aad mov mov add add add add std or ret and mov dec inc daa inc cs out fcoms inc adc xor jge in or (bad) and test mov pushw cmp cmpsb jb xor sub ret sub loopne lahf jp mov pusha test enter cmp das inc pop fwait push cmp lret in or and pop push and repz push ret sbb sbb sahf xchg push (bad) ja lock js cmp rcr jbe cmpsb push testb add add rorl cld inc out mov mov in int sbb sub int cwtl cmpsb jo shrl leave jno mov enter nop xchg mov sti sbbb jb (bad) jo scas dec popa icebp add adc lret rclb fdivl lret repnz jp inc int shrl cmp xchg jne mov ja or sbb push stc jmp mov loopne and and or jb push sahf dec sbb dec clc mov fisubrl enter mov add add add pop add jg inc lods add testb call pop mov xchg xchg sar and inc fisttpl clc pop jno mov mov nop repz pop lods inc aam sub pushf out das in movsl int3 stc push popa pop or lea hlt push (bad) or and mov adc jmp (bad) push mov xchg sbb inc pop jge iret fsubrs inc mov das loopne in int3 xchg and lahf into sbb cmc test push idivb add and xchg mov add add hlt pop xchg repz cmp ret nopl imul test lds pop outsb call adc (bad) jb or call into int3 mul repnz inc sar dec repz dec jecxz pop ss mov push jae cmc mov inc in mov push cmpsl xor fs out fnstcw sub add jp jl lahf in stc ljmp inc pop loopne pop jge jle xlat nop int3 add jae ret aad cmp jno loopne xor add add imul dec cmc out loope sbb xor xor (bad) decb mov push mov add fisubl dec mull sbbb jg cmp push cmpb (bad) (bad) jecxz cld dec lds pop aas sbb push xchg movl sbb shrl or (bad) mov fwait jmp and cmp mov xor jg push add pop mov mov nop sbb shrb mov (bad) out pop (bad) add cmovns xchg jns add add xchg dec mov rcrl pop cmpsl mov or inc sub push inc xlat leave cmp ljmp cwtl pop adc fsub lods adc in mov aas and mov inc lret mov cmp not mov inc add insb arpl in daa pop push cltd ret int3 sti mov iret outsb lds mov mov addl fldt adc pop sbb and or inc cmpl stc (bad) mov lahf mov dec push (bad) adc add add roll dec clc pop popf (bad) jne (bad) dec bound sti sbb or push rcl jno mov inc mov mov das mov dec hlt cmp outsl xchg pop clc int roll jge xor dec push jge (bad) xchg rcr mov xor sti cmp jbe adc cli subb ret (bad) jge (bad) mov scas stos pusha sarb pop jb (bad) mov into clc loope sub adc je mov stos mov mov xchg add (bad) pop sahf fstpl sbb mov jp mov je add push fcomip xchg imul mov dec test (bad) mov out aaa inc scas shr dec test imul out push out enter incl push lret test test sahf push call lea test or ret out sub and pop wrmsr mov mov (bad) pop rcrl xchg pushf jb xlat jb mov adc add add add add (bad) dec xchg or sbb fistpll inc jno stos push cwtl rcr in pushf mov jne push mov inc xchg aam out jmp pop sub add mov pop mov fisttpl and sbb xchg (bad) xchg int3 push adc mov pop pop mov dec mov add movsl popf lock es cltd test cmp jbe cmp push inc jnp add mov add subl inc loopne sub pop js fsubr mov pop fdivs add add add stc repnz or xchg stc inc int mov mov xorl mov and mov and cmpsl xlat loop adc inc xchg add xor push es clc xchg scas pop sub das add sbb jp shrl (bad) adc loop ljmp mov cmpsl xor fcoms and mov lret lds rclb xor popf (bad) inc js out jo fcmovnbe (bad) mov fstpl xchg mov add add add add insl pop mov pop jge lock mov adc mov pop mov sarb add cmpsl aad jmp movsb int3 loop mov (bad) cwtl aad mov inc rcll fistp sub gs in add out cmp cmpsb dec fs add je mov dec loop push and inc add bound in addr16 stos roll xchg sahf insb mov addl dec dec in add sub loope push dec cmpsb fwait dec popl add add mov mov inc add jnp xor ret mov push mov cmp scas cmpb sti fbld repnz insb shll add lahf loope pop push cmpsl stos push jns pop cltd ljmp lret ja xchg jae jbe scas pop pop push lock out shrl stos or enter mov cmp in (bad) and inc jg fwait and jp,pt and cs cmp in push mov lcall inc xchg cmc push xor add add add add cs adc cltd push aam and mov lock pop cmpsl cmpsl ds adc ljmp mov cwtd arpl pop pop add outsb les mov outsl out mov pop pop clc pop mov pop in aad shlb shrl dec (bad) ret lret repnz mov jae adc jno inc sub jb push inc cmpsl adc mov movsb dec leave out jns sbb in orb loop outsl mov movsb (bad) fcoms stc adc gs push add sub aaa pop or test sbb enter sub gs mov clc scas pop mov mov jnp xchg stc jbe in adc pop pop pop pop push mov (bad) sub test cmp mov adc rcrb addb cmp (bad) (bad) in scas mov test and movsl jmp (bad) mov cld fwait imul stos rdpmc bound pop cmp pusha xchg mov inc (bad) loop mov mov cmp add add push cmpsb jp add inc cmp mov mov imul mov jge xchg scas out icebp cltd mov push push xor cmp idivb mov or roll int3 inc add jl or lds in jno and dec aas cli icebp stos int cmp ficomp ja mov cli sbb loop inc push mov or int (bad) aad data16 loopne es arpl and and cmpsl stos ss imul xchg jo jne add add add arpl in sub data16 push int3 in cmpsb bound jle cmp int and sbb push into add jnp lock mov les (bad) and add decb scas sahf pop (bad) mov push stos stc push (bad) in lods popl ljmp inc mov add repnz fcoms ljmp push stos inc sbb addr16 sub xlat mov cmp fldt dec mov icebp and ds fsubrl jle xlat mov add add fimul xorl and sti pop mov xchg mov aam mov mov lcall jp cld icebp push in movsb xchg addr16 fadds arpl xchg mov jb push jge icebp mov xor les mov cmp daa xchg pop js dec pop mov mov mov push dec nop sbb arpl sbb mov repnz cmp cmc iret gs insl lcall mov dec (bad) cmp sub rorb (bad) aad jns lea jle popf cltd inc sbb add add add adc add sar test repz mov jle popf test push dec or mov sub cmp or sub in ljmp subl pusha mov pop insb inc pop call push mov fistpll loope inc and inc mov xchg mov and sbb and xchg and cmp xchg push nop xchg fiaddl mov sbb outsb push xchg xchg out inc xchg addb mov addr16 add lds sub movsb and icebp das or sahf in addr16 mov sub mov icebp xlat sub and adc int popf or ja mov add jp adc mov mov or xchg aas arpl lock sub pop test mov inc pop jno fwait pushf adc jl inc mov lods push outsl cmpsb fldenv xchg es xchg push sub or xor repnz xchg add add add imul (bad) test aaa jae xchg or xor cmp ds inc ja aaa add adc sub shrb repnz lock sbb jle loope pop jl push mov int dec push mov daa sti add aas movl xchg loopne les mov fadd loopne dec mov stc stos scas and add fs cmp ret pop jmp adc add cwtl in ret jnp stos in repnz jl iret aas or add add add pop xchg movsb ja lods fimull call bound inc insb and pop rcrb xchg inc pop xchg (bad) mov mov jge pop mov sti xor rorl push mov or loop sbb outsl daa jmp sub fs push aam dec jo and or lret sub pop xor dec pop insl dec sub int leave fwait pop or pushf xor (bad) lret (bad) push pop and addr16 jbe ljmp sbb test enter fwait (bad) leave icebp add add add sub test lret subl sub subps sti jnp movsb adc fsubl ret in in mov pop sahf call xorl xor sahf inc fistp jge cmpsb adc sbb gs xor jmp pop push ret jg sbbl das xchg xor xchg dec loope,pt fbstp jae cmc imul testb lcall stos shll sub inc pushf lea xchg inc out and add add add mov push jno mov jmp lret mov test sahf int3 inc aam stc jb out sub inc movsl cmpl inc inc or push mov popa dec inc jb (bad) xor fisub fbstp sti mov pushf dec dec fstpt xchg inc iret lret push cli fiaddl sub jae mov sbb insb sti push fwait mov mov sahf data16 or sahf pop imul test xor push (bad) jge xor js push adc sbb mov add add add add xor data16 adc cmpsb dec sbbl or iret lcall imul jle outsb mov outsb and or sbb pop roll mov jno (bad) cmpsb int mov xchg mov pop insl movsb lock xor push popl fisttp test xchg add pusha out cmp push (bad) mov pop mov aaa addb out maskmovq notl jg repnz jmp xchg adc movsl cltd sbb sar mov add add add into pop leave dec iret cmp pop sbb hlt sub pminsw je icebp push cmp dec xchg sbb mov jle lea adc add cmp stos jle loopne (bad) out rorl pop mov pushw aam or mov stos int3 (bad) pushf xorb js out mov mov inc or dec xor mov mov mov out pop dec ljmp loopne in jp jl imul idiv mov push dec shll fiaddl add add pop lea sbb xlat push jno jno jne jo add push dec mov mov pop ljmp mov xchg repz sbb lret jge cmp repz sbb addr16 jecxz sub adc call rcl into pop imul dec dec (bad) sub push roll mov cmpsb mov mov ljmp pushf sub mov lea (bad) sub pushl fildl pushf sahf inc push push popa xchg mov mov outsb xchg insl ds or and xor jl out mov cld jg scas and sub jg sub loope out pop sbb add sub push and jmp movsl xor insb mov pop mov push cs xchg xchg pop insb fs inc cmp mov int3 jnp push adc push pop (bad) cld and out stos push movsb or aam fisttpl sbb xchg in xorl in icebp cmp sbb test xchg inc insb pop push mov lea lds pop add push jno lahf push in pop jbe add dec addr16 adc mov mov jns pop fild dec dec pop inc or lahf jge push test iret jnp xor das cwtl add inc xor xchg dec xchg sbb xor ja xor subl out mov out and mov mov mov fsubl movsl sbb add into pop inc lods mov mov mov push outsb inc cli or jnp dec push aas rcll shrl sub addr16 stos add add add push (bad) pop or paddw add push in movsl push pop cmc mov pop jmp add nop cmp enter mov and clc cli xchg jcxz mov mov insb or jmp inc sub push mov mov or pop xchg pushf adc and fwait pop cmp hlt aas (bad) jnp (bad) clc mov sub push (bad) imul aas js adc xor mov shlb dec lock inc mov adc sub xchg aam inc inc pusha dec push add add add call inc dec call pusha jge lds fsubr xchg outsl push cwtl push js sub in mov shll xor cmpsb in out jmp clc stos mov add ret aaa (bad) lret pusha cli pop lcall scas out hlt or lods cmp push daa mov les or push xchg mov lret (bad) fmuls jne cmp cmp dec jb aaa xor and mov ret sbbl push dec cmp add add add test pop pusha stos sub sahf mov sahf (bad) cmp add (bad) repz jb std cli into or or lods jg mov rcll jae add and mov nop mov inc clc int int add push push sub in inc addr16 imul mov ljmp mov mov or mov movsl or sbb movsl xlat test cmpsb mov les pop fstpt cmp pop rorb pop lret mov xchg mov or (bad) cltd cmpsb bound mov fwait hlt outsl push mov sub jnp add lods jp adc sub add bound (bad) sub dec jge pop add pop insb push cmpsb sub pop out nop mov add dec cmpsl out add in divb es roll (bad) out addr16 cmpsl (bad) movb and xchg mov push sbb lret imul insb outsb aad add add add add divb lods int3 dec into xchg xchg mov fildl mov movsb mov orb repnz outsl cmc or push push inc dec sbb adc in jmp nop sub inc test jl xchg jg mov xchg inc (bad) mov cld iret fwait stos mov add js or mov jle les (bad) jmp dec fwait cld in adc out cmp mov loop inc adc lcall mov shlb out iret pop push lock (bad) int push xlat in test xorl negb and stos jb or int fdivrl outsb fisub pushf cmp pop scas repnz jg idivb mov xor cmp cmp sahf mov xchg pop cmpsb pop cmpsb arpl mov inc push and and xor mov out ficom pop aam lods int3 sbb xor out fistpl cmp out loop lods or mov (bad) cld (bad) cld stos inc loopne jno mov mov dec mov cli xchg mov xor mov mov (bad) pop ljmp xchg adc enter and cmp aam dec adc insl fdivl mov jo out gs jo (bad) enter loopne add hlt imul pop js adc aam push gs pushf pop enter xor push lods fwait cmp in std fildl inc mov sbb cmp and dec adc mov xor sub cld adc jle lods popa ret pop out add add sbb sub inc fs jmp mov (bad) repnz (bad) cmp imul push lea dec jl mov stos xchg pop pop movl dec push dec clc call dec dec mov mov out mov paddusb fildll (bad) call lods jbe nop cwtl jg cmp pop pushf mov outsl adc mov jmp out dec cltd xchg rcrl dec mov push sbbb jo js roll test int3 and setns add add add jno nop hlt jp mov loopne fst dec jo fwait into and jae push pop shrb pop sti fcomps push and loope sub clc add cli pop mov add pop pop pop xor fcomi jp jg mov mov mov mov xor fnstsw push jne mov jnp sub xchg inc rcrb push xchg and inc add sbb add mov mov add or iret insb xchg mov xor rcl clc push add add add mov nop rol mov sbb test cmp mov (bad) push (bad) repz jne cmc inc jno xor sahf jp arpl pop inc jecxz insb (bad) movsb paddusb mov push popa mov mov mov lcall ljmp jo bnd into sti xor mov testl push xchg jae push xchg notl sub jl push cli ds (bad) push pop sub pop cld jbe popa pop xor int dec fldcw cmpl pop add fucomip std xchg jl sub mov add inc xchg in and movsb cmp mov xchg les imul out dec stos xchg bsf rdtsc pop mov stc std stos aaa popf sub adc pop fadd cs into int3 data16 push lds std aam xor mov pop scas insb push incb cmp mov movsb loope pop aaa fdivl les divl lret adc ficoml pop xor inc adc jecxz push loopne jae sbb es mov add add jno sub sbb cwtl in xchg bound cld mov rorl mov repz repnz jnp subl and or scas jo or push scas pop xor sub push das fs std fcompl cmc enter ret xchg fwait imul mov sub cmp push lods cmpsl mov xchg push fldt dec jno icebp clc (bad) adc jnp add (bad) adc into jmp sub add mov (bad) in mov xchg hlt jmp add add add sbb xchg jl fimul push mov push out xor mov les mov cld xor xorl data16 data16 imul dec loope outsl jb int3 push fs das loop or fisubr mov mov pop stos iret jae fnstenv cmp sub xchg sub int3 in les mov sbb xchg pop mov bound rolb insl adc or push xchg inc das pop add rolb add add add add data16 add enter clc es and mov inc cs sbb out es adc push mov jl (bad) lcall in je pop test mov push insl rclb scas xor insl pop clc push fcompl cmp mov lds fiadd adc dec xchg cmc (bad) je lods adc and lahf fwait jns lock push (bad) ja mov pop stc aad outsb nop ret or je testb cltd roll and pop jge mov out mov hlt and push into call add add add clc rorb add jb (bad) fadds cli or inc xor mov xchg cmp pop mov jle out and mov aad rclb dec in (bad) sub sahf add and jl popf (bad) pop mov mov cmpsb sahf and loop add jmp call aad movb in sti ds jg cmp bound rolb mov mov pushf test loopne pop sar mov movb push pop add xlat int3 xor jo xor mov push adc daa push cmpsb ss xchg call jno lret test xchg shrl sub je hlt or in rcl xchg mov shl nop ficomp mov int imul add rolb rorl inc xor mov mov sub adc fwait xchg add out mov pusha and or daa jno mov inc clc push data16 setae int call sahf mov add add add pop push xchg (bad) in daa push dec push lods sbb xor jne aas jecxz xchg cmpsl xchg sbb into cmpsl mov jne adc rcll sti and push daa addr16 push add and sub cmp movsl icebp mov or cltd (bad) mov movsb and add pop jle mov dec mov pusha sub pop jbe insb jae dec dec push inc xchg imul xchg in sbb jmp jno xchg icebp pushf adc fiadd add add add add mov repnz test idivl mov cld inc int test mov pop div mov scas xchg and cmpsl insl cltd pop cli fisttpl and and stos mov mov fs movsb xchg out cltd add adc dec mov add xchg out jno (bad) xor pop (bad) push das or pushf fneni(8087 shrl stos mov cmp adc pop cmp add in sub lret cld pushf ret add add add jl loop (bad) ljmp (bad) cmpsb fstps in js aad push push sub push lock (bad) out sbb push repz orl enter mov mov mov (bad) hlt cmpsb (bad) jge das pop cmpl hlt add pop pop scas inc mov divb (bad) sub add (bad) dec or aas pushf push lret or cmp popf out (bad) mov call pop push imul test and pop fcmovnb (bad) gs xchg insl mov cltd mov jnp push xor xchg in xchg mov lret dec pop das sarl rorb das xchg lock push (bad) (bad) or or pop sbb fucomip xchg pop cmp xchg xor fsubr and inc daa mov dec les dec bound arpl sub xor dec scas inc fcomps loope inc inc mov and pop push mov loope add dec cmp repnz fs push mov stos js sqrtps movsb rol sub xor test sub mov mull sbb add add add call (bad) pop xlat fucomp add lods jmp dec sbb popf inc push xchg in lea negl aas inc fistl push subl pop pop sar mov (bad) faddl mov inc iret mov repnz mov cld fldenv inc out sti jns xorl inc fs popf movb fdivs aam rcrb pop adc scas pushf dec mov xchg mov ficom pop leave mov std xchg push out int3 stos loope cltd mov add add lret clc ficom inc cwtl pop outsb cli je adc ret dec jbe jnp sub lds jle cmpsl mov lods adc jno push leave wbinvd inc mov or adc push aas nop cltd das movsb fstps mov or into daa mov es sub insb ret inc mov outsl or (bad) mov rclb fisubrl adc fadd ficompl sbb adc sarb andb (bad) mov (bad) cmc add out out add aam inc jae popl cli hlt pop pop sub or jmp cld pop fdivrl push fwait mov or gs (bad) mov inc rcrl cwtl loop mov out or pop fstpt add fbld (bad) fbstp (bad) adc mov sbb pop dec xchg in jb xchg icebp inc jl test jae adc stos mov push jecxz and adcl (bad) xor pop xchg scas jne cmp push add test and fisubl add add add add xchg ret ret sbb mov mov dec lea arpl cltd cmp dec pop (bad) sub add mov aaa jl mov in xor jmp enter out pop push (bad) push lds loope fsub in js and sbb push sbb mov lods int test sbb mov pusha fadd or push add insb fwait dec jmp push sub or mov jo les xor movsb scas ret pop roll add add add add rolb mov insb dec (bad) lock xchg idiv lods pop test stos fs rcll xchg lods out imul or nop jmp loopne shlb out invd cltd lods jge cmp rcr inc fldl2t daa iret push push pushf mov imul (bad) out sub mov sub stc add cwtl push call fsubs jmp sahf xchg clc test addr16 aad xchg (bad) dec fidivl into jmp add xor in adc sub mov (bad) xor cs add add add add mov add aad fiadd iret sub inc in in mov rolb roll adc sbb xor sub pushf xor push inc pop mov xchg jecxz clc std xchg dec xchg cmp push xchg in test cltd adc dec pop cmc adc enter cmp (bad) repnz in std in inc aaa inc cmp mov clc mov dec out lcall imulb xchg pushf cmpsb jns lods stos cmp fiadd pop add cs movsl push mov jp dec add dec xchg outsl mov add add add jne popf or lret xchg push into jbe mov (bad) mov jg mov adc jg xor cld ss leave test push or ss movsb push js xchg add dec adcl insl xchg (bad) test fnsave mov (bad) xchg mov and cmp jno cld xchg xchg xchg mov mov adc mov dec nop jno daa push js repz xlat insb xor push add cmp mov mov shr cmp fidivl out mov ja jmp test mov sbb ss movsl adc push sub xor adc pop xchg dec (bad) fs popa mov sbb fwait arpl mov push sbb mov xchg fwait mov test sbb insb outsb mov pop fwait xor pusha xchg sbb cmp movb sti in and xor xor cmp idivl inc sbb cwtl loop jmp outsb cmp out xchg mov loopne andl ljmp add data16 stc mov cmpsl add clc xchg sti int mov (bad) add adc dec pop adc pop in sub adc jecxz ja sar je outsw fnstenv hlt mov data16 mov scas sbb addb mov icebp std mov xchg xlat nop leave xchg sarl push das je (bad) push aam imul cmc lahf test xchg or pop add xlat dec push xlat iret push add aad jg adc mov scas daa sti inc (bad) cltd fwait jp mov cmp or cmp add add add lea mov lods jp inc pushf dec fwait dec lret jns out jno fcmovnb (bad) ds lods jo inc leave (bad) inc repz sbb push outsb lds mov mov pop in mov xchg roll bound jo mov pop int3 jb,pn add or dec je jmp xor xlat imul sbb push push cmc mov lock lretw sbb add (bad) out mov push nop cmc pop mov arpl add add add add and cwtl lds mov into xor lret mov cmp xchg jle dec sbb cli lock push loop add mov mov int3 cmc cmp fildl push or loope jne mov js,pn test cli xor cmp lods sbb sub pop int test cltd push sbb cld stos les inc sub fcomps mov push (bad) pop mov je adc clc pop jbe xchg fnsave cmp jnp mov fmuls add add add popa (bad) fsubr push fidiv cwtl sbb call xchg test insb sarl std jae sbb ds das cmc (bad) in jp das ficomp xor adc call add rcll sub arpl jl out test mov and into mov or insb aas popf pop or jge add mov jbe cmp xchg jle sar sbb and xlat pop xchg mov ja iret ret jl (bad) push jmp add mov lea mov jl lcall mov in pop adc notb lea cmp jne fs xchg adcl loopne mov cwtl sbb mov aas adc test cli shl in test dec pop adc ljmp fwait dec inc mov mov ss cmp xchg mov push lods or xchg cmp sbb aaa xor mov dec fnstcw add add add sbb mov inc dec xlat xchg loopne adc fstpt shll lret data16 or or loopne or mov push testl cmpsb cmp pop cli xchg bound push dec push addr16 mov push pop sahf jecxz push sub xchg shlb pushf in ja insb int3 (bad) ss jle push pop dec je popf insb inc xchg mov enter ljmp xchg mov pop pop add adc arpl loope xchg mov or insl aaa clc add pop xchg imul lea jle sbbb lods jnp sub add or lods xlat jnp dec js and xchg xchg (bad) movsb ds adc pusha jnp pop loope adc jl test jae call adc jb add jbe fsub inc add add sbb fmuls mov jp sti jle jge inc jae add je adc pop test dec and inc lods lds aaa cmpsl ret cmp (bad) repz rcrb add addr16 xchg mov jno gs sbb and (bad) xor mov mov loopne aaa dec stos rol mov in mov fild inc pushl mov xchg adc jbe pop dec frstor fnstenv pop (bad) mov mov mov movsb aas insb clc out js or fisub pop xlat cwtl mov mov gs cld mov enter and in jb scas loopne out dec jl sub fistpll inc push inc mov add pop dec add add add outsb stos sub rol ljmp mov adc mov pop arpl sub jns imull or fistl pop xchg je xor repz ret aaa test (bad) cmc mov push adc (bad) into test and pop in add dec and and fmull in pop fwait (bad) icebp fisubr sbb adc mov cs push xor push mov add xchg jo sti dec ret jl (bad) sbb adc pop mov mov scas mov dec repz add add push and pop hlt sbb mov mov rcrl jecxz pop cmc mov mov mov cmp pop test and or or jle bound mov jo inc add sbb inc cwtl sbb jmp lcall mov lods ss cmp ret mov das jbe loope jo (bad) xchg enter out xchg sub jge xor and or jge mov sti and pushf (bad) test cmp or add add add add pop out sti cli cmpsb cmp movsl (bad) mov pop cmpb into push lods iret inc sub mov hlt outsl cmp psubb ja (bad) mov or push ret fmuls and dec mov (bad) jp pushf jl xchg mov lret fnstsw into cli mov mov pop jns push popa add icebp test or sarb sbb jae push push test stos nop cmp test dec add add add je sbb pop insb aaa ret vpunpcklbw insl imul ret adc xchg mov mov pop or sub and cltd xor push imul cmp push sub adc and mov fisttpll iret cmpsl ret mov or jno,pt xor mov cli inc mov jo push (bad) dec jo outsb sub push cmp imull mov out fcoml ficomp mov add add add pushf jmp outsl and jecxz dec mov mov jo push and movsl inc push push cmc lcall mov push lcall sbb mov clc push repz data16 inc adc (bad) jo jg push sbb inc out cli jmp mov outsl out stos cld iret pop xor jl int nop popf cli cmp sahf fcoml aas push jns add cs lret jns insl dec adc fdivl push out or mov imul stos insl cmpsb add fisubrl and mov add add add (bad) mov xchg daa (bad) or push inc lods adc push sbb pushf jecxz lods dec jb and ret adc mov cld xchg adc xchg mov push (bad) xor test ds jae or mov out xchg xchg in cmp cltd push mov mov iret sub mov loope jns and xor sbb push inc bswap ss fiadd cld dec cmp or cli ja pop push inc jmp dec addl add add add std es stos or aaa loopne sbb out fbstp cmp pop jae repnz adc movl and xor jnp sti xor push xchg or test cmp cmc test dec jge xchg mov push outsb fmuls mov (bad) jo push ja mov mov ja aaa dec push mov push addr16 scas leave sbb test lahf dec icebp mov mov sarl ss int pop (bad) ja dec mov stc mov call push jmp add add add pop adc andl dec dec inc cmpsb inc inc sub xchg inc and jb test xlat or test arpl std setge mov je ret mov adc mov sti rorl jns mov imul (bad) clc arpl popl xchg aam in or insb (bad) jge sbbl bound push neg ja push and test mov adc mov les pop add jbe push inc js (bad) mov or sub add add lds je loopne lock insb dec aam mov jp add sti incl cli inc adcl ret in sbbl cwtl repz out ja xor jmp mov adc jno in scas frstor test das out mov inc divb clc push lods or (bad) lock mov and mov inc push jg mov mov popa lods call cltd lock sub insb pop loop out sbb loopne into aas gs push pop mov sub js dec mov mov push ja pop hlt test ds (bad) xchg aaa jne xor pusha mov sti pop ret imul lds add push mov jl adc mov movsb rclb push adc imul repz mov pop cmpsb outsb mov or lret test stos je inc lret jnp bound cmp jno jb aad dec lahf enter mov daa mov rcrb add add add add data16 mov jmp (bad) push arpl aad pushl mov adc int xchg mov sbb push stc loop lcall inc jl fs mov mov outsl mov pusha call push popa mov les dec jge mov and shl and mov mov dec stc inc cmc jbe es out je movsb outsb pushf lret adc popa out mov (bad) xchg xor jae and adc pop inc jg inc mov pushl add add add add xchg push lods xchg pop loope outsl jae gs shrl imul popa fimul in adc xor lods outsl xor xor mov push jg imul mov fmull sub int3 jge inc lahf das xor insb and jge in mov sub pop pop sbb nop and xchg aas dec aam lret xchg sub add nop sub jb fs push int pop decl (bad) mov jae js shlb mov lret pop sbb fnop in add shll leave jmp pop cmp adc test cwtl daa bound iret jb notl test mov les lret int dec mov in out xor adc push xchg icebp or clc lahf shrl dec jle cmp sub sarl iret aad ds or imul scas add xor and rolb and aaa out xchg call add sub sbb pop fisttp test or pop mov add cmp jno push (bad) cmp rcl imul sbb ljmp nop mov repnz loopne stos daa popa cld in fsubs dec jl sbb nop or add xor adc rclb push pand (bad) dec sbb into xchg outsl cmp shrl and xor insl lea aad dec xchg data16 sub mov ja push push out add add add cmp inc push pusha cmp rol adc jb scas clc mov mov fimul mov pop push fstpl outsb mov sbbl sub inc sti dec dec call or mov push incl pop fcomps sub fmuls dec pusha push stos dec or (bad) es loopne mov enter pop adc cmp push rol loopne (bad) ds test cmp das (bad) cmp lock stos into std xchg add push add add sub jns jp xchg jmp pop cmp jmp rcll pop or fcomps push ret adc pop add aam out xlat pop aaa push adc in sub mov push lds jmp inc jmp mulb or sbb adc adc into and sbb sbb push cmpsb sub cmp xor ret lea add pusha insb mov push cmp pop dec js jl adcb jae icebp (bad) (bad) loop cmp add add add popf test lahf sarb inc mov lea loopne xor jge dec push sub sti cmp sbb hlt fdivrs cmpl and fstl outsl pop ja dec push or cmpl fisub push cs sbb lock dec jl out (bad) xchg (bad) inc fs add xlat hlt xor xchg stc adc repnz add inc popl xchg mov inc jp jnp ret dec imull mov aam pop push mov mov cli (bad) aam icebp stos xchg mov repnz pusha lock cmp inc dec imul xchg adc das cmc inc xchg ret hlt out cmp (bad) xor add jmp aam cmp mov cltd stos cwtl inc jbe jge jp pop insb ret jmp fldcw sub insb cmp xor inc mov jo jb scas nop ret out cmp ja scas addl pop sub repnz mov dec mov stos mov xchg mov je and add add add add leave fldcw stos je pop push dec jg mov sbb into rorb lcall pop mov mov jle sub aam lcall testl outsl mov lods xchg testb mov daa jl enter loop adc mov mov dec jbe adc (bad) addr16 fdiv mov leave nop pmaxub xlat pop shrb (bad) call addr16 arpl cmp dec movsb mov call pop or dec jnp xchg add add add and cmpb inc fwait stos cmp (bad) or es xchg xchg mov adc (bad) mov stos pop fs jge dec mov xor lret (bad) mov push cmp sub idivl sub adc shrl popf inc pop push mov sub subl mov xchg dec movsb inc das mov inc addr16 mov inc dec mov dec fisubr and or or jl sbb xchg add stos mov xlat add add add stos rolb and xor dec xchg and mov push sbb sahf push cli fimull mov or push mov xor sti andl mov mov cmc pushf dec mov fwait sahf stos loop stos and xor mov (bad) icebp inc xor sbb cmpsb adc orl je cmpl fsub mov lods jl in push movsb neg sbb and lods xchg lods jnp jge dec xlat outsl test pop or xor jmp shll add add add mov inc (bad) sbb jns test iret sub jmp cs cmp push das or mov mov jbe je or lahf ret jnp inc cmp cmc fcmovnu mov popa mov (bad) push int inc out xchg fstpl and add test inc xchg jns sub xchg sbb mov in mov outsl je ds ja xor sub mov xor pop sbb ret daa in stos (bad) add jl dec or fidivrl leave out mov add add add add movsb orl mov xchg dec repz push or and mov fstl ficomp insl jns and out and test sbb int3 in test cld xor sub pop adc test pop cmpsl push popa xlat popa call or dec cmp mov test dec xor xor xchg in cmp gs cs dec sarb mov pushf sub stc or pushf mov jl orl xchg hlt push and add add add daa iret jbe cmp xor sub xor pop cs adc add insb fdivrl push lods je jmp orl lret inc cld jp jnp and xchg pushf cmp mov fnsave mov push call mov or lcall add and test adc cmp adc xchg sbb add fdivl jle into shr pop lahf mov push add rcll adc shl add add and inc nop notl cmc (bad) (bad) push inc jb outsb or jo push mov (bad) sub pop cltd mov adc arpl sbb movsl icebp cmpsl sbb lret rcrl xor ja jmp out xchg idiv ret je fdivrl cmp and push jmp or mov cmc inc push mov in sbb icebp adc leave dec push adc out jno pop xor mov in mov sbb out aas (bad) fcmovbe jp (bad) dec inc add add add outsw or dec rcll sbb data16 rorl pop push dec icebp pushf jle adc push inc pop mov hlt (bad) jle pop in sub cmp adc mov orl push push add jae xlat push jmp jbe fcmovbe xchg lahf mov popa dec xor outsl or mov or cmpsl insb sub rclb cmp dec data16 or mov mov pop ljmp out in xchg faddl fnsave dec test mov add dec lret mov loop std mov inc addr16 lahf lods negb add cs xchg dec lahf mov or push dec or popf xor hlt dec cmp movsb cli push (bad) cmp mov mov push divl stc jne jle addr16 push les jo cmp xor push cmp dec xchg push ret cmpl or dec add aaa mov dec int3 fs cmp lock (bad) jecxz (bad) outsb and lret bound ss les xchg enter leave cmp mov aam dec push adc or adc lahf sbb inc in movb shrb mov xor fimul push xchg out enter dec xchg fnstsw roll jge stos addr16 pusha and mov loopne cld (bad) mov pop mov mov mov test je pop (bad) cltd inc and das jne leave cltd mov cmpb je sbb ljmp xchg cmpsb and sub jmp daa mov pop add add add ficomp sub into cli jno daa stos dec or and cli ss insl jle cmp pop (bad) push mov xchg jns and push sub sbb cmp clc jmp cmc lret jne cmp or call call (bad) imul xchg aas fnstsw insb lcall push xor jbe aad or mov mov fcomps inc add push push jecxz das and int pop sub xchg adc cmp int (bad) cwtl xchg adc lods push push outsb cmc mov inc (bad) cmc mov add add lea int3 xchg sub inc mov adc xlat jg mov js imul sbb stc sbb jb,pn (bad) out (bad) jbe std or mov fcomps inc fist push pop lds and jne out jnp test stc adc pusha insb jb xchg xchg jno iret loopne pushf and ficompl sub cmpsb mov shrb dec mov out jecxz xchg pop and mov lds bound jmp aaa mov mov mov add add add cmp or daa jecxz xor mov in push cmp in pop rorl dec jno fldl2e into icebp sub insb cs jle pop push sarb push pop push mov dec stos pop (bad) out mov dec out jmp in pop push stos xchg add ret lret pop lcall (bad) xor jg inc mov inc adc aas mov mov or lret mov fmulp pop es cmpsb jle sbb jecxz jmp test dec push xor scas imul add add add add push cmpsl push xor adc mov mov dec movsb cmp add pop in mov fwait nop add inc mov in adc data16 out cmp push (bad) pop js jl,pt sti int add mov pop push maxps xchg jae ror ds std pop imul jbe jle dec jl call inc and bound sbb mov arpl sti (bad) les push gs inc (bad) lea in sub (bad) fstl add add repz jl mov clc or mov cmpsb in ficom fdiv pop ss mov aam push xor (bad) fildll push pop push jp test mov xchg imul mov lods int3 lret cmpsb clc dec add cmc pop fsubrl sbb pop jae dec push sbb (bad) icebp jns inc inc insl inc xchg in outsl js and cmp inc scas and xorl or sar mov js pop pop arpl (bad) jb dec jno cltd repz and add add add stos ljmp sub cli call mov jnp outsl adc or add and adc pop adc cmp cmc push mov (bad) xor outsl cli add adc xor fisub push mov sub xor arpl (bad) fimull nop fwait add jle or cmp add int nop xor test jae adc cmp push pushf pop push jge popa mov dec cmpsl or and decb and clc or dec int dec outsb xchg pop mov mov inc or (bad) ds add mov outsl inc or out xchg sub fwait out add sbb std sbbb jl scas out push nop lcall loope jnp enter inc scas (bad) int setg dec xor addl mov xor xchg ds add repz sub dec add pusha pop sbb push cmpsl loop sbb add enter clc jns stos and (bad) adc mov fimul add inc add push mov or (bad) pop stos jne xchg sub jp ja stos out (bad) lcall and and dec lcall adc dec sar cmpsb xchg mulb sbb or adc in shrb xchg es dec add addb ret cwtl jp bound or icebp pushf sbb mov inc mov cltd (bad) (bad) ud2 incb stos leave mov add add ret and or push sub xor clc mov in test inc nop testb cld repnz addr16 pop push mov (bad) ss pop outsb mov mov mov pop in or (bad) sbb mov xor push inc aaa cmc push jo mov dec mov icebp cs jno mov pop or out mov fdivp int data16 mov stos fbstp xchg or push add fs (bad) cmc and xchg push xchg (bad) cltd mov jl in pop test mov into push pop cli xchg mov or add add add xchg and rclb xchg hlt lret pushf add pavgb dec subb pop or jecxz mov aam adc ja mov out mov test vmovmskps mov stos pop cmp lret je pop lret jmp jbe aam outsb lods mov push (bad) gs xor or orl jp (bad) rcll cmp lcall push mov test test or lcall xorl add add add push pop or aaa mov lock addr16 xor jle add pop push jns xor popl stos insb fs cmp add pushl lea dec fisubr push jae in and je pop sbb xor push jb jmp or inc xchg (bad) stos fldcw xchg push gs push pop mov ret insb repz pop inc add mov std ret mov xchg (bad) je and mov aas cmp stc sti mov (bad) pop cmp mov sti xchg jo jnp scas pop (bad) add add add xor aas mov push repz push jge es shll mov push add push ss cmpsl pop nop jnp pop and xchg dec outsb fcompl add out pop mov into or (bad) imul lcall sub ja dec imul pop dec std bound imul xchg jg sbb sbb add pop js sbb loopne cmpsl mov daa push or ds xor bound int push mov pop add add add add add in sub or mov addr16 bound ljmp jg push push lea in fistl xchg and stc push add cmp jae jmp (bad) sbb add inc cwtl les xchg mov popa sbb movsb pop xor jb adc movsl push dec (bad) insb jg addl sub (bad) ljmp pusha pop dec adc xchg xor rcrl bound in push cmpb inc adc movsl mov add add add sub jecxz xchg scas cmpsl jmp mov jbe ret dec in scas shrb sbb cwtl jbe inc or add jmp imul (bad) mov or jbe jb mov or xor sub pop dec adc aaa cmpsl and jecxz xchg jo push ljmp in lods es mov mov inc xor dec add cmp out pop push aad xor push xor mov mov nop in jb add add add add dec fidivr (bad) (bad) mov push jmp lods add push out xor repz xchg mov adc gs lret xor clc (bad) xor inc mov lret pop fisttpl (bad) out clc in xchg mov cmp lret lret jbe imul cmp jns nop jecxz push or mov cmpsl mov inc mov lahf sbb icebp lds out popf jge pop cli inc adc sbb call or movsl adc jmp sbb adcb out imul pop cmp imul mov out scas mov mov fimull mov dec add cmp jge mov add test and roll (bad) adc cmc fs int (bad) aam cmc xchg add std mov push or cs scas adc adc jecxz or popa or ret cmp push adc push ds cmp pop scas sbb mov push out jnp pop jns (bad) mov xchg or mov fldt jns mov (bad) into mov inc mov in push in (bad) dec adc inc xor mov aas int3 add lret jae test inc lea mov int3 push pop mov ja add mov mov hlt add fcomip cmp ljmp ret dec in scas in mov leave daa or add add add cmp adc jl std scas sti cmp mov sub or jbe push and test (bad) call daa mov and sbb leave dec in xchg rclb lods lret jp cltd out popa xor cmp xor fs insl push lcall jmp xchg sub jle enter cmp push add notb xor push clc cmp movsb xor push or test mov xchg shrl push xchg test or cmp add add inc enter sub ja jge lcall mov and mov and clc pop (bad) hlt cmpsl scas js bound and (bad) enter clc mov out pop loop inc repz mov cli ds aad mov sbb xchg push adc in dec ja (bad) sub pop xchg and sub push loopne xchg jmp inc lods jge test aad stos cltd aas mov adc mov cwtl cld enter std push adc je push cmpsl dec jmp in fdivrs mov mov adc lret int3 shrb nop incl xor decl xchg (bad) mov js pusha sahf or ljmp inc in fwait ss scas pop addps ss mov outsb mov loop aaa cmp pushf push mov push insb sbb xchg push stos xchg sbb enter mov mov enter sbb mov xchg push lret cpuid negb xor mov insl mov je mov test add jne add add add sti or test js inc out adc or sub pop jmp jl (bad) cmp jecxz xchg test call xor add arpl mov (bad) leave xchg mov in out mov xchg (bad) cli mov fistpll (bad) stos and or jno stos jns sub (bad) sahf mov (bad) paddd xchg dec das scas mov dec jbe lods cs xchg inc ret mov mov shlb lods xlat xor out jno test mov add fstl adc xor push aaa push inc lods mov in aaa mov aad adc xchg sahf sbb push sbb ret mov shrl sbb mov cmp xchg jp mov jl lds test pop stc add (bad) ljmp test jg lods negl rsm movl jo in shr push pop (bad) xlat icebp lock sbb xchg ret push mov scas clc mov movsl inc push pop push add scas cmp sahf ret cmp movsb loope sbb scas imul add or in fcmovnu xchg adc push pop add fwait cmp out dec cmp fnstenv (bad) iret mov (bad) mov xchg inc sub movsb pop sti ss and rolb push mov adc mov mov rorl imul test std mov out mov mov test out jle pop lret or inc sbb xor push inc scas in mov cmpsl ss add add add add push jecxz adc lds jg jne push aas push dec inc xchg roll sub mov in adc mov pop jns out in shll pop cmp dec minps dec push inc sub inc aas jg aas sar (bad) icebp pop dec loop lds insb mov in pop mov out sub or js push insl push push lea xchg mov jbe insb sbb xchg loope stos mov daa leave aam mov ficomp jle jno xchg ds inc and add add add int3 fistpl mov mov mov sub adc sbb notb pop sub ss sbbb or adc lds fcoms push mov pop push js lds lret push mov or push lahf shlb xchg and or push pusha in xorb mov add xor xchg and add sbb gs pslld sub cmp andb fwait push cld add mov sbb xchg aam mov in and xchg in inc cmp push dec mov pop sbb add xchg neg cmp loop in jae xlat fimull inc test or cmp inc add sub ror fs jg rcll push int dec and mov mov jl test and add dec mov mov insl lds je sub (bad) pop or bound hlt pop decl aas pop test and and inc and cmp in add cwtl or lcall leave inc add cmp sub jmp xchg ja jge add bts outsl dec cli inc daa add xchg insl ljmp lahf sbb fistpll add mov add dec sbb andl out mov in and enter xor mov js push inc or popa jo mov (bad) jb pop pop add loop out rolb push lods ficompl add add add pop fnop xor sbb out dec pushl and pop arpl push pop push jne dec rorb rclb mov in fisttpl fildll (bad) stos pusha mov xor push test fs jbe jo nop (bad) xchg test inc pop pop lret aas xchg lods in mov xchg cmp iret pop pop push lahf sarb fiadd sti cmp cmp jp fwait xor das and insb cmp and outsl cmp jo xchg and (bad) lret rorl enter push or in add add add mov (bad) fdivrs xor cld scas enter adc lret jbe es divl mov prefetchnta outsl pop mov (bad) mov and shlb or inc pop xor push xchg inc jg out dec fdivl leave mov (bad) (bad) or mulb xchg ret in or test xor mov (bad) xchg clc popa cmpsl jle dec add mov push xchg sub stos mov enter cmpsb fstps and roll mov arpl addr16 loopne push inc sub sub add add add cmpsl (bad) jmp push hlt mov pushf inc add stos (bad) jo xchg xchg pop gs repz sub pop inc cmp and hlt push inc push add mov (bad) andl and cmc mov mov das xchg xchg shrb (bad) lock adc ss cli inc or out xchg out shrb idivl adc fistpl hlt aaa xchg data16 mov lret mov shr push lret cmp int push dec jnp xor repnz repz xchg loop mov push sbb and push sub cmp lock sbb fisubl pop cld js leave inc fnclex cli pop in mov mov repz test insb pushw cmp or push repz adc sub jb jnp push pushf outsb fbstp addr16 or push inc or xchg out sub and fidivl push xchg adc jno xchg and xchg int3 fwait lods mov add add add xor movsl in fdivrl call mov in (bad) adc or pop ret or add pop aam pop pop adc mov aad xchg pop jmp shlb mov jne pop add outsl andb cli call inc popf (bad) aaa dec or add ficoml imul mov cmp pusha rcrl loope xchg repz js pop mov in and lea or jg and dec shll add add cs sub jl cli pop pop pop lods pushf sbb push sub xchg int mov or rcr pop call stc fwait cwtl sbb cmp ror ss jecxz pop push or inc pop mov lahf xchg lret cmp mov pop push xor inc int mov inc xorb mov xor outsl hlt sahf and lods outsb (bad) shrb in popf rol lcall mov and inc enter cmp mov lcall iret inc push lods push aaa fild subl nop fisubl mov sbb aad ljmp dec adc lret push inc pop mov clc sub loope push movsb imulb int3 pop mov adc jle repz cli xchg xchg loop insl mov adc loopne aad aas fmul (bad) jge push and lahf mov popa sbb and jmp imul stc prefetch stc mov faddl jl push mov sub cmp ret movsl mov int3 cmp js jns jmp xor add add add popa rcll repnz mov mov sbb cltd jecxz push fisubr fildl jge add fucomip pop jecxz ja xchg imul jl (bad) fidivl cmp pop jo lds hlt ljmp or xor sub push mov outsb add push mov pop nop mov rcr push scas inc jle xlat lret pop clc pop mov sub sbb mov fisubl or dec adc loopne loop inc aas test add add add add mov fs (bad) jno clc daa xor ljmp loopne lods cmp lods out sarl sbb mov repnz enter inc aam popa loop pop (bad) cltd jns or mull sbb xorl int mov jnp push jnp arpl lcall cmpsb cmp popf jg and popa mov (bad) jge lahf call dec ret lea int dec dec push enter xchg push jge vpmaxub inc cwtl add sub int xchg clc mov push inc scas add int3 inc xlat sbb mov cmp (bad) inc cltd pop dec push inc inc jl and adc and mov cs hlt jno inc mov sub stos mov into add repnz pop adc jb jb adc inc (bad) cmp pusha bound or add jnp xor stc mov out loopne and lea jno repnz xchg sahf pop push add add add gs fsts sbbl cmp jle jge add jo mov push mov and mov aas xor cmp out cmpsl fnstcw fdivrl aam mov iret dec imul cld push mov pop add out jge inc jo and push mov inc jecxz sub es shl sub push mov rorb jb lea (bad) ss jb mov jbe fstl call aad cmp xchg push (bad) push loopne xchg sbb out dec cltd insb push mov dec pop add sbb inc sub add add add add jg xchg mov adc jne popf repnz push add mov loop (bad) int mov mov push hlt inc aad add mov mov out decl pop daa xor pushf mov popa xchg adc or jmp inc and hlt test stos lcall adc push les dec jo je mov stos inc add test xchg mov adc popf stc cmp imul inc cmp dec mov xlat pop push pop cmp add add add mov (bad) test xchg mov cmp ret mov pop (bad) jecxz loopne or addr16 scas cmc iret insl adc mov popf fsubrl test sarl jns fisubr adc arpl jmp rcrl pop out lods std into ret mov int mov test xor and pop ret add push pop sub popa and ljmp push push jecxz lods jne sub cli xchg dec xchg cmp sbb add add add add sbb stos mov dec add je xchg xor inc or add or ja testb inc (bad) xor mov insb or outsb sub pop aas or enter jne jns and dec mov push and push sbb xchg test add sbb add lods lcall add mov and push call out imul out imul lods loope jg pushf mov dec add add add cltd leave rcll mov pop in mov jecxz movsb fsubrl pop bound push (bad) jno xchg movsl (bad) ljmp jns mov xor pop (bad) cmp pmaddwd (bad) xor rclb pusha jmp sbb cli inc cmp fisubr aaa shll sbb and icebp push push (bad) adc imul mov jl pop int cltd hlt or push stos ret pop cmp xchg xchg outsl (bad) cli xor arpl je into popa imul add cmp xor adc mov sub fiadd adc inc inc js xchg xor frstor es jl fsub xor mov ljmp mov int je sbb xor out mov fmull int xchg xchg inc mov cld xor repz pop orl fmull jge pop mov dec sarb inc pcmpgtd idiv (bad) sub mov sub mov adc (bad) lods xchg or je xorb add add add add add rorb xchg mov int3 fwait js adc sub enter loopne push pop sub inc pop and mov stos cmp adc popf cmc sub aam adc or cltd dec scas scas pop cs call sub push cmp push subb shll daa cmpsb stc das or xor sub and mov cmpsl inc test popa enter ds sbb jne mov push data16 pushf xor enter sahf fisubrl xor or add add mov in mov ret test and jae orb mov lcall cld popf (bad) pop dec fisubr inc fdivrs inc mov ficoml fist idivl lahf cmp mov sub mov (bad) sbb add xor mov fnop cmpsl add jae jno xor push dec stos aaa push xchg or outsl xchg sbb mov test add push mov dec inc inc fs pop rolb insb dec add add add add push arpl test mov mov push add gs jp add ror adc lds and and test test inc xor mov xlat (bad) xor repnz (bad) data16 inc nop pop mov mov cwtl mov sub sarb shlb imul xchg mov das pop (bad) in fistl jmp jno add lcall sbb push nop inc xor notb adc and add add cmp pop pop aam cmp sub xchg into mov jne test push shr mov and pop cli dec leave push sub repnz (bad) mov mov cmpsl mov (bad) into lea insl out jp movsb and and hlt dec test mov (bad) loope call fcmovu adc ficompl scas mov negl shrl pop mov inc inc add (bad) cltd and in daa je loope xchg mov je cmpl or jge dec je imul mov add add add add cmpsl cmp adc and jne or jge ret fscale std push cld add dec pusha xchg aam leave icebp (bad) fs hlt mov sub into dec in mov sub push (bad) or xorl hlt fcomi pusha add (bad) imull pop test incb rolb (bad) mov outsb dec cs stc outsl repnz xor addr16 jae or lret mov dec push jecxz outsl adc or xchg adc or test sbb xor std adc sub pop aas xor mov es sub fmuls loope and (bad) outsl sub and les xor scas jb lret pop mov sbb adcl sbb cmpsl sub in xlat les lret clc push dec lret adc mov and push imul or push leave fild ss jae lcall lods push cs and add add add xchg push fs aaa loope cmp pop xchg movsl adc shrl sbb fs xchg mov fstps jnp sub xchg sub std add sarb inc xlat (bad) dec pop cmpsb mov (bad) insb stos negb les xchg ljmp enter lock jnp dec mov ret add fldcw cwtl cmp outsl or pop lods or out xor test push jae mov loope inc and ret repnz flds mov fnstsw out mov add add add sub test out rclb imul sub add mov int mov xor jne or rcr cs repnz or movl and (bad) aaa enter stos mov pop outsl pop sbb cwtl pop sbb pop xor add loop les enter ret leave push and push sub pop mov pop mov (bad) fisubl call xor outsl adc call cmp xor (bad) lock add add add adc mov push int ljmp push jmp sbb xchg mov movb ficom push jns and fyl2x pop cmp xor xchg cmp mov xor out aaa (bad) cltd xchg movsl scas or pop lock adcl jb iret icebp jmp clc xor push jecxz cli xor xchg mov into sbb imul (bad) and sti add lret rclb das push aas movsb repz aam inc jo mov add add add cmc in and stos sqrtps dec int fldenv lret insl inc mov cmp cmp add push movsl stos xor add fnstenv insb push add and imul xchg adc push sub mov lret or repnz iret push movsl and dec test xchg fisttpll pop cmc add lahf inc mov adc jb cmpsb xor loope test std mov gs lds mov arpl fldl add add add add adc rcrb lods cmp test xor test mov add xchg repz dec aas dec pop adc (bad) push inc jg jae mov jle mov cli mov int mulb jp jge mov mov scas xorb dec leave cwtl sahf push push sub mov das das push dec inc mov lods dec push arpl into imul movsb sub jno and xchg mov add mov add sbb andl jbe xchg sub in mov inc and push mov nop fildll dec scas outsl mov in mov sbb xor ss xchg push les xchg mov mov inc data16 mov mov dec cltd mov shrb int mov inc lcall addr16 add jge inc sbb inc ret ds sbb xor test stc dec adc lcall shrb orl fisttpll push (bad) pushl add add ljmp cmp (bad) jns jnp add push dec inc icebp sahf mov loopne xchg data16 movb mov mov cmp fs mov jp rcl mov xor pushf mov lods shl sbb jecxz movsb or sub int3 (bad) adc mull mov (bad) lahf xchg mov mov mov ret sbb adcl cltd movsl or pop sarl pop cli fstps dec xor add (bad) enter add add jae repnz jge sub fmulp sub push divl or jecxz fucom dec jno sub ds pop add xorb repnz jne adcb andb jmp cmp lods int mov mov dec mov scas stos mov std push test and imul insl sbb lret and in imul xchg and push add inc int3 add jge push ja int3 shlb mov sahf mov add add adc pop jge iret add cmp jns ret jae mov adc mov mov cmpsb xor xchg push fdivrs sub das xchg xchg pop push pop sbb jmp fwait into and mov mull pop xchg into clc sub adc inc pushf mov cmp push stos inc add jp mov inc int fs pop out inc je add dec pop pop push in repz cmp sbb test mov scas inc addb fdiv ficompl fcmove mov (bad) mov lret arpl cs test shlb push pop test push sbb fdivrl mov pusha jae stos out mov mov arpl jbe (bad) or test cmc out push lret and sahf push add ficompl cwtl cmc add or adc test or out cltd outsl push jne in test jecxz nop sbb xor cmp lcall and (bad) cmp rolb mov pushf dec insb shll dec imul add add movl lea das sub sbb cwtl jl test mov mov loope mov call fiaddl ss push inc aad test popf pop loop lret scas jb cmp add das insb fstpt std push movsb pop pop pop inc sahf and cmp adc jne addr16 mov outsb hlt sbb aas ja add (bad) mov (bad) sbb lea out es shrb aas cli aaa das stos inc (bad) rcrb loope push add cld pop inc jge cld mov push xor cld and add add add cmpsl dec out repnz (bad) out sub adc mov sti das (bad) dec (bad) call xchg in (bad) data16 sarb out jle jnp dec cmp negb adc and lea sti inc sbb push ficompl sub inc and jl cmp adcl test repnz inc mov xor mov sbb jae lods sbb cmp daa stc sbb out aas xor add pop cmp outsl fwait or add add add mov fldcw cltd imul cld mov mov pop or and xchg jmp jp scas jbe fcmovne test or lock nop mov push sub adc dec push xchg scas xchg and cwtl sbb inc push xchg sahf and mov xchg xchg insl mov pop or xor ret dec lods xor lods loope cmc lods mov arpl call (bad) dec daa scas xor lea outsb addr16 into sbb cmp rclb or jge incl or leave addl sbb aaa movsb push in (bad) aaa (bad) rclb and (bad) out (bad) aam inc bound xor jns std mov bound sbb pop ss push ficoml or sarl mov stc mov in out rcl mov mov jmp jns jne pop cmp add inc add or cli call mov pop aam daa sub fsts out (bad) fldcw mov mov jns scas aam fmuls dec add add add cltd loopne mov lea test xor and fildl pop mov mov or bound or rcrb and lea jge and daa xorl fiadd (bad) jno inc arpl push pop or jecxz pop icebp cmpsb shll in es sub addb sub insb sahf push push sbb push pop xchg adc sbb cmpl loope ss hlt pop ljmp jmp xchg insb or add add add add rclb inc pop loopne pop and pop je mov xchg xchg push insb pushf addw mov sbb jae std inc cmp popf push cli ret mov dec jp add sub pop adc jl add out aam pop insl pushf popf ds jnp stc mov dec sub inc ljmp out cli dec pusha das pushf mov push cmpsl adc jno xchg cmp push cmc push into dec dec test sub lret (bad) mov pop push movsl cmpsl push xchg jl icebp sub aam add add add inc fstpt icebp in cmp loop xchg arpl push mov ss mov data16 mov ficompl repz sbb cld jo mov cmc or ret sub femms or and ficompl daa pop sub (bad) xchg iret add or pop insb fcoml lahf or mov orb mov sahf or (bad) neg addr16 mov sub bound mov cmp enter (bad) xor mov mov gs fild gs cmpsb xchg outsl push and add add out rolb (bad) out fyl2x inc bound das ds push push pop adc mov in (bad) ja mov and sub xchg jp sbbl inc es xchg mov ja pop pop jns cwtl je jmp cmp mov dec stc test cli es cmp mov mov nop das cli cmp sub mov dec xchg xor ret sub jecxz out push mov rcrw xlat push mov hlt mov stos cmpl and mov add add add data16 fisubl jno xor aaa mov push push mov mov push mov add mov cmp cmpsb cld push (bad) inc xchg cmc repz or outsl push xchg cmp lahf push xchg jnp mov jno std out xor pop lock push cli repnz cmp loope iret inc add cmc push dec xchg inc stos mov adc add out lret or push es push aas sahf aaa inc jecxz lahf not cmc test sbb mov jge inc push or add pop loope popa rorb xlat std dec stos sbb pop fdivl das mov loop shl xor outsl push rcrl sub or mov scas ror loop out jne push push mov leave push shrb dec arpl popa movsb sbb test js and mov mov rcrb int3 xor repnz sbb mov mov jae pop jo repz call jno sbb xchg ja (bad) jmp add jns lock push hlt test fbstp push push inc push mov xchg lods push rol fstpt test adc or push leave fwait jmp adc push push sbb out add sub adc dec sub fcoml call add repnz xorl mov mov (bad) popf rcrl jbe adcb add pushf setle xchg jmp cmp mov jle enter inc fwait sahf rcrl ds jp xchg mov add add add stos sbb out xchg lea mov or in mov scas dec (bad) fnstsw or cltd xor lods je clc cmp dec es pusha lcall mov jl sub or daa inc sub out fisubrl xchg pop jo outsb lcall jg into add aas in fwait pop xchg fmulp add and or nop adc lahf mov imul cs pop lods mov jb cmpsb cmpsl jmp xchg negl call rcll mov (bad) dec mov or inc add mov push xchg cmp push jge cmp cs les inc pusha and lods enter pop stos xchg sub adc inc scas popa or aad jo leave loopne add (bad) roll aam mov push lret fldenv loope aam outsl out imul movl out mov sti xor fstp call (bad) mov int3 ljmp dec or out xor pop dec std push push daa lret sbb sahf mov ret add add add test imul loopne mov std hlt divb push sbb push nop pop pop xchg gs (bad) mov push out mov lahf xor cmp mov push sub sahf dec cli test jecxz mov lods sarl mov ret mov xor pop cmp int pop jp sub (bad) iret inc add das jl pop cmp mov (bad) dec sbb fdivrs mov jecxz sbb sub dec cmc sbb mov mov in (bad) adc ficoml dec movsl fimull mov es lcall add fstpt pop out test addl jge bound pusha in pop iret cltd les loopne loopne add ss xor jl lds dec fiaddl pop loope mov dec sub xchg notb out fdivrs mov bound out nop cmpsb push push adc cmp gs ljmp roll imul cmpsl nop cld rorl imul lcall push mov insl and and xchg cmp in lods mov outsb and shrb test and push and pop mov loopne es rcrb or repz cmp outsb jl xor pop sbb add test push push arpl in (bad) mov mov and mov test pop or lock and jns xchg mov mov inc jo ret jns or repz lods arpl dec push dec xchg jne push xor in ret ds cmpsl dec pop jns cwtl scas mov xchg das int3 das fidivr add add add and add push dec mov outsl out cmpsb fiadd stos inc lret jnp xor cmpsb ffree sbb pushf cmpsb iret popf cmc pushf jno sbb xor jno xchg or jo or xchg adc mov pop lods pop push push cmpsl push or fildl lods (bad) ljmp cmp (bad) into in pushf outsb out out push xchg lret mov testl or mov ljmp push xor xchg sbb loope sbb jmp pop and xchg add add add add ficompl pop ficomp inc xor in mov adc jle pop mov dec jg mov call xlat mov adc dec aam cmpsl pop push out insb outsb jge repnz add inc movsb repnz mov lret sbb nop lret sub les scas cmp hlt xchg movsb in adc movsb cwtl daa jno add mov xchg add lods in dec repz inc adc push frstor sbb ja add add add add adc mov dec adc mov push js incl mov dec sub call add mov cwtl push imul mov pop cmpsb add incl xor in rcr lods test xchg push mov pop int out pcmpeqb add addr16 cli jecxz lret push jge sub test out mov subl and data16 cmpsl aad mov xor cmp fcmovb mov or jecxz popa aas push xchg clc arpl jmp mov cmp scas loopne ret loop mov repz jg lods cmp cmp lock dec push ret xor push into popf xchg inc xchg (bad) cmpps push les jne fisubr pop cltd jnp or les stc add adc mov or cltd inc fs cmp cmp add pop pop pop inc xchg and cld jmp xor (bad) sub jbe or mov repnz xchg test js xor out add cmpsl xlat push orb icebp jae lret pop mov jg movsl dec mov and js sub mov jnp adc mov sbb cmp or icebp mov ljmp add mov mov push out call adc sub xchg aad lret std movsb into jle pushf cwtl lods cmc pop sbb fistpl aam (bad) jae (bad) xchg ljmp jne mov test nop fidivr ret adc xor fnstsw sub xlat sbb add add add mov ret int3 aad out dec mov add out add out cmp jns imul fwait inc pop fisub iret lret insl ds sbb push aad mov adc pop test cmp data16 inc enter addr16 mov test je andl std jno fistl cmp cld pop fimull mov lods aad fimul and sbb outsl jmp test ret cli enter push sbb xor sbb addb add add add xchg pop push or leave fnstenv loopne rorb pop roll lock dec fildll sbbl movsl dec hlt icebp cmc or lcall loopne push xchg out nop test xchg cmc fcmovb xchg mov mov mov dec inc outsb std stc fdivrl (bad) lock cmc xchg stos loop fwait sbb push pushf das pop adc insb (bad) out mov push jle pop movsl test sub jecxz loope fcoml pop xlat (bad) xor pop test orb mov icebp push cli add pop lock ja inc xor dec fidivr add add add in push mulb inc lods pusha (bad) sbb or xlat push xchg xchg (bad) pop out mov pop adc into ja xor push fwait out movsb cmpb dec bound lret jge mov lods sbb hlt xchg jmp sbb add xlat imul arpl push imul pop mov xchg and jg and mov xchg xchg add out push in popf adc rolb push inc jae iret mov cmp mov (bad) out mov in push ljmp dec add add add mov dec out jl mov sahf outsl pop mov dec rcl mov mov xchg pop fs push sbb and mov das inc mov popa inc xchg add sbb xchg dec or add test mov dec aas out cmp je stc sub repnz cmp int3 arpl test jg add mov add sub (bad) pop cltd add sub std sbb jbe imul jmp fiadd fildl add add add lds fwait jmp mov mov mov mov xor mov loop adc insb xor push outsb out lret (bad) pop pusha dec adc push lea mov rolb push mov sub mov insb loopne arpl jmp push mov mov (bad) cli lods jnp push cltd leave roll lods push lods test dec or sbb (bad) xor cli cmp jno faddp pop pop lea push roll ja adc and and insl js add add cld (bad) mov dec jge sub push aad pushf cmp push push loop mov (bad) lock std adc inc loope adc adc out push xorl jno pop sub dec xor push fsub mov xorl or scas in add mov pop aad pushf mov sbb repz testb loope lret xchg lahf into xlat sub sub inc loope insb fistp mov inc imul paddd sbb ja push or add and xchg push mov les movsl jae icebp pop idiv mov or mov and arpl xchg aam adc jge and pop sub nop sbb dec rcrb jne std sbb push push jecxz and xchg add mov ljmp stos mov xor sahf push add inc ret dec lea int3 (bad) out inc cld or clc insl sub push xlat outsb stc lock pop sub or xchg int pop (bad) add scas in loop jns stc addl mov and imul pushl cmp loop jg pusha test xor out add lret add jb sti jg pop fidiv rorl lcall out repnz push int fcoml ljmp stc insb mov repnz inc push fstpt in pop xlat mov inc sar hlt shrb pop dec mov dec sbb jp or pop fdivrl cmp adc mov lods sbb bound add add add fsts jp jne cmp addl and sub leave cmp lret push idivb jecxz dec or mov or daa ja arpl in inc and stc mov lea mov xchg test sub leave adc sbbl aas add dec fiadd bound jp jae outsb sbb andb in inc jge and iret lahf pop arpl sub enter jl mov pusha (bad) into xor jecxz push adc iret cmpsb data16 jp sub adc adc fstpl and adc jle popa das (bad) rorl sbb fsubr sub mov std dec (bad) pop fcomps fistpll sub mov loope mov and outsl test cmp inc movl sbb rcrb or xorl fwait les les cmp xchg fisttpll add orl dec and pop scas adc lcall cltd sub add add add add pop inc adc push sbb (bad) mov dec in ja pop aaa lds mov sub xchg adc jg repz mov hlt dec jb sarl sub dec std insb sbb mov ret jmp adc int fidivl push xor push fcmovu (bad) push sbb mov jno adc sbbl ss lods movsl or push (bad) push stos xchg call jne add cs mov mov dec repnz stos mov sbb sbb add addr16 mov fwait stc jbe insb pop mov add mov rol call lds idiv pop mov fidivl mov inc pop outsl stos adc pop in xchg imul mov out cmp mov fptan adc or jg rol add cmp adc icebp jecxz or repz paddq mov push das idivl lods dec pop (bad) jne cmpsl enter sbbl push dec lahf add lds jo fcmovu in jnp jmp xor lahf mov add add add and int mov ret inc (bad) scas sub sti jo imull and xchg xor or ds jmp xchg ja pop stos push cmpb dec mov mov sub push (bad) xchg ds mov nop sti dec mov adc cmpsl in adc xor scas fstps aad test mov add leave out (bad) cld jb dec std lcall pop jge mov sub ds mov jmp mov sub cmc scas stos nop mov ljmp aaa (bad) (bad) sbb add add add add sahf mov sub orl dec pop push sub sub or cmp fwait pop pop stc cmp mov and lcall out or sarl mov (bad) xchg sbb inc cmp fcoms sbb nop cmp and mov lds imul mov imul (bad) mov sub jnp fwait and pop popf adc dec push cltd or (bad) or mov gs jge and adc test hlt xchg jge in inc cltd mov mov dec push scas cmpsb sbb add xchg test fild dec cli jnp lahf rorl jno fstl or inc in (bad) arpl outsl sub inc (bad) faddl inc mov lods dec cpuid sub mov sbb inc int3 jb push inc dec jmp sbb sbb ljmp and loopne mov xchg mov (bad) repz mov je hlt aas mov je (bad) gs inc mov add add add add addr16 push jae pop stc (bad) add push mov pop aaa js mov mov push icebp mov mov sub enter (bad) jmp fwait add push mov inc jmp js gs hlt int jmp push aad xchg shl sti push pop out push bound inc das or cmp sub or add sbb lock mov test sarl inc xchg xor xchg mov jge (bad) outsb inc add add add add and adc push loop jae xor subl out pop nop xchg lcall sub mov repz aaa xor xorl mov mov ss sti pop mov insl xorb dec jp ja jl mov pusha movsb testb sub (bad) out mov pop popa cld (bad) aaa xlat (bad) sub cli inc insb aaa mov inc lods inc add aam mov xchg movsl enter jmp aaa mov popa stos xor pop xchg jg adc mov dec nop scas push icebp xchg insb ss push incl lahf mov inc lret aas int inc push mov repnz pop pop bound xchg aad lds lahf cmp fs imul push add push xchg jmp adc sub xchg insl fstl xchg sbb aaa adc or xchg or mov lods outsb xchg cmc imul fdivr pop pop and and jb pop test rcrl arpl loop aad push (bad) addr16 (bad) icebp jno loopne daa unpckhps lods jbe add in cmovp addl fiaddl (bad) mov add add add add pop xor cmpsb jge xor mov cmpsl push mov cmpsl (bad) pop dec push adc cmp clc insb insl jg jb dec fidivl push sbb cmpsb dec xchg fstps inc dec sub data16 xor cwtl mov cmp cld adcl jbe jp icebp sar (bad) loop call sti ss add or stc jle insl lods fistpll in mov ss loopne test hlt (bad) imul rorb add add add push icebp ljmp or mov cmp nop xor jae sbb cmp (bad) jae fcmovu pop or inc jp mov shl aaa and stos mov (bad) dec (bad) repz fstpl jp rorb aas jb orb dec std out ret nop mov push or push mov es repz mov cmp rclb mov movsl movsb xor mov and pop or fsts enter pop call mov pop push sub xchg mov ret cmp lret add sub inc mov add mov int sbb push jge pop in rcrl popf mov dec aaa cmp push mov ficomp outsl cmp mov pop clc adc jge out and mov xchg xor sarl dec mov dec xor and push test (bad) jge rorl loopne (bad) or mov inc mov or leave jo imul add mov add add add fs test imul ss arpl aad pop lods lds lret xor insb mov xchg imul popf mov pop cmp pop pop mov pop sbbb fldl cmp imul add pop nop sbb xchg arpl pop test xchg dec add jo mov cmpsb or (bad) into (bad) call and cmp and push mov mov sub mov xchg dec dec in mov xchg (bad) das or pop popf sbb adc mov inc pop rcrl lods negl pop and push inc cld shr movsb into fisttpl add in sahf adc or mov lret fdivs dec gs in outsb popf and aad inc dec (bad) mov movsl insb hlt cmp push add imul lahf int3 cmpsb into push sbb shrb ficom inc inc push cmp mov in ss add jo mov mov repz aaa arpl add push inc lret jp mov jp rclb add iret in sub add add inc imul cmp add test inc js lods push aam sbb rcll push sub mov adcl pusha push (bad) push out clc in std add jl and cmc call mov outsb xor insl hlt icebp shlb mov les push xlat push test cltd mov add nop idivl in jge test (bad) dec addr16 mov sub int3 aad push lcall push add sbb out lds clc lret add dec dec lret cmp add add add add ret push outsb gs gs sahf repnz mov xor lock and icebp mov repnz and iret mov lods pop int3 in xor and xchg mov and dec lock stos call sar sti and cmpsb (bad) cmp push push sub sub lret mov add mov test dec mov add fstpt sub das cmp in hlt mov dec jne push xchg jnp add scas sub repz (bad) push add add add test mov aas push popa mov sbb push push jp mov je int3 stos xor push xchg test jae pop bound sub jae fs sbb stos xchg sbb mov push fsubl enter inc mov (bad) cwtl mov fbld add roll inc pushf sub outsb rol mov bound int3 je add and xor and popf into in mov stos push push out not loope (bad) or jle pushf lock mov outsb adc ret add add add add mov push mov mov push (bad) (bad) cs (bad) aad daa jb jp mov insl add cmp lods push pop sub push jge push test int out repnz std inc jge mov cli add push pop stos popa int dec push inc into push call jmp fnstcw mov mov xchg (bad) int3 jnp sub push (bad) jg xor das jb pop mov push shrl jle xchg sub dec mov pusha out lods loop test ljmp decb out xchg push add into rcll mov add stos dec xchg mov xlat insb aas xor adc ja jmp stc mov out and or adc clc shrb cld ds xchg pop ja push out nop cld xor cmpsb (bad) (bad) bound sbb dec loop outsl mov or insl inc and daa xchg lcall (bad) jle and imul pop out aas jge mov sti dec dec pop push and push jae dec or add add add add cmp repz fs lret adc into mov ret mov inc loop or je cmp stos mov (bad) cmc sbb xchg cmpsb or repnz pusha pushf fsubr push or fcomi inc es dec call jb xor outsb mov das movsl scas push (bad) dec pop sahf dec jnp mov adc push rclb mov in inc loopne hlt int3 fwait outsl pushf imul inc pop scas movsl (bad) out mov push insl int (bad) sti out nop xor mov jge add add add jb dec pop mov cmp jns fwait arpl cmovae push sub dec mov jbe inc jle mov cmp andl in mov xchg inc lods xor data16 popf cmpsl int3 jecxz das mov fisttp lods pop push pop test push scas nop jbe xor out and inc rorb push cwtl das add mov cmp add ret (bad) dec pusha jb popa outsb inc test test repz loope add add add mov mov stos jp mov cmp mov lock jmp nop rolb cmc push lret mov push in in dec cmp push inc sub in mov jae add push adc cmpsl aas adc xchg add xor loop mov out jmp loop cmpsl out xchg cmp push (bad) in inc or (bad) push push xor inc fidivrl xchg pop push pop sbb fiadd pusha pop lea xor or lods jo add add add add enter int3 gs lahf fldenv xchg out lret fidivl xchg pop cmc (bad) repnz mov pop repnz repnz and ficompl (bad) mov mov push xchg sarb stos lret movsl push or gs ja xchg stc pop pop divb in pop sub push xchg sub sub mov push xchg insb jns xor adc xchg (bad) movsl call mov jmp jg outsb inc ljmp add fdivp das ss pop pop adc bound jl push or (bad) es mov add add add pop scas pop les in imul xor bound and pop (bad) fsubrl xchg sbb mov add xchg push (bad) repz bound nop iret push mov sub cli cmp loope dec mov push pop cli add mov pop je shrl and icebp lock scas mov pop dec aas mov sub loope addr16 cmc scas mov je add int cmp adc inc aad push mov std stos mov int and push push out jo arpl add add add orl or push lret jmp clc mov cmp aad jp jmp jl popa rcll insb icebp and xchg movq push sbbl jae arpl xchg push nop mov cmp orl dec fwait das in jp cmpsw ljmp xor (bad) pop (bad) loopne into test inc insl repnz fdivl sbb imul outsb insl push xor mov roll push and xchg cmp rol and add add add xchg arpl outsb test add lock push push or dec dec arpl ret sbb push cmp sub push jno cmpsl fsubrs cld aam lret lcall jno aam mov jo (bad) mov enter pop repnz nop mov cmc out in pop fnop lret sub mov lock (bad) push cmp inc scas fdivrl adc push add xchg sub ss and cmpsl cmp mov loope push adc add add add (bad) aam aaa fildll in mov xchg xchg add mov push arpl inc mov inc (bad) in rcrb les nop mulb lahf sub stos dec addr16 or data16 pop xor (bad) shlb ficom leave xor or push jle adc outsb es insl pop sub sahf or xor test xchg shlb pop mov ficompl sbb push loopne sbb or and daa rclb dec xchg jg outsb es xchg pop les add add add ja inc (bad) cmp sub daa pop insl repz ljmp test pusha out jecxz popf cltd aas incb pusha jbe or adc lods pop cli dec ss pop mov shr xchg (bad) jno es jbe lret adc xchg insb out aam cmc icebp dec sub loop push sbb sar or or add outsb adc enter sub dec in push inc scas adc mov repnz inc and and and mov mov or add add add add lea sbb add jbe aas jnp jne or pushf addr16 jge pop dec insl xchg mov icebp lcall in lcall pop mov fistpll sbb jo push sub add adc jge je testb jno jno data16 mov (bad) lret insb cs pop pop imul push sub icebp push xchg pop cli jle push push pusha dec cmpsl shlb dec cwtl scas sub inc push dec inc stos dec mov (bad) loopne (bad) cwtl ds mov add add jecxz test fistp mov cmp xchg lret xor cwtl sbb jb add scas mov xlat pop push pop mov gs inc fisub repnz push aaa sub pop dec push sbb rcrl xchg add or mov jnp dec mov push or xor sbb pop rcl fisubl inc popf hlt jae xor fmull pop in jp pop insl jecxz xchg (bad) outsl sar sbb mov mov mov add add mov mov push (bad) sbb adc ss in in push and inc fldcw std jmp test fucomi mov mov ret adc ss and xchg js mov inc add fimull ljmp stos sub ficoml in test xchg cmp mov pop mov je adc or jl movsl add jle sub (bad) loop sbb jg push add add add add and or fs int3 pop xor mov aas jo add inc add imul scas cltd das hlt or sbb int3 fcoml cmp aam daa mov lods jo mov inc out out inc sbbb mov and sti push dec add nop inc fwait xor or cmp pushf jl inc (bad) fcmovnb jmp adc pop sbb popa push sbb or psrlw aam ss int or jmp js repz cli add add add add and repnz aaa mov mov mov inc movsl mov mov stos subb ret mov pushf mov push stc cmp lahf rcrl stos ja dec adc in (bad) in xor xor je in mov sbb outsb and sbb repnz xchg insl cmp pop ljmp cli inc push inc or lock stos push lea shlb leave pop push ss or imul aas bound addr16 pop lahf outsb rclb popl inc xor sahf lret jmp cwtl add add lahf jmp xor push pop lcall gs rorl pop sbb mov and sbb pusha lret lods xchg insl jle fstpl jnp fcomi int lahf pop jne test test add pop cwtl sbb push popf lahf and iret push call push mov lahf mov cmp jmp sub insl arpl psubd into loop xor mov aad fs lock and push out sub out push sub (bad) popl adc cs int lcall dec pop (bad) adc in repz pushf sbb lahf (bad) mov and out loop pusha das aad bound jne fbstp sbb inc fisub mov imul mov fiaddl or xchg inc adc movsb mov jge adc sarl scas les pop dec outsl xchg popf xchg cltd pop fstp dec lret lcall rorl shlb add add dec test pop in dec mov insl (bad) clc adc stos dec fxch push mov inc (bad) pop xor out and adc sti imul mov pop leave ret arpl xor movsl icebp cld add push inc js push mov xor cmpb dec shlb pop bound dec jns cmpsb pop nop mov sbb movsb dec and cmp (bad) mov lret dec pop pop test int test outsl pop pop iret repnz push dec leave push push (bad) icebp aad add push movsl ds xor (bad) xor cmp pop out pop add add add popf cmpsb jnp lock and mov leave out inc loopne dec jg outsl stc fild (bad) jnp out les push sub cwtl cmpsl stc adc (bad) inc test push xchg cmpsl or push minps cmpsb pop je loope mov test movsb push jns movsl sub ret sahf js mov cmp jns es mov ret mov sbbl test push out cld jecxz movsb popf and push mov insl pop add (bad) mov inc cmp mov fildll jmp xor (bad) xor mov repnz mov push sbb inc jbe fs in insb sub jbe data16 mov daa and jp ljmp mov pop pop add xchg negl jno mov jns in mov imul mov pop lcall stos (bad) sub sysexit mov enter out (bad) hlt into xlat mov pop sbb or js and movsb pop lret add add add flds jle mov mov mov sub mov cmp (bad) sub sub std arpl cmp dec cmc leave (bad) mov xchg pusha jp test frstpm(287 mov jg (bad) aad bound mov xor fsts aam (bad) xor and (bad) mov into mov sbbl inc push nop mov loope sbb cs pop sahf mov mov mov addr16 push jmp (bad) imul add add fbstp popl (bad) pcmpeqd mov dec lds js xchg xor push loope imul je in inc pop adc ja sbb shr mov arpl lcall (bad) push sub dec xchg dec popa in cmp xor xor (bad) out hlt aad push add push inc test push sub (bad) aaa lret jle add pop and xchg dec leave cmpsb cmp xlat mov sub and (bad) push mov mov les add add add add es or testl sbb mov xor xchg inc int3 xchg ficoml imul lahf and mov or pop out test xlat arpl inc jnp icebp push mov inc push adc iret enter scas clc cmp inc (bad) pop enter sub inc mov add xor daa xor adc fwait imul rcrl fistp ljmp push inc push fcoml sbb mov add add add iret cmp rolb sbb or stos movb (bad) lahf cmp leave pop rclb movsb inc movsl add aas xlat xchg outsl mov jecxz bound cmpsl movsb mov jnp sbb jne mov sti fxch icebp jno les push mov cmp or jae add or xchg enter (bad) or movsl ret (bad) rcr mov (bad) mov (bad) fisubrl mov push mov orb push push sbb repz sub cli fidivl cmp add add adc pop test mov ds mov push cli rcrb push mov stos outsl push pop dec cmp iret mov xchg std xor ss ss pop bound (bad) repnz mov xchg mov mov jno inc fdivp jg or pop icebp dec (bad) xor cmp test jae cmp xor clc pop jb stos (bad) and xor loope add push sbb fildll or stc jge je xor mov stos jg jmp push addr16 inc insl add add add in imul lock cltd add clc in mov aas adcb xchg gs adc sbb icebp inc mov xor out cmp mov jg sbb imul lahf test cmpl adc (bad) fiaddl ficom gs loopne aad pop (bad) sub es shll mov dec insb dec mov mov lret dec bts (bad) test or push push pop xor dec cltd movl mov dec xchg jmp movsb xchg mov adc mov gs dec and ret jbe cmc xchg fdivrl mov inc sbb cmc fnsave or xor inc inc imul cli add xlat loopne cmpsb aas lods mov stos fisubr dec (bad) shlb sbb sbb add pop add xor cltd pusha ret dec clc push and and daa dec outsb stc inc movsb inc jo cwtl call sub mov sbb pop aad dec push stos dec cwtl outsl adc pop dec arpl movsl fisttp add xor mov jnp mov ljmp xchg inc lcall rolb jg cmpsb cwtl je add xor adc imul and mov loop push enter fiadd out and adc xchg cmpsb rcll (bad) dec lret mov cmp int3 dec jo add mov popf gs inc (bad) data16 and scas cmp jmp ret test xchg stos mov pop dec inc dec fldl2t cmp push dec movb add add outsb sbb out rclb dec pop aad dec sbb push cmp out or fsub (bad) aam push ljmp sub jae test add in mov jae testb js lcall mov shrl push dec or stos sbb sub adc inc loopne jl and xlat bound pop dec sbb loope jno in pop nop popf int3 stos ror add addr16 out pop dec mov jo je add jl jne lock add add add addr16 scas das add xchg add pop lock cmp in push pop scas lds lret inc or outsb inc loope loope sub orb inc pop insb loop jb jecxz std dec ljmp sub push dec mov (bad) push (bad) (bad) lret push dec xchg pop popa repz fwait cmpsl sub jle add cs xor sub push jno cmp outsb icebp or xchg dec cs push inc cmp ret mov cmp inc (bad) or inc data16 xchg xor js sub cmp jo,pt imul xor lret popa jb ds sub push jo mov leave jp xchg mov test xor mov jne inc fldt insb ror dec sbb incl fwait sbb dec insb pop add out loope push xchg mov and lods dec call sub negl or insb dec sbb int inc sahf mov mov daa insl cld bound mov push mov fildl add add pusha adc mov xchg subl pop int lret stos push imull mov out data16 mov push pop roll into lods jns mov popf in push adc dec push pop push xchg xchg cmp arpl mov stc std insb imull xchg ds cmp xor cld decl mov sbb jb xchg and or js xchg sub dec xlat das adc jle xchg xor pop add sbb cmp out popl xchg bound mov out jns idivl mov fwait or add add add add cmp push loop sub data16 rolb lods sub jne sahf dec ds adc sbb icebp jae lea cmp and push mov pusha adc dec insl test dec xchg or sbb mov out mov enter out xor pop dec sbb and push add add ret jecxz dec cmpsb cli xchg test rolb jne scas ret in pop icebp pop sub cmp (bad) mov xchg push fcmovbe pop add add negb popf cmpsl lret jne cmp das cmp sbb jle mov sbb jmp aas ja jnp lea insb pop arpl mov xchg leave dec (bad) sub fisubr mov xor js mov add mov loop and icebp jmp push fwait out idivb xor aaa sbb push and int3 imul and stos inc pop (bad) jns (bad) ljmp add jnp (bad) int3 out lods in and add adc (bad) sbb arpl sub pusha mov lret imul mov sbb jl and je jmp inc outsl (bad) jo scas xchg sub in mov cli leave fidivr sbb or or add add and test loope cmp cmpsl cwtl sub add mov xor cmovae pop jnp sbb jbe (bad) cmp out push ds jbe rorl in cld xchg subb add mov subl mov add cmp lret ljmp jne xchg pop mov dec lods lahf clc cmp fisttpl cmc inc pop xor cmp xorl pop cmp (bad) lea pop (bad) enter ret jnp cmp das dec pop and jbe push stos fdiv xchg das lea pop (bad) xchg jbe fildl mov das cmpb mov popf jecxz adc aaa loopne sub scas mov sub cmp int3 pop inc mov ds mov push add add add inc mov sbb lret (bad) es pop (bad) iret pop xchg imul rorl lds in cmp or insl add and or ret out arpl mov out std adc pop aam xchg cmp fwait aam jo sbb in sbb add add stos xor xchg lods idivb mov inc insl lods repz jbe pop popa cmp pop iret scas in inc adc mov add repz int3 push mov add add (bad) sbb cmpsb es mov xor adc jge pop mov fwait stos pop (bad) xchg dec cmp hlt inc sbb adc or movsb ret fwait mov xchg mov dec push or in sbb test xchg or nop stos aas inc jne push add mov sbb int3 sub test fdivp das movsb or cltd push (bad) push test cltd mov rcr test adc imul iret ret pop add add add mov rolb dec mov sbb sub stos fidiv or mov mov inc das adc iret not ret add adc jmp add (bad) sbb icebp js ret push lret iret inc inc jno inc lret push cmp (bad) dec inc sbb push adc leave add in fiaddl add or imulb push fcomps mov adc fnstenv xchg out enter pop adc mov clc arpl cltd adc and push fwait cmc jmp iret dec add add add add pop jmp xor iret dec cltd scas (bad) ljmp jmp bound jne xor fldenv sete lret fidiv fstpl mov dec jg loop jb cmp pop or dec cs movsl lods jns adc and test popf mov add shr lret aas mov paddq inc (bad) insb ret mov jle cltd cld or sub sub jmp adcb adc push int (bad) xor pop cltd idivb sbb cs int3 cmc jl lock and add add add add add rclb mov inc loop stc andl aaa ja insb fs scas mov in sbb sbb and inc xchg arpl stos fmul push push out push test aas mov jno xor mov (bad) addr16 and (bad) xor xchg in scas repnz jnp inc daa sbb cs push adc insb xchg inc add mov or into ljmp mov xchg std and shrl out repnz jbe loop out sbb pop sbb add add add lock push pop (bad) mov lret cmpsb adc (bad) dec sub repz cmp add sbb add pop test xlat push pop add aam int3 ret inc cmp fimul pop adcl leave sbb mov xor xchg xor mov cmp in mov test pop ds sub loopne mov lea jae pop push cmp xor outsb sbb fwait outsl and in xchg mov mov add aas movl int cmp rclb mov fiaddl add add add movsl add and (bad) jnp sub mov and or sub xlat shr jne (bad) out gs inc rolb mov jmp inc add push sub int and insl xlat lcall mov lahf stc gs xor out adc (bad) dec insl xor sub outsl jae pop sti dec mov call cmpl mov push sbb mov cld popf jae cltd pop lods pop adc mov xchg lret les je cmp lods sti cltd xor add add pop sbb mov inc push and nop dec lahf int (bad) out and cs adc push (bad) stos mov test imul pop fldl xor jo stos in stos jle pop push jecxz daa aaa mov nop cli dec mov in outsb insl mov cmp out push mov cwtl mov pop dec mov xor lock mov std mov loopne and icebp movsb xor rclb cmp and sbbl fist fs add add adc test pushf loop orl and and aam xchg xchg push sbb xor jno xor push add cmp jnp jp cmpsl scas jg xchg out or test mov jno xor sti dec (bad) in jle and adc jnp push (bad) clc loope dec das int3 pop xchg ja es jle jmp xor jns daa lret scas mov sbb jnp push mov mov daa sub pop (bad) mov (bad) in add add add add jge push (bad) push jne insl es lahf out inc mov jns lods sbb cld mov fcmovnbe shll inc inc mov xchg sub in xchg xchg add adc push test sub push mov xlat push dec (bad) movsb jle test mov (bad) xchg fcmovb negb in loop (bad) push lret dec notb clc fwait or xor inc fimul bound or (bad) enter jmp mov sbb add ret adc jg add add add fs scas mov clc sub jo into (bad) jge pop aas loop data16 jnp mov inc js dec shll dec rolb loope fildll adcb push int leave ja jp add ret jge pop cmc clc jg mov rclb rclb es fwait push call popl stos into cwtl inc fs jns out in cmc cmpsl rorb cmp jne shll roll mov mov push or sub je add and mov add iret rol lahf sbb or push fmul xchg and jl or movsb sub fst aad cld insb out dec xor xlat jge push in in loopne jno inc cld loopne and cli cwtl enter mov and dec scas xor or inc aaa cmpsl or mov (bad) xor xchg lret cmp xor wrmsr ljmp xchg hlt and lea fisub rol call lea xchg mov sti add add add add or mov xlat lahf popf or adc orb aam fidivrl and sub cmp add xchg fisttpl lea stc imul test or imul and cmp mov es and xchg push sbb popa data16 pop push cmp dec mov jmp aaa fs fsubl pop cmp mov test pop xchg mov cltd cmp add add roll lret mov or inc adc xchg lds outsb outsl mov sub les ror add mov stos pop inc mov sbb ljmp cmc mov jge pop add cmpsl aaa push sbb xorl and cld xor ret cli xchg sub test loopne movb jo inc lods fiaddl shrl push jns and movsl or cmp fldt out es in xchg aad loop inc cmp mov xchg rcrl out fnstcw add xchg lahf test adc mov push xchg loope and pop cli lds test xchg mov fimul orl mov sbb (bad) mov jns push jo inc pop enter cmp xor fisubl push rcll mov inc imul inc lods push inc nop xorb stos dec subl (bad) roll pop lret cwtl mulb popa mov dec cmp mov lock lcall and mov inc xchg (bad) shrb arpl dec xchg nop xor add add insl sub test jge jge repz lods or sub std dec or pop or fisttpl mov out shlb lcall out lock mov out jl or lods cmc add (bad) enter or je nop pop jl int call hlt enter daa jns faddl mov into lods pop mov outsl fisubl dec xchg jbe pop mov jmp subw cmc inc mov push jp push sti jp mov gs inc outsb sub cli xchg mov add add in pop jmp mov push or add leave mov sbb (bad) ds adc add mov xchg fiadd and xor fistp mov aaa push outsl dec shrl outsb cmp add mov ja mov int loope sub (bad) mov insb aam verw vunpcklps fisub jo dec inc movsb xor jb add out push push lock adc add push repz mov add add add add add cmp js adc sub mov xor out notl jecxz shll or pop (bad) jne popa mov inc xchg popf mov xchg cmpsb cmc popa lcall sbb vcvtsd2ss sbb data16 out push enter pop dec mov xchg aaa jne scas lcall xchg jne in daa imul fidiv (bad) fsubrp js aam mov sub cmp xor rol adc fst lds add jl xchg mov in pop ss xor repnz leave fs or icebp data16 xchg hlt icebp inc ret dec xchg aam testl sbb into dec out dec sub mov mov cwtl rcrb ret jo push das js mov mov fstl cltd outsb and into push int3 push inc jns add call mov sbb (bad) pop push repnz inc xor sub sub cwtl aam sub or sub and mov add add add dec jbe outsb jae popf sub fmull shlb xor push fcoml jmp mov cwtl add in and loope sbb (bad) mov or xchg lahf xor and int mov xchg in fidiv fwait js and xor or mov pop hlt sub sub xor mov (bad) lret push in mov data16 jmp push push jle adc dec xlat in loopne sub jmp out imulb aaa aam sbb add add add and add jno aam adc cmp mov mov lret cmp loope mov stos stc mov mov lcall mov jbe pop adc leave cmc push test add mov lods (bad) lcall mov movsb leave (bad) (bad) jb cli push popf test lahf mov fbstp and cld pop xchg jecxz test cmc movsb es test outsb mov sub xor cs xchg xchg push push push clc ficomp pop xchg pop dec lods in sar adc mov xor popa outsl mov add dec jecxz cwtl mov mov (bad) cmc sub adc inc enter mov mov enter out jecxz imul mov xchg mov add clc pop (bad) adc jl in bound rcll mov adc mov adc lods cmc das push push les add mov psllw adc ret test fucomip aam push and (bad) inc arpl xchg cs faddl icebp and xchg (bad) xor call add add add adc inc add xchg cmp mov and mov push mov xchg iret aad xor sub jbe xor popl sbb into out add mov arpl lahf xor cld adc or mov repz and loopne or popf in sub push fmuls sbb lahf add jmp xchg out cs aam xchg or pusha out xor lea pop inc xor cmp or adc outsb push push add add add add enter iret inc movsl mov adc dec std hlt dec xchg fmul xchg add sub int pop (bad) mov shl adc (bad) mov (bad) aaa push je in and mov mov jl lods pop data16 mov scas loope sarl je mov inc push divl dec and jp and test test xor movsb dec rcll rolb sub cltd inc mov dec push cltd enter inc popa outsb mov add add add sti leave test add xlat adc cmpsb mov xchg mov xchg cmp loopne lret (bad) sub push nop sub rcll dec mov repnz pop cmp pop mov push mov negl scas cltd xchg sahf xchg mov inc mov lret imul inc mov and mov (bad) hlt pop (bad) mov pop cmp inc mov lcall and inc hlt stos (bad) jle rcl sbb cmp jns loop push xchg insl (bad) dec pop in dec data16 inc sub ds dec jb clc insb xlat xor xchg and stos pop sti addb xchg or lock ds sub aas sbb jmp jle cmpsl enter hlt leave fisttpl fnstcw mov sbb (bad) sub and mov inc outsl xor out cs nop xchg add sbb push iret mov sbb inc mov aas inc (bad) fdiv fidivrl adcb fimull jae or lret (bad) cmpsl nop sbb pop (bad) fadd pop sar jge add add add roll out sub add sarl mov out pop dec test mov loopne xchg loopne add int (bad) (bad) js arpl bound subl mov xchg xchg jle push push dec cmp fdivrs fucom xlat add in inc out bound loopne pop or ss inc dec push (bad) int3 xor xchg test dec jnp mov mov adc push out fiadd lret les rolb mov add add add add test lock fwait mov cmpsl pushf mov loopne cmp rorl or adc idiv gs mov cmp cmp ret inc cmpsb negl mov pop ljmp test inc cmc aas jmp mov fnstsw jg mov mov push mov inc mov sub daa (bad) testb stos or and ja push (bad) or jae xlat xchg inc pop xchg jl xor xchg fwait mov icebp adc sub cmp cltd into xchg add dec movsl roll icebp pop xor push popa mov cmpsl push xchg mov lahf add (bad) loope xor sbb mov movsb cmp lahf hlt call fldl pop cmp pop fisttpl dec pop mov jae add sbb popa add cmp add push xlat mov pop lea lahf cwtl (bad) sarl push pop jmp inc jle in addl stos mov cmpsb ret dec xor int3 sbb dec (bad) popa (bad) push mov add arpl or fstps inc iret idivl mov rcl cmc mov mov fwait sub pushf movsb fcompl icebp cmp cwtl pop mov dec cmp adc aam leave add mov bound dec fsin pop adc loop xor ret outsl sbb adc pop sbb xor shrb imul jmp rclb cmpsl inc clc jl repz or js mov lea cmp add add add jns cmpsb fdiv push jns lret push sbb add popf mov sahf lcallw xor jo dec ja add push fidiv je xor mov jp or ret test jle outsb mov leave jmp pop ljmp and popa xchg lods js mov adc and or push mov (bad) in (bad) jmp or xor xchg stos addr16 cli lret mov sub scas fldcw sub or mov gs mov loopne mov subl pop or nop push aas ficom add push mov fldenv ret js and imul fdivr adc (bad) int jle (bad) imul add in xchg xor sarb dec xchg dec insl dec iret in and sub addr16 cltd movl aam sahf lcall fildll push jmp (bad) ljmp fcomip jmp popa lock iret mov adc outsl add xor add add add mov insb stc fwait xlat mov fdivrs jbe xchg jns loop enter addr16 lret insb call hlt add sub hlt and dec sub andl test mov add aad ret scas mov addr16 popf icebp inc (bad) rcrl add das xor outsl pop test mov push gs cmp pop mov stos pop pusha lods and addl dec jl inc stos (bad) push mov add add add add inc adc cltd mov jbe adc cmp leave push popf (bad) cli inc fs dec mov adc add (bad) push mov (bad) (bad) dec cs aas push pop shrb xchg pop dec mov xchg jo (bad) or add mov ficom scas divb or sbb sub mov mov pushf pop lods add leave add jae test shrb nop dec xchg adc dec inc mov push sti std push push xchg push add jmp add add add jns popa flds scas in xchg mov into shll cmp mov adc push out daa insl stos mulb dec fcomps in and or mov dec ret lds insl jno pushf js push lods cli test jg cwtl push jo jnp and ficomp and cmpsb movsl sub xchg push out ss roll not ret rclb iret lds cli stos pusha xor addl cmpsb test ds imul add add dec pop inc roll and inc and or stc inc pop mov pop add xor add test jmp mov xchg fptan (bad) mov enter test inc (bad) notb rorl and mov mov cmp and lahf mov xorl pushf sarb and inc xchg inc and xchg or ds mov stos cmp adc fstpl outsb jno adc decb fnstsw jecxz aas outsb dec mov add add add in (bad) jo inc jle addr16 lods adc sbb xchg jns int3 test sbb iret push jecxz sbbl jl stos les loope mov mov push in mov fnop xchg add in insl les jne sub mov dec mov cmp cwtl jl (bad) sbb dec sbb inc movsl lods shrl or jmp xchg xchg fildl add ret add mov pop das out inc mov movsl push sbb test popa add add add add push sub jp hlt push (bad) fadd pop xchg jg dec cmc movsb xor jnp loope push daa je mov pop pusha mov loope icebp imul mov fstps inc inc lock ja daa insb divb out xchg lock pcmpgtw adc dec cmp push in mov xchg call stc xor lahf mov push (bad) and popf int pop popa stos jnp xchg jmp shl je add jge lods add pop adc add pop cmp aaa jno (bad) jg add jo in clc or add aas mov pusha add punpcklwd popa shlb mov ret mov pop mov (bad) rcr fpatan or xchg push loope inc cmp in mov push push xor jge jge jb rolb aam mov cmp rcrl mov cmp inc pop ret or xorb add mov pusha pop xchg loopne push aaa push (bad) xchg mov lret dec leave xor push dec inc sub add add add mov loop cmp inc cli out movsb push (bad) jb mov dec adc (bad) aam mov adcb push test in movl in push push leave push adcl mov jmp fldt lret dec pop mov lods (bad) out arpl adc cmp jecxz mov or mov ret imul out adc push pop sti mov outsl sub cltd xor sarb cmp adc addr16 fidivr rorb add add add aam (bad) sub push and outsl push xchg lds aas push xchg cmp lods and test mov daa fildl xor loope outsl mov or adc or adc ret xchg jae inc imul jb jmp test xchg arpl adc jle dec add jne mov mov gs in lret testl push pop cmp shlb stos lcall push mov lock dec pop cmp into cli xor sahf and jbe mov lea add add add out (bad) pop inc or or loop add popf enter jae cmp jmp scas pop adc dec leave scas inc gs dec dec push dec adc mov add je mov jecxz fwait stc mov mov jmp jmp jle or pop pop out add jecxz jo movntq out add xchg movb sbb into inc jp push lods inc sub fs cmpsl imul mov movsb jg outsb push lods mov pushf jecxz scas push xor add add add add jecxz jl hlt mov icebp nop cmp mov sub bound jno sub xchg mov inc pop cmpsl lds gs fdivs adc and frstor (bad) push andb ss rcl bswap (bad) sub jo lret xor imul pop dec movsb loope outsb (bad) test inc nop pop and cvttps2pi cmpsb ss sbb xor test or add sub test inc notb mov ss (bad) sbb fcomi or jl mov fstpl xor dec jb enter push and jmp lea clc ror pop inc xor (bad) movsb icebp dec nop ret addr16 dec or push arpl roll rcl cmp mov mov fwait sub push dec dec out jo divl daa data16 repnz sahf das bound and outsb jl sahf inc (bad) xor pop (bad) or ss add pop fistp jne aad test push lret in mov (bad) call pop lods inc xor mov inc push cmpsb lds sub push or imul xor fldenv enter dec mov (bad) and adc mov jle lea add ds cld cltd enter jmp leave xor xlat mov outsl and data16 les adc dec sub cmp sahf (bad) fldt push or scas cmpb pop add mov (bad) mov inc es cltd pop xchg cmpsb bound adc and pop insl sub daa pop aas sub dec add add add jp sbb xchg movb xchg push imul cltd dec loop dec bound dec fsubrl push jmp pop sbb mov xchg loop test xor dec nop out ljmp sbb cmp in mov cmp pop and xchg xchg insb pop pop out sbb sbb imull (bad) fs aaa xor repz sahf push xchg inc lret into sbb jecxz jecxz scas mov fisttpl ror adc add add add adc outsb push sub jns pop add pop mov pop scas mov (bad) mov inc lods int add add add fndisi(8087 mov fnstenv fisttp xor push pop mov daa std mov mov int xchg push jns out mov inc adc stos (bad) lcall gs es arpl cmc popa js xchg ret push sub mov mull dec adc test repnz dec rolb add add enter or and ljmp pop repz cmc cli outsb lods cmpsl and cmp test xchg mov fwait movzbl scas lods and iret cmc addl test dec or scas or jno lcall (bad) mov xchg in and dec and test jb jge stos ja jo scas xor (bad) ljmp imul das movsb mov push cmp push insl xchg cltd (bad) pop push adc cmp jae fldcw cmp out add add fistpl gs mov insl movsl sbb and in or insl (bad) xor stc ret iret into out jg mov jb cmpl xchg fnsave imul push cmpsb (bad) outsb jp sub scas (bad) loope dec cmpl loope xlat addb inc in xchg push repnz fisubl add out iret mov dec lds sbb rorl sbb mov insl or or in xor cs push inc jmp add add and adc mov out pop dec call (bad) push lods mov idiv andl aaa jae rcrl adc push mov dec cld pop pop jns (bad) mov dec mov mov sub out aas fisttpl dec popf in loope aad mov adc jle xor test stos ja mov push mov xor inc ss xchg sar (bad) push xchg push inc dec ja mov pop (bad) sahf lods cmc aaa (bad) iret aas fidivr daa in xor pop (bad) call fneni(8087 add jo pushf dec enter and mov outsl pushf lea fdivrl dec push ret cmp sub icebp mov push xchg mov and adc hlt and cmpsl push push push mull pop and or cmp adc push and sbb out or jbe sub (bad) enter add jmp pop jno or sub movsl (bad) (bad) pop mov ret mov xchg shll test mov lods dec dec pop add rcll add add add call mov js sub jmp lds push adc int3 inc sarb out jg pusha out popf sub std repz mov jmp mov out rcl loop iret mov adc mov fistl outsl and sub inc or add push std push mov push add pop icebp cmp xchg fs lret (bad) cmpsl (bad) xchg jo loopne dec mov sub xchg cmp inc je jae sub fs xor jg jmp add add cmpsl add sub aad mov cmc cmp (bad) in dec outsl or mov orl sbb dec sub test push out mov jmp cmp icebp (bad) fldl faddl adc add sti sbb cmp daa push and scas mov (bad) mov fucomp jae lods nop xchg mov push jl xchg add jnp popf xchg jp fdivs mov hlt popf mov je imul enter test mov mov xor jle psubsb pushf add add add add scas mov cmp and mov inc mov push jnp mov mov fs js (bad) loop lret add nop loope or test adc mov lcall add addl add inc push mov fistl inc adc mov mov pop (bad) xchg (bad) hlt or add and cld ja jmp mov arpl and loope mov xchg hlt out pop fs mov stos test add add mov dec es jge cltd and inc or repz cmp inc std cmp fs sbb sbb and jo and push clc cwtl mov mov lahf test decl aaa icebp mov dec add mov mov not movsl call lcall (bad) repz or test pop and pop mov push movsl sub in inc shl (bad) and jmp push inc inc add insb addr16 cwtl mov mov add add add add movswl xchg dec sub inc test sub jb dec daa ljmp mov hlt mov sahf mov pop adc mov sub inc and (bad) dec dec add popl inc call (bad) and jp xor data16 jns xchg cmp dec aad into es fstpl rolb fnsave push es push or xchg adc sbb loope or mov mov lahf xlat gs xchg lea add add inc jl or or testl js ss fsubrl push dec push (bad) repnz dec out pusha add xchg jbe out dec inc or add (bad) mov or loop ss jg mov mov (bad) mov dec pushf (bad) ss fldl xor mov xor xlat add cld push add (bad) dec les mov aam jecxz ret cmpsb imul ret xlat inc inc imul mov add jp dec ja cmc jl inc adc ja inc repz jmp add add add inc mov dec fisubl jno and mov push jo sti mov mov test lea jno clc lret or das testl push lahf arpl lds xlat mov cmp adc stc inc aaa stos adc sub push jg sub mov shr xchg jb pushf adc inc adc cltd mov inc mov lcall adc sub jne dec push stos push adc sbb stos add cmpsb (bad) imulb jne mov lock or and orb add xchg fs adc aas mov inc ret xor (bad) mov addr16 lcall add hlt lcall jae or aaa leave xor sub sub pop adc and jmp inc mov pop inc add test (bad) in ljmp pop mov add cmp lock mov and jp adc wbinvd add adc out inc lret jae testl add add add or int3 roll out (bad) cmp xchg lea inc mov and dec mov inc scas cmp jecxz,pt mov lret push jbe lahf and pop mov pusha jbe mov test call repnz (bad) imul sarb stos push xlat or inc inc xchg stos or sbb pusha add add push xchg inc scas (bad) or in dec addr16 push or xchg mov jae cs clc push enter das pop outsl lcall jne fild add add add mov imul xchg fdivrs aam push aaa inc sbb pop inc ss add lret iret inc adc dec mov addr16 xchg or movsb dec mov ja lods popa mov lahf push xchg jns mov sti pop je sub jns int sub and cmp push jae mov popa insb adc push mov sub aad loop xor gs add jg mov aam sub pusha sub pop add xchg mov outsb lock test nop xor cmp inc imul fs fdiv (bad) sbb pop mov bound test sub add add xchg add ror pop test nop scas dec sbb mov adc cli insb dec int3 fisubrl and and ljmp sub dec add leave (bad) in fidivr mov jecxz jo xchg mov fs or test jl add int3 inc xor nop fnstenv popf push nop xchg jp add push mov (bad) adc fsubrp dec mov adc add scas sbb push leave scas mov add int3 sub in cltd fbstp fscale scas cmpsl add xchg (bad) mov call cmp js push lods dec sbb in pop mov pop cmp inc xor out sbb (bad) (bad) enter pop xchg mov sbb cmp (bad) jl mov or les xchg lds or pushf (bad) pop imul xorb cmp push imul jae imul mov adc stos dec incl lahf or adc leave jae jbe data16 jge mov arpl (bad) jb push pushf out jmp xchg rol movb mov and dec or xchg sbb iret cs sbb (bad) mov or lcall rclb push sub (bad) (bad) adcb (bad) das cld movsb sarl or or sub aad cmpsb test fild aam dec inc cmc mov notl jo clc sahf sbb inc daa push loopne ja mov pop dec lock push push out mov fimull scas aaa or xchg lods aad cmp scas stos (bad) pop jle push enter movsl mov out leave sarb inc js pusha gs mov pop inc test ret or pop and loopne push jo in push out in push popa adcl repz push mov adc add add ss push enter sbb mov jns jg pop add (bad) in inc or popa gs arpl mov or jmp mov aam in (bad) fildl dec push jp aam (bad) xor fiadd aam mov lds aaa iret neg xchg adc jns add stos push lds stos imul adc dec loop,pt (bad) cltd and and pop sub (bad) push test or jg push mov sub cmp faddl stos mov push add stc mov mov dec mov gs test subb adc das lcall movsb mov sahf (bad) hlt aaa add clc (bad) dec and mov cmp fmuls stos cmp add daa mov pop or (bad) ljmp mov cmp jns sbb jge (bad) in jne (bad) or jmp das pop popl or mov xlat fnsave popf bound mov push pop outsl mov xor pop mov cmp add push cmp push pop dec int mov xchg push stos ret arpl sbb sbb or mov lock arpl rorb add pop ror jl adc int3 in cmp jmp (bad) jb sbb push sub cs dec adc add out push rcrb mov sbb adc xor pop push sub mov xchg or xor dec sub daa xor mull dec push dec pop fsub xor sub jmp add add add add sub mov andl adc mov fimul adc jmp (bad) pop aas js cmc mov adc inc iret (bad) int3 and jbe ret xchg xchg mov adc inc cwtl push mov bound xchg mov push dec int sub pusha add jge jmp decb push or dec aaa sbb repz mov push xor and sbb out popa pop lds mov das fimul int3 add (bad) nop fwait mov xor add add cltd mov push fs (bad) xor (bad) call inc movsl cmp lds popf cltd ror es fdivrl cld fidiv jb pop adc fwait xchg sti push cs daa stos mov add cmp mov xchg add iret aad or cli mov push rcl inc inc pop cmp inc (bad) out and roll mov je push sbb dec push xor pop (bad) and adc in dec fiaddl jmp jle adc adc add mov add add or lret rcrl jmp jge aad cmpsl mov mov dec jnp and das jnp adc lock stos push and roll push pop aas sarb cmp dec (bad) push xor add sbb jp xor in gs sub into jecxz sbbb cwtl pop fisttpl out push jl push mov adc xchg loope sub sbb insl lret or out mov lock inc and sub push dec leave push test mov fdivl cmpsb add add add or clc xchg pop push sbb add add cmpl mov mov aad sub add (bad) aaa (bad) adc (bad) fs cmp mov mov mov movsb out pop jp cmpsb hlt add les and movsb (bad) lret sbb adc xor mov jbe daa mov pushw mov rcl or std (bad) xchg data16 inc push outsl pop dec sar or shr roll addl add add add add push mov inc dec bound std or fs test sbbb (bad) aaa aaa nop mov cmp int3 cli push adc pop (bad) and inc sahf sahf fsts sarb and int pop in jae int add adc mov scas pop or in int dec mov out lahf subb movsb int xor jbe gs jg and fwait loope leave loope push (bad) aam xchg lret ret mov dec mov hlt (bad) popa lahf into pop mov jg,pn mov jmp add add add add or add (bad) push and mov insb movsl sbb es cmp ficoml add add add shrl out jmp pop or xchg inc call jmp (bad) mov mov fimul jbe or lods inc mov mov lods subl fist fstpl push xor dec push and mov rcll xchg xchg ds adc fstp sbb jb jle nop addr16 fsubs pop decb add add or adc and xchg shll mov fwait movsb inc sub out ss in aad into call push cmp add mov jnp shr xchg cs test dec jb jns gs mov push mov pushf add (bad) iret jle pop iret sti out pop mov pop stos orl jne jne pop js in imulb addr16 test (bad) adc mov sahf xor enter cmp cmc data16 test add add add inc int outsl sub btc repz ds mov repnz outsl dec pusha rcrb lahf ss mov adc imul inc xchg push call mov stos cltd shll push mov mov jno mov test test repnz dec cli lea sub or test adc addr16 scas push in je lea push sbb add inc sbb push scas inc sub loope mov idivb xor cli mov loopne mov add xchg flds sub pop mov sbb call mov out data16 add sub fdivs test fidivrl nop std xchg lret jg scas cmp ss sub scas mov incl sbb mov fiadd cmpl or xlat in dec jnp sbb arpl mov add jmp sbb add inc fcompl sub fs movsl xor mov jne xor pop shll xor int3 movsl adc aaa aaa nop/reserved insb inc rorb add add add cmp mov sbb dec movsb insl jb lods inc mov data16 cmpsb test and lahf je adc jg les sub call inc stc es (bad) lret fisttp loope mov pop scas lods dec push mov add add arpl lahf add xchg outsb pop add test mov jo test iret or xchg pop std repnz pop fbld jbe stos pusha sbb popf push push fnstcw xor pop jg add add arpl jo loope xor inc test jmp rolb imul jecxz test add dec xor pop add push adc mov addl roll (bad) cmp push in js loopne dec adc pop fcomps cli lret sub fildll movsl ss pop add adc lods in xabort roll popl pop daa bound push popa sbb rcrb fisttp clc imul sbb sub inc pop pop arpl divps add add add ds ret jbe leave mov js (bad) mov fildl out clc inc pop pop cmp pop jbe lods jg push or add cwtl sti sub and jae jge,pt and pop (bad) movaps jge pop shrb stos int3 sbb jmp push arpl test xor sar jmp rclb repnz adc xchg mov cmpsl test and in mov jl adc fs xor jp xchg jmp leave (bad) jecxz stos sub xchg jne ss cli scas add lds (bad) jle xchg push shrl lods repnz popf add dec jle iret push lods stos sbb andl pushf xchg fisubl addr16 dec pop and xor xchg pop out lds dec int3 addr16 stos jle in les mov cmp adc and sub adc adc push out adc jl out sbb mov cmp scas scas (bad) push mov xchg fistpl loopne mov fbld je mov clc (bad) call arpl xchg aaa sub orb out pop sbb push inc stc ficompl sbb iret (bad) xchg rcll dec mov rclb push dec mov mov sub xor mov fwait orl mov dec (bad) iret xchg (bad) dec and sub insb mov movsl push push test adc mov and pop sub mov mov lods and adc cmp jns lock mov movl add nop pop adc icebp cmp (bad) loope or ret cltd pop loope jg js in fcmove ret xchg push idivb cld push leave rorb int3 movsb shl push pop nop scas sbb xchg cmp test ss xchg cmp and cmpsb sbb push lock xchg jmp or xor mov pop data16 pop add and ss jne mov mov dec add ljmp mov lret jnp fild mov adc and pop mov roll add add add loop dec dec into mov inc dec lret xor push cmc in scas js mov dec leave aam lods xchg cwtl getsec icebp xor jne insl minps add out sarl add xor pop jno (bad) push inc idivb mov xor aas fwait mov call stos popf pop dec push es rep sahf jbe jb orb xchg xor scas cmpsl mov ret dec sub jnp push dec out mov rcl sbb sbb (bad) (bad) add mov add xchg frstor subl add add add add cmp adcl adc jge sahf idivb pop (bad) xchg dec fisttpll in loope adc mov rcr sub out (bad) cld cwtl adc ja add imul or sub nop push and adc cltd inc fistp push inc loop adc lret dec inc in lahf test ffree es sub pop jp nop stc rcr jae movsl sub lahf add push pop push push cmp movsl jne lcall mov add add movsb push sbb push (bad) or in dec movl cmp add lds or push ds sbb ror jp sbb xchg fstpt and push iret ds dec out outsb cmp push cmp jmp stc ljmp fisub lahf fistpll inc insb cmp ds test aam lahf imul aaa mov pop sub (bad) (bad) (bad) sub xchg js outsl rcll jns jle jmp lcall bound push mov (bad) pop pminub and fidivr dec push sub jae cli xlat dec popa add mov adc loope cmp out cmp mov jb mov cmp xchg (bad) aaa lret test ds mov cmp fnstcw mov mov push sbbl lret and dec add jmp jmp cmpsl or mov mov jae pushf xor push jl out pusha insb sahf lret add sub add add add mov xor push xor je cwtl adc cmpsl mov jb (bad) jo push adc cmpsb inc xchg fwait dec mov shrb pop mov loope les jl das push (bad) mov push cs mov mov and add jne aad push out push popf sub icebp cmp insb add xor xor push mov push inc test jne jecxz cmp jmp rcl fidiv push pop cmc mov push pop xor sbb test add add add ds daa xchg sub ret lods or sbb sub xchg fucomip aas sahf inc mov xchg mov jo and (bad) stos enter jb,pn (bad) lret and lods out ret cmpsb or sbb inc loopne or mov cmpsb xor cs cmc or cmp cmp and scas or mov pop push out push xchg pop mov push test add fdivl aaa push xor dec lods push fwait aad cmp and xchg add add add jle adc in mov and mov mov xchg add pop adc push push push mov pop (bad) jae in push push dec insb subl mov sbb or dec ficompl fisubl popa ret inc mov aaa xchg pop mov arpl xchg ljmp clc ret daa dec jge mov xorl mov jnp shr pop cs mov sbb and scas cmp push xchg mov inc xchg negb data16 add add outsl or jns cmc push fs push xchg es jg mov jge cmp xor bound pop sub mov lods loope call sbb mov iret (bad) dec addr16 push dec lds add insl movntq out ljmp lcall popa push mov adc enter mov popa cltd lods test pop sbb aam lods sbb xchg jbe jp add mov out pop mov lds lds mov and mov aam loopne mov add add add (bad) into cs lods popa or sbb jb adc mov (bad) jo mov inc popa or sar inc xor or pop out arpl sub mov outsb scas jno pop inc and mov pusha pop pop addr16 mov in iret stc lahf inc xchg and xchg dec mov es and inc mov ljmp jns mov arpl pop lods ret xor leave jae fdivrs (bad) repz or fiaddl movsl (bad) sbb inc sahf mov mov dec add add add mov bound pop jle out add (bad) xchg icebp inc es movsb and jge xor dec push sub inc add test mov stc lahf or jo mov shl stos int3 xchg adc sub sbb ljmp pop ret inc pop mov pop pusha popf inc push sbb cmp mov and shrb sbb clc mov stos popf xor arpl js sbb lea test or lds dec aas popa add jb mov in and add xor mov pop rep jno lods sbb ds movsb (bad) xor (bad) in and xorb div cltd sub push mov cmp or push flds or fcomps je and push stc pushf fstpl jle mov in add mov adc mulb sub mov nop push stos sbb sahf push or adc sbb mov xor pusha add add add out mov stos jo sbb or xchg (bad) xchg ret adc outsl adc pop int lahf jg xor lds enter pop push test shrb mov sbb add inc and dec push or sbb scas les lret rol scas mov icebp outsb inc hlt insb (bad) push mov mov xchg (bad) jmp xchg les adc mov idiv mov movsl or sti jle add mov cmpsl das rclb lods pop add add add pop loopne rolb mov xchg data16 xor pop aam push bound jg,pt (bad) xor rclb xlat pop add mov xchg mov push or add sarb in jno jle lock ror vpsllw mov fstps sarb xchg mov jne mov add and rol repnz mov or outsl xchg sbb daa ret and or cmpsb (bad) insl jmp cmp pop sahf jns arpl or mov add add add add cmp loope test aaa sti mov and or sub fsqrt fcmovnbe sub iret mov sub lcall pop enter cmp mov xor loope mov mov mov inc lret (bad) push mov mov sahf out aas test and mov pop jo test xor es cmp stos (bad) pushf (bad) xor rorl adc cmp wrmsr sbb aad aad (bad) push inc dec xor add add add out jo sub cmp and leave ffree sarl add (bad) and push insl in hlt inc sahf adc mov mov into mov inc pop cs fiadd rolb ljmp lret mov xor add jmp add outsl jno sbb push inc cltd cmpl cmp sub in aas fwait outsb rcr cmp andl ficomp ficom dec ljmp mov pop sbb in in stos sbb iret push adc add add add mov (bad) fildll jns cmp pop ret out loopne push notl les mov shrb push mov clc sbb mov rol movsb cmpsb insl pushf stc cmp push dec sub or jg mov adcl les xchg fdiv sub rolb inc sbb negl iret iret hlt sub ret jge imul fimul out add out push push jl in leave in push aam and mov sbb int cmpsb arpl (bad) add add mov xor std inc jg (bad) pushf sbb cmp push mov loop or xor daa or lods or fsubrs movl repz repz pop test movsl setbe or inc bound adc lret push adc shlb in push sbb fildll sbb mov loop enter xor lea xor int3 repnz lcall add (bad) ja paddw cmp dec jge je dec out add add add shll arpl xchg adc lods (bad) push mov and int3 stos mov adcl loope pop cli les mov fimul sarl xor ds pop adc add mov jno cmp cld pop and push pusha jle push dec and adc jg cli mov movsl fadd mov and jb lock inc scas push les fstps lret fst inc std lods inc and xchg (bad) adc sub (bad) stos sbbl and add add add add clc mov outsl push popf xchg (bad) std push add nop or push mov jae sbb andnps les imul andl mov rcrl test fstl daa mov xor pusha arpl fld insl lods loope fstpt sub jo sahf mov and jecxz je test shrl mov aaa or cmp mov adc sub cmp xor dec mov (bad) loopne pop dec jno pusha jnp cmpsb push lea inc sub push cmp add push dec mov mov das inc into xchg leave xor sbb and js xor (bad) inc nop in movsb or sahf cmp cld inc jmp inc add in shlb in mov jp add sub adc repnz xchg xchg ja mov fs mov lods stos mov jl sbb or add sbb out sti inc add lods aam xchg fldcw fistl insb sbb jge movsl out jp into sbb mov and insb dec test cld pop lcall pop adc push insl lcall fiadd fisttp cmc (bad) fisttpll ss push or inc (bad) outsl imul mov movsb test sub push xchg stos lret ljmp inc aad aas or pop out std outsl mov lret dec outsl xchg xchg jo push dec ret mov mov std mov inc icebp ds push jg add ds hlt xchg xor aas sub or add add add cmc es mov mov adc sub sub dec push sbb and add into sub pop repz lock imul movsl sarl mov inc dec (bad) shrl (bad) fdivrs sti jp not imul fnsave jb cmc add and inc das pop imul xchg lods sbb cmc in mov adc jno imul push dec or test cmp add add add cmp dec push mov repz xor push ror jbe sbb dec adc dec fsubrs cmp lock test inc add pop jne (bad) mov or fsubrs inc inc (bad) lds aam inc roll mul jae dec mov aam test cmp mov mov cmp ja gs clc dec xor adc push mov dec inc ljmp push movsb jl cmpsl pop pop mov mov stc (bad) xor test xchg inc data16 add add add loop sub lret (bad) sub add xchg add lret dec fptan xor test jp sbb jmp pop jno pop test sbb (bad) lahf por lret jmp lock leave cmp jmp mov std ret add shll ret roll lahf lods (bad) push jle add cmp aam lahf movsb xor or jp leave and mov push cmpsl mov and cmp in insl test cmp (bad) cmp inc and inc test dec je and add add add add in and jne mov imul mov shlb mov or shr out lcall and insl mov xchg dec jecxz sub je mov popa jecxz lock scas mov insb addr16 imul push dec xchg or imul outsb pop mov push pop nop lret lcall push xor adc jae cmpsl sbbb jno jns mov add popf (bad) mov mov xchg je inc adc pop lds fadds add add add add cmp shr dec call xchg stos outsb stc ja inc xor pop cmpsl cmovno push mov adc mov cmc jne,pn rcrl mov inc add cmp addr16 inc dec ret rorl pusha push mov sub outsl pop (bad) ds inc xchg xor lds jp push or pushf mov sub mov lret or test xor xor out leave int3 pop or push sbb and adc jnp jno (bad) (bad) adc mov into pop push add add add sub (bad) std mov dec aam push mov into mov aaa xchg inc dec int inc push sub ficoml dec mov aas rorl popf enter clc cmp pop xchg jo or dec pop jo xor add (bad) loope ret cmp insl stc sub push jp mov dec les xor adc out loop push and cwtl pop das addr16 mov push dec cmp fistpl cmp insb jle mov imulb and addr16 sub stos add add add add mov xchg test gs adc pop mov cmp sub lock loop mov sti or mov inc std mov call cmp mov stc divl sbb sbb aas (bad) loop fisttpll mov clc sbbl (bad) mov adc popf mov xchg jns jecxz dec jb mov adc mov outsl sbb (bad) shr cmp push cmp rcrb lea jne mov cld add cmp scas push mov add add add lods mov and pop sbb xchg xor mov add mov lret sub nop icebp test clc xorl test xor in cmp cltd pop fdivs mov or bound pop shll adc pop sbb mov xchg (bad) xor push and mov jbe pop sbb data16 into in outsb (bad) or push cmpsb push icebp xor mov std inc imulb pop je push pop idivb lds test divb (bad) mov (bad) iret sbbb xor shll add add add fsubrl lret mov push xor xchg in ja or jbe cmp es outsb dec dec sub pop mov in sti mov push inc sbb imul jle test xchg jecxz inc mov jl hlt jnp or repnz addr16 mov cmp xchg mov rep cmp mov sub fisttpl (bad) mov out fsubl minps (bad) ja in icebp mov inc and test (bad) cmpsb cmc icebp mov movsb xchg mov in addr16 cwtl stos mov push pop xorl push pop fwait add mov mov adc flds popa pushf in mov jg out pushf loopne mov insb xchg cli ret jb adc outsl ja adc sub test shlb jnp repz xlat mov jne (bad) out add std mov jne mov mov mov xor add fs ret mov (bad) lds movsb repz imul sbb out pop incl add add add xchg dec insl cli dec rolb movsb ja xchg imulb enter mov pop jecxz inc and adc lock ja (bad) ljmp mov add adc pop cmc aam (bad) movsb outsb aam jge out popf movsl mov (bad) pop sbb cli loope scas jmp repnz ret daa enter bound stc add pop adc lods lret jns xchg int xor jmp sbb pop xchg test mov stos inc sbb imul fwait std into dec jae add add add add sti and cmpsb ds out fldt je repnz ret inc popa (bad) mulb dec lret mov xchg stc popf out push mov arpl push or push gs xchg es jmp add sub mov adc fmul xchg nop mov xchg adc or out out lret sub or inc cli mov sub fstps lds dec or jmp nop fldenv pop subl push stos lods inc outsl sbb mov add add jmp shrl add jb (bad) ja xchg xchg and xor ja fcoms js enter mov popa mov push jo xor in test ret js loopne cmp loop push test xchg dec sahf je jnp pop popa pushf jb enter inc jle mov fisttpl push int3 imul js inc xor (bad) jbe popa dec aad ret dec fdivrl popf negb jle icebp outsb fsubs hlt shrl pusha pop loop mov mov mov add add add out jns cmp in cli cmc gs icebp mov arpl mov lahf arpl xchg add mov pop xor data16 lea fldenv or out pop xchg popa push mov (bad) mov and loope stos out pop daa xchg jp in std scas fs (bad) into mov lea add sub test nop inc add movsb jno movsb pop xchg lods fs test jecxz xchg adc test std aaa and add add add xor cmpsl arpl movsb sub int3 add (bad) hlt cltd ds xlat fldl pop mov rol push inc repnz in stc inc pop xchg adc inc dec ljmp (bad) out dec fmull and js inc fcomps gs loopne das pop addr16 inc pop mov xchg mov adc into nop sub jns mov cld xchg add add repz das lea in stos xchg inc lahf repz leave sbbl xor rorl fsubp out xor jns mov add fldcw rorl and inc xor sbb lret cmc mov push push popf dec jg xchg add scas in and adc cmp roll lcall fdivl lret or stos cmp dec pop add movsl negb or add sub mov inc imul push popf cwtl fnsave int dec lcall jne push or insb inc jmp pop mov mov (bad) scas or in in in roll mov pop repnz add add add push (bad) ret imul push test std enter push mov sub mov xor into or mov (bad) hlt mov pop add mov push mov into add xor inc (bad) dec xor pop jns (bad) cld jg ss adc int lods pop jo out cmp jg repnz pop jae std cmp cwtl push mov cwtl sub clc inc test shrl pop xor nop mov sbb add add add add push daa aaa dec stos push jb (bad) jno shrl inc inc jecxz addr16 movsl pop lcall push insl sbb cmp shlb push push cmp jne push sbb push sub push into cmp or vmovd sbb ljmp pop cmpsl sub in mov push (bad) into imul push mov shl sub mov jmp sub mov sbb cmp pop pushf pusha jg dec shlb hlt insl repz add add add add aam jmp push out mov orl mov inc inc dec add push adc das jae jnp or in pop adc insl jbe mov dec (bad) cmp or movsb stos xchg int (bad) push out sarb es and adc push xchg iret aad pop xchg sub jnp xor roll rcr sub into inc add into stos mov imul lds cli sbb stos into jmp int movsb cld mov or imul mov add add and xchg movsb mov inc and or movsb push mov pop ret push mov movsl or bound xor inc adc loop inc int xchg add (bad) mov cmp sub pop in lret and testl push xor (bad) (bad) push leave std test jp icebp dec inc mov fwait aam push imul push movsl fnstenv dec xor test jge jne mov push cli notl jns push xchg hlt bnd aad pop fdivl push inc jl push insl iret test cmc outsl and cmp iret xchg add add add add or adc ret lret hlt jae ss mov test ss int mov mov loop fcoms xchg jno add add cmpsl xlat bound mov lret push call cli push clc int dec outsl and lcall sbb jns dec mov sti addr16 fwait mov xchg jbe arpl cmp mov outsb call iret enter jb pop in mov jbe fistl fstpl add inc andb adc dec lret imul imul hlt jg mov imul or dec inc mov inc maxps leave pop popa lods aaa fnstcw add fcos pop mov push orl sbb ljmp jb mov or (bad) (bad) mov push es ss add data16 lahf aaa cmpsl adc insl mul sbb mov data16 cmp loop mov add add add add mov add xor xchg adc gs mov lcall and (bad) mov push (bad) or fwait bts jnp fidivr jmp push aad popa shl (bad) jecxz repz repz int3 lods sarb pushf or dec ljmp test fwait lret push sub dec mov lock jb pop sub mov das ja shlb repz mov daa pop cmc add mov mov outsb xchg push rcr or add add loopne (bad) enter add sub pop sahf andl push mov xlat xchg int3 out pop js inc mov testl mov pushl adc std lret in push imul fsubs std inc adc mov test mov into lods nop test into pop aad stos sbb and lds sbb dec and mov mov sbb clc mov testl lods inc popf out lcall xchg mov cmp add add add adc and sub push mov popa mov cmp out and dec jo push add adc hlt inc dec addr16 sti mov out mov icebp in sub pop (bad) jae std enter (bad) jmp imul mov mov dec andl repnz cmc pop ds aad sub mov aam jg out out sti neg push insb aas rcr pop repz mov aaa enter push mov popf pop (bad) fidiv fiadd add add fwait or push cld pop aam push jb cmp inc aaa test push fsincos sub pop call pop shrb jmp jbe inc jmp add mov dec jne enter inc jmp sub xchg cmc nop push cmc data16 mov mov mov adc jo in pop test vmwrite and cmc popf lret cltd movsb cmp cmpl cmpsb loope movsl fisub aas mov mov sbb imul gs and add add mov mov cwtl cmp roll outsb sub add test leave lahf addr16 lcall inc push dec mov adc gs xchg add sbb mov sar add mov and (bad) pop shrl mov mov cmpsb push and lods dec dec aaa nop insb leave sbb lods xchg icebp sub or aas cltd sub lcall out cmpsb inc out sahf std scas mov pushf jecxz lahf mov dec lret das add add add add push and rol sub add int fcmovnbe (bad) cwtl pop or outsb movsb ret je pop (bad) fstpl test push add push fwait sbb into sub mov in mov or push out gs cld outsb out mulb push mov sbb fsub cmp cmp insl push fisubr push js mov pop sahf mov adc aad jns (bad) jbe mov rcr pop arpl mov xor outsb in xor ret roll add sti out sbb icebp mov (bad) xor sbb es sbb push dec test mov push daa shr mov sub sbb rcr cltd pop inc aas les and mov cmp int3 mov add push jge gs dec and fwait (bad) lret push or push cli out fwait sub ficomp mov imul mov loop mov dec xchg add pop lahf push xor (bad) cltd dec xchg jo jle movsb jo (bad) cs mov js fistp add add add add mov repz lahf cli sahf lea add stos sub scas repz lods jne xchg daa imul sbb lock in cmpsb data16 rcr pop std and pop test push pop (bad) cs jmp xchg push sbb (bad) pop inc int3 lds sti mov (bad) xor jbe lds imul mov cmp pop call movsb add lret pushf xor xor in loope dec imul or sub jnp stos (bad) outsb in push mov xlat std call add fiadd add add add mov icebp bound xor dec enter dec js mov mov mov cmp fcomi pushf faddl insb js enter repnz and and xchg ljmp nop jp aam and push out jo or std push pop xor dec daa pushf mov cmp call orl scas jne xchg xor mov adc ja push scas jo clc fadds int fs jp sbb mov cli mov add add (bad) jge dec pop nop pop pop fsubp cwtl jbe fldcw ds movsb mov add fdivrl fwait cwtl hlt cli ds cmp jl push push pop arpl inc add in aad push test xchg frstor out leave pop imul loopne pushl int3 jno and mov cmp dec mov and outsl in pop out decl mov push out lods rcrl rolb add jmp outsb dec gs sbb scas inc pop sub jno add xchg push add fwait add add add and (bad) cs dec data16 jne das mov (bad) mov xor (bad) sbb movsb cmp or sub inc out (bad) or sbb scas cli xchg jmp or cli xchg rorl outsb js out or jne sbb cmpsl xlat enter fwait inc sbb pop scas sub mov outsb aam xchg mov aas mull into (bad) push faddl xchg adc out loop ja sbb scas shl xor jge cmp mov (bad) mov add add add pop incb loop xchg sub jmp icebp js adc sub push cmp and enter mov and cwtl aad pop mov ret jmp hlt mov das jb addr16 jno inc orl mov mov and psubsb arpl out fcompl leave mov ret jbe add bnd cmp pop lahf ss das cmp (bad) xchg stc stos push and lret and clc out xor add add add mov cmpsb dec and cmp mov push cmpsl push aad enter inc inc pop nop and mov dec aad mov pop xchg call sub xor push xchg jecxz cmp js mov icebp fs pop cmp mov sbb cmp dec xchg icebp add aam ret dec (bad) mov xlat repnz adc xor imul push or je inc xchg ret dec xlat push mov mov (bad) test iret push push xor test dec (bad) fdiv adc lock xor es das adc add add stos xchg aam pop xchg imul pop test pop xor leave test bound jnp mov mov bound pushl mov in push sub imul mov sbb fidiv loope mov mull rdtsc xchg sahf sbb sbb fyl2x roll mov popa dec rolb enter inc jmp in in (bad) mov cmp inc (bad) out fimul fsubrp fwait or gs mov pop or fadds add add add xchg or mov cmpsl sarl cmpsb dec out fs loopne aas lea imul fwait sub pusha inc ja or jmp dec cmp (bad) movsb cmp sbbb movsl inc test and sbb aam cmp out lret ja jae enter and lods adc das lret or pop pop mov fdivl mov push ljmp xchg sbb cmp addl loop imul mov in dec sbb cmpsl push aas data16 add add add pop mov push xor xchg call enter sahf mov inc gs roll lret inc inc push push scas mov arpl aaa sarl loopne inc in testb mov and mov cmp mov add dec mov scas call push gs sbb add jp xchg xlat (bad) (bad) mov mov xor or adc subl xchg sub les push adc add add fs push sub aaa pop xchg mov repnz iret aas or sbb cld inc or testb mov push imul mov or and push pop (bad) mov or outsl add ret fs (bad) cmp subl push enter mov inc push xchg inc sub xchg and mov outsl cwtl jge jle sub aas hlt sahf mov pop mov fstl jp (bad) jo int3 sub jmp out cmpsb inc cmp je mov ret add add adc xor pop mov out mov lea lods dec inc out sahf dec jp mov addr16 push cmpsl arpl ja lcall xchg sbb leave sarb push adc or aaa mov xchg pop (bad) in xchg fstpt push jne inc push push or (bad) jo mov cld (bad) leave jbe lds add cmp push cmp jge xor mov out mov (bad) xchg les fild inc ss add add add add hlt push ret fmulp in push pop fwait pop mov mov sbb andl mov inc xor add and cmp out fdivl in cli cmp enter inc pop sbb aad fdivl adc repz cli mov (bad) mov nop leave and mov in mov dec sub ficompl imul out in cmp xor shll or xchg mov outsl push cli jl adc fcmove mov sbb jo jge xchg dec stos sbb clc pop dec dec test sahf pop or lds adc (bad) (bad) aad pop roll aad into rclb or pop in and add ss popf loopne mov or mov (bad) pop scas sbb mov cld sbb mov out xor test jg or sarb push (bad) ja lret lcall xchg cwtl jg cwtl pop cmc mov ss xchg ret es mov nop repnz add add pusha push xchg dec cli push js loop loop scas sbb sahf cmc ret cmpb add xchg and loop pusha lret mov mov popf xor in add mov jne scas in and arpl out inc hlt loop leave add in in (bad) mov fisttp push shld test jle popa sub xchg mov int3 push mov mov scas xor fadd jbe jno xor sbb xchg mov add add add add or inc popf imul in out dec fmul pop inc inc push mov sub fstp ret fiaddl push (bad) mov inc xor (bad) adc pop sub ret aad dec in lods and mov cmp mov push push push pop mov pop and push xorb pop xchg (bad) dec loop xor (bad) incl pop xchg fnsave jp (bad) adc push cltd and sub aad mov hlt insb cli out or or xchg sti xor test add adc repz cwtl or not ret fsubrs mov jb (bad) xchg cmp out push cld imul jae,pn pop lds stc jae push mov add jo mov dec push xchg ljmp je mov iret push lds sti or inc lcall pushf jae push mov add and mov lods into test cmpsl scas mov jle add inc pop in adc mov mov jg adc sbb push adc xor add add dec xor in lock enter iret add adc adc inc pop pop lods repnz xsha256 cmpsb push push (bad) adc jmp stc movsb lahf test and aaa sbb out flds imull push mov loop lock loope hlt ja pop shrl mov loop dec or mov xchg aas repz mov add or in cmp jae xor mov mov out mov pop mov cmpsl adc mov popf sub and push adc fucomi aam add add add add cmp lret cmp jmp or data16 mov add adcb dec test cwtl outsb xchg cmp adc fbld dec enter ficom rep xor xor cmp cli nop fidivl lret xor sahf sbb push loopne inc lret fnop jle andl lock aaa bound push mov pusha (bad) mov les or adc cmp fucomp jmp inc stos inc jle xchg mov (bad) repnz jg pop in icebp das dec xor add add in push cwtl pop dec fdivs repnz out adc orl dec or push in fwait pop mov mov push test fidiv mov int mov ss mov loop insl adc xor rorb and mov (bad) lret xor lret push push imul (bad) adc jmp or jmp mov sub sub lods stos sti in xor mov adc in out and xchg lcall pop mov or push xorl inc and insb push subl xor stos ds scas stos ds and mov and (bad) sub popa pop in xor (bad) popa fsubs xor sbb adc cmpsb testb sub fldenv push nop push inc adc lcall fisttpl ss in xchg mov pop (bad) std xor nop and pop pop pop repnz pop stos out jns and cmp xor repnz add jle or mov push add pop mov imul fadd inc jo imul sbb sbb out dec ficom jp xchg movsl or mov lea test cld mov cmp sbb mov jo mov (bad) sbb inc scas outsl test stos push scas xchg (bad) mov je rcrb dec inc loope mov jae shll inc adc sti xchg scas mov test mov (bad) ficom cli pop fwait std sub dec lods dec sti inc pop push jle cmp mov add add sbb pushf in xor lahf ret mov sbb sub xlat scas addr16 call enter out aaa and repz fistl sahf call out fidivl inc xchg or les iret fist xchg cmpsl dec mov ss mov ja data16 popa pop push mov pusha xlat cmpsb inc inc adc out sub divb cmp mov sub jg (bad) push aas push fs lods movsb cmp sbb popf cs xchg inc jo and jle xchg (bad) xor push xchg or lds js add add add mov stc arpl rcr inc mov cmpsb ljmp add cld insl idiv pusha insb jmp fdiv aaa sub jne into adc icebp pop sub or sti mov xlat or (bad) out xchg call jmp sti aam mov imull mov leave mov jnp (bad) shll push rcll xchg stos mov scas or xchg mov fcompl lock ror push (bad) loopne or int3 xchg daa xchg dec xchg lret fdivrs add add ret fdivrl mov mov das xchg lea xchg xchg (bad) (bad) popa fwait sub repz inc or sti test outsb mov dec in or add leave insl dec cmp pop (bad) cmp push mov scas xor jl sbb hlt mov call cmp sar mov lock sub adc jp or roll mov fidivl and fcmovnbe repz xchg sub pop mov mov gs into or sbb add add adc (bad) mov inc or mov or dec jecxz test xor cltd mov fldt fstpt pop mov bound popa mov mov dec fldl fwait xor jae inc dec cmc inc inc pop in in add test (bad) dec jno bound into cmovne add mov dec push jb out lods xchg mull in jbe cwtl mov jg loop out (bad) pop adc mov mov add and in cltd adc xorl inc mov fdivs mov mov jge add arpl push pop rcrl pop inc dec add xchg repnz (bad) sahf xchg adc sbb sub test popf not add mov xor arpl sbb xchg mov or and mov cmp cmp jp inc popa aas aas fisttp and aas loop xchg add xor repz lret lds xor add add add rcr dec mov mov and xchg sbb out xor inc insb test mov aam xor sub (bad) ss imul inc or ljmp and imul mov add ja cmp test mov push xlat xor sbb fidivr aad pop and lock es mov pop dec ja hlt or fisubrl nop jbe in (bad) and into movl push push iret jge nop ret dec shrb (bad) mov ljmp mov mov ljmp lock lods lods sub add std pop mov mov loopne dec sbb hlt dec rcll pop dec mov or aas pushf lret fstl pop repnz push rorl sub (bad) popf sbb std adc enter jg mov lret jp movsb (bad) mov (bad) (bad) addr16 jmp lret mov ss xchg adc orl arpl add add add lods lock mov xor cld shll push pop dec mov pop pop cmc aam test ret leave add imul daa cmp mov push inc or loop adc cli cmp sub hlt mov enter lock cmp mov xchg test in (bad) insl add xor inc loopne mov (bad) (bad) sbb sub push test jno sbb jge iret jae sub test or fcomps popf shrl (bad) push jbe mov mulb add add add xor inc in cmp xchg pusha push mov stos jbe arpl outsb imul test (bad) or push test in popa inc test ficomp imulb outsl xor push push loopne ret jb cli sbbl xor es mov xchg push loope ja push mov cmp ja and out shll in stos jns ds rol pop pop lods push aam xchg dec mov pushl rorb inc dec lcall movsl push in fsts (bad) pop mov add add add les mov mov mov cltd repnz adc sub mov lret movsl or in cli movsb cmpsb xor dec xor outsl mov jae inc (bad) cmp and mov cmpsb inc dec scas mov test mov pop daa sbb cmp jbe and ja dec std push ds lock sbb xor test (bad) lret pop dec xchg sbb iret xlat (bad) xchg sbb dec mov mov addb add add add call and and jb mov pop iret addl out cmp xor je add and aaa test sbb mov mov cmp pop test jecxz dec aad xor (bad) pushf addr16 add stc sub and push inc imul push inc add adc sahf ds mov xchg pusha and cmp add mov mov mov xchg inc movsl sub mov push push out add adc roll loope xchg push or lret inc fcmove mov sbb test or mov daa push cmc mov (bad) adc std aam xchg pop mov xchg mov out pop inc xor fldt mov fldt js int3 (bad) (bad) aam inc aam mov data16 test xor and out imul popa (bad) mov sahf mov mov (bad) mov jp mov pop loopne mov cmp mov and enter test xchg mov add add icebp cld push test jg sub push mov pusha enter xchg pop sbb sbb ret push cmpsl mov into dec repnz pop adc xor pop ljmp addr16 add ret pop (bad) rorb int3 adc inc or cmpsl imul add cmp lds ljmp pusha sub mov in jns sbb popf lods insl lods sbb sbb xor clc cmpsl mov sub out icebp push imul add add stc mov pop adc pop sahf orl cmp jne mov and das xor or push pop inc push xor mov fs sbb or push cltd jne cmc bound mov jle ficomp inc aas cld jae adc stc sbb ljmp mov fldl jnp inc mov cwtl push dec cli adc outsl cwtl div leave sub stc je test add lret sub jno sbb cltd jl add add add add test fwait pop jmp push adc je in fbld nop into jns arpl arpl and rorl jae xchg push gs xor fwait push and jge int fnstenv fs popa cwtl (bad) mov dec and iret fistpl add jns test inc fistpll das fisttpll jg xchg or lcall sub xor xchg inc popf syscall scas and in jle jb cs pop push push movsb je loopne mov scas xlat sbb sbb add add add call dec stc (bad) push mov jnp ja fidivl int lods add and xlat cli outsl movsl popa or les fstpl shl daa out lcall push call lret hlt cltd pusha (bad) hlt mov cmp pop dec pop stc xchg sub push loopne jb fcmovu jns mov pop insb rcrb test enter sub add xor pop sub enter mov (bad) cmp push jmp xlat mov add add add pop lcall or mov lods call mov mov cmp pop mov (bad) and adcl jne xor push mov notb arpl insb loope test or mov xchg (bad) dec test fidivrl aaa jle mov sbb stos jge xor and fnstcw push jnp insb cwtl and lret out inc insb xchg add push clc inc adcl test mov clc push cmpsl call mov add add add push adc adc (bad) jo and push das mov (bad) xlat ljmp sbb lods fisubl dec and mov adc push dec xor fist xor mov mov fimul aas sub mov push imul jae repnz xor imul ret out mov (bad) xor adc sarl xchg call rolb push mov cmc stos push adc sbbb aam mov mov stos int cmp jne sbb mov clc sbb movsb mov cld incb dec push xor lock sub and bound scas (bad) push pop push mov mov mov jp mov into movsb lock outsl sahf mov (bad) cli jle ljmp mov (bad) jecxz shlb ljmp lret jns xor sbb adc mov add add add test sub movl scas adc pop jp mov cs div (bad) sub sub call loopne pop or mov mov divb scas mov addr16 outsb into repz adc mov in pop nop mov lcall xor aas jbe push jo jmp pop inc inc dec adc (bad) les dec in fistpll inc jmp aam (bad) dec mov bound es (bad) int aam gs gs int3 imul and in add xchg jne or imul ljmp xchg test clc (bad) push aam (bad) jecxz mov mov pop jmp pop pop mov pop aam jne xor sub mov jg mov cmovae xchg sbb mov imul mov push sub cmp and (bad) push pop xor test jp lahf loopne maskmovq negl lods push inc in add in aad jns push lcall push sub add add imul outsb mov subl jne mov daa push ficoml jmp mov mov pop pop imul mov sbb (bad) pop push push (bad) ds arpl xchg daa adc push pusha repnz sahf imul imul add mov aad loopne lods and push popf fisubrl (bad) or shrb stos mov lret cs push shl mov mov push cld inc out inc (bad) mul cmp pushf aas mov inc jno lret jp add add add add divl test sub push test mov rcrb mov xor test out inc mov je daa cwtl pop or loope fstl mov dec mov adc dec push rcrl cwtl hlt fist repnz (bad) pop hlt push test daa pop add arpl mov lcall adc (bad) popa push push add lahf out pop jae cmp mov add aam loop xor sbb cltd and cmp push jno inc or (bad) lret fnstsw in mov mov inc bound mov leave inc push push sbb mov adc fwait shrb dec cmp (bad) and mov pop sub push sarl stos push xchg cmpsb out scas xchg adc cmp ret outsl cmp mov inc inc xchg scas enter fs add sub adcl mov mov push jo inc push mov repz inc out push es in inc mov aas xchg call data16 cmp out test add add add add pop fcompl lahf xor adc inc das leave ret pop push stc dec ss sub int (bad) icebp sbb jp shr test mov dec pushl mov dec leave int3 imul add dec xor rclb in dec mov jne (bad) mov xchg fs rolb jbe leave dec out clc xor or inc fistpll test sbb or loopne in cmp fldenv int fsubrs lock add add add lods jo pushf lds fild push pop test pop stc pop aas call aaa push andl mov inc jge jb cmp and dec add jno mov jno xor repz or movsb sahf aaa js mov icebp fsubs clc call jo (bad) push cmpsb and adc push arpl mov cmp sarl inc in and popa (bad) repnz fcoml pop test (bad) int data16 xchg cmp aad mov cmp mov add add add mov xor mov xchg std sub mov popa pusha add cmp (bad) ja pushf fwait daa iret push subl loope and or in pop jne pop xor cs xor fidiv stos add inc sarb and inc out into leave lds mov lock outsb pop das pop mov mov dec xor mov jg sub xor cmp adc pop andb int mov das mov mov inc cs xchg ds push push pop sarb mov add add mov cmpsl push loopne les lret add stc cmp or pop pop (bad) je mov out int subl mov add es sbb lret loop mov lods std sbb pop xchg cltd loop mov xchg fdivrl mov popf enter push push add fwait mov sahf repz mov and and sbb insl jns fwait (bad) cmp je out xor xchg push jb mov jge sbb xchg mov cmc sbb or jnp add add xchg cmp ljmp imul divb out dec fwait dec mov test sbb xchg lret jecxz sbb inc adc mov sarl jno aas negb popa pop jno mov xchg jb push mov mov sbb cmp mov cs data16 jmp add jo mov nop (bad) outsb cld jne push cli sbb cmp insb (bad) mov lods xchg xchg push ljmp out mov fstpt jns mov (bad) jo jl cmpsb xlat add add add inc (bad) add test pop insb inc lds dec jle repz inc push inc push repz ret mov xchg jge add sbb dec lcall sarb imul xlat outsb popf js jmp lahf adc fistl inc pop std mov test cs addr16 dec xchg cmp out pop jo popa dec jb push mov out shrb push mov jle arpl insl arpl std je sti scas dec add add add cmp into adc mull inc sbb loope xor fidivl mov dec test mov inc sbb cmc pushf (bad) xor or fistl out add (bad) je jg in inc repnz add shlb mov out mov cltd push loope fnop in mov sub sbb mov push in ljmp lea jns in xchg dec adc lret icebp cld fsubrl xor mov (bad) imul das loope jb rcl xchg (bad) dec adc (bad) fistl add inc sbbl ja push (bad) je xlat pop cmp leave jle dec xor mov imul outsl fsubl repz mov stc shll cltd aam test pop and aas inc rcrb adc xchg and je mov pop fnstcw insb test imul lds (bad) and test leave mov stos repz fist scas (bad) jge mov (bad) xchg sbb daa sbb push cli nop or mov lock call aad add mov in rolb lret jne faddl pop pop icebp mov pop jp mov sbb les cs fs mov push (bad) jecxz mov mov aas jmp jp loop bound test push pop and mov mov (bad) es jnp cmp lock js dec mov cltd and xor ja in pop mov inc fisttpll test xchg mov ja push aam sahf xor mov popa or imul add jmp xor scas aas and and and cmpsb or lahf rcrl iret mov je adc in sahf in divb sub nop fdivrl stos call sahf or lock push in sbb fs lcall or adc adc and out nop stos cmpsb aam repnz xchg stos in mov or cwtl xorl and mov dec dec scas add mov xchg and add add add push xchg dec lods lea push dec lock or mov std pop cmp test je mov mov lret dec or xchg loop mov or inc movsb xor sbbb sahf and sub inc add mov js mov fwait xor mov mov inc into mov sarb adc test stc inc sbbb div mov mov fcmovbe lcall out (bad) outsb imul and sub mov and cwtl xchg xlat and sahf push xchg mov mov xor arpl adc pop jne cmp rcrl movsl clc jbe cmpl out mov pop rcrb (bad) call scas daa push push inc stc add jmp stos jge xchg dec push push clc mov test xor pop or addr16 inc sbb or lods addps pop push or hlt mov fisubrl pop mov lods or sbb mov add mov inc repnz pop ja mov gs sub xchg xchg neg ret les inc ret clc out shl stos outsb sub and test jge (bad) inc out xchg fistpl repz cmp outsl ret mov push cmpsl mov mov fnstcw test and ljmp xor arpl and adc decl in dec mov mov push test add xchg outsb sub push sub ret lea adc or cmc test (bad) out insb inc pop dec sbb shl loop inc (bad) shrb mov test lds inc xor fwait xchg leave aad movsl orb ret (bad) mov fs jo xchg ret mov inc fnop inc cmp shl xchg js jl xor icebp bound xchg iret push mov mov aas int3 fiaddl mov add dec iret mov cmp scas jmp mov imul pop sbb rcrb mov add movsb dec push sub adc jbe lods aas mov add cmp adc jo cmc mov pop push aaa sub out inc dec aad stos lret mov jecxz out cmc into shll hlt fs mov sbb ljmp cmp push jecxz or sub jb and shrd ret mov out pop cmpsb lahf pop lods aad cmp add mov int fisubrl lahf clc decb xchg mov leave fcmovnb sbb jle mov rclb aas lock sub hlt mov mov ljmp hlt adc sbb out aam mov sbb clc in or sti sarl mov jmp mov inc fwait sbb in incl push out dec and adc mov sbb clc cwtl in out stos ljmp lcall push lock popa add cwtl mov stos cmp sbb add arpl (bad) out ljmp fidivr jne sar xor pop loopne test lds (bad) cmpsl or mov mov ja,pt test fsubl lret ficom mov xchg cmp push sti inc fnsave xor in inc mov inc jne jecxz mov cmp push lret and mov out std xor cwtl jae push jge ds sub bound or sbb addr16 lcall inc js (bad) icebp in ds inc ret cli stos add add add add lcall les jo mov mov xor mov push gs push fs mov fsts sbb lret push pop stc sti lea in and loopne xor jns enter in add fistpll lret xchg push movsl mov mov dec mov outsb adc push (bad) cmpsl push adc daa push sarb pop inc dec and dec outsb stos sub cmp pop imul or mov dec jmp out (bad) add push push lods lea fwait adc fadds enter rcr add (bad) (bad) mov aad sbb dec add les xor adc or sbb hlt lods in fsubs mul cld je jnp mov adc int jmp pusha pop add out call cmp ss mov (bad) loope mov roll bound inc stos and lock add lods sbb int outsb mov inc mov mov pop les outsb jbe sahf int3 lds add add add add mov adc jg je mov inc rcll popf inc mov mov movsb sbb fiaddl inc pop sbb lods cmp pop movsb add daa sahf (bad) arpl xchg inc mov mov mov scas in adc mov pop cmp gs fmull shl mov sub leavew pop pop lea repnz es mov bound or loop mov cld cmc jne and inc fsub adc insl cli repnz in scas jbe subl and jle mov add add add aad clc das sbb mov jle push xor fisubrl sub imul xchg xchg push outsl jae ficompl xchg pop gs mov lods xchg pop stc je xorb ljmp (bad) pusha jecxz jecxz lea xchg adc scas mov in jg adc and xor mov lods push popf jg sbb test jnp xchg or mov jmp mov and push adc push iret (bad) rcr jge jl js adc sbb jne outsb adc (bad) add add add int3 mov adc dec cmp cld out jle addr16 sub mov gs test cmp xchg pushf pop shl arpl pop inc pop and ror dec lret rcrl cmp add (bad) cli aam test iret rcrb jne outsl xor add cmp andl out lods lcall inc mov fiadd mov xor in mov add mov icebp dec pop lods into pop pop mov adc add into jp inc push clc adc sub xor fdecstp pop es push lret fmul in mov cld mov push dec inc mov aad std lea loop push pop in mov adc loop mov lods jae cmp or in enter insb push mov pop fdivr xor imul and add adc std test fwait add push cmc and jno jno,pt loopne push adc loopne push xor in pop enter nop lea add add add pop aad xchg sahf jge cmp out scas push adc in and xor je push add jp jle mov xchg push ret cs daa jno daa adc or std pop mov adc and cmp scas aam cld cli or stos leave popa push jecxz and or adc sti jae mov lds fist mov flds xor cltd xchg dec insb ds jno and lea mov in xor gs jge lret dec daa inc aaa adc add add leave cld dec rcr daa xchg mov add and es dec js dec repnz leave sahf mov inc pushf pop xchg xchg sbb ret in outsb xor dec and jmp aad and jg call test push push rolb dec adc sbb roll dec add rcrl pusha idiv (bad) popf data16 popa fnstsw mov out or or imul sti dec int push gs mov fadds pop enter stos mov enter xor xchg mov add add ret inc dec arpl jne loopne enter les pop pop mov sahf fmuls dec cltd cmp push sbb idivl add adc pop das push mov cltd (bad) jl sbb (bad) mov pop mov (bad) cmp jo xchg pop outsl shr inc test mov and cmc call js mov mov stc ljmp mov mov xchg xchg and inc in lcall and (bad) subl fcoms add add add mov test push mov fildl fldl or les icebp addr16 cli cmc sub es pop dec into and int3 cmp inc and pushf mov (bad) add push rorb orb cmp mov or ret test sub call lea xchg sub std stos outsb xchg add cmp push scas (bad) test xchg daa adc insb iret les test insb out add add add add add imul pop and adc (bad) sbb outsb leave add jle rolb popf lds sbb xchg inc (bad) stos fcmovnu adc push xchg and insl into pop adc and mov (bad) mov mov xchg idivl popa cmp rcrl xchg add test pop and inc mov mov push fst insl xor sub mov dec sbb in sahf test cmp dec lret dec mov test mov insb pop and fcoml jecxz mov cwtl movsl stc notl in add dec push xchg (bad) sti loop pop mov shrl cmc sbb xchg sahf mov (bad) jne fwait aaa roll in jb pop cmpsb addr16 shrb push sbb add push stos mov repnz mov ret out cli mov popa iret ljmp add push repz in movsl adc (bad) int ror dec lret inc fstpl arpl (bad) jo or sub mov aad int jbe lods cwtd xorl mov add add add popa xchg dec sbb shlb add pop or dec cmpl faddp push sbb fwait imul xchg arpl repnz shlb hlt xor js and mov ret mov jg sbb outsl daa xor cli (bad) lods push fmul (bad) xchg (bad) jecxz inc inc mov mov mov pop adc out mov cmpsb xchg or jecxz and and jo pop dec or test inc xchg jg dec rdmsr jnp cmp push insl fcmove jbe jns repz or mov adc into or sub fsubr xchg lcall inc push inc push push cmc push dec and jge mov adc push sbb cmp loope les mov fnstenv aas cld cmpsl mov dec xchg (bad) mov out fdivrl inc push mov push mov cmpsb lcall add test lcall mov cmp adc sbb cwtl sub cmp push or push dec daa sub fdivrs pop jbe testl orl lods dec cmp (bad) xor imull icebp es ss in or adc adc icebp std mov aas call loop repnz jl int3 mov mov addr16 xchg jne sub adc sbb inc out stos into sarb sub pop fistpll xchg lret adc pop adc or xchg test daa ret mov pop add add add mov (bad) leave lods mov cmpsl fs icebp and ret and js sbb jo push push stos mov mov gs pop xlat out cmp jmp xchg movsl sub movsl and jge sub and push movsb ja test cmpsl ja fsubp mov in cmc scas adc daa clc nop incl adc pop cwtl testl and out mov jl lea lea out mov xchg add imul or add ss repnz add add add jmp mov fcmovu repz nop jno pop sub hlt push push jg arpl jmp or repnz or inc neg icebp add in (bad) bound test fsubrs pop xchg pushf adc jnp cmp insb jne das cltd cltd cmp push or mov push mov sub out sbb sub inc push aad imulb push cltd enter in rcrb sub repz inc mov mov mov sub cmp push clc xor mov add add add add lret stc nop cwtl das push call push lock mov into mov ljmp enter xchg add aas jecxz cmpsl xor mov sbb andb test in pop iret fwait add cmp scas scas shrl push xchg repnz leave inc mov add ja jg cli addr16 and inc sub repnz pop mov dec cmp test mov xchg sbb jmp pop push loope iret mov sub sahf push lock sbbl add add int3 sti sbb push cmp lcall lea inc decl xor (bad) pop sarl inc push and insl repz add add roll ret aas imul add sbb ja xor (bad) ljmp pop jge push and outsb mov rorb mov fs fdivrs sbb xlat jge sbb sub jbe push jle pop pop jg js jno popa pop loope (bad) jle pop mov jecxz pushl dec (bad) adc lret and jae mov fldl stos movsb scas (bad) fsubrl sbb repz fstp xor dec jl test stos out or mov cmp cs add mov push push movsl inc das stos xchg ja gs add jp hlt sub inc in mov mov push fbld out inc sbb addl sub adc andl mov dec into in int int out inc sahf imul add add pusha std mov add jecxz inc movsb sbb hlt pop jecxz cltd fsts bound aaa xor xchg jle push pop les mov or jmp jnp mov jmp or mov aad sbb pop (bad) sub dec les sbb pop xor cmc (bad) loopne mov (bad) in and and ljmp jge call mov sahf loope lods sbb daa loope add fidiv mov sub add imul cmp mov mov cmpsl aaa inc sub iret and out repz pop inc movsl adc scas xchg mov stos scas cmp mov or xchg ficompl jg or popf jmp xor sti (bad) inc in jp cmpsl fild inc lcall mov jle push or mov dec fstpl mov inc fisubl cmp je push mov xchg mov (bad) loop and aaa incb cwtl int mov add add add add ss xchg (bad) pop push cmp mov into scas addb movsl js out jbe lcall aaa fnstsw rclb insb ret add fucomip orb scas add js pop pop xchg pop add dec xchg mov add xor mov loop rclb into sbb (bad) cwtl ljmp sbb movntps or sub xor test or loop sbb pop insb pop (bad) arpl mov adc fildl add add add add lret xor aad and dec mulw (bad) xchg cmovno xor xchg popa (bad) pop rcl (bad) pop xchg mov pushf out pop rcrl xor lret test inc cli dec dec jns rcll jmp xchg pop fnsave and cmp xlat repnz and adcl xchg mov shrl imul (bad) add out mov aam (bad) inc jnp imul ja xchg fsub jns jns lods out sti add cmp popf sub shrb mov call popf ret (bad) cmp cmc and imul (bad) mov xor mov movsb lods mov (bad) lods popa mov repnz repz mov mov jbe (bad) cmp loop in call inc jecxz jo mov cwtl outsl sub js sub jnp,pn iret into fildl mov popf push cwtl sbb inc outsb hlt ss fwait push mov jl (bad) xor add add add aas sbb and mov mov stc pop pop push sub jae dec push adc mov lret add repnz mov iret das xchg sub adc into ss movsb push daa jl push insb lods iret fcomip mov daa dec inc shrl and pop sbb pusha ds cmp add fisub loop outsb push add ja insb inc add xor mov pushf xor sar call dec (bad) mov or push pop in mov lret cmp add mov xor sbb int dec xor push andb mov jge push fistp jge pop test call lock pop repz ds adc pop dec mov jno out (bad) data16 nop sub (bad) outsl dec shlb (bad) dec stc fcomps rcll adc jl cmp and dec dec mov push movsl ljmp lds lahf leave cmp add cmpsb gs or dec mov aam int xor in mov add add add add mov mov inc cmp les rorl loopne inc adc sub nop test mov lds lods jns loopne inc (bad) bound loopne ficomp jae add gs cmp and xor inc pop test or subl or sbb hlt out (bad) inc insl pop lahf jg xchg and sti mov pop jo add or xchg add push cmp add add add in mov lds int mov and lock inc (bad) ja (bad) jge jle aam imul xlat in inc mov sub rolb loope adc stos inc fisub (bad) mov xchg adc movsl bound das sbb cld outsl and jne xchg mov dec je sbb xchg dec jno iret std inc fsubr push movsb xchg cmpsl test int3 divl and jg pop mov or test dec mov push cli in ficom stc jne inc es (bad) lret add sub (bad) out inc push decl or push push xchg das cmp cmp addr16 inc test or test pop xlat (bad) imul cmp pushf sti sbb testb mov pop jp mov negl hlt ret aad push xlat aad jb cmp push xchg shll xchg mov ja inc dec jne pushf xchg xchg insl pusha imul ljmp mov (bad) xchg jl (bad) xchg mov cld test sub or jnp add xchg cmpsb add add add xor stc mov xchg call out mov pop jb pop mov cmp insb inc jp cli jg jmp dec pop inc mov xchg push (bad) movsl jns out pushf sub mov pushf mov lcall pop mov mov dec jp sti mov les xchg stc and out shlb insb dec int3 mov (bad) test xchg cmp fwait rorb dec xchg xchg stc jg cmp mov jecxz adc test lahf sub out inc lods lret sub add add add add and jno sub push pop adc jmp jb scas push frstor andl fsts sub jbe sbb jbe arpl cmp rcll inc enter jmp xor jmp mov inc xchg add and push movsb aad in leave imul cwtl adc mov add out pusha lret sub divb push xchg sbb (bad) lret scas dec or call ret xchg loopne insl int3 mov outsb hlt leave loop sub cwtl mov mov add add add adc push lds call or (bad) or pop xchg inc ret push jns mov bound stos xchg dec jo mov sub mov test add je es pop inc mov pop icebp icebp cltd leave adc sub dec lret pop js mov pop sti xor adc push cmp fdivp inc dec test pop jno into mov cmc mov sub outsl outsl and and daa ss add mov add gs mov es xchg add add add add jp gs dec out jb mov xchg mov sub out xchg adc jb add imul inc push inc loope ss cs into cli pop enter ret pop (bad) enter lea std andl std push sbb cmp cmpsb add push xchg and (bad) out jmp sahf int3 or lcall dec pop loop pop das push add jl cmpsb xchg or bnd mov pop js dec std inc out (bad) movsl mov mov (bad) sbb dec mov mov push imul outsb push cwtl adc das jp mov popf dec movsl sbb pop mov das call aaa mov (bad) repnz lods adc in hlt push sub inc push pop (bad) pushf fiadd add pop fdivrl cli adcl call adc cmp cmpsl mov (bad) fidivrl (bad) ds mov sbb sbb fwait mov arpl (bad) cs pop sub movsb dec mov (bad) lock (bad) and mov and aam add add lods lret push cmp xchg and mov jle pop sub xor (bad) mov mov call sub popa stos cs cmp into sbb lret mov clc cwtl inc btc xchg aam fwait push xchg dec stos mov add roll in mov stc out mov pusha in mov mov (bad) xor jae push inc mov sub int3 sbb push and out fucomi jg push outsl pop and adc sbb push imul push add add add push fimull cmpsb cltd and repz lods adc shlb pop shrl or stos pop add (bad) pop fsubr inc fildl inc jg pop test pop pop out ret vsubpd fwait cmp mov cwtl fiadd (bad) mov xor inc adc dec dec aaa adc pop or xchg outsl mov je or iret adc xchg ret mov pusha jbe test ret mov dec jp pop mov outsl (bad) ffree cld mov and mov add add add mov popf in jl mov test xor sbb sbb mov push test adc dec ja mov xchg out or in cmp and adc cmpsb push test pop jle cmp stos repnz add pop movaps xchg pushf outsl std (bad) sbb push idivl popf push xor cmp stc push adc sarl sbb mov dec push lea lcall (bad) test jmp or push dec ss cmpl add repnz add add xlat in push xchg cli mov leave xchg ja sbb mov test mov pushw jno or sub xor mov push adc xchg sbb add sbb add in imul xchg into inc stos inc mov es xchg sbb not jg mov dec popa xchg sbb inc mov push jb xchg xchg jb xor adc sahf or iret in repz aas cmp mov mov mov sahf sti and xchg push ret stc fs push and mov add add add add aaa or orl ret mov push sub aas cmp mov inc loop std fwait lret rcrl mov jno popa repz pushf lods pushf insl dec jecxz iret pushf bound cmp lds xchg push xor iret sub or scas sub ret push sub outsb addr16 gs mov mov ret aad pop nop pop mov dec js into gs mov (bad) daa loopnew les cmp xchg (bad) int3 add add add pop ljmp add fstpt pop mov jp or or sub cmc jmp sbb lock test stos fdivs sub popf icebp repz jnp xor mov fnsave pop iret xchg js mov cmp fs sub movsb ret rcrb cmp fsubr bound xchg jle xchg leave dec gs and stos ds cmp stos adc cmovge in pop imul sub sub cwtl test cwtl test add add add in sub rorb jns sub and (bad) add adc in xchg je adc add std or jecxz sub (bad) rcrb movsb dec out (bad) addr16 xor cld mov movsb ds pop mov add pop sub push xchg and add inc and iret pop pop gs or or lock rcr jg test add xor dec lea repz jle lret outsb add add add add mov stos js lods inc mov mov inc xor rcll rcr xchg mov pop in das push cmp mov fistpl and inc sti and dec pop add stos jp out scas ja imul inc ds or jle dec (bad) lcall test xor ljmp outsb xor imul loopne or or or add jne mov repnz add or out out adc mov mov mov popf push lea movsl mov js xchg sahf pop hlt cltd dec les mov push cmp cmp enter lret out xor hlt movsl mov jge into sarb ret push fldl xchg add scas cwtl mov add popf pminub in mov dec leave andb (bad) int3 lret popa sbb fadds cmc test push testb loopne pop dec (bad) dec push out adc add add add xor in or jg mov or dec movsb xchg mov insl xchg (bad) push lds pop jmp cmp outsb clc xorl aas (bad) xor xchg addb cltd mov aaa pop dec mov pop pop xor jnp fstps jge movsl fisttpll cld and iret int3 fadds in xchg (bad) and dec sahf (bad) dec cmp (bad) push mov aad cmp xor ret cmc int into adc xor mov jmp dec jle scas cmp insl mov xchg mov fstps test add add add add psrlq jo fisttpll jo sub js adc (bad) out stc je addr16 lahf or jns mov cmp lret push out cmp cmp mov rcr mov pop jmp jl fstp inc scas in mov add add add xchg sub lods popf mov (bad) push rcrb inc mov lcall push loope push jge hlt (bad) divb lret jnp outsb xor push sub popa loope outsl or pop push add hlt sub lret inc les jne lods xor loope cmpsb push loop fwait jp push rcr icebp or outsl jb push stc addl pop cmc fwait xchg cs ror cmp or mov xchg test lret and sbb push out push xchg xchg stc sub adc testl mov sbb pop cmp nop repz scas cmc outsl xor cld dec push ret fistp sar lahf popf and fldcw sbb in jns push iret cmp adc imul dec mov dec lcall mov (bad) pop sbb clc cs call or loopne cmc (bad) ja (bad) xlat (bad) jmp (bad) adc mov rolb jo mov and in cmp lods test pop mov xor fcoms inc jae scas mov sbb cmp pop inc ret outsl ficomp sbb or rcr sub sbb mov mov pop mov ror cmp gs mov aad add push mov pop xor sti jmp cmp jmp je jb negb pop loope dec jns jle aam mov aam pop fildl js xchg test (bad) xor sub mov jle fild rol mov inc xchg aas fsubr aam repz jge outsb cs xor push push mov mov fs pop les pusha mov scas push lcall sahf xor clc mov cli mov out xchg out mov popa push mov leave js and mov stos loop insb jp das dec xchg out (bad) js mov mov xchg add add add sbb shlb push and mov mov push jb mov xor jle mov jl sub repnz insb mov and adc jge fwait mul lock daa in inc out (bad) cmc or pushf clc pop insl mov lret out xchg push (bad) sbb in movsl lret decl loopne mov mov int3 lea hlt pop pop (bad) jle adcb cs dec add fwait pop cmp mov das inc (bad) into push lret or add add add arpl lods roll data16 rcll negb or js pushf icebp movsb int3 sti je sbb ljmp jns mov fldenv push pop xchg xchg imul jo adc mov ret mov out mov sub mov lods mov mov in sub jno pop cwtl pop xor std aaa add sahf ret ljmp add push test sahf imul stc je nop (bad) repnz fimul dec pop mov pop dec xchg aas mov add add add add (bad) mov call push clc sub mov outsl jae gs imul pop rcll fistl dec aas ds adc ljmp sti enter arpl repnz out jb pop or ffreep xlat fcmovbe ret sbb sbb scas (bad) cmp cwtl inc mov mov cli fs repz mov loopne sbb dec outsl dec xchg bound pop or dec es rcrl xchg lods lret scas dec fidivrl ja cmp mov add add (bad) imul rorl sub sub js test ficomp std cmpsl cltd push nop jecxz lret mov out int incb icebp std out dec bound xchg inc cmpl pop add dec mov push push xchg lret pop mov inc adc daa cltd jnp dec dec test adc loopne enter sbb cmp and xchg mov and cmp popa das or mov cmp adc ficompl lock or jle arpl (bad) out subl jp popa inc jo xlat add add add add aas and out dec xchg mov or test xchg mov sahf jecxz loope adc aad or jge clc cmp iret insb ds dec add (bad) mov mov iret xlat jge pop mov or xor adc fs (bad) into jae push mov adc mov jne cld (bad) mov mov xchg test push sbb test inc jle cmp (bad) movups mov mov inc cmc mov xchg pushf dec aaa push sbb dec sahf ja push imul xor add add add rcrb leave xor ret xchg mov jle pop arpl sub imul pop xchg or gs mov bound subl mov and lds pop fwait rdmsr aas xor xchg leave shr int3 (bad) cmp pop or sub dec push push inc fcoml sbb dec adc aam imul rcrl or jg (bad) or lock jns stos cmpsb aad mov add add mov pop loope pop loope xor xchg in jb imull in mov imul cmpsl out lahf cld cmc imulb jbe test lea movsb lcall jo data16 adc repnz sub push insb icebp orl addb xor add xchg aas mov push mov jne sub inc or add imul mov int jns das add cltd pop adc inc fidivr aaa cmpsb jg mov (bad) mov xor inc fldenv add add add cmp mov enter clc bndstx pop mov popa and ret dec fidivl fs mov std out cld scas icebp lcall mov pop xchg pop ja imul nop leave aam mov repnz mov cmp fstpt sub rcrl repz popa sahf cld (bad) idiv xor sub stos cs aas in insl sub fadds das (bad) test push mov and mov pushf mov fs jmp add popa out xchg pop pop es push sti xchg out stos iret mov mov (bad) bound pop and mov dec imul and xor xchg shl test adc shrb mov test in pop jno inc popf fnstsw out pop adc std into adc sub sub xor aas popa xchg push xchg fmull mov dec push es add insb push and es jp cmp jle mov (bad) pop call sub inc int3 (bad) push pop dec mov add add add cs mov dec fmuls dec pop jno loop addb jecxz xchg popa dec enter lods mov push ja mov jne insb inc fs jp sub jb data16 iret scas nop push cmpsl sbb fistp pop movsl pop jae insl mov in (bad) xor jae dec xor (bad) lret out cld xor mov cmp (bad) ss jns pushf in or xlat leave jge fsubrp add push lds mov mov dec cmp popf push jae add add add dec data16 mov dec pop xchg insb fnstcw jge xchg mov or das push mov pop mov pop jg cs daa mov cmp push iret call lahf in dec in int3 adc leave loope movsb iret jnp mov test das leave inc leave mov div push adc fwait loopne cltd gs out dec (bad) xor and jle push or nop in sbb and jb clc xchg add xchg mov or outsl in mov mov (bad) inc cli stc inc push imul jmp add add lock nop out cwtl mov (bad) sti out int3 jb lds jnp dec pop jle or lea xorb adc push int3 loope in pop ljmp pop mov inc stos popa (bad) pushf imul fnstsw add (bad) jl xchg sarl int3 or leave popf push mov cmpsl loope mov jae push xchg xor (bad) daa mov xchg mov js stos xchg mov out imul cmp outsl lret in add nop jbe or pop push dec pop popf jo add add add icebp ja cmp sarl dec mov mov imul aad adc and add gs xchg sbb or mov stc sahf imul aaa (bad) (bad) scas mov fisttp in pop cs out cmp stc pop insb xor sbb push xchg insb push outsb dec (bad) and or pop add xchg pop dec push fbld imul jl daa sub cmp or add not inc add add add add add mov add sbb adc jo xor xchg popf imul pop push jo lods adc in sbb mov sub sbb push inc outsl lods adc repz mov rcr jecxz cmp sub mov inc cmpb jmp ja xorl mov mov (bad) fimull outsb fsubrp in pop aaa add iret dec into mov (bad) mov mov insl mov fbstp jno inc inc ss imul dec and and imul add add add nop and iret lcall div insl adc pop sbb mov lret or pop and xchg sti movsl jg push jns add inc ja fldl pop xchg push loope lods test mov shlb pop outsb add add ja pop stos lea xor lcall adc ljmp jb rclb fcmovne pminub ficoml addr16 mov cmp sbb adc popl (bad) cmc imulb add add add dec sub add inc sub push push mov xor mov loop icebp lock push push push mov sti bound inc (bad) or (bad) out out mov popa sub stc push sub call jns mov mov je movsl roll jmp fs clc push outsl repnz and lock mov popa lahf jmp shrb sbb adcl fistp and in pop mov lds mov add pop rorl arpl mov xor outsl (bad) enter push shrb inc jae lret cld (bad) xchg adc push mov mov loop jne inc (bad) fmulp pop push movsl pop in pop ret dec xor add insb xchg add (bad) fcoml and loope (bad) insl rcrl lock dec jmp dec mov fimul cmp cmp cld outsl sub (bad) ss dec out sbb add lds mov cwtl xchg fisttpl mov mov or mov jo xchg or shlb jb and cmp or push pop dec loope mov pushf mov and xchg lods jae negb (bad) lahf (bad) lock dec aad mov int pop out orb test push cmp xchg in xor push sub inc insl std out jge xor xchg dec imul hlt jae leave popa jb jno add aam pusha sub push bound add add add pusha scas loopne in inc and mov jle addr16 movl insb inc push pushl inc cltd or push mov dec sub inc dec pop es cmc jne jbe jne sbb inc (bad) fisubr movsl inc movsb cmp dec js push aad adc xor scas jnp lods dec cmp sbb stos xchg int3 clc cmp dec inc pop fsubp mov mov xchg adcl sub sbb xlat daa inc dec push add fistpl add add add jo adc inc pop negb sbb and scas lods fwait js int3 or or cmp test push jno popa sbb test popf les xchg data16 and push divl inc test lods mov sub in movsb mov add nop sub mov ret xor nop jecxz dec stc jmp add push mov (bad) loope pop or inc sarb and xchg cwtl push jp jbe xchg scas or jne jb aad imul and jecxz stc push cld pop dec mov add add pop rol out movnti cmpsb sbb sbb mov push dec push out jmp test movsl fsts test rclb scas and and cmp pop and dec fsubs popf adc sub leave or jae stc pop sub (bad) (bad) or mov bswap pop xchg cmp pop push test inc jge dec fildll popf dec (bad) inc sbb sbb jl,pn lock mov mov shr pop das pop ljmp xor das sub aaa cmpsl repz add xchg rcl mov (bad) xor jmp das xchg or nop mov push rcrl xor xor push test outsl ljmp fistl push int (bad) testl pop sbb sub jo or sub jge inc fyl2x (bad) jno jo mov lock or popl outsl lcall ret cli idivl push test in xor bound cmp adc add add add pop lea xchg mov out dec and lds out push mov mov sbb scas pop test ret add (bad) (bad) jecxz fcomps in jge mov int3 (bad) dec addr16 push mov mov test movsl outsl add cs cmp push (bad) mov idivl add (bad) push fiaddl out cs into cli dec jmp and inc push rclb cs dec imul fsub adc add add inc out add negb or iret out fucomip and stos loope pop (bad) adc xchg cmp jae or jbe cmp (bad) mov je pushl inc inc xchg xchg in adc cmp adc push out aam fwait test xchg out popa mov xchg paddq out out insl mov lcall sub je mov je pop stos inc repz xor dec add aas popa repnz fs mov pop loope lds mov add add into adc fbstp xor xchg dec cmp mov sbb mov inc in sub movsb stos push pop cmp out bound jmp (bad) cmp and lds jne xchg xchg xor jbe (bad) fistpl xchg insb test mov sahf mov push jbe mov cltd jg loopne aad inc ss cmp lcall and js mov into pushf pop movsl and inc pmaxub es mov mov pop pop mov push sbb add add add (bad) mov fs sub and xchg mov xchg ds xchg adc and std clc dec loopne and popf int mov adc jns push aad add add mov movsl call xchg mov negl stc push push (bad) or cwtl shrb jg movsl xor inc insl cmp xor or outsl mov rol outsl lock ja or push cli dec mov ret xor xchg test pop fisttpll dec lea inc push jne imulb lahf imull lcall lret ja ljmp jne popa loope fisubl sbb repnz std xor arpl repz cmp rcrl mov adc test or xor or sbb jnp int es lcall or sahf pop sarl sub and int3 or mov mov dec sub cli loope mov add add add push cwtl cltd pop pop jl in repz gs cs push jl aad and xchg aas mov pop or andl xor inc jmp pop lcall int3 lock inc sbb shrb xor add gs fdivp adc cmc mov pop xorb mov lock stos popf xchg sub jp pop inc enter cmp or mov lea and inc sub ficomp dec scas cwtl sub inc out add ss add add add add or xchg incl push cmpb pop js fdivs inc mov cltd sti imul repz pushf mov xchg movsl push lret cld push lea in jb push icebp pop sahf add cmp sbb xchg and mov ljmp dec inc ss (bad) sbb jmp xchg or dec out aas pushf lods stos inc adc mov ljmp inc cmpl movsl sbb push pop push add add add add mov add stc andl inc push dec ds or inc shr loopne sbb cmp sbb daa jp fistpll dec ds adc dec pop xor sti sbb xlat ret mov jno xchg sub mov lock stos sbb mov loope lret jb imul mov sub lcall xlat add rorb add sub cltd xor pusha decl sub iret sarb popf stos push cmpb push add add add cli xchg (bad) sbb mov sbb add ljmp pop cld (bad) xor adc jns aaa pushf xor in and iret mov xchg push aad mov je adcb cmp cmp rcll inc jnp mov imul mov mov xor cmp sbb pop mov xchg cs inc jecxz xchg add dec into cmpsl les push cld scas hlt xchg push and imul add add add and into loopne popa test push clc in xchg je std (bad) icebp jg or js sub lcall sub dec cmp ljmp and insl dec loope dec imul and push gs push sahf aam fisubrl mov imul jp sbb or xchg in adc xor mov fdivl in fsubr js aam ja pushf call add fwait and test cs leave jmp add add lret in xchg rol mov xchg insl mov mov jnp icebp (bad) out dec lods xor aaa loope aam xchg aaa cld cmp mov ss jle dec imul add fsubs je (bad) (bad) std push xlat push stos (bad) lahf mov mov in or adc clc mov (bad) (bad) or cmp and xchg adc scas std add test sub or xlat out or (bad) fisubl adc mov stc cmpsl add add add xchg lock mov js xchg add daa inc xchg sub cli push inc call xorb ret lahf lods xchg xchg push fdivrs sbb mov mov jae xor push push testl jae sbb sbb pop xchg mov push in lock sub in push cltd and sub nop mov mov mov stos shll sarb stc ds sub iret jmp icebp dec insb xor mov mov add add sub mov cmp push and xchg inc orl mov cmp test mov dec fwait nop sti stos adc test add sub pushf and push jb loope movsl or push scas mov insb cmp jle out add xor js xchg mov shr outsl xchg fcompl add sbb sarl test ret and lret aaa push push lea shll arpl mov fisubrl add add add rorl mov fsubrs sub jp xchg push (bad) div push mov fs mov mov and dec ljmp jns test ss push and out lock sub lret cmpsb inc adc or arpl cmp addr16 rorb dec mov loope cmp fimull sbb mov out gs andl loope sbb std or imul pop pop cltd mov add insl xchg sub sbb cs add add add add fistpl es je sbb push cmp sub test scas mov nop insb sarb dec push jmp push add outsb xchg pop xchg sub loope clc mov imul sub pop dec mov ficompl push mov insl (bad) lret dec sbb cwtl xchg out xchg es and lcall jb push cmp jp cs mov or mov andb subl jnp push loop or dec fcmovnu inc lret xchg leave in repnz add add cli mov in sub stc and imulb negb pop xor jbe pop icebp (bad) outsl cmp dec xchg sub pop loopne clc push add mov xor (bad) and lcall cmp jecxz (bad) insl in jp sub xorb push mov cli jmp cmpsl inc leave stos ret fdivl rcll jp rol sub lahf pop ret jnp loope jae cmp mov xor sub add add add enter inc out adc pop xlat shll xchg xchg out push mov lods scas mov aad push jb insb es push ss pop loop mov sub sub test out pusha pop jle and fcomip mov sti mov and mov es mov addr16 cwtl lock (bad) push xor std inc imul lds out xchg jnp lock int3 xchg gs cltd ss add mov test mov sbb int (bad) mov pushf mov rolb add add add add cmp push cmp pop jmp push repnz pop (bad) sbb inc mov mov mov icebp pop and xor ret out cmp mov lods jae adc leave jge sub xor inc inc mov les fs jno cmp test pop popl leave cld (bad) jne aas inc and lock mov cwtl push or jno dec jns sub or sub stos pop dec mov imul mov (bad) fsubl inc (bad) xor sbb add add cmc dec leave ds je and inc sub adc adc (bad) fbld ss addr16 sub mov jo sbbb jnp push xor sub enter inc repnz rorb pop mov and xor xor mov jnp mov cmp mov xor xor pop mov jns pop test inc lret mov adc ja xchg push mov push pop fidivrl cld add out lret fxch sub xchg jge pop mov repnz and mov add lcall hlt jno xchg and lret movsl or jne cmc push cmp fsubrl cmpsl inc mov cmc adc das jmp sbb icebp ret mov dec jb repnz ret mov push mov stc icebp or enter mov aam cmp iret test sbb stc lea addr16 jg inc fucomp fstpl fucomip in jns mov imul jno xorl add cli mov ljmp or jb adc negl test lds mov dec jnp push pop (bad) or leave jb jp cmp imul cmp aaa inc push popa pusha xor xchg xchg push sti das test push pop idivl pop xor fisttp add push sar push mov jne ret xor push in pop inc and jnp icebp push and stos sbb inc mov lock jne dec lret (bad) ljmp pop mov aad lock mov jge mov lret add out ja aas xchg test xlat in loopne mov cmp call mov test add ljmp jl loopne pop pop add js js mov leave shrl (bad) cli pop das or cmp jno shll (bad) imul push adc loop outsb mov mov (bad) cmp loop leave cmp sbb mov arpl cltd aad mov and jp or lcall add xor jb rorl aad (bad) aad mov push adc lahf pop popf dec (bad) ror or push lcall xor mov es jno xor ret and movsb cmp xchg xchg adc fsubr push das les loope xchg xchg cld add (bad) nop mov ficomp js mov out pop rorl xlat rclb hlt jno (bad) pop mov in xchg in xor jle xchg jne dec pop dec dec mov lcall add add add adc in lret (bad) lret jge repz stos (bad) jbe xchg out mov repnz dec dec pop loop sets ja pop getsec or mov push sub push (bad) insb or stc push jle inc xchg popf push dec insl andb jne movsb mov jae push sbb (bad) scas push int3 rcr dec sbb push aaa aas mov fmulp adc mov mov mov pop mov adc adc das imul imul mov jbe inc mov shll mov xchg pop xor mov add add clc jnp rcr fcomps mov and xor dec sar or pop cmpsb push fcom popa mov add dec add cld dec and xchg jns sub aaa dec pop popf test mov jge sahf test fstpl dec into popa cmp inc daa imul mov inc cmp push sbb dec enter sbb cmp adc sub repz mov ss adc push push imul ret or mov add add add add data16 xor add out shr push xchg out push fcomps mov push pop push sub pushf gs lret aam pop push sub cmpsb mov push pop test test inc jnp inc ja movsb cmp aaa pop cltd push test sub les sbb cmp (bad) pextrw sbb int3 imul scas (bad) pop xchg pop loop inc popaw call in mov into sahf pop pop xchg dec cltd cwtl and fldenv nop cwtl xor lock jecxz add add add add and (bad) xor inc add or xor inc add enter dec jbe mov mull mov push outsl mov or lcall add add int3 xchg fisttpll ficomp dec test mov jo xlat sub out dec (bad) aas das dec sbb mov (bad) mov jecxz xchg jge xchg enter jns push add mov stc bound mov sub cmc cmp pop stc sbb ja (bad) aad sub xor sub fcompl add add mov fild test das add pop sub xchg mov add aas mov idiv inc movsl xor dec rolb outsb jge dec pop test stc mov mov movsl xchg dec (bad) cltd mov sbb and mov out adc xor pop stos stos sub enter out cmp movsl mov xor mov jnp or xchg push gs sbb (bad) (bad) mov insb and es clc cmp add add add sub xor (bad) mov lock adc dec int3 mov sbb sarl lods mov into pop nop mov stc cs out xchg scas std xor sbb mov lock push popl shrl jnp nop mov dec xlat ret add sbb pop jne adc call in jnp subl test pop dec or in sub out stc outsl enter or jbe mov dec sub push out mov paddw inc add add add das scas ror and fabs imul (bad) push mov popl sbb les enter mov pop push mov (bad) adc lods ret dec mov add cs mov repz pop and (bad) mov adc imul pop push inc lret dec fsubs aam add cli pop lds rcr fsubrl out sub test popf pop sarl sub add inc push inc mov aas rcrb pop or (bad) out inc sbb add add add xchg popa dec and in or xchg push out mov jmp (bad) (bad) out dec insb hlt cmp add (bad) js xchg xchg or cmpsl dec addr16 jbe repnz sbb xor push stc fldl sbb jecxz shrl add pop or clc pop inc xchg sarb insl mov daa mov data16 mov out jns fdivr pop (bad) jae rorl xchg jae js add mov movsl les add add add popf outsl in jmp arpl pop nop inc mov outsl mov xchg out (bad) jecxz push movb dec mov or cmc add iret int3 mov test xchg test and stos (bad) mov enter addr16 loope mov in jecxz sarb xor mov das arpl and add out push outsl negb shlb loopne (bad) idivl int3 addr16 xchg sbb fucomip mov push sbb in jbe push in cmc fcmovne cmp xchg jp add add add adc mov inc repnz mov push cmp push mov loopne fs aaa push dec loope outsb aas les and sbb cwtl mov dec add jmp mov fsubl xchg hlt xor and mov enter mov jne fbstp outsl jmp dec insb push test lea adc push jl or test fnstenv pop pop sahf enter push je xchg cmp sbb dec cli in pop in ret sti cwtl or add (bad) pusha aaa in jmp pop adc xchg sbb clc push and push cmp xor lods pop popa and test pop movsb loop ss adc popf push cmp jno xlat stc aad pop mov xchg mov lahf rclb mov push mov push adcb inc and mov sub imul shrb add int3 inc jb int test (bad) jmp xchg enter pop pusha arpl sbb add insb leave mov (bad) lds push lret loope (bad) stos and push mul xor sbb popa mov push ret jg fisubl inc pusha shrb jb in xor jp pop fwait mov jnp fs sub sbb adc jle in pop test lret lods inc jmp outsb fwait test std andb fldcw push xor in cmp lret adc movsb ljmp mov xchg test adc xchg lock mov add add add add add jb sub lcall jo add cmc sti and dec pop lret shrb push sub cltd dec dec jecxz inc xchg aam jbe test rcll mov add lea ljmp and jnp pop pop jge add sub jno jecxz nop pop xchg fs loope (bad) xor lret lock dec mov mov int jmp add pop into mov xor and std in pop add fst push call add add xchg shlb cmp inc or (bad) scas mov stc in push pusha jecxz xchg daa inc popl push pop loopne (bad) iret inc test sub inc cwtl fwait (bad) fistp push sub ds inc loope mov fimul insb (bad) dec xor test fucomip lahf jle fs dec xor jae xor stc leave lea jne jae outsl sbb xor adc lcall movsb loope adc dec push loope xor subl (bad) fisttp int fucom hlt popl add add mov adc hlt repz lods ret or cltd cs xchg mov mov in sti jle adc inc or dec mov stos pop cmp repnz jp mov xchg imul pop add (bad) dec mov aad xor ret inc cs jbe pushf adc inc or xchg pop arpl stc in xlat pop out inc push and cmpl (bad) lea push add push sahf fnstcw fildl add add add mov fcoms mov ja push (bad) fisubr jno jb xor test xor mov subl fdivp aad lods mov outsl in fidivr add inc dec mull imul sbb xchg mov stc jnp lea jbe xchg push mov cmp insb call mov mov jno (bad) push push in test ret adc ljmp dec mov mov jg push adc fcomi pop (bad) mov in pusha push adc add add dec jno cld loope xchg mov frstpm(287 mov (bad) and rcll scas rcrb test xor inc daa mov push jmp mov mov dec jl push incb (bad) xchg pusha xor xchg pusha push push mov push fistpll adc pushf pop add outsb and add inc mov ljmp mov mov mov and cmp push lock xchg jbe fstpl sbb test add add add push push lods mov (bad) jle mov jecxz repz call hlt dec adc xchg push cmp sub xor and adc cmpsl lods aad enter mov imul (bad) jmp jge jbe ret loop in adc xchg and cmpsb mov mov jecxz fs lcall mov data16 xchg mov cs idivb adc clc cwtl mov inc in cmp sbb test jo inc mov cmp mov jge loopne incl mov add add in inc aas aas add sub test mov mov xchg jle adc and jnp les inc cmp add lods push ljmp sub test in (bad) mov gs mov cmp or xchg jecxz inc imulb cli ret pop mov dec (bad) pop loop clc mov cld ror push outsb sbb (bad) popa addr16 jnp loop mov outsl (bad) xor sub add fs push subl outsl mov xchg dec add lret imul add cmpb or cmpl add jae (bad) notl pop movsl jbe pop jge fcmovbe lret (bad) cld outsl shll cwtl sub arpl cli lahf cmp add aas ja lock js mov pop push mov sti rol mov mov inc or loopne lea repz sbb jg notl add add es leave or add lds xchg clc ja ds cmpsl outsl insb jecxz add xor rorl push arpl dec add add add and jge pop lods movsb mov fidivr inc inc out sarl xchg jb fsub lcall jne jne pop stos xor data16 pop jne lahf push cmpsb leave xor sub cli sbb bnd out sub sub repz sbb push or and enter mov dec fnstcw int gs lret test scas mov xor mov sbb or mov in jl cmpsl jge std fldl add add add insb pop sbb jnp jmp add and icebp sub and dec mov jno xor jl mov sarl jp mov mov leave push pushf dec outsl mov push jbe mov gs mov movsb inc lret xchg aam jae gs ds imul xor xchg jle jg xchg pop mov push jo xor push jecxz pop int3 mov sti mov scas sbb pop loop inc es add add inc mov mov push push or ret sbb sbb adc adc fwait jge cmp mov jno fist es xor mov and fidivl push jbe mov in push incl inc movsb push push sub popf je arpl std push (bad) adc xor push sub add loop mov sub or ss mov adc push lea push dec jp dec jnp js (bad) push sbb add add paddsw rcl mov data16 lods dec scas clc into (bad) sbb adc into aas int3 push mov jno gs mov mov scas jmp (bad) inc jnp out mov pop sbb add or imul adc es outsl je inc adc mov jmp mov adc push test pop jmp inc aas addr16 data16 insl les sub mov mov ret rcll inc loop out add add add add add add into pop or outsb xchg test les inc stos xor ljmp xchg stc jnp pop pop cmp sub xchg xor push sti push sub mov xchg out and jmp mov jo roll jge jae xor jge xor xor repnz std push xchg pop cmpsb add cmp sub or rcrl adcl mov dec aad add inc aas lods mov inc xor mov jp and mov xchg add jo add rcll fnstsw shr stc jbe (bad) xor test and int cltd inc fimul or ret xor lock cmp pop je push jne cmp jl maxps pop scas or xchg icebp aad inc stc mov faddl addl lock sbb rorl fbstp mov pop xor out and loopne stc ret mov mov mov sbb add add adc mov mov (bad) mov xor or loope rolb hlt pop (bad) pop sub faddl icebp push jno xchg xor mov roll push push lods pop clc leave mov into addr16 rcll xchg sub inc cmp adc ss fstpt sub pop dec dec fistpl jmp inc cli (bad) and push test jnp scas cltd popa js mov add inc rclb pop and gs (bad) mov push add rolb add add add aam push mov sti repnz cmpsb insb mov fldl xchg loope mov rorb push (bad) jbe test mov movsb imul pop aam mov cmc push pushf lods inc aaa (bad) mov rorl add jmp mov dec call or leave movsl xchg fildl mov dec loop mov and daa jmp (bad) or insl out shr inc pop mov imul fbstp inc test stos popa popf and fcoml lds es mov leave fisubr adc in mov aad xor loop dec xchg sub orl subb push xor cmp (bad) cmp popf xchg test xchg add lahf fistp cwtl adc cld lahf outsl pop int test rol dec popa fcomps fcoms divl mov aad js hlt jecxz xchg lds cltd sbb sbb aad mov mov add add add addr16 xor das (bad) loop sub and movsb notl (bad) nop jp sub fistp lret inc jg lods dec call cmpsl scas imul push (bad) cmp (bad) js iret xchg aaa pusha sub sub je subb mov adc cmpsl mov cmpsb inc mov int3 lret addr16 fcom (bad) (bad) pusha in test dec loopne insl loope test xchg icebp ret jne jns out test insb daa xchg pop cs push pop mov imul adc ljmp rolb add add faddl cmp (bad) ja mov ds addr16 sub ficomp pop movb out jge pop xchg push into popf xchg cmp cmc xor in repnz jg push sbbb xchg fisubl arpl imul cmpsl popf xchg mov adc in jne xchg aad mov mov sub xchg dec es aaa lock or loop push inc lock std test dec daa psubw and cmpsl add add add and hlt cli xor call push xchg sbb jnp cmpsl jb and cmp pop pop aas cmp jno sbb or add add loopne fldenv insb sahf and cli cld xor mov cwtl mov stos mov jmp (bad) xchg insb in dec popa (bad) and cmpsb xlat dec int pop add out mov pop or sbb xor pop pop sbb movsb dec je fisub add pop (bad) (bad) xchg loopne push add cmp fildl jne rep mov cmp cwtl mov inc pop enter xchg cltd rcll sti (bad) pop mov orb repnz jge sub aas rolb popa push stc xor xor test in mov pop movsl jno call xor mov xor push adcb (bad) fidivl mov and xchg popf and xor imul pop (bad) ficoml add dec push fistpl out cltd mov aad or cmp (bad) inc sbb xor jno ljmp and movsb (bad) cli xlat (bad) mov (bad) and dec push add stos icebp jl (bad) mov mov pop and pop sub or hlt cmp in andl in jo (bad) test jne loope pop mov cs and mov pushl jecxz mov and xor pop leave fiadd add add add dec (bad) (bad) mov cmc fisubrl mov xor or je (bad) sti sub jbe xchg xchg pop fdivrs shr ss xor test mov rorb imul push notl push adc movsl xchg aas hlt (bad) xchg imull fdivrl test add push xchg sbb daa sub cli add and jp xchg add push call mov mov sub xor ljmp xchg jns in mov std call je ficom sub add and jle push inc inc add pop iret jne mov and in or fsubrs lahf fisubr (bad) icebp (bad) aaa sbb jge in sub and cmpsb aas imul jns add sbb movsl inc push mov mov and cmp dec fiaddl add orb ret sbb push nop xlat inc popa in insl es dec mov mov or shlb cmpsl jbe cli repnz xchg cld jge add adc xor dec or jnp cmp cld shl sub add add add jbe data16 es and cmp pop cltd mov push mov mov insb pusha lcall cmpsb cmp arpl sbb jmp xchg and lea ja and jbe xchg test test pop in cmp leave and ja mov out dec ret mulb push or jns or movsb or or stc push daa seta jge out fistp int cmp negl mov pop jns pop dec out add inc pusha popf mov add add add es (bad) sbb (bad) cltd pop mov jmp sub xchg mov aas dec fcoms popf jbe pop int3 imul jne cwtl dec cmp mov (bad) xor and mov dec xchg mov mov jl into sbb rcrl xchg and loopne popf (bad) mov push es hlt fstl jne ret push fnstenv or ficompl dec out cmp sahf int xor jne jno das xchg sbb lret mov lret (bad) stc push incb add add add cmp xchg push mov xor pop orl clc stos rclb imul pop rcrb mov punpcklwd dec mull xchg sbb aaa jae movsb mov lea jge fsubr (bad) inc fstl add and insl jmp rol sbb es xchg cld jg cmp stc adc jno inc adc frstor aad mov ret fildl adc arpl push shrb rol sbb fptan (bad) (bad) xchg int3 imul add add add (bad) adc or dec pop imul imul aaa pop mov xor gs and cmp xchg rol jns insb sti adc cmp cmpsl ret dec mov add xlat popa in jle cmp sbb fisttpl cmp pop in mov loop push or xchg lcall inc lods cld pop add mov icebp stos dec pop movsl js or sti incb out scas popa mov jns pop add add add add mov inc in jb and cmc imul or mov push push jo jbe dec sbb inc push clc jae bound and xor out mov icebp mov xlat ret cmp push in push inc jl and inc movsl int inc popa cmp xchg push cltd negb (bad) repnz fwait sbb inc xchg rcrb or (bad) int3 outsb es mov das rcl aaa sub or mov and jmp adc add add cmpsl rclb les or arpl das xlat xor bound inc aad clc loop sub fisubrl ds ds add in daa jne movsb jmp sbb jae icebp repnz lds in sbb out sti sub push xlat out sbb xor lea std adc scas rolb or scas xor sub jmp (bad) xchg mov fstpt xchg cmc (bad) jbe outsb fwait jbe aas or loopne cmp add add out bound lods fsts aam aad mov fstps (bad) mov les xor popf cltd out out stos les sbb sub xor push lods sub movb cmp adc jnp cmc adc (bad) and xor fs cmp or mov mov nop test ret pop ljmp inc mov cwtl cli xchg sbb dec scas jbe aas sbb popf fbstp mov ds sahf mov rcll or xchg dec gs (bad) outsb int sarb add add add icebp lods push xchg jge (bad) inc mov in or adc repnz adc xor inc mov in test imul inc sbb push inc test ret test iret sti test (bad) int3 and sahf mov mov jg mov cmp insl mov adc add inc xchg mov cmpsb mov dec cmpsl ret jecxz push jb mov dec jg repnz add addr16 sbb xor or cmpl xchg cmp mov scas sarl cld add add add add sub mov dec gs pop inc pop ds sti and jo clc stos out xchg mov dec mov pop mov push jno ja push lret int3 add mov lcall mov mov mov cli and test les negb mov int push sahf pusha pop push icebp repz and push push cmp add cmp test cld gs in fsubs insb sbb mov rcl mov (bad) jnp mov pop push sbb into fidiv xor fdivs jns popl add add pop dec mov (bad) jge push fs mov mov (bad) pushf jg popf pop in ljmp pop sub cs (bad) rolb idivl push ja push cmp shlb lods pop add inc mov out mov jge mov icebp push in into push sub (bad) mov pusha fwait (bad) mov xchg clc pop popf (bad) stos ljmp mov add xchg pushf notb sahf xor xor loopne adc shlb dec sub stc loopne pop jecxz inc test and add add add ret xchg mov shll sbb and xchg sar ljmp (bad) rol pop lcall adc push sahf lahf push bound and insb out call xchg les xchg test jns mov test pushf jmp mov iret mov loope add add jnp cmp xchg cmp cmc xchg mov stos fdivrs inc mov jge iret or enter cltd dec adc ljmp add add add sbb fisttpll std ljmp mov xor test setle push lcall adc jl dec gs dec mov jmp addr16 cmp mov js in movsl ja in in mov mov inc aas mov cltd xchg pop notb xorl and imul lret stc mov jl jb popf pop push xchg movsb cltd or loop les dec push sub ss addr16 sub mov loopne clc mov xor into (bad) outsl arpl add sub lcall sbb iret jmp mov cmp adc sbb in mov push jo in jb push adc add daa jmp sbb in fildl in and repz test jp dec xchg mov daa jb add stos inc inc add or push jo sbb cmp repz add inc mov dec scas addr16 mov xor xchg mov xchg ss call sub add add add or push addb or inc fsubl imul inc js iret sbb jmp cmpl ja iret sbb jb mov xor sti cwtl fs inc inc inc push mov ret mov je cmp (bad) pusha jg clc jno rcrl das nop stc mov sti add push notb dec mov xor pop stos lret movsl mov test icebp dec in jg or dec bound lcall xor jns dec push add add add add xor xchg (bad) pushl (bad) ljmp and xor inc mov aas jge mov outsl fwait inc lds fwait js jne (bad) ret rclb fist or mov pop cmpsb mov mov mov jp pop pop xchg cmp (bad) int3 ficom pop mov fstps xor jno add push jecxz push out lods and stos mov jnp dec in lahf mov cmpsl xor shr cld (bad) iret fs (bad) xor enter incb out int mov jae inc dec pop pusha jb push (bad) sbb inc (bad) xlat inc cmp mov mov stos test jno std outsl adc add mov fsubs shrb pop xchg jno push adc dec mov loope lcall mov adc xlat xchg aas and mov sub jl ja lret cs cmp adc or stc jge cmp sahf sbb cmpsl push mov rcll cmp fs fiadd and add add add outsl and cltd pop jb fs fistl adc mov jle repz data16 sahf xchg stos adc dec movsl push into rolb jg xchg xchg lahf sbb into loopne (bad) fldt (bad) sbb (bad) (bad) mov into mov call in aam pop pop test out test or mov dec or stc xchg xchg and pop cmp aaa jo jb sar or push out sbb sbb in sbb lea add sbb xchg jle push xor out movsl fiadd add add add add cli popa sub call jl sub mov push movsl jle or pop emms fwait shrb push or outsb dec js jmp enter stos cmp inc loopne jbe adc and in push je sbb cmp or inc loope cmc sbb lds out mov mov idivb mov add or pop and hlt pop and ljmp inc clc inc add mov rorb (bad) movsb aaa arpl test fsubl add add add mov dec pop inc inc std sbb jmp jne mov or xlat mov scas mov xlat mov dec dec clc sbb mov pop int3 mov adc mov lcall pop mov (bad) js sbbb add scas lds ret (bad) iret jo sti cmpsb cwtl mov fimull jno incl fwait mov arpl cli incb pop ret cmp push sub lods mulb pop pusha roll mov orl lds out in xor and add add inc outsl in and or adc mov addr16 xchg mov hlt mov mov xchg jmp jne imul stos sarl lods stc ja xchg loopne (bad) (bad) xchg test bound popa insl ss cmp clc push out or jle jecxz cmp cmp rcr mov jg mov divb jne add aam loopne xchg pop shlb pop int3 pop mov popf jg ja mov sar xchg dec icebp xchg mov movsb mov push mov pop inc gs in setbe (bad) loope and les outsb dec lret cmp sub in add cmp ja insl jns mov adc daa push push mov outsb mov (bad) mov icebp sbb decl pop or fistpl fsub out sbb ficom and cmp cmpsl pop mov dec push in loope jle dec push mov and nop rolb jge sti rolb and jecxz push rol jno and sub jecxz lods add add add fcoml pop push and xchg in mov test pop stos cltd leave xchg ret cmp xor icebp imul xchg inc push (bad) inc mov cmp pusha mov xchg push dec jno mov lahf sbb into xchg (bad) jg xor inc cmp leave xorl push push test lds xchg test test inc loop (bad) and sub sbb es adc fldenv stc adc dec add lods mov and stos mov hlt pop stos aam add cmc aaa mov insl cld add pop lock or inc mov in out cmp sahf (bad) lds dec jl mov jl jb sbb adc dec loop push pop lcall pop rcrb loope mov adcl cmp cmp dec adc iret sub push jmp push in (bad) mov movsb (bad) push xchg add insb and adc pop push lods rorl repz js push mov lock mov mov out add jbe scas mov push sub enter sbb loopne aas fstps adc inc data16 jno neg push hlt mov (bad) push aaa test stos testl lods sub jbe and and sub ja jb adc sbb push inc (bad) jp cmc cmp fmull xor xor cmp (bad) pop (bad) fcoms inc sub (bad) stos vxorps cmc push sub and sbb ja ds int3 add cs aad ret movsl roll shll rorb add add add add test pop hlt fmulp movsl xchg push pushl sbb imul add or inc mov aad aas mov scas scas movsb nop mov jge sbbb mov pushf int xchg push and inc mov cs (bad) mov jecxz stos mov mov mov imul jecxz cld mov (bad) mov xchg pop dec or pop push aas stc mov addr16 test je cmp imul xor inc insl push fisubr mov add add pop push push fwait (bad) jnp dec int3 shrd xor lods js pop and insl mov lods pusha push aad imul mov xor xchg and inc xlat push push mov pop call sub hlt in lock std fdivs pop (bad) (bad) jmp or sbb pop or add mov mov inc fwait xor jno jecxz pushf pop xchg fldenv jmp loope divb fdivs inc cmp lret mov sub mov lcall add sbb or popf (bad) sbb stos add dec in imul dec fildl push movsl mov js orl mov scas (bad) nop fwait lods jbe jle loope dec (bad) sub loop xchg addr16 sub mov out inc (bad) mov and inc push inc sbb lcall aas inc sbb js xor dec jmp and (bad) (bad) fisubrl insb sub bsr in xchg cmc mov dec scas je stos jno add add add add sub push (bad) cmp mov fwait loopne push (bad) push push dec lahf es fdivs push notl jecxz cmp xchg scas ret dec ja mov mov sub mov mov sbb and repz enter cmpsb cmp das push aas repz arpl lcall loop dec repnz ds adc push sbb sub sub pop sub out into or jle jmp add add add fistpl repz aas and scas cmpsl dec mov jb popf jae push cmp js mov pop jl int inc add pop jmp sub xor fnstenv xchg jecxz xchg mov or cmc xchg pop lret mov lret (bad) xchg movsb call mov hlt pop cmp xchg pop ja je loopne cmp cmp xchg test gs inc jo push mov pop clc faddl popa (bad) movsl sub jge add add add add adc (bad) dec lods cmpsb aad pop enter ret push pop or add add sbb push pop and push mov push xchg push insl aas or fldl push (bad) cmc loope,pt inc cwtl add cmp (bad) mov xchg and cmc loop xor pushf and adc clc or mov (bad) mov jno and nop rorl in push sahf scas sub sbb mov xchg aaa mov ljmp xor sub and jecxz std roll cmc jne test adc aam dec pushf jnp fdivl sub or add add add (bad) jmp mov xchg int or inc dec add (bad) stc std jno xor fadd imul notb movsb repz inc mov pop sbb inc cmp imul sub dec inc repz loop sbb xor or mov sbb lods pop cmp or cmp cs jae mov and pusha xor xchg out or adc dec loop xor mov adcb sbb pop push (bad) add add add pop ds mov (bad) sub push aam iret push insb and pop out jmp aad dec inc mov cmp or push subl lahf mov fidivr repz popa sub pop imul adc add xchg test sub xchg xchg arpl stc sub pusha inc sbb jbe les cmp sbb ljmp popf add or lcall ja xor subl pop out inc int mov add add dec sub fldl mov movsb dec cmp daa mov lahf jmp inc lcall aaa (bad) fmul test or mov push mov outsl push adc and dec pop xchg jns out test xchg gs loop into xchg jnp jno and out pop pop push sub mov fs add mov mov repz xor or mov xor in call and and sub adc xchg mov add add add lea mov push adc je cmp fsubrs iret dec xchg inc movsb in imul inc popf pop (bad) test xchg sbb in cli cmpsl pop mov ss push ja pop data16 or rcrl push subl mov jg sub outsl arpl (bad) rcll movsb xchg jmp adc test push xchg jecxz mov mov imulb rorl adc rol js ja xchg repz fsubrl aas hlt in rcll jmp (bad) sbb stc add test ds cld sub test sub xchg enter test jl inc loopne inc loop mov mov (bad) push add sbb fdivp add nop icebp push push xchg push cli mov leave dec incl movsl push out jb xor lock imul out inc jge (bad) shlb in mov mov loope sahf mov mov xchg mov mov lcall inc rorb push mov push mov gs jne (bad) mov and in sbb fs bound add add add loopne jo mov adc out hlt mov lock scas bound lcall xchg pop xor jns lods fnstcw mov jl movsl adc out fisttp cmpxchg pop inc and (bad) mov cld xlat sub inc xchg std adc xchg mov jo (bad) push aad and into xor sub fdivr push dec in jnp push jp dec mov push js inc push (bad) hlt dec aas dec insb (bad) (bad) add add mov add add add add mov jmp fwait cmpsl cmpsb xchg jno in dec aad ret sbb push mov add pop jb repnz xor mov movsl (bad) cmp xchg ljmp ret es insl loop lock pop dec dec inc data16 push pop (bad) push or or scas fwait mov cmpsl dec xor pop cs js or mov loope insb (bad) fisubr in jecxz jmp scas std jp repnz dec int3 xlat mov add add add pusha dec jp cld push sbb loopne icebp add xchg frstor cmp movsl ja (bad) xor mov add inc test mov sub mull mov stos (bad) stos xchg lcall dec jmp inc dec inc adc lea pusha je xchg xlat adc mov rclb xchg cmp test fs lret or popa sbb mov fidivr jg sbb cld jno pop sub pop incb rolb popa xchg xchg test jbe lret popl add add push inc and dec (bad) int3 enter stc add into cmp xor fwait push std fidivl and sbb sbb fisttpll inc dec fucomi leave pop aad sbb xor nop insb xchg idivb xchg call rolb lods testb sbb inc sub fcmovu push xchg fistp rolb add lret dec inc lods dec sub adc or inc nop and hlt mov push dec xor cld mov cmp and xchg lods cmpsl lds adc dec (bad) inc add jle outsl jl ss in call repnz pushf sarl icebp addr16 jp push sub inc jg ljmp in arpl mov fs cmpb pop imul cmp ret ret loope sub push call int popa and fstl mov sub test imul out add jge test jg in dec movsl mov add add add mov imul repnz jecxz mov fisubrl hlt jb mov push sub test lret insl sbb adc nop and aaa fldenv xor scas jp cmp int3 lds je aam mov add sbbl lods inc rorl scas addr16 jecxz cmp jg (bad) rcrl mov sub test dec call xlat jno push pop aaa jl clc mov mov test call pushf mov arpl mov add add loop mov sbb arpl aas frstor dec or push aam sarb dec jnp adc out in shll (bad) cmpsb lods xchg outsb loope xor jge insl xchg iret sub mov mov push daa orl loopne adc pop aad loop xchg insb xor push sbb sqrtps dec cmp std fmuls sti ror xchg lea or mov mov cmp out xchg lds jge and roll xor (bad) aad jl fisttpll add add add dec insl push scas fcomi mov mov je mov dec push pop nop mov mov mov mov scas je push mov int3 fcoml pop and aaa or pop jmp imul lock scas add jle loop cmp les lods jmp aam imul scas mov dec lea pushf daa je dec fistl repz pop fidivl sub pop push iret mov stos push pushf fs cmp add add add xor lcall inc mov push loopne loope sbb aad into jno mov in pop sub icebp pop ja sbb fs out mov shrb sub cs daa dec inc jmp out mov adc fildl nop hlt mov fdivrl (bad) xchg fcomip adc mov sub inc icebp in xchg ds loope or inc inc and fldl orl lods lock std xor xor jnp hlt imul push xchg add and f2xm1 lods lds mov sub push bound lahf into dec pop and icebp sahf aaa xchg mov into rcll jg setl popf pop das and aaa and jns sbb add sbbl leave fcompl push mov xchg loop jp fs sub mov pop loopne xor push jne (bad) cmp adc fcmove push shufps dec sbb cmp adc inc xor push xchg (bad) xor pop add hlt adc sbb repz mov sbb xchg vandps xchg jns ret mov (bad) xchg movaps mov ja jp repz sub mov sbb sbb in int3 sahf pop dec pop iret clc lods lret cli xchg enter orb stos sarl fwait (bad) daa mov mov pop div jae clc imul xor popf sahf (bad) jge femms add push ljmp add sbb ds stc test cmpl (bad) aad movl bound add add add add cmpsb mov mov cmc je mov and test das mov sub xchg adc aas mov adc out cmp (bad) xor pop cltd mov mov inc out or data16 leave daa lahf cmp or adc xor sbb adc dec outsl xchg shrl sbb mov lock pop xor push lcall sub movsb mov stos loope push leave imul scas dec roll sub sub insb push add add add mov int bound aaa mov leave and jnp inc movsl lret push (bad) sub repnz lods mov sbb sbb lods not dec xchg lds fs push pop add rolb add mov pusha stc mov pop dec mov xchg rcrl push sub push (bad) js subl je orb fnstcw nop lahf (bad) adc enter inc stc mov xor or jmp sbb ret push pop pop push pusha or adc push push adc add add add pop push (bad) test push adc fwait (bad) and adc jge pusha iret inc xor inc mov dec cmc aas (bad) rclb in sbb jo mov shr loopne xchg dec cltd fwait mov fisttp sub repz test popf mov lret inc aas enter aaa xchg inc aam jns inc add sbb add pop addl push repz outsb jae xchg addr16 pushf call mov xor xchg fidivl xchg pop jp into add sbb add add mov into out dec (bad) (bad) jb or xchg popf push push push stos mov jnp add inc mov or ljmp dec data16 movl cmpsl mov or ficompl or jecxz lods mov sarl pop mov sub or test pminsw in push xor mov mov inc into pop test dec inc loop jnp call mov in out lock xor mov or add add add pop (bad) icebp out pop outsl int3 and (bad) (bad) push cmc xchg out mov sub sbb mov lret and xchg mov daa stos rolb mov pop rcll imul dec sub lret xor das jmp pop aaa xchg push sbb push out icebp sbb jno loop rcll fwait add pop xchg mov adc daa sbb stc in and rorb mov add dec stos lret leave fcomps xchg sahf xchg movsb dec (bad) push sub mov add add add pop out push hlt arpl xorb add bound adc or push (bad) in sbb xchg (bad) xchg xchg mov pushf popa dec mov and (bad) lret mov inc xchg test sbb jne or pop popa (bad) (bad) mov pop sti or test sbbb inc call arpl inc aas jne or inc push add xchg fwait (bad) and mov jo push mov sub outsl js pop dec movsb or lret mov xchg pop dec inc sbb xchg mov in in pop outsl insl add xchg xor sti xchg addr16 jge movsl ja fisttpl xor inc mov jg sub sti leave sub cwtl lods jmp sahf adc mov fildll mov add loop movsb je xchg add repz mov test add nop mov add mov mov jmp mov (bad) mov mov and dec lods cmp fdivl movsl (bad) decb mov fiadd mov dec lea sub loope cmp movsl xchg fdivl mov je fs lds or xchg sbb push (bad) pop adc (bad) adc add add je pushf xchg popf rolb sahf sub cli out test (bad) xor add lds aas inc je or lds (bad) call lret cmpsl ficoml sahf out mov xchg jb ja sarl cmp inc mov adcb scas lret inc fnop shlb std cmp pushf sub jecxz call pusha pop cmp enter jmp sbbl (bad) and sub sub repz push adc dec cmp cmp iret in xchg pushf ljmp jmp xchg dec mov mov dec jp fcmovnb ja imul sti rorb push cmp in loop imul test (bad) xchg das pop lahf dec int jge ss repz cmp adc mov add add add pop sub xchg into jae cltd mov sub andl xchg jb mov xchg xchg and jo fdiv pop adc loopne push mov xchg adc inc int push in xchg lock cld lcall mov adc (bad) adc mov xchg cld add lea sbb icebp xlat (bad) fild bound pop cmpb les mov mov xchg inc in xchg pop xchg xchg or inc ret jb push cli jmp mov cltd mov mov add add inc scas (bad) inc mov push jg add dec inc je es mov scas sub mov mov gs dec pusha cmp movsb xor xchg (bad) jl add push roll jle mov in adc rcrl add mov adc dec adc frstor adc cli ret push inc xchg lds es push jno mov inc add mov ja dec mov dec fadd insb push xchg es popa js movsb cltd test (bad) enter add add add repnz fcomps lret and mov enter xchg mov cld repz mov arpl inc mov sbb es xor out leave jbe jb (bad) or pop sub lods inc lret cmp sub bound insl test sbb out stos inc repnz push or lcall mov jne sub shrb je sbb sub mov push int3 dec xchg jb adc jae xchg or int add dec add add add aas sbb int and (bad) xor nop xchg mov xchg push mov insl xor (bad) dec and or gs jb stc mov mov in imul inc and imul jge sub and xor in dec xor push mov mov inc (bad) aad adc xchg sub dec pop mov (bad) xor adc fadd dec mov sub imulb jne sbb and insb push scas clc pop inc loop cmp mov ret add add sarb fidivr sub cli icebp mov mov aad push loopne fmulp addb and or mov dec imul clc negb mov stos fstl pop push repnz shll dec jno fucomp sti xchg outsb cld and mov mov add or pop scas mov repnz bound cmpsb dec ja mov inc inc sub mov inc jle rcrb mov clc cmp (bad) jbe xchg adc out jp dec sbb add add fsubr pop in jecxz xor push daa dec rorl jae pop insb dec jmp ret js or std fistpll cs sbb sbb lods loop rcll shll ds (bad) jge stc pop sub sub les inc fdivs popl dec jl test ljmp mov jne ficompl cmc jne cmpsb nop or scas (bad) jecxz in mov fistpll mov insb loope sbb jns adc inc in xlat jmp add jnp push mov and add add jmp mov cwtl dec mov mov xchg ret imul sub lods dec adc pop xor xor insb mov mov cltd popa mov stos (bad) mov mov mov loopne adc jl pop pslld gs inc fs lcall mov cmpb pop mov sbb add das xchg cmp push dec cmpsb popa mov int3 in xchg (bad) cmp adc outsl cmpsl out rolb add add add jmp stos ret hlt in inc and lahf cmpsl sbb or xchg add shrl add or or and fistpl mov aam (bad) dec xchg cmpsl cmpsb and decb jae jcxz clc inc (bad) jmp xor mov fcmovnu sbb dec sub push mov insb pop jmp pop pop push lret cs mov or jbe int3 sub xchg xchg ja test add dec push inc jp xchg xchg mov dec lret sub js lds add add (bad) faddl xchg dec repnz mov xchg pop dec sbb adc lea and outsl (bad) in nop pop mov imull xchg mov push pop cmc mov test or sub gs jmp jge cmp dec sub das dec nop push mov lds mov test push jb fiadd repnz xor sti sbb (bad) jg cli and (bad) mov sbb in push pop aas mov mov push bound dec jecxz cltd xor (bad) data16 mov adc data16 int3 adc pop fdiv incb cmp jnp loopne mov stos jno out lock fstp loopne mov ss sahf xor push mov daa je push outsb je mov loopne inc sti adc or xchg pop insl dec rclb jmp fisub xorl ficom daa jns cld idivl lds cli fdivl popf push (bad) mov movsb adc and repnz roll add add add push xlat sbb ss outsl inc je in aad cmpsl hlt inc or sahf pop cmc std mov and scas test mov adcb sti push push aam jns lret sbb adc cwtl ljmp jnp clc aas mov pop push (bad) iret xchg mov add insb mov jns ret icebp popa rorb dec lods dec push inc push and sub cwtl pushf pusha iret mov mov pop hlt sbb fwait in imul pop push mov enter mov add fisttpll push rol insl sub add add add in adc (bad) ss cmp adc popf mov jnp movsl fistpll lea lret ja dec push push mov add pop xchg xor dec add scas fbld test imul les mov mov out out push mov out pop lret mov adc cmpsb sbb insl push scas xor aas mov sub (bad) fstpt add dec add (bad) push mov push mov addr16 xchg outsl stos lock and xchg repnz sub add add inc test pusha xchg jecxz (bad) stc popa pop mov push fs xor xchg int imull int3 ljmp dec movsb scas fdivl sub jl mov dec xchg push mulb data16 das fadd pop shrb ret jno roll jg jno jne inc and xorl mov jle outsl xchg mov jp add (bad) int test stos mov or mov cwtl dec inc add clc popa flds dec push xor and sbb sbbb add add add add outsl in in mov adc pop lods mov dec addr16 pop pushf aas xchg stos in rcll nop ljmp sti gs arpl call mov cmp jl loopne int3 out gs (bad) xchg add cmp mov jno mov mov dec js rcll (bad) cli jmp xchg inc cs js push lods orb je mov add out sbb pushf cmp (bad) dec jne jnp out js cmpl mov and lcall add add js jge pop shl mov xchg push pop movsb test mov pushf negl sahf loope nop ja fistp pop dec fxtract pop mov or cmp cvtps2pd dec pop add add in adc add xor xor jnp aaa (bad) push aas outsb loope mov mov push pop or das pop jle jae add add jno addr16 js xor arpl fisub and add dec aam xchg mov xor mov mov add loopne (bad) xor xor (bad) rclb fucomp dec jle inc out jecxz mov xchg xchg pop sub xchg popf jle test (bad) loope data16 js imul lods leave xchg jnp pop int rcrb fwait xchg add lret sbb mov sub fnstenv loope adc mov cmp clc xchg mov iret fwait xor xor fidiv mov jb in xor hlt inc data16 mov inc (bad) xor xlat stos loopne stos popf or dec or arpl add add shr xchg pop pop stos mov jp xchg movsb flds hlt xchg adc arpl mov jbe sub lret std xchg ret jo push cwtl jmp adc jns test push cmpb mov insl out lcall popa xor mov pop or cmp jp sub test cli add bound stos pusha enter insl pushf rorb push rcll push mov daa push lahf rcrb xchg call je pop cmp jecxz lods rcrb mov leave iret mov add add add sahf pop aad popf cmpsb and rcrb arpl mov ret (bad) push xor adc inc in mov into sbb loopne inc push jbe xor pop mov fmuls push faddp push outsb pop push mov ficom mov fwait push sarb test mov fucomp jg fsubrs add pop sbb adc adc add out pop bound imul stos in (bad) mov jnp pop mov std push jle add add add fwait lret adc (bad) mov sbb (bad) insl push sub xor stos lock ret dec push pusha (bad) lea les outsl jp aam add stos jg xchg movsb jnp iret lods add or add push int fs ficom pusha push les inc fs adc imul lret mov adc movsl jmp lahf lods mov xchg add push jl sbb xchg mov pop sahf cmpsl xchg in add aad dec adc aam add add sbb add (bad) cmc and lods push cmp test int aaa cmp loop lret cli js adc mov (bad) mov faddl stc test cmpl ret loope xchg and jge repz jae fstpt daa out mov jmp mov sub frstor data16 sub cmp and insl inc mov jmpw aam jno sbb ficomp xor mov xor and cmp pusha lock fimull imul nop inc xor add add add imul mov cmpsl daa jecxz xchg hlt mov fwait inc pop adc cwtl aam sbbl xor mov sbb mov mov add lcall (bad) pop cld inc jp xchg mov insl or imul xor pop movups in jne fimul dec nop das mov shrl mov cltd aas scas rol push test push mov rclb push cli (bad) or cmpsb dec test (bad) mov dec and sbb dec xchg repz adc add inc push popa test add xchg daa leave fimull cmpsb les movsb call xchg add (bad) mov mov cmp scas (bad) mov sub jns push sbb fistl lods scas push movsl mov push push hlt inc xchg fild pushf leave pushf fisubr stos mov stos inc pop in xchg call scas rcrl ret jne sbb pop mov imul loope jl daa loop je adc lret jne icebp inc add add add cmp push decb mov pushf cmp pop bound pop push and cwtl es (bad) mov mov les nop pop mov mov xchg lret cmp cmp pop pop xchg sahf mov xchg and pushf stos jle test adc call out bound push xor or mov mov es leave jl mov mov lods mov gs cmp test rclb data16 stos loop sbb push mov mov mov inc adc jbe xchg push or cmp inc je pop mov js xor cld adc scas pop loope insb in loop test and inc sahf xor sbb fwait mov mov mov and adc inc push or and xchg push sub imul push cmp dec call shll cltd (bad) fidivr lods fsubs xchg femms mov mov push fsub mov xchg and faddp stc lods out ljmp sbb jecxz jmp add add add adc push shll jge adc cmc jl orl movsb xchg (bad) (bad) (bad) mov or push sbb mov jns mov xlat (bad) sub xor in int dec (bad) jb sarl xor divb adc add mov sub mov pop bound scas or inc or push outsl and mov fisttp loopnew adc pop xchg nop xorl add lcall ficompl and iret nop jl add add dec out inc add adc adc cmpsl cmp mov out stos sbb jno mov dec in mov cmpl push ds sti bound loop (bad) cwtl sbb and popf ljmp outsl jge scas (bad) xchg jae mov push cmpsl adc push jecxz in data16 or aas inc mov xchg test push lea inc stc jg pop push jg mov push jb or xor sub jbe gs jbe or cmp lcall aad addr16 cmp jne mov cmpsb stos mov push mov sub out insl sahf mov jno mov ret add stos pushf xchg sbb sub mov inc add pop icebp fildl adc test test sub xchg es xor rcll jmp and int3 and mov mov movsb or not pop (bad) ror sahf insl pop daa (bad) loopne,pt lret xor outsl (bad) jmp add add call mov jae adc pop (bad) cmp inc fwait jne ret call xor mov andl push add jae aad jno mov es int add call std mov jecxz cmp xchg in data16 push inc pop je xchg jno xchg push outsb xor mov jb das push ds fwait test pop cmp mov push cmp jmp (bad) mov test sub cmp rcl ret addr16 mov xor add test sbb pop cmp (bad) stos cmpsl push push sbb in pop or out push call cltd nop jle fldt arpl ficom adc jno cmpsl (bad) or loop mov xor ja or mov pop add stos ja xlat cmp push add nop movsl jle rcr cmpsb aaa add mov xchg out sbb lret aaa out adc mov inc adc pop lea iret stc jg std add dec test shlb cwtl and in add in add jl or sub rclb sub rolb and les xchg mov sbb pop orb xchg mov xor (bad) fs cs loope adc jecxz hlt mov cld out mov and loopne mov mov jo leave mov std call pop test sbb shlb or pop lods xchg sbb add sub imul clc hlt sbb add add jno mov clc lcall sub cmp fidivl fcmovu and or push jge scas movsb mov lds sub sub enter ret dec and mov cltd mov lea mov je or push push mov repz jns lds pusha or lret aad arpl inc cmp daa sub mov pop ret in adc std lds (bad) dec bnd xchg sub add add rcrl data16 jbe jb imul xor test mov or mov inc ja sbb outsl lret fnstsw mov aaa jmp ss vpshufd sbb mov jle rol outsl scas and xor push fs push and (bad) stc cmp int push rcll mov mov fdivs (bad) mov jmp orl int3 cmp and xchg mov decb repz in jbe and add jno add add add jecxz loop add push in sub sbb sub mov imul jns scas int3 mov jb sbb out jmp cmp bound add sbb out mov pop ret decl pop and push icebp ljmp push lods mov dec jo in or mov fsub push cmp scas cmpsl sbb mov mov sub aam in mov imul mov pop inc add add add js and inc aam (bad) push mov pop fildll push or ret jg pop rolb xor call sbb enter test mov out test mov sbb pop orl xor sbb pop jbe dec mov clc es add jl mov or xchg ss int3 pop cltd push int das mov je scas mov or ja call mov or pop inc mov push push ret fildll cs add add int3 in movsl movsb push jp repz arpl pusha js loope inc push js aas cli insb test imul mov stos nop jmp aad jns popw lds mov mov mov inc int3 mov cmp push sub ret dec xorb jo and and cmp add into cs push add xlat sub movb mov mov test cmpsl jmp enter cmp push xchg outsl or xor popl ljmp add add add repnz stos outsl in mov sub ljmp inc fwait jmp std (bad) ja inc cld js xor les jmp xchg cli (bad) aas das mov mov js jno mov inc jne fisubrl mov jmp scas sar sub das lret (bad) aas xlat cmp in nop sbb dec jmp xchg lea ficoml pop dec push aas aaa stc rclb cld gs mov mov hlt fs sub lock jmp jle cmp jno jp (bad) aaa ljmp cmp xor js test in fild add add add add sbb dec out jno mov shlb dec adc scas pop shr push adc aad pop cmp add and ret lret cmp pop iret xchg ficoml push xor shrb movsb jl dec arpl test out push xlat mov adc pop arpl js repz jb mov mov xchg pusha cmpsb cmc scas lret and xor mov sub cmc ds xor add pop aam ljmp inc les arpl add add add fsubrs fiaddl jo push mov outsb fldl2e push call addr16 sub push add sub stos cltd imul xchg or mov movsb jbe push push pop and or jge lds fsubs lcall add xor pushl test pop push out xorl xchg fwait enter jmp jecxz int cmp fcmovb (bad) scas hlt inc xchg sahf add movsl and repz (bad) inc jo sbb test rclb mov cmpsw pop dec das or pop mov shrb insb je cmpsl (bad) cltd jb add pop in and dec subl fs ret call adc mov daa sub push sbbl pop inc or mov xor jge sub xor mov enter fwait xchg notb out inc loope clc mov scas fstpl add mov out jl es adc cmp jae pop jle add add add add pop cmp cmp or shrl cmp xchg lahf lcall add jl (bad) scas gs dec mov jb mov dec mov sub rolb fbld cmc cmpl jnp mov mov call ja imul out (bad) push dec in xchg data16 fucom sub aad sub es mov dec xor fldt adc or xor mov adc push xlat and add add add add and inc test leave mov dec sbb movsl jno cmp adc out add mov xor subl adc mov stos pop ret loopne cltd mov mov movb sar xor mov aaa add xor jg jmp sarl push dec sbb sub pop std xchg adc push movsl xor mov sbb xchg dec dec out in and push adc pop pop push jbe pop dec xor cmp aas jne (bad) sub adc adc bound xchg repz jge cld in sbb cs mov div mov mov mov movsl cmp ja subb (bad) jno popa aaa add nop add call nop aam xchg mov and enter jmp insb ret pusha mov out add adc insb push out nop ja adc imul sbb jnp cli sub into rolb cmp mov mov mov popa out sbb sbb cmpl mov popf (bad) add inc mov dec sub cwtl pop lcall ljmp mov mov fisubl into and out enter loop aam mov sub mov hlt ficom inc mov inc mov js or pop (bad) stc push call mov fcomi mov bound std pop pop jge fcmovnbe cltd or int jp xchg pop adc (bad) repnz scas arpl stc stc sub pop gs bound (bad) lock aad rcll (bad) mov and mov add mov imul cmpsl fcompl ljmp ficoml dec push (bad) shrb jmp jne add dec popl xchg dec loop iret jnp mov jp mov fldenv xor (bad) insl or test daa adc ss xchg and test mov dec inc int pop xchg hlt std mov cltd and dec sbb dec xchg mov adc jge and call cmpsb mov push mov getsec cmpsb mov movsb dec inc (bad) dec sarl adc pushl dec nop xchg dec jp sbb jmp adc sub dec cli sbb insb stc mov stos mov imul rcrl jp call mov rol insb adc inc mov aas faddl adc lods (bad) pop mov push imul in movsl call and mov push jmp inc adc mov lahf cs jne xor fcoml dec test frstor xchg es dec cmpsb cmp pop shll xor aas int3 lret cmp leave es test test dec call xor stos in lock dec dec dec sub test adc iret add jmp cld aas dec or clc fnstcw sbb and mov push in insb iret test xchg (bad) xchg mov mov and loope iret mov xor jne inc mov add xor lods or pushf gs stos dec mov mov mov cmc daa lods fildl insb nop pop pop fdivrl pop pop mov push dec cmp shl add and bound mov sub cmpsl leave add sub add fs push insb mov fs jns cmp stos enter mov xchg shlb dec int mul (bad) imul mov push ret dec sub dec aas add out or scas inc push jl or rol mov jecxz stc sbb pop stos icebp dec pop mov test ds push inc add push jg sub or dec shrb pop pop xchg add add cmc mov enter stos fbstp pop lods mov mov cmp cpuid ret lret aas add and lahf pop sbb mov mov push pop addr16 fcompl enter lahf leave jge sahf dec mov inc scas int3 push (bad) adc fwait mov dec psrld push lret movsb dec movsl jne addr16 dec out out (bad) arpl pop sbb jbe divl inc cmp call push flds cmp xor inc adc sub rolb sub fs (bad) imull loopne test xlat popf pop pop mov jns loop sub mov add lahf push leave jle hlt es add (bad) and inc cld sti cwtl cmpsb pop xor icebp dec scas clc insb xor add das push fdecstp imul movsl push add mov out cmp (bad) mov mov push or pop mov out xor fmulp jns mov scas out inc (bad) and mov xchg add add add add mov adc enter dec adc test jne sbb in inc enter or push xor or icebp test data16 test add in add dec and (bad) or leave mov dec mov push push rol sub adc push popf xor roll mov inc mov xor lods dec sti fldt inc add mov dec cmpsl xchg or xor sub enter add add add mov jb clc and in add jp jle cmp jp sbb dec (bad) leave pop inc ss xlat push cli (bad) mov sub insb js (bad) mov xchg aad iret cmp lcall aas lcall pusha in add out jno inc push push inc push dec push sub (bad) xchg das push in inc rcl adc pop scas lock mov pushf and or lret cltd (bad) out pop je es das dec push lock inc enter cmp add push mov js add add add stos push push call sub loope mov sbb nop dec mov cli popa push es movsb add enter adcl fs mov repnz fs (bad) jl or or rcrb dec jne cmp mov xchg cmpsl lds push mov push cmp sbb mov ss jle mov fildll and in enter mov sub sbb leave out jb sbb xor (bad) call add add outsb (bad) jecxz cmpsb sbb cmp dec mov xor das sub int push lods inc test add xchg or insl and cld cmc mov push xor pushf arpl sbb das daa test push xchg (bad) (bad) and push and or jge movsb or xor jbe arpl rcrl iret xchg xlat les mov cmp stos push xchg aam repz div cs pusha mov mov sbb add mov cmp mov add add add dec add fnstsw loope adc idivb fisub movsl mov jecxz pop jl inc scas enter ret test iret fmul lahf pop insl arpl (bad) ficom sahf jne sbbl or les mov out call adc mov maskmovq testl mov and cwtl dec jb je sbb mov fisubrl rcll mov xchg sahf and mov push hlt sbb cltd jne mov push add in or adc add cltd gs mov ret ljmp sbb dec mov and repnz inc mov mov lret movsl ficoml jo movsb jbe xchg movsl inc xor xchg xor jnp and jmp push (bad) fcmove cli pop pop pushf xchg jo adc int add cmc mov add mov push add mov (bad) (bad) xchg xor inc loope scas add das mov lahf je lahf call sbb jge mov stos xchg xor mov decl xchg push mov add add add add push and mov inc jns fs lea cmp mov sbb jge dec mov fisttpll push enter xlat in add clc idivb mov daa lods sub jmp jp or aam and aad rclb clc mov push imul or punpcklbw cld pop sub cmpsb push sbb pop jp rcll cmpsl xor les xchg cmp inc roll fwait mov jge fcomp mov hlt push add add add int3 mov cmp hlt push push jne incl pusha daa lods inc movsl pushf fwait pop aam sbb dec sti sbb mov js data16 clc lcall mov gs or lds adc push and iret jne add bound movsb or (bad) lds dec adc pop clc sub (bad) mov mov (bad) adc movsb push lock fs mov scas push mov inc out pop sbb out test pop das or adc das jl add add add (bad) loope push cld pop pop push int cmpsl (bad) jmp push lock mov pop scas pop jb imull (bad) sub sub jb push mov cmpsl fdivl or lret cmpsl jb paddsb jo cs mov call pop outsl cmpsb sbb push pop add pop adc add sub hlt jl pusha sub dec popa shrl aam aaa pop mov cld shll jnp lahf mov in inc push fisttpl lcall cmp and add add add ficoml pop inc mov ret or cwtl push jb mov fbstp xchg aas jae imul xorl sub daa test or dec cwtl aam stc rolb rcrl scas xlat test hlt pushf outsb or xor rcll xlat out add fimull pop push xchg inc subb in add or xlat idivl enter scas mov int inc insl cwtl sbb push jno pushl xchg stos cmc loop jb rcrb lahf dec pop mov add add add push dec lea mov sbb and adc or fist push lods (bad) sbb testb jbe lret sub popf ss clc jo rcr sub pop sub jae es or movsb imul sub cmp and arpl mov divb cmp loop mov jle mov (bad) pop jg adc sti loop sarl jg inc mov test incl cmp bound add add add pop hlt insl xor pop jp in (bad) fnstcw lret icebp pop mov fdivs xchg pop xchg (bad) loop cs jecxz loope xchg mov xlat pop (bad) cmp out sub mov ficoml mov sbb daa mov mov add mov xor push mov sbb jecxz out dec or mov jp mov sti in cli dec pop int3 xchg cwtl jle out xor jmp jmp inc add mov pop push dec out add add add stos in cs rolb jl iret xchg dec test mov or ja pop ret (bad) in inc pop sub mov das cltd jbe pop es push mov addl movsb jle mov pop movsl cmc jl inc insl lock (bad) xor mov jbe ror imul mulb push push pop adc cmpsb ffreep and dec (bad) pop inc xor push jo sbb inc sbb (bad) mov jp push add rcrb mov xchg hlt jg xchg jae mov add add add add nop pop repnz push int into xchg popf push jbe int cli mov adc xchg repz in mov pop jno (bad) lock lods repz sub out repz mov and js (bad) out leave cmp or add rolb xor cld xor test or add mov cmp jae or mov or add mov nop out call mov xchg in lods push cltd inc rcrb add add add add and push in daa cmc jbe sub in ljmp xlat pop pushf mull mov stos mov jns addr16 ja jg loopne,pt mov pop xlat push fmul divl pop (bad) icebp adc dec inc mov xchg addr16 stos inc lahf jno stos cmp lret pop add and outsl (bad) pop insb (bad) test cld push out jne or and mov stos inc subl lahf sub adc (bad) loope cli ljmp adc popa and ret cmpsl add mov loopne fcoms mov rcll jne inc inc je or cwtl mov jns push ret pop dec fmul (bad) dec enter (bad) lds inc sar add (bad) xor mov xchg mov and insb ds lea jg pop cli pusha mov xchg lahf rolb jmp aaa shll loopne sbb in xor test and out or mov push inc out popa mov mov mov js jle mov add add add lret repz insl orb pop adc in fildll pop push inc inc mov jge repz xor sbb cld fild int fucomi test fcomp in push test into fmull mov js (bad) cld jmp and lret repz jbe xchg lahf loop sti pop (bad) out cwtl aas (bad) xchg mov cmp call loop xlat add inc and adc or das pop and in pop jo adc cmp mov push add jns test add add or ja inc fsubrl cs jp aaa dec adc loope incb and scas pop (bad) pop out inc mov rcr in dec add aad add mulb mov mov xchg adc data16 or xlat pop xor imul arpl inc aaa inc addb push ror mov aad scas shrl call mov pop lahf ret aad insl and xchg (bad) aam mov loop jge pop test xchg scas add add add ja fcoms mov test imul fldcw arpl clc mov and ret into lret mov inc xchg jae dec mov (bad) imul dec popf outsb fldcw xchg cmp or inc (bad) dec lods sub ret orl cmpsl dec jmp sub aaa call fldl les cli push nop sbb imul bound dec inc xchg (bad) dec cld or daa jb nop dec mov in in xchg adc sahf stc add add add add lcall lret mov or test jne add lcall cmp jmp pop sub (bad) xor lret andl sub push aas sbb cmp mov dec (bad) mov mov ficom lods push xor inc jg dec adc enter mov (bad) adc xchg pop jo cvtps2pd xor in xchg addb mov pop out and lea test add add add add or daa add pop add mov lahf adc dec jbe cmp adc xor sarb jnp imul fcompl das push jmp (bad) mov mov sub loopne pushf loope lods push (bad) test pusha sub jnp xchg lea fdivrl add cli sbb push rcrb dec pop lds xchg xchg pop inc data16 das cmpsb jae xor or sti aad arpl gs jmp dec (bad) arpl mov inc and jecxz in dec and and mov add add mov out jae xor es out xlat push lret rorl adc xor jge and xor or sub daa inc das addr16 xchg sar rcrb iret sbb add int shll cmpsb and loopne push xchg xlat test mov data16 mov jnp or enter sahf adc imul mov idivb iret dec push inc sub scas dec sbb push cmpsl mov push fsubrl ljmp mov cwtl xchg mov clc cmc mov and cmp or cmp scas ja fnsave cmpl sahf pop in js or bound aas or cmp mov leave pop push (bad) enter stos mov adc lret push jl push fldl2e shlb fndisi(8087 loope and ret scas pop negb sbb pop insb cmpsb jne xor shrl sbb push xchg mov cli (bad) push fisubl (bad) cmp mov and cmpsl loop pop add imul add add mull push je sbb or and dec inc xor mov jb dec shlb jo xor ret push xor loopne jo or cmc insl arpl sbb cmp sub xchg lock cmpxchg hlt (bad) loopne cmp and sub xchg mov in pusha xchg (bad) cld das insl jp and inc sbb lret jmp mov call nop (bad) subb ss aam ret aas xchg jnp mov push pop clc xchg sarl and imul cld daa pop mov mov lahf lea sub xchg fcoms and enter mov mov ret add and xor imul imul (bad) fstpt ret aam mov xor addr16 mov nop pop sbb stos jmp out out popf mov gs cmp das cld push push out imul adc (bad) xor insb arpl js aaa pop inc (bad) sub add movb add add add mov mov icebp pop xlat xor mov ss (bad) iret pop in pusha loope push sub or sub pusha movswl bound mov leave repnz repnz adc jns fnstsw or subb xchg inc clc call iret out jl cli cs nop cmpsb decl movsl lcall loop sub mov sub cmp je (bad) cli jg call andl pop arpl sub inc pop pop mul add jb mov pop pop cmc popa inc enter je xchg add add add add pop popf xchg xorl psubsb and clc cmp inc adc out das arpl pop call call addr16 push ret jo xor adc xor and movl out sub cwtl pop cmp cmp lahf or pushf xor sbb adcl jo lea xor (bad) fucomi mov jmp push out add sub mov push inc or pop lahf cltd call add add add sub dec test pop mov sbb and sbb dec cmp dec ss or enter data16 jle and popa test aaa outsl (bad) mov sub and mov push jnp pushf outsl push cmp mov xchg cs xor pop jbe mov (bad) mov lock rorl mov scas out out arpl repnz fdivs test xchg (bad) nop xchg and adc jne lcall movaps ljmp add add add add mov and inc lods push outsl and data16 nop scas mov xchg (bad) xor or pop sarl (bad) xor lock push movsb js rcrl scas out fcmovnu addr16 cmc dec (bad) mov cmp pop xor scas push dec lea xchg jg xor dec stos jge (bad) enter dec inc inc addr16 loope pop aam and fmul inc inc adc nop sbb push add inc fcompl or cmp mov lea mov inc out aam add add add std or arpl and in iret adc nop nop mov sub push loopne push mov dec pop mov clc (bad) lret pushf rclb cs dec add push jno out cwtl in in in mov movsb pop mov and int3 push dec (bad) ljmp cmpb stos pop arpl cld inc inc add mov lods mov jp fildl mov cli xchg jg xorb inc aaa std loopne stos pusha mov xchg fwait je cs add mov icebp fild xchg add xor inc mov cld sub movsl mov pop inc sbb jnp imul cmp push loopne cmp jno gs pop adc scas xchg fwait aaa mov scas push aam and popf mov nop adc xchg adc (bad) mov or pop mov popa pop and sbb fldl roll fisttpl insl and ja dec out loope mov sub adc mov repnz jne add add add imul xor stos mov cmp inc xacquire sub pop je,pn sahf inc lcall inc rcll cmc mov popl inc inc push mov and je inc xchg jg std and push (bad) mov sub dec mov hlt jle add mov inc jae adc adc pop clc jle (bad) mov repz in repz jo out or sbb push pusha mov sbb push ss mov and cmp add add add add pushf lahf test ds sub (bad) call lea lret icebp push js sub shr idivb sbb loope jecxz frstor roll xor ficom cmp fcmovb mov pop push sub sbb popa mov push inc fidivl inc fnop sub push push cwtl sub std repz sbb popf pop incl add xchg dec mov dec adc adc movsb xchg call adc in add add add mov jbe and in cmpsl mov mov sub push mov enter xchg jg aaa imul pop xchg cwtl pop push jns dec call mov xor mov adc add stos mov mov sarb out push push inc lret std loop repnz shrl pop jnp ss mov popa leave inc pop jge lret cmp jg test xchg mov cmpsl mov pop mov rcrb or push stos dec stos pop lret fisubl adc add add xor mov dec lds mov lea rcrl (bad) xlat jne mov scas out ror in mov nop sub or fstl loope pop mov sbb and pop xchg mov in ds pop mov push cmpsb mov cs sbb (bad) inc pop mov inc cmp (bad) sub or xlat jl push popf mov cld mov mov cld push dec xchg cmpsb jp repnz push inc add imul add jle xor push cmc popf inc mov stos push push cld rclb cmp repz jge mov out test sub pushf loop adc sbb or les and or pop fistl xchg cmc insl xchg pop test push adc push cmpsl mov leave xchg into add adc imul cmc mov test jge inc lods vmptrst lods jl adc jmp sbb inc cli push test js scas cli int3 fstps push js insb add call ss clc test or mov cmp ja lock mov out mov test xchg xor rolb pusha aad xor xor xchg outsl mov test pushf jge adc mov out pop insb xchg rcl push js xlat xchg fist and mov adc mov and sbb xchg ds mov insl hlt xchg dec lcall (bad) jns enter pusha cmp sysret gs (bad) push add add add adc dec jle xor push fs mov scas dec mov push test in push or rcr pop fiaddl fs test insb mov adc out dec dec jmp (bad) jg mov mov push push xchg (bad) mov sub add mov xchg test sbb enter je pop pusha push adc addr16 inc lods cmp adc insb jmp adc dec jbe hlt xchg addr16 jb int3 mov add pop jp pop dec imul pop sub dec xor cli sub inc stos fisubrl lods xchg pop (bad) dec lods mov insb xchg stc dec push pop fbld mov adc mov pop sti mov xchg (bad) jle cli aas ja fsubrl push adc lods jmp xor fld1 imul std xchg movsl fisttpll insb ficomp dec xor int3 out std ljmp push cmpsb or repnz lea add sbb ja dec jp mov adc jbe sub movsb jmp loop push ficomp (bad) cld mov dec cld dec paddsb mov add xchg lea jno sub repnz bnd lds cwtl aad cmp mov push shlb js xchg or in lcall test iret dec pop in incl push outsb xchg inc pop int in dec mov cmp les mov in in movsb stc mov mov xlat (bad) loopne popa std mov jne lods ss lods mov repz add add pop hlt bndldx sub stos pop dec mov lahf daa shl test daa ret (bad) cmp nop cld sub fdivs push xchg (bad) loope (bad) imul (bad) or and mov outsl jecxz sahf test mov imul fisubl sbb test xchg xchg fist (bad) jl repnz in cwtl enter dec mov mov mov xlat sbb jnp clc ret in cmp cwtl sar or lret fsubrs cmpsb sbb js dec scas mov (bad) jnp pop cs lret jge sarb roll push loop notb jb jnp xchg sti mov push inc jmp push fcmovu cld aaa cmc mov cmpsl bound test aad lds and mov xchg jne jae sub (bad) nop jl aad mov cmp out ja (bad) pop xchg test and sub shufps outsb inc daa add sbb pusha jmp test shlb (bad) pusha jns mov jg inc dec mov jg add add add push mov or dec adc stos aas repz into and pop dec or les dec inc gs mov movb and dec cmp jle push cmp adc popa mov les cmpsl inc jbe lds fwait in xchg mov es xlat inc fildl xchg cmp movsb jbe stc inc int dec dec cs sbb or sub inc mov xchg imul mov repnz fstp ret mov jae mov add add add and adc mov mov imul loopne jae lods lret (bad) adc sbb add jecxz push lds xchg mov adc cmpb mull call aas icebp dec push push lea mov jge mov fisttpll push push xor lcall xor jnp sbb (bad) popf xchg gs cltd ret add sbb jb sub mov lds fstpt in rcrl mov pop jnp gs mov add add adc rolb call (bad) push and or faddl in out lock stos repz mov icebp inc mov cwtl int sbbb dec andl mov xlat int sbb inc aaa out xchg jne lods jae insl cmp sti imul and jno fidivl cs jbe mov mov nop ficompl dec sub pop jecxz lea or scas rcll gs loop push jp jbe cli fiaddl fstpl add add add add das hlt cmc nop mov xchg xchg xor and push xor lcall inc jnp sarl lcall scas jp add inc es push popf test into push pusha xchg int3 dec cmp adc nop lea mov cwtl leave mov add mov mov lods (bad) xchg xorb mov push xor out xor mov rcr or enter pop or mov imul push popf mov add push dec sub dec or lods iret lock sub cmc div lcall push pop adc cmp mulb pop mov nop ret sbb cmpsl movsb jle sbb push jb xor dec sub bound xor xor (bad) (bad) mov fxch jb adc adc xor cwtl mov test mov fdivrs sub rcl enter lods repnz mov mov sarb js loop mov push fwait and mov fs sub mov nopl stos push faddl add add add ds inc out aad inc pop inc and in mov sub dec repnz lods sub xor cmp or pop jmp cmpsl and add sbb enter adc cmp jge arpl adc xor and jmp (bad) sub or adc mov andb adc cmpsl movsb jmp test push push mov movsb sbb scas mov (bad) sub jecxz jle dec push mov lret scas sub pop add add add and xchg int3 lods cmp push imul test mov sub lret cmpsl test sub nop (bad) adc xchg pop outsl or pusha jle cmp inc enter mov lods aad lret mov out stos mov jb xor cltd aas cs insb mov xor gs jne pop repz dec jecxz shrl xchg xchg cmc dec enter je outsb in sub into sbb cltd xor out fwait push aas jnp daa idiv ja nop inc ja sub sbb nop cmp sbb push (bad) dec and add add mov add das mov dec pop inc mov test orb fistpl cmp lret gs jge mov sbb push loopne jnp rcrb mov push pop movsl rcll add xchg dec es in loop daa test mov xor push lcall fdivrl test adc sti out pop adc push inc jnp mov and or mov sqrtps jb lds adc inc rclb cli lfs add add add popa sub and mov ret jg fwait and or xchg cmc cmpsl cld and pop pop out jle xchg pop ret inc jecxz inc stos pop fcom adc push jo negl dec dec pop push push lcall and add jbe in xchg repz mov arpl dec int lea mov stos adc jmp push sbb cmpsb inc loop lods setbe pop pop push lds out add xchg lret dec test jecxz stos icebp jp lock mov addl add add (bad) xlat pop jge xor out sbb ss pop push repnz xor shll mov into mov xor bound out push nop lea stc int add or pop outsb (bad) dec add pop arpl cmpsl mov push out mov bound popa mov mov xor xchg xchg and xor cmp sahf aaa sbb dec xor cmp add pop ja lahf jne fistp lods sbb out mov add add add pop jecxz (bad) sub adc sbb test xchg imul std insb mov ret ss inc mov sub inc fsubl mov add shlb loopne int push jne add inc sti mov outsl xorl aaa decb test jns xchg push jo mov adc mov push fimul cltd mov pop pusha stos insb std and adc jecxz sub fmull lret mov jae repnz jl jb add add add add inc rcrl ret aaa jns (bad) mov rcrb mov rol push outsb test mov cmp shl xchg inc or add xor pop test outsb addr16 jns add jmp fbld jne push or push es lds adc test lahf arpl cmc mov int3 test jmp inc pusha imul or xchg push dec lret dec xor push jns xor pushf and mov js add add add add push xchg test push icebp sarb push add lods push movsl leave cmpsb inc call mov lcall sahf (bad) (bad) leave nop or roll lods add pop jmp mov fnsave jno adc popf dec lahf add data16 adc in dec test sbbl pop jmp add or add rorl inc shl mov int xor mov cmp push lods roll add add add sbb ss fdivrl mov mov push subb stc test arpl test out push fwait imul in pop leave daa data16 lahf mov add add mov loopne sub jl mov fldl sbb loopne adc or popf into lock push xlat icebp aad ljmp fidivr jp mov dec fidivrl jno jbe adcl add pop insb sti out pop mov cld add mov fisubrl rcll enter loop clc xchg add or pop subb insb addr16 lods loop push popa jl ljmp (bad) imul ret pop dec push inc lea scas or push jp sbb mov (bad) enter out lods cmpsb sub aam and popf sbb cwtl sbb adc daa sbb or cwtl adc pushf (bad) xor bound dec insb (bad) dec sub jne iret scas mov xlat push std xchg inc lcall popa sub dec fisub pop call test add (bad) mov clc std aad cmp cwtl dec xor fldenv push sbb or (bad) mov xchg cwtl jo es inc out stos sbb in aas and fdivrs insb mov adc adc mov inc dec test inc sbb mov push cmp fidivrl xchg xchg scas mov ljmp aaa out loope je outsl (bad) mov dec inc push in cltd mov cmp push or dec mov outsl loop pop popa mov mov inc (bad) pop dec add add add dec aam mov add mov or or fdivrs jle std outsl adc add xlat out add (bad) jbe pop jo mov std mov (bad) out xchg icebp add out notb imul in call mov lcall lds push push add dec jle les mov ja cli add pcmpeqb loop inc scas mov das sbb push cmp add push hlt lret sub jecxz mov enter add xor in and or iret test sub jns rclb jecxz adc dec xchg sub jle pop lret and cmpsb sub jg scas iret mov mov in fldcw jb jno xchg jns dec clc sub daa fs test adc adc xor je push mov fwait mov sbb test sub adc inc or and data16 sarl xor rcl sub add add add add dec jae fisttpl in rcll jnp nop adc cmp pop adc xor lahf xchg int3 ficom and fxch dec adc sahf scas and sahf (bad) xor or cmp cmp mov test or jne (bad) or cmc mov mov mov in insl cs mov lcall (bad) fildl dec das mov cmc movsb (bad) out les mov push (bad) lock adc pop sbb fyl2xp1 adc call data16 test lock call enter stos cmp pop ficom popa in lock sub adc faddl mov ficoml lahf pop inc push loopne lcall (bad) cld popf and addl imul repnz cmpsl movsl mov mov sti test jl add cwtl dec mov and nop lods decl movsb sub outsb and dec popl aam test rolb fstps clc jno xlat andb add add add popf push and inc mov pop push inc dec iret test mov mov pop push sbb stos pusha dec fsubrs aaa push mov jge sub and jnp loop cmp xorl mov sbb jnp das push pusha inc loopne cmp add pop xchg les jo mov cmp jae jg aam sbb and in out sbb dec pop adc jae or inc repnz int (bad) fidivl in or popa xchg cmp (bad) sub dec insl jp add shrl rcrb mov xchg add add add cmp and jmp (bad) test fiadd sbb aam jo sub stc sbb jl les stc test xor std xchg fs int out ja mov xchg ljmp mov (bad) push inc aad gs inc xor sbb cmp das cmp int lds repnz insl dec pop fidivr std (bad) dec mov jne ja xchg mul imul jp xor mov inc add (bad) fisub fimull jg sub loopne (bad) xlat mov add add add pop mov jb cs les aad es adc ds push mov cld test jle pop push idivb pushf pop mov shrb stos pop mov dec push mov cmp sbb std cwtl int mov in mov xchg jecxz xchg aaa mov repnz les lods popa outsl push cmp adc pop (bad) aaa mov push cmpsl sub dec push lcall test shl je and mov out push leave adc jnp fdivl sub stos jb aad jbe add mov add stc (bad) jae out or enter ret dec (bad) sbb xchg fsubl jp in xchg loop repnz std sbb scas push sub cmp or (bad) xor inc mov nopl (bad) (bad) aas test add dec xor imul cmpsl mov pop ret loope (bad) js sbb (bad) js fcmovnu rep lcall sub jl iret aam sbb jae jecxz and ret (bad) cld ret clc imul cmpsl sub mov clc and dec sbb rcr in push mov ljmp pop imul jl mov jl out jle fisubl jecxz sub and cmp xor sti test sub xor in mov nop mov cmpsl or cmp lcall repnz push mov adc mov test shlb xor fdivrs cmc jl addr16 cmpsb stc cmpsl xchg shll sbb std rolb add add add add xor sub stc sbb jae ljmp (bad) or les jg insb or das xchg pop mov pop xor adcb dec sahf lock or imul jnp (bad) clc je (bad) or jnp xor push sbb (bad) shl jp ffree push add cmp adc ljmp cwtl test cli pop mov xchg sbb xor out adc push add loopne xlat out aam lods idiv out fist nop push les arpl adc dec (bad) or or dec imul insl pop xlat lret sbb call in outsl lds lods addl notl lock xor xor iret popl mov rep add leave adc repnz lret or mov adc lret mov lods pop sbb loopne xor (bad) gs push push out mov insb inc rcrl (bad) or mov jo aas jmp iret leave push jb in movsb insb and inc push inc pop pop dec xchg test xor lahf (bad) cld repnz mov xorl clc jl cltd pop xor push dec or push push add push jg fsubl rcrb sbbl imul movsl mov ljmp rclb sub mov xchg pop or in add out pushf and rorb push jns push leave fs mov mov ljmp sbb mov add or fmulp popa inc mov aas sbb xlat popa cs xorl add add add outsl cwtl insl push sti rolb pop dec pop sbb mov push jle mov pop pop out test add pop cmpsl jne bound outsb outsl lcall inc push nop push stos push mov sub add xor (bad) mov mov xor jl mov jns xchg add or pop mov mov or insl loop movsb ret fs movsb lahf mov cltd mov ret push cmp mov jno fdivl scas incl add add add mov xlat push lea push imul jne push xchg sbb hlt pop dec sahf pop xchg xor outsl (bad) loopne mov mov pop xchg add and mov int3 and test jp inc mov pop xchg dec pushf xor push jmp push in test jne xor or test lea call mov mov or mov outsb jle dec adc test hlt (bad) cmpb xchg (bad) imul add add add into mov dec xchg insb icebp push movl mov out jle mov jne leave fwait out cld push ljmp xchg ljmp cmp dec xchg icebp and push jmp in arpl jno cwtl stos push fs or mov fldl into jbe add (bad) sub aam mov pop inc (bad) cmp mov push jp cs mov lcall inc inc aaa addr16 and in adc xor stos dec imul add add add mov inc or imul (bad) fidiv push fdivrl pop sub int or push push scas repnz sub rclb fbstp ljmp xor lock jno mov dec add jns and add adc loop pop jo jecxz test fbstp sbb repnz sti mov gs add push in je leave sub fldl stos pop ficom mov das pop and add add add add arpl pushf movsl outsb xchg lahf loope test mov cltd sub inc ja lods mov inc cmpsl dec adc sub pop cmpsb popf xlat subl fmulp js fnstcw dec jne push std mov (bad) iret and sahf mov repnz push outsl push or loop lea stos inc int3 cmpsb push pop inc sahf lcall clc mov aas mov dec test jecxz sbb and imulb (bad) outsl pop js add (bad) push sbb xchg imul add sbb jmp in cmc out adc clc stos mov mull xchg pop add add sbb daa rclb sti mov loopne dec jmp ret test or sub icebp fwait and push popa dec jae inc mov add mov pop mov (bad) sub out inc cmc imul push dec data16 dec dec xchg xchg insb push sub cmp cmc inc cmp or lret test testb mov call sbb xor add add add add repz (bad) rclb imul pop testl inc push or data16 mulb mov iret push cwtl gs orl or mov push scas xor mov mov psrlq dec mov sub mov dec pop call fwait (bad) pop push call ss xor sbb jecxz fs fiaddl clc imul pushf mov pop inc mov xlat or ljmp leave cmp movsb ss add add add mov pop pop stc loop xor sub dec jo jle push pop ret addr16 lea lahf cli cltd and test pop sub xchg test pop and fnstsw fnstenv mov fs pop cmpsl imul adc in inc popf scas sub cmpsb mov mov pop imul fs or xor icebp lods popa inc pop dec mov sbb cs pop call mov outsb dec push or xchg in adc and mov pop xchg sbb add add add movntq bnd lods hlt pop jbe mov and push mov test subl mov aam cwtl scas dec mov vpslld xchg mov sbb sarl jge push leave jbe rolb mov push lcall jns dec lret (bad) cmp push push lea rcr add (bad) or aas xorl shrl das or popa ljmp push and sahf mov dec push adc mov (bad) pop dec cmpsl sbb jne or rsqrtps bound add add add adc and mov pop test sbb mov xchg adc mov jle jbe or jbe mov popa test popa push push mov imul cli sysexit nop dec ret sbb xor mov inc mov dec or push jo xchg adc data16 ja push mov incl lret fwait xor pop cs mov out xchg cwtl cmpsb inc pop inc jns dec mov ret ret xchg inc movsb aad pushf sub inc sub pop cmp add add cmp mov jle test lea sbb dec add out lret mov neg xor (bad) insb sbb mov xchg iret aaa or test mov cli push popa aaa fs repz es mov xor (bad) in or sub mov aaa (bad) jns mov addr16 push (bad) inc or fwait out into and clc lods push push adc loop fbstp mov sarl (bad) pushf cmp xchg pop mov daa lds jae leave jae int add add add es and lods (bad) push push cmpsb or sub adc xchg rorb in cmp jge xchg lret jp mov xorl cmpsl adc sub pop mov ret jb sbb lcall lcall lods aaa wrmsr mov and dec lods or je jbe add jl and int outsb hlt lret mov dec cs pop mov and leave dec lret (bad) int pop mov mov xchg push scas jne or flds pop pop outsb out lahf sarl add add add add std insb mov mov xchg push mov incl inc jnp mov xchg insl aad lcall or repz pop push outsl fildl pop fbstp movsb jne in sbb sbb push adc bound out lods sub fsubrs add loopne adc mov jecxz cld fidivl xchg ret sarb mov xchg mov pop fisub movsl sarb cmc dec cmp push sbb (bad) lea ds daa bound add add (bad) repnz jae decl rcll fwait push ss sub push or lock in lock and cli cmp jmp jmp or jl int3 fisubr lds dec lahf lcall ja int3 mov (bad) out sub jno pusha mov mov dec push hlt (bad) mov adc rolb leave int jmp inc shll jae ss jns fwait mov cmpsb inc mov (bad) repz add adc xor inc jbe cmp xchg xchg nop in out add add add add and sbbl sbb mov aam lods mov mov mov push mov loope in adc fist (bad) lea mov cmp (bad) sub rcl or xlat push ret pop inc pop cltd ljmp ds test std mov out cmpsb jecxz roll jne outsl xor inc mov test mov divb dec lret fild mov add arpl add add add add xor mov sbb leave cmc sbb cmpsl pop and lods dec mov and dec sar push mov enter mov aaa rorb inc adc cmp inc cmpsl fadds mov mov stos dec xchg (bad) sbb movsb insb sbb ds ja lret jnp push inc cmp mov sbbl aad lcall ret (bad) fistpl (bad) add or jns jg in cmp cmpsb add mov pop add mov adc mov add add add add ficomp fildl push shlb push popf or dec add adc mov (bad) mov sub addl adc mov mov arpl cmpsl idivl int movsl fisub dec jg shl cmpb les in xchg cmpsb or mov and mov popa test sti jmp (bad) dec xchg jnp nop ljmp xchg xchg repz jne je cmp outsl cmp mov jae negl icebp mov jbe incl add add add or daa push cmp pop hlt and pop sub and mov inc aas das repnz je (bad) out js cmc dec call in jno xor in adc fwait aam push loopne fsubs fist fwait clc cmp in xlat std mov cmp mov add cmp ss clc imul fdivrl neg cltd sti (bad) jno mov push pop roll cmp daa outsb hlt addr16 sbb inc cmc xchg dec cmc in pushf es stc add add add popa sbb rolb leave daa lock add popa aaa mov xlat mov cmc out push or int3 cmp adc dec and adc cmpsl daa js mov push (bad) sbb js test xchg cmp loopne push push shr fstpt gs clc flds in pop pop xchg pop add movsb loopne xor inc jnp jb or inc jle and mov jg push push movsl sub push push adc jnp dec sub pop jns mov andb add add add dec cmc cltd decl ljmp popf call clc int3 es mov cli adc mov setle (bad) out adc cwtl in mov mov inc mov cwtl test adc cmp leave fdivrl scas sahf addr16 xor push and aas lcall (bad) jle cmp lds dec push xchg leave jle (bad) aad or stos sbb and cld aaa xor push fdivrp dec lret (bad) (bad) xor mov mov or inc pop and add add add pop das push pop push pop imul arpl sahf mov push and fildl push hlt mov mov jb jl es test pop clc fwait cmp sbb fist dec lds and xchg cmovs pop nop fldt test jmp adc bswap aam jecxz fbld (bad) jl pop xchg in or popa sub shlb jbe sbbb inc mov mov pop cmp dec loopne fwait popf mov add add add ret mov leave lock pop jo cltd and (bad) leave inc jbe inc fwait cmp jp adc sbb stos mov xor jle lods sbb addr16 stc push jecxz inc insl jnp rcrl inc xchg (bad) dec push xchg out popa dec xor out stos call iret inc rorb out test lods dec in push fmull xchg ds xchg and in pop sub inc lds sub sbb xchg sub cmp pop int3 fildll mov out mov add in sub hlt dec xor mov push xor lret pop mov jl cld sbb js call adc jno jp inc in mov fist insb mov outsl pushf cli ret pop jg xlat (bad) in jmp jbe notl or in stos adc mov mov testl push out leave in add sbb ds loopne jl cmp repz xor mov mov sahf push enter mov add add or ljmp pop data16 lock xchg orb pop add add pop mov call aas (bad) sbb sbb inc mov repz in jge adc mov and and and test iret and call xchg aam jmp jae jae int cmpl adc mov js popa xor out ja sbb lock sbb lods daa dec add add add test and loop dec xor lret (bad) cs lret sarb movsb nop js jge xor jns adc mov or scas jnp das push outsb cs jae scas aam rclb fucomip loope fmull or shl nop or lods or (bad) mov fildl sub or ds inc xchg imul xor push in or xlat ret lea xchg jnp leave les pop and test mov lea scas lea dec fbstp test jge imul fadds add add add add mov mov push adc sarb jbe sbb shrb arpl movsl push adc mov cmp pop nop int3 daa inc dec dec es fdivrp mov and dec sub lds mov pop ret loope cli (bad) inc jns aaa hlt ret lea xlat call imul cmp lock adc mov and dec mov outsb je cmovae xchg inc movl cwtl pop les pop cmp mov ljmp add add add add data16 repnz aad mov dec mov faddp (bad) sub nop lock aam cmc mov popf (bad) add negl (bad) lcall sbb mov jmp aam cltd fbstp or push push hlt xchg movsb insb jo xchg push mov ss stc jne xlat int lods enter mov inc push ds je in in cs push fcomip xorl adc mov pop mov aaa insb and addl add inc shrb and add inc and dec or xor or push jo shll pop and mov aaa jmpw adc movsl jecxz scas push jle and jnp mov jns cmp test or inc lcall or mov xor mov jle sbb dec mov inc mov hlt js and int3 cmpb pop int3 and add icebp mov jno mov out jne cmc (bad) push xchg cmp xlat push add (bad) cmp popf gs nop leave aam fstl add cltd iret sbb xchg adc cs rorb idivb mov repz jle cmp stc mov jmp cwtl dec mov repnz mov sub pop hlt mov dec dec jae cmp aaa cmp add lds xchg lcall fsts add sbb orl test mov mov inc out or or add sub adc test loopne (bad) mov loop das xchg (bad) mov lcall lock data16 rclb imul rcrb ljmp idivb xchg sbb lahf into je in and scas imul test sbb imull add insl sbb push sbb in cld push mov xor cmc inc das or cmp jl jmp jmp aam xor fidiv and jb aad rcr push notl cmc mov push xor add imul arpl mov fnsave and xlat mov mov pushf xchg inc and pop aaa (bad) outsb clc movsl and push sti cltd loope cltd sbb jmp ss push push add iret std adc cmpsl adc mov cmpsb leave mov imul adc adc movsl pop mov data16 jl mulb jg push add jg xor xchg int3 push stc sbb stos push and je mov dec test inc push rol push scas xchg xchg adc xchg add sbb roll add add add add sti cld pop sub mov jnp mov push mov inc test mov mov outsl pop loop sbb mov movb dec jo std in push (bad) lds mov or add pushf mov cld push sub xor imul mov test test inc fisttp mov stos pop xchg mov add mov inc jmp xchg ds and out iret cmpsl jle movsl cmp enter pop leave (bad) lret and ljmp add add add in inc rorb or push repnz call lcall (bad) and pop lock push fiadd je lret inc mov sbb scas call pop repz sub sub cmpsb pop sub mov lock sti notb (bad) pop stc jmp dec sub ja sub nop jno test clc sbbl std in inc sub sub mov sub mov data16 (bad) xor pop (bad) inc movsl mov adc es (bad) out mov add dec xchg add add add outsl inc gs cmp add rorb mov dec sbbl jge lret cmp push (bad) enter pop sbb ljmp jno sti lea cmp adc inc adc jge loope add xchg dec push pop stc insb ror add mov push cld pop sbb icebp sub sbb inc jmp or pusha lahf push cmpsb inc in mov addr16 in mov push insl outsb xchg jb,pn sbb loope gs fidivl movmskps sbb popa push mov add add add inc insl jne in or push in sarl fwait cmp pop or mov mov pop out inc jns and xchg xorl popa xor add xor inc sbb jne loope dec stos xor pop mov sbbl ret push dec xchg aam add adc ds jmp cmp and and ds and xchg orl mov rol shlb (bad) rcll or roll insb clc xchg mov clc add adc sub call (bad) sahf aaa add dec cld inc or sti out push mov push sub xor push cmp scas sub and lcall (bad) mul jmp aam mov pop mov push stc or xor mov or push xor dec loopne movsb ficomp mov jnp aas cmp xchg cmc lret jo lahf inc rcl dec adc cmpsb jg aam jno scas inc sbb mov dec or adc mull add mov outsl mov add add add and xor dec lods mov jbe cmp aaa add xor sbb jp adc sahf cmp lods cmp das cmp cmp xchg jmp push pop dec xlat icebp sub addb cld ljmp movsl add cmp adc fisubl pop arpl adc xlat push xchg arpl movsl add insl pop cmp cmp xchg dec call add clc cltd jle inc lret aas push push lret add sub adc (bad) jle jp add add or and jecxz mov and mov sub fsubrl js inc xchg pop adc xlat js bound (bad) push sub adc cmp inc adc in scas add scas das incb add stos out inc adc xchg push mov imul adc mov inc mov add mov dec lcall (bad) out loop into stc nop outsl jle jnp (bad) nop add in mov adc repz out call loop add add add and aam pop add (bad) sbb or pop xlat mov lahf add popa sbb or inc sub push sarl or popa fisttpll inc test inc rcr jp cmp jle test jo fwait popf jecxz dec add and arpl fldenv or dec out cmpsb adc push adc in cmp push push or cmpsl int3 loop sbb (bad) dec cmpsl out inc lcall outsb push (bad) mov inc sub pop add stos roll xlat mov xchg mov icebp clc xchg or xchg sbb je sbb outsb or adc jge cmpsb mov std pop cli std rcrb mov sub cld push pop fiadd and pushf pop test adc dec push sbb pop (bad) cmp mov jl insb or jle ret stos fs fnop insl mov and cltd push push imul out inc cli pop leave jbe mov ljmp dec aad or add add mov addr16 movsl push ret hlt insl lds cmp mov jmp dec loope mov scas into sbb cwtl (bad) lea (bad) xchg adcb repnz ficom aam lea fstps in jne data16 dec cmp test xchg cmp jne pop aaa das test xor jl xchg enter lea mov xor (bad) jb lds int3 xlat fstpl mov pop sub mov add add add add mov xchg and pop push movsl inc push sbb sbb sub mov sbb cmp movsl xor out mov adc mov jg lods loope aas addr16 inc inc fcmovu cmp add call push pop (bad) fsubl jge data16 ss movsl push xor xor sub stc aam inc sub icebp test jg cmp (bad) mov repnz jnp add faddl daa dec ds add add add add mov cmpsl ds jne xlat or nop insb adc out cwtl mov mov imulb sub nop mulb das push (bad) and jge push stc push adc xor pmaxub lret loop mov arpl inc sar cmp imul or pop inc inc xchg mov (bad) scas adc repz fwait test fidivr inc mov scas loope xor cld xchg addr16 mov xchg sar shll or xchg add adc mov xchg mov jmp in or xchg xor das loop cmp imul insl pop nop push sub push mov ljmp dec test pop add mov mov mov pop or loopne xchg adc push insl or mov (bad) pop es adc and loope dec and cmpsb mov repz adc getsec lcall sbb mov das loopne mov add add add xchg call sbb test adc loopne,pt add leave push insl and xchg out ret cltd jns xchg xchg leave into adc adc cs push xchg into retw test imul jbe push jne,pn push and test mov push jns push adc mov mov pop mov xchg lahf frstor stos mov lods cmpsl mov pop lret sub movb fwait mov mov stc jge in add xor push push sbb add sub addb das gs sbb mov es xor loope lds incl dec or popf or clc cmp push xor fisubl push inc (bad) mov mov mov int mov bound lret sbb push daa out mov add push push ljmp push or adc sbb dec mov ja jnp xor (bad) lds pop mov bswap int3 jae push mov lahf xor (bad) in add add add push in or hlt stc mov cmp cmpsb dec sub out cmp (bad) pop cli insb ss fidivr pop mov rcrb jecxz (bad) pop or iret push cs push lahf or or frstor fnstenv aad (bad) das es mov lea mov cmp loopne push adcl andl xchg dec jmp (bad) cmp xchg add std arpl in push add jecxz outsb jbe mov pop push mov aas mov sti (bad) cltd add jo add add add jge cmpsb mov xor inc pop mov loopne dec mov sbb cld pop pop xchg inc mov and sub mov in xor pop sti in jge and out aaa mov jne leave pop movsl leave dec pop rorb mov jnp movsb or xlat repz clc dec xchg jg cmp arpl jge out xchg cmpps mov jecxz,pt push aam and inc mov fcoml and push dec cmpsl mov lcall mov add add add ret cmp mov je mov mov mov (bad) iret hlt add mov cmc add (bad) mov mov jg xchg orl jbe xchg or movsb jmp xor stos xchg rcll or andb pop ds xlat insb jge pop mov pusha dec add jo mov dec mov into ret or decl popl add js push dec xchg mov and adc xchg sub xor mov into and cld fcmovbe loopne repnz mov mov jb xchg jle pop fidiv mov jge cli jmp ds sbb outsl sbb test shrl jecxz pop mov push int3 cld shll jle subb js push repnz mov repz push jge mov pop stos (bad) mov cli and cmpsl xchg dec push cmp repnz ds pushf lods and scas adc loopne mov or pop adc test jge add adc inc (bad) mov stc sub add cs out sbb add pop mov mov jl xor cld (bad) cltd shrb inc je lock cmp clc nop or js in out sbb (bad) call mov fisubr lcall mov fs fimul sti imul cmpsb or and or scas push jnp xchg aaa add (bad) pop sbbb fwait jb cli sub mov inc jae jnp inc pop lcall lods xchg sbb mov idiv add add add stos ficoml mov sbb loop xor dec es cmp fs or fadds popa (bad) jns sub pop xchg xchg pop lods cmp sti sbb ret out lods lea mov (bad) mov or popa jno data16 leave jbe xor xchg shrl dec pop ja fistpl dec les loope pop test iret int3 xchg mov subl out xchg xor add addb movsl and xor pop cmp sar xor pop xchg cld add mov add add add add fbstp cltd dec adc les cs flds iret jae lods inc aam pop hlt cmp mov mov or xchg jae ffreep out and dec fnsave sub cmc lahf inc adc ss xchg adc mov in pushf sub sub xchg ljmp or je xor inc in mov mov cwtd (bad) into xor inc adc ret inc fidivrl and imul iret mov add add add add add mov dec sahf insb adc test adc inc push imul pop std int push (bad) loop cmp ja jge push sbb xchg pop dec pushf sbbl sahf mov xchg and lcall sbb (bad) cmpsl ljmp ficomp dec popa testl cmp xor js cmp scas pop fdivrs test and das cmpsb adc jp adc mov roll sbb add add add add cld sbb or sar (bad) (bad) ss mov arpl or xchg add jecxz mov lcall pop test mov test aas je push int3 (bad) in inc pop sti fnsave imulb and in adc cmp fsts mov inc (bad) stc mov int and lea jge mov inc mov inc pop sbb add cs pushf popa sub pop pop fnstcw sub daa pusha adc add push int imul sub ja pop pop inc sbb mov push xchg mov mov and push jg mov aaa sarb lods insl cmpsb xchg sub jo and add call inc push xor fsubrl loop lock repz cmc movb imul stos add out mov lret insb test aam adc mov jb jmp pop jns cmpsb mov pop sub mov test fdivs add add pop sub test call mov shll jl into cmpsl xchg inc lahf gs cltd adcl mov enter sub pop xor cmp mov decb frstor leave arpl (bad) (bad) fild sub lods mov dec sbb mov lock movsb out loop dec rolb ja jge push mov and fcomps xor subl mov bound hlt mov adc xchg fucomi xchg adc jne roll add add add movsl or mov loopne outsb jmp push mov jp push mov or cltd cs int out sub push adc xchg inc sub sahf jmp movsb int adc push add sub push cmp stos and dec xchg fcmovnu adcl data16 aad lcall cltd mov xor in push fs ffreep sub fstenv das push lahf dec (bad) test pop adc jo (bad) out mov icebp xchg bound mov inc stc xor (bad) jno cmpsb les add add add add jp adc jecxz sahf ss cmpsb pop sbb cwtl aam adc xlat ljmp es cmp and enter stos in xchg pop mov addr16 nop pop ja sarb (bad) outsb or mov adc ja add adc cs notb popf xchg (bad) scas inc stc mov dec movsl das (bad) ficomp inc aam arpl lret add rclb fwait mov and xor mov pop xchg pop aaa jo fisttp sub (bad) pop adc pop stos add add push mov repnz cmp lret mov fucom push pop xchg rcll sub sbb push jl (bad) mov xchg xchg icebp sbb out xor int jg xor cmpsb fisub ss out mov rcll xor ret nop inc push sub stos (bad) hlt outsl push cmpsb (bad) repz dec jne arpl jo (bad) xchg arpl mov lcall mov add popf test mov inc outsb add add add dec out rorb mul scas or mov cwtl mov in and mov into test in jge (bad) ja or stc cltd dec shl das push (bad) sahf push out repz jo push mov mov xchg xchg pextrw nop movsl sahf out shrl punpckhdq sbbl rcl dec int3 jae jne add stos pop mov mov gs mov sub cmp nopl or fs popf cwtl (bad) fsubrs data16 sub jbe popf movsb add nop push cli add add add add push and adc lcall pop mov imul pop xchg nop push push mov mov popa xor incb mov ss xchg test xchg sbb xor dec inc fstps lahf cmp inc in xchg jns lods fstpt scas jmp imul stc xchg loope mov xor into bnd sub mov mov stos shr sub and add sub imul jecxz pavgb pop jb lahf push jno inc loope stc mov shrl fldenv inc push dec xchg sbb (bad) in fimul or mov pop in lea dec icebp cmc push das jl lods stos mov fwait out outsb andl fs pushf jnp stos xchg cmpl lock sbb rcrl mov jne pop aas movsb mov in dec mov out jmp mov enter xor hlt mov cmp push push sbb cmc jns cmpsb test xchg mov mov adcl hlt add add add or add mov jmp inc mov out xor imul pop jmp mov inc xchg popf cmp mov or sbbb icebp scas cmpsl mov or sbb pop pop fwait xchg push in inc inc xor mov inc scas pop repnz imul fistl sbb dec xchg sti or lcall (bad) insb repz push je pop fisubrl in xchg dec xor jge stos mov add lret (bad) movsl add (bad) popf imul cmp int test jmp inc test mov or stos das sbb inc xor mov mov lcall mov push cwtl or pushf push fstps cmp mov idiv jge sub or test ja fmulp insb les xchg (bad) push insl mov int3 push xlat jmp dec movsb rcr loopne cmc xor dec or dec iret lea and jp jnp sub add add add subl inc lods jo and push (bad) in jp test lock add and push and dec mov jo sbb fstpl fwait xchg dec inc or adc addl xor inc arpl jge dec fildl dec int pop notl imul out inc and icebp mov nop adc inc mov (bad) push push icebp cmp jecxz pop jg cmp inc fadds fmulp adc inc jo (bad) (bad) or aad popf pop xchg fisttp sbb lods insb fsubrp dec dec pusha inc notb add add sub cmp add aad repnz movsl leave mov in jge mov (bad) pop out push call pop imul std (bad) mov add test shrb xchg popa push mov es les mov mov lret push jecxz jae jnp inc adc stos ret aad imul mov jg or xlat xchg push jns popf mov sarb push and push icebp push xchg popa fildll mov test add add jmp hlt mov fdivl inc pop rol sti jbe loopne movsl dec or jl (bad) aaa iret aas stc xchg sbb sbb ficoml into dec rcll mov ljmp push adc test sub das xchg rorl mov (bad) lock or mov es (bad) jecxz les xchg xchg (bad) lods pop adc jecxz pop jl and in (bad) pusha dec push aaa adc xchg lret lock mov dec arpl cs inc sub xor ss aam xchg add add add jb roll rolb into push jno mov pop push fild mov mov movsl inc outsb scas cs imul push mov fsubr popl lret icebp loopne outsb cmp call or xor stos xchg mov int xchg mov sub add std mov mov cmp mov mov mov arpl insl mov pop mov dec iret pushf rcll add jmp mov in and mov pop push mov add add add xchg std add decb mov pop jne push pminsw pop in (bad) (bad) xor add lock inc in or call es mov inc mov es rolb cmp cmp testb (bad) xchg pushf popa cmp sahf mov or je add pop andb jns adc out idivb les cmp or xchg fbstp xchg leave insb test (bad) xchg dec ja ret push (bad) icebp mov jecxz mov push push jb neg pop (bad) daa xor xor or pushf mov add add cmp (bad) cmp sbb cld add orl jnp js inc push push sub cmc pop jo pop popf push jbe loope inc ret add jns xor and aam push mov ljmp cwtl pop jp push mov outsb dec mov sbb inc jmp mov xor aad dec icebp les in out inc jae fldenv subl pop mov cmp push lcall arpl push sub repnz faddl add add add pop call or stc xor cmp (bad) dec pushf leave ds enter ja xchg sbb pop lods out aam ds jl mov pop jl mov add test sub outsb test aad sahf and dec into sarl (bad) je aam or adc sbb and dec clc mov hlt dec insl mov mov or jmp jp inc cmpsl push incl push cmp push mov dec pop adc (bad) mov in dec inc mov inc dec add add add add cs xchg mov dec jns pop jg (bad) imul divb test fldl ret ja out cmp sarb pop and mov out leave cmp (bad) ret inc xchg dec fiaddl in popf pop sahf out outsb std lods mov or or outsb push je fcomps and add roll std xchg jmp insw lods ss push (bad) xlat rcll adc imul adc addr16 movsb gs cwtl vcvtps2pd sub nop jns cmpsl xchg loop adc rcll cmp (bad) mov fnsave cmc xor cmpsb push (bad) xor lcall sub fcoms in jnp dec pop push push out push stos mov pop xor clc pop lret out rclb fistpl addr16 insb stos aam (bad) adc nop fisub mov pushf pop adc scas stos lret movsl inc and push push sbb ljmp push or shrb loopne in push sbb pop int mov mov in inc inc mov adc xchg xor xchg rolb add add add mov mov pop iret repnz xlat mov lret sub enter js lahf pop pop (bad) imul cwtl xor adcl push mov cmpsl sbb lcall inc or dec cmp xchg out test mov or (bad) loopne jno jge popa aaa icebp pop ja aam jmp pop imul fldl inc inc ja pushf (bad) std adc adc mov int3 push jl xlat push popa pop sbb imul xor mov add add add jmp gs mov or cmpsl roll jge xorl or mov ja mov cmpsb pop mov sub cmc xchg inc loopne mov pop sahf mov mov xor jo push fwait sarl (bad) mov mov sub mov jl mov jb and gs or cmp (bad) insl mov pop mov sub dec mov jecxz out jecxz mov aad (bad) out mov mov addr16 out xor bound daa mov add add add jnp adc stos or sbb jo mov mov shrb out xor imul xor pop movsl adcl call pop mov cli push adc push bound xor dec xor loope outsb fsts pop ljmpw dec cmc es and mov call aaa mov lock bound lret jg jo mov sti divl lock sub ret aaa xchg pushf lods es jecxz fdecstp sub push cmp repz (bad) dec nop loop (bad) scas mov jno add add stos fldcw dec xchg cmc and xor mov jle aad fs sub dec jno and and (bad) mov loope dec in xor dec sarl pusha into mov loope repnz pmuludq and nop test fucomp sbb cwtl pop hlt movsb push or mov rolb insl mov stos lcall dec insl jmp mov mov sbb ds add adcl (bad) xor outsl rcr sahf xchg jge jno,pt and hlt pushf addl add repnz stos fs inc incb and arpl aas mov int in dec sahf or aad iret xor pop dec cli and xchg sti mov jp ljmp int out push ljmp mov imul gs xchg add jge iret loopne jb cmpsb out and mov (bad) sub jno xchg stos mov inc inc hlt dec inc cmp ja adc mov out ret lods dec and pop xor out pop dec xchg adc mov movsl adc add add add add out in hlt cmp jo mov sbb ret lea lret lret lock or or push cmp pop call mov cwtl cmp dec cmpsb sbb in inc dec or add test add test loopne and or push outsb mov arpl pop test dec lock pushl (bad) xchg add mov lea ror lcall mov stos dec adc mov add add add sub add xor nop inc cmp movsb fdiv mov scas pop mov adc (bad) addr16 push lods mov jb imul mov scas negl lret inc in icebp ret xchg dec mov and outsb fnstenv call push pop out fidivrl sti jbe jl jae push je stos inc fs pushw aad repz test cmpsl scas rcr cltd movsl xchg xchg mov arpl cmp add inc mov stos pop cmp hlt pop cmp pop aaa aaa add add add add pop test jns adc mov mov test repnz sbb push and mov mov xchg ss dec jnp adc mov and mov add out jecxz sahf sub es mov pushf sti add shrl es loope cmp mov ret mov call sub jne lods dec insb in cmp popa xchg pop jge nop cld cs mov roll pop sub or dec xchg xchg outsb xchg xor mov jle adc mov mov dec inc push shrl loope pop jecxz dec adc out sub xchg or push and add inc test cld lahf or fcom inc test mov cmpsl cmpl mov dec jne jmp je mov sbb in push jmp and add sarl js pop mov push dec fcoms push pop ret jmp xor outsl int3 xor mov mov imul in sub xor movsl cmp sbb xor add push int3 jle sub jb adc pushf sub imul push in xor stc cmp cmp mov mov lock je and loope push xchg leave iret imull mov sub xchg and dec xchg pop add popf inc mov cmc call fstps movsb push lret ficoml inc out mov std dec jbe fxch ror das ja push fwait bound daa push jecxz add sbb xor das mov or mov call mov insb leave daa cwtl clc mov add add add xor rcll sbb sub std cmp inc (bad) shrl fnsave mov inc cld jge data16 add sbb scas jne cmp push fdivl or repnz adc iret hlt pop iret fstps jne ret mov adcl add cmp sarl xchg xor dec cmp mov cmp xor call call (bad) rcll or dec je nop xlat or add popa pop jnp stc arpl add add add inc pop clc ljmp xchg dec lret imul sbb in clc fs popa jle cmc mov push dec pop sub mov or push (bad) rcrb das cmp cld call jne inc jge pushf dec push sbb aas repnz pop xorb mov add sub dec cmp pop and adc push pop adc mov sub push or cld pop jns lret jb xor pop jae push pushl fidivrl mov add add add imul jecxz mov inc imul fmuls fnop les test xor test call imul inc mov hlt dec ret lahf cmpsb xor jnp std enter jno xchg adc movsl xchg pop (bad) cmpb adc dec aad (bad) lret inc mov fmuls scas ret inc cmpsb cld sarb or mov mov mov lock sbb and or sub add add add mov fdecstp mov push sahf nop mov (bad) or mov mov out out iret xor test jmp mov and sbb in rcl out (bad) popa cmp test mov mov ret push sbb or mov jmp loope fwait push sti mov xchg adcl aas es movsl inc data16 mov lods dec mov lret (bad) lock xor cmp sarb dec sbb add cs add add add push bound mov dec mov pop sarl into and movsl pusha inc cmpsl xor cmp out pop das fdivr ljmp and add out loopne dec adc jbe and js inc sbb shrb mov in sbb jns icebp adc cmp adc xor push stos sbb outsl lret (bad) jecxz loop push xchg lock bound mov pop adc stos jl inc xchg lds cwtl cld cld shlb (bad) sbb ror shlb int3 add add add add add pop mov cmc xlat loope dec les movsb lahf cli adc iret dec lods sub dec stos fdiv lret (bad) jp (bad) cs repz inc loope or sbb (bad) addb cmc std daa cmpsb sub add dec lmsw jne cli daa sbb fadds test (bad) mov or or clc fsts add mov (bad) lahf mov jmp pop cli repnz in bound mov icebp or ljmp cmc jae mov jae add add add add mov jg sub jg gs xchg jae mov or aad inc enter fsincos test jno ds sbb xor or lret mov das push cmpsl lret lahf out (bad) fimul ss in cwtl xor movsb (bad) aaa stos inc xor es push fwait rorb push mov mov jmp ret ret in sbb sub mov xchg arpl enter ds cs enter inc sub xchg outsl rep fwait js add dec add add add add jmp adc js inc call test push dec inc xor iretw sahf mov xchg in sub popf imul mov out aaa daa int3 leave pop jo loopne add sbb imul test fnstsw pushf pop mov add push hlt stc push sub xor mov adc fchs push adc fs push ja popf adc sbb imul nop push test cmp jl sbb mov fwait popl add add add jmp fwait ds dec in or aad xchg sbb mov inc ret pop mov and pop cmp pop xchg (bad) push mov dec ss inc cld adc aad jmp pop jle dec push arpl sub xchg es in in and loop fcmovu fisubl cmpsl and and imul test or fstpt lods mov sub push stos xchg negl or in out (bad) iret jmp test adc movsb stos mov add add dec out (bad) lock adc mov lret dec sbb test pop notl rcrb out mov add enter pop and scas pop xor xchg lret push push mov pop pop mov das fistpl call or sub movsl cld (bad) mov or incb std xchg mov cmp adc das sbbl xchg out jo sub mov popa stc xchg inc pop aad xor push jle inc notb shlb int3 add add add inc mov lock hlt stos push mov mov cmc lea rorl jg bnd out out dec rclb add or stos in mov push arpl adc insb inc js movsb std movsl jnp dec repnz sbb cmp ficomp mov xchg sbb test aam movsl xchg adc cmp ja sub repz push xchg (bad) es fsin jle pop sub mov enter sub jb push bound sti or mov or cmc aad daa push dec xchg lcall add add add add mov ret mov (bad) mov subb fsubl sbb test das xor fwait andl cmp rorl push push adc loopne mov sahf mov adc das (bad) mov call cmp sahf adc je jp mov jo jbe xchg jns scas (bad) icebp push fxch ret jne or lods mov cmc or cmp jbe or fdivl dec and in jmp add lds add fisttpll push mov push dec loopne repnz add add add add shll aad push pop mov mov andl mov mov fdivrs mov loop test das scas leave sub lahf and cmc rorb cld data16 leave mov (bad) lret hlt ss xor ljmp stos movsl or lss pop jns jp or mov lret jae mull jno or cmp scas (bad) lea push cs cwtl jl es add cmp cs sub push test jns in loop sarl imul jno stc call add pop jmp jl jecxz inc fs and mov stos xor sbb or subl notl fwait adc subl lods fstps mov insl cmp push xchg pop push inc rorl outsb push xorl lcall sub fcomps dec cmpsl mov jno jl mov imul fistp fisttp adc repz insb cltd xchg push addr16 push xor inc cmp out cli sub add add add add cmp xchg aad scas sub mov adc sbb inc push out cmp into mov int3 pop mov add xchg or lock pop (bad) jmp imul popf iret xor mov mov cmp inc (bad) (bad) jl mov push mov imul jbe shrb popf stos pop fidiv ds xor ljmp mov insl lds repz stos test pop adc dec jb es inc imul mov scas pop testb add add popa cmpsb mov jo popf dec inc jl insb std dec inc popa or xchg sbb jmp imul xchg popf sub or orl push in adc insb (bad) mov out mov xor and and xor (bad) in inc mov cli sub push mov cwtl or push gs xchg popa pop jg aam mov add inc sahf push in pop cmpsl jl outsb push or es pop mov push jae push xchg hlt xchg or ret imul push shrl add add add add jg and or jnp xor pop fldcw sub adc xor cmpsl rcr lret sbb fdiv loope repz aaa inc pop adc test (bad) aad loop xor ds dec add xchg xchg xchg adc mov in test (bad) hlt jbe (bad) mull pop push frstor push cmp or mov xchg and lcall std jle sub in imul aam out test popa cli (bad) or inc cvtps2pd add add inc insb adc mov sub arpl mov cmp mov mov cmp cmpsl adc sub or cmp dec (bad) testb and dec mov scas out pop xor dec aad xorl xchg mov sbb loope es fs ror out loopne adcl movsl push mov lods ret sbb and ds xor sti sub push sbb jno or imul add add add add mov js (bad) mov stos mov enter sub push mov xchg out pop lods jg adc addl and mov jno push xchg xlat add xor add adc jnp mov int jmp jbe mov js dec or in and sub iret lea inc or cld scas pop cmp pop and lahf cmpsb aas test cmp outsl inc mov jmp mov push or fisttpl add add add clc jae out inc inc jg or sub sub lcall lret pop xchg cwtl cwtl std fcomp icebp xor jge mov scas jg loopne xor scas movsbl scas fildll sti pop idivb daa decb inc xor sbb xchg push hlt sub js dec xlat mov xchg ret add jp (bad) imull xor (bad) lea sbb adc inc xchg in jne (bad) adc les xchg mov or add add add cmp xchg adc sbb adcl cld les and xor imul push dec adc fcompl nop or xchg outsl jmp mov push out xlat sbb xor xor jp aas mov ljmp sahf loopne mov xchg mov and iret xlat or fnsave mov cltd dec ret or push daa fcoms (bad) loopne jae sbb lcall loop and xchg lea ret lret cmp add add add stc pop jmp scas sbb add jb cmpsb sarb and jns and pop mov push mov les mov mov cmp add scas in pop aaa out xor add mov loope cld out fistpll cltd sbb jle jne aad adc add inc fsubl cli in imull cwtl aam fdivr inc xchg or mov mov adc push jo sbb xor cltd add mov les out cmp mov add add add pop sub addr16 add out mov movsl sti (bad) jmp dec mov push add mov xchg fs adc mov scas bnd daa out out je push mov and xor inc sahf sub scas fdivs jg jae dec or pop jl xchg test sbb inc mov jp and out push icebp (bad) mov sbb cmpsb xor out adcb roll cmp lock push jno in mov out jge adcb sub and insb mov adc push (bad) mov push fildll popf lret out fmull addl pushf bound or cmpsl xchg mov or xchg jb xor int3 xchg dec out jno or pop addb test (bad) mov imul lock or jle push push outsl mov scas loop jb ds lods lock rcll push cmpsl adc leave cli mov sub sahf mov xor in lcall add add fistl dec fistp sub ret or insb xor ljmp dec xchg (bad) jg fsubl das xor es pusha ss inc out or adc (bad) loopne and sbb or push jp inc pop cmpsl pop xchg sub outsb les daa out or insl xchg mov inc mov add rclb fstpl hlt call (bad) insb push jae les mov jno xor in fnstsw dec je mov xor add add add cmp ljmp xor xlat int3 adc or rcr cmp lret inc pop sbb jns mov lcall ret adc popf pushf lds lea xchg add jp shlb in dec jo fcompl scas sarl (bad) mov mov arpl std xchg jnp stc fistpl outsl pop (bad) jmp sarl lahf rorl (bad) loope cmp adc mov pop out imul out imul ds div push pop or add add add add sti pushf sub aam mov outsl cmp xor xchg mov and mov lods mov cmpsb clc inc cmc sti push cmp xchg jle and cmp js hlt leave mov lcall pop aas rcrl xchg mov dec pop sbb ret int3 test or repz in or cmp idivl mov jmp pop les mov pop addr16 pop scas outsb push sub fs xchg push and test inc fcomps daa dec ffreep stos addl lds int inc push xchg mov dec test out enter in mov jg adc addr16 xor js cmp lock xlat add std fcomps sub scas mov movsl and and xor rolb inc shrl push add fs pop pop mov (bad) push je inc jmp mov loopne xchg mov stos nop sahf sahf inc adc or aas add add add mov jno scas push outsb dec pop daa sbb cmpsb decb and and (bad) lods add lods shrl mov dec push push out xor in mov in add jge push jmp cmp add fwait adc fcomps jg fcoml mov fdivrs mov add cmp cmp mov lods or sbb int ds sahf aaa push daa cli xor cmc jo push addr16 inc fdivs subl sahf cli out and xchg pop bound into sub push sti out mov mov dec dec lret push inc outsl insl stos inc jge adc in out sbb mov adc xchg sti pop scas mov mov nop inc xor iret xchg jo les mov cs rcrl add xor push sti fucomi push test aad leave xchg (bad) push pop add mov lds sarl or mov cmp rcl mov loop cmp lahf push test jns add add add dec (bad) adc cwtl int3 mov cmpsl xchg bound jb repz mov add loopne pop xor ljmp or mov in and pop inc sbb mov nop mov dec push xor roll out xchg and cmp (bad) push ret scas mov mov add sbbb test inc sbb clc leave cmp push in jmp je in scas fsubp jb repnz cmp fcoml stos cmp sub mov inc xor hlt pop push (bad) js add add add add pop push push add in sbb call (bad) pop mov hlt test testb stc das loope jo jmp (bad) out nop aas adc stos adc mov add aaa stc test pushf add jne mov pop inc sub adc cmpsb sbb xchg inc daa sarb sbb xchg dec jmp insl shrl mov jmp jo nop pop in sub mov sbb cwtl or jns inc lds pop dec dec pusha and popa pop add add add add mov add jae add subb insl sti ja inc (bad) cmp out xor repnz ljmp and lret and and mov pop jb aaa fs aaa jg rorl push inc add xchg out addr16 mov adc sub jbe lock (bad) push dec push lret mov (bad) in pop (bad) sub loopne cmp (bad) icebp icebp xor add fnsave pop ljmp push les mov mov or sub add inc fistpll jne xor (bad) jl add xchg outsb cmp sti les pop (bad) inc dec inc jmp scas cmpsb push mov mov xor sbb mov icebp cs push jbe je pop pop rcr clc dec inc aas (bad) (bad) cmc push xor imul sbb rcl push xor jecxz aam xchg mov push sahf icebp insl sbbl mov add and jae sub movsl out sub cmpsb add or add add or xor xor sbb imul cmp cmc std add js mov ret mov xor push push outsb pop fidivr push and in stc cmc out cmp mov dec ficom stos arpl xor outsb test fnsave pushl jb push es mov mov mov fwait sub sub shr jo or adc xchg (bad) scas jb sub inc and in xchg push fwait rclb popf mov daa sub jg cs fwait xchg xchg popa cli data16 jbe push fldl add add lods and add out cmpsb pushf sub cltd inc hlt repnz mov leave test xchg ret imul mov mov mov lea data16 shll push or mov push push jge mov xor push aam or pop and (bad) pop sbb scas jno mov sub jecxz adc jne divb jo scas movsl nop push mov cltd fsubrl xor add cmp jo push pop pop sahf cmpl or jp jb std call test add add add add js add xchg repnz lock cltd add mov pop xor imul dec pop mov (bad) push sub mov inc into ja sbb loope push mov (bad) pusha std jecxz in or pushf arpl fnop in addr16 bound dec pop pop xchg rcrl icebp push shrb jno mov xor xchg call and scas dec mov xchg mov ret arpl mov or pop pop xchg dec rcll jl aas cmpsl pop and cmp xchg push aad nop xor add add add mov inc stc outsb sub cs push inc (bad) adc cmpsb xchg pop aaa repz xchg sahf std fcmove ja pushf (bad) mov mov fcomps imul dec and test sbb sub mov cmpsl fdivr cli push loope jae in jmp inc movsl in jbe pop push (bad) imull stc cs mov das popa cmpsl (bad) ljmp out int and xchg mov jno or insl cmpsb push ret cs add add add add mov out add sbb mov aad push or dec adc ss lods pop aas (bad) mov add push xor lds xchg pop fprem1 lock xor sub pop cmp sbb clc stos aam push and xor or aaa cwtl jl les jmp scas les lcall cltd adc sti push out push out lcall lahf mov cs inc fild dec (bad) imul aaa dec mov inc gs sbb add add add fs and ds stos movsb (bad) ss and psubw pop mov int mov dec out test loope lock xchg repz xchg outsl in movsb jnp lcall adc test fcoml push mov nop push dec cs (bad) xlat push mov jmp sbb (bad) sti lds or dec mov es mov push (bad) jl fucom dec pop jne mov adc fbstp lahf scas (bad) or jmp ljmp add add push sub addr16 dec sub leave insb (bad) adc mov push and jmp lret xchg rolb push les add pop mov rorl pop xchg fldcw aam and in xchg inc jmp adc clc push lods pop sbb enter sbb mov (bad) and pop cli fbstp mov mov fist fisubr cwtl mov repnz lea shrl arpl ds add add add mov pop enter mov jle xchg jns mov test dec mov aaa xorl lahf cld pushf inc stos pop jno or pop fldcw lret push xchg or and add adc inc inc add shrl adc or jl and ficomp fisubr movsl cmpl pop mov movl add pop sub xor in xor push mov adc xchg adc int cwtl push adc cmpsb jmp jg scas std mov xchg push push mov test loopne push std inc outsb repnz inc lods out shlb test sub jns iret cmp push mov fcoml mov inc iret out andl dec cmp adc inc in mov roll mov scas pop stc adc mov mov sub stos maxps sub jo sub push xor sbbw xor or sarl shrl push inc push cs shlb add add add cmp addr16 fdivrl dec xor dec (bad) repnz pop fwait xchg in arpl xor (bad) sbb sbb nop notb leave inc in arpl mov adc rcrl fnstsw pop jae in les adc or and dec sbb xorb lahf (bad) add and or ret xchg pop ftst (bad) xor outsl dec dec mov xchg dec std and or dec inc popf pop cmp mov push and sbb or pop xorl je scas mov and fldl test mov add fs mov mov out loope xor push pslld dec lds jbe sbb sbb mov repz cs adc imul daa mov or loop add out fwait xchg mov arpl movsl in or xchg pop and mov inc xchg lcall test add inc adc mov (bad) ss adc in stos mov (bad) pop js test jb add add add jmp shrl mov xchg dec out lods int3 xchg pop sub jl mov clc jb fwait cmp mov sub push pop jmp sbb fmuls push inc pop inc jns ds rolb add scas mov sbb fcmovnu (bad) ret mov sub cld es pop je fcompl xor sub pop out test inc in xchg xchg adc dec rcrb jl aam js mov xchg push cmp das shrb add add add mull xorb sbb test cltd (bad) arpl jecxz mov xchg std fwait inc cmp inc pushf stc jb mov push push or stc repnz mov sub pop in lds cmp test mov mov push int call (bad) jb in into pop mov popf push jle inc pop and add mov mov fidivrl mov push test sarb push mov push push fwait and sub cwtl sbb mov add add add adc cmp push in fistpl mov pushf aaa inc jnp xchg push adc lods stos jp ja inc or mov jp scas jg inc and pop out inc xor mov out ja repz (bad) inc xchg (bad) std stos sbb push mov add jl adc das pop dec scas xor mov insb bnd loope adc xor xchg outsb hlt subb in sbb aam and inc data16 mov mov mov mov mov sahf xor xchg enter inc int adc mov lods test add add add fildll adcb std xchg fstps mov or repnz bts fdivrs add int jo aad sub inc mov cmc fstl mov or inc pop es movsl movb pop pusha stc out leave xchg push push mov stos dec push mov daa pop mov (bad) sbb repz dec clc push xor xchg xlat imul jne mov or in idivb aaa dec hlt add out xor pop je adc hlt popf cmp jns add add add add sbb adc aam xchg and (bad) mov loope or push ret or popf dec push popa mov sarb push repz mov jge das das aaa jae into (bad) in stos add add fst cmp add int3 and jb outsl xor and scas test push out xchg add scas push fiaddl pop fs push (bad) xor dec inc repz mov repnz shlb jge (bad) or insl push and mov fstp gs add add add push fcmovb mov and xchg cmpsb pusha scas or push mov (bad) adc xor fs push fstpt jecxz push adc or (bad) sarl das insb orl loopne sbb inc adc lods jo arpl pop cs sti add sbb mov aam rclb add mov nop daa pop imul aad in push pop psubd pusha mov sahf xchg test sbb adc fistpl in pop xchg add add add cs loope cld (bad) mov sbb sbb lds inc adc (bad) jae cmp int3 mov dec ja jae aaa les pop shrb loope push lea xchg mov outsb in sbb jle in stos xor (bad) (bad) pop out ja aad xor push lods jbe daa ret mov shl mov (bad) push and daa xor test add sbb iret mov pop nop pop loope push std mov repnz push xor insl dec aad and push add cmp add add add data16 gs pop xor inc sarl xor fisttpll out pop addr16 addr16 mov imul loope jnp push and inc mov xchg cmpsb xchg inc pop dec aaa and jns adc daa sbb test rolb inc jns pop rcrl and (bad) (bad) mov loope pop mov sarb pop mov aaa xchg push sub jmp in lea mov adc adc stos xor fisubl inc sbb or pusha jno jl adc in add inc mov jno mov int andl popf mov in push into mov push jb jle int3 xor js bound pop enter jle inc add out pop dec into pop in scas sub xor dec enter add push push (bad) xor es inc roll adc fisubl std ljmp and cmp xchg (bad) sbb popf (bad) and mov mov (bad) xor dec dec loop call in movsb mov jne cld add add add mov mov adc sbb rcrb aas pop and jns les popl mov xor nop mov mov jecxz xchg ss sbb pop ret mov (bad) popl mov les test mov xchg loope sub in xchg inc jg fildl mov jb or pop pop fbstp inc jno mov je pop push xor fisubrl aaa iret loopne add rcl xlat leave and mov pop push cmp imulb pop sub add add and sbb lods mov mull (bad) in mov mov sarl dec das sbb mov sub push or test adc dec stos xchg and mov out mov xor and and dec cmp mov fcoml adc test push (bad) xor adc mov (bad) lea mull jle xor push add mov ficomp pop or xchg int3 outsb xchg loopne lods dec xchg sub ss mov add add add fnstsw sbb iret call xchg fiadd mov fdivs push push mov in push xchg rorl aas xchg pushf nop sbb lcall (bad) stc xor and pop frstor vcvtsi2ssl push and cld add ds mov jmp mov test push js jae pop addr16 imul xchg (bad) test hlt dec fwait data16 sub sbb and mov dec pop lret mov mov (bad) mov movsl cwtl addr16 and push mov lock int jae sub add add add add mov pop pop sub out leave out lods movsl arpl xorl pushf push inc lret std fs mov inc sahf pusha sbb lods or roll mov addr16 in faddl xchg iret (bad) hlt (bad) push adc stc cmp xor (bad) lock movsb ss mov call xlat lret dec mov std sbb inc test pop jg pushf in mov cmp inc das mov cmp jge mov int3 aas push cmpsb jge iret and fs inc stc ret iret add add add add cmovge cltd jbe add sbb or inc mov mov cmp enter inc xchg cmpb lret hlt inc mov sub jmp push cmp pop das mov fisubr adc push inc add mov mov (bad) sub loop mov sahf xchg inc or sub add xor mov cmpsb (bad) xor adc mov ret lods cmp scas enter and push bnd fisubl into pushf sbb add add add inc fimull notl mov stos xchg add jae or vmovdqu sub jnp inc outsl aad divb test sub or jo mov aas std sbb bound xchg shlb leave or add nop add enter test movsl xchg add jmp in lds add push (bad) cmpl jle stos jg push ret dec dec out xchg sahf pop (bad) je sbb movb xor sbb mov test clc int add cmc mov pop repz xchg insb fsubr ss xchg test std add lea dec add jne stos adc mov push in mov in sarl mov mov das into jle xlat lods sbb movsl sbb sbb ss insb push mov (bad) divb stos or arpl ljmp xchg and iret in (bad) mov adc shrb not addr16 fmul pusha mov and push mov into push pop pop and add mov mov add add fdivrl ja pop ljmp push scas add mov sub push and (bad) out cmpsl jmp ja gs leave loopne (bad) fstpl out nop shrb cmp std lcall out lock repnz pop into dec scas push inc or insl jbe push sbb xchg jl sbb int xchg dec data16 out push cmc jo add xorl fiaddl inc add xor insl repz xchg sub int3 add push cmp add mov arpl into rclb pop mov insb fucomp pop push sub (bad) mov jg mov cmp sub mov jl,pn adc in subb or ret mov mov mov mov loop and popa push xchg adc int3 pop aaa (bad) aam stos clc mov mov inc negb push jae mov (bad) (bad) sub mov pop dec pop xchg cli jns and jl mov add add add fwait or mov push pop pop pop fs jg fbstp dec jg in push jp cld inc aas xor fcompl dec stc jbe jecxz addr16 xor mov mov adc sub add jecxz sub insb or pushf jbe xchg rclb jle js or push sub leave imull jmp test xlat jmp stos incl mov pop xchg cmp test jb adc push mov ror and xor scas or repnz push (bad) xchg add add add ret mov mov pushf notl test into lods rclb mov popf or out rclb adc xor imul rcll mov xchg mov push xchg cmp dec jge mov xor lret ja xor xor push stos out scas sbb popa ftst cmp decb sbb ret mov cs dec lods sarb iret and jecxz out cmpl push mov das inc movsb add add add (bad) push or jno (bad) insb xor loop jbe jmp ss push mov jns stos xchg jb out fisubl pop mov adc (bad) mov in inc mov sbb int scas fdiv inc loopne lods cmovo xor mov mov out and lods mov int3 push jo dec stc pop lods insl ss repz mov or mov cld jnp inc pop mov mov je int xchg mov or inc add daa jno jbe fiaddl add add add add aas lcall dec add lahf sub dec jns fsubrl in adc sbb jae out rcl cmpsl je popa jne enter push xor adc rcrl ret fistpl lret lret es sbb and fldcw jnp adc out adc es pop out sub push and (bad) lock subb repz shlb fdivrs insb daa sub mov popa ja rclb push sbb lahf push cmp out lret out or mov add add mov nop cmp pop mov fnstcw imul xlat lcall jns jns xchg or popf xchg les cmp mov popf xchg jno cltd mov xor clc imul lahf sbb jge leave xchg enter mov data16 insl mov cmp test xor sarl push arpl mov es mov xchg pop dec push rorl and nop or je nop pop mov enter and add add add xor data16 jg test pop out pop repnz add stos loop add repnz (bad) out cmp and sub jecxz mov jb fidivl test push out test aad int lahf leave push pop xchg dec rorb ret sbb sub jae loopne add adc dec mov jo pop leave lret repz test or dec lds dec pop lock out in lahf data16 movsb cmp push gs loope mov and sub sub adc inc mov lds cli pusha enter inc cwtl add pop imul sbb aas pop into imul sbb push sbb ja xchg xorb cmpsl mov or bound push ds mov dec pop jnp lcall jecxz fs fnstenv imul adc push insb jl pop and nop outsl fmull mov pushf test in sbb inc cmpsb mov mov outsb push cmp repz and inc xor mov push push test mov inc icebp add pusha (bad) or mov mov push out (bad) cmp jbe sbb or int (bad) loopne (bad) cmp or inc nop jmp mov pop in mov adc mov out imul pop mov dec into nop xor pop pop enter sub outsl xchg loopne std fidivl lcall push mov decb adc inc shr jmp inc out push cwtl pop xchg mov cmpsl push aas ss ds add add push mov xchg cmp dec mov (bad) std and popa push mov sbb je sub xchg ss fwait push out adc adcl (bad) mov cmp jns repnz jno adc mov mov xchg sarb cmp adc (bad) sbb lret pusha and cmp inc lret outsb aad mov movsl and mov sbb jmp jns sbb test dec enter xchg xor or ds das js inc mov or fsubrs add add add add xor dec fs jecxz test movb loopne test gs jmp in in cld dec andb add pushl mov popa adc (bad) add mov aaa sbb or mov das bound xor xchg pop push rolb stos pop cmovge jmp jg cs stos xchg adc pop andl xor subb cli pop mov (bad) pusha lcall fild rorl add arpl cmp xlat adc mov add add add cmp addb mov and add aaa stc sbbl scas cmc ret int3 test mov xchg enter cmp (bad) mov cmp std mov dec jl cld sbbb data16 cmp pop stc out cmp mov dec dec ds add rol int3 gs (bad) (bad) aaa jns and out in ljmp push test adc shlb (bad) ret mov lods ret xchg icebp int lea ds or and mov xor dec fisubrl add mov mov mov test faddl add add outsl mov invd test fwait enter (bad) leave push xor into lret daa leave xor lahf test mov inc ret (bad) xchg movsb add movsb pop jbe sub jb popf popf lahf mov ret fs int3 sbb jns lret adc ret popf cli scas jne into stos psraw imul lods mov (bad) xchg sbb push insl jns lret mov das int xor test mov lock jns shlb movsb mov iret sbb pop cltd aad pop movsb loopne mov fwait mov dec add add add add inc movsb stc add mov and cmp sbb sub or pop sub dec push enter mov repnz daa inc js adc popa test xchg daa lds fwait outsl cmp sbb mov mov vcvtps2pd jge xchg and pop dec adc mov xor jecxz pop shrl cmp les push or bound cmp bound test dec clc int sbb js xchg cld push iret (bad) xchg (bad) bnd movsl inc fsts das pop jmp mov imul or add add add cmp xchg fs pop lods nop xor mov aaa mov test xor jnp mov mov lods test sbb repz aaa push mov leave pop loope in mov cmp add sbb fisttpl xchg push lret sub sub lahf mov out (bad) aas icebp mov cli cmc sbb cmpsl imul xchg popf mov mov dec dec adc adc imul jg adc fnstcw xchg js jbe add add add fist lods fdivl in lcall repnz adc ds and stc jne sbb out jmp mov push adc (bad) cmp test adc mov mov push out in cmp imul icebp push (bad) out cmp and pop (bad) outsl std sub adc insb iret pop mov inc (bad) push mov adc fwait shrd push in cmp xchg push stos inc lock dec enter inc jne add add add pop jnp aad adc cli sub mov and loope ret mov xor push or enter push aaa xchg out icebp ret popf or jp ficomp xchg mov cmpsb cmp lea cmpsb push mov cmp test jo push cmp js inc jne jnp roll mov pop lods daa xchg ds xchg stos mov lock inc icebp test cmp call inc sarl xorb add add inc xor aas cmp xchg sub inc dec push xlat jae xchg xor jno aam pop pop lods repz mov inc and adc ljmp cmpsl cmp data16 push push jecxz jp xchg cmp xor das pop scas add xor xlat mov jb xchg push push test test aam dec mov das mov xor (bad) lahf mov and hlt (bad) aad push dec pop call rcll inc aad xchg sbb adc push cmp cmp not add add add add das or daa adc adc in cwtl test mov aaa push stc pop leave imull adc (bad) adc push mov mov aas das fwait mov xchg sub mov fnsave inc es pop add xor cmp addl jbe inc es pop stc mov fdivrp push in xor aaa pop lods pop cmp jecxz (bad) int lock nop scas lcall call push in bnd dec sbb mov or add add aam inc pop push mov int3 pop leave testl les push out in hlt mov iret out mov orl icebp scas lea test dec pop mov fsubp mov into dec data16 adc jg xchg imul dec sub andb fnstcw mov mov pop loop jmp jne ficomp insl xor inc test outsl mov push int jg mov mov xchg (bad) std mov loop cmp test add add add mov mov idiv xor push sub mov or cmp call divl (bad) and ds mov inc int3 in int3 arpl fisttp jae sbb insb pop pop cmovo divb jne scas jl nop xlat test push mov sahf xchg gs out (bad) movups fcom mov ds adc (bad) cmp sbb dec add or lea cld das jne mov mov fdivs pushf cmp pop imul mov add add add int leave add or jnp lods sbb or out sub pop fwait xor mov sub notl pop push int movsl inc or test scas cmp ss xchg dec movsl cmp sbb jns daa adc lcall and ds mov popf pusha mov int3 inc jo mov test xchg fwait lds adc pop inc jecxz arpl es ret fist inc and fidiv rcll add add add xchg jmp pop hlt xchg int inc inc iret mov repnz push cmp push jecxz in inc lahf mov push (bad) cmp cld sub sbb popa subl ja and test iret lods mov testb mov push lods pop xchg xchg test dec loopne sub lret decl push sti lods mov cmp inc sahf fdivs push es mov loope xor jp sub insl xlat insb cltd or dec repnz and jecxz fs insb pop imul add add inc das fcomps aaa je pop repz jne cmp shrl (bad) test jo xor fcomps pusha arpl in cmpsl xchg push dec adc jg mov cwtl sbb repz jmp cltd jp ds adc movsb stc pop rolb fistl add cmp inc cmpsl (bad) mov cltd inc sbb mulb (bad) and sti push mov (bad) repz cmp dec orb or pusha cmp sub push mov and add out icebp das fimull daa sbb and pop sarl adc mov incl sub fcompl pop cltd lock ret xchg dec lods in mov dec clc inc loope push test push adc int3 addw imul icebp jle push push shr mov jl mov lds clc mov shlb dec or leave push sub scas insb mov icebp mov push pop pop or adc fsubr and ret int fldlg2 mov push jno push mov adc iret sbb jae and rcl jg xchg fwait ds bound in push test (bad) cmp sti or das ficompl xchg push cli push adc pushl sbb or adc cmpsl test rolb xchg iret bound mov adc bound insl jecxz or mov mov mov add and in nop iret dec les pop iret aas inc xchg push push mov lahf push scas sbb rcrl shrl jno fs cmp xchg jmp push mov xor add add add add push sbb and mov xchg jp cmp jns aad mov and xor imul bnd sub jg idiv mov mov sbb pop jo jmp or (bad) jbe ret loope cwtl aam cwtl fdivl lods cmp pop es sub xchg rorl sbb jae push rclb arpl sbb sbb in fnstcw ret mov adc cmp insl out mov add add push sbb test and xlat xchg mov mov add popf jmp nop mov imul (bad) pop or aas cmp fdiv les sahf or ja sub cmp mov and jno push test mov aas push sbb push ret sub sbb test lret ficom or out add ss mov or pop daa icebp mov inc aas call pop in cld stc xchg add pop inc push mov add mov arpl mov add add add pop insb adc loopne imul pop dec fldcw add aad jp xchg add and lock not dec xchg xchg add js push leave jecxz cld mov fistl cmp loop sbb add or xchg bound cmp (bad) int3 xchg mov dec in xlat in mov add adc rcrb jb int shll imul mov fs std mov aaa cmp pop jge repnz nop xor out pop outsb and sub add add mov loop jnp data16 dec xchg dec out js xor lock inc sub cmp xchg out adc out outsb xor adc (bad) push insb cmp inc jns out in push xlat and mov sbb ficomp cld jbe cmc sub dec insb fsubrs and popa mov mov push fwait or hlt adc mov dec shrb (bad) jae sti mov push into push pop mov jnp jns push jns xor xorl in mov divl mov add add cmp push stos add sbb dec clc test xchg movsb jae xchg test pop scas mov pop into mov pop popf mov mov rcl cltd inc cwtl jmp scas mov inc dec pop push gs pop movsb jns mov push mov or loope xor cmpsb mov out sti sub mov add inc test sti mov push stc dec ret js jp mov dec dec cs mov subl push loope shrl iret fs (bad) fadds jbe insb adc add aad (bad) pop gs mov jle rcll fist lock sbb subl rcrb pop loope in sbb mov repz test sub mov mov fnsave xchg or mov jbe jo std repz ljmp cmpsl or xchg test jbe rcll das loope dec inc jle sub mov and sbb cld dec xor inc mov pop fisttpl test add add add rclb (bad) lret sbb insl jo pop in test stos pop fsts cmpsl inc scas jns push stos sbb lods imul sub mov test add cmp mov dec fmull mov movsl mov incl pop dec push fs scas dec jp (bad) or dec repnz dec and dec push adc arpl dec dec sub push and inc icebp push addl cmp mov mov add add add mov mov call insb pop clc jge inc inc pop lea jmp (bad) fbld mov movsb insl clc jno push les enter cs xor add mov jp cwtl xor or loopne (bad) xor dec and inc mov xchg aam mov mov pop or sahf mov jno outsb (bad) movsl pop ret idiv (bad) jmp in and inc xchg or cli bound jg or shlb add add add add mov xor pop push mov jmp cmp mov and sub add mov (bad) das scas out mov mov rorb or sahf mov rorb je dec push sub mov jge mov sub xchg mov push dec inc cmp push jp jne sbb arpl mov out push add call dec mov stos sub int3 movsb jb lahf xlat jecxz pop mov into lds add add or cmp cmp cmc imul sbb mov inc cli insb lahf out arpl mov xchg mov (bad) nop ret inc (bad) lock test sahf and fwait popf inc add xchg lock loope adc inc add xchg pop enter fisubl popf or lock jmp test sbb (bad) mov sbb ja sub mov stos lcall daa jnp xchg popa mov or add add push mov mov jno mov cld (bad) iret rorb fidiv inc xor pop dec inc fwait lahf bound out (bad) ja aam pop arpl pop mov mov test outsl sub dec sub test xchg or and dec mov fildl call cltd into pusha insl test inc lret lahf jmp push xor or sbb sub mov test inc add mov or push sbb cmpsl clc addb sbb ret add add add cmp and cld inc outsb test sbb push stos or insb mov mov push xchg insb sahf repz dec adc popf clc lds ja in xor in mov pop scas xor cld jae outsl cwtl cli call shrl out and mov fimull jmp add add repz nop mov std imul xchg test dec hlt mov sbb ljmp popa pop cli ret dec inc sbb or push push add add rcrb add fs scas gs push mov call or cmp xchg pop pop adc push (bad) add jae sti pop xor dec xchg fcmovb xchg int fs outsb into (bad) mov insb mov call mov imul enter sbb bound and dec in (bad) sbb adc inc adc push je (bad) dec mov mov imul testl xor inc or adc jle ret add add add mov out xchg xor and push xor imul sub pushf pop inc aam xchg outsb jle fsubl or jl push xchg jle dec stos arpl jl sbb in push popa push sbb xchg loope add inc lahf inc (bad) inc sarl shr shr pop jbe mov rolb mov inc stc hlt sbb jne pop cli pop das mov pop out inc xchg ss pop pushf push mov fstps add jne xchg out xchg aaa sbb inc fidiv iret inc and push mov mov (bad) into ret popa orl push rcrl mov and or mov out cmp xor adc mov cltd and bnd cmp pop push addr16 jmp (bad) mov and mov and sarl pop in lret cmpsl jae (bad) aaa test (bad) fisttp xchg popf adcl or jae es mov mov sbb test cmpsl sub std push inc xor sub divb add add scas mov imul scas inc es xor setg icebp int push ljmp outsb mov push and xor inc test movsb xlat sub call mov sbb adc inc dec jne cltd jnp inc cmp dec dec cltd sub iret (bad) jp or cmp add mov or sti dec bound push jle inc xchg xchg (bad) ret mov mov in imul adc in adc ds cltd int3 (bad) int3 add add add (bad) xor cmc gs xchg push lods arpl int mov lods push push pop dec push fisub shll in sti in mov aaa fmuls fisubrl xor push xor aas ret std push cmp mov arpl and inc sbb mov pop adc in aam pop cmpsb sub test xchg jp bound jmp mov add aas mov or add in in adc in fmuls mov mov movsb dec cmp rcl xor sbb add imul into movsl (bad) xchg (bad) fnsave mov rclb jmp repnz in nop add hlt cmp icebp sahf push mov or gs xchg mov in in xchg mov (bad) mov mov int3 imul sub xchg aam fsubrl lea cli push outsl push push es cltd addl sbb lds or pop data16 mov mov xchg jg clc mov std fcoms inc outsb adc rcrb add add add scas outsl in movsl rcr out loopne sub xor push xlat pop inc or fisttpl cmp dec mov sub popa or xchg lea xchg mov lret icebp data16 sub test lods shl add ljmp adc into and test xor in movsb aaa mov mov loopne xchg stos jno dec (bad) lea sti pop cmp lret fwait out mov mov cmp hlt ficomp popl add add mov jns pop orb leave out in out sub pop adc mov mov dec lcall push loop (bad) and xor icebp xor jo push push jle sti fwait imul dec lea push pop or cmp mov push jecxz or inc jns in sarb cmp sub iret stos or xor jge scas aaa outsb push xchg adc lock cmpsl sbb fdiv dec test add add hlt cmp faddl enter les popa cld dec and and add dec pop cmpsb or shrb (bad) nop xchg ds mov add inc xchg jne dec sbb arpl jo adc aas sahf push es or pop ret jg mov add jmp jl lods cmc and mov test mov cmp jbe inc (bad) push pop xchg lods fisttpl xor cmc cwtl xor inc cmp add add add add or rcll mov ljmp scas pop js out or test dec out or mov icebp and out push sub push push call bound jb iret movsl jmp jecxz shll dec or (bad) (bad) (bad) xlat push loopne xchg addl xor aaa add cld pop je inc pop stc in pop call ds gs cmp jns mov pushf aam add stc or cmpsb mov sub dec add imul sbb add xorb pop popa ret sbb mov rol stos jbe xchg fdivrl jne (bad) xlat bound inc stos xchg stos mov movsb scas fdivrs lock test pop xchg movsb push and rcrl in lods mov mov inc adc jge dec repnz addr16 loop add notb mov cmpb test mov sti sub faddl inc or test popf fcomip sub xchg notl mov dec mov xor add add add add movsl (bad) lds and lds sub movsl and push lcall ret fist add mov fiadd sub add pop pusha in loope loop sbb push mov lods mov stos pop xchg adc outsl inc (bad) sbb pop les cmpsb sbb addl lds subl aam ror das xor mov lahf in out dec or (bad) lea roll (bad) dec push adc xor fldcw add add add xchg inc jns xchg mov adc add fildll sub fwait decl scas or xchg adc jnp push push xchg sub push les jmp and pushw fidivr insl lods lea pop inc enter xlat jmp cwtl push arpl movsb andl ret dec fiadd xchg push daa push out mov fldt xor mov test jp (bad) mov popf push jo (bad) and adc movb adc jg addb add add add add mov es cmp lds pop sti pop out and sub insb mov stc pop stc call mov arpl rcrb push and add mov dec ss inc int push dec mov (bad) push sub pop or mov push jae fcompl push pop xor lods add lahf mov out mov test out scas mov stos push push out mov mov mov cs out leave outsb lods ss pushf mov in mov (bad) sti int test add add add ja arpl jbe (bad) divl jo cmp push in xor and lret fsubl xchg sub test and and mov jbe jns jl std pop mov icebp and sub out cmp out cmpsl mov add cld and cmp into sarb insl jnp dec add stc out imul or push add (bad) inc sub rclb cmpsb mov fidiv call jge (bad) xor add add add addr16 xchg popf rorb int3 jl fwait xor hlt int3 inc pop ljmp cs pop pop fs adc stc ds adc xchg jmp push (bad) jo push (bad) add cmp push iret (bad) divl loopne int cld pop movzwl inc sub xor add jnp int cmp jb push jnp cld ljmp jle push in inc xor sub xchg and popf es std loope adc mov mov out add add add insl (bad) insb dec repz xor sub or and ret inc mov sub jbe in iret add lds pop es rorl push cmp mov test mov or outsb cmp scas push rclb and xor sti mov in and lcall dec and in das push lahf adc mov mov push xor add sub mov dec icebp sub int3 in xchg mov dec cmp add outsb pushf loop push dec ret xchg mul outsl std rclb (bad) addb int3 pop inc ds jge add push popf and lods or mov int aas in adc rcrb sbb stc xor or int3 sbb fdivrl lahf lods mov mov std mov sub loopne fimull icebp push pop clc ftst mul jmp lock xchg in lahf lret fnsave push (bad) inc neg iret mov paddw mov mov hlt add adc add add push test jae lret jle mov mov repz loope ds (bad) mov (bad) jl test adc hlt xchg sbb sub cwtl jbe pop dec sbb mov xchg sbb test push xchg std fs or and std in in dec inc dec dec inc sbb lcall int3 mov int3 adc adc les and ja arpl jmp fistpl xor icebp jge xchg sbb pop das jne out xor mov lahf (bad) roll sbb add add add push fidivrl mov mov shll sub mov int3 enter push push xor cmp push dec jne push test in push xchg push dec mov mov xor mov ja notb lret call (bad) stc pop fcomp pop and and and std add data16 add pop adc clc cmp xor or ds adc mov rcl pop and jns inc bound (bad) sbb aas (bad) mov xor (bad) jae outsb movsl xor mov mov aam adc into mov push shll adc or mov enter cmp imul dec sub rcll pushf xor and cmp aaa out cmpsb (bad) js jnp cld inc push cmp pop jg mov mov xchg popa add dec mov jae mov or test xchg clc mov and adc sub bound mov cmp stos sldt add add add or or jns xchg mov add mov movsb cli push fsts aad ss or sbb jle cmc mov inc stos add xor lahf imul jle fidivrl sub mov aad push mov sbb lret jne xchg xor je sbb xchg mov jp loop (bad) pop lea lahf fstl add add in mov push stos sub sub xlat push mov mov ret xchg xchg cltd mov dec sbb flds xchg dec clc icebp fucomip outsb leave arpl aam imul mov mov das das adc sub adc add fmuls add or xchg dec add inc adc fildl and adc andl mov fs enter aam data16 enter nop imul cmc into pop pop ds mov mov aam lods jbe cmp or fidivr pop adc add or imul sbb test stos fs out ret or sbb insb das pop push pop lds int lods int3 int3 stos add (bad) fptan sub mov es in xchg loop sub cmpsb mov sub lock jl (bad) ret sti inc xchg sub mov fstpt (bad) push lods push shl cltd lcall or popa add test jp sti lret ret xchg arpl into je test push and rcl (bad) into inc bound roll pop clc lahf xor mov sti movsb sub hlt or push add add add mov rcl pop (bad) std repnz pmaddwd test sub out push push (bad) adc jmp push ficomp cmc adc lcall rcr mov hlt push mov adc sbb iret jge adc nop add callw pop addr16 shrb rcrb cmpsb ljmp jae and repz cmpsb (bad) xor adc aas in loopne imulb sub sub aam rorl fldl add add add in mov das pusha push pusha pop inc mov (bad) std repnz inc fdiv scas fdivs shrl xor dec test inc adc std test ja iret nop sarb or subl (bad) xor std mov xor xor in nop in push or test mov sub or clc xchg inc adc cmp or xchg inc (bad) fdivrs add or add pop in mov scas daa xchg out inc test lock mov xchg add add add cmp mov lods jmp mov jne push add shlb fwait xor mov outsl jle mov loop (bad) das ja inc imul cmp fisub jne sub in dec and aas mov rcr mov movswl mov mov and or mov adc cltd xor imul pop cld jo gs leave and js (bad) lds mov mov stos add push movsb lods dec sbb add add add push mov inc cmp sti or es popl jg insb incl xchg sbb (bad) jne sub mov xor mov data16 inc movsl pop ret ja pop in fs int mov xchg fisttpl or data16 in xorl xor jns add xchg scas add cltd lods xlat push mov out cmc enter lahf or adc stos lahf je sub gs fisubr outsl or repnz and ja mov jmp pop push in jp scas and push pop fidivrl loop dec (bad) push push xor arpl mov pop xor jecxz repnz out sub or and or cs ds xor dec xchg aas mov and cmp xchg add shlb pushf xchg xchg inc jae xor pop sarb cmpsb cli sub xchg and or (bad) jno cmpsl cmp mov sbb cmp mov mov xchg int mov negl fwait xor mov add jbe add add add add or das addr16 mov jmp push cmpsb xlat push lods xchg jl stos in scas aad xchg arpl jo icebp xchg into mov out add sub imull es (bad) les imul dec adc test fstl (bad) pusha aam mov in rorb dec (bad) sbb std adc mov pop push cmp cmp and pop incl mov inc jbe mov ret xchg (bad) cmp movsb pop (bad) int (bad) imul je nop xchg lret lods mov dec add add add and jno cmc mov ds mov std mov adc and cmpsl insb push mov sub and movsl call mov jne neg movsl xor inc pop cmp pop dec sub aam or push mov add sub nop loopne fnstcw sub outsl push sub pop pop call out push sub add cmp lret push gs mov and xchg out and push mov int3 xchg or xor push (bad) mov dec and rcrb dec cwtl xchg xchg jno xchg xchg sbb cli scas xchg add out aam dec pop push addr16 icebp (bad) data16 xchg jp fs pop add repnz adc stos mov mov dec mov ds push stos push mov xchg jo iret or je in and sbb mov push repnz (bad) mov punpcklwd daa mov dec push adc add add aas push mov (bad) ficom pop sbb int lcall inc int3 test (bad) jge pusha xchg cmp sbb cmp inc lret sbb mov cmp in movsb lea or out xor mov xchg shld inc sbb (bad) pop or xor leave jge sbb jg lret jmp push dec dec pop cmpsb movntps rolb scas push repnz sbb sarb lods sbb std test test scas loopne and data16 pop addb ljmp mov int iret std add mov pushf mov sbb sbb decb cmp cmp cwtl inc ret sub mov (bad) pop dec cmp aaa push sbb aad xlat test stc loope ds push mov icebp inc ja lret jne xor mov push xor push nop addr16 aam iret mov popa mov mov hlt arpl jbe jge mov sti adc push pop dec fsubr sti sub aas sbb push pop inc lcall lahf xchg (bad) ja insl movsl mov mov lahf inc rcl push ret or and fwait addl and (bad) mov inc gs sub sub test pop pop or ja pop xor int add sub es jmp pop adc cmp pop repnz add hlt jae inc inc popf inc mov jo je outsb xchg mov mov jge fcomip fwait popf mov call xlat xlat mov lahf std pop or sbb rclb push pop mov sti lds adcb (bad) testl add enter (bad) jo jmp sub dec adc mov out pop mov mov into fidiv mov std cmp mov mov (bad) scas (bad) xlat jne (bad) pop sbb mov and adc nop stos pusha pop (bad) loope mov pusha ja test data16 or adc in sbb imul sbb pop xchg push sub shll cltd repnz mov dec dec mov mov add add add push pop mov dec mov mov dec xchg push push mov in inc mov (bad) jne adc pop (bad) ljmp ljmp push sbb push inc cli xchg mov in outsb cmp or sub push inc outsl stos mov pop mov xchg cwtl lods adc or xchg cmp inc or cmp scas or mov faddl xchg sub nop pop fistpl mov outsb loope clc dec inc inc shr mov stc push xchg enter (bad) scas sbb jae test add fwait loopne mov jecxz mov fstps dec aas test dec enter inc pop mov pop mov rcll dec and cmp or in jnp jno dec cmpsb mov push jns (bad) fnsave pop push leave cs push ja insb mov aaa cmpsl mov clc xchg sbb jnp jl test imul scas ret outsb icebp sub out mov cmp jmp out add sub in and loopne cmp cmp iret fs out sbb cmpsb dec add add add js (bad) rep and (bad) adc pop jo pop lock and (bad) cmpsb jne pop sbb out add adc shll jno cli jno xchg inc and pop xchg dec fwait inc mov pop insb mov pushf pop test xor cmp push sub aad cltd xchg add ds sbb outsb mov cmc jno cmp sub cli add mov add lahf daa movsb rclb xor mov insl mov nop jne xchg sub add add add fldt adc test pop dec mov ss jl icebp daa xlat lods popa out (bad) dec push pop dec mov daa jl sbb or loop imul insl std mov es jno pop pop dec iret fstpl pop nop dec hlt sbb jge lret outsb or lcall jecxz outsb (bad) ss and jge outsl adc push lea dec push pop sub daa das xchg mov xor es pop jnp (bad) mov fimul out insl jecxz add add fidivl movsl xchg pop je mov push lds mov adc sar out inc xor cli push mov sbb or insl shrb mov fsubrs jecxz icebp aam ret dec test js jl jb push outsb add mov push sbb xor push adc cmpsb (bad) rorl test stos jae jl xor decb inc xchg dec mov sti pop outsl cwtl scas aas (bad) enter xor fcmovu mov fnstenv aad jge sub lcall stos inc scas (bad) pop dec in and cltd movsl adc push push test enter repz cmpsb lcall pusha push movsb adc inc hlt xlat add fcoms sbb psubd push xchg fidivrl inc das xor nop push add sti mov or fisttpll or cmp mov cmp lret mov and nop nop (bad) jb push mov dec sahf aas (bad) mov lcall outsl pop andb jae push inc mov daa mov int add add add xchg (bad) dec cwtl imul stos and movl sbb pop fdivs jbe pop addr16 jb inc movsl call xchg imul loope adc mov pop pop sbb mov xlat sti pop pop sbb add add aaa insb sti xchg xchg inc jbe push adc out mov push stos lods push lds inc (bad) xor rep xor add popa unpckhps push pop ret jo sbb cwtl cmpsl dec int aam or add add add adc jns test int insl xchg pop push sti mov jge cmpsl inc push fild xor mov xor insl mov or add cmc pop inc fsubrp push in test xchg and mov scas popa test cmpsb and sbb sar cmp inc pop shrd sti push imul xchg add cmp lahf es pop lret push xchg (bad) ja jo cmp jo mov fidivl mov inc aam dec fwait jbe add add add add popf cmp push mov xchg fwait dec fcmovnu in sti ret inc stos cwtl pushf in pop adc (bad) mov push add adc mov mov jle cmp pop jno inc das bound mov test test ss shr or sub pop xor jne dec mov sub (bad) sub imul sub inc loopne mov movsl and or bnd lret sbb pop jns sub fdivl push call movsb imul add (bad) in dec inc inc adc xchg and scas lock int adc mov lods jno xchg cltd std loopne andl and leave push push pop test nop cli lods shr xor mov aam mov or iret mov fxtract and stos xor and (bad) cmp mov fcmovnu sahf add jo mov jle jecxz adc das sub mov sbb int3 sarb loope stos mov or cmpsl pop (bad) xlat sbb add int pop inc imul mov dec pushf aam fidivrl add in pop lcall hlt fcomp cwtl fisubrl mov and push (bad) cmc out rcr int cltd test das mov xchg int fsubrl mov cli int3 inc cwtl cwtl ret inc imul cmp notb xchg or loopne xchg inc outsl gs sbb jnp cli push push xor push inc mov sub out push or sub in push push and mov push add sbb push loop (bad) adc imul push addr16 stc test mov mov jo push adc repz sub xchg lret adc pop jp add adc (bad) or hlt sub (bad) in mov fwait aas push stos loope fiadd sub cmp adc adc cmp sar repnz popf cwtl mov fcoms push mov int3 int3 cmpsl or cli adc mov shrl outsb insb addr16 cmpsb mov jbe sahf sbb movl add add test or adc int dec andb xchg and cmc jg push sbb lret mov add hlt mov mov pop (bad) or sub cmovnp jle and adc fisttp in cmp lret xchg scas aas xchg loop ret xchg mov mov jl xlat add mov cmp push pop (bad) xor lea and ljmp jne ss fbstp mov flds add add add idivb ret push fmul decb sub mov sub (bad) fidiv xchg aad mov aaa dec or push andb xor roll cltd daa pop mov inc push mov jo out fistl scas enter mov loop cmp mov cmp mov out pop pushf pop loop lcall lahf pop push insl shl push xchg pusha mov dec fcmovne fbld sarl into loop sub leave cmp add xor and loop xor imul orl add add add add add xlat ret jle mov inc popa mov xchg cmp xchg mov mov test pushf push push push in es in fwait sbb fsubr and roll popa jbe mov mov aam fstpl ret outsl icebp test xor mov aad (bad) (bad) xlat pop sub add iret pop ds iret sbb adc rclb mov cmp fwait cmp outsl imul push cmp or pop js add add add add pop pop es fistp push (bad) jg in inc mov xchg cmp out or loope popf jo xchg aaa movl adc (bad) enter in and jne cmc out inc jne add cmpsb add testl loope jge,pn ret sub cmp js in mov inc sub mov out mov lret int outsb mov dec and add and adc mov and leave leave lods push cmpsl orl mov add outsb div dec adc add add add rcrl pop es xchg pop sarl outsl mov adc inc jns sub (bad) int3 ret outsl mov lods add repnz jle mov daa outsb mov adcl mov stos scas pop mov xor test rcrl addr16 add jne (bad) xchg stc iret cmpsl lcall (bad) inc stc cmp ss popa push gs into mov loope scas fdivl fwait pop shrb lret push inc cmp mov enter adc insl jge mov je sub sar add add add data16 leave iret ljmp inc popf add daa push test in fcomi faddl mov and dec sub sbb mov jbe loopne push and push bound mov (bad) lock ljmp jae imulb lods and std aad in imul out fadd imul adc lock cmp mov sub xchg sbb jmp addr16 push sub mov gs xchg xchg movsl xchg mov das inc add add add add hlt test out das in jne jno xor adc sbb loope sub lcall addr16 sub fiaddl je test push hlt xchg dec fdivr push fistl xor inc fisubr or arpl jbe jl stc lahf xchg cmpsl ret add imul stos fsubl repnz lret xchg xchg adc dec loope xchg xchg cmpl cmp mov jo ror xchg or sub mov mov add add add shrb mov jbe fidivl (bad) and or xchg or inc lds sti dec xor jbe mov idivb mov jecxz sbb xchg sbb scas call xor daa nop xor hlt sub xchg mov cmp or sub inc and fcoms dec fisttpll pop pop add imul out add idivb xchg aas fimul xor stc outsl popw or test out adc fdivrl add pop ficompl bound lods jnp fdivs lret jo int ja stos cmp test adc xchg xlat lea pop nop mov cli and arpl outsb xchg mov mov stos lahf cmp mov add cmp dec jle ds fcoms or xchg popa outsl rcrb xor daa ficoml cmovp in fstpl (bad) pop lahf (bad) mov cs ret notl femms mov nop shlb and loopne mov rcr cmpsl jne scas or add fdivrl shll lds cmp xor inc pop mov bound xchg mov inc adc mov pusha push sbb mov sar (bad) test adc xchg jge mov test push test lea cli xor jno inc std addr16 dec orb add fs mov dec inc inc lahf jle pop lcall aad inc pop iret stc mov sbb mov lods or pop (bad) mov push push out cmp das int test add add add aaa iret push mov inc adc jmp fidivr (bad) mov xor das aad adc and pop hlt hlt jle es hlt xchg pop test scas xor (bad) sahf add outsl js clc cltd clc cli test pop js mov out dec jmp rcrl jl fcompp stos xchg aam mov imul sbb test adc in or fstps insb ret icebp sub adc movsl pop sti cmpsb sbb mov (bad) jle push push stc mov imulb add add xchg push inc into pop inc cmc inc push test xchg push mov xchg out cld sbb mov movsl fcoml sarb adc scas popa cltd push push fadd push xor xor (bad) dec push (bad) mov sbb xchg push loop popa (bad) in sbb lcall test mov mov int3 adc cmpsl sub or loopne dec ljmp lods fs insl test aad adc lea rclb hlt (bad) jns (bad) ja sub enter mov add add add pop pop popa mov mov scas addl inc xor (bad) imul jmp add and iret scas xchg call push add mov and insb sbb sub repz mov fldcw fwait xor gs nop mov insb xchg xor lock cld xor mov inc (bad) lock sti xor aam cmp cmp mov rcll inc cmp add jno (bad) mov sbb cmp test mov push push inc mov inc scas add add add gs or mov mov das xor or mov inc jmp pop sbb pop and adc add fisubrl mov into fwait push push lds repz das loop sbb hlt xchg sbb dec test scas sub push ret mov push and jge test pusha movl daa inc sbb xor lds jns js lds mull inc rcr hlt fcmovb lret inc inc sti add faddl andb lods adc add xor int3 in ja je mov push test fistpll sub ret and mov add fwait out xor adc stos andb xchg xor aaa (bad) mov inc pusha decb loop jae xchg add rolb mov jae (bad) sbb je sar pop cmp fldt add or jg clc xchg sub scas xchg xlat out and sub pop mov (bad) and push imul mov imul loopne dec ljmp rorl lahf fneni(8087 out mov inc es inc and push lods fisubl ficoml movsl int3 ret push lds mov daa inc jge jbe jg xor adc lods sbb imul push stos fstl cmpsl ja in aam inc dec mov add cmp mov sbbl out repnz dec loop or (bad) (bad) jl mov repz mov dec fnstcw out leave dec rcll hlt cmpsb stos mov add add add sar adc aam popf or ficom pop add inc dec cmp loop push lcall mov mov arpl lods mov lods das cmpsb mov mov push jmp sti movsl in inc mov test pop push sti (bad) in dec pop rcr xlat pop hlt lock rclb ltr jle dec jo push es push dec imul cs sub hlt sbbl jmp mov lret add pop or push jmp jl dec add add add jmp mov xor iret xchg rorb test mov sbb xor adc dec dec add mov mov mov lcall out js mov xor int3 xor dec pop jmp mov pop sub mov scas movsl and jnp,pn roll xchg addb push js add mov xchg rorb push add sub sti call add mov call stos add add add add add sub or (bad) jno nop mov or xchg out fsubrl xchg orl inc dec sar jle jmp psubq push xor jmp jp add xchg adc (bad) ret mov adc or jp stos xor xchg in into jns bound sti lds mov mov les sbb jae cmp lods pop nop add pop add or pop inc jmp ss and adc test fstpt lahf xchg mov push jp xor sti jb adc push or add loop jmp xchg in imul or stos daa adc pop push popf mov mov gs dec fsubrl xchg rcrl subb sbb inc hlt mov push mov inc mov mov les mov dec icebp mov ja cmp mov mov movsb fnop das hlt mov hlt (bad) imul or mov sub scas jnp loopne xor cmpsb lods cmpsl mov dec mov lods jb daa cs push lea cmp divl rcll int sub lods sbb lods popa in xor mov (bad) lea adc xchg or (bad) mov sub xor cli jo sbb sar dec and sahf (bad) insb mov pop ss sti cmpsb push lock mov inc inc jle loop jecxz icebp pop xchg jp xchg or cmpsb push enter pop out sub call add in mov pusha pop mov mov ljmp cmp add add add add lcall (bad) addr16 lds xor mov stos call pop fs fld sub and push mov mov aam lods mov xchg mov and inc mov ljmp cmc xchg insl mov and movsb adc in pop add push ljmp insl sbbl movsl dec pop das fs call adc out adc les dec dec jle push lods daa push sahf in mov rorl shl mov add mov insb adc decl adc mov shrb add data16 pop sub repz push (bad) addr16 je insb aad mov lds andb jp mov mov icebp and pop fidivrl jp push jo push scas add mov and imul add jb jb add enter outsl push (bad) dec xor add xchg cmp sub clc mov lds sub insb pusha ss add stc ljmp add pop push sbb adc dec cmp arpl pop loop and xchg mov call jns mov test mov xchg cmp mov ljmp mov add movsl ret and add mov and jno xchg lret xor push ret xor (bad) lret das test push pop cmpsl jno or mov adc popf mov data16 clc pop mov add xor sub lea ds add add add jno inc nop xchg fnsave stos popf insl out cwtl movsb (bad) sti cmp fdivr push dec movsb cmp dec popa out fistpll repz sub xor (bad) iret push and xchg cmp ljmp mov adc popf lock data16 cld mov test sbb dec (bad) sbb mov loope add xchg fistl adc pop mov mov call mov (bad) sub lret lahf jg push mov push mov adc les pop adc add add add add xchg outsb cmpsl dec ret repnz (bad) cmc scas popf mov mov jbe,pt decl (bad) cmp popf mov inc mov sahf pop test scas fist aad or and pop (bad) aam movsb or xor (bad) xchg adc fdivp mov sarb (bad) imul push clc mov test fsubrl aaa aas fdivl cmp mov nop xor dec xchg lods rol and hlt mov jnp xchg iret cmp add add add add fcmovb mov arpl xor inc dec (bad) pop dec insb sahf jbe dec or ljmp mov or mov js xlat std out dec adc insb aas jne sub mov ficoml jne xor xor and push outsb push mov adc jo mov push mov aas sbb mov repnz add cmp sbb dec pop xchg mov sub dec push xor xor push jmp data16 imul add dec pop mov mov cmc cmp insb ss pop arpl sub test sti pop (bad) sbb dec mov call lea rclb nop push cs lods aas jb leave sahf je mov in leave cwtl inc pop xor and xor popl cmp stc and paddw inc test pop icebp cmp push in shll sbb repz popf imul pop sbb int jge inc xchg orl lods jp inc (bad) or jmp add push push inc in stos push add or out push mov xchg popf (bad) popf mov and and das adc sarl lcall fcmovnb pop into ds and jl sahf add cltd out in sub sub adc fmulp mov (bad) js (bad) fild ss jo clc lds pop pop xchg jb dec test inc sbbl adc adc test jle,pn push test push je add or stos mov cmp leave add fs loopne icebp repnz cmp incb xchg aad jae out rcr hlt inc dec inc lock dec pop jmp adc sub and fsubr add mov vandnpd lods push test cs xchg icebp popf or add call ljmp mov test add clc aam jl ja jnp stos dec mov ja ja popf mov inc dec (bad) sub test pop adc aaa into rorl jae fstl cmpsl fwait je stc add add add mov adc jge xor test dec (bad) not ficomp arpl in das dec getsec lds cli es fdivr dec loope hlt inc xlat (bad) scas aam push add and (bad) aaa and cmp es or mull (bad) lods lock and (bad) jl repnz sub call pop movsl inc dec jbe in jb or sbb dec mov aas dec in sub addr16 ret or pop add mov dec pop push rcrb jle (bad) into xor adc add add add add adc mov sahf iret mov pop out adc sub or sub clc adc in ss push inc sti and xor sub and iret jg push sti add enter aas or adc adc jmp lock xchg sar lods xor adc data16 inc mov xchg das dec sub repnz ficompl push push fidivl and mov (bad) jne loop (bad) bound ret jns lcall arpl les out loopne add add add add (bad) repnz mov or test lds mov ljmp shrl or ljmp enter jb je roll mov fsts adc fsubl adc shll fwait cs lret add pop lods out xor incb dec (bad) lock or daa jge cltd jae test pop sbb or inc ds pop roll pop xchg add push sub jno xor scas dec lcall jb fiadd add add add mov mov mov mov pop or repnz cltd sub scas (bad) popa aas (bad) in incb je (bad) cmp in in sbb or imulb ss mov sbb push jle pop sub (bad) out lds jge sbb mov das data16 (bad) pop mov pushf inc inc xchg mov adc jecxz xchg inc sarb fiaddl lret movsb adc imul inc push or push jl clc or or icebp je sub ja jo ss jl jle lea cmp and add add add add xchg cli push mov mov into cmp call mov imul push in dec mov insl add adc (bad) in or xor jnp xor push leave scas cli lcall fisttpll daa pop stos lea movsl ds mov popf lahf repz or ds xor mov pop dec fistpl cmpsl lcall xchg inc ret jle mov dec std sub pop ja daa cld jnp (bad) or add add add sahf cltd test jp adc out push jecxz push ret les push mov fstpl inc cwtl jl ds enter sti jge ljmp stos bound aaa dec loop sti cmpsl enter mov mov les inc dec cmpsb negb leave (bad) (bad) shll arpl iret cmp test lahf xchg and jo push jecxz (bad) clc inc mov stos stc ds sub or in lods jge popa popa clc cmc sbbl scas mov mov cmp jge scas popf jecxz sub push jb hlt (bad) mov cmp test or cmp ds mov sub inc push push sub jecxz cmp je inc outsl loope mov mov xor dec cli adcl inc jae push cltd sub aaa inc pop in push gs mov pop jnp rcrb and daa mov jb inc cld lret add cmp pop xchg inc pusha pxor cmp xchg hlt jnp mov scas aam xor repnz aas test loope or jl sahf call xchg aam cmpsl adc dec mov lods cs adcl insl scas pop dec aaa sub sub jmp add mov push xchg dec incb inc mov repnz lahf mov out add cmp inc dec enter punpckhwd push adc xor fsubp rcl cmp imul jl add adc adc lea fcoml fisttp xor movsl sbb add test js adc add ljmp adc dec dec sti cs push ret stc aam cmp scas push push out mov ja int3 lcall rcr imull das inc mov pop pop fldt push jb stos mov iret lret push fcoms sub inc popa mov xlat leave fcomip rol test pop clc mov mov hlt push cmp sarl cs push push dec sub and add mov lds mov (bad) xor and pop std gs nop mov mov (bad) stos lahf (bad) xlat nop aad std fs pop mov push cld shlb aas pop bound lcall push sbb call into loopne sarb icebp or aam cmp jnp lahf out pop pop add enter xchg mov pop loop stos mov ljmp mov lahf ret jg pusha in push rclb daa fiadd les jo inc push bnd adc xlat test orb push and out sarl xchg repnz add lods sbb mov or test (bad) inc xor int data16 sbb (bad) adc fcompl push jo fcompl cmp or or mov xchg jo push adc inc cltd movsl adc cmp sub mov cmp fidivr aas outsl aaa in lods lcall js or shlb or test out inc int and daa scas hlt fwait or jg or or insb jp jae jnp xor (bad) mov sbb mov mov add add pushf pop pop iret imul bound sub cmp in push jecxz push mov inc cmp adc and push aaa and dec sub dec or notl xchg add or into aaa jns xchg leave xor xlat mov jnp sbb mov mov inc inc (bad) stc xchg inc ljmp xchg bound sub arpl pusha push in rcrl rolb pop int3 ss lret loopne bound lods es push and (bad) xchg bound out add add add jle out inc dec mov inc stos cmp push inc mov jg sbb xlat xchg push inc jle xchg or jp,pt fnstenv test (bad) ja jne mov sahf sub sbb mov in mov push aaa lcall jge mov adc in sbb cmp pop jl fildl inc xchg sbb mov and sbb adc outsb ret sbb popf fnop pop out cmp sbb ss icebp test add add add xchg adc pop mov ret xchg adcl xor (bad) fsubrs push int3 je pusha outsl sbb xchg adc dec dec test xchg xchg fildl les xlat shl sub mov sub xchg jp pop xchg pop pop sahf loopne sbbl fldenv cmp xor push nop imul pop cmp loopne dec or mov fs adc neg mov mov fdivrs insb fistpl pop leave cmpsl dec add cmp add call mov push mov or pop mov hlt mov test inc sub xor (bad) sub jecxz mov out inc sub jo mov cmc std cwtl scas in adc cmp iret int inc test mov lahf dec mov dec call loop mov jne in js stos adcl (bad) adc stos gs pop leave cmp lcall xchg mov into sub pop mov xchg pop inc ret js cltd fsubr mov add add add movsb fcomip mov or negl pop push loopne fisttp hlt pushfw add mov movsl mov stc (bad) out xlat pop jp sbb dec fstl lret inc push xor iret aas and sbb sub int3 out inc xchg out lods arpl mov or adc aam mov push mov xchg popf push aam mov fwait loope inc fbstp push mov sub jl push pop test imul cmpsb movsl adc mov in cltd pop les stos cmpsl enter fadds add add sbb gs shrl fdivl sub aaa imul repnz pop movsb fldcw popa imul mov add addr16 lods std stc and adc dec imull xchg ficoml jns lds mov cmp push push xchg aad sub clc push push les rcrl (bad) cwtl xchg popa sub lahf fmul xlat insb imul in ret jge push lahf lahf jae or popf add add add add add push or add sub loopne mov add mov lret pop lret mov mov push adc icebp loopne sbb or push mov jno sub (bad) cmpsl lock xor pusha jo cli maskmovq notl lahf ds and lret or ljmp daa and repz mov cmp sti jecxz adc or pop dec inc mov clc popf or mov mov leave jne sbb add cli cmp stos ror lahf jg push inc (bad) xlat and out je (bad) sub add add add add (bad) dec pop cmp cmc mov icebp dec xchg int arpl jne ja cltd xor xor clc xchg repz inc adc sbb stos fdivl ds sub ds (bad) call mov jle lret and push arpl imul out mov mov jo xor scas std adc cmp aas bound test xchg pop dec das fistpl fstpl jmp xchg xor lcall jb and add add add loopne sbb idivb push xchg fidivr ss mov xchg rcll jbe sahf cltd xor sbb adc fisttpll fidivl inc cwtl mov mov in xor dec das mov or pop daa mov aam cmp pop gs in mov hlt xor (bad) out scas loope mov adc out or cwtl push out stc ret xchg notb lcall sbb jg pushf xchg jne sub fcoms cli xor rol add rcr ss testl dec inc dec pop sysexit mov mov dec sbb and insl aas (bad) xlat sahf adc cmc out push cmp out out (bad) scas mov mov push bound repz mull out lods inc imul outsb jge or call (bad) pushf dec jp or fstpl jns sub fistl jmp popa outsl xchg fwait ret rclb call mov (bad) jbe sbb add add add add lret popa jbe xor dec cs dec mov std pop mov testb or mov inc xor in arpl ret push add mov inc mov cltd or lock adc push jmp leave enter std rolb mov mov enter loope add sub rorl xlat mov leave pop push xor add cmp xor in push push cld ss push int3 movb imul or add sub xchg sub adc lret push clc jle dec cmpsl out sbb fcoms dec push dec sub dec jno iret jnp cwtd cltd xchg test leave cld and cwtl jns adc or or xchg movsb dec sub push inc inc cmc out ret adc in jle rolb pusha jo divb loop push cwtl pop test xchg std pop ret or or pusha repnz rclb xor repnz mov mov sbb sub add add or clc fild xlat lds jnp iret add jne jecxz or xchg aaa mov add in and add dec sub test dec adc in inc ljmp cmp jns nop xchg or sahf outsl xchg jns push je push out int into ret xchg push test iret mov lahf ss leave sarb outsl add push pop std ds push inc push outsb cmp lahf xor lcall aad xor add add add mov mov push and dec push scas inc shlb lods incl mov addb adc pushf aad dec in mov jl sub xor mov sub ret xchg or cltd stos jo repnz push or out icebp mov andl in cmp pop and les cmc hlt sti cli imul movsl cltd and jp aad and in lods pop in mov fmuls rcl arpl jnp xor ror aaa mov movl mov mov gs cmc jae add add jnp jg mov (bad) dec adc imul mov sub push fs andb or inc add xchg hlt dec pop loopne mov inc popa or pop insl sbb (bad) je std sub in xchg mov outsl je adcb mov ret add xlat into lods dec popa test shrb test jmp or rorb test mov ret mov add jne adc sub dec das cmp mov sahf or add lods mov insl inc out or jle xchg dec sbb hlt xchg outsl loopne loopne adc push xchg hlt lock js insb mov (bad) or lock push adc imull xlat mov out rol cmpsb js andl (bad) lods adc (bad) scas inc movsb mov mov mov cmp mov aas mov or std cwtl fidivrl lods jae out nop rolb add add add pop jecxz mov mov (bad) mov insl cmp sub xchg mov test xor (bad) cmp dec mov sbb shll jl dec sbb or sbb pop cmp pop push icebp xchg dec xor leave mov iret das test mov fild lods out inc jo mov aam test (bad) mov sahf adc pop int3 (bad) rep lcall jae cwtl inc arpl pop or call inc adc xchg fistpl stos xlat inc dec dec cli fs add add add add je (bad) ds adc adc loopne xlat cwtl fdiv xchg sub aad icebp push pop in mov notb and jp inc mov clc sub add fstl xchg or xor xchg inc or mov mov sti adc pop mov pop sub cltd push pop cmp cwtl sub shrb outsl mov (bad) movsb inc push sub inc pop jb add inc in test cltd push mov lret cld insl nop movsb mull js sbb fnstenv xchg add add add cwtl dec dec sub push mov (bad) xchg loopne mov sahf in (bad) lcall cmp lods mov mov sub xchg pop aas scas jecxz aam jo mov mov das jmp sarb xchg mov rorl ss (bad) hlt mov popf sub xor mov pop pop stos jecxz enter ja aaa mov sbb loope fnsave push sub es fwait test xchg into sub lahf (bad) lds push cmpsb mov dec loope adc add sub movsl sbb fistl push lea jo mov dec dec in imulb repz (bad) idivl sub add push mov stos daa xor jge idiv in sub mov and dec xchg mov or addr16 dec cld scas (bad) xor ror lock mov cmc pop mov hlt imul mov dec xor jmp or sahf (bad) mov or fld adc lsl cmp test cmp add add add xchg (bad) lcall sub add cwtl setbe inc inc sti or rorb stos dec rclb fwait xchg popa pop addr16 psubusb imul pop cs jb adc mov ret (bad) mov movsl push mov dec pop (bad) scas jmp cltd dec jecxz pop insb test adc cmp ror aaa sub or (bad) or and add mov (bad) loop aam push mov cmp push sub fnstcw jecxz lds sar pop push scas cld fld push and pop push dec test data16 adc stc outsb call mov mov mov or inc (bad) jb xchg mov jnp fimull mov out sub push push xchg adc (bad) jo test mov xlat mov mov ljmp xchg ss sbb xor sbb inc ja in add (bad) xor daa stc add dec (bad) pop push dec cwtl fstp outsl mov jp inc jns add add jo pop xchg popa mov adc dec mov loope iret mov and in es cld pop push lds xchg xchg cmp inc sbb add add push test pop in jne or notb dec pop adc xor pushf xchg js (bad) pushf adc jb bnd mov xor xchg jb ljmp aam cmp imul jmp push aam jge cltd mov aas and mov add add pop test mov mov add add add fiadd pusha data16 jl jbe cmpsb loopne scas and test outsb jmp test add sub imul bound icebp xchg pop sbb pop inc (bad) push and pop mov flds add loop pop movsb xchg cmpsb test loop fs das or icebp mov push loopne popf popa lods jle mov psubq fbstp mov cwtl fcoms ss mov pop scas push les mov push imul clc jp fstpl lods fldenv jmp out xor adc icebp adc pop (bad) push add mov cmc xor mov out adc push testl inc out call adc dec dec (bad) mov outsb sysexit int3 push pop inc sub mov hlt mov xchg sub sbb sub pop xor add sbbb pop jbe dec pop push dec cmp or pop cmp hlt jl in mov popa jo cmp les cmpl cltd push dec into loopne xchg imul add add mov sbb and fnstsw call cmp nop ds aam std pusha loope push aas (bad) or or mov repnz loopne fldenv popa in inc push mov sub gs idivb sbbb mov pop adc rcll push add adc mov cld aad or (bad) and or aam in (bad) add flds loop nop lret jle arpl or jge push das dec stc and cmp add add fimul ficoml mov movsl push adc into popa out lahf xchg mov dec mov and xor mov jns or xchg pcmpeqw popa xchg pop xchg xchg sahf xchg aam mov push loop movups pop movsl je jmp lret sbb (bad) mov out cmpsl mov or mov adc shlb pop ret mov fist xchg (bad) jae shr add pop sbb (bad) jl fcmovne dec cs insb pop jnp inc pop pop jl sub hlt dec add add sbb loope ljmp dec int enter out stos icebp cwtl fidivl repz jg (bad) mov jns test push jg,pn xchg inc fwait cltd or lods call popa or clc cwtl outsl mov ljmp xchg jbe (bad) sub dec inc push ret (bad) outsl rorb xchg sti adc jo bnd out mov sub xchg xchg pop mov xor cmpl jp lret (bad) cmp lcall add add xlat pop xlat xchg xor lea adc pop stos push pop jb dec aam dec shl lret outsb xchg push cmp jae fisttpl into pusha popa mov popa rorl cmp js or mov sti mov in out (bad) xlat push (bad) push inc aam pop lret in mov and lret sar mov lcall lret adc arpl (bad) fistpll test mov stos int mov add add xchg stc inc and inc push mull inc add imul add add push dec sti out rcrl mov pop mov nop test idiv stc pmaddwd add pop cs xchg nop popf imul stos jno pop (bad) sub mov dec sub sbb (bad) and or dec aas loope adc mov gs gs or xor add jecxz leave cmp pop push ss insl inc outsb mov lea push repz int mov xor add xchg inc jmp call out mov push jnp mov dec mov jo ss xchg mov aad icebp pop ret gs add mov mov cmpsb in test lods fsubl (bad) out pop popl dec mov loop sub (bad) push sub sbb repz mov (bad) (bad) ljmp or sbb adc into pop or mov sub aaa push pop stos rcrl iret sbb dec in sti sub jbe add push add add add adc jge mov inc fisub ud2 pop loop mov and jl push sarb scas jecxz dec cltd (bad) mov imul fcoms inc cmp test lcall mov test xchg int loopne and nop jnp rcll rcll insl cmc movsb jbe push cmp inc and das or insb mov mov mov cmp in add mov adc xor dec mul pop aas scas fsubs cmpl add add add icebp lret cmpsb mov push popa ret dec mov stc mov sub out xchg adc jge fsubs ljmp ds sbb inc test mov mov mov xor lahf sbb icebp lcall mov or lods cmp popf push fmuls and add insb dec jle push xor cmp hlt mov mov push cmc dec fildll inc jb pop mov push or lahf insl sbb add movsb mov dec mov push sbb je adc lock xor jl pop add xchg dec mov add (bad) icebp mov dec fbld cmp sbb cmp mov cmp add mov in insl aad test cmp sarl es pop mov movsb mov and pop out call push lahf int and xchg lea mov xor out fstl dec inc in push imul mov cmp add add add push in loop mov cmp mov mov js jecxz push fadd push mov dec dec pop stos inc sets popf jno shl aam xchg sub or and addr16 or inc daa lock cmp lds and (bad) sbb (bad) je rcrb sub mov jmp push (bad) out stos jecxz sbb xchg (bad) mov fadd mov jmp outsb call jnp sahf ret add xor mov add (bad) cmpsb cmp jp sbb push or (bad) or add pushf jmp (bad) sahf gs stos sbb imul mulb sub ljmp out or dec cmp pop test scas xchg and ljmp in mov lea sahf cmpsb mov shr pop mov test inc mov gs mov std jnp insb jge mov pop mov lret xlat mov sbb mov jmp addr16 loop movsl mov add add add mov adc sub hlt sahf jmpw xchg sti sub push scas out sbb mov pop aam xchg adc or data16 lret mov adc pusha ss jl mov xor add xor mov xor xor sahf add mov inc mov mov outsb mov daa xor or pop xchg fimull in adc add jno and pop pop mov push add pusha mov mov add add add add (bad) cmc das sbb inc mov les and dec mov sbb jge test mov xor push push adc rcrb (bad) cs adc or loopne jb xchg push ret rcrl nop mov ds or pop mov rcr divl xchg and cmpsb or add jmp sub sbb xor adc cs adc cmp or jbe aad mov mov out sub outsb dec dec cltd add add add fldcw into sbb aas sahf stos pop mov inc sub ljmp lret jae test xor enter out bound cmp xchg scas inc not cs popa in add and pop add (bad) call loop unpckhps lea lcall dec test in dec cmc mov dec cld cmpsb lea mov bound in pop add cmp call fwait (bad) mov clc pop jb lahf jae lret jns pop jle mov fwait dec in fild add add add push or inc pop cmp and cs mov lcall loopne nop mov pop nop enter cwtl repnz push lahf and jmp xor xor xor icebp cmp xor mov ret xchg out sti xor sub or sub in jno repnz xor xor mov jmp jne test mov xor in pop pop dec push mov (bad) daa scas sbb (bad) xchg pushf (bad) ror sub sbb add add add add mov pop inc divl xchg xor sbb or pop xor jbe outsl fisubr add sbb mov and xor cs dec adc adc cwtl pop sahf mov fist fiadd push xchg xor aas addr16 mov pop orps push int3 imul jne push repnz and subl cmp and cltd jg leave lods jecxz in sbb les enter iret imul je sub in pop mov and mov sbb fdivrs xchg and add mov add pusha adc lahf rcrl push pop add xor mov rorb movsb aad ret insl mov inc fwait scas call rorl xor xor xor cmp xor and repz and (bad) mov mull push dec bound stos shrb add or aaa enter imul fimull adc int arpl loop out jmp push xor arpl pop std dec adc cmp inc shr mov daa jns cmpsl xor fldenv insb repnz add add mov (bad) cmp into adc dec mov mov xchg (bad) frstpm(287 pop sub fistl add cmp aaa ljmp test movzwl mov mov inc jl push mov xchg xor shll xor scas xor out jmp lcall sahf inc fwait inc ljmp cmpsl mov cmp js or xchg xchg xor push jb sbb push adc inc fwait divl into out xchg jmp add xchg insb xchg nop movsl fnstcw push jo mov push mov jnp mov and incl cltd outsl jns jecxz enter vmread stos cs sbb add xchg push mov push insb cmp jnp pop push mov or imul clc pusha jle aas fwait inc imul sbb jne ljmp pop pop push movsb inc andl enter dec dec outsl sbb sub dec stc jle push mov clc int jecxz and inc loopne xor (bad) inc add roll out sbb test jge cld lods jp lahf add or (bad) or fcompl push xlat enter out out (bad) dec add mov sahf clc dec add frstor rcr cs movsl jg push fstpl and sub jb add mulb or sbb mov sub rolb nop push mov mov data16 inc fild mov mov jo jae jge dec out cmp xor jns mov push (bad) mov inc xorl inc je lahf jl rcrl lcall pop sbb jecxz xor mov js inc mov lret xchg xchg and cmc dec (bad) testb cs pop jg sbb lret push add pop pop incb (bad) cld adc stos stos adc pop xor and int3 arpl clc add cmp mov data16 push cmp push dec test inc add mov mov add pop mov int3 mov xor mov xchg lea add add add add mov push jmp jmp imul subl lea push mov js push cmp sub sbb xchg cmp std inc aad addr16 aad cltd mov add jge in bound cmc in push stos cmp inc xchg sarb or mov pop xchg xchg mov notl mov aaa dec mov xlat and mov push scas cltd xchg jge mov test stos mov xor or push (bad) and scas in jne decl add adc add sbbl jb (bad) dec pcmpgtd inc xchg ja ss xchg jmp fwait push aas and out jp fisttp lahf ret fiadd xchg and es pop imul shl fild in daa imul push inc mov mov sarb pop mov pop adc sub xor jl and push in lret sar mov adc dec or push fistp es inc jmp or push and outsb sahf ss leave lods inc pop ret jl xor add add add add cmp xchg sbb lcall xchg fdivrl cmpsb xchg movsl in out adcl sbb lcall hlt in pop ret js xchg dec sbb jbe loopne jle push aam mov popf add jge pop das xor dec scas insb subb sarl test mov (bad) jo and test adc lea ljmp jmp sbb lahf inc or mov mov adc loopne loop pop ficompl push addl add add add add sbb daa push pop pop test mov xchg shr (bad) sbbl pop pmaxsw std jge jecxz fstl shrl imulb mov push sub mov data16 push popa out xor ja mov mov pop inc xchg sti add jns not mov fnsave lods jno add pushf out ret mov gs or ror cmp mov jae push nop cli push ss sbb gs lds jle and loop loopne dec push loope push ret add pushf scas sbb cmp test mov int ret cmp fwait (bad) icebp pop push and sbb xchg jmp pop and mov xor in dec mov inc inc pushf jns insb ficoml ret sub outsb mov scas std cmp subl repz shlb cmp and adc xchg shr and stos mov inc jmp adc pop std xor jmp or mov adc and adc add pop inc cltd das pop addl popa pop jmp in insl mov add add add add gs lea pop in jle rolb stc jp mov outsb enter (bad) cmp adc ror pop mov mov dec in jg or cwtl xrelease push cmp call mov cmpsb jmp addr16 popf mov lock sub rclb mov mov add mov push leave imul adc test pop leave out dec sbb std sbbl mov loope push pushl pop sub inc sbb cltd lock out daa (bad) dec pop in out sub int3 insl push jp push gs mov mov inc aad xchg push sbb rcrb sub push repz test hlt stc arpl xor jne and cmp into cwtl mov mov mov nop sbb dec mov cmp int and mov inc push inc pop je and mov sbb push pop or test and add pop test xchg stc movsl jb cmp fmuls push loop cmp add add add mov sbb xchg push jg push cwtl cmp std jnp aad mov call sbb addr16 cmp pusha lahf rorl loope xor nop andl clc or std adc clc ret pop ja cmp mov cmpb or aaa sub movsl movsb out sub pop mov (bad) movl cmpsb sub or pusha cmp rcr jo fisubl mov mov (bad) loop mov sbb fidivl add add add add add test push enter shlb and push hlt jp icebp stc dec cmp (bad) enter or ret repz int faddl add push aaa (bad) aam cmp jl and pop mov test pop and or mov imul sahf xchg popl push hlt push sti rcrl out cmpsb jae icebp aam adc loopne jmp push push mov sti loope add push gs repz js cmpsl out jge inc (bad) (bad) into inc out fstl pop lods and pop jb mov push mov sub fstps fnstsw dec xchg scas jl aas inc mov subl xchg jmp dec xchg aad add sbb loop test xchg bound dec xor xor in lds or jmp xor push add incb jne mov das jns sub pop xchg loop inc xor sar cmp pusha repnz gs mov adc cmpsb adc sbb cmp add push dec adc hlt inc add add add fyl2x jle aam adc dec cmp cltd dec push sub jp cld popf imul jo mov inc sti cmc push fs mov push fimull or dec cmp in aad test sub sbb lea out std (bad) in (bad) jl xchg mov mov sti not mov test mov imul loop lock dec fwait xor (bad) or sub lret sub adc pop imul sbb sbb dec add add add add adc and xchg ret sbb push js mov nop fsubrl fwait andb cmp jb mov pusha add adc pusha push dec dec stos jmp cs popa push nop sbb inc and xchg jae data16 inc xor fs pop scas (bad) sub or cmp mov and inc add xor fist test (bad) mov rorl sbb pop xchg push mov push mov adc add pop mov add add add add push aad scas pushf sbb xor cmp mov insl popa cmp add jns mov loop dec pop mov rcrb mov mov nop cmp lahf adc lock std xchg or (bad) pop mov sbb dec inc mov movsb dec dec push add jo dec adc lret cmpsl (bad) jge aam pop mov adc leave xor out mov jbe test popf fiaddl add test mov add add add add or sti mov sbb mov insb fist fwait les into dec cmc rorb mov jno nop mov bound mov daa push cmp movsb or mov jl je mov jg sbb mov lods mov mov popa jl repnz (bad) and and push movsb pop mov fldt dec movaps into arpl icebp cmp imull mov (bad) mov pop lds iret cmp loop cld leave mov and in (bad) push arpl add add add add arpl mov or test stc pop lock push inc push ror je outsb aas ja jns cmp jb out inc daa cld stos jp comiss daa mov push in adcb scas pop out push fstpt push loopne mov jmp (bad) (bad) (bad) shll rcl arpl push pop insb imul std add je fimul je pop lods pop jns or mov xor test push pop xchg stos xchg or push cmp mov (bad) hlt xchg push jl xchg pusha (bad) jl sub in ja movsl daa imul or (bad) js (bad) fnstcw push lods cmp mov adc mov scas aad or (bad) or mov sub scas push sub and sbb mov (bad) adc fcmovnb daa out sub pop jbe shlb mov and movsl jge out int or aaa bound sti pop xlat cmp mov jb add pushf fcmovu push and mov daa add add add add negb enter or lahf jmp stos add insl xor sar cwtl push sub fidivr addr16 mov js xchg (bad) loop arpl push sarb sti ret and daa sarl adc jge sbb ljmp repz (bad) xchg fstpl in xchg jne (bad) jge int adc fs fs scas outsb add ss cmp cmpsl push pop bound out rorb sahf xor and inc add add add add mov cmp sbb stos mov jns and (bad) enter sub (bad) xor xor adcl push mov dec cmp arpl aam out adc mov test mov mov fwait cmp mov jb scas xor or sbb mov inc movsl hlt data16 ficoml lcall xchg jnp popa push sbb in mov inc jno pop ds add add add add out sti inc dec push adc lcall add mov mov (bad) daa icebp add adc jbe mov dec push fs mov adc fsubrl adc cmp rcr cmp and jecxz xchg fidivrl push inc cmp mov push inc test push push mov mov add pop dec push scas bnd cltd inc inc dec fcomps jne test xor lock or push sarl outsl movsl adc roll test cmp add add (bad) movsl mov add fld or push stc repnz cmc roll sub mov cmp shr jg jl bound notl loopne call lods cltd sbb pop dec nop aas xchg loop mov mov dec cld push cs roll ja adc jle inc push lods inc fidivr mov mov jns xor data16 in mov add xchg push mov dec mov fcmove inc rorb call ret jns cmp testl and adc in push jno cltd in lds iret mov dec scas add or push addr16 (bad) add pop nop adc sub mov ror fnstcw ret jmp mov dec pop and jmp and adc sub lcall idivl cld lods jno lock js xor ja loope xchg fadds inc sbb xchg xor push loope xlat jmp inc push xor jno test pop jnp add mov lds addr16 or sub call enter pop mov sti jmp dec add out jns cmc mov pushf cmc add mov jb jle movsl sarb in aad movsl fnsave pop into mov pop add inc push out jbe (bad) jns orl (bad) mulb push mov pop (bad) jmp scas adc add (bad) jo pop decb adc inc adc and es shll paddb fwait mov push popf jo mov xchg cmpsl xchg add add add push sub dec adc ret inc jne iret ja push loope and push xchg jge scas jns mov pop mov push jns leave xchg into les call jge pop sbb dec ja xor dec jle data16 push out mov lods xor jb popf bound dec test iret sub push rclb mov mov add ss push (bad) mov ja cmp cmp cmp and sub adc stos loop mov dec imul mov (bad) daa jb out push or testb repz fcoms push push in in test movsb inc pop (bad) dec lret push sbb mov lods lahf into adc mov pop cmp or ds push rolb inc (bad) movsl cmc pushf sti ret sub pop mov iret inc rcl jg fldenv sar (bad) scas mov push imul lods inc lahf sbb fcmovnu inc sahf (bad) mov mov ret mov insb inc in ja add add add add xor lret lea jno cmpl mov push mov test pop movsb mov enter orb pop mov daa cmpsl inc call add and hlt loop dec inc or or nop (bad) in xchg stc sbb loopne push mov and sbb les xor mov lcall mov repz lahf pushf or int3 inc fiadd mov mov add jge xchg jbe sbb repnz add add add xor push mov push movq push fwait std cmovae add (bad) mov cwtl add nop sti das ljmp add or dec call xchg xor mov adc lods push loopne push cli push xor mov ljmp rcrl test inc ss lret enter mov or pop stos test xor sarl scas dec icebp push sti sbb mov aas xchg packsswb mov pop test jns pushf imul add add pop jecxz push xchg fwait inc fwait negl sbb scas or jae loope adc xor fs out dec sarb lret xor mov mulb cli stos mov stc aam adc and ret enter dec aam and repnz lods imul es cmp outsb test cmpl daa imulb enter enter xor jl addb out js out mov mov (bad) clc bound cli sub inc fist sub mov test push add add enter stc nop outsl xor pop mov mov stos setge push pop jno mov pop jle fsubl or jp in fs push push leave xor out lahf mov and fmuls cmp jo dec mov mov loop js stos xchg add cld jo (bad) stos (bad) outsl cmp enter call (bad) pusha jmp xchg in lods add cli pop test mov out xor cli lcall rorl sub xor je insb mov cmp fnsave aam add add add add sbb mov in std add dec push shrl fstpt cmp leave xlat dec mov inc and mov inc popa push shr jle pop mov cmp insb cmp cmp xchg push xor jle btc lods popf movsb (bad) mov dec inc (bad) mul popa jae cmp lods push push push in adc (bad) dec and pop inc (bad) test pushf xchg add in addr16 stos fs dec sti test inc pop push dec push mov inc mulb xchg addl add add mov and jo std jecxz lea cmp xchg ds fsts xor mull scas rorl push mov lea nop inc add mov jmp out in divb in dec jge std mov xchg stc mov cwtl aas call push test out cs pop adc mov xchg movsl scas pop jns bnd xlat xor into in aam and lods lods and and dec jecxz mov add pop and add add add sti shr dec leave test loop sbb mov xor or ja mov out mov ror mov (bad) and aam xchg pushf int sub in repz lea test xchg fnstsw (bad) push fstps scas mov mov pop movsb imul idivl aad (bad) in mov leave mov mov repnz stc cwtl xor inc mov adc pop mov icebp xchg rcrb pop inc push add add add add mov push (bad) adc xchg stos add sub mov stos gs pop test dec lea outsb xchg push lds jp and popa cmpsb cmpsl imul xor scas lods (bad) fisttpl imul aam into add in xchg rep lret inc ret adc xor or xor fldenv mov (bad) push push in jge push adc cmp xor mov push cmc jno jge das and in es mov rcll or add add sbb popa dec in push cwtl and (bad) repz fstpl mov jge cltd or inc cmp lea or adc hlt movsl hlt test movsl inc cli (bad) pop mov notl addl enter push add fwait jbe jb or insb mov movsl push mov rcl cmpsl les fisubr into cmpl rclb fcompl push push push in std dec sbb cs jne adc stos push lods mov int js and jle add add push or jbe sub mov fisttp lods jae adc js lods push mov adc js je mov add pop std idivb fiaddl add or jno in in adc inc or cmp (bad) mov mov xchg adc mov xchg sbb dec test jge or and mov pop insb add icebp jp pushf push mov or xor in ret xchg cmp test inc ret enter mov or push pop inc addr16 lock add add add hlt aas push fistpl fild dec cmp stos jo inc scas mov mov jecxz pop add jp adc mov scas dec mov add out mov and xor std inc fisttpll jmp nop in (bad) fstp ss and pop icebp lcall jns adc lods jne insb insl outsl push dec xchg ret cmp mov cmp push mov pop xchg cwtl jp sarb sbb (bad) mov outsl mov out dec adc (bad) adc out pop push add enter data16 jo xor leave sub lock (bad) (bad) fwait nop cmpsb rolb test andb and and mov bound out mov jo and push push mov inc pop cmpsl jmp pusha mov into push aad popf add and push push popf mov jmp xchg pop or ret sbb fildll faddp sub sarb jns adc jb es scas pusha xor scas xor sbb flds mov test add add add inc call (bad) pop xor cmpl decl popa or int3 mov add mov pusha pop into sbb lods pushf jmp adc pop sti pop inc mov pop cltd xchg push sbb mov mov push cmp (bad) adc push call mov and cli mov push add inc sbbl cs dec dec test fisubrl fisttpll fisttp sub mov jle push jecxz shrb pop jo movsb nop adcb (bad) add pop stos cmp das (bad) jne fwait aas mov xor dec lea popa jns ficoml aad icebp fisubr je cmp mov aaa push xor fistpl fisttpll push jns scas mov stc fwait jno ficomp cmp fwait stos mov das jb lods xchg out daa push or xchg sub dec fwait lcall mov jno xchg roll movsl pop lret fdivs cmp addr16 pushl js mov pop stos push pop repz lret call pop popf or add add add popa push stos das xchg gs fs mov adc in sahf movsb in icebp rorb mov inc test mov rcl xchg cmp cli mov pop aam cltd xchg push add cs sbb xchg loop jle (bad) xchg lcall jno mov pusha inc ret xor xchg mov fistl mov inc pop mov or sti in ret (bad) xorl cmc inc sbb dec sti inc dec xor rclb stos or aad rclb repnz data16 scas (bad) dec dec ret test into jae ss sahf and cltd jns popa and cmp mov movsl imul test pop int3 out ss stos je daa pop enter fadd mov mov jmp sub repnz cmp add xchg pop push sub sub mov add add (bad) dec push and and js hlt pop add adc adc pop mov add add add mov sub xchg les pop pop popa mov add hlt mov fsubrl push jnp clc sti insl xchg push jno cs pop adc mov or fs loope fcmovnu mov popa mov push cltd xchg jns xor sbb into fimull fnstcw sub sbb and jg or fdivr pop repnz (bad) xchg sbb lods cmpsl outsb setae jmp sbbb out dec fldl (bad) pinsrw fistl push cld sahf xchg xchg ss push repnz rorl out inc enter xorb mov xchg push cmp out xor (bad) les jl xor mov xor pop sbb xor outsl leave mov lcall loop mov xor dec js in ljmp or adc sbb add aas or jnp and jle xacquire or xchg pop (bad) in jle (bad) and add add rorb test xor leave or xor pop aas push cmpsl dec lea or adc jb pop fsubs jmp or cmp mov (bad) mov mov popl mov and fcompl pop lock push stc repz push movsb jl pop gs push sbb repnz jmp cmp and addr16 sbb mov xor imul sbb lcall pop and mov add add add adc dec arpl add adc xor cmp add fwait rcr or jbe std cmc movsb outsb das dec pop mov sbb (bad) int3 xor jg mov subl (bad) jno pop test sbb sbb xchg push fmul popf addb and and jne shr sub xchg sub or push dec cwtl inc enter jmp push pop stos dec outsb andb mov in js mov adc les cmp insl cltd mov add jns imul outsb pop cwtl mov adc xchg js (bad) mov jnp ret push mov call cmp inc movswl cs aas sahf cld adc test adc sub cs mov xor mov shrl cmp jbe popa scas sub fsubrl cmp popf mov int3 imul lcall dec out xor or adc stos mov push dec scas cmpsl mov sahf mov or enter ljmp add add lock out (bad) mov (bad) push xor dec xchg iret mov sarl call in lcall loopne jle (bad) lahf sub sbb mov loopne test insb mov cmp ret mov xchg in inc adc xchg mov jns out and inc fwait mov adc push stc pop lcall in cmovge ljmp bound sub sub imul call push xor andl add add fildll idivb nop mov clc nop jns adc push jnp hlt dec jns push outsl xchg aad jno pop aaa out lret rcr add dec test sub jmp fs sar test fnop sbb sbb xor inc mov sbb test das fwait sub xlat bound (bad) mov adc or sbb fincstp push pop xchg insl jg lds mov add out push test jmp add add push push xchg pusha stc loope cltd mov add mov jne add sbb xchg imul out (bad) (bad) fcmovbe aaa sub or dec lret dec mov pop sub jecxz xor adc push add add das xchg lcall and stos adc push test fimull jns (bad) imul xchg cwtl fwait push imul inc outsl mov data16 sub adc add add sub arpl fadds outsb mov xor loopne (bad) mov and movl mov lahf lock pop inc xchg inc xor jnp ja fdiv scas leave xor xchg jle xchg xlat mov cld arpl jecxz adc mov int add mov jae push jno dec fist push andl mov xor stc jb mov pop std das das dec scas xchg pushf dec pop in (bad) sti jecxz scas (bad) sub mov test out mov imul in cld test or add add add sbb (bad) xor mov je stos sub xor mov or lret cli lahf shrb lea dec (bad) in xchg daa clc mov les push pusha inc mov dec mov lods or fwait dec add in xchg mov mov lret int (bad) inc inc xchg loopne jae xor xchg fcompl lds mov sub sbb adc nop daa or add lock mov addr16 sldt add add xor bound push xor mov xchg or mov iret pop pushf sub int3 lods fcomps cmp add mov xchg sub and clc jb xor jae std enter cmp cmp inc pop mov outsl dec js or aad jo jp xor ror (bad) mov bound das mov xchg je inc lahf ja test mov and push out adc (bad) sub pcmpgtd je mov subl add add add cmp adc stos jb push ds loopne push lret inc or inc cmp cmp testb (bad) call insl js and cltd cmp or (bad) dec subl mov in scas in sbb into imul and adc sbbb shll push sub mov and les sbb mov lahf xlat xchg pop fisttpl lahf dec in in sub testb pushf inc xchg mov fiadd push jns imul adc pop sub or enter mov int3 mov mov add test cmp dec mov fidiv mov cmp (bad) call lahf iret cmp mov cmp dec jl je adc rorl sbb les arpl dec cld in inc (bad) aad lds mov inc xor pushf (bad) loop fisubrl lret test jo mov (bad) mov add pop or rolb pushf mov add leave leave jle lret test test nop (bad) jns and mov or dec test jp push xlat cmp fdiv pop loopne cmpsb mov aam and mov jecxz ret fdiv outsl jb mov (bad) movsb mov imul test in shrb push call mov pop pop es pop mov rcr add iret xchg fiaddl (bad) scas data16 pop jns fldl (bad) (bad) pop or scas sub cld movsb or mov add add dec sbb xor pushf inc adc imul jg aam push leave dec mov inc les ja mov mov pop sbb or std pop iret (bad) push xor or push mov jl dec sbb jns pop dec pushf mov rclb push or jns ds mov and xchg in pop fdivp int3 mov and dec cmp lods repnz xor je add ret add gs inc xor stos jns and fsubrs dec sbb add add outsb jp aas scas icebp jmp xor xorb popf call mov push adc lahf jne mov rorb xor and js lret fldl2t fistpll xchg and stc (bad) cli jae pop pusha mov cmp mov adc inc cmpsl mov push jbe scas add inc arpl dec loop jne fiadd and inc (bad) cli ficom mov jo xchg mov (bad) out cmp cmp dec mov dec leave sbb mov add add add icebp and and out cld dec dec pop movb jecxz outsl pop repz cmc test imul stc pop push cmp sub jns lret test add fs inc dec fsts xor adc add test fidivrl jne cs inc adc jg dec sbb pop xor es mov sarl push inc sub stos sub shrl lret jle push (bad) mov adc ja jno xor dec loop pop loop adc add into xchg ret xchg roll daa lcall in test mov (bad) daa add hlt bound rcl jle bound inc dec in sub sbb divl jl jle ljmp mov xor nop cld hlt out gs lods insl or rorl (bad) ss cltd pop es stos lcall pop int3 xchg xor std inc nop mov stos jbe mov cmp add jbe repz sub sub add add add pop mov adc cmpsb cmpsb popa ret push test dec (bad) jp sbb call out xchg aaa loop out cmp xchg xchg jnp cmc leave loop mov push sahf pop test nop xchg jmp sbb popf pushf mov dec jg aaa mov xor and lea dec jns inc scas arpl mov mov arpl fistl rorb mov sub lods dec out mov xchg rol ror dec add add add outsl enter and jg sti sub mov ret jecxz sbb sbb notl jp mov inc push or push (bad) (bad) mov dec out cmp mov push mov daa jne push je test (bad) sub inc cwtl jbe,pt mov std pop jne xchg jle mov ja add sar jl fs cmp aas mov int3 data16 xchg mov push clc sarb pop sbb fwait push (bad) je mov add add add add sub inc add dec dec imulb movsb ja mov sbb fiadd and mov jbe and dec cmp popf lret cmc in jae or jnp add jge lods loop aad sar pop jae sti nop hlt or adc in aas (bad) lock fisubl (bad) cmp inc cmp (bad) dec jmp cmpsl or xor call movsl shlb mov aas lods stos insl hlt pop leave lahf in sub sbb xor xchg stc mov (bad) mov mov stos nop dec add add add inc adc scas and jg or mov ljmp push negl cmp add pop (bad) xchg (bad) jle cmc sbb sbb fs stos fcomp mov cltd es cwtl fwait sub jae mov sbb xchg movnti loopne dec adc addl stos fdivl jg cmp dec adc xchg jbe addb ret jl leave call test pop add xchg cmpsl dec test bswap test inc movsb flds add add cmp out mov movsb inc (bad) shl out sub push dec iret inc jg in cmp inc and and arpl dec mov inc adc add push xor jg outsl xor or leave inc (bad) adc movl cmp xchg jbe ja cld sub jp push cltd rolb imul dec std inc dec and mov loopne adc push inc leave ja stc jb std jb mov jecxz push adc sub add add xor adc std mov or lea clc popa cli sbb shll pop int das movsb fwait adc es insb push insb inc rcll in pusha enter cmp pop lcall cwtl dec loope or gs shll mov in mov jge or mov cmp inc mov jg repz jmp xchg adc inc dec popf xchg sbb inc jmp jmp lret pop sbb fs aaa add shll mov mov add add add stos pop inc call in aam inc pop inc sbb test jbe mov scas jmp mov jmp lcall cs add in cltd pop lds pop fsubrl inc mov dec ds jp sbb inc (bad) cli dec xchg lea ffree mov js mov out pusha dec mov fld imul xor js lcall mov fs xlat adc pop bound fildll push outsb mov add add add add orl (bad) jo scas xlat mov dec and jmp dec jae xchg repz outsl or xor (bad) push hlt cs ret ja in pop cmp test imul or rclb leave adc mov inc push jg xchg sbb sbbb addr16 sbb jbe lock data16 cmp and in lret mov (bad) jo mov push jge andl loop orl pop test xchg inc in add xchg mov cmpsl jg fmulp add add add pop inc imul add stos jne dec mov fldt add cwtl add std mov sahf out stc cmp inc or mov inc movsl and mov pop xchg mov and stc xchg jl add xchg jp aas sub (bad) push xchg std fwait aam jb insl mov add pop jo cmp imul push sbb lods push hlt mov inc cmc mov shrb mov jle test cmp (bad) xor stos out (bad) fistp fs neg (bad) nop jmp add add add sti lods lcall add xor jmp ds sub pop adc mov jns add or jge xlat jns jg mov icebp ds popa dec xor mov fisubr mov fiaddl xchg mov arpl aam push insl xor cmpsl dec cltd dec push mov movsl (bad) sub or clc imul xchg fcomps xchg shlb and pop and sbb jo inc faddl mov add movsl jle es mov add add add adc sarl add sub stos dec lods push dec jle leave stos adc lcall add pop fsubl push add cmp popf add mov xchg jne pop std shrl shrl mov or dec push xor cmp or out and fwait mov jmp cli cwtl mov int3 inc cli mov mov std sub ds orl test setb bound inc movsb lds lret fwait sahf add ja xchg mov xchg loopne cltd call in or jl aam mov push inc jmp dec movsb pop lcall fwait je hlt and idivb xor mov jae das int inc xor push push je and ret inc push ret shlb push mov (bad) repz (bad) rcr nop iret fisubl and mov pop lds shrl (bad) cmp out je in (bad) mov add mov test daa jo push mov in (bad) (bad) xchg mov data16 add add (bad) lahf sbb lret push orb ret inc mov stc movsb repnz enter repnz ss jb mov lock mov insl bound stos xor xor push pop jne fnstcw cld sbb mov addr16 cmc mov push ret in cmc dec xor clc out movsb or (bad) rorb loope (bad) mov repnz in cmpsl and sbb cmp jne not mov sahf out sub hlt xor int3 (bad) enter or js push insl mov add add add stc test (bad) xor fildl pop inc lcall pop fcmovu dec (bad) pop pop mov mov sbb in mov test mov push enter jnp cmp jg aad mov ret and (bad) (bad) pop scas mov push sbb mov inc add insl mov shlb adc sub lods mov scas push rclb call daa lds jge mov add repnz and cmp xor jo push repz jb aaa pop jnp pop sbb int jmp pop add imul add bound mov fldenv arpl outsl dec sub lea xchg cmpsl test comiss test and pop sti cmpl fildll les (bad) dec repz inc aam add call fxch and fildll rolb jmp sbb pop les mov test dec gs push hlt int3 jnp inc sub add add add (bad) outsl push pop add adc in pop ffreep inc push dec gs sub mov and mov sarb jge in nop dec lods add cmp test lods cmp adc ret and shrl inc scas mov int3 mov push jno adc dec adc dec push sbb setns insl test cmp pusha sub dec add int mov pop pushf inc into mov nop dec insl mov cmpsl or add add leave push cmp repz fimul mov test jnp pop cld inc bound cmp notl cld dec mov mov andl add push xor (bad) jne loopne add sarb jae cmp jmp sbb loop push mov (bad) fcomi inc mov cmp sbb das test dec (bad) dec scas or sbbb or int3 dec add sbb adc dec or aas call add add add lods jb mov add jl ds and adc adc je scas (bad) mov stos (bad) cmp dec pop sbb mov cmp sysenter mov xor push mov xchg adc mov insb imul or or xor popf pop mov mov jle addr16 inc mov repz adc lret cli lods xchg insl gs fisttpll in mov addb mov jg pop mov popa cli and cmp add add add add mov movsl xchg push stos push ret test repz cmc das dec into pop call pop iret gs pop cmp mov stc add mov in xchg add das ror jp rol jnp and enter mov arpl or test inc in out test and mov mov inc out fsubl sbb insb push or dec xchg or sub in and sbb jae and pop jmp cmp fdivrl push push cli pop pop cltd or add mov ljmp jb mov int3 mov or sbb repnz pop (bad) call (bad) (bad) xor pusha cltd mov push int loop or push sahf lock mov ja cld rclb (bad) nop fs mov mov fwait pop xor dec inc mov pop icebp (bad) mov sub aam xor fild dec and scas loope icebp cwtl (bad) mov mov iret int mov push pop mov sti rclb and pop sahf add loopne adc aaa add rol cmpsb or ret imul fldl xor aad arpl dec ljmp iret dec jne sub mov nop (bad) subl and jg lahf sbb mov call popf dec icebp dec cli in inc xor push mov int push or daa mov insb and xor cmpsb test sub lds stc (bad) jne loop gs sbb inc cwtl mov pop enter cmp add add add dec adc bound or fistl sbb inc neg and adc and negl sbb (bad) xorb inc inc push xchg xchg sub and push andl movsl add mov xor out sub js adc fldl scas dec leave push or fwait inc shll iret push pop inc inc ds inc pop xor js mov xchg sub mov in add mov inc mov pop pop imul test sahf add jnp push nop pop loopne mov lret int sub stos fs gs xchg roll xchg insl sbb push aam cmp jae mov sti jo jge gs xor popa xchg icebp fsubl mov lret jecxz std cmp mov addr16 mov xchg repnz jmp dec sbb (bad) dec jne xchg xor adcl lret insl iret xor jne movsl lret cmpsb ret (bad) enter xor add push inc push push fdivl jg mov xor xchg and push fld mov movl repnz popf pop aaa imul stos (bad) ficomp and fnstcw stos xor cmpsl insb cmp push jecxz push out popa fldt fdivl loopne pop nop and test pop les enter outsl inc push cli (bad) outsb andl sbb xchg dec fstl imul jno nop cld adc jo xchg rcll jno push adc jg movsb fs ds aam jmp stos mov out cmovae insl stos fmul cmp inc (bad) ljmp scas xchg pop loop js push xchg inc test mov cltd add mov adc dec mov aam out xchg cwtl cs (bad) sub insb or cmp inc lods imul shrl pop lahf test mov shr cmp mov jno,pn pushf mov cs insl movsb mov and out dec mov add in repnz add add out movsb in adc loope call movsl ja bnd mov mov and add dec and xchg sbb fldenv dec add fs sti mov pop aad addl popf arpl sti mov mov sti ffreep push mov (bad) cmp clc ljmp movsb pushf xchg add imul in sarb cmpsb xchg jns pushf stos inc jbe jp ret aas jle lea arpl movsl inc and sub lods enter out loop jno fimull or (bad) (bad) hlt xchg sub cli in xchg push pop hlt cmp dec repz mov pop cmc jge sbb lock xor test pusha pop xor push mov leave aam jb dec rclb pop adc push pop aad add fmul fldt mov in adc inc dec (bad) inc out add pop jle stos dec lret adc mov mov xchg mov inc fwait insb and fnsetpm(287 sbb jecxz insb out in xor jp cwtl cmp icebp (bad) adc sti cwtl and push dec addr16 xchg out cmpsb fwait sub fist jnp aam imul loop jne adc jns je mov repnz sub and inc cltd inc push xor push sub sub mov faddp jo sbb sbb out dec loope outsl mov adc dec dec push mov iret push in call lods or loopne jl in sarl xchg pop or out adc push xchg cmp repnz js push add add hlt or add xchg mov xchg test xor clc pop ja call xchg out ret leave in jne inc (bad) (bad) mov push push mov inc push or repz arpl jl test ss stos repz std lods mov push lods aas mov ret idivl cmp fidivl arpl ja ljmp jmp lock mov mov or movb loope sahf sub push push lret push xchg ss cs in out cmp stos rcr sub add leave lods push ja bound pusha push add loopne testl loop sbb icebp cmc into gs ss ds lcall repnz mov test lods test inc xor pop fcoms xor aaa xchg movsl and jb jb push call dec xor adc dec lret mov xchg in mov bound dec es pop icebp hlt mov movb xchg mov xor pop out mov test xlat dec mov shll and xlat add adc jb xor add aaa adc sub aad lds mov test test aam sub addps pushf pop mov testb test insl js add adc xor (bad) xchg out call pushf js cmp mov xor push nop or pop cli data16 fnstenv sub jne fdivrs icebp int into and push mov lock push xor mov push xchg inc pop mov add add ljmp dec jl ja jecxz mov fidivl cmpl mov cs cltd cmp shr lock inc xor fisub in movsb (bad) int3 and mov out add add dec pop imul shll aaa fsts insl sbb pop xchg fidiv clc mov mov add jle push cmpsl adc adc sub addr16 adc sub jg xchg rcl insb inc insb or addr16 call notl add cli adc test lret arpl (bad) scas dec jns cmpl pop adc iret lock iret cli inc call hlt call xchg inc stc or cmpsb mov (bad) push loop fwait sbb (bad) lahf andps les mov inc outsl lcall mov fldl or call push mov sub (bad) jmp pop add xchg in cld sbb or (bad) jle movsl cmp lods mov lock shr cmp cmp mov add add add test adc mov test xchg cwtl dec sbb stos cmc mov adc or inc mov or cld ss lods push imul and add enter bound loope mov xchg nop sub mov push cmp push cmp movsb xchg sbb gs fimull rcll (bad) dec rcrb cmpsb jg iret outsl outsl adc mov repnz sub out mov popa ror lods sbb add add add add xchg shl inc in mov insl movsl mov xlat sbb add test dec loop fcompl fstps inc jns dec addr16 sbb (bad) xchg pusha push push and testl ljmp out or sub std sub sub mov mov or pop mov and jbe pushf push mov js sbb (bad) and imul xchg pop mov pusha lcall test inc data16 rclb add add cmp pop push out jbe push insl jecxz (bad) call mov loopne das out mov pop and pop or rorl (bad) fisttpll mov popf mov mov and icebp fdivl xchg xchg outsb jns (bad) adc dec sbb imul rcr adcl jge dec outsb in cmc lock ds push xlat xor pushf xchg pushf (bad) stos or jg jge icebp mov xorb subl mov mov in pop icebp add add add add enter cld (bad) xchg leave jg das xchg out negb pop mov pop xor add in adc data16 xlat aaa or mov inc cld roll lds into fs adc outsl das lods dec cli cmpl mov movsb insl stos (bad) bound fidivl xchg xchg popa add call mov addr16 xchg jl jnp mov sub mov call inc loope ljmp pop or movsl mov sub fnstenv add add (bad) push addr16 insl andl xor xor (bad) stos in jno mov cwtl or mov xor adc movsl mov sub sub das addr16 pop push and movsb sub (bad) call adc lret insb dec jle jnp (bad) aas add pop stos cmpsb sbbb xchg sbb and cmp repz pop inc shr idivl adc fsubrs dec jmp iret add in pushl bnd es sub inc mov jmp mov movl (bad) mov arpl inc push dec int jne (bad) leave lods sbb call xchg pop and pushf inc lret xor jb (bad) pop sbb cmpsl xchg jbe cmp sub add and push cli cli pop or sbb inc ret aad jle sub imulb sub lcall movzwl (bad) lret loope jecxz test loopne notb pop lock lcall test lret push jg dec pop imul push sahf mov add (bad) jecxz pop dec jo test add incl mov psubd add loopnew cmp mov scas and inc mov int mov or xlat ret and (bad) in pop jp ja push cwtl mov and cmp lea inc lcall icebp aam push mov loope or sub rol xchg push popa popf inc jae dec push add mov xchg outsb cvttps2pi fldpi or xchg jecxz es or in nop and add add sbb mov rcrl repnz inc mov or rolb add ja jne pop ret sub int3 ss mov jae dec insb daa scas ficom test xchg lret xchg jae dec mov js add dec (bad) mov out jp jne cwtl dec mov mov push ss dec fimull leave add mov or (bad) mov dec jge stc sub sub insl mov inc jo sbb cmc dec iret fstpl add add add add adc aad jns pop pusha and iret fs jno rcl (bad) dec xchg xchg pop gs cltd adc pop into inc mov les ficompl out mov xlat xor jbe xchg push push jl add mov xorb mov dec sub sbb and les xor push jecxz xor (bad) cld push push cmp mov fdivs out mov jmp sub stc movsl add add add fs das mov inc mov stos (bad) pop cmpsl jo mov std dec movsb test outsl outsl add je pop cmpl push cmp mov lahf dec mov mov rol jae pop rorb sbb add cmp xchg adc enter (bad) dec gs es push daa mov adc adc inc xor adc test and in push jnp add test nop cmpl out pusha scas pushf or mov add push or add add add mov clc sbb (bad) jle mov dec mov in lea loop bswap incb mov inc push sti add lea (bad) (bad) pop lcall scas sbb add popa xor sbb xchg aas (bad) xor out mov push mov sbb lods or sbb popa fcompl push insb xchg adc ss stos scas push lret jle mov int sbb mov repnz ret data16 loopne jmp adc rorl add popf lods jl inc cmp test jl xchg les add add add add cmp xor and inc frstor cmp in xchg pop aam sti push cmp dec sub xchg fwait push aaa fldl mov jecxz push push sub dec dec jp in and lods add mov (bad) repnz std add inc push add scas pushf mov jmp sub pop test xchg mov loope add js or jmp cwtl adc fwait icebp xchg in mov loope sub or mov js add and stos mov or add add add clc adc xchg xchg cmp fldl lods or sahf out add lret sarl or pusha jns outsb or imul jmp (bad) adc xchg sub push std in mov or add (bad) mov sub adc (bad) stos popl sub bound in mov xchg jge,pt cmp fsubrl rcll pop mov sbb xchg fwait xor xchg mov sub (bad) outsl mov xchg mov dec inc and mov test add add in adc test mov jg and fidivr push flds mov xchg mov sub out jl adc test movsl lds jp pop das adc adc fldt inc jp xlat fs cs dec xchg dec lahf lods mov jo and mov mov and cmp inc sub fsubrl and rcll hlt jns popf add movb roll mov sub test pop sti xor arpl jmp mov jmp mov scas jno (bad) mov sub movsl loopne mov jnp out mov mov push jne inc iret cmp jecxz sbbb jecxz insl adc adc xchg jb mov scas inc and push push dec cmp stc sbb jp shrl xchg std sub push push iret xor adc or pop push inc je popf (bad) xor scas xor int3 add outsb inc cmp gs cmp sarl jle mov mov mov xor pop mov add add add add xchg sbb imul lods pop mov push mov std cmp sbb aad lods lods test xchg dec fmull je cmc les xchg sub stos test sub outsb loop addr16 cmp addl es xchg inc scas setl frstor jo data16 pop (bad) ficoml sub scas mov pushf gs lret insl jg lock dec popf lock aam aad jns jne cmp push pop sbb sub fldenv mov add add add movsb sbb push push (bad) stos mov scas shlb mov popf fidivl sahf mov cmp ret es pop push addr16 into ljmp mov movsb xchg aaa xchg sub mov rol push push ljmp insl fwait stos int and push aad adc (bad) jo add shrl jp or pop push fs in jne divl xchg imul jb ds rcrb add add add add dec notl mov and (bad) fildl ret aam adc pop lods rcll jmp sub ss jle ja push sbb xor cmp mov mov jb cwtl or ds mov xchg (bad) add (bad) lret fwait lock cwtl mov mov mov aam jge daa xchg outsl inc cmp pop repz add sbb mov sub ljmp jmp or lret lret repnz inc jle pop hlt add mov cltd cli dec mov mov test lea pop and pop jp push inc mov in mov inc fs dec movsl mov lret or and mov add cmpsb mov lret inc dec mov sbb test jb in jae mov add xor jg cmova lods shr unpckhps rcl or data16 out mov ds gs jl adc mov jle js add add add repnz and daa xor jp mov push lods aaa and icebp cmp xor aad sub mov mov adc mov shlb sarb mov xor or (bad) lcall popa (bad) js add sbb test add pop pop inc (bad) mov mov or (bad) (bad) popa js push mov mov out cwtl arpl ret cmc cmp jae adc mov xor (bad) std aas mov jecxz push inc dec jecxz sbb mov mov dec in pop mov (bad) ds push in lret loope push dec mov aam or gs rclb call cmp sbb mov lahf into mov mov ljmp add mov dec das xor mov cld inc jno add sarb adc jecxz fist movb sbb repnz mov nop call add xchg and xchg xchg aam jno out mov and movsb jae test fldl add add add xor les cmpsb lahf and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and xor or cmpb je inc dec mov push loop push push push mov add jmp call inc push push dec outsl je data16 arpl push add add add loope inc call push pushl push call cmp je call push dec inc dec dec xor cs dec dec and pop pushl push call mov rdtsc loop jmp push pop xor pushl popl movl mov xor push pop pushl popl pushl popl add jmp mov mov movb cmpb je inc dec mov push pop mov push pop mov jmp dec inc mov pushl popl mov push pop cmp jne jmp dec inc cmpl jne pushl popl mov push pop push pushl popl mov push pop mov jmp dec inc add push pop mov jmp dec inc mov push pop add movb cmpb je inc dec mov push pop add pushl popl lods pushl popl test je add mov mov bswap inc cmp jne push pop cmpl jne pop pushl popl xor movb cmpb je inc dec push push pop push pushl popl push push pop push push pop push push pop push jmp dec inc push push pop push movb cmpb je inc dec call push pop add jmp dec inc ret jmp dec inc movb cmpb je inc dec push movb cmpb je inc dec push mov push jmp dec inc movb movb push pop movb push pop movb push pop movb push pop pushl popl movb movb cmpb je inc dec mov movb pushl popl movb mov mov add pushl popl push push pop push push pop push push pop xorb jmp dec inc mov or push pop movb movb cmpb je inc dec movb push pop movb jmp dec inc movb jmp dec inc movb movb cmpb je inc dec movb movb cmpb je inc dec movb mov movb mov jmp dec inc call push pop push push pop push push pop push push pop addl pushl popl call movb cmpb je inc dec mov pop pop pop mov mov pushl popl push push push xorb pushl popl xorb push pop incb push pop movb push pop movb jmp dec inc movb push pop movb movb cmpb je inc dec movb push pop movb jmp dec inc movb jmp dec inc mov call movb cmpb je inc dec push movb cmpb je inc dec addl mov push jmp dec inc pushl push pop call push pop jmp push pop pop push pop pushl popl mov movb cmpb je inc dec mov mov mov pushl popl pushl popl push pop push pop push pop jmp dec inc push pop movb cmpb je inc dec push pop jmp dec inc jmp dec inc movb cmpb je inc dec movb cmpb je inc dec mov jmp dec inc push pop push pop push pop dec push pop dec pushl popl sub test jne movb cmpb je inc dec mov mov mov mov xor pushl popl movl pushl popl push push pop pop push pop add push pop mov jmp dec inc jmp push pop cmp jne jmp dec inc add add push pop call movb cmpb je inc dec push pop call mov xchg in test insb add mov in jge mov fdivl mov cmp divl push lds test inc iret sti (bad) outsl test daa in xchg test scas mov jge jge (bad) xchg daa in hlt add jl xchg mov or push imul in jge idivl sahf daa in daa outsl jb jge into inc jge daa mov lcall gs daa cld jge dec in js mov jge into fildll daa mov lods aaa in jge loope pop js mov pop scas sub (bad) je jge daa mov inc aad mov push andl jmp mov mov es jge pushf in jg daa in jb ret in jge scas adc or add and aad in pop xchg sub movsb adc mov addr16 or mov sub test in jb mov jge cmpsb xchg jns and jae xchg xor imul in jge and lods jecxz fdivrs daa outsl test daa in (bad) lret inc xchg daa in daa outsl pop jecxz xchg in adc js dec jge daa xchg mov jge daa sarl daa in jb fwait in jge into mov xchg mov lret sbb daa in daa outsl data16 xchg sbb xchg mov jge daa mov js rcrl daa lods or fxch or adc sub cmp adc mov jge jge jle daa in sub in daa xchg enter lods mov jge jge lcall xor push push sub jge (bad) enter add daa outsl loop jge scas test xchg push xor jge iret pop jae daa cmp call add mov in hlt ret xor daa mov adc (bad) fdiv lret adc daa in daa outsl cmpsb loop xchg call jge iret pushf jae daa gs lods mov jge jge and pop add and (bad) clc jge jge mov in hlt inc lods mov jge jge inc mov in hlt ret jns daa cld jge dec in std xchg xchg fcoms sub cmpsl in jge ja stos pop cltd loopne xchg in or daa jmp (bad) pop push jge in jge iret adc xchg gs into xor daa mov arpl in jge iret or daa frstor xchg pop push fsubrl in jge jbe (bad) push lods imul jg xchg push out ja jge fdivrs xchg in mov fdivrs xchg in xchg push fcoms (bad) or enter lods hlt xchg jne,pn cwtl in jge das xchg xchg jge fcoms sub fucomip or test jge test inc outsb mov test jge test cmp xchg cli jge jg cmp daa mov ret inc xchg push test outsl inc xchg xchg std xor jge lods mov in cmpl jge push ret jge jle or jbe cmp daa mov jge sub jge lods test or daa outsl test daa in xchg xorl jge into in xchg mov or in jge fcomps dec (bad) lods test jge ja adc sub mov xchg cmp nop daa in and (bad) adc daa mov mov and jge lods popa flds xor pusha jno daa mov jge into dec outsl xchg mov std sub jge xor es mov mov in jge lods movsl pop (bad) fdivrs xchg iret add js adc mov sub daa in mov cli sub push loope cmp daa or fsubrl mov in jge and cmp outsl sub jge lods stos inc or loopne inc movsb sub xchg jae in jge js hlt sbb jmp xchg jne daa mov fsubs mov sbb jmp xchg hlt sbb jmp xchg jp daa addr16 scas jae andb (bad) push daa in jge mov addr16 xchg in jge mov and test aaa in xchg cld jge push ds aam (bad) test in movsl xlat jno or sub in aas aad jnp (bad) daa in or pop jge daa in (bad) rclb outsl test dec in dec xchg adc (bad) das in jge nop in jne daa xchg jg cwtl sahf push fldcw xchg in jge out mov sub lods imul in jle sub fisub jns daa in or pop jno daa in (bad) repnz lret in jge aam jge loopne insl xchg in jge (bad) clc jge daa in (bad) cmp in xchg jecxz dec daa in jge lods pop imul es dec dec clc sub xchg in jge iret pop ja daa addr16 mov in jge fucomip jb mov imul in hlt ret cli xchg in jge out jnp mov gs xchg in jge sarl jge and jge daa in jl movsb aam repz jge daa in std repz out loop das in jge in hlt fidivl add lea in negb aaa loopne xchg jge daa in and int3 into negb daa in hlt fidivl add lea in negb aaa loopne xchg jge daa in and jns mov fisub (bad) js pop ja daa add mov in (bad) cli jg jb jnp jge inc dec dec xchg in test addr16 (bad) daa in xchg (bad) sahf in jge daa gs (bad) daa in hlt idivl out lret in jge push lock cli jg or scas adc inc daa cld jge push and jge daa in sub xchg (bad) lods imul in jle sub fisub jns daa in or adc xchg in jge dec out (bad) xor in xchg sub out jnp (bad) daa in jle daa in xchg jo daa in jge callw shll pop scas das (bad) insb sbb add sar insb push mov pop movsb sub mov rcr (bad) js add js data16 jge bound or es mov mov (bad) leave ja bnd in jge pop loopne jle sub incb xor push in jge scas mov xchg jecxz in jge iret in je daa adc in das in jge bound jb daa addr16 scas in jle cwtl jae bound movsl loope lods imul daa mov inc das in jge push in lock jns daa xchg daa addr16 je and je lods add in jb push (bad) js mov jge jge out (bad) daa in sub xchg jge jge add aas mov jge push xchg lods ss jge iret test daa adc subl in test daa in (bad) xor jge fcomps (bad) mov mov mov xchg jge sub or fcomps not das adc jo (bad) jg jecxz xor jge bound jge adc rcr fwait jns jo (bad) mov mov jb mov jge lods sti sbb mov cld inc fucomip jge inc push push xchg rcrb in cmpsl js cld neg xor and je daa mov jns lods mov sub mov mov outsb mov jle xchg rorb mov xchg jge jge out daa in (bad) lock sub jns imull xchg imul aas xchg and add call (bad) or in jge movsb sub jne adc in jb shr jge lods mov push in jge daa xor jle pcmpgtw push xchg push sub jge iret sarb daa adc xchg lods mov (bad) push movsb adc mov outsl ret in jge push (bad) (bad) lret nop mov in daa outsl ss xchg (bad) mov cmp jl das or test daa in (bad) lock (bad) fcomp (bad) rolb cli xchg in jge daa in jge push xchg add iret cmp daa xchg jo (bad) cmc and lods add in jb jle jge lods mov jge jge into andl in jge scas adc jge jbe sub cmpsb push addl push adc mov in jge mov xor jae daa mov cmc and jge mov xor jae daa mov fldenv in jge mov cmp insl xchg gs pop es jge mov sarl in hlt add adc (bad) mov jge ja ljmp jl xchg in jb mov jge lods imul daa in inc jp in mov xchg shll add arpl out stc sbb in jge popf ljmp daa in inc inc and jge mov shll daa sub add jge sbb or push pushf inc adc in mov xchg insb or sbb jge out es push mov popf repz jle daa insb or sbb jge out stc add in jge es jge push mov xchg in js mov xchg js xchg test es (bad) xor pop jmp adc jge into testl js je xchg adc adc in jge mov jl daa pop pushf out and jl fcomps xchg in (bad) xor jnp xchg in xchg dec dec out jge daa adc pop es jge nop js xchg adc sti es jge mov xor in jge (bad) or (bad) xchg in jl daa mov insl xchg adc subl out imul daa in hlt ret xchg in jl daa mov stc xchg in (bad) xor mov js adc out out jge daa adc pop es jge nop js xchg adc sti es jge mov cmp push in jge je jns nop push lret in jge js (bad) mov mov (bad) js in pop js mov jge jo (bad) mov mov (bad) js pop jae daa mov pushf scas mov jecxz fdivrl daa addr16 or in roll cld or and inc and mov das fnsave sub (bad) cli sbb or and lret mov jg xchg xor lods add out sbb adc test jno in add and das daa in jge lcall add in jge lods test xchg sub jl (bad) xor jge jmp jo mov je add jmp sub mov pxor jl and out inc es test pop lcall add xchg jno push enter sub dec sahf in jl daa fs (bad) pop dec pop push and jb cmp jge lods enter jecxz cmpl cld jle in jge push loope push fucomp jl daa nop mov out test jge pop loopne inc in jge scas xor aaa dec dec push addl xchg data16 scas loopne rdpmc jmp push lods loopne mov stos (bad) lret add or xchg jno loopne inc xchg mov jl daa sub daa or xchg fldt in jge movsb aam repnz mov in js,pn lods xchg int3 and and jge daa in js,pn test mov in jge jp cld inc daa cld jge je mov aam scas js daa gs xchg in jge fucom jge jl and lods push xchg das scas cmp sbb or sbb xchg or jge daa in dec push lods cld negl movsb sub shll lea pop in or adc adc in jge jno (bad) js pop jnp daa mov ret or daa in xchg push and jge fucomip or daa mov or mov dec jno xchg shll in jge jp cld inc daa cld jge and mov jge jmp add andl cltd push inc and cmp ret cmp mov cmp int3 cmp mov cmp mov cmp test cmp or daa in pop xchg sub clc pop xchg (bad) (bad) ja push daa in (bad) lret mov or movsb sub loope aam repnz xor daa in pop xchg pop test pop xchg jge cmpsl mov mov inc daa lock jno (bad) rclb cmp daa mov mov (bad) jo sub lods test jge lods mov xchg addr16 or call mov mov aad repnz les or jge daa in pop xchg pop xchg pop test jge addr16 mov inc daa lock dec in sub call jge jno (bad) rolb mov lods andb (bad) adc iret jnp daa mov xchg sub xchg (bad) (bad) ja cmp mov add (bad) daa in (bad) jg jecxz mov adc xchg jge fucomip jb pop adc js mov mov in jge addr16 test das dec dec lods mov addl test inc mov cltd mov movsb add fcompl addr16 (bad) aaa addr16 add out hlt jbe sub loope clc jne sbb jbe (bad) movsl popf je sub xchg fnsave aaa imul push sbb hlt ja in or enter enter enter cwtl jbe and movsl clc dec push sbb mov in jge loopnew (bad) xor or (bad) cld mov push pop cld cld and xchg or cld sub (bad) divb jns testb outsl mov repz jns cmpsb aam or outsl or xchg jns sub dec pop je rorl jge daa mov mov push movsb sub push sub xlat ja adc js clc (bad) repnz mov jge movsb sub movsb push gs daa in jge push sarb inc addr16 lahf daa in jge in hlt test gs iret call jge movsb add jne daa imul or scas test xchg test (bad) mov cmp in or add bnd fdivl loopnew (bad) xor or (bad) les fsubrp or push hlt divl push add data16 lods insl xlat scas test mov aam lods adc xlat dec adc iret sbb (bad) paddsw inc lods imul in neg sbb movsl loope lods imul ja jns nop in xchg adc xchg in jge fcoms sub into lahf mov insl add push cmp add jge inc cwtl add xchg mov call daa in mov mov push mov jge out xor pop enter lods or cmpsb xchg pop (bad) daa in aas repz add push fdivrp stc add jge inc cwtl dec push pop enter sub cmpsl cmpsb xchg pop pop daa fdivrl mov push loop (bad) daa in jge xor xchg in xchg mov jp pop in jge int3 in mov inc daa cld jge je or iret test mov in cs int3 in jo daa mov jge out cmp daa sub jnp xchg jp in jge lods push xchg das scas cmp sbb or cltd jno loope pusha xchg xchg daa xchg xchg daa in jge jno sub sub xchg in jge daa mov mov (bad) jo sub lods cltd jno loope pusha xchg xchg xchg dec in pop xchg mov pop (bad) lods mov orl xchg mov mov mov into cltd dec mov lods testl sub test call mov aam lods adc xlat dec adc fildl call hlt xchg in jge xchg jge daa addr16 or addr16 test hlt inc movsb sub test aaa cmp xor and add loopne in outsl xchg xorl je (bad) js outsl test daa in neg add test call ds daa in jge sbb or xchg jl push add cld and popa lods mov dec dec lahf in jge daa lods ds fs mov pop sbb or push repz (bad) fldt jl,pt lods sub out scas std mov movsb xchg jl push pop cmp fsubrp or insb inc aas push lock pop jmp hlt les sub (bad) popf in jge scas mov ja in cld jle int3 jge push jae xchg daa and cmp das scas inc inc push mov mov in jge xlat insb push (bad) sahf cltd xchg cmp movsb das ja out push jl daa in cmp sbb or out fisttp andl push hlt (bad) (bad) aas scas scas mov cmpsb adc or sub xchg daa cmp and xor ds cmpsl aam repnz jne inc dec xchg in test insb lds daa in jge push ljmp push sub outsl bound adc hlt or sub adc push mov inc int3 push aam int3 xor imul cs sahf or push int3 ss into pop test mov bound adc push mov inc int3 push aam int3 xor fiadd ret xor pop fisttpll or or push cwtl or pop cmpsl sbb add int3 pop cmc inc mov inc mov outsl cmpsl xor jnp adc push fwait sbb inc mov out inc sahf adc dec mov (bad) adc dec fwait push (bad) cmc inc (bad) or inc sahf push out dec (bad) and push (bad) pop cmpsl or pop aam lea repz pushf pop int3 inc xchg pop fildl int3 push repz mov daa cmpsl or pop xchg xor js ret pslld push repz int3 pop aam lea repz pushf pop int3 inc xchg pop xchg popf xchg mov jge daa mov jge daa ret daa mov jnp fcoms cmp ja sub xchg cmp sbb jge iret sbb ret jge daa sarl daa add insl fcoms jge daa in jge daa in push xchg in jge daa in jge daa in jl daa in jge daa in jl daa in jl daa in sub xchg in jge daa in jge daa in xchg push into adc test iret and js test cmc inc (bad) mov scas psrad sbb fcoms or inc sahf dec mov add push adc jmp push mov jo adc dec fwait push xchg ret fsubrs adc jo adc dec fwait jge add pusha mov ret inc lahf push repz pushf sub dec mov lock add insl fcoms sub dec lea enter jmp in xchg lods int3 adc mull adc iret iret xchg js stos sbb data16 push mov hlt outsb (bad) sbb daa add outsl fcoms push loop (bad) sbb adc jge xchg add or inc lahf or push sahf adc daa add outsb fcoms loop,pn test xor inc mov lret push (bad) js test repz lea (bad) dec adcb bound js test repz lea xlat push orl inc cwtl cmp daa add insl fcoms ds inc lea loop test loop in xchg xchg int (bad) rclb or popa test loop add insl fcoms das loop mov out dec mov or (bad) js mov rorl aam xchg sbb fsubrs xor loop add insl fcoms cmp push mov sbb dec mov jge mov (bad) js mov les adc dec mov out dec mov xchg push xchg js scas psrad sbb push sbbl push lahf sub fsubrs adc sbbl ja adc inc lahf push xchg sbb dec test out mov hlt push in xchg dec (bad) adc rorl loop cltd sbb push mov repz add jbe adc call push mov loop cltd sbb push mov repz add pusha fcoms cs mov js lahf adc mov add insl fcoms cs inc adcb pop mov repnz mov iret jo js (bad) or dec cmpb add js cwtl and inc sbbb pop mov repnz test jmp fcoms xor jo adc inc mov sbb push adc push xchg jge aaa sbb js cwtl cmp push scas adc push mov loop mov daa add cmc inc lea loop test loop add outsl fcoms xor ja adc inc (bad) sahf or inc xorb dec orl daa add ja adc repz or dec (bad) or pop cwtl sub push mov daa add ja adc repz push repnz mov out push mov daa add imul (bad) adc push mov sbb inc (bad) (bad) jge sub js mov repnz lods push repz lcall push lahf jge cmp sbb adc jge xor or jo adc dec fwait push xchg jns js movsb sbb push lods adc dec (bad) jge rolb pop (bad) daa add outsb fcoms jge and xchg out adc outsl push add jge iret adc xchg add outsb fcoms popf mov adc add (bad) loopne xor les inc cltd mov mov pop insl pop push (bad) rol decl pop sbb (bad) cmp aad stos out sbb inc jb out data16 movsl aam xchg push push cli scas mov or push and sub inc (bad) pusha jo inc fisub scas fwait movsl or (bad) adc cmp and mov loop out push movsl int pop jne xchg repz add mov das lahf sub cmp mov pop scas mov mov clc pushf rcr aaa jle dec mov xchg jbe dec ss hlt sbb or scas push sbb add adc shrb enter shl push fimul dec std ret pop fs sub insl pop pop dec ficompl lahf (bad) xor and cli test cmpsl pop iret adc xchg add outsl fcoms jge daa in xchg xchg adc out inc mov pop mov mov in jge iret sub xchg add jae adc daa in xchg mov adc outsl dec sbb jge iret in mov dec jge daa add outsl fcoms js and je and jne and jne cs jne and js and je and js and jnp das in je and js and jne das in jnp and je and jnp and jnp cs js and js and jne das in je and jne das in js and js and jp das in jne and je and jp cs js and jnp cs js das in jne and jnp das in js and js and je and je and js and js and js and jp and jne cs jnp and jp das in js cs jp and jnp and jne cs jne and js and js cs jne cs je and je das in js cs je das in jnp cs jp and js cs jnp and je and jnp cs je das in jne and jp das in jnp and js das in je and je cs je and js and jnp and jp and jne and js and jp das in js das in jnp das in jnp and jne cs jne and jnp and jnp and js cs js das in js cs js and jnp and jp and jne and jnp and jp and js and jne and jnp and jnp cs jnp and je and jne and jp and je cs jne and je and je and jp and jp das in je and jnp and jne das in jnp and je and jne and jnp cs js and js and je das in je and jne das in js and js cs jp das in jne and je cs jnp cs js and jp cs js cs jne and jne and js das in js cs je and je and js and jnp das in js das in jp and jne cs jnp das in jp and js das in jnp and je and jp and jnp cs js and js and jne das in je and jne das in js and js and jp das in jne and js and jp cs js and jnp cs jnp das in jne and jnp das in js and js das in je and je and je and je and js and jnp and jp cs js and jnp and je cs jnp and js and jp das in jp and je and je and jne cs js and je cs js cs js cs jnp cs jp and js cs jnp and je and jnp and js cs je and jp das in jnp das in jnp das in js and js and je and js das in jnp and jne and jne and js and jp das in jnp cs jp das in jnp and je cs jne and jnp and jnp and js das in je and je das in je and js cs jp cs jp and js cs jnp and je and jp and js cs jp and jp das in js das in js das in je and js and je and jnp das in js and jne das in je cs js das in jne cs js cs jp das in js and je das in jp and jnp and jnp and js and js das in je cs jnp and js and jp cs jne and js and jp and js and jp cs jnp cs jne and jne das in js cs js cs je and je and js and jnp cs jnp das in jp and jne and jnp das in jp das in js and jp das in jnp das in jne cs jne and jp and jp and je and jnp cs js and jnp and jp and je and je das in jnp and jne and jp das in jne and jp and js and jne cs jp cs jp cs jnp das in jnp and jnp das in jp cs jnp and jp and jne and jnp and jp das in js and jne das in jnp and jne cs jne and jnp and jnp and js and jnp das in js and jp and jnp and jne and jne das in jnp and jp and js and jne and jnp and js das in jne and jp cs jp cs jnp and jnp and js and jp cs jp das in je cs js and jp cs je and jp and jne cs jne das in js and js das in jp and jp and js and js das in jnp cs jnp and jp and jne and je and jp and jne and jnp and jne and jp and je and je and jnp and jnp and js das in jp and jnp das in jp and jp cs js cs js and jp cs je and jnp and jne and jp cs jnp and je and jne das in jne das in jp and jp and jnp and jne das in jne and js and js cs jp and je and jne cs js and jne and jnp das in js and jne and jne and jnp das in jnp and jnp das in jne and jp cs je das in je and jp cs jne cs jnp and je cs jp cs js and je and jne das in jne cs jnp and jp and jnp and jne das in jne das in js and jnp cs jp das in js and jne cs je and je and jnp cs je and jne and jne and jp and jp das in jne and jne and je and js and jnp das in je and js and jne and js and je cs jnp and je and jnp and jnp and js and jnp das in jnp and jp and jnp and jne and je cs jp and jne and jnp and jne and jnp and js das in je and jne and jne and jp das in jp and jnp das in jp cs jne cs je cs js and jp cs je and jp and jne and jne cs js and js das in jne das in jne das in jp and jp and jp and jp das in jne and js and js cs jne and je das in jp cs jne and jp and je and je and jp and jnp and js das in jp and jnp das in jp and jp cs js cs js and jp cs je and jnp and je and jp cs jnp and je and jne das in jne das in jp and jp and jnp and jne das in jne and js and jnp cs jp das in js and jne cs js and jne and jnp das in jnp and jne and jne and jp and jp das in jne cs je and jp and je cs js and jne and je and jp and je cs jp cs js and js das in je cs jne cs jnp and jne and jp and jne cs je das in js and jnp and jne das in js das in jne and je das in je and jnp cs js and je and je and jne and jne cs jne and jne and je and jnp and jnp das in je and js and jne das in jnp and je and jnp and jnp cs je cs je cs jne das in je and jp and jne and jne and je and js and jne and je das in jp cs js das in jne and jp cs js and je and je and jne cs jne das in jp cs je and je and jnp and jp das in jne and js and je and js and je and jp das in jnp and je cs je cs jne and jne and je and je cs je das in jnp cs jp and js cs jnp and je and jnp cs je das in jp cs jp das in je and je das in jne and je cs je and js and je and jnp and jp and je and jnp and jne and js and je and jp and jnp cs js and js and je das in je and jne das in je and js cs jnp das in jp and je cs jnp cs je and jp cs js cs jp and jp and js das in js das in je and je and je and jnp das in js and jp and jp cs js and jnp and je cs jp and js and jne das in jp and jnp and jnp and je cs js das in je cs jnp and jnp and jne and je and jnp and jne and jnp and jp and jp cs je and jp cs jnp das in jnp cs je and je and je and js and js and jp and jne cs jnp and jp and js cs jp and js and jne cs jne and js and js and je and js and js and jnp and js and jp and jne das in jnp and jp and js and jp and js cs je and jne cs jp cs jp cs jnp and jnp and js and jnp das in jp das in jne das in je and jnp das in jne cs jnp das in jnp das in jnp and jne cs jne and jnp and jnp and js cs js das in js cs js and jnp and jne and jne and jnp and jp and js and jne and jnp and jne and jne cs jnp cs jnp cs js and jnp and js and jp cs jnp das in je cs js and jnp cs je and jnp and jne cs jnp das in js cs jne and jp and jp das in jnp and jnp cs js and jp and jne and je and js das in jp and jp and jnp and jne and jnp and je and je das in jnp cs jnp and js das in js and jnp and jp cs jnp cs jne das in je and jp cs jne cs jnp and jne das in jnp das in je and je and jne das in jp das in js and jp cs jnp and jp das in jne and je and js cs jp and je and jp cs jne and jne and js das in je and jne and jne and jp cs jp das in jp cs jp cs jne cs js cs js and jne cs je and jp and jp das in jnp and jne cs jne and jnp and js and je and jnp and js and jnp and jnp and jp and jne das in jnp and jp and js and jne and jnp and js and jne cs jp cs jp cs jnp and jnp and js and jp cs jp das in je das in js and jnp das in je cs jp and jne cs jp das in js and js das in jp and jp das in jnp and jnp cs jp and jp and jp and je and js das in jne and je and js and jne and jnp and je and jne and jnp cs jnp cs js and jnp and js and jp cs jnp cs je cs js and jp cs je and jnp and jne cs jnp das in js cs jne and jp and jp das in jnp and jnp cs jnp and jp and jne and je and js das in jp and je and jp das in je and jne and js das in js and jne and jp and jnp cs jnp das in jp cs jne and jne and je cs js and jne and jne cs jnp and je cs jp cs je and je and jne das in jne das in jnp and jp and jnp and jne das in jne and js and jnp cs jp and je and jne cs je and jne and jnp das in je and jne and jne and jp and jp das in jne cs jne and jne cs js and jnp and je cs js and jne and js and jne cs jnp and jnp cs jne das in jne cs jp das in jne and jne das in je das in jne das in js das in jnp and je das in jne and jp das in je and jp and jnp cs je and jne and jne and jp das in jp and jnp das in jne and je and js and jnp das in jne and js and jne and je and je cs jnp and jnp cs jne cs jne cs jp and jp and jne and jne das in je das in js das in jnp cs je das in js cs jne cs js cs je das in jnp cs jnp and je and jne and jne and je cs jne and js and je and jp and jp das in je and jnp and jne das in jnp and je and jp and js das in je cs je cs jne and jne and jp and je cs je das in jnp and jp and jne cs jnp das in je and jnp das in je das in jp cs jp and je and je das in jne and jne cs je and js and je and jnp and jp das in js and jnp and je das in jnp and je and jp das in jp and jnp and jnp and jne cs js and je cs js and jnp and jp cs jne and js and jp and js and jnp and jnp and jp and js and je and je and jne and jne cs je and je and js and jnp and jp cs js and jnp and je cs jnp and js and jp das in jp and js and je and jne cs js and je cs js cs js cs jnp cs jp and js cs jnp and je and jp and js cs je and jp das in jnp das in jnp das in js and js and je and jnp das in jnp and jne and jne cs je and jnp and js das in jnp and js and jne cs jne and js and js and je das in je and js das in js and js and jp and jne and jnp and jp and js and jp and js cs jne and jne cs js das in js cs je and jnp and js and jnp das in js das in jne das in je cs jnp das in jne cs js cs jp cs jnp and jne and jnp cs js and js and je cs je and jne das in js and jnp and jp cs jne and js and jp and js and jp cs jnp cs jne and jne das in js cs js cs je and je and js and jnp cs jnp das in jp and jne and jnp das in jp das in js and jp das in jnp das in jne cs jne and jp and jp and js and jnp cs js and jp and jp and je and je das in jnp and jne and jp and js cs js and jp and jnp and js and js and je and je and je and je and js and jp and jp cs js and jnp and je cs jp and js and jne das in jp and js and js and je cs js and je cs jnp and js cs jp and jp and jnp cs jnp and js and jp and js cs je and jp cs jnp das in jnp and je and je cs jne and js and js and jp and jne cs je and jp and js das in jnp and js and jne cs jne and js and js and je das in je and js das in js and js and jp and jne and jnp and jp and js and jp and js cs jne and jne cs js cs js cs je and jnp and js and jnp das in jnp das in jne das in je cs jnp das in jne cs js cs jp cs jnp das in je cs jne and jp and jp and jnp and jnp cs js and jnp and jp and je and je das in jnp and jne and js and jne and jnp and je and jne das in jnp cs jnp cs js and js and js and jp cs jnp das in jne and jne and jnp cs jp das in jnp and jne das in jnp das in je cs jne and jp and jp das in js and jnp cs js and jp and jne and je and js das in jp and je and jp das in jne and jne and js das in je and jp cs jp and jnp cs jnp and jp cs jp cs jnp and jne das in je and jp and jne cs jnp and jne das in jnp and je and je and jnp and jnp and js and jp das in jnp and jp and jnp and jne and je cs jp and jne and jnp and jne and jp and js das in je and jne and jne and jp das in jp and jnp das in jp cs jne cs js cs js and jp cs je and jp and jne and jp das in je and je and jp and jp and jnp and jnp cs jnp and jnp and jp and je and je das in jp and jne and jnp das in je and jp and js and je and jp and jp and jnp das in jp and jnp das in jne and jp and js and jnp and jne and js and jp and je and jp cs jnp and je das in jne das in jne cs jp and jp and jp and jne das in je das in js and jnp cs jne das in js das in jne cs je and jp and js and js cs jp and jp and jnp cs jnp and jp das in jne and jp and je cs js and jne and je and jp and je cs jne cs js and js das in je cs je cs jnp and jne and jp and jne cs je das in js and jnp and jne das in js das in jne and je das in je and jnp cs js and je and je and jne and jne cs jne and jne and jne cs js cs js and jne cs je and jp and js and jne cs jnp and js das in jne das in jne das in jp and jne and jp and je das in jne and js and js and jne and je das in jne cs js das in jne and jp and js and je and je and jne cs jne das in jp cs je and js and jnp and jp cs je and jnp and je and js and js and jp das in jp and je and je and jne das in jne and je das in je cs jne das in js das in jnp cs je das in js cs jne cs js das in jne and jnp cs jnp and jne and jne and jp and je das in jne cs je and jne and jge iret imul daa cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp orl lahf test cmp (bad) jno jbe loope adc mov int3 dec repz xchg add (bad) mov inc mov pop xlat pop (bad) je cli arpl mov dec and movb popa jg mov fcmovbe std mov add pop cmpsl xor jbe xchg leave sbb enter inc fwait adc fs fdivrs pop movsl cmp in out or jno sub out mov test lock push mov sbb jae dec jmp xor in sub inc ret cmp pop push shll fnstsw aam out imul aas fld adc pop clc outsb std ret cwtl mov add iret jl je imul add cmpsb enter pop loope cld xor jmp dec out xor dec iret mov adc xchg (bad) mov jns push and sbb out mov pop dec test clc sub fisub sti push int3 std xchg and jbe inc jl enter arpl addl popf or sub frstor dec cmp in and mov jno lret jnp aas movsb inc dec leave jno add pop jmp pop inc or orl and out jnp jo mov xor push (bad) sbb or data16 repnz es and in insl cmp xlat pop sbb (bad) sbb dec bndstx dec lock pop lods aam scas xchg sub lea stos dec sub es in aaa pop sub movswl pshufw push adc mov mov sub movsl fisub push pop mov lods dec add call sbb sti ja dec xchg aas sbb adc jg negl sbb xchg fs inc xor aaa addb sbb add data16 mov add or popf in lds jl dec sub sbb insb sub arpl add mov setb xchg adc mov push clc (bad) mov jae imul jecxz shl int pop inc into mov andl push pop pop inc and ds mov gs inc cmpsl inc jp dec ja insb (bad) mov sub sbb push lahf push outsl test scas add jl and ljmp daa pop xor cmpsb or xchg inc (bad) lea xchg lret loopne enter fistpll jge imul lods push mov jnp xchg mov push loopne push ss (bad) lea jle aam inc loope mov lret mov sbbl pop sbb mov pusha push lcall pop in test enter inc fs rorb leave pop inc or ficom es dec xor faddl add or roll hlt movsl bnd lret loop jno test fs adc or fnstcw cmpsl testl loope jb lret lods or push sub popf add test mov sbb mov jne mov and icebp mov mov dec sub cmp enter std pop adc outsl pop in idivb adc xchg iret in int3 sti xchg pop jecxz add pop mov jg mov (bad) (bad) in cltd cmp push jge push inc aad movsl jne push mov insb cli add cmpsl leave adc pusha lret pushf pop loop test lock into addr16 cmpl ljmp mov fisttpll fdiv jp ja mov mov les mov mov push or push stos stos cs pop xor test out jg bound outsb jo inc stc adc xor push sub ds or mov sub xchg ja xchg pop sbb cmp jne ds xor jp outsl adc mov gs shl pop mov out cmp fiadd dec sbb xchg sbb mov imul dec dec sahf dec lds idivl xchg jl inc dec (bad) faddp pop adc movsl adc mov repnz hlt adc sub das je sub xchg cld mov xor mov rcl imul aas pop es mov fisub dec (bad) imul adc into movsl jns mov sub add add icebp (bad) enter mov jecxz xor lods and cmpsb lods jbe xchg jmp das cmc or lret sbbl cmp mov mov popf jl push into jge popf dec lret push jns icebp pop mov mov aad inc inc mov sbb ja adc xchg nop cmp push (bad) fisttpl call inc ret mov mov pop mov stos sbb fmull daa repz xchg iret jg rol imul (bad) jnp (bad) aam ror push popf imul adcl push fdivl cmpsb andl movl adc scas in stos pop lock in sub and addr16 (bad) sub add dec mov gs sub cs inc int imull sbb mov cmp aad adc ds push inc mov movsl das xchg (bad) jge jb ss (bad) pop cmp adc jae cmp and pusha jb jle (bad) push mov loope (bad) fcmovu add jp push fstl outsl out inc or enter jns cmp inc inc or sub sahf orl (bad) xor jo pop ret pop inc dec adc adc sub movsb sub lret das scas jnp movsb jecxz push out jle xchg mov and pop mov addr16 stc mov cwtl push inc scas stos dec jmp daa and in aaa ret sub movswl lret jo add cld xor mov outsb mov pop bound scas and call inc push mov dec mov imul xlat sbb rclb cmp mov mov or (bad) push gs inc xor sbb add inc (bad) addl xchg xor and hlt shr in imul daa push icebp jno stc fistpl sbb (bad) fdivl dec adc pop inc dec repz pop scas xlat sahf mov xor inc iret mov test (bad) or pop add aas mov je and arpl aaa dec pop xor sub movsl call sbb sub out add sub hlt in scas cmpsb test or shr imul jnp (bad) xor push add dec jae jmp les popf push inc mov into pushf cmc cmp jmp mov and jo push popf lods lret bnd icebp mov pop jmp cld loope mov int3 mov andl pop sbb addr16 mov cmpsl mov ret cltd adc mov push cld xchg outsl lret xchg out aad shrb sti repnz sbb mov icebp mov je or lds jmp adc (bad) cmp cmp repz fdivs adc fnstsw or dec daa mov cltd (bad) imul pushf and mov sub mov dec movsl out outsl pop mov inc sub das lds fs or (bad) repz mov xchg pop pop sbb mov xchg lock xchg or int3 mov rorb ret ja les int inc or dec loop mov rdpmc sub inc js adc insb xlat or test out sbb mov hlt call fidivl fcoml iret inc pop inc leave xor rcr sub cmpsb push dec sbb movsl mov test aad lahf call add rcrl xor and cmp xchg pop sbb rcr jnp sbb sub mov mov fwait xor mov das (bad) lods mov pop jl xchg adc xchg shl rolb lcall xor jae outsl mov movl les inc pop inc fsts and cmp incb add int mov mov xchg repz aad cmp jnp imul shll adc out dec inc adc pushf mov (bad) aaa dec jge adc in and jno mov lods mov sbb xchg mov add pop fbstp dec and loopne cli sbb jae push je and lcall xchg sub push ss xor and out add sbb jnp or pop aaa rcll fnstcw mov movsl das repnz cmp cs aas (bad) mov xchg jp or scas andl ds add cmp (bad) cwtl sbb xchg pop outsl sub dec mov cli mov mov jg inc dec loopne iret loop popa sbb add lret xor adc mov lahf xchg push xor sub xchg mov xor jae sarl xchg push scas jl sbb lret repz xchg sbb push sbb jge stos rcrb rcrl ds pop mov cltd insb shrb xor test jnp int jb cmpb xlat lods daa add mov sbb cli and cld in jbe sbb adc jne fwait jl in and pop cmp mov ljmp popa popl inc mov sbb pop jp sbb xchg inc cmp add dec lods jmp sub ret (bad) mov pop cmpsb movsl int inc scas and adc sub push xchg roll leave adc imul pop dec adc shld inc xchg cmp cmp clc iret mov lcall int js mov add aaa add mov pop jnp dec lahf mov fsubs pop loope pop and imulb cmp hlt pop mov and cmpsb xor sub fmuls jo cmp enter std mov repz cmp xor hlt decb cmp ja inc cmp loop add jne cmp hlt pop or sub fstp add loope jae pop inc or cs lret or inc dec push mov mov pop inc or orl fcoml and (bad) sbb or lods shlb icebp bnd push out outsb cmp fcomps sbb (bad) (bad) ret sbb cmp lods aam scas xchg sub (bad) je fild push pop pop (bad) and mov push inc repz arpl xor sarl jb ljmp xor sbb outsb data16 je rcr cli pop insl mov mov (bad) rcl pop inc xor push push addl inc mov dec ss cmp add xchg daa jns jnp adc adc mov stos mov pop mov sub or sub ja sbb gs iret movups mov adc inc call xchg movsl mov mov pop addr16 push dec cmc sbb scas sbb lods xor sarb fwait aaa outsl cmpl pop popa mov frstor push psrlw push cli fs pop xchg cmp hlt test call notl xchg xor mov inc xor adc or ja out adc push dec mov shlb out subb mov cmp idivb cmc mov (bad) in and sub in nop hlt (bad) mov xchg pop sbb sbb or mov rorl ret cmp or into pop inc push and jecxz outsl cli int3 out out push scas nop popf add orb in xorl or insl cmpsb mov in ficomp rolb inc lret xor mov sub sbb adc repz rolb inc push xchg xlat out mov jle jae mov xor (bad) or repz or out pop jmp (bad) frstor cmpsl xchg rcr jge sbb popa call addr16 mov pushf in xchg inc pusha jl repz sub out idivb push (bad) icebp fistp int fistpl jecxz add lahf cli jo scas hlt cld les cmp jle lcall ljmp outsb or jge inc dec inc jmp pop in adc loopne daa push jp in xchg sub push adc rcl dec roll adc cmpsb aaa xchg test imul (bad) cwtl xchg mov cmp mov push xlat and outsb sbb out sbb stc imul xchg sub jne loopne pop into nop push mov clc push and xor cmpsl outsb jno add inc fidivl ds (bad) hlt (bad) jp mov ja xchg pop sbb cmp lods aas mov out xor popa outsl adc mov and ret or jbe jl inc (bad) sbb inc jns sbb pop xchg fild dec push lahf dec (bad) or mov repz or dec (bad) fwait ret sarl mov scas (bad) hlt int3 mov call sub xchg mov lods mov (bad) popf mov (bad) fcomps jae pop ljmp lahf gs xchg sub (bad) shrl xor jmp push (bad) sub add fwait movsl aas outsl or xor jp int loop frstor aaa jno or (bad) out mov mov inc pop out fmull mov and jae cmp jo (bad) push jle negb pop xchg cmpsl arpl mov ljmp sbb inc aam ret (bad) mov (bad) mov inc jmp adcb fisttp imul mov sub addr16 mov pop int3 dec out rsqrtps sub iret push cmp and (bad) (bad) jmp add outsb fs xor xor add add pop add add add incl add insb dec add insb dec add insb dec add imul imul imul push add (bad) (bad) incl add add (bad) incl add add add add push add add add add add add add add pusha es add (bad) (bad) incl add add add add push add add add add add add add add call (bad) (bad) incl add add add add push add add add add add add add add and inc add (bad) (bad) incl add add add add push add add add add add add add add jo inc add (bad) (bad) incl add add add add push add add add add add add add add clc push inc add (bad) (bad) incl add add add add push add add add add add add add add xor inc add (bad) (bad) incl add add add add push add add add add add add add add lods and (bad) (bad) (bad) incl add add add add push add add add add add add add add pushf daa inc add (bad) (bad) incl add add add add push add add add add add add add mov inc add (bad) (bad) incl add add add add (bad) (bad) incl add add xor test inc add add xor cmp inc add jmp in sub push mov push mov push pop call push push push mov movl mov and mov mov and mov mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl xor cmpl setne neg mov lea call movswl test je mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl push jmp lea call ret ret mov mov pushl call mov mov mov pop pop pop leave ret push mov sub push mov push mov mov call push push push mov movl mov and mov mov and mov mov mov pushl call call push lea push call mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl xor cmpl sete neg mov lea call movswl test je movl movl movl movl movl movl movl movl lea lea call lea push lea push lea push push lea push call lea push lea push lea push lea push push call add call push call mov movl lea lea call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl fwait push jmp lea call lea push lea push lea push lea push push call add ret lea call lea call ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call nop mov call jmp ret sahf sahf sahf sahf jl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add xor or dec movsl or pop movsl or push or mov movsl or mov or mov or les add in or mulb or push cmpsb or and or inc cmpsb or push cmpsb or insb cmpsb or (bad) cmpsb or nop cmpsb or mov add xorb or int3 cmpsb or fisub or add add adc or sub or cmp or inc cmpsl or push cmpsl or add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor rolb pop jbe popa dec jb jae insb je push bound add push imul xor incl pop pop jbe popa dec bound gs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add testl popa dec gs add push imul xor add push imul xor imul fs imul xor add stos add fs imul bound pop pop jbe popa push popa jb jne add pop inc dec popa je outsb add insl jne add pop inc dec je outsb add push add dec gs add lods add jbe popa inc jb gs bound add bound jb gs je add 