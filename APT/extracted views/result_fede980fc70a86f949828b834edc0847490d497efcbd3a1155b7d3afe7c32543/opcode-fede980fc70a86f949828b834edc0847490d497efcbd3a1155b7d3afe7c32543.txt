(bad) (bad) call in push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call addb add packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb pop insl jnp sti mov movsbl adc adc adc sarb rcl or adc in in inc pop daa push or std scas pop or mov inc jmp jnp ret insl fstpt push lea push mov (bad) or add adc (bad) jne push (bad) jg mov lods cmp mov ficomp or xor sub xchg outsb loope adc (bad) call clc or push push pop or cmpb je jnp push in jbe adc adc cmp adc fimull xchg xor sahf and push xor mov or imulb daa icebp jmp xor ret ret (bad) mov pop jne mov mov fldcw jnp sbb sarb je push push call fcmovnu scas mov hlt sbb sub or jl mov je cmp jae mov xchg jmp or adc mov je cmpl jbe or add out sti mov or les neg sbb inc mov in pushl leave or cmp ja xchg and ja jg adc rolb or add rorb fldl and ffreep or movw in imull mov xor mov mov mov ss mov in or mov mov lea mov pop (bad) mov je jae jae fistl xchg hlt push push jmp gs push cs ja mov add sub fildll jl lock inc push cmp jbe fcmovnu test cmp push sahf or insl sbb or sub mov mov mov add or mov sub nop adc cmpl dec mov loop mov mov cmp add push sub push pushl mov push pop add jg pushl push dec addr16 (bad) std in fidiv out add xchg jl int3 mov sbb mov nop or add fisttpl xchg aad cmp sub push fadds or xchg nop test shrb cmp rcl fnop outsb dec cmpsl cmpl xor inc push scas mov je ret mov decb (bad) adc lea push push push repnz mov cli or test pop pop repnz push mov mov jg inc addl mov lock fisttpll mov add leave adc push or mov test or adc push jb push hlt mov enter rorb inc adc sbb add mov xor lea mov add xor mov mov mov add lea jmp std fisubr je (bad) xor lds mov mov dec sub cwtl sub cmp adc cmp insl lock mov push sbb fisttpl add shufps adc out mov push push (bad) (bad) std mov pop jne mov mov fstl adc mov popf sbb or mov sbb or int test mov ja jbe pop pop jo jp pop outsb subl (bad) gs inc clc adc mul pusha mov pop in push lods pop pusha push push lea xchg inc xlat js jecxz jne push adc add add add incl and xor jnp fnsave in push dec andl test mov (bad) sti jmp and push or xchg divb mov cmp jle cmp pop gs outsb mov inc add inc jl leave inc dec out push js xchg notl outsb xchg adc lret cmp mov cmpl aaa mov mov lret jno add xorl mov mov jmp (bad) (bad) push mov push outsb xor mov fcomps fsubrs mov out out cmp mov add leave adc mov or push mov jbe jbe sub mov (bad) xor add xchg bound fnstcw adc or push movb mov cmpsl aas test or inc mov jns movsl dec mov repnz iret je movsb and and and jns dec je mov lret bound je mov inc adc xchg je test inc cmpsb or pop mov fwait (bad) push cmp add cli mov and repnz jne (bad) mov or movsl mov add stos ja inc jmp add sbb daa xchg into cli lods fisubr fnsave std xlat fiadd push clc add sbb inc or jae mov pop lods push fbstp add call les pusha inc mov cmp xor mov mov ss ret outsb inc lea mov mov stos in dec and jne lar fwait mov in mov aam cmp jae cmp je popa inc inc cmp lcall fdivrs sahf ret add sub mov jmp mov int3 push or or add push pusha (bad) adc lock dec (bad) in in sub push test mov in (bad) jne mov in out lea adc inc stos push in pop fcmovbe fwait int daa or or movb scas stc aad adc mov add inc cmc xor push ret add jle mov nop mov add sub lea cmp or (bad) lea (bad) test dec jno pop decl stos mov addr16 out cmp mov mov xchg (bad) xor add fsts mull sub test mov iret fist outsl mov push lea (bad) incb jl addr16 js jns push clc mov sbb jp push orb pop cs pop add adc mov push push pop push orb neg pop lret outsb jle bound pop lods mov out add mov insl pop adcl xor sub sub push xchg and sub (bad) scas inc xor sbb int and xor fsub push pop sbb cwtl sbb xchg xchg jno jl jae fs mov (bad) or sbb fsubl inc out xor push sub or lods sbb mov or jnp jb outsb push add push mov sbb mov inc pop xchg aas fdivs ja push aas or dec inc pop popf push insl or inc push cmpsl xor mov decl xor mov cmp inc dec sub adc mov adcl repz (bad) pushfw je (bad) out mov iret sar adc add testb nop fwait (bad) je stos adc popfw or cmp push out test outsb rclb aaa add mov or add outsl shrl ret add sbb adc out push out out loopne mov dec push xor jecxz loopne push das adc imul pusha mov jle lea inc lea or cmp ss int sub and int adc xor je (bad) test jne repnz push jno daa aad inc pop mov xor cmp sbb inc cmp lret jne rcll fbld pushl jo cmp adc loopne ret adc sub xor fsubp sub cmp push and jecxz stos aad adc push adc push add mov sbb insl in arpl push pop in add rcrb je push jmp sbb outsw sbb xchg inc adc mov mov ret ja andl inc add and imul pop (bad) pop push or xor mov fstpl mov pop pop jmp lsl pop jl rclb sub push pop jmp test fldl push ret mov push push mov mov add push jbe add test xor fwait jae mov or rorb xor scas cmp adc sbb mov shr aas xor fisttpl daa pop ss lods stos ret sub cld adc push inc arpl rcll push in and call test xor out sbb lcall (bad) insb sti mov lret sbb sahf or in push mov lock jbe push or xorb push push nop push loop mov clc and mov pop int mov jmp das ficom call (bad) pop inc jb (bad) lea lds jae inc or inc push fdivs das ja adc adc fcmovu cli cmp subb sbbb jmp push push mov test leave idiv mov orl (bad) pop orl pop mov xchg xor cmpsb imul adc pop or mov insb or add pusha push rdmsr ret shrl cmpl xchg rolb pop xor dec xor test cli mov fscale arpl add dec jns sbb aam inc pop cwtl adc mov adc bswap push inc push repz stc jge sbb fs push sbb mov rorb adc push iret jmp mov fnsave sti adc jns cmp mov jne sbb add inc sahf sti jo cli pusha sti push out aaa xlat push cli jo movsb push xchg xor and int xlat pop sbbb add inc test sti fcoms adc xor or popa mov and stc xchg sub adc loopne jbe push mov adc sbb es pop push pop push push jne pop push xor lock fiaddl sbb push push pop push sub (bad) adc adc aam data16 cmc mov movsl lods cmp cmp je les movsl add fadd or jmp mov popa jae repz or push mov pop mov inc push jecxz and mov mov mov int3 sbb mov mov push jne das cld cmpsb mov in push inc das and push imul ds mov fldl testb cmp pop add cmp or sti push out lods dec xor jmp es inc lea icebp mov sub jmp fsubrs movl mov sub and clc ds lock dec movb add mov push je add jbe or pushf loop adc loopne loope inc xor or sarl or jg pushl jbe pop arpl bound std es lds lds pusha mov dec mov hlt dec test rcrb pop shlb mov mov fsubl jnp push xlat push imul leave dec rclb mov xchg lret adc mov loopne jae or ds cmp xor in push add inc shlb insb jnp add jne xchg jle push (bad) xor cmc in out loopne pop push jb je leave xlat push push mov test push aad lock aam xor lock popa (bad) push js push push outsl mov ss jmp push (bad) fnstenv cld cmp cwtl mov push pop mov mov sarl stc add cmp je (bad) aaa push cmp jae outsb pop xlat in push pusha psrlq mov mov jl fcoml push xlat outsl push or and dec lea and addl and mov inc sbb test mov insl adc adc add xchg cwtl add pusha pushf xor add enter (bad) jmp xor xor imul xorl pop rep cmp push pop clc rol cwtl and xor mov pop mov inc jbe push push in popa shrl pop pop adc call jne and pop mov cli adc and jmp pop xorb add idivl push push shrl es repz mov xchg push jl negb cmc xor pushl mov outsb rcl pop ficompl sub pop pop testb orl jno call mov out icebp cmp or mov andb mov push mov add push lahf pusha clc lahf aam inc adc push and cltd call inc lea or lea or jle inc pop scas rorl push push das pop push sbb ret sbb rolb push (bad) add xchg decl mov lcall scas sti rorb dec icebp cmp nop pop scas std mov jo jmp fs add je and inc lea add add or pop movzbl inc jmp ja addl dec aaa add inc cmp pop mov unpckhps inc xor mov add xor test sbb xor mov add push sti and addl cmp or mov jmp cmova movsl fsubrs inc push fnstenv add cmp cmp push clc add add maxps sbb outsb decl and xor cmp mov add jg js mov ret test enter movsl push decl and test jne dec cmp jl or jmp outsl xor mov mov idiv (bad) fisttpll sarl jne cmp jne cmp jb cmp jbe cmp pop jne fistpll sarb loopne jbe (bad) inc push dec (bad) push cwtl lcall ret push in push movsb pop jno insl inc roll imul hlt mov in pop and ret inc lea push pop aam push and je push push and aad clc xchg adc mov pop mov jne sbb mov xor pop add rclb push xchg je add push jne mov adc cmp int3 cmpsl js test pop add jne jbe test cmp (bad) fwait loopne jb sbb sub bound dec loopne or add or inc loopne adc or sub push adc test dec adc sub out inc sti adc and std mov adc add add in outsl imul push adc mov sbb or scas pop jl sbb loopne push push push push push data16 push movl add push test sbb jne (bad) inc in sarb cwtl xchg cmp pushf sub xchg lahf xchg cmpb outsb or sbb mov fsubrs in pop or dec enter push test lods or adc mov push or jb mov and sub nop sbb mov (bad) xor adc fidivr add mov cs ljmp adc loop sahf ret je mov (bad) aaa les push jle lea loopne jle cmp jge inc add enter popa aam int push add push push (bad) cmp xchg sti or cmp fucomi in sub inc adc sub push or push xor jmp jns push mov test inc pop out das sub cltd stc (bad) arpl mov lock push jle fnstcw push sbb mov xchg adc outsb adc jle imul mov add adc add les call cltd pop imull fwait outsb mov inc test cmp lea and clc icebp and std pop push cmp push sub jge pop movsl fsubrp push adc cmp jl sbb inc cs sahf jo rcll mov pop mov sub imul cmp (bad) sti push add push push add fwait xchg and inc push js (bad) add sbb insb mov xchg mov xchg inc cs jg hlt add add push inc lret scas jns adc mov add mov test mov mov cltd xchg add and orb mov xchg sbb push mov cs xchg cmc mov cmpb adc add fwait fwait lds push cmp cmp xchg rolb sub mov daa loope dec sbb jmp movsl (bad) ljmp out in sbb sbb sub add or jne or and dec aam adc les jo call test inc mov and bound push push xor cmp andb popf mov js enter xchg jo dec cmc pop or xor adc sbb pop jns pop inc cmovs inc add int (bad) or pop jl and mov sbbl je add fistpl imul mov push lret jo or cmp sahf enter stos jle adc sbb pushf clc ror mov dec inc rcrl push and pop imul pop aam cmp movsl notl jge leave rorb adc add fwait pop sarl mov std scas pop addb adc loopne mov push mov push jg fcoms jge mov ficompl mov repz loopne ja fs add mov and pop nop std (bad) out xchg adc cltd mov call mov fstpt or sub pop push movl add aam and lahf andb arpl or and xchg jmp adc fmuls cmp add mov test mov je dec je add insl (bad) mov xchg ja or jmp or jg loopne bound mov clc push int3 add rolb scas mov mov push aaa push push outsl insb or mov (bad) out pop sub insl int3 jo jg das and adc call icebp inc sti outsb in das push inc aaa neg sbb and add xor mov push mov aam in mov inc repz mov or push add lret inc jl add dec sbb addr16 add dec sarb adc pop and jns push insb inc add adc xorl jmp and int inc dec jo rol das (bad) mov mov push push jl pop pop mov xchg fcompl testb shrl (bad) fsubr adc jle les pop add mov pop aam decl mov xchg push dec push or adc aam cmc maxps test (bad) cmpsb sbb mov mov arpl or pusha movsl clc push adc das cli or test ret (bad) xor dec stos call std je cmp jb push jbe add movsl sbb xchg xor inc rorb pop mov push and push sarb pop or lea xchg int mov pusha aas push push mov sbb insl dec push cwtl xchg int jbe adc cmp pop mov js push adc or inc push mov adc mov nop pusha push loopne out inc in jp repnz dec mov inc add mov sbb xor lock orl push pop jnp sbb mov jne das adc addb xor js jge add add fcoml xchg lret adc loopne pop scas shrb movsl or lfs call jo mov or add push or xchg or mov push and push in jmp lea xor call push sbb pop (bad) lock jnp (bad) adc (bad) push mov xor es idivl repnz push adc add and and mov mov or mov cmp fstps dec jge mov mov cmp inc xor mov (bad) jge push (bad) mov les pop test lret (bad) xor sub cwtl shrl sub vcmpss cmp push add cmp dec pusha cmpsl mov ret jne sub jnp xor mov and fwait mov dec jg sbb nop push push adc mov mov outsb adc sbb test and add into add (bad) add mov cmp fistpl call push incl push push adc mov or pop push daa add insl add push aam inc sub add mov movlhps dec adc push pop xchg ret inc sbb jmp sub push push repnz xchg push repnz fcoml movsb xorb test xor nop or mov pop sysenter rclb int3 dec push cmp icebp push loope inc loopne sti in add pop and cmp or push fcompl (bad) sbb (bad) fcmovbe jbe in adc push lahf sbb fdivr in mov in push add push push push loopne in ja nop mov cli add es loope adcl xchg mov sbb mulb push or inc push sub lea call or (bad) sbb pop mov loope jge mov mov jo mov cmc add fnstcw out pop lret and push ret push cmp fninit lahf jne jnp shrb inc lock pop mov loopne push xor dec ja arpl push mov or or pop notl mov imul or and cld and std and decb or es adc inc (bad) mov mov and std sub fwait cmp add in popf (bad) or add subb add jl inc fmull and pushf xchg or daa loopne out gs sbb shr fsubs jne mov lea push and add gs mov add rcl aam inc aad inc fnstenv fdivl rcrl jp xchg jnp mov sbb push cmp push sahf inc add testb sahf and je or mulb lsl jne dec int3 sbb mov push jl or add push add push insb or add out (bad) sbb sbb sbb mov ds mov mov push sahf adc lahf cmpb and push mov mov mov add cld cmp pop sub es push mov push push mov and test mov jbe mov sbb jbe cmp and jmp pushf fisttpll xor cmp mov pushf jge stos inc sbb push int3 loopne sub dec nop cmp or mov imul adc (bad) fldt ja push add sarl enter scas enter jb mov mov adc movl clc adc out les les mov fadd inc enter cld stos gs or sbb loopne or bound mov jno pop mov add push sbb or xchg sub add stc add pop jle fcoms and jne push push push cmp add or js outsb push lock mov sar movb and test mov andl jnp push xchg cmp push sub sbb add add cwtl out pusha into adc mov loopne faddl pop lods add movsb mov xchg push (bad) in mov adc push (bad) sub push mov es (bad) fildll cltd and add mov sar inc shl adc pop sub and jp mov (bad) cmp jg cmp jne pop (bad) pop in in inc sub push pop jne add jmp sbb adc les or test push push fimull sub xchg add xor xchg jg mov mov je cmp jl cmp push cld pop or add inc outsb jp test pop cmp dec dec sahf push jns out daa popa add adc adc xor adc cmp push stos or pop add pop cmpsl cmp je pop push jae cmp je sbb pop push (bad) movb mov push rorb add push jmp cmpsb ss adc ficom stos insl test or lock push adc add or push cmp inc dec fdiv sbb movb clc push inc clc fldt xchg fstp adc cmp and ds loop or clc push sbb test jne mov fadd mov add pop or fmul jo inc jb push or fsubrs movl push adc sub fistl or or mov mov lds cs jo out test xor std pusha adc push push mov xor repnz sub popa pop inc jge (bad) dec and ret pop iret push sub fwait aad or sbb xor mov cli aam xchg pop xor push lock inc imul sbb pop mov push mov jbe or push insb iret mov dec xor jne add add cmp sub xor out dec push lock add rolb and mov dec fistp clc push in mov add shlb in loopne mov or popa add sub mov xchg sbb xchg into clc lea (bad) adc inc add push mov mov or sbb jmp mov (bad) mov mov push addr16 push mov cmp imul add cmp jl cmp (bad) decl pop mov mov (bad) (bad) out cmpsb mov (bad) adc jbe pop mov xchg jne cld mov cmpl subl adcl in shll or nop arpl lock mov xchg xchg jge mov add push push jbe push lret push dec cs xor mov lea testl pop mov popf mov pop dec ds in fcomps pop mov and dec inc sbb dec push push pop inc and cmp push std add jmp push jmp gs xlat in mov (bad) in roll jecxz fadd out es add add or add mov add add nop movsl in scas add add add add test cmpb cmp loopne cmp inc daa test push mov ret test cmp inc add or xchg fnstcw leave out push inc in mov test push loope mov jl mov cmp outsb pop outsl lock mov pusha and sub pop push inc decl xchg ret adc dec mov cmp cmp cmp out push jge or idivl cmp es or (bad) lcall adc add push cmp inc fstl insl sbb add cli paddq js xlat push pop mov mov in cwtl fcomi mov mov lea and stos sbb cld add andl pop fnstcw sar sub test push pop inc push inc call sub lahf jge cmp imul or mov sbb je add pusha and adc xchg add adc mov push mov jo inc adc test cli jl test dec jbe pop xor sub xor jle ret xor jle xlat mov clc mov dec sarb into jmp jge js cmp sub pushf xorb mov pop or jbe out sub pop or inc sub or xor outsl mov pushl outsl out sub jae cmp pop jne jnp fs (bad) aas inc std add cmp aaa orb add sub movb adcl mov and leave js mov inc jmp add xchg sub sbb loopne (bad) push sbb jbe or xor jbe dec idivl cld cmc xor pop add in sbb sub jmp mov lods inc inc mov ret adc sub mov pushl cmpb shlb jmp adc je adc xor jmp add push lods sahf mov repnz sub pop pushf lea aad cmpxchg push or inc lds xor push jmp insb sub mov push in sbb push xor mov (bad) jns add mov rcll adcb cs push mov or repz insl mov inc imul jae mov rorl cmp jge je int3 or add decb push or mov test fnstsw jb mov sbb iret push add mov add xlat mov arpl push push and cmp adc test jne into mov mov sbb adc add dec dec sbb mov into sahf add xor imul and lock sbb pop push or or or fwait iret mov hlt pop iret aas xchg sbb adc je cs and loop sub cld faddp out add add cmp jb mov lock je es xchg push mov pop push jge xor jo pop adc push inc mov add dec ret or xor pushf push push cmp fist sbb dec aam (bad) sub sbb and push iretw adc daa mov or int sbbl push mov xchg adc xchg fisub push mov push add and push mov lret (bad) pusha les jns (bad) aaa jae xor clc push jmp pop jl and (bad) (bad) jl or xor popl and out mov sarb rolb sbb in jne or xchg jecxz loop jp es fmuls test imul cmp mov (bad) add jne and pop imul or inc or push mov mov sub (bad) pop xchg nop bound adc in sub xor jo push mov inc cmp rcr pop mov pop lock (bad) push and or ja sub aad adc jg push add cmp sbb jmp cmp mov cmp movd je cmp pop pop pop ljmp cs and mov mov dec addr16 and rolb into mov mov mov jns xchg pop test or xchg pop inc outsb (bad) (bad) push js stc pop pop imul and and in sbb mov insl int sahf dec clc lea je adc dec pop push push movsb xchg icebp arpl in loop and mov lods push (bad) pop insb push xchg out ret (bad) aaa insb add jne xorl add sbb add aad dec mov shl es xchg fsubl adc xchg xchg fs push push xchg outsb sbb adc push adc and cmp fildl movsl bound fimul adc push je sub xchg fmull mov pop int3 or roll push ds mov idivb outsb popa sbbl call push shll push rdpmc pop stos cmp out dec jne xor add adc out xorb cmp lods mov cmpb clc (bad) xchg adc adc sub sbb mov push dec add orl scas xor and pop and fwait loopne push push mov add cmp movsl push pop int3 jb mov or orl or jo dec or lret daa dec dec jg sub inc mov sbb jo insl mov pop add outsl lock aad lea cmp mov adc add add sar dec rclb adc loopne push jg or mov loope xchg push inc mov jmp mov or push cmpsb sbb bound or stos push dec jle inc cwtl test xor sbb fisttpll ljmp sub movb pop das insl mov push addr16 pop mov (bad) ja jl or mov mov rolb push push push add clc xchg adc lods sub ret inc adc (bad) arpl pop cmp lcall imul dec adc movl or adc push fistp push inc push mov add and inc imul (bad) add push inc add sub xchg xlat stos (bad) mov push push pop xorb inc xor ss mov movsl jno pop pop xchg mov pop arpl xor add mov mov inc push pusha pop sbb in ljmp ds adc dec aas pop popa mov xor lock imul insl repz add daa adc dec pop dec dec sbb lret bound sbb mov call cmp inc dec imul push lods xor add gs mov jnp arpl mov out mov dec add jge jmp adc push add cmp pop cmpsb in push inc mov rorl xchg push inc and lea add inc dec xor int addb sub mov inc test add xlat push (bad) jmp cmp dec dec mov orl dec pusha fistpll or add push push adc or pusha add mov or add xlat push lods jnp jl or call push std test push mov xchg add test sti addl (bad) push jne pop dec or jb or mov mov mov orb mov js nop pop cwtl add xchg rol cmp andb lea call pop dec loopne out sub lret adc add mov mov pushf (bad) and sub and sub cmpl outsb push xor arpl jge inc ret cmp fsubl repnz lret xchg ja in pop enter add sbb pusha add xchg lock push and inc fcomp add and xlat sub js add loopne movsl insb xchg and push push cmc sarb inc fistl xor lock call dec test test sbb ret enter pop negb into pop es sbb loopne fcomps xor add push sbb jge xor pop in pop inc sub jne push arpl fldenv and or dec inc (bad) hlt rcll daa dec push push sub adc xchg scas imul das in inc sbb (bad) xchg sub arpl or sti xorl sub out or fstps in arpl or jo cmp (bad) push inc xchg and add (bad) nop inc fmuls mov adc test mov in and dec dec dec lret test test or (bad) or inc mov and and jns not dec sbb add rcrb nopl xlat xchg lods fadd inc bound add xor or jmp pop int ljmp or add xchg push dec mov or imul push adc sbb test outsl add pop (bad) mov mov lea int3 mov adc dec inc push sub loope sub sti sub call or sbb adc mov add add jnp and cmp orl pushf xor adc jmp pop inc and lods adc addl or arpl sti push and mov pop fisttpll push fst mov ds push aas inc jl scas loopne xor pop mov les pop sbb xlat push or sbb or enter lds lods inc add inc jle add add and mov push jo lret (bad) mov sbb add sub arpl inc mov roll les test add lahf ss adc cwtl jg loop jbe inc mov (bad) add mov push in adc je andl cmp add nop (bad) int3 add inc mov or jns popa push lods enter test dec test ss jnp dec mulb adc ss (bad) pop cmp sub mov aad imul add push xchg les das jne call xchg pop cmp (bad) pop imul orb jno fimul les xor movl inc sub call lcall sub mov addr16 clc adc mov add and movsb loop jnp setle in push jb or xchg lss mov je pop je in fldl enter push inc xchg sub adcb call inc xchg xor add test sub imul test xor sub pop dec incb pusha (bad) cmp je push push in or popf push lea push decl fidiv mov je (bad) icebp int3 fcomp sub xor mov rorb push rorb lret out adc sub lcall fmull rcll std sbb and xchg or xchg mov notb xor add maxps pop cmpsb pop mov sbb js out (bad) das inc mov aas cmp ljmp frstor adc mov fidivl repnz clc or and inc push nop ficoml ja clc pop mov sbb sub jno xor ja rclb adc adc lahf inc push add pop mov sbb push mov sbb push inc add mov mov sbb push loopne aam lret arpl mov dec enter call push jne jge mov outsl fild test mov push mov or mov sbb xchg mov orl (bad) jne push pop or ljmp and dec mov lods sub inc add add in ds ret js call sahf in leave ret jne push add inc push cmp xor mov push scas inc push andl lock lea jl pop cmp xor sbb and cmpsl mov rorb jo mull push pop jge clc cmp mov rcrb (bad) imul add idiv mov imul cmp jg (bad) clc fistp mov lea ret neg sub add (bad) incb cltd pop idiv sub jne xlat ret cmp inc mov push out lret rolb jbe cmp popf mov xchg sbb outsb adc test adc xor mov inc xchg ret dec xor sbb dec xor push or jne add fimull (bad) sbb pop in inc sbb orb jne adc push popa xor xor mov dec push push xor stos shrl add mov adc mov jmp mov jmp fwait ljmp dec aam cmpsl mov clc or xchg je inc add jle sbb add sub pop aad xor pusha push pop stc mov push inc jmp sbb fmuls test push sbb dec xchg popf les aaa imul les loop out push inc lock add inc add cld ds add loop aad cmp push pop (bad) out inc lds adc pop mov faddl add pop cmp jne call push pop cmp pop add jnp stc pop push test sub hlt sti fwait sbb mov sub sbb (bad) cld and push and fwait and aam dec push push adc sub (bad) cmp outsb pop and cld pop pop inc xor add cmp or or pop mov jb loopne,pn cmp (bad) mov jmp mov xor jo icebp (bad) jnp cmp jae lea push loopne clc (bad) lea popa out sub and jb loop add mov mov cmp mov imul inc nop into rcrl add xchg inc mov fs ss add (bad) je pusha (bad) jbe subl sub mov mov cmp and and pop das cli pop outsl int3 sub adc mov dec mov adc ret cmp sub and hlt nop sbb and bound jmp cmpb push cmc cli loopne out jle shrb xor xor shrb jnp nop xchg movl and pop adc flds jl ret adc xlat rclb sub scas adc cmp adc pop addl mov call js into leave mov adc push sbb insl sbb xor ja jno add sidtl jo sub outsl dec push and mov pop xchg adc mov and clc jb loop push mov sti xchg call sbb sar popf push jno cmp cmp or insb dec addb xchg mov int3 add or sbb mov and or cmp or or shll ds out xchg test and cwtl add (bad) ss and inc ss mov jo or mov outsb cmp add mov clc fstl xchg add xor push scas loop movb inc (bad) sbb cmp mov mov outsb and aas (bad) jnp fnstsw adc (bad) gs orl (bad) dec retw push pop movsb ret test mov inc sbb inc das jp sbb dec push sub notb popa push icebp xor fnsave rolb in mov xor mov or mov sbb (bad) cmp orb add push push add aam add fistp push jne loope imul out rorb xor sub or sbb cmp mov les jl adc pop test inc jmp mov (bad) mov inc stos clc into call inc insb jnp mov xchg mov inc add mov mov push jnp and add out add addr16 xchg or push (bad) mov lea add (bad) lea dec adc (bad) and sub jecxz leave inc cmp add sbb je and adc push and sbb mov cmp add or adc cmp dec mov (bad) jns cmc ror out xor pop out into lret inc outsb adc push movsb sub sub jne xchg jne adcl idivb inc and fs xchg adc adc cmpl jae std popl ret cmp cli push and or jnp or test in adc loopne xor sbb in and imulb movzbl sub ss and adc xor sbb fldl mov jbe mov sbb adc lret leave push loope sarb mov rol (bad) int mov cmp inc insb sbb add cmp fiaddl push je cmp sub adc add mov push and mov pushf mov mov jbe aaa and mov (bad) aad mov clc push (bad) fs out xchg sbb movl iret push pop add mov or pushl add (bad) dec out xchg add jnp mov ret pop outsb enter nop add imul sub jl adc add add jge hlt lock dec push mov clc push lock push sub iret adc sub outsb jnp add push and (bad) mov jmp pop inc loop add mov mov sbb cmp sarl jo je (bad) or jb push push outsl xor pop xor ret mov pop and mov nop fwait je (bad) not mov sub jnp xor pop iret ret xchg push push push or push xchg mov insl scas test loop fisubl push ja adc adcb or mov jo add fisttpll jmp lea fldt (bad) xor pop inc add push dec loopne and sbb add push xor and mov notl mov add xlat add pop jb sbb xorl adc adc smsw jae sbb das mov pop mov gs mov add pushf ds cmp push xchg push and mov xchg cli rorl pusha or push jmp ret cmp add leave popa mov sub pop add notl push lds inc popf jmp inc or test dec cwtl push movsl cmp inc fcompl ljmp add pop test and mov orl inc sarl pop js jo lods mov sub push cmpsl push mov and cmovno push xchg dec js or cmp add xlat and imul jg cmp mov and sub jno dec stc xor and arpl cmp xor test pop dec inc pushf and cmp cmp inc adc inc test movsb push add icebp loopne or mov adc sub mov call inc shl push jg dec or dec and es sbb pop push xor js movsb xchg sbb push popf (bad) sub insb inc add cmp dec movsl cmp cmp sbb xor jbe push pop and test cwtl mov cmp sub mov mov movsl mov lods add inc bound lock and add or sti pop mov jb add xorb insb ret push and cmp sbb and push xchg sub or push in pop xor push push or divb adc xor xchg sbb adc sub adc xchg xor pusha adc cmp pop (bad) arpl rorb add loop popa jl (bad) sbb inc add (bad) in adc mov sbb movnti out sbbl in pop mov adc pop outsl mov push mov add add mov and adc call mov adc in mov pop out imul int decl (bad) pop cmp add mov sbb movsb or push pmulhuw cmp cmpxchg roll xor loope xchg sbb sbb or (bad) xor push inc push mov (bad) into push jmp fbstp push setl mov cwtl pop push in jae imul inc mov test imull pop jecxz mov fld into or (bad) pop push mov pusha cmc xor pop or stc repnz add or add negl aad int push (bad) je loop fdivs sti adc fs xchg and dec mov adc sub and xor inc pop sbb jae and inc sarl adc jp lea dec mov les or or mov aas pop add mov sbb inc jno pushf shrb mov cwtl test lock mov bound mov cmp push shrl je jbe and test (bad) orb inc jbe cmp adc (bad) dec pop sub xchg popf cmp les ret push xor and add xchg mov cmp xchg std dec sbb (bad) adc adc or lods sbb push add mov sub jmp (bad) jo push jbe pop mov rclb adc dec add inc stos loop popa inc pop mov add and add sub jb arpl cwtl xor popf call lods ret fadds and test push mov push shr ret xor add adc add pop xchg dec dec inc sub mov inc push mov xchg (bad) cld aas push sbb jb imul aam hlt push add push cmc push or inc mov dec sarl pop push in adc and sub (bad) mov dec pusha ja cwtl aam xlat inc je mov ret push pop inc and fmul (bad) js add das es fcoml (bad) dec rolb push mov lock add hlt push jg adcb pop call sub jle inc mov fistl dec jg pop jmp cmp movsbl (bad) fisttpll loope mov and jl lea mov mov sub data16 inc sub call hlt push jbe aam in jbe jle jge in xor add (bad) (bad) mov hlt inc pop cmp loopne mov mov lock (bad) mov add mov push cmp pushf (bad) xor dec add fnop in hlt jo inc fmuls mov rorl inc xor aaa mov mul xor data16 in or sti decl cmpw je inc inc sbb stos push test sbb cmpsl mov iret jle adc in pushl add out sbb in push cs aam sub je inc cmp ja push jl ja push add push inc enter push inc cmp sbb xor fs mov push arpl sbb add mov ss in cmp jb lods or aas nop scas cmp dec xchg push mov sub les add test fstpt jb int push jns push scas dec fcoms in insl adc xor insb jge jl es jb push les sub js mov fnsave push jno cmp and fistpll nop and insb negl xor sbb and push shrl xchg test and out idivb jo adc outsb lret nop movsl add sahf aam gs mov mov div and pop movsb and aaa bound or add xchg pushf mov movsb cs (bad) push mov jo iret stos out pusha push cmp xchg inc mov xchg into sbb pusha lods add fdivs xchg stos test lods movl or popf push add ret ds sub (bad) je xchg mov gs movsl mov lods mov add or xchg mov mov mov pop ss ret cmpsb mov mov jns (bad) add inc js lea push mov int lea and and lret push mov jecxz xor mov (bad) cs xor adc loopne or mov pop loopne in shrl inc fmul cmp mov add pusha cmp inc scas sbb pop ret inc xchg push pop and stos mov fs or imul mov aam ja adc cmp sar add mov je mov imul shr cmp fdivrp xchg out (bad) jbe pop sbb inc inc jbe mov xchg rcl cmp jb jmp add xor add call push pop inc ficompl aad call jo push or in fmul fnsave (bad) fwait adc clc dec cmp sub je sbb jmp gs and gs inc sbb gs xchg jl jp test lock arpl loopne loope sub in sbb dec sbb mov pusha or into repz int push add dec cmp inc and adc pop push jae sarb inc push push sbb mov ss bound push inc cs inc inc iret fdivrs in in jle or xchg pushl mov xor in outsb dec out xor or ret adc jl mov push incl dec bound inc in adc fldcw (bad) daa jo jo jne gs xchg add inc lds or cmp les dec xor enter adc popf jmp pop mov mov test adc sub jle jo imul jne inc in jbe inc sbb dec loopne add add (bad) add pop lret push sbb arpl sarl cwtl dec call enter inc push pop adc stos and xchg and aaa enter cs adc xchg add push (bad) xchg mov sti dec ret xor adc shr cmp fdivrs mov (bad) (bad) cwtl cmp je push loop push inc shrl sbb pop or mov sbb fdivrs es mov or mov imul insb add fsubrs ljmp ret in mov mov (bad) xor mov ret stos mov std cltd or add aaa idiv push je xor clc jl lsl aam ret push stc push adc xor or or movb jne or push jne mov jnp add cmp insb sbb cltd xchg lahf add je xor adcb lahf sub push adc lret adc and lret jns mov js ljmp jne mov pop inc push pusha je psubd mov inc into sub jne mov push fistl inc pop sbb dec mov out dec xor xor jne inc ljmp loopne ds mov push testb mov add les adc or insl push sub or and popf call dec pusha (bad) movsl cmpsb pop jle fcoms or inc cmp mov test pop mov sub pusha dec fs sub leave xchg adc add pusha jl jno dec mov inc inc inc add mov scas daa ret (bad) jne pop dec sbb inc adc or orl add clc xchg push sbb sti lods mov pop jmp sbb lds into insl and nop cmp sbb aad pushf sbb xchg mov jbe jbe adc cwtl pop jl (bad) pop div sub shr adc or sbb xor adc ds inc pushl movsl jp test (bad) negl jbe mov call inc ja cld shlb jne jno dec push add sub cmp sub (bad) daa ds mov nop sub cmp enter push jg cld push test mov dec mov je xchg cmp xor and and add lock fsubrs adc pop lea idivl scas or lea or outsb adc pop in stos cli adc adc lock push lret faddl divl movsl mov mov addr16 inc inc cwtl xchg jbe call (bad) mov mov inc stos add or cmp add cmpb cld loope jl lret xchg add lds les enter sbb cmp ficom ror je jl xor lea xor push cmp mov mov push xchg cli mov iret jp push inc aam xor loope sbb xchg imul stos pop or mov inc sub hlt dec pusha or jge mov mov sbb push add fsubrl or adc push xor sub xor sub cmp dec add testb or stos dec pop in cmp hlt inc std test dec add push loop clc and cmp aam lods and add sbb add and jg (bad) or inc dec je jno add (bad) cmp jl jmp inc push mov xlat add add cmp push add dec lock fdiv pop adc jo jbe push cmp mov fildl push or lret push add inc adcb xchg (bad) adc in xchg jb test cmp dec lock decl jg bound or jmp xor dec adcb inc sub dec inc mov mov aam pop cli and pushf adc inc jge adc jbe add sarb insl imul and arpl imul mov movsl mov stos cmp push mov push push push add push or push push insl and das sbb mov mov push add (bad) or shrl jecxz sbb insb push cmp mov repz aaa mov aaa adc pop add sub fsubrl (bad) mov add std sarl push mov gs (bad) stos pop popa lods and and fsubrl push lcall adc hlt push fcomps fldl stc fs push loopne nop and inc inc cmp loopne cmp aam mov stos mov popf sub out jne pop pop and ret mov fcomps rorl sbb es js inc pop adc mov pushf jb idivb dec or pop adc push loopne fidivr js jmp adc pop arpl jae loopne pop cmp arpl pop mov or mov inc popa and jne adcb popf (bad) push cmp mov sub mov and push or lods ljmp bound mov sbb ss push push pop aam inc jb les les out sub jae fcoml and pop add pop inc lea call dec push stos cmp dec push adc adc add mov stos fidiv test pushf push int fwait cmp (bad) negl inc add lahf mov add dec add mov inc mov faddl fs sub mov lods (bad) push mov shll push out adc cmp jno jb mov or cmp adc lods add stos xchg sbb dec add js ret stos push scas dec sub (bad) sub aad push or addb push out xlat inc mov cs add stos dec xlat dec inc bound sahf and push and jge inc push aad shrb and mov jbe aad shll cmp shrb mov out sub cmp lidtl or in sub pcmpeqw jge adc xor inc cli jg lea and test adc xchg stos popa pmaddwd xlat ret mov inc jl,pt mov daa sbb add inc jne ret por and add mov xor daa imul mov and test andb xchg lcall mov outsl dec adc movsl loop les lea adc mov mov jne xor daa pop je ret dec mov or inc lret lock adc sub push fdivs adc lods adc sbb jg ret ss sbb add and nop sbb or mov push js lahf inc mov ss pop cmp mov mov inc adc ds pop cmp test or push or inc cwtl xchg or dec sbb adc sbb into mov and inc int3 into sbb cmp push call inc lret lods push adc test jno push neg sbb push popa clc insl incl mov and mov aam pushf mov or or add stos inc xor and leave je fsubrl push mov jmp sub call or mov push pop push mov cmpsb and lcall mov (bad) mov add cmp fstpt cltd jo pop inc push outsl mov rorl pop and xchg mov sub dec or mov add sbb leave xlat sbb and xchg xorb and out dec mov jge mov fld inc or hlt scas sti ret inc stc movq mov dec mov pushl or ficompl rclb rolb push mov movsb ljmp sti xchg icebp jp jne pop outsb pop outsl subps xor push sbb fistl aas cs aas push mov push mov adc xor adcl push das rorb mov mov mov inc lods adc or add sub setne dec mov dec (bad) adc stc or lea mov sub cmp inc sub or in inc mov add add lock jge push fs inc sbbb push je (bad) xor jo add icebp outsl sbb outsb das in mov adc jmp jb aaa outsb jbe and (bad) test movl mov aaa pop xor mov or mov or mov mov jg add add loopne add div test je (bad) mov push xchg rcr pop xor jns,pt test xor pop lret imulb es roll movsb mov inc je std jne mov xor sub insl jbe fiaddl xchg and dec inc add sub call adc dec or or into (bad) jecxz (bad) fmull out in loope fdivl loope pop or jp or cmp sub mov fsts lods dec aaa addl or xchg dec fwait or xchg xor int3 cmp xor popa xor imul sbb add mov jbe pop ret mov ret inc cmp adc push inc js ja movl inc push or pop xor adc jb inc into cmp add das adc sub pop pusha lods sbb jbe or insl dec xor push js mov repz ret pop and mov pop add pop insb mov in ljmp xchg fst arpl xchg sub gs out popf loop fwait scas imul push add push pushf cmp loopne rolb xor jge (bad) push stos nop mov rclb push (bad) jb arpl xor push xor sar arpl repnz js or add lods shlb inc cmp add push stos adc addr16 inc cmc jge and jb and aaa hlt mov insb cmp jge mov pusha mov fcomip jl add lods and jg dec or cmp jl add mov jne popl mov ret loope (bad) jns mov push dec daa outsb xchg push and negb and mov shl mov dec insb push ja and ds add mov add sbb inc call sub add or test mov xor stos add loope ljmp dec sub push cmp icebp sub push push pand fdiv dec inc cmp jbe mov push dec adc xchg add cwtl jmp push das sub or sbb lea int jne pop cmpsl push xor dec push cmp (bad) sub aas xchg cmp inc sbb sub mov fwait mov sub mov inc dec jl (bad) push mov or sbb mov mov inc xchg shlb pop popa cli das in mov rcll mov icebp je cmp je add inc mov bound call add inc sub pop in test pusha push lock or std daa mov and add sbb ds push in xor xchg daa mov stc xchg inc add sbb vpmacssww or test jnp sbb add fbstp jl insb cmp add jnp add fwait stc in jl pop mov cmp es dec sbb std jbe jne xor cmp jne (bad) hlt aaa ret mov inc sbb sti jl mov scas push data16 add pop dec cld jl sbb dec or enter dec shll clc add mov mov fs add rcl or shrl cmpsl fnstenv pushl jno imull lret push ljmp adc xor pusha sbb push push inc xor cmp ffreep inc sub inc mov in inc xchg mov xor pushl xchg pop xchg cmp adc adc pusha dec (bad) or push push mov pop mov sbb sbb insb push xor inc inc adc mov insl or inc call (bad) mov lock add or sub inc cmp out negl addr16 jne fdivs shr cmp mov mov es (bad) (bad) imulb adc (bad) push loope test ss mov and outsl and rep push push stc cmp xor mov shr pop push test or xor mov aam ret (bad) push cwtl pop adc xchg imul pop sub loope je add cmp push xchg (bad) out inc jo push mov mov sub sub pop mov adc ja (bad) mov insb ret das push pop mov adc fisttpl jbe xor pop mov lret or or movsl sahf push sub fdiv movsb push mov jno mov in jbe mov pop pop js adc fistpl or jno sub pop sbb (bad) aam mov fs es jo mov out mov ljmp je (bad) jo mov jno ss xor mov push leave fistpl sub add aaa push adc xchg mov inc cmp sub mov ds add ja push xor insl sbb pop and pop ret pop push int shrl pop clc and dec inc roll xor cmp mov adc adc mov add fnstenv mov lea xor pop adc mov ljmp js or mov lahf inc inc (bad) push in mov jb (bad) mov add pop pusha add dec je jo pop pop scas mov dec test inc jmp dec sar ret xchg push dec fwait test push ja xor sti std cltd sbb lds push add cmp jb fs sub or push and add jb sub mov cmp push out insb jl sbb sub sub push (bad) aad pop dec mov xchg fs and int (bad) push aam sar adc cli in inc dec and shrl pop mov inc leave dec inc rorl push push push sbb (bad) lea dec push inc ret mov fmuls jbe aas jo rcrb ret pusha push push xchg xorl inc cli icebp das ljmp lcall pop dec pop outsb and and cmp jmp imul (bad) jne ret std dec insb adc cmovle sub mov cltd cltd shr push notl in movl and mov cli or dec jl enter jnp int (bad) sahf pushf hlt lea pop enter push out dec je inc push sub sub mov mov (bad) out mov adc or sub adc cmp jb adc dec jne call pop loope pop push mov xor push push mov add and ja dec adc jmp lea jb push xchg sub pop jg sub jbe mov xor adc cmp jno mov out inc loope inc mov sub push jge mov inc test fdivrs fldenv test inc sub push sub mov inc and cmp jp (bad) ja push push (bad) mov fcomps lret xchg test adc sarl inc test lret mov mov mov ret jle push arpl out cmp sbb call loop mov inc arpl push jb and lock jle add pop sarb mov aaa or and ds jae test adc and jno push outsb lea xor mov or xor xlat sbb sbb mov add mov adc std push (bad) dec enter in inc cmovae inc sub add add cmpsl das shlb nop daa add fsubrs xor push das pop gs sbb in push sbb cmp mov in or neg sbb ss addr16 adc ja nop lock adc aaa xchg mov outsb add scas leave mov js mov je shll mov enter ja fidivr pop dec sar ret xchg test inc pop or or or cmp out inc dec cwtl cmp inc dec inc (bad) jae daa jo,pn inc mov mov dec icebp gs jne pop popf cmp enter mov push (bad) sbb jbe iret sbb outsb test mov add test push bound sti or pop lock mov adc mov xchg push and std movsb lret mov sub pop out fldenv dec cmp jno mov sti ljmp mov nop jae aaa aaa xchg lcall stos aad std xchg xchg inc and je out (bad) fisubrl push sub adc loope pop dec push mov pop pop inc mov push cmp dec adc insb sub mov outsl ja inc jb loopne mov outsl jo xchg sarl cltd lea loop mov (bad) add jg sbb pushf inc mov lea add mov adc push nop xchg jecxz cmp cmp jb rcll ljmp sbb add or add cmp adc sub inc sub or xlat add lea inc (bad) cmp mov jo mov adc jne cmp mov or xor cmp nop inc pop push or in jb add loope frstpm(287 sub fcmovnb cmp jle cmp fucomp imul jge xchg or aam inc sub outsb aad ss mov mov cmp jbe sub push clc inc movsb test or mov js ja lds cmpsb mov push mov mov mov movsl mov push test movsl sbb dec add xor fisttpl ret movsl or gs or push out inc sub pop jno je je jmp xchg cmc enter cmp cli add je xchg add sbb adc mov add jo test jmp add xchg insb insl imul dec jo sahf pushf lea lcall dec xchg clc dec stc sbb push clc sahf sbb cmp sbb push sti fistpl (bad) mov fimull xchg ds or test push pop cwtl xor cwtl jmp adc bound imul sbb or lock dec bound imul imul pop push or push inc mov push lds wbinvd cmp lock add sub sub xor adc jb sub test jne adc push inc dec mov push pusha lock orl mov lret mov rcrb fs (bad) gs cltd fdivl shld or sbb add mov or add mov ret jg or jge sahf and push out adc shrb and jg inc mov mov inc inc fwait sub lahf jo xor push scas call inc fildl insl std xchg and mov sub roll and push jle push mov jge sbb fiaddl cs repnz inc and je and rorb ljmp mov xor aam push push aaa push mov adc (bad) pop mov push push sbb (bad) adcl jge push in xor sub inc push push push mov sub fcomps push push les xor and ja push push psubsw lds xor (bad) and and push mov dec cmpsb cmp sub jbe fildl imul dec xor push dec inc xorb mov cs inc jae mov sub sub pop das sub fstl nop roll cmpsb mov popa adc scas cmpl dec mov out dec xchg clc movsl dec repz loop lds out or in mov mov mov jb jmp aaa mov subl fwait out inc sbb sbb xchg arpl fcomi add add inc int pop shr shr sub aas mov ljmp dec push lea sub or sti call pop and sahf xor out cmp mov push or into lock sahf sub pop lods dec sbb outsb push inc pop adc jp push add dec pusha test and mov mov mov cmp mov dec repz aas mov popa jb mov into not jecxz xor push jmp in negl imul int3 dec sub add aam jb mov hlt sub ret cmpsb pop ds test push adc jne cwtl jae xor jo ficompl bound ret push notb xor cmpsl inc loope push pop mov and test orl data16 lret (bad) or cmp movsb jne push loope outsb mov lock (bad) repnz mov xor ficoml dec sbb sub and stos scas aad cmp loope in add push inc aad pop lods mov rclb mov (bad) rorb and outsl sub or sub dec push or sbb xor aad out sbb xor cmp mov ret cltd ds dec pushf xchg sbb lods and shlb mov pop insl mov test jg sar lock mov push cmp imul pop loop cmp add add cmp jns add pop mov hlt push pop out (bad) in push (bad) jge pop rolb add or lcall or or ret jae push cmp mov out loope dec cmpsl push sub dec insb pop jae sahf mov or popa fs sub (bad) or insl loop mov adc pusha xchg scas dec or sbb add addr16 (bad) jo jb xor jnp shll cmp (bad) xor xor fisttp fildl jnp and jo xchg pop cs push movl push adc cwtl pushf dec test std imul call push popa shrb test loop inc enter btc cmp jae divb daa dec out push in or or or ss (bad) ljmp adc mov test rcl push inc stos ljmp mov or sub mov fildll ret mov cmp int cmc js lock into pop mov loopne shlb or rorb jae mov (bad) fcomps jb (bad) lret jnp out pop mov rorl add lods icebp pop jmp loop pop in sbb push ret sub cmp dec sub inc sbb xor jne ret (bad) je mov cmp data16 jmp ja iret xchg sbb lcall push or and add fsubs push push push inc lea or mov andb or add add add fstl inc or repnz cmp sbb jl lock xchg hlt push (bad) dec xchg cmp sub mov add or add loopne rol dec and push pop lret mov xor sub es or push mov inc jno iret mov adc loopne cmp bound and into xchg or pop fisttpll (bad) inc xor jp sbb fnop adc fsubrs push mov xor sbb mov iret mov mov ljmp mov mov mov aaa mov xor mulb or cld push cmp ror inc dec lea pusha std leave outsl sbb repnz dec sbb push xchg in dec inc sub ljmp dec leave xor shrb dec insb das mov push mov enter and inc pop imulb movl add arpl jae or inc inc sbb out adc and cmp shll mov mov fwait rcr enter mov imul inc inc das pushf sti push test dec into fmulp int icebp mov push xor push push push push adc fwait int insl cmpl test subl push lcall dec and dec out mov mov cwtl dec (bad) shll xchg push xchg dec push aam dec scas cmpsb pusha scas std xor inc sbb mov push push pop cmpsl and shlb adc push imul pop sbb stos inc and mov ds movl ds scas flds push sbb (bad) jl das sub insb xchg ljmp xchg sbb dec or and mov in nop cs and enter rcll adc adc pop enter xchg cmp push movsl inc sbb jle int3 pusha dec xor jl push mov (bad) je mov test cli (bad) sub mov inc outsb out push push and push add cs aaa mov sub mov and pop sbb mov mov fs mov adc dec inc lea adc mov or push mov ds rcl lret rolw cmc rolb or call push push fs sbb sub push and add or adc and shr add into in sbb out addr16 lods pop ret imul cmp jb mov or fmuls call mov jg neg shl aam push daa out sbb icebp add repnz enter cmc jb and and and incb fcmove incl dec xchg and inc adc jne dec mov cmp mov div mov xchg or xor pop dec pop or push inc inc and ret fsubrs add jmp xchg add test ljmp roll and mov nop cwtl out sbb or mov ss pop faddp sbbb mov nop sbb jae out (bad) add out sti fstpl push xor lcall outsl pop mov push mov nop cmp imul (bad) push mov adc ds xchg mov movsb jae mov add xor pop pop ret incl sahf bnd inc push mov repnz push push or loop out adc cwtl or js movsl mov fstpt push mov dec adc inc icebp mov inc outsl or adc into pop shr out mov mov pop pop popf nop inc jmp popa or push add sbb inc mov (bad) mov icebp or rclb fmuls cwtl lock mov or or mov add or push shll pop xor inc addr16 mov enter rclb stc (bad) mov xchg mov mov and add lcall popa sub enter frstor test clc shl xchg mov xor cmp mov lock in popa mov push xchg cmp pushf xor jmp mov adc cmp adc dec xchg mov push dec nop add cmp cmovo add sub nop add movl xchg insl adcl push push int (bad) jl leave jle cmpb jne cmp lods lea mov lea mov dec xchg mov mov push or or add ja cmp ja jmp lea rorl ja add loopne sahf je ret push push dec push dec das cs sbb test enter and jle loope loop xchg push add repz mov mov aas or ret adc xor xchg xor dec je push xchg inc aas mov add enter pop fildl add (bad) shl cmp orb inc sub mov pop cmpsb mov mov sahf lret push ret popl or push loop push push rolb into inc lock pop xchg pop inc push jge jl xchg cmp pop cmp push stos sbb ret rcrb je push add jmp and in mov pop lock or and adc mov sbb leave test mov add mov cmpw xor sbb ds inc mov mov test push and pop fmuls add inc pop cwtl fldl xor add xorb adc adc cs add mov popf push dec pop or mov int3 add push add pop jl mov xor mov fldt mov cltd jns fcom sti cmp jl push sbb in sbb dec adc (bad) bound push xor push in mov mov mov inc out fiadd scas push dec dec mov mov imul (bad) or mov or scas add (bad) pop pop sbb adc mov push cmp jb mov or mov mov inc xchg xorl add add or or in mov pop sub fmul push loope das dec cmpsl in in loope ret cmp cmp cwtl add push push dec ljmp ret cmp nop insl sub jmp adcl jge insb out push inc mov jns mov decb (bad) (bad) jb jne mov mov inc adc xchg mov jne sub jbe mov mov pop cmpsb shl mov adc ljmp pushf jne cwtl push seto mov pop xor loop add arpl push mov push mov (bad) out pop xor add inc loop aam sub (bad) cld into fimull into pop mov (bad) out and push mov loop adc add test lret inc xchg xor mov xchg cmp negl movl lds push jl insl push ret mov pusha xchg and inc (bad) (bad) call sub sub adc mov mov and orl movb mov dec rol pop jp inc enter lea pop add adc daa (bad) (bad) lea or dec add stos lods push sub xchg aam inc lock pop call mov mov jne jmp mov adc adc outsb ss add push out add rcll inc xchg std push cmc cltd sub pop popf fwait inc inc push je sbb sub (bad) xchg dec cld dec or sbb or cmp std xor cmp fsubr sub or iret call mov add fimul scas imul dec pop hlt test jae,pn push nop jge orb scas insl in and and repz sub push mov pop xor fildl clc loopne jbe shr (bad) dec arpl jne test jmp push mov add dec (bad) (bad) mov pop pop push dec or and popa jp imul mov sub (bad) cmp inc sub call xchg js lcall or or cmpsb and imul add sbb and jbe bound mov push pop (bad) xchg nop in mov jbe outsb aam and dec or out dec dec loopne xlat inc adc roll aad push push mov pushw add (bad) push ljmp mov pop mov mov insl adcl adc jl jbe cs lahf pop lea jl ja mov pop (bad) je or (bad) jge add mov mov add adc xorl or pusha rorl mov es jmp cmp clts or in add push insl orb pop faddl push mov shll adc decl push stos xchg adc xchg es in jle lea xchg cmp sbb pop pop mov adc sbb adc pop aam aad xorb mov adc outsl add add and call into scas nop sub add xor sub arpl aaa (bad) or and insb mov mov cmp adc dec sbb and lods test test lds cltd call nop ret adc dec (bad) adc xor sub sbbl fildl xorb arpl leave mov add mov push inc cmp gs push js sbb dec cmpl ja jge cmp pusha (bad) (bad) xchg test test mov mov push jle xchg jp cli mov cmpl js (bad) js insl dec mov pop adc or iret mov add icebp or aaa lock leave lds push xchg mov (bad) and pusha add xchg popa jmp pushf pop add mov fadds add test mov mov ja mov inc sahf sbb push push and popf cli push jle rorw inc add mov mov cmc add add push or sub add add mov es mov adc add or ds neg pop scas pusha add pop jp xor push adc push and sarl pop xor jecxz sub xor out aaa and fadds cmp push cli jmp scas inc push loope addl cwtl outsl push add and sbb xor adc mov add sbb dec or cs inc orb push (bad) mov xchg add inc mov xchg mov xor ret xchg inc (bad) shl das nop push adc ss mov mov mov (bad) jb lret cmp (bad) rcrl inc lret jecxz xchg add jbe and add adc lcall testb popf push clc push arpl mov int jno (bad) or cwtl mov pop gs popf popa or pop push mov xlat mov mov pop sarb (bad) sbb or mov adc jmp jo lods sub test test xor lods inc inc push or push stos cli or lock mov aaa mov fiadd pop mov mov dec pop xchg scas or loopne xchg jo adc dec cmp sahf jae fistp lods jmp mov shr push cltd test fisub cmp clc popf add lahf push lret mov mov inc ret mov mov sbb les or test lahf inc fnsave or mov mov enter loopne push insl mov push xchg push lock int mov pusha shlb add rolb (bad) nop sub adc mov inc inc or out add push add jmp pop cmp insl add mov int3 lods inc (bad) mov sbb mov cmpl rcrb (bad) dec jne push sbb in hlt (bad) int sub cmp mov rorb add xchg and and xchg rorb or fwait movb icebp and or shr shl dec xor cmc or jg shr pop pop push xchg popa andl (bad) dec leave pusha dec push xorl test inc mov add fisttp xor mov rolb mov or je clc cmp push fist mov mov or dec (bad) stos loopne sub mov pop xchg sub sbb adc stos mov adc je jne jne sub loopne pusha rcll mov inc not gs mov jle enter inc mov mov jb dec ret push and aam dec int3 pop lea in or sbb dec mov jne pop pop pop ret (bad) adc sbb das dec add or push push and adc mov push push mov dec cltd data16 adc inc or or sub and mov ljmp push dec adc mov ret cmp add gs rorl add jle pop int test or out arpl (bad) (bad) jbe sbbb mov and sub jo and push add cmp in add sbb add xchg popa push xor inc mov mov test jl push and int3 leave popa pushf inc cmp pop mov push mov std push test mov mov inc sub jbe iret jge decb js movl mov or fcoms in sub loopne aam jl dec mov mov out bound loopne adc ljmp inc aaa adc or out mov repnz fmuls xor xor push mov and js cmp jae shrl ds insb orl push mov mov test je fucom shld fadds dec add mov addr16 xor inc jne cmp add lea dec repz test fdivl mov fcoms xor sbb mov mov out adc pop and adc fsubs sub adc jb,pt cwtl sbb pop sbbb mov adc cltd sub pop add mov cmp sub scas jg jae loope iret jmp mov cmp sbb dec pop (bad) jb mov push mov adc add pop lds lahf rcrl cmpsl fadds aaa sbb and ss or xor adc ret or outsl arpl addb push int add and lcall pop sbb pop inc sub adc and cmpsb add sbb sti (bad) adc mov mov adc mov bound cmp pop pop sbb ficompl fist add push and add in ljmp dec or mov inc shlb ffreep pop or push mov jmp pusha and mov mov int sbb sbb xchg in mov mov fmuls or dec xchg mov int add push push dec push adc pusha decl mov dec mov mov cmp pop jbe cmp mov (bad) or je mov scas lahf xor int lret pop or jbe inc mov lahf pop call xchg adc aaa dec outsl or adc (bad) call mov outsb add lret ljmp cmpsl in push dec out add push mov adc push push (bad) nop loope aam loopne (bad) push (bad) into mov daa neg sub cmpsl push jne ret inc cmpsb mov mov notb push push dec adc xor mov mov pop mov sub inc mov inc scas sub push mov lret pop jno (bad) out push fwait cmpl je jnp pop or (bad) push push push sub (bad) mov jp mov add mov sahf (bad) je sar (bad) mov pop dec (bad) xor pusha fs inc fdivl jl mov in test shll pop ljmp add mov jne cmp pop jge test add push mov ja les in cmpb mov pop or popa cmp dec popa ds inc mov jbe and insb fcomi adcb push sub cmp jne dec sub xchg jne cmp scas sbb out sub push add pushf sub out jae mov pop mov js push ret add adc mov mov test add fldenv sbb sarl mov hlt jne cwtl sub divb fildl dec sbb idivl mov jne fstpl das test out pop iret mov lods mov insl je adc cmp xchg sti pop or data16 adc pop mov sbb fnstenv mov mov inc xchg or mov xchg sub xchg sub cmp stos out mov push aam sbb cmp (bad) cltd add inc sahf lea cmpsl pop mov push add jmp lcall push mov add and sub pop (bad) pop mov pusha inc sbb pusha add outsl rcrb pusha js mov add push popa cmpsb (bad) call cmp aam push sub add nop enter out sub push frstor shrl loop (bad) jle loope andl lds in fstpl pop sub adc mov push lea popa outsl add int int imul js xor push add das in (bad) lea xor (bad) mov je sbb je mov push xchg dec push xchg push sbb rol sti mov lods ja adc sub sarl mov ret mov jmp cmpsb pop add or in adc stos or rorl ret mov xchg fucomp mov in pop movb stos jne aas push mov jae dec sbb and fidiv out add xor jmp jbe and shl mov or xchg pop push and dec inc test mov movsl push pop lret mov cmp and inc jno test mov lea ret jno pushf and inc push mov and xor shr pop jne cmp adc sti and mov lea (bad) mov and dec sub sub loope xlat jl or jne std and std cmp push rorb xor pop ja or mov mov mov pop sbb out mov sbb sbb stos inc mov clc loop cmpb cli or jb xlat adc outsl shrb xor push jle sub add sub adc mov push scas push pusha dec add out roll cmpsb sbb adc mov push push add sub fldl dec push push adcb or cmp sbb mov int inc mov push aam mov sub in test push dec jne daa mov fsubrp push popf cmp lea add mov fistpll hlt dec sub inc sbb hlt push add sti jne mov sbb cmp cwtl adc and push pop push sub xchg in inc push sub loope inc mov or sub mov add (bad) fstpl xlat movl shll add adc ret mov push loop xor in inc in push pop insb test in jbe jbe adc out sub dec xchg sbb and sar js jge sub add mov xorb testl push sbb popl cmp mov xchg pop mov lret lds into icebp scas pop dec sub std mov in jb cmovno xor (bad) notb pusha sti pop add ret aaa mov push cmp in sub (bad) (bad) rorl pop inc jmp and int3 mov mov xor insl xchg (bad) sbb cmp push pop test pusha and jg inc cmpsb adc mov push and xor xor sbb cmp and sub dec dec sub or ret pusha add lods (bad) gs push push pop pushf xor and mov dec fistp push xchg or inc push jb mov add lret into lea hlt mov pop je in xor shr sub addl adc add dec jnp mov lock jle add add cmp std add je and add xor dec add lods imul xchg mov mov sub lock popf xor inc enter iret xor das es in fistp in arpl ret jg fimull inc loope mov jmp or cmc loopne insb loopne movsb pop jns jae mov push mulb cmc push jb mov out cmp jbe sub into jbe decl inc dec jne je jbe cmovns outsl addr16 push push mov adc fstps aaa push js jbe out add nopl inc pushf inc pop jb andl fs (bad) jb push pop mov jp loopne push cmp sub jmp adc push inc fwait mov pop lods mov fstpt jae or push mov mov sbb add push mov inc or add ficompl rorl mov dec adc and popa das add (bad) pop fcmovnu ret add jb sub pop mov enter push add inc pop inc mov pop adc sub add dec inc insb add push mov dec jae enter movsl mov movb mov stc std jb cmpl jmp push sub xchg pop pop jp bound add or mov jne pusha cli lods sbb jb push hlt pop js mov testl subb repz jne idivl pop call jl or add rorl xchg lods mov add mov (bad) pop int3 lea and add add fwait and and cmpsb jmp mov cwtl xor dec roll mov imul in lcall hlt hlt clc pusha mov cld push (bad) fnsave lahf mov add insb mov hlt faddl call cld adc leave xchg mov or adc adc sub or jl cld test fninit cld ja div fldcw imul jl push and xor mov je cwtl add insl inc fcomps add outsl push out cmp inc mov lea pusha and test ss daa and sbb scas xor push movsb imul sub imul fldcw je int3 sbb mov pop sbb adc or or inc (bad) xor add fwait mov mov js mov fwait mov mov add and dec mov adc sub mov insl adc loop xchg pop pop gs add inc mov push xchg jb mov aad push push adc aaa pop mov repz dec neg push adc push inc lret je rep pop or shrl into ljmp lods jnp leave push pushl or jnp xor adc (bad) pop pop cmp mov fimul jle push sbb icebp or cmc pop jae mov adc mov mov (bad) jb push add push mov scas add inc mov xor sti sub cwtl adc mov data16 test ja mov aaa adc jmp xchg imul sbb fsubl dec inc orl rolb orl cli jge add push push push outsb adc mov and add insl push inc mov arpl mov pop push cld jle ffree sub ret loopne outsl cs pop push cmp pop dec ret jo inc mov push (bad) mov or mov and jp pusha add sbb add pop es push ja out mov (bad) jp adc cmp lods sbb insl mov adc je add notl pushl push sbb es mov movsl mov or pop xor inc scas xchg in jb in push pop movl jmp inc cs daa in in pop clc inc push inc sbb jae rolb pop or andl lahf sbb cmc mov pop jno mov sub push enter mov inc jmp test (bad) aas (bad) arpl mov insb mov add aad in jg push cmp add movsb sbb sti inc jae jo pop daa and out ja stc add add mov pop or inc lds add subl fistl or sbb mov cwtl and xchg dec pusha ret adc pop or fistl adc add sbb out push jbe push pop sub adc andl add dec movups sarb push cmpb outsb mov fidiv mov adc mov mov push xor xchg xor xchg or (bad) sub adc lea movb rclb and daa sub nop jnp xchg std add mov pop push clc push aam mov fmull push (bad) jo das sub out dec mov push or jmp in pop mov add clc or cmpsb dec (bad) add call pop adc fucomp add sbb jg lods pop ljmp mov imul or fs cld cld cld cmpsb jmp xor mov js cld nop xor xor cld cld cld push enter (bad) std cwtl scas cmp decb cwtl add push and dec (bad) (bad) (bad) xor push and (bad) (bad) (bad) xor sar (bad) (bad) (bad) (bad) xor add insb mov (bad) jmp xor mov and enter mov lahf xchg (bad) outsb rorl scas or sub mov sbb test leave push scas sub fwait mov imul inc rolb je add cld js lea sub fnstenv icebp dec push int cmp cmp mov mov or push insb pop jmp (bad) insl jmp je imul mov or xchg lahf cld pop sbb rorb add jo add leave add pop add dec add rcrl lock mulb mov push pop mov cmp lods jmp flds pushf dec and add int add push xchg pop pop fs popa (bad) jb or dec es or dec dec or fs and sub imul or or (bad) and jae loop or or cmp mov xchg or cmp (bad) jge xchg sub adc (bad) add xor dec sub and rcrb adc add adc ret (bad) es test adc adc cltd fs dec adc es out push push pop gs (bad) xor cltd sarb dec or or add (bad) sbb (bad) mov inc sub jb sbb sbb dec mov jge sbb dec rcrl push inc pop mov adc pop xorl ret sub subb add aas adc pop out cmp xchg jno sub inc sahf xchg (bad) lret in push in ja (bad) repnz sub push rol movsb jmp in push adc dec aad in in imul fwait out sub pop sbb call je call pop push mov dec dec jmp and sub nop ljmp jae out in in mov dec mov movsb cmp ret or out mov sbb dec nop out add icebp and add dec es and std repz std jne mov hlt hlt push ja orl xorl push pop jae pop div (bad) cmp and clc clc push clc dec xorl or cli pushf ret iret sti sti mov repnz cld je cld sub jmp (bad) or ss std sbb sbb (bad) pop outsl xchg nop adc inc shrb ljmp roll inc mov jns mov add test daa mov pop jecxz jecxz std sti scas sub and hlt and mov and cld adc cmp dec cmp add rclb sub mov sbb dec test in add jb cmp repnz out out (bad) leave add out dec push lock mov push cli lret repz jmp adc and dec sar or dec call mov mov sbb div outsb (bad) cmovge leave add clc add mov clc (bad) add clc sti sti push (bad) leave add sti dec mov sub and insb and ljmp dec add push in sub push mov lea mul sbb dec popa sub imull test fsubs lret out out bound sub (bad) or xchg (bad) mov sub sti imul ljmp mulb nop push pop xchg mov xchg (bad) lret enter insb out out repnz (bad) in adc and and mov nop in (bad) repnz cmp imul jae sbb testb imul idivb and dec pusha scas clc xor jecxz stc in test cli pop pusha xor lcall test lods jbe cs and (bad) (bad) xchg xor pop movb inc ret (bad) cmc dec in add sti mov mov xor push loope loope cmpsl mov cs scas repz inc push and gs imul pop pusha xor repz (bad) add repz jns and (bad) add jns xchg xchg repnz add repnz in in jns gs add bnd repnz xchg arpl or xor dec xchg jb jns inc jb push icebp sbb cmc pop pop or cmc push jp adc stos icebp jp lock in and outsb enter mov mov lock mov inc xor xor lock dec popf xchg lods adc test sbb fldl push xor jne sbb divb sub jae push notl pop or dec in pop inc pop lcall int3 add jno cltd inc stos add dec add fwait mov mov mov inc sub fsubs jne test push divb jmp inc and adc out dec add sbbb cmp or or or lret insl push add dec comiss pop rolb lahf or jb adc movups mov mov ss or pslld add or jae outsl xlat je loope adc paddq add outsb mov mov sub add push mov xchg cmp push dec pop jne mov push push inc jge outsb pop enter sbb inc pop cmpl or jbe arpl push loope xchg (bad) je ret push push adc ljmp adc cli sbb or mov sub add xchg xchg js fisttpll icebp or test mov push jmp add jl push sub sub mov mov dec sti outsl inc push mov out jg add das add and loopne incb shlb push sub test fldl xchg add call mov adc int out outsb (bad) scas fildl or insb pop arpl sbb add into inc aam xor sub xor jge dec jns sub cmpb mov addr16 xor adc stc dec (bad) adc jae xchg je push and in daa cs pop mov inc inc jmp push pop push and sbb and mov out push inc push jne xor inc mov adc jmp in mov or test dec pusha sub pop loope gs add roll loope mov mov sub sub mov add movb add inc jmp adc push pop out add or inc jne arpl repnz inc xor mov add adc scas add icebp mov inc inc and icebp int xchg (bad) loopne imul add lock fstl cmp push cmp pop aas add insl mov pusha add or mov add inc add notb or adc adc fldl push (bad) fs mov adc ret out push lock push cmp or xor test push fcoml (bad) or push pop xor mov aaa clc dec ds test mov daa inc sub or pop clc xchg sbb adc cmp adc jo js ljmp ret or rcrb sub (bad) sbb (bad) pop mov std lock int mov in or add jg or add daa int3 push jle andl sti pop in cli mov pop int3 andb jne mov add sbb push lea add outsl push add add and data16 jg,pn add jg jg jne int outsl inc add push jbe jle sbb jl fsts jg jg jg jo mov mov add jae orl xchg cli pop adc ret outsl test enter sub clts xchg andb cli push lods andl push into pop cld sub call push push push sub aas sbb add mov fiadd pop in dec xchg add sub push lock mov in sahf mov and movsb test jmp (bad) xor imul dec in in fdivrs adc sub jno movsb mov fistpl leave out xchg (bad) stc loop andl cmpsb mov fnstenv (bad) testb pop or out add lea loope push inc inc inc jge push adcl inc inc inc push rorb in sbb xorl jmp sahf cmp and push hlt jge fsubs xor popa lods push adc faddl ljmp fucomp (bad) sti dec hlt rep jmp neg add lock mov xchg js inc xor rclb add add mov (bad) pop repz orl add inc rol inc sbb fwait pushl mov cmp inc adc adc sbb push push mov sbb inc mov cmp jb aad and iret dec mov sbb js jmp insb insb cmp inc xchg mov sti pop push sbb insb add or push jmp push int3 pop jl (bad) and lret test mov push dec mov stos and push or and xchg dec jb or jbe inc pop or (bad) les fadds jbe adc addr16 xchg mov and push add xchg push in out xchg lods pushf sub or pop or jecxz imul or mov ss inc sub enter cmp test fidiv es pushl sbb mov mov adc mov movb and js inc push adc or std inc test mov in (bad) and pushl push and push (bad) pusha add mov cmp push jg xchg add xor mov loopne aaa dec push cmp data16 sbbl rcrl push aam lods sbb pop and add les adc xor xchg xor gs xor scas push inc xchg js and adc fmull or and xchg xor cmp add push dec jle andl sbb xor sbb jp push push mov push icebp pop mov aad insb and and mov aas mov pop or mov and jbe (bad) or sahf mov or mov inc je and imulb cmpsb push adc fidivl dec push push cmpsb and and cwtl fs and movsl ds jmp push adc (bad) cwtl add and push inc loope jge mov pushf sbb mov cmp push jno sbb je adc mov fimull sub mov add imul fnstenv add push push (bad) getsec sub les inc enter xor cmp jmp addr16 or mov pushl sbb add daa cmp push lods test in adc push test add mov mov inc adc (bad) mov push sub std inc jns inc adc imul insl push adc add (bad) sbb sbb xor sub mov mov push stos push xor sub lods gs sub aam pusha aam (bad) enter mov test imul scas mov js xor and adc (bad) xor adc jp jo (bad) icebp inc ret push dec sbb cltd add bound adc pop push test push cmp push mov and sbb sbb push cmp pop movb jb loop aam pop addr16 rclb aam btc dec pop clc and xchg rorl jmp add aaa or push add add pop ret push pop jbe mov fimull fstpt mov cmp inc sbbb je mov jno push push pushf test and pop cs fcoml or popa xlat mov cs xchg jmp pop xor push push mov (bad) ljmp adc in add mov divl test hlt xor push (bad) push inc and mov adc add push pop fildl cmp inc push out pop sarl in push sbb sbb mov jne and push bound lahf mov xor mov mov in fisttp cmp jb mov testl cmp je push int3 jmp push (bad) insb mov pop push test mov test sub and mov push je sbb add or daa jl insb inc inc xchg adc and mulb push add out or push cmp add fcomp inc sub stos add pop adcl push es pop ficom dec (bad) mov push lea or add lea sub inc mov test mov lock push gs mov scas mov lods mov pop rorb push aas lret mov lea push push cmp (bad) out add jge jnp mov add xor test xchg add dec or adc jl adc dec cmpsl test add rolb int3 lret call sub push cld je lea aam mov sbb xchg fcoml xlat inc dec xchg loopne (bad) sbb jl jg lock and jne pop gs out je xchg xchg cli mov imul movb mov arpl pushf sub (bad) roll and in mov mov aad and insl jnp ljmp lahf mov aam push mov adc adc or fwait push cmp dec lock dec or jmp or xchg xlat (bad) jno push lret mov add xor aam or (bad) and das popa rcl pop fdivl es (bad) neg sub loope sbb in dec sbb push pop xchg sbb inc loopne mov xchg pop mov push inc retw or sti ja (bad) push ret jp ret pop mov push add call xor (bad) mov mov jmp mov push stos jp (bad) dec jne aaa adc push and aam mov (bad) repnz inc or jp lods cld push cmp xchg cmp and inc xor roll leave pusha or js add xchg lods xor cmp adcl push sbb push dec mov mov jg test or and push and lock out push outsl mov lahf decl add and push push les push stc roll es mov mov sbb mov loop cmp test sub mov push inc pop ret and or lret jno rcrb add mov jl mov pop mov dec adc add lock mov push mov mov add lock stos mov xchg dec insb ja xorl test inc test add fsubrl lea dec es gs ret or std or ja cld sub insb mov call or sbb cmp mov inc out cmp adc cs mov pop sbb push add xlat aas add inc push push lea stos add sbb adc (bad) mov mov inc aas sbb and mov mov call dec adc push lea xchg mov add test bound cmp adc sbb sarl test jb scas outsl (bad) fild mov sub enter enter fidivl out xchg or and and inc mov inc push jmp (bad) fdiv or push mov sbbb pop cmp adc sub adc cs push xor pusha daa inc mov cmpb or (bad) movzwl ljmp adc mov adc je and mov daa jmp movb shr daa or mov or push mov sbb sbb dec push pop roll ret cmp push and and mov out inc cmp pop jg mov int aad jp testl push hlt clc mov sbb pop lock rorl or movsb lods movsb and leave push push repnz ss sbb (bad) in fisttp adc and inc push add ss inc adc loopne mov push push sub in les dec aaa adc jmp fiadd inc scas lock push sbb xor pop inc movsl add lods inc adc mov cmp adc add add in mov add push call jp inc add sub xor out push add imul jmp or jb call pop and or xchg ja lea cmc (bad) xor or add std shll fwait cli xor or mov and mov or adc xchg addr16 xchg mov je inc aad inc xchg orl mov jbe push test pop scas iret dec pop mov test or test mov incl leave mov mov imul int mov add jmp mov sub mov jmp loopne subb mov fimull inc call inc inc cmpb add jmp lahf mov dec add jb (bad) xchg movl pop and push test lea movsl mov inc inc inc dec mov mov and add das push (bad) jbe pop jle test mov inc push mov inc dec jne push cs mov push push push fnstenv aam (bad) mov jo lock sub xchg and push cmpl jno pop cld notb mov mov push and xchg call mov cmp inc push jl add adc pop and add mov mov movsl shlb in push lods push arpl mov cld pop inc nop movsb sbb lret (bad) das mov cmp pop push in call repz mov testb push xchg jo bound or pusha push mov or or lret es popfw pushl jbe inc hlt push inc jmp sbb dec sbb in sbb mov mov pop pop sbb sbb mov jle in push mov and aaa adc mov cmp xchg pop leave stos mov add lods loopne xchg pop sub sahf push js lods jbe and sbb xchg cmp aam cmp xchg push jg mov xor cmp jne or ljmp xchg les nop and mov or je pusha pop mov test (bad) inc or and push jbe std repnz adc or nop sarb mov loopne out cmp test xor xchg sub aaa jae arpl xor xchg cmpl pop jle fldenv outsl mov inc loopne or xor and js push push inc xor push call xor pop repnz mov mov mov pop cmpl (bad) mov pop cld push or movnti add cmp (bad) fisubrl mov sarb push push mov or out inc mov xor divl loop insl jmp fisub xor je aas fadds fstps mov adc mov add mov sub pop lock bound les jo inc and xor xor push inc mov lahf nop and jmp ja loop push mov inc mov sbb push adc and mov sub sbb push stos push scas ds hlt sbb inc popf aad or inc mov adc test mov adc and fisubr dec cmp sub push jne jnp or je cmp inc lock mov aam push jge pop mov inc clc add dec adc inc pop insb stos mov cmp cmp loop and adc adc add add inc mov mov add jle out fsubp inc push out pop div pop jb lea mov jne mov ja stc push in mov sbb int3 jge mov fidivrl ret ret or and mov loopne (bad) out and cmp push cmp and adc push imul xor in adc leave xchg icebp or sbb sbb pop testw sub pop push (bad) sub ds push mov or jp into daa cmp mov mov icebp cmp sub hlt xchg insb adc push push mov jb mov mov add call xchg ret mov add sub in jmp mov push fistl loop xor push hlt test les jmp mov pop loopne pop adc sub loopne lods test (bad) push pop lret (bad) in mov aaa stc les push sub insb sbb sub adc ret je aam sbb fs insb push push sbb mov out clc inc testb cmp mov cld cmp movl adc inc xchg or call fdiv jno je rorb or fucomi and mov lock es sub movsb mov adc mov push daa mov cmp fld (bad) (bad) jnp int3 sub int push mov or mov mov push mov adc stos ror pop aad incl inc inc roll call cmp jb lea pop adc and pop pop jns and pushf ret add xchg push pop cmp and sub iret sub and nop inc add or lock orb add and lds jne dec call inc push jl ja loopne outsb add mov in add and mov movb mov orb clc or inc rol nop sbb jo es icebp stos push xchg pusha sub or inc and inc hlt movsb rcl ss and adc inc pusha enter sbb je arpl outsb xlat mov add adc bound mov aad loop aam jbe pop data16 dec loopne mov fwait rorl subl aaa clc pop push mov xor ret mov push add jne or pop mov and jbe inc add add mov mov inc or mov jne pop mov push ret scas add fstpt mov add add (bad) mov out xor pop add mov pop into adc push adc mov mov insl dec mov adc lock std aaa out cmp je cmp and adc cltd mov xchg xchg sub pop cmp jge inc xorb xchg sti fwait ljmp push inc cmp jb add in cmpb add pop aad and xor push push shll push jl aad test daa cmpsb push adc shrb inc ret pop pusha push mov hlt sbb or add test or (bad) sarb pop and add mov es add mov xchg sbb lods inc in iret outsb aam imul sub add stos sbb idivb mov sub push das push repnz dec les jns jge cwtl push push cmp std add xor adc inc and and aas xlat stos int inc and imul scas cmp push dec xor std scas lods hlt add add add idiv ss push or pop inc mov stos jp inc sub jbe push push sbb jne push inc fisttpl pop cmp loop push xor out push pop mov inc lock pop lret cmp mov imul mov or xchg lret jb fimull jae sbb fldl or testb xor mov sti add inc adc adc mov pusha bound or or outsb push test dec (bad) call add xlat jge imul mov andl out jmp inc add nop cmp jl push inc sub stos sub xor mov push insb pop cmp mov movd dec cmp stc cmp cmp inc (bad) push cmp jl sub sysret mov jbe mov shll jae pop in aas mov adc mov mov ret (bad) cmp pop and mov push add scas mov ja ja cwtl and and pop (bad) sbb mov inc std test out inc inc jmp sub inc xor xor and pop gs sti aaa mov push (bad) jno aad fcmovbe xor pop lea add mov jae lods mov sbb inc push jmp xor push mov and das dec mov sub je push push push cmpsb mov or pop flds pop and add cmp jne decl hlt mov mov fnstcw push add pop mov mov in xor xor in inc push or mov test and addl cmp adc xor fdivs inc xchg inc adc cmp pop aaa mov into mov mov dec ret push inc add fisubl adc xchg ret jecxz jl pushl mov out pop mov pop jo xor (bad) jne cmp je add jne fld inc incl inc rolb insl adc add mov cmp push or les jecxz (bad) int3 adc mov addr16 shrl inc inc and lods es xchg pusha mov inc movsl testb cmp inc in or popf fcmovne inc cld (bad) sahf adc mov fnstsw leave jne lret std je mov or fs push mov je in insl out or jmp and sbb shr sub daa xor mov adc inc adc ret and add or lahf js out sahf rcrb sbb xchg sbbl pop in stos aad dec jae sub push push in mov jge das out loop ss mov aas jae loop adc add and cmpsb sub out ss add das in subl ds push push inc dec mov mov ret out (bad) xorl xchg push out push add cmp push mov sub sbb and jl sbb sti pop int mov fbld scas or arpl cmp add mov xor pop push adc inc stc push jg test pop sub push sar inc push cmp or push or cwtl xchg sbb in outsl push add rcrb cmp pop and lahf push gs cmp test add push cld shrl jmp add push (bad) jne xor inc xor or and jne add inc movsb pop fstpt imul into cmp mov sahf push push adc rclb push and push and jae or mov push sbb (bad) jbe aaa add mov add mov add rclb sub add imul add or outsl xor xor mov push roll pop mov jge adc rcrb clc inc aad cmp or (bad) sbb add xor mov (bad) lea (bad) div pop imul nop xchg testb xor mov xchg lods push jbe pshufb pop xor pusha (bad) aas jl jmp pop rclb or stos jle or mov push insb mov outsl add je mov test xchg test or sbbb adc sbb loopne sar and shl add js sbb jle (bad) loopne mov iret mov (bad) idivb jp subl mov roll xchg fiaddl inc xor aad jo push adc push mov sub (bad) dec or pop movsl xchg ret shrd pusha icebp (bad) cmc push push clc stos das push dec mov inc imul mov stos jne inc jmp ds mov add or mov movl jl lea and xchg stos xchg jns scas xchg loop movsb xor call outsl mov lahf (bad) xchg jmp mov int nop mov inc and xchg (bad) push sub mov sti push daa loopne ja ret add cmpl add sub add sbb inc je aam addl inc (bad) roll sub aaa sbb mov daa mov jb push push movsb loopne sub push push scas sub and add cmp adc push mov mov out out sbb sbb jmp shlb je jmp fnop jge mov insb mov call (bad) repz pop enter cld (bad) dec adc inc hlt fidivl add jbe dec pop jmp test jle ret mov lock pusha cli xlat arpl pop pop pop mov cmp pushf sbb sub pop cmc cwtl or adc add cs jl into test rolb and lock mov xor adc and sbb or or cmp xor fisttpl sub int3 adc adc mov sub rcr xor sub add or xchg inc inc js sub test sub add les lods movsb add jp sub jmp push fldl add inc and shr add push push xchg inc fsubs push push call pop push fidivl push push jmp push jo stos cmp cmc or out lea ljmp or fidivl cmpsb sub add sbb xor and paddsb adc add popf push push cmpsl sbbl (bad) mov add loope xchg rolb adc int3 add dec mov mov rolb mov cmp add mov mov push or je,pn mov adc inc push xor mov das jl pop (bad) (bad) sub lret cld shr iret mov push lds ljmp shrb push dec add mov das mov test enter mov (bad) in test pop or je cli add cmp sbbl pop xor dec push (bad) mov and xorb std jg leave jmp dec add shll pop mov jae divb and jmp lea sbb inc test push aam mov cmpsb pop add jle mov mov mov or jne jmp cwtl pop xor jl out fimul sub adc sti add mov dec pop cmp jnp sub clc xor loopne pushf adc je pop add mov and and jg lock and add mov pop mov lods sbb push adc jno inc pop inc push into ss dec or pushf fidivl add cmc adc xor sbb mov pop sub and add cmp ja fcomip jne mov dec paddd inc mov jae addb mov push or or or popa in fildl sbb sub push and arpl mov mov ret add push lret add clc loopne or cmc addl aam xor js ffreep loope add push pusha mov mov (bad) pop xor and (bad) or push mov mov popa aas andl dec inc or mov dec adc mov add push nop jmp mov adc adc in cwtl mov push aad adc (bad) push xor or les dec fbstp jbe insl or mov and icebp fcmovbe add mov adc inc mov mov jg push and rol nop nop out fldenv mov push jp push test or mov cmpsl and mov or sbb pushl push adc jl in jmp addl push out add incl adc push mov push ret insb xchg mov (bad) shlb loop xor jge dec imul jo xor cltd pop mov dec insb cld test rorb jne push sti sub mov stc push pusha mov ds mov pop popa ja out mov mov dec fildl test outsb mov pop out jae mov lock push add sub or in out add add fadds lea xchg scas rcrl call (bad) clc add inc add mov ret (bad) enter test dec inc push js testb sbb not and (bad) and rol or fidivr je mov push push dec xchg mov lret loop ljmp nop inc ffree mov pop adc xor inc push pop test sub cmc push int3 and stc add or xor fidivl sahf pop inc adc fistpl arpl test fcompl es add out nop aad lcall mov mov add jns mov xorb add xchg mov mov pop jecxz add adc inc xor ljmp mov mov jl aas or (bad) dec dec or data16 push inc pop adc pop or sbb inc iret or adc and lret mov lea imul cmp xor aaa inc xlat jbe mov cld fistl mov incl cmp inc inc inc inc jge push inc (bad) sub and test outsl js xor test pushf push or lahf imul rcrb inc cld (bad) aas push sbb cmp dec push xchg out dec outsl push dec dec and or ja push outsl ja ja push imul fisttpl test das shlb cwtl icebp mov mov xor add add push push cmp sub or adc inc clc into mov push sbb cltd sbb pop sbb les xor sbb scas (bad) scas push test add lea loope lcall pushf and jge into mov subl or sahf push or test and push rcll and add imul adc fdivr jb push jne mov mov (bad) jne jmp cs and shrb xor inc popa into xchg sbb lock nop adc or ds daa push adc in add push scas pop popa in in sbb cli ljmp sbb xorl and ret (bad) iret jne adc dec adc sbb pop cmp xor out jmp imul into jne inc add pop push push pop xor rcrb push push insl sbb dec mov sub icebp pushf and sbb (bad) jle jle js js dec decl pop cmp jge push pushf xchg out fnstsw out xchg or pop and mov jge adc decb jne adc and jmp adc mov jbe scas and jne les out mov and clc addr16 push icebp jp mov or mov pop inc clc xchg and insb cmp mov or into xchg or mov mov or mov arpl and jmp insl repnz mov aaa (bad) pop fiaddl adc popf faddp or add aad xor inc ljmp int loop cmp or shrl rolb cli inc add jbe movsb sub jp std int xchg insb sub movsb and mov test mov js je mov add mov add inc movq pushf popl push push dec lea inc gs mov in mov push pop and xorb push lea add sbb or mov repz jb gs push push mov ljmp jae adc addb push lock mov mov in or test popf inc cld (bad) xor pop in test call pushl jmp inc and lock aaa ss sub (bad) mulb rcll sar xlat pop add add cmp test cs sbb movsl fsubs push out mov call pop mov sbb rcrl (bad) pop sub je push popf sub mov jb out mov xor pop testl mov ss inc push push stos out jo cmp in mov xor cwtl push add fdivr add ficompl dec add add inc incb or xor add or xchg nop dec mov inc or mov dec sarb push roll arpl add imul ja jo dec push or dec roll push jo dec cmp jns xor testl dec adcb in and push and dec adc adc leave push push jo call push push push xchg dec rol inc inc jne mov orb mov ja scas test mov pop sub cmp push sbb add jmp cmp push push cmp adc jno addb push jns xor adc jbe push fs sbb mov adc and dec push mov jbe mov push xor movl je jbe pop scas test (bad) cld cmpw fidivr add cmpl adc or xchg (bad) aaa loopne add push dec and or jno adc xchg call sbb test fucomip sarb stc jb push cli movsl cs idiv jb ret sub (bad) jb add push or inc in mov lret dec add or push push and or mov mov mov es jmp or test pop dec fsubrl dec sbb movsb inc and call and rolb mov test orl xor jnp jno ret (bad) xor fcomi inc push lds push roll xchg sub and mov or lret add pop mov jae and mov rcr shrb jnp push fmul and or cmpb and or pop jne inc (bad) clc sub lods jno fwait mov pusha pushl mov pop subb mov (bad) mov jmp dec adcl add adc je dec je stos fisttp push xor das jmp mov jge add push mov or ljmp sbb hlt loopne xor popl stc cmp push fwait push sbb sub add scas shlb or add adc sti add sbb push loope sbb pop ja jbe clc push cld dec rol inc fs adc and adc or adc icebp add ret fdivrl add mov push xor notb cmp shr fcomi mov es fidivl push fs push movsl jmp sbb or das les push or push adc cwtl xchg call xchg push xchg test xchg cli loopne xchg cmp mov (bad) mov test daa test sub adc test pushl in sti xor sub adc rclb ljmp inc test mov sbb test jne adc test clc fdivs ret pop mov and jge and pusha loope and cmp (bad) sub repnz (bad) sbb es in loopne loop aas mov pushf jne repz push mov and outsl push mov push push rcrb les xor pop xchg lret shll cmpsb pop daa (bad) (bad) test lea lea stos push test fdivl pop push int3 int mov test mov enter (bad) pop lahf loop adcb testl push adc xor add mov xor sub push shrl adc adc sub mov enter in pop dec adc pushl add sub and dec inc lea cmp mov roll test sbb shrl sbb mov push xchg push and pop mov dec mov test ss in mov call or mov pushf std adc or pop and mov mov xchg xor push inc push sbb adc mov out int3 jo test test mov mov fdivrs ret popa jne push inc pop adc push (bad) ja jno mov xchg (bad) xor loop xor mov mov sarb repnz add add add or pop xor add stos cmovne xor enter jl enter add push push and mov test pop test imul push pop jb add add in push xchg mov cmp shr jne cmp mov sbb icebp gs pushl lret les push mov mov rclb int3 mov ja ret fmull mov push je mov aam mov mov and js adc dec ljmp inc inc or daa push or jbe jbe pop or nop inc push adc inc push sbb ss and and sbb sub xor fs inc sbb cmp insb cmp stos inc or inc pop fs inc push dec dec push nop inc push sbb inc push sbb push insb jo js je inc jl mov xchg leave and mov xchg cwtl xchg pop jb pushf mov and stos sub mov shrl popa push cmp in mov mov adc sub mov jle add mov sbb adc fs in xchg or and mov faddl (bad) xor inc adc mov sbb fldcw push mov and sbb (bad) pop adc cmp (bad) cltd ljmp or bts jmp adc pop into mov sbb jp call pop les pop das push add jle ficompl push bound mov imul fs dec or or mov into pop aad leave push jmp push jg cmp roll jp adc into push add or cltd dec aaa out cmp insb adc xlat jecxz mov jne or ss or mov pop icebp push or push adc mov icebp lea stc mov sbb push clc loopne dec inc add mov es aam es cli les sub pop inc mov lret inc adc fadd and clc push orl push lds or add jp aad sub out push mov mov call push inc mov cmp fcompl adc adc pop inc nop gs mov cmp sub fs mov add sub fs push cli or loopne jecxz sarl (bad) mov in or mov ss push push dec add adc rol inc ffree dec lods jg int3 add sbb and or push mov je push pop dec aam xchg cmp jne pop add (bad) pop sub mov push and test and push fwait or dec inc mov jmp and xchg sub test add imul aas pop push mov mov xchg in incb rcrl or pop lcall adc pusha adc add xor jecxz xor inc dec push mov (bad) in add loop sarl xchg pop add inc mov xor push arpl mov xor xchg rclb dec sbb and xchg adc cmp or addb inc nop jne cwtl int xor mov insl pusha pop or adc xor add imul inc xorb inc orl or je fwait push mov aam jecxz fneni(8087 push dec adc mov movsb push bound inc (bad) testb idivl rorl sahf lock or dec pop and mov in pop xor adc lds scas sub mov cmpsl sbbb inc sub cmp xor or add add fs insb (bad) mov jb add ss pop ret push mov mov std pop js push or dec hlt mov sub add push mov and and fs add inc or push bound add sbb and shrl ret adc lahf fcomip and mov add pop lret xor adc mov or xor push out and add arpl mov push pop add pop lea loop pop fs in cmp mov sub adc or xor sbb mov bound adc cltd push bound mov or js mov mov and jge or push sbb push into pop int call pop and (bad) adc dec add xorb dec cld jg jbe pop xchg push sub and adc stos cmp inc jle pop or push nop add push inc xor sub pop or mov push mov jo sub add add inc jl (bad) rclb dec cwtl adc ret or jmp mov insl add or arpl jno mov popa push or push or add cmp mov or cli push das test push inc pop pop pop pop and push add inc rcrl sub xchg scas flds add sub fmuls xchg pop add popf jae sub push push inc or inc adc aaa fsubl or fdivrs pop in imull inc loop sub push inc or add inc cmp adc shr rcr or jne div das and jmp sub ja jb cmp or sbb lock or addl sbb mov or outsl fldenv ret dec ds popa ja lcall mul mov pop jmp push add cmp add pop xor push and (bad) in bound jne jmp add or (bad) aad sub push add cmpsb enter adc pop xchg hlt sbb cmp pop add jl add push push mov and sub jle and (bad) sbb push push es xchg xchg adc pop push inc add movl addl add adc stos or dec (bad) mulb test and (bad) aaa xor fildl mov mov or push adc js cmp loopne mov adc and outsl mov cwtl jne cs lods test add lret fild mov in call cmp test jo add lret sub jnp decb sub add popa cmp push ja or or enter cmpb daa pop add dec dec lret push add rolb jecxz dec stos and dec add lock dec imul jbe fsub pop push mov jne test or and mov push push xor ja loop cmp push adc (bad) jbe popf insl sbb pushf or daa outsl dec mov and negb movb mov sub notl mov inc ret xor aam adc push lods add lock pop jne pop (bad) mov enter pop ret add mov mov jns mov mov mov cmp or insb je mov (bad) mov out push cmp ja add cmp insl mov (bad) cmp and add incl popa push fnstsw rcrl push adc xchg xor pop add jmp mov sbb xchg cmp push push pop je jo pop lret outsl iret test add fsubr ret shl push inc sbb fimul mov mov outsl mov pop cmpl add xor sub inc jo loope lds sub push mov fadds jne fcmove inc cld mov frstor into ss out shl int sub adc imul cld pushf je inc (bad) aaa push std cld jmp adc and popf inc push in xchg (bad) push lock jl sbb mov nop or shr lods mov lods inc adcb andb add adc pushf test fwait pop or add roll push test inc inc xchg sbb testb ss jecxz insl pop arpl mov andl adc or mov cmp sub mov sarl or push cmp mov lds das cmp sbb jb addb push cld xchg pop mov xlat xor dec jno xchg outsl pusha jnp inc clc push push lcall push mov mov test push ret fidiv push cmp cmp bound and and add mov jb or add mov fadds lret fmul and ja xor scas inc out cmp sbb mov mov das hlt mov mov mov imul adc lea inc push inc dec mov mov cmp mov addb jp xchg xor push aam adc and xlat lret pop popl or inc xor mov and xchg adc cld imul ja cld dec rcr je sbb inc and inc jmp jmp mov dec adc inc mov and adc jne or shll js jne or popa cmp add mov pop repz inc xchg mov arpl and insl pushf cld arpl sub pusha ja mov jmp mov sbb push adc and stos push sar xchg dec cmp jge cmp jle and decl mov mov jge pop inc aam aas mov mov cmp add push or pop or bound push mov sub loop incb sti xorl mov pop adc or mov icebp repz and mov fisttpll xor adc lods sub cmovb mov movsb push insb js out aaa or pop jmp cmp sbb cmpsb call mov push hlt fiaddl test movl movb jbe es lock incl mov outsl sub dec jecxz pop adc mov add lea push xchg and pop mov fistpl mov mov mov pop mov or (bad) mov rclb adc add lock insl call inc sub xor xor mov negb (bad) (bad) testl pop mov cmpsb enter and add pop jnp and les jle pop arpl lea dec mov push lea loopne ja cmp pop pop pop sbb jbe loop add cmp call push push icebp cmp in jo in popl push and push push mov dec aaa cld mov cmpsb test test jmp dec lds sti xchg push pop push mov add nop in test sbb scas test dec cmp rol add add jmp mov push mov add mov or push mov adc mov sbb adc sbb psadbw ja add repnz bound add dec test push adc pop loop dec inc arpl cmp sub scas sbb fcoms jle or enter adc jge sub jmp mov push adc mov add jne xor or jne gs nop xchg xchg enter movsl mov cs or mov push nop and add mov repnz pop rcrb add inc cmp pop data16 movsl push add add xchg (bad) addr16 fwait mov inc jne mov add sbb into cmp stos pop mov cmp mov insl xchg or jne and adc imul sahf jle and or xchg (bad) fwait sbb mov mov or pop into mov mov in xor push fldl mov cs out shl xchg (bad) pusha add in or and outsb movsb or int push sub inc adc idivb push mov add lea push push or clc test sbb jo jle sub mov test mov add xchg and ret or mov adc mov jg jmp mov das or cmp jl decb (bad) sarl into pop inc adc cmp bound cld mov push mov dec fs sub adc push cmpsb loop cmp sbb (bad) push mov add add sbb addl add push fdivs adc insb adc es jecxz jo jnp in adc adc mov sbb ljmp outsb outsl mov pop xchg insl cmovno out xchg adc cmpl dec dec pop pop adc push cld pop cmpb or sbb pop mov jg push jge in xchg dec rol push push insb addr16 adc in pop add (bad) xchg add test sti cmpsl jmp adc out ret mov cld and icebp fs jmp rcrb into cmp inc popf push loop jb pop jne push mov sbb adc add jmp mov inc adc push cmp mov rolb and lret (bad) dec mov lods cmp or call mov test lds jne or or and xlat scas mov or ja sbb inc loop loope sub mov inc repz stc push sub adc sbb mov ss inc cltd fildll loopne mov sub aam inc sbb sbb push out jl movsl mov cmp (bad) cmp mov jae je inc and popf insb push push jmp sub aaa loopne dec jbe out sbb movsl sub mov es and and and push add xchg aam test push pop sbb es pop negb outsl xchg add adc cwtl call ds mov imul je dec jne push inc or ja pop xchg sarb mov fsubr sbb xchg cwtl lea or sbb jle mov insb mov or push jmp rclb loopne sub aaa mov scas sbb popa mov xchg js inc lahf inc or mov inc imul popa add mov add add push aas (bad) jp cmp je cs and sub adc push test add and mov push pop (bad) popa je add adc xchg and gs adc jno cmp aaa sbb push cmp jl iret jg fs test inc push push jbe dec hlt out push cmpb sub inc add das pusha jg and sub dec adc andl inc add (bad) cmpsl test push call loope inc add mov pop (bad) outsl dec sbb pop and mov test jl or sub test add idivl repnz movsb mov cmp je std or add int inc mov or add push dec xor push roll or test popa mov mov lods es int outsb and or addl push mov or mov es mov sbb (bad) imulb test gs test jle inc daa orb faddp insl or add (bad) xchg shrl inc jecxz pop mov aas (bad) hlt adc and aam add dec dec movl xchg cmpl mov or gs xchg leave cmp xchg xchg mov sub clc sub rclb cmp fsub jae and pushf jg sub jg xchg ja inc ret jg lods call inc inc lret into pop scas test in jle jbe push inc loop push hlt mov xchg push xchg mov cmp jg or inc jl jg jmp test hlt addl or xchg sarl ja jo loopne mov pushf je push hlt adc adc dec loopne inc lods jmp pop and and cmp xchg adc xor add and lret aam and push push mov fcoms in nop sbb movsl movl inc imul add add mov gs rcl adcb clc push aam lahf lods dec and pusha test cmpsb add lret or test xchg push push dec loope fistp sbb mov (bad) rclb cmp je cmp adc (bad) (bad) loopne push cmp testb and inc add jmpw sub in int3 push aam subl out daa jmp and dec adc jb push je call xor je sub pop adc daa and push in push inc (bad) je shrb push lock dec push call in jmp add and imul (bad) mov and adc inc push je push nop add outsl sbb add mov fstpl and adc jmp mov cmp mov xor adc and push fs leave sbb lea inc push push push pop ret frstor and lret or repz dec lea clc mov testl stos xchg in icebp push mov fildl rcll jb push push js dec je pop testl xchg aaa sub and ret sub push push or mov (bad) rorl or add je test xor ret cmc fadds sbb inc sbb mov cmp jb cmp jb or push push dec add adc or ljmp mov xor (bad) jae das add mov faddl (bad) jbe repz push test jb inc mov mov cmc pop fildll cwtl sti pop lock aaa push (bad) cmc mov adc adc mov mov sti orl lcall fisubr insl lea xlat push push in push adc xlat add iret test (bad) ja push add adc js add pop mov or (bad) lea jl cwtl call pop sub repnz mov adc and data16 adc pop mov mov add or adc or jbe lds adc mov je je dec cmp jle adc mov scas adc mov leave cmp pop sub shrb (bad) xor xchg pop adc xchg (bad) int fildl je push loop dec sbb or movl push sbb sbb in dec hlt add je push in xorl cmp push jge xorb inc test fcomi iret int3 dec or sub or test mov lcall std mov push into pusha push and test inc sbb mov jl inc arpl mov pop adc cld (bad) or call xor jg stos inc mov jle hlt ret xchg mov fistp mov movsl mov inc lock inc data16 mov jbe xor add cmpl cmp subb andl orl int3 stos sub push sub loopne mov fmuls cld push and fistl pusha inc sub inc ret sarb cld adc lea jb adc pop jno loopne mov sub adc loopne or nop xchg dec jbe or in les fmul nop cld pop mov add sub lods adc fstl mov mov inc sub xchg mov ret sbb xchg add (bad) xchg sub subl mov clc sbb sbb leave (bad) jne pop loopne xchg mov mov leave leave gs push mov jbe dec mov loop pushl gs sbb fmull cld in popa daa pop sbb xor dec jb cmp or sarl adc mov and add pop inc call mov mov (bad) xchg rcr mov rcll dec or inc push dec in leave and sbb rorl les push push sti popa inc sbb add adc add pop push and mov add mov adc lods pop lock sbb push cwtl dec pop (bad) mov inc add movsl mov fwait add (bad) xor xor or jne in shlb jo fcomps and pop pop cmp lods sahf adc pop cmp mov inc mov fs dec adc jg insb aaa mov xor or jp adc int3 or xchg out push pop test ret pop and ret jmp adc enter jle sub push mov add fsubs adc or xchg in push and cmp or xlat insb jle add cmpsb and js pop fstps cmp cmpsl andl or inc adc add push add pop push and xchg cmp adc xlat cs push and cmp and jns test add add aas das cmp stos fildll daa add insb xchg jo popa or enter or clc cmp stos stc jl add adc subb test (bad) push insl outsb lret mov hlt dec jb leave adc das cmp sbb sbb xor lcall hlt stos iret xchg clc xchg icebp and xchg rclb fxch add adc sub mov adc mov push fcoml xchg xor fstpl mov fsubl push (bad) push sub add rcrb adc xchg dec push adc pop cmpsb sbb or pop cmpsb pop repnz jo xchg push repnz repnz test fisttpl add lods mov mov stc sbb pop push int3 in push mov xor andl lods mov lock lea pop gs lods ret mov cmpsb imul inc jnp fstl leave sbb fidivl add push aas inc jbe xchg cmp inc dec aaa cmp lahf (bad) std (bad) mov add add add rcrb popa push fdivr outsl decl scas int adc loop and lfs flds sbb fsubl sbb scas cmp mov gs popa je and add inc outsl jo incl addr16 xor and popa outsb sub ljmp jo inc popa imul fildl or shrb cmp or add add add add jnp scas inc sbb add adc imul or adc push jmp adc add jg add (bad) jne xor add ss pop aam lret add add sub add and xor add enter arpl in enter add fs inc push or or or fbstp jnp fwait sti dec adc pop or or or imul add lods insb (bad) xor shr sbb pop fmull xor cmp jl add inc ret (bad) loop xchg push rorb xor xor xor (bad) xor lret push xor shr sbb xor cmp xor (bad) xor (bad) cmpsb data16 xor shl push xchg push (bad) dec (bad) xor ss (bad) push mov cs outsb (bad) xor shr push sahf pop fimul xor ds xor (bad) xor shll popa (bad) xor shl adc xor xor xor (bad) xor leave sub shr sbb xor cmp xor (bad) xor lds dec shl adc (bad) xor xor lea sub dec shr sbb (bad) xor cmp rcll push add push xor (bad) xor rcl xor (bad) xor (bad) mov jae repz (bad) xor repz mov xor lret lret sub (bad) xor shrl dec (bad) xor jmp sbb (bad) xor fcmovnu cmp (bad) xor sarl dec (bad) xor sti pop pop xchg xor mov dec shll dec (bad) xor out pop xchg xchg push xor (bad) xor xlat xlat aaa aaa (bad) xor (bad) mov ja (bad) dec (bad) xor (bad) (bad) jg (bad) xor iret iret das das (bad) xor shrl dec (bad) xor out pop pop lahf lahf pop xor (bad) xor (bad) aas aas (bad) xor sarl cmpsb jmp inc add pusha lcall jo dec imul imul imul lcall mov mov add pop add sbb imul imul lahf imul sbb add or pop pop fisttp add add mov or or sbb or sbb or out adc adc adc xchg sbb xchg mov dec xchg push std pop icebp fnsave pop adc adc inc xor and adc and xor pop inc leave push xor sbb sbb mov add (bad) lds mov not xor adc sbb sub out inc dec xor jecxz add jo add push loopne jae or or sbb or pusha dec sarb push seto imul dec popa jb and insb gs wbinvd mov or lcall cmp jb jecxz mov or cwtl sbb push dec out mov arpl xlat inc into movsl add add into add push add add (bad) rorl mov and mov pop shr (bad) add aas add add add dec (bad) xor add or sbb (bad) xor xor pop mov pop push insb rol imul (bad) (bad) jg outsb imul outsb and arpl je outsl outsb ja ret (bad) (bad) sbb cs imul push outsl (bad) fildll dec dec jb dec inc push dec inc dec xor cs dec dec jg test mov gs inc insb jae jb gs push gs add notb insb jne inc inc insb insb outsl push sbb outsl jb js je jb gs insl lcall cs insb adc shrl push or (bad) fs (bad) (bad) jg or sbb and and es sub sub sub cs xor xor (bad) (bad) pushl xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec or mov das xor pop pop pop pop pop pusha popa bound adc push loope inc insb insl or jb je jbe js jp jl jle add pop jb fsubrl dec loopne outsl (bad) or push dec dec push push adc pop or sbb dec dec inc push pop dec dec inc lods mov (bad) adc sub pop fcomp xor jo insb imul jmp push popa mov je insl lods lock and and pop push push inc and bound jns jg pusha fisubl sub insb jns or vcvtss2sd sbb and je scas mov sbbb jae push cs xor insl and insl fs push mov fcomp insl and lahf xor adc jne dec fmull imul mov imul pop (bad) bound jne dec and jbe in ret and imul or fs cmp bound mov lods fisttpll and cmp iret in or sub pop into fcmovnu insl imul pop push insb insb (bad) mov mulb xchg sub and mov insb jb sahf sub sub outsb push inc sbb mov cld outsl jb inc dec ljmp sbb fwait sti divl add add or pop sahf push cs inc push das cwtl sub pop xor gs or push push outsl or cmp push and setnp gs mov pusha fs fs fidivrl xor cli into insb gs fnstenv imul jecxz inc ret imul nop ss fs fcmovb out xor imul sub xor xlat test sub das sub fsub pop leave and test or (bad) jo xchg sub and pop fwait inc and gs aaa nop popf and insl cmp jbe push mov ret pop xor adc cs pusha sbb jno jae sub orb push in dec popl je out inc cli push push mov popa repnz inc jbe ret xor adc pop imul sub push enter jne jae scas xchg xchg push dec les xchg cmp pop xchg inc rcr ss roll mov mov adc in sub bsr lods dec hlt daa or jo mov jb and jne fistpl push sti add xor and push cmp sbb inc jb pop and push jg mov pop into fstpl jne add xchg (bad) xor test fs sub and sub and dec add test jbe add addl and (bad) add cmp and add add insb fsts add enter add add push mov adc add jl insb incl adc inc fadds sbb add adc (bad) aas rclb (bad) addl (bad) jg test out (bad) nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall popf sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov (bad) (bad) (bad) (bad) mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu fdivr (bad) (bad) (bad) fstp fnstsw loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld dec movsl lret (bad) call lock add popa push jg sub add or dec cmp stos data16 test lret (bad) jge add or add das das xlat (bad) mov pop dec sub or push add daa sbb push xchg std add jbe dec lea push sub jns inc push mov pop adc test inc insb icebp mov pop mov inc out imul arpl gs adc adc dec sbb fidiv or push push dec out mov aaa jns aas cmp push jnp and push lods lea pop or mov adc jl sbb jne dec sub mov cmp das daa sub (bad) jnp pop repz fwait enter cmpsl ret dec bound pusha add push movl cld dec inc insb and cmc sarl adc outsb mov push fstpl and jb jns sub mov adc xor add jns gs pusha mov ljmp ljmp sbb shlb jbe inc dec jo mov jle and je jb pusha and bound sub and fs xchg xchg mov xchg shrb add cmpsw dec inc and leave xchg leave sbb xchg and movlps and aaa push test xchg dec clc sbb fsubrl cmovp pop pop sub fmuls daa add add rcrb sbb jae testl xchg ja pop (bad) cvtdq2ps test jbe mov jnp dec add jns movsl test add fs sbb (bad) outsl xlat and pop gs or aas es imul and ret push ret xor jb lret or mov xchg or mov inc pop rclb aas adc test mov jge dec dec mov pop je push (bad) fildll inc sbb bound jge fsts or mov mov jl es add add or add xor pop xor jle sub jne mov sub xor ds cmp pop into mov das sub out fsubl testl sbb outsl jo div es cmpsl cmpsl and cmp mov dec dec ds lret fistl jle pop pop shl push fs cmp sbb je jo ss jnp jo fptan sub lods jle or xchg xchg jo pop int3 pop or ds mov sub call and aam mov mov pushf nop test lcall add scas imul and xor roll push dec (bad) xor dec dec inc inc cmp imul sub and dec (bad) xor add adc or dec (bad) xor add cld mov imul imul imul cmpsb imul shlb nop insb dec and cmpsb jae or mov add fdivrl mov xchg js cmpsb jae cmpsb xor loopne jae cwtl mov imul push sbbl push mov std js ja lock outsb pop push cmpsl jb xchg adc xor jae mov inc arpl push bound mov imul mov lahf inc outsl js add fdivrp push inc push movsl xor xor sahf adc dec cwtl movsl lods mov mov inc push or cs sbb loope test inc inc jo pop mov popf in sub inc cli outsl arpl or inc adc sub add push jle mov incl mov mov and pop test dec add aam cmc sub aad insl inc push arpl adc mov jp add mov imul cs lods jmp js add push add test cmc mov mov add and clc rcrl in xlat inc mov outsb aam dec push jns insl xorl add outsb jns cmp pop xlat jne or inc jb gs xchg sbb or or lods cmp jo movsl inc sarl or outsb jae jns add cmp jae in (bad) mov xchg sbb lods (bad) (bad) daa and int add rorl or loope mov inc cmp test mov je popa scas dec add outsl add mov mov shrl and add sbb push outsb xchg outsl xchg jne jae mov adc cmpxchg sub outsl add or inc xchg jo outsl and and or faddl aad mov jae cmc arpl inc pop xor gs popa fwait cmove ret jnp or pop add add inc jae push push aaa or fwait arpl ja test or out in test lea fisttp fdivl dec sub inc sub inc cmp cmp fstl inc cmp push dec xor aaa mov mov inc or dec xlat jne or xor inc and das ret sub inc imul xor xor cs sbb jbe xor add sub sbb jno mov xor pop or jae mov clflush and dec push insb inc sbb inc imul inc test jne jo outsl and inc insl outsl or ja outsb insb mov pop data16 insl or je sti outsl outsb sub imul inc inc cmp cmp or adc inc cwtl test scas imul add jb popw mov negb arpl push or pop cmp inc lahf cmp fwait popa jae (bad) xor fisttpll fnsave add xor xor out scas sti das inc pop inc adc add idivl in outsl or out das pop test sbb je insb leave arpl add in ret add lods jnp jns push sbb sub js inc jne xchg je addr16 dec xor popa daa jns and mov xorb outsb pop dec add inc jg das gs jns mov insb add test cs lea add jmp push mov outsl fsub push inc decl xchg bound sbb lock outsl cmp mov fs outsb fnstenv aam mov add push jae add pusha mov mov dec and jbe insl cmp in das aaa jne leave xor ss pop add and fs fiaddl dec xor cmp push inc pop in add dec fwait pop sub sbb imul test int dec add insl add imul sahf xor pop fisubr inc inc sbb xchg xor fisttpl mov dec jp add add cmpsl jl pusha test imul and inc lea (bad) adc outsl mov sub pop sbb out lods aad popf aaa mov push imul dec das adc test test daa dec inc or xchg xor in xor pop (bad) lret addr16 insl mov call cmp (bad) inc add test xor inc bound rcrb (bad) popw push add mov add jb nop clc mov aas stc pop pop movsb mov pop push fbstp ror inc or outsb push (bad) ja push mov imul addl das dec adc and (bad) jmp mov jp insb or xor jp jns xchg popf add or fcomps fs jne pop add xchg imul dec jbe lods test sub add push jne test add loope (bad) in arpl jne das add dec pop add inc sbb repz dec add enter jecxz pusha ret sbb lret roll adc out in or addr16 inc push insl dec test sbb lret idivw jb lds sub adc (bad) push sbb gs popa push ss jne (bad) rolb xchg rcl adc sub inc pop pop (bad) (bad) decl popa bound cmp cmp cmp aaa sub sub sub (bad) xor xor bound data16 outsl cmp inc inc xor and inc inc inc mov aaa xor ss xor xor pop rorl gs outsb js pushw gs outsl fs enter imul icebp add pop push ja je dec inc push adc or mov cmp inc pop push push dec mov dec cltd inc adc inc fcoml mov aas ss lret push push mov sbb insl inc add enter inc sub ss mov outsb arpl or bound int js add inc mov mov add and popf or lea in jnp imul inc inc dec movb pop inc add fnop jbe xor dec and push mov dec xor aas in inc in rorb sub fwait adc test fs fbld sub les sub mov inc addr16 (bad) outsl xor rclb inc push sub adc jmp pop inc mov jnp add negl xchg dec movsl dec pop cwtl test popa add push popa xor arpl push (bad) adc je out and les lods xchg pop pop ret add mov push sub push ja push inc mov (bad) loope xor add mov fild or inc lods jbe mov inc pop and outsl lds sbb push cmp out (bad) (bad) aas and push push inc push lods jmp adc sub xchg jne (bad) pusha pop xor push jmp (bad) jnp cmp arpl incl jmp gs bound pop push movsb pop inc outsl je jo mov dec xchg inc xor inc adc (bad) or rcll pop mov pop cmpsl movsb shrd adc ljmp loopne daa fcoml lods jmp das jecxz paddb jl dec ja add pop daa add (bad) or add dec subl daa mov adc mov xor inc daa add xchg dec pop dec xchg (bad) or pop (bad) pusha pop repnz clc inc add test jge fldl or inc and xchg cmp scas sbb cmp repnz imul xchg ja shlb insb and insb popa inc pop cmc and pop mov mov add (bad) or xchg pop aad loope jnp sbb aas repnz pusha pop repnz pop pop jae inc aas lret dec pop das adc ja sbb fisttpl pop insl pop pop and or aas arpl sub stos pop pop pop lret pop lret dec cli jno sti sbb test sbb add cmpsb out mov or out add les inc push add jae add xor sbb fwait mov xor mov mov push (bad) aas leave cmpb adcb inc cmp fsubs sub pop dec mov sbb push out popa testb aas xor leave mov push ficom cwtl mov push xor or add loopne push mov xor cmp dec push test push in nop mov test or sbbb sub fldcw sbb lret jle jecxz jmp ret js int3 flds std add push div cmp mov outsl call nop inc dec mov mov pop fldcw pop inc add sbb inc insl sub sub sbb mov insb ror xor mov ror mov insb in inc loope xor and negb dec push or and mov sub mov (bad) pop lret inc push push or mov pop arpl imul add mov (bad) nop daa ljmp inc xlat aam adc xchg fwait pushf add addps jae inc xor mov pop (bad) (bad) xchg and mov mov ficompl sbb and imull and das xchg jl xchg jl jnp inc shrb jge jge pop jbe mov cmp fnsave pop fadds and jmp push mov or int inc add push xor push inc push xchg mov or mov sbb outsb shll add push dec jg or pop shlb push or pop and xchg sbb jbe pop rcl inc ja and mov scas add stos mov divl je outsl fs inc xor fstpt outsb sbb es outsb adc inc (bad) je outsl cmc outsb jns sbb imul outsl insb jae push iret push adc bound (bad) fnstenv xchg fildl add adcb pop pusha add sbb add mov push out fildll pop jbe mov data16 loopne push adc inc sti push mov imul xor lret pop xor subb insb push pusha cmp test and push out std pop inc adc push add cwtl pop adc add add out sub pop add or cmpsb call or or mov inc add or pop adc push pop jae cmp pop jo xor sarl or pusha pop roll insb and mov sbb inc pop loopne push sbb pop pop pop sbb nop push sbb push pop cmp js cmp sbb pop adc push push sub mov or mov push sbb jmp sbb push pop adc push pop roll lods jecxz sub je push sbb aas enter fs insb mov pop and test pop fsubs sbb call sub pop pop sbb pusha xorl xchg push pop jl pusha xorl cmp fcomps fsubrs pop mov enter dec pop clc fsubs jg pop push pop adc fsubs or and jb pusha orl or orl pop movsb lar (bad) inc pop in fsubs jg pop pop pop sbb fsubs or jp pusha orl adc (bad) or sub mov push sbb xor hlt sbb jg pop push pop push push or mov xor jbe fsubs pop ss int3 decl pop fsubs or lods cmpxchg push and xchg inc pop roll insb in jg pop pop pop push sbb pop pushf jmp jle insb mov pop ds fdivr sbb insb mov push outsb pop cs mov sbb pop mov popa mov imul incl sbb pop xor xchg pop push sbb pop mov and inc inc pop loop dec sbb pop sbb xchg call pop cmp sar mov push sbb sub mov pusha sbbl pop fisub (bad) bnd adc ds pushl xor aas lret pop xchg insb mov pop stos maxps pop inc pop ljmp pop sbb orl (bad) fsubs or mov sub lea dec pop or addr16 fcoms pop xor push and jbe mov pop cmpsb maxps or pop inc shlb pop sbb xchg (bad) jnp xor pusha pop cmp (bad) incl pop sub mov sbb lahf mov dec pop testb dec call pop jmp aaa aas into ljmp xchg daa pop scas punpcklbw pop inc pop fsubs shr lcall pop pop fcoms pop aas pop or ljmp das in mov sbbl setg sbb (bad) incl mov dec xchg rorl xchg mov dec xchg test jmp sbb stc xchg mov sub dec xchg xchg xchg cmc sbb dec int xchg mov sub dec xchg mov std ret sbb xchg mov fs mov xchg repz mov jmp dec xchg test sub (bad) dec xchg sub xchg xlat xchg xchg mov iret sub dec scas out dec xchg outsl sub mov fisttp out push pop out add insl jp je add push add mov fistp push mull pop jno push add in in cmp add aas add inc push sbb in pop push popa aas and xchg jb enter or add add inc add call push and and xorb bound gs inc mov ss push inc and push test jns popa les push sub sub add add pop add popl add sbb stc ds push pop incl add add lsl aas cmpl mov ja iret jle nop/reserved push (bad) jbe xor inc adc add push es ret adc pop add adc and add pop pop or rcrb test nop xor ja addl jns cmp fadds pop mov ret lahf cld inc jle test shll in adc das out push sbb inc pop mov iret mov std push stos in call mov adc push ficompl pop pop fisubrl xor iret shrb xor sub add arpl inc mov in add add jbe fwait add stos fisubrl mov inc jo or push pop mov or ret pop jmp jg add loop pop jl sbb mov push test ret or adc or or or cmp notl or notb adc adc and nop inc inc push xor insb mov pop push pop push pop pop jnp push roll pop fwait pop fsubs (bad) jo fbstp push das pusha orl (bad) pop lods push ss xchg add roll in sahf pop (bad) movsb outsl push sbb pop mov into pop xlat dec inc aad sbb pop or sti or and inc adc adc sbb push dec idivl pop adc cmpsb adc fwait test mov pop pop sbb in movsl inc repz ret les push stos pop jae pop (bad) pop faddl adc cmp inc jmp pop jns ret imul cld cmp inc cmp or xorl or push in and mov popl fs nop xchg push inc push fs xchg cld and xchg js xlat orb movsb inc sbb and pop pop lods mov jnp inc push sub mov fwait sub add mov in sbb jmp inc add lods out mov lcall dec dec inc inc dec and mov imul adc cld mov add xor (bad) xor in call dec rcr fcom ror or mov (bad) xor roll cwtl nop test (bad) xor fs pop push cmp test jnp cs pusha push fldenv pop hlt cwtl add or fild mov sti addr16 push adc icebp loope push push mov inc aas add and and dec fisttpl dec pop add or pop xchg mov add fistl (bad) xor pop mov add add cmp ja daa roll repnz dec xlat popf xchg das add add and shlb ret sti lar cmp rcll xchg test dec ret or pop and rclb mov lahf mov daa push int3 push add lret mov add lret popf arpl add hlt leave sub je jae test ror or sub into mov (bad) xor and movb adc lds push cmp push or les add mov insb inc ja and adc jge mov leave mov test add (bad) adc pop adc sub adc (bad) push or mov sub nop add push call js in jge inc adc mov (bad) (bad) push sub rolb test (bad) les adc mov pop pop pop pop and dec add (bad) (bad) pushl clc rorl leave cmpsb xor lods dec lcall or (bad) lcall dec mov dec push sub mov xor mov (bad) (bad) (bad) (bad) jge cmc into std cmp fidiv cmp data16 mov ret (bad) push adc cmp test (bad) (bad) (bad) call lahf decl in int3 repz ds jl repnz jno mov cmpsl lcall std pusha mov arpl jo lods enter int3 lds (bad) (bad) jmp mov dec repz ret push push xchg icebp pop sbb out scas mov cmp in arpl std das std cmp mov decb cli (bad) int3 decb cmc add xchg ja (bad) (bad) fisttp pop cld push lds fstpl adcb xchg fnstcw sbb xor (bad) (bad) (bad) ljmp (bad) popa dec and loopne add mov cwtl push lods dec push sbb call add mov data16 push test jae push cld pusha fdivr (bad) (bad) mov add xchg das fcmovb cmpl pop inc test adc ror xor data16 or add sbb ss fimull test shl sbb cmc xchg (bad) xor push adc xchg outsl fs sti or fildll faddl sub jg das pop out adc xlat (bad) (bad) (bad) (bad) cmp mov mov push pop pop addr16 mov imul ljmp (bad) (bad) call add ja,pt (bad) fisttp (bad) fcmovnu cmp inc inc mov mov (bad) call mov ja (bad) icebp lahf pop loop xchg in jbe jbe leave out xchg insb popf dec testb mov (bad) (bad) lcall inc fs mov inc and ja lods or testb pop loop popf add stos scas nop dec (bad) (bad) (bad) decl push (bad) cld mov in outsb hlt sbb es mov enter and dec jb sub (bad) ljmp out and out nop xlat jle mov mov imul fisttpl in or fisub (bad) pop inc ret dec xchg call fsin push xchg pushf (bad) (bad) (bad) (bad) std les test imul pop cmp xchg cmp cvtpi2ps xchg repz (bad) (bad) pushl sbb xor mov xchg cmpl pop sbb mov (bad) mov pop movsl aas daa (bad) jno (bad) jnp (bad) aaa mov lds add rcll (bad) (bad) incl cli in cmpsl jge lret ss lods insb (bad) lret fstps pop insl push loope sub (bad) call sub cli mov xchg jmp jbe addr16 clc (bad) (bad) incl mov inc dec mov or cld mov xor pushl fdivrs mov mov std xchg add aam insl xchg jg mov xorl xchg mov mov or popa loop (bad) (bad) (bad) in notb pop lahf (bad) and fsubs imul jl arpl sbb (bad) (bad) add xchg jmp dec insb push (bad) sub inc gs mov addr16 or sti (bad) mov aas add and sbb ret ds fs (bad) je aam jge (bad) (bad) decl repz dec insl out adc sbb std push lods jecxz inc jno (bad) xor inc cmc (bad) (bad) (bad) decl test xchg in push fsincos and or sub cmpsb push add mov push stos clc (bad) (bad) inc jge cmp sbb imul jge aaa inc fsubl mov (bad) (bad) call push xchg daa inc imul dec fisttpl inc push mov (bad) call rolb sbb pop add xchg ficoml adc bound mov sub daa sar (bad) (bad) (bad) decl stos movsb add inc test xor dec cld and push jmp (bad) call inc stos cmp das (bad) popf inc cs outsb mov dec aam jge hlt (bad) (bad) (bad) incl fbstp jg cmp and pop and test adc insb aam decl (bad) pushl cmp xchg pop xchg push mov jnp bound xor add pop (bad) (bad) lcall push xlat inc pop popa in sbb sbb sub outsl fdivr pushl rcrb cwtl mov sbb (bad) sbb mov (bad) lods fistl cli adc repz xchg xchg shlb xchg xlat (bad) jmp xchg cwtl mov pop cmp das mov xor fcmovu mov (bad) mov stos mov aaa mov push cmp lock jecxz push dec hlt dec (bad) ljmp cld mov data16 fcmovbe or sub inc jg test jns cmp clc (bad) mov mov enter ret push (bad) (bad) add outsb lock mov push adc test jp and decl add dec push insl dec jnp aaa pushf push pop cli insb ljmp mov pusha pusha mov push (bad) (bad) ljmp and jmp pop push fwait mov aaa mov and lea fistpl (bad) (bad) pushl xchg (bad) rol scas jmp lea push imul idivb into (bad) (bad) jg cwtl push jo push or test jmp (bad) and or push repnz das icebp (bad) incl (bad) ret inc push dec inc mov sub and pop movsb outsb int sub (bad) (bad) jmp out sbb xor mov mov shll sub (bad) (bad) jmp adc or cmpl insb sbb jnp push pop ret xchg add outsb test (bad) call (bad) fs (bad) repz mov cmp js out push popf out lahf sub stc mov dec inc jno into mov or pop fwait dec cmp cltd or lret ret jmp stc andl add adc pop aas imul (bad) (bad) (bad) or cs xlat ss pop mov lahf into pop mov pop jle mov pop mull lds cmc lds lock sbb mov jne jge xlat jl (bad) xor leave adc rclb sub cltd (bad) lcall add mov jbe ss or inc daa sub lret jnp inc mov lds imul and aaa mov (bad) (bad) (bad) in icebp mov fildll aas push (bad) mov lds mov js push scas sbb dec jae (bad) (bad) (bad) fildll cmp xor lret push pusha push pop stc add cwtl xor jmp sub pop in jl in mov cli shld jbe ds out jp adc (bad) jg xchg lds adc and call sub mov pop ljmp or scas clc mov xor dec outsl (bad) leave enter xchg repz xchg dec popf mov decl ds gs dec addl mov (bad) decl insl pop xor fst shlb or shr sarl test inc add cwtl mov dec mov or (bad) (bad) jmp mov das enter xchg lods jge das mov aam lds or push dec jp pop mov imul cmc icebp mov enter (bad) (bad) (bad) jmp out xchg daa jp xor inc pop mov je (bad) jl mov (bad) aaa mov icebp or (bad) call arpl pop jbe dec test push test adc mov lcall fwait lods push cmp or out cmp (bad) aam leave repnz rorl ds jmp (bad) (bad) cld cli push cmpsb or out adc fcompl mov (bad) push (bad) jg xchg rolb push push mov mov inc xchg cmpsb xor inc dec (bad) dec aam mov (bad) push (bad) or sub (bad) cld mov dec ds xchg (bad) (bad) jne das push cmp (bad) (bad) incl xchg mov mov and ret dec outsb lcall jecxz ljmp mov daa push xchg popa cmp scas xor sub (bad) ja inc jg push mov cmp xchg mov out and cwtl (bad) (bad) jg mov xor xchg mov inc cs test adc (bad) jmp pop out lret negb imul pop mov ds sbb (bad) decl lcall lock fcomps jo in sub mov pop jno stos dec popa mov (bad) (bad) incl mov in mov cmpsl pop ret adc and ds dec and mov (bad) cmp jg repz add mov xor aaa rcrb lock ljmp xchg mov jae mov or sub xorl outsl adc pop sub add sbb sbb (bad) ljmp scas adc andl cmc sub or and add push sbb loop (bad) mov mov cli mov cmp mov sar std decl in cmpsl lcall cltd xchg and dec and mov mov movsl sub stos or mov add or (bad) (bad) (bad) incl sub or mov mov aaa fs jl mov inc xor sbb shr lcall sub rcll shlb fwait push mov iret (bad) ljmp insl or fdivl mov xchg jbe rorb jecxz cmpsb adc (bad) mov repnz or push mov mov jge scas into xchg mov call call clc add fimull mov cmc out into inc pusha (bad) movsl dec rcrl out mov dec mov (bad) xor (bad) lcall int mov es sahf bound je xchg add push movsl sbb jp and mov jl outsl cmp adc ja (bad) jg outsl jb cwtl push xchg scas mov jmp inc or jg dec xchg dec lods cmc inc push mov je std (bad) incl xor fimull jmp and pop or leave aad jo dec clc cld icebp (bad) (bad) inc add adc sarb scas inc mov ss cmpsb cmpsl push (bad) (bad) lods into or pusha stos (bad) (bad) (bad) mov (bad) ljmp mov push fnstsw xlat pop inc add cmc nop (bad) (bad) jg iret movsl push test test xchg cmp inc scas cmpsl popa stc inc jl imul (bad) mov (bad) pushl inc jne dec push mov sub mov and cwtl and dec jae leave cmpsl pop mov mov pop iret popa mov (bad) pop ficomp xor jbe ds cmovno add cmpl (bad) sbb dec sub ljmp cmc clc or scas stos pop sub subl push push or sub jno (bad) decl push in and lret dec inc mov jae scas push pop test das mov xor fstpl fild inc and rclb inc jecxz push jecxz (bad) sbb (bad) fucomip inc mov nop scas xchg sbb cmp jnp shll (bad) (bad) cmp xchg sub pop inc xor mov mov lock (bad) mov add je jmp icebp popf push sti std ret shlb sbbl scas pushf jo imul mov mov (bad) mov push mov mov push pushf mov sbb aaa xchg add jo fnop call or sbb aas lar sti or idivb and pop clc call add fisttpll or add jb decl cmp aam mov mov adc lret inc inc sahf inc sub inc bound mov je sub xchg (bad) pop ljmp cld test jge push mov cli xchg xor test (bad) decl ret jecxz dec xor jnp push jae roll repz inc rorl xor movb mov push aas or pop lcall fcmovne aaa cli (bad) lcall cmpsl push das test xor lods dec insb out stos ss fidiv (bad) (bad) ljmp xchg mov rcll outsl stos leave sub dec sahf mov xchg xchg mov das hlt (bad) cmp jl jl and cmc adc adc jecxz push cld (bad) (bad) ljmp imul sarl push jb lret mov push add dec cli dec das push jb lret aad test jl and es (bad) (bad) lcall imul xor inc inc sbb inc and call mov es adc jg or push jne pushf adcl mov add aas (bad) jb (bad) ljmp cmc fs mov es test push mov icebp fsubl aaa clc jmp adc or fwait sub fisubl (bad) lock test lret cmp pop incl stos mov jl push dec inc test scas or incl (bad) call jle lds push xor fidivrl jecxz arpl pop adc ljmp std ljmp addr16 fcomp (bad) or fs ljmp push dec fwait and (bad) (bad) incl clc or dec inc push test stos iret mov pop xor aam push rclb bound sub call aam cmp scas push loop sub std mov aas aas adc lahf subb addl mov adc lcall (bad) jns inc mov xchg jecxz (bad) (bad) in les gs aam orl sbb sbb cmp in xor popa leave xor cltd push adc je push test jg push decl sub popf mov dec inc in (bad) (bad) ljmp sahf cmpsl and test jnp stos mov adc popa in sub and fldt xor adc shlb pop cmp cwtl ficomp das icebp mov movsl push insb push or xlat and mov mov add (bad) (bad) jg cmp add das dec cmp mov loope call lcall nop lock fild (bad) es pop test bound pop (bad) (bad) jg insb mov notl jo aas dec push pop adc add xor rcll sub pop std (bad) mov fld in cwtl sub cwtl adc mov dec or out lcall movsl cmc and pop push scas mov mov fsubrs jg (bad) (bad) jp inc push push inc sahf jle jmp sarb imul mov lcall xchg fwait sub push add ret inc je lea xor fistl xor repnz lret repz (bad) (bad) mov (bad) jb jns adc bound xchg pop xor or mov lret sub xlat cmpsb (bad) (bad) (bad) rclb hlt push add scas lea xor pop push stos dec mov lock jns (bad) (bad) (bad) cmp js jp pushf mov jnp lods push mov add mov test scas adc in dec insb jp xchg pop dec pop sbbb ret in push xorb sbb mov mov jmp xor das cmc call inc mov xor cmpsl ja in fbld (bad) ljmp jb lds (bad) lret iret imul ljmp imul aad clc pop in cli int3 mov lods les (bad) mov pop mov jle stos mov push add adc (bad) mov adcb pop adc cs (bad) xor cld xchg sarb cs mov jmp xor dec xor (bad) add or or cli das cld (bad) (bad) mov sub popf rcl cmpl repnz xchg jb mov sar call xor jno mov dec dec insl mov (bad) (bad) mov inc inc mov lcall sub sbb inc add stos pusha icebp outsb nop jg (bad) call dec add outsb pop jb test inc lods stos sahf inc inc je hlt mov or add xor ljmp push aam loop push jmp mov shl xchg ret mov jae clc add mov inc xchg dec adc and or or repz mov pop lfs popa mov or scas sub es add (bad) cld cmpsb adc pop xchg mov (bad) (bad) (bad) lcall push nop pushf push jmp pushf cwtl (bad) arpl cli or push movsl (bad) out xor mov push lods call (bad) rcl fcomps push arpl xchg jno xor icebp fnop incl add xor xor out je mov daa enter dec das xchg or mov mov dec (bad) test sub popf sub movsl (bad) into inc out push test push mov pop push (bad) incl push add sub lods xchg xchg ret sub cmp mov test dec cmpsb inc ret stos cmp out jb mov (bad) (bad) decl ds xchg push lock dec lock addb adc sub call in lret (bad) xchg jl test repz (bad) aad outsb push (bad) lcall std std fsub mov jnp inc or movsb xchg inc dec xor and lds (bad) mov add clc lret add fsubrs pop lds (bad) (bad) (bad) call jbe mov in pop sub pop pop mov ret xor mov jmp pop pushf cmp imul and sarb lods (bad) cltd pop sbb stos sub loop (bad) mov push mov bound mov xchg lcall (bad) mov mov nop movsl cmp jmp sbb (bad) jmp jo mov movsb clc ret inc pop xchg add fbld jp es popf nop sbbl inc jns jne loop push cmpsb push cmpl cmp mov (bad) (bad) jmp jne inc insl lcall je lea or mov outsl mov pusha jb xchg xchg mov mov int3 bound sub sbb call fs jge das cmpsb cmp icebp stos mov out mov icebp call movsl out adc mov sub cmpsl push aaa out sbb mov call pop test push sti arpl and outsl and xor xchg dec outsl sub cli (bad) incl test xchg push pop ret fnsave xor mov fldt inc cmpsl (bad) or pop insb (bad) dec loope test clc cld jecxz js mov jns test (bad) (bad) call stos jge jp xor (bad) div std mov xchg jo xchg fcmovu push ficoml adc (bad) (bad) (bad) fimull out repz fdivp dec js orl cltd xchg mov mov jg (bad) fcomip add jb jb adc adc xor lea xchg jnp mov imul das hlt jb lods (bad) movsl (bad) (bad) xchg cmp lods mov push push loop sub jl push iret jmp push les inc pop lret push sub negb aam push sub call int fwait js aam xchg dec imul (bad) les dec add ja push push out ficomp jns call andb je sub pusha fist mov lahf mov jmp push jno fst fcoms mov push dec out movsl (bad) (bad) (bad) (bad) in fldenv sub movb push lock movl fnstcw (bad) (bad) (bad) (bad) jg push stos xor or jle inc scas push adc loopne fmuls icebp rcrl jbe cld (bad) pushl hlt aaa mov movsb adc xlat sarl nop mov imul data16 lcall cld ljmp popa leave (bad) imul push sahf outsl out pop shrb stos (bad) (bad) (bad) (bad) mov ret jp imul cltd jle push or or xchg mov int3 stc dec jecxz (bad) (bad) dec jae test das outsb xor insb mov shrl (bad) enter ret xor xchg leave adc ret decl cli or pop inc cltd rorl mov pusha push (bad) (bad) (bad) ljmp add xchg insb fldl repnz inc mov ret mov aas rorl cmp test ljmp inc lret in pop hlt mov jp dec (bad) pop jp int loopne push and cmp adc dec and cmp std mov test mov sbb out cmp (bad) jmp (bad) loop cmp sahf fwait out lea pop aam ljmp adc sbb push outsb sarl sarb leave decw sti adc testl sahf xchg add push pop jb popw data16 lahf icebp sub xor mov (bad) inc inc jecxz xchg jns ret das sti or int3 sbbb das jl nop sub in and jae pop xor add sbb sbb sbb andl iret inc imul rcrl dec jp mov and fldl xor inc sbb xor in and rorb mov or das adc ret mov jmp pop dec lcall or test (bad) fldt jle lret and loopne mov loopne sub insl mov (bad) pushl pusha dec pop es cmp adc mov call test jmp popa xchg xchg lahf aaa sbb pushl jle add sti fucomp push push xchg push ja cmpsb pop inc push xchg int mov (bad) ficompl subl or fildll cld incl mov arpl scas xlat sub or insb cltd mov das repz (bad) lcall sbb lea adc sbb ja sbb arpl mov pop cli out adcl bound test (bad) in mov into (bad) jg inc push arpl push cmp inc enter add orl push es repnz jae mov (bad) (bad) (bad) cmp stc add push jp xor lea xchg addr16 xor in xlat mov cmp loop add fimul rcr cltd (bad) (bad) call dec fadds pop (bad) insb inc dec xchg mov (bad) mov cld mov pop mov lcall (bad) call push call push or pop or fsubrp (bad) js fisub push add jge pushf pop add cld (bad) lcall ret rcl daa push mov imul dec sar pop std lods (bad) in xchg shlb jle xor mov decl mov sbb out mov jno sbb (bad) mov stos hlt xor aad jnp sub scas dec xor xchg lods lea mov mov mov das icebp outsl icebp fiaddl cmp call push push push (bad) incl outsb xor jecxz mov inc movsl adc inc mov or sarb fdivs push cli dec dec dec push mov mov xor xor (bad) jg jmp dec std adc mov out cmp les out cs (bad) (bad) call (bad) xchg push mov cltd (bad) ds lahf (bad) daa loopne or dec sbb imul adc rcll lods daa jle xor sub push mov add lock fcomi xor in mov jmp pop dec dec mov fild inc jae xlat fisubl inc ret jge stos test addr16 sub rcrl xchg insl jl loopne jb jae push dec mov outsl cmc mov push cmpsb inc cmpsl pop or jns jae mov inc mov mov icebp incl push aad (bad) lcall xchg sub ja jmp lods test push sar and or into insb imul repnz inc jns insb outsl repz lcall out mov add and loopne ljmp or mov hlt out pop (bad) ficom insl dec leave pop jle iret jge xor mov xor daa sahf push test xchg out lahf iret stos xlat aas mov xor incl adc aaa aaa testb cmp aas cmpsl push push ret (bad) incl scas dec fisttpll jmp aaa cmp jb and jmp xchg addr16 stos fidivl sti (bad) (bad) (bad) lcall xchg rcrb pop and cmc repz aad fsubrs cmpsl cmp push (bad) lcall pop movsb fcoml add lods add clc push adc int push push jmp add inc mov adc add data16 in mov mov inc mov incl adc fimul xor (bad) (bad) pushl xchg mov jb mov bound std ds sbb mov inc inc jp sbb xlat sbb pop pop (bad) aaa (bad) cmp xchg jbe xchg sub ljmp (bad) incl inc mov add xchg shl sahf xor pop adc (bad) call aaa ss xchg out jne xor popl jle or pop jge dec xor mov and int jno mov xlat andb test mov pop movsb or enter or je cmp mov pushl lret ret orl sbb je sbb les push (bad) (bad) (bad) (bad) sti mov cmp les push sbb cmp cmpsl cmp je mov decl (bad) mov jnp push in (bad) jbe (bad) (bad) jg push mov rolb (bad) jecxz pusha jge fidivrl push mov test or (bad) (bad) incl and (bad) mov shlb leave mov or mov stos bts pop and ljmp insb cmp jecxz xchg jo movsl loopne pop mov mov push cmpsl dec xchg mov (bad) outsl (bad) fistpll or inc stos das inc or xor pushl ss push fs ror or test mov mov loopne cmp rcrb push pop dec cli loop cld ljmp jmp repz mov lea popa adc ret sbb cmc fistp xchg push lret imul jmp lret push inc xchg xor add (bad) (bad) lcall loopne (bad) sahf out lea test cmp push pop push fstl cmpsl test idiv call (bad) aam inc (bad) inc hlt adc xchg push pop pop movsl out icebp loope and or cwtl (bad) stos (bad) cmp cmp mov cmpsl in incl pushl and inc pop xor mov mov jb dec test ljmp xor mov and fcmovb xchg incl jmp lds jp lock fnstcw cmpl inc stos push sbb leave rcrb cld (bad) (bad) ljmp mov xlat clc inc mov jmp idivb mov mov jecxz mov sti jae dec rorl or (bad) pushl subb into cli cld rorb clc or outsl std (bad) in vpackssdw mov adc out lret jge mov (bad) mov ljmp mov test xchg nop xor (bad) shlb jg (bad) and dec outsl test pop jle dec lret hlt jmp ljmp dec into jmp sub mov xchg mull add inc jle seto and les cmp mov fildl add push mov cld sbb repz std ret jle (bad) mull add lds xor addr16 mov or andb xor fsub (bad) mov xchg test roll pusha sbb mov fmull negb jp xchg imul xlat shl das (bad) mov cmp loope jmp dec jmp add inc mov cmp ret add mov call and push sti rcr iret imul std cmp outsb dec adc add ja pusha cld or sbb push sbbl lods xlat mov bound xchg push (bad) lcall xlat push push (bad) (bad) mov dec lds shll (bad) jle outsb insl stos cmpsl mov aam mov (bad) in popf dec mov mov sar xchg (bad) jmp out cmp or ret (bad) and and xlat test stos jo xor and xlat (bad) (bad) call pusha shrb dec rcrb imul into pop mov mov cmp cmp adc add cmp or (bad) jmp cmp ja adc cmp cmpsb fsts xor (bad) das adcb pop loopne orl ds in adc (bad) (bad) (bad) dec dec ficom mov (bad) cli push and adc repnz pop mov dec testb ja jl lea cmp mov sbb xchg push mov jo leave pop imul pushf (bad) (bad) (bad) incl int3 xchg (bad) aaa sbbb aaa cmp lock test hlt js sar inc dec int xor shl dec push imul xchg inc pop lahf mov jle sbb test js xchg into mov loopne pop push loope sub (bad) (bad) call and mov out pop inc xchg lcall ss inc scas or lods xor lcall push imul xchg or mov jns stos jg bound pop (bad) xchg clc mov cmp mov dec popa aaa xor and test incl and std repnz andl push mov arpl pop cli repz push pop insb pop pop pop push (bad) call mov xchg push lock push or dec popa clc cmp loopne sub mov adc or push lcall insb out daa and (bad) push jno mov lcall test aaa pshufw mov add fmull dec xlat xlat mov arpl inc mov (bad) nop mov adc (bad) fnop xor jmp xor jge loopne ja push repnz and rcrl (bad) (bad) decl add outsl xchg lahf inc push inc pushf mov cmp popf cmp xchg cli (bad) (bad) call cmc sub or push fcmovnb inc hlt push fisttp cs sti dec int3 shrl shrl cmp (bad) (bad) fucomip decl ljmp jmp fdivrs and pop std mov aaa mov cmpsb imul mov pop mov test pop mov mov loope iret sti repz sbb inc (bad) incl (bad) imul scas jb cmpsb shr sub cs sbb insb rolb incl jns cmpsl inc pop lcall sbb and mov inc adc shr rclb mov dec cwtl aaa mov add dec lret (bad) repnz mov sub xor sahf fdivrp test lcall jmp mov mov outsb arpl mov fimull xor xlat xchg xchg addr16 cmp or push fcmovne pusha fcoml xor das push out (bad) (bad) decl cltd orl mov popf ret testl lret jnp outsl push ljmp mov pop xor ret (bad) incl mov scas ret or xlat ret lods ss scas push add xchg jle test push imul push pop ja push lcall mov mov push pushf pop fnstsw jmp icebp push cmp stos add add shrl pusha stos (bad) incl mov dec jns (bad) sbb rcrb mov mov mov mov repz imul sarl mov daa jns and (bad) adc xor fmuls and fmul stc scas jbe (bad) lcall lods or and out (bad) ss (bad) rorl sbb lods shr or inc inc daa jbe data16 jp fisub in imul pop lret jecxz (bad) ljmp in insb fcoml (bad) scas movsl fwait pop popf mov fs lock lcall fstps sbb fstpl adc (bad) lea (bad) (bad) (bad) lcall jo dec jl adc in or dec dec movl in imul (bad) std (bad) (bad) jmp sub jge fcoml dec test mov lret test pop push push add jns sar ljmp xchg cs mov push aaa adc (bad) mov and dec ret daa daa xor mov (bad) call pop pop inc sti scas push nop xor data16 repz push xchg clc or mov decl or push repz inc outsl (bad) (bad) ljmp or sbb mov inc mov pop lock and cmp cmp and icebp adc adc jmp lods xchg imul jo scas fcmovbe orb (bad) (bad) sub sti testb cmp mov movsl daa fldl sbb (bad) (bad) (bad) fnstsw mov enter mov xor cld adc fistp (bad) (bad) ljmp xor mov push stc xor inc jle les pop mov mov xchg pop pop out lret outsb (bad) mov lret out sbb lea sub call mov mov mov adc (bad) ljmp sub mov mov hlt (bad) lret rcl ret (bad) (bad) (bad) pop (bad) mov adc cmp dec outsl dec add pusha sahf das mov sub cmpsb lcall std mov sahf enter (bad) addr16 test mov (bad) (bad) incl mov or hlt xchg ret fdivrp xchg pop decl push jg loop (bad) lcall or inc mov cmc mov jo push cld mov xor cli (bad) fisttp movsb jns xchg inc dec adc leave add push nop cs jg pop popa out js fidiv fdivrs mov loop mov pushl push adc sub stos jecxz jb xchg push pushl mov mov (bad) xor cmp sti decl dec push out sahf mov mov jp adc mov pop jo (bad) aad mov dec or jg aas mov pop lea xchg cld adc out (bad) mov mov mov fdivr ljmp loop sub fstpl leave outsl (bad) stos sub jge jg aaa pop xchg and insl sub sub jb frstor jb outsl lock shll sbb sub cmp mov xchg (bad) in das sbb pop fs mov or (bad) lcall fidivl shrb xchg mov xchg mov outsl movb mov sub mulb adc nop jge and push aas lcall aas xchg fmull repnz adc cmc cmpsl xchg adc iret and icebp aas sbb cmc jecxz sub push jg cltd incl (bad) (bad) mov test inc xchg ror jne es test dec (bad) push fild aam dec ret xchg mov mov add lcall pop test (bad) pushl jle (bad) cmp mov cmc ja add out or mov mov in xor and punpckhwd pop mov lcall shll into mov (bad) rolb psrlw xor xor xlat adc xor sub jl sub dec test (bad) mov or adc lock (bad) decl mov rorb aas inc (bad) ret xor mov (bad) ljmp negb add in stos cmpsl pushf outsb mov scas (bad) lret das hlt (bad) lcall leave sbb push mov xchg fildll pop lret (bad) inc push pushf xor push push int3 (bad) push mov mov cmpsb insb mov insb or push pop xchg (bad) (bad) sbb loopne xchg pop fcompl call sub xchg das and (bad) movsl decb cmp push dec (bad) jae pop pop ds mov ds push pop mov shr scas ljmp scas pop (bad) (bad) (bad) ljmp pushf add xor lds pop mov dec add jg (bad) movsl insl mov hlt (bad) pushl rcrb ds aad popa popf icebp dec ss hlt (bad) rolb ds incl mov fprem cwtl in cwtl in jmp jp adc xor (bad) incl cmp xor adc insb mov movsb outsl jae or in dec pop xchg (bad) (bad) jg lods fwait call dec shl or add xchg mov mov (bad) (bad) jmp sbb adc push repnz or xchg lds gs sbb push loop sar sbb cmpsb lods jmp push int3 cli fs sbb stos mov imul mov (bad) icebp fcmovnu push shrb inc sti jno adc jle aaa pop mov insl pop xor sbb pop mov and lds lods rcrl (bad) mov mov push xchg rcrl cld fsubrl iret pop das jo (bad) (bad) (bad) (bad) jmp cmp (bad) in insl mov jbe mov mov cld orl mov xchg xor pusha cmp mov add cmp add cmpl std and push add pop stos aad cmc xchg into mov mov imul popa movl andb insb or movl (bad) (bad) mov sbb icebp xor ljmp add ror div pop cli lea dec rcl (bad) fisttp jle clc pop or (bad) (bad) incl clc jge sti (bad) idivl das scas pop cmc pop cli lods xor dec mov xor (bad) (bad) lcall insl fiaddl fisubr sub rcll add mov inc xchg pop sbb pushl incb je aas mov xchg test idivb xchg out jb incb (bad) in sti das icebp test adc rcrb adc push outsl add dec pop cld (bad) jg je xchg adc cmc loop xchg jp push ljmp or xchg cli decl inc mov adc mov push jp imul lock call sbb sbbl add pop loopne mov mov les lods jecxz popl mov pushl orl inc movl fistpl enter je pusha sbb je (bad) roll (bad) decl hlt cltd icebp insb outsl hlt sahf xor addl test (bad) (bad) (bad) inc xlat hlt and xchg jne sub std cmp mov insb fs call jg (bad) ljmp testb xor ret movsl stos jle sub outsb std push inc divl dec inc repnz pop or decl lret mov andb xor mov or xchg push mov push pop shrb sub pop rcrb stos sbb mov daa or out inc mov in push mov outsb mov ds mov pop or decl add jmp (bad) jmp (bad) jmp jecxz inc stc fucom mov pop js aaa cli fildll dec xchg lret and mov jbe jmp lea ja cs ret mov (bad) jae daa lock fcomps or ljmp push (bad) das pop lret cmp pop ret das cwtl sub stos ljmp icebp jg hlt jns inc fcomp xchg xchg xlat inc jmp adc stc loop movsl (bad) mov in jl loop data16 mov sahf inc jbe xor (bad) lcall ja mov mov and pop push lcall mov mov mov dec jecxz mov adc lcall ficom and mov test jge jns cli adc popf lods cmc dec dec mov (bad) (bad) lcall mov mov out sti xchg jns aaa push iret or stos mov (bad) ljmp inc icebp mov repnz (bad) cmpsb xor add call pusha stos stos fwait adc jmp jle mov adc inc jae (bad) (bad) (bad) (bad) sub hlt or lock loopne or mov add test sbb (bad) ljmp mov lea mov subl mov enter (bad) incl sbb rcrb mov leave hlt dec popa push pop (bad) pop xchg int3 or das pop push and in pushl dec les aas xor xor and cmp dec mov cmp int3 jb int pop lods ret (bad) jg inc cwtl inc push inc stos sbb xor test jno fisttpl les jl (bad) mov dec cltd jns sub xor (bad) cmp ljmp cld pusha jae push stc jge outsl out into sub inc je sbb push xchg or test imul outsb popa vsubpd mov (bad) hlt mov mov fbld (bad) enter arpl (bad) in adc ja (bad) (bad) jmp ljmp addb mov fimull (bad) call mov fstpl cmpsl jo or push mov sar inc outsb adc sbb cmpsb xchg out add mov enter out loopw dec xchg sub push loop dec cmp push add fs and sar mov stos jl jge push inc aad mov jno add lock pushl test fbld je dec inc jp sar (bad) ljmp mov xor jo test sti arpl fistpll imul cli or cmp cmpsb lds lahf and jne adc mov call sub mov fsubrs add mov fs push dec pop sub xchg imull (bad) push mov repz dec pop int3 mov xor pop ljmp jg aaa (bad) xor push aad dec adc bound mov (bad) ljmp ror cmp cmpsl inc aad push inc (bad) pusha jp push mov pop sbb aaa xchg outsb jns pop cld mov dec stc repnz outsb (bad) hlt (bad) (bad) pushl icebp ds and adc stc mov sub mov inc inc aam cs fmuls sub (bad) (bad) mov pop jmp dec dec push cmc fstpt in sub fimul jo push rcrl mov bound jo ret jnp jmp decl ja (bad) jbe xor cmp cmp (bad) lcall (bad) dec cltd or das sub xchg arpl adc (bad) (bad) ljmp dec sub addr16 jb imul pop dec imul in xchg or cld (bad) (bad) jmp lret stos stos push mov jnp in jge lcall push sar das lock nop jae cmp sti and inc mov jmp mov fnstcw or mov clc mov loope test test out pop mov popa movsb sbb (bad) (bad) (bad) fmuls dec arpl ret add sub xor nop add mov cwtl ljmp cli push cli jno jns mov rorl add (bad) (bad) (bad) mov add xchg sbbl or mov push sbb in lcall decl jl adc xchg cmpsl int (bad) mov jb arpl mov aaa mov and and (bad) lods push daa scas cltd lret (bad) pushl fs and xchg push jmp mov mov pop sub dec call push cld getsec sbb mov pop push cmp loop (bad) dec test pushf cld dec mov sub dec (bad) repnz pushf cmpsb mov pop push adc add sub fs dec jmp sub inc dec jns mov inc lods lods ret das hlt (bad) jns push jl cwtl smsw inc popa lods icebp faddp xor mov fs (bad) (bad) inc nop mov and lods nop mov sbb jecxz and (bad) (bad) (bad) decl leave test call inc xchg dec xor loop test xchg ja dec pop clc mov ficom test lret dec push add call decb add inc sbb testl inc cltd repnz movsl (bad) pop loopne sbb sub shrb push sar aaa push popa dec pop mov (bad) (bad) pushl pop cmp js inc mov or inc xchg sub push pop sub push loopne sub xchg jne imul xchg in mov call icebp dec push loope add mov inc adc xchg call (bad) call inc add orb push inc pop mov leave lret sub sub adc mov xchg addr16 dec add cmpsl cmpsl scas jb adc inc loopne fs stos sub cmp pushl lcall fcoms xchg adc (bad) (bad) jg push jns lods rcrl xchg sbb mov pop mov jecxz (bad) jmp inc mov jmp shrb push movsb ja push push pop loopne pop jnp mov pop sub add movsl or test dec sahf in push mov mov int jg (bad) mov xlat jp mov add jbe cmpsl test jp repnz adc ret mov addr16 fildl movb out out ret pushl sbb stc adc pusha dec iret icebp test sub call je call dec mov adc xlat cmp (bad) div popf in roll js (bad) (bad) (bad) ljmp mov mov (bad) xor insb xchg xlat loopne loope jo pop cwtl pop (bad) enter jg mov icebp fwait pusha ret push mov (bad) adc (bad) (bad) incl cmc (bad) lret dec imul repnz and or jo xor and aas (bad) (bad) ljmp inc mov fnsave mov insl (bad) in fidiv inc mov mov cmp jg push (bad) jle xchg pop scas pop incb xchg mov lcall sub sub sub sarl imul je lock jg pop pusha and insb imul stc and cli xchg pop fmuls loope sti jmp ret pop incl xchg jl popl lods jg pop cli incl mov xchg sub shrb lods dec push xchg push ret push and les pop js dec (bad) dec fsubl sub inc loope adc sbb dec insb lock jnp add cmpsl mov rorb (bad) std dec fsubrl sbb adc in (bad) (bad) mov (bad) mov aas aam xlat aaa fldt xchg aam cltd les popf in (bad) jmp and shlb pop xchg loope mov not mov mov test adc add jne stos aas ret (bad) or pushf (bad) mov jecxz neg icebp or xchg push pop cmp inc pop xor data16 cwtl add pop mov xor push dec cld jg xlat std lods push adc enter je pop test sarb insl mov in mov out and mov inc jecxz push or (bad) lcall pop popf ds add pop lds repnz (bad) aad pop dec jecxz jp (bad) (bad) in rsm daa (bad) lods sub insl inc jmp mov jecxz mov nop (bad) (bad) pushl adc sub popf adc lret adc es in mov (bad) (bad) jmp mov in and aaa jecxz outsl cmovp leave clc sbb (bad) push mov enter call das out jp pop int3 xchg pop jl imul (bad) xor sahf scas xor out rcrb fsubl sbb stc or inc jno push mov (bad) incl sbb popa cmc push (bad) jmp mov in mov mov sbb jecxz lahf (bad) cmp pop mov adc (bad) (bad) (bad) call rcrb cs adc pop je aam outsl adc popa lea xor inc mov aam (bad) mov jmp cmpl inc lock icebp mov (bad) (bad) call fcomp pop jns push jbe loopne pusha lret cmp jmp mov fwait (bad) (bad) (bad) decl das mov inc ja add lret push (bad) loop cmp stos rclb pop clc sarb mov push push test pushf aaa idivb dec andl mov dec sbb repz mov stc xchg je aaa push lods pop repz loop test jg (bad) jmp js pop ret mov push out xchg cwtl ss xchg sub (bad) lcall ret mov arpl jb movsb sarb inc ja mov dec dec scas out xlat fisub and push aaa cli xchg call inc and jge mov lcall mov mov add (bad) (bad) lcall test mov nop loop clc pop add jae jge sbb aad mov and mov (bad) jmp xor lock fst out push stos pop push push push jle jecxz adc faddl fld push or popa dec (bad) (bad) ss jg movsb adc sbb xlat out fcomps fist aaa pop loop movsl inc or cmp nop cltd rclb (bad) (bad) (bad) jmp mov adc pop xchg push shrl clc xchg inc push cmc cmp cmc jg test (bad) xor lret addr16 push push cmc jmp jmp (bad) out notl pop adc (bad) (bad) (bad) incl (bad) or mov mov jl or sahf xor sbb xchg aad inc jmp add lock sar fbld mov jecxz ret repnz fbld push inc in pop and add cmpl js mov jecxz sti (bad) pushl xchg popa mov testl hlt inc adc cmpsb pop xor outsl pop (bad) (bad) (bad) cld idivl and addr16 dec outsb lock in push insl das loop cmc decl sbb add les insb shr dec jae (bad) (bad) fildll mov sub lea jno dec pop js outsl into cwtl jg (bad) (bad) jp dec std out xchg into repnz jge mov enter das push mov (bad) lcall adc ljmp xchg out pop clc shr loope sub sub (bad) (bad) incl insb xchg cmp adc in fs xchg test sub push jo add es mov adc (bad) (bad) (bad) cmp xchg sbb cwtl pop addr16 call push rclb push sbb in sbb cs (bad) incl fwait jle push dec les enter cmpsb adc arpl or pop inc in (bad) arpl jg dec (bad) xchg nop enter loopne jo rcrl test pop and dec lcall inc movsl out pushf or mov push faddl jmp incl and mov pushf sbb mov aaa sti xchg pop fidivl jle push pop inc repnz push jmp push clc (bad) jg sub sbb outsl pop jl,pt push popa lahf mul ret pop jns jnp jmp fbstp fcmovu jl xor xor sbb fdivr (bad) (bad) lcall mov and dec or mov cmp jnp or pop cld xchg dec icebp xchg sarb ds pop or in sbb sub push dec pop push in test js rol jnp xchg dec dec cwtl test in jp (bad) (bad) repz mov stos (bad) leave divb js xor xchg mov lcall std fbstp mov pop push movsb insb sub mov cmc jno call (bad) lea or imul out movsl ret and mov rcl inc cwtl sbb aas (bad) mov adc pop pusha pushl push add out out fisttp call clc add push fisttp nop inc inc lret rcll inc (bad) (bad) call mov jmp ret fimul adc pop push adc inc fbld inc cmc int and sub push popf cmp pop (bad) (bad) (bad) decl add xor mov xor (bad) cmpsl fmuls (bad) (bad) fiaddl jmp push xchg inc fcomps (bad) (bad) lcall stos jecxz jb jl pushf sbb fwait mov ficom jo push mov aam mov mov cmpsb or (bad) incl adc sti inc dec lods mov jmp mov hlt into fcos outsl (bad) jmp pop negl xor fwait dec sub add out cli lods add cmp adc roll mov xlat jecxz cmp pop int3 loop mov jmp mov jo and adc (bad) (bad) (bad) (bad) cmp mov sub xor test ficompl push enter imul xlat sub (bad) sub sub and sbb popa xchg leave jbe cmp das das sbb (bad) incl lret jnp adc daa (bad) rclb mov and adc enter outsl icebp decl into (bad) aaa test pop les ljmp sahf (bad) lcall pop xchg movsl lock pop jns movsl stos ret pop loopne mov and aaa imul jmp out int3 jno ljmp lods mov lods (bad) aaa cld call subl lcall insb lods mov sub lret mov loope popa push and movsb stos ss ljmp jmp pop add ret dec cmp std ljmp mov dec pop subl mov xor or ljmp nop ljmp loopne test jg ja mov xor hlt cmpsb int scas dec fldl hlt lret aas cmpsb xor dec mov (bad) (bad) (bad) lcall in mov dec subl xchg jb mov cmpsl pop mov (bad) ljmp aad into lds push jb lock and aad mov in lock (bad) mov orb xchg movsl xchg or jnp xchg inc pop sub (bad) (bad) inc push sbb addl adc jle or stc mov add sar (bad) (bad) mov insl shll mov adc insb aas cs lods (bad) decl mov mov popa loopne aad dec loope outsl cli jle aaa std mov mov jg push sbb mov fmull push and (bad) mov cmp sbb push rolb aam adc or decb call or cmp data16 daa push pop (bad) jae inc hlt cmc nop push mov test insb flds (bad) popf adc pop mov cmpsl outsl xchg decl std call ja js gs shrb sti gs test out push fnop ljmp inc lock or repnz (bad) jg lcall or inc cld fs jecxz mov push ror loop lock (bad) (bad) (bad) jmp ret fstl leave jmp jge hlt shld mov mov cmp fsub or dec jnp (bad) ljmp addr16 nop add fcmovnu sbb inc or (bad) (bad) jmp lahf push cwtl or ljmp fmuls adc push and std push jnp pop loopne push pop je loope push add cmp jmp fcmovne jmp pop cmp ficomp sub cmp xsaveopt (bad) stc std add (bad) (bad) (bad) out das push add jns adc dec add pop pop icebp scas orb (bad) jbe pop mov push fcompl cmp notl sahf mov lea (bad) cmp cwtl and sahf push into jg jg lock pop out out incb ret stos loopne pop ja (bad) (bad) mov (bad) mov jmp repz jne inc movsl xchg or pop loopne pop fstpl jae (bad) (bad) dec and mov (bad) bound hlt in add stc aad shrl cmc (bad) (bad) mov popf cmpl cmp mov cmpsl clc adc (bad) jg pop sub aas std test test mov add (bad) mov pop mov in sbb fdivl ret (bad) jbe in cli aaa clc aam push ss jmp fbstp (bad) es (bad) mov mov (bad) (bad) jo mov pop pop push mov mov jg mov add cmp ds lret bound ljmp call push inc dec mov mov insl shrl add stc cwtl cmpsb stos or packssdw leave (bad) fucomip ljmp (bad) icebp dec sbb fbstp mov mov ret jmp clc imul sbb (bad) call popf inc stc add (bad) or mov xchg imul call out stos test xor xor ljmp icebp or pop add add sub pop xor add and aad mov arpl enter (bad) decl std pop das inc out imul shrl js js push call test mov add orl (bad) (bad) lcall xor pop mov mov faddl jmp lret mov fsub push inc inc push outsl rorb (bad) jbe inc pusha mov clc push stos in cmpsb pop cmp enter xchg sbb push das std (bad) fldt add add fcompl mov out pusha jle test push mov mov test xchg and pop (bad) js sar cwtl push clc (bad) call fistl mov push ja outsb add in push lock insl out fnstenv decl pop sbbl ss mov cmp adc jne xor call adc cmpsb insb inc dec mov jle loopne decl mov push or pop fcoml aas inc lcall adc bnd ss gs sbb mov cli (bad) jmp cmp mov push imul add add stos push mov jg inc andl fistpl cmpl fild (bad) (bad) ljmp mov arpl sbb cmp movsl mov sbb lcall push push (bad) (bad) decl daa pop pop and push cmp xor (bad) aaa clc pushl mov ds mov add dec stos repz inc loop pop js enter aam mov or inc sti or xchg (bad) push pop or clc dec test jno mov call loope mov cmpsb add xchg mov dec aaa sub ljmp sub xor cli adc sbb ljmp loop mov dec mov cmp je sahf xchg mov (bad) (bad) pop into aas xlat lahf lock add shll arpl ljmp lret imul jle fldt jle enter in mov cld ret scas pop cli (bad) jg decl xchg push sbb sub inc loopne in aas add insb daa sbb incl lcall jge aas punpckhbw arpl and adc std xchg decb out push outsb insl insb int decb pop push pop mov loop sar jb lcall jl pop jae (bad) iret dec scas adc (bad) jg lods jb je or pop xor js in pop dec mov cwtl (bad) (bad) (bad) (bad) std or jb loop ror outsb daa rcl or out iret icebp sbb cmp pushf rclb (bad) cld es (bad) call jle outsl push cld iret clc jmp (bad) das lock popa xor xor and pop push inc stc jmp pushf xchg push xchg cli decl push repnz (bad) lahf (bad) (bad) and mov mov adc add icebp dec add (bad) das cld pop mov loopne add fucom jle out push jo cmpl icebp (bad) fild or pop pop in inc or pop fsubrl insl ret incb ja mov or cmpsl std pop (bad) decl out jae lret pop push or jnp imulb adc lret loopne subl add sbb push fmull repnz dec ljmp cmc add pop jo idivl mov out lret lahf pop jl das jo sbb or ljmp insb push cmp adc cli stos call (bad) pop cmp dec out ljmp call dec mov scas mov ficom loop fwait (bad) (bad) (bad) jmp and pop mov aam pop cli rorb scas pop jmp popf in ljmp dec pop xchg jnp fidivl sbb sahf mov mov shr out loop cmp lcall aaa xchg xchg mov sub ficomp stos jbe (bad) (bad) jg sub sbb lds xchg pop lock into fcomps data16 (bad) call xor lds jp gs adc sub pop (bad) ljmp adc js sub imul iret xor (bad) mov cwtl ja push pop cli js aaa push push scas int3 data16 xchg xor add (bad) pushl sub mov test cld xchg pop loopne iret std sub mov jae clc mov loope add (bad) ret pop (bad) (bad) (bad) pushl sub mov sbb outsl fcmovb aas repz xchg inc incl xchg call jl mov sarb mov std or mov add jl or lret add xor (bad) sti decl xchg sub arpl decl mov aas jmp decb cmp js sbb std (bad) (bad) ds clc iret les mov ja sub std cmp (bad) jg mov clc rorl ds mov lahf (bad) in (bad) (bad) decl (bad) in sti aad inc pop jnp xlat dec cld out dec ds mov jg outsl lock jge mov mov xchg lcall imul cli sbb sub (bad) mov fistpll (bad) (bad) (bad) mov cli sar pop mov clc shr xor clc das insl lahf jl pop sti pop aas incl idiv jmp pop ja std sti mov popf mov pop stc cmovg incl clc roll (bad) (bad) jmp jmp sub lcall fnop (bad) decl inc dec add xor loope mov aad sti dec test aaa inc lcall dec mov push push adc mov inc addr16 pushf (bad) mov sub cs repnz rorl movsl and hlt pop push js rorl mov sub ss jp shrl mov xchg shll mov cmc arpl (bad) incl outsb cmp and pushf add mov imul (bad) mov inc test pop fs or sub add (bad) lcall and hlt jecxz lret int out (bad) cmpsl faddl push push (bad) call xchg mov xor cmp rclb pop das pop xor lcall mov xor inc inc aam add cs outsl cs call ljmp sub pop inc cmp les int mov ror mov jg pop call divl out mov cmp (bad) (bad) (bad) jg cltd xchg mov mov (bad) repnz add jle test push test sub inc dec push pop repz jle mov (bad) jg loopne or push lds iret adc and aam ja (bad) (bad) (bad) fcmovne xor insb fsubp sub or adc lcall mov or out outsl cmc pushl test dec xchg or push int3 pop pop test push pop dec call jne pop and (bad) mov mov mov lahf mov (bad) jno imul ljmp cld mov (bad) mov out data16 leave mov (bad) (bad) call add dec aaa outsb sub pop push pop pop push push push iret cmc out inc flds mov shll (bad) mov cwtl loope int sub call adc jge jle (bad) jle loopne xchg pop outsb ja sub or call xchg pop push cmp mov jge push pop lcall std ljmp push fidivr pop xor xor sbbb xorl adc stc mov popa mov cmp mov adc pop pop ds faddl lret int bound pop push mov or jp movsl fadd std movsl mov cmp outsb into adc sub aaa aad lcall std mov xchg mov mov notb or or ret ljmp adc or clc mov int lds pop jo loope (bad) movsl (bad) sub and cs mov cmp popa inc enter and xor xor mov sub and mov cld or cli nop hlt fbld jg ds shrl and out adc (bad) jae addb fiaddl mov lods mov add add popa push sub call fwait pop lds test and jp pop or xor fs push scas outsl mov xlat popl inc sub inc push ljmp (bad) popa lcall jecxz cmp rcl mov sbbl cwtl inc pusha es add pusha xchg or jp push ret jle lock (bad) cmc cmp mov adc and addr16 push jns ficom cmp insb nop lock lock xchg cld loop test push inc add (bad) pushl mov mov lds mov xor pop cmpsb mov call xchg or pushl pop or je cs sarb movsl stc hlt stos pop sbb dec (bad) ljmp mov jp pop std fwait daa or aas je mov pop scas std idiv icebp (bad) (bad) incl rcrl push and sbb outsb sbb sarl outsl bound fildll (bad) mov stc inc xchg ljmp jno (bad) mov nop insl repz mov xchg or cld jecxz repnz push (bad) (bad) cmp jl stc mov xchg pop (bad) jno es mov xchg rep and mov pop sub cmc outsl jne sbb (bad) (bad) xor clc fcomi inc ret (bad) (bad) lcall xchg cmp mov mov dec out xchg (bad) decl rorb push mov call sub (bad) (bad) ljmp adc cmp sub adc and cwtl stc or pop xchg lcall hlt or ljmp lret aaa outsl xchg cmp cld mov mov sbb ret jge pushf xor or (bad) (bad) (bad) jg hlt adc cmp push cmp inc cli sub cmp (bad) xor minps (bad) (bad) (bad) in sbb sbb jbe popa sub (bad) xchg fs pxor ret int3 popa push pop in lret into (bad) (bad) fucomip lcall loope fstpl (bad) cmc outsb cmpsl fisubr xor out icebp (bad) jg movsl inc loop stos add lock ss mov fisttpl das std ljmp and icebp jmp cmp jge jp or (bad) sbb js dec push fcomps adc jo jmp les pop adc pushf jl lcall (bad) lcall fcmovbe ljmp pop add push add or dec movsl inc jl stos (bad) (bad) (bad) incl lods xor in mov push rcr mov or daa (bad) idivb (bad) (bad) jmp mov pop mov push and pop pop xchg ljmp in mov cmp (bad) call les cmp push dec add adc dec addr16 (bad) (bad) dec push mov stos int mov mov mov (bad) add test or (bad) (bad) sti mov sbb add (bad) (bad) out pusha and pushl adc dec dec data16 mov call aad sub std (bad) jg add mov cmpsb add xlat and sbb sub cwtl pop xchg dec sub rol add cmp push pop sbb (bad) sarb mov (bad) jg jne pop cltd mov pusha pop imul pop pusha inc xor js into mov xchg je shrb (bad) loop hlt lcall cmp imul xchg pop addr16 or popa imul fistpll or rolb pop movsb jb jbe (bad) (bad) (bad) cld cmpsb xor rorb std dec jns lds rcll jne (bad) (bad) (bad) (bad) mov out adc mov and repnz adc aaa (bad) mov mov (bad) cld mov xchg jmp in jge ljmp inc (bad) jg decl adc push nop clc lret jle mov dec ret push dec inc jg push pop call rcll stos xor arpl ds xchg repnz push out gs out mov lcall cmpsl popf adc dec cld push (bad) aas sbbl push repz inc leave into push (bad) incl xor call mov test out xchg (bad) cmp das stos mov lret ss push lret pop ljmp sti aas fidivrl shll clc pushl mov clc ja mov mov push xchg (bad) decl popl call leave inc mov xchg fsqrt jno std call fstpt mov sub jecxz push out pop cld pop pop das std outsl (bad) dec out mov lcall xor ljmp call in (bad) mov jecxz sub psrlq out mov mov (bad) fist ja (bad) aad push dec xchg outsl jecxz loope nop popa dec dec std (bad) push and push lret sbb xchg aaa inc sub movsb movsl lea aaa jecxz pop incb aam jns stos push ja gs stos dec int (bad) decl fisubrl aad aaa rcll push aas mov (bad) xlat jo shl stos stos std outsl cmc xor pop mov cmc loopne cld (bad) (bad) lcall das mov ds jle movsl pop (bad) lock lret incl (bad) or fcos mov jge movsb jge in inc add xor cmpsb cmc sbbl jecxz (bad) mov sub or jg pmulhw dec nop stc ds xor jmp cli (bad) call sub jnp mov mov mov test jo sbb mov popf jne push (bad) mov sbb push pop add loopne enter sbb push lahf (bad) (bad) (bad) incl outsb push mov loop cld int3 adc or adcb xor mov sarl (bad) cmp xchg gs or ficoml mov (bad) sar outsl lock fdivrs scas dec jnp xor outsl cli pop pop mov sarl xchg mov loopne outsl lahf mov push adc fdivl add pop std (bad) pushl push movl xor push notb (bad) (bad) (bad) (bad) jg xchg pop pop call cltd or push das arpl outsl mov cmp in add jno (bad) (bad) mov into sahf or pop jle rcll ja aad push mov loopne cld bound out call sti sar arpl stos lahf cmc or mov cld aaa nop push sbb cltd cmp jle int3 inc jle pushl add stos leave sti (bad) jno lds lea push ror jnp (bad) fucomip sub insl (bad) or (bad) lods ljmp (bad) (bad) (bad) jg inc mov lret hlt mov lock test lahf jo ret fnstsw lods or lock daa or test data16 jnp fnstsw fbld imul mov push mov bound (bad) (bad) cmp mov pushf repz pushf (bad) pushf cltd repz int3 icebp outsl cmc pushl and mov and cmp jno loop and fucomip mov adc out sahf pop aas notl jb mov xchg mov (bad) jmp rcrb repz cmp insl push arpl jecxz (bad) incl arpl cs lods pop pop (bad) cmp in sub call jg pop pop enter cld mov adc lcall std inc cvttps2pi rcll cltd add xchg mov loope (bad) (bad) (bad) inc test mov cmp (bad) fdecstp fldz fsts jg adc jmp iret int3 (bad) fs in test lcall rclb divl int3 pop push pop mulb mov inc mov jnp pop ljmp (bad) outsl sub push ds (bad) call negl inc ret add xchg adc mov push adc jecxz or mov movsb cmpsb sbb ljmp mov mov pop (bad) dec xor add jae fbstp (bad) fnstsw push out pop icebp mov pop jl mov test or cmp mov xchg add cmpsb pushf sub mov xchg xor aaa lret pop in pop pop lret ljmp psubusw adc dec dec xor aam jne mov loop inc cmp mov lcall popf mov shl jp fisub mov (bad) movnti pop call xchg popa add loope or decl test (bad) jns add push xchg pusha aas pushf test es imul sbb pop ljmp pop adc ret clc fldenv or (bad) ljmp ss add adc mov in inc mov sbb pop (bad) incl incl es mov xor mov es add call push jle xchg loopne js (bad) sbb hlt rcll xchg lods and (bad) mov adc cli xor inc daa sarl jle ret sub push fstpl test ljmp pop aas xchg roll lret ds jp adc jbe sub aaa cli inc rolb adc mov les (bad) (bad) clc inc aam push andl data16 push sub aam (bad) (bad) (bad) mov fimul and mov cmc ja jnp pop xchg xor or cmp out push insl push (bad) into testb std add mov (bad) (bad) fdivrp sarl ljmp inc adc mov out or cmp (bad) jg sub fistpl jge stos inc push push add loope js fimul (bad) jge or subl movsb cmp arpl jmp or pop xchg sbb (bad) jg xor sub adc or pop dec adc bound in movsl (bad) (bad) (bad) incl cmc xchg pop scas lret mov push sbb mull int3 xchg mov push hlt pop call push icebp out ror or into rcll pop cli imulb mov push (bad) add pop popa pop (bad) mov ss (bad) aam jne push cmp lret ljmp xor shlb hlt mov dec cmpsl push lods mov push sbb (bad) (bad) (bad) jg sub jge flds or mul test loope stc push sahf int fnstsw jmp mov jns (bad) div mov idiv (bad) (bad) incl mov ret mov mov pop sub inc test mov pop inc movsb sti ret cld insb jg aas lret aas loop repnz clc and or aaa cli (bad) fcmovnbe push jo xchg (bad) ss adc and mov insb je in sub (bad) incl pop cmp pop sbb or xchg sbb or mov outsl sbb mov (bad) push xchg fistpl pushl gs pop test (bad) (bad) (bad) ljmp or mov lcall xchg sub push cs lret jg (bad) call xchg push fcmovnbe jne,pt std cmpsb lcall jnp jmp and sahf xchg sub cmp je imul test (bad) decl jl sub lea pop jl test mov std sub cmp mov (bad) cmpsl mov jno mov lcall (bad) jecxz js and cmp inc ret (bad) call and sub jbe faddl imul sbb icebp dec psubd popf dec aas mov jbe (bad) (bad) call nop int push insb aaa mov mov test movl dec out idivb mov cmp fmull and mov xor push cmp sarb fisttpll sarl xchg les inc pop mov pop sub (bad) xchg jns dec in cmp int3 cmc adc (bad) (bad) (bad) jg cmp dec es and jmp jae int3 xchg add add addr16 call xchg mov pop mov shr arpl pop jge xlat push or jne pop sbb cli stos outsb aam or (bad) (bad) incl inc mov xchg or inc adc ja dec inc push and inc push mov idiv test xor xchg jo mov aam adc (bad) (bad) ljmp push sub aad cltd or fsubs xor in pop mov idiv xor test mov mov lods add scas (bad) sqrtps cmp js in push punpckhbw sbb xchg and test jmp fidivrl fidivrl inc (bad) mov cmp push xchg jne cmp push imul sub imul and or mov loope xchg mov (bad) daa cwtl std (bad) mov test sbb (bad) mov ror aas out cli cmp cmpsb fldl mov out negl ja jae leave leave cli (bad) (bad) ljmp xchg sbb out add and push hlt (bad) out rcl lcall mov je aam (bad) (bad) (bad) decl and inc jno mov (bad) dec rcl mov mov scas lds push jp mov out cmpsb cmpsl addr16 cwtl pop icebp add pop call dec mov lahf mov push xor sub sbb ljmp jge add cwtl jne nop mov fisttp sub mov (bad) push (bad) jg jbe in inc fildll xchg cmp loopne rcrl jl icebp mov xchg adc jnp mov popa cli add outsl cmc das (bad) push xchg jno cld push ret rol or xor (bad) fcoms (bad) call adc push imul rorl push hlt mov adc aas adc (bad) pushl pop dec and ret movsl mov xchg fistpl push (bad) incl repz leave aam stc adc roll adc cmpsl js (bad) lcall jg test int jo cmp out (bad) and (bad) decl jno sbb or aaa jb lods fimull ss jbe movsl sbb add xchg cli (bad) (bad) in xor jnp cmp (bad) scas insl jp lods inc jno xchg mov std pop loop flds xchg js inc jge in push test mov xor lods cli mov lret out xchg (bad) out adc fucom call cwtl repnz pop rorl inc (bad) (bad) incl pop xlat cmc add cmp push or (bad) iret mov ljmp mov test (bad) jg add out adc cs push mov push inc lcall loop nop inc jl (bad) (bad) mov int3 cmpl js (bad) fisttp es in mov ss pusha fnstsw mov adc (bad) (bad) incl ret or cmc insl cmc pop mov outsl mov fildl lods mov sub or ljmp inc aam mov les test jp into mov (bad) (bad) (bad) fldl push int3 inc xlat bound and (bad) call popf mov out sub mov cmc sbb (bad) (bad) decl sub shr sub mov xchg sub mov inc movsb fdivr (bad) incl dec pop adc dec dec in jle jmp mov mov in mov jle inc test dec into es popf mov (bad) (bad) cmp test or jbe aas xor in (bad) push outsl test (bad) sbb jge pop nop stos and pop loopne daa repnz adc das in add cmp fldt cmpsb xlat (bad) pushl (bad) jno mov cmp rcl ja fucomip mov in fnop or push jp mov xchg pop pop cld (bad) (bad) pushl xchg push ds addl xor adc (bad) or cmpsl and lcall pop in test repz jae (bad) dec ljmp flds ret ljmp (bad) in pushf mov (bad) fbstp in stos lock int sub adc dec fsts mov add shrl sti into fdivrs mov push mov int scas jg (bad) (bad) (bad) decl or dec cmpl (bad) lcall (bad) fldl dec and push or sbb std xchg fcmove dec jg sar (bad) incl out (bad) dec cld mov and cmp mov adc ljmp xchg sub or push loop sub push sbb sub repnz in dec test mov fisubl xchg xchg push xchg mov push (bad) (bad) call cmp inc (bad) push dec and mov mov dec jne or jge mov pop add ret (bad) in outsl (bad) incl mov cmp inc pop adc cmpsb pop pop or and mov cld decl fidivrl mov adc scas dec fs cmp repz pusha inc and cli rcr xchg pop adc pop stos (bad) lcall xchg test sbb ss (bad) mov lahf mov sbb jmp (bad) jmp pop xchg xor xchg push pop std imulb aad mov adc push aaa ss sar call sub lods pusha adc stc ss add in mov adc ja cmc int outsl lods xchg fisttp mov adc std mov (bad) mov test pop fstp cmp imull (bad) (bad) decl pop int mov sbb mov pop inc ja xchg mov (bad) lcall repz jmp stc cli xor or cmp mov sti call inc mov out xchg mov out add xor xchg mov das call (bad) pushl mov jnp dec mov ds jge jge lods mov pop mov (bad) shrb arpl sbb (bad) jg ds cmc mov les addr16 add push arpl (bad) lcall cmpsl flds idivb mov in jne ss mov fldcw jp cmp imul imul adc sar xchg insb (bad) out xor cmpsb dec dec test pop sarl decb jne dec (bad) fwait xor (bad) (bad) jmp mov stos push repz orb xchg xor hlt push mov dec cmp mov fcoms out xor dec sub sbb jecxz mull lahf dec mov lods rcl fbld scas (bad) stos hlt jns pop (bad) fnstsw inc es sbb jmp fsubrp inc push mov (bad) jg jg jecxz adcl pop fisttp pop (bad) mov or cld pop xor lods adc adc (bad) incl (bad) hlt jnp sbb sahf stos mov adc inc jmp in dec cwtl test sbb in inc xchg mov test test icebp add loope (bad) and pop pushf pop sti adc mov iret ja flds (bad) (bad) incl (bad) xor mov repz fsubrs vpunpcklwd in push (bad) (bad) decl inc lods dec pop xor loope add in je arpl call jno mov lods mov in or inc sbb xchg test out jecxz (bad) (bad) ljmp hlt sub fwait dec xchg shlb inc jb les add rorl movl (bad) pushl fmull arpl inc aaa dec mov bound mov or mov cli out mov mov imul (bad) (bad) lcall jo jge sbb cmp push bound mov enter insb (bad) (bad) mov mov adc cmpsl mov sbb mov dec mov (bad) decl pop mov insl rcll push xchg roll into hlt fcomi out (bad) (bad) ljmp iret push mov dec out pop loop idivw dec ljmp cmp in (bad) call out into iret sub sub dec int3 dec lods test adc hlt jns repnz push mov andl push (bad) (bad) (bad) in cli cli dec pop in test push mov inc adc sbb xor das (bad) in push mov shrb call push (bad) xor negb xor cmp cmp insl sub (bad) decl mov pusha in mov sub inc inc leave mov xor jp call mov jmp int add mov mov pop ljmp dec adc dec add push test push (bad) (bad) inc (bad) int push mov mov shrb jo sbb aad (bad) (bad) (bad) pushl pop loop adc outsl je mov test cwtl dec insl xchg sub (bad) (bad) (bad) dec pop inc push mov test dec push lret pop jno aaa inc dec jno or sti in pop outsb iret subl (bad) (bad) (bad) push dec sbb dec jne mov dec imul in int pop (bad) (bad) (bad) ljmp mov leave push xchg popf jno outsb lahf and and mov mov and push scas icebp test flds inc dec xchg jmp inc xchg int3 inc dec xor jg dec mov je test push loope inc dec cltd jmp das nop mov ret cwtl loope xchg pop adc (bad) (bad) (bad) call lea mov mov mov inc loop adc jbe notl pop fsubrl icebp (bad) jmp pop add mov rcl outsb fildl popf or pop mov lcall fldt mov mov mov xchg inc sub outsl cmc rcrb mov stc sbb fucomip mov clc sbb mov icebp (bad) (bad) loope cs (bad) (bad) jg jecxz jl gs bound (bad) (bad) sub leave sub int3 mov dec adc (bad) (bad) jmp (bad) dec mov xor jp mov cmp (bad) and cmc push cs push push add loope loopne mov idiv pop inc (bad) mov jo ljmp push in test dec loop xchg bound add add dec inc sbb rolb call and (bad) pop into aam mov imulb (bad) (bad) (bad) fisttp (bad) inc and xchg pop pop mov jo inc inc jle dec xor bound adc (bad) in jae outsb divps or or insb lea outsl sub and add pop loope pop mov push pop (bad) push adc xchg or jno jg sbb inc adc leave adc dec cmp xchg cs aam pop xchg outsb imul adc sbb fdiv rcrl adc hlt gs rcll aad dec and paddq loop movsl rolb std push (bad) mov call mov mov das aad push dec cmp push out cmp std sbb jg idivl add add sub ret mov (bad) (bad) (bad) ficom inc push mov out into je enter addl das (bad) (bad) (bad) push add pop cli js iret test cmp push pop pop outsl cld cmp cmp or mull dec ljmp daa cmpsl jg jg out dec xor fstpl stc sub jbe (bad) (bad) jg fwait jle es cmpsb jne pop mov jbe out lcall xor pop fwait data16 (bad) ljmp sbb mov dec out dec mov pop ss pop fidivrl das mov cmp rcll and (bad) (bad) jg in daa rolb lahf mov pop les mov and adc loopne ror (bad) jg call jae aam xchg cmpl lret xchg push push popa rcrl movsl aaa (bad) push (bad) (bad) pushl (bad) shr mov and loope and jmp jae push (bad) incl add popa shl (bad) std mov mov loop (bad) decl pop mov (bad) or mov mov fs fildll hlt sbb (bad) fbld out pop movsl mov dec outsb in aam pop sub mov mov mov pop jno shr jbe cli mov (bad) incl mov jp and lahf inc pop cmp ror xchg insl mov imul jno test (bad) dec aam sbb (bad) (bad) ljmp mov ljmp test push fsubs movl cmp sub adc ret stos fcmove ret fwait pop xor out inc mov aaa repz dec cmp (bad) (bad) jg or and xchg arpl adc push cmp mov js pop loopw loop fwait or mov lret (bad) incl add push sub ljmp mov pop dec daa outsb and std (bad) push cmc adc mov jecxz rolb pop xchg fistp push mov ret aad (bad) imul (bad) cli repnz adc sbb loop or (bad) (bad) (bad) (bad) fdivrs fs mov pop aam clc rcl push fidiv int xorb fiadd (bad) push mov inc sbb cmp test shr inc dec xor add add hlt jle sub inc (bad) lcall mov and sahf pop xchg out cli xchg xchg pop jl out cmp and dec dec lds jl xchg mov in arpl lock inc xchg sub sub inc push loop repz (bad) incl dec ss fcmovnb sbb loopne arpl aam xor xor lods decl mov or xchg pop clc (bad) (bad) sub adc inc mov imul (bad) (bad) mov lods aas sub or (bad) mov js dec add add scas jb je cmp das cmp cs (bad) (bad) pushl cs das push outsl insl insb popa das insl outsl fs gs js outsb je imul or pop sub inc cmpsb mov push dec push push ret sub dec scas push das xor or add sub add sub lods aam add outsb jb sub inc xor or out mov inc outsb cmp jp insb xchg mov cs pop xor cmp push add jne dec insb in inc sbb or fcmovnu push jb cmp and sub inc mov mov fnstsw xor xor dec fstpt push xor push or and fildll xor inc arpl mov loope dec popa outsb jno cmp mov std push jne sub cmp pop xor push scas je and dec or imul jnp popa pop adc adc mov inc cmp jo imul imul das sub scas lock or push dec sub xchg iret cmp je or aaa sub mov test add and inc mov jb and (bad) inc lock dec inc inc js dec xor cmp ret xor add add cmp mov and in jmp and and push and ja sub and push js dec dec push sub dec jbe sti xor pop jo lea push and in inc jbe inc jae ds cmp or mov gs sub xor lds sub cmp sub sub (bad) push dec push lea sub add and adc dec int3 test add adc das arpl jo add imul adc adc add in add jo or add push (bad) data16 aas add mov pop jae popa pop arpl int push decl fs imul pop push jbe xor and cmp leave mov dec scas ja adc pusha frstor arpl pop insl fdecstp xchg and pop add dec ss jno jne add daa imul (bad) cmc fs addr16 out mov or inc outsb cmp sub mov add fiaddl scas scas scas scas or ret mov push xchg dec jbe hlt adc jb mov add push push test outsl std adc ja push out mov push or (bad) hlt push xor xchg fs xor fdivrl jmp (bad) (bad) (bad) (bad) xchg sub mov sub mov sbb dec jno repz (bad) (bad) incl test ficompl jmp (bad) mov hlt movl imul std in test mov add insb push mov psubd or ljmp adc in pusha aad jno mov aam dec std test ljmp hlt or cli test xor (bad) leave mov lods jecxz fcoms (bad) pushl jne fild or shrl cmp ficom push xlat dec std (bad) (bad) jmp mov and mov cltd xchg mov mov or pop loop pop aam or dec push pop stos sbb nop inc fdivl jno add lcall mov mov movsl in lahf xor mov js stc (bad) call xchg sbb push sub insb fs icebp inc xchg add out push imul insb sbb xor dec call cli das lahf repnz xchg push insb jnp add hlt or (bad) fnstenv gs jmp mov cld fistp ficoml gs aam pop popa mov inc ret sub (bad) mov aam movsl fisttp xchg fdivr (bad) (bad) mov sti hlt (bad) shrl imul mov sarb add in decl mov jb jno push stos inc add ljmp std call adc mov and test or mov popa into push stc fdivp mov leave fldcw and (bad) pop cmp mov (bad) (bad) ljmp and shlb mov lcall mov cmp ljmp rcrb adcl jae or test fs ds or or push in (bad) call daa scas cmpsb mov pop jge xchg (bad) shlb add inc std decl push (bad) (bad) lret mov sbb push imul aam loopne incl adc pop jp adc dec ffree (bad) ljmp out mov aad mov call xchg shll mov repnz addr16 fldl mov dec ss fisubrl or hlt dec sbb scas cmp ss jp ret out pusha fist pop cli (bad) jmp out mov jns imul andl shrb loop add incl ja int3 add mov das es (bad) ljmp cmp mov pop mov add mov cmpsl call ret (bad) mov sahf fldcw das std lcall ret es pushf mov add ss mov test jb add jp loop (bad) (bad) (bad) ljmp mov cmp mov fwait mov xchg or out fdivrl fisttpl aam roll clc jg loop mov push int mov ja outsl ja (bad) fnop inc mov out jge push dec cmp pop or adc sahf gs scas (bad) clc lcall icebp sar imul push js mov push addl jg inc mov cmp cmpsl notl dec fildl dec push scas fcompl fldenv fild (bad) jmp mov fidivr mov jmp repnz dec std (bad) dec xor mov add push xlat int push ficom and (bad) (bad) ljmp jp mov dec popa les sbb xchg sub aaa mov or sbb add sub fwait incl mov and push pop in outsl pop jbe insb and pop data16 add lock in ss add sub inc inc and push add add push push leave push xor push inc push xchg mov xchg push push push push leave test stos stos sub push push push xchg mov mov push jl or mov add and jnp (bad) adc push add (bad) push mov outsl insb push mov dec push add mov mov sub add or data16 inc jp push inc or fmuls push rclb push mov add sbb adc inc outsl adc adc xchg and mov sti pop mov shrl dec gs fldl imul notb adc jae jo lods decb je add sbb js cs or arpl or or or fs push outsl insl jnp insl and push inc dec bound push inc mov ret outsl jb push and test cmp bound inc jne jb jle fs or push jmp cmovge push push or jbe add adc push jmp call lds push and mov adc add test fstpt (bad) imul inc push or push xchg insb jnp dec popa mov ss lock cmpsb leave mull dec outsl jne and or je sub or push imul gs xor sbb popa mov jg push fsubrl inc orb mov adc jae or pop pop sahf ret lret push test aaa sahf adc mov gs leave xchg adc (bad) dec js mov xor nopl push xchg sti je push outsb ja push jae lods rcr sbbb insb scas adc adc push add popa jne gs popa dec mov mov test and and push mov (bad) mov daa or inc js or pop push mov outsb or outsl xchg or mov add push dec sub cmp insb push sub inc outsb lret or pop imul nop sub mov (bad) pop out fbld jno test mov inc and and mov ror stos mov inc fs pop inc jno sbb mov fcom mov dec xchg push fdivl inc sbb and xor insb dec xchg stc xor adc and push ret (bad) xor jo mov mov push and data16 push stos push adc sub js test pop jb (bad) inc jae movsb adc sbb xor lret and gs outsl inc gs push loope mov daa mov popa insl mov ret out sbb and or inc into loope pop das xorl fs test dec lods xor add push lds popa addr16 jo xor adc outsl inc insb cmp rolb mov sub insl outsb je int3 xchg mov cmp sub jno insb jae push mov or push popa and (bad) lahf into rcrl popa jle stos xchg bound push insb xor and sub ds sub je xor jae sbb push cmp ret adc and adc dec stos mov mov pop outsl jecxz mov inc rol sbb xchg or pop or (bad) imul das push ss add je jecxz push inc fsubrl add iret and jno int push sahf sbb js adc lods lock mov and loope (bad) icebp sbb arpl cmp jnp fcoms addr16 data16 push push sahf inc js out in xchg lahf dec gs loope sbb push push popa adc rcrb aaa int3 and pop das cmp test sbb adc ss sub fs xor (bad) sub test push sbb xchg lea pop inc and push sub loop mov add rcll insl xor xchg dec je mov sbb sbb inc pop nop mov adc lods mov adc mov cmp adc dec pop and aaa mov push je dec dec inc in push movsb add push repnz inc orb mov and or pop out xor add insb adc outsl sub (bad) insl adc faddl push cmp adc xchg add mov mov test imul push outsl cli add and dec cwtl inc shl pop or and push dec aam lea loopne gs adc jmp cwtl imul sbb fdivs aam dec sbb fisub jb popa inc mov test je add mov mov test inc imul pusha imul mov scas and arpl sahf lds (bad) je lock or jne sbb dec int3 mov sub lret test mov or fidivl insb adc and ret sub movsl xor xor adc inc jge arpl cmp mov sbb aaa outsb add xor jo adc adc or adc add jmp add or add (bad) push mov add pop xchg add jo jnp push sub ljmp push push push mov push adc push mov add push dec add pushf mov rorb add add outsl subb mov mov pop pop adc nop add or inc rclb add push or mov add int sysret mov test cmp or outsb aaa pop add xchg and add sbb cmpsl xchg dec fadds and and xor jg aaa je cmp or jb adc fisttpl jmp popa sti jo fldt es incb pop ret mov or stos add jmp fildll push mov loop lret add add add add add add add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa jmp lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add add addb add add add xor add add add sbb add add pop xor add add add add clc add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add push add add add je jb imul inc add insb add dec add data16 add xor add add xor xor xor cmp xor xor bound xor add xor or add inc add insl add popa add jns dec add insl add add add dec add je add add inc add add pop add add add imul inc add jae arpl jb imul imul add add dec add je add add outsl add add jb bound outsl add jb add add add jbe imul add add add add imul push add jb jae imul add add add and xor add add and xor add add xor or add dec add je add outsb add insb add popa add add add outsb add add add inc add add dec add add add add popa add add jo jns jb imul je add inc add jo jns jb imul je and sub inc add add add add add add add add add or add dec add add insb add add add insl add jb imul add add add outsb add add add outsl add jo add add add add dec add imul outsb add insb add imul outsb add insl add add dec add dec add add add add push add outsl add add je dec add insl add add add dec add dec add add add add add jb outsl add add je push add jb jae imul add add and xor add add and xor add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add add add xor add add fnstenv add add xor add add xor add add cld xor add add or add adc add pushf xor add xor add sub add lods xor add xor add inc xor add dec xor add pop xor add js add mov add movsb xor add mov add add add mov add add xor add sbb add fidivl add out add add add (bad) xor add adc add add add sbb add add add or add xor add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add xor cs insb add inc inc push push xor cs insb add inc push push xor fs insb add arpl xor cs insb add inc dec dec xor cs insb add inc push xor cs insb add dec dec dec inc push cs insb add xor xor fs insb add push inc push dec xor cs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add inc jb gs imul je jo outsb push je jb add add dec outsb imul add push jne fs jb popa je add inc gs outsl insl jo je jb bound arpl insl gs add push dec inc gs outsl insb fs popa je push add ja jo imul add je jb gs gs jo imul push push inc jb gs gs outsl jb add and add add xor (bad) (bad) call in push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call addb add packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb pop insl jnp sti mov movsbl adc adc adc sarb rcl or adc in in inc pop daa push or std scas pop or mov inc jmp jnp ret insl fstpt push lea push mov (bad) or add adc (bad) jne push (bad) jg mov lods cmp mov ficomp or xor sub xchg outsb loope adc (bad) call clc or push push pop or cmpb je jnp push in jbe adc adc cmp adc fimull xchg xor sahf and push xor mov or imulb daa icebp jmp xor ret ret (bad) mov pop jne mov mov fldcw jnp sbb sarb je push push call fcmovnu scas mov hlt sbb sub or jl mov je cmp jae mov xchg jmp or adc mov je cmpl jbe or add out sti mov or les neg sbb inc mov in pushl leave or cmp ja xchg and ja jg adc rolb or add rorb fldl and ffreep or movw in imull mov xor mov mov mov ss mov in or mov mov lea mov pop (bad) mov je jae jae fistl xchg hlt push push jmp gs push cs ja mov add sub fildll jl lock inc push cmp jbe fcmovnu test cmp push sahf or insl sbb or sub mov mov mov add or mov sub nop adc cmpl dec mov loop mov mov cmp add push sub push pushl mov push pop add jg pushl push dec addr16 (bad) std in fidiv out add xchg jl int3 mov sbb mov nop or add fisttpl xchg aad cmp sub push fadds or xchg nop test shrb cmp rcl fnop outsb dec cmpsl cmpl xor inc push scas mov je ret mov decb (bad) adc lea push push push repnz mov cli or test pop pop repnz push mov mov jg inc addl mov lock fisttpll mov add leave adc push or mov test or adc push jb push hlt mov enter rorb inc adc sbb add mov xor lea mov add xor mov mov mov add lea jmp std fisubr je (bad) xor lds mov mov dec sub cwtl sub cmp adc cmp insl lock mov push sbb fisttpl add shufps adc out mov push push (bad) (bad) std mov pop jne mov mov fstl adc mov popf sbb or mov sbb or int test mov ja jbe pop pop jo jp pop outsb subl (bad) gs inc clc adc mul pusha mov pop in push lods pop pusha push push lea xchg inc xlat js jecxz jne push adc add add add incl and xor jnp fnsave in push dec andl test mov (bad) sti jmp and push or xchg divb mov cmp jle cmp pop gs outsb mov inc add inc jl leave inc dec out push js xchg notl outsb xchg adc lret cmp mov cmpl aaa mov mov lret jno add xorl mov mov jmp (bad) (bad) push mov push outsb xor mov fcomps fsubrs mov out out cmp mov add leave adc mov or push mov jbe jbe sub mov (bad) xor add xchg bound fnstcw adc or push movb mov cmpsl aas test or inc mov jns movsl dec mov repnz iret je movsb and and and jns dec je mov lret bound je mov inc adc xchg je test inc cmpsb or pop mov fwait (bad) push cmp add cli mov and repnz jne (bad) mov or movsl mov add stos ja inc jmp add sbb daa xchg into cli lods fisubr fnsave std xlat fiadd push clc add sbb inc or jae mov pop lods push fbstp add call les pusha inc mov cmp xor mov mov ss ret outsb inc lea mov mov stos in dec and jne lar fwait mov in mov aam cmp jae cmp je popa inc inc cmp lcall fdivrs sahf ret add sub mov jmp mov int3 push or or add push pusha (bad) adc lock dec (bad) in in sub push test mov in (bad) jne mov in out lea adc inc stos push in pop fcmovbe fwait int daa or or movb scas stc aad adc mov add inc cmc xor push ret add jle mov nop mov add sub lea cmp or (bad) lea (bad) test dec jno pop decl stos mov addr16 out cmp mov mov xchg (bad) xor add fsts mull sub test mov iret fist outsl mov push lea (bad) incb jl addr16 js jns push clc mov sbb jp push orb pop cs pop add adc mov push push pop push orb neg pop lret outsb jle bound pop lods mov out add mov insl pop adcl xor sub sub push xchg and sub (bad) scas inc xor sbb int and xor fsub push pop sbb cwtl sbb xchg xchg jno jl jae fs mov (bad) or sbb fsubl inc out xor push sub or lods sbb mov or jnp jb outsb push add push mov sbb mov inc pop xchg aas fdivs ja push aas or dec inc pop popf push insl or inc push cmpsl xor mov decl xor mov cmp inc dec sub adc mov adcl repz (bad) pushfw je (bad) out mov iret sar adc add testb nop fwait (bad) je stos adc popfw or cmp push out test outsb rclb aaa add mov or add outsl shrl ret add sbb adc out push out out loopne mov dec push xor jecxz loopne push das adc imul pusha mov jle lea inc lea or cmp ss int sub and int adc xor je (bad) test jne repnz push jno daa aad inc pop mov xor cmp sbb inc cmp lret jne rcll fbld pushl jo cmp adc loopne ret adc sub xor fsubp sub cmp push and jecxz stos aad adc push adc push add mov sbb insl in arpl push pop in add rcrb je push jmp sbb outsw sbb xchg inc adc mov mov ret ja andl inc add and imul pop (bad) pop push or xor mov fstpl mov pop pop jmp lsl pop jl rclb sub push pop jmp test fldl push ret mov push push mov mov add push jbe add test xor fwait jae mov or rorb xor scas cmp adc sbb mov shr aas xor fisttpl daa pop ss lods stos ret sub cld adc push inc arpl rcll push in and call test xor out sbb lcall (bad) insb sti mov lret sbb sahf or in push mov lock jbe push or xorb push push nop push loop mov clc and mov pop int mov jmp das ficom call (bad) pop inc jb (bad) lea lds jae inc or inc push fdivs das ja adc adc fcmovu cli cmp subb sbbb jmp push push mov test leave idiv mov orl (bad) pop orl pop mov xchg xor cmpsb imul adc pop or mov insb or add pusha push rdmsr ret shrl cmpl xchg rolb pop xor dec xor test cli mov fscale arpl add dec jns sbb aam inc pop cwtl adc mov adc bswap push inc push repz stc jge sbb fs push sbb mov rorb adc push iret jmp mov fnsave sti adc jns cmp mov jne sbb add inc sahf sti jo cli pusha sti push out aaa xlat push cli jo movsb push xchg xor and int xlat pop sbbb add inc test sti fcoms adc xor or popa mov and stc xchg sub adc loopne jbe push mov adc sbb es pop push pop push push jne pop push xor lock fiaddl sbb push push pop push sub (bad) adc adc aam data16 cmc mov movsl lods cmp cmp je les movsl add fadd or jmp mov popa jae repz or push mov pop mov inc push jecxz and mov mov mov int3 sbb mov mov push jne das cld cmpsb mov in push inc das and push imul ds mov fldl testb cmp pop add cmp or sti push out lods dec xor jmp es inc lea icebp mov sub jmp fsubrs movl mov sub and clc ds lock dec movb add mov push je add jbe or pushf loop adc loopne loope inc xor or sarl or jg pushl jbe pop arpl bound std es lds lds pusha mov dec mov hlt dec test rcrb pop shlb mov mov fsubl jnp push xlat push imul leave dec rclb mov xchg lret adc mov loopne jae or ds cmp xor in push add inc shlb insb jnp add jne xchg jle push (bad) xor cmc in out loopne pop push jb je leave xlat push push mov test push aad lock aam xor lock popa (bad) push js push push outsl mov ss jmp push (bad) fnstenv cld cmp cwtl mov push pop mov mov sarl stc add cmp je (bad) aaa push cmp jae outsb pop xlat in push pusha psrlq mov mov jl fcoml push xlat outsl push or and dec lea and addl and mov inc sbb test mov insl adc adc add xchg cwtl add pusha pushf xor add enter (bad) jmp xor xor imul xorl pop rep cmp push pop clc rol cwtl and xor mov pop mov inc jbe push push in popa shrl pop pop adc call jne and pop mov cli adc and jmp pop xorb add idivl push push shrl es repz mov xchg push jl negb cmc xor pushl mov outsb rcl pop ficompl sub pop pop testb orl jno call mov out icebp cmp or mov andb mov push mov add push lahf pusha clc lahf aam inc adc push and cltd call inc lea or lea or jle inc pop scas rorl push push das pop push sbb ret sbb rolb push (bad) add xchg decl mov lcall scas sti rorb dec icebp cmp nop pop scas std mov jo jmp fs add je and inc lea add add or pop movzbl inc jmp ja addl dec aaa add inc cmp pop mov unpckhps inc xor mov add xor test sbb xor mov add push sti and addl cmp or mov jmp cmova movsl fsubrs inc push fnstenv add cmp cmp push clc add add maxps sbb outsb decl and xor cmp mov add jg js mov ret test enter movsl push decl and test jne dec cmp jl or jmp outsl xor mov mov idiv (bad) fisttpll sarl jne cmp jne cmp jb cmp jbe cmp pop jne fistpll sarb loopne jbe (bad) inc push dec (bad) push cwtl lcall ret push in push movsb pop jno insl inc roll imul hlt mov in pop and ret inc lea push pop aam push and je push push and aad clc xchg adc mov pop mov jne sbb mov xor pop add rclb push xchg je add push jne mov adc cmp int3 cmpsl js test pop add jne jbe test cmp (bad) fwait loopne jb sbb sub bound dec loopne or add or inc loopne adc or sub push adc test dec adc sub out inc sti adc and std mov adc add add in outsl imul push adc mov sbb or scas pop jl sbb loopne push push push push push data16 push movl add push test sbb jne (bad) inc in sarb cwtl xchg cmp pushf sub xchg lahf xchg cmpb outsb or sbb mov fsubrs in pop or dec enter push test lods or adc mov push or jb mov and sub nop sbb mov (bad) xor adc fidivr add mov cs ljmp adc loop sahf ret je mov (bad) aaa les push jle lea loopne jle cmp jge inc add enter popa aam int push add push push (bad) cmp xchg sti or cmp fucomi in sub inc adc sub push or push xor jmp jns push mov test inc pop out das sub cltd stc (bad) arpl mov lock push jle fnstcw push sbb mov xchg adc outsb adc jle imul mov add adc add les call cltd pop imull fwait outsb mov inc test cmp lea and clc icebp and std pop push cmp push sub jge pop movsl fsubrp push adc cmp jl sbb inc cs sahf jo rcll mov pop mov sub imul cmp (bad) sti push add push push add fwait xchg and inc push js (bad) add sbb insb mov xchg mov xchg inc cs jg hlt add add push inc lret scas jns adc mov add mov test mov mov cltd xchg add and orb mov xchg sbb push mov cs xchg cmc mov cmpb adc add fwait fwait lds push cmp cmp xchg rolb sub mov daa loope dec sbb jmp movsl (bad) ljmp out in sbb sbb sub add or jne or and dec aam adc les jo call test inc mov and bound push push xor cmp andb popf mov js enter xchg jo dec cmc pop or xor adc sbb pop jns pop inc cmovs inc add int (bad) or pop jl and mov sbbl je add fistpl imul mov push lret jo or cmp sahf enter stos jle adc sbb pushf clc ror mov dec inc rcrl push and pop imul pop aam cmp movsl notl jge leave rorb adc add fwait pop sarl mov std scas pop addb adc loopne mov push mov push jg fcoms jge mov ficompl mov repz loopne ja fs add mov and pop nop std (bad) out xchg adc cltd mov call mov fstpt or sub pop push movl add aam and lahf andb arpl or and xchg jmp adc fmuls cmp add mov test mov je dec je add insl (bad) mov xchg ja or jmp or jg loopne bound mov clc push int3 add rolb scas mov mov push aaa push push outsl insb or mov (bad) out pop sub insl int3 jo jg das and adc call icebp inc sti outsb in das push inc aaa neg sbb and add xor mov push mov aam in mov inc repz mov or push add lret inc jl add dec sbb addr16 add dec sarb adc pop and jns push insb inc add adc xorl jmp and int inc dec jo rol das (bad) mov mov push push jl pop pop mov xchg fcompl testb shrl (bad) fsubr adc jle les pop add mov pop aam decl mov xchg push dec push or adc aam cmc maxps test (bad) cmpsb sbb mov mov arpl or pusha movsl clc push adc das cli or test ret (bad) xor dec stos call std je cmp jb push jbe add movsl sbb xchg xor inc rorb pop mov push and push sarb pop or lea xchg int mov pusha aas push push mov sbb insl dec push cwtl xchg int jbe adc cmp pop mov js push adc or inc push mov adc mov nop pusha push loopne out inc in jp repnz dec mov inc add mov sbb xor lock orl push pop jnp sbb mov jne das adc addb xor js jge add add fcoml xchg lret adc loopne pop scas shrb movsl or lfs call jo mov or add push or xchg or mov push and push in jmp lea xor call push sbb pop (bad) lock jnp (bad) adc (bad) push mov xor es idivl repnz push adc add and and mov mov or mov cmp fstps dec jge mov mov cmp inc xor mov (bad) jge push (bad) mov les pop test lret (bad) xor sub cwtl shrl sub vcmpss cmp push add cmp dec pusha cmpsl mov ret jne sub jnp xor mov and fwait mov dec jg sbb nop push push adc mov mov outsb adc sbb test and add into add (bad) add mov cmp fistpl call push incl push push adc mov or pop push daa add insl add push aam inc sub add mov movlhps dec adc push pop xchg ret inc sbb jmp sub push push repnz xchg push repnz fcoml movsb xorb test xor nop or mov pop sysenter rclb int3 dec push cmp icebp push loope inc loopne sti in add pop and cmp or push fcompl (bad) sbb (bad) fcmovbe jbe in adc push lahf sbb fdivr in mov in push add push push push loopne in ja nop mov cli add es loope adcl xchg mov sbb mulb push or inc push sub lea call or (bad) sbb pop mov loope jge mov mov jo mov cmc add fnstcw out pop lret and push ret push cmp fninit lahf jne jnp shrb inc lock pop mov loopne push xor dec ja arpl push mov or or pop notl mov imul or and cld and std and decb or es adc inc (bad) mov mov and std sub fwait cmp add in popf (bad) or add subb add jl inc fmull and pushf xchg or daa loopne out gs sbb shr fsubs jne mov lea push and add gs mov add rcl aam inc aad inc fnstenv fdivl rcrl jp xchg jnp mov sbb push cmp push sahf inc add testb sahf and je or mulb lsl jne dec int3 sbb mov push jl or add push add push insb or add out (bad) sbb sbb sbb mov ds mov mov push sahf adc lahf cmpb and push mov mov mov add cld cmp pop sub es push mov push push mov and test mov jbe mov sbb jbe cmp and jmp pushf fisttpll xor cmp mov pushf jge stos inc sbb push int3 loopne sub dec nop cmp or mov imul adc (bad) fldt ja push add sarl enter scas enter jb mov mov adc movl clc adc out les les mov fadd inc enter cld stos gs or sbb loopne or bound mov jno pop mov add push sbb or xchg sub add stc add pop jle fcoms and jne push push push cmp add or js outsb push lock mov sar movb and test mov andl jnp push xchg cmp push sub sbb add add cwtl out pusha into adc mov loopne faddl pop lods add movsb mov xchg push (bad) in mov adc push (bad) sub push mov es (bad) fildll cltd and add mov sar inc shl adc pop sub and jp mov (bad) cmp jg cmp jne pop (bad) pop in in inc sub push pop jne add jmp sbb adc les or test push push fimull sub xchg add xor xchg jg mov mov je cmp jl cmp push cld pop or add inc outsb jp test pop cmp dec dec sahf push jns out daa popa add adc adc xor adc cmp push stos or pop add pop cmpsl cmp je pop push jae cmp je sbb pop push (bad) movb mov push rorb add push jmp cmpsb ss adc ficom stos insl test or lock push adc add or push cmp inc dec fdiv sbb movb clc push inc clc fldt xchg fstp adc cmp and ds loop or clc push sbb test jne mov fadd mov add pop or fmul jo inc jb push or fsubrs movl push adc sub fistl or or mov mov lds cs jo out test xor std pusha adc push push mov xor repnz sub popa pop inc jge (bad) dec and ret pop iret push sub fwait aad or sbb xor mov cli aam xchg pop xor push lock inc imul sbb pop mov push mov jbe or push insb iret mov dec xor jne add add cmp sub xor out dec push lock add rolb and mov dec fistp clc push in mov add shlb in loopne mov or popa add sub mov xchg sbb xchg into clc lea (bad) adc inc add push mov mov or sbb jmp mov (bad) mov mov push addr16 push mov cmp imul add cmp jl cmp (bad) decl pop mov mov (bad) (bad) out cmpsb mov (bad) adc jbe pop mov xchg jne cld mov cmpl subl adcl in shll or nop arpl lock mov xchg xchg jge mov add push push jbe push lret push dec cs xor mov lea testl pop mov popf mov pop dec ds in fcomps pop mov and dec inc sbb dec push push pop inc and cmp push std add jmp push jmp gs xlat in mov (bad) in roll jecxz fadd out es add add or add mov add add nop movsl in scas add add add add test cmpb cmp loopne cmp inc daa test push mov ret test cmp inc add or xchg fnstcw leave out push inc in mov test push loope mov jl mov cmp outsb pop outsl lock mov pusha and sub pop push inc decl xchg ret adc dec mov cmp cmp cmp out push jge or idivl cmp es or (bad) lcall adc add push cmp inc fstl insl sbb add cli paddq js xlat push pop mov mov in cwtl fcomi mov mov lea and stos sbb cld add andl pop fnstcw sar sub test push pop inc push inc call sub lahf jge cmp imul or mov sbb je add pusha and adc xchg add adc mov push mov jo inc adc test cli jl test dec jbe pop xor sub xor jle ret xor jle xlat mov clc mov dec sarb into jmp jge js cmp sub pushf xorb mov pop or jbe out sub pop or inc sub or xor outsl mov pushl outsl out sub jae cmp pop jne jnp fs (bad) aas inc std add cmp aaa orb add sub movb adcl mov and leave js mov inc jmp add xchg sub sbb loopne (bad) push sbb jbe or xor jbe dec idivl cld cmc xor pop add in sbb sub jmp mov lods inc inc mov ret adc sub mov pushl cmpb shlb jmp adc je adc xor jmp add push lods sahf mov repnz sub pop pushf lea aad cmpxchg push or inc lds xor push jmp insb sub mov push in sbb push xor mov (bad) jns add mov rcll adcb cs push mov or repz insl mov inc imul jae mov rorl cmp jge je int3 or add decb push or mov test fnstsw jb mov sbb iret push add mov add xlat mov arpl push push and cmp adc test jne into mov mov sbb adc add dec dec sbb mov into sahf add xor imul and lock sbb pop push or or or fwait iret mov hlt pop iret aas xchg sbb adc je cs and loop sub cld faddp out add add cmp jb mov lock je es xchg push mov pop push jge xor jo pop adc push inc mov add dec ret or xor pushf push push cmp fist sbb dec aam (bad) sub sbb and push iretw adc daa mov or int sbbl push mov xchg adc xchg fisub push mov push add and push mov lret (bad) pusha les jns (bad) aaa jae xor clc push jmp pop jl and (bad) (bad) jl or xor popl and out mov sarb rolb sbb in jne or xchg jecxz loop jp es fmuls test imul cmp mov (bad) add jne and pop imul or inc or push mov mov sub (bad) pop xchg nop bound adc in sub xor jo push mov inc cmp rcr pop mov pop lock (bad) push and or ja sub aad adc jg push add cmp sbb jmp cmp mov cmp movd je cmp pop pop pop ljmp cs and mov mov dec addr16 and rolb into mov mov mov jns xchg pop test or xchg pop inc outsb (bad) (bad) push js stc pop pop imul and and in sbb mov insl int sahf dec clc lea je adc dec pop push push movsb xchg icebp arpl in loop and mov lods push (bad) pop insb push xchg out ret (bad) aaa insb add jne xorl add sbb add aad dec mov shl es xchg fsubl adc xchg xchg fs push push xchg outsb sbb adc push adc and cmp fildl movsl bound fimul adc push je sub xchg fmull mov pop int3 or roll push ds mov idivb outsb popa sbbl call push shll push rdpmc pop stos cmp out dec jne xor add adc out xorb cmp lods mov cmpb clc (bad) xchg adc adc sub sbb mov push dec add orl scas xor and pop and fwait loopne push push mov add cmp movsl push pop int3 jb mov or orl or jo dec or lret daa dec dec jg sub inc mov sbb jo insl mov pop add outsl lock aad lea cmp mov adc add add sar dec rclb adc loopne push jg or mov loope xchg push inc mov jmp mov or push cmpsb sbb bound or stos push dec jle inc cwtl test xor sbb fisttpll ljmp sub movb pop das insl mov push addr16 pop mov (bad) ja jl or mov mov rolb push push push add clc xchg adc lods sub ret inc adc (bad) arpl pop cmp lcall imul dec adc movl or adc push fistp push inc push mov add and inc imul (bad) add push inc add sub xchg xlat stos (bad) mov push push pop xorb inc xor ss mov movsl jno pop pop xchg mov pop arpl xor add mov mov inc push pusha pop sbb in ljmp ds adc dec aas pop popa mov xor lock imul insl repz add daa adc dec pop dec dec sbb lret bound sbb mov call cmp inc dec imul push lods xor add gs mov jnp arpl mov out mov dec add jge jmp adc push add cmp pop cmpsb in push inc mov rorl xchg push inc and lea add inc dec xor int addb sub mov inc test add xlat push (bad) jmp cmp dec dec mov orl dec pusha fistpll or add push push adc or pusha add mov or add xlat push lods jnp jl or call push std test push mov xchg add test sti addl (bad) push jne pop dec or jb or mov mov mov orb mov js nop pop cwtl add xchg rol cmp andb lea call pop dec loopne out sub lret adc add mov mov pushf (bad) and sub and sub cmpl outsb push xor arpl jge inc ret cmp fsubl repnz lret xchg ja in pop enter add sbb pusha add xchg lock push and inc fcomp add and xlat sub js add loopne movsl insb xchg and push push cmc sarb inc fistl xor lock call dec test test sbb ret enter pop negb into pop es sbb loopne fcomps xor add push sbb jge xor pop in pop inc sub jne push arpl fldenv and or dec inc (bad) hlt rcll daa dec push push sub adc xchg scas imul das in inc sbb (bad) xchg sub arpl or sti xorl sub out or fstps in arpl or jo cmp (bad) push inc xchg and add (bad) nop inc fmuls mov adc test mov in and dec dec dec lret test test or (bad) or inc mov and and jns not dec sbb add rcrb nopl xlat xchg lods fadd inc bound add xor or jmp pop int ljmp or add xchg push dec mov or imul push adc sbb test outsl add pop (bad) mov mov lea int3 mov adc dec inc push sub loope sub sti sub call or sbb adc mov add add jnp and cmp orl pushf xor adc jmp pop inc and lods adc addl or arpl sti push and mov pop fisttpll push fst mov ds push aas inc jl scas loopne xor pop mov les pop sbb xlat push or sbb or enter lds lods inc add inc jle add add and mov push jo lret (bad) mov sbb add sub arpl inc mov roll les test add lahf ss adc cwtl jg loop jbe inc mov (bad) add mov push in adc je andl cmp add nop (bad) int3 add inc mov or jns popa push lods enter test dec test ss jnp dec mulb adc ss (bad) pop cmp sub mov aad imul add push xchg les das jne call xchg pop cmp (bad) pop imul orb jno fimul les xor movl inc sub call lcall sub mov addr16 clc adc mov add and movsb loop jnp setle in push jb or xchg lss mov je pop je in fldl enter push inc xchg sub adcb call inc xchg xor add test sub imul test xor sub pop dec incb pusha (bad) cmp je push push in or popf push lea push decl fidiv mov je (bad) icebp int3 fcomp sub xor mov rorb push rorb lret out adc sub lcall fmull rcll std sbb and xchg or xchg mov notb xor add maxps pop cmpsb pop mov sbb js out (bad) das inc mov aas cmp ljmp frstor adc mov fidivl repnz clc or and inc push nop ficoml ja clc pop mov sbb sub jno xor ja rclb adc adc lahf inc push add pop mov sbb push mov sbb push inc add mov mov sbb push loopne aam lret arpl mov dec enter call push jne jge mov outsl fild test mov push mov or mov sbb xchg mov orl (bad) jne push pop or ljmp and dec mov lods sub inc add add in ds ret js call sahf in leave ret jne push add inc push cmp xor mov push scas inc push andl lock lea jl pop cmp xor sbb and cmpsl mov rorb jo mull push pop jge clc cmp mov rcrb (bad) imul add idiv mov imul cmp jg (bad) clc fistp mov lea ret neg sub add (bad) incb cltd pop idiv sub jne xlat ret cmp inc mov push out lret rolb jbe cmp popf mov xchg sbb outsb adc test adc xor mov inc xchg ret dec xor sbb dec xor push or jne add fimull (bad) sbb pop in inc sbb orb jne adc push popa xor xor mov dec push push xor stos shrl add mov adc mov jmp mov jmp fwait ljmp dec aam cmpsl mov clc or xchg je inc add jle sbb add sub pop aad xor pusha push pop stc mov push inc jmp sbb fmuls test push sbb dec xchg popf les aaa imul les loop out push inc lock add inc add cld ds add loop aad cmp push pop (bad) out inc lds adc pop mov faddl add pop cmp jne call push pop cmp pop add jnp stc pop push test sub hlt sti fwait sbb mov sub sbb (bad) cld and push and fwait and aam dec push push adc sub (bad) cmp outsb pop and cld pop pop inc xor add cmp or or pop mov jb loopne,pn cmp (bad) mov jmp mov xor jo icebp (bad) jnp cmp jae lea push loopne clc (bad) lea popa out sub and jb loop add mov mov cmp mov imul inc nop into rcrl add xchg inc mov fs ss add (bad) je pusha (bad) jbe subl sub mov mov cmp and and pop das cli pop outsl int3 sub adc mov dec mov adc ret cmp sub and hlt nop sbb and bound jmp cmpb push cmc cli loopne out jle shrb xor xor shrb jnp nop xchg movl and pop adc flds jl ret adc xlat rclb sub scas adc cmp adc pop addl mov call js into leave mov adc push sbb insl sbb xor ja jno add sidtl jo sub outsl dec push and mov pop xchg adc mov and clc jb loop push mov sti xchg call sbb sar popf push jno cmp cmp or insb dec addb xchg mov int3 add or sbb mov and or cmp or or shll ds out xchg test and cwtl add (bad) ss and inc ss mov jo or mov outsb cmp add mov clc fstl xchg add xor push scas loop movb inc (bad) sbb cmp mov mov outsb and aas (bad) jnp fnstsw adc (bad) gs orl (bad) dec retw push pop movsb ret test mov inc sbb inc das jp sbb dec push sub notb popa push icebp xor fnsave rolb in mov xor mov or mov sbb (bad) cmp orb add push push add aam add fistp push jne loope imul out rorb xor sub or sbb cmp mov les jl adc pop test inc jmp mov (bad) mov inc stos clc into call inc insb jnp mov xchg mov inc add mov mov push jnp and add out add addr16 xchg or push (bad) mov lea add (bad) lea dec adc (bad) and sub jecxz leave inc cmp add sbb je and adc push and sbb mov cmp add or adc cmp dec mov (bad) jns cmc ror out xor pop out into lret inc outsb adc push movsb sub sub jne xchg jne adcl idivb inc and fs xchg adc adc cmpl jae std popl ret cmp cli push and or jnp or test in adc loopne xor sbb in and imulb movzbl sub ss and adc xor sbb fldl mov jbe mov sbb adc lret leave push loope sarb mov rol (bad) int mov cmp inc insb sbb add cmp fiaddl push je cmp sub adc add mov push and mov pushf mov mov jbe aaa and mov (bad) aad mov clc push (bad) fs out xchg sbb movl iret push pop add mov or pushl add (bad) dec out xchg add jnp mov ret pop outsb enter nop add imul sub jl adc add add jge hlt lock dec push mov clc push lock push sub iret adc sub outsb jnp add push and (bad) mov jmp pop inc loop add mov mov sbb cmp sarl jo je (bad) or jb push push outsl xor pop xor ret mov pop and mov nop fwait je (bad) not mov sub jnp xor pop iret ret xchg push push push or push xchg mov insl scas test loop fisubl push ja adc adcb or mov jo add fisttpll jmp lea fldt (bad) xor pop inc add push dec loopne and sbb add push xor and mov notl mov add xlat add pop jb sbb xorl adc adc smsw jae sbb das mov pop mov gs mov add pushf ds cmp push xchg push and mov xchg cli rorl pusha or push jmp ret cmp add leave popa mov sub pop add notl push lds inc popf jmp inc or test dec cwtl push movsl cmp inc fcompl ljmp add pop test and mov orl inc sarl pop js jo lods mov sub push cmpsl push mov and cmovno push xchg dec js or cmp add xlat and imul jg cmp mov and sub jno dec stc xor and arpl cmp xor test pop dec inc pushf and cmp cmp inc adc inc test movsb push add icebp loopne or mov adc sub mov call inc shl push jg dec or dec and es sbb pop push xor js movsb xchg sbb push popf (bad) sub insb inc add cmp dec movsl cmp cmp sbb xor jbe push pop and test cwtl mov cmp sub mov mov movsl mov lods add inc bound lock and add or sti pop mov jb add xorb insb ret push and cmp sbb and push xchg sub or push in pop xor push push or divb adc xor xchg sbb adc sub adc xchg xor pusha adc cmp pop (bad) arpl rorb add loop popa jl (bad) sbb inc add (bad) in adc mov sbb movnti out sbbl in pop mov adc pop outsl mov push mov add add mov and adc call mov adc in mov pop out imul int decl (bad) pop cmp add mov sbb movsb or push pmulhuw cmp cmpxchg roll xor loope xchg sbb sbb or (bad) xor push inc push mov (bad) into push jmp fbstp push setl mov cwtl pop push in jae imul inc mov test imull pop jecxz mov fld into or (bad) pop push mov pusha cmc xor pop or stc repnz add or add negl aad int push (bad) je loop fdivs sti adc fs xchg and dec mov adc sub and xor inc pop sbb jae and inc sarl adc jp lea dec mov les or or mov aas pop add mov sbb inc jno pushf shrb mov cwtl test lock mov bound mov cmp push shrl je jbe and test (bad) orb inc jbe cmp adc (bad) dec pop sub xchg popf cmp les ret push xor and add xchg mov cmp xchg std dec sbb (bad) adc adc or lods sbb push add mov sub jmp (bad) jo push jbe pop mov rclb adc dec add inc stos loop popa inc pop mov add and add sub jb arpl cwtl xor popf call lods ret fadds and test push mov push shr ret xor add adc add pop xchg dec dec inc sub mov inc push mov xchg (bad) cld aas push sbb jb imul aam hlt push add push cmc push or inc mov dec sarl pop push in adc and sub (bad) mov dec pusha ja cwtl aam xlat inc je mov ret push pop inc and fmul (bad) js add das es fcoml (bad) dec rolb push mov lock add hlt push jg adcb pop call sub jle inc mov fistl dec jg pop jmp cmp movsbl (bad) fisttpll loope mov and jl lea mov mov sub data16 inc sub call hlt push jbe aam in jbe jle jge in xor add (bad) (bad) mov hlt inc pop cmp loopne mov mov lock (bad) mov add mov push cmp pushf (bad) xor dec add fnop in hlt jo inc fmuls mov rorl inc xor aaa mov mul xor data16 in or sti decl cmpw je inc inc sbb stos push test sbb cmpsl mov iret jle adc in pushl add out sbb in push cs aam sub je inc cmp ja push jl ja push add push inc enter push inc cmp sbb xor fs mov push arpl sbb add mov ss in cmp jb lods or aas nop scas cmp dec xchg push mov sub les add test fstpt jb int push jns push scas dec fcoms in insl adc xor insb jge jl es jb push les sub js mov fnsave push jno cmp and fistpll nop and insb negl xor sbb and push shrl xchg test and out idivb jo adc outsb lret nop movsl add sahf aam gs mov mov div and pop movsb and aaa bound or add xchg pushf mov movsb cs (bad) push mov jo iret stos out pusha push cmp xchg inc mov xchg into sbb pusha lods add fdivs xchg stos test lods movl or popf push add ret ds sub (bad) je xchg mov gs movsl mov lods mov add or xchg mov mov mov pop ss ret cmpsb mov mov jns (bad) add inc js lea push mov int lea and and lret push mov jecxz xor mov (bad) cs xor adc loopne or mov pop loopne in shrl inc fmul cmp mov add pusha cmp inc scas sbb pop ret inc xchg push pop and stos mov fs or imul mov aam ja adc cmp sar add mov je mov imul shr cmp fdivrp xchg out (bad) jbe pop sbb inc inc jbe mov xchg rcl cmp jb jmp add xor add call push pop inc ficompl aad call jo push or in fmul fnsave (bad) fwait adc clc dec cmp sub je sbb jmp gs and gs inc sbb gs xchg jl jp test lock arpl loopne loope sub in sbb dec sbb mov pusha or into repz int push add dec cmp inc and adc pop push jae sarb inc push push sbb mov ss bound push inc cs inc inc iret fdivrs in in jle or xchg pushl mov xor in outsb dec out xor or ret adc jl mov push incl dec bound inc in adc fldcw (bad) daa jo jo jne gs xchg add inc lds or cmp les dec xor enter adc popf jmp pop mov mov test adc sub jle jo imul jne inc in jbe inc sbb dec loopne add add (bad) add pop lret push sbb arpl sarl cwtl dec call enter inc push pop adc stos and xchg and aaa enter cs adc xchg add push (bad) xchg mov sti dec ret xor adc shr cmp fdivrs mov (bad) (bad) cwtl cmp je push loop push inc shrl sbb pop or mov sbb fdivrs es mov or mov imul insb add fsubrs ljmp ret in mov mov (bad) xor mov ret stos mov std cltd or add aaa idiv push je xor clc jl lsl aam ret push stc push adc xor or or movb jne or push jne mov jnp add cmp insb sbb cltd xchg lahf add je xor adcb lahf sub push adc lret adc and lret jns mov js ljmp jne mov pop inc push pusha je psubd mov inc into sub jne mov push fistl inc pop sbb dec mov out dec xor xor jne inc ljmp loopne ds mov push testb mov add les adc or insl push sub or and popf call dec pusha (bad) movsl cmpsb pop jle fcoms or inc cmp mov test pop mov sub pusha dec fs sub leave xchg adc add pusha jl jno dec mov inc inc inc add mov scas daa ret (bad) jne pop dec sbb inc adc or orl add clc xchg push sbb sti lods mov pop jmp sbb lds into insl and nop cmp sbb aad pushf sbb xchg mov jbe jbe adc cwtl pop jl (bad) pop div sub shr adc or sbb xor adc ds inc pushl movsl jp test (bad) negl jbe mov call inc ja cld shlb jne jno dec push add sub cmp sub (bad) daa ds mov nop sub cmp enter push jg cld push test mov dec mov je xchg cmp xor and and add lock fsubrs adc pop lea idivl scas or lea or outsb adc pop in stos cli adc adc lock push lret faddl divl movsl mov mov addr16 inc inc cwtl xchg jbe call (bad) mov mov inc stos add or cmp add cmpb cld loope jl lret xchg add lds les enter sbb cmp ficom ror je jl xor lea xor push cmp mov mov push xchg cli mov iret jp push inc aam xor loope sbb xchg imul stos pop or mov inc sub hlt dec pusha or jge mov mov sbb push add fsubrl or adc push xor sub xor sub cmp dec add testb or stos dec pop in cmp hlt inc std test dec add push loop clc and cmp aam lods and add sbb add and jg (bad) or inc dec je jno add (bad) cmp jl jmp inc push mov xlat add add cmp push add dec lock fdiv pop adc jo jbe push cmp mov fildl push or lret push add inc adcb xchg (bad) adc in xchg jb test cmp dec lock decl jg bound or jmp xor dec adcb inc sub dec inc mov mov aam pop cli and pushf adc inc jge adc jbe add sarb insl imul and arpl imul mov movsl mov stos cmp push mov push push push add push or push push insl and das sbb mov mov push add (bad) or shrl jecxz sbb insb push cmp mov repz aaa mov aaa adc pop add sub fsubrl (bad) mov add std sarl push mov gs (bad) stos pop popa lods and and fsubrl push lcall adc hlt push fcomps fldl stc fs push loopne nop and inc inc cmp loopne cmp aam mov stos mov popf sub out jne pop pop and ret mov fcomps rorl sbb es js inc pop adc mov pushf jb idivb dec or pop adc push loopne fidivr js jmp adc pop arpl jae loopne pop cmp arpl pop mov or mov inc popa and jne adcb popf (bad) push cmp mov sub mov and push or lods ljmp bound mov sbb ss push push pop aam inc jb les les out sub jae fcoml and pop add pop inc lea call dec push stos cmp dec push adc adc add mov stos fidiv test pushf push int fwait cmp (bad) negl inc add lahf mov add dec add mov inc mov faddl fs sub mov lods (bad) push mov shll push out adc cmp jno jb mov or cmp adc lods add stos xchg sbb dec add js ret stos push scas dec sub (bad) sub aad push or addb push out xlat inc mov cs add stos dec xlat dec inc bound sahf and push and jge inc push aad shrb and mov jbe aad shll cmp shrb mov out sub cmp lidtl or in sub pcmpeqw jge adc xor inc cli jg lea and test adc xchg stos popa pmaddwd xlat ret mov inc jl,pt mov daa sbb add inc jne ret por and add mov xor daa imul mov and test andb xchg lcall mov outsl dec adc movsl loop les lea adc mov mov jne xor daa pop je ret dec mov or inc lret lock adc sub push fdivs adc lods adc sbb jg ret ss sbb add and nop sbb or mov push js lahf inc mov ss pop cmp mov mov inc adc ds pop cmp test or push or inc cwtl xchg or dec sbb adc sbb into mov and inc int3 into sbb cmp push call inc lret lods push adc test jno push neg sbb push popa clc insl incl mov and mov aam pushf mov or or add stos inc xor and leave je fsubrl push mov jmp sub call or mov push pop push mov cmpsb and lcall mov (bad) mov add cmp fstpt cltd jo pop inc push outsl mov rorl pop and xchg mov sub dec or mov add sbb leave xlat sbb and xchg xorb and out dec mov jge mov fld inc or hlt scas sti ret inc stc movq mov dec mov pushl or ficompl rclb rolb push mov movsb ljmp sti xchg icebp jp jne pop outsb pop outsl subps xor push sbb fistl aas cs aas push mov push mov adc xor adcl push das rorb mov mov mov inc lods adc or add sub setne dec mov dec (bad) adc stc or lea mov sub cmp inc sub or in inc mov add add lock jge push fs inc sbbb push je (bad) xor jo add icebp outsl sbb outsb das in mov adc jmp jb aaa outsb jbe and (bad) test movl mov aaa pop xor mov or mov or mov mov jg add add loopne add div test je (bad) mov push xchg rcr pop xor jns,pt test xor pop lret imulb es roll movsb mov inc je std jne mov xor sub insl jbe fiaddl xchg and dec inc add sub call adc dec or or into (bad) jecxz (bad) fmull out in loope fdivl loope pop or jp or cmp sub mov fsts lods dec aaa addl or xchg dec fwait or xchg xor int3 cmp xor popa xor imul sbb add mov jbe pop ret mov ret inc cmp adc push inc js ja movl inc push or pop xor adc jb inc into cmp add das adc sub pop pusha lods sbb jbe or insl dec xor push js mov repz ret pop and mov pop add pop insb mov in ljmp xchg fst arpl xchg sub gs out popf loop fwait scas imul push add push pushf cmp loopne rolb xor jge (bad) push stos nop mov rclb push (bad) jb arpl xor push xor sar arpl repnz js or add lods shlb inc cmp add push stos adc addr16 inc cmc jge and jb and aaa hlt mov insb cmp jge mov pusha mov fcomip jl add lods and jg dec or cmp jl add mov jne popl mov ret loope (bad) jns mov push dec daa outsb xchg push and negb and mov shl mov dec insb push ja and ds add mov add sbb inc call sub add or test mov xor stos add loope ljmp dec sub push cmp icebp sub push push pand fdiv dec inc cmp jbe mov push dec adc xchg add cwtl jmp push das sub or sbb lea int jne pop cmpsl push xor dec push cmp (bad) sub aas xchg cmp inc sbb sub mov fwait mov sub mov inc dec jl (bad) push mov or sbb mov mov inc xchg shlb pop popa cli das in mov rcll mov icebp je cmp je add inc mov bound call add inc sub pop in test pusha push lock or std daa mov and add sbb ds push in xor xchg daa mov stc xchg inc add sbb vpmacssww or test jnp sbb add fbstp jl insb cmp add jnp add fwait stc in jl pop mov cmp es dec sbb std jbe jne xor cmp jne (bad) hlt aaa ret mov inc sbb sti jl mov scas push data16 add pop dec cld jl sbb dec or enter dec shll clc add mov mov fs add rcl or shrl cmpsl fnstenv pushl jno imull lret push ljmp adc xor pusha sbb push push inc xor cmp ffreep inc sub inc mov in inc xchg mov xor pushl xchg pop xchg cmp adc adc pusha dec (bad) or push push mov pop mov sbb sbb insb push xor inc inc adc mov insl or inc call (bad) mov lock add or sub inc cmp out negl addr16 jne fdivs shr cmp mov mov es (bad) (bad) imulb adc (bad) push loope test ss mov and outsl and rep push push stc cmp xor mov shr pop push test or xor mov aam ret (bad) push cwtl pop adc xchg imul pop sub loope je add cmp push xchg (bad) out inc jo push mov mov sub sub pop mov adc ja (bad) mov insb ret das push pop mov adc fisttpl jbe xor pop mov lret or or movsl sahf push sub fdiv movsb push mov jno mov in jbe mov pop pop js adc fistpl or jno sub pop sbb (bad) aam mov fs es jo mov out mov ljmp je (bad) jo mov jno ss xor mov push leave fistpl sub add aaa push adc xchg mov inc cmp sub mov ds add ja push xor insl sbb pop and pop ret pop push int shrl pop clc and dec inc roll xor cmp mov adc adc mov add fnstenv mov lea xor pop adc mov ljmp js or mov lahf inc inc (bad) push in mov jb (bad) mov add pop pusha add dec je jo pop pop scas mov dec test inc jmp dec sar ret xchg push dec fwait test push ja xor sti std cltd sbb lds push add cmp jb fs sub or push and add jb sub mov cmp push out insb jl sbb sub sub push (bad) aad pop dec mov xchg fs and int (bad) push aam sar adc cli in inc dec and shrl pop mov inc leave dec inc rorl push push push sbb (bad) lea dec push inc ret mov fmuls jbe aas jo rcrb ret pusha push push xchg xorl inc cli icebp das ljmp lcall pop dec pop outsb and and cmp jmp imul (bad) jne ret std dec insb adc cmovle sub mov cltd cltd shr push notl in movl and mov cli or dec jl enter jnp int (bad) sahf pushf hlt lea pop enter push out dec je inc push sub sub mov mov (bad) out mov adc or sub adc cmp jb adc dec jne call pop loope pop push mov xor push push mov add and ja dec adc jmp lea jb push xchg sub pop jg sub jbe mov xor adc cmp jno mov out inc loope inc mov sub push jge mov inc test fdivrs fldenv test inc sub push sub mov inc and cmp jp (bad) ja push push (bad) mov fcomps lret xchg test adc sarl inc test lret mov mov mov ret jle push arpl out cmp sbb call loop mov inc arpl push jb and lock jle add pop sarb mov aaa or and ds jae test adc and jno push outsb lea xor mov or xor xlat sbb sbb mov add mov adc std push (bad) dec enter in inc cmovae inc sub add add cmpsl das shlb nop daa add fsubrs xor push das pop gs sbb in push sbb cmp mov in or neg sbb ss addr16 adc ja nop lock adc aaa xchg mov outsb add scas leave mov js mov je shll mov enter ja fidivr pop dec sar ret xchg test inc pop or or or cmp out inc dec cwtl cmp inc dec inc (bad) jae daa jo,pn inc mov mov dec icebp gs jne pop popf cmp enter mov push (bad) sbb jbe iret sbb outsb test mov add test push bound sti or pop lock mov adc mov xchg push and std movsb lret mov sub pop out fldenv dec cmp jno mov sti ljmp mov nop jae aaa aaa xchg lcall stos aad std xchg xchg inc and je out (bad) fisubrl push sub adc loope pop dec push mov pop pop inc mov push cmp dec adc insb sub mov outsl ja inc jb loopne mov outsl jo xchg sarl cltd lea loop mov (bad) add jg sbb pushf inc mov lea add mov adc push nop xchg jecxz cmp cmp jb rcll ljmp sbb add or add cmp adc sub inc sub or xlat add lea inc (bad) cmp mov jo mov adc jne cmp mov or xor cmp nop inc pop push or in jb add loope frstpm(287 sub fcmovnb cmp jle cmp fucomp imul jge xchg or aam inc sub outsb aad ss mov mov cmp jbe sub push clc inc movsb test or mov js ja lds cmpsb mov push mov mov mov movsl mov push test movsl sbb dec add xor fisttpl ret movsl or gs or push out inc sub pop jno je je jmp xchg cmc enter cmp cli add je xchg add sbb adc mov add jo test jmp add xchg insb insl imul dec jo sahf pushf lea lcall dec xchg clc dec stc sbb push clc sahf sbb cmp sbb push sti fistpl (bad) mov fimull xchg ds or test push pop cwtl xor cwtl jmp adc bound imul sbb or lock dec bound imul imul pop push or push inc mov push lds wbinvd cmp lock add sub sub xor adc jb sub test jne adc push inc dec mov push pusha lock orl mov lret mov rcrb fs (bad) gs cltd fdivl shld or sbb add mov or add mov ret jg or jge sahf and push out adc shrb and jg inc mov mov inc inc fwait sub lahf jo xor push scas call inc fildl insl std xchg and mov sub roll and push jle push mov jge sbb fiaddl cs repnz inc and je and rorb ljmp mov xor aam push push aaa push mov adc (bad) pop mov push push sbb (bad) adcl jge push in xor sub inc push push push mov sub fcomps push push les xor and ja push push psubsw lds xor (bad) and and push mov dec cmpsb cmp sub jbe fildl imul dec xor push dec inc xorb mov cs inc jae mov sub sub pop das sub fstl nop roll cmpsb mov popa adc scas cmpl dec mov out dec xchg clc movsl dec repz loop lds out or in mov mov mov jb jmp aaa mov subl fwait out inc sbb sbb xchg arpl fcomi add add inc int pop shr shr sub aas mov ljmp dec push lea sub or sti call pop and sahf xor out cmp mov push or into lock sahf sub pop lods dec sbb outsb push inc pop adc jp push add dec pusha test and mov mov mov cmp mov dec repz aas mov popa jb mov into not jecxz xor push jmp in negl imul int3 dec sub add aam jb mov hlt sub ret cmpsb pop ds test push adc jne cwtl jae xor jo ficompl bound ret push notb xor cmpsl inc loope push pop mov and test orl data16 lret (bad) or cmp movsb jne push loope outsb mov lock (bad) repnz mov xor ficoml dec sbb sub and stos scas aad cmp loope in add push inc aad pop lods mov rclb mov (bad) rorb and outsl sub or sub dec push or sbb xor aad out sbb xor cmp mov ret cltd ds dec pushf xchg sbb lods and shlb mov pop insl mov test jg sar lock mov push cmp imul pop loop cmp add add cmp jns add pop mov hlt push pop out (bad) in push (bad) jge pop rolb add or lcall or or ret jae push cmp mov out loope dec cmpsl push sub dec insb pop jae sahf mov or popa fs sub (bad) or insl loop mov adc pusha xchg scas dec or sbb add addr16 (bad) jo jb xor jnp shll cmp (bad) xor xor fisttp fildl jnp and jo xchg pop cs push movl push adc cwtl pushf dec test std imul call push popa shrb test loop inc enter btc cmp jae divb daa dec out push in or or or ss (bad) ljmp adc mov test rcl push inc stos ljmp mov or sub mov fildll ret mov cmp int cmc js lock into pop mov loopne shlb or rorb jae mov (bad) fcomps jb (bad) lret jnp out pop mov rorl add lods icebp pop jmp loop pop in sbb push ret sub cmp dec sub inc sbb xor jne ret (bad) je mov cmp data16 jmp ja iret xchg sbb lcall push or and add fsubs push push push inc lea or mov andb or add add add fstl inc or repnz cmp sbb jl lock xchg hlt push (bad) dec xchg cmp sub mov add or add loopne rol dec and push pop lret mov xor sub es or push mov inc jno iret mov adc loopne cmp bound and into xchg or pop fisttpll (bad) inc xor jp sbb fnop adc fsubrs push mov xor sbb mov iret mov mov ljmp mov mov mov aaa mov xor mulb or cld push cmp ror inc dec lea pusha std leave outsl sbb repnz dec sbb push xchg in dec inc sub ljmp dec leave xor shrb dec insb das mov push mov enter and inc pop imulb movl add arpl jae or inc inc sbb out adc and cmp shll mov mov fwait rcr enter mov imul inc inc das pushf sti push test dec into fmulp int icebp mov push xor push push push push adc fwait int insl cmpl test subl push lcall dec and dec out mov mov cwtl dec (bad) shll xchg push xchg dec push aam dec scas cmpsb pusha scas std xor inc sbb mov push push pop cmpsl and shlb adc push imul pop sbb stos inc and mov ds movl ds scas flds push sbb (bad) jl das sub insb xchg ljmp xchg sbb dec or and mov in nop cs and enter rcll adc adc pop enter xchg cmp push movsl inc sbb jle int3 pusha dec xor jl push mov (bad) je mov test cli (bad) sub mov inc outsb out push push and push add cs aaa mov sub mov and pop sbb mov mov fs mov adc dec inc lea adc mov or push mov ds rcl lret rolw cmc rolb or call push push fs sbb sub push and add or adc and shr add into in sbb out addr16 lods pop ret imul cmp jb mov or fmuls call mov jg neg shl aam push daa out sbb icebp add repnz enter cmc jb and and and incb fcmove incl dec xchg and inc adc jne dec mov cmp mov div mov xchg or xor pop dec pop or push inc inc and ret fsubrs add jmp xchg add test ljmp roll and mov nop cwtl out sbb or mov ss pop faddp sbbb mov nop sbb jae out (bad) add out sti fstpl push xor lcall outsl pop mov push mov nop cmp imul (bad) push mov adc ds xchg mov movsb jae mov add xor pop pop ret incl sahf bnd inc push mov repnz push push or loop out adc cwtl or js movsl mov fstpt push mov dec adc inc icebp mov inc outsl or adc into pop shr out mov mov pop pop popf nop inc jmp popa or push add sbb inc mov (bad) mov icebp or rclb fmuls cwtl lock mov or or mov add or push shll pop xor inc addr16 mov enter rclb stc (bad) mov xchg mov mov and add lcall popa sub enter frstor test clc shl xchg mov xor cmp mov lock in popa mov push xchg cmp pushf xor jmp mov adc cmp adc dec xchg mov push dec nop add cmp cmovo add sub nop add movl xchg insl adcl push push int (bad) jl leave jle cmpb jne cmp lods lea mov lea mov dec xchg mov mov push or or add ja cmp ja jmp lea rorl ja add loopne sahf je ret push push dec push dec das cs sbb test enter and jle loope loop xchg push add repz mov mov aas or ret adc xor xchg xor dec je push xchg inc aas mov add enter pop fildl add (bad) shl cmp orb inc sub mov pop cmpsb mov mov sahf lret push ret popl or push loop push push rolb into inc lock pop xchg pop inc push jge jl xchg cmp pop cmp push stos sbb ret rcrb je push add jmp and in mov pop lock or and adc mov sbb leave test mov add mov cmpw xor sbb ds inc mov mov test push and pop fmuls add inc pop cwtl fldl xor add xorb adc adc cs add mov popf push dec pop or mov int3 add push add pop jl mov xor mov fldt mov cltd jns fcom sti cmp jl push sbb in sbb dec adc (bad) bound push xor push in mov mov mov inc out fiadd scas push dec dec mov mov imul (bad) or mov or scas add (bad) pop pop sbb adc mov push cmp jb mov or mov mov inc xchg xorl add add or or in mov pop sub fmul push loope das dec cmpsl in in loope ret cmp cmp cwtl add push push dec ljmp ret cmp nop insl sub jmp adcl jge insb out push inc mov jns mov decb (bad) (bad) jb jne mov mov inc adc xchg mov jne sub jbe mov mov pop cmpsb shl mov adc ljmp pushf jne cwtl push seto mov pop xor loop add arpl push mov push mov (bad) out pop xor add inc loop aam sub (bad) cld into fimull into pop mov (bad) out and push mov loop adc add test lret inc xchg xor mov xchg cmp negl movl lds push jl insl push ret mov pusha xchg and inc (bad) (bad) call sub sub adc mov mov and orl movb mov dec rol pop jp inc enter lea pop add adc daa (bad) (bad) lea or dec add stos lods push sub xchg aam inc lock pop call mov mov jne jmp mov adc adc outsb ss add push out add rcll inc xchg std push cmc cltd sub pop popf fwait inc inc push je sbb sub (bad) xchg dec cld dec or sbb or cmp std xor cmp fsubr sub or iret call mov add fimul scas imul dec pop hlt test jae,pn push nop jge orb scas insl in and and repz sub push mov pop xor fildl clc loopne jbe shr (bad) dec arpl jne test jmp push mov add dec (bad) (bad) mov pop pop push dec or and popa jp imul mov sub (bad) cmp inc sub call xchg js lcall or or cmpsb and imul add sbb and jbe bound mov push pop (bad) xchg nop in mov jbe outsb aam and dec or out dec dec loopne xlat inc adc roll aad push push mov pushw add (bad) push ljmp mov pop mov mov insl adcl adc jl jbe cs lahf pop lea jl ja mov pop (bad) je or (bad) jge add mov mov add adc xorl or pusha rorl mov es jmp cmp clts or in add push insl orb pop faddl push mov shll adc decl push stos xchg adc xchg es in jle lea xchg cmp sbb pop pop mov adc sbb adc pop aam aad xorb mov adc outsl add add and call into scas nop sub add xor sub arpl aaa (bad) or and insb mov mov cmp adc dec sbb and lods test test lds cltd call nop ret adc dec (bad) adc xor sub sbbl fildl xorb arpl leave mov add mov push inc cmp gs push js sbb dec cmpl ja jge cmp pusha (bad) (bad) xchg test test mov mov push jle xchg jp cli mov cmpl js (bad) js insl dec mov pop adc or iret mov add icebp or aaa lock leave lds push xchg mov (bad) and pusha add xchg popa jmp pushf pop add mov fadds add test mov mov ja mov inc sahf sbb push push and popf cli push jle rorw inc add mov mov cmc add add push or sub add add mov es mov adc add or ds neg pop scas pusha add pop jp xor push adc push and sarl pop xor jecxz sub xor out aaa and fadds cmp push cli jmp scas inc push loope addl cwtl outsl push add and sbb xor adc mov add sbb dec or cs inc orb push (bad) mov xchg add inc mov xchg mov xor ret xchg inc (bad) shl das nop push adc ss mov mov mov (bad) jb lret cmp (bad) rcrl inc lret jecxz xchg add jbe and add adc lcall testb popf push clc push arpl mov int jno (bad) or cwtl mov pop gs popf popa or pop push mov xlat mov mov pop sarb (bad) sbb or mov adc jmp jo lods sub test test xor lods inc inc push or push stos cli or lock mov aaa mov fiadd pop mov mov dec pop xchg scas or loopne xchg jo adc dec cmp sahf jae fistp lods jmp mov shr push cltd test fisub cmp clc popf add lahf push lret mov mov inc ret mov mov sbb les or test lahf inc fnsave or mov mov enter loopne push insl mov push xchg push lock int mov pusha shlb add rolb (bad) nop sub adc mov inc inc or out add push add jmp pop cmp insl add mov int3 lods inc (bad) mov sbb mov cmpl rcrb (bad) dec jne push sbb in hlt (bad) int sub cmp mov rorb add xchg and and xchg rorb or fwait movb icebp and or shr shl dec xor cmc or jg shr pop pop push xchg popa andl (bad) dec leave pusha dec push xorl test inc mov add fisttp xor mov rolb mov or je clc cmp push fist mov mov or dec (bad) stos loopne sub mov pop xchg sub sbb adc stos mov adc je jne jne sub loopne pusha rcll mov inc not gs mov jle enter inc mov mov jb dec ret push and aam dec int3 pop lea in or sbb dec mov jne pop pop pop ret (bad) adc sbb das dec add or push push and adc mov push push mov dec cltd data16 adc inc or or sub and mov ljmp push dec adc mov ret cmp add gs rorl add jle pop int test or out arpl (bad) (bad) jbe sbbb mov and sub jo and push add cmp in add sbb add xchg popa push xor inc mov mov test jl push and int3 leave popa pushf inc cmp pop mov push mov std push test mov mov inc sub jbe iret jge decb js movl mov or fcoms in sub loopne aam jl dec mov mov out bound loopne adc ljmp inc aaa adc or out mov repnz fmuls xor xor push mov and js cmp jae shrl ds insb orl push mov mov test je fucom shld fadds dec add mov addr16 xor inc jne cmp add lea dec repz test fdivl mov fcoms xor sbb mov mov out adc pop and adc fsubs sub adc jb,pt cwtl sbb pop sbbb mov adc cltd sub pop add mov cmp sub scas jg jae loope iret jmp mov cmp sbb dec pop (bad) jb mov push mov adc add pop lds lahf rcrl cmpsl fadds aaa sbb and ss or xor adc ret or outsl arpl addb push int add and lcall pop sbb pop inc sub adc and cmpsb add sbb sti (bad) adc mov mov adc mov bound cmp pop pop sbb ficompl fist add push and add in ljmp dec or mov inc shlb ffreep pop or push mov jmp pusha and mov mov int sbb sbb xchg in mov mov fmuls or dec xchg mov int add push push dec push adc pusha decl mov dec mov mov cmp pop jbe cmp mov (bad) or je mov scas lahf xor int lret pop or jbe inc mov lahf pop call xchg adc aaa dec outsl or adc (bad) call mov outsb add lret ljmp cmpsl in push dec out add push mov adc push push (bad) nop loope aam loopne (bad) push (bad) into mov daa neg sub cmpsl push jne ret inc cmpsb mov mov notb push push dec adc xor mov mov pop mov sub inc mov inc scas sub push mov lret pop jno (bad) out push fwait cmpl je jnp pop or (bad) push push push sub (bad) mov jp mov add mov sahf (bad) je sar (bad) mov pop dec (bad) xor pusha fs inc fdivl jl mov in test shll pop ljmp add mov jne cmp pop jge test add push mov ja les in cmpb mov pop or popa cmp dec popa ds inc mov jbe and insb fcomi adcb push sub cmp jne dec sub xchg jne cmp scas sbb out sub push add pushf sub out jae mov pop mov js push ret add adc mov mov test add fldenv sbb sarl mov hlt jne cwtl sub divb fildl dec sbb idivl mov jne fstpl das test out pop iret mov lods mov insl je adc cmp xchg sti pop or data16 adc pop mov sbb fnstenv mov mov inc xchg or mov xchg sub xchg sub cmp stos out mov push aam sbb cmp (bad) cltd add inc sahf lea cmpsl pop mov push add jmp lcall push mov add and sub pop (bad) pop mov pusha inc sbb pusha add outsl rcrb pusha js mov add push popa cmpsb (bad) call cmp aam push sub add nop enter out sub push frstor shrl loop (bad) jle loope andl lds in fstpl pop sub adc mov push lea popa outsl add int int imul js xor push add das in (bad) lea xor (bad) mov je sbb je mov push xchg dec push xchg push sbb rol sti mov lods ja adc sub sarl mov ret mov jmp cmpsb pop add or in adc stos or rorl ret mov xchg fucomp mov in pop movb stos jne aas push mov jae dec sbb and fidiv out add xor jmp jbe and shl mov or xchg pop push and dec inc test mov movsl push pop lret mov cmp and inc jno test mov lea ret jno pushf and inc push mov and xor shr pop jne cmp adc sti and mov lea (bad) mov and dec sub sub loope xlat jl or jne std and std cmp push rorb xor pop ja or mov mov mov pop sbb out mov sbb sbb stos inc mov clc loop cmpb cli or jb xlat adc outsl shrb xor push jle sub add sub adc mov push scas push pusha dec add out roll cmpsb sbb adc mov push push add sub fldl dec push push adcb or cmp sbb mov int inc mov push aam mov sub in test push dec jne daa mov fsubrp push popf cmp lea add mov fistpll hlt dec sub inc sbb hlt push add sti jne mov sbb cmp cwtl adc and push pop push sub xchg in inc push sub loope inc mov or sub mov add (bad) fstpl xlat movl shll add adc ret mov push loop xor in inc in push pop insb test in jbe jbe adc out sub dec xchg sbb and sar js jge sub add mov xorb testl push sbb popl cmp mov xchg pop mov lret lds into icebp scas pop dec sub std mov in jb cmovno xor (bad) notb pusha sti pop add ret aaa mov push cmp in sub (bad) (bad) rorl pop inc jmp and int3 mov mov xor insl xchg (bad) sbb cmp push pop test pusha and jg inc cmpsb adc mov push and xor xor sbb cmp and sub dec dec sub or ret pusha add lods (bad) gs push push pop pushf xor and mov dec fistp push xchg or inc push jb mov add lret into lea hlt mov pop je in xor shr sub addl adc add dec jnp mov lock jle add add cmp std add je and add xor dec add lods imul xchg mov mov sub lock popf xor inc enter iret xor das es in fistp in arpl ret jg fimull inc loope mov jmp or cmc loopne insb loopne movsb pop jns jae mov push mulb cmc push jb mov out cmp jbe sub into jbe decl inc dec jne je jbe cmovns outsl addr16 push push mov adc fstps aaa push js jbe out add nopl inc pushf inc pop jb andl fs (bad) jb push pop mov jp loopne push cmp sub jmp adc push inc fwait mov pop lods mov fstpt jae or push mov mov sbb add push mov inc or add ficompl rorl mov dec adc and popa das add (bad) pop fcmovnu ret add jb sub pop mov enter push add inc pop inc mov pop adc sub add dec inc insb add push mov dec jae enter movsl mov movb mov stc std jb cmpl jmp push sub xchg pop pop jp bound add or mov jne pusha cli lods sbb jb push hlt pop js mov testl subb repz jne idivl pop call jl or add rorl xchg lods mov add mov (bad) pop int3 lea and add add fwait and and cmpsb jmp mov cwtl xor dec roll mov imul in lcall hlt hlt clc pusha mov cld push (bad) fnsave lahf mov add insb mov hlt faddl call cld adc leave xchg mov or adc adc sub or jl cld test fninit cld ja div fldcw imul jl push and xor mov je cwtl add insl inc fcomps add outsl push out cmp inc mov lea pusha and test ss daa and sbb scas xor push movsb imul sub imul fldcw je int3 sbb mov pop sbb adc or or inc (bad) xor add fwait mov mov js mov fwait mov mov add and dec mov adc sub mov insl adc loop xchg pop pop gs add inc mov push xchg jb mov aad push push adc aaa pop mov repz dec neg push adc push inc lret je rep pop or shrl into ljmp lods jnp leave push pushl or jnp xor adc (bad) pop pop cmp mov fimul jle push sbb icebp or cmc pop jae mov adc mov mov (bad) jb push add push mov scas add inc mov xor sti sub cwtl adc mov data16 test ja mov aaa adc jmp xchg imul sbb fsubl dec inc orl rolb orl cli jge add push push push outsb adc mov and add insl push inc mov arpl mov pop push cld jle ffree sub ret loopne outsl cs pop push cmp pop dec ret jo inc mov push (bad) mov or mov and jp pusha add sbb add pop es push ja out mov (bad) jp adc cmp lods sbb insl mov adc je add notl pushl push sbb es mov movsl mov or pop xor inc scas xchg in jb in push pop movl jmp inc cs daa in in pop clc inc push inc sbb jae rolb pop or andl lahf sbb cmc mov pop jno mov sub push enter mov inc jmp test (bad) aas (bad) arpl mov insb mov add aad in jg push cmp add movsb sbb sti inc jae jo pop daa and out ja stc add add mov pop or inc lds add subl fistl or sbb mov cwtl and xchg dec pusha ret adc pop or fistl adc add sbb out push jbe push pop sub adc andl add dec movups sarb push cmpb outsb mov fidiv mov adc mov mov push xor xchg xor xchg or (bad) sub adc lea movb rclb and daa sub nop jnp xchg std add mov pop push clc push aam mov fmull push (bad) jo das sub out dec mov push or jmp in pop mov add clc or cmpsb dec (bad) add call pop adc fucomp add sbb jg lods pop ljmp mov imul or fs cld cld cld cmpsb jmp xor mov js cld nop xor xor cld cld cld push enter (bad) std cwtl scas cmp decb cwtl add push and dec (bad) (bad) (bad) xor push and (bad) (bad) (bad) xor sar (bad) (bad) (bad) (bad) xor add insb mov (bad) jmp xor mov and enter mov lahf xchg (bad) outsb rorl scas or sub mov sbb test leave push scas sub fwait mov imul inc rolb je add cld js lea sub fnstenv icebp dec push int cmp cmp mov mov or push insb pop jmp (bad) insl jmp je imul mov or xchg lahf cld pop sbb rorb add jo add leave add pop add dec add rcrl lock mulb mov push pop mov cmp lods jmp flds pushf dec and add int add push xchg pop pop fs popa (bad) jb or dec es or dec dec or fs and sub imul or or (bad) and jae loop or or cmp mov xchg or cmp (bad) jge xchg sub adc (bad) add xor dec sub and rcrb adc add adc ret (bad) es test adc adc cltd fs dec adc es out push push pop gs (bad) xor cltd sarb dec or or add (bad) sbb (bad) mov inc sub jb sbb sbb dec mov jge sbb dec rcrl push inc pop mov adc pop xorl ret sub subb add aas adc pop out cmp xchg jno sub inc sahf xchg (bad) lret in push in ja (bad) repnz sub push rol movsb jmp in push adc dec aad in in imul fwait out sub pop sbb call je call pop push mov dec dec jmp and sub nop ljmp jae out in in mov dec mov movsb cmp ret or out mov sbb dec nop out add icebp and add dec es and std repz std jne mov hlt hlt push ja orl xorl push pop jae pop div (bad) cmp and clc clc push clc dec xorl or cli pushf ret iret sti sti mov repnz cld je cld sub jmp (bad) or ss std sbb sbb (bad) pop outsl xchg nop adc inc shrb ljmp roll inc mov jns mov add test daa mov pop jecxz jecxz std sti scas sub and hlt and mov and cld adc cmp dec cmp add rclb sub mov sbb dec test in add jb cmp repnz out out (bad) leave add out dec push lock mov push cli lret repz jmp adc and dec sar or dec call mov mov sbb div outsb (bad) cmovge leave add clc add mov clc (bad) add clc sti sti push (bad) leave add sti dec mov sub and insb and ljmp dec add push in sub push mov lea mul sbb dec popa sub imull test fsubs lret out out bound sub (bad) or xchg (bad) mov sub sti imul ljmp mulb nop push pop xchg mov xchg (bad) lret enter insb out out repnz (bad) in adc and and mov nop in (bad) repnz cmp imul jae sbb testb imul idivb and dec pusha scas clc xor jecxz stc in test cli pop pusha xor lcall test lods jbe cs and (bad) (bad) xchg xor pop movb inc ret (bad) cmc dec in add sti mov mov xor push loope loope cmpsl mov cs scas repz inc push and gs imul pop pusha xor repz (bad) add repz jns and (bad) add jns xchg xchg repnz add repnz in in jns gs add bnd repnz xchg arpl or xor dec xchg jb jns inc jb push icebp sbb cmc pop pop or cmc push jp adc stos icebp jp lock in and outsb enter mov mov lock mov inc xor xor lock dec popf xchg lods adc test sbb fldl push xor jne sbb divb sub jae push notl pop or dec in pop inc pop lcall int3 add jno cltd inc stos add dec add fwait mov mov mov inc sub fsubs jne test push divb jmp inc and adc out dec add sbbb cmp or or or lret insl push add dec comiss pop rolb lahf or jb adc movups mov mov ss or pslld add or jae outsl xlat je loope adc paddq add outsb mov mov sub add push mov xchg cmp push dec pop jne mov push push inc jge outsb pop enter sbb inc pop cmpl or jbe arpl push loope xchg (bad) je ret push push adc ljmp adc cli sbb or mov sub add xchg xchg js fisttpll icebp or test mov push jmp add jl push sub sub mov mov dec sti outsl inc push mov out jg add das add and loopne incb shlb push sub test fldl xchg add call mov adc int out outsb (bad) scas fildl or insb pop arpl sbb add into inc aam xor sub xor jge dec jns sub cmpb mov addr16 xor adc stc dec (bad) adc jae xchg je push and in daa cs pop mov inc inc jmp push pop push and sbb and mov out push inc push jne xor inc mov adc jmp in mov or test dec pusha sub pop loope gs add roll loope mov mov sub sub mov add movb add inc jmp adc push pop out add or inc jne arpl repnz inc xor mov add adc scas add icebp mov inc inc and icebp int xchg (bad) loopne imul add lock fstl cmp push cmp pop aas add insl mov pusha add or mov add inc add notb or adc adc fldl push (bad) fs mov adc ret out push lock push cmp or xor test push fcoml (bad) or push pop xor mov aaa clc dec ds test mov daa inc sub or pop clc xchg sbb adc cmp adc jo js ljmp ret or rcrb sub (bad) sbb (bad) pop mov std lock int mov in or add jg or add daa int3 push jle andl sti pop in cli mov pop int3 andb jne mov add sbb push lea add outsl push add add and data16 jg,pn add jg jg jne int outsl inc add push jbe jle sbb jl fsts jg jg jg jo mov mov add jae orl xchg cli pop adc ret outsl test enter sub clts xchg andb cli push lods andl push into pop cld sub call push push push sub aas sbb add mov fiadd pop in dec xchg add sub push lock mov in sahf mov and movsb test jmp (bad) xor imul dec in in fdivrs adc sub jno movsb mov fistpl leave out xchg (bad) stc loop andl cmpsb mov fnstenv (bad) testb pop or out add lea loope push inc inc inc jge push adcl inc inc inc push rorb in sbb xorl jmp sahf cmp and push hlt jge fsubs xor popa lods push adc faddl ljmp fucomp (bad) sti dec hlt rep jmp neg add lock mov xchg js inc xor rclb add add mov (bad) pop repz orl add inc rol inc sbb fwait pushl mov cmp inc adc adc sbb push push mov sbb inc mov cmp jb aad and iret dec mov sbb js jmp insb insb cmp inc xchg mov sti pop push sbb insb add or push jmp push int3 pop jl (bad) and lret test mov push dec mov stos and push or and xchg dec jb or jbe inc pop or (bad) les fadds jbe adc addr16 xchg mov and push add xchg push in out xchg lods pushf sub or pop or jecxz imul or mov ss inc sub enter cmp test fidiv es pushl sbb mov mov adc mov movb and js inc push adc or std inc test mov in (bad) and pushl push and push (bad) pusha add mov cmp push jg xchg add xor mov loopne aaa dec push cmp data16 sbbl rcrl push aam lods sbb pop and add les adc xor xchg xor gs xor scas push inc xchg js and adc fmull or and xchg xor cmp add push dec jle andl sbb xor sbb jp push push mov push icebp pop mov aad insb and and mov aas mov pop or mov and jbe (bad) or sahf mov or mov inc je and imulb cmpsb push adc fidivl dec push push cmpsb and and cwtl fs and movsl ds jmp push adc (bad) cwtl add and push inc loope jge mov pushf sbb mov cmp push jno sbb je adc mov fimull sub mov add imul fnstenv add push push (bad) getsec sub les inc enter xor cmp jmp addr16 or mov pushl sbb add daa cmp push lods test in adc push test add mov mov inc adc (bad) mov push sub std inc jns inc adc imul insl push adc add (bad) sbb sbb xor sub mov mov push stos push xor sub lods gs sub aam pusha aam (bad) enter mov test imul scas mov js xor and adc (bad) xor adc jp jo (bad) icebp inc ret push dec sbb cltd add bound adc pop push test push cmp push mov and sbb sbb push cmp pop movb jb loop aam pop addr16 rclb aam btc dec pop clc and xchg rorl jmp add aaa or push add add pop ret push pop jbe mov fimull fstpt mov cmp inc sbbb je mov jno push push pushf test and pop cs fcoml or popa xlat mov cs xchg jmp pop xor push push mov (bad) ljmp adc in add mov divl test hlt xor push (bad) push inc and mov adc add push pop fildl cmp inc push out pop sarl in push sbb sbb mov jne and push bound lahf mov xor mov mov in fisttp cmp jb mov testl cmp je push int3 jmp push (bad) insb mov pop push test mov test sub and mov push je sbb add or daa jl insb inc inc xchg adc and mulb push add out or push cmp add fcomp inc sub stos add pop adcl push es pop ficom dec (bad) mov push lea or add lea sub inc mov test mov lock push gs mov scas mov lods mov pop rorb push aas lret mov lea push push cmp (bad) out add jge jnp mov add xor test xchg add dec or adc jl adc dec cmpsl test add rolb int3 lret call sub push cld je lea aam mov sbb xchg fcoml xlat inc dec xchg loopne (bad) sbb jl jg lock and jne pop gs out je xchg xchg cli mov imul movb mov arpl pushf sub (bad) roll and in mov mov aad and insl jnp ljmp lahf mov aam push mov adc adc or fwait push cmp dec lock dec or jmp or xchg xlat (bad) jno push lret mov add xor aam or (bad) and das popa rcl pop fdivl es (bad) neg sub loope sbb in dec sbb push pop xchg sbb inc loopne mov xchg pop mov push inc retw or sti ja (bad) push ret jp ret pop mov push add call xor (bad) mov mov jmp mov push stos jp (bad) dec jne aaa adc push and aam mov (bad) repnz inc or jp lods cld push cmp xchg cmp and inc xor roll leave pusha or js add xchg lods xor cmp adcl push sbb push dec mov mov jg test or and push and lock out push outsl mov lahf decl add and push push les push stc roll es mov mov sbb mov loop cmp test sub mov push inc pop ret and or lret jno rcrb add mov jl mov pop mov dec adc add lock mov push mov mov add lock stos mov xchg dec insb ja xorl test inc test add fsubrl lea dec es gs ret or std or ja cld sub insb mov call or sbb cmp mov inc out cmp adc cs mov pop sbb push add xlat aas add inc push push lea stos add sbb adc (bad) mov mov inc aas sbb and mov mov call dec adc push lea xchg mov add test bound cmp adc sbb sarl test jb scas outsl (bad) fild mov sub enter enter fidivl out xchg or and and inc mov inc push jmp (bad) fdiv or push mov sbbb pop cmp adc sub adc cs push xor pusha daa inc mov cmpb or (bad) movzwl ljmp adc mov adc je and mov daa jmp movb shr daa or mov or push mov sbb sbb dec push pop roll ret cmp push and and mov out inc cmp pop jg mov int aad jp testl push hlt clc mov sbb pop lock rorl or movsb lods movsb and leave push push repnz ss sbb (bad) in fisttp adc and inc push add ss inc adc loopne mov push push sub in les dec aaa adc jmp fiadd inc scas lock push sbb xor pop inc movsl add lods inc adc mov cmp adc add add in mov add push call jp inc add sub xor out push add imul jmp or jb call pop and or xchg ja lea cmc (bad) xor or add std shll fwait cli xor or mov and mov or adc xchg addr16 xchg mov je inc aad inc xchg orl mov jbe push test pop scas iret dec pop mov test or test mov incl leave mov mov imul int mov add jmp mov sub mov jmp loopne subb mov fimull inc call inc inc cmpb add jmp lahf mov dec add jb (bad) xchg movl pop and push test lea movsl mov inc inc inc dec mov mov and add das push (bad) jbe pop jle test mov inc push mov inc dec jne push cs mov push push push fnstenv aam (bad) mov jo lock sub xchg and push cmpl jno pop cld notb mov mov push and xchg call mov cmp inc push jl add adc pop and add mov mov movsl shlb in push lods push arpl mov cld pop inc nop movsb sbb lret (bad) das mov cmp pop push in call repz mov testb push xchg jo bound or pusha push mov or or lret es popfw pushl jbe inc hlt push inc jmp sbb dec sbb in sbb mov mov pop pop sbb sbb mov jle in push mov and aaa adc mov cmp xchg pop leave stos mov add lods loopne xchg pop sub sahf push js lods jbe and sbb xchg cmp aam cmp xchg push jg mov xor cmp jne or ljmp xchg les nop and mov or je pusha pop mov test (bad) inc or and push jbe std repnz adc or nop sarb mov loopne out cmp test xor xchg sub aaa jae arpl xor xchg cmpl pop jle fldenv outsl mov inc loopne or xor and js push push inc xor push call xor pop repnz mov mov mov pop cmpl (bad) mov pop cld push or movnti add cmp (bad) fisubrl mov sarb push push mov or out inc mov xor divl loop insl jmp fisub xor je aas fadds fstps mov adc mov add mov sub pop lock bound les jo inc and xor xor push inc mov lahf nop and jmp ja loop push mov inc mov sbb push adc and mov sub sbb push stos push scas ds hlt sbb inc popf aad or inc mov adc test mov adc and fisubr dec cmp sub push jne jnp or je cmp inc lock mov aam push jge pop mov inc clc add dec adc inc pop insb stos mov cmp cmp loop and adc adc add add inc mov mov add jle out fsubp inc push out pop div pop jb lea mov jne mov ja stc push in mov sbb int3 jge mov fidivrl ret ret or and mov loopne (bad) out and cmp push cmp and adc push imul xor in adc leave xchg icebp or sbb sbb pop testw sub pop push (bad) sub ds push mov or jp into daa cmp mov mov icebp cmp sub hlt xchg insb adc push push mov jb mov mov add call xchg ret mov add sub in jmp mov push fistl loop xor push hlt test les jmp mov pop loopne pop adc sub loopne lods test (bad) push pop lret (bad) in mov aaa stc les push sub insb sbb sub adc ret je aam sbb fs insb push push sbb mov out clc inc testb cmp mov cld cmp movl adc inc xchg or call fdiv jno je rorb or fucomi and mov lock es sub movsb mov adc mov push daa mov cmp fld (bad) (bad) jnp int3 sub int push mov or mov mov push mov adc stos ror pop aad incl inc inc roll call cmp jb lea pop adc and pop pop jns and pushf ret add xchg push pop cmp and sub iret sub and nop inc add or lock orb add and lds jne dec call inc push jl ja loopne outsb add mov in add and mov movb mov orb clc or inc rol nop sbb jo es icebp stos push xchg pusha sub or inc and inc hlt movsb rcl ss and adc inc pusha enter sbb je arpl outsb xlat mov add adc bound mov aad loop aam jbe pop data16 dec loopne mov fwait rorl subl aaa clc pop push mov xor ret mov push add jne or pop mov and jbe inc add add mov mov inc or mov jne pop mov push ret scas add fstpt mov add add (bad) mov out xor pop add mov pop into adc push adc mov mov insl dec mov adc lock std aaa out cmp je cmp and adc cltd mov xchg xchg sub pop cmp jge inc xorb xchg sti fwait ljmp push inc cmp jb add in cmpb add pop aad and xor push push shll push jl aad test daa cmpsb push adc shrb inc ret pop pusha push mov hlt sbb or add test or (bad) sarb pop and add mov es add mov xchg sbb lods inc in iret outsb aam imul sub add stos sbb idivb mov sub push das push repnz dec les jns jge cwtl push push cmp std add xor adc inc and and aas xlat stos int inc and imul scas cmp push dec xor std scas lods hlt add add add idiv ss push or pop inc mov stos jp inc sub jbe push push sbb jne push inc fisttpl pop cmp loop push xor out push pop mov inc lock pop lret cmp mov imul mov or xchg lret jb fimull jae sbb fldl or testb xor mov sti add inc adc adc mov pusha bound or or outsb push test dec (bad) call add xlat jge imul mov andl out jmp inc add nop cmp jl push inc sub stos sub xor mov push insb pop cmp mov movd dec cmp stc cmp cmp inc (bad) push cmp jl sub sysret mov jbe mov shll jae pop in aas mov adc mov mov ret (bad) cmp pop and mov push add scas mov ja ja cwtl and and pop (bad) sbb mov inc std test out inc inc jmp sub inc xor xor and pop gs sti aaa mov push (bad) jno aad fcmovbe xor pop lea add mov jae lods mov sbb inc push jmp xor push mov and das dec mov sub je push push push cmpsb mov or pop flds pop and add cmp jne decl hlt mov mov fnstcw push add pop mov mov in xor xor in inc push or mov test and addl cmp adc xor fdivs inc xchg inc adc cmp pop aaa mov into mov mov dec ret push inc add fisubl adc xchg ret jecxz jl pushl mov out pop mov pop jo xor (bad) jne cmp je add jne fld inc incl inc rolb insl adc add mov cmp push or les jecxz (bad) int3 adc mov addr16 shrl inc inc and lods es xchg pusha mov inc movsl testb cmp inc in or popf fcmovne inc cld (bad) sahf adc mov fnstsw leave jne lret std je mov or fs push mov je in insl out or jmp and sbb shr sub daa xor mov adc inc adc ret and add or lahf js out sahf rcrb sbb xchg sbbl pop in stos aad dec jae sub push push in mov jge das out loop ss mov aas jae loop adc add and cmpsb sub out ss add das in subl ds push push inc dec mov mov ret out (bad) xorl xchg push out push add cmp push mov sub sbb and jl sbb sti pop int mov fbld scas or arpl cmp add mov xor pop push adc inc stc push jg test pop sub push sar inc push cmp or push or cwtl xchg sbb in outsl push add rcrb cmp pop and lahf push gs cmp test add push cld shrl jmp add push (bad) jne xor inc xor or and jne add inc movsb pop fstpt imul into cmp mov sahf push push adc rclb push and push and jae or mov push sbb (bad) jbe aaa add mov add mov add rclb sub add imul add or outsl xor xor mov push roll pop mov jge adc rcrb clc inc aad cmp or (bad) sbb add xor mov (bad) lea (bad) div pop imul nop xchg testb xor mov xchg lods push jbe pshufb pop xor pusha (bad) aas jl jmp pop rclb or stos jle or mov push insb mov outsl add je mov test xchg test or sbbb adc sbb loopne sar and shl add js sbb jle (bad) loopne mov iret mov (bad) idivb jp subl mov roll xchg fiaddl inc xor aad jo push adc push mov sub (bad) dec or pop movsl xchg ret shrd pusha icebp (bad) cmc push push clc stos das push dec mov inc imul mov stos jne inc jmp ds mov add or mov movl jl lea and xchg stos xchg jns scas xchg loop movsb xor call outsl mov lahf (bad) xchg jmp mov int nop mov inc and xchg (bad) push sub mov sti push daa loopne ja ret add cmpl add sub add sbb inc je aam addl inc (bad) roll sub aaa sbb mov daa mov jb push push movsb loopne sub push push scas sub and add cmp adc push mov mov out out sbb sbb jmp shlb je jmp fnop jge mov insb mov call (bad) repz pop enter cld (bad) dec adc inc hlt fidivl add jbe dec pop jmp test jle ret mov lock pusha cli xlat arpl pop pop pop mov cmp pushf sbb sub pop cmc cwtl or adc add cs jl into test rolb and lock mov xor adc and sbb or or cmp xor fisttpl sub int3 adc adc mov sub rcr xor sub add or xchg inc inc js sub test sub add les lods movsb add jp sub jmp push fldl add inc and shr add push push xchg inc fsubs push push call pop push fidivl push push jmp push jo stos cmp cmc or out lea ljmp or fidivl cmpsb sub add sbb xor and paddsb adc add popf push push cmpsl sbbl (bad) mov add loope xchg rolb adc int3 add dec mov mov rolb mov cmp add mov mov push or je,pn mov adc inc push xor mov das jl pop (bad) (bad) sub lret cld shr iret mov push lds ljmp shrb push dec add mov das mov test enter mov (bad) in test pop or je cli add cmp sbbl pop xor dec push (bad) mov and xorb std jg leave jmp dec add shll pop mov jae divb and jmp lea sbb inc test push aam mov cmpsb pop add jle mov mov mov or jne jmp cwtl pop xor jl out fimul sub adc sti add mov dec pop cmp jnp sub clc xor loopne pushf adc je pop add mov and and jg lock and add mov pop mov lods sbb push adc jno inc pop inc push into ss dec or pushf fidivl add cmc adc xor sbb mov pop sub and add cmp ja fcomip jne mov dec paddd inc mov jae addb mov push or or or popa in fildl sbb sub push and arpl mov mov ret add push lret add clc loopne or cmc addl aam xor js ffreep loope add push pusha mov mov (bad) pop xor and (bad) or push mov mov popa aas andl dec inc or mov dec adc mov add push nop jmp mov adc adc in cwtl mov push aad adc (bad) push xor or les dec fbstp jbe insl or mov and icebp fcmovbe add mov adc inc mov mov jg push and rol nop nop out fldenv mov push jp push test or mov cmpsl and mov or sbb pushl push adc jl in jmp addl push out add incl adc push mov push ret insb xchg mov (bad) shlb loop xor jge dec imul jo xor cltd pop mov dec insb cld test rorb jne push sti sub mov stc push pusha mov ds mov pop popa ja out mov mov dec fildl test outsb mov pop out jae mov lock push add sub or in out add add fadds lea xchg scas rcrl call (bad) clc add inc add mov ret (bad) enter test dec inc push js testb sbb not and (bad) and rol or fidivr je mov push push dec xchg mov lret loop ljmp nop inc ffree mov pop adc xor inc push pop test sub cmc push int3 and stc add or xor fidivl sahf pop inc adc fistpl arpl test fcompl es add out nop aad lcall mov mov add jns mov xorb add xchg mov mov pop jecxz add adc inc xor ljmp mov mov jl aas or (bad) dec dec or data16 push inc pop adc pop or sbb inc iret or adc and lret mov lea imul cmp xor aaa inc xlat jbe mov cld fistl mov incl cmp inc inc inc inc jge push inc (bad) sub and test outsl js xor test pushf push or lahf imul rcrb inc cld (bad) aas push sbb cmp dec push xchg out dec outsl push dec dec and or ja push outsl ja ja push imul fisttpl test das shlb cwtl icebp mov mov xor add add push push cmp sub or adc inc clc into mov push sbb cltd sbb pop sbb les xor sbb scas (bad) scas push test add lea loope lcall pushf and jge into mov subl or sahf push or test and push rcll and add imul adc fdivr jb push jne mov mov (bad) jne jmp cs and shrb xor inc popa into xchg sbb lock nop adc or ds daa push adc in add push scas pop popa in in sbb cli ljmp sbb xorl and ret (bad) iret jne adc dec adc sbb pop cmp xor out jmp imul into jne inc add pop push push pop xor rcrb push push insl sbb dec mov sub icebp pushf and sbb (bad) jle jle js js dec decl pop cmp jge push pushf xchg out fnstsw out xchg or pop and mov jge adc decb jne adc and jmp adc mov jbe scas and jne les out mov and clc addr16 push icebp jp mov or mov pop inc clc xchg and insb cmp mov or into xchg or mov mov or mov arpl and jmp insl repnz mov aaa (bad) pop fiaddl adc popf faddp or add aad xor inc ljmp int loop cmp or shrl rolb cli inc add jbe movsb sub jp std int xchg insb sub movsb and mov test mov js je mov add mov add inc movq pushf popl push push dec lea inc gs mov in mov push pop and xorb push lea add sbb or mov repz jb gs push push mov ljmp jae adc addb push lock mov mov in or test popf inc cld (bad) xor pop in test call pushl jmp inc and lock aaa ss sub (bad) mulb rcll sar xlat pop add add cmp test cs sbb movsl fsubs push out mov call pop mov sbb rcrl (bad) pop sub je push popf sub mov jb out mov xor pop testl mov ss inc push push stos out jo cmp in mov xor cwtl push add fdivr add ficompl dec add add inc incb or xor add or xchg nop dec mov inc or mov dec sarb push roll arpl add imul ja jo dec push or dec roll push jo dec cmp jns xor testl dec adcb in and push and dec adc adc leave push push jo call push push push xchg dec rol inc inc jne mov orb mov ja scas test mov pop sub cmp push sbb add jmp cmp push push cmp adc jno addb push jns xor adc jbe push fs sbb mov adc and dec push mov jbe mov push xor movl je jbe pop scas test (bad) cld cmpw fidivr add cmpl adc or xchg (bad) aaa loopne add push dec and or jno adc xchg call sbb test fucomip sarb stc jb push cli movsl cs idiv jb ret sub (bad) jb add push or inc in mov lret dec add or push push and or mov mov mov es jmp or test pop dec fsubrl dec sbb movsb inc and call and rolb mov test orl xor jnp jno ret (bad) xor fcomi inc push lds push roll xchg sub and mov or lret add pop mov jae and mov rcr shrb jnp push fmul and or cmpb and or pop jne inc (bad) clc sub lods jno fwait mov pusha pushl mov pop subb mov (bad) mov jmp dec adcl add adc je dec je stos fisttp push xor das jmp mov jge add push mov or ljmp sbb hlt loopne xor popl stc cmp push fwait push sbb sub add scas shlb or add adc sti add sbb push loope sbb pop ja jbe clc push cld dec rol inc fs adc and adc or adc icebp add ret fdivrl add mov push xor notb cmp shr fcomi mov es fidivl push fs push movsl jmp sbb or das les push or push adc cwtl xchg call xchg push xchg test xchg cli loopne xchg cmp mov (bad) mov test daa test sub adc test pushl in sti xor sub adc rclb ljmp inc test mov sbb test jne adc test clc fdivs ret pop mov and jge and pusha loope and cmp (bad) sub repnz (bad) sbb es in loopne loop aas mov pushf jne repz push mov and outsl push mov push push rcrb les xor pop xchg lret shll cmpsb pop daa (bad) (bad) test lea lea stos push test fdivl pop push int3 int mov test mov enter (bad) pop lahf loop adcb testl push adc xor add mov xor sub push shrl adc adc sub mov enter in pop dec adc pushl add sub and dec inc lea cmp mov roll test sbb shrl sbb mov push xchg push and pop mov dec mov test ss in mov call or mov pushf std adc or pop and mov mov xchg xor push inc push sbb adc mov out int3 jo test test mov mov fdivrs ret popa jne push inc pop adc push (bad) ja jno mov xchg (bad) xor loop xor mov mov sarb repnz add add add or pop xor add stos cmovne xor enter jl enter add push push and mov test pop test imul push pop jb add add in push xchg mov cmp shr jne cmp mov sbb icebp gs pushl lret les push mov mov rclb int3 mov ja ret fmull mov push je mov aam mov mov and js adc dec ljmp inc inc or daa push or jbe jbe pop or nop inc push adc inc push sbb ss and and sbb sub xor fs inc sbb cmp insb cmp stos inc or inc pop fs inc push dec dec push nop inc push sbb inc push sbb push insb jo js je inc jl mov xchg leave and mov xchg cwtl xchg pop jb pushf mov and stos sub mov shrl popa push cmp in mov mov adc sub mov jle add mov sbb adc fs in xchg or and mov faddl (bad) xor inc adc mov sbb fldcw push mov and sbb (bad) pop adc cmp (bad) cltd ljmp or bts jmp adc pop into mov sbb jp call pop les pop das push add jle ficompl push bound mov imul fs dec or or mov into pop aad leave push jmp push jg cmp roll jp adc into push add or cltd dec aaa out cmp insb adc xlat jecxz mov jne or ss or mov pop icebp push or push adc mov icebp lea stc mov sbb push clc loopne dec inc add mov es aam es cli les sub pop inc mov lret inc adc fadd and clc push orl push lds or add jp aad sub out push mov mov call push inc mov cmp fcompl adc adc pop inc nop gs mov cmp sub fs mov add sub fs push cli or loopne jecxz sarl (bad) mov in or mov ss push push dec add adc rol inc ffree dec lods jg int3 add sbb and or push mov je push pop dec aam xchg cmp jne pop add (bad) pop sub mov push and test and push fwait or dec inc mov jmp and xchg sub test add imul aas pop push mov mov xchg in incb rcrl or pop lcall adc pusha adc add xor jecxz xor inc dec push mov (bad) in add loop sarl xchg pop add inc mov xor push arpl mov xor xchg rclb dec sbb and xchg adc cmp or addb inc nop jne cwtl int xor mov insl pusha pop or adc xor add imul inc xorb inc orl or je fwait push mov aam jecxz fneni(8087 push dec adc mov movsb push bound inc (bad) testb idivl rorl sahf lock or dec pop and mov in pop xor adc lds scas sub mov cmpsl sbbb inc sub cmp xor or add add fs insb (bad) mov jb add ss pop ret push mov mov std pop js push or dec hlt mov sub add push mov and and fs add inc or push bound add sbb and shrl ret adc lahf fcomip and mov add pop lret xor adc mov or xor push out and add arpl mov push pop add pop lea loop pop fs in cmp mov sub adc or xor sbb mov bound adc cltd push bound mov or js mov mov and jge or push sbb push into pop int call pop and (bad) adc dec add xorb dec cld jg jbe pop xchg push sub and adc stos cmp inc jle pop or push nop add push inc xor sub pop or mov push mov jo sub add add inc jl (bad) rclb dec cwtl adc ret or jmp mov insl add or arpl jno mov popa push or push or add cmp mov or cli push das test push inc pop pop pop pop and push add inc rcrl sub xchg scas flds add sub fmuls xchg pop add popf jae sub push push inc or inc adc aaa fsubl or fdivrs pop in imull inc loop sub push inc or add inc cmp adc shr rcr or jne div das and jmp sub ja jb cmp or sbb lock or addl sbb mov or outsl fldenv ret dec ds popa ja lcall mul mov pop jmp push add cmp add pop xor push and (bad) in bound jne jmp add or (bad) aad sub push add cmpsb enter adc pop xchg hlt sbb cmp pop add jl add push push mov and sub jle and (bad) sbb push push es xchg xchg adc pop push inc add movl addl add adc stos or dec (bad) mulb test and (bad) aaa xor fildl mov mov or push adc js cmp loopne mov adc and outsl mov cwtl jne cs lods test add lret fild mov in call cmp test jo add lret sub jnp decb sub add popa cmp push ja or or enter cmpb daa pop add dec dec lret push add rolb jecxz dec stos and dec add lock dec imul jbe fsub pop push mov jne test or and mov push push xor ja loop cmp push adc (bad) jbe popf insl sbb pushf or daa outsl dec mov and negb movb mov sub notl mov inc ret xor aam adc push lods add lock pop jne pop (bad) mov enter pop ret add mov mov jns mov mov mov cmp or insb je mov (bad) mov out push cmp ja add cmp insl mov (bad) cmp and add incl popa push fnstsw rcrl push adc xchg xor pop add jmp mov sbb xchg cmp push push pop je jo pop lret outsl iret test add fsubr ret shl push inc sbb fimul mov mov outsl mov pop cmpl add xor sub inc jo loope lds sub push mov fadds jne fcmove inc cld mov frstor into ss out shl int sub adc imul cld pushf je inc (bad) aaa push std cld jmp adc and popf inc push in xchg (bad) push lock jl sbb mov nop or shr lods mov lods inc adcb andb add adc pushf test fwait pop or add roll push test inc inc xchg sbb testb ss jecxz insl pop arpl mov andl adc or mov cmp sub mov sarl or push cmp mov lds das cmp sbb jb addb push cld xchg pop mov xlat xor dec jno xchg outsl pusha jnp inc clc push push lcall push mov mov test push ret fidiv push cmp cmp bound and and add mov jb or add mov fadds lret fmul and ja xor scas inc out cmp sbb mov mov das hlt mov mov mov imul adc lea inc push inc dec mov mov cmp mov addb jp xchg xor push aam adc and xlat lret pop popl or inc xor mov and xchg adc cld imul ja cld dec rcr je sbb inc and inc jmp jmp mov dec adc inc mov and adc jne or shll js jne or popa cmp add mov pop repz inc xchg mov arpl and insl pushf cld arpl sub pusha ja mov jmp mov sbb push adc and stos push sar xchg dec cmp jge cmp jle and decl mov mov jge pop inc aam aas mov mov cmp add push or pop or bound push mov sub loop incb sti xorl mov pop adc or mov icebp repz and mov fisttpll xor adc lods sub cmovb mov movsb push insb js out aaa or pop jmp cmp sbb cmpsb call mov push hlt fiaddl test movl movb jbe es lock incl mov outsl sub dec jecxz pop adc mov add lea push xchg and pop mov fistpl mov mov mov pop mov or (bad) mov rclb adc add lock insl call inc sub xor xor mov negb (bad) (bad) testl pop mov cmpsb enter and add pop jnp and les jle pop arpl lea dec mov push lea loopne ja cmp pop pop pop sbb jbe loop add cmp call push push icebp cmp in jo in popl push and push push mov dec aaa cld mov cmpsb test test jmp dec lds sti xchg push pop push mov add nop in test sbb scas test dec cmp rol add add jmp mov push mov add mov or push mov adc mov sbb adc sbb psadbw ja add repnz bound add dec test push adc pop loop dec inc arpl cmp sub scas sbb fcoms jle or enter adc jge sub jmp mov push adc mov add jne xor or jne gs nop xchg xchg enter movsl mov cs or mov push nop and add mov repnz pop rcrb add inc cmp pop data16 movsl push add add xchg (bad) addr16 fwait mov inc jne mov add sbb into cmp stos pop mov cmp mov insl xchg or jne and adc imul sahf jle and or xchg (bad) fwait sbb mov mov or pop into mov mov in xor push fldl mov cs out shl xchg (bad) pusha add in or and outsb movsb or int push sub inc adc idivb push mov add lea push push or clc test sbb jo jle sub mov test mov add xchg and ret or mov adc mov jg jmp mov das or cmp jl decb (bad) sarl into pop inc adc cmp bound cld mov push mov dec fs sub adc push cmpsb loop cmp sbb (bad) push mov add add sbb addl add push fdivs adc insb adc es jecxz jo jnp in adc adc mov sbb ljmp outsb outsl mov pop xchg insl cmovno out xchg adc cmpl dec dec pop pop adc push cld pop cmpb or sbb pop mov jg push jge in xchg dec rol push push insb addr16 adc in pop add (bad) xchg add test sti cmpsl jmp adc out ret mov cld and icebp fs jmp rcrb into cmp inc popf push loop jb pop jne push mov sbb adc add jmp mov inc adc push cmp mov rolb and lret (bad) dec mov lods cmp or call mov test lds jne or or and xlat scas mov or ja sbb inc loop loope sub mov inc repz stc push sub adc sbb mov ss inc cltd fildll loopne mov sub aam inc sbb sbb push out jl movsl mov cmp (bad) cmp mov jae je inc and popf insb push push jmp sub aaa loopne dec jbe out sbb movsl sub mov es and and and push add xchg aam test push pop sbb es pop negb outsl xchg add adc cwtl call ds mov imul je dec jne push inc or ja pop xchg sarb mov fsubr sbb xchg cwtl lea or sbb jle mov insb mov or push jmp rclb loopne sub aaa mov scas sbb popa mov xchg js inc lahf inc or mov inc imul popa add mov add add push aas (bad) jp cmp je cs and sub adc push test add and mov push pop (bad) popa je add adc xchg and gs adc jno cmp aaa sbb push cmp jl iret jg fs test inc push push jbe dec hlt out push cmpb sub inc add das pusha jg and sub dec adc andl inc add (bad) cmpsl test push call loope inc add mov pop (bad) outsl dec sbb pop and mov test jl or sub test add idivl repnz movsb mov cmp je std or add int inc mov or add push dec xor push roll or test popa mov mov lods es int outsb and or addl push mov or mov es mov sbb (bad) imulb test gs test jle inc daa orb faddp insl or add (bad) xchg shrl inc jecxz pop mov aas (bad) hlt adc and aam add dec dec movl xchg cmpl mov or gs xchg leave cmp xchg xchg mov sub clc sub rclb cmp fsub jae and pushf jg sub jg xchg ja inc ret jg lods call inc inc lret into pop scas test in jle jbe push inc loop push hlt mov xchg push xchg mov cmp jg or inc jl jg jmp test hlt addl or xchg sarl ja jo loopne mov pushf je push hlt adc adc dec loopne inc lods jmp pop and and cmp xchg adc xor add and lret aam and push push mov fcoms in nop sbb movsl movl inc imul add add mov gs rcl adcb clc push aam lahf lods dec and pusha test cmpsb add lret or test xchg push push dec loope fistp sbb mov (bad) rclb cmp je cmp adc (bad) (bad) loopne push cmp testb and inc add jmpw sub in int3 push aam subl out daa jmp and dec adc jb push je call xor je sub pop adc daa and push in push inc (bad) je shrb push lock dec push call in jmp add and imul (bad) mov and adc inc push je push nop add outsl sbb add mov fstpl and adc jmp mov cmp mov xor adc and push fs leave sbb lea inc push push push pop ret frstor and lret or repz dec lea clc mov testl stos xchg in icebp push mov fildl rcll jb push push js dec je pop testl xchg aaa sub and ret sub push push or mov (bad) rorl or add je test xor ret cmc fadds sbb inc sbb mov cmp jb cmp jb or push push dec add adc or ljmp mov xor (bad) jae das add mov faddl (bad) jbe repz push test jb inc mov mov cmc pop fildll cwtl sti pop lock aaa push (bad) cmc mov adc adc mov mov sti orl lcall fisubr insl lea xlat push push in push adc xlat add iret test (bad) ja push add adc js add pop mov or (bad) lea jl cwtl call pop sub repnz mov adc and data16 adc pop mov mov add or adc or jbe lds adc mov je je dec cmp jle adc mov scas adc mov leave cmp pop sub shrb (bad) xor xchg pop adc xchg (bad) int fildl je push loop dec sbb or movl push sbb sbb in dec hlt add je push in xorl cmp push jge xorb inc test fcomi iret int3 dec or sub or test mov lcall std mov push into pusha push and test inc sbb mov jl inc arpl mov pop adc cld (bad) or call xor jg stos inc mov jle hlt ret xchg mov fistp mov movsl mov inc lock inc data16 mov jbe xor add cmpl cmp subb andl orl int3 stos sub push sub loopne mov fmuls cld push and fistl pusha inc sub inc ret sarb cld adc lea jb adc pop jno loopne mov sub adc loopne or nop xchg dec jbe or in les fmul nop cld pop mov add sub lods adc fstl mov mov inc sub xchg mov ret sbb xchg add (bad) xchg sub subl mov clc sbb sbb leave (bad) jne pop loopne xchg mov mov leave leave gs push mov jbe dec mov loop pushl gs sbb fmull cld in popa daa pop sbb xor dec jb cmp or sarl adc mov and add pop inc call mov mov (bad) xchg rcr mov rcll dec or inc push dec in leave and sbb rorl les push push sti popa inc sbb add adc add pop push and mov add mov adc lods pop lock sbb push cwtl dec pop (bad) mov inc add movsl mov fwait add (bad) xor xor or jne in shlb jo fcomps and pop pop cmp lods sahf adc pop cmp mov inc mov fs dec adc jg insb aaa mov xor or jp adc int3 or xchg out push pop test ret pop and ret jmp adc enter jle sub push mov add fsubs adc or xchg in push and cmp or xlat insb jle add cmpsb and js pop fstps cmp cmpsl andl or inc adc add push add pop push and xchg cmp adc xlat cs push and cmp and jns test add add aas das cmp stos fildll daa add insb xchg jo popa or enter or clc cmp stos stc jl add adc subb test (bad) push insl outsb lret mov hlt dec jb leave adc das cmp sbb sbb xor lcall hlt stos iret xchg clc xchg icebp and xchg rclb fxch add adc sub mov adc mov push fcoml xchg xor fstpl mov fsubl push (bad) push sub add rcrb adc xchg dec push adc pop cmpsb sbb or pop cmpsb pop repnz jo xchg push repnz repnz test fisttpl add lods mov mov stc sbb pop push int3 in push mov xor andl lods mov lock lea pop gs lods ret mov cmpsb imul inc jnp fstl leave sbb fidivl add push aas inc jbe xchg cmp inc dec aaa cmp lahf (bad) std (bad) mov add add add rcrb popa push fdivr outsl decl scas int adc loop and lfs flds sbb fsubl sbb scas cmp mov gs popa je and add inc outsl jo incl addr16 xor and popa outsb sub ljmp jo inc popa imul fildl or shrb cmp or add add add add jnp scas inc sbb add adc imul or adc push jmp adc add jg add (bad) jne xor add ss pop aam lret add add sub add and xor add enter arpl in enter add fs inc push or or or fbstp jnp fwait sti dec adc pop or or or imul add lods insb (bad) xor shr sbb pop fmull xor cmp jl add inc ret (bad) loop xchg push rorb xor xor xor (bad) xor lret push xor shr sbb xor cmp xor (bad) xor (bad) cmpsb data16 xor shl push xchg push (bad) dec (bad) xor ss (bad) push mov cs outsb (bad) xor shr push sahf pop fimul xor ds xor (bad) xor shll popa (bad) xor shl adc xor xor xor (bad) xor leave sub shr sbb xor cmp xor (bad) xor lds dec shl adc (bad) xor xor lea sub dec shr sbb (bad) xor cmp rcll push add push xor (bad) xor rcl xor (bad) xor (bad) mov jae repz (bad) xor repz mov xor lret lret sub (bad) xor shrl dec (bad) xor jmp sbb (bad) xor fcmovnu cmp (bad) xor sarl dec (bad) xor sti pop pop xchg xor mov dec shll dec (bad) xor out pop xchg xchg push xor (bad) xor xlat xlat aaa aaa (bad) xor (bad) mov ja (bad) dec (bad) xor (bad) (bad) jg (bad) xor iret iret das das (bad) xor shrl dec (bad) xor out pop pop lahf lahf pop xor (bad) xor (bad) aas aas (bad) xor sarl cmpsb jmp inc add pusha lcall jo dec imul imul imul lcall mov mov add pop add sbb imul imul lahf imul sbb add or pop pop fisttp add add mov or or sbb or sbb or out adc adc adc xchg sbb xchg mov dec xchg push std pop icebp fnsave pop adc adc inc xor and adc and xor pop inc leave push xor sbb sbb mov add (bad) lds mov not xor adc sbb sub out inc dec xor jecxz add jo add push loopne jae or or sbb or pusha dec sarb push seto imul dec popa jb and insb gs wbinvd mov or lcall cmp jb jecxz mov or cwtl sbb push dec out mov arpl xlat inc into movsl add add into add push add add (bad) rorl mov and mov pop shr (bad) add aas add add add dec (bad) xor add or sbb (bad) xor xor pop mov pop push insb rol imul (bad) (bad) jg outsb imul outsb and arpl je outsl outsb ja ret (bad) (bad) sbb cs imul push outsl (bad) fildll dec dec jb dec inc push dec inc dec xor cs dec dec jg test mov gs inc insb jae jb gs push gs add notb insb jne inc inc insb insb outsl push sbb outsl jb js je jb gs insl lcall cs insb adc shrl push or (bad) fs (bad) (bad) jg or sbb and and es sub sub sub cs xor xor (bad) (bad) pushl xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec or mov das xor pop pop pop pop pop pusha popa bound adc push loope inc insb insl or jb je jbe js jp jl jle add pop jb fsubrl dec loopne outsl (bad) or push dec dec push push adc pop or sbb dec dec inc push pop dec dec inc lods mov (bad) adc sub pop fcomp xor jo insb imul jmp push popa mov je insl lods lock and and pop push push inc and bound jns jg pusha fisubl sub insb jns or vcvtss2sd sbb and je scas mov sbbb jae push cs xor insl and insl fs push mov fcomp insl and lahf xor adc jne dec fmull imul mov imul pop (bad) bound jne dec and jbe in ret and imul or fs cmp bound mov lods fisttpll and cmp iret in or sub pop into fcmovnu insl imul pop push insb insb (bad) mov mulb xchg sub and mov insb jb sahf sub sub outsb push inc sbb mov cld outsl jb inc dec ljmp sbb fwait sti divl add add or pop sahf push cs inc push das cwtl sub pop xor gs or push push outsl or cmp push and setnp gs mov pusha fs fs fidivrl xor cli into insb gs fnstenv imul jecxz inc ret imul nop ss fs fcmovb out xor imul sub xor xlat test sub das sub fsub pop leave and test or (bad) jo xchg sub and pop fwait inc and gs aaa nop popf and insl cmp jbe push mov ret pop xor adc cs pusha sbb jno jae sub orb push in dec popl je out inc cli push push mov popa repnz inc jbe ret xor adc pop imul sub push enter jne jae scas xchg xchg push dec les xchg cmp pop xchg inc rcr ss roll mov mov adc in sub bsr lods dec hlt daa or jo mov jb and jne fistpl push sti add xor and push cmp sbb inc jb pop and push jg mov pop into fstpl jne add xchg (bad) xor test fs sub and sub and dec add test jbe add addl and (bad) add cmp and add add insb fsts add enter add add push mov adc add jl insb incl adc inc fadds sbb add adc (bad) aas rclb (bad) addl (bad) jg test out (bad) nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall popf sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov (bad) (bad) (bad) (bad) mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu fdivr (bad) (bad) (bad) fstp fnstsw loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld dec movsl lret (bad) call lock add popa push jg sub add or dec cmp stos data16 test lret (bad) jge add or add das das xlat (bad) mov pop dec sub or push add daa sbb push xchg std add jbe dec lea push sub jns inc push mov pop adc test inc insb icebp mov pop mov inc out imul arpl gs adc adc dec sbb fidiv or push push dec out mov aaa jns aas cmp push jnp and push lods lea pop or mov adc jl sbb jne dec sub mov cmp das daa sub (bad) jnp pop repz fwait enter cmpsl ret dec bound pusha add push movl cld dec inc insb and cmc sarl adc outsb mov push fstpl and jb jns sub mov adc xor add jns gs pusha mov ljmp ljmp sbb shlb jbe inc dec jo mov jle and je jb pusha and bound sub and fs xchg xchg mov xchg shrb add cmpsw dec inc and leave xchg leave sbb xchg and movlps and aaa push test xchg dec clc sbb fsubrl cmovp pop pop sub fmuls daa add add rcrb sbb jae testl xchg ja pop (bad) cvtdq2ps test jbe mov jnp dec add jns movsl test add fs sbb (bad) outsl xlat and pop gs or aas es imul and ret push ret xor jb lret or mov xchg or mov inc pop rclb aas adc test mov jge dec dec mov pop je push (bad) fildll inc sbb bound jge fsts or mov mov jl es add add or add xor pop xor jle sub jne mov sub xor ds cmp pop into mov das sub out fsubl testl sbb outsl jo div es cmpsl cmpsl and cmp mov dec dec ds lret fistl jle pop pop shl push fs cmp sbb je jo ss jnp jo fptan sub lods jle or xchg xchg jo pop int3 pop or ds mov sub call and aam mov mov pushf nop test lcall add scas imul and xor roll push dec (bad) xor dec dec inc inc cmp imul sub and dec (bad) xor add adc or dec (bad) xor add cld mov imul imul imul cmpsb imul shlb nop insb dec and cmpsb jae or mov add fdivrl mov xchg js cmpsb jae cmpsb xor loopne jae cwtl mov imul push sbbl push mov std js ja lock outsb pop push cmpsl jb xchg adc xor jae mov inc arpl push bound mov imul mov lahf inc outsl js add fdivrp push inc push movsl xor xor sahf adc dec cwtl movsl lods mov mov inc push or cs sbb loope test inc inc jo pop mov popf in sub inc cli outsl arpl or inc adc sub add push jle mov incl mov mov and pop test dec add aam cmc sub aad insl inc push arpl adc mov jp add mov imul cs lods jmp js add push add test cmc mov mov add and clc rcrl in xlat inc mov outsb aam dec push jns insl xorl add outsb jns cmp pop xlat jne or inc jb gs xchg sbb or or lods cmp jo movsl inc sarl or outsb jae jns add cmp jae in (bad) mov xchg sbb lods (bad) (bad) daa and int add rorl or loope mov inc cmp test mov je popa scas dec add outsl add mov mov shrl and add sbb push outsb xchg outsl xchg jne jae mov adc cmpxchg sub outsl add or inc xchg jo outsl and and or faddl aad mov jae cmc arpl inc pop xor gs popa fwait cmove ret jnp or pop add add inc jae push push aaa or fwait arpl ja test or out in test lea fisttp fdivl dec sub inc sub inc cmp cmp fstl inc cmp push dec xor aaa mov mov inc or dec xlat jne or xor inc and das ret sub inc imul xor xor cs sbb jbe xor add sub sbb jno mov xor pop or jae mov clflush and dec push insb inc sbb inc imul inc test jne jo outsl and inc insl outsl or ja outsb insb mov pop data16 insl or je sti outsl outsb sub imul inc inc cmp cmp or adc inc cwtl test scas imul add jb popw mov negb arpl push or pop cmp inc lahf cmp fwait popa jae (bad) xor fisttpll fnsave add xor xor out scas sti das inc pop inc adc add idivl in outsl or out das pop test sbb je insb leave arpl add in ret add lods jnp jns push sbb sub js inc jne xchg je addr16 dec xor popa daa jns and mov xorb outsb pop dec add inc jg das gs jns mov insb add test cs lea add jmp push mov outsl fsub push inc decl xchg bound sbb lock outsl cmp mov fs outsb fnstenv aam mov add push jae add pusha mov mov dec and jbe insl cmp in das aaa jne leave xor ss pop add and fs fiaddl dec xor cmp push inc pop in add dec fwait pop sub sbb imul test int dec add insl add imul sahf xor pop fisubr inc inc sbb xchg xor fisttpl mov dec jp add add cmpsl jl pusha test imul and inc lea (bad) adc outsl mov sub pop sbb out lods aad popf aaa mov push imul dec das adc test test daa dec inc or xchg xor in xor pop (bad) lret addr16 insl mov call cmp (bad) inc add test xor inc bound rcrb (bad) popw push add mov add jb nop clc mov aas stc pop pop movsb mov pop push fbstp ror inc or outsb push (bad) ja push mov imul addl das dec adc and (bad) jmp mov jp insb or xor jp jns xchg popf add or fcomps fs jne pop add xchg imul dec jbe lods test sub add push jne test add loope (bad) in arpl jne das add dec pop add inc sbb repz dec add enter jecxz pusha ret sbb lret roll adc out in or addr16 inc push insl dec test sbb lret idivw jb lds sub adc (bad) push sbb gs popa push ss jne (bad) rolb xchg rcl adc sub inc pop pop (bad) (bad) decl popa bound cmp cmp cmp aaa sub sub sub (bad) xor xor bound data16 outsl cmp inc inc xor and inc inc inc mov aaa xor ss xor xor pop rorl gs outsb js pushw gs outsl fs enter imul icebp add pop push ja je dec inc push adc or mov cmp inc pop push push dec mov dec cltd inc adc inc fcoml mov aas ss lret push push mov sbb insl inc add enter inc sub ss mov outsb arpl or bound int js add inc mov mov add and popf or lea in jnp imul inc inc dec movb pop inc add fnop jbe xor dec and push mov dec xor aas in inc in rorb sub fwait adc test fs fbld sub les sub mov inc addr16 (bad) outsl xor rclb inc push sub adc jmp pop inc mov jnp add negl xchg dec movsl dec pop cwtl test popa add push popa xor arpl push (bad) adc je out and les lods xchg pop pop ret add mov push sub push ja push inc mov (bad) loope xor add mov fild or inc lods jbe mov inc pop and outsl lds sbb push cmp out (bad) (bad) aas and push push inc push lods jmp adc sub xchg jne (bad) pusha pop xor push jmp (bad) jnp cmp arpl incl jmp gs bound pop push movsb pop inc outsl je jo mov dec xchg inc xor inc adc (bad) or rcll pop mov pop cmpsl movsb shrd adc ljmp loopne daa fcoml lods jmp das jecxz paddb jl dec ja add pop daa add (bad) or add dec subl daa mov adc mov xor inc daa add xchg dec pop dec xchg (bad) or pop (bad) pusha pop repnz clc inc add test jge fldl or inc and xchg cmp scas sbb cmp repnz imul xchg ja shlb insb and insb popa inc pop cmc and pop mov mov add (bad) or xchg pop aad loope jnp sbb aas repnz pusha pop repnz pop pop jae inc aas lret dec pop das adc ja sbb fisttpl pop insl pop pop and or aas arpl sub stos pop pop pop lret pop lret dec cli jno sti sbb test sbb add cmpsb out mov or out add les inc push add jae add xor sbb fwait mov xor mov mov push (bad) aas leave cmpb adcb inc cmp fsubs sub pop dec mov sbb push out popa testb aas xor leave mov push ficom cwtl mov push xor or add loopne push mov xor cmp dec push test push in nop mov test or sbbb sub fldcw sbb lret jle jecxz jmp ret js int3 flds std add push div cmp mov outsl call nop inc dec mov mov pop fldcw pop inc add sbb inc insl sub sub sbb mov insb ror xor mov ror mov insb in inc loope xor and negb dec push or and mov sub mov (bad) pop lret inc push push or mov pop arpl imul add mov (bad) nop daa ljmp inc xlat aam adc xchg fwait pushf add addps jae inc xor mov pop (bad) (bad) xchg and mov mov ficompl sbb and imull and das xchg jl xchg jl jnp inc shrb jge jge pop jbe mov cmp fnsave pop fadds and jmp push mov or int inc add push xor push inc push xchg mov or mov sbb outsb shll add push dec jg or pop shlb push or pop and xchg sbb jbe pop rcl inc ja and mov scas add stos mov divl je outsl fs inc xor fstpt outsb sbb es outsb adc inc (bad) je outsl cmc outsb jns sbb imul outsl insb jae push iret push adc bound (bad) fnstenv xchg fildl add adcb pop pusha add sbb add mov push out fildll pop jbe mov data16 loopne push adc inc sti push mov imul xor lret pop xor subb insb push pusha cmp test and push out std pop inc adc push add cwtl pop adc add add out sub pop add or cmpsb call or or mov inc add or pop adc push pop jae cmp pop jo xor sarl or pusha pop roll insb and mov sbb inc pop loopne push sbb pop pop pop sbb nop push sbb push pop cmp js cmp sbb pop adc push push sub mov or mov push sbb jmp sbb push pop adc push pop roll lods jecxz sub je push sbb aas enter fs insb mov pop and test pop fsubs sbb call sub pop pop sbb pusha xorl xchg push pop jl pusha xorl cmp fcomps fsubrs pop mov enter dec pop clc fsubs jg pop push pop adc fsubs or and jb pusha orl or orl pop movsb lar (bad) inc pop in fsubs jg pop pop pop sbb fsubs or jp pusha orl adc (bad) or sub mov push sbb xor hlt sbb jg pop push pop push push or mov xor jbe fsubs pop ss int3 decl pop fsubs or lods cmpxchg push and xchg inc pop roll insb in jg pop pop pop push sbb pop pushf jmp jle insb mov pop ds fdivr sbb insb mov push outsb pop cs mov sbb pop mov popa mov imul incl sbb pop xor xchg pop push sbb pop mov and inc inc pop loop dec sbb pop sbb xchg call pop cmp sar mov push sbb sub mov pusha sbbl pop fisub (bad) bnd adc ds pushl xor aas lret pop xchg insb mov pop stos maxps pop inc pop ljmp pop sbb orl (bad) fsubs or mov sub lea dec pop or addr16 fcoms pop xor push and jbe mov pop cmpsb maxps or pop inc shlb pop sbb xchg (bad) jnp xor pusha pop cmp (bad) incl pop sub mov sbb lahf mov dec pop testb dec call pop jmp aaa aas into ljmp xchg daa pop scas punpcklbw pop inc pop fsubs shr lcall pop pop fcoms pop aas pop or ljmp das in mov sbbl setg sbb (bad) incl mov dec xchg rorl xchg mov dec xchg test jmp sbb stc xchg mov sub dec xchg xchg xchg cmc sbb dec int xchg mov sub dec xchg mov std ret sbb xchg mov fs mov xchg repz mov jmp dec xchg test sub (bad) dec xchg sub xchg xlat xchg xchg mov iret sub dec scas out dec xchg outsl sub mov fisttp out push pop out add insl jp je add push add mov fistp push mull pop jno push add in in cmp add aas add inc push sbb in pop push popa aas and xchg jb enter or add add inc add call push and and xorb bound gs inc mov ss push inc and push test jns popa les push sub sub add add pop add popl add sbb stc ds push pop incl add add lsl aas cmpl mov ja iret jle nop/reserved push (bad) jbe xor inc adc add push es ret adc pop add adc and add pop pop or rcrb test nop xor ja addl jns cmp fadds pop mov ret lahf cld inc jle test shll in adc das out push sbb inc pop mov iret mov std push stos in call mov adc push ficompl pop pop fisubrl xor iret shrb xor sub add arpl inc mov in add add jbe fwait add stos fisubrl mov inc jo or push pop mov or ret pop jmp jg add loop pop jl sbb mov push test ret or adc or or or cmp notl or notb adc adc and nop inc inc push xor insb mov pop push pop push pop pop jnp push roll pop fwait pop fsubs (bad) jo fbstp push das pusha orl (bad) pop lods push ss xchg add roll in sahf pop (bad) movsb outsl push sbb pop mov into pop xlat dec inc aad sbb pop or sti or and inc adc adc sbb push dec idivl pop adc cmpsb adc fwait test mov pop pop sbb in movsl inc repz ret les push stos pop jae pop (bad) pop faddl adc cmp inc jmp pop jns ret imul cld cmp inc cmp or xorl or push in and mov popl fs nop xchg push inc push fs xchg cld and xchg js xlat orb movsb inc sbb and pop pop lods mov jnp inc push sub mov fwait sub add mov in sbb jmp inc add lods out mov lcall dec dec inc inc dec and mov imul adc cld mov add xor (bad) xor in call dec rcr fcom ror or mov (bad) xor roll cwtl nop test (bad) xor fs pop push cmp test jnp cs pusha push fldenv pop hlt cwtl add or fild mov sti addr16 push adc icebp loope push push mov inc aas add and and dec fisttpl dec pop add or pop xchg mov add fistl (bad) xor pop mov add add cmp ja daa roll repnz dec xlat popf xchg das add add and shlb ret sti lar cmp rcll xchg test dec ret or pop and rclb mov lahf mov daa push int3 push add lret mov add lret popf arpl add hlt leave sub je jae test ror or sub into mov (bad) xor and movb adc lds push cmp push or les add mov insb inc ja and adc jge mov leave mov test add (bad) adc pop adc sub adc (bad) push or mov sub nop add push call js in jge inc adc mov (bad) (bad) push sub rolb test (bad) les adc mov pop pop pop pop and dec add (bad) (bad) pushl clc rorl leave cmpsb xor lods dec lcall or (bad) lcall dec mov dec push sub mov xor mov (bad) (bad) (bad) (bad) jge cmc into std cmp fidiv cmp data16 mov ret (bad) push adc cmp test (bad) (bad) (bad) call lahf decl in int3 repz ds jl repnz jno mov cmpsl lcall std pusha mov arpl jo lods enter int3 lds (bad) (bad) jmp mov dec repz ret push push xchg icebp pop sbb out scas mov cmp in arpl std das std cmp mov decb cli (bad) int3 decb cmc add xchg ja (bad) (bad) fisttp pop cld push lds fstpl adcb xchg fnstcw sbb xor (bad) (bad) (bad) ljmp (bad) popa dec and loopne add mov cwtl push lods dec push sbb call add mov data16 push test jae push cld pusha fdivr (bad) (bad) mov add xchg das fcmovb cmpl pop inc test adc ror xor data16 or add sbb ss fimull test shl sbb cmc xchg (bad) xor push adc xchg outsl fs sti or fildll faddl sub jg das pop out adc xlat (bad) (bad) (bad) (bad) cmp mov mov push pop pop addr16 mov imul ljmp (bad) (bad) call add ja,pt (bad) fisttp (bad) fcmovnu cmp inc inc mov mov (bad) call mov ja (bad) icebp lahf pop loop xchg in jbe jbe leave out xchg insb popf dec testb mov (bad) (bad) lcall inc fs mov inc and ja lods or testb pop loop popf add stos scas nop dec (bad) (bad) (bad) decl push (bad) cld mov in outsb hlt sbb es mov enter and dec jb sub (bad) ljmp out and out nop xlat jle mov mov imul fisttpl in or fisub (bad) pop inc ret dec xchg call fsin push xchg pushf (bad) (bad) (bad) (bad) std les test imul pop cmp xchg cmp cvtpi2ps xchg repz (bad) (bad) pushl sbb xor mov xchg cmpl pop sbb mov (bad) mov pop movsl aas daa (bad) jno (bad) jnp (bad) aaa mov lds add rcll (bad) (bad) incl cli in cmpsl jge lret ss lods insb (bad) lret fstps pop insl push loope sub (bad) call sub cli mov xchg jmp jbe addr16 clc (bad) (bad) incl mov inc dec mov or cld mov xor pushl fdivrs mov mov std xchg add aam insl xchg jg mov xorl xchg mov mov or popa loop (bad) (bad) (bad) in notb pop lahf (bad) and fsubs imul jl arpl sbb (bad) (bad) add xchg jmp dec insb push (bad) sub inc gs mov addr16 or sti (bad) mov aas add and sbb ret ds fs (bad) je aam jge (bad) (bad) decl repz dec insl out adc sbb std push lods jecxz inc jno (bad) xor inc cmc (bad) (bad) (bad) decl test xchg in push fsincos and or sub cmpsb push add mov push stos clc (bad) (bad) inc jge cmp sbb imul jge aaa inc fsubl mov (bad) (bad) call push xchg daa inc imul dec fisttpl inc push mov (bad) call rolb sbb pop add xchg ficoml adc bound mov sub daa sar (bad) (bad) (bad) decl stos movsb add inc test xor dec cld and push jmp (bad) call inc stos cmp das (bad) popf inc cs outsb mov dec aam jge hlt (bad) (bad) (bad) incl fbstp jg cmp and pop and test adc insb aam decl (bad) pushl cmp xchg pop xchg push mov jnp bound xor add pop (bad) (bad) lcall push xlat inc pop popa in sbb sbb sub outsl fdivr pushl rcrb cwtl mov sbb (bad) sbb mov (bad) lods fistl cli adc repz xchg xchg shlb xchg xlat (bad) jmp xchg cwtl mov pop cmp das mov xor fcmovu mov (bad) mov stos mov aaa mov push cmp lock jecxz push dec hlt dec (bad) ljmp cld mov data16 fcmovbe or sub inc jg test jns cmp clc (bad) mov mov enter ret push (bad) (bad) add outsb lock mov push adc test jp and decl add dec push insl dec jnp aaa pushf push pop cli insb ljmp mov pusha pusha mov push (bad) (bad) ljmp and jmp pop push fwait mov aaa mov and lea fistpl (bad) (bad) pushl xchg (bad) rol scas jmp lea push imul idivb into (bad) (bad) jg cwtl push jo push or test jmp (bad) and or push repnz das icebp (bad) incl (bad) ret inc push dec inc mov sub and pop movsb outsb int sub (bad) (bad) jmp out sbb xor mov mov shll sub (bad) (bad) jmp adc or cmpl insb sbb jnp push pop ret xchg add outsb test (bad) call (bad) fs (bad) repz mov cmp js out push popf out lahf sub stc mov dec inc jno into mov or pop fwait dec cmp cltd or lret ret jmp stc andl add adc pop aas imul (bad) (bad) (bad) or cs xlat ss pop mov lahf into pop mov pop jle mov pop mull lds cmc lds lock sbb mov jne jge xlat jl (bad) xor leave adc rclb sub cltd (bad) lcall add mov jbe ss or inc daa sub lret jnp inc mov lds imul and aaa mov (bad) (bad) (bad) in icebp mov fildll aas push (bad) mov lds mov js push scas sbb dec jae (bad) (bad) (bad) fildll cmp xor lret push pusha push pop stc add cwtl xor jmp sub pop in jl in mov cli shld jbe ds out jp adc (bad) jg xchg lds adc and call sub mov pop ljmp or scas clc mov xor dec outsl (bad) leave enter xchg repz xchg dec popf mov decl ds gs dec addl mov (bad) decl insl pop xor fst shlb or shr sarl test inc add cwtl mov dec mov or (bad) (bad) jmp mov das enter xchg lods jge das mov aam lds or push dec jp pop mov imul cmc icebp mov enter (bad) (bad) (bad) jmp out xchg daa jp xor inc pop mov je (bad) jl mov (bad) aaa mov icebp or (bad) call arpl pop jbe dec test push test adc mov lcall fwait lods push cmp or out cmp (bad) aam leave repnz rorl ds jmp (bad) (bad) cld cli push cmpsb or out adc fcompl mov (bad) push (bad) jg xchg rolb push push mov mov inc xchg cmpsb xor inc dec (bad) dec aam mov (bad) push (bad) or sub (bad) cld mov dec ds xchg (bad) (bad) jne das push cmp (bad) (bad) incl xchg mov mov and ret dec outsb lcall jecxz ljmp mov daa push xchg popa cmp scas xor sub (bad) ja inc jg push mov cmp xchg mov out and cwtl (bad) (bad) jg mov xor xchg mov inc cs test adc (bad) jmp pop out lret negb imul pop mov ds sbb (bad) decl lcall lock fcomps jo in sub mov pop jno stos dec popa mov (bad) (bad) incl mov in mov cmpsl pop ret adc and ds dec and mov (bad) cmp jg repz add mov xor aaa rcrb lock ljmp xchg mov jae mov or sub xorl outsl adc pop sub add sbb sbb (bad) ljmp scas adc andl cmc sub or and add push sbb loop (bad) mov mov cli mov cmp mov sar std decl in cmpsl lcall cltd xchg and dec and mov mov movsl sub stos or mov add or (bad) (bad) (bad) incl sub or mov mov aaa fs jl mov inc xor sbb shr lcall sub rcll shlb fwait push mov iret (bad) ljmp insl or fdivl mov xchg jbe rorb jecxz cmpsb adc (bad) mov repnz or push mov mov jge scas into xchg mov call call clc add fimull mov cmc out into inc pusha (bad) movsl dec rcrl out mov dec mov (bad) xor (bad) lcall int mov es sahf bound je xchg add push movsl sbb jp and mov jl outsl cmp adc ja (bad) jg outsl jb cwtl push xchg scas mov jmp inc or jg dec xchg dec lods cmc inc push mov je std (bad) incl xor fimull jmp and pop or leave aad jo dec clc cld icebp (bad) (bad) inc add adc sarb scas inc mov ss cmpsb cmpsl push (bad) (bad) lods into or pusha stos (bad) (bad) (bad) mov (bad) ljmp mov push fnstsw xlat pop inc add cmc nop (bad) (bad) jg iret movsl push test test xchg cmp inc scas cmpsl popa stc inc jl imul (bad) mov (bad) pushl inc jne dec push mov sub mov and cwtl and dec jae leave cmpsl pop mov mov pop iret popa mov (bad) pop ficomp xor jbe ds cmovno add cmpl (bad) sbb dec sub ljmp cmc clc or scas stos pop sub subl push push or sub jno (bad) decl push in and lret dec inc mov jae scas push pop test das mov xor fstpl fild inc and rclb inc jecxz push jecxz (bad) sbb (bad) fucomip inc mov nop scas xchg sbb cmp jnp shll (bad) (bad) cmp xchg sub pop inc xor mov mov lock (bad) mov add je jmp icebp popf push sti std ret shlb sbbl scas pushf jo imul mov mov (bad) mov push mov mov push pushf mov sbb aaa xchg add jo fnop call or sbb aas lar sti or idivb and pop clc call add fisttpll or add jb decl cmp aam mov mov adc lret inc inc sahf inc sub inc bound mov je sub xchg (bad) pop ljmp cld test jge push mov cli xchg xor test (bad) decl ret jecxz dec xor jnp push jae roll repz inc rorl xor movb mov push aas or pop lcall fcmovne aaa cli (bad) lcall cmpsl push das test xor lods dec insb out stos ss fidiv (bad) (bad) ljmp xchg mov rcll outsl stos leave sub dec sahf mov xchg xchg mov das hlt (bad) cmp jl jl and cmc adc adc jecxz push cld (bad) (bad) ljmp imul sarl push jb lret mov push add dec cli dec das push jb lret aad test jl and es (bad) (bad) lcall imul xor inc inc sbb inc and call mov es adc jg or push jne pushf adcl mov add aas (bad) jb (bad) ljmp cmc fs mov es test push mov icebp fsubl aaa clc jmp adc or fwait sub fisubl (bad) lock test lret cmp pop incl stos mov jl push dec inc test scas or incl (bad) call jle lds push xor fidivrl jecxz arpl pop adc ljmp std ljmp addr16 fcomp (bad) or fs ljmp push dec fwait and (bad) (bad) incl clc or dec inc push test stos iret mov pop xor aam push rclb bound sub call aam cmp scas push loop sub std mov aas aas adc lahf subb addl mov adc lcall (bad) jns inc mov xchg jecxz (bad) (bad) in les gs aam orl sbb sbb cmp in xor popa leave xor cltd push adc je push test jg push decl sub popf mov dec inc in (bad) (bad) ljmp sahf cmpsl and test jnp stos mov adc popa in sub and fldt xor adc shlb pop cmp cwtl ficomp das icebp mov movsl push insb push or xlat and mov mov add (bad) (bad) jg cmp add das dec cmp mov loope call lcall nop lock fild (bad) es pop test bound pop (bad) (bad) jg insb mov notl jo aas dec push pop adc add xor rcll sub pop std (bad) mov fld in cwtl sub cwtl adc mov dec or out lcall movsl cmc and pop push scas mov mov fsubrs jg (bad) (bad) jp inc push push inc sahf jle jmp sarb imul mov lcall xchg fwait sub push add ret inc je lea xor fistl xor repnz lret repz (bad) (bad) mov (bad) jb jns adc bound xchg pop xor or mov lret sub xlat cmpsb (bad) (bad) (bad) rclb hlt push add scas lea xor pop push stos dec mov lock jns (bad) (bad) (bad) cmp js jp pushf mov jnp lods push mov add mov test scas adc in dec insb jp xchg pop dec pop sbbb ret in push xorb sbb mov mov jmp xor das cmc call inc mov xor cmpsl ja in fbld (bad) ljmp jb lds (bad) lret iret imul ljmp imul aad clc pop in cli int3 mov lods les (bad) mov pop mov jle stos mov push add adc (bad) mov adcb pop adc cs (bad) xor cld xchg sarb cs mov jmp xor dec xor (bad) add or or cli das cld (bad) (bad) mov sub popf rcl cmpl repnz xchg jb mov sar call xor jno mov dec dec insl mov (bad) (bad) mov inc inc mov lcall sub sbb inc add stos pusha icebp outsb nop jg (bad) call dec add outsb pop jb test inc lods stos sahf inc inc je hlt mov or add xor ljmp push aam loop push jmp mov shl xchg ret mov jae clc add mov inc xchg dec adc and or or repz mov pop lfs popa mov or scas sub es add (bad) cld cmpsb adc pop xchg mov (bad) (bad) (bad) lcall push nop pushf push jmp pushf cwtl (bad) arpl cli or push movsl (bad) out xor mov push lods call (bad) rcl fcomps push arpl xchg jno xor icebp fnop incl add xor xor out je mov daa enter dec das xchg or mov mov dec (bad) test sub popf sub movsl (bad) into inc out push test push mov pop push (bad) incl push add sub lods xchg xchg ret sub cmp mov test dec cmpsb inc ret stos cmp out jb mov (bad) (bad) decl ds xchg push lock dec lock addb adc sub call in lret (bad) xchg jl test repz (bad) aad outsb push (bad) lcall std std fsub mov jnp inc or movsb xchg inc dec xor and lds (bad) mov add clc lret add fsubrs pop lds (bad) (bad) (bad) call jbe mov in pop sub pop pop mov ret xor mov jmp pop pushf cmp imul and sarb lods (bad) cltd pop sbb stos sub loop (bad) mov push mov bound mov xchg lcall (bad) mov mov nop movsl cmp jmp sbb (bad) jmp jo mov movsb clc ret inc pop xchg add fbld jp es popf nop sbbl inc jns jne loop push cmpsb push cmpl cmp mov (bad) (bad) jmp jne inc insl lcall je lea or mov outsl mov pusha jb xchg xchg mov mov int3 bound sub sbb call fs jge das cmpsb cmp icebp stos mov out mov icebp call movsl out adc mov sub cmpsl push aaa out sbb mov call pop test push sti arpl and outsl and xor xchg dec outsl sub cli (bad) incl test xchg push pop ret fnsave xor mov fldt inc cmpsl (bad) or pop insb (bad) dec loope test clc cld jecxz js mov jns test (bad) (bad) call stos jge jp xor (bad) div std mov xchg jo xchg fcmovu push ficoml adc (bad) (bad) (bad) fimull out repz fdivp dec js orl cltd xchg mov mov jg (bad) fcomip add jb jb adc adc xor lea xchg jnp mov imul das hlt jb lods (bad) movsl (bad) (bad) xchg cmp lods mov push push loop sub jl push iret jmp push les inc pop lret push sub negb aam push sub call int fwait js aam xchg dec imul (bad) les dec add ja push push out ficomp jns call andb je sub pusha fist mov lahf mov jmp push jno fst fcoms mov push dec out movsl (bad) (bad) (bad) (bad) in fldenv sub movb push lock movl fnstcw (bad) (bad) (bad) (bad) jg push stos xor or jle inc scas push adc loopne fmuls icebp rcrl jbe cld (bad) pushl hlt aaa mov movsb adc xlat sarl nop mov imul data16 lcall cld ljmp popa leave (bad) imul push sahf outsl out pop shrb stos (bad) (bad) (bad) (bad) mov ret jp imul cltd jle push or or xchg mov int3 stc dec jecxz (bad) (bad) dec jae test das outsb xor insb mov shrl (bad) enter ret xor xchg leave adc ret decl cli or pop inc cltd rorl mov pusha push (bad) (bad) (bad) ljmp add xchg insb fldl repnz inc mov ret mov aas rorl cmp test ljmp inc lret in pop hlt mov jp dec (bad) pop jp int loopne push and cmp adc dec and cmp std mov test mov sbb out cmp (bad) jmp (bad) loop cmp sahf fwait out lea pop aam ljmp adc sbb push outsb sarl sarb leave decw sti adc testl sahf xchg add push pop jb popw data16 lahf icebp sub xor mov (bad) inc inc jecxz xchg jns ret das sti or int3 sbbb das jl nop sub in and jae pop xor add sbb sbb sbb andl iret inc imul rcrl dec jp mov and fldl xor inc sbb xor in and rorb mov or das adc ret mov jmp pop dec lcall or test (bad) fldt jle lret and loopne mov loopne sub insl mov (bad) pushl pusha dec pop es cmp adc mov call test jmp popa xchg xchg lahf aaa sbb pushl jle add sti fucomp push push xchg push ja cmpsb pop inc push xchg int mov (bad) ficompl subl or fildll cld incl mov arpl scas xlat sub or insb cltd mov das repz (bad) lcall sbb lea adc sbb ja sbb arpl mov pop cli out adcl bound test (bad) in mov into (bad) jg inc push arpl push cmp inc enter add orl push es repnz jae mov (bad) (bad) (bad) cmp stc add push jp xor lea xchg addr16 xor in xlat mov cmp loop add fimul rcr cltd (bad) (bad) call dec fadds pop (bad) insb inc dec xchg mov (bad) mov cld mov pop mov lcall (bad) call push call push or pop or fsubrp (bad) js fisub push add jge pushf pop add cld (bad) lcall ret rcl daa push mov imul dec sar pop std lods (bad) in xchg shlb jle xor mov decl mov sbb out mov jno sbb (bad) mov stos hlt xor aad jnp sub scas dec xor xchg lods lea mov mov mov das icebp outsl icebp fiaddl cmp call push push push (bad) incl outsb xor jecxz mov inc movsl adc inc mov or sarb fdivs push cli dec dec dec push mov mov xor xor (bad) jg jmp dec std adc mov out cmp les out cs (bad) (bad) call (bad) xchg push mov cltd (bad) ds lahf (bad) daa loopne or dec sbb imul adc rcll lods daa jle xor sub push mov add lock fcomi xor in mov jmp pop dec dec mov fild inc jae xlat fisubl inc ret jge stos test addr16 sub rcrl xchg insl jl loopne jb jae push dec mov outsl cmc mov push cmpsb inc cmpsl pop or jns jae mov inc mov mov icebp incl push aad (bad) lcall xchg sub ja jmp lods test push sar and or into insb imul repnz inc jns insb outsl repz lcall out mov add and loopne ljmp or mov hlt out pop (bad) ficom insl dec leave pop jle iret jge xor mov xor daa sahf push test xchg out lahf iret stos xlat aas mov xor incl adc aaa aaa testb cmp aas cmpsl push push ret (bad) incl scas dec fisttpll jmp aaa cmp jb and jmp xchg addr16 stos fidivl sti (bad) (bad) (bad) lcall xchg rcrb pop and cmc repz aad fsubrs cmpsl cmp push (bad) lcall pop movsb fcoml add lods add clc push adc int push push jmp add inc mov adc add data16 in mov mov inc mov incl adc fimul xor (bad) (bad) pushl xchg mov jb mov bound std ds sbb mov inc inc jp sbb xlat sbb pop pop (bad) aaa (bad) cmp xchg jbe xchg sub ljmp (bad) incl inc mov add xchg shl sahf xor pop adc (bad) call aaa ss xchg out jne xor popl jle or pop jge dec xor mov and int jno mov xlat andb test mov pop movsb or enter or je cmp mov pushl lret ret orl sbb je sbb les push (bad) (bad) (bad) (bad) sti mov cmp les push sbb cmp cmpsl cmp je mov decl (bad) mov jnp push in (bad) jbe (bad) (bad) jg push mov rolb (bad) jecxz pusha jge fidivrl push mov test or (bad) (bad) incl and (bad) mov shlb leave mov or mov stos bts pop and ljmp insb cmp jecxz xchg jo movsl loopne pop mov mov push cmpsl dec xchg mov (bad) outsl (bad) fistpll or inc stos das inc or xor pushl ss push fs ror or test mov mov loopne cmp rcrb push pop dec cli loop cld ljmp jmp repz mov lea popa adc ret sbb cmc fistp xchg push lret imul jmp lret push inc xchg xor add (bad) (bad) lcall loopne (bad) sahf out lea test cmp push pop push fstl cmpsl test idiv call (bad) aam inc (bad) inc hlt adc xchg push pop pop movsl out icebp loope and or cwtl (bad) stos (bad) cmp cmp mov cmpsl in incl pushl and inc pop xor mov mov jb dec test ljmp xor mov and fcmovb xchg incl jmp lds jp lock fnstcw cmpl inc stos push sbb leave rcrb cld (bad) (bad) ljmp mov xlat clc inc mov jmp idivb mov mov jecxz mov sti jae dec rorl or (bad) pushl subb into cli cld rorb clc or outsl std (bad) in vpackssdw mov adc out lret jge mov (bad) mov ljmp mov test xchg nop xor (bad) shlb jg (bad) and dec outsl test pop jle dec lret hlt jmp ljmp dec into jmp sub mov xchg mull add inc jle seto and les cmp mov fildl add push mov cld sbb repz std ret jle (bad) mull add lds xor addr16 mov or andb xor fsub (bad) mov xchg test roll pusha sbb mov fmull negb jp xchg imul xlat shl das (bad) mov cmp loope jmp dec jmp add inc mov cmp ret add mov call and push sti rcr iret imul std cmp outsb dec adc add ja pusha cld or sbb push sbbl lods xlat mov bound xchg push (bad) lcall xlat push push (bad) (bad) mov dec lds shll (bad) jle outsb insl stos cmpsl mov aam mov (bad) in popf dec mov mov sar xchg (bad) jmp out cmp or ret (bad) and and xlat test stos jo xor and xlat (bad) (bad) call pusha shrb dec rcrb imul into pop mov mov cmp cmp adc add cmp or (bad) jmp cmp ja adc cmp cmpsb fsts xor (bad) das adcb pop loopne orl ds in adc (bad) (bad) (bad) dec dec ficom mov (bad) cli push and adc repnz pop mov dec testb ja jl lea cmp mov sbb xchg push mov jo leave pop imul pushf (bad) (bad) (bad) incl int3 xchg (bad) aaa sbbb aaa cmp lock test hlt js sar inc dec int xor shl dec push imul xchg inc pop lahf mov jle sbb test js xchg into mov loopne pop push loope sub (bad) (bad) call and mov out pop inc xchg lcall ss inc scas or lods xor lcall push imul xchg or mov jns stos jg bound pop (bad) xchg clc mov cmp mov dec popa aaa xor and test incl and std repnz andl push mov arpl pop cli repz push pop insb pop pop pop push (bad) call mov xchg push lock push or dec popa clc cmp loopne sub mov adc or push lcall insb out daa and (bad) push jno mov lcall test aaa pshufw mov add fmull dec xlat xlat mov arpl inc mov (bad) nop mov adc (bad) fnop xor jmp xor jge loopne ja push repnz and rcrl (bad) (bad) decl add outsl xchg lahf inc push inc pushf mov cmp popf cmp xchg cli (bad) (bad) call cmc sub or push fcmovnb inc hlt push fisttp cs sti dec int3 shrl shrl cmp (bad) (bad) fucomip decl ljmp jmp fdivrs and pop std mov aaa mov cmpsb imul mov pop mov test pop mov mov loope iret sti repz sbb inc (bad) incl (bad) imul scas jb cmpsb shr sub cs sbb insb rolb incl jns cmpsl inc pop lcall sbb and mov inc adc shr rclb mov dec cwtl aaa mov add dec lret (bad) repnz mov sub xor sahf fdivrp test lcall jmp mov mov outsb arpl mov fimull xor xlat xchg xchg addr16 cmp or push fcmovne pusha fcoml xor das push out (bad) (bad) decl cltd orl mov popf ret testl lret jnp outsl push ljmp mov pop xor ret (bad) incl mov scas ret or xlat ret lods ss scas push add xchg jle test push imul push pop ja push lcall mov mov push pushf pop fnstsw jmp icebp push cmp stos add add shrl pusha stos (bad) incl mov dec jns (bad) sbb rcrb mov mov mov mov repz imul sarl mov daa jns and (bad) adc xor fmuls and fmul stc scas jbe (bad) lcall lods or and out (bad) ss (bad) rorl sbb lods shr or inc inc daa jbe data16 jp fisub in imul pop lret jecxz (bad) ljmp in insb fcoml (bad) scas movsl fwait pop popf mov fs lock lcall fstps sbb fstpl adc (bad) lea (bad) (bad) (bad) lcall jo dec jl adc in or dec dec movl in imul (bad) std (bad) (bad) jmp sub jge fcoml dec test mov lret test pop push push add jns sar ljmp xchg cs mov push aaa adc (bad) mov and dec ret daa daa xor mov (bad) call pop pop inc sti scas push nop xor data16 repz push xchg clc or mov decl or push repz inc outsl (bad) (bad) ljmp or sbb mov inc mov pop lock and cmp cmp and icebp adc adc jmp lods xchg imul jo scas fcmovbe orb (bad) (bad) sub sti testb cmp mov movsl daa fldl sbb (bad) (bad) (bad) fnstsw mov enter mov xor cld adc fistp (bad) (bad) ljmp xor mov push stc xor inc jle les pop mov mov xchg pop pop out lret outsb (bad) mov lret out sbb lea sub call mov mov mov adc (bad) ljmp sub mov mov hlt (bad) lret rcl ret (bad) (bad) (bad) pop (bad) mov adc cmp dec outsl dec add pusha sahf das mov sub cmpsb lcall std mov sahf enter (bad) addr16 test mov (bad) (bad) incl mov or hlt xchg ret fdivrp xchg pop decl push jg loop (bad) lcall or inc mov cmc mov jo push cld mov xor cli (bad) fisttp movsb jns xchg inc dec adc leave add push nop cs jg pop popa out js fidiv fdivrs mov loop mov pushl push adc sub stos jecxz jb xchg push pushl mov mov (bad) xor cmp sti decl dec push out sahf mov mov jp adc mov pop jo (bad) aad mov dec or jg aas mov pop lea xchg cld adc out (bad) mov mov mov fdivr ljmp loop sub fstpl leave outsl (bad) stos sub jge jg aaa pop xchg and insl sub sub jb frstor jb outsl lock shll sbb sub cmp mov xchg (bad) in das sbb pop fs mov or (bad) lcall fidivl shrb xchg mov xchg mov outsl movb mov sub mulb adc nop jge and push aas lcall aas xchg fmull repnz adc cmc cmpsl xchg adc iret and icebp aas sbb cmc jecxz sub push jg cltd incl (bad) (bad) mov test inc xchg ror jne es test dec (bad) push fild aam dec ret xchg mov mov add lcall pop test (bad) pushl jle (bad) cmp mov cmc ja add out or mov mov in xor and punpckhwd pop mov lcall shll into mov (bad) rolb psrlw xor xor xlat adc xor sub jl sub dec test (bad) mov or adc lock (bad) decl mov rorb aas inc (bad) ret xor mov (bad) ljmp negb add in stos cmpsl pushf outsb mov scas (bad) lret das hlt (bad) lcall leave sbb push mov xchg fildll pop lret (bad) inc push pushf xor push push int3 (bad) push mov mov cmpsb insb mov insb or push pop xchg (bad) (bad) sbb loopne xchg pop fcompl call sub xchg das and (bad) movsl decb cmp push dec (bad) jae pop pop ds mov ds push pop mov shr scas ljmp scas pop (bad) (bad) (bad) ljmp pushf add xor lds pop mov dec add jg (bad) movsl insl mov hlt (bad) pushl rcrb ds aad popa popf icebp dec ss hlt (bad) rolb ds incl mov fprem cwtl in cwtl in jmp jp adc xor (bad) incl cmp xor adc insb mov movsb outsl jae or in dec pop xchg (bad) (bad) jg lods fwait call dec shl or add xchg mov mov (bad) (bad) jmp sbb adc push repnz or xchg lds gs sbb push loop sar sbb cmpsb lods jmp push int3 cli fs sbb stos mov imul mov (bad) icebp fcmovnu push shrb inc sti jno adc jle aaa pop mov insl pop xor sbb pop mov and lds lods rcrl (bad) mov mov push xchg rcrl cld fsubrl iret pop das jo (bad) (bad) (bad) (bad) jmp cmp (bad) in insl mov jbe mov mov cld orl mov xchg xor pusha cmp mov add cmp add cmpl std and push add pop stos aad cmc xchg into mov mov imul popa movl andb insb or movl (bad) (bad) mov sbb icebp xor ljmp add ror div pop cli lea dec rcl (bad) fisttp jle clc pop or (bad) (bad) incl clc jge sti (bad) idivl das scas pop cmc pop cli lods xor dec mov xor (bad) (bad) lcall insl fiaddl fisubr sub rcll add mov inc xchg pop sbb pushl incb je aas mov xchg test idivb xchg out jb incb (bad) in sti das icebp test adc rcrb adc push outsl add dec pop cld (bad) jg je xchg adc cmc loop xchg jp push ljmp or xchg cli decl inc mov adc mov push jp imul lock call sbb sbbl add pop loopne mov mov les lods jecxz popl mov pushl orl inc movl fistpl enter je pusha sbb je (bad) roll (bad) decl hlt cltd icebp insb outsl hlt sahf xor addl test (bad) (bad) (bad) inc xlat hlt and xchg jne sub std cmp mov insb fs call jg (bad) ljmp testb xor ret movsl stos jle sub outsb std push inc divl dec inc repnz pop or decl lret mov andb xor mov or xchg push mov push pop shrb sub pop rcrb stos sbb mov daa or out inc mov in push mov outsb mov ds mov pop or decl add jmp (bad) jmp (bad) jmp jecxz inc stc fucom mov pop js aaa cli fildll dec xchg lret and mov jbe jmp lea ja cs ret mov (bad) jae daa lock fcomps or ljmp push (bad) das pop lret cmp pop ret das cwtl sub stos ljmp icebp jg hlt jns inc fcomp xchg xchg xlat inc jmp adc stc loop movsl (bad) mov in jl loop data16 mov sahf inc jbe xor (bad) lcall ja mov mov and pop push lcall mov mov mov dec jecxz mov adc lcall ficom and mov test jge jns cli adc popf lods cmc dec dec mov (bad) (bad) lcall mov mov out sti xchg jns aaa push iret or stos mov (bad) ljmp inc icebp mov repnz (bad) cmpsb xor add call pusha stos stos fwait adc jmp jle mov adc inc jae (bad) (bad) (bad) (bad) sub hlt or lock loopne or mov add test sbb (bad) ljmp mov lea mov subl mov enter (bad) incl sbb rcrb mov leave hlt dec popa push pop (bad) pop xchg int3 or das pop push and in pushl dec les aas xor xor and cmp dec mov cmp int3 jb int pop lods ret (bad) jg inc cwtl inc push inc stos sbb xor test jno fisttpl les jl (bad) mov dec cltd jns sub xor (bad) cmp ljmp cld pusha jae push stc jge outsl out into sub inc je sbb push xchg or test imul outsb popa vsubpd mov (bad) hlt mov mov fbld (bad) enter arpl (bad) in adc ja (bad) (bad) jmp ljmp addb mov fimull (bad) call mov fstpl cmpsl jo or push mov sar inc outsb adc sbb cmpsb xchg out add mov enter out loopw dec xchg sub push loop dec cmp push add fs and sar mov stos jl jge push inc aad mov jno add lock pushl test fbld je dec inc jp sar (bad) ljmp mov xor jo test sti arpl fistpll imul cli or cmp cmpsb lds lahf and jne adc mov call sub mov fsubrs add mov fs push dec pop sub xchg imull (bad) push mov repz dec pop int3 mov xor pop ljmp jg aaa (bad) xor push aad dec adc bound mov (bad) ljmp ror cmp cmpsl inc aad push inc (bad) pusha jp push mov pop sbb aaa xchg outsb jns pop cld mov dec stc repnz outsb (bad) hlt (bad) (bad) pushl icebp ds and adc stc mov sub mov inc inc aam cs fmuls sub (bad) (bad) mov pop jmp dec dec push cmc fstpt in sub fimul jo push rcrl mov bound jo ret jnp jmp decl ja (bad) jbe xor cmp cmp (bad) lcall (bad) dec cltd or das sub xchg arpl adc (bad) (bad) ljmp dec sub addr16 jb imul pop dec imul in xchg or cld (bad) (bad) jmp lret stos stos push mov jnp in jge lcall push sar das lock nop jae cmp sti and inc mov jmp mov fnstcw or mov clc mov loope test test out pop mov popa movsb sbb (bad) (bad) (bad) fmuls dec arpl ret add sub xor nop add mov cwtl ljmp cli push cli jno jns mov rorl add (bad) (bad) (bad) mov add xchg sbbl or mov push sbb in lcall decl jl adc xchg cmpsl int (bad) mov jb arpl mov aaa mov and and (bad) lods push daa scas cltd lret (bad) pushl fs and xchg push jmp mov mov pop sub dec call push cld getsec sbb mov pop push cmp loop (bad) dec test pushf cld dec mov sub dec (bad) repnz pushf cmpsb mov pop push adc add sub fs dec jmp sub inc dec jns mov inc lods lods ret das hlt (bad) jns push jl cwtl smsw inc popa lods icebp faddp xor mov fs (bad) (bad) inc nop mov and lods nop mov sbb jecxz and (bad) (bad) (bad) decl leave test call inc xchg dec xor loop test xchg ja dec pop clc mov ficom test lret dec push add call decb add inc sbb testl inc cltd repnz movsl (bad) pop loopne sbb sub shrb push sar aaa push popa dec pop mov (bad) (bad) pushl pop cmp js inc mov or inc xchg sub push pop sub push loopne sub xchg jne imul xchg in mov call icebp dec push loope add mov inc adc xchg call (bad) call inc add orb push inc pop mov leave lret sub sub adc mov xchg addr16 dec add cmpsl cmpsl scas jb adc inc loopne fs stos sub cmp pushl lcall fcoms xchg adc (bad) (bad) jg push jns lods rcrl xchg sbb mov pop mov jecxz (bad) jmp inc mov jmp shrb push movsb ja push push pop loopne pop jnp mov pop sub add movsl or test dec sahf in push mov mov int jg (bad) mov xlat jp mov add jbe cmpsl test jp repnz adc ret mov addr16 fildl movb out out ret pushl sbb stc adc pusha dec iret icebp test sub call je call dec mov adc xlat cmp (bad) div popf in roll js (bad) (bad) (bad) ljmp mov mov (bad) xor insb xchg xlat loopne loope jo pop cwtl pop (bad) enter jg mov icebp fwait pusha ret push mov (bad) adc (bad) (bad) incl cmc (bad) lret dec imul repnz and or jo xor and aas (bad) (bad) ljmp inc mov fnsave mov insl (bad) in fidiv inc mov mov cmp jg push (bad) jle xchg pop scas pop incb xchg mov lcall sub sub sub sarl imul je lock jg pop pusha and insb imul stc and cli xchg pop fmuls loope sti jmp ret pop incl xchg jl popl lods jg pop cli incl mov xchg sub shrb lods dec push xchg push ret push and les pop js dec (bad) dec fsubl sub inc loope adc sbb dec insb lock jnp add cmpsl mov rorb (bad) std dec fsubrl sbb adc in (bad) (bad) mov (bad) mov aas aam xlat aaa fldt xchg aam cltd les popf in (bad) jmp and shlb pop xchg loope mov not mov mov test adc add jne stos aas ret (bad) or pushf (bad) mov jecxz neg icebp or xchg push pop cmp inc pop xor data16 cwtl add pop mov xor push dec cld jg xlat std lods push adc enter je pop test sarb insl mov in mov out and mov inc jecxz push or (bad) lcall pop popf ds add pop lds repnz (bad) aad pop dec jecxz jp (bad) (bad) in rsm daa (bad) lods sub insl inc jmp mov jecxz mov nop (bad) (bad) pushl adc sub popf adc lret adc es in mov (bad) (bad) jmp mov in and aaa jecxz outsl cmovp leave clc sbb (bad) push mov enter call das out jp pop int3 xchg pop jl imul (bad) xor sahf scas xor out rcrb fsubl sbb stc or inc jno push mov (bad) incl sbb popa cmc push (bad) jmp mov in mov mov sbb jecxz lahf (bad) cmp pop mov adc (bad) (bad) (bad) call rcrb cs adc pop je aam outsl adc popa lea xor inc mov aam (bad) mov jmp cmpl inc lock icebp mov (bad) (bad) call fcomp pop jns push jbe loopne pusha lret cmp jmp mov fwait (bad) (bad) (bad) decl das mov inc ja add lret push (bad) loop cmp stos rclb pop clc sarb mov push push test pushf aaa idivb dec andl mov dec sbb repz mov stc xchg je aaa push lods pop repz loop test jg (bad) jmp js pop ret mov push out xchg cwtl ss xchg sub (bad) lcall ret mov arpl jb movsb sarb inc ja mov dec dec scas out xlat fisub and push aaa cli xchg call inc and jge mov lcall mov mov add (bad) (bad) lcall test mov nop loop clc pop add jae jge sbb aad mov and mov (bad) jmp xor lock fst out push stos pop push push push jle jecxz adc faddl fld push or popa dec (bad) (bad) ss jg movsb adc sbb xlat out fcomps fist aaa pop loop movsl inc or cmp nop cltd rclb (bad) (bad) (bad) jmp mov adc pop xchg push shrl clc xchg inc push cmc cmp cmc jg test (bad) xor lret addr16 push push cmc jmp jmp (bad) out notl pop adc (bad) (bad) (bad) incl (bad) or mov mov jl or sahf xor sbb xchg aad inc jmp add lock sar fbld mov jecxz ret repnz fbld push inc in pop and add cmpl js mov jecxz sti (bad) pushl xchg popa mov testl hlt inc adc cmpsb pop xor outsl pop (bad) (bad) (bad) cld idivl and addr16 dec outsb lock in push insl das loop cmc decl sbb add les insb shr dec jae (bad) (bad) fildll mov sub lea jno dec pop js outsl into cwtl jg (bad) (bad) jp dec std out xchg into repnz jge mov enter das push mov (bad) lcall adc ljmp xchg out pop clc shr loope sub sub (bad) (bad) incl insb xchg cmp adc in fs xchg test sub push jo add es mov adc (bad) (bad) (bad) cmp xchg sbb cwtl pop addr16 call push rclb push sbb in sbb cs (bad) incl fwait jle push dec les enter cmpsb adc arpl or pop inc in (bad) arpl jg dec (bad) xchg nop enter loopne jo rcrl test pop and dec lcall inc movsl out pushf or mov push faddl jmp incl and mov pushf sbb mov aaa sti xchg pop fidivl jle push pop inc repnz push jmp push clc (bad) jg sub sbb outsl pop jl,pt push popa lahf mul ret pop jns jnp jmp fbstp fcmovu jl xor xor sbb fdivr (bad) (bad) lcall mov and dec or mov cmp jnp or pop cld xchg dec icebp xchg sarb ds pop or in sbb sub push dec pop push in test js rol jnp xchg dec dec cwtl test in jp (bad) (bad) repz mov stos (bad) leave divb js xor xchg mov lcall std fbstp mov pop push movsb insb sub mov cmc jno call (bad) lea or imul out movsl ret and mov rcl inc cwtl sbb aas (bad) mov adc pop pusha pushl push add out out fisttp call clc add push fisttp nop inc inc lret rcll inc (bad) (bad) call mov jmp ret fimul adc pop push adc inc fbld inc cmc int and sub push popf cmp pop (bad) (bad) (bad) decl add xor mov xor (bad) cmpsl fmuls (bad) (bad) fiaddl jmp push xchg inc fcomps (bad) (bad) lcall stos jecxz jb jl pushf sbb fwait mov ficom jo push mov aam mov mov cmpsb or (bad) incl adc sti inc dec lods mov jmp mov hlt into fcos outsl (bad) jmp pop negl xor fwait dec sub add out cli lods add cmp adc roll mov xlat jecxz cmp pop int3 loop mov jmp mov jo and adc (bad) (bad) (bad) (bad) cmp mov sub xor test ficompl push enter imul xlat sub (bad) sub sub and sbb popa xchg leave jbe cmp das das sbb (bad) incl lret jnp adc daa (bad) rclb mov and adc enter outsl icebp decl into (bad) aaa test pop les ljmp sahf (bad) lcall pop xchg movsl lock pop jns movsl stos ret pop loopne mov and aaa imul jmp out int3 jno ljmp lods mov lods (bad) aaa cld call subl lcall insb lods mov sub lret mov loope popa push and movsb stos ss ljmp jmp pop add ret dec cmp std ljmp mov dec pop subl mov xor or ljmp nop ljmp loopne test jg ja mov xor hlt cmpsb int scas dec fldl hlt lret aas cmpsb xor dec mov (bad) (bad) (bad) lcall in mov dec subl xchg jb mov cmpsl pop mov (bad) ljmp aad into lds push jb lock and aad mov in lock (bad) mov orb xchg movsl xchg or jnp xchg inc pop sub (bad) (bad) inc push sbb addl adc jle or stc mov add sar (bad) (bad) mov insl shll mov adc insb aas cs lods (bad) decl mov mov popa loopne aad dec loope outsl cli jle aaa std mov mov jg push sbb mov fmull push and (bad) mov cmp sbb push rolb aam adc or decb call or cmp data16 daa push pop (bad) jae inc hlt cmc nop push mov test insb flds (bad) popf adc pop mov cmpsl outsl xchg decl std call ja js gs shrb sti gs test out push fnop ljmp inc lock or repnz (bad) jg lcall or inc cld fs jecxz mov push ror loop lock (bad) (bad) (bad) jmp ret fstl leave jmp jge hlt shld mov mov cmp fsub or dec jnp (bad) ljmp addr16 nop add fcmovnu sbb inc or (bad) (bad) jmp lahf push cwtl or ljmp fmuls adc push and std push jnp pop loopne push pop je loope push add cmp jmp fcmovne jmp pop cmp ficomp sub cmp xsaveopt (bad) stc std add (bad) (bad) (bad) out das push add jns adc dec add pop pop icebp scas orb (bad) jbe pop mov push fcompl cmp notl sahf mov lea (bad) cmp cwtl and sahf push into jg jg lock pop out out incb ret stos loopne pop ja (bad) (bad) mov (bad) mov jmp repz jne inc movsl xchg or pop loopne pop fstpl jae (bad) (bad) dec and mov (bad) bound hlt in add stc aad shrl cmc (bad) (bad) mov popf cmpl cmp mov cmpsl clc adc (bad) jg pop sub aas std test test mov add (bad) mov pop mov in sbb fdivl ret (bad) jbe in cli aaa clc aam push ss jmp fbstp (bad) es (bad) mov mov (bad) (bad) jo mov pop pop push mov mov jg mov add cmp ds lret bound ljmp call push inc dec mov mov insl shrl add stc cwtl cmpsb stos or packssdw leave (bad) fucomip ljmp (bad) icebp dec sbb fbstp mov mov ret jmp clc imul sbb (bad) call popf inc stc add (bad) or mov xchg imul call out stos test xor xor ljmp icebp or pop add add sub pop xor add and aad mov arpl enter (bad) decl std pop das inc out imul shrl js js push call test mov add orl (bad) (bad) lcall xor pop mov mov faddl jmp lret mov fsub push inc inc push outsl rorb (bad) jbe inc pusha mov clc push stos in cmpsb pop cmp enter xchg sbb push das std (bad) fldt add add fcompl mov out pusha jle test push mov mov test xchg and pop (bad) js sar cwtl push clc (bad) call fistl mov push ja outsb add in push lock insl out fnstenv decl pop sbbl ss mov cmp adc jne xor call adc cmpsb insb inc dec mov jle loopne decl mov push or pop fcoml aas inc lcall adc bnd ss gs sbb mov cli (bad) jmp cmp mov push imul add add stos push mov jg inc andl fistpl cmpl fild (bad) (bad) ljmp mov arpl sbb cmp movsl mov sbb lcall push push (bad) (bad) decl daa pop pop and push cmp xor (bad) aaa clc pushl mov ds mov add dec stos repz inc loop pop js enter aam mov or inc sti or xchg (bad) push pop or clc dec test jno mov call loope mov cmpsb add xchg mov dec aaa sub ljmp sub xor cli adc sbb ljmp loop mov dec mov cmp je sahf xchg mov (bad) (bad) pop into aas xlat lahf lock add shll arpl ljmp lret imul jle fldt jle enter in mov cld ret scas pop cli (bad) jg decl xchg push sbb sub inc loopne in aas add insb daa sbb incl lcall jge aas punpckhbw arpl and adc std xchg decb out push outsb insl insb int decb pop push pop mov loop sar jb lcall jl pop jae (bad) iret dec scas adc (bad) jg lods jb je or pop xor js in pop dec mov cwtl (bad) (bad) (bad) (bad) std or jb loop ror outsb daa rcl or out iret icebp sbb cmp pushf rclb (bad) cld es (bad) call jle outsl push cld iret clc jmp (bad) das lock popa xor xor and pop push inc stc jmp pushf xchg push xchg cli decl push repnz (bad) lahf (bad) (bad) and mov mov adc add icebp dec add (bad) das cld pop mov loopne add fucom jle out push jo cmpl icebp (bad) fild or pop pop in inc or pop fsubrl insl ret incb ja mov or cmpsl std pop (bad) decl out jae lret pop push or jnp imulb adc lret loopne subl add sbb push fmull repnz dec ljmp cmc add pop jo idivl mov out lret lahf pop jl das jo sbb or ljmp insb push cmp adc cli stos call (bad) pop cmp dec out ljmp call dec mov scas mov ficom loop fwait (bad) (bad) (bad) jmp and pop mov aam pop cli rorb scas pop jmp popf in ljmp dec pop xchg jnp fidivl sbb sahf mov mov shr out loop cmp lcall aaa xchg xchg mov sub ficomp stos jbe (bad) (bad) jg sub sbb lds xchg pop lock into fcomps data16 (bad) call xor lds jp gs adc sub pop (bad) ljmp adc js sub imul iret xor (bad) mov cwtl ja push pop cli js aaa push push scas int3 data16 xchg xor add (bad) pushl sub mov test cld xchg pop loopne iret std sub mov jae clc mov loope add (bad) ret pop (bad) (bad) (bad) pushl sub mov sbb outsl fcmovb aas repz xchg inc incl xchg call jl mov sarb mov std or mov add jl or lret add xor (bad) sti decl xchg sub arpl decl mov aas jmp decb cmp js sbb std (bad) (bad) ds clc iret les mov ja sub std cmp (bad) jg mov clc rorl ds mov lahf (bad) in (bad) (bad) decl (bad) in sti aad inc pop jnp xlat dec cld out dec ds mov jg outsl lock jge mov mov xchg lcall imul cli sbb sub (bad) mov fistpll (bad) (bad) (bad) mov cli sar pop mov clc shr xor clc das insl lahf jl pop sti pop aas incl idiv jmp pop ja std sti mov popf mov pop stc cmovg incl clc roll (bad) (bad) jmp jmp sub lcall fnop (bad) decl inc dec add xor loope mov aad sti dec test aaa inc lcall dec mov push push adc mov inc addr16 pushf (bad) mov sub cs repnz rorl movsl and hlt pop push js rorl mov sub ss jp shrl mov xchg shll mov cmc arpl (bad) incl outsb cmp and pushf add mov imul (bad) mov inc test pop fs or sub add (bad) lcall and hlt jecxz lret int out (bad) cmpsl faddl push push (bad) call xchg mov xor cmp rclb pop das pop xor lcall mov xor inc inc aam add cs outsl cs call ljmp sub pop inc cmp les int mov ror mov jg pop call divl out mov cmp (bad) (bad) (bad) jg cltd xchg mov mov (bad) repnz add jle test push test sub inc dec push pop repz jle mov (bad) jg loopne or push lds iret adc and aam ja (bad) (bad) (bad) fcmovne xor insb fsubp sub or adc lcall mov or out outsl cmc pushl test dec xchg or push int3 pop pop test push pop dec call jne pop and (bad) mov mov mov lahf mov (bad) jno imul ljmp cld mov (bad) mov out data16 leave mov (bad) (bad) call add dec aaa outsb sub pop push pop pop push push push iret cmc out inc flds mov shll (bad) mov cwtl loope int sub call adc jge jle (bad) jle loopne xchg pop outsb ja sub or call xchg pop push cmp mov jge push pop lcall std ljmp push fidivr pop xor xor sbbb xorl adc stc mov popa mov cmp mov adc pop pop ds faddl lret int bound pop push mov or jp movsl fadd std movsl mov cmp outsb into adc sub aaa aad lcall std mov xchg mov mov notb or or ret ljmp adc or clc mov int lds pop jo loope (bad) movsl (bad) sub and cs mov cmp popa inc enter and xor xor mov sub and mov cld or cli nop hlt fbld jg ds shrl and out adc (bad) jae addb fiaddl mov lods mov add add popa push sub call fwait pop lds test and jp pop or xor fs push scas outsl mov xlat popl inc sub inc push ljmp (bad) popa lcall jecxz cmp rcl mov sbbl cwtl inc pusha es add pusha xchg or jp push ret jle lock (bad) cmc cmp mov adc and addr16 push jns ficom cmp insb nop lock lock xchg cld loop test push inc add (bad) pushl mov mov lds mov xor pop cmpsb mov call xchg or pushl pop or je cs sarb movsl stc hlt stos pop sbb dec (bad) ljmp mov jp pop std fwait daa or aas je mov pop scas std idiv icebp (bad) (bad) incl rcrl push and sbb outsb sbb sarl outsl bound fildll (bad) mov stc inc xchg ljmp jno (bad) mov nop insl repz mov xchg or cld jecxz repnz push (bad) (bad) cmp jl stc mov xchg pop (bad) jno es mov xchg rep and mov pop sub cmc outsl jne sbb (bad) (bad) xor clc fcomi inc ret (bad) (bad) lcall xchg cmp mov mov dec out xchg (bad) decl rorb push mov call sub (bad) (bad) ljmp adc cmp sub adc and cwtl stc or pop xchg lcall hlt or ljmp lret aaa outsl xchg cmp cld mov mov sbb ret jge pushf xor or (bad) (bad) (bad) jg hlt adc cmp push cmp inc cli sub cmp (bad) xor minps (bad) (bad) (bad) in sbb sbb jbe popa sub (bad) xchg fs pxor ret int3 popa push pop in lret into (bad) (bad) fucomip lcall loope fstpl (bad) cmc outsb cmpsl fisubr xor out icebp (bad) jg movsl inc loop stos add lock ss mov fisttpl das std ljmp and icebp jmp cmp jge jp or (bad) sbb js dec push fcomps adc jo jmp les pop adc pushf jl lcall (bad) lcall fcmovbe ljmp pop add push add or dec movsl inc jl stos (bad) (bad) (bad) incl lods xor in mov push rcr mov or daa (bad) idivb (bad) (bad) jmp mov pop mov push and pop pop xchg ljmp in mov cmp (bad) call les cmp push dec add adc dec addr16 (bad) (bad) dec push mov stos int mov mov mov (bad) add test or (bad) (bad) sti mov sbb add (bad) (bad) out pusha and pushl adc dec dec data16 mov call aad sub std (bad) jg add mov cmpsb add xlat and sbb sub cwtl pop xchg dec sub rol add cmp push pop sbb (bad) sarb mov (bad) jg jne pop cltd mov pusha pop imul pop pusha inc xor js into mov xchg je shrb (bad) loop hlt lcall cmp imul xchg pop addr16 or popa imul fistpll or rolb pop movsb jb jbe (bad) (bad) (bad) cld cmpsb xor rorb std dec jns lds rcll jne (bad) (bad) (bad) (bad) mov out adc mov and repnz adc aaa (bad) mov mov (bad) cld mov xchg jmp in jge ljmp inc (bad) jg decl adc push nop clc lret jle mov dec ret push dec inc jg push pop call rcll stos xor arpl ds xchg repnz push out gs out mov lcall cmpsl popf adc dec cld push (bad) aas sbbl push repz inc leave into push (bad) incl xor call mov test out xchg (bad) cmp das stos mov lret ss push lret pop ljmp sti aas fidivrl shll clc pushl mov clc ja mov mov push xchg (bad) decl popl call leave inc mov xchg fsqrt jno std call fstpt mov sub jecxz push out pop cld pop pop das std outsl (bad) dec out mov lcall xor ljmp call in (bad) mov jecxz sub psrlq out mov mov (bad) fist ja (bad) aad push dec xchg outsl jecxz loope nop popa dec dec std (bad) push and push lret sbb xchg aaa inc sub movsb movsl lea aaa jecxz pop incb aam jns stos push ja gs stos dec int (bad) decl fisubrl aad aaa rcll push aas mov (bad) xlat jo shl stos stos std outsl cmc xor pop mov cmc loopne cld (bad) (bad) lcall das mov ds jle movsl pop (bad) lock lret incl (bad) or fcos mov jge movsb jge in inc add xor cmpsb cmc sbbl jecxz (bad) mov sub or jg pmulhw dec nop stc ds xor jmp cli (bad) call sub jnp mov mov mov test jo sbb mov popf jne push (bad) mov sbb push pop add loopne enter sbb push lahf (bad) (bad) (bad) incl outsb push mov loop cld int3 adc or adcb xor mov sarl (bad) cmp xchg gs or ficoml mov (bad) sar outsl lock fdivrs scas dec jnp xor outsl cli pop pop mov sarl xchg mov loopne outsl lahf mov push adc fdivl add pop std (bad) pushl push movl xor push notb (bad) (bad) (bad) (bad) jg xchg pop pop call cltd or push das arpl outsl mov cmp in add jno (bad) (bad) mov into sahf or pop jle rcll ja aad push mov loopne cld bound out call sti sar arpl stos lahf cmc or mov cld aaa nop push sbb cltd cmp jle int3 inc jle pushl add stos leave sti (bad) jno lds lea push ror jnp (bad) fucomip sub insl (bad) or (bad) lods ljmp (bad) (bad) (bad) jg inc mov lret hlt mov lock test lahf jo ret fnstsw lods or lock daa or test data16 jnp fnstsw fbld imul mov push mov bound (bad) (bad) cmp mov pushf repz pushf (bad) pushf cltd repz int3 icebp outsl cmc pushl and mov and cmp jno loop and fucomip mov adc out sahf pop aas notl jb mov xchg mov (bad) jmp rcrb repz cmp insl push arpl jecxz (bad) incl arpl cs lods pop pop (bad) cmp in sub call jg pop pop enter cld mov adc lcall std inc cvttps2pi rcll cltd add xchg mov loope (bad) (bad) (bad) inc test mov cmp (bad) fdecstp fldz fsts jg adc jmp iret int3 (bad) fs in test lcall rclb divl int3 pop push pop mulb mov inc mov jnp pop ljmp (bad) outsl sub push ds (bad) call negl inc ret add xchg adc mov push adc jecxz or mov movsb cmpsb sbb ljmp mov mov pop (bad) dec xor add jae fbstp (bad) fnstsw push out pop icebp mov pop jl mov test or cmp mov xchg add cmpsb pushf sub mov xchg xor aaa lret pop in pop pop lret ljmp psubusw adc dec dec xor aam jne mov loop inc cmp mov lcall popf mov shl jp fisub mov (bad) movnti pop call xchg popa add loope or decl test (bad) jns add push xchg pusha aas pushf test es imul sbb pop ljmp pop adc ret clc fldenv or (bad) ljmp ss add adc mov in inc mov sbb pop (bad) incl incl es mov xor mov es add call push jle xchg loopne js (bad) sbb hlt rcll xchg lods and (bad) mov adc cli xor inc daa sarl jle ret sub push fstpl test ljmp pop aas xchg roll lret ds jp adc jbe sub aaa cli inc rolb adc mov les (bad) (bad) clc inc aam push andl data16 push sub aam (bad) (bad) (bad) mov fimul and mov cmc ja jnp pop xchg xor or cmp out push insl push (bad) into testb std add mov (bad) (bad) fdivrp sarl ljmp inc adc mov out or cmp (bad) jg sub fistpl jge stos inc push push add loope js fimul (bad) jge or subl movsb cmp arpl jmp or pop xchg sbb (bad) jg xor sub adc or pop dec adc bound in movsl (bad) (bad) (bad) incl cmc xchg pop scas lret mov push sbb mull int3 xchg mov push hlt pop call push icebp out ror or into rcll pop cli imulb mov push (bad) add pop popa pop (bad) mov ss (bad) aam jne push cmp lret ljmp xor shlb hlt mov dec cmpsl push lods mov push sbb (bad) (bad) (bad) jg sub jge flds or mul test loope stc push sahf int fnstsw jmp mov jns (bad) div mov idiv (bad) (bad) incl mov ret mov mov pop sub inc test mov pop inc movsb sti ret cld insb jg aas lret aas loop repnz clc and or aaa cli (bad) fcmovnbe push jo xchg (bad) ss adc and mov insb je in sub (bad) incl pop cmp pop sbb or xchg sbb or mov outsl sbb mov (bad) push xchg fistpl pushl gs pop test (bad) (bad) (bad) ljmp or mov lcall xchg sub push cs lret jg (bad) call xchg push fcmovnbe jne,pt std cmpsb lcall jnp jmp and sahf xchg sub cmp je imul test (bad) decl jl sub lea pop jl test mov std sub cmp mov (bad) cmpsl mov jno mov lcall (bad) jecxz js and cmp inc ret (bad) call and sub jbe faddl imul sbb icebp dec psubd popf dec aas mov jbe (bad) (bad) call nop int push insb aaa mov mov test movl dec out idivb mov cmp fmull and mov xor push cmp sarb fisttpll sarl xchg les inc pop mov pop sub (bad) xchg jns dec in cmp int3 cmc adc (bad) (bad) (bad) jg cmp dec es and jmp jae int3 xchg add add addr16 call xchg mov pop mov shr arpl pop jge xlat push or jne pop sbb cli stos outsb aam or (bad) (bad) incl inc mov xchg or inc adc ja dec inc push and inc push mov idiv test xor xchg jo mov aam adc (bad) (bad) ljmp push sub aad cltd or fsubs xor in pop mov idiv xor test mov mov lods add scas (bad) sqrtps cmp js in push punpckhbw sbb xchg and test jmp fidivrl fidivrl inc (bad) mov cmp push xchg jne cmp push imul sub imul and or mov loope xchg mov (bad) daa cwtl std (bad) mov test sbb (bad) mov ror aas out cli cmp cmpsb fldl mov out negl ja jae leave leave cli (bad) (bad) ljmp xchg sbb out add and push hlt (bad) out rcl lcall mov je aam (bad) (bad) (bad) decl and inc jno mov (bad) dec rcl mov mov scas lds push jp mov out cmpsb cmpsl addr16 cwtl pop icebp add pop call dec mov lahf mov push xor sub sbb ljmp jge add cwtl jne nop mov fisttp sub mov (bad) push (bad) jg jbe in inc fildll xchg cmp loopne rcrl jl icebp mov xchg adc jnp mov popa cli add outsl cmc das (bad) push xchg jno cld push ret rol or xor (bad) fcoms (bad) call adc push imul rorl push hlt mov adc aas adc (bad) pushl pop dec and ret movsl mov xchg fistpl push (bad) incl repz leave aam stc adc roll adc cmpsl js (bad) lcall jg test int jo cmp out (bad) and (bad) decl jno sbb or aaa jb lods fimull ss jbe movsl sbb add xchg cli (bad) (bad) in xor jnp cmp (bad) scas insl jp lods inc jno xchg mov std pop loop flds xchg js inc jge in push test mov xor lods cli mov lret out xchg (bad) out adc fucom call cwtl repnz pop rorl inc (bad) (bad) incl pop xlat cmc add cmp push or (bad) iret mov ljmp mov test (bad) jg add out adc cs push mov push inc lcall loop nop inc jl (bad) (bad) mov int3 cmpl js (bad) fisttp es in mov ss pusha fnstsw mov adc (bad) (bad) incl ret or cmc insl cmc pop mov outsl mov fildl lods mov sub or ljmp inc aam mov les test jp into mov (bad) (bad) (bad) fldl push int3 inc xlat bound and (bad) call popf mov out sub mov cmc sbb (bad) (bad) decl sub shr sub mov xchg sub mov inc movsb fdivr (bad) incl dec pop adc dec dec in jle jmp mov mov in mov jle inc test dec into es popf mov (bad) (bad) cmp test or jbe aas xor in (bad) push outsl test (bad) sbb jge pop nop stos and pop loopne daa repnz adc das in add cmp fldt cmpsb xlat (bad) pushl (bad) jno mov cmp rcl ja fucomip mov in fnop or push jp mov xchg pop pop cld (bad) (bad) pushl xchg push ds addl xor adc (bad) or cmpsl and lcall pop in test repz jae (bad) dec ljmp flds ret ljmp (bad) in pushf mov (bad) fbstp in stos lock int sub adc dec fsts mov add shrl sti into fdivrs mov push mov int scas jg (bad) (bad) (bad) decl or dec cmpl (bad) lcall (bad) fldl dec and push or sbb std xchg fcmove dec jg sar (bad) incl out (bad) dec cld mov and cmp mov adc ljmp xchg sub or push loop sub push sbb sub repnz in dec test mov fisubl xchg xchg push xchg mov push (bad) (bad) call cmp inc (bad) push dec and mov mov dec jne or jge mov pop add ret (bad) in outsl (bad) incl mov cmp inc pop adc cmpsb pop pop or and mov cld decl fidivrl mov adc scas dec fs cmp repz pusha inc and cli rcr xchg pop adc pop stos (bad) lcall xchg test sbb ss (bad) mov lahf mov sbb jmp (bad) jmp pop xchg xor xchg push pop std imulb aad mov adc push aaa ss sar call sub lods pusha adc stc ss add in mov adc ja cmc int outsl lods xchg fisttp mov adc std mov (bad) mov test pop fstp cmp imull (bad) (bad) decl pop int mov sbb mov pop inc ja xchg mov (bad) lcall repz jmp stc cli xor or cmp mov sti call inc mov out xchg mov out add xor xchg mov das call (bad) pushl mov jnp dec mov ds jge jge lods mov pop mov (bad) shrb arpl sbb (bad) jg ds cmc mov les addr16 add push arpl (bad) lcall cmpsl flds idivb mov in jne ss mov fldcw jp cmp imul imul adc sar xchg insb (bad) out xor cmpsb dec dec test pop sarl decb jne dec (bad) fwait xor (bad) (bad) jmp mov stos push repz orb xchg xor hlt push mov dec cmp mov fcoms out xor dec sub sbb jecxz mull lahf dec mov lods rcl fbld scas (bad) stos hlt jns pop (bad) fnstsw inc es sbb jmp fsubrp inc push mov (bad) jg jg jecxz adcl pop fisttp pop (bad) mov or cld pop xor lods adc adc (bad) incl (bad) hlt jnp sbb sahf stos mov adc inc jmp in dec cwtl test sbb in inc xchg mov test test icebp add loope (bad) and pop pushf pop sti adc mov iret ja flds (bad) (bad) incl (bad) xor mov repz fsubrs vpunpcklwd in push (bad) (bad) decl inc lods dec pop xor loope add in je arpl call jno mov lods mov in or inc sbb xchg test out jecxz (bad) (bad) ljmp hlt sub fwait dec xchg shlb inc jb les add rorl movl (bad) pushl fmull arpl inc aaa dec mov bound mov or mov cli out mov mov imul (bad) (bad) lcall jo jge sbb cmp push bound mov enter insb (bad) (bad) mov mov adc cmpsl mov sbb mov dec mov (bad) decl pop mov insl rcll push xchg roll into hlt fcomi out (bad) (bad) ljmp iret push mov dec out pop loop idivw dec ljmp cmp in (bad) call out into iret sub sub dec int3 dec lods test adc hlt jns repnz push mov andl push (bad) (bad) (bad) in cli cli dec pop in test push mov inc adc sbb xor das (bad) in push mov shrb call push (bad) xor negb xor cmp cmp insl sub (bad) decl mov pusha in mov sub inc inc leave mov xor jp call mov jmp int add mov mov pop ljmp dec adc dec add push test push (bad) (bad) inc (bad) int push mov mov shrb jo sbb aad (bad) (bad) (bad) pushl pop loop adc outsl je mov test cwtl dec insl xchg sub (bad) (bad) (bad) dec pop inc push mov test dec push lret pop jno aaa inc dec jno or sti in pop outsb iret subl (bad) (bad) (bad) push dec sbb dec jne mov dec imul in int pop (bad) (bad) (bad) ljmp mov leave push xchg popf jno outsb lahf and and mov mov and push scas icebp test flds inc dec xchg jmp inc xchg int3 inc dec xor jg dec mov je test push loope inc dec cltd jmp das nop mov ret cwtl loope xchg pop adc (bad) (bad) (bad) call lea mov mov mov inc loop adc jbe notl pop fsubrl icebp (bad) jmp pop add mov rcl outsb fildl popf or pop mov lcall fldt mov mov mov xchg inc sub outsl cmc rcrb mov stc sbb fucomip mov clc sbb mov icebp (bad) (bad) loope cs (bad) (bad) jg jecxz jl gs bound (bad) (bad) sub leave sub int3 mov dec adc (bad) (bad) jmp (bad) dec mov xor jp mov cmp (bad) and cmc push cs push push add loope loopne mov idiv pop inc (bad) mov jo ljmp push in test dec loop xchg bound add add dec inc sbb rolb call and (bad) pop into aam mov imulb (bad) (bad) (bad) fisttp (bad) inc and xchg pop pop mov jo inc inc jle dec xor bound adc (bad) in jae outsb divps or or insb lea outsl sub and add pop loope pop mov push pop (bad) push adc xchg or jno jg sbb inc adc leave adc dec cmp xchg cs aam pop xchg outsb imul adc sbb fdiv rcrl adc hlt gs rcll aad dec and paddq loop movsl rolb std push (bad) mov call mov mov das aad push dec cmp push out cmp std sbb jg idivl add add sub ret mov (bad) (bad) (bad) ficom inc push mov out into je enter addl das (bad) (bad) (bad) push add pop cli js iret test cmp push pop pop outsl cld cmp cmp or mull dec ljmp daa cmpsl jg jg out dec xor fstpl stc sub jbe (bad) (bad) jg fwait jle es cmpsb jne pop mov jbe out lcall xor pop fwait data16 (bad) ljmp sbb mov dec out dec mov pop ss pop fidivrl das mov cmp rcll and (bad) (bad) jg in daa rolb lahf mov pop les mov and adc loopne ror (bad) jg call jae aam xchg cmpl lret xchg push push popa rcrl movsl aaa (bad) push (bad) (bad) pushl (bad) shr mov and loope and jmp jae push (bad) incl add popa shl (bad) std mov mov loop (bad) decl pop mov (bad) or mov mov fs fildll hlt sbb (bad) fbld out pop movsl mov dec outsb in aam pop sub mov mov mov pop jno shr jbe cli mov (bad) incl mov jp and lahf inc pop cmp ror xchg insl mov imul jno test (bad) dec aam sbb (bad) (bad) ljmp mov ljmp test push fsubs movl cmp sub adc ret stos fcmove ret fwait pop xor out inc mov aaa repz dec cmp (bad) (bad) jg or and xchg arpl adc push cmp mov js pop loopw loop fwait or mov lret (bad) incl add push sub ljmp mov pop dec daa outsb and std (bad) push cmc adc mov jecxz rolb pop xchg fistp push mov ret aad (bad) imul (bad) cli repnz adc sbb loop or (bad) (bad) (bad) (bad) fdivrs fs mov pop aam clc rcl push fidiv int xorb fiadd (bad) push mov inc sbb cmp test shr inc dec xor add add hlt jle sub inc (bad) lcall mov and sahf pop xchg out cli xchg xchg pop jl out cmp and dec dec lds jl xchg mov in arpl lock inc xchg sub sub inc push loop repz (bad) incl dec ss fcmovnb sbb loopne arpl aam xor xor lods decl mov or xchg pop clc (bad) (bad) sub adc inc mov imul (bad) (bad) mov lods aas sub or (bad) mov js dec add add scas jb je cmp das cmp cs (bad) (bad) pushl cs das push outsl insl insb popa das insl outsl fs gs js outsb je imul or pop sub inc cmpsb mov push dec push push ret sub dec scas push das xor or add sub add sub lods aam add outsb jb sub inc xor or out mov inc outsb cmp jp insb xchg mov cs pop xor cmp push add jne dec insb in inc sbb or fcmovnu push jb cmp and sub inc mov mov fnstsw xor xor dec fstpt push xor push or and fildll xor inc arpl mov loope dec popa outsb jno cmp mov std push jne sub cmp pop xor push scas je and dec or imul jnp popa pop adc adc mov inc cmp jo imul imul das sub scas lock or push dec sub xchg iret cmp je or aaa sub mov test add and inc mov jb and (bad) inc lock dec inc inc js dec xor cmp ret xor add add cmp mov and in jmp and and push and ja sub and push js dec dec push sub dec jbe sti xor pop jo lea push and in inc jbe inc jae ds cmp or mov gs sub xor lds sub cmp sub sub (bad) push dec push lea sub add and adc dec int3 test add adc das arpl jo add imul adc adc add in add jo or add push (bad) data16 aas add mov pop jae popa pop arpl int push decl fs imul pop push jbe xor and cmp leave mov dec scas ja adc pusha frstor arpl pop insl fdecstp xchg and pop add dec ss jno jne add daa imul (bad) cmc fs addr16 out mov or inc outsb cmp sub mov add fiaddl scas scas scas scas or ret mov push xchg dec jbe hlt adc jb mov add push push test outsl std adc ja push out mov push or (bad) hlt push xor xchg fs xor fdivrl jmp (bad) (bad) (bad) (bad) xchg sub mov sub mov sbb dec jno repz (bad) (bad) incl test ficompl jmp (bad) mov hlt movl imul std in test mov add insb push mov psubd or ljmp adc in pusha aad jno mov aam dec std test ljmp hlt or cli test xor (bad) leave mov lods jecxz fcoms (bad) pushl jne fild or shrl cmp ficom push xlat dec std (bad) (bad) jmp mov and mov cltd xchg mov mov or pop loop pop aam or dec push pop stos sbb nop inc fdivl jno add lcall mov mov movsl in lahf xor mov js stc (bad) call xchg sbb push sub insb fs icebp inc xchg add out push imul insb sbb xor dec call cli das lahf repnz xchg push insb jnp add hlt or (bad) fnstenv gs jmp mov cld fistp ficoml gs aam pop popa mov inc ret sub (bad) mov aam movsl fisttp xchg fdivr (bad) (bad) mov sti hlt (bad) shrl imul mov sarb add in decl mov jb jno push stos inc add ljmp std call adc mov and test or mov popa into push stc fdivp mov leave fldcw and (bad) pop cmp mov (bad) (bad) ljmp and shlb mov lcall mov cmp ljmp rcrb adcl jae or test fs ds or or push in (bad) call daa scas cmpsb mov pop jge xchg (bad) shlb add inc std decl push (bad) (bad) lret mov sbb push imul aam loopne incl adc pop jp adc dec ffree (bad) ljmp out mov aad mov call xchg shll mov repnz addr16 fldl mov dec ss fisubrl or hlt dec sbb scas cmp ss jp ret out pusha fist pop cli (bad) jmp out mov jns imul andl shrb loop add incl ja int3 add mov das es (bad) ljmp cmp mov pop mov add mov cmpsl call ret (bad) mov sahf fldcw das std lcall ret es pushf mov add ss mov test jb add jp loop (bad) (bad) (bad) ljmp mov cmp mov fwait mov xchg or out fdivrl fisttpl aam roll clc jg loop mov push int mov ja outsl ja (bad) fnop inc mov out jge push dec cmp pop or adc sahf gs scas (bad) clc lcall icebp sar imul push js mov push addl jg inc mov cmp cmpsl notl dec fildl dec push scas fcompl fldenv fild (bad) jmp mov fidivr mov jmp repnz dec std (bad) dec xor mov add push xlat int push ficom and (bad) (bad) ljmp jp mov dec popa les sbb xchg sub aaa mov or sbb add sub fwait incl mov and push pop in outsl pop jbe insb and pop data16 add lock in ss add sub inc inc and push add add push push leave push xor push inc push xchg mov xchg push push push push leave test stos stos sub push push push xchg mov mov push jl or mov add and jnp (bad) adc push add (bad) push mov outsl insb push mov dec push add mov mov sub add or data16 inc jp push inc or fmuls push rclb push mov add sbb adc inc outsl adc adc xchg and mov sti pop mov shrl dec gs fldl imul notb adc jae jo lods decb je add sbb js cs or arpl or or or fs push outsl insl jnp insl and push inc dec bound push inc mov ret outsl jb push and test cmp bound inc jne jb jle fs or push jmp cmovge push push or jbe add adc push jmp call lds push and mov adc add test fstpt (bad) imul inc push or push xchg insb jnp dec popa mov ss lock cmpsb leave mull dec outsl jne and or je sub or push imul gs xor sbb popa mov jg push fsubrl inc orb mov adc jae or pop pop sahf ret lret push test aaa sahf adc mov gs leave xchg adc (bad) dec js mov xor nopl push xchg sti je push outsb ja push jae lods rcr sbbb insb scas adc adc push add popa jne gs popa dec mov mov test and and push mov (bad) mov daa or inc js or pop push mov outsb or outsl xchg or mov add push dec sub cmp insb push sub inc outsb lret or pop imul nop sub mov (bad) pop out fbld jno test mov inc and and mov ror stos mov inc fs pop inc jno sbb mov fcom mov dec xchg push fdivl inc sbb and xor insb dec xchg stc xor adc and push ret (bad) xor jo mov mov push and data16 push stos push adc sub js test pop jb (bad) inc jae movsb adc sbb xor lret and gs outsl inc gs push loope mov daa mov popa insl mov ret out sbb and or inc into loope pop das xorl fs test dec lods xor add push lds popa addr16 jo xor adc outsl inc insb cmp rolb mov sub insl outsb je int3 xchg mov cmp sub jno insb jae push mov or push popa and (bad) lahf into rcrl popa jle stos xchg bound push insb xor and sub ds sub je xor jae sbb push cmp ret adc and adc dec stos mov mov pop outsl jecxz mov inc rol sbb xchg or pop or (bad) imul das push ss add je jecxz push inc fsubrl add iret and jno int push sahf sbb js adc lods lock mov and loope (bad) icebp sbb arpl cmp jnp fcoms addr16 data16 push push sahf inc js out in xchg lahf dec gs loope sbb push push popa adc rcrb aaa int3 and pop das cmp test sbb adc ss sub fs xor (bad) sub test push sbb xchg lea pop inc and push sub loop mov add rcll insl xor xchg dec je mov sbb sbb inc pop nop mov adc lods mov adc mov cmp adc dec pop and aaa mov push je dec dec inc in push movsb add push repnz inc orb mov and or pop out xor add insb adc outsl sub (bad) insl adc faddl push cmp adc xchg add mov mov test imul push outsl cli add and dec cwtl inc shl pop or and push dec aam lea loopne gs adc jmp cwtl imul sbb fdivs aam dec sbb fisub jb popa inc mov test je add mov mov test inc imul pusha imul mov scas and arpl sahf lds (bad) je lock or jne sbb dec int3 mov sub lret test mov or fidivl insb adc and ret sub movsl xor xor adc inc jge arpl cmp mov sbb aaa outsb add xor jo adc adc or adc add jmp add or add (bad) push mov add pop xchg add jo jnp push sub ljmp push push push mov push adc push mov add push dec add pushf mov rorb add add outsl subb mov mov pop pop adc nop add or inc rclb add push or mov add int sysret mov test cmp or outsb aaa pop add xchg and add sbb cmpsl xchg dec fadds and and xor jg aaa je cmp or jb adc fisttpl jmp popa sti jo fldt es incb pop ret mov or stos add jmp fildll push mov loop lret add add add add add add add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa jmp lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 